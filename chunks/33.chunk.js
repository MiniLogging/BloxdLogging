"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[33],{13450:(q,f,j)=>{j.r(f),j.d(f,{_TGATextureLoader:()=>Q});var d=j(11005);function g(q){let f=0;return{id_length:q[f++],colormap_type:q[f++],image_type:q[f++],colormap_index:q[f++]|q[f++]<<8,colormap_length:q[f++]|q[f++]<<8,colormap_size:q[f++],origin:[q[f++]|q[f++]<<8,q[f++]|q[f++]<<8],width:q[f++]|q[f++]<<8,height:q[f++]|q[f++]<<8,pixel_size:q[f++],flags:q[f++]}}function h(q,f){if(f.length<19)return void d.e.Error("Unable to load TGA file - Not enough data to contain header");let j=18;const h=g(f);if(h.id_length+j>f.length)return void d.e.Error("Unable to load TGA file - Not enough data");j+=h.id_length;let Q,H=!1,r=!1,u=!1;switch(h.image_type){case 9:H=!0;case 1:r=!0;break;case 10:H=!0;case 2:break;case 11:H=!0;case 3:u=!0}const X=h.pixel_size>>3,z=h.width*h.height*X;let B,D,i,t,O,N,w;if(r&&(B=f.subarray(j,j+=h.colormap_length*(h.colormap_size>>3))),H){let q,d,g;Q=new Uint8Array(z);let h=0;const L=new Uint8Array(X);for(;j<z&&h<z;)if(q=f[j++],d=1+(127&q),128&q){for(g=0;g<X;++g)L[g]=f[j++];for(g=0;g<d;++g)Q.set(L,h+g*X);h+=X*d}else{for(d*=X,g=0;g<d;++g)Q[h+g]=f[j++];h+=d}}else Q=f.subarray(j,j+=r?h.width*h.height:z);switch((48&h.flags)>>4){default:case 2:D=0,t=1,w=h.width,i=0,O=1,N=h.height;break;case 0:D=0,t=1,w=h.width,i=h.height-1,O=-1,N=-1;break;case 3:D=h.width-1,t=-1,w=-1,i=0,O=1,N=h.height;break;case 1:D=h.width-1,t=-1,w=-1,i=h.height-1,O=-1,N=-1}const E="_getImageData"+(u?"Grey":"")+h.pixel_size+"bits",s=L[E](h,B,Q,i,O,N,D,t,w);q.getEngine()._uploadDataToTextureDirectly(q,s)}const L={GetTGAHeader:g,UploadContent:h,_getImageData8bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=f,X=q.width,z=q.height;let B,D,i,t=0;const O=new Uint8Array(X*z*4);for(i=d;i!==h;i+=g)for(D=L;D!==H;D+=Q,t++)B=r[t],O[4*(D+X*i)+3]=255,O[4*(D+X*i)+2]=u[3*B+0],O[4*(D+X*i)+1]=u[3*B+1],O[4*(D+X*i)+0]=u[3*B+2];return O},_getImageData16bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=q.width,X=q.height;let z,B,D,i=0;const t=new Uint8Array(u*X*4);for(D=d;D!==h;D+=g)for(B=L;B!==H;B+=Q,i+=2){z=r[i+0]+(r[i+1]<<8);const q=255*((31744&z)>>10)/31|0,f=255*((992&z)>>5)/31|0,j=255*(31&z)/31|0;t[4*(B+u*D)+0]=q,t[4*(B+u*D)+1]=f,t[4*(B+u*D)+2]=j,t[4*(B+u*D)+3]=32768&z?0:255}return t},_getImageData24bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=q.width,X=q.height;let z,B,D=0;const i=new Uint8Array(u*X*4);for(B=d;B!==h;B+=g)for(z=L;z!==H;z+=Q,D+=3)i[4*(z+u*B)+3]=255,i[4*(z+u*B)+2]=r[D+0],i[4*(z+u*B)+1]=r[D+1],i[4*(z+u*B)+0]=r[D+2];return i},_getImageData32bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=q.width,X=q.height;let z,B,D=0;const i=new Uint8Array(u*X*4);for(B=d;B!==h;B+=g)for(z=L;z!==H;z+=Q,D+=4)i[4*(z+u*B)+2]=r[D+0],i[4*(z+u*B)+1]=r[D+1],i[4*(z+u*B)+0]=r[D+2],i[4*(z+u*B)+3]=r[D+3];return i},_getImageDataGrey8bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=q.width,X=q.height;let z,B,D,i=0;const t=new Uint8Array(u*X*4);for(D=d;D!==h;D+=g)for(B=L;B!==H;B+=Q,i++)z=r[i],t[4*(B+u*D)+0]=z,t[4*(B+u*D)+1]=z,t[4*(B+u*D)+2]=z,t[4*(B+u*D)+3]=255;return t},_getImageDataGrey16bits:function(q,f,j,d,g,h,L,Q,H){const r=j,u=q.width,X=q.height;let z,B,D=0;const i=new Uint8Array(u*X*4);for(B=d;B!==h;B+=g)for(z=L;z!==H;z+=Q,D+=2)i[4*(z+u*B)+0]=r[D+0],i[4*(z+u*B)+1]=r[D+0],i[4*(z+u*B)+2]=r[D+0],i[4*(z+u*B)+3]=r[D+1];return i}};class Q{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(q,f,j){const d=new Uint8Array(q.buffer,q.byteOffset,q.byteLength),L=g(d);j(L.width,L.height,f.generateMipMaps,!1,(()=>{h(f,d)}))}}}}]);