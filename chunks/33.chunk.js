"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[33],{13509:(u,F,z)=>{z.r(F),z.d(F,{postprocessVertexShaderWGSL:()=>c});var p=z(622);const b="postprocessVertexShader",R="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";p.b.ShadersStoreWGSL[b]||(p.b.ShadersStoreWGSL[b]=R);const c={name:b,shader:R}}}]);