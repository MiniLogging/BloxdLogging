"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[33],{13659:(w,p,e)=>{e.r(p),e.d(p,{_TGATextureLoader:()=>q});var r=e(11081);function I(w){let p=0;return{id_length:w[p++],colormap_type:w[p++],image_type:w[p++],colormap_index:w[p++]|w[p++]<<8,colormap_length:w[p++]|w[p++]<<8,colormap_size:w[p++],origin:[w[p++]|w[p++]<<8,w[p++]|w[p++]<<8],width:w[p++]|w[p++]<<8,height:w[p++]|w[p++]<<8,pixel_size:w[p++],flags:w[p++]}}function d(w,p){if(p.length<19)return void r.c.Error("Unable to load TGA file - Not enough data to contain header");let e=18;const d=I(p);if(d.id_length+e>p.length)return void r.c.Error("Unable to load TGA file - Not enough data");e+=d.id_length;let q,E=!1,j=!1,X=!1;switch(d.image_type){case 9:E=!0;case 1:j=!0;break;case 10:E=!0;case 2:break;case 11:E=!0;case 3:X=!0}const k=d.pixel_size>>3,m=d.width*d.height*k;let J,K,y,c,s,O,a;if(j&&(J=p.subarray(e,e+=d.colormap_length*(d.colormap_size>>3))),E){let w,r,I;q=new Uint8Array(m);let d=0;const f=new Uint8Array(k);for(;e<m&&d<m;)if(w=p[e++],r=1+(127&w),128&w){for(I=0;I<k;++I)f[I]=p[e++];for(I=0;I<r;++I)q.set(f,d+I*k);d+=k*r}else{for(r*=k,I=0;I<r;++I)q[d+I]=p[e++];d+=r}}else q=p.subarray(e,e+=j?d.width*d.height:m);switch((48&d.flags)>>4){default:case 2:K=0,c=1,a=d.width,y=0,s=1,O=d.height;break;case 0:K=0,c=1,a=d.width,y=d.height-1,s=-1,O=-1;break;case 3:K=d.width-1,c=-1,a=-1,y=0,s=1,O=d.height;break;case 1:K=d.width-1,c=-1,a=-1,y=d.height-1,s=-1,O=-1}const A="_getImageData"+(X?"Grey":"")+d.pixel_size+"bits",z=f[A](d,J,q,y,s,O,K,c,a);w.getEngine()._uploadDataToTextureDirectly(w,z)}const f={GetTGAHeader:I,UploadContent:d,_getImageData8bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=p,k=w.width,m=w.height;let J,K,y,c=0;const s=new Uint8Array(k*m*4);for(y=r;y!==d;y+=I)for(K=f;K!==E;K+=q,c++)J=j[c],s[4*(K+k*y)+3]=255,s[4*(K+k*y)+2]=X[3*J+0],s[4*(K+k*y)+1]=X[3*J+1],s[4*(K+k*y)+0]=X[3*J+2];return s},_getImageData16bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=w.width,k=w.height;let m,J,K,y=0;const c=new Uint8Array(X*k*4);for(K=r;K!==d;K+=I)for(J=f;J!==E;J+=q,y+=2){m=j[y+0]+(j[y+1]<<8);const w=255*((31744&m)>>10)/31|0,p=255*((992&m)>>5)/31|0,e=255*(31&m)/31|0;c[4*(J+X*K)+0]=w,c[4*(J+X*K)+1]=p,c[4*(J+X*K)+2]=e,c[4*(J+X*K)+3]=32768&m?0:255}return c},_getImageData24bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=w.width,k=w.height;let m,J,K=0;const y=new Uint8Array(X*k*4);for(J=r;J!==d;J+=I)for(m=f;m!==E;m+=q,K+=3)y[4*(m+X*J)+3]=255,y[4*(m+X*J)+2]=j[K+0],y[4*(m+X*J)+1]=j[K+1],y[4*(m+X*J)+0]=j[K+2];return y},_getImageData32bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=w.width,k=w.height;let m,J,K=0;const y=new Uint8Array(X*k*4);for(J=r;J!==d;J+=I)for(m=f;m!==E;m+=q,K+=4)y[4*(m+X*J)+2]=j[K+0],y[4*(m+X*J)+1]=j[K+1],y[4*(m+X*J)+0]=j[K+2],y[4*(m+X*J)+3]=j[K+3];return y},_getImageDataGrey8bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=w.width,k=w.height;let m,J,K,y=0;const c=new Uint8Array(X*k*4);for(K=r;K!==d;K+=I)for(J=f;J!==E;J+=q,y++)m=j[y],c[4*(J+X*K)+0]=m,c[4*(J+X*K)+1]=m,c[4*(J+X*K)+2]=m,c[4*(J+X*K)+3]=255;return c},_getImageDataGrey16bits:function(w,p,e,r,I,d,f,q,E){const j=e,X=w.width,k=w.height;let m,J,K=0;const y=new Uint8Array(X*k*4);for(J=r;J!==d;J+=I)for(m=f;m!==E;m+=q,K+=2)y[4*(m+X*J)+0]=j[K+0],y[4*(m+X*J)+1]=j[K+0],y[4*(m+X*J)+2]=j[K+0],y[4*(m+X*J)+3]=j[K+1];return y}};class q{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(w,p,e){const r=new Uint8Array(w.buffer,w.byteOffset,w.byteLength),f=I(r);e(f.width,f.height,p.generateMipMaps,!1,(()=>{d(p,r)}))}}}}]);