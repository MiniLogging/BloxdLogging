"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[33],{13070:(W,F,c)=>{c.r(F),c.d(F,{postprocessVertexShaderWGSL:()=>w});var T=c(594);const Y="postprocessVertexShader",Z="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";T.c.ShadersStoreWGSL[Y]||(T.c.ShadersStoreWGSL[Y]=Z);const w={name:Y,shader:Z}}}]);