"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[33],{13390:(P,Q,O)=>{O.r(Q),O.d(Q,{postprocessVertexShaderWGSL:()=>m});var b=O(651);const F="postprocessVertexShader",g="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";b.d.ShadersStoreWGSL[F]||(b.d.ShadersStoreWGSL[F]=g);const m={name:F,shader:g}}}]);