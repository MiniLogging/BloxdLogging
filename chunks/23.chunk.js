/*! For license information please see je6g9o.23.85396d27.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[23],{11885:(v,d,Q)=>{Q.r(d),Q.d(d,{getAnalytics:()=>Uv,getGoogleAnalyticsClientId:()=>Ev,initializeAnalytics:()=>cv,isSupported:()=>wv,logEvent:()=>Qd,setAnalyticsCollectionEnabled:()=>vd,setConsent:()=>nd,setCurrentScreen:()=>Gv,setDefaultEventParameters:()=>dd,setUserId:()=>Nv,setUserProperties:()=>lv,settings:()=>av});var n=Q(11863),T=Q(11879),L=Q(11873),e=Q(11870);let F,r;const C=new WeakMap,u=new WeakMap,y=new WeakMap,z=new WeakMap,B=new WeakMap;let X={get(v,d,Q){if(v instanceof IDBTransaction){if("done"===d)return u.get(v);if("objectStoreNames"===d)return v.objectStoreNames||y.get(v);if("store"===d)return Q.objectStoreNames[1]?void 0:Q.objectStore(Q.objectStoreNames[0])}return h(v[d])},set:(v,d,Q)=>(v[d]=Q,!0),has:(v,d)=>v instanceof IDBTransaction&&("done"===d||"store"===d)||d in v};function m(v){return v!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(r||(r=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(v)?function(){for(var d=arguments.length,Q=new Array(d),n=0;n<d;n++)Q[n]=arguments[n];return v.apply(S(this),Q),h(C.get(this))}:function(){for(var d=arguments.length,Q=new Array(d),n=0;n<d;n++)Q[n]=arguments[n];return h(v.apply(S(this),Q))}:function(d){for(var Q=arguments.length,n=new Array(Q>1?Q-1:0),T=1;T<Q;T++)n[T-1]=arguments[T];const L=v.call(S(this),d,...n);return y.set(L,d.sort?d.sort():[d]),h(L)}}function V(v){return"function"===typeof v?m(v):(v instanceof IDBTransaction&&function(v){if(u.has(v))return;const d=new Promise(((d,Q)=>{const n=()=>{v.removeEventListener("complete",T),v.removeEventListener("error",L),v.removeEventListener("abort",L)},T=()=>{d(),n()},L=()=>{Q(v.error||new DOMException("AbortError","AbortError")),n()};v.addEventListener("complete",T),v.addEventListener("error",L),v.addEventListener("abort",L)}));u.set(v,d)}(v),d=v,(F||(F=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((v=>d instanceof v))?new Proxy(v,X):v);var d}function h(v){if(v instanceof IDBRequest)return function(v){const d=new Promise(((d,Q)=>{const n=()=>{v.removeEventListener("success",T),v.removeEventListener("error",L)},T=()=>{d(h(v.result)),n()},L=()=>{Q(v.error),n()};v.addEventListener("success",T),v.addEventListener("error",L)}));return d.then((d=>{d instanceof IDBCursor&&C.set(d,v)})).catch((()=>{})),B.set(d,v),d}(v);if(z.has(v))return z.get(v);const d=V(v);return d!==v&&(z.set(v,d),B.set(d,v)),d}const S=v=>B.get(v);const A=["get","getKey","getAll","getAllKeys","count"],f=["put","add","delete","clear"],P=new Map;function O(v,d){if(!(v instanceof IDBDatabase)||d in v||"string"!==typeof d)return;if(P.get(d))return P.get(d);const Q=d.replace(/FromIndex$/,""),n=d!==Q,T=f.includes(Q);if(!(Q in(n?IDBIndex:IDBObjectStore).prototype)||!T&&!A.includes(Q))return;const L=async function(v){const d=this.transaction(v,T?"readwrite":"readonly");let L=d.store;for(var e=arguments.length,F=new Array(e>1?e-1:0),r=1;r<e;r++)F[r-1]=arguments[r];return n&&(L=L.index(F.shift())),(await Promise.all([L[Q](...F),T&&d.done]))[0]};return P.set(d,L),L}X=(v=>({...v,get:(d,Q,n)=>O(d,Q)||v.get(d,Q,n),has:(d,Q)=>!!O(d,Q)||v.has(d,Q)}))(X);const J="@firebase/installations",K="0.6.4",o=1e4,g=`w:${K}`,R="FIS_v2",M=36e5,Y={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},D=new L.d("installations","Installations",Y);function i(v){return v instanceof L.e&&v.code.includes("request-failed")}function Z(v){let{projectId:d}=v;return`https://firebaseinstallations.googleapis.com/v1/projects/${d}/installations`}function j(v){return{token:v.token,requestStatus:2,expiresIn:(d=v.expiresIn,Number(d.replace("s","000"))),creationTime:Date.now()};var d}async function x(v,d){const Q=(await d.json()).error;return D.create("request-failed",{requestName:v,serverCode:Q.code,serverMessage:Q.message,serverStatus:Q.status})}function k(v){let{apiKey:d}=v;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":d})}function t(v,d){let{refreshToken:Q}=d;const n=k(v);return n.append("Authorization",function(v){return`${R} ${v}`}(Q)),n}async function p(v){const d=await v();return d.status>=500&&d.status<600?v():d}function W(v){return new Promise((d=>{setTimeout(d,v)}))}const q=/^[cdef][\w-]{21}$/;function b(){try{const v=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(v),v[0]=112+v[0]%16;const d=function(v){const d=(Q=v,btoa(String.fromCharCode(...Q)).replace(/\+/g,"-").replace(/\//g,"_"));var Q;return d.substr(0,22)}(v);return q.test(d)?d:""}catch(v){return""}}function H(v){return`${v.appName}!${v.appId}`}const s=new Map;function a(v,d){const Q=H(v);I(Q,d),function(v,d){const Q=c();Q&&Q.postMessage({key:v,fid:d});w()}(Q,d)}function I(v,d){const Q=s.get(v);if(Q)for(const n of Q)n(d)}let U=null;function c(){return!U&&"BroadcastChannel"in self&&(U=new BroadcastChannel("[Firebase] FID Change"),U.onmessage=v=>{I(v.data.key,v.data.fid)}),U}function w(){0===s.size&&U&&(U.close(),U=null)}const G="firebase-installations-store";let E=null;function N(){return E||(E=function(v,d){let{blocked:Q,upgrade:n,blocking:T,terminated:L}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const e=indexedDB.open(v,d),F=h(e);return n&&e.addEventListener("upgradeneeded",(v=>{n(h(e.result),v.oldVersion,v.newVersion,h(e.transaction))})),Q&&e.addEventListener("blocked",(()=>Q())),F.then((v=>{L&&v.addEventListener("close",(()=>L())),T&&v.addEventListener("versionchange",(()=>T()))})).catch((()=>{})),F}("firebase-installations-database",1,{upgrade:(v,d)=>{if(0===d)v.createObjectStore(G)}})),E}async function l(v,d){const Q=H(v),n=(await N()).transaction(G,"readwrite"),T=n.objectStore(G),L=await T.get(Q);return await T.put(d,Q),await n.done,L&&L.fid===d.fid||a(v,d.fid),d}async function vv(v){const d=H(v),Q=(await N()).transaction(G,"readwrite");await Q.objectStore(G).delete(d),await Q.done}async function dv(v,d){const Q=H(v),n=(await N()).transaction(G,"readwrite"),T=n.objectStore(G),L=await T.get(Q),e=d(L);return void 0===e?await T.delete(Q):await T.put(e,Q),await n.done,!e||L&&L.fid===e.fid||a(v,e.fid),e}async function Qv(v){let d;const Q=await dv(v.appConfig,(Q=>{const n=function(v){const d=v||{fid:b(),registrationStatus:0};return Lv(d)}(Q),T=function(v,d){if(0===d.registrationStatus){if(!navigator.onLine){return{installationEntry:d,registrationPromise:Promise.reject(D.create("app-offline"))}}const Q={fid:d.fid,registrationStatus:1,registrationTime:Date.now()},n=async function(v,d){try{const Q=await async function(v,d){let{appConfig:Q,heartbeatServiceProvider:n}=v,{fid:T}=d;const L=Z(Q),e=k(Q),F=n.getImmediate({optional:!0});if(F){const v=await F.getHeartbeatsHeader();v&&e.append("x-firebase-client",v)}const r={fid:T,authVersion:R,appId:Q.appId,sdkVersion:g},C={method:"POST",headers:e,body:JSON.stringify(r)},u=await p((()=>fetch(L,C)));if(u.ok){const v=await u.json();return{fid:v.fid||T,registrationStatus:2,refreshToken:v.refreshToken,authToken:j(v.authToken)}}throw await x("Create Installation",u)}(v,d);return l(v.appConfig,Q)}catch(Q){throw i(Q)&&409===Q.customData.serverCode?await vv(v.appConfig):await l(v.appConfig,{fid:d.fid,registrationStatus:0}),Q}}(v,Q);return{installationEntry:Q,registrationPromise:n}}return 1===d.registrationStatus?{installationEntry:d,registrationPromise:nv(v)}:{installationEntry:d}}(v,n);return d=T.registrationPromise,T.installationEntry}));return""===Q.fid?{installationEntry:await d}:{installationEntry:Q,registrationPromise:d}}async function nv(v){let d=await Tv(v.appConfig);for(;1===d.registrationStatus;)await W(100),d=await Tv(v.appConfig);if(0===d.registrationStatus){const{installationEntry:d,registrationPromise:Q}=await Qv(v);return Q||d}return d}function Tv(v){return dv(v,(v=>{if(!v)throw D.create("installation-not-found");return Lv(v)}))}function Lv(v){return 1===(d=v).registrationStatus&&d.registrationTime+o<Date.now()?{fid:v.fid,registrationStatus:0}:v;var d}async function ev(v,d){let{appConfig:Q,heartbeatServiceProvider:n}=v;const T=function(v,d){let{fid:Q}=d;return`${Z(v)}/${Q}/authTokens:generate`}(Q,d),L=t(Q,d),e=n.getImmediate({optional:!0});if(e){const v=await e.getHeartbeatsHeader();v&&L.append("x-firebase-client",v)}const F={installation:{sdkVersion:g,appId:Q.appId}},r={method:"POST",headers:L,body:JSON.stringify(F)},C=await p((()=>fetch(T,r)));if(C.ok){return j(await C.json())}throw await x("Generate Auth Token",C)}async function Fv(v){let d,Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=await dv(v.appConfig,(n=>{if(!Cv(n))throw D.create("not-registered");const T=n.authToken;if(!Q&&function(v){return 2===v.requestStatus&&!function(v){const d=Date.now();return d<v.creationTime||v.creationTime+v.expiresIn<d+M}(v)}(T))return n;if(1===T.requestStatus)return d=async function(v,d){let Q=await rv(v.appConfig);for(;1===Q.authToken.requestStatus;)await W(100),Q=await rv(v.appConfig);const n=Q.authToken;return 0===n.requestStatus?Fv(v,d):n}(v,Q),n;{if(!navigator.onLine)throw D.create("app-offline");const Q=function(v){const d={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},v),{authToken:d})}(n);return d=async function(v,d){try{const Q=await ev(v,d),n=Object.assign(Object.assign({},d),{authToken:Q});return await l(v.appConfig,n),Q}catch(Q){if(!i(Q)||401!==Q.customData.serverCode&&404!==Q.customData.serverCode){const Q=Object.assign(Object.assign({},d),{authToken:{requestStatus:0}});await l(v.appConfig,Q)}else await vv(v.appConfig);throw Q}}(v,Q),Q}}));return d?await d:n.authToken}function rv(v){return dv(v,(v=>{if(!Cv(v))throw D.create("not-registered");const d=v.authToken;return 1===(Q=d).requestStatus&&Q.requestTime+o<Date.now()?Object.assign(Object.assign({},v),{authToken:{requestStatus:0}}):v;var Q}))}function Cv(v){return void 0!==v&&2===v.registrationStatus}async function uv(v){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=v;await async function(v){const{registrationPromise:d}=await Qv(v);d&&await d}(Q);return(await Fv(Q,d)).token}function yv(v){return D.create("missing-app-config-values",{valueName:v})}const zv="installations",Bv=v=>{const d=v.getProvider("app").getImmediate(),Q=function(v){if(!v||!v.options)throw yv("App Configuration");if(!v.name)throw yv("App Name");const d=["projectId","apiKey","appId"];for(const Q of d)if(!v.options[Q])throw yv(Q);return{appName:v.name,projectId:v.options.projectId,apiKey:v.options.apiKey,appId:v.options.appId}}(d);return{app:d,appConfig:Q,heartbeatServiceProvider:(0,n.x)(d,"heartbeat"),_delete:()=>Promise.resolve()}},Xv=v=>{const d=v.getProvider("app").getImmediate(),Q=(0,n.x)(d,zv).getImmediate();return{getId:()=>async function(v){const d=v,{installationEntry:Q,registrationPromise:n}=await Qv(d);return n?n.catch(console.error):Fv(d).catch(console.error),Q.fid}(Q),getToken:v=>uv(Q,v)}};(0,n.B)(new e.h(zv,Bv,"PUBLIC")),(0,n.B)(new e.h("installations-internal",Xv,"PRIVATE")),(0,n.S)(J,K),(0,n.S)(J,K,"esm2017");const mv="analytics",Vv="https://www.googletagmanager.com/gtag/js",hv=new T.f("@firebase/analytics"),Sv={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},Av=new L.d("analytics","Analytics",Sv);function fv(v){if(!v.startsWith(Vv)){const d=Av.create("invalid-gtag-resource",{gtagURL:v});return hv.warn(d.message),""}return v}function Pv(v){return Promise.all(v.map((v=>v.catch((v=>v)))))}function Ov(v,d){const Q=function(v,d){let Q;return window.trustedTypes&&(Q=window.trustedTypes.createPolicy(v,d)),Q}("firebase-js-sdk-policy",{createScriptURL:fv}),n=document.createElement("script"),T=`${Vv}?l=${v}&id=${d}`;n.src=Q?null===Q||void 0===Q?void 0:Q.createScriptURL(T):T,n.async=!0,document.head.appendChild(n)}function Jv(v,d,Q,n){return async function(T){try{for(var L=arguments.length,e=new Array(L>1?L-1:0),F=1;F<L;F++)e[F-1]=arguments[F];if("event"===T){const[n,T]=e;await async function(v,d,Q,n,T){try{let L=[];if(T&&T.send_to){let v=T.send_to;Array.isArray(v)||(v=[v]);const n=await Pv(Q);for(const Q of v){const v=n.find((v=>v.measurementId===Q)),T=v&&d[v.appId];if(!T){L=[];break}L.push(T)}}0===L.length&&(L=Object.values(d)),await Promise.all(L),v("event",n,T||{})}catch(L){hv.error(L)}}(v,d,Q,n,T)}else if("config"===T){const[T,L]=e;await async function(v,d,Q,n,T,L){const e=n[T];try{if(e)await d[e];else{const v=(await Pv(Q)).find((v=>v.measurementId===T));v&&await d[v.appId]}}catch(F){hv.error(F)}v("config",T,L)}(v,d,Q,n,T,L)}else if("consent"===T){const[d]=e;v("consent","update",d)}else if("get"===T){const[d,Q,n]=e;v("get",d,Q,n)}else if("set"===T){const[d]=e;v("set",d)}else v(T,...e)}catch(r){hv.error(r)}}}const Kv=new class{constructor(){let v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=v,this.intervalMillis=d}getThrottleMetadata(v){return this.throttleMetadata[v]}setThrottleMetadata(v,d){this.throttleMetadata[v]=d}deleteThrottleMetadata(v){delete this.throttleMetadata[v]}};function ov(v){return new Headers({Accept:"application/json","x-goog-api-key":v})}async function gv(v){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Kv,Q=arguments.length>2?arguments[2]:void 0;const{appId:n,apiKey:T,measurementId:L}=v.options;if(!n)throw Av.create("no-app-id");if(!T){if(L)return{measurementId:L,appId:n};throw Av.create("no-api-key")}const e=d.getThrottleMetadata(n)||{backoffCount:0,throttleEndTimeMillis:Date.now()},F=new Mv;return setTimeout((async()=>{F.abort()}),void 0!==Q?Q:6e4),Rv({appId:n,apiKey:T,measurementId:L},e,F,d)}async function Rv(v,d,Q){let{throttleEndTimeMillis:n,backoffCount:T}=d,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kv;var F;const{appId:r,measurementId:C}=v;try{await function(v,d){return new Promise(((Q,n)=>{const T=Math.max(d-Date.now(),0),L=setTimeout(Q,T);v.addEventListener((()=>{clearTimeout(L),n(Av.create("fetch-throttle",{throttleEndTimeMillis:d}))}))}))}(Q,n)}catch(u){if(C)return hv.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${C} provided in the "measurementId" field in the local Firebase config. [${null===u||void 0===u?void 0:u.message}]`),{appId:r,measurementId:C};throw u}try{const d=await async function(v){var d;const{appId:Q,apiKey:n}=v,T={method:"GET",headers:ov(n)},L="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",Q),e=await fetch(L,T);if(200!==e.status&&304!==e.status){let v="";try{const Q=await e.json();(null===(d=Q.error)||void 0===d?void 0:d.message)&&(v=Q.error.message)}catch(F){}throw Av.create("config-fetch-failed",{httpStatus:e.status,responseMessage:v})}return e.json()}(v);return e.deleteThrottleMetadata(r),d}catch(u){const d=u;if(!function(v){if(!(v instanceof L.e)||!v.customData)return!1;const d=Number(v.customData.httpStatus);return 429===d||500===d||503===d||504===d}(d)){if(e.deleteThrottleMetadata(r),C)return hv.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${C} provided in the "measurementId" field in the local Firebase config. [${null===d||void 0===d?void 0:d.message}]`),{appId:r,measurementId:C};throw u}const n=503===Number(null===(F=null===d||void 0===d?void 0:d.customData)||void 0===F?void 0:F.httpStatus)?(0,L.q)(T,e.intervalMillis,30):(0,L.q)(T,e.intervalMillis),y={throttleEndTimeMillis:Date.now()+n,backoffCount:T+1};return e.setThrottleMetadata(r,y),hv.debug(`Calling attemptFetch again in ${n} millis`),Rv(v,y,Q,e)}}class Mv{constructor(){this.listeners=[]}addEventListener(v){this.listeners.push(v)}abort(){this.listeners.forEach((v=>v()))}}let Yv,Dv;function iv(v){Dv=v}function Zv(v){Yv=v}async function jv(v,d,Q,n,T,e,F){var r;const C=gv(v);C.then((d=>{Q[d.measurementId]=d.appId,v.options.measurementId&&d.measurementId!==v.options.measurementId&&hv.warn(`The measurement ID in the local Firebase config (${v.options.measurementId}) does not match the measurement ID fetched from the server (${d.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((v=>hv.error(v))),d.push(C);const u=async function(){if(!(0,L.T)())return hv.warn(Av.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,L.db)()}catch(v){return hv.warn(Av.create("indexeddb-unavailable",{errorInfo:null===v||void 0===v?void 0:v.toString()}).message),!1}return!0}().then((v=>v?n.getId():void 0)),[y,z]=await Promise.all([C,u]);(function(v){const d=window.document.getElementsByTagName("script");for(const Q of Object.values(d))if(Q.src&&Q.src.includes(Vv)&&Q.src.includes(v))return Q;return null})(e)||Ov(e,y.measurementId),Dv&&(T("consent","default",Dv),iv(void 0)),T("js",new Date);const B=null!==(r=null===F||void 0===F?void 0:F.config)&&void 0!==r?r:{};return B.origin="firebase",B.update=!0,null!=z&&(B.firebase_id=z),T("config",y.measurementId,B),Yv&&(T("set",Yv),Zv(void 0)),y.measurementId}class xv{constructor(v){this.app=v}_delete(){return delete kv[this.app.options.appId],Promise.resolve()}}let kv={},tv=[];const pv={};let Wv,qv,bv="dataLayer",Hv="gtag",sv=!1;function av(v){if(sv)throw Av.create("already-initialized");v.dataLayerName&&(bv=v.dataLayerName),v.gtagName&&(Hv=v.gtagName)}function Iv(v,d,Q){!function(){const v=[];if((0,L.M)()&&v.push("This is a browser extension environment."),(0,L.g)()||v.push("Cookies are not available."),v.length>0){const d=v.map(((v,d)=>`(${d+1}) ${v}`)).join(" "),Q=Av.create("invalid-analytics-context",{errorInfo:d});hv.warn(Q.message)}}();const n=v.options.appId;if(!n)throw Av.create("no-app-id");if(!v.options.apiKey){if(!v.options.measurementId)throw Av.create("no-api-key");hv.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${v.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=kv[n])throw Av.create("already-exists",{id:n});if(!sv){!function(v){let d=[];Array.isArray(window[v])?d=window[v]:window[v]=d}(bv);const{wrappedGtag:v,gtagCore:d}=function(v,d,Q,n,T){let L=function(){for(var v=arguments.length,d=new Array(v),Q=0;Q<v;Q++)d[Q]=arguments[Q];window[n].push(arguments)};return window[T]&&"function"===typeof window[T]&&(L=window[T]),window[T]=Jv(L,v,d,Q),{gtagCore:L,wrappedGtag:window[T]}}(kv,tv,pv,bv,Hv);qv=v,Wv=d,sv=!0}kv[n]=jv(v,tv,pv,d,Wv,bv,Q);return new xv(v)}function Uv(){let v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,n.L)();v=(0,L.H)(v);const d=(0,n.x)(v,mv);return d.isInitialized()?d.getImmediate():cv(v)}function cv(v){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const Q=(0,n.x)(v,mv);if(Q.isInitialized()){const v=Q.getImmediate();if((0,L.v)(d,Q.getOptions()))return v;throw Av.create("already-initialized")}return Q.initialize({options:d})}async function wv(){if((0,L.M)())return!1;if(!(0,L.g)())return!1;if(!(0,L.T)())return!1;try{return await(0,L.db)()}catch(v){return!1}}function Gv(v,d,Q){v=(0,L.H)(v),async function(v,d,Q,n){if(n&&n.global)return v("set",{screen_name:Q}),Promise.resolve();v("config",await d,{update:!0,screen_name:Q})}(qv,kv[v.app.options.appId],d,Q).catch((v=>hv.error(v)))}async function Ev(v){return v=(0,L.H)(v),async function(v,d){const Q=await d;return new Promise(((d,n)=>{v("get",Q,"client_id",(v=>{v||n(Av.create("no-client-id")),d(v)}))}))}(qv,kv[v.app.options.appId])}function Nv(v,d,Q){v=(0,L.H)(v),async function(v,d,Q,n){if(n&&n.global)return v("set",{user_id:Q}),Promise.resolve();v("config",await d,{update:!0,user_id:Q})}(qv,kv[v.app.options.appId],d,Q).catch((v=>hv.error(v)))}function lv(v,d,Q){v=(0,L.H)(v),async function(v,d,Q,n){if(n&&n.global){const d={};for(const v of Object.keys(Q))d[`user_properties.${v}`]=Q[v];return v("set",d),Promise.resolve()}v("config",await d,{update:!0,user_properties:Q})}(qv,kv[v.app.options.appId],d,Q).catch((v=>hv.error(v)))}function vd(v,d){v=(0,L.H)(v),async function(v,d){const Q=await v;window[`ga-disable-${Q}`]=!d}(kv[v.app.options.appId],d).catch((v=>hv.error(v)))}function dd(v){qv?qv("set",v):Zv(v)}function Qd(v,d,Q,n){v=(0,L.H)(v),async function(v,d,Q,n,T){if(T&&T.global)v("event",Q,n);else{const T=await d;v("event",Q,Object.assign(Object.assign({},n),{send_to:T}))}}(qv,kv[v.app.options.appId],d,Q,n).catch((v=>hv.error(v)))}function nd(v){qv?qv("consent","update",v):iv(v)}const Td="@firebase/analytics",Ld="0.10.0";(0,n.B)(new e.h(mv,((v,d)=>{let{options:Q}=d;return Iv(v.getProvider("app").getImmediate(),v.getProvider("installations-internal").getImmediate(),Q)}),"PUBLIC")),(0,n.B)(new e.h("analytics-internal",(function(v){try{const d=v.getProvider(mv).getImmediate();return{logEvent:(v,Q,n)=>Qd(d,v,Q,n)}}catch(d){throw Av.create("interop-component-reg-failed",{reason:d})}}),"PRIVATE")),(0,n.S)(Td,Ld),(0,n.S)(Td,Ld,"esm2017")}}]);