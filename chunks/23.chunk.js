/*! For license information please see agmqk6.23.a197aa35.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[23],{12222:(R,x,H)=>{H.r(x),H.d(x,{getAnalytics:()=>jR,getGoogleAnalyticsClientId:()=>eR,initializeAnalytics:()=>mR,isSupported:()=>OR,logEvent:()=>Hx,setAnalyticsCollectionEnabled:()=>Rx,setConsent:()=>kx,setCurrentScreen:()=>lR,setDefaultEventParameters:()=>xx,setUserId:()=>uR,setUserProperties:()=>YR,settings:()=>rR});var k=H(12195),c=H(12213),t=H(12209),A=H(12201);let D,U;const J=new WeakMap,V=new WeakMap,n=new WeakMap,g=new WeakMap,I=new WeakMap;let i={get(R,x,H){if(R instanceof IDBTransaction){if("done"===x)return V.get(R);if("objectStoreNames"===x)return R.objectStoreNames||n.get(R);if("store"===x)return H.objectStoreNames[1]?void 0:H.objectStore(H.objectStoreNames[0])}return L(R[x])},set:(R,x,H)=>(R[x]=H,!0),has:(R,x)=>R instanceof IDBTransaction&&("done"===x||"store"===x)||x in R};function q(R){return R!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(U||(U=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(R)?function(){for(var x=arguments.length,H=new Array(x),k=0;k<x;k++)H[k]=arguments[k];return R.apply(b(this),H),L(J.get(this))}:function(){for(var x=arguments.length,H=new Array(x),k=0;k<x;k++)H[k]=arguments[k];return L(R.apply(b(this),H))}:function(x){for(var H=arguments.length,k=new Array(H>1?H-1:0),c=1;c<H;c++)k[c-1]=arguments[c];const t=R.call(b(this),x,...k);return n.set(t,x.sort?x.sort():[x]),L(t)}}function S(R){return"function"===typeof R?q(R):(R instanceof IDBTransaction&&function(R){if(V.has(R))return;const x=new Promise(((x,H)=>{const k=()=>{R.removeEventListener("complete",c),R.removeEventListener("error",t),R.removeEventListener("abort",t)},c=()=>{x(),k()},t=()=>{H(R.error||new DOMException("AbortError","AbortError")),k()};R.addEventListener("complete",c),R.addEventListener("error",t),R.addEventListener("abort",t)}));V.set(R,x)}(R),x=R,(D||(D=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((R=>x instanceof R))?new Proxy(R,i):R);var x}function L(R){if(R instanceof IDBRequest)return function(R){const x=new Promise(((x,H)=>{const k=()=>{R.removeEventListener("success",c),R.removeEventListener("error",t)},c=()=>{x(L(R.result)),k()},t=()=>{H(R.error),k()};R.addEventListener("success",c),R.addEventListener("error",t)}));return x.then((x=>{x instanceof IDBCursor&&J.set(x,R)})).catch((()=>{})),I.set(x,R),x}(R);if(g.has(R))return g.get(R);const x=S(R);return x!==R&&(g.set(R,x),I.set(x,R)),x}const b=R=>I.get(R);const C=["get","getKey","getAll","getAllKeys","count"],F=["put","add","delete","clear"],d=new Map;function P(R,x){if(!(R instanceof IDBDatabase)||x in R||"string"!==typeof x)return;if(d.get(x))return d.get(x);const H=x.replace(/FromIndex$/,""),k=x!==H,c=F.includes(H);if(!(H in(k?IDBIndex:IDBObjectStore).prototype)||!c&&!C.includes(H))return;const t=async function(R){const x=this.transaction(R,c?"readwrite":"readonly");let t=x.store;for(var A=arguments.length,D=new Array(A>1?A-1:0),U=1;U<A;U++)D[U-1]=arguments[U];return k&&(t=t.index(D.shift())),(await Promise.all([t[H](...D),c&&x.done]))[0]};return d.set(x,t),t}i=(R=>({...R,get:(x,H,k)=>P(x,H)||R.get(x,H,k),has:(x,H)=>!!P(x,H)||R.has(x,H)}))(i);const a="@firebase/installations",X="0.6.4",M=1e4,B=`w:${X}`,o="FIS_v2",Z=36e5,y={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},s=new t.h("installations","Installations",y);function E(R){return R instanceof t.l&&R.code.includes("request-failed")}function w(R){let{projectId:x}=R;return`https://firebaseinstallations.googleapis.com/v1/projects/${x}/installations`}function h(R){return{token:R.token,requestStatus:2,expiresIn:(x=R.expiresIn,Number(x.replace("s","000"))),creationTime:Date.now()};var x}async function f(R,x){const H=(await x.json()).error;return s.create("request-failed",{requestName:R,serverCode:H.code,serverMessage:H.message,serverStatus:H.status})}function N(R){let{apiKey:x}=R;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":x})}function W(R,x){let{refreshToken:H}=x;const k=N(R);return k.append("Authorization",function(R){return`${o} ${R}`}(H)),k}async function K(R){const x=await R();return x.status>=500&&x.status<600?R():x}function Q(R){return new Promise((x=>{setTimeout(x,R)}))}const G=/^[cdef][\w-]{21}$/;function T(){try{const R=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(R),R[0]=112+R[0]%16;const x=function(R){const x=(H=R,btoa(String.fromCharCode(...H)).replace(/\+/g,"-").replace(/\//g,"_"));var H;return x.substr(0,22)}(R);return G.test(x)?x:""}catch(R){return""}}function v(R){return`${R.appName}!${R.appId}`}const p=new Map;function r(R,x){const H=v(R);z(H,x),function(R,x){const H=m();H&&H.postMessage({key:R,fid:x});O()}(H,x)}function z(R,x){const H=p.get(R);if(H)for(const k of H)k(x)}let j=null;function m(){return!j&&"BroadcastChannel"in self&&(j=new BroadcastChannel("[Firebase] FID Change"),j.onmessage=R=>{z(R.data.key,R.data.fid)}),j}function O(){0===p.size&&j&&(j.close(),j=null)}const l="firebase-installations-store";let e=null;function u(){return e||(e=function(R,x){let{blocked:H,upgrade:k,blocking:c,terminated:t}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const A=indexedDB.open(R,x),D=L(A);return k&&A.addEventListener("upgradeneeded",(R=>{k(L(A.result),R.oldVersion,R.newVersion,L(A.transaction))})),H&&A.addEventListener("blocked",(()=>H())),D.then((R=>{t&&R.addEventListener("close",(()=>t())),c&&R.addEventListener("versionchange",(()=>c()))})).catch((()=>{})),D}("firebase-installations-database",1,{upgrade:(R,x)=>{if(0===x)R.createObjectStore(l)}})),e}async function Y(R,x){const H=v(R),k=(await u()).transaction(l,"readwrite"),c=k.objectStore(l),t=await c.get(H);return await c.put(x,H),await k.done,t&&t.fid===x.fid||r(R,x.fid),x}async function RR(R){const x=v(R),H=(await u()).transaction(l,"readwrite");await H.objectStore(l).delete(x),await H.done}async function xR(R,x){const H=v(R),k=(await u()).transaction(l,"readwrite"),c=k.objectStore(l),t=await c.get(H),A=x(t);return void 0===A?await c.delete(H):await c.put(A,H),await k.done,!A||t&&t.fid===A.fid||r(R,A.fid),A}async function HR(R){let x;const H=await xR(R.appConfig,(H=>{const k=function(R){const x=R||{fid:T(),registrationStatus:0};return tR(x)}(H),c=function(R,x){if(0===x.registrationStatus){if(!navigator.onLine){return{installationEntry:x,registrationPromise:Promise.reject(s.create("app-offline"))}}const H={fid:x.fid,registrationStatus:1,registrationTime:Date.now()},k=async function(R,x){try{const H=await async function(R,x){let{appConfig:H,heartbeatServiceProvider:k}=R,{fid:c}=x;const t=w(H),A=N(H),D=k.getImmediate({optional:!0});if(D){const R=await D.getHeartbeatsHeader();R&&A.append("x-firebase-client",R)}const U={fid:c,authVersion:o,appId:H.appId,sdkVersion:B},J={method:"POST",headers:A,body:JSON.stringify(U)},V=await K((()=>fetch(t,J)));if(V.ok){const R=await V.json();return{fid:R.fid||c,registrationStatus:2,refreshToken:R.refreshToken,authToken:h(R.authToken)}}throw await f("Create Installation",V)}(R,x);return Y(R.appConfig,H)}catch(H){throw E(H)&&409===H.customData.serverCode?await RR(R.appConfig):await Y(R.appConfig,{fid:x.fid,registrationStatus:0}),H}}(R,H);return{installationEntry:H,registrationPromise:k}}return 1===x.registrationStatus?{installationEntry:x,registrationPromise:kR(R)}:{installationEntry:x}}(R,k);return x=c.registrationPromise,c.installationEntry}));return""===H.fid?{installationEntry:await x}:{installationEntry:H,registrationPromise:x}}async function kR(R){let x=await cR(R.appConfig);for(;1===x.registrationStatus;)await Q(100),x=await cR(R.appConfig);if(0===x.registrationStatus){const{installationEntry:x,registrationPromise:H}=await HR(R);return H||x}return x}function cR(R){return xR(R,(R=>{if(!R)throw s.create("installation-not-found");return tR(R)}))}function tR(R){return 1===(x=R).registrationStatus&&x.registrationTime+M<Date.now()?{fid:R.fid,registrationStatus:0}:R;var x}async function AR(R,x){let{appConfig:H,heartbeatServiceProvider:k}=R;const c=function(R,x){let{fid:H}=x;return`${w(R)}/${H}/authTokens:generate`}(H,x),t=W(H,x),A=k.getImmediate({optional:!0});if(A){const R=await A.getHeartbeatsHeader();R&&t.append("x-firebase-client",R)}const D={installation:{sdkVersion:B,appId:H.appId}},U={method:"POST",headers:t,body:JSON.stringify(D)},J=await K((()=>fetch(c,U)));if(J.ok){return h(await J.json())}throw await f("Generate Auth Token",J)}async function DR(R){let x,H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const k=await xR(R.appConfig,(k=>{if(!JR(k))throw s.create("not-registered");const c=k.authToken;if(!H&&function(R){return 2===R.requestStatus&&!function(R){const x=Date.now();return x<R.creationTime||R.creationTime+R.expiresIn<x+Z}(R)}(c))return k;if(1===c.requestStatus)return x=async function(R,x){let H=await UR(R.appConfig);for(;1===H.authToken.requestStatus;)await Q(100),H=await UR(R.appConfig);const k=H.authToken;return 0===k.requestStatus?DR(R,x):k}(R,H),k;{if(!navigator.onLine)throw s.create("app-offline");const H=function(R){const x={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},R),{authToken:x})}(k);return x=async function(R,x){try{const H=await AR(R,x),k=Object.assign(Object.assign({},x),{authToken:H});return await Y(R.appConfig,k),H}catch(H){if(!E(H)||401!==H.customData.serverCode&&404!==H.customData.serverCode){const H=Object.assign(Object.assign({},x),{authToken:{requestStatus:0}});await Y(R.appConfig,H)}else await RR(R.appConfig);throw H}}(R,H),H}}));return x?await x:k.authToken}function UR(R){return xR(R,(R=>{if(!JR(R))throw s.create("not-registered");const x=R.authToken;return 1===(H=x).requestStatus&&H.requestTime+M<Date.now()?Object.assign(Object.assign({},R),{authToken:{requestStatus:0}}):R;var H}))}function JR(R){return void 0!==R&&2===R.registrationStatus}async function VR(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const H=R;await async function(R){const{registrationPromise:x}=await HR(R);x&&await x}(H);return(await DR(H,x)).token}function nR(R){return s.create("missing-app-config-values",{valueName:R})}const gR="installations",IR=R=>{const x=R.getProvider("app").getImmediate(),H=function(R){if(!R||!R.options)throw nR("App Configuration");if(!R.name)throw nR("App Name");const x=["projectId","apiKey","appId"];for(const H of x)if(!R.options[H])throw nR(H);return{appName:R.name,projectId:R.options.projectId,apiKey:R.options.apiKey,appId:R.options.appId}}(x);return{app:x,appConfig:H,heartbeatServiceProvider:(0,k.w)(x,"heartbeat"),_delete:()=>Promise.resolve()}},iR=R=>{const x=R.getProvider("app").getImmediate(),H=(0,k.w)(x,gR).getImmediate();return{getId:()=>async function(R){const x=R,{installationEntry:H,registrationPromise:k}=await HR(x);return k?k.catch(console.error):DR(x).catch(console.error),H.fid}(H),getToken:R=>VR(H,R)}};(0,k.A)(new A.f(gR,IR,"PUBLIC")),(0,k.A)(new A.f("installations-internal",iR,"PRIVATE")),(0,k.Q)(a,X),(0,k.Q)(a,X,"esm2017");const qR="analytics",SR="https://www.googletagmanager.com/gtag/js",LR=new c.d("@firebase/analytics"),bR={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},CR=new t.h("analytics","Analytics",bR);function FR(R){if(!R.startsWith(SR)){const x=CR.create("invalid-gtag-resource",{gtagURL:R});return LR.warn(x.message),""}return R}function dR(R){return Promise.all(R.map((R=>R.catch((R=>R)))))}function PR(R,x){const H=function(R,x){let H;return window.trustedTypes&&(H=window.trustedTypes.createPolicy(R,x)),H}("firebase-js-sdk-policy",{createScriptURL:FR}),k=document.createElement("script"),c=`${SR}?l=${R}&id=${x}`;k.src=H?null===H||void 0===H?void 0:H.createScriptURL(c):c,k.async=!0,document.head.appendChild(k)}function aR(R,x,H,k){return async function(c){try{for(var t=arguments.length,A=new Array(t>1?t-1:0),D=1;D<t;D++)A[D-1]=arguments[D];if("event"===c){const[k,c]=A;await async function(R,x,H,k,c){try{let t=[];if(c&&c.send_to){let R=c.send_to;Array.isArray(R)||(R=[R]);const k=await dR(H);for(const H of R){const R=k.find((R=>R.measurementId===H)),c=R&&x[R.appId];if(!c){t=[];break}t.push(c)}}0===t.length&&(t=Object.values(x)),await Promise.all(t),R("event",k,c||{})}catch(t){LR.error(t)}}(R,x,H,k,c)}else if("config"===c){const[c,t]=A;await async function(R,x,H,k,c,t){const A=k[c];try{if(A)await x[A];else{const R=(await dR(H)).find((R=>R.measurementId===c));R&&await x[R.appId]}}catch(D){LR.error(D)}R("config",c,t)}(R,x,H,k,c,t)}else if("consent"===c){const[x]=A;R("consent","update",x)}else if("get"===c){const[x,H,k]=A;R("get",x,H,k)}else if("set"===c){const[x]=A;R("set",x)}else R(c,...A)}catch(U){LR.error(U)}}}const XR=new class{constructor(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=R,this.intervalMillis=x}getThrottleMetadata(R){return this.throttleMetadata[R]}setThrottleMetadata(R,x){this.throttleMetadata[R]=x}deleteThrottleMetadata(R){delete this.throttleMetadata[R]}};function MR(R){return new Headers({Accept:"application/json","x-goog-api-key":R})}async function BR(R){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:XR,H=arguments.length>2?arguments[2]:void 0;const{appId:k,apiKey:c,measurementId:t}=R.options;if(!k)throw CR.create("no-app-id");if(!c){if(t)return{measurementId:t,appId:k};throw CR.create("no-api-key")}const A=x.getThrottleMetadata(k)||{backoffCount:0,throttleEndTimeMillis:Date.now()},D=new ZR;return setTimeout((async()=>{D.abort()}),void 0!==H?H:6e4),oR({appId:k,apiKey:c,measurementId:t},A,D,x)}async function oR(R,x,H){let{throttleEndTimeMillis:k,backoffCount:c}=x,A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:XR;var D;const{appId:U,measurementId:J}=R;try{await function(R,x){return new Promise(((H,k)=>{const c=Math.max(x-Date.now(),0),t=setTimeout(H,c);R.addEventListener((()=>{clearTimeout(t),k(CR.create("fetch-throttle",{throttleEndTimeMillis:x}))}))}))}(H,k)}catch(V){if(J)return LR.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${J} provided in the "measurementId" field in the local Firebase config. [${null===V||void 0===V?void 0:V.message}]`),{appId:U,measurementId:J};throw V}try{const x=await async function(R){var x;const{appId:H,apiKey:k}=R,c={method:"GET",headers:MR(k)},t="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",H),A=await fetch(t,c);if(200!==A.status&&304!==A.status){let R="";try{const H=await A.json();(null===(x=H.error)||void 0===x?void 0:x.message)&&(R=H.error.message)}catch(D){}throw CR.create("config-fetch-failed",{httpStatus:A.status,responseMessage:R})}return A.json()}(R);return A.deleteThrottleMetadata(U),x}catch(V){const x=V;if(!function(R){if(!(R instanceof t.l)||!R.customData)return!1;const x=Number(R.customData.httpStatus);return 429===x||500===x||503===x||504===x}(x)){if(A.deleteThrottleMetadata(U),J)return LR.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${J} provided in the "measurementId" field in the local Firebase config. [${null===x||void 0===x?void 0:x.message}]`),{appId:U,measurementId:J};throw V}const k=503===Number(null===(D=null===x||void 0===x?void 0:x.customData)||void 0===D?void 0:D.httpStatus)?(0,t.z)(c,A.intervalMillis,30):(0,t.z)(c,A.intervalMillis),n={throttleEndTimeMillis:Date.now()+k,backoffCount:c+1};return A.setThrottleMetadata(U,n),LR.debug(`Calling attemptFetch again in ${k} millis`),oR(R,n,H,A)}}class ZR{constructor(){this.listeners=[]}addEventListener(R){this.listeners.push(R)}abort(){this.listeners.forEach((R=>R()))}}let yR,sR;function ER(R){sR=R}function wR(R){yR=R}async function hR(R,x,H,k,c,A,D){var U;const J=BR(R);J.then((x=>{H[x.measurementId]=x.appId,R.options.measurementId&&x.measurementId!==R.options.measurementId&&LR.warn(`The measurement ID in the local Firebase config (${R.options.measurementId}) does not match the measurement ID fetched from the server (${x.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((R=>LR.error(R))),x.push(J);const V=async function(){if(!(0,t.kb)())return LR.warn(CR.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,t.vb)()}catch(R){return LR.warn(CR.create("indexeddb-unavailable",{errorInfo:null===R||void 0===R?void 0:R.toString()}).message),!1}return!0}().then((R=>R?k.getId():void 0)),[n,g]=await Promise.all([J,V]);(function(R){const x=window.document.getElementsByTagName("script");for(const H of Object.values(x))if(H.src&&H.src.includes(SR)&&H.src.includes(R))return H;return null})(A)||PR(A,n.measurementId),sR&&(c("consent","default",sR),ER(void 0)),c("js",new Date);const I=null!==(U=null===D||void 0===D?void 0:D.config)&&void 0!==U?U:{};return I.origin="firebase",I.update=!0,null!=g&&(I.firebase_id=g),c("config",n.measurementId,I),yR&&(c("set",yR),wR(void 0)),n.measurementId}class fR{constructor(R){this.app=R}_delete(){return delete NR[this.app.options.appId],Promise.resolve()}}let NR={},WR=[];const KR={};let QR,GR,TR="dataLayer",vR="gtag",pR=!1;function rR(R){if(pR)throw CR.create("already-initialized");R.dataLayerName&&(TR=R.dataLayerName),R.gtagName&&(vR=R.gtagName)}function zR(R,x,H){!function(){const R=[];if((0,t.cb)()&&R.push("This is a browser extension environment."),(0,t.p)()||R.push("Cookies are not available."),R.length>0){const x=R.map(((R,x)=>`(${x+1}) ${R}`)).join(" "),H=CR.create("invalid-analytics-context",{errorInfo:x});LR.warn(H.message)}}();const k=R.options.appId;if(!k)throw CR.create("no-app-id");if(!R.options.apiKey){if(!R.options.measurementId)throw CR.create("no-api-key");LR.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${R.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=NR[k])throw CR.create("already-exists",{id:k});if(!pR){!function(R){let x=[];Array.isArray(window[R])?x=window[R]:window[R]=x}(TR);const{wrappedGtag:R,gtagCore:x}=function(R,x,H,k,c){let t=function(){for(var R=arguments.length,x=new Array(R),H=0;H<R;H++)x[H]=arguments[H];window[k].push(arguments)};return window[c]&&"function"===typeof window[c]&&(t=window[c]),window[c]=aR(t,R,x,H),{gtagCore:t,wrappedGtag:window[c]}}(NR,WR,KR,TR,vR);GR=R,QR=x,pR=!0}NR[k]=hR(R,WR,KR,x,QR,TR,H);return new fR(R)}function jR(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,k.I)();R=(0,t.X)(R);const x=(0,k.w)(R,qR);return x.isInitialized()?x.getImmediate():mR(R)}function mR(R){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const H=(0,k.w)(R,qR);if(H.isInitialized()){const R=H.getImmediate();if((0,t.G)(x,H.getOptions()))return R;throw CR.create("already-initialized")}return H.initialize({options:x})}async function OR(){if((0,t.cb)())return!1;if(!(0,t.p)())return!1;if(!(0,t.kb)())return!1;try{return await(0,t.vb)()}catch(R){return!1}}function lR(R,x,H){R=(0,t.X)(R),async function(R,x,H,k){if(k&&k.global)return R("set",{screen_name:H}),Promise.resolve();R("config",await x,{update:!0,screen_name:H})}(GR,NR[R.app.options.appId],x,H).catch((R=>LR.error(R)))}async function eR(R){return R=(0,t.X)(R),async function(R,x){const H=await x;return new Promise(((x,k)=>{R("get",H,"client_id",(R=>{R||k(CR.create("no-client-id")),x(R)}))}))}(GR,NR[R.app.options.appId])}function uR(R,x,H){R=(0,t.X)(R),async function(R,x,H,k){if(k&&k.global)return R("set",{user_id:H}),Promise.resolve();R("config",await x,{update:!0,user_id:H})}(GR,NR[R.app.options.appId],x,H).catch((R=>LR.error(R)))}function YR(R,x,H){R=(0,t.X)(R),async function(R,x,H,k){if(k&&k.global){const x={};for(const R of Object.keys(H))x[`user_properties.${R}`]=H[R];return R("set",x),Promise.resolve()}R("config",await x,{update:!0,user_properties:H})}(GR,NR[R.app.options.appId],x,H).catch((R=>LR.error(R)))}function Rx(R,x){R=(0,t.X)(R),async function(R,x){const H=await R;window[`ga-disable-${H}`]=!x}(NR[R.app.options.appId],x).catch((R=>LR.error(R)))}function xx(R){GR?GR("set",R):wR(R)}function Hx(R,x,H,k){R=(0,t.X)(R),async function(R,x,H,k,c){if(c&&c.global)R("event",H,k);else{const c=await x;R("event",H,Object.assign(Object.assign({},k),{send_to:c}))}}(GR,NR[R.app.options.appId],x,H,k).catch((R=>LR.error(R)))}function kx(R){GR?GR("consent","update",R):ER(R)}const cx="@firebase/analytics",tx="0.10.0";(0,k.A)(new A.f(qR,((R,x)=>{let{options:H}=x;return zR(R.getProvider("app").getImmediate(),R.getProvider("installations-internal").getImmediate(),H)}),"PUBLIC")),(0,k.A)(new A.f("analytics-internal",(function(R){try{const x=R.getProvider(qR).getImmediate();return{logEvent:(R,H,k)=>Hx(x,R,H,k)}}catch(x){throw CR.create("interop-component-reg-failed",{reason:x})}}),"PRIVATE")),(0,k.Q)(cx,tx),(0,k.Q)(cx,tx,"esm2017")}}]);