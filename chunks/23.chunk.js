/*! For license information please see 67xw0a.23.bd96da61.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[23],{12120:(Q,X,C)=>{C.r(X),C.d(X,{getAnalytics:()=>tQ,getGoogleAnalyticsClientId:()=>uQ,initializeAnalytics:()=>yQ,isSupported:()=>AQ,logEvent:()=>CX,setAnalyticsCollectionEnabled:()=>QX,setConsent:()=>lX,setCurrentScreen:()=>DQ,setDefaultEventParameters:()=>XX,setUserId:()=>VQ,setUserProperties:()=>dQ,settings:()=>pQ});var l=C(12102),h=C(12114),M=C(12111),f=C(12107);let O,m;const W=new WeakMap,U=new WeakMap,L=new WeakMap,w=new WeakMap,i=new WeakMap;let a={get(Q,X,C){if(Q instanceof IDBTransaction){if("done"===X)return U.get(Q);if("objectStoreNames"===X)return Q.objectStoreNames||L.get(Q);if("store"===X)return C.objectStoreNames[1]?void 0:C.objectStore(C.objectStoreNames[0])}return z(Q[X])},set:(Q,X,C)=>(Q[X]=C,!0),has:(Q,X)=>Q instanceof IDBTransaction&&("done"===X||"store"===X)||X in Q};function F(Q){return Q!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(m||(m=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(Q)?function(){for(var X=arguments.length,C=new Array(X),l=0;l<X;l++)C[l]=arguments[l];return Q.apply(x(this),C),z(W.get(this))}:function(){for(var X=arguments.length,C=new Array(X),l=0;l<X;l++)C[l]=arguments[l];return z(Q.apply(x(this),C))}:function(X){for(var C=arguments.length,l=new Array(C>1?C-1:0),h=1;h<C;h++)l[h-1]=arguments[h];const M=Q.call(x(this),X,...l);return L.set(M,X.sort?X.sort():[X]),z(M)}}function s(Q){return"function"===typeof Q?F(Q):(Q instanceof IDBTransaction&&function(Q){if(U.has(Q))return;const X=new Promise(((X,C)=>{const l=()=>{Q.removeEventListener("complete",h),Q.removeEventListener("error",M),Q.removeEventListener("abort",M)},h=()=>{X(),l()},M=()=>{C(Q.error||new DOMException("AbortError","AbortError")),l()};Q.addEventListener("complete",h),Q.addEventListener("error",M),Q.addEventListener("abort",M)}));U.set(Q,X)}(Q),X=Q,(O||(O=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((Q=>X instanceof Q))?new Proxy(Q,a):Q);var X}function z(Q){if(Q instanceof IDBRequest)return function(Q){const X=new Promise(((X,C)=>{const l=()=>{Q.removeEventListener("success",h),Q.removeEventListener("error",M)},h=()=>{X(z(Q.result)),l()},M=()=>{C(Q.error),l()};Q.addEventListener("success",h),Q.addEventListener("error",M)}));return X.then((X=>{X instanceof IDBCursor&&W.set(X,Q)})).catch((()=>{})),i.set(X,Q),X}(Q);if(w.has(Q))return w.get(Q);const X=s(Q);return X!==Q&&(w.set(Q,X),i.set(X,Q)),X}const x=Q=>i.get(Q);const r=["get","getKey","getAll","getAllKeys","count"],P=["put","add","delete","clear"],j=new Map;function v(Q,X){if(!(Q instanceof IDBDatabase)||X in Q||"string"!==typeof X)return;if(j.get(X))return j.get(X);const C=X.replace(/FromIndex$/,""),l=X!==C,h=P.includes(C);if(!(C in(l?IDBIndex:IDBObjectStore).prototype)||!h&&!r.includes(C))return;const M=async function(Q){const X=this.transaction(Q,h?"readwrite":"readonly");let M=X.store;for(var f=arguments.length,O=new Array(f>1?f-1:0),m=1;m<f;m++)O[m-1]=arguments[m];return l&&(M=M.index(O.shift())),(await Promise.all([M[C](...O),h&&X.done]))[0]};return j.set(X,M),M}a=(Q=>({...Q,get:(X,C,l)=>v(X,C)||Q.get(X,C,l),has:(X,C)=>!!v(X,C)||Q.has(X,C)}))(a);const Z="@firebase/installations",g="0.6.4",S=1e4,e=`w:${g}`,k="FIS_v2",R=36e5,H={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},o=new M.f("installations","Installations",H);function T(Q){return Q instanceof M.i&&Q.code.includes("request-failed")}function Y(Q){let{projectId:X}=Q;return`https://firebaseinstallations.googleapis.com/v1/projects/${X}/installations`}function J(Q){return{token:Q.token,requestStatus:2,expiresIn:(X=Q.expiresIn,Number(X.replace("s","000"))),creationTime:Date.now()};var X}async function K(Q,X){const C=(await X.json()).error;return o.create("request-failed",{requestName:Q,serverCode:C.code,serverMessage:C.message,serverStatus:C.status})}function N(Q){let{apiKey:X}=Q;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":X})}function q(Q,X){let{refreshToken:C}=X;const l=N(Q);return l.append("Authorization",function(Q){return`${k} ${Q}`}(C)),l}async function n(Q){const X=await Q();return X.status>=500&&X.status<600?Q():X}function c(Q){return new Promise((X=>{setTimeout(X,Q)}))}const E=/^[cdef][\w-]{21}$/;function B(){try{const Q=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(Q),Q[0]=112+Q[0]%16;const X=function(Q){const X=(C=Q,btoa(String.fromCharCode(...C)).replace(/\+/g,"-").replace(/\//g,"_"));var C;return X.substr(0,22)}(Q);return E.test(X)?X:""}catch(Q){return""}}function G(Q){return`${Q.appName}!${Q.appId}`}const b=new Map;function p(Q,X){const C=G(Q);I(C,X),function(Q,X){const C=y();C&&C.postMessage({key:Q,fid:X});A()}(C,X)}function I(Q,X){const C=b.get(Q);if(C)for(const l of C)l(X)}let t=null;function y(){return!t&&"BroadcastChannel"in self&&(t=new BroadcastChannel("[Firebase] FID Change"),t.onmessage=Q=>{I(Q.data.key,Q.data.fid)}),t}function A(){0===b.size&&t&&(t.close(),t=null)}const D="firebase-installations-store";let u=null;function V(){return u||(u=function(Q,X){let{blocked:C,upgrade:l,blocking:h,terminated:M}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const f=indexedDB.open(Q,X),O=z(f);return l&&f.addEventListener("upgradeneeded",(Q=>{l(z(f.result),Q.oldVersion,Q.newVersion,z(f.transaction))})),C&&f.addEventListener("blocked",(()=>C())),O.then((Q=>{M&&Q.addEventListener("close",(()=>M())),h&&Q.addEventListener("versionchange",(()=>h()))})).catch((()=>{})),O}("firebase-installations-database",1,{upgrade:(Q,X)=>{if(0===X)Q.createObjectStore(D)}})),u}async function d(Q,X){const C=G(Q),l=(await V()).transaction(D,"readwrite"),h=l.objectStore(D),M=await h.get(C);return await h.put(X,C),await l.done,M&&M.fid===X.fid||p(Q,X.fid),X}async function QQ(Q){const X=G(Q),C=(await V()).transaction(D,"readwrite");await C.objectStore(D).delete(X),await C.done}async function XQ(Q,X){const C=G(Q),l=(await V()).transaction(D,"readwrite"),h=l.objectStore(D),M=await h.get(C),f=X(M);return void 0===f?await h.delete(C):await h.put(f,C),await l.done,!f||M&&M.fid===f.fid||p(Q,f.fid),f}async function CQ(Q){let X;const C=await XQ(Q.appConfig,(C=>{const l=function(Q){const X=Q||{fid:B(),registrationStatus:0};return MQ(X)}(C),h=function(Q,X){if(0===X.registrationStatus){if(!navigator.onLine){return{installationEntry:X,registrationPromise:Promise.reject(o.create("app-offline"))}}const C={fid:X.fid,registrationStatus:1,registrationTime:Date.now()},l=async function(Q,X){try{const C=await async function(Q,X){let{appConfig:C,heartbeatServiceProvider:l}=Q,{fid:h}=X;const M=Y(C),f=N(C),O=l.getImmediate({optional:!0});if(O){const Q=await O.getHeartbeatsHeader();Q&&f.append("x-firebase-client",Q)}const m={fid:h,authVersion:k,appId:C.appId,sdkVersion:e},W={method:"POST",headers:f,body:JSON.stringify(m)},U=await n((()=>fetch(M,W)));if(U.ok){const Q=await U.json();return{fid:Q.fid||h,registrationStatus:2,refreshToken:Q.refreshToken,authToken:J(Q.authToken)}}throw await K("Create Installation",U)}(Q,X);return d(Q.appConfig,C)}catch(C){throw T(C)&&409===C.customData.serverCode?await QQ(Q.appConfig):await d(Q.appConfig,{fid:X.fid,registrationStatus:0}),C}}(Q,C);return{installationEntry:C,registrationPromise:l}}return 1===X.registrationStatus?{installationEntry:X,registrationPromise:lQ(Q)}:{installationEntry:X}}(Q,l);return X=h.registrationPromise,h.installationEntry}));return""===C.fid?{installationEntry:await X}:{installationEntry:C,registrationPromise:X}}async function lQ(Q){let X=await hQ(Q.appConfig);for(;1===X.registrationStatus;)await c(100),X=await hQ(Q.appConfig);if(0===X.registrationStatus){const{installationEntry:X,registrationPromise:C}=await CQ(Q);return C||X}return X}function hQ(Q){return XQ(Q,(Q=>{if(!Q)throw o.create("installation-not-found");return MQ(Q)}))}function MQ(Q){return 1===(X=Q).registrationStatus&&X.registrationTime+S<Date.now()?{fid:Q.fid,registrationStatus:0}:Q;var X}async function fQ(Q,X){let{appConfig:C,heartbeatServiceProvider:l}=Q;const h=function(Q,X){let{fid:C}=X;return`${Y(Q)}/${C}/authTokens:generate`}(C,X),M=q(C,X),f=l.getImmediate({optional:!0});if(f){const Q=await f.getHeartbeatsHeader();Q&&M.append("x-firebase-client",Q)}const O={installation:{sdkVersion:e,appId:C.appId}},m={method:"POST",headers:M,body:JSON.stringify(O)},W=await n((()=>fetch(h,m)));if(W.ok){return J(await W.json())}throw await K("Generate Auth Token",W)}async function OQ(Q){let X,C=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const l=await XQ(Q.appConfig,(l=>{if(!WQ(l))throw o.create("not-registered");const h=l.authToken;if(!C&&function(Q){return 2===Q.requestStatus&&!function(Q){const X=Date.now();return X<Q.creationTime||Q.creationTime+Q.expiresIn<X+R}(Q)}(h))return l;if(1===h.requestStatus)return X=async function(Q,X){let C=await mQ(Q.appConfig);for(;1===C.authToken.requestStatus;)await c(100),C=await mQ(Q.appConfig);const l=C.authToken;return 0===l.requestStatus?OQ(Q,X):l}(Q,C),l;{if(!navigator.onLine)throw o.create("app-offline");const C=function(Q){const X={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},Q),{authToken:X})}(l);return X=async function(Q,X){try{const C=await fQ(Q,X),l=Object.assign(Object.assign({},X),{authToken:C});return await d(Q.appConfig,l),C}catch(C){if(!T(C)||401!==C.customData.serverCode&&404!==C.customData.serverCode){const C=Object.assign(Object.assign({},X),{authToken:{requestStatus:0}});await d(Q.appConfig,C)}else await QQ(Q.appConfig);throw C}}(Q,C),C}}));return X?await X:l.authToken}function mQ(Q){return XQ(Q,(Q=>{if(!WQ(Q))throw o.create("not-registered");const X=Q.authToken;return 1===(C=X).requestStatus&&C.requestTime+S<Date.now()?Object.assign(Object.assign({},Q),{authToken:{requestStatus:0}}):Q;var C}))}function WQ(Q){return void 0!==Q&&2===Q.registrationStatus}async function UQ(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=Q;await async function(Q){const{registrationPromise:X}=await CQ(Q);X&&await X}(C);return(await OQ(C,X)).token}function LQ(Q){return o.create("missing-app-config-values",{valueName:Q})}const wQ="installations",iQ=Q=>{const X=Q.getProvider("app").getImmediate(),C=function(Q){if(!Q||!Q.options)throw LQ("App Configuration");if(!Q.name)throw LQ("App Name");const X=["projectId","apiKey","appId"];for(const C of X)if(!Q.options[C])throw LQ(C);return{appName:Q.name,projectId:Q.options.projectId,apiKey:Q.options.apiKey,appId:Q.options.appId}}(X);return{app:X,appConfig:C,heartbeatServiceProvider:(0,l.w)(X,"heartbeat"),_delete:()=>Promise.resolve()}},aQ=Q=>{const X=Q.getProvider("app").getImmediate(),C=(0,l.w)(X,wQ).getImmediate();return{getId:()=>async function(Q){const X=Q,{installationEntry:C,registrationPromise:l}=await CQ(X);return l?l.catch(console.error):OQ(X).catch(console.error),C.fid}(C),getToken:Q=>UQ(C,Q)}};(0,l.x)(new f.e(wQ,iQ,"PUBLIC")),(0,l.x)(new f.e("installations-internal",aQ,"PRIVATE")),(0,l.R)(Z,g),(0,l.R)(Z,g,"esm2017");const FQ="analytics",sQ="https://www.googletagmanager.com/gtag/js",zQ=new h.e("@firebase/analytics"),xQ={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},rQ=new M.f("analytics","Analytics",xQ);function PQ(Q){if(!Q.startsWith(sQ)){const X=rQ.create("invalid-gtag-resource",{gtagURL:Q});return zQ.warn(X.message),""}return Q}function jQ(Q){return Promise.all(Q.map((Q=>Q.catch((Q=>Q)))))}function vQ(Q,X){const C=function(Q,X){let C;return window.trustedTypes&&(C=window.trustedTypes.createPolicy(Q,X)),C}("firebase-js-sdk-policy",{createScriptURL:PQ}),l=document.createElement("script"),h=`${sQ}?l=${Q}&id=${X}`;l.src=C?null===C||void 0===C?void 0:C.createScriptURL(h):h,l.async=!0,document.head.appendChild(l)}function ZQ(Q,X,C,l){return async function(h){try{for(var M=arguments.length,f=new Array(M>1?M-1:0),O=1;O<M;O++)f[O-1]=arguments[O];if("event"===h){const[l,h]=f;await async function(Q,X,C,l,h){try{let M=[];if(h&&h.send_to){let Q=h.send_to;Array.isArray(Q)||(Q=[Q]);const l=await jQ(C);for(const C of Q){const Q=l.find((Q=>Q.measurementId===C)),h=Q&&X[Q.appId];if(!h){M=[];break}M.push(h)}}0===M.length&&(M=Object.values(X)),await Promise.all(M),Q("event",l,h||{})}catch(M){zQ.error(M)}}(Q,X,C,l,h)}else if("config"===h){const[h,M]=f;await async function(Q,X,C,l,h,M){const f=l[h];try{if(f)await X[f];else{const Q=(await jQ(C)).find((Q=>Q.measurementId===h));Q&&await X[Q.appId]}}catch(O){zQ.error(O)}Q("config",h,M)}(Q,X,C,l,h,M)}else if("consent"===h){const[X]=f;Q("consent","update",X)}else if("get"===h){const[X,C,l]=f;Q("get",X,C,l)}else if("set"===h){const[X]=f;Q("set",X)}else Q(h,...f)}catch(m){zQ.error(m)}}}const gQ=new class{constructor(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=Q,this.intervalMillis=X}getThrottleMetadata(Q){return this.throttleMetadata[Q]}setThrottleMetadata(Q,X){this.throttleMetadata[Q]=X}deleteThrottleMetadata(Q){delete this.throttleMetadata[Q]}};function SQ(Q){return new Headers({Accept:"application/json","x-goog-api-key":Q})}async function eQ(Q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:gQ,C=arguments.length>2?arguments[2]:void 0;const{appId:l,apiKey:h,measurementId:M}=Q.options;if(!l)throw rQ.create("no-app-id");if(!h){if(M)return{measurementId:M,appId:l};throw rQ.create("no-api-key")}const f=X.getThrottleMetadata(l)||{backoffCount:0,throttleEndTimeMillis:Date.now()},O=new RQ;return setTimeout((async()=>{O.abort()}),void 0!==C?C:6e4),kQ({appId:l,apiKey:h,measurementId:M},f,O,X)}async function kQ(Q,X,C){let{throttleEndTimeMillis:l,backoffCount:h}=X,f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:gQ;var O;const{appId:m,measurementId:W}=Q;try{await function(Q,X){return new Promise(((C,l)=>{const h=Math.max(X-Date.now(),0),M=setTimeout(C,h);Q.addEventListener((()=>{clearTimeout(M),l(rQ.create("fetch-throttle",{throttleEndTimeMillis:X}))}))}))}(C,l)}catch(U){if(W)return zQ.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${W} provided in the "measurementId" field in the local Firebase config. [${null===U||void 0===U?void 0:U.message}]`),{appId:m,measurementId:W};throw U}try{const X=await async function(Q){var X;const{appId:C,apiKey:l}=Q,h={method:"GET",headers:SQ(l)},M="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",C),f=await fetch(M,h);if(200!==f.status&&304!==f.status){let Q="";try{const C=await f.json();(null===(X=C.error)||void 0===X?void 0:X.message)&&(Q=C.error.message)}catch(O){}throw rQ.create("config-fetch-failed",{httpStatus:f.status,responseMessage:Q})}return f.json()}(Q);return f.deleteThrottleMetadata(m),X}catch(U){const X=U;if(!function(Q){if(!(Q instanceof M.i)||!Q.customData)return!1;const X=Number(Q.customData.httpStatus);return 429===X||500===X||503===X||504===X}(X)){if(f.deleteThrottleMetadata(m),W)return zQ.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${W} provided in the "measurementId" field in the local Firebase config. [${null===X||void 0===X?void 0:X.message}]`),{appId:m,measurementId:W};throw U}const l=503===Number(null===(O=null===X||void 0===X?void 0:X.customData)||void 0===O?void 0:O.httpStatus)?(0,M.y)(h,f.intervalMillis,30):(0,M.y)(h,f.intervalMillis),L={throttleEndTimeMillis:Date.now()+l,backoffCount:h+1};return f.setThrottleMetadata(m,L),zQ.debug(`Calling attemptFetch again in ${l} millis`),kQ(Q,L,C,f)}}class RQ{constructor(){this.listeners=[]}addEventListener(Q){this.listeners.push(Q)}abort(){this.listeners.forEach((Q=>Q()))}}let HQ,oQ;function TQ(Q){oQ=Q}function YQ(Q){HQ=Q}async function JQ(Q,X,C,l,h,f,O){var m;const W=eQ(Q);W.then((X=>{C[X.measurementId]=X.appId,Q.options.measurementId&&X.measurementId!==Q.options.measurementId&&zQ.warn(`The measurement ID in the local Firebase config (${Q.options.measurementId}) does not match the measurement ID fetched from the server (${X.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((Q=>zQ.error(Q))),X.push(W);const U=async function(){if(!(0,M.cb)())return zQ.warn(rQ.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,M.lb)()}catch(Q){return zQ.warn(rQ.create("indexeddb-unavailable",{errorInfo:null===Q||void 0===Q?void 0:Q.toString()}).message),!1}return!0}().then((Q=>Q?l.getId():void 0)),[L,w]=await Promise.all([W,U]);(function(Q){const X=window.document.getElementsByTagName("script");for(const C of Object.values(X))if(C.src&&C.src.includes(sQ)&&C.src.includes(Q))return C;return null})(f)||vQ(f,L.measurementId),oQ&&(h("consent","default",oQ),TQ(void 0)),h("js",new Date);const i=null!==(m=null===O||void 0===O?void 0:O.config)&&void 0!==m?m:{};return i.origin="firebase",i.update=!0,null!=w&&(i.firebase_id=w),h("config",L.measurementId,i),HQ&&(h("set",HQ),YQ(void 0)),L.measurementId}class KQ{constructor(Q){this.app=Q}_delete(){return delete NQ[this.app.options.appId],Promise.resolve()}}let NQ={},qQ=[];const nQ={};let cQ,EQ,BQ="dataLayer",GQ="gtag",bQ=!1;function pQ(Q){if(bQ)throw rQ.create("already-initialized");Q.dataLayerName&&(BQ=Q.dataLayerName),Q.gtagName&&(GQ=Q.gtagName)}function IQ(Q,X,C){!function(){const Q=[];if((0,M.W)()&&Q.push("This is a browser extension environment."),(0,M.m)()||Q.push("Cookies are not available."),Q.length>0){const X=Q.map(((Q,X)=>`(${X+1}) ${Q}`)).join(" "),C=rQ.create("invalid-analytics-context",{errorInfo:X});zQ.warn(C.message)}}();const l=Q.options.appId;if(!l)throw rQ.create("no-app-id");if(!Q.options.apiKey){if(!Q.options.measurementId)throw rQ.create("no-api-key");zQ.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${Q.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=NQ[l])throw rQ.create("already-exists",{id:l});if(!bQ){!function(Q){let X=[];Array.isArray(window[Q])?X=window[Q]:window[Q]=X}(BQ);const{wrappedGtag:Q,gtagCore:X}=function(Q,X,C,l,h){let M=function(){for(var Q=arguments.length,X=new Array(Q),C=0;C<Q;C++)X[C]=arguments[C];window[l].push(arguments)};return window[h]&&"function"===typeof window[h]&&(M=window[h]),window[h]=ZQ(M,Q,X,C),{gtagCore:M,wrappedGtag:window[h]}}(NQ,qQ,nQ,BQ,GQ);EQ=Q,cQ=X,bQ=!0}NQ[l]=JQ(Q,qQ,nQ,X,cQ,BQ,C);return new KQ(Q)}function tQ(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,l.J)();Q=(0,M.R)(Q);const X=(0,l.w)(Q,FQ);return X.isInitialized()?X.getImmediate():yQ(Q)}function yQ(Q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const C=(0,l.w)(Q,FQ);if(C.isInitialized()){const Q=C.getImmediate();if((0,M.C)(X,C.getOptions()))return Q;throw rQ.create("already-initialized")}return C.initialize({options:X})}async function AQ(){if((0,M.W)())return!1;if(!(0,M.m)())return!1;if(!(0,M.cb)())return!1;try{return await(0,M.lb)()}catch(Q){return!1}}function DQ(Q,X,C){Q=(0,M.R)(Q),async function(Q,X,C,l){if(l&&l.global)return Q("set",{screen_name:C}),Promise.resolve();Q("config",await X,{update:!0,screen_name:C})}(EQ,NQ[Q.app.options.appId],X,C).catch((Q=>zQ.error(Q)))}async function uQ(Q){return Q=(0,M.R)(Q),async function(Q,X){const C=await X;return new Promise(((X,l)=>{Q("get",C,"client_id",(Q=>{Q||l(rQ.create("no-client-id")),X(Q)}))}))}(EQ,NQ[Q.app.options.appId])}function VQ(Q,X,C){Q=(0,M.R)(Q),async function(Q,X,C,l){if(l&&l.global)return Q("set",{user_id:C}),Promise.resolve();Q("config",await X,{update:!0,user_id:C})}(EQ,NQ[Q.app.options.appId],X,C).catch((Q=>zQ.error(Q)))}function dQ(Q,X,C){Q=(0,M.R)(Q),async function(Q,X,C,l){if(l&&l.global){const X={};for(const Q of Object.keys(C))X[`user_properties.${Q}`]=C[Q];return Q("set",X),Promise.resolve()}Q("config",await X,{update:!0,user_properties:C})}(EQ,NQ[Q.app.options.appId],X,C).catch((Q=>zQ.error(Q)))}function QX(Q,X){Q=(0,M.R)(Q),async function(Q,X){const C=await Q;window[`ga-disable-${C}`]=!X}(NQ[Q.app.options.appId],X).catch((Q=>zQ.error(Q)))}function XX(Q){EQ?EQ("set",Q):YQ(Q)}function CX(Q,X,C,l){Q=(0,M.R)(Q),async function(Q,X,C,l,h){if(h&&h.global)Q("event",C,l);else{const h=await X;Q("event",C,Object.assign(Object.assign({},l),{send_to:h}))}}(EQ,NQ[Q.app.options.appId],X,C,l).catch((Q=>zQ.error(Q)))}function lX(Q){EQ?EQ("consent","update",Q):TQ(Q)}const hX="@firebase/analytics",MX="0.10.0";(0,l.x)(new f.e(FQ,((Q,X)=>{let{options:C}=X;return IQ(Q.getProvider("app").getImmediate(),Q.getProvider("installations-internal").getImmediate(),C)}),"PUBLIC")),(0,l.x)(new f.e("analytics-internal",(function(Q){try{const X=Q.getProvider(FQ).getImmediate();return{logEvent:(Q,C,l)=>CX(X,Q,C,l)}}catch(X){throw rQ.create("interop-component-reg-failed",{reason:X})}}),"PRIVATE")),(0,l.R)(hX,MX),(0,l.R)(hX,MX,"esm2017")}}]);