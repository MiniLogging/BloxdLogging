"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[79],{16185:(B,u,F)=>{F.r(u),F.d(u,{FlowGraphPlayAnimationBlock:()=>R});var Z=F(14739),V=F(14701),p=F(12949),G=F(16178);class R extends Z.c{constructor(B){super(B,["animationLoop","animationEnd","animationGroupLoop"]),this.config=B,this.speed=this.registerDataInput("speed",V.u),this.loop=this.registerDataInput("loop",V.f),this.from=this.registerDataInput("from",V.u,0),this.to=this.registerDataInput("to",V.u),this.currentFrame=this.registerDataOutput("currentFrame",V.u),this.currentTime=this.registerDataOutput("currentTime",V.u),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",V.c),this.animationGroup=this.registerDataInput("animationGroup",V.c,null===B||void 0===B?void 0:B.animationGroup),this.animation=this.registerDataInput("animation",V.c),this.object=this.registerDataInput("object",V.c)}_preparePendingTasks(B){const u=this.animationGroup.getValue(B),F=this.animation.getValue(B);if(!u&&!F)return this._reportError(B,"No animation or animation group provided");{const V=this.currentAnimationGroup.getValue(B);V&&V!==u&&V.dispose();let p=u;if(F&&!p){const u=this.object.getValue(B);if(!u)return this._reportError(B,"No target object provided");const Z=Array.isArray(F)?F:[F],V=Z[0].name;p=new G.AnimationGroup("flowGraphAnimationGroup-"+V+"-"+u.name,B.configuration.qu);let R=!1;const e=B._getGlobalContextVariable("interpolationAnimations",[]);for(const B of Z)p.addTargetedAnimation(B,u),-1!==e.indexOf(B.uniqueId)&&(R=!0);R&&this._checkInterpolationDuplications(B,Z,u)}const R=this.speed.getValue(B)||1,e=this.from.getValue(B)??0,s=this.to.getValue(B)||p.to,Y=!isFinite(s)||this.loop.getValue(B);this.currentAnimationGroup.setValue(p,B);const Q=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==Q.indexOf(p.uniqueId)&&p.stop();try{p.start(Y,R,e,s),p.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(B))),p.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(B))),p.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(B))),p.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(B))),Q.push(p.uniqueId),B._setGlobalContextVariable("currentlyRunningAnimationGroups",Q)}catch(Z){this._reportError(B,Z)}}}_reportError(B,u){super._reportError(B,u),this.currentFrame.setValue(-1,B),this.currentTime.setValue(-1,B)}_executeOnTick(B){const u=this.currentAnimationGroup.getValue(B);var F;u&&(this.currentFrame.setValue(u.getCurrentFrame(),B),this.currentTime.setValue((null===(F=u.animatables[0])||void 0===F?void 0:F.elapsedTime)??0,B))}_execute(B){this._startPendingTasks(B)}_onAnimationGroupEnd(B){this._removeFromCurrentlyRunning(B,this.currentAnimationGroup.getValue(B)),this._resetAfterCanceled(B),this.done._activateSignal(B)}_checkInterpolationDuplications(B,u,F){const Z=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const V of Z){const Z=B.assetsContext.animationGroups.find((B=>B.uniqueId===V));if(Z)for(const V of Z.targetedAnimations)for(const p of u)V.animation.targetProperty===p.targetProperty&&V.target===F&&this._stopAnimationGroup(B,Z)}}_stopAnimationGroup(B,u){u.stop(!0),u.dispose(),this._removeFromCurrentlyRunning(B,u)}_removeFromCurrentlyRunning(B,u){const F=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),Z=F.indexOf(u.uniqueId);-1!==Z&&(F.splice(Z,1),B._setGlobalContextVariable("currentlyRunningAnimationGroups",F))}_cancelPendingTasks(B){const u=this.currentAnimationGroup.getValue(B);u&&this._stopAnimationGroup(B,u)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,p.f)("FlowGraphPlayAnimationBlock",R)}}]);