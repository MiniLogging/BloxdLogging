"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[79],{15535:(E,U,g)=>{g.r(U),g.d(U,{FlowGraphPlayAnimationBlock:()=>u});var N=g(14094),L=g(14058),D=g(12292),S=g(15533);class u extends N.e{constructor(E){super(E,["animationLoop","animationEnd","animationGroupLoop"]),this.config=E,this.speed=this.registerDataInput("speed",L.t),this.loop=this.registerDataInput("loop",L.g),this.from=this.registerDataInput("from",L.t,0),this.to=this.registerDataInput("to",L.t),this.currentFrame=this.registerDataOutput("currentFrame",L.t),this.currentTime=this.registerDataOutput("currentTime",L.t),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",L.e),this.animationGroup=this.registerDataInput("animationGroup",L.e,null===E||void 0===E?void 0:E.animationGroup),this.animation=this.registerDataInput("animation",L.e),this.object=this.registerDataInput("object",L.e)}_preparePendingTasks(E){const U=this.animationGroup.getValue(E),g=this.animation.getValue(E);if(!U&&!g)return this._reportError(E,"No animation or animation group provided");{const L=this.currentAnimationGroup.getValue(E);L&&L!==U&&L.dispose();let D=U;if(g&&!D){const U=this.object.getValue(E);if(!U)return this._reportError(E,"No target object provided");const N=Array.isArray(g)?g:[g],L=N[0].name;D=new S.AnimationGroup("flowGraphAnimationGroup-"+L+"-"+U.name,E.configuration.yU);let u=!1;const s=E._getGlobalContextVariable("interpolationAnimations",[]);for(const E of N)D.addTargetedAnimation(E,U),-1!==s.indexOf(E.uniqueId)&&(u=!0);u&&this._checkInterpolationDuplications(E,N,U)}const u=this.speed.getValue(E)||1,s=this.from.getValue(E)??0,C=this.to.getValue(E)||D.to,B=!isFinite(C)||this.loop.getValue(E);this.currentAnimationGroup.setValue(D,E);const P=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==P.indexOf(D.uniqueId)&&D.stop();try{D.start(B,u,s,C),D.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(E))),D.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(E))),D.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(E))),D.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(E))),P.push(D.uniqueId),E._setGlobalContextVariable("currentlyRunningAnimationGroups",P)}catch(N){this._reportError(E,N)}}}_reportError(E,U){super._reportError(E,U),this.currentFrame.setValue(-1,E),this.currentTime.setValue(-1,E)}_executeOnTick(E){const U=this.currentAnimationGroup.getValue(E);var g;U&&(this.currentFrame.setValue(U.getCurrentFrame(),E),this.currentTime.setValue((null===(g=U.animatables[0])||void 0===g?void 0:g.elapsedTime)??0,E))}_execute(E){this._startPendingTasks(E)}_onAnimationGroupEnd(E){this._removeFromCurrentlyRunning(E,this.currentAnimationGroup.getValue(E)),this._resetAfterCanceled(E),this.done._activateSignal(E)}_checkInterpolationDuplications(E,U,g){const N=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const L of N){const N=E.assetsContext.animationGroups.find((E=>E.uniqueId===L));if(N)for(const L of N.targetedAnimations)for(const D of U)L.animation.targetProperty===D.targetProperty&&L.target===g&&this._stopAnimationGroup(E,N)}}_stopAnimationGroup(E,U){U.stop(!0),U.dispose(),this._removeFromCurrentlyRunning(E,U)}_removeFromCurrentlyRunning(E,U){const g=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),N=g.indexOf(U.uniqueId);-1!==N&&(g.splice(N,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",g))}_cancelPendingTasks(E){const U=this.currentAnimationGroup.getValue(E);U&&this._stopAnimationGroup(E,U)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,D.f)("FlowGraphPlayAnimationBlock",u)}}]);