"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[79],{14418:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphPlayAnimationBlock:()=>W});var C=Q(12995),z=Q(12951),t=Q(11265),g=Q(14411);class W extends C.c{constructor(F){super(F,["animationLoop","animationEnd","animationGroupLoop"]),this.config=F,this.speed=this.registerDataInput("speed",z.m),this.loop=this.registerDataInput("loop",z.e),this.from=this.registerDataInput("from",z.m,0),this.to=this.registerDataInput("to",z.m),this.currentFrame=this.registerDataOutput("currentFrame",z.m),this.currentTime=this.registerDataOutput("currentTime",z.m),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",z.b),this.animationGroup=this.registerDataInput("animationGroup",z.b,null===F||void 0===F?void 0:F.animationGroup),this.animation=this.registerDataInput("animation",z.b),this.object=this.registerDataInput("object",z.b)}_preparePendingTasks(F){const b=this.animationGroup.getValue(F),Q=this.animation.getValue(F);if(!b&&!Q)return this._reportError(F,"No animation or animation group provided");{const z=this.currentAnimationGroup.getValue(F);z&&z!==b&&z.dispose();let t=b;if(Q&&!t){const b=this.object.getValue(F);if(!b)return this._reportError(F,"No target object provided");const C=Array.isArray(Q)?Q:[Q],z=C[0].name;t=new g.AnimationGroup("flowGraphAnimationGroup-"+z+"-"+b.name,F.configuration.ZQ);let W=!1;const Z=F._getGlobalContextVariable("interpolationAnimations",[]);for(const F of C)t.addTargetedAnimation(F,b),-1!==Z.indexOf(F.uniqueId)&&(W=!0);W&&this._checkInterpolationDuplications(F,C,b)}const W=this.speed.getValue(F)||1,Z=this.from.getValue(F)??0,q=this.to.getValue(F)||t.to,G=!isFinite(q)||this.loop.getValue(F);this.currentAnimationGroup.setValue(t,F);const K=F._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==K.indexOf(t.uniqueId)&&t.stop();try{t.start(G,W,Z,q),t.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(F))),t.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(F))),t.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(F))),t.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(F))),K.push(t.uniqueId),F._setGlobalContextVariable("currentlyRunningAnimationGroups",K)}catch(C){this._reportError(F,C)}}}_reportError(F,b){super._reportError(F,b),this.currentFrame.setValue(-1,F),this.currentTime.setValue(-1,F)}_executeOnTick(F){const b=this.currentAnimationGroup.getValue(F);var Q;b&&(this.currentFrame.setValue(b.getCurrentFrame(),F),this.currentTime.setValue((null===(Q=b.animatables[0])||void 0===Q?void 0:Q.elapsedTime)??0,F))}_execute(F){this._startPendingTasks(F)}_onAnimationGroupEnd(F){this._removeFromCurrentlyRunning(F,this.currentAnimationGroup.getValue(F)),this._resetAfterCanceled(F),this.done._activateSignal(F)}_checkInterpolationDuplications(F,b,Q){const C=F._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const z of C){const C=F.assetsContext.animationGroups.find((F=>F.uniqueId===z));if(C)for(const z of C.targetedAnimations)for(const t of b)z.animation.targetProperty===t.targetProperty&&z.target===Q&&this._stopAnimationGroup(F,C)}}_stopAnimationGroup(F,b){b.stop(!0),b.dispose(),this._removeFromCurrentlyRunning(F,b)}_removeFromCurrentlyRunning(F,b){const Q=F._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),C=Q.indexOf(b.uniqueId);-1!==C&&(Q.splice(C,1),F._setGlobalContextVariable("currentlyRunningAnimationGroups",Q))}_cancelPendingTasks(F){const b=this.currentAnimationGroup.getValue(F);b&&this._stopAnimationGroup(F,b)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,t.g)("FlowGraphPlayAnimationBlock",W)}}]);