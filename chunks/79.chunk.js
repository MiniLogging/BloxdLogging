"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[79],{14911:(E,t,z)=>{z.r(t),z.d(t,{FlowGraphPlayAnimationBlock:()=>p});var A=z(13509),X=z(13458),R=z(11766),u=z(14907);class p extends A.c{constructor(E){super(E,["animationLoop","animationEnd","animationGroupLoop"]),this.config=E,this.speed=this.registerDataInput("speed",X.p),this.loop=this.registerDataInput("loop",X.d),this.from=this.registerDataInput("from",X.p,0),this.to=this.registerDataInput("to",X.p),this.currentFrame=this.registerDataOutput("currentFrame",X.p),this.currentTime=this.registerDataOutput("currentTime",X.p),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",X.c),this.animationGroup=this.registerDataInput("animationGroup",X.c,null===E||void 0===E?void 0:E.animationGroup),this.animation=this.registerDataInput("animation",X.c),this.object=this.registerDataInput("object",X.c)}_preparePendingTasks(E){const t=this.animationGroup.getValue(E),z=this.animation.getValue(E);if(!t&&!z)return this._reportError(E,"No animation or animation group provided");{const X=this.currentAnimationGroup.getValue(E);X&&X!==t&&X.dispose();let R=t;if(z&&!R){const t=this.object.getValue(E);if(!t)return this._reportError(E,"No target object provided");const A=Array.isArray(z)?z:[z],X=A[0].name;R=new u.AnimationGroup("flowGraphAnimationGroup-"+X+"-"+t.name,E.configuration.It);let p=!1;const C=E._getGlobalContextVariable("interpolationAnimations",[]);for(const E of A)R.addTargetedAnimation(E,t),-1!==C.indexOf(E.uniqueId)&&(p=!0);p&&this._checkInterpolationDuplications(E,A,t)}const p=this.speed.getValue(E)||1,C=this.from.getValue(E)??0,Z=this.to.getValue(E)||R.to,H=!isFinite(Z)||this.loop.getValue(E);this.currentAnimationGroup.setValue(R,E);const h=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==h.indexOf(R.uniqueId)&&R.stop();try{R.start(H,p,C,Z),R.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(E))),R.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(E))),R.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(E))),R.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(E))),h.push(R.uniqueId),E._setGlobalContextVariable("currentlyRunningAnimationGroups",h)}catch(A){this._reportError(E,A)}}}_reportError(E,t){super._reportError(E,t),this.currentFrame.setValue(-1,E),this.currentTime.setValue(-1,E)}_executeOnTick(E){const t=this.currentAnimationGroup.getValue(E);var z;t&&(this.currentFrame.setValue(t.getCurrentFrame(),E),this.currentTime.setValue((null===(z=t.animatables[0])||void 0===z?void 0:z.elapsedTime)??0,E))}_execute(E){this._startPendingTasks(E)}_onAnimationGroupEnd(E){this._removeFromCurrentlyRunning(E,this.currentAnimationGroup.getValue(E)),this._resetAfterCanceled(E),this.done._activateSignal(E)}_checkInterpolationDuplications(E,t,z){const A=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const X of A){const A=E.assetsContext.animationGroups.find((E=>E.uniqueId===X));if(A)for(const X of A.targetedAnimations)for(const R of t)X.animation.targetProperty===R.targetProperty&&X.target===z&&this._stopAnimationGroup(E,A)}}_stopAnimationGroup(E,t){t.stop(!0),t.dispose(),this._removeFromCurrentlyRunning(E,t)}_removeFromCurrentlyRunning(E,t){const z=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),A=z.indexOf(t.uniqueId);-1!==A&&(z.splice(A,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",z))}_cancelPendingTasks(E){const t=this.currentAnimationGroup.getValue(E);t&&this._stopAnimationGroup(E,t)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,R.f)("FlowGraphPlayAnimationBlock",p)}}]);