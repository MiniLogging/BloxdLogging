"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[79],{14906:(K,O,F)=>{F.r(O),F.d(O,{FlowGraphPlayAnimationBlock:()=>J});var f=F(13487),r=F(13441),l=F(11661),q=F(14899);class J extends f.e{constructor(K){super(K,["animationLoop","animationEnd","animationGroupLoop"]),this.config=K,this.speed=this.registerDataInput("speed",r.s),this.loop=this.registerDataInput("loop",r.e),this.from=this.registerDataInput("from",r.s,0),this.to=this.registerDataInput("to",r.s),this.currentFrame=this.registerDataOutput("currentFrame",r.s),this.currentTime=this.registerDataOutput("currentTime",r.s),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",r.d),this.animationGroup=this.registerDataInput("animationGroup",r.d,null===K||void 0===K?void 0:K.animationGroup),this.animation=this.registerDataInput("animation",r.d),this.object=this.registerDataInput("object",r.d)}_preparePendingTasks(K){const O=this.animationGroup.getValue(K),F=this.animation.getValue(K);if(!O&&!F)return this._reportError(K,"No animation or animation group provided");{const r=this.currentAnimationGroup.getValue(K);r&&r!==O&&r.dispose();let l=O;if(F&&!l){const O=this.object.getValue(K);if(!O)return this._reportError(K,"No target object provided");const f=Array.isArray(F)?F:[F],r=f[0].name;l=new q.AnimationGroup("flowGraphAnimationGroup-"+r+"-"+O.name,K.configuration.kO);let J=!1;const c=K._getGlobalContextVariable("interpolationAnimations",[]);for(const K of f)l.addTargetedAnimation(K,O),-1!==c.indexOf(K.uniqueId)&&(J=!0);J&&this._checkInterpolationDuplications(K,f,O)}const J=this.speed.getValue(K)||1,c=this.from.getValue(K)??0,E=this.to.getValue(K)||l.to,M=!isFinite(E)||this.loop.getValue(K);this.currentAnimationGroup.setValue(l,K);const t=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==t.indexOf(l.uniqueId)&&l.stop();try{l.start(M,J,c,E),l.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(K))),l.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(K))),l.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(K))),l.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(K))),t.push(l.uniqueId),K._setGlobalContextVariable("currentlyRunningAnimationGroups",t)}catch(f){this._reportError(K,f)}}}_reportError(K,O){super._reportError(K,O),this.currentFrame.setValue(-1,K),this.currentTime.setValue(-1,K)}_executeOnTick(K){const O=this.currentAnimationGroup.getValue(K);var F;O&&(this.currentFrame.setValue(O.getCurrentFrame(),K),this.currentTime.setValue((null===(F=O.animatables[0])||void 0===F?void 0:F.elapsedTime)??0,K))}_execute(K){this._startPendingTasks(K)}_onAnimationGroupEnd(K){this._removeFromCurrentlyRunning(K,this.currentAnimationGroup.getValue(K)),this._resetAfterCanceled(K),this.done._activateSignal(K)}_checkInterpolationDuplications(K,O,F){const f=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const r of f){const f=K.assetsContext.animationGroups.find((K=>K.uniqueId===r));if(f)for(const r of f.targetedAnimations)for(const l of O)r.animation.targetProperty===l.targetProperty&&r.target===F&&this._stopAnimationGroup(K,f)}}_stopAnimationGroup(K,O){O.stop(!0),O.dispose(),this._removeFromCurrentlyRunning(K,O)}_removeFromCurrentlyRunning(K,O){const F=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),f=F.indexOf(O.uniqueId);-1!==f&&(F.splice(f,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",F))}_cancelPendingTasks(K){const O=this.currentAnimationGroup.getValue(K);O&&this._stopAnimationGroup(K,O)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,l.g)("FlowGraphPlayAnimationBlock",J)}}]);