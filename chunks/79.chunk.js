"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[79],{14482:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphPlayAnimationBlock:()=>o});var Z=i(13105),U=i(13064),C=i(11253),B=i(14479);class o extends Z.d{constructor(k){super(k,["animationLoop","animationEnd","animationGroupLoop"]),this.config=k,this.speed=this.registerDataInput("speed",U.o),this.loop=this.registerDataInput("loop",U.f),this.from=this.registerDataInput("from",U.o,0),this.to=this.registerDataInput("to",U.o),this.currentFrame=this.registerDataOutput("currentFrame",U.o),this.currentTime=this.registerDataOutput("currentTime",U.o),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",U.b),this.animationGroup=this.registerDataInput("animationGroup",U.b,null===k||void 0===k?void 0:k.animationGroup),this.animation=this.registerDataInput("animation",U.b),this.object=this.registerDataInput("object",U.b)}_preparePendingTasks(k){const Q=this.animationGroup.getValue(k),i=this.animation.getValue(k);if(!Q&&!i)return this._reportError(k,"No animation or animation group provided");{const U=this.currentAnimationGroup.getValue(k);U&&U!==Q&&U.dispose();let C=Q;if(i&&!C){const Q=this.object.getValue(k);if(!Q)return this._reportError(k,"No target object provided");const Z=Array.isArray(i)?i:[i],U=Z[0].name;C=new B.AnimationGroup("flowGraphAnimationGroup-"+U+"-"+Q.name,k.configuration.lQ);let o=!1;const m=k._getGlobalContextVariable("interpolationAnimations",[]);for(const k of Z)C.addTargetedAnimation(k,Q),-1!==m.indexOf(k.uniqueId)&&(o=!0);o&&this._checkInterpolationDuplications(k,Z,Q)}const o=this.speed.getValue(k)||1,m=this.from.getValue(k)??0,O=this.to.getValue(k)||C.to,J=!isFinite(O)||this.loop.getValue(k);this.currentAnimationGroup.setValue(C,k);const G=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==G.indexOf(C.uniqueId)&&C.stop();try{C.start(J,o,m,O),C.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(k))),C.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(k))),C.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(k))),C.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(k))),G.push(C.uniqueId),k._setGlobalContextVariable("currentlyRunningAnimationGroups",G)}catch(Z){this._reportError(k,Z)}}}_reportError(k,Q){super._reportError(k,Q),this.currentFrame.setValue(-1,k),this.currentTime.setValue(-1,k)}_executeOnTick(k){const Q=this.currentAnimationGroup.getValue(k);var i;Q&&(this.currentFrame.setValue(Q.getCurrentFrame(),k),this.currentTime.setValue((null===(i=Q.animatables[0])||void 0===i?void 0:i.elapsedTime)??0,k))}_execute(k){this._startPendingTasks(k)}_onAnimationGroupEnd(k){this._removeFromCurrentlyRunning(k,this.currentAnimationGroup.getValue(k)),this._resetAfterCanceled(k),this.done._activateSignal(k)}_checkInterpolationDuplications(k,Q,i){const Z=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of Z){const Z=k.assetsContext.animationGroups.find((k=>k.uniqueId===U));if(Z)for(const U of Z.targetedAnimations)for(const C of Q)U.animation.targetProperty===C.targetProperty&&U.target===i&&this._stopAnimationGroup(k,Z)}}_stopAnimationGroup(k,Q){Q.stop(!0),Q.dispose(),this._removeFromCurrentlyRunning(k,Q)}_removeFromCurrentlyRunning(k,Q){const i=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),Z=i.indexOf(Q.uniqueId);-1!==Z&&(i.splice(Z,1),k._setGlobalContextVariable("currentlyRunningAnimationGroups",i))}_cancelPendingTasks(k){const Q=this.currentAnimationGroup.getValue(k);Q&&this._stopAnimationGroup(k,Q)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,C.e)("FlowGraphPlayAnimationBlock",o)}}]);