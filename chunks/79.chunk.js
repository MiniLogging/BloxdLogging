"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[79],{15782:(M,A,O)=>{O.r(A),O.d(A,{FlowGraphPlayAnimationBlock:()=>c});var S=O(14284),z=O(14238),Q=O(12919),X=O(15778);class c extends S.d{constructor(M){super(M,["animationLoop","animationEnd","animationGroupLoop"]),this.config=M,this.speed=this.registerDataInput("speed",z.t),this.loop=this.registerDataInput("loop",z.f),this.from=this.registerDataInput("from",z.t,0),this.to=this.registerDataInput("to",z.t),this.currentFrame=this.registerDataOutput("currentFrame",z.t),this.currentTime=this.registerDataOutput("currentTime",z.t),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",z.b),this.animationGroup=this.registerDataInput("animationGroup",z.b,null===M||void 0===M?void 0:M.animationGroup),this.animation=this.registerDataInput("animation",z.b),this.object=this.registerDataInput("object",z.b)}_preparePendingTasks(M){const A=this.animationGroup.getValue(M),O=this.animation.getValue(M);if(!A&&!O)return this._reportError(M,"No animation or animation group provided");{var S;const Q=this.currentAnimationGroup.getValue(M);Q&&Q!==A&&Q.dispose();let c=A;if(O&&!c){const A=this.object.getValue(M);if(!A)return this._reportError(M,"No target object provided");const S=Array.isArray(O)?O:[O],z=S[0].name;c=new X.AnimationGroup("flowGraphAnimationGroup-"+z+"-"+A.name,M.configuration.wA);let Q=!1;const j=M._getGlobalContextVariable("interpolationAnimations",[]);for(const M of S)c.addTargetedAnimation(M,A),-1!==j.indexOf(M.uniqueId)&&(Q=!0);Q&&this._checkInterpolationDuplications(M,S,A)}const j=this.speed.getValue(M)||1,B=null!==(S=this.from.getValue(M))&&void 0!==S?S:0,g=this.to.getValue(M)||c.to,e=!isFinite(g)||this.loop.getValue(M);this.currentAnimationGroup.setValue(c,M);const T=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==T.indexOf(c.uniqueId)&&c.stop();try{c.start(e,j,B,g),c.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(M))),c.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(M))),c.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(M))),c.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(M))),T.push(c.uniqueId),M._setGlobalContextVariable("currentlyRunningAnimationGroups",T)}catch(z){this._reportError(M,z)}}}_reportError(M,A){super._reportError(M,A),this.currentFrame.setValue(-1,M),this.currentTime.setValue(-1,M)}_executeOnTick(M){const A=this.currentAnimationGroup.getValue(M);var O,S;A&&(this.currentFrame.setValue(A.getCurrentFrame(),M),this.currentTime.setValue(null!==(O=null===(S=A.animatables[0])||void 0===S?void 0:S.elapsedTime)&&void 0!==O?O:0,M))}_execute(M){this._startPendingTasks(M)}_onAnimationGroupEnd(M){this._removeFromCurrentlyRunning(M,this.currentAnimationGroup.getValue(M)),this._resetAfterCanceled(M),this.done._activateSignal(M)}_checkInterpolationDuplications(M,A,O){const S=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const z of S){const S=M.assetsContext.animationGroups.find((M=>M.uniqueId===z));if(S)for(const z of S.targetedAnimations)for(const Q of A)z.animation.targetProperty===Q.targetProperty&&z.target===O&&this._stopAnimationGroup(M,S)}}_stopAnimationGroup(M,A){A.stop(!0),A.dispose(),this._removeFromCurrentlyRunning(M,A)}_removeFromCurrentlyRunning(M,A){const O=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),S=O.indexOf(A.uniqueId);-1!==S&&(O.splice(S,1),M._setGlobalContextVariable("currentlyRunningAnimationGroups",O))}_cancelPendingTasks(M){const A=this.currentAnimationGroup.getValue(M);A&&this._stopAnimationGroup(M,A)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,Q.g)("FlowGraphPlayAnimationBlock",c)}}]);