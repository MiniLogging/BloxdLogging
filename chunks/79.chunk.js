"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[79],{15906:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphPlayAnimationBlock:()=>h});var J=Z(14458),S=Z(14405),P=Z(12688),v=Z(15903);class h extends J.c{constructor(t){super(t,["animationLoop","animationEnd","animationGroupLoop"]),this.config=t,this.speed=this.registerDataInput("speed",S.q),this.loop=this.registerDataInput("loop",S.f),this.from=this.registerDataInput("from",S.q,0),this.to=this.registerDataInput("to",S.q),this.currentFrame=this.registerDataOutput("currentFrame",S.q),this.currentTime=this.registerDataOutput("currentTime",S.q),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",S.c),this.animationGroup=this.registerDataInput("animationGroup",S.c,null===t||void 0===t?void 0:t.animationGroup),this.animation=this.registerDataInput("animation",S.c),this.object=this.registerDataInput("object",S.c)}_preparePendingTasks(t){const b=this.animationGroup.getValue(t),Z=this.animation.getValue(t);if(!b&&!Z)return this._reportError(t,"No animation or animation group provided");{const S=this.currentAnimationGroup.getValue(t);S&&S!==b&&S.dispose();let P=b;if(Z&&!P){const b=this.object.getValue(t);if(!b)return this._reportError(t,"No target object provided");const J=Array.isArray(Z)?Z:[Z],S=J[0].name;P=new v.AnimationGroup("flowGraphAnimationGroup-"+S+"-"+b.name,t.configuration.PZ);let h=!1;const C=t._getGlobalContextVariable("interpolationAnimations",[]);for(const t of J)P.addTargetedAnimation(t,b),-1!==C.indexOf(t.uniqueId)&&(h=!0);h&&this._checkInterpolationDuplications(t,J,b)}const h=this.speed.getValue(t)||1,C=this.from.getValue(t)??0,Y=this.to.getValue(t)||P.to,g=!isFinite(Y)||this.loop.getValue(t);this.currentAnimationGroup.setValue(P,t);const I=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==I.indexOf(P.uniqueId)&&P.stop();try{P.start(g,h,C,Y),P.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(t))),P.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(t))),P.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(t))),P.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(t))),I.push(P.uniqueId),t._setGlobalContextVariable("currentlyRunningAnimationGroups",I)}catch(J){this._reportError(t,J)}}}_reportError(t,b){super._reportError(t,b),this.currentFrame.setValue(-1,t),this.currentTime.setValue(-1,t)}_executeOnTick(t){const b=this.currentAnimationGroup.getValue(t);var Z;b&&(this.currentFrame.setValue(b.getCurrentFrame(),t),this.currentTime.setValue((null===(Z=b.animatables[0])||void 0===Z?void 0:Z.elapsedTime)??0,t))}_execute(t){this._startPendingTasks(t)}_onAnimationGroupEnd(t){this._removeFromCurrentlyRunning(t,this.currentAnimationGroup.getValue(t)),this._resetAfterCanceled(t),this.done._activateSignal(t)}_checkInterpolationDuplications(t,b,Z){const J=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const S of J){const J=t.assetsContext.animationGroups.find((t=>t.uniqueId===S));if(J)for(const S of J.targetedAnimations)for(const P of b)S.animation.targetProperty===P.targetProperty&&S.target===Z&&this._stopAnimationGroup(t,J)}}_stopAnimationGroup(t,b){b.stop(!0),b.dispose(),this._removeFromCurrentlyRunning(t,b)}_removeFromCurrentlyRunning(t,b){const Z=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),J=Z.indexOf(b.uniqueId);-1!==J&&(Z.splice(J,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",Z))}_cancelPendingTasks(t){const b=this.currentAnimationGroup.getValue(t);b&&this._stopAnimationGroup(t,b)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,P.f)("FlowGraphPlayAnimationBlock",h)}}]);