"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[79],{15523:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphPlayAnimationBlock:()=>i});var A=V(14085),t=V(14036),n=V(12344),q=V(15517);class i extends A.c{constructor(N){super(N,["animationLoop","animationEnd","animationGroupLoop"]),this.config=N,this.speed=this.registerDataInput("speed",t.p),this.loop=this.registerDataInput("loop",t.d),this.from=this.registerDataInput("from",t.p,0),this.to=this.registerDataInput("to",t.p),this.currentFrame=this.registerDataOutput("currentFrame",t.p),this.currentTime=this.registerDataOutput("currentTime",t.p),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",t.b),this.animationGroup=this.registerDataInput("animationGroup",t.b,null===N||void 0===N?void 0:N.animationGroup),this.animation=this.registerDataInput("animation",t.b),this.object=this.registerDataInput("object",t.b)}_preparePendingTasks(N){const U=this.animationGroup.getValue(N),V=this.animation.getValue(N);if(!U&&!V)return this._reportError(N,"No animation or animation group provided");{const t=this.currentAnimationGroup.getValue(N);t&&t!==U&&t.dispose();let n=U;if(V&&!n){const U=this.object.getValue(N);if(!U)return this._reportError(N,"No target object provided");const A=Array.isArray(V)?V:[V],t=A[0].name;n=new q.AnimationGroup("flowGraphAnimationGroup-"+t+"-"+U.name,N.configuration.JU);let i=!1;const z=N._getGlobalContextVariable("interpolationAnimations",[]);for(const N of A)n.addTargetedAnimation(N,U),-1!==z.indexOf(N.uniqueId)&&(i=!0);i&&this._checkInterpolationDuplications(N,A,U)}const i=this.speed.getValue(N)||1,z=this.from.getValue(N)??0,S=this.to.getValue(N)||n.to,E=!isFinite(S)||this.loop.getValue(N);this.currentAnimationGroup.setValue(n,N);const p=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==p.indexOf(n.uniqueId)&&n.stop();try{n.start(E,i,z,S),n.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(N))),n.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(N))),n.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(N))),n.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(N))),p.push(n.uniqueId),N._setGlobalContextVariable("currentlyRunningAnimationGroups",p)}catch(A){this._reportError(N,A)}}}_reportError(N,U){super._reportError(N,U),this.currentFrame.setValue(-1,N),this.currentTime.setValue(-1,N)}_executeOnTick(N){const U=this.currentAnimationGroup.getValue(N);var V;U&&(this.currentFrame.setValue(U.getCurrentFrame(),N),this.currentTime.setValue((null===(V=U.animatables[0])||void 0===V?void 0:V.elapsedTime)??0,N))}_execute(N){this._startPendingTasks(N)}_onAnimationGroupEnd(N){this._removeFromCurrentlyRunning(N,this.currentAnimationGroup.getValue(N)),this._resetAfterCanceled(N),this.done._activateSignal(N)}_checkInterpolationDuplications(N,U,V){const A=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const t of A){const A=N.assetsContext.animationGroups.find((N=>N.uniqueId===t));if(A)for(const t of A.targetedAnimations)for(const n of U)t.animation.targetProperty===n.targetProperty&&t.target===V&&this._stopAnimationGroup(N,A)}}_stopAnimationGroup(N,U){U.stop(!0),U.dispose(),this._removeFromCurrentlyRunning(N,U)}_removeFromCurrentlyRunning(N,U){const V=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),A=V.indexOf(U.uniqueId);-1!==A&&(V.splice(A,1),N._setGlobalContextVariable("currentlyRunningAnimationGroups",V))}_cancelPendingTasks(N){const U=this.currentAnimationGroup.getValue(N);U&&this._stopAnimationGroup(N,U)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,n.e)("FlowGraphPlayAnimationBlock",i)}}]);