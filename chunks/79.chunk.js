"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[79],{15814:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphPlayAnimationBlock:()=>h});var q=W(14319),Q=W(14274),C=W(12560),T=W(15805);class h extends q.c{constructor(r){super(r,["animationLoop","animationEnd","animationGroupLoop"]),this.config=r,this.speed=this.registerDataInput("speed",Q.r),this.loop=this.registerDataInput("loop",Q.d),this.from=this.registerDataInput("from",Q.r,0),this.to=this.registerDataInput("to",Q.r),this.currentFrame=this.registerDataOutput("currentFrame",Q.r),this.currentTime=this.registerDataOutput("currentTime",Q.r),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",Q.c),this.animationGroup=this.registerDataInput("animationGroup",Q.c,null===r||void 0===r?void 0:r.animationGroup),this.animation=this.registerDataInput("animation",Q.c),this.object=this.registerDataInput("object",Q.c)}_preparePendingTasks(r){const O=this.animationGroup.getValue(r),W=this.animation.getValue(r);if(!O&&!W)return this._reportError(r,"No animation or animation group provided");{const Q=this.currentAnimationGroup.getValue(r);Q&&Q!==O&&Q.dispose();let C=O;if(W&&!C){const O=this.object.getValue(r);if(!O)return this._reportError(r,"No target object provided");const q=Array.isArray(W)?W:[W],Q=q[0].name;C=new T.AnimationGroup("flowGraphAnimationGroup-"+Q+"-"+O.name,r.configuration.GO);let h=!1;const J=r._getGlobalContextVariable("interpolationAnimations",[]);for(const r of q)C.addTargetedAnimation(r,O),-1!==J.indexOf(r.uniqueId)&&(h=!0);h&&this._checkInterpolationDuplications(r,q,O)}const h=this.speed.getValue(r)||1,J=this.from.getValue(r)??0,mr=this.to.getValue(r)||C.to,d=!isFinite(mr)||this.loop.getValue(r);this.currentAnimationGroup.setValue(C,r);const v=r._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==v.indexOf(C.uniqueId)&&C.stop();try{C.start(d,h,J,mr),C.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(r))),C.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(r))),C.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(r))),C.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(r))),v.push(C.uniqueId),r._setGlobalContextVariable("currentlyRunningAnimationGroups",v)}catch(q){this._reportError(r,q)}}}_reportError(r,O){super._reportError(r,O),this.currentFrame.setValue(-1,r),this.currentTime.setValue(-1,r)}_executeOnTick(r){const O=this.currentAnimationGroup.getValue(r);var W;O&&(this.currentFrame.setValue(O.getCurrentFrame(),r),this.currentTime.setValue((null===(W=O.animatables[0])||void 0===W?void 0:W.elapsedTime)??0,r))}_execute(r){this._startPendingTasks(r)}_onAnimationGroupEnd(r){this._removeFromCurrentlyRunning(r,this.currentAnimationGroup.getValue(r)),this._resetAfterCanceled(r),this.done._activateSignal(r)}_checkInterpolationDuplications(r,O,W){const q=r._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Q of q){const q=r.assetsContext.animationGroups.find((r=>r.uniqueId===Q));if(q)for(const Q of q.targetedAnimations)for(const C of O)Q.animation.targetProperty===C.targetProperty&&Q.target===W&&this._stopAnimationGroup(r,q)}}_stopAnimationGroup(r,O){O.stop(!0),O.dispose(),this._removeFromCurrentlyRunning(r,O)}_removeFromCurrentlyRunning(r,O){const W=r._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),q=W.indexOf(O.uniqueId);-1!==q&&(W.splice(q,1),r._setGlobalContextVariable("currentlyRunningAnimationGroups",W))}_cancelPendingTasks(r){const O=this.currentAnimationGroup.getValue(r);O&&this._stopAnimationGroup(r,O)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,C.e)("FlowGraphPlayAnimationBlock",h)}}]);