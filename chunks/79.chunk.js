"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[79],{15832:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphPlayAnimationBlock:()=>O});var G=T(14288),B=T(14237),L=T(12651),f=T(15827);class O extends G.e{constructor(K){super(K,["animationLoop","animationEnd","animationGroupLoop"]),this.config=K,this.speed=this.registerDataInput("speed",B.q),this.loop=this.registerDataInput("loop",B.d),this.from=this.registerDataInput("from",B.q,0),this.to=this.registerDataInput("to",B.q),this.currentFrame=this.registerDataOutput("currentFrame",B.q),this.currentTime=this.registerDataOutput("currentTime",B.q),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",B.b),this.animationGroup=this.registerDataInput("animationGroup",B.b,null===K||void 0===K?void 0:K.animationGroup),this.animation=this.registerDataInput("animation",B.b),this.object=this.registerDataInput("object",B.b)}_preparePendingTasks(K){const A=this.animationGroup.getValue(K),T=this.animation.getValue(K);if(!A&&!T)return this._reportError(K,"No animation or animation group provided");{const B=this.currentAnimationGroup.getValue(K);B&&B!==A&&B.dispose();let L=A;if(T&&!L){const A=this.object.getValue(K);if(!A)return this._reportError(K,"No target object provided");const G=Array.isArray(T)?T:[T],B=G[0].name;L=new f.AnimationGroup("flowGraphAnimationGroup-"+B+"-"+A.name,K.configuration.dA);let O=!1;const C=K._getGlobalContextVariable("interpolationAnimations",[]);for(const K of G)L.addTargetedAnimation(K,A),-1!==C.indexOf(K.uniqueId)&&(O=!0);O&&this._checkInterpolationDuplications(K,G,A)}const O=this.speed.getValue(K)||1,C=this.from.getValue(K)??0,Q=this.to.getValue(K)||L.to,Y=!isFinite(Q)||this.loop.getValue(K);this.currentAnimationGroup.setValue(L,K);const Z=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==Z.indexOf(L.uniqueId)&&L.stop();try{L.start(Y,O,C,Q),L.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(K))),L.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(K))),L.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(K))),L.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(K))),Z.push(L.uniqueId),K._setGlobalContextVariable("currentlyRunningAnimationGroups",Z)}catch(G){this._reportError(K,G)}}}_reportError(K,A){super._reportError(K,A),this.currentFrame.setValue(-1,K),this.currentTime.setValue(-1,K)}_executeOnTick(K){const A=this.currentAnimationGroup.getValue(K);var T;A&&(this.currentFrame.setValue(A.getCurrentFrame(),K),this.currentTime.setValue((null===(T=A.animatables[0])||void 0===T?void 0:T.elapsedTime)??0,K))}_execute(K){this._startPendingTasks(K)}_onAnimationGroupEnd(K){this._removeFromCurrentlyRunning(K,this.currentAnimationGroup.getValue(K)),this._resetAfterCanceled(K),this.done._activateSignal(K)}_checkInterpolationDuplications(K,A,T){const G=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const B of G){const G=K.assetsContext.animationGroups.find((K=>K.uniqueId===B));if(G)for(const B of G.targetedAnimations)for(const L of A)B.animation.targetProperty===L.targetProperty&&B.target===T&&this._stopAnimationGroup(K,G)}}_stopAnimationGroup(K,A){A.stop(!0),A.dispose(),this._removeFromCurrentlyRunning(K,A)}_removeFromCurrentlyRunning(K,A){const T=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),G=T.indexOf(A.uniqueId);-1!==G&&(T.splice(G,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",T))}_cancelPendingTasks(K){const A=this.currentAnimationGroup.getValue(K);A&&this._stopAnimationGroup(K,A)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,L.c)("FlowGraphPlayAnimationBlock",O)}}]);