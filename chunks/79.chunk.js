"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[79],{14564:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphPlayAnimationBlock:()=>b});var l=h(13100),M=h(13060),O=h(11293),u=h(14557);class b extends l.e{constructor(m){super(m,["animationLoop","animationEnd","animationGroupLoop"]),this.config=m,this.speed=this.registerDataInput("speed",M.p),this.loop=this.registerDataInput("loop",M.e),this.from=this.registerDataInput("from",M.p,0),this.to=this.registerDataInput("to",M.p),this.currentFrame=this.registerDataOutput("currentFrame",M.p),this.currentTime=this.registerDataOutput("currentTime",M.p),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",M.b),this.animationGroup=this.registerDataInput("animationGroup",M.b,null===m||void 0===m?void 0:m.animationGroup),this.animation=this.registerDataInput("animation",M.b),this.object=this.registerDataInput("object",M.b)}_preparePendingTasks(m){const S=this.animationGroup.getValue(m),h=this.animation.getValue(m);if(!S&&!h)return this._reportError(m,"No animation or animation group provided");{const M=this.currentAnimationGroup.getValue(m);M&&M!==S&&M.dispose();let O=S;if(h&&!O){const S=this.object.getValue(m);if(!S)return this._reportError(m,"No target object provided");const l=Array.isArray(h)?h:[h],M=l[0].name;O=new u.AnimationGroup("flowGraphAnimationGroup-"+M+"-"+S.name,m.configuration.US);let b=!1;const q=m._getGlobalContextVariable("interpolationAnimations",[]);for(const m of l)O.addTargetedAnimation(m,S),-1!==q.indexOf(m.uniqueId)&&(b=!0);b&&this._checkInterpolationDuplications(m,l,S)}const b=this.speed.getValue(m)||1,q=this.from.getValue(m)??0,Y=this.to.getValue(m)||O.to,V=!isFinite(Y)||this.loop.getValue(m);this.currentAnimationGroup.setValue(O,m);const I=m._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==I.indexOf(O.uniqueId)&&O.stop();try{O.start(V,b,q,Y),O.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(m))),O.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(m))),O.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(m))),O.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(m))),I.push(O.uniqueId),m._setGlobalContextVariable("currentlyRunningAnimationGroups",I)}catch(l){this._reportError(m,l)}}}_reportError(m,S){super._reportError(m,S),this.currentFrame.setValue(-1,m),this.currentTime.setValue(-1,m)}_executeOnTick(m){const S=this.currentAnimationGroup.getValue(m);var h;S&&(this.currentFrame.setValue(S.getCurrentFrame(),m),this.currentTime.setValue((null===(h=S.animatables[0])||void 0===h?void 0:h.elapsedTime)??0,m))}_execute(m){this._startPendingTasks(m)}_onAnimationGroupEnd(m){this._removeFromCurrentlyRunning(m,this.currentAnimationGroup.getValue(m)),this._resetAfterCanceled(m),this.done._activateSignal(m)}_checkInterpolationDuplications(m,S,h){const l=m._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const M of l){const l=m.assetsContext.animationGroups.find((m=>m.uniqueId===M));if(l)for(const M of l.targetedAnimations)for(const O of S)M.animation.targetProperty===O.targetProperty&&M.target===h&&this._stopAnimationGroup(m,l)}}_stopAnimationGroup(m,S){S.stop(!0),S.dispose(),this._removeFromCurrentlyRunning(m,S)}_removeFromCurrentlyRunning(m,S){const h=m._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),l=h.indexOf(S.uniqueId);-1!==l&&(h.splice(l,1),m._setGlobalContextVariable("currentlyRunningAnimationGroups",h))}_cancelPendingTasks(m){const S=this.currentAnimationGroup.getValue(m);S&&this._stopAnimationGroup(m,S)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,O.e)("FlowGraphPlayAnimationBlock",b)}}]);