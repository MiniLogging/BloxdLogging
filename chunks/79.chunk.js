"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[79],{14428:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphPlayAnimationBlock:()=>h});var q=M(13045),w=M(13004),u=M(11242),y=M(14419);class h extends q.c{constructor(K){super(K,["animationLoop","animationEnd","animationGroupLoop"]),this.config=K,this.speed=this.registerDataInput("speed",w.x),this.loop=this.registerDataInput("loop",w.h),this.from=this.registerDataInput("from",w.x,0),this.to=this.registerDataInput("to",w.x),this.currentFrame=this.registerDataOutput("currentFrame",w.x),this.currentTime=this.registerDataOutput("currentTime",w.x),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",w.d),this.animationGroup=this.registerDataInput("animationGroup",w.d,null===K||void 0===K?void 0:K.animationGroup),this.animation=this.registerDataInput("animation",w.d),this.object=this.registerDataInput("object",w.d)}_preparePendingTasks(K){const H=this.animationGroup.getValue(K),M=this.animation.getValue(K);if(!H&&!M)return this._reportError(K,"No animation or animation group provided");{const w=this.currentAnimationGroup.getValue(K);w&&w!==H&&w.dispose();let u=H;if(M&&!u){const H=this.object.getValue(K);if(!H)return this._reportError(K,"No target object provided");const q=Array.isArray(M)?M:[M],w=q[0].name;u=new y.AnimationGroup("flowGraphAnimationGroup-"+w+"-"+H.name,K.configuration.SH);let h=!1;const W=K._getGlobalContextVariable("interpolationAnimations",[]);for(const K of q)u.addTargetedAnimation(K,H),-1!==W.indexOf(K.uniqueId)&&(h=!0);h&&this._checkInterpolationDuplications(K,q,H)}const h=this.speed.getValue(K)||1,W=this.from.getValue(K)??0,I=this.to.getValue(K)||u.to,f=!isFinite(I)||this.loop.getValue(K);this.currentAnimationGroup.setValue(u,K);const z=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==z.indexOf(u.uniqueId)&&u.stop();try{u.start(f,h,W,I),u.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(K))),u.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(K))),u.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(K))),u.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(K))),z.push(u.uniqueId),K._setGlobalContextVariable("currentlyRunningAnimationGroups",z)}catch(q){this._reportError(K,q)}}}_reportError(K,H){super._reportError(K,H),this.currentFrame.setValue(-1,K),this.currentTime.setValue(-1,K)}_executeOnTick(K){const H=this.currentAnimationGroup.getValue(K);var M;H&&(this.currentFrame.setValue(H.getCurrentFrame(),K),this.currentTime.setValue((null===(M=H.animatables[0])||void 0===M?void 0:M.elapsedTime)??0,K))}_execute(K){this._startPendingTasks(K)}_onAnimationGroupEnd(K){this._removeFromCurrentlyRunning(K,this.currentAnimationGroup.getValue(K)),this._resetAfterCanceled(K),this.done._activateSignal(K)}_checkInterpolationDuplications(K,H,M){const q=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of q){const q=K.assetsContext.animationGroups.find((K=>K.uniqueId===w));if(q)for(const w of q.targetedAnimations)for(const u of H)w.animation.targetProperty===u.targetProperty&&w.target===M&&this._stopAnimationGroup(K,q)}}_stopAnimationGroup(K,H){H.stop(!0),H.dispose(),this._removeFromCurrentlyRunning(K,H)}_removeFromCurrentlyRunning(K,H){const M=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),q=M.indexOf(H.uniqueId);-1!==q&&(M.splice(q,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",M))}_cancelPendingTasks(K){const H=this.currentAnimationGroup.getValue(K);H&&this._stopAnimationGroup(K,H)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,u.f)("FlowGraphPlayAnimationBlock",h)}}]);