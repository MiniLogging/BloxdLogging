"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[79],{15130:(b,X,P)=>{P.r(X),P.d(X,{FlowGraphPlayAnimationBlock:()=>a});var Q=P(13670),S=P(13631),d=P(11802),N=P(15121);class a extends Q.b{constructor(b){super(b,["animationLoop","animationEnd","animationGroupLoop"]),this.config=b,this.speed=this.registerDataInput("speed",S.t),this.loop=this.registerDataInput("loop",S.h),this.from=this.registerDataInput("from",S.t,0),this.to=this.registerDataInput("to",S.t),this.currentFrame=this.registerDataOutput("currentFrame",S.t),this.currentTime=this.registerDataOutput("currentTime",S.t),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",S.e),this.animationGroup=this.registerDataInput("animationGroup",S.e,null===b||void 0===b?void 0:b.animationGroup),this.animation=this.registerDataInput("animation",S.e),this.object=this.registerDataInput("object",S.e)}_preparePendingTasks(b){const X=this.animationGroup.getValue(b),P=this.animation.getValue(b);if(!X&&!P)return this._reportError(b,"No animation or animation group provided");{const S=this.currentAnimationGroup.getValue(b);S&&S!==X&&S.dispose();let d=X;if(P&&!d){const X=this.object.getValue(b);if(!X)return this._reportError(b,"No target object provided");const Q=Array.isArray(P)?P:[P],S=Q[0].name;d=new N.AnimationGroup("flowGraphAnimationGroup-"+S+"-"+X.name,b.configuration.WX);let a=!1;const u=b._getGlobalContextVariable("interpolationAnimations",[]);for(const b of Q)d.addTargetedAnimation(b,X),-1!==u.indexOf(b.uniqueId)&&(a=!0);a&&this._checkInterpolationDuplications(b,Q,X)}const a=this.speed.getValue(b)||1,u=this.from.getValue(b)??0,w=this.to.getValue(b)||d.to,f=!isFinite(w)||this.loop.getValue(b);this.currentAnimationGroup.setValue(d,b);const O=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==O.indexOf(d.uniqueId)&&d.stop();try{d.start(f,a,u,w),d.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(b))),d.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(b))),d.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(b))),d.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(b))),O.push(d.uniqueId),b._setGlobalContextVariable("currentlyRunningAnimationGroups",O)}catch(Q){this._reportError(b,Q)}}}_reportError(b,X){super._reportError(b,X),this.currentFrame.setValue(-1,b),this.currentTime.setValue(-1,b)}_executeOnTick(b){const X=this.currentAnimationGroup.getValue(b);var P;X&&(this.currentFrame.setValue(X.getCurrentFrame(),b),this.currentTime.setValue((null===(P=X.animatables[0])||void 0===P?void 0:P.elapsedTime)??0,b))}_execute(b){this._startPendingTasks(b)}_onAnimationGroupEnd(b){this._removeFromCurrentlyRunning(b,this.currentAnimationGroup.getValue(b)),this._resetAfterCanceled(b),this.done._activateSignal(b)}_checkInterpolationDuplications(b,X,P){const Q=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const S of Q){const Q=b.assetsContext.animationGroups.find((b=>b.uniqueId===S));if(Q)for(const S of Q.targetedAnimations)for(const d of X)S.animation.targetProperty===d.targetProperty&&S.target===P&&this._stopAnimationGroup(b,Q)}}_stopAnimationGroup(b,X){X.stop(!0),X.dispose(),this._removeFromCurrentlyRunning(b,X)}_removeFromCurrentlyRunning(b,X){const P=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),Q=P.indexOf(X.uniqueId);-1!==Q&&(P.splice(Q,1),b._setGlobalContextVariable("currentlyRunningAnimationGroups",P))}_cancelPendingTasks(b){const X=this.currentAnimationGroup.getValue(b);X&&this._stopAnimationGroup(b,X)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,d.h)("FlowGraphPlayAnimationBlock",a)}}]);