"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[79],{15328:(t,U,y)=>{y.r(U),y.d(U,{FlowGraphPlayAnimationBlock:()=>X});var I=y(13893),r=y(13845),Y=y(12338),mt=y(15319);class X extends I.e{constructor(t){super(t,["animationLoop","animationEnd","animationGroupLoop"]),this.config=t,this.speed=this.registerDataInput("speed",r.w),this.loop=this.registerDataInput("loop",r.i),this.from=this.registerDataInput("from",r.w,0),this.to=this.registerDataInput("to",r.w),this.currentFrame=this.registerDataOutput("currentFrame",r.w),this.currentTime=this.registerDataOutput("currentTime",r.w),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",r.e),this.animationGroup=this.registerDataInput("animationGroup",r.e,null===t||void 0===t?void 0:t.animationGroup),this.animation=this.registerDataInput("animation",r.e),this.object=this.registerDataInput("object",r.e)}_preparePendingTasks(t){const U=this.animationGroup.getValue(t),y=this.animation.getValue(t);if(!U&&!y)return this._reportError(t,"No animation or animation group provided");{const r=this.currentAnimationGroup.getValue(t);r&&r!==U&&r.dispose();let Y=U;if(y&&!Y){const U=this.object.getValue(t);if(!U)return this._reportError(t,"No target object provided");const I=Array.isArray(y)?y:[y],r=I[0].name;Y=new mt.AnimationGroup("flowGraphAnimationGroup-"+r+"-"+U.name,t.configuration.gU);let X=!1;const P=t._getGlobalContextVariable("interpolationAnimations",[]);for(const t of I)Y.addTargetedAnimation(t,U),-1!==P.indexOf(t.uniqueId)&&(X=!0);X&&this._checkInterpolationDuplications(t,I,U)}const X=this.speed.getValue(t)||1,P=this.from.getValue(t)??0,G=this.to.getValue(t)||Y.to,M=!isFinite(G)||this.loop.getValue(t);this.currentAnimationGroup.setValue(Y,t);const L=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==L.indexOf(Y.uniqueId)&&Y.stop();try{Y.start(M,X,P,G),Y.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(t))),Y.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(t))),Y.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(t))),Y.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(t))),L.push(Y.uniqueId),t._setGlobalContextVariable("currentlyRunningAnimationGroups",L)}catch(I){this._reportError(t,I)}}}_reportError(t,U){super._reportError(t,U),this.currentFrame.setValue(-1,t),this.currentTime.setValue(-1,t)}_executeOnTick(t){const U=this.currentAnimationGroup.getValue(t);var y;U&&(this.currentFrame.setValue(U.getCurrentFrame(),t),this.currentTime.setValue((null===(y=U.animatables[0])||void 0===y?void 0:y.elapsedTime)??0,t))}_execute(t){this._startPendingTasks(t)}_onAnimationGroupEnd(t){this._removeFromCurrentlyRunning(t,this.currentAnimationGroup.getValue(t)),this._resetAfterCanceled(t),this.done._activateSignal(t)}_checkInterpolationDuplications(t,U,y){const I=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const r of I){const I=t.assetsContext.animationGroups.find((t=>t.uniqueId===r));if(I)for(const r of I.targetedAnimations)for(const Y of U)r.animation.targetProperty===Y.targetProperty&&r.target===y&&this._stopAnimationGroup(t,I)}}_stopAnimationGroup(t,U){U.stop(!0),U.dispose(),this._removeFromCurrentlyRunning(t,U)}_removeFromCurrentlyRunning(t,U){const y=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),I=y.indexOf(U.uniqueId);-1!==I&&(y.splice(I,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",y))}_cancelPendingTasks(t){const U=this.currentAnimationGroup.getValue(t);U&&this._stopAnimationGroup(t,U)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,Y.f)("FlowGraphPlayAnimationBlock",X)}}]);