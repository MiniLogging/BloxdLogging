"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[79],{14707:(w,E,G)=>{G.r(E),G.d(E,{FlowGraphPlayAnimationBlock:()=>x});var P=G(13321),h=G(13281),B=G(11646),y=G(14703);class x extends P.d{constructor(w){super(w,["animationLoop","animationEnd","animationGroupLoop"]),this.config=w,this.speed=this.registerDataInput("speed",h.r),this.loop=this.registerDataInput("loop",h.g),this.from=this.registerDataInput("from",h.r,0),this.to=this.registerDataInput("to",h.r),this.currentFrame=this.registerDataOutput("currentFrame",h.r),this.currentTime=this.registerDataOutput("currentTime",h.r),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",h.c),this.animationGroup=this.registerDataInput("animationGroup",h.c,null===w||void 0===w?void 0:w.animationGroup),this.animation=this.registerDataInput("animation",h.c),this.object=this.registerDataInput("object",h.c)}_preparePendingTasks(w){const E=this.animationGroup.getValue(w),G=this.animation.getValue(w);if(!E&&!G)return this._reportError(w,"No animation or animation group provided");{const h=this.currentAnimationGroup.getValue(w);h&&h!==E&&h.dispose();let B=E;if(G&&!B){const E=this.object.getValue(w);if(!E)return this._reportError(w,"No target object provided");const P=Array.isArray(G)?G:[G],h=P[0].name;B=new y.AnimationGroup("flowGraphAnimationGroup-"+h+"-"+E.name,w.configuration.ZE);let x=!1;const U=w._getGlobalContextVariable("interpolationAnimations",[]);for(const w of P)B.addTargetedAnimation(w,E),-1!==U.indexOf(w.uniqueId)&&(x=!0);x&&this._checkInterpolationDuplications(w,P,E)}const x=this.speed.getValue(w)||1,U=this.from.getValue(w)??0,l=this.to.getValue(w)||B.to,i=!isFinite(l)||this.loop.getValue(w);this.currentAnimationGroup.setValue(B,w);const O=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==O.indexOf(B.uniqueId)&&B.stop();try{B.start(i,x,U,l),B.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(w))),B.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(w))),B.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(w))),B.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(w))),O.push(B.uniqueId),w._setGlobalContextVariable("currentlyRunningAnimationGroups",O)}catch(P){this._reportError(w,P)}}}_reportError(w,E){super._reportError(w,E),this.currentFrame.setValue(-1,w),this.currentTime.setValue(-1,w)}_executeOnTick(w){const E=this.currentAnimationGroup.getValue(w);var G;E&&(this.currentFrame.setValue(E.getCurrentFrame(),w),this.currentTime.setValue((null===(G=E.animatables[0])||void 0===G?void 0:G.elapsedTime)??0,w))}_execute(w){this._startPendingTasks(w)}_onAnimationGroupEnd(w){this._removeFromCurrentlyRunning(w,this.currentAnimationGroup.getValue(w)),this._resetAfterCanceled(w),this.done._activateSignal(w)}_checkInterpolationDuplications(w,E,G){const P=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const h of P){const P=w.assetsContext.animationGroups.find((w=>w.uniqueId===h));if(P)for(const h of P.targetedAnimations)for(const B of E)h.animation.targetProperty===B.targetProperty&&h.target===G&&this._stopAnimationGroup(w,P)}}_stopAnimationGroup(w,E){E.stop(!0),E.dispose(),this._removeFromCurrentlyRunning(w,E)}_removeFromCurrentlyRunning(w,E){const G=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),P=G.indexOf(E.uniqueId);-1!==P&&(G.splice(P,1),w._setGlobalContextVariable("currentlyRunningAnimationGroups",G))}_cancelPendingTasks(w){const E=this.currentAnimationGroup.getValue(w);E&&this._stopAnimationGroup(w,E)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,B.g)("FlowGraphPlayAnimationBlock",x)}}]);