"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[79],{16108:(h,R,l)=>{l.r(R),l.d(R,{FlowGraphPlayAnimationBlock:()=>F});var j=l(14640),a=l(14597),D=l(12852),U=l(16103);class F extends j.b{constructor(h){super(h,["animationLoop","animationEnd","animationGroupLoop"]),this.config=h,this.speed=this.registerDataInput("speed",a.r),this.loop=this.registerDataInput("loop",a.g),this.from=this.registerDataInput("from",a.r,0),this.to=this.registerDataInput("to",a.r),this.currentFrame=this.registerDataOutput("currentFrame",a.r),this.currentTime=this.registerDataOutput("currentTime",a.r),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",a.c),this.animationGroup=this.registerDataInput("animationGroup",a.c,null===h||void 0===h?void 0:h.animationGroup),this.animation=this.registerDataInput("animation",a.c),this.object=this.registerDataInput("object",a.c)}_preparePendingTasks(h){const R=this.animationGroup.getValue(h),l=this.animation.getValue(h);if(!R&&!l)return this._reportError(h,"No animation or animation group provided");{const a=this.currentAnimationGroup.getValue(h);a&&a!==R&&a.dispose();let D=R;if(l&&!D){const R=this.object.getValue(h);if(!R)return this._reportError(h,"No target object provided");const j=Array.isArray(l)?l:[l],a=j[0].name;D=new U.AnimationGroup("flowGraphAnimationGroup-"+a+"-"+R.name,h.configuration.TR);let F=!1;const w=h._getGlobalContextVariable("interpolationAnimations",[]);for(const h of j)D.addTargetedAnimation(h,R),-1!==w.indexOf(h.uniqueId)&&(F=!0);F&&this._checkInterpolationDuplications(h,j,R)}const F=this.speed.getValue(h)||1,w=this.from.getValue(h)??0,mh=this.to.getValue(h)||D.to,u=!isFinite(mh)||this.loop.getValue(h);this.currentAnimationGroup.setValue(D,h);const c=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==c.indexOf(D.uniqueId)&&D.stop();try{D.start(u,F,w,mh),D.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(h))),D.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(h))),D.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(h))),D.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(h))),c.push(D.uniqueId),h._setGlobalContextVariable("currentlyRunningAnimationGroups",c)}catch(j){this._reportError(h,j)}}}_reportError(h,R){super._reportError(h,R),this.currentFrame.setValue(-1,h),this.currentTime.setValue(-1,h)}_executeOnTick(h){const R=this.currentAnimationGroup.getValue(h);var l;R&&(this.currentFrame.setValue(R.getCurrentFrame(),h),this.currentTime.setValue((null===(l=R.animatables[0])||void 0===l?void 0:l.elapsedTime)??0,h))}_execute(h){this._startPendingTasks(h)}_onAnimationGroupEnd(h){this._removeFromCurrentlyRunning(h,this.currentAnimationGroup.getValue(h)),this._resetAfterCanceled(h),this.done._activateSignal(h)}_checkInterpolationDuplications(h,R,l){const j=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const a of j){const j=h.assetsContext.animationGroups.find((h=>h.uniqueId===a));if(j)for(const a of j.targetedAnimations)for(const D of R)a.animation.targetProperty===D.targetProperty&&a.target===l&&this._stopAnimationGroup(h,j)}}_stopAnimationGroup(h,R){R.stop(!0),R.dispose(),this._removeFromCurrentlyRunning(h,R)}_removeFromCurrentlyRunning(h,R){const l=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),j=l.indexOf(R.uniqueId);-1!==j&&(l.splice(j,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",l))}_cancelPendingTasks(h){const R=this.currentAnimationGroup.getValue(h);R&&this._stopAnimationGroup(h,R)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,D.f)("FlowGraphPlayAnimationBlock",F)}}]);