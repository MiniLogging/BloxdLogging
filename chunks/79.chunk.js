"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[79],{14950:(Z,h,V)=>{V.r(h),V.d(h,{FlowGraphPlayAnimationBlock:()=>d});var v=V(13509),A=V(13459),H=V(11691),K=V(14946);class d extends v.b{constructor(Z){super(Z,["animationLoop","animationEnd","animationGroupLoop"]),this.config=Z,this.speed=this.registerDataInput("speed",A.t),this.loop=this.registerDataInput("loop",A.f),this.from=this.registerDataInput("from",A.t,0),this.to=this.registerDataInput("to",A.t),this.currentFrame=this.registerDataOutput("currentFrame",A.t),this.currentTime=this.registerDataOutput("currentTime",A.t),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",A.c),this.animationGroup=this.registerDataInput("animationGroup",A.c,null===Z||void 0===Z?void 0:Z.animationGroup),this.animation=this.registerDataInput("animation",A.c),this.object=this.registerDataInput("object",A.c)}_preparePendingTasks(Z){const h=this.animationGroup.getValue(Z),V=this.animation.getValue(Z);if(!h&&!V)return this._reportError(Z,"No animation or animation group provided");{const A=this.currentAnimationGroup.getValue(Z);A&&A!==h&&A.dispose();let H=h;if(V&&!H){const h=this.object.getValue(Z);if(!h)return this._reportError(Z,"No target object provided");const v=Array.isArray(V)?V:[V],A=v[0].name;H=new K.AnimationGroup("flowGraphAnimationGroup-"+A+"-"+h.name,Z.configuration.Wh);let d=!1;const a=Z._getGlobalContextVariable("interpolationAnimations",[]);for(const Z of v)H.addTargetedAnimation(Z,h),-1!==a.indexOf(Z.uniqueId)&&(d=!0);d&&this._checkInterpolationDuplications(Z,v,h)}const d=this.speed.getValue(Z)||1,a=this.from.getValue(Z)??0,n=this.to.getValue(Z)||H.to,x=!isFinite(n)||this.loop.getValue(Z);this.currentAnimationGroup.setValue(H,Z);const N=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==N.indexOf(H.uniqueId)&&H.stop();try{H.start(x,d,a,n),H.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(Z))),H.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(Z))),H.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(Z))),H.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(Z))),N.push(H.uniqueId),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",N)}catch(v){this._reportError(Z,v)}}}_reportError(Z,h){super._reportError(Z,h),this.currentFrame.setValue(-1,Z),this.currentTime.setValue(-1,Z)}_executeOnTick(Z){const h=this.currentAnimationGroup.getValue(Z);var V;h&&(this.currentFrame.setValue(h.getCurrentFrame(),Z),this.currentTime.setValue((null===(V=h.animatables[0])||void 0===V?void 0:V.elapsedTime)??0,Z))}_execute(Z){this._startPendingTasks(Z)}_onAnimationGroupEnd(Z){this._removeFromCurrentlyRunning(Z,this.currentAnimationGroup.getValue(Z)),this._resetAfterCanceled(Z),this.done._activateSignal(Z)}_checkInterpolationDuplications(Z,h,V){const v=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of v){const v=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId===A));if(v)for(const A of v.targetedAnimations)for(const H of h)A.animation.targetProperty===H.targetProperty&&A.target===V&&this._stopAnimationGroup(Z,v)}}_stopAnimationGroup(Z,h){h.stop(!0),h.dispose(),this._removeFromCurrentlyRunning(Z,h)}_removeFromCurrentlyRunning(Z,h){const V=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),v=V.indexOf(h.uniqueId);-1!==v&&(V.splice(v,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",V))}_cancelPendingTasks(Z){const h=this.currentAnimationGroup.getValue(Z);h&&this._stopAnimationGroup(Z,h)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,H.i)("FlowGraphPlayAnimationBlock",d)}}]);