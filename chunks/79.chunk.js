"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[79],{15704:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphPlayAnimationBlock:()=>J});var e=b(14311),c=b(14282),z=b(12558),M=b(15696);class J extends e.c{constructor(I){super(I,["animationLoop","animationEnd","animationGroupLoop"]),this.config=I,this.speed=this.registerDataInput("speed",c.t),this.loop=this.registerDataInput("loop",c.g),this.from=this.registerDataInput("from",c.t,0),this.to=this.registerDataInput("to",c.t),this.currentFrame=this.registerDataOutput("currentFrame",c.t),this.currentTime=this.registerDataOutput("currentTime",c.t),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",c.c),this.animationGroup=this.registerDataInput("animationGroup",c.c,null===I||void 0===I?void 0:I.animationGroup),this.animation=this.registerDataInput("animation",c.c),this.object=this.registerDataInput("object",c.c)}_preparePendingTasks(I){const g=this.animationGroup.getValue(I),b=this.animation.getValue(I);if(!g&&!b)return this._reportError(I,"No animation or animation group provided");{const c=this.currentAnimationGroup.getValue(I);c&&c!==g&&c.dispose();let z=g;if(b&&!z){const g=this.object.getValue(I);if(!g)return this._reportError(I,"No target object provided");const e=Array.isArray(b)?b:[b],c=e[0].name;z=new M.AnimationGroup("flowGraphAnimationGroup-"+c+"-"+g.name,I.configuration.Xg);let J=!1;const o=I._getGlobalContextVariable("interpolationAnimations",[]);for(const I of e)z.addTargetedAnimation(I,g),-1!==o.indexOf(I.uniqueId)&&(J=!0);J&&this._checkInterpolationDuplications(I,e,g)}const J=this.speed.getValue(I)||1,o=this.from.getValue(I)??0,n=this.to.getValue(I)||z.to,G=!isFinite(n)||this.loop.getValue(I);this.currentAnimationGroup.setValue(z,I);const D=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==D.indexOf(z.uniqueId)&&z.stop();try{z.start(G,J,o,n),z.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(I))),z.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(I))),z.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(I))),z.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(I))),D.push(z.uniqueId),I._setGlobalContextVariable("currentlyRunningAnimationGroups",D)}catch(e){this._reportError(I,e)}}}_reportError(I,g){super._reportError(I,g),this.currentFrame.setValue(-1,I),this.currentTime.setValue(-1,I)}_executeOnTick(I){const g=this.currentAnimationGroup.getValue(I);var b;g&&(this.currentFrame.setValue(g.getCurrentFrame(),I),this.currentTime.setValue((null===(b=g.animatables[0])||void 0===b?void 0:b.elapsedTime)??0,I))}_execute(I){this._startPendingTasks(I)}_onAnimationGroupEnd(I){this._removeFromCurrentlyRunning(I,this.currentAnimationGroup.getValue(I)),this._resetAfterCanceled(I),this.done._activateSignal(I)}_checkInterpolationDuplications(I,g,b){const e=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const c of e){const e=I.assetsContext.animationGroups.find((I=>I.uniqueId===c));if(e)for(const c of e.targetedAnimations)for(const z of g)c.animation.targetProperty===z.targetProperty&&c.target===b&&this._stopAnimationGroup(I,e)}}_stopAnimationGroup(I,g){g.stop(!0),g.dispose(),this._removeFromCurrentlyRunning(I,g)}_removeFromCurrentlyRunning(I,g){const b=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),e=b.indexOf(g.uniqueId);-1!==e&&(b.splice(e,1),I._setGlobalContextVariable("currentlyRunningAnimationGroups",b))}_cancelPendingTasks(I){const g=this.currentAnimationGroup.getValue(I);g&&this._stopAnimationGroup(I,g)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,z.g)("FlowGraphPlayAnimationBlock",J)}}]);