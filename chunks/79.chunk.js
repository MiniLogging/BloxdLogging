"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[79],{15463:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphPlayAnimationBlock:()=>W});var l=A(14029),w=A(13993),N=A(12283),p=A(15457);class W extends l.c{constructor(y){super(y,["animationLoop","animationEnd","animationGroupLoop"]),this.config=y,this.speed=this.registerDataInput("speed",w.s),this.loop=this.registerDataInput("loop",w.f),this.from=this.registerDataInput("from",w.s,0),this.to=this.registerDataInput("to",w.s),this.currentFrame=this.registerDataOutput("currentFrame",w.s),this.currentTime=this.registerDataOutput("currentTime",w.s),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",w.e),this.animationGroup=this.registerDataInput("animationGroup",w.e,null===y||void 0===y?void 0:y.animationGroup),this.animation=this.registerDataInput("animation",w.e),this.object=this.registerDataInput("object",w.e)}_preparePendingTasks(y){const c=this.animationGroup.getValue(y),A=this.animation.getValue(y);if(!c&&!A)return this._reportError(y,"No animation or animation group provided");{const w=this.currentAnimationGroup.getValue(y);w&&w!==c&&w.dispose();let N=c;if(A&&!N){const c=this.object.getValue(y);if(!c)return this._reportError(y,"No target object provided");const l=Array.isArray(A)?A:[A],w=l[0].name;N=new p.AnimationGroup("flowGraphAnimationGroup-"+w+"-"+c.name,y.configuration.Fc);let W=!1;const h=y._getGlobalContextVariable("interpolationAnimations",[]);for(const y of l)N.addTargetedAnimation(y,c),-1!==h.indexOf(y.uniqueId)&&(W=!0);W&&this._checkInterpolationDuplications(y,l,c)}const W=this.speed.getValue(y)||1,h=this.from.getValue(y)??0,I=this.to.getValue(y)||N.to,q=!isFinite(I)||this.loop.getValue(y);this.currentAnimationGroup.setValue(N,y);const o=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==o.indexOf(N.uniqueId)&&N.stop();try{N.start(q,W,h,I),N.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(y))),N.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(y))),N.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(y))),N.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(y))),o.push(N.uniqueId),y._setGlobalContextVariable("currentlyRunningAnimationGroups",o)}catch(l){this._reportError(y,l)}}}_reportError(y,c){super._reportError(y,c),this.currentFrame.setValue(-1,y),this.currentTime.setValue(-1,y)}_executeOnTick(y){const c=this.currentAnimationGroup.getValue(y);var A;c&&(this.currentFrame.setValue(c.getCurrentFrame(),y),this.currentTime.setValue((null===(A=c.animatables[0])||void 0===A?void 0:A.elapsedTime)??0,y))}_execute(y){this._startPendingTasks(y)}_onAnimationGroupEnd(y){this._removeFromCurrentlyRunning(y,this.currentAnimationGroup.getValue(y)),this._resetAfterCanceled(y),this.done._activateSignal(y)}_checkInterpolationDuplications(y,c,A){const l=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of l){const l=y.assetsContext.animationGroups.find((y=>y.uniqueId===w));if(l)for(const w of l.targetedAnimations)for(const N of c)w.animation.targetProperty===N.targetProperty&&w.target===A&&this._stopAnimationGroup(y,l)}}_stopAnimationGroup(y,c){c.stop(!0),c.dispose(),this._removeFromCurrentlyRunning(y,c)}_removeFromCurrentlyRunning(y,c){const A=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),l=A.indexOf(c.uniqueId);-1!==l&&(A.splice(l,1),y._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}_cancelPendingTasks(y){const c=this.currentAnimationGroup.getValue(y);c&&this._stopAnimationGroup(y,c)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,N.f)("FlowGraphPlayAnimationBlock",W)}}]);