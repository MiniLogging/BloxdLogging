"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[79],{14390:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphPlayAnimationBlock:()=>s});var u=j(12920),k=j(12880),B=j(11181),x=j(14384);class s extends u.d{constructor(G){super(G,["animationLoop","animationEnd","animationGroupLoop"]),this.config=G,this.speed=this.registerDataInput("speed",k.s),this.loop=this.registerDataInput("loop",k.e),this.from=this.registerDataInput("from",k.s,0),this.to=this.registerDataInput("to",k.s),this.currentFrame=this.registerDataOutput("currentFrame",k.s),this.currentTime=this.registerDataOutput("currentTime",k.s),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",k.c),this.animationGroup=this.registerDataInput("animationGroup",k.c,null===G||void 0===G?void 0:G.animationGroup),this.animation=this.registerDataInput("animation",k.c),this.object=this.registerDataInput("object",k.c)}_preparePendingTasks(G){const A=this.animationGroup.getValue(G),j=this.animation.getValue(G);if(!A&&!j)return this._reportError(G,"No animation or animation group provided");{const k=this.currentAnimationGroup.getValue(G);k&&k!==A&&k.dispose();let B=A;if(j&&!B){const A=this.object.getValue(G);if(!A)return this._reportError(G,"No target object provided");const u=Array.isArray(j)?j:[j],k=u[0].name;B=new x.AnimationGroup("flowGraphAnimationGroup-"+k+"-"+A.name,G.configuration.tA);let s=!1;const O=G._getGlobalContextVariable("interpolationAnimations",[]);for(const G of u)B.addTargetedAnimation(G,A),-1!==O.indexOf(G.uniqueId)&&(s=!0);s&&this._checkInterpolationDuplications(G,u,A)}const s=this.speed.getValue(G)||1,O=this.from.getValue(G)??0,d=this.to.getValue(G)||B.to,h=!isFinite(d)||this.loop.getValue(G);this.currentAnimationGroup.setValue(B,G);const H=G._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==H.indexOf(B.uniqueId)&&B.stop();try{B.start(h,s,O,d),B.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(G))),B.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(G))),B.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(G))),B.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(G))),H.push(B.uniqueId),G._setGlobalContextVariable("currentlyRunningAnimationGroups",H)}catch(u){this._reportError(G,u)}}}_reportError(G,A){super._reportError(G,A),this.currentFrame.setValue(-1,G),this.currentTime.setValue(-1,G)}_executeOnTick(G){const A=this.currentAnimationGroup.getValue(G);var j;A&&(this.currentFrame.setValue(A.getCurrentFrame(),G),this.currentTime.setValue((null===(j=A.animatables[0])||void 0===j?void 0:j.elapsedTime)??0,G))}_execute(G){this._startPendingTasks(G)}_onAnimationGroupEnd(G){this._removeFromCurrentlyRunning(G,this.currentAnimationGroup.getValue(G)),this._resetAfterCanceled(G),this.done._activateSignal(G)}_checkInterpolationDuplications(G,A,j){const u=G._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const k of u){const u=G.assetsContext.animationGroups.find((G=>G.uniqueId===k));if(u)for(const k of u.targetedAnimations)for(const B of A)k.animation.targetProperty===B.targetProperty&&k.target===j&&this._stopAnimationGroup(G,u)}}_stopAnimationGroup(G,A){A.stop(!0),A.dispose(),this._removeFromCurrentlyRunning(G,A)}_removeFromCurrentlyRunning(G,A){const j=G._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),u=j.indexOf(A.uniqueId);-1!==u&&(j.splice(u,1),G._setGlobalContextVariable("currentlyRunningAnimationGroups",j))}_cancelPendingTasks(G){const A=this.currentAnimationGroup.getValue(G);A&&this._stopAnimationGroup(G,A)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,B.h)("FlowGraphPlayAnimationBlock",s)}}]);