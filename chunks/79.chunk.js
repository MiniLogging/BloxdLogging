"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[79],{14947:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphPlayAnimationBlock:()=>e});var m=K(13559),O=K(13514),X=K(11789),A=K(14940);class e extends m.c{constructor(C){super(C,["animationLoop","animationEnd","animationGroupLoop"]),this.config=C,this.speed=this.registerDataInput("speed",O.w),this.loop=this.registerDataInput("loop",O.f),this.from=this.registerDataInput("from",O.w,0),this.to=this.registerDataInput("to",O.w),this.currentFrame=this.registerDataOutput("currentFrame",O.w),this.currentTime=this.registerDataOutput("currentTime",O.w),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",O.c),this.animationGroup=this.registerDataInput("animationGroup",O.c,null===C||void 0===C?void 0:C.animationGroup),this.animation=this.registerDataInput("animation",O.c),this.object=this.registerDataInput("object",O.c)}_preparePendingTasks(C){const U=this.animationGroup.getValue(C),K=this.animation.getValue(C);if(!U&&!K)return this._reportError(C,"No animation or animation group provided");{const O=this.currentAnimationGroup.getValue(C);O&&O!==U&&O.dispose();let X=U;if(K&&!X){const U=this.object.getValue(C);if(!U)return this._reportError(C,"No target object provided");const m=Array.isArray(K)?K:[K],O=m[0].name;X=new A.AnimationGroup("flowGraphAnimationGroup-"+O+"-"+U.name,C.configuration.QU);let e=!1;const t=C._getGlobalContextVariable("interpolationAnimations",[]);for(const C of m)X.addTargetedAnimation(C,U),-1!==t.indexOf(C.uniqueId)&&(e=!0);e&&this._checkInterpolationDuplications(C,m,U)}const e=this.speed.getValue(C)||1,t=this.from.getValue(C)??0,z=this.to.getValue(C)||X.to,j=!isFinite(z)||this.loop.getValue(C);this.currentAnimationGroup.setValue(X,C);const p=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==p.indexOf(X.uniqueId)&&X.stop();try{X.start(j,e,t,z),X.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(C))),X.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(C))),X.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(C))),X.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(C))),p.push(X.uniqueId),C._setGlobalContextVariable("currentlyRunningAnimationGroups",p)}catch(m){this._reportError(C,m)}}}_reportError(C,U){super._reportError(C,U),this.currentFrame.setValue(-1,C),this.currentTime.setValue(-1,C)}_executeOnTick(C){const U=this.currentAnimationGroup.getValue(C);var K;U&&(this.currentFrame.setValue(U.getCurrentFrame(),C),this.currentTime.setValue((null===(K=U.animatables[0])||void 0===K?void 0:K.elapsedTime)??0,C))}_execute(C){this._startPendingTasks(C)}_onAnimationGroupEnd(C){this._removeFromCurrentlyRunning(C,this.currentAnimationGroup.getValue(C)),this._resetAfterCanceled(C),this.done._activateSignal(C)}_checkInterpolationDuplications(C,U,K){const m=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const O of m){const m=C.assetsContext.animationGroups.find((C=>C.uniqueId===O));if(m)for(const O of m.targetedAnimations)for(const X of U)O.animation.targetProperty===X.targetProperty&&O.target===K&&this._stopAnimationGroup(C,m)}}_stopAnimationGroup(C,U){U.stop(!0),U.dispose(),this._removeFromCurrentlyRunning(C,U)}_removeFromCurrentlyRunning(C,U){const K=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),m=K.indexOf(U.uniqueId);-1!==m&&(K.splice(m,1),C._setGlobalContextVariable("currentlyRunningAnimationGroups",K))}_cancelPendingTasks(C){const U=this.currentAnimationGroup.getValue(C);U&&this._stopAnimationGroup(C,U)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,X.h)("FlowGraphPlayAnimationBlock",e)}}]);