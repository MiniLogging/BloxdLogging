"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[79],{15451:(H,u,J)=>{J.r(u),J.d(u,{FlowGraphPlayAnimationBlock:()=>g});var O=J(14061),U=J(14018),h=J(12304),w=J(15449);class g extends O.d{constructor(H){super(H,["animationLoop","animationEnd","animationGroupLoop"]),this.config=H,this.speed=this.registerDataInput("speed",U.z),this.loop=this.registerDataInput("loop",U.f),this.from=this.registerDataInput("from",U.z,0),this.to=this.registerDataInput("to",U.z),this.currentFrame=this.registerDataOutput("currentFrame",U.z),this.currentTime=this.registerDataOutput("currentTime",U.z),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",U.d),this.animationGroup=this.registerDataInput("animationGroup",U.d,null===H||void 0===H?void 0:H.animationGroup),this.animation=this.registerDataInput("animation",U.d),this.object=this.registerDataInput("object",U.d)}_preparePendingTasks(H){const u=this.animationGroup.getValue(H),J=this.animation.getValue(H);if(!u&&!J)return this._reportError(H,"No animation or animation group provided");{const U=this.currentAnimationGroup.getValue(H);U&&U!==u&&U.dispose();let h=u;if(J&&!h){const u=this.object.getValue(H);if(!u)return this._reportError(H,"No target object provided");const O=Array.isArray(J)?J:[J],U=O[0].name;h=new w.AnimationGroup("flowGraphAnimationGroup-"+U+"-"+u.name,H.configuration.pu);let g=!1;const B=H._getGlobalContextVariable("interpolationAnimations",[]);for(const H of O)h.addTargetedAnimation(H,u),-1!==B.indexOf(H.uniqueId)&&(g=!0);g&&this._checkInterpolationDuplications(H,O,u)}const g=this.speed.getValue(H)||1,B=this.from.getValue(H)??0,b=this.to.getValue(H)||h.to,d=!isFinite(b)||this.loop.getValue(H);this.currentAnimationGroup.setValue(h,H);const G=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==G.indexOf(h.uniqueId)&&h.stop();try{h.start(d,g,B,b),h.onAnimationGroupEndObservable.add((()=>this._onAnimationGroupEnd(H))),h.onAnimationEndObservable.add((()=>this._eventsSignalOutputs.animationEnd._activateSignal(H))),h.onAnimationLoopObservable.add((()=>this._eventsSignalOutputs.animationLoop._activateSignal(H))),h.onAnimationGroupLoopObservable.add((()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(H))),G.push(h.uniqueId),H._setGlobalContextVariable("currentlyRunningAnimationGroups",G)}catch(O){this._reportError(H,O)}}}_reportError(H,u){super._reportError(H,u),this.currentFrame.setValue(-1,H),this.currentTime.setValue(-1,H)}_executeOnTick(H){const u=this.currentAnimationGroup.getValue(H);var J;u&&(this.currentFrame.setValue(u.getCurrentFrame(),H),this.currentTime.setValue((null===(J=u.animatables[0])||void 0===J?void 0:J.elapsedTime)??0,H))}_execute(H){this._startPendingTasks(H)}_onAnimationGroupEnd(H){this._removeFromCurrentlyRunning(H,this.currentAnimationGroup.getValue(H)),this._resetAfterCanceled(H),this.done._activateSignal(H)}_checkInterpolationDuplications(H,u,J){const O=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of O){const O=H.assetsContext.animationGroups.find((H=>H.uniqueId===U));if(O)for(const U of O.targetedAnimations)for(const h of u)U.animation.targetProperty===h.targetProperty&&U.target===J&&this._stopAnimationGroup(H,O)}}_stopAnimationGroup(H,u){u.stop(!0),u.dispose(),this._removeFromCurrentlyRunning(H,u)}_removeFromCurrentlyRunning(H,u){const J=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),O=J.indexOf(u.uniqueId);-1!==O&&(J.splice(O,1),H._setGlobalContextVariable("currentlyRunningAnimationGroups",J))}_cancelPendingTasks(H){const u=this.currentAnimationGroup.getValue(H);u&&this._stopAnimationGroup(H,u)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,h.f)("FlowGraphPlayAnimationBlock",g)}}]);