"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[80],{14425:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphStopAnimationBlock:()=>j});var u=F(12954),G=F(11136),f=F(11012),Y=F(13005);class j extends Y.b{constructor(Z){super(Z),this.animationGroup=this.registerDataInput("animationGroup",u.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",u.u,-1)}_preparePendingTasks(Z){const x=this.animationGroup.getValue(Z),F=this.stopAtFrame.getValue(Z)??-1,u=Z._getGlobalContextVariable("pendingStopAnimations",[]);u.push({uniqueId:x.uniqueId,stopAtFrame:F}),Z._setGlobalContextVariable("pendingStopAnimations",u)}_cancelPendingTasks(Z){const x=this.animationGroup.getValue(Z),F=Z._getGlobalContextVariable("pendingStopAnimations",[]);for(let u=0;u<F.length;u++)if(F[u].uniqueId===x.uniqueId){F.splice(u,1),Z._setGlobalContextVariable("pendingStopAnimations",F);break}}_execute(Z){const x=this.animationGroup.getValue(Z),F=this.stopAtFrame.getValue(Z)??-1;return x?isNaN(F)?this._reportError(Z,"Invalid stop time."):(F>0?this._startPendingTasks(Z):this._stopAnimation(x,Z),void this.out._activateSignal(Z)):(f.d.Warn("No animation group provided to stop."),this._reportError(Z,"No animation group provided to stop."))}_executeOnTick(Z){const x=this.animationGroup.getValue(Z),F=Z._getGlobalContextVariable("pendingStopAnimations",[]);for(let u=0;u<F.length;u++)if(F[u].uniqueId===x.uniqueId&&x.getCurrentFrame()>=F[u].stopAtFrame){this._stopAnimation(x,Z),F.splice(u,1),Z._setGlobalContextVariable("pendingStopAnimations",F),this.done._activateSignal(Z),Z._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(Z,x){const F=x._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),u=F.indexOf(Z.uniqueId);-1!==u&&(Z.stop(),F.splice(u,1),x._setGlobalContextVariable("currentlyRunningAnimationGroups",F))}}(0,G.g)("FlowGraphStopAnimationBlock",j)}}]);