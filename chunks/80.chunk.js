"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[80],{14273:(g,w,q)=>{q.r(w),q.d(w,{FlowGraphStopAnimationBlock:()=>i});var R=q(12836),o=q(11128),r=q(11011),S=q(12877);class i extends S.b{constructor(g){super(g),this.animationGroup=this.registerDataInput("animationGroup",R.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",R.w,-1)}_preparePendingTasks(g){const w=this.animationGroup.getValue(g),q=this.stopAtFrame.getValue(g)??-1,R=g._getGlobalContextVariable("pendingStopAnimations",[]);R.push({uniqueId:w.uniqueId,stopAtFrame:q}),g._setGlobalContextVariable("pendingStopAnimations",R)}_cancelPendingTasks(g){const w=this.animationGroup.getValue(g),q=g._getGlobalContextVariable("pendingStopAnimations",[]);for(let R=0;R<q.length;R++)if(q[R].uniqueId===w.uniqueId){q.splice(R,1),g._setGlobalContextVariable("pendingStopAnimations",q);break}}_execute(g){const w=this.animationGroup.getValue(g),q=this.stopAtFrame.getValue(g)??-1;return w?isNaN(q)?this._reportError(g,"Invalid stop time."):(q>0?this._startPendingTasks(g):this._stopAnimation(w,g),void this.out._activateSignal(g)):(r.d.Warn("No animation group provided to stop."),this._reportError(g,"No animation group provided to stop."))}_executeOnTick(g){const w=this.animationGroup.getValue(g),q=g._getGlobalContextVariable("pendingStopAnimations",[]);for(let R=0;R<q.length;R++)if(q[R].uniqueId===w.uniqueId&&w.getCurrentFrame()>=q[R].stopAtFrame){this._stopAnimation(w,g),q.splice(R,1),g._setGlobalContextVariable("pendingStopAnimations",q),this.done._activateSignal(g),g._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(g,w){const q=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),R=q.indexOf(g.uniqueId);-1!==R&&(g.stop(),q.splice(R,1),w._setGlobalContextVariable("currentlyRunningAnimationGroups",q))}}(0,o.g)("FlowGraphStopAnimationBlock",i)}}]);