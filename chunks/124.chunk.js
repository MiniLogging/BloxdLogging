"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[124],{16641:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphSetPropertyBlock:()=>p});var S=R(14572),A=R(14524),Z=R(12376);class p extends S.c{constructor(P){super(P),this.config=P,this.object=this.registerDataInput("object",A.c,P.target),this.value=this.registerDataInput("value",A.c),this.propertyName=this.registerDataInput("propertyName",A.c,P.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",A.c)}_execute(P,a){try{const a=this.object.getValue(P),R=this.value.getValue(P),S=this.propertyName.getValue(P);this._stopRunningAnimations(P,a,S);const A=this.customSetFunction.getValue(P);A?A(a,S,R,P):this._setPropertyValue(a,S,R)}catch(R){this._reportError(P,R)}this.out._activateSignal(P)}_stopRunningAnimations(P,a,R){const S=P._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of S){const Z=P.assetsContext.animationGroups.find((P=>P.uniqueId===A));if(Z)for(const p of Z.targetedAnimations)if(p.target===a&&p.animation.targetProperty===R){Z.stop(!0),Z.dispose();const a=S.indexOf(A);-1!==a&&(S.splice(a,1),P._setGlobalContextVariable("currentlyRunningAnimationGroups",S))}}}_setPropertyValue(P,a,R){const S=a.split(".");let A=P;for(let Z=0;Z<S.length-1;Z++){const P=S[Z];void 0===A[P]&&(A[P]={}),A=A[P]}A[S[S.length-1]]=R}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,Z.d)("FlowGraphSetPropertyBlock",p)}}]);