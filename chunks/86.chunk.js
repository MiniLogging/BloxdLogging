"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[86],{15792:(mm,o,u)=>{u.r(o),u.d(o,{FlowGraphReceiveCustomEventBlock:()=>w});var f=u(14296),B=u(12549),O=u(12702),r=u(14248);class w extends f.e{constructor(mm){super(mm),this.config=mm,this.initPriority=1;for(const o in this.config.eventData)this.registerDataOutput(o,this.config.eventData[o].type)}_preparePendingTasks(mm){const o=mm.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(o&&o.hasObservers()&&o.observers.length>r.b.MaxEventsPerType)return void this._reportError(mm,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${r.b.MaxEventsPerType}.`);const u=o.add((o=>{const u=Object.keys(o);for(const B of u){var f;null===(f=this.getDataOutput(B))||void 0===f||f.setValue(o[B],mm)}this._execute(mm)}));mm._setExecutionVariable(this,"_eventObserver",u)}_cancelPendingTasks(mm){const o=mm.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(o){const u=mm._getExecutionVariable(this,"_eventObserver",null);o.remove(u)}else B.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(mm,o){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,O.c)("FlowGraphReceiveCustomEventBlock",w)}}]);