"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[86],{15702:(z,u,U)=>{U.r(u),U.d(u,{FlowGraphReceiveCustomEventBlock:()=>w});var J=U(14236),v=U(12748),f=U(12875),g=U(14175);class w extends J.e{constructor(z){super(z),this.config=z,this.initPriority=1;for(const u in this.config.eventData)this.registerDataOutput(u,this.config.eventData[u].type)}_preparePendingTasks(z){const u=z.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(u&&u.hasObservers()&&u.observers.length>g.c.MaxEventsPerType)return void this._reportError(z,"FlowGraphReceiveCustomEventBlock: Too many observers for event ".concat(this.config.eventId,". Max is ").concat(g.c.MaxEventsPerType,"."));const U=u.add((u=>{const U=Object.keys(u);for(const v of U){var J;null===(J=this.getDataOutput(v))||void 0===J||J.setValue(u[v],z)}this._execute(z)}));z._setExecutionVariable(this,"_eventObserver",U)}_cancelPendingTasks(z){const u=z.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(u){const U=z._getExecutionVariable(this,"_eventObserver",null);u.remove(U)}else v.Tools.Warn("FlowGraphReceiveCustomEventBlock: Missing observable for event ".concat(this.config.eventId))}_executeEvent(z,u){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,f.f)("FlowGraphReceiveCustomEventBlock",w)}}]);