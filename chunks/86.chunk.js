"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[86],{15589:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphReceiveCustomEventBlock:()=>G});var x=P(14109),c=P(12175),w=P(12317),v=P(14051);class G extends x.b{constructor(M){super(M),this.config=M,this.initPriority=1;for(const Z in this.config.eventData)this.registerDataOutput(Z,this.config.eventData[Z].type)}_preparePendingTasks(M){const Z=M.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(Z&&Z.hasObservers()&&Z.observers.length>v.d.MaxEventsPerType)return void this._reportError(M,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${v.d.MaxEventsPerType}.`);const P=Z.add((Z=>{const P=Object.keys(Z);for(const c of P){var x;null===(x=this.getDataOutput(c))||void 0===x||x.setValue(Z[c],M)}this._execute(M)}));M._setExecutionVariable(this,"_eventObserver",P)}_cancelPendingTasks(M){const Z=M.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(Z){const P=M._getExecutionVariable(this,"_eventObserver",null);Z.remove(P)}else c.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(M,Z){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,w.g)("FlowGraphReceiveCustomEventBlock",G)}}]);