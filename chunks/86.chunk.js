"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[86],{15756:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphReceiveCustomEventBlock:()=>J});var e=b(14306),c=b(12409),z=b(12558),M=b(14267);class J extends e.d{constructor(I){super(I),this.config=I,this.initPriority=1;for(const g in this.config.eventData)this.registerDataOutput(g,this.config.eventData[g].type)}_preparePendingTasks(I){const g=I.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(g&&g.hasObservers()&&g.observers.length>M.c.MaxEventsPerType)return void this._reportError(I,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${M.c.MaxEventsPerType}.`);const b=g.add((g=>{const b=Object.keys(g);for(const c of b){var e;null===(e=this.getDataOutput(c))||void 0===e||e.setValue(g[c],I)}this._execute(I)}));I._setExecutionVariable(this,"_eventObserver",b)}_cancelPendingTasks(I){const g=I.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(g){const b=I._getExecutionVariable(this,"_eventObserver",null);g.remove(b)}else c.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(I,g){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,z.g)("FlowGraphReceiveCustomEventBlock",J)}}]);