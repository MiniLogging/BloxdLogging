"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[86],{14517:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphReceiveCustomEventBlock:()=>o});var Z=i(13100),U=i(11119),C=i(11253),B=i(13048);class o extends Z.d{constructor(k){super(k),this.config=k,this.initPriority=1;for(const Q in this.config.eventData)this.registerDataOutput(Q,this.config.eventData[Q].type)}_preparePendingTasks(k){const Q=k.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(Q&&Q.hasObservers()&&Q.observers.length>B.c.MaxEventsPerType)return void this._reportError(k,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${B.c.MaxEventsPerType}.`);const i=Q.add((Q=>{const i=Object.keys(Q);for(const U of i){var Z;null===(Z=this.getDataOutput(U))||void 0===Z||Z.setValue(Q[U],k)}this._execute(k)}));k._setExecutionVariable(this,"_eventObserver",i)}_cancelPendingTasks(k){const Q=k.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(Q){const i=k._getExecutionVariable(this,"_eventObserver",null);Q.remove(i)}else U.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(k,Q){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,C.e)("FlowGraphReceiveCustomEventBlock",o)}}]);