"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[86],{15514:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphReceiveCustomEventBlock:()=>d});var V=I(14068),i=I(12128),A=I(12282),B=I(14018);class d extends V.c{constructor(y){super(y),this.config=y,this.initPriority=1;for(const S in this.config.eventData)this.registerDataOutput(S,this.config.eventData[S].type)}_preparePendingTasks(y){const S=y.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(S&&S.hasObservers()&&S.observers.length>B.d.MaxEventsPerType)return void this._reportError(y,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${B.d.MaxEventsPerType}.`);const I=S.add((S=>{const I=Object.keys(S);for(const i of I){var V;null===(V=this.getDataOutput(i))||void 0===V||V.setValue(S[i],y)}this._execute(y)}));y._setExecutionVariable(this,"_eventObserver",I)}_cancelPendingTasks(y){const S=y.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(S){const I=y._getExecutionVariable(this,"_eventObserver",null);S.remove(I)}else i.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(y,S){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,A.e)("FlowGraphReceiveCustomEventBlock",d)}}]);