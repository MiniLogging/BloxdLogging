"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[86],{14335:(s,Z,o)=>{o.r(Z),o.d(Z,{FlowGraphSwitchBlock:()=>O});var t=o(12798),j=o(12775),S=o(10916),a=o(12816);class O extends t.c{constructor(s){super(s),this.config=s,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",j.d);const Z=this.config.cases||[];for(const o of Z)this._caseToOutputFlow.set(o,this._registerSignalOutput(`out_${o}`))}_execute(s,Z){const o=this.case.getValue(s);let t;t=(0,a.s)(o)?this._getOutputFlowForCase((0,a.o)(o)):this._getOutputFlowForCase(o),t?t._activateSignal(s):this.default._activateSignal(s)}addCase(s){this.config.cases.includes(s)||(this.config.cases.push(s),this._caseToOutputFlow.set(s,this._registerSignalOutput(`out_${s}`)))}removeCase(s){if(!this.config.cases.includes(s))return;const Z=this.config.cases.indexOf(s);this.config.cases.splice(Z,1),this._caseToOutputFlow.delete(s)}_getOutputFlowForCase(s){return this._caseToOutputFlow.get(s)}getClassName(){return"FlowGraphSwitchBlock"}serialize(s){super.serialize(s),s.cases=this.config.cases}}(0,S.f)("FlowGraphSwitchBlock",O)}}]);