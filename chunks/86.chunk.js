"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[86],{14968:(M,p,b)=>{b.r(p),b.d(p,{FlowGraphReceiveCustomEventBlock:()=>u});var Q=b(13512),q=b(11621),B=b(11757),k=b(13454);class u extends Q.e{constructor(M){super(M),this.config=M,this.initPriority=1;for(const p in this.config.eventData)this.registerDataOutput(p,this.config.eventData[p].type)}_preparePendingTasks(M){const p=M.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(p&&p.hasObservers()&&p.observers.length>k.c.MaxEventsPerType)return void this._reportError(M,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${k.c.MaxEventsPerType}.`);const b=p.add((p=>{const b=Object.keys(p);for(const q of b){var Q;null===(Q=this.getDataOutput(q))||void 0===Q||Q.setValue(p[q],M)}this._execute(M)}));M._setExecutionVariable(this,"_eventObserver",b)}_cancelPendingTasks(M){const p=M.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(p){const b=M._getExecutionVariable(this,"_eventObserver",null);p.remove(b)}else q.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(M,p){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,B.g)("FlowGraphReceiveCustomEventBlock",u)}}]);