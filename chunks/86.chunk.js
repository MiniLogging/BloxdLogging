"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[86],{15646:(U,G,C)=>{C.r(G),C.d(G,{FlowGraphReceiveCustomEventBlock:()=>E});var L=C(14173),X=C(12718),l=C(12850),t=C(14120);class E extends L.d{constructor(U){super(U),this.config=U,this.initPriority=1;for(const G in this.config.eventData)this.registerDataOutput(G,this.config.eventData[G].type)}_preparePendingTasks(U){const G=U.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(G&&G.hasObservers()&&G.observers.length>t.d.MaxEventsPerType)return void this._reportError(U,"FlowGraphReceiveCustomEventBlock: Too many observers for event ".concat(this.config.eventId,". Max is ").concat(t.d.MaxEventsPerType,"."));const C=G.add((G=>{const C=Object.keys(G);for(const X of C){var L;null===(L=this.getDataOutput(X))||void 0===L||L.setValue(G[X],U)}this._execute(U)}));U._setExecutionVariable(this,"_eventObserver",C)}_cancelPendingTasks(U){const G=U.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(G){const C=U._getExecutionVariable(this,"_eventObserver",null);G.remove(C)}else X.Tools.Warn("FlowGraphReceiveCustomEventBlock: Missing observable for event ".concat(this.config.eventId))}_executeEvent(U,G){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,l.e)("FlowGraphReceiveCustomEventBlock",E)}}]);