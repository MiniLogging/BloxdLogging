"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[86],{15995:(a,c,o)=>{o.r(c),o.d(c,{FlowGraphReceiveCustomEventBlock:()=>p});var s=o(14437),q=o(12637),t=o(12776),i=o(14377);class p extends s.e{constructor(a){super(a),this.config=a,this.initPriority=1;for(const c in this.config.eventData)this.registerDataOutput(c,this.config.eventData[c].type)}_preparePendingTasks(a){const c=a.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(c&&c.hasObservers()&&c.observers.length>i.c.MaxEventsPerType)return void this._reportError(a,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${i.c.MaxEventsPerType}.`);const o=c.add((c=>{const o=Object.keys(c);for(const q of o){var s;null===(s=this.getDataOutput(q))||void 0===s||s.setValue(c[q],a)}this._execute(a)}));a._setExecutionVariable(this,"_eventObserver",o)}_cancelPendingTasks(a){const c=a.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(c){const o=a._getExecutionVariable(this,"_eventObserver",null);c.remove(o)}else q.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(a,c){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,t.d)("FlowGraphReceiveCustomEventBlock",p)}}]);