"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[86],{14942:(K,O,F)=>{F.r(O),F.d(O,{FlowGraphReceiveCustomEventBlock:()=>J});var f=F(13485),r=F(11517),l=F(11661),q=F(13426);class J extends f.d{constructor(K){super(K),this.config=K,this.initPriority=1;for(const O in this.config.eventData)this.registerDataOutput(O,this.config.eventData[O].type)}_preparePendingTasks(K){const O=K.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(O&&O.hasObservers()&&O.observers.length>q.b.MaxEventsPerType)return void this._reportError(K,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${q.b.MaxEventsPerType}.`);const F=O.add((O=>{const F=Object.keys(O);for(const r of F){var f;null===(f=this.getDataOutput(r))||void 0===f||f.setValue(O[r],K)}this._execute(K)}));K._setExecutionVariable(this,"_eventObserver",F)}_cancelPendingTasks(K){const O=K.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(O){const F=K._getExecutionVariable(this,"_eventObserver",null);O.remove(F)}else r.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(K,O){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,l.g)("FlowGraphReceiveCustomEventBlock",J)}}]);