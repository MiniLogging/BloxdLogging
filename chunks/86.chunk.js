"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[86],{14435:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphReceiveCustomEventBlock:()=>s});var u=j(12918),k=j(11043),B=j(11181),x=j(12862);class s extends u.e{constructor(G){super(G),this.config=G,this.initPriority=1;for(const A in this.config.eventData)this.registerDataOutput(A,this.config.eventData[A].type)}_preparePendingTasks(G){const A=G.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(A&&A.hasObservers()&&A.observers.length>x.b.MaxEventsPerType)return void this._reportError(G,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${x.b.MaxEventsPerType}.`);const j=A.add((A=>{const j=Object.keys(A);for(const k of j){var u;null===(u=this.getDataOutput(k))||void 0===u||u.setValue(A[k],G)}this._execute(G)}));G._setExecutionVariable(this,"_eventObserver",j)}_cancelPendingTasks(G){const A=G.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(A){const j=G._getExecutionVariable(this,"_eventObserver",null);A.remove(j)}else k.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(G,A){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,B.h)("FlowGraphReceiveCustomEventBlock",s)}}]);