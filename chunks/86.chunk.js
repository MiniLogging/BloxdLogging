"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[86],{14813:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphReceiveCustomEventBlock:()=>z});var F=b(13323),E=b(11385),w=b(11551),Q=b(13268);class z extends F.e{constructor(U){super(U),this.config=U,this.initPriority=1;for(const X in this.config.eventData)this.registerDataOutput(X,this.config.eventData[X].type)}_preparePendingTasks(U){const X=U.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(X&&X.hasObservers()&&X.observers.length>Q.c.MaxEventsPerType)return void this._reportError(U,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${Q.c.MaxEventsPerType}.`);const b=X.add((X=>{const b=Object.keys(X);for(const E of b){var F;null===(F=this.getDataOutput(E))||void 0===F||F.setValue(X[E],U)}this._execute(U)}));U._setExecutionVariable(this,"_eventObserver",b)}_cancelPendingTasks(U){const X=U.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(X){const b=U._getExecutionVariable(this,"_eventObserver",null);X.remove(b)}else E.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(U,X){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,w.f)("FlowGraphReceiveCustomEventBlock",z)}}]);