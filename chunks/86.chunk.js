"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[86],{14297:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphSwitchBlock:()=>o});var X=Q(12722),Z=Q(12707),n=Q(10866),V=Q(12730);class o extends X.e{constructor(x){super(x),this.config=x,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",Z.d);const O=this.config.cases||[];for(const Q of O)this._caseToOutputFlow.set(Q,this._registerSignalOutput(`out_${Q}`))}_execute(x,O){const Q=this.case.getValue(x);let X;X=(0,V.v)(Q)?this._getOutputFlowForCase((0,V.u)(Q)):this._getOutputFlowForCase(Q),X?X._activateSignal(x):this.default._activateSignal(x)}addCase(x){this.config.cases.includes(x)||(this.config.cases.push(x),this._caseToOutputFlow.set(x,this._registerSignalOutput(`out_${x}`)))}removeCase(x){if(!this.config.cases.includes(x))return;const O=this.config.cases.indexOf(x);this.config.cases.splice(O,1),this._caseToOutputFlow.delete(x)}_getOutputFlowForCase(x){return this._caseToOutputFlow.get(x)}getClassName(){return"FlowGraphSwitchBlock"}serialize(x){super.serialize(x),x.cases=this.config.cases}}(0,n.d)("FlowGraphSwitchBlock",o)}}]);