"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[86],{15977:(q,I,l)=>{l.r(I),l.d(I,{FlowGraphReceiveCustomEventBlock:()=>a});var w=l(14477),t=l(12564),O=l(12711),c=l(14422);class a extends w.b{constructor(q){super(q),this.config=q,this.initPriority=1;for(const I in this.config.eventData)this.registerDataOutput(I,this.config.eventData[I].type)}_preparePendingTasks(q){const I=q.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(I&&I.hasObservers()&&I.observers.length>c.c.MaxEventsPerType)return void this._reportError(q,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${c.c.MaxEventsPerType}.`);const l=I.add((I=>{const l=Object.keys(I);for(const t of l){var w;null===(w=this.getDataOutput(t))||void 0===w||w.setValue(I[t],q)}this._execute(q)}));q._setExecutionVariable(this,"_eventObserver",l)}_cancelPendingTasks(q){const I=q.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(I){const l=q._getExecutionVariable(this,"_eventObserver",null);I.remove(l)}else t.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(q,I){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,O.e)("FlowGraphReceiveCustomEventBlock",a)}}]);