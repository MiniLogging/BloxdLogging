"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[86],{14751:(w,E,G)=>{G.r(E),G.d(E,{FlowGraphReceiveCustomEventBlock:()=>x});var P=G(13315),h=G(11498),B=G(11646),y=G(13269);class x extends P.c{constructor(w){super(w),this.config=w,this.initPriority=1;for(const E in this.config.eventData)this.registerDataOutput(E,this.config.eventData[E].type)}_preparePendingTasks(w){const E=w.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(E&&E.hasObservers()&&E.observers.length>y.b.MaxEventsPerType)return void this._reportError(w,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${y.b.MaxEventsPerType}.`);const G=E.add((E=>{const G=Object.keys(E);for(const h of G){var P;null===(P=this.getDataOutput(h))||void 0===P||P.setValue(E[h],w)}this._execute(w)}));w._setExecutionVariable(this,"_eventObserver",G)}_cancelPendingTasks(w){const E=w.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(E){const G=w._getExecutionVariable(this,"_eventObserver",null);E.remove(G)}else h.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(w,E){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,B.g)("FlowGraphReceiveCustomEventBlock",x)}}]);