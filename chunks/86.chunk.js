"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[86],{15707:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphReceiveCustomEventBlock:()=>U});var g=V(14275),E=V(12291),I=V(12449),Q=V(14229);class U extends g.e{constructor(o){super(o),this.config=o,this.initPriority=1;for(const v in this.config.eventData)this.registerDataOutput(v,this.config.eventData[v].type)}_preparePendingTasks(o){const v=o.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(v&&v.hasObservers()&&v.observers.length>Q.d.MaxEventsPerType)return void this._reportError(o,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${Q.d.MaxEventsPerType}.`);const V=v.add((v=>{const V=Object.keys(v);for(const E of V){var g;null===(g=this.getDataOutput(E))||void 0===g||g.setValue(v[E],o)}this._execute(o)}));o._setExecutionVariable(this,"_eventObserver",V)}_cancelPendingTasks(o){const v=o.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(v){const V=o._getExecutionVariable(this,"_eventObserver",null);v.remove(V)}else E.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(o,v){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,I.h)("FlowGraphReceiveCustomEventBlock",U)}}]);