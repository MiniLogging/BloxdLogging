"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[86],{15486:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphReceiveCustomEventBlock:()=>W});var l=A(14023),w=A(12144),N=A(12283),p=A(13973);class W extends l.b{constructor(y){super(y),this.config=y,this.initPriority=1;for(const c in this.config.eventData)this.registerDataOutput(c,this.config.eventData[c].type)}_preparePendingTasks(y){const c=y.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(c&&c.hasObservers()&&c.observers.length>p.d.MaxEventsPerType)return void this._reportError(y,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${p.d.MaxEventsPerType}.`);const A=c.add((c=>{const A=Object.keys(c);for(const w of A){var l;null===(l=this.getDataOutput(w))||void 0===l||l.setValue(c[w],y)}this._execute(y)}));y._setExecutionVariable(this,"_eventObserver",A)}_cancelPendingTasks(y){const c=y.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(c){const A=y._getExecutionVariable(this,"_eventObserver",null);c.remove(A)}else w.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(y,c){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,N.f)("FlowGraphReceiveCustomEventBlock",W)}}]);