"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[86],{14988:(Z,h,V)=>{V.r(h),V.d(h,{FlowGraphReceiveCustomEventBlock:()=>d});var v=V(13500),A=V(11564),H=V(11691),K=V(13443);class d extends v.d{constructor(Z){super(Z),this.config=Z,this.initPriority=1;for(const h in this.config.eventData)this.registerDataOutput(h,this.config.eventData[h].type)}_preparePendingTasks(Z){const h=Z.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(h&&h.hasObservers()&&h.observers.length>K.e.MaxEventsPerType)return void this._reportError(Z,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${K.e.MaxEventsPerType}.`);const V=h.add((h=>{const V=Object.keys(h);for(const A of V){var v;null===(v=this.getDataOutput(A))||void 0===v||v.setValue(h[A],Z)}this._execute(Z)}));Z._setExecutionVariable(this,"_eventObserver",V)}_cancelPendingTasks(Z){const h=Z.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(h){const V=Z._getExecutionVariable(this,"_eventObserver",null);h.remove(V)}else A.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(Z,h){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,H.i)("FlowGraphReceiveCustomEventBlock",d)}}]);