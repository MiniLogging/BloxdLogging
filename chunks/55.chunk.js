"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[55],{13781:(A,X,s)=>{s.r(X),s.d(X,{FlowGraphStopAnimationBlock:()=>K});var N=s(12677),f=s(616),E=s(470),g=s(12715);class K extends g.c{constructor(A){super(A),this.animationGroup=this.registerDataInput("animationGroup",N.b),this.stopAtFrame=this.registerDataInput("stopAtFrame",N.n,-1)}_preparePendingTasks(A){const X=this.animationGroup.getValue(A),s=this.stopAtFrame.getValue(A)??-1,N=A._getGlobalContextVariable("pendingStopAnimations",[]);N.push({uniqueId:X.uniqueId,stopAtFrame:s}),A._setGlobalContextVariable("pendingStopAnimations",N)}_cancelPendingTasks(A){const X=this.animationGroup.getValue(A),s=A._getGlobalContextVariable("pendingStopAnimations",[]);for(let N=0;N<s.length;N++)if(s[N].uniqueId===X.uniqueId){s.splice(N,1),A._setGlobalContextVariable("pendingStopAnimations",s);break}}_execute(A){const X=this.animationGroup.getValue(A),s=this.stopAtFrame.getValue(A)??-1;return X?isNaN(s)?this._reportError(A,"Invalid stop time."):(s>0?this._startPendingTasks(A):this._stopAnimation(X,A),void this.out._activateSignal(A)):(E.b.Warn("No animation group provided to stop."),this._reportError(A,"No animation group provided to stop."))}_executeOnTick(A){const X=this.animationGroup.getValue(A),s=A._getGlobalContextVariable("pendingStopAnimations",[]);for(let N=0;N<s.length;N++)if(s[N].uniqueId===X.uniqueId&&X.getCurrentFrame()>=s[N].stopAtFrame){this._stopAnimation(X,A),s.splice(N,1),A._setGlobalContextVariable("pendingStopAnimations",s),this.done._activateSignal(A),A._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(A,X){const s=X._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),N=s.indexOf(A.uniqueId);-1!==N&&(A.stop(),s.splice(N,1),X._setGlobalContextVariable("currentlyRunningAnimationGroups",s))}}(0,f.f)("FlowGraphStopAnimationBlock",K)}}]);