"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[55],{13980:(n,k,T)=>{T.r(k),T.d(k,{FlowGraphStopAnimationBlock:()=>w});var c=T(12831),K=T(675),Q=T(556),G=T(12871);class w extends G.e{constructor(n){super(n),this.animationGroup=this.registerDataInput("animationGroup",c.e),this.stopAtFrame=this.registerDataInput("stopAtFrame",c.w,-1)}_preparePendingTasks(n){const k=this.animationGroup.getValue(n),T=this.stopAtFrame.getValue(n)??-1,c=n._getGlobalContextVariable("pendingStopAnimations",[]);c.push({uniqueId:k.uniqueId,stopAtFrame:T}),n._setGlobalContextVariable("pendingStopAnimations",c)}_cancelPendingTasks(n){const k=this.animationGroup.getValue(n),T=n._getGlobalContextVariable("pendingStopAnimations",[]);for(let c=0;c<T.length;c++)if(T[c].uniqueId===k.uniqueId){T.splice(c,1),n._setGlobalContextVariable("pendingStopAnimations",T);break}}_execute(n){const k=this.animationGroup.getValue(n),T=this.stopAtFrame.getValue(n)??-1;return k?isNaN(T)?this._reportError(n,"Invalid stop time."):(T>0?this._startPendingTasks(n):this._stopAnimation(k,n),void this.out._activateSignal(n)):(Q.d.Warn("No animation group provided to stop."),this._reportError(n,"No animation group provided to stop."))}_executeOnTick(n){const k=this.animationGroup.getValue(n),T=n._getGlobalContextVariable("pendingStopAnimations",[]);for(let c=0;c<T.length;c++)if(T[c].uniqueId===k.uniqueId&&k.getCurrentFrame()>=T[c].stopAtFrame){this._stopAnimation(k,n),T.splice(c,1),n._setGlobalContextVariable("pendingStopAnimations",T),this.done._activateSignal(n),n._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(n,k){const T=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),c=T.indexOf(n.uniqueId);-1!==c&&(n.stop(),T.splice(c,1),k._setGlobalContextVariable("currentlyRunningAnimationGroups",T))}}(0,K.f)("FlowGraphStopAnimationBlock",w)}}]);