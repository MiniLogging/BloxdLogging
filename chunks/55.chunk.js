"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[55],{13972:(P,Q,O)=>{O.r(Q),O.d(Q,{FlowGraphStopAnimationBlock:()=>q});var b=O(12871),F=O(696),g=O(561),m=O(12916);class q extends m.b{constructor(P){super(P),this.animationGroup=this.registerDataInput("animationGroup",b.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",b.o,-1)}_preparePendingTasks(P){const Q=this.animationGroup.getValue(P),O=this.stopAtFrame.getValue(P)??-1,b=P._getGlobalContextVariable("pendingStopAnimations",[]);b.push({uniqueId:Q.uniqueId,stopAtFrame:O}),P._setGlobalContextVariable("pendingStopAnimations",b)}_cancelPendingTasks(P){const Q=this.animationGroup.getValue(P),O=P._getGlobalContextVariable("pendingStopAnimations",[]);for(let b=0;b<O.length;b++)if(O[b].uniqueId===Q.uniqueId){O.splice(b,1),P._setGlobalContextVariable("pendingStopAnimations",O);break}}_execute(P){const Q=this.animationGroup.getValue(P),O=this.stopAtFrame.getValue(P)??-1;return Q?isNaN(O)?this._reportError(P,"Invalid stop time."):(O>0?this._startPendingTasks(P):this._stopAnimation(Q,P),void this.out._activateSignal(P)):(g.d.Warn("No animation group provided to stop."),this._reportError(P,"No animation group provided to stop."))}_executeOnTick(P){const Q=this.animationGroup.getValue(P),O=P._getGlobalContextVariable("pendingStopAnimations",[]);for(let b=0;b<O.length;b++)if(O[b].uniqueId===Q.uniqueId&&Q.getCurrentFrame()>=O[b].stopAtFrame){this._stopAnimation(Q,P),O.splice(b,1),P._setGlobalContextVariable("pendingStopAnimations",O),this.done._activateSignal(P),P._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(P,Q){const O=Q._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),b=O.indexOf(P.uniqueId);-1!==b&&(P.stop(),O.splice(b,1),Q._setGlobalContextVariable("currentlyRunningAnimationGroups",O))}}(0,F.f)("FlowGraphStopAnimationBlock",q)}}]);