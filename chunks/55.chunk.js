"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[55],{13959:(U,M,b)=>{b.r(M),b.d(M,{FlowGraphStopAnimationBlock:()=>y});var a=b(12775),A=b(609),H=b(497),W=b(12823);class y extends W.d{constructor(U){super(U),this.animationGroup=this.registerDataInput("animationGroup",a.c),this.stopAtFrame=this.registerDataInput("stopAtFrame",a.t,-1)}_preparePendingTasks(U){const M=this.animationGroup.getValue(U),b=this.stopAtFrame.getValue(U)??-1,a=U._getGlobalContextVariable("pendingStopAnimations",[]);a.push({uniqueId:M.uniqueId,stopAtFrame:b}),U._setGlobalContextVariable("pendingStopAnimations",a)}_cancelPendingTasks(U){const M=this.animationGroup.getValue(U),b=U._getGlobalContextVariable("pendingStopAnimations",[]);for(let a=0;a<b.length;a++)if(b[a].uniqueId===M.uniqueId){b.splice(a,1),U._setGlobalContextVariable("pendingStopAnimations",b);break}}_execute(U){const M=this.animationGroup.getValue(U),b=this.stopAtFrame.getValue(U)??-1;return M?isNaN(b)?this._reportError(U,"Invalid stop time."):(b>0?this._startPendingTasks(U):this._stopAnimation(M,U),void this.out._activateSignal(U)):(H.b.Warn("No animation group provided to stop."),this._reportError(U,"No animation group provided to stop."))}_executeOnTick(U){const M=this.animationGroup.getValue(U),b=U._getGlobalContextVariable("pendingStopAnimations",[]);for(let a=0;a<b.length;a++)if(b[a].uniqueId===M.uniqueId&&M.getCurrentFrame()>=b[a].stopAtFrame){this._stopAnimation(M,U),b.splice(a,1),U._setGlobalContextVariable("pendingStopAnimations",b),this.done._activateSignal(U),U._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(U,M){const b=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),a=b.indexOf(U.uniqueId);-1!==a&&(U.stop(),b.splice(a,1),M._setGlobalContextVariable("currentlyRunningAnimationGroups",b))}}(0,A.i)("FlowGraphStopAnimationBlock",y)}}]);