"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[106],{15690:(V,h,mV)=>{mV.r(h),mV.d(h,{FlowGraphSwitchBlock:()=>k});var t=mV(14119),L=mV(14109),N=mV(12388),A=mV(14135);class k extends t.b{constructor(V){super(V),this.config=V,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",L.e);const h=this.config.cases||[];for(const mV of h)this._caseToOutputFlow.set(mV,this._registerSignalOutput(`out_${mV}`))}_execute(V,h){const mV=this.case.getValue(V);let t;t=(0,A.r)(mV)?this._getOutputFlowForCase((0,A.o)(mV)):this._getOutputFlowForCase(mV),t?t._activateSignal(V):this.default._activateSignal(V)}addCase(V){this.config.cases.includes(V)||(this.config.cases.push(V),this._caseToOutputFlow.set(V,this._registerSignalOutput(`out_${V}`)))}removeCase(V){if(!this.config.cases.includes(V))return;const h=this.config.cases.indexOf(V);this.config.cases.splice(h,1),this._caseToOutputFlow.delete(V)}_getOutputFlowForCase(V){return this._caseToOutputFlow.get(V)}getClassName(){return"FlowGraphSwitchBlock"}serialize(V){super.serialize(V),V.cases=this.config.cases}}(0,N.i)("FlowGraphSwitchBlock",k)}}]);