"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[106],{14551:(o,H,n)=>{n.r(H),n.d(H,{FlowGraphSwitchBlock:()=>Y});var E=n(12951),k=n(12933),g=n(11140),O=n(12970);class Y extends E.b{constructor(o){super(o),this.config=o,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",k.b);const H=this.config.cases||[];for(const n of H)this._caseToOutputFlow.set(n,this._registerSignalOutput(`out_${n}`))}_execute(o,H){const n=this.case.getValue(o);let E;E=(0,O.o)(n)?this._getOutputFlowForCase((0,O.n)(n)):this._getOutputFlowForCase(n),E?E._activateSignal(o):this.default._activateSignal(o)}addCase(o){this.config.cases.includes(o)||(this.config.cases.push(o),this._caseToOutputFlow.set(o,this._registerSignalOutput(`out_${o}`)))}removeCase(o){if(!this.config.cases.includes(o))return;const H=this.config.cases.indexOf(o);this.config.cases.splice(H,1),this._caseToOutputFlow.delete(o)}_getOutputFlowForCase(o){return this._caseToOutputFlow.get(o)}getClassName(){return"FlowGraphSwitchBlock"}serialize(o){super.serialize(o),o.cases=this.config.cases}}(0,g.e)("FlowGraphSwitchBlock",Y)}}]);