"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[106],{14478:(h,V,i)=>{i.r(V),i.d(V,{FlowGraphSwitchBlock:()=>q});var S=i(12824),l=i(12805),Y=i(11091),g=i(12841);class q extends S.c{constructor(h){super(h),this.config=h,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",l.c);const V=this.config.cases||[];for(const i of V)this._caseToOutputFlow.set(i,this._registerSignalOutput(`out_${i}`))}_execute(h,V){const i=this.case.getValue(h);let S;S=(0,g.r)(i)?this._getOutputFlowForCase((0,g.o)(i)):this._getOutputFlowForCase(i),S?S._activateSignal(h):this.default._activateSignal(h)}addCase(h){this.config.cases.includes(h)||(this.config.cases.push(h),this._caseToOutputFlow.set(h,this._registerSignalOutput(`out_${h}`)))}removeCase(h){if(!this.config.cases.includes(h))return;const V=this.config.cases.indexOf(h);this.config.cases.splice(V,1),this._caseToOutputFlow.delete(h)}_getOutputFlowForCase(h){return this._caseToOutputFlow.get(h)}getClassName(){return"FlowGraphSwitchBlock"}serialize(h){super.serialize(h),h.cases=this.config.cases}}(0,Y.f)("FlowGraphSwitchBlock",q)}}]);