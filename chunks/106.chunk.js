"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[106],{15619:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphSwitchBlock:()=>d});var V=I(14053),i=I(14033),A=I(12282),B=I(14064);class d extends V.c{constructor(y){super(y),this.config=y,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",i.c);const S=this.config.cases||[];for(const I of S)this._caseToOutputFlow.set(I,this._registerSignalOutput(`out_${I}`))}_execute(y,S){const I=this.case.getValue(y);let V;V=(0,B.q)(I)?this._getOutputFlowForCase((0,B.p)(I)):this._getOutputFlowForCase(I),V?V._activateSignal(y):this.default._activateSignal(y)}addCase(y){this.config.cases.includes(y)||(this.config.cases.push(y),this._caseToOutputFlow.set(y,this._registerSignalOutput(`out_${y}`)))}removeCase(y){if(!this.config.cases.includes(y))return;const S=this.config.cases.indexOf(y);this.config.cases.splice(S,1),this._caseToOutputFlow.delete(y)}_getOutputFlowForCase(y){return this._caseToOutputFlow.get(y)}getClassName(){return"FlowGraphSwitchBlock"}serialize(y){super.serialize(y),y.cases=this.config.cases}}(0,A.e)("FlowGraphSwitchBlock",d)}}]);