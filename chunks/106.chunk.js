"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[106],{14403:(g,w,q)=>{q.r(w),q.d(w,{FlowGraphSwitchBlock:()=>i});var R=q(12855),o=q(12836),r=q(11128),S=q(12872);class i extends R.d{constructor(g){super(g),this.config=g,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",o.d);const w=this.config.cases||[];for(const q of w)this._caseToOutputFlow.set(q,this._registerSignalOutput(`out_${q}`))}_execute(g,w){const q=this.case.getValue(g);let R;R=(0,S.r)(q)?this._getOutputFlowForCase((0,S.o)(q)):this._getOutputFlowForCase(q),R?R._activateSignal(g):this.default._activateSignal(g)}addCase(g){this.config.cases.includes(g)||(this.config.cases.push(g),this._caseToOutputFlow.set(g,this._registerSignalOutput(`out_${g}`)))}removeCase(g){if(!this.config.cases.includes(g))return;const w=this.config.cases.indexOf(g);this.config.cases.splice(w,1),this._caseToOutputFlow.delete(g)}_getOutputFlowForCase(g){return this._caseToOutputFlow.get(g)}getClassName(){return"FlowGraphSwitchBlock"}serialize(g){super.serialize(g),g.cases=this.config.cases}}(0,r.g)("FlowGraphSwitchBlock",i)}}]);