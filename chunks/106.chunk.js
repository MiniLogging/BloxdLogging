"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[106],{14434:(q,S,b)=>{b.r(S),b.d(S,{FlowGraphSwitchBlock:()=>g});var z=b(12850),C=b(12839),v=b(11058),U=b(12856);class g extends z.e{constructor(q){super(q),this.config=q,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",C.d);const S=this.config.cases||[];for(const b of S)this._caseToOutputFlow.set(b,this._registerSignalOutput(`out_${b}`))}_execute(q,S){const b=this.case.getValue(q);let z;z=(0,U.s)(b)?this._getOutputFlowForCase((0,U.o)(b)):this._getOutputFlowForCase(b),z?z._activateSignal(q):this.default._activateSignal(q)}addCase(q){this.config.cases.includes(q)||(this.config.cases.push(q),this._caseToOutputFlow.set(q,this._registerSignalOutput(`out_${q}`)))}removeCase(q){if(!this.config.cases.includes(q))return;const S=this.config.cases.indexOf(q);this.config.cases.splice(S,1),this._caseToOutputFlow.delete(q)}_getOutputFlowForCase(q){return this._caseToOutputFlow.get(q)}getClassName(){return"FlowGraphSwitchBlock"}serialize(q){super.serialize(q),q.cases=this.config.cases}}(0,v.f)("FlowGraphSwitchBlock",g)}}]);