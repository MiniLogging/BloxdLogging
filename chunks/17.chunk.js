"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[17],{11235:(g,w,q)=>{q.d(w,{Jw:()=>m,d:()=>e,g:()=>y});var R=q(11192),o=q(11128),r=q(11188),S=q(11195);function i(g){return Math.pow(g,r.h)}function T(g){return g<=.04045?.0773993808*g:Math.pow(.947867299*(g+.055),2.4)}function z(g){return Math.pow(g,r.f)}function t(g){return g<=.0031308?12.92*g:1.055*Math.pow(g,.41666)-.055}class m{constructor(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=g,this.g=w,this.b=q}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"Jw"}getHashCode(){let g=255*this.r|0;return g=397*g^255*this.g,g=397*g^255*this.b,g}toArray(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return g[w]=this.r,g[w+1]=this.g,g[w+2]=this.b,this}yq(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return m.FromArrayToRef(g,w,this),this}toColor4(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new e(this.r,this.g,this.b,g)}qi(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(g){return new m(this.r*g.r,this.g*g.g,this.b*g.b)}multiplyToRef(g,w){return w.r=this.r*g.r,w.g=this.g*g.g,w.b=this.b*g.b,w}multiplyInPlace(g){return this.r*=g.r,this.g*=g.g,this.b*=g.b,this}multiplyByFloats(g,w,q){return new m(this.r*g,this.g*w,this.b*q)}divide(g){throw new ReferenceError("Can not divide a color")}divideToRef(g,w){throw new ReferenceError("Can not divide a color")}divideInPlace(g){throw new ReferenceError("Can not divide a color")}minimizeInPlace(g){return this.minimizeInPlaceFromFloats(g.r,g.g,g.b)}maximizeInPlace(g){return this.maximizeInPlaceFromFloats(g.r,g.g,g.b)}minimizeInPlaceFromFloats(g,w,q){return this.r=Math.min(g,this.r),this.g=Math.min(w,this.g),this.b=Math.min(q,this.b),this}maximizeInPlaceFromFloats(g,w,q){return this.r=Math.max(g,this.r),this.g=Math.max(w,this.g),this.b=Math.max(q,this.b),this}floorToRef(g){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(g){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(g){return g&&this.r===g.r&&this.g===g.g&&this.b===g.b}equalsFloats(g,w,q){return this.equalsToFloats(g,w,q)}equalsToFloats(g,w,q){return this.r===g&&this.g===w&&this.b===q}equalsWithEpsilon(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.c;return(0,S.WithinEpsilon)(this.r,g.r,w)&&(0,S.WithinEpsilon)(this.g,g.g,w)&&(0,S.WithinEpsilon)(this.b,g.b,w)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(g){throw new ReferenceError("Can not negate a color")}scale(g){return new m(this.r*g,this.g*g,this.b*g)}scaleInPlace(g){return this.r*=g,this.g*=g,this.b*=g,this}scaleToRef(g,w){return w.r=this.r*g,w.g=this.g*g,w.b=this.b*g,w}scaleAndAddToRef(g,w){return w.r+=this.r*g,w.g+=this.g*g,w.b+=this.b*g,w}clampToRef(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,q=arguments.length>2?arguments[2]:void 0;return q.r=(0,S.Clamp)(this.r,g,w),q.g=(0,S.Clamp)(this.g,g,w),q.b=(0,S.Clamp)(this.b,g,w),q}add(g){return new m(this.r+g.r,this.g+g.g,this.b+g.b)}addInPlace(g){return this.r+=g.r,this.g+=g.g,this.b+=g.b,this}addInPlaceFromFloats(g,w,q){return this.r+=g,this.g+=w,this.b+=q,this}addToRef(g,w){return w.r=this.r+g.r,w.g=this.g+g.g,w.b=this.b+g.b,w}yw(g){return new m(this.r-g.r,this.g-g.g,this.b-g.b)}subtractToRef(g,w){return w.r=this.r-g.r,w.g=this.g-g.g,w.b=this.b-g.b,w}Yt(g){return this.r-=g.r,this.g-=g.g,this.b-=g.b,this}subtractFromFloats(g,w,q){return new m(this.r-g,this.g-w,this.b-q)}subtractFromFloatsToRef(g,w,q,R){return R.r=this.r-g,R.g=this.g-w,R.b=this.b-q,R}clone(){return new m(this.r,this.g,this.b)}T(g){return this.r=g.r,this.g=g.g,this.b=g.b,this}mi(g,w,q){return this.r=g,this.g=w,this.b=q,this}set(g,w,q){return this.mi(g,w,q)}yi(g){return this.r=this.g=this.b=g,this}toHexString(){const g=Math.round(255*this.r),w=Math.round(255*this.g),q=Math.round(255*this.b);return"#"+(0,S.ToHex)(g)+(0,S.ToHex)(w)+(0,S.ToHex)(q)}fromHexString(g){return"#"!==g.substring(0,1)||7!==g.length||(this.r=parseInt(g.substring(1,3),16)/255,this.g=parseInt(g.substring(3,5),16)/255,this.b=parseInt(g.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new m)}toHSVToRef(g){const w=this.r,q=this.g,R=this.b,o=Math.max(w,q,R),r=Math.min(w,q,R);let S=0,i=0;const T=o,z=o-r;return 0!==o&&(i=z/o),o!=r&&(o==w?(S=(q-R)/z,q<R&&(S+=6)):o==q?S=(R-w)/z+2:o==R&&(S=(w-q)/z+4),S*=60),g.r=S,g.g=i,g.b=T,g}toLinearSpace(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=new m;return this.toLinearSpaceToRef(w,g),w}toLinearSpaceToRef(g){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(g.r=T(this.r),g.g=T(this.g),g.b=T(this.b)):(g.r=i(this.r),g.g=i(this.g),g.b=i(this.b)),this}toGammaSpace(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=new m;return this.toGammaSpaceToRef(w,g),w}toGammaSpaceToRef(g){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(g.r=t(this.r),g.g=t(this.g),g.b=t(this.b)):(g.r=z(this.r),g.g=z(this.g),g.b=z(this.b)),this}static HSVtoRGBToRef(g,w,q,R){const o=q*w,r=g/60,S=o*(1-Math.abs(r%2-1));let i=0,T=0,z=0;r>=0&&r<=1?(i=o,T=S):r>=1&&r<=2?(i=S,T=o):r>=2&&r<=3?(T=o,z=S):r>=3&&r<=4?(T=S,z=o):r>=4&&r<=5?(i=S,z=o):r>=5&&r<=6&&(i=o,z=S);const t=q-o;return R.r=i+t,R.g=T+t,R.b=z+t,R}static FromHSV(g,w,q){const R=new m(0,0,0);return m.HSVtoRGBToRef(g,w,q,R),R}static FromHexString(g){return new m(0,0,0).fromHexString(g)}static Ri(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new m(g[w],g[w+1],g[w+2])}static FromArrayToRef(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,q=arguments.length>2?arguments[2]:void 0;q.r=g[w],q.g=g[w+1],q.b=g[w+2]}static FromInts(g,w,q){return new m(g/255,w/255,q/255)}static Lerp(g,w,q){const R=new m(0,0,0);return m.LerpToRef(g,w,q,R),R}static LerpToRef(g,w,q,R){R.r=g.r+(w.r-g.r)*q,R.g=g.g+(w.g-g.g)*q,R.b=g.b+(w.b-g.b)*q}static Hermite(g,w,q,R,o){const r=o*o,S=o*r,i=2*S-3*r+1,T=-2*S+3*r,z=S-2*r+o,t=S-r,e=g.r*i+q.r*T+w.r*z+R.r*t,y=g.g*i+q.g*T+w.g*z+R.g*t,L=g.b*i+q.b*T+w.b*z+R.b*t;return new m(e,y,L)}static Hermite1stDerivative(g,w,q,R,o){const r=m.Black();return this.Hermite1stDerivativeToRef(g,w,q,R,o,r),r}static Hermite1stDerivativeToRef(g,w,q,R,o,r){const S=o*o;r.r=6*(S-o)*g.r+(3*S-4*o+1)*w.r+6*(-S+o)*q.r+(3*S-2*o)*R.r,r.g=6*(S-o)*g.g+(3*S-4*o+1)*w.g+6*(-S+o)*q.g+(3*S-2*o)*R.g,r.b=6*(S-o)*g.b+(3*S-4*o+1)*w.b+6*(-S+o)*q.b+(3*S-2*o)*R.b}static Red(){return new m(1,0,0)}static Green(){return new m(0,1,0)}static Blue(){return new m(0,0,1)}static Black(){return new m(0,0,0)}static get BlackReadOnly(){return m._BlackReadOnly}static White(){return new m(1,1,1)}static Purple(){return new m(.5,0,.5)}static Magenta(){return new m(1,0,1)}static Yellow(){return new m(1,1,0)}static Gray(){return new m(.5,.5,.5)}static Teal(){return new m(0,1,1)}static Random(){return new m(Math.random(),Math.random(),Math.random())}}m._V8PerformanceHack=new m(.5,.5,.5),m._BlackReadOnly=m.Black(),Object.defineProperties(m.prototype,{dimension:{value:[3]},rank:{value:1}});class e{constructor(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=g,this.g=w,this.b=q,this.a=R}qi(){return[this.r,this.g,this.b,this.a]}toArray(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return g[w]=this.r,g[w+1]=this.g,g[w+2]=this.b,g[w+3]=this.a,this}yq(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=g[w],this.g=g[w+1],this.b=g[w+2],this.a=g[w+3],this}equals(g){return g&&this.r===g.r&&this.g===g.g&&this.b===g.b&&this.a===g.a}add(g){return new e(this.r+g.r,this.g+g.g,this.b+g.b,this.a+g.a)}addToRef(g,w){return w.r=this.r+g.r,w.g=this.g+g.g,w.b=this.b+g.b,w.a=this.a+g.a,w}addInPlace(g){return this.r+=g.r,this.g+=g.g,this.b+=g.b,this.a+=g.a,this}addInPlaceFromFloats(g,w,q,R){return this.r+=g,this.g+=w,this.b+=q,this.a+=R,this}yw(g){return new e(this.r-g.r,this.g-g.g,this.b-g.b,this.a-g.a)}subtractToRef(g,w){return w.r=this.r-g.r,w.g=this.g-g.g,w.b=this.b-g.b,w.a=this.a-g.a,w}Yt(g){return this.r-=g.r,this.g-=g.g,this.b-=g.b,this.a-=g.a,this}subtractFromFloats(g,w,q,R){return new e(this.r-g,this.g-w,this.b-q,this.a-R)}subtractFromFloatsToRef(g,w,q,R,o){return o.r=this.r-g,o.g=this.g-w,o.b=this.b-q,o.a=this.a-R,o}scale(g){return new e(this.r*g,this.g*g,this.b*g,this.a*g)}scaleInPlace(g){return this.r*=g,this.g*=g,this.b*=g,this.a*=g,this}scaleToRef(g,w){return w.r=this.r*g,w.g=this.g*g,w.b=this.b*g,w.a=this.a*g,w}scaleAndAddToRef(g,w){return w.r+=this.r*g,w.g+=this.g*g,w.b+=this.b*g,w.a+=this.a*g,w}clampToRef(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,q=arguments.length>2?arguments[2]:void 0;return q.r=(0,S.Clamp)(this.r,g,w),q.g=(0,S.Clamp)(this.g,g,w),q.b=(0,S.Clamp)(this.b,g,w),q.a=(0,S.Clamp)(this.a,g,w),q}multiply(g){return new e(this.r*g.r,this.g*g.g,this.b*g.b,this.a*g.a)}multiplyToRef(g,w){return w.r=this.r*g.r,w.g=this.g*g.g,w.b=this.b*g.b,w.a=this.a*g.a,w}multiplyInPlace(g){return this.r*=g.r,this.g*=g.g,this.b*=g.b,this.a*=g.a,this}multiplyByFloats(g,w,q,R){return new e(this.r*g,this.g*w,this.b*q,this.a*R)}divide(g){throw new ReferenceError("Can not divide a color")}divideToRef(g,w){throw new ReferenceError("Can not divide a color")}divideInPlace(g){throw new ReferenceError("Can not divide a color")}minimizeInPlace(g){return this.r=Math.min(this.r,g.r),this.g=Math.min(this.g,g.g),this.b=Math.min(this.b,g.b),this.a=Math.min(this.a,g.a),this}maximizeInPlace(g){return this.r=Math.max(this.r,g.r),this.g=Math.max(this.g,g.g),this.b=Math.max(this.b,g.b),this.a=Math.max(this.a,g.a),this}minimizeInPlaceFromFloats(g,w,q,R){return this.r=Math.min(g,this.r),this.g=Math.min(w,this.g),this.b=Math.min(q,this.b),this.a=Math.min(R,this.a),this}maximizeInPlaceFromFloats(g,w,q,R){return this.r=Math.max(g,this.r),this.g=Math.max(w,this.g),this.b=Math.max(q,this.b),this.a=Math.max(R,this.a),this}floorToRef(g){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(g){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(g){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.c;return(0,S.WithinEpsilon)(this.r,g.r,w)&&(0,S.WithinEpsilon)(this.g,g.g,w)&&(0,S.WithinEpsilon)(this.b,g.b,w)&&(0,S.WithinEpsilon)(this.a,g.a,w)}equalsToFloats(g,w,q,R){return this.r===g&&this.g===w&&this.b===q&&this.a===R}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"ci"}getHashCode(){let g=255*this.r|0;return g=397*g^255*this.g,g=397*g^255*this.b,g=397*g^255*this.a,g}clone(){return(new e).T(this)}T(g){return this.r=g.r,this.g=g.g,this.b=g.b,this.a=g.a,this}mi(g,w,q,R){return this.r=g,this.g=w,this.b=q,this.a=R,this}set(g,w,q,R){return this.mi(g,w,q,R)}yi(g){return this.r=this.g=this.b=this.a=g,this}toHexString(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=Math.round(255*this.r),q=Math.round(255*this.g),R=Math.round(255*this.b);if(g)return"#"+(0,S.ToHex)(w)+(0,S.ToHex)(q)+(0,S.ToHex)(R);const o=Math.round(255*this.a);return"#"+(0,S.ToHex)(w)+(0,S.ToHex)(q)+(0,S.ToHex)(R)+(0,S.ToHex)(o)}fromHexString(g){return"#"!==g.substring(0,1)||9!==g.length&&7!==g.length||(this.r=parseInt(g.substring(1,3),16)/255,this.g=parseInt(g.substring(3,5),16)/255,this.b=parseInt(g.substring(5,7),16)/255,9===g.length&&(this.a=parseInt(g.substring(7,9),16)/255)),this}toLinearSpace(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=new e;return this.toLinearSpaceToRef(w,g),w}toLinearSpaceToRef(g){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(g.r=T(this.r),g.g=T(this.g),g.b=T(this.b)):(g.r=i(this.r),g.g=i(this.g),g.b=i(this.b)),g.a=this.a,this}toGammaSpace(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=new e;return this.toGammaSpaceToRef(w,g),w}toGammaSpaceToRef(g){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(g.r=t(this.r),g.g=t(this.g),g.b=t(this.b)):(g.r=z(this.r),g.g=z(this.g),g.b=z(this.b)),g.a=this.a,this}static FromHexString(g){return"#"!==g.substring(0,1)||9!==g.length&&7!==g.length?new e(0,0,0,0):new e(0,0,0,1).fromHexString(g)}static Lerp(g,w,q){return e.LerpToRef(g,w,q,new e)}static LerpToRef(g,w,q,R){return R.r=g.r+(w.r-g.r)*q,R.g=g.g+(w.g-g.g)*q,R.b=g.b+(w.b-g.b)*q,R.a=g.a+(w.a-g.a)*q,R}static Hermite(g,w,q,R,o){const r=o*o,S=o*r,i=2*S-3*r+1,T=-2*S+3*r,z=S-2*r+o,t=S-r,m=g.r*i+q.r*T+w.r*z+R.r*t,y=g.g*i+q.g*T+w.g*z+R.g*t,L=g.b*i+q.b*T+w.b*z+R.b*t,A=g.a*i+q.a*T+w.a*z+R.a*t;return new e(m,y,L,A)}static Hermite1stDerivative(g,w,q,R,o){const r=new e;return this.Hermite1stDerivativeToRef(g,w,q,R,o,r),r}static Hermite1stDerivativeToRef(g,w,q,R,o,r){const S=o*o;r.r=6*(S-o)*g.r+(3*S-4*o+1)*w.r+6*(-S+o)*q.r+(3*S-2*o)*R.r,r.g=6*(S-o)*g.g+(3*S-4*o+1)*w.g+6*(-S+o)*q.g+(3*S-2*o)*R.g,r.b=6*(S-o)*g.b+(3*S-4*o+1)*w.b+6*(-S+o)*q.b+(3*S-2*o)*R.b,r.a=6*(S-o)*g.a+(3*S-4*o+1)*w.a+6*(-S+o)*q.a+(3*S-2*o)*R.a}static FromColor3(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new e(g.r,g.g,g.b,w)}static Ri(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new e(g[w],g[w+1],g[w+2],g[w+3])}static FromArrayToRef(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,q=arguments.length>2?arguments[2]:void 0;q.r=g[w],q.g=g[w+1],q.b=g[w+2],q.a=g[w+3]}static FromInts(g,w,q,R){return new e(g/255,w/255,q/255,R/255)}static CheckColors4(g,w){if(g.length===3*w){const w=[];for(let q=0;q<g.length;q+=3){const R=q/3*4;w[R]=g[q],w[R+1]=g[q+1],w[R+2]=g[q+2],w[R+3]=1}return w}return g}}e._V8PerformanceHack=new e(.5,.5,.5,.5),Object.defineProperties(e.prototype,{dimension:{value:[4]},rank:{value:1}});class y{}y.Jw=(0,R.e)(3,m.Black),y.ci=(0,R.e)(3,(()=>new e(0,0,0,0))),(0,o.g)("BABYLON.Color3",m),(0,o.g)("BABYLON.Color4",e)}}]);