"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[17],{12631:(r,O,W)=>{W.r(O),W.d(O,{SO:()=>v,kh:()=>g,TmpColors:()=>K});var q=W(12600),Q=W(12560),C=W(12595),T=W(12602);function h(r){return Math.pow(r,C.i)}function J(r){return r<=.04045?.0773993808*r:Math.pow(.947867299*(r+.055),2.4)}function mr(r){return Math.pow(r,C.h)}function d(r){return r<=.0031308?12.92*r:1.055*Math.pow(r,.41666)-.055}class v{constructor(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=r,this.g=O,this.b=W}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"SO"}getHashCode(){let r=255*this.r|0;return r=397*r^255*this.g,r=397*r^255*this.b,r}toArray(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return r[O]=this.r,r[O+1]=this.g,r[O+2]=this.b,this}eW(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return v.FromArrayToRef(r,O,this),this}toColor4(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new g(this.r,this.g,this.b,r)}Yh(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(r){return new v(this.r*r.r,this.g*r.g,this.b*r.b)}multiplyToRef(r,O){return O.r=this.r*r.r,O.g=this.g*r.g,O.b=this.b*r.b,O}multiplyInPlace(r){return this.r*=r.r,this.g*=r.g,this.b*=r.b,this}multiplyByFloats(r,O,W){return new v(this.r*r,this.g*O,this.b*W)}divide(r){throw new ReferenceError("Can not divide a color")}divideToRef(r,O){throw new ReferenceError("Can not divide a color")}divideInPlace(r){throw new ReferenceError("Can not divide a color")}minimizeInPlace(r){return this.minimizeInPlaceFromFloats(r.r,r.g,r.b)}maximizeInPlace(r){return this.maximizeInPlaceFromFloats(r.r,r.g,r.b)}minimizeInPlaceFromFloats(r,O,W){return this.r=Math.min(r,this.r),this.g=Math.min(O,this.g),this.b=Math.min(W,this.b),this}maximizeInPlaceFromFloats(r,O,W){return this.r=Math.max(r,this.r),this.g=Math.max(O,this.g),this.b=Math.max(W,this.b),this}floorToRef(r){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(r){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(r){return r&&this.r===r.r&&this.g===r.g&&this.b===r.b}equalsFloats(r,O,W){return this.equalsToFloats(r,O,W)}equalsToFloats(r,O,W){return this.r===r&&this.g===O&&this.b===W}equalsWithEpsilon(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:C.c;return(0,T.WithinEpsilon)(this.r,r.r,O)&&(0,T.WithinEpsilon)(this.g,r.g,O)&&(0,T.WithinEpsilon)(this.b,r.b,O)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(r){throw new ReferenceError("Can not negate a color")}scale(r){return new v(this.r*r,this.g*r,this.b*r)}scaleInPlace(r){return this.r*=r,this.g*=r,this.b*=r,this}scaleToRef(r,O){return O.r=this.r*r,O.g=this.g*r,O.b=this.b*r,O}scaleAndAddToRef(r,O){return O.r+=this.r*r,O.g+=this.g*r,O.b+=this.b*r,O}clampToRef(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,W=arguments.length>2?arguments[2]:void 0;return W.r=(0,T.Clamp)(this.r,r,O),W.g=(0,T.Clamp)(this.g,r,O),W.b=(0,T.Clamp)(this.b,r,O),W}add(r){return new v(this.r+r.r,this.g+r.g,this.b+r.b)}addInPlace(r){return this.r+=r.r,this.g+=r.g,this.b+=r.b,this}addInPlaceFromFloats(r,O,W){return this.r+=r,this.g+=O,this.b+=W,this}addToRef(r,O){return O.r=this.r+r.r,O.g=this.g+r.g,O.b=this.b+r.b,O}YO(r){return new v(this.r-r.r,this.g-r.g,this.b-r.b)}subtractToRef(r,O){return O.r=this.r-r.r,O.g=this.g-r.g,O.b=this.b-r.b,O}yv(r){return this.r-=r.r,this.g-=r.g,this.b-=r.b,this}subtractFromFloats(r,O,W){return new v(this.r-r,this.g-O,this.b-W)}subtractFromFloatsToRef(r,O,W,q){return q.r=this.r-r,q.g=this.g-O,q.b=this.b-W,q}clone(){return new v(this.r,this.g,this.b)}C(r){return this.r=r.r,this.g=r.g,this.b=r.b,this}zh(r,O,W){return this.r=r,this.g=O,this.b=W,this}set(r,O,W){return this.zh(r,O,W)}Mh(r){return this.r=this.g=this.b=r,this}toHexString(){const r=Math.round(255*this.r),O=Math.round(255*this.g),W=Math.round(255*this.b);return"#"+(0,T.ToHex)(r)+(0,T.ToHex)(O)+(0,T.ToHex)(W)}fromHexString(r){return"#"!==r.substring(0,1)||7!==r.length||(this.r=parseInt(r.substring(1,3),16)/255,this.g=parseInt(r.substring(3,5),16)/255,this.b=parseInt(r.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new v)}toHSVToRef(r){const O=this.r,W=this.g,q=this.b,Q=Math.max(O,W,q),C=Math.min(O,W,q);let T=0,h=0;const J=Q,mr=Q-C;return 0!==Q&&(h=mr/Q),Q!=C&&(Q==O?(T=(W-q)/mr,W<q&&(T+=6)):Q==W?T=(q-O)/mr+2:Q==q&&(T=(O-W)/mr+4),T*=60),r.r=T,r.g=h,r.b=J,r}toLinearSpace(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const O=new v;return this.toLinearSpaceToRef(O,r),O}toLinearSpaceToRef(r){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(r.r=J(this.r),r.g=J(this.g),r.b=J(this.b)):(r.r=h(this.r),r.g=h(this.g),r.b=h(this.b)),this}toGammaSpace(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const O=new v;return this.toGammaSpaceToRef(O,r),O}toGammaSpaceToRef(r){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(r.r=d(this.r),r.g=d(this.g),r.b=d(this.b)):(r.r=mr(this.r),r.g=mr(this.g),r.b=mr(this.b)),this}static HSVtoRGBToRef(r,O,W,q){const Q=W*O,C=r/60,T=Q*(1-Math.abs(C%2-1));let h=0,J=0,mr=0;C>=0&&C<=1?(h=Q,J=T):C>=1&&C<=2?(h=T,J=Q):C>=2&&C<=3?(J=Q,mr=T):C>=3&&C<=4?(J=T,mr=Q):C>=4&&C<=5?(h=T,mr=Q):C>=5&&C<=6&&(h=Q,mr=T);const d=W-Q;return q.r=h+d,q.g=J+d,q.b=mr+d,q}static FromHSV(r,O,W){const q=new v(0,0,0);return v.HSVtoRGBToRef(r,O,W,q),q}static FromHexString(r){return new v(0,0,0).fromHexString(r)}static oO(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new v(r[O],r[O+1],r[O+2])}static FromArrayToRef(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,W=arguments.length>2?arguments[2]:void 0;W.r=r[O],W.g=r[O+1],W.b=r[O+2]}static FromInts(r,O,W){return new v(r/255,O/255,W/255)}static Lerp(r,O,W){const q=new v(0,0,0);return v.LerpToRef(r,O,W,q),q}static LerpToRef(r,O,W,q){q.r=r.r+(O.r-r.r)*W,q.g=r.g+(O.g-r.g)*W,q.b=r.b+(O.b-r.b)*W}static Hermite(r,O,W,q,Q){const C=Q*Q,T=Q*C,h=2*T-3*C+1,J=-2*T+3*C,mr=T-2*C+Q,d=T-C,g=r.r*h+W.r*J+O.r*mr+q.r*d,K=r.g*h+W.g*J+O.g*mr+q.g*d,U=r.b*h+W.b*J+O.b*mr+q.b*d;return new v(g,K,U)}static Hermite1stDerivative(r,O,W,q,Q){const C=v.Black();return this.Hermite1stDerivativeToRef(r,O,W,q,Q,C),C}static Hermite1stDerivativeToRef(r,O,W,q,Q,C){const T=Q*Q;C.r=6*(T-Q)*r.r+(3*T-4*Q+1)*O.r+6*(-T+Q)*W.r+(3*T-2*Q)*q.r,C.g=6*(T-Q)*r.g+(3*T-4*Q+1)*O.g+6*(-T+Q)*W.g+(3*T-2*Q)*q.g,C.b=6*(T-Q)*r.b+(3*T-4*Q+1)*O.b+6*(-T+Q)*W.b+(3*T-2*Q)*q.b}static Red(){return new v(1,0,0)}static Green(){return new v(0,1,0)}static Blue(){return new v(0,0,1)}static Black(){return new v(0,0,0)}static get BlackReadOnly(){return v._BlackReadOnly}static White(){return new v(1,1,1)}static Purple(){return new v(.5,0,.5)}static Magenta(){return new v(1,0,1)}static Yellow(){return new v(1,1,0)}static Gray(){return new v(.5,.5,.5)}static Teal(){return new v(0,1,1)}static Random(){return new v(Math.random(),Math.random(),Math.random())}}v._V8PerformanceHack=new v(.5,.5,.5),v._BlackReadOnly=v.Black(),Object.defineProperties(v.prototype,{dimension:{value:[3]},rank:{value:1}});class g{constructor(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=r,this.g=O,this.b=W,this.a=q}Yh(){return[this.r,this.g,this.b,this.a]}toArray(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return r[O]=this.r,r[O+1]=this.g,r[O+2]=this.b,r[O+3]=this.a,this}eW(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=r[O],this.g=r[O+1],this.b=r[O+2],this.a=r[O+3],this}equals(r){return r&&this.r===r.r&&this.g===r.g&&this.b===r.b&&this.a===r.a}add(r){return new g(this.r+r.r,this.g+r.g,this.b+r.b,this.a+r.a)}addToRef(r,O){return O.r=this.r+r.r,O.g=this.g+r.g,O.b=this.b+r.b,O.a=this.a+r.a,O}addInPlace(r){return this.r+=r.r,this.g+=r.g,this.b+=r.b,this.a+=r.a,this}addInPlaceFromFloats(r,O,W,q){return this.r+=r,this.g+=O,this.b+=W,this.a+=q,this}YO(r){return new g(this.r-r.r,this.g-r.g,this.b-r.b,this.a-r.a)}subtractToRef(r,O){return O.r=this.r-r.r,O.g=this.g-r.g,O.b=this.b-r.b,O.a=this.a-r.a,O}yv(r){return this.r-=r.r,this.g-=r.g,this.b-=r.b,this.a-=r.a,this}subtractFromFloats(r,O,W,q){return new g(this.r-r,this.g-O,this.b-W,this.a-q)}subtractFromFloatsToRef(r,O,W,q,Q){return Q.r=this.r-r,Q.g=this.g-O,Q.b=this.b-W,Q.a=this.a-q,Q}scale(r){return new g(this.r*r,this.g*r,this.b*r,this.a*r)}scaleInPlace(r){return this.r*=r,this.g*=r,this.b*=r,this.a*=r,this}scaleToRef(r,O){return O.r=this.r*r,O.g=this.g*r,O.b=this.b*r,O.a=this.a*r,O}scaleAndAddToRef(r,O){return O.r+=this.r*r,O.g+=this.g*r,O.b+=this.b*r,O.a+=this.a*r,O}clampToRef(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,W=arguments.length>2?arguments[2]:void 0;return W.r=(0,T.Clamp)(this.r,r,O),W.g=(0,T.Clamp)(this.g,r,O),W.b=(0,T.Clamp)(this.b,r,O),W.a=(0,T.Clamp)(this.a,r,O),W}multiply(r){return new g(this.r*r.r,this.g*r.g,this.b*r.b,this.a*r.a)}multiplyToRef(r,O){return O.r=this.r*r.r,O.g=this.g*r.g,O.b=this.b*r.b,O.a=this.a*r.a,O}multiplyInPlace(r){return this.r*=r.r,this.g*=r.g,this.b*=r.b,this.a*=r.a,this}multiplyByFloats(r,O,W,q){return new g(this.r*r,this.g*O,this.b*W,this.a*q)}divide(r){throw new ReferenceError("Can not divide a color")}divideToRef(r,O){throw new ReferenceError("Can not divide a color")}divideInPlace(r){throw new ReferenceError("Can not divide a color")}minimizeInPlace(r){return this.r=Math.min(this.r,r.r),this.g=Math.min(this.g,r.g),this.b=Math.min(this.b,r.b),this.a=Math.min(this.a,r.a),this}maximizeInPlace(r){return this.r=Math.max(this.r,r.r),this.g=Math.max(this.g,r.g),this.b=Math.max(this.b,r.b),this.a=Math.max(this.a,r.a),this}minimizeInPlaceFromFloats(r,O,W,q){return this.r=Math.min(r,this.r),this.g=Math.min(O,this.g),this.b=Math.min(W,this.b),this.a=Math.min(q,this.a),this}maximizeInPlaceFromFloats(r,O,W,q){return this.r=Math.max(r,this.r),this.g=Math.max(O,this.g),this.b=Math.max(W,this.b),this.a=Math.max(q,this.a),this}floorToRef(r){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(r){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(r){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:C.c;return(0,T.WithinEpsilon)(this.r,r.r,O)&&(0,T.WithinEpsilon)(this.g,r.g,O)&&(0,T.WithinEpsilon)(this.b,r.b,O)&&(0,T.WithinEpsilon)(this.a,r.a,O)}equalsToFloats(r,O,W,q){return this.r===r&&this.g===O&&this.b===W&&this.a===q}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"kh"}getHashCode(){let r=255*this.r|0;return r=397*r^255*this.g,r=397*r^255*this.b,r=397*r^255*this.a,r}clone(){return(new g).C(this)}C(r){return this.r=r.r,this.g=r.g,this.b=r.b,this.a=r.a,this}zh(r,O,W,q){return this.r=r,this.g=O,this.b=W,this.a=q,this}set(r,O,W,q){return this.zh(r,O,W,q)}Mh(r){return this.r=this.g=this.b=this.a=r,this}toHexString(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const O=Math.round(255*this.r),W=Math.round(255*this.g),q=Math.round(255*this.b);if(r)return"#"+(0,T.ToHex)(O)+(0,T.ToHex)(W)+(0,T.ToHex)(q);const Q=Math.round(255*this.a);return"#"+(0,T.ToHex)(O)+(0,T.ToHex)(W)+(0,T.ToHex)(q)+(0,T.ToHex)(Q)}fromHexString(r){return"#"!==r.substring(0,1)||9!==r.length&&7!==r.length||(this.r=parseInt(r.substring(1,3),16)/255,this.g=parseInt(r.substring(3,5),16)/255,this.b=parseInt(r.substring(5,7),16)/255,9===r.length&&(this.a=parseInt(r.substring(7,9),16)/255)),this}toLinearSpace(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const O=new g;return this.toLinearSpaceToRef(O,r),O}toLinearSpaceToRef(r){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(r.r=J(this.r),r.g=J(this.g),r.b=J(this.b)):(r.r=h(this.r),r.g=h(this.g),r.b=h(this.b)),r.a=this.a,this}toGammaSpace(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const O=new g;return this.toGammaSpaceToRef(O,r),O}toGammaSpaceToRef(r){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(r.r=d(this.r),r.g=d(this.g),r.b=d(this.b)):(r.r=mr(this.r),r.g=mr(this.g),r.b=mr(this.b)),r.a=this.a,this}static FromHexString(r){return"#"!==r.substring(0,1)||9!==r.length&&7!==r.length?new g(0,0,0,0):new g(0,0,0,1).fromHexString(r)}static Lerp(r,O,W){return g.LerpToRef(r,O,W,new g)}static LerpToRef(r,O,W,q){return q.r=r.r+(O.r-r.r)*W,q.g=r.g+(O.g-r.g)*W,q.b=r.b+(O.b-r.b)*W,q.a=r.a+(O.a-r.a)*W,q}static Hermite(r,O,W,q,Q){const C=Q*Q,T=Q*C,h=2*T-3*C+1,J=-2*T+3*C,mr=T-2*C+Q,d=T-C,v=r.r*h+W.r*J+O.r*mr+q.r*d,K=r.g*h+W.g*J+O.g*mr+q.g*d,U=r.b*h+W.b*J+O.b*mr+q.b*d,P=r.a*h+W.a*J+O.a*mr+q.a*d;return new g(v,K,U,P)}static Hermite1stDerivative(r,O,W,q,Q){const C=new g;return this.Hermite1stDerivativeToRef(r,O,W,q,Q,C),C}static Hermite1stDerivativeToRef(r,O,W,q,Q,C){const T=Q*Q;C.r=6*(T-Q)*r.r+(3*T-4*Q+1)*O.r+6*(-T+Q)*W.r+(3*T-2*Q)*q.r,C.g=6*(T-Q)*r.g+(3*T-4*Q+1)*O.g+6*(-T+Q)*W.g+(3*T-2*Q)*q.g,C.b=6*(T-Q)*r.b+(3*T-4*Q+1)*O.b+6*(-T+Q)*W.b+(3*T-2*Q)*q.b,C.a=6*(T-Q)*r.a+(3*T-4*Q+1)*O.a+6*(-T+Q)*W.a+(3*T-2*Q)*q.a}static FromColor3(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new g(r.r,r.g,r.b,O)}static oO(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new g(r[O],r[O+1],r[O+2],r[O+3])}static FromArrayToRef(r){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,W=arguments.length>2?arguments[2]:void 0;W.r=r[O],W.g=r[O+1],W.b=r[O+2],W.a=r[O+3]}static FromInts(r,O,W,q){return new g(r/255,O/255,W/255,q/255)}static CheckColors4(r,O){if(r.length===3*O){const O=[];for(let W=0;W<r.length;W+=3){const q=W/3*4;O[q]=r[W],O[q+1]=r[W+1],O[q+2]=r[W+2],O[q+3]=1}return O}return r}}g._V8PerformanceHack=new g(.5,.5,.5,.5),Object.defineProperties(g.prototype,{dimension:{value:[4]},rank:{value:1}});class K{}K.SO=(0,q.d)(3,v.Black),K.kh=(0,q.d)(3,(()=>new g(0,0,0,0))),(0,Q.e)("BABYLON.Color3",v),(0,Q.e)("BABYLON.Color4",g)}}]);