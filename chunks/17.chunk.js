"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[17],{12952:(h,R,l)=>{l.r(R),l.d(R,{xR:()=>c,bF:()=>J,TmpColors:()=>q});var j=l(12910),a=l(12852),D=l(12902),U=l(12917);function F(h){return Math.pow(h,D.j)}function w(h){return h<=.04045?.0773993808*h:Math.pow(.947867299*(h+.055),2.4)}function mh(h){return Math.pow(h,D.i)}function u(h){return h<=.0031308?12.92*h:1.055*Math.pow(h,.41666)-.055}class c{constructor(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=h,this.g=R,this.b=l}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"xR"}getHashCode(){let h=255*this.r|0;return h=397*h^255*this.g,h=397*h^255*this.b,h}toArray(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return h[R]=this.r,h[R+1]=this.g,h[R+2]=this.b,this}Yl(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return c.FromArrayToRef(h,R,this),this}toColor4(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new J(this.r,this.g,this.b,h)}sF(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(h){return new c(this.r*h.r,this.g*h.g,this.b*h.b)}multiplyToRef(h,R){return R.r=this.r*h.r,R.g=this.g*h.g,R.b=this.b*h.b,R}multiplyInPlace(h){return this.r*=h.r,this.g*=h.g,this.b*=h.b,this}multiplyByFloats(h,R,l){return new c(this.r*h,this.g*R,this.b*l)}divide(h){throw new ReferenceError("Can not divide a color")}divideToRef(h,R){throw new ReferenceError("Can not divide a color")}divideInPlace(h){throw new ReferenceError("Can not divide a color")}minimizeInPlace(h){return this.minimizeInPlaceFromFloats(h.r,h.g,h.b)}maximizeInPlace(h){return this.maximizeInPlaceFromFloats(h.r,h.g,h.b)}minimizeInPlaceFromFloats(h,R,l){return this.r=Math.min(h,this.r),this.g=Math.min(R,this.g),this.b=Math.min(l,this.b),this}maximizeInPlaceFromFloats(h,R,l){return this.r=Math.max(h,this.r),this.g=Math.max(R,this.g),this.b=Math.max(l,this.b),this}floorToRef(h){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(h){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(h){return h&&this.r===h.r&&this.g===h.g&&this.b===h.b}equalsFloats(h,R,l){return this.equalsToFloats(h,R,l)}equalsToFloats(h,R,l){return this.r===h&&this.g===R&&this.b===l}equalsWithEpsilon(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D.d;return(0,U.WithinEpsilon)(this.r,h.r,R)&&(0,U.WithinEpsilon)(this.g,h.g,R)&&(0,U.WithinEpsilon)(this.b,h.b,R)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(h){throw new ReferenceError("Can not negate a color")}scale(h){return new c(this.r*h,this.g*h,this.b*h)}scaleInPlace(h){return this.r*=h,this.g*=h,this.b*=h,this}scaleToRef(h,R){return R.r=this.r*h,R.g=this.g*h,R.b=this.b*h,R}scaleAndAddToRef(h,R){return R.r+=this.r*h,R.g+=this.g*h,R.b+=this.b*h,R}clampToRef(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,l=arguments.length>2?arguments[2]:void 0;return l.r=(0,U.Clamp)(this.r,h,R),l.g=(0,U.Clamp)(this.g,h,R),l.b=(0,U.Clamp)(this.b,h,R),l}add(h){return new c(this.r+h.r,this.g+h.g,this.b+h.b)}addInPlace(h){return this.r+=h.r,this.g+=h.g,this.b+=h.b,this}addInPlaceFromFloats(h,R,l){return this.r+=h,this.g+=R,this.b+=l,this}addToRef(h,R){return R.r=this.r+h.r,R.g=this.g+h.g,R.b=this.b+h.b,R}fR(h){return new c(this.r-h.r,this.g-h.g,this.b-h.b)}subtractToRef(h,R){return R.r=this.r-h.r,R.g=this.g-h.g,R.b=this.b-h.b,R}Pc(h){return this.r-=h.r,this.g-=h.g,this.b-=h.b,this}subtractFromFloats(h,R,l){return new c(this.r-h,this.g-R,this.b-l)}subtractFromFloatsToRef(h,R,l,j){return j.r=this.r-h,j.g=this.g-R,j.b=this.b-l,j}clone(){return new c(this.r,this.g,this.b)}D(h){return this.r=h.r,this.g=h.g,this.b=h.b,this}OF(h,R,l){return this.r=h,this.g=R,this.b=l,this}set(h,R,l){return this.OF(h,R,l)}vF(h){return this.r=this.g=this.b=h,this}toHexString(){const h=Math.round(255*this.r),R=Math.round(255*this.g),l=Math.round(255*this.b);return"#"+(0,U.ToHex)(h)+(0,U.ToHex)(R)+(0,U.ToHex)(l)}fromHexString(h){return"#"!==h.substring(0,1)||7!==h.length||(this.r=parseInt(h.substring(1,3),16)/255,this.g=parseInt(h.substring(3,5),16)/255,this.b=parseInt(h.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new c)}toHSVToRef(h){const R=this.r,l=this.g,j=this.b,a=Math.max(R,l,j),D=Math.min(R,l,j);let U=0,F=0;const w=a,mh=a-D;return 0!==a&&(F=mh/a),a!=D&&(a==R?(U=(l-j)/mh,l<j&&(U+=6)):a==l?U=(j-R)/mh+2:a==j&&(U=(R-l)/mh+4),U*=60),h.r=U,h.g=F,h.b=w,h}toLinearSpace(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=new c;return this.toLinearSpaceToRef(R,h),R}toLinearSpaceToRef(h){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(h.r=w(this.r),h.g=w(this.g),h.b=w(this.b)):(h.r=F(this.r),h.g=F(this.g),h.b=F(this.b)),this}toGammaSpace(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=new c;return this.toGammaSpaceToRef(R,h),R}toGammaSpaceToRef(h){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(h.r=u(this.r),h.g=u(this.g),h.b=u(this.b)):(h.r=mh(this.r),h.g=mh(this.g),h.b=mh(this.b)),this}static HSVtoRGBToRef(h,R,l,j){const a=l*R,D=h/60,U=a*(1-Math.abs(D%2-1));let F=0,w=0,mh=0;D>=0&&D<=1?(F=a,w=U):D>=1&&D<=2?(F=U,w=a):D>=2&&D<=3?(w=a,mh=U):D>=3&&D<=4?(w=U,mh=a):D>=4&&D<=5?(F=U,mh=a):D>=5&&D<=6&&(F=a,mh=U);const u=l-a;return j.r=F+u,j.g=w+u,j.b=mh+u,j}static FromHSV(h,R,l){const j=new c(0,0,0);return c.HSVtoRGBToRef(h,R,l,j),j}static FromHexString(h){return new c(0,0,0).fromHexString(h)}static GR(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new c(h[R],h[R+1],h[R+2])}static FromArrayToRef(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2?arguments[2]:void 0;l.r=h[R],l.g=h[R+1],l.b=h[R+2]}static FromInts(h,R,l){return new c(h/255,R/255,l/255)}static Lerp(h,R,l){const j=new c(0,0,0);return c.LerpToRef(h,R,l,j),j}static LerpToRef(h,R,l,j){j.r=h.r+(R.r-h.r)*l,j.g=h.g+(R.g-h.g)*l,j.b=h.b+(R.b-h.b)*l}static Hermite(h,R,l,j,a){const D=a*a,U=a*D,F=2*U-3*D+1,w=-2*U+3*D,mh=U-2*D+a,u=U-D,J=h.r*F+l.r*w+R.r*mh+j.r*u,q=h.g*F+l.g*w+R.g*mh+j.g*u,Q=h.b*F+l.b*w+R.b*mh+j.b*u;return new c(J,q,Q)}static Hermite1stDerivative(h,R,l,j,a){const D=c.Black();return this.Hermite1stDerivativeToRef(h,R,l,j,a,D),D}static Hermite1stDerivativeToRef(h,R,l,j,a,D){const U=a*a;D.r=6*(U-a)*h.r+(3*U-4*a+1)*R.r+6*(-U+a)*l.r+(3*U-2*a)*j.r,D.g=6*(U-a)*h.g+(3*U-4*a+1)*R.g+6*(-U+a)*l.g+(3*U-2*a)*j.g,D.b=6*(U-a)*h.b+(3*U-4*a+1)*R.b+6*(-U+a)*l.b+(3*U-2*a)*j.b}static Red(){return new c(1,0,0)}static Green(){return new c(0,1,0)}static Blue(){return new c(0,0,1)}static Black(){return new c(0,0,0)}static get BlackReadOnly(){return c._BlackReadOnly}static White(){return new c(1,1,1)}static Purple(){return new c(.5,0,.5)}static Magenta(){return new c(1,0,1)}static Yellow(){return new c(1,1,0)}static Gray(){return new c(.5,.5,.5)}static Teal(){return new c(0,1,1)}static Random(){return new c(Math.random(),Math.random(),Math.random())}}c._V8PerformanceHack=new c(.5,.5,.5),c._BlackReadOnly=c.Black(),Object.defineProperties(c.prototype,{dimension:{value:[3]},rank:{value:1}});class J{constructor(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=h,this.g=R,this.b=l,this.a=j}sF(){return[this.r,this.g,this.b,this.a]}toArray(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return h[R]=this.r,h[R+1]=this.g,h[R+2]=this.b,h[R+3]=this.a,this}Yl(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=h[R],this.g=h[R+1],this.b=h[R+2],this.a=h[R+3],this}equals(h){return h&&this.r===h.r&&this.g===h.g&&this.b===h.b&&this.a===h.a}add(h){return new J(this.r+h.r,this.g+h.g,this.b+h.b,this.a+h.a)}addToRef(h,R){return R.r=this.r+h.r,R.g=this.g+h.g,R.b=this.b+h.b,R.a=this.a+h.a,R}addInPlace(h){return this.r+=h.r,this.g+=h.g,this.b+=h.b,this.a+=h.a,this}addInPlaceFromFloats(h,R,l,j){return this.r+=h,this.g+=R,this.b+=l,this.a+=j,this}fR(h){return new J(this.r-h.r,this.g-h.g,this.b-h.b,this.a-h.a)}subtractToRef(h,R){return R.r=this.r-h.r,R.g=this.g-h.g,R.b=this.b-h.b,R.a=this.a-h.a,R}Pc(h){return this.r-=h.r,this.g-=h.g,this.b-=h.b,this.a-=h.a,this}subtractFromFloats(h,R,l,j){return new J(this.r-h,this.g-R,this.b-l,this.a-j)}subtractFromFloatsToRef(h,R,l,j,a){return a.r=this.r-h,a.g=this.g-R,a.b=this.b-l,a.a=this.a-j,a}scale(h){return new J(this.r*h,this.g*h,this.b*h,this.a*h)}scaleInPlace(h){return this.r*=h,this.g*=h,this.b*=h,this.a*=h,this}scaleToRef(h,R){return R.r=this.r*h,R.g=this.g*h,R.b=this.b*h,R.a=this.a*h,R}scaleAndAddToRef(h,R){return R.r+=this.r*h,R.g+=this.g*h,R.b+=this.b*h,R.a+=this.a*h,R}clampToRef(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,l=arguments.length>2?arguments[2]:void 0;return l.r=(0,U.Clamp)(this.r,h,R),l.g=(0,U.Clamp)(this.g,h,R),l.b=(0,U.Clamp)(this.b,h,R),l.a=(0,U.Clamp)(this.a,h,R),l}multiply(h){return new J(this.r*h.r,this.g*h.g,this.b*h.b,this.a*h.a)}multiplyToRef(h,R){return R.r=this.r*h.r,R.g=this.g*h.g,R.b=this.b*h.b,R.a=this.a*h.a,R}multiplyInPlace(h){return this.r*=h.r,this.g*=h.g,this.b*=h.b,this.a*=h.a,this}multiplyByFloats(h,R,l,j){return new J(this.r*h,this.g*R,this.b*l,this.a*j)}divide(h){throw new ReferenceError("Can not divide a color")}divideToRef(h,R){throw new ReferenceError("Can not divide a color")}divideInPlace(h){throw new ReferenceError("Can not divide a color")}minimizeInPlace(h){return this.r=Math.min(this.r,h.r),this.g=Math.min(this.g,h.g),this.b=Math.min(this.b,h.b),this.a=Math.min(this.a,h.a),this}maximizeInPlace(h){return this.r=Math.max(this.r,h.r),this.g=Math.max(this.g,h.g),this.b=Math.max(this.b,h.b),this.a=Math.max(this.a,h.a),this}minimizeInPlaceFromFloats(h,R,l,j){return this.r=Math.min(h,this.r),this.g=Math.min(R,this.g),this.b=Math.min(l,this.b),this.a=Math.min(j,this.a),this}maximizeInPlaceFromFloats(h,R,l,j){return this.r=Math.max(h,this.r),this.g=Math.max(R,this.g),this.b=Math.max(l,this.b),this.a=Math.max(j,this.a),this}floorToRef(h){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(h){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(h){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D.d;return(0,U.WithinEpsilon)(this.r,h.r,R)&&(0,U.WithinEpsilon)(this.g,h.g,R)&&(0,U.WithinEpsilon)(this.b,h.b,R)&&(0,U.WithinEpsilon)(this.a,h.a,R)}equalsToFloats(h,R,l,j){return this.r===h&&this.g===R&&this.b===l&&this.a===j}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"bF"}getHashCode(){let h=255*this.r|0;return h=397*h^255*this.g,h=397*h^255*this.b,h=397*h^255*this.a,h}clone(){return(new J).D(this)}D(h){return this.r=h.r,this.g=h.g,this.b=h.b,this.a=h.a,this}OF(h,R,l,j){return this.r=h,this.g=R,this.b=l,this.a=j,this}set(h,R,l,j){return this.OF(h,R,l,j)}vF(h){return this.r=this.g=this.b=this.a=h,this}toHexString(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=Math.round(255*this.r),l=Math.round(255*this.g),j=Math.round(255*this.b);if(h)return"#"+(0,U.ToHex)(R)+(0,U.ToHex)(l)+(0,U.ToHex)(j);const a=Math.round(255*this.a);return"#"+(0,U.ToHex)(R)+(0,U.ToHex)(l)+(0,U.ToHex)(j)+(0,U.ToHex)(a)}fromHexString(h){return"#"!==h.substring(0,1)||9!==h.length&&7!==h.length||(this.r=parseInt(h.substring(1,3),16)/255,this.g=parseInt(h.substring(3,5),16)/255,this.b=parseInt(h.substring(5,7),16)/255,9===h.length&&(this.a=parseInt(h.substring(7,9),16)/255)),this}toLinearSpace(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=new J;return this.toLinearSpaceToRef(R,h),R}toLinearSpaceToRef(h){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(h.r=w(this.r),h.g=w(this.g),h.b=w(this.b)):(h.r=F(this.r),h.g=F(this.g),h.b=F(this.b)),h.a=this.a,this}toGammaSpace(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=new J;return this.toGammaSpaceToRef(R,h),R}toGammaSpaceToRef(h){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(h.r=u(this.r),h.g=u(this.g),h.b=u(this.b)):(h.r=mh(this.r),h.g=mh(this.g),h.b=mh(this.b)),h.a=this.a,this}static FromHexString(h){return"#"!==h.substring(0,1)||9!==h.length&&7!==h.length?new J(0,0,0,0):new J(0,0,0,1).fromHexString(h)}static Lerp(h,R,l){return J.LerpToRef(h,R,l,new J)}static LerpToRef(h,R,l,j){return j.r=h.r+(R.r-h.r)*l,j.g=h.g+(R.g-h.g)*l,j.b=h.b+(R.b-h.b)*l,j.a=h.a+(R.a-h.a)*l,j}static Hermite(h,R,l,j,a){const D=a*a,U=a*D,F=2*U-3*D+1,w=-2*U+3*D,mh=U-2*D+a,u=U-D,c=h.r*F+l.r*w+R.r*mh+j.r*u,q=h.g*F+l.g*w+R.g*mh+j.g*u,Q=h.b*F+l.b*w+R.b*mh+j.b*u,Y=h.a*F+l.a*w+R.a*mh+j.a*u;return new J(c,q,Q,Y)}static Hermite1stDerivative(h,R,l,j,a){const D=new J;return this.Hermite1stDerivativeToRef(h,R,l,j,a,D),D}static Hermite1stDerivativeToRef(h,R,l,j,a,D){const U=a*a;D.r=6*(U-a)*h.r+(3*U-4*a+1)*R.r+6*(-U+a)*l.r+(3*U-2*a)*j.r,D.g=6*(U-a)*h.g+(3*U-4*a+1)*R.g+6*(-U+a)*l.g+(3*U-2*a)*j.g,D.b=6*(U-a)*h.b+(3*U-4*a+1)*R.b+6*(-U+a)*l.b+(3*U-2*a)*j.b,D.a=6*(U-a)*h.a+(3*U-4*a+1)*R.a+6*(-U+a)*l.a+(3*U-2*a)*j.a}static FromColor3(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new J(h.r,h.g,h.b,R)}static GR(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new J(h[R],h[R+1],h[R+2],h[R+3])}static FromArrayToRef(h){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2?arguments[2]:void 0;l.r=h[R],l.g=h[R+1],l.b=h[R+2],l.a=h[R+3]}static FromInts(h,R,l,j){return new J(h/255,R/255,l/255,j/255)}static CheckColors4(h,R){if(h.length===3*R){const R=[];for(let l=0;l<h.length;l+=3){const j=l/3*4;R[j]=h[l],R[j+1]=h[l+1],R[j+2]=h[l+2],R[j+3]=1}return R}return h}}J._V8PerformanceHack=new J(.5,.5,.5,.5),Object.defineProperties(J.prototype,{dimension:{value:[4]},rank:{value:1}});class q{}q.xR=(0,j.e)(3,c.Black),q.bF=(0,j.e)(3,(()=>new J(0,0,0,0))),(0,a.f)("BABYLON.Color3",c),(0,a.f)("BABYLON.Color4",J)}}]);