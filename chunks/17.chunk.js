"use strict";(self.i6szn8jgzh=self.i6szn8jgzh||[]).push([[17],{11822:(b,n,i)=>{i.r(n),i.d(n,{Mn:()=>N,IV:()=>Z,TmpColors:()=>T});var e=i(11788),V=i(11734),Q=i(11786),U=i(11796);function Y(b){return Math.pow(b,Q.j)}function L(b){return b<=.04045?.0773993808*b:Math.pow(.947867299*(b+.055),2.4)}function B(b){return Math.pow(b,Q.g)}function mb(b){return b<=.0031308?12.92*b:1.055*Math.pow(b,.41666)-.055}class N{constructor(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=b,this.g=n,this.b=i}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"Mn"}getHashCode(){let b=255*this.r|0;return b=397*b^255*this.g,b=397*b^255*this.b,b}toArray(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return b[n]=this.r,b[n+1]=this.g,b[n+2]=this.b,this}Gi(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return N.FromArrayToRef(b,n,this),this}toColor4(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new Z(this.r,this.g,this.b,b)}ye(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(b){return new N(this.r*b.r,this.g*b.g,this.b*b.b)}multiplyToRef(b,n){return n.r=this.r*b.r,n.g=this.g*b.g,n.b=this.b*b.b,n}multiplyInPlace(b){return this.r*=b.r,this.g*=b.g,this.b*=b.b,this}multiplyByFloats(b,n,i){return new N(this.r*b,this.g*n,this.b*i)}divide(b){throw new ReferenceError("Can not divide a color")}divideToRef(b,n){throw new ReferenceError("Can not divide a color")}divideInPlace(b){throw new ReferenceError("Can not divide a color")}minimizeInPlace(b){return this.minimizeInPlaceFromFloats(b.r,b.g,b.b)}maximizeInPlace(b){return this.maximizeInPlaceFromFloats(b.r,b.g,b.b)}minimizeInPlaceFromFloats(b,n,i){return this.r=Math.min(b,this.r),this.g=Math.min(n,this.g),this.b=Math.min(i,this.b),this}maximizeInPlaceFromFloats(b,n,i){return this.r=Math.max(b,this.r),this.g=Math.max(n,this.g),this.b=Math.max(i,this.b),this}floorToRef(b){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(b){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(b){return b&&this.r===b.r&&this.g===b.g&&this.b===b.b}equalsFloats(b,n,i){return this.equalsToFloats(b,n,i)}equalsToFloats(b,n,i){return this.r===b&&this.g===n&&this.b===i}equalsWithEpsilon(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Q.c;return(0,U.WithinEpsilon)(this.r,b.r,n)&&(0,U.WithinEpsilon)(this.g,b.g,n)&&(0,U.WithinEpsilon)(this.b,b.b,n)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(b){throw new ReferenceError("Can not negate a color")}scale(b){return new N(this.r*b,this.g*b,this.b*b)}scaleInPlace(b){return this.r*=b,this.g*=b,this.b*=b,this}scaleToRef(b,n){return n.r=this.r*b,n.g=this.g*b,n.b=this.b*b,n}scaleAndAddToRef(b,n){return n.r+=this.r*b,n.g+=this.g*b,n.b+=this.b*b,n}clampToRef(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0;return i.r=(0,U.Clamp)(this.r,b,n),i.g=(0,U.Clamp)(this.g,b,n),i.b=(0,U.Clamp)(this.b,b,n),i}add(b){return new N(this.r+b.r,this.g+b.g,this.b+b.b)}addInPlace(b){return this.r+=b.r,this.g+=b.g,this.b+=b.b,this}addInPlaceFromFloats(b,n,i){return this.r+=b,this.g+=n,this.b+=i,this}addToRef(b,n){return n.r=this.r+b.r,n.g=this.g+b.g,n.b=this.b+b.b,n}un(b){return new N(this.r-b.r,this.g-b.g,this.b-b.b)}subtractToRef(b,n){return n.r=this.r-b.r,n.g=this.g-b.g,n.b=this.b-b.b,n}lm(b){return this.r-=b.r,this.g-=b.g,this.b-=b.b,this}subtractFromFloats(b,n,i){return new N(this.r-b,this.g-n,this.b-i)}subtractFromFloatsToRef(b,n,i,e){return e.r=this.r-b,e.g=this.g-n,e.b=this.b-i,e}clone(){return new N(this.r,this.g,this.b)}L(b){return this.r=b.r,this.g=b.g,this.b=b.b,this}re(b,n,i){return this.r=b,this.g=n,this.b=i,this}set(b,n,i){return this.re(b,n,i)}Fe(b){return this.r=this.g=this.b=b,this}toHexString(){const b=Math.round(255*this.r),n=Math.round(255*this.g),i=Math.round(255*this.b);return"#"+(0,U.ToHex)(b)+(0,U.ToHex)(n)+(0,U.ToHex)(i)}fromHexString(b){return"#"!==b.substring(0,1)||7!==b.length||(this.r=parseInt(b.substring(1,3),16)/255,this.g=parseInt(b.substring(3,5),16)/255,this.b=parseInt(b.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new N)}toHSVToRef(b){const n=this.r,i=this.g,e=this.b,V=Math.max(n,i,e),Q=Math.min(n,i,e);let U=0,Y=0;const L=V,B=V-Q;return 0!==V&&(Y=B/V),V!=Q&&(V==n?(U=(i-e)/B,i<e&&(U+=6)):V==i?U=(e-n)/B+2:V==e&&(U=(n-i)/B+4),U*=60),b.r=U,b.g=Y,b.b=L,b}toLinearSpace(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const n=new N;return this.toLinearSpaceToRef(n,b),n}toLinearSpaceToRef(b){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(b.r=L(this.r),b.g=L(this.g),b.b=L(this.b)):(b.r=Y(this.r),b.g=Y(this.g),b.b=Y(this.b)),this}toGammaSpace(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const n=new N;return this.toGammaSpaceToRef(n,b),n}toGammaSpaceToRef(b){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(b.r=mb(this.r),b.g=mb(this.g),b.b=mb(this.b)):(b.r=B(this.r),b.g=B(this.g),b.b=B(this.b)),this}static HSVtoRGBToRef(b,n,i,e){const V=i*n,Q=b/60,U=V*(1-Math.abs(Q%2-1));let Y=0,L=0,B=0;Q>=0&&Q<=1?(Y=V,L=U):Q>=1&&Q<=2?(Y=U,L=V):Q>=2&&Q<=3?(L=V,B=U):Q>=3&&Q<=4?(L=U,B=V):Q>=4&&Q<=5?(Y=U,B=V):Q>=5&&Q<=6&&(Y=V,B=U);const mb=i-V;return e.r=Y+mb,e.g=L+mb,e.b=B+mb,e}static FromHSV(b,n,i){const e=new N(0,0,0);return N.HSVtoRGBToRef(b,n,i,e),e}static FromHexString(b){return new N(0,0,0).fromHexString(b)}static jn(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new N(b[n],b[n+1],b[n+2])}static FromArrayToRef(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;i.r=b[n],i.g=b[n+1],i.b=b[n+2]}static FromInts(b,n,i){return new N(b/255,n/255,i/255)}static Lerp(b,n,i){const e=new N(0,0,0);return N.LerpToRef(b,n,i,e),e}static LerpToRef(b,n,i,e){e.r=b.r+(n.r-b.r)*i,e.g=b.g+(n.g-b.g)*i,e.b=b.b+(n.b-b.b)*i}static Hermite(b,n,i,e,V){const Q=V*V,U=V*Q,Y=2*U-3*Q+1,L=-2*U+3*Q,B=U-2*Q+V,mb=U-Q,Z=b.r*Y+i.r*L+n.r*B+e.r*mb,T=b.g*Y+i.g*L+n.g*B+e.g*mb,z=b.b*Y+i.b*L+n.b*B+e.b*mb;return new N(Z,T,z)}static Hermite1stDerivative(b,n,i,e,V){const Q=N.Black();return this.Hermite1stDerivativeToRef(b,n,i,e,V,Q),Q}static Hermite1stDerivativeToRef(b,n,i,e,V,Q){const U=V*V;Q.r=6*(U-V)*b.r+(3*U-4*V+1)*n.r+6*(-U+V)*i.r+(3*U-2*V)*e.r,Q.g=6*(U-V)*b.g+(3*U-4*V+1)*n.g+6*(-U+V)*i.g+(3*U-2*V)*e.g,Q.b=6*(U-V)*b.b+(3*U-4*V+1)*n.b+6*(-U+V)*i.b+(3*U-2*V)*e.b}static Red(){return new N(1,0,0)}static Green(){return new N(0,1,0)}static Blue(){return new N(0,0,1)}static Black(){return new N(0,0,0)}static get BlackReadOnly(){return N._BlackReadOnly}static White(){return new N(1,1,1)}static Purple(){return new N(.5,0,.5)}static Magenta(){return new N(1,0,1)}static Yellow(){return new N(1,1,0)}static Gray(){return new N(.5,.5,.5)}static Teal(){return new N(0,1,1)}static Random(){return new N(Math.random(),Math.random(),Math.random())}}N._V8PerformanceHack=new N(.5,.5,.5),N._BlackReadOnly=N.Black(),Object.defineProperties(N.prototype,{dimension:{value:[3]},rank:{value:1}});class Z{constructor(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=b,this.g=n,this.b=i,this.a=e}ye(){return[this.r,this.g,this.b,this.a]}toArray(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return b[n]=this.r,b[n+1]=this.g,b[n+2]=this.b,b[n+3]=this.a,this}Gi(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=b[n],this.g=b[n+1],this.b=b[n+2],this.a=b[n+3],this}equals(b){return b&&this.r===b.r&&this.g===b.g&&this.b===b.b&&this.a===b.a}add(b){return new Z(this.r+b.r,this.g+b.g,this.b+b.b,this.a+b.a)}addToRef(b,n){return n.r=this.r+b.r,n.g=this.g+b.g,n.b=this.b+b.b,n.a=this.a+b.a,n}addInPlace(b){return this.r+=b.r,this.g+=b.g,this.b+=b.b,this.a+=b.a,this}addInPlaceFromFloats(b,n,i,e){return this.r+=b,this.g+=n,this.b+=i,this.a+=e,this}un(b){return new Z(this.r-b.r,this.g-b.g,this.b-b.b,this.a-b.a)}subtractToRef(b,n){return n.r=this.r-b.r,n.g=this.g-b.g,n.b=this.b-b.b,n.a=this.a-b.a,n}lm(b){return this.r-=b.r,this.g-=b.g,this.b-=b.b,this.a-=b.a,this}subtractFromFloats(b,n,i,e){return new Z(this.r-b,this.g-n,this.b-i,this.a-e)}subtractFromFloatsToRef(b,n,i,e,V){return V.r=this.r-b,V.g=this.g-n,V.b=this.b-i,V.a=this.a-e,V}scale(b){return new Z(this.r*b,this.g*b,this.b*b,this.a*b)}scaleInPlace(b){return this.r*=b,this.g*=b,this.b*=b,this.a*=b,this}scaleToRef(b,n){return n.r=this.r*b,n.g=this.g*b,n.b=this.b*b,n.a=this.a*b,n}scaleAndAddToRef(b,n){return n.r+=this.r*b,n.g+=this.g*b,n.b+=this.b*b,n.a+=this.a*b,n}clampToRef(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2?arguments[2]:void 0;return i.r=(0,U.Clamp)(this.r,b,n),i.g=(0,U.Clamp)(this.g,b,n),i.b=(0,U.Clamp)(this.b,b,n),i.a=(0,U.Clamp)(this.a,b,n),i}multiply(b){return new Z(this.r*b.r,this.g*b.g,this.b*b.b,this.a*b.a)}multiplyToRef(b,n){return n.r=this.r*b.r,n.g=this.g*b.g,n.b=this.b*b.b,n.a=this.a*b.a,n}multiplyInPlace(b){return this.r*=b.r,this.g*=b.g,this.b*=b.b,this.a*=b.a,this}multiplyByFloats(b,n,i,e){return new Z(this.r*b,this.g*n,this.b*i,this.a*e)}divide(b){throw new ReferenceError("Can not divide a color")}divideToRef(b,n){throw new ReferenceError("Can not divide a color")}divideInPlace(b){throw new ReferenceError("Can not divide a color")}minimizeInPlace(b){return this.r=Math.min(this.r,b.r),this.g=Math.min(this.g,b.g),this.b=Math.min(this.b,b.b),this.a=Math.min(this.a,b.a),this}maximizeInPlace(b){return this.r=Math.max(this.r,b.r),this.g=Math.max(this.g,b.g),this.b=Math.max(this.b,b.b),this.a=Math.max(this.a,b.a),this}minimizeInPlaceFromFloats(b,n,i,e){return this.r=Math.min(b,this.r),this.g=Math.min(n,this.g),this.b=Math.min(i,this.b),this.a=Math.min(e,this.a),this}maximizeInPlaceFromFloats(b,n,i,e){return this.r=Math.max(b,this.r),this.g=Math.max(n,this.g),this.b=Math.max(i,this.b),this.a=Math.max(e,this.a),this}floorToRef(b){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(b){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(b){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Q.c;return(0,U.WithinEpsilon)(this.r,b.r,n)&&(0,U.WithinEpsilon)(this.g,b.g,n)&&(0,U.WithinEpsilon)(this.b,b.b,n)&&(0,U.WithinEpsilon)(this.a,b.a,n)}equalsToFloats(b,n,i,e){return this.r===b&&this.g===n&&this.b===i&&this.a===e}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"IV"}getHashCode(){let b=255*this.r|0;return b=397*b^255*this.g,b=397*b^255*this.b,b=397*b^255*this.a,b}clone(){return(new Z).L(this)}L(b){return this.r=b.r,this.g=b.g,this.b=b.b,this.a=b.a,this}re(b,n,i,e){return this.r=b,this.g=n,this.b=i,this.a=e,this}set(b,n,i,e){return this.re(b,n,i,e)}Fe(b){return this.r=this.g=this.b=this.a=b,this}toHexString(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const n=Math.round(255*this.r),i=Math.round(255*this.g),e=Math.round(255*this.b);if(b)return"#"+(0,U.ToHex)(n)+(0,U.ToHex)(i)+(0,U.ToHex)(e);const V=Math.round(255*this.a);return"#"+(0,U.ToHex)(n)+(0,U.ToHex)(i)+(0,U.ToHex)(e)+(0,U.ToHex)(V)}fromHexString(b){return"#"!==b.substring(0,1)||9!==b.length&&7!==b.length||(this.r=parseInt(b.substring(1,3),16)/255,this.g=parseInt(b.substring(3,5),16)/255,this.b=parseInt(b.substring(5,7),16)/255,9===b.length&&(this.a=parseInt(b.substring(7,9),16)/255)),this}toLinearSpace(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const n=new Z;return this.toLinearSpaceToRef(n,b),n}toLinearSpaceToRef(b){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(b.r=L(this.r),b.g=L(this.g),b.b=L(this.b)):(b.r=Y(this.r),b.g=Y(this.g),b.b=Y(this.b)),b.a=this.a,this}toGammaSpace(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const n=new Z;return this.toGammaSpaceToRef(n,b),n}toGammaSpaceToRef(b){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(b.r=mb(this.r),b.g=mb(this.g),b.b=mb(this.b)):(b.r=B(this.r),b.g=B(this.g),b.b=B(this.b)),b.a=this.a,this}static FromHexString(b){return"#"!==b.substring(0,1)||9!==b.length&&7!==b.length?new Z(0,0,0,0):new Z(0,0,0,1).fromHexString(b)}static Lerp(b,n,i){return Z.LerpToRef(b,n,i,new Z)}static LerpToRef(b,n,i,e){return e.r=b.r+(n.r-b.r)*i,e.g=b.g+(n.g-b.g)*i,e.b=b.b+(n.b-b.b)*i,e.a=b.a+(n.a-b.a)*i,e}static Hermite(b,n,i,e,V){const Q=V*V,U=V*Q,Y=2*U-3*Q+1,L=-2*U+3*Q,B=U-2*Q+V,mb=U-Q,N=b.r*Y+i.r*L+n.r*B+e.r*mb,T=b.g*Y+i.g*L+n.g*B+e.g*mb,z=b.b*Y+i.b*L+n.b*B+e.b*mb,K=b.a*Y+i.a*L+n.a*B+e.a*mb;return new Z(N,T,z,K)}static Hermite1stDerivative(b,n,i,e,V){const Q=new Z;return this.Hermite1stDerivativeToRef(b,n,i,e,V,Q),Q}static Hermite1stDerivativeToRef(b,n,i,e,V,Q){const U=V*V;Q.r=6*(U-V)*b.r+(3*U-4*V+1)*n.r+6*(-U+V)*i.r+(3*U-2*V)*e.r,Q.g=6*(U-V)*b.g+(3*U-4*V+1)*n.g+6*(-U+V)*i.g+(3*U-2*V)*e.g,Q.b=6*(U-V)*b.b+(3*U-4*V+1)*n.b+6*(-U+V)*i.b+(3*U-2*V)*e.b,Q.a=6*(U-V)*b.a+(3*U-4*V+1)*n.a+6*(-U+V)*i.a+(3*U-2*V)*e.a}static FromColor3(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new Z(b.r,b.g,b.b,n)}static jn(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new Z(b[n],b[n+1],b[n+2],b[n+3])}static FromArrayToRef(b){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2?arguments[2]:void 0;i.r=b[n],i.g=b[n+1],i.b=b[n+2],i.a=b[n+3]}static FromInts(b,n,i,e){return new Z(b/255,n/255,i/255,e/255)}static CheckColors4(b,n){if(b.length===3*n){const n=[];for(let i=0;i<b.length;i+=3){const e=i/3*4;n[e]=b[i],n[e+1]=b[i+1],n[e+2]=b[i+2],n[e+3]=1}return n}return b}}Z._V8PerformanceHack=new Z(.5,.5,.5,.5),Object.defineProperties(Z.prototype,{dimension:{value:[4]},rank:{value:1}});class T{}T.Mn=(0,e.d)(3,N.Black),T.IV=(0,e.d)(3,(()=>new Z(0,0,0,0))),(0,V.i)("BABYLON.Color3",N),(0,V.i)("BABYLON.Color4",Z)}}]);