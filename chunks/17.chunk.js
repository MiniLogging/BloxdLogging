"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[17],{11281:(k,h,o)=>{o.r(h),o.d(h,{Zh:()=>K,RJ:()=>a,TmpColors:()=>N});var x=o(11256),I=o(11199),q=o(11248),Y=o(11260);function J(k){return Math.pow(k,q.i)}function G(k){return k<=.04045?.0773993808*k:Math.pow(.947867299*(k+.055),2.4)}function l(k){return Math.pow(k,q.g)}function A(k){return k<=.0031308?12.92*k:1.055*Math.pow(k,.41666)-.055}class K{constructor(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=k,this.g=h,this.b=o}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"Zh"}getHashCode(){let k=255*this.r|0;return k=397*k^255*this.g,k=397*k^255*this.b,k}toArray(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return k[h]=this.r,k[h+1]=this.g,k[h+2]=this.b,this}Qo(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return K.FromArrayToRef(k,h,this),this}toColor4(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new a(this.r,this.g,this.b,k)}rh(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(k){return new K(this.r*k.r,this.g*k.g,this.b*k.b)}multiplyToRef(k,h){return h.r=this.r*k.r,h.g=this.g*k.g,h.b=this.b*k.b,h}multiplyInPlace(k){return this.r*=k.r,this.g*=k.g,this.b*=k.b,this}multiplyByFloats(k,h,o){return new K(this.r*k,this.g*h,this.b*o)}divide(k){throw new ReferenceError("Can not divide a color")}divideToRef(k,h){throw new ReferenceError("Can not divide a color")}divideInPlace(k){throw new ReferenceError("Can not divide a color")}minimizeInPlace(k){return this.minimizeInPlaceFromFloats(k.r,k.g,k.b)}maximizeInPlace(k){return this.maximizeInPlaceFromFloats(k.r,k.g,k.b)}minimizeInPlaceFromFloats(k,h,o){return this.r=Math.min(k,this.r),this.g=Math.min(h,this.g),this.b=Math.min(o,this.b),this}maximizeInPlaceFromFloats(k,h,o){return this.r=Math.max(k,this.r),this.g=Math.max(h,this.g),this.b=Math.max(o,this.b),this}floorToRef(k){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(k){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(k){return k&&this.r===k.r&&this.g===k.g&&this.b===k.b}equalsFloats(k,h,o){return this.equalsToFloats(k,h,o)}equalsToFloats(k,h,o){return this.r===k&&this.g===h&&this.b===o}equalsWithEpsilon(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:q.d;return(0,Y.WithinEpsilon)(this.r,k.r,h)&&(0,Y.WithinEpsilon)(this.g,k.g,h)&&(0,Y.WithinEpsilon)(this.b,k.b,h)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(k){throw new ReferenceError("Can not negate a color")}scale(k){return new K(this.r*k,this.g*k,this.b*k)}scaleInPlace(k){return this.r*=k,this.g*=k,this.b*=k,this}scaleToRef(k,h){return h.r=this.r*k,h.g=this.g*k,h.b=this.b*k,h}scaleAndAddToRef(k,h){return h.r+=this.r*k,h.g+=this.g*k,h.b+=this.b*k,h}clampToRef(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2?arguments[2]:void 0;return o.r=(0,Y.Clamp)(this.r,k,h),o.g=(0,Y.Clamp)(this.g,k,h),o.b=(0,Y.Clamp)(this.b,k,h),o}add(k){return new K(this.r+k.r,this.g+k.g,this.b+k.b)}addInPlace(k){return this.r+=k.r,this.g+=k.g,this.b+=k.b,this}addInPlaceFromFloats(k,h,o){return this.r+=k,this.g+=h,this.b+=o,this}addToRef(k,h){return h.r=this.r+k.r,h.g=this.g+k.g,h.b=this.b+k.b,h}ih(k){return new K(this.r-k.r,this.g-k.g,this.b-k.b)}subtractToRef(k,h){return h.r=this.r-k.r,h.g=this.g-k.g,h.b=this.b-k.b,h}xK(k){return this.r-=k.r,this.g-=k.g,this.b-=k.b,this}subtractFromFloats(k,h,o){return new K(this.r-k,this.g-h,this.b-o)}subtractFromFloatsToRef(k,h,o,x){return x.r=this.r-k,x.g=this.g-h,x.b=this.b-o,x}clone(){return new K(this.r,this.g,this.b)}Y(k){return this.r=k.r,this.g=k.g,this.b=k.b,this}VJ(k,h,o){return this.r=k,this.g=h,this.b=o,this}set(k,h,o){return this.VJ(k,h,o)}FJ(k){return this.r=this.g=this.b=k,this}toHexString(){const k=Math.round(255*this.r),h=Math.round(255*this.g),o=Math.round(255*this.b);return"#"+(0,Y.ToHex)(k)+(0,Y.ToHex)(h)+(0,Y.ToHex)(o)}fromHexString(k){return"#"!==k.substring(0,1)||7!==k.length||(this.r=parseInt(k.substring(1,3),16)/255,this.g=parseInt(k.substring(3,5),16)/255,this.b=parseInt(k.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new K)}toHSVToRef(k){const h=this.r,o=this.g,x=this.b,I=Math.max(h,o,x),q=Math.min(h,o,x);let Y=0,J=0;const G=I,l=I-q;return 0!==I&&(J=l/I),I!=q&&(I==h?(Y=(o-x)/l,o<x&&(Y+=6)):I==o?Y=(x-h)/l+2:I==x&&(Y=(h-o)/l+4),Y*=60),k.r=Y,k.g=J,k.b=G,k}toLinearSpace(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=new K;return this.toLinearSpaceToRef(h,k),h}toLinearSpaceToRef(k){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(k.r=G(this.r),k.g=G(this.g),k.b=G(this.b)):(k.r=J(this.r),k.g=J(this.g),k.b=J(this.b)),this}toGammaSpace(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=new K;return this.toGammaSpaceToRef(h,k),h}toGammaSpaceToRef(k){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(k.r=A(this.r),k.g=A(this.g),k.b=A(this.b)):(k.r=l(this.r),k.g=l(this.g),k.b=l(this.b)),this}static HSVtoRGBToRef(k,h,o,x){const I=o*h,q=k/60,Y=I*(1-Math.abs(q%2-1));let J=0,G=0,l=0;q>=0&&q<=1?(J=I,G=Y):q>=1&&q<=2?(J=Y,G=I):q>=2&&q<=3?(G=I,l=Y):q>=3&&q<=4?(G=Y,l=I):q>=4&&q<=5?(J=Y,l=I):q>=5&&q<=6&&(J=I,l=Y);const A=o-I;return x.r=J+A,x.g=G+A,x.b=l+A,x}static FromHSV(k,h,o){const x=new K(0,0,0);return K.HSVtoRGBToRef(k,h,o,x),x}static FromHexString(k){return new K(0,0,0).fromHexString(k)}static Uh(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new K(k[h],k[h+1],k[h+2])}static FromArrayToRef(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2?arguments[2]:void 0;o.r=k[h],o.g=k[h+1],o.b=k[h+2]}static FromInts(k,h,o){return new K(k/255,h/255,o/255)}static Lerp(k,h,o){const x=new K(0,0,0);return K.LerpToRef(k,h,o,x),x}static LerpToRef(k,h,o,x){x.r=k.r+(h.r-k.r)*o,x.g=k.g+(h.g-k.g)*o,x.b=k.b+(h.b-k.b)*o}static Hermite(k,h,o,x,I){const q=I*I,Y=I*q,J=2*Y-3*q+1,G=-2*Y+3*q,l=Y-2*q+I,A=Y-q,a=k.r*J+o.r*G+h.r*l+x.r*A,N=k.g*J+o.g*G+h.g*l+x.g*A,X=k.b*J+o.b*G+h.b*l+x.b*A;return new K(a,N,X)}static Hermite1stDerivative(k,h,o,x,I){const q=K.Black();return this.Hermite1stDerivativeToRef(k,h,o,x,I,q),q}static Hermite1stDerivativeToRef(k,h,o,x,I,q){const Y=I*I;q.r=6*(Y-I)*k.r+(3*Y-4*I+1)*h.r+6*(-Y+I)*o.r+(3*Y-2*I)*x.r,q.g=6*(Y-I)*k.g+(3*Y-4*I+1)*h.g+6*(-Y+I)*o.g+(3*Y-2*I)*x.g,q.b=6*(Y-I)*k.b+(3*Y-4*I+1)*h.b+6*(-Y+I)*o.b+(3*Y-2*I)*x.b}static Red(){return new K(1,0,0)}static Green(){return new K(0,1,0)}static Blue(){return new K(0,0,1)}static Black(){return new K(0,0,0)}static get BlackReadOnly(){return K._BlackReadOnly}static White(){return new K(1,1,1)}static Purple(){return new K(.5,0,.5)}static Magenta(){return new K(1,0,1)}static Yellow(){return new K(1,1,0)}static Gray(){return new K(.5,.5,.5)}static Teal(){return new K(0,1,1)}static Random(){return new K(Math.random(),Math.random(),Math.random())}}K._V8PerformanceHack=new K(.5,.5,.5),K._BlackReadOnly=K.Black(),Object.defineProperties(K.prototype,{dimension:{value:[3]},rank:{value:1}});class a{constructor(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=k,this.g=h,this.b=o,this.a=x}rh(){return[this.r,this.g,this.b,this.a]}toArray(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return k[h]=this.r,k[h+1]=this.g,k[h+2]=this.b,k[h+3]=this.a,this}Qo(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=k[h],this.g=k[h+1],this.b=k[h+2],this.a=k[h+3],this}equals(k){return k&&this.r===k.r&&this.g===k.g&&this.b===k.b&&this.a===k.a}add(k){return new a(this.r+k.r,this.g+k.g,this.b+k.b,this.a+k.a)}addToRef(k,h){return h.r=this.r+k.r,h.g=this.g+k.g,h.b=this.b+k.b,h.a=this.a+k.a,h}addInPlace(k){return this.r+=k.r,this.g+=k.g,this.b+=k.b,this.a+=k.a,this}addInPlaceFromFloats(k,h,o,x){return this.r+=k,this.g+=h,this.b+=o,this.a+=x,this}ih(k){return new a(this.r-k.r,this.g-k.g,this.b-k.b,this.a-k.a)}subtractToRef(k,h){return h.r=this.r-k.r,h.g=this.g-k.g,h.b=this.b-k.b,h.a=this.a-k.a,h}xK(k){return this.r-=k.r,this.g-=k.g,this.b-=k.b,this.a-=k.a,this}subtractFromFloats(k,h,o,x){return new a(this.r-k,this.g-h,this.b-o,this.a-x)}subtractFromFloatsToRef(k,h,o,x,I){return I.r=this.r-k,I.g=this.g-h,I.b=this.b-o,I.a=this.a-x,I}scale(k){return new a(this.r*k,this.g*k,this.b*k,this.a*k)}scaleInPlace(k){return this.r*=k,this.g*=k,this.b*=k,this.a*=k,this}scaleToRef(k,h){return h.r=this.r*k,h.g=this.g*k,h.b=this.b*k,h.a=this.a*k,h}scaleAndAddToRef(k,h){return h.r+=this.r*k,h.g+=this.g*k,h.b+=this.b*k,h.a+=this.a*k,h}clampToRef(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2?arguments[2]:void 0;return o.r=(0,Y.Clamp)(this.r,k,h),o.g=(0,Y.Clamp)(this.g,k,h),o.b=(0,Y.Clamp)(this.b,k,h),o.a=(0,Y.Clamp)(this.a,k,h),o}multiply(k){return new a(this.r*k.r,this.g*k.g,this.b*k.b,this.a*k.a)}multiplyToRef(k,h){return h.r=this.r*k.r,h.g=this.g*k.g,h.b=this.b*k.b,h.a=this.a*k.a,h}multiplyInPlace(k){return this.r*=k.r,this.g*=k.g,this.b*=k.b,this.a*=k.a,this}multiplyByFloats(k,h,o,x){return new a(this.r*k,this.g*h,this.b*o,this.a*x)}divide(k){throw new ReferenceError("Can not divide a color")}divideToRef(k,h){throw new ReferenceError("Can not divide a color")}divideInPlace(k){throw new ReferenceError("Can not divide a color")}minimizeInPlace(k){return this.r=Math.min(this.r,k.r),this.g=Math.min(this.g,k.g),this.b=Math.min(this.b,k.b),this.a=Math.min(this.a,k.a),this}maximizeInPlace(k){return this.r=Math.max(this.r,k.r),this.g=Math.max(this.g,k.g),this.b=Math.max(this.b,k.b),this.a=Math.max(this.a,k.a),this}minimizeInPlaceFromFloats(k,h,o,x){return this.r=Math.min(k,this.r),this.g=Math.min(h,this.g),this.b=Math.min(o,this.b),this.a=Math.min(x,this.a),this}maximizeInPlaceFromFloats(k,h,o,x){return this.r=Math.max(k,this.r),this.g=Math.max(h,this.g),this.b=Math.max(o,this.b),this.a=Math.max(x,this.a),this}floorToRef(k){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(k){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(k){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:q.d;return(0,Y.WithinEpsilon)(this.r,k.r,h)&&(0,Y.WithinEpsilon)(this.g,k.g,h)&&(0,Y.WithinEpsilon)(this.b,k.b,h)&&(0,Y.WithinEpsilon)(this.a,k.a,h)}equalsToFloats(k,h,o,x){return this.r===k&&this.g===h&&this.b===o&&this.a===x}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"RJ"}getHashCode(){let k=255*this.r|0;return k=397*k^255*this.g,k=397*k^255*this.b,k=397*k^255*this.a,k}clone(){return(new a).Y(this)}Y(k){return this.r=k.r,this.g=k.g,this.b=k.b,this.a=k.a,this}VJ(k,h,o,x){return this.r=k,this.g=h,this.b=o,this.a=x,this}set(k,h,o,x){return this.VJ(k,h,o,x)}FJ(k){return this.r=this.g=this.b=this.a=k,this}toHexString(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=Math.round(255*this.r),o=Math.round(255*this.g),x=Math.round(255*this.b);if(k)return"#"+(0,Y.ToHex)(h)+(0,Y.ToHex)(o)+(0,Y.ToHex)(x);const I=Math.round(255*this.a);return"#"+(0,Y.ToHex)(h)+(0,Y.ToHex)(o)+(0,Y.ToHex)(x)+(0,Y.ToHex)(I)}fromHexString(k){return"#"!==k.substring(0,1)||9!==k.length&&7!==k.length||(this.r=parseInt(k.substring(1,3),16)/255,this.g=parseInt(k.substring(3,5),16)/255,this.b=parseInt(k.substring(5,7),16)/255,9===k.length&&(this.a=parseInt(k.substring(7,9),16)/255)),this}toLinearSpace(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=new a;return this.toLinearSpaceToRef(h,k),h}toLinearSpaceToRef(k){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(k.r=G(this.r),k.g=G(this.g),k.b=G(this.b)):(k.r=J(this.r),k.g=J(this.g),k.b=J(this.b)),k.a=this.a,this}toGammaSpace(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=new a;return this.toGammaSpaceToRef(h,k),h}toGammaSpaceToRef(k){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(k.r=A(this.r),k.g=A(this.g),k.b=A(this.b)):(k.r=l(this.r),k.g=l(this.g),k.b=l(this.b)),k.a=this.a,this}static FromHexString(k){return"#"!==k.substring(0,1)||9!==k.length&&7!==k.length?new a(0,0,0,0):new a(0,0,0,1).fromHexString(k)}static Lerp(k,h,o){return a.LerpToRef(k,h,o,new a)}static LerpToRef(k,h,o,x){return x.r=k.r+(h.r-k.r)*o,x.g=k.g+(h.g-k.g)*o,x.b=k.b+(h.b-k.b)*o,x.a=k.a+(h.a-k.a)*o,x}static Hermite(k,h,o,x,I){const q=I*I,Y=I*q,J=2*Y-3*q+1,G=-2*Y+3*q,l=Y-2*q+I,A=Y-q,K=k.r*J+o.r*G+h.r*l+x.r*A,N=k.g*J+o.g*G+h.g*l+x.g*A,X=k.b*J+o.b*G+h.b*l+x.b*A,c=k.a*J+o.a*G+h.a*l+x.a*A;return new a(K,N,X,c)}static Hermite1stDerivative(k,h,o,x,I){const q=new a;return this.Hermite1stDerivativeToRef(k,h,o,x,I,q),q}static Hermite1stDerivativeToRef(k,h,o,x,I,q){const Y=I*I;q.r=6*(Y-I)*k.r+(3*Y-4*I+1)*h.r+6*(-Y+I)*o.r+(3*Y-2*I)*x.r,q.g=6*(Y-I)*k.g+(3*Y-4*I+1)*h.g+6*(-Y+I)*o.g+(3*Y-2*I)*x.g,q.b=6*(Y-I)*k.b+(3*Y-4*I+1)*h.b+6*(-Y+I)*o.b+(3*Y-2*I)*x.b,q.a=6*(Y-I)*k.a+(3*Y-4*I+1)*h.a+6*(-Y+I)*o.a+(3*Y-2*I)*x.a}static FromColor3(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new a(k.r,k.g,k.b,h)}static Uh(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new a(k[h],k[h+1],k[h+2],k[h+3])}static FromArrayToRef(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2?arguments[2]:void 0;o.r=k[h],o.g=k[h+1],o.b=k[h+2],o.a=k[h+3]}static FromInts(k,h,o,x){return new a(k/255,h/255,o/255,x/255)}static CheckColors4(k,h){if(k.length===3*h){const h=[];for(let o=0;o<k.length;o+=3){const x=o/3*4;h[x]=k[o],h[x+1]=k[o+1],h[x+2]=k[o+2],h[x+3]=1}return h}return k}}a._V8PerformanceHack=new a(.5,.5,.5,.5),Object.defineProperties(a.prototype,{dimension:{value:[4]},rank:{value:1}});class N{}N.Zh=(0,x.d)(3,K.Black),N.RJ=(0,x.d)(3,(()=>new a(0,0,0,0))),(0,I.g)("BABYLON.Color3",K),(0,I.g)("BABYLON.Color4",a)}}]);