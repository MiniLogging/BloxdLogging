"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[17],{12643:(K,b,e)=>{e.r(b),e.d(b,{_TGATextureLoader:()=>F});var z=e(10696);function k(K){let b=0;return{id_length:K[b++],colormap_type:K[b++],image_type:K[b++],colormap_index:K[b++]|K[b++]<<8,colormap_length:K[b++]|K[b++]<<8,colormap_size:K[b++],origin:[K[b++]|K[b++]<<8,K[b++]|K[b++]<<8],width:K[b++]|K[b++]<<8,height:K[b++]|K[b++]<<8,pixel_size:K[b++],flags:K[b++]}}function j(K,b){if(b.length<19)return void z.b.Error("Unable to load TGA file - Not enough data to contain header");let e=18;const j=k(b);if(j.id_length+e>b.length)return void z.b.Error("Unable to load TGA file - Not enough data");e+=j.id_length;let F,l=!1,Y=!1,A=!1;switch(j.image_type){case 9:l=!0;case 1:Y=!0;break;case 10:l=!0;case 2:break;case 11:l=!0;case 3:A=!0}const X=j.pixel_size>>3,t=j.width*j.height*X;let U,B,u,m,D,I,x;if(Y&&(U=b.subarray(e,e+=j.colormap_length*(j.colormap_size>>3))),l){let K,z,k;F=new Uint8Array(t);let j=0;const T=new Uint8Array(X);for(;e<t&&j<t;)if(K=b[e++],z=1+(127&K),128&K){for(k=0;k<X;++k)T[k]=b[e++];for(k=0;k<z;++k)F.set(T,j+k*X);j+=X*z}else{for(z*=X,k=0;k<z;++k)F[j+k]=b[e++];j+=z}}else F=b.subarray(e,e+=Y?j.width*j.height:t);switch((48&j.flags)>>4){default:case 2:B=0,m=1,x=j.width,u=0,D=1,I=j.height;break;case 0:B=0,m=1,x=j.width,u=j.height-1,D=-1,I=-1;break;case 3:B=j.width-1,m=-1,x=-1,u=0,D=1,I=j.height;break;case 1:B=j.width-1,m=-1,x=-1,u=j.height-1,D=-1,I=-1}const Q="_getImageData"+(A?"Grey":"")+j.pixel_size+"bits",G=T[Q](j,U,F,u,D,I,B,m,x);K.getEngine()._uploadDataToTextureDirectly(K,G)}const T={GetTGAHeader:k,UploadContent:j,_getImageData8bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=b,X=K.width,t=K.height;let U,B,u,m=0;const D=new Uint8Array(X*t*4);for(u=z;u!==j;u+=k)for(B=T;B!==l;B+=F,m++)U=Y[m],D[4*(B+X*u)+3]=255,D[4*(B+X*u)+2]=A[3*U+0],D[4*(B+X*u)+1]=A[3*U+1],D[4*(B+X*u)+0]=A[3*U+2];return D},_getImageData16bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=K.width,X=K.height;let t,U,B,u=0;const m=new Uint8Array(A*X*4);for(B=z;B!==j;B+=k)for(U=T;U!==l;U+=F,u+=2){t=Y[u+0]+(Y[u+1]<<8);const K=255*((31744&t)>>10)/31|0,b=255*((992&t)>>5)/31|0,e=255*(31&t)/31|0;m[4*(U+A*B)+0]=K,m[4*(U+A*B)+1]=b,m[4*(U+A*B)+2]=e,m[4*(U+A*B)+3]=32768&t?0:255}return m},_getImageData24bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=K.width,X=K.height;let t,U,B=0;const u=new Uint8Array(A*X*4);for(U=z;U!==j;U+=k)for(t=T;t!==l;t+=F,B+=3)u[4*(t+A*U)+3]=255,u[4*(t+A*U)+2]=Y[B+0],u[4*(t+A*U)+1]=Y[B+1],u[4*(t+A*U)+0]=Y[B+2];return u},_getImageData32bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=K.width,X=K.height;let t,U,B=0;const u=new Uint8Array(A*X*4);for(U=z;U!==j;U+=k)for(t=T;t!==l;t+=F,B+=4)u[4*(t+A*U)+2]=Y[B+0],u[4*(t+A*U)+1]=Y[B+1],u[4*(t+A*U)+0]=Y[B+2],u[4*(t+A*U)+3]=Y[B+3];return u},_getImageDataGrey8bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=K.width,X=K.height;let t,U,B,u=0;const m=new Uint8Array(A*X*4);for(B=z;B!==j;B+=k)for(U=T;U!==l;U+=F,u++)t=Y[u],m[4*(U+A*B)+0]=t,m[4*(U+A*B)+1]=t,m[4*(U+A*B)+2]=t,m[4*(U+A*B)+3]=255;return m},_getImageDataGrey16bits:function(K,b,e,z,k,j,T,F,l){const Y=e,A=K.width,X=K.height;let t,U,B=0;const u=new Uint8Array(A*X*4);for(U=z;U!==j;U+=k)for(t=T;t!==l;t+=F,B+=2)u[4*(t+A*U)+0]=Y[B+0],u[4*(t+A*U)+1]=Y[B+0],u[4*(t+A*U)+2]=Y[B+0],u[4*(t+A*U)+3]=Y[B+1];return u}};class F{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(K,b,e){const z=new Uint8Array(K.buffer,K.byteOffset,K.byteLength),T=k(z);e(T.width,T.height,b.generateMipMaps,!1,(()=>{j(b,z)}))}}}}]);