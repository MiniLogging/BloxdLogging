"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[17],{13042:(y,g,f)=>{f.r(g),f.d(g,{_TGATextureLoader:()=>H});var p=f(10736);function S(y){let g=0;return{id_length:y[g++],colormap_type:y[g++],image_type:y[g++],colormap_index:y[g++]|y[g++]<<8,colormap_length:y[g++]|y[g++]<<8,colormap_size:y[g++],origin:[y[g++]|y[g++]<<8,y[g++]|y[g++]<<8],width:y[g++]|y[g++]<<8,height:y[g++]|y[g++]<<8,pixel_size:y[g++],flags:y[g++]}}function k(y,g){if(g.length<19)return void p.d.Error("Unable to load TGA file - Not enough data to contain header");let f=18;const k=S(g);if(k.id_length+f>g.length)return void p.d.Error("Unable to load TGA file - Not enough data");f+=k.id_length;let H,U=!1,l=!1,c=!1;switch(k.image_type){case 9:U=!0;case 1:l=!0;break;case 10:U=!0;case 2:break;case 11:U=!0;case 3:c=!0}const Z=k.pixel_size>>3,C=k.width*k.height*Z;let q,W,j,P,B,R,G;if(l&&(q=g.subarray(f,f+=k.colormap_length*(k.colormap_size>>3))),U){let y,p,S;H=new Uint8Array(C);let k=0;const i=new Uint8Array(Z);for(;f<C&&k<C;)if(y=g[f++],p=1+(127&y),128&y){for(S=0;S<Z;++S)i[S]=g[f++];for(S=0;S<p;++S)H.set(i,k+S*Z);k+=Z*p}else{for(p*=Z,S=0;S<p;++S)H[k+S]=g[f++];k+=p}}else H=g.subarray(f,f+=l?k.width*k.height:C);switch((48&k.flags)>>4){default:case 2:W=0,P=1,G=k.width,j=0,B=1,R=k.height;break;case 0:W=0,P=1,G=k.width,j=k.height-1,B=-1,R=-1;break;case 3:W=k.width-1,P=-1,G=-1,j=0,B=1,R=k.height;break;case 1:W=k.width-1,P=-1,G=-1,j=k.height-1,B=-1,R=-1}const z="_getImageData"+(c?"Grey":"")+k.pixel_size+"bits",T=i[z](k,q,H,j,B,R,W,P,G);y.getEngine()._uploadDataToTextureDirectly(y,T)}const i={GetTGAHeader:S,UploadContent:k,_getImageData8bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=g,Z=y.width,C=y.height;let q,W,j,P=0;const B=new Uint8Array(Z*C*4);for(j=p;j!==k;j+=S)for(W=i;W!==U;W+=H,P++)q=l[P],B[4*(W+Z*j)+3]=255,B[4*(W+Z*j)+2]=c[3*q+0],B[4*(W+Z*j)+1]=c[3*q+1],B[4*(W+Z*j)+0]=c[3*q+2];return B},_getImageData16bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=y.width,Z=y.height;let C,q,W,j=0;const P=new Uint8Array(c*Z*4);for(W=p;W!==k;W+=S)for(q=i;q!==U;q+=H,j+=2){C=l[j+0]+(l[j+1]<<8);const y=255*((31744&C)>>10)/31|0,g=255*((992&C)>>5)/31|0,f=255*(31&C)/31|0;P[4*(q+c*W)+0]=y,P[4*(q+c*W)+1]=g,P[4*(q+c*W)+2]=f,P[4*(q+c*W)+3]=32768&C?0:255}return P},_getImageData24bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=y.width,Z=y.height;let C,q,W=0;const j=new Uint8Array(c*Z*4);for(q=p;q!==k;q+=S)for(C=i;C!==U;C+=H,W+=3)j[4*(C+c*q)+3]=255,j[4*(C+c*q)+2]=l[W+0],j[4*(C+c*q)+1]=l[W+1],j[4*(C+c*q)+0]=l[W+2];return j},_getImageData32bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=y.width,Z=y.height;let C,q,W=0;const j=new Uint8Array(c*Z*4);for(q=p;q!==k;q+=S)for(C=i;C!==U;C+=H,W+=4)j[4*(C+c*q)+2]=l[W+0],j[4*(C+c*q)+1]=l[W+1],j[4*(C+c*q)+0]=l[W+2],j[4*(C+c*q)+3]=l[W+3];return j},_getImageDataGrey8bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=y.width,Z=y.height;let C,q,W,j=0;const P=new Uint8Array(c*Z*4);for(W=p;W!==k;W+=S)for(q=i;q!==U;q+=H,j++)C=l[j],P[4*(q+c*W)+0]=C,P[4*(q+c*W)+1]=C,P[4*(q+c*W)+2]=C,P[4*(q+c*W)+3]=255;return P},_getImageDataGrey16bits:function(y,g,f,p,S,k,i,H,U){const l=f,c=y.width,Z=y.height;let C,q,W=0;const j=new Uint8Array(c*Z*4);for(q=p;q!==k;q+=S)for(C=i;C!==U;C+=H,W+=2)j[4*(C+c*q)+0]=l[W+0],j[4*(C+c*q)+1]=l[W+0],j[4*(C+c*q)+2]=l[W+0],j[4*(C+c*q)+3]=l[W+1];return j}};class H{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(y,g,f){const p=new Uint8Array(y.buffer,y.byteOffset,y.byteLength),i=S(p);f(i.width,i.height,g.generateMipMaps,!1,(()=>{k(g,p)}))}}}}]);