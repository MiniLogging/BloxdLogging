"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[17],{11789:(e,E,H)=>{H.r(E),H.d(E,{XE:()=>i,FM:()=>V,TmpColors:()=>U});var N=H(11753),u=H(11690),z=H(11746),P=H(11756);function M(e){return Math.pow(e,z.j)}function D(e){return e<=.04045?.0773993808*e:Math.pow(.947867299*(e+.055),2.4)}function A(e){return Math.pow(e,z.h)}function C(e){return e<=.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=e,this.g=E,this.b=H}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"XE"}getHashCode(){let e=255*this.r|0;return e=397*e^255*this.g,e=397*e^255*this.b,e}toArray(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[E]=this.r,e[E+1]=this.g,e[E+2]=this.b,this}VH(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return i.FromArrayToRef(e,E,this),this}toColor4(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new V(this.r,this.g,this.b,e)}uM(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(e){return new i(this.r*e.r,this.g*e.g,this.b*e.b)}multiplyToRef(e,E){return E.r=this.r*e.r,E.g=this.g*e.g,E.b=this.b*e.b,E}multiplyInPlace(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyByFloats(e,E,H){return new i(this.r*e,this.g*E,this.b*H)}divide(e){throw new ReferenceError("Can not divide a color")}divideToRef(e,E){throw new ReferenceError("Can not divide a color")}divideInPlace(e){throw new ReferenceError("Can not divide a color")}minimizeInPlace(e){return this.minimizeInPlaceFromFloats(e.r,e.g,e.b)}maximizeInPlace(e){return this.maximizeInPlaceFromFloats(e.r,e.g,e.b)}minimizeInPlaceFromFloats(e,E,H){return this.r=Math.min(e,this.r),this.g=Math.min(E,this.g),this.b=Math.min(H,this.b),this}maximizeInPlaceFromFloats(e,E,H){return this.r=Math.max(e,this.r),this.g=Math.max(E,this.g),this.b=Math.max(H,this.b),this}floorToRef(e){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(e){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b}equalsFloats(e,E,H){return this.equalsToFloats(e,E,H)}equalsToFloats(e,E,H){return this.r===e&&this.g===E&&this.b===H}equalsWithEpsilon(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:z.d;return(0,P.WithinEpsilon)(this.r,e.r,E)&&(0,P.WithinEpsilon)(this.g,e.g,E)&&(0,P.WithinEpsilon)(this.b,e.b,E)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(e){throw new ReferenceError("Can not negate a color")}scale(e){return new i(this.r*e,this.g*e,this.b*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this}scaleToRef(e,E){return E.r=this.r*e,E.g=this.g*e,E.b=this.b*e,E}scaleAndAddToRef(e,E){return E.r+=this.r*e,E.g+=this.g*e,E.b+=this.b*e,E}clampToRef(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,H=arguments.length>2?arguments[2]:void 0;return H.r=(0,P.Clamp)(this.r,e,E),H.g=(0,P.Clamp)(this.g,e,E),H.b=(0,P.Clamp)(this.b,e,E),H}add(e){return new i(this.r+e.r,this.g+e.g,this.b+e.b)}addInPlace(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addInPlaceFromFloats(e,E,H){return this.r+=e,this.g+=E,this.b+=H,this}addToRef(e,E){return E.r=this.r+e.r,E.g=this.g+e.g,E.b=this.b+e.b,E}FE(e){return new i(this.r-e.r,this.g-e.g,this.b-e.b)}subtractToRef(e,E){return E.r=this.r-e.r,E.g=this.g-e.g,E.b=this.b-e.b,E}JC(e){return this.r-=e.r,this.g-=e.g,this.b-=e.b,this}subtractFromFloats(e,E,H){return new i(this.r-e,this.g-E,this.b-H)}subtractFromFloatsToRef(e,E,H,N){return N.r=this.r-e,N.g=this.g-E,N.b=this.b-H,N}clone(){return new i(this.r,this.g,this.b)}P(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}VM(e,E,H){return this.r=e,this.g=E,this.b=H,this}set(e,E,H){return this.VM(e,E,H)}jM(e){return this.r=this.g=this.b=e,this}toHexString(){const e=Math.round(255*this.r),E=Math.round(255*this.g),H=Math.round(255*this.b);return"#"+(0,P.ToHex)(e)+(0,P.ToHex)(E)+(0,P.ToHex)(H)}fromHexString(e){return"#"!==e.substring(0,1)||7!==e.length||(this.r=parseInt(e.substring(1,3),16)/255,this.g=parseInt(e.substring(3,5),16)/255,this.b=parseInt(e.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new i)}toHSVToRef(e){const E=this.r,H=this.g,N=this.b,u=Math.max(E,H,N),z=Math.min(E,H,N);let P=0,M=0;const D=u,A=u-z;return 0!==u&&(M=A/u),u!=z&&(u==E?(P=(H-N)/A,H<N&&(P+=6)):u==H?P=(N-E)/A+2:u==N&&(P=(E-H)/A+4),P*=60),e.r=P,e.g=M,e.b=D,e}toLinearSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const E=new i;return this.toLinearSpaceToRef(E,e),E}toLinearSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=D(this.r),e.g=D(this.g),e.b=D(this.b)):(e.r=M(this.r),e.g=M(this.g),e.b=M(this.b)),this}toGammaSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const E=new i;return this.toGammaSpaceToRef(E,e),E}toGammaSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=C(this.r),e.g=C(this.g),e.b=C(this.b)):(e.r=A(this.r),e.g=A(this.g),e.b=A(this.b)),this}static HSVtoRGBToRef(e,E,H,N){const u=H*E,z=e/60,P=u*(1-Math.abs(z%2-1));let M=0,D=0,A=0;z>=0&&z<=1?(M=u,D=P):z>=1&&z<=2?(M=P,D=u):z>=2&&z<=3?(D=u,A=P):z>=3&&z<=4?(D=P,A=u):z>=4&&z<=5?(M=P,A=u):z>=5&&z<=6&&(M=u,A=P);const C=H-u;return N.r=M+C,N.g=D+C,N.b=A+C,N}static FromHSV(e,E,H){const N=new i(0,0,0);return i.HSVtoRGBToRef(e,E,H,N),N}static FromHexString(e){return new i(0,0,0).fromHexString(e)}static aE(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new i(e[E],e[E+1],e[E+2])}static FromArrayToRef(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,H=arguments.length>2?arguments[2]:void 0;H.r=e[E],H.g=e[E+1],H.b=e[E+2]}static FromInts(e,E,H){return new i(e/255,E/255,H/255)}static Lerp(e,E,H){const N=new i(0,0,0);return i.LerpToRef(e,E,H,N),N}static LerpToRef(e,E,H,N){N.r=e.r+(E.r-e.r)*H,N.g=e.g+(E.g-e.g)*H,N.b=e.b+(E.b-e.b)*H}static Hermite(e,E,H,N,u){const z=u*u,P=u*z,M=2*P-3*z+1,D=-2*P+3*z,A=P-2*z+u,C=P-z,V=e.r*M+H.r*D+E.r*A+N.r*C,U=e.g*M+H.g*D+E.g*A+N.g*C,j=e.b*M+H.b*D+E.b*A+N.b*C;return new i(V,U,j)}static Hermite1stDerivative(e,E,H,N,u){const z=i.Black();return this.Hermite1stDerivativeToRef(e,E,H,N,u,z),z}static Hermite1stDerivativeToRef(e,E,H,N,u,z){const P=u*u;z.r=6*(P-u)*e.r+(3*P-4*u+1)*E.r+6*(-P+u)*H.r+(3*P-2*u)*N.r,z.g=6*(P-u)*e.g+(3*P-4*u+1)*E.g+6*(-P+u)*H.g+(3*P-2*u)*N.g,z.b=6*(P-u)*e.b+(3*P-4*u+1)*E.b+6*(-P+u)*H.b+(3*P-2*u)*N.b}static Red(){return new i(1,0,0)}static Green(){return new i(0,1,0)}static Blue(){return new i(0,0,1)}static Black(){return new i(0,0,0)}static get BlackReadOnly(){return i._BlackReadOnly}static White(){return new i(1,1,1)}static Purple(){return new i(.5,0,.5)}static Magenta(){return new i(1,0,1)}static Yellow(){return new i(1,1,0)}static Gray(){return new i(.5,.5,.5)}static Teal(){return new i(0,1,1)}static Random(){return new i(Math.random(),Math.random(),Math.random())}}i._V8PerformanceHack=new i(.5,.5,.5),i._BlackReadOnly=i.Black(),Object.defineProperties(i.prototype,{dimension:{value:[3]},rank:{value:1}});class V{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=e,this.g=E,this.b=H,this.a=N}uM(){return[this.r,this.g,this.b,this.a]}toArray(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[E]=this.r,e[E+1]=this.g,e[E+2]=this.b,e[E+3]=this.a,this}VH(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[E],this.g=e[E+1],this.b=e[E+2],this.a=e[E+3],this}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b&&this.a===e.a}add(e){return new V(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)}addToRef(e,E){return E.r=this.r+e.r,E.g=this.g+e.g,E.b=this.b+e.b,E.a=this.a+e.a,E}addInPlace(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this.a+=e.a,this}addInPlaceFromFloats(e,E,H,N){return this.r+=e,this.g+=E,this.b+=H,this.a+=N,this}FE(e){return new V(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)}subtractToRef(e,E){return E.r=this.r-e.r,E.g=this.g-e.g,E.b=this.b-e.b,E.a=this.a-e.a,E}JC(e){return this.r-=e.r,this.g-=e.g,this.b-=e.b,this.a-=e.a,this}subtractFromFloats(e,E,H,N){return new V(this.r-e,this.g-E,this.b-H,this.a-N)}subtractFromFloatsToRef(e,E,H,N,u){return u.r=this.r-e,u.g=this.g-E,u.b=this.b-H,u.a=this.a-N,u}scale(e){return new V(this.r*e,this.g*e,this.b*e,this.a*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this.a*=e,this}scaleToRef(e,E){return E.r=this.r*e,E.g=this.g*e,E.b=this.b*e,E.a=this.a*e,E}scaleAndAddToRef(e,E){return E.r+=this.r*e,E.g+=this.g*e,E.b+=this.b*e,E.a+=this.a*e,E}clampToRef(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,H=arguments.length>2?arguments[2]:void 0;return H.r=(0,P.Clamp)(this.r,e,E),H.g=(0,P.Clamp)(this.g,e,E),H.b=(0,P.Clamp)(this.b,e,E),H.a=(0,P.Clamp)(this.a,e,E),H}multiply(e){return new V(this.r*e.r,this.g*e.g,this.b*e.b,this.a*e.a)}multiplyToRef(e,E){return E.r=this.r*e.r,E.g=this.g*e.g,E.b=this.b*e.b,E.a=this.a*e.a,E}multiplyInPlace(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this.a*=e.a,this}multiplyByFloats(e,E,H,N){return new V(this.r*e,this.g*E,this.b*H,this.a*N)}divide(e){throw new ReferenceError("Can not divide a color")}divideToRef(e,E){throw new ReferenceError("Can not divide a color")}divideInPlace(e){throw new ReferenceError("Can not divide a color")}minimizeInPlace(e){return this.r=Math.min(this.r,e.r),this.g=Math.min(this.g,e.g),this.b=Math.min(this.b,e.b),this.a=Math.min(this.a,e.a),this}maximizeInPlace(e){return this.r=Math.max(this.r,e.r),this.g=Math.max(this.g,e.g),this.b=Math.max(this.b,e.b),this.a=Math.max(this.a,e.a),this}minimizeInPlaceFromFloats(e,E,H,N){return this.r=Math.min(e,this.r),this.g=Math.min(E,this.g),this.b=Math.min(H,this.b),this.a=Math.min(N,this.a),this}maximizeInPlaceFromFloats(e,E,H,N){return this.r=Math.max(e,this.r),this.g=Math.max(E,this.g),this.b=Math.max(H,this.b),this.a=Math.max(N,this.a),this}floorToRef(e){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(e){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(e){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:z.d;return(0,P.WithinEpsilon)(this.r,e.r,E)&&(0,P.WithinEpsilon)(this.g,e.g,E)&&(0,P.WithinEpsilon)(this.b,e.b,E)&&(0,P.WithinEpsilon)(this.a,e.a,E)}equalsToFloats(e,E,H,N){return this.r===e&&this.g===E&&this.b===H&&this.a===N}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"FM"}getHashCode(){let e=255*this.r|0;return e=397*e^255*this.g,e=397*e^255*this.b,e=397*e^255*this.a,e}clone(){return(new V).P(this)}P(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this}VM(e,E,H,N){return this.r=e,this.g=E,this.b=H,this.a=N,this}set(e,E,H,N){return this.VM(e,E,H,N)}jM(e){return this.r=this.g=this.b=this.a=e,this}toHexString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const E=Math.round(255*this.r),H=Math.round(255*this.g),N=Math.round(255*this.b);if(e)return"#"+(0,P.ToHex)(E)+(0,P.ToHex)(H)+(0,P.ToHex)(N);const u=Math.round(255*this.a);return"#"+(0,P.ToHex)(E)+(0,P.ToHex)(H)+(0,P.ToHex)(N)+(0,P.ToHex)(u)}fromHexString(e){return"#"!==e.substring(0,1)||9!==e.length&&7!==e.length||(this.r=parseInt(e.substring(1,3),16)/255,this.g=parseInt(e.substring(3,5),16)/255,this.b=parseInt(e.substring(5,7),16)/255,9===e.length&&(this.a=parseInt(e.substring(7,9),16)/255)),this}toLinearSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const E=new V;return this.toLinearSpaceToRef(E,e),E}toLinearSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=D(this.r),e.g=D(this.g),e.b=D(this.b)):(e.r=M(this.r),e.g=M(this.g),e.b=M(this.b)),e.a=this.a,this}toGammaSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const E=new V;return this.toGammaSpaceToRef(E,e),E}toGammaSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=C(this.r),e.g=C(this.g),e.b=C(this.b)):(e.r=A(this.r),e.g=A(this.g),e.b=A(this.b)),e.a=this.a,this}static FromHexString(e){return"#"!==e.substring(0,1)||9!==e.length&&7!==e.length?new V(0,0,0,0):new V(0,0,0,1).fromHexString(e)}static Lerp(e,E,H){return V.LerpToRef(e,E,H,new V)}static LerpToRef(e,E,H,N){return N.r=e.r+(E.r-e.r)*H,N.g=e.g+(E.g-e.g)*H,N.b=e.b+(E.b-e.b)*H,N.a=e.a+(E.a-e.a)*H,N}static Hermite(e,E,H,N,u){const z=u*u,P=u*z,M=2*P-3*z+1,D=-2*P+3*z,A=P-2*z+u,C=P-z,i=e.r*M+H.r*D+E.r*A+N.r*C,U=e.g*M+H.g*D+E.g*A+N.g*C,j=e.b*M+H.b*D+E.b*A+N.b*C,F=e.a*M+H.a*D+E.a*A+N.a*C;return new V(i,U,j,F)}static Hermite1stDerivative(e,E,H,N,u){const z=new V;return this.Hermite1stDerivativeToRef(e,E,H,N,u,z),z}static Hermite1stDerivativeToRef(e,E,H,N,u,z){const P=u*u;z.r=6*(P-u)*e.r+(3*P-4*u+1)*E.r+6*(-P+u)*H.r+(3*P-2*u)*N.r,z.g=6*(P-u)*e.g+(3*P-4*u+1)*E.g+6*(-P+u)*H.g+(3*P-2*u)*N.g,z.b=6*(P-u)*e.b+(3*P-4*u+1)*E.b+6*(-P+u)*H.b+(3*P-2*u)*N.b,z.a=6*(P-u)*e.a+(3*P-4*u+1)*E.a+6*(-P+u)*H.a+(3*P-2*u)*N.a}static FromColor3(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new V(e.r,e.g,e.b,E)}static aE(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new V(e[E],e[E+1],e[E+2],e[E+3])}static FromArrayToRef(e){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,H=arguments.length>2?arguments[2]:void 0;H.r=e[E],H.g=e[E+1],H.b=e[E+2],H.a=e[E+3]}static FromInts(e,E,H,N){return new V(e/255,E/255,H/255,N/255)}static CheckColors4(e,E){if(e.length===3*E){const E=[];for(let H=0;H<e.length;H+=3){const N=H/3*4;E[N]=e[H],E[N+1]=e[H+1],E[N+2]=e[H+2],E[N+3]=1}return E}return e}}V._V8PerformanceHack=new V(.5,.5,.5,.5),Object.defineProperties(V.prototype,{dimension:{value:[4]},rank:{value:1}});class U{}U.XE=(0,N.d)(3,i.Black),U.FM=(0,N.d)(3,(()=>new V(0,0,0,0))),(0,u.g)("BABYLON.Color3",i),(0,u.g)("BABYLON.Color4",V)}}]);