"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[17],{12775:(t,b,Z)=>{Z.r(b),Z.d(b,{hZ:()=>I,Fb:()=>r,TmpColors:()=>M});var J=Z(12742),S=Z(12688),P=Z(12737),v=Z(12745);function h(t){return Math.pow(t,P.m)}function C(t){return t<=.04045?.0773993808*t:Math.pow(.947867299*(t+.055),2.4)}function Y(t){return Math.pow(t,P.k)}function g(t){return t<=.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class I{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=t,this.g=b,this.b=Z}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"hZ"}getHashCode(){let t=255*this.r|0;return t=397*t^255*this.g,t=397*t^255*this.b,t}toArray(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[b]=this.r,t[b+1]=this.g,t[b+2]=this.b,this}ZJ(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return I.FromArrayToRef(t,b,this),this}toColor4(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new r(this.r,this.g,this.b,t)}jb(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(t){return new I(this.r*t.r,this.g*t.g,this.b*t.b)}multiplyToRef(t,b){return b.r=this.r*t.r,b.g=this.g*t.g,b.b=this.b*t.b,b}multiplyInPlace(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyByFloats(t,b,Z){return new I(this.r*t,this.g*b,this.b*Z)}divide(t){throw new ReferenceError("Can not divide a color")}divideToRef(t,b){throw new ReferenceError("Can not divide a color")}divideInPlace(t){throw new ReferenceError("Can not divide a color")}minimizeInPlace(t){return this.minimizeInPlaceFromFloats(t.r,t.g,t.b)}maximizeInPlace(t){return this.maximizeInPlaceFromFloats(t.r,t.g,t.b)}minimizeInPlaceFromFloats(t,b,Z){return this.r=Math.min(t,this.r),this.g=Math.min(b,this.g),this.b=Math.min(Z,this.b),this}maximizeInPlaceFromFloats(t,b,Z){return this.r=Math.max(t,this.r),this.g=Math.max(b,this.g),this.b=Math.max(Z,this.b),this}floorToRef(t){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(t){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(t){return t&&this.r===t.r&&this.g===t.g&&this.b===t.b}equalsFloats(t,b,Z){return this.equalsToFloats(t,b,Z)}equalsToFloats(t,b,Z){return this.r===t&&this.g===b&&this.b===Z}equalsWithEpsilon(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:P.e;return(0,v.WithinEpsilon)(this.r,t.r,b)&&(0,v.WithinEpsilon)(this.g,t.g,b)&&(0,v.WithinEpsilon)(this.b,t.b,b)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(t){throw new ReferenceError("Can not negate a color")}scale(t){return new I(this.r*t,this.g*t,this.b*t)}scaleInPlace(t){return this.r*=t,this.g*=t,this.b*=t,this}scaleToRef(t,b){return b.r=this.r*t,b.g=this.g*t,b.b=this.b*t,b}scaleAndAddToRef(t,b){return b.r+=this.r*t,b.g+=this.g*t,b.b+=this.b*t,b}clampToRef(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Z=arguments.length>2?arguments[2]:void 0;return Z.r=(0,v.Clamp)(this.r,t,b),Z.g=(0,v.Clamp)(this.g,t,b),Z.b=(0,v.Clamp)(this.b,t,b),Z}add(t){return new I(this.r+t.r,this.g+t.g,this.b+t.b)}addInPlace(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addInPlaceFromFloats(t,b,Z){return this.r+=t,this.g+=b,this.b+=Z,this}addToRef(t,b){return b.r=this.r+t.r,b.g=this.g+t.g,b.b=this.b+t.b,b}SZ(t){return new I(this.r-t.r,this.g-t.g,this.b-t.b)}subtractToRef(t,b){return b.r=this.r-t.r,b.g=this.g-t.g,b.b=this.b-t.b,b}XI(t){return this.r-=t.r,this.g-=t.g,this.b-=t.b,this}subtractFromFloats(t,b,Z){return new I(this.r-t,this.g-b,this.b-Z)}subtractFromFloatsToRef(t,b,Z,J){return J.r=this.r-t,J.g=this.g-b,J.b=this.b-Z,J}clone(){return new I(this.r,this.g,this.b)}S(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}Ab(t,b,Z){return this.r=t,this.g=b,this.b=Z,this}set(t,b,Z){return this.Ab(t,b,Z)}Lb(t){return this.r=this.g=this.b=t,this}toHexString(){const t=Math.round(255*this.r),b=Math.round(255*this.g),Z=Math.round(255*this.b);return"#"+(0,v.ToHex)(t)+(0,v.ToHex)(b)+(0,v.ToHex)(Z)}fromHexString(t){return"#"!==t.substring(0,1)||7!==t.length||(this.r=parseInt(t.substring(1,3),16)/255,this.g=parseInt(t.substring(3,5),16)/255,this.b=parseInt(t.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new I)}toHSVToRef(t){const b=this.r,Z=this.g,J=this.b,S=Math.max(b,Z,J),P=Math.min(b,Z,J);let v=0,h=0;const C=S,Y=S-P;return 0!==S&&(h=Y/S),S!=P&&(S==b?(v=(Z-J)/Y,Z<J&&(v+=6)):S==Z?v=(J-b)/Y+2:S==J&&(v=(b-Z)/Y+4),v*=60),t.r=v,t.g=h,t.b=C,t}toLinearSpace(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=new I;return this.toLinearSpaceToRef(b,t),b}toLinearSpaceToRef(t){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(t.r=C(this.r),t.g=C(this.g),t.b=C(this.b)):(t.r=h(this.r),t.g=h(this.g),t.b=h(this.b)),this}toGammaSpace(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=new I;return this.toGammaSpaceToRef(b,t),b}toGammaSpaceToRef(t){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(t.r=g(this.r),t.g=g(this.g),t.b=g(this.b)):(t.r=Y(this.r),t.g=Y(this.g),t.b=Y(this.b)),this}static HSVtoRGBToRef(t,b,Z,J){const S=Z*b,P=t/60,v=S*(1-Math.abs(P%2-1));let h=0,C=0,Y=0;P>=0&&P<=1?(h=S,C=v):P>=1&&P<=2?(h=v,C=S):P>=2&&P<=3?(C=S,Y=v):P>=3&&P<=4?(C=v,Y=S):P>=4&&P<=5?(h=v,Y=S):P>=5&&P<=6&&(h=S,Y=v);const g=Z-S;return J.r=h+g,J.g=C+g,J.b=Y+g,J}static FromHSV(t,b,Z){const J=new I(0,0,0);return I.HSVtoRGBToRef(t,b,Z,J),J}static FromHexString(t){return new I(0,0,0).fromHexString(t)}static CZ(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new I(t[b],t[b+1],t[b+2])}static FromArrayToRef(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Z=arguments.length>2?arguments[2]:void 0;Z.r=t[b],Z.g=t[b+1],Z.b=t[b+2]}static FromInts(t,b,Z){return new I(t/255,b/255,Z/255)}static Lerp(t,b,Z){const J=new I(0,0,0);return I.LerpToRef(t,b,Z,J),J}static LerpToRef(t,b,Z,J){J.r=t.r+(b.r-t.r)*Z,J.g=t.g+(b.g-t.g)*Z,J.b=t.b+(b.b-t.b)*Z}static Hermite(t,b,Z,J,S){const P=S*S,v=S*P,h=2*v-3*P+1,C=-2*v+3*P,Y=v-2*P+S,g=v-P,r=t.r*h+Z.r*C+b.r*Y+J.r*g,M=t.g*h+Z.g*C+b.g*Y+J.g*g,T=t.b*h+Z.b*C+b.b*Y+J.b*g;return new I(r,M,T)}static Hermite1stDerivative(t,b,Z,J,S){const P=I.Black();return this.Hermite1stDerivativeToRef(t,b,Z,J,S,P),P}static Hermite1stDerivativeToRef(t,b,Z,J,S,P){const v=S*S;P.r=6*(v-S)*t.r+(3*v-4*S+1)*b.r+6*(-v+S)*Z.r+(3*v-2*S)*J.r,P.g=6*(v-S)*t.g+(3*v-4*S+1)*b.g+6*(-v+S)*Z.g+(3*v-2*S)*J.g,P.b=6*(v-S)*t.b+(3*v-4*S+1)*b.b+6*(-v+S)*Z.b+(3*v-2*S)*J.b}static Red(){return new I(1,0,0)}static Green(){return new I(0,1,0)}static Blue(){return new I(0,0,1)}static Black(){return new I(0,0,0)}static get BlackReadOnly(){return I._BlackReadOnly}static White(){return new I(1,1,1)}static Purple(){return new I(.5,0,.5)}static Magenta(){return new I(1,0,1)}static Yellow(){return new I(1,1,0)}static Gray(){return new I(.5,.5,.5)}static Teal(){return new I(0,1,1)}static Random(){return new I(Math.random(),Math.random(),Math.random())}}I._V8PerformanceHack=new I(.5,.5,.5),I._BlackReadOnly=I.Black(),Object.defineProperties(I.prototype,{dimension:{value:[3]},rank:{value:1}});class r{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=t,this.g=b,this.b=Z,this.a=J}jb(){return[this.r,this.g,this.b,this.a]}toArray(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[b]=this.r,t[b+1]=this.g,t[b+2]=this.b,t[b+3]=this.a,this}ZJ(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=t[b],this.g=t[b+1],this.b=t[b+2],this.a=t[b+3],this}equals(t){return t&&this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}add(t){return new r(this.r+t.r,this.g+t.g,this.b+t.b,this.a+t.a)}addToRef(t,b){return b.r=this.r+t.r,b.g=this.g+t.g,b.b=this.b+t.b,b.a=this.a+t.a,b}addInPlace(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this.a+=t.a,this}addInPlaceFromFloats(t,b,Z,J){return this.r+=t,this.g+=b,this.b+=Z,this.a+=J,this}SZ(t){return new r(this.r-t.r,this.g-t.g,this.b-t.b,this.a-t.a)}subtractToRef(t,b){return b.r=this.r-t.r,b.g=this.g-t.g,b.b=this.b-t.b,b.a=this.a-t.a,b}XI(t){return this.r-=t.r,this.g-=t.g,this.b-=t.b,this.a-=t.a,this}subtractFromFloats(t,b,Z,J){return new r(this.r-t,this.g-b,this.b-Z,this.a-J)}subtractFromFloatsToRef(t,b,Z,J,S){return S.r=this.r-t,S.g=this.g-b,S.b=this.b-Z,S.a=this.a-J,S}scale(t){return new r(this.r*t,this.g*t,this.b*t,this.a*t)}scaleInPlace(t){return this.r*=t,this.g*=t,this.b*=t,this.a*=t,this}scaleToRef(t,b){return b.r=this.r*t,b.g=this.g*t,b.b=this.b*t,b.a=this.a*t,b}scaleAndAddToRef(t,b){return b.r+=this.r*t,b.g+=this.g*t,b.b+=this.b*t,b.a+=this.a*t,b}clampToRef(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Z=arguments.length>2?arguments[2]:void 0;return Z.r=(0,v.Clamp)(this.r,t,b),Z.g=(0,v.Clamp)(this.g,t,b),Z.b=(0,v.Clamp)(this.b,t,b),Z.a=(0,v.Clamp)(this.a,t,b),Z}multiply(t){return new r(this.r*t.r,this.g*t.g,this.b*t.b,this.a*t.a)}multiplyToRef(t,b){return b.r=this.r*t.r,b.g=this.g*t.g,b.b=this.b*t.b,b.a=this.a*t.a,b}multiplyInPlace(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this.a*=t.a,this}multiplyByFloats(t,b,Z,J){return new r(this.r*t,this.g*b,this.b*Z,this.a*J)}divide(t){throw new ReferenceError("Can not divide a color")}divideToRef(t,b){throw new ReferenceError("Can not divide a color")}divideInPlace(t){throw new ReferenceError("Can not divide a color")}minimizeInPlace(t){return this.r=Math.min(this.r,t.r),this.g=Math.min(this.g,t.g),this.b=Math.min(this.b,t.b),this.a=Math.min(this.a,t.a),this}maximizeInPlace(t){return this.r=Math.max(this.r,t.r),this.g=Math.max(this.g,t.g),this.b=Math.max(this.b,t.b),this.a=Math.max(this.a,t.a),this}minimizeInPlaceFromFloats(t,b,Z,J){return this.r=Math.min(t,this.r),this.g=Math.min(b,this.g),this.b=Math.min(Z,this.b),this.a=Math.min(J,this.a),this}maximizeInPlaceFromFloats(t,b,Z,J){return this.r=Math.max(t,this.r),this.g=Math.max(b,this.g),this.b=Math.max(Z,this.b),this.a=Math.max(J,this.a),this}floorToRef(t){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(t){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(t){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:P.e;return(0,v.WithinEpsilon)(this.r,t.r,b)&&(0,v.WithinEpsilon)(this.g,t.g,b)&&(0,v.WithinEpsilon)(this.b,t.b,b)&&(0,v.WithinEpsilon)(this.a,t.a,b)}equalsToFloats(t,b,Z,J){return this.r===t&&this.g===b&&this.b===Z&&this.a===J}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"Fb"}getHashCode(){let t=255*this.r|0;return t=397*t^255*this.g,t=397*t^255*this.b,t=397*t^255*this.a,t}clone(){return(new r).S(this)}S(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}Ab(t,b,Z,J){return this.r=t,this.g=b,this.b=Z,this.a=J,this}set(t,b,Z,J){return this.Ab(t,b,Z,J)}Lb(t){return this.r=this.g=this.b=this.a=t,this}toHexString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=Math.round(255*this.r),Z=Math.round(255*this.g),J=Math.round(255*this.b);if(t)return"#"+(0,v.ToHex)(b)+(0,v.ToHex)(Z)+(0,v.ToHex)(J);const S=Math.round(255*this.a);return"#"+(0,v.ToHex)(b)+(0,v.ToHex)(Z)+(0,v.ToHex)(J)+(0,v.ToHex)(S)}fromHexString(t){return"#"!==t.substring(0,1)||9!==t.length&&7!==t.length||(this.r=parseInt(t.substring(1,3),16)/255,this.g=parseInt(t.substring(3,5),16)/255,this.b=parseInt(t.substring(5,7),16)/255,9===t.length&&(this.a=parseInt(t.substring(7,9),16)/255)),this}toLinearSpace(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=new r;return this.toLinearSpaceToRef(b,t),b}toLinearSpaceToRef(t){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(t.r=C(this.r),t.g=C(this.g),t.b=C(this.b)):(t.r=h(this.r),t.g=h(this.g),t.b=h(this.b)),t.a=this.a,this}toGammaSpace(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=new r;return this.toGammaSpaceToRef(b,t),b}toGammaSpaceToRef(t){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(t.r=g(this.r),t.g=g(this.g),t.b=g(this.b)):(t.r=Y(this.r),t.g=Y(this.g),t.b=Y(this.b)),t.a=this.a,this}static FromHexString(t){return"#"!==t.substring(0,1)||9!==t.length&&7!==t.length?new r(0,0,0,0):new r(0,0,0,1).fromHexString(t)}static Lerp(t,b,Z){return r.LerpToRef(t,b,Z,new r)}static LerpToRef(t,b,Z,J){return J.r=t.r+(b.r-t.r)*Z,J.g=t.g+(b.g-t.g)*Z,J.b=t.b+(b.b-t.b)*Z,J.a=t.a+(b.a-t.a)*Z,J}static Hermite(t,b,Z,J,S){const P=S*S,v=S*P,h=2*v-3*P+1,C=-2*v+3*P,Y=v-2*P+S,g=v-P,I=t.r*h+Z.r*C+b.r*Y+J.r*g,M=t.g*h+Z.g*C+b.g*Y+J.g*g,T=t.b*h+Z.b*C+b.b*Y+J.b*g,a=t.a*h+Z.a*C+b.a*Y+J.a*g;return new r(I,M,T,a)}static Hermite1stDerivative(t,b,Z,J,S){const P=new r;return this.Hermite1stDerivativeToRef(t,b,Z,J,S,P),P}static Hermite1stDerivativeToRef(t,b,Z,J,S,P){const v=S*S;P.r=6*(v-S)*t.r+(3*v-4*S+1)*b.r+6*(-v+S)*Z.r+(3*v-2*S)*J.r,P.g=6*(v-S)*t.g+(3*v-4*S+1)*b.g+6*(-v+S)*Z.g+(3*v-2*S)*J.g,P.b=6*(v-S)*t.b+(3*v-4*S+1)*b.b+6*(-v+S)*Z.b+(3*v-2*S)*J.b,P.a=6*(v-S)*t.a+(3*v-4*S+1)*b.a+6*(-v+S)*Z.a+(3*v-2*S)*J.a}static FromColor3(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new r(t.r,t.g,t.b,b)}static CZ(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new r(t[b],t[b+1],t[b+2],t[b+3])}static FromArrayToRef(t){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Z=arguments.length>2?arguments[2]:void 0;Z.r=t[b],Z.g=t[b+1],Z.b=t[b+2],Z.a=t[b+3]}static FromInts(t,b,Z,J){return new r(t/255,b/255,Z/255,J/255)}static CheckColors4(t,b){if(t.length===3*b){const b=[];for(let Z=0;Z<t.length;Z+=3){const J=Z/3*4;b[J]=t[Z],b[J+1]=t[Z+1],b[J+2]=t[Z+2],b[J+3]=1}return b}return t}}r._V8PerformanceHack=new r(.5,.5,.5,.5),Object.defineProperties(r.prototype,{dimension:{value:[4]},rank:{value:1}});class M{}M.hZ=(0,J.c)(3,I.Black),M.Fb=(0,J.c)(3,(()=>new r(0,0,0,0))),(0,S.f)("BABYLON.Color3",I),(0,S.f)("BABYLON.Color4",r)}}]);