"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[17],{12463:(e,d,v)=>{v.r(d),v.d(d,{Kd:()=>k,Up:()=>g,TmpColors:()=>F});var P=v(12433),p=v(12381),L=v(12429),B=v(12440);function X(e){return Math.pow(e,L.p)}function z(e){return e<=.04045?.0773993808*e:Math.pow(.947867299*(e+.055),2.4)}function W(e){return Math.pow(e,L.l)}function V(e){return e<=.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class k{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.r=e,this.g=d,this.b=v}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+"}"}getClassName(){return"Kd"}getHashCode(){let e=255*this.r|0;return e=397*e^255*this.g,e=397*e^255*this.b,e}toArray(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[d]=this.r,e[d+1]=this.g,e[d+2]=this.b,this}Yv(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return k.FromArrayToRef(e,d,this),this}toColor4(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new g(this.r,this.g,this.b,e)}Yd(){return[this.r,this.g,this.b]}toLuminance(){return.3*this.r+.59*this.g+.11*this.b}multiply(e){return new k(this.r*e.r,this.g*e.g,this.b*e.b)}multiplyToRef(e,d){return d.r=this.r*e.r,d.g=this.g*e.g,d.b=this.b*e.b,d}multiplyInPlace(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyByFloats(e,d,v){return new k(this.r*e,this.g*d,this.b*v)}divide(e){throw new ReferenceError("Can not divide a color")}divideToRef(e,d){throw new ReferenceError("Can not divide a color")}divideInPlace(e){throw new ReferenceError("Can not divide a color")}minimizeInPlace(e){return this.minimizeInPlaceFromFloats(e.r,e.g,e.b)}maximizeInPlace(e){return this.maximizeInPlaceFromFloats(e.r,e.g,e.b)}minimizeInPlaceFromFloats(e,d,v){return this.r=Math.min(e,this.r),this.g=Math.min(d,this.g),this.b=Math.min(v,this.b),this}maximizeInPlaceFromFloats(e,d,v){return this.r=Math.max(e,this.r),this.g=Math.max(d,this.g),this.b=Math.max(v,this.b),this}floorToRef(e){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(e){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b}equalsFloats(e,d,v){return this.equalsToFloats(e,d,v)}equalsToFloats(e,d,v){return this.r===e&&this.g===d&&this.b===v}equalsWithEpsilon(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L.e;return(0,B.WithinEpsilon)(this.r,e.r,d)&&(0,B.WithinEpsilon)(this.g,e.g,d)&&(0,B.WithinEpsilon)(this.b,e.b,d)}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(e){throw new ReferenceError("Can not negate a color")}scale(e){return new k(this.r*e,this.g*e,this.b*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this}scaleToRef(e,d){return d.r=this.r*e,d.g=this.g*e,d.b=this.b*e,d}scaleAndAddToRef(e,d){return d.r+=this.r*e,d.g+=this.g*e,d.b+=this.b*e,d}clampToRef(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,v=arguments.length>2?arguments[2]:void 0;return v.r=(0,B.Clamp)(this.r,e,d),v.g=(0,B.Clamp)(this.g,e,d),v.b=(0,B.Clamp)(this.b,e,d),v}add(e){return new k(this.r+e.r,this.g+e.g,this.b+e.b)}addInPlace(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addInPlaceFromFloats(e,d,v){return this.r+=e,this.g+=d,this.b+=v,this}addToRef(e,d){return d.r=this.r+e.r,d.g=this.g+e.g,d.b=this.b+e.b,d}Zd(e){return new k(this.r-e.r,this.g-e.g,this.b-e.b)}subtractToRef(e,d){return d.r=this.r-e.r,d.g=this.g-e.g,d.b=this.b-e.b,d}JV(e){return this.r-=e.r,this.g-=e.g,this.b-=e.b,this}subtractFromFloats(e,d,v){return new k(this.r-e,this.g-d,this.b-v)}subtractFromFloatsToRef(e,d,v,P){return P.r=this.r-e,P.g=this.g-d,P.b=this.b-v,P}clone(){return new k(this.r,this.g,this.b)}L(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}Ed(e,d,v){return this.r=e,this.g=d,this.b=v,this}set(e,d,v){return this.Ed(e,d,v)}dp(e){return this.r=this.g=this.b=e,this}toHexString(){const e=Math.round(255*this.r),d=Math.round(255*this.g),v=Math.round(255*this.b);return"#"+(0,B.ToHex)(e)+(0,B.ToHex)(d)+(0,B.ToHex)(v)}fromHexString(e){return"#"!==e.substring(0,1)||7!==e.length||(this.r=parseInt(e.substring(1,3),16)/255,this.g=parseInt(e.substring(3,5),16)/255,this.b=parseInt(e.substring(5,7),16)/255),this}toHSV(){return this.toHSVToRef(new k)}toHSVToRef(e){const d=this.r,v=this.g,P=this.b,p=Math.max(d,v,P),L=Math.min(d,v,P);let B=0,X=0;const z=p,W=p-L;return 0!==p&&(X=W/p),p!=L&&(p==d?(B=(v-P)/W,v<P&&(B+=6)):p==v?B=(P-d)/W+2:p==P&&(B=(d-v)/W+4),B*=60),e.r=B,e.g=X,e.b=z,e}toLinearSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const d=new k;return this.toLinearSpaceToRef(d,e),d}toLinearSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=z(this.r),e.g=z(this.g),e.b=z(this.b)):(e.r=X(this.r),e.g=X(this.g),e.b=X(this.b)),this}toGammaSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const d=new k;return this.toGammaSpaceToRef(d,e),d}toGammaSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=V(this.r),e.g=V(this.g),e.b=V(this.b)):(e.r=W(this.r),e.g=W(this.g),e.b=W(this.b)),this}static HSVtoRGBToRef(e,d,v,P){const p=v*d,L=e/60,B=p*(1-Math.abs(L%2-1));let X=0,z=0,W=0;L>=0&&L<=1?(X=p,z=B):L>=1&&L<=2?(X=B,z=p):L>=2&&L<=3?(z=p,W=B):L>=3&&L<=4?(z=B,W=p):L>=4&&L<=5?(X=B,W=p):L>=5&&L<=6&&(X=p,W=B);const V=v-p;return P.r=X+V,P.g=z+V,P.b=W+V,P}static FromHSV(e,d,v){const P=new k(0,0,0);return k.HSVtoRGBToRef(e,d,v,P),P}static FromHexString(e){return new k(0,0,0).fromHexString(e)}static Nd(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new k(e[d],e[d+1],e[d+2])}static FromArrayToRef(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,v=arguments.length>2?arguments[2]:void 0;v.r=e[d],v.g=e[d+1],v.b=e[d+2]}static FromInts(e,d,v){return new k(e/255,d/255,v/255)}static Lerp(e,d,v){const P=new k(0,0,0);return k.LerpToRef(e,d,v,P),P}static LerpToRef(e,d,v,P){P.r=e.r+(d.r-e.r)*v,P.g=e.g+(d.g-e.g)*v,P.b=e.b+(d.b-e.b)*v}static Hermite(e,d,v,P,p){const L=p*p,B=p*L,X=2*B-3*L+1,z=-2*B+3*L,W=B-2*L+p,V=B-L,g=e.r*X+v.r*z+d.r*W+P.r*V,F=e.g*X+v.g*z+d.g*W+P.g*V,w=e.b*X+v.b*z+d.b*W+P.b*V;return new k(g,F,w)}static Hermite1stDerivative(e,d,v,P,p){const L=k.Black();return this.Hermite1stDerivativeToRef(e,d,v,P,p,L),L}static Hermite1stDerivativeToRef(e,d,v,P,p,L){const B=p*p;L.r=6*(B-p)*e.r+(3*B-4*p+1)*d.r+6*(-B+p)*v.r+(3*B-2*p)*P.r,L.g=6*(B-p)*e.g+(3*B-4*p+1)*d.g+6*(-B+p)*v.g+(3*B-2*p)*P.g,L.b=6*(B-p)*e.b+(3*B-4*p+1)*d.b+6*(-B+p)*v.b+(3*B-2*p)*P.b}static Red(){return new k(1,0,0)}static Green(){return new k(0,1,0)}static Blue(){return new k(0,0,1)}static Black(){return new k(0,0,0)}static get BlackReadOnly(){return k._BlackReadOnly}static White(){return new k(1,1,1)}static Purple(){return new k(.5,0,.5)}static Magenta(){return new k(1,0,1)}static Yellow(){return new k(1,1,0)}static Gray(){return new k(.5,.5,.5)}static Teal(){return new k(0,1,1)}static Random(){return new k(Math.random(),Math.random(),Math.random())}}k._V8PerformanceHack=new k(.5,.5,.5),k._BlackReadOnly=k.Black(),Object.defineProperties(k.prototype,{dimension:{value:[3]},rank:{value:1}});class g{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.r=e,this.g=d,this.b=v,this.a=P}Yd(){return[this.r,this.g,this.b,this.a]}toArray(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[d]=this.r,e[d+1]=this.g,e[d+2]=this.b,e[d+3]=this.a,this}Yv(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[d],this.g=e[d+1],this.b=e[d+2],this.a=e[d+3],this}equals(e){return e&&this.r===e.r&&this.g===e.g&&this.b===e.b&&this.a===e.a}add(e){return new g(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)}addToRef(e,d){return d.r=this.r+e.r,d.g=this.g+e.g,d.b=this.b+e.b,d.a=this.a+e.a,d}addInPlace(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this.a+=e.a,this}addInPlaceFromFloats(e,d,v,P){return this.r+=e,this.g+=d,this.b+=v,this.a+=P,this}Zd(e){return new g(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)}subtractToRef(e,d){return d.r=this.r-e.r,d.g=this.g-e.g,d.b=this.b-e.b,d.a=this.a-e.a,d}JV(e){return this.r-=e.r,this.g-=e.g,this.b-=e.b,this.a-=e.a,this}subtractFromFloats(e,d,v,P){return new g(this.r-e,this.g-d,this.b-v,this.a-P)}subtractFromFloatsToRef(e,d,v,P,p){return p.r=this.r-e,p.g=this.g-d,p.b=this.b-v,p.a=this.a-P,p}scale(e){return new g(this.r*e,this.g*e,this.b*e,this.a*e)}scaleInPlace(e){return this.r*=e,this.g*=e,this.b*=e,this.a*=e,this}scaleToRef(e,d){return d.r=this.r*e,d.g=this.g*e,d.b=this.b*e,d.a=this.a*e,d}scaleAndAddToRef(e,d){return d.r+=this.r*e,d.g+=this.g*e,d.b+=this.b*e,d.a+=this.a*e,d}clampToRef(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,v=arguments.length>2?arguments[2]:void 0;return v.r=(0,B.Clamp)(this.r,e,d),v.g=(0,B.Clamp)(this.g,e,d),v.b=(0,B.Clamp)(this.b,e,d),v.a=(0,B.Clamp)(this.a,e,d),v}multiply(e){return new g(this.r*e.r,this.g*e.g,this.b*e.b,this.a*e.a)}multiplyToRef(e,d){return d.r=this.r*e.r,d.g=this.g*e.g,d.b=this.b*e.b,d.a=this.a*e.a,d}multiplyInPlace(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this.a*=e.a,this}multiplyByFloats(e,d,v,P){return new g(this.r*e,this.g*d,this.b*v,this.a*P)}divide(e){throw new ReferenceError("Can not divide a color")}divideToRef(e,d){throw new ReferenceError("Can not divide a color")}divideInPlace(e){throw new ReferenceError("Can not divide a color")}minimizeInPlace(e){return this.r=Math.min(this.r,e.r),this.g=Math.min(this.g,e.g),this.b=Math.min(this.b,e.b),this.a=Math.min(this.a,e.a),this}maximizeInPlace(e){return this.r=Math.max(this.r,e.r),this.g=Math.max(this.g,e.g),this.b=Math.max(this.b,e.b),this.a=Math.max(this.a,e.a),this}minimizeInPlaceFromFloats(e,d,v,P){return this.r=Math.min(e,this.r),this.g=Math.min(d,this.g),this.b=Math.min(v,this.b),this.a=Math.min(P,this.a),this}maximizeInPlaceFromFloats(e,d,v,P){return this.r=Math.max(e,this.r),this.g=Math.max(d,this.g),this.b=Math.max(v,this.b),this.a=Math.max(P,this.a),this}floorToRef(e){throw new ReferenceError("Can not floor a color")}floor(){throw new ReferenceError("Can not floor a color")}fractToRef(e){throw new ReferenceError("Can not fract a color")}fract(){throw new ReferenceError("Can not fract a color")}negate(){throw new ReferenceError("Can not negate a color")}negateInPlace(){throw new ReferenceError("Can not negate a color")}negateToRef(e){throw new ReferenceError("Can not negate a color")}equalsWithEpsilon(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L.e;return(0,B.WithinEpsilon)(this.r,e.r,d)&&(0,B.WithinEpsilon)(this.g,e.g,d)&&(0,B.WithinEpsilon)(this.b,e.b,d)&&(0,B.WithinEpsilon)(this.a,e.a,d)}equalsToFloats(e,d,v,P){return this.r===e&&this.g===d&&this.b===v&&this.a===P}toString(){return"{R: "+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"}getClassName(){return"Up"}getHashCode(){let e=255*this.r|0;return e=397*e^255*this.g,e=397*e^255*this.b,e=397*e^255*this.a,e}clone(){return(new g).L(this)}L(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this}Ed(e,d,v,P){return this.r=e,this.g=d,this.b=v,this.a=P,this}set(e,d,v,P){return this.Ed(e,d,v,P)}dp(e){return this.r=this.g=this.b=this.a=e,this}toHexString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const d=Math.round(255*this.r),v=Math.round(255*this.g),P=Math.round(255*this.b);if(e)return"#"+(0,B.ToHex)(d)+(0,B.ToHex)(v)+(0,B.ToHex)(P);const p=Math.round(255*this.a);return"#"+(0,B.ToHex)(d)+(0,B.ToHex)(v)+(0,B.ToHex)(P)+(0,B.ToHex)(p)}fromHexString(e){return"#"!==e.substring(0,1)||9!==e.length&&7!==e.length||(this.r=parseInt(e.substring(1,3),16)/255,this.g=parseInt(e.substring(3,5),16)/255,this.b=parseInt(e.substring(5,7),16)/255,9===e.length&&(this.a=parseInt(e.substring(7,9),16)/255)),this}toLinearSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const d=new g;return this.toLinearSpaceToRef(d,e),d}toLinearSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=z(this.r),e.g=z(this.g),e.b=z(this.b)):(e.r=X(this.r),e.g=X(this.g),e.b=X(this.b)),e.a=this.a,this}toGammaSpace(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const d=new g;return this.toGammaSpaceToRef(d,e),d}toGammaSpaceToRef(e){return arguments.length>1&&void 0!==arguments[1]&&arguments[1]?(e.r=V(this.r),e.g=V(this.g),e.b=V(this.b)):(e.r=W(this.r),e.g=W(this.g),e.b=W(this.b)),e.a=this.a,this}static FromHexString(e){return"#"!==e.substring(0,1)||9!==e.length&&7!==e.length?new g(0,0,0,0):new g(0,0,0,1).fromHexString(e)}static Lerp(e,d,v){return g.LerpToRef(e,d,v,new g)}static LerpToRef(e,d,v,P){return P.r=e.r+(d.r-e.r)*v,P.g=e.g+(d.g-e.g)*v,P.b=e.b+(d.b-e.b)*v,P.a=e.a+(d.a-e.a)*v,P}static Hermite(e,d,v,P,p){const L=p*p,B=p*L,X=2*B-3*L+1,z=-2*B+3*L,W=B-2*L+p,V=B-L,k=e.r*X+v.r*z+d.r*W+P.r*V,F=e.g*X+v.g*z+d.g*W+P.g*V,w=e.b*X+v.b*z+d.b*W+P.b*V,G=e.a*X+v.a*z+d.a*W+P.a*V;return new g(k,F,w,G)}static Hermite1stDerivative(e,d,v,P,p){const L=new g;return this.Hermite1stDerivativeToRef(e,d,v,P,p,L),L}static Hermite1stDerivativeToRef(e,d,v,P,p,L){const B=p*p;L.r=6*(B-p)*e.r+(3*B-4*p+1)*d.r+6*(-B+p)*v.r+(3*B-2*p)*P.r,L.g=6*(B-p)*e.g+(3*B-4*p+1)*d.g+6*(-B+p)*v.g+(3*B-2*p)*P.g,L.b=6*(B-p)*e.b+(3*B-4*p+1)*d.b+6*(-B+p)*v.b+(3*B-2*p)*P.b,L.a=6*(B-p)*e.a+(3*B-4*p+1)*d.a+6*(-B+p)*v.a+(3*B-2*p)*P.a}static FromColor3(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return new g(e.r,e.g,e.b,d)}static Nd(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return new g(e[d],e[d+1],e[d+2],e[d+3])}static FromArrayToRef(e){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,v=arguments.length>2?arguments[2]:void 0;v.r=e[d],v.g=e[d+1],v.b=e[d+2],v.a=e[d+3]}static FromInts(e,d,v,P){return new g(e/255,d/255,v/255,P/255)}static CheckColors4(e,d){if(e.length===3*d){const d=[];for(let v=0;v<e.length;v+=3){const P=v/3*4;d[P]=e[v],d[P+1]=e[v+1],d[P+2]=e[v+2],d[P+3]=1}return d}return e}}g._V8PerformanceHack=new g(.5,.5,.5,.5),Object.defineProperties(g.prototype,{dimension:{value:[4]},rank:{value:1}});class F{}F.Kd=(0,P.e)(3,k.Black),F.Up=(0,P.e)(3,(()=>new g(0,0,0,0))),(0,p.h)("BABYLON.Color3",k),(0,p.h)("BABYLON.Color4",g)}}]);