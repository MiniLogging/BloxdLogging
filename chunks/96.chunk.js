"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[96],{15677:(l,a,N)=>{N.r(a),N.d(a,{FlowGraphSetDelayBlock:()=>n});var U,c=N(14192),K=N(14145),Z=N(12260);!function(l){l[l.INIT=0]="INIT",l[l.STARTED=1]="STARTED",l[l.ENDED=2]="ENDED"}(U||(U={}));class w{constructor(l){this.onEachCountObservable=new Z.e,this.onTimerAbortedObservable=new Z.e,this.onTimerEndedObservable=new Z.e,this.onStateChangedObservable=new Z.e,this._observer=null,this._breakOnNextTick=!1,this._tick=l=>{const a=Date.now();this._timer=a-this._startTime;const N={startTime:this._startTime,currentTime:a,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,HN:l},U=this._breakOnNextTick||this._breakCondition(N);U||this._timer>=this._timeToEnd?this._stop(N,U):this.onEachCountObservable.notifyObservers(N)},this._setState(0),this._contextObservable=l.contextObservable,this._observableParameters=l.observableParameters??{},this._breakCondition=l.breakCondition??(()=>!1),this._timeToEnd=l.timeout,l.onEnded&&this.onTimerEndedObservable.add(l.onEnded),l.mn&&this.onEachCountObservable.add(l.mn),l.onAborted&&this.onTimerAbortedObservable.add(l.onAborted)}set breakCondition(l){this._breakCondition=l}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=l,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(l){this._state=l,this.onStateChangedObservable.notifyObservers(this._state)}_stop(l){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),a?this.onTimerAbortedObservable.notifyObservers(l):this.onTimerEndedObservable.notifyObservers(l)}}var S=N(12268),T=N(12394),J=N(14138);class n extends c.b{constructor(l){super(l),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",K.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",K.l,new J.d(-1))}_preparePendingTasks(l){const a=this.duration.getValue(l);if(a<0||isNaN(a)||!isFinite(a))return this._reportError(l,"Invalid duration in SetDelay block");if(l._getGlobalContextVariable("activeDelays",0)>=n.MaxParallelDelayCount)return this._reportError(l,"Max parallel delays reached");const N=l._getGlobalContextVariable("lastDelayIndex",-1),U=l._getExecutionVariable(this,"pendingDelays",[]),c=l.configuration.Ba,K=new w({timeout:1e3*a,contextObservable:c.onBeforeRenderObservable,onEnded:()=>this._onEnded(K,l)});K.start();const Z=N+1;this.lastDelayIndex.setValue(new J.d(Z),l),l._setGlobalContextVariable("lastDelayIndex",Z),U[Z]=K,l._setExecutionVariable(this,"pendingDelays",U),this._updateGlobalTimers(l)}_cancelPendingTasks(l){const a=l._getExecutionVariable(this,"pendingDelays",[]);for(const N of a)null===N||void 0===N||N.dispose();l._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new J.d(-1),l),this._updateGlobalTimers(l)}_execute(l,a){a!==this.cancel?(this._preparePendingTasks(l),this.out._activateSignal(l)):this._cancelPendingTasks(l)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(l,a){const N=a._getExecutionVariable(this,"pendingDelays",[]),U=N.indexOf(l);-1!==U?N.splice(U,1):S.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),a._removePendingBlock(this),this.done._activateSignal(a),this._updateGlobalTimers(a)}_updateGlobalTimers(l){const a=l._getExecutionVariable(this,"pendingDelays",[]),N=l._getGlobalContextVariable("pendingDelays",[]);for(let U=0;U<a.length;U++){if(!a[U])continue;const l=a[U];N[U]&&N[U]!==l?S.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):N[U]=l}l._setGlobalContextVariable("pendingDelays",N)}}n.MaxParallelDelayCount=100,(0,T.g)("FlowGraphSetDelayBlock",n)}}]);