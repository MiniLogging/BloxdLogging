"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14251:(h,d,m)=>{m.r(d),m.d(d,{FlowGraphSetVariableBlock:()=>w});var j=m(11080),A=m(12710),b=m(12671);class w extends A.d{constructor(h){if(super(h),!h.variable&&!h.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(h.variables&&h.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(h.variables)for(const d of h.variables)this.registerDataInput(d,b.e);else this.registerDataInput("value",b.e)}_execute(h,d){var m,j;if(null!==(m=this.config)&&void 0!==m&&m.variables)for(const A of this.config.variables)this._saveVariable(h,A);else this._saveVariable(h,null===(j=this.config)||void 0===j?void 0:j.variable,"value");this.out._activateSignal(h)}_saveVariable(h,d,m){var j;const A=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of A){const m=h.assetsContext.animationGroups.find((h=>h.uniqueId==w));if(m)for(const j of m.targetedAnimations)if(j.target===h&&j.animation.targetProperty===d){m.stop();const d=A.indexOf(w);d>-1&&A.splice(d,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",A);break}}const b=null===(j=this.getDataInput(m||d))||void 0===j?void 0:j.getValue(h);h.setVariable(d,b)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(h){var d;super.serialize(h),h.config.variable=null===(d=this.config)||void 0===d?void 0:d.variable}}(0,j.i)("FlowGraphSetVariableBlock",w)}}]);