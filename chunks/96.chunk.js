"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[96],{14801:(w,E,G)=>{G.r(E),G.d(E,{FlowGraphSetDelayBlock:()=>O});var P,h=G(13321),B=G(13281),y=G(11504);!function(w){w[w.INIT=0]="INIT",w[w.STARTED=1]="STARTED",w[w.ENDED=2]="ENDED"}(P||(P={}));class x{constructor(w){this.onEachCountObservable=new y.d,this.onTimerAbortedObservable=new y.d,this.onTimerEndedObservable=new y.d,this.onStateChangedObservable=new y.d,this._observer=null,this._breakOnNextTick=!1,this._tick=w=>{const E=Date.now();this._timer=E-this._startTime;const G={startTime:this._startTime,currentTime:E,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,aG:w},P=this._breakOnNextTick||this._breakCondition(G);P||this._timer>=this._timeToEnd?this._stop(G,P):this.onEachCountObservable.notifyObservers(G)},this._setState(0),this._contextObservable=w.contextObservable,this._observableParameters=w.observableParameters??{},this._breakCondition=w.breakCondition??(()=>!1),this._timeToEnd=w.timeout,w.onEnded&&this.onTimerEndedObservable.add(w.onEnded),w.ri&&this.onEachCountObservable.add(w.ri),w.onAborted&&this.onTimerAbortedObservable.add(w.onAborted)}set breakCondition(w){this._breakCondition=w}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let w=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=w,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(w){this._state=w,this.onStateChangedObservable.notifyObservers(this._state)}_stop(w){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),E?this.onTimerAbortedObservable.notifyObservers(w):this.onTimerEndedObservable.notifyObservers(w)}}var U=G(11518),l=G(11646),i=G(13274);class O extends h.d{constructor(w){super(w),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",B.r),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",B.h,new i.d(-1))}_preparePendingTasks(w){const E=this.duration.getValue(w);if(E<0||isNaN(E)||!isFinite(E))return this._reportError(w,"Invalid duration in SetDelay block");if(w._getGlobalContextVariable("activeDelays",0)>=O.MaxParallelDelayCount)return this._reportError(w,"Max parallel delays reached");const G=w._getGlobalContextVariable("lastDelayIndex",-1),P=w._getExecutionVariable(this,"pendingDelays",[]),h=w.configuration.ZE,B=new x({timeout:1e3*E,contextObservable:h.onBeforeRenderObservable,onEnded:()=>this._onEnded(B,w)});B.start();const y=G+1;this.lastDelayIndex.setValue(new i.d(y),w),w._setGlobalContextVariable("lastDelayIndex",y),P[y]=B,w._setExecutionVariable(this,"pendingDelays",P),this._updateGlobalTimers(w)}_cancelPendingTasks(w){const E=w._getExecutionVariable(this,"pendingDelays",[]);for(const G of E)null===G||void 0===G||G.dispose();w._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new i.d(-1),w),this._updateGlobalTimers(w)}_execute(w,E){E!==this.cancel?(this._preparePendingTasks(w),this.out._activateSignal(w)):this._cancelPendingTasks(w)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(w,E){const G=E._getExecutionVariable(this,"pendingDelays",[]),P=G.indexOf(w);-1!==P?G.splice(P,1):U.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),E._removePendingBlock(this),this.done._activateSignal(E),this._updateGlobalTimers(E)}_updateGlobalTimers(w){const E=w._getExecutionVariable(this,"pendingDelays",[]),G=w._getGlobalContextVariable("pendingDelays",[]);for(let P=0;P<E.length;P++){if(!E[P])continue;const w=E[P];G[P]&&G[P]!==w?U.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):G[P]=w}w._setGlobalContextVariable("pendingDelays",G)}}O.MaxParallelDelayCount=100,(0,l.g)("FlowGraphSetDelayBlock",O)}}]);