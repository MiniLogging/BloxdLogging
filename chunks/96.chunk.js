"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[96],{14366:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphSetDelayBlock:()=>t});var d,U=C(12872),W=C(12831),a=C(10949);!function(N){N[N.INIT=0]="INIT",N[N.STARTED=1]="STARTED",N[N.ENDED=2]="ENDED"}(d||(d={}));class F{constructor(N){this.onEachCountObservable=new a.b,this.onTimerAbortedObservable=new a.b,this.onTimerEndedObservable=new a.b,this.onStateChangedObservable=new a.b,this._observer=null,this._breakOnNextTick=!1,this._tick=N=>{const q=Date.now();this._timer=q-this._startTime;const C={startTime:this._startTime,currentTime:q,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,QC:N},d=this._breakOnNextTick||this._breakCondition(C);d||this._timer>=this._timeToEnd?this._stop(C,d):this.onEachCountObservable.notifyObservers(C)},this._setState(0),this._contextObservable=N.contextObservable,this._observableParameters=N.observableParameters??{},this._breakCondition=N.breakCondition??(()=>!1),this._timeToEnd=N.timeout,N.onEnded&&this.onTimerEndedObservable.add(N.onEnded),N.Yn&&this.onEachCountObservable.add(N.Yn),N.onAborted&&this.onTimerAbortedObservable.add(N.onAborted)}set breakCondition(N){this._breakCondition=N}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=N,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(N){this._state=N,this.onStateChangedObservable.notifyObservers(this._state)}_stop(N){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),q?this.onTimerAbortedObservable.notifyObservers(N):this.onTimerEndedObservable.notifyObservers(N)}}var w=C(10962),A=C(11076),n=C(12825);class t extends U.e{constructor(N){super(N),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",W.r),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",W.g,new n.b(-1))}_preparePendingTasks(N){const q=this.duration.getValue(N);if(q<0||isNaN(q)||!isFinite(q))return this._reportError(N,"Invalid duration in SetDelay block");if(N._getGlobalContextVariable("activeDelays",0)>=t.MaxParallelDelayCount)return this._reportError(N,"Max parallel delays reached");const C=N._getGlobalContextVariable("lastDelayIndex",-1),d=N._getExecutionVariable(this,"pendingDelays",[]),U=N.configuration.vq,W=new F({timeout:1e3*q,contextObservable:U.onBeforeRenderObservable,onEnded:()=>this._onEnded(W,N)});W.start();const a=C+1;this.lastDelayIndex.setValue(new n.b(a),N),N._setGlobalContextVariable("lastDelayIndex",a),d[a]=W,N._setExecutionVariable(this,"pendingDelays",d),this._updateGlobalTimers(N)}_cancelPendingTasks(N){const q=N._getExecutionVariable(this,"pendingDelays",[]);for(const C of q)null===C||void 0===C||C.dispose();N._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new n.b(-1),N),this._updateGlobalTimers(N)}_execute(N,q){q!==this.cancel?(this._preparePendingTasks(N),this.out._activateSignal(N)):this._cancelPendingTasks(N)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(N,q){const C=q._getExecutionVariable(this,"pendingDelays",[]),d=C.indexOf(N);-1!==d?C.splice(d,1):w.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),q._removePendingBlock(this),this.done._activateSignal(q),this._updateGlobalTimers(q)}_updateGlobalTimers(N){const q=N._getExecutionVariable(this,"pendingDelays",[]),C=N._getGlobalContextVariable("pendingDelays",[]);for(let d=0;d<q.length;d++){if(!q[d])continue;const N=q[d];C[d]&&C[d]!==N?w.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):C[d]=N}N._setGlobalContextVariable("pendingDelays",C)}}t.MaxParallelDelayCount=100,(0,A.h)("FlowGraphSetDelayBlock",t)}}]);