"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[96],{15893:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphSetDelayBlock:()=>v});var q,Q=W(14319),C=W(14274),T=W(12435);!function(r){r[r.INIT=0]="INIT",r[r.STARTED=1]="STARTED",r[r.ENDED=2]="ENDED"}(q||(q={}));class h{constructor(r){this.onEachCountObservable=new T.d,this.onTimerAbortedObservable=new T.d,this.onTimerEndedObservable=new T.d,this.onStateChangedObservable=new T.d,this._observer=null,this._breakOnNextTick=!1,this._tick=r=>{const O=Date.now();this._timer=O-this._startTime;const W={startTime:this._startTime,currentTime:O,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,YW:r},q=this._breakOnNextTick||this._breakCondition(W);q||this._timer>=this._timeToEnd?this._stop(W,q):this.onEachCountObservable.notifyObservers(W)},this._setState(0),this._contextObservable=r.contextObservable,this._observableParameters=r.observableParameters??{},this._breakCondition=r.breakCondition??(()=>!1),this._timeToEnd=r.timeout,r.onEnded&&this.onTimerEndedObservable.add(r.onEnded),r.Lv&&this.onEachCountObservable.add(r.Lv),r.onAborted&&this.onTimerAbortedObservable.add(r.onAborted)}set breakCondition(r){this._breakCondition=r}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=r,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(r){this._state=r,this.onStateChangedObservable.notifyObservers(this._state)}_stop(r){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),O?this.onTimerAbortedObservable.notifyObservers(r):this.onTimerEndedObservable.notifyObservers(r)}}var J=W(12453),mr=W(12560),d=W(14266);class v extends Q.c{constructor(r){super(r),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",C.r),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",C.e,new d.d(-1))}_preparePendingTasks(r){const O=this.duration.getValue(r);if(O<0||isNaN(O)||!isFinite(O))return this._reportError(r,"Invalid duration in SetDelay block");if(r._getGlobalContextVariable("activeDelays",0)>=v.MaxParallelDelayCount)return this._reportError(r,"Max parallel delays reached");const W=r._getGlobalContextVariable("lastDelayIndex",-1),q=r._getExecutionVariable(this,"pendingDelays",[]),Q=r.configuration.GO,C=new h({timeout:1e3*O,contextObservable:Q.onBeforeRenderObservable,onEnded:()=>this._onEnded(C,r)});C.start();const T=W+1;this.lastDelayIndex.setValue(new d.d(T),r),r._setGlobalContextVariable("lastDelayIndex",T),q[T]=C,r._setExecutionVariable(this,"pendingDelays",q),this._updateGlobalTimers(r)}_cancelPendingTasks(r){const O=r._getExecutionVariable(this,"pendingDelays",[]);for(const W of O)null===W||void 0===W||W.dispose();r._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new d.d(-1),r),this._updateGlobalTimers(r)}_execute(r,O){O!==this.cancel?(this._preparePendingTasks(r),this.out._activateSignal(r)):this._cancelPendingTasks(r)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(r,O){const W=O._getExecutionVariable(this,"pendingDelays",[]),q=W.indexOf(r);-1!==q?W.splice(q,1):J.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),O._removePendingBlock(this),this.done._activateSignal(O),this._updateGlobalTimers(O)}_updateGlobalTimers(r){const O=r._getExecutionVariable(this,"pendingDelays",[]),W=r._getGlobalContextVariable("pendingDelays",[]);for(let q=0;q<O.length;q++){if(!O[q])continue;const r=O[q];W[q]&&W[q]!==r?J.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):W[q]=r}r._setGlobalContextVariable("pendingDelays",W)}}v.MaxParallelDelayCount=100,(0,mr.e)("FlowGraphSetDelayBlock",v)}}]);