"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14398:(s,Z,o)=>{o.r(Z),o.d(Z,{FlowGraphSetVariableBlock:()=>a});var t=o(10916),j=o(12831),S=o(12775);class a extends j.b{constructor(s){if(super(s),!s.variable&&!s.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(s.variables&&s.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(s.variables)for(const Z of s.variables)this.registerDataInput(Z,S.d);else this.registerDataInput("value",S.d)}_execute(s,Z){var o,t;if(null!==(o=this.config)&&void 0!==o&&o.variables)for(const j of this.config.variables)this._saveVariable(s,j);else this._saveVariable(s,null===(t=this.config)||void 0===t?void 0:t.variable,"value");this.out._activateSignal(s)}_saveVariable(s,Z,o){var t;const j=s._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const a of j){const o=s.assetsContext.animationGroups.find((s=>s.uniqueId==a));if(o)for(const t of o.targetedAnimations)if(t.target===s&&t.animation.targetProperty===Z){o.stop();const Z=j.indexOf(a);Z>-1&&j.splice(Z,1),s._setGlobalContextVariable("currentlyRunningAnimationGroups",j);break}}const S=null===(t=this.getDataInput(o||Z))||void 0===t?void 0:t.getValue(s);s.setVariable(Z,S)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(s){var Z;super.serialize(s),s.config.variable=null===(Z=this.config)||void 0===Z?void 0:Z.variable}}(0,t.f)("FlowGraphSetVariableBlock",a)}}]);