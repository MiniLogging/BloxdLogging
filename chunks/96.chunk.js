"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[96],{15632:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphSetDelayBlock:()=>O});var x,c=P(14115),w=P(14073),v=P(12184);!function(M){M[M.INIT=0]="INIT",M[M.STARTED=1]="STARTED",M[M.ENDED=2]="ENDED"}(x||(x={}));class G{constructor(M){this.onEachCountObservable=new v.b,this.onTimerAbortedObservable=new v.b,this.onTimerEndedObservable=new v.b,this.onStateChangedObservable=new v.b,this._observer=null,this._breakOnNextTick=!1,this._tick=M=>{const Z=Date.now();this._timer=Z-this._startTime;const P={startTime:this._startTime,currentTime:Z,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,BP:M},x=this._breakOnNextTick||this._breakCondition(P);x||this._timer>=this._timeToEnd?this._stop(P,x):this.onEachCountObservable.notifyObservers(P)},this._setState(0),this._contextObservable=M.contextObservable,this._observableParameters=M.observableParameters??{},this._breakCondition=M.breakCondition??(()=>!1),this._timeToEnd=M.timeout,M.onEnded&&this.onTimerEndedObservable.add(M.onEnded),M.bO&&this.onEachCountObservable.add(M.bO),M.onAborted&&this.onTimerAbortedObservable.add(M.onAborted)}set breakCondition(M){this._breakCondition=M}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=M,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(M){this._state=M,this.onStateChangedObservable.notifyObservers(this._state)}_stop(M){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),Z?this.onTimerAbortedObservable.notifyObservers(M):this.onTimerEndedObservable.notifyObservers(M)}}var mM=P(12199),K=P(12317),d=P(14067);class O extends c.e{constructor(M){super(M),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",w.u),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",w.j,new d.e(-1))}_preparePendingTasks(M){const Z=this.duration.getValue(M);if(Z<0||isNaN(Z)||!isFinite(Z))return this._reportError(M,"Invalid duration in SetDelay block");if(M._getGlobalContextVariable("activeDelays",0)>=O.MaxParallelDelayCount)return this._reportError(M,"Max parallel delays reached");const P=M._getGlobalContextVariable("lastDelayIndex",-1),x=M._getExecutionVariable(this,"pendingDelays",[]),c=M.configuration.nZ,w=new G({timeout:1e3*Z,contextObservable:c.onBeforeRenderObservable,onEnded:()=>this._onEnded(w,M)});w.start();const v=P+1;this.lastDelayIndex.setValue(new d.e(v),M),M._setGlobalContextVariable("lastDelayIndex",v),x[v]=w,M._setExecutionVariable(this,"pendingDelays",x),this._updateGlobalTimers(M)}_cancelPendingTasks(M){const Z=M._getExecutionVariable(this,"pendingDelays",[]);for(const P of Z)null===P||void 0===P||P.dispose();M._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new d.e(-1),M),this._updateGlobalTimers(M)}_execute(M,Z){Z!==this.cancel?(this._preparePendingTasks(M),this.out._activateSignal(M)):this._cancelPendingTasks(M)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(M,Z){const P=Z._getExecutionVariable(this,"pendingDelays",[]),x=P.indexOf(M);-1!==x?P.splice(x,1):mM.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),Z._removePendingBlock(this),this.done._activateSignal(Z),this._updateGlobalTimers(Z)}_updateGlobalTimers(M){const Z=M._getExecutionVariable(this,"pendingDelays",[]),P=M._getGlobalContextVariable("pendingDelays",[]);for(let x=0;x<Z.length;x++){if(!Z[x])continue;const M=Z[x];P[x]&&P[x]!==M?mM.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):P[x]=M}M._setGlobalContextVariable("pendingDelays",P)}}O.MaxParallelDelayCount=100,(0,K.g)("FlowGraphSetDelayBlock",O)}}]);