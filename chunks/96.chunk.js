"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[96],{16096:(h,d,T)=>{T.r(d),T.d(d,{FlowGraphSetDelayBlock:()=>S});var Y,y=T(14574),C=T(14528),n=T(12583);!function(h){h[h.INIT=0]="INIT",h[h.STARTED=1]="STARTED",h[h.ENDED=2]="ENDED"}(Y||(Y={}));class X{constructor(h){this.onEachCountObservable=new n.e,this.onTimerAbortedObservable=new n.e,this.onTimerEndedObservable=new n.e,this.onStateChangedObservable=new n.e,this._observer=null,this._breakOnNextTick=!1,this._tick=h=>{const d=Date.now();this._timer=d-this._startTime;const T={startTime:this._startTime,currentTime:d,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,GT:h},Y=this._breakOnNextTick||this._breakCondition(T);Y||this._timer>=this._timeToEnd?this._stop(T,Y):this.onEachCountObservable.notifyObservers(T)},this._setState(0),this._contextObservable=h.contextObservable,this._observableParameters=h.observableParameters??{},this._breakCondition=h.breakCondition??(()=>!1),this._timeToEnd=h.timeout,h.onEnded&&this.onTimerEndedObservable.add(h.onEnded),h.tZ&&this.onEachCountObservable.add(h.tZ),h.onAborted&&this.onTimerAbortedObservable.add(h.onAborted)}set breakCondition(h){this._breakCondition=h}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=h,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(h){this._state=h,this.onStateChangedObservable.notifyObservers(this._state)}_stop(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),d?this.onTimerAbortedObservable.notifyObservers(h):this.onTimerEndedObservable.notifyObservers(h)}}var F=T(12596),U=T(12714),Z=T(14519);class S extends y.e{constructor(h){super(h),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",C.s),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",C.h,new Z.e(-1))}_preparePendingTasks(h){const d=this.duration.getValue(h);if(d<0||isNaN(d)||!isFinite(d))return this._reportError(h,"Invalid duration in SetDelay block");if(h._getGlobalContextVariable("activeDelays",0)>=S.MaxParallelDelayCount)return this._reportError(h,"Max parallel delays reached");const T=h._getGlobalContextVariable("lastDelayIndex",-1),Y=h._getExecutionVariable(this,"pendingDelays",[]),y=h.configuration.qd,C=new X({timeout:1e3*d,contextObservable:y.onBeforeRenderObservable,onEnded:()=>this._onEnded(C,h)});C.start();const n=T+1;this.lastDelayIndex.setValue(new Z.e(n),h),h._setGlobalContextVariable("lastDelayIndex",n),Y[n]=C,h._setExecutionVariable(this,"pendingDelays",Y),this._updateGlobalTimers(h)}_cancelPendingTasks(h){const d=h._getExecutionVariable(this,"pendingDelays",[]);for(const T of d)null===T||void 0===T||T.dispose();h._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new Z.e(-1),h),this._updateGlobalTimers(h)}_execute(h,d){d!==this.cancel?(this._preparePendingTasks(h),this.out._activateSignal(h)):this._cancelPendingTasks(h)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(h,d){const T=d._getExecutionVariable(this,"pendingDelays",[]),Y=T.indexOf(h);-1!==Y?T.splice(Y,1):F.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),d._removePendingBlock(this),this.done._activateSignal(d),this._updateGlobalTimers(d)}_updateGlobalTimers(h){const d=h._getExecutionVariable(this,"pendingDelays",[]),T=h._getGlobalContextVariable("pendingDelays",[]);for(let Y=0;Y<d.length;Y++){if(!d[Y])continue;const h=d[Y];T[Y]&&T[Y]!==h?F.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):T[Y]=h}h._setGlobalContextVariable("pendingDelays",T)}}S.MaxParallelDelayCount=100,(0,U.e)("FlowGraphSetDelayBlock",S)}}]);