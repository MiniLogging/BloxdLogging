"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[96],{14617:(n,y,H)=>{H.r(y),H.d(y,{FlowGraphSetDelayBlock:()=>b});var o,G=H(13160),h=H(13117),k=H(11099);!function(n){n[n.INIT=0]="INIT",n[n.STARTED=1]="STARTED",n[n.ENDED=2]="ENDED"}(o||(o={}));class i{constructor(n){this.onEachCountObservable=new k.c,this.onTimerAbortedObservable=new k.c,this.onTimerEndedObservable=new k.c,this.onStateChangedObservable=new k.c,this._observer=null,this._breakOnNextTick=!1,this._tick=n=>{const y=Date.now();this._timer=y-this._startTime;const H={startTime:this._startTime,currentTime:y,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,FH:n},o=this._breakOnNextTick||this._breakCondition(H);o||this._timer>=this._timeToEnd?this._stop(H,o):this.onEachCountObservable.notifyObservers(H)},this._setState(0),this._contextObservable=n.contextObservable,this._observableParameters=n.observableParameters??{},this._breakCondition=n.breakCondition??(()=>!1),this._timeToEnd=n.timeout,n.onEnded&&this.onTimerEndedObservable.add(n.onEnded),n.Kq&&this.onEachCountObservable.add(n.Kq),n.onAborted&&this.onTimerAbortedObservable.add(n.onAborted)}set breakCondition(n){this._breakCondition=n}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=n,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(n){this._state=n,this.onStateChangedObservable.notifyObservers(this._state)}_stop(n){let y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),y?this.onTimerAbortedObservable.notifyObservers(n):this.onTimerEndedObservable.notifyObservers(n)}}var B=H(11114),V=H(11248),q=H(13112);class b extends G.d{constructor(n){super(n),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",h.p),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",h.f,new q.c(-1))}_preparePendingTasks(n){const y=this.duration.getValue(n);if(y<0||isNaN(y)||!isFinite(y))return this._reportError(n,"Invalid duration in SetDelay block");if(n._getGlobalContextVariable("activeDelays",0)>=b.MaxParallelDelayCount)return this._reportError(n,"Max parallel delays reached");const H=n._getGlobalContextVariable("lastDelayIndex",-1),o=n._getExecutionVariable(this,"pendingDelays",[]),G=n.configuration.ly,h=new i({timeout:1e3*y,contextObservable:G.onBeforeRenderObservable,onEnded:()=>this._onEnded(h,n)});h.start();const k=H+1;this.lastDelayIndex.setValue(new q.c(k),n),n._setGlobalContextVariable("lastDelayIndex",k),o[k]=h,n._setExecutionVariable(this,"pendingDelays",o),this._updateGlobalTimers(n)}_cancelPendingTasks(n){const y=n._getExecutionVariable(this,"pendingDelays",[]);for(const H of y)null===H||void 0===H||H.dispose();n._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new q.c(-1),n),this._updateGlobalTimers(n)}_execute(n,y){y!==this.cancel?(this._preparePendingTasks(n),this.out._activateSignal(n)):this._cancelPendingTasks(n)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(n,y){const H=y._getExecutionVariable(this,"pendingDelays",[]),o=H.indexOf(n);-1!==o?H.splice(o,1):B.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),y._removePendingBlock(this),this.done._activateSignal(y),this._updateGlobalTimers(y)}_updateGlobalTimers(n){const y=n._getExecutionVariable(this,"pendingDelays",[]),H=n._getGlobalContextVariable("pendingDelays",[]);for(let o=0;o<y.length;o++){if(!y[o])continue;const n=y[o];H[o]&&H[o]!==n?B.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):H[o]=n}n._setGlobalContextVariable("pendingDelays",H)}}b.MaxParallelDelayCount=100,(0,V.h)("FlowGraphSetDelayBlock",b)}}]);