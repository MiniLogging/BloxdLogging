"use strict";(self.fjf2z1c8il8=self.fjf2z1c8il8||[]).push([[96],{15813:(g,i,a)=>{a.r(i),a.d(i,{FlowGraphSetDelayBlock:()=>I});var n,L=a(14265),d=a(14214),b=a(12286);!function(g){g[g.INIT=0]="INIT",g[g.STARTED=1]="STARTED",g[g.ENDED=2]="ENDED"}(n||(n={}));class k{constructor(g){this.onEachCountObservable=new b.b,this.onTimerAbortedObservable=new b.b,this.onTimerEndedObservable=new b.b,this.onStateChangedObservable=new b.b,this._observer=null,this._breakOnNextTick=!1,this._tick=g=>{const i=Date.now();this._timer=i-this._startTime;const a={startTime:this._startTime,currentTime:i,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Ba:g},n=this._breakOnNextTick||this._breakCondition(a);n||this._timer>=this._timeToEnd?this._stop(a,n):this.onEachCountObservable.notifyObservers(a)},this._setState(0),this._contextObservable=g.contextObservable,this._observableParameters=g.observableParameters??{},this._breakCondition=g.breakCondition??(()=>!1),this._timeToEnd=g.timeout,g.onEnded&&this.onTimerEndedObservable.add(g.onEnded),g.sI&&this.onEachCountObservable.add(g.sI),g.onAborted&&this.onTimerAbortedObservable.add(g.onAborted)}set breakCondition(g){this._breakCondition=g}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=g,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(g){this._state=g,this.onStateChangedObservable.notifyObservers(this._state)}_stop(g){let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),i?this.onTimerAbortedObservable.notifyObservers(g):this.onTimerEndedObservable.notifyObservers(g)}}var e=a(12292),N=a(12415),F=a(14209);class I extends L.d{constructor(g){super(g),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",d.q),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",d.f,new F.e(-1))}_preparePendingTasks(g){const i=this.duration.getValue(g);if(i<0||isNaN(i)||!isFinite(i))return this._reportError(g,"Invalid duration in SetDelay block");if(g._getGlobalContextVariable("activeDelays",0)>=I.MaxParallelDelayCount)return this._reportError(g,"Max parallel delays reached");const a=g._getGlobalContextVariable("lastDelayIndex",-1),n=g._getExecutionVariable(this,"pendingDelays",[]),L=g.configuration.Di,d=new k({timeout:1e3*i,contextObservable:L.onBeforeRenderObservable,onEnded:()=>this._onEnded(d,g)});d.start();const b=a+1;this.lastDelayIndex.setValue(new F.e(b),g),g._setGlobalContextVariable("lastDelayIndex",b),n[b]=d,g._setExecutionVariable(this,"pendingDelays",n),this._updateGlobalTimers(g)}_cancelPendingTasks(g){const i=g._getExecutionVariable(this,"pendingDelays",[]);for(const a of i)null===a||void 0===a||a.dispose();g._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new F.e(-1),g),this._updateGlobalTimers(g)}_execute(g,i){i!==this.cancel?(this._preparePendingTasks(g),this.out._activateSignal(g)):this._cancelPendingTasks(g)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(g,i){const a=i._getExecutionVariable(this,"pendingDelays",[]),n=a.indexOf(g);-1!==n?a.splice(n,1):e.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),i._removePendingBlock(this),this.done._activateSignal(i),this._updateGlobalTimers(i)}_updateGlobalTimers(g){const i=g._getExecutionVariable(this,"pendingDelays",[]),a=g._getGlobalContextVariable("pendingDelays",[]);for(let n=0;n<i.length;n++){if(!i[n])continue;const g=i[n];a[n]&&a[n]!==g?e.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):a[n]=g}g._setGlobalContextVariable("pendingDelays",a)}}I.MaxParallelDelayCount=100,(0,N.e)("FlowGraphSetDelayBlock",I)}}]);