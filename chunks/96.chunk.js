"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[96],{15933:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphSetDelayBlock:()=>K});var H,g=o(14410),j=o(14362),M=o(12648);!function(D){D[D.INIT=0]="INIT",D[D.STARTED=1]="STARTED",D[D.ENDED=2]="ENDED"}(H||(H={}));class R{constructor(D){this.onEachCountObservable=new M.c,this.onTimerAbortedObservable=new M.c,this.onTimerEndedObservable=new M.c,this.onStateChangedObservable=new M.c,this._observer=null,this._breakOnNextTick=!1,this._tick=D=>{const h=Date.now();this._timer=h-this._startTime;const o={startTime:this._startTime,currentTime:h,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Co:D},H=this._breakOnNextTick||this._breakCondition(o);H||this._timer>=this._timeToEnd?this._stop(o,H):this.onEachCountObservable.notifyObservers(o)},this._setState(0),this._contextObservable=D.contextObservable,this._observableParameters=D.observableParameters??{},this._breakCondition=D.breakCondition??(()=>!1),this._timeToEnd=D.timeout,D.onEnded&&this.onTimerEndedObservable.add(D.onEnded),D.eK&&this.onEachCountObservable.add(D.eK),D.onAborted&&this.onTimerAbortedObservable.add(D.onAborted)}set breakCondition(D){this._breakCondition=D}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=D,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(D){this._state=D,this.onStateChangedObservable.notifyObservers(this._state)}_stop(D){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),h?this.onTimerAbortedObservable.notifyObservers(D):this.onTimerEndedObservable.notifyObservers(D)}}var t=o(12658),S=o(12793),k=o(14360);class K extends g.c{constructor(D){super(D),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",j.q),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",j.h,new k.b(-1))}_preparePendingTasks(D){const h=this.duration.getValue(D);if(h<0||isNaN(h)||!isFinite(h))return this._reportError(D,"Invalid duration in SetDelay block");if(D._getGlobalContextVariable("activeDelays",0)>=K.MaxParallelDelayCount)return this._reportError(D,"Max parallel delays reached");const o=D._getGlobalContextVariable("lastDelayIndex",-1),H=D._getExecutionVariable(this,"pendingDelays",[]),g=D.configuration.Th,j=new R({timeout:1e3*h,contextObservable:g.onBeforeRenderObservable,onEnded:()=>this._onEnded(j,D)});j.start();const M=o+1;this.lastDelayIndex.setValue(new k.b(M),D),D._setGlobalContextVariable("lastDelayIndex",M),H[M]=j,D._setExecutionVariable(this,"pendingDelays",H),this._updateGlobalTimers(D)}_cancelPendingTasks(D){const h=D._getExecutionVariable(this,"pendingDelays",[]);for(const o of h)null===o||void 0===o||o.dispose();D._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new k.b(-1),D),this._updateGlobalTimers(D)}_execute(D,h){h!==this.cancel?(this._preparePendingTasks(D),this.out._activateSignal(D)):this._cancelPendingTasks(D)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(D,h){const o=h._getExecutionVariable(this,"pendingDelays",[]),H=o.indexOf(D);-1!==H?o.splice(H,1):t.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),h._removePendingBlock(this),this.done._activateSignal(h),this._updateGlobalTimers(h)}_updateGlobalTimers(D){const h=D._getExecutionVariable(this,"pendingDelays",[]),o=D._getGlobalContextVariable("pendingDelays",[]);for(let H=0;H<h.length;H++){if(!h[H])continue;const D=h[H];o[H]&&o[H]!==D?t.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):o[H]=D}D._setGlobalContextVariable("pendingDelays",o)}}K.MaxParallelDelayCount=100,(0,S.g)("FlowGraphSetDelayBlock",K)}}]);