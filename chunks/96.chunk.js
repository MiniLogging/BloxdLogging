"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[96],{14996:(K,O,F)=>{F.r(O),F.d(O,{FlowGraphSetDelayBlock:()=>t});var f,r=F(13487),l=F(13441),q=F(11523);!function(K){K[K.INIT=0]="INIT",K[K.STARTED=1]="STARTED",K[K.ENDED=2]="ENDED"}(f||(f={}));class J{constructor(K){this.onEachCountObservable=new q.c,this.onTimerAbortedObservable=new q.c,this.onTimerEndedObservable=new q.c,this.onStateChangedObservable=new q.c,this._observer=null,this._breakOnNextTick=!1,this._tick=K=>{const O=Date.now();this._timer=O-this._startTime;const F={startTime:this._startTime,currentTime:O,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,TF:K},f=this._breakOnNextTick||this._breakCondition(F);f||this._timer>=this._timeToEnd?this._stop(F,f):this.onEachCountObservable.notifyObservers(F)},this._setState(0),this._contextObservable=K.contextObservable,this._observableParameters=K.observableParameters??{},this._breakCondition=K.breakCondition??(()=>!1),this._timeToEnd=K.timeout,K.onEnded&&this.onTimerEndedObservable.add(K.onEnded),K.Tt&&this.onEachCountObservable.add(K.Tt),K.onAborted&&this.onTimerAbortedObservable.add(K.onAborted)}set breakCondition(K){this._breakCondition=K}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=K,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(K){this._state=K,this.onStateChangedObservable.notifyObservers(this._state)}_stop(K){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),O?this.onTimerAbortedObservable.notifyObservers(K):this.onTimerEndedObservable.notifyObservers(K)}}var c=F(11534),E=F(11661),M=F(13435);class t extends r.e{constructor(K){super(K),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",l.s),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",l.i,new M.d(-1))}_preparePendingTasks(K){const O=this.duration.getValue(K);if(O<0||isNaN(O)||!isFinite(O))return this._reportError(K,"Invalid duration in SetDelay block");if(K._getGlobalContextVariable("activeDelays",0)>=t.MaxParallelDelayCount)return this._reportError(K,"Max parallel delays reached");const F=K._getGlobalContextVariable("lastDelayIndex",-1),f=K._getExecutionVariable(this,"pendingDelays",[]),r=K.configuration.kO,l=new J({timeout:1e3*O,contextObservable:r.onBeforeRenderObservable,onEnded:()=>this._onEnded(l,K)});l.start();const q=F+1;this.lastDelayIndex.setValue(new M.d(q),K),K._setGlobalContextVariable("lastDelayIndex",q),f[q]=l,K._setExecutionVariable(this,"pendingDelays",f),this._updateGlobalTimers(K)}_cancelPendingTasks(K){const O=K._getExecutionVariable(this,"pendingDelays",[]);for(const F of O)null===F||void 0===F||F.dispose();K._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new M.d(-1),K),this._updateGlobalTimers(K)}_execute(K,O){O!==this.cancel?(this._preparePendingTasks(K),this.out._activateSignal(K)):this._cancelPendingTasks(K)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(K,O){const F=O._getExecutionVariable(this,"pendingDelays",[]),f=F.indexOf(K);-1!==f?F.splice(f,1):c.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),O._removePendingBlock(this),this.done._activateSignal(O),this._updateGlobalTimers(O)}_updateGlobalTimers(K){const O=K._getExecutionVariable(this,"pendingDelays",[]),F=K._getGlobalContextVariable("pendingDelays",[]);for(let f=0;f<O.length;f++){if(!O[f])continue;const K=O[f];F[f]&&F[f]!==K?c.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):F[f]=K}K._setGlobalContextVariable("pendingDelays",F)}}t.MaxParallelDelayCount=100,(0,E.g)("FlowGraphSetDelayBlock",t)}}]);