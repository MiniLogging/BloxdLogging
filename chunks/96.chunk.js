"use strict";(self.hmihoa2fs98=self.hmihoa2fs98||[]).push([[96],{14912:(b,d,P)=>{P.r(d),P.d(d,{FlowGraphSetDelayBlock:()=>Y});var G,W=P(13401),i=P(13365),q=P(11487);!function(b){b[b.INIT=0]="INIT",b[b.STARTED=1]="STARTED",b[b.ENDED=2]="ENDED"}(G||(G={}));class C{constructor(b){this.onEachCountObservable=new q.d,this.onTimerAbortedObservable=new q.d,this.onTimerEndedObservable=new q.d,this.onStateChangedObservable=new q.d,this._observer=null,this._breakOnNextTick=!1,this._tick=b=>{const d=Date.now();this._timer=d-this._startTime;const P={startTime:this._startTime,currentTime:d,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,zP:b},G=this._breakOnNextTick||this._breakCondition(P);G||this._timer>=this._timeToEnd?this._stop(P,G):this.onEachCountObservable.notifyObservers(P)},this._setState(0),this._contextObservable=b.contextObservable,this._observableParameters=b.observableParameters??{},this._breakCondition=b.breakCondition??(()=>!1),this._timeToEnd=b.timeout,b.onEnded&&this.onTimerEndedObservable.add(b.onEnded),b.Dx&&this.onEachCountObservable.add(b.Dx),b.onAborted&&this.onTimerAbortedObservable.add(b.onAborted)}set breakCondition(b){this._breakCondition=b}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=b,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(b){this._state=b,this.onStateChangedObservable.notifyObservers(this._state)}_stop(b){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),d?this.onTimerAbortedObservable.notifyObservers(b):this.onTimerEndedObservable.notifyObservers(b)}}var J=P(11504),L=P(11639),x=P(13360);class Y extends W.d{constructor(b){super(b),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",i.p),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",i.d,new x.b(-1))}_preparePendingTasks(b){const d=this.duration.getValue(b);if(d<0||isNaN(d)||!isFinite(d))return this._reportError(b,"Invalid duration in SetDelay block");if(b._getGlobalContextVariable("activeDelays",0)>=Y.MaxParallelDelayCount)return this._reportError(b,"Max parallel delays reached");const P=b._getGlobalContextVariable("lastDelayIndex",-1),G=b._getExecutionVariable(this,"pendingDelays",[]),W=b.configuration.Hd,i=new C({timeout:1e3*d,contextObservable:W.onBeforeRenderObservable,onEnded:()=>this._onEnded(i,b)});i.start();const q=P+1;this.lastDelayIndex.setValue(new x.b(q),b),b._setGlobalContextVariable("lastDelayIndex",q),G[q]=i,b._setExecutionVariable(this,"pendingDelays",G),this._updateGlobalTimers(b)}_cancelPendingTasks(b){const d=b._getExecutionVariable(this,"pendingDelays",[]);for(const P of d)null===P||void 0===P||P.dispose();b._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new x.b(-1),b),this._updateGlobalTimers(b)}_execute(b,d){d!==this.cancel?(this._preparePendingTasks(b),this.out._activateSignal(b)):this._cancelPendingTasks(b)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(b,d){const P=d._getExecutionVariable(this,"pendingDelays",[]),G=P.indexOf(b);-1!==G?P.splice(G,1):J.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),d._removePendingBlock(this),this.done._activateSignal(d),this._updateGlobalTimers(d)}_updateGlobalTimers(b){const d=b._getExecutionVariable(this,"pendingDelays",[]),P=b._getGlobalContextVariable("pendingDelays",[]);for(let G=0;G<d.length;G++){if(!d[G])continue;const b=d[G];P[G]&&P[G]!==b?J.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):P[G]=b}b._setGlobalContextVariable("pendingDelays",P)}}Y.MaxParallelDelayCount=100,(0,L.f)("FlowGraphSetDelayBlock",Y)}}]);