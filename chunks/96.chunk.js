"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[96],{15236:(b,X,P)=>{P.r(X),P.d(X,{FlowGraphSetDelayBlock:()=>O});var Q,S=P(13670),d=P(13631),N=P(11694);!function(b){b[b.INIT=0]="INIT",b[b.STARTED=1]="STARTED",b[b.ENDED=2]="ENDED"}(Q||(Q={}));class a{constructor(b){this.onEachCountObservable=new N.d,this.onTimerAbortedObservable=new N.d,this.onTimerEndedObservable=new N.d,this.onStateChangedObservable=new N.d,this._observer=null,this._breakOnNextTick=!1,this._tick=b=>{const X=Date.now();this._timer=X-this._startTime;const P={startTime:this._startTime,currentTime:X,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,BP:b},Q=this._breakOnNextTick||this._breakCondition(P);Q||this._timer>=this._timeToEnd?this._stop(P,Q):this.onEachCountObservable.notifyObservers(P)},this._setState(0),this._contextObservable=b.contextObservable,this._observableParameters=b.observableParameters??{},this._breakCondition=b.breakCondition??(()=>!1),this._timeToEnd=b.timeout,b.onEnded&&this.onTimerEndedObservable.add(b.onEnded),b.rf&&this.onEachCountObservable.add(b.rf),b.onAborted&&this.onTimerAbortedObservable.add(b.onAborted)}set breakCondition(b){this._breakCondition=b}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=b,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(b){this._state=b,this.onStateChangedObservable.notifyObservers(this._state)}_stop(b){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),X?this.onTimerAbortedObservable.notifyObservers(b):this.onTimerEndedObservable.notifyObservers(b)}}var u=P(11700),w=P(11802),f=P(13623);class O extends S.b{constructor(b){super(b),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",d.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",d.i,new f.c(-1))}_preparePendingTasks(b){const X=this.duration.getValue(b);if(X<0||isNaN(X)||!isFinite(X))return this._reportError(b,"Invalid duration in SetDelay block");if(b._getGlobalContextVariable("activeDelays",0)>=O.MaxParallelDelayCount)return this._reportError(b,"Max parallel delays reached");const P=b._getGlobalContextVariable("lastDelayIndex",-1),Q=b._getExecutionVariable(this,"pendingDelays",[]),S=b.configuration.WX,d=new a({timeout:1e3*X,contextObservable:S.onBeforeRenderObservable,onEnded:()=>this._onEnded(d,b)});d.start();const N=P+1;this.lastDelayIndex.setValue(new f.c(N),b),b._setGlobalContextVariable("lastDelayIndex",N),Q[N]=d,b._setExecutionVariable(this,"pendingDelays",Q),this._updateGlobalTimers(b)}_cancelPendingTasks(b){const X=b._getExecutionVariable(this,"pendingDelays",[]);for(const P of X)null===P||void 0===P||P.dispose();b._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new f.c(-1),b),this._updateGlobalTimers(b)}_execute(b,X){X!==this.cancel?(this._preparePendingTasks(b),this.out._activateSignal(b)):this._cancelPendingTasks(b)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(b,X){const P=X._getExecutionVariable(this,"pendingDelays",[]),Q=P.indexOf(b);-1!==Q?P.splice(Q,1):u.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),X._removePendingBlock(this),this.done._activateSignal(X),this._updateGlobalTimers(X)}_updateGlobalTimers(b){const X=b._getExecutionVariable(this,"pendingDelays",[]),P=b._getGlobalContextVariable("pendingDelays",[]);for(let Q=0;Q<X.length;Q++){if(!X[Q])continue;const b=X[Q];P[Q]&&P[Q]!==b?u.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):P[Q]=b}b._setGlobalContextVariable("pendingDelays",P)}}O.MaxParallelDelayCount=100,(0,w.h)("FlowGraphSetDelayBlock",O)}}]);