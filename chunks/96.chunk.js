"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[96],{15017:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphSetDelayBlock:()=>p});var m,O=K(13559),X=K(13514),A=K(11663);!function(C){C[C.INIT=0]="INIT",C[C.STARTED=1]="STARTED",C[C.ENDED=2]="ENDED"}(m||(m={}));class e{constructor(C){this.onEachCountObservable=new A.b,this.onTimerAbortedObservable=new A.b,this.onTimerEndedObservable=new A.b,this.onStateChangedObservable=new A.b,this._observer=null,this._breakOnNextTick=!1,this._tick=C=>{const U=Date.now();this._timer=U-this._startTime;const K={startTime:this._startTime,currentTime:U,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,bK:C},m=this._breakOnNextTick||this._breakCondition(K);m||this._timer>=this._timeToEnd?this._stop(K,m):this.onEachCountObservable.notifyObservers(K)},this._setState(0),this._contextObservable=C.contextObservable,this._observableParameters=C.observableParameters??{},this._breakCondition=C.breakCondition??(()=>!1),this._timeToEnd=C.timeout,C.onEnded&&this.onTimerEndedObservable.add(C.onEnded),C.sj&&this.onEachCountObservable.add(C.sj),C.onAborted&&this.onTimerAbortedObservable.add(C.onAborted)}set breakCondition(C){this._breakCondition=C}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=C,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(C){this._state=C,this.onStateChangedObservable.notifyObservers(this._state)}_stop(C){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),U?this.onTimerAbortedObservable.notifyObservers(C):this.onTimerEndedObservable.notifyObservers(C)}}var t=K(11679),z=K(11789),j=K(13508);class p extends O.c{constructor(C){super(C),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",X.w),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",X.i,new j.d(-1))}_preparePendingTasks(C){const U=this.duration.getValue(C);if(U<0||isNaN(U)||!isFinite(U))return this._reportError(C,"Invalid duration in SetDelay block");if(C._getGlobalContextVariable("activeDelays",0)>=p.MaxParallelDelayCount)return this._reportError(C,"Max parallel delays reached");const K=C._getGlobalContextVariable("lastDelayIndex",-1),m=C._getExecutionVariable(this,"pendingDelays",[]),O=C.configuration.QU,X=new e({timeout:1e3*U,contextObservable:O.onBeforeRenderObservable,onEnded:()=>this._onEnded(X,C)});X.start();const A=K+1;this.lastDelayIndex.setValue(new j.d(A),C),C._setGlobalContextVariable("lastDelayIndex",A),m[A]=X,C._setExecutionVariable(this,"pendingDelays",m),this._updateGlobalTimers(C)}_cancelPendingTasks(C){const U=C._getExecutionVariable(this,"pendingDelays",[]);for(const K of U)null===K||void 0===K||K.dispose();C._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new j.d(-1),C),this._updateGlobalTimers(C)}_execute(C,U){U!==this.cancel?(this._preparePendingTasks(C),this.out._activateSignal(C)):this._cancelPendingTasks(C)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(C,U){const K=U._getExecutionVariable(this,"pendingDelays",[]),m=K.indexOf(C);-1!==m?K.splice(m,1):t.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),U._removePendingBlock(this),this.done._activateSignal(U),this._updateGlobalTimers(U)}_updateGlobalTimers(C){const U=C._getExecutionVariable(this,"pendingDelays",[]),K=C._getGlobalContextVariable("pendingDelays",[]);for(let m=0;m<U.length;m++){if(!U[m])continue;const C=U[m];K[m]&&K[m]!==C?t.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):K[m]=C}C._setGlobalContextVariable("pendingDelays",K)}}p.MaxParallelDelayCount=100,(0,z.h)("FlowGraphSetDelayBlock",p)}}]);