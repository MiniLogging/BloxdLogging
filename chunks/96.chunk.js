"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[96],{15642:(C,c,d)=>{d.r(c),d.d(c,{FlowGraphSetDelayBlock:()=>k});var b,X=d(14178),P=d(14126),V=d(12221);!function(C){C[C.INIT=0]="INIT",C[C.STARTED=1]="STARTED",C[C.ENDED=2]="ENDED"}(b||(b={}));class R{constructor(C){this.onEachCountObservable=new V.b,this.onTimerAbortedObservable=new V.b,this.onTimerEndedObservable=new V.b,this.onStateChangedObservable=new V.b,this._observer=null,this._breakOnNextTick=!1,this._tick=C=>{const c=Date.now();this._timer=c-this._startTime;const d={startTime:this._startTime,currentTime:c,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,qX:C},b=this._breakOnNextTick||this._breakCondition(d);b||this._timer>=this._timeToEnd?this._stop(d,b):this.onEachCountObservable.notifyObservers(d)},this._setState(0),this._contextObservable=C.contextObservable,this._observableParameters=C.observableParameters??{},this._breakCondition=C.breakCondition??(()=>!1),this._timeToEnd=C.timeout,C.onEnded&&this.onTimerEndedObservable.add(C.onEnded),C.nZ&&this.onEachCountObservable.add(C.nZ),C.onAborted&&this.onTimerAbortedObservable.add(C.onAborted)}set breakCondition(C){this._breakCondition=C}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=C,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(C){this._state=C,this.onStateChangedObservable.notifyObservers(this._state)}_stop(C){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),c?this.onTimerAbortedObservable.notifyObservers(C):this.onTimerEndedObservable.notifyObservers(C)}}var p=d(12233),j=d(12345),g=d(14120);class k extends X.c{constructor(C){super(C),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",P.q),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",P.h,new g.c(-1))}_preparePendingTasks(C){const c=this.duration.getValue(C);if(c<0||isNaN(c)||!isFinite(c))return this._reportError(C,"Invalid duration in SetDelay block");if(C._getGlobalContextVariable("activeDelays",0)>=k.MaxParallelDelayCount)return this._reportError(C,"Max parallel delays reached");const d=C._getGlobalContextVariable("lastDelayIndex",-1),b=C._getExecutionVariable(this,"pendingDelays",[]),X=C.configuration.Pd,P=new R({timeout:1e3*c,contextObservable:X.onBeforeRenderObservable,onEnded:()=>this._onEnded(P,C)});P.start();const V=d+1;this.lastDelayIndex.setValue(new g.c(V),C),C._setGlobalContextVariable("lastDelayIndex",V),b[V]=P,C._setExecutionVariable(this,"pendingDelays",b),this._updateGlobalTimers(C)}_cancelPendingTasks(C){const c=C._getExecutionVariable(this,"pendingDelays",[]);for(const d of c)null===d||void 0===d||d.dispose();C._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new g.c(-1),C),this._updateGlobalTimers(C)}_execute(C,c){c!==this.cancel?(this._preparePendingTasks(C),this.out._activateSignal(C)):this._cancelPendingTasks(C)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(C,c){const d=c._getExecutionVariable(this,"pendingDelays",[]),b=d.indexOf(C);-1!==b?d.splice(b,1):p.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),c._removePendingBlock(this),this.done._activateSignal(c),this._updateGlobalTimers(c)}_updateGlobalTimers(C){const c=C._getExecutionVariable(this,"pendingDelays",[]),d=C._getGlobalContextVariable("pendingDelays",[]);for(let b=0;b<c.length;b++){if(!c[b])continue;const C=c[b];d[b]&&d[b]!==C?p.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):d[b]=C}C._setGlobalContextVariable("pendingDelays",d)}}k.MaxParallelDelayCount=100,(0,j.e)("FlowGraphSetDelayBlock",k)}}]);