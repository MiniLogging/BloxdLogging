"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[96],{14314:(P,e,n)=>{n.r(e),n.d(e,{FlowGraphSetDelayBlock:()=>q});var H,S=n(12857),p=n(12819),k=n(10976);!function(P){P[P.INIT=0]="INIT",P[P.STARTED=1]="STARTED",P[P.ENDED=2]="ENDED"}(H||(H={}));class m{constructor(P){this.onEachCountObservable=new k.b,this.onTimerAbortedObservable=new k.b,this.onTimerEndedObservable=new k.b,this.onStateChangedObservable=new k.b,this._observer=null,this._breakOnNextTick=!1,this._tick=P=>{const e=Date.now();this._timer=e-this._startTime;const n={startTime:this._startTime,currentTime:e,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,fn:P},H=this._breakOnNextTick||this._breakCondition(n);H||this._timer>=this._timeToEnd?this._stop(n,H):this.onEachCountObservable.notifyObservers(n)},this._setState(0),this._contextObservable=P.contextObservable,this._observableParameters=P.observableParameters??{},this._breakCondition=P.breakCondition??(()=>!1),this._timeToEnd=P.timeout,P.onEnded&&this.onTimerEndedObservable.add(P.onEnded),P.yR&&this.onEachCountObservable.add(P.yR),P.onAborted&&this.onTimerAbortedObservable.add(P.onAborted)}set breakCondition(P){this._breakCondition=P}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=P,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(P){this._state=P,this.onStateChangedObservable.notifyObservers(this._state)}_stop(P){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),e?this.onTimerAbortedObservable.notifyObservers(P):this.onTimerEndedObservable.notifyObservers(P)}}var t=n(10988),C=n(11096),R=n(12812);class q extends S.b{constructor(P){super(P),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",p.r),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",p.e,new R.e(-1))}_preparePendingTasks(P){const e=this.duration.getValue(P);if(e<0||isNaN(e)||!isFinite(e))return this._reportError(P,"Invalid duration in SetDelay block");if(P._getGlobalContextVariable("activeDelays",0)>=q.MaxParallelDelayCount)return this._reportError(P,"Max parallel delays reached");const n=P._getGlobalContextVariable("lastDelayIndex",-1),H=P._getExecutionVariable(this,"pendingDelays",[]),S=P.configuration.Te,p=new m({timeout:1e3*e,contextObservable:S.onBeforeRenderObservable,onEnded:()=>this._onEnded(p,P)});p.start();const k=n+1;this.lastDelayIndex.setValue(new R.e(k),P),P._setGlobalContextVariable("lastDelayIndex",k),H[k]=p,P._setExecutionVariable(this,"pendingDelays",H),this._updateGlobalTimers(P)}_cancelPendingTasks(P){const e=P._getExecutionVariable(this,"pendingDelays",[]);for(const n of e)null===n||void 0===n||n.dispose();P._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new R.e(-1),P),this._updateGlobalTimers(P)}_execute(P,e){e!==this.cancel?(this._preparePendingTasks(P),this.out._activateSignal(P)):this._cancelPendingTasks(P)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(P,e){const n=e._getExecutionVariable(this,"pendingDelays",[]),H=n.indexOf(P);-1!==H?n.splice(H,1):t.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),e._removePendingBlock(this),this.done._activateSignal(e),this._updateGlobalTimers(e)}_updateGlobalTimers(P){const e=P._getExecutionVariable(this,"pendingDelays",[]),n=P._getGlobalContextVariable("pendingDelays",[]);for(let H=0;H<e.length;H++){if(!e[H])continue;const P=e[H];n[H]&&n[H]!==P?t.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):n[H]=P}P._setGlobalContextVariable("pendingDelays",n)}}q.MaxParallelDelayCount=100,(0,C.h)("FlowGraphSetDelayBlock",q)}}]);