"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[96],{14511:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphSetDelayBlock:()=>z});var q,w=M(13045),u=M(13004),y=M(11102);!function(K){K[K.INIT=0]="INIT",K[K.STARTED=1]="STARTED",K[K.ENDED=2]="ENDED"}(q||(q={}));class h{constructor(K){this.onEachCountObservable=new y.d,this.onTimerAbortedObservable=new y.d,this.onTimerEndedObservable=new y.d,this.onStateChangedObservable=new y.d,this._observer=null,this._breakOnNextTick=!1,this._tick=K=>{const H=Date.now();this._timer=H-this._startTime;const M={startTime:this._startTime,currentTime:H,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,vM:K},q=this._breakOnNextTick||this._breakCondition(M);q||this._timer>=this._timeToEnd?this._stop(M,q):this.onEachCountObservable.notifyObservers(M)},this._setState(0),this._contextObservable=K.contextObservable,this._observableParameters=K.observableParameters??{},this._breakCondition=K.breakCondition??(()=>!1),this._timeToEnd=K.timeout,K.onEnded&&this.onTimerEndedObservable.add(K.onEnded),K.Wz&&this.onEachCountObservable.add(K.Wz),K.onAborted&&this.onTimerAbortedObservable.add(K.onAborted)}set breakCondition(K){this._breakCondition=K}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=K,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(K){this._state=K,this.onStateChangedObservable.notifyObservers(this._state)}_stop(K){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),H?this.onTimerAbortedObservable.notifyObservers(K):this.onTimerEndedObservable.notifyObservers(K)}}var W=M(11112),I=M(11242),f=M(12996);class z extends w.c{constructor(K){super(K),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",u.x),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",u.l,new f.e(-1))}_preparePendingTasks(K){const H=this.duration.getValue(K);if(H<0||isNaN(H)||!isFinite(H))return this._reportError(K,"Invalid duration in SetDelay block");if(K._getGlobalContextVariable("activeDelays",0)>=z.MaxParallelDelayCount)return this._reportError(K,"Max parallel delays reached");const M=K._getGlobalContextVariable("lastDelayIndex",-1),q=K._getExecutionVariable(this,"pendingDelays",[]),w=K.configuration.SH,u=new h({timeout:1e3*H,contextObservable:w.onBeforeRenderObservable,onEnded:()=>this._onEnded(u,K)});u.start();const y=M+1;this.lastDelayIndex.setValue(new f.e(y),K),K._setGlobalContextVariable("lastDelayIndex",y),q[y]=u,K._setExecutionVariable(this,"pendingDelays",q),this._updateGlobalTimers(K)}_cancelPendingTasks(K){const H=K._getExecutionVariable(this,"pendingDelays",[]);for(const M of H)null===M||void 0===M||M.dispose();K._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new f.e(-1),K),this._updateGlobalTimers(K)}_execute(K,H){H!==this.cancel?(this._preparePendingTasks(K),this.out._activateSignal(K)):this._cancelPendingTasks(K)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(K,H){const M=H._getExecutionVariable(this,"pendingDelays",[]),q=M.indexOf(K);-1!==q?M.splice(q,1):W.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),H._removePendingBlock(this),this.done._activateSignal(H),this._updateGlobalTimers(H)}_updateGlobalTimers(K){const H=K._getExecutionVariable(this,"pendingDelays",[]),M=K._getGlobalContextVariable("pendingDelays",[]);for(let q=0;q<H.length;q++){if(!H[q])continue;const K=H[q];M[q]&&M[q]!==K?W.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):M[q]=K}K._setGlobalContextVariable("pendingDelays",M)}}z.MaxParallelDelayCount=100,(0,I.f)("FlowGraphSetDelayBlock",z)}}]);