"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[96],{15989:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphSetDelayBlock:()=>I});var J,S=Z(14458),P=Z(14405),v=Z(12551);!function(t){t[t.INIT=0]="INIT",t[t.STARTED=1]="STARTED",t[t.ENDED=2]="ENDED"}(J||(J={}));class h{constructor(t){this.onEachCountObservable=new v.d,this.onTimerAbortedObservable=new v.d,this.onTimerEndedObservable=new v.d,this.onStateChangedObservable=new v.d,this._observer=null,this._breakOnNextTick=!1,this._tick=t=>{const b=Date.now();this._timer=b-this._startTime;const Z={startTime:this._startTime,currentTime:b,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,JJ:t},J=this._breakOnNextTick||this._breakCondition(Z);J||this._timer>=this._timeToEnd?this._stop(Z,J):this.onEachCountObservable.notifyObservers(Z)},this._setState(0),this._contextObservable=t.contextObservable,this._observableParameters=t.observableParameters??{},this._breakCondition=t.breakCondition??(()=>!1),this._timeToEnd=t.timeout,t.onEnded&&this.onTimerEndedObservable.add(t.onEnded),t.VI&&this.onEachCountObservable.add(t.VI),t.onAborted&&this.onTimerAbortedObservable.add(t.onAborted)}set breakCondition(t){this._breakCondition=t}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=t,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(t){this._state=t,this.onStateChangedObservable.notifyObservers(this._state)}_stop(t){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),b?this.onTimerAbortedObservable.notifyObservers(t):this.onTimerEndedObservable.notifyObservers(t)}}var C=Z(12557),Y=Z(12688),g=Z(14397);class I extends S.c{constructor(t){super(t),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",P.q),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",P.j,new g.b(-1))}_preparePendingTasks(t){const b=this.duration.getValue(t);if(b<0||isNaN(b)||!isFinite(b))return this._reportError(t,"Invalid duration in SetDelay block");if(t._getGlobalContextVariable("activeDelays",0)>=I.MaxParallelDelayCount)return this._reportError(t,"Max parallel delays reached");const Z=t._getGlobalContextVariable("lastDelayIndex",-1),J=t._getExecutionVariable(this,"pendingDelays",[]),S=t.configuration.PZ,P=new h({timeout:1e3*b,contextObservable:S.onBeforeRenderObservable,onEnded:()=>this._onEnded(P,t)});P.start();const v=Z+1;this.lastDelayIndex.setValue(new g.b(v),t),t._setGlobalContextVariable("lastDelayIndex",v),J[v]=P,t._setExecutionVariable(this,"pendingDelays",J),this._updateGlobalTimers(t)}_cancelPendingTasks(t){const b=t._getExecutionVariable(this,"pendingDelays",[]);for(const Z of b)null===Z||void 0===Z||Z.dispose();t._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new g.b(-1),t),this._updateGlobalTimers(t)}_execute(t,b){b!==this.cancel?(this._preparePendingTasks(t),this.out._activateSignal(t)):this._cancelPendingTasks(t)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(t,b){const Z=b._getExecutionVariable(this,"pendingDelays",[]),J=Z.indexOf(t);-1!==J?Z.splice(J,1):C.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),b._removePendingBlock(this),this.done._activateSignal(b),this._updateGlobalTimers(b)}_updateGlobalTimers(t){const b=t._getExecutionVariable(this,"pendingDelays",[]),Z=t._getGlobalContextVariable("pendingDelays",[]);for(let J=0;J<b.length;J++){if(!b[J])continue;const t=b[J];Z[J]&&Z[J]!==t?C.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):Z[J]=t}t._setGlobalContextVariable("pendingDelays",Z)}}I.MaxParallelDelayCount=100,(0,Y.f)("FlowGraphSetDelayBlock",I)}}]);