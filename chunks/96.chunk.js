"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14141:(z,u,Y)=>{Y.r(u),Y.d(u,{FlowGraphSetVariableBlock:()=>l});var H=Y(10918),E=Y(12580),J=Y(12531);class l extends E.e{constructor(z){if(super(z),!z.variable&&!z.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(z.variables&&z.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(z.variables)for(const u of z.variables)this.registerDataInput(u,J.e);else this.registerDataInput("value",J.e)}_execute(z,u){var Y,H;if(null!==(Y=this.config)&&void 0!==Y&&Y.variables)for(const E of this.config.variables)this._saveVariable(z,E);else this._saveVariable(z,null===(H=this.config)||void 0===H?void 0:H.variable,"value");this.out._activateSignal(z)}_saveVariable(z,u,Y){var H;const E=z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const l of E){const Y=z.assetsContext.animationGroups.find((z=>z.uniqueId==l));if(Y)for(const H of Y.targetedAnimations)if(H.target===z&&H.animation.targetProperty===u){Y.stop();const u=E.indexOf(l);u>-1&&E.splice(u,1),z._setGlobalContextVariable("currentlyRunningAnimationGroups",E);break}}const J=null===(H=this.getDataInput(Y||u))||void 0===H?void 0:H.getValue(z);z.setVariable(u,J)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(z){var u;super.serialize(z),z.config.variable=null===(u=this.config)||void 0===u?void 0:u.variable}}(0,H.d)("FlowGraphSetVariableBlock",l)}}]);