"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[96],{16040:(p,b,M)=>{M.r(b),M.d(b,{FlowGraphSetDelayBlock:()=>x});var h,Q=M(14362),mp=M(14316),y=M(12617);!function(p){p[p.INIT=0]="INIT",p[p.STARTED=1]="STARTED",p[p.ENDED=2]="ENDED"}(h||(h={}));class P{constructor(p){this.onEachCountObservable=new y.d,this.onTimerAbortedObservable=new y.d,this.onTimerEndedObservable=new y.d,this.onStateChangedObservable=new y.d,this._observer=null,this._breakOnNextTick=!1,this._tick=p=>{const b=Date.now();this._timer=b-this._startTime;const M={startTime:this._startTime,currentTime:b,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,fh:p},h=this._breakOnNextTick||this._breakCondition(M);h||this._timer>=this._timeToEnd?this._stop(M,h):this.onEachCountObservable.notifyObservers(M)},this._setState(0),this._contextObservable=p.contextObservable,this._observableParameters=p.observableParameters??{},this._breakCondition=p.breakCondition??(()=>!1),this._timeToEnd=p.timeout,p.onEnded&&this.onTimerEndedObservable.add(p.onEnded),p.xS&&this.onEachCountObservable.add(p.xS),p.onAborted&&this.onTimerAbortedObservable.add(p.onAborted)}set breakCondition(p){this._breakCondition=p}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let p=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=p,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(p){this._state=p,this.onStateChangedObservable.notifyObservers(this._state)}_stop(p){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),b?this.onTimerAbortedObservable.notifyObservers(p):this.onTimerEndedObservable.notifyObservers(p)}}var w=M(12622),t=M(12730),z=M(14311);class x extends Q.d{constructor(p){super(p),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",mp.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",mp.k,new z.e(-1))}_preparePendingTasks(p){const b=this.duration.getValue(p);if(b<0||isNaN(b)||!isFinite(b))return this._reportError(p,"Invalid duration in SetDelay block");if(p._getGlobalContextVariable("activeDelays",0)>=x.MaxParallelDelayCount)return this._reportError(p,"Max parallel delays reached");const M=p._getGlobalContextVariable("lastDelayIndex",-1),h=p._getExecutionVariable(this,"pendingDelays",[]),Q=p.configuration.yM,mp=new P({timeout:1e3*b,contextObservable:Q.onBeforeRenderObservable,onEnded:()=>this._onEnded(mp,p)});mp.start();const y=M+1;this.lastDelayIndex.setValue(new z.e(y),p),p._setGlobalContextVariable("lastDelayIndex",y),h[y]=mp,p._setExecutionVariable(this,"pendingDelays",h),this._updateGlobalTimers(p)}_cancelPendingTasks(p){const b=p._getExecutionVariable(this,"pendingDelays",[]);for(const M of b)null===M||void 0===M||M.dispose();p._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new z.e(-1),p),this._updateGlobalTimers(p)}_execute(p,b){b!==this.cancel?(this._preparePendingTasks(p),this.out._activateSignal(p)):this._cancelPendingTasks(p)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(p,b){const M=b._getExecutionVariable(this,"pendingDelays",[]),h=M.indexOf(p);-1!==h?M.splice(h,1):w.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),b._removePendingBlock(this),this.done._activateSignal(b),this._updateGlobalTimers(b)}_updateGlobalTimers(p){const b=p._getExecutionVariable(this,"pendingDelays",[]),M=p._getGlobalContextVariable("pendingDelays",[]);for(let h=0;h<b.length;h++){if(!b[h])continue;const p=b[h];M[h]&&M[h]!==p?w.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):M[h]=p}p._setGlobalContextVariable("pendingDelays",M)}}x.MaxParallelDelayCount=100,(0,t.c)("FlowGraphSetDelayBlock",x)}}]);