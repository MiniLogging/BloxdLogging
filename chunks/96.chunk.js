"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[96],{16054:(a,c,o)=>{o.r(c),o.d(c,{FlowGraphSetDelayBlock:()=>j});var s,q=o(14439),t=o(14394),i=o(12639);!function(a){a[a.INIT=0]="INIT",a[a.STARTED=1]="STARTED",a[a.ENDED=2]="ENDED"}(s||(s={}));class p{constructor(a){this.onEachCountObservable=new i.d,this.onTimerAbortedObservable=new i.d,this.onTimerEndedObservable=new i.d,this.onStateChangedObservable=new i.d,this._observer=null,this._breakOnNextTick=!1,this._tick=a=>{const c=Date.now();this._timer=c-this._startTime;const o={startTime:this._startTime,currentTime:c,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,ps:a},s=this._breakOnNextTick||this._breakCondition(o);s||this._timer>=this._timeToEnd?this._stop(o,s):this.onEachCountObservable.notifyObservers(o)},this._setState(0),this._contextObservable=a.contextObservable,this._observableParameters=a.observableParameters??{},this._breakCondition=a.breakCondition??(()=>!1),this._timeToEnd=a.timeout,a.onEnded&&this.onTimerEndedObservable.add(a.onEnded),a.dj&&this.onEachCountObservable.add(a.dj),a.onAborted&&this.onTimerAbortedObservable.add(a.onAborted)}set breakCondition(a){this._breakCondition=a}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=a,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(a){this._state=a,this.onStateChangedObservable.notifyObservers(this._state)}_stop(a){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),c?this.onTimerAbortedObservable.notifyObservers(a):this.onTimerEndedObservable.notifyObservers(a)}}var G=o(12649),T=o(12776),C=o(14386);class j extends q.e{constructor(a){super(a),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",t.o),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",t.g,new C.c(-1))}_preparePendingTasks(a){const c=this.duration.getValue(a);if(c<0||isNaN(c)||!isFinite(c))return this._reportError(a,"Invalid duration in SetDelay block");if(a._getGlobalContextVariable("activeDelays",0)>=j.MaxParallelDelayCount)return this._reportError(a,"Max parallel delays reached");const o=a._getGlobalContextVariable("lastDelayIndex",-1),s=a._getExecutionVariable(this,"pendingDelays",[]),q=a.configuration.ao,t=new p({timeout:1e3*c,contextObservable:q.onBeforeRenderObservable,onEnded:()=>this._onEnded(t,a)});t.start();const i=o+1;this.lastDelayIndex.setValue(new C.c(i),a),a._setGlobalContextVariable("lastDelayIndex",i),s[i]=t,a._setExecutionVariable(this,"pendingDelays",s),this._updateGlobalTimers(a)}_cancelPendingTasks(a){const c=a._getExecutionVariable(this,"pendingDelays",[]);for(const o of c)null===o||void 0===o||o.dispose();a._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new C.c(-1),a),this._updateGlobalTimers(a)}_execute(a,c){c!==this.cancel?(this._preparePendingTasks(a),this.out._activateSignal(a)):this._cancelPendingTasks(a)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(a,c){const o=c._getExecutionVariable(this,"pendingDelays",[]),s=o.indexOf(a);-1!==s?o.splice(s,1):G.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),c._removePendingBlock(this),this.done._activateSignal(c),this._updateGlobalTimers(c)}_updateGlobalTimers(a){const c=a._getExecutionVariable(this,"pendingDelays",[]),o=a._getGlobalContextVariable("pendingDelays",[]);for(let s=0;s<c.length;s++){if(!c[s])continue;const a=c[s];o[s]&&o[s]!==a?G.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):o[s]=a}a._setGlobalContextVariable("pendingDelays",o)}}j.MaxParallelDelayCount=100,(0,T.d)("FlowGraphSetDelayBlock",j)}}]);