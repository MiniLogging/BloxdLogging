"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[96],{15792:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphSetDelayBlock:()=>D});var e,c=b(14311),z=b(14282),M=b(12412);!function(I){I[I.INIT=0]="INIT",I[I.STARTED=1]="STARTED",I[I.ENDED=2]="ENDED"}(e||(e={}));class J{constructor(I){this.onEachCountObservable=new M.c,this.onTimerAbortedObservable=new M.c,this.onTimerEndedObservable=new M.c,this.onStateChangedObservable=new M.c,this._observer=null,this._breakOnNextTick=!1,this._tick=I=>{const g=Date.now();this._timer=g-this._startTime;const b={startTime:this._startTime,currentTime:g,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Ne:I},e=this._breakOnNextTick||this._breakCondition(b);e||this._timer>=this._timeToEnd?this._stop(b,e):this.onEachCountObservable.notifyObservers(b)},this._setState(0),this._contextObservable=I.contextObservable,this._observableParameters=I.observableParameters??{},this._breakCondition=I.breakCondition??(()=>!1),this._timeToEnd=I.timeout,I.onEnded&&this.onTimerEndedObservable.add(I.onEnded),I.Vp&&this.onEachCountObservable.add(I.Vp),I.onAborted&&this.onTimerAbortedObservable.add(I.onAborted)}set breakCondition(I){this._breakCondition=I}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=I,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(I){this._state=I,this.onStateChangedObservable.notifyObservers(this._state)}_stop(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),g?this.onTimerAbortedObservable.notifyObservers(I):this.onTimerEndedObservable.notifyObservers(I)}}var o=b(12420),n=b(12558),G=b(14278);class D extends c.c{constructor(I){super(I),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",z.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",z.h,new G.d(-1))}_preparePendingTasks(I){const g=this.duration.getValue(I);if(g<0||isNaN(g)||!isFinite(g))return this._reportError(I,"Invalid duration in SetDelay block");if(I._getGlobalContextVariable("activeDelays",0)>=D.MaxParallelDelayCount)return this._reportError(I,"Max parallel delays reached");const b=I._getGlobalContextVariable("lastDelayIndex",-1),e=I._getExecutionVariable(this,"pendingDelays",[]),c=I.configuration.Xg,z=new J({timeout:1e3*g,contextObservable:c.onBeforeRenderObservable,onEnded:()=>this._onEnded(z,I)});z.start();const M=b+1;this.lastDelayIndex.setValue(new G.d(M),I),I._setGlobalContextVariable("lastDelayIndex",M),e[M]=z,I._setExecutionVariable(this,"pendingDelays",e),this._updateGlobalTimers(I)}_cancelPendingTasks(I){const g=I._getExecutionVariable(this,"pendingDelays",[]);for(const b of g)null===b||void 0===b||b.dispose();I._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new G.d(-1),I),this._updateGlobalTimers(I)}_execute(I,g){g!==this.cancel?(this._preparePendingTasks(I),this.out._activateSignal(I)):this._cancelPendingTasks(I)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(I,g){const b=g._getExecutionVariable(this,"pendingDelays",[]),e=b.indexOf(I);-1!==e?b.splice(e,1):o.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),g._removePendingBlock(this),this.done._activateSignal(g),this._updateGlobalTimers(g)}_updateGlobalTimers(I){const g=I._getExecutionVariable(this,"pendingDelays",[]),b=I._getGlobalContextVariable("pendingDelays",[]);for(let e=0;e<g.length;e++){if(!g[e])continue;const I=g[e];b[e]&&b[e]!==I?o.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):b[e]=I}I._setGlobalContextVariable("pendingDelays",b)}}D.MaxParallelDelayCount=100,(0,n.g)("FlowGraphSetDelayBlock",D)}}]);