"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[96],{16491:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphReceiveCustomEventBlock:()=>j});var S=R(14561),A=R(12225),Z=R(12376),p=R(14505);class j extends S.c{constructor(P){super(P),this.config=P,this.initPriority=1;for(const a in this.config.eventData)this.registerDataOutput(a,this.config.eventData[a].type)}_preparePendingTasks(P){const a=P.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(a&&a.hasObservers()&&a.observers.length>p.d.MaxEventsPerType)return void this._reportError(P,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${p.d.MaxEventsPerType}.`);const R=a.add((a=>{const R=Object.keys(a);for(const A of R){var S;null===(S=this.getDataOutput(A))||void 0===S||S.setValue(a[A],P)}this._execute(P)}));P._setExecutionVariable(this,"_eventObserver",R)}_cancelPendingTasks(P){const a=P.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(a){const R=P._getExecutionVariable(this,"_eventObserver",null);a.remove(R)}else A.Tools.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(P,a){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,Z.d)("FlowGraphReceiveCustomEventBlock",j)}}]);