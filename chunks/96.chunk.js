"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[96],{15716:(u,R,I)=>{I.r(R),I.d(R,{FlowGraphSetDelayBlock:()=>S});var B,U=I(14209),K=I(14160),C=I(12303);!function(u){u[u.INIT=0]="INIT",u[u.STARTED=1]="STARTED",u[u.ENDED=2]="ENDED"}(B||(B={}));class D{constructor(u){this.onEachCountObservable=new C.c,this.onTimerAbortedObservable=new C.c,this.onTimerEndedObservable=new C.c,this.onStateChangedObservable=new C.c,this._observer=null,this._breakOnNextTick=!1,this._tick=u=>{const R=Date.now();this._timer=R-this._startTime;const I={startTime:this._startTime,currentTime:R,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,rI:u},B=this._breakOnNextTick||this._breakCondition(I);B||this._timer>=this._timeToEnd?this._stop(I,B):this.onEachCountObservable.notifyObservers(I)},this._setState(0),this._contextObservable=u.contextObservable,this._observableParameters=u.observableParameters??{},this._breakCondition=u.breakCondition??(()=>!1),this._timeToEnd=u.timeout,u.onEnded&&this.onTimerEndedObservable.add(u.onEnded),u.aG&&this.onEachCountObservable.add(u.aG),u.onAborted&&this.onTimerAbortedObservable.add(u.onAborted)}set breakCondition(u){this._breakCondition=u}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=u,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(u){this._state=u,this.onStateChangedObservable.notifyObservers(this._state)}_stop(u){let R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),R?this.onTimerAbortedObservable.notifyObservers(u):this.onTimerEndedObservable.notifyObservers(u)}}var s=I(12315),t=I(12433),G=I(14157);class S extends U.b{constructor(u){super(u),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",K.u),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",K.j,new G.d(-1))}_preparePendingTasks(u){const R=this.duration.getValue(u);if(R<0||isNaN(R)||!isFinite(R))return this._reportError(u,"Invalid duration in SetDelay block");if(u._getGlobalContextVariable("activeDelays",0)>=S.MaxParallelDelayCount)return this._reportError(u,"Max parallel delays reached");const I=u._getGlobalContextVariable("lastDelayIndex",-1),B=u._getExecutionVariable(this,"pendingDelays",[]),U=u.configuration.ER,K=new D({timeout:1e3*R,contextObservable:U.onBeforeRenderObservable,onEnded:()=>this._onEnded(K,u)});K.start();const C=I+1;this.lastDelayIndex.setValue(new G.d(C),u),u._setGlobalContextVariable("lastDelayIndex",C),B[C]=K,u._setExecutionVariable(this,"pendingDelays",B),this._updateGlobalTimers(u)}_cancelPendingTasks(u){const R=u._getExecutionVariable(this,"pendingDelays",[]);for(const I of R)null===I||void 0===I||I.dispose();u._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new G.d(-1),u),this._updateGlobalTimers(u)}_execute(u,R){R!==this.cancel?(this._preparePendingTasks(u),this.out._activateSignal(u)):this._cancelPendingTasks(u)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(u,R){const I=R._getExecutionVariable(this,"pendingDelays",[]),B=I.indexOf(u);-1!==B?I.splice(B,1):s.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),R._removePendingBlock(this),this.done._activateSignal(R),this._updateGlobalTimers(R)}_updateGlobalTimers(u){const R=u._getExecutionVariable(this,"pendingDelays",[]),I=u._getGlobalContextVariable("pendingDelays",[]);for(let B=0;B<R.length;B++){if(!R[B])continue;const u=R[B];I[B]&&I[B]!==u?s.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):I[B]=u}u._setGlobalContextVariable("pendingDelays",I)}}S.MaxParallelDelayCount=100,(0,t.e)("FlowGraphSetDelayBlock",S)}}]);