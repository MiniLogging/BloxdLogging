"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[96],{15619:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphSetDelayBlock:()=>p});var A,t=V(14085),n=V(14036),q=V(12182);!function(N){N[N.INIT=0]="INIT",N[N.STARTED=1]="STARTED",N[N.ENDED=2]="ENDED"}(A||(A={}));class i{constructor(N){this.onEachCountObservable=new q.d,this.onTimerAbortedObservable=new q.d,this.onTimerEndedObservable=new q.d,this.onStateChangedObservable=new q.d,this._observer=null,this._breakOnNextTick=!1,this._tick=N=>{const U=Date.now();this._timer=U-this._startTime;const V={startTime:this._startTime,currentTime:U,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,CV:N},A=this._breakOnNextTick||this._breakCondition(V);A||this._timer>=this._timeToEnd?this._stop(V,A):this.onEachCountObservable.notifyObservers(V)},this._setState(0),this._contextObservable=N.contextObservable,this._observableParameters=N.observableParameters??{},this._breakCondition=N.breakCondition??(()=>!1),this._timeToEnd=N.timeout,N.onEnded&&this.onTimerEndedObservable.add(N.onEnded),N.lE&&this.onEachCountObservable.add(N.lE),N.onAborted&&this.onTimerAbortedObservable.add(N.onAborted)}set breakCondition(N){this._breakCondition=N}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=N,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(N){this._state=N,this.onStateChangedObservable.notifyObservers(this._state)}_stop(N){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),U?this.onTimerAbortedObservable.notifyObservers(N):this.onTimerEndedObservable.notifyObservers(N)}}var z=V(12193),S=V(12344),E=V(14031);class p extends t.c{constructor(N){super(N),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",n.p),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",n.g,new E.b(-1))}_preparePendingTasks(N){const U=this.duration.getValue(N);if(U<0||isNaN(U)||!isFinite(U))return this._reportError(N,"Invalid duration in SetDelay block");if(N._getGlobalContextVariable("activeDelays",0)>=p.MaxParallelDelayCount)return this._reportError(N,"Max parallel delays reached");const V=N._getGlobalContextVariable("lastDelayIndex",-1),A=N._getExecutionVariable(this,"pendingDelays",[]),t=N.configuration.JU,n=new i({timeout:1e3*U,contextObservable:t.onBeforeRenderObservable,onEnded:()=>this._onEnded(n,N)});n.start();const q=V+1;this.lastDelayIndex.setValue(new E.b(q),N),N._setGlobalContextVariable("lastDelayIndex",q),A[q]=n,N._setExecutionVariable(this,"pendingDelays",A),this._updateGlobalTimers(N)}_cancelPendingTasks(N){const U=N._getExecutionVariable(this,"pendingDelays",[]);for(const V of U)null===V||void 0===V||V.dispose();N._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new E.b(-1),N),this._updateGlobalTimers(N)}_execute(N,U){U!==this.cancel?(this._preparePendingTasks(N),this.out._activateSignal(N)):this._cancelPendingTasks(N)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(N,U){const V=U._getExecutionVariable(this,"pendingDelays",[]),A=V.indexOf(N);-1!==A?V.splice(A,1):z.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),U._removePendingBlock(this),this.done._activateSignal(U),this._updateGlobalTimers(U)}_updateGlobalTimers(N){const U=N._getExecutionVariable(this,"pendingDelays",[]),V=N._getGlobalContextVariable("pendingDelays",[]);for(let A=0;A<U.length;A++){if(!U[A])continue;const N=U[A];V[A]&&V[A]!==N?z.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):V[A]=N}N._setGlobalContextVariable("pendingDelays",V)}}p.MaxParallelDelayCount=100,(0,S.e)("FlowGraphSetDelayBlock",p)}}]);