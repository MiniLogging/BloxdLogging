"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14547:(V,I,m)=>{m.r(I),m.d(I,{FlowGraphSetVariableBlock:()=>F});var C=m(11048),l=m(12934),s=m(12899);class F extends l.d{constructor(V){if(super(V),!V.variable&&!V.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(V.variables&&V.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(V.variables)for(const I of V.variables)this.registerDataInput(I,s.b);else this.registerDataInput("value",s.b)}_execute(V,I){var m,C;if(null!==(m=this.config)&&void 0!==m&&m.variables)for(const l of this.config.variables)this._saveVariable(V,l);else this._saveVariable(V,null===(C=this.config)||void 0===C?void 0:C.variable,"value");this.out._activateSignal(V)}_saveVariable(V,I,m){var C;const l=V._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const F of l){const m=V.assetsContext.animationGroups.find((V=>V.uniqueId==F));if(m)for(const C of m.targetedAnimations)if(C.target===V&&C.animation.targetProperty===I){m.stop();const I=l.indexOf(F);I>-1&&l.splice(I,1),V._setGlobalContextVariable("currentlyRunningAnimationGroups",l);break}}const s=null===(C=this.getDataInput(m||I))||void 0===C?void 0:C.getValue(V);V.setVariable(I,s)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(V){var I;super.serialize(V),V.config.variable=null===(I=this.config)||void 0===I?void 0:I.variable}}(0,C.h)("FlowGraphSetVariableBlock",F)}}]);