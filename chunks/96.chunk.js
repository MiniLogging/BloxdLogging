"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[96],{14962:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphSetDelayBlock:()=>E});var W,B=D(13429),t=D(13392),u=D(11494);!function(c){c[c.INIT=0]="INIT",c[c.STARTED=1]="STARTED",c[c.ENDED=2]="ENDED"}(W||(W={}));class a{constructor(c){this.onEachCountObservable=new u.c,this.onTimerAbortedObservable=new u.c,this.onTimerEndedObservable=new u.c,this.onStateChangedObservable=new u.c,this._observer=null,this._breakOnNextTick=!1,this._tick=c=>{const r=Date.now();this._timer=r-this._startTime;const D={startTime:this._startTime,currentTime:r,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,XD:c},W=this._breakOnNextTick||this._breakCondition(D);W||this._timer>=this._timeToEnd?this._stop(D,W):this.onEachCountObservable.notifyObservers(D)},this._setState(0),this._contextObservable=c.contextObservable,this._observableParameters=c.observableParameters??{},this._breakCondition=c.breakCondition??(()=>!1),this._timeToEnd=c.timeout,c.onEnded&&this.onTimerEndedObservable.add(c.onEnded),c.sM&&this.onEachCountObservable.add(c.sM),c.onAborted&&this.onTimerAbortedObservable.add(c.onAborted)}set breakCondition(c){this._breakCondition=c}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=c,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(c){this._state=c,this.onStateChangedObservable.notifyObservers(this._state)}_stop(c){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),r?this.onTimerAbortedObservable.notifyObservers(c):this.onTimerEndedObservable.notifyObservers(c)}}var H=D(11509),x=D(11637),M=D(13390);class E extends B.e{constructor(c){super(c),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",t.u),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",t.h,new M.d(-1))}_preparePendingTasks(c){const r=this.duration.getValue(c);if(r<0||isNaN(r)||!isFinite(r))return this._reportError(c,"Invalid duration in SetDelay block");if(c._getGlobalContextVariable("activeDelays",0)>=E.MaxParallelDelayCount)return this._reportError(c,"Max parallel delays reached");const D=c._getGlobalContextVariable("lastDelayIndex",-1),W=c._getExecutionVariable(this,"pendingDelays",[]),B=c.configuration.qr,t=new a({timeout:1e3*r,contextObservable:B.onBeforeRenderObservable,onEnded:()=>this._onEnded(t,c)});t.start();const u=D+1;this.lastDelayIndex.setValue(new M.d(u),c),c._setGlobalContextVariable("lastDelayIndex",u),W[u]=t,c._setExecutionVariable(this,"pendingDelays",W),this._updateGlobalTimers(c)}_cancelPendingTasks(c){const r=c._getExecutionVariable(this,"pendingDelays",[]);for(const D of r)null===D||void 0===D||D.dispose();c._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new M.d(-1),c),this._updateGlobalTimers(c)}_execute(c,r){r!==this.cancel?(this._preparePendingTasks(c),this.out._activateSignal(c)):this._cancelPendingTasks(c)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(c,r){const D=r._getExecutionVariable(this,"pendingDelays",[]),W=D.indexOf(c);-1!==W?D.splice(W,1):H.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),r._removePendingBlock(this),this.done._activateSignal(r),this._updateGlobalTimers(r)}_updateGlobalTimers(c){const r=c._getExecutionVariable(this,"pendingDelays",[]),D=c._getGlobalContextVariable("pendingDelays",[]);for(let W=0;W<r.length;W++){if(!r[W])continue;const c=r[W];D[W]&&D[W]!==c?H.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):D[W]=c}c._setGlobalContextVariable("pendingDelays",D)}}E.MaxParallelDelayCount=100,(0,x.e)("FlowGraphSetDelayBlock",E)}}]);