"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[96],{15697:(e,d,v)=>{v.r(d),v.d(d,{FlowGraphSetDelayBlock:()=>k});var P,p=v(14216),L=v(14181),B=v(12248);!function(e){e[e.INIT=0]="INIT",e[e.STARTED=1]="STARTED",e[e.ENDED=2]="ENDED"}(P||(P={}));class X{constructor(e){this.onEachCountObservable=new B.d,this.onTimerAbortedObservable=new B.d,this.onTimerEndedObservable=new B.d,this.onStateChangedObservable=new B.d,this._observer=null,this._breakOnNextTick=!1,this._tick=e=>{const d=Date.now();this._timer=d-this._startTime;const v={startTime:this._startTime,currentTime:d,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Hv:e},P=this._breakOnNextTick||this._breakCondition(v);P||this._timer>=this._timeToEnd?this._stop(v,P):this.onEachCountObservable.notifyObservers(v)},this._setState(0),this._contextObservable=e.contextObservable,this._observableParameters=e.observableParameters??{},this._breakCondition=e.breakCondition??(()=>!1),this._timeToEnd=e.timeout,e.onEnded&&this.onTimerEndedObservable.add(e.onEnded),e.OV&&this.onEachCountObservable.add(e.OV),e.onAborted&&this.onTimerAbortedObservable.add(e.onAborted)}set breakCondition(e){this._breakCondition=e}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=e,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(e){this._state=e,this.onStateChangedObservable.notifyObservers(this._state)}_stop(e){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),d?this.onTimerAbortedObservable.notifyObservers(e):this.onTimerEndedObservable.notifyObservers(e)}}var z=v(12253),W=v(12381),V=v(14179);class k extends p.d{constructor(e){super(e),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",L.n),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",L.f,new V.d(-1))}_preparePendingTasks(e){const d=this.duration.getValue(e);if(d<0||isNaN(d)||!isFinite(d))return this._reportError(e,"Invalid duration in SetDelay block");if(e._getGlobalContextVariable("activeDelays",0)>=k.MaxParallelDelayCount)return this._reportError(e,"Max parallel delays reached");const v=e._getGlobalContextVariable("lastDelayIndex",-1),P=e._getExecutionVariable(this,"pendingDelays",[]),p=e.configuration.fd,L=new X({timeout:1e3*d,contextObservable:p.onBeforeRenderObservable,onEnded:()=>this._onEnded(L,e)});L.start();const B=v+1;this.lastDelayIndex.setValue(new V.d(B),e),e._setGlobalContextVariable("lastDelayIndex",B),P[B]=L,e._setExecutionVariable(this,"pendingDelays",P),this._updateGlobalTimers(e)}_cancelPendingTasks(e){const d=e._getExecutionVariable(this,"pendingDelays",[]);for(const v of d)null===v||void 0===v||v.dispose();e._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new V.d(-1),e),this._updateGlobalTimers(e)}_execute(e,d){d!==this.cancel?(this._preparePendingTasks(e),this.out._activateSignal(e)):this._cancelPendingTasks(e)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(e,d){const v=d._getExecutionVariable(this,"pendingDelays",[]),P=v.indexOf(e);-1!==P?v.splice(P,1):z.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),d._removePendingBlock(this),this.done._activateSignal(d),this._updateGlobalTimers(d)}_updateGlobalTimers(e){const d=e._getExecutionVariable(this,"pendingDelays",[]),v=e._getGlobalContextVariable("pendingDelays",[]);for(let P=0;P<d.length;P++){if(!d[P])continue;const e=d[P];v[P]&&v[P]!==e?z.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):v[P]=e}e._setGlobalContextVariable("pendingDelays",v)}}k.MaxParallelDelayCount=100,(0,W.h)("FlowGraphSetDelayBlock",k)}}]);