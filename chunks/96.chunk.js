"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14307:(q,f,j)=>{j.r(f),j.d(f,{FlowGraphSetVariableBlock:()=>L});var d=j(10965),g=j(12752),h=j(12709);class L extends g.c{constructor(q){if(super(q),!q.variable&&!q.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(q.variables&&q.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(q.variables)for(const f of q.variables)this.registerDataInput(f,h.c);else this.registerDataInput("value",h.c)}_execute(q,f){var j,d;if(null!==(j=this.config)&&void 0!==j&&j.variables)for(const g of this.config.variables)this._saveVariable(q,g);else this._saveVariable(q,null===(d=this.config)||void 0===d?void 0:d.variable,"value");this.out._activateSignal(q)}_saveVariable(q,f,j){var d;const g=q._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const L of g){const j=q.assetsContext.animationGroups.find((q=>q.uniqueId==L));if(j)for(const d of j.targetedAnimations)if(d.target===q&&d.animation.targetProperty===f){j.stop();const f=g.indexOf(L);f>-1&&g.splice(f,1),q._setGlobalContextVariable("currentlyRunningAnimationGroups",g);break}}const h=null===(d=this.getDataInput(j||f))||void 0===d?void 0:d.getValue(q);q.setVariable(f,h)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(q){var f;super.serialize(q),q.config.variable=null===(f=this.config)||void 0===f?void 0:f.variable}}(0,d.f)("FlowGraphSetVariableBlock",L)}}]);