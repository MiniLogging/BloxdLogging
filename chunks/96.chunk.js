"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[96],{14922:(e,E,H)=>{H.r(E),H.d(E,{FlowGraphSetDelayBlock:()=>i});var N,u=H(13467),z=H(13415),P=H(11541);!function(e){e[e.INIT=0]="INIT",e[e.STARTED=1]="STARTED",e[e.ENDED=2]="ENDED"}(N||(N={}));class M{constructor(e){this.onEachCountObservable=new P.d,this.onTimerAbortedObservable=new P.d,this.onTimerEndedObservable=new P.d,this.onStateChangedObservable=new P.d,this._observer=null,this._breakOnNextTick=!1,this._tick=e=>{const E=Date.now();this._timer=E-this._startTime;const H={startTime:this._startTime,currentTime:E,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,UH:e},N=this._breakOnNextTick||this._breakCondition(H);N||this._timer>=this._timeToEnd?this._stop(H,N):this.onEachCountObservable.notifyObservers(H)},this._setState(0),this._contextObservable=e.contextObservable,this._observableParameters=e.observableParameters??{},this._breakCondition=e.breakCondition??(()=>!1),this._timeToEnd=e.timeout,e.onEnded&&this.onTimerEndedObservable.add(e.onEnded),e.KC&&this.onEachCountObservable.add(e.KC),e.onAborted&&this.onTimerAbortedObservable.add(e.onAborted)}set breakCondition(e){this._breakCondition=e}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=e,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(e){this._state=e,this.onStateChangedObservable.notifyObservers(this._state)}_stop(e){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),E?this.onTimerAbortedObservable.notifyObservers(e):this.onTimerEndedObservable.notifyObservers(e)}}var D=H(11548),A=H(11690),C=H(13407);class i extends u.b{constructor(e){super(e),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",z.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",z.h,new C.b(-1))}_preparePendingTasks(e){const E=this.duration.getValue(e);if(E<0||isNaN(E)||!isFinite(E))return this._reportError(e,"Invalid duration in SetDelay block");if(e._getGlobalContextVariable("activeDelays",0)>=i.MaxParallelDelayCount)return this._reportError(e,"Max parallel delays reached");const H=e._getGlobalContextVariable("lastDelayIndex",-1),N=e._getExecutionVariable(this,"pendingDelays",[]),u=e.configuration.hE,z=new M({timeout:1e3*E,contextObservable:u.onBeforeRenderObservable,onEnded:()=>this._onEnded(z,e)});z.start();const P=H+1;this.lastDelayIndex.setValue(new C.b(P),e),e._setGlobalContextVariable("lastDelayIndex",P),N[P]=z,e._setExecutionVariable(this,"pendingDelays",N),this._updateGlobalTimers(e)}_cancelPendingTasks(e){const E=e._getExecutionVariable(this,"pendingDelays",[]);for(const H of E)null===H||void 0===H||H.dispose();e._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new C.b(-1),e),this._updateGlobalTimers(e)}_execute(e,E){E!==this.cancel?(this._preparePendingTasks(e),this.out._activateSignal(e)):this._cancelPendingTasks(e)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(e,E){const H=E._getExecutionVariable(this,"pendingDelays",[]),N=H.indexOf(e);-1!==N?H.splice(N,1):D.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),E._removePendingBlock(this),this.done._activateSignal(E),this._updateGlobalTimers(E)}_updateGlobalTimers(e){const E=e._getExecutionVariable(this,"pendingDelays",[]),H=e._getGlobalContextVariable("pendingDelays",[]);for(let N=0;N<E.length;N++){if(!E[N])continue;const e=E[N];H[N]&&H[N]!==e?D.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):H[N]=e}e._setGlobalContextVariable("pendingDelays",H)}}i.MaxParallelDelayCount=100,(0,A.g)("FlowGraphSetDelayBlock",i)}}]);