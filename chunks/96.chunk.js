"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[96],{14595:(f,v,Z)=>{Z.r(v),Z.d(v,{FlowGraphSetDelayBlock:()=>u});var V,h=Z(13169),J=Z(13123),l=Z(11235);!function(f){f[f.INIT=0]="INIT",f[f.STARTED=1]="STARTED",f[f.ENDED=2]="ENDED"}(V||(V={}));class e{constructor(f){this.onEachCountObservable=new l.c,this.onTimerAbortedObservable=new l.c,this.onTimerEndedObservable=new l.c,this.onStateChangedObservable=new l.c,this._observer=null,this._breakOnNextTick=!1,this._tick=f=>{const v=Date.now();this._timer=v-this._startTime;const Z={startTime:this._startTime,currentTime:v,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,XZ:f},V=this._breakOnNextTick||this._breakCondition(Z);V||this._timer>=this._timeToEnd?this._stop(Z,V):this.onEachCountObservable.notifyObservers(Z)},this._setState(0),this._contextObservable=f.contextObservable,this._observableParameters=f.observableParameters??{},this._breakCondition=f.breakCondition??(()=>!1),this._timeToEnd=f.timeout,f.onEnded&&this.onTimerEndedObservable.add(f.onEnded),f.oO&&this.onEachCountObservable.add(f.oO),f.onAborted&&this.onTimerAbortedObservable.add(f.onAborted)}set breakCondition(f){this._breakCondition=f}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=f,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(f){this._state=f,this.onStateChangedObservable.notifyObservers(this._state)}_stop(f){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),v?this.onTimerAbortedObservable.notifyObservers(f):this.onTimerEndedObservable.notifyObservers(f)}}var C=Z(11247),H=Z(11372),O=Z(13115);class u extends h.e{constructor(f){super(f),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",J.v),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",J.k,new O.b(-1))}_preparePendingTasks(f){const v=this.duration.getValue(f);if(v<0||isNaN(v)||!isFinite(v))return this._reportError(f,"Invalid duration in SetDelay block");if(f._getGlobalContextVariable("activeDelays",0)>=u.MaxParallelDelayCount)return this._reportError(f,"Max parallel delays reached");const Z=f._getGlobalContextVariable("lastDelayIndex",-1),V=f._getExecutionVariable(this,"pendingDelays",[]),h=f.configuration.Uv,J=new e({timeout:1e3*v,contextObservable:h.onBeforeRenderObservable,onEnded:()=>this._onEnded(J,f)});J.start();const l=Z+1;this.lastDelayIndex.setValue(new O.b(l),f),f._setGlobalContextVariable("lastDelayIndex",l),V[l]=J,f._setExecutionVariable(this,"pendingDelays",V),this._updateGlobalTimers(f)}_cancelPendingTasks(f){const v=f._getExecutionVariable(this,"pendingDelays",[]);for(const Z of v)null===Z||void 0===Z||Z.dispose();f._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new O.b(-1),f),this._updateGlobalTimers(f)}_execute(f,v){v!==this.cancel?(this._preparePendingTasks(f),this.out._activateSignal(f)):this._cancelPendingTasks(f)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(f,v){const Z=v._getExecutionVariable(this,"pendingDelays",[]),V=Z.indexOf(f);-1!==V?Z.splice(V,1):C.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),v._removePendingBlock(this),this.done._activateSignal(v),this._updateGlobalTimers(v)}_updateGlobalTimers(f){const v=f._getExecutionVariable(this,"pendingDelays",[]),Z=f._getGlobalContextVariable("pendingDelays",[]);for(let V=0;V<v.length;V++){if(!v[V])continue;const f=v[V];Z[V]&&Z[V]!==f?C.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):Z[V]=f}f._setGlobalContextVariable("pendingDelays",Z)}}u.MaxParallelDelayCount=100,(0,H.h)("FlowGraphSetDelayBlock",u)}}]);