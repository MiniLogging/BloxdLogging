"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[96],{14386:(I,E,j)=>{j.r(E),j.d(E,{FlowGraphSetDelayBlock:()=>o});var e,w=j(12852),z=j(12819),h=j(10960);!function(I){I[I.INIT=0]="INIT",I[I.STARTED=1]="STARTED",I[I.ENDED=2]="ENDED"}(e||(e={}));class t{constructor(I){this.onEachCountObservable=new h.e,this.onTimerAbortedObservable=new h.e,this.onTimerEndedObservable=new h.e,this.onStateChangedObservable=new h.e,this._observer=null,this._breakOnNextTick=!1,this._tick=I=>{const E=Date.now();this._timer=E-this._startTime;const j={startTime:this._startTime,currentTime:E,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Lj:I},e=this._breakOnNextTick||this._breakCondition(j);e||this._timer>=this._timeToEnd?this._stop(j,e):this.onEachCountObservable.notifyObservers(j)},this._setState(0),this._contextObservable=I.contextObservable,this._observableParameters=I.observableParameters??{},this._breakCondition=I.breakCondition??(()=>!1),this._timeToEnd=I.timeout,I.onEnded&&this.onTimerEndedObservable.add(I.onEnded),I.pP&&this.onEachCountObservable.add(I.pP),I.onAborted&&this.onTimerAbortedObservable.add(I.onAborted)}set breakCondition(I){this._breakCondition=I}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=I,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(I){this._state=I,this.onStateChangedObservable.notifyObservers(this._state)}_stop(I){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),E?this.onTimerAbortedObservable.notifyObservers(I):this.onTimerEndedObservable.notifyObservers(I)}}var U=j(10974),R=j(11073),P=j(12812);class o extends w.c{constructor(I){super(I),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",z.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",z.i,new P.b(-1))}_preparePendingTasks(I){const E=this.duration.getValue(I);if(E<0||isNaN(E)||!isFinite(E))return this._reportError(I,"Invalid duration in SetDelay block");if(I._getGlobalContextVariable("activeDelays",0)>=o.MaxParallelDelayCount)return this._reportError(I,"Max parallel delays reached");const j=I._getGlobalContextVariable("lastDelayIndex",-1),e=I._getExecutionVariable(this,"pendingDelays",[]),w=I.configuration.CE,z=new t({timeout:1e3*E,contextObservable:w.onBeforeRenderObservable,onEnded:()=>this._onEnded(z,I)});z.start();const h=j+1;this.lastDelayIndex.setValue(new P.b(h),I),I._setGlobalContextVariable("lastDelayIndex",h),e[h]=z,I._setExecutionVariable(this,"pendingDelays",e),this._updateGlobalTimers(I)}_cancelPendingTasks(I){const E=I._getExecutionVariable(this,"pendingDelays",[]);for(const j of E)null===j||void 0===j||j.dispose();I._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new P.b(-1),I),this._updateGlobalTimers(I)}_execute(I,E){E!==this.cancel?(this._preparePendingTasks(I),this.out._activateSignal(I)):this._cancelPendingTasks(I)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(I,E){const j=E._getExecutionVariable(this,"pendingDelays",[]),e=j.indexOf(I);-1!==e?j.splice(e,1):U.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),E._removePendingBlock(this),this.done._activateSignal(E),this._updateGlobalTimers(E)}_updateGlobalTimers(I){const E=I._getExecutionVariable(this,"pendingDelays",[]),j=I._getGlobalContextVariable("pendingDelays",[]);for(let e=0;e<E.length;e++){if(!E[e])continue;const I=E[e];j[e]&&j[e]!==I?U.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):j[e]=I}I._setGlobalContextVariable("pendingDelays",j)}}o.MaxParallelDelayCount=100,(0,R.h)("FlowGraphSetDelayBlock",o)}}]);