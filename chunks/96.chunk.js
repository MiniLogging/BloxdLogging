"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[96],{16282:(B,u,F)=>{F.r(u),F.d(u,{FlowGraphSetDelayBlock:()=>Q});var Z,V=F(14739),p=F(14701),G=F(12807);!function(B){B[B.INIT=0]="INIT",B[B.STARTED=1]="STARTED",B[B.ENDED=2]="ENDED"}(Z||(Z={}));class R{constructor(B){this.onEachCountObservable=new G.b,this.onTimerAbortedObservable=new G.b,this.onTimerEndedObservable=new G.b,this.onStateChangedObservable=new G.b,this._observer=null,this._breakOnNextTick=!1,this._tick=B=>{const u=Date.now();this._timer=u-this._startTime;const F={startTime:this._startTime,currentTime:u,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,DF:B},Z=this._breakOnNextTick||this._breakCondition(F);Z||this._timer>=this._timeToEnd?this._stop(F,Z):this.onEachCountObservable.notifyObservers(F)},this._setState(0),this._contextObservable=B.contextObservable,this._observableParameters=B.observableParameters??{},this._breakCondition=B.breakCondition??(()=>!1),this._timeToEnd=B.timeout,B.onEnded&&this.onTimerEndedObservable.add(B.onEnded),B.YQ&&this.onEachCountObservable.add(B.YQ),B.onAborted&&this.onTimerAbortedObservable.add(B.onAborted)}set breakCondition(B){this._breakCondition=B}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=B,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(B){this._state=B,this.onStateChangedObservable.notifyObservers(this._state)}_stop(B){let u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),u?this.onTimerAbortedObservable.notifyObservers(B):this.onTimerEndedObservable.notifyObservers(B)}}var e=F(12822),s=F(12949),Y=F(14694);class Q extends V.c{constructor(B){super(B),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",p.u),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",p.h,new Y.d(-1))}_preparePendingTasks(B){const u=this.duration.getValue(B);if(u<0||isNaN(u)||!isFinite(u))return this._reportError(B,"Invalid duration in SetDelay block");if(B._getGlobalContextVariable("activeDelays",0)>=Q.MaxParallelDelayCount)return this._reportError(B,"Max parallel delays reached");const F=B._getGlobalContextVariable("lastDelayIndex",-1),Z=B._getExecutionVariable(this,"pendingDelays",[]),V=B.configuration.qu,p=new R({timeout:1e3*u,contextObservable:V.onBeforeRenderObservable,onEnded:()=>this._onEnded(p,B)});p.start();const G=F+1;this.lastDelayIndex.setValue(new Y.d(G),B),B._setGlobalContextVariable("lastDelayIndex",G),Z[G]=p,B._setExecutionVariable(this,"pendingDelays",Z),this._updateGlobalTimers(B)}_cancelPendingTasks(B){const u=B._getExecutionVariable(this,"pendingDelays",[]);for(const F of u)null===F||void 0===F||F.dispose();B._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new Y.d(-1),B),this._updateGlobalTimers(B)}_execute(B,u){u!==this.cancel?(this._preparePendingTasks(B),this.out._activateSignal(B)):this._cancelPendingTasks(B)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(B,u){const F=u._getExecutionVariable(this,"pendingDelays",[]),Z=F.indexOf(B);-1!==Z?F.splice(Z,1):e.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),u._removePendingBlock(this),this.done._activateSignal(u),this._updateGlobalTimers(u)}_updateGlobalTimers(B){const u=B._getExecutionVariable(this,"pendingDelays",[]),F=B._getGlobalContextVariable("pendingDelays",[]);for(let Z=0;Z<u.length;Z++){if(!u[Z])continue;const B=u[Z];F[Z]&&F[Z]!==B?e.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):F[Z]=B}B._setGlobalContextVariable("pendingDelays",F)}}Q.MaxParallelDelayCount=100,(0,s.f)("FlowGraphSetDelayBlock",Q)}}]);