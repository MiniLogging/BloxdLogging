"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[96],{15421:(t,U,y)=>{y.r(U),y.d(U,{FlowGraphSetDelayBlock:()=>L});var I,r=y(13893),Y=y(13845),mt=y(12204);!function(t){t[t.INIT=0]="INIT",t[t.STARTED=1]="STARTED",t[t.ENDED=2]="ENDED"}(I||(I={}));class X{constructor(t){this.onEachCountObservable=new mt.b,this.onTimerAbortedObservable=new mt.b,this.onTimerEndedObservable=new mt.b,this.onStateChangedObservable=new mt.b,this._observer=null,this._breakOnNextTick=!1,this._tick=t=>{const U=Date.now();this._timer=U-this._startTime;const y={startTime:this._startTime,currentTime:U,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,ly:t},I=this._breakOnNextTick||this._breakCondition(y);I||this._timer>=this._timeToEnd?this._stop(y,I):this.onEachCountObservable.notifyObservers(y)},this._setState(0),this._contextObservable=t.contextObservable,this._observableParameters=t.observableParameters??{},this._breakCondition=t.breakCondition??(()=>!1),this._timeToEnd=t.timeout,t.onEnded&&this.onTimerEndedObservable.add(t.onEnded),t.CM&&this.onEachCountObservable.add(t.CM),t.onAborted&&this.onTimerAbortedObservable.add(t.onAborted)}set breakCondition(t){this._breakCondition=t}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=t,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(t){this._state=t,this.onStateChangedObservable.notifyObservers(this._state)}_stop(t){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),U?this.onTimerAbortedObservable.notifyObservers(t):this.onTimerEndedObservable.notifyObservers(t)}}var P=y(12221),G=y(12338),M=y(13842);class L extends r.e{constructor(t){super(t),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",Y.w),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",Y.j,new M.c(-1))}_preparePendingTasks(t){const U=this.duration.getValue(t);if(U<0||isNaN(U)||!isFinite(U))return this._reportError(t,"Invalid duration in SetDelay block");if(t._getGlobalContextVariable("activeDelays",0)>=L.MaxParallelDelayCount)return this._reportError(t,"Max parallel delays reached");const y=t._getGlobalContextVariable("lastDelayIndex",-1),I=t._getExecutionVariable(this,"pendingDelays",[]),r=t.configuration.gU,Y=new X({timeout:1e3*U,contextObservable:r.onBeforeRenderObservable,onEnded:()=>this._onEnded(Y,t)});Y.start();const mt=y+1;this.lastDelayIndex.setValue(new M.c(mt),t),t._setGlobalContextVariable("lastDelayIndex",mt),I[mt]=Y,t._setExecutionVariable(this,"pendingDelays",I),this._updateGlobalTimers(t)}_cancelPendingTasks(t){const U=t._getExecutionVariable(this,"pendingDelays",[]);for(const y of U)null===y||void 0===y||y.dispose();t._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new M.c(-1),t),this._updateGlobalTimers(t)}_execute(t,U){U!==this.cancel?(this._preparePendingTasks(t),this.out._activateSignal(t)):this._cancelPendingTasks(t)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(t,U){const y=U._getExecutionVariable(this,"pendingDelays",[]),I=y.indexOf(t);-1!==I?y.splice(I,1):P.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),U._removePendingBlock(this),this.done._activateSignal(U),this._updateGlobalTimers(U)}_updateGlobalTimers(t){const U=t._getExecutionVariable(this,"pendingDelays",[]),y=t._getGlobalContextVariable("pendingDelays",[]);for(let I=0;I<U.length;I++){if(!U[I])continue;const t=U[I];y[I]&&y[I]!==t?P.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):y[I]=t}t._setGlobalContextVariable("pendingDelays",y)}}L.MaxParallelDelayCount=100,(0,G.f)("FlowGraphSetDelayBlock",L)}}]);