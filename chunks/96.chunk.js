"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[96],{15400:(I,O,C)=>{C.r(O),C.d(O,{FlowGraphSetDelayBlock:()=>Q});var j,K=C(13938),i=C(13886),y=C(12088);!function(I){I[I.INIT=0]="INIT",I[I.STARTED=1]="STARTED",I[I.ENDED=2]="ENDED"}(j||(j={}));class S{constructor(I){this.onEachCountObservable=new y.c,this.onTimerAbortedObservable=new y.c,this.onTimerEndedObservable=new y.c,this.onStateChangedObservable=new y.c,this._observer=null,this._breakOnNextTick=!1,this._tick=I=>{const O=Date.now();this._timer=O-this._startTime;const C={startTime:this._startTime,currentTime:O,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,mj:I},j=this._breakOnNextTick||this._breakCondition(C);j||this._timer>=this._timeToEnd?this._stop(C,j):this.onEachCountObservable.notifyObservers(C)},this._setState(0),this._contextObservable=I.contextObservable,this._observableParameters=I.observableParameters??{},this._breakCondition=I.breakCondition??(()=>!1),this._timeToEnd=I.timeout,I.onEnded&&this.onTimerEndedObservable.add(I.onEnded),I.VN&&this.onEachCountObservable.add(I.VN),I.onAborted&&this.onTimerAbortedObservable.add(I.onAborted)}set breakCondition(I){this._breakCondition=I}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=I,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(I){this._state=I,this.onStateChangedObservable.notifyObservers(this._state)}_stop(I){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),O?this.onTimerAbortedObservable.notifyObservers(I):this.onTimerEndedObservable.notifyObservers(I)}}var U=C(12103),p=C(12226),N=C(13878);class Q extends K.b{constructor(I){super(I),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",i.u),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",i.h,new N.e(-1))}_preparePendingTasks(I){const O=this.duration.getValue(I);if(O<0||isNaN(O)||!isFinite(O))return this._reportError(I,"Invalid duration in SetDelay block");if(I._getGlobalContextVariable("activeDelays",0)>=Q.MaxParallelDelayCount)return this._reportError(I,"Max parallel delays reached");const C=I._getGlobalContextVariable("lastDelayIndex",-1),j=I._getExecutionVariable(this,"pendingDelays",[]),K=I.configuration.hO,i=new S({timeout:1e3*O,contextObservable:K.onBeforeRenderObservable,onEnded:()=>this._onEnded(i,I)});i.start();const y=C+1;this.lastDelayIndex.setValue(new N.e(y),I),I._setGlobalContextVariable("lastDelayIndex",y),j[y]=i,I._setExecutionVariable(this,"pendingDelays",j),this._updateGlobalTimers(I)}_cancelPendingTasks(I){const O=I._getExecutionVariable(this,"pendingDelays",[]);for(const C of O)null===C||void 0===C||C.dispose();I._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new N.e(-1),I),this._updateGlobalTimers(I)}_execute(I,O){O!==this.cancel?(this._preparePendingTasks(I),this.out._activateSignal(I)):this._cancelPendingTasks(I)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(I,O){const C=O._getExecutionVariable(this,"pendingDelays",[]),j=C.indexOf(I);-1!==j?C.splice(j,1):U.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),O._removePendingBlock(this),this.done._activateSignal(O),this._updateGlobalTimers(O)}_updateGlobalTimers(I){const O=I._getExecutionVariable(this,"pendingDelays",[]),C=I._getGlobalContextVariable("pendingDelays",[]);for(let j=0;j<O.length;j++){if(!O[j])continue;const I=O[j];C[j]&&C[j]!==I?U.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):C[j]=I}I._setGlobalContextVariable("pendingDelays",C)}}Q.MaxParallelDelayCount=100,(0,p.e)("FlowGraphSetDelayBlock",Q)}}]);