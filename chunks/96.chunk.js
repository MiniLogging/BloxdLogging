"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[96],{15901:(s,k,h)=>{h.r(k),h.d(k,{FlowGraphSetDelayBlock:()=>S});var A,g=h(14344),ms=h(14315),i=h(12408);!function(s){s[s.INIT=0]="INIT",s[s.STARTED=1]="STARTED",s[s.ENDED=2]="ENDED"}(A||(A={}));class K{constructor(s){this.onEachCountObservable=new i.c,this.onTimerAbortedObservable=new i.c,this.onTimerEndedObservable=new i.c,this.onStateChangedObservable=new i.c,this._observer=null,this._breakOnNextTick=!1,this._tick=s=>{const k=Date.now();this._timer=k-this._startTime;const h={startTime:this._startTime,currentTime:k,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,zh:s},A=this._breakOnNextTick||this._breakCondition(h);A||this._timer>=this._timeToEnd?this._stop(h,A):this.onEachCountObservable.notifyObservers(h)},this._setState(0),this._contextObservable=s.contextObservable,this._observableParameters=s.observableParameters??{},this._breakCondition=s.breakCondition??(()=>!1),this._timeToEnd=s.timeout,s.onEnded&&this.onTimerEndedObservable.add(s.onEnded),s.XS&&this.onEachCountObservable.add(s.XS),s.onAborted&&this.onTimerAbortedObservable.add(s.onAborted)}set breakCondition(s){this._breakCondition=s}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=s,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(s){this._state=s,this.onStateChangedObservable.notifyObservers(this._state)}_stop(s){let k=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),k?this.onTimerAbortedObservable.notifyObservers(s):this.onTimerEndedObservable.notifyObservers(s)}}var H=h(12422),O=h(12543),c=h(14313);class S extends g.b{constructor(s){super(s),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",ms.m),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",ms.e,new c.c(-1))}_preparePendingTasks(s){const k=this.duration.getValue(s);if(k<0||isNaN(k)||!isFinite(k))return this._reportError(s,"Invalid duration in SetDelay block");if(s._getGlobalContextVariable("activeDelays",0)>=S.MaxParallelDelayCount)return this._reportError(s,"Max parallel delays reached");const h=s._getGlobalContextVariable("lastDelayIndex",-1),A=s._getExecutionVariable(this,"pendingDelays",[]),g=s.configuration.Dk,ms=new K({timeout:1e3*k,contextObservable:g.onBeforeRenderObservable,onEnded:()=>this._onEnded(ms,s)});ms.start();const i=h+1;this.lastDelayIndex.setValue(new c.c(i),s),s._setGlobalContextVariable("lastDelayIndex",i),A[i]=ms,s._setExecutionVariable(this,"pendingDelays",A),this._updateGlobalTimers(s)}_cancelPendingTasks(s){const k=s._getExecutionVariable(this,"pendingDelays",[]);for(const h of k)null===h||void 0===h||h.dispose();s._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new c.c(-1),s),this._updateGlobalTimers(s)}_execute(s,k){k!==this.cancel?(this._preparePendingTasks(s),this.out._activateSignal(s)):this._cancelPendingTasks(s)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(s,k){const h=k._getExecutionVariable(this,"pendingDelays",[]),A=h.indexOf(s);-1!==A?h.splice(A,1):H.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),k._removePendingBlock(this),this.done._activateSignal(k),this._updateGlobalTimers(k)}_updateGlobalTimers(s){const k=s._getExecutionVariable(this,"pendingDelays",[]),h=s._getGlobalContextVariable("pendingDelays",[]);for(let A=0;A<k.length;A++){if(!k[A])continue;const s=k[A];h[A]&&h[A]!==s?H.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):h[A]=s}s._setGlobalContextVariable("pendingDelays",h)}}S.MaxParallelDelayCount=100,(0,O.f)("FlowGraphSetDelayBlock",S)}}]);