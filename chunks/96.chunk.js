"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[96],{15543:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphSetDelayBlock:()=>o});var l,w=A(14029),N=A(13993),p=A(12153);!function(y){y[y.INIT=0]="INIT",y[y.STARTED=1]="STARTED",y[y.ENDED=2]="ENDED"}(l||(l={}));class W{constructor(y){this.onEachCountObservable=new p.d,this.onTimerAbortedObservable=new p.d,this.onTimerEndedObservable=new p.d,this.onStateChangedObservable=new p.d,this._observer=null,this._breakOnNextTick=!1,this._tick=y=>{const c=Date.now();this._timer=c-this._startTime;const A={startTime:this._startTime,currentTime:c,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,EA:y},l=this._breakOnNextTick||this._breakCondition(A);l||this._timer>=this._timeToEnd?this._stop(A,l):this.onEachCountObservable.notifyObservers(A)},this._setState(0),this._contextObservable=y.contextObservable,this._observableParameters=y.observableParameters??{},this._breakCondition=y.breakCondition??(()=>!1),this._timeToEnd=y.timeout,y.onEnded&&this.onTimerEndedObservable.add(y.onEnded),y.Do&&this.onEachCountObservable.add(y.Do),y.onAborted&&this.onTimerAbortedObservable.add(y.onAborted)}set breakCondition(y){this._breakCondition=y}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=y,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(y){this._state=y,this.onStateChangedObservable.notifyObservers(this._state)}_stop(y){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),c?this.onTimerAbortedObservable.notifyObservers(y):this.onTimerEndedObservable.notifyObservers(y)}}var h=A(12161),I=A(12283),q=A(13986);class o extends w.c{constructor(y){super(y),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",N.s),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",N.j,new q.b(-1))}_preparePendingTasks(y){const c=this.duration.getValue(y);if(c<0||isNaN(c)||!isFinite(c))return this._reportError(y,"Invalid duration in SetDelay block");if(y._getGlobalContextVariable("activeDelays",0)>=o.MaxParallelDelayCount)return this._reportError(y,"Max parallel delays reached");const A=y._getGlobalContextVariable("lastDelayIndex",-1),l=y._getExecutionVariable(this,"pendingDelays",[]),w=y.configuration.Fc,N=new W({timeout:1e3*c,contextObservable:w.onBeforeRenderObservable,onEnded:()=>this._onEnded(N,y)});N.start();const p=A+1;this.lastDelayIndex.setValue(new q.b(p),y),y._setGlobalContextVariable("lastDelayIndex",p),l[p]=N,y._setExecutionVariable(this,"pendingDelays",l),this._updateGlobalTimers(y)}_cancelPendingTasks(y){const c=y._getExecutionVariable(this,"pendingDelays",[]);for(const A of c)null===A||void 0===A||A.dispose();y._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new q.b(-1),y),this._updateGlobalTimers(y)}_execute(y,c){c!==this.cancel?(this._preparePendingTasks(y),this.out._activateSignal(y)):this._cancelPendingTasks(y)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(y,c){const A=c._getExecutionVariable(this,"pendingDelays",[]),l=A.indexOf(y);-1!==l?A.splice(l,1):h.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),c._removePendingBlock(this),this.done._activateSignal(c),this._updateGlobalTimers(c)}_updateGlobalTimers(y){const c=y._getExecutionVariable(this,"pendingDelays",[]),A=y._getGlobalContextVariable("pendingDelays",[]);for(let l=0;l<c.length;l++){if(!c[l])continue;const y=c[l];A[l]&&A[l]!==y?h.c.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):A[l]=y}y._setGlobalContextVariable("pendingDelays",A)}}o.MaxParallelDelayCount=100,(0,I.f)("FlowGraphSetDelayBlock",o)}}]);