"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[96],{15569:(N,p,T)=>{T.r(p),T.d(p,{FlowGraphSetDelayBlock:()=>M});var A,a=T(14127),C=T(14082),U=T(12194);!function(N){N[N.INIT=0]="INIT",N[N.STARTED=1]="STARTED",N[N.ENDED=2]="ENDED"}(A||(A={}));class X{constructor(N){this.onEachCountObservable=new U.c,this.onTimerAbortedObservable=new U.c,this.onTimerEndedObservable=new U.c,this.onStateChangedObservable=new U.c,this._observer=null,this._breakOnNextTick=!1,this._tick=N=>{const p=Date.now();this._timer=p-this._startTime;const T={startTime:this._startTime,currentTime:p,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,LT:N},A=this._breakOnNextTick||this._breakCondition(T);A||this._timer>=this._timeToEnd?this._stop(T,A):this.onEachCountObservable.notifyObservers(T)},this._setState(0),this._contextObservable=N.contextObservable,this._observableParameters=N.observableParameters??{},this._breakCondition=N.breakCondition??(()=>!1),this._timeToEnd=N.timeout,N.onEnded&&this.onTimerEndedObservable.add(N.onEnded),N.eM&&this.onEachCountObservable.add(N.eM),N.onAborted&&this.onTimerAbortedObservable.add(N.onAborted)}set breakCondition(N){this._breakCondition=N}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=N,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(N){this._state=N,this.onStateChangedObservable.notifyObservers(this._state)}_stop(N){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),p?this.onTimerAbortedObservable.notifyObservers(N):this.onTimerEndedObservable.notifyObservers(N)}}var y=T(12205),e=T(12331),H=T(14079);class M extends a.e{constructor(N){super(N),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",C.r),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",C.h,new H.c(-1))}_preparePendingTasks(N){const p=this.duration.getValue(N);if(p<0||isNaN(p)||!isFinite(p))return this._reportError(N,"Invalid duration in SetDelay block");if(N._getGlobalContextVariable("activeDelays",0)>=M.MaxParallelDelayCount)return this._reportError(N,"Max parallel delays reached");const T=N._getGlobalContextVariable("lastDelayIndex",-1),A=N._getExecutionVariable(this,"pendingDelays",[]),a=N.configuration.Lp,C=new X({timeout:1e3*p,contextObservable:a.onBeforeRenderObservable,onEnded:()=>this._onEnded(C,N)});C.start();const U=T+1;this.lastDelayIndex.setValue(new H.c(U),N),N._setGlobalContextVariable("lastDelayIndex",U),A[U]=C,N._setExecutionVariable(this,"pendingDelays",A),this._updateGlobalTimers(N)}_cancelPendingTasks(N){const p=N._getExecutionVariable(this,"pendingDelays",[]);for(const T of p)null===T||void 0===T||T.dispose();N._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new H.c(-1),N),this._updateGlobalTimers(N)}_execute(N,p){p!==this.cancel?(this._preparePendingTasks(N),this.out._activateSignal(N)):this._cancelPendingTasks(N)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(N,p){const T=p._getExecutionVariable(this,"pendingDelays",[]),A=T.indexOf(N);-1!==A?T.splice(A,1):y.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),p._removePendingBlock(this),this.done._activateSignal(p),this._updateGlobalTimers(p)}_updateGlobalTimers(N){const p=N._getExecutionVariable(this,"pendingDelays",[]),T=N._getGlobalContextVariable("pendingDelays",[]);for(let A=0;A<p.length;A++){if(!p[A])continue;const N=p[A];T[A]&&T[A]!==N?y.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):T[A]=N}N._setGlobalContextVariable("pendingDelays",T)}}M.MaxParallelDelayCount=100,(0,e.d)("FlowGraphSetDelayBlock",M)}}]);