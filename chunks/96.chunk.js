"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14542:(w,p,e)=>{e.r(p),e.d(p,{FlowGraphSetVariableBlock:()=>f});var r=e(11038),I=e(12920),d=e(12872);class f extends I.c{constructor(w){if(super(w),!w.variable&&!w.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(w.variables&&w.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(w.variables)for(const p of w.variables)this.registerDataInput(p,d.c);else this.registerDataInput("value",d.c)}_execute(w,p){var e,r;if(null!==(e=this.config)&&void 0!==e&&e.variables)for(const I of this.config.variables)this._saveVariable(w,I);else this._saveVariable(w,null===(r=this.config)||void 0===r?void 0:r.variable,"value");this.out._activateSignal(w)}_saveVariable(w,p,e){var r;const I=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const f of I){const e=w.assetsContext.animationGroups.find((w=>w.uniqueId==f));if(e)for(const r of e.targetedAnimations)if(r.target===w&&r.animation.targetProperty===p){e.stop();const p=I.indexOf(f);p>-1&&I.splice(p,1),w._setGlobalContextVariable("currentlyRunningAnimationGroups",I);break}}const d=null===(r=this.getDataInput(e||p))||void 0===r?void 0:r.getValue(w);w.setVariable(p,d)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(w){var p;super.serialize(w),w.config.variable=null===(p=this.config)||void 0===p?void 0:p.variable}}(0,r.d)("FlowGraphSetVariableBlock",f)}}]);