"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[96],{15404:(Z,l,C)=>{C.r(l),C.d(l,{FlowGraphSetDelayBlock:()=>E});var B,x=C(13866),b=C(13830),K=C(12251);!function(Z){Z[Z.INIT=0]="INIT",Z[Z.STARTED=1]="STARTED",Z[Z.ENDED=2]="ENDED"}(B||(B={}));class f{constructor(Z){this.onEachCountObservable=new K.b,this.onTimerAbortedObservable=new K.b,this.onTimerEndedObservable=new K.b,this.onStateChangedObservable=new K.b,this._observer=null,this._breakOnNextTick=!1,this._tick=Z=>{const l=Date.now();this._timer=l-this._startTime;const C={startTime:this._startTime,currentTime:l,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,qC:Z},B=this._breakOnNextTick||this._breakCondition(C);B||this._timer>=this._timeToEnd?this._stop(C,B):this.onEachCountObservable.notifyObservers(C)},this._setState(0),this._contextObservable=Z.contextObservable,this._observableParameters=Z.observableParameters??{},this._breakCondition=Z.breakCondition??(()=>!1),this._timeToEnd=Z.timeout,Z.onEnded&&this.onTimerEndedObservable.add(Z.onEnded),Z.LE&&this.onEachCountObservable.add(Z.LE),Z.onAborted&&this.onTimerAbortedObservable.add(Z.onAborted)}set breakCondition(Z){this._breakCondition=Z}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=Z,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(Z){this._state=Z,this.onStateChangedObservable.notifyObservers(this._state)}_stop(Z){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),l?this.onTimerAbortedObservable.notifyObservers(Z):this.onTimerEndedObservable.notifyObservers(Z)}}var W=C(12263),J=C(12400),d=C(13828);class E extends x.e{constructor(Z){super(Z),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",b.o),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",b.i,new d.b(-1))}_preparePendingTasks(Z){const l=this.duration.getValue(Z);if(l<0||isNaN(l)||!isFinite(l))return this._reportError(Z,"Invalid duration in SetDelay block");if(Z._getGlobalContextVariable("activeDelays",0)>=E.MaxParallelDelayCount)return this._reportError(Z,"Max parallel delays reached");const C=Z._getGlobalContextVariable("lastDelayIndex",-1),B=Z._getExecutionVariable(this,"pendingDelays",[]),x=Z.configuration.Yl,b=new f({timeout:1e3*l,contextObservable:x.onBeforeRenderObservable,onEnded:()=>this._onEnded(b,Z)});b.start();const K=C+1;this.lastDelayIndex.setValue(new d.b(K),Z),Z._setGlobalContextVariable("lastDelayIndex",K),B[K]=b,Z._setExecutionVariable(this,"pendingDelays",B),this._updateGlobalTimers(Z)}_cancelPendingTasks(Z){const l=Z._getExecutionVariable(this,"pendingDelays",[]);for(const C of l)null===C||void 0===C||C.dispose();Z._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new d.b(-1),Z),this._updateGlobalTimers(Z)}_execute(Z,l){l!==this.cancel?(this._preparePendingTasks(Z),this.out._activateSignal(Z)):this._cancelPendingTasks(Z)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(Z,l){const C=l._getExecutionVariable(this,"pendingDelays",[]),B=C.indexOf(Z);-1!==B?C.splice(B,1):W.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),l._removePendingBlock(this),this.done._activateSignal(l),this._updateGlobalTimers(l)}_updateGlobalTimers(Z){const l=Z._getExecutionVariable(this,"pendingDelays",[]),C=Z._getGlobalContextVariable("pendingDelays",[]);for(let B=0;B<l.length;B++){if(!l[B])continue;const Z=l[B];C[B]&&C[B]!==Z?W.e.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):C[B]=Z}Z._setGlobalContextVariable("pendingDelays",C)}}E.MaxParallelDelayCount=100,(0,J.c)("FlowGraphSetDelayBlock",E)}}]);