"use strict";(self.i6szn8jgzh=self.i6szn8jgzh||[]).push([[96],{15113:(b,n,i)=>{i.r(n),i.d(n,{FlowGraphSetDelayBlock:()=>N});var e,V=i(13574),Q=i(13522),U=i(11612);!function(b){b[b.INIT=0]="INIT",b[b.STARTED=1]="STARTED",b[b.ENDED=2]="ENDED"}(e||(e={}));class Y{constructor(b){this.onEachCountObservable=new U.e,this.onTimerAbortedObservable=new U.e,this.onTimerEndedObservable=new U.e,this.onStateChangedObservable=new U.e,this._observer=null,this._breakOnNextTick=!1,this._tick=b=>{const n=Date.now();this._timer=n-this._startTime;const i={startTime:this._startTime,currentTime:n,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,oi:b},e=this._breakOnNextTick||this._breakCondition(i);e||this._timer>=this._timeToEnd?this._stop(i,e):this.onEachCountObservable.notifyObservers(i)},this._setState(0),this._contextObservable=b.contextObservable,this._observableParameters=b.observableParameters??{},this._breakCondition=b.breakCondition??(()=>!1),this._timeToEnd=b.timeout,b.onEnded&&this.onTimerEndedObservable.add(b.onEnded),b.wm&&this.onEachCountObservable.add(b.wm),b.onAborted&&this.onTimerAbortedObservable.add(b.onAborted)}set breakCondition(b){this._breakCondition=b}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=b,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(b){this._state=b,this.onStateChangedObservable.notifyObservers(this._state)}_stop(b){let n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),n?this.onTimerAbortedObservable.notifyObservers(b):this.onTimerEndedObservable.notifyObservers(b)}}var L=i(11621),B=i(11734),mb=i(13513);class N extends V.c{constructor(b){super(b),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",Q.q),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",Q.h,new mb.b(-1))}_preparePendingTasks(b){const n=this.duration.getValue(b);if(n<0||isNaN(n)||!isFinite(n))return this._reportError(b,"Invalid duration in SetDelay block");if(b._getGlobalContextVariable("activeDelays",0)>=N.MaxParallelDelayCount)return this._reportError(b,"Max parallel delays reached");const i=b._getGlobalContextVariable("lastDelayIndex",-1),e=b._getExecutionVariable(this,"pendingDelays",[]),V=b.configuration.dn,Q=new Y({timeout:1e3*n,contextObservable:V.onBeforeRenderObservable,onEnded:()=>this._onEnded(Q,b)});Q.start();const U=i+1;this.lastDelayIndex.setValue(new mb.b(U),b),b._setGlobalContextVariable("lastDelayIndex",U),e[U]=Q,b._setExecutionVariable(this,"pendingDelays",e),this._updateGlobalTimers(b)}_cancelPendingTasks(b){const n=b._getExecutionVariable(this,"pendingDelays",[]);for(const i of n)null===i||void 0===i||i.dispose();b._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new mb.b(-1),b),this._updateGlobalTimers(b)}_execute(b,n){n!==this.cancel?(this._preparePendingTasks(b),this.out._activateSignal(b)):this._cancelPendingTasks(b)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(b,n){const i=n._getExecutionVariable(this,"pendingDelays",[]),e=i.indexOf(b);-1!==e?i.splice(e,1):L.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),n._removePendingBlock(this),this.done._activateSignal(n),this._updateGlobalTimers(n)}_updateGlobalTimers(b){const n=b._getExecutionVariable(this,"pendingDelays",[]),i=b._getGlobalContextVariable("pendingDelays",[]);for(let e=0;e<n.length;e++){if(!n[e])continue;const b=n[e];i[e]&&i[e]!==b?L.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):i[e]=b}b._setGlobalContextVariable("pendingDelays",i)}}N.MaxParallelDelayCount=100,(0,B.i)("FlowGraphSetDelayBlock",N)}}]);