"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[96],{15753:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphSetDelayBlock:()=>x});var g,E=V(14281),I=V(14241),Q=V(12297);!function(o){o[o.INIT=0]="INIT",o[o.STARTED=1]="STARTED",o[o.ENDED=2]="ENDED"}(g||(g={}));class U{constructor(o){this.onEachCountObservable=new Q.e,this.onTimerAbortedObservable=new Q.e,this.onTimerEndedObservable=new Q.e,this.onStateChangedObservable=new Q.e,this._observer=null,this._breakOnNextTick=!1,this._tick=o=>{const v=Date.now();this._timer=v-this._startTime;const V={startTime:this._startTime,currentTime:v,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,jV:o},g=this._breakOnNextTick||this._breakCondition(V);g||this._timer>=this._timeToEnd?this._stop(V,g):this.onEachCountObservable.notifyObservers(V)},this._setState(0),this._contextObservable=o.contextObservable,this._observableParameters=o.observableParameters??{},this._breakCondition=o.breakCondition??(()=>!1),this._timeToEnd=o.timeout,o.onEnded&&this.onTimerEndedObservable.add(o.onEnded),o.Ix&&this.onEachCountObservable.add(o.Ix),o.onAborted&&this.onTimerAbortedObservable.add(o.onAborted)}set breakCondition(o){this._breakCondition=o}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=o,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(o){this._state=o,this.onStateChangedObservable.notifyObservers(this._state)}_stop(o){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),v?this.onTimerAbortedObservable.notifyObservers(o):this.onTimerEndedObservable.notifyObservers(o)}}var n=V(12308),O=V(12449),h=V(14236);class x extends E.e{constructor(o){super(o),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",I.t),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",I.i,new h.c(-1))}_preparePendingTasks(o){const v=this.duration.getValue(o);if(v<0||isNaN(v)||!isFinite(v))return this._reportError(o,"Invalid duration in SetDelay block");if(o._getGlobalContextVariable("activeDelays",0)>=x.MaxParallelDelayCount)return this._reportError(o,"Max parallel delays reached");const V=o._getGlobalContextVariable("lastDelayIndex",-1),g=o._getExecutionVariable(this,"pendingDelays",[]),E=o.configuration.jv,I=new U({timeout:1e3*v,contextObservable:E.onBeforeRenderObservable,onEnded:()=>this._onEnded(I,o)});I.start();const Q=V+1;this.lastDelayIndex.setValue(new h.c(Q),o),o._setGlobalContextVariable("lastDelayIndex",Q),g[Q]=I,o._setExecutionVariable(this,"pendingDelays",g),this._updateGlobalTimers(o)}_cancelPendingTasks(o){const v=o._getExecutionVariable(this,"pendingDelays",[]);for(const V of v)null===V||void 0===V||V.dispose();o._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new h.c(-1),o),this._updateGlobalTimers(o)}_execute(o,v){v!==this.cancel?(this._preparePendingTasks(o),this.out._activateSignal(o)):this._cancelPendingTasks(o)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(o,v){const V=v._getExecutionVariable(this,"pendingDelays",[]),g=V.indexOf(o);-1!==g?V.splice(g,1):n.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),v._removePendingBlock(this),this.done._activateSignal(v),this._updateGlobalTimers(v)}_updateGlobalTimers(o){const v=o._getExecutionVariable(this,"pendingDelays",[]),V=o._getGlobalContextVariable("pendingDelays",[]);for(let g=0;g<v.length;g++){if(!v[g])continue;const o=v[g];V[g]&&V[g]!==o?n.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):V[g]=o}o._setGlobalContextVariable("pendingDelays",V)}}x.MaxParallelDelayCount=100,(0,O.h)("FlowGraphSetDelayBlock",x)}}]);