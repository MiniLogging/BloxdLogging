"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[96],{15003:(E,t,z)=>{z.r(t),z.d(t,{FlowGraphSetDelayBlock:()=>h});var A,X=z(13509),R=z(13458),u=z(11632);!function(E){E[E.INIT=0]="INIT",E[E.STARTED=1]="STARTED",E[E.ENDED=2]="ENDED"}(A||(A={}));class p{constructor(E){this.onEachCountObservable=new u.b,this.onTimerAbortedObservable=new u.b,this.onTimerEndedObservable=new u.b,this.onStateChangedObservable=new u.b,this._observer=null,this._breakOnNextTick=!1,this._tick=E=>{const t=Date.now();this._timer=t-this._startTime;const z={startTime:this._startTime,currentTime:t,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Sz:E},A=this._breakOnNextTick||this._breakCondition(z);A||this._timer>=this._timeToEnd?this._stop(z,A):this.onEachCountObservable.notifyObservers(z)},this._setState(0),this._contextObservable=E.contextObservable,this._observableParameters=E.observableParameters??{},this._breakCondition=E.breakCondition??(()=>!1),this._timeToEnd=E.timeout,E.onEnded&&this.onTimerEndedObservable.add(E.onEnded),E.rH&&this.onEachCountObservable.add(E.rH),E.onAborted&&this.onTimerAbortedObservable.add(E.onAborted)}set breakCondition(E){this._breakCondition=E}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=E,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(E){this._state=E,this.onStateChangedObservable.notifyObservers(this._state)}_stop(E){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),t?this.onTimerAbortedObservable.notifyObservers(E):this.onTimerEndedObservable.notifyObservers(E)}}var C=z(11640),Z=z(11766),H=z(13456);class h extends X.c{constructor(E){super(E),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",R.p),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",R.e,new H.e(-1))}_preparePendingTasks(E){const t=this.duration.getValue(E);if(t<0||isNaN(t)||!isFinite(t))return this._reportError(E,"Invalid duration in SetDelay block");if(E._getGlobalContextVariable("activeDelays",0)>=h.MaxParallelDelayCount)return this._reportError(E,"Max parallel delays reached");const z=E._getGlobalContextVariable("lastDelayIndex",-1),A=E._getExecutionVariable(this,"pendingDelays",[]),X=E.configuration.It,R=new p({timeout:1e3*t,contextObservable:X.onBeforeRenderObservable,onEnded:()=>this._onEnded(R,E)});R.start();const u=z+1;this.lastDelayIndex.setValue(new H.e(u),E),E._setGlobalContextVariable("lastDelayIndex",u),A[u]=R,E._setExecutionVariable(this,"pendingDelays",A),this._updateGlobalTimers(E)}_cancelPendingTasks(E){const t=E._getExecutionVariable(this,"pendingDelays",[]);for(const z of t)null===z||void 0===z||z.dispose();E._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new H.e(-1),E),this._updateGlobalTimers(E)}_execute(E,t){t!==this.cancel?(this._preparePendingTasks(E),this.out._activateSignal(E)):this._cancelPendingTasks(E)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(E,t){const z=t._getExecutionVariable(this,"pendingDelays",[]),A=z.indexOf(E);-1!==A?z.splice(A,1):C.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),t._removePendingBlock(this),this.done._activateSignal(t),this._updateGlobalTimers(t)}_updateGlobalTimers(E){const t=E._getExecutionVariable(this,"pendingDelays",[]),z=E._getGlobalContextVariable("pendingDelays",[]);for(let A=0;A<t.length;A++){if(!t[A])continue;const E=t[A];z[A]&&z[A]!==E?C.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):z[A]=E}E._setGlobalContextVariable("pendingDelays",z)}}h.MaxParallelDelayCount=100,(0,Z.f)("FlowGraphSetDelayBlock",h)}}]);