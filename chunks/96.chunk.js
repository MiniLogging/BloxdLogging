"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[96],{15376:(L,r,p)=>{p.r(r),p.d(r,{FlowGraphSetDelayBlock:()=>E});var J,i=p(13913),n=p(13868),j=p(11964);!function(L){L[L.INIT=0]="INIT",L[L.STARTED=1]="STARTED",L[L.ENDED=2]="ENDED"}(J||(J={}));class z{constructor(L){this.onEachCountObservable=new j.c,this.onTimerAbortedObservable=new j.c,this.onTimerEndedObservable=new j.c,this.onStateChangedObservable=new j.c,this._observer=null,this._breakOnNextTick=!1,this._tick=L=>{const r=Date.now();this._timer=r-this._startTime;const p={startTime:this._startTime,currentTime:r,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,Wp:L},J=this._breakOnNextTick||this._breakCondition(p);J||this._timer>=this._timeToEnd?this._stop(p,J):this.onEachCountObservable.notifyObservers(p)},this._setState(0),this._contextObservable=L.contextObservable,this._observableParameters=L.observableParameters??{},this._breakCondition=L.breakCondition??(()=>!1),this._timeToEnd=L.timeout,L.onEnded&&this.onTimerEndedObservable.add(L.onEnded),L.Ht&&this.onEachCountObservable.add(L.Ht),L.onAborted&&this.onTimerAbortedObservable.add(L.onAborted)}set breakCondition(L){this._breakCondition=L}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=L,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(L){this._state=L,this.onStateChangedObservable.notifyObservers(this._state)}_stop(L){let r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),r?this.onTimerAbortedObservable.notifyObservers(L):this.onTimerEndedObservable.notifyObservers(L)}}var G=p(11975),C=p(12087),t=p(13864);class E extends i.d{constructor(L){super(L),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",n.v),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",n.k,new t.b(-1))}_preparePendingTasks(L){const r=this.duration.getValue(L);if(r<0||isNaN(r)||!isFinite(r))return this._reportError(L,"Invalid duration in SetDelay block");if(L._getGlobalContextVariable("activeDelays",0)>=E.MaxParallelDelayCount)return this._reportError(L,"Max parallel delays reached");const p=L._getGlobalContextVariable("lastDelayIndex",-1),J=L._getExecutionVariable(this,"pendingDelays",[]),i=L.configuration.Or,n=new z({timeout:1e3*r,contextObservable:i.onBeforeRenderObservable,onEnded:()=>this._onEnded(n,L)});n.start();const j=p+1;this.lastDelayIndex.setValue(new t.b(j),L),L._setGlobalContextVariable("lastDelayIndex",j),J[j]=n,L._setExecutionVariable(this,"pendingDelays",J),this._updateGlobalTimers(L)}_cancelPendingTasks(L){const r=L._getExecutionVariable(this,"pendingDelays",[]);for(const p of r)null===p||void 0===p||p.dispose();L._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new t.b(-1),L),this._updateGlobalTimers(L)}_execute(L,r){r!==this.cancel?(this._preparePendingTasks(L),this.out._activateSignal(L)):this._cancelPendingTasks(L)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(L,r){const p=r._getExecutionVariable(this,"pendingDelays",[]),J=p.indexOf(L);-1!==J?p.splice(J,1):G.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),r._removePendingBlock(this),this.done._activateSignal(r),this._updateGlobalTimers(r)}_updateGlobalTimers(L){const r=L._getExecutionVariable(this,"pendingDelays",[]),p=L._getGlobalContextVariable("pendingDelays",[]);for(let J=0;J<r.length;J++){if(!r[J])continue;const L=r[J];p[J]&&p[J]!==L?G.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):p[J]=L}L._setGlobalContextVariable("pendingDelays",p)}}E.MaxParallelDelayCount=100,(0,C.e)("FlowGraphSetDelayBlock",E)}}]);