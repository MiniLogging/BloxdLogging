"use strict";(self.vfdo5lmva5i=self.vfdo5lmva5i||[]).push([[96],{15085:(w,o,H)=>{H.r(o),H.d(o,{FlowGraphSetDelayBlock:()=>y});var h,E=H(13500),e=H(13455),D=H(11540);!function(w){w[w.INIT=0]="INIT",w[w.STARTED=1]="STARTED",w[w.ENDED=2]="ENDED"}(h||(h={}));class t{constructor(w){this.onEachCountObservable=new D.b,this.onTimerAbortedObservable=new D.b,this.onTimerEndedObservable=new D.b,this.onStateChangedObservable=new D.b,this._observer=null,this._breakOnNextTick=!1,this._tick=w=>{const o=Date.now();this._timer=o-this._startTime;const H={startTime:this._startTime,currentTime:o,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,sH:w},h=this._breakOnNextTick||this._breakCondition(H);h||this._timer>=this._timeToEnd?this._stop(H,h):this.onEachCountObservable.notifyObservers(H)},this._setState(0),this._contextObservable=w.contextObservable,this._observableParameters=w.observableParameters??{},this._breakCondition=w.breakCondition??(()=>!1),this._timeToEnd=w.timeout,w.onEnded&&this.onTimerEndedObservable.add(w.onEnded),w.GA&&this.onEachCountObservable.add(w.GA),w.onAborted&&this.onTimerAbortedObservable.add(w.onAborted)}set breakCondition(w){this._breakCondition=w}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let w=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=w,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(w){this._state=w,this.onStateChangedObservable.notifyObservers(this._state)}_stop(w){let o=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),o?this.onTimerAbortedObservable.notifyObservers(w):this.onTimerEndedObservable.notifyObservers(w)}}var X=H(11551),L=H(11666),A=H(13446);class y extends E.d{constructor(w){super(w),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",e.p),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",e.g,new A.d(-1))}_preparePendingTasks(w){const o=this.duration.getValue(w);if(o<0||isNaN(o)||!isFinite(o))return this._reportError(w,"Invalid duration in SetDelay block");if(w._getGlobalContextVariable("activeDelays",0)>=y.MaxParallelDelayCount)return this._reportError(w,"Max parallel delays reached");const H=w._getGlobalContextVariable("lastDelayIndex",-1),h=w._getExecutionVariable(this,"pendingDelays",[]),E=w.configuration.Vo,e=new t({timeout:1e3*o,contextObservable:E.onBeforeRenderObservable,onEnded:()=>this._onEnded(e,w)});e.start();const D=H+1;this.lastDelayIndex.setValue(new A.d(D),w),w._setGlobalContextVariable("lastDelayIndex",D),h[D]=e,w._setExecutionVariable(this,"pendingDelays",h),this._updateGlobalTimers(w)}_cancelPendingTasks(w){const o=w._getExecutionVariable(this,"pendingDelays",[]);for(const H of o)null===H||void 0===H||H.dispose();w._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new A.d(-1),w),this._updateGlobalTimers(w)}_execute(w,o){o!==this.cancel?(this._preparePendingTasks(w),this.out._activateSignal(w)):this._cancelPendingTasks(w)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(w,o){const H=o._getExecutionVariable(this,"pendingDelays",[]),h=H.indexOf(w);-1!==h?H.splice(h,1):X.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),o._removePendingBlock(this),this.done._activateSignal(o),this._updateGlobalTimers(o)}_updateGlobalTimers(w){const o=w._getExecutionVariable(this,"pendingDelays",[]),H=w._getGlobalContextVariable("pendingDelays",[]);for(let h=0;h<o.length;h++){if(!o[h])continue;const w=o[h];H[h]&&H[h]!==w?X.d.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):H[h]=w}w._setGlobalContextVariable("pendingDelays",H)}}y.MaxParallelDelayCount=100,(0,L.g)("FlowGraphSetDelayBlock",y)}}]);