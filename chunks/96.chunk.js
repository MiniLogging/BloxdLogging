"use strict";(self.fyqbdzs5tyo=self.fyqbdzs5tyo||[]).push([[96],{14393:(V,I,A)=>{A.r(I),A.d(I,{FlowGraphSetDelayBlock:()=>P});var B,F=A(13003),E=A(12954),Y=A(11057);!function(V){V[V.INIT=0]="INIT",V[V.STARTED=1]="STARTED",V[V.ENDED=2]="ENDED"}(B||(B={}));class H{constructor(V){this.onEachCountObservable=new Y.c,this.onTimerAbortedObservable=new Y.c,this.onTimerEndedObservable=new Y.c,this.onStateChangedObservable=new Y.c,this._observer=null,this._breakOnNextTick=!1,this._tick=V=>{const I=Date.now();this._timer=I-this._startTime;const A={startTime:this._startTime,currentTime:I,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,wA:V},B=this._breakOnNextTick||this._breakCondition(A);B||this._timer>=this._timeToEnd?this._stop(A,B):this.onEachCountObservable.notifyObservers(A)},this._setState(0),this._contextObservable=V.contextObservable,this._observableParameters=V.observableParameters??{},this._breakCondition=V.breakCondition??(()=>!1),this._timeToEnd=V.timeout,V.onEnded&&this.onTimerEndedObservable.add(V.onEnded),V.IJ&&this.onEachCountObservable.add(V.IJ),V.onAborted&&this.onTimerAbortedObservable.add(V.onAborted)}set breakCondition(V){this._breakCondition=V}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._timeToEnd;if(1===this._state)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=V,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){1===this._state&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(V){this._state=V,this.onStateChangedObservable.notifyObservers(this._state)}_stop(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._contextObservable.remove(this._observer),this._setState(2),I?this.onTimerAbortedObservable.notifyObservers(V):this.onTimerEndedObservable.notifyObservers(V)}}var c=A(11064),b=A(11189),X=A(12948);class P extends F.c{constructor(V){super(V),this.cancel=this._registerSignalInput("cancel"),this.duration=this.registerDataInput("duration",E.v),this.lastDelayIndex=this.registerDataOutput("lastDelayIndex",E.i,new X.e(-1))}_preparePendingTasks(V){const I=this.duration.getValue(V);if(I<0||isNaN(I)||!isFinite(I))return this._reportError(V,"Invalid duration in SetDelay block");if(V._getGlobalContextVariable("activeDelays",0)>=P.MaxParallelDelayCount)return this._reportError(V,"Max parallel delays reached");const A=V._getGlobalContextVariable("lastDelayIndex",-1),B=V._getExecutionVariable(this,"pendingDelays",[]),F=V.configuration.WI,E=new H({timeout:1e3*I,contextObservable:F.onBeforeRenderObservable,onEnded:()=>this._onEnded(E,V)});E.start();const Y=A+1;this.lastDelayIndex.setValue(new X.e(Y),V),V._setGlobalContextVariable("lastDelayIndex",Y),B[Y]=E,V._setExecutionVariable(this,"pendingDelays",B),this._updateGlobalTimers(V)}_cancelPendingTasks(V){const I=V._getExecutionVariable(this,"pendingDelays",[]);for(const A of I)null===A||void 0===A||A.dispose();V._deleteExecutionVariable(this,"pendingDelays"),this.lastDelayIndex.setValue(new X.e(-1),V),this._updateGlobalTimers(V)}_execute(V,I){I!==this.cancel?(this._preparePendingTasks(V),this.out._activateSignal(V)):this._cancelPendingTasks(V)}getClassName(){return"FlowGraphSetDelayBlock"}_onEnded(V,I){const A=I._getExecutionVariable(this,"pendingDelays",[]),B=A.indexOf(V);-1!==B?A.splice(B,1):c.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),I._removePendingBlock(this),this.done._activateSignal(I),this._updateGlobalTimers(I)}_updateGlobalTimers(V){const I=V._getExecutionVariable(this,"pendingDelays",[]),A=V._getGlobalContextVariable("pendingDelays",[]);for(let B=0;B<I.length;B++){if(!I[B])continue;const V=I[B];A[B]&&A[B]!==V?c.b.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"):A[B]=V}V._setGlobalContextVariable("pendingDelays",A)}}P.MaxParallelDelayCount=100,(0,b.e)("FlowGraphSetDelayBlock",P)}}]);