"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[96],{14361:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphSetVariableBlock:()=>V});var X=Q(10866),Z=Q(12744),n=Q(12707);class V extends Z.d{constructor(x){if(super(x),!x.variable&&!x.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(x.variables&&x.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(x.variables)for(const O of x.variables)this.registerDataInput(O,n.d);else this.registerDataInput("value",n.d)}_execute(x,O){var Q,X;if(null!==(Q=this.config)&&void 0!==Q&&Q.variables)for(const Z of this.config.variables)this._saveVariable(x,Z);else this._saveVariable(x,null===(X=this.config)||void 0===X?void 0:X.variable,"value");this.out._activateSignal(x)}_saveVariable(x,O,Q){var X;const Z=x._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const V of Z){const Q=x.assetsContext.animationGroups.find((x=>x.uniqueId==V));if(Q)for(const X of Q.targetedAnimations)if(X.target===x&&X.animation.targetProperty===O){Q.stop();const O=Z.indexOf(V);O>-1&&Z.splice(O,1),x._setGlobalContextVariable("currentlyRunningAnimationGroups",Z);break}}const n=null===(X=this.getDataInput(Q||O))||void 0===X?void 0:X.getValue(x);x.setVariable(O,n)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(x){var O;super.serialize(x),x.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,X.d)("FlowGraphSetVariableBlock",V)}}]);