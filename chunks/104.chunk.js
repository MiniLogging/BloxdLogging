"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[104],{15e3:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphMultiGateBlock:()=>a});var W=D(11637),B=D(13406),t=D(13392),u=D(13390);class a extends B.b{constructor(c){super(c),this.config=c,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",t.h,new u.d(-1)),this.setNumberOfOutputSignals(null===c||void 0===c?void 0:c.outputSignalCount)}_getNextIndex(c){if(c.includes(!1)||this.config.isLoop&&c.fill(!1),this.config.isRandom){const r=c.map(((c,r)=>c?-1:r)).filter((c=>-1!==c));return r.length?r[Math.floor(Math.random()*r.length)]:-1}return c.indexOf(!1)}setNumberOfOutputSignals(){let c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>c;){const c=this.outputSignals.pop();c&&(c.disconnectFromAll(),this._unregisterSignalOutput(c.name))}for(;this.outputSignals.length<c;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(c,r){if(c._hasExecutionVariable(this,"indexesUsed")||c._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),r===this.reset)return c._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new u.d(-1),c);const D=c._getExecutionVariable(this,"indexesUsed",[]),W=this._getNextIndex(D);W>-1&&(this.lastIndex.setValue(new u.d(W),c),D[W]=!0,c._setExecutionVariable(this,"indexesUsed",D),this.outputSignals[W]._activateSignal(c))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(c){super.serialize(c),c.config.outputSignalCount=this.config.outputSignalCount,c.config.isRandom=this.config.isRandom,c.config.loop=this.config.isLoop,c.config.startIndex=this.config.startIndex}}(0,W.e)("FlowGraphMultiGateBlock",a)}}]);