"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[104],{14692:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphMultiGateBlock:()=>b});var l=h(11293),M=h(13071),O=h(13060),u=h(13056);class b extends M.e{constructor(m){super(m),this.config=m,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",O.f,new u.b(-1)),this.setNumberOfOutputSignals(null===m||void 0===m?void 0:m.outputSignalCount)}_getNextIndex(m){if(m.includes(!1)||this.config.isLoop&&m.fill(!1),this.config.isRandom){const S=m.map(((m,S)=>m?-1:S)).filter((m=>-1!==m));return S.length?S[Math.floor(Math.random()*S.length)]:-1}return m.indexOf(!1)}setNumberOfOutputSignals(){let m=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>m;){const m=this.outputSignals.pop();m&&(m.disconnectFromAll(),this._unregisterSignalOutput(m.name))}for(;this.outputSignals.length<m;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(m,S){if(m._hasExecutionVariable(this,"indexesUsed")||m._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),S===this.reset)return m._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new u.b(-1),m);const h=m._getExecutionVariable(this,"indexesUsed",[]),l=this._getNextIndex(h);l>-1&&(this.lastIndex.setValue(new u.b(l),m),h[l]=!0,m._setExecutionVariable(this,"indexesUsed",h),this.outputSignals[l]._activateSignal(m))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(m){super.serialize(m),m.config.outputSignalCount=this.config.outputSignalCount,m.config.isRandom=this.config.isRandom,m.config.loop=this.config.isLoop,m.config.startIndex=this.config.startIndex}}(0,l.e)("FlowGraphMultiGateBlock",b)}}]);