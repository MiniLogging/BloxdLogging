"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[104],{15612:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphMultiGateBlock:()=>d});var V=I(12282),i=I(14053),A=I(14033),B=I(14029);class d extends i.c{constructor(y){super(y),this.config=y,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",A.i,new B.c(-1)),this.setNumberOfOutputSignals(null===y||void 0===y?void 0:y.outputSignalCount)}_getNextIndex(y){if(y.includes(!1)||this.config.isLoop&&y.fill(!1),this.config.isRandom){const S=y.map(((y,S)=>y?-1:S)).filter((y=>-1!==y));return S.length?S[Math.floor(Math.random()*S.length)]:-1}return y.indexOf(!1)}setNumberOfOutputSignals(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>y;){const y=this.outputSignals.pop();y&&(y.disconnectFromAll(),this._unregisterSignalOutput(y.name))}for(;this.outputSignals.length<y;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(y,S){if(y._hasExecutionVariable(this,"indexesUsed")||y._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),S===this.reset)return y._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new B.c(-1),y);const I=y._getExecutionVariable(this,"indexesUsed",[]),V=this._getNextIndex(I);V>-1&&(this.lastIndex.setValue(new B.c(V),y),I[V]=!0,y._setExecutionVariable(this,"indexesUsed",I),this.outputSignals[V]._activateSignal(y))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(y){super.serialize(y),y.config.outputSignalCount=this.config.outputSignalCount,y.config.isRandom=this.config.isRandom,y.config.loop=this.config.isLoop,y.config.startIndex=this.config.startIndex}}(0,V.e)("FlowGraphMultiGateBlock",d)}}]);