"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[104],{14581:(H,O,S)=>{S.r(O),S.d(O,{FlowGraphMultiGateBlock:()=>U});var t=S(11262),q=S(13055),p=S(13035),G=S(13030);class U extends q.e{constructor(H){super(H),this.config=H,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",p.l,new G.d(-1)),this.setNumberOfOutputSignals(null===H||void 0===H?void 0:H.outputSignalCount)}_getNextIndex(H){if(H.includes(!1)||this.config.isLoop&&H.fill(!1),this.config.isRandom){const O=H.map(((H,O)=>H?-1:O)).filter((H=>-1!==H));return O.length?O[Math.floor(Math.random()*O.length)]:-1}return H.indexOf(!1)}setNumberOfOutputSignals(){let H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>H;){const H=this.outputSignals.pop();H&&(H.disconnectFromAll(),this._unregisterSignalOutput(H.name))}for(;this.outputSignals.length<H;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(H,O){if(H._hasExecutionVariable(this,"indexesUsed")||H._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),O===this.reset)return H._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new G.d(-1),H);const S=H._getExecutionVariable(this,"indexesUsed",[]),t=this._getNextIndex(S);t>-1&&(this.lastIndex.setValue(new G.d(t),H),S[t]=!0,H._setExecutionVariable(this,"indexesUsed",S),this.outputSignals[t]._activateSignal(H))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(H){super.serialize(H),H.config.outputSignalCount=this.config.outputSignalCount,H.config.isRandom=this.config.isRandom,H.config.loop=this.config.isLoop,H.config.startIndex=this.config.startIndex}}(0,t.g)("FlowGraphMultiGateBlock",U)}}]);