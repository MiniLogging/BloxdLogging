"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[104],{15673:(E,U,g)=>{g.r(U),g.d(U,{FlowGraphMultiGateBlock:()=>u});var N=g(12292),L=g(14072),D=g(14058),S=g(14050);class u extends L.e{constructor(E){super(E),this.config=E,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",D.j,new S.c(-1)),this.setNumberOfOutputSignals(null===E||void 0===E?void 0:E.outputSignalCount)}_getNextIndex(E){if(E.includes(!1)||this.config.isLoop&&E.fill(!1),this.config.isRandom){const U=E.map(((E,U)=>E?-1:U)).filter((E=>-1!==E));return U.length?U[Math.floor(Math.random()*U.length)]:-1}return E.indexOf(!1)}setNumberOfOutputSignals(){let E=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>E;){const E=this.outputSignals.pop();E&&(E.disconnectFromAll(),this._unregisterSignalOutput(E.name))}for(;this.outputSignals.length<E;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(E,U){if(E._hasExecutionVariable(this,"indexesUsed")||E._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),U===this.reset)return E._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new S.c(-1),E);const g=E._getExecutionVariable(this,"indexesUsed",[]),N=this._getNextIndex(g);N>-1&&(this.lastIndex.setValue(new S.c(N),E),g[N]=!0,E._setExecutionVariable(this,"indexesUsed",g),this.outputSignals[N]._activateSignal(E))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(E){super.serialize(E),E.config.outputSignalCount=this.config.outputSignalCount,E.config.isRandom=this.config.isRandom,E.config.loop=this.config.isLoop,E.config.startIndex=this.config.startIndex}}(0,N.f)("FlowGraphMultiGateBlock",u)}}]);