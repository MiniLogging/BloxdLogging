"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[104],{15739:(U,G,C)=>{C.r(G),C.d(G,{FlowGraphMultiGateBlock:()=>E});var L=C(12850),X=C(14148),l=C(14134),t=C(14130);class E extends X.d{constructor(U){super(U),this.config=U,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",l.k,new t.c(-1)),this.setNumberOfOutputSignals(null===U||void 0===U?void 0:U.outputSignalCount)}_getNextIndex(U){if(U.includes(!1)||this.config.isLoop&&U.fill(!1),this.config.isRandom){const G=U.map(((U,G)=>U?-1:G)).filter((U=>-1!==U));return G.length?G[Math.floor(Math.random()*G.length)]:-1}return U.indexOf(!1)}setNumberOfOutputSignals(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>U;){const U=this.outputSignals.pop();U&&(U.disconnectFromAll(),this._unregisterSignalOutput(U.name))}for(;this.outputSignals.length<U;)this.outputSignals.push(this._registerSignalOutput("out_".concat(this.outputSignals.length)))}_execute(U,G){if(U._hasExecutionVariable(this,"indexesUsed")||U._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),G===this.reset)return U._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new t.c(-1),U);const C=U._getExecutionVariable(this,"indexesUsed",[]),L=this._getNextIndex(C);L>-1&&(this.lastIndex.setValue(new t.c(L),U),C[L]=!0,U._setExecutionVariable(this,"indexesUsed",C),this.outputSignals[L]._activateSignal(U))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(U){super.serialize(U),U.config.outputSignalCount=this.config.outputSignalCount,U.config.isRandom=this.config.isRandom,U.config.loop=this.config.isLoop,U.config.startIndex=this.config.startIndex}}(0,L.e)("FlowGraphMultiGateBlock",E)}}]);