"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[104],{15833:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphMultiGateBlock:()=>J});var e=b(12558),c=b(14291),z=b(14282),M=b(14278);class J extends c.e{constructor(I){super(I),this.config=I,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",z.h,new M.d(-1)),this.setNumberOfOutputSignals(null===I||void 0===I?void 0:I.outputSignalCount)}_getNextIndex(I){if(I.includes(!1)||this.config.isLoop&&I.fill(!1),this.config.isRandom){const g=I.map(((I,g)=>I?-1:g)).filter((I=>-1!==I));return g.length?g[Math.floor(Math.random()*g.length)]:-1}return I.indexOf(!1)}setNumberOfOutputSignals(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>I;){const I=this.outputSignals.pop();I&&(I.disconnectFromAll(),this._unregisterSignalOutput(I.name))}for(;this.outputSignals.length<I;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(I,g){if(I._hasExecutionVariable(this,"indexesUsed")||I._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),g===this.reset)return I._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new M.d(-1),I);const b=I._getExecutionVariable(this,"indexesUsed",[]),e=this._getNextIndex(b);e>-1&&(this.lastIndex.setValue(new M.d(e),I),b[e]=!0,I._setExecutionVariable(this,"indexesUsed",b),this.outputSignals[e]._activateSignal(I))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(I){super.serialize(I),I.config.outputSignalCount=this.config.outputSignalCount,I.config.isRandom=this.config.isRandom,I.config.loop=this.config.isLoop,I.config.startIndex=this.config.startIndex}}(0,e.g)("FlowGraphMultiGateBlock",J)}}]);