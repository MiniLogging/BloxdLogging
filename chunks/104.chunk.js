"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[104],{15682:(a,O,i)=>{i.r(O),i.d(O,{FlowGraphMultiGateBlock:()=>Q});var H=i(12346),b=i(14132),G=i(14124),q=i(14115);class Q extends b.c{constructor(a){super(a),this.config=a,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",G.l,new q.d(-1)),this.setNumberOfOutputSignals(null===a||void 0===a?void 0:a.outputSignalCount)}_getNextIndex(a){if(a.includes(!1)||this.config.isLoop&&a.fill(!1),this.config.isRandom){const O=a.map(((a,O)=>a?-1:O)).filter((a=>-1!==a));return O.length?O[Math.floor(Math.random()*O.length)]:-1}return a.indexOf(!1)}setNumberOfOutputSignals(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>a;){const a=this.outputSignals.pop();a&&(a.disconnectFromAll(),this._unregisterSignalOutput(a.name))}for(;this.outputSignals.length<a;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(a,O){if(a._hasExecutionVariable(this,"indexesUsed")||a._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),O===this.reset)return a._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new q.d(-1),a);const i=a._getExecutionVariable(this,"indexesUsed",[]),H=this._getNextIndex(i);H>-1&&(this.lastIndex.setValue(new q.d(H),a),i[H]=!0,a._setExecutionVariable(this,"indexesUsed",i),this.outputSignals[H]._activateSignal(a))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(a){super.serialize(a),a.config.outputSignalCount=this.config.outputSignalCount,a.config.isRandom=this.config.isRandom,a.config.loop=this.config.isLoop,a.config.startIndex=this.config.startIndex}}(0,H.h)("FlowGraphMultiGateBlock",Q)}}]);