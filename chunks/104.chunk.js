"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[104],{14358:(P,e,n)=>{n.r(e),n.d(e,{FlowGraphMultiGateBlock:()=>m});var H=n(11096),S=n(12839),p=n(12819),k=n(12812);class m extends S.c{constructor(P){super(P),this.config=P,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",p.e,new k.e(-1)),this.setNumberOfOutputSignals(null===P||void 0===P?void 0:P.outputSignalCount)}_getNextIndex(P){if(P.includes(!1)||this.config.isLoop&&P.fill(!1),this.config.isRandom){const e=P.map(((P,e)=>P?-1:e)).filter((P=>-1!==P));return e.length?e[Math.floor(Math.random()*e.length)]:-1}return P.indexOf(!1)}setNumberOfOutputSignals(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>P;){const P=this.outputSignals.pop();P&&(P.disconnectFromAll(),this._unregisterSignalOutput(P.name))}for(;this.outputSignals.length<P;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(P,e){if(P._hasExecutionVariable(this,"indexesUsed")||P._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),e===this.reset)return P._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new k.e(-1),P);const n=P._getExecutionVariable(this,"indexesUsed",[]),H=this._getNextIndex(n);H>-1&&(this.lastIndex.setValue(new k.e(H),P),n[H]=!0,P._setExecutionVariable(this,"indexesUsed",n),this.outputSignals[H]._activateSignal(P))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(P){super.serialize(P),P.config.outputSignalCount=this.config.outputSignalCount,P.config.isRandom=this.config.isRandom,P.config.loop=this.config.isLoop,P.config.startIndex=this.config.startIndex}}(0,H.h)("FlowGraphMultiGateBlock",m)}}]);