"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[104],{14474:(k,h,o)=>{o.r(h),o.d(h,{FlowGraphMultiGateBlock:()=>J});var x=o(11199),I=o(12954),q=o(12936),Y=o(12928);class J extends I.c{constructor(k){super(k),this.config=k,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",q.j,new Y.c(-1)),this.setNumberOfOutputSignals(null===k||void 0===k?void 0:k.outputSignalCount)}_getNextIndex(k){if(k.includes(!1)||this.config.isLoop&&k.fill(!1),this.config.isRandom){const h=k.map(((k,h)=>k?-1:h)).filter((k=>-1!==k));return h.length?h[Math.floor(Math.random()*h.length)]:-1}return k.indexOf(!1)}setNumberOfOutputSignals(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>k;){const k=this.outputSignals.pop();k&&(k.disconnectFromAll(),this._unregisterSignalOutput(k.name))}for(;this.outputSignals.length<k;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(k,h){if(k._hasExecutionVariable(this,"indexesUsed")||k._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),h===this.reset)return k._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new Y.c(-1),k);const o=k._getExecutionVariable(this,"indexesUsed",[]),x=this._getNextIndex(o);x>-1&&(this.lastIndex.setValue(new Y.c(x),k),o[x]=!0,k._setExecutionVariable(this,"indexesUsed",o),this.outputSignals[x]._activateSignal(k))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(k){super.serialize(k),k.config.outputSignalCount=this.config.outputSignalCount,k.config.isRandom=this.config.isRandom,k.config.loop=this.config.isLoop,k.config.startIndex=this.config.startIndex}}(0,x.g)("FlowGraphMultiGateBlock",J)}}]);