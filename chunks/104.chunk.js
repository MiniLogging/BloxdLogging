"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[104],{16188:(Y,b,C)=>{C.r(b),C.d(b,{FlowGraphMultiGateBlock:()=>B});var R=C(12790),q=C(14433),A=C(14424),E=C(14420);class B extends q.d{constructor(Y){super(Y),this.config=Y,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",A.i,new E.d(-1)),this.setNumberOfOutputSignals(null===Y||void 0===Y?void 0:Y.outputSignalCount)}_getNextIndex(Y){if(Y.includes(!1)||this.config.isLoop&&Y.fill(!1),this.config.isRandom){const b=Y.map(((Y,b)=>Y?-1:b)).filter((Y=>-1!==Y));return b.length?b[Math.floor(Math.random()*b.length)]:-1}return Y.indexOf(!1)}setNumberOfOutputSignals(){let Y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>Y;){const Y=this.outputSignals.pop();Y&&(Y.disconnectFromAll(),this._unregisterSignalOutput(Y.name))}for(;this.outputSignals.length<Y;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(Y,b){if(Y._hasExecutionVariable(this,"indexesUsed")||Y._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),b===this.reset)return Y._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new E.d(-1),Y);const C=Y._getExecutionVariable(this,"indexesUsed",[]),R=this._getNextIndex(C);R>-1&&(this.lastIndex.setValue(new E.d(R),Y),C[R]=!0,Y._setExecutionVariable(this,"indexesUsed",C),this.outputSignals[R]._activateSignal(Y))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(Y){super.serialize(Y),Y.config.outputSignalCount=this.config.outputSignalCount,Y.config.isRandom=this.config.isRandom,Y.config.loop=this.config.isLoop,Y.config.startIndex=this.config.startIndex}}(0,R.g)("FlowGraphMultiGateBlock",B)}}]);