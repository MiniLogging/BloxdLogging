"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[104],{14624:(f,v,Z)=>{Z.r(v),Z.d(v,{FlowGraphMultiGateBlock:()=>e});var V=Z(11372),h=Z(13146),J=Z(13123),l=Z(13115);class e extends h.e{constructor(f){super(f),this.config=f,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",J.k,new l.b(-1)),this.setNumberOfOutputSignals(null===f||void 0===f?void 0:f.outputSignalCount)}_getNextIndex(f){if(f.includes(!1)||this.config.isLoop&&f.fill(!1),this.config.isRandom){const v=f.map(((f,v)=>f?-1:v)).filter((f=>-1!==f));return v.length?v[Math.floor(Math.random()*v.length)]:-1}return f.indexOf(!1)}setNumberOfOutputSignals(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>f;){const f=this.outputSignals.pop();f&&(f.disconnectFromAll(),this._unregisterSignalOutput(f.name))}for(;this.outputSignals.length<f;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(f,v){if(f._hasExecutionVariable(this,"indexesUsed")||f._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),v===this.reset)return f._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new l.b(-1),f);const Z=f._getExecutionVariable(this,"indexesUsed",[]),V=this._getNextIndex(Z);V>-1&&(this.lastIndex.setValue(new l.b(V),f),Z[V]=!0,f._setExecutionVariable(this,"indexesUsed",Z),this.outputSignals[V]._activateSignal(f))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(f){super.serialize(f),f.config.outputSignalCount=this.config.outputSignalCount,f.config.isRandom=this.config.isRandom,f.config.loop=this.config.isLoop,f.config.startIndex=this.config.startIndex}}(0,V.h)("FlowGraphMultiGateBlock",e)}}]);