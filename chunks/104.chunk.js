"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[104],{16075:(q,I,l)=>{l.r(I),l.d(I,{FlowGraphMultiGateBlock:()=>a});var w=l(12711),t=l(14451),O=l(14441),c=l(14437);class a extends t.e{constructor(q){super(q),this.config=q,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",O.k,new c.d(-1)),this.setNumberOfOutputSignals(null===q||void 0===q?void 0:q.outputSignalCount)}_getNextIndex(q){if(q.includes(!1)||this.config.isLoop&&q.fill(!1),this.config.isRandom){const I=q.map(((q,I)=>q?-1:I)).filter((q=>-1!==q));return I.length?I[Math.floor(Math.random()*I.length)]:-1}return q.indexOf(!1)}setNumberOfOutputSignals(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>q;){const q=this.outputSignals.pop();q&&(q.disconnectFromAll(),this._unregisterSignalOutput(q.name))}for(;this.outputSignals.length<q;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(q,I){if(q._hasExecutionVariable(this,"indexesUsed")||q._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),I===this.reset)return q._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new c.d(-1),q);const l=q._getExecutionVariable(this,"indexesUsed",[]),w=this._getNextIndex(l);w>-1&&(this.lastIndex.setValue(new c.d(w),q),l[w]=!0,q._setExecutionVariable(this,"indexesUsed",l),this.outputSignals[w]._activateSignal(q))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(q){super.serialize(q),q.config.outputSignalCount=this.config.outputSignalCount,q.config.isRandom=this.config.isRandom,q.config.loop=this.config.isLoop,q.config.startIndex=this.config.startIndex}}(0,w.e)("FlowGraphMultiGateBlock",a)}}]);