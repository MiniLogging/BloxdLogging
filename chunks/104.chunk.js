"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[104],{15940:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphMultiGateBlock:()=>h});var q=W(12560),Q=W(14288),C=W(14274),T=W(14266);class h extends Q.d{constructor(r){super(r),this.config=r,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",C.e,new T.d(-1)),this.setNumberOfOutputSignals(null===r||void 0===r?void 0:r.outputSignalCount)}_getNextIndex(r){if(r.includes(!1)||this.config.isLoop&&r.fill(!1),this.config.isRandom){const O=r.map(((r,O)=>r?-1:O)).filter((r=>-1!==r));return O.length?O[Math.floor(Math.random()*O.length)]:-1}return r.indexOf(!1)}setNumberOfOutputSignals(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>r;){const r=this.outputSignals.pop();r&&(r.disconnectFromAll(),this._unregisterSignalOutput(r.name))}for(;this.outputSignals.length<r;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(r,O){if(r._hasExecutionVariable(this,"indexesUsed")||r._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),O===this.reset)return r._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new T.d(-1),r);const W=r._getExecutionVariable(this,"indexesUsed",[]),q=this._getNextIndex(W);q>-1&&(this.lastIndex.setValue(new T.d(q),r),W[q]=!0,r._setExecutionVariable(this,"indexesUsed",W),this.outputSignals[q]._activateSignal(r))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(r){super.serialize(r),r.config.outputSignalCount=this.config.outputSignalCount,r.config.isRandom=this.config.isRandom,r.config.loop=this.config.isLoop,r.config.startIndex=this.config.startIndex}}(0,q.e)("FlowGraphMultiGateBlock",h)}}]);