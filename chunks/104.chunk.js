"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[104],{14671:(n,y,H)=>{H.r(y),H.d(y,{FlowGraphMultiGateBlock:()=>i});var o=H(11248),G=H(13137),h=H(13117),k=H(13112);class i extends G.c{constructor(n){super(n),this.config=n,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",h.f,new k.c(-1)),this.setNumberOfOutputSignals(null===n||void 0===n?void 0:n.outputSignalCount)}_getNextIndex(n){if(n.includes(!1)||this.config.isLoop&&n.fill(!1),this.config.isRandom){const y=n.map(((n,y)=>n?-1:y)).filter((n=>-1!==n));return y.length?y[Math.floor(Math.random()*y.length)]:-1}return n.indexOf(!1)}setNumberOfOutputSignals(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>n;){const n=this.outputSignals.pop();n&&(n.disconnectFromAll(),this._unregisterSignalOutput(n.name))}for(;this.outputSignals.length<n;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(n,y){if(n._hasExecutionVariable(this,"indexesUsed")||n._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),y===this.reset)return n._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new k.c(-1),n);const H=n._getExecutionVariable(this,"indexesUsed",[]),o=this._getNextIndex(H);o>-1&&(this.lastIndex.setValue(new k.c(o),n),H[o]=!0,n._setExecutionVariable(this,"indexesUsed",H),this.outputSignals[o]._activateSignal(n))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(n){super.serialize(n),n.config.outputSignalCount=this.config.outputSignalCount,n.config.isRandom=this.config.isRandom,n.config.loop=this.config.isLoop,n.config.startIndex=this.config.startIndex}}(0,o.h)("FlowGraphMultiGateBlock",i)}}]);