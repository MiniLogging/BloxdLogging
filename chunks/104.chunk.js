"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[104],{14542:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphMultiGateBlock:()=>s});var u=j(11181),k=j(12896),B=j(12880),x=j(12873);class s extends k.d{constructor(G){super(G),this.config=G,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",B.f,new x.d(-1)),this.setNumberOfOutputSignals(null===G||void 0===G?void 0:G.outputSignalCount)}_getNextIndex(G){if(G.includes(!1)||this.config.isLoop&&G.fill(!1),this.config.isRandom){const A=G.map(((G,A)=>G?-1:A)).filter((G=>-1!==G));return A.length?A[Math.floor(Math.random()*A.length)]:-1}return G.indexOf(!1)}setNumberOfOutputSignals(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>G;){const G=this.outputSignals.pop();G&&(G.disconnectFromAll(),this._unregisterSignalOutput(G.name))}for(;this.outputSignals.length<G;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(G,A){if(G._hasExecutionVariable(this,"indexesUsed")||G._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),A===this.reset)return G._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new x.d(-1),G);const j=G._getExecutionVariable(this,"indexesUsed",[]),u=this._getNextIndex(j);u>-1&&(this.lastIndex.setValue(new x.d(u),G),j[u]=!0,G._setExecutionVariable(this,"indexesUsed",j),this.outputSignals[u]._activateSignal(G))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(G){super.serialize(G),G.config.outputSignalCount=this.config.outputSignalCount,G.config.isRandom=this.config.isRandom,G.config.loop=this.config.isLoop,G.config.startIndex=this.config.startIndex}}(0,u.h)("FlowGraphMultiGateBlock",s)}}]);