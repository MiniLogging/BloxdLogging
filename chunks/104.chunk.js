"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[104],{15966:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphMultiGateBlock:()=>R});var H=o(12793),g=o(14377),j=o(14362),M=o(14360);class R extends g.e{constructor(D){super(D),this.config=D,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",j.h,new M.b(-1)),this.setNumberOfOutputSignals(null===D||void 0===D?void 0:D.outputSignalCount)}_getNextIndex(D){if(D.includes(!1)||this.config.isLoop&&D.fill(!1),this.config.isRandom){const h=D.map(((D,h)=>D?-1:h)).filter((D=>-1!==D));return h.length?h[Math.floor(Math.random()*h.length)]:-1}return D.indexOf(!1)}setNumberOfOutputSignals(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>D;){const D=this.outputSignals.pop();D&&(D.disconnectFromAll(),this._unregisterSignalOutput(D.name))}for(;this.outputSignals.length<D;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(D,h){if(D._hasExecutionVariable(this,"indexesUsed")||D._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),h===this.reset)return D._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new M.b(-1),D);const o=D._getExecutionVariable(this,"indexesUsed",[]),H=this._getNextIndex(o);H>-1&&(this.lastIndex.setValue(new M.b(H),D),o[H]=!0,D._setExecutionVariable(this,"indexesUsed",o),this.outputSignals[H]._activateSignal(D))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(D){super.serialize(D),D.config.outputSignalCount=this.config.outputSignalCount,D.config.isRandom=this.config.isRandom,D.config.loop=this.config.isLoop,D.config.startIndex=this.config.startIndex}}(0,H.g)("FlowGraphMultiGateBlock",R)}}]);