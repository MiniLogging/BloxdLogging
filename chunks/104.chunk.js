"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[104],{14422:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphMultiGateBlock:()=>F});var d=C(11076),U=C(12848),W=C(12831),a=C(12825);class F extends U.d{constructor(N){super(N),this.config=N,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",W.g,new a.b(-1)),this.setNumberOfOutputSignals(null===N||void 0===N?void 0:N.outputSignalCount)}_getNextIndex(N){if(N.includes(!1)||this.config.isLoop&&N.fill(!1),this.config.isRandom){const q=N.map(((N,q)=>N?-1:q)).filter((N=>-1!==N));return q.length?q[Math.floor(Math.random()*q.length)]:-1}return N.indexOf(!1)}setNumberOfOutputSignals(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>N;){const N=this.outputSignals.pop();N&&(N.disconnectFromAll(),this._unregisterSignalOutput(N.name))}for(;this.outputSignals.length<N;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(N,q){if(N._hasExecutionVariable(this,"indexesUsed")||N._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),q===this.reset)return N._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new a.b(-1),N);const C=N._getExecutionVariable(this,"indexesUsed",[]),d=this._getNextIndex(C);d>-1&&(this.lastIndex.setValue(new a.b(d),N),C[d]=!0,N._setExecutionVariable(this,"indexesUsed",C),this.outputSignals[d]._activateSignal(N))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(N){super.serialize(N),N.config.outputSignalCount=this.config.outputSignalCount,N.config.isRandom=this.config.isRandom,N.config.loop=this.config.isLoop,N.config.startIndex=this.config.startIndex}}(0,d.h)("FlowGraphMultiGateBlock",F)}}]);