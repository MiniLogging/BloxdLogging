"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[104],{14659:(B,E,v)=>{v.r(E),v.d(E,{FlowGraphMultiGateBlock:()=>S});var z=v(11345),o=v(13116),q=v(13102),c=v(13099);class S extends o.e{constructor(B){super(B),this.config=B,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",q.g,new c.d(-1)),this.setNumberOfOutputSignals(null===B||void 0===B?void 0:B.outputSignalCount)}_getNextIndex(B){if(B.includes(!1)||this.config.isLoop&&B.fill(!1),this.config.isRandom){const E=B.map(((B,E)=>B?-1:E)).filter((B=>-1!==B));return E.length?E[Math.floor(Math.random()*E.length)]:-1}return B.indexOf(!1)}setNumberOfOutputSignals(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>B;){const B=this.outputSignals.pop();B&&(B.disconnectFromAll(),this._unregisterSignalOutput(B.name))}for(;this.outputSignals.length<B;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(B,E){if(B._hasExecutionVariable(this,"indexesUsed")||B._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),E===this.reset)return B._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new c.d(-1),B);const v=B._getExecutionVariable(this,"indexesUsed",[]),z=this._getNextIndex(v);z>-1&&(this.lastIndex.setValue(new c.d(z),B),v[z]=!0,B._setExecutionVariable(this,"indexesUsed",v),this.outputSignals[z]._activateSignal(B))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(B){super.serialize(B),B.config.outputSignalCount=this.config.outputSignalCount,B.config.isRandom=this.config.isRandom,B.config.loop=this.config.isLoop,B.config.startIndex=this.config.startIndex}}(0,z.f)("FlowGraphMultiGateBlock",S)}}]);