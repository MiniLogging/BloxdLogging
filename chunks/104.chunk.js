"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[104],{15944:(s,k,h)=>{h.r(k),h.d(k,{FlowGraphMultiGateBlock:()=>K});var A=h(12543),g=h(14322),ms=h(14315),i=h(14313);class K extends g.b{constructor(s){super(s),this.config=s,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",ms.e,new i.c(-1)),this.setNumberOfOutputSignals(null===s||void 0===s?void 0:s.outputSignalCount)}_getNextIndex(s){if(s.includes(!1)||this.config.isLoop&&s.fill(!1),this.config.isRandom){const k=s.map(((s,k)=>s?-1:k)).filter((s=>-1!==s));return k.length?k[Math.floor(Math.random()*k.length)]:-1}return s.indexOf(!1)}setNumberOfOutputSignals(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>s;){const s=this.outputSignals.pop();s&&(s.disconnectFromAll(),this._unregisterSignalOutput(s.name))}for(;this.outputSignals.length<s;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(s,k){if(s._hasExecutionVariable(this,"indexesUsed")||s._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),k===this.reset)return s._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new i.c(-1),s);const h=s._getExecutionVariable(this,"indexesUsed",[]),A=this._getNextIndex(h);A>-1&&(this.lastIndex.setValue(new i.c(A),s),h[A]=!0,s._setExecutionVariable(this,"indexesUsed",h),this.outputSignals[A]._activateSignal(s))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(s){super.serialize(s),s.config.outputSignalCount=this.config.outputSignalCount,s.config.isRandom=this.config.isRandom,s.config.loop=this.config.isLoop,s.config.startIndex=this.config.startIndex}}(0,A.f)("FlowGraphMultiGateBlock",K)}}]);