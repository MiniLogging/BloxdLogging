"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[104],{14559:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphMultiGateBlock:()=>h});var q=M(11242),w=M(13019),u=M(13004),y=M(12996);class h extends w.d{constructor(K){super(K),this.config=K,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",u.l,new y.e(-1)),this.setNumberOfOutputSignals(null===K||void 0===K?void 0:K.outputSignalCount)}_getNextIndex(K){if(K.includes(!1)||this.config.isLoop&&K.fill(!1),this.config.isRandom){const H=K.map(((K,H)=>K?-1:H)).filter((K=>-1!==K));return H.length?H[Math.floor(Math.random()*H.length)]:-1}return K.indexOf(!1)}setNumberOfOutputSignals(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>K;){const K=this.outputSignals.pop();K&&(K.disconnectFromAll(),this._unregisterSignalOutput(K.name))}for(;this.outputSignals.length<K;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(K,H){if(K._hasExecutionVariable(this,"indexesUsed")||K._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),H===this.reset)return K._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new y.e(-1),K);const M=K._getExecutionVariable(this,"indexesUsed",[]),q=this._getNextIndex(M);q>-1&&(this.lastIndex.setValue(new y.e(q),K),M[q]=!0,K._setExecutionVariable(this,"indexesUsed",M),this.outputSignals[q]._activateSignal(K))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(K){super.serialize(K),K.config.outputSignalCount=this.config.outputSignalCount,K.config.isRandom=this.config.isRandom,K.config.loop=this.config.isLoop,K.config.startIndex=this.config.startIndex}}(0,q.f)("FlowGraphMultiGateBlock",h)}}]);