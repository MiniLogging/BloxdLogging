"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[104],{14924:(D,l,G)=>{G.r(l),G.d(l,{FlowGraphMultiGateBlock:()=>X});var V=G(11667),N=G(13436),M=G(13423),b=G(13418);class X extends N.b{constructor(D){super(D),this.config=D,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",M.i,new b.d(-1)),this.setNumberOfOutputSignals(null===D||void 0===D?void 0:D.outputSignalCount)}_getNextIndex(D){if(D.includes(!1)||this.config.isLoop&&D.fill(!1),this.config.isRandom){const l=D.map(((D,l)=>D?-1:l)).filter((D=>-1!==D));return l.length?l[Math.floor(Math.random()*l.length)]:-1}return D.indexOf(!1)}setNumberOfOutputSignals(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>D;){const D=this.outputSignals.pop();D&&(D.disconnectFromAll(),this._unregisterSignalOutput(D.name))}for(;this.outputSignals.length<D;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(D,l){if(D._hasExecutionVariable(this,"indexesUsed")||D._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),l===this.reset)return D._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new b.d(-1),D);const G=D._getExecutionVariable(this,"indexesUsed",[]),V=this._getNextIndex(G);V>-1&&(this.lastIndex.setValue(new b.d(V),D),G[V]=!0,D._setExecutionVariable(this,"indexesUsed",G),this.outputSignals[V]._activateSignal(D))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(D){super.serialize(D),D.config.outputSignalCount=this.config.outputSignalCount,D.config.isRandom=this.config.isRandom,D.config.loop=this.config.isLoop,D.config.startIndex=this.config.startIndex}}(0,V.c)("FlowGraphMultiGateBlock",X)}}]);