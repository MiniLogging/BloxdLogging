"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[104],{14971:(e,E,H)=>{H.r(E),H.d(E,{FlowGraphMultiGateBlock:()=>M});var N=H(11690),u=H(13432),z=H(13415),P=H(13407);class M extends u.b{constructor(e){super(e),this.config=e,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",z.h,new P.b(-1)),this.setNumberOfOutputSignals(null===e||void 0===e?void 0:e.outputSignalCount)}_getNextIndex(e){if(e.includes(!1)||this.config.isLoop&&e.fill(!1),this.config.isRandom){const E=e.map(((e,E)=>e?-1:E)).filter((e=>-1!==e));return E.length?E[Math.floor(Math.random()*E.length)]:-1}return e.indexOf(!1)}setNumberOfOutputSignals(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>e;){const e=this.outputSignals.pop();e&&(e.disconnectFromAll(),this._unregisterSignalOutput(e.name))}for(;this.outputSignals.length<e;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(e,E){if(e._hasExecutionVariable(this,"indexesUsed")||e._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),E===this.reset)return e._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new P.b(-1),e);const H=e._getExecutionVariable(this,"indexesUsed",[]),N=this._getNextIndex(H);N>-1&&(this.lastIndex.setValue(new P.b(N),e),H[N]=!0,e._setExecutionVariable(this,"indexesUsed",H),this.outputSignals[N]._activateSignal(e))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(e){super.serialize(e),e.config.outputSignalCount=this.config.outputSignalCount,e.config.isRandom=this.config.isRandom,e.config.loop=this.config.isLoop,e.config.startIndex=this.config.startIndex}}(0,N.g)("FlowGraphMultiGateBlock",M)}}]);