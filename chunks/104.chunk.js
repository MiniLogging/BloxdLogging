"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[104],{14432:(I,E,j)=>{j.r(E),j.d(E,{FlowGraphMultiGateBlock:()=>t});var e=j(11073),w=j(12829),z=j(12819),h=j(12812);class t extends w.e{constructor(I){super(I),this.config=I,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",z.i,new h.b(-1)),this.setNumberOfOutputSignals(null===I||void 0===I?void 0:I.outputSignalCount)}_getNextIndex(I){if(I.includes(!1)||this.config.isLoop&&I.fill(!1),this.config.isRandom){const E=I.map(((I,E)=>I?-1:E)).filter((I=>-1!==I));return E.length?E[Math.floor(Math.random()*E.length)]:-1}return I.indexOf(!1)}setNumberOfOutputSignals(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>I;){const I=this.outputSignals.pop();I&&(I.disconnectFromAll(),this._unregisterSignalOutput(I.name))}for(;this.outputSignals.length<I;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(I,E){if(I._hasExecutionVariable(this,"indexesUsed")||I._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),E===this.reset)return I._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new h.b(-1),I);const j=I._getExecutionVariable(this,"indexesUsed",[]),e=this._getNextIndex(j);e>-1&&(this.lastIndex.setValue(new h.b(e),I),j[e]=!0,I._setExecutionVariable(this,"indexesUsed",j),this.outputSignals[e]._activateSignal(I))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(I){super.serialize(I),I.config.outputSignalCount=this.config.outputSignalCount,I.config.isRandom=this.config.isRandom,I.config.loop=this.config.isLoop,I.config.startIndex=this.config.startIndex}}(0,e.h)("FlowGraphMultiGateBlock",t)}}]);