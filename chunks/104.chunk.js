"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[104],{15070:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphMultiGateBlock:()=>e});var m=K(11789),O=K(13531),X=K(13514),A=K(13508);class e extends O.e{constructor(C){super(C),this.config=C,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",X.i,new A.d(-1)),this.setNumberOfOutputSignals(null===C||void 0===C?void 0:C.outputSignalCount)}_getNextIndex(C){if(C.includes(!1)||this.config.isLoop&&C.fill(!1),this.config.isRandom){const U=C.map(((C,U)=>C?-1:U)).filter((C=>-1!==C));return U.length?U[Math.floor(Math.random()*U.length)]:-1}return C.indexOf(!1)}setNumberOfOutputSignals(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>C;){const C=this.outputSignals.pop();C&&(C.disconnectFromAll(),this._unregisterSignalOutput(C.name))}for(;this.outputSignals.length<C;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(C,U){if(C._hasExecutionVariable(this,"indexesUsed")||C._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),U===this.reset)return C._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new A.d(-1),C);const K=C._getExecutionVariable(this,"indexesUsed",[]),m=this._getNextIndex(K);m>-1&&(this.lastIndex.setValue(new A.d(m),C),K[m]=!0,C._setExecutionVariable(this,"indexesUsed",K),this.outputSignals[m]._activateSignal(C))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(C){super.serialize(C),C.config.outputSignalCount=this.config.outputSignalCount,C.config.isRandom=this.config.isRandom,C.config.loop=this.config.isLoop,C.config.startIndex=this.config.startIndex}}(0,m.h)("FlowGraphMultiGateBlock",e)}}]);