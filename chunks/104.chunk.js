"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[104],{15592:(H,u,J)=>{J.r(u),J.d(u,{FlowGraphMultiGateBlock:()=>g});var O=J(12304),U=J(14038),h=J(14018),w=J(14011);class g extends U.e{constructor(H){super(H),this.config=H,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",h.j,new w.d(-1)),this.setNumberOfOutputSignals(null===H||void 0===H?void 0:H.outputSignalCount)}_getNextIndex(H){if(H.includes(!1)||this.config.isLoop&&H.fill(!1),this.config.isRandom){const u=H.map(((H,u)=>H?-1:u)).filter((H=>-1!==H));return u.length?u[Math.floor(Math.random()*u.length)]:-1}return H.indexOf(!1)}setNumberOfOutputSignals(){let H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>H;){const H=this.outputSignals.pop();H&&(H.disconnectFromAll(),this._unregisterSignalOutput(H.name))}for(;this.outputSignals.length<H;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(H,u){if(H._hasExecutionVariable(this,"indexesUsed")||H._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),u===this.reset)return H._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new w.d(-1),H);const J=H._getExecutionVariable(this,"indexesUsed",[]),O=this._getNextIndex(J);O>-1&&(this.lastIndex.setValue(new w.d(O),H),J[O]=!0,H._setExecutionVariable(this,"indexesUsed",J),this.outputSignals[O]._activateSignal(H))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(H){super.serialize(H),H.config.outputSignalCount=this.config.outputSignalCount,H.config.isRandom=this.config.isRandom,H.config.loop=this.config.isLoop,H.config.startIndex=this.config.startIndex}}(0,O.f)("FlowGraphMultiGateBlock",g)}}]);