"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[104],{15608:(N,p,T)=>{T.r(p),T.d(p,{FlowGraphMultiGateBlock:()=>X});var A=T(12331),a=T(14099),C=T(14082),U=T(14079);class X extends a.c{constructor(N){super(N),this.config=N,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",C.h,new U.c(-1)),this.setNumberOfOutputSignals(null===N||void 0===N?void 0:N.outputSignalCount)}_getNextIndex(N){if(N.includes(!1)||this.config.isLoop&&N.fill(!1),this.config.isRandom){const p=N.map(((N,p)=>N?-1:p)).filter((N=>-1!==N));return p.length?p[Math.floor(Math.random()*p.length)]:-1}return N.indexOf(!1)}setNumberOfOutputSignals(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>N;){const N=this.outputSignals.pop();N&&(N.disconnectFromAll(),this._unregisterSignalOutput(N.name))}for(;this.outputSignals.length<N;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(N,p){if(N._hasExecutionVariable(this,"indexesUsed")||N._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),p===this.reset)return N._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new U.c(-1),N);const T=N._getExecutionVariable(this,"indexesUsed",[]),A=this._getNextIndex(T);A>-1&&(this.lastIndex.setValue(new U.c(A),N),T[A]=!0,N._setExecutionVariable(this,"indexesUsed",T),this.outputSignals[A]._activateSignal(N))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(N){super.serialize(N),N.config.outputSignalCount=this.config.outputSignalCount,N.config.isRandom=this.config.isRandom,N.config.loop=this.config.isLoop,N.config.startIndex=this.config.startIndex}}(0,A.d)("FlowGraphMultiGateBlock",X)}}]);