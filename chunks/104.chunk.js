"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[104],{15960:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphMultiGateBlock:()=>O});var G=T(12651),B=T(14259),L=T(14237),f=T(14229);class O extends B.e{constructor(K){super(K),this.config=K,this.outputSignals=[],this.reset=this._registerSignalInput("reset"),this.lastIndex=this.registerDataOutput("lastIndex",L.g,new f.e(-1)),this.setNumberOfOutputSignals(null===K||void 0===K?void 0:K.outputSignalCount)}_getNextIndex(K){if(K.includes(!1)||this.config.isLoop&&K.fill(!1),this.config.isRandom){const A=K.map(((K,A)=>K?-1:A)).filter((K=>-1!==K));return A.length?A[Math.floor(Math.random()*A.length)]:-1}return K.indexOf(!1)}setNumberOfOutputSignals(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;for(;this.outputSignals.length>K;){const K=this.outputSignals.pop();K&&(K.disconnectFromAll(),this._unregisterSignalOutput(K.name))}for(;this.outputSignals.length<K;)this.outputSignals.push(this._registerSignalOutput(`out_${this.outputSignals.length}`))}_execute(K,A){if(K._hasExecutionVariable(this,"indexesUsed")||K._setExecutionVariable(this,"indexesUsed",this.outputSignals.map((()=>!1))),A===this.reset)return K._deleteExecutionVariable(this,"indexesUsed"),void this.lastIndex.setValue(new f.e(-1),K);const T=K._getExecutionVariable(this,"indexesUsed",[]),G=this._getNextIndex(T);G>-1&&(this.lastIndex.setValue(new f.e(G),K),T[G]=!0,K._setExecutionVariable(this,"indexesUsed",T),this.outputSignals[G]._activateSignal(K))}getClassName(){return"FlowGraphMultiGateBlock"}serialize(K){super.serialize(K),K.config.outputSignalCount=this.config.outputSignalCount,K.config.isRandom=this.config.isRandom,K.config.loop=this.config.isLoop,K.config.startIndex=this.config.startIndex}}(0,G.c)("FlowGraphMultiGateBlock",O)}}]);