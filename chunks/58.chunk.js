"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[58],{14043:(h,d,m)=>{m.r(d),m.d(d,{AnimationGroup:()=>V,TargetedAnimation:()=>B});var j=m(11714),A=m(11097),b=m(11094),w=m(11350),a=m(12594),D=m(11058);class S{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(h,d,m,A){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=d,this._target=h,this._scene=m,this._host=A,this._activeTargets=[],d._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===j.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=D.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const h={frame:0,value:this._minValue};this._keys.splice(0,0,h)}if(this._target instanceof Array){let h=0;for(const d of this._target)this._preparePath(d,h),this._getOriginalValues(h),h++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const b=d.getEvents();if(b&&b.length>0)for(const j of b)this._events.push(j._clone());this._enableBlending=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const m=this._animation.targetPropertyPath;if(m.length>1){let j=h;for(let h=0;h<m.length-1;h++){const d=m[h];if(j=j[d],void 0===j)throw new Error(`Invalid property (${d}) in property path (${m.join(".")})`)}this._targetPath=m[m.length-1],this._activeTargets[d]=j}else this._targetPath=m[0],this._activeTargets[d]=h;if(void 0===this._activeTargets[d][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${m.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let h=0;for(const d of this._target)void 0!==this._originalValue[h]&&this._setValue(d,this._activeTargets[h],this._originalValue[h],-1,h),h++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let h=0;h<this._events.length;h++)this._events[h].isDone=!1}isStopped(){return this._stopped}dispose(){const h=this._animation.runtimeAnimations.indexOf(this);h>-1&&this._animation.runtimeAnimations.splice(h,1)}setValue(h,d){if(this._targetIsArray)for(let m=0;m<this._target.length;m++){const j=this._target[m];this._setValue(j,this._activeTargets[m],h,d,m)}else this._setValue(this._target,this._directTarget,h,d,0)}_getOriginalValues(){let h,d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const m=this._activeTargets[d];h=m.getLocalMatrix&&"_matrix"===this._targetPath?m.getLocalMatrix():m[this._targetPath],h&&h.clone?this._originalValue[d]=h.clone():this._originalValue[d]=h}_registerTargetForLateAnimationBinding(h,d){const m=h.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(m),m._lateAnimationHolders||(m._lateAnimationHolders={}),m._lateAnimationHolders[h.targetPath]||(m._lateAnimationHolders[h.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:d}),h.isAdditive?(m._lateAnimationHolders[h.targetPath].additiveAnimations.push(h),m._lateAnimationHolders[h.targetPath].totalAdditiveWeight+=h.weight):(m._lateAnimationHolders[h.targetPath].animations.push(h),m._lateAnimationHolders[h.targetPath].totalWeight+=h.weight)}_setValue(h,d,m,A,b){if(this._currentActiveTarget=d,this._weight=A,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const h=d[this._targetPath];h.clone?this._originalBlendValue=h.clone():this._originalBlendValue=h}this._originalBlendValue.m?j.b.AllowMatrixDecomposeForInterpolation?this._currentValue?D.b.DecomposeLerpToRef(this._originalBlendValue,m,this._blendingFactor,this._currentValue):this._currentValue=D.b.DecomposeLerp(this._originalBlendValue,m,this._blendingFactor):this._currentValue?D.b.LerpToRef(this._originalBlendValue,m,this._blendingFactor,this._currentValue):this._currentValue=D.b.Lerp(this._originalBlendValue,m,this._blendingFactor):this._currentValue=j.b._UniversalLerp(this._originalBlendValue,m,this._blendingFactor);const A=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=A}else this._currentValue?this._currentValue.D?this._currentValue.D(m):this._currentValue=m:null!==m&&void 0!==m&&m.clone?this._currentValue=m.clone():this._currentValue=m;-1!==A?this._registerTargetForLateAnimationBinding(this,this._originalValue[b]):this._animationState.loopMode===j.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[b],d[this._targetPath]):d[this._targetPath]=this._originalValue[b]+this._currentValue:d[this._targetPath]=this._currentValue,h.PS&&h.PS(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const m=this._animation.getKeys();h<m[0].frame?h=m[0].frame:h>m[m.length-1].frame&&(h=m[m.length-1].frame);const j=this._events;if(j.length)for(let b=0;b<j.length;b++)j[b].onlyOnce||(j[b].isDone=j[b].frame<h);this._currentFrame=h;const A=this._animation._interpolate(h,this._animationState);this.setValue(A,d)}_prepareForSpeedRatioChange(h){const d=this._previousElapsedTime*(this._animation.framePerSecond*h)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-d}animate(h,d,m,A,b){let w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const a=this._animation,D=a.targetPropertyPath;if(!D||D.length<1)return this._stopped=!0,!1;let S,M=!0;const q=this._events;let E=0;if(this._coreRuntimeAnimation)E=m-d,S=this._coreRuntimeAnimation.currentFrame,this._currentFrame=S,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let w;(d<this._minFrame||d>this._maxFrame)&&(d=this._minFrame),(m<this._minFrame||m>this._maxFrame)&&(m=this._maxFrame),E=m-d;let D=h*(a.framePerSecond*b)/1e3+this._absoluteFrameOffset,I=0,R=!1;const Z=A&&this._animationState.loopMode===j.b.ANIMATIONLOOPMODE_YOYO;if(Z){const h=(D-d)/E,m=Math.sin(h*Math.PI);D=Math.abs(m)*E+d;const j=m>=0?1:-1;this._yoyoDirection!==j&&(R=!0),this._yoyoDirection=j}if(this._previousElapsedTime=h,this._previousAbsoluteFrame=D,!A&&m>=d&&(D>=E&&b>0||D<=0&&b<0))M=!1,I=a._getKeyValue(this._maxValue);else if(!A&&d>=m&&(D<=E&&b<0||D>=0&&b>0))M=!1,I=a._getKeyValue(this._minValue);else if(this._animationState.loopMode!==j.b.ANIMATIONLOOPMODE_CYCLE){const h=m.toString()+d.toString();if(!this._offsetsCache[h]){this._animationState.repeatCount=0,this._animationState.loopMode=j.b.ANIMATIONLOOPMODE_CYCLE;const A=a._interpolate(d,this._animationState),b=a._interpolate(m,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),a.dataType){case j.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[h]=b-A;break;case j.b.ANIMATIONTYPE_QUATERNION:case j.b.ANIMATIONTYPE_VECTOR3:case j.b.ANIMATIONTYPE_VECTOR2:case j.b.ANIMATIONTYPE_SIZE:case j.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[h]=b.fm(A)}this._highLimitsCache[h]=b}I=this._highLimitsCache[h],w=this._offsetsCache[h]}if(void 0===w)switch(a.dataType){case j.b.ANIMATIONTYPE_FLOAT:w=0;break;case j.b.ANIMATIONTYPE_QUATERNION:w=j.l;break;case j.b.ANIMATIONTYPE_VECTOR3:w=j.r;break;case j.b.ANIMATIONTYPE_VECTOR2:w=j.q;break;case j.b.ANIMATIONTYPE_SIZE:w=j.m;break;case j.b.ANIMATIONTYPE_COLOR3:w=j.e;break;case j.b.ANIMATIONTYPE_COLOR4:w=j.i}if(this._host&&this._host.syncRoot){const h=this._host.syncRoot;S=d+E*((h.masterFrame-h.fromFrame)/(h.toFrame-h.fromFrame))}else S=D>0&&d>m||D<0&&d<m?M&&0!==E?m+D%E:d:M&&0!==E?d+D%E:m;if(!Z&&(b>0&&this.currentFrame>S||b<0&&this.currentFrame<S)||Z&&R){this._onLoop();for(let h=0;h<q.length;h++)q[h].onlyOnce||(q[h].isDone=!1);this._animationState.key=b>0?0:a.getKeys().length-1}this._currentFrame=S,this._animationState.repeatCount=0===E?0:D/E|0,this._animationState.highLimitValue=I,this._animationState.offsetValue=w}const I=a._interpolate(S,this._animationState);if(this.setValue(I,w),q.length)for(let j=0;j<q.length;j++)if(E>=0&&S>=q[j].frame&&q[j].frame>=d||E<0&&S<=q[j].frame&&q[j].frame<=d){const h=q[j];h.isDone||(h.onlyOnce&&(q.splice(j,1),j--),h.isDone=!0,h.action(S))}return M||(this._stopped=!0),M}}var M=m(11132);class q{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(h){this._weight=-1!==h?Math.min(Math.max(h,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(h){for(let d=0;d<this._runtimeAnimations.length;d++){this._runtimeAnimations[d]._prepareForSpeedRatioChange(h)}this._speedRatio=h,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(h,d){let m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,b=arguments.length>4&&void 0!==arguments[4]&&arguments[4],w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,a=arguments.length>6?arguments[6]:void 0,D=arguments.length>7?arguments[7]:void 0,S=arguments.length>8?arguments[8]:void 0,M=arguments.length>9&&void 0!==arguments[9]&&arguments[9],q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=d,this.fromFrame=m,this.toFrame=j,this.loopAnimation=b,this.onAnimationEnd=a,this.onAnimationLoop=S,this.isAdditive=M,this.playOrder=q,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.za=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new A.e,this.onAnimationLoopObservable=new A.e,this._scene=h,D&&this.appendAnimations(d,D),this._speedRatio=w,h._activeAnimatables.push(this)}syncWith(h){if(this._syncRoot=h,h){const h=this._scene._activeAnimatables.indexOf(this);h>-1&&(this._scene._activeAnimatables.splice(h,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(h,d){for(let m=0;m<d.length;m++){const j=d[m],A=new S(h,j,this._scene,this);A._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(A)}}getAnimationByTargetProperty(h){const d=this._runtimeAnimations;for(let m=0;m<d.length;m++)if(d[m].animation.targetProperty===h)return d[m].animation;return null}getRuntimeAnimationByTargetProperty(h){const d=this._runtimeAnimations;for(let m=0;m<d.length;m++)if(d[m].animation.targetProperty===h)return d[m];return null}reset(){const h=this._runtimeAnimations;for(let d=0;d<h.length;d++)h[d].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(h){const d=this._runtimeAnimations;for(let m=0;m<d.length;m++)d[m].animation.enableBlending=!0,d[m].animation.blendingSpeed=h}disableBlending(){const h=this._runtimeAnimations;for(let d=0;d<h.length;d++)h[d].animation.enableBlending=!1}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const m=this._runtimeAnimations;if(m[0]){const d=m[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??m[0].currentFrame;const j=0===this.speedRatio?0:(h-this._frameToSyncFromJump)/d*1e3/this.speedRatio;this._manualJumpDelay=-j}for(let j=0;j<m.length;j++)m[j].goToFrame(h,d?this._weight:-1);this._goToFrame=h}get paused(){return this.za}pause(){this.za||(this.za=!0)}restart(){this.za=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(h,d){let m=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(h||d){const A=this._scene._activeAnimatables.indexOf(this);if(A>-1){const b=this._runtimeAnimations;for(let m=b.length-1;m>=0;m--){const j=b[m];h&&j.animation.name!=h||(d&&!d(j.target)||(j.dispose(),b.splice(m,1)))}0==b.length&&(m||this._scene._activeAnimatables.splice(A,1),j||this._raiseOnAnimationEnd())}}else{const h=this._scene._activeAnimatables.indexOf(this);if(h>-1){m||this._scene._activeAnimatables.splice(h,1);const d=this._runtimeAnimations;for(let h=0;h<d.length;h++)d[h].dispose();this._runtimeAnimations.length=0,j||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((h=>{this.onAnimationEndObservable.add((()=>{h(this)}),void 0,void 0,this,!0)}))}_animate(h){if(this.za)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=h),!0;if(null===this._localDelayOffset?(this._localDelayOffset=h,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=h-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let d=!1;const m=this._runtimeAnimations;let j;for(j=0;j<m.length;j++){const A=m[j].animate(h-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);d=d||A}if(this.animationStarted=d,!d){if(this.disposeOnEnd)for(j=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(j,1),j=0;j<m.length;j++)m[j].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return d}}function E(h){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return h.originalValue;let d=1;const m=D.d.Qd[0],j=D.d.Qd[1],A=D.d.Quaternion[0];let b=0;const w=h.animations[0],a=h.originalValue;let S=1,M=!1;if(h.totalWeight<1)S=1-h.totalWeight,a.decompose(j,A,m);else{if(b=1,d=h.totalWeight,S=w.weight/d,1==S){if(!h.totalAdditiveWeight)return w.currentValue;M=!0}w.currentValue.decompose(j,A,m)}if(!M){j.scaleInPlace(S),m.scaleInPlace(S),A.scaleInPlace(S);for(let w=b;w<h.animations.length;w++){const b=h.animations[w];if(0===b.weight)continue;S=b.weight/d;const a=D.d.Qd[2],M=D.d.Qd[3],q=D.d.Quaternion[1];b.currentValue.decompose(M,q,a),M.scaleAndAddToRef(S,j),q.scaleAndAddToRef(D.c.Dot(A,q)>0?S:-S,A),a.scaleAndAddToRef(S,m)}A.normalize()}for(let E=0;E<h.additiveAnimations.length;E++){const d=h.additiveAnimations[E];if(0===d.weight)continue;const b=D.d.Qd[2],w=D.d.Qd[3],a=D.d.Quaternion[1];d.currentValue.decompose(w,a,b),w.multiplyToRef(j,w),D.i.LerpToRef(j,w,d.weight,j),A.multiplyToRef(a,a),D.c.SlerpToRef(A,a,d.weight,A),b.scaleAndAddToRef(d.weight,m)}const q=w?w._animationState.workValue:D.d.Matrix[0].clone();return D.b.ComposeToRef(j,A,m,q),q}function I(h,d){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return d;const m=h.animations[0],j=h.originalValue;let A=d;if(0===h.totalWeight&&h.totalAdditiveWeight>0)A.D(j);else if(1===h.animations.length){if(D.c.SlerpToRef(j,m.currentValue,Math.min(1,h.totalWeight),A),0===h.totalAdditiveWeight)return A}else if(h.animations.length>1){let m,b,w=1;if(h.totalWeight<1){const d=1-h.totalWeight;m=[],b=[],m.push(j),b.push(d)}else{if(2===h.animations.length&&(D.c.SlerpToRef(h.animations[0].currentValue,h.animations[1].currentValue,h.animations[1].weight/h.totalWeight,d),0===h.totalAdditiveWeight))return d;m=[],b=[],w=h.totalWeight}for(let d=0;d<h.animations.length;d++){const j=h.animations[d];m.push(j.currentValue),b.push(j.weight/w)}let a=0;for(let h=0;h<m.length;)h?(a+=b[h],D.c.SlerpToRef(A,m[h],b[h]/a,A),h++):(D.c.SlerpToRef(m[h],m[h+1],b[h+1]/(b[h]+b[h+1]),d),A=d,a=b[h]+b[h+1],h+=2)}for(let b=0;b<h.additiveAnimations.length;b++){const d=h.additiveAnimations[b];0!==d.weight&&(A.multiplyToRef(d.currentValue,D.d.Quaternion[0]),D.c.SlerpToRef(A,D.d.Quaternion[0],d.weight,A))}return A}var R,Z,L=m(11604);R=L.c,(Z=a.e)&&(Z.prototype.copyAnimationRange=function(h,d,m){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3],b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new j.b(this.name,"_matrix",h.animations[0].framePerSecond,j.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const w=h.animations[0].getRange(d);if(!w)return!1;const a=w.from,D=w.to,S=h.animations[0].getKeys(),M=h.length,q=h.getParent(),E=this.getParent(),I=A&&q&&M&&this.length&&M!==this.length,R=I&&E&&q?E.length/q.length:1,Z=A&&!E&&b&&(1!==b.x||1!==b.y||1!==b.z),L=this.animations[0].getKeys();let B,V,v;for(let j=0,C=S.length;j<C;j++)B=S[j],B.frame>=a&&B.frame<=D&&(A?(v=B.value.clone(),I?(V=v.getTranslation(),v.setTranslation(V.scaleInPlace(R))):Z&&b?(V=v.getTranslation(),v.setTranslation(V.multiplyInPlace(b))):v=B.value):v=B.value,L.push({frame:B.frame+m,value:v}));return this.animations[0].createRange(d,a+m,D+m),!0}),R&&(R.prototype._animate=function(h){if(!this.animationsEnabled)return;const d=M.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=d}this.deltaTime=void 0!==h?h:this.useConstantAnimationDeltaTime?16:(d-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=d;const m=this._activeAnimatables;if(0===m.length)return;this._animationTime+=this.deltaTime;const A=this._animationTime;for(let j=0;j<m.length;j++){const h=m[j];!h._animate(A)&&h.disposeOnEnd&&j--}!function(h){if(h._registeredForLateAnimationBindings.length){for(let d=0;d<h._registeredForLateAnimationBindings.length;d++){const m=h._registeredForLateAnimationBindings.data[d];for(const h in m._lateAnimationHolders){const d=m._lateAnimationHolders[h],A=d.animations[0],b=d.originalValue;if(void 0===b||null===b)continue;const w=j.b.AllowMatrixDecomposeForInterpolation&&b.m;let a=m[h];if(w)a=E(d);else if(void 0!==b.w)a=I(d,a||D.c.Identity());else{let h=0,m=1;const w=A&&A._animationState.loopMode===j.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(d.totalWeight<1)a=w?b.clone?b.clone():b:A&&b.scale?b.scale(1-d.totalWeight):A?b*(1-d.totalWeight):b.clone?b.clone():b;else if(A){m=d.totalWeight;const j=A.weight/m;a=1!==j?A.currentValue.scale?A.currentValue.scale(j):A.currentValue*j:A.currentValue,w&&(a.addToRef?a.addToRef(b,a):a+=b),h=1}for(let j=h;j<d.animations.length;j++){const h=d.animations[j],A=h.weight/m;A&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(A,a):a+=h.currentValue*A)}for(let j=0;j<d.additiveAnimations.length;j++){const h=d.additiveAnimations[j],m=h.weight;m&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(m,a):a+=h.currentValue*m)}}m[h]=a}m._lateAnimationHolders={}}h._registeredForLateAnimationBindings.reset()}}(this)},R.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((h,d)=>h.playOrder-d.playOrder))},R.prototype.beginWeightedAnimation=function(h,d,m){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,A=arguments.length>4?arguments[4]:void 0,b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,D=arguments.length>8?arguments[8]:void 0,S=arguments.length>9?arguments[9]:void 0,M=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const q=this.beginAnimation(h,d,m,A,b,w,a,!1,D,S,M);return q.weight=j,q},R.prototype.beginAnimation=function(h,d,m,j){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,b=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0,a=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],D=arguments.length>8?arguments[8]:void 0,S=arguments.length>9?arguments[9]:void 0,M=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(A<0){const h=d;d=m,m=h,A=-A}d>m&&(A=-A),a&&this.stopAnimation(h,void 0,D),w||(w=new q(this,h,d,m,j,A,b,void 0,S,M));const E=!D||D(h);if(h.animations&&E&&w.appendAnimations(h,h.animations),h.getAnimatables){const M=h.getAnimatables();for(let h=0;h<M.length;h++)this.beginAnimation(M[h],d,m,j,A,b,w,a,D,S)}return w.reset(),w},R.prototype.beginHierarchyAnimation=function(h,d,m,j,A){let b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,D=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],S=arguments.length>9?arguments[9]:void 0,M=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const q=h.getDescendants(d),E=[];E.push(this.beginAnimation(h,m,j,A,b,w,a,D,S,void 0,M));for(const I of q)E.push(this.beginAnimation(I,m,j,A,b,w,a,D,S,void 0,M));return E},R.prototype.beginDirectAnimation=function(h,d,m,j,A){let b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(b<0){const h=m;m=j,j=h,b=-b}return m>j&&(b=-b),new q(this,h,m,j,A,b,arguments.length>6?arguments[6]:void 0,d,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},R.prototype.beginDirectHierarchyAnimation=function(h,d,m,j,A,b,w,a,D){let S=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const M=h.getDescendants(d),q=[];q.push(this.beginDirectAnimation(h,m,j,A,b,w,a,D,S));for(const E of M)q.push(this.beginDirectAnimation(E,m,j,A,b,w,a,D,S));return q},R.prototype.getAnimatableByTarget=function(h){for(let d=0;d<this._activeAnimatables.length;d++)if(this._activeAnimatables[d].target===h)return this._activeAnimatables[d];return null},R.prototype.getAllAnimatablesByTarget=function(h){const d=[];for(let m=0;m<this._activeAnimatables.length;m++)this._activeAnimatables[m].target===h&&d.push(this._activeAnimatables[m]);return d},R.prototype.stopAnimation=function(h,d,m){const j=this.getAllAnimatablesByTarget(h);for(const A of j)A.stop(d,m)},R.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let h=0;h<this._activeAnimatables.length;h++)this._activeAnimatables[h].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const h of this.animationGroups)h.stop()});class B{getClassName(){return"TargetedAnimation"}serialize(){const h={};return h.animation=this.animation.serialize(),h.targetId=this.target.id,h}}class V{get mask(){return this._mask}set mask(h){this._mask!==h&&(this._mask=h,this.syncWithMask(!0))}syncWithMask(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||h){this._numActiveAnimatables=0;for(let h=0;h<this._animatables.length;++h){const d=this._animatables[h];!this.mask||this.mask.disabled||this.mask.retainsTarget(d.target.name)?(this._numActiveAnimatables++,d.paused&&d.restart()):d.paused||d.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let h=0;h<this._animatables.length;++h){const d=this._animatables[h];this.mask.retainsTarget(d.target.name)||(d.stop(),this._animatables.splice(h,1),--h)}for(let h=0;h<this._targetedAnimations.length;h++){const d=this._targetedAnimations[h];this.mask.retainsTarget(d.target.name)||(this._targetedAnimations.splice(h,1),--h)}}}get from(){return this._from}set from(h){if(this._from!==h){this._from=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].fromFrame=this._from}}}get to(){return this._to}set to(h){if(this._to!==h){this._to=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(h){if(this._speedRatio!==h){this._speedRatio=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(h){if(this._loopAnimation!==h){this._loopAnimation=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(h){if(this._isAdditive!==h){this._isAdditive=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(h){this._weight!==h&&(this._weight=h,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(h){if(this._playOrder!==h&&(this._playOrder=h,this._animatables.length>0)){for(let h=0;h<this._animatables.length;h++)this._animatables[h].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(h){if(this._enableBlending!==h&&(this._enableBlending=h,null!==h))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.enableBlending=h}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(h){if(this._blendingSpeed!==h&&(this._blendingSpeed=h,null!==h))for(let d=0;d<this._targetedAnimations.length;++d)this._targetedAnimations[d].animation.blendingSpeed=h}getLength(h,d){h=h??this._from;return((d=d??this._to)-h)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(h){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],m=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3?arguments[3]:void 0;if(0===h.length)return null;j=j??h[0].weight;let A=Number.MAX_VALUE,b=-Number.MAX_VALUE;if(m)for(const a of h)a.from<A&&(A=a.from),a.to>b&&(b=a.to);const w=new V(h[0].name+"_merged",h[0]._scene,j);for(const a of h){m&&a.normalize(A,b);for(const h of a.targetedAnimations)w.addTargetedAnimation(h.animation,h.target);d&&a.dispose()}return w}constructor(h){let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=h,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new A.e,this.onAnimationLoopObservable=new A.e,this.onAnimationGroupLoopObservable=new A.e,this.onAnimationGroupEndObservable=new A.e,this.onAnimationGroupPauseObservable=new A.e,this.onAnimationGroupPlayObservable=new A.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=d||b.b.LastCreatedScene,this._weight=m,this._playOrder=j,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(h,d){const m=new B;m.animation=h,m.target=d;const j=h.getKeys();return this._from>j[0].frame&&(this._from=j[0].frame),this._to<j[j.length-1].frame&&(this._to=j[j.length-1].frame),null!==this._enableBlending&&(h.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(h.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(m),this._shouldStart=!0,m}removeTargetedAnimation(h){for(let d=this._targetedAnimations.length-1;d>-1;d--){this._targetedAnimations[d].animation===h&&this._targetedAnimations.splice(d,1)}}normalize(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==h&&(h=this._from),null==d&&(d=this._to);for(let m=0;m<this._targetedAnimations.length;m++){const j=this._targetedAnimations[m].animation.getKeys(),A=j[0],b=j[j.length-1];if(A.frame>h){const d={frame:h,value:A.value,inTangent:A.inTangent,outTangent:A.outTangent,interpolation:A.interpolation};j.splice(0,0,d)}if(b.frame<d){const h={frame:d,value:b.value,inTangent:b.inTangent,outTangent:b.outTangent,interpolation:b.interpolation};j.push(h)}}return this._from=h,this._to=d,this}_processLoop(h,d,m){h.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(d),this._animationLoopFlags[m]||(this._animationLoopFlags[m]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0],d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,m=arguments.length>2?arguments[2]:void 0,j=arguments.length>3?arguments[3]:void 0,A=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=h,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let b=0;b<this._targetedAnimations.length;b++){const w=this._targetedAnimations[b],a=this._scene.beginDirectAnimation(w.target,[w.animation],void 0!==m?m:this._from,void 0!==j?j:this._to,h,d,void 0,void 0,void 0!==A?A:this._isAdditive);a.weight=this._weight,a.playOrder=this._playOrder,a.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(w),this._checkAnimationGroupEnded(a)},this._processLoop(a,w,b),this._animatables.push(a)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=d,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let h=0;h<this._animatables.length;h++){this._animatables[h].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(h){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==h&&(this.loopAnimation=h),this.restart()):(this.stop(),this.start(h,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].reset()}return this}restart(){if(!this._isStarted)return this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const d=this._animatables.slice();for(let j=0;j<d.length;j++)d[j].stop(void 0,void 0,!0,h);let m=0;for(let j=0;j<this._scene._activeAnimatables.length;j++){const d=this._scene._activeAnimatables[j];d._runtimeAnimations.length>0?this._scene._activeAnimatables[m++]=d:h&&this._checkAnimationGroupEnded(d,h)}return this._scene._activeAnimatables.length=m,this._isStarted=!1,this}setWeightForAllAnimatables(h){for(let d=0;d<this._animatables.length;d++){this._animatables[d].weight=h}return this}syncAllAnimationsWith(h){for(let d=0;d<this._animatables.length;d++){this._animatables[d].syncWith(h)}return this}goToFrame(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let m=0;m<this._animatables.length;m++){this._animatables[m].goToFrame(h,d)}return this}getCurrentFrame(){var h;return(null===(h=this.animatables[0])||void 0===h?void 0:h.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const h=this._scene.animationGroups.indexOf(this);if(h>-1&&this._scene.animationGroups.splice(h,1),this._parentContainer){const h=this._parentContainer.animationGroups.indexOf(this);h>-1&&this._parentContainer.animationGroups.splice(h,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(h){let d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const m=this._animatables.indexOf(h);m>-1&&this._animatables.splice(m,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,d||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(h,d){let m=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const j=new V(h||this.name,this._scene,this._weight,this._playOrder);j._from=this.from,j._to=this.to,j._speedRatio=this.speedRatio,j._loopAnimation=this.loopAnimation,j._isAdditive=this.isAdditive,j._enableBlending=this.enableBlending,j._blendingSpeed=this.blendingSpeed,j.metadata=this.metadata,j.mask=this.mask;for(const A of this._targetedAnimations)j.addTargetedAnimation(m?A.animation.clone():A.animation,d?d(A.target):A.target);return j}serialize(){const h={};h.name=this.name,h.from=this.from,h.to=this.to,h.speedRatio=this.speedRatio,h.loopAnimation=this.loopAnimation,h.isAdditive=this.isAdditive,h.weight=this.weight,h.playOrder=this.playOrder,h.enableBlending=this.enableBlending,h.blendingSpeed=this.blendingSpeed,h.targetedAnimations=[];for(let d=0;d<this.targetedAnimations.length;d++){const m=this.targetedAnimations[d];h.targetedAnimations[d]=m.serialize()}return w.e&&w.e.HasTags(this)&&(h.tags=w.e.GetTags(this)),this.metadata&&(h.metadata=this.metadata),h}static Parse(h,d){const m=new V(h.name,d,h.weight,h.playOrder);for(let A=0;A<h.targetedAnimations.length;A++){const b=h.targetedAnimations[A],w=j.b.Parse(b.animation),a=b.targetId;if("influence"===b.animation.property){const h=d.getMorphTargetById(a);h&&m.addTargetedAnimation(w,h)}else{const h=d.getNodeById(a);null!=h&&m.addTargetedAnimation(w,h)}}return w.e&&w.e.AddTagsTo(m,h.tags),null!==h.from&&null!==h.to&&m.normalize(h.from,h.to),void 0!==h.speedRatio&&(m._speedRatio=h.speedRatio),void 0!==h.loopAnimation&&(m._loopAnimation=h.loopAnimation),void 0!==h.isAdditive&&(m._isAdditive=h.isAdditive),void 0!==h.weight&&(m._weight=h.weight),void 0!==h.playOrder&&(m._playOrder=h.playOrder),void 0!==h.enableBlending&&(m._enableBlending=h.enableBlending),void 0!==h.blendingSpeed&&(m._blendingSpeed=h.blendingSpeed),void 0!==h.metadata&&(m.metadata=h.metadata),m}static MakeAnimationAdditive(h,d,m){let A;A="object"===typeof d?d:{referenceFrame:d,range:m,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let b=h;A.cloneOriginalAnimationGroup&&(b=h.clone(A.clonedAnimationGroupName||b.name));const w=b.targetedAnimations;for(let a=0;a<w.length;a++){const h=w[a];h.animation=j.b.MakeAnimationAdditive(h.animation,A)}if(b.isAdditive=!0,A.clipKeys){let h=Number.MAX_VALUE,d=-Number.MAX_VALUE;const m=b.targetedAnimations;for(let j=0;j<m.length;j++){const A=m[j].animation.getKeys();h>A[0].frame&&(h=A[0].frame),d<A[A.length-1].frame&&(d=A[A.length-1].frame)}b._from=h,b._to=d}return b}static ClipKeys(h,d,m,j,A){const b=h.clone(j||h.name);return V.ClipKeysInPlace(b,d,m,A)}static ClipKeysInPlace(h,d,m,j){return V.ClipInPlace(h,d,m,j,!1)}static ClipFrames(h,d,m,j,A){const b=h.clone(j||h.name);return V.ClipFramesInPlace(b,d,m,A)}static ClipFramesInPlace(h,d,m,j){return V.ClipInPlace(h,d,m,j,!0)}static ClipInPlace(h,d,m,j){let A=arguments.length>4&&void 0!==arguments[4]&&arguments[4],b=Number.MAX_VALUE,w=-Number.MAX_VALUE;const a=h.targetedAnimations;for(let D=0;D<a.length;D++){const h=a[D],S=j?h.animation:h.animation.clone();A&&(S.createKeyForFrame(d),S.createKeyForFrame(m));const M=S.getKeys(),q=[];let E=Number.MAX_VALUE;for(let j=0;j<M.length;j++){const h=M[j];if(!A&&j>=d&&j<=m||A&&h.frame>=d&&h.frame<=m){const d={frame:h.frame,value:h.value.clone?h.value.clone():h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation,lockedTangent:h.lockedTangent};E===Number.MAX_VALUE&&(E=d.frame),d.frame-=E,q.push(d)}}0!==q.length?(b>q[0].frame&&(b=q[0].frame),w<q[q.length-1].frame&&(w=q[q.length-1].frame),S.setKeys(q,!0),h.animation=S):(a.splice(D,1),D--)}return h._from=b,h._to=w,h}getClassName(){return"AnimationGroup"}toString(h){let d="Name: "+this.name;return d+=", type: "+this.getClassName(),h&&(d+=", from: "+this._from,d+=", to: "+this._to,d+=", isStarted: "+this._isStarted,d+=", speedRatio: "+this._speedRatio,d+=", targetedAnimations length: "+this._targetedAnimations.length,d+=", animatables length: "+this._animatables),d}}}}]);