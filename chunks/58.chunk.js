"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[58],{14296:(Z,c,L)=>{L.r(c),L.d(c,{AnimationGroup:()=>M,TargetedAnimation:()=>w});var k=L(11716),N=L(11027),R=L(11023),G=L(11251),V=L(12745),p=L(10993);class J{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(Z,c,L,N){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=c,this._target=Z,this._scene=L,this._host=N,this._activeTargets=[],c._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===k.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=p.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const Z={frame:0,value:this._minValue};this._keys.splice(0,0,Z)}if(this._target instanceof Array){let Z=0;for(const c of this._target)this._preparePath(c,Z),this._getOriginalValues(Z),Z++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const R=c.getEvents();if(R&&R.length>0)for(const k of R)this._events.push(k._clone());this._enableBlending=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(Z){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const L=this._animation.targetPropertyPath;if(L.length>1){let k=Z;for(let Z=0;Z<L.length-1;Z++){const c=L[Z];if(k=k[c],void 0===k)throw new Error(`Invalid property (${c}) in property path (${L.join(".")})`)}this._targetPath=L[L.length-1],this._activeTargets[c]=k}else this._targetPath=L[0],this._activeTargets[c]=Z;if(void 0===this._activeTargets[c][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${L.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let Z=0;for(const c of this._target)void 0!==this._originalValue[Z]&&this._setValue(c,this._activeTargets[Z],this._originalValue[Z],-1,Z),Z++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let Z=0;Z<this._events.length;Z++)this._events[Z].isDone=!1}isStopped(){return this._stopped}dispose(){const Z=this._animation.runtimeAnimations.indexOf(this);Z>-1&&this._animation.runtimeAnimations.splice(Z,1)}setValue(Z,c){if(this._targetIsArray)for(let L=0;L<this._target.length;L++){const k=this._target[L];this._setValue(k,this._activeTargets[L],Z,c,L)}else this._setValue(this._target,this._directTarget,Z,c,0)}_getOriginalValues(){let Z,c=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const L=this._activeTargets[c];Z=L.getLocalMatrix&&"_matrix"===this._targetPath?L.getLocalMatrix():L[this._targetPath],Z&&Z.clone?this._originalValue[c]=Z.clone():this._originalValue[c]=Z}_registerTargetForLateAnimationBinding(Z,c){const L=Z.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(L),L._lateAnimationHolders||(L._lateAnimationHolders={}),L._lateAnimationHolders[Z.targetPath]||(L._lateAnimationHolders[Z.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:c}),Z.isAdditive?(L._lateAnimationHolders[Z.targetPath].additiveAnimations.push(Z),L._lateAnimationHolders[Z.targetPath].totalAdditiveWeight+=Z.weight):(L._lateAnimationHolders[Z.targetPath].animations.push(Z),L._lateAnimationHolders[Z.targetPath].totalWeight+=Z.weight)}_setValue(Z,c,L,N,R){if(this._currentActiveTarget=c,this._weight=N,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const Z=c[this._targetPath];Z.clone?this._originalBlendValue=Z.clone():this._originalBlendValue=Z}this._originalBlendValue.m?k.c.AllowMatrixDecomposeForInterpolation?this._currentValue?p.b.DecomposeLerpToRef(this._originalBlendValue,L,this._blendingFactor,this._currentValue):this._currentValue=p.b.DecomposeLerp(this._originalBlendValue,L,this._blendingFactor):this._currentValue?p.b.LerpToRef(this._originalBlendValue,L,this._blendingFactor,this._currentValue):this._currentValue=p.b.Lerp(this._originalBlendValue,L,this._blendingFactor):this._currentValue=k.c._UniversalLerp(this._originalBlendValue,L,this._blendingFactor);const N=Z&&Z.animationPropertiesOverride?Z.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=N}else this._currentValue?this._currentValue.R?this._currentValue.R(L):this._currentValue=L:null!==L&&void 0!==L&&L.clone?this._currentValue=L.clone():this._currentValue=L;-1!==N?this._registerTargetForLateAnimationBinding(this,this._originalValue[R]):this._animationState.loopMode===k.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[R],c[this._targetPath]):c[this._targetPath]=this._originalValue[R]+this._currentValue:c[this._targetPath]=this._currentValue,Z.DJ&&Z.DJ(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(Z){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const L=this._animation.getKeys();Z<L[0].frame?Z=L[0].frame:Z>L[L.length-1].frame&&(Z=L[L.length-1].frame);const k=this._events;if(k.length)for(let R=0;R<k.length;R++)k[R].onlyOnce||(k[R].isDone=k[R].frame<Z);this._currentFrame=Z;const N=this._animation._interpolate(Z,this._animationState);this.setValue(N,c)}_prepareForSpeedRatioChange(Z){const c=this._previousElapsedTime*(this._animation.framePerSecond*Z)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-c}animate(Z,c,L,N,R){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const V=this._animation,p=V.targetPropertyPath;if(!p||p.length<1)return this._stopped=!0,!1;let J,z=!0;const i=this._events;let t=0;if(this._coreRuntimeAnimation)t=L-c,J=this._coreRuntimeAnimation.currentFrame,this._currentFrame=J,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let G;(c<this._minFrame||c>this._maxFrame)&&(c=this._minFrame),(L<this._minFrame||L>this._maxFrame)&&(L=this._maxFrame),t=L-c;let p=Z*(V.framePerSecond*R)/1e3+this._absoluteFrameOffset,E=0,x=!1;const q=N&&this._animationState.loopMode===k.c.ANIMATIONLOOPMODE_YOYO;if(q){const Z=(p-c)/t,L=Math.sin(Z*Math.PI);p=Math.abs(L)*t+c;const k=L>=0?1:-1;this._yoyoDirection!==k&&(x=!0),this._yoyoDirection=k}if(this._previousElapsedTime=Z,this._previousAbsoluteFrame=p,!N&&L>=c&&(p>=t&&R>0||p<=0&&R<0))z=!1,E=V._getKeyValue(this._maxValue);else if(!N&&c>=L&&(p<=t&&R<0||p>=0&&R>0))z=!1,E=V._getKeyValue(this._minValue);else if(this._animationState.loopMode!==k.c.ANIMATIONLOOPMODE_CYCLE){const Z=L.toString()+c.toString();if(!this._offsetsCache[Z]){this._animationState.repeatCount=0,this._animationState.loopMode=k.c.ANIMATIONLOOPMODE_CYCLE;const N=V._interpolate(c,this._animationState),R=V._interpolate(L,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),V.dataType){case k.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[Z]=R-N;break;case k.c.ANIMATIONTYPE_QUATERNION:case k.c.ANIMATIONTYPE_VECTOR3:case k.c.ANIMATIONTYPE_VECTOR2:case k.c.ANIMATIONTYPE_SIZE:case k.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[Z]=R.yL(N)}this._highLimitsCache[Z]=R}E=this._highLimitsCache[Z],G=this._offsetsCache[Z]}if(void 0===G)switch(V.dataType){case k.c.ANIMATIONTYPE_FLOAT:G=0;break;case k.c.ANIMATIONTYPE_QUATERNION:G=k.k;break;case k.c.ANIMATIONTYPE_VECTOR3:G=k.t;break;case k.c.ANIMATIONTYPE_VECTOR2:G=k.r;break;case k.c.ANIMATIONTYPE_SIZE:G=k.n;break;case k.c.ANIMATIONTYPE_COLOR3:G=k.f;break;case k.c.ANIMATIONTYPE_COLOR4:G=k.h}if(this._host&&this._host.syncRoot){const Z=this._host.syncRoot;J=c+t*((Z.masterFrame-Z.fromFrame)/(Z.toFrame-Z.fromFrame))}else J=p>0&&c>L||p<0&&c<L?z&&0!==t?L+p%t:c:z&&0!==t?c+p%t:L;if(!q&&(R>0&&this.currentFrame>J||R<0&&this.currentFrame<J)||q&&x){this._onLoop();for(let Z=0;Z<i.length;Z++)i[Z].onlyOnce||(i[Z].isDone=!1);this._animationState.key=R>0?0:V.getKeys().length-1}this._currentFrame=J,this._animationState.repeatCount=0===t?0:p/t|0,this._animationState.highLimitValue=E,this._animationState.offsetValue=G}const E=V._interpolate(J,this._animationState);if(this.setValue(E,G),i.length)for(let k=0;k<i.length;k++)if(t>=0&&J>=i[k].frame&&i[k].frame>=c||t<0&&J<=i[k].frame&&i[k].frame<=c){const Z=i[k];Z.isDone||(Z.onlyOnce&&(i.splice(k,1),k--),Z.isDone=!0,Z.action(J))}return z||(this._stopped=!0),z}}var z=L(11065);class i{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(Z){this._weight=-1!==Z?Math.min(Math.max(Z,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(Z){for(let c=0;c<this._runtimeAnimations.length;c++){this._runtimeAnimations[c]._prepareForSpeedRatioChange(Z)}this._speedRatio=Z,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(Z,c){let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,R=arguments.length>4&&void 0!==arguments[4]&&arguments[4],G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,V=arguments.length>6?arguments[6]:void 0,p=arguments.length>7?arguments[7]:void 0,J=arguments.length>8?arguments[8]:void 0,z=arguments.length>9&&void 0!==arguments[9]&&arguments[9],i=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=c,this.fromFrame=L,this.toFrame=k,this.loopAnimation=R,this.onAnimationEnd=V,this.onAnimationLoop=J,this.isAdditive=z,this.playOrder=i,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.oV=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new N.b,this.onAnimationLoopObservable=new N.b,this._scene=Z,p&&this.appendAnimations(c,p),this._speedRatio=G,Z._activeAnimatables.push(this)}syncWith(Z){if(this._syncRoot=Z,Z){const Z=this._scene._activeAnimatables.indexOf(this);Z>-1&&(this._scene._activeAnimatables.splice(Z,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(Z,c){for(let L=0;L<c.length;L++){const k=c[L],N=new J(Z,k,this._scene,this);N._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(N)}}getAnimationByTargetProperty(Z){const c=this._runtimeAnimations;for(let L=0;L<c.length;L++)if(c[L].animation.targetProperty===Z)return c[L].animation;return null}getRuntimeAnimationByTargetProperty(Z){const c=this._runtimeAnimations;for(let L=0;L<c.length;L++)if(c[L].animation.targetProperty===Z)return c[L];return null}reset(){const Z=this._runtimeAnimations;for(let c=0;c<Z.length;c++)Z[c].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(Z){const c=this._runtimeAnimations;for(let L=0;L<c.length;L++)c[L].animation.enableBlending=!0,c[L].animation.blendingSpeed=Z}disableBlending(){const Z=this._runtimeAnimations;for(let c=0;c<Z.length;c++)Z[c].animation.enableBlending=!1}goToFrame(Z){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const L=this._runtimeAnimations;if(L[0]){const c=L[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??L[0].currentFrame;const k=0===this.speedRatio?0:(Z-this._frameToSyncFromJump)/c*1e3/this.speedRatio;this._manualJumpDelay=-k}for(let k=0;k<L.length;k++)L[k].goToFrame(Z,c?this._weight:-1);this._goToFrame=Z}get paused(){return this.oV}pause(){this.oV||(this.oV=!0)}restart(){this.oV=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(Z,c){let L=arguments.length>2&&void 0!==arguments[2]&&arguments[2],k=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Z||c){const N=this._scene._activeAnimatables.indexOf(this);if(N>-1){const R=this._runtimeAnimations;for(let L=R.length-1;L>=0;L--){const k=R[L];Z&&k.animation.name!=Z||(c&&!c(k.target)||(k.dispose(),R.splice(L,1)))}0==R.length&&(L||this._scene._activeAnimatables.splice(N,1),k||this._raiseOnAnimationEnd())}}else{const Z=this._scene._activeAnimatables.indexOf(this);if(Z>-1){L||this._scene._activeAnimatables.splice(Z,1);const c=this._runtimeAnimations;for(let Z=0;Z<c.length;Z++)c[Z].dispose();this._runtimeAnimations.length=0,k||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((Z=>{this.onAnimationEndObservable.add((()=>{Z(this)}),void 0,void 0,this,!0)}))}_animate(Z){if(this.oV)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=Z),!0;if(null===this._localDelayOffset?(this._localDelayOffset=Z,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=Z-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let c=!1;const L=this._runtimeAnimations;let k;for(k=0;k<L.length;k++){const N=L[k].animate(Z-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);c=c||N}if(this.animationStarted=c,!c){if(this.disposeOnEnd)for(k=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(k,1),k=0;k<L.length;k++)L[k].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return c}}function t(Z){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return Z.originalValue;let c=1;const L=p.d.Mc[0],k=p.d.Mc[1],N=p.d.Quaternion[0];let R=0;const G=Z.animations[0],V=Z.originalValue;let J=1,z=!1;if(Z.totalWeight<1)J=1-Z.totalWeight,V.decompose(k,N,L);else{if(R=1,c=Z.totalWeight,J=G.weight/c,1==J){if(!Z.totalAdditiveWeight)return G.currentValue;z=!0}G.currentValue.decompose(k,N,L)}if(!z){k.scaleInPlace(J),L.scaleInPlace(J),N.scaleInPlace(J);for(let G=R;G<Z.animations.length;G++){const R=Z.animations[G];if(0===R.weight)continue;J=R.weight/c;const V=p.d.Mc[2],z=p.d.Mc[3],i=p.d.Quaternion[1];R.currentValue.decompose(z,i,V),z.scaleAndAddToRef(J,k),i.scaleAndAddToRef(p.c.Dot(N,i)>0?J:-J,N),V.scaleAndAddToRef(J,L)}N.normalize()}for(let t=0;t<Z.additiveAnimations.length;t++){const c=Z.additiveAnimations[t];if(0===c.weight)continue;const R=p.d.Mc[2],G=p.d.Mc[3],V=p.d.Quaternion[1];c.currentValue.decompose(G,V,R),G.multiplyToRef(k,G),p.h.LerpToRef(k,G,c.weight,k),N.multiplyToRef(V,V),p.c.SlerpToRef(N,V,c.weight,N),R.scaleAndAddToRef(c.weight,L)}const i=G?G._animationState.workValue:p.d.Matrix[0].clone();return p.b.ComposeToRef(k,N,L,i),i}function E(Z,c){if(0===Z.totalWeight&&0===Z.totalAdditiveWeight)return c;const L=Z.animations[0],k=Z.originalValue;let N=c;if(0===Z.totalWeight&&Z.totalAdditiveWeight>0)N.R(k);else if(1===Z.animations.length){if(p.c.SlerpToRef(k,L.currentValue,Math.min(1,Z.totalWeight),N),0===Z.totalAdditiveWeight)return N}else if(Z.animations.length>1){let L,R,G=1;if(Z.totalWeight<1){const c=1-Z.totalWeight;L=[],R=[],L.push(k),R.push(c)}else{if(2===Z.animations.length&&(p.c.SlerpToRef(Z.animations[0].currentValue,Z.animations[1].currentValue,Z.animations[1].weight/Z.totalWeight,c),0===Z.totalAdditiveWeight))return c;L=[],R=[],G=Z.totalWeight}for(let c=0;c<Z.animations.length;c++){const k=Z.animations[c];L.push(k.currentValue),R.push(k.weight/G)}let V=0;for(let Z=0;Z<L.length;)Z?(V+=R[Z],p.c.SlerpToRef(N,L[Z],R[Z]/V,N),Z++):(p.c.SlerpToRef(L[Z],L[Z+1],R[Z+1]/(R[Z]+R[Z+1]),c),N=c,V=R[Z]+R[Z+1],Z+=2)}for(let R=0;R<Z.additiveAnimations.length;R++){const c=Z.additiveAnimations[R];0!==c.weight&&(N.multiplyToRef(c.currentValue,p.d.Quaternion[0]),p.c.SlerpToRef(N,p.d.Quaternion[0],c.weight,N))}return N}var x,q,O=L(11588);x=O.d,(q=V.e)&&(q.prototype.copyAnimationRange=function(Z,c,L){let N=arguments.length>3&&void 0!==arguments[3]&&arguments[3],R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new k.c(this.name,"_matrix",Z.animations[0].framePerSecond,k.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const G=Z.animations[0].getRange(c);if(!G)return!1;const V=G.from,p=G.to,J=Z.animations[0].getKeys(),z=Z.length,i=Z.getParent(),t=this.getParent(),E=N&&i&&z&&this.length&&z!==this.length,x=E&&t&&i?t.length/i.length:1,q=N&&!t&&R&&(1!==R.x||1!==R.y||1!==R.z),O=this.animations[0].getKeys();let w,M,P;for(let k=0,j=J.length;k<j;k++)w=J[k],w.frame>=V&&w.frame<=p&&(N?(P=w.value.clone(),E?(M=P.getTranslation(),P.setTranslation(M.scaleInPlace(x))):q&&R?(M=P.getTranslation(),P.setTranslation(M.multiplyInPlace(R))):P=w.value):P=w.value,O.push({frame:w.frame+L,value:P}));return this.animations[0].createRange(c,V+L,p+L),!0}),x&&(x.prototype._animate=function(Z){if(!this.animationsEnabled)return;const c=z.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=c}this.deltaTime=void 0!==Z?Z:this.useConstantAnimationDeltaTime?16:(c-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=c;const L=this._activeAnimatables;if(0===L.length)return;this._animationTime+=this.deltaTime;const N=this._animationTime;for(let k=0;k<L.length;k++){const Z=L[k];!Z._animate(N)&&Z.disposeOnEnd&&k--}!function(Z){if(Z._registeredForLateAnimationBindings.length){for(let c=0;c<Z._registeredForLateAnimationBindings.length;c++){const L=Z._registeredForLateAnimationBindings.data[c];for(const Z in L._lateAnimationHolders){const c=L._lateAnimationHolders[Z],N=c.animations[0],R=c.originalValue;if(void 0===R||null===R)continue;const G=k.c.AllowMatrixDecomposeForInterpolation&&R.m;let V=L[Z];if(G)V=t(c);else if(void 0!==R.w)V=E(c,V||p.c.Identity());else{let Z=0,L=1;const G=N&&N._animationState.loopMode===k.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(c.totalWeight<1)V=G?R.clone?R.clone():R:N&&R.scale?R.scale(1-c.totalWeight):N?R*(1-c.totalWeight):R.clone?R.clone():R;else if(N){L=c.totalWeight;const k=N.weight/L;V=1!==k?N.currentValue.scale?N.currentValue.scale(k):N.currentValue*k:N.currentValue,G&&(V.addToRef?V.addToRef(R,V):V+=R),Z=1}for(let k=Z;k<c.animations.length;k++){const Z=c.animations[k],N=Z.weight/L;N&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(N,V):V+=Z.currentValue*N)}for(let k=0;k<c.additiveAnimations.length;k++){const Z=c.additiveAnimations[k],L=Z.weight;L&&(Z.currentValue.scaleAndAddToRef?Z.currentValue.scaleAndAddToRef(L,V):V+=Z.currentValue*L)}}L[Z]=V}L._lateAnimationHolders={}}Z._registeredForLateAnimationBindings.reset()}}(this)},x.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((Z,c)=>Z.playOrder-c.playOrder))},x.prototype.beginWeightedAnimation=function(Z,c,L){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,N=arguments.length>4?arguments[4]:void 0,R=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,G=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,p=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,z=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const i=this.beginAnimation(Z,c,L,N,R,G,V,!1,p,J,z);return i.weight=k,i},x.prototype.beginAnimation=function(Z,c,L,k){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,R=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0,V=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],p=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,z=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(N<0){const Z=c;c=L,L=Z,N=-N}c>L&&(N=-N),V&&this.stopAnimation(Z,void 0,p),G||(G=new i(this,Z,c,L,k,N,R,void 0,J,z));const t=!p||p(Z);if(Z.animations&&t&&G.appendAnimations(Z,Z.animations),Z.getAnimatables){const z=Z.getAnimatables();for(let Z=0;Z<z.length;Z++)this.beginAnimation(z[Z],c,L,k,N,R,G,V,p,J)}return G.reset(),G},x.prototype.beginHierarchyAnimation=function(Z,c,L,k,N){let R=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,G=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,p=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=arguments.length>9?arguments[9]:void 0,z=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const i=Z.getDescendants(c),t=[];t.push(this.beginAnimation(Z,L,k,N,R,G,V,p,J,void 0,z));for(const E of i)t.push(this.beginAnimation(E,L,k,N,R,G,V,p,J,void 0,z));return t},x.prototype.beginDirectAnimation=function(Z,c,L,k,N){let R=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(R<0){const Z=L;L=k,k=Z,R=-R}return L>k&&(R=-R),new i(this,Z,L,k,N,R,arguments.length>6?arguments[6]:void 0,c,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},x.prototype.beginDirectHierarchyAnimation=function(Z,c,L,k,N,R,G,V,p){let J=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const z=Z.getDescendants(c),i=[];i.push(this.beginDirectAnimation(Z,L,k,N,R,G,V,p,J));for(const t of z)i.push(this.beginDirectAnimation(t,L,k,N,R,G,V,p,J));return i},x.prototype.getAnimatableByTarget=function(Z){for(let c=0;c<this._activeAnimatables.length;c++)if(this._activeAnimatables[c].target===Z)return this._activeAnimatables[c];return null},x.prototype.getAllAnimatablesByTarget=function(Z){const c=[];for(let L=0;L<this._activeAnimatables.length;L++)this._activeAnimatables[L].target===Z&&c.push(this._activeAnimatables[L]);return c},x.prototype.stopAnimation=function(Z,c,L){const k=this.getAllAnimatablesByTarget(Z);for(const N of k)N.stop(c,L)},x.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let Z=0;Z<this._activeAnimatables.length;Z++)this._activeAnimatables[Z].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const Z of this.animationGroups)Z.stop()});class w{getClassName(){return"TargetedAnimation"}serialize(){const Z={};return Z.animation=this.animation.serialize(),Z.targetId=this.target.id,Z}}class M{get mask(){return this._mask}set mask(Z){this._mask!==Z&&(this._mask=Z,this.syncWithMask(!0))}syncWithMask(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||Z){this._numActiveAnimatables=0;for(let Z=0;Z<this._animatables.length;++Z){const c=this._animatables[Z];!this.mask||this.mask.disabled||this.mask.retainsTarget(c.target.name)?(this._numActiveAnimatables++,c.paused&&c.restart()):c.paused||c.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let Z=0;Z<this._animatables.length;++Z){const c=this._animatables[Z];this.mask.retainsTarget(c.target.name)||(c.stop(),this._animatables.splice(Z,1),--Z)}for(let Z=0;Z<this._targetedAnimations.length;Z++){const c=this._targetedAnimations[Z];this.mask.retainsTarget(c.target.name)||(this._targetedAnimations.splice(Z,1),--Z)}}}get from(){return this._from}set from(Z){if(this._from!==Z){this._from=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].fromFrame=this._from}}}get to(){return this._to}set to(Z){if(this._to!==Z){this._to=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(Z){if(this._speedRatio!==Z){this._speedRatio=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(Z){if(this._loopAnimation!==Z){this._loopAnimation=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(Z){if(this._isAdditive!==Z){this._isAdditive=Z;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(Z){this._weight!==Z&&(this._weight=Z,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(Z){if(this._playOrder!==Z&&(this._playOrder=Z,this._animatables.length>0)){for(let Z=0;Z<this._animatables.length;Z++)this._animatables[Z].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(Z){if(this._enableBlending!==Z&&(this._enableBlending=Z,null!==Z))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.enableBlending=Z}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(Z){if(this._blendingSpeed!==Z&&(this._blendingSpeed=Z,null!==Z))for(let c=0;c<this._targetedAnimations.length;++c)this._targetedAnimations[c].animation.blendingSpeed=Z}getLength(Z,c){Z=Z??this._from;return((c=c??this._to)-Z)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(Z){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],L=arguments.length>2&&void 0!==arguments[2]&&arguments[2],k=arguments.length>3?arguments[3]:void 0;if(0===Z.length)return null;k=k??Z[0].weight;let N=Number.MAX_VALUE,R=-Number.MAX_VALUE;if(L)for(const V of Z)V.from<N&&(N=V.from),V.to>R&&(R=V.to);const G=new M(Z[0].name+"_merged",Z[0]._scene,k);for(const V of Z){L&&V.normalize(N,R);for(const Z of V.targetedAnimations)G.addTargetedAnimation(Z.animation,Z.target);c&&V.dispose()}return G}constructor(Z){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=Z,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new N.b,this.onAnimationLoopObservable=new N.b,this.onAnimationGroupLoopObservable=new N.b,this.onAnimationGroupEndObservable=new N.b,this.onAnimationGroupPauseObservable=new N.b,this.onAnimationGroupPlayObservable=new N.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=c||R.d.LastCreatedScene,this._weight=L,this._playOrder=k,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(Z,c){const L=new w;L.animation=Z,L.target=c;const k=Z.getKeys();return this._from>k[0].frame&&(this._from=k[0].frame),this._to<k[k.length-1].frame&&(this._to=k[k.length-1].frame),null!==this._enableBlending&&(Z.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(Z.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(L),this._shouldStart=!0,L}removeTargetedAnimation(Z){for(let c=this._targetedAnimations.length-1;c>-1;c--){this._targetedAnimations[c].animation===Z&&this._targetedAnimations.splice(c,1)}}normalize(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==Z&&(Z=this._from),null==c&&(c=this._to);for(let L=0;L<this._targetedAnimations.length;L++){const k=this._targetedAnimations[L].animation.getKeys(),N=k[0],R=k[k.length-1];if(N.frame>Z){const c={frame:Z,value:N.value,inTangent:N.inTangent,outTangent:N.outTangent,interpolation:N.interpolation};k.splice(0,0,c)}if(R.frame<c){const Z={frame:c,value:R.value,inTangent:R.inTangent,outTangent:R.outTangent,interpolation:R.interpolation};k.push(Z)}}return this._from=Z,this._to=c,this}_processLoop(Z,c,L){Z.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(c),this._animationLoopFlags[L]||(this._animationLoopFlags[L]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0],c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,L=arguments.length>2?arguments[2]:void 0,k=arguments.length>3?arguments[3]:void 0,N=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=Z,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let R=0;R<this._targetedAnimations.length;R++){const G=this._targetedAnimations[R],V=this._scene.beginDirectAnimation(G.target,[G.animation],void 0!==L?L:this._from,void 0!==k?k:this._to,Z,c,void 0,void 0,void 0!==N?N:this._isAdditive);V.weight=this._weight,V.playOrder=this._playOrder,V.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(G),this._checkAnimationGroupEnded(V)},this._processLoop(V,G,R),this._animatables.push(V)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=c,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(Z){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==Z&&(this.loopAnimation=Z),this.restart()):(this.stop(),this.start(Z,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].reset()}return this}restart(){if(!this._isStarted)return this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const c=this._animatables.slice();for(let k=0;k<c.length;k++)c[k].stop(void 0,void 0,!0,Z);let L=0;for(let k=0;k<this._scene._activeAnimatables.length;k++){const c=this._scene._activeAnimatables[k];c._runtimeAnimations.length>0?this._scene._activeAnimatables[L++]=c:Z&&this._checkAnimationGroupEnded(c,Z)}return this._scene._activeAnimatables.length=L,this._isStarted=!1,this}setWeightForAllAnimatables(Z){for(let c=0;c<this._animatables.length;c++){this._animatables[c].weight=Z}return this}syncAllAnimationsWith(Z){for(let c=0;c<this._animatables.length;c++){this._animatables[c].syncWith(Z)}return this}goToFrame(Z){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let L=0;L<this._animatables.length;L++){this._animatables[L].goToFrame(Z,c)}return this}getCurrentFrame(){var Z;return(null===(Z=this.animatables[0])||void 0===Z?void 0:Z.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const Z=this._scene.animationGroups.indexOf(this);if(Z>-1&&this._scene.animationGroups.splice(Z,1),this._parentContainer){const Z=this._parentContainer.animationGroups.indexOf(this);Z>-1&&this._parentContainer.animationGroups.splice(Z,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(Z){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const L=this._animatables.indexOf(Z);L>-1&&this._animatables.splice(L,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,c||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(Z,c){let L=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const k=new M(Z||this.name,this._scene,this._weight,this._playOrder);k._from=this.from,k._to=this.to,k._speedRatio=this.speedRatio,k._loopAnimation=this.loopAnimation,k._isAdditive=this.isAdditive,k._enableBlending=this.enableBlending,k._blendingSpeed=this.blendingSpeed,k.metadata=this.metadata,k.mask=this.mask;for(const N of this._targetedAnimations)k.addTargetedAnimation(L?N.animation.clone():N.animation,c?c(N.target):N.target);return k}serialize(){const Z={};Z.name=this.name,Z.from=this.from,Z.to=this.to,Z.speedRatio=this.speedRatio,Z.loopAnimation=this.loopAnimation,Z.isAdditive=this.isAdditive,Z.weight=this.weight,Z.playOrder=this.playOrder,Z.enableBlending=this.enableBlending,Z.blendingSpeed=this.blendingSpeed,Z.targetedAnimations=[];for(let c=0;c<this.targetedAnimations.length;c++){const L=this.targetedAnimations[c];Z.targetedAnimations[c]=L.serialize()}return G.b&&G.b.HasTags(this)&&(Z.tags=G.b.GetTags(this)),this.metadata&&(Z.metadata=this.metadata),Z}static Parse(Z,c){const L=new M(Z.name,c,Z.weight,Z.playOrder);for(let N=0;N<Z.targetedAnimations.length;N++){const R=Z.targetedAnimations[N],G=k.c.Parse(R.animation),V=R.targetId;if("influence"===R.animation.property){const Z=c.getMorphTargetById(V);Z&&L.addTargetedAnimation(G,Z)}else{const Z=c.getNodeById(V);null!=Z&&L.addTargetedAnimation(G,Z)}}return G.b&&G.b.AddTagsTo(L,Z.tags),null!==Z.from&&null!==Z.to&&L.normalize(Z.from,Z.to),void 0!==Z.speedRatio&&(L._speedRatio=Z.speedRatio),void 0!==Z.loopAnimation&&(L._loopAnimation=Z.loopAnimation),void 0!==Z.isAdditive&&(L._isAdditive=Z.isAdditive),void 0!==Z.weight&&(L._weight=Z.weight),void 0!==Z.playOrder&&(L._playOrder=Z.playOrder),void 0!==Z.enableBlending&&(L._enableBlending=Z.enableBlending),void 0!==Z.blendingSpeed&&(L._blendingSpeed=Z.blendingSpeed),void 0!==Z.metadata&&(L.metadata=Z.metadata),L}static MakeAnimationAdditive(Z,c,L){let N;N="object"===typeof c?c:{referenceFrame:c,range:L,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let R=Z;N.cloneOriginalAnimationGroup&&(R=Z.clone(N.clonedAnimationGroupName||R.name));const G=R.targetedAnimations;for(let V=0;V<G.length;V++){const Z=G[V];Z.animation=k.c.MakeAnimationAdditive(Z.animation,N)}if(R.isAdditive=!0,N.clipKeys){let Z=Number.MAX_VALUE,c=-Number.MAX_VALUE;const L=R.targetedAnimations;for(let k=0;k<L.length;k++){const N=L[k].animation.getKeys();Z>N[0].frame&&(Z=N[0].frame),c<N[N.length-1].frame&&(c=N[N.length-1].frame)}R._from=Z,R._to=c}return R}static ClipKeys(Z,c,L,k,N){const R=Z.clone(k||Z.name);return M.ClipKeysInPlace(R,c,L,N)}static ClipKeysInPlace(Z,c,L,k){return M.ClipInPlace(Z,c,L,k,!1)}static ClipFrames(Z,c,L,k,N){const R=Z.clone(k||Z.name);return M.ClipFramesInPlace(R,c,L,N)}static ClipFramesInPlace(Z,c,L,k){return M.ClipInPlace(Z,c,L,k,!0)}static ClipInPlace(Z,c,L,k){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],R=Number.MAX_VALUE,G=-Number.MAX_VALUE;const V=Z.targetedAnimations;for(let p=0;p<V.length;p++){const Z=V[p],J=k?Z.animation:Z.animation.clone();N&&(J.createKeyForFrame(c),J.createKeyForFrame(L));const z=J.getKeys(),i=[];let t=Number.MAX_VALUE;for(let k=0;k<z.length;k++){const Z=z[k];if(!N&&k>=c&&k<=L||N&&Z.frame>=c&&Z.frame<=L){const c={frame:Z.frame,value:Z.value.clone?Z.value.clone():Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation,lockedTangent:Z.lockedTangent};t===Number.MAX_VALUE&&(t=c.frame),c.frame-=t,i.push(c)}}0!==i.length?(R>i[0].frame&&(R=i[0].frame),G<i[i.length-1].frame&&(G=i[i.length-1].frame),J.setKeys(i,!0),Z.animation=J):(V.splice(p,1),p--)}return Z._from=R,Z._to=G,Z}getClassName(){return"AnimationGroup"}toString(Z){let c="Name: "+this.name;return c+=", type: "+this.getClassName(),Z&&(c+=", from: "+this._from,c+=", to: "+this._to,c+=", isStarted: "+this._isStarted,c+=", speedRatio: "+this._speedRatio,c+=", targetedAnimations length: "+this._targetedAnimations.length,c+=", animatables length: "+this._animatables),c}}}}]);