"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[58],{14376:(V,I,m)=>{m.r(I),m.d(I,{AnimationGroup:()=>b,TargetedAnimation:()=>D});var C=m(11700),l=m(11067),s=m(11061),F=m(11305),k=m(12821),j=m(11040);class E{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(V,I,m,l){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=I,this._target=V,this._scene=m,this._host=l,this._activeTargets=[],I._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===C.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=j.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const V={frame:0,value:this._minValue};this._keys.splice(0,0,V)}if(this._target instanceof Array){let V=0;for(const I of this._target)this._preparePath(I,V),this._getOriginalValues(V),V++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const s=I.getEvents();if(s&&s.length>0)for(const C of s)this._events.push(C._clone());this._enableBlending=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const m=this._animation.targetPropertyPath;if(m.length>1){let C=V;for(let V=0;V<m.length-1;V++){const I=m[V];if(C=C[I],void 0===C)throw new Error(`Invalid property (${I}) in property path (${m.join(".")})`)}this._targetPath=m[m.length-1],this._activeTargets[I]=C}else this._targetPath=m[0],this._activeTargets[I]=V;if(void 0===this._activeTargets[I][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${m.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let V=0;for(const I of this._target)void 0!==this._originalValue[V]&&this._setValue(I,this._activeTargets[V],this._originalValue[V],-1,V),V++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let V=0;V<this._events.length;V++)this._events[V].isDone=!1}isStopped(){return this._stopped}dispose(){const V=this._animation.runtimeAnimations.indexOf(this);V>-1&&this._animation.runtimeAnimations.splice(V,1)}setValue(V,I){if(this._targetIsArray)for(let m=0;m<this._target.length;m++){const C=this._target[m];this._setValue(C,this._activeTargets[m],V,I,m)}else this._setValue(this._target,this._directTarget,V,I,0)}_getOriginalValues(){let V,I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const m=this._activeTargets[I];V=m.getLocalMatrix&&"_matrix"===this._targetPath?m.getLocalMatrix():m[this._targetPath],V&&V.clone?this._originalValue[I]=V.clone():this._originalValue[I]=V}_registerTargetForLateAnimationBinding(V,I){const m=V.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(m),m._lateAnimationHolders||(m._lateAnimationHolders={}),m._lateAnimationHolders[V.targetPath]||(m._lateAnimationHolders[V.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:I}),V.isAdditive?(m._lateAnimationHolders[V.targetPath].additiveAnimations.push(V),m._lateAnimationHolders[V.targetPath].totalAdditiveWeight+=V.weight):(m._lateAnimationHolders[V.targetPath].animations.push(V),m._lateAnimationHolders[V.targetPath].totalWeight+=V.weight)}_setValue(V,I,m,l,s){if(this._currentActiveTarget=I,this._weight=l,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const V=I[this._targetPath];V.clone?this._originalBlendValue=V.clone():this._originalBlendValue=V}this._originalBlendValue.m?C.c.AllowMatrixDecomposeForInterpolation?this._currentValue?j.b.DecomposeLerpToRef(this._originalBlendValue,m,this._blendingFactor,this._currentValue):this._currentValue=j.b.DecomposeLerp(this._originalBlendValue,m,this._blendingFactor):this._currentValue?j.b.LerpToRef(this._originalBlendValue,m,this._blendingFactor,this._currentValue):this._currentValue=j.b.Lerp(this._originalBlendValue,m,this._blendingFactor):this._currentValue=C.c._UniversalLerp(this._originalBlendValue,m,this._blendingFactor);const l=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=l}else this._currentValue?this._currentValue.C?this._currentValue.C(m):this._currentValue=m:null!==m&&void 0!==m&&m.clone?this._currentValue=m.clone():this._currentValue=m;-1!==l?this._registerTargetForLateAnimationBinding(this,this._originalValue[s]):this._animationState.loopMode===C.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[s],I[this._targetPath]):I[this._targetPath]=this._originalValue[s]+this._currentValue:I[this._targetPath]=this._currentValue,V.bE&&V.bE(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const m=this._animation.getKeys();V<m[0].frame?V=m[0].frame:V>m[m.length-1].frame&&(V=m[m.length-1].frame);const C=this._events;if(C.length)for(let s=0;s<C.length;s++)C[s].onlyOnce||(C[s].isDone=C[s].frame<V);this._currentFrame=V;const l=this._animation._interpolate(V,this._animationState);this.setValue(l,I)}_prepareForSpeedRatioChange(V){const I=this._previousElapsedTime*(this._animation.framePerSecond*V)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-I}animate(V,I,m,l,s){let F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const k=this._animation,j=k.targetPropertyPath;if(!j||j.length<1)return this._stopped=!0,!1;let E,K=!0;const Y=this._events;let X=0;if(this._coreRuntimeAnimation)X=m-I,E=this._coreRuntimeAnimation.currentFrame,this._currentFrame=E,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let F;(I<this._minFrame||I>this._maxFrame)&&(I=this._minFrame),(m<this._minFrame||m>this._maxFrame)&&(m=this._maxFrame),X=m-I;let j=V*(k.framePerSecond*s)/1e3+this._absoluteFrameOffset,O=0,v=!1;const N=l&&this._animationState.loopMode===C.c.ANIMATIONLOOPMODE_YOYO;if(N){const V=(j-I)/X,m=Math.sin(V*Math.PI);j=Math.abs(m)*X+I;const C=m>=0?1:-1;this._yoyoDirection!==C&&(v=!0),this._yoyoDirection=C}if(this._previousElapsedTime=V,this._previousAbsoluteFrame=j,!l&&m>=I&&(j>=X&&s>0||j<=0&&s<0))K=!1,O=k._getKeyValue(this._maxValue);else if(!l&&I>=m&&(j<=X&&s<0||j>=0&&s>0))K=!1,O=k._getKeyValue(this._minValue);else if(this._animationState.loopMode!==C.c.ANIMATIONLOOPMODE_CYCLE){const V=m.toString()+I.toString();if(!this._offsetsCache[V]){this._animationState.repeatCount=0,this._animationState.loopMode=C.c.ANIMATIONLOOPMODE_CYCLE;const l=k._interpolate(I,this._animationState),s=k._interpolate(m,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),k.dataType){case C.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[V]=s-l;break;case C.c.ANIMATIONTYPE_QUATERNION:case C.c.ANIMATIONTYPE_VECTOR3:case C.c.ANIMATIONTYPE_VECTOR2:case C.c.ANIMATIONTYPE_SIZE:case C.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[V]=s.Fm(l)}this._highLimitsCache[V]=s}O=this._highLimitsCache[V],F=this._offsetsCache[V]}if(void 0===F)switch(k.dataType){case C.c.ANIMATIONTYPE_FLOAT:F=0;break;case C.c.ANIMATIONTYPE_QUATERNION:F=C.i;break;case C.c.ANIMATIONTYPE_VECTOR3:F=C.s;break;case C.c.ANIMATIONTYPE_VECTOR2:F=C.o;break;case C.c.ANIMATIONTYPE_SIZE:F=C.m;break;case C.c.ANIMATIONTYPE_COLOR3:F=C.f;break;case C.c.ANIMATIONTYPE_COLOR4:F=C.h}if(this._host&&this._host.syncRoot){const V=this._host.syncRoot;E=I+X*((V.masterFrame-V.fromFrame)/(V.toFrame-V.fromFrame))}else E=j>0&&I>m||j<0&&I<m?K&&0!==X?m+j%X:I:K&&0!==X?I+j%X:m;if(!N&&(s>0&&this.currentFrame>E||s<0&&this.currentFrame<E)||N&&v){this._onLoop();for(let V=0;V<Y.length;V++)Y[V].onlyOnce||(Y[V].isDone=!1);this._animationState.key=s>0?0:k.getKeys().length-1}this._currentFrame=E,this._animationState.repeatCount=0===X?0:j/X|0,this._animationState.highLimitValue=O,this._animationState.offsetValue=F}const O=k._interpolate(E,this._animationState);if(this.setValue(O,F),Y.length)for(let C=0;C<Y.length;C++)if(X>=0&&E>=Y[C].frame&&Y[C].frame>=I||X<0&&E<=Y[C].frame&&Y[C].frame<=I){const V=Y[C];V.isDone||(V.onlyOnce&&(Y.splice(C,1),C--),V.isDone=!0,V.action(E))}return K||(this._stopped=!0),K}}var K=m(11091);class Y{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(V){this._weight=-1!==V?Math.min(Math.max(V,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(V){for(let I=0;I<this._runtimeAnimations.length;I++){this._runtimeAnimations[I]._prepareForSpeedRatioChange(V)}this._speedRatio=V,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(V,I){let m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],F=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,k=arguments.length>6?arguments[6]:void 0,j=arguments.length>7?arguments[7]:void 0,E=arguments.length>8?arguments[8]:void 0,K=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Y=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=I,this.fromFrame=m,this.toFrame=C,this.loopAnimation=s,this.onAnimationEnd=k,this.onAnimationLoop=E,this.isAdditive=K,this.playOrder=Y,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.PF=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new l.e,this.onAnimationLoopObservable=new l.e,this._scene=V,j&&this.appendAnimations(I,j),this._speedRatio=F,V._activeAnimatables.push(this)}syncWith(V){if(this._syncRoot=V,V){const V=this._scene._activeAnimatables.indexOf(this);V>-1&&(this._scene._activeAnimatables.splice(V,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(V,I){for(let m=0;m<I.length;m++){const C=I[m],l=new E(V,C,this._scene,this);l._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(l)}}getAnimationByTargetProperty(V){const I=this._runtimeAnimations;for(let m=0;m<I.length;m++)if(I[m].animation.targetProperty===V)return I[m].animation;return null}getRuntimeAnimationByTargetProperty(V){const I=this._runtimeAnimations;for(let m=0;m<I.length;m++)if(I[m].animation.targetProperty===V)return I[m];return null}reset(){const V=this._runtimeAnimations;for(let I=0;I<V.length;I++)V[I].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(V){const I=this._runtimeAnimations;for(let m=0;m<I.length;m++)I[m].animation.enableBlending=!0,I[m].animation.blendingSpeed=V}disableBlending(){const V=this._runtimeAnimations;for(let I=0;I<V.length;I++)V[I].animation.enableBlending=!1}goToFrame(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const m=this._runtimeAnimations;if(m[0]){const I=m[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??m[0].currentFrame;const C=0===this.speedRatio?0:(V-this._frameToSyncFromJump)/I*1e3/this.speedRatio;this._manualJumpDelay=-C}for(let C=0;C<m.length;C++)m[C].goToFrame(V,I?this._weight:-1);this._goToFrame=V}get paused(){return this.PF}pause(){this.PF||(this.PF=!0)}restart(){this.PF=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(V,I){let m=arguments.length>2&&void 0!==arguments[2]&&arguments[2],C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(V||I){const l=this._scene._activeAnimatables.indexOf(this);if(l>-1){const s=this._runtimeAnimations;for(let m=s.length-1;m>=0;m--){const C=s[m];V&&C.animation.name!=V||(I&&!I(C.target)||(C.dispose(),s.splice(m,1)))}0==s.length&&(m||this._scene._activeAnimatables.splice(l,1),C||this._raiseOnAnimationEnd())}}else{const V=this._scene._activeAnimatables.indexOf(this);if(V>-1){m||this._scene._activeAnimatables.splice(V,1);const I=this._runtimeAnimations;for(let V=0;V<I.length;V++)I[V].dispose();this._runtimeAnimations.length=0,C||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((V=>{this.onAnimationEndObservable.add((()=>{V(this)}),void 0,void 0,this,!0)}))}_animate(V){if(this.PF)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=V),!0;if(null===this._localDelayOffset?(this._localDelayOffset=V,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=V-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let I=!1;const m=this._runtimeAnimations;let C;for(C=0;C<m.length;C++){const l=m[C].animate(V-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);I=I||l}if(this.animationStarted=I,!I){if(this.disposeOnEnd)for(C=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(C,1),C=0;C<m.length;C++)m[C].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return I}}function X(V){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return V.originalValue;let I=1;const m=j.g.LF[0],C=j.g.LF[1],l=j.g.Quaternion[0];let s=0;const F=V.animations[0],k=V.originalValue;let E=1,K=!1;if(V.totalWeight<1)E=1-V.totalWeight,k.decompose(C,l,m);else{if(s=1,I=V.totalWeight,E=F.weight/I,1==E){if(!V.totalAdditiveWeight)return F.currentValue;K=!0}F.currentValue.decompose(C,l,m)}if(!K){C.scaleInPlace(E),m.scaleInPlace(E),l.scaleInPlace(E);for(let F=s;F<V.animations.length;F++){const s=V.animations[F];if(0===s.weight)continue;E=s.weight/I;const k=j.g.LF[2],K=j.g.LF[3],Y=j.g.Quaternion[1];s.currentValue.decompose(K,Y,k),K.scaleAndAddToRef(E,C),Y.scaleAndAddToRef(j.e.Dot(l,Y)>0?E:-E,l),k.scaleAndAddToRef(E,m)}l.normalize()}for(let X=0;X<V.additiveAnimations.length;X++){const I=V.additiveAnimations[X];if(0===I.weight)continue;const s=j.g.LF[2],F=j.g.LF[3],k=j.g.Quaternion[1];I.currentValue.decompose(F,k,s),F.multiplyToRef(C,F),j.m.LerpToRef(C,F,I.weight,C),l.multiplyToRef(k,k),j.e.SlerpToRef(l,k,I.weight,l),s.scaleAndAddToRef(I.weight,m)}const Y=F?F._animationState.workValue:j.g.Matrix[0].clone();return j.b.ComposeToRef(C,l,m,Y),Y}function O(V,I){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return I;const m=V.animations[0],C=V.originalValue;let l=I;if(0===V.totalWeight&&V.totalAdditiveWeight>0)l.C(C);else if(1===V.animations.length){if(j.e.SlerpToRef(C,m.currentValue,Math.min(1,V.totalWeight),l),0===V.totalAdditiveWeight)return l}else if(V.animations.length>1){let m,s,F=1;if(V.totalWeight<1){const I=1-V.totalWeight;m=[],s=[],m.push(C),s.push(I)}else{if(2===V.animations.length&&(j.e.SlerpToRef(V.animations[0].currentValue,V.animations[1].currentValue,V.animations[1].weight/V.totalWeight,I),0===V.totalAdditiveWeight))return I;m=[],s=[],F=V.totalWeight}for(let I=0;I<V.animations.length;I++){const C=V.animations[I];m.push(C.currentValue),s.push(C.weight/F)}let k=0;for(let V=0;V<m.length;)V?(k+=s[V],j.e.SlerpToRef(l,m[V],s[V]/k,l),V++):(j.e.SlerpToRef(m[V],m[V+1],s[V+1]/(s[V]+s[V+1]),I),l=I,k=s[V]+s[V+1],V+=2)}for(let s=0;s<V.additiveAnimations.length;s++){const I=V.additiveAnimations[s];0!==I.weight&&(l.multiplyToRef(I.currentValue,j.g.Quaternion[0]),j.e.SlerpToRef(l,j.g.Quaternion[0],I.weight,l))}return l}var v,N,t=m(11596);v=t.e,(N=k.b)&&(N.prototype.copyAnimationRange=function(V,I,m){let l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new C.c(this.name,"_matrix",V.animations[0].framePerSecond,C.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const F=V.animations[0].getRange(I);if(!F)return!1;const k=F.from,j=F.to,E=V.animations[0].getKeys(),K=V.length,Y=V.getParent(),X=this.getParent(),O=l&&Y&&K&&this.length&&K!==this.length,v=O&&X&&Y?X.length/Y.length:1,N=l&&!X&&s&&(1!==s.x||1!==s.y||1!==s.z),t=this.animations[0].getKeys();let D,b,T;for(let C=0,n=E.length;C<n;C++)D=E[C],D.frame>=k&&D.frame<=j&&(l?(T=D.value.clone(),O?(b=T.getTranslation(),T.setTranslation(b.scaleInPlace(v))):N&&s?(b=T.getTranslation(),T.setTranslation(b.multiplyInPlace(s))):T=D.value):T=D.value,t.push({frame:D.frame+m,value:T}));return this.animations[0].createRange(I,k+m,j+m),!0}),v&&(v.prototype._animate=function(V){if(!this.animationsEnabled)return;const I=K.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=I}this.deltaTime=void 0!==V?V:this.useConstantAnimationDeltaTime?16:(I-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=I;const m=this._activeAnimatables;if(0===m.length)return;this._animationTime+=this.deltaTime;const l=this._animationTime;for(let C=0;C<m.length;C++){const V=m[C];!V._animate(l)&&V.disposeOnEnd&&C--}!function(V){if(V._registeredForLateAnimationBindings.length){for(let I=0;I<V._registeredForLateAnimationBindings.length;I++){const m=V._registeredForLateAnimationBindings.data[I];for(const V in m._lateAnimationHolders){const I=m._lateAnimationHolders[V],l=I.animations[0],s=I.originalValue;if(void 0===s||null===s)continue;const F=C.c.AllowMatrixDecomposeForInterpolation&&s.m;let k=m[V];if(F)k=X(I);else if(void 0!==s.w)k=O(I,k||j.e.Identity());else{let V=0,m=1;const F=l&&l._animationState.loopMode===C.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(I.totalWeight<1)k=F?s.clone?s.clone():s:l&&s.scale?s.scale(1-I.totalWeight):l?s*(1-I.totalWeight):s.clone?s.clone():s;else if(l){m=I.totalWeight;const C=l.weight/m;k=1!==C?l.currentValue.scale?l.currentValue.scale(C):l.currentValue*C:l.currentValue,F&&(k.addToRef?k.addToRef(s,k):k+=s),V=1}for(let C=V;C<I.animations.length;C++){const V=I.animations[C],l=V.weight/m;l&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(l,k):k+=V.currentValue*l)}for(let C=0;C<I.additiveAnimations.length;C++){const V=I.additiveAnimations[C],m=V.weight;m&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(m,k):k+=V.currentValue*m)}}m[V]=k}m._lateAnimationHolders={}}V._registeredForLateAnimationBindings.reset()}}(this)},v.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((V,I)=>V.playOrder-I.playOrder))},v.prototype.beginWeightedAnimation=function(V,I,m){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,F=arguments.length>6?arguments[6]:void 0,k=arguments.length>7?arguments[7]:void 0,j=arguments.length>8?arguments[8]:void 0,E=arguments.length>9?arguments[9]:void 0,K=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const Y=this.beginAnimation(V,I,m,l,s,F,k,!1,j,E,K);return Y.weight=C,Y},v.prototype.beginAnimation=function(V,I,m,C){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5?arguments[5]:void 0,F=arguments.length>6?arguments[6]:void 0,k=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],j=arguments.length>8?arguments[8]:void 0,E=arguments.length>9?arguments[9]:void 0,K=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(l<0){const V=I;I=m,m=V,l=-l}I>m&&(l=-l),k&&this.stopAnimation(V,void 0,j),F||(F=new Y(this,V,I,m,C,l,s,void 0,E,K));const X=!j||j(V);if(V.animations&&X&&F.appendAnimations(V,V.animations),V.getAnimatables){const K=V.getAnimatables();for(let V=0;V<K.length;V++)this.beginAnimation(K[V],I,m,C,l,s,F,k,j,E)}return F.reset(),F},v.prototype.beginHierarchyAnimation=function(V,I,m,C,l){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,F=arguments.length>6?arguments[6]:void 0,k=arguments.length>7?arguments[7]:void 0,j=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],E=arguments.length>9?arguments[9]:void 0,K=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const Y=V.getDescendants(I),X=[];X.push(this.beginAnimation(V,m,C,l,s,F,k,j,E,void 0,K));for(const O of Y)X.push(this.beginAnimation(O,m,C,l,s,F,k,j,E,void 0,K));return X},v.prototype.beginDirectAnimation=function(V,I,m,C,l){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(s<0){const V=m;m=C,C=V,s=-s}return m>C&&(s=-s),new Y(this,V,m,C,l,s,arguments.length>6?arguments[6]:void 0,I,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},v.prototype.beginDirectHierarchyAnimation=function(V,I,m,C,l,s,F,k,j){let E=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const K=V.getDescendants(I),Y=[];Y.push(this.beginDirectAnimation(V,m,C,l,s,F,k,j,E));for(const X of K)Y.push(this.beginDirectAnimation(X,m,C,l,s,F,k,j,E));return Y},v.prototype.getAnimatableByTarget=function(V){for(let I=0;I<this._activeAnimatables.length;I++)if(this._activeAnimatables[I].target===V)return this._activeAnimatables[I];return null},v.prototype.getAllAnimatablesByTarget=function(V){const I=[];for(let m=0;m<this._activeAnimatables.length;m++)this._activeAnimatables[m].target===V&&I.push(this._activeAnimatables[m]);return I},v.prototype.stopAnimation=function(V,I,m){const C=this.getAllAnimatablesByTarget(V);for(const l of C)l.stop(I,m)},v.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let V=0;V<this._activeAnimatables.length;V++)this._activeAnimatables[V].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const V of this.animationGroups)V.stop()});class D{getClassName(){return"TargetedAnimation"}serialize(){const V={};return V.animation=this.animation.serialize(),V.targetId=this.target.id,V}}class b{get mask(){return this._mask}set mask(V){this._mask!==V&&(this._mask=V,this.syncWithMask(!0))}syncWithMask(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||V){this._numActiveAnimatables=0;for(let V=0;V<this._animatables.length;++V){const I=this._animatables[V];!this.mask||this.mask.disabled||this.mask.retainsTarget(I.target.name)?(this._numActiveAnimatables++,I.paused&&I.restart()):I.paused||I.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let V=0;V<this._animatables.length;++V){const I=this._animatables[V];this.mask.retainsTarget(I.target.name)||(I.stop(),this._animatables.splice(V,1),--V)}for(let V=0;V<this._targetedAnimations.length;V++){const I=this._targetedAnimations[V];this.mask.retainsTarget(I.target.name)||(this._targetedAnimations.splice(V,1),--V)}}}get from(){return this._from}set from(V){if(this._from!==V){this._from=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].fromFrame=this._from}}}get to(){return this._to}set to(V){if(this._to!==V){this._to=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(V){if(this._speedRatio!==V){this._speedRatio=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(V){if(this._loopAnimation!==V){this._loopAnimation=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(V){if(this._isAdditive!==V){this._isAdditive=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(V){this._weight!==V&&(this._weight=V,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(V){if(this._playOrder!==V&&(this._playOrder=V,this._animatables.length>0)){for(let V=0;V<this._animatables.length;V++)this._animatables[V].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(V){if(this._enableBlending!==V&&(this._enableBlending=V,null!==V))for(let I=0;I<this._targetedAnimations.length;++I)this._targetedAnimations[I].animation.enableBlending=V}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(V){if(this._blendingSpeed!==V&&(this._blendingSpeed=V,null!==V))for(let I=0;I<this._targetedAnimations.length;++I)this._targetedAnimations[I].animation.blendingSpeed=V}getLength(V,I){V=V??this._from;return((I=I??this._to)-V)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(V){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],m=arguments.length>2&&void 0!==arguments[2]&&arguments[2],C=arguments.length>3?arguments[3]:void 0;if(0===V.length)return null;C=C??V[0].weight;let l=Number.MAX_VALUE,s=-Number.MAX_VALUE;if(m)for(const k of V)k.from<l&&(l=k.from),k.to>s&&(s=k.to);const F=new b(V[0].name+"_merged",V[0]._scene,C);for(const k of V){m&&k.normalize(l,s);for(const V of k.targetedAnimations)F.addTargetedAnimation(V.animation,V.target);I&&k.dispose()}return F}constructor(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,m=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=V,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new l.e,this.onAnimationLoopObservable=new l.e,this.onAnimationGroupLoopObservable=new l.e,this.onAnimationGroupEndObservable=new l.e,this.onAnimationGroupPauseObservable=new l.e,this.onAnimationGroupPlayObservable=new l.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=I||s.c.LastCreatedScene,this._weight=m,this._playOrder=C,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(V,I){const m=new D;m.animation=V,m.target=I;const C=V.getKeys();return this._from>C[0].frame&&(this._from=C[0].frame),this._to<C[C.length-1].frame&&(this._to=C[C.length-1].frame),null!==this._enableBlending&&(V.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(V.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(m),this._shouldStart=!0,m}removeTargetedAnimation(V){for(let I=this._targetedAnimations.length-1;I>-1;I--){this._targetedAnimations[I].animation===V&&this._targetedAnimations.splice(I,1)}}normalize(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==V&&(V=this._from),null==I&&(I=this._to);for(let m=0;m<this._targetedAnimations.length;m++){const C=this._targetedAnimations[m].animation.getKeys(),l=C[0],s=C[C.length-1];if(l.frame>V){const I={frame:V,value:l.value,inTangent:l.inTangent,outTangent:l.outTangent,interpolation:l.interpolation};C.splice(0,0,I)}if(s.frame<I){const V={frame:I,value:s.value,inTangent:s.inTangent,outTangent:s.outTangent,interpolation:s.interpolation};C.push(V)}}return this._from=V,this._to=I,this}_processLoop(V,I,m){V.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(I),this._animationLoopFlags[m]||(this._animationLoopFlags[m]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0],I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,m=arguments.length>2?arguments[2]:void 0,C=arguments.length>3?arguments[3]:void 0,l=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=V,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let s=0;s<this._targetedAnimations.length;s++){const F=this._targetedAnimations[s],k=this._scene.beginDirectAnimation(F.target,[F.animation],void 0!==m?m:this._from,void 0!==C?C:this._to,V,I,void 0,void 0,void 0!==l?l:this._isAdditive);k.weight=this._weight,k.playOrder=this._playOrder,k.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(F),this._checkAnimationGroupEnded(k)},this._processLoop(k,F,s),this._animatables.push(k)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=I,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let V=0;V<this._animatables.length;V++){this._animatables[V].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(V){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==V&&(this.loopAnimation=V),this.restart()):(this.stop(),this.start(V,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].reset()}return this}restart(){if(!this._isStarted)return this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const I=this._animatables.slice();for(let C=0;C<I.length;C++)I[C].stop(void 0,void 0,!0,V);let m=0;for(let C=0;C<this._scene._activeAnimatables.length;C++){const I=this._scene._activeAnimatables[C];I._runtimeAnimations.length>0?this._scene._activeAnimatables[m++]=I:V&&this._checkAnimationGroupEnded(I,V)}return this._scene._activeAnimatables.length=m,this._isStarted=!1,this}setWeightForAllAnimatables(V){for(let I=0;I<this._animatables.length;I++){this._animatables[I].weight=V}return this}syncAllAnimationsWith(V){for(let I=0;I<this._animatables.length;I++){this._animatables[I].syncWith(V)}return this}goToFrame(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let m=0;m<this._animatables.length;m++){this._animatables[m].goToFrame(V,I)}return this}getCurrentFrame(){var V;return(null===(V=this.animatables[0])||void 0===V?void 0:V.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const V=this._scene.animationGroups.indexOf(this);if(V>-1&&this._scene.animationGroups.splice(V,1),this._parentContainer){const V=this._parentContainer.animationGroups.indexOf(this);V>-1&&this._parentContainer.animationGroups.splice(V,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const m=this._animatables.indexOf(V);m>-1&&this._animatables.splice(m,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,I||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(V,I){let m=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const C=new b(V||this.name,this._scene,this._weight,this._playOrder);C._from=this.from,C._to=this.to,C._speedRatio=this.speedRatio,C._loopAnimation=this.loopAnimation,C._isAdditive=this.isAdditive,C._enableBlending=this.enableBlending,C._blendingSpeed=this.blendingSpeed,C.metadata=this.metadata,C.mask=this.mask;for(const l of this._targetedAnimations)C.addTargetedAnimation(m?l.animation.clone():l.animation,I?I(l.target):l.target);return C}serialize(){const V={};V.name=this.name,V.from=this.from,V.to=this.to,V.speedRatio=this.speedRatio,V.loopAnimation=this.loopAnimation,V.isAdditive=this.isAdditive,V.weight=this.weight,V.playOrder=this.playOrder,V.enableBlending=this.enableBlending,V.blendingSpeed=this.blendingSpeed,V.targetedAnimations=[];for(let I=0;I<this.targetedAnimations.length;I++){const m=this.targetedAnimations[I];V.targetedAnimations[I]=m.serialize()}return F.b&&F.b.HasTags(this)&&(V.tags=F.b.GetTags(this)),this.metadata&&(V.metadata=this.metadata),V}static Parse(V,I){const m=new b(V.name,I,V.weight,V.playOrder);for(let l=0;l<V.targetedAnimations.length;l++){const s=V.targetedAnimations[l],F=C.c.Parse(s.animation),k=s.targetId;if("influence"===s.animation.property){const V=I.getMorphTargetById(k);V&&m.addTargetedAnimation(F,V)}else{const V=I.getNodeById(k);null!=V&&m.addTargetedAnimation(F,V)}}return F.b&&F.b.AddTagsTo(m,V.tags),null!==V.from&&null!==V.to&&m.normalize(V.from,V.to),void 0!==V.speedRatio&&(m._speedRatio=V.speedRatio),void 0!==V.loopAnimation&&(m._loopAnimation=V.loopAnimation),void 0!==V.isAdditive&&(m._isAdditive=V.isAdditive),void 0!==V.weight&&(m._weight=V.weight),void 0!==V.playOrder&&(m._playOrder=V.playOrder),void 0!==V.enableBlending&&(m._enableBlending=V.enableBlending),void 0!==V.blendingSpeed&&(m._blendingSpeed=V.blendingSpeed),void 0!==V.metadata&&(m.metadata=V.metadata),m}static MakeAnimationAdditive(V,I,m){let l;l="object"===typeof I?I:{referenceFrame:I,range:m,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let s=V;l.cloneOriginalAnimationGroup&&(s=V.clone(l.clonedAnimationGroupName||s.name));const F=s.targetedAnimations;for(let k=0;k<F.length;k++){const V=F[k];V.animation=C.c.MakeAnimationAdditive(V.animation,l)}if(s.isAdditive=!0,l.clipKeys){let V=Number.MAX_VALUE,I=-Number.MAX_VALUE;const m=s.targetedAnimations;for(let C=0;C<m.length;C++){const l=m[C].animation.getKeys();V>l[0].frame&&(V=l[0].frame),I<l[l.length-1].frame&&(I=l[l.length-1].frame)}s._from=V,s._to=I}return s}static ClipKeys(V,I,m,C,l){const s=V.clone(C||V.name);return b.ClipKeysInPlace(s,I,m,l)}static ClipKeysInPlace(V,I,m,C){return b.ClipInPlace(V,I,m,C,!1)}static ClipFrames(V,I,m,C,l){const s=V.clone(C||V.name);return b.ClipFramesInPlace(s,I,m,l)}static ClipFramesInPlace(V,I,m,C){return b.ClipInPlace(V,I,m,C,!0)}static ClipInPlace(V,I,m,C){let l=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=Number.MAX_VALUE,F=-Number.MAX_VALUE;const k=V.targetedAnimations;for(let j=0;j<k.length;j++){const V=k[j],E=C?V.animation:V.animation.clone();l&&(E.createKeyForFrame(I),E.createKeyForFrame(m));const K=E.getKeys(),Y=[];let X=Number.MAX_VALUE;for(let C=0;C<K.length;C++){const V=K[C];if(!l&&C>=I&&C<=m||l&&V.frame>=I&&V.frame<=m){const I={frame:V.frame,value:V.value.clone?V.value.clone():V.value,inTangent:V.inTangent,outTangent:V.outTangent,interpolation:V.interpolation,lockedTangent:V.lockedTangent};X===Number.MAX_VALUE&&(X=I.frame),I.frame-=X,Y.push(I)}}0!==Y.length?(s>Y[0].frame&&(s=Y[0].frame),F<Y[Y.length-1].frame&&(F=Y[Y.length-1].frame),E.setKeys(Y,!0),V.animation=E):(k.splice(j,1),j--)}return V._from=s,V._to=F,V}getClassName(){return"AnimationGroup"}toString(V){let I="Name: "+this.name;return I+=", type: "+this.getClassName(),V&&(I+=", from: "+this._from,I+=", to: "+this._to,I+=", isStarted: "+this._isStarted,I+=", speedRatio: "+this._speedRatio,I+=", targetedAnimations length: "+this._targetedAnimations.length,I+=", animatables length: "+this._animatables),I}}}}]);