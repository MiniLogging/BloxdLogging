"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[76],{14472:(R,x,H)=>{H.d(x,{c:()=>D});var k=H(13268),c=H(13246);const t="cachedOperationValue",A="cachedExecutionId";class D extends k.b{constructor(R,x){super(x),this.value=this.registerDataOutput("value",R),this.isValid=this.registerDataOutput("isValid",c.c)}_updateOutputs(R){const x=R._getExecutionVariable(this,A,-1),H=R._getExecutionVariable(this,t,null);if(void 0!==H&&null!==H&&x===R.executionId)this.isValid.setValue(!0,R),this.value.setValue(H,R);else try{const x=this._doOperation(R);if(void 0===x||null===x)return void this.isValid.setValue(!1,R);R._setExecutionVariable(this,t,x),R._setExecutionVariable(this,A,R.executionId),this.value.setValue(x,R),this.isValid.setValue(!0,R)}catch(k){this.isValid.setValue(!1,R)}}}},14601:(R,x,H)=>{H.r(x),H.d(x,{FlowGraphGetPropertyBlock:()=>A});var k=H(13246),c=H(610),t=H(14472);class A extends t.c{constructor(R){super(k.b,R),this.config=R,this.object=this.registerDataInput("object",k.b,R.object),this.propertyName=this.registerDataInput("propertyName",k.b,R.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",k.b)}_doOperation(R){const x=this.customGetFunction.getValue(R);let H;if(x)H=x(this.object.getValue(R),this.propertyName.getValue(R),R);else{const x=this.object.getValue(R),k=this.propertyName.getValue(R);H=x&&k?this._getPropertyValue(x,k):void 0}return H}_getPropertyValue(R,x){const H=x.split(".");let k=R;for(const c of H)if(k=k[c],void 0===k)return;return k}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,c.h)("FlowGraphGetPropertyBlock",A)}}]);