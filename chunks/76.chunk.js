"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[76],{14076:(Z,U,n)=>{n.d(U,{d:()=>V});var i=n(12837),B=n(12826);const l="cachedOperationValue",H="cachedExecutionId";class V extends i.b{constructor(Z,U){super(U),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",B.e)}_updateOutputs(Z){const U=Z._getExecutionVariable(this,H,-1),n=Z._getExecutionVariable(this,l,null);if(void 0!==n&&null!==n&&U===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(n,Z);else try{const U=this._doOperation(Z);if(void 0===U||null===U)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,l,U),Z._setExecutionVariable(this,H,Z.executionId),this.value.setValue(U,Z),this.isValid.setValue(!0,Z)}catch(i){this.isValid.setValue(!1,Z)}}}},14194:(Z,U,n)=>{n.r(U),n.d(U,{FlowGraphGetPropertyBlock:()=>H});var i=n(12826),B=n(633),l=n(14076);class H extends l.d{constructor(Z){super(i.b,Z),this.config=Z,this.object=this.registerDataInput("object",i.b,Z.object),this.propertyName=this.registerDataInput("propertyName",i.b,Z.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",i.b)}_doOperation(Z){const U=this.customGetFunction.getValue(Z);let n;if(U)n=U(this.object.getValue(Z),this.propertyName.getValue(Z),Z);else{const U=this.object.getValue(Z),i=this.propertyName.getValue(Z);n=U&&i?this._getPropertyValue(U,i):void 0}return n}_getPropertyValue(Z,U){const n=U.split(".");let i=Z;for(const B of n)if(i=i[B],void 0===i)return;return i}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,B.g)("FlowGraphGetPropertyBlock",H)}}]);