"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[76],{13762:(L,j,P)=>{P.d(j,{b:()=>u});var A=P(12523),R=P(12510);const o="cachedOperationValue",Y="cachedExecutionId";class u extends A.d{constructor(L,j){super(j),this.value=this.registerDataOutput("value",L),this.isValid=this.registerDataOutput("isValid",R.e)}_updateOutputs(L){const j=L._getExecutionVariable(this,Y,-1),P=L._getExecutionVariable(this,o,null);if(void 0!==P&&null!==P&&j===L.executionId)this.isValid.setValue(!0,L),this.value.setValue(P,L);else try{const j=this._doOperation(L);if(void 0===j||null===j)return void this.isValid.setValue(!1,L);L._setExecutionVariable(this,o,j),L._setExecutionVariable(this,Y,L.executionId),this.value.setValue(j,L),this.isValid.setValue(!0,L)}catch(A){this.isValid.setValue(!1,L)}}}},13877:(L,j,P)=>{P.r(j),P.d(j,{FlowGraphGetPropertyBlock:()=>Y});var A=P(12510),R=P(606),o=P(13762);class Y extends o.b{constructor(L){super(A.d,L),this.config=L,this.object=this.registerDataInput("object",A.d,L.object),this.propertyName=this.registerDataInput("propertyName",A.d,L.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",A.d)}_doOperation(L){const j=this.customGetFunction.getValue(L);let P;if(j)P=j(this.object.getValue(L),this.propertyName.getValue(L),L);else{const j=this.object.getValue(L),A=this.propertyName.getValue(L);P=j&&A?this._getPropertyValue(j,A):void 0}return P}_getPropertyValue(L,j){const P=j.split(".");let A=L;for(const R of P)if(A=A[R],void 0===A)return;return A}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,R.h)("FlowGraphGetPropertyBlock",Y)}}]);