"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[76],{14320:(Q,X,C)=>{C.d(X,{d:()=>O});var l=C(13092),h=C(13063);const M="cachedOperationValue",f="cachedExecutionId";class O extends l.c{constructor(Q,X){super(X),this.value=this.registerDataOutput("value",Q),this.isValid=this.registerDataOutput("isValid",h.e)}_updateOutputs(Q){const X=Q._getExecutionVariable(this,f,-1),C=Q._getExecutionVariable(this,M,null);if(void 0!==C&&null!==C&&X===Q.executionId)this.isValid.setValue(!0,Q),this.value.setValue(C,Q);else try{const X=this._doOperation(Q);if(void 0===X||null===X)return void this.isValid.setValue(!1,Q);Q._setExecutionVariable(this,M,X),Q._setExecutionVariable(this,f,Q.executionId),this.value.setValue(X,Q),this.isValid.setValue(!0,Q)}catch(l){this.isValid.setValue(!1,Q)}}}},14450:(Q,X,C)=>{C.r(X),C.d(X,{FlowGraphGetPropertyBlock:()=>f});var l=C(13063),h=C(620),M=C(14320);class f extends M.d{constructor(Q){super(l.d,Q),this.config=Q,this.object=this.registerDataInput("object",l.d,Q.object),this.propertyName=this.registerDataInput("propertyName",l.d,Q.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",l.d)}_doOperation(Q){const X=this.customGetFunction.getValue(Q);let C;if(X)C=X(this.object.getValue(Q),this.propertyName.getValue(Q),Q);else{const X=this.object.getValue(Q),l=this.propertyName.getValue(Q);C=X&&l?this._getPropertyValue(X,l):void 0}return C}_getPropertyValue(Q,X){const C=X.split(".");let l=Q;for(const h of C)if(l=l[h],void 0===l)return;return l}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,h.g)("FlowGraphGetPropertyBlock",f)}}]);