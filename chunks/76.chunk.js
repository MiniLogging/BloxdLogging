"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[76],{13983:(U,W,l)=>{l.d(W,{c:()=>B});var M=l(12739),t=l(12704);const L="cachedOperationValue",p="cachedExecutionId";class B extends M.e{constructor(U,W){super(W),this.value=this.registerDataOutput("value",U),this.isValid=this.registerDataOutput("isValid",t.h)}_updateOutputs(U){const W=U._getExecutionVariable(this,p,-1),l=U._getExecutionVariable(this,L,null);if(void 0!==l&&null!==l&&W===U.executionId)this.isValid.setValue(!0,U),this.value.setValue(l,U);else try{const W=this._doOperation(U);if(void 0===W||null===W)return void this.isValid.setValue(!1,U);U._setExecutionVariable(this,L,W),U._setExecutionVariable(this,p,U.executionId),this.value.setValue(W,U),this.isValid.setValue(!0,U)}catch(M){this.isValid.setValue(!1,U)}}}},14100:(U,W,l)=>{l.r(W),l.d(W,{FlowGraphGetPropertyBlock:()=>p});var M=l(12704),t=l(655),L=l(13983);class p extends L.c{constructor(U){super(M.d,U),this.config=U,this.object=this.registerDataInput("object",M.d,U.object),this.propertyName=this.registerDataInput("propertyName",M.d,U.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",M.d)}_doOperation(U){const W=this.customGetFunction.getValue(U);let l;if(W)l=W(this.object.getValue(U),this.propertyName.getValue(U),U);else{const W=this.object.getValue(U),M=this.propertyName.getValue(U);l=W&&M?this._getPropertyValue(W,M):void 0}return l}_getPropertyValue(U,W){const l=W.split(".");let M=U;for(const t of l)if(M=M[t],void 0===M)return;return M}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,t.f)("FlowGraphGetPropertyBlock",p)}}]);