"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13717:(W,F,c)=>{c.r(F),c.d(F,{FlowGraphInterpolationBlock:()=>A});var T=c(12543),Y=c(12517),Z=c(12409),w=c(642);class A extends T.d{constructor(){let W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(W),this.keyFrames=[];const F="string"===typeof(null===W||void 0===W?void 0:W.animationType)?(0,Y.F)(W.animationType):(0,Y.E)((null===W||void 0===W?void 0:W.animationType)??0),c=(null===W||void 0===W?void 0:W.keyFramesCount)??1,T=this.registerDataInput("duration_0",Y.n,0),Z=this.registerDataInput("value_0",F);this.keyFrames.push({duration:T,value:Z});for(let w=1;w<c+1;w++){const T=this.registerDataInput(`duration_${w}`,Y.n,w===c?W.duration:void 0),Z=this.registerDataInput(`value_${w}`,F);this.keyFrames.push({duration:T,value:Z})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[c].value,this.easingFunction=this.registerDataInput("easingFunction",Y.c),this.animation=this.registerDataOutput("animation",Y.c),this.propertyName=this.registerDataInput("propertyName",Y.c,null===W||void 0===W?void 0:W.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",Y.c)}_updateOutputs(W){const F=W._getGlobalContextVariable("interpolationAnimations",[]),c=this.propertyName.getValue(W),T=this.easingFunction.getValue(W),Y=this._createAnimation(W,c,T);if(this.animation.setValue(Y,W),Array.isArray(Y))for(const Z of Y)F.push(Z.uniqueId);else F.push(Y.uniqueId);W._setGlobalContextVariable("interpolationAnimations",F)}_createAnimation(W,F,c){var T;const Y=this.initialValue.richType,w=[],A=this.initialValue.getValue(W)||Y.defaultValue;w.push({frame:0,value:A});const u=(null===(T=this.config)||void 0===T?void 0:T.numberOfKeyFrames)??1;for(let Z=1;Z<u+1;Z++){var s,x;const F=null===(s=this.keyFrames[Z].duration)||void 0===s?void 0:s.getValue(W);let c=null===(x=this.keyFrames[Z].value)||void 0===x?void 0:x.getValue(W);Z===u-1&&(c=c||Y.defaultValue),void 0!==F&&c&&w.push({frame:60*F,value:c})}const j=this.customBuildAnimation.getValue(W);if(j)return j(null,null,W)(w,60,Y.animationType,c);if("string"===typeof F){const W=Z.d.CreateAnimation(F,Y.animationType,60,c);return W.setKeys(w),[W]}return F.map((W=>{const F=Z.d.CreateAnimation(W,Y.animationType,60,c);return F.setKeys(w),F}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,w.h)("FlowGraphInterpolationBlock",A)}}]);