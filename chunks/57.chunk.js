"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13792:(A,X,s)=>{s.r(X),s.d(X,{FlowGraphInterpolationBlock:()=>K});var N=s(12701),f=s(12677),E=s(12567),g=s(616);class K extends N.e{constructor(){let A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(A),this.keyFrames=[];const X="string"===typeof(null===A||void 0===A?void 0:A.animationType)?(0,f.C)(A.animationType):(0,f.z)((null===A||void 0===A?void 0:A.animationType)??0),s=(null===A||void 0===A?void 0:A.keyFramesCount)??1,N=this.registerDataInput("duration_0",f.n,0),E=this.registerDataInput("value_0",X);this.keyFrames.push({duration:N,value:E});for(let g=1;g<s+1;g++){const N=this.registerDataInput(`duration_${g}`,f.n,g===s?A.duration:void 0),E=this.registerDataInput(`value_${g}`,X);this.keyFrames.push({duration:N,value:E})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[s].value,this.easingFunction=this.registerDataInput("easingFunction",f.b),this.animation=this.registerDataOutput("animation",f.b),this.propertyName=this.registerDataInput("propertyName",f.b,null===A||void 0===A?void 0:A.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",f.b)}_updateOutputs(A){const X=A._getGlobalContextVariable("interpolationAnimations",[]),s=this.propertyName.getValue(A),N=this.easingFunction.getValue(A),f=this._createAnimation(A,s,N);if(this.animation.setValue(f,A),Array.isArray(f))for(const E of f)X.push(E.uniqueId);else X.push(f.uniqueId);A._setGlobalContextVariable("interpolationAnimations",X)}_createAnimation(A,X,s){var N;const f=this.initialValue.richType,g=[],K=this.initialValue.getValue(A)||f.defaultValue;g.push({frame:0,value:K});const r=(null===(N=this.config)||void 0===N?void 0:N.numberOfKeyFrames)??1;for(let E=1;E<r+1;E++){var i,Y;const X=null===(i=this.keyFrames[E].duration)||void 0===i?void 0:i.getValue(A);let s=null===(Y=this.keyFrames[E].value)||void 0===Y?void 0:Y.getValue(A);E===r-1&&(s=s||f.defaultValue),void 0!==X&&s&&g.push({frame:60*X,value:s})}const v=this.customBuildAnimation.getValue(A);if(v)return v(null,null,A)(g,60,f.animationType,s);if("string"===typeof X){const A=E.e.CreateAnimation(X,f.animationType,60,s);return A.setKeys(g),[A]}return X.map((A=>{const X=E.e.CreateAnimation(A,f.animationType,60,s);return X.setKeys(g),X}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,g.f)("FlowGraphInterpolationBlock",K)}}]);