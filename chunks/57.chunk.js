"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13983:(P,Q,O)=>{O.r(Q),O.d(Q,{FlowGraphInterpolationBlock:()=>q});var b=O(12885),F=O(12871),g=O(12759),m=O(696);class q extends b.c{constructor(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(P),this.keyFrames=[];const Q="string"===typeof(null===P||void 0===P?void 0:P.animationType)?(0,F.K)(P.animationType):(0,F.J)((null===P||void 0===P?void 0:P.animationType)??0),O=(null===P||void 0===P?void 0:P.keyFramesCount)??1,b=this.registerDataInput("duration_0",F.o,0),g=this.registerDataInput("value_0",Q);this.keyFrames.push({duration:b,value:g});for(let m=1;m<O+1;m++){const b=this.registerDataInput(`duration_${m}`,F.o,m===O?P.duration:void 0),g=this.registerDataInput(`value_${m}`,Q);this.keyFrames.push({duration:b,value:g})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[O].value,this.easingFunction=this.registerDataInput("easingFunction",F.d),this.animation=this.registerDataOutput("animation",F.d),this.propertyName=this.registerDataInput("propertyName",F.d,null===P||void 0===P?void 0:P.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",F.d)}_updateOutputs(P){const Q=P._getGlobalContextVariable("interpolationAnimations",[]),O=this.propertyName.getValue(P),b=this.easingFunction.getValue(P),F=this._createAnimation(P,O,b);if(this.animation.setValue(F,P),Array.isArray(F))for(const g of F)Q.push(g.uniqueId);else Q.push(F.uniqueId);P._setGlobalContextVariable("interpolationAnimations",Q)}_createAnimation(P,Q,O){var b;const F=this.initialValue.richType,m=[],q=this.initialValue.getValue(P)||F.defaultValue;m.push({frame:0,value:q});const R=(null===(b=this.config)||void 0===b?void 0:b.numberOfKeyFrames)??1;for(let g=1;g<R+1;g++){var X,C;const Q=null===(X=this.keyFrames[g].duration)||void 0===X?void 0:X.getValue(P);let O=null===(C=this.keyFrames[g].value)||void 0===C?void 0:C.getValue(P);g===R-1&&(O=O||F.defaultValue),void 0!==Q&&O&&m.push({frame:60*Q,value:O})}const L=this.customBuildAnimation.getValue(P);if(L)return L(null,null,P)(m,60,F.animationType,O);if("string"===typeof Q){const P=g.b.CreateAnimation(Q,F.animationType,60,O);return P.setKeys(m),[P]}return Q.map((P=>{const Q=g.b.CreateAnimation(P,F.animationType,60,O);return Q.setKeys(m),Q}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,m.f)("FlowGraphInterpolationBlock",q)}}]);