"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13992:(n,k,T)=>{T.r(k),T.d(k,{FlowGraphInterpolationBlock:()=>w});var c=T(12845),K=T(12831),Q=T(12706),G=T(675);class w extends c.b{constructor(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(n),this.keyFrames=[];const k="string"===typeof(null===n||void 0===n?void 0:n.animationType)?(0,K.L)(n.animationType):(0,K.K)((null===n||void 0===n?void 0:n.animationType)??0),T=(null===n||void 0===n?void 0:n.keyFramesCount)??1,c=this.registerDataInput("duration_0",K.w,0),Q=this.registerDataInput("value_0",k);this.keyFrames.push({duration:c,value:Q});for(let G=1;G<T+1;G++){const c=this.registerDataInput(`duration_${G}`,K.w,G===T?n.duration:void 0),Q=this.registerDataInput(`value_${G}`,k);this.keyFrames.push({duration:c,value:Q})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[T].value,this.easingFunction=this.registerDataInput("easingFunction",K.e),this.animation=this.registerDataOutput("animation",K.e),this.propertyName=this.registerDataInput("propertyName",K.e,null===n||void 0===n?void 0:n.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",K.e)}_updateOutputs(n){const k=n._getGlobalContextVariable("interpolationAnimations",[]),T=this.propertyName.getValue(n),c=this.easingFunction.getValue(n),K=this._createAnimation(n,T,c);if(this.animation.setValue(K,n),Array.isArray(K))for(const Q of K)k.push(Q.uniqueId);else k.push(K.uniqueId);n._setGlobalContextVariable("interpolationAnimations",k)}_createAnimation(n,k,T){var c;const K=this.initialValue.richType,G=[],w=this.initialValue.getValue(n)||K.defaultValue;G.push({frame:0,value:w});const E=(null===(c=this.config)||void 0===c?void 0:c.numberOfKeyFrames)??1;for(let Q=1;Q<E+1;Q++){var I,S;const k=null===(I=this.keyFrames[Q].duration)||void 0===I?void 0:I.getValue(n);let T=null===(S=this.keyFrames[Q].value)||void 0===S?void 0:S.getValue(n);Q===E-1&&(T=T||K.defaultValue),void 0!==k&&T&&G.push({frame:60*k,value:T})}const P=this.customBuildAnimation.getValue(n);if(P)return P(null,null,n)(G,60,K.animationType,T);if("string"===typeof k){const n=Q.c.CreateAnimation(k,K.animationType,60,T);return n.setKeys(G),[n]}return k.map((n=>{const k=Q.c.CreateAnimation(n,K.animationType,60,T);return k.setKeys(G),k}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,G.f)("FlowGraphInterpolationBlock",w)}}]);