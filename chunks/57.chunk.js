"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13975:(U,M,b)=>{b.r(M),b.d(M,{FlowGraphInterpolationBlock:()=>y});var a=b(12795),A=b(12775),H=b(12641),W=b(609);class y extends a.c{constructor(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(U),this.keyFrames=[];const M="string"===typeof(null===U||void 0===U?void 0:U.animationType)?(0,A.M)(U.animationType):(0,A.K)((null===U||void 0===U?void 0:U.animationType)??0),b=(null===U||void 0===U?void 0:U.keyFramesCount)??1,a=this.registerDataInput("duration_0",A.t,0),H=this.registerDataInput("value_0",M);this.keyFrames.push({duration:a,value:H});for(let W=1;W<b+1;W++){const a=this.registerDataInput(`duration_${W}`,A.t,W===b?U.duration:void 0),H=this.registerDataInput(`value_${W}`,M);this.keyFrames.push({duration:a,value:H})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[b].value,this.easingFunction=this.registerDataInput("easingFunction",A.c),this.animation=this.registerDataOutput("animation",A.c),this.propertyName=this.registerDataInput("propertyName",A.c,null===U||void 0===U?void 0:U.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",A.c)}_updateOutputs(U){const M=U._getGlobalContextVariable("interpolationAnimations",[]),b=this.propertyName.getValue(U),a=this.easingFunction.getValue(U),A=this._createAnimation(U,b,a);if(this.animation.setValue(A,U),Array.isArray(A))for(const H of A)M.push(H.uniqueId);else M.push(A.uniqueId);U._setGlobalContextVariable("interpolationAnimations",M)}_createAnimation(U,M,b){var a;const A=this.initialValue.richType,W=[],y=this.initialValue.getValue(U)||A.defaultValue;W.push({frame:0,value:y});const O=(null===(a=this.config)||void 0===a?void 0:a.numberOfKeyFrames)??1;for(let H=1;H<O+1;H++){var e,x;const M=null===(e=this.keyFrames[H].duration)||void 0===e?void 0:e.getValue(U);let b=null===(x=this.keyFrames[H].value)||void 0===x?void 0:x.getValue(U);H===O-1&&(b=b||A.defaultValue),void 0!==M&&b&&W.push({frame:60*M,value:b})}const P=this.customBuildAnimation.getValue(U);if(P)return P(null,null,U)(W,60,A.animationType,b);if("string"===typeof M){const U=H.d.CreateAnimation(M,A.animationType,60,b);return U.setKeys(W),[U]}return M.map((U=>{const M=H.d.CreateAnimation(U,A.animationType,60,b);return M.setKeys(W),M}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,W.i)("FlowGraphInterpolationBlock",y)}}]);