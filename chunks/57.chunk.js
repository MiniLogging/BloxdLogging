"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{14094:(u,F,z)=>{z.r(F),z.d(F,{FlowGraphInterpolationBlock:()=>I});var p=z(12980),b=z(12952),R=z(12829),c=z(668);class I extends p.d{constructor(){let u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(u),this.keyFrames=[];const F="string"===typeof(null===u||void 0===u?void 0:u.animationType)?(0,b.M)(u.animationType):(0,b.I)((null===u||void 0===u?void 0:u.animationType)??0),z=(null===u||void 0===u?void 0:u.keyFramesCount)??1,p=this.registerDataInput("duration_0",b.t,0),R=this.registerDataInput("value_0",F);this.keyFrames.push({duration:p,value:R});for(let c=1;c<z+1;c++){const p=this.registerDataInput(`duration_${c}`,b.t,c===z?u.duration:void 0),R=this.registerDataInput(`value_${c}`,F);this.keyFrames.push({duration:p,value:R})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[z].value,this.easingFunction=this.registerDataInput("easingFunction",b.e),this.animation=this.registerDataOutput("animation",b.e),this.propertyName=this.registerDataInput("propertyName",b.e,null===u||void 0===u?void 0:u.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",b.e)}_updateOutputs(u){const F=u._getGlobalContextVariable("interpolationAnimations",[]),z=this.propertyName.getValue(u),p=this.easingFunction.getValue(u),b=this._createAnimation(u,z,p);if(this.animation.setValue(b,u),Array.isArray(b))for(const R of b)F.push(R.uniqueId);else F.push(b.uniqueId);u._setGlobalContextVariable("interpolationAnimations",F)}_createAnimation(u,F,z){var p;const b=this.initialValue.richType,c=[],I=this.initialValue.getValue(u)||b.defaultValue;c.push({frame:0,value:I});const G=(null===(p=this.config)||void 0===p?void 0:p.numberOfKeyFrames)??1;for(let R=1;R<G+1;R++){var X,j;const F=null===(X=this.keyFrames[R].duration)||void 0===X?void 0:X.getValue(u);let z=null===(j=this.keyFrames[R].value)||void 0===j?void 0:j.getValue(u);R===G-1&&(z=z||b.defaultValue),void 0!==F&&z&&c.push({frame:60*F,value:z})}const W=this.customBuildAnimation.getValue(u);if(W)return W(null,null,u)(c,60,b.animationType,z);if("string"===typeof F){const u=R.e.CreateAnimation(F,b.animationType,60,z);return u.setKeys(c),[u]}return F.map((u=>{const F=R.e.CreateAnimation(u,b.animationType,60,z);return F.setKeys(c),F}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,c.h)("FlowGraphInterpolationBlock",I)}}]);