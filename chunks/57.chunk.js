"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[57],{13810:(J,T,b)=>{b.r(T),b.d(T,{FlowGraphInterpolationBlock:()=>Y});var q=b(12627),t=b(12603),j=b(12484),B=b(639);class Y extends q.b{constructor(){let J=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(J),this.keyFrames=[];const T="string"===typeof(null===J||void 0===J?void 0:J.animationType)?(0,t.O)(J.animationType):(0,t.N)((null===J||void 0===J?void 0:J.animationType)??0),b=(null===J||void 0===J?void 0:J.keyFramesCount)??1,q=this.registerDataInput("duration_0",t.r,0),j=this.registerDataInput("value_0",T);this.keyFrames.push({duration:q,value:j});for(let B=1;B<b+1;B++){const q=this.registerDataInput(`duration_${B}`,t.r,B===b?J.duration:void 0),j=this.registerDataInput(`value_${B}`,T);this.keyFrames.push({duration:q,value:j})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[b].value,this.easingFunction=this.registerDataInput("easingFunction",t.c),this.animation=this.registerDataOutput("animation",t.c),this.propertyName=this.registerDataInput("propertyName",t.c,null===J||void 0===J?void 0:J.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",t.c)}_updateOutputs(J){const T=J._getGlobalContextVariable("interpolationAnimations",[]),b=this.propertyName.getValue(J),q=this.easingFunction.getValue(J),t=this._createAnimation(J,b,q);if(this.animation.setValue(t,J),Array.isArray(t))for(const j of t)T.push(j.uniqueId);else T.push(t.uniqueId);J._setGlobalContextVariable("interpolationAnimations",T)}_createAnimation(J,T,b){var q;const t=this.initialValue.richType,B=[],Y=this.initialValue.getValue(J)||t.defaultValue;B.push({frame:0,value:Y});const C=(null===(q=this.config)||void 0===q?void 0:q.numberOfKeyFrames)??1;for(let j=1;j<C+1;j++){var F,A;const T=null===(F=this.keyFrames[j].duration)||void 0===F?void 0:F.getValue(J);let b=null===(A=this.keyFrames[j].value)||void 0===A?void 0:A.getValue(J);j===C-1&&(b=b||t.defaultValue),void 0!==T&&b&&B.push({frame:60*T,value:b})}const a=this.customBuildAnimation.getValue(J);if(a)return a(null,null,J)(B,60,t.animationType,b);if("string"===typeof T){const J=j.b.CreateAnimation(T,t.animationType,60,b);return J.setKeys(B),[J]}return T.map((J=>{const T=j.b.CreateAnimation(J,t.animationType,60,b);return T.setKeys(B),T}))}getClassName(){return"FlowGraphInterpolationBlock"}}(0,B.g)("FlowGraphInterpolationBlock",Y)}}]);