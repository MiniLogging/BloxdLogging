"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14133:(Z,U,n)=>{n.r(U),n.d(U,{FlowGraphForLoopBlock:()=>G});var i=n(12861),B=n(12826),l=n(633),H=n(12848),V=n(12817);class G extends i.e{constructor(Z){super(Z),this.startIndex=this.registerDataInput("startIndex",B.b,0),this.endIndex=this.registerDataInput("endIndex",B.b),this.step=this.registerDataInput("step",B.s,1),this.index=this.registerDataOutput("index",B.g,new V.d((0,H.p)((null===Z||void 0===Z?void 0:Z.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(Z){var U;const n=(0,H.p)(this.startIndex.getValue(Z)),i=this.step.getValue(Z);let B=(0,H.p)(this.endIndex.getValue(Z));for(let l=n;l<B&&(this.index.setValue(new V.d(l),Z),this.executionFlow._activateSignal(Z),B=(0,H.p)(this.endIndex.getValue(Z)),!(l>G.MaxLoopIterations*i));l+=i);null!==(U=this.config)&&void 0!==U&&U.incrementIndexWhenLoopDone&&this.index.setValue(new V.d((0,H.p)(this.index.getValue(Z))+i),Z),this.completed._activateSignal(Z)}getClassName(){return"FlowGraphForLoopBlock"}}G.MaxLoopIterations=1e3,(0,l.g)("FlowGraphForLoopBlock",G)}}]);