"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{13832:(L,j,P)=>{P.r(j),P.d(j,{FlowGraphForLoopBlock:()=>a});var A=P(12554),R=P(12510),o=P(606),Y=P(12531),u=P(12506);class a extends A.b{constructor(L){super(L),this.startIndex=this.registerDataInput("startIndex",R.d,0),this.endIndex=this.registerDataInput("endIndex",R.d),this.step=this.registerDataInput("step",R.p,1),this.index=this.registerDataOutput("index",R.f,new u.b((0,Y.q)((null===L||void 0===L?void 0:L.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(L){var j;const P=(0,Y.q)(this.startIndex.getValue(L)),A=this.step.getValue(L);let R=(0,Y.q)(this.endIndex.getValue(L));for(let o=P;o<R&&(this.index.setValue(new u.b(o),L),this.executionFlow._activateSignal(L),R=(0,Y.q)(this.endIndex.getValue(L)),!(o>a.MaxLoopIterations*A));o+=A);null!==(j=this.config)&&void 0!==j&&j.incrementIndexWhenLoopDone&&this.index.setValue(new u.b((0,Y.q)(this.index.getValue(L))+A),L),this.completed._activateSignal(L)}getClassName(){return"FlowGraphForLoopBlock"}}a.MaxLoopIterations=1e3,(0,o.h)("FlowGraphForLoopBlock",a)}}]);