"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14393:(Q,X,C)=>{C.r(X),C.d(X,{FlowGraphForLoopBlock:()=>m});var l=C(13120),h=C(13063),M=C(620),f=C(13104),O=C(13060);class m extends l.c{constructor(Q){super(Q),this.startIndex=this.registerDataInput("startIndex",h.d,0),this.endIndex=this.registerDataInput("endIndex",h.d),this.step=this.registerDataInput("step",h.p,1),this.index=this.registerDataOutput("index",h.f,new O.d((0,f.s)((null===Q||void 0===Q?void 0:Q.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(Q){var X;const C=(0,f.s)(this.startIndex.getValue(Q)),l=this.step.getValue(Q);let h=(0,f.s)(this.endIndex.getValue(Q));for(let M=C;M<h&&(this.index.setValue(new O.d(M),Q),this.executionFlow._activateSignal(Q),h=(0,f.s)(this.endIndex.getValue(Q)),!(M>m.MaxLoopIterations*l));M+=l);null!==(X=this.config)&&void 0!==X&&X.incrementIndexWhenLoopDone&&this.index.setValue(new O.d((0,f.s)(this.index.getValue(Q))+l),Q),this.completed._activateSignal(Q)}getClassName(){return"FlowGraphForLoopBlock"}}m.MaxLoopIterations=1e3,(0,M.g)("FlowGraphForLoopBlock",m)}}]);