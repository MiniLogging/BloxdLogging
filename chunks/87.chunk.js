"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14033:(U,W,l)=>{l.r(W),l.d(W,{FlowGraphForLoopBlock:()=>k});var M=l(12766),t=l(12704),L=l(655),p=l(12746),B=l(12699);class k extends M.e{constructor(U){super(U),this.startIndex=this.registerDataInput("startIndex",t.d,0),this.endIndex=this.registerDataInput("endIndex",t.d),this.step=this.registerDataInput("step",t.s,1),this.index=this.registerDataOutput("index",t.k,new B.d((0,p.n)((null===U||void 0===U?void 0:U.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(U){var W;const l=(0,p.n)(this.startIndex.getValue(U)),M=this.step.getValue(U);let t=(0,p.n)(this.endIndex.getValue(U));for(let L=l;L<t&&(this.index.setValue(new B.d(L),U),this.executionFlow._activateSignal(U),t=(0,p.n)(this.endIndex.getValue(U)),!(L>k.MaxLoopIterations*M));L+=M);null!==(W=this.config)&&void 0!==W&&W.incrementIndexWhenLoopDone&&this.index.setValue(new B.d((0,p.n)(this.index.getValue(U))+M),U),this.completed._activateSignal(U)}getClassName(){return"FlowGraphForLoopBlock"}}k.MaxLoopIterations=1e3,(0,L.f)("FlowGraphForLoopBlock",k)}}]);