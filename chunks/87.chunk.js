"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14540:(R,x,H)=>{H.r(x),H.d(x,{FlowGraphForLoopBlock:()=>U});var k=H(13301),c=H(13246),t=H(610),A=H(13283),D=H(13244);class U extends k.d{constructor(R){super(R),this.startIndex=this.registerDataInput("startIndex",c.b,0),this.endIndex=this.registerDataInput("endIndex",c.b),this.step=this.registerDataInput("step",c.m,1),this.index=this.registerDataOutput("index",c.d,new D.e((0,A.q)((null===R||void 0===R?void 0:R.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(R){var x;const H=(0,A.q)(this.startIndex.getValue(R)),k=this.step.getValue(R);let c=(0,A.q)(this.endIndex.getValue(R));for(let t=H;t<c&&(this.index.setValue(new D.e(t),R),this.executionFlow._activateSignal(R),c=(0,A.q)(this.endIndex.getValue(R)),!(t>U.MaxLoopIterations*k));t+=k);null!==(x=this.config)&&void 0!==x&&x.incrementIndexWhenLoopDone&&this.index.setValue(new D.e((0,A.q)(this.index.getValue(R))+k),R),this.completed._activateSignal(R)}getClassName(){return"FlowGraphForLoopBlock"}}U.MaxLoopIterations=1e3,(0,t.h)("FlowGraphForLoopBlock",U)}}]);