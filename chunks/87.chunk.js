"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14099:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphForLoopBlock:()=>L});var o=A(12813),t=A(12763),n=A(633),h=A(12801),s=A(12760);class L extends o.d{constructor(c){super(c),this.startIndex=this.registerDataInput("startIndex",t.e,0),this.endIndex=this.registerDataInput("endIndex",t.e),this.step=this.registerDataInput("step",t.t,1),this.index=this.registerDataOutput("index",t.g,new s.d((0,h.r)((null===c||void 0===c?void 0:c.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(c){var b;const A=(0,h.r)(this.startIndex.getValue(c)),o=this.step.getValue(c);let t=(0,h.r)(this.endIndex.getValue(c));for(let n=A;n<t&&(this.index.setValue(new s.d(n),c),this.executionFlow._activateSignal(c),t=(0,h.r)(this.endIndex.getValue(c)),!(n>L.MaxLoopIterations*o));n+=o);null!==(b=this.config)&&void 0!==b&&b.incrementIndexWhenLoopDone&&this.index.setValue(new s.d((0,h.r)(this.index.getValue(c))+o),c),this.completed._activateSignal(c)}getClassName(){return"FlowGraphForLoopBlock"}}L.MaxLoopIterations=1e3,(0,n.d)("FlowGraphForLoopBlock",L)}}]);