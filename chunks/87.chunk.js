"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14266:(v,d,Q)=>{Q.r(d),Q.d(d,{FlowGraphForLoopBlock:()=>r});var n=Q(12966),T=Q(12908),L=Q(591),e=Q(12950),F=Q(12904);class r extends n.d{constructor(v){super(v),this.startIndex=this.registerDataInput("startIndex",T.c,0),this.endIndex=this.registerDataInput("endIndex",T.c),this.step=this.registerDataInput("step",T.u,1),this.index=this.registerDataOutput("index",T.h,new F.b((0,e.v)((null===v||void 0===v?void 0:v.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(v){var d;const Q=(0,e.v)(this.startIndex.getValue(v)),n=this.step.getValue(v);let T=(0,e.v)(this.endIndex.getValue(v));for(let L=Q;L<T&&(this.index.setValue(new F.b(L),v),this.executionFlow._activateSignal(v),T=(0,e.v)(this.endIndex.getValue(v)),!(L>r.MaxLoopIterations*n));L+=n);null!==(d=this.config)&&void 0!==d&&d.incrementIndexWhenLoopDone&&this.index.setValue(new F.b((0,e.v)(this.index.getValue(v))+n),v),this.completed._activateSignal(v)}getClassName(){return"FlowGraphForLoopBlock"}}r.MaxLoopIterations=1e3,(0,L.f)("FlowGraphForLoopBlock",r)}}]);