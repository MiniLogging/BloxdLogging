"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[87],{14222:(t,q,S)=>{S.r(q),S.d(q,{FlowGraphForLoopBlock:()=>e});var o=S(12981),B=S(12927),z=S(622),L=S(12957),r=S(12922);class e extends o.d{constructor(t){super(t),this.startIndex=this.registerDataInput("startIndex",B.b,0),this.endIndex=this.registerDataInput("endIndex",B.b),this.step=this.registerDataInput("step",B.v,1),this.index=this.registerDataOutput("index",B.h,new r.e((0,L.q)((null===t||void 0===t?void 0:t.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(t){var q;const S=(0,L.q)(this.startIndex.getValue(t)),o=this.step.getValue(t);let B=(0,L.q)(this.endIndex.getValue(t));for(let z=S;z<B&&(this.index.setValue(new r.e(z),t),this.executionFlow._activateSignal(t),B=(0,L.q)(this.endIndex.getValue(t)),!(z>e.MaxLoopIterations*o));z+=o);null!==(q=this.config)&&void 0!==q&&q.incrementIndexWhenLoopDone&&this.index.setValue(new r.e((0,L.q)(this.index.getValue(t))+o),t),this.completed._activateSignal(t)}getClassName(){return"FlowGraphForLoopBlock"}}e.MaxLoopIterations=1e3,(0,z.c)("FlowGraphForLoopBlock",e)}}]);