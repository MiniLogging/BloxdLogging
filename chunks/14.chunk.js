"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[14],{2593:(Q,X,C)=>{C.r(X),C.d(X,{_KTXTextureLoader:()=>i});var l=C(501);class h{constructor(Q,X){if(this.data=Q,this.isInvalid=!1,!h.IsValid(Q))return this.isInvalid=!0,void l.c.Error("texture missing KTX identifier");const C=Uint32Array.BYTES_PER_ELEMENT,M=new DataView(this.data.buffer,this.data.byteOffset+12,13*C),f=67305985===M.getUint32(0,!0);return this.glType=M.getUint32(1*C,f),this.glTypeSize=M.getUint32(2*C,f),this.glFormat=M.getUint32(3*C,f),this.glInternalFormat=M.getUint32(4*C,f),this.glBaseInternalFormat=M.getUint32(5*C,f),this.pixelWidth=M.getUint32(6*C,f),this.pixelHeight=M.getUint32(7*C,f),this.pixelDepth=M.getUint32(8*C,f),this.numberOfArrayElements=M.getUint32(9*C,f),this.numberOfFaces=M.getUint32(10*C,f),this.numberOfMipmapLevels=M.getUint32(11*C,f),this.bytesOfKeyValueData=M.getUint32(12*C,f),0!==this.glType?(l.c.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(l.c.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(l.c.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==X?(l.c.Error("number of faces expected"+X+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=h.COMPRESSED_2D))}uploadLevels(Q,X){switch(this.loadType){case h.COMPRESSED_2D:this._upload2DCompressedLevels(Q,X);case h.TEX_2D:case h.COMPRESSED_3D:case h.TEX_3D:}}_upload2DCompressedLevels(Q,X){let C=h.HEADER_LEN+this.bytesOfKeyValueData,l=this.pixelWidth,M=this.pixelHeight;const f=X?this.numberOfMipmapLevels:1;for(let h=0;h<f;h++){const X=new Int32Array(this.data.buffer,this.data.byteOffset+C,1)[0];C+=4;for(let f=0;f<this.numberOfFaces;f++){const O=new Uint8Array(this.data.buffer,this.data.byteOffset+C,X);Q.getEngine()._uploadCompressedDataToTextureDirectly(Q,Q.format,l,M,O,f,h),C+=X,C+=3-(X+3)%4}l=Math.max(1,.5*l),M=Math.max(1,.5*M)}}static IsValid(Q){if(Q.byteLength>=12){const X=new Uint8Array(Q.buffer,Q.byteOffset,12);if(171===X[0]&&75===X[1]&&84===X[2]&&88===X[3]&&32===X[4]&&49===X[5]&&49===X[6]&&187===X[7]&&13===X[8]&&10===X[9]&&26===X[10]&&10===X[11])return!0}return!1}}h.HEADER_LEN=64,h.COMPRESSED_2D=0,h.COMPRESSED_3D=1,h.TEX_2D=2,h.TEX_3D=3;var M,f,O,m=C(2602),W=C(487);function U(Q,X){const C=(null===X||void 0===X?void 0:X.jsDecoderModule)||KTX2DECODER;Q&&(Q.wasmUASTCToASTC&&(C.LiteTranscoder_UASTC_ASTC.WasmModuleURL=Q.wasmUASTCToASTC),Q.wasmUASTCToBC7&&(C.LiteTranscoder_UASTC_BC7.WasmModuleURL=Q.wasmUASTCToBC7),Q.wasmUASTCToRGBA_UNORM&&(C.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=Q.wasmUASTCToRGBA_UNORM),Q.wasmUASTCToRGBA_SRGB&&(C.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=Q.wasmUASTCToRGBA_SRGB),Q.wasmUASTCToR8_UNORM&&(C.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=Q.wasmUASTCToR8_UNORM),Q.wasmUASTCToRG8_UNORM&&(C.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=Q.wasmUASTCToRG8_UNORM),Q.jsMSCTranscoder&&(C.MSCTranscoder.JSModuleURL=Q.jsMSCTranscoder),Q.wasmMSCTranscoder&&(C.MSCTranscoder.WasmModuleURL=Q.wasmMSCTranscoder),Q.wasmZSTDDecoder&&(C.ZSTDDecoder.WasmModuleURL=Q.wasmZSTDDecoder)),X&&(X.wasmUASTCToASTC&&(C.LiteTranscoder_UASTC_ASTC.WasmBinary=X.wasmUASTCToASTC),X.wasmUASTCToBC7&&(C.LiteTranscoder_UASTC_BC7.WasmBinary=X.wasmUASTCToBC7),X.wasmUASTCToRGBA_UNORM&&(C.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=X.wasmUASTCToRGBA_UNORM),X.wasmUASTCToRGBA_SRGB&&(C.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=X.wasmUASTCToRGBA_SRGB),X.wasmUASTCToR8_UNORM&&(C.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=X.wasmUASTCToR8_UNORM),X.wasmUASTCToRG8_UNORM&&(C.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=X.wasmUASTCToRG8_UNORM),X.jsMSCTranscoder&&(C.MSCTranscoder.JSModule=X.jsMSCTranscoder),X.wasmMSCTranscoder&&(C.MSCTranscoder.WasmBinary=X.wasmMSCTranscoder),X.wasmZSTDDecoder&&(C.ZSTDDecoder.WasmBinary=X.wasmZSTDDecoder))}function L(Q){let X;"undefined"===typeof Q&&"undefined"!==typeof KTX2DECODER&&(Q=KTX2DECODER),onmessage=C=>{if(C.data)switch(C.data.action){case"init":{const l=C.data.urls;l&&(l.jsDecoderModule&&"undefined"===typeof Q&&(importScripts(l.jsDecoderModule),Q=KTX2DECODER),U(l)),C.data.wasmBinaries&&U(void 0,{...C.data.wasmBinaries,jsDecoderModule:Q}),X=new Q.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":Q.KTX2Decoder.DefaultDecoderOptions=C.data.options;break;case"decode":X.decode(C.data.data,C.data.caps,C.data.options).then((Q=>{const X=[];for(let C=0;C<Q.mipmaps.length;++C){const l=Q.mipmaps[C];l&&l.data&&X.push(l.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:Q},X)})).catch((Q=>{postMessage({action:"decoded",success:!1,msg:Q})}))}}}!function(Q){Q[Q.ETC1S=0]="ETC1S",Q[Q.UASTC4x4=1]="UASTC4x4"}(M||(M={})),function(Q){Q[Q.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",Q[Q.BC7_RGBA=1]="BC7_RGBA",Q[Q.BC3_RGBA=2]="BC3_RGBA",Q[Q.BC1_RGB=3]="BC1_RGB",Q[Q.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",Q[Q.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",Q[Q.ETC2_RGBA=6]="ETC2_RGBA",Q[Q.ETC1_RGB=7]="ETC1_RGB",Q[Q.RGBA32=8]="RGBA32",Q[Q.R8=9]="R8",Q[Q.RG8=10]="RG8"}(f||(f={})),function(Q){Q[Q.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",Q[Q.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",Q[Q.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",Q[Q.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",Q[Q.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",Q[Q.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",Q[Q.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",Q[Q.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",Q[Q.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",Q[Q.RGBA8Format=32856]="RGBA8Format",Q[Q.R8Format=33321]="R8Format",Q[Q.RG8Format=33323]="RG8Format"}(O||(O={}));class w{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(Q){if(w._WorkerPoolPromise||w._DecoderModulePromise)return;const X={jsDecoderModule:W.i.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:W.i.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:W.i.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:W.i.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:W.i.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};Q&&"function"===typeof Worker&&"undefined"!==typeof URL?w._WorkerPoolPromise=new Promise((C=>{const l=`${U}(${L})()`,h=URL.createObjectURL(new Blob([l],{type:"application/javascript"}));C(new m.d(Q,(async()=>await async function(Q,X,C){return await new Promise(((l,h)=>{const M=X=>{Q.removeEventListener("error",M),Q.removeEventListener("message",f),h(X)},f=X=>{"init"===X.data.action&&(Q.removeEventListener("error",M),Q.removeEventListener("message",f),l(Q))};Q.addEventListener("error",M),Q.addEventListener("message",f),Q.postMessage({action:"init",urls:C,wasmBinaries:X})}))}(new Worker(h),void 0,X))))})):"undefined"===typeof w._KTX2DecoderModule?w._DecoderModulePromise=W.i.LoadBabylonScriptAsync(X.jsDecoderModule).then((()=>(w._KTX2DecoderModule=KTX2DECODER,w._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,w._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,U(X,w._KTX2DecoderModule),new w._KTX2DecoderModule.KTX2Decoder))):(w._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,w._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,w._DecoderModulePromise=Promise.resolve(new w._KTX2DecoderModule.KTX2Decoder))}constructor(Q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.DefaultNumWorkers;this._engine=Q;const C="object"===typeof X&&X.workerPool||w.WorkerPool;if(C)w._WorkerPoolPromise=Promise.resolve(C);else{var l;if("object"===typeof X)w._KTX2DecoderModule=null===X||void 0===X||null===(l=X.binariesAndModulesContainer)||void 0===l?void 0:l.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(w._KTX2DecoderModule=KTX2DECODER);const Q="number"===typeof X?X:X.numWorkers??w.DefaultNumWorkers;w._Initialize(Q)}}async _uploadAsync(Q,X,C){const l=this._engine.getCaps(),h={astc:!!l.astc,bptc:!!l.bptc,s3tc:!!l.s3tc,pvrtc:!!l.pvrtc,etc2:!!l.etc2,etc1:!!l.etc1};if(w._WorkerPoolPromise){const l=await w._WorkerPoolPromise;return await new Promise(((M,f)=>{l.push(((l,O)=>{const m=Q=>{l.removeEventListener("error",m),l.removeEventListener("message",W),f(Q),O()},W=Q=>{if("decoded"===Q.data.action){if(l.removeEventListener("error",m),l.removeEventListener("message",W),Q.data.success)try{this._createTexture(Q.data.decodedData,X,C),M()}catch(h){f({message:h})}else f({message:Q.data.msg});O()}};l.addEventListener("error",m),l.addEventListener("message",W),l.postMessage({action:"setDefaultDecoderOptions",options:w.DefaultDecoderOptions._getKTX2DecoderOptions()});const U=new Uint8Array(Q.byteLength);U.set(new Uint8Array(Q.buffer,Q.byteOffset,Q.byteLength)),l.postMessage({action:"decode",data:U,caps:h,options:C},[U.buffer])}))}))}if(w._DecoderModulePromise){const C=await w._DecoderModulePromise;return w.DefaultDecoderOptions.isDirty&&(w._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=w.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((h,M)=>{C.decode(Q,l).then((Q=>{this._createTexture(Q,X),h()})).catch((Q=>{M({message:Q})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(Q,X,C){this._engine._bindTextureDirectly(3553,X),C&&(C.transcodedFormat=Q.transcodedFormat,C.isInGammaSpace=Q.isInGammaSpace,C.mi=Q.mi,C.transcoderName=Q.transcoderName);let l=!0;switch(Q.transcodedFormat){case 32856:X.type=0,X.format=5;break;case 33321:X.type=0,X.format=6;break;case 33323:X.type=0,X.format=7;break;default:X.format=Q.transcodedFormat,l=!1}if(X._gammaSpace=Q.isInGammaSpace,X.generateMipMaps=Q.mipmaps.length>1,Q.errors)throw new Error("KTX2 container - could not transcode the data. "+Q.errors);for(let h=0;h<Q.mipmaps.length;++h){const C=Q.mipmaps[h];if(!C||!C.data)throw new Error("KTX2 container - could not transcode one of the image");l?(X.width=C.width,X.height=C.height,this._engine._uploadDataToTextureDirectly(X,C.data,0,h,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(X,Q.transcodedFormat,C.width,C.height,C.data,0,h)}X._extension=".ktx2",X.width=Q.mipmaps[0].width,X.height=Q.mipmaps[0].height,X.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(Q){if(Q.byteLength>=12){const X=new Uint8Array(Q.buffer,Q.byteOffset,12);if(171===X[0]&&75===X[1]&&84===X[2]&&88===X[3]&&32===X[4]&&50===X[5]&&48===X[6]&&187===X[7]&&13===X[8]&&10===X[9]&&26===X[10]&&10===X[11])return!0}return!1}}w.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},w.DefaultNumWorkers=w.GetDefaultNumWorkers(),w.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(Q){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==Q&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=Q,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(Q){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==Q&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=Q,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(Q){this._forceRGBA!==Q&&(this._forceRGBA=Q,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(Q){this._forceR8!==Q&&(this._forceR8=Q,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(Q){this._forceRG8!==Q&&(this._forceRG8=Q,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(Q){this._bypassTranscoders!==Q&&(this._bypassTranscoders=Q,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const Q={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(Q.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[f.BC1_RGB,f.BC3_RGBA],yes:{transcodeFormat:f.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=Q,Q}};class i{constructor(){this.supportCascades=!1}loadCubeData(Q,X,C,l){if(Array.isArray(Q))return;X._invertVScale=!X.invertY;const M=X.getEngine(),f=new h(Q,6),O=f.numberOfMipmapLevels>1&&X.generateMipMaps;M._unpackFlipY(!0),f.uploadLevels(X,X.generateMipMaps),X.width=f.pixelWidth,X.height=f.pixelHeight,M._setCubeMapTextureParams(X,O,f.numberOfMipmapLevels-1),X.isReady=!0,X.onLoadedObservable.notifyObservers(X),X.onLoadedObservable.clear(),l&&l()}loadData(Q,X,C,M){if(h.IsValid(Q)){X._invertVScale=!X.invertY;const l=new h(Q,1),M=function(Q){switch(Q){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(l.glInternalFormat);M?(X.format=M,X._useSRGBBuffer=X.getEngine()._getUseSRGBBuffer(!0,X.generateMipMaps),X._gammaSpace=!0):X.format=l.glInternalFormat,C(l.pixelWidth,l.pixelHeight,X.generateMipMaps,!0,(()=>{l.uploadLevels(X,X.generateMipMaps)}),l.isInvalid)}else if(w.IsValid(Q)){new w(X.getEngine())._uploadAsync(Q,X,M).then((()=>{C(X.width,X.height,X.generateMipMaps,!0,(()=>{}),!1)}),(Q=>{l.c.Warn(`Failed to load KTX2 texture data: ${Q.message}`),C(0,0,!1,!1,(()=>{}),!0)}))}else l.c.Error("texture missing KTX identifier"),C(0,0,!1,!1,(()=>{}),!0)}}},2602:(Q,X,C)=>{C.d(X,{d:()=>h});class l{constructor(Q){this._pendingActions=new Array,this._workerInfos=Q.map((Q=>({workerPromise:Promise.resolve(Q),idle:!0})))}dispose(){for(const Q of this._workerInfos)Q.workerPromise.then((Q=>{Q.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(Q){this._executeOnIdleWorker(Q)||this._pendingActions.push(Q)}_executeOnIdleWorker(Q){for(const X of this._workerInfos)if(X.idle)return this._execute(X,Q),!0;return!1}_execute(Q,X){Q.idle=!1,Q.workerPromise.then((C=>{X(C,(()=>{const X=this._pendingActions.shift();X?this._execute(Q,X):Q.idle=!0}))}))}}class h extends l{constructor(Q,X){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h.DefaultOptions;super([]),this._maxWorkers=Q,this._createWorkerAsync=X,this._options=C}push(Q){if(!this._executeOnIdleWorker(Q))if(this._workerInfos.length<this._maxWorkers){const X={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(X),this._execute(X,Q)}else this._pendingActions.push(Q)}_execute(Q,X){Q.timeoutId&&(clearTimeout(Q.timeoutId),delete Q.timeoutId),super._execute(Q,((C,l)=>{X(C,(()=>{l(),Q.idle&&(Q.timeoutId=setTimeout((()=>{Q.workerPromise.then((Q=>{Q.terminate()}));const X=this._workerInfos.indexOf(Q);-1!==X&&this._workerInfos.splice(X,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}h.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);