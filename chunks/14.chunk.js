"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[14],{2482:(f,z,w)=>{w.r(z),w.d(z,{_ExrTextureLoader:()=>Q});var S=w(548),C=w(741);const E=65536,F=14,J=65537,x=16384;var u,h;!function(f){f[f.NO_COMPRESSION=0]="NO_COMPRESSION",f[f.RLE_COMPRESSION=1]="RLE_COMPRESSION",f[f.ZIPS_COMPRESSION=2]="ZIPS_COMPRESSION",f[f.ZIP_COMPRESSION=3]="ZIP_COMPRESSION",f[f.PIZ_COMPRESSION=4]="PIZ_COMPRESSION",f[f.PXR24_COMPRESSION=5]="PXR24_COMPRESSION"}(u||(u={})),function(f){f[f.INCREASING_Y=0]="INCREASING_Y",f[f.DECREASING_Y=1]="DECREASING_Y"}(h||(h={}));const X=function(){const f=new ArrayBuffer(4),z=new Float32Array(f),w=new Uint32Array(f),S=new Uint32Array(512),C=new Uint32Array(512);for(let x=0;x<256;++x){const f=x-127;f<-27?(S[x]=0,S[256|x]=32768,C[x]=24,C[256|x]=24):f<-14?(S[x]=1024>>-f-14,S[256|x]=1024>>-f-14|32768,C[x]=-f-1,C[256|x]=-f-1):f<=15?(S[x]=f+15<<10,S[256|x]=f+15<<10|32768,C[x]=13,C[256|x]=13):f<128?(S[x]=31744,S[256|x]=64512,C[x]=24,C[256|x]=24):(S[x]=31744,S[256|x]=64512,C[x]=13,C[256|x]=13)}const E=new Uint32Array(2048),F=new Uint32Array(64),J=new Uint32Array(64);for(let x=1;x<1024;++x){let f=x<<13,z=0;for(;0===(8388608&f);)f<<=1,z-=8388608;f&=-8388609,z+=947912704,E[x]=f|z}for(let x=1024;x<2048;++x)E[x]=939524096+(x-1024<<13);for(let x=1;x<31;++x)F[x]=x<<23;F[31]=1199570944,F[32]=2147483648;for(let x=33;x<63;++x)F[x]=2147483648+(x-32<<23);F[63]=3347054592;for(let x=1;x<64;++x)32!==x&&(J[x]=1024);return{floatView:z,uint32View:w,baseTable:S,shiftTable:C,mantissaTable:E,exponentTable:F,offsetTable:J}}();function K(f,z){const w=new Uint8Array(f);let S=0;for(;0!=w[z.value+S];)S+=1;const C=(new TextDecoder).decode(w.slice(z.value,z.value+S));return z.value=z.value+S+1,C}function c(f,z){const w=f.getInt32(z.value,!0);return z.value+=4,w}function y(f,z){const w=f.getUint32(z.value,!0);return z.value+=4,w}function e(f,z){const w=f.getUint8(z.value);return z.value+=1,w}function O(f,z){const w=f.getUint16(z.value,!0);return z.value+=2,w}function d(f,z){const w=f[z.value];return z.value+=1,w}function B(f,z){let w;return w="getBigInt64"in DataView.prototype?Number(f.getBigInt64(z.value,!0)):f.getUint32(z.value+4,!0)+Number(f.getUint32(z.value,!0)<<32),z.value+=8,w}function V(f,z){const w=f.getFloat32(z.value,!0);return z.value+=4,w}function W(f,z){return function(f){const z=(31744&f)>>10,w=1023&f;return(f>>15?-1:1)*(z?31===z?w?NaN:1/0:Math.pow(2,z-15)*(1+w/1024):w/1024*6103515625e-14)}(O(f,z))}function T(f,z){return function(f){if(Math.abs(f)>65504)throw new Error("Value out of range.Consider using float instead of half-float.");f=(0,C.c)(f,-65504,65504),X.floatView[0]=f;const z=X.uint32View[0],w=z>>23&511;return X.baseTable[w]+((8388607&z)>>X.shiftTable[w])}(V(f,z))}function v(f,z,w,S){switch(w){case"string":case"stringvector":case"iccProfile":return function(f,z,w){const S=(new TextDecoder).decode(new Uint8Array(f).slice(z.value,z.value+w));return z.value=z.value+w,S}(f.buffer,z,S);case"chlist":return function(f,z,w){const S=z.value,C=[];for(;z.value<S+w-1;){const w=K(f.buffer,z),S=c(f,z),E=e(f,z);z.value+=3;const F=c(f,z),J=c(f,z);C.push({name:w,pixelType:S,pLinear:E,xSampling:F,ySampling:J})}return z.value+=1,C}(f,z,S);case"chromaticities":return function(f,z){return{redX:V(f,z),redY:V(f,z),greenX:V(f,z),greenY:V(f,z),blueX:V(f,z),blueY:V(f,z),whiteX:V(f,z),whiteY:V(f,z)}}(f,z);case"compression":return function(f,z){return e(f,z)}(f,z);case"box2i":return function(f,z){return{xMin:c(f,z),yMin:c(f,z),xMax:c(f,z),yMax:c(f,z)}}(f,z);case"lineOrder":return function(f,z){const w=e(f,z);return h[w]}(f,z);case"float":return V(f,z);case"v2f":return function(f,z){return[V(f,z),V(f,z)]}(f,z);case"v3f":return function(f,z){return[V(f,z),V(f,z),V(f,z)]}(f,z);case"int":return c(f,z);case"rational":return function(f,z){return[c(f,z),y(f,z)]}(f,z);case"timecode":return function(f,z){return[y(f,z),y(f,z)]}(f,z);case"preview":return z.value+=S,"skipped";default:return void(z.value+=S)}}function D(f){for(let z=1;z<f.length;z++){const w=f[z-1]+f[z]-128;f[z]=w}}function A(f,z){let w=0,S=Math.floor((f.length+1)/2),C=0;const E=f.length-1;for(;!(C>E)&&(z[C++]=f[w++],!(C>E));)z[C++]=f[S++]}function M(f,z,w,S,C){for(;w<f;)z=z<<8|d(S,C),w+=8;return{l:z>>(w-=f)&(1<<f)-1,c:z,lc:w}}function G(f,z,w,S){return{c:f=f<<8|d(w,S),lc:z+=8}}function I(f,z,w,S,C,E,F,J,x){if(f==z){if(S<8){const f=G(w,S,C,E);w=f.c,S=f.lc}let f=w>>(S-=8);if(f=new Uint8Array([f])[0],J.value+f>x)return null;const z=F[J.value-1];for(;f-- >0;)F[J.value++]=z}else{if(!(J.value<x))return null;F[J.value++]=f}return{c:w,lc:S}}const n=new Array(59);function P(f,z,w,S,C,E){const F=z;let x=0,u=0;for(;S<=C;S++){if(F.value-z.value>w)return;let J=M(6,x,u,f,F);const h=J.l;if(x=J.c,u=J.lc,E[S]=h,63==h){if(F.value-z.value>w)throw new Error("Error in HufUnpackEncTable");J=M(8,x,u,f,F);let h=J.l+6;if(x=J.c,u=J.lc,S+h>C+1)throw new Error("Error in HufUnpackEncTable");for(;h--;)E[S++]=0;S--}else if(h>=59){let f=h-59+2;if(S+f>C+1)throw new Error("Error in HufUnpackEncTable");for(;f--;)E[S++]=0;S--}}!function(f){for(let w=0;w<=58;++w)n[w]=0;for(let w=0;w<J;++w)n[f[w]]+=1;let z=0;for(let w=58;w>0;--w){const f=z+n[w]>>1;n[w]=z,z=f}for(let w=0;w<J;++w){const z=f[w];z>0&&(f[w]=z|n[z]++<<6)}}(E)}function R(f){return 63&f}function q(f){return f>>6}function a(f,z,w,S,C,E){const u=w.value,h=y(z,w),X=y(z,w);w.value+=4;const K=y(z,w);if(w.value+=4,h<0||h>=J||X<0||X>=J)throw new Error("Wrong HUF_ENCSIZE");const c=new Array(J),e=new Array(x);!function(f){for(let z=0;z<x;z++)f[z]={},f[z].len=0,f[z].lit=0,f[z].p=null}(e);if(P(f,w,S-(w.value-u),h,X,c),K>8*(S-(w.value-u)))throw new Error("Wrong hufUncompress");!function(f,z,w,S){for(;z<=w;z++){const w=q(f[z]),C=R(f[z]);if(w>>C)throw new Error("Invalid table entry");if(C>F){const f=S[w>>C-F];if(f.len)throw new Error("Invalid table entry");if(f.lit++,f.p){const z=f.p;f.p=new Array(f.lit);for(let w=0;w<f.lit-1;++w)f.p[w]=z[w]}else f.p=new Array(1);f.p[f.lit-1]=z}else if(C){let f=0;for(let E=1<<F-C;E>0;E--){const E=S[(w<<F-C)+f];if(E.len||E.p)throw new Error("Invalid table entry");E.len=C,E.lit=z,f++}}}}(c,h,X,e),function(f,z,w,S,C,E,J,x,u){let h=0,X=0;const K=J,c=Math.trunc(S.value+(C+7)/8);for(;S.value<c;){let C=G(h,X,w,S);for(h=C.c,X=C.lc;X>=F;){const J=z[h>>X-F&16383];if(J.len){X-=J.len;const f=I(J.lit,E,h,X,w,S,x,u,K);f&&(h=f.c,X=f.lc)}else{if(!J.p)throw new Error("hufDecode issues");let z;for(z=0;z<J.lit;z++){const F=R(f[J.p[z]]);for(;X<F&&S.value<c;)C=G(h,X,w,S),h=C.c,X=C.lc;if(X>=F&&q(f[J.p[z]])==(h>>X-F&(1<<F)-1)){X-=F;const f=I(J.p[z],E,h,X,w,S,x,u,K);f&&(h=f.c,X=f.lc);break}}if(z==J.lit)throw new Error("HufDecode issues")}}}const y=8-C&7;for(h>>=y,X-=y;X>0;){const f=z[h<<F-X&16383];if(!f.len)throw new Error("HufDecode issues");{X-=f.len;const z=I(f.lit,E,h,X,w,S,x,u,K);z&&(h=z.c,X=z.lc)}}}(c,e,f,w,K,X,E,C,{value:0})}function s(f){return 65535&f}function H(f){const z=s(f);return z>32767?z-65536:z}function L(f,z){const w=H(f),S=H(z),C=w+(1&S)+(S>>1);return{a:C,b:C-S}}function U(f,z){const w=s(f),S=s(z),C=w-(S>>1)&65535;return{a:S+C-32768&65535,b:C}}function i(f,z,w,S,C,E,F){const J=F<16384,x=w>C?C:w;let u,h,X=1;for(;X<=x;)X<<=1;for(X>>=1,u=X,X>>=1;X>=1;){h=0;const F=h+E*(C-u),x=E*X,K=E*u,c=S*X,y=S*u;let e,O,d,B;for(;h<=F;h+=K){let C=h;const E=h+S*(w-u);for(;C<=E;C+=y){const w=C+c,S=C+x,E=S+c;if(J){let F=L(f[C+z],f[S+z]);e=F.a,d=F.b,F=L(f[w+z],f[E+z]),O=F.a,B=F.b,F=L(e,O),f[C+z]=F.a,f[w+z]=F.b,F=L(d,B),f[S+z]=F.a,f[E+z]=F.b}else{let F=U(f[C+z],f[S+z]);e=F.a,d=F.b,F=U(f[w+z],f[E+z]),O=F.a,B=F.b,F=U(e,O),f[C+z]=F.a,f[w+z]=F.b,F=U(d,B),f[S+z]=F.a,f[E+z]=F.b}}if(w&X){const w=C+x;let S;S=J?L(f[C+z],f[w+z]):U(f[C+z],f[w+z]),e=S.a,f[w+z]=S.b,f[C+z]=e}}if(C&X){let C=h;const E=h+S*(w-u);for(;C<=E;C+=y){const w=C+c;let S;S=J?L(f[C+z],f[w+z]):U(f[C+z],f[w+z]),e=S.a,f[w+z]=S.b,f[C+z]=e}}u=X,X>>=1}return h}function m(f){return new DataView(f.array.buffer,f.offset.value,f.size)}function r(f){const z=f.viewer.buffer.slice(f.offset.value,f.offset.value+f.size),w=new Uint8Array(function(f){let z=f.byteLength;const w=new Array;let S=0;const C=new DataView(f);for(;z>0;){const f=C.getInt8(S++);if(f<0){const E=-f;z-=E+1;for(let f=0;f<E;f++)w.push(C.getUint8(S++))}else{const E=f;z-=2;const F=C.getUint8(S++);for(let f=0;f<E+1;f++)w.push(F)}}return w}(z)),S=new Uint8Array(w.length);return D(w),A(w,S),new DataView(S.buffer)}function o(f){const z=f.array.slice(f.offset.value,f.offset.value+f.size),w=fflate.unzlibSync(z),S=new Uint8Array(w.length);return D(w),A(w,S),new DataView(S.buffer)}function p(f){const z=f.array.slice(f.offset.value,f.offset.value+f.size),w=fflate.unzlibSync(z),S=f.lines*f.channels*f.width,C=1==f.type?new Uint16Array(S):new Uint32Array(S);let E=0,F=0;const J=new Array(4);for(let x=0;x<f.lines;x++)for(let z=0;z<f.channels;z++){let z=0;switch(f.type){case 1:J[0]=E,J[1]=J[0]+f.width,E=J[1]+f.width;for(let S=0;S<f.width;++S){z+=w[J[0]++]<<8|w[J[1]++],C[F]=z,F++}break;case 2:J[0]=E,J[1]=J[0]+f.width,J[2]=J[1]+f.width,E=J[2]+f.width;for(let S=0;S<f.width;++S){z+=w[J[0]++]<<24|w[J[1]++]<<16|w[J[2]++]<<8,C[F]=z,F++}}}return new DataView(C.buffer)}function Y(f){const z=f.viewer,w={value:f.offset.value},S=new Uint16Array(f.width*f.scanlineBlockSize*(f.channels*f.type)),C=new Uint8Array(8192);let F=0;const J=new Array(f.channels);for(let E=0;E<f.channels;E++)J[E]={},J[E].start=F,J[E].end=J[E].start,J[E].nx=f.width,J[E].ny=f.lines,J[E].size=f.type,F+=J[E].nx*J[E].ny*J[E].size;const x=O(z,w),u=O(z,w);if(u>=8192)throw new Error("Wrong PIZ_COMPRESSION BITMAP_SIZE");if(x<=u)for(let E=0;E<u-x+1;E++)C[E+x]=e(z,w);const h=new Uint16Array(E),X=function(f,z){let w=0;for(let C=0;C<E;++C)(0==C||f[C>>3]&1<<(7&C))&&(z[w++]=C);const S=w-1;for(;w<E;)z[w++]=0;return S}(C,h),K=y(z,w);a(f.array,z,w,K,S,F);for(let E=0;E<f.channels;++E){const f=J[E];for(let z=0;z<J[E].size;++z)i(S,f.start+z,f.nx,f.size,f.ny,f.nx*f.size,X)}!function(f,z,w){for(let S=0;S<w;++S)z[S]=f[z[S]]}(h,S,F);let c=0;const d=new Uint8Array(S.buffer.byteLength);for(let E=0;E<f.lines;E++)for(let z=0;z<f.channels;z++){const f=J[z],w=f.nx*f.size,C=new Uint8Array(S.buffer,2*f.end,2*w);d.set(C,c),c+=2*w,f.end+=w}return new DataView(d.buffer)}var t,Z=w(535);!function(f){f[f.Float=0]="Float",f[f.HalfFloat=1]="HalfFloat"}(t||(t={}));class b{}b.DefaultOutputType=t.HalfFloat,b.FFLATEUrl="https://unpkg.com/fflate@0.8.2";class Q{constructor(){this.supportCascades=!1}loadCubeData(f,z,w,S,C){throw".exr not supported in Cube."}async loadData(f,z,w){const C=new DataView(f.buffer),E={value:0},F=function(f,z){if(20000630!=f.getUint32(0,!0))throw new Error("Incorrect OpenEXR format");const w=f.getUint8(4),C=f.getUint8(5),E={singleTile:!!(2&C),longName:!!(4&C),deepFormat:!!(8&C),multiPart:!!(16&C)};z.value=8;const F={};let J=!0;for(;J;){const w=K(f.buffer,z);if(w){const C=K(f.buffer,z),E=v(f,z,C,y(f,z));void 0===E?S.b.Warn(`Unknown header attribute type ${C}'.`):F[w]=E}else J=!1}if(0!=(-5&C))throw new Error("Unsupported file format");return{version:w,spec:E,...F}}(C,E),J=await async function(f,z,w,S){const C={size:0,viewer:z,array:new Uint8Array(z.buffer),offset:w,width:f.dataWindow.xMax-f.dataWindow.xMin+1,height:f.dataWindow.yMax-f.dataWindow.yMin+1,channels:f.channels.length,channelLineOffsets:{},scanOrder:()=>0,bytesPerLine:0,outLineWidth:0,lines:0,scanlineBlockSize:0,inputSize:null,type:0,uncompress:null,getter:()=>0,format:5,outputChannels:0,decodeChannels:{},blockCount:null,byteArray:null,linearSpace:!1,textureType:0};switch(f.compression){case u.NO_COMPRESSION:C.lines=1,C.uncompress=m;break;case u.RLE_COMPRESSION:C.lines=1,C.uncompress=r;break;case u.ZIPS_COMPRESSION:C.lines=1,C.uncompress=o,await Z.h.LoadScriptAsync(b.FFLATEUrl);break;case u.ZIP_COMPRESSION:C.lines=16,C.uncompress=o,await Z.h.LoadScriptAsync(b.FFLATEUrl);break;case u.PIZ_COMPRESSION:C.lines=32,C.uncompress=Y;break;case u.PXR24_COMPRESSION:C.lines=16,C.uncompress=p,await Z.h.LoadScriptAsync(b.FFLATEUrl);break;default:throw new Error(u[f.compression]+" is unsupported")}C.scanlineBlockSize=C.lines;const E={};for(const u of f.channels)switch(u.name){case"Y":case"R":case"G":case"B":case"A":E[u.name]=!0,C.type=u.pixelType}let F=!1;if(E.R&&E.G&&E.B)F=!E.A,C.outputChannels=4,C.decodeChannels={R:0,G:1,B:2,A:3};else{if(!E.Y)throw new Error("EXRLoader.parse: file contains unsupported data channels.");C.outputChannels=1,C.decodeChannels={Y:0}}if(1===C.type)switch(S){case t.Float:C.getter=W,C.inputSize=2;break;case t.HalfFloat:C.getter=O,C.inputSize=2}else{if(2!==C.type)throw new Error("Unsupported pixelType "+C.type+" for "+f.compression);switch(S){case t.Float:C.getter=V,C.inputSize=4;break;case t.HalfFloat:C.getter=T,C.inputSize=4}}C.blockCount=C.height/C.scanlineBlockSize;for(let u=0;u<C.blockCount;u++)B(z,w);const J=C.width*C.height*C.outputChannels;switch(S){case t.Float:C.byteArray=new Float32Array(J),C.textureType=1,F&&C.byteArray.fill(1,0,J);break;case t.HalfFloat:C.byteArray=new Uint16Array(J),C.textureType=2,F&&C.byteArray.fill(15360,0,J);break;default:throw new Error("Unsupported type: "+S)}let x=0;for(const u of f.channels)void 0!==C.decodeChannels[u.name]&&(C.channelLineOffsets[u.name]=x*C.width),x+=2*u.pixelType;return C.bytesPerLine=C.width*x,C.outLineWidth=C.width*C.outputChannels,"INCREASING_Y"===f.lineOrder?C.scanOrder=f=>f:C.scanOrder=f=>C.height-1-f,4==C.outputChannels?(C.format=5,C.linearSpace=!0):(C.format=6,C.linearSpace=!1),C}(F,C,E,b.DefaultOutputType);!function(f,z,w,S){const C={value:0};for(let E=0;E<f.height/f.scanlineBlockSize;E++){const F=c(w,S)-z.dataWindow.yMin;f.size=y(w,S),f.lines=F+f.scanlineBlockSize>f.height?f.height-F:f.scanlineBlockSize;const J=f.size<f.lines*f.bytesPerLine&&f.uncompress?f.uncompress(f):m(f);S.value+=f.size;for(let w=0;w<f.scanlineBlockSize;w++){const S=E*f.scanlineBlockSize,F=w+f.scanOrder(S);if(F>=f.height)continue;const x=w*f.bytesPerLine,u=(f.height-1-F)*f.outLineWidth;for(let w=0;w<f.channels;w++){const S=z.channels[w].name,E=f.channelLineOffsets[S],F=f.decodeChannels[S];if(void 0!==F){C.value=x+E;for(let z=0;z<f.width;z++){const w=u+z*f.outputChannels+F;f.byteArray&&(f.byteArray[w]=f.getter(J,C))}}}}}}(J,F,C,E);w(F.dataWindow.xMax-F.dataWindow.xMin+1,F.dataWindow.yMax-F.dataWindow.yMin+1,z.generateMipMaps,!1,(()=>{const f=z.getEngine();z.format=F.format,z.type=J.textureType,z.invertY=!1,z._gammaSpace=!F.linearSpace,J.byteArray&&f._uploadDataToTextureDirectly(z,J.byteArray,0,0,void 0,!0)}))}}}}]);