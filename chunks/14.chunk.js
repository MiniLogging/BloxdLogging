"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[14],{2517:(R,x,H)=>{H.r(x),H.d(x,{_KTXTextureLoader:()=>I});var k=H(493);class c{constructor(R,x){if(this.data=R,this.isInvalid=!1,!c.IsValid(R))return this.isInvalid=!0,void k.c.Error("texture missing KTX identifier");const H=Uint32Array.BYTES_PER_ELEMENT,t=new DataView(this.data.buffer,this.data.byteOffset+12,13*H),A=67305985===t.getUint32(0,!0);return this.glType=t.getUint32(1*H,A),this.glTypeSize=t.getUint32(2*H,A),this.glFormat=t.getUint32(3*H,A),this.glInternalFormat=t.getUint32(4*H,A),this.glBaseInternalFormat=t.getUint32(5*H,A),this.pixelWidth=t.getUint32(6*H,A),this.pixelHeight=t.getUint32(7*H,A),this.pixelDepth=t.getUint32(8*H,A),this.numberOfArrayElements=t.getUint32(9*H,A),this.numberOfFaces=t.getUint32(10*H,A),this.numberOfMipmapLevels=t.getUint32(11*H,A),this.bytesOfKeyValueData=t.getUint32(12*H,A),0!==this.glType?(k.c.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(k.c.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(k.c.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==x?(k.c.Error("number of faces expected"+x+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=c.COMPRESSED_2D))}uploadLevels(R,x){switch(this.loadType){case c.COMPRESSED_2D:this._upload2DCompressedLevels(R,x);case c.TEX_2D:case c.COMPRESSED_3D:case c.TEX_3D:}}_upload2DCompressedLevels(R,x){let H=c.HEADER_LEN+this.bytesOfKeyValueData,k=this.pixelWidth,t=this.pixelHeight;const A=x?this.numberOfMipmapLevels:1;for(let c=0;c<A;c++){const x=new Int32Array(this.data.buffer,this.data.byteOffset+H,1)[0];H+=4;for(let A=0;A<this.numberOfFaces;A++){const D=new Uint8Array(this.data.buffer,this.data.byteOffset+H,x);R.getEngine()._uploadCompressedDataToTextureDirectly(R,R.format,k,t,D,A,c),H+=x,H+=3-(x+3)%4}k=Math.max(1,.5*k),t=Math.max(1,.5*t)}}static IsValid(R){if(R.byteLength>=12){const x=new Uint8Array(R.buffer,R.byteOffset,12);if(171===x[0]&&75===x[1]&&84===x[2]&&88===x[3]&&32===x[4]&&49===x[5]&&49===x[6]&&187===x[7]&&13===x[8]&&10===x[9]&&26===x[10]&&10===x[11])return!0}return!1}}c.HEADER_LEN=64,c.COMPRESSED_2D=0,c.COMPRESSED_3D=1,c.TEX_2D=2,c.TEX_3D=3;var t,A,D,U=H(2523),J=H(485);function V(R,x){const H=(null===x||void 0===x?void 0:x.jsDecoderModule)||KTX2DECODER;R&&(R.wasmUASTCToASTC&&(H.LiteTranscoder_UASTC_ASTC.WasmModuleURL=R.wasmUASTCToASTC),R.wasmUASTCToBC7&&(H.LiteTranscoder_UASTC_BC7.WasmModuleURL=R.wasmUASTCToBC7),R.wasmUASTCToRGBA_UNORM&&(H.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=R.wasmUASTCToRGBA_UNORM),R.wasmUASTCToRGBA_SRGB&&(H.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=R.wasmUASTCToRGBA_SRGB),R.wasmUASTCToR8_UNORM&&(H.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=R.wasmUASTCToR8_UNORM),R.wasmUASTCToRG8_UNORM&&(H.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=R.wasmUASTCToRG8_UNORM),R.jsMSCTranscoder&&(H.MSCTranscoder.JSModuleURL=R.jsMSCTranscoder),R.wasmMSCTranscoder&&(H.MSCTranscoder.WasmModuleURL=R.wasmMSCTranscoder),R.wasmZSTDDecoder&&(H.ZSTDDecoder.WasmModuleURL=R.wasmZSTDDecoder)),x&&(x.wasmUASTCToASTC&&(H.LiteTranscoder_UASTC_ASTC.WasmBinary=x.wasmUASTCToASTC),x.wasmUASTCToBC7&&(H.LiteTranscoder_UASTC_BC7.WasmBinary=x.wasmUASTCToBC7),x.wasmUASTCToRGBA_UNORM&&(H.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=x.wasmUASTCToRGBA_UNORM),x.wasmUASTCToRGBA_SRGB&&(H.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=x.wasmUASTCToRGBA_SRGB),x.wasmUASTCToR8_UNORM&&(H.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=x.wasmUASTCToR8_UNORM),x.wasmUASTCToRG8_UNORM&&(H.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=x.wasmUASTCToRG8_UNORM),x.jsMSCTranscoder&&(H.MSCTranscoder.JSModule=x.jsMSCTranscoder),x.wasmMSCTranscoder&&(H.MSCTranscoder.WasmBinary=x.wasmMSCTranscoder),x.wasmZSTDDecoder&&(H.ZSTDDecoder.WasmBinary=x.wasmZSTDDecoder))}function n(R){let x;"undefined"===typeof R&&"undefined"!==typeof KTX2DECODER&&(R=KTX2DECODER),onmessage=H=>{if(H.data)switch(H.data.action){case"init":{const k=H.data.urls;k&&(k.jsDecoderModule&&"undefined"===typeof R&&(importScripts(k.jsDecoderModule),R=KTX2DECODER),V(k)),H.data.wasmBinaries&&V(void 0,{...H.data.wasmBinaries,jsDecoderModule:R}),x=new R.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":R.KTX2Decoder.DefaultDecoderOptions=H.data.options;break;case"decode":x.decode(H.data.data,H.data.caps,H.data.options).then((R=>{const x=[];for(let H=0;H<R.mipmaps.length;++H){const k=R.mipmaps[H];k&&k.data&&x.push(k.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:R},x)})).catch((R=>{postMessage({action:"decoded",success:!1,msg:R})}))}}}!function(R){R[R.ETC1S=0]="ETC1S",R[R.UASTC4x4=1]="UASTC4x4"}(t||(t={})),function(R){R[R.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",R[R.BC7_RGBA=1]="BC7_RGBA",R[R.BC3_RGBA=2]="BC3_RGBA",R[R.BC1_RGB=3]="BC1_RGB",R[R.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",R[R.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",R[R.ETC2_RGBA=6]="ETC2_RGBA",R[R.ETC1_RGB=7]="ETC1_RGB",R[R.RGBA32=8]="RGBA32",R[R.R8=9]="R8",R[R.RG8=10]="RG8"}(A||(A={})),function(R){R[R.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",R[R.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",R[R.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",R[R.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",R[R.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",R[R.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",R[R.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",R[R.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",R[R.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",R[R.RGBA8Format=32856]="RGBA8Format",R[R.R8Format=33321]="R8Format",R[R.RG8Format=33323]="RG8Format"}(D||(D={}));class g{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(R){if(g._WorkerPoolPromise||g._DecoderModulePromise)return;const x={jsDecoderModule:J.e.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:J.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:J.e.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:J.e.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:J.e.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};R&&"function"===typeof Worker&&"undefined"!==typeof URL?g._WorkerPoolPromise=new Promise((H=>{const k=`${V}(${n})()`,c=URL.createObjectURL(new Blob([k],{type:"application/javascript"}));H(new U.e(R,(async()=>await async function(R,x,H){return await new Promise(((k,c)=>{const t=x=>{R.removeEventListener("error",t),R.removeEventListener("message",A),c(x)},A=x=>{"init"===x.data.action&&(R.removeEventListener("error",t),R.removeEventListener("message",A),k(R))};R.addEventListener("error",t),R.addEventListener("message",A),R.postMessage({action:"init",urls:H,wasmBinaries:x})}))}(new Worker(c),void 0,x))))})):"undefined"===typeof g._KTX2DecoderModule?g._DecoderModulePromise=J.e.LoadBabylonScriptAsync(x.jsDecoderModule).then((()=>(g._KTX2DecoderModule=KTX2DECODER,g._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,g._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,V(x,g._KTX2DecoderModule),new g._KTX2DecoderModule.KTX2Decoder))):(g._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,g._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,g._DecoderModulePromise=Promise.resolve(new g._KTX2DecoderModule.KTX2Decoder))}constructor(R){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g.DefaultNumWorkers;this._engine=R;const H="object"===typeof x&&x.workerPool||g.WorkerPool;if(H)g._WorkerPoolPromise=Promise.resolve(H);else{var k;if("object"===typeof x)g._KTX2DecoderModule=null===x||void 0===x||null===(k=x.binariesAndModulesContainer)||void 0===k?void 0:k.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(g._KTX2DecoderModule=KTX2DECODER);const R="number"===typeof x?x:x.numWorkers??g.DefaultNumWorkers;g._Initialize(R)}}async _uploadAsync(R,x,H){const k=this._engine.getCaps(),c={astc:!!k.astc,bptc:!!k.bptc,s3tc:!!k.s3tc,pvrtc:!!k.pvrtc,etc2:!!k.etc2,etc1:!!k.etc1};if(g._WorkerPoolPromise){const k=await g._WorkerPoolPromise;return await new Promise(((t,A)=>{k.push(((k,D)=>{const U=R=>{k.removeEventListener("error",U),k.removeEventListener("message",J),A(R),D()},J=R=>{if("decoded"===R.data.action){if(k.removeEventListener("error",U),k.removeEventListener("message",J),R.data.success)try{this._createTexture(R.data.decodedData,x,H),t()}catch(c){A({message:c})}else A({message:R.data.msg});D()}};k.addEventListener("error",U),k.addEventListener("message",J),k.postMessage({action:"setDefaultDecoderOptions",options:g.DefaultDecoderOptions._getKTX2DecoderOptions()});const V=new Uint8Array(R.byteLength);V.set(new Uint8Array(R.buffer,R.byteOffset,R.byteLength)),k.postMessage({action:"decode",data:V,caps:c,options:H},[V.buffer])}))}))}if(g._DecoderModulePromise){const H=await g._DecoderModulePromise;return g.DefaultDecoderOptions.isDirty&&(g._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=g.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((c,t)=>{H.decode(R,k).then((R=>{this._createTexture(R,x),c()})).catch((R=>{t({message:R})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(R,x,H){this._engine._bindTextureDirectly(3553,x),H&&(H.transcodedFormat=R.transcodedFormat,H.isInGammaSpace=R.isInGammaSpace,H.Qj=R.Qj,H.transcoderName=R.transcoderName);let k=!0;switch(R.transcodedFormat){case 32856:x.type=0,x.format=5;break;case 33321:x.type=0,x.format=6;break;case 33323:x.type=0,x.format=7;break;default:x.format=R.transcodedFormat,k=!1}if(x._gammaSpace=R.isInGammaSpace,x.generateMipMaps=R.mipmaps.length>1,R.errors)throw new Error("KTX2 container - could not transcode the data. "+R.errors);for(let c=0;c<R.mipmaps.length;++c){const H=R.mipmaps[c];if(!H||!H.data)throw new Error("KTX2 container - could not transcode one of the image");k?(x.width=H.width,x.height=H.height,this._engine._uploadDataToTextureDirectly(x,H.data,0,c,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(x,R.transcodedFormat,H.width,H.height,H.data,0,c)}x._extension=".ktx2",x.width=R.mipmaps[0].width,x.height=R.mipmaps[0].height,x.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(R){if(R.byteLength>=12){const x=new Uint8Array(R.buffer,R.byteOffset,12);if(171===x[0]&&75===x[1]&&84===x[2]&&88===x[3]&&32===x[4]&&50===x[5]&&48===x[6]&&187===x[7]&&13===x[8]&&10===x[9]&&26===x[10]&&10===x[11])return!0}return!1}}g.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},g.DefaultNumWorkers=g.GetDefaultNumWorkers(),g.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(R){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==R&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=R,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(R){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==R&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=R,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(R){this._forceRGBA!==R&&(this._forceRGBA=R,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(R){this._forceR8!==R&&(this._forceR8=R,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(R){this._forceRG8!==R&&(this._forceRG8=R,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(R){this._bypassTranscoders!==R&&(this._bypassTranscoders=R,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const R={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(R.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[A.BC1_RGB,A.BC3_RGBA],yes:{transcodeFormat:A.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=R,R}};class I{constructor(){this.supportCascades=!1}loadCubeData(R,x,H,k){if(Array.isArray(R))return;x._invertVScale=!x.invertY;const t=x.getEngine(),A=new c(R,6),D=A.numberOfMipmapLevels>1&&x.generateMipMaps;t._unpackFlipY(!0),A.uploadLevels(x,x.generateMipMaps),x.width=A.pixelWidth,x.height=A.pixelHeight,t._setCubeMapTextureParams(x,D,A.numberOfMipmapLevels-1),x.isReady=!0,x.onLoadedObservable.notifyObservers(x),x.onLoadedObservable.clear(),k&&k()}loadData(R,x,H,t){if(c.IsValid(R)){x._invertVScale=!x.invertY;const k=new c(R,1),t=function(R){switch(R){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(k.glInternalFormat);t?(x.format=t,x._useSRGBBuffer=x.getEngine()._getUseSRGBBuffer(!0,x.generateMipMaps),x._gammaSpace=!0):x.format=k.glInternalFormat,H(k.pixelWidth,k.pixelHeight,x.generateMipMaps,!0,(()=>{k.uploadLevels(x,x.generateMipMaps)}),k.isInvalid)}else if(g.IsValid(R)){new g(x.getEngine())._uploadAsync(R,x,t).then((()=>{H(x.width,x.height,x.generateMipMaps,!0,(()=>{}),!1)}),(R=>{k.c.Warn(`Failed to load KTX2 texture data: ${R.message}`),H(0,0,!1,!1,(()=>{}),!0)}))}else k.c.Error("texture missing KTX identifier"),H(0,0,!1,!1,(()=>{}),!0)}}},2523:(R,x,H)=>{H.d(x,{e:()=>c});class k{constructor(R){this._pendingActions=new Array,this._workerInfos=R.map((R=>({workerPromise:Promise.resolve(R),idle:!0})))}dispose(){for(const R of this._workerInfos)R.workerPromise.then((R=>{R.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(R){this._executeOnIdleWorker(R)||this._pendingActions.push(R)}_executeOnIdleWorker(R){for(const x of this._workerInfos)if(x.idle)return this._execute(x,R),!0;return!1}_execute(R,x){R.idle=!1,R.workerPromise.then((H=>{x(H,(()=>{const x=this._pendingActions.shift();x?this._execute(R,x):R.idle=!0}))}))}}class c extends k{constructor(R,x){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c.DefaultOptions;super([]),this._maxWorkers=R,this._createWorkerAsync=x,this._options=H}push(R){if(!this._executeOnIdleWorker(R))if(this._workerInfos.length<this._maxWorkers){const x={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(x),this._execute(x,R)}else this._pendingActions.push(R)}_execute(R,x){R.timeoutId&&(clearTimeout(R.timeoutId),delete R.timeoutId),super._execute(R,((H,k)=>{x(H,(()=>{k(),R.idle&&(R.timeoutId=setTimeout((()=>{R.workerPromise.then((R=>{R.terminate()}));const x=this._workerInfos.indexOf(R);-1!==x&&this._workerInfos.splice(x,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}c.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);