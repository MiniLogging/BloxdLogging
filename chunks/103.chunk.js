"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14480:(P,f,Y)=>{Y.r(f),Y.d(f,{FlowGraphForLoopBlock:()=>w});var C=Y(12974),q=Y(12917),m=Y(11134),L=Y(12960),o=Y(12908);class w extends C.d{constructor(P){super(P),this.startIndex=this.registerDataInput("startIndex",q.d,0),this.endIndex=this.registerDataInput("endIndex",q.d),this.step=this.registerDataInput("step",q.o,1),this.index=this.registerDataOutput("index",q.f,new o.c((0,L.o)((null===P||void 0===P?void 0:P.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(P){var f;const Y=(0,L.o)(this.startIndex.getValue(P)),C=this.step.getValue(P);let q=(0,L.o)(this.endIndex.getValue(P));for(let m=Y;m<q&&(this.index.setValue(new o.c(m),P),this.executionFlow._activateSignal(P),q=(0,L.o)(this.endIndex.getValue(P)),!(m>w.MaxLoopIterations*C));m+=C);null!==(f=this.config)&&void 0!==f&&f.incrementIndexWhenLoopDone&&this.index.setValue(new o.c((0,L.o)(this.index.getValue(P))+C),P),this.completed._activateSignal(P)}getClassName(){return"FlowGraphForLoopBlock"}}w.MaxLoopIterations=1e3,(0,m.d)("FlowGraphForLoopBlock",w)}}]);