"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[103],{16665:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphJsonPointerParserBlock:()=>l});var S=R(14516),A=R(14524);const Z=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class p{constructor(P,a){this.path=P,this.ownerBlock=a,this.templatedInputs=[];let R=Z.exec(P);const p=new Set;for(;R;){const[,j]=R;if(p.has(j))throw new Error("Duplicate template variable detected.");p.add(j),this.templatedInputs.push(a.registerDataInput(j,A.e,new S.c(0))),R=Z.exec(P)}}getAccessor(P,a){let R=this.path;for(const S of this.templatedInputs){const P=S.getValue(a).value;if("number"!==typeof P||P<0)throw new Error("Invalid value for templated input.");R=R.replace(`{${S.name}}`,P.toString())}return P.convert(R)}}var j=R(12376),U=R(12415),Q=R(12456),h=R(16515);class l extends h.d{constructor(P){super(A.c,P),this.config=P,this.object=this.registerDataOutput("object",A.c),this.propertyName=this.registerDataOutput("propertyName",A.c),this.setterFunction=this.registerDataOutput("setFunction",A.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",A.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",A.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new p(P.jsonPointer,this)}_doOperation(P){var a,R,S;const A=this.templateComponent.getAccessor(this.config.pathConverter,P),Z=A.info.get(A.object),p=null===(a=(R=A.info).getTarget)||void 0===a?void 0:a.call(R,A.object),j=null===(S=A.info.getPropertyName)||void 0===S?void 0:S[0](A.object);if(!p)throw new Error("Object is undefined");return this.object.setValue(p,P),j&&this.propertyName.setValue(j,P),Z}_setPropertyValue(P,a,R,S){var A,Z;const p=this.templateComponent.getAccessor(this.config.pathConverter,S),j=p.info.type;j.startsWith("Color")&&(R=V(R,j)),null===(A=(Z=p.info).set)||void 0===A||A.call(Z,R,p.object)}_getPropertyValue(P,a,R){const S=this.templateComponent.getAccessor(this.config.pathConverter,R),A=S.info.type,Z=S.info.get(S.object);return A.startsWith("Color")?function(P){if(P instanceof Q.Wa)return new U.Oa(P.r,P.g,P.b);if(P instanceof Q.tj)return new U.Vector4(P.r,P.g,P.b,P.a);throw new Error("Invalid color type")}(Z):Z}_getInterpolationAnimationPropertyInfo(P,a,R){const S=this.templateComponent.getAccessor(this.config.pathConverter,R);return(P,a,R,A)=>{var Z;const p=[],j=S.info.type;return j.startsWith("Color")&&(P=P.map((P=>({frame:P.frame,value:V(P.value,j)})))),null===(Z=S.info.interpolation)||void 0===Z||Z.forEach(((a,Z)=>{var j;const U=(null===(j=S.info.getPropertyName)||void 0===j?void 0:j[Z](S.object))||"Animation-interpolation-"+Z;let Q=P;R!==a.type&&(Q=P.map((P=>({frame:P.frame,value:a.getValue(void 0,P.value.pj?P.value.pj():[P.value],0,1)}))));const h=a.buildAnimations(S.object,U,60,Q);for(const P of h)A&&P.babylonAnimation.setEasingFunction(A),p.push(P.babylonAnimation)})),p}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function V(P,a){return P.getClassName().startsWith("Color")?P:"Wa"===a?new Q.Wa(P.x,P.y,P.z):"tj"===a?new Q.tj(P.x,P.y,P.z,P.w):P}(0,j.d)("FlowGraphJsonPointerParserBlock",l)},16515:(P,a,R)=>{R.d(a,{d:()=>j});var S=R(14549),A=R(14524);const Z="cachedOperationValue",p="cachedExecutionId";class j extends S.e{constructor(P,a){super(a),this.value=this.registerDataOutput("value",P),this.isValid=this.registerDataOutput("isValid",A.d)}_updateOutputs(P){const a=P._getExecutionVariable(this,p,-1),R=P._getExecutionVariable(this,Z,null);if(void 0!==R&&null!==R&&a===P.executionId)this.isValid.setValue(!0,P),this.value.setValue(R,P);else try{const a=this._doOperation(P);if(void 0===a||null===a)return void this.isValid.setValue(!1,P);P._setExecutionVariable(this,Z,a),P._setExecutionVariable(this,p,P.executionId),this.value.setValue(a,P),this.isValid.setValue(!0,P)}catch(S){this.isValid.setValue(!1,P)}}}}}]);