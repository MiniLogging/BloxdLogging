"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14423:(q,S,b)=>{b.r(S),b.d(S,{FlowGraphForLoopBlock:()=>r});var z=b(12866),C=b(12839),v=b(11058),U=b(12856),g=b(12836);class r extends z.e{constructor(q){super(q),this.startIndex=this.registerDataInput("startIndex",C.d,0),this.endIndex=this.registerDataInput("endIndex",C.d),this.step=this.registerDataInput("step",C.o,1),this.index=this.registerDataOutput("index",C.h,new g.d((0,U.o)((null===q||void 0===q?void 0:q.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(q){var S;const b=(0,U.o)(this.startIndex.getValue(q)),z=this.step.getValue(q);let C=(0,U.o)(this.endIndex.getValue(q));for(let v=b;v<C&&(this.index.setValue(new g.d(v),q),this.executionFlow._activateSignal(q),C=(0,U.o)(this.endIndex.getValue(q)),!(v>r.MaxLoopIterations*z));v+=z);null!==(S=this.config)&&void 0!==S&&S.incrementIndexWhenLoopDone&&this.index.setValue(new g.d((0,U.o)(this.index.getValue(q))+z),q),this.completed._activateSignal(q)}getClassName(){return"FlowGraphForLoopBlock"}}r.MaxLoopIterations=1e3,(0,v.f)("FlowGraphForLoopBlock",r)}}]);