"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14385:(g,w,q)=>{q.r(w),q.d(w,{FlowGraphForLoopBlock:()=>T});var R=q(12879),o=q(12836),r=q(11128),S=q(12872),i=q(12828);class T extends R.c{constructor(g){super(g),this.startIndex=this.registerDataInput("startIndex",o.d,0),this.endIndex=this.registerDataInput("endIndex",o.d),this.step=this.registerDataInput("step",o.w,1),this.index=this.registerDataOutput("index",o.l,new i.b((0,S.o)((null===g||void 0===g?void 0:g.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(g){var w;const q=(0,S.o)(this.startIndex.getValue(g)),R=this.step.getValue(g);let o=(0,S.o)(this.endIndex.getValue(g));for(let r=q;r<o&&(this.index.setValue(new i.b(r),g),this.executionFlow._activateSignal(g),o=(0,S.o)(this.endIndex.getValue(g)),!(r>T.MaxLoopIterations*R));r+=R);null!==(w=this.config)&&void 0!==w&&w.incrementIndexWhenLoopDone&&this.index.setValue(new i.b((0,S.o)(this.index.getValue(g))+R),g),this.completed._activateSignal(g)}getClassName(){return"FlowGraphForLoopBlock"}}T.MaxLoopIterations=1e3,(0,r.g)("FlowGraphForLoopBlock",T)}}]);