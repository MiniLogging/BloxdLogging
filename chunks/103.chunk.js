"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14551:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphForLoopBlock:()=>d});var u=F(13007),G=F(12954),f=F(11136),Y=F(12990),j=F(12949);class d extends u.e{constructor(Z){super(Z),this.startIndex=this.registerDataInput("startIndex",G.d,0),this.endIndex=this.registerDataInput("endIndex",G.d),this.step=this.registerDataInput("step",G.u,1),this.index=this.registerDataOutput("index",G.g,new j.d((0,Y.u)((null===Z||void 0===Z?void 0:Z.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(Z){var x;const F=(0,Y.u)(this.startIndex.getValue(Z)),u=this.step.getValue(Z);let G=(0,Y.u)(this.endIndex.getValue(Z));for(let f=F;f<G&&(this.index.setValue(new j.d(f),Z),this.executionFlow._activateSignal(Z),G=(0,Y.u)(this.endIndex.getValue(Z)),!(f>d.MaxLoopIterations*u));f+=u);null!==(x=this.config)&&void 0!==x&&x.incrementIndexWhenLoopDone&&this.index.setValue(new j.d((0,Y.u)(this.index.getValue(Z))+u),Z),this.completed._activateSignal(Z)}getClassName(){return"FlowGraphForLoopBlock"}}d.MaxLoopIterations=1e3,(0,f.g)("FlowGraphForLoopBlock",d)}}]);