"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[103],{15943:(L,U,x)=>{x.r(U),x.d(U,{FlowGraphForLoopBlock:()=>o});var mL=x(14401),p=x(14348),G=x(12547),F=x(14379),a=x(14343);class o extends mL.d{constructor(L){super(L),this.startIndex=this.registerDataInput("startIndex",p.c,0),this.endIndex=this.registerDataInput("endIndex",p.c),this.step=this.registerDataInput("step",p.u,1),this.index=this.registerDataOutput("index",p.i,new a.b((0,F.s)((null===L||void 0===L?void 0:L.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(L){var U;const x=(0,F.s)(this.startIndex.getValue(L)),mL=this.step.getValue(L);let p=(0,F.s)(this.endIndex.getValue(L));for(let G=x;G<p&&(this.index.setValue(new a.b(G),L),this.executionFlow._activateSignal(L),p=(0,F.s)(this.endIndex.getValue(L)),!(G>o.MaxLoopIterations*mL));G+=mL);null!==(U=this.config)&&void 0!==U&&U.incrementIndexWhenLoopDone&&this.index.setValue(new a.b((0,F.s)(this.index.getValue(L))+mL),L),this.completed._activateSignal(L)}getClassName(){return"FlowGraphForLoopBlock"}}o.MaxLoopIterations=1e3,(0,G.d)("FlowGraphForLoopBlock",o)}}]);