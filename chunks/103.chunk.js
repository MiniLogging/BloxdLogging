"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14486:(B,I,C)=>{C.r(I),C.d(I,{FlowGraphForLoopBlock:()=>e});var M=C(12952),x=C(12901),y=C(11149),f=C(12939),L=C(12895);class e extends M.b{constructor(B){super(B),this.startIndex=this.registerDataInput("startIndex",x.b,0),this.endIndex=this.registerDataInput("endIndex",x.b),this.step=this.registerDataInput("step",x.m,1),this.index=this.registerDataOutput("index",x.f,new L.b((0,f.s)((null===B||void 0===B?void 0:B.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(B){var I;const C=(0,f.s)(this.startIndex.getValue(B)),M=this.step.getValue(B);let x=(0,f.s)(this.endIndex.getValue(B));for(let y=C;y<x&&(this.index.setValue(new L.b(y),B),this.executionFlow._activateSignal(B),x=(0,f.s)(this.endIndex.getValue(B)),!(y>e.MaxLoopIterations*M));y+=M);null!==(I=this.config)&&void 0!==I&&I.incrementIndexWhenLoopDone&&this.index.setValue(new L.b((0,f.s)(this.index.getValue(B))+M),B),this.completed._activateSignal(B)}getClassName(){return"FlowGraphForLoopBlock"}}e.MaxLoopIterations=1e3,(0,y.h)("FlowGraphForLoopBlock",e)}}]);