"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[103],{14460:(h,V,i)=>{i.r(V),i.d(V,{FlowGraphForLoopBlock:()=>B});var S=i(12861),l=i(12805),Y=i(11091),g=i(12841),q=i(12800);class B extends S.e{constructor(h){super(h),this.startIndex=this.registerDataInput("startIndex",l.c,0),this.endIndex=this.registerDataInput("endIndex",l.c),this.step=this.registerDataInput("step",l.u,1),this.index=this.registerDataOutput("index",l.i,new q.b((0,g.o)((null===h||void 0===h?void 0:h.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(h){var V;const i=(0,g.o)(this.startIndex.getValue(h)),S=this.step.getValue(h);let l=(0,g.o)(this.endIndex.getValue(h));for(let Y=i;Y<l&&(this.index.setValue(new q.b(Y),h),this.executionFlow._activateSignal(h),l=(0,g.o)(this.endIndex.getValue(h)),!(Y>B.MaxLoopIterations*S));Y+=S);null!==(V=this.config)&&void 0!==V&&V.incrementIndexWhenLoopDone&&this.index.setValue(new q.b((0,g.o)(this.index.getValue(h))+S),h),this.completed._activateSignal(h)}getClassName(){return"FlowGraphForLoopBlock"}}B.MaxLoopIterations=1e3,(0,Y.f)("FlowGraphForLoopBlock",B)}}]);