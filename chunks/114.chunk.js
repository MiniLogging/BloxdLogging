"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[114],{15877:(z,u,U)=>{U.r(u),U.d(u,{FlowGraphSetPropertyBlock:()=>g});var J=U(14248),v=U(14196),f=U(12875);class g extends J.e{constructor(z){super(z),this.config=z,this.object=this.registerDataInput("object",v.e,z.target),this.value=this.registerDataInput("value",v.e),this.propertyName=this.registerDataInput("propertyName",v.e,z.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",v.e)}_execute(z,u){try{const u=this.object.getValue(z),U=this.value.getValue(z),J=this.propertyName.getValue(z);this._stopRunningAnimations(z,u,J);const v=this.customSetFunction.getValue(z);v?v(u,J,U,z):this._setPropertyValue(u,J,U)}catch(U){this._reportError(z,U)}this.out._activateSignal(z)}_stopRunningAnimations(z,u,U){const J=z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const v of J){const f=z.assetsContext.animationGroups.find((z=>z.uniqueId===v));if(f)for(const g of f.targetedAnimations)if(g.target===u&&g.animation.targetProperty===U){f.stop(!0),f.dispose();const u=J.indexOf(v);-1!==u&&(J.splice(u,1),z._setGlobalContextVariable("currentlyRunningAnimationGroups",J))}}}_setPropertyValue(z,u,U){const J=u.split(".");let v=z;for(let f=0;f<J.length-1;f++){const z=J[f];void 0===v[z]&&(v[z]={}),v=v[z]}v[J[J.length-1]]=U}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,f.f)("FlowGraphSetPropertyBlock",g)}}]);