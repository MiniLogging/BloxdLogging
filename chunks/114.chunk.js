"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[114],{14597:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphSetPropertyBlock:()=>g});var C=Q(13e3),z=Q(12951),t=Q(11265);class g extends C.d{constructor(F){super(F),this.config=F,this.object=this.registerDataInput("object",z.b,F.target),this.value=this.registerDataInput("value",z.b),this.propertyName=this.registerDataInput("propertyName",z.b,F.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",z.b)}_execute(F,b){try{const b=this.object.getValue(F),Q=this.value.getValue(F),C=this.propertyName.getValue(F);this._stopRunningAnimations(F,b,C);const z=this.customSetFunction.getValue(F);z?z(b,C,Q,F):this._setPropertyValue(b,C,Q)}catch(Q){this._reportError(F,Q)}this.out._activateSignal(F)}_stopRunningAnimations(F,b,Q){const C=F._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const z of C){const t=F.assetsContext.animationGroups.find((F=>F.uniqueId===z));if(t)for(const g of t.targetedAnimations)if(g.target===b&&g.animation.targetProperty===Q){t.stop(!0),t.dispose();const b=C.indexOf(z);-1!==b&&(C.splice(b,1),F._setGlobalContextVariable("currentlyRunningAnimationGroups",C))}}}_setPropertyValue(F,b,Q){const C=b.split(".");let z=F;for(let t=0;t<C.length-1;t++){const F=C[t];void 0===z[F]&&(z[F]={}),z=z[F]}z[C[C.length-1]]=Q}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,t.g)("FlowGraphSetPropertyBlock",g)}}]);