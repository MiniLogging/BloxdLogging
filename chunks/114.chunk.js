"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[114],{15898:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphSetPropertyBlock:()=>M});var e=b(14320),c=b(14282),z=b(12558);class M extends e.c{constructor(I){super(I),this.config=I,this.object=this.registerDataInput("object",c.c,I.target),this.value=this.registerDataInput("value",c.c),this.propertyName=this.registerDataInput("propertyName",c.c,I.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",c.c)}_execute(I,g){try{const g=this.object.getValue(I),b=this.value.getValue(I),e=this.propertyName.getValue(I);this._stopRunningAnimations(I,g,e);const c=this.customSetFunction.getValue(I);c?c(g,e,b,I):this._setPropertyValue(g,e,b)}catch(b){this._reportError(I,b)}this.out._activateSignal(I)}_stopRunningAnimations(I,g,b){const e=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const c of e){const z=I.assetsContext.animationGroups.find((I=>I.uniqueId===c));if(z)for(const M of z.targetedAnimations)if(M.target===g&&M.animation.targetProperty===b){z.stop(!0),z.dispose();const g=e.indexOf(c);-1!==g&&(e.splice(g,1),I._setGlobalContextVariable("currentlyRunningAnimationGroups",e))}}}_setPropertyValue(I,g,b){const e=g.split(".");let c=I;for(let z=0;z<e.length-1;z++){const I=e[z];void 0===c[I]&&(c[I]={}),c=c[I]}c[e[e.length-1]]=b}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,z.g)("FlowGraphSetPropertyBlock",M)}}]);