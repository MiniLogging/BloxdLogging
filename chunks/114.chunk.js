"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[114],{14536:(k,h,o)=>{o.r(h),o.d(h,{FlowGraphSetPropertyBlock:()=>Y});var x=o(12986),I=o(12936),q=o(11199);class Y extends x.e{constructor(k){super(k),this.config=k,this.object=this.registerDataInput("object",I.d,k.target),this.value=this.registerDataInput("value",I.d),this.propertyName=this.registerDataInput("propertyName",I.d,k.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",I.d)}_execute(k,h){try{const h=this.object.getValue(k),o=this.value.getValue(k),x=this.propertyName.getValue(k);this._stopRunningAnimations(k,h,x);const I=this.customSetFunction.getValue(k);I?I(h,x,o,k):this._setPropertyValue(h,x,o)}catch(o){this._reportError(k,o)}this.out._activateSignal(k)}_stopRunningAnimations(k,h,o){const x=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const I of x){const q=k.assetsContext.animationGroups.find((k=>k.uniqueId===I));if(q)for(const Y of q.targetedAnimations)if(Y.target===h&&Y.animation.targetProperty===o){q.stop(!0),q.dispose();const h=x.indexOf(I);-1!==h&&(x.splice(h,1),k._setGlobalContextVariable("currentlyRunningAnimationGroups",x))}}}_setPropertyValue(k,h,o){const x=h.split(".");let I=k;for(let q=0;q<x.length-1;q++){const k=x[q];void 0===I[k]&&(I[k]={}),I=I[k]}I[x[x.length-1]]=o}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,q.g)("FlowGraphSetPropertyBlock",Y)}}]);