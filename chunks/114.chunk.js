"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[114],{14983:(D,l,G)=>{G.r(l),G.d(l,{FlowGraphSetPropertyBlock:()=>b});var V=G(13470),N=G(13423),M=G(11667);class b extends V.b{constructor(D){super(D),this.config=D,this.object=this.registerDataInput("object",N.d,D.target),this.value=this.registerDataInput("value",N.d),this.propertyName=this.registerDataInput("propertyName",N.d,D.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",N.d)}_execute(D,l){try{const l=this.object.getValue(D),G=this.value.getValue(D),V=this.propertyName.getValue(D);this._stopRunningAnimations(D,l,V);const N=this.customSetFunction.getValue(D);N?N(l,V,G,D):this._setPropertyValue(l,V,G)}catch(G){this._reportError(D,G)}this.out._activateSignal(D)}_stopRunningAnimations(D,l,G){const V=D._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const N of V){const M=D.assetsContext.animationGroups.find((D=>D.uniqueId===N));if(M)for(const b of M.targetedAnimations)if(b.target===l&&b.animation.targetProperty===G){M.stop(!0),M.dispose();const l=V.indexOf(N);-1!==l&&(V.splice(l,1),D._setGlobalContextVariable("currentlyRunningAnimationGroups",V))}}}_setPropertyValue(D,l,G){const V=l.split(".");let N=D;for(let M=0;M<V.length-1;M++){const D=V[M];void 0===N[D]&&(N[D]={}),N=N[D]}N[V[V.length-1]]=G}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,M.c)("FlowGraphSetPropertyBlock",b)}}]);