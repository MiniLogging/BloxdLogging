"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[114],{15168:(Z,h,V)=>{V.r(h),V.d(h,{FlowGraphSetPropertyBlock:()=>K});var v=V(13512),A=V(13459),H=V(11691);class K extends v.b{constructor(Z){super(Z),this.config=Z,this.object=this.registerDataInput("object",A.c,Z.target),this.value=this.registerDataInput("value",A.c),this.propertyName=this.registerDataInput("propertyName",A.c,Z.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",A.c)}_execute(Z,h){try{const h=this.object.getValue(Z),V=this.value.getValue(Z),v=this.propertyName.getValue(Z);this._stopRunningAnimations(Z,h,v);const A=this.customSetFunction.getValue(Z);A?A(h,v,V,Z):this._setPropertyValue(h,v,V)}catch(V){this._reportError(Z,V)}this.out._activateSignal(Z)}_stopRunningAnimations(Z,h,V){const v=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of v){const H=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId===A));if(H)for(const K of H.targetedAnimations)if(K.target===h&&K.animation.targetProperty===V){H.stop(!0),H.dispose();const h=v.indexOf(A);-1!==h&&(v.splice(h,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",v))}}}_setPropertyValue(Z,h,V){const v=h.split(".");let A=Z;for(let H=0;H<v.length-1;H++){const Z=v[H];void 0===A[Z]&&(A[Z]={}),A=A[Z]}A[v[v.length-1]]=V}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,H.i)("FlowGraphSetPropertyBlock",K)}}]);