"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[114],{16327:(Y,c,h)=>{h.r(c),h.d(c,{FlowGraphSetPropertyBlock:()=>Q});var C=h(14506),E=h(14459),N=h(12825);class Q extends C.c{constructor(Y){super(Y),this.config=Y,this.object=this.registerDataInput("object",E.c,Y.target),this.value=this.registerDataInput("value",E.c),this.propertyName=this.registerDataInput("propertyName",E.c,Y.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",E.c)}_execute(Y,c){try{const c=this.object.getValue(Y),h=this.value.getValue(Y),C=this.propertyName.getValue(Y);this._stopRunningAnimations(Y,c,C);const E=this.customSetFunction.getValue(Y);E?E(c,C,h,Y):this._setPropertyValue(c,C,h)}catch(h){this._reportError(Y,h)}this.out._activateSignal(Y)}_stopRunningAnimations(Y,c,h){const C=Y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const E of C){const N=Y.assetsContext.animationGroups.find((Y=>Y.uniqueId===E));if(N)for(const Q of N.targetedAnimations)if(Q.target===c&&Q.animation.targetProperty===h){N.stop(!0),N.dispose();const c=C.indexOf(E);-1!==c&&(C.splice(c,1),Y._setGlobalContextVariable("currentlyRunningAnimationGroups",C))}}}_setPropertyValue(Y,c,h){const C=c.split(".");let E=Y;for(let N=0;N<C.length-1;N++){const Y=C[N];void 0===E[Y]&&(E[Y]={}),E=E[Y]}E[C[C.length-1]]=h}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,N.e)("FlowGraphSetPropertyBlock",Q)}}]);