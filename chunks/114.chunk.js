"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[114],{15474:(L,r,p)=>{p.r(r),p.d(r,{FlowGraphSetPropertyBlock:()=>j});var J=p(13922),i=p(13868),n=p(12087);class j extends J.e{constructor(L){super(L),this.config=L,this.object=this.registerDataInput("object",i.d,L.target),this.value=this.registerDataInput("value",i.d),this.propertyName=this.registerDataInput("propertyName",i.d,L.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",i.d)}_execute(L,r){try{const r=this.object.getValue(L),p=this.value.getValue(L),J=this.propertyName.getValue(L);this._stopRunningAnimations(L,r,J);const i=this.customSetFunction.getValue(L);i?i(r,J,p,L):this._setPropertyValue(r,J,p)}catch(p){this._reportError(L,p)}this.out._activateSignal(L)}_stopRunningAnimations(L,r,p){const J=L._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const i of J){const n=L.assetsContext.animationGroups.find((L=>L.uniqueId===i));if(n)for(const j of n.targetedAnimations)if(j.target===r&&j.animation.targetProperty===p){n.stop(!0),n.dispose();const r=J.indexOf(i);-1!==r&&(J.splice(r,1),L._setGlobalContextVariable("currentlyRunningAnimationGroups",J))}}}_setPropertyValue(L,r,p){const J=r.split(".");let i=L;for(let n=0;n<J.length-1;n++){const L=J[n];void 0===i[L]&&(i[L]={}),i=i[L]}i[J[J.length-1]]=p}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,n.e)("FlowGraphSetPropertyBlock",j)}}]);