"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[114],{15799:(e,d,v)=>{v.r(d),v.d(d,{FlowGraphSetPropertyBlock:()=>B});var P=v(14220),p=v(14181),L=v(12381);class B extends P.c{constructor(e){super(e),this.config=e,this.object=this.registerDataInput("object",p.b,e.target),this.value=this.registerDataInput("value",p.b),this.propertyName=this.registerDataInput("propertyName",p.b,e.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",p.b)}_execute(e,d){try{const d=this.object.getValue(e),v=this.value.getValue(e),P=this.propertyName.getValue(e);this._stopRunningAnimations(e,d,P);const p=this.customSetFunction.getValue(e);p?p(d,P,v,e):this._setPropertyValue(d,P,v)}catch(v){this._reportError(e,v)}this.out._activateSignal(e)}_stopRunningAnimations(e,d,v){const P=e._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const p of P){const L=e.assetsContext.animationGroups.find((e=>e.uniqueId===p));if(L)for(const B of L.targetedAnimations)if(B.target===d&&B.animation.targetProperty===v){L.stop(!0),L.dispose();const d=P.indexOf(p);-1!==d&&(P.splice(d,1),e._setGlobalContextVariable("currentlyRunningAnimationGroups",P))}}}_setPropertyValue(e,d,v){const P=d.split(".");let p=e;for(let L=0;L<P.length-1;L++){const e=P[L];void 0===p[e]&&(p[e]={}),p=p[e]}p[P[P.length-1]]=v}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,L.h)("FlowGraphSetPropertyBlock",B)}}]);