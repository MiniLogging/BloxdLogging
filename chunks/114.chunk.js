"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[114],{16302:(h,R,l)=>{l.r(R),l.d(R,{FlowGraphSetPropertyBlock:()=>U});var j=l(14646),a=l(14597),D=l(12852);class U extends j.c{constructor(h){super(h),this.config=h,this.object=this.registerDataInput("object",a.c,h.target),this.value=this.registerDataInput("value",a.c),this.propertyName=this.registerDataInput("propertyName",a.c,h.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",a.c)}_execute(h,R){try{const R=this.object.getValue(h),l=this.value.getValue(h),j=this.propertyName.getValue(h);this._stopRunningAnimations(h,R,j);const a=this.customSetFunction.getValue(h);a?a(R,j,l,h):this._setPropertyValue(R,j,l)}catch(l){this._reportError(h,l)}this.out._activateSignal(h)}_stopRunningAnimations(h,R,l){const j=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const a of j){const D=h.assetsContext.animationGroups.find((h=>h.uniqueId===a));if(D)for(const U of D.targetedAnimations)if(U.target===R&&U.animation.targetProperty===l){D.stop(!0),D.dispose();const R=j.indexOf(a);-1!==R&&(j.splice(R,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",j))}}}_setPropertyValue(h,R,l){const j=R.split(".");let a=h;for(let D=0;D<j.length-1;D++){const h=j[D];void 0===a[h]&&(a[h]={}),a=a[h]}a[j[j.length-1]]=l}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,D.f)("FlowGraphSetPropertyBlock",U)}}]);