"use strict";(self["269hv5nclphh"]=self["269hv5nclphh"]||[]).push([[114],{15743:(E,H,d)=>{d.r(H),d.d(H,{FlowGraphSetPropertyBlock:()=>g});var n=d(14140),Z=d(14103),I=d(12344);class g extends n.d{constructor(E){super(E),this.config=E,this.object=this.registerDataInput("object",Z.e,E.target),this.value=this.registerDataInput("value",Z.e),this.propertyName=this.registerDataInput("propertyName",Z.e,E.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",Z.e)}_execute(E,H){try{const H=this.object.getValue(E),d=this.value.getValue(E),n=this.propertyName.getValue(E);this._stopRunningAnimations(E,H,n);const Z=this.customSetFunction.getValue(E);Z?Z(H,n,d,E):this._setPropertyValue(H,n,d)}catch(d){this._reportError(E,d)}this.out._activateSignal(E)}_stopRunningAnimations(E,H,d){const n=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Z of n){const I=E.assetsContext.animationGroups.find((E=>E.uniqueId===Z));if(I)for(const g of I.targetedAnimations)if(g.target===H&&g.animation.targetProperty===d){I.stop(!0),I.dispose();const H=n.indexOf(Z);-1!==H&&(n.splice(H,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",n))}}}_setPropertyValue(E,H,d){const n=H.split(".");let Z=E;for(let I=0;I<n.length-1;I++){const E=n[I];void 0===Z[E]&&(Z[E]={}),Z=Z[E]}Z[n[n.length-1]]=d}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,I.e)("FlowGraphSetPropertyBlock",g)}}]);