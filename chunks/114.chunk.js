"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[114],{15822:(u,R,I)=>{I.r(R),I.d(R,{FlowGraphSetPropertyBlock:()=>C});var B=I(14215),U=I(14160),K=I(12433);class C extends B.e{constructor(u){super(u),this.config=u,this.object=this.registerDataInput("object",U.c,u.target),this.value=this.registerDataInput("value",U.c),this.propertyName=this.registerDataInput("propertyName",U.c,u.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",U.c)}_execute(u,R){try{const R=this.object.getValue(u),I=this.value.getValue(u),B=this.propertyName.getValue(u);this._stopRunningAnimations(u,R,B);const U=this.customSetFunction.getValue(u);U?U(R,B,I,u):this._setPropertyValue(R,B,I)}catch(I){this._reportError(u,I)}this.out._activateSignal(u)}_stopRunningAnimations(u,R,I){const B=u._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of B){const K=u.assetsContext.animationGroups.find((u=>u.uniqueId===U));if(K)for(const C of K.targetedAnimations)if(C.target===R&&C.animation.targetProperty===I){K.stop(!0),K.dispose();const R=B.indexOf(U);-1!==R&&(B.splice(R,1),u._setGlobalContextVariable("currentlyRunningAnimationGroups",B))}}}_setPropertyValue(u,R,I){const B=R.split(".");let U=u;for(let K=0;K<B.length-1;K++){const u=B[K];void 0===U[u]&&(U[u]={}),U=U[u]}U[B[B.length-1]]=I}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,K.e)("FlowGraphSetPropertyBlock",C)}}]);