"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[114],{16004:(s,k,h)=>{h.r(k),h.d(k,{FlowGraphSetPropertyBlock:()=>i});var A=h(14351),g=h(14315),ms=h(12543);class i extends A.d{constructor(s){super(s),this.config=s,this.object=this.registerDataInput("object",g.c,s.target),this.value=this.registerDataInput("value",g.c),this.propertyName=this.registerDataInput("propertyName",g.c,s.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",g.c)}_execute(s,k){try{const k=this.object.getValue(s),h=this.value.getValue(s),A=this.propertyName.getValue(s);this._stopRunningAnimations(s,k,A);const g=this.customSetFunction.getValue(s);g?g(k,A,h,s):this._setPropertyValue(k,A,h)}catch(h){this._reportError(s,h)}this.out._activateSignal(s)}_stopRunningAnimations(s,k,h){const A=s._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of A){const ms=s.assetsContext.animationGroups.find((s=>s.uniqueId===g));if(ms)for(const i of ms.targetedAnimations)if(i.target===k&&i.animation.targetProperty===h){ms.stop(!0),ms.dispose();const k=A.indexOf(g);-1!==k&&(A.splice(k,1),s._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}}}_setPropertyValue(s,k,h){const A=k.split(".");let g=s;for(let ms=0;ms<A.length-1;ms++){const s=A[ms];void 0===g[s]&&(g[s]={}),g=g[s]}g[A[A.length-1]]=h}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,ms.f)("FlowGraphSetPropertyBlock",i)}}]);