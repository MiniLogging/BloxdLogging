"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[114],{14493:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphSetPropertyBlock:()=>a});var d=C(12874),U=C(12831),W=C(11076);class a extends d.c{constructor(N){super(N),this.config=N,this.object=this.registerDataInput("object",U.b,N.target),this.value=this.registerDataInput("value",U.b),this.propertyName=this.registerDataInput("propertyName",U.b,N.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",U.b)}_execute(N,q){try{const q=this.object.getValue(N),C=this.value.getValue(N),d=this.propertyName.getValue(N);this._stopRunningAnimations(N,q,d);const U=this.customSetFunction.getValue(N);U?U(q,d,C,N):this._setPropertyValue(q,d,C)}catch(C){this._reportError(N,C)}this.out._activateSignal(N)}_stopRunningAnimations(N,q,C){const d=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of d){const W=N.assetsContext.animationGroups.find((N=>N.uniqueId===U));if(W)for(const a of W.targetedAnimations)if(a.target===q&&a.animation.targetProperty===C){W.stop(!0),W.dispose();const q=d.indexOf(U);-1!==q&&(d.splice(q,1),N._setGlobalContextVariable("currentlyRunningAnimationGroups",d))}}}_setPropertyValue(N,q,C){const d=q.split(".");let U=N;for(let W=0;W<d.length-1;W++){const N=d[W];void 0===U[N]&&(U[N]={}),U=U[N]}U[d[d.length-1]]=C}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,W.h)("FlowGraphSetPropertyBlock",a)}}]);