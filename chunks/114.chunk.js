"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[114],{15668:(N,p,T)=>{T.r(p),T.d(p,{FlowGraphSetPropertyBlock:()=>U});var A=T(14129),a=T(14082),C=T(12331);class U extends A.d{constructor(N){super(N),this.config=N,this.object=this.registerDataInput("object",a.d,N.target),this.value=this.registerDataInput("value",a.d),this.propertyName=this.registerDataInput("propertyName",a.d,N.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",a.d)}_execute(N,p){try{const p=this.object.getValue(N),T=this.value.getValue(N),A=this.propertyName.getValue(N);this._stopRunningAnimations(N,p,A);const a=this.customSetFunction.getValue(N);a?a(p,A,T,N):this._setPropertyValue(p,A,T)}catch(T){this._reportError(N,T)}this.out._activateSignal(N)}_stopRunningAnimations(N,p,T){const A=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const a of A){const C=N.assetsContext.animationGroups.find((N=>N.uniqueId===a));if(C)for(const U of C.targetedAnimations)if(U.target===p&&U.animation.targetProperty===T){C.stop(!0),C.dispose();const p=A.indexOf(a);-1!==p&&(A.splice(p,1),N._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}}}_setPropertyValue(N,p,T){const A=p.split(".");let a=N;for(let C=0;C<A.length-1;C++){const N=A[C];void 0===a[N]&&(a[N]={}),a=a[N]}a[A[A.length-1]]=T}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,C.d)("FlowGraphSetPropertyBlock",U)}}]);