"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[114],{15662:(H,u,J)=>{J.r(u),J.d(u,{FlowGraphSetPropertyBlock:()=>w});var O=J(14064),U=J(14018),h=J(12304);class w extends O.e{constructor(H){super(H),this.config=H,this.object=this.registerDataInput("object",U.d,H.target),this.value=this.registerDataInput("value",U.d),this.propertyName=this.registerDataInput("propertyName",U.d,H.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",U.d)}_execute(H,u){try{const u=this.object.getValue(H),J=this.value.getValue(H),O=this.propertyName.getValue(H);this._stopRunningAnimations(H,u,O);const U=this.customSetFunction.getValue(H);U?U(u,O,J,H):this._setPropertyValue(u,O,J)}catch(J){this._reportError(H,J)}this.out._activateSignal(H)}_stopRunningAnimations(H,u,J){const O=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of O){const h=H.assetsContext.animationGroups.find((H=>H.uniqueId===U));if(h)for(const w of h.targetedAnimations)if(w.target===u&&w.animation.targetProperty===J){h.stop(!0),h.dispose();const u=O.indexOf(U);-1!==u&&(O.splice(u,1),H._setGlobalContextVariable("currentlyRunningAnimationGroups",O))}}}_setPropertyValue(H,u,J){const O=u.split(".");let U=H;for(let h=0;h<O.length-1;h++){const H=O[h];void 0===U[H]&&(U[H]={}),U=U[H]}U[O[O.length-1]]=J}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,h.f)("FlowGraphSetPropertyBlock",w)}}]);