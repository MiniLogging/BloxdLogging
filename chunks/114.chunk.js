"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[114],{15099:(M,p,b)=>{b.r(p),b.d(p,{FlowGraphSetPropertyBlock:()=>k});var Q=b(13520),q=b(13477),B=b(11757);class k extends Q.c{constructor(M){super(M),this.config=M,this.object=this.registerDataInput("object",q.c,M.target),this.value=this.registerDataInput("value",q.c),this.propertyName=this.registerDataInput("propertyName",q.c,M.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",q.c)}_execute(M,p){try{const p=this.object.getValue(M),b=this.value.getValue(M),Q=this.propertyName.getValue(M);this._stopRunningAnimations(M,p,Q);const q=this.customSetFunction.getValue(M);q?q(p,Q,b,M):this._setPropertyValue(p,Q,b)}catch(b){this._reportError(M,b)}this.out._activateSignal(M)}_stopRunningAnimations(M,p,b){const Q=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const q of Q){const B=M.assetsContext.animationGroups.find((M=>M.uniqueId===q));if(B)for(const k of B.targetedAnimations)if(k.target===p&&k.animation.targetProperty===b){B.stop(!0),B.dispose();const p=Q.indexOf(q);-1!==p&&(Q.splice(p,1),M._setGlobalContextVariable("currentlyRunningAnimationGroups",Q))}}}_setPropertyValue(M,p,b){const Q=p.split(".");let q=M;for(let B=0;B<Q.length-1;B++){const M=Q[B];void 0===q[M]&&(q[M]={}),q=q[M]}q[Q[Q.length-1]]=b}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,B.g)("FlowGraphSetPropertyBlock",k)}}]);