"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[114],{15717:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphSetPropertyBlock:()=>q});var A=V(14094),t=V(14036),n=V(12344);class q extends A.b{constructor(N){super(N),this.config=N,this.object=this.registerDataInput("object",t.b,N.target),this.value=this.registerDataInput("value",t.b),this.propertyName=this.registerDataInput("propertyName",t.b,N.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",t.b)}_execute(N,U){try{const U=this.object.getValue(N),V=this.value.getValue(N),A=this.propertyName.getValue(N);this._stopRunningAnimations(N,U,A);const t=this.customSetFunction.getValue(N);t?t(U,A,V,N):this._setPropertyValue(U,A,V)}catch(V){this._reportError(N,V)}this.out._activateSignal(N)}_stopRunningAnimations(N,U,V){const A=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const t of A){const n=N.assetsContext.animationGroups.find((N=>N.uniqueId===t));if(n)for(const q of n.targetedAnimations)if(q.target===U&&q.animation.targetProperty===V){n.stop(!0),n.dispose();const U=A.indexOf(t);-1!==U&&(A.splice(U,1),N._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}}}_setPropertyValue(N,U,V){const A=U.split(".");let t=N;for(let n=0;n<A.length-1;n++){const N=A[n];void 0===t[N]&&(t[N]={}),t=t[N]}t[A[A.length-1]]=V}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,n.e)("FlowGraphSetPropertyBlock",q)}}]);