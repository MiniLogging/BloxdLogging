"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[114],{16259:(Y,b,C)=>{C.r(b),C.d(b,{FlowGraphSetPropertyBlock:()=>E});var R=C(14466),q=C(14424),A=C(12790);class E extends R.d{constructor(Y){super(Y),this.config=Y,this.object=this.registerDataInput("object",q.b,Y.target),this.value=this.registerDataInput("value",q.b),this.propertyName=this.registerDataInput("propertyName",q.b,Y.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",q.b)}_execute(Y,b){try{const b=this.object.getValue(Y),C=this.value.getValue(Y),R=this.propertyName.getValue(Y);this._stopRunningAnimations(Y,b,R);const q=this.customSetFunction.getValue(Y);q?q(b,R,C,Y):this._setPropertyValue(b,R,C)}catch(C){this._reportError(Y,C)}this.out._activateSignal(Y)}_stopRunningAnimations(Y,b,C){const R=Y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const q of R){const A=Y.assetsContext.animationGroups.find((Y=>Y.uniqueId===q));if(A)for(const E of A.targetedAnimations)if(E.target===b&&E.animation.targetProperty===C){A.stop(!0),A.dispose();const b=R.indexOf(q);-1!==b&&(R.splice(b,1),Y._setGlobalContextVariable("currentlyRunningAnimationGroups",R))}}}_setPropertyValue(Y,b,C){const R=b.split(".");let q=Y;for(let A=0;A<R.length-1;A++){const Y=R[A];void 0===q[Y]&&(q[Y]={}),q=q[Y]}q[R[R.length-1]]=C}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,A.g)("FlowGraphSetPropertyBlock",E)}}]);