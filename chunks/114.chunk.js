"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[114],{16026:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphSetPropertyBlock:()=>M});var H=o(14415),g=o(14362),j=o(12793);class M extends H.d{constructor(D){super(D),this.config=D,this.object=this.registerDataInput("object",g.c,D.target),this.value=this.registerDataInput("value",g.c),this.propertyName=this.registerDataInput("propertyName",g.c,D.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",g.c)}_execute(D,h){try{const h=this.object.getValue(D),o=this.value.getValue(D),H=this.propertyName.getValue(D);this._stopRunningAnimations(D,h,H);const g=this.customSetFunction.getValue(D);g?g(h,H,o,D):this._setPropertyValue(h,H,o)}catch(o){this._reportError(D,o)}this.out._activateSignal(D)}_stopRunningAnimations(D,h,o){const H=D._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of H){const j=D.assetsContext.animationGroups.find((D=>D.uniqueId===g));if(j)for(const M of j.targetedAnimations)if(M.target===h&&M.animation.targetProperty===o){j.stop(!0),j.dispose();const h=H.indexOf(g);-1!==h&&(H.splice(h,1),D._setGlobalContextVariable("currentlyRunningAnimationGroups",H))}}}_setPropertyValue(D,h,o){const H=h.split(".");let g=D;for(let j=0;j<H.length-1;j++){const D=H[j];void 0===g[D]&&(g[D]={}),g=g[D]}g[H[H.length-1]]=o}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,j.g)("FlowGraphSetPropertyBlock",M)}}]);