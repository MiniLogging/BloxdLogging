"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[114],{14655:(H,O,S)=>{S.r(O),S.d(O,{FlowGraphSetPropertyBlock:()=>G});var t=S(13090),q=S(13035),p=S(11262);class G extends t.d{constructor(H){super(H),this.config=H,this.object=this.registerDataInput("object",q.e,H.target),this.value=this.registerDataInput("value",q.e),this.propertyName=this.registerDataInput("propertyName",q.e,H.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",q.e)}_execute(H,O){try{const O=this.object.getValue(H),S=this.value.getValue(H),t=this.propertyName.getValue(H);this._stopRunningAnimations(H,O,t);const q=this.customSetFunction.getValue(H);q?q(O,t,S,H):this._setPropertyValue(O,t,S)}catch(S){this._reportError(H,S)}this.out._activateSignal(H)}_stopRunningAnimations(H,O,S){const t=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const q of t){const p=H.assetsContext.animationGroups.find((H=>H.uniqueId===q));if(p)for(const G of p.targetedAnimations)if(G.target===O&&G.animation.targetProperty===S){p.stop(!0),p.dispose();const O=t.indexOf(q);-1!==O&&(t.splice(O,1),H._setGlobalContextVariable("currentlyRunningAnimationGroups",t))}}}_setPropertyValue(H,O,S){const t=O.split(".");let q=H;for(let p=0;p<t.length-1;p++){const H=t[p];void 0===q[H]&&(q[H]={}),q=q[H]}q[t[t.length-1]]=S}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,p.g)("FlowGraphSetPropertyBlock",G)}}]);