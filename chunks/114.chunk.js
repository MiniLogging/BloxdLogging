"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[114],{16390:(B,u,F)=>{F.r(u),F.d(u,{FlowGraphSetPropertyBlock:()=>G});var Z=F(14741),V=F(14701),p=F(12949);class G extends Z.b{constructor(B){super(B),this.config=B,this.object=this.registerDataInput("object",V.c,B.target),this.value=this.registerDataInput("value",V.c),this.propertyName=this.registerDataInput("propertyName",V.c,B.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",V.c)}_execute(B,u){try{const u=this.object.getValue(B),F=this.value.getValue(B),Z=this.propertyName.getValue(B);this._stopRunningAnimations(B,u,Z);const V=this.customSetFunction.getValue(B);V?V(u,Z,F,B):this._setPropertyValue(u,Z,F)}catch(F){this._reportError(B,F)}this.out._activateSignal(B)}_stopRunningAnimations(B,u,F){const Z=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const V of Z){const p=B.assetsContext.animationGroups.find((B=>B.uniqueId===V));if(p)for(const G of p.targetedAnimations)if(G.target===u&&G.animation.targetProperty===F){p.stop(!0),p.dispose();const u=Z.indexOf(V);-1!==u&&(Z.splice(u,1),B._setGlobalContextVariable("currentlyRunningAnimationGroups",Z))}}}_setPropertyValue(B,u,F){const Z=u.split(".");let V=B;for(let p=0;p<Z.length-1;p++){const B=Z[p];void 0===V[B]&&(V[B]={}),V=V[B]}V[Z[Z.length-1]]=F}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,p.f)("FlowGraphSetPropertyBlock",G)}}]);