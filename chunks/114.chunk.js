"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[114],{14520:(R,J,B)=>{B.r(J),B.d(J,{FlowGraphSetPropertyBlock:()=>N});var Q=B(12947),h=B(12894),y=B(11142);class N extends Q.d{constructor(R){super(R),this.config=R,this.object=this.registerDataInput("object",h.e,R.target),this.value=this.registerDataInput("value",h.e),this.propertyName=this.registerDataInput("propertyName",h.e,R.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",h.e)}_execute(R,J){try{const J=this.object.getValue(R),B=this.value.getValue(R),Q=this.propertyName.getValue(R);this._stopRunningAnimations(R,J,Q);const h=this.customSetFunction.getValue(R);h?h(J,Q,B,R):this._setPropertyValue(J,Q,B)}catch(B){this._reportError(R,B)}this.out._activateSignal(R)}_stopRunningAnimations(R,J,B){const Q=R._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const h of Q){const y=R.assetsContext.animationGroups.find((R=>R.uniqueId===h));if(y)for(const N of y.targetedAnimations)if(N.target===J&&N.animation.targetProperty===B){y.stop(!0),y.dispose();const J=Q.indexOf(h);-1!==J&&(Q.splice(J,1),R._setGlobalContextVariable("currentlyRunningAnimationGroups",Q))}}}_setPropertyValue(R,J,B){const Q=J.split(".");let h=R;for(let y=0;y<Q.length-1;y++){const R=Q[y];void 0===h[R]&&(h[R]={}),h=h[R]}h[Q[Q.length-1]]=B}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,y.h)("FlowGraphSetPropertyBlock",N)}}]);