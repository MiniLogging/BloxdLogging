"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[114],{14623:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphSetPropertyBlock:()=>y});var q=M(13054),w=M(13004),u=M(11242);class y extends q.e{constructor(K){super(K),this.config=K,this.object=this.registerDataInput("object",w.d,K.target),this.value=this.registerDataInput("value",w.d),this.propertyName=this.registerDataInput("propertyName",w.d,K.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",w.d)}_execute(K,H){try{const H=this.object.getValue(K),M=this.value.getValue(K),q=this.propertyName.getValue(K);this._stopRunningAnimations(K,H,q);const w=this.customSetFunction.getValue(K);w?w(H,q,M,K):this._setPropertyValue(H,q,M)}catch(M){this._reportError(K,M)}this.out._activateSignal(K)}_stopRunningAnimations(K,H,M){const q=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of q){const u=K.assetsContext.animationGroups.find((K=>K.uniqueId===w));if(u)for(const y of u.targetedAnimations)if(y.target===H&&y.animation.targetProperty===M){u.stop(!0),u.dispose();const H=q.indexOf(w);-1!==H&&(q.splice(H,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",q))}}}_setPropertyValue(K,H,M){const q=H.split(".");let w=K;for(let u=0;u<q.length-1;u++){const K=q[u];void 0===w[K]&&(w[K]={}),w=w[K]}w[q[q.length-1]]=M}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,u.f)("FlowGraphSetPropertyBlock",y)}}]);