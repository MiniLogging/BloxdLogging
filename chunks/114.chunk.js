"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[114],{15743:(V,h,mV)=>{mV.r(h),mV.d(h,{FlowGraphSetPropertyBlock:()=>A});var t=mV(14144),L=mV(14109),N=mV(12388);class A extends t.c{constructor(V){super(V),this.config=V,this.object=this.registerDataInput("object",L.e,V.target),this.value=this.registerDataInput("value",L.e),this.propertyName=this.registerDataInput("propertyName",L.e,V.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",L.e)}_execute(V,h){try{const h=this.object.getValue(V),mV=this.value.getValue(V),t=this.propertyName.getValue(V);this._stopRunningAnimations(V,h,t);const L=this.customSetFunction.getValue(V);L?L(h,t,mV,V):this._setPropertyValue(h,t,mV)}catch(mV){this._reportError(V,mV)}this.out._activateSignal(V)}_stopRunningAnimations(V,h,mV){const t=V._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const L of t){const N=V.assetsContext.animationGroups.find((V=>V.uniqueId===L));if(N)for(const A of N.targetedAnimations)if(A.target===h&&A.animation.targetProperty===mV){N.stop(!0),N.dispose();const h=t.indexOf(L);-1!==h&&(t.splice(h,1),V._setGlobalContextVariable("currentlyRunningAnimationGroups",t))}}}_setPropertyValue(V,h,mV){const t=h.split(".");let L=V;for(let N=0;N<t.length-1;N++){const V=t[N];void 0===L[V]&&(L[V]={}),L=L[V]}L[t[t.length-1]]=mV}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,N.i)("FlowGraphSetPropertyBlock",A)}}]);