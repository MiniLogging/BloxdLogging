"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[114],{14598:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphSetPropertyBlock:()=>x});var u=j(12928),k=j(12880),B=j(11181);class x extends u.e{constructor(G){super(G),this.config=G,this.object=this.registerDataInput("object",k.c,G.target),this.value=this.registerDataInput("value",k.c),this.propertyName=this.registerDataInput("propertyName",k.c,G.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",k.c)}_execute(G,A){try{const A=this.object.getValue(G),j=this.value.getValue(G),u=this.propertyName.getValue(G);this._stopRunningAnimations(G,A,u);const k=this.customSetFunction.getValue(G);k?k(A,u,j,G):this._setPropertyValue(A,u,j)}catch(j){this._reportError(G,j)}this.out._activateSignal(G)}_stopRunningAnimations(G,A,j){const u=G._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const k of u){const B=G.assetsContext.animationGroups.find((G=>G.uniqueId===k));if(B)for(const x of B.targetedAnimations)if(x.target===A&&x.animation.targetProperty===j){B.stop(!0),B.dispose();const A=u.indexOf(k);-1!==A&&(u.splice(A,1),G._setGlobalContextVariable("currentlyRunningAnimationGroups",u))}}}_setPropertyValue(G,A,j){const u=A.split(".");let k=G;for(let B=0;B<u.length-1;B++){const G=u[B];void 0===k[G]&&(k[G]={}),k=k[G]}k[u[u.length-1]]=j}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,B.h)("FlowGraphSetPropertyBlock",x)}}]);