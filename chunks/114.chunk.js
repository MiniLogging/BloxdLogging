"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[114],{15499:(Z,l,C)=>{C.r(l),C.d(l,{FlowGraphSetPropertyBlock:()=>K});var B=C(13869),x=C(13830),b=C(12400);class K extends B.c{constructor(Z){super(Z),this.config=Z,this.object=this.registerDataInput("object",x.c,Z.target),this.value=this.registerDataInput("value",x.c),this.propertyName=this.registerDataInput("propertyName",x.c,Z.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",x.c)}_execute(Z,l){try{const l=this.object.getValue(Z),C=this.value.getValue(Z),B=this.propertyName.getValue(Z);this._stopRunningAnimations(Z,l,B);const x=this.customSetFunction.getValue(Z);x?x(l,B,C,Z):this._setPropertyValue(l,B,C)}catch(C){this._reportError(Z,C)}this.out._activateSignal(Z)}_stopRunningAnimations(Z,l,C){const B=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const x of B){const b=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId===x));if(b)for(const K of b.targetedAnimations)if(K.target===l&&K.animation.targetProperty===C){b.stop(!0),b.dispose();const l=B.indexOf(x);-1!==l&&(B.splice(l,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",B))}}}_setPropertyValue(Z,l,C){const B=l.split(".");let x=Z;for(let b=0;b<B.length-1;b++){const Z=B[b];void 0===x[Z]&&(x[Z]={}),x=x[Z]}x[B[B.length-1]]=C}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,b.c)("FlowGraphSetPropertyBlock",K)}}]);