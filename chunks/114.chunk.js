"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[114],{15664:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphSetPropertyBlock:()=>p});var l=A(14036),w=A(13993),N=A(12283);class p extends l.e{constructor(y){super(y),this.config=y,this.object=this.registerDataInput("object",w.e,y.target),this.value=this.registerDataInput("value",w.e),this.propertyName=this.registerDataInput("propertyName",w.e,y.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",w.e)}_execute(y,c){try{const c=this.object.getValue(y),A=this.value.getValue(y),l=this.propertyName.getValue(y);this._stopRunningAnimations(y,c,l);const w=this.customSetFunction.getValue(y);w?w(c,l,A,y):this._setPropertyValue(c,l,A)}catch(A){this._reportError(y,A)}this.out._activateSignal(y)}_stopRunningAnimations(y,c,A){const l=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of l){const N=y.assetsContext.animationGroups.find((y=>y.uniqueId===w));if(N)for(const p of N.targetedAnimations)if(p.target===c&&p.animation.targetProperty===A){N.stop(!0),N.dispose();const c=l.indexOf(w);-1!==c&&(l.splice(c,1),y._setGlobalContextVariable("currentlyRunningAnimationGroups",l))}}}_setPropertyValue(y,c,A){const l=c.split(".");let w=y;for(let N=0;N<l.length-1;N++){const y=l[N];void 0===w[y]&&(w[y]={}),w=w[y]}w[l[l.length-1]]=A}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,N.f)("FlowGraphSetPropertyBlock",p)}}]);