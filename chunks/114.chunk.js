"use strict";(self.hmihoa2fs98=self.hmihoa2fs98||[]).push([[114],{15010:(b,d,P)=>{P.r(d),P.d(d,{FlowGraphSetPropertyBlock:()=>q});var G=P(13409),W=P(13365),i=P(11639);class q extends G.e{constructor(b){super(b),this.config=b,this.object=this.registerDataInput("object",W.b,b.target),this.value=this.registerDataInput("value",W.b),this.propertyName=this.registerDataInput("propertyName",W.b,b.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",W.b)}_execute(b,d){try{const d=this.object.getValue(b),P=this.value.getValue(b),G=this.propertyName.getValue(b);this._stopRunningAnimations(b,d,G);const W=this.customSetFunction.getValue(b);W?W(d,G,P,b):this._setPropertyValue(d,G,P)}catch(P){this._reportError(b,P)}this.out._activateSignal(b)}_stopRunningAnimations(b,d,P){const G=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const W of G){const i=b.assetsContext.animationGroups.find((b=>b.uniqueId===W));if(i)for(const q of i.targetedAnimations)if(q.target===d&&q.animation.targetProperty===P){i.stop(!0),i.dispose();const d=G.indexOf(W);-1!==d&&(G.splice(d,1),b._setGlobalContextVariable("currentlyRunningAnimationGroups",G))}}}_setPropertyValue(b,d,P){const G=d.split(".");let W=b;for(let i=0;i<G.length-1;i++){const b=G[i];void 0===W[b]&&(W[b]={}),W=W[b]}W[G[G.length-1]]=P}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,i.f)("FlowGraphSetPropertyBlock",q)}}]);