"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[114],{15073:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphSetPropertyBlock:()=>u});var W=D(13431),B=D(13392),t=D(11637);class u extends W.d{constructor(c){super(c),this.config=c,this.object=this.registerDataInput("object",B.c,c.target),this.value=this.registerDataInput("value",B.c),this.propertyName=this.registerDataInput("propertyName",B.c,c.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",B.c)}_execute(c,r){try{const r=this.object.getValue(c),D=this.value.getValue(c),W=this.propertyName.getValue(c);this._stopRunningAnimations(c,r,W);const B=this.customSetFunction.getValue(c);B?B(r,W,D,c):this._setPropertyValue(r,W,D)}catch(D){this._reportError(c,D)}this.out._activateSignal(c)}_stopRunningAnimations(c,r,D){const W=c._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const B of W){const t=c.assetsContext.animationGroups.find((c=>c.uniqueId===B));if(t)for(const u of t.targetedAnimations)if(u.target===r&&u.animation.targetProperty===D){t.stop(!0),t.dispose();const r=W.indexOf(B);-1!==r&&(W.splice(r,1),c._setGlobalContextVariable("currentlyRunningAnimationGroups",W))}}}_setPropertyValue(c,r,D){const W=r.split(".");let B=c;for(let t=0;t<W.length-1;t++){const c=W[t];void 0===B[c]&&(B[c]={}),B=B[c]}B[W[W.length-1]]=D}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,t.e)("FlowGraphSetPropertyBlock",u)}}]);