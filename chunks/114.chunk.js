"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[114],{16132:(q,I,l)=>{l.r(I),l.d(I,{FlowGraphSetPropertyBlock:()=>c});var w=l(14488),t=l(14441),O=l(12711);class c extends w.e{constructor(q){super(q),this.config=q,this.object=this.registerDataInput("object",t.e,q.target),this.value=this.registerDataInput("value",t.e),this.propertyName=this.registerDataInput("propertyName",t.e,q.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",t.e)}_execute(q,I){try{const I=this.object.getValue(q),l=this.value.getValue(q),w=this.propertyName.getValue(q);this._stopRunningAnimations(q,I,w);const t=this.customSetFunction.getValue(q);t?t(I,w,l,q):this._setPropertyValue(I,w,l)}catch(l){this._reportError(q,l)}this.out._activateSignal(q)}_stopRunningAnimations(q,I,l){const w=q._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const t of w){const O=q.assetsContext.animationGroups.find((q=>q.uniqueId===t));if(O)for(const c of O.targetedAnimations)if(c.target===I&&c.animation.targetProperty===l){O.stop(!0),O.dispose();const I=w.indexOf(t);-1!==I&&(w.splice(I,1),q._setGlobalContextVariable("currentlyRunningAnimationGroups",w))}}}_setPropertyValue(q,I,l){const w=I.split(".");let t=q;for(let O=0;O<w.length-1;O++){const q=w[O];void 0===t[q]&&(t[q]={}),t=t[q]}t[w[w.length-1]]=l}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,O.e)("FlowGraphSetPropertyBlock",c)}}]);