"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[114],{15777:(l,a,N)=>{N.r(a),N.d(a,{FlowGraphSetPropertyBlock:()=>Z});var U=N(14195),c=N(14145),K=N(12394);class Z extends U.b{constructor(l){super(l),this.config=l,this.object=this.registerDataInput("object",c.d,l.target),this.value=this.registerDataInput("value",c.d),this.propertyName=this.registerDataInput("propertyName",c.d,l.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",c.d)}_execute(l,a){try{const a=this.object.getValue(l),N=this.value.getValue(l),U=this.propertyName.getValue(l);this._stopRunningAnimations(l,a,U);const c=this.customSetFunction.getValue(l);c?c(a,U,N,l):this._setPropertyValue(a,U,N)}catch(N){this._reportError(l,N)}this.out._activateSignal(l)}_stopRunningAnimations(l,a,N){const U=l._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const c of U){const K=l.assetsContext.animationGroups.find((l=>l.uniqueId===c));if(K)for(const Z of K.targetedAnimations)if(Z.target===a&&Z.animation.targetProperty===N){K.stop(!0),K.dispose();const a=U.indexOf(c);-1!==a&&(U.splice(a,1),l._setGlobalContextVariable("currentlyRunningAnimationGroups",U))}}}_setPropertyValue(l,a,N){const U=a.split(".");let c=l;for(let K=0;K<U.length-1;K++){const l=U[K];void 0===c[l]&&(c[l]={}),c=c[l]}c[U[U.length-1]]=N}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,K.g)("FlowGraphSetPropertyBlock",Z)}}]);