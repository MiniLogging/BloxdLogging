"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[114],{15109:(E,t,z)=>{z.r(t),z.d(t,{FlowGraphSetPropertyBlock:()=>u});var A=z(13517),X=z(13458),R=z(11766);class u extends A.e{constructor(E){super(E),this.config=E,this.object=this.registerDataInput("object",X.c,E.target),this.value=this.registerDataInput("value",X.c),this.propertyName=this.registerDataInput("propertyName",X.c,E.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",X.c)}_execute(E,t){try{const t=this.object.getValue(E),z=this.value.getValue(E),A=this.propertyName.getValue(E);this._stopRunningAnimations(E,t,A);const X=this.customSetFunction.getValue(E);X?X(t,A,z,E):this._setPropertyValue(t,A,z)}catch(z){this._reportError(E,z)}this.out._activateSignal(E)}_stopRunningAnimations(E,t,z){const A=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const X of A){const R=E.assetsContext.animationGroups.find((E=>E.uniqueId===X));if(R)for(const u of R.targetedAnimations)if(u.target===t&&u.animation.targetProperty===z){R.stop(!0),R.dispose();const t=A.indexOf(X);-1!==t&&(A.splice(t,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}}}_setPropertyValue(E,t,z){const A=t.split(".");let X=E;for(let R=0;R<A.length-1;R++){const E=A[R];void 0===X[E]&&(X[E]={}),X=X[E]}X[A[A.length-1]]=z}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,R.f)("FlowGraphSetPropertyBlock",u)}}]);