"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[114],{14755:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphSetPropertyBlock:()=>u});var l=h(13107),M=h(13060),O=h(11293);class u extends l.c{constructor(m){super(m),this.config=m,this.object=this.registerDataInput("object",M.b,m.target),this.value=this.registerDataInput("value",M.b),this.propertyName=this.registerDataInput("propertyName",M.b,m.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",M.b)}_execute(m,S){try{const S=this.object.getValue(m),h=this.value.getValue(m),l=this.propertyName.getValue(m);this._stopRunningAnimations(m,S,l);const M=this.customSetFunction.getValue(m);M?M(S,l,h,m):this._setPropertyValue(S,l,h)}catch(h){this._reportError(m,h)}this.out._activateSignal(m)}_stopRunningAnimations(m,S,h){const l=m._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const M of l){const O=m.assetsContext.animationGroups.find((m=>m.uniqueId===M));if(O)for(const u of O.targetedAnimations)if(u.target===S&&u.animation.targetProperty===h){O.stop(!0),O.dispose();const S=l.indexOf(M);-1!==S&&(l.splice(S,1),m._setGlobalContextVariable("currentlyRunningAnimationGroups",l))}}}_setPropertyValue(m,S,h){const l=S.split(".");let M=m;for(let O=0;O<l.length-1;O++){const m=l[O];void 0===M[m]&&(M[m]={}),M=M[m]}M[l[l.length-1]]=h}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,O.e)("FlowGraphSetPropertyBlock",u)}}]);