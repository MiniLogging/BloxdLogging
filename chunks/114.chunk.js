"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[114],{14682:(f,v,Z)=>{Z.r(v),Z.d(v,{FlowGraphSetPropertyBlock:()=>l});var V=Z(13173),h=Z(13123),J=Z(11372);class l extends V.c{constructor(f){super(f),this.config=f,this.object=this.registerDataInput("object",h.d,f.target),this.value=this.registerDataInput("value",h.d),this.propertyName=this.registerDataInput("propertyName",h.d,f.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",h.d)}_execute(f,v){try{const v=this.object.getValue(f),Z=this.value.getValue(f),V=this.propertyName.getValue(f);this._stopRunningAnimations(f,v,V);const h=this.customSetFunction.getValue(f);h?h(v,V,Z,f):this._setPropertyValue(v,V,Z)}catch(Z){this._reportError(f,Z)}this.out._activateSignal(f)}_stopRunningAnimations(f,v,Z){const V=f._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const h of V){const J=f.assetsContext.animationGroups.find((f=>f.uniqueId===h));if(J)for(const l of J.targetedAnimations)if(l.target===v&&l.animation.targetProperty===Z){J.stop(!0),J.dispose();const v=V.indexOf(h);-1!==v&&(V.splice(v,1),f._setGlobalContextVariable("currentlyRunningAnimationGroups",V))}}}_setPropertyValue(f,v,Z){const V=v.split(".");let h=f;for(let J=0;J<V.length-1;J++){const f=V[J];void 0===h[f]&&(h[f]={}),h=h[f]}h[V[V.length-1]]=Z}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,J.h)("FlowGraphSetPropertyBlock",l)}}]);