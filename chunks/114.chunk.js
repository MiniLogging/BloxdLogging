"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[114],{16195:(h,d,T)=>{T.r(d),T.d(d,{FlowGraphSetPropertyBlock:()=>n});var Y=T(14578),y=T(14528),C=T(12714);class n extends Y.e{constructor(h){super(h),this.config=h,this.object=this.registerDataInput("object",y.b,h.target),this.value=this.registerDataInput("value",y.b),this.propertyName=this.registerDataInput("propertyName",y.b,h.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",y.b)}_execute(h,d){try{const d=this.object.getValue(h),T=this.value.getValue(h),Y=this.propertyName.getValue(h);this._stopRunningAnimations(h,d,Y);const y=this.customSetFunction.getValue(h);y?y(d,Y,T,h):this._setPropertyValue(d,Y,T)}catch(T){this._reportError(h,T)}this.out._activateSignal(h)}_stopRunningAnimations(h,d,T){const Y=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const y of Y){const C=h.assetsContext.animationGroups.find((h=>h.uniqueId===y));if(C)for(const n of C.targetedAnimations)if(n.target===d&&n.animation.targetProperty===T){C.stop(!0),C.dispose();const d=Y.indexOf(y);-1!==d&&(Y.splice(d,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",Y))}}}_setPropertyValue(h,d,T){const Y=d.split(".");let y=h;for(let C=0;C<Y.length-1;C++){const h=Y[C];void 0===y[h]&&(y[h]={}),y=y[h]}y[Y[Y.length-1]]=T}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,C.e)("FlowGraphSetPropertyBlock",n)}}]);