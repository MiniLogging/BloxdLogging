"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[114],{15112:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphSetPropertyBlock:()=>A});var m=K(13564),O=K(13514),X=K(11789);class A extends m.c{constructor(C){super(C),this.config=C,this.object=this.registerDataInput("object",O.c,C.target),this.value=this.registerDataInput("value",O.c),this.propertyName=this.registerDataInput("propertyName",O.c,C.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",O.c)}_execute(C,U){try{const U=this.object.getValue(C),K=this.value.getValue(C),m=this.propertyName.getValue(C);this._stopRunningAnimations(C,U,m);const O=this.customSetFunction.getValue(C);O?O(U,m,K,C):this._setPropertyValue(U,m,K)}catch(K){this._reportError(C,K)}this.out._activateSignal(C)}_stopRunningAnimations(C,U,K){const m=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const O of m){const X=C.assetsContext.animationGroups.find((C=>C.uniqueId===O));if(X)for(const A of X.targetedAnimations)if(A.target===U&&A.animation.targetProperty===K){X.stop(!0),X.dispose();const U=m.indexOf(O);-1!==U&&(m.splice(U,1),C._setGlobalContextVariable("currentlyRunningAnimationGroups",m))}}}_setPropertyValue(C,U,K){const m=U.split(".");let O=C;for(let X=0;X<m.length-1;X++){const C=m[X];void 0===O[C]&&(O[C]={}),O=O[C]}O[m[m.length-1]]=K}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,X.h)("FlowGraphSetPropertyBlock",A)}}]);