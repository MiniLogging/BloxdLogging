"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[114],{15994:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphSetPropertyBlock:()=>T});var q=W(14328),Q=W(14274),C=W(12560);class T extends q.d{constructor(r){super(r),this.config=r,this.object=this.registerDataInput("object",Q.c,r.target),this.value=this.registerDataInput("value",Q.c),this.propertyName=this.registerDataInput("propertyName",Q.c,r.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",Q.c)}_execute(r,O){try{const O=this.object.getValue(r),W=this.value.getValue(r),q=this.propertyName.getValue(r);this._stopRunningAnimations(r,O,q);const Q=this.customSetFunction.getValue(r);Q?Q(O,q,W,r):this._setPropertyValue(O,q,W)}catch(W){this._reportError(r,W)}this.out._activateSignal(r)}_stopRunningAnimations(r,O,W){const q=r._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Q of q){const C=r.assetsContext.animationGroups.find((r=>r.uniqueId===Q));if(C)for(const T of C.targetedAnimations)if(T.target===O&&T.animation.targetProperty===W){C.stop(!0),C.dispose();const O=q.indexOf(Q);-1!==O&&(q.splice(O,1),r._setGlobalContextVariable("currentlyRunningAnimationGroups",q))}}}_setPropertyValue(r,O,W){const q=O.split(".");let Q=r;for(let C=0;C<q.length-1;C++){const r=q[C];void 0===Q[r]&&(Q[r]={}),Q=Q[r]}Q[q[q.length-1]]=W}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,C.e)("FlowGraphSetPropertyBlock",T)}}]);