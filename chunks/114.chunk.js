"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[114],{16114:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphSetPropertyBlock:()=>v});var J=Z(14464),S=Z(14405),P=Z(12688);class v extends J.e{constructor(t){super(t),this.config=t,this.object=this.registerDataInput("object",S.c,t.target),this.value=this.registerDataInput("value",S.c),this.propertyName=this.registerDataInput("propertyName",S.c,t.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",S.c)}_execute(t,b){try{const b=this.object.getValue(t),Z=this.value.getValue(t),J=this.propertyName.getValue(t);this._stopRunningAnimations(t,b,J);const S=this.customSetFunction.getValue(t);S?S(b,J,Z,t):this._setPropertyValue(b,J,Z)}catch(Z){this._reportError(t,Z)}this.out._activateSignal(t)}_stopRunningAnimations(t,b,Z){const J=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const S of J){const P=t.assetsContext.animationGroups.find((t=>t.uniqueId===S));if(P)for(const v of P.targetedAnimations)if(v.target===b&&v.animation.targetProperty===Z){P.stop(!0),P.dispose();const b=J.indexOf(S);-1!==b&&(J.splice(b,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",J))}}}_setPropertyValue(t,b,Z){const J=b.split(".");let S=t;for(let P=0;P<J.length-1;P++){const t=J[P];void 0===S[t]&&(S[t]={}),S=S[t]}S[J[J.length-1]]=Z}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,P.f)("FlowGraphSetPropertyBlock",v)}}]);