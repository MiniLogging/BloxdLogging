"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[114],{15849:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphSetPropertyBlock:()=>Q});var g=V(14283),E=V(14241),I=V(12449);class Q extends g.d{constructor(o){super(o),this.config=o,this.object=this.registerDataInput("object",E.e,o.target),this.value=this.registerDataInput("value",E.e),this.propertyName=this.registerDataInput("propertyName",E.e,o.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",E.e)}_execute(o,v){try{const v=this.object.getValue(o),V=this.value.getValue(o),g=this.propertyName.getValue(o);this._stopRunningAnimations(o,v,g);const E=this.customSetFunction.getValue(o);E?E(v,g,V,o):this._setPropertyValue(v,g,V)}catch(V){this._reportError(o,V)}this.out._activateSignal(o)}_stopRunningAnimations(o,v,V){const g=o._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const E of g){const I=o.assetsContext.animationGroups.find((o=>o.uniqueId===E));if(I)for(const Q of I.targetedAnimations)if(Q.target===v&&Q.animation.targetProperty===V){I.stop(!0),I.dispose();const v=g.indexOf(E);-1!==v&&(g.splice(v,1),o._setGlobalContextVariable("currentlyRunningAnimationGroups",g))}}}_setPropertyValue(o,v,V){const g=v.split(".");let E=o;for(let I=0;I<g.length-1;I++){const o=g[I];void 0===E[o]&&(E[o]={}),E=E[o]}E[g[g.length-1]]=V}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,I.h)("FlowGraphSetPropertyBlock",Q)}}]);