"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[114],{15029:(e,E,H)=>{H.r(E),H.d(E,{FlowGraphSetPropertyBlock:()=>P});var N=H(13475),u=H(13415),z=H(11690);class P extends N.d{constructor(e){super(e),this.config=e,this.object=this.registerDataInput("object",u.b,e.target),this.value=this.registerDataInput("value",u.b),this.propertyName=this.registerDataInput("propertyName",u.b,e.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",u.b)}_execute(e,E){try{const E=this.object.getValue(e),H=this.value.getValue(e),N=this.propertyName.getValue(e);this._stopRunningAnimations(e,E,N);const u=this.customSetFunction.getValue(e);u?u(E,N,H,e):this._setPropertyValue(E,N,H)}catch(H){this._reportError(e,H)}this.out._activateSignal(e)}_stopRunningAnimations(e,E,H){const N=e._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const u of N){const z=e.assetsContext.animationGroups.find((e=>e.uniqueId===u));if(z)for(const P of z.targetedAnimations)if(P.target===E&&P.animation.targetProperty===H){z.stop(!0),z.dispose();const E=N.indexOf(u);-1!==E&&(N.splice(E,1),e._setGlobalContextVariable("currentlyRunningAnimationGroups",N))}}}_setPropertyValue(e,E,H){const N=E.split(".");let u=e;for(let z=0;z<N.length-1;z++){const e=N[z];void 0===u[e]&&(u[e]={}),u=u[e]}u[N[N.length-1]]=H}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,z.g)("FlowGraphSetPropertyBlock",P)}}]);