"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[84],{16430:(P,a,R)=>{R.r(a),R.d(a,{_HDRTextureLoader:()=>h});var S=R(14173);class A{static ConvertPanoramaToCubemap(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!P)throw"ConvertPanoramaToCubemap: input cannot be null";if(P.length!=a*R*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(S,this.FACE_FRONT,P,a,R,A),back:this.CreateCubemapTexture(S,this.FACE_BACK,P,a,R,A),left:this.CreateCubemapTexture(S,this.FACE_LEFT,P,a,R,A),right:this.CreateCubemapTexture(S,this.FACE_RIGHT,P,a,R,A),up:this.CreateCubemapTexture(S,this.FACE_UP,P,a,R,A),down:this.CreateCubemapTexture(S,this.FACE_DOWN,P,a,R,A),size:S,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(P,a,R,S,A){let Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const p=new ArrayBuffer(P*P*4*3),j=new Float32Array(p),U=Z?Math.max(1,Math.round(S/4/P)):1,Q=1/U,h=Q*Q,l=a[1].qa(a[0]).scale(Q/P),V=a[3].qa(a[2]).scale(Q/P),f=1/P;let O=0;for(let q=0;q<P;q++)for(let Z=0;Z<U;Z++){let Z=a[0],p=a[2];for(let a=0;a<P;a++)for(let Q=0;Q<U;Q++){const U=p.qa(Z).scale(O).add(Z);U.normalize();const Q=this.CalcProjectionSpherical(U,R,S,A);j[q*P*3+3*a+0]+=Q.r*h,j[q*P*3+3*a+1]+=Q.g*h,j[q*P*3+3*a+2]+=Q.b*h,Z=Z.add(l),p=p.add(V)}O+=f*Q}return j}static CalcProjectionSpherical(P,a,R,S){let A=Math.atan2(P.z,P.x);const Z=Math.acos(P.y);for(;A<-Math.PI;)A+=2*Math.PI;for(;A>Math.PI;)A-=2*Math.PI;let p=A/Math.PI;const j=Z/Math.PI;p=.5*p+.5;let U=Math.round(p*R);U<0?U=0:U>=R&&(U=R-1);let Q=Math.round(j*S);Q<0?Q=0:Q>=S&&(Q=S-1);const h=S-Q-1;return{r:a[h*R*3+3*U+0],g:a[h*R*3+3*U+1],b:a[h*R*3+3*U+2]}}}function Z(P,a,R,S,A,Z){A>0?(A=function(P,a){return a>1023?P*Math.pow(2,1023)*Math.pow(2,a-1023):a<-1074?P*Math.pow(2,-1074)*Math.pow(2,a+1074):P*Math.pow(2,a)}(1,A-136),P[Z+0]=a*A,P[Z+1]=R*A,P[Z+2]=S*A):(P[Z+0]=0,P[Z+1]=0,P[Z+2]=0)}function p(P,a){let R="",S="";for(let A=a;A<P.length-a&&(S=String.fromCharCode(P[A]),"\n"!=S);A++)R+=S;return R}function j(P){let a=0,R=0,S=p(P,0);if("#"!=S[0]||"?"!=S[1])throw"Bad HDR Format.";let A=!1,Z=!1,j=0;do{j+=S.length+1,S=p(P,j),"FORMAT=32-bit_rle_rgbe"==S?Z=!0:0==S.length&&(A=!0)}while(!A);if(!Z)throw"HDR Bad header format, unsupported FORMAT";j+=S.length+1,S=p(P,j);const U=/^-Y (.*) \+X (.*)$/g.exec(S);if(!U||U.length<3)throw"HDR Bad header format, no size";if(R=parseInt(U[2]),a=parseInt(U[1]),R<8||R>32767)throw"HDR Bad header format, unsupported size";return j+=S.length+1,{height:a,width:R,dataPosition:j}}function U(P,a){return function(P,a){let R=a.height;const S=a.width;let A,p,j,U,h,l=a.dataPosition,V=0,f=0,O=0;const q=new ArrayBuffer(4*S),y=new Uint8Array(q),t=new ArrayBuffer(a.width*a.height*4*3),W=new Float32Array(t);for(;R>0;){if(A=P[l++],p=P[l++],j=P[l++],U=P[l++],2!=A||2!=p||128&j||a.width<8||a.width>32767)return Q(P,a);if((j<<8|U)!=S)throw"HDR Bad header format, wrong scan line width";for(V=0,O=0;O<4;O++)for(f=(O+1)*S;V<f;)if(A=P[l++],p=P[l++],A>128){if(h=A-128,0==h||h>f-V)throw"HDR Bad Format, bad scanline data (run)";for(;h-- >0;)y[V++]=p}else{if(h=A,0==h||h>f-V)throw"HDR Bad Format, bad scanline data (non-run)";if(y[V++]=p,--h>0)for(let a=0;a<h;a++)y[V++]=P[l++]}for(O=0;O<S;O++)A=y[O],p=y[O+S],j=y[O+2*S],U=y[O+3*S],Z(W,A,p,j,U,(a.height-R)*S*3+3*O);R--}return W}(P,a)}function Q(P,a){let R=a.height;const S=a.width;let A,p,j,U,Q,h=a.dataPosition;const l=new ArrayBuffer(a.width*a.height*4*3),V=new Float32Array(l);for(;R>0;){for(Q=0;Q<a.width;Q++)A=P[h++],p=P[h++],j=P[h++],U=P[h++],Z(V,A,p,j,U,(a.height-R)*S*3+3*Q);R--}return V}A.FACE_LEFT=[new S.p(-1,-1,-1),new S.p(1,-1,-1),new S.p(-1,1,-1),new S.p(1,1,-1)],A.FACE_RIGHT=[new S.p(1,-1,1),new S.p(-1,-1,1),new S.p(1,1,1),new S.p(-1,1,1)],A.FACE_FRONT=[new S.p(1,-1,-1),new S.p(1,-1,1),new S.p(1,1,-1),new S.p(1,1,1)],A.FACE_BACK=[new S.p(-1,-1,1),new S.p(-1,-1,-1),new S.p(-1,1,1),new S.p(-1,1,-1)],A.FACE_DOWN=[new S.p(1,1,-1),new S.p(1,1,1),new S.p(-1,1,-1),new S.p(-1,1,1)],A.FACE_UP=[new S.p(-1,-1,-1),new S.p(-1,-1,1),new S.p(1,-1,-1),new S.p(1,-1,1)];class h{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(P,a,R){const S=new Uint8Array(P.buffer,P.byteOffset,P.byteLength),A=j(S),Z=U(S,A),p=A.width*A.height,Q=new Float32Array(4*p);for(let j=0;j<p;j+=1)Q[4*j]=Z[3*j],Q[4*j+1]=Z[3*j+1],Q[4*j+2]=Z[3*j+2],Q[4*j+3]=1;R(A.width,A.height,a.generateMipMaps,!1,(()=>{const P=a.getEngine();a.type=1,a.format=5,a._gammaSpace=!1,P._uploadDataToTextureDirectly(a,Q)}))}}}}]);