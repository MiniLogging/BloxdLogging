"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12697:(A,I,y)=>{y.r(I),y.d(I,{AnimationGroup:()=>t,TargetedAnimation:()=>x});var X=y(12015),F=y(1013),M=y(1049),g=y(1164),d=y(12010),V=y(1021);class k{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(A,I,y,F){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=I,this._target=A,this._scene=y,this._host=F,this._activeTargets=[],I._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===X.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=V.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const A={frame:0,value:this._minValue};this._keys.splice(0,0,A)}if(this._target instanceof Array){let A=0;for(const I of this._target)this._preparePath(I,A),this._getOriginalValues(A),A++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const M=I.getEvents();M&&M.length>0&&M.forEach((A=>{this._events.push(A._clone())})),this._enableBlending=A&&A.animationPropertiesOverride?A.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(A){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const y=this._animation.targetPropertyPath;if(y.length>1){let X=A;for(let A=0;A<y.length-1;A++){const I=y[A];if(X=X[I],void 0===X)throw new Error(`Invalid property (${I}) in property path (${y.join(".")})`)}this._targetPath=y[y.length-1],this._activeTargets[I]=X}else this._targetPath=y[0],this._activeTargets[I]=A;if(void 0===this._activeTargets[I][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${y.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let A=0;for(const I of this._target)void 0!==this._originalValue[A]&&this._setValue(I,this._activeTargets[A],this._originalValue[A],-1,A),A++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let A=0;A<this._events.length;A++)this._events[A].isDone=!1}isStopped(){return this._stopped}dispose(){const A=this._animation.runtimeAnimations.indexOf(this);A>-1&&this._animation.runtimeAnimations.splice(A,1)}setValue(A,I){if(this._targetIsArray)for(let y=0;y<this._target.length;y++){const X=this._target[y];this._setValue(X,this._activeTargets[y],A,I,y)}else this._setValue(this._target,this._directTarget,A,I,0)}_getOriginalValues(){let A,I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const y=this._activeTargets[I];A=y.getLocalMatrix&&"_matrix"===this._targetPath?y.getLocalMatrix():y[this._targetPath],A&&A.clone?this._originalValue[I]=A.clone():this._originalValue[I]=A}_registerTargetForLateAnimationBinding(A,I){const y=A.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(y),y._lateAnimationHolders||(y._lateAnimationHolders={}),y._lateAnimationHolders[A.targetPath]||(y._lateAnimationHolders[A.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:I}),A.isAdditive?(y._lateAnimationHolders[A.targetPath].additiveAnimations.push(A),y._lateAnimationHolders[A.targetPath].totalAdditiveWeight+=A.weight):(y._lateAnimationHolders[A.targetPath].animations.push(A),y._lateAnimationHolders[A.targetPath].totalWeight+=A.weight)}_setValue(A,I,y,F,M){if(this._currentActiveTarget=I,this._weight=F,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const A=I[this._targetPath];A.clone?this._originalBlendValue=A.clone():this._originalBlendValue=A}this._originalBlendValue.m?X.e.AllowMatrixDecomposeForInterpolation?this._currentValue?V.c.DecomposeLerpToRef(this._originalBlendValue,y,this._blendingFactor,this._currentValue):this._currentValue=V.c.DecomposeLerp(this._originalBlendValue,y,this._blendingFactor):this._currentValue?V.c.LerpToRef(this._originalBlendValue,y,this._blendingFactor,this._currentValue):this._currentValue=V.c.Lerp(this._originalBlendValue,y,this._blendingFactor):this._currentValue=X.e._UniversalLerp(this._originalBlendValue,y,this._blendingFactor);const F=A&&A.animationPropertiesOverride?A.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=F}else this._currentValue?this._currentValue.p?this._currentValue.p(y):this._currentValue=y:null!==y&&void 0!==y&&y.clone?this._currentValue=y.clone():this._currentValue=y;-1!==F?this._registerTargetForLateAnimationBinding(this,this._originalValue[M]):this._animationState.loopMode===X.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[M],I[this._targetPath]):I[this._targetPath]=this._originalValue[M]+this._currentValue:I[this._targetPath]=this._currentValue,A.Ce&&A.Ce(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(A){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const y=this._animation.getKeys();A<y[0].frame?A=y[0].frame:A>y[y.length-1].frame&&(A=y[y.length-1].frame);const X=this._events;if(X.length)for(let M=0;M<X.length;M++)X[M].onlyOnce||(X[M].isDone=X[M].frame<A);this._currentFrame=A;const F=this._animation._interpolate(A,this._animationState);this.setValue(F,I)}_prepareForSpeedRatioChange(A){const I=this._previousElapsedTime*(this._animation.framePerSecond*A)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-I}animate(A,I,y,F,M){let g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const d=this._animation,V=d.targetPropertyPath;if(!V||V.length<1)return this._stopped=!0,!1;let k=!0;(I<this._minFrame||I>this._maxFrame)&&(I=this._minFrame),(y<this._minFrame||y>this._maxFrame)&&(y=this._maxFrame);const U=y-I;let P,f=A*(d.framePerSecond*M)/1e3+this._absoluteFrameOffset,z=0,l=!1;const u=F&&this._animationState.loopMode===X.e.ANIMATIONLOOPMODE_YOYO;if(u){const A=(f-I)/U,y=Math.sin(A*Math.PI);f=Math.abs(y)*U+I;const X=y>=0?1:-1;this._yoyoDirection!==X&&(l=!0),this._yoyoDirection=X}if(this._previousElapsedTime=A,this._previousAbsoluteFrame=f,!F&&y>=I&&(f>=U&&M>0||f<=0&&M<0))k=!1,z=d._getKeyValue(this._maxValue);else if(!F&&I>=y&&(f<=U&&M<0||f>=0&&M>0))k=!1,z=d._getKeyValue(this._minValue);else if(this._animationState.loopMode!==X.e.ANIMATIONLOOPMODE_CYCLE){const A=y.toString()+I.toString();if(!this._offsetsCache[A]){this._animationState.repeatCount=0,this._animationState.loopMode=X.e.ANIMATIONLOOPMODE_CYCLE;const F=d._interpolate(I,this._animationState),M=d._interpolate(y,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),d.dataType){case X.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[A]=M-F;break;case X.e.ANIMATIONTYPE_QUATERNION:case X.e.ANIMATIONTYPE_VECTOR3:case X.e.ANIMATIONTYPE_VECTOR2:case X.e.ANIMATIONTYPE_SIZE:case X.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[A]=M.Qc(F)}this._highLimitsCache[A]=M}z=this._highLimitsCache[A],P=this._offsetsCache[A]}if(void 0===P)switch(d.dataType){case X.e.ANIMATIONTYPE_FLOAT:P=0;break;case X.e.ANIMATIONTYPE_QUATERNION:P=X.m;break;case X.e.ANIMATIONTYPE_VECTOR3:P=X.v;break;case X.e.ANIMATIONTYPE_VECTOR2:P=X.r;break;case X.e.ANIMATIONTYPE_SIZE:P=X.o;break;case X.e.ANIMATIONTYPE_COLOR3:P=X.i;break;case X.e.ANIMATIONTYPE_COLOR4:P=X.j}let K;if(this._host&&this._host.syncRoot){const A=this._host.syncRoot;K=I+U*((A.masterFrame-A.fromFrame)/(A.toFrame-A.fromFrame))}else K=f>0&&I>y||f<0&&I<y?k&&0!==U?y+f%U:I:k&&0!==U?I+f%U:y;const x=this._events;if(!u&&(M>0&&this.currentFrame>K||M<0&&this.currentFrame<K)||u&&l){this._onLoop();for(let A=0;A<x.length;A++)x[A].onlyOnce||(x[A].isDone=!1);this._animationState.key=M>0?0:d.getKeys().length-1}this._currentFrame=K,this._animationState.repeatCount=0===U?0:f/U|0,this._animationState.highLimitValue=z,this._animationState.offsetValue=P;const t=d._interpolate(K,this._animationState);if(this.setValue(t,g),x.length)for(let X=0;X<x.length;X++)if(U>=0&&K>=x[X].frame&&x[X].frame>=I||U<0&&K<=x[X].frame&&x[X].frame<=I){const A=x[X];A.isDone||(A.onlyOnce&&(x.splice(X,1),X--),A.isDone=!0,A.action(K))}return k||(this._stopped=!0),k}}var U=y(1137);class P{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(A){this._weight=-1!==A?Math.min(Math.max(A,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(A){for(let I=0;I<this._runtimeAnimations.length;I++){this._runtimeAnimations[I]._prepareForSpeedRatioChange(A)}this._speedRatio=A,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(A,I){let y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,M=arguments.length>4&&void 0!==arguments[4]&&arguments[4],g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,k=arguments.length>8?arguments[8]:void 0,U=arguments.length>9&&void 0!==arguments[9]&&arguments[9],P=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=I,this.fromFrame=y,this.toFrame=X,this.loopAnimation=M,this.onAnimationEnd=d,this.onAnimationLoop=k,this.isAdditive=U,this.playOrder=P,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.sf=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new F.d,this.onAnimationLoopObservable=new F.d,this._scene=A,V&&this.appendAnimations(I,V),this._speedRatio=g,A._activeAnimatables.push(this)}syncWith(A){if(this._syncRoot=A,A){const A=this._scene._activeAnimatables.indexOf(this);A>-1&&(this._scene._activeAnimatables.splice(A,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(A,I){for(let y=0;y<I.length;y++){const X=I[y],F=new k(A,X,this._scene,this);F._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(F)}}getAnimationByTargetProperty(A){const I=this._runtimeAnimations;for(let y=0;y<I.length;y++)if(I[y].animation.targetProperty===A)return I[y].animation;return null}getRuntimeAnimationByTargetProperty(A){const I=this._runtimeAnimations;for(let y=0;y<I.length;y++)if(I[y].animation.targetProperty===A)return I[y];return null}reset(){const A=this._runtimeAnimations;for(let I=0;I<A.length;I++)A[I].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(A){const I=this._runtimeAnimations;for(let y=0;y<I.length;y++)I[y].animation.enableBlending=!0,I[y].animation.blendingSpeed=A}disableBlending(){const A=this._runtimeAnimations;for(let I=0;I<A.length;I++)A[I].animation.enableBlending=!1}goToFrame(A){const I=this._runtimeAnimations;if(I[0]){const y=I[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??I[0].currentFrame;const X=0===this.speedRatio?0:(A-this._frameToSyncFromJump)/y*1e3/this.speedRatio;this._manualJumpDelay=-X}for(let y=0;y<I.length;y++)I[y].goToFrame(A,this._weight);this._goToFrame=A}get paused(){return this.sf}pause(){this.sf||(this.sf=!0)}restart(){this.sf=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(A,I){let y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],X=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(A||I){const F=this._scene._activeAnimatables.indexOf(this);if(F>-1){const M=this._runtimeAnimations;for(let y=M.length-1;y>=0;y--){const X=M[y];A&&X.animation.name!=A||(I&&!I(X.target)||(X.dispose(),M.splice(y,1)))}0==M.length&&(y||this._scene._activeAnimatables.splice(F,1),X||this._raiseOnAnimationEnd())}}else{const A=this._scene._activeAnimatables.indexOf(this);if(A>-1){y||this._scene._activeAnimatables.splice(A,1);const I=this._runtimeAnimations;for(let A=0;A<I.length;A++)I[A].dispose();this._runtimeAnimations.length=0,X||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((A=>{this.onAnimationEndObservable.add((()=>{A(this)}),void 0,void 0,this,!0)}))}_animate(A){if(this.sf)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=A),!0;if(null===this._localDelayOffset?(this._localDelayOffset=A,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=A-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let I=!1;const y=this._runtimeAnimations;let X;for(X=0;X<y.length;X++){const F=y[X].animate(A-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);I=I||F}if(this.animationStarted=I,!I){if(this.disposeOnEnd)for(X=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(X,1),X=0;X<y.length;X++)y[X].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return I}}function f(A){if(0===A.totalWeight&&0===A.totalAdditiveWeight)return A.originalValue;let I=1;const y=V.f.Id[0],X=V.f.Id[1],F=V.f.Quaternion[0];let M=0;const g=A.animations[0],d=A.originalValue;let k=1,U=!1;if(A.totalWeight<1)k=1-A.totalWeight,d.decompose(X,F,y);else{if(M=1,I=A.totalWeight,k=g.weight/I,1==k){if(!A.totalAdditiveWeight)return g.currentValue;U=!0}g.currentValue.decompose(X,F,y)}if(!U){X.scaleInPlace(k),y.scaleInPlace(k),F.scaleInPlace(k);for(let g=M;g<A.animations.length;g++){const M=A.animations[g];if(0===M.weight)continue;k=M.weight/I;const d=V.f.Id[2],U=V.f.Id[3],P=V.f.Quaternion[1];M.currentValue.decompose(U,P,d),U.scaleAndAddToRef(k,X),P.scaleAndAddToRef(V.d.Dot(F,P)>0?k:-k,F),d.scaleAndAddToRef(k,y)}F.normalize()}for(let f=0;f<A.additiveAnimations.length;f++){const I=A.additiveAnimations[f];if(0===I.weight)continue;const M=V.f.Id[2],g=V.f.Id[3],d=V.f.Quaternion[1];I.currentValue.decompose(g,d,M),g.multiplyToRef(X,g),V.j.LerpToRef(X,g,I.weight,X),F.multiplyToRef(d,d),V.d.SlerpToRef(F,d,I.weight,F),M.scaleAndAddToRef(I.weight,y)}const P=g?g._animationState.workValue:V.f.Matrix[0].clone();return V.c.ComposeToRef(X,F,y,P),P}function z(A,I){if(0===A.totalWeight&&0===A.totalAdditiveWeight)return I;const y=A.animations[0],X=A.originalValue;let F=I;if(0===A.totalWeight&&A.totalAdditiveWeight>0)F.p(X);else if(1===A.animations.length){if(V.d.SlerpToRef(X,y.currentValue,Math.min(1,A.totalWeight),F),0===A.totalAdditiveWeight)return F}else if(A.animations.length>1){let y,M,g=1;if(A.totalWeight<1){const I=1-A.totalWeight;y=[],M=[],y.push(X),M.push(I)}else{if(2===A.animations.length&&(V.d.SlerpToRef(A.animations[0].currentValue,A.animations[1].currentValue,A.animations[1].weight/A.totalWeight,I),0===A.totalAdditiveWeight))return I;y=[],M=[],g=A.totalWeight}for(let I=0;I<A.animations.length;I++){const X=A.animations[I];y.push(X.currentValue),M.push(X.weight/g)}let d=0;for(let A=0;A<y.length;)A?(d+=M[A],V.d.SlerpToRef(F,y[A],M[A]/d,F),A++):(V.d.SlerpToRef(y[A],y[A+1],M[A+1]/(M[A]+M[A+1]),I),F=I,d=M[A]+M[A+1],A+=2)}for(let M=0;M<A.additiveAnimations.length;M++){const I=A.additiveAnimations[M];0!==I.weight&&(F.multiplyToRef(I.currentValue,V.f.Quaternion[0]),V.d.SlerpToRef(F,V.f.Quaternion[0],I.weight,F))}return F}var l,u,K=y(1208);l=K.d,(u=d.d)&&(u.prototype.copyAnimationRange=function(A,I,y){let F=arguments.length>3&&void 0!==arguments[3]&&arguments[3],M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new X.e(this.name,"_matrix",A.animations[0].framePerSecond,X.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const g=A.animations[0].getRange(I);if(!g)return!1;const d=g.from,V=g.to,k=A.animations[0].getKeys(),U=A.length,P=A.getParent(),f=this.getParent(),z=F&&P&&U&&this.length&&U!==this.length,l=z&&f&&P?f.length/P.length:1,u=F&&!f&&M&&(1!==M.x||1!==M.y||1!==M.z),K=this.animations[0].getKeys();let x,t,N;for(let X=0,R=k.length;X<R;X++)x=k[X],x.frame>=d&&x.frame<=V&&(F?(N=x.value.clone(),z?(t=N.getTranslation(),N.setTranslation(t.scaleInPlace(l))):u&&M?(t=N.getTranslation(),N.setTranslation(t.multiplyInPlace(M))):N=x.value):N=x.value,K.push({frame:x.frame+y,value:N}));return this.animations[0].createRange(I,d+y,V+y),!0}),l&&(l.prototype._animate=function(A){if(!this.animationsEnabled)return;const I=U.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=I}this.deltaTime=void 0!==A?A:this.useConstantAnimationDeltaTime?16:(I-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=I;const y=this._activeAnimatables;if(0===y.length)return;this._animationTime+=this.deltaTime;const F=this._animationTime;for(let X=0;X<y.length;X++){const A=y[X];!A._animate(F)&&A.disposeOnEnd&&X--}!function(A){if(A._registeredForLateAnimationBindings.length){for(let I=0;I<A._registeredForLateAnimationBindings.length;I++){const y=A._registeredForLateAnimationBindings.data[I];for(const A in y._lateAnimationHolders){const I=y._lateAnimationHolders[A],F=I.animations[0],M=I.originalValue;if(void 0===M||null===M)continue;const g=X.e.AllowMatrixDecomposeForInterpolation&&M.m;let d=y[A];if(g)d=f(I);else if(void 0!==M.w)d=z(I,d||V.d.Identity());else{let A=0,y=1;const g=F&&F._animationState.loopMode===X.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(I.totalWeight<1)d=g?M.clone?M.clone():M:F&&M.scale?M.scale(1-I.totalWeight):F?M*(1-I.totalWeight):M.clone?M.clone():M;else if(F){y=I.totalWeight;const X=F.weight/y;d=1!==X?F.currentValue.scale?F.currentValue.scale(X):F.currentValue*X:F.currentValue,g&&(d.addToRef?d.addToRef(M,d):d+=M),A=1}for(let X=A;X<I.animations.length;X++){const A=I.animations[X],F=A.weight/y;F&&(A.currentValue.scaleAndAddToRef?A.currentValue.scaleAndAddToRef(F,d):d+=A.currentValue*F)}for(let X=0;X<I.additiveAnimations.length;X++){const A=I.additiveAnimations[X],y=A.weight;y&&(A.currentValue.scaleAndAddToRef?A.currentValue.scaleAndAddToRef(y,d):d+=A.currentValue*y)}}y[A]=d}y._lateAnimationHolders={}}A._registeredForLateAnimationBindings.reset()}}(this)},l.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((A,I)=>A.playOrder-I.playOrder))},l.prototype.beginWeightedAnimation=function(A,I,y){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,F=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,d=arguments.length>7?arguments[7]:void 0,V=arguments.length>8?arguments[8]:void 0,k=arguments.length>9?arguments[9]:void 0,U=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const P=this.beginAnimation(A,I,y,F,M,g,d,!1,V,k,U);return P.weight=X,P},l.prototype.beginAnimation=function(A,I,y,X){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,M=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0,d=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],V=arguments.length>8?arguments[8]:void 0,k=arguments.length>9?arguments[9]:void 0,U=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(F<0){const A=I;I=y,y=A,F=-F}I>y&&(F=-F),d&&this.stopAnimation(A,void 0,V),g||(g=new P(this,A,I,y,X,F,M,void 0,k,U));const f=!V||V(A);if(A.animations&&f&&g.appendAnimations(A,A.animations),A.getAnimatables){const U=A.getAnimatables();for(let A=0;A<U.length;A++)this.beginAnimation(U[A],I,y,X,F,M,g,d,V,k)}return g.reset(),g},l.prototype.beginHierarchyAnimation=function(A,I,y,X,F){let M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,d=arguments.length>7?arguments[7]:void 0,V=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],k=arguments.length>9?arguments[9]:void 0,U=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const P=A.getDescendants(I),f=[];f.push(this.beginAnimation(A,y,X,F,M,g,d,V,k,void 0,U));for(const z of P)f.push(this.beginAnimation(z,y,X,F,M,g,d,V,k,void 0,U));return f},l.prototype.beginDirectAnimation=function(A,I,y,X,F){let M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(M<0){const A=y;y=X,X=A,M=-M}return y>X&&(M=-M),new P(this,A,y,X,F,M,arguments.length>6?arguments[6]:void 0,I,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},l.prototype.beginDirectHierarchyAnimation=function(A,I,y,X,F,M,g,d,V){let k=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const U=A.getDescendants(I),P=[];P.push(this.beginDirectAnimation(A,y,X,F,M,g,d,V,k));for(const f of U)P.push(this.beginDirectAnimation(f,y,X,F,M,g,d,V,k));return P},l.prototype.getAnimatableByTarget=function(A){for(let I=0;I<this._activeAnimatables.length;I++)if(this._activeAnimatables[I].target===A)return this._activeAnimatables[I];return null},l.prototype.getAllAnimatablesByTarget=function(A){const I=[];for(let y=0;y<this._activeAnimatables.length;y++)this._activeAnimatables[y].target===A&&I.push(this._activeAnimatables[y]);return I},l.prototype.stopAnimation=function(A,I,y){const X=this.getAllAnimatablesByTarget(A);for(const F of X)F.stop(I,y)},l.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let A=0;A<this._activeAnimatables.length;A++)this._activeAnimatables[A].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const A of this.animationGroups)A.stop()});class x{getClassName(){return"TargetedAnimation"}serialize(){const A={};return A.animation=this.animation.serialize(),A.targetId=this.target.id,A}}class t{get mask(){return this._mask}set mask(A){this._mask!==A&&(this._mask=A,this.syncWithMask(!0))}syncWithMask(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||A){this._numActiveAnimatables=0;for(let A=0;A<this._animatables.length;++A){const I=this._animatables[A];!this.mask||this.mask.disabled||this.mask.retainsTarget(I.target.name)?(this._numActiveAnimatables++,I.paused&&I.restart()):I.paused||I.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let A=0;A<this._animatables.length;++A){const I=this._animatables[A];this.mask.retainsTarget(I.target.name)||(I.stop(),this._animatables.splice(A,1),--A)}for(let A=0;A<this._targetedAnimations.length;A++){const I=this._targetedAnimations[A];this.mask.retainsTarget(I.target.name)||(this._targetedAnimations.splice(A,1),--A)}}}get from(){return this._from}set from(A){if(this._from!==A){this._from=A;for(let A=0;A<this._animatables.length;A++){this._animatables[A].fromFrame=this._from}}}get to(){return this._to}set to(A){if(this._to!==A){this._to=A;for(let A=0;A<this._animatables.length;A++){this._animatables[A].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(A){if(this._speedRatio!==A){this._speedRatio=A;for(let A=0;A<this._animatables.length;A++){this._animatables[A].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(A){if(this._loopAnimation!==A){this._loopAnimation=A;for(let A=0;A<this._animatables.length;A++){this._animatables[A].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(A){if(this._isAdditive!==A){this._isAdditive=A;for(let A=0;A<this._animatables.length;A++){this._animatables[A].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(A){this._weight!==A&&(this._weight=A,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(A){if(this._playOrder!==A&&(this._playOrder=A,this._animatables.length>0)){for(let A=0;A<this._animatables.length;A++)this._animatables[A].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(A){if(this._enableBlending!==A&&(this._enableBlending=A,null!==A))for(let I=0;I<this._targetedAnimations.length;++I)this._targetedAnimations[I].animation.enableBlending=A}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(A){if(this._blendingSpeed!==A&&(this._blendingSpeed=A,null!==A))for(let I=0;I<this._targetedAnimations.length;++I)this._targetedAnimations[I].animation.blendingSpeed=A}getLength(A,I){A=A??this._from;return((I=I??this._to)-A)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(A){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],X=arguments.length>3?arguments[3]:void 0;if(0===A.length)return null;X=X??A[0].weight;let F=Number.MAX_VALUE,M=-Number.MAX_VALUE;if(y)for(const d of A)d.from<F&&(F=d.from),d.to>M&&(M=d.to);const g=new t(A[0].name+"_merged",A[0]._scene,X);for(const d of A){y&&d.normalize(F,M);for(const A of d.targetedAnimations)g.addTargetedAnimation(A.animation,A.target);I&&d.dispose()}return g}constructor(A){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=A,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new F.d,this.onAnimationLoopObservable=new F.d,this.onAnimationGroupLoopObservable=new F.d,this.onAnimationGroupEndObservable=new F.d,this.onAnimationGroupPauseObservable=new F.d,this.onAnimationGroupPlayObservable=new F.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=I||M.c.LastCreatedScene,this._weight=y,this._playOrder=X,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(A,I){const y=new x;y.animation=A,y.target=I;const X=A.getKeys();return this._from>X[0].frame&&(this._from=X[0].frame),this._to<X[X.length-1].frame&&(this._to=X[X.length-1].frame),null!==this._enableBlending&&(A.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(A.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(y),this._shouldStart=!0,y}removeTargetedAnimation(A){for(let I=this._targetedAnimations.length-1;I>-1;I--){this._targetedAnimations[I].animation===A&&this._targetedAnimations.splice(I,1)}}normalize(){let A=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==A&&(A=this._from),null==I&&(I=this._to);for(let y=0;y<this._targetedAnimations.length;y++){const X=this._targetedAnimations[y].animation.getKeys(),F=X[0],M=X[X.length-1];if(F.frame>A){const I={frame:A,value:F.value,inTangent:F.inTangent,outTangent:F.outTangent,interpolation:F.interpolation};X.splice(0,0,I)}if(M.frame<I){const A={frame:I,value:M.value,inTangent:M.inTangent,outTangent:M.outTangent,interpolation:M.interpolation};X.push(A)}}return this._from=A,this._to=I,this}_processLoop(A,I,y){A.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(I),this._animationLoopFlags[y]||(this._animationLoopFlags[y]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0],I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,y=arguments.length>2?arguments[2]:void 0,X=arguments.length>3?arguments[3]:void 0,F=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=A,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let M=0;M<this._targetedAnimations.length;M++){const g=this._targetedAnimations[M],d=this._scene.beginDirectAnimation(g.target,[g.animation],void 0!==y?y:this._from,void 0!==X?X:this._to,A,I,void 0,void 0,void 0!==F?F:this._isAdditive);d.weight=this._weight,d.playOrder=this._playOrder,d.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(g),this._checkAnimationGroupEnded(d)},this._processLoop(d,g,M),this._animatables.push(d)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=I,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let A=0;A<this._animatables.length;A++){this._animatables[A].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(A){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==A&&(this.loopAnimation=A),this.restart()):(this.stop(),this.start(A,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let A=0;A<this._animatables.length;A++){this._animatables[A].reset()}return this}restart(){if(!this._isStarted)return this;for(let A=0;A<this._animatables.length;A++){this._animatables[A].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let A=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const I=this._animatables.slice();for(let X=0;X<I.length;X++)I[X].stop(void 0,void 0,!0,A);let y=0;for(let X=0;X<this._scene._activeAnimatables.length;X++){const I=this._scene._activeAnimatables[X];I._runtimeAnimations.length>0?this._scene._activeAnimatables[y++]=I:A&&this._checkAnimationGroupEnded(I,A)}return this._scene._activeAnimatables.length=y,this._isStarted=!1,this}setWeightForAllAnimatables(A){for(let I=0;I<this._animatables.length;I++){this._animatables[I].weight=A}return this}syncAllAnimationsWith(A){for(let I=0;I<this._animatables.length;I++){this._animatables[I].syncWith(A)}return this}goToFrame(A){if(!this._isStarted)return this;for(let I=0;I<this._animatables.length;I++){this._animatables[I].goToFrame(A)}return this}getCurrentFrame(){var A;return(null===(A=this.animatables[0])||void 0===A?void 0:A.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const A=this._scene.animationGroups.indexOf(this);if(A>-1&&this._scene.animationGroups.splice(A,1),this._parentContainer){const A=this._parentContainer.animationGroups.indexOf(this);A>-1&&this._parentContainer.animationGroups.splice(A,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(A){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const y=this._animatables.indexOf(A);y>-1&&this._animatables.splice(y,1),0===this._animatables.length&&(this._isStarted=!1,I||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(A,I){let y=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const X=new t(A||this.name,this._scene,this._weight,this._playOrder);X._from=this.from,X._to=this.to,X._speedRatio=this.speedRatio,X._loopAnimation=this.loopAnimation,X._isAdditive=this.isAdditive,X._enableBlending=this.enableBlending,X._blendingSpeed=this.blendingSpeed,X.metadata=this.metadata,X.mask=this.mask;for(const F of this._targetedAnimations)X.addTargetedAnimation(y?F.animation.clone():F.animation,I?I(F.target):F.target);return X}serialize(){const A={};A.name=this.name,A.from=this.from,A.to=this.to,A.speedRatio=this.speedRatio,A.loopAnimation=this.loopAnimation,A.isAdditive=this.isAdditive,A.weight=this.weight,A.playOrder=this.playOrder,A.enableBlending=this.enableBlending,A.blendingSpeed=this.blendingSpeed,A.targetedAnimations=[];for(let I=0;I<this.targetedAnimations.length;I++){const y=this.targetedAnimations[I];A.targetedAnimations[I]=y.serialize()}return g.e&&g.e.HasTags(this)&&(A.tags=g.e.GetTags(this)),this.metadata&&(A.metadata=this.metadata),A}static Parse(A,I){const y=new t(A.name,I,A.weight,A.playOrder);for(let F=0;F<A.targetedAnimations.length;F++){const M=A.targetedAnimations[F],g=X.e.Parse(M.animation),d=M.targetId;if("influence"===M.animation.property){const A=I.getMorphTargetById(d);A&&y.addTargetedAnimation(g,A)}else{const A=I.getNodeById(d);null!=A&&y.addTargetedAnimation(g,A)}}return g.e&&g.e.AddTagsTo(y,A.tags),null!==A.from&&null!==A.to&&y.normalize(A.from,A.to),void 0!==A.speedRatio&&(y._speedRatio=A.speedRatio),void 0!==A.loopAnimation&&(y._loopAnimation=A.loopAnimation),void 0!==A.isAdditive&&(y._isAdditive=A.isAdditive),void 0!==A.weight&&(y._weight=A.weight),void 0!==A.playOrder&&(y._playOrder=A.playOrder),void 0!==A.enableBlending&&(y._enableBlending=A.enableBlending),void 0!==A.blendingSpeed&&(y._blendingSpeed=A.blendingSpeed),void 0!==A.metadata&&(y.metadata=A.metadata),y}static MakeAnimationAdditive(A,I,y){let F;F="object"===typeof I?I:{referenceFrame:I,range:y,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let M=A;F.cloneOriginalAnimationGroup&&(M=A.clone(F.clonedAnimationGroupName||M.name));const g=M.targetedAnimations;for(let d=0;d<g.length;d++){const A=g[d];A.animation=X.e.MakeAnimationAdditive(A.animation,F)}if(M.isAdditive=!0,F.clipKeys){let A=Number.MAX_VALUE,I=-Number.MAX_VALUE;const y=M.targetedAnimations;for(let X=0;X<y.length;X++){const F=y[X].animation.getKeys();A>F[0].frame&&(A=F[0].frame),I<F[F.length-1].frame&&(I=F[F.length-1].frame)}M._from=A,M._to=I}return M}static ClipKeys(A,I,y,X,F){const M=A.clone(X||A.name);return t.ClipKeysInPlace(M,I,y,F)}static ClipKeysInPlace(A,I,y,X){return t.ClipInPlace(A,I,y,X,!1)}static ClipFrames(A,I,y,X,F){const M=A.clone(X||A.name);return t.ClipFramesInPlace(M,I,y,F)}static ClipFramesInPlace(A,I,y,X){return t.ClipInPlace(A,I,y,X,!0)}static ClipInPlace(A,I,y,X){let F=arguments.length>4&&void 0!==arguments[4]&&arguments[4],M=Number.MAX_VALUE,g=-Number.MAX_VALUE;const d=A.targetedAnimations;for(let V=0;V<d.length;V++){const A=d[V],k=X?A.animation:A.animation.clone();F&&(k.createKeyForFrame(I),k.createKeyForFrame(y));const U=k.getKeys(),P=[];let f=Number.MAX_VALUE;for(let X=0;X<U.length;X++){const A=U[X];if(!F&&X>=I&&X<=y||F&&A.frame>=I&&A.frame<=y){const I={frame:A.frame,value:A.value.clone?A.value.clone():A.value,inTangent:A.inTangent,outTangent:A.outTangent,interpolation:A.interpolation,lockedTangent:A.lockedTangent};f===Number.MAX_VALUE&&(f=I.frame),I.frame-=f,P.push(I)}}0!==P.length?(M>P[0].frame&&(M=P[0].frame),g<P[P.length-1].frame&&(g=P[P.length-1].frame),k.setKeys(P,!0),A.animation=k):(d.splice(V,1),V--)}return A._from=M,A._to=g,A}getClassName(){return"AnimationGroup"}toString(A){let I="Name: "+this.name;return I+=", type: "+this.getClassName(),A&&(I+=", from: "+this._from,I+=", to: "+this._to,I+=", isStarted: "+this._isStarted,I+=", speedRatio: "+this._speedRatio,I+=", targetedAnimations length: "+this._targetedAnimations.length,I+=", animatables length: "+this._animatables),I}}}}]);