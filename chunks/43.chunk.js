"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{13380:(f,H,Q)=>{Q.r(H),Q.d(H,{AnimationGroup:()=>M,TargetedAnimation:()=>S});var a=Q(12728),d=Q(992),s=Q(1023),n=Q(1173),e=Q(12726),c=Q(1e3);class J{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(f,H,Q,d){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=H,this._target=f,this._scene=Q,this._host=d,this._activeTargets=[],H._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===a.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=c.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const f={frame:0,value:this._minValue};this._keys.splice(0,0,f)}if(this._target instanceof Array){let f=0;for(const H of this._target)this._preparePath(H,f),this._getOriginalValues(f),f++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const s=H.getEvents();s&&s.length>0&&s.forEach((f=>{this._events.push(f._clone())})),this._enableBlending=f&&f.animationPropertiesOverride?f.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(f){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const Q=this._animation.targetPropertyPath;if(Q.length>1){let a=f;for(let f=0;f<Q.length-1;f++){const H=Q[f];if(a=a[H],void 0===a)throw new Error(`Invalid property (${H}) in property path (${Q.join(".")})`)}this._targetPath=Q[Q.length-1],this._activeTargets[H]=a}else this._targetPath=Q[0],this._activeTargets[H]=f;if(void 0===this._activeTargets[H][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${Q.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let f=0;for(const H of this._target)void 0!==this._originalValue[f]&&this._setValue(H,this._activeTargets[f],this._originalValue[f],-1,f),f++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let f=0;f<this._events.length;f++)this._events[f].isDone=!1}isStopped(){return this._stopped}dispose(){const f=this._animation.runtimeAnimations.indexOf(this);f>-1&&this._animation.runtimeAnimations.splice(f,1)}setValue(f,H){if(this._targetIsArray)for(let Q=0;Q<this._target.length;Q++){const a=this._target[Q];this._setValue(a,this._activeTargets[Q],f,H,Q)}else this._setValue(this._target,this._directTarget,f,H,0)}_getOriginalValues(){let f,H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const Q=this._activeTargets[H];f=Q.getLocalMatrix&&"_matrix"===this._targetPath?Q.getLocalMatrix():Q[this._targetPath],f&&f.clone?this._originalValue[H]=f.clone():this._originalValue[H]=f}_registerTargetForLateAnimationBinding(f,H){const Q=f.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(Q),Q._lateAnimationHolders||(Q._lateAnimationHolders={}),Q._lateAnimationHolders[f.targetPath]||(Q._lateAnimationHolders[f.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:H}),f.isAdditive?(Q._lateAnimationHolders[f.targetPath].additiveAnimations.push(f),Q._lateAnimationHolders[f.targetPath].totalAdditiveWeight+=f.weight):(Q._lateAnimationHolders[f.targetPath].animations.push(f),Q._lateAnimationHolders[f.targetPath].totalWeight+=f.weight)}_setValue(f,H,Q,d,s){if(this._currentActiveTarget=H,this._weight=d,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const f=H[this._targetPath];f.clone?this._originalBlendValue=f.clone():this._originalBlendValue=f}this._originalBlendValue.m?a.b.AllowMatrixDecomposeForInterpolation?this._currentValue?c.e.DecomposeLerpToRef(this._originalBlendValue,Q,this._blendingFactor,this._currentValue):this._currentValue=c.e.DecomposeLerp(this._originalBlendValue,Q,this._blendingFactor):this._currentValue?c.e.LerpToRef(this._originalBlendValue,Q,this._blendingFactor,this._currentValue):this._currentValue=c.e.Lerp(this._originalBlendValue,Q,this._blendingFactor):this._currentValue=a.b._UniversalLerp(this._originalBlendValue,Q,this._blendingFactor);const d=f&&f.animationPropertiesOverride?f.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=d}else this._currentValue?this._currentValue.p?this._currentValue.p(Q):this._currentValue=Q:null!==Q&&void 0!==Q&&Q.clone?this._currentValue=Q.clone():this._currentValue=Q;-1!==d?this._registerTargetForLateAnimationBinding(this,this._originalValue[s]):this._animationState.loopMode===a.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[s],H[this._targetPath]):H[this._targetPath]=this._originalValue[s]+this._currentValue:H[this._targetPath]=this._currentValue,f.Ae&&f.Ae(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(f){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const Q=this._animation.getKeys();f<Q[0].frame?f=Q[0].frame:f>Q[Q.length-1].frame&&(f=Q[Q.length-1].frame);const a=this._events;if(a.length)for(let s=0;s<a.length;s++)a[s].onlyOnce||(a[s].isDone=a[s].frame<f);this._currentFrame=f;const d=this._animation._interpolate(f,this._animationState);this.setValue(d,H)}_prepareForSpeedRatioChange(f){const H=this._previousElapsedTime*(this._animation.framePerSecond*f)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-H}animate(f,H,Q,d,s){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const e=this._animation,c=e.targetPropertyPath;if(!c||c.length<1)return this._stopped=!0,!1;let J=!0;(H<this._minFrame||H>this._maxFrame)&&(H=this._minFrame),(Q<this._minFrame||Q>this._maxFrame)&&(Q=this._maxFrame);const u=Q-H;let Y,k=f*(e.framePerSecond*s)/1e3+this._absoluteFrameOffset,X=0,F=!1;const r=d&&this._animationState.loopMode===a.b.ANIMATIONLOOPMODE_YOYO;if(r){const f=(k-H)/u,Q=Math.sin(f*Math.PI);k=Math.abs(Q)*u+H;const a=Q>=0?1:-1;this._yoyoDirection!==a&&(F=!0),this._yoyoDirection=a}if(this._previousElapsedTime=f,this._previousAbsoluteFrame=k,!d&&Q>=H&&(k>=u&&s>0||k<=0&&s<0))J=!1,X=e._getKeyValue(this._maxValue);else if(!d&&H>=Q&&(k<=u&&s<0||k>=0&&s>0))J=!1,X=e._getKeyValue(this._minValue);else if(this._animationState.loopMode!==a.b.ANIMATIONLOOPMODE_CYCLE){const f=Q.toString()+H.toString();if(!this._offsetsCache[f]){this._animationState.repeatCount=0,this._animationState.loopMode=a.b.ANIMATIONLOOPMODE_CYCLE;const d=e._interpolate(H,this._animationState),s=e._interpolate(Q,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),e.dataType){case a.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[f]=s-d;break;case a.b.ANIMATIONTYPE_QUATERNION:case a.b.ANIMATIONTYPE_VECTOR3:case a.b.ANIMATIONTYPE_VECTOR2:case a.b.ANIMATIONTYPE_SIZE:case a.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[f]=s.Ac(d)}this._highLimitsCache[f]=s}X=this._highLimitsCache[f],Y=this._offsetsCache[f]}if(void 0===Y)switch(e.dataType){case a.b.ANIMATIONTYPE_FLOAT:Y=0;break;case a.b.ANIMATIONTYPE_QUATERNION:Y=a.i;break;case a.b.ANIMATIONTYPE_VECTOR3:Y=a.n;break;case a.b.ANIMATIONTYPE_VECTOR2:Y=a.m;break;case a.b.ANIMATIONTYPE_SIZE:Y=a.k;break;case a.b.ANIMATIONTYPE_COLOR3:Y=a.c;break;case a.b.ANIMATIONTYPE_COLOR4:Y=a.f}let v;if(this._host&&this._host.syncRoot){const f=this._host.syncRoot;v=H+u*((f.masterFrame-f.fromFrame)/(f.toFrame-f.fromFrame))}else v=k>0&&H>Q||k<0&&H<Q?J&&0!==u?Q+k%u:H:J&&0!==u?H+k%u:Q;const S=this._events;if(!r&&(s>0&&this.currentFrame>v||s<0&&this.currentFrame<v)||r&&F){this._onLoop();for(let f=0;f<S.length;f++)S[f].onlyOnce||(S[f].isDone=!1);this._animationState.key=s>0?0:e.getKeys().length-1}this._currentFrame=v,this._animationState.repeatCount=0===u?0:k/u|0,this._animationState.highLimitValue=X,this._animationState.offsetValue=Y;const M=e._interpolate(v,this._animationState);if(this.setValue(M,n),S.length)for(let a=0;a<S.length;a++)if(u>=0&&v>=S[a].frame&&S[a].frame>=H||u<0&&v<=S[a].frame&&S[a].frame<=H){const f=S[a];f.isDone||(f.onlyOnce&&(S.splice(a,1),a--),f.isDone=!0,f.action(v))}return J||(this._stopped=!0),J}}var u=Q(1136);class Y{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(f){this._weight=-1!==f?Math.min(Math.max(f,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(f){for(let H=0;H<this._runtimeAnimations.length;H++){this._runtimeAnimations[H]._prepareForSpeedRatioChange(f)}this._speedRatio=f,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(f,H){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6?arguments[6]:void 0,c=arguments.length>7?arguments[7]:void 0,J=arguments.length>8?arguments[8]:void 0,u=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Y=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=H,this.fromFrame=Q,this.toFrame=a,this.loopAnimation=s,this.onAnimationEnd=e,this.onAnimationLoop=J,this.isAdditive=u,this.playOrder=Y,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.vf=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new d.e,this.onAnimationLoopObservable=new d.e,this._scene=f,c&&this.appendAnimations(H,c),this._speedRatio=n,f._activeAnimatables.push(this)}syncWith(f){if(this._syncRoot=f,f){const f=this._scene._activeAnimatables.indexOf(this);f>-1&&(this._scene._activeAnimatables.splice(f,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(f,H){for(let Q=0;Q<H.length;Q++){const a=H[Q],d=new J(f,a,this._scene,this);d._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(d)}}getAnimationByTargetProperty(f){const H=this._runtimeAnimations;for(let Q=0;Q<H.length;Q++)if(H[Q].animation.targetProperty===f)return H[Q].animation;return null}getRuntimeAnimationByTargetProperty(f){const H=this._runtimeAnimations;for(let Q=0;Q<H.length;Q++)if(H[Q].animation.targetProperty===f)return H[Q];return null}reset(){const f=this._runtimeAnimations;for(let H=0;H<f.length;H++)f[H].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(f){const H=this._runtimeAnimations;for(let Q=0;Q<H.length;Q++)H[Q].animation.enableBlending=!0,H[Q].animation.blendingSpeed=f}disableBlending(){const f=this._runtimeAnimations;for(let H=0;H<f.length;H++)f[H].animation.enableBlending=!1}goToFrame(f){const H=this._runtimeAnimations;if(H[0]){const Q=H[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??H[0].currentFrame;const a=0===this.speedRatio?0:(f-this._frameToSyncFromJump)/Q*1e3/this.speedRatio;this._manualJumpDelay=-a}for(let Q=0;Q<H.length;Q++)H[Q].goToFrame(f,this._weight);this._goToFrame=f}get paused(){return this.vf}pause(){this.vf||(this.vf=!0)}restart(){this.vf=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(f,H){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(f||H){const d=this._scene._activeAnimatables.indexOf(this);if(d>-1){const s=this._runtimeAnimations;for(let Q=s.length-1;Q>=0;Q--){const a=s[Q];f&&a.animation.name!=f||(H&&!H(a.target)||(a.dispose(),s.splice(Q,1)))}0==s.length&&(Q||this._scene._activeAnimatables.splice(d,1),a||this._raiseOnAnimationEnd())}}else{const f=this._scene._activeAnimatables.indexOf(this);if(f>-1){Q||this._scene._activeAnimatables.splice(f,1);const H=this._runtimeAnimations;for(let f=0;f<H.length;f++)H[f].dispose();this._runtimeAnimations.length=0,a||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((f=>{this.onAnimationEndObservable.add((()=>{f(this)}),void 0,void 0,this,!0)}))}_animate(f){if(this.vf)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=f),!0;if(null===this._localDelayOffset?(this._localDelayOffset=f,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=f-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let H=!1;const Q=this._runtimeAnimations;let a;for(a=0;a<Q.length;a++){const d=Q[a].animate(f-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);H=H||d}if(this.animationStarted=H,!H){if(this.disposeOnEnd)for(a=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(a,1),a=0;a<Q.length;a++)Q[a].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return H}}function k(f){if(0===f.totalWeight&&0===f.totalAdditiveWeight)return f.originalValue;let H=1;const Q=c.m.Bd[0],a=c.m.Bd[1],d=c.m.Quaternion[0];let s=0;const n=f.animations[0],e=f.originalValue;let J=1,u=!1;if(f.totalWeight<1)J=1-f.totalWeight,e.decompose(a,d,Q);else{if(s=1,H=f.totalWeight,J=n.weight/H,1==J){if(!f.totalAdditiveWeight)return n.currentValue;u=!0}n.currentValue.decompose(a,d,Q)}if(!u){a.scaleInPlace(J),Q.scaleInPlace(J),d.scaleInPlace(J);for(let n=s;n<f.animations.length;n++){const s=f.animations[n];if(0===s.weight)continue;J=s.weight/H;const e=c.m.Bd[2],u=c.m.Bd[3],Y=c.m.Quaternion[1];s.currentValue.decompose(u,Y,e),u.scaleAndAddToRef(J,a),Y.scaleAndAddToRef(c.i.Dot(d,Y)>0?J:-J,d),e.scaleAndAddToRef(J,Q)}d.normalize()}for(let k=0;k<f.additiveAnimations.length;k++){const H=f.additiveAnimations[k];if(0===H.weight)continue;const s=c.m.Bd[2],n=c.m.Bd[3],e=c.m.Quaternion[1];H.currentValue.decompose(n,e,s),n.multiplyToRef(a,n),c.r.LerpToRef(a,n,H.weight,a),d.multiplyToRef(e,e),c.i.SlerpToRef(d,e,H.weight,d),s.scaleAndAddToRef(H.weight,Q)}const Y=n?n._animationState.workValue:c.m.Matrix[0].clone();return c.e.ComposeToRef(a,d,Q,Y),Y}function X(f,H){if(0===f.totalWeight&&0===f.totalAdditiveWeight)return H;const Q=f.animations[0],a=f.originalValue;let d=H;if(0===f.totalWeight&&f.totalAdditiveWeight>0)d.p(a);else if(1===f.animations.length){if(c.i.SlerpToRef(a,Q.currentValue,Math.min(1,f.totalWeight),d),0===f.totalAdditiveWeight)return d}else if(f.animations.length>1){let Q,s,n=1;if(f.totalWeight<1){const H=1-f.totalWeight;Q=[],s=[],Q.push(a),s.push(H)}else{if(2===f.animations.length&&(c.i.SlerpToRef(f.animations[0].currentValue,f.animations[1].currentValue,f.animations[1].weight/f.totalWeight,H),0===f.totalAdditiveWeight))return H;Q=[],s=[],n=f.totalWeight}for(let H=0;H<f.animations.length;H++){const a=f.animations[H];Q.push(a.currentValue),s.push(a.weight/n)}let e=0;for(let f=0;f<Q.length;)f?(e+=s[f],c.i.SlerpToRef(d,Q[f],s[f]/e,d),f++):(c.i.SlerpToRef(Q[f],Q[f+1],s[f+1]/(s[f]+s[f+1]),H),d=H,e=s[f]+s[f+1],f+=2)}for(let s=0;s<f.additiveAnimations.length;s++){const H=f.additiveAnimations[s];0!==H.weight&&(d.multiplyToRef(H.currentValue,c.m.Quaternion[0]),c.i.SlerpToRef(d,c.m.Quaternion[0],H.weight,d))}return d}var F,r,v=Q(1218);F=v.c,(r=e.d)&&(r.prototype.copyAnimationRange=function(f,H,Q){let d=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new a.b(this.name,"_matrix",f.animations[0].framePerSecond,a.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const n=f.animations[0].getRange(H);if(!n)return!1;const e=n.from,c=n.to,J=f.animations[0].getKeys(),u=f.length,Y=f.getParent(),k=this.getParent(),X=d&&Y&&u&&this.length&&u!==this.length,F=X&&k&&Y?k.length/Y.length:1,r=d&&!k&&s&&(1!==s.x||1!==s.y||1!==s.z),v=this.animations[0].getKeys();let S,M,q;for(let a=0,z=J.length;a<z;a++)S=J[a],S.frame>=e&&S.frame<=c&&(d?(q=S.value.clone(),X?(M=q.getTranslation(),q.setTranslation(M.scaleInPlace(F))):r&&s?(M=q.getTranslation(),q.setTranslation(M.multiplyInPlace(s))):q=S.value):q=S.value,v.push({frame:S.frame+Q,value:q}));return this.animations[0].createRange(H,e+Q,c+Q),!0}),F&&(F.prototype._animate=function(f){if(!this.animationsEnabled)return;const H=u.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=H}this.deltaTime=void 0!==f?f:this.useConstantAnimationDeltaTime?16:(H-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=H;const Q=this._activeAnimatables;if(0===Q.length)return;this._animationTime+=this.deltaTime;const d=this._animationTime;for(let a=0;a<Q.length;a++){const f=Q[a];!f._animate(d)&&f.disposeOnEnd&&a--}!function(f){if(f._registeredForLateAnimationBindings.length){for(let H=0;H<f._registeredForLateAnimationBindings.length;H++){const Q=f._registeredForLateAnimationBindings.data[H];for(const f in Q._lateAnimationHolders){const H=Q._lateAnimationHolders[f],d=H.animations[0],s=H.originalValue;if(void 0===s||null===s)continue;const n=a.b.AllowMatrixDecomposeForInterpolation&&s.m;let e=Q[f];if(n)e=k(H);else if(void 0!==s.w)e=X(H,e||c.i.Identity());else{let f=0,Q=1;const n=d&&d._animationState.loopMode===a.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(H.totalWeight<1)e=n?s.clone?s.clone():s:d&&s.scale?s.scale(1-H.totalWeight):d?s*(1-H.totalWeight):s.clone?s.clone():s;else if(d){Q=H.totalWeight;const a=d.weight/Q;e=1!==a?d.currentValue.scale?d.currentValue.scale(a):d.currentValue*a:d.currentValue,n&&(e.addToRef?e.addToRef(s,e):e+=s),f=1}for(let a=f;a<H.animations.length;a++){const f=H.animations[a],d=f.weight/Q;d&&(f.currentValue.scaleAndAddToRef?f.currentValue.scaleAndAddToRef(d,e):e+=f.currentValue*d)}for(let a=0;a<H.additiveAnimations.length;a++){const f=H.additiveAnimations[a],Q=f.weight;Q&&(f.currentValue.scaleAndAddToRef?f.currentValue.scaleAndAddToRef(Q,e):e+=f.currentValue*Q)}}Q[f]=e}Q._lateAnimationHolders={}}f._registeredForLateAnimationBindings.reset()}}(this)},F.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((f,H)=>f.playOrder-H.playOrder))},F.prototype.beginWeightedAnimation=function(f,H,Q){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,d=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,c=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,u=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const Y=this.beginAnimation(f,H,Q,d,s,n,e,!1,c,J,u);return Y.weight=a,Y},F.prototype.beginAnimation=function(f,H,Q,a){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0,e=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],c=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,u=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(d<0){const f=H;H=Q,Q=f,d=-d}H>Q&&(d=-d),e&&this.stopAnimation(f,void 0,c),n||(n=new Y(this,f,H,Q,a,d,s,void 0,J,u));const k=!c||c(f);if(f.animations&&k&&n.appendAnimations(f,f.animations),f.getAnimatables){const u=f.getAnimatables();for(let f=0;f<u.length;f++)this.beginAnimation(u[f],H,Q,a,d,s,n,e,c,J)}return n.reset(),n},F.prototype.beginHierarchyAnimation=function(f,H,Q,a,d){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,c=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=arguments.length>9?arguments[9]:void 0,u=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const Y=f.getDescendants(H),k=[];k.push(this.beginAnimation(f,Q,a,d,s,n,e,c,J,void 0,u));for(const X of Y)k.push(this.beginAnimation(X,Q,a,d,s,n,e,c,J,void 0,u));return k},F.prototype.beginDirectAnimation=function(f,H,Q,a,d){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(s<0){const f=Q;Q=a,a=f,s=-s}return Q>a&&(s=-s),new Y(this,f,Q,a,d,s,arguments.length>6?arguments[6]:void 0,H,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},F.prototype.beginDirectHierarchyAnimation=function(f,H,Q,a,d,s,n,e,c){let J=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const u=f.getDescendants(H),Y=[];Y.push(this.beginDirectAnimation(f,Q,a,d,s,n,e,c,J));for(const k of u)Y.push(this.beginDirectAnimation(k,Q,a,d,s,n,e,c,J));return Y},F.prototype.getAnimatableByTarget=function(f){for(let H=0;H<this._activeAnimatables.length;H++)if(this._activeAnimatables[H].target===f)return this._activeAnimatables[H];return null},F.prototype.getAllAnimatablesByTarget=function(f){const H=[];for(let Q=0;Q<this._activeAnimatables.length;Q++)this._activeAnimatables[Q].target===f&&H.push(this._activeAnimatables[Q]);return H},F.prototype.stopAnimation=function(f,H,Q){const a=this.getAllAnimatablesByTarget(f);for(const d of a)d.stop(H,Q)},F.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let f=0;f<this._activeAnimatables.length;f++)this._activeAnimatables[f].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const f of this.animationGroups)f.stop()});class S{getClassName(){return"TargetedAnimation"}serialize(){const f={};return f.animation=this.animation.serialize(),f.targetId=this.target.id,f}}class M{get mask(){return this._mask}set mask(f){this._mask!==f&&(this._mask=f,this.syncWithMask(!0))}syncWithMask(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||f){this._numActiveAnimatables=0;for(let f=0;f<this._animatables.length;++f){const H=this._animatables[f];!this.mask||this.mask.disabled||this.mask.retainsTarget(H.target.name)?(this._numActiveAnimatables++,H.paused&&H.restart()):H.paused||H.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let f=0;f<this._animatables.length;++f){const H=this._animatables[f];this.mask.retainsTarget(H.target.name)||(H.stop(),this._animatables.splice(f,1),--f)}for(let f=0;f<this._targetedAnimations.length;f++){const H=this._targetedAnimations[f];this.mask.retainsTarget(H.target.name)||(this._targetedAnimations.splice(f,1),--f)}}}get from(){return this._from}set from(f){if(this._from!==f){this._from=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].fromFrame=this._from}}}get to(){return this._to}set to(f){if(this._to!==f){this._to=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(f){if(this._speedRatio!==f){this._speedRatio=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(f){if(this._loopAnimation!==f){this._loopAnimation=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(f){if(this._isAdditive!==f){this._isAdditive=f;for(let f=0;f<this._animatables.length;f++){this._animatables[f].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(f){this._weight!==f&&(this._weight=f,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(f){if(this._playOrder!==f&&(this._playOrder=f,this._animatables.length>0)){for(let f=0;f<this._animatables.length;f++)this._animatables[f].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(f){if(this._enableBlending!==f&&(this._enableBlending=f,null!==f))for(let H=0;H<this._targetedAnimations.length;++H)this._targetedAnimations[H].animation.enableBlending=f}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(f){if(this._blendingSpeed!==f&&(this._blendingSpeed=f,null!==f))for(let H=0;H<this._targetedAnimations.length;++H)this._targetedAnimations[H].animation.blendingSpeed=f}getLength(f,H){f=f??this._from;return((H=H??this._to)-f)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(f){let H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0;if(0===f.length)return null;a=a??f[0].weight;let d=Number.MAX_VALUE,s=-Number.MAX_VALUE;if(Q)for(const e of f)e.from<d&&(d=e.from),e.to>s&&(s=e.to);const n=new M(f[0].name+"_merged",f[0]._scene,a);for(const e of f){Q&&e.normalize(d,s);for(const f of e.targetedAnimations)n.addTargetedAnimation(f.animation,f.target);H&&e.dispose()}return n}constructor(f){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=f,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new d.e,this.onAnimationLoopObservable=new d.e,this.onAnimationGroupLoopObservable=new d.e,this.onAnimationGroupEndObservable=new d.e,this.onAnimationGroupPauseObservable=new d.e,this.onAnimationGroupPlayObservable=new d.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=H||s.d.LastCreatedScene,this._weight=Q,this._playOrder=a,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(f,H){const Q=new S;Q.animation=f,Q.target=H;const a=f.getKeys();return this._from>a[0].frame&&(this._from=a[0].frame),this._to<a[a.length-1].frame&&(this._to=a[a.length-1].frame),null!==this._enableBlending&&(f.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(f.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(Q),this._shouldStart=!0,Q}removeTargetedAnimation(f){for(let H=this._targetedAnimations.length-1;H>-1;H--){this._targetedAnimations[H].animation===f&&this._targetedAnimations.splice(H,1)}}normalize(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==f&&(f=this._from),null==H&&(H=this._to);for(let Q=0;Q<this._targetedAnimations.length;Q++){const a=this._targetedAnimations[Q].animation.getKeys(),d=a[0],s=a[a.length-1];if(d.frame>f){const H={frame:f,value:d.value,inTangent:d.inTangent,outTangent:d.outTangent,interpolation:d.interpolation};a.splice(0,0,H)}if(s.frame<H){const f={frame:H,value:s.value,inTangent:s.inTangent,outTangent:s.outTangent,interpolation:s.interpolation};a.push(f)}}return this._from=f,this._to=H,this}_processLoop(f,H,Q){f.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(H),this._animationLoopFlags[Q]||(this._animationLoopFlags[Q]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0],H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Q=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,d=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=f,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let s=0;s<this._targetedAnimations.length;s++){const n=this._targetedAnimations[s],e=this._scene.beginDirectAnimation(n.target,[n.animation],void 0!==Q?Q:this._from,void 0!==a?a:this._to,f,H,void 0,void 0,void 0!==d?d:this._isAdditive);e.weight=this._weight,e.playOrder=this._playOrder,e.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(n),this._checkAnimationGroupEnded(e)},this._processLoop(e,n,s),this._animatables.push(e)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=H,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let f=0;f<this._animatables.length;f++){this._animatables[f].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(f){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==f&&(this.loopAnimation=f),this.restart()):(this.stop(),this.start(f,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let f=0;f<this._animatables.length;f++){this._animatables[f].reset()}return this}restart(){if(!this._isStarted)return this;for(let f=0;f<this._animatables.length;f++){this._animatables[f].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let f=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const H=this._animatables.slice();for(let a=0;a<H.length;a++)H[a].stop(void 0,void 0,!0,f);let Q=0;for(let a=0;a<this._scene._activeAnimatables.length;a++){const H=this._scene._activeAnimatables[a];H._runtimeAnimations.length>0?this._scene._activeAnimatables[Q++]=H:f&&this._checkAnimationGroupEnded(H,f)}return this._scene._activeAnimatables.length=Q,this._isStarted=!1,this}setWeightForAllAnimatables(f){for(let H=0;H<this._animatables.length;H++){this._animatables[H].weight=f}return this}syncAllAnimationsWith(f){for(let H=0;H<this._animatables.length;H++){this._animatables[H].syncWith(f)}return this}goToFrame(f){if(!this._isStarted)return this;for(let H=0;H<this._animatables.length;H++){this._animatables[H].goToFrame(f)}return this}getCurrentFrame(){var f;return(null===(f=this.animatables[0])||void 0===f?void 0:f.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const f=this._scene.animationGroups.indexOf(this);if(f>-1&&this._scene.animationGroups.splice(f,1),this._parentContainer){const f=this._parentContainer.animationGroups.indexOf(this);f>-1&&this._parentContainer.animationGroups.splice(f,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(f){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=this._animatables.indexOf(f);Q>-1&&this._animatables.splice(Q,1),0===this._animatables.length&&(this._isStarted=!1,H||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(f,H){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=new M(f||this.name,this._scene,this._weight,this._playOrder);a._from=this.from,a._to=this.to,a._speedRatio=this.speedRatio,a._loopAnimation=this.loopAnimation,a._isAdditive=this.isAdditive,a._enableBlending=this.enableBlending,a._blendingSpeed=this.blendingSpeed,a.metadata=this.metadata,a.mask=this.mask;for(const d of this._targetedAnimations)a.addTargetedAnimation(Q?d.animation.clone():d.animation,H?H(d.target):d.target);return a}serialize(){const f={};f.name=this.name,f.from=this.from,f.to=this.to,f.speedRatio=this.speedRatio,f.loopAnimation=this.loopAnimation,f.isAdditive=this.isAdditive,f.weight=this.weight,f.playOrder=this.playOrder,f.enableBlending=this.enableBlending,f.blendingSpeed=this.blendingSpeed,f.targetedAnimations=[];for(let H=0;H<this.targetedAnimations.length;H++){const Q=this.targetedAnimations[H];f.targetedAnimations[H]=Q.serialize()}return n.e&&n.e.HasTags(this)&&(f.tags=n.e.GetTags(this)),this.metadata&&(f.metadata=this.metadata),f}static Parse(f,H){const Q=new M(f.name,H,f.weight,f.playOrder);for(let d=0;d<f.targetedAnimations.length;d++){const s=f.targetedAnimations[d],n=a.b.Parse(s.animation),e=s.targetId;if("influence"===s.animation.property){const f=H.getMorphTargetById(e);f&&Q.addTargetedAnimation(n,f)}else{const f=H.getNodeById(e);null!=f&&Q.addTargetedAnimation(n,f)}}return n.e&&n.e.AddTagsTo(Q,f.tags),null!==f.from&&null!==f.to&&Q.normalize(f.from,f.to),void 0!==f.speedRatio&&(Q._speedRatio=f.speedRatio),void 0!==f.loopAnimation&&(Q._loopAnimation=f.loopAnimation),void 0!==f.isAdditive&&(Q._isAdditive=f.isAdditive),void 0!==f.weight&&(Q._weight=f.weight),void 0!==f.playOrder&&(Q._playOrder=f.playOrder),void 0!==f.enableBlending&&(Q._enableBlending=f.enableBlending),void 0!==f.blendingSpeed&&(Q._blendingSpeed=f.blendingSpeed),void 0!==f.metadata&&(Q.metadata=f.metadata),Q}static MakeAnimationAdditive(f,H,Q){let d;d="object"===typeof H?H:{referenceFrame:H,range:Q,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let s=f;d.cloneOriginalAnimationGroup&&(s=f.clone(d.clonedAnimationGroupName||s.name));const n=s.targetedAnimations;for(let e=0;e<n.length;e++){const f=n[e];f.animation=a.b.MakeAnimationAdditive(f.animation,d)}if(s.isAdditive=!0,d.clipKeys){let f=Number.MAX_VALUE,H=-Number.MAX_VALUE;const Q=s.targetedAnimations;for(let a=0;a<Q.length;a++){const d=Q[a].animation.getKeys();f>d[0].frame&&(f=d[0].frame),H<d[d.length-1].frame&&(H=d[d.length-1].frame)}s._from=f,s._to=H}return s}static ClipKeys(f,H,Q,a,d){const s=f.clone(a||f.name);return M.ClipKeysInPlace(s,H,Q,d)}static ClipKeysInPlace(f,H,Q,a){return M.ClipInPlace(f,H,Q,a,!1)}static ClipFrames(f,H,Q,a,d){const s=f.clone(a||f.name);return M.ClipFramesInPlace(s,H,Q,d)}static ClipFramesInPlace(f,H,Q,a){return M.ClipInPlace(f,H,Q,a,!0)}static ClipInPlace(f,H,Q,a){let d=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=Number.MAX_VALUE,n=-Number.MAX_VALUE;const e=f.targetedAnimations;for(let c=0;c<e.length;c++){const f=e[c],J=a?f.animation:f.animation.clone();d&&(J.createKeyForFrame(H),J.createKeyForFrame(Q));const u=J.getKeys(),Y=[];let k=Number.MAX_VALUE;for(let a=0;a<u.length;a++){const f=u[a];if(!d&&a>=H&&a<=Q||d&&f.frame>=H&&f.frame<=Q){const H={frame:f.frame,value:f.value.clone?f.value.clone():f.value,inTangent:f.inTangent,outTangent:f.outTangent,interpolation:f.interpolation,lockedTangent:f.lockedTangent};k===Number.MAX_VALUE&&(k=H.frame),H.frame-=k,Y.push(H)}}0!==Y.length?(s>Y[0].frame&&(s=Y[0].frame),n<Y[Y.length-1].frame&&(n=Y[Y.length-1].frame),J.setKeys(Y,!0),f.animation=J):(e.splice(c,1),c--)}return f._from=s,f._to=n,f}getClassName(){return"AnimationGroup"}toString(f){let H="Name: "+this.name;return H+=", type: "+this.getClassName(),f&&(H+=", from: "+this._from,H+=", to: "+this._to,H+=", isStarted: "+this._isStarted,H+=", speedRatio: "+this._speedRatio,H+=", targetedAnimations length: "+this._targetedAnimations.length,H+=", animatables length: "+this._animatables),H}}}}]);