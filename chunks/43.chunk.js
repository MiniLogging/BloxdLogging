"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{13143:(Q,z,I)=>{I.r(z),I.d(z,{AnimationGroup:()=>d,TargetedAnimation:()=>n});var P=I(12501),w=I(978),T=I(1012),A=I(1133),e=I(12499),m=I(984);class f{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(Q,z,I,w){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=z,this._target=Q,this._scene=I,this._host=w,this._activeTargets=[],z._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===P.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=m.d.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const Q={frame:0,value:this._minValue};this._keys.splice(0,0,Q)}if(this._target instanceof Array){let Q=0;for(const z of this._target)this._preparePath(z,Q),this._getOriginalValues(Q),Q++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const T=z.getEvents();T&&T.length>0&&T.forEach((Q=>{this._events.push(Q._clone())})),this._enableBlending=Q&&Q.animationPropertiesOverride?Q.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(Q){let z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const I=this._animation.targetPropertyPath;if(I.length>1){let P=Q;for(let Q=0;Q<I.length-1;Q++){const z=I[Q];if(P=P[z],void 0===P)throw new Error(`Invalid property (${z}) in property path (${I.join(".")})`)}this._targetPath=I[I.length-1],this._activeTargets[z]=P}else this._targetPath=I[0],this._activeTargets[z]=Q;if(void 0===this._activeTargets[z][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${I.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let Q=0;for(const z of this._target)void 0!==this._originalValue[Q]&&this._setValue(z,this._activeTargets[Q],this._originalValue[Q],-1,Q),Q++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let Q=0;Q<this._events.length;Q++)this._events[Q].isDone=!1}isStopped(){return this._stopped}dispose(){const Q=this._animation.runtimeAnimations.indexOf(this);Q>-1&&this._animation.runtimeAnimations.splice(Q,1)}setValue(Q,z){if(this._targetIsArray)for(let I=0;I<this._target.length;I++){const P=this._target[I];this._setValue(P,this._activeTargets[I],Q,z,I)}else this._setValue(this._target,this._directTarget,Q,z,0)}_getOriginalValues(){let Q,z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const I=this._activeTargets[z];Q=I.getLocalMatrix&&"_matrix"===this._targetPath?I.getLocalMatrix():I[this._targetPath],Q&&Q.clone?this._originalValue[z]=Q.clone():this._originalValue[z]=Q}_registerTargetForLateAnimationBinding(Q,z){const I=Q.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(I),I._lateAnimationHolders||(I._lateAnimationHolders={}),I._lateAnimationHolders[Q.targetPath]||(I._lateAnimationHolders[Q.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:z}),Q.isAdditive?(I._lateAnimationHolders[Q.targetPath].additiveAnimations.push(Q),I._lateAnimationHolders[Q.targetPath].totalAdditiveWeight+=Q.weight):(I._lateAnimationHolders[Q.targetPath].animations.push(Q),I._lateAnimationHolders[Q.targetPath].totalWeight+=Q.weight)}_setValue(Q,z,I,w,T){if(this._currentActiveTarget=z,this._weight=w,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const Q=z[this._targetPath];Q.clone?this._originalBlendValue=Q.clone():this._originalBlendValue=Q}this._originalBlendValue.m?P.e.AllowMatrixDecomposeForInterpolation?this._currentValue?m.d.DecomposeLerpToRef(this._originalBlendValue,I,this._blendingFactor,this._currentValue):this._currentValue=m.d.DecomposeLerp(this._originalBlendValue,I,this._blendingFactor):this._currentValue?m.d.LerpToRef(this._originalBlendValue,I,this._blendingFactor,this._currentValue):this._currentValue=m.d.Lerp(this._originalBlendValue,I,this._blendingFactor):this._currentValue=P.e._UniversalLerp(this._originalBlendValue,I,this._blendingFactor);const w=Q&&Q.animationPropertiesOverride?Q.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=w}else this._currentValue?this._currentValue.p?this._currentValue.p(I):this._currentValue=I:null!==I&&void 0!==I&&I.clone?this._currentValue=I.clone():this._currentValue=I;-1!==w?this._registerTargetForLateAnimationBinding(this,this._originalValue[T]):this._animationState.loopMode===P.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[T],z[this._targetPath]):z[this._targetPath]=this._originalValue[T]+this._currentValue:z[this._targetPath]=this._currentValue,Q.ye&&Q.ye(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(Q){let z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const I=this._animation.getKeys();Q<I[0].frame?Q=I[0].frame:Q>I[I.length-1].frame&&(Q=I[I.length-1].frame);const P=this._events;if(P.length)for(let T=0;T<P.length;T++)P[T].onlyOnce||(P[T].isDone=P[T].frame<Q);this._currentFrame=Q;const w=this._animation._interpolate(Q,this._animationState);this.setValue(w,z)}_prepareForSpeedRatioChange(Q){const z=this._previousElapsedTime*(this._animation.framePerSecond*Q)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-z}animate(Q,z,I,w,T){let A=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const e=this._animation,m=e.targetPropertyPath;if(!m||m.length<1)return this._stopped=!0,!1;let f=!0;(z<this._minFrame||z>this._maxFrame)&&(z=this._minFrame),(I<this._minFrame||I>this._maxFrame)&&(I=this._maxFrame);const j=I-z;let D,k=Q*(e.framePerSecond*T)/1e3+this._absoluteFrameOffset,s=0,J=!1;const l=w&&this._animationState.loopMode===P.e.ANIMATIONLOOPMODE_YOYO;if(l){const Q=(k-z)/j,I=Math.sin(Q*Math.PI);k=Math.abs(I)*j+z;const P=I>=0?1:-1;this._yoyoDirection!==P&&(J=!0),this._yoyoDirection=P}if(this._previousElapsedTime=Q,this._previousAbsoluteFrame=k,!w&&I>=z&&(k>=j&&T>0||k<=0&&T<0))f=!1,s=e._getKeyValue(this._maxValue);else if(!w&&z>=I&&(k<=j&&T<0||k>=0&&T>0))f=!1,s=e._getKeyValue(this._minValue);else if(this._animationState.loopMode!==P.e.ANIMATIONLOOPMODE_CYCLE){const Q=I.toString()+z.toString();if(!this._offsetsCache[Q]){this._animationState.repeatCount=0,this._animationState.loopMode=P.e.ANIMATIONLOOPMODE_CYCLE;const w=e._interpolate(z,this._animationState),T=e._interpolate(I,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),e.dataType){case P.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[Q]=T-w;break;case P.e.ANIMATIONTYPE_QUATERNION:case P.e.ANIMATIONTYPE_VECTOR3:case P.e.ANIMATIONTYPE_VECTOR2:case P.e.ANIMATIONTYPE_SIZE:case P.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[Q]=T.Dc(w)}this._highLimitsCache[Q]=T}s=this._highLimitsCache[Q],D=this._offsetsCache[Q]}if(void 0===D)switch(e.dataType){case P.e.ANIMATIONTYPE_FLOAT:D=0;break;case P.e.ANIMATIONTYPE_QUATERNION:D=P.m;break;case P.e.ANIMATIONTYPE_VECTOR3:D=P.u;break;case P.e.ANIMATIONTYPE_VECTOR2:D=P.s;break;case P.e.ANIMATIONTYPE_SIZE:D=P.p;break;case P.e.ANIMATIONTYPE_COLOR3:D=P.f;break;case P.e.ANIMATIONTYPE_COLOR4:D=P.j}let X;if(this._host&&this._host.syncRoot){const Q=this._host.syncRoot;X=z+j*((Q.masterFrame-Q.fromFrame)/(Q.toFrame-Q.fromFrame))}else X=k>0&&z>I||k<0&&z<I?f&&0!==j?I+k%j:z:f&&0!==j?z+k%j:I;const n=this._events;if(!l&&(T>0&&this.currentFrame>X||T<0&&this.currentFrame<X)||l&&J){this._onLoop();for(let Q=0;Q<n.length;Q++)n[Q].onlyOnce||(n[Q].isDone=!1);this._animationState.key=T>0?0:e.getKeys().length-1}this._currentFrame=X,this._animationState.repeatCount=0===j?0:k/j|0,this._animationState.highLimitValue=s,this._animationState.offsetValue=D;const d=e._interpolate(X,this._animationState);if(this.setValue(d,A),n.length)for(let P=0;P<n.length;P++)if(j>=0&&X>=n[P].frame&&n[P].frame>=z||j<0&&X<=n[P].frame&&n[P].frame<=z){const Q=n[P];Q.isDone||(Q.onlyOnce&&(n.splice(P,1),P--),Q.isDone=!0,Q.action(X))}return f||(this._stopped=!0),f}}var j=I(1099);class D{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(Q){this._weight=-1!==Q?Math.min(Math.max(Q,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(Q){for(let z=0;z<this._runtimeAnimations.length;z++){this._runtimeAnimations[z]._prepareForSpeedRatioChange(Q)}this._speedRatio=Q,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(Q,z){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,T=arguments.length>4&&void 0!==arguments[4]&&arguments[4],A=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6?arguments[6]:void 0,m=arguments.length>7?arguments[7]:void 0,f=arguments.length>8?arguments[8]:void 0,j=arguments.length>9&&void 0!==arguments[9]&&arguments[9],D=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=z,this.fromFrame=I,this.toFrame=P,this.loopAnimation=T,this.onAnimationEnd=e,this.onAnimationLoop=f,this.isAdditive=j,this.playOrder=D,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.rf=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new w.b,this.onAnimationLoopObservable=new w.b,this._scene=Q,m&&this.appendAnimations(z,m),this._speedRatio=A,Q._activeAnimatables.push(this)}syncWith(Q){if(this._syncRoot=Q,Q){const Q=this._scene._activeAnimatables.indexOf(this);Q>-1&&(this._scene._activeAnimatables.splice(Q,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(Q,z){for(let I=0;I<z.length;I++){const P=z[I],w=new f(Q,P,this._scene,this);w._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(w)}}getAnimationByTargetProperty(Q){const z=this._runtimeAnimations;for(let I=0;I<z.length;I++)if(z[I].animation.targetProperty===Q)return z[I].animation;return null}getRuntimeAnimationByTargetProperty(Q){const z=this._runtimeAnimations;for(let I=0;I<z.length;I++)if(z[I].animation.targetProperty===Q)return z[I];return null}reset(){const Q=this._runtimeAnimations;for(let z=0;z<Q.length;z++)Q[z].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(Q){const z=this._runtimeAnimations;for(let I=0;I<z.length;I++)z[I].animation.enableBlending=!0,z[I].animation.blendingSpeed=Q}disableBlending(){const Q=this._runtimeAnimations;for(let z=0;z<Q.length;z++)Q[z].animation.enableBlending=!1}goToFrame(Q){const z=this._runtimeAnimations;if(z[0]){const I=z[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??z[0].currentFrame;const P=0===this.speedRatio?0:(Q-this._frameToSyncFromJump)/I*1e3/this.speedRatio;this._manualJumpDelay=-P}for(let I=0;I<z.length;I++)z[I].goToFrame(Q,this._weight);this._goToFrame=Q}get paused(){return this.rf}pause(){this.rf||(this.rf=!0)}restart(){this.rf=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(Q,z){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Q||z){const w=this._scene._activeAnimatables.indexOf(this);if(w>-1){const T=this._runtimeAnimations;for(let I=T.length-1;I>=0;I--){const P=T[I];Q&&P.animation.name!=Q||(z&&!z(P.target)||(P.dispose(),T.splice(I,1)))}0==T.length&&(I||this._scene._activeAnimatables.splice(w,1),P||this._raiseOnAnimationEnd())}}else{const Q=this._scene._activeAnimatables.indexOf(this);if(Q>-1){I||this._scene._activeAnimatables.splice(Q,1);const z=this._runtimeAnimations;for(let Q=0;Q<z.length;Q++)z[Q].dispose();this._runtimeAnimations.length=0,P||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((Q=>{this.onAnimationEndObservable.add((()=>{Q(this)}),void 0,void 0,this,!0)}))}_animate(Q){if(this.rf)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=Q),!0;if(null===this._localDelayOffset?(this._localDelayOffset=Q,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=Q-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let z=!1;const I=this._runtimeAnimations;let P;for(P=0;P<I.length;P++){const w=I[P].animate(Q-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);z=z||w}if(this.animationStarted=z,!z){if(this.disposeOnEnd)for(P=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(P,1),P=0;P<I.length;P++)I[P].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return z}}function k(Q){if(0===Q.totalWeight&&0===Q.totalAdditiveWeight)return Q.originalValue;let z=1;const I=m.i.yd[0],P=m.i.yd[1],w=m.i.Quaternion[0];let T=0;const A=Q.animations[0],e=Q.originalValue;let f=1,j=!1;if(Q.totalWeight<1)f=1-Q.totalWeight,e.decompose(P,w,I);else{if(T=1,z=Q.totalWeight,f=A.weight/z,1==f){if(!Q.totalAdditiveWeight)return A.currentValue;j=!0}A.currentValue.decompose(P,w,I)}if(!j){P.scaleInPlace(f),I.scaleInPlace(f),w.scaleInPlace(f);for(let A=T;A<Q.animations.length;A++){const T=Q.animations[A];if(0===T.weight)continue;f=T.weight/z;const e=m.i.yd[2],j=m.i.yd[3],D=m.i.Quaternion[1];T.currentValue.decompose(j,D,e),j.scaleAndAddToRef(f,P),D.scaleAndAddToRef(m.e.Dot(w,D)>0?f:-f,w),e.scaleAndAddToRef(f,I)}w.normalize()}for(let k=0;k<Q.additiveAnimations.length;k++){const z=Q.additiveAnimations[k];if(0===z.weight)continue;const T=m.i.yd[2],A=m.i.yd[3],e=m.i.Quaternion[1];z.currentValue.decompose(A,e,T),A.multiplyToRef(P,A),m.o.LerpToRef(P,A,z.weight,P),w.multiplyToRef(e,e),m.e.SlerpToRef(w,e,z.weight,w),T.scaleAndAddToRef(z.weight,I)}const D=A?A._animationState.workValue:m.i.Matrix[0].clone();return m.d.ComposeToRef(P,w,I,D),D}function s(Q,z){if(0===Q.totalWeight&&0===Q.totalAdditiveWeight)return z;const I=Q.animations[0],P=Q.originalValue;let w=z;if(0===Q.totalWeight&&Q.totalAdditiveWeight>0)w.p(P);else if(1===Q.animations.length){if(m.e.SlerpToRef(P,I.currentValue,Math.min(1,Q.totalWeight),w),0===Q.totalAdditiveWeight)return w}else if(Q.animations.length>1){let I,T,A=1;if(Q.totalWeight<1){const z=1-Q.totalWeight;I=[],T=[],I.push(P),T.push(z)}else{if(2===Q.animations.length&&(m.e.SlerpToRef(Q.animations[0].currentValue,Q.animations[1].currentValue,Q.animations[1].weight/Q.totalWeight,z),0===Q.totalAdditiveWeight))return z;I=[],T=[],A=Q.totalWeight}for(let z=0;z<Q.animations.length;z++){const P=Q.animations[z];I.push(P.currentValue),T.push(P.weight/A)}let e=0;for(let Q=0;Q<I.length;)Q?(e+=T[Q],m.e.SlerpToRef(w,I[Q],T[Q]/e,w),Q++):(m.e.SlerpToRef(I[Q],I[Q+1],T[Q+1]/(T[Q]+T[Q+1]),z),w=z,e=T[Q]+T[Q+1],Q+=2)}for(let T=0;T<Q.additiveAnimations.length;T++){const z=Q.additiveAnimations[T];0!==z.weight&&(w.multiplyToRef(z.currentValue,m.i.Quaternion[0]),m.e.SlerpToRef(w,m.i.Quaternion[0],z.weight,w))}return w}var J,l,X=I(1175);J=X.e,(l=e.b)&&(l.prototype.copyAnimationRange=function(Q,z,I){let w=arguments.length>3&&void 0!==arguments[3]&&arguments[3],T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new P.e(this.name,"_matrix",Q.animations[0].framePerSecond,P.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const A=Q.animations[0].getRange(z);if(!A)return!1;const e=A.from,m=A.to,f=Q.animations[0].getKeys(),j=Q.length,D=Q.getParent(),k=this.getParent(),s=w&&D&&j&&this.length&&j!==this.length,J=s&&k&&D?k.length/D.length:1,l=w&&!k&&T&&(1!==T.x||1!==T.y||1!==T.z),X=this.animations[0].getKeys();let n,d,K;for(let P=0,N=f.length;P<N;P++)n=f[P],n.frame>=e&&n.frame<=m&&(w?(K=n.value.clone(),s?(d=K.getTranslation(),K.setTranslation(d.scaleInPlace(J))):l&&T?(d=K.getTranslation(),K.setTranslation(d.multiplyInPlace(T))):K=n.value):K=n.value,X.push({frame:n.frame+I,value:K}));return this.animations[0].createRange(z,e+I,m+I),!0}),J&&(J.prototype._animate=function(Q){if(!this.animationsEnabled)return;const z=j.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=z}this.deltaTime=void 0!==Q?Q:this.useConstantAnimationDeltaTime?16:(z-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=z;const I=this._activeAnimatables;if(0===I.length)return;this._animationTime+=this.deltaTime;const w=this._animationTime;for(let P=0;P<I.length;P++){const Q=I[P];!Q._animate(w)&&Q.disposeOnEnd&&P--}!function(Q){if(Q._registeredForLateAnimationBindings.length){for(let z=0;z<Q._registeredForLateAnimationBindings.length;z++){const I=Q._registeredForLateAnimationBindings.data[z];for(const Q in I._lateAnimationHolders){const z=I._lateAnimationHolders[Q],w=z.animations[0],T=z.originalValue;if(void 0===T||null===T)continue;const A=P.e.AllowMatrixDecomposeForInterpolation&&T.m;let e=I[Q];if(A)e=k(z);else if(void 0!==T.w)e=s(z,e||m.e.Identity());else{let Q=0,I=1;const A=w&&w._animationState.loopMode===P.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(z.totalWeight<1)e=A?T.clone?T.clone():T:w&&T.scale?T.scale(1-z.totalWeight):w?T*(1-z.totalWeight):T.clone?T.clone():T;else if(w){I=z.totalWeight;const P=w.weight/I;e=1!==P?w.currentValue.scale?w.currentValue.scale(P):w.currentValue*P:w.currentValue,A&&(e.addToRef?e.addToRef(T,e):e+=T),Q=1}for(let P=Q;P<z.animations.length;P++){const Q=z.animations[P],w=Q.weight/I;w&&(Q.currentValue.scaleAndAddToRef?Q.currentValue.scaleAndAddToRef(w,e):e+=Q.currentValue*w)}for(let P=0;P<z.additiveAnimations.length;P++){const Q=z.additiveAnimations[P],I=Q.weight;I&&(Q.currentValue.scaleAndAddToRef?Q.currentValue.scaleAndAddToRef(I,e):e+=Q.currentValue*I)}}I[Q]=e}I._lateAnimationHolders={}}Q._registeredForLateAnimationBindings.reset()}}(this)},J.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((Q,z)=>Q.playOrder-z.playOrder))},J.prototype.beginWeightedAnimation=function(Q,z,I){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,w=arguments.length>4?arguments[4]:void 0,T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,A=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,m=arguments.length>8?arguments[8]:void 0,f=arguments.length>9?arguments[9]:void 0,j=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const D=this.beginAnimation(Q,z,I,w,T,A,e,!1,m,f,j);return D.weight=P,D},J.prototype.beginAnimation=function(Q,z,I,P){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,T=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0,e=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],m=arguments.length>8?arguments[8]:void 0,f=arguments.length>9?arguments[9]:void 0,j=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(w<0){const Q=z;z=I,I=Q,w=-w}z>I&&(w=-w),e&&this.stopAnimation(Q,void 0,m),A||(A=new D(this,Q,z,I,P,w,T,void 0,f,j));const k=!m||m(Q);if(Q.animations&&k&&A.appendAnimations(Q,Q.animations),Q.getAnimatables){const j=Q.getAnimatables();for(let Q=0;Q<j.length;Q++)this.beginAnimation(j[Q],z,I,P,w,T,A,e,m,f)}return A.reset(),A},J.prototype.beginHierarchyAnimation=function(Q,z,I,P,w){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,A=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,m=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],f=arguments.length>9?arguments[9]:void 0,j=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const D=Q.getDescendants(z),k=[];k.push(this.beginAnimation(Q,I,P,w,T,A,e,m,f,void 0,j));for(const s of D)k.push(this.beginAnimation(s,I,P,w,T,A,e,m,f,void 0,j));return k},J.prototype.beginDirectAnimation=function(Q,z,I,P,w){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(T<0){const Q=I;I=P,P=Q,T=-T}return I>P&&(T=-T),new D(this,Q,I,P,w,T,arguments.length>6?arguments[6]:void 0,z,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},J.prototype.beginDirectHierarchyAnimation=function(Q,z,I,P,w,T,A,e,m){let f=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const j=Q.getDescendants(z),D=[];D.push(this.beginDirectAnimation(Q,I,P,w,T,A,e,m,f));for(const k of j)D.push(this.beginDirectAnimation(k,I,P,w,T,A,e,m,f));return D},J.prototype.getAnimatableByTarget=function(Q){for(let z=0;z<this._activeAnimatables.length;z++)if(this._activeAnimatables[z].target===Q)return this._activeAnimatables[z];return null},J.prototype.getAllAnimatablesByTarget=function(Q){const z=[];for(let I=0;I<this._activeAnimatables.length;I++)this._activeAnimatables[I].target===Q&&z.push(this._activeAnimatables[I]);return z},J.prototype.stopAnimation=function(Q,z,I){const P=this.getAllAnimatablesByTarget(Q);for(const w of P)w.stop(z,I)},J.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let Q=0;Q<this._activeAnimatables.length;Q++)this._activeAnimatables[Q].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const Q of this.animationGroups)Q.stop()});class n{getClassName(){return"TargetedAnimation"}serialize(){const Q={};return Q.animation=this.animation.serialize(),Q.targetId=this.target.id,Q}}class d{get mask(){return this._mask}set mask(Q){this._mask!==Q&&(this._mask=Q,this.syncWithMask(!0))}syncWithMask(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||Q){this._numActiveAnimatables=0;for(let Q=0;Q<this._animatables.length;++Q){const z=this._animatables[Q];!this.mask||this.mask.disabled||this.mask.retainsTarget(z.target.name)?(this._numActiveAnimatables++,z.paused&&z.restart()):z.paused||z.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let Q=0;Q<this._animatables.length;++Q){const z=this._animatables[Q];this.mask.retainsTarget(z.target.name)||(z.stop(),this._animatables.splice(Q,1),--Q)}for(let Q=0;Q<this._targetedAnimations.length;Q++){const z=this._targetedAnimations[Q];this.mask.retainsTarget(z.target.name)||(this._targetedAnimations.splice(Q,1),--Q)}}}get from(){return this._from}set from(Q){if(this._from!==Q){this._from=Q;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].fromFrame=this._from}}}get to(){return this._to}set to(Q){if(this._to!==Q){this._to=Q;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(Q){if(this._speedRatio!==Q){this._speedRatio=Q;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(Q){if(this._loopAnimation!==Q){this._loopAnimation=Q;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(Q){if(this._isAdditive!==Q){this._isAdditive=Q;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(Q){this._weight!==Q&&(this._weight=Q,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(Q){if(this._playOrder!==Q&&(this._playOrder=Q,this._animatables.length>0)){for(let Q=0;Q<this._animatables.length;Q++)this._animatables[Q].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(Q){if(this._enableBlending!==Q&&(this._enableBlending=Q,null!==Q))for(let z=0;z<this._targetedAnimations.length;++z)this._targetedAnimations[z].animation.enableBlending=Q}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(Q){if(this._blendingSpeed!==Q&&(this._blendingSpeed=Q,null!==Q))for(let z=0;z<this._targetedAnimations.length;++z)this._targetedAnimations[z].animation.blendingSpeed=Q}getLength(Q,z){Q=Q??this._from;return((z=z??this._to)-Q)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(Q){let z=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],I=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3?arguments[3]:void 0;if(0===Q.length)return null;P=P??Q[0].weight;let w=Number.MAX_VALUE,T=-Number.MAX_VALUE;if(I)for(const e of Q)e.from<w&&(w=e.from),e.to>T&&(T=e.to);const A=new d(Q[0].name+"_merged",Q[0]._scene,P);for(const e of Q){I&&e.normalize(w,T);for(const Q of e.targetedAnimations)A.addTargetedAnimation(Q.animation,Q.target);z&&e.dispose()}return A}constructor(Q){let z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=Q,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new w.b,this.onAnimationLoopObservable=new w.b,this.onAnimationGroupLoopObservable=new w.b,this.onAnimationGroupEndObservable=new w.b,this.onAnimationGroupPauseObservable=new w.b,this.onAnimationGroupPlayObservable=new w.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=z||T.d.LastCreatedScene,this._weight=I,this._playOrder=P,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(Q,z){const I=new n;I.animation=Q,I.target=z;const P=Q.getKeys();return this._from>P[0].frame&&(this._from=P[0].frame),this._to<P[P.length-1].frame&&(this._to=P[P.length-1].frame),null!==this._enableBlending&&(Q.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(Q.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(I),this._shouldStart=!0,I}removeTargetedAnimation(Q){for(let z=this._targetedAnimations.length-1;z>-1;z--){this._targetedAnimations[z].animation===Q&&this._targetedAnimations.splice(z,1)}}normalize(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==Q&&(Q=this._from),null==z&&(z=this._to);for(let I=0;I<this._targetedAnimations.length;I++){const P=this._targetedAnimations[I].animation.getKeys(),w=P[0],T=P[P.length-1];if(w.frame>Q){const z={frame:Q,value:w.value,inTangent:w.inTangent,outTangent:w.outTangent,interpolation:w.interpolation};P.splice(0,0,z)}if(T.frame<z){const Q={frame:z,value:T.value,inTangent:T.inTangent,outTangent:T.outTangent,interpolation:T.interpolation};P.push(Q)}}return this._from=Q,this._to=z,this}_processLoop(Q,z,I){Q.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(z),this._animationLoopFlags[I]||(this._animationLoopFlags[I]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0],z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,I=arguments.length>2?arguments[2]:void 0,P=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=Q,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let T=0;T<this._targetedAnimations.length;T++){const A=this._targetedAnimations[T],e=this._scene.beginDirectAnimation(A.target,[A.animation],void 0!==I?I:this._from,void 0!==P?P:this._to,Q,z,void 0,void 0,void 0!==w?w:this._isAdditive);e.weight=this._weight,e.playOrder=this._playOrder,e.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(A),this._checkAnimationGroupEnded(e)},this._processLoop(e,A,T),this._animatables.push(e)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=z,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(Q){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==Q&&(this.loopAnimation=Q),this.restart()):(this.stop(),this.start(Q,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].reset()}return this}restart(){if(!this._isStarted)return this;for(let Q=0;Q<this._animatables.length;Q++){this._animatables[Q].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const z=this._animatables.slice();for(let P=0;P<z.length;P++)z[P].stop(void 0,void 0,!0,Q);let I=0;for(let P=0;P<this._scene._activeAnimatables.length;P++){const z=this._scene._activeAnimatables[P];z._runtimeAnimations.length>0?this._scene._activeAnimatables[I++]=z:Q&&this._checkAnimationGroupEnded(z,Q)}return this._scene._activeAnimatables.length=I,this._isStarted=!1,this}setWeightForAllAnimatables(Q){for(let z=0;z<this._animatables.length;z++){this._animatables[z].weight=Q}return this}syncAllAnimationsWith(Q){for(let z=0;z<this._animatables.length;z++){this._animatables[z].syncWith(Q)}return this}goToFrame(Q){if(!this._isStarted)return this;for(let z=0;z<this._animatables.length;z++){this._animatables[z].goToFrame(Q)}return this}getCurrentFrame(){var Q;return(null===(Q=this.animatables[0])||void 0===Q?void 0:Q.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const Q=this._scene.animationGroups.indexOf(this);if(Q>-1&&this._scene.animationGroups.splice(Q,1),this._parentContainer){const Q=this._parentContainer.animationGroups.indexOf(this);Q>-1&&this._parentContainer.animationGroups.splice(Q,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(Q){let z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const I=this._animatables.indexOf(Q);I>-1&&this._animatables.splice(I,1),0===this._animatables.length&&(this._isStarted=!1,z||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(Q,z){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const P=new d(Q||this.name,this._scene,this._weight,this._playOrder);P._from=this.from,P._to=this.to,P._speedRatio=this.speedRatio,P._loopAnimation=this.loopAnimation,P._isAdditive=this.isAdditive,P._enableBlending=this.enableBlending,P._blendingSpeed=this.blendingSpeed,P.metadata=this.metadata,P.mask=this.mask;for(const w of this._targetedAnimations)P.addTargetedAnimation(I?w.animation.clone():w.animation,z?z(w.target):w.target);return P}serialize(){const Q={};Q.name=this.name,Q.from=this.from,Q.to=this.to,Q.speedRatio=this.speedRatio,Q.loopAnimation=this.loopAnimation,Q.isAdditive=this.isAdditive,Q.weight=this.weight,Q.playOrder=this.playOrder,Q.enableBlending=this.enableBlending,Q.blendingSpeed=this.blendingSpeed,Q.targetedAnimations=[];for(let z=0;z<this.targetedAnimations.length;z++){const I=this.targetedAnimations[z];Q.targetedAnimations[z]=I.serialize()}return A.d&&A.d.HasTags(this)&&(Q.tags=A.d.GetTags(this)),this.metadata&&(Q.metadata=this.metadata),Q}static Parse(Q,z){const I=new d(Q.name,z,Q.weight,Q.playOrder);for(let w=0;w<Q.targetedAnimations.length;w++){const T=Q.targetedAnimations[w],A=P.e.Parse(T.animation),e=T.targetId;if("influence"===T.animation.property){const Q=z.getMorphTargetById(e);Q&&I.addTargetedAnimation(A,Q)}else{const Q=z.getNodeById(e);null!=Q&&I.addTargetedAnimation(A,Q)}}return A.d&&A.d.AddTagsTo(I,Q.tags),null!==Q.from&&null!==Q.to&&I.normalize(Q.from,Q.to),void 0!==Q.speedRatio&&(I._speedRatio=Q.speedRatio),void 0!==Q.loopAnimation&&(I._loopAnimation=Q.loopAnimation),void 0!==Q.isAdditive&&(I._isAdditive=Q.isAdditive),void 0!==Q.weight&&(I._weight=Q.weight),void 0!==Q.playOrder&&(I._playOrder=Q.playOrder),void 0!==Q.enableBlending&&(I._enableBlending=Q.enableBlending),void 0!==Q.blendingSpeed&&(I._blendingSpeed=Q.blendingSpeed),void 0!==Q.metadata&&(I.metadata=Q.metadata),I}static MakeAnimationAdditive(Q,z,I){let w;w="object"===typeof z?z:{referenceFrame:z,range:I,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let T=Q;w.cloneOriginalAnimationGroup&&(T=Q.clone(w.clonedAnimationGroupName||T.name));const A=T.targetedAnimations;for(let e=0;e<A.length;e++){const Q=A[e];Q.animation=P.e.MakeAnimationAdditive(Q.animation,w)}if(T.isAdditive=!0,w.clipKeys){let Q=Number.MAX_VALUE,z=-Number.MAX_VALUE;const I=T.targetedAnimations;for(let P=0;P<I.length;P++){const w=I[P].animation.getKeys();Q>w[0].frame&&(Q=w[0].frame),z<w[w.length-1].frame&&(z=w[w.length-1].frame)}T._from=Q,T._to=z}return T}static ClipKeys(Q,z,I,P,w){const T=Q.clone(P||Q.name);return d.ClipKeysInPlace(T,z,I,w)}static ClipKeysInPlace(Q,z,I,P){return d.ClipInPlace(Q,z,I,P,!1)}static ClipFrames(Q,z,I,P,w){const T=Q.clone(P||Q.name);return d.ClipFramesInPlace(T,z,I,w)}static ClipFramesInPlace(Q,z,I,P){return d.ClipInPlace(Q,z,I,P,!0)}static ClipInPlace(Q,z,I,P){let w=arguments.length>4&&void 0!==arguments[4]&&arguments[4],T=Number.MAX_VALUE,A=-Number.MAX_VALUE;const e=Q.targetedAnimations;for(let m=0;m<e.length;m++){const Q=e[m],f=P?Q.animation:Q.animation.clone();w&&(f.createKeyForFrame(z),f.createKeyForFrame(I));const j=f.getKeys(),D=[];let k=Number.MAX_VALUE;for(let P=0;P<j.length;P++){const Q=j[P];if(!w&&P>=z&&P<=I||w&&Q.frame>=z&&Q.frame<=I){const z={frame:Q.frame,value:Q.value.clone?Q.value.clone():Q.value,inTangent:Q.inTangent,outTangent:Q.outTangent,interpolation:Q.interpolation,lockedTangent:Q.lockedTangent};k===Number.MAX_VALUE&&(k=z.frame),z.frame-=k,D.push(z)}}0!==D.length?(T>D[0].frame&&(T=D[0].frame),A<D[D.length-1].frame&&(A=D[D.length-1].frame),f.setKeys(D,!0),Q.animation=f):(e.splice(m,1),m--)}return Q._from=T,Q._to=A,Q}getClassName(){return"AnimationGroup"}toString(Q){let z="Name: "+this.name;return z+=", type: "+this.getClassName(),Q&&(z+=", from: "+this._from,z+=", to: "+this._to,z+=", isStarted: "+this._isStarted,z+=", speedRatio: "+this._speedRatio,z+=", targetedAnimations length: "+this._targetedAnimations.length,z+=", animatables length: "+this._animatables),z}}}}]);