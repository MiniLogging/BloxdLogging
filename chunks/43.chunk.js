"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{13055:(L,j,P)=>{P.r(j),P.d(j,{lodPixelShaderWGSL:()=>Y});var A=P(563);const R="lodPixelShader",o="const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}\n";A.d.ShadersStoreWGSL[R]||(A.d.ShadersStoreWGSL[R]=o);const Y={name:R,shader:o}}}]);