"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12604:(r,L,M)=>{M.r(L),M.d(L,{AnimationGroup:()=>l,TargetedAnimation:()=>W});var S=M(11970),T=M(942),C=M(968),y=M(1078),s=M(11963),v=M(945);class u{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(r,L,M,T){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=L,this._target=r,this._scene=M,this._host=T,this._activeTargets=[],L._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===S.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=v.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const r={frame:0,value:this._minValue};this._keys.splice(0,0,r)}if(this._target instanceof Array){let r=0;for(const L of this._target)this._preparePath(L,r),this._getOriginalValues(r),r++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const C=L.getEvents();C&&C.length>0&&C.forEach((r=>{this._events.push(r._clone())})),this._enableBlending=r&&r.animationPropertiesOverride?r.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(r){let L=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const M=this._animation.targetPropertyPath;if(M.length>1){let S=r;for(let r=0;r<M.length-1;r++){const L=M[r];if(S=S[L],void 0===S)throw new Error(`Invalid property (${L}) in property path (${M.join(".")})`)}this._targetPath=M[M.length-1],this._activeTargets[L]=S}else this._targetPath=M[0],this._activeTargets[L]=r;if(void 0===this._activeTargets[L][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${M.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let r=0;for(const L of this._target)void 0!==this._originalValue[r]&&this._setValue(L,this._activeTargets[r],this._originalValue[r],-1,r),r++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let r=0;r<this._events.length;r++)this._events[r].isDone=!1}isStopped(){return this._stopped}dispose(){const r=this._animation.runtimeAnimations.indexOf(this);r>-1&&this._animation.runtimeAnimations.splice(r,1)}setValue(r,L){if(this._targetIsArray)for(let M=0;M<this._target.length;M++){const S=this._target[M];this._setValue(S,this._activeTargets[M],r,L,M)}else this._setValue(this._target,this._directTarget,r,L,0)}_getOriginalValues(){let r,L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const M=this._activeTargets[L];r=M.getLocalMatrix&&"_matrix"===this._targetPath?M.getLocalMatrix():M[this._targetPath],r&&r.clone?this._originalValue[L]=r.clone():this._originalValue[L]=r}_registerTargetForLateAnimationBinding(r,L){const M=r.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(M),M._lateAnimationHolders||(M._lateAnimationHolders={}),M._lateAnimationHolders[r.targetPath]||(M._lateAnimationHolders[r.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:L}),r.isAdditive?(M._lateAnimationHolders[r.targetPath].additiveAnimations.push(r),M._lateAnimationHolders[r.targetPath].totalAdditiveWeight+=r.weight):(M._lateAnimationHolders[r.targetPath].animations.push(r),M._lateAnimationHolders[r.targetPath].totalWeight+=r.weight)}_setValue(r,L,M,T,C){if(this._currentActiveTarget=L,this._weight=T,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const r=L[this._targetPath];r.clone?this._originalBlendValue=r.clone():this._originalBlendValue=r}this._originalBlendValue.m?S.e.AllowMatrixDecomposeForInterpolation?this._currentValue?v.e.DecomposeLerpToRef(this._originalBlendValue,M,this._blendingFactor,this._currentValue):this._currentValue=v.e.DecomposeLerp(this._originalBlendValue,M,this._blendingFactor):this._currentValue?v.e.LerpToRef(this._originalBlendValue,M,this._blendingFactor,this._currentValue):this._currentValue=v.e.Lerp(this._originalBlendValue,M,this._blendingFactor):this._currentValue=S.e._UniversalLerp(this._originalBlendValue,M,this._blendingFactor);const T=r&&r.animationPropertiesOverride?r.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=T}else this._currentValue?this._currentValue.p?this._currentValue.p(M):this._currentValue=M:null!==M&&void 0!==M&&M.clone?this._currentValue=M.clone():this._currentValue=M;-1!==T?this._registerTargetForLateAnimationBinding(this,this._originalValue[C]):this._animationState.loopMode===S.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[C],L[this._targetPath]):L[this._targetPath]=this._originalValue[C]+this._currentValue:L[this._targetPath]=this._currentValue,r.ee&&r.ee(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(r){let L=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const M=this._animation.getKeys();r<M[0].frame?r=M[0].frame:r>M[M.length-1].frame&&(r=M[M.length-1].frame);const S=this._events;if(S.length)for(let C=0;C<S.length;C++)S[C].onlyOnce||(S[C].isDone=S[C].frame<r);this._currentFrame=r;const T=this._animation._interpolate(r,this._animationState);this.setValue(T,L)}_prepareForSpeedRatioChange(r){const L=this._previousElapsedTime*(this._animation.framePerSecond*r)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-L}animate(r,L,M,T,C){let y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const s=this._animation,v=s.targetPropertyPath;if(!v||v.length<1)return this._stopped=!0,!1;let u=!0;(L<this._minFrame||L>this._maxFrame)&&(L=this._minFrame),(M<this._minFrame||M>this._maxFrame)&&(M=this._maxFrame);const J=M-L;let f,t=r*(s.framePerSecond*C)/1e3+this._absoluteFrameOffset,o=0,h=!1;const U=T&&this._animationState.loopMode===S.e.ANIMATIONLOOPMODE_YOYO;if(U){const r=(t-L)/J,M=Math.sin(r*Math.PI);t=Math.abs(M)*J+L;const S=M>=0?1:-1;this._yoyoDirection!==S&&(h=!0),this._yoyoDirection=S}if(this._previousElapsedTime=r,this._previousAbsoluteFrame=t,!T&&M>=L&&(t>=J&&C>0||t<=0&&C<0))u=!1,o=s._getKeyValue(this._maxValue);else if(!T&&L>=M&&(t<=J&&C<0||t>=0&&C>0))u=!1,o=s._getKeyValue(this._minValue);else if(this._animationState.loopMode!==S.e.ANIMATIONLOOPMODE_CYCLE){const r=M.toString()+L.toString();if(!this._offsetsCache[r]){this._animationState.repeatCount=0,this._animationState.loopMode=S.e.ANIMATIONLOOPMODE_CYCLE;const T=s._interpolate(L,this._animationState),C=s._interpolate(M,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),s.dataType){case S.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[r]=C-T;break;case S.e.ANIMATIONTYPE_QUATERNION:case S.e.ANIMATIONTYPE_VECTOR3:case S.e.ANIMATIONTYPE_VECTOR2:case S.e.ANIMATIONTYPE_SIZE:case S.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[r]=C.hc(T)}this._highLimitsCache[r]=C}o=this._highLimitsCache[r],f=this._offsetsCache[r]}if(void 0===f)switch(s.dataType){case S.e.ANIMATIONTYPE_FLOAT:f=0;break;case S.e.ANIMATIONTYPE_QUATERNION:f=S.n;break;case S.e.ANIMATIONTYPE_VECTOR3:f=S.u;break;case S.e.ANIMATIONTYPE_VECTOR2:f=S.t;break;case S.e.ANIMATIONTYPE_SIZE:f=S.p;break;case S.e.ANIMATIONTYPE_COLOR3:f=S.h;break;case S.e.ANIMATIONTYPE_COLOR4:f=S.k}let G;if(this._host&&this._host.syncRoot){const r=this._host.syncRoot;G=L+J*((r.masterFrame-r.fromFrame)/(r.toFrame-r.fromFrame))}else G=t>0&&L>M||t<0&&L<M?u&&0!==J?M+t%J:L:u&&0!==J?L+t%J:M;const W=this._events;if(!U&&(C>0&&this.currentFrame>G||C<0&&this.currentFrame<G)||U&&h){this._onLoop();for(let r=0;r<W.length;r++)W[r].onlyOnce||(W[r].isDone=!1);this._animationState.key=C>0?0:s.getKeys().length-1}this._currentFrame=G,this._animationState.repeatCount=0===J?0:t/J|0,this._animationState.highLimitValue=o,this._animationState.offsetValue=f;const l=s._interpolate(G,this._animationState);if(this.setValue(l,y),W.length)for(let S=0;S<W.length;S++)if(J>=0&&G>=W[S].frame&&W[S].frame>=L||J<0&&G<=W[S].frame&&W[S].frame<=L){const r=W[S];r.isDone||(r.onlyOnce&&(W.splice(S,1),S--),r.isDone=!0,r.action(G))}return u||(this._stopped=!0),u}}var J=M(1058);class f{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(r){this._weight=-1!==r?Math.min(Math.max(r,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(r){for(let L=0;L<this._runtimeAnimations.length;L++){this._runtimeAnimations[L]._prepareForSpeedRatioChange(r)}this._speedRatio=r,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(r,L){let M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,C=arguments.length>4&&void 0!==arguments[4]&&arguments[4],y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0,v=arguments.length>7?arguments[7]:void 0,u=arguments.length>8?arguments[8]:void 0,J=arguments.length>9&&void 0!==arguments[9]&&arguments[9],f=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=L,this.fromFrame=M,this.toFrame=S,this.loopAnimation=C,this.onAnimationEnd=s,this.onAnimationLoop=u,this.isAdditive=J,this.playOrder=f,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ye=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new T.e,this.onAnimationLoopObservable=new T.e,this._scene=r,v&&this.appendAnimations(L,v),this._speedRatio=y,r._activeAnimatables.push(this)}syncWith(r){if(this._syncRoot=r,r){const r=this._scene._activeAnimatables.indexOf(this);r>-1&&(this._scene._activeAnimatables.splice(r,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(r,L){for(let M=0;M<L.length;M++){const S=L[M],T=new u(r,S,this._scene,this);T._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(T)}}getAnimationByTargetProperty(r){const L=this._runtimeAnimations;for(let M=0;M<L.length;M++)if(L[M].animation.targetProperty===r)return L[M].animation;return null}getRuntimeAnimationByTargetProperty(r){const L=this._runtimeAnimations;for(let M=0;M<L.length;M++)if(L[M].animation.targetProperty===r)return L[M];return null}reset(){const r=this._runtimeAnimations;for(let L=0;L<r.length;L++)r[L].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(r){const L=this._runtimeAnimations;for(let M=0;M<L.length;M++)L[M].animation.enableBlending=!0,L[M].animation.blendingSpeed=r}disableBlending(){const r=this._runtimeAnimations;for(let L=0;L<r.length;L++)r[L].animation.enableBlending=!1}goToFrame(r){const L=this._runtimeAnimations;if(L[0]){const M=L[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??L[0].currentFrame;const S=0===this.speedRatio?0:(r-this._frameToSyncFromJump)/M*1e3/this.speedRatio;this._manualJumpDelay=-S}for(let M=0;M<L.length;M++)L[M].goToFrame(r,this._weight);this._goToFrame=r}get paused(){return this.Ye}pause(){this.Ye||(this.Ye=!0)}restart(){this.Ye=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(r,L){let M=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(r||L){const T=this._scene._activeAnimatables.indexOf(this);if(T>-1){const C=this._runtimeAnimations;for(let M=C.length-1;M>=0;M--){const S=C[M];r&&S.animation.name!=r||(L&&!L(S.target)||(S.dispose(),C.splice(M,1)))}0==C.length&&(M||this._scene._activeAnimatables.splice(T,1),S||this._raiseOnAnimationEnd())}}else{const r=this._scene._activeAnimatables.indexOf(this);if(r>-1){M||this._scene._activeAnimatables.splice(r,1);const L=this._runtimeAnimations;for(let r=0;r<L.length;r++)L[r].dispose();this._runtimeAnimations.length=0,S||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((r=>{this.onAnimationEndObservable.add((()=>{r(this)}),void 0,void 0,this,!0)}))}_animate(r){if(this.Ye)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=r),!0;if(null===this._localDelayOffset?(this._localDelayOffset=r,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=r-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let L=!1;const M=this._runtimeAnimations;let S;for(S=0;S<M.length;S++){const T=M[S].animate(r-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);L=L||T}if(this.animationStarted=L,!L){if(this.disposeOnEnd)for(S=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(S,1),S=0;S<M.length;S++)M[S].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return L}}function t(r){if(0===r.totalWeight&&0===r.totalAdditiveWeight)return r.originalValue;let L=1;const M=v.h.nd[0],S=v.h.nd[1],T=v.h.Quaternion[0];let C=0;const y=r.animations[0],s=r.originalValue;let u=1,J=!1;if(r.totalWeight<1)u=1-r.totalWeight,s.decompose(S,T,M);else{if(C=1,L=r.totalWeight,u=y.weight/L,1==u){if(!r.totalAdditiveWeight)return y.currentValue;J=!0}y.currentValue.decompose(S,T,M)}if(!J){S.scaleInPlace(u),M.scaleInPlace(u),T.scaleInPlace(u);for(let y=C;y<r.animations.length;y++){const C=r.animations[y];if(0===C.weight)continue;u=C.weight/L;const s=v.h.nd[2],J=v.h.nd[3],f=v.h.Quaternion[1];C.currentValue.decompose(J,f,s),J.scaleAndAddToRef(u,S),f.scaleAndAddToRef(v.f.Dot(T,f)>0?u:-u,T),s.scaleAndAddToRef(u,M)}T.normalize()}for(let t=0;t<r.additiveAnimations.length;t++){const L=r.additiveAnimations[t];if(0===L.weight)continue;const C=v.h.nd[2],y=v.h.nd[3],s=v.h.Quaternion[1];L.currentValue.decompose(y,s,C),y.multiplyToRef(S,y),v.m.LerpToRef(S,y,L.weight,S),T.multiplyToRef(s,s),v.f.SlerpToRef(T,s,L.weight,T),C.scaleAndAddToRef(L.weight,M)}const f=y?y._animationState.workValue:v.h.Matrix[0].clone();return v.e.ComposeToRef(S,T,M,f),f}function o(r,L){if(0===r.totalWeight&&0===r.totalAdditiveWeight)return L;const M=r.animations[0],S=r.originalValue;let T=L;if(0===r.totalWeight&&r.totalAdditiveWeight>0)T.p(S);else if(1===r.animations.length){if(v.f.SlerpToRef(S,M.currentValue,Math.min(1,r.totalWeight),T),0===r.totalAdditiveWeight)return T}else if(r.animations.length>1){let M,C,y=1;if(r.totalWeight<1){const L=1-r.totalWeight;M=[],C=[],M.push(S),C.push(L)}else{if(2===r.animations.length&&(v.f.SlerpToRef(r.animations[0].currentValue,r.animations[1].currentValue,r.animations[1].weight/r.totalWeight,L),0===r.totalAdditiveWeight))return L;M=[],C=[],y=r.totalWeight}for(let L=0;L<r.animations.length;L++){const S=r.animations[L];M.push(S.currentValue),C.push(S.weight/y)}let s=0;for(let r=0;r<M.length;)r?(s+=C[r],v.f.SlerpToRef(T,M[r],C[r]/s,T),r++):(v.f.SlerpToRef(M[r],M[r+1],C[r+1]/(C[r]+C[r+1]),L),T=L,s=C[r]+C[r+1],r+=2)}for(let C=0;C<r.additiveAnimations.length;C++){const L=r.additiveAnimations[C];0!==L.weight&&(T.multiplyToRef(L.currentValue,v.h.Quaternion[0]),v.f.SlerpToRef(T,v.h.Quaternion[0],L.weight,T))}return T}var h,U,G=M(1114);h=G.c,(U=s.b)&&(U.prototype.copyAnimationRange=function(r,L,M){let T=arguments.length>3&&void 0!==arguments[3]&&arguments[3],C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new S.e(this.name,"_matrix",r.animations[0].framePerSecond,S.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const y=r.animations[0].getRange(L);if(!y)return!1;const s=y.from,v=y.to,u=r.animations[0].getKeys(),J=r.length,f=r.getParent(),t=this.getParent(),o=T&&f&&J&&this.length&&J!==this.length,h=o&&t&&f?t.length/f.length:1,U=T&&!t&&C&&(1!==C.x||1!==C.y||1!==C.z),G=this.animations[0].getKeys();let W,l,e;for(let S=0,w=u.length;S<w;S++)W=u[S],W.frame>=s&&W.frame<=v&&(T?(e=W.value.clone(),o?(l=e.getTranslation(),e.setTranslation(l.scaleInPlace(h))):U&&C?(l=e.getTranslation(),e.setTranslation(l.multiplyInPlace(C))):e=W.value):e=W.value,G.push({frame:W.frame+M,value:e}));return this.animations[0].createRange(L,s+M,v+M),!0}),h&&(h.prototype._animate=function(r){if(!this.animationsEnabled)return;const L=J.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=L}this.deltaTime=void 0!==r?r:this.useConstantAnimationDeltaTime?16:(L-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=L;const M=this._activeAnimatables;if(0===M.length)return;this._animationTime+=this.deltaTime;const T=this._animationTime;for(let S=0;S<M.length;S++){const r=M[S];!r._animate(T)&&r.disposeOnEnd&&S--}!function(r){if(r._registeredForLateAnimationBindings.length){for(let L=0;L<r._registeredForLateAnimationBindings.length;L++){const M=r._registeredForLateAnimationBindings.data[L];for(const r in M._lateAnimationHolders){const L=M._lateAnimationHolders[r],T=L.animations[0],C=L.originalValue;if(void 0===C||null===C)continue;const y=S.e.AllowMatrixDecomposeForInterpolation&&C.m;let s=M[r];if(y)s=t(L);else if(void 0!==C.w)s=o(L,s||v.f.Identity());else{let r=0,M=1;const y=T&&T._animationState.loopMode===S.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(L.totalWeight<1)s=y?C.clone?C.clone():C:T&&C.scale?C.scale(1-L.totalWeight):T?C*(1-L.totalWeight):C.clone?C.clone():C;else if(T){M=L.totalWeight;const S=T.weight/M;s=1!==S?T.currentValue.scale?T.currentValue.scale(S):T.currentValue*S:T.currentValue,y&&(s.addToRef?s.addToRef(C,s):s+=C),r=1}for(let S=r;S<L.animations.length;S++){const r=L.animations[S],T=r.weight/M;T&&(r.currentValue.scaleAndAddToRef?r.currentValue.scaleAndAddToRef(T,s):s+=r.currentValue*T)}for(let S=0;S<L.additiveAnimations.length;S++){const r=L.additiveAnimations[S],M=r.weight;M&&(r.currentValue.scaleAndAddToRef?r.currentValue.scaleAndAddToRef(M,s):s+=r.currentValue*M)}}M[r]=s}M._lateAnimationHolders={}}r._registeredForLateAnimationBindings.reset()}}(this)},h.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((r,L)=>r.playOrder-L.playOrder))},h.prototype.beginWeightedAnimation=function(r,L,M){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,T=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,v=arguments.length>8?arguments[8]:void 0,u=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const f=this.beginAnimation(r,L,M,T,C,y,s,!1,v,u,J);return f.weight=S,f},h.prototype.beginAnimation=function(r,L,M,S){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,C=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0,s=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],v=arguments.length>8?arguments[8]:void 0,u=arguments.length>9?arguments[9]:void 0,J=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(T<0){const r=L;L=M,M=r,T=-T}L>M&&(T=-T),s&&this.stopAnimation(r,void 0,v),y||(y=new f(this,r,L,M,S,T,C,void 0,u,J));const t=!v||v(r);if(r.animations&&t&&y.appendAnimations(r,r.animations),r.getAnimatables){const J=r.getAnimatables();for(let r=0;r<J.length;r++)this.beginAnimation(J[r],L,M,S,T,C,y,s,v,u)}return y.reset(),y},h.prototype.beginHierarchyAnimation=function(r,L,M,S,T){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,v=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],u=arguments.length>9?arguments[9]:void 0,J=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const f=r.getDescendants(L),t=[];t.push(this.beginAnimation(r,M,S,T,C,y,s,v,u,void 0,J));for(const o of f)t.push(this.beginAnimation(o,M,S,T,C,y,s,v,u,void 0,J));return t},h.prototype.beginDirectAnimation=function(r,L,M,S,T){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(C<0){const r=M;M=S,S=r,C=-C}return M>S&&(C=-C),new f(this,r,M,S,T,C,arguments.length>6?arguments[6]:void 0,L,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},h.prototype.beginDirectHierarchyAnimation=function(r,L,M,S,T,C,y,s,v){let u=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const J=r.getDescendants(L),f=[];f.push(this.beginDirectAnimation(r,M,S,T,C,y,s,v,u));for(const t of J)f.push(this.beginDirectAnimation(t,M,S,T,C,y,s,v,u));return f},h.prototype.getAnimatableByTarget=function(r){for(let L=0;L<this._activeAnimatables.length;L++)if(this._activeAnimatables[L].target===r)return this._activeAnimatables[L];return null},h.prototype.getAllAnimatablesByTarget=function(r){const L=[];for(let M=0;M<this._activeAnimatables.length;M++)this._activeAnimatables[M].target===r&&L.push(this._activeAnimatables[M]);return L},h.prototype.stopAnimation=function(r,L,M){const S=this.getAllAnimatablesByTarget(r);for(const T of S)T.stop(L,M)},h.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let r=0;r<this._activeAnimatables.length;r++)this._activeAnimatables[r].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const r of this.animationGroups)r.stop()});class W{getClassName(){return"TargetedAnimation"}serialize(){const r={};return r.animation=this.animation.serialize(),r.targetId=this.target.id,r}}class l{get mask(){return this._mask}set mask(r){this._mask!==r&&(this._mask=r,this.syncWithMask(!0))}syncWithMask(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||r){this._numActiveAnimatables=0;for(let r=0;r<this._animatables.length;++r){const L=this._animatables[r];!this.mask||this.mask.disabled||this.mask.retainsTarget(L.target.name)?(this._numActiveAnimatables++,L.paused&&L.restart()):L.paused||L.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let r=0;r<this._animatables.length;++r){const L=this._animatables[r];this.mask.retainsTarget(L.target.name)||(L.stop(),this._animatables.splice(r,1),--r)}for(let r=0;r<this._targetedAnimations.length;r++){const L=this._targetedAnimations[r];this.mask.retainsTarget(L.target.name)||(this._targetedAnimations.splice(r,1),--r)}}}get from(){return this._from}set from(r){if(this._from!==r){this._from=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].fromFrame=this._from}}}get to(){return this._to}set to(r){if(this._to!==r){this._to=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(r){if(this._speedRatio!==r){this._speedRatio=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(r){if(this._loopAnimation!==r){this._loopAnimation=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(r){if(this._isAdditive!==r){this._isAdditive=r;for(let r=0;r<this._animatables.length;r++){this._animatables[r].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(r){this._weight!==r&&(this._weight=r,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(r){if(this._playOrder!==r&&(this._playOrder=r,this._animatables.length>0)){for(let r=0;r<this._animatables.length;r++)this._animatables[r].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(r){if(this._enableBlending!==r&&(this._enableBlending=r,null!==r))for(let L=0;L<this._targetedAnimations.length;++L)this._targetedAnimations[L].animation.enableBlending=r}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(r){if(this._blendingSpeed!==r&&(this._blendingSpeed=r,null!==r))for(let L=0;L<this._targetedAnimations.length;++L)this._targetedAnimations[L].animation.blendingSpeed=r}getLength(r,L){r=r??this._from;return((L=L??this._to)-r)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(r){let L=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],M=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3?arguments[3]:void 0;if(0===r.length)return null;S=S??r[0].weight;let T=Number.MAX_VALUE,C=-Number.MAX_VALUE;if(M)for(const s of r)s.from<T&&(T=s.from),s.to>C&&(C=s.to);const y=new l(r[0].name+"_merged",r[0]._scene,S);for(const s of r){M&&s.normalize(T,C);for(const r of s.targetedAnimations)y.addTargetedAnimation(r.animation,r.target);L&&s.dispose()}return y}constructor(r){let L=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=r,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new T.e,this.onAnimationLoopObservable=new T.e,this.onAnimationGroupLoopObservable=new T.e,this.onAnimationGroupEndObservable=new T.e,this.onAnimationGroupPauseObservable=new T.e,this.onAnimationGroupPlayObservable=new T.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=L||C.c.LastCreatedScene,this._weight=M,this._playOrder=S,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(r,L){const M=new W;M.animation=r,M.target=L;const S=r.getKeys();return this._from>S[0].frame&&(this._from=S[0].frame),this._to<S[S.length-1].frame&&(this._to=S[S.length-1].frame),null!==this._enableBlending&&(r.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(r.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(M),this._shouldStart=!0,M}removeTargetedAnimation(r){for(let L=this._targetedAnimations.length-1;L>-1;L--){this._targetedAnimations[L].animation===r&&this._targetedAnimations.splice(L,1)}}normalize(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,L=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==r&&(r=this._from),null==L&&(L=this._to);for(let M=0;M<this._targetedAnimations.length;M++){const S=this._targetedAnimations[M].animation.getKeys(),T=S[0],C=S[S.length-1];if(T.frame>r){const L={frame:r,value:T.value,inTangent:T.inTangent,outTangent:T.outTangent,interpolation:T.interpolation};S.splice(0,0,L)}if(C.frame<L){const r={frame:L,value:C.value,inTangent:C.inTangent,outTangent:C.outTangent,interpolation:C.interpolation};S.push(r)}}return this._from=r,this._to=L,this}_processLoop(r,L,M){r.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(L),this._animationLoopFlags[M]||(this._animationLoopFlags[M]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0],L=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,M=arguments.length>2?arguments[2]:void 0,S=arguments.length>3?arguments[3]:void 0,T=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=r,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let C=0;C<this._targetedAnimations.length;C++){const y=this._targetedAnimations[C],s=this._scene.beginDirectAnimation(y.target,[y.animation],void 0!==M?M:this._from,void 0!==S?S:this._to,r,L,void 0,void 0,void 0!==T?T:this._isAdditive);s.weight=this._weight,s.playOrder=this._playOrder,s.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(y),this._checkAnimationGroupEnded(s)},this._processLoop(s,y,C),this._animatables.push(s)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=L,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let r=0;r<this._animatables.length;r++){this._animatables[r].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(r){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==r&&(this.loopAnimation=r),this.restart()):(this.stop(),this.start(r,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let r=0;r<this._animatables.length;r++){this._animatables[r].reset()}return this}restart(){if(!this._isStarted)return this;for(let r=0;r<this._animatables.length;r++){this._animatables[r].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const L=this._animatables.slice();for(let S=0;S<L.length;S++)L[S].stop(void 0,void 0,!0,r);let M=0;for(let S=0;S<this._scene._activeAnimatables.length;S++){const L=this._scene._activeAnimatables[S];L._runtimeAnimations.length>0?this._scene._activeAnimatables[M++]=L:r&&this._checkAnimationGroupEnded(L,r)}return this._scene._activeAnimatables.length=M,this._isStarted=!1,this}setWeightForAllAnimatables(r){for(let L=0;L<this._animatables.length;L++){this._animatables[L].weight=r}return this}syncAllAnimationsWith(r){for(let L=0;L<this._animatables.length;L++){this._animatables[L].syncWith(r)}return this}goToFrame(r){if(!this._isStarted)return this;for(let L=0;L<this._animatables.length;L++){this._animatables[L].goToFrame(r)}return this}getCurrentFrame(){var r;return(null===(r=this.animatables[0])||void 0===r?void 0:r.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const r=this._scene.animationGroups.indexOf(this);if(r>-1&&this._scene.animationGroups.splice(r,1),this._parentContainer){const r=this._parentContainer.animationGroups.indexOf(this);r>-1&&this._parentContainer.animationGroups.splice(r,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(r){let L=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const M=this._animatables.indexOf(r);M>-1&&this._animatables.splice(M,1),0===this._animatables.length&&(this._isStarted=!1,L||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(r,L){let M=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const S=new l(r||this.name,this._scene,this._weight,this._playOrder);S._from=this.from,S._to=this.to,S._speedRatio=this.speedRatio,S._loopAnimation=this.loopAnimation,S._isAdditive=this.isAdditive,S._enableBlending=this.enableBlending,S._blendingSpeed=this.blendingSpeed,S.metadata=this.metadata,S.mask=this.mask;for(const T of this._targetedAnimations)S.addTargetedAnimation(M?T.animation.clone():T.animation,L?L(T.target):T.target);return S}serialize(){const r={};r.name=this.name,r.from=this.from,r.to=this.to,r.speedRatio=this.speedRatio,r.loopAnimation=this.loopAnimation,r.isAdditive=this.isAdditive,r.weight=this.weight,r.playOrder=this.playOrder,r.enableBlending=this.enableBlending,r.blendingSpeed=this.blendingSpeed,r.targetedAnimations=[];for(let L=0;L<this.targetedAnimations.length;L++){const M=this.targetedAnimations[L];r.targetedAnimations[L]=M.serialize()}return y.e&&y.e.HasTags(this)&&(r.tags=y.e.GetTags(this)),this.metadata&&(r.metadata=this.metadata),r}static Parse(r,L){const M=new l(r.name,L,r.weight,r.playOrder);for(let T=0;T<r.targetedAnimations.length;T++){const C=r.targetedAnimations[T],y=S.e.Parse(C.animation),s=C.targetId;if("influence"===C.animation.property){const r=L.getMorphTargetById(s);r&&M.addTargetedAnimation(y,r)}else{const r=L.getNodeById(s);null!=r&&M.addTargetedAnimation(y,r)}}return y.e&&y.e.AddTagsTo(M,r.tags),null!==r.from&&null!==r.to&&M.normalize(r.from,r.to),void 0!==r.speedRatio&&(M._speedRatio=r.speedRatio),void 0!==r.loopAnimation&&(M._loopAnimation=r.loopAnimation),void 0!==r.isAdditive&&(M._isAdditive=r.isAdditive),void 0!==r.weight&&(M._weight=r.weight),void 0!==r.playOrder&&(M._playOrder=r.playOrder),void 0!==r.enableBlending&&(M._enableBlending=r.enableBlending),void 0!==r.blendingSpeed&&(M._blendingSpeed=r.blendingSpeed),void 0!==r.metadata&&(M.metadata=r.metadata),M}static MakeAnimationAdditive(r,L,M){let T;T="object"===typeof L?L:{referenceFrame:L,range:M,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let C=r;T.cloneOriginalAnimationGroup&&(C=r.clone(T.clonedAnimationGroupName||C.name));const y=C.targetedAnimations;for(let s=0;s<y.length;s++){const r=y[s];r.animation=S.e.MakeAnimationAdditive(r.animation,T)}if(C.isAdditive=!0,T.clipKeys){let r=Number.MAX_VALUE,L=-Number.MAX_VALUE;const M=C.targetedAnimations;for(let S=0;S<M.length;S++){const T=M[S].animation.getKeys();r>T[0].frame&&(r=T[0].frame),L<T[T.length-1].frame&&(L=T[T.length-1].frame)}C._from=r,C._to=L}return C}static ClipKeys(r,L,M,S,T){const C=r.clone(S||r.name);return l.ClipKeysInPlace(C,L,M,T)}static ClipKeysInPlace(r,L,M,S){return l.ClipInPlace(r,L,M,S,!1)}static ClipFrames(r,L,M,S,T){const C=r.clone(S||r.name);return l.ClipFramesInPlace(C,L,M,T)}static ClipFramesInPlace(r,L,M,S){return l.ClipInPlace(r,L,M,S,!0)}static ClipInPlace(r,L,M,S){let T=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=Number.MAX_VALUE,y=-Number.MAX_VALUE;const s=r.targetedAnimations;for(let v=0;v<s.length;v++){const r=s[v],u=S?r.animation:r.animation.clone();T&&(u.createKeyForFrame(L),u.createKeyForFrame(M));const J=u.getKeys(),f=[];let t=Number.MAX_VALUE;for(let S=0;S<J.length;S++){const r=J[S];if(!T&&S>=L&&S<=M||T&&r.frame>=L&&r.frame<=M){const L={frame:r.frame,value:r.value.clone?r.value.clone():r.value,inTangent:r.inTangent,outTangent:r.outTangent,interpolation:r.interpolation,lockedTangent:r.lockedTangent};t===Number.MAX_VALUE&&(t=L.frame),L.frame-=t,f.push(L)}}0!==f.length?(C>f[0].frame&&(C=f[0].frame),y<f[f.length-1].frame&&(y=f[f.length-1].frame),u.setKeys(f,!0),r.animation=u):(s.splice(v,1),v--)}return r._from=C,r._to=y,r}getClassName(){return"AnimationGroup"}toString(r){let L="Name: "+this.name;return L+=", type: "+this.getClassName(),r&&(L+=", from: "+this._from,L+=", to: "+this._to,L+=", isStarted: "+this._isStarted,L+=", speedRatio: "+this._speedRatio,L+=", targetedAnimations length: "+this._targetedAnimations.length,L+=", animatables length: "+this._animatables),L}}}}]);