"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12365:(a,i,K)=>{K.r(i),K.d(i,{AnimationGroup:()=>h,TargetedAnimation:()=>B});var j=K(11721),N=K(1010),E=K(1047),v=K(1182),e=K(11718),Y=K(1018);class H{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(a,i,K,N){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=i,this._target=a,this._scene=K,this._host=N,this._activeTargets=[],i._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===j.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=Y.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const a={frame:0,value:this._minValue};this._keys.splice(0,0,a)}if(this._target instanceof Array){let a=0;for(const i of this._target)this._preparePath(i,a),this._getOriginalValues(a),a++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const E=i.getEvents();E&&E.length>0&&E.forEach((a=>{this._events.push(a._clone())})),this._enableBlending=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(a){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const K=this._animation.targetPropertyPath;if(K.length>1){let j=a;for(let a=0;a<K.length-1;a++){const i=K[a];if(j=j[i],void 0===j)throw new Error(`Invalid property (${i}) in property path (${K.join(".")})`)}this._targetPath=K[K.length-1],this._activeTargets[i]=j}else this._targetPath=K[0],this._activeTargets[i]=a;if(void 0===this._activeTargets[i][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${K.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let a=0;for(const i of this._target)void 0!==this._originalValue[a]&&this._setValue(i,this._activeTargets[a],this._originalValue[a],-1,a),a++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let a=0;a<this._events.length;a++)this._events[a].isDone=!1}isStopped(){return this._stopped}dispose(){const a=this._animation.runtimeAnimations.indexOf(this);a>-1&&this._animation.runtimeAnimations.splice(a,1)}setValue(a,i){if(this._targetIsArray)for(let K=0;K<this._target.length;K++){const j=this._target[K];this._setValue(j,this._activeTargets[K],a,i,K)}else this._setValue(this._target,this._directTarget,a,i,0)}_getOriginalValues(){let a,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const K=this._activeTargets[i];a=K.getLocalMatrix&&"_matrix"===this._targetPath?K.getLocalMatrix():K[this._targetPath],a&&a.clone?this._originalValue[i]=a.clone():this._originalValue[i]=a}_registerTargetForLateAnimationBinding(a,i){const K=a.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(K),K._lateAnimationHolders||(K._lateAnimationHolders={}),K._lateAnimationHolders[a.targetPath]||(K._lateAnimationHolders[a.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:i}),a.isAdditive?(K._lateAnimationHolders[a.targetPath].additiveAnimations.push(a),K._lateAnimationHolders[a.targetPath].totalAdditiveWeight+=a.weight):(K._lateAnimationHolders[a.targetPath].animations.push(a),K._lateAnimationHolders[a.targetPath].totalWeight+=a.weight)}_setValue(a,i,K,N,E){if(this._currentActiveTarget=i,this._weight=N,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const a=i[this._targetPath];a.clone?this._originalBlendValue=a.clone():this._originalBlendValue=a}this._originalBlendValue.m?j.b.AllowMatrixDecomposeForInterpolation?this._currentValue?Y.c.DecomposeLerpToRef(this._originalBlendValue,K,this._blendingFactor,this._currentValue):this._currentValue=Y.c.DecomposeLerp(this._originalBlendValue,K,this._blendingFactor):this._currentValue?Y.c.LerpToRef(this._originalBlendValue,K,this._blendingFactor,this._currentValue):this._currentValue=Y.c.Lerp(this._originalBlendValue,K,this._blendingFactor):this._currentValue=j.b._UniversalLerp(this._originalBlendValue,K,this._blendingFactor);const N=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=N}else this._currentValue?this._currentValue.p?this._currentValue.p(K):this._currentValue=K:null!==K&&void 0!==K&&K.clone?this._currentValue=K.clone():this._currentValue=K;-1!==N?this._registerTargetForLateAnimationBinding(this,this._originalValue[E]):this._animationState.loopMode===j.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[E],i[this._targetPath]):i[this._targetPath]=this._originalValue[E]+this._currentValue:i[this._targetPath]=this._currentValue,a.de&&a.de(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(a){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const K=this._animation.getKeys();a<K[0].frame?a=K[0].frame:a>K[K.length-1].frame&&(a=K[K.length-1].frame);const j=this._events;if(j.length)for(let E=0;E<j.length;E++)j[E].onlyOnce||(j[E].isDone=j[E].frame<a);this._currentFrame=a;const N=this._animation._interpolate(a,this._animationState);this.setValue(N,i)}_prepareForSpeedRatioChange(a){const i=this._previousElapsedTime*(this._animation.framePerSecond*a)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-i}animate(a,i,K,N,E){let v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const e=this._animation,Y=e.targetPropertyPath;if(!Y||Y.length<1)return this._stopped=!0,!1;let H=!0;(i<this._minFrame||i>this._maxFrame)&&(i=this._minFrame),(K<this._minFrame||K>this._maxFrame)&&(K=this._maxFrame);const f=K-i;let o,U=a*(e.framePerSecond*E)/1e3+this._absoluteFrameOffset,q=0,u=!1;const g=N&&this._animationState.loopMode===j.b.ANIMATIONLOOPMODE_YOYO;if(g){const a=(U-i)/f,K=Math.sin(a*Math.PI);U=Math.abs(K)*f+i;const j=K>=0?1:-1;this._yoyoDirection!==j&&(u=!0),this._yoyoDirection=j}if(this._previousElapsedTime=a,this._previousAbsoluteFrame=U,!N&&K>=i&&(U>=f&&E>0||U<=0&&E<0))H=!1,q=e._getKeyValue(this._maxValue);else if(!N&&i>=K&&(U<=f&&E<0||U>=0&&E>0))H=!1,q=e._getKeyValue(this._minValue);else if(this._animationState.loopMode!==j.b.ANIMATIONLOOPMODE_CYCLE){const a=K.toString()+i.toString();if(!this._offsetsCache[a]){this._animationState.repeatCount=0,this._animationState.loopMode=j.b.ANIMATIONLOOPMODE_CYCLE;const N=e._interpolate(i,this._animationState),E=e._interpolate(K,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),e.dataType){case j.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[a]=E-N;break;case j.b.ANIMATIONTYPE_QUATERNION:case j.b.ANIMATIONTYPE_VECTOR3:case j.b.ANIMATIONTYPE_VECTOR2:case j.b.ANIMATIONTYPE_SIZE:case j.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[a]=E.zc(N)}this._highLimitsCache[a]=E}q=this._highLimitsCache[a],o=this._offsetsCache[a]}if(void 0===o)switch(e.dataType){case j.b.ANIMATIONTYPE_FLOAT:o=0;break;case j.b.ANIMATIONTYPE_QUATERNION:o=j.k;break;case j.b.ANIMATIONTYPE_VECTOR3:o=j.p;break;case j.b.ANIMATIONTYPE_VECTOR2:o=j.n;break;case j.b.ANIMATIONTYPE_SIZE:o=j.m;break;case j.b.ANIMATIONTYPE_COLOR3:o=j.c;break;case j.b.ANIMATIONTYPE_COLOR4:o=j.g}let s;if(this._host&&this._host.syncRoot){const a=this._host.syncRoot;s=i+f*((a.masterFrame-a.fromFrame)/(a.toFrame-a.fromFrame))}else s=U>0&&i>K||U<0&&i<K?H&&0!==f?K+U%f:i:H&&0!==f?i+U%f:K;const B=this._events;if(!g&&(E>0&&this.currentFrame>s||E<0&&this.currentFrame<s)||g&&u){this._onLoop();for(let a=0;a<B.length;a++)B[a].onlyOnce||(B[a].isDone=!1);this._animationState.key=E>0?0:e.getKeys().length-1}this._currentFrame=s,this._animationState.repeatCount=0===f?0:U/f|0,this._animationState.highLimitValue=q,this._animationState.offsetValue=o;const h=e._interpolate(s,this._animationState);if(this.setValue(h,v),B.length)for(let j=0;j<B.length;j++)if(f>=0&&s>=B[j].frame&&B[j].frame>=i||f<0&&s<=B[j].frame&&B[j].frame<=i){const a=B[j];a.isDone||(a.onlyOnce&&(B.splice(j,1),j--),a.isDone=!0,a.action(s))}return H||(this._stopped=!0),H}}var f=K(1150);class o{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(a){this._weight=-1!==a?Math.min(Math.max(a,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(a){for(let i=0;i<this._runtimeAnimations.length;i++){this._runtimeAnimations[i]._prepareForSpeedRatioChange(a)}this._speedRatio=a,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(a,i){let K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,E=arguments.length>4&&void 0!==arguments[4]&&arguments[4],v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,e=arguments.length>6?arguments[6]:void 0,Y=arguments.length>7?arguments[7]:void 0,H=arguments.length>8?arguments[8]:void 0,f=arguments.length>9&&void 0!==arguments[9]&&arguments[9],o=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=i,this.fromFrame=K,this.toFrame=j,this.loopAnimation=E,this.onAnimationEnd=e,this.onAnimationLoop=H,this.isAdditive=f,this.playOrder=o,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this._e=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new N.d,this.onAnimationLoopObservable=new N.d,this._scene=a,Y&&this.appendAnimations(i,Y),this._speedRatio=v,a._activeAnimatables.push(this)}syncWith(a){if(this._syncRoot=a,a){const a=this._scene._activeAnimatables.indexOf(this);a>-1&&(this._scene._activeAnimatables.splice(a,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(a,i){for(let K=0;K<i.length;K++){const j=i[K],N=new H(a,j,this._scene,this);N._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(N)}}getAnimationByTargetProperty(a){const i=this._runtimeAnimations;for(let K=0;K<i.length;K++)if(i[K].animation.targetProperty===a)return i[K].animation;return null}getRuntimeAnimationByTargetProperty(a){const i=this._runtimeAnimations;for(let K=0;K<i.length;K++)if(i[K].animation.targetProperty===a)return i[K];return null}reset(){const a=this._runtimeAnimations;for(let i=0;i<a.length;i++)a[i].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(a){const i=this._runtimeAnimations;for(let K=0;K<i.length;K++)i[K].animation.enableBlending=!0,i[K].animation.blendingSpeed=a}disableBlending(){const a=this._runtimeAnimations;for(let i=0;i<a.length;i++)a[i].animation.enableBlending=!1}goToFrame(a){const i=this._runtimeAnimations;if(i[0]){const K=i[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??i[0].currentFrame;const j=0===this.speedRatio?0:(a-this._frameToSyncFromJump)/K*1e3/this.speedRatio;this._manualJumpDelay=-j}for(let K=0;K<i.length;K++)i[K].goToFrame(a,this._weight);this._goToFrame=a}get paused(){return this._e}pause(){this._e||(this._e=!0)}restart(){this._e=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(a,i){let K=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a||i){const N=this._scene._activeAnimatables.indexOf(this);if(N>-1){const E=this._runtimeAnimations;for(let K=E.length-1;K>=0;K--){const j=E[K];a&&j.animation.name!=a||(i&&!i(j.target)||(j.dispose(),E.splice(K,1)))}0==E.length&&(K||this._scene._activeAnimatables.splice(N,1),j||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){K||this._scene._activeAnimatables.splice(a,1);const i=this._runtimeAnimations;for(let a=0;a<i.length;a++)i[a].dispose();this._runtimeAnimations.length=0,j||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((a=>{this.onAnimationEndObservable.add((()=>{a(this)}),void 0,void 0,this,!0)}))}_animate(a){if(this._e)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=a),!0;if(null===this._localDelayOffset?(this._localDelayOffset=a,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=a-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let i=!1;const K=this._runtimeAnimations;let j;for(j=0;j<K.length;j++){const N=K[j].animate(a-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);i=i||N}if(this.animationStarted=i,!i){if(this.disposeOnEnd)for(j=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(j,1),j=0;j<K.length;j++)K[j].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return i}}function U(a){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return a.originalValue;let i=1;const K=Y.j.kd[0],j=Y.j.kd[1],N=Y.j.Quaternion[0];let E=0;const v=a.animations[0],e=a.originalValue;let H=1,f=!1;if(a.totalWeight<1)H=1-a.totalWeight,e.decompose(j,N,K);else{if(E=1,i=a.totalWeight,H=v.weight/i,1==H){if(!a.totalAdditiveWeight)return v.currentValue;f=!0}v.currentValue.decompose(j,N,K)}if(!f){j.scaleInPlace(H),K.scaleInPlace(H),N.scaleInPlace(H);for(let v=E;v<a.animations.length;v++){const E=a.animations[v];if(0===E.weight)continue;H=E.weight/i;const e=Y.j.kd[2],f=Y.j.kd[3],o=Y.j.Quaternion[1];E.currentValue.decompose(f,o,e),f.scaleAndAddToRef(H,j),o.scaleAndAddToRef(Y.f.Dot(N,o)>0?H:-H,N),e.scaleAndAddToRef(H,K)}N.normalize()}for(let U=0;U<a.additiveAnimations.length;U++){const i=a.additiveAnimations[U];if(0===i.weight)continue;const E=Y.j.kd[2],v=Y.j.kd[3],e=Y.j.Quaternion[1];i.currentValue.decompose(v,e,E),v.multiplyToRef(j,v),Y.o.LerpToRef(j,v,i.weight,j),N.multiplyToRef(e,e),Y.f.SlerpToRef(N,e,i.weight,N),E.scaleAndAddToRef(i.weight,K)}const o=v?v._animationState.workValue:Y.j.Matrix[0].clone();return Y.c.ComposeToRef(j,N,K,o),o}function q(a,i){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return i;const K=a.animations[0],j=a.originalValue;let N=i;if(0===a.totalWeight&&a.totalAdditiveWeight>0)N.p(j);else if(1===a.animations.length){if(Y.f.SlerpToRef(j,K.currentValue,Math.min(1,a.totalWeight),N),0===a.totalAdditiveWeight)return N}else if(a.animations.length>1){let K,E,v=1;if(a.totalWeight<1){const i=1-a.totalWeight;K=[],E=[],K.push(j),E.push(i)}else{if(2===a.animations.length&&(Y.f.SlerpToRef(a.animations[0].currentValue,a.animations[1].currentValue,a.animations[1].weight/a.totalWeight,i),0===a.totalAdditiveWeight))return i;K=[],E=[],v=a.totalWeight}for(let i=0;i<a.animations.length;i++){const j=a.animations[i];K.push(j.currentValue),E.push(j.weight/v)}let e=0;for(let a=0;a<K.length;)a?(e+=E[a],Y.f.SlerpToRef(N,K[a],E[a]/e,N),a++):(Y.f.SlerpToRef(K[a],K[a+1],E[a+1]/(E[a]+E[a+1]),i),N=i,e=E[a]+E[a+1],a+=2)}for(let E=0;E<a.additiveAnimations.length;E++){const i=a.additiveAnimations[E];0!==i.weight&&(N.multiplyToRef(i.currentValue,Y.j.Quaternion[0]),Y.f.SlerpToRef(N,Y.j.Quaternion[0],i.weight,N))}return N}var u,g,s=K(1217);u=s.b,(g=e.d)&&(g.prototype.copyAnimationRange=function(a,i,K){let N=arguments.length>3&&void 0!==arguments[3]&&arguments[3],E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new j.b(this.name,"_matrix",a.animations[0].framePerSecond,j.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const v=a.animations[0].getRange(i);if(!v)return!1;const e=v.from,Y=v.to,H=a.animations[0].getKeys(),f=a.length,o=a.getParent(),U=this.getParent(),q=N&&o&&f&&this.length&&f!==this.length,u=q&&U&&o?U.length/o.length:1,g=N&&!U&&E&&(1!==E.x||1!==E.y||1!==E.z),s=this.animations[0].getKeys();let B,h,p;for(let j=0,T=H.length;j<T;j++)B=H[j],B.frame>=e&&B.frame<=Y&&(N?(p=B.value.clone(),q?(h=p.getTranslation(),p.setTranslation(h.scaleInPlace(u))):g&&E?(h=p.getTranslation(),p.setTranslation(h.multiplyInPlace(E))):p=B.value):p=B.value,s.push({frame:B.frame+K,value:p}));return this.animations[0].createRange(i,e+K,Y+K),!0}),u&&(u.prototype._animate=function(a){if(!this.animationsEnabled)return;const i=f.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=i}this.deltaTime=void 0!==a?a:this.useConstantAnimationDeltaTime?16:(i-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=i;const K=this._activeAnimatables;if(0===K.length)return;this._animationTime+=this.deltaTime;const N=this._animationTime;for(let j=0;j<K.length;j++){const a=K[j];!a._animate(N)&&a.disposeOnEnd&&j--}!function(a){if(a._registeredForLateAnimationBindings.length){for(let i=0;i<a._registeredForLateAnimationBindings.length;i++){const K=a._registeredForLateAnimationBindings.data[i];for(const a in K._lateAnimationHolders){const i=K._lateAnimationHolders[a],N=i.animations[0],E=i.originalValue;if(void 0===E||null===E)continue;const v=j.b.AllowMatrixDecomposeForInterpolation&&E.m;let e=K[a];if(v)e=U(i);else if(void 0!==E.w)e=q(i,e||Y.f.Identity());else{let a=0,K=1;const v=N&&N._animationState.loopMode===j.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(i.totalWeight<1)e=v?E.clone?E.clone():E:N&&E.scale?E.scale(1-i.totalWeight):N?E*(1-i.totalWeight):E.clone?E.clone():E;else if(N){K=i.totalWeight;const j=N.weight/K;e=1!==j?N.currentValue.scale?N.currentValue.scale(j):N.currentValue*j:N.currentValue,v&&(e.addToRef?e.addToRef(E,e):e+=E),a=1}for(let j=a;j<i.animations.length;j++){const a=i.animations[j],N=a.weight/K;N&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(N,e):e+=a.currentValue*N)}for(let j=0;j<i.additiveAnimations.length;j++){const a=i.additiveAnimations[j],K=a.weight;K&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(K,e):e+=a.currentValue*K)}}K[a]=e}K._lateAnimationHolders={}}a._registeredForLateAnimationBindings.reset()}}(this)},u.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((a,i)=>a.playOrder-i.playOrder))},u.prototype.beginWeightedAnimation=function(a,i,K){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,N=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,v=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,Y=arguments.length>8?arguments[8]:void 0,H=arguments.length>9?arguments[9]:void 0,f=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const o=this.beginAnimation(a,i,K,N,E,v,e,!1,Y,H,f);return o.weight=j,o},u.prototype.beginAnimation=function(a,i,K,j){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,E=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0,e=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],Y=arguments.length>8?arguments[8]:void 0,H=arguments.length>9?arguments[9]:void 0,f=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(N<0){const a=i;i=K,K=a,N=-N}i>K&&(N=-N),e&&this.stopAnimation(a,void 0,Y),v||(v=new o(this,a,i,K,j,N,E,void 0,H,f));const U=!Y||Y(a);if(a.animations&&U&&v.appendAnimations(a,a.animations),a.getAnimatables){const f=a.getAnimatables();for(let a=0;a<f.length;a++)this.beginAnimation(f[a],i,K,j,N,E,v,e,Y,H)}return v.reset(),v},u.prototype.beginHierarchyAnimation=function(a,i,K,j,N){let E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,v=arguments.length>6?arguments[6]:void 0,e=arguments.length>7?arguments[7]:void 0,Y=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],H=arguments.length>9?arguments[9]:void 0,f=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const o=a.getDescendants(i),U=[];U.push(this.beginAnimation(a,K,j,N,E,v,e,Y,H,void 0,f));for(const q of o)U.push(this.beginAnimation(q,K,j,N,E,v,e,Y,H,void 0,f));return U},u.prototype.beginDirectAnimation=function(a,i,K,j,N){let E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(E<0){const a=K;K=j,j=a,E=-E}return K>j&&(E=-E),new o(this,a,K,j,N,E,arguments.length>6?arguments[6]:void 0,i,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},u.prototype.beginDirectHierarchyAnimation=function(a,i,K,j,N,E,v,e,Y){let H=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const f=a.getDescendants(i),o=[];o.push(this.beginDirectAnimation(a,K,j,N,E,v,e,Y,H));for(const U of f)o.push(this.beginDirectAnimation(U,K,j,N,E,v,e,Y,H));return o},u.prototype.getAnimatableByTarget=function(a){for(let i=0;i<this._activeAnimatables.length;i++)if(this._activeAnimatables[i].target===a)return this._activeAnimatables[i];return null},u.prototype.getAllAnimatablesByTarget=function(a){const i=[];for(let K=0;K<this._activeAnimatables.length;K++)this._activeAnimatables[K].target===a&&i.push(this._activeAnimatables[K]);return i},u.prototype.stopAnimation=function(a,i,K){const j=this.getAllAnimatablesByTarget(a);for(const N of j)N.stop(i,K)},u.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let a=0;a<this._activeAnimatables.length;a++)this._activeAnimatables[a].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const a of this.animationGroups)a.stop()});class B{getClassName(){return"TargetedAnimation"}serialize(){const a={};return a.animation=this.animation.serialize(),a.targetId=this.target.id,a}}class h{get mask(){return this._mask}set mask(a){this._mask!==a&&(this._mask=a,this.syncWithMask(!0))}syncWithMask(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||a){this._numActiveAnimatables=0;for(let a=0;a<this._animatables.length;++a){const i=this._animatables[a];!this.mask||this.mask.disabled||this.mask.retainsTarget(i.target.name)?(this._numActiveAnimatables++,i.paused&&i.restart()):i.paused||i.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let a=0;a<this._animatables.length;++a){const i=this._animatables[a];this.mask.retainsTarget(i.target.name)||(i.stop(),this._animatables.splice(a,1),--a)}for(let a=0;a<this._targetedAnimations.length;a++){const i=this._targetedAnimations[a];this.mask.retainsTarget(i.target.name)||(this._targetedAnimations.splice(a,1),--a)}}}get from(){return this._from}set from(a){if(this._from!==a){this._from=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].fromFrame=this._from}}}get to(){return this._to}set to(a){if(this._to!==a){this._to=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(a){if(this._speedRatio!==a){this._speedRatio=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(a){if(this._loopAnimation!==a){this._loopAnimation=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(a){if(this._isAdditive!==a){this._isAdditive=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(a){this._weight!==a&&(this._weight=a,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(a){if(this._playOrder!==a&&(this._playOrder=a,this._animatables.length>0)){for(let a=0;a<this._animatables.length;a++)this._animatables[a].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(a){if(this._enableBlending!==a&&(this._enableBlending=a,null!==a))for(let i=0;i<this._targetedAnimations.length;++i)this._targetedAnimations[i].animation.enableBlending=a}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(a){if(this._blendingSpeed!==a&&(this._blendingSpeed=a,null!==a))for(let i=0;i<this._targetedAnimations.length;++i)this._targetedAnimations[i].animation.blendingSpeed=a}getLength(a,i){a=a??this._from;return((i=i??this._to)-a)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(a){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],K=arguments.length>2&&void 0!==arguments[2]&&arguments[2],j=arguments.length>3?arguments[3]:void 0;if(0===a.length)return null;j=j??a[0].weight;let N=Number.MAX_VALUE,E=-Number.MAX_VALUE;if(K)for(const e of a)e.from<N&&(N=e.from),e.to>E&&(E=e.to);const v=new h(a[0].name+"_merged",a[0]._scene,j);for(const e of a){K&&e.normalize(N,E);for(const a of e.targetedAnimations)v.addTargetedAnimation(a.animation,a.target);i&&e.dispose()}return v}constructor(a){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=a,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new N.d,this.onAnimationLoopObservable=new N.d,this.onAnimationGroupLoopObservable=new N.d,this.onAnimationGroupEndObservable=new N.d,this.onAnimationGroupPauseObservable=new N.d,this.onAnimationGroupPlayObservable=new N.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=i||E.e.LastCreatedScene,this._weight=K,this._playOrder=j,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(a,i){const K=new B;K.animation=a,K.target=i;const j=a.getKeys();return this._from>j[0].frame&&(this._from=j[0].frame),this._to<j[j.length-1].frame&&(this._to=j[j.length-1].frame),null!==this._enableBlending&&(a.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(a.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(K),this._shouldStart=!0,K}removeTargetedAnimation(a){for(let i=this._targetedAnimations.length-1;i>-1;i--){this._targetedAnimations[i].animation===a&&this._targetedAnimations.splice(i,1)}}normalize(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==a&&(a=this._from),null==i&&(i=this._to);for(let K=0;K<this._targetedAnimations.length;K++){const j=this._targetedAnimations[K].animation.getKeys(),N=j[0],E=j[j.length-1];if(N.frame>a){const i={frame:a,value:N.value,inTangent:N.inTangent,outTangent:N.outTangent,interpolation:N.interpolation};j.splice(0,0,i)}if(E.frame<i){const a={frame:i,value:E.value,inTangent:E.inTangent,outTangent:E.outTangent,interpolation:E.interpolation};j.push(a)}}return this._from=a,this._to=i,this}_processLoop(a,i,K){a.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(i),this._animationLoopFlags[K]||(this._animationLoopFlags[K]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,K=arguments.length>2?arguments[2]:void 0,j=arguments.length>3?arguments[3]:void 0,N=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=a,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let E=0;E<this._targetedAnimations.length;E++){const v=this._targetedAnimations[E],e=this._scene.beginDirectAnimation(v.target,[v.animation],void 0!==K?K:this._from,void 0!==j?j:this._to,a,i,void 0,void 0,void 0!==N?N:this._isAdditive);e.weight=this._weight,e.playOrder=this._playOrder,e.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(v),this._checkAnimationGroupEnded(e)},this._processLoop(e,v,E),this._animatables.push(e)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=i,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let a=0;a<this._animatables.length;a++){this._animatables[a].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(a){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==a&&(this.loopAnimation=a),this.restart()):(this.stop(),this.start(a,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].reset()}return this}restart(){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const i=this._animatables.slice();for(let j=0;j<i.length;j++)i[j].stop(void 0,void 0,!0,a);let K=0;for(let j=0;j<this._scene._activeAnimatables.length;j++){const i=this._scene._activeAnimatables[j];i._runtimeAnimations.length>0?this._scene._activeAnimatables[K++]=i:a&&this._checkAnimationGroupEnded(i,a)}return this._scene._activeAnimatables.length=K,this._isStarted=!1,this}setWeightForAllAnimatables(a){for(let i=0;i<this._animatables.length;i++){this._animatables[i].weight=a}return this}syncAllAnimationsWith(a){for(let i=0;i<this._animatables.length;i++){this._animatables[i].syncWith(a)}return this}goToFrame(a){if(!this._isStarted)return this;for(let i=0;i<this._animatables.length;i++){this._animatables[i].goToFrame(a)}return this}getCurrentFrame(){var a;return(null===(a=this.animatables[0])||void 0===a?void 0:a.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const a=this._scene.animationGroups.indexOf(this);if(a>-1&&this._scene.animationGroups.splice(a,1),this._parentContainer){const a=this._parentContainer.animationGroups.indexOf(this);a>-1&&this._parentContainer.animationGroups.splice(a,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(a){let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const K=this._animatables.indexOf(a);K>-1&&this._animatables.splice(K,1),0===this._animatables.length&&(this._isStarted=!1,i||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(a,i){let K=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const j=new h(a||this.name,this._scene,this._weight,this._playOrder);j._from=this.from,j._to=this.to,j._speedRatio=this.speedRatio,j._loopAnimation=this.loopAnimation,j._isAdditive=this.isAdditive,j._enableBlending=this.enableBlending,j._blendingSpeed=this.blendingSpeed,j.metadata=this.metadata,j.mask=this.mask;for(const N of this._targetedAnimations)j.addTargetedAnimation(K?N.animation.clone():N.animation,i?i(N.target):N.target);return j}serialize(){const a={};a.name=this.name,a.from=this.from,a.to=this.to,a.speedRatio=this.speedRatio,a.loopAnimation=this.loopAnimation,a.isAdditive=this.isAdditive,a.weight=this.weight,a.playOrder=this.playOrder,a.enableBlending=this.enableBlending,a.blendingSpeed=this.blendingSpeed,a.targetedAnimations=[];for(let i=0;i<this.targetedAnimations.length;i++){const K=this.targetedAnimations[i];a.targetedAnimations[i]=K.serialize()}return v.b&&v.b.HasTags(this)&&(a.tags=v.b.GetTags(this)),this.metadata&&(a.metadata=this.metadata),a}static Parse(a,i){const K=new h(a.name,i,a.weight,a.playOrder);for(let N=0;N<a.targetedAnimations.length;N++){const E=a.targetedAnimations[N],v=j.b.Parse(E.animation),e=E.targetId;if("influence"===E.animation.property){const a=i.getMorphTargetById(e);a&&K.addTargetedAnimation(v,a)}else{const a=i.getNodeById(e);null!=a&&K.addTargetedAnimation(v,a)}}return v.b&&v.b.AddTagsTo(K,a.tags),null!==a.from&&null!==a.to&&K.normalize(a.from,a.to),void 0!==a.speedRatio&&(K._speedRatio=a.speedRatio),void 0!==a.loopAnimation&&(K._loopAnimation=a.loopAnimation),void 0!==a.isAdditive&&(K._isAdditive=a.isAdditive),void 0!==a.weight&&(K._weight=a.weight),void 0!==a.playOrder&&(K._playOrder=a.playOrder),void 0!==a.enableBlending&&(K._enableBlending=a.enableBlending),void 0!==a.blendingSpeed&&(K._blendingSpeed=a.blendingSpeed),void 0!==a.metadata&&(K.metadata=a.metadata),K}static MakeAnimationAdditive(a,i,K){let N;N="object"===typeof i?i:{referenceFrame:i,range:K,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let E=a;N.cloneOriginalAnimationGroup&&(E=a.clone(N.clonedAnimationGroupName||E.name));const v=E.targetedAnimations;for(let e=0;e<v.length;e++){const a=v[e];a.animation=j.b.MakeAnimationAdditive(a.animation,N)}if(E.isAdditive=!0,N.clipKeys){let a=Number.MAX_VALUE,i=-Number.MAX_VALUE;const K=E.targetedAnimations;for(let j=0;j<K.length;j++){const N=K[j].animation.getKeys();a>N[0].frame&&(a=N[0].frame),i<N[N.length-1].frame&&(i=N[N.length-1].frame)}E._from=a,E._to=i}return E}static ClipKeys(a,i,K,j,N){const E=a.clone(j||a.name);return h.ClipKeysInPlace(E,i,K,N)}static ClipKeysInPlace(a,i,K,j){return h.ClipInPlace(a,i,K,j,!1)}static ClipFrames(a,i,K,j,N){const E=a.clone(j||a.name);return h.ClipFramesInPlace(E,i,K,N)}static ClipFramesInPlace(a,i,K,j){return h.ClipInPlace(a,i,K,j,!0)}static ClipInPlace(a,i,K,j){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],E=Number.MAX_VALUE,v=-Number.MAX_VALUE;const e=a.targetedAnimations;for(let Y=0;Y<e.length;Y++){const a=e[Y],H=j?a.animation:a.animation.clone();N&&(H.createKeyForFrame(i),H.createKeyForFrame(K));const f=H.getKeys(),o=[];let U=Number.MAX_VALUE;for(let j=0;j<f.length;j++){const a=f[j];if(!N&&j>=i&&j<=K||N&&a.frame>=i&&a.frame<=K){const i={frame:a.frame,value:a.value.clone?a.value.clone():a.value,inTangent:a.inTangent,outTangent:a.outTangent,interpolation:a.interpolation,lockedTangent:a.lockedTangent};U===Number.MAX_VALUE&&(U=i.frame),i.frame-=U,o.push(i)}}0!==o.length?(E>o[0].frame&&(E=o[0].frame),v<o[o.length-1].frame&&(v=o[o.length-1].frame),H.setKeys(o,!0),a.animation=H):(e.splice(Y,1),Y--)}return a._from=E,a._to=v,a}getClassName(){return"AnimationGroup"}toString(a){let i="Name: "+this.name;return i+=", type: "+this.getClassName(),a&&(i+=", from: "+this._from,i+=", to: "+this._to,i+=", isStarted: "+this._isStarted,i+=", speedRatio: "+this._speedRatio,i+=", targetedAnimations length: "+this._targetedAnimations.length,i+=", animatables length: "+this._animatables),i}}}}]);