"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12686:(U,b,e)=>{e.r(b),e.d(b,{AnimationGroup:()=>Y,TargetedAnimation:()=>A});var K=e(12041),p=e(942),m=e(975),i=e(1106),D=e(12037),S=e(951);class u{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(U,b,e,p){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=b,this._target=U,this._scene=e,this._host=p,this._activeTargets=[],b._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===K.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=S.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const U={frame:0,value:this._minValue};this._keys.splice(0,0,U)}if(this._target instanceof Array){let U=0;for(const b of this._target)this._preparePath(b,U),this._getOriginalValues(U),U++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const m=b.getEvents();m&&m.length>0&&m.forEach((U=>{this._events.push(U._clone())})),this._enableBlending=U&&U.animationPropertiesOverride?U.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(U){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const e=this._animation.targetPropertyPath;if(e.length>1){let K=U;for(let U=0;U<e.length-1;U++){const b=e[U];if(K=K[b],void 0===K)throw new Error(`Invalid property (${b}) in property path (${e.join(".")})`)}this._targetPath=e[e.length-1],this._activeTargets[b]=K}else this._targetPath=e[0],this._activeTargets[b]=U;if(void 0===this._activeTargets[b][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${e.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let U=0;for(const b of this._target)void 0!==this._originalValue[U]&&this._setValue(b,this._activeTargets[U],this._originalValue[U],-1,U),U++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let U=0;U<this._events.length;U++)this._events[U].isDone=!1}isStopped(){return this._stopped}dispose(){const U=this._animation.runtimeAnimations.indexOf(this);U>-1&&this._animation.runtimeAnimations.splice(U,1)}setValue(U,b){if(this._targetIsArray)for(let e=0;e<this._target.length;e++){const K=this._target[e];this._setValue(K,this._activeTargets[e],U,b,e)}else this._setValue(this._target,this._directTarget,U,b,0)}_getOriginalValues(){let U,b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this._activeTargets[b];U=e.getLocalMatrix&&"_matrix"===this._targetPath?e.getLocalMatrix():e[this._targetPath],U&&U.clone?this._originalValue[b]=U.clone():this._originalValue[b]=U}_registerTargetForLateAnimationBinding(U,b){const e=U.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(e),e._lateAnimationHolders||(e._lateAnimationHolders={}),e._lateAnimationHolders[U.targetPath]||(e._lateAnimationHolders[U.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:b}),U.isAdditive?(e._lateAnimationHolders[U.targetPath].additiveAnimations.push(U),e._lateAnimationHolders[U.targetPath].totalAdditiveWeight+=U.weight):(e._lateAnimationHolders[U.targetPath].animations.push(U),e._lateAnimationHolders[U.targetPath].totalWeight+=U.weight)}_setValue(U,b,e,p,m){if(this._currentActiveTarget=b,this._weight=p,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const U=b[this._targetPath];U.clone?this._originalBlendValue=U.clone():this._originalBlendValue=U}this._originalBlendValue.m?K.b.AllowMatrixDecomposeForInterpolation?this._currentValue?S.e.DecomposeLerpToRef(this._originalBlendValue,e,this._blendingFactor,this._currentValue):this._currentValue=S.e.DecomposeLerp(this._originalBlendValue,e,this._blendingFactor):this._currentValue?S.e.LerpToRef(this._originalBlendValue,e,this._blendingFactor,this._currentValue):this._currentValue=S.e.Lerp(this._originalBlendValue,e,this._blendingFactor):this._currentValue=K.b._UniversalLerp(this._originalBlendValue,e,this._blendingFactor);const p=U&&U.animationPropertiesOverride?U.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=p}else this._currentValue?this._currentValue.p?this._currentValue.p(e):this._currentValue=e:null!==e&&void 0!==e&&e.clone?this._currentValue=e.clone():this._currentValue=e;-1!==p?this._registerTargetForLateAnimationBinding(this,this._originalValue[m]):this._animationState.loopMode===K.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[m],b[this._targetPath]):b[this._targetPath]=this._originalValue[m]+this._currentValue:b[this._targetPath]=this._currentValue,U.oe&&U.oe(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(U){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const e=this._animation.getKeys();U<e[0].frame?U=e[0].frame:U>e[e.length-1].frame&&(U=e[e.length-1].frame);const K=this._events;if(K.length)for(let m=0;m<K.length;m++)K[m].onlyOnce||(K[m].isDone=K[m].frame<U);this._currentFrame=U;const p=this._animation._interpolate(U,this._animationState);this.setValue(p,b)}_prepareForSpeedRatioChange(U){const b=this._previousElapsedTime*(this._animation.framePerSecond*U)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-b}animate(U,b,e,p,m){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const D=this._animation,S=D.targetPropertyPath;if(!S||S.length<1)return this._stopped=!0,!1;let u=!0;(b<this._minFrame||b>this._maxFrame)&&(b=this._minFrame),(e<this._minFrame||e>this._maxFrame)&&(e=this._maxFrame);const r=e-b;let W,f=U*(D.framePerSecond*m)/1e3+this._absoluteFrameOffset,l=0,P=!1;const G=p&&this._animationState.loopMode===K.b.ANIMATIONLOOPMODE_YOYO;if(G){const U=(f-b)/r,e=Math.sin(U*Math.PI);f=Math.abs(e)*r+b;const K=e>=0?1:-1;this._yoyoDirection!==K&&(P=!0),this._yoyoDirection=K}if(this._previousElapsedTime=U,this._previousAbsoluteFrame=f,!p&&e>=b&&(f>=r&&m>0||f<=0&&m<0))u=!1,l=D._getKeyValue(this._maxValue);else if(!p&&b>=e&&(f<=r&&m<0||f>=0&&m>0))u=!1,l=D._getKeyValue(this._minValue);else if(this._animationState.loopMode!==K.b.ANIMATIONLOOPMODE_CYCLE){const U=e.toString()+b.toString();if(!this._offsetsCache[U]){this._animationState.repeatCount=0,this._animationState.loopMode=K.b.ANIMATIONLOOPMODE_CYCLE;const p=D._interpolate(b,this._animationState),m=D._interpolate(e,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),D.dataType){case K.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[U]=m-p;break;case K.b.ANIMATIONTYPE_QUATERNION:case K.b.ANIMATIONTYPE_VECTOR3:case K.b.ANIMATIONTYPE_VECTOR2:case K.b.ANIMATIONTYPE_SIZE:case K.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[U]=m.wc(p)}this._highLimitsCache[U]=m}l=this._highLimitsCache[U],W=this._offsetsCache[U]}if(void 0===W)switch(D.dataType){case K.b.ANIMATIONTYPE_FLOAT:W=0;break;case K.b.ANIMATIONTYPE_QUATERNION:W=K.f;break;case K.b.ANIMATIONTYPE_VECTOR3:W=K.o;break;case K.b.ANIMATIONTYPE_VECTOR2:W=K.m;break;case K.b.ANIMATIONTYPE_SIZE:W=K.i;break;case K.b.ANIMATIONTYPE_COLOR3:W=K.d;break;case K.b.ANIMATIONTYPE_COLOR4:W=K.e}let E;if(this._host&&this._host.syncRoot){const U=this._host.syncRoot;E=b+r*((U.masterFrame-U.fromFrame)/(U.toFrame-U.fromFrame))}else E=f>0&&b>e||f<0&&b<e?u&&0!==r?e+f%r:b:u&&0!==r?b+f%r:e;const A=this._events;if(!G&&(m>0&&this.currentFrame>E||m<0&&this.currentFrame<E)||G&&P){this._onLoop();for(let U=0;U<A.length;U++)A[U].onlyOnce||(A[U].isDone=!1);this._animationState.key=m>0?0:D.getKeys().length-1}this._currentFrame=E,this._animationState.repeatCount=0===r?0:f/r|0,this._animationState.highLimitValue=l,this._animationState.offsetValue=W;const Y=D._interpolate(E,this._animationState);if(this.setValue(Y,i),A.length)for(let K=0;K<A.length;K++)if(r>=0&&E>=A[K].frame&&A[K].frame>=b||r<0&&E<=A[K].frame&&A[K].frame<=b){const U=A[K];U.isDone||(U.onlyOnce&&(A.splice(K,1),K--),U.isDone=!0,U.action(E))}return u||(this._stopped=!0),u}}var r=e(1079);class W{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(U){this._weight=-1!==U?Math.min(Math.max(U,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(U){for(let b=0;b<this._runtimeAnimations.length;b++){this._runtimeAnimations[b]._prepareForSpeedRatioChange(U)}this._speedRatio=U,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(U,b){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,K=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,m=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,D=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,u=arguments.length>8?arguments[8]:void 0,r=arguments.length>9&&void 0!==arguments[9]&&arguments[9],W=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=b,this.fromFrame=e,this.toFrame=K,this.loopAnimation=m,this.onAnimationEnd=D,this.onAnimationLoop=u,this.isAdditive=r,this.playOrder=W,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.hf=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new p.e,this.onAnimationLoopObservable=new p.e,this._scene=U,S&&this.appendAnimations(b,S),this._speedRatio=i,U._activeAnimatables.push(this)}syncWith(U){if(this._syncRoot=U,U){const U=this._scene._activeAnimatables.indexOf(this);U>-1&&(this._scene._activeAnimatables.splice(U,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(U,b){for(let e=0;e<b.length;e++){const K=b[e],p=new u(U,K,this._scene,this);p._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(p)}}getAnimationByTargetProperty(U){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)if(b[e].animation.targetProperty===U)return b[e].animation;return null}getRuntimeAnimationByTargetProperty(U){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)if(b[e].animation.targetProperty===U)return b[e];return null}reset(){const U=this._runtimeAnimations;for(let b=0;b<U.length;b++)U[b].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(U){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)b[e].animation.enableBlending=!0,b[e].animation.blendingSpeed=U}disableBlending(){const U=this._runtimeAnimations;for(let b=0;b<U.length;b++)U[b].animation.enableBlending=!1}goToFrame(U){const b=this._runtimeAnimations;if(b[0]){const e=b[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??b[0].currentFrame;const K=0===this.speedRatio?0:(U-this._frameToSyncFromJump)/e*1e3/this.speedRatio;this._manualJumpDelay=-K}for(let e=0;e<b.length;e++)b[e].goToFrame(U,this._weight);this._goToFrame=U}get paused(){return this.hf}pause(){this.hf||(this.hf=!0)}restart(){this.hf=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(U,b){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],K=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(U||b){const p=this._scene._activeAnimatables.indexOf(this);if(p>-1){const m=this._runtimeAnimations;for(let e=m.length-1;e>=0;e--){const K=m[e];U&&K.animation.name!=U||(b&&!b(K.target)||(K.dispose(),m.splice(e,1)))}0==m.length&&(e||this._scene._activeAnimatables.splice(p,1),K||this._raiseOnAnimationEnd())}}else{const U=this._scene._activeAnimatables.indexOf(this);if(U>-1){e||this._scene._activeAnimatables.splice(U,1);const b=this._runtimeAnimations;for(let U=0;U<b.length;U++)b[U].dispose();this._runtimeAnimations.length=0,K||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((U=>{this.onAnimationEndObservable.add((()=>{U(this)}),void 0,void 0,this,!0)}))}_animate(U){if(this.hf)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=U),!0;if(null===this._localDelayOffset?(this._localDelayOffset=U,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=U-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let b=!1;const e=this._runtimeAnimations;let K;for(K=0;K<e.length;K++){const p=e[K].animate(U-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);b=b||p}if(this.animationStarted=b,!b){if(this.disposeOnEnd)for(K=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(K,1),K=0;K<e.length;K++)e[K].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return b}}function f(U){if(0===U.totalWeight&&0===U.totalAdditiveWeight)return U.originalValue;let b=1;const e=S.g.rd[0],K=S.g.rd[1],p=S.g.Quaternion[0];let m=0;const i=U.animations[0],D=U.originalValue;let u=1,r=!1;if(U.totalWeight<1)u=1-U.totalWeight,D.decompose(K,p,e);else{if(m=1,b=U.totalWeight,u=i.weight/b,1==u){if(!U.totalAdditiveWeight)return i.currentValue;r=!0}i.currentValue.decompose(K,p,e)}if(!r){K.scaleInPlace(u),e.scaleInPlace(u),p.scaleInPlace(u);for(let i=m;i<U.animations.length;i++){const m=U.animations[i];if(0===m.weight)continue;u=m.weight/b;const D=S.g.rd[2],r=S.g.rd[3],W=S.g.Quaternion[1];m.currentValue.decompose(r,W,D),r.scaleAndAddToRef(u,K),W.scaleAndAddToRef(S.f.Dot(p,W)>0?u:-u,p),D.scaleAndAddToRef(u,e)}p.normalize()}for(let f=0;f<U.additiveAnimations.length;f++){const b=U.additiveAnimations[f];if(0===b.weight)continue;const m=S.g.rd[2],i=S.g.rd[3],D=S.g.Quaternion[1];b.currentValue.decompose(i,D,m),i.multiplyToRef(K,i),S.o.LerpToRef(K,i,b.weight,K),p.multiplyToRef(D,D),S.f.SlerpToRef(p,D,b.weight,p),m.scaleAndAddToRef(b.weight,e)}const W=i?i._animationState.workValue:S.g.Matrix[0].clone();return S.e.ComposeToRef(K,p,e,W),W}function l(U,b){if(0===U.totalWeight&&0===U.totalAdditiveWeight)return b;const e=U.animations[0],K=U.originalValue;let p=b;if(0===U.totalWeight&&U.totalAdditiveWeight>0)p.p(K);else if(1===U.animations.length){if(S.f.SlerpToRef(K,e.currentValue,Math.min(1,U.totalWeight),p),0===U.totalAdditiveWeight)return p}else if(U.animations.length>1){let e,m,i=1;if(U.totalWeight<1){const b=1-U.totalWeight;e=[],m=[],e.push(K),m.push(b)}else{if(2===U.animations.length&&(S.f.SlerpToRef(U.animations[0].currentValue,U.animations[1].currentValue,U.animations[1].weight/U.totalWeight,b),0===U.totalAdditiveWeight))return b;e=[],m=[],i=U.totalWeight}for(let b=0;b<U.animations.length;b++){const K=U.animations[b];e.push(K.currentValue),m.push(K.weight/i)}let D=0;for(let U=0;U<e.length;)U?(D+=m[U],S.f.SlerpToRef(p,e[U],m[U]/D,p),U++):(S.f.SlerpToRef(e[U],e[U+1],m[U+1]/(m[U]+m[U+1]),b),p=b,D=m[U]+m[U+1],U+=2)}for(let m=0;m<U.additiveAnimations.length;m++){const b=U.additiveAnimations[m];0!==b.weight&&(p.multiplyToRef(b.currentValue,S.g.Quaternion[0]),S.f.SlerpToRef(p,S.g.Quaternion[0],b.weight,p))}return p}var P,G,E=e(1144);P=E.b,(G=D.d)&&(G.prototype.copyAnimationRange=function(U,b,e){let p=arguments.length>3&&void 0!==arguments[3]&&arguments[3],m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new K.b(this.name,"_matrix",U.animations[0].framePerSecond,K.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const i=U.animations[0].getRange(b);if(!i)return!1;const D=i.from,S=i.to,u=U.animations[0].getKeys(),r=U.length,W=U.getParent(),f=this.getParent(),l=p&&W&&r&&this.length&&r!==this.length,P=l&&f&&W?f.length/W.length:1,G=p&&!f&&m&&(1!==m.x||1!==m.y||1!==m.z),E=this.animations[0].getKeys();let A,Y,V;for(let K=0,M=u.length;K<M;K++)A=u[K],A.frame>=D&&A.frame<=S&&(p?(V=A.value.clone(),l?(Y=V.getTranslation(),V.setTranslation(Y.scaleInPlace(P))):G&&m?(Y=V.getTranslation(),V.setTranslation(Y.multiplyInPlace(m))):V=A.value):V=A.value,E.push({frame:A.frame+e,value:V}));return this.animations[0].createRange(b,D+e,S+e),!0}),P&&(P.prototype._animate=function(U){if(!this.animationsEnabled)return;const b=r.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=b}this.deltaTime=void 0!==U?U:this.useConstantAnimationDeltaTime?16:(b-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=b;const e=this._activeAnimatables;if(0===e.length)return;this._animationTime+=this.deltaTime;const p=this._animationTime;for(let K=0;K<e.length;K++){const U=e[K];!U._animate(p)&&U.disposeOnEnd&&K--}!function(U){if(U._registeredForLateAnimationBindings.length){for(let b=0;b<U._registeredForLateAnimationBindings.length;b++){const e=U._registeredForLateAnimationBindings.data[b];for(const U in e._lateAnimationHolders){const b=e._lateAnimationHolders[U],p=b.animations[0],m=b.originalValue;if(void 0===m||null===m)continue;const i=K.b.AllowMatrixDecomposeForInterpolation&&m.m;let D=e[U];if(i)D=f(b);else if(void 0!==m.w)D=l(b,D||S.f.Identity());else{let U=0,e=1;const i=p&&p._animationState.loopMode===K.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(b.totalWeight<1)D=i?m.clone?m.clone():m:p&&m.scale?m.scale(1-b.totalWeight):p?m*(1-b.totalWeight):m.clone?m.clone():m;else if(p){e=b.totalWeight;const K=p.weight/e;D=1!==K?p.currentValue.scale?p.currentValue.scale(K):p.currentValue*K:p.currentValue,i&&(D.addToRef?D.addToRef(m,D):D+=m),U=1}for(let K=U;K<b.animations.length;K++){const U=b.animations[K],p=U.weight/e;p&&(U.currentValue.scaleAndAddToRef?U.currentValue.scaleAndAddToRef(p,D):D+=U.currentValue*p)}for(let K=0;K<b.additiveAnimations.length;K++){const U=b.additiveAnimations[K],e=U.weight;e&&(U.currentValue.scaleAndAddToRef?U.currentValue.scaleAndAddToRef(e,D):D+=U.currentValue*e)}}e[U]=D}e._lateAnimationHolders={}}U._registeredForLateAnimationBindings.reset()}}(this)},P.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((U,b)=>U.playOrder-b.playOrder))},P.prototype.beginWeightedAnimation=function(U,b,e){let K=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,D=arguments.length>7?arguments[7]:void 0,S=arguments.length>8?arguments[8]:void 0,u=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const W=this.beginAnimation(U,b,e,p,m,i,D,!1,S,u,r);return W.weight=K,W},P.prototype.beginAnimation=function(U,b,e,K){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,m=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,D=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],S=arguments.length>8?arguments[8]:void 0,u=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(p<0){const U=b;b=e,e=U,p=-p}b>e&&(p=-p),D&&this.stopAnimation(U,void 0,S),i||(i=new W(this,U,b,e,K,p,m,void 0,u,r));const f=!S||S(U);if(U.animations&&f&&i.appendAnimations(U,U.animations),U.getAnimatables){const r=U.getAnimatables();for(let U=0;U<r.length;U++)this.beginAnimation(r[U],b,e,K,p,m,i,D,S,u)}return i.reset(),i},P.prototype.beginHierarchyAnimation=function(U,b,e,K,p){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,D=arguments.length>7?arguments[7]:void 0,S=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],u=arguments.length>9?arguments[9]:void 0,r=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const W=U.getDescendants(b),f=[];f.push(this.beginAnimation(U,e,K,p,m,i,D,S,u,void 0,r));for(const l of W)f.push(this.beginAnimation(l,e,K,p,m,i,D,S,u,void 0,r));return f},P.prototype.beginDirectAnimation=function(U,b,e,K,p){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(m<0){const U=e;e=K,K=U,m=-m}return e>K&&(m=-m),new W(this,U,e,K,p,m,arguments.length>6?arguments[6]:void 0,b,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},P.prototype.beginDirectHierarchyAnimation=function(U,b,e,K,p,m,i,D,S){let u=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const r=U.getDescendants(b),W=[];W.push(this.beginDirectAnimation(U,e,K,p,m,i,D,S,u));for(const f of r)W.push(this.beginDirectAnimation(f,e,K,p,m,i,D,S,u));return W},P.prototype.getAnimatableByTarget=function(U){for(let b=0;b<this._activeAnimatables.length;b++)if(this._activeAnimatables[b].target===U)return this._activeAnimatables[b];return null},P.prototype.getAllAnimatablesByTarget=function(U){const b=[];for(let e=0;e<this._activeAnimatables.length;e++)this._activeAnimatables[e].target===U&&b.push(this._activeAnimatables[e]);return b},P.prototype.stopAnimation=function(U,b,e){const K=this.getAllAnimatablesByTarget(U);for(const p of K)p.stop(b,e)},P.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let U=0;U<this._activeAnimatables.length;U++)this._activeAnimatables[U].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const U of this.animationGroups)U.stop()});class A{getClassName(){return"TargetedAnimation"}serialize(){const U={};return U.animation=this.animation.serialize(),U.targetId=this.target.id,U}}class Y{get mask(){return this._mask}set mask(U){this._mask!==U&&(this._mask=U,this.syncWithMask(!0))}syncWithMask(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||U){this._numActiveAnimatables=0;for(let U=0;U<this._animatables.length;++U){const b=this._animatables[U];!this.mask||this.mask.disabled||this.mask.retainsTarget(b.target.name)?(this._numActiveAnimatables++,b.paused&&b.restart()):b.paused||b.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let U=0;U<this._animatables.length;++U){const b=this._animatables[U];this.mask.retainsTarget(b.target.name)||(b.stop(),this._animatables.splice(U,1),--U)}for(let U=0;U<this._targetedAnimations.length;U++){const b=this._targetedAnimations[U];this.mask.retainsTarget(b.target.name)||(this._targetedAnimations.splice(U,1),--U)}}}get from(){return this._from}set from(U){if(this._from!==U){this._from=U;for(let U=0;U<this._animatables.length;U++){this._animatables[U].fromFrame=this._from}}}get to(){return this._to}set to(U){if(this._to!==U){this._to=U;for(let U=0;U<this._animatables.length;U++){this._animatables[U].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(U){if(this._speedRatio!==U){this._speedRatio=U;for(let U=0;U<this._animatables.length;U++){this._animatables[U].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(U){if(this._loopAnimation!==U){this._loopAnimation=U;for(let U=0;U<this._animatables.length;U++){this._animatables[U].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(U){if(this._isAdditive!==U){this._isAdditive=U;for(let U=0;U<this._animatables.length;U++){this._animatables[U].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(U){this._weight!==U&&(this._weight=U,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(U){if(this._playOrder!==U&&(this._playOrder=U,this._animatables.length>0)){for(let U=0;U<this._animatables.length;U++)this._animatables[U].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(U){if(this._enableBlending!==U&&(this._enableBlending=U,null!==U))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.enableBlending=U}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(U){if(this._blendingSpeed!==U&&(this._blendingSpeed=U,null!==U))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.blendingSpeed=U}getLength(U,b){U=U??this._from;return((b=b??this._to)-U)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(U){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],K=arguments.length>3?arguments[3]:void 0;if(0===U.length)return null;K=K??U[0].weight;let p=Number.MAX_VALUE,m=-Number.MAX_VALUE;if(e)for(const D of U)D.from<p&&(p=D.from),D.to>m&&(m=D.to);const i=new Y(U[0].name+"_merged",U[0]._scene,K);for(const D of U){e&&D.normalize(p,m);for(const U of D.targetedAnimations)i.addTargetedAnimation(U.animation,U.target);b&&D.dispose()}return i}constructor(U){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,K=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=U,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new p.e,this.onAnimationLoopObservable=new p.e,this.onAnimationGroupLoopObservable=new p.e,this.onAnimationGroupEndObservable=new p.e,this.onAnimationGroupPauseObservable=new p.e,this.onAnimationGroupPlayObservable=new p.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=b||m.e.LastCreatedScene,this._weight=e,this._playOrder=K,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(U,b){const e=new A;e.animation=U,e.target=b;const K=U.getKeys();return this._from>K[0].frame&&(this._from=K[0].frame),this._to<K[K.length-1].frame&&(this._to=K[K.length-1].frame),null!==this._enableBlending&&(U.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(U.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(e),this._shouldStart=!0,e}removeTargetedAnimation(U){for(let b=this._targetedAnimations.length-1;b>-1;b--){this._targetedAnimations[b].animation===U&&this._targetedAnimations.splice(b,1)}}normalize(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==U&&(U=this._from),null==b&&(b=this._to);for(let e=0;e<this._targetedAnimations.length;e++){const K=this._targetedAnimations[e].animation.getKeys(),p=K[0],m=K[K.length-1];if(p.frame>U){const b={frame:U,value:p.value,inTangent:p.inTangent,outTangent:p.outTangent,interpolation:p.interpolation};K.splice(0,0,b)}if(m.frame<b){const U={frame:b,value:m.value,inTangent:m.inTangent,outTangent:m.outTangent,interpolation:m.interpolation};K.push(U)}}return this._from=U,this._to=b,this}_processLoop(U,b,e){U.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(b),this._animationLoopFlags[e]||(this._animationLoopFlags[e]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0],b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2?arguments[2]:void 0,K=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=U,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let m=0;m<this._targetedAnimations.length;m++){const i=this._targetedAnimations[m],D=this._scene.beginDirectAnimation(i.target,[i.animation],void 0!==e?e:this._from,void 0!==K?K:this._to,U,b,void 0,void 0,void 0!==p?p:this._isAdditive);D.weight=this._weight,D.playOrder=this._playOrder,D.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(i),this._checkAnimationGroupEnded(D)},this._processLoop(D,i,m),this._animatables.push(D)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=b,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let U=0;U<this._animatables.length;U++){this._animatables[U].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(U){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==U&&(this.loopAnimation=U),this.restart()):(this.stop(),this.start(U,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let U=0;U<this._animatables.length;U++){this._animatables[U].reset()}return this}restart(){if(!this._isStarted)return this;for(let U=0;U<this._animatables.length;U++){this._animatables[U].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const b=this._animatables.slice();for(let K=0;K<b.length;K++)b[K].stop(void 0,void 0,!0,U);let e=0;for(let K=0;K<this._scene._activeAnimatables.length;K++){const b=this._scene._activeAnimatables[K];b._runtimeAnimations.length>0?this._scene._activeAnimatables[e++]=b:U&&this._checkAnimationGroupEnded(b,U)}return this._scene._activeAnimatables.length=e,this._isStarted=!1,this}setWeightForAllAnimatables(U){for(let b=0;b<this._animatables.length;b++){this._animatables[b].weight=U}return this}syncAllAnimationsWith(U){for(let b=0;b<this._animatables.length;b++){this._animatables[b].syncWith(U)}return this}goToFrame(U){if(!this._isStarted)return this;for(let b=0;b<this._animatables.length;b++){this._animatables[b].goToFrame(U)}return this}getCurrentFrame(){var U;return(null===(U=this.animatables[0])||void 0===U?void 0:U.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const U=this._scene.animationGroups.indexOf(this);if(U>-1&&this._scene.animationGroups.splice(U,1),this._parentContainer){const U=this._parentContainer.animationGroups.indexOf(this);U>-1&&this._parentContainer.animationGroups.splice(U,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(U){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const e=this._animatables.indexOf(U);e>-1&&this._animatables.splice(e,1),0===this._animatables.length&&(this._isStarted=!1,b||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(U,b){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const K=new Y(U||this.name,this._scene,this._weight,this._playOrder);K._from=this.from,K._to=this.to,K._speedRatio=this.speedRatio,K._loopAnimation=this.loopAnimation,K._isAdditive=this.isAdditive,K._enableBlending=this.enableBlending,K._blendingSpeed=this.blendingSpeed,K.metadata=this.metadata,K.mask=this.mask;for(const p of this._targetedAnimations)K.addTargetedAnimation(e?p.animation.clone():p.animation,b?b(p.target):p.target);return K}serialize(){const U={};U.name=this.name,U.from=this.from,U.to=this.to,U.speedRatio=this.speedRatio,U.loopAnimation=this.loopAnimation,U.isAdditive=this.isAdditive,U.weight=this.weight,U.playOrder=this.playOrder,U.enableBlending=this.enableBlending,U.blendingSpeed=this.blendingSpeed,U.targetedAnimations=[];for(let b=0;b<this.targetedAnimations.length;b++){const e=this.targetedAnimations[b];U.targetedAnimations[b]=e.serialize()}return i.b&&i.b.HasTags(this)&&(U.tags=i.b.GetTags(this)),this.metadata&&(U.metadata=this.metadata),U}static Parse(U,b){const e=new Y(U.name,b,U.weight,U.playOrder);for(let p=0;p<U.targetedAnimations.length;p++){const m=U.targetedAnimations[p],i=K.b.Parse(m.animation),D=m.targetId;if("influence"===m.animation.property){const U=b.getMorphTargetById(D);U&&e.addTargetedAnimation(i,U)}else{const U=b.getNodeById(D);null!=U&&e.addTargetedAnimation(i,U)}}return i.b&&i.b.AddTagsTo(e,U.tags),null!==U.from&&null!==U.to&&e.normalize(U.from,U.to),void 0!==U.speedRatio&&(e._speedRatio=U.speedRatio),void 0!==U.loopAnimation&&(e._loopAnimation=U.loopAnimation),void 0!==U.isAdditive&&(e._isAdditive=U.isAdditive),void 0!==U.weight&&(e._weight=U.weight),void 0!==U.playOrder&&(e._playOrder=U.playOrder),void 0!==U.enableBlending&&(e._enableBlending=U.enableBlending),void 0!==U.blendingSpeed&&(e._blendingSpeed=U.blendingSpeed),void 0!==U.metadata&&(e.metadata=U.metadata),e}static MakeAnimationAdditive(U,b,e){let p;p="object"===typeof b?b:{referenceFrame:b,range:e,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let m=U;p.cloneOriginalAnimationGroup&&(m=U.clone(p.clonedAnimationGroupName||m.name));const i=m.targetedAnimations;for(let D=0;D<i.length;D++){const U=i[D];U.animation=K.b.MakeAnimationAdditive(U.animation,p)}if(m.isAdditive=!0,p.clipKeys){let U=Number.MAX_VALUE,b=-Number.MAX_VALUE;const e=m.targetedAnimations;for(let K=0;K<e.length;K++){const p=e[K].animation.getKeys();U>p[0].frame&&(U=p[0].frame),b<p[p.length-1].frame&&(b=p[p.length-1].frame)}m._from=U,m._to=b}return m}static ClipKeys(U,b,e,K,p){const m=U.clone(K||U.name);return Y.ClipKeysInPlace(m,b,e,p)}static ClipKeysInPlace(U,b,e,K){return Y.ClipInPlace(U,b,e,K,!1)}static ClipFrames(U,b,e,K,p){const m=U.clone(K||U.name);return Y.ClipFramesInPlace(m,b,e,p)}static ClipFramesInPlace(U,b,e,K){return Y.ClipInPlace(U,b,e,K,!0)}static ClipInPlace(U,b,e,K){let p=arguments.length>4&&void 0!==arguments[4]&&arguments[4],m=Number.MAX_VALUE,i=-Number.MAX_VALUE;const D=U.targetedAnimations;for(let S=0;S<D.length;S++){const U=D[S],u=K?U.animation:U.animation.clone();p&&(u.createKeyForFrame(b),u.createKeyForFrame(e));const r=u.getKeys(),W=[];let f=Number.MAX_VALUE;for(let K=0;K<r.length;K++){const U=r[K];if(!p&&K>=b&&K<=e||p&&U.frame>=b&&U.frame<=e){const b={frame:U.frame,value:U.value.clone?U.value.clone():U.value,inTangent:U.inTangent,outTangent:U.outTangent,interpolation:U.interpolation,lockedTangent:U.lockedTangent};f===Number.MAX_VALUE&&(f=b.frame),b.frame-=f,W.push(b)}}0!==W.length?(m>W[0].frame&&(m=W[0].frame),i<W[W.length-1].frame&&(i=W[W.length-1].frame),u.setKeys(W,!0),U.animation=u):(D.splice(S,1),S--)}return U._from=m,U._to=i,U}getClassName(){return"AnimationGroup"}toString(U){let b="Name: "+this.name;return b+=", type: "+this.getClassName(),U&&(b+=", from: "+this._from,b+=", to: "+this._to,b+=", isStarted: "+this._isStarted,b+=", speedRatio: "+this._speedRatio,b+=", targetedAnimations length: "+this._targetedAnimations.length,b+=", animatables length: "+this._animatables),b}}}}]);