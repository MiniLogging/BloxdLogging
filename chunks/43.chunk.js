"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12335:(G,D,N)=>{N.r(D),N.d(D,{AnimationGroup:()=>h,TargetedAnimation:()=>y});var T=N(11733),o=N(1003),Z=N(1030),n=N(1183),C=N(11724),P=N(1009);class r{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(G,D,N,o){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=D,this._target=G,this._scene=N,this._host=o,this._activeTargets=[],D._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===T.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=P.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const G={frame:0,value:this._minValue};this._keys.splice(0,0,G)}if(this._target instanceof Array){let G=0;for(const D of this._target)this._preparePath(D,G),this._getOriginalValues(G),G++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const Z=D.getEvents();Z&&Z.length>0&&Z.forEach((G=>{this._events.push(G._clone())})),this._enableBlending=G&&G.animationPropertiesOverride?G.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(G){let D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const N=this._animation.targetPropertyPath;if(N.length>1){let T=G;for(let G=0;G<N.length-1;G++){const D=N[G];if(T=T[D],void 0===T)throw new Error(`Invalid property (${D}) in property path (${N.join(".")})`)}this._targetPath=N[N.length-1],this._activeTargets[D]=T}else this._targetPath=N[0],this._activeTargets[D]=G;if(void 0===this._activeTargets[D][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${N.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let G=0;for(const D of this._target)void 0!==this._originalValue[G]&&this._setValue(D,this._activeTargets[G],this._originalValue[G],-1,G),G++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let G=0;G<this._events.length;G++)this._events[G].isDone=!1}isStopped(){return this._stopped}dispose(){const G=this._animation.runtimeAnimations.indexOf(this);G>-1&&this._animation.runtimeAnimations.splice(G,1)}setValue(G,D){if(this._targetIsArray)for(let N=0;N<this._target.length;N++){const T=this._target[N];this._setValue(T,this._activeTargets[N],G,D,N)}else this._setValue(this._target,this._directTarget,G,D,0)}_getOriginalValues(){let G,D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const N=this._activeTargets[D];G=N.getLocalMatrix&&"_matrix"===this._targetPath?N.getLocalMatrix():N[this._targetPath],G&&G.clone?this._originalValue[D]=G.clone():this._originalValue[D]=G}_registerTargetForLateAnimationBinding(G,D){const N=G.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(N),N._lateAnimationHolders||(N._lateAnimationHolders={}),N._lateAnimationHolders[G.targetPath]||(N._lateAnimationHolders[G.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:D}),G.isAdditive?(N._lateAnimationHolders[G.targetPath].additiveAnimations.push(G),N._lateAnimationHolders[G.targetPath].totalAdditiveWeight+=G.weight):(N._lateAnimationHolders[G.targetPath].animations.push(G),N._lateAnimationHolders[G.targetPath].totalWeight+=G.weight)}_setValue(G,D,N,o,Z){if(this._currentActiveTarget=D,this._weight=o,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const G=D[this._targetPath];G.clone?this._originalBlendValue=G.clone():this._originalBlendValue=G}this._originalBlendValue.m?T.b.AllowMatrixDecomposeForInterpolation?this._currentValue?P.c.DecomposeLerpToRef(this._originalBlendValue,N,this._blendingFactor,this._currentValue):this._currentValue=P.c.DecomposeLerp(this._originalBlendValue,N,this._blendingFactor):this._currentValue?P.c.LerpToRef(this._originalBlendValue,N,this._blendingFactor,this._currentValue):this._currentValue=P.c.Lerp(this._originalBlendValue,N,this._blendingFactor):this._currentValue=T.b._UniversalLerp(this._originalBlendValue,N,this._blendingFactor);const o=G&&G.animationPropertiesOverride?G.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=o}else this._currentValue?this._currentValue.p?this._currentValue.p(N):this._currentValue=N:null!==N&&void 0!==N&&N.clone?this._currentValue=N.clone():this._currentValue=N;-1!==o?this._registerTargetForLateAnimationBinding(this,this._originalValue[Z]):this._animationState.loopMode===T.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[Z],D[this._targetPath]):D[this._targetPath]=this._originalValue[Z]+this._currentValue:D[this._targetPath]=this._currentValue,G.we&&G.we(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(G){let D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const N=this._animation.getKeys();G<N[0].frame?G=N[0].frame:G>N[N.length-1].frame&&(G=N[N.length-1].frame);const T=this._events;if(T.length)for(let Z=0;Z<T.length;Z++)T[Z].onlyOnce||(T[Z].isDone=T[Z].frame<G);this._currentFrame=G;const o=this._animation._interpolate(G,this._animationState);this.setValue(o,D)}_prepareForSpeedRatioChange(G){const D=this._previousElapsedTime*(this._animation.framePerSecond*G)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-D}animate(G,D,N,o,Z){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const C=this._animation,P=C.targetPropertyPath;if(!P||P.length<1)return this._stopped=!0,!1;let r=!0;(D<this._minFrame||D>this._maxFrame)&&(D=this._minFrame),(N<this._minFrame||N>this._maxFrame)&&(N=this._maxFrame);const v=N-D;let q,g=G*(C.framePerSecond*Z)/1e3+this._absoluteFrameOffset,X=0,W=!1;const j=o&&this._animationState.loopMode===T.b.ANIMATIONLOOPMODE_YOYO;if(j){const G=(g-D)/v,N=Math.sin(G*Math.PI);g=Math.abs(N)*v+D;const T=N>=0?1:-1;this._yoyoDirection!==T&&(W=!0),this._yoyoDirection=T}if(this._previousElapsedTime=G,this._previousAbsoluteFrame=g,!o&&N>=D&&(g>=v&&Z>0||g<=0&&Z<0))r=!1,X=C._getKeyValue(this._maxValue);else if(!o&&D>=N&&(g<=v&&Z<0||g>=0&&Z>0))r=!1,X=C._getKeyValue(this._minValue);else if(this._animationState.loopMode!==T.b.ANIMATIONLOOPMODE_CYCLE){const G=N.toString()+D.toString();if(!this._offsetsCache[G]){this._animationState.repeatCount=0,this._animationState.loopMode=T.b.ANIMATIONLOOPMODE_CYCLE;const o=C._interpolate(D,this._animationState),Z=C._interpolate(N,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),C.dataType){case T.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[G]=Z-o;break;case T.b.ANIMATIONTYPE_QUATERNION:case T.b.ANIMATIONTYPE_VECTOR3:case T.b.ANIMATIONTYPE_VECTOR2:case T.b.ANIMATIONTYPE_SIZE:case T.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[G]=Z.Jc(o)}this._highLimitsCache[G]=Z}X=this._highLimitsCache[G],q=this._offsetsCache[G]}if(void 0===q)switch(C.dataType){case T.b.ANIMATIONTYPE_FLOAT:q=0;break;case T.b.ANIMATIONTYPE_QUATERNION:q=T.l;break;case T.b.ANIMATIONTYPE_VECTOR3:q=T.p;break;case T.b.ANIMATIONTYPE_VECTOR2:q=T.o;break;case T.b.ANIMATIONTYPE_SIZE:q=T.n;break;case T.b.ANIMATIONTYPE_COLOR3:q=T.f;break;case T.b.ANIMATIONTYPE_COLOR4:q=T.j}let Y;if(this._host&&this._host.syncRoot){const G=this._host.syncRoot;Y=D+v*((G.masterFrame-G.fromFrame)/(G.toFrame-G.fromFrame))}else Y=g>0&&D>N||g<0&&D<N?r&&0!==v?N+g%v:D:r&&0!==v?D+g%v:N;const y=this._events;if(!j&&(Z>0&&this.currentFrame>Y||Z<0&&this.currentFrame<Y)||j&&W){this._onLoop();for(let G=0;G<y.length;G++)y[G].onlyOnce||(y[G].isDone=!1);this._animationState.key=Z>0?0:C.getKeys().length-1}this._currentFrame=Y,this._animationState.repeatCount=0===v?0:g/v|0,this._animationState.highLimitValue=X,this._animationState.offsetValue=q;const h=C._interpolate(Y,this._animationState);if(this.setValue(h,n),y.length)for(let T=0;T<y.length;T++)if(v>=0&&Y>=y[T].frame&&y[T].frame>=D||v<0&&Y<=y[T].frame&&y[T].frame<=D){const G=y[T];G.isDone||(G.onlyOnce&&(y.splice(T,1),T--),G.isDone=!0,G.action(Y))}return r||(this._stopped=!0),r}}var v=N(1153);class q{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(G){this._weight=-1!==G?Math.min(Math.max(G,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(G){for(let D=0;D<this._runtimeAnimations.length;D++){this._runtimeAnimations[D]._prepareForSpeedRatioChange(G)}this._speedRatio=G,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(G,D){let N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,Z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,C=arguments.length>6?arguments[6]:void 0,P=arguments.length>7?arguments[7]:void 0,r=arguments.length>8?arguments[8]:void 0,v=arguments.length>9&&void 0!==arguments[9]&&arguments[9],q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=D,this.fromFrame=N,this.toFrame=T,this.loopAnimation=Z,this.onAnimationEnd=C,this.onAnimationLoop=r,this.isAdditive=v,this.playOrder=q,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.uf=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new o.b,this.onAnimationLoopObservable=new o.b,this._scene=G,P&&this.appendAnimations(D,P),this._speedRatio=n,G._activeAnimatables.push(this)}syncWith(G){if(this._syncRoot=G,G){const G=this._scene._activeAnimatables.indexOf(this);G>-1&&(this._scene._activeAnimatables.splice(G,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(G,D){for(let N=0;N<D.length;N++){const T=D[N],o=new r(G,T,this._scene,this);o._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(o)}}getAnimationByTargetProperty(G){const D=this._runtimeAnimations;for(let N=0;N<D.length;N++)if(D[N].animation.targetProperty===G)return D[N].animation;return null}getRuntimeAnimationByTargetProperty(G){const D=this._runtimeAnimations;for(let N=0;N<D.length;N++)if(D[N].animation.targetProperty===G)return D[N];return null}reset(){const G=this._runtimeAnimations;for(let D=0;D<G.length;D++)G[D].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(G){const D=this._runtimeAnimations;for(let N=0;N<D.length;N++)D[N].animation.enableBlending=!0,D[N].animation.blendingSpeed=G}disableBlending(){const G=this._runtimeAnimations;for(let D=0;D<G.length;D++)G[D].animation.enableBlending=!1}goToFrame(G){const D=this._runtimeAnimations;if(D[0]){const N=D[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??D[0].currentFrame;const T=0===this.speedRatio?0:(G-this._frameToSyncFromJump)/N*1e3/this.speedRatio;this._manualJumpDelay=-T}for(let N=0;N<D.length;N++)D[N].goToFrame(G,this._weight);this._goToFrame=G}get paused(){return this.uf}pause(){this.uf||(this.uf=!0)}restart(){this.uf=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(G,D){let N=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(G||D){const o=this._scene._activeAnimatables.indexOf(this);if(o>-1){const Z=this._runtimeAnimations;for(let N=Z.length-1;N>=0;N--){const T=Z[N];G&&T.animation.name!=G||(D&&!D(T.target)||(T.dispose(),Z.splice(N,1)))}0==Z.length&&(N||this._scene._activeAnimatables.splice(o,1),T||this._raiseOnAnimationEnd())}}else{const G=this._scene._activeAnimatables.indexOf(this);if(G>-1){N||this._scene._activeAnimatables.splice(G,1);const D=this._runtimeAnimations;for(let G=0;G<D.length;G++)D[G].dispose();this._runtimeAnimations.length=0,T||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((G=>{this.onAnimationEndObservable.add((()=>{G(this)}),void 0,void 0,this,!0)}))}_animate(G){if(this.uf)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=G),!0;if(null===this._localDelayOffset?(this._localDelayOffset=G,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=G-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let D=!1;const N=this._runtimeAnimations;let T;for(T=0;T<N.length;T++){const o=N[T].animate(G-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);D=D||o}if(this.animationStarted=D,!D){if(this.disposeOnEnd)for(T=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(T,1),T=0;T<N.length;T++)N[T].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return D}}function g(G){if(0===G.totalWeight&&0===G.totalAdditiveWeight)return G.originalValue;let D=1;const N=P.k.Ad[0],T=P.k.Ad[1],o=P.k.Quaternion[0];let Z=0;const n=G.animations[0],C=G.originalValue;let r=1,v=!1;if(G.totalWeight<1)r=1-G.totalWeight,C.decompose(T,o,N);else{if(Z=1,D=G.totalWeight,r=n.weight/D,1==r){if(!G.totalAdditiveWeight)return n.currentValue;v=!0}n.currentValue.decompose(T,o,N)}if(!v){T.scaleInPlace(r),N.scaleInPlace(r),o.scaleInPlace(r);for(let n=Z;n<G.animations.length;n++){const Z=G.animations[n];if(0===Z.weight)continue;r=Z.weight/D;const C=P.k.Ad[2],v=P.k.Ad[3],q=P.k.Quaternion[1];Z.currentValue.decompose(v,q,C),v.scaleAndAddToRef(r,T),q.scaleAndAddToRef(P.g.Dot(o,q)>0?r:-r,o),C.scaleAndAddToRef(r,N)}o.normalize()}for(let g=0;g<G.additiveAnimations.length;g++){const D=G.additiveAnimations[g];if(0===D.weight)continue;const Z=P.k.Ad[2],n=P.k.Ad[3],C=P.k.Quaternion[1];D.currentValue.decompose(n,C,Z),n.multiplyToRef(T,n),P.s.LerpToRef(T,n,D.weight,T),o.multiplyToRef(C,C),P.g.SlerpToRef(o,C,D.weight,o),Z.scaleAndAddToRef(D.weight,N)}const q=n?n._animationState.workValue:P.k.Matrix[0].clone();return P.c.ComposeToRef(T,o,N,q),q}function X(G,D){if(0===G.totalWeight&&0===G.totalAdditiveWeight)return D;const N=G.animations[0],T=G.originalValue;let o=D;if(0===G.totalWeight&&G.totalAdditiveWeight>0)o.p(T);else if(1===G.animations.length){if(P.g.SlerpToRef(T,N.currentValue,Math.min(1,G.totalWeight),o),0===G.totalAdditiveWeight)return o}else if(G.animations.length>1){let N,Z,n=1;if(G.totalWeight<1){const D=1-G.totalWeight;N=[],Z=[],N.push(T),Z.push(D)}else{if(2===G.animations.length&&(P.g.SlerpToRef(G.animations[0].currentValue,G.animations[1].currentValue,G.animations[1].weight/G.totalWeight,D),0===G.totalAdditiveWeight))return D;N=[],Z=[],n=G.totalWeight}for(let D=0;D<G.animations.length;D++){const T=G.animations[D];N.push(T.currentValue),Z.push(T.weight/n)}let C=0;for(let G=0;G<N.length;)G?(C+=Z[G],P.g.SlerpToRef(o,N[G],Z[G]/C,o),G++):(P.g.SlerpToRef(N[G],N[G+1],Z[G+1]/(Z[G]+Z[G+1]),D),o=D,C=Z[G]+Z[G+1],G+=2)}for(let Z=0;Z<G.additiveAnimations.length;Z++){const D=G.additiveAnimations[Z];0!==D.weight&&(o.multiplyToRef(D.currentValue,P.k.Quaternion[0]),P.g.SlerpToRef(o,P.k.Quaternion[0],D.weight,o))}return o}var W,j,Y=N(1218);W=Y.e,(j=C.e)&&(j.prototype.copyAnimationRange=function(G,D,N){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new T.b(this.name,"_matrix",G.animations[0].framePerSecond,T.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const n=G.animations[0].getRange(D);if(!n)return!1;const C=n.from,P=n.to,r=G.animations[0].getKeys(),v=G.length,q=G.getParent(),g=this.getParent(),X=o&&q&&v&&this.length&&v!==this.length,W=X&&g&&q?g.length/q.length:1,j=o&&!g&&Z&&(1!==Z.x||1!==Z.y||1!==Z.z),Y=this.animations[0].getKeys();let y,h,m;for(let T=0,R=r.length;T<R;T++)y=r[T],y.frame>=C&&y.frame<=P&&(o?(m=y.value.clone(),X?(h=m.getTranslation(),m.setTranslation(h.scaleInPlace(W))):j&&Z?(h=m.getTranslation(),m.setTranslation(h.multiplyInPlace(Z))):m=y.value):m=y.value,Y.push({frame:y.frame+N,value:m}));return this.animations[0].createRange(D,C+N,P+N),!0}),W&&(W.prototype._animate=function(G){if(!this.animationsEnabled)return;const D=v.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=D}this.deltaTime=void 0!==G?G:this.useConstantAnimationDeltaTime?16:(D-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=D;const N=this._activeAnimatables;if(0===N.length)return;this._animationTime+=this.deltaTime;const o=this._animationTime;for(let T=0;T<N.length;T++){const G=N[T];!G._animate(o)&&G.disposeOnEnd&&T--}!function(G){if(G._registeredForLateAnimationBindings.length){for(let D=0;D<G._registeredForLateAnimationBindings.length;D++){const N=G._registeredForLateAnimationBindings.data[D];for(const G in N._lateAnimationHolders){const D=N._lateAnimationHolders[G],o=D.animations[0],Z=D.originalValue;if(void 0===Z||null===Z)continue;const n=T.b.AllowMatrixDecomposeForInterpolation&&Z.m;let C=N[G];if(n)C=g(D);else if(void 0!==Z.w)C=X(D,C||P.g.Identity());else{let G=0,N=1;const n=o&&o._animationState.loopMode===T.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(D.totalWeight<1)C=n?Z.clone?Z.clone():Z:o&&Z.scale?Z.scale(1-D.totalWeight):o?Z*(1-D.totalWeight):Z.clone?Z.clone():Z;else if(o){N=D.totalWeight;const T=o.weight/N;C=1!==T?o.currentValue.scale?o.currentValue.scale(T):o.currentValue*T:o.currentValue,n&&(C.addToRef?C.addToRef(Z,C):C+=Z),G=1}for(let T=G;T<D.animations.length;T++){const G=D.animations[T],o=G.weight/N;o&&(G.currentValue.scaleAndAddToRef?G.currentValue.scaleAndAddToRef(o,C):C+=G.currentValue*o)}for(let T=0;T<D.additiveAnimations.length;T++){const G=D.additiveAnimations[T],N=G.weight;N&&(G.currentValue.scaleAndAddToRef?G.currentValue.scaleAndAddToRef(N,C):C+=G.currentValue*N)}}N[G]=C}N._lateAnimationHolders={}}G._registeredForLateAnimationBindings.reset()}}(this)},W.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((G,D)=>G.playOrder-D.playOrder))},W.prototype.beginWeightedAnimation=function(G,D,N){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,C=arguments.length>7?arguments[7]:void 0,P=arguments.length>8?arguments[8]:void 0,r=arguments.length>9?arguments[9]:void 0,v=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const q=this.beginAnimation(G,D,N,o,Z,n,C,!1,P,r,v);return q.weight=T,q},W.prototype.beginAnimation=function(G,D,N,T){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Z=arguments.length>5?arguments[5]:void 0,n=arguments.length>6?arguments[6]:void 0,C=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],P=arguments.length>8?arguments[8]:void 0,r=arguments.length>9?arguments[9]:void 0,v=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(o<0){const G=D;D=N,N=G,o=-o}D>N&&(o=-o),C&&this.stopAnimation(G,void 0,P),n||(n=new q(this,G,D,N,T,o,Z,void 0,r,v));const g=!P||P(G);if(G.animations&&g&&n.appendAnimations(G,G.animations),G.getAnimatables){const v=G.getAnimatables();for(let G=0;G<v.length;G++)this.beginAnimation(v[G],D,N,T,o,Z,n,C,P,r)}return n.reset(),n},W.prototype.beginHierarchyAnimation=function(G,D,N,T,o){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,n=arguments.length>6?arguments[6]:void 0,C=arguments.length>7?arguments[7]:void 0,P=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],r=arguments.length>9?arguments[9]:void 0,v=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const q=G.getDescendants(D),g=[];g.push(this.beginAnimation(G,N,T,o,Z,n,C,P,r,void 0,v));for(const X of q)g.push(this.beginAnimation(X,N,T,o,Z,n,C,P,r,void 0,v));return g},W.prototype.beginDirectAnimation=function(G,D,N,T,o){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(Z<0){const G=N;N=T,T=G,Z=-Z}return N>T&&(Z=-Z),new q(this,G,N,T,o,Z,arguments.length>6?arguments[6]:void 0,D,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},W.prototype.beginDirectHierarchyAnimation=function(G,D,N,T,o,Z,n,C,P){let r=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const v=G.getDescendants(D),q=[];q.push(this.beginDirectAnimation(G,N,T,o,Z,n,C,P,r));for(const g of v)q.push(this.beginDirectAnimation(g,N,T,o,Z,n,C,P,r));return q},W.prototype.getAnimatableByTarget=function(G){for(let D=0;D<this._activeAnimatables.length;D++)if(this._activeAnimatables[D].target===G)return this._activeAnimatables[D];return null},W.prototype.getAllAnimatablesByTarget=function(G){const D=[];for(let N=0;N<this._activeAnimatables.length;N++)this._activeAnimatables[N].target===G&&D.push(this._activeAnimatables[N]);return D},W.prototype.stopAnimation=function(G,D,N){const T=this.getAllAnimatablesByTarget(G);for(const o of T)o.stop(D,N)},W.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let G=0;G<this._activeAnimatables.length;G++)this._activeAnimatables[G].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const G of this.animationGroups)G.stop()});class y{getClassName(){return"TargetedAnimation"}serialize(){const G={};return G.animation=this.animation.serialize(),G.targetId=this.target.id,G}}class h{get mask(){return this._mask}set mask(G){this._mask!==G&&(this._mask=G,this.syncWithMask(!0))}syncWithMask(){let G=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||G){this._numActiveAnimatables=0;for(let G=0;G<this._animatables.length;++G){const D=this._animatables[G];!this.mask||this.mask.disabled||this.mask.retainsTarget(D.target.name)?(this._numActiveAnimatables++,D.paused&&D.restart()):D.paused||D.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let G=0;G<this._animatables.length;++G){const D=this._animatables[G];this.mask.retainsTarget(D.target.name)||(D.stop(),this._animatables.splice(G,1),--G)}for(let G=0;G<this._targetedAnimations.length;G++){const D=this._targetedAnimations[G];this.mask.retainsTarget(D.target.name)||(this._targetedAnimations.splice(G,1),--G)}}}get from(){return this._from}set from(G){if(this._from!==G){this._from=G;for(let G=0;G<this._animatables.length;G++){this._animatables[G].fromFrame=this._from}}}get to(){return this._to}set to(G){if(this._to!==G){this._to=G;for(let G=0;G<this._animatables.length;G++){this._animatables[G].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(G){if(this._speedRatio!==G){this._speedRatio=G;for(let G=0;G<this._animatables.length;G++){this._animatables[G].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(G){if(this._loopAnimation!==G){this._loopAnimation=G;for(let G=0;G<this._animatables.length;G++){this._animatables[G].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(G){if(this._isAdditive!==G){this._isAdditive=G;for(let G=0;G<this._animatables.length;G++){this._animatables[G].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(G){this._weight!==G&&(this._weight=G,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(G){if(this._playOrder!==G&&(this._playOrder=G,this._animatables.length>0)){for(let G=0;G<this._animatables.length;G++)this._animatables[G].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(G){if(this._enableBlending!==G&&(this._enableBlending=G,null!==G))for(let D=0;D<this._targetedAnimations.length;++D)this._targetedAnimations[D].animation.enableBlending=G}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(G){if(this._blendingSpeed!==G&&(this._blendingSpeed=G,null!==G))for(let D=0;D<this._targetedAnimations.length;++D)this._targetedAnimations[D].animation.blendingSpeed=G}getLength(G,D){G=G??this._from;return((D=D??this._to)-G)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(G){let D=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],N=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3?arguments[3]:void 0;if(0===G.length)return null;T=T??G[0].weight;let o=Number.MAX_VALUE,Z=-Number.MAX_VALUE;if(N)for(const C of G)C.from<o&&(o=C.from),C.to>Z&&(Z=C.to);const n=new h(G[0].name+"_merged",G[0]._scene,T);for(const C of G){N&&C.normalize(o,Z);for(const G of C.targetedAnimations)n.addTargetedAnimation(G.animation,G.target);D&&C.dispose()}return n}constructor(G){let D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,N=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=G,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new o.b,this.onAnimationLoopObservable=new o.b,this.onAnimationGroupLoopObservable=new o.b,this.onAnimationGroupEndObservable=new o.b,this.onAnimationGroupPauseObservable=new o.b,this.onAnimationGroupPlayObservable=new o.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=D||Z.e.LastCreatedScene,this._weight=N,this._playOrder=T,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(G,D){const N=new y;N.animation=G,N.target=D;const T=G.getKeys();return this._from>T[0].frame&&(this._from=T[0].frame),this._to<T[T.length-1].frame&&(this._to=T[T.length-1].frame),null!==this._enableBlending&&(G.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(G.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(N),this._shouldStart=!0,N}removeTargetedAnimation(G){for(let D=this._targetedAnimations.length-1;D>-1;D--){this._targetedAnimations[D].animation===G&&this._targetedAnimations.splice(D,1)}}normalize(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==G&&(G=this._from),null==D&&(D=this._to);for(let N=0;N<this._targetedAnimations.length;N++){const T=this._targetedAnimations[N].animation.getKeys(),o=T[0],Z=T[T.length-1];if(o.frame>G){const D={frame:G,value:o.value,inTangent:o.inTangent,outTangent:o.outTangent,interpolation:o.interpolation};T.splice(0,0,D)}if(Z.frame<D){const G={frame:D,value:Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation};T.push(G)}}return this._from=G,this._to=D,this}_processLoop(G,D,N){G.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(D),this._animationLoopFlags[N]||(this._animationLoopFlags[N]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let G=arguments.length>0&&void 0!==arguments[0]&&arguments[0],D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,N=arguments.length>2?arguments[2]:void 0,T=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=G,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let Z=0;Z<this._targetedAnimations.length;Z++){const n=this._targetedAnimations[Z],C=this._scene.beginDirectAnimation(n.target,[n.animation],void 0!==N?N:this._from,void 0!==T?T:this._to,G,D,void 0,void 0,void 0!==o?o:this._isAdditive);C.weight=this._weight,C.playOrder=this._playOrder,C.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(n),this._checkAnimationGroupEnded(C)},this._processLoop(C,n,Z),this._animatables.push(C)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=D,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let G=0;G<this._animatables.length;G++){this._animatables[G].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(G){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==G&&(this.loopAnimation=G),this.restart()):(this.stop(),this.start(G,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let G=0;G<this._animatables.length;G++){this._animatables[G].reset()}return this}restart(){if(!this._isStarted)return this;for(let G=0;G<this._animatables.length;G++){this._animatables[G].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let G=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const D=this._animatables.slice();for(let T=0;T<D.length;T++)D[T].stop(void 0,void 0,!0,G);let N=0;for(let T=0;T<this._scene._activeAnimatables.length;T++){const D=this._scene._activeAnimatables[T];D._runtimeAnimations.length>0?this._scene._activeAnimatables[N++]=D:G&&this._checkAnimationGroupEnded(D,G)}return this._scene._activeAnimatables.length=N,this._isStarted=!1,this}setWeightForAllAnimatables(G){for(let D=0;D<this._animatables.length;D++){this._animatables[D].weight=G}return this}syncAllAnimationsWith(G){for(let D=0;D<this._animatables.length;D++){this._animatables[D].syncWith(G)}return this}goToFrame(G){if(!this._isStarted)return this;for(let D=0;D<this._animatables.length;D++){this._animatables[D].goToFrame(G)}return this}getCurrentFrame(){var G;return(null===(G=this.animatables[0])||void 0===G?void 0:G.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const G=this._scene.animationGroups.indexOf(this);if(G>-1&&this._scene.animationGroups.splice(G,1),this._parentContainer){const G=this._parentContainer.animationGroups.indexOf(this);G>-1&&this._parentContainer.animationGroups.splice(G,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(G){let D=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const N=this._animatables.indexOf(G);N>-1&&this._animatables.splice(N,1),0===this._animatables.length&&(this._isStarted=!1,D||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(G,D){let N=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const T=new h(G||this.name,this._scene,this._weight,this._playOrder);T._from=this.from,T._to=this.to,T._speedRatio=this.speedRatio,T._loopAnimation=this.loopAnimation,T._isAdditive=this.isAdditive,T._enableBlending=this.enableBlending,T._blendingSpeed=this.blendingSpeed,T.metadata=this.metadata,T.mask=this.mask;for(const o of this._targetedAnimations)T.addTargetedAnimation(N?o.animation.clone():o.animation,D?D(o.target):o.target);return T}serialize(){const G={};G.name=this.name,G.from=this.from,G.to=this.to,G.speedRatio=this.speedRatio,G.loopAnimation=this.loopAnimation,G.isAdditive=this.isAdditive,G.weight=this.weight,G.playOrder=this.playOrder,G.enableBlending=this.enableBlending,G.blendingSpeed=this.blendingSpeed,G.targetedAnimations=[];for(let D=0;D<this.targetedAnimations.length;D++){const N=this.targetedAnimations[D];G.targetedAnimations[D]=N.serialize()}return n.b&&n.b.HasTags(this)&&(G.tags=n.b.GetTags(this)),this.metadata&&(G.metadata=this.metadata),G}static Parse(G,D){const N=new h(G.name,D,G.weight,G.playOrder);for(let o=0;o<G.targetedAnimations.length;o++){const Z=G.targetedAnimations[o],n=T.b.Parse(Z.animation),C=Z.targetId;if("influence"===Z.animation.property){const G=D.getMorphTargetById(C);G&&N.addTargetedAnimation(n,G)}else{const G=D.getNodeById(C);null!=G&&N.addTargetedAnimation(n,G)}}return n.b&&n.b.AddTagsTo(N,G.tags),null!==G.from&&null!==G.to&&N.normalize(G.from,G.to),void 0!==G.speedRatio&&(N._speedRatio=G.speedRatio),void 0!==G.loopAnimation&&(N._loopAnimation=G.loopAnimation),void 0!==G.isAdditive&&(N._isAdditive=G.isAdditive),void 0!==G.weight&&(N._weight=G.weight),void 0!==G.playOrder&&(N._playOrder=G.playOrder),void 0!==G.enableBlending&&(N._enableBlending=G.enableBlending),void 0!==G.blendingSpeed&&(N._blendingSpeed=G.blendingSpeed),void 0!==G.metadata&&(N.metadata=G.metadata),N}static MakeAnimationAdditive(G,D,N){let o;o="object"===typeof D?D:{referenceFrame:D,range:N,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let Z=G;o.cloneOriginalAnimationGroup&&(Z=G.clone(o.clonedAnimationGroupName||Z.name));const n=Z.targetedAnimations;for(let C=0;C<n.length;C++){const G=n[C];G.animation=T.b.MakeAnimationAdditive(G.animation,o)}if(Z.isAdditive=!0,o.clipKeys){let G=Number.MAX_VALUE,D=-Number.MAX_VALUE;const N=Z.targetedAnimations;for(let T=0;T<N.length;T++){const o=N[T].animation.getKeys();G>o[0].frame&&(G=o[0].frame),D<o[o.length-1].frame&&(D=o[o.length-1].frame)}Z._from=G,Z._to=D}return Z}static ClipKeys(G,D,N,T,o){const Z=G.clone(T||G.name);return h.ClipKeysInPlace(Z,D,N,o)}static ClipKeysInPlace(G,D,N,T){return h.ClipInPlace(G,D,N,T,!1)}static ClipFrames(G,D,N,T,o){const Z=G.clone(T||G.name);return h.ClipFramesInPlace(Z,D,N,o)}static ClipFramesInPlace(G,D,N,T){return h.ClipInPlace(G,D,N,T,!0)}static ClipInPlace(G,D,N,T){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],Z=Number.MAX_VALUE,n=-Number.MAX_VALUE;const C=G.targetedAnimations;for(let P=0;P<C.length;P++){const G=C[P],r=T?G.animation:G.animation.clone();o&&(r.createKeyForFrame(D),r.createKeyForFrame(N));const v=r.getKeys(),q=[];let g=Number.MAX_VALUE;for(let T=0;T<v.length;T++){const G=v[T];if(!o&&T>=D&&T<=N||o&&G.frame>=D&&G.frame<=N){const D={frame:G.frame,value:G.value.clone?G.value.clone():G.value,inTangent:G.inTangent,outTangent:G.outTangent,interpolation:G.interpolation,lockedTangent:G.lockedTangent};g===Number.MAX_VALUE&&(g=D.frame),D.frame-=g,q.push(D)}}0!==q.length?(Z>q[0].frame&&(Z=q[0].frame),n<q[q.length-1].frame&&(n=q[q.length-1].frame),r.setKeys(q,!0),G.animation=r):(C.splice(P,1),P--)}return G._from=Z,G._to=n,G}getClassName(){return"AnimationGroup"}toString(G){let D="Name: "+this.name;return D+=", type: "+this.getClassName(),G&&(D+=", from: "+this._from,D+=", to: "+this._to,D+=", isStarted: "+this._isStarted,D+=", speedRatio: "+this._speedRatio,D+=", targetedAnimations length: "+this._targetedAnimations.length,D+=", animatables length: "+this._animatables),D}}}}]);