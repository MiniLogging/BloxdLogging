"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12335:(N,Z,d)=>{d.r(Z),d.d(Z,{AnimationGroup:()=>C,TargetedAnimation:()=>U});var X=d(11715),I=d(958),m=d(986),z=d(1100),w=d(11709),S=d(960);class e{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(N,Z,d,I){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=Z,this._target=N,this._scene=d,this._host=I,this._activeTargets=[],Z._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===X.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=S.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const N={frame:0,value:this._minValue};this._keys.splice(0,0,N)}if(this._target instanceof Array){let N=0;for(const Z of this._target)this._preparePath(Z,N),this._getOriginalValues(N),N++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const m=Z.getEvents();m&&m.length>0&&m.forEach((N=>{this._events.push(N._clone())})),this._enableBlending=N&&N.animationPropertiesOverride?N.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(N){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const d=this._animation.targetPropertyPath;if(d.length>1){let X=N;for(let N=0;N<d.length-1;N++){const Z=d[N];if(X=X[Z],void 0===X)throw new Error(`Invalid property (${Z}) in property path (${d.join(".")})`)}this._targetPath=d[d.length-1],this._activeTargets[Z]=X}else this._targetPath=d[0],this._activeTargets[Z]=N;if(void 0===this._activeTargets[Z][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${d.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let N=0;for(const Z of this._target)void 0!==this._originalValue[N]&&this._setValue(Z,this._activeTargets[N],this._originalValue[N],-1,N),N++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let N=0;N<this._events.length;N++)this._events[N].isDone=!1}isStopped(){return this._stopped}dispose(){const N=this._animation.runtimeAnimations.indexOf(this);N>-1&&this._animation.runtimeAnimations.splice(N,1)}setValue(N,Z){if(this._targetIsArray)for(let d=0;d<this._target.length;d++){const X=this._target[d];this._setValue(X,this._activeTargets[d],N,Z,d)}else this._setValue(this._target,this._directTarget,N,Z,0)}_getOriginalValues(){let N,Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const d=this._activeTargets[Z];N=d.getLocalMatrix&&"_matrix"===this._targetPath?d.getLocalMatrix():d[this._targetPath],N&&N.clone?this._originalValue[Z]=N.clone():this._originalValue[Z]=N}_registerTargetForLateAnimationBinding(N,Z){const d=N.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(d),d._lateAnimationHolders||(d._lateAnimationHolders={}),d._lateAnimationHolders[N.targetPath]||(d._lateAnimationHolders[N.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:Z}),N.isAdditive?(d._lateAnimationHolders[N.targetPath].additiveAnimations.push(N),d._lateAnimationHolders[N.targetPath].totalAdditiveWeight+=N.weight):(d._lateAnimationHolders[N.targetPath].animations.push(N),d._lateAnimationHolders[N.targetPath].totalWeight+=N.weight)}_setValue(N,Z,d,I,m){if(this._currentActiveTarget=Z,this._weight=I,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const N=Z[this._targetPath];N.clone?this._originalBlendValue=N.clone():this._originalBlendValue=N}this._originalBlendValue.m?X.b.AllowMatrixDecomposeForInterpolation?this._currentValue?S.c.DecomposeLerpToRef(this._originalBlendValue,d,this._blendingFactor,this._currentValue):this._currentValue=S.c.DecomposeLerp(this._originalBlendValue,d,this._blendingFactor):this._currentValue?S.c.LerpToRef(this._originalBlendValue,d,this._blendingFactor,this._currentValue):this._currentValue=S.c.Lerp(this._originalBlendValue,d,this._blendingFactor):this._currentValue=X.b._UniversalLerp(this._originalBlendValue,d,this._blendingFactor);const I=N&&N.animationPropertiesOverride?N.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=I}else this._currentValue?this._currentValue.p?this._currentValue.p(d):this._currentValue=d:null!==d&&void 0!==d&&d.clone?this._currentValue=d.clone():this._currentValue=d;-1!==I?this._registerTargetForLateAnimationBinding(this,this._originalValue[m]):this._animationState.loopMode===X.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[m],Z[this._targetPath]):Z[this._targetPath]=this._originalValue[m]+this._currentValue:Z[this._targetPath]=this._currentValue,N.fe&&N.fe(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(N){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const d=this._animation.getKeys();N<d[0].frame?N=d[0].frame:N>d[d.length-1].frame&&(N=d[d.length-1].frame);const X=this._events;if(X.length)for(let m=0;m<X.length;m++)X[m].onlyOnce||(X[m].isDone=X[m].frame<N);this._currentFrame=N;const I=this._animation._interpolate(N,this._animationState);this.setValue(I,Z)}_prepareForSpeedRatioChange(N){const Z=this._previousElapsedTime*(this._animation.framePerSecond*N)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-Z}animate(N,Z,d,I,m){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const w=this._animation,S=w.targetPropertyPath;if(!S||S.length<1)return this._stopped=!0,!1;let e=!0;(Z<this._minFrame||Z>this._maxFrame)&&(Z=this._minFrame),(d<this._minFrame||d>this._maxFrame)&&(d=this._maxFrame);const j=d-Z;let B,D=N*(w.framePerSecond*m)/1e3+this._absoluteFrameOffset,v=0,T=!1;const k=I&&this._animationState.loopMode===X.b.ANIMATIONLOOPMODE_YOYO;if(k){const N=(D-Z)/j,d=Math.sin(N*Math.PI);D=Math.abs(d)*j+Z;const X=d>=0?1:-1;this._yoyoDirection!==X&&(T=!0),this._yoyoDirection=X}if(this._previousElapsedTime=N,this._previousAbsoluteFrame=D,!I&&d>=Z&&(D>=j&&m>0||D<=0&&m<0))e=!1,v=w._getKeyValue(this._maxValue);else if(!I&&Z>=d&&(D<=j&&m<0||D>=0&&m>0))e=!1,v=w._getKeyValue(this._minValue);else if(this._animationState.loopMode!==X.b.ANIMATIONLOOPMODE_CYCLE){const N=d.toString()+Z.toString();if(!this._offsetsCache[N]){this._animationState.repeatCount=0,this._animationState.loopMode=X.b.ANIMATIONLOOPMODE_CYCLE;const I=w._interpolate(Z,this._animationState),m=w._interpolate(d,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),w.dataType){case X.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[N]=m-I;break;case X.b.ANIMATIONTYPE_QUATERNION:case X.b.ANIMATIONTYPE_VECTOR3:case X.b.ANIMATIONTYPE_VECTOR2:case X.b.ANIMATIONTYPE_SIZE:case X.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[N]=m.rc(I)}this._highLimitsCache[N]=m}v=this._highLimitsCache[N],B=this._offsetsCache[N]}if(void 0===B)switch(w.dataType){case X.b.ANIMATIONTYPE_FLOAT:B=0;break;case X.b.ANIMATIONTYPE_QUATERNION:B=X.m;break;case X.b.ANIMATIONTYPE_VECTOR3:B=X.t;break;case X.b.ANIMATIONTYPE_VECTOR2:B=X.r;break;case X.b.ANIMATIONTYPE_SIZE:B=X.o;break;case X.b.ANIMATIONTYPE_COLOR3:B=X.f;break;case X.b.ANIMATIONTYPE_COLOR4:B=X.i}let h;if(this._host&&this._host.syncRoot){const N=this._host.syncRoot;h=Z+j*((N.masterFrame-N.fromFrame)/(N.toFrame-N.fromFrame))}else h=D>0&&Z>d||D<0&&Z<d?e&&0!==j?d+D%j:Z:e&&0!==j?Z+D%j:d;const U=this._events;if(!k&&(m>0&&this.currentFrame>h||m<0&&this.currentFrame<h)||k&&T){this._onLoop();for(let N=0;N<U.length;N++)U[N].onlyOnce||(U[N].isDone=!1);this._animationState.key=m>0?0:w.getKeys().length-1}this._currentFrame=h,this._animationState.repeatCount=0===j?0:D/j|0,this._animationState.highLimitValue=v,this._animationState.offsetValue=B;const C=w._interpolate(h,this._animationState);if(this.setValue(C,z),U.length)for(let X=0;X<U.length;X++)if(j>=0&&h>=U[X].frame&&U[X].frame>=Z||j<0&&h<=U[X].frame&&U[X].frame<=Z){const N=U[X];N.isDone||(N.onlyOnce&&(U.splice(X,1),X--),N.isDone=!0,N.action(h))}return e||(this._stopped=!0),e}}var j=d(1077);class B{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(N){this._weight=-1!==N?Math.min(Math.max(N,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(N){for(let Z=0;Z<this._runtimeAnimations.length;Z++){this._runtimeAnimations[Z]._prepareForSpeedRatioChange(N)}this._speedRatio=N,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(N,Z){let d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,m=arguments.length>4&&void 0!==arguments[4]&&arguments[4],z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,e=arguments.length>8?arguments[8]:void 0,j=arguments.length>9&&void 0!==arguments[9]&&arguments[9],B=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=Z,this.fromFrame=d,this.toFrame=X,this.loopAnimation=m,this.onAnimationEnd=w,this.onAnimationLoop=e,this.isAdditive=j,this.playOrder=B,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.We=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new I.d,this.onAnimationLoopObservable=new I.d,this._scene=N,S&&this.appendAnimations(Z,S),this._speedRatio=z,N._activeAnimatables.push(this)}syncWith(N){if(this._syncRoot=N,N){const N=this._scene._activeAnimatables.indexOf(this);N>-1&&(this._scene._activeAnimatables.splice(N,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(N,Z){for(let d=0;d<Z.length;d++){const X=Z[d],I=new e(N,X,this._scene,this);I._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(I)}}getAnimationByTargetProperty(N){const Z=this._runtimeAnimations;for(let d=0;d<Z.length;d++)if(Z[d].animation.targetProperty===N)return Z[d].animation;return null}getRuntimeAnimationByTargetProperty(N){const Z=this._runtimeAnimations;for(let d=0;d<Z.length;d++)if(Z[d].animation.targetProperty===N)return Z[d];return null}reset(){const N=this._runtimeAnimations;for(let Z=0;Z<N.length;Z++)N[Z].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(N){const Z=this._runtimeAnimations;for(let d=0;d<Z.length;d++)Z[d].animation.enableBlending=!0,Z[d].animation.blendingSpeed=N}disableBlending(){const N=this._runtimeAnimations;for(let Z=0;Z<N.length;Z++)N[Z].animation.enableBlending=!1}goToFrame(N){const Z=this._runtimeAnimations;if(Z[0]){const d=Z[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??Z[0].currentFrame;const X=0===this.speedRatio?0:(N-this._frameToSyncFromJump)/d*1e3/this.speedRatio;this._manualJumpDelay=-X}for(let d=0;d<Z.length;d++)Z[d].goToFrame(N,this._weight);this._goToFrame=N}get paused(){return this.We}pause(){this.We||(this.We=!0)}restart(){this.We=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(N,Z){let d=arguments.length>2&&void 0!==arguments[2]&&arguments[2],X=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(N||Z){const I=this._scene._activeAnimatables.indexOf(this);if(I>-1){const m=this._runtimeAnimations;for(let d=m.length-1;d>=0;d--){const X=m[d];N&&X.animation.name!=N||(Z&&!Z(X.target)||(X.dispose(),m.splice(d,1)))}0==m.length&&(d||this._scene._activeAnimatables.splice(I,1),X||this._raiseOnAnimationEnd())}}else{const N=this._scene._activeAnimatables.indexOf(this);if(N>-1){d||this._scene._activeAnimatables.splice(N,1);const Z=this._runtimeAnimations;for(let N=0;N<Z.length;N++)Z[N].dispose();this._runtimeAnimations.length=0,X||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((N=>{this.onAnimationEndObservable.add((()=>{N(this)}),void 0,void 0,this,!0)}))}_animate(N){if(this.We)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=N),!0;if(null===this._localDelayOffset?(this._localDelayOffset=N,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=N-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let Z=!1;const d=this._runtimeAnimations;let X;for(X=0;X<d.length;X++){const I=d[X].animate(N-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);Z=Z||I}if(this.animationStarted=Z,!Z){if(this.disposeOnEnd)for(X=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(X,1),X=0;X<d.length;X++)d[X].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return Z}}function D(N){if(0===N.totalWeight&&0===N.totalAdditiveWeight)return N.originalValue;let Z=1;const d=S.h.kd[0],X=S.h.kd[1],I=S.h.Quaternion[0];let m=0;const z=N.animations[0],w=N.originalValue;let e=1,j=!1;if(N.totalWeight<1)e=1-N.totalWeight,w.decompose(X,I,d);else{if(m=1,Z=N.totalWeight,e=z.weight/Z,1==e){if(!N.totalAdditiveWeight)return z.currentValue;j=!0}z.currentValue.decompose(X,I,d)}if(!j){X.scaleInPlace(e),d.scaleInPlace(e),I.scaleInPlace(e);for(let z=m;z<N.animations.length;z++){const m=N.animations[z];if(0===m.weight)continue;e=m.weight/Z;const w=S.h.kd[2],j=S.h.kd[3],B=S.h.Quaternion[1];m.currentValue.decompose(j,B,w),j.scaleAndAddToRef(e,X),B.scaleAndAddToRef(S.g.Dot(I,B)>0?e:-e,I),w.scaleAndAddToRef(e,d)}I.normalize()}for(let D=0;D<N.additiveAnimations.length;D++){const Z=N.additiveAnimations[D];if(0===Z.weight)continue;const m=S.h.kd[2],z=S.h.kd[3],w=S.h.Quaternion[1];Z.currentValue.decompose(z,w,m),z.multiplyToRef(X,z),S.n.LerpToRef(X,z,Z.weight,X),I.multiplyToRef(w,w),S.g.SlerpToRef(I,w,Z.weight,I),m.scaleAndAddToRef(Z.weight,d)}const B=z?z._animationState.workValue:S.h.Matrix[0].clone();return S.c.ComposeToRef(X,I,d,B),B}function v(N,Z){if(0===N.totalWeight&&0===N.totalAdditiveWeight)return Z;const d=N.animations[0],X=N.originalValue;let I=Z;if(0===N.totalWeight&&N.totalAdditiveWeight>0)I.p(X);else if(1===N.animations.length){if(S.g.SlerpToRef(X,d.currentValue,Math.min(1,N.totalWeight),I),0===N.totalAdditiveWeight)return I}else if(N.animations.length>1){let d,m,z=1;if(N.totalWeight<1){const Z=1-N.totalWeight;d=[],m=[],d.push(X),m.push(Z)}else{if(2===N.animations.length&&(S.g.SlerpToRef(N.animations[0].currentValue,N.animations[1].currentValue,N.animations[1].weight/N.totalWeight,Z),0===N.totalAdditiveWeight))return Z;d=[],m=[],z=N.totalWeight}for(let Z=0;Z<N.animations.length;Z++){const X=N.animations[Z];d.push(X.currentValue),m.push(X.weight/z)}let w=0;for(let N=0;N<d.length;)N?(w+=m[N],S.g.SlerpToRef(I,d[N],m[N]/w,I),N++):(S.g.SlerpToRef(d[N],d[N+1],m[N+1]/(m[N]+m[N+1]),Z),I=Z,w=m[N]+m[N+1],N+=2)}for(let m=0;m<N.additiveAnimations.length;m++){const Z=N.additiveAnimations[m];0!==Z.weight&&(I.multiplyToRef(Z.currentValue,S.h.Quaternion[0]),S.g.SlerpToRef(I,S.h.Quaternion[0],Z.weight,I))}return I}var T,k,h=d(1131);T=h.e,(k=w.c)&&(k.prototype.copyAnimationRange=function(N,Z,d){let I=arguments.length>3&&void 0!==arguments[3]&&arguments[3],m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new X.b(this.name,"_matrix",N.animations[0].framePerSecond,X.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const z=N.animations[0].getRange(Z);if(!z)return!1;const w=z.from,S=z.to,e=N.animations[0].getKeys(),j=N.length,B=N.getParent(),D=this.getParent(),v=I&&B&&j&&this.length&&j!==this.length,T=v&&D&&B?D.length/B.length:1,k=I&&!D&&m&&(1!==m.x||1!==m.y||1!==m.z),h=this.animations[0].getKeys();let U,C,M;for(let X=0,Q=e.length;X<Q;X++)U=e[X],U.frame>=w&&U.frame<=S&&(I?(M=U.value.clone(),v?(C=M.getTranslation(),M.setTranslation(C.scaleInPlace(T))):k&&m?(C=M.getTranslation(),M.setTranslation(C.multiplyInPlace(m))):M=U.value):M=U.value,h.push({frame:U.frame+d,value:M}));return this.animations[0].createRange(Z,w+d,S+d),!0}),T&&(T.prototype._animate=function(N){if(!this.animationsEnabled)return;const Z=j.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=Z}this.deltaTime=void 0!==N?N:this.useConstantAnimationDeltaTime?16:(Z-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=Z;const d=this._activeAnimatables;if(0===d.length)return;this._animationTime+=this.deltaTime;const I=this._animationTime;for(let X=0;X<d.length;X++){const N=d[X];!N._animate(I)&&N.disposeOnEnd&&X--}!function(N){if(N._registeredForLateAnimationBindings.length){for(let Z=0;Z<N._registeredForLateAnimationBindings.length;Z++){const d=N._registeredForLateAnimationBindings.data[Z];for(const N in d._lateAnimationHolders){const Z=d._lateAnimationHolders[N],I=Z.animations[0],m=Z.originalValue;if(void 0===m||null===m)continue;const z=X.b.AllowMatrixDecomposeForInterpolation&&m.m;let w=d[N];if(z)w=D(Z);else if(void 0!==m.w)w=v(Z,w||S.g.Identity());else{let N=0,d=1;const z=I&&I._animationState.loopMode===X.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(Z.totalWeight<1)w=z?m.clone?m.clone():m:I&&m.scale?m.scale(1-Z.totalWeight):I?m*(1-Z.totalWeight):m.clone?m.clone():m;else if(I){d=Z.totalWeight;const X=I.weight/d;w=1!==X?I.currentValue.scale?I.currentValue.scale(X):I.currentValue*X:I.currentValue,z&&(w.addToRef?w.addToRef(m,w):w+=m),N=1}for(let X=N;X<Z.animations.length;X++){const N=Z.animations[X],I=N.weight/d;I&&(N.currentValue.scaleAndAddToRef?N.currentValue.scaleAndAddToRef(I,w):w+=N.currentValue*I)}for(let X=0;X<Z.additiveAnimations.length;X++){const N=Z.additiveAnimations[X],d=N.weight;d&&(N.currentValue.scaleAndAddToRef?N.currentValue.scaleAndAddToRef(d,w):w+=N.currentValue*d)}}d[N]=w}d._lateAnimationHolders={}}N._registeredForLateAnimationBindings.reset()}}(this)},T.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((N,Z)=>N.playOrder-Z.playOrder))},T.prototype.beginWeightedAnimation=function(N,Z,d){let X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,I=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,z=arguments.length>6?arguments[6]:void 0,w=arguments.length>7?arguments[7]:void 0,S=arguments.length>8?arguments[8]:void 0,e=arguments.length>9?arguments[9]:void 0,j=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const B=this.beginAnimation(N,Z,d,I,m,z,w,!1,S,e,j);return B.weight=X,B},T.prototype.beginAnimation=function(N,Z,d,X){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,m=arguments.length>5?arguments[5]:void 0,z=arguments.length>6?arguments[6]:void 0,w=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],S=arguments.length>8?arguments[8]:void 0,e=arguments.length>9?arguments[9]:void 0,j=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(I<0){const N=Z;Z=d,d=N,I=-I}Z>d&&(I=-I),w&&this.stopAnimation(N,void 0,S),z||(z=new B(this,N,Z,d,X,I,m,void 0,e,j));const D=!S||S(N);if(N.animations&&D&&z.appendAnimations(N,N.animations),N.getAnimatables){const j=N.getAnimatables();for(let N=0;N<j.length;N++)this.beginAnimation(j[N],Z,d,X,I,m,z,w,S,e)}return z.reset(),z},T.prototype.beginHierarchyAnimation=function(N,Z,d,X,I){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,z=arguments.length>6?arguments[6]:void 0,w=arguments.length>7?arguments[7]:void 0,S=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],e=arguments.length>9?arguments[9]:void 0,j=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const B=N.getDescendants(Z),D=[];D.push(this.beginAnimation(N,d,X,I,m,z,w,S,e,void 0,j));for(const v of B)D.push(this.beginAnimation(v,d,X,I,m,z,w,S,e,void 0,j));return D},T.prototype.beginDirectAnimation=function(N,Z,d,X,I){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(m<0){const N=d;d=X,X=N,m=-m}return d>X&&(m=-m),new B(this,N,d,X,I,m,arguments.length>6?arguments[6]:void 0,Z,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},T.prototype.beginDirectHierarchyAnimation=function(N,Z,d,X,I,m,z,w,S){let e=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const j=N.getDescendants(Z),B=[];B.push(this.beginDirectAnimation(N,d,X,I,m,z,w,S,e));for(const D of j)B.push(this.beginDirectAnimation(D,d,X,I,m,z,w,S,e));return B},T.prototype.getAnimatableByTarget=function(N){for(let Z=0;Z<this._activeAnimatables.length;Z++)if(this._activeAnimatables[Z].target===N)return this._activeAnimatables[Z];return null},T.prototype.getAllAnimatablesByTarget=function(N){const Z=[];for(let d=0;d<this._activeAnimatables.length;d++)this._activeAnimatables[d].target===N&&Z.push(this._activeAnimatables[d]);return Z},T.prototype.stopAnimation=function(N,Z,d){const X=this.getAllAnimatablesByTarget(N);for(const I of X)I.stop(Z,d)},T.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let N=0;N<this._activeAnimatables.length;N++)this._activeAnimatables[N].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const N of this.animationGroups)N.stop()});class U{getClassName(){return"TargetedAnimation"}serialize(){const N={};return N.animation=this.animation.serialize(),N.targetId=this.target.id,N}}class C{get mask(){return this._mask}set mask(N){this._mask!==N&&(this._mask=N,this.syncWithMask(!0))}syncWithMask(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||N){this._numActiveAnimatables=0;for(let N=0;N<this._animatables.length;++N){const Z=this._animatables[N];!this.mask||this.mask.disabled||this.mask.retainsTarget(Z.target.name)?(this._numActiveAnimatables++,Z.paused&&Z.restart()):Z.paused||Z.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let N=0;N<this._animatables.length;++N){const Z=this._animatables[N];this.mask.retainsTarget(Z.target.name)||(Z.stop(),this._animatables.splice(N,1),--N)}for(let N=0;N<this._targetedAnimations.length;N++){const Z=this._targetedAnimations[N];this.mask.retainsTarget(Z.target.name)||(this._targetedAnimations.splice(N,1),--N)}}}get from(){return this._from}set from(N){if(this._from!==N){this._from=N;for(let N=0;N<this._animatables.length;N++){this._animatables[N].fromFrame=this._from}}}get to(){return this._to}set to(N){if(this._to!==N){this._to=N;for(let N=0;N<this._animatables.length;N++){this._animatables[N].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(N){if(this._speedRatio!==N){this._speedRatio=N;for(let N=0;N<this._animatables.length;N++){this._animatables[N].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(N){if(this._loopAnimation!==N){this._loopAnimation=N;for(let N=0;N<this._animatables.length;N++){this._animatables[N].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(N){if(this._isAdditive!==N){this._isAdditive=N;for(let N=0;N<this._animatables.length;N++){this._animatables[N].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(N){this._weight!==N&&(this._weight=N,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(N){if(this._playOrder!==N&&(this._playOrder=N,this._animatables.length>0)){for(let N=0;N<this._animatables.length;N++)this._animatables[N].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(N){if(this._enableBlending!==N&&(this._enableBlending=N,null!==N))for(let Z=0;Z<this._targetedAnimations.length;++Z)this._targetedAnimations[Z].animation.enableBlending=N}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(N){if(this._blendingSpeed!==N&&(this._blendingSpeed=N,null!==N))for(let Z=0;Z<this._targetedAnimations.length;++Z)this._targetedAnimations[Z].animation.blendingSpeed=N}getLength(N,Z){N=N??this._from;return((Z=Z??this._to)-N)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(N){let Z=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],d=arguments.length>2&&void 0!==arguments[2]&&arguments[2],X=arguments.length>3?arguments[3]:void 0;if(0===N.length)return null;X=X??N[0].weight;let I=Number.MAX_VALUE,m=-Number.MAX_VALUE;if(d)for(const w of N)w.from<I&&(I=w.from),w.to>m&&(m=w.to);const z=new C(N[0].name+"_merged",N[0]._scene,X);for(const w of N){d&&w.normalize(I,m);for(const N of w.targetedAnimations)z.addTargetedAnimation(N.animation,N.target);Z&&w.dispose()}return z}constructor(N){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=N,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new I.d,this.onAnimationLoopObservable=new I.d,this.onAnimationGroupLoopObservable=new I.d,this.onAnimationGroupEndObservable=new I.d,this.onAnimationGroupPauseObservable=new I.d,this.onAnimationGroupPlayObservable=new I.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=Z||m.e.LastCreatedScene,this._weight=d,this._playOrder=X,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(N,Z){const d=new U;d.animation=N,d.target=Z;const X=N.getKeys();return this._from>X[0].frame&&(this._from=X[0].frame),this._to<X[X.length-1].frame&&(this._to=X[X.length-1].frame),null!==this._enableBlending&&(N.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(N.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(d),this._shouldStart=!0,d}removeTargetedAnimation(N){for(let Z=this._targetedAnimations.length-1;Z>-1;Z--){this._targetedAnimations[Z].animation===N&&this._targetedAnimations.splice(Z,1)}}normalize(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==N&&(N=this._from),null==Z&&(Z=this._to);for(let d=0;d<this._targetedAnimations.length;d++){const X=this._targetedAnimations[d].animation.getKeys(),I=X[0],m=X[X.length-1];if(I.frame>N){const Z={frame:N,value:I.value,inTangent:I.inTangent,outTangent:I.outTangent,interpolation:I.interpolation};X.splice(0,0,Z)}if(m.frame<Z){const N={frame:Z,value:m.value,inTangent:m.inTangent,outTangent:m.outTangent,interpolation:m.interpolation};X.push(N)}}return this._from=N,this._to=Z,this}_processLoop(N,Z,d){N.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(Z),this._animationLoopFlags[d]||(this._animationLoopFlags[d]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,d=arguments.length>2?arguments[2]:void 0,X=arguments.length>3?arguments[3]:void 0,I=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=N,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let m=0;m<this._targetedAnimations.length;m++){const z=this._targetedAnimations[m],w=this._scene.beginDirectAnimation(z.target,[z.animation],void 0!==d?d:this._from,void 0!==X?X:this._to,N,Z,void 0,void 0,void 0!==I?I:this._isAdditive);w.weight=this._weight,w.playOrder=this._playOrder,w.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(z),this._checkAnimationGroupEnded(w)},this._processLoop(w,z,m),this._animatables.push(w)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=Z,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let N=0;N<this._animatables.length;N++){this._animatables[N].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(N){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==N&&(this.loopAnimation=N),this.restart()):(this.stop(),this.start(N,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let N=0;N<this._animatables.length;N++){this._animatables[N].reset()}return this}restart(){if(!this._isStarted)return this;for(let N=0;N<this._animatables.length;N++){this._animatables[N].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const Z=this._animatables.slice();for(let X=0;X<Z.length;X++)Z[X].stop(void 0,void 0,!0,N);let d=0;for(let X=0;X<this._scene._activeAnimatables.length;X++){const Z=this._scene._activeAnimatables[X];Z._runtimeAnimations.length>0?this._scene._activeAnimatables[d++]=Z:N&&this._checkAnimationGroupEnded(Z,N)}return this._scene._activeAnimatables.length=d,this._isStarted=!1,this}setWeightForAllAnimatables(N){for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].weight=N}return this}syncAllAnimationsWith(N){for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].syncWith(N)}return this}goToFrame(N){if(!this._isStarted)return this;for(let Z=0;Z<this._animatables.length;Z++){this._animatables[Z].goToFrame(N)}return this}getCurrentFrame(){var N;return(null===(N=this.animatables[0])||void 0===N?void 0:N.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const N=this._scene.animationGroups.indexOf(this);if(N>-1&&this._scene.animationGroups.splice(N,1),this._parentContainer){const N=this._parentContainer.animationGroups.indexOf(this);N>-1&&this._parentContainer.animationGroups.splice(N,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(N){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const d=this._animatables.indexOf(N);d>-1&&this._animatables.splice(d,1),0===this._animatables.length&&(this._isStarted=!1,Z||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(N,Z){let d=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const X=new C(N||this.name,this._scene,this._weight,this._playOrder);X._from=this.from,X._to=this.to,X._speedRatio=this.speedRatio,X._loopAnimation=this.loopAnimation,X._isAdditive=this.isAdditive,X._enableBlending=this.enableBlending,X._blendingSpeed=this.blendingSpeed,X.metadata=this.metadata,X.mask=this.mask;for(const I of this._targetedAnimations)X.addTargetedAnimation(d?I.animation.clone():I.animation,Z?Z(I.target):I.target);return X}serialize(){const N={};N.name=this.name,N.from=this.from,N.to=this.to,N.speedRatio=this.speedRatio,N.loopAnimation=this.loopAnimation,N.isAdditive=this.isAdditive,N.weight=this.weight,N.playOrder=this.playOrder,N.enableBlending=this.enableBlending,N.blendingSpeed=this.blendingSpeed,N.targetedAnimations=[];for(let Z=0;Z<this.targetedAnimations.length;Z++){const d=this.targetedAnimations[Z];N.targetedAnimations[Z]=d.serialize()}return z.e&&z.e.HasTags(this)&&(N.tags=z.e.GetTags(this)),this.metadata&&(N.metadata=this.metadata),N}static Parse(N,Z){const d=new C(N.name,Z,N.weight,N.playOrder);for(let I=0;I<N.targetedAnimations.length;I++){const m=N.targetedAnimations[I],z=X.b.Parse(m.animation),w=m.targetId;if("influence"===m.animation.property){const N=Z.getMorphTargetById(w);N&&d.addTargetedAnimation(z,N)}else{const N=Z.getNodeById(w);null!=N&&d.addTargetedAnimation(z,N)}}return z.e&&z.e.AddTagsTo(d,N.tags),null!==N.from&&null!==N.to&&d.normalize(N.from,N.to),void 0!==N.speedRatio&&(d._speedRatio=N.speedRatio),void 0!==N.loopAnimation&&(d._loopAnimation=N.loopAnimation),void 0!==N.isAdditive&&(d._isAdditive=N.isAdditive),void 0!==N.weight&&(d._weight=N.weight),void 0!==N.playOrder&&(d._playOrder=N.playOrder),void 0!==N.enableBlending&&(d._enableBlending=N.enableBlending),void 0!==N.blendingSpeed&&(d._blendingSpeed=N.blendingSpeed),void 0!==N.metadata&&(d.metadata=N.metadata),d}static MakeAnimationAdditive(N,Z,d){let I;I="object"===typeof Z?Z:{referenceFrame:Z,range:d,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let m=N;I.cloneOriginalAnimationGroup&&(m=N.clone(I.clonedAnimationGroupName||m.name));const z=m.targetedAnimations;for(let w=0;w<z.length;w++){const N=z[w];N.animation=X.b.MakeAnimationAdditive(N.animation,I)}if(m.isAdditive=!0,I.clipKeys){let N=Number.MAX_VALUE,Z=-Number.MAX_VALUE;const d=m.targetedAnimations;for(let X=0;X<d.length;X++){const I=d[X].animation.getKeys();N>I[0].frame&&(N=I[0].frame),Z<I[I.length-1].frame&&(Z=I[I.length-1].frame)}m._from=N,m._to=Z}return m}static ClipKeys(N,Z,d,X,I){const m=N.clone(X||N.name);return C.ClipKeysInPlace(m,Z,d,I)}static ClipKeysInPlace(N,Z,d,X){return C.ClipInPlace(N,Z,d,X,!1)}static ClipFrames(N,Z,d,X,I){const m=N.clone(X||N.name);return C.ClipFramesInPlace(m,Z,d,I)}static ClipFramesInPlace(N,Z,d,X){return C.ClipInPlace(N,Z,d,X,!0)}static ClipInPlace(N,Z,d,X){let I=arguments.length>4&&void 0!==arguments[4]&&arguments[4],m=Number.MAX_VALUE,z=-Number.MAX_VALUE;const w=N.targetedAnimations;for(let S=0;S<w.length;S++){const N=w[S],e=X?N.animation:N.animation.clone();I&&(e.createKeyForFrame(Z),e.createKeyForFrame(d));const j=e.getKeys(),B=[];let D=Number.MAX_VALUE;for(let X=0;X<j.length;X++){const N=j[X];if(!I&&X>=Z&&X<=d||I&&N.frame>=Z&&N.frame<=d){const Z={frame:N.frame,value:N.value.clone?N.value.clone():N.value,inTangent:N.inTangent,outTangent:N.outTangent,interpolation:N.interpolation,lockedTangent:N.lockedTangent};D===Number.MAX_VALUE&&(D=Z.frame),Z.frame-=D,B.push(Z)}}0!==B.length?(m>B[0].frame&&(m=B[0].frame),z<B[B.length-1].frame&&(z=B[B.length-1].frame),e.setKeys(B,!0),N.animation=e):(w.splice(S,1),S--)}return N._from=m,N._to=z,N}getClassName(){return"AnimationGroup"}toString(N){let Z="Name: "+this.name;return Z+=", type: "+this.getClassName(),N&&(Z+=", from: "+this._from,Z+=", to: "+this._to,Z+=", isStarted: "+this._isStarted,Z+=", speedRatio: "+this._speedRatio,Z+=", targetedAnimations length: "+this._targetedAnimations.length,Z+=", animatables length: "+this._animatables),Z}}}}]);