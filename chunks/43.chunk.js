"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[43],{12979:(O,q,s)=>{s.r(q),s.d(q,{AnimationGroup:()=>m,TargetedAnimation:()=>W});var Z=s(12344),D=s(987),B=s(1019),P=s(1136),y=s(12341),o=s(993);class w{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(O,q,s,D){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=q,this._target=O,this._scene=s,this._host=D,this._activeTargets=[],q._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===Z.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=o.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const O={frame:0,value:this._minValue};this._keys.splice(0,0,O)}if(this._target instanceof Array){let O=0;for(const q of this._target)this._preparePath(q,O),this._getOriginalValues(O),O++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const B=q.getEvents();B&&B.length>0&&B.forEach((O=>{this._events.push(O._clone())})),this._enableBlending=O&&O.animationPropertiesOverride?O.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(O){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const s=this._animation.targetPropertyPath;if(s.length>1){let Z=O;for(let O=0;O<s.length-1;O++){const q=s[O];if(Z=Z[q],void 0===Z)throw new Error(`Invalid property (${q}) in property path (${s.join(".")})`)}this._targetPath=s[s.length-1],this._activeTargets[q]=Z}else this._targetPath=s[0],this._activeTargets[q]=O;if(void 0===this._activeTargets[q][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${s.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let O=0;for(const q of this._target)void 0!==this._originalValue[O]&&this._setValue(q,this._activeTargets[O],this._originalValue[O],-1,O),O++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let O=0;O<this._events.length;O++)this._events[O].isDone=!1}isStopped(){return this._stopped}dispose(){const O=this._animation.runtimeAnimations.indexOf(this);O>-1&&this._animation.runtimeAnimations.splice(O,1)}setValue(O,q){if(this._targetIsArray)for(let s=0;s<this._target.length;s++){const Z=this._target[s];this._setValue(Z,this._activeTargets[s],O,q,s)}else this._setValue(this._target,this._directTarget,O,q,0)}_getOriginalValues(){let O,q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const s=this._activeTargets[q];O=s.getLocalMatrix&&"_matrix"===this._targetPath?s.getLocalMatrix():s[this._targetPath],O&&O.clone?this._originalValue[q]=O.clone():this._originalValue[q]=O}_registerTargetForLateAnimationBinding(O,q){const s=O.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(s),s._lateAnimationHolders||(s._lateAnimationHolders={}),s._lateAnimationHolders[O.targetPath]||(s._lateAnimationHolders[O.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:q}),O.isAdditive?(s._lateAnimationHolders[O.targetPath].additiveAnimations.push(O),s._lateAnimationHolders[O.targetPath].totalAdditiveWeight+=O.weight):(s._lateAnimationHolders[O.targetPath].animations.push(O),s._lateAnimationHolders[O.targetPath].totalWeight+=O.weight)}_setValue(O,q,s,D,B){if(this._currentActiveTarget=q,this._weight=D,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const O=q[this._targetPath];O.clone?this._originalBlendValue=O.clone():this._originalBlendValue=O}this._originalBlendValue.m?Z.c.AllowMatrixDecomposeForInterpolation?this._currentValue?o.e.DecomposeLerpToRef(this._originalBlendValue,s,this._blendingFactor,this._currentValue):this._currentValue=o.e.DecomposeLerp(this._originalBlendValue,s,this._blendingFactor):this._currentValue?o.e.LerpToRef(this._originalBlendValue,s,this._blendingFactor,this._currentValue):this._currentValue=o.e.Lerp(this._originalBlendValue,s,this._blendingFactor):this._currentValue=Z.c._UniversalLerp(this._originalBlendValue,s,this._blendingFactor);const D=O&&O.animationPropertiesOverride?O.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=D}else this._currentValue?this._currentValue.p?this._currentValue.p(s):this._currentValue=s:null!==s&&void 0!==s&&s.clone?this._currentValue=s.clone():this._currentValue=s;-1!==D?this._registerTargetForLateAnimationBinding(this,this._originalValue[B]):this._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[B],q[this._targetPath]):q[this._targetPath]=this._originalValue[B]+this._currentValue:q[this._targetPath]=this._currentValue,O.te&&O.te(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(O){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const s=this._animation.getKeys();O<s[0].frame?O=s[0].frame:O>s[s.length-1].frame&&(O=s[s.length-1].frame);const Z=this._events;if(Z.length)for(let B=0;B<Z.length;B++)Z[B].onlyOnce||(Z[B].isDone=Z[B].frame<O);this._currentFrame=O;const D=this._animation._interpolate(O,this._animationState);this.setValue(D,q)}_prepareForSpeedRatioChange(O){const q=this._previousElapsedTime*(this._animation.framePerSecond*O)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-q}animate(O,q,s,D,B){let P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const y=this._animation,o=y.targetPropertyPath;if(!o||o.length<1)return this._stopped=!0,!1;let w=!0;(q<this._minFrame||q>this._maxFrame)&&(q=this._minFrame),(s<this._minFrame||s>this._maxFrame)&&(s=this._maxFrame);const h=s-q;let n,r=O*(y.framePerSecond*B)/1e3+this._absoluteFrameOffset,j=0,f=!1;const u=D&&this._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_YOYO;if(u){const O=(r-q)/h,s=Math.sin(O*Math.PI);r=Math.abs(s)*h+q;const Z=s>=0?1:-1;this._yoyoDirection!==Z&&(f=!0),this._yoyoDirection=Z}if(this._previousElapsedTime=O,this._previousAbsoluteFrame=r,!D&&s>=q&&(r>=h&&B>0||r<=0&&B<0))w=!1,j=y._getKeyValue(this._maxValue);else if(!D&&q>=s&&(r<=h&&B<0||r>=0&&B>0))w=!1,j=y._getKeyValue(this._minValue);else if(this._animationState.loopMode!==Z.c.ANIMATIONLOOPMODE_CYCLE){const O=s.toString()+q.toString();if(!this._offsetsCache[O]){this._animationState.repeatCount=0,this._animationState.loopMode=Z.c.ANIMATIONLOOPMODE_CYCLE;const D=y._interpolate(q,this._animationState),B=y._interpolate(s,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),y.dataType){case Z.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[O]=B-D;break;case Z.c.ANIMATIONTYPE_QUATERNION:case Z.c.ANIMATIONTYPE_VECTOR3:case Z.c.ANIMATIONTYPE_VECTOR2:case Z.c.ANIMATIONTYPE_SIZE:case Z.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[O]=B.Gc(D)}this._highLimitsCache[O]=B}j=this._highLimitsCache[O],n=this._offsetsCache[O]}if(void 0===n)switch(y.dataType){case Z.c.ANIMATIONTYPE_FLOAT:n=0;break;case Z.c.ANIMATIONTYPE_QUATERNION:n=Z.l;break;case Z.c.ANIMATIONTYPE_VECTOR3:n=Z.s;break;case Z.c.ANIMATIONTYPE_VECTOR2:n=Z.r;break;case Z.c.ANIMATIONTYPE_SIZE:n=Z.n;break;case Z.c.ANIMATIONTYPE_COLOR3:n=Z.g;break;case Z.c.ANIMATIONTYPE_COLOR4:n=Z.i}let c;if(this._host&&this._host.syncRoot){const O=this._host.syncRoot;c=q+h*((O.masterFrame-O.fromFrame)/(O.toFrame-O.fromFrame))}else c=r>0&&q>s||r<0&&q<s?w&&0!==h?s+r%h:q:w&&0!==h?q+r%h:s;const W=this._events;if(!u&&(B>0&&this.currentFrame>c||B<0&&this.currentFrame<c)||u&&f){this._onLoop();for(let O=0;O<W.length;O++)W[O].onlyOnce||(W[O].isDone=!1);this._animationState.key=B>0?0:y.getKeys().length-1}this._currentFrame=c,this._animationState.repeatCount=0===h?0:r/h|0,this._animationState.highLimitValue=j,this._animationState.offsetValue=n;const m=y._interpolate(c,this._animationState);if(this.setValue(m,P),W.length)for(let Z=0;Z<W.length;Z++)if(h>=0&&c>=W[Z].frame&&W[Z].frame>=q||h<0&&c<=W[Z].frame&&W[Z].frame<=q){const O=W[Z];O.isDone||(O.onlyOnce&&(W.splice(Z,1),Z--),O.isDone=!0,O.action(c))}return w||(this._stopped=!0),w}}var h=s(1110);class n{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(O){this._weight=-1!==O?Math.min(Math.max(O,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(O){for(let q=0;q<this._runtimeAnimations.length;q++){this._runtimeAnimations[q]._prepareForSpeedRatioChange(O)}this._speedRatio=O,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(O,q){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,B=arguments.length>4&&void 0!==arguments[4]&&arguments[4],P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,w=arguments.length>8?arguments[8]:void 0,h=arguments.length>9&&void 0!==arguments[9]&&arguments[9],n=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=q,this.fromFrame=s,this.toFrame=Z,this.loopAnimation=B,this.onAnimationEnd=y,this.onAnimationLoop=w,this.isAdditive=h,this.playOrder=n,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.if=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new D.b,this.onAnimationLoopObservable=new D.b,this._scene=O,o&&this.appendAnimations(q,o),this._speedRatio=P,O._activeAnimatables.push(this)}syncWith(O){if(this._syncRoot=O,O){const O=this._scene._activeAnimatables.indexOf(this);O>-1&&(this._scene._activeAnimatables.splice(O,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(O,q){for(let s=0;s<q.length;s++){const Z=q[s],D=new w(O,Z,this._scene,this);D._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(D)}}getAnimationByTargetProperty(O){const q=this._runtimeAnimations;for(let s=0;s<q.length;s++)if(q[s].animation.targetProperty===O)return q[s].animation;return null}getRuntimeAnimationByTargetProperty(O){const q=this._runtimeAnimations;for(let s=0;s<q.length;s++)if(q[s].animation.targetProperty===O)return q[s];return null}reset(){const O=this._runtimeAnimations;for(let q=0;q<O.length;q++)O[q].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(O){const q=this._runtimeAnimations;for(let s=0;s<q.length;s++)q[s].animation.enableBlending=!0,q[s].animation.blendingSpeed=O}disableBlending(){const O=this._runtimeAnimations;for(let q=0;q<O.length;q++)O[q].animation.enableBlending=!1}goToFrame(O){const q=this._runtimeAnimations;if(q[0]){const s=q[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??q[0].currentFrame;const Z=0===this.speedRatio?0:(O-this._frameToSyncFromJump)/s*1e3/this.speedRatio;this._manualJumpDelay=-Z}for(let s=0;s<q.length;s++)q[s].goToFrame(O,this._weight);this._goToFrame=O}get paused(){return this.if}pause(){this.if||(this.if=!0)}restart(){this.if=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(O,q){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(O||q){const D=this._scene._activeAnimatables.indexOf(this);if(D>-1){const B=this._runtimeAnimations;for(let s=B.length-1;s>=0;s--){const Z=B[s];O&&Z.animation.name!=O||(q&&!q(Z.target)||(Z.dispose(),B.splice(s,1)))}0==B.length&&(s||this._scene._activeAnimatables.splice(D,1),Z||this._raiseOnAnimationEnd())}}else{const O=this._scene._activeAnimatables.indexOf(this);if(O>-1){s||this._scene._activeAnimatables.splice(O,1);const q=this._runtimeAnimations;for(let O=0;O<q.length;O++)q[O].dispose();this._runtimeAnimations.length=0,Z||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((O=>{this.onAnimationEndObservable.add((()=>{O(this)}),void 0,void 0,this,!0)}))}_animate(O){if(this.if)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=O),!0;if(null===this._localDelayOffset?(this._localDelayOffset=O,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=O-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let q=!1;const s=this._runtimeAnimations;let Z;for(Z=0;Z<s.length;Z++){const D=s[Z].animate(O-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);q=q||D}if(this.animationStarted=q,!q){if(this.disposeOnEnd)for(Z=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(Z,1),Z=0;Z<s.length;Z++)s[Z].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return q}}function r(O){if(0===O.totalWeight&&0===O.totalAdditiveWeight)return O.originalValue;let q=1;const s=o.i.td[0],Z=o.i.td[1],D=o.i.Quaternion[0];let B=0;const P=O.animations[0],y=O.originalValue;let w=1,h=!1;if(O.totalWeight<1)w=1-O.totalWeight,y.decompose(Z,D,s);else{if(B=1,q=O.totalWeight,w=P.weight/q,1==w){if(!O.totalAdditiveWeight)return P.currentValue;h=!0}P.currentValue.decompose(Z,D,s)}if(!h){Z.scaleInPlace(w),s.scaleInPlace(w),D.scaleInPlace(w);for(let P=B;P<O.animations.length;P++){const B=O.animations[P];if(0===B.weight)continue;w=B.weight/q;const y=o.i.td[2],h=o.i.td[3],n=o.i.Quaternion[1];B.currentValue.decompose(h,n,y),h.scaleAndAddToRef(w,Z),n.scaleAndAddToRef(o.f.Dot(D,n)>0?w:-w,D),y.scaleAndAddToRef(w,s)}D.normalize()}for(let r=0;r<O.additiveAnimations.length;r++){const q=O.additiveAnimations[r];if(0===q.weight)continue;const B=o.i.td[2],P=o.i.td[3],y=o.i.Quaternion[1];q.currentValue.decompose(P,y,B),P.multiplyToRef(Z,P),o.n.LerpToRef(Z,P,q.weight,Z),D.multiplyToRef(y,y),o.f.SlerpToRef(D,y,q.weight,D),B.scaleAndAddToRef(q.weight,s)}const n=P?P._animationState.workValue:o.i.Matrix[0].clone();return o.e.ComposeToRef(Z,D,s,n),n}function j(O,q){if(0===O.totalWeight&&0===O.totalAdditiveWeight)return q;const s=O.animations[0],Z=O.originalValue;let D=q;if(0===O.totalWeight&&O.totalAdditiveWeight>0)D.p(Z);else if(1===O.animations.length){if(o.f.SlerpToRef(Z,s.currentValue,Math.min(1,O.totalWeight),D),0===O.totalAdditiveWeight)return D}else if(O.animations.length>1){let s,B,P=1;if(O.totalWeight<1){const q=1-O.totalWeight;s=[],B=[],s.push(Z),B.push(q)}else{if(2===O.animations.length&&(o.f.SlerpToRef(O.animations[0].currentValue,O.animations[1].currentValue,O.animations[1].weight/O.totalWeight,q),0===O.totalAdditiveWeight))return q;s=[],B=[],P=O.totalWeight}for(let q=0;q<O.animations.length;q++){const Z=O.animations[q];s.push(Z.currentValue),B.push(Z.weight/P)}let y=0;for(let O=0;O<s.length;)O?(y+=B[O],o.f.SlerpToRef(D,s[O],B[O]/y,D),O++):(o.f.SlerpToRef(s[O],s[O+1],B[O+1]/(B[O]+B[O+1]),q),D=q,y=B[O]+B[O+1],O+=2)}for(let B=0;B<O.additiveAnimations.length;B++){const q=O.additiveAnimations[B];0!==q.weight&&(D.multiplyToRef(q.currentValue,o.i.Quaternion[0]),o.f.SlerpToRef(D,o.i.Quaternion[0],q.weight,D))}return D}var f,u,c=s(1178);f=c.e,(u=y.c)&&(u.prototype.copyAnimationRange=function(O,q,s){let D=arguments.length>3&&void 0!==arguments[3]&&arguments[3],B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new Z.c(this.name,"_matrix",O.animations[0].framePerSecond,Z.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const P=O.animations[0].getRange(q);if(!P)return!1;const y=P.from,o=P.to,w=O.animations[0].getKeys(),h=O.length,n=O.getParent(),r=this.getParent(),j=D&&n&&h&&this.length&&h!==this.length,f=j&&r&&n?r.length/n.length:1,u=D&&!r&&B&&(1!==B.x||1!==B.y||1!==B.z),c=this.animations[0].getKeys();let W,m,g;for(let Z=0,R=w.length;Z<R;Z++)W=w[Z],W.frame>=y&&W.frame<=o&&(D?(g=W.value.clone(),j?(m=g.getTranslation(),g.setTranslation(m.scaleInPlace(f))):u&&B?(m=g.getTranslation(),g.setTranslation(m.multiplyInPlace(B))):g=W.value):g=W.value,c.push({frame:W.frame+s,value:g}));return this.animations[0].createRange(q,y+s,o+s),!0}),f&&(f.prototype._animate=function(O){if(!this.animationsEnabled)return;const q=h.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=q}this.deltaTime=void 0!==O?O:this.useConstantAnimationDeltaTime?16:(q-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=q;const s=this._activeAnimatables;if(0===s.length)return;this._animationTime+=this.deltaTime;const D=this._animationTime;for(let Z=0;Z<s.length;Z++){const O=s[Z];!O._animate(D)&&O.disposeOnEnd&&Z--}!function(O){if(O._registeredForLateAnimationBindings.length){for(let q=0;q<O._registeredForLateAnimationBindings.length;q++){const s=O._registeredForLateAnimationBindings.data[q];for(const O in s._lateAnimationHolders){const q=s._lateAnimationHolders[O],D=q.animations[0],B=q.originalValue;if(void 0===B||null===B)continue;const P=Z.c.AllowMatrixDecomposeForInterpolation&&B.m;let y=s[O];if(P)y=r(q);else if(void 0!==B.w)y=j(q,y||o.f.Identity());else{let O=0,s=1;const P=D&&D._animationState.loopMode===Z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(q.totalWeight<1)y=P?B.clone?B.clone():B:D&&B.scale?B.scale(1-q.totalWeight):D?B*(1-q.totalWeight):B.clone?B.clone():B;else if(D){s=q.totalWeight;const Z=D.weight/s;y=1!==Z?D.currentValue.scale?D.currentValue.scale(Z):D.currentValue*Z:D.currentValue,P&&(y.addToRef?y.addToRef(B,y):y+=B),O=1}for(let Z=O;Z<q.animations.length;Z++){const O=q.animations[Z],D=O.weight/s;D&&(O.currentValue.scaleAndAddToRef?O.currentValue.scaleAndAddToRef(D,y):y+=O.currentValue*D)}for(let Z=0;Z<q.additiveAnimations.length;Z++){const O=q.additiveAnimations[Z],s=O.weight;s&&(O.currentValue.scaleAndAddToRef?O.currentValue.scaleAndAddToRef(s,y):y+=O.currentValue*s)}}s[O]=y}s._lateAnimationHolders={}}O._registeredForLateAnimationBindings.reset()}}(this)},f.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((O,q)=>O.playOrder-q.playOrder))},f.prototype.beginWeightedAnimation=function(O,q,s){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,D=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,P=arguments.length>6?arguments[6]:void 0,y=arguments.length>7?arguments[7]:void 0,o=arguments.length>8?arguments[8]:void 0,w=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const n=this.beginAnimation(O,q,s,D,B,P,y,!1,o,w,h);return n.weight=Z,n},f.prototype.beginAnimation=function(O,q,s,Z){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,B=arguments.length>5?arguments[5]:void 0,P=arguments.length>6?arguments[6]:void 0,y=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=arguments.length>8?arguments[8]:void 0,w=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(D<0){const O=q;q=s,s=O,D=-D}q>s&&(D=-D),y&&this.stopAnimation(O,void 0,o),P||(P=new n(this,O,q,s,Z,D,B,void 0,w,h));const r=!o||o(O);if(O.animations&&r&&P.appendAnimations(O,O.animations),O.getAnimatables){const h=O.getAnimatables();for(let O=0;O<h.length;O++)this.beginAnimation(h[O],q,s,Z,D,B,P,y,o,w)}return P.reset(),P},f.prototype.beginHierarchyAnimation=function(O,q,s,Z,D){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,P=arguments.length>6?arguments[6]:void 0,y=arguments.length>7?arguments[7]:void 0,o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],w=arguments.length>9?arguments[9]:void 0,h=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const n=O.getDescendants(q),r=[];r.push(this.beginAnimation(O,s,Z,D,B,P,y,o,w,void 0,h));for(const j of n)r.push(this.beginAnimation(j,s,Z,D,B,P,y,o,w,void 0,h));return r},f.prototype.beginDirectAnimation=function(O,q,s,Z,D){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(B<0){const O=s;s=Z,Z=O,B=-B}return s>Z&&(B=-B),new n(this,O,s,Z,D,B,arguments.length>6?arguments[6]:void 0,q,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},f.prototype.beginDirectHierarchyAnimation=function(O,q,s,Z,D,B,P,y,o){let w=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const h=O.getDescendants(q),n=[];n.push(this.beginDirectAnimation(O,s,Z,D,B,P,y,o,w));for(const r of h)n.push(this.beginDirectAnimation(r,s,Z,D,B,P,y,o,w));return n},f.prototype.getAnimatableByTarget=function(O){for(let q=0;q<this._activeAnimatables.length;q++)if(this._activeAnimatables[q].target===O)return this._activeAnimatables[q];return null},f.prototype.getAllAnimatablesByTarget=function(O){const q=[];for(let s=0;s<this._activeAnimatables.length;s++)this._activeAnimatables[s].target===O&&q.push(this._activeAnimatables[s]);return q},f.prototype.stopAnimation=function(O,q,s){const Z=this.getAllAnimatablesByTarget(O);for(const D of Z)D.stop(q,s)},f.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let O=0;O<this._activeAnimatables.length;O++)this._activeAnimatables[O].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const O of this.animationGroups)O.stop()});class W{getClassName(){return"TargetedAnimation"}serialize(){const O={};return O.animation=this.animation.serialize(),O.targetId=this.target.id,O}}class m{get mask(){return this._mask}set mask(O){this._mask!==O&&(this._mask=O,this.syncWithMask(!0))}syncWithMask(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||O){this._numActiveAnimatables=0;for(let O=0;O<this._animatables.length;++O){const q=this._animatables[O];!this.mask||this.mask.disabled||this.mask.retainsTarget(q.target.name)?(this._numActiveAnimatables++,q.paused&&q.restart()):q.paused||q.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let O=0;O<this._animatables.length;++O){const q=this._animatables[O];this.mask.retainsTarget(q.target.name)||(q.stop(),this._animatables.splice(O,1),--O)}for(let O=0;O<this._targetedAnimations.length;O++){const q=this._targetedAnimations[O];this.mask.retainsTarget(q.target.name)||(this._targetedAnimations.splice(O,1),--O)}}}get from(){return this._from}set from(O){if(this._from!==O){this._from=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].fromFrame=this._from}}}get to(){return this._to}set to(O){if(this._to!==O){this._to=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(O){if(this._speedRatio!==O){this._speedRatio=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(O){if(this._loopAnimation!==O){this._loopAnimation=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(O){if(this._isAdditive!==O){this._isAdditive=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(O){this._weight!==O&&(this._weight=O,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(O){if(this._playOrder!==O&&(this._playOrder=O,this._animatables.length>0)){for(let O=0;O<this._animatables.length;O++)this._animatables[O].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(O){if(this._enableBlending!==O&&(this._enableBlending=O,null!==O))for(let q=0;q<this._targetedAnimations.length;++q)this._targetedAnimations[q].animation.enableBlending=O}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(O){if(this._blendingSpeed!==O&&(this._blendingSpeed=O,null!==O))for(let q=0;q<this._targetedAnimations.length;++q)this._targetedAnimations[q].animation.blendingSpeed=O}getLength(O,q){O=O??this._from;return((q=q??this._to)-O)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(O){let q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3?arguments[3]:void 0;if(0===O.length)return null;Z=Z??O[0].weight;let D=Number.MAX_VALUE,B=-Number.MAX_VALUE;if(s)for(const y of O)y.from<D&&(D=y.from),y.to>B&&(B=y.to);const P=new m(O[0].name+"_merged",O[0]._scene,Z);for(const y of O){s&&y.normalize(D,B);for(const O of y.targetedAnimations)P.addTargetedAnimation(O.animation,O.target);q&&y.dispose()}return P}constructor(O){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=O,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new D.b,this.onAnimationLoopObservable=new D.b,this.onAnimationGroupLoopObservable=new D.b,this.onAnimationGroupEndObservable=new D.b,this.onAnimationGroupPauseObservable=new D.b,this.onAnimationGroupPlayObservable=new D.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=q||B.c.LastCreatedScene,this._weight=s,this._playOrder=Z,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(O,q){const s=new W;s.animation=O,s.target=q;const Z=O.getKeys();return this._from>Z[0].frame&&(this._from=Z[0].frame),this._to<Z[Z.length-1].frame&&(this._to=Z[Z.length-1].frame),null!==this._enableBlending&&(O.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(O.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(s),this._shouldStart=!0,s}removeTargetedAnimation(O){for(let q=this._targetedAnimations.length-1;q>-1;q--){this._targetedAnimations[q].animation===O&&this._targetedAnimations.splice(q,1)}}normalize(){let O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==O&&(O=this._from),null==q&&(q=this._to);for(let s=0;s<this._targetedAnimations.length;s++){const Z=this._targetedAnimations[s].animation.getKeys(),D=Z[0],B=Z[Z.length-1];if(D.frame>O){const q={frame:O,value:D.value,inTangent:D.inTangent,outTangent:D.outTangent,interpolation:D.interpolation};Z.splice(0,0,q)}if(B.frame<q){const O={frame:q,value:B.value,inTangent:B.inTangent,outTangent:B.outTangent,interpolation:B.interpolation};Z.push(O)}}return this._from=O,this._to=q,this}_processLoop(O,q,s){O.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(q),this._animationLoopFlags[s]||(this._animationLoopFlags[s]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0],q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,s=arguments.length>2?arguments[2]:void 0,Z=arguments.length>3?arguments[3]:void 0,D=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=O,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let B=0;B<this._targetedAnimations.length;B++){const P=this._targetedAnimations[B],y=this._scene.beginDirectAnimation(P.target,[P.animation],void 0!==s?s:this._from,void 0!==Z?Z:this._to,O,q,void 0,void 0,void 0!==D?D:this._isAdditive);y.weight=this._weight,y.playOrder=this._playOrder,y.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(P),this._checkAnimationGroupEnded(y)},this._processLoop(y,P,B),this._animatables.push(y)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=q,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let O=0;O<this._animatables.length;O++){this._animatables[O].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(O){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==O&&(this.loopAnimation=O),this.restart()):(this.stop(),this.start(O,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let O=0;O<this._animatables.length;O++){this._animatables[O].reset()}return this}restart(){if(!this._isStarted)return this;for(let O=0;O<this._animatables.length;O++){this._animatables[O].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const q=this._animatables.slice();for(let Z=0;Z<q.length;Z++)q[Z].stop(void 0,void 0,!0,O);let s=0;for(let Z=0;Z<this._scene._activeAnimatables.length;Z++){const q=this._scene._activeAnimatables[Z];q._runtimeAnimations.length>0?this._scene._activeAnimatables[s++]=q:O&&this._checkAnimationGroupEnded(q,O)}return this._scene._activeAnimatables.length=s,this._isStarted=!1,this}setWeightForAllAnimatables(O){for(let q=0;q<this._animatables.length;q++){this._animatables[q].weight=O}return this}syncAllAnimationsWith(O){for(let q=0;q<this._animatables.length;q++){this._animatables[q].syncWith(O)}return this}goToFrame(O){if(!this._isStarted)return this;for(let q=0;q<this._animatables.length;q++){this._animatables[q].goToFrame(O)}return this}getCurrentFrame(){var O;return(null===(O=this.animatables[0])||void 0===O?void 0:O.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const O=this._scene.animationGroups.indexOf(this);if(O>-1&&this._scene.animationGroups.splice(O,1),this._parentContainer){const O=this._parentContainer.animationGroups.indexOf(this);O>-1&&this._parentContainer.animationGroups.splice(O,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(O){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const s=this._animatables.indexOf(O);s>-1&&this._animatables.splice(s,1),0===this._animatables.length&&(this._isStarted=!1,q||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(O,q){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const Z=new m(O||this.name,this._scene,this._weight,this._playOrder);Z._from=this.from,Z._to=this.to,Z._speedRatio=this.speedRatio,Z._loopAnimation=this.loopAnimation,Z._isAdditive=this.isAdditive,Z._enableBlending=this.enableBlending,Z._blendingSpeed=this.blendingSpeed,Z.metadata=this.metadata,Z.mask=this.mask;for(const D of this._targetedAnimations)Z.addTargetedAnimation(s?D.animation.clone():D.animation,q?q(D.target):D.target);return Z}serialize(){const O={};O.name=this.name,O.from=this.from,O.to=this.to,O.speedRatio=this.speedRatio,O.loopAnimation=this.loopAnimation,O.isAdditive=this.isAdditive,O.weight=this.weight,O.playOrder=this.playOrder,O.enableBlending=this.enableBlending,O.blendingSpeed=this.blendingSpeed,O.targetedAnimations=[];for(let q=0;q<this.targetedAnimations.length;q++){const s=this.targetedAnimations[q];O.targetedAnimations[q]=s.serialize()}return P.c&&P.c.HasTags(this)&&(O.tags=P.c.GetTags(this)),this.metadata&&(O.metadata=this.metadata),O}static Parse(O,q){const s=new m(O.name,q,O.weight,O.playOrder);for(let D=0;D<O.targetedAnimations.length;D++){const B=O.targetedAnimations[D],P=Z.c.Parse(B.animation),y=B.targetId;if("influence"===B.animation.property){const O=q.getMorphTargetById(y);O&&s.addTargetedAnimation(P,O)}else{const O=q.getNodeById(y);null!=O&&s.addTargetedAnimation(P,O)}}return P.c&&P.c.AddTagsTo(s,O.tags),null!==O.from&&null!==O.to&&s.normalize(O.from,O.to),void 0!==O.speedRatio&&(s._speedRatio=O.speedRatio),void 0!==O.loopAnimation&&(s._loopAnimation=O.loopAnimation),void 0!==O.isAdditive&&(s._isAdditive=O.isAdditive),void 0!==O.weight&&(s._weight=O.weight),void 0!==O.playOrder&&(s._playOrder=O.playOrder),void 0!==O.enableBlending&&(s._enableBlending=O.enableBlending),void 0!==O.blendingSpeed&&(s._blendingSpeed=O.blendingSpeed),void 0!==O.metadata&&(s.metadata=O.metadata),s}static MakeAnimationAdditive(O,q,s){let D;D="object"===typeof q?q:{referenceFrame:q,range:s,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let B=O;D.cloneOriginalAnimationGroup&&(B=O.clone(D.clonedAnimationGroupName||B.name));const P=B.targetedAnimations;for(let y=0;y<P.length;y++){const O=P[y];O.animation=Z.c.MakeAnimationAdditive(O.animation,D)}if(B.isAdditive=!0,D.clipKeys){let O=Number.MAX_VALUE,q=-Number.MAX_VALUE;const s=B.targetedAnimations;for(let Z=0;Z<s.length;Z++){const D=s[Z].animation.getKeys();O>D[0].frame&&(O=D[0].frame),q<D[D.length-1].frame&&(q=D[D.length-1].frame)}B._from=O,B._to=q}return B}static ClipKeys(O,q,s,Z,D){const B=O.clone(Z||O.name);return m.ClipKeysInPlace(B,q,s,D)}static ClipKeysInPlace(O,q,s,Z){return m.ClipInPlace(O,q,s,Z,!1)}static ClipFrames(O,q,s,Z,D){const B=O.clone(Z||O.name);return m.ClipFramesInPlace(B,q,s,D)}static ClipFramesInPlace(O,q,s,Z){return m.ClipInPlace(O,q,s,Z,!0)}static ClipInPlace(O,q,s,Z){let D=arguments.length>4&&void 0!==arguments[4]&&arguments[4],B=Number.MAX_VALUE,P=-Number.MAX_VALUE;const y=O.targetedAnimations;for(let o=0;o<y.length;o++){const O=y[o],w=Z?O.animation:O.animation.clone();D&&(w.createKeyForFrame(q),w.createKeyForFrame(s));const h=w.getKeys(),n=[];let r=Number.MAX_VALUE;for(let Z=0;Z<h.length;Z++){const O=h[Z];if(!D&&Z>=q&&Z<=s||D&&O.frame>=q&&O.frame<=s){const q={frame:O.frame,value:O.value.clone?O.value.clone():O.value,inTangent:O.inTangent,outTangent:O.outTangent,interpolation:O.interpolation,lockedTangent:O.lockedTangent};r===Number.MAX_VALUE&&(r=q.frame),q.frame-=r,n.push(q)}}0!==n.length?(B>n[0].frame&&(B=n[0].frame),P<n[n.length-1].frame&&(P=n[n.length-1].frame),w.setKeys(n,!0),O.animation=w):(y.splice(o,1),o--)}return O._from=B,O._to=P,O}getClassName(){return"AnimationGroup"}toString(O){let q="Name: "+this.name;return q+=", type: "+this.getClassName(),O&&(q+=", from: "+this._from,q+=", to: "+this._to,q+=", isStarted: "+this._isStarted,q+=", speedRatio: "+this._speedRatio,q+=", targetedAnimations length: "+this._targetedAnimations.length,q+=", animatables length: "+this._animatables),q}}}}]);