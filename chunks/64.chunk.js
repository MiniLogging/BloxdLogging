"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[64],{14110:(t,q,S)=>{S.r(q),S.d(q,{FlowGraphStopAnimationBlock:()=>r});var o=S(12927),B=S(622),z=S(496),L=S(12974);class r extends L.b{constructor(t){super(t),this.animationGroup=this.registerDataInput("animationGroup",o.b),this.stopAtFrame=this.registerDataInput("stopAtFrame",o.v,-1)}_preparePendingTasks(t){const q=this.animationGroup.getValue(t),S=this.stopAtFrame.getValue(t)??-1,o=t._getGlobalContextVariable("pendingStopAnimations",[]);o.push({uniqueId:q.uniqueId,stopAtFrame:S}),t._setGlobalContextVariable("pendingStopAnimations",o)}_cancelPendingTasks(t){const q=this.animationGroup.getValue(t),S=t._getGlobalContextVariable("pendingStopAnimations",[]);for(let o=0;o<S.length;o++)if(S[o].uniqueId===q.uniqueId){S.splice(o,1),t._setGlobalContextVariable("pendingStopAnimations",S);break}}_execute(t){const q=this.animationGroup.getValue(t),S=this.stopAtFrame.getValue(t)??-1;return q?isNaN(S)?this._reportError(t,"Invalid stop time."):(S>0?this._startPendingTasks(t):this._stopAnimation(q,t),void this.out._activateSignal(t)):(z.c.Warn("No animation group provided to stop."),this._reportError(t,"No animation group provided to stop."))}_executeOnTick(t){const q=this.animationGroup.getValue(t),S=t._getGlobalContextVariable("pendingStopAnimations",[]);for(let o=0;o<S.length;o++)if(S[o].uniqueId===q.uniqueId&&q.getCurrentFrame()>=S[o].stopAtFrame){this._stopAnimation(q,t),S.splice(o,1),t._setGlobalContextVariable("pendingStopAnimations",S),this.done._activateSignal(t),t._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(t,q){const S=q._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),o=S.indexOf(t.uniqueId);-1!==o&&(t.stop(),S.splice(o,1),q._setGlobalContextVariable("currentlyRunningAnimationGroups",S))}}(0,B.c)("FlowGraphStopAnimationBlock",r)}}]);