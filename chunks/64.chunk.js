"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[64],{14153:(v,d,Q)=>{Q.r(d),Q.d(d,{FlowGraphStopAnimationBlock:()=>F});var n=Q(12908),T=Q(591),L=Q(482),e=Q(12962);class F extends e.b{constructor(v){super(v),this.animationGroup=this.registerDataInput("animationGroup",n.c),this.stopAtFrame=this.registerDataInput("stopAtFrame",n.u,-1)}_preparePendingTasks(v){const d=this.animationGroup.getValue(v),Q=this.stopAtFrame.getValue(v)??-1,n=v._getGlobalContextVariable("pendingStopAnimations",[]);n.push({uniqueId:d.uniqueId,stopAtFrame:Q}),v._setGlobalContextVariable("pendingStopAnimations",n)}_cancelPendingTasks(v){const d=this.animationGroup.getValue(v),Q=v._getGlobalContextVariable("pendingStopAnimations",[]);for(let n=0;n<Q.length;n++)if(Q[n].uniqueId===d.uniqueId){Q.splice(n,1),v._setGlobalContextVariable("pendingStopAnimations",Q);break}}_execute(v){const d=this.animationGroup.getValue(v),Q=this.stopAtFrame.getValue(v)??-1;return d?isNaN(Q)?this._reportError(v,"Invalid stop time."):(Q>0?this._startPendingTasks(v):this._stopAnimation(d,v),void this.out._activateSignal(v)):(L.d.Warn("No animation group provided to stop."),this._reportError(v,"No animation group provided to stop."))}_executeOnTick(v){const d=this.animationGroup.getValue(v),Q=v._getGlobalContextVariable("pendingStopAnimations",[]);for(let n=0;n<Q.length;n++)if(Q[n].uniqueId===d.uniqueId&&d.getCurrentFrame()>=Q[n].stopAtFrame){this._stopAnimation(d,v),Q.splice(n,1),v._setGlobalContextVariable("pendingStopAnimations",Q),this.done._activateSignal(v),v._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(v,d){const Q=d._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),n=Q.indexOf(v.uniqueId);-1!==n&&(v.stop(),Q.splice(n,1),d._setGlobalContextVariable("currentlyRunningAnimationGroups",Q))}}(0,T.f)("FlowGraphStopAnimationBlock",F)}}]);