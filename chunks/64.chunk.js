"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[64],{14258:(Q,X,C)=>{C.r(X),C.d(X,{FlowGraphStopAnimationBlock:()=>O});var l=C(13063),h=C(620),M=C(501),f=C(13111);class O extends f.c{constructor(Q){super(Q),this.animationGroup=this.registerDataInput("animationGroup",l.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",l.p,-1)}_preparePendingTasks(Q){const X=this.animationGroup.getValue(Q),C=this.stopAtFrame.getValue(Q)??-1,l=Q._getGlobalContextVariable("pendingStopAnimations",[]);l.push({uniqueId:X.uniqueId,stopAtFrame:C}),Q._setGlobalContextVariable("pendingStopAnimations",l)}_cancelPendingTasks(Q){const X=this.animationGroup.getValue(Q),C=Q._getGlobalContextVariable("pendingStopAnimations",[]);for(let l=0;l<C.length;l++)if(C[l].uniqueId===X.uniqueId){C.splice(l,1),Q._setGlobalContextVariable("pendingStopAnimations",C);break}}_execute(Q){const X=this.animationGroup.getValue(Q),C=this.stopAtFrame.getValue(Q)??-1;return X?isNaN(C)?this._reportError(Q,"Invalid stop time."):(C>0?this._startPendingTasks(Q):this._stopAnimation(X,Q),void this.out._activateSignal(Q)):(M.c.Warn("No animation group provided to stop."),this._reportError(Q,"No animation group provided to stop."))}_executeOnTick(Q){const X=this.animationGroup.getValue(Q),C=Q._getGlobalContextVariable("pendingStopAnimations",[]);for(let l=0;l<C.length;l++)if(C[l].uniqueId===X.uniqueId&&X.getCurrentFrame()>=C[l].stopAtFrame){this._stopAnimation(X,Q),C.splice(l,1),Q._setGlobalContextVariable("pendingStopAnimations",C),this.done._activateSignal(Q),Q._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(Q,X){const C=X._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),l=C.indexOf(Q.uniqueId);-1!==l&&(Q.stop(),C.splice(l,1),X._setGlobalContextVariable("currentlyRunningAnimationGroups",C))}}(0,h.g)("FlowGraphStopAnimationBlock",O)}}]);