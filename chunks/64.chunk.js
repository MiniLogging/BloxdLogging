"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[64],{13962:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphStopAnimationBlock:()=>s});var o=A(12763),t=A(633),n=A(531),h=A(12807);class s extends h.d{constructor(c){super(c),this.animationGroup=this.registerDataInput("animationGroup",o.e),this.stopAtFrame=this.registerDataInput("stopAtFrame",o.t,-1)}_preparePendingTasks(c){const b=this.animationGroup.getValue(c),A=this.stopAtFrame.getValue(c)??-1,o=c._getGlobalContextVariable("pendingStopAnimations",[]);o.push({uniqueId:b.uniqueId,stopAtFrame:A}),c._setGlobalContextVariable("pendingStopAnimations",o)}_cancelPendingTasks(c){const b=this.animationGroup.getValue(c),A=c._getGlobalContextVariable("pendingStopAnimations",[]);for(let o=0;o<A.length;o++)if(A[o].uniqueId===b.uniqueId){A.splice(o,1),c._setGlobalContextVariable("pendingStopAnimations",A);break}}_execute(c){const b=this.animationGroup.getValue(c),A=this.stopAtFrame.getValue(c)??-1;return b?isNaN(A)?this._reportError(c,"Invalid stop time."):(A>0?this._startPendingTasks(c):this._stopAnimation(b,c),void this.out._activateSignal(c)):(n.c.Warn("No animation group provided to stop."),this._reportError(c,"No animation group provided to stop."))}_executeOnTick(c){const b=this.animationGroup.getValue(c),A=c._getGlobalContextVariable("pendingStopAnimations",[]);for(let o=0;o<A.length;o++)if(A[o].uniqueId===b.uniqueId&&b.getCurrentFrame()>=A[o].stopAtFrame){this._stopAnimation(b,c),A.splice(o,1),c._setGlobalContextVariable("pendingStopAnimations",A),this.done._activateSignal(c),c._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(c,b){const A=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),o=A.indexOf(c.uniqueId);-1!==o&&(c.stop(),A.splice(o,1),b._setGlobalContextVariable("currentlyRunningAnimationGroups",A))}}(0,t.d)("FlowGraphStopAnimationBlock",s)}}]);