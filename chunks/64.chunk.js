"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[64],{13719:(L,j,P)=>{P.r(j),P.d(j,{FlowGraphStopAnimationBlock:()=>u});var A=P(12510),R=P(606),o=P(490),Y=P(12546);class u extends Y.b{constructor(L){super(L),this.animationGroup=this.registerDataInput("animationGroup",A.d),this.stopAtFrame=this.registerDataInput("stopAtFrame",A.p,-1)}_preparePendingTasks(L){const j=this.animationGroup.getValue(L),P=this.stopAtFrame.getValue(L)??-1,A=L._getGlobalContextVariable("pendingStopAnimations",[]);A.push({uniqueId:j.uniqueId,stopAtFrame:P}),L._setGlobalContextVariable("pendingStopAnimations",A)}_cancelPendingTasks(L){const j=this.animationGroup.getValue(L),P=L._getGlobalContextVariable("pendingStopAnimations",[]);for(let A=0;A<P.length;A++)if(P[A].uniqueId===j.uniqueId){P.splice(A,1),L._setGlobalContextVariable("pendingStopAnimations",P);break}}_execute(L){const j=this.animationGroup.getValue(L),P=this.stopAtFrame.getValue(L)??-1;return j?isNaN(P)?this._reportError(L,"Invalid stop time."):(P>0?this._startPendingTasks(L):this._stopAnimation(j,L),void this.out._activateSignal(L)):(o.e.Warn("No animation group provided to stop."),this._reportError(L,"No animation group provided to stop."))}_executeOnTick(L){const j=this.animationGroup.getValue(L),P=L._getGlobalContextVariable("pendingStopAnimations",[]);for(let A=0;A<P.length;A++)if(P[A].uniqueId===j.uniqueId&&j.getCurrentFrame()>=P[A].stopAtFrame){this._stopAnimation(j,L),P.splice(A,1),L._setGlobalContextVariable("pendingStopAnimations",P),this.done._activateSignal(L),L._removePendingBlock(this);break}}getClassName(){return"FlowGraphStopAnimationBlock"}_stopAnimation(L,j){const P=j._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),A=P.indexOf(L.uniqueId);-1!==A&&(L.stop(),P.splice(A,1),j._setGlobalContextVariable("currentlyRunningAnimationGroups",P))}}(0,R.h)("FlowGraphStopAnimationBlock",u)}}]);