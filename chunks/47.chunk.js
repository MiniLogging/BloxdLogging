"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[47],{13311:(Y,j,X)=>{X.r(j),X.d(j,{colorPixelShaderWGSL:()=>I});var u=X(10835);X(11751),X(11779),X(11785),X(11795);const K="colorPixelShader",U="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";u.d.ShadersStoreWGSL[K]=U;const I={name:K,shader:U}}}]);