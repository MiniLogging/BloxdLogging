"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[47],{13352:(R,q,L)=>{L.r(q),L.d(q,{colorPixelShaderWGSL:()=>Z});var B=L(10841);L(11775),L(11799),L(11804),L(11822);const N="colorPixelShader",h="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";B.b.ShadersStoreWGSL[N]=h;const Z={name:N,shader:h}}}]);