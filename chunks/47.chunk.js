"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[47],{15067:(L,U,x)=>{x.r(U),x.d(U,{_BasisTextureLoader:()=>H});var mL,p=x(12382),G=x(12565),F=x(12521);function a(){const L=0,U=1,x=2,mL=3,p=6,G=8,F=9,a=10,o=14;let A=null;function r(L,U,x,mL,p){const G=L.getImageTranscodedSizeInBytes(U,x,mL);let F=new Uint8Array(G);if(!L.transcodeImage(F,U,x,mL,1,0))return null;if(p){F=function(L,U,x,mL){const p=new Uint16Array(4),G=new Uint16Array(x*mL),F=x/4,a=mL/4;for(let o=0;o<a;o++)for(let mL=0;mL<F;mL++){const a=U+8*(o*F+mL);p[0]=L[a]|L[a+1]<<8,p[1]=L[a+2]|L[a+3]<<8,p[2]=(2*(31&p[0])+1*(31&p[1]))/3|(2*(2016&p[0])+1*(2016&p[1]))/3&2016|(2*(63488&p[0])+1*(63488&p[1]))/3&63488,p[3]=(2*(31&p[1])+1*(31&p[0]))/3|(2*(2016&p[1])+1*(2016&p[0]))/3&2016|(2*(63488&p[1])+1*(63488&p[0]))/3&63488;for(let U=0;U<4;U++){const F=L[a+4+U];let A=(4*o+U)*x+4*mL;G[A++]=p[3&F],G[A++]=p[F>>2&3],G[A++]=p[F>>4&3],G[A++]=p[F>>6&3]}}return G}(F,0,L.getImageWidth(U,x)+3&-4,L.getImageHeight(U,x)+3&-4)}return F}onmessage=h=>{if("init"===h.data.action){if(h.data.url)try{importScripts(h.data.url)}catch(b){postMessage({action:"error",error:b})}A||(A=BASIS({wasmBinary:h.data.wasmBinary})),null!==A&&A.then((L=>{BASIS=L,L.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===h.data.action){const A=h.data.config,b=h.data.imageData,E=new BASIS.BasisFile(b),Y=function(L){const U=L.getHasAlpha(),x=L.getNumImages(),mL=[];for(let p=0;p<x;p++){const U={levels:[]},x=L.getNumLevels(p);for(let mL=0;mL<x;mL++){const x={width:L.getImageWidth(p,mL),height:L.getImageHeight(p,mL)};U.levels.push(x)}mL.push(U)}return{Ha:U,images:mL}}(E);let S=h.data.ignoreSupportedFormats?null:function(A,r){let h=null;A.supportedCompressionFormats&&(h=A.supportedCompressionFormats.astc?a:A.supportedCompressionFormats.bc7?p:A.supportedCompressionFormats.s3tc?r.Ha?mL:x:A.supportedCompressionFormats.pvrtc?r.Ha?F:G:A.supportedCompressionFormats.etc2?U:A.supportedCompressionFormats.etc1?L:o);return h}(h.data.config,Y),V=!1;null===S&&(V=!0,S=Y.Ha?mL:x);let H=!0;E.startTranscoding()||(H=!1);const Q=[];for(let L=0;L<Y.images.length&&H;L++){const U=Y.images[L];if(void 0===A.loadSingleImage||A.loadSingleImage===L){let x=U.levels.length;!1===A.loadMipmapLevels&&(x=1);for(let mL=0;mL<x;mL++){const x=U.levels[mL],p=r(E,L,mL,S,V);if(!p){H=!1;break}x.transcodedPixels=p,Q.push(x.transcodedPixels.buffer)}}}E.close(),E.delete(),V&&(S=-1),H?postMessage({action:"transcode",success:H,id:h.data.id,fileInfo:Y,format:S},Q):postMessage({action:"transcode",success:H,id:h.data.id})}}}!function(L){L[L.cTFETC1=0]="cTFETC1",L[L.cTFETC2=1]="cTFETC2",L[L.cTFBC1=2]="cTFBC1",L[L.cTFBC3=3]="cTFBC3",L[L.cTFBC4=4]="cTFBC4",L[L.cTFBC5=5]="cTFBC5",L[L.cTFBC7=6]="cTFBC7",L[L.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",L[L.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",L[L.cTFASTC_4x4=10]="cTFASTC_4x4",L[L.cTFATC_RGB=11]="cTFATC_RGB",L[L.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",L[L.cTFRGBA32=13]="cTFRGBA32",L[L.cTFRGB565=14]="cTFRGB565",L[L.cTFBGR565=15]="cTFBGR565",L[L.cTFRGBA4444=16]="cTFRGBA4444",L[L.cTFFXT1_RGB=17]="cTFFXT1_RGB",L[L.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",L[L.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",L[L.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",L[L.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(mL||(mL={}));const o={JSModuleURL:`${p.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${p.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let A=null,r=null,h=0;const b=async()=>(A||(A=new Promise(((L,U)=>{r?L(r):p.Tools.LoadFileAsync(p.Tools.GetBabylonScriptURL(o.WasmModuleURL)).then((x=>{if("function"!==typeof URL)return U("Basis transcoder requires an environment with a URL constructor");const mL=URL.createObjectURL(new Blob([`(${a})()`],{type:"application/javascript"}));r=new Worker(mL),async function(L,U,x){return await new Promise(((mL,G)=>{const F=U=>{"init"===U.data.action?(L.removeEventListener("message",F),mL(L)):"error"===U.data.action&&G(U.data.error||"error initializing worker")};L.addEventListener("message",F),L.postMessage({action:"init",url:x?p.Tools.GetBabylonScriptURL(x):void 0,wasmBinary:U},[U])}))}(r,x,o.JSModuleURL).then(L,U)})).catch(U)}))),await A),E=async(L,U)=>{const x=L instanceof ArrayBuffer?new Uint8Array(L):L;return await new Promise(((L,mL)=>{b().then((()=>{const p=h++,G=U=>{"transcode"===U.data.action&&U.data.id===p&&(r.removeEventListener("message",G),U.data.success?L(U.data):mL("Transcode is not supported on this device"))};r.addEventListener("message",G);const F=new Uint8Array(x.byteLength);F.set(new Uint8Array(x.buffer,x.byteOffset,x.byteLength)),r.postMessage({action:"transcode",id:p,imageData:F,config:U,ignoreSupportedFormats:false},[F.buffer])}),(L=>{mL(L)}))}))},Y=(L,U)=>{var x;let mL=null===(x=U._gl)||void 0===x?void 0:x.TEXTURE_2D;var p;L.isCube&&(mL=null===(p=U._gl)||void 0===p?void 0:p.TEXTURE_CUBE_MAP);U._bindTextureDirectly(mL,L,!0)},S=(L,U)=>{const x=L.getEngine();for(let a=0;a<U.fileInfo.images.length;a++){const o=U.fileInfo.images[a].levels[0];if(L._invertVScale=L.invertY,-1===U.format||U.format===mL.cTFRGB565)if(L.type=10,L.format=4,!x._features.basisNeedsPOT||Math.log2(o.width)%1===0&&Math.log2(o.height)%1===0)L._invertVScale=!L.invertY,L.width=o.width+3&-4,L.height=o.height+3&-4,L.samplingMode=2,Y(L,x),x._uploadDataToTextureDirectly(L,new Uint16Array(o.transcodedPixels.buffer),a,0,4,!0);else{const U=new F.d(x,2);L._invertVScale=L.invertY,U.type=10,U.format=4,U.width=o.width+3&-4,U.height=o.height+3&-4,Y(U,x),x._uploadDataToTextureDirectly(U,new Uint16Array(o.transcodedPixels.buffer),a,0,4,!0),x._rescaleTexture(U,L,x.scenes[0],x._getInternalFormat(4),(()=>{x._releaseTexture(U),Y(L,x)}))}else{L.width=o.width,L.height=o.height,L.generateMipMaps=U.fileInfo.images[a].levels.length>1;const mL=V.GetInternalFormatFromBasisFormat(U.format,x);L.format=mL,Y(L,x);const F=U.fileInfo.images[a].levels;for(let U=0;U<F.length;U++){const p=F[U];x._uploadCompressedDataToTextureDirectly(L,mL,p.width,p.height,p.transcodedPixels,a,U)}!x._features.basisNeedsPOT||Math.log2(L.width)%1===0&&Math.log2(L.height)%1===0||(p.Tools.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),L._cachedWrapU=G.e.CLAMP_ADDRESSMODE,L._cachedWrapV=G.e.CLAMP_ADDRESSMODE)}}},V={JSModuleURL:o.JSModuleURL,WasmModuleURL:o.WasmModuleURL,GetInternalFormatFromBasisFormat:(L,U)=>{let x;switch(L){case mL.cTFETC1:x=36196;break;case mL.cTFBC1:x=33776;break;case mL.cTFBC4:x=33779;break;case mL.cTFASTC_4x4:x=37808;break;case mL.cTFETC2:x=37496;break;case mL.cTFBC7:x=36492}if(void 0===x)throw"The chosen Basis transcoder format is not currently supported";return x},TranscodeAsync:E,LoadTextureFromTranscodeResult:S};Object.defineProperty(V,"JSModuleURL",{get:function(){return o.JSModuleURL},set:function(L){o.JSModuleURL=L}}),Object.defineProperty(V,"WasmModuleURL",{get:function(){return o.WasmModuleURL},set:function(L){o.WasmModuleURL=L}});class H{constructor(){this.supportCascades=!1}loadCubeData(L,U,x,mL,G){if(Array.isArray(L))return;const F=U.getEngine().getCaps(),a={supportedCompressionFormats:{etc1:!!F.etc1,s3tc:!!F.s3tc,pvrtc:!!F.pvrtc,etc2:!!F.etc2,astc:!!F.astc,bc7:!!F.bptc}};E(L,a).then((L=>{const x=L.fileInfo.images[0].levels.length>1&&U.generateMipMaps;S(U,L),U.getEngine()._setCubeMapTextureParams(U,x),U.isReady=!0,U.onLoadedObservable.notifyObservers(U),U.onLoadedObservable.clear(),mL&&mL()})).catch((L=>{p.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),U.isReady=!0,G&&G(L)}))}loadData(L,U,x){const mL=U.getEngine().getCaps(),G={supportedCompressionFormats:{etc1:!!mL.etc1,s3tc:!!mL.s3tc,pvrtc:!!mL.pvrtc,etc2:!!mL.etc2,astc:!!mL.astc,bc7:!!mL.bptc}};E(L,G).then((L=>{const mL=L.fileInfo.images[0].levels[0],p=L.fileInfo.images[0].levels.length>1&&U.generateMipMaps;x(mL.width,mL.height,p,-1!==L.format,(()=>{S(U,L)}))})).catch((L=>{p.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),p.Tools.Warn(`Failed to transcode Basis file: ${L}`),x(0,0,!1,!1,(()=>{}),!0)}))}}}}]);