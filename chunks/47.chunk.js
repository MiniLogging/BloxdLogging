"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[47],{14999:(z,u,U)=>{U.r(u),U.d(u,{_BasisTextureLoader:()=>r});var J,v=U(12748),f=U(12894),g=U(12853);function w(){const z=0,u=1,U=2,J=3,v=6,f=8,g=9,w=10,P=14;let R=null;function S(z,u,U,J,v){const f=z.getImageTranscodedSizeInBytes(u,U,J);let g=new Uint8Array(f);if(!z.transcodeImage(g,u,U,J,1,0))return null;if(v){g=function(z,u,U,J){const v=new Uint16Array(4),f=new Uint16Array(U*J),g=U/4,w=J/4;for(let P=0;P<w;P++)for(let J=0;J<g;J++){const w=u+8*(P*g+J);v[0]=z[w]|z[w+1]<<8,v[1]=z[w+2]|z[w+3]<<8,v[2]=(2*(31&v[0])+1*(31&v[1]))/3|(2*(2016&v[0])+1*(2016&v[1]))/3&2016|(2*(63488&v[0])+1*(63488&v[1]))/3&63488,v[3]=(2*(31&v[1])+1*(31&v[0]))/3|(2*(2016&v[1])+1*(2016&v[0]))/3&2016|(2*(63488&v[1])+1*(63488&v[0]))/3&63488;for(let u=0;u<4;u++){const g=z[w+4+u];let R=(4*P+u)*U+4*J;f[R++]=v[3&g],f[R++]=v[g>>2&3],f[R++]=v[g>>4&3],f[R++]=v[g>>6&3]}}return f}(g,0,z.getImageWidth(u,U)+3&-4,z.getImageHeight(u,U)+3&-4)}return g}onmessage=d=>{if("init"===d.data.action){if(d.data.url)try{importScripts(d.data.url)}catch(mz){postMessage({action:"error",error:mz})}R||(R=BASIS({wasmBinary:d.data.wasmBinary})),null!==R&&R.then((z=>{BASIS=z,z.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===d.data.action){const R=d.data.config,mz=d.data.imageData,Z=new BASIS.BasisFile(mz),A=function(z){const u=z.getHasAlpha(),U=z.getNumImages(),J=[];for(let v=0;v<U;v++){const u={levels:[]},U=z.getNumLevels(v);for(let J=0;J<U;J++){const U={width:z.getImageWidth(v,J),height:z.getImageHeight(v,J)};u.levels.push(U)}J.push(u)}return{kf:u,images:J}}(Z);let E=d.data.ignoreSupportedFormats?null:function(R,S){let d=null;R.supportedCompressionFormats&&(d=R.supportedCompressionFormats.astc?w:R.supportedCompressionFormats.bc7?v:R.supportedCompressionFormats.s3tc?S.kf?J:U:R.supportedCompressionFormats.pvrtc?S.kf?g:f:R.supportedCompressionFormats.etc2?u:R.supportedCompressionFormats.etc1?z:P);return d}(d.data.config,A),C=!1;null===E&&(C=!0,E=A.kf?J:U);let r=!0;Z.startTranscoding()||(r=!1);const M=[];for(let z=0;z<A.images.length&&r;z++){const u=A.images[z];if(void 0===R.loadSingleImage||R.loadSingleImage===z){let U=u.levels.length;!1===R.loadMipmapLevels&&(U=1);for(let J=0;J<U;J++){const U=u.levels[J],v=S(Z,z,J,E,C);if(!v){r=!1;break}U.transcodedPixels=v,M.push(U.transcodedPixels.buffer)}}}Z.close(),Z.delete(),C&&(E=-1),r?postMessage({action:"transcode",success:r,id:d.data.id,fileInfo:A,format:E},M):postMessage({action:"transcode",success:r,id:d.data.id})}}}!function(z){z[z.cTFETC1=0]="cTFETC1",z[z.cTFETC2=1]="cTFETC2",z[z.cTFBC1=2]="cTFBC1",z[z.cTFBC3=3]="cTFBC3",z[z.cTFBC4=4]="cTFBC4",z[z.cTFBC5=5]="cTFBC5",z[z.cTFBC7=6]="cTFBC7",z[z.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",z[z.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",z[z.cTFASTC_4x4=10]="cTFASTC_4x4",z[z.cTFATC_RGB=11]="cTFATC_RGB",z[z.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",z[z.cTFRGBA32=13]="cTFRGBA32",z[z.cTFRGB565=14]="cTFRGB565",z[z.cTFBGR565=15]="cTFBGR565",z[z.cTFRGBA4444=16]="cTFRGBA4444",z[z.cTFFXT1_RGB=17]="cTFFXT1_RGB",z[z.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",z[z.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",z[z.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",z[z.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(J||(J={}));const P={JSModuleURL:"".concat(v.Tools._DefaultCdnUrl,"/basisTranscoder/1/basis_transcoder.js"),WasmModuleURL:"".concat(v.Tools._DefaultCdnUrl,"/basisTranscoder/1/basis_transcoder.wasm")};let R=null,S=null,d=0;const mz=async()=>(R||(R=new Promise(((z,u)=>{S?z(S):v.Tools.LoadFileAsync(v.Tools.GetBabylonScriptURL(P.WasmModuleURL)).then((U=>{if("function"!==typeof URL)return u("Basis transcoder requires an environment with a URL constructor");const J=URL.createObjectURL(new Blob(["(".concat(w,")()")],{type:"application/javascript"}));S=new Worker(J),async function(z,u,U){return await new Promise(((J,f)=>{const g=u=>{"init"===u.data.action?(z.removeEventListener("message",g),J(z)):"error"===u.data.action&&f(u.data.error||"error initializing worker")};z.addEventListener("message",g),z.postMessage({action:"init",url:U?v.Tools.GetBabylonScriptURL(U):void 0,wasmBinary:u},[u])}))}(S,U,P.JSModuleURL).then(z,u)})).catch(u)}))),await R),Z=async(z,u)=>{const U=z instanceof ArrayBuffer?new Uint8Array(z):z;return await new Promise(((z,J)=>{mz().then((()=>{const v=d++,f=u=>{"transcode"===u.data.action&&u.data.id===v&&(S.removeEventListener("message",f),u.data.success?z(u.data):J("Transcode is not supported on this device"))};S.addEventListener("message",f);const g=new Uint8Array(U.byteLength);g.set(new Uint8Array(U.buffer,U.byteOffset,U.byteLength)),S.postMessage({action:"transcode",id:v,imageData:g,config:u,ignoreSupportedFormats:false},[g.buffer])}),(z=>{J(z)}))}))},A=(z,u)=>{var U;let J=null===(U=u._gl)||void 0===U?void 0:U.TEXTURE_2D;var v;z.isCube&&(J=null===(v=u._gl)||void 0===v?void 0:v.TEXTURE_CUBE_MAP);u._bindTextureDirectly(J,z,!0)},E=(z,u)=>{const U=z.getEngine();for(let w=0;w<u.fileInfo.images.length;w++){const P=u.fileInfo.images[w].levels[0];if(z._invertVScale=z.invertY,-1===u.format||u.format===J.cTFRGB565)if(z.type=10,z.format=4,!U._features.basisNeedsPOT||Math.log2(P.width)%1===0&&Math.log2(P.height)%1===0)z._invertVScale=!z.invertY,z.width=P.width+3&-4,z.height=P.height+3&-4,z.samplingMode=2,A(z,U),U._uploadDataToTextureDirectly(z,new Uint16Array(P.transcodedPixels.buffer),w,0,4,!0);else{const u=new g.c(U,2);z._invertVScale=z.invertY,u.type=10,u.format=4,u.width=P.width+3&-4,u.height=P.height+3&-4,A(u,U),U._uploadDataToTextureDirectly(u,new Uint16Array(P.transcodedPixels.buffer),w,0,4,!0),U._rescaleTexture(u,z,U.scenes[0],U._getInternalFormat(4),(()=>{U._releaseTexture(u),A(z,U)}))}else{z.width=P.width,z.height=P.height,z.generateMipMaps=u.fileInfo.images[w].levels.length>1;const J=C.GetInternalFormatFromBasisFormat(u.format,U);z.format=J,A(z,U);const g=u.fileInfo.images[w].levels;for(let u=0;u<g.length;u++){const v=g[u];U._uploadCompressedDataToTextureDirectly(z,J,v.width,v.height,v.transcodedPixels,w,u)}!U._features.basisNeedsPOT||Math.log2(z.width)%1===0&&Math.log2(z.height)%1===0||(v.Tools.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),z._cachedWrapU=f.e.CLAMP_ADDRESSMODE,z._cachedWrapV=f.e.CLAMP_ADDRESSMODE)}}},C={JSModuleURL:P.JSModuleURL,WasmModuleURL:P.WasmModuleURL,GetInternalFormatFromBasisFormat:(z,u)=>{let U;switch(z){case J.cTFETC1:U=36196;break;case J.cTFBC1:U=33776;break;case J.cTFBC4:U=33779;break;case J.cTFASTC_4x4:U=37808;break;case J.cTFETC2:U=37496;break;case J.cTFBC7:U=36492}if(void 0===U)throw"The chosen Basis transcoder format is not currently supported";return U},TranscodeAsync:Z,LoadTextureFromTranscodeResult:E};Object.defineProperty(C,"JSModuleURL",{get:function(){return P.JSModuleURL},set:function(z){P.JSModuleURL=z}}),Object.defineProperty(C,"WasmModuleURL",{get:function(){return P.WasmModuleURL},set:function(z){P.WasmModuleURL=z}});class r{constructor(){this.supportCascades=!1}loadCubeData(z,u,U,J,f){if(Array.isArray(z))return;const g=u.getEngine().getCaps(),w={supportedCompressionFormats:{etc1:!!g.etc1,s3tc:!!g.s3tc,pvrtc:!!g.pvrtc,etc2:!!g.etc2,astc:!!g.astc,bc7:!!g.bptc}};Z(z,w).then((z=>{const U=z.fileInfo.images[0].levels.length>1&&u.generateMipMaps;E(u,z),u.getEngine()._setCubeMapTextureParams(u,U),u.isReady=!0,u.onLoadedObservable.notifyObservers(u),u.onLoadedObservable.clear(),J&&J()})).catch((z=>{v.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),u.isReady=!0,f&&f(z)}))}loadData(z,u,U){const J=u.getEngine().getCaps(),f={supportedCompressionFormats:{etc1:!!J.etc1,s3tc:!!J.s3tc,pvrtc:!!J.pvrtc,etc2:!!J.etc2,astc:!!J.astc,bc7:!!J.bptc}};Z(z,f).then((z=>{const J=z.fileInfo.images[0].levels[0],v=z.fileInfo.images[0].levels.length>1&&u.generateMipMaps;U(J.width,J.height,v,-1!==z.format,(()=>{E(u,z)}))})).catch((z=>{v.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),v.Tools.Warn("Failed to transcode Basis file: ".concat(z)),U(0,0,!1,!1,(()=>{}),!0)}))}}}}]);