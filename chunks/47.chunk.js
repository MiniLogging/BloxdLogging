"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[47],{14818:(V,h,mV)=>{mV.r(h),mV.d(h,{_BasisTextureLoader:()=>M});var t,L=mV(12253),N=mV(12406),A=mV(12359);function k(){const V=0,h=1,mV=2,t=3,L=6,N=8,A=9,k=10,C=14;let K=null;function o(V,h,mV,t,L){const N=V.getImageTranscodedSizeInBytes(h,mV,t);let A=new Uint8Array(N);if(!V.transcodeImage(A,h,mV,t,1,0))return null;if(L){A=function(V,h,mV,t){const L=new Uint16Array(4),N=new Uint16Array(mV*t),A=mV/4,k=t/4;for(let C=0;C<k;C++)for(let t=0;t<A;t++){const k=h+8*(C*A+t);L[0]=V[k]|V[k+1]<<8,L[1]=V[k+2]|V[k+3]<<8,L[2]=(2*(31&L[0])+1*(31&L[1]))/3|(2*(2016&L[0])+1*(2016&L[1]))/3&2016|(2*(63488&L[0])+1*(63488&L[1]))/3&63488,L[3]=(2*(31&L[1])+1*(31&L[0]))/3|(2*(2016&L[1])+1*(2016&L[0]))/3&2016|(2*(63488&L[1])+1*(63488&L[0]))/3&63488;for(let h=0;h<4;h++){const A=V[k+4+h];let K=(4*C+h)*mV+4*t;N[K++]=L[3&A],N[K++]=L[A>>2&3],N[K++]=L[A>>4&3],N[K++]=L[A>>6&3]}}return N}(A,0,V.getImageWidth(h,mV)+3&-4,V.getImageHeight(h,mV)+3&-4)}return A}onmessage=n=>{if("init"===n.data.action){if(n.data.url)try{importScripts(n.data.url)}catch(q){postMessage({action:"error",error:q})}K||(K=BASIS({wasmBinary:n.data.wasmBinary})),null!==K&&K.then((V=>{BASIS=V,V.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===n.data.action){const K=n.data.config,q=n.data.imageData,x=new BASIS.BasisFile(q),R=function(V){const h=V.getHasAlpha(),mV=V.getNumImages(),t=[];for(let L=0;L<mV;L++){const h={levels:[]},mV=V.getNumLevels(L);for(let t=0;t<mV;t++){const mV={width:V.getImageWidth(L,t),height:V.getImageHeight(L,t)};h.levels.push(mV)}t.push(h)}return{Mk:h,images:t}}(x);let d=n.data.ignoreSupportedFormats?null:function(K,o){let n=null;K.supportedCompressionFormats&&(n=K.supportedCompressionFormats.astc?k:K.supportedCompressionFormats.bc7?L:K.supportedCompressionFormats.s3tc?o.Mk?t:mV:K.supportedCompressionFormats.pvrtc?o.Mk?A:N:K.supportedCompressionFormats.etc2?h:K.supportedCompressionFormats.etc1?V:C);return n}(n.data.config,R),s=!1;null===d&&(s=!0,d=R.Mk?t:mV);let M=!0;x.startTranscoding()||(M=!1);const c=[];for(let V=0;V<R.images.length&&M;V++){const h=R.images[V];if(void 0===K.loadSingleImage||K.loadSingleImage===V){let mV=h.levels.length;!1===K.loadMipmapLevels&&(mV=1);for(let t=0;t<mV;t++){const mV=h.levels[t],L=o(x,V,t,d,s);if(!L){M=!1;break}mV.transcodedPixels=L,c.push(mV.transcodedPixels.buffer)}}}x.close(),x.delete(),s&&(d=-1),M?postMessage({action:"transcode",success:M,id:n.data.id,fileInfo:R,format:d},c):postMessage({action:"transcode",success:M,id:n.data.id})}}}!function(V){V[V.cTFETC1=0]="cTFETC1",V[V.cTFETC2=1]="cTFETC2",V[V.cTFBC1=2]="cTFBC1",V[V.cTFBC3=3]="cTFBC3",V[V.cTFBC4=4]="cTFBC4",V[V.cTFBC5=5]="cTFBC5",V[V.cTFBC7=6]="cTFBC7",V[V.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",V[V.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",V[V.cTFASTC_4x4=10]="cTFASTC_4x4",V[V.cTFATC_RGB=11]="cTFATC_RGB",V[V.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",V[V.cTFRGBA32=13]="cTFRGBA32",V[V.cTFRGB565=14]="cTFRGB565",V[V.cTFBGR565=15]="cTFBGR565",V[V.cTFRGBA4444=16]="cTFRGBA4444",V[V.cTFFXT1_RGB=17]="cTFFXT1_RGB",V[V.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",V[V.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",V[V.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",V[V.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(t||(t={}));const C={JSModuleURL:`${L.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${L.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let K=null,o=null,n=0;const q=async()=>(K||(K=new Promise(((V,h)=>{o?V(o):L.Tools.LoadFileAsync(L.Tools.GetBabylonScriptURL(C.WasmModuleURL)).then((mV=>{if("function"!==typeof URL)return h("Basis transcoder requires an environment with a URL constructor");const t=URL.createObjectURL(new Blob([`(${k})()`],{type:"application/javascript"}));o=new Worker(t),async function(V,h,mV){return await new Promise(((t,N)=>{const A=h=>{"init"===h.data.action?(V.removeEventListener("message",A),t(V)):"error"===h.data.action&&N(h.data.error||"error initializing worker")};V.addEventListener("message",A),V.postMessage({action:"init",url:mV?L.Tools.GetBabylonScriptURL(mV):void 0,wasmBinary:h},[h])}))}(o,mV,C.JSModuleURL).then(V,h)})).catch(h)}))),await K),x=async(V,h)=>{const mV=V instanceof ArrayBuffer?new Uint8Array(V):V;return await new Promise(((V,t)=>{q().then((()=>{const L=n++,N=h=>{"transcode"===h.data.action&&h.data.id===L&&(o.removeEventListener("message",N),h.data.success?V(h.data):t("Transcode is not supported on this device"))};o.addEventListener("message",N);const A=new Uint8Array(mV.byteLength);A.set(new Uint8Array(mV.buffer,mV.byteOffset,mV.byteLength)),o.postMessage({action:"transcode",id:L,imageData:A,config:h,ignoreSupportedFormats:false},[A.buffer])}),(V=>{t(V)}))}))},R=(V,h)=>{var mV;let t=null===(mV=h._gl)||void 0===mV?void 0:mV.TEXTURE_2D;var L;V.isCube&&(t=null===(L=h._gl)||void 0===L?void 0:L.TEXTURE_CUBE_MAP);h._bindTextureDirectly(t,V,!0)},d=(V,h)=>{const mV=V.getEngine();for(let k=0;k<h.fileInfo.images.length;k++){const C=h.fileInfo.images[k].levels[0];if(V._invertVScale=V.invertY,-1===h.format||h.format===t.cTFRGB565)if(V.type=10,V.format=4,!mV._features.basisNeedsPOT||Math.log2(C.width)%1===0&&Math.log2(C.height)%1===0)V._invertVScale=!V.invertY,V.width=C.width+3&-4,V.height=C.height+3&-4,V.samplingMode=2,R(V,mV),mV._uploadDataToTextureDirectly(V,new Uint16Array(C.transcodedPixels.buffer),k,0,4,!0);else{const h=new A.d(mV,2);V._invertVScale=V.invertY,h.type=10,h.format=4,h.width=C.width+3&-4,h.height=C.height+3&-4,R(h,mV),mV._uploadDataToTextureDirectly(h,new Uint16Array(C.transcodedPixels.buffer),k,0,4,!0),mV._rescaleTexture(h,V,mV.scenes[0],mV._getInternalFormat(4),(()=>{mV._releaseTexture(h),R(V,mV)}))}else{V.width=C.width,V.height=C.height,V.generateMipMaps=h.fileInfo.images[k].levels.length>1;const t=s.GetInternalFormatFromBasisFormat(h.format,mV);V.format=t,R(V,mV);const A=h.fileInfo.images[k].levels;for(let h=0;h<A.length;h++){const L=A[h];mV._uploadCompressedDataToTextureDirectly(V,t,L.width,L.height,L.transcodedPixels,k,h)}!mV._features.basisNeedsPOT||Math.log2(V.width)%1===0&&Math.log2(V.height)%1===0||(L.Tools.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),V._cachedWrapU=N.d.CLAMP_ADDRESSMODE,V._cachedWrapV=N.d.CLAMP_ADDRESSMODE)}}},s={JSModuleURL:C.JSModuleURL,WasmModuleURL:C.WasmModuleURL,GetInternalFormatFromBasisFormat:(V,h)=>{let mV;switch(V){case t.cTFETC1:mV=36196;break;case t.cTFBC1:mV=33776;break;case t.cTFBC4:mV=33779;break;case t.cTFASTC_4x4:mV=37808;break;case t.cTFETC2:mV=37496;break;case t.cTFBC7:mV=36492}if(void 0===mV)throw"The chosen Basis transcoder format is not currently supported";return mV},TranscodeAsync:x,LoadTextureFromTranscodeResult:d};Object.defineProperty(s,"JSModuleURL",{get:function(){return C.JSModuleURL},set:function(V){C.JSModuleURL=V}}),Object.defineProperty(s,"WasmModuleURL",{get:function(){return C.WasmModuleURL},set:function(V){C.WasmModuleURL=V}});class M{constructor(){this.supportCascades=!1}loadCubeData(V,h,mV,t,N){if(Array.isArray(V))return;const A=h.getEngine().getCaps(),k={supportedCompressionFormats:{etc1:!!A.etc1,s3tc:!!A.s3tc,pvrtc:!!A.pvrtc,etc2:!!A.etc2,astc:!!A.astc,bc7:!!A.bptc}};x(V,k).then((V=>{const mV=V.fileInfo.images[0].levels.length>1&&h.generateMipMaps;d(h,V),h.getEngine()._setCubeMapTextureParams(h,mV),h.isReady=!0,h.onLoadedObservable.notifyObservers(h),h.onLoadedObservable.clear(),t&&t()})).catch((V=>{L.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),h.isReady=!0,N&&N(V)}))}loadData(V,h,mV){const t=h.getEngine().getCaps(),N={supportedCompressionFormats:{etc1:!!t.etc1,s3tc:!!t.s3tc,pvrtc:!!t.pvrtc,etc2:!!t.etc2,astc:!!t.astc,bc7:!!t.bptc}};x(V,N).then((V=>{const t=V.fileInfo.images[0].levels[0],L=V.fileInfo.images[0].levels.length>1&&h.generateMipMaps;mV(t.width,t.height,L,-1!==V.format,(()=>{d(h,V)}))})).catch((V=>{L.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),L.Tools.Warn(`Failed to transcode Basis file: ${V}`),mV(0,0,!1,!1,(()=>{}),!0)}))}}}}]);