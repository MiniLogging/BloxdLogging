"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[47],{13553:(q,S,b)=>{b.r(S),b.d(S,{_BasisTextureLoader:()=>Q});var z,C=b(10921),v=b(11075),U=b(11033);function g(){const q=0,S=1,b=2,z=3,C=6,v=8,U=9,g=10,r=14;let I=null;function V(q,S,b,z,C){const v=q.getImageTranscodedSizeInBytes(S,b,z);let U=new Uint8Array(v);if(!q.transcodeImage(U,S,b,z,1,0))return null;if(C){U=function(q,S,b,z){const C=new Uint16Array(4),v=new Uint16Array(b*z),U=b/4,g=z/4;for(let r=0;r<g;r++)for(let z=0;z<U;z++){const g=S+8*(r*U+z);C[0]=q[g]|q[g+1]<<8,C[1]=q[g+2]|q[g+3]<<8,C[2]=(2*(31&C[0])+1*(31&C[1]))/3|(2*(2016&C[0])+1*(2016&C[1]))/3&2016|(2*(63488&C[0])+1*(63488&C[1]))/3&63488,C[3]=(2*(31&C[1])+1*(31&C[0]))/3|(2*(2016&C[1])+1*(2016&C[0]))/3&2016|(2*(63488&C[1])+1*(63488&C[0]))/3&63488;for(let S=0;S<4;S++){const U=q[g+4+S];let I=(4*r+S)*b+4*z;v[I++]=C[3&U],v[I++]=C[U>>2&3],v[I++]=C[U>>4&3],v[I++]=C[U>>6&3]}}return v}(U,0,q.getImageWidth(S,b)+3&-4,q.getImageHeight(S,b)+3&-4)}return U}onmessage=l=>{if("init"===l.data.action){if(l.data.url)try{importScripts(l.data.url)}catch(y){postMessage({action:"error",error:y})}I||(I=BASIS({wasmBinary:l.data.wasmBinary})),null!==I&&I.then((q=>{BASIS=q,q.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===l.data.action){const I=l.data.config,y=l.data.imageData,R=new BASIS.BasisFile(y),G=function(q){const S=q.getHasAlpha(),b=q.getNumImages(),z=[];for(let C=0;C<b;C++){const S={levels:[]},b=q.getNumLevels(C);for(let z=0;z<b;z++){const b={width:q.getImageWidth(C,z),height:q.getImageHeight(C,z)};S.levels.push(b)}z.push(S)}return{Qb:S,images:z}}(R);let Z=l.data.ignoreSupportedFormats?null:function(I,V){let l=null;I.supportedCompressionFormats&&(l=I.supportedCompressionFormats.astc?g:I.supportedCompressionFormats.bc7?C:I.supportedCompressionFormats.s3tc?V.Qb?z:b:I.supportedCompressionFormats.pvrtc?V.Qb?U:v:I.supportedCompressionFormats.etc2?S:I.supportedCompressionFormats.etc1?q:r);return l}(l.data.config,G),H=!1;null===Z&&(H=!0,Z=G.Qb?z:b);let Q=!0;R.startTranscoding()||(Q=!1);const k=[];for(let q=0;q<G.images.length&&Q;q++){const S=G.images[q];if(void 0===I.loadSingleImage||I.loadSingleImage===q){let b=S.levels.length;!1===I.loadMipmapLevels&&(b=1);for(let z=0;z<b;z++){const b=S.levels[z],C=V(R,q,z,Z,H);if(!C){Q=!1;break}b.transcodedPixels=C,k.push(b.transcodedPixels.buffer)}}}R.close(),R.delete(),H&&(Z=-1),Q?postMessage({action:"transcode",success:Q,id:l.data.id,fileInfo:G,format:Z},k):postMessage({action:"transcode",success:Q,id:l.data.id})}}}!function(q){q[q.cTFETC1=0]="cTFETC1",q[q.cTFETC2=1]="cTFETC2",q[q.cTFBC1=2]="cTFBC1",q[q.cTFBC3=3]="cTFBC3",q[q.cTFBC4=4]="cTFBC4",q[q.cTFBC5=5]="cTFBC5",q[q.cTFBC7=6]="cTFBC7",q[q.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",q[q.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",q[q.cTFASTC_4x4=10]="cTFASTC_4x4",q[q.cTFATC_RGB=11]="cTFATC_RGB",q[q.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",q[q.cTFRGBA32=13]="cTFRGBA32",q[q.cTFRGB565=14]="cTFRGB565",q[q.cTFBGR565=15]="cTFBGR565",q[q.cTFRGBA4444=16]="cTFRGBA4444",q[q.cTFFXT1_RGB=17]="cTFFXT1_RGB",q[q.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",q[q.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",q[q.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",q[q.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(z||(z={}));const r={JSModuleURL:`${C.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${C.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let I=null,V=null,l=0;const y=async()=>(I||(I=new Promise(((q,S)=>{V?q(V):C.Tools.LoadFileAsync(C.Tools.GetBabylonScriptURL(r.WasmModuleURL)).then((b=>{if("function"!==typeof URL)return S("Basis transcoder requires an environment with a URL constructor");const z=URL.createObjectURL(new Blob([`(${g})()`],{type:"application/javascript"}));V=new Worker(z),async function(q,S,b){return await new Promise(((z,v)=>{const U=S=>{"init"===S.data.action?(q.removeEventListener("message",U),z(q)):"error"===S.data.action&&v(S.data.error||"error initializing worker")};q.addEventListener("message",U),q.postMessage({action:"init",url:b?C.Tools.GetBabylonScriptURL(b):void 0,wasmBinary:S},[S])}))}(V,b,r.JSModuleURL).then(q,S)})).catch(S)}))),await I),R=async(q,S)=>{const b=q instanceof ArrayBuffer?new Uint8Array(q):q;return await new Promise(((q,z)=>{y().then((()=>{const C=l++,v=S=>{"transcode"===S.data.action&&S.data.id===C&&(V.removeEventListener("message",v),S.data.success?q(S.data):z("Transcode is not supported on this device"))};V.addEventListener("message",v);const U=new Uint8Array(b.byteLength);U.set(new Uint8Array(b.buffer,b.byteOffset,b.byteLength)),V.postMessage({action:"transcode",id:C,imageData:U,config:S,ignoreSupportedFormats:false},[U.buffer])}),(q=>{z(q)}))}))},G=(q,S)=>{var b;let z=null===(b=S._gl)||void 0===b?void 0:b.TEXTURE_2D;var C;q.isCube&&(z=null===(C=S._gl)||void 0===C?void 0:C.TEXTURE_CUBE_MAP);S._bindTextureDirectly(z,q,!0)},Z=(q,S)=>{const b=q.getEngine();for(let g=0;g<S.fileInfo.images.length;g++){const r=S.fileInfo.images[g].levels[0];if(q._invertVScale=q.invertY,-1===S.format||S.format===z.cTFRGB565)if(q.type=10,q.format=4,!b._features.basisNeedsPOT||Math.log2(r.width)%1===0&&Math.log2(r.height)%1===0)q._invertVScale=!q.invertY,q.width=r.width+3&-4,q.height=r.height+3&-4,q.samplingMode=2,G(q,b),b._uploadDataToTextureDirectly(q,new Uint16Array(r.transcodedPixels.buffer),g,0,4,!0);else{const S=new U.d(b,2);q._invertVScale=q.invertY,S.type=10,S.format=4,S.width=r.width+3&-4,S.height=r.height+3&-4,G(S,b),b._uploadDataToTextureDirectly(S,new Uint16Array(r.transcodedPixels.buffer),g,0,4,!0),b._rescaleTexture(S,q,b.scenes[0],b._getInternalFormat(4),(()=>{b._releaseTexture(S),G(q,b)}))}else{q.width=r.width,q.height=r.height,q.generateMipMaps=S.fileInfo.images[g].levels.length>1;const z=H.GetInternalFormatFromBasisFormat(S.format,b);q.format=z,G(q,b);const U=S.fileInfo.images[g].levels;for(let S=0;S<U.length;S++){const C=U[S];b._uploadCompressedDataToTextureDirectly(q,z,C.width,C.height,C.transcodedPixels,g,S)}!b._features.basisNeedsPOT||Math.log2(q.width)%1===0&&Math.log2(q.height)%1===0||(C.Tools.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),q._cachedWrapU=v.e.CLAMP_ADDRESSMODE,q._cachedWrapV=v.e.CLAMP_ADDRESSMODE)}}},H={JSModuleURL:r.JSModuleURL,WasmModuleURL:r.WasmModuleURL,GetInternalFormatFromBasisFormat:(q,S)=>{let b;switch(q){case z.cTFETC1:b=36196;break;case z.cTFBC1:b=33776;break;case z.cTFBC4:b=33779;break;case z.cTFASTC_4x4:b=37808;break;case z.cTFETC2:b=37496;break;case z.cTFBC7:b=36492}if(void 0===b)throw"The chosen Basis transcoder format is not currently supported";return b},TranscodeAsync:R,LoadTextureFromTranscodeResult:Z};Object.defineProperty(H,"JSModuleURL",{get:function(){return r.JSModuleURL},set:function(q){r.JSModuleURL=q}}),Object.defineProperty(H,"WasmModuleURL",{get:function(){return r.WasmModuleURL},set:function(q){r.WasmModuleURL=q}});class Q{constructor(){this.supportCascades=!1}loadCubeData(q,S,b,z,v){if(Array.isArray(q))return;const U=S.getEngine().getCaps(),g={supportedCompressionFormats:{etc1:!!U.etc1,s3tc:!!U.s3tc,pvrtc:!!U.pvrtc,etc2:!!U.etc2,astc:!!U.astc,bc7:!!U.bptc}};R(q,g).then((q=>{const b=q.fileInfo.images[0].levels.length>1&&S.generateMipMaps;Z(S,q),S.getEngine()._setCubeMapTextureParams(S,b),S.isReady=!0,S.onLoadedObservable.notifyObservers(S),S.onLoadedObservable.clear(),z&&z()})).catch((q=>{C.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),S.isReady=!0,v&&v(q)}))}loadData(q,S,b){const z=S.getEngine().getCaps(),v={supportedCompressionFormats:{etc1:!!z.etc1,s3tc:!!z.s3tc,pvrtc:!!z.pvrtc,etc2:!!z.etc2,astc:!!z.astc,bc7:!!z.bptc}};R(q,v).then((q=>{const z=q.fileInfo.images[0].levels[0],C=q.fileInfo.images[0].levels.length>1&&S.generateMipMaps;b(z.width,z.height,C,-1!==q.format,(()=>{Z(S,q)}))})).catch((q=>{C.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),C.Tools.Warn(`Failed to transcode Basis file: ${q}`),b(0,0,!1,!1,(()=>{}),!0)}))}}}}]);