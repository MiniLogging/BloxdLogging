"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[47],{13543:(h,V,i)=>{i.r(V),i.d(V,{_BasisTextureLoader:()=>c});var S,l=i(10952),Y=i(11117),g=i(11064);function q(){const h=0,V=1,i=2,S=3,l=6,Y=8,g=9,q=10,B=14;let J=null;function I(h,V,i,S,l){const Y=h.getImageTranscodedSizeInBytes(V,i,S);let g=new Uint8Array(Y);if(!h.transcodeImage(g,V,i,S,1,0))return null;if(l){g=function(h,V,i,S){const l=new Uint16Array(4),Y=new Uint16Array(i*S),g=i/4,q=S/4;for(let B=0;B<q;B++)for(let S=0;S<g;S++){const q=V+8*(B*g+S);l[0]=h[q]|h[q+1]<<8,l[1]=h[q+2]|h[q+3]<<8,l[2]=(2*(31&l[0])+1*(31&l[1]))/3|(2*(2016&l[0])+1*(2016&l[1]))/3&2016|(2*(63488&l[0])+1*(63488&l[1]))/3&63488,l[3]=(2*(31&l[1])+1*(31&l[0]))/3|(2*(2016&l[1])+1*(2016&l[0]))/3&2016|(2*(63488&l[1])+1*(63488&l[0]))/3&63488;for(let V=0;V<4;V++){const g=h[q+4+V];let J=(4*B+V)*i+4*S;Y[J++]=l[3&g],Y[J++]=l[g>>2&3],Y[J++]=l[g>>4&3],Y[J++]=l[g>>6&3]}}return Y}(g,0,h.getImageWidth(V,i)+3&-4,h.getImageHeight(V,i)+3&-4)}return g}onmessage=v=>{if("init"===v.data.action){if(v.data.url)try{importScripts(v.data.url)}catch(s){postMessage({action:"error",error:s})}J||(J=BASIS({wasmBinary:v.data.wasmBinary})),null!==J&&J.then((h=>{BASIS=h,h.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===v.data.action){const J=v.data.config,s=v.data.imageData,t=new BASIS.BasisFile(s),T=function(h){const V=h.getHasAlpha(),i=h.getNumImages(),S=[];for(let l=0;l<i;l++){const V={levels:[]},i=h.getNumLevels(l);for(let S=0;S<i;S++){const i={width:h.getImageWidth(l,S),height:h.getImageHeight(l,S)};V.levels.push(i)}S.push(V)}return{Rg:V,images:S}}(t);let e=v.data.ignoreSupportedFormats?null:function(J,I){let v=null;J.supportedCompressionFormats&&(v=J.supportedCompressionFormats.astc?q:J.supportedCompressionFormats.bc7?l:J.supportedCompressionFormats.s3tc?I.Rg?S:i:J.supportedCompressionFormats.pvrtc?I.Rg?g:Y:J.supportedCompressionFormats.etc2?V:J.supportedCompressionFormats.etc1?h:B);return v}(v.data.config,T),n=!1;null===e&&(n=!0,e=T.Rg?S:i);let c=!0;t.startTranscoding()||(c=!1);const f=[];for(let h=0;h<T.images.length&&c;h++){const V=T.images[h];if(void 0===J.loadSingleImage||J.loadSingleImage===h){let i=V.levels.length;!1===J.loadMipmapLevels&&(i=1);for(let S=0;S<i;S++){const i=V.levels[S],l=I(t,h,S,e,n);if(!l){c=!1;break}i.transcodedPixels=l,f.push(i.transcodedPixels.buffer)}}}t.close(),t.delete(),n&&(e=-1),c?postMessage({action:"transcode",success:c,id:v.data.id,fileInfo:T,format:e},f):postMessage({action:"transcode",success:c,id:v.data.id})}}}!function(h){h[h.cTFETC1=0]="cTFETC1",h[h.cTFETC2=1]="cTFETC2",h[h.cTFBC1=2]="cTFBC1",h[h.cTFBC3=3]="cTFBC3",h[h.cTFBC4=4]="cTFBC4",h[h.cTFBC5=5]="cTFBC5",h[h.cTFBC7=6]="cTFBC7",h[h.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",h[h.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",h[h.cTFASTC_4x4=10]="cTFASTC_4x4",h[h.cTFATC_RGB=11]="cTFATC_RGB",h[h.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",h[h.cTFRGBA32=13]="cTFRGBA32",h[h.cTFRGB565=14]="cTFRGB565",h[h.cTFBGR565=15]="cTFBGR565",h[h.cTFRGBA4444=16]="cTFRGBA4444",h[h.cTFFXT1_RGB=17]="cTFFXT1_RGB",h[h.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",h[h.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",h[h.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",h[h.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(S||(S={}));const B={JSModuleURL:`${l.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${l.Tools._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let J=null,I=null,v=0;const s=async()=>(J||(J=new Promise(((h,V)=>{I?h(I):l.Tools.LoadFileAsync(l.Tools.GetBabylonScriptURL(B.WasmModuleURL)).then((i=>{if("function"!==typeof URL)return V("Basis transcoder requires an environment with a URL constructor");const S=URL.createObjectURL(new Blob([`(${q})()`],{type:"application/javascript"}));I=new Worker(S),async function(h,V,i){return await new Promise(((S,Y)=>{const g=V=>{"init"===V.data.action?(h.removeEventListener("message",g),S(h)):"error"===V.data.action&&Y(V.data.error||"error initializing worker")};h.addEventListener("message",g),h.postMessage({action:"init",url:i?l.Tools.GetBabylonScriptURL(i):void 0,wasmBinary:V},[V])}))}(I,i,B.JSModuleURL).then(h,V)})).catch(V)}))),await J),t=async(h,V)=>{const i=h instanceof ArrayBuffer?new Uint8Array(h):h;return await new Promise(((h,S)=>{s().then((()=>{const l=v++,Y=V=>{"transcode"===V.data.action&&V.data.id===l&&(I.removeEventListener("message",Y),V.data.success?h(V.data):S("Transcode is not supported on this device"))};I.addEventListener("message",Y);const g=new Uint8Array(i.byteLength);g.set(new Uint8Array(i.buffer,i.byteOffset,i.byteLength)),I.postMessage({action:"transcode",id:l,imageData:g,config:V,ignoreSupportedFormats:false},[g.buffer])}),(h=>{S(h)}))}))},T=(h,V)=>{var i;let S=null===(i=V._gl)||void 0===i?void 0:i.TEXTURE_2D;var l;h.isCube&&(S=null===(l=V._gl)||void 0===l?void 0:l.TEXTURE_CUBE_MAP);V._bindTextureDirectly(S,h,!0)},e=(h,V)=>{const i=h.getEngine();for(let q=0;q<V.fileInfo.images.length;q++){const B=V.fileInfo.images[q].levels[0];if(h._invertVScale=h.invertY,-1===V.format||V.format===S.cTFRGB565)if(h.type=10,h.format=4,!i._features.basisNeedsPOT||Math.log2(B.width)%1===0&&Math.log2(B.height)%1===0)h._invertVScale=!h.invertY,h.width=B.width+3&-4,h.height=B.height+3&-4,h.samplingMode=2,T(h,i),i._uploadDataToTextureDirectly(h,new Uint16Array(B.transcodedPixels.buffer),q,0,4,!0);else{const V=new g.c(i,2);h._invertVScale=h.invertY,V.type=10,V.format=4,V.width=B.width+3&-4,V.height=B.height+3&-4,T(V,i),i._uploadDataToTextureDirectly(V,new Uint16Array(B.transcodedPixels.buffer),q,0,4,!0),i._rescaleTexture(V,h,i.scenes[0],i._getInternalFormat(4),(()=>{i._releaseTexture(V),T(h,i)}))}else{h.width=B.width,h.height=B.height,h.generateMipMaps=V.fileInfo.images[q].levels.length>1;const S=n.GetInternalFormatFromBasisFormat(V.format,i);h.format=S,T(h,i);const g=V.fileInfo.images[q].levels;for(let V=0;V<g.length;V++){const l=g[V];i._uploadCompressedDataToTextureDirectly(h,S,l.width,l.height,l.transcodedPixels,q,V)}!i._features.basisNeedsPOT||Math.log2(h.width)%1===0&&Math.log2(h.height)%1===0||(l.Tools.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),h._cachedWrapU=Y.d.CLAMP_ADDRESSMODE,h._cachedWrapV=Y.d.CLAMP_ADDRESSMODE)}}},n={JSModuleURL:B.JSModuleURL,WasmModuleURL:B.WasmModuleURL,GetInternalFormatFromBasisFormat:(h,V)=>{let i;switch(h){case S.cTFETC1:i=36196;break;case S.cTFBC1:i=33776;break;case S.cTFBC4:i=33779;break;case S.cTFASTC_4x4:i=37808;break;case S.cTFETC2:i=37496;break;case S.cTFBC7:i=36492}if(void 0===i)throw"The chosen Basis transcoder format is not currently supported";return i},TranscodeAsync:t,LoadTextureFromTranscodeResult:e};Object.defineProperty(n,"JSModuleURL",{get:function(){return B.JSModuleURL},set:function(h){B.JSModuleURL=h}}),Object.defineProperty(n,"WasmModuleURL",{get:function(){return B.WasmModuleURL},set:function(h){B.WasmModuleURL=h}});class c{constructor(){this.supportCascades=!1}loadCubeData(h,V,i,S,Y){if(Array.isArray(h))return;const g=V.getEngine().getCaps(),q={supportedCompressionFormats:{etc1:!!g.etc1,s3tc:!!g.s3tc,pvrtc:!!g.pvrtc,etc2:!!g.etc2,astc:!!g.astc,bc7:!!g.bptc}};t(h,q).then((h=>{const i=h.fileInfo.images[0].levels.length>1&&V.generateMipMaps;e(V,h),V.getEngine()._setCubeMapTextureParams(V,i),V.isReady=!0,V.onLoadedObservable.notifyObservers(V),V.onLoadedObservable.clear(),S&&S()})).catch((h=>{l.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),V.isReady=!0,Y&&Y(h)}))}loadData(h,V,i){const S=V.getEngine().getCaps(),Y={supportedCompressionFormats:{etc1:!!S.etc1,s3tc:!!S.s3tc,pvrtc:!!S.pvrtc,etc2:!!S.etc2,astc:!!S.astc,bc7:!!S.bptc}};t(h,Y).then((h=>{const S=h.fileInfo.images[0].levels[0],l=h.fileInfo.images[0].levels.length>1&&V.generateMipMaps;i(S.width,S.height,l,-1!==h.format,(()=>{e(V,h)}))})).catch((h=>{l.Tools.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),l.Tools.Warn(`Failed to transcode Basis file: ${h}`),i(0,0,!1,!1,(()=>{}),!0)}))}}}}]);