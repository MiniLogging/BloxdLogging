"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13193:(K,b,e)=>{e.r(b),e.d(b,{AnimationGroup:()=>I,TargetedAnimation:()=>D});var z=e(11896),k=e(10690),j=e(10720),T=e(10963),F=e(11893),l=e(10967);class Y{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(K,b,e,k){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=b,this._target=K,this._scene=e,this._host=k,this._activeTargets=[],b._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===z.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=l.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const K={frame:0,value:this._minValue};this._keys.splice(0,0,K)}if(this._target instanceof Array){let K=0;for(const b of this._target)this._preparePath(b,K),this._getOriginalValues(K),K++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const j=b.getEvents();j&&j.length>0&&j.forEach((K=>{this._events.push(K._clone())})),this._enableBlending=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(K){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const e=this._animation.targetPropertyPath;if(e.length>1){let z=K;for(let K=0;K<e.length-1;K++){const b=e[K];if(z=z[b],void 0===z)throw new Error(`Invalid property (${b}) in property path (${e.join(".")})`)}this._targetPath=e[e.length-1],this._activeTargets[b]=z}else this._targetPath=e[0],this._activeTargets[b]=K;if(void 0===this._activeTargets[b][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${e.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let K=0;for(const b of this._target)void 0!==this._originalValue[K]&&this._setValue(b,this._activeTargets[K],this._originalValue[K],-1,K),K++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let K=0;K<this._events.length;K++)this._events[K].isDone=!1}isStopped(){return this._stopped}dispose(){const K=this._animation.runtimeAnimations.indexOf(this);K>-1&&this._animation.runtimeAnimations.splice(K,1)}setValue(K,b){if(this._targetIsArray)for(let e=0;e<this._target.length;e++){const z=this._target[e];this._setValue(z,this._activeTargets[e],K,b,e)}else this._setValue(this._target,this._directTarget,K,b,0)}_getOriginalValues(){let K,b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this._activeTargets[b];K=e.getLocalMatrix&&"_matrix"===this._targetPath?e.getLocalMatrix():e[this._targetPath],K&&K.clone?this._originalValue[b]=K.clone():this._originalValue[b]=K}_registerTargetForLateAnimationBinding(K,b){const e=K.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(e),e._lateAnimationHolders||(e._lateAnimationHolders={}),e._lateAnimationHolders[K.targetPath]||(e._lateAnimationHolders[K.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:b}),K.isAdditive?(e._lateAnimationHolders[K.targetPath].additiveAnimations.push(K),e._lateAnimationHolders[K.targetPath].totalAdditiveWeight+=K.weight):(e._lateAnimationHolders[K.targetPath].animations.push(K),e._lateAnimationHolders[K.targetPath].totalWeight+=K.weight)}_setValue(K,b,e,k,j){if(this._currentActiveTarget=b,this._weight=k,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const K=b[this._targetPath];K.clone?this._originalBlendValue=K.clone():this._originalBlendValue=K}this._originalBlendValue.m?z.c.AllowMatrixDecomposeForInterpolation?this._currentValue?l.b.DecomposeLerpToRef(this._originalBlendValue,e,this._blendingFactor,this._currentValue):this._currentValue=l.b.DecomposeLerp(this._originalBlendValue,e,this._blendingFactor):this._currentValue?l.b.LerpToRef(this._originalBlendValue,e,this._blendingFactor,this._currentValue):this._currentValue=l.b.Lerp(this._originalBlendValue,e,this._blendingFactor):this._currentValue=z.c._UniversalLerp(this._originalBlendValue,e,this._blendingFactor);const k=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=k}else this._currentValue?this._currentValue.p?this._currentValue.p(e):this._currentValue=e:null!==e&&void 0!==e&&e.clone?this._currentValue=e.clone():this._currentValue=e;-1!==k?this._registerTargetForLateAnimationBinding(this,this._originalValue[j]):this._animationState.loopMode===z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[j],b[this._targetPath]):b[this._targetPath]=this._originalValue[j]+this._currentValue:b[this._targetPath]=this._currentValue,K.rg&&K.rg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(K){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const e=this._animation.getKeys();K<e[0].frame?K=e[0].frame:K>e[e.length-1].frame&&(K=e[e.length-1].frame);const z=this._events;if(z.length)for(let j=0;j<z.length;j++)z[j].onlyOnce||(z[j].isDone=z[j].frame<K);this._currentFrame=K;const k=this._animation._interpolate(K,this._animationState);this.setValue(k,b)}_prepareForSpeedRatioChange(K){const b=this._previousElapsedTime*(this._animation.framePerSecond*K)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-b}animate(K,b,e,k,j){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const F=this._animation,l=F.targetPropertyPath;if(!l||l.length<1)return this._stopped=!0,!1;let Y=!0;(b<this._minFrame||b>this._maxFrame)&&(b=this._minFrame),(e<this._minFrame||e>this._maxFrame)&&(e=this._maxFrame);const A=e-b;let X,t=K*(F.framePerSecond*j)/1e3+this._absoluteFrameOffset,U=0,B=!1;const u=k&&this._animationState.loopMode===z.c.ANIMATIONLOOPMODE_YOYO;if(u){const K=(t-b)/A,e=Math.sin(K*Math.PI);t=Math.abs(e)*A+b;const z=e>=0?1:-1;this._yoyoDirection!==z&&(B=!0),this._yoyoDirection=z}if(this._previousElapsedTime=K,this._previousAbsoluteFrame=t,!k&&e>=b&&(t>=A&&j>0||t<=0&&j<0))Y=!1,U=F._getKeyValue(this._maxValue);else if(!k&&b>=e&&(t<=A&&j<0||t>=0&&j>0))Y=!1,U=F._getKeyValue(this._minValue);else if(this._animationState.loopMode!==z.c.ANIMATIONLOOPMODE_CYCLE){const K=e.toString()+b.toString();if(!this._offsetsCache[K]){this._animationState.repeatCount=0,this._animationState.loopMode=z.c.ANIMATIONLOOPMODE_CYCLE;const k=F._interpolate(b,this._animationState),j=F._interpolate(e,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),F.dataType){case z.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[K]=j-k;break;case z.c.ANIMATIONTYPE_QUATERNION:case z.c.ANIMATIONTYPE_VECTOR3:case z.c.ANIMATIONTYPE_VECTOR2:case z.c.ANIMATIONTYPE_SIZE:case z.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[K]=j.Qc(k)}this._highLimitsCache[K]=j}U=this._highLimitsCache[K],X=this._offsetsCache[K]}if(void 0===X)switch(F.dataType){case z.c.ANIMATIONTYPE_FLOAT:X=0;break;case z.c.ANIMATIONTYPE_QUATERNION:X=z.m;break;case z.c.ANIMATIONTYPE_VECTOR3:X=z.r;break;case z.c.ANIMATIONTYPE_VECTOR2:X=z.p;break;case z.c.ANIMATIONTYPE_SIZE:X=z.n;break;case z.c.ANIMATIONTYPE_COLOR3:X=z.f;break;case z.c.ANIMATIONTYPE_COLOR4:X=z.j}let m;if(this._host&&this._host.syncRoot){const K=this._host.syncRoot;m=b+A*((K.masterFrame-K.fromFrame)/(K.toFrame-K.fromFrame))}else m=t>0&&b>e||t<0&&b<e?Y&&0!==A?e+t%A:b:Y&&0!==A?b+t%A:e;const D=this._events;if(!u&&(j>0&&this.currentFrame>m||j<0&&this.currentFrame<m)||u&&B){this._onLoop();for(let K=0;K<D.length;K++)D[K].onlyOnce||(D[K].isDone=!1);this._animationState.key=j>0?0:F.getKeys().length-1}this._currentFrame=m,this._animationState.repeatCount=0===A?0:t/A|0,this._animationState.highLimitValue=U,this._animationState.offsetValue=X;const I=F._interpolate(m,this._animationState);if(this.setValue(I,T),D.length)for(let z=0;z<D.length;z++)if(A>=0&&m>=D[z].frame&&D[z].frame>=b||A<0&&m<=D[z].frame&&D[z].frame<=b){const K=D[z];K.isDone||(K.onlyOnce&&(D.splice(z,1),z--),K.isDone=!0,K.action(m))}return Y||(this._stopped=!0),Y}}var A=e(10707);class X{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(K){this._weight=-1!==K?Math.min(Math.max(K,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(K){for(let b=0;b<this._runtimeAnimations.length;b++){this._runtimeAnimations[b]._prepareForSpeedRatioChange(K)}this._speedRatio=K,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(K,b){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,j=arguments.length>4&&void 0!==arguments[4]&&arguments[4],T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,F=arguments.length>6?arguments[6]:void 0,l=arguments.length>7?arguments[7]:void 0,Y=arguments.length>8?arguments[8]:void 0,A=arguments.length>9&&void 0!==arguments[9]&&arguments[9],X=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=b,this.fromFrame=e,this.toFrame=z,this.loopAnimation=j,this.onAnimationEnd=F,this.onAnimationLoop=Y,this.isAdditive=A,this.playOrder=X,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.wd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new k.d,this.onAnimationLoopObservable=new k.d,this._scene=K,l&&this.appendAnimations(b,l),this._speedRatio=T,K._activeAnimatables.push(this)}syncWith(K){if(this._syncRoot=K,K){const K=this._scene._activeAnimatables.indexOf(this);K>-1&&(this._scene._activeAnimatables.splice(K,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(K,b){for(let e=0;e<b.length;e++){const z=b[e],k=new Y(K,z,this._scene,this);k._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(k)}}getAnimationByTargetProperty(K){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)if(b[e].animation.targetProperty===K)return b[e].animation;return null}getRuntimeAnimationByTargetProperty(K){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)if(b[e].animation.targetProperty===K)return b[e];return null}reset(){const K=this._runtimeAnimations;for(let b=0;b<K.length;b++)K[b].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(K){const b=this._runtimeAnimations;for(let e=0;e<b.length;e++)b[e].animation.enableBlending=!0,b[e].animation.blendingSpeed=K}disableBlending(){const K=this._runtimeAnimations;for(let b=0;b<K.length;b++)K[b].animation.enableBlending=!1}goToFrame(K){const b=this._runtimeAnimations;if(b[0]){const e=b[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??b[0].currentFrame;const z=0===this.speedRatio?0:(K-this._frameToSyncFromJump)/e*1e3/this.speedRatio;this._manualJumpDelay=-z}for(let e=0;e<b.length;e++)b[e].goToFrame(K,this._weight);this._goToFrame=K}get paused(){return this.wd}pause(){this.wd||(this.wd=!0)}restart(){this.wd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(K,b){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(K||b){const k=this._scene._activeAnimatables.indexOf(this);if(k>-1){const j=this._runtimeAnimations;for(let e=j.length-1;e>=0;e--){const z=j[e];K&&z.animation.name!=K||(b&&!b(z.target)||(z.dispose(),j.splice(e,1)))}0==j.length&&(e||this._scene._activeAnimatables.splice(k,1),z||this._raiseOnAnimationEnd())}}else{const K=this._scene._activeAnimatables.indexOf(this);if(K>-1){e||this._scene._activeAnimatables.splice(K,1);const b=this._runtimeAnimations;for(let K=0;K<b.length;K++)b[K].dispose();this._runtimeAnimations.length=0,z||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((K=>{this.onAnimationEndObservable.add((()=>{K(this)}),void 0,void 0,this,!0)}))}_animate(K){if(this.wd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=K),!0;if(null===this._localDelayOffset?(this._localDelayOffset=K,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=K-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let b=!1;const e=this._runtimeAnimations;let z;for(z=0;z<e.length;z++){const k=e[z].animate(K-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);b=b||k}if(this.animationStarted=b,!b){if(this.disposeOnEnd)for(z=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(z,1),z=0;z<e.length;z++)e[z].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return b}}function t(K){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return K.originalValue;let b=1;const e=l.e.gb[0],z=l.e.gb[1],k=l.e.Quaternion[0];let j=0;const T=K.animations[0],F=K.originalValue;let Y=1,A=!1;if(K.totalWeight<1)Y=1-K.totalWeight,F.decompose(z,k,e);else{if(j=1,b=K.totalWeight,Y=T.weight/b,1==Y){if(!K.totalAdditiveWeight)return T.currentValue;A=!0}T.currentValue.decompose(z,k,e)}if(!A){z.scaleInPlace(Y),e.scaleInPlace(Y),k.scaleInPlace(Y);for(let T=j;T<K.animations.length;T++){const j=K.animations[T];if(0===j.weight)continue;Y=j.weight/b;const F=l.e.gb[2],A=l.e.gb[3],X=l.e.Quaternion[1];j.currentValue.decompose(A,X,F),A.scaleAndAddToRef(Y,z),X.scaleAndAddToRef(l.d.Dot(k,X)>0?Y:-Y,k),F.scaleAndAddToRef(Y,e)}k.normalize()}for(let t=0;t<K.additiveAnimations.length;t++){const b=K.additiveAnimations[t];if(0===b.weight)continue;const j=l.e.gb[2],T=l.e.gb[3],F=l.e.Quaternion[1];b.currentValue.decompose(T,F,j),T.multiplyToRef(z,T),l.k.LerpToRef(z,T,b.weight,z),k.multiplyToRef(F,F),l.d.SlerpToRef(k,F,b.weight,k),j.scaleAndAddToRef(b.weight,e)}const X=T?T._animationState.workValue:l.e.Matrix[0].clone();return l.b.ComposeToRef(z,k,e,X),X}function U(K,b){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return b;const e=K.animations[0],z=K.originalValue;let k=b;if(0===K.totalWeight&&K.totalAdditiveWeight>0)k.p(z);else if(1===K.animations.length){if(l.d.SlerpToRef(z,e.currentValue,Math.min(1,K.totalWeight),k),0===K.totalAdditiveWeight)return k}else if(K.animations.length>1){let e,j,T=1;if(K.totalWeight<1){const b=1-K.totalWeight;e=[],j=[],e.push(z),j.push(b)}else{if(2===K.animations.length&&(l.d.SlerpToRef(K.animations[0].currentValue,K.animations[1].currentValue,K.animations[1].weight/K.totalWeight,b),0===K.totalAdditiveWeight))return b;e=[],j=[],T=K.totalWeight}for(let b=0;b<K.animations.length;b++){const z=K.animations[b];e.push(z.currentValue),j.push(z.weight/T)}let F=0;for(let K=0;K<e.length;)K?(F+=j[K],l.d.SlerpToRef(k,e[K],j[K]/F,k),K++):(l.d.SlerpToRef(e[K],e[K+1],j[K+1]/(j[K]+j[K+1]),b),k=b,F=j[K]+j[K+1],K+=2)}for(let j=0;j<K.additiveAnimations.length;j++){const b=K.additiveAnimations[j];0!==b.weight&&(k.multiplyToRef(b.currentValue,l.e.Quaternion[0]),l.d.SlerpToRef(k,l.e.Quaternion[0],b.weight,k))}return k}var B,u,m=e(10960);B=m.e,(u=F.b)&&(u.prototype.copyAnimationRange=function(K,b,e){let k=arguments.length>3&&void 0!==arguments[3]&&arguments[3],j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new z.c(this.name,"_matrix",K.animations[0].framePerSecond,z.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const T=K.animations[0].getRange(b);if(!T)return!1;const F=T.from,l=T.to,Y=K.animations[0].getKeys(),A=K.length,X=K.getParent(),t=this.getParent(),U=k&&X&&A&&this.length&&A!==this.length,B=U&&t&&X?t.length/X.length:1,u=k&&!t&&j&&(1!==j.x||1!==j.y||1!==j.z),m=this.animations[0].getKeys();let D,I,x;for(let z=0,Q=Y.length;z<Q;z++)D=Y[z],D.frame>=F&&D.frame<=l&&(k?(x=D.value.clone(),U?(I=x.getTranslation(),x.setTranslation(I.scaleInPlace(B))):u&&j?(I=x.getTranslation(),x.setTranslation(I.multiplyInPlace(j))):x=D.value):x=D.value,m.push({frame:D.frame+e,value:x}));return this.animations[0].createRange(b,F+e,l+e),!0}),B&&(B.prototype._animate=function(K){if(!this.animationsEnabled)return;const b=A.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=b}this.deltaTime=void 0!==K?K:this.useConstantAnimationDeltaTime?16:(b-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=b;const e=this._activeAnimatables;if(0===e.length)return;this._animationTime+=this.deltaTime;const k=this._animationTime;for(let z=0;z<e.length;z++){const K=e[z];!K._animate(k)&&K.disposeOnEnd&&z--}!function(K){if(K._registeredForLateAnimationBindings.length){for(let b=0;b<K._registeredForLateAnimationBindings.length;b++){const e=K._registeredForLateAnimationBindings.data[b];for(const K in e._lateAnimationHolders){const b=e._lateAnimationHolders[K],k=b.animations[0],j=b.originalValue;if(void 0===j||null===j)continue;const T=z.c.AllowMatrixDecomposeForInterpolation&&j.m;let F=e[K];if(T)F=t(b);else if(void 0!==j.w)F=U(b,F||l.d.Identity());else{let K=0,e=1;const T=k&&k._animationState.loopMode===z.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(b.totalWeight<1)F=T?j.clone?j.clone():j:k&&j.scale?j.scale(1-b.totalWeight):k?j*(1-b.totalWeight):j.clone?j.clone():j;else if(k){e=b.totalWeight;const z=k.weight/e;F=1!==z?k.currentValue.scale?k.currentValue.scale(z):k.currentValue*z:k.currentValue,T&&(F.addToRef?F.addToRef(j,F):F+=j),K=1}for(let z=K;z<b.animations.length;z++){const K=b.animations[z],k=K.weight/e;k&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(k,F):F+=K.currentValue*k)}for(let z=0;z<b.additiveAnimations.length;z++){const K=b.additiveAnimations[z],e=K.weight;e&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(e,F):F+=K.currentValue*e)}}e[K]=F}e._lateAnimationHolders={}}K._registeredForLateAnimationBindings.reset()}}(this)},B.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((K,b)=>K.playOrder-b.playOrder))},B.prototype.beginWeightedAnimation=function(K,b,e){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,k=arguments.length>4?arguments[4]:void 0,j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,T=arguments.length>6?arguments[6]:void 0,F=arguments.length>7?arguments[7]:void 0,l=arguments.length>8?arguments[8]:void 0,Y=arguments.length>9?arguments[9]:void 0,A=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const X=this.beginAnimation(K,b,e,k,j,T,F,!1,l,Y,A);return X.weight=z,X},B.prototype.beginAnimation=function(K,b,e,z){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,j=arguments.length>5?arguments[5]:void 0,T=arguments.length>6?arguments[6]:void 0,F=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],l=arguments.length>8?arguments[8]:void 0,Y=arguments.length>9?arguments[9]:void 0,A=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(k<0){const K=b;b=e,e=K,k=-k}b>e&&(k=-k),F&&this.stopAnimation(K,void 0,l),T||(T=new X(this,K,b,e,z,k,j,void 0,Y,A));const t=!l||l(K);if(K.animations&&t&&T.appendAnimations(K,K.animations),K.getAnimatables){const A=K.getAnimatables();for(let K=0;K<A.length;K++)this.beginAnimation(A[K],b,e,z,k,j,T,F,l,Y)}return T.reset(),T},B.prototype.beginHierarchyAnimation=function(K,b,e,z,k){let j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,T=arguments.length>6?arguments[6]:void 0,F=arguments.length>7?arguments[7]:void 0,l=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],Y=arguments.length>9?arguments[9]:void 0,A=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const X=K.getDescendants(b),t=[];t.push(this.beginAnimation(K,e,z,k,j,T,F,l,Y,void 0,A));for(const U of X)t.push(this.beginAnimation(U,e,z,k,j,T,F,l,Y,void 0,A));return t},B.prototype.beginDirectAnimation=function(K,b,e,z,k){let j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(j<0){const K=e;e=z,z=K,j=-j}return e>z&&(j=-j),new X(this,K,e,z,k,j,arguments.length>6?arguments[6]:void 0,b,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},B.prototype.beginDirectHierarchyAnimation=function(K,b,e,z,k,j,T,F,l){let Y=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const A=K.getDescendants(b),X=[];X.push(this.beginDirectAnimation(K,e,z,k,j,T,F,l,Y));for(const t of A)X.push(this.beginDirectAnimation(t,e,z,k,j,T,F,l,Y));return X},B.prototype.getAnimatableByTarget=function(K){for(let b=0;b<this._activeAnimatables.length;b++)if(this._activeAnimatables[b].target===K)return this._activeAnimatables[b];return null},B.prototype.getAllAnimatablesByTarget=function(K){const b=[];for(let e=0;e<this._activeAnimatables.length;e++)this._activeAnimatables[e].target===K&&b.push(this._activeAnimatables[e]);return b},B.prototype.stopAnimation=function(K,b,e){const z=this.getAllAnimatablesByTarget(K);for(const k of z)k.stop(b,e)},B.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let K=0;K<this._activeAnimatables.length;K++)this._activeAnimatables[K].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const K of this.animationGroups)K.stop()});class D{getClassName(){return"TargetedAnimation"}serialize(){const K={};return K.animation=this.animation.serialize(),K.targetId=this.target.id,K}}class I{get mask(){return this._mask}set mask(K){this._mask!==K&&(this._mask=K,this.syncWithMask(!0))}syncWithMask(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||K){this._numActiveAnimatables=0;for(let K=0;K<this._animatables.length;++K){const b=this._animatables[K];!this.mask||this.mask.disabled||this.mask.retainsTarget(b.target.name)?(this._numActiveAnimatables++,b.paused&&b.restart()):b.paused||b.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let K=0;K<this._animatables.length;++K){const b=this._animatables[K];this.mask.retainsTarget(b.target.name)||(b.stop(),this._animatables.splice(K,1),--K)}for(let K=0;K<this._targetedAnimations.length;K++){const b=this._targetedAnimations[K];this.mask.retainsTarget(b.target.name)||(this._targetedAnimations.splice(K,1),--K)}}}get from(){return this._from}set from(K){if(this._from!==K){this._from=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].fromFrame=this._from}}}get to(){return this._to}set to(K){if(this._to!==K){this._to=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(K){if(this._speedRatio!==K){this._speedRatio=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(K){if(this._loopAnimation!==K){this._loopAnimation=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(K){if(this._isAdditive!==K){this._isAdditive=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(K){this._weight!==K&&(this._weight=K,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(K){if(this._playOrder!==K&&(this._playOrder=K,this._animatables.length>0)){for(let K=0;K<this._animatables.length;K++)this._animatables[K].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(K){if(this._enableBlending!==K&&(this._enableBlending=K,null!==K))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.enableBlending=K}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(K){if(this._blendingSpeed!==K&&(this._blendingSpeed=K,null!==K))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.blendingSpeed=K}getLength(K,b){K=K??this._from;return((b=b??this._to)-K)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(K){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=arguments.length>2&&void 0!==arguments[2]&&arguments[2],z=arguments.length>3?arguments[3]:void 0;if(0===K.length)return null;z=z??K[0].weight;let k=Number.MAX_VALUE,j=-Number.MAX_VALUE;if(e)for(const F of K)F.from<k&&(k=F.from),F.to>j&&(j=F.to);const T=new I(K[0].name+"_merged",K[0]._scene,z);for(const F of K){e&&F.normalize(k,j);for(const K of F.targetedAnimations)T.addTargetedAnimation(K.animation,K.target);b&&F.dispose()}return T}constructor(K){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=K,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new k.d,this.onAnimationLoopObservable=new k.d,this.onAnimationGroupLoopObservable=new k.d,this.onAnimationGroupEndObservable=new k.d,this.onAnimationGroupPauseObservable=new k.d,this.onAnimationGroupPlayObservable=new k.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=b||j.b.LastCreatedScene,this._weight=e,this._playOrder=z,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(K,b){const e=new D;e.animation=K,e.target=b;const z=K.getKeys();return this._from>z[0].frame&&(this._from=z[0].frame),this._to<z[z.length-1].frame&&(this._to=z[z.length-1].frame),null!==this._enableBlending&&(K.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(K.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(e),this._shouldStart=!0,e}removeTargetedAnimation(K){for(let b=this._targetedAnimations.length-1;b>-1;b--){this._targetedAnimations[b].animation===K&&this._targetedAnimations.splice(b,1)}}normalize(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==K&&(K=this._from),null==b&&(b=this._to);for(let e=0;e<this._targetedAnimations.length;e++){const z=this._targetedAnimations[e].animation.getKeys(),k=z[0],j=z[z.length-1];if(k.frame>K){const b={frame:K,value:k.value,inTangent:k.inTangent,outTangent:k.outTangent,interpolation:k.interpolation};z.splice(0,0,b)}if(j.frame<b){const K={frame:b,value:j.value,inTangent:j.inTangent,outTangent:j.outTangent,interpolation:j.interpolation};z.push(K)}}return this._from=K,this._to=b,this}_processLoop(K,b,e){K.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(b),this._animationLoopFlags[e]||(this._animationLoopFlags[e]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2?arguments[2]:void 0,z=arguments.length>3?arguments[3]:void 0,k=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=K,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let j=0;j<this._targetedAnimations.length;j++){const T=this._targetedAnimations[j],F=this._scene.beginDirectAnimation(T.target,[T.animation],void 0!==e?e:this._from,void 0!==z?z:this._to,K,b,void 0,void 0,void 0!==k?k:this._isAdditive);F.weight=this._weight,F.playOrder=this._playOrder,F.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(T),this._checkAnimationGroupEnded(F)},this._processLoop(F,T,j),this._animatables.push(F)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=b,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let K=0;K<this._animatables.length;K++){this._animatables[K].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(K){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==K&&(this.loopAnimation=K),this.restart()):(this.stop(),this.start(K,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].reset()}return this}restart(){if(!this._isStarted)return this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const b=this._animatables.slice();for(let z=0;z<b.length;z++)b[z].stop(void 0,void 0,!0,K);let e=0;for(let z=0;z<this._scene._activeAnimatables.length;z++){const b=this._scene._activeAnimatables[z];b._runtimeAnimations.length>0?this._scene._activeAnimatables[e++]=b:K&&this._checkAnimationGroupEnded(b,K)}return this._scene._activeAnimatables.length=e,this._isStarted=!1,this}setWeightForAllAnimatables(K){for(let b=0;b<this._animatables.length;b++){this._animatables[b].weight=K}return this}syncAllAnimationsWith(K){for(let b=0;b<this._animatables.length;b++){this._animatables[b].syncWith(K)}return this}goToFrame(K){if(!this._isStarted)return this;for(let b=0;b<this._animatables.length;b++){this._animatables[b].goToFrame(K)}return this}getCurrentFrame(){var K;return(null===(K=this.animatables[0])||void 0===K?void 0:K.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const K=this._scene.animationGroups.indexOf(this);if(K>-1&&this._scene.animationGroups.splice(K,1),this._parentContainer){const K=this._parentContainer.animationGroups.indexOf(this);K>-1&&this._parentContainer.animationGroups.splice(K,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(K){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const e=this._animatables.indexOf(K);e>-1&&this._animatables.splice(e,1),0===this._animatables.length&&(this._isStarted=!1,b||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(K,b){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const z=new I(K||this.name,this._scene,this._weight,this._playOrder);z._from=this.from,z._to=this.to,z._speedRatio=this.speedRatio,z._loopAnimation=this.loopAnimation,z._isAdditive=this.isAdditive,z._enableBlending=this.enableBlending,z._blendingSpeed=this.blendingSpeed,z.metadata=this.metadata,z.mask=this.mask;for(const k of this._targetedAnimations)z.addTargetedAnimation(e?k.animation.clone():k.animation,b?b(k.target):k.target);return z}serialize(){const K={};K.name=this.name,K.from=this.from,K.to=this.to,K.speedRatio=this.speedRatio,K.loopAnimation=this.loopAnimation,K.isAdditive=this.isAdditive,K.weight=this.weight,K.playOrder=this.playOrder,K.enableBlending=this.enableBlending,K.blendingSpeed=this.blendingSpeed,K.targetedAnimations=[];for(let b=0;b<this.targetedAnimations.length;b++){const e=this.targetedAnimations[b];K.targetedAnimations[b]=e.serialize()}return T.d&&T.d.HasTags(this)&&(K.tags=T.d.GetTags(this)),this.metadata&&(K.metadata=this.metadata),K}static Parse(K,b){const e=new I(K.name,b,K.weight,K.playOrder);for(let k=0;k<K.targetedAnimations.length;k++){const j=K.targetedAnimations[k],T=z.c.Parse(j.animation),F=j.targetId;if("influence"===j.animation.property){const K=b.getMorphTargetById(F);K&&e.addTargetedAnimation(T,K)}else{const K=b.getNodeById(F);null!=K&&e.addTargetedAnimation(T,K)}}return T.d&&T.d.AddTagsTo(e,K.tags),null!==K.from&&null!==K.to&&e.normalize(K.from,K.to),void 0!==K.speedRatio&&(e._speedRatio=K.speedRatio),void 0!==K.loopAnimation&&(e._loopAnimation=K.loopAnimation),void 0!==K.isAdditive&&(e._isAdditive=K.isAdditive),void 0!==K.weight&&(e._weight=K.weight),void 0!==K.playOrder&&(e._playOrder=K.playOrder),void 0!==K.enableBlending&&(e._enableBlending=K.enableBlending),void 0!==K.blendingSpeed&&(e._blendingSpeed=K.blendingSpeed),void 0!==K.metadata&&(e.metadata=K.metadata),e}static MakeAnimationAdditive(K,b,e){let k;k="object"===typeof b?b:{referenceFrame:b,range:e,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let j=K;k.cloneOriginalAnimationGroup&&(j=K.clone(k.clonedAnimationGroupName||j.name));const T=j.targetedAnimations;for(let F=0;F<T.length;F++){const K=T[F];K.animation=z.c.MakeAnimationAdditive(K.animation,k)}if(j.isAdditive=!0,k.clipKeys){let K=Number.MAX_VALUE,b=-Number.MAX_VALUE;const e=j.targetedAnimations;for(let z=0;z<e.length;z++){const k=e[z].animation.getKeys();K>k[0].frame&&(K=k[0].frame),b<k[k.length-1].frame&&(b=k[k.length-1].frame)}j._from=K,j._to=b}return j}static ClipKeys(K,b,e,z,k){const j=K.clone(z||K.name);return I.ClipKeysInPlace(j,b,e,k)}static ClipKeysInPlace(K,b,e,z){return I.ClipInPlace(K,b,e,z,!1)}static ClipFrames(K,b,e,z,k){const j=K.clone(z||K.name);return I.ClipFramesInPlace(j,b,e,k)}static ClipFramesInPlace(K,b,e,z){return I.ClipInPlace(K,b,e,z,!0)}static ClipInPlace(K,b,e,z){let k=arguments.length>4&&void 0!==arguments[4]&&arguments[4],j=Number.MAX_VALUE,T=-Number.MAX_VALUE;const F=K.targetedAnimations;for(let l=0;l<F.length;l++){const K=F[l],Y=z?K.animation:K.animation.clone();k&&(Y.createKeyForFrame(b),Y.createKeyForFrame(e));const A=Y.getKeys(),X=[];let t=Number.MAX_VALUE;for(let z=0;z<A.length;z++){const K=A[z];if(!k&&z>=b&&z<=e||k&&K.frame>=b&&K.frame<=e){const b={frame:K.frame,value:K.value.clone?K.value.clone():K.value,inTangent:K.inTangent,outTangent:K.outTangent,interpolation:K.interpolation,lockedTangent:K.lockedTangent};t===Number.MAX_VALUE&&(t=b.frame),b.frame-=t,X.push(b)}}0!==X.length?(j>X[0].frame&&(j=X[0].frame),T<X[X.length-1].frame&&(T=X[X.length-1].frame),Y.setKeys(X,!0),K.animation=Y):(F.splice(l,1),l--)}return K._from=j,K._to=T,K}getClassName(){return"AnimationGroup"}toString(K){let b="Name: "+this.name;return b+=", type: "+this.getClassName(),K&&(b+=", from: "+this._from,b+=", to: "+this._to,b+=", isStarted: "+this._isStarted,b+=", speedRatio: "+this._speedRatio,b+=", targetedAnimations length: "+this._targetedAnimations.length,b+=", animatables length: "+this._animatables),b}}}}]);