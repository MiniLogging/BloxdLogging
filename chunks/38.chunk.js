"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13556:(y,g,f)=>{f.r(g),f.d(g,{AnimationGroup:()=>R,TargetedAnimation:()=>B});var p=f(12241),S=f(10723),k=f(10761),i=f(11046),H=f(12235),U=f(11054);class l{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(y,g,f,S){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=g,this._target=y,this._scene=f,this._host=S,this._activeTargets=[],g._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===p.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=U.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const y={frame:0,value:this._minValue};this._keys.splice(0,0,y)}if(this._target instanceof Array){let y=0;for(const g of this._target)this._preparePath(g,y),this._getOriginalValues(y),y++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const k=g.getEvents();k&&k.length>0&&k.forEach((y=>{this._events.push(y._clone())})),this._enableBlending=y&&y.animationPropertiesOverride?y.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(y){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const f=this._animation.targetPropertyPath;if(f.length>1){let p=y;for(let y=0;y<f.length-1;y++){const g=f[y];if(p=p[g],void 0===p)throw new Error(`Invalid property (${g}) in property path (${f.join(".")})`)}this._targetPath=f[f.length-1],this._activeTargets[g]=p}else this._targetPath=f[0],this._activeTargets[g]=y;if(void 0===this._activeTargets[g][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${f.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let y=0;for(const g of this._target)void 0!==this._originalValue[y]&&this._setValue(g,this._activeTargets[y],this._originalValue[y],-1,y),y++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let y=0;y<this._events.length;y++)this._events[y].isDone=!1}isStopped(){return this._stopped}dispose(){const y=this._animation.runtimeAnimations.indexOf(this);y>-1&&this._animation.runtimeAnimations.splice(y,1)}setValue(y,g){if(this._targetIsArray)for(let f=0;f<this._target.length;f++){const p=this._target[f];this._setValue(p,this._activeTargets[f],y,g,f)}else this._setValue(this._target,this._directTarget,y,g,0)}_getOriginalValues(){let y,g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const f=this._activeTargets[g];y=f.getLocalMatrix&&"_matrix"===this._targetPath?f.getLocalMatrix():f[this._targetPath],y&&y.clone?this._originalValue[g]=y.clone():this._originalValue[g]=y}_registerTargetForLateAnimationBinding(y,g){const f=y.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(f),f._lateAnimationHolders||(f._lateAnimationHolders={}),f._lateAnimationHolders[y.targetPath]||(f._lateAnimationHolders[y.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:g}),y.isAdditive?(f._lateAnimationHolders[y.targetPath].additiveAnimations.push(y),f._lateAnimationHolders[y.targetPath].totalAdditiveWeight+=y.weight):(f._lateAnimationHolders[y.targetPath].animations.push(y),f._lateAnimationHolders[y.targetPath].totalWeight+=y.weight)}_setValue(y,g,f,S,k){if(this._currentActiveTarget=g,this._weight=S,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const y=g[this._targetPath];y.clone?this._originalBlendValue=y.clone():this._originalBlendValue=y}this._originalBlendValue.m?p.c.AllowMatrixDecomposeForInterpolation?this._currentValue?U.c.DecomposeLerpToRef(this._originalBlendValue,f,this._blendingFactor,this._currentValue):this._currentValue=U.c.DecomposeLerp(this._originalBlendValue,f,this._blendingFactor):this._currentValue?U.c.LerpToRef(this._originalBlendValue,f,this._blendingFactor,this._currentValue):this._currentValue=U.c.Lerp(this._originalBlendValue,f,this._blendingFactor):this._currentValue=p.c._UniversalLerp(this._originalBlendValue,f,this._blendingFactor);const S=y&&y.animationPropertiesOverride?y.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=S}else this._currentValue?this._currentValue.p?this._currentValue.p(f):this._currentValue=f:null!==f&&void 0!==f&&f.clone?this._currentValue=f.clone():this._currentValue=f;-1!==S?this._registerTargetForLateAnimationBinding(this,this._originalValue[k]):this._animationState.loopMode===p.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[k],g[this._targetPath]):g[this._targetPath]=this._originalValue[k]+this._currentValue:g[this._targetPath]=this._currentValue,y.Vg&&y.Vg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(y){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const f=this._animation.getKeys();y<f[0].frame?y=f[0].frame:y>f[f.length-1].frame&&(y=f[f.length-1].frame);const p=this._events;if(p.length)for(let k=0;k<p.length;k++)p[k].onlyOnce||(p[k].isDone=p[k].frame<y);this._currentFrame=y;const S=this._animation._interpolate(y,this._animationState);this.setValue(S,g)}_prepareForSpeedRatioChange(y){const g=this._previousElapsedTime*(this._animation.framePerSecond*y)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-g}animate(y,g,f,S,k){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const H=this._animation,U=H.targetPropertyPath;if(!U||U.length<1)return this._stopped=!0,!1;let l=!0;(g<this._minFrame||g>this._maxFrame)&&(g=this._minFrame),(f<this._minFrame||f>this._maxFrame)&&(f=this._maxFrame);const c=f-g;let Z,C=y*(H.framePerSecond*k)/1e3+this._absoluteFrameOffset,q=0,W=!1;const j=S&&this._animationState.loopMode===p.c.ANIMATIONLOOPMODE_YOYO;if(j){const y=(C-g)/c,f=Math.sin(y*Math.PI);C=Math.abs(f)*c+g;const p=f>=0?1:-1;this._yoyoDirection!==p&&(W=!0),this._yoyoDirection=p}if(this._previousElapsedTime=y,this._previousAbsoluteFrame=C,!S&&f>=g&&(C>=c&&k>0||C<=0&&k<0))l=!1,q=H._getKeyValue(this._maxValue);else if(!S&&g>=f&&(C<=c&&k<0||C>=0&&k>0))l=!1,q=H._getKeyValue(this._minValue);else if(this._animationState.loopMode!==p.c.ANIMATIONLOOPMODE_CYCLE){const y=f.toString()+g.toString();if(!this._offsetsCache[y]){this._animationState.repeatCount=0,this._animationState.loopMode=p.c.ANIMATIONLOOPMODE_CYCLE;const S=H._interpolate(g,this._animationState),k=H._interpolate(f,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),H.dataType){case p.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[y]=k-S;break;case p.c.ANIMATIONTYPE_QUATERNION:case p.c.ANIMATIONTYPE_VECTOR3:case p.c.ANIMATIONTYPE_VECTOR2:case p.c.ANIMATIONTYPE_SIZE:case p.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[y]=k.ed(S)}this._highLimitsCache[y]=k}q=this._highLimitsCache[y],Z=this._offsetsCache[y]}if(void 0===Z)switch(H.dataType){case p.c.ANIMATIONTYPE_FLOAT:Z=0;break;case p.c.ANIMATIONTYPE_QUATERNION:Z=p.g;break;case p.c.ANIMATIONTYPE_VECTOR3:Z=p.p;break;case p.c.ANIMATIONTYPE_VECTOR2:Z=p.l;break;case p.c.ANIMATIONTYPE_SIZE:Z=p.k;break;case p.c.ANIMATIONTYPE_COLOR3:Z=p.d;break;case p.c.ANIMATIONTYPE_COLOR4:Z=p.e}let P;if(this._host&&this._host.syncRoot){const y=this._host.syncRoot;P=g+c*((y.masterFrame-y.fromFrame)/(y.toFrame-y.fromFrame))}else P=C>0&&g>f||C<0&&g<f?l&&0!==c?f+C%c:g:l&&0!==c?g+C%c:f;const B=this._events;if(!j&&(k>0&&this.currentFrame>P||k<0&&this.currentFrame<P)||j&&W){this._onLoop();for(let y=0;y<B.length;y++)B[y].onlyOnce||(B[y].isDone=!1);this._animationState.key=k>0?0:H.getKeys().length-1}this._currentFrame=P,this._animationState.repeatCount=0===c?0:C/c|0,this._animationState.highLimitValue=q,this._animationState.offsetValue=Z;const R=H._interpolate(P,this._animationState);if(this.setValue(R,i),B.length)for(let p=0;p<B.length;p++)if(c>=0&&P>=B[p].frame&&B[p].frame>=g||c<0&&P<=B[p].frame&&B[p].frame<=g){const y=B[p];y.isDone||(y.onlyOnce&&(B.splice(p,1),p--),y.isDone=!0,y.action(P))}return l||(this._stopped=!0),l}}var c=f(10747);class Z{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(y){this._weight=-1!==y?Math.min(Math.max(y,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(y){for(let g=0;g<this._runtimeAnimations.length;g++){this._runtimeAnimations[g]._prepareForSpeedRatioChange(y)}this._speedRatio=y,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(y,g){let f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,k=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,H=arguments.length>6?arguments[6]:void 0,U=arguments.length>7?arguments[7]:void 0,l=arguments.length>8?arguments[8]:void 0,c=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Z=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=g,this.fromFrame=f,this.toFrame=p,this.loopAnimation=k,this.onAnimationEnd=H,this.onAnimationLoop=l,this.isAdditive=c,this.playOrder=Z,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Pd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new S.d,this.onAnimationLoopObservable=new S.d,this._scene=y,U&&this.appendAnimations(g,U),this._speedRatio=i,y._activeAnimatables.push(this)}syncWith(y){if(this._syncRoot=y,y){const y=this._scene._activeAnimatables.indexOf(this);y>-1&&(this._scene._activeAnimatables.splice(y,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(y,g){for(let f=0;f<g.length;f++){const p=g[f],S=new l(y,p,this._scene,this);S._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(S)}}getAnimationByTargetProperty(y){const g=this._runtimeAnimations;for(let f=0;f<g.length;f++)if(g[f].animation.targetProperty===y)return g[f].animation;return null}getRuntimeAnimationByTargetProperty(y){const g=this._runtimeAnimations;for(let f=0;f<g.length;f++)if(g[f].animation.targetProperty===y)return g[f];return null}reset(){const y=this._runtimeAnimations;for(let g=0;g<y.length;g++)y[g].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(y){const g=this._runtimeAnimations;for(let f=0;f<g.length;f++)g[f].animation.enableBlending=!0,g[f].animation.blendingSpeed=y}disableBlending(){const y=this._runtimeAnimations;for(let g=0;g<y.length;g++)y[g].animation.enableBlending=!1}goToFrame(y){const g=this._runtimeAnimations;if(g[0]){const f=g[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??g[0].currentFrame;const p=0===this.speedRatio?0:(y-this._frameToSyncFromJump)/f*1e3/this.speedRatio;this._manualJumpDelay=-p}for(let f=0;f<g.length;f++)g[f].goToFrame(y,this._weight);this._goToFrame=y}get paused(){return this.Pd}pause(){this.Pd||(this.Pd=!0)}restart(){this.Pd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(y,g){let f=arguments.length>2&&void 0!==arguments[2]&&arguments[2],p=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(y||g){const S=this._scene._activeAnimatables.indexOf(this);if(S>-1){const k=this._runtimeAnimations;for(let f=k.length-1;f>=0;f--){const p=k[f];y&&p.animation.name!=y||(g&&!g(p.target)||(p.dispose(),k.splice(f,1)))}0==k.length&&(f||this._scene._activeAnimatables.splice(S,1),p||this._raiseOnAnimationEnd())}}else{const y=this._scene._activeAnimatables.indexOf(this);if(y>-1){f||this._scene._activeAnimatables.splice(y,1);const g=this._runtimeAnimations;for(let y=0;y<g.length;y++)g[y].dispose();this._runtimeAnimations.length=0,p||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((y=>{this.onAnimationEndObservable.add((()=>{y(this)}),void 0,void 0,this,!0)}))}_animate(y){if(this.Pd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=y),!0;if(null===this._localDelayOffset?(this._localDelayOffset=y,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=y-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let g=!1;const f=this._runtimeAnimations;let p;for(p=0;p<f.length;p++){const S=f[p].animate(y-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);g=g||S}if(this.animationStarted=g,!g){if(this.disposeOnEnd)for(p=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(p,1),p=0;p<f.length;p++)f[p].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return g}}function C(y){if(0===y.totalWeight&&0===y.totalAdditiveWeight)return y.originalValue;let g=1;const f=U.j.o[0],p=U.j.o[1],S=U.j.Quaternion[0];let k=0;const i=y.animations[0],H=y.originalValue;let l=1,c=!1;if(y.totalWeight<1)l=1-y.totalWeight,H.decompose(p,S,f);else{if(k=1,g=y.totalWeight,l=i.weight/g,1==l){if(!y.totalAdditiveWeight)return i.currentValue;c=!0}i.currentValue.decompose(p,S,f)}if(!c){p.scaleInPlace(l),f.scaleInPlace(l),S.scaleInPlace(l);for(let i=k;i<y.animations.length;i++){const k=y.animations[i];if(0===k.weight)continue;l=k.weight/g;const H=U.j.o[2],c=U.j.o[3],Z=U.j.Quaternion[1];k.currentValue.decompose(c,Z,H),c.scaleAndAddToRef(l,p),Z.scaleAndAddToRef(U.g.Dot(S,Z)>0?l:-l,S),H.scaleAndAddToRef(l,f)}S.normalize()}for(let C=0;C<y.additiveAnimations.length;C++){const g=y.additiveAnimations[C];if(0===g.weight)continue;const k=U.j.o[2],i=U.j.o[3],H=U.j.Quaternion[1];g.currentValue.decompose(i,H,k),i.multiplyToRef(p,i),U.m.LerpToRef(p,i,g.weight,p),S.multiplyToRef(H,H),U.g.SlerpToRef(S,H,g.weight,S),k.scaleAndAddToRef(g.weight,f)}const Z=i?i._animationState.workValue:U.j.Matrix[0].clone();return U.c.ComposeToRef(p,S,f,Z),Z}function q(y,g){if(0===y.totalWeight&&0===y.totalAdditiveWeight)return g;const f=y.animations[0],p=y.originalValue;let S=g;if(0===y.totalWeight&&y.totalAdditiveWeight>0)S.p(p);else if(1===y.animations.length){if(U.g.SlerpToRef(p,f.currentValue,Math.min(1,y.totalWeight),S),0===y.totalAdditiveWeight)return S}else if(y.animations.length>1){let f,k,i=1;if(y.totalWeight<1){const g=1-y.totalWeight;f=[],k=[],f.push(p),k.push(g)}else{if(2===y.animations.length&&(U.g.SlerpToRef(y.animations[0].currentValue,y.animations[1].currentValue,y.animations[1].weight/y.totalWeight,g),0===y.totalAdditiveWeight))return g;f=[],k=[],i=y.totalWeight}for(let g=0;g<y.animations.length;g++){const p=y.animations[g];f.push(p.currentValue),k.push(p.weight/i)}let H=0;for(let y=0;y<f.length;)y?(H+=k[y],U.g.SlerpToRef(S,f[y],k[y]/H,S),y++):(U.g.SlerpToRef(f[y],f[y+1],k[y+1]/(k[y]+k[y+1]),g),S=g,H=k[y]+k[y+1],y+=2)}for(let k=0;k<y.additiveAnimations.length;k++){const g=y.additiveAnimations[k];0!==g.weight&&(S.multiplyToRef(g.currentValue,U.j.Quaternion[0]),U.g.SlerpToRef(S,U.j.Quaternion[0],g.weight,S))}return S}var W,j,P=f(11038);W=P.e,(j=H.d)&&(j.prototype.copyAnimationRange=function(y,g,f){let S=arguments.length>3&&void 0!==arguments[3]&&arguments[3],k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new p.c(this.name,"_matrix",y.animations[0].framePerSecond,p.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const i=y.animations[0].getRange(g);if(!i)return!1;const H=i.from,U=i.to,l=y.animations[0].getKeys(),c=y.length,Z=y.getParent(),C=this.getParent(),q=S&&Z&&c&&this.length&&c!==this.length,W=q&&C&&Z?C.length/Z.length:1,j=S&&!C&&k&&(1!==k.x||1!==k.y||1!==k.z),P=this.animations[0].getKeys();let B,R,G;for(let p=0,z=l.length;p<z;p++)B=l[p],B.frame>=H&&B.frame<=U&&(S?(G=B.value.clone(),q?(R=G.getTranslation(),G.setTranslation(R.scaleInPlace(W))):j&&k?(R=G.getTranslation(),G.setTranslation(R.multiplyInPlace(k))):G=B.value):G=B.value,P.push({frame:B.frame+f,value:G}));return this.animations[0].createRange(g,H+f,U+f),!0}),W&&(W.prototype._animate=function(y){if(!this.animationsEnabled)return;const g=c.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=g}this.deltaTime=void 0!==y?y:this.useConstantAnimationDeltaTime?16:(g-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=g;const f=this._activeAnimatables;if(0===f.length)return;this._animationTime+=this.deltaTime;const S=this._animationTime;for(let p=0;p<f.length;p++){const y=f[p];!y._animate(S)&&y.disposeOnEnd&&p--}!function(y){if(y._registeredForLateAnimationBindings.length){for(let g=0;g<y._registeredForLateAnimationBindings.length;g++){const f=y._registeredForLateAnimationBindings.data[g];for(const y in f._lateAnimationHolders){const g=f._lateAnimationHolders[y],S=g.animations[0],k=g.originalValue;if(void 0===k||null===k)continue;const i=p.c.AllowMatrixDecomposeForInterpolation&&k.m;let H=f[y];if(i)H=C(g);else if(void 0!==k.w)H=q(g,H||U.g.Identity());else{let y=0,f=1;const i=S&&S._animationState.loopMode===p.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(g.totalWeight<1)H=i?k.clone?k.clone():k:S&&k.scale?k.scale(1-g.totalWeight):S?k*(1-g.totalWeight):k.clone?k.clone():k;else if(S){f=g.totalWeight;const p=S.weight/f;H=1!==p?S.currentValue.scale?S.currentValue.scale(p):S.currentValue*p:S.currentValue,i&&(H.addToRef?H.addToRef(k,H):H+=k),y=1}for(let p=y;p<g.animations.length;p++){const y=g.animations[p],S=y.weight/f;S&&(y.currentValue.scaleAndAddToRef?y.currentValue.scaleAndAddToRef(S,H):H+=y.currentValue*S)}for(let p=0;p<g.additiveAnimations.length;p++){const y=g.additiveAnimations[p],f=y.weight;f&&(y.currentValue.scaleAndAddToRef?y.currentValue.scaleAndAddToRef(f,H):H+=y.currentValue*f)}}f[y]=H}f._lateAnimationHolders={}}y._registeredForLateAnimationBindings.reset()}}(this)},W.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((y,g)=>y.playOrder-g.playOrder))},W.prototype.beginWeightedAnimation=function(y,g,f){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,S=arguments.length>4?arguments[4]:void 0,k=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,H=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,l=arguments.length>9?arguments[9]:void 0,c=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const Z=this.beginAnimation(y,g,f,S,k,i,H,!1,U,l,c);return Z.weight=p,Z},W.prototype.beginAnimation=function(y,g,f,p){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,k=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,H=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],U=arguments.length>8?arguments[8]:void 0,l=arguments.length>9?arguments[9]:void 0,c=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(S<0){const y=g;g=f,f=y,S=-S}g>f&&(S=-S),H&&this.stopAnimation(y,void 0,U),i||(i=new Z(this,y,g,f,p,S,k,void 0,l,c));const C=!U||U(y);if(y.animations&&C&&i.appendAnimations(y,y.animations),y.getAnimatables){const c=y.getAnimatables();for(let y=0;y<c.length;y++)this.beginAnimation(c[y],g,f,p,S,k,i,H,U,l)}return i.reset(),i},W.prototype.beginHierarchyAnimation=function(y,g,f,p,S){let k=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,H=arguments.length>7?arguments[7]:void 0,U=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],l=arguments.length>9?arguments[9]:void 0,c=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const Z=y.getDescendants(g),C=[];C.push(this.beginAnimation(y,f,p,S,k,i,H,U,l,void 0,c));for(const q of Z)C.push(this.beginAnimation(q,f,p,S,k,i,H,U,l,void 0,c));return C},W.prototype.beginDirectAnimation=function(y,g,f,p,S){let k=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(k<0){const y=f;f=p,p=y,k=-k}return f>p&&(k=-k),new Z(this,y,f,p,S,k,arguments.length>6?arguments[6]:void 0,g,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},W.prototype.beginDirectHierarchyAnimation=function(y,g,f,p,S,k,i,H,U){let l=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const c=y.getDescendants(g),Z=[];Z.push(this.beginDirectAnimation(y,f,p,S,k,i,H,U,l));for(const C of c)Z.push(this.beginDirectAnimation(C,f,p,S,k,i,H,U,l));return Z},W.prototype.getAnimatableByTarget=function(y){for(let g=0;g<this._activeAnimatables.length;g++)if(this._activeAnimatables[g].target===y)return this._activeAnimatables[g];return null},W.prototype.getAllAnimatablesByTarget=function(y){const g=[];for(let f=0;f<this._activeAnimatables.length;f++)this._activeAnimatables[f].target===y&&g.push(this._activeAnimatables[f]);return g},W.prototype.stopAnimation=function(y,g,f){const p=this.getAllAnimatablesByTarget(y);for(const S of p)S.stop(g,f)},W.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let y=0;y<this._activeAnimatables.length;y++)this._activeAnimatables[y].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const y of this.animationGroups)y.stop()});class B{getClassName(){return"TargetedAnimation"}serialize(){const y={};return y.animation=this.animation.serialize(),y.targetId=this.target.id,y}}class R{get mask(){return this._mask}set mask(y){this._mask!==y&&(this._mask=y,this.syncWithMask(!0))}syncWithMask(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||y){this._numActiveAnimatables=0;for(let y=0;y<this._animatables.length;++y){const g=this._animatables[y];!this.mask||this.mask.disabled||this.mask.retainsTarget(g.target.name)?(this._numActiveAnimatables++,g.paused&&g.restart()):g.paused||g.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let y=0;y<this._animatables.length;++y){const g=this._animatables[y];this.mask.retainsTarget(g.target.name)||(g.stop(),this._animatables.splice(y,1),--y)}for(let y=0;y<this._targetedAnimations.length;y++){const g=this._targetedAnimations[y];this.mask.retainsTarget(g.target.name)||(this._targetedAnimations.splice(y,1),--y)}}}get from(){return this._from}set from(y){if(this._from!==y){this._from=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].fromFrame=this._from}}}get to(){return this._to}set to(y){if(this._to!==y){this._to=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(y){if(this._speedRatio!==y){this._speedRatio=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(y){if(this._loopAnimation!==y){this._loopAnimation=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(y){if(this._isAdditive!==y){this._isAdditive=y;for(let y=0;y<this._animatables.length;y++){this._animatables[y].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(y){this._weight!==y&&(this._weight=y,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(y){if(this._playOrder!==y&&(this._playOrder=y,this._animatables.length>0)){for(let y=0;y<this._animatables.length;y++)this._animatables[y].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(y){if(this._enableBlending!==y&&(this._enableBlending=y,null!==y))for(let g=0;g<this._targetedAnimations.length;++g)this._targetedAnimations[g].animation.enableBlending=y}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(y){if(this._blendingSpeed!==y&&(this._blendingSpeed=y,null!==y))for(let g=0;g<this._targetedAnimations.length;++g)this._targetedAnimations[g].animation.blendingSpeed=y}getLength(y,g){y=y??this._from;return((g=g??this._to)-y)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(y){let g=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],f=arguments.length>2&&void 0!==arguments[2]&&arguments[2],p=arguments.length>3?arguments[3]:void 0;if(0===y.length)return null;p=p??y[0].weight;let S=Number.MAX_VALUE,k=-Number.MAX_VALUE;if(f)for(const H of y)H.from<S&&(S=H.from),H.to>k&&(k=H.to);const i=new R(y[0].name+"_merged",y[0]._scene,p);for(const H of y){f&&H.normalize(S,k);for(const y of H.targetedAnimations)i.addTargetedAnimation(y.animation,y.target);g&&H.dispose()}return i}constructor(y){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=y,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new S.d,this.onAnimationLoopObservable=new S.d,this.onAnimationGroupLoopObservable=new S.d,this.onAnimationGroupEndObservable=new S.d,this.onAnimationGroupPauseObservable=new S.d,this.onAnimationGroupPlayObservable=new S.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=g||k.d.LastCreatedScene,this._weight=f,this._playOrder=p,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(y,g){const f=new B;f.animation=y,f.target=g;const p=y.getKeys();return this._from>p[0].frame&&(this._from=p[0].frame),this._to<p[p.length-1].frame&&(this._to=p[p.length-1].frame),null!==this._enableBlending&&(y.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(y.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(f),this._shouldStart=!0,f}removeTargetedAnimation(y){for(let g=this._targetedAnimations.length-1;g>-1;g--){this._targetedAnimations[g].animation===y&&this._targetedAnimations.splice(g,1)}}normalize(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==y&&(y=this._from),null==g&&(g=this._to);for(let f=0;f<this._targetedAnimations.length;f++){const p=this._targetedAnimations[f].animation.getKeys(),S=p[0],k=p[p.length-1];if(S.frame>y){const g={frame:y,value:S.value,inTangent:S.inTangent,outTangent:S.outTangent,interpolation:S.interpolation};p.splice(0,0,g)}if(k.frame<g){const y={frame:g,value:k.value,inTangent:k.inTangent,outTangent:k.outTangent,interpolation:k.interpolation};p.push(y)}}return this._from=y,this._to=g,this}_processLoop(y,g,f){y.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(g),this._animationLoopFlags[f]||(this._animationLoopFlags[f]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0],g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,f=arguments.length>2?arguments[2]:void 0,p=arguments.length>3?arguments[3]:void 0,S=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=y,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let k=0;k<this._targetedAnimations.length;k++){const i=this._targetedAnimations[k],H=this._scene.beginDirectAnimation(i.target,[i.animation],void 0!==f?f:this._from,void 0!==p?p:this._to,y,g,void 0,void 0,void 0!==S?S:this._isAdditive);H.weight=this._weight,H.playOrder=this._playOrder,H.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(i),this._checkAnimationGroupEnded(H)},this._processLoop(H,i,k),this._animatables.push(H)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=g,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let y=0;y<this._animatables.length;y++){this._animatables[y].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(y){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==y&&(this.loopAnimation=y),this.restart()):(this.stop(),this.start(y,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let y=0;y<this._animatables.length;y++){this._animatables[y].reset()}return this}restart(){if(!this._isStarted)return this;for(let y=0;y<this._animatables.length;y++){this._animatables[y].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const g=this._animatables.slice();for(let p=0;p<g.length;p++)g[p].stop(void 0,void 0,!0,y);let f=0;for(let p=0;p<this._scene._activeAnimatables.length;p++){const g=this._scene._activeAnimatables[p];g._runtimeAnimations.length>0?this._scene._activeAnimatables[f++]=g:y&&this._checkAnimationGroupEnded(g,y)}return this._scene._activeAnimatables.length=f,this._isStarted=!1,this}setWeightForAllAnimatables(y){for(let g=0;g<this._animatables.length;g++){this._animatables[g].weight=y}return this}syncAllAnimationsWith(y){for(let g=0;g<this._animatables.length;g++){this._animatables[g].syncWith(y)}return this}goToFrame(y){if(!this._isStarted)return this;for(let g=0;g<this._animatables.length;g++){this._animatables[g].goToFrame(y)}return this}getCurrentFrame(){var y;return(null===(y=this.animatables[0])||void 0===y?void 0:y.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const y=this._scene.animationGroups.indexOf(this);if(y>-1&&this._scene.animationGroups.splice(y,1),this._parentContainer){const y=this._parentContainer.animationGroups.indexOf(this);y>-1&&this._parentContainer.animationGroups.splice(y,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(y){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const f=this._animatables.indexOf(y);f>-1&&this._animatables.splice(f,1),0===this._animatables.length&&(this._isStarted=!1,g||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(y,g){let f=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const p=new R(y||this.name,this._scene,this._weight,this._playOrder);p._from=this.from,p._to=this.to,p._speedRatio=this.speedRatio,p._loopAnimation=this.loopAnimation,p._isAdditive=this.isAdditive,p._enableBlending=this.enableBlending,p._blendingSpeed=this.blendingSpeed,p.metadata=this.metadata,p.mask=this.mask;for(const S of this._targetedAnimations)p.addTargetedAnimation(f?S.animation.clone():S.animation,g?g(S.target):S.target);return p}serialize(){const y={};y.name=this.name,y.from=this.from,y.to=this.to,y.speedRatio=this.speedRatio,y.loopAnimation=this.loopAnimation,y.isAdditive=this.isAdditive,y.weight=this.weight,y.playOrder=this.playOrder,y.enableBlending=this.enableBlending,y.blendingSpeed=this.blendingSpeed,y.targetedAnimations=[];for(let g=0;g<this.targetedAnimations.length;g++){const f=this.targetedAnimations[g];y.targetedAnimations[g]=f.serialize()}return i.e&&i.e.HasTags(this)&&(y.tags=i.e.GetTags(this)),this.metadata&&(y.metadata=this.metadata),y}static Parse(y,g){const f=new R(y.name,g,y.weight,y.playOrder);for(let S=0;S<y.targetedAnimations.length;S++){const k=y.targetedAnimations[S],i=p.c.Parse(k.animation),H=k.targetId;if("influence"===k.animation.property){const y=g.getMorphTargetById(H);y&&f.addTargetedAnimation(i,y)}else{const y=g.getNodeById(H);null!=y&&f.addTargetedAnimation(i,y)}}return i.e&&i.e.AddTagsTo(f,y.tags),null!==y.from&&null!==y.to&&f.normalize(y.from,y.to),void 0!==y.speedRatio&&(f._speedRatio=y.speedRatio),void 0!==y.loopAnimation&&(f._loopAnimation=y.loopAnimation),void 0!==y.isAdditive&&(f._isAdditive=y.isAdditive),void 0!==y.weight&&(f._weight=y.weight),void 0!==y.playOrder&&(f._playOrder=y.playOrder),void 0!==y.enableBlending&&(f._enableBlending=y.enableBlending),void 0!==y.blendingSpeed&&(f._blendingSpeed=y.blendingSpeed),void 0!==y.metadata&&(f.metadata=y.metadata),f}static MakeAnimationAdditive(y,g,f){let S;S="object"===typeof g?g:{referenceFrame:g,range:f,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let k=y;S.cloneOriginalAnimationGroup&&(k=y.clone(S.clonedAnimationGroupName||k.name));const i=k.targetedAnimations;for(let H=0;H<i.length;H++){const y=i[H];y.animation=p.c.MakeAnimationAdditive(y.animation,S)}if(k.isAdditive=!0,S.clipKeys){let y=Number.MAX_VALUE,g=-Number.MAX_VALUE;const f=k.targetedAnimations;for(let p=0;p<f.length;p++){const S=f[p].animation.getKeys();y>S[0].frame&&(y=S[0].frame),g<S[S.length-1].frame&&(g=S[S.length-1].frame)}k._from=y,k._to=g}return k}static ClipKeys(y,g,f,p,S){const k=y.clone(p||y.name);return R.ClipKeysInPlace(k,g,f,S)}static ClipKeysInPlace(y,g,f,p){return R.ClipInPlace(y,g,f,p,!1)}static ClipFrames(y,g,f,p,S){const k=y.clone(p||y.name);return R.ClipFramesInPlace(k,g,f,S)}static ClipFramesInPlace(y,g,f,p){return R.ClipInPlace(y,g,f,p,!0)}static ClipInPlace(y,g,f,p){let S=arguments.length>4&&void 0!==arguments[4]&&arguments[4],k=Number.MAX_VALUE,i=-Number.MAX_VALUE;const H=y.targetedAnimations;for(let U=0;U<H.length;U++){const y=H[U],l=p?y.animation:y.animation.clone();S&&(l.createKeyForFrame(g),l.createKeyForFrame(f));const c=l.getKeys(),Z=[];let C=Number.MAX_VALUE;for(let p=0;p<c.length;p++){const y=c[p];if(!S&&p>=g&&p<=f||S&&y.frame>=g&&y.frame<=f){const g={frame:y.frame,value:y.value.clone?y.value.clone():y.value,inTangent:y.inTangent,outTangent:y.outTangent,interpolation:y.interpolation,lockedTangent:y.lockedTangent};C===Number.MAX_VALUE&&(C=g.frame),g.frame-=C,Z.push(g)}}0!==Z.length?(k>Z[0].frame&&(k=Z[0].frame),i<Z[Z.length-1].frame&&(i=Z[Z.length-1].frame),l.setKeys(Z,!0),y.animation=l):(H.splice(U,1),U--)}return y._from=k,y._to=i,y}getClassName(){return"AnimationGroup"}toString(y){let g="Name: "+this.name;return g+=", type: "+this.getClassName(),y&&(g+=", from: "+this._from,g+=", to: "+this._to,g+=", isStarted: "+this._isStarted,g+=", speedRatio: "+this._speedRatio,g+=", targetedAnimations length: "+this._targetedAnimations.length,g+=", animatables length: "+this._animatables),g}}}}]);