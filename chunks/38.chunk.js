"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13767:(V,p,W)=>{W.r(p),W.d(p,{AnimationGroup:()=>F,TargetedAnimation:()=>U});var N=W(12492),d=W(10856),E=W(10900),z=W(11209),S=W(12485),Q=W(11218);class J{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(V,p,W,d){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=p,this._target=V,this._scene=W,this._host=d,this._activeTargets=[],p._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===N.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=Q.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const V={frame:0,value:this._minValue};this._keys.splice(0,0,V)}if(this._target instanceof Array){let V=0;for(const p of this._target)this._preparePath(p,V),this._getOriginalValues(V),V++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const E=p.getEvents();E&&E.length>0&&E.forEach((V=>{this._events.push(V._clone())})),this._enableBlending=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(V){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const W=this._animation.targetPropertyPath;if(W.length>1){let N=V;for(let V=0;V<W.length-1;V++){const p=W[V];if(N=N[p],void 0===N)throw new Error(`Invalid property (${p}) in property path (${W.join(".")})`)}this._targetPath=W[W.length-1],this._activeTargets[p]=N}else this._targetPath=W[0],this._activeTargets[p]=V;if(void 0===this._activeTargets[p][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${W.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let V=0;for(const p of this._target)void 0!==this._originalValue[V]&&this._setValue(p,this._activeTargets[V],this._originalValue[V],-1,V),V++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let V=0;V<this._events.length;V++)this._events[V].isDone=!1}isStopped(){return this._stopped}dispose(){const V=this._animation.runtimeAnimations.indexOf(this);V>-1&&this._animation.runtimeAnimations.splice(V,1)}setValue(V,p){if(this._targetIsArray)for(let W=0;W<this._target.length;W++){const N=this._target[W];this._setValue(N,this._activeTargets[W],V,p,W)}else this._setValue(this._target,this._directTarget,V,p,0)}_getOriginalValues(){let V,p=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const W=this._activeTargets[p];V=W.getLocalMatrix&&"_matrix"===this._targetPath?W.getLocalMatrix():W[this._targetPath],V&&V.clone?this._originalValue[p]=V.clone():this._originalValue[p]=V}_registerTargetForLateAnimationBinding(V,p){const W=V.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(W),W._lateAnimationHolders||(W._lateAnimationHolders={}),W._lateAnimationHolders[V.targetPath]||(W._lateAnimationHolders[V.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:p}),V.isAdditive?(W._lateAnimationHolders[V.targetPath].additiveAnimations.push(V),W._lateAnimationHolders[V.targetPath].totalAdditiveWeight+=V.weight):(W._lateAnimationHolders[V.targetPath].animations.push(V),W._lateAnimationHolders[V.targetPath].totalWeight+=V.weight)}_setValue(V,p,W,d,E){if(this._currentActiveTarget=p,this._weight=d,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const V=p[this._targetPath];V.clone?this._originalBlendValue=V.clone():this._originalBlendValue=V}this._originalBlendValue.m?N.d.AllowMatrixDecomposeForInterpolation?this._currentValue?Q.e.DecomposeLerpToRef(this._originalBlendValue,W,this._blendingFactor,this._currentValue):this._currentValue=Q.e.DecomposeLerp(this._originalBlendValue,W,this._blendingFactor):this._currentValue?Q.e.LerpToRef(this._originalBlendValue,W,this._blendingFactor,this._currentValue):this._currentValue=Q.e.Lerp(this._originalBlendValue,W,this._blendingFactor):this._currentValue=N.d._UniversalLerp(this._originalBlendValue,W,this._blendingFactor);const d=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=d}else this._currentValue?this._currentValue.p?this._currentValue.p(W):this._currentValue=W:null!==W&&void 0!==W&&W.clone?this._currentValue=W.clone():this._currentValue=W;-1!==d?this._registerTargetForLateAnimationBinding(this,this._originalValue[E]):this._animationState.loopMode===N.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[E],p[this._targetPath]):p[this._targetPath]=this._originalValue[E]+this._currentValue:p[this._targetPath]=this._currentValue,V.Jg&&V.Jg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(V){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const W=this._animation.getKeys();V<W[0].frame?V=W[0].frame:V>W[W.length-1].frame&&(V=W[W.length-1].frame);const N=this._events;if(N.length)for(let E=0;E<N.length;E++)N[E].onlyOnce||(N[E].isDone=N[E].frame<V);this._currentFrame=V;const d=this._animation._interpolate(V,this._animationState);this.setValue(d,p)}_prepareForSpeedRatioChange(V){const p=this._previousElapsedTime*(this._animation.framePerSecond*V)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-p}animate(V,p,W,d,E){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const S=this._animation,Q=S.targetPropertyPath;if(!Q||Q.length<1)return this._stopped=!0,!1;let J=!0;(p<this._minFrame||p>this._maxFrame)&&(p=this._minFrame),(W<this._minFrame||W>this._maxFrame)&&(W=this._maxFrame);const i=W-p;let l,j=V*(S.framePerSecond*E)/1e3+this._absoluteFrameOffset,k=0,u=!1;const f=d&&this._animationState.loopMode===N.d.ANIMATIONLOOPMODE_YOYO;if(f){const V=(j-p)/i,W=Math.sin(V*Math.PI);j=Math.abs(W)*i+p;const N=W>=0?1:-1;this._yoyoDirection!==N&&(u=!0),this._yoyoDirection=N}if(this._previousElapsedTime=V,this._previousAbsoluteFrame=j,!d&&W>=p&&(j>=i&&E>0||j<=0&&E<0))J=!1,k=S._getKeyValue(this._maxValue);else if(!d&&p>=W&&(j<=i&&E<0||j>=0&&E>0))J=!1,k=S._getKeyValue(this._minValue);else if(this._animationState.loopMode!==N.d.ANIMATIONLOOPMODE_CYCLE){const V=W.toString()+p.toString();if(!this._offsetsCache[V]){this._animationState.repeatCount=0,this._animationState.loopMode=N.d.ANIMATIONLOOPMODE_CYCLE;const d=S._interpolate(p,this._animationState),E=S._interpolate(W,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),S.dataType){case N.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[V]=E-d;break;case N.d.ANIMATIONTYPE_QUATERNION:case N.d.ANIMATIONTYPE_VECTOR3:case N.d.ANIMATIONTYPE_VECTOR2:case N.d.ANIMATIONTYPE_SIZE:case N.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[V]=E.ed(d)}this._highLimitsCache[V]=E}k=this._highLimitsCache[V],l=this._offsetsCache[V]}if(void 0===l)switch(S.dataType){case N.d.ANIMATIONTYPE_FLOAT:l=0;break;case N.d.ANIMATIONTYPE_QUATERNION:l=N.j;break;case N.d.ANIMATIONTYPE_VECTOR3:l=N.t;break;case N.d.ANIMATIONTYPE_VECTOR2:l=N.q;break;case N.d.ANIMATIONTYPE_SIZE:l=N.n;break;case N.d.ANIMATIONTYPE_COLOR3:l=N.e;break;case N.d.ANIMATIONTYPE_COLOR4:l=N.f}let O;if(this._host&&this._host.syncRoot){const V=this._host.syncRoot;O=p+i*((V.masterFrame-V.fromFrame)/(V.toFrame-V.fromFrame))}else O=j>0&&p>W||j<0&&p<W?J&&0!==i?W+j%i:p:J&&0!==i?p+j%i:W;const U=this._events;if(!f&&(E>0&&this.currentFrame>O||E<0&&this.currentFrame<O)||f&&u){this._onLoop();for(let V=0;V<U.length;V++)U[V].onlyOnce||(U[V].isDone=!1);this._animationState.key=E>0?0:S.getKeys().length-1}this._currentFrame=O,this._animationState.repeatCount=0===i?0:j/i|0,this._animationState.highLimitValue=k,this._animationState.offsetValue=l;const F=S._interpolate(O,this._animationState);if(this.setValue(F,z),U.length)for(let N=0;N<U.length;N++)if(i>=0&&O>=U[N].frame&&U[N].frame>=p||i<0&&O<=U[N].frame&&U[N].frame<=p){const V=U[N];V.isDone||(V.onlyOnce&&(U.splice(N,1),N--),V.isDone=!0,V.action(O))}return J||(this._stopped=!0),J}}var i=W(10882);class l{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(V){this._weight=-1!==V?Math.min(Math.max(V,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(V){for(let p=0;p<this._runtimeAnimations.length;p++){this._runtimeAnimations[p]._prepareForSpeedRatioChange(V)}this._speedRatio=V,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(V,p){let W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,E=arguments.length>4&&void 0!==arguments[4]&&arguments[4],z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,S=arguments.length>6?arguments[6]:void 0,Q=arguments.length>7?arguments[7]:void 0,J=arguments.length>8?arguments[8]:void 0,i=arguments.length>9&&void 0!==arguments[9]&&arguments[9],l=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=p,this.fromFrame=W,this.toFrame=N,this.loopAnimation=E,this.onAnimationEnd=S,this.onAnimationLoop=J,this.isAdditive=i,this.playOrder=l,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Pd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new d.b,this.onAnimationLoopObservable=new d.b,this._scene=V,Q&&this.appendAnimations(p,Q),this._speedRatio=z,V._activeAnimatables.push(this)}syncWith(V){if(this._syncRoot=V,V){const V=this._scene._activeAnimatables.indexOf(this);V>-1&&(this._scene._activeAnimatables.splice(V,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(V,p){for(let W=0;W<p.length;W++){const N=p[W],d=new J(V,N,this._scene,this);d._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(d)}}getAnimationByTargetProperty(V){const p=this._runtimeAnimations;for(let W=0;W<p.length;W++)if(p[W].animation.targetProperty===V)return p[W].animation;return null}getRuntimeAnimationByTargetProperty(V){const p=this._runtimeAnimations;for(let W=0;W<p.length;W++)if(p[W].animation.targetProperty===V)return p[W];return null}reset(){const V=this._runtimeAnimations;for(let p=0;p<V.length;p++)V[p].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(V){const p=this._runtimeAnimations;for(let W=0;W<p.length;W++)p[W].animation.enableBlending=!0,p[W].animation.blendingSpeed=V}disableBlending(){const V=this._runtimeAnimations;for(let p=0;p<V.length;p++)V[p].animation.enableBlending=!1}goToFrame(V){const p=this._runtimeAnimations;if(p[0]){const W=p[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??p[0].currentFrame;const N=0===this.speedRatio?0:(V-this._frameToSyncFromJump)/W*1e3/this.speedRatio;this._manualJumpDelay=-N}for(let W=0;W<p.length;W++)p[W].goToFrame(V,this._weight);this._goToFrame=V}get paused(){return this.Pd}pause(){this.Pd||(this.Pd=!0)}restart(){this.Pd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(V,p){let W=arguments.length>2&&void 0!==arguments[2]&&arguments[2],N=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(V||p){const d=this._scene._activeAnimatables.indexOf(this);if(d>-1){const E=this._runtimeAnimations;for(let W=E.length-1;W>=0;W--){const N=E[W];V&&N.animation.name!=V||(p&&!p(N.target)||(N.dispose(),E.splice(W,1)))}0==E.length&&(W||this._scene._activeAnimatables.splice(d,1),N||this._raiseOnAnimationEnd())}}else{const V=this._scene._activeAnimatables.indexOf(this);if(V>-1){W||this._scene._activeAnimatables.splice(V,1);const p=this._runtimeAnimations;for(let V=0;V<p.length;V++)p[V].dispose();this._runtimeAnimations.length=0,N||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((V=>{this.onAnimationEndObservable.add((()=>{V(this)}),void 0,void 0,this,!0)}))}_animate(V){if(this.Pd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=V),!0;if(null===this._localDelayOffset?(this._localDelayOffset=V,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=V-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let p=!1;const W=this._runtimeAnimations;let N;for(N=0;N<W.length;N++){const d=W[N].animate(V-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);p=p||d}if(this.animationStarted=p,!p){if(this.disposeOnEnd)for(N=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(N,1),N=0;N<W.length;N++)W[N].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return p}}function j(V){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return V.originalValue;let p=1;const W=Q.i.fb[0],N=Q.i.fb[1],d=Q.i.Quaternion[0];let E=0;const z=V.animations[0],S=V.originalValue;let J=1,i=!1;if(V.totalWeight<1)J=1-V.totalWeight,S.decompose(N,d,W);else{if(E=1,p=V.totalWeight,J=z.weight/p,1==J){if(!V.totalAdditiveWeight)return z.currentValue;i=!0}z.currentValue.decompose(N,d,W)}if(!i){N.scaleInPlace(J),W.scaleInPlace(J),d.scaleInPlace(J);for(let z=E;z<V.animations.length;z++){const E=V.animations[z];if(0===E.weight)continue;J=E.weight/p;const S=Q.i.fb[2],i=Q.i.fb[3],l=Q.i.Quaternion[1];E.currentValue.decompose(i,l,S),i.scaleAndAddToRef(J,N),l.scaleAndAddToRef(Q.f.Dot(d,l)>0?J:-J,d),S.scaleAndAddToRef(J,W)}d.normalize()}for(let j=0;j<V.additiveAnimations.length;j++){const p=V.additiveAnimations[j];if(0===p.weight)continue;const E=Q.i.fb[2],z=Q.i.fb[3],S=Q.i.Quaternion[1];p.currentValue.decompose(z,S,E),z.multiplyToRef(N,z),Q.n.LerpToRef(N,z,p.weight,N),d.multiplyToRef(S,S),Q.f.SlerpToRef(d,S,p.weight,d),E.scaleAndAddToRef(p.weight,W)}const l=z?z._animationState.workValue:Q.i.Matrix[0].clone();return Q.e.ComposeToRef(N,d,W,l),l}function k(V,p){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return p;const W=V.animations[0],N=V.originalValue;let d=p;if(0===V.totalWeight&&V.totalAdditiveWeight>0)d.p(N);else if(1===V.animations.length){if(Q.f.SlerpToRef(N,W.currentValue,Math.min(1,V.totalWeight),d),0===V.totalAdditiveWeight)return d}else if(V.animations.length>1){let W,E,z=1;if(V.totalWeight<1){const p=1-V.totalWeight;W=[],E=[],W.push(N),E.push(p)}else{if(2===V.animations.length&&(Q.f.SlerpToRef(V.animations[0].currentValue,V.animations[1].currentValue,V.animations[1].weight/V.totalWeight,p),0===V.totalAdditiveWeight))return p;W=[],E=[],z=V.totalWeight}for(let p=0;p<V.animations.length;p++){const N=V.animations[p];W.push(N.currentValue),E.push(N.weight/z)}let S=0;for(let V=0;V<W.length;)V?(S+=E[V],Q.f.SlerpToRef(d,W[V],E[V]/S,d),V++):(Q.f.SlerpToRef(W[V],W[V+1],E[V+1]/(E[V]+E[V+1]),p),d=p,S=E[V]+E[V+1],V+=2)}for(let E=0;E<V.additiveAnimations.length;E++){const p=V.additiveAnimations[E];0!==p.weight&&(d.multiplyToRef(p.currentValue,Q.i.Quaternion[0]),Q.f.SlerpToRef(d,Q.i.Quaternion[0],p.weight,d))}return d}var u,f,O=W(11200);u=O.e,(f=S.c)&&(f.prototype.copyAnimationRange=function(V,p,W){let d=arguments.length>3&&void 0!==arguments[3]&&arguments[3],E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new N.d(this.name,"_matrix",V.animations[0].framePerSecond,N.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const z=V.animations[0].getRange(p);if(!z)return!1;const S=z.from,Q=z.to,J=V.animations[0].getKeys(),i=V.length,l=V.getParent(),j=this.getParent(),k=d&&l&&i&&this.length&&i!==this.length,u=k&&j&&l?j.length/l.length:1,f=d&&!j&&E&&(1!==E.x||1!==E.y||1!==E.z),O=this.animations[0].getKeys();let U,F,C;for(let N=0,A=J.length;N<A;N++)U=J[N],U.frame>=S&&U.frame<=Q&&(d?(C=U.value.clone(),k?(F=C.getTranslation(),C.setTranslation(F.scaleInPlace(u))):f&&E?(F=C.getTranslation(),C.setTranslation(F.multiplyInPlace(E))):C=U.value):C=U.value,O.push({frame:U.frame+W,value:C}));return this.animations[0].createRange(p,S+W,Q+W),!0}),u&&(u.prototype._animate=function(V){if(!this.animationsEnabled)return;const p=i.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=p}this.deltaTime=void 0!==V?V:this.useConstantAnimationDeltaTime?16:(p-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=p;const W=this._activeAnimatables;if(0===W.length)return;this._animationTime+=this.deltaTime;const d=this._animationTime;for(let N=0;N<W.length;N++){const V=W[N];!V._animate(d)&&V.disposeOnEnd&&N--}!function(V){if(V._registeredForLateAnimationBindings.length){for(let p=0;p<V._registeredForLateAnimationBindings.length;p++){const W=V._registeredForLateAnimationBindings.data[p];for(const V in W._lateAnimationHolders){const p=W._lateAnimationHolders[V],d=p.animations[0],E=p.originalValue;if(void 0===E||null===E)continue;const z=N.d.AllowMatrixDecomposeForInterpolation&&E.m;let S=W[V];if(z)S=j(p);else if(void 0!==E.w)S=k(p,S||Q.f.Identity());else{let V=0,W=1;const z=d&&d._animationState.loopMode===N.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(p.totalWeight<1)S=z?E.clone?E.clone():E:d&&E.scale?E.scale(1-p.totalWeight):d?E*(1-p.totalWeight):E.clone?E.clone():E;else if(d){W=p.totalWeight;const N=d.weight/W;S=1!==N?d.currentValue.scale?d.currentValue.scale(N):d.currentValue*N:d.currentValue,z&&(S.addToRef?S.addToRef(E,S):S+=E),V=1}for(let N=V;N<p.animations.length;N++){const V=p.animations[N],d=V.weight/W;d&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(d,S):S+=V.currentValue*d)}for(let N=0;N<p.additiveAnimations.length;N++){const V=p.additiveAnimations[N],W=V.weight;W&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(W,S):S+=V.currentValue*W)}}W[V]=S}W._lateAnimationHolders={}}V._registeredForLateAnimationBindings.reset()}}(this)},u.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((V,p)=>V.playOrder-p.playOrder))},u.prototype.beginWeightedAnimation=function(V,p,W){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,d=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,z=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,Q=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,i=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const l=this.beginAnimation(V,p,W,d,E,z,S,!1,Q,J,i);return l.weight=N,l},u.prototype.beginAnimation=function(V,p,W,N){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,E=arguments.length>5?arguments[5]:void 0,z=arguments.length>6?arguments[6]:void 0,S=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],Q=arguments.length>8?arguments[8]:void 0,J=arguments.length>9?arguments[9]:void 0,i=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(d<0){const V=p;p=W,W=V,d=-d}p>W&&(d=-d),S&&this.stopAnimation(V,void 0,Q),z||(z=new l(this,V,p,W,N,d,E,void 0,J,i));const j=!Q||Q(V);if(V.animations&&j&&z.appendAnimations(V,V.animations),V.getAnimatables){const i=V.getAnimatables();for(let V=0;V<i.length;V++)this.beginAnimation(i[V],p,W,N,d,E,z,S,Q,J)}return z.reset(),z},u.prototype.beginHierarchyAnimation=function(V,p,W,N,d){let E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,z=arguments.length>6?arguments[6]:void 0,S=arguments.length>7?arguments[7]:void 0,Q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=arguments.length>9?arguments[9]:void 0,i=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const l=V.getDescendants(p),j=[];j.push(this.beginAnimation(V,W,N,d,E,z,S,Q,J,void 0,i));for(const k of l)j.push(this.beginAnimation(k,W,N,d,E,z,S,Q,J,void 0,i));return j},u.prototype.beginDirectAnimation=function(V,p,W,N,d){let E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(E<0){const V=W;W=N,N=V,E=-E}return W>N&&(E=-E),new l(this,V,W,N,d,E,arguments.length>6?arguments[6]:void 0,p,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},u.prototype.beginDirectHierarchyAnimation=function(V,p,W,N,d,E,z,S,Q){let J=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const i=V.getDescendants(p),l=[];l.push(this.beginDirectAnimation(V,W,N,d,E,z,S,Q,J));for(const j of i)l.push(this.beginDirectAnimation(j,W,N,d,E,z,S,Q,J));return l},u.prototype.getAnimatableByTarget=function(V){for(let p=0;p<this._activeAnimatables.length;p++)if(this._activeAnimatables[p].target===V)return this._activeAnimatables[p];return null},u.prototype.getAllAnimatablesByTarget=function(V){const p=[];for(let W=0;W<this._activeAnimatables.length;W++)this._activeAnimatables[W].target===V&&p.push(this._activeAnimatables[W]);return p},u.prototype.stopAnimation=function(V,p,W){const N=this.getAllAnimatablesByTarget(V);for(const d of N)d.stop(p,W)},u.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let V=0;V<this._activeAnimatables.length;V++)this._activeAnimatables[V].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const V of this.animationGroups)V.stop()});class U{getClassName(){return"TargetedAnimation"}serialize(){const V={};return V.animation=this.animation.serialize(),V.targetId=this.target.id,V}}class F{get mask(){return this._mask}set mask(V){this._mask!==V&&(this._mask=V,this.syncWithMask(!0))}syncWithMask(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||V){this._numActiveAnimatables=0;for(let V=0;V<this._animatables.length;++V){const p=this._animatables[V];!this.mask||this.mask.disabled||this.mask.retainsTarget(p.target.name)?(this._numActiveAnimatables++,p.paused&&p.restart()):p.paused||p.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let V=0;V<this._animatables.length;++V){const p=this._animatables[V];this.mask.retainsTarget(p.target.name)||(p.stop(),this._animatables.splice(V,1),--V)}for(let V=0;V<this._targetedAnimations.length;V++){const p=this._targetedAnimations[V];this.mask.retainsTarget(p.target.name)||(this._targetedAnimations.splice(V,1),--V)}}}get from(){return this._from}set from(V){if(this._from!==V){this._from=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].fromFrame=this._from}}}get to(){return this._to}set to(V){if(this._to!==V){this._to=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(V){if(this._speedRatio!==V){this._speedRatio=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(V){if(this._loopAnimation!==V){this._loopAnimation=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(V){if(this._isAdditive!==V){this._isAdditive=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(V){this._weight!==V&&(this._weight=V,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(V){if(this._playOrder!==V&&(this._playOrder=V,this._animatables.length>0)){for(let V=0;V<this._animatables.length;V++)this._animatables[V].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(V){if(this._enableBlending!==V&&(this._enableBlending=V,null!==V))for(let p=0;p<this._targetedAnimations.length;++p)this._targetedAnimations[p].animation.enableBlending=V}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(V){if(this._blendingSpeed!==V&&(this._blendingSpeed=V,null!==V))for(let p=0;p<this._targetedAnimations.length;++p)this._targetedAnimations[p].animation.blendingSpeed=V}getLength(V,p){V=V??this._from;return((p=p??this._to)-V)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(V){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],W=arguments.length>2&&void 0!==arguments[2]&&arguments[2],N=arguments.length>3?arguments[3]:void 0;if(0===V.length)return null;N=N??V[0].weight;let d=Number.MAX_VALUE,E=-Number.MAX_VALUE;if(W)for(const S of V)S.from<d&&(d=S.from),S.to>E&&(E=S.to);const z=new F(V[0].name+"_merged",V[0]._scene,N);for(const S of V){W&&S.normalize(d,E);for(const V of S.targetedAnimations)z.addTargetedAnimation(V.animation,V.target);p&&S.dispose()}return z}constructor(V){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=V,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new d.b,this.onAnimationLoopObservable=new d.b,this.onAnimationGroupLoopObservable=new d.b,this.onAnimationGroupEndObservable=new d.b,this.onAnimationGroupPauseObservable=new d.b,this.onAnimationGroupPlayObservable=new d.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=p||E.d.LastCreatedScene,this._weight=W,this._playOrder=N,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(V,p){const W=new U;W.animation=V,W.target=p;const N=V.getKeys();return this._from>N[0].frame&&(this._from=N[0].frame),this._to<N[N.length-1].frame&&(this._to=N[N.length-1].frame),null!==this._enableBlending&&(V.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(V.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(W),this._shouldStart=!0,W}removeTargetedAnimation(V){for(let p=this._targetedAnimations.length-1;p>-1;p--){this._targetedAnimations[p].animation===V&&this._targetedAnimations.splice(p,1)}}normalize(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==V&&(V=this._from),null==p&&(p=this._to);for(let W=0;W<this._targetedAnimations.length;W++){const N=this._targetedAnimations[W].animation.getKeys(),d=N[0],E=N[N.length-1];if(d.frame>V){const p={frame:V,value:d.value,inTangent:d.inTangent,outTangent:d.outTangent,interpolation:d.interpolation};N.splice(0,0,p)}if(E.frame<p){const V={frame:p,value:E.value,inTangent:E.inTangent,outTangent:E.outTangent,interpolation:E.interpolation};N.push(V)}}return this._from=V,this._to=p,this}_processLoop(V,p,W){V.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(p),this._animationLoopFlags[W]||(this._animationLoopFlags[W]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0],p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,W=arguments.length>2?arguments[2]:void 0,N=arguments.length>3?arguments[3]:void 0,d=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=V,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let E=0;E<this._targetedAnimations.length;E++){const z=this._targetedAnimations[E],S=this._scene.beginDirectAnimation(z.target,[z.animation],void 0!==W?W:this._from,void 0!==N?N:this._to,V,p,void 0,void 0,void 0!==d?d:this._isAdditive);S.weight=this._weight,S.playOrder=this._playOrder,S.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(z),this._checkAnimationGroupEnded(S)},this._processLoop(S,z,E),this._animatables.push(S)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=p,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let V=0;V<this._animatables.length;V++){this._animatables[V].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(V){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==V&&(this.loopAnimation=V),this.restart()):(this.stop(),this.start(V,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].reset()}return this}restart(){if(!this._isStarted)return this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const p=this._animatables.slice();for(let N=0;N<p.length;N++)p[N].stop(void 0,void 0,!0,V);let W=0;for(let N=0;N<this._scene._activeAnimatables.length;N++){const p=this._scene._activeAnimatables[N];p._runtimeAnimations.length>0?this._scene._activeAnimatables[W++]=p:V&&this._checkAnimationGroupEnded(p,V)}return this._scene._activeAnimatables.length=W,this._isStarted=!1,this}setWeightForAllAnimatables(V){for(let p=0;p<this._animatables.length;p++){this._animatables[p].weight=V}return this}syncAllAnimationsWith(V){for(let p=0;p<this._animatables.length;p++){this._animatables[p].syncWith(V)}return this}goToFrame(V){if(!this._isStarted)return this;for(let p=0;p<this._animatables.length;p++){this._animatables[p].goToFrame(V)}return this}getCurrentFrame(){var V;return(null===(V=this.animatables[0])||void 0===V?void 0:V.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const V=this._scene.animationGroups.indexOf(this);if(V>-1&&this._scene.animationGroups.splice(V,1),this._parentContainer){const V=this._parentContainer.animationGroups.indexOf(this);V>-1&&this._parentContainer.animationGroups.splice(V,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(V){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const W=this._animatables.indexOf(V);W>-1&&this._animatables.splice(W,1),0===this._animatables.length&&(this._isStarted=!1,p||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(V,p){let W=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const N=new F(V||this.name,this._scene,this._weight,this._playOrder);N._from=this.from,N._to=this.to,N._speedRatio=this.speedRatio,N._loopAnimation=this.loopAnimation,N._isAdditive=this.isAdditive,N._enableBlending=this.enableBlending,N._blendingSpeed=this.blendingSpeed,N.metadata=this.metadata,N.mask=this.mask;for(const d of this._targetedAnimations)N.addTargetedAnimation(W?d.animation.clone():d.animation,p?p(d.target):d.target);return N}serialize(){const V={};V.name=this.name,V.from=this.from,V.to=this.to,V.speedRatio=this.speedRatio,V.loopAnimation=this.loopAnimation,V.isAdditive=this.isAdditive,V.weight=this.weight,V.playOrder=this.playOrder,V.enableBlending=this.enableBlending,V.blendingSpeed=this.blendingSpeed,V.targetedAnimations=[];for(let p=0;p<this.targetedAnimations.length;p++){const W=this.targetedAnimations[p];V.targetedAnimations[p]=W.serialize()}return z.e&&z.e.HasTags(this)&&(V.tags=z.e.GetTags(this)),this.metadata&&(V.metadata=this.metadata),V}static Parse(V,p){const W=new F(V.name,p,V.weight,V.playOrder);for(let d=0;d<V.targetedAnimations.length;d++){const E=V.targetedAnimations[d],z=N.d.Parse(E.animation),S=E.targetId;if("influence"===E.animation.property){const V=p.getMorphTargetById(S);V&&W.addTargetedAnimation(z,V)}else{const V=p.getNodeById(S);null!=V&&W.addTargetedAnimation(z,V)}}return z.e&&z.e.AddTagsTo(W,V.tags),null!==V.from&&null!==V.to&&W.normalize(V.from,V.to),void 0!==V.speedRatio&&(W._speedRatio=V.speedRatio),void 0!==V.loopAnimation&&(W._loopAnimation=V.loopAnimation),void 0!==V.isAdditive&&(W._isAdditive=V.isAdditive),void 0!==V.weight&&(W._weight=V.weight),void 0!==V.playOrder&&(W._playOrder=V.playOrder),void 0!==V.enableBlending&&(W._enableBlending=V.enableBlending),void 0!==V.blendingSpeed&&(W._blendingSpeed=V.blendingSpeed),void 0!==V.metadata&&(W.metadata=V.metadata),W}static MakeAnimationAdditive(V,p,W){let d;d="object"===typeof p?p:{referenceFrame:p,range:W,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let E=V;d.cloneOriginalAnimationGroup&&(E=V.clone(d.clonedAnimationGroupName||E.name));const z=E.targetedAnimations;for(let S=0;S<z.length;S++){const V=z[S];V.animation=N.d.MakeAnimationAdditive(V.animation,d)}if(E.isAdditive=!0,d.clipKeys){let V=Number.MAX_VALUE,p=-Number.MAX_VALUE;const W=E.targetedAnimations;for(let N=0;N<W.length;N++){const d=W[N].animation.getKeys();V>d[0].frame&&(V=d[0].frame),p<d[d.length-1].frame&&(p=d[d.length-1].frame)}E._from=V,E._to=p}return E}static ClipKeys(V,p,W,N,d){const E=V.clone(N||V.name);return F.ClipKeysInPlace(E,p,W,d)}static ClipKeysInPlace(V,p,W,N){return F.ClipInPlace(V,p,W,N,!1)}static ClipFrames(V,p,W,N,d){const E=V.clone(N||V.name);return F.ClipFramesInPlace(E,p,W,d)}static ClipFramesInPlace(V,p,W,N){return F.ClipInPlace(V,p,W,N,!0)}static ClipInPlace(V,p,W,N){let d=arguments.length>4&&void 0!==arguments[4]&&arguments[4],E=Number.MAX_VALUE,z=-Number.MAX_VALUE;const S=V.targetedAnimations;for(let Q=0;Q<S.length;Q++){const V=S[Q],J=N?V.animation:V.animation.clone();d&&(J.createKeyForFrame(p),J.createKeyForFrame(W));const i=J.getKeys(),l=[];let j=Number.MAX_VALUE;for(let N=0;N<i.length;N++){const V=i[N];if(!d&&N>=p&&N<=W||d&&V.frame>=p&&V.frame<=W){const p={frame:V.frame,value:V.value.clone?V.value.clone():V.value,inTangent:V.inTangent,outTangent:V.outTangent,interpolation:V.interpolation,lockedTangent:V.lockedTangent};j===Number.MAX_VALUE&&(j=p.frame),p.frame-=j,l.push(p)}}0!==l.length?(E>l[0].frame&&(E=l[0].frame),z<l[l.length-1].frame&&(z=l[l.length-1].frame),J.setKeys(l,!0),V.animation=J):(S.splice(Q,1),Q--)}return V._from=E,V._to=z,V}getClassName(){return"AnimationGroup"}toString(V){let p="Name: "+this.name;return p+=", type: "+this.getClassName(),V&&(p+=", from: "+this._from,p+=", to: "+this._to,p+=", isStarted: "+this._isStarted,p+=", speedRatio: "+this._speedRatio,p+=", targetedAnimations length: "+this._targetedAnimations.length,p+=", animatables length: "+this._animatables),p}}}}]);