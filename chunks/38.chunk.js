/*! For license information please see wa30x.38.4210838d.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{10871:(I,k,i)=>{i.r(k),i.d(k,{getAnalytics:()=>mI,getGoogleAnalyticsClientId:()=>NI,initializeAnalytics:()=>KI,isSupported:()=>UI,logEvent:()=>ik,setAnalyticsCollectionEnabled:()=>Ik,setConsent:()=>dk,setCurrentScreen:()=>qI,setDefaultEventParameters:()=>kk,setUserId:()=>yI,setUserProperties:()=>MI,settings:()=>SI});var d=i(10850),u=i(10868),H=i(10860),Y=i(10854);let x,j;const l=new WeakMap,g=new WeakMap,P=new WeakMap,J=new WeakMap,L=new WeakMap;let s={get(I,k,i){if(I instanceof IDBTransaction){if("done"===k)return g.get(I);if("objectStoreNames"===k)return I.objectStoreNames||P.get(I);if("store"===k)return i.objectStoreNames[1]?void 0:i.objectStore(i.objectStoreNames[0])}return n(I[k])},set:(I,k,i)=>(I[k]=i,!0),has:(I,k)=>I instanceof IDBTransaction&&("done"===k||"store"===k)||k in I};function h(I){return I!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(j||(j=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(I)?function(){for(var k=arguments.length,i=new Array(k),d=0;d<k;d++)i[d]=arguments[d];return I.apply(B(this),i),n(l.get(this))}:function(){for(var k=arguments.length,i=new Array(k),d=0;d<k;d++)i[d]=arguments[d];return n(I.apply(B(this),i))}:function(k){for(var i=arguments.length,d=new Array(i>1?i-1:0),u=1;u<i;u++)d[u-1]=arguments[u];const H=I.call(B(this),k,...d);return P.set(H,k.sort?k.sort():[k]),n(H)}}function Z(I){return"function"===typeof I?h(I):(I instanceof IDBTransaction&&function(I){if(g.has(I))return;const k=new Promise(((k,i)=>{const d=()=>{I.removeEventListener("complete",u),I.removeEventListener("error",H),I.removeEventListener("abort",H)},u=()=>{k(),d()},H=()=>{i(I.error||new DOMException("AbortError","AbortError")),d()};I.addEventListener("complete",u),I.addEventListener("error",H),I.addEventListener("abort",H)}));g.set(I,k)}(I),k=I,(x||(x=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((I=>k instanceof I))?new Proxy(I,s):I);var k}function n(I){if(I instanceof IDBRequest)return function(I){const k=new Promise(((k,i)=>{const d=()=>{I.removeEventListener("success",u),I.removeEventListener("error",H)},u=()=>{k(n(I.result)),d()},H=()=>{i(I.error),d()};I.addEventListener("success",u),I.addEventListener("error",H)}));return k.then((k=>{k instanceof IDBCursor&&l.set(k,I)})).catch((()=>{})),L.set(k,I),k}(I);if(J.has(I))return J.get(I);const k=Z(I);return k!==I&&(J.set(I,k),L.set(k,I)),k}const B=I=>L.get(I);const b=["get","getKey","getAll","getAllKeys","count"],o=["put","add","delete","clear"],F=new Map;function T(I,k){if(!(I instanceof IDBDatabase)||k in I||"string"!==typeof k)return;if(F.get(k))return F.get(k);const i=k.replace(/FromIndex$/,""),d=k!==i,u=o.includes(i);if(!(i in(d?IDBIndex:IDBObjectStore).prototype)||!u&&!b.includes(i))return;const H=async function(I){const k=this.transaction(I,u?"readwrite":"readonly");let H=k.store;for(var Y=arguments.length,x=new Array(Y>1?Y-1:0),j=1;j<Y;j++)x[j-1]=arguments[j];return d&&(H=H.index(x.shift())),(await Promise.all([H[i](...x),u&&k.done]))[0]};return F.set(k,H),H}s=(I=>({...I,get:(k,i,d)=>T(k,i)||I.get(k,i,d),has:(k,i)=>!!T(k,i)||I.has(k,i)}))(s);const W="@firebase/installations",G="0.6.4",V=1e4,w=`w:${G}`,r="FIS_v2",Q=36e5,t={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},a=new H.e("installations","Installations",t);function v(I){return I instanceof H.f&&I.code.includes("request-failed")}function R(I){let{projectId:k}=I;return`https://firebaseinstallations.googleapis.com/v1/projects/${k}/installations`}function E(I){return{token:I.token,requestStatus:2,expiresIn:(k=I.expiresIn,Number(k.replace("s","000"))),creationTime:Date.now()};var k}async function O(I,k){const i=(await k.json()).error;return a.create("request-failed",{requestName:I,serverCode:i.code,serverMessage:i.message,serverStatus:i.status})}function f(I){let{apiKey:k}=I;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":k})}function C(I,k){let{refreshToken:i}=k;const d=f(I);return d.append("Authorization",function(I){return`${r} ${I}`}(i)),d}async function e(I){const k=await I();return k.status>=500&&k.status<600?I():k}function X(I){return new Promise((k=>{setTimeout(k,I)}))}const p=/^[cdef][\w-]{21}$/;function D(){try{const I=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(I),I[0]=112+I[0]%16;const k=function(I){const k=(i=I,btoa(String.fromCharCode(...i)).replace(/\+/g,"-").replace(/\//g,"_"));var i;return k.substr(0,22)}(I);return p.test(k)?k:""}catch(I){return""}}function A(I){return`${I.appName}!${I.appId}`}const c=new Map;function S(I,k){const i=A(I);z(i,k),function(I,k){const i=K();i&&i.postMessage({key:I,fid:k});U()}(i,k)}function z(I,k){const i=c.get(I);if(i)for(const d of i)d(k)}let m=null;function K(){return!m&&"BroadcastChannel"in self&&(m=new BroadcastChannel("[Firebase] FID Change"),m.onmessage=I=>{z(I.data.key,I.data.fid)}),m}function U(){0===c.size&&m&&(m.close(),m=null)}const q="firebase-installations-store";let N=null;function y(){return N||(N=function(I,k){let{blocked:i,upgrade:d,blocking:u,terminated:H}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const Y=indexedDB.open(I,k),x=n(Y);return d&&Y.addEventListener("upgradeneeded",(I=>{d(n(Y.result),I.oldVersion,I.newVersion,n(Y.transaction))})),i&&Y.addEventListener("blocked",(()=>i())),x.then((I=>{H&&I.addEventListener("close",(()=>H())),u&&I.addEventListener("versionchange",(()=>u()))})).catch((()=>{})),x}("firebase-installations-database",1,{upgrade:(I,k)=>{if(0===k)I.createObjectStore(q)}})),N}async function M(I,k){const i=A(I),d=(await y()).transaction(q,"readwrite"),u=d.objectStore(q),H=await u.get(i);return await u.put(k,i),await d.done,H&&H.fid===k.fid||S(I,k.fid),k}async function II(I){const k=A(I),i=(await y()).transaction(q,"readwrite");await i.objectStore(q).delete(k),await i.done}async function kI(I,k){const i=A(I),d=(await y()).transaction(q,"readwrite"),u=d.objectStore(q),H=await u.get(i),Y=k(H);return void 0===Y?await u.delete(i):await u.put(Y,i),await d.done,!Y||H&&H.fid===Y.fid||S(I,Y.fid),Y}async function iI(I){let k;const i=await kI(I.appConfig,(i=>{const d=function(I){const k=I||{fid:D(),registrationStatus:0};return HI(k)}(i),u=function(I,k){if(0===k.registrationStatus){if(!navigator.onLine){return{installationEntry:k,registrationPromise:Promise.reject(a.create("app-offline"))}}const i={fid:k.fid,registrationStatus:1,registrationTime:Date.now()},d=async function(I,k){try{const i=await async function(I,k){let{appConfig:i,heartbeatServiceProvider:d}=I,{fid:u}=k;const H=R(i),Y=f(i),x=d.getImmediate({optional:!0});if(x){const I=await x.getHeartbeatsHeader();I&&Y.append("x-firebase-client",I)}const j={fid:u,authVersion:r,appId:i.appId,sdkVersion:w},l={method:"POST",headers:Y,body:JSON.stringify(j)},g=await e((()=>fetch(H,l)));if(g.ok){const I=await g.json();return{fid:I.fid||u,registrationStatus:2,refreshToken:I.refreshToken,authToken:E(I.authToken)}}throw await O("Create Installation",g)}(I,k);return M(I.appConfig,i)}catch(i){throw v(i)&&409===i.customData.serverCode?await II(I.appConfig):await M(I.appConfig,{fid:k.fid,registrationStatus:0}),i}}(I,i);return{installationEntry:i,registrationPromise:d}}return 1===k.registrationStatus?{installationEntry:k,registrationPromise:dI(I)}:{installationEntry:k}}(I,d);return k=u.registrationPromise,u.installationEntry}));return""===i.fid?{installationEntry:await k}:{installationEntry:i,registrationPromise:k}}async function dI(I){let k=await uI(I.appConfig);for(;1===k.registrationStatus;)await X(100),k=await uI(I.appConfig);if(0===k.registrationStatus){const{installationEntry:k,registrationPromise:i}=await iI(I);return i||k}return k}function uI(I){return kI(I,(I=>{if(!I)throw a.create("installation-not-found");return HI(I)}))}function HI(I){return 1===(k=I).registrationStatus&&k.registrationTime+V<Date.now()?{fid:I.fid,registrationStatus:0}:I;var k}async function YI(I,k){let{appConfig:i,heartbeatServiceProvider:d}=I;const u=function(I,k){let{fid:i}=k;return`${R(I)}/${i}/authTokens:generate`}(i,k),H=C(i,k),Y=d.getImmediate({optional:!0});if(Y){const I=await Y.getHeartbeatsHeader();I&&H.append("x-firebase-client",I)}const x={installation:{sdkVersion:w,appId:i.appId}},j={method:"POST",headers:H,body:JSON.stringify(x)},l=await e((()=>fetch(u,j)));if(l.ok){return E(await l.json())}throw await O("Generate Auth Token",l)}async function xI(I){let k,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const d=await kI(I.appConfig,(d=>{if(!lI(d))throw a.create("not-registered");const u=d.authToken;if(!i&&function(I){return 2===I.requestStatus&&!function(I){const k=Date.now();return k<I.creationTime||I.creationTime+I.expiresIn<k+Q}(I)}(u))return d;if(1===u.requestStatus)return k=async function(I,k){let i=await jI(I.appConfig);for(;1===i.authToken.requestStatus;)await X(100),i=await jI(I.appConfig);const d=i.authToken;return 0===d.requestStatus?xI(I,k):d}(I,i),d;{if(!navigator.onLine)throw a.create("app-offline");const i=function(I){const k={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},I),{authToken:k})}(d);return k=async function(I,k){try{const i=await YI(I,k),d=Object.assign(Object.assign({},k),{authToken:i});return await M(I.appConfig,d),i}catch(i){if(!v(i)||401!==i.customData.serverCode&&404!==i.customData.serverCode){const i=Object.assign(Object.assign({},k),{authToken:{requestStatus:0}});await M(I.appConfig,i)}else await II(I.appConfig);throw i}}(I,i),i}}));return k?await k:d.authToken}function jI(I){return kI(I,(I=>{if(!lI(I))throw a.create("not-registered");const k=I.authToken;return 1===(i=k).requestStatus&&i.requestTime+V<Date.now()?Object.assign(Object.assign({},I),{authToken:{requestStatus:0}}):I;var i}))}function lI(I){return void 0!==I&&2===I.registrationStatus}async function gI(I){let k=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i=I;await async function(I){const{registrationPromise:k}=await iI(I);k&&await k}(i);return(await xI(i,k)).token}function PI(I){return a.create("missing-app-config-values",{valueName:I})}const JI="installations",LI=I=>{const k=I.getProvider("app").getImmediate(),i=function(I){if(!I||!I.options)throw PI("App Configuration");if(!I.name)throw PI("App Name");const k=["projectId","apiKey","appId"];for(const i of k)if(!I.options[i])throw PI(i);return{appName:I.name,projectId:I.options.projectId,apiKey:I.options.apiKey,appId:I.options.appId}}(k);return{app:k,appConfig:i,heartbeatServiceProvider:(0,d.v)(k,"heartbeat"),_delete:()=>Promise.resolve()}},sI=I=>{const k=I.getProvider("app").getImmediate(),i=(0,d.v)(k,JI).getImmediate();return{getId:()=>async function(I){const k=I,{installationEntry:i,registrationPromise:d}=await iI(k);return d?d.catch(console.error):xI(k).catch(console.error),i.fid}(i),getToken:I=>gI(i,I)}};(0,d.y)(new Y.d(JI,LI,"PUBLIC")),(0,d.y)(new Y.d("installations-internal",sI,"PRIVATE")),(0,d.P)(W,G),(0,d.P)(W,G,"esm2017");const hI="analytics",ZI="https://www.googletagmanager.com/gtag/js",nI=new u.g("@firebase/analytics"),BI={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},bI=new H.e("analytics","Analytics",BI);function oI(I){if(!I.startsWith(ZI)){const k=bI.create("invalid-gtag-resource",{gtagURL:I});return nI.warn(k.message),""}return I}function FI(I){return Promise.all(I.map((I=>I.catch((I=>I)))))}function TI(I,k){const i=function(I,k){let i;return window.trustedTypes&&(i=window.trustedTypes.createPolicy(I,k)),i}("firebase-js-sdk-policy",{createScriptURL:oI}),d=document.createElement("script"),u=`${ZI}?l=${I}&id=${k}`;d.src=i?null===i||void 0===i?void 0:i.createScriptURL(u):u,d.async=!0,document.head.appendChild(d)}function WI(I,k,i,d){return async function(u){try{for(var H=arguments.length,Y=new Array(H>1?H-1:0),x=1;x<H;x++)Y[x-1]=arguments[x];if("event"===u){const[d,u]=Y;await async function(I,k,i,d,u){try{let H=[];if(u&&u.send_to){let I=u.send_to;Array.isArray(I)||(I=[I]);const d=await FI(i);for(const i of I){const I=d.find((I=>I.measurementId===i)),u=I&&k[I.appId];if(!u){H=[];break}H.push(u)}}0===H.length&&(H=Object.values(k)),await Promise.all(H),I("event",d,u||{})}catch(H){nI.error(H)}}(I,k,i,d,u)}else if("config"===u){const[u,H]=Y;await async function(I,k,i,d,u,H){const Y=d[u];try{if(Y)await k[Y];else{const I=(await FI(i)).find((I=>I.measurementId===u));I&&await k[I.appId]}}catch(x){nI.error(x)}I("config",u,H)}(I,k,i,d,u,H)}else if("consent"===u){const[k]=Y;I("consent","update",k)}else if("get"===u){const[k,i,d]=Y;I("get",k,i,d)}else if("set"===u){const[k]=Y;I("set",k)}else I(u,...Y)}catch(j){nI.error(j)}}}const GI=new class{constructor(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=I,this.intervalMillis=k}getThrottleMetadata(I){return this.throttleMetadata[I]}setThrottleMetadata(I,k){this.throttleMetadata[I]=k}deleteThrottleMetadata(I){delete this.throttleMetadata[I]}};function VI(I){return new Headers({Accept:"application/json","x-goog-api-key":I})}async function wI(I){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:GI,i=arguments.length>2?arguments[2]:void 0;const{appId:d,apiKey:u,measurementId:H}=I.options;if(!d)throw bI.create("no-app-id");if(!u){if(H)return{measurementId:H,appId:d};throw bI.create("no-api-key")}const Y=k.getThrottleMetadata(d)||{backoffCount:0,throttleEndTimeMillis:Date.now()},x=new QI;return setTimeout((async()=>{x.abort()}),void 0!==i?i:6e4),rI({appId:d,apiKey:u,measurementId:H},Y,x,k)}async function rI(I,k,i){let{throttleEndTimeMillis:d,backoffCount:u}=k,Y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:GI;var x;const{appId:j,measurementId:l}=I;try{await function(I,k){return new Promise(((i,d)=>{const u=Math.max(k-Date.now(),0),H=setTimeout(i,u);I.addEventListener((()=>{clearTimeout(H),d(bI.create("fetch-throttle",{throttleEndTimeMillis:k}))}))}))}(i,d)}catch(g){if(l)return nI.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${l} provided in the "measurementId" field in the local Firebase config. [${null===g||void 0===g?void 0:g.message}]`),{appId:j,measurementId:l};throw g}try{const k=await async function(I){var k;const{appId:i,apiKey:d}=I,u={method:"GET",headers:VI(d)},H="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",i),Y=await fetch(H,u);if(200!==Y.status&&304!==Y.status){let I="";try{const i=await Y.json();(null===(k=i.error)||void 0===k?void 0:k.message)&&(I=i.error.message)}catch(x){}throw bI.create("config-fetch-failed",{httpStatus:Y.status,responseMessage:I})}return Y.json()}(I);return Y.deleteThrottleMetadata(j),k}catch(g){const k=g;if(!function(I){if(!(I instanceof H.f)||!I.customData)return!1;const k=Number(I.customData.httpStatus);return 429===k||500===k||503===k||504===k}(k)){if(Y.deleteThrottleMetadata(j),l)return nI.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${l} provided in the "measurementId" field in the local Firebase config. [${null===k||void 0===k?void 0:k.message}]`),{appId:j,measurementId:l};throw g}const d=503===Number(null===(x=null===k||void 0===k?void 0:k.customData)||void 0===x?void 0:x.httpStatus)?(0,H.q)(u,Y.intervalMillis,30):(0,H.q)(u,Y.intervalMillis),P={throttleEndTimeMillis:Date.now()+d,backoffCount:u+1};return Y.setThrottleMetadata(j,P),nI.debug(`Calling attemptFetch again in ${d} millis`),rI(I,P,i,Y)}}class QI{constructor(){this.listeners=[]}addEventListener(I){this.listeners.push(I)}abort(){this.listeners.forEach((I=>I()))}}let tI,aI;function vI(I){aI=I}function RI(I){tI=I}async function EI(I,k,i,d,u,Y,x){var j;const l=wI(I);l.then((k=>{i[k.measurementId]=k.appId,I.options.measurementId&&k.measurementId!==I.options.measurementId&&nI.warn(`The measurement ID in the local Firebase config (${I.options.measurementId}) does not match the measurement ID fetched from the server (${k.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((I=>nI.error(I))),k.push(l);const g=async function(){if(!(0,H.R)())return nI.warn(bI.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,H.bb)()}catch(I){return nI.warn(bI.create("indexeddb-unavailable",{errorInfo:null===I||void 0===I?void 0:I.toString()}).message),!1}return!0}().then((I=>I?d.getId():void 0)),[P,J]=await Promise.all([l,g]);(function(I){const k=window.document.getElementsByTagName("script");for(const i of Object.values(k))if(i.src&&i.src.includes(ZI)&&i.src.includes(I))return i;return null})(Y)||TI(Y,P.measurementId),aI&&(u("consent","default",aI),vI(void 0)),u("ma",new Date);const L=null!==(j=null===x||void 0===x?void 0:x.config)&&void 0!==j?j:{};return L.origin="firebase",L.update=!0,null!=J&&(L.firebase_id=J),u("config",P.measurementId,L),tI&&(u("set",tI),RI(void 0)),P.measurementId}class OI{constructor(I){this.app=I}_delete(){return delete fI[this.app.options.appId],Promise.resolve()}}let fI={},CI=[];const eI={};let XI,pI,DI="dataLayer",AI="gtag",cI=!1;function SI(I){if(cI)throw bI.create("already-initialized");I.dataLayerName&&(DI=I.dataLayerName),I.gtagName&&(AI=I.gtagName)}function zI(I,k,i){!function(){const I=[];if((0,H.L)()&&I.push("This is a browser extension environment."),(0,H.h)()||I.push("Cookies are not available."),I.length>0){const k=I.map(((I,k)=>`(${k+1}) ${I}`)).join(" "),i=bI.create("invalid-analytics-context",{errorInfo:k});nI.warn(i.message)}}();const d=I.options.appId;if(!d)throw bI.create("no-app-id");if(!I.options.apiKey){if(!I.options.measurementId)throw bI.create("no-api-key");nI.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${I.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=fI[d])throw bI.create("already-exists",{id:d});if(!cI){!function(I){let k=[];Array.isArray(window[I])?k=window[I]:window[I]=k}(DI);const{wrappedGtag:I,gtagCore:k}=function(I,k,i,d,u){let H=function(){for(var I=arguments.length,k=new Array(I),i=0;i<I;i++)k[i]=arguments[i];window[d].push(arguments)};return window[u]&&"function"===typeof window[u]&&(H=window[u]),window[u]=WI(H,I,k,i),{gtagCore:H,wrappedGtag:window[u]}}(fI,CI,eI,DI,AI);pI=I,XI=k,cI=!0}fI[d]=EI(I,CI,eI,k,XI,DI,i);return new OI(I)}function mI(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,d.L)();I=(0,H.H)(I);const k=(0,d.v)(I,hI);return k.isInitialized()?k.getImmediate():KI(I)}function KI(I){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=(0,d.v)(I,hI);if(i.isInitialized()){const I=i.getImmediate();if((0,H.x)(k,i.getOptions()))return I;throw bI.create("already-initialized")}return i.initialize({options:k})}async function UI(){if((0,H.L)())return!1;if(!(0,H.h)())return!1;if(!(0,H.R)())return!1;try{return await(0,H.bb)()}catch(I){return!1}}function qI(I,k,i){I=(0,H.H)(I),async function(I,k,i,d){if(d&&d.global)return I("set",{screen_name:i}),Promise.resolve();I("config",await k,{update:!0,screen_name:i})}(pI,fI[I.app.options.appId],k,i).catch((I=>nI.error(I)))}async function NI(I){return I=(0,H.H)(I),async function(I,k){const i=await k;return new Promise(((k,d)=>{I("get",i,"client_id",(I=>{I||d(bI.create("no-client-id")),k(I)}))}))}(pI,fI[I.app.options.appId])}function yI(I,k,i){I=(0,H.H)(I),async function(I,k,i,d){if(d&&d.global)return I("set",{user_id:i}),Promise.resolve();I("config",await k,{update:!0,user_id:i})}(pI,fI[I.app.options.appId],k,i).catch((I=>nI.error(I)))}function MI(I,k,i){I=(0,H.H)(I),async function(I,k,i,d){if(d&&d.global){const k={};for(const I of Object.keys(i))k[`user_properties.${I}`]=i[I];return I("set",k),Promise.resolve()}I("config",await k,{update:!0,user_properties:i})}(pI,fI[I.app.options.appId],k,i).catch((I=>nI.error(I)))}function Ik(I,k){I=(0,H.H)(I),async function(I,k){const i=await I;window[`ga-disable-${i}`]=!k}(fI[I.app.options.appId],k).catch((I=>nI.error(I)))}function kk(I){pI?pI("set",I):RI(I)}function ik(I,k,i,d){I=(0,H.H)(I),async function(I,k,i,d,u){if(u&&u.global)I("event",i,d);else{const u=await k;I("event",i,Object.assign(Object.assign({},d),{send_to:u}))}}(pI,fI[I.app.options.appId],k,i,d).catch((I=>nI.error(I)))}function dk(I){pI?pI("consent","update",I):vI(I)}const uk="@firebase/analytics",Hk="0.10.0";(0,d.y)(new Y.d(hI,((I,k)=>{let{options:i}=k;return zI(I.getProvider("app").getImmediate(),I.getProvider("installations-internal").getImmediate(),i)}),"PUBLIC")),(0,d.y)(new Y.d("analytics-internal",(function(I){try{const k=I.getProvider(hI).getImmediate();return{logEvent:(I,i,d)=>ik(k,I,i,d)}}catch(k){throw bI.create("interop-component-reg-failed",{reason:k})}}),"PRIVATE")),(0,d.P)(uk,Hk),(0,d.P)(uk,Hk,"esm2017")}}]);