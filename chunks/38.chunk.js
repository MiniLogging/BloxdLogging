"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13462:(O,f,y)=>{y.r(f),y.d(f,{AnimationGroup:()=>B,TargetedAnimation:()=>w});var S=y(12209),H=y(11004),b=y(11042),h=y(11317),v=y(12207),N=y(11324);class m{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(O,f,y,H){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=f,this._target=O,this._scene=y,this._host=H,this._activeTargets=[],f._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===S.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=N.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const O={frame:0,value:this._minValue};this._keys.splice(0,0,O)}if(this._target instanceof Array){let O=0;for(const f of this._target)this._preparePath(f,O),this._getOriginalValues(O),O++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const b=f.getEvents();b&&b.length>0&&b.forEach((O=>{this._events.push(O._clone())})),this._enableBlending=O&&O.animationPropertiesOverride?O.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(O){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const y=this._animation.targetPropertyPath;if(y.length>1){let S=O;for(let O=0;O<y.length-1;O++){const f=y[O];if(S=S[f],void 0===S)throw new Error(`Invalid property (${f}) in property path (${y.join(".")})`)}this._targetPath=y[y.length-1],this._activeTargets[f]=S}else this._targetPath=y[0],this._activeTargets[f]=O;if(void 0===this._activeTargets[f][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${y.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let O=0;for(const f of this._target)void 0!==this._originalValue[O]&&this._setValue(f,this._activeTargets[O],this._originalValue[O],-1,O),O++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let O=0;O<this._events.length;O++)this._events[O].isDone=!1}isStopped(){return this._stopped}dispose(){const O=this._animation.runtimeAnimations.indexOf(this);O>-1&&this._animation.runtimeAnimations.splice(O,1)}setValue(O,f){if(this._targetIsArray)for(let y=0;y<this._target.length;y++){const S=this._target[y];this._setValue(S,this._activeTargets[y],O,f,y)}else this._setValue(this._target,this._directTarget,O,f,0)}_getOriginalValues(){let O,f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const y=this._activeTargets[f];O=y.getLocalMatrix&&"_matrix"===this._targetPath?y.getLocalMatrix():y[this._targetPath],O&&O.clone?this._originalValue[f]=O.clone():this._originalValue[f]=O}_registerTargetForLateAnimationBinding(O,f){const y=O.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(y),y._lateAnimationHolders||(y._lateAnimationHolders={}),y._lateAnimationHolders[O.targetPath]||(y._lateAnimationHolders[O.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:f}),O.isAdditive?(y._lateAnimationHolders[O.targetPath].additiveAnimations.push(O),y._lateAnimationHolders[O.targetPath].totalAdditiveWeight+=O.weight):(y._lateAnimationHolders[O.targetPath].animations.push(O),y._lateAnimationHolders[O.targetPath].totalWeight+=O.weight)}_setValue(O,f,y,H,b){if(this._currentActiveTarget=f,this._weight=H,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const O=f[this._targetPath];O.clone?this._originalBlendValue=O.clone():this._originalBlendValue=O}this._originalBlendValue.m?S.d.AllowMatrixDecomposeForInterpolation?this._currentValue?N.b.DecomposeLerpToRef(this._originalBlendValue,y,this._blendingFactor,this._currentValue):this._currentValue=N.b.DecomposeLerp(this._originalBlendValue,y,this._blendingFactor):this._currentValue?N.b.LerpToRef(this._originalBlendValue,y,this._blendingFactor,this._currentValue):this._currentValue=N.b.Lerp(this._originalBlendValue,y,this._blendingFactor):this._currentValue=S.d._UniversalLerp(this._originalBlendValue,y,this._blendingFactor);const H=O&&O.animationPropertiesOverride?O.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=H}else this._currentValue?this._currentValue.p?this._currentValue.p(y):this._currentValue=y:null!==y&&void 0!==y&&y.clone?this._currentValue=y.clone():this._currentValue=y;-1!==H?this._registerTargetForLateAnimationBinding(this,this._originalValue[b]):this._animationState.loopMode===S.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[b],f[this._targetPath]):f[this._targetPath]=this._originalValue[b]+this._currentValue:f[this._targetPath]=this._currentValue,O.Dg&&O.Dg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(O){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const y=this._animation.getKeys();O<y[0].frame?O=y[0].frame:O>y[y.length-1].frame&&(O=y[y.length-1].frame);const S=this._events;if(S.length)for(let b=0;b<S.length;b++)S[b].onlyOnce||(S[b].isDone=S[b].frame<O);this._currentFrame=O;const H=this._animation._interpolate(O,this._animationState);this.setValue(H,f)}_prepareForSpeedRatioChange(O){const f=this._previousElapsedTime*(this._animation.framePerSecond*O)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-f}animate(O,f,y,H,b){let h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const v=this._animation,N=v.targetPropertyPath;if(!N||N.length<1)return this._stopped=!0,!1;let m=!0;(f<this._minFrame||f>this._maxFrame)&&(f=this._minFrame),(y<this._minFrame||y>this._maxFrame)&&(y=this._maxFrame);const t=y-f;let q,F=O*(v.framePerSecond*b)/1e3+this._absoluteFrameOffset,I=0,A=!1;const J=H&&this._animationState.loopMode===S.d.ANIMATIONLOOPMODE_YOYO;if(J){const O=(F-f)/t,y=Math.sin(O*Math.PI);F=Math.abs(y)*t+f;const S=y>=0?1:-1;this._yoyoDirection!==S&&(A=!0),this._yoyoDirection=S}if(this._previousElapsedTime=O,this._previousAbsoluteFrame=F,!H&&y>=f&&(F>=t&&b>0||F<=0&&b<0))m=!1,I=v._getKeyValue(this._maxValue);else if(!H&&f>=y&&(F<=t&&b<0||F>=0&&b>0))m=!1,I=v._getKeyValue(this._minValue);else if(this._animationState.loopMode!==S.d.ANIMATIONLOOPMODE_CYCLE){const O=y.toString()+f.toString();if(!this._offsetsCache[O]){this._animationState.repeatCount=0,this._animationState.loopMode=S.d.ANIMATIONLOOPMODE_CYCLE;const H=v._interpolate(f,this._animationState),b=v._interpolate(y,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),v.dataType){case S.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[O]=b-H;break;case S.d.ANIMATIONTYPE_QUATERNION:case S.d.ANIMATIONTYPE_VECTOR3:case S.d.ANIMATIONTYPE_VECTOR2:case S.d.ANIMATIONTYPE_SIZE:case S.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[O]=b.xc(H)}this._highLimitsCache[O]=b}I=this._highLimitsCache[O],q=this._offsetsCache[O]}if(void 0===q)switch(v.dataType){case S.d.ANIMATIONTYPE_FLOAT:q=0;break;case S.d.ANIMATIONTYPE_QUATERNION:q=S.h;break;case S.d.ANIMATIONTYPE_VECTOR3:q=S.p;break;case S.d.ANIMATIONTYPE_VECTOR2:q=S.l;break;case S.d.ANIMATIONTYPE_SIZE:q=S.k;break;case S.d.ANIMATIONTYPE_COLOR3:q=S.e;break;case S.d.ANIMATIONTYPE_COLOR4:q=S.g}let X;if(this._host&&this._host.syncRoot){const O=this._host.syncRoot;X=f+t*((O.masterFrame-O.fromFrame)/(O.toFrame-O.fromFrame))}else X=F>0&&f>y||F<0&&f<y?m&&0!==t?y+F%t:f:m&&0!==t?f+F%t:y;const w=this._events;if(!J&&(b>0&&this.currentFrame>X||b<0&&this.currentFrame<X)||J&&A){this._onLoop();for(let O=0;O<w.length;O++)w[O].onlyOnce||(w[O].isDone=!1);this._animationState.key=b>0?0:v.getKeys().length-1}this._currentFrame=X,this._animationState.repeatCount=0===t?0:F/t|0,this._animationState.highLimitValue=I,this._animationState.offsetValue=q;const B=v._interpolate(X,this._animationState);if(this.setValue(B,h),w.length)for(let S=0;S<w.length;S++)if(t>=0&&X>=w[S].frame&&w[S].frame>=f||t<0&&X<=w[S].frame&&w[S].frame<=f){const O=w[S];O.isDone||(O.onlyOnce&&(w.splice(S,1),S--),O.isDone=!0,O.action(X))}return m||(this._stopped=!0),m}}var t=y(11028);class q{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(O){this._weight=-1!==O?Math.min(Math.max(O,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(O){for(let f=0;f<this._runtimeAnimations.length;f++){this._runtimeAnimations[f]._prepareForSpeedRatioChange(O)}this._speedRatio=O,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(O,f){let y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,b=arguments.length>4&&void 0!==arguments[4]&&arguments[4],h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,v=arguments.length>6?arguments[6]:void 0,N=arguments.length>7?arguments[7]:void 0,m=arguments.length>8?arguments[8]:void 0,t=arguments.length>9&&void 0!==arguments[9]&&arguments[9],q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=f,this.fromFrame=y,this.toFrame=S,this.loopAnimation=b,this.onAnimationEnd=v,this.onAnimationLoop=m,this.isAdditive=t,this.playOrder=q,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.pd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new H.d,this.onAnimationLoopObservable=new H.d,this._scene=O,N&&this.appendAnimations(f,N),this._speedRatio=h,O._activeAnimatables.push(this)}syncWith(O){if(this._syncRoot=O,O){const O=this._scene._activeAnimatables.indexOf(this);O>-1&&(this._scene._activeAnimatables.splice(O,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(O,f){for(let y=0;y<f.length;y++){const S=f[y],H=new m(O,S,this._scene,this);H._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(H)}}getAnimationByTargetProperty(O){const f=this._runtimeAnimations;for(let y=0;y<f.length;y++)if(f[y].animation.targetProperty===O)return f[y].animation;return null}getRuntimeAnimationByTargetProperty(O){const f=this._runtimeAnimations;for(let y=0;y<f.length;y++)if(f[y].animation.targetProperty===O)return f[y];return null}reset(){const O=this._runtimeAnimations;for(let f=0;f<O.length;f++)O[f].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(O){const f=this._runtimeAnimations;for(let y=0;y<f.length;y++)f[y].animation.enableBlending=!0,f[y].animation.blendingSpeed=O}disableBlending(){const O=this._runtimeAnimations;for(let f=0;f<O.length;f++)O[f].animation.enableBlending=!1}goToFrame(O){const f=this._runtimeAnimations;if(f[0]){const y=f[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??f[0].currentFrame;const S=0===this.speedRatio?0:(O-this._frameToSyncFromJump)/y*1e3/this.speedRatio;this._manualJumpDelay=-S}for(let y=0;y<f.length;y++)f[y].goToFrame(O,this._weight);this._goToFrame=O}get paused(){return this.pd}pause(){this.pd||(this.pd=!0)}restart(){this.pd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(O,f){let y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(O||f){const H=this._scene._activeAnimatables.indexOf(this);if(H>-1){const b=this._runtimeAnimations;for(let y=b.length-1;y>=0;y--){const S=b[y];O&&S.animation.name!=O||(f&&!f(S.target)||(S.dispose(),b.splice(y,1)))}0==b.length&&(y||this._scene._activeAnimatables.splice(H,1),S||this._raiseOnAnimationEnd())}}else{const O=this._scene._activeAnimatables.indexOf(this);if(O>-1){y||this._scene._activeAnimatables.splice(O,1);const f=this._runtimeAnimations;for(let O=0;O<f.length;O++)f[O].dispose();this._runtimeAnimations.length=0,S||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((O=>{this.onAnimationEndObservable.add((()=>{O(this)}),void 0,void 0,this,!0)}))}_animate(O){if(this.pd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=O),!0;if(null===this._localDelayOffset?(this._localDelayOffset=O,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=O-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let f=!1;const y=this._runtimeAnimations;let S;for(S=0;S<y.length;S++){const H=y[S].animate(O-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);f=f||H}if(this.animationStarted=f,!f){if(this.disposeOnEnd)for(S=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(S,1),S=0;S<y.length;S++)y[S].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return f}}function F(O){if(0===O.totalWeight&&0===O.totalAdditiveWeight)return O.originalValue;let f=1;const y=N.g.fb[0],S=N.g.fb[1],H=N.g.Quaternion[0];let b=0;const h=O.animations[0],v=O.originalValue;let m=1,t=!1;if(O.totalWeight<1)m=1-O.totalWeight,v.decompose(S,H,y);else{if(b=1,f=O.totalWeight,m=h.weight/f,1==m){if(!O.totalAdditiveWeight)return h.currentValue;t=!0}h.currentValue.decompose(S,H,y)}if(!t){S.scaleInPlace(m),y.scaleInPlace(m),H.scaleInPlace(m);for(let h=b;h<O.animations.length;h++){const b=O.animations[h];if(0===b.weight)continue;m=b.weight/f;const v=N.g.fb[2],t=N.g.fb[3],q=N.g.Quaternion[1];b.currentValue.decompose(t,q,v),t.scaleAndAddToRef(m,S),q.scaleAndAddToRef(N.c.Dot(H,q)>0?m:-m,H),v.scaleAndAddToRef(m,y)}H.normalize()}for(let F=0;F<O.additiveAnimations.length;F++){const f=O.additiveAnimations[F];if(0===f.weight)continue;const b=N.g.fb[2],h=N.g.fb[3],v=N.g.Quaternion[1];f.currentValue.decompose(h,v,b),h.multiplyToRef(S,h),N.m.LerpToRef(S,h,f.weight,S),H.multiplyToRef(v,v),N.c.SlerpToRef(H,v,f.weight,H),b.scaleAndAddToRef(f.weight,y)}const q=h?h._animationState.workValue:N.g.Matrix[0].clone();return N.b.ComposeToRef(S,H,y,q),q}function I(O,f){if(0===O.totalWeight&&0===O.totalAdditiveWeight)return f;const y=O.animations[0],S=O.originalValue;let H=f;if(0===O.totalWeight&&O.totalAdditiveWeight>0)H.p(S);else if(1===O.animations.length){if(N.c.SlerpToRef(S,y.currentValue,Math.min(1,O.totalWeight),H),0===O.totalAdditiveWeight)return H}else if(O.animations.length>1){let y,b,h=1;if(O.totalWeight<1){const f=1-O.totalWeight;y=[],b=[],y.push(S),b.push(f)}else{if(2===O.animations.length&&(N.c.SlerpToRef(O.animations[0].currentValue,O.animations[1].currentValue,O.animations[1].weight/O.totalWeight,f),0===O.totalAdditiveWeight))return f;y=[],b=[],h=O.totalWeight}for(let f=0;f<O.animations.length;f++){const S=O.animations[f];y.push(S.currentValue),b.push(S.weight/h)}let v=0;for(let O=0;O<y.length;)O?(v+=b[O],N.c.SlerpToRef(H,y[O],b[O]/v,H),O++):(N.c.SlerpToRef(y[O],y[O+1],b[O+1]/(b[O]+b[O+1]),f),H=f,v=b[O]+b[O+1],O+=2)}for(let b=0;b<O.additiveAnimations.length;b++){const f=O.additiveAnimations[b];0!==f.weight&&(H.multiplyToRef(f.currentValue,N.g.Quaternion[0]),N.c.SlerpToRef(H,N.g.Quaternion[0],f.weight,H))}return H}var A,J,X=y(11311);A=X.c,(J=v.b)&&(J.prototype.copyAnimationRange=function(O,f,y){let H=arguments.length>3&&void 0!==arguments[3]&&arguments[3],b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new S.d(this.name,"_matrix",O.animations[0].framePerSecond,S.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const h=O.animations[0].getRange(f);if(!h)return!1;const v=h.from,N=h.to,m=O.animations[0].getKeys(),t=O.length,q=O.getParent(),F=this.getParent(),I=H&&q&&t&&this.length&&t!==this.length,A=I&&F&&q?F.length/q.length:1,J=H&&!F&&b&&(1!==b.x||1!==b.y||1!==b.z),X=this.animations[0].getKeys();let w,B,j;for(let S=0,u=m.length;S<u;S++)w=m[S],w.frame>=v&&w.frame<=N&&(H?(j=w.value.clone(),I?(B=j.getTranslation(),j.setTranslation(B.scaleInPlace(A))):J&&b?(B=j.getTranslation(),j.setTranslation(B.multiplyInPlace(b))):j=w.value):j=w.value,X.push({frame:w.frame+y,value:j}));return this.animations[0].createRange(f,v+y,N+y),!0}),A&&(A.prototype._animate=function(O){if(!this.animationsEnabled)return;const f=t.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=f}this.deltaTime=void 0!==O?O:this.useConstantAnimationDeltaTime?16:(f-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=f;const y=this._activeAnimatables;if(0===y.length)return;this._animationTime+=this.deltaTime;const H=this._animationTime;for(let S=0;S<y.length;S++){const O=y[S];!O._animate(H)&&O.disposeOnEnd&&S--}!function(O){if(O._registeredForLateAnimationBindings.length){for(let f=0;f<O._registeredForLateAnimationBindings.length;f++){const y=O._registeredForLateAnimationBindings.data[f];for(const O in y._lateAnimationHolders){const f=y._lateAnimationHolders[O],H=f.animations[0],b=f.originalValue;if(void 0===b||null===b)continue;const h=S.d.AllowMatrixDecomposeForInterpolation&&b.m;let v=y[O];if(h)v=F(f);else if(void 0!==b.w)v=I(f,v||N.c.Identity());else{let O=0,y=1;const h=H&&H._animationState.loopMode===S.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(f.totalWeight<1)v=h?b.clone?b.clone():b:H&&b.scale?b.scale(1-f.totalWeight):H?b*(1-f.totalWeight):b.clone?b.clone():b;else if(H){y=f.totalWeight;const S=H.weight/y;v=1!==S?H.currentValue.scale?H.currentValue.scale(S):H.currentValue*S:H.currentValue,h&&(v.addToRef?v.addToRef(b,v):v+=b),O=1}for(let S=O;S<f.animations.length;S++){const O=f.animations[S],H=O.weight/y;H&&(O.currentValue.scaleAndAddToRef?O.currentValue.scaleAndAddToRef(H,v):v+=O.currentValue*H)}for(let S=0;S<f.additiveAnimations.length;S++){const O=f.additiveAnimations[S],y=O.weight;y&&(O.currentValue.scaleAndAddToRef?O.currentValue.scaleAndAddToRef(y,v):v+=O.currentValue*y)}}y[O]=v}y._lateAnimationHolders={}}O._registeredForLateAnimationBindings.reset()}}(this)},A.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((O,f)=>O.playOrder-f.playOrder))},A.prototype.beginWeightedAnimation=function(O,f,y){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,H=arguments.length>4?arguments[4]:void 0,b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,v=arguments.length>7?arguments[7]:void 0,N=arguments.length>8?arguments[8]:void 0,m=arguments.length>9?arguments[9]:void 0,t=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const q=this.beginAnimation(O,f,y,H,b,h,v,!1,N,m,t);return q.weight=S,q},A.prototype.beginAnimation=function(O,f,y,S){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,b=arguments.length>5?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0,v=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],N=arguments.length>8?arguments[8]:void 0,m=arguments.length>9?arguments[9]:void 0,t=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(H<0){const O=f;f=y,y=O,H=-H}f>y&&(H=-H),v&&this.stopAnimation(O,void 0,N),h||(h=new q(this,O,f,y,S,H,b,void 0,m,t));const F=!N||N(O);if(O.animations&&F&&h.appendAnimations(O,O.animations),O.getAnimatables){const t=O.getAnimatables();for(let O=0;O<t.length;O++)this.beginAnimation(t[O],f,y,S,H,b,h,v,N,m)}return h.reset(),h},A.prototype.beginHierarchyAnimation=function(O,f,y,S,H){let b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,h=arguments.length>6?arguments[6]:void 0,v=arguments.length>7?arguments[7]:void 0,N=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],m=arguments.length>9?arguments[9]:void 0,t=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const q=O.getDescendants(f),F=[];F.push(this.beginAnimation(O,y,S,H,b,h,v,N,m,void 0,t));for(const I of q)F.push(this.beginAnimation(I,y,S,H,b,h,v,N,m,void 0,t));return F},A.prototype.beginDirectAnimation=function(O,f,y,S,H){let b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(b<0){const O=y;y=S,S=O,b=-b}return y>S&&(b=-b),new q(this,O,y,S,H,b,arguments.length>6?arguments[6]:void 0,f,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},A.prototype.beginDirectHierarchyAnimation=function(O,f,y,S,H,b,h,v,N){let m=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const t=O.getDescendants(f),q=[];q.push(this.beginDirectAnimation(O,y,S,H,b,h,v,N,m));for(const F of t)q.push(this.beginDirectAnimation(F,y,S,H,b,h,v,N,m));return q},A.prototype.getAnimatableByTarget=function(O){for(let f=0;f<this._activeAnimatables.length;f++)if(this._activeAnimatables[f].target===O)return this._activeAnimatables[f];return null},A.prototype.getAllAnimatablesByTarget=function(O){const f=[];for(let y=0;y<this._activeAnimatables.length;y++)this._activeAnimatables[y].target===O&&f.push(this._activeAnimatables[y]);return f},A.prototype.stopAnimation=function(O,f,y){const S=this.getAllAnimatablesByTarget(O);for(const H of S)H.stop(f,y)},A.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let O=0;O<this._activeAnimatables.length;O++)this._activeAnimatables[O].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const O of this.animationGroups)O.stop()});class w{getClassName(){return"TargetedAnimation"}serialize(){const O={};return O.animation=this.animation.serialize(),O.targetId=this.target.id,O}}class B{get mask(){return this._mask}set mask(O){this._mask!==O&&(this._mask=O,this.syncWithMask(!0))}syncWithMask(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||O){this._numActiveAnimatables=0;for(let O=0;O<this._animatables.length;++O){const f=this._animatables[O];!this.mask||this.mask.disabled||this.mask.retainsTarget(f.target.name)?(this._numActiveAnimatables++,f.paused&&f.restart()):f.paused||f.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let O=0;O<this._animatables.length;++O){const f=this._animatables[O];this.mask.retainsTarget(f.target.name)||(f.stop(),this._animatables.splice(O,1),--O)}for(let O=0;O<this._targetedAnimations.length;O++){const f=this._targetedAnimations[O];this.mask.retainsTarget(f.target.name)||(this._targetedAnimations.splice(O,1),--O)}}}get from(){return this._from}set from(O){if(this._from!==O){this._from=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].fromFrame=this._from}}}get to(){return this._to}set to(O){if(this._to!==O){this._to=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(O){if(this._speedRatio!==O){this._speedRatio=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(O){if(this._loopAnimation!==O){this._loopAnimation=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(O){if(this._isAdditive!==O){this._isAdditive=O;for(let O=0;O<this._animatables.length;O++){this._animatables[O].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(O){this._weight!==O&&(this._weight=O,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(O){if(this._playOrder!==O&&(this._playOrder=O,this._animatables.length>0)){for(let O=0;O<this._animatables.length;O++)this._animatables[O].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(O){if(this._enableBlending!==O&&(this._enableBlending=O,null!==O))for(let f=0;f<this._targetedAnimations.length;++f)this._targetedAnimations[f].animation.enableBlending=O}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(O){if(this._blendingSpeed!==O&&(this._blendingSpeed=O,null!==O))for(let f=0;f<this._targetedAnimations.length;++f)this._targetedAnimations[f].animation.blendingSpeed=O}getLength(O,f){O=O??this._from;return((f=f??this._to)-O)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(O){let f=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],S=arguments.length>3?arguments[3]:void 0;if(0===O.length)return null;S=S??O[0].weight;let H=Number.MAX_VALUE,b=-Number.MAX_VALUE;if(y)for(const v of O)v.from<H&&(H=v.from),v.to>b&&(b=v.to);const h=new B(O[0].name+"_merged",O[0]._scene,S);for(const v of O){y&&v.normalize(H,b);for(const O of v.targetedAnimations)h.addTargetedAnimation(O.animation,O.target);f&&v.dispose()}return h}constructor(O){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=O,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new H.d,this.onAnimationLoopObservable=new H.d,this.onAnimationGroupLoopObservable=new H.d,this.onAnimationGroupEndObservable=new H.d,this.onAnimationGroupPauseObservable=new H.d,this.onAnimationGroupPlayObservable=new H.d,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=f||b.c.LastCreatedScene,this._weight=y,this._playOrder=S,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(O,f){const y=new w;y.animation=O,y.target=f;const S=O.getKeys();return this._from>S[0].frame&&(this._from=S[0].frame),this._to<S[S.length-1].frame&&(this._to=S[S.length-1].frame),null!==this._enableBlending&&(O.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(O.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(y),this._shouldStart=!0,y}removeTargetedAnimation(O){for(let f=this._targetedAnimations.length-1;f>-1;f--){this._targetedAnimations[f].animation===O&&this._targetedAnimations.splice(f,1)}}normalize(){let O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==O&&(O=this._from),null==f&&(f=this._to);for(let y=0;y<this._targetedAnimations.length;y++){const S=this._targetedAnimations[y].animation.getKeys(),H=S[0],b=S[S.length-1];if(H.frame>O){const f={frame:O,value:H.value,inTangent:H.inTangent,outTangent:H.outTangent,interpolation:H.interpolation};S.splice(0,0,f)}if(b.frame<f){const O={frame:f,value:b.value,inTangent:b.inTangent,outTangent:b.outTangent,interpolation:b.interpolation};S.push(O)}}return this._from=O,this._to=f,this}_processLoop(O,f,y){O.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(f),this._animationLoopFlags[y]||(this._animationLoopFlags[y]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0],f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,y=arguments.length>2?arguments[2]:void 0,S=arguments.length>3?arguments[3]:void 0,H=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=O,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let b=0;b<this._targetedAnimations.length;b++){const h=this._targetedAnimations[b],v=this._scene.beginDirectAnimation(h.target,[h.animation],void 0!==y?y:this._from,void 0!==S?S:this._to,O,f,void 0,void 0,void 0!==H?H:this._isAdditive);v.weight=this._weight,v.playOrder=this._playOrder,v.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(h),this._checkAnimationGroupEnded(v)},this._processLoop(v,h,b),this._animatables.push(v)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=f,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let O=0;O<this._animatables.length;O++){this._animatables[O].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(O){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==O&&(this.loopAnimation=O),this.restart()):(this.stop(),this.start(O,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let O=0;O<this._animatables.length;O++){this._animatables[O].reset()}return this}restart(){if(!this._isStarted)return this;for(let O=0;O<this._animatables.length;O++){this._animatables[O].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let O=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const f=this._animatables.slice();for(let S=0;S<f.length;S++)f[S].stop(void 0,void 0,!0,O);let y=0;for(let S=0;S<this._scene._activeAnimatables.length;S++){const f=this._scene._activeAnimatables[S];f._runtimeAnimations.length>0?this._scene._activeAnimatables[y++]=f:O&&this._checkAnimationGroupEnded(f,O)}return this._scene._activeAnimatables.length=y,this._isStarted=!1,this}setWeightForAllAnimatables(O){for(let f=0;f<this._animatables.length;f++){this._animatables[f].weight=O}return this}syncAllAnimationsWith(O){for(let f=0;f<this._animatables.length;f++){this._animatables[f].syncWith(O)}return this}goToFrame(O){if(!this._isStarted)return this;for(let f=0;f<this._animatables.length;f++){this._animatables[f].goToFrame(O)}return this}getCurrentFrame(){var O;return(null===(O=this.animatables[0])||void 0===O?void 0:O.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const O=this._scene.animationGroups.indexOf(this);if(O>-1&&this._scene.animationGroups.splice(O,1),this._parentContainer){const O=this._parentContainer.animationGroups.indexOf(this);O>-1&&this._parentContainer.animationGroups.splice(O,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(O){let f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const y=this._animatables.indexOf(O);y>-1&&this._animatables.splice(y,1),0===this._animatables.length&&(this._isStarted=!1,f||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(O,f){let y=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const S=new B(O||this.name,this._scene,this._weight,this._playOrder);S._from=this.from,S._to=this.to,S._speedRatio=this.speedRatio,S._loopAnimation=this.loopAnimation,S._isAdditive=this.isAdditive,S._enableBlending=this.enableBlending,S._blendingSpeed=this.blendingSpeed,S.metadata=this.metadata,S.mask=this.mask;for(const H of this._targetedAnimations)S.addTargetedAnimation(y?H.animation.clone():H.animation,f?f(H.target):H.target);return S}serialize(){const O={};O.name=this.name,O.from=this.from,O.to=this.to,O.speedRatio=this.speedRatio,O.loopAnimation=this.loopAnimation,O.isAdditive=this.isAdditive,O.weight=this.weight,O.playOrder=this.playOrder,O.enableBlending=this.enableBlending,O.blendingSpeed=this.blendingSpeed,O.targetedAnimations=[];for(let f=0;f<this.targetedAnimations.length;f++){const y=this.targetedAnimations[f];O.targetedAnimations[f]=y.serialize()}return h.d&&h.d.HasTags(this)&&(O.tags=h.d.GetTags(this)),this.metadata&&(O.metadata=this.metadata),O}static Parse(O,f){const y=new B(O.name,f,O.weight,O.playOrder);for(let H=0;H<O.targetedAnimations.length;H++){const b=O.targetedAnimations[H],h=S.d.Parse(b.animation),v=b.targetId;if("influence"===b.animation.property){const O=f.getMorphTargetById(v);O&&y.addTargetedAnimation(h,O)}else{const O=f.getNodeById(v);null!=O&&y.addTargetedAnimation(h,O)}}return h.d&&h.d.AddTagsTo(y,O.tags),null!==O.from&&null!==O.to&&y.normalize(O.from,O.to),void 0!==O.speedRatio&&(y._speedRatio=O.speedRatio),void 0!==O.loopAnimation&&(y._loopAnimation=O.loopAnimation),void 0!==O.isAdditive&&(y._isAdditive=O.isAdditive),void 0!==O.weight&&(y._weight=O.weight),void 0!==O.playOrder&&(y._playOrder=O.playOrder),void 0!==O.enableBlending&&(y._enableBlending=O.enableBlending),void 0!==O.blendingSpeed&&(y._blendingSpeed=O.blendingSpeed),void 0!==O.metadata&&(y.metadata=O.metadata),y}static MakeAnimationAdditive(O,f,y){let H;H="object"===typeof f?f:{referenceFrame:f,range:y,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let b=O;H.cloneOriginalAnimationGroup&&(b=O.clone(H.clonedAnimationGroupName||b.name));const h=b.targetedAnimations;for(let v=0;v<h.length;v++){const O=h[v];O.animation=S.d.MakeAnimationAdditive(O.animation,H)}if(b.isAdditive=!0,H.clipKeys){let O=Number.MAX_VALUE,f=-Number.MAX_VALUE;const y=b.targetedAnimations;for(let S=0;S<y.length;S++){const H=y[S].animation.getKeys();O>H[0].frame&&(O=H[0].frame),f<H[H.length-1].frame&&(f=H[H.length-1].frame)}b._from=O,b._to=f}return b}static ClipKeys(O,f,y,S,H){const b=O.clone(S||O.name);return B.ClipKeysInPlace(b,f,y,H)}static ClipKeysInPlace(O,f,y,S){return B.ClipInPlace(O,f,y,S,!1)}static ClipFrames(O,f,y,S,H){const b=O.clone(S||O.name);return B.ClipFramesInPlace(b,f,y,H)}static ClipFramesInPlace(O,f,y,S){return B.ClipInPlace(O,f,y,S,!0)}static ClipInPlace(O,f,y,S){let H=arguments.length>4&&void 0!==arguments[4]&&arguments[4],b=Number.MAX_VALUE,h=-Number.MAX_VALUE;const v=O.targetedAnimations;for(let N=0;N<v.length;N++){const O=v[N],m=S?O.animation:O.animation.clone();H&&(m.createKeyForFrame(f),m.createKeyForFrame(y));const t=m.getKeys(),q=[];let F=Number.MAX_VALUE;for(let S=0;S<t.length;S++){const O=t[S];if(!H&&S>=f&&S<=y||H&&O.frame>=f&&O.frame<=y){const f={frame:O.frame,value:O.value.clone?O.value.clone():O.value,inTangent:O.inTangent,outTangent:O.outTangent,interpolation:O.interpolation,lockedTangent:O.lockedTangent};F===Number.MAX_VALUE&&(F=f.frame),f.frame-=F,q.push(f)}}0!==q.length?(b>q[0].frame&&(b=q[0].frame),h<q[q.length-1].frame&&(h=q[q.length-1].frame),m.setKeys(q,!0),O.animation=m):(v.splice(N,1),N--)}return O._from=b,O._to=h,O}getClassName(){return"AnimationGroup"}toString(O){let f="Name: "+this.name;return f+=", type: "+this.getClassName(),O&&(f+=", from: "+this._from,f+=", to: "+this._to,f+=", isStarted: "+this._isStarted,f+=", speedRatio: "+this._speedRatio,f+=", targetedAnimations length: "+this._targetedAnimations.length,f+=", animatables length: "+this._animatables),f}}}}]);