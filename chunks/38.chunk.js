"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13216:(K,q,p)=>{p.r(q),p.d(q,{AnimationGroup:()=>E,TargetedAnimation:()=>f});var Z=p(11925),z=p(10701),S=p(10741),X=p(11001),y=p(11917),V=p(11005);class C{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(K,q,p,z){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=q,this._target=K,this._scene=p,this._host=z,this._activeTargets=[],q._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===Z.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=V.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const K={frame:0,value:this._minValue};this._keys.splice(0,0,K)}if(this._target instanceof Array){let K=0;for(const q of this._target)this._preparePath(q,K),this._getOriginalValues(K),K++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const S=q.getEvents();S&&S.length>0&&S.forEach((K=>{this._events.push(K._clone())})),this._enableBlending=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(K){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const p=this._animation.targetPropertyPath;if(p.length>1){let Z=K;for(let K=0;K<p.length-1;K++){const q=p[K];if(Z=Z[q],void 0===Z)throw new Error(`Invalid property (${q}) in property path (${p.join(".")})`)}this._targetPath=p[p.length-1],this._activeTargets[q]=Z}else this._targetPath=p[0],this._activeTargets[q]=K;if(void 0===this._activeTargets[q][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${p.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let K=0;for(const q of this._target)void 0!==this._originalValue[K]&&this._setValue(q,this._activeTargets[K],this._originalValue[K],-1,K),K++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let K=0;K<this._events.length;K++)this._events[K].isDone=!1}isStopped(){return this._stopped}dispose(){const K=this._animation.runtimeAnimations.indexOf(this);K>-1&&this._animation.runtimeAnimations.splice(K,1)}setValue(K,q){if(this._targetIsArray)for(let p=0;p<this._target.length;p++){const Z=this._target[p];this._setValue(Z,this._activeTargets[p],K,q,p)}else this._setValue(this._target,this._directTarget,K,q,0)}_getOriginalValues(){let K,q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const p=this._activeTargets[q];K=p.getLocalMatrix&&"_matrix"===this._targetPath?p.getLocalMatrix():p[this._targetPath],K&&K.clone?this._originalValue[q]=K.clone():this._originalValue[q]=K}_registerTargetForLateAnimationBinding(K,q){const p=K.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(p),p._lateAnimationHolders||(p._lateAnimationHolders={}),p._lateAnimationHolders[K.targetPath]||(p._lateAnimationHolders[K.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:q}),K.isAdditive?(p._lateAnimationHolders[K.targetPath].additiveAnimations.push(K),p._lateAnimationHolders[K.targetPath].totalAdditiveWeight+=K.weight):(p._lateAnimationHolders[K.targetPath].animations.push(K),p._lateAnimationHolders[K.targetPath].totalWeight+=K.weight)}_setValue(K,q,p,z,S){if(this._currentActiveTarget=q,this._weight=z,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const K=q[this._targetPath];K.clone?this._originalBlendValue=K.clone():this._originalBlendValue=K}this._originalBlendValue.m?Z.d.AllowMatrixDecomposeForInterpolation?this._currentValue?V.e.DecomposeLerpToRef(this._originalBlendValue,p,this._blendingFactor,this._currentValue):this._currentValue=V.e.DecomposeLerp(this._originalBlendValue,p,this._blendingFactor):this._currentValue?V.e.LerpToRef(this._originalBlendValue,p,this._blendingFactor,this._currentValue):this._currentValue=V.e.Lerp(this._originalBlendValue,p,this._blendingFactor):this._currentValue=Z.d._UniversalLerp(this._originalBlendValue,p,this._blendingFactor);const z=K&&K.animationPropertiesOverride?K.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=z}else this._currentValue?this._currentValue.p?this._currentValue.p(p):this._currentValue=p:null!==p&&void 0!==p&&p.clone?this._currentValue=p.clone():this._currentValue=p;-1!==z?this._registerTargetForLateAnimationBinding(this,this._originalValue[S]):this._animationState.loopMode===Z.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[S],q[this._targetPath]):q[this._targetPath]=this._originalValue[S]+this._currentValue:q[this._targetPath]=this._currentValue,K.ah&&K.ah(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(K){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const p=this._animation.getKeys();K<p[0].frame?K=p[0].frame:K>p[p.length-1].frame&&(K=p[p.length-1].frame);const Z=this._events;if(Z.length)for(let S=0;S<Z.length;S++)Z[S].onlyOnce||(Z[S].isDone=Z[S].frame<K);this._currentFrame=K;const z=this._animation._interpolate(K,this._animationState);this.setValue(z,q)}_prepareForSpeedRatioChange(K){const q=this._previousElapsedTime*(this._animation.framePerSecond*K)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-q}animate(K,q,p,z,S){let X=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const y=this._animation,V=y.targetPropertyPath;if(!V||V.length<1)return this._stopped=!0,!1;let C=!0;(q<this._minFrame||q>this._maxFrame)&&(q=this._minFrame),(p<this._minFrame||p>this._maxFrame)&&(p=this._maxFrame);const h=p-q;let U,Y=K*(y.framePerSecond*S)/1e3+this._absoluteFrameOffset,k=0,F=!1;const x=z&&this._animationState.loopMode===Z.d.ANIMATIONLOOPMODE_YOYO;if(x){const K=(Y-q)/h,p=Math.sin(K*Math.PI);Y=Math.abs(p)*h+q;const Z=p>=0?1:-1;this._yoyoDirection!==Z&&(F=!0),this._yoyoDirection=Z}if(this._previousElapsedTime=K,this._previousAbsoluteFrame=Y,!z&&p>=q&&(Y>=h&&S>0||Y<=0&&S<0))C=!1,k=y._getKeyValue(this._maxValue);else if(!z&&q>=p&&(Y<=h&&S<0||Y>=0&&S>0))C=!1,k=y._getKeyValue(this._minValue);else if(this._animationState.loopMode!==Z.d.ANIMATIONLOOPMODE_CYCLE){const K=p.toString()+q.toString();if(!this._offsetsCache[K]){this._animationState.repeatCount=0,this._animationState.loopMode=Z.d.ANIMATIONLOOPMODE_CYCLE;const z=y._interpolate(q,this._animationState),S=y._interpolate(p,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),y.dataType){case Z.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[K]=S-z;break;case Z.d.ANIMATIONTYPE_QUATERNION:case Z.d.ANIMATIONTYPE_VECTOR3:case Z.d.ANIMATIONTYPE_VECTOR2:case Z.d.ANIMATIONTYPE_SIZE:case Z.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[K]=S.kd(z)}this._highLimitsCache[K]=S}k=this._highLimitsCache[K],U=this._offsetsCache[K]}if(void 0===U)switch(y.dataType){case Z.d.ANIMATIONTYPE_FLOAT:U=0;break;case Z.d.ANIMATIONTYPE_QUATERNION:U=Z.j;break;case Z.d.ANIMATIONTYPE_VECTOR3:U=Z.n;break;case Z.d.ANIMATIONTYPE_VECTOR2:U=Z.l;break;case Z.d.ANIMATIONTYPE_SIZE:U=Z.k;break;case Z.d.ANIMATIONTYPE_COLOR3:U=Z.f;break;case Z.d.ANIMATIONTYPE_COLOR4:U=Z.g}let t;if(this._host&&this._host.syncRoot){const K=this._host.syncRoot;t=q+h*((K.masterFrame-K.fromFrame)/(K.toFrame-K.fromFrame))}else t=Y>0&&q>p||Y<0&&q<p?C&&0!==h?p+Y%h:q:C&&0!==h?q+Y%h:p;const f=this._events;if(!x&&(S>0&&this.currentFrame>t||S<0&&this.currentFrame<t)||x&&F){this._onLoop();for(let K=0;K<f.length;K++)f[K].onlyOnce||(f[K].isDone=!1);this._animationState.key=S>0?0:y.getKeys().length-1}this._currentFrame=t,this._animationState.repeatCount=0===h?0:Y/h|0,this._animationState.highLimitValue=k,this._animationState.offsetValue=U;const E=y._interpolate(t,this._animationState);if(this.setValue(E,X),f.length)for(let Z=0;Z<f.length;Z++)if(h>=0&&t>=f[Z].frame&&f[Z].frame>=q||h<0&&t<=f[Z].frame&&f[Z].frame<=q){const K=f[Z];K.isDone||(K.onlyOnce&&(f.splice(Z,1),Z--),K.isDone=!0,K.action(t))}return C||(this._stopped=!0),C}}var h=p(10730);class U{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(K){this._weight=-1!==K?Math.min(Math.max(K,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(K){for(let q=0;q<this._runtimeAnimations.length;q++){this._runtimeAnimations[q]._prepareForSpeedRatioChange(K)}this._speedRatio=K,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(K,q){let p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,S=arguments.length>4&&void 0!==arguments[4]&&arguments[4],X=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,y=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,C=arguments.length>8?arguments[8]:void 0,h=arguments.length>9&&void 0!==arguments[9]&&arguments[9],U=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=q,this.fromFrame=p,this.toFrame=Z,this.loopAnimation=S,this.onAnimationEnd=y,this.onAnimationLoop=C,this.isAdditive=h,this.playOrder=U,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Pd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new z.b,this.onAnimationLoopObservable=new z.b,this._scene=K,V&&this.appendAnimations(q,V),this._speedRatio=X,K._activeAnimatables.push(this)}syncWith(K){if(this._syncRoot=K,K){const K=this._scene._activeAnimatables.indexOf(this);K>-1&&(this._scene._activeAnimatables.splice(K,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(K,q){for(let p=0;p<q.length;p++){const Z=q[p],z=new C(K,Z,this._scene,this);z._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(z)}}getAnimationByTargetProperty(K){const q=this._runtimeAnimations;for(let p=0;p<q.length;p++)if(q[p].animation.targetProperty===K)return q[p].animation;return null}getRuntimeAnimationByTargetProperty(K){const q=this._runtimeAnimations;for(let p=0;p<q.length;p++)if(q[p].animation.targetProperty===K)return q[p];return null}reset(){const K=this._runtimeAnimations;for(let q=0;q<K.length;q++)K[q].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(K){const q=this._runtimeAnimations;for(let p=0;p<q.length;p++)q[p].animation.enableBlending=!0,q[p].animation.blendingSpeed=K}disableBlending(){const K=this._runtimeAnimations;for(let q=0;q<K.length;q++)K[q].animation.enableBlending=!1}goToFrame(K){const q=this._runtimeAnimations;if(q[0]){const p=q[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??q[0].currentFrame;const Z=0===this.speedRatio?0:(K-this._frameToSyncFromJump)/p*1e3/this.speedRatio;this._manualJumpDelay=-Z}for(let p=0;p<q.length;p++)q[p].goToFrame(K,this._weight);this._goToFrame=K}get paused(){return this.Pd}pause(){this.Pd||(this.Pd=!0)}restart(){this.Pd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(K,q){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(K||q){const z=this._scene._activeAnimatables.indexOf(this);if(z>-1){const S=this._runtimeAnimations;for(let p=S.length-1;p>=0;p--){const Z=S[p];K&&Z.animation.name!=K||(q&&!q(Z.target)||(Z.dispose(),S.splice(p,1)))}0==S.length&&(p||this._scene._activeAnimatables.splice(z,1),Z||this._raiseOnAnimationEnd())}}else{const K=this._scene._activeAnimatables.indexOf(this);if(K>-1){p||this._scene._activeAnimatables.splice(K,1);const q=this._runtimeAnimations;for(let K=0;K<q.length;K++)q[K].dispose();this._runtimeAnimations.length=0,Z||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((K=>{this.onAnimationEndObservable.add((()=>{K(this)}),void 0,void 0,this,!0)}))}_animate(K){if(this.Pd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=K),!0;if(null===this._localDelayOffset?(this._localDelayOffset=K,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=K-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let q=!1;const p=this._runtimeAnimations;let Z;for(Z=0;Z<p.length;Z++){const z=p[Z].animate(K-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);q=q||z}if(this.animationStarted=q,!q){if(this.disposeOnEnd)for(Z=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(Z,1),Z=0;Z<p.length;Z++)p[Z].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return q}}function Y(K){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return K.originalValue;let q=1;const p=V.h.gb[0],Z=V.h.gb[1],z=V.h.Quaternion[0];let S=0;const X=K.animations[0],y=K.originalValue;let C=1,h=!1;if(K.totalWeight<1)C=1-K.totalWeight,y.decompose(Z,z,p);else{if(S=1,q=K.totalWeight,C=X.weight/q,1==C){if(!K.totalAdditiveWeight)return X.currentValue;h=!0}X.currentValue.decompose(Z,z,p)}if(!h){Z.scaleInPlace(C),p.scaleInPlace(C),z.scaleInPlace(C);for(let X=S;X<K.animations.length;X++){const S=K.animations[X];if(0===S.weight)continue;C=S.weight/q;const y=V.h.gb[2],h=V.h.gb[3],U=V.h.Quaternion[1];S.currentValue.decompose(h,U,y),h.scaleAndAddToRef(C,Z),U.scaleAndAddToRef(V.f.Dot(z,U)>0?C:-C,z),y.scaleAndAddToRef(C,p)}z.normalize()}for(let Y=0;Y<K.additiveAnimations.length;Y++){const q=K.additiveAnimations[Y];if(0===q.weight)continue;const S=V.h.gb[2],X=V.h.gb[3],y=V.h.Quaternion[1];q.currentValue.decompose(X,y,S),X.multiplyToRef(Z,X),V.m.LerpToRef(Z,X,q.weight,Z),z.multiplyToRef(y,y),V.f.SlerpToRef(z,y,q.weight,z),S.scaleAndAddToRef(q.weight,p)}const U=X?X._animationState.workValue:V.h.Matrix[0].clone();return V.e.ComposeToRef(Z,z,p,U),U}function k(K,q){if(0===K.totalWeight&&0===K.totalAdditiveWeight)return q;const p=K.animations[0],Z=K.originalValue;let z=q;if(0===K.totalWeight&&K.totalAdditiveWeight>0)z.p(Z);else if(1===K.animations.length){if(V.f.SlerpToRef(Z,p.currentValue,Math.min(1,K.totalWeight),z),0===K.totalAdditiveWeight)return z}else if(K.animations.length>1){let p,S,X=1;if(K.totalWeight<1){const q=1-K.totalWeight;p=[],S=[],p.push(Z),S.push(q)}else{if(2===K.animations.length&&(V.f.SlerpToRef(K.animations[0].currentValue,K.animations[1].currentValue,K.animations[1].weight/K.totalWeight,q),0===K.totalAdditiveWeight))return q;p=[],S=[],X=K.totalWeight}for(let q=0;q<K.animations.length;q++){const Z=K.animations[q];p.push(Z.currentValue),S.push(Z.weight/X)}let y=0;for(let K=0;K<p.length;)K?(y+=S[K],V.f.SlerpToRef(z,p[K],S[K]/y,z),K++):(V.f.SlerpToRef(p[K],p[K+1],S[K+1]/(S[K]+S[K+1]),q),z=q,y=S[K]+S[K+1],K+=2)}for(let S=0;S<K.additiveAnimations.length;S++){const q=K.additiveAnimations[S];0!==q.weight&&(z.multiplyToRef(q.currentValue,V.h.Quaternion[0]),V.f.SlerpToRef(z,V.h.Quaternion[0],q.weight,z))}return z}var F,x,t=p(10997);F=t.c,(x=y.b)&&(x.prototype.copyAnimationRange=function(K,q,p){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3],S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new Z.d(this.name,"_matrix",K.animations[0].framePerSecond,Z.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const X=K.animations[0].getRange(q);if(!X)return!1;const y=X.from,V=X.to,C=K.animations[0].getKeys(),h=K.length,U=K.getParent(),Y=this.getParent(),k=z&&U&&h&&this.length&&h!==this.length,F=k&&Y&&U?Y.length/U.length:1,x=z&&!Y&&S&&(1!==S.x||1!==S.y||1!==S.z),t=this.animations[0].getKeys();let f,E,m;for(let Z=0,c=C.length;Z<c;Z++)f=C[Z],f.frame>=y&&f.frame<=V&&(z?(m=f.value.clone(),k?(E=m.getTranslation(),m.setTranslation(E.scaleInPlace(F))):x&&S?(E=m.getTranslation(),m.setTranslation(E.multiplyInPlace(S))):m=f.value):m=f.value,t.push({frame:f.frame+p,value:m}));return this.animations[0].createRange(q,y+p,V+p),!0}),F&&(F.prototype._animate=function(K){if(!this.animationsEnabled)return;const q=h.e.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=q}this.deltaTime=void 0!==K?K:this.useConstantAnimationDeltaTime?16:(q-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=q;const p=this._activeAnimatables;if(0===p.length)return;this._animationTime+=this.deltaTime;const z=this._animationTime;for(let Z=0;Z<p.length;Z++){const K=p[Z];!K._animate(z)&&K.disposeOnEnd&&Z--}!function(K){if(K._registeredForLateAnimationBindings.length){for(let q=0;q<K._registeredForLateAnimationBindings.length;q++){const p=K._registeredForLateAnimationBindings.data[q];for(const K in p._lateAnimationHolders){const q=p._lateAnimationHolders[K],z=q.animations[0],S=q.originalValue;if(void 0===S||null===S)continue;const X=Z.d.AllowMatrixDecomposeForInterpolation&&S.m;let y=p[K];if(X)y=Y(q);else if(void 0!==S.w)y=k(q,y||V.f.Identity());else{let K=0,p=1;const X=z&&z._animationState.loopMode===Z.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(q.totalWeight<1)y=X?S.clone?S.clone():S:z&&S.scale?S.scale(1-q.totalWeight):z?S*(1-q.totalWeight):S.clone?S.clone():S;else if(z){p=q.totalWeight;const Z=z.weight/p;y=1!==Z?z.currentValue.scale?z.currentValue.scale(Z):z.currentValue*Z:z.currentValue,X&&(y.addToRef?y.addToRef(S,y):y+=S),K=1}for(let Z=K;Z<q.animations.length;Z++){const K=q.animations[Z],z=K.weight/p;z&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(z,y):y+=K.currentValue*z)}for(let Z=0;Z<q.additiveAnimations.length;Z++){const K=q.additiveAnimations[Z],p=K.weight;p&&(K.currentValue.scaleAndAddToRef?K.currentValue.scaleAndAddToRef(p,y):y+=K.currentValue*p)}}p[K]=y}p._lateAnimationHolders={}}K._registeredForLateAnimationBindings.reset()}}(this)},F.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((K,q)=>K.playOrder-q.playOrder))},F.prototype.beginWeightedAnimation=function(K,q,p){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,z=arguments.length>4?arguments[4]:void 0,S=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,X=arguments.length>6?arguments[6]:void 0,y=arguments.length>7?arguments[7]:void 0,V=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const U=this.beginAnimation(K,q,p,z,S,X,y,!1,V,C,h);return U.weight=Z,U},F.prototype.beginAnimation=function(K,q,p,Z){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,S=arguments.length>5?arguments[5]:void 0,X=arguments.length>6?arguments[6]:void 0,y=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],V=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,h=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(z<0){const K=q;q=p,p=K,z=-z}q>p&&(z=-z),y&&this.stopAnimation(K,void 0,V),X||(X=new U(this,K,q,p,Z,z,S,void 0,C,h));const Y=!V||V(K);if(K.animations&&Y&&X.appendAnimations(K,K.animations),K.getAnimatables){const h=K.getAnimatables();for(let K=0;K<h.length;K++)this.beginAnimation(h[K],q,p,Z,z,S,X,y,V,C)}return X.reset(),X},F.prototype.beginHierarchyAnimation=function(K,q,p,Z,z){let S=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,X=arguments.length>6?arguments[6]:void 0,y=arguments.length>7?arguments[7]:void 0,V=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],C=arguments.length>9?arguments[9]:void 0,h=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const U=K.getDescendants(q),Y=[];Y.push(this.beginAnimation(K,p,Z,z,S,X,y,V,C,void 0,h));for(const k of U)Y.push(this.beginAnimation(k,p,Z,z,S,X,y,V,C,void 0,h));return Y},F.prototype.beginDirectAnimation=function(K,q,p,Z,z){let S=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(S<0){const K=p;p=Z,Z=K,S=-S}return p>Z&&(S=-S),new U(this,K,p,Z,z,S,arguments.length>6?arguments[6]:void 0,q,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},F.prototype.beginDirectHierarchyAnimation=function(K,q,p,Z,z,S,X,y,V){let C=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const h=K.getDescendants(q),U=[];U.push(this.beginDirectAnimation(K,p,Z,z,S,X,y,V,C));for(const Y of h)U.push(this.beginDirectAnimation(Y,p,Z,z,S,X,y,V,C));return U},F.prototype.getAnimatableByTarget=function(K){for(let q=0;q<this._activeAnimatables.length;q++)if(this._activeAnimatables[q].target===K)return this._activeAnimatables[q];return null},F.prototype.getAllAnimatablesByTarget=function(K){const q=[];for(let p=0;p<this._activeAnimatables.length;p++)this._activeAnimatables[p].target===K&&q.push(this._activeAnimatables[p]);return q},F.prototype.stopAnimation=function(K,q,p){const Z=this.getAllAnimatablesByTarget(K);for(const z of Z)z.stop(q,p)},F.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let K=0;K<this._activeAnimatables.length;K++)this._activeAnimatables[K].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const K of this.animationGroups)K.stop()});class f{getClassName(){return"TargetedAnimation"}serialize(){const K={};return K.animation=this.animation.serialize(),K.targetId=this.target.id,K}}class E{get mask(){return this._mask}set mask(K){this._mask!==K&&(this._mask=K,this.syncWithMask(!0))}syncWithMask(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||K){this._numActiveAnimatables=0;for(let K=0;K<this._animatables.length;++K){const q=this._animatables[K];!this.mask||this.mask.disabled||this.mask.retainsTarget(q.target.name)?(this._numActiveAnimatables++,q.paused&&q.restart()):q.paused||q.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let K=0;K<this._animatables.length;++K){const q=this._animatables[K];this.mask.retainsTarget(q.target.name)||(q.stop(),this._animatables.splice(K,1),--K)}for(let K=0;K<this._targetedAnimations.length;K++){const q=this._targetedAnimations[K];this.mask.retainsTarget(q.target.name)||(this._targetedAnimations.splice(K,1),--K)}}}get from(){return this._from}set from(K){if(this._from!==K){this._from=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].fromFrame=this._from}}}get to(){return this._to}set to(K){if(this._to!==K){this._to=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(K){if(this._speedRatio!==K){this._speedRatio=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(K){if(this._loopAnimation!==K){this._loopAnimation=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(K){if(this._isAdditive!==K){this._isAdditive=K;for(let K=0;K<this._animatables.length;K++){this._animatables[K].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(K){this._weight!==K&&(this._weight=K,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(K){if(this._playOrder!==K&&(this._playOrder=K,this._animatables.length>0)){for(let K=0;K<this._animatables.length;K++)this._animatables[K].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(K){if(this._enableBlending!==K&&(this._enableBlending=K,null!==K))for(let q=0;q<this._targetedAnimations.length;++q)this._targetedAnimations[q].animation.enableBlending=K}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(K){if(this._blendingSpeed!==K&&(this._blendingSpeed=K,null!==K))for(let q=0;q<this._targetedAnimations.length;++q)this._targetedAnimations[q].animation.blendingSpeed=K}getLength(K,q){K=K??this._from;return((q=q??this._to)-K)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(K){let q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],p=arguments.length>2&&void 0!==arguments[2]&&arguments[2],Z=arguments.length>3?arguments[3]:void 0;if(0===K.length)return null;Z=Z??K[0].weight;let z=Number.MAX_VALUE,S=-Number.MAX_VALUE;if(p)for(const y of K)y.from<z&&(z=y.from),y.to>S&&(S=y.to);const X=new E(K[0].name+"_merged",K[0]._scene,Z);for(const y of K){p&&y.normalize(z,S);for(const K of y.targetedAnimations)X.addTargetedAnimation(K.animation,K.target);q&&y.dispose()}return X}constructor(K){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=K,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new z.b,this.onAnimationLoopObservable=new z.b,this.onAnimationGroupLoopObservable=new z.b,this.onAnimationGroupEndObservable=new z.b,this.onAnimationGroupPauseObservable=new z.b,this.onAnimationGroupPlayObservable=new z.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=q||S.d.LastCreatedScene,this._weight=p,this._playOrder=Z,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(K,q){const p=new f;p.animation=K,p.target=q;const Z=K.getKeys();return this._from>Z[0].frame&&(this._from=Z[0].frame),this._to<Z[Z.length-1].frame&&(this._to=Z[Z.length-1].frame),null!==this._enableBlending&&(K.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(K.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(p),this._shouldStart=!0,p}removeTargetedAnimation(K){for(let q=this._targetedAnimations.length-1;q>-1;q--){this._targetedAnimations[q].animation===K&&this._targetedAnimations.splice(q,1)}}normalize(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==K&&(K=this._from),null==q&&(q=this._to);for(let p=0;p<this._targetedAnimations.length;p++){const Z=this._targetedAnimations[p].animation.getKeys(),z=Z[0],S=Z[Z.length-1];if(z.frame>K){const q={frame:K,value:z.value,inTangent:z.inTangent,outTangent:z.outTangent,interpolation:z.interpolation};Z.splice(0,0,q)}if(S.frame<q){const K={frame:q,value:S.value,inTangent:S.inTangent,outTangent:S.outTangent,interpolation:S.interpolation};Z.push(K)}}return this._from=K,this._to=q,this}_processLoop(K,q,p){K.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(q),this._animationLoopFlags[p]||(this._animationLoopFlags[p]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,p=arguments.length>2?arguments[2]:void 0,Z=arguments.length>3?arguments[3]:void 0,z=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=K,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let S=0;S<this._targetedAnimations.length;S++){const X=this._targetedAnimations[S],y=this._scene.beginDirectAnimation(X.target,[X.animation],void 0!==p?p:this._from,void 0!==Z?Z:this._to,K,q,void 0,void 0,void 0!==z?z:this._isAdditive);y.weight=this._weight,y.playOrder=this._playOrder,y.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(X),this._checkAnimationGroupEnded(y)},this._processLoop(y,X,S),this._animatables.push(y)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=q,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let K=0;K<this._animatables.length;K++){this._animatables[K].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(K){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==K&&(this.loopAnimation=K),this.restart()):(this.stop(),this.start(K,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].reset()}return this}restart(){if(!this._isStarted)return this;for(let K=0;K<this._animatables.length;K++){this._animatables[K].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const q=this._animatables.slice();for(let Z=0;Z<q.length;Z++)q[Z].stop(void 0,void 0,!0,K);let p=0;for(let Z=0;Z<this._scene._activeAnimatables.length;Z++){const q=this._scene._activeAnimatables[Z];q._runtimeAnimations.length>0?this._scene._activeAnimatables[p++]=q:K&&this._checkAnimationGroupEnded(q,K)}return this._scene._activeAnimatables.length=p,this._isStarted=!1,this}setWeightForAllAnimatables(K){for(let q=0;q<this._animatables.length;q++){this._animatables[q].weight=K}return this}syncAllAnimationsWith(K){for(let q=0;q<this._animatables.length;q++){this._animatables[q].syncWith(K)}return this}goToFrame(K){if(!this._isStarted)return this;for(let q=0;q<this._animatables.length;q++){this._animatables[q].goToFrame(K)}return this}getCurrentFrame(){var K;return(null===(K=this.animatables[0])||void 0===K?void 0:K.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const K=this._scene.animationGroups.indexOf(this);if(K>-1&&this._scene.animationGroups.splice(K,1),this._parentContainer){const K=this._parentContainer.animationGroups.indexOf(this);K>-1&&this._parentContainer.animationGroups.splice(K,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(K){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const p=this._animatables.indexOf(K);p>-1&&this._animatables.splice(p,1),0===this._animatables.length&&(this._isStarted=!1,q||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(K,q){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const Z=new E(K||this.name,this._scene,this._weight,this._playOrder);Z._from=this.from,Z._to=this.to,Z._speedRatio=this.speedRatio,Z._loopAnimation=this.loopAnimation,Z._isAdditive=this.isAdditive,Z._enableBlending=this.enableBlending,Z._blendingSpeed=this.blendingSpeed,Z.metadata=this.metadata,Z.mask=this.mask;for(const z of this._targetedAnimations)Z.addTargetedAnimation(p?z.animation.clone():z.animation,q?q(z.target):z.target);return Z}serialize(){const K={};K.name=this.name,K.from=this.from,K.to=this.to,K.speedRatio=this.speedRatio,K.loopAnimation=this.loopAnimation,K.isAdditive=this.isAdditive,K.weight=this.weight,K.playOrder=this.playOrder,K.enableBlending=this.enableBlending,K.blendingSpeed=this.blendingSpeed,K.targetedAnimations=[];for(let q=0;q<this.targetedAnimations.length;q++){const p=this.targetedAnimations[q];K.targetedAnimations[q]=p.serialize()}return X.b&&X.b.HasTags(this)&&(K.tags=X.b.GetTags(this)),this.metadata&&(K.metadata=this.metadata),K}static Parse(K,q){const p=new E(K.name,q,K.weight,K.playOrder);for(let z=0;z<K.targetedAnimations.length;z++){const S=K.targetedAnimations[z],X=Z.d.Parse(S.animation),y=S.targetId;if("influence"===S.animation.property){const K=q.getMorphTargetById(y);K&&p.addTargetedAnimation(X,K)}else{const K=q.getNodeById(y);null!=K&&p.addTargetedAnimation(X,K)}}return X.b&&X.b.AddTagsTo(p,K.tags),null!==K.from&&null!==K.to&&p.normalize(K.from,K.to),void 0!==K.speedRatio&&(p._speedRatio=K.speedRatio),void 0!==K.loopAnimation&&(p._loopAnimation=K.loopAnimation),void 0!==K.isAdditive&&(p._isAdditive=K.isAdditive),void 0!==K.weight&&(p._weight=K.weight),void 0!==K.playOrder&&(p._playOrder=K.playOrder),void 0!==K.enableBlending&&(p._enableBlending=K.enableBlending),void 0!==K.blendingSpeed&&(p._blendingSpeed=K.blendingSpeed),void 0!==K.metadata&&(p.metadata=K.metadata),p}static MakeAnimationAdditive(K,q,p){let z;z="object"===typeof q?q:{referenceFrame:q,range:p,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let S=K;z.cloneOriginalAnimationGroup&&(S=K.clone(z.clonedAnimationGroupName||S.name));const X=S.targetedAnimations;for(let y=0;y<X.length;y++){const K=X[y];K.animation=Z.d.MakeAnimationAdditive(K.animation,z)}if(S.isAdditive=!0,z.clipKeys){let K=Number.MAX_VALUE,q=-Number.MAX_VALUE;const p=S.targetedAnimations;for(let Z=0;Z<p.length;Z++){const z=p[Z].animation.getKeys();K>z[0].frame&&(K=z[0].frame),q<z[z.length-1].frame&&(q=z[z.length-1].frame)}S._from=K,S._to=q}return S}static ClipKeys(K,q,p,Z,z){const S=K.clone(Z||K.name);return E.ClipKeysInPlace(S,q,p,z)}static ClipKeysInPlace(K,q,p,Z){return E.ClipInPlace(K,q,p,Z,!1)}static ClipFrames(K,q,p,Z,z){const S=K.clone(Z||K.name);return E.ClipFramesInPlace(S,q,p,z)}static ClipFramesInPlace(K,q,p,Z){return E.ClipInPlace(K,q,p,Z,!0)}static ClipInPlace(K,q,p,Z){let z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],S=Number.MAX_VALUE,X=-Number.MAX_VALUE;const y=K.targetedAnimations;for(let V=0;V<y.length;V++){const K=y[V],C=Z?K.animation:K.animation.clone();z&&(C.createKeyForFrame(q),C.createKeyForFrame(p));const h=C.getKeys(),U=[];let Y=Number.MAX_VALUE;for(let Z=0;Z<h.length;Z++){const K=h[Z];if(!z&&Z>=q&&Z<=p||z&&K.frame>=q&&K.frame<=p){const q={frame:K.frame,value:K.value.clone?K.value.clone():K.value,inTangent:K.inTangent,outTangent:K.outTangent,interpolation:K.interpolation,lockedTangent:K.lockedTangent};Y===Number.MAX_VALUE&&(Y=q.frame),q.frame-=Y,U.push(q)}}0!==U.length?(S>U[0].frame&&(S=U[0].frame),X<U[U.length-1].frame&&(X=U[U.length-1].frame),C.setKeys(U,!0),K.animation=C):(y.splice(V,1),V--)}return K._from=S,K._to=X,K}getClassName(){return"AnimationGroup"}toString(K){let q="Name: "+this.name;return q+=", type: "+this.getClassName(),K&&(q+=", from: "+this._from,q+=", to: "+this._to,q+=", isStarted: "+this._isStarted,q+=", speedRatio: "+this._speedRatio,q+=", targetedAnimations length: "+this._targetedAnimations.length,q+=", animatables length: "+this._animatables),q}}}}]);