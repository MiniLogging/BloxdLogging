/*! For license information please see yycq4v.38.1bf7ded8.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{10993:(f,Q,H)=>{H.r(Q),H.d(Q,{getAnalytics:()=>hf,getGoogleAnalyticsClientId:()=>pf,initializeAnalytics:()=>wf,isSupported:()=>bf,logEvent:()=>XQ,setAnalyticsCollectionEnabled:()=>QQ,setConsent:()=>iQ,setCurrentScreen:()=>of,setDefaultEventParameters:()=>HQ,setUserId:()=>Cf,setUserProperties:()=>fQ,settings:()=>kf});var X=H(10966),i=H(10986),S=H(10979),x=H(10973);let K,Z;const B=new WeakMap,N=new WeakMap,J=new WeakMap,g=new WeakMap,z=new WeakMap;let v={get(f,Q,H){if(f instanceof IDBTransaction){if("done"===Q)return N.get(f);if("objectStoreNames"===Q)return f.objectStoreNames||J.get(f);if("store"===Q)return H.objectStoreNames[1]?void 0:H.objectStore(H.objectStoreNames[0])}return n(f[Q])},set:(f,Q,H)=>(f[Q]=H,!0),has:(f,Q)=>f instanceof IDBTransaction&&("done"===Q||"store"===Q)||Q in f};function Y(f){return f!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(Z||(Z=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(f)?function(){for(var Q=arguments.length,H=new Array(Q),X=0;X<Q;X++)H[X]=arguments[X];return f.apply(e(this),H),n(B.get(this))}:function(){for(var Q=arguments.length,H=new Array(Q),X=0;X<Q;X++)H[X]=arguments[X];return n(f.apply(e(this),H))}:function(Q){for(var H=arguments.length,X=new Array(H>1?H-1:0),i=1;i<H;i++)X[i-1]=arguments[i];const S=f.call(e(this),Q,...X);return J.set(S,Q.sort?Q.sort():[Q]),n(S)}}function O(f){return"function"===typeof f?Y(f):(f instanceof IDBTransaction&&function(f){if(N.has(f))return;const Q=new Promise(((Q,H)=>{const X=()=>{f.removeEventListener("complete",i),f.removeEventListener("error",S),f.removeEventListener("abort",S)},i=()=>{Q(),X()},S=()=>{H(f.error||new DOMException("AbortError","AbortError")),X()};f.addEventListener("complete",i),f.addEventListener("error",S),f.addEventListener("abort",S)}));N.set(f,Q)}(f),Q=f,(K||(K=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((f=>Q instanceof f))?new Proxy(f,v):f);var Q}function n(f){if(f instanceof IDBRequest)return function(f){const Q=new Promise(((Q,H)=>{const X=()=>{f.removeEventListener("success",i),f.removeEventListener("error",S)},i=()=>{Q(n(f.result)),X()},S=()=>{H(f.error),X()};f.addEventListener("success",i),f.addEventListener("error",S)}));return Q.then((Q=>{Q instanceof IDBCursor&&B.set(Q,f)})).catch((()=>{})),z.set(Q,f),Q}(f);if(g.has(f))return g.get(f);const Q=O(f);return Q!==f&&(g.set(f,Q),z.set(Q,f)),Q}const e=f=>z.get(f);const G=["get","getKey","getAll","getAllKeys","count"],I=["put","add","delete","clear"],l=new Map;function q(f,Q){if(!(f instanceof IDBDatabase)||Q in f||"string"!==typeof Q)return;if(l.get(Q))return l.get(Q);const H=Q.replace(/FromIndex$/,""),X=Q!==H,i=I.includes(H);if(!(H in(X?IDBIndex:IDBObjectStore).prototype)||!i&&!G.includes(H))return;const S=async function(f){const Q=this.transaction(f,i?"readwrite":"readonly");let S=Q.store;for(var x=arguments.length,K=new Array(x>1?x-1:0),Z=1;Z<x;Z++)K[Z-1]=arguments[Z];return X&&(S=S.index(K.shift())),(await Promise.all([S[H](...K),i&&Q.done]))[0]};return l.set(Q,S),S}v=(f=>({...f,get:(Q,H,X)=>q(Q,H)||f.get(Q,H,X),has:(Q,H)=>!!q(Q,H)||f.has(Q,H)}))(v);const D="@firebase/installations",d="0.6.4",s=1e4,F=`w:${d}`,P="FIS_v2",m=36e5,c={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},W=new S.g("installations","Installations",c);function R(f){return f instanceof S.h&&f.code.includes("request-failed")}function U(f){let{projectId:Q}=f;return`https://firebaseinstallations.googleapis.com/v1/projects/${Q}/installations`}function E(f){return{token:f.token,requestStatus:2,expiresIn:(Q=f.expiresIn,Number(Q.replace("s","000"))),creationTime:Date.now()};var Q}async function t(f,Q){const H=(await Q.json()).error;return W.create("request-failed",{requestName:f,serverCode:H.code,serverMessage:H.message,serverStatus:H.status})}function u(f){let{apiKey:Q}=f;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":Q})}function L(f,Q){let{refreshToken:H}=Q;const X=u(f);return X.append("Authorization",function(f){return`${P} ${f}`}(H)),X}async function A(f){const Q=await f();return Q.status>=500&&Q.status<600?f():Q}function a(f){return new Promise((Q=>{setTimeout(Q,f)}))}const V=/^[cdef][\w-]{21}$/;function M(){try{const f=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(f),f[0]=112+f[0]%16;const Q=function(f){const Q=(H=f,btoa(String.fromCharCode(...H)).replace(/\+/g,"-").replace(/\//g,"_"));var H;return Q.substr(0,22)}(f);return V.test(Q)?Q:""}catch(f){return""}}function r(f){return`${f.appName}!${f.appId}`}const j=new Map;function T(f,Q){const H=r(f);k(H,Q),function(f,Q){const H=h();H&&H.postMessage({key:f,fid:Q});w()}(H,Q)}function k(f,Q){const H=j.get(f);if(H)for(const X of H)X(Q)}let y=null;function h(){return!y&&"BroadcastChannel"in self&&(y=new BroadcastChannel("[Firebase] FID Change"),y.onmessage=f=>{k(f.data.key,f.data.fid)}),y}function w(){0===j.size&&y&&(y.close(),y=null)}const b="firebase-installations-store";let o=null;function p(){return o||(o=function(f,Q){let{blocked:H,upgrade:X,blocking:i,terminated:S}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const x=indexedDB.open(f,Q),K=n(x);return X&&x.addEventListener("upgradeneeded",(f=>{X(n(x.result),f.oldVersion,f.newVersion,n(x.transaction))})),H&&x.addEventListener("blocked",(()=>H())),K.then((f=>{S&&f.addEventListener("close",(()=>S())),i&&f.addEventListener("versionchange",(()=>i()))})).catch((()=>{})),K}("firebase-installations-database",1,{upgrade:(f,Q)=>{if(0===Q)f.createObjectStore(b)}})),o}async function C(f,Q){const H=r(f),X=(await p()).transaction(b,"readwrite"),i=X.objectStore(b),S=await i.get(H);return await i.put(Q,H),await X.done,S&&S.fid===Q.fid||T(f,Q.fid),Q}async function ff(f){const Q=r(f),H=(await p()).transaction(b,"readwrite");await H.objectStore(b).delete(Q),await H.done}async function Qf(f,Q){const H=r(f),X=(await p()).transaction(b,"readwrite"),i=X.objectStore(b),S=await i.get(H),x=Q(S);return void 0===x?await i.delete(H):await i.put(x,H),await X.done,!x||S&&S.fid===x.fid||T(f,x.fid),x}async function Hf(f){let Q;const H=await Qf(f.appConfig,(H=>{const X=function(f){const Q=f||{fid:M(),registrationStatus:0};return xf(Q)}(H),i=function(f,Q){if(0===Q.registrationStatus){if(!navigator.onLine){return{installationEntry:Q,registrationPromise:Promise.reject(W.create("app-offline"))}}const H={fid:Q.fid,registrationStatus:1,registrationTime:Date.now()},X=async function(f,Q){try{const H=await async function(f,Q){let{appConfig:H,heartbeatServiceProvider:X}=f,{fid:i}=Q;const S=U(H),x=u(H),K=X.getImmediate({optional:!0});if(K){const f=await K.getHeartbeatsHeader();f&&x.append("x-firebase-client",f)}const Z={fid:i,authVersion:P,appId:H.appId,sdkVersion:F},B={method:"POST",headers:x,body:JSON.stringify(Z)},N=await A((()=>fetch(S,B)));if(N.ok){const f=await N.json();return{fid:f.fid||i,registrationStatus:2,refreshToken:f.refreshToken,authToken:E(f.authToken)}}throw await t("Create Installation",N)}(f,Q);return C(f.appConfig,H)}catch(H){throw R(H)&&409===H.customData.serverCode?await ff(f.appConfig):await C(f.appConfig,{fid:Q.fid,registrationStatus:0}),H}}(f,H);return{installationEntry:H,registrationPromise:X}}return 1===Q.registrationStatus?{installationEntry:Q,registrationPromise:Xf(f)}:{installationEntry:Q}}(f,X);return Q=i.registrationPromise,i.installationEntry}));return""===H.fid?{installationEntry:await Q}:{installationEntry:H,registrationPromise:Q}}async function Xf(f){let Q=await Sf(f.appConfig);for(;1===Q.registrationStatus;)await a(100),Q=await Sf(f.appConfig);if(0===Q.registrationStatus){const{installationEntry:Q,registrationPromise:H}=await Hf(f);return H||Q}return Q}function Sf(f){return Qf(f,(f=>{if(!f)throw W.create("installation-not-found");return xf(f)}))}function xf(f){return 1===(Q=f).registrationStatus&&Q.registrationTime+s<Date.now()?{fid:f.fid,registrationStatus:0}:f;var Q}async function Kf(f,Q){let{appConfig:H,heartbeatServiceProvider:X}=f;const i=function(f,Q){let{fid:H}=Q;return`${U(f)}/${H}/authTokens:generate`}(H,Q),S=L(H,Q),x=X.getImmediate({optional:!0});if(x){const f=await x.getHeartbeatsHeader();f&&S.append("x-firebase-client",f)}const K={installation:{sdkVersion:F,appId:H.appId}},Z={method:"POST",headers:S,body:JSON.stringify(K)},B=await A((()=>fetch(i,Z)));if(B.ok){return E(await B.json())}throw await t("Generate Auth Token",B)}async function Zf(f){let Q,H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const X=await Qf(f.appConfig,(X=>{if(!Nf(X))throw W.create("not-registered");const i=X.authToken;if(!H&&function(f){return 2===f.requestStatus&&!function(f){const Q=Date.now();return Q<f.creationTime||f.creationTime+f.expiresIn<Q+m}(f)}(i))return X;if(1===i.requestStatus)return Q=async function(f,Q){let H=await Bf(f.appConfig);for(;1===H.authToken.requestStatus;)await a(100),H=await Bf(f.appConfig);const X=H.authToken;return 0===X.requestStatus?Zf(f,Q):X}(f,H),X;{if(!navigator.onLine)throw W.create("app-offline");const H=function(f){const Q={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},f),{authToken:Q})}(X);return Q=async function(f,Q){try{const H=await Kf(f,Q),X=Object.assign(Object.assign({},Q),{authToken:H});return await C(f.appConfig,X),H}catch(H){if(!R(H)||401!==H.customData.serverCode&&404!==H.customData.serverCode){const H=Object.assign(Object.assign({},Q),{authToken:{requestStatus:0}});await C(f.appConfig,H)}else await ff(f.appConfig);throw H}}(f,H),H}}));return Q?await Q:X.authToken}function Bf(f){return Qf(f,(f=>{if(!Nf(f))throw W.create("not-registered");const Q=f.authToken;return 1===(H=Q).requestStatus&&H.requestTime+s<Date.now()?Object.assign(Object.assign({},f),{authToken:{requestStatus:0}}):f;var H}))}function Nf(f){return void 0!==f&&2===f.registrationStatus}async function Jf(f){let Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const H=f;await async function(f){const{registrationPromise:Q}=await Hf(f);Q&&await Q}(H);return(await Zf(H,Q)).token}function gf(f){return W.create("missing-app-config-values",{valueName:f})}const zf="installations",vf=f=>{const Q=f.getProvider("app").getImmediate(),H=function(f){if(!f||!f.options)throw gf("App Configuration");if(!f.name)throw gf("App Name");const Q=["projectId","apiKey","appId"];for(const H of Q)if(!f.options[H])throw gf(H);return{appName:f.name,projectId:f.options.projectId,apiKey:f.options.apiKey,appId:f.options.appId}}(Q);return{app:Q,appConfig:H,heartbeatServiceProvider:(0,X.r)(Q,"heartbeat"),_delete:()=>Promise.resolve()}},Yf=f=>{const Q=f.getProvider("app").getImmediate(),H=(0,X.r)(Q,zf).getImmediate();return{getId:()=>async function(f){const Q=f,{installationEntry:H,registrationPromise:X}=await Hf(Q);return X?X.catch(console.error):Zf(Q).catch(console.error),H.fid}(H),getToken:f=>Jf(H,f)}};(0,X.v)(new x.g(zf,vf,"PUBLIC")),(0,X.v)(new x.g("installations-internal",Yf,"PRIVATE")),(0,X.P)(D,d),(0,X.P)(D,d,"esm2017");const Of="analytics",nf="https://www.googletagmanager.com/gtag/js",ef=new i.f("@firebase/analytics"),Gf={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},If=new S.g("analytics","Analytics",Gf);function lf(f){if(!f.startsWith(nf)){const Q=If.create("invalid-gtag-resource",{gtagURL:f});return ef.warn(Q.message),""}return f}function qf(f){return Promise.all(f.map((f=>f.catch((f=>f)))))}function Df(f,Q){const H=function(f,Q){let H;return window.trustedTypes&&(H=window.trustedTypes.createPolicy(f,Q)),H}("firebase-js-sdk-policy",{createScriptURL:lf}),X=document.createElement("script"),i=`${nf}?l=${f}&id=${Q}`;X.src=H?null===H||void 0===H?void 0:H.createScriptURL(i):i,X.async=!0,document.head.appendChild(X)}function df(f,Q,H,X){return async function(i){try{for(var S=arguments.length,x=new Array(S>1?S-1:0),K=1;K<S;K++)x[K-1]=arguments[K];if("event"===i){const[X,i]=x;await async function(f,Q,H,X,i){try{let S=[];if(i&&i.send_to){let f=i.send_to;Array.isArray(f)||(f=[f]);const X=await qf(H);for(const H of f){const f=X.find((f=>f.measurementId===H)),i=f&&Q[f.appId];if(!i){S=[];break}S.push(i)}}0===S.length&&(S=Object.values(Q)),await Promise.all(S),f("event",X,i||{})}catch(S){ef.error(S)}}(f,Q,H,X,i)}else if("config"===i){const[i,S]=x;await async function(f,Q,H,X,i,S){const x=X[i];try{if(x)await Q[x];else{const f=(await qf(H)).find((f=>f.measurementId===i));f&&await Q[f.appId]}}catch(K){ef.error(K)}f("config",i,S)}(f,Q,H,X,i,S)}else if("consent"===i){const[Q]=x;f("consent","update",Q)}else if("get"===i){const[Q,H,X]=x;f("get",Q,H,X)}else if("set"===i){const[Q]=x;f("set",Q)}else f(i,...x)}catch(Z){ef.error(Z)}}}const sf=new class{constructor(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=f,this.intervalMillis=Q}getThrottleMetadata(f){return this.throttleMetadata[f]}setThrottleMetadata(f,Q){this.throttleMetadata[f]=Q}deleteThrottleMetadata(f){delete this.throttleMetadata[f]}};function Ff(f){return new Headers({Accept:"application/json","x-goog-api-key":f})}async function Pf(f){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:sf,H=arguments.length>2?arguments[2]:void 0;const{appId:X,apiKey:i,measurementId:S}=f.options;if(!X)throw If.create("no-app-id");if(!i){if(S)return{measurementId:S,appId:X};throw If.create("no-api-key")}const x=Q.getThrottleMetadata(X)||{backoffCount:0,throttleEndTimeMillis:Date.now()},K=new cf;return setTimeout((async()=>{K.abort()}),void 0!==H?H:6e4),mf({appId:X,apiKey:i,measurementId:S},x,K,Q)}async function mf(f,Q,H){let{throttleEndTimeMillis:X,backoffCount:i}=Q,x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:sf;var K;const{appId:Z,measurementId:B}=f;try{await function(f,Q){return new Promise(((H,X)=>{const i=Math.max(Q-Date.now(),0),S=setTimeout(H,i);f.addEventListener((()=>{clearTimeout(S),X(If.create("fetch-throttle",{throttleEndTimeMillis:Q}))}))}))}(H,X)}catch(N){if(B)return ef.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${B} provided in the "measurementId" field in the local Firebase config. [${null===N||void 0===N?void 0:N.message}]`),{appId:Z,measurementId:B};throw N}try{const Q=await async function(f){var Q;const{appId:H,apiKey:X}=f,i={method:"GET",headers:Ff(X)},S="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",H),x=await fetch(S,i);if(200!==x.status&&304!==x.status){let f="";try{const H=await x.json();(null===(Q=H.error)||void 0===Q?void 0:Q.message)&&(f=H.error.message)}catch(K){}throw If.create("config-fetch-failed",{httpStatus:x.status,responseMessage:f})}return x.json()}(f);return x.deleteThrottleMetadata(Z),Q}catch(N){const Q=N;if(!function(f){if(!(f instanceof S.h)||!f.customData)return!1;const Q=Number(f.customData.httpStatus);return 429===Q||500===Q||503===Q||504===Q}(Q)){if(x.deleteThrottleMetadata(Z),B)return ef.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${B} provided in the "measurementId" field in the local Firebase config. [${null===Q||void 0===Q?void 0:Q.message}]`),{appId:Z,measurementId:B};throw N}const X=503===Number(null===(K=null===Q||void 0===Q?void 0:Q.customData)||void 0===K?void 0:K.httpStatus)?(0,S.q)(i,x.intervalMillis,30):(0,S.q)(i,x.intervalMillis),J={throttleEndTimeMillis:Date.now()+X,backoffCount:i+1};return x.setThrottleMetadata(Z,J),ef.debug(`Calling attemptFetch again in ${X} millis`),mf(f,J,H,x)}}class cf{constructor(){this.listeners=[]}addEventListener(f){this.listeners.push(f)}abort(){this.listeners.forEach((f=>f()))}}let Wf,Rf;function Uf(f){Rf=f}function Ef(f){Wf=f}async function tf(f,Q,H,X,i,x,K){var Z;const B=Pf(f);B.then((Q=>{H[Q.measurementId]=Q.appId,f.options.measurementId&&Q.measurementId!==f.options.measurementId&&ef.warn(`The measurement ID in the local Firebase config (${f.options.measurementId}) does not match the measurement ID fetched from the server (${Q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((f=>ef.error(f))),Q.push(B);const N=async function(){if(!(0,S.T)())return ef.warn(If.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,S.$)()}catch(f){return ef.warn(If.create("indexeddb-unavailable",{errorInfo:null===f||void 0===f?void 0:f.toString()}).message),!1}return!0}().then((f=>f?X.getId():void 0)),[J,g]=await Promise.all([B,N]);(function(f){const Q=window.document.getElementsByTagName("script");for(const H of Object.values(Q))if(H.src&&H.src.includes(nf)&&H.src.includes(f))return H;return null})(x)||Df(x,J.measurementId),Rf&&(i("consent","default",Rf),Uf(void 0)),i("ma",new Date);const z=null!==(Z=null===K||void 0===K?void 0:K.config)&&void 0!==Z?Z:{};return z.origin="firebase",z.update=!0,null!=g&&(z.firebase_id=g),i("config",J.measurementId,z),Wf&&(i("set",Wf),Ef(void 0)),J.measurementId}class uf{constructor(f){this.app=f}_delete(){return delete Lf[this.app.options.appId],Promise.resolve()}}let Lf={},Af=[];const af={};let Vf,Mf,rf="dataLayer",jf="gtag",Tf=!1;function kf(f){if(Tf)throw If.create("already-initialized");f.dataLayerName&&(rf=f.dataLayerName),f.gtagName&&(jf=f.gtagName)}function yf(f,Q,H){!function(){const f=[];if((0,S.O)()&&f.push("This is a browser extension environment."),(0,S.i)()||f.push("Cookies are not available."),f.length>0){const Q=f.map(((f,Q)=>`(${Q+1}) ${f}`)).join(" "),H=If.create("invalid-analytics-context",{errorInfo:Q});ef.warn(H.message)}}();const X=f.options.appId;if(!X)throw If.create("no-app-id");if(!f.options.apiKey){if(!f.options.measurementId)throw If.create("no-api-key");ef.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${f.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=Lf[X])throw If.create("already-exists",{id:X});if(!Tf){!function(f){let Q=[];Array.isArray(window[f])?Q=window[f]:window[f]=Q}(rf);const{wrappedGtag:f,gtagCore:Q}=function(f,Q,H,X,i){let S=function(){for(var f=arguments.length,Q=new Array(f),H=0;H<f;H++)Q[H]=arguments[H];window[X].push(arguments)};return window[i]&&"function"===typeof window[i]&&(S=window[i]),window[i]=df(S,f,Q,H),{gtagCore:S,wrappedGtag:window[i]}}(Lf,Af,af,rf,jf);Mf=f,Vf=Q,Tf=!0}Lf[X]=tf(f,Af,af,Q,Vf,rf,H);return new uf(f)}function hf(){let f=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,X.I)();f=(0,S.K)(f);const Q=(0,X.r)(f,Of);return Q.isInitialized()?Q.getImmediate():wf(f)}function wf(f){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const H=(0,X.r)(f,Of);if(H.isInitialized()){const f=H.getImmediate();if((0,S.v)(Q,H.getOptions()))return f;throw If.create("already-initialized")}return H.initialize({options:Q})}async function bf(){if((0,S.O)())return!1;if(!(0,S.i)())return!1;if(!(0,S.T)())return!1;try{return await(0,S.$)()}catch(f){return!1}}function of(f,Q,H){f=(0,S.K)(f),async function(f,Q,H,X){if(X&&X.global)return f("set",{screen_name:H}),Promise.resolve();f("config",await Q,{update:!0,screen_name:H})}(Mf,Lf[f.app.options.appId],Q,H).catch((f=>ef.error(f)))}async function pf(f){return f=(0,S.K)(f),async function(f,Q){const H=await Q;return new Promise(((Q,X)=>{f("get",H,"client_id",(f=>{f||X(If.create("no-client-id")),Q(f)}))}))}(Mf,Lf[f.app.options.appId])}function Cf(f,Q,H){f=(0,S.K)(f),async function(f,Q,H,X){if(X&&X.global)return f("set",{user_id:H}),Promise.resolve();f("config",await Q,{update:!0,user_id:H})}(Mf,Lf[f.app.options.appId],Q,H).catch((f=>ef.error(f)))}function fQ(f,Q,H){f=(0,S.K)(f),async function(f,Q,H,X){if(X&&X.global){const Q={};for(const f of Object.keys(H))Q[`user_properties.${f}`]=H[f];return f("set",Q),Promise.resolve()}f("config",await Q,{update:!0,user_properties:H})}(Mf,Lf[f.app.options.appId],Q,H).catch((f=>ef.error(f)))}function QQ(f,Q){f=(0,S.K)(f),async function(f,Q){const H=await f;window[`ga-disable-${H}`]=!Q}(Lf[f.app.options.appId],Q).catch((f=>ef.error(f)))}function HQ(f){Mf?Mf("set",f):Ef(f)}function XQ(f,Q,H,X){f=(0,S.K)(f),async function(f,Q,H,X,i){if(i&&i.global)f("event",H,X);else{const i=await Q;f("event",H,Object.assign(Object.assign({},X),{send_to:i}))}}(Mf,Lf[f.app.options.appId],Q,H,X).catch((f=>ef.error(f)))}function iQ(f){Mf?Mf("consent","update",f):Uf(f)}const SQ="@firebase/analytics",xQ="0.10.0";(0,X.v)(new x.g(Of,((f,Q)=>{let{options:H}=Q;return yf(f.getProvider("app").getImmediate(),f.getProvider("installations-internal").getImmediate(),H)}),"PUBLIC")),(0,X.v)(new x.g("analytics-internal",(function(f){try{const Q=f.getProvider(Of).getImmediate();return{logEvent:(f,H,X)=>XQ(Q,f,H,X)}}catch(Q){throw If.create("interop-component-reg-failed",{reason:Q})}}),"PRIVATE")),(0,X.P)(SQ,xQ),(0,X.P)(SQ,xQ,"esm2017")}}]);