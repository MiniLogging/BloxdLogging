/*! For license information please see dz0gws.38.16f578e6.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{10981:(q,X,Q)=>{Q.r(X),Q.d(X,{getAnalytics:()=>Cq,getGoogleAnalyticsClientId:()=>rq,initializeAnalytics:()=>Eq,isSupported:()=>Jq,logEvent:()=>QX,setAnalyticsCollectionEnabled:()=>qX,setConsent:()=>yX,setCurrentScreen:()=>nq,setDefaultEventParameters:()=>XX,setUserId:()=>sq,setUserProperties:()=>Tq,settings:()=>hq});var y=Q(10959),x=Q(10976),u=Q(10971),H=Q(10965);let b,D;const a=new WeakMap,R=new WeakMap,L=new WeakMap,f=new WeakMap,k=new WeakMap;let j={get(q,X,Q){if(q instanceof IDBTransaction){if("done"===X)return R.get(q);if("objectStoreNames"===X)return q.objectStoreNames||L.get(q);if("store"===X)return Q.objectStoreNames[1]?void 0:Q.objectStore(Q.objectStoreNames[0])}return e(q[X])},set:(q,X,Q)=>(q[X]=Q,!0),has:(q,X)=>q instanceof IDBTransaction&&("done"===X||"store"===X)||X in q};function I(q){return q!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(D||(D=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(q)?function(){for(var X=arguments.length,Q=new Array(X),y=0;y<X;y++)Q[y]=arguments[y];return q.apply(i(this),Q),e(a.get(this))}:function(){for(var X=arguments.length,Q=new Array(X),y=0;y<X;y++)Q[y]=arguments[y];return e(q.apply(i(this),Q))}:function(X){for(var Q=arguments.length,y=new Array(Q>1?Q-1:0),x=1;x<Q;x++)y[x-1]=arguments[x];const u=q.call(i(this),X,...y);return L.set(u,X.sort?X.sort():[X]),e(u)}}function d(q){return"function"===typeof q?I(q):(q instanceof IDBTransaction&&function(q){if(R.has(q))return;const X=new Promise(((X,Q)=>{const y=()=>{q.removeEventListener("complete",x),q.removeEventListener("error",u),q.removeEventListener("abort",u)},x=()=>{X(),y()},u=()=>{Q(q.error||new DOMException("AbortError","AbortError")),y()};q.addEventListener("complete",x),q.addEventListener("error",u),q.addEventListener("abort",u)}));R.set(q,X)}(q),X=q,(b||(b=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((q=>X instanceof q))?new Proxy(q,j):q);var X}function e(q){if(q instanceof IDBRequest)return function(q){const X=new Promise(((X,Q)=>{const y=()=>{q.removeEventListener("success",x),q.removeEventListener("error",u)},x=()=>{X(e(q.result)),y()},u=()=>{Q(q.error),y()};q.addEventListener("success",x),q.addEventListener("error",u)}));return X.then((X=>{X instanceof IDBCursor&&a.set(X,q)})).catch((()=>{})),k.set(X,q),X}(q);if(f.has(q))return f.get(q);const X=d(q);return X!==q&&(f.set(q,X),k.set(X,q)),X}const i=q=>k.get(q);const A=["get","getKey","getAll","getAllKeys","count"],B=["put","add","delete","clear"],w=new Map;function V(q,X){if(!(q instanceof IDBDatabase)||X in q||"string"!==typeof X)return;if(w.get(X))return w.get(X);const Q=X.replace(/FromIndex$/,""),y=X!==Q,x=B.includes(Q);if(!(Q in(y?IDBIndex:IDBObjectStore).prototype)||!x&&!A.includes(Q))return;const u=async function(q){const X=this.transaction(q,x?"readwrite":"readonly");let u=X.store;for(var H=arguments.length,b=new Array(H>1?H-1:0),D=1;D<H;D++)b[D-1]=arguments[D];return y&&(u=u.index(b.shift())),(await Promise.all([u[Q](...b),x&&X.done]))[0]};return w.set(X,u),u}j=(q=>({...q,get:(X,Q,y)=>V(X,Q)||q.get(X,Q,y),has:(X,Q)=>!!V(X,Q)||q.has(X,Q)}))(j);const W="@firebase/installations",v="0.6.4",Z=1e4,U=`w:${v}`,O="FIS_v2",g=36e5,P={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},F=new u.f("installations","Installations",P);function l(q){return q instanceof u.j&&q.code.includes("request-failed")}function m(q){let{projectId:X}=q;return`https://firebaseinstallations.googleapis.com/v1/projects/${X}/installations`}function M(q){return{token:q.token,requestStatus:2,expiresIn:(X=q.expiresIn,Number(X.replace("s","000"))),creationTime:Date.now()};var X}async function o(q,X){const Q=(await X.json()).error;return F.create("request-failed",{requestName:q,serverCode:Q.code,serverMessage:Q.message,serverStatus:Q.status})}function Y(q){let{apiKey:X}=q;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":X})}function N(q,X){let{refreshToken:Q}=X;const y=Y(q);return y.append("Authorization",function(q){return`${O} ${q}`}(Q)),y}async function S(q){const X=await q();return X.status>=500&&X.status<600?q():X}function c(q){return new Promise((X=>{setTimeout(X,q)}))}const p=/^[cdef][\w-]{21}$/;function t(){try{const q=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(q),q[0]=112+q[0]%16;const X=function(q){const X=(Q=q,btoa(String.fromCharCode(...Q)).replace(/\+/g,"-").replace(/\//g,"_"));var Q;return X.substr(0,22)}(q);return p.test(X)?X:""}catch(q){return""}}function z(q){return`${q.appName}!${q.appId}`}const K=new Map;function h(q,X){const Q=z(q);G(Q,X),function(q,X){const Q=E();Q&&Q.postMessage({key:q,fid:X});J()}(Q,X)}function G(q,X){const Q=K.get(q);if(Q)for(const y of Q)y(X)}let C=null;function E(){return!C&&"BroadcastChannel"in self&&(C=new BroadcastChannel("[Firebase] FID Change"),C.onmessage=q=>{G(q.data.key,q.data.fid)}),C}function J(){0===K.size&&C&&(C.close(),C=null)}const n="firebase-installations-store";let r=null;function s(){return r||(r=function(q,X){let{blocked:Q,upgrade:y,blocking:x,terminated:u}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const H=indexedDB.open(q,X),b=e(H);return y&&H.addEventListener("upgradeneeded",(q=>{y(e(H.result),q.oldVersion,q.newVersion,e(H.transaction))})),Q&&H.addEventListener("blocked",(()=>Q())),b.then((q=>{u&&q.addEventListener("close",(()=>u())),x&&q.addEventListener("versionchange",(()=>x()))})).catch((()=>{})),b}("firebase-installations-database",1,{upgrade:(q,X)=>{if(0===X)q.createObjectStore(n)}})),r}async function T(q,X){const Q=z(q),y=(await s()).transaction(n,"readwrite"),x=y.objectStore(n),u=await x.get(Q);return await x.put(X,Q),await y.done,u&&u.fid===X.fid||h(q,X.fid),X}async function qq(q){const X=z(q),Q=(await s()).transaction(n,"readwrite");await Q.objectStore(n).delete(X),await Q.done}async function Xq(q,X){const Q=z(q),y=(await s()).transaction(n,"readwrite"),x=y.objectStore(n),u=await x.get(Q),H=X(u);return void 0===H?await x.delete(Q):await x.put(H,Q),await y.done,!H||u&&u.fid===H.fid||h(q,H.fid),H}async function Qq(q){let X;const Q=await Xq(q.appConfig,(Q=>{const y=function(q){const X=q||{fid:t(),registrationStatus:0};return uq(X)}(Q),x=function(q,X){if(0===X.registrationStatus){if(!navigator.onLine){return{installationEntry:X,registrationPromise:Promise.reject(F.create("app-offline"))}}const Q={fid:X.fid,registrationStatus:1,registrationTime:Date.now()},y=async function(q,X){try{const Q=await async function(q,X){let{appConfig:Q,heartbeatServiceProvider:y}=q,{fid:x}=X;const u=m(Q),H=Y(Q),b=y.getImmediate({optional:!0});if(b){const q=await b.getHeartbeatsHeader();q&&H.append("x-firebase-client",q)}const D={fid:x,authVersion:O,appId:Q.appId,sdkVersion:U},a={method:"POST",headers:H,body:JSON.stringify(D)},R=await S((()=>fetch(u,a)));if(R.ok){const q=await R.json();return{fid:q.fid||x,registrationStatus:2,refreshToken:q.refreshToken,authToken:M(q.authToken)}}throw await o("Create Installation",R)}(q,X);return T(q.appConfig,Q)}catch(Q){throw l(Q)&&409===Q.customData.serverCode?await qq(q.appConfig):await T(q.appConfig,{fid:X.fid,registrationStatus:0}),Q}}(q,Q);return{installationEntry:Q,registrationPromise:y}}return 1===X.registrationStatus?{installationEntry:X,registrationPromise:yq(q)}:{installationEntry:X}}(q,y);return X=x.registrationPromise,x.installationEntry}));return""===Q.fid?{installationEntry:await X}:{installationEntry:Q,registrationPromise:X}}async function yq(q){let X=await xq(q.appConfig);for(;1===X.registrationStatus;)await c(100),X=await xq(q.appConfig);if(0===X.registrationStatus){const{installationEntry:X,registrationPromise:Q}=await Qq(q);return Q||X}return X}function xq(q){return Xq(q,(q=>{if(!q)throw F.create("installation-not-found");return uq(q)}))}function uq(q){return 1===(X=q).registrationStatus&&X.registrationTime+Z<Date.now()?{fid:q.fid,registrationStatus:0}:q;var X}async function Hq(q,X){let{appConfig:Q,heartbeatServiceProvider:y}=q;const x=function(q,X){let{fid:Q}=X;return`${m(q)}/${Q}/authTokens:generate`}(Q,X),u=N(Q,X),H=y.getImmediate({optional:!0});if(H){const q=await H.getHeartbeatsHeader();q&&u.append("x-firebase-client",q)}const b={installation:{sdkVersion:U,appId:Q.appId}},D={method:"POST",headers:u,body:JSON.stringify(b)},a=await S((()=>fetch(x,D)));if(a.ok){return M(await a.json())}throw await o("Generate Auth Token",a)}async function bq(q){let X,Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const y=await Xq(q.appConfig,(y=>{if(!aq(y))throw F.create("not-registered");const x=y.authToken;if(!Q&&function(q){return 2===q.requestStatus&&!function(q){const X=Date.now();return X<q.creationTime||q.creationTime+q.expiresIn<X+g}(q)}(x))return y;if(1===x.requestStatus)return X=async function(q,X){let Q=await Dq(q.appConfig);for(;1===Q.authToken.requestStatus;)await c(100),Q=await Dq(q.appConfig);const y=Q.authToken;return 0===y.requestStatus?bq(q,X):y}(q,Q),y;{if(!navigator.onLine)throw F.create("app-offline");const Q=function(q){const X={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},q),{authToken:X})}(y);return X=async function(q,X){try{const Q=await Hq(q,X),y=Object.assign(Object.assign({},X),{authToken:Q});return await T(q.appConfig,y),Q}catch(Q){if(!l(Q)||401!==Q.customData.serverCode&&404!==Q.customData.serverCode){const Q=Object.assign(Object.assign({},X),{authToken:{requestStatus:0}});await T(q.appConfig,Q)}else await qq(q.appConfig);throw Q}}(q,Q),Q}}));return X?await X:y.authToken}function Dq(q){return Xq(q,(q=>{if(!aq(q))throw F.create("not-registered");const X=q.authToken;return 1===(Q=X).requestStatus&&Q.requestTime+Z<Date.now()?Object.assign(Object.assign({},q),{authToken:{requestStatus:0}}):q;var Q}))}function aq(q){return void 0!==q&&2===q.registrationStatus}async function Rq(q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=q;await async function(q){const{registrationPromise:X}=await Qq(q);X&&await X}(Q);return(await bq(Q,X)).token}function Lq(q){return F.create("missing-app-config-values",{valueName:q})}const fq="installations",kq=q=>{const X=q.getProvider("app").getImmediate(),Q=function(q){if(!q||!q.options)throw Lq("App Configuration");if(!q.name)throw Lq("App Name");const X=["projectId","apiKey","appId"];for(const Q of X)if(!q.options[Q])throw Lq(Q);return{appName:q.name,projectId:q.options.projectId,apiKey:q.options.apiKey,appId:q.options.appId}}(X);return{app:X,appConfig:Q,heartbeatServiceProvider:(0,y.t)(X,"heartbeat"),_delete:()=>Promise.resolve()}},jq=q=>{const X=q.getProvider("app").getImmediate(),Q=(0,y.t)(X,fq).getImmediate();return{getId:()=>async function(q){const X=q,{installationEntry:Q,registrationPromise:y}=await Qq(X);return y?y.catch(console.error):bq(X).catch(console.error),Q.fid}(Q),getToken:q=>Rq(Q,q)}};(0,y.u)(new H.g(fq,kq,"PUBLIC")),(0,y.u)(new H.g("installations-internal",jq,"PRIVATE")),(0,y.N)(W,v),(0,y.N)(W,v,"esm2017");const Iq="analytics",dq="https://www.googletagmanager.com/gtag/js",eq=new x.e("@firebase/analytics"),iq={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},Aq=new u.f("analytics","Analytics",iq);function Bq(q){if(!q.startsWith(dq)){const X=Aq.create("invalid-gtag-resource",{gtagURL:q});return eq.warn(X.message),""}return q}function wq(q){return Promise.all(q.map((q=>q.catch((q=>q)))))}function Vq(q,X){const Q=function(q,X){let Q;return window.trustedTypes&&(Q=window.trustedTypes.createPolicy(q,X)),Q}("firebase-js-sdk-policy",{createScriptURL:Bq}),y=document.createElement("script"),x=`${dq}?l=${q}&id=${X}`;y.src=Q?null===Q||void 0===Q?void 0:Q.createScriptURL(x):x,y.async=!0,document.head.appendChild(y)}function Wq(q,X,Q,y){return async function(x){try{for(var u=arguments.length,H=new Array(u>1?u-1:0),b=1;b<u;b++)H[b-1]=arguments[b];if("event"===x){const[y,x]=H;await async function(q,X,Q,y,x){try{let u=[];if(x&&x.send_to){let q=x.send_to;Array.isArray(q)||(q=[q]);const y=await wq(Q);for(const Q of q){const q=y.find((q=>q.measurementId===Q)),x=q&&X[q.appId];if(!x){u=[];break}u.push(x)}}0===u.length&&(u=Object.values(X)),await Promise.all(u),q("event",y,x||{})}catch(u){eq.error(u)}}(q,X,Q,y,x)}else if("config"===x){const[x,u]=H;await async function(q,X,Q,y,x,u){const H=y[x];try{if(H)await X[H];else{const q=(await wq(Q)).find((q=>q.measurementId===x));q&&await X[q.appId]}}catch(b){eq.error(b)}q("config",x,u)}(q,X,Q,y,x,u)}else if("consent"===x){const[X]=H;q("consent","update",X)}else if("get"===x){const[X,Q,y]=H;q("get",X,Q,y)}else if("set"===x){const[X]=H;q("set",X)}else q(x,...H)}catch(D){eq.error(D)}}}const vq=new class{constructor(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=q,this.intervalMillis=X}getThrottleMetadata(q){return this.throttleMetadata[q]}setThrottleMetadata(q,X){this.throttleMetadata[q]=X}deleteThrottleMetadata(q){delete this.throttleMetadata[q]}};function Zq(q){return new Headers({Accept:"application/json","x-goog-api-key":q})}async function Uq(q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vq,Q=arguments.length>2?arguments[2]:void 0;const{appId:y,apiKey:x,measurementId:u}=q.options;if(!y)throw Aq.create("no-app-id");if(!x){if(u)return{measurementId:u,appId:y};throw Aq.create("no-api-key")}const H=X.getThrottleMetadata(y)||{backoffCount:0,throttleEndTimeMillis:Date.now()},b=new gq;return setTimeout((async()=>{b.abort()}),void 0!==Q?Q:6e4),Oq({appId:y,apiKey:x,measurementId:u},H,b,X)}async function Oq(q,X,Q){let{throttleEndTimeMillis:y,backoffCount:x}=X,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:vq;var b;const{appId:D,measurementId:a}=q;try{await function(q,X){return new Promise(((Q,y)=>{const x=Math.max(X-Date.now(),0),u=setTimeout(Q,x);q.addEventListener((()=>{clearTimeout(u),y(Aq.create("fetch-throttle",{throttleEndTimeMillis:X}))}))}))}(Q,y)}catch(R){if(a)return eq.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${a} provided in the "measurementId" field in the local Firebase config. [${null===R||void 0===R?void 0:R.message}]`),{appId:D,measurementId:a};throw R}try{const X=await async function(q){var X;const{appId:Q,apiKey:y}=q,x={method:"GET",headers:Zq(y)},u="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",Q),H=await fetch(u,x);if(200!==H.status&&304!==H.status){let q="";try{const Q=await H.json();(null===(X=Q.error)||void 0===X?void 0:X.message)&&(q=Q.error.message)}catch(b){}throw Aq.create("config-fetch-failed",{httpStatus:H.status,responseMessage:q})}return H.json()}(q);return H.deleteThrottleMetadata(D),X}catch(R){const X=R;if(!function(q){if(!(q instanceof u.j)||!q.customData)return!1;const X=Number(q.customData.httpStatus);return 429===X||500===X||503===X||504===X}(X)){if(H.deleteThrottleMetadata(D),a)return eq.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${a} provided in the "measurementId" field in the local Firebase config. [${null===X||void 0===X?void 0:X.message}]`),{appId:D,measurementId:a};throw R}const y=503===Number(null===(b=null===X||void 0===X?void 0:X.customData)||void 0===b?void 0:b.httpStatus)?(0,u.r)(x,H.intervalMillis,30):(0,u.r)(x,H.intervalMillis),L={throttleEndTimeMillis:Date.now()+y,backoffCount:x+1};return H.setThrottleMetadata(D,L),eq.debug(`Calling attemptFetch again in ${y} millis`),Oq(q,L,Q,H)}}class gq{constructor(){this.listeners=[]}addEventListener(q){this.listeners.push(q)}abort(){this.listeners.forEach((q=>q()))}}let Pq,Fq;function lq(q){Fq=q}function mq(q){Pq=q}async function Mq(q,X,Q,y,x,H,b){var D;const a=Uq(q);a.then((X=>{Q[X.measurementId]=X.appId,q.options.measurementId&&X.measurementId!==q.options.measurementId&&eq.warn(`The measurement ID in the local Firebase config (${q.options.measurementId}) does not match the measurement ID fetched from the server (${X.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((q=>eq.error(q))),X.push(a);const R=async function(){if(!(0,u.T)())return eq.warn(Aq.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,u.jb)()}catch(q){return eq.warn(Aq.create("indexeddb-unavailable",{errorInfo:null===q||void 0===q?void 0:q.toString()}).message),!1}return!0}().then((q=>q?y.getId():void 0)),[L,f]=await Promise.all([a,R]);(function(q){const X=window.document.getElementsByTagName("script");for(const Q of Object.values(X))if(Q.src&&Q.src.includes(dq)&&Q.src.includes(q))return Q;return null})(H)||Vq(H,L.measurementId),Fq&&(x("consent","default",Fq),lq(void 0)),x("ma",new Date);const k=null!==(D=null===b||void 0===b?void 0:b.config)&&void 0!==D?D:{};return k.origin="firebase",k.update=!0,null!=f&&(k.firebase_id=f),x("config",L.measurementId,k),Pq&&(x("set",Pq),mq(void 0)),L.measurementId}class oq{constructor(q){this.app=q}_delete(){return delete Yq[this.app.options.appId],Promise.resolve()}}let Yq={},Nq=[];const Sq={};let cq,pq,tq="dataLayer",zq="gtag",Kq=!1;function hq(q){if(Kq)throw Aq.create("already-initialized");q.dataLayerName&&(tq=q.dataLayerName),q.gtagName&&(zq=q.gtagName)}function Gq(q,X,Q){!function(){const q=[];if((0,u.P)()&&q.push("This is a browser extension environment."),(0,u.m)()||q.push("Cookies are not available."),q.length>0){const X=q.map(((q,X)=>`(${X+1}) ${q}`)).join(" "),Q=Aq.create("invalid-analytics-context",{errorInfo:X});eq.warn(Q.message)}}();const y=q.options.appId;if(!y)throw Aq.create("no-app-id");if(!q.options.apiKey){if(!q.options.measurementId)throw Aq.create("no-api-key");eq.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${q.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=Yq[y])throw Aq.create("already-exists",{id:y});if(!Kq){!function(q){let X=[];Array.isArray(window[q])?X=window[q]:window[q]=X}(tq);const{wrappedGtag:q,gtagCore:X}=function(q,X,Q,y,x){let u=function(){for(var q=arguments.length,X=new Array(q),Q=0;Q<q;Q++)X[Q]=arguments[Q];window[y].push(arguments)};return window[x]&&"function"===typeof window[x]&&(u=window[x]),window[x]=Wq(u,q,X,Q),{gtagCore:u,wrappedGtag:window[x]}}(Yq,Nq,Sq,tq,zq);pq=q,cq=X,Kq=!0}Yq[y]=Mq(q,Nq,Sq,X,cq,tq,Q);return new oq(q)}function Cq(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,y.F)();q=(0,u.K)(q);const X=(0,y.t)(q,Iq);return X.isInitialized()?X.getImmediate():Eq(q)}function Eq(q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const Q=(0,y.t)(q,Iq);if(Q.isInitialized()){const q=Q.getImmediate();if((0,u.w)(X,Q.getOptions()))return q;throw Aq.create("already-initialized")}return Q.initialize({options:X})}async function Jq(){if((0,u.P)())return!1;if(!(0,u.m)())return!1;if(!(0,u.T)())return!1;try{return await(0,u.jb)()}catch(q){return!1}}function nq(q,X,Q){q=(0,u.K)(q),async function(q,X,Q,y){if(y&&y.global)return q("set",{screen_name:Q}),Promise.resolve();q("config",await X,{update:!0,screen_name:Q})}(pq,Yq[q.app.options.appId],X,Q).catch((q=>eq.error(q)))}async function rq(q){return q=(0,u.K)(q),async function(q,X){const Q=await X;return new Promise(((X,y)=>{q("get",Q,"client_id",(q=>{q||y(Aq.create("no-client-id")),X(q)}))}))}(pq,Yq[q.app.options.appId])}function sq(q,X,Q){q=(0,u.K)(q),async function(q,X,Q,y){if(y&&y.global)return q("set",{user_id:Q}),Promise.resolve();q("config",await X,{update:!0,user_id:Q})}(pq,Yq[q.app.options.appId],X,Q).catch((q=>eq.error(q)))}function Tq(q,X,Q){q=(0,u.K)(q),async function(q,X,Q,y){if(y&&y.global){const X={};for(const q of Object.keys(Q))X[`user_properties.${q}`]=Q[q];return q("set",X),Promise.resolve()}q("config",await X,{update:!0,user_properties:Q})}(pq,Yq[q.app.options.appId],X,Q).catch((q=>eq.error(q)))}function qX(q,X){q=(0,u.K)(q),async function(q,X){const Q=await q;window[`ga-disable-${Q}`]=!X}(Yq[q.app.options.appId],X).catch((q=>eq.error(q)))}function XX(q){pq?pq("set",q):mq(q)}function QX(q,X,Q,y){q=(0,u.K)(q),async function(q,X,Q,y,x){if(x&&x.global)q("event",Q,y);else{const x=await X;q("event",Q,Object.assign(Object.assign({},y),{send_to:x}))}}(pq,Yq[q.app.options.appId],X,Q,y).catch((q=>eq.error(q)))}function yX(q){pq?pq("consent","update",q):lq(q)}const xX="@firebase/analytics",uX="0.10.0";(0,y.u)(new H.g(Iq,((q,X)=>{let{options:Q}=X;return Gq(q.getProvider("app").getImmediate(),q.getProvider("installations-internal").getImmediate(),Q)}),"PUBLIC")),(0,y.u)(new H.g("analytics-internal",(function(q){try{const X=q.getProvider(Iq).getImmediate();return{logEvent:(q,Q,y)=>QX(X,q,Q,y)}}catch(X){throw Aq.create("interop-component-reg-failed",{reason:X})}}),"PRIVATE")),(0,y.N)(xX,uX),(0,y.N)(xX,uX,"esm2017")}}]);