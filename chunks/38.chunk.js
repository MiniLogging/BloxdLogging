/*! For license information please see 038r0g.38.e9e016ae.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{10959:(B,q,C)=>{C.r(q),C.d(q,{getAnalytics:()=>LB,getGoogleAnalyticsClientId:()=>FB,initializeAnalytics:()=>EB,isSupported:()=>NB,logEvent:()=>Cq,setAnalyticsCollectionEnabled:()=>Bq,setConsent:()=>vq,setCurrentScreen:()=>nB,setDefaultEventParameters:()=>qq,setUserId:()=>HB,setUserProperties:()=>MB,settings:()=>fB});var v=C(10941),m=C(10953),O=C(10947),S=C(10944);let D,R;const T=new WeakMap,l=new WeakMap,z=new WeakMap,W=new WeakMap,Z=new WeakMap;let G={get(B,q,C){if(B instanceof IDBTransaction){if("done"===q)return l.get(B);if("objectStoreNames"===q)return B.objectStoreNames||z.get(B);if("store"===q)return C.objectStoreNames[1]?void 0:C.objectStore(C.objectStoreNames[0])}return U(B[q])},set:(B,q,C)=>(B[q]=C,!0),has:(B,q)=>B instanceof IDBTransaction&&("done"===q||"store"===q)||q in B};function y(B){return B!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(R||(R=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(B)?function(){for(var q=arguments.length,C=new Array(q),v=0;v<q;v++)C[v]=arguments[v];return B.apply(s(this),C),U(T.get(this))}:function(){for(var q=arguments.length,C=new Array(q),v=0;v<q;v++)C[v]=arguments[v];return U(B.apply(s(this),C))}:function(q){for(var C=arguments.length,v=new Array(C>1?C-1:0),m=1;m<C;m++)v[m-1]=arguments[m];const O=B.call(s(this),q,...v);return z.set(O,q.sort?q.sort():[q]),U(O)}}function e(B){return"function"===typeof B?y(B):(B instanceof IDBTransaction&&function(B){if(l.has(B))return;const q=new Promise(((q,C)=>{const v=()=>{B.removeEventListener("complete",m),B.removeEventListener("error",O),B.removeEventListener("abort",O)},m=()=>{q(),v()},O=()=>{C(B.error||new DOMException("AbortError","AbortError")),v()};B.addEventListener("complete",m),B.addEventListener("error",O),B.addEventListener("abort",O)}));l.set(B,q)}(B),q=B,(D||(D=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((B=>q instanceof B))?new Proxy(B,G):B);var q}function U(B){if(B instanceof IDBRequest)return function(B){const q=new Promise(((q,C)=>{const v=()=>{B.removeEventListener("success",m),B.removeEventListener("error",O)},m=()=>{q(U(B.result)),v()},O=()=>{C(B.error),v()};B.addEventListener("success",m),B.addEventListener("error",O)}));return q.then((q=>{q instanceof IDBCursor&&T.set(q,B)})).catch((()=>{})),Z.set(q,B),q}(B);if(W.has(B))return W.get(B);const q=e(B);return q!==B&&(W.set(B,q),Z.set(q,B)),q}const s=B=>Z.get(B);const A=["get","getKey","getAll","getAllKeys","count"],r=["put","add","delete","clear"],X=new Map;function V(B,q){if(!(B instanceof IDBDatabase)||q in B||"string"!==typeof q)return;if(X.get(q))return X.get(q);const C=q.replace(/FromIndex$/,""),v=q!==C,m=r.includes(C);if(!(C in(v?IDBIndex:IDBObjectStore).prototype)||!m&&!A.includes(C))return;const O=async function(B){const q=this.transaction(B,m?"readwrite":"readonly");let O=q.store;for(var S=arguments.length,D=new Array(S>1?S-1:0),R=1;R<S;R++)D[R-1]=arguments[R];return v&&(O=O.index(D.shift())),(await Promise.all([O[C](...D),m&&q.done]))[0]};return X.set(q,O),O}G=(B=>({...B,get:(q,C,v)=>V(q,C)||B.get(q,C,v),has:(q,C)=>!!V(q,C)||B.has(q,C)}))(G);const I="@firebase/installations",o="0.6.4",Q=1e4,a=`w:${o}`,i="FIS_v2",u=36e5,k={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},h=new O.c("installations","Installations",k);function K(B){return B instanceof O.d&&B.code.includes("request-failed")}function d(B){let{projectId:q}=B;return`https://firebaseinstallations.googleapis.com/v1/projects/${q}/installations`}function g(B){return{token:B.token,requestStatus:2,expiresIn:(q=B.expiresIn,Number(q.replace("s","000"))),creationTime:Date.now()};var q}async function x(B,q){const C=(await q.json()).error;return h.create("request-failed",{requestName:B,serverCode:C.code,serverMessage:C.message,serverStatus:C.status})}function j(B){let{apiKey:q}=B;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":q})}function Y(B,q){let{refreshToken:C}=q;const v=j(B);return v.append("Authorization",function(B){return`${i} ${B}`}(C)),v}async function J(B){const q=await B();return q.status>=500&&q.status<600?B():q}function P(B){return new Promise((q=>{setTimeout(q,B)}))}const p=/^[cdef][\w-]{21}$/;function w(){try{const B=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(B),B[0]=112+B[0]%16;const q=function(B){const q=(C=B,btoa(String.fromCharCode(...C)).replace(/\+/g,"-").replace(/\//g,"_"));var C;return q.substr(0,22)}(B);return p.test(q)?q:""}catch(B){return""}}function t(B){return`${B.appName}!${B.appId}`}const c=new Map;function f(B,q){const C=t(B);b(C,q),function(B,q){const C=E();C&&C.postMessage({key:B,fid:q});N()}(C,q)}function b(B,q){const C=c.get(B);if(C)for(const v of C)v(q)}let L=null;function E(){return!L&&"BroadcastChannel"in self&&(L=new BroadcastChannel("[Firebase] FID Change"),L.onmessage=B=>{b(B.data.key,B.data.fid)}),L}function N(){0===c.size&&L&&(L.close(),L=null)}const n="firebase-installations-store";let F=null;function H(){return F||(F=function(B,q){let{blocked:C,upgrade:v,blocking:m,terminated:O}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const S=indexedDB.open(B,q),D=U(S);return v&&S.addEventListener("upgradeneeded",(B=>{v(U(S.result),B.oldVersion,B.newVersion,U(S.transaction))})),C&&S.addEventListener("blocked",(()=>C())),D.then((B=>{O&&B.addEventListener("close",(()=>O())),m&&B.addEventListener("versionchange",(()=>m()))})).catch((()=>{})),D}("firebase-installations-database",1,{upgrade:(B,q)=>{if(0===q)B.createObjectStore(n)}})),F}async function M(B,q){const C=t(B),v=(await H()).transaction(n,"readwrite"),m=v.objectStore(n),O=await m.get(C);return await m.put(q,C),await v.done,O&&O.fid===q.fid||f(B,q.fid),q}async function BB(B){const q=t(B),C=(await H()).transaction(n,"readwrite");await C.objectStore(n).delete(q),await C.done}async function qB(B,q){const C=t(B),v=(await H()).transaction(n,"readwrite"),m=v.objectStore(n),O=await m.get(C),S=q(O);return void 0===S?await m.delete(C):await m.put(S,C),await v.done,!S||O&&O.fid===S.fid||f(B,S.fid),S}async function CB(B){let q;const C=await qB(B.appConfig,(C=>{const v=function(B){const q=B||{fid:w(),registrationStatus:0};return OB(q)}(C),m=function(B,q){if(0===q.registrationStatus){if(!navigator.onLine){return{installationEntry:q,registrationPromise:Promise.reject(h.create("app-offline"))}}const C={fid:q.fid,registrationStatus:1,registrationTime:Date.now()},v=async function(B,q){try{const C=await async function(B,q){let{appConfig:C,heartbeatServiceProvider:v}=B,{fid:m}=q;const O=d(C),S=j(C),D=v.getImmediate({optional:!0});if(D){const B=await D.getHeartbeatsHeader();B&&S.append("x-firebase-client",B)}const R={fid:m,authVersion:i,appId:C.appId,sdkVersion:a},T={method:"POST",headers:S,body:JSON.stringify(R)},l=await J((()=>fetch(O,T)));if(l.ok){const B=await l.json();return{fid:B.fid||m,registrationStatus:2,refreshToken:B.refreshToken,authToken:g(B.authToken)}}throw await x("Create Installation",l)}(B,q);return M(B.appConfig,C)}catch(C){throw K(C)&&409===C.customData.serverCode?await BB(B.appConfig):await M(B.appConfig,{fid:q.fid,registrationStatus:0}),C}}(B,C);return{installationEntry:C,registrationPromise:v}}return 1===q.registrationStatus?{installationEntry:q,registrationPromise:vB(B)}:{installationEntry:q}}(B,v);return q=m.registrationPromise,m.installationEntry}));return""===C.fid?{installationEntry:await q}:{installationEntry:C,registrationPromise:q}}async function vB(B){let q=await mB(B.appConfig);for(;1===q.registrationStatus;)await P(100),q=await mB(B.appConfig);if(0===q.registrationStatus){const{installationEntry:q,registrationPromise:C}=await CB(B);return C||q}return q}function mB(B){return qB(B,(B=>{if(!B)throw h.create("installation-not-found");return OB(B)}))}function OB(B){return 1===(q=B).registrationStatus&&q.registrationTime+Q<Date.now()?{fid:B.fid,registrationStatus:0}:B;var q}async function SB(B,q){let{appConfig:C,heartbeatServiceProvider:v}=B;const m=function(B,q){let{fid:C}=q;return`${d(B)}/${C}/authTokens:generate`}(C,q),O=Y(C,q),S=v.getImmediate({optional:!0});if(S){const B=await S.getHeartbeatsHeader();B&&O.append("x-firebase-client",B)}const D={installation:{sdkVersion:a,appId:C.appId}},R={method:"POST",headers:O,body:JSON.stringify(D)},T=await J((()=>fetch(m,R)));if(T.ok){return g(await T.json())}throw await x("Generate Auth Token",T)}async function DB(B){let q,C=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const v=await qB(B.appConfig,(v=>{if(!TB(v))throw h.create("not-registered");const m=v.authToken;if(!C&&function(B){return 2===B.requestStatus&&!function(B){const q=Date.now();return q<B.creationTime||B.creationTime+B.expiresIn<q+u}(B)}(m))return v;if(1===m.requestStatus)return q=async function(B,q){let C=await RB(B.appConfig);for(;1===C.authToken.requestStatus;)await P(100),C=await RB(B.appConfig);const v=C.authToken;return 0===v.requestStatus?DB(B,q):v}(B,C),v;{if(!navigator.onLine)throw h.create("app-offline");const C=function(B){const q={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},B),{authToken:q})}(v);return q=async function(B,q){try{const C=await SB(B,q),v=Object.assign(Object.assign({},q),{authToken:C});return await M(B.appConfig,v),C}catch(C){if(!K(C)||401!==C.customData.serverCode&&404!==C.customData.serverCode){const C=Object.assign(Object.assign({},q),{authToken:{requestStatus:0}});await M(B.appConfig,C)}else await BB(B.appConfig);throw C}}(B,C),C}}));return q?await q:v.authToken}function RB(B){return qB(B,(B=>{if(!TB(B))throw h.create("not-registered");const q=B.authToken;return 1===(C=q).requestStatus&&C.requestTime+Q<Date.now()?Object.assign(Object.assign({},B),{authToken:{requestStatus:0}}):B;var C}))}function TB(B){return void 0!==B&&2===B.registrationStatus}async function lB(B){let q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=B;await async function(B){const{registrationPromise:q}=await CB(B);q&&await q}(C);return(await DB(C,q)).token}function zB(B){return h.create("missing-app-config-values",{valueName:B})}const WB="installations",ZB=B=>{const q=B.getProvider("app").getImmediate(),C=function(B){if(!B||!B.options)throw zB("App Configuration");if(!B.name)throw zB("App Name");const q=["projectId","apiKey","appId"];for(const C of q)if(!B.options[C])throw zB(C);return{appName:B.name,projectId:B.options.projectId,apiKey:B.options.apiKey,appId:B.options.appId}}(q);return{app:q,appConfig:C,heartbeatServiceProvider:(0,v.v)(q,"heartbeat"),_delete:()=>Promise.resolve()}},GB=B=>{const q=B.getProvider("app").getImmediate(),C=(0,v.v)(q,WB).getImmediate();return{getId:()=>async function(B){const q=B,{installationEntry:C,registrationPromise:v}=await CB(q);return v?v.catch(console.error):DB(q).catch(console.error),C.fid}(C),getToken:B=>lB(C,B)}};(0,v.w)(new S.e(WB,ZB,"PUBLIC")),(0,v.w)(new S.e("installations-internal",GB,"PRIVATE")),(0,v.V)(I,o),(0,v.V)(I,o,"esm2017");const yB="analytics",eB="https://www.googletagmanager.com/gtag/js",UB=new m.f("@firebase/analytics"),sB={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},AB=new O.c("analytics","Analytics",sB);function rB(B){if(!B.startsWith(eB)){const q=AB.create("invalid-gtag-resource",{gtagURL:B});return UB.warn(q.message),""}return B}function XB(B){return Promise.all(B.map((B=>B.catch((B=>B)))))}function VB(B,q){const C=function(B,q){let C;return window.trustedTypes&&(C=window.trustedTypes.createPolicy(B,q)),C}("firebase-js-sdk-policy",{createScriptURL:rB}),v=document.createElement("script"),m=`${eB}?l=${B}&id=${q}`;v.src=C?null===C||void 0===C?void 0:C.createScriptURL(m):m,v.async=!0,document.head.appendChild(v)}function IB(B,q,C,v){return async function(m){try{for(var O=arguments.length,S=new Array(O>1?O-1:0),D=1;D<O;D++)S[D-1]=arguments[D];if("event"===m){const[v,m]=S;await async function(B,q,C,v,m){try{let O=[];if(m&&m.send_to){let B=m.send_to;Array.isArray(B)||(B=[B]);const v=await XB(C);for(const C of B){const B=v.find((B=>B.measurementId===C)),m=B&&q[B.appId];if(!m){O=[];break}O.push(m)}}0===O.length&&(O=Object.values(q)),await Promise.all(O),B("event",v,m||{})}catch(O){UB.error(O)}}(B,q,C,v,m)}else if("config"===m){const[m,O]=S;await async function(B,q,C,v,m,O){const S=v[m];try{if(S)await q[S];else{const B=(await XB(C)).find((B=>B.measurementId===m));B&&await q[B.appId]}}catch(D){UB.error(D)}B("config",m,O)}(B,q,C,v,m,O)}else if("consent"===m){const[q]=S;B("consent","update",q)}else if("get"===m){const[q,C,v]=S;B("get",q,C,v)}else if("set"===m){const[q]=S;B("set",q)}else B(m,...S)}catch(R){UB.error(R)}}}const oB=new class{constructor(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=B,this.intervalMillis=q}getThrottleMetadata(B){return this.throttleMetadata[B]}setThrottleMetadata(B,q){this.throttleMetadata[B]=q}deleteThrottleMetadata(B){delete this.throttleMetadata[B]}};function QB(B){return new Headers({Accept:"application/json","x-goog-api-key":B})}async function aB(B){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:oB,C=arguments.length>2?arguments[2]:void 0;const{appId:v,apiKey:m,measurementId:O}=B.options;if(!v)throw AB.create("no-app-id");if(!m){if(O)return{measurementId:O,appId:v};throw AB.create("no-api-key")}const S=q.getThrottleMetadata(v)||{backoffCount:0,throttleEndTimeMillis:Date.now()},D=new uB;return setTimeout((async()=>{D.abort()}),void 0!==C?C:6e4),iB({appId:v,apiKey:m,measurementId:O},S,D,q)}async function iB(B,q,C){let{throttleEndTimeMillis:v,backoffCount:m}=q,S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:oB;var D;const{appId:R,measurementId:T}=B;try{await function(B,q){return new Promise(((C,v)=>{const m=Math.max(q-Date.now(),0),O=setTimeout(C,m);B.addEventListener((()=>{clearTimeout(O),v(AB.create("fetch-throttle",{throttleEndTimeMillis:q}))}))}))}(C,v)}catch(l){if(T)return UB.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${T} provided in the "measurementId" field in the local Firebase config. [${null===l||void 0===l?void 0:l.message}]`),{appId:R,measurementId:T};throw l}try{const q=await async function(B){var q;const{appId:C,apiKey:v}=B,m={method:"GET",headers:QB(v)},O="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",C),S=await fetch(O,m);if(200!==S.status&&304!==S.status){let B="";try{const C=await S.json();(null===(q=C.error)||void 0===q?void 0:q.message)&&(B=C.error.message)}catch(D){}throw AB.create("config-fetch-failed",{httpStatus:S.status,responseMessage:B})}return S.json()}(B);return S.deleteThrottleMetadata(R),q}catch(l){const q=l;if(!function(B){if(!(B instanceof O.d)||!B.customData)return!1;const q=Number(B.customData.httpStatus);return 429===q||500===q||503===q||504===q}(q)){if(S.deleteThrottleMetadata(R),T)return UB.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${T} provided in the "measurementId" field in the local Firebase config. [${null===q||void 0===q?void 0:q.message}]`),{appId:R,measurementId:T};throw l}const v=503===Number(null===(D=null===q||void 0===q?void 0:q.customData)||void 0===D?void 0:D.httpStatus)?(0,O.n)(m,S.intervalMillis,30):(0,O.n)(m,S.intervalMillis),z={throttleEndTimeMillis:Date.now()+v,backoffCount:m+1};return S.setThrottleMetadata(R,z),UB.debug(`Calling attemptFetch again in ${v} millis`),iB(B,z,C,S)}}class uB{constructor(){this.listeners=[]}addEventListener(B){this.listeners.push(B)}abort(){this.listeners.forEach((B=>B()))}}let kB,hB;function KB(B){hB=B}function dB(B){kB=B}async function gB(B,q,C,v,m,S,D){var R;const T=aB(B);T.then((q=>{C[q.measurementId]=q.appId,B.options.measurementId&&q.measurementId!==B.options.measurementId&&UB.warn(`The measurement ID in the local Firebase config (${B.options.measurementId}) does not match the measurement ID fetched from the server (${q.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((B=>UB.error(B))),q.push(T);const l=async function(){if(!(0,O.Z)())return UB.warn(AB.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,O.lb)()}catch(B){return UB.warn(AB.create("indexeddb-unavailable",{errorInfo:null===B||void 0===B?void 0:B.toString()}).message),!1}return!0}().then((B=>B?v.getId():void 0)),[z,W]=await Promise.all([T,l]);(function(B){const q=window.document.getElementsByTagName("script");for(const C of Object.values(q))if(C.src&&C.src.includes(eB)&&C.src.includes(B))return C;return null})(S)||VB(S,z.measurementId),hB&&(m("consent","default",hB),KB(void 0)),m("ma",new Date);const Z=null!==(R=null===D||void 0===D?void 0:D.config)&&void 0!==R?R:{};return Z.origin="firebase",Z.update=!0,null!=W&&(Z.firebase_id=W),m("config",z.measurementId,Z),kB&&(m("set",kB),dB(void 0)),z.measurementId}class xB{constructor(B){this.app=B}_delete(){return delete jB[this.app.options.appId],Promise.resolve()}}let jB={},YB=[];const JB={};let PB,pB,wB="dataLayer",tB="gtag",cB=!1;function fB(B){if(cB)throw AB.create("already-initialized");B.dataLayerName&&(wB=B.dataLayerName),B.gtagName&&(tB=B.gtagName)}function bB(B,q,C){!function(){const B=[];if((0,O.Q)()&&B.push("This is a browser extension environment."),(0,O.f)()||B.push("Cookies are not available."),B.length>0){const q=B.map(((B,q)=>`(${q+1}) ${B}`)).join(" "),C=AB.create("invalid-analytics-context",{errorInfo:q});UB.warn(C.message)}}();const v=B.options.appId;if(!v)throw AB.create("no-app-id");if(!B.options.apiKey){if(!B.options.measurementId)throw AB.create("no-api-key");UB.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${B.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=jB[v])throw AB.create("already-exists",{id:v});if(!cB){!function(B){let q=[];Array.isArray(window[B])?q=window[B]:window[B]=q}(wB);const{wrappedGtag:B,gtagCore:q}=function(B,q,C,v,m){let O=function(){for(var B=arguments.length,q=new Array(B),C=0;C<B;C++)q[C]=arguments[C];window[v].push(arguments)};return window[m]&&"function"===typeof window[m]&&(O=window[m]),window[m]=IB(O,B,q,C),{gtagCore:O,wrappedGtag:window[m]}}(jB,YB,JB,wB,tB);pB=B,PB=q,cB=!0}jB[v]=gB(B,YB,JB,q,PB,wB,C);return new xB(B)}function LB(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,v.L)();B=(0,O.J)(B);const q=(0,v.v)(B,yB);return q.isInitialized()?q.getImmediate():EB(B)}function EB(B){let q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const C=(0,v.v)(B,yB);if(C.isInitialized()){const B=C.getImmediate();if((0,O.v)(q,C.getOptions()))return B;throw AB.create("already-initialized")}return C.initialize({options:q})}async function NB(){if((0,O.Q)())return!1;if(!(0,O.f)())return!1;if(!(0,O.Z)())return!1;try{return await(0,O.lb)()}catch(B){return!1}}function nB(B,q,C){B=(0,O.J)(B),async function(B,q,C,v){if(v&&v.global)return B("set",{screen_name:C}),Promise.resolve();B("config",await q,{update:!0,screen_name:C})}(pB,jB[B.app.options.appId],q,C).catch((B=>UB.error(B)))}async function FB(B){return B=(0,O.J)(B),async function(B,q){const C=await q;return new Promise(((q,v)=>{B("get",C,"client_id",(B=>{B||v(AB.create("no-client-id")),q(B)}))}))}(pB,jB[B.app.options.appId])}function HB(B,q,C){B=(0,O.J)(B),async function(B,q,C,v){if(v&&v.global)return B("set",{user_id:C}),Promise.resolve();B("config",await q,{update:!0,user_id:C})}(pB,jB[B.app.options.appId],q,C).catch((B=>UB.error(B)))}function MB(B,q,C){B=(0,O.J)(B),async function(B,q,C,v){if(v&&v.global){const q={};for(const B of Object.keys(C))q[`user_properties.${B}`]=C[B];return B("set",q),Promise.resolve()}B("config",await q,{update:!0,user_properties:C})}(pB,jB[B.app.options.appId],q,C).catch((B=>UB.error(B)))}function Bq(B,q){B=(0,O.J)(B),async function(B,q){const C=await B;window[`ga-disable-${C}`]=!q}(jB[B.app.options.appId],q).catch((B=>UB.error(B)))}function qq(B){pB?pB("set",B):dB(B)}function Cq(B,q,C,v){B=(0,O.J)(B),async function(B,q,C,v,m){if(m&&m.global)B("event",C,v);else{const m=await q;B("event",C,Object.assign(Object.assign({},v),{send_to:m}))}}(pB,jB[B.app.options.appId],q,C,v).catch((B=>UB.error(B)))}function vq(B){pB?pB("consent","update",B):KB(B)}const mq="@firebase/analytics",Oq="0.10.0";(0,v.w)(new S.e(yB,((B,q)=>{let{options:C}=q;return bB(B.getProvider("app").getImmediate(),B.getProvider("installations-internal").getImmediate(),C)}),"PUBLIC")),(0,v.w)(new S.e("analytics-internal",(function(B){try{const q=B.getProvider(yB).getImmediate();return{logEvent:(B,C,v)=>Cq(q,B,C,v)}}catch(q){throw AB.create("interop-component-reg-failed",{reason:q})}}),"PRIVATE")),(0,v.V)(mq,Oq),(0,v.V)(mq,Oq,"esm2017")}}]);