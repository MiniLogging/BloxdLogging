/*! For license information please see 1kv4fg.38.00e32282.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11692:(D,j,W)=>{W.r(j),W.d(j,{getAnalytics:()=>oD,getGoogleAnalyticsClientId:()=>vD,initializeAnalytics:()=>JD,isSupported:()=>hD,logEvent:()=>Wj,setAnalyticsCollectionEnabled:()=>Dj,setConsent:()=>Qj,setCurrentScreen:()=>dD,setDefaultEventParameters:()=>jj,setUserId:()=>BD,setUserProperties:()=>rD,settings:()=>uD});var Q=W(11665),C=W(11683),k=W(11676),M=W(11669);let O,E;const f=new WeakMap,F=new WeakMap,Z=new WeakMap,P=new WeakMap,X=new WeakMap;let x={get(D,j,W){if(D instanceof IDBTransaction){if("done"===j)return F.get(D);if("objectStoreNames"===j)return D.objectStoreNames||Z.get(D);if("store"===j)return W.objectStoreNames[1]?void 0:W.objectStore(W.objectStoreNames[0])}return U(D[j])},set:(D,j,W)=>(D[j]=W,!0),has:(D,j)=>D instanceof IDBTransaction&&("done"===j||"store"===j)||j in D};function R(D){return D!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(E||(E=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(D)?function(){for(var j=arguments.length,W=new Array(j),Q=0;Q<j;Q++)W[Q]=arguments[Q];return D.apply(g(this),W),U(f.get(this))}:function(){for(var j=arguments.length,W=new Array(j),Q=0;Q<j;Q++)W[Q]=arguments[Q];return U(D.apply(g(this),W))}:function(j){for(var W=arguments.length,Q=new Array(W>1?W-1:0),C=1;C<W;C++)Q[C-1]=arguments[C];const k=D.call(g(this),j,...Q);return Z.set(k,j.sort?j.sort():[j]),U(k)}}function V(D){return"function"===typeof D?R(D):(D instanceof IDBTransaction&&function(D){if(F.has(D))return;const j=new Promise(((j,W)=>{const Q=()=>{D.removeEventListener("complete",C),D.removeEventListener("error",k),D.removeEventListener("abort",k)},C=()=>{j(),Q()},k=()=>{W(D.error||new DOMException("AbortError","AbortError")),Q()};D.addEventListener("complete",C),D.addEventListener("error",k),D.addEventListener("abort",k)}));F.set(D,j)}(D),j=D,(O||(O=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((D=>j instanceof D))?new Proxy(D,x):D);var j}function U(D){if(D instanceof IDBRequest)return function(D){const j=new Promise(((j,W)=>{const Q=()=>{D.removeEventListener("success",C),D.removeEventListener("error",k)},C=()=>{j(U(D.result)),Q()},k=()=>{W(D.error),Q()};D.addEventListener("success",C),D.addEventListener("error",k)}));return j.then((j=>{j instanceof IDBCursor&&f.set(j,D)})).catch((()=>{})),X.set(j,D),j}(D);if(P.has(D))return P.get(D);const j=V(D);return j!==D&&(P.set(D,j),X.set(j,D)),j}const g=D=>X.get(D);const N=["get","getKey","getAll","getAllKeys","count"],G=["put","add","delete","clear"],K=new Map;function L(D,j){if(!(D instanceof IDBDatabase)||j in D||"string"!==typeof j)return;if(K.get(j))return K.get(j);const W=j.replace(/FromIndex$/,""),Q=j!==W,C=G.includes(W);if(!(W in(Q?IDBIndex:IDBObjectStore).prototype)||!C&&!N.includes(W))return;const k=async function(D){const j=this.transaction(D,C?"readwrite":"readonly");let k=j.store;for(var M=arguments.length,O=new Array(M>1?M-1:0),E=1;E<M;E++)O[E-1]=arguments[E];return Q&&(k=k.index(O.shift())),(await Promise.all([k[W](...O),C&&j.done]))[0]};return K.set(j,k),k}x=(D=>({...D,get:(j,W,Q)=>L(j,W)||D.get(j,W,Q),has:(j,W)=>!!L(j,W)||D.has(j,W)}))(x);const e="@firebase/installations",s="0.6.4",b=1e4,Y=`w:${s}`,t="FIS_v2",c=36e5,l={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},I=new k.e("installations","Installations",l);function y(D){return D instanceof k.h&&D.code.includes("request-failed")}function m(D){let{projectId:j}=D;return`https://firebaseinstallations.googleapis.com/v1/projects/${j}/installations`}function a(D){return{token:D.token,requestStatus:2,expiresIn:(j=D.expiresIn,Number(j.replace("s","000"))),creationTime:Date.now()};var j}async function S(D,j){const W=(await j.json()).error;return I.create("request-failed",{requestName:D,serverCode:W.code,serverMessage:W.message,serverStatus:W.status})}function H(D){let{apiKey:j}=D;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":j})}function z(D,j){let{refreshToken:W}=j;const Q=H(D);return Q.append("Authorization",function(D){return`${t} ${D}`}(W)),Q}async function i(D){const j=await D();return j.status>=500&&j.status<600?D():j}function p(D){return new Promise((j=>{setTimeout(j,D)}))}const T=/^[cdef][\w-]{21}$/;function A(){try{const D=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(D),D[0]=112+D[0]%16;const j=function(D){const j=(W=D,btoa(String.fromCharCode(...W)).replace(/\+/g,"-").replace(/\//g,"_"));var W;return j.substr(0,22)}(D);return T.test(j)?j:""}catch(D){return""}}function w(D){return`${D.appName}!${D.appId}`}const n=new Map;function u(D,j){const W=w(D);q(W,j),function(D,j){const W=J();W&&W.postMessage({key:D,fid:j});h()}(W,j)}function q(D,j){const W=n.get(D);if(W)for(const Q of W)Q(j)}let o=null;function J(){return!o&&"BroadcastChannel"in self&&(o=new BroadcastChannel("[Firebase] FID Change"),o.onmessage=D=>{q(D.data.key,D.data.fid)}),o}function h(){0===n.size&&o&&(o.close(),o=null)}const d="firebase-installations-store";let v=null;function B(){return v||(v=function(D,j){let{blocked:W,upgrade:Q,blocking:C,terminated:k}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const M=indexedDB.open(D,j),O=U(M);return Q&&M.addEventListener("upgradeneeded",(D=>{Q(U(M.result),D.oldVersion,D.newVersion,U(M.transaction))})),W&&M.addEventListener("blocked",(()=>W())),O.then((D=>{k&&D.addEventListener("close",(()=>k())),C&&D.addEventListener("versionchange",(()=>C()))})).catch((()=>{})),O}("firebase-installations-database",1,{upgrade:(D,j)=>{if(0===j)D.createObjectStore(d)}})),v}async function r(D,j){const W=w(D),Q=(await B()).transaction(d,"readwrite"),C=Q.objectStore(d),k=await C.get(W);return await C.put(j,W),await Q.done,k&&k.fid===j.fid||u(D,j.fid),j}async function DD(D){const j=w(D),W=(await B()).transaction(d,"readwrite");await W.objectStore(d).delete(j),await W.done}async function jD(D,j){const W=w(D),Q=(await B()).transaction(d,"readwrite"),C=Q.objectStore(d),k=await C.get(W),M=j(k);return void 0===M?await C.delete(W):await C.put(M,W),await Q.done,!M||k&&k.fid===M.fid||u(D,M.fid),M}async function WD(D){let j;const W=await jD(D.appConfig,(W=>{const Q=function(D){const j=D||{fid:A(),registrationStatus:0};return kD(j)}(W),C=function(D,j){if(0===j.registrationStatus){if(!navigator.onLine){return{installationEntry:j,registrationPromise:Promise.reject(I.create("app-offline"))}}const W={fid:j.fid,registrationStatus:1,registrationTime:Date.now()},Q=async function(D,j){try{const W=await async function(D,j){let{appConfig:W,heartbeatServiceProvider:Q}=D,{fid:C}=j;const k=m(W),M=H(W),O=Q.getImmediate({optional:!0});if(O){const D=await O.getHeartbeatsHeader();D&&M.append("x-firebase-client",D)}const E={fid:C,authVersion:t,appId:W.appId,sdkVersion:Y},f={method:"POST",headers:M,body:JSON.stringify(E)},F=await i((()=>fetch(k,f)));if(F.ok){const D=await F.json();return{fid:D.fid||C,registrationStatus:2,refreshToken:D.refreshToken,authToken:a(D.authToken)}}throw await S("Create Installation",F)}(D,j);return r(D.appConfig,W)}catch(W){throw y(W)&&409===W.customData.serverCode?await DD(D.appConfig):await r(D.appConfig,{fid:j.fid,registrationStatus:0}),W}}(D,W);return{installationEntry:W,registrationPromise:Q}}return 1===j.registrationStatus?{installationEntry:j,registrationPromise:QD(D)}:{installationEntry:j}}(D,Q);return j=C.registrationPromise,C.installationEntry}));return""===W.fid?{installationEntry:await j}:{installationEntry:W,registrationPromise:j}}async function QD(D){let j=await CD(D.appConfig);for(;1===j.registrationStatus;)await p(100),j=await CD(D.appConfig);if(0===j.registrationStatus){const{installationEntry:j,registrationPromise:W}=await WD(D);return W||j}return j}function CD(D){return jD(D,(D=>{if(!D)throw I.create("installation-not-found");return kD(D)}))}function kD(D){return 1===(j=D).registrationStatus&&j.registrationTime+b<Date.now()?{fid:D.fid,registrationStatus:0}:D;var j}async function MD(D,j){let{appConfig:W,heartbeatServiceProvider:Q}=D;const C=function(D,j){let{fid:W}=j;return`${m(D)}/${W}/authTokens:generate`}(W,j),k=z(W,j),M=Q.getImmediate({optional:!0});if(M){const D=await M.getHeartbeatsHeader();D&&k.append("x-firebase-client",D)}const O={installation:{sdkVersion:Y,appId:W.appId}},E={method:"POST",headers:k,body:JSON.stringify(O)},f=await i((()=>fetch(C,E)));if(f.ok){return a(await f.json())}throw await S("Generate Auth Token",f)}async function OD(D){let j,W=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=await jD(D.appConfig,(Q=>{if(!fD(Q))throw I.create("not-registered");const C=Q.authToken;if(!W&&function(D){return 2===D.requestStatus&&!function(D){const j=Date.now();return j<D.creationTime||D.creationTime+D.expiresIn<j+c}(D)}(C))return Q;if(1===C.requestStatus)return j=async function(D,j){let W=await ED(D.appConfig);for(;1===W.authToken.requestStatus;)await p(100),W=await ED(D.appConfig);const Q=W.authToken;return 0===Q.requestStatus?OD(D,j):Q}(D,W),Q;{if(!navigator.onLine)throw I.create("app-offline");const W=function(D){const j={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},D),{authToken:j})}(Q);return j=async function(D,j){try{const W=await MD(D,j),Q=Object.assign(Object.assign({},j),{authToken:W});return await r(D.appConfig,Q),W}catch(W){if(!y(W)||401!==W.customData.serverCode&&404!==W.customData.serverCode){const W=Object.assign(Object.assign({},j),{authToken:{requestStatus:0}});await r(D.appConfig,W)}else await DD(D.appConfig);throw W}}(D,W),W}}));return j?await j:Q.authToken}function ED(D){return jD(D,(D=>{if(!fD(D))throw I.create("not-registered");const j=D.authToken;return 1===(W=j).requestStatus&&W.requestTime+b<Date.now()?Object.assign(Object.assign({},D),{authToken:{requestStatus:0}}):D;var W}))}function fD(D){return void 0!==D&&2===D.registrationStatus}async function FD(D){let j=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const W=D;await async function(D){const{registrationPromise:j}=await WD(D);j&&await j}(W);return(await OD(W,j)).token}function ZD(D){return I.create("missing-app-config-values",{valueName:D})}const PD="installations",XD=D=>{const j=D.getProvider("app").getImmediate(),W=function(D){if(!D||!D.options)throw ZD("App Configuration");if(!D.name)throw ZD("App Name");const j=["projectId","apiKey","appId"];for(const W of j)if(!D.options[W])throw ZD(W);return{appName:D.name,projectId:D.options.projectId,apiKey:D.options.apiKey,appId:D.options.appId}}(j);return{app:j,appConfig:W,heartbeatServiceProvider:(0,Q.v)(j,"heartbeat"),_delete:()=>Promise.resolve()}},xD=D=>{const j=D.getProvider("app").getImmediate(),W=(0,Q.v)(j,PD).getImmediate();return{getId:()=>async function(D){const j=D,{installationEntry:W,registrationPromise:Q}=await WD(j);return Q?Q.catch(console.error):OD(j).catch(console.error),W.fid}(W),getToken:D=>FD(W,D)}};(0,Q.w)(new M.h(PD,XD,"PUBLIC")),(0,Q.w)(new M.h("installations-internal",xD,"PRIVATE")),(0,Q.L)(e,s),(0,Q.L)(e,s,"esm2017");const RD="analytics",VD="https://www.googletagmanager.com/gtag/js",UD=new C.c("@firebase/analytics"),gD={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},ND=new k.e("analytics","Analytics",gD);function GD(D){if(!D.startsWith(VD)){const j=ND.create("invalid-gtag-resource",{gtagURL:D});return UD.warn(j.message),""}return D}function KD(D){return Promise.all(D.map((D=>D.catch((D=>D)))))}function LD(D,j){const W=function(D,j){let W;return window.trustedTypes&&(W=window.trustedTypes.createPolicy(D,j)),W}("firebase-js-sdk-policy",{createScriptURL:GD}),Q=document.createElement("script"),C=`${VD}?l=${D}&id=${j}`;Q.src=W?null===W||void 0===W?void 0:W.createScriptURL(C):C,Q.async=!0,document.head.appendChild(Q)}function eD(D,j,W,Q){return async function(C){try{for(var k=arguments.length,M=new Array(k>1?k-1:0),O=1;O<k;O++)M[O-1]=arguments[O];if("event"===C){const[Q,C]=M;await async function(D,j,W,Q,C){try{let k=[];if(C&&C.send_to){let D=C.send_to;Array.isArray(D)||(D=[D]);const Q=await KD(W);for(const W of D){const D=Q.find((D=>D.measurementId===W)),C=D&&j[D.appId];if(!C){k=[];break}k.push(C)}}0===k.length&&(k=Object.values(j)),await Promise.all(k),D("event",Q,C||{})}catch(k){UD.error(k)}}(D,j,W,Q,C)}else if("config"===C){const[C,k]=M;await async function(D,j,W,Q,C,k){const M=Q[C];try{if(M)await j[M];else{const D=(await KD(W)).find((D=>D.measurementId===C));D&&await j[D.appId]}}catch(O){UD.error(O)}D("config",C,k)}(D,j,W,Q,C,k)}else if("consent"===C){const[j]=M;D("consent","update",j)}else if("get"===C){const[j,W,Q]=M;D("get",j,W,Q)}else if("set"===C){const[j]=M;D("set",j)}else D(C,...M)}catch(E){UD.error(E)}}}const sD=new class{constructor(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},j=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=D,this.intervalMillis=j}getThrottleMetadata(D){return this.throttleMetadata[D]}setThrottleMetadata(D,j){this.throttleMetadata[D]=j}deleteThrottleMetadata(D){delete this.throttleMetadata[D]}};function bD(D){return new Headers({Accept:"application/json","x-goog-api-key":D})}async function YD(D){let j=arguments.length>1&&void 0!==arguments[1]?arguments[1]:sD,W=arguments.length>2?arguments[2]:void 0;const{appId:Q,apiKey:C,measurementId:k}=D.options;if(!Q)throw ND.create("no-app-id");if(!C){if(k)return{measurementId:k,appId:Q};throw ND.create("no-api-key")}const M=j.getThrottleMetadata(Q)||{backoffCount:0,throttleEndTimeMillis:Date.now()},O=new cD;return setTimeout((async()=>{O.abort()}),void 0!==W?W:6e4),tD({appId:Q,apiKey:C,measurementId:k},M,O,j)}async function tD(D,j,W){let{throttleEndTimeMillis:Q,backoffCount:C}=j,M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:sD;var O;const{appId:E,measurementId:f}=D;try{await function(D,j){return new Promise(((W,Q)=>{const C=Math.max(j-Date.now(),0),k=setTimeout(W,C);D.addEventListener((()=>{clearTimeout(k),Q(ND.create("fetch-throttle",{throttleEndTimeMillis:j}))}))}))}(W,Q)}catch(F){if(f)return UD.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${f} provided in the "measurementId" field in the local Firebase config. [${null===F||void 0===F?void 0:F.message}]`),{appId:E,measurementId:f};throw F}try{const j=await async function(D){var j;const{appId:W,apiKey:Q}=D,C={method:"GET",headers:bD(Q)},k="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",W),M=await fetch(k,C);if(200!==M.status&&304!==M.status){let D="";try{const W=await M.json();(null===(j=W.error)||void 0===j?void 0:j.message)&&(D=W.error.message)}catch(O){}throw ND.create("config-fetch-failed",{httpStatus:M.status,responseMessage:D})}return M.json()}(D);return M.deleteThrottleMetadata(E),j}catch(F){const j=F;if(!function(D){if(!(D instanceof k.h)||!D.customData)return!1;const j=Number(D.customData.httpStatus);return 429===j||500===j||503===j||504===j}(j)){if(M.deleteThrottleMetadata(E),f)return UD.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${f} provided in the "measurementId" field in the local Firebase config. [${null===j||void 0===j?void 0:j.message}]`),{appId:E,measurementId:f};throw F}const Q=503===Number(null===(O=null===j||void 0===j?void 0:j.customData)||void 0===O?void 0:O.httpStatus)?(0,k.r)(C,M.intervalMillis,30):(0,k.r)(C,M.intervalMillis),Z={throttleEndTimeMillis:Date.now()+Q,backoffCount:C+1};return M.setThrottleMetadata(E,Z),UD.debug(`Calling attemptFetch again in ${Q} millis`),tD(D,Z,W,M)}}class cD{constructor(){this.listeners=[]}addEventListener(D){this.listeners.push(D)}abort(){this.listeners.forEach((D=>D()))}}let lD,ID;function yD(D){ID=D}function mD(D){lD=D}async function aD(D,j,W,Q,C,M,O){var E;const f=YD(D);f.then((j=>{W[j.measurementId]=j.appId,D.options.measurementId&&j.measurementId!==D.options.measurementId&&UD.warn(`The measurement ID in the local Firebase config (${D.options.measurementId}) does not match the measurement ID fetched from the server (${j.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((D=>UD.error(D))),j.push(f);const F=async function(){if(!(0,k.Y)())return UD.warn(ND.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,k.ib)()}catch(D){return UD.warn(ND.create("indexeddb-unavailable",{errorInfo:null===D||void 0===D?void 0:D.toString()}).message),!1}return!0}().then((D=>D?Q.getId():void 0)),[Z,P]=await Promise.all([f,F]);(function(D){const j=window.document.getElementsByTagName("script");for(const W of Object.values(j))if(W.src&&W.src.includes(VD)&&W.src.includes(D))return W;return null})(M)||LD(M,Z.measurementId),ID&&(C("consent","default",ID),yD(void 0)),C("js",new Date);const X=null!==(E=null===O||void 0===O?void 0:O.config)&&void 0!==E?E:{};return X.origin="firebase",X.update=!0,null!=P&&(X.firebase_id=P),C("config",Z.measurementId,X),lD&&(C("set",lD),mD(void 0)),Z.measurementId}class SD{constructor(D){this.app=D}_delete(){return delete HD[this.app.options.appId],Promise.resolve()}}let HD={},zD=[];const iD={};let pD,TD,AD="dataLayer",wD="gtag",nD=!1;function uD(D){if(nD)throw ND.create("already-initialized");D.dataLayerName&&(AD=D.dataLayerName),D.gtagName&&(wD=D.gtagName)}function qD(D,j,W){!function(){const D=[];if((0,k.P)()&&D.push("This is a browser extension environment."),(0,k.j)()||D.push("Cookies are not available."),D.length>0){const j=D.map(((D,j)=>`(${j+1}) ${D}`)).join(" "),W=ND.create("invalid-analytics-context",{errorInfo:j});UD.warn(W.message)}}();const Q=D.options.appId;if(!Q)throw ND.create("no-app-id");if(!D.options.apiKey){if(!D.options.measurementId)throw ND.create("no-api-key");UD.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${D.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=HD[Q])throw ND.create("already-exists",{id:Q});if(!nD){!function(D){let j=[];Array.isArray(window[D])?j=window[D]:window[D]=j}(AD);const{wrappedGtag:D,gtagCore:j}=function(D,j,W,Q,C){let k=function(){for(var D=arguments.length,j=new Array(D),W=0;W<D;W++)j[W]=arguments[W];window[Q].push(arguments)};return window[C]&&"function"===typeof window[C]&&(k=window[C]),window[C]=eD(k,D,j,W),{gtagCore:k,wrappedGtag:window[C]}}(HD,zD,iD,AD,wD);TD=D,pD=j,nD=!0}HD[Q]=aD(D,zD,iD,j,pD,AD,W);return new SD(D)}function oD(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,Q.I)();D=(0,k.J)(D);const j=(0,Q.v)(D,RD);return j.isInitialized()?j.getImmediate():JD(D)}function JD(D){let j=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const W=(0,Q.v)(D,RD);if(W.isInitialized()){const D=W.getImmediate();if((0,k.w)(j,W.getOptions()))return D;throw ND.create("already-initialized")}return W.initialize({options:j})}async function hD(){if((0,k.P)())return!1;if(!(0,k.j)())return!1;if(!(0,k.Y)())return!1;try{return await(0,k.ib)()}catch(D){return!1}}function dD(D,j,W){D=(0,k.J)(D),async function(D,j,W,Q){if(Q&&Q.global)return D("set",{screen_name:W}),Promise.resolve();D("config",await j,{update:!0,screen_name:W})}(TD,HD[D.app.options.appId],j,W).catch((D=>UD.error(D)))}async function vD(D){return D=(0,k.J)(D),async function(D,j){const W=await j;return new Promise(((j,Q)=>{D("get",W,"client_id",(D=>{D||Q(ND.create("no-client-id")),j(D)}))}))}(TD,HD[D.app.options.appId])}function BD(D,j,W){D=(0,k.J)(D),async function(D,j,W,Q){if(Q&&Q.global)return D("set",{user_id:W}),Promise.resolve();D("config",await j,{update:!0,user_id:W})}(TD,HD[D.app.options.appId],j,W).catch((D=>UD.error(D)))}function rD(D,j,W){D=(0,k.J)(D),async function(D,j,W,Q){if(Q&&Q.global){const j={};for(const D of Object.keys(W))j[`user_properties.${D}`]=W[D];return D("set",j),Promise.resolve()}D("config",await j,{update:!0,user_properties:W})}(TD,HD[D.app.options.appId],j,W).catch((D=>UD.error(D)))}function Dj(D,j){D=(0,k.J)(D),async function(D,j){const W=await D;window[`ga-disable-${W}`]=!j}(HD[D.app.options.appId],j).catch((D=>UD.error(D)))}function jj(D){TD?TD("set",D):mD(D)}function Wj(D,j,W,Q){D=(0,k.J)(D),async function(D,j,W,Q,C){if(C&&C.global)D("event",W,Q);else{const C=await j;D("event",W,Object.assign(Object.assign({},Q),{send_to:C}))}}(TD,HD[D.app.options.appId],j,W,Q).catch((D=>UD.error(D)))}function Qj(D){TD?TD("consent","update",D):yD(D)}const Cj="@firebase/analytics",kj="0.10.0";(0,Q.w)(new M.h(RD,((D,j)=>{let{options:W}=j;return qD(D.getProvider("app").getImmediate(),D.getProvider("installations-internal").getImmediate(),W)}),"PUBLIC")),(0,Q.w)(new M.h("analytics-internal",(function(D){try{const j=D.getProvider(RD).getImmediate();return{logEvent:(D,W,Q)=>Wj(j,D,W,Q)}}catch(j){throw ND.create("interop-component-reg-failed",{reason:j})}}),"PRIVATE")),(0,Q.L)(Cj,kj),(0,Q.L)(Cj,kj,"esm2017")}}]);