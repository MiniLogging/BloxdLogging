"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13399:(V,O,Z)=>{Z.r(O),Z.d(O,{AnimationGroup:()=>H,TargetedAnimation:()=>U});var d=Z(12154),p=Z(10902),r=Z(10942),Y=Z(11243),m=Z(12149),a=Z(11251);class R{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(V,O,Z,p){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=O,this._target=V,this._scene=Z,this._host=p,this._activeTargets=[],O._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===d.c.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=a.c.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const V={frame:0,value:this._minValue};this._keys.splice(0,0,V)}if(this._target instanceof Array){let V=0;for(const O of this._target)this._preparePath(O,V),this._getOriginalValues(V),V++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const r=O.getEvents();r&&r.length>0&&r.forEach((V=>{this._events.push(V._clone())})),this._enableBlending=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(V){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const Z=this._animation.targetPropertyPath;if(Z.length>1){let d=V;for(let V=0;V<Z.length-1;V++){const O=Z[V];if(d=d[O],void 0===d)throw new Error(`Invalid property (${O}) in property path (${Z.join(".")})`)}this._targetPath=Z[Z.length-1],this._activeTargets[O]=d}else this._targetPath=Z[0],this._activeTargets[O]=V;if(void 0===this._activeTargets[O][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${Z.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let V=0;for(const O of this._target)void 0!==this._originalValue[V]&&this._setValue(O,this._activeTargets[V],this._originalValue[V],-1,V),V++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let V=0;V<this._events.length;V++)this._events[V].isDone=!1}isStopped(){return this._stopped}dispose(){const V=this._animation.runtimeAnimations.indexOf(this);V>-1&&this._animation.runtimeAnimations.splice(V,1)}setValue(V,O){if(this._targetIsArray)for(let Z=0;Z<this._target.length;Z++){const d=this._target[Z];this._setValue(d,this._activeTargets[Z],V,O,Z)}else this._setValue(this._target,this._directTarget,V,O,0)}_getOriginalValues(){let V,O=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const Z=this._activeTargets[O];V=Z.getLocalMatrix&&"_matrix"===this._targetPath?Z.getLocalMatrix():Z[this._targetPath],V&&V.clone?this._originalValue[O]=V.clone():this._originalValue[O]=V}_registerTargetForLateAnimationBinding(V,O){const Z=V.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(Z),Z._lateAnimationHolders||(Z._lateAnimationHolders={}),Z._lateAnimationHolders[V.targetPath]||(Z._lateAnimationHolders[V.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:O}),V.isAdditive?(Z._lateAnimationHolders[V.targetPath].additiveAnimations.push(V),Z._lateAnimationHolders[V.targetPath].totalAdditiveWeight+=V.weight):(Z._lateAnimationHolders[V.targetPath].animations.push(V),Z._lateAnimationHolders[V.targetPath].totalWeight+=V.weight)}_setValue(V,O,Z,p,r){if(this._currentActiveTarget=O,this._weight=p,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const V=O[this._targetPath];V.clone?this._originalBlendValue=V.clone():this._originalBlendValue=V}this._originalBlendValue.m?d.c.AllowMatrixDecomposeForInterpolation?this._currentValue?a.c.DecomposeLerpToRef(this._originalBlendValue,Z,this._blendingFactor,this._currentValue):this._currentValue=a.c.DecomposeLerp(this._originalBlendValue,Z,this._blendingFactor):this._currentValue?a.c.LerpToRef(this._originalBlendValue,Z,this._blendingFactor,this._currentValue):this._currentValue=a.c.Lerp(this._originalBlendValue,Z,this._blendingFactor):this._currentValue=d.c._UniversalLerp(this._originalBlendValue,Z,this._blendingFactor);const p=V&&V.animationPropertiesOverride?V.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=p}else this._currentValue?this._currentValue.p?this._currentValue.p(Z):this._currentValue=Z:null!==Z&&void 0!==Z&&Z.clone?this._currentValue=Z.clone():this._currentValue=Z;-1!==p?this._registerTargetForLateAnimationBinding(this,this._originalValue[r]):this._animationState.loopMode===d.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[r],O[this._targetPath]):O[this._targetPath]=this._originalValue[r]+this._currentValue:O[this._targetPath]=this._currentValue,V.sg&&V.sg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(V){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const Z=this._animation.getKeys();V<Z[0].frame?V=Z[0].frame:V>Z[Z.length-1].frame&&(V=Z[Z.length-1].frame);const d=this._events;if(d.length)for(let r=0;r<d.length;r++)d[r].onlyOnce||(d[r].isDone=d[r].frame<V);this._currentFrame=V;const p=this._animation._interpolate(V,this._animationState);this.setValue(p,O)}_prepareForSpeedRatioChange(V){const O=this._previousElapsedTime*(this._animation.framePerSecond*V)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-O}animate(V,O,Z,p,r){let Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const m=this._animation,a=m.targetPropertyPath;if(!a||a.length<1)return this._stopped=!0,!1;let R=!0;(O<this._minFrame||O>this._maxFrame)&&(O=this._minFrame),(Z<this._minFrame||Z>this._maxFrame)&&(Z=this._maxFrame);const i=Z-O;let M,c=V*(m.framePerSecond*r)/1e3+this._absoluteFrameOffset,W=0,F=!1;const Q=p&&this._animationState.loopMode===d.c.ANIMATIONLOOPMODE_YOYO;if(Q){const V=(c-O)/i,Z=Math.sin(V*Math.PI);c=Math.abs(Z)*i+O;const d=Z>=0?1:-1;this._yoyoDirection!==d&&(F=!0),this._yoyoDirection=d}if(this._previousElapsedTime=V,this._previousAbsoluteFrame=c,!p&&Z>=O&&(c>=i&&r>0||c<=0&&r<0))R=!1,W=m._getKeyValue(this._maxValue);else if(!p&&O>=Z&&(c<=i&&r<0||c>=0&&r>0))R=!1,W=m._getKeyValue(this._minValue);else if(this._animationState.loopMode!==d.c.ANIMATIONLOOPMODE_CYCLE){const V=Z.toString()+O.toString();if(!this._offsetsCache[V]){this._animationState.repeatCount=0,this._animationState.loopMode=d.c.ANIMATIONLOOPMODE_CYCLE;const p=m._interpolate(O,this._animationState),r=m._interpolate(Z,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),m.dataType){case d.c.ANIMATIONTYPE_FLOAT:this._offsetsCache[V]=r-p;break;case d.c.ANIMATIONTYPE_QUATERNION:case d.c.ANIMATIONTYPE_VECTOR3:case d.c.ANIMATIONTYPE_VECTOR2:case d.c.ANIMATIONTYPE_SIZE:case d.c.ANIMATIONTYPE_COLOR3:this._offsetsCache[V]=r.fc(p)}this._highLimitsCache[V]=r}W=this._highLimitsCache[V],M=this._offsetsCache[V]}if(void 0===M)switch(m.dataType){case d.c.ANIMATIONTYPE_FLOAT:M=0;break;case d.c.ANIMATIONTYPE_QUATERNION:M=d.n;break;case d.c.ANIMATIONTYPE_VECTOR3:M=d.w;break;case d.c.ANIMATIONTYPE_VECTOR2:M=d.u;break;case d.c.ANIMATIONTYPE_SIZE:M=d.r;break;case d.c.ANIMATIONTYPE_COLOR3:M=d.g;break;case d.c.ANIMATIONTYPE_COLOR4:M=d.j}let b;if(this._host&&this._host.syncRoot){const V=this._host.syncRoot;b=O+i*((V.masterFrame-V.fromFrame)/(V.toFrame-V.fromFrame))}else b=c>0&&O>Z||c<0&&O<Z?R&&0!==i?Z+c%i:O:R&&0!==i?O+c%i:Z;const U=this._events;if(!Q&&(r>0&&this.currentFrame>b||r<0&&this.currentFrame<b)||Q&&F){this._onLoop();for(let V=0;V<U.length;V++)U[V].onlyOnce||(U[V].isDone=!1);this._animationState.key=r>0?0:m.getKeys().length-1}this._currentFrame=b,this._animationState.repeatCount=0===i?0:c/i|0,this._animationState.highLimitValue=W,this._animationState.offsetValue=M;const H=m._interpolate(b,this._animationState);if(this.setValue(H,Y),U.length)for(let d=0;d<U.length;d++)if(i>=0&&b>=U[d].frame&&U[d].frame>=O||i<0&&b<=U[d].frame&&U[d].frame<=O){const V=U[d];V.isDone||(V.onlyOnce&&(U.splice(d,1),d--),V.isDone=!0,V.action(b))}return R||(this._stopped=!0),R}}var i=Z(10926);class M{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(V){this._weight=-1!==V?Math.min(Math.max(V,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(V){for(let O=0;O<this._runtimeAnimations.length;O++){this._runtimeAnimations[O]._prepareForSpeedRatioChange(V)}this._speedRatio=V,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(V,O){let Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],Y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,m=arguments.length>6?arguments[6]:void 0,a=arguments.length>7?arguments[7]:void 0,R=arguments.length>8?arguments[8]:void 0,i=arguments.length>9&&void 0!==arguments[9]&&arguments[9],M=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=O,this.fromFrame=Z,this.toFrame=d,this.loopAnimation=r,this.onAnimationEnd=m,this.onAnimationLoop=R,this.isAdditive=i,this.playOrder=M,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.td=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new p.e,this.onAnimationLoopObservable=new p.e,this._scene=V,a&&this.appendAnimations(O,a),this._speedRatio=Y,V._activeAnimatables.push(this)}syncWith(V){if(this._syncRoot=V,V){const V=this._scene._activeAnimatables.indexOf(this);V>-1&&(this._scene._activeAnimatables.splice(V,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(V,O){for(let Z=0;Z<O.length;Z++){const d=O[Z],p=new R(V,d,this._scene,this);p._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(p)}}getAnimationByTargetProperty(V){const O=this._runtimeAnimations;for(let Z=0;Z<O.length;Z++)if(O[Z].animation.targetProperty===V)return O[Z].animation;return null}getRuntimeAnimationByTargetProperty(V){const O=this._runtimeAnimations;for(let Z=0;Z<O.length;Z++)if(O[Z].animation.targetProperty===V)return O[Z];return null}reset(){const V=this._runtimeAnimations;for(let O=0;O<V.length;O++)V[O].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(V){const O=this._runtimeAnimations;for(let Z=0;Z<O.length;Z++)O[Z].animation.enableBlending=!0,O[Z].animation.blendingSpeed=V}disableBlending(){const V=this._runtimeAnimations;for(let O=0;O<V.length;O++)V[O].animation.enableBlending=!1}goToFrame(V){const O=this._runtimeAnimations;if(O[0]){const Z=O[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??O[0].currentFrame;const d=0===this.speedRatio?0:(V-this._frameToSyncFromJump)/Z*1e3/this.speedRatio;this._manualJumpDelay=-d}for(let Z=0;Z<O.length;Z++)O[Z].goToFrame(V,this._weight);this._goToFrame=V}get paused(){return this.td}pause(){this.td||(this.td=!0)}restart(){this.td=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(V,O){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2],d=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(V||O){const p=this._scene._activeAnimatables.indexOf(this);if(p>-1){const r=this._runtimeAnimations;for(let Z=r.length-1;Z>=0;Z--){const d=r[Z];V&&d.animation.name!=V||(O&&!O(d.target)||(d.dispose(),r.splice(Z,1)))}0==r.length&&(Z||this._scene._activeAnimatables.splice(p,1),d||this._raiseOnAnimationEnd())}}else{const V=this._scene._activeAnimatables.indexOf(this);if(V>-1){Z||this._scene._activeAnimatables.splice(V,1);const O=this._runtimeAnimations;for(let V=0;V<O.length;V++)O[V].dispose();this._runtimeAnimations.length=0,d||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((V=>{this.onAnimationEndObservable.add((()=>{V(this)}),void 0,void 0,this,!0)}))}_animate(V){if(this.td)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=V),!0;if(null===this._localDelayOffset?(this._localDelayOffset=V,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=V-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let O=!1;const Z=this._runtimeAnimations;let d;for(d=0;d<Z.length;d++){const p=Z[d].animate(V-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);O=O||p}if(this.animationStarted=O,!O){if(this.disposeOnEnd)for(d=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(d,1),d=0;d<Z.length;d++)Z[d].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return O}}function c(V){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return V.originalValue;let O=1;const Z=a.i.ib[0],d=a.i.ib[1],p=a.i.Quaternion[0];let r=0;const Y=V.animations[0],m=V.originalValue;let R=1,i=!1;if(V.totalWeight<1)R=1-V.totalWeight,m.decompose(d,p,Z);else{if(r=1,O=V.totalWeight,R=Y.weight/O,1==R){if(!V.totalAdditiveWeight)return Y.currentValue;i=!0}Y.currentValue.decompose(d,p,Z)}if(!i){d.scaleInPlace(R),Z.scaleInPlace(R),p.scaleInPlace(R);for(let Y=r;Y<V.animations.length;Y++){const r=V.animations[Y];if(0===r.weight)continue;R=r.weight/O;const m=a.i.ib[2],i=a.i.ib[3],M=a.i.Quaternion[1];r.currentValue.decompose(i,M,m),i.scaleAndAddToRef(R,d),M.scaleAndAddToRef(a.g.Dot(p,M)>0?R:-R,p),m.scaleAndAddToRef(R,Z)}p.normalize()}for(let c=0;c<V.additiveAnimations.length;c++){const O=V.additiveAnimations[c];if(0===O.weight)continue;const r=a.i.ib[2],Y=a.i.ib[3],m=a.i.Quaternion[1];O.currentValue.decompose(Y,m,r),Y.multiplyToRef(d,Y),a.m.LerpToRef(d,Y,O.weight,d),p.multiplyToRef(m,m),a.g.SlerpToRef(p,m,O.weight,p),r.scaleAndAddToRef(O.weight,Z)}const M=Y?Y._animationState.workValue:a.i.Matrix[0].clone();return a.c.ComposeToRef(d,p,Z,M),M}function W(V,O){if(0===V.totalWeight&&0===V.totalAdditiveWeight)return O;const Z=V.animations[0],d=V.originalValue;let p=O;if(0===V.totalWeight&&V.totalAdditiveWeight>0)p.p(d);else if(1===V.animations.length){if(a.g.SlerpToRef(d,Z.currentValue,Math.min(1,V.totalWeight),p),0===V.totalAdditiveWeight)return p}else if(V.animations.length>1){let Z,r,Y=1;if(V.totalWeight<1){const O=1-V.totalWeight;Z=[],r=[],Z.push(d),r.push(O)}else{if(2===V.animations.length&&(a.g.SlerpToRef(V.animations[0].currentValue,V.animations[1].currentValue,V.animations[1].weight/V.totalWeight,O),0===V.totalAdditiveWeight))return O;Z=[],r=[],Y=V.totalWeight}for(let O=0;O<V.animations.length;O++){const d=V.animations[O];Z.push(d.currentValue),r.push(d.weight/Y)}let m=0;for(let V=0;V<Z.length;)V?(m+=r[V],a.g.SlerpToRef(p,Z[V],r[V]/m,p),V++):(a.g.SlerpToRef(Z[V],Z[V+1],r[V+1]/(r[V]+r[V+1]),O),p=O,m=r[V]+r[V+1],V+=2)}for(let r=0;r<V.additiveAnimations.length;r++){const O=V.additiveAnimations[r];0!==O.weight&&(p.multiplyToRef(O.currentValue,a.i.Quaternion[0]),a.g.SlerpToRef(p,a.i.Quaternion[0],O.weight,p))}return p}var F,Q,b=Z(11238);F=b.b,(Q=m.e)&&(Q.prototype.copyAnimationRange=function(V,O,Z){let p=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new d.c(this.name,"_matrix",V.animations[0].framePerSecond,d.c.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const Y=V.animations[0].getRange(O);if(!Y)return!1;const m=Y.from,a=Y.to,R=V.animations[0].getKeys(),i=V.length,M=V.getParent(),c=this.getParent(),W=p&&M&&i&&this.length&&i!==this.length,F=W&&c&&M?c.length/M.length:1,Q=p&&!c&&r&&(1!==r.x||1!==r.y||1!==r.z),b=this.animations[0].getKeys();let U,H,S;for(let d=0,z=R.length;d<z;d++)U=R[d],U.frame>=m&&U.frame<=a&&(p?(S=U.value.clone(),W?(H=S.getTranslation(),S.setTranslation(H.scaleInPlace(F))):Q&&r?(H=S.getTranslation(),S.setTranslation(H.multiplyInPlace(r))):S=U.value):S=U.value,b.push({frame:U.frame+Z,value:S}));return this.animations[0].createRange(O,m+Z,a+Z),!0}),F&&(F.prototype._animate=function(V){if(!this.animationsEnabled)return;const O=i.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=O}this.deltaTime=void 0!==V?V:this.useConstantAnimationDeltaTime?16:(O-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=O;const Z=this._activeAnimatables;if(0===Z.length)return;this._animationTime+=this.deltaTime;const p=this._animationTime;for(let d=0;d<Z.length;d++){const V=Z[d];!V._animate(p)&&V.disposeOnEnd&&d--}!function(V){if(V._registeredForLateAnimationBindings.length){for(let O=0;O<V._registeredForLateAnimationBindings.length;O++){const Z=V._registeredForLateAnimationBindings.data[O];for(const V in Z._lateAnimationHolders){const O=Z._lateAnimationHolders[V],p=O.animations[0],r=O.originalValue;if(void 0===r||null===r)continue;const Y=d.c.AllowMatrixDecomposeForInterpolation&&r.m;let m=Z[V];if(Y)m=c(O);else if(void 0!==r.w)m=W(O,m||a.g.Identity());else{let V=0,Z=1;const Y=p&&p._animationState.loopMode===d.c.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(O.totalWeight<1)m=Y?r.clone?r.clone():r:p&&r.scale?r.scale(1-O.totalWeight):p?r*(1-O.totalWeight):r.clone?r.clone():r;else if(p){Z=O.totalWeight;const d=p.weight/Z;m=1!==d?p.currentValue.scale?p.currentValue.scale(d):p.currentValue*d:p.currentValue,Y&&(m.addToRef?m.addToRef(r,m):m+=r),V=1}for(let d=V;d<O.animations.length;d++){const V=O.animations[d],p=V.weight/Z;p&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(p,m):m+=V.currentValue*p)}for(let d=0;d<O.additiveAnimations.length;d++){const V=O.additiveAnimations[d],Z=V.weight;Z&&(V.currentValue.scaleAndAddToRef?V.currentValue.scaleAndAddToRef(Z,m):m+=V.currentValue*Z)}}Z[V]=m}Z._lateAnimationHolders={}}V._registeredForLateAnimationBindings.reset()}}(this)},F.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((V,O)=>V.playOrder-O.playOrder))},F.prototype.beginWeightedAnimation=function(V,O,Z){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,p=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Y=arguments.length>6?arguments[6]:void 0,m=arguments.length>7?arguments[7]:void 0,a=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,i=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const M=this.beginAnimation(V,O,Z,p,r,Y,m,!1,a,R,i);return M.weight=d,M},F.prototype.beginAnimation=function(V,O,Z,d){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,r=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0,m=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],a=arguments.length>8?arguments[8]:void 0,R=arguments.length>9?arguments[9]:void 0,i=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(p<0){const V=O;O=Z,Z=V,p=-p}O>Z&&(p=-p),m&&this.stopAnimation(V,void 0,a),Y||(Y=new M(this,V,O,Z,d,p,r,void 0,R,i));const c=!a||a(V);if(V.animations&&c&&Y.appendAnimations(V,V.animations),V.getAnimatables){const i=V.getAnimatables();for(let V=0;V<i.length;V++)this.beginAnimation(i[V],O,Z,d,p,r,Y,m,a,R)}return Y.reset(),Y},F.prototype.beginHierarchyAnimation=function(V,O,Z,d,p){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,Y=arguments.length>6?arguments[6]:void 0,m=arguments.length>7?arguments[7]:void 0,a=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],R=arguments.length>9?arguments[9]:void 0,i=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const M=V.getDescendants(O),c=[];c.push(this.beginAnimation(V,Z,d,p,r,Y,m,a,R,void 0,i));for(const W of M)c.push(this.beginAnimation(W,Z,d,p,r,Y,m,a,R,void 0,i));return c},F.prototype.beginDirectAnimation=function(V,O,Z,d,p){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(r<0){const V=Z;Z=d,d=V,r=-r}return Z>d&&(r=-r),new M(this,V,Z,d,p,r,arguments.length>6?arguments[6]:void 0,O,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},F.prototype.beginDirectHierarchyAnimation=function(V,O,Z,d,p,r,Y,m,a){let R=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const i=V.getDescendants(O),M=[];M.push(this.beginDirectAnimation(V,Z,d,p,r,Y,m,a,R));for(const c of i)M.push(this.beginDirectAnimation(c,Z,d,p,r,Y,m,a,R));return M},F.prototype.getAnimatableByTarget=function(V){for(let O=0;O<this._activeAnimatables.length;O++)if(this._activeAnimatables[O].target===V)return this._activeAnimatables[O];return null},F.prototype.getAllAnimatablesByTarget=function(V){const O=[];for(let Z=0;Z<this._activeAnimatables.length;Z++)this._activeAnimatables[Z].target===V&&O.push(this._activeAnimatables[Z]);return O},F.prototype.stopAnimation=function(V,O,Z){const d=this.getAllAnimatablesByTarget(V);for(const p of d)p.stop(O,Z)},F.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let V=0;V<this._activeAnimatables.length;V++)this._activeAnimatables[V].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const V of this.animationGroups)V.stop()});class U{getClassName(){return"TargetedAnimation"}serialize(){const V={};return V.animation=this.animation.serialize(),V.targetId=this.target.id,V}}class H{get mask(){return this._mask}set mask(V){this._mask!==V&&(this._mask=V,this.syncWithMask(!0))}syncWithMask(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||V){this._numActiveAnimatables=0;for(let V=0;V<this._animatables.length;++V){const O=this._animatables[V];!this.mask||this.mask.disabled||this.mask.retainsTarget(O.target.name)?(this._numActiveAnimatables++,O.paused&&O.restart()):O.paused||O.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let V=0;V<this._animatables.length;++V){const O=this._animatables[V];this.mask.retainsTarget(O.target.name)||(O.stop(),this._animatables.splice(V,1),--V)}for(let V=0;V<this._targetedAnimations.length;V++){const O=this._targetedAnimations[V];this.mask.retainsTarget(O.target.name)||(this._targetedAnimations.splice(V,1),--V)}}}get from(){return this._from}set from(V){if(this._from!==V){this._from=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].fromFrame=this._from}}}get to(){return this._to}set to(V){if(this._to!==V){this._to=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(V){if(this._speedRatio!==V){this._speedRatio=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(V){if(this._loopAnimation!==V){this._loopAnimation=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(V){if(this._isAdditive!==V){this._isAdditive=V;for(let V=0;V<this._animatables.length;V++){this._animatables[V].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(V){this._weight!==V&&(this._weight=V,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(V){if(this._playOrder!==V&&(this._playOrder=V,this._animatables.length>0)){for(let V=0;V<this._animatables.length;V++)this._animatables[V].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(V){if(this._enableBlending!==V&&(this._enableBlending=V,null!==V))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.enableBlending=V}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(V){if(this._blendingSpeed!==V&&(this._blendingSpeed=V,null!==V))for(let O=0;O<this._targetedAnimations.length;++O)this._targetedAnimations[O].animation.blendingSpeed=V}getLength(V,O){V=V??this._from;return((O=O??this._to)-V)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(V){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2],d=arguments.length>3?arguments[3]:void 0;if(0===V.length)return null;d=d??V[0].weight;let p=Number.MAX_VALUE,r=-Number.MAX_VALUE;if(Z)for(const m of V)m.from<p&&(p=m.from),m.to>r&&(r=m.to);const Y=new H(V[0].name+"_merged",V[0]._scene,d);for(const m of V){Z&&m.normalize(p,r);for(const V of m.targetedAnimations)Y.addTargetedAnimation(V.animation,V.target);O&&m.dispose()}return Y}constructor(V){let O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=V,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new p.e,this.onAnimationLoopObservable=new p.e,this.onAnimationGroupLoopObservable=new p.e,this.onAnimationGroupEndObservable=new p.e,this.onAnimationGroupPauseObservable=new p.e,this.onAnimationGroupPlayObservable=new p.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=O||r.e.LastCreatedScene,this._weight=Z,this._playOrder=d,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(V,O){const Z=new U;Z.animation=V,Z.target=O;const d=V.getKeys();return this._from>d[0].frame&&(this._from=d[0].frame),this._to<d[d.length-1].frame&&(this._to=d[d.length-1].frame),null!==this._enableBlending&&(V.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(V.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(Z),this._shouldStart=!0,Z}removeTargetedAnimation(V){for(let O=this._targetedAnimations.length-1;O>-1;O--){this._targetedAnimations[O].animation===V&&this._targetedAnimations.splice(O,1)}}normalize(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==V&&(V=this._from),null==O&&(O=this._to);for(let Z=0;Z<this._targetedAnimations.length;Z++){const d=this._targetedAnimations[Z].animation.getKeys(),p=d[0],r=d[d.length-1];if(p.frame>V){const O={frame:V,value:p.value,inTangent:p.inTangent,outTangent:p.outTangent,interpolation:p.interpolation};d.splice(0,0,O)}if(r.frame<O){const V={frame:O,value:r.value,inTangent:r.inTangent,outTangent:r.outTangent,interpolation:r.interpolation};d.push(V)}}return this._from=V,this._to=O,this}_processLoop(V,O,Z){V.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(O),this._animationLoopFlags[Z]||(this._animationLoopFlags[Z]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0],O=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Z=arguments.length>2?arguments[2]:void 0,d=arguments.length>3?arguments[3]:void 0,p=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=V,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let r=0;r<this._targetedAnimations.length;r++){const Y=this._targetedAnimations[r],m=this._scene.beginDirectAnimation(Y.target,[Y.animation],void 0!==Z?Z:this._from,void 0!==d?d:this._to,V,O,void 0,void 0,void 0!==p?p:this._isAdditive);m.weight=this._weight,m.playOrder=this._playOrder,m.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(Y),this._checkAnimationGroupEnded(m)},this._processLoop(m,Y,r),this._animatables.push(m)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=O,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let V=0;V<this._animatables.length;V++){this._animatables[V].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(V){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==V&&(this.loopAnimation=V),this.restart()):(this.stop(),this.start(V,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].reset()}return this}restart(){if(!this._isStarted)return this;for(let V=0;V<this._animatables.length;V++){this._animatables[V].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const O=this._animatables.slice();for(let d=0;d<O.length;d++)O[d].stop(void 0,void 0,!0,V);let Z=0;for(let d=0;d<this._scene._activeAnimatables.length;d++){const O=this._scene._activeAnimatables[d];O._runtimeAnimations.length>0?this._scene._activeAnimatables[Z++]=O:V&&this._checkAnimationGroupEnded(O,V)}return this._scene._activeAnimatables.length=Z,this._isStarted=!1,this}setWeightForAllAnimatables(V){for(let O=0;O<this._animatables.length;O++){this._animatables[O].weight=V}return this}syncAllAnimationsWith(V){for(let O=0;O<this._animatables.length;O++){this._animatables[O].syncWith(V)}return this}goToFrame(V){if(!this._isStarted)return this;for(let O=0;O<this._animatables.length;O++){this._animatables[O].goToFrame(V)}return this}getCurrentFrame(){var V;return(null===(V=this.animatables[0])||void 0===V?void 0:V.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const V=this._scene.animationGroups.indexOf(this);if(V>-1&&this._scene.animationGroups.splice(V,1),this._parentContainer){const V=this._parentContainer.animationGroups.indexOf(this);V>-1&&this._parentContainer.animationGroups.splice(V,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(V){let O=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Z=this._animatables.indexOf(V);Z>-1&&this._animatables.splice(Z,1),0===this._animatables.length&&(this._isStarted=!1,O||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(V,O){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const d=new H(V||this.name,this._scene,this._weight,this._playOrder);d._from=this.from,d._to=this.to,d._speedRatio=this.speedRatio,d._loopAnimation=this.loopAnimation,d._isAdditive=this.isAdditive,d._enableBlending=this.enableBlending,d._blendingSpeed=this.blendingSpeed,d.metadata=this.metadata,d.mask=this.mask;for(const p of this._targetedAnimations)d.addTargetedAnimation(Z?p.animation.clone():p.animation,O?O(p.target):p.target);return d}serialize(){const V={};V.name=this.name,V.from=this.from,V.to=this.to,V.speedRatio=this.speedRatio,V.loopAnimation=this.loopAnimation,V.isAdditive=this.isAdditive,V.weight=this.weight,V.playOrder=this.playOrder,V.enableBlending=this.enableBlending,V.blendingSpeed=this.blendingSpeed,V.targetedAnimations=[];for(let O=0;O<this.targetedAnimations.length;O++){const Z=this.targetedAnimations[O];V.targetedAnimations[O]=Z.serialize()}return Y.e&&Y.e.HasTags(this)&&(V.tags=Y.e.GetTags(this)),this.metadata&&(V.metadata=this.metadata),V}static Parse(V,O){const Z=new H(V.name,O,V.weight,V.playOrder);for(let p=0;p<V.targetedAnimations.length;p++){const r=V.targetedAnimations[p],Y=d.c.Parse(r.animation),m=r.targetId;if("influence"===r.animation.property){const V=O.getMorphTargetById(m);V&&Z.addTargetedAnimation(Y,V)}else{const V=O.getNodeById(m);null!=V&&Z.addTargetedAnimation(Y,V)}}return Y.e&&Y.e.AddTagsTo(Z,V.tags),null!==V.from&&null!==V.to&&Z.normalize(V.from,V.to),void 0!==V.speedRatio&&(Z._speedRatio=V.speedRatio),void 0!==V.loopAnimation&&(Z._loopAnimation=V.loopAnimation),void 0!==V.isAdditive&&(Z._isAdditive=V.isAdditive),void 0!==V.weight&&(Z._weight=V.weight),void 0!==V.playOrder&&(Z._playOrder=V.playOrder),void 0!==V.enableBlending&&(Z._enableBlending=V.enableBlending),void 0!==V.blendingSpeed&&(Z._blendingSpeed=V.blendingSpeed),void 0!==V.metadata&&(Z.metadata=V.metadata),Z}static MakeAnimationAdditive(V,O,Z){let p;p="object"===typeof O?O:{referenceFrame:O,range:Z,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let r=V;p.cloneOriginalAnimationGroup&&(r=V.clone(p.clonedAnimationGroupName||r.name));const Y=r.targetedAnimations;for(let m=0;m<Y.length;m++){const V=Y[m];V.animation=d.c.MakeAnimationAdditive(V.animation,p)}if(r.isAdditive=!0,p.clipKeys){let V=Number.MAX_VALUE,O=-Number.MAX_VALUE;const Z=r.targetedAnimations;for(let d=0;d<Z.length;d++){const p=Z[d].animation.getKeys();V>p[0].frame&&(V=p[0].frame),O<p[p.length-1].frame&&(O=p[p.length-1].frame)}r._from=V,r._to=O}return r}static ClipKeys(V,O,Z,d,p){const r=V.clone(d||V.name);return H.ClipKeysInPlace(r,O,Z,p)}static ClipKeysInPlace(V,O,Z,d){return H.ClipInPlace(V,O,Z,d,!1)}static ClipFrames(V,O,Z,d,p){const r=V.clone(d||V.name);return H.ClipFramesInPlace(r,O,Z,p)}static ClipFramesInPlace(V,O,Z,d){return H.ClipInPlace(V,O,Z,d,!0)}static ClipInPlace(V,O,Z,d){let p=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=Number.MAX_VALUE,Y=-Number.MAX_VALUE;const m=V.targetedAnimations;for(let a=0;a<m.length;a++){const V=m[a],R=d?V.animation:V.animation.clone();p&&(R.createKeyForFrame(O),R.createKeyForFrame(Z));const i=R.getKeys(),M=[];let c=Number.MAX_VALUE;for(let d=0;d<i.length;d++){const V=i[d];if(!p&&d>=O&&d<=Z||p&&V.frame>=O&&V.frame<=Z){const O={frame:V.frame,value:V.value.clone?V.value.clone():V.value,inTangent:V.inTangent,outTangent:V.outTangent,interpolation:V.interpolation,lockedTangent:V.lockedTangent};c===Number.MAX_VALUE&&(c=O.frame),O.frame-=c,M.push(O)}}0!==M.length?(r>M[0].frame&&(r=M[0].frame),Y<M[M.length-1].frame&&(Y=M[M.length-1].frame),R.setKeys(M,!0),V.animation=R):(m.splice(a,1),a--)}return V._from=r,V._to=Y,V}getClassName(){return"AnimationGroup"}toString(V){let O="Name: "+this.name;return O+=", type: "+this.getClassName(),V&&(O+=", from: "+this._from,O+=", to: "+this._to,O+=", isStarted: "+this._isStarted,O+=", speedRatio: "+this._speedRatio,O+=", targetedAnimations length: "+this._targetedAnimations.length,O+=", animatables length: "+this._animatables),O}}}}]);