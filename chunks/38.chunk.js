/*! For license information please see q880f5.38.568f7aef.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11666:(T,z,X)=>{X.r(z),X.d(z,{getAnalytics:()=>oT,getGoogleAnalyticsClientId:()=>wT,initializeAnalytics:()=>fT,isSupported:()=>hT,logEvent:()=>Xz,setAnalyticsCollectionEnabled:()=>Tz,setConsent:()=>bz,setCurrentScreen:()=>QT,setDefaultEventParameters:()=>zz,setUserId:()=>JT,setUserProperties:()=>IT,settings:()=>MT});var b=X(11650),F=X(11662),A=X(11656),u=X(11653);let y,E;const v=new WeakMap,k=new WeakMap,L=new WeakMap,D=new WeakMap,c=new WeakMap;let p={get(T,z,X){if(T instanceof IDBTransaction){if("done"===z)return k.get(T);if("objectStoreNames"===z)return T.objectStoreNames||L.get(T);if("store"===z)return X.objectStoreNames[1]?void 0:X.objectStore(X.objectStoreNames[0])}return s(T[z])},set:(T,z,X)=>(T[z]=X,!0),has:(T,z)=>T instanceof IDBTransaction&&("done"===z||"store"===z)||z in T};function H(T){return T!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(E||(E=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(T)?function(){for(var z=arguments.length,X=new Array(z),b=0;b<z;b++)X[b]=arguments[b];return T.apply(x(this),X),s(v.get(this))}:function(){for(var z=arguments.length,X=new Array(z),b=0;b<z;b++)X[b]=arguments[b];return s(T.apply(x(this),X))}:function(z){for(var X=arguments.length,b=new Array(X>1?X-1:0),F=1;F<X;F++)b[F-1]=arguments[F];const A=T.call(x(this),z,...b);return L.set(A,z.sort?z.sort():[z]),s(A)}}function U(T){return"function"===typeof T?H(T):(T instanceof IDBTransaction&&function(T){if(k.has(T))return;const z=new Promise(((z,X)=>{const b=()=>{T.removeEventListener("complete",F),T.removeEventListener("error",A),T.removeEventListener("abort",A)},F=()=>{z(),b()},A=()=>{X(T.error||new DOMException("AbortError","AbortError")),b()};T.addEventListener("complete",F),T.addEventListener("error",A),T.addEventListener("abort",A)}));k.set(T,z)}(T),z=T,(y||(y=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((T=>z instanceof T))?new Proxy(T,p):T);var z}function s(T){if(T instanceof IDBRequest)return function(T){const z=new Promise(((z,X)=>{const b=()=>{T.removeEventListener("success",F),T.removeEventListener("error",A)},F=()=>{z(s(T.result)),b()},A=()=>{X(T.error),b()};T.addEventListener("success",F),T.addEventListener("error",A)}));return z.then((z=>{z instanceof IDBCursor&&v.set(z,T)})).catch((()=>{})),c.set(z,T),z}(T);if(D.has(T))return D.get(T);const z=U(T);return z!==T&&(D.set(T,z),c.set(z,T)),z}const x=T=>c.get(T);const K=["get","getKey","getAll","getAllKeys","count"],d=["put","add","delete","clear"],N=new Map;function l(T,z){if(!(T instanceof IDBDatabase)||z in T||"string"!==typeof z)return;if(N.get(z))return N.get(z);const X=z.replace(/FromIndex$/,""),b=z!==X,F=d.includes(X);if(!(X in(b?IDBIndex:IDBObjectStore).prototype)||!F&&!K.includes(X))return;const A=async function(T){const z=this.transaction(T,F?"readwrite":"readonly");let A=z.store;for(var u=arguments.length,y=new Array(u>1?u-1:0),E=1;E<u;E++)y[E-1]=arguments[E];return b&&(A=A.index(y.shift())),(await Promise.all([A[X](...y),F&&z.done]))[0]};return N.set(z,A),A}p=(T=>({...T,get:(z,X,b)=>l(z,X)||T.get(z,X,b),has:(z,X)=>!!l(z,X)||T.has(z,X)}))(p);const a="@firebase/installations",q="0.6.4",V=1e4,C=`w:${q}`,G="FIS_v2",j=36e5,Z={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},m=new A.e("installations","Installations",Z);function S(T){return T instanceof A.f&&T.code.includes("request-failed")}function n(T){let{projectId:z}=T;return`https://firebaseinstallations.googleapis.com/v1/projects/${z}/installations`}function O(T){return{token:T.token,requestStatus:2,expiresIn:(z=T.expiresIn,Number(z.replace("s","000"))),creationTime:Date.now()};var z}async function P(T,z){const X=(await z.json()).error;return m.create("request-failed",{requestName:T,serverCode:X.code,serverMessage:X.message,serverStatus:X.status})}function W(T){let{apiKey:z}=T;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":z})}function B(T,z){let{refreshToken:X}=z;const b=W(T);return b.append("Authorization",function(T){return`${G} ${T}`}(X)),b}async function e(T){const z=await T();return z.status>=500&&z.status<600?T():z}function R(T){return new Promise((z=>{setTimeout(z,T)}))}const Y=/^[cdef][\w-]{21}$/;function i(){try{const T=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(T),T[0]=112+T[0]%16;const z=function(T){const z=(X=T,btoa(String.fromCharCode(...X)).replace(/\+/g,"-").replace(/\//g,"_"));var X;return z.substr(0,22)}(T);return Y.test(z)?z:""}catch(T){return""}}function t(T){return`${T.appName}!${T.appId}`}const g=new Map;function M(T,z){const X=t(T);r(X,z),function(T,z){const X=f();X&&X.postMessage({key:T,fid:z});h()}(X,z)}function r(T,z){const X=g.get(T);if(X)for(const b of X)b(z)}let o=null;function f(){return!o&&"BroadcastChannel"in self&&(o=new BroadcastChannel("[Firebase] FID Change"),o.onmessage=T=>{r(T.data.key,T.data.fid)}),o}function h(){0===g.size&&o&&(o.close(),o=null)}const Q="firebase-installations-store";let w=null;function J(){return w||(w=function(T,z){let{blocked:X,upgrade:b,blocking:F,terminated:A}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const u=indexedDB.open(T,z),y=s(u);return b&&u.addEventListener("upgradeneeded",(T=>{b(s(u.result),T.oldVersion,T.newVersion,s(u.transaction))})),X&&u.addEventListener("blocked",(()=>X())),y.then((T=>{A&&T.addEventListener("close",(()=>A())),F&&T.addEventListener("versionchange",(()=>F()))})).catch((()=>{})),y}("firebase-installations-database",1,{upgrade:(T,z)=>{if(0===z)T.createObjectStore(Q)}})),w}async function I(T,z){const X=t(T),b=(await J()).transaction(Q,"readwrite"),F=b.objectStore(Q),A=await F.get(X);return await F.put(z,X),await b.done,A&&A.fid===z.fid||M(T,z.fid),z}async function TT(T){const z=t(T),X=(await J()).transaction(Q,"readwrite");await X.objectStore(Q).delete(z),await X.done}async function zT(T,z){const X=t(T),b=(await J()).transaction(Q,"readwrite"),F=b.objectStore(Q),A=await F.get(X),u=z(A);return void 0===u?await F.delete(X):await F.put(u,X),await b.done,!u||A&&A.fid===u.fid||M(T,u.fid),u}async function XT(T){let z;const X=await zT(T.appConfig,(X=>{const b=function(T){const z=T||{fid:i(),registrationStatus:0};return AT(z)}(X),F=function(T,z){if(0===z.registrationStatus){if(!navigator.onLine){return{installationEntry:z,registrationPromise:Promise.reject(m.create("app-offline"))}}const X={fid:z.fid,registrationStatus:1,registrationTime:Date.now()},b=async function(T,z){try{const X=await async function(T,z){let{appConfig:X,heartbeatServiceProvider:b}=T,{fid:F}=z;const A=n(X),u=W(X),y=b.getImmediate({optional:!0});if(y){const T=await y.getHeartbeatsHeader();T&&u.append("x-firebase-client",T)}const E={fid:F,authVersion:G,appId:X.appId,sdkVersion:C},v={method:"POST",headers:u,body:JSON.stringify(E)},k=await e((()=>fetch(A,v)));if(k.ok){const T=await k.json();return{fid:T.fid||F,registrationStatus:2,refreshToken:T.refreshToken,authToken:O(T.authToken)}}throw await P("Create Installation",k)}(T,z);return I(T.appConfig,X)}catch(X){throw S(X)&&409===X.customData.serverCode?await TT(T.appConfig):await I(T.appConfig,{fid:z.fid,registrationStatus:0}),X}}(T,X);return{installationEntry:X,registrationPromise:b}}return 1===z.registrationStatus?{installationEntry:z,registrationPromise:bT(T)}:{installationEntry:z}}(T,b);return z=F.registrationPromise,F.installationEntry}));return""===X.fid?{installationEntry:await z}:{installationEntry:X,registrationPromise:z}}async function bT(T){let z=await FT(T.appConfig);for(;1===z.registrationStatus;)await R(100),z=await FT(T.appConfig);if(0===z.registrationStatus){const{installationEntry:z,registrationPromise:X}=await XT(T);return X||z}return z}function FT(T){return zT(T,(T=>{if(!T)throw m.create("installation-not-found");return AT(T)}))}function AT(T){return 1===(z=T).registrationStatus&&z.registrationTime+V<Date.now()?{fid:T.fid,registrationStatus:0}:T;var z}async function uT(T,z){let{appConfig:X,heartbeatServiceProvider:b}=T;const F=function(T,z){let{fid:X}=z;return`${n(T)}/${X}/authTokens:generate`}(X,z),A=B(X,z),u=b.getImmediate({optional:!0});if(u){const T=await u.getHeartbeatsHeader();T&&A.append("x-firebase-client",T)}const y={installation:{sdkVersion:C,appId:X.appId}},E={method:"POST",headers:A,body:JSON.stringify(y)},v=await e((()=>fetch(F,E)));if(v.ok){return O(await v.json())}throw await P("Generate Auth Token",v)}async function yT(T){let z,X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const b=await zT(T.appConfig,(b=>{if(!vT(b))throw m.create("not-registered");const F=b.authToken;if(!X&&function(T){return 2===T.requestStatus&&!function(T){const z=Date.now();return z<T.creationTime||T.creationTime+T.expiresIn<z+j}(T)}(F))return b;if(1===F.requestStatus)return z=async function(T,z){let X=await ET(T.appConfig);for(;1===X.authToken.requestStatus;)await R(100),X=await ET(T.appConfig);const b=X.authToken;return 0===b.requestStatus?yT(T,z):b}(T,X),b;{if(!navigator.onLine)throw m.create("app-offline");const X=function(T){const z={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},T),{authToken:z})}(b);return z=async function(T,z){try{const X=await uT(T,z),b=Object.assign(Object.assign({},z),{authToken:X});return await I(T.appConfig,b),X}catch(X){if(!S(X)||401!==X.customData.serverCode&&404!==X.customData.serverCode){const X=Object.assign(Object.assign({},z),{authToken:{requestStatus:0}});await I(T.appConfig,X)}else await TT(T.appConfig);throw X}}(T,X),X}}));return z?await z:b.authToken}function ET(T){return zT(T,(T=>{if(!vT(T))throw m.create("not-registered");const z=T.authToken;return 1===(X=z).requestStatus&&X.requestTime+V<Date.now()?Object.assign(Object.assign({},T),{authToken:{requestStatus:0}}):T;var X}))}function vT(T){return void 0!==T&&2===T.registrationStatus}async function kT(T){let z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const X=T;await async function(T){const{registrationPromise:z}=await XT(T);z&&await z}(X);return(await yT(X,z)).token}function LT(T){return m.create("missing-app-config-values",{valueName:T})}const DT="installations",cT=T=>{const z=T.getProvider("app").getImmediate(),X=function(T){if(!T||!T.options)throw LT("App Configuration");if(!T.name)throw LT("App Name");const z=["projectId","apiKey","appId"];for(const X of z)if(!T.options[X])throw LT(X);return{appName:T.name,projectId:T.options.projectId,apiKey:T.options.apiKey,appId:T.options.appId}}(z);return{app:z,appConfig:X,heartbeatServiceProvider:(0,b.v)(z,"heartbeat"),_delete:()=>Promise.resolve()}},pT=T=>{const z=T.getProvider("app").getImmediate(),X=(0,b.v)(z,DT).getImmediate();return{getId:()=>async function(T){const z=T,{installationEntry:X,registrationPromise:b}=await XT(z);return b?b.catch(console.error):yT(z).catch(console.error),X.fid}(X),getToken:T=>kT(X,T)}};(0,b.x)(new u.f(DT,cT,"PUBLIC")),(0,b.x)(new u.f("installations-internal",pT,"PRIVATE")),(0,b.N)(a,q),(0,b.N)(a,q,"esm2017");const HT="analytics",UT="https://www.googletagmanager.com/gtag/js",sT=new F.e("@firebase/analytics"),xT={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},KT=new A.e("analytics","Analytics",xT);function dT(T){if(!T.startsWith(UT)){const z=KT.create("invalid-gtag-resource",{gtagURL:T});return sT.warn(z.message),""}return T}function NT(T){return Promise.all(T.map((T=>T.catch((T=>T)))))}function lT(T,z){const X=function(T,z){let X;return window.trustedTypes&&(X=window.trustedTypes.createPolicy(T,z)),X}("firebase-js-sdk-policy",{createScriptURL:dT}),b=document.createElement("script"),F=`${UT}?l=${T}&id=${z}`;b.src=X?null===X||void 0===X?void 0:X.createScriptURL(F):F,b.async=!0,document.head.appendChild(b)}function aT(T,z,X,b){return async function(F){try{for(var A=arguments.length,u=new Array(A>1?A-1:0),y=1;y<A;y++)u[y-1]=arguments[y];if("event"===F){const[b,F]=u;await async function(T,z,X,b,F){try{let A=[];if(F&&F.send_to){let T=F.send_to;Array.isArray(T)||(T=[T]);const b=await NT(X);for(const X of T){const T=b.find((T=>T.measurementId===X)),F=T&&z[T.appId];if(!F){A=[];break}A.push(F)}}0===A.length&&(A=Object.values(z)),await Promise.all(A),T("event",b,F||{})}catch(A){sT.error(A)}}(T,z,X,b,F)}else if("config"===F){const[F,A]=u;await async function(T,z,X,b,F,A){const u=b[F];try{if(u)await z[u];else{const T=(await NT(X)).find((T=>T.measurementId===F));T&&await z[T.appId]}}catch(y){sT.error(y)}T("config",F,A)}(T,z,X,b,F,A)}else if("consent"===F){const[z]=u;T("consent","update",z)}else if("get"===F){const[z,X,b]=u;T("get",z,X,b)}else if("set"===F){const[z]=u;T("set",z)}else T(F,...u)}catch(E){sT.error(E)}}}const qT=new class{constructor(){let T=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=T,this.intervalMillis=z}getThrottleMetadata(T){return this.throttleMetadata[T]}setThrottleMetadata(T,z){this.throttleMetadata[T]=z}deleteThrottleMetadata(T){delete this.throttleMetadata[T]}};function VT(T){return new Headers({Accept:"application/json","x-goog-api-key":T})}async function CT(T){let z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:qT,X=arguments.length>2?arguments[2]:void 0;const{appId:b,apiKey:F,measurementId:A}=T.options;if(!b)throw KT.create("no-app-id");if(!F){if(A)return{measurementId:A,appId:b};throw KT.create("no-api-key")}const u=z.getThrottleMetadata(b)||{backoffCount:0,throttleEndTimeMillis:Date.now()},y=new jT;return setTimeout((async()=>{y.abort()}),void 0!==X?X:6e4),GT({appId:b,apiKey:F,measurementId:A},u,y,z)}async function GT(T,z,X){let{throttleEndTimeMillis:b,backoffCount:F}=z,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:qT;var y;const{appId:E,measurementId:v}=T;try{await function(T,z){return new Promise(((X,b)=>{const F=Math.max(z-Date.now(),0),A=setTimeout(X,F);T.addEventListener((()=>{clearTimeout(A),b(KT.create("fetch-throttle",{throttleEndTimeMillis:z}))}))}))}(X,b)}catch(k){if(v)return sT.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${v} provided in the "measurementId" field in the local Firebase config. [${null===k||void 0===k?void 0:k.message}]`),{appId:E,measurementId:v};throw k}try{const z=await async function(T){var z;const{appId:X,apiKey:b}=T,F={method:"GET",headers:VT(b)},A="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",X),u=await fetch(A,F);if(200!==u.status&&304!==u.status){let T="";try{const X=await u.json();(null===(z=X.error)||void 0===z?void 0:z.message)&&(T=X.error.message)}catch(y){}throw KT.create("config-fetch-failed",{httpStatus:u.status,responseMessage:T})}return u.json()}(T);return u.deleteThrottleMetadata(E),z}catch(k){const z=k;if(!function(T){if(!(T instanceof A.f)||!T.customData)return!1;const z=Number(T.customData.httpStatus);return 429===z||500===z||503===z||504===z}(z)){if(u.deleteThrottleMetadata(E),v)return sT.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${v} provided in the "measurementId" field in the local Firebase config. [${null===z||void 0===z?void 0:z.message}]`),{appId:E,measurementId:v};throw k}const b=503===Number(null===(y=null===z||void 0===z?void 0:z.customData)||void 0===y?void 0:y.httpStatus)?(0,A.r)(F,u.intervalMillis,30):(0,A.r)(F,u.intervalMillis),L={throttleEndTimeMillis:Date.now()+b,backoffCount:F+1};return u.setThrottleMetadata(E,L),sT.debug(`Calling attemptFetch again in ${b} millis`),GT(T,L,X,u)}}class jT{constructor(){this.listeners=[]}addEventListener(T){this.listeners.push(T)}abort(){this.listeners.forEach((T=>T()))}}let ZT,mT;function ST(T){mT=T}function nT(T){ZT=T}async function OT(T,z,X,b,F,u,y){var E;const v=CT(T);v.then((z=>{X[z.measurementId]=z.appId,T.options.measurementId&&z.measurementId!==T.options.measurementId&&sT.warn(`The measurement ID in the local Firebase config (${T.options.measurementId}) does not match the measurement ID fetched from the server (${z.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((T=>sT.error(T))),z.push(v);const k=async function(){if(!(0,A._)())return sT.warn(KT.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,A.lb)()}catch(T){return sT.warn(KT.create("indexeddb-unavailable",{errorInfo:null===T||void 0===T?void 0:T.toString()}).message),!1}return!0}().then((T=>T?b.getId():void 0)),[L,D]=await Promise.all([v,k]);(function(T){const z=window.document.getElementsByTagName("script");for(const X of Object.values(z))if(X.src&&X.src.includes(UT)&&X.src.includes(T))return X;return null})(u)||lT(u,L.measurementId),mT&&(F("consent","default",mT),ST(void 0)),F("ma",new Date);const c=null!==(E=null===y||void 0===y?void 0:y.config)&&void 0!==E?E:{};return c.origin="firebase",c.update=!0,null!=D&&(c.firebase_id=D),F("config",L.measurementId,c),ZT&&(F("set",ZT),nT(void 0)),L.measurementId}class PT{constructor(T){this.app=T}_delete(){return delete WT[this.app.options.appId],Promise.resolve()}}let WT={},BT=[];const eT={};let RT,YT,iT="dataLayer",tT="gtag",gT=!1;function MT(T){if(gT)throw KT.create("already-initialized");T.dataLayerName&&(iT=T.dataLayerName),T.gtagName&&(tT=T.gtagName)}function rT(T,z,X){!function(){const T=[];if((0,A.R)()&&T.push("This is a browser extension environment."),(0,A.g)()||T.push("Cookies are not available."),T.length>0){const z=T.map(((T,z)=>`(${z+1}) ${T}`)).join(" "),X=KT.create("invalid-analytics-context",{errorInfo:z});sT.warn(X.message)}}();const b=T.options.appId;if(!b)throw KT.create("no-app-id");if(!T.options.apiKey){if(!T.options.measurementId)throw KT.create("no-api-key");sT.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${T.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=WT[b])throw KT.create("already-exists",{id:b});if(!gT){!function(T){let z=[];Array.isArray(window[T])?z=window[T]:window[T]=z}(iT);const{wrappedGtag:T,gtagCore:z}=function(T,z,X,b,F){let A=function(){for(var T=arguments.length,z=new Array(T),X=0;X<T;X++)z[X]=arguments[X];window[b].push(arguments)};return window[F]&&"function"===typeof window[F]&&(A=window[F]),window[F]=aT(A,T,z,X),{gtagCore:A,wrappedGtag:window[F]}}(WT,BT,eT,iT,tT);YT=T,RT=z,gT=!0}WT[b]=OT(T,BT,eT,z,RT,iT,X);return new PT(T)}function oT(){let T=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,b.H)();T=(0,A.K)(T);const z=(0,b.v)(T,HT);return z.isInitialized()?z.getImmediate():fT(T)}function fT(T){let z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const X=(0,b.v)(T,HT);if(X.isInitialized()){const T=X.getImmediate();if((0,A.x)(z,X.getOptions()))return T;throw KT.create("already-initialized")}return X.initialize({options:z})}async function hT(){if((0,A.R)())return!1;if(!(0,A.g)())return!1;if(!(0,A._)())return!1;try{return await(0,A.lb)()}catch(T){return!1}}function QT(T,z,X){T=(0,A.K)(T),async function(T,z,X,b){if(b&&b.global)return T("set",{screen_name:X}),Promise.resolve();T("config",await z,{update:!0,screen_name:X})}(YT,WT[T.app.options.appId],z,X).catch((T=>sT.error(T)))}async function wT(T){return T=(0,A.K)(T),async function(T,z){const X=await z;return new Promise(((z,b)=>{T("get",X,"client_id",(T=>{T||b(KT.create("no-client-id")),z(T)}))}))}(YT,WT[T.app.options.appId])}function JT(T,z,X){T=(0,A.K)(T),async function(T,z,X,b){if(b&&b.global)return T("set",{user_id:X}),Promise.resolve();T("config",await z,{update:!0,user_id:X})}(YT,WT[T.app.options.appId],z,X).catch((T=>sT.error(T)))}function IT(T,z,X){T=(0,A.K)(T),async function(T,z,X,b){if(b&&b.global){const z={};for(const T of Object.keys(X))z[`user_properties.${T}`]=X[T];return T("set",z),Promise.resolve()}T("config",await z,{update:!0,user_properties:X})}(YT,WT[T.app.options.appId],z,X).catch((T=>sT.error(T)))}function Tz(T,z){T=(0,A.K)(T),async function(T,z){const X=await T;window[`ga-disable-${X}`]=!z}(WT[T.app.options.appId],z).catch((T=>sT.error(T)))}function zz(T){YT?YT("set",T):nT(T)}function Xz(T,z,X,b){T=(0,A.K)(T),async function(T,z,X,b,F){if(F&&F.global)T("event",X,b);else{const F=await z;T("event",X,Object.assign(Object.assign({},b),{send_to:F}))}}(YT,WT[T.app.options.appId],z,X,b).catch((T=>sT.error(T)))}function bz(T){YT?YT("consent","update",T):ST(T)}const Fz="@firebase/analytics",Az="0.10.0";(0,b.x)(new u.f(HT,((T,z)=>{let{options:X}=z;return rT(T.getProvider("app").getImmediate(),T.getProvider("installations-internal").getImmediate(),X)}),"PUBLIC")),(0,b.x)(new u.f("analytics-internal",(function(T){try{const z=T.getProvider(HT).getImmediate();return{logEvent:(T,X,b)=>Xz(z,T,X,b)}}catch(z){throw KT.create("interop-component-reg-failed",{reason:z})}}),"PRIVATE")),(0,b.N)(Fz,Az),(0,b.N)(Fz,Az,"esm2017")}}]);