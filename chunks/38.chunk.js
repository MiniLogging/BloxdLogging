/*! For license information please see y2yh1e.38.636cb952.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11619:(v,T,X)=>{X.r(T),X.d(T,{getAnalytics:()=>hv,getGoogleAnalyticsClientId:()=>Rv,initializeAnalytics:()=>Sv,isSupported:()=>wv,logEvent:()=>XT,setAnalyticsCollectionEnabled:()=>vT,setConsent:()=>OT,setCurrentScreen:()=>zv,setDefaultEventParameters:()=>TT,setUserId:()=>Yv,setUserProperties:()=>qv,settings:()=>jv});var O=X(11595),u=X(11615),B=X(11608),m=X(11603);let A,x;const f=new WeakMap,M=new WeakMap,H=new WeakMap,n=new WeakMap,V=new WeakMap;let D={get(v,T,X){if(v instanceof IDBTransaction){if("done"===T)return M.get(v);if("objectStoreNames"===T)return v.objectStoreNames||H.get(v);if("store"===T)return X.objectStoreNames[1]?void 0:X.objectStore(X.objectStoreNames[0])}return k(v[T])},set:(v,T,X)=>(v[T]=X,!0),has:(v,T)=>v instanceof IDBTransaction&&("done"===T||"store"===T)||T in v};function s(v){return v!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(x||(x=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(v)?function(){for(var T=arguments.length,X=new Array(T),O=0;O<T;O++)X[O]=arguments[O];return v.apply(b(this),X),k(f.get(this))}:function(){for(var T=arguments.length,X=new Array(T),O=0;O<T;O++)X[O]=arguments[O];return k(v.apply(b(this),X))}:function(T){for(var X=arguments.length,O=new Array(X>1?X-1:0),u=1;u<X;u++)O[u-1]=arguments[u];const B=v.call(b(this),T,...O);return H.set(B,T.sort?T.sort():[T]),k(B)}}function F(v){return"function"===typeof v?s(v):(v instanceof IDBTransaction&&function(v){if(M.has(v))return;const T=new Promise(((T,X)=>{const O=()=>{v.removeEventListener("complete",u),v.removeEventListener("error",B),v.removeEventListener("abort",B)},u=()=>{T(),O()},B=()=>{X(v.error||new DOMException("AbortError","AbortError")),O()};v.addEventListener("complete",u),v.addEventListener("error",B),v.addEventListener("abort",B)}));M.set(v,T)}(v),T=v,(A||(A=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((v=>T instanceof v))?new Proxy(v,D):v);var T}function k(v){if(v instanceof IDBRequest)return function(v){const T=new Promise(((T,X)=>{const O=()=>{v.removeEventListener("success",u),v.removeEventListener("error",B)},u=()=>{T(k(v.result)),O()},B=()=>{X(v.error),O()};v.addEventListener("success",u),v.addEventListener("error",B)}));return T.then((T=>{T instanceof IDBCursor&&f.set(T,v)})).catch((()=>{})),V.set(T,v),T}(v);if(n.has(v))return n.get(v);const T=F(v);return T!==v&&(n.set(v,T),V.set(T,v)),T}const b=v=>V.get(v);const l=["get","getKey","getAll","getAllKeys","count"],Q=["put","add","delete","clear"],K=new Map;function p(v,T){if(!(v instanceof IDBDatabase)||T in v||"string"!==typeof T)return;if(K.get(T))return K.get(T);const X=T.replace(/FromIndex$/,""),O=T!==X,u=Q.includes(X);if(!(X in(O?IDBIndex:IDBObjectStore).prototype)||!u&&!l.includes(X))return;const B=async function(v){const T=this.transaction(v,u?"readwrite":"readonly");let B=T.store;for(var m=arguments.length,A=new Array(m>1?m-1:0),x=1;x<m;x++)A[x-1]=arguments[x];return O&&(B=B.index(A.shift())),(await Promise.all([B[X](...A),u&&T.done]))[0]};return K.set(T,B),B}D=(v=>({...v,get:(T,X,O)=>p(T,X)||v.get(T,X,O),has:(T,X)=>!!p(T,X)||v.has(T,X)}))(D);const G="@firebase/installations",L="0.6.4",r=1e4,o=`w:${L}`,Z="FIS_v2",U=36e5,J={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},y=new B.d("installations","Installations",J);function P(v){return v instanceof B.f&&v.code.includes("request-failed")}function a(v){let{projectId:T}=v;return`https://firebaseinstallations.googleapis.com/v1/projects/${T}/installations`}function E(v){return{token:v.token,requestStatus:2,expiresIn:(T=v.expiresIn,Number(T.replace("s","000"))),creationTime:Date.now()};var T}async function i(v,T){const X=(await T.json()).error;return y.create("request-failed",{requestName:v,serverCode:X.code,serverMessage:X.message,serverStatus:X.status})}function t(v){let{apiKey:T}=v;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":T})}function C(v,T){let{refreshToken:X}=T;const O=t(v);return O.append("Authorization",function(v){return`${Z} ${v}`}(X)),O}async function c(v){const T=await v();return T.status>=500&&T.status<600?v():T}function N(v){return new Promise((T=>{setTimeout(T,v)}))}const d=/^[cdef][\w-]{21}$/;function I(){try{const v=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(v),v[0]=112+v[0]%16;const T=function(v){const T=(X=v,btoa(String.fromCharCode(...X)).replace(/\+/g,"-").replace(/\//g,"_"));var X;return T.substr(0,22)}(v);return d.test(T)?T:""}catch(v){return""}}function W(v){return`${v.appName}!${v.appId}`}const g=new Map;function j(v,T){const X=W(v);e(X,T),function(v,T){const X=S();X&&X.postMessage({key:v,fid:T});w()}(X,T)}function e(v,T){const X=g.get(v);if(X)for(const O of X)O(T)}let h=null;function S(){return!h&&"BroadcastChannel"in self&&(h=new BroadcastChannel("[Firebase] FID Change"),h.onmessage=v=>{e(v.data.key,v.data.fid)}),h}function w(){0===g.size&&h&&(h.close(),h=null)}const z="firebase-installations-store";let R=null;function Y(){return R||(R=function(v,T){let{blocked:X,upgrade:O,blocking:u,terminated:B}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const m=indexedDB.open(v,T),A=k(m);return O&&m.addEventListener("upgradeneeded",(v=>{O(k(m.result),v.oldVersion,v.newVersion,k(m.transaction))})),X&&m.addEventListener("blocked",(()=>X())),A.then((v=>{B&&v.addEventListener("close",(()=>B())),u&&v.addEventListener("versionchange",(()=>u()))})).catch((()=>{})),A}("firebase-installations-database",1,{upgrade:(v,T)=>{if(0===T)v.createObjectStore(z)}})),R}async function q(v,T){const X=W(v),O=(await Y()).transaction(z,"readwrite"),u=O.objectStore(z),B=await u.get(X);return await u.put(T,X),await O.done,B&&B.fid===T.fid||j(v,T.fid),T}async function vv(v){const T=W(v),X=(await Y()).transaction(z,"readwrite");await X.objectStore(z).delete(T),await X.done}async function Tv(v,T){const X=W(v),O=(await Y()).transaction(z,"readwrite"),u=O.objectStore(z),B=await u.get(X),m=T(B);return void 0===m?await u.delete(X):await u.put(m,X),await O.done,!m||B&&B.fid===m.fid||j(v,m.fid),m}async function Xv(v){let T;const X=await Tv(v.appConfig,(X=>{const O=function(v){const T=v||{fid:I(),registrationStatus:0};return Bv(T)}(X),u=function(v,T){if(0===T.registrationStatus){if(!navigator.onLine){return{installationEntry:T,registrationPromise:Promise.reject(y.create("app-offline"))}}const X={fid:T.fid,registrationStatus:1,registrationTime:Date.now()},O=async function(v,T){try{const X=await async function(v,T){let{appConfig:X,heartbeatServiceProvider:O}=v,{fid:u}=T;const B=a(X),m=t(X),A=O.getImmediate({optional:!0});if(A){const v=await A.getHeartbeatsHeader();v&&m.append("x-firebase-client",v)}const x={fid:u,authVersion:Z,appId:X.appId,sdkVersion:o},f={method:"POST",headers:m,body:JSON.stringify(x)},M=await c((()=>fetch(B,f)));if(M.ok){const v=await M.json();return{fid:v.fid||u,registrationStatus:2,refreshToken:v.refreshToken,authToken:E(v.authToken)}}throw await i("Create Installation",M)}(v,T);return q(v.appConfig,X)}catch(X){throw P(X)&&409===X.customData.serverCode?await vv(v.appConfig):await q(v.appConfig,{fid:T.fid,registrationStatus:0}),X}}(v,X);return{installationEntry:X,registrationPromise:O}}return 1===T.registrationStatus?{installationEntry:T,registrationPromise:Ov(v)}:{installationEntry:T}}(v,O);return T=u.registrationPromise,u.installationEntry}));return""===X.fid?{installationEntry:await T}:{installationEntry:X,registrationPromise:T}}async function Ov(v){let T=await uv(v.appConfig);for(;1===T.registrationStatus;)await N(100),T=await uv(v.appConfig);if(0===T.registrationStatus){const{installationEntry:T,registrationPromise:X}=await Xv(v);return X||T}return T}function uv(v){return Tv(v,(v=>{if(!v)throw y.create("installation-not-found");return Bv(v)}))}function Bv(v){return 1===(T=v).registrationStatus&&T.registrationTime+r<Date.now()?{fid:v.fid,registrationStatus:0}:v;var T}async function mv(v,T){let{appConfig:X,heartbeatServiceProvider:O}=v;const u=function(v,T){let{fid:X}=T;return`${a(v)}/${X}/authTokens:generate`}(X,T),B=C(X,T),m=O.getImmediate({optional:!0});if(m){const v=await m.getHeartbeatsHeader();v&&B.append("x-firebase-client",v)}const A={installation:{sdkVersion:o,appId:X.appId}},x={method:"POST",headers:B,body:JSON.stringify(A)},f=await c((()=>fetch(u,x)));if(f.ok){return E(await f.json())}throw await i("Generate Auth Token",f)}async function Av(v){let T,X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const O=await Tv(v.appConfig,(O=>{if(!fv(O))throw y.create("not-registered");const u=O.authToken;if(!X&&function(v){return 2===v.requestStatus&&!function(v){const T=Date.now();return T<v.creationTime||v.creationTime+v.expiresIn<T+U}(v)}(u))return O;if(1===u.requestStatus)return T=async function(v,T){let X=await xv(v.appConfig);for(;1===X.authToken.requestStatus;)await N(100),X=await xv(v.appConfig);const O=X.authToken;return 0===O.requestStatus?Av(v,T):O}(v,X),O;{if(!navigator.onLine)throw y.create("app-offline");const X=function(v){const T={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},v),{authToken:T})}(O);return T=async function(v,T){try{const X=await mv(v,T),O=Object.assign(Object.assign({},T),{authToken:X});return await q(v.appConfig,O),X}catch(X){if(!P(X)||401!==X.customData.serverCode&&404!==X.customData.serverCode){const X=Object.assign(Object.assign({},T),{authToken:{requestStatus:0}});await q(v.appConfig,X)}else await vv(v.appConfig);throw X}}(v,X),X}}));return T?await T:O.authToken}function xv(v){return Tv(v,(v=>{if(!fv(v))throw y.create("not-registered");const T=v.authToken;return 1===(X=T).requestStatus&&X.requestTime+r<Date.now()?Object.assign(Object.assign({},v),{authToken:{requestStatus:0}}):v;var X}))}function fv(v){return void 0!==v&&2===v.registrationStatus}async function Mv(v){let T=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const X=v;await async function(v){const{registrationPromise:T}=await Xv(v);T&&await T}(X);return(await Av(X,T)).token}function Hv(v){return y.create("missing-app-config-values",{valueName:v})}const nv="installations",Vv=v=>{const T=v.getProvider("app").getImmediate(),X=function(v){if(!v||!v.options)throw Hv("App Configuration");if(!v.name)throw Hv("App Name");const T=["projectId","apiKey","appId"];for(const X of T)if(!v.options[X])throw Hv(X);return{appName:v.name,projectId:v.options.projectId,apiKey:v.options.apiKey,appId:v.options.appId}}(T);return{app:T,appConfig:X,heartbeatServiceProvider:(0,O.y)(T,"heartbeat"),_delete:()=>Promise.resolve()}},Dv=v=>{const T=v.getProvider("app").getImmediate(),X=(0,O.y)(T,nv).getImmediate();return{getId:()=>async function(v){const T=v,{installationEntry:X,registrationPromise:O}=await Xv(T);return O?O.catch(console.error):Av(T).catch(console.error),X.fid}(X),getToken:v=>Mv(X,v)}};(0,O.B)(new m.f(nv,Vv,"PUBLIC")),(0,O.B)(new m.f("installations-internal",Dv,"PRIVATE")),(0,O.Q)(G,L),(0,O.Q)(G,L,"esm2017");const sv="analytics",Fv="https://www.googletagmanager.com/gtag/js",kv=new u.f("@firebase/analytics"),bv={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},lv=new B.d("analytics","Analytics",bv);function Qv(v){if(!v.startsWith(Fv)){const T=lv.create("invalid-gtag-resource",{gtagURL:v});return kv.warn(T.message),""}return v}function Kv(v){return Promise.all(v.map((v=>v.catch((v=>v)))))}function pv(v,T){const X=function(v,T){let X;return window.trustedTypes&&(X=window.trustedTypes.createPolicy(v,T)),X}("firebase-js-sdk-policy",{createScriptURL:Qv}),O=document.createElement("script"),u=`${Fv}?l=${v}&id=${T}`;O.src=X?null===X||void 0===X?void 0:X.createScriptURL(u):u,O.async=!0,document.head.appendChild(O)}function Gv(v,T,X,O){return async function(u){try{for(var B=arguments.length,m=new Array(B>1?B-1:0),A=1;A<B;A++)m[A-1]=arguments[A];if("event"===u){const[O,u]=m;await async function(v,T,X,O,u){try{let B=[];if(u&&u.send_to){let v=u.send_to;Array.isArray(v)||(v=[v]);const O=await Kv(X);for(const X of v){const v=O.find((v=>v.measurementId===X)),u=v&&T[v.appId];if(!u){B=[];break}B.push(u)}}0===B.length&&(B=Object.values(T)),await Promise.all(B),v("event",O,u||{})}catch(B){kv.error(B)}}(v,T,X,O,u)}else if("config"===u){const[u,B]=m;await async function(v,T,X,O,u,B){const m=O[u];try{if(m)await T[m];else{const v=(await Kv(X)).find((v=>v.measurementId===u));v&&await T[v.appId]}}catch(A){kv.error(A)}v("config",u,B)}(v,T,X,O,u,B)}else if("consent"===u){const[T]=m;v("consent","update",T)}else if("get"===u){const[T,X,O]=m;v("get",T,X,O)}else if("set"===u){const[T]=m;v("set",T)}else v(u,...m)}catch(x){kv.error(x)}}}const Lv=new class{constructor(){let v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},T=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=v,this.intervalMillis=T}getThrottleMetadata(v){return this.throttleMetadata[v]}setThrottleMetadata(v,T){this.throttleMetadata[v]=T}deleteThrottleMetadata(v){delete this.throttleMetadata[v]}};function rv(v){return new Headers({Accept:"application/json","x-goog-api-key":v})}async function ov(v){let T=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Lv,X=arguments.length>2?arguments[2]:void 0;const{appId:O,apiKey:u,measurementId:B}=v.options;if(!O)throw lv.create("no-app-id");if(!u){if(B)return{measurementId:B,appId:O};throw lv.create("no-api-key")}const m=T.getThrottleMetadata(O)||{backoffCount:0,throttleEndTimeMillis:Date.now()},A=new Uv;return setTimeout((async()=>{A.abort()}),void 0!==X?X:6e4),Zv({appId:O,apiKey:u,measurementId:B},m,A,T)}async function Zv(v,T,X){let{throttleEndTimeMillis:O,backoffCount:u}=T,m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Lv;var A;const{appId:x,measurementId:f}=v;try{await function(v,T){return new Promise(((X,O)=>{const u=Math.max(T-Date.now(),0),B=setTimeout(X,u);v.addEventListener((()=>{clearTimeout(B),O(lv.create("fetch-throttle",{throttleEndTimeMillis:T}))}))}))}(X,O)}catch(M){if(f)return kv.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${f} provided in the "measurementId" field in the local Firebase config. [${null===M||void 0===M?void 0:M.message}]`),{appId:x,measurementId:f};throw M}try{const T=await async function(v){var T;const{appId:X,apiKey:O}=v,u={method:"GET",headers:rv(O)},B="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",X),m=await fetch(B,u);if(200!==m.status&&304!==m.status){let v="";try{const X=await m.json();(null===(T=X.error)||void 0===T?void 0:T.message)&&(v=X.error.message)}catch(A){}throw lv.create("config-fetch-failed",{httpStatus:m.status,responseMessage:v})}return m.json()}(v);return m.deleteThrottleMetadata(x),T}catch(M){const T=M;if(!function(v){if(!(v instanceof B.f)||!v.customData)return!1;const T=Number(v.customData.httpStatus);return 429===T||500===T||503===T||504===T}(T)){if(m.deleteThrottleMetadata(x),f)return kv.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${f} provided in the "measurementId" field in the local Firebase config. [${null===T||void 0===T?void 0:T.message}]`),{appId:x,measurementId:f};throw M}const O=503===Number(null===(A=null===T||void 0===T?void 0:T.customData)||void 0===A?void 0:A.httpStatus)?(0,B.s)(u,m.intervalMillis,30):(0,B.s)(u,m.intervalMillis),H={throttleEndTimeMillis:Date.now()+O,backoffCount:u+1};return m.setThrottleMetadata(x,H),kv.debug(`Calling attemptFetch again in ${O} millis`),Zv(v,H,X,m)}}class Uv{constructor(){this.listeners=[]}addEventListener(v){this.listeners.push(v)}abort(){this.listeners.forEach((v=>v()))}}let Jv,yv;function Pv(v){yv=v}function av(v){Jv=v}async function Ev(v,T,X,O,u,m,A){var x;const f=ov(v);f.then((T=>{X[T.measurementId]=T.appId,v.options.measurementId&&T.measurementId!==v.options.measurementId&&kv.warn(`The measurement ID in the local Firebase config (${v.options.measurementId}) does not match the measurement ID fetched from the server (${T.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((v=>kv.error(v))),T.push(f);const M=async function(){if(!(0,B.V)())return kv.warn(lv.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,B.hb)()}catch(v){return kv.warn(lv.create("indexeddb-unavailable",{errorInfo:null===v||void 0===v?void 0:v.toString()}).message),!1}return!0}().then((v=>v?O.getId():void 0)),[H,n]=await Promise.all([f,M]);(function(v){const T=window.document.getElementsByTagName("script");for(const X of Object.values(T))if(X.src&&X.src.includes(Fv)&&X.src.includes(v))return X;return null})(m)||pv(m,H.measurementId),yv&&(u("consent","default",yv),Pv(void 0)),u("ma",new Date);const V=null!==(x=null===A||void 0===A?void 0:A.config)&&void 0!==x?x:{};return V.origin="firebase",V.update=!0,null!=n&&(V.firebase_id=n),u("config",H.measurementId,V),Jv&&(u("set",Jv),av(void 0)),H.measurementId}class iv{constructor(v){this.app=v}_delete(){return delete tv[this.app.options.appId],Promise.resolve()}}let tv={},Cv=[];const cv={};let Nv,dv,Iv="dataLayer",Wv="gtag",gv=!1;function jv(v){if(gv)throw lv.create("already-initialized");v.dataLayerName&&(Iv=v.dataLayerName),v.gtagName&&(Wv=v.gtagName)}function ev(v,T,X){!function(){const v=[];if((0,B.O)()&&v.push("This is a browser extension environment."),(0,B.h)()||v.push("Cookies are not available."),v.length>0){const T=v.map(((v,T)=>`(${T+1}) ${v}`)).join(" "),X=lv.create("invalid-analytics-context",{errorInfo:T});kv.warn(X.message)}}();const O=v.options.appId;if(!O)throw lv.create("no-app-id");if(!v.options.apiKey){if(!v.options.measurementId)throw lv.create("no-api-key");kv.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${v.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=tv[O])throw lv.create("already-exists",{id:O});if(!gv){!function(v){let T=[];Array.isArray(window[v])?T=window[v]:window[v]=T}(Iv);const{wrappedGtag:v,gtagCore:T}=function(v,T,X,O,u){let B=function(){for(var v=arguments.length,T=new Array(v),X=0;X<v;X++)T[X]=arguments[X];window[O].push(arguments)};return window[u]&&"function"===typeof window[u]&&(B=window[u]),window[u]=Gv(B,v,T,X),{gtagCore:B,wrappedGtag:window[u]}}(tv,Cv,cv,Iv,Wv);dv=v,Nv=T,gv=!0}tv[O]=Ev(v,Cv,cv,T,Nv,Iv,X);return new iv(v)}function hv(){let v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,O.J)();v=(0,B.M)(v);const T=(0,O.y)(v,sv);return T.isInitialized()?T.getImmediate():Sv(v)}function Sv(v){let T=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const X=(0,O.y)(v,sv);if(X.isInitialized()){const v=X.getImmediate();if((0,B.z)(T,X.getOptions()))return v;throw lv.create("already-initialized")}return X.initialize({options:T})}async function wv(){if((0,B.O)())return!1;if(!(0,B.h)())return!1;if(!(0,B.V)())return!1;try{return await(0,B.hb)()}catch(v){return!1}}function zv(v,T,X){v=(0,B.M)(v),async function(v,T,X,O){if(O&&O.global)return v("set",{screen_name:X}),Promise.resolve();v("config",await T,{update:!0,screen_name:X})}(dv,tv[v.app.options.appId],T,X).catch((v=>kv.error(v)))}async function Rv(v){return v=(0,B.M)(v),async function(v,T){const X=await T;return new Promise(((T,O)=>{v("get",X,"client_id",(v=>{v||O(lv.create("no-client-id")),T(v)}))}))}(dv,tv[v.app.options.appId])}function Yv(v,T,X){v=(0,B.M)(v),async function(v,T,X,O){if(O&&O.global)return v("set",{user_id:X}),Promise.resolve();v("config",await T,{update:!0,user_id:X})}(dv,tv[v.app.options.appId],T,X).catch((v=>kv.error(v)))}function qv(v,T,X){v=(0,B.M)(v),async function(v,T,X,O){if(O&&O.global){const T={};for(const v of Object.keys(X))T[`user_properties.${v}`]=X[v];return v("set",T),Promise.resolve()}v("config",await T,{update:!0,user_properties:X})}(dv,tv[v.app.options.appId],T,X).catch((v=>kv.error(v)))}function vT(v,T){v=(0,B.M)(v),async function(v,T){const X=await v;window[`ga-disable-${X}`]=!T}(tv[v.app.options.appId],T).catch((v=>kv.error(v)))}function TT(v){dv?dv("set",v):av(v)}function XT(v,T,X,O){v=(0,B.M)(v),async function(v,T,X,O,u){if(u&&u.global)v("event",X,O);else{const u=await T;v("event",X,Object.assign(Object.assign({},O),{send_to:u}))}}(dv,tv[v.app.options.appId],T,X,O).catch((v=>kv.error(v)))}function OT(v){dv?dv("consent","update",v):Pv(v)}const uT="@firebase/analytics",BT="0.10.0";(0,O.B)(new m.f(sv,((v,T)=>{let{options:X}=T;return ev(v.getProvider("app").getImmediate(),v.getProvider("installations-internal").getImmediate(),X)}),"PUBLIC")),(0,O.B)(new m.f("analytics-internal",(function(v){try{const T=v.getProvider(sv).getImmediate();return{logEvent:(v,X,O)=>XT(T,v,X,O)}}catch(T){throw lv.create("interop-component-reg-failed",{reason:T})}}),"PRIVATE")),(0,O.Q)(uT,BT),(0,O.Q)(uT,BT,"esm2017")}}]);