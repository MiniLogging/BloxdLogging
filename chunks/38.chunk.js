/*! For license information please see o09hnv.38.7753c05e.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{10997:(N,Z,d)=>{d.r(Z),d.d(Z,{getAnalytics:()=>lN,getGoogleAnalyticsClientId:()=>RN,initializeAnalytics:()=>uN,isSupported:()=>aN,logEvent:()=>dZ,setAnalyticsCollectionEnabled:()=>NZ,setConsent:()=>XZ,setCurrentScreen:()=>cN,setDefaultEventParameters:()=>ZZ,setUserId:()=>fN,setUserProperties:()=>oN,settings:()=>pN});var X=d(10970),I=d(10991),m=d(10984),z=d(10977);let w,S;const e=new WeakMap,j=new WeakMap,B=new WeakMap,D=new WeakMap,v=new WeakMap;let T={get(N,Z,d){if(N instanceof IDBTransaction){if("done"===Z)return j.get(N);if("objectStoreNames"===Z)return N.objectStoreNames||B.get(N);if("store"===Z)return d.objectStoreNames[1]?void 0:d.objectStore(d.objectStoreNames[0])}return U(N[Z])},set:(N,Z,d)=>(N[Z]=d,!0),has:(N,Z)=>N instanceof IDBTransaction&&("done"===Z||"store"===Z)||Z in N};function k(N){return N!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(S||(S=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(N)?function(){for(var Z=arguments.length,d=new Array(Z),X=0;X<Z;X++)d[X]=arguments[X];return N.apply(C(this),d),U(e.get(this))}:function(){for(var Z=arguments.length,d=new Array(Z),X=0;X<Z;X++)d[X]=arguments[X];return U(N.apply(C(this),d))}:function(Z){for(var d=arguments.length,X=new Array(d>1?d-1:0),I=1;I<d;I++)X[I-1]=arguments[I];const m=N.call(C(this),Z,...X);return B.set(m,Z.sort?Z.sort():[Z]),U(m)}}function h(N){return"function"===typeof N?k(N):(N instanceof IDBTransaction&&function(N){if(j.has(N))return;const Z=new Promise(((Z,d)=>{const X=()=>{N.removeEventListener("complete",I),N.removeEventListener("error",m),N.removeEventListener("abort",m)},I=()=>{Z(),X()},m=()=>{d(N.error||new DOMException("AbortError","AbortError")),X()};N.addEventListener("complete",I),N.addEventListener("error",m),N.addEventListener("abort",m)}));j.set(N,Z)}(N),Z=N,(w||(w=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((N=>Z instanceof N))?new Proxy(N,T):N);var Z}function U(N){if(N instanceof IDBRequest)return function(N){const Z=new Promise(((Z,d)=>{const X=()=>{N.removeEventListener("success",I),N.removeEventListener("error",m)},I=()=>{Z(U(N.result)),X()},m=()=>{d(N.error),X()};N.addEventListener("success",I),N.addEventListener("error",m)}));return Z.then((Z=>{Z instanceof IDBCursor&&e.set(Z,N)})).catch((()=>{})),v.set(Z,N),Z}(N);if(D.has(N))return D.get(N);const Z=h(N);return Z!==N&&(D.set(N,Z),v.set(Z,N)),Z}const C=N=>v.get(N);const M=["get","getKey","getAll","getAllKeys","count"],Q=["put","add","delete","clear"],A=new Map;function n(N,Z){if(!(N instanceof IDBDatabase)||Z in N||"string"!==typeof Z)return;if(A.get(Z))return A.get(Z);const d=Z.replace(/FromIndex$/,""),X=Z!==d,I=Q.includes(d);if(!(d in(X?IDBIndex:IDBObjectStore).prototype)||!I&&!M.includes(d))return;const m=async function(N){const Z=this.transaction(N,I?"readwrite":"readonly");let m=Z.store;for(var z=arguments.length,w=new Array(z>1?z-1:0),S=1;S<z;S++)w[S-1]=arguments[S];return X&&(m=m.index(w.shift())),(await Promise.all([m[d](...w),I&&Z.done]))[0]};return A.set(Z,m),m}T=(N=>({...N,get:(Z,d,X)=>n(Z,d)||N.get(Z,d,X),has:(Z,d)=>!!n(Z,d)||N.has(Z,d)}))(T);const g="@firebase/installations",E="0.6.4",V=1e4,O=`w:${E}`,K="FIS_v2",r=36e5,P={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},W=new m.c("installations","Installations",P);function b(N){return N instanceof m.f&&N.code.includes("request-failed")}function J(N){let{projectId:Z}=N;return`https://firebaseinstallations.googleapis.com/v1/projects/${Z}/installations`}function F(N){return{token:N.token,requestStatus:2,expiresIn:(Z=N.expiresIn,Number(Z.replace("s","000"))),creationTime:Date.now()};var Z}async function G(N,Z){const d=(await Z.json()).error;return W.create("request-failed",{requestName:N,serverCode:d.code,serverMessage:d.message,serverStatus:d.status})}function x(N){let{apiKey:Z}=N;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":Z})}function t(N,Z){let{refreshToken:d}=Z;const X=x(N);return X.append("Authorization",function(N){return`${K} ${N}`}(d)),X}async function q(N){const Z=await N();return Z.status>=500&&Z.status<600?N():Z}function Y(N){return new Promise((Z=>{setTimeout(Z,N)}))}const s=/^[cdef][\w-]{21}$/;function L(){try{const N=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(N),N[0]=112+N[0]%16;const Z=function(N){const Z=(d=N,btoa(String.fromCharCode(...d)).replace(/\+/g,"-").replace(/\//g,"_"));var d;return Z.substr(0,22)}(N);return s.test(Z)?Z:""}catch(N){return""}}function H(N){return`${N.appName}!${N.appId}`}const i=new Map;function p(N,Z){const d=H(N);y(d,Z),function(N,Z){const d=u();d&&d.postMessage({key:N,fid:Z});a()}(d,Z)}function y(N,Z){const d=i.get(N);if(d)for(const X of d)X(Z)}let l=null;function u(){return!l&&"BroadcastChannel"in self&&(l=new BroadcastChannel("[Firebase] FID Change"),l.onmessage=N=>{y(N.data.key,N.data.fid)}),l}function a(){0===i.size&&l&&(l.close(),l=null)}const c="firebase-installations-store";let R=null;function f(){return R||(R=function(N,Z){let{blocked:d,upgrade:X,blocking:I,terminated:m}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const z=indexedDB.open(N,Z),w=U(z);return X&&z.addEventListener("upgradeneeded",(N=>{X(U(z.result),N.oldVersion,N.newVersion,U(z.transaction))})),d&&z.addEventListener("blocked",(()=>d())),w.then((N=>{m&&N.addEventListener("close",(()=>m())),I&&N.addEventListener("versionchange",(()=>I()))})).catch((()=>{})),w}("firebase-installations-database",1,{upgrade:(N,Z)=>{if(0===Z)N.createObjectStore(c)}})),R}async function o(N,Z){const d=H(N),X=(await f()).transaction(c,"readwrite"),I=X.objectStore(c),m=await I.get(d);return await I.put(Z,d),await X.done,m&&m.fid===Z.fid||p(N,Z.fid),Z}async function NN(N){const Z=H(N),d=(await f()).transaction(c,"readwrite");await d.objectStore(c).delete(Z),await d.done}async function ZN(N,Z){const d=H(N),X=(await f()).transaction(c,"readwrite"),I=X.objectStore(c),m=await I.get(d),z=Z(m);return void 0===z?await I.delete(d):await I.put(z,d),await X.done,!z||m&&m.fid===z.fid||p(N,z.fid),z}async function dN(N){let Z;const d=await ZN(N.appConfig,(d=>{const X=function(N){const Z=N||{fid:L(),registrationStatus:0};return mN(Z)}(d),I=function(N,Z){if(0===Z.registrationStatus){if(!navigator.onLine){return{installationEntry:Z,registrationPromise:Promise.reject(W.create("app-offline"))}}const d={fid:Z.fid,registrationStatus:1,registrationTime:Date.now()},X=async function(N,Z){try{const d=await async function(N,Z){let{appConfig:d,heartbeatServiceProvider:X}=N,{fid:I}=Z;const m=J(d),z=x(d),w=X.getImmediate({optional:!0});if(w){const N=await w.getHeartbeatsHeader();N&&z.append("x-firebase-client",N)}const S={fid:I,authVersion:K,appId:d.appId,sdkVersion:O},e={method:"POST",headers:z,body:JSON.stringify(S)},j=await q((()=>fetch(m,e)));if(j.ok){const N=await j.json();return{fid:N.fid||I,registrationStatus:2,refreshToken:N.refreshToken,authToken:F(N.authToken)}}throw await G("Create Installation",j)}(N,Z);return o(N.appConfig,d)}catch(d){throw b(d)&&409===d.customData.serverCode?await NN(N.appConfig):await o(N.appConfig,{fid:Z.fid,registrationStatus:0}),d}}(N,d);return{installationEntry:d,registrationPromise:X}}return 1===Z.registrationStatus?{installationEntry:Z,registrationPromise:XN(N)}:{installationEntry:Z}}(N,X);return Z=I.registrationPromise,I.installationEntry}));return""===d.fid?{installationEntry:await Z}:{installationEntry:d,registrationPromise:Z}}async function XN(N){let Z=await IN(N.appConfig);for(;1===Z.registrationStatus;)await Y(100),Z=await IN(N.appConfig);if(0===Z.registrationStatus){const{installationEntry:Z,registrationPromise:d}=await dN(N);return d||Z}return Z}function IN(N){return ZN(N,(N=>{if(!N)throw W.create("installation-not-found");return mN(N)}))}function mN(N){return 1===(Z=N).registrationStatus&&Z.registrationTime+V<Date.now()?{fid:N.fid,registrationStatus:0}:N;var Z}async function zN(N,Z){let{appConfig:d,heartbeatServiceProvider:X}=N;const I=function(N,Z){let{fid:d}=Z;return`${J(N)}/${d}/authTokens:generate`}(d,Z),m=t(d,Z),z=X.getImmediate({optional:!0});if(z){const N=await z.getHeartbeatsHeader();N&&m.append("x-firebase-client",N)}const w={installation:{sdkVersion:O,appId:d.appId}},S={method:"POST",headers:m,body:JSON.stringify(w)},e=await q((()=>fetch(I,S)));if(e.ok){return F(await e.json())}throw await G("Generate Auth Token",e)}async function wN(N){let Z,d=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const X=await ZN(N.appConfig,(X=>{if(!eN(X))throw W.create("not-registered");const I=X.authToken;if(!d&&function(N){return 2===N.requestStatus&&!function(N){const Z=Date.now();return Z<N.creationTime||N.creationTime+N.expiresIn<Z+r}(N)}(I))return X;if(1===I.requestStatus)return Z=async function(N,Z){let d=await SN(N.appConfig);for(;1===d.authToken.requestStatus;)await Y(100),d=await SN(N.appConfig);const X=d.authToken;return 0===X.requestStatus?wN(N,Z):X}(N,d),X;{if(!navigator.onLine)throw W.create("app-offline");const d=function(N){const Z={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},N),{authToken:Z})}(X);return Z=async function(N,Z){try{const d=await zN(N,Z),X=Object.assign(Object.assign({},Z),{authToken:d});return await o(N.appConfig,X),d}catch(d){if(!b(d)||401!==d.customData.serverCode&&404!==d.customData.serverCode){const d=Object.assign(Object.assign({},Z),{authToken:{requestStatus:0}});await o(N.appConfig,d)}else await NN(N.appConfig);throw d}}(N,d),d}}));return Z?await Z:X.authToken}function SN(N){return ZN(N,(N=>{if(!eN(N))throw W.create("not-registered");const Z=N.authToken;return 1===(d=Z).requestStatus&&d.requestTime+V<Date.now()?Object.assign(Object.assign({},N),{authToken:{requestStatus:0}}):N;var d}))}function eN(N){return void 0!==N&&2===N.registrationStatus}async function jN(N){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const d=N;await async function(N){const{registrationPromise:Z}=await dN(N);Z&&await Z}(d);return(await wN(d,Z)).token}function BN(N){return W.create("missing-app-config-values",{valueName:N})}const DN="installations",vN=N=>{const Z=N.getProvider("app").getImmediate(),d=function(N){if(!N||!N.options)throw BN("App Configuration");if(!N.name)throw BN("App Name");const Z=["projectId","apiKey","appId"];for(const d of Z)if(!N.options[d])throw BN(d);return{appName:N.name,projectId:N.options.projectId,apiKey:N.options.apiKey,appId:N.options.appId}}(Z);return{app:Z,appConfig:d,heartbeatServiceProvider:(0,X.r)(Z,"heartbeat"),_delete:()=>Promise.resolve()}},TN=N=>{const Z=N.getProvider("app").getImmediate(),d=(0,X.r)(Z,DN).getImmediate();return{getId:()=>async function(N){const Z=N,{installationEntry:d,registrationPromise:X}=await dN(Z);return X?X.catch(console.error):wN(Z).catch(console.error),d.fid}(d),getToken:N=>jN(d,N)}};(0,X.s)(new z.e(DN,vN,"PUBLIC")),(0,X.s)(new z.e("installations-internal",TN,"PRIVATE")),(0,X.M)(g,E),(0,X.M)(g,E,"esm2017");const kN="analytics",hN="https://www.googletagmanager.com/gtag/js",UN=new I.i("@firebase/analytics"),CN={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},MN=new m.c("analytics","Analytics",CN);function QN(N){if(!N.startsWith(hN)){const Z=MN.create("invalid-gtag-resource",{gtagURL:N});return UN.warn(Z.message),""}return N}function AN(N){return Promise.all(N.map((N=>N.catch((N=>N)))))}function nN(N,Z){const d=function(N,Z){let d;return window.trustedTypes&&(d=window.trustedTypes.createPolicy(N,Z)),d}("firebase-js-sdk-policy",{createScriptURL:QN}),X=document.createElement("script"),I=`${hN}?l=${N}&id=${Z}`;X.src=d?null===d||void 0===d?void 0:d.createScriptURL(I):I,X.async=!0,document.head.appendChild(X)}function gN(N,Z,d,X){return async function(I){try{for(var m=arguments.length,z=new Array(m>1?m-1:0),w=1;w<m;w++)z[w-1]=arguments[w];if("event"===I){const[X,I]=z;await async function(N,Z,d,X,I){try{let m=[];if(I&&I.send_to){let N=I.send_to;Array.isArray(N)||(N=[N]);const X=await AN(d);for(const d of N){const N=X.find((N=>N.measurementId===d)),I=N&&Z[N.appId];if(!I){m=[];break}m.push(I)}}0===m.length&&(m=Object.values(Z)),await Promise.all(m),N("event",X,I||{})}catch(m){UN.error(m)}}(N,Z,d,X,I)}else if("config"===I){const[I,m]=z;await async function(N,Z,d,X,I,m){const z=X[I];try{if(z)await Z[z];else{const N=(await AN(d)).find((N=>N.measurementId===I));N&&await Z[N.appId]}}catch(w){UN.error(w)}N("config",I,m)}(N,Z,d,X,I,m)}else if("consent"===I){const[Z]=z;N("consent","update",Z)}else if("get"===I){const[Z,d,X]=z;N("get",Z,d,X)}else if("set"===I){const[Z]=z;N("set",Z)}else N(I,...z)}catch(S){UN.error(S)}}}const EN=new class{constructor(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=N,this.intervalMillis=Z}getThrottleMetadata(N){return this.throttleMetadata[N]}setThrottleMetadata(N,Z){this.throttleMetadata[N]=Z}deleteThrottleMetadata(N){delete this.throttleMetadata[N]}};function VN(N){return new Headers({Accept:"application/json","x-goog-api-key":N})}async function ON(N){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:EN,d=arguments.length>2?arguments[2]:void 0;const{appId:X,apiKey:I,measurementId:m}=N.options;if(!X)throw MN.create("no-app-id");if(!I){if(m)return{measurementId:m,appId:X};throw MN.create("no-api-key")}const z=Z.getThrottleMetadata(X)||{backoffCount:0,throttleEndTimeMillis:Date.now()},w=new rN;return setTimeout((async()=>{w.abort()}),void 0!==d?d:6e4),KN({appId:X,apiKey:I,measurementId:m},z,w,Z)}async function KN(N,Z,d){let{throttleEndTimeMillis:X,backoffCount:I}=Z,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:EN;var w;const{appId:S,measurementId:e}=N;try{await function(N,Z){return new Promise(((d,X)=>{const I=Math.max(Z-Date.now(),0),m=setTimeout(d,I);N.addEventListener((()=>{clearTimeout(m),X(MN.create("fetch-throttle",{throttleEndTimeMillis:Z}))}))}))}(d,X)}catch(j){if(e)return UN.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${e} provided in the "measurementId" field in the local Firebase config. [${null===j||void 0===j?void 0:j.message}]`),{appId:S,measurementId:e};throw j}try{const Z=await async function(N){var Z;const{appId:d,apiKey:X}=N,I={method:"GET",headers:VN(X)},m="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",d),z=await fetch(m,I);if(200!==z.status&&304!==z.status){let N="";try{const d=await z.json();(null===(Z=d.error)||void 0===Z?void 0:Z.message)&&(N=d.error.message)}catch(w){}throw MN.create("config-fetch-failed",{httpStatus:z.status,responseMessage:N})}return z.json()}(N);return z.deleteThrottleMetadata(S),Z}catch(j){const Z=j;if(!function(N){if(!(N instanceof m.f)||!N.customData)return!1;const Z=Number(N.customData.httpStatus);return 429===Z||500===Z||503===Z||504===Z}(Z)){if(z.deleteThrottleMetadata(S),e)return UN.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${e} provided in the "measurementId" field in the local Firebase config. [${null===Z||void 0===Z?void 0:Z.message}]`),{appId:S,measurementId:e};throw j}const X=503===Number(null===(w=null===Z||void 0===Z?void 0:Z.customData)||void 0===w?void 0:w.httpStatus)?(0,m.o)(I,z.intervalMillis,30):(0,m.o)(I,z.intervalMillis),B={throttleEndTimeMillis:Date.now()+X,backoffCount:I+1};return z.setThrottleMetadata(S,B),UN.debug(`Calling attemptFetch again in ${X} millis`),KN(N,B,d,z)}}class rN{constructor(){this.listeners=[]}addEventListener(N){this.listeners.push(N)}abort(){this.listeners.forEach((N=>N()))}}let PN,WN;function bN(N){WN=N}function JN(N){PN=N}async function FN(N,Z,d,X,I,z,w){var S;const e=ON(N);e.then((Z=>{d[Z.measurementId]=Z.appId,N.options.measurementId&&Z.measurementId!==N.options.measurementId&&UN.warn(`The measurement ID in the local Firebase config (${N.options.measurementId}) does not match the measurement ID fetched from the server (${Z.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((N=>UN.error(N))),Z.push(e);const j=async function(){if(!(0,m.X)())return UN.warn(MN.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,m.ib)()}catch(N){return UN.warn(MN.create("indexeddb-unavailable",{errorInfo:null===N||void 0===N?void 0:N.toString()}).message),!1}return!0}().then((N=>N?X.getId():void 0)),[B,D]=await Promise.all([e,j]);(function(N){const Z=window.document.getElementsByTagName("script");for(const d of Object.values(Z))if(d.src&&d.src.includes(hN)&&d.src.includes(N))return d;return null})(z)||nN(z,B.measurementId),WN&&(I("consent","default",WN),bN(void 0)),I("ma",new Date);const v=null!==(S=null===w||void 0===w?void 0:w.config)&&void 0!==S?S:{};return v.origin="firebase",v.update=!0,null!=D&&(v.firebase_id=D),I("config",B.measurementId,v),PN&&(I("set",PN),JN(void 0)),B.measurementId}class GN{constructor(N){this.app=N}_delete(){return delete xN[this.app.options.appId],Promise.resolve()}}let xN={},tN=[];const qN={};let YN,sN,LN="dataLayer",HN="gtag",iN=!1;function pN(N){if(iN)throw MN.create("already-initialized");N.dataLayerName&&(LN=N.dataLayerName),N.gtagName&&(HN=N.gtagName)}function yN(N,Z,d){!function(){const N=[];if((0,m.N)()&&N.push("This is a browser extension environment."),(0,m.i)()||N.push("Cookies are not available."),N.length>0){const Z=N.map(((N,Z)=>`(${Z+1}) ${N}`)).join(" "),d=MN.create("invalid-analytics-context",{errorInfo:Z});UN.warn(d.message)}}();const X=N.options.appId;if(!X)throw MN.create("no-app-id");if(!N.options.apiKey){if(!N.options.measurementId)throw MN.create("no-api-key");UN.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${N.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=xN[X])throw MN.create("already-exists",{id:X});if(!iN){!function(N){let Z=[];Array.isArray(window[N])?Z=window[N]:window[N]=Z}(LN);const{wrappedGtag:N,gtagCore:Z}=function(N,Z,d,X,I){let m=function(){for(var N=arguments.length,Z=new Array(N),d=0;d<N;d++)Z[d]=arguments[d];window[X].push(arguments)};return window[I]&&"function"===typeof window[I]&&(m=window[I]),window[I]=gN(m,N,Z,d),{gtagCore:m,wrappedGtag:window[I]}}(xN,tN,qN,LN,HN);sN=N,YN=Z,iN=!0}xN[X]=FN(N,tN,qN,Z,YN,LN,d);return new GN(N)}function lN(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,X.C)();N=(0,m.I)(N);const Z=(0,X.r)(N,kN);return Z.isInitialized()?Z.getImmediate():uN(N)}function uN(N){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const d=(0,X.r)(N,kN);if(d.isInitialized()){const N=d.getImmediate();if((0,m.t)(Z,d.getOptions()))return N;throw MN.create("already-initialized")}return d.initialize({options:Z})}async function aN(){if((0,m.N)())return!1;if(!(0,m.i)())return!1;if(!(0,m.X)())return!1;try{return await(0,m.ib)()}catch(N){return!1}}function cN(N,Z,d){N=(0,m.I)(N),async function(N,Z,d,X){if(X&&X.global)return N("set",{screen_name:d}),Promise.resolve();N("config",await Z,{update:!0,screen_name:d})}(sN,xN[N.app.options.appId],Z,d).catch((N=>UN.error(N)))}async function RN(N){return N=(0,m.I)(N),async function(N,Z){const d=await Z;return new Promise(((Z,X)=>{N("get",d,"client_id",(N=>{N||X(MN.create("no-client-id")),Z(N)}))}))}(sN,xN[N.app.options.appId])}function fN(N,Z,d){N=(0,m.I)(N),async function(N,Z,d,X){if(X&&X.global)return N("set",{user_id:d}),Promise.resolve();N("config",await Z,{update:!0,user_id:d})}(sN,xN[N.app.options.appId],Z,d).catch((N=>UN.error(N)))}function oN(N,Z,d){N=(0,m.I)(N),async function(N,Z,d,X){if(X&&X.global){const Z={};for(const N of Object.keys(d))Z[`user_properties.${N}`]=d[N];return N("set",Z),Promise.resolve()}N("config",await Z,{update:!0,user_properties:d})}(sN,xN[N.app.options.appId],Z,d).catch((N=>UN.error(N)))}function NZ(N,Z){N=(0,m.I)(N),async function(N,Z){const d=await N;window[`ga-disable-${d}`]=!Z}(xN[N.app.options.appId],Z).catch((N=>UN.error(N)))}function ZZ(N){sN?sN("set",N):JN(N)}function dZ(N,Z,d,X){N=(0,m.I)(N),async function(N,Z,d,X,I){if(I&&I.global)N("event",d,X);else{const I=await Z;N("event",d,Object.assign(Object.assign({},X),{send_to:I}))}}(sN,xN[N.app.options.appId],Z,d,X).catch((N=>UN.error(N)))}function XZ(N){sN?sN("consent","update",N):bN(N)}const IZ="@firebase/analytics",mZ="0.10.0";(0,X.s)(new z.e(kN,((N,Z)=>{let{options:d}=Z;return yN(N.getProvider("app").getImmediate(),N.getProvider("installations-internal").getImmediate(),d)}),"PUBLIC")),(0,X.s)(new z.e("analytics-internal",(function(N){try{const Z=N.getProvider(kN).getImmediate();return{logEvent:(N,d,X)=>dZ(Z,N,d,X)}}catch(Z){throw MN.create("interop-component-reg-failed",{reason:Z})}}),"PRIVATE")),(0,X.M)(IZ,mZ),(0,X.M)(IZ,mZ,"esm2017")}}]);