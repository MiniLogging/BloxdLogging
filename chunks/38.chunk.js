"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13165:(z,a,K)=>{K.r(a),K.d(a,{AnimationGroup:()=>w,TargetedAnimation:()=>C});var v=K(11900),T=K(10638),m=K(10680),p=K(10937),j=K(11894),s=K(10941);class M{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(z,a,K,T){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=a,this._target=z,this._scene=K,this._host=T,this._activeTargets=[],a._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===v.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=s.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const z={frame:0,value:this._minValue};this._keys.splice(0,0,z)}if(this._target instanceof Array){let z=0;for(const a of this._target)this._preparePath(a,z),this._getOriginalValues(z),z++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const m=a.getEvents();m&&m.length>0&&m.forEach((z=>{this._events.push(z._clone())})),this._enableBlending=z&&z.animationPropertiesOverride?z.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(z){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const K=this._animation.targetPropertyPath;if(K.length>1){let v=z;for(let z=0;z<K.length-1;z++){const a=K[z];if(v=v[a],void 0===v)throw new Error(`Invalid property (${a}) in property path (${K.join(".")})`)}this._targetPath=K[K.length-1],this._activeTargets[a]=v}else this._targetPath=K[0],this._activeTargets[a]=z;if(void 0===this._activeTargets[a][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${K.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let z=0;for(const a of this._target)void 0!==this._originalValue[z]&&this._setValue(a,this._activeTargets[z],this._originalValue[z],-1,z),z++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let z=0;z<this._events.length;z++)this._events[z].isDone=!1}isStopped(){return this._stopped}dispose(){const z=this._animation.runtimeAnimations.indexOf(this);z>-1&&this._animation.runtimeAnimations.splice(z,1)}setValue(z,a){if(this._targetIsArray)for(let K=0;K<this._target.length;K++){const v=this._target[K];this._setValue(v,this._activeTargets[K],z,a,K)}else this._setValue(this._target,this._directTarget,z,a,0)}_getOriginalValues(){let z,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const K=this._activeTargets[a];z=K.getLocalMatrix&&"_matrix"===this._targetPath?K.getLocalMatrix():K[this._targetPath],z&&z.clone?this._originalValue[a]=z.clone():this._originalValue[a]=z}_registerTargetForLateAnimationBinding(z,a){const K=z.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(K),K._lateAnimationHolders||(K._lateAnimationHolders={}),K._lateAnimationHolders[z.targetPath]||(K._lateAnimationHolders[z.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:a}),z.isAdditive?(K._lateAnimationHolders[z.targetPath].additiveAnimations.push(z),K._lateAnimationHolders[z.targetPath].totalAdditiveWeight+=z.weight):(K._lateAnimationHolders[z.targetPath].animations.push(z),K._lateAnimationHolders[z.targetPath].totalWeight+=z.weight)}_setValue(z,a,K,T,m){if(this._currentActiveTarget=a,this._weight=T,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const z=a[this._targetPath];z.clone?this._originalBlendValue=z.clone():this._originalBlendValue=z}this._originalBlendValue.m?v.e.AllowMatrixDecomposeForInterpolation?this._currentValue?s.b.DecomposeLerpToRef(this._originalBlendValue,K,this._blendingFactor,this._currentValue):this._currentValue=s.b.DecomposeLerp(this._originalBlendValue,K,this._blendingFactor):this._currentValue?s.b.LerpToRef(this._originalBlendValue,K,this._blendingFactor,this._currentValue):this._currentValue=s.b.Lerp(this._originalBlendValue,K,this._blendingFactor):this._currentValue=v.e._UniversalLerp(this._originalBlendValue,K,this._blendingFactor);const T=z&&z.animationPropertiesOverride?z.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=T}else this._currentValue?this._currentValue.p?this._currentValue.p(K):this._currentValue=K:null!==K&&void 0!==K&&K.clone?this._currentValue=K.clone():this._currentValue=K;-1!==T?this._registerTargetForLateAnimationBinding(this,this._originalValue[m]):this._animationState.loopMode===v.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[m],a[this._targetPath]):a[this._targetPath]=this._originalValue[m]+this._currentValue:a[this._targetPath]=this._currentValue,z.zg&&z.zg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(z){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const K=this._animation.getKeys();z<K[0].frame?z=K[0].frame:z>K[K.length-1].frame&&(z=K[K.length-1].frame);const v=this._events;if(v.length)for(let m=0;m<v.length;m++)v[m].onlyOnce||(v[m].isDone=v[m].frame<z);this._currentFrame=z;const T=this._animation._interpolate(z,this._animationState);this.setValue(T,a)}_prepareForSpeedRatioChange(z){const a=this._previousElapsedTime*(this._animation.framePerSecond*z)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-a}animate(z,a,K,T,m){let p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const j=this._animation,s=j.targetPropertyPath;if(!s||s.length<1)return this._stopped=!0,!1;let M=!0;(a<this._minFrame||a>this._maxFrame)&&(a=this._minFrame),(K<this._minFrame||K>this._maxFrame)&&(K=this._maxFrame);const r=K-a;let W,F=z*(j.framePerSecond*m)/1e3+this._absoluteFrameOffset,G=0,l=!1;const V=T&&this._animationState.loopMode===v.e.ANIMATIONLOOPMODE_YOYO;if(V){const z=(F-a)/r,K=Math.sin(z*Math.PI);F=Math.abs(K)*r+a;const v=K>=0?1:-1;this._yoyoDirection!==v&&(l=!0),this._yoyoDirection=v}if(this._previousElapsedTime=z,this._previousAbsoluteFrame=F,!T&&K>=a&&(F>=r&&m>0||F<=0&&m<0))M=!1,G=j._getKeyValue(this._maxValue);else if(!T&&a>=K&&(F<=r&&m<0||F>=0&&m>0))M=!1,G=j._getKeyValue(this._minValue);else if(this._animationState.loopMode!==v.e.ANIMATIONLOOPMODE_CYCLE){const z=K.toString()+a.toString();if(!this._offsetsCache[z]){this._animationState.repeatCount=0,this._animationState.loopMode=v.e.ANIMATIONLOOPMODE_CYCLE;const T=j._interpolate(a,this._animationState),m=j._interpolate(K,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),j.dataType){case v.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[z]=m-T;break;case v.e.ANIMATIONTYPE_QUATERNION:case v.e.ANIMATIONTYPE_VECTOR3:case v.e.ANIMATIONTYPE_VECTOR2:case v.e.ANIMATIONTYPE_SIZE:case v.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[z]=m.sc(T)}this._highLimitsCache[z]=m}G=this._highLimitsCache[z],W=this._offsetsCache[z]}if(void 0===W)switch(j.dataType){case v.e.ANIMATIONTYPE_FLOAT:W=0;break;case v.e.ANIMATIONTYPE_QUATERNION:W=v.l;break;case v.e.ANIMATIONTYPE_VECTOR3:W=v.r;break;case v.e.ANIMATIONTYPE_VECTOR2:W=v.n;break;case v.e.ANIMATIONTYPE_SIZE:W=v.m;break;case v.e.ANIMATIONTYPE_COLOR3:W=v.g;break;case v.e.ANIMATIONTYPE_COLOR4:W=v.h}let c;if(this._host&&this._host.syncRoot){const z=this._host.syncRoot;c=a+r*((z.masterFrame-z.fromFrame)/(z.toFrame-z.fromFrame))}else c=F>0&&a>K||F<0&&a<K?M&&0!==r?K+F%r:a:M&&0!==r?a+F%r:K;const C=this._events;if(!V&&(m>0&&this.currentFrame>c||m<0&&this.currentFrame<c)||V&&l){this._onLoop();for(let z=0;z<C.length;z++)C[z].onlyOnce||(C[z].isDone=!1);this._animationState.key=m>0?0:j.getKeys().length-1}this._currentFrame=c,this._animationState.repeatCount=0===r?0:F/r|0,this._animationState.highLimitValue=G,this._animationState.offsetValue=W;const w=j._interpolate(c,this._animationState);if(this.setValue(w,p),C.length)for(let v=0;v<C.length;v++)if(r>=0&&c>=C[v].frame&&C[v].frame>=a||r<0&&c<=C[v].frame&&C[v].frame<=a){const z=C[v];z.isDone||(z.onlyOnce&&(C.splice(v,1),v--),z.isDone=!0,z.action(c))}return M||(this._stopped=!0),M}}var r=K(10658);class W{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(z){this._weight=-1!==z?Math.min(Math.max(z,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(z){for(let a=0;a<this._runtimeAnimations.length;a++){this._runtimeAnimations[a]._prepareForSpeedRatioChange(z)}this._speedRatio=z,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(z,a){let K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,m=arguments.length>4&&void 0!==arguments[4]&&arguments[4],p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,j=arguments.length>6?arguments[6]:void 0,s=arguments.length>7?arguments[7]:void 0,M=arguments.length>8?arguments[8]:void 0,r=arguments.length>9&&void 0!==arguments[9]&&arguments[9],W=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=a,this.fromFrame=K,this.toFrame=v,this.loopAnimation=m,this.onAnimationEnd=j,this.onAnimationLoop=M,this.isAdditive=r,this.playOrder=W,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.xd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new T.c,this.onAnimationLoopObservable=new T.c,this._scene=z,s&&this.appendAnimations(a,s),this._speedRatio=p,z._activeAnimatables.push(this)}syncWith(z){if(this._syncRoot=z,z){const z=this._scene._activeAnimatables.indexOf(this);z>-1&&(this._scene._activeAnimatables.splice(z,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(z,a){for(let K=0;K<a.length;K++){const v=a[K],T=new M(z,v,this._scene,this);T._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(T)}}getAnimationByTargetProperty(z){const a=this._runtimeAnimations;for(let K=0;K<a.length;K++)if(a[K].animation.targetProperty===z)return a[K].animation;return null}getRuntimeAnimationByTargetProperty(z){const a=this._runtimeAnimations;for(let K=0;K<a.length;K++)if(a[K].animation.targetProperty===z)return a[K];return null}reset(){const z=this._runtimeAnimations;for(let a=0;a<z.length;a++)z[a].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(z){const a=this._runtimeAnimations;for(let K=0;K<a.length;K++)a[K].animation.enableBlending=!0,a[K].animation.blendingSpeed=z}disableBlending(){const z=this._runtimeAnimations;for(let a=0;a<z.length;a++)z[a].animation.enableBlending=!1}goToFrame(z){const a=this._runtimeAnimations;if(a[0]){const K=a[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??a[0].currentFrame;const v=0===this.speedRatio?0:(z-this._frameToSyncFromJump)/K*1e3/this.speedRatio;this._manualJumpDelay=-v}for(let K=0;K<a.length;K++)a[K].goToFrame(z,this._weight);this._goToFrame=z}get paused(){return this.xd}pause(){this.xd||(this.xd=!0)}restart(){this.xd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(z,a){let K=arguments.length>2&&void 0!==arguments[2]&&arguments[2],v=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(z||a){const T=this._scene._activeAnimatables.indexOf(this);if(T>-1){const m=this._runtimeAnimations;for(let K=m.length-1;K>=0;K--){const v=m[K];z&&v.animation.name!=z||(a&&!a(v.target)||(v.dispose(),m.splice(K,1)))}0==m.length&&(K||this._scene._activeAnimatables.splice(T,1),v||this._raiseOnAnimationEnd())}}else{const z=this._scene._activeAnimatables.indexOf(this);if(z>-1){K||this._scene._activeAnimatables.splice(z,1);const a=this._runtimeAnimations;for(let z=0;z<a.length;z++)a[z].dispose();this._runtimeAnimations.length=0,v||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((z=>{this.onAnimationEndObservable.add((()=>{z(this)}),void 0,void 0,this,!0)}))}_animate(z){if(this.xd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=z),!0;if(null===this._localDelayOffset?(this._localDelayOffset=z,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=z-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let a=!1;const K=this._runtimeAnimations;let v;for(v=0;v<K.length;v++){const T=K[v].animate(z-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);a=a||T}if(this.animationStarted=a,!a){if(this.disposeOnEnd)for(v=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(v,1),v=0;v<K.length;v++)K[v].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return a}}function F(z){if(0===z.totalWeight&&0===z.totalAdditiveWeight)return z.originalValue;let a=1;const K=s.j.gb[0],v=s.j.gb[1],T=s.j.Quaternion[0];let m=0;const p=z.animations[0],j=z.originalValue;let M=1,r=!1;if(z.totalWeight<1)M=1-z.totalWeight,j.decompose(v,T,K);else{if(m=1,a=z.totalWeight,M=p.weight/a,1==M){if(!z.totalAdditiveWeight)return p.currentValue;r=!0}p.currentValue.decompose(v,T,K)}if(!r){v.scaleInPlace(M),K.scaleInPlace(M),T.scaleInPlace(M);for(let p=m;p<z.animations.length;p++){const m=z.animations[p];if(0===m.weight)continue;M=m.weight/a;const j=s.j.gb[2],r=s.j.gb[3],W=s.j.Quaternion[1];m.currentValue.decompose(r,W,j),r.scaleAndAddToRef(M,v),W.scaleAndAddToRef(s.f.Dot(T,W)>0?M:-M,T),j.scaleAndAddToRef(M,K)}T.normalize()}for(let F=0;F<z.additiveAnimations.length;F++){const a=z.additiveAnimations[F];if(0===a.weight)continue;const m=s.j.gb[2],p=s.j.gb[3],j=s.j.Quaternion[1];a.currentValue.decompose(p,j,m),p.multiplyToRef(v,p),s.o.LerpToRef(v,p,a.weight,v),T.multiplyToRef(j,j),s.f.SlerpToRef(T,j,a.weight,T),m.scaleAndAddToRef(a.weight,K)}const W=p?p._animationState.workValue:s.j.Matrix[0].clone();return s.b.ComposeToRef(v,T,K,W),W}function G(z,a){if(0===z.totalWeight&&0===z.totalAdditiveWeight)return a;const K=z.animations[0],v=z.originalValue;let T=a;if(0===z.totalWeight&&z.totalAdditiveWeight>0)T.p(v);else if(1===z.animations.length){if(s.f.SlerpToRef(v,K.currentValue,Math.min(1,z.totalWeight),T),0===z.totalAdditiveWeight)return T}else if(z.animations.length>1){let K,m,p=1;if(z.totalWeight<1){const a=1-z.totalWeight;K=[],m=[],K.push(v),m.push(a)}else{if(2===z.animations.length&&(s.f.SlerpToRef(z.animations[0].currentValue,z.animations[1].currentValue,z.animations[1].weight/z.totalWeight,a),0===z.totalAdditiveWeight))return a;K=[],m=[],p=z.totalWeight}for(let a=0;a<z.animations.length;a++){const v=z.animations[a];K.push(v.currentValue),m.push(v.weight/p)}let j=0;for(let z=0;z<K.length;)z?(j+=m[z],s.f.SlerpToRef(T,K[z],m[z]/j,T),z++):(s.f.SlerpToRef(K[z],K[z+1],m[z+1]/(m[z]+m[z+1]),a),T=a,j=m[z]+m[z+1],z+=2)}for(let m=0;m<z.additiveAnimations.length;m++){const a=z.additiveAnimations[m];0!==a.weight&&(T.multiplyToRef(a.currentValue,s.j.Quaternion[0]),s.f.SlerpToRef(T,s.j.Quaternion[0],a.weight,T))}return T}var l,V,c=K(10935);l=c.c,(V=j.b)&&(V.prototype.copyAnimationRange=function(z,a,K){let T=arguments.length>3&&void 0!==arguments[3]&&arguments[3],m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new v.e(this.name,"_matrix",z.animations[0].framePerSecond,v.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const p=z.animations[0].getRange(a);if(!p)return!1;const j=p.from,s=p.to,M=z.animations[0].getKeys(),r=z.length,W=z.getParent(),F=this.getParent(),G=T&&W&&r&&this.length&&r!==this.length,l=G&&F&&W?F.length/W.length:1,V=T&&!F&&m&&(1!==m.x||1!==m.y||1!==m.z),c=this.animations[0].getKeys();let C,w,H;for(let v=0,f=M.length;v<f;v++)C=M[v],C.frame>=j&&C.frame<=s&&(T?(H=C.value.clone(),G?(w=H.getTranslation(),H.setTranslation(w.scaleInPlace(l))):V&&m?(w=H.getTranslation(),H.setTranslation(w.multiplyInPlace(m))):H=C.value):H=C.value,c.push({frame:C.frame+K,value:H}));return this.animations[0].createRange(a,j+K,s+K),!0}),l&&(l.prototype._animate=function(z){if(!this.animationsEnabled)return;const a=r.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=a}this.deltaTime=void 0!==z?z:this.useConstantAnimationDeltaTime?16:(a-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=a;const K=this._activeAnimatables;if(0===K.length)return;this._animationTime+=this.deltaTime;const T=this._animationTime;for(let v=0;v<K.length;v++){const z=K[v];!z._animate(T)&&z.disposeOnEnd&&v--}!function(z){if(z._registeredForLateAnimationBindings.length){for(let a=0;a<z._registeredForLateAnimationBindings.length;a++){const K=z._registeredForLateAnimationBindings.data[a];for(const z in K._lateAnimationHolders){const a=K._lateAnimationHolders[z],T=a.animations[0],m=a.originalValue;if(void 0===m||null===m)continue;const p=v.e.AllowMatrixDecomposeForInterpolation&&m.m;let j=K[z];if(p)j=F(a);else if(void 0!==m.w)j=G(a,j||s.f.Identity());else{let z=0,K=1;const p=T&&T._animationState.loopMode===v.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(a.totalWeight<1)j=p?m.clone?m.clone():m:T&&m.scale?m.scale(1-a.totalWeight):T?m*(1-a.totalWeight):m.clone?m.clone():m;else if(T){K=a.totalWeight;const v=T.weight/K;j=1!==v?T.currentValue.scale?T.currentValue.scale(v):T.currentValue*v:T.currentValue,p&&(j.addToRef?j.addToRef(m,j):j+=m),z=1}for(let v=z;v<a.animations.length;v++){const z=a.animations[v],T=z.weight/K;T&&(z.currentValue.scaleAndAddToRef?z.currentValue.scaleAndAddToRef(T,j):j+=z.currentValue*T)}for(let v=0;v<a.additiveAnimations.length;v++){const z=a.additiveAnimations[v],K=z.weight;K&&(z.currentValue.scaleAndAddToRef?z.currentValue.scaleAndAddToRef(K,j):j+=z.currentValue*K)}}K[z]=j}K._lateAnimationHolders={}}z._registeredForLateAnimationBindings.reset()}}(this)},l.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((z,a)=>z.playOrder-a.playOrder))},l.prototype.beginWeightedAnimation=function(z,a,K){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,T=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7?arguments[7]:void 0,s=arguments.length>8?arguments[8]:void 0,M=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const W=this.beginAnimation(z,a,K,T,m,p,j,!1,s,M,r);return W.weight=v,W},l.prototype.beginAnimation=function(z,a,K,v){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,m=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0,j=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],s=arguments.length>8?arguments[8]:void 0,M=arguments.length>9?arguments[9]:void 0,r=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(T<0){const z=a;a=K,K=z,T=-T}a>K&&(T=-T),j&&this.stopAnimation(z,void 0,s),p||(p=new W(this,z,a,K,v,T,m,void 0,M,r));const F=!s||s(z);if(z.animations&&F&&p.appendAnimations(z,z.animations),z.getAnimatables){const r=z.getAnimatables();for(let z=0;z<r.length;z++)this.beginAnimation(r[z],a,K,v,T,m,p,j,s,M)}return p.reset(),p},l.prototype.beginHierarchyAnimation=function(z,a,K,v,T){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,p=arguments.length>6?arguments[6]:void 0,j=arguments.length>7?arguments[7]:void 0,s=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],M=arguments.length>9?arguments[9]:void 0,r=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const W=z.getDescendants(a),F=[];F.push(this.beginAnimation(z,K,v,T,m,p,j,s,M,void 0,r));for(const G of W)F.push(this.beginAnimation(G,K,v,T,m,p,j,s,M,void 0,r));return F},l.prototype.beginDirectAnimation=function(z,a,K,v,T){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(m<0){const z=K;K=v,v=z,m=-m}return K>v&&(m=-m),new W(this,z,K,v,T,m,arguments.length>6?arguments[6]:void 0,a,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},l.prototype.beginDirectHierarchyAnimation=function(z,a,K,v,T,m,p,j,s){let M=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const r=z.getDescendants(a),W=[];W.push(this.beginDirectAnimation(z,K,v,T,m,p,j,s,M));for(const F of r)W.push(this.beginDirectAnimation(F,K,v,T,m,p,j,s,M));return W},l.prototype.getAnimatableByTarget=function(z){for(let a=0;a<this._activeAnimatables.length;a++)if(this._activeAnimatables[a].target===z)return this._activeAnimatables[a];return null},l.prototype.getAllAnimatablesByTarget=function(z){const a=[];for(let K=0;K<this._activeAnimatables.length;K++)this._activeAnimatables[K].target===z&&a.push(this._activeAnimatables[K]);return a},l.prototype.stopAnimation=function(z,a,K){const v=this.getAllAnimatablesByTarget(z);for(const T of v)T.stop(a,K)},l.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let z=0;z<this._activeAnimatables.length;z++)this._activeAnimatables[z].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const z of this.animationGroups)z.stop()});class C{getClassName(){return"TargetedAnimation"}serialize(){const z={};return z.animation=this.animation.serialize(),z.targetId=this.target.id,z}}class w{get mask(){return this._mask}set mask(z){this._mask!==z&&(this._mask=z,this.syncWithMask(!0))}syncWithMask(){let z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||z){this._numActiveAnimatables=0;for(let z=0;z<this._animatables.length;++z){const a=this._animatables[z];!this.mask||this.mask.disabled||this.mask.retainsTarget(a.target.name)?(this._numActiveAnimatables++,a.paused&&a.restart()):a.paused||a.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let z=0;z<this._animatables.length;++z){const a=this._animatables[z];this.mask.retainsTarget(a.target.name)||(a.stop(),this._animatables.splice(z,1),--z)}for(let z=0;z<this._targetedAnimations.length;z++){const a=this._targetedAnimations[z];this.mask.retainsTarget(a.target.name)||(this._targetedAnimations.splice(z,1),--z)}}}get from(){return this._from}set from(z){if(this._from!==z){this._from=z;for(let z=0;z<this._animatables.length;z++){this._animatables[z].fromFrame=this._from}}}get to(){return this._to}set to(z){if(this._to!==z){this._to=z;for(let z=0;z<this._animatables.length;z++){this._animatables[z].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(z){if(this._speedRatio!==z){this._speedRatio=z;for(let z=0;z<this._animatables.length;z++){this._animatables[z].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(z){if(this._loopAnimation!==z){this._loopAnimation=z;for(let z=0;z<this._animatables.length;z++){this._animatables[z].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(z){if(this._isAdditive!==z){this._isAdditive=z;for(let z=0;z<this._animatables.length;z++){this._animatables[z].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(z){this._weight!==z&&(this._weight=z,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(z){if(this._playOrder!==z&&(this._playOrder=z,this._animatables.length>0)){for(let z=0;z<this._animatables.length;z++)this._animatables[z].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(z){if(this._enableBlending!==z&&(this._enableBlending=z,null!==z))for(let a=0;a<this._targetedAnimations.length;++a)this._targetedAnimations[a].animation.enableBlending=z}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(z){if(this._blendingSpeed!==z&&(this._blendingSpeed=z,null!==z))for(let a=0;a<this._targetedAnimations.length;++a)this._targetedAnimations[a].animation.blendingSpeed=z}getLength(z,a){z=z??this._from;return((a=a??this._to)-z)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(z){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],K=arguments.length>2&&void 0!==arguments[2]&&arguments[2],v=arguments.length>3?arguments[3]:void 0;if(0===z.length)return null;v=v??z[0].weight;let T=Number.MAX_VALUE,m=-Number.MAX_VALUE;if(K)for(const j of z)j.from<T&&(T=j.from),j.to>m&&(m=j.to);const p=new w(z[0].name+"_merged",z[0]._scene,v);for(const j of z){K&&j.normalize(T,m);for(const z of j.targetedAnimations)p.addTargetedAnimation(z.animation,z.target);a&&j.dispose()}return p}constructor(z){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=z,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new T.c,this.onAnimationLoopObservable=new T.c,this.onAnimationGroupLoopObservable=new T.c,this.onAnimationGroupEndObservable=new T.c,this.onAnimationGroupPauseObservable=new T.c,this.onAnimationGroupPlayObservable=new T.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=a||m.b.LastCreatedScene,this._weight=K,this._playOrder=v,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(z,a){const K=new C;K.animation=z,K.target=a;const v=z.getKeys();return this._from>v[0].frame&&(this._from=v[0].frame),this._to<v[v.length-1].frame&&(this._to=v[v.length-1].frame),null!==this._enableBlending&&(z.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(z.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(K),this._shouldStart=!0,K}removeTargetedAnimation(z){for(let a=this._targetedAnimations.length-1;a>-1;a--){this._targetedAnimations[a].animation===z&&this._targetedAnimations.splice(a,1)}}normalize(){let z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==z&&(z=this._from),null==a&&(a=this._to);for(let K=0;K<this._targetedAnimations.length;K++){const v=this._targetedAnimations[K].animation.getKeys(),T=v[0],m=v[v.length-1];if(T.frame>z){const a={frame:z,value:T.value,inTangent:T.inTangent,outTangent:T.outTangent,interpolation:T.interpolation};v.splice(0,0,a)}if(m.frame<a){const z={frame:a,value:m.value,inTangent:m.inTangent,outTangent:m.outTangent,interpolation:m.interpolation};v.push(z)}}return this._from=z,this._to=a,this}_processLoop(z,a,K){z.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(a),this._animationLoopFlags[K]||(this._animationLoopFlags[K]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let z=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,K=arguments.length>2?arguments[2]:void 0,v=arguments.length>3?arguments[3]:void 0,T=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=z,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let m=0;m<this._targetedAnimations.length;m++){const p=this._targetedAnimations[m],j=this._scene.beginDirectAnimation(p.target,[p.animation],void 0!==K?K:this._from,void 0!==v?v:this._to,z,a,void 0,void 0,void 0!==T?T:this._isAdditive);j.weight=this._weight,j.playOrder=this._playOrder,j.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(p),this._checkAnimationGroupEnded(j)},this._processLoop(j,p,m),this._animatables.push(j)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=a,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let z=0;z<this._animatables.length;z++){this._animatables[z].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(z){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==z&&(this.loopAnimation=z),this.restart()):(this.stop(),this.start(z,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let z=0;z<this._animatables.length;z++){this._animatables[z].reset()}return this}restart(){if(!this._isStarted)return this;for(let z=0;z<this._animatables.length;z++){this._animatables[z].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const a=this._animatables.slice();for(let v=0;v<a.length;v++)a[v].stop(void 0,void 0,!0,z);let K=0;for(let v=0;v<this._scene._activeAnimatables.length;v++){const a=this._scene._activeAnimatables[v];a._runtimeAnimations.length>0?this._scene._activeAnimatables[K++]=a:z&&this._checkAnimationGroupEnded(a,z)}return this._scene._activeAnimatables.length=K,this._isStarted=!1,this}setWeightForAllAnimatables(z){for(let a=0;a<this._animatables.length;a++){this._animatables[a].weight=z}return this}syncAllAnimationsWith(z){for(let a=0;a<this._animatables.length;a++){this._animatables[a].syncWith(z)}return this}goToFrame(z){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].goToFrame(z)}return this}getCurrentFrame(){var z;return(null===(z=this.animatables[0])||void 0===z?void 0:z.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const z=this._scene.animationGroups.indexOf(this);if(z>-1&&this._scene.animationGroups.splice(z,1),this._parentContainer){const z=this._parentContainer.animationGroups.indexOf(this);z>-1&&this._parentContainer.animationGroups.splice(z,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(z){let a=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const K=this._animatables.indexOf(z);K>-1&&this._animatables.splice(K,1),0===this._animatables.length&&(this._isStarted=!1,a||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(z,a){let K=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const v=new w(z||this.name,this._scene,this._weight,this._playOrder);v._from=this.from,v._to=this.to,v._speedRatio=this.speedRatio,v._loopAnimation=this.loopAnimation,v._isAdditive=this.isAdditive,v._enableBlending=this.enableBlending,v._blendingSpeed=this.blendingSpeed,v.metadata=this.metadata,v.mask=this.mask;for(const T of this._targetedAnimations)v.addTargetedAnimation(K?T.animation.clone():T.animation,a?a(T.target):T.target);return v}serialize(){const z={};z.name=this.name,z.from=this.from,z.to=this.to,z.speedRatio=this.speedRatio,z.loopAnimation=this.loopAnimation,z.isAdditive=this.isAdditive,z.weight=this.weight,z.playOrder=this.playOrder,z.enableBlending=this.enableBlending,z.blendingSpeed=this.blendingSpeed,z.targetedAnimations=[];for(let a=0;a<this.targetedAnimations.length;a++){const K=this.targetedAnimations[a];z.targetedAnimations[a]=K.serialize()}return p.d&&p.d.HasTags(this)&&(z.tags=p.d.GetTags(this)),this.metadata&&(z.metadata=this.metadata),z}static Parse(z,a){const K=new w(z.name,a,z.weight,z.playOrder);for(let T=0;T<z.targetedAnimations.length;T++){const m=z.targetedAnimations[T],p=v.e.Parse(m.animation),j=m.targetId;if("influence"===m.animation.property){const z=a.getMorphTargetById(j);z&&K.addTargetedAnimation(p,z)}else{const z=a.getNodeById(j);null!=z&&K.addTargetedAnimation(p,z)}}return p.d&&p.d.AddTagsTo(K,z.tags),null!==z.from&&null!==z.to&&K.normalize(z.from,z.to),void 0!==z.speedRatio&&(K._speedRatio=z.speedRatio),void 0!==z.loopAnimation&&(K._loopAnimation=z.loopAnimation),void 0!==z.isAdditive&&(K._isAdditive=z.isAdditive),void 0!==z.weight&&(K._weight=z.weight),void 0!==z.playOrder&&(K._playOrder=z.playOrder),void 0!==z.enableBlending&&(K._enableBlending=z.enableBlending),void 0!==z.blendingSpeed&&(K._blendingSpeed=z.blendingSpeed),void 0!==z.metadata&&(K.metadata=z.metadata),K}static MakeAnimationAdditive(z,a,K){let T;T="object"===typeof a?a:{referenceFrame:a,range:K,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let m=z;T.cloneOriginalAnimationGroup&&(m=z.clone(T.clonedAnimationGroupName||m.name));const p=m.targetedAnimations;for(let j=0;j<p.length;j++){const z=p[j];z.animation=v.e.MakeAnimationAdditive(z.animation,T)}if(m.isAdditive=!0,T.clipKeys){let z=Number.MAX_VALUE,a=-Number.MAX_VALUE;const K=m.targetedAnimations;for(let v=0;v<K.length;v++){const T=K[v].animation.getKeys();z>T[0].frame&&(z=T[0].frame),a<T[T.length-1].frame&&(a=T[T.length-1].frame)}m._from=z,m._to=a}return m}static ClipKeys(z,a,K,v,T){const m=z.clone(v||z.name);return w.ClipKeysInPlace(m,a,K,T)}static ClipKeysInPlace(z,a,K,v){return w.ClipInPlace(z,a,K,v,!1)}static ClipFrames(z,a,K,v,T){const m=z.clone(v||z.name);return w.ClipFramesInPlace(m,a,K,T)}static ClipFramesInPlace(z,a,K,v){return w.ClipInPlace(z,a,K,v,!0)}static ClipInPlace(z,a,K,v){let T=arguments.length>4&&void 0!==arguments[4]&&arguments[4],m=Number.MAX_VALUE,p=-Number.MAX_VALUE;const j=z.targetedAnimations;for(let s=0;s<j.length;s++){const z=j[s],M=v?z.animation:z.animation.clone();T&&(M.createKeyForFrame(a),M.createKeyForFrame(K));const r=M.getKeys(),W=[];let F=Number.MAX_VALUE;for(let v=0;v<r.length;v++){const z=r[v];if(!T&&v>=a&&v<=K||T&&z.frame>=a&&z.frame<=K){const a={frame:z.frame,value:z.value.clone?z.value.clone():z.value,inTangent:z.inTangent,outTangent:z.outTangent,interpolation:z.interpolation,lockedTangent:z.lockedTangent};F===Number.MAX_VALUE&&(F=a.frame),a.frame-=F,W.push(a)}}0!==W.length?(m>W[0].frame&&(m=W[0].frame),p<W[W.length-1].frame&&(p=W[W.length-1].frame),M.setKeys(W,!0),z.animation=M):(j.splice(s,1),s--)}return z._from=m,z._to=p,z}getClassName(){return"AnimationGroup"}toString(z){let a="Name: "+this.name;return a+=", type: "+this.getClassName(),z&&(a+=", from: "+this._from,a+=", to: "+this._to,a+=", isStarted: "+this._isStarted,a+=", speedRatio: "+this._speedRatio,a+=", targetedAnimations length: "+this._targetedAnimations.length,a+=", animatables length: "+this._animatables),a}}}}]);