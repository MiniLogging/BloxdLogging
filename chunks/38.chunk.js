/*! For license information please see 26kuv.38.aaecb483.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11970:(x,Z,l)=>{l.r(Z),l.d(Z,{getAnalytics:()=>Fx,getGoogleAnalyticsClientId:()=>bx,initializeAnalytics:()=>Kx,isSupported:()=>qx,logEvent:()=>lZ,setAnalyticsCollectionEnabled:()=>xZ,setConsent:()=>tZ,setCurrentScreen:()=>wx,setDefaultEventParameters:()=>ZZ,setUserId:()=>Yx,setUserProperties:()=>yx,settings:()=>ix});var t=l(11945),L=l(11963),z=l(11954),A=l(11949);let P,C;const j=new WeakMap,V=new WeakMap,Q=new WeakMap,c=new WeakMap,a=new WeakMap;let I={get(x,Z,l){if(x instanceof IDBTransaction){if("done"===Z)return V.get(x);if("objectStoreNames"===Z)return x.objectStoreNames||Q.get(x);if("store"===Z)return l.objectStoreNames[1]?void 0:l.objectStore(l.objectStoreNames[0])}return v(x[Z])},set:(x,Z,l)=>(x[Z]=l,!0),has:(x,Z)=>x instanceof IDBTransaction&&("done"===Z||"store"===Z)||Z in x};function u(x){return x!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(C||(C=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(x)?function(){for(var Z=arguments.length,l=new Array(Z),t=0;t<Z;t++)l[t]=arguments[t];return x.apply(X(this),l),v(j.get(this))}:function(){for(var Z=arguments.length,l=new Array(Z),t=0;t<Z;t++)l[t]=arguments[t];return v(x.apply(X(this),l))}:function(Z){for(var l=arguments.length,t=new Array(l>1?l-1:0),L=1;L<l;L++)t[L-1]=arguments[L];const z=x.call(X(this),Z,...t);return Q.set(z,Z.sort?Z.sort():[Z]),v(z)}}function n(x){return"function"===typeof x?u(x):(x instanceof IDBTransaction&&function(x){if(V.has(x))return;const Z=new Promise(((Z,l)=>{const t=()=>{x.removeEventListener("complete",L),x.removeEventListener("error",z),x.removeEventListener("abort",z)},L=()=>{Z(),t()},z=()=>{l(x.error||new DOMException("AbortError","AbortError")),t()};x.addEventListener("complete",L),x.addEventListener("error",z),x.addEventListener("abort",z)}));V.set(x,Z)}(x),Z=x,(P||(P=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((x=>Z instanceof x))?new Proxy(x,I):x);var Z}function v(x){if(x instanceof IDBRequest)return function(x){const Z=new Promise(((Z,l)=>{const t=()=>{x.removeEventListener("success",L),x.removeEventListener("error",z)},L=()=>{Z(v(x.result)),t()},z=()=>{l(x.error),t()};x.addEventListener("success",L),x.addEventListener("error",z)}));return Z.then((Z=>{Z instanceof IDBCursor&&j.set(Z,x)})).catch((()=>{})),a.set(Z,x),Z}(x);if(c.has(x))return c.get(x);const Z=n(x);return Z!==x&&(c.set(x,Z),a.set(Z,x)),Z}const X=x=>a.get(x);const W=["get","getKey","getAll","getAllKeys","count"],f=["put","add","delete","clear"],S=new Map;function T(x,Z){if(!(x instanceof IDBDatabase)||Z in x||"string"!==typeof Z)return;if(S.get(Z))return S.get(Z);const l=Z.replace(/FromIndex$/,""),t=Z!==l,L=f.includes(l);if(!(l in(t?IDBIndex:IDBObjectStore).prototype)||!L&&!W.includes(l))return;const z=async function(x){const Z=this.transaction(x,L?"readwrite":"readonly");let z=Z.store;for(var A=arguments.length,P=new Array(A>1?A-1:0),C=1;C<A;C++)P[C-1]=arguments[C];return t&&(z=z.index(P.shift())),(await Promise.all([z[l](...P),L&&Z.done]))[0]};return S.set(Z,z),z}I=(x=>({...x,get:(Z,l,t)=>T(Z,l)||x.get(Z,l,t),has:(Z,l)=>!!T(Z,l)||x.has(Z,l)}))(I);const H="@firebase/installations",R="0.6.4",J=1e4,U=`w:${R}`,d="FIS_v2",k=36e5,G={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},p=new z.d("installations","Installations",G);function N(x){return x instanceof z.h&&x.code.includes("request-failed")}function B(x){let{projectId:Z}=x;return`https://firebaseinstallations.googleapis.com/v1/projects/${Z}/installations`}function m(x){return{token:x.token,requestStatus:2,expiresIn:(Z=x.expiresIn,Number(Z.replace("s","000"))),creationTime:Date.now()};var Z}async function h(x,Z){const l=(await Z.json()).error;return p.create("request-failed",{requestName:x,serverCode:l.code,serverMessage:l.message,serverStatus:l.status})}function s(x){let{apiKey:Z}=x;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":Z})}function o(x,Z){let{refreshToken:l}=Z;const t=s(x);return t.append("Authorization",function(x){return`${d} ${x}`}(l)),t}async function r(x){const Z=await x();return Z.status>=500&&Z.status<600?x():Z}function M(x){return new Promise((Z=>{setTimeout(Z,x)}))}const O=/^[cdef][\w-]{21}$/;function E(){try{const x=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(x),x[0]=112+x[0]%16;const Z=function(x){const Z=(l=x,btoa(String.fromCharCode(...l)).replace(/\+/g,"-").replace(/\//g,"_"));var l;return Z.substr(0,22)}(x);return O.test(Z)?Z:""}catch(x){return""}}function D(x){return`${x.appName}!${x.appId}`}const e=new Map;function i(x,Z){const l=D(x);g(l,Z),function(x,Z){const l=K();l&&l.postMessage({key:x,fid:Z});q()}(l,Z)}function g(x,Z){const l=e.get(x);if(l)for(const t of l)t(Z)}let F=null;function K(){return!F&&"BroadcastChannel"in self&&(F=new BroadcastChannel("[Firebase] FID Change"),F.onmessage=x=>{g(x.data.key,x.data.fid)}),F}function q(){0===e.size&&F&&(F.close(),F=null)}const w="firebase-installations-store";let b=null;function Y(){return b||(b=function(x,Z){let{blocked:l,upgrade:t,blocking:L,terminated:z}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const A=indexedDB.open(x,Z),P=v(A);return t&&A.addEventListener("upgradeneeded",(x=>{t(v(A.result),x.oldVersion,x.newVersion,v(A.transaction))})),l&&A.addEventListener("blocked",(()=>l())),P.then((x=>{z&&x.addEventListener("close",(()=>z())),L&&x.addEventListener("versionchange",(()=>L()))})).catch((()=>{})),P}("firebase-installations-database",1,{upgrade:(x,Z)=>{if(0===Z)x.createObjectStore(w)}})),b}async function y(x,Z){const l=D(x),t=(await Y()).transaction(w,"readwrite"),L=t.objectStore(w),z=await L.get(l);return await L.put(Z,l),await t.done,z&&z.fid===Z.fid||i(x,Z.fid),Z}async function xx(x){const Z=D(x),l=(await Y()).transaction(w,"readwrite");await l.objectStore(w).delete(Z),await l.done}async function Zx(x,Z){const l=D(x),t=(await Y()).transaction(w,"readwrite"),L=t.objectStore(w),z=await L.get(l),A=Z(z);return void 0===A?await L.delete(l):await L.put(A,l),await t.done,!A||z&&z.fid===A.fid||i(x,A.fid),A}async function lx(x){let Z;const l=await Zx(x.appConfig,(l=>{const t=function(x){const Z=x||{fid:E(),registrationStatus:0};return zx(Z)}(l),L=function(x,Z){if(0===Z.registrationStatus){if(!navigator.onLine){return{installationEntry:Z,registrationPromise:Promise.reject(p.create("app-offline"))}}const l={fid:Z.fid,registrationStatus:1,registrationTime:Date.now()},t=async function(x,Z){try{const l=await async function(x,Z){let{appConfig:l,heartbeatServiceProvider:t}=x,{fid:L}=Z;const z=B(l),A=s(l),P=t.getImmediate({optional:!0});if(P){const x=await P.getHeartbeatsHeader();x&&A.append("x-firebase-client",x)}const C={fid:L,authVersion:d,appId:l.appId,sdkVersion:U},j={method:"POST",headers:A,body:JSON.stringify(C)},V=await r((()=>fetch(z,j)));if(V.ok){const x=await V.json();return{fid:x.fid||L,registrationStatus:2,refreshToken:x.refreshToken,authToken:m(x.authToken)}}throw await h("Create Installation",V)}(x,Z);return y(x.appConfig,l)}catch(l){throw N(l)&&409===l.customData.serverCode?await xx(x.appConfig):await y(x.appConfig,{fid:Z.fid,registrationStatus:0}),l}}(x,l);return{installationEntry:l,registrationPromise:t}}return 1===Z.registrationStatus?{installationEntry:Z,registrationPromise:tx(x)}:{installationEntry:Z}}(x,t);return Z=L.registrationPromise,L.installationEntry}));return""===l.fid?{installationEntry:await Z}:{installationEntry:l,registrationPromise:Z}}async function tx(x){let Z=await Lx(x.appConfig);for(;1===Z.registrationStatus;)await M(100),Z=await Lx(x.appConfig);if(0===Z.registrationStatus){const{installationEntry:Z,registrationPromise:l}=await lx(x);return l||Z}return Z}function Lx(x){return Zx(x,(x=>{if(!x)throw p.create("installation-not-found");return zx(x)}))}function zx(x){return 1===(Z=x).registrationStatus&&Z.registrationTime+J<Date.now()?{fid:x.fid,registrationStatus:0}:x;var Z}async function Ax(x,Z){let{appConfig:l,heartbeatServiceProvider:t}=x;const L=function(x,Z){let{fid:l}=Z;return`${B(x)}/${l}/authTokens:generate`}(l,Z),z=o(l,Z),A=t.getImmediate({optional:!0});if(A){const x=await A.getHeartbeatsHeader();x&&z.append("x-firebase-client",x)}const P={installation:{sdkVersion:U,appId:l.appId}},C={method:"POST",headers:z,body:JSON.stringify(P)},j=await r((()=>fetch(L,C)));if(j.ok){return m(await j.json())}throw await h("Generate Auth Token",j)}async function Px(x){let Z,l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const t=await Zx(x.appConfig,(t=>{if(!jx(t))throw p.create("not-registered");const L=t.authToken;if(!l&&function(x){return 2===x.requestStatus&&!function(x){const Z=Date.now();return Z<x.creationTime||x.creationTime+x.expiresIn<Z+k}(x)}(L))return t;if(1===L.requestStatus)return Z=async function(x,Z){let l=await Cx(x.appConfig);for(;1===l.authToken.requestStatus;)await M(100),l=await Cx(x.appConfig);const t=l.authToken;return 0===t.requestStatus?Px(x,Z):t}(x,l),t;{if(!navigator.onLine)throw p.create("app-offline");const l=function(x){const Z={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},x),{authToken:Z})}(t);return Z=async function(x,Z){try{const l=await Ax(x,Z),t=Object.assign(Object.assign({},Z),{authToken:l});return await y(x.appConfig,t),l}catch(l){if(!N(l)||401!==l.customData.serverCode&&404!==l.customData.serverCode){const l=Object.assign(Object.assign({},Z),{authToken:{requestStatus:0}});await y(x.appConfig,l)}else await xx(x.appConfig);throw l}}(x,l),l}}));return Z?await Z:t.authToken}function Cx(x){return Zx(x,(x=>{if(!jx(x))throw p.create("not-registered");const Z=x.authToken;return 1===(l=Z).requestStatus&&l.requestTime+J<Date.now()?Object.assign(Object.assign({},x),{authToken:{requestStatus:0}}):x;var l}))}function jx(x){return void 0!==x&&2===x.registrationStatus}async function Vx(x){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const l=x;await async function(x){const{registrationPromise:Z}=await lx(x);Z&&await Z}(l);return(await Px(l,Z)).token}function Qx(x){return p.create("missing-app-config-values",{valueName:x})}const cx="installations",ax=x=>{const Z=x.getProvider("app").getImmediate(),l=function(x){if(!x||!x.options)throw Qx("App Configuration");if(!x.name)throw Qx("App Name");const Z=["projectId","apiKey","appId"];for(const l of Z)if(!x.options[l])throw Qx(l);return{appName:x.name,projectId:x.options.projectId,apiKey:x.options.apiKey,appId:x.options.appId}}(Z);return{app:Z,appConfig:l,heartbeatServiceProvider:(0,t.x)(Z,"heartbeat"),_delete:()=>Promise.resolve()}},Ix=x=>{const Z=x.getProvider("app").getImmediate(),l=(0,t.x)(Z,cx).getImmediate();return{getId:()=>async function(x){const Z=x,{installationEntry:l,registrationPromise:t}=await lx(Z);return t?t.catch(console.error):Px(Z).catch(console.error),l.fid}(l),getToken:x=>Vx(l,x)}};(0,t.y)(new A.g(cx,ax,"PUBLIC")),(0,t.y)(new A.g("installations-internal",Ix,"PRIVATE")),(0,t.Q)(H,R),(0,t.Q)(H,R,"esm2017");const ux="analytics",nx="https://www.googletagmanager.com/gtag/js",vx=new L.f("@firebase/analytics"),Xx={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},Wx=new z.d("analytics","Analytics",Xx);function fx(x){if(!x.startsWith(nx)){const Z=Wx.create("invalid-gtag-resource",{gtagURL:x});return vx.warn(Z.message),""}return x}function Sx(x){return Promise.all(x.map((x=>x.catch((x=>x)))))}function Tx(x,Z){const l=function(x,Z){let l;return window.trustedTypes&&(l=window.trustedTypes.createPolicy(x,Z)),l}("firebase-js-sdk-policy",{createScriptURL:fx}),t=document.createElement("script"),L=`${nx}?l=${x}&id=${Z}`;t.src=l?null===l||void 0===l?void 0:l.createScriptURL(L):L,t.async=!0,document.head.appendChild(t)}function Hx(x,Z,l,t){return async function(L){try{for(var z=arguments.length,A=new Array(z>1?z-1:0),P=1;P<z;P++)A[P-1]=arguments[P];if("event"===L){const[t,L]=A;await async function(x,Z,l,t,L){try{let z=[];if(L&&L.send_to){let x=L.send_to;Array.isArray(x)||(x=[x]);const t=await Sx(l);for(const l of x){const x=t.find((x=>x.measurementId===l)),L=x&&Z[x.appId];if(!L){z=[];break}z.push(L)}}0===z.length&&(z=Object.values(Z)),await Promise.all(z),x("event",t,L||{})}catch(z){vx.error(z)}}(x,Z,l,t,L)}else if("config"===L){const[L,z]=A;await async function(x,Z,l,t,L,z){const A=t[L];try{if(A)await Z[A];else{const x=(await Sx(l)).find((x=>x.measurementId===L));x&&await Z[x.appId]}}catch(P){vx.error(P)}x("config",L,z)}(x,Z,l,t,L,z)}else if("consent"===L){const[Z]=A;x("consent","update",Z)}else if("get"===L){const[Z,l,t]=A;x("get",Z,l,t)}else if("set"===L){const[Z]=A;x("set",Z)}else x(L,...A)}catch(C){vx.error(C)}}}const Rx=new class{constructor(){let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=x,this.intervalMillis=Z}getThrottleMetadata(x){return this.throttleMetadata[x]}setThrottleMetadata(x,Z){this.throttleMetadata[x]=Z}deleteThrottleMetadata(x){delete this.throttleMetadata[x]}};function Jx(x){return new Headers({Accept:"application/json","x-goog-api-key":x})}async function Ux(x){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Rx,l=arguments.length>2?arguments[2]:void 0;const{appId:t,apiKey:L,measurementId:z}=x.options;if(!t)throw Wx.create("no-app-id");if(!L){if(z)return{measurementId:z,appId:t};throw Wx.create("no-api-key")}const A=Z.getThrottleMetadata(t)||{backoffCount:0,throttleEndTimeMillis:Date.now()},P=new kx;return setTimeout((async()=>{P.abort()}),void 0!==l?l:6e4),dx({appId:t,apiKey:L,measurementId:z},A,P,Z)}async function dx(x,Z,l){let{throttleEndTimeMillis:t,backoffCount:L}=Z,A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Rx;var P;const{appId:C,measurementId:j}=x;try{await function(x,Z){return new Promise(((l,t)=>{const L=Math.max(Z-Date.now(),0),z=setTimeout(l,L);x.addEventListener((()=>{clearTimeout(z),t(Wx.create("fetch-throttle",{throttleEndTimeMillis:Z}))}))}))}(l,t)}catch(V){if(j)return vx.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${j} provided in the "measurementId" field in the local Firebase config. [${null===V||void 0===V?void 0:V.message}]`),{appId:C,measurementId:j};throw V}try{const Z=await async function(x){var Z;const{appId:l,apiKey:t}=x,L={method:"GET",headers:Jx(t)},z="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",l),A=await fetch(z,L);if(200!==A.status&&304!==A.status){let x="";try{const l=await A.json();(null===(Z=l.error)||void 0===Z?void 0:Z.message)&&(x=l.error.message)}catch(P){}throw Wx.create("config-fetch-failed",{httpStatus:A.status,responseMessage:x})}return A.json()}(x);return A.deleteThrottleMetadata(C),Z}catch(V){const Z=V;if(!function(x){if(!(x instanceof z.h)||!x.customData)return!1;const Z=Number(x.customData.httpStatus);return 429===Z||500===Z||503===Z||504===Z}(Z)){if(A.deleteThrottleMetadata(C),j)return vx.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${j} provided in the "measurementId" field in the local Firebase config. [${null===Z||void 0===Z?void 0:Z.message}]`),{appId:C,measurementId:j};throw V}const t=503===Number(null===(P=null===Z||void 0===Z?void 0:Z.customData)||void 0===P?void 0:P.httpStatus)?(0,z.q)(L,A.intervalMillis,30):(0,z.q)(L,A.intervalMillis),Q={throttleEndTimeMillis:Date.now()+t,backoffCount:L+1};return A.setThrottleMetadata(C,Q),vx.debug(`Calling attemptFetch again in ${t} millis`),dx(x,Q,l,A)}}class kx{constructor(){this.listeners=[]}addEventListener(x){this.listeners.push(x)}abort(){this.listeners.forEach((x=>x()))}}let Gx,px;function Nx(x){px=x}function Bx(x){Gx=x}async function mx(x,Z,l,t,L,A,P){var C;const j=Ux(x);j.then((Z=>{l[Z.measurementId]=Z.appId,x.options.measurementId&&Z.measurementId!==x.options.measurementId&&vx.warn(`The measurement ID in the local Firebase config (${x.options.measurementId}) does not match the measurement ID fetched from the server (${Z.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((x=>vx.error(x))),Z.push(j);const V=async function(){if(!(0,z.S)())return vx.warn(Wx.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,z.db)()}catch(x){return vx.warn(Wx.create("indexeddb-unavailable",{errorInfo:null===x||void 0===x?void 0:x.toString()}).message),!1}return!0}().then((x=>x?t.getId():void 0)),[Q,c]=await Promise.all([j,V]);(function(x){const Z=window.document.getElementsByTagName("script");for(const l of Object.values(Z))if(l.src&&l.src.includes(nx)&&l.src.includes(x))return l;return null})(A)||Tx(A,Q.measurementId),px&&(L("consent","default",px),Nx(void 0)),L("js",new Date);const a=null!==(C=null===P||void 0===P?void 0:P.config)&&void 0!==C?C:{};return a.origin="firebase",a.update=!0,null!=c&&(a.firebase_id=c),L("config",Q.measurementId,a),Gx&&(L("set",Gx),Bx(void 0)),Q.measurementId}class hx{constructor(x){this.app=x}_delete(){return delete sx[this.app.options.appId],Promise.resolve()}}let sx={},ox=[];const rx={};let Mx,Ox,Ex="dataLayer",Dx="gtag",ex=!1;function ix(x){if(ex)throw Wx.create("already-initialized");x.dataLayerName&&(Ex=x.dataLayerName),x.gtagName&&(Dx=x.gtagName)}function gx(x,Z,l){!function(){const x=[];if((0,z.J)()&&x.push("This is a browser extension environment."),(0,z.k)()||x.push("Cookies are not available."),x.length>0){const Z=x.map(((x,Z)=>`(${Z+1}) ${x}`)).join(" "),l=Wx.create("invalid-analytics-context",{errorInfo:Z});vx.warn(l.message)}}();const t=x.options.appId;if(!t)throw Wx.create("no-app-id");if(!x.options.apiKey){if(!x.options.measurementId)throw Wx.create("no-api-key");vx.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${x.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=sx[t])throw Wx.create("already-exists",{id:t});if(!ex){!function(x){let Z=[];Array.isArray(window[x])?Z=window[x]:window[x]=Z}(Ex);const{wrappedGtag:x,gtagCore:Z}=function(x,Z,l,t,L){let z=function(){for(var x=arguments.length,Z=new Array(x),l=0;l<x;l++)Z[l]=arguments[l];window[t].push(arguments)};return window[L]&&"function"===typeof window[L]&&(z=window[L]),window[L]=Hx(z,x,Z,l),{gtagCore:z,wrappedGtag:window[L]}}(sx,ox,rx,Ex,Dx);Ox=x,Mx=Z,ex=!0}sx[t]=mx(x,ox,rx,Z,Mx,Ex,l);return new hx(x)}function Fx(){let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,t.J)();x=(0,z.H)(x);const Z=(0,t.x)(x,ux);return Z.isInitialized()?Z.getImmediate():Kx(x)}function Kx(x){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const l=(0,t.x)(x,ux);if(l.isInitialized()){const x=l.getImmediate();if((0,z.s)(Z,l.getOptions()))return x;throw Wx.create("already-initialized")}return l.initialize({options:Z})}async function qx(){if((0,z.J)())return!1;if(!(0,z.k)())return!1;if(!(0,z.S)())return!1;try{return await(0,z.db)()}catch(x){return!1}}function wx(x,Z,l){x=(0,z.H)(x),async function(x,Z,l,t){if(t&&t.global)return x("set",{screen_name:l}),Promise.resolve();x("config",await Z,{update:!0,screen_name:l})}(Ox,sx[x.app.options.appId],Z,l).catch((x=>vx.error(x)))}async function bx(x){return x=(0,z.H)(x),async function(x,Z){const l=await Z;return new Promise(((Z,t)=>{x("get",l,"client_id",(x=>{x||t(Wx.create("no-client-id")),Z(x)}))}))}(Ox,sx[x.app.options.appId])}function Yx(x,Z,l){x=(0,z.H)(x),async function(x,Z,l,t){if(t&&t.global)return x("set",{user_id:l}),Promise.resolve();x("config",await Z,{update:!0,user_id:l})}(Ox,sx[x.app.options.appId],Z,l).catch((x=>vx.error(x)))}function yx(x,Z,l){x=(0,z.H)(x),async function(x,Z,l,t){if(t&&t.global){const Z={};for(const x of Object.keys(l))Z[`user_properties.${x}`]=l[x];return x("set",Z),Promise.resolve()}x("config",await Z,{update:!0,user_properties:l})}(Ox,sx[x.app.options.appId],Z,l).catch((x=>vx.error(x)))}function xZ(x,Z){x=(0,z.H)(x),async function(x,Z){const l=await x;window[`ga-disable-${l}`]=!Z}(sx[x.app.options.appId],Z).catch((x=>vx.error(x)))}function ZZ(x){Ox?Ox("set",x):Bx(x)}function lZ(x,Z,l,t){x=(0,z.H)(x),async function(x,Z,l,t,L){if(L&&L.global)x("event",l,t);else{const L=await Z;x("event",l,Object.assign(Object.assign({},t),{send_to:L}))}}(Ox,sx[x.app.options.appId],Z,l,t).catch((x=>vx.error(x)))}function tZ(x){Ox?Ox("consent","update",x):Nx(x)}const LZ="@firebase/analytics",zZ="0.10.0";(0,t.y)(new A.g(ux,((x,Z)=>{let{options:l}=Z;return gx(x.getProvider("app").getImmediate(),x.getProvider("installations-internal").getImmediate(),l)}),"PUBLIC")),(0,t.y)(new A.g("analytics-internal",(function(x){try{const Z=x.getProvider(ux).getImmediate();return{logEvent:(x,l,t)=>lZ(Z,x,l,t)}}catch(Z){throw Wx.create("interop-component-reg-failed",{reason:Z})}}),"PRIVATE")),(0,t.Q)(LZ,zZ),(0,t.Q)(LZ,zZ,"esm2017")}}]);