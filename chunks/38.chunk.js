"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13296:(h,b,I)=>{I.r(b),I.d(b,{AnimationGroup:()=>w,TargetedAnimation:()=>i});var g=I(12059),O=I(10830),T=I(10873),N=I(11137),V=I(12052),M=I(11146);class y{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(h,b,I,O){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=b,this._target=h,this._scene=I,this._host=O,this._activeTargets=[],b._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===g.b.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=M.d.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const h={frame:0,value:this._minValue};this._keys.splice(0,0,h)}if(this._target instanceof Array){let h=0;for(const b of this._target)this._preparePath(b,h),this._getOriginalValues(h),h++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const T=b.getEvents();T&&T.length>0&&T.forEach((h=>{this._events.push(h._clone())})),this._enableBlending=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(h){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const I=this._animation.targetPropertyPath;if(I.length>1){let g=h;for(let h=0;h<I.length-1;h++){const b=I[h];if(g=g[b],void 0===g)throw new Error(`Invalid property (${b}) in property path (${I.join(".")})`)}this._targetPath=I[I.length-1],this._activeTargets[b]=g}else this._targetPath=I[0],this._activeTargets[b]=h;if(void 0===this._activeTargets[b][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${I.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let h=0;for(const b of this._target)void 0!==this._originalValue[h]&&this._setValue(b,this._activeTargets[h],this._originalValue[h],-1,h),h++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let h=0;h<this._events.length;h++)this._events[h].isDone=!1}isStopped(){return this._stopped}dispose(){const h=this._animation.runtimeAnimations.indexOf(this);h>-1&&this._animation.runtimeAnimations.splice(h,1)}setValue(h,b){if(this._targetIsArray)for(let I=0;I<this._target.length;I++){const g=this._target[I];this._setValue(g,this._activeTargets[I],h,b,I)}else this._setValue(this._target,this._directTarget,h,b,0)}_getOriginalValues(){let h,b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const I=this._activeTargets[b];h=I.getLocalMatrix&&"_matrix"===this._targetPath?I.getLocalMatrix():I[this._targetPath],h&&h.clone?this._originalValue[b]=h.clone():this._originalValue[b]=h}_registerTargetForLateAnimationBinding(h,b){const I=h.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(I),I._lateAnimationHolders||(I._lateAnimationHolders={}),I._lateAnimationHolders[h.targetPath]||(I._lateAnimationHolders[h.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:b}),h.isAdditive?(I._lateAnimationHolders[h.targetPath].additiveAnimations.push(h),I._lateAnimationHolders[h.targetPath].totalAdditiveWeight+=h.weight):(I._lateAnimationHolders[h.targetPath].animations.push(h),I._lateAnimationHolders[h.targetPath].totalWeight+=h.weight)}_setValue(h,b,I,O,T){if(this._currentActiveTarget=b,this._weight=O,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const h=b[this._targetPath];h.clone?this._originalBlendValue=h.clone():this._originalBlendValue=h}this._originalBlendValue.m?g.b.AllowMatrixDecomposeForInterpolation?this._currentValue?M.d.DecomposeLerpToRef(this._originalBlendValue,I,this._blendingFactor,this._currentValue):this._currentValue=M.d.DecomposeLerp(this._originalBlendValue,I,this._blendingFactor):this._currentValue?M.d.LerpToRef(this._originalBlendValue,I,this._blendingFactor,this._currentValue):this._currentValue=M.d.Lerp(this._originalBlendValue,I,this._blendingFactor):this._currentValue=g.b._UniversalLerp(this._originalBlendValue,I,this._blendingFactor);const O=h&&h.animationPropertiesOverride?h.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=O}else this._currentValue?this._currentValue.p?this._currentValue.p(I):this._currentValue=I:null!==I&&void 0!==I&&I.clone?this._currentValue=I.clone():this._currentValue=I;-1!==O?this._registerTargetForLateAnimationBinding(this,this._originalValue[T]):this._animationState.loopMode===g.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[T],b[this._targetPath]):b[this._targetPath]=this._originalValue[T]+this._currentValue:b[this._targetPath]=this._currentValue,h.Hg&&h.Hg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(h){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const I=this._animation.getKeys();h<I[0].frame?h=I[0].frame:h>I[I.length-1].frame&&(h=I[I.length-1].frame);const g=this._events;if(g.length)for(let T=0;T<g.length;T++)g[T].onlyOnce||(g[T].isDone=g[T].frame<h);this._currentFrame=h;const O=this._animation._interpolate(h,this._animationState);this.setValue(O,b)}_prepareForSpeedRatioChange(h){const b=this._previousElapsedTime*(this._animation.framePerSecond*h)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-b}animate(h,b,I,O,T){let N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const V=this._animation,M=V.targetPropertyPath;if(!M||M.length<1)return this._stopped=!0,!1;let y=!0;(b<this._minFrame||b>this._maxFrame)&&(b=this._minFrame),(I<this._minFrame||I>this._maxFrame)&&(I=this._maxFrame);const q=I-b;let e,P=h*(V.framePerSecond*T)/1e3+this._absoluteFrameOffset,K=0,o=!1;const R=O&&this._animationState.loopMode===g.b.ANIMATIONLOOPMODE_YOYO;if(R){const h=(P-b)/q,I=Math.sin(h*Math.PI);P=Math.abs(I)*q+b;const g=I>=0?1:-1;this._yoyoDirection!==g&&(o=!0),this._yoyoDirection=g}if(this._previousElapsedTime=h,this._previousAbsoluteFrame=P,!O&&I>=b&&(P>=q&&T>0||P<=0&&T<0))y=!1,K=V._getKeyValue(this._maxValue);else if(!O&&b>=I&&(P<=q&&T<0||P>=0&&T>0))y=!1,K=V._getKeyValue(this._minValue);else if(this._animationState.loopMode!==g.b.ANIMATIONLOOPMODE_CYCLE){const h=I.toString()+b.toString();if(!this._offsetsCache[h]){this._animationState.repeatCount=0,this._animationState.loopMode=g.b.ANIMATIONLOOPMODE_CYCLE;const O=V._interpolate(b,this._animationState),T=V._interpolate(I,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),V.dataType){case g.b.ANIMATIONTYPE_FLOAT:this._offsetsCache[h]=T-O;break;case g.b.ANIMATIONTYPE_QUATERNION:case g.b.ANIMATIONTYPE_VECTOR3:case g.b.ANIMATIONTYPE_VECTOR2:case g.b.ANIMATIONTYPE_SIZE:case g.b.ANIMATIONTYPE_COLOR3:this._offsetsCache[h]=T.tc(O)}this._highLimitsCache[h]=T}K=this._highLimitsCache[h],e=this._offsetsCache[h]}if(void 0===e)switch(V.dataType){case g.b.ANIMATIONTYPE_FLOAT:e=0;break;case g.b.ANIMATIONTYPE_QUATERNION:e=g.i;break;case g.b.ANIMATIONTYPE_VECTOR3:e=g.r;break;case g.b.ANIMATIONTYPE_VECTOR2:e=g.o;break;case g.b.ANIMATIONTYPE_SIZE:e=g.m;break;case g.b.ANIMATIONTYPE_COLOR3:e=g.e;break;case g.b.ANIMATIONTYPE_COLOR4:e=g.h}let L;if(this._host&&this._host.syncRoot){const h=this._host.syncRoot;L=b+q*((h.masterFrame-h.fromFrame)/(h.toFrame-h.fromFrame))}else L=P>0&&b>I||P<0&&b<I?y&&0!==q?I+P%q:b:y&&0!==q?b+P%q:I;const i=this._events;if(!R&&(T>0&&this.currentFrame>L||T<0&&this.currentFrame<L)||R&&o){this._onLoop();for(let h=0;h<i.length;h++)i[h].onlyOnce||(i[h].isDone=!1);this._animationState.key=T>0?0:V.getKeys().length-1}this._currentFrame=L,this._animationState.repeatCount=0===q?0:P/q|0,this._animationState.highLimitValue=K,this._animationState.offsetValue=e;const w=V._interpolate(L,this._animationState);if(this.setValue(w,N),i.length)for(let g=0;g<i.length;g++)if(q>=0&&L>=i[g].frame&&i[g].frame>=b||q<0&&L<=i[g].frame&&i[g].frame<=b){const h=i[g];h.isDone||(h.onlyOnce&&(i.splice(g,1),g--),h.isDone=!0,h.action(L))}return y||(this._stopped=!0),y}}var q=I(10850);class e{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(h){this._weight=-1!==h?Math.min(Math.max(h,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(h){for(let b=0;b<this._runtimeAnimations.length;b++){this._runtimeAnimations[b]._prepareForSpeedRatioChange(h)}this._speedRatio=h,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(h,b){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,T=arguments.length>4&&void 0!==arguments[4]&&arguments[4],N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,V=arguments.length>6?arguments[6]:void 0,M=arguments.length>7?arguments[7]:void 0,y=arguments.length>8?arguments[8]:void 0,q=arguments.length>9&&void 0!==arguments[9]&&arguments[9],e=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=b,this.fromFrame=I,this.toFrame=g,this.loopAnimation=T,this.onAnimationEnd=V,this.onAnimationLoop=y,this.isAdditive=q,this.playOrder=e,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.kd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new O.b,this.onAnimationLoopObservable=new O.b,this._scene=h,M&&this.appendAnimations(b,M),this._speedRatio=N,h._activeAnimatables.push(this)}syncWith(h){if(this._syncRoot=h,h){const h=this._scene._activeAnimatables.indexOf(this);h>-1&&(this._scene._activeAnimatables.splice(h,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(h,b){for(let I=0;I<b.length;I++){const g=b[I],O=new y(h,g,this._scene,this);O._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(O)}}getAnimationByTargetProperty(h){const b=this._runtimeAnimations;for(let I=0;I<b.length;I++)if(b[I].animation.targetProperty===h)return b[I].animation;return null}getRuntimeAnimationByTargetProperty(h){const b=this._runtimeAnimations;for(let I=0;I<b.length;I++)if(b[I].animation.targetProperty===h)return b[I];return null}reset(){const h=this._runtimeAnimations;for(let b=0;b<h.length;b++)h[b].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(h){const b=this._runtimeAnimations;for(let I=0;I<b.length;I++)b[I].animation.enableBlending=!0,b[I].animation.blendingSpeed=h}disableBlending(){const h=this._runtimeAnimations;for(let b=0;b<h.length;b++)h[b].animation.enableBlending=!1}goToFrame(h){const b=this._runtimeAnimations;if(b[0]){const I=b[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??b[0].currentFrame;const g=0===this.speedRatio?0:(h-this._frameToSyncFromJump)/I*1e3/this.speedRatio;this._manualJumpDelay=-g}for(let I=0;I<b.length;I++)b[I].goToFrame(h,this._weight);this._goToFrame=h}get paused(){return this.kd}pause(){this.kd||(this.kd=!0)}restart(){this.kd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(h,b){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2],g=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(h||b){const O=this._scene._activeAnimatables.indexOf(this);if(O>-1){const T=this._runtimeAnimations;for(let I=T.length-1;I>=0;I--){const g=T[I];h&&g.animation.name!=h||(b&&!b(g.target)||(g.dispose(),T.splice(I,1)))}0==T.length&&(I||this._scene._activeAnimatables.splice(O,1),g||this._raiseOnAnimationEnd())}}else{const h=this._scene._activeAnimatables.indexOf(this);if(h>-1){I||this._scene._activeAnimatables.splice(h,1);const b=this._runtimeAnimations;for(let h=0;h<b.length;h++)b[h].dispose();this._runtimeAnimations.length=0,g||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((h=>{this.onAnimationEndObservable.add((()=>{h(this)}),void 0,void 0,this,!0)}))}_animate(h){if(this.kd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=h),!0;if(null===this._localDelayOffset?(this._localDelayOffset=h,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=h-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let b=!1;const I=this._runtimeAnimations;let g;for(g=0;g<I.length;g++){const O=I[g].animate(h-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);b=b||O}if(this.animationStarted=b,!b){if(this.disposeOnEnd)for(g=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(g,1),g=0;g<I.length;g++)I[g].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return b}}function P(h){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return h.originalValue;let b=1;const I=M.i.gb[0],g=M.i.gb[1],O=M.i.Quaternion[0];let T=0;const N=h.animations[0],V=h.originalValue;let y=1,q=!1;if(h.totalWeight<1)y=1-h.totalWeight,V.decompose(g,O,I);else{if(T=1,b=h.totalWeight,y=N.weight/b,1==y){if(!h.totalAdditiveWeight)return N.currentValue;q=!0}N.currentValue.decompose(g,O,I)}if(!q){g.scaleInPlace(y),I.scaleInPlace(y),O.scaleInPlace(y);for(let N=T;N<h.animations.length;N++){const T=h.animations[N];if(0===T.weight)continue;y=T.weight/b;const V=M.i.gb[2],q=M.i.gb[3],e=M.i.Quaternion[1];T.currentValue.decompose(q,e,V),q.scaleAndAddToRef(y,g),e.scaleAndAddToRef(M.g.Dot(O,e)>0?y:-y,O),V.scaleAndAddToRef(y,I)}O.normalize()}for(let P=0;P<h.additiveAnimations.length;P++){const b=h.additiveAnimations[P];if(0===b.weight)continue;const T=M.i.gb[2],N=M.i.gb[3],V=M.i.Quaternion[1];b.currentValue.decompose(N,V,T),N.multiplyToRef(g,N),M.m.LerpToRef(g,N,b.weight,g),O.multiplyToRef(V,V),M.g.SlerpToRef(O,V,b.weight,O),T.scaleAndAddToRef(b.weight,I)}const e=N?N._animationState.workValue:M.i.Matrix[0].clone();return M.d.ComposeToRef(g,O,I,e),e}function K(h,b){if(0===h.totalWeight&&0===h.totalAdditiveWeight)return b;const I=h.animations[0],g=h.originalValue;let O=b;if(0===h.totalWeight&&h.totalAdditiveWeight>0)O.p(g);else if(1===h.animations.length){if(M.g.SlerpToRef(g,I.currentValue,Math.min(1,h.totalWeight),O),0===h.totalAdditiveWeight)return O}else if(h.animations.length>1){let I,T,N=1;if(h.totalWeight<1){const b=1-h.totalWeight;I=[],T=[],I.push(g),T.push(b)}else{if(2===h.animations.length&&(M.g.SlerpToRef(h.animations[0].currentValue,h.animations[1].currentValue,h.animations[1].weight/h.totalWeight,b),0===h.totalAdditiveWeight))return b;I=[],T=[],N=h.totalWeight}for(let b=0;b<h.animations.length;b++){const g=h.animations[b];I.push(g.currentValue),T.push(g.weight/N)}let V=0;for(let h=0;h<I.length;)h?(V+=T[h],M.g.SlerpToRef(O,I[h],T[h]/V,O),h++):(M.g.SlerpToRef(I[h],I[h+1],T[h+1]/(T[h]+T[h+1]),b),O=b,V=T[h]+T[h+1],h+=2)}for(let T=0;T<h.additiveAnimations.length;T++){const b=h.additiveAnimations[T];0!==b.weight&&(O.multiplyToRef(b.currentValue,M.i.Quaternion[0]),M.g.SlerpToRef(O,M.i.Quaternion[0],b.weight,O))}return O}var o,R,L=I(11128);o=L.e,(R=V.d)&&(R.prototype.copyAnimationRange=function(h,b,I){let O=arguments.length>3&&void 0!==arguments[3]&&arguments[3],T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new g.b(this.name,"_matrix",h.animations[0].framePerSecond,g.b.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const N=h.animations[0].getRange(b);if(!N)return!1;const V=N.from,M=N.to,y=h.animations[0].getKeys(),q=h.length,e=h.getParent(),P=this.getParent(),K=O&&e&&q&&this.length&&q!==this.length,o=K&&P&&e?P.length/e.length:1,R=O&&!P&&T&&(1!==T.x||1!==T.y||1!==T.z),L=this.animations[0].getKeys();let i,w,z;for(let g=0,F=y.length;g<F;g++)i=y[g],i.frame>=V&&i.frame<=M&&(O?(z=i.value.clone(),K?(w=z.getTranslation(),z.setTranslation(w.scaleInPlace(o))):R&&T?(w=z.getTranslation(),z.setTranslation(w.multiplyInPlace(T))):z=i.value):z=i.value,L.push({frame:i.frame+I,value:z}));return this.animations[0].createRange(b,V+I,M+I),!0}),o&&(o.prototype._animate=function(h){if(!this.animationsEnabled)return;const b=q.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=b}this.deltaTime=void 0!==h?h:this.useConstantAnimationDeltaTime?16:(b-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=b;const I=this._activeAnimatables;if(0===I.length)return;this._animationTime+=this.deltaTime;const O=this._animationTime;for(let g=0;g<I.length;g++){const h=I[g];!h._animate(O)&&h.disposeOnEnd&&g--}!function(h){if(h._registeredForLateAnimationBindings.length){for(let b=0;b<h._registeredForLateAnimationBindings.length;b++){const I=h._registeredForLateAnimationBindings.data[b];for(const h in I._lateAnimationHolders){const b=I._lateAnimationHolders[h],O=b.animations[0],T=b.originalValue;if(void 0===T||null===T)continue;const N=g.b.AllowMatrixDecomposeForInterpolation&&T.m;let V=I[h];if(N)V=P(b);else if(void 0!==T.w)V=K(b,V||M.g.Identity());else{let h=0,I=1;const N=O&&O._animationState.loopMode===g.b.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(b.totalWeight<1)V=N?T.clone?T.clone():T:O&&T.scale?T.scale(1-b.totalWeight):O?T*(1-b.totalWeight):T.clone?T.clone():T;else if(O){I=b.totalWeight;const g=O.weight/I;V=1!==g?O.currentValue.scale?O.currentValue.scale(g):O.currentValue*g:O.currentValue,N&&(V.addToRef?V.addToRef(T,V):V+=T),h=1}for(let g=h;g<b.animations.length;g++){const h=b.animations[g],O=h.weight/I;O&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(O,V):V+=h.currentValue*O)}for(let g=0;g<b.additiveAnimations.length;g++){const h=b.additiveAnimations[g],I=h.weight;I&&(h.currentValue.scaleAndAddToRef?h.currentValue.scaleAndAddToRef(I,V):V+=h.currentValue*I)}}I[h]=V}I._lateAnimationHolders={}}h._registeredForLateAnimationBindings.reset()}}(this)},o.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((h,b)=>h.playOrder-b.playOrder))},o.prototype.beginWeightedAnimation=function(h,b,I){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,O=arguments.length>4?arguments[4]:void 0,T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,N=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,M=arguments.length>8?arguments[8]:void 0,y=arguments.length>9?arguments[9]:void 0,q=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const e=this.beginAnimation(h,b,I,O,T,N,V,!1,M,y,q);return e.weight=g,e},o.prototype.beginAnimation=function(h,b,I,g){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,T=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0,V=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],M=arguments.length>8?arguments[8]:void 0,y=arguments.length>9?arguments[9]:void 0,q=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(O<0){const h=b;b=I,I=h,O=-O}b>I&&(O=-O),V&&this.stopAnimation(h,void 0,M),N||(N=new e(this,h,b,I,g,O,T,void 0,y,q));const P=!M||M(h);if(h.animations&&P&&N.appendAnimations(h,h.animations),h.getAnimatables){const q=h.getAnimatables();for(let h=0;h<q.length;h++)this.beginAnimation(q[h],b,I,g,O,T,N,V,M,y)}return N.reset(),N},o.prototype.beginHierarchyAnimation=function(h,b,I,g,O){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,N=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,M=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],y=arguments.length>9?arguments[9]:void 0,q=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const e=h.getDescendants(b),P=[];P.push(this.beginAnimation(h,I,g,O,T,N,V,M,y,void 0,q));for(const K of e)P.push(this.beginAnimation(K,I,g,O,T,N,V,M,y,void 0,q));return P},o.prototype.beginDirectAnimation=function(h,b,I,g,O){let T=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(T<0){const h=I;I=g,g=h,T=-T}return I>g&&(T=-T),new e(this,h,I,g,O,T,arguments.length>6?arguments[6]:void 0,b,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},o.prototype.beginDirectHierarchyAnimation=function(h,b,I,g,O,T,N,V,M){let y=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const q=h.getDescendants(b),e=[];e.push(this.beginDirectAnimation(h,I,g,O,T,N,V,M,y));for(const P of q)e.push(this.beginDirectAnimation(P,I,g,O,T,N,V,M,y));return e},o.prototype.getAnimatableByTarget=function(h){for(let b=0;b<this._activeAnimatables.length;b++)if(this._activeAnimatables[b].target===h)return this._activeAnimatables[b];return null},o.prototype.getAllAnimatablesByTarget=function(h){const b=[];for(let I=0;I<this._activeAnimatables.length;I++)this._activeAnimatables[I].target===h&&b.push(this._activeAnimatables[I]);return b},o.prototype.stopAnimation=function(h,b,I){const g=this.getAllAnimatablesByTarget(h);for(const O of g)O.stop(b,I)},o.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let h=0;h<this._activeAnimatables.length;h++)this._activeAnimatables[h].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const h of this.animationGroups)h.stop()});class i{getClassName(){return"TargetedAnimation"}serialize(){const h={};return h.animation=this.animation.serialize(),h.targetId=this.target.id,h}}class w{get mask(){return this._mask}set mask(h){this._mask!==h&&(this._mask=h,this.syncWithMask(!0))}syncWithMask(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||h){this._numActiveAnimatables=0;for(let h=0;h<this._animatables.length;++h){const b=this._animatables[h];!this.mask||this.mask.disabled||this.mask.retainsTarget(b.target.name)?(this._numActiveAnimatables++,b.paused&&b.restart()):b.paused||b.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let h=0;h<this._animatables.length;++h){const b=this._animatables[h];this.mask.retainsTarget(b.target.name)||(b.stop(),this._animatables.splice(h,1),--h)}for(let h=0;h<this._targetedAnimations.length;h++){const b=this._targetedAnimations[h];this.mask.retainsTarget(b.target.name)||(this._targetedAnimations.splice(h,1),--h)}}}get from(){return this._from}set from(h){if(this._from!==h){this._from=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].fromFrame=this._from}}}get to(){return this._to}set to(h){if(this._to!==h){this._to=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(h){if(this._speedRatio!==h){this._speedRatio=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(h){if(this._loopAnimation!==h){this._loopAnimation=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(h){if(this._isAdditive!==h){this._isAdditive=h;for(let h=0;h<this._animatables.length;h++){this._animatables[h].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(h){this._weight!==h&&(this._weight=h,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(h){if(this._playOrder!==h&&(this._playOrder=h,this._animatables.length>0)){for(let h=0;h<this._animatables.length;h++)this._animatables[h].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(h){if(this._enableBlending!==h&&(this._enableBlending=h,null!==h))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.enableBlending=h}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(h){if(this._blendingSpeed!==h&&(this._blendingSpeed=h,null!==h))for(let b=0;b<this._targetedAnimations.length;++b)this._targetedAnimations[b].animation.blendingSpeed=h}getLength(h,b){h=h??this._from;return((b=b??this._to)-h)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(h){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],I=arguments.length>2&&void 0!==arguments[2]&&arguments[2],g=arguments.length>3?arguments[3]:void 0;if(0===h.length)return null;g=g??h[0].weight;let O=Number.MAX_VALUE,T=-Number.MAX_VALUE;if(I)for(const V of h)V.from<O&&(O=V.from),V.to>T&&(T=V.to);const N=new w(h[0].name+"_merged",h[0]._scene,g);for(const V of h){I&&V.normalize(O,T);for(const h of V.targetedAnimations)N.addTargetedAnimation(h.animation,h.target);b&&V.dispose()}return N}constructor(h){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=h,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new O.b,this.onAnimationLoopObservable=new O.b,this.onAnimationGroupLoopObservable=new O.b,this.onAnimationGroupEndObservable=new O.b,this.onAnimationGroupPauseObservable=new O.b,this.onAnimationGroupPlayObservable=new O.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=b||T.e.LastCreatedScene,this._weight=I,this._playOrder=g,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(h,b){const I=new i;I.animation=h,I.target=b;const g=h.getKeys();return this._from>g[0].frame&&(this._from=g[0].frame),this._to<g[g.length-1].frame&&(this._to=g[g.length-1].frame),null!==this._enableBlending&&(h.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(h.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(I),this._shouldStart=!0,I}removeTargetedAnimation(h){for(let b=this._targetedAnimations.length-1;b>-1;b--){this._targetedAnimations[b].animation===h&&this._targetedAnimations.splice(b,1)}}normalize(){let h=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==h&&(h=this._from),null==b&&(b=this._to);for(let I=0;I<this._targetedAnimations.length;I++){const g=this._targetedAnimations[I].animation.getKeys(),O=g[0],T=g[g.length-1];if(O.frame>h){const b={frame:h,value:O.value,inTangent:O.inTangent,outTangent:O.outTangent,interpolation:O.interpolation};g.splice(0,0,b)}if(T.frame<b){const h={frame:b,value:T.value,inTangent:T.inTangent,outTangent:T.outTangent,interpolation:T.interpolation};g.push(h)}}return this._from=h,this._to=b,this}_processLoop(h,b,I){h.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(b),this._animationLoopFlags[I]||(this._animationLoopFlags[I]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0],b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,I=arguments.length>2?arguments[2]:void 0,g=arguments.length>3?arguments[3]:void 0,O=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=h,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let T=0;T<this._targetedAnimations.length;T++){const N=this._targetedAnimations[T],V=this._scene.beginDirectAnimation(N.target,[N.animation],void 0!==I?I:this._from,void 0!==g?g:this._to,h,b,void 0,void 0,void 0!==O?O:this._isAdditive);V.weight=this._weight,V.playOrder=this._playOrder,V.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(N),this._checkAnimationGroupEnded(V)},this._processLoop(V,N,T),this._animatables.push(V)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=b,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let h=0;h<this._animatables.length;h++){this._animatables[h].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(h){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==h&&(this.loopAnimation=h),this.restart()):(this.stop(),this.start(h,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].reset()}return this}restart(){if(!this._isStarted)return this;for(let h=0;h<this._animatables.length;h++){this._animatables[h].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const b=this._animatables.slice();for(let g=0;g<b.length;g++)b[g].stop(void 0,void 0,!0,h);let I=0;for(let g=0;g<this._scene._activeAnimatables.length;g++){const b=this._scene._activeAnimatables[g];b._runtimeAnimations.length>0?this._scene._activeAnimatables[I++]=b:h&&this._checkAnimationGroupEnded(b,h)}return this._scene._activeAnimatables.length=I,this._isStarted=!1,this}setWeightForAllAnimatables(h){for(let b=0;b<this._animatables.length;b++){this._animatables[b].weight=h}return this}syncAllAnimationsWith(h){for(let b=0;b<this._animatables.length;b++){this._animatables[b].syncWith(h)}return this}goToFrame(h){if(!this._isStarted)return this;for(let b=0;b<this._animatables.length;b++){this._animatables[b].goToFrame(h)}return this}getCurrentFrame(){var h;return(null===(h=this.animatables[0])||void 0===h?void 0:h.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const h=this._scene.animationGroups.indexOf(this);if(h>-1&&this._scene.animationGroups.splice(h,1),this._parentContainer){const h=this._parentContainer.animationGroups.indexOf(this);h>-1&&this._parentContainer.animationGroups.splice(h,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(h){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const I=this._animatables.indexOf(h);I>-1&&this._animatables.splice(I,1),0===this._animatables.length&&(this._isStarted=!1,b||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(h,b){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const g=new w(h||this.name,this._scene,this._weight,this._playOrder);g._from=this.from,g._to=this.to,g._speedRatio=this.speedRatio,g._loopAnimation=this.loopAnimation,g._isAdditive=this.isAdditive,g._enableBlending=this.enableBlending,g._blendingSpeed=this.blendingSpeed,g.metadata=this.metadata,g.mask=this.mask;for(const O of this._targetedAnimations)g.addTargetedAnimation(I?O.animation.clone():O.animation,b?b(O.target):O.target);return g}serialize(){const h={};h.name=this.name,h.from=this.from,h.to=this.to,h.speedRatio=this.speedRatio,h.loopAnimation=this.loopAnimation,h.isAdditive=this.isAdditive,h.weight=this.weight,h.playOrder=this.playOrder,h.enableBlending=this.enableBlending,h.blendingSpeed=this.blendingSpeed,h.targetedAnimations=[];for(let b=0;b<this.targetedAnimations.length;b++){const I=this.targetedAnimations[b];h.targetedAnimations[b]=I.serialize()}return N.b&&N.b.HasTags(this)&&(h.tags=N.b.GetTags(this)),this.metadata&&(h.metadata=this.metadata),h}static Parse(h,b){const I=new w(h.name,b,h.weight,h.playOrder);for(let O=0;O<h.targetedAnimations.length;O++){const T=h.targetedAnimations[O],N=g.b.Parse(T.animation),V=T.targetId;if("influence"===T.animation.property){const h=b.getMorphTargetById(V);h&&I.addTargetedAnimation(N,h)}else{const h=b.getNodeById(V);null!=h&&I.addTargetedAnimation(N,h)}}return N.b&&N.b.AddTagsTo(I,h.tags),null!==h.from&&null!==h.to&&I.normalize(h.from,h.to),void 0!==h.speedRatio&&(I._speedRatio=h.speedRatio),void 0!==h.loopAnimation&&(I._loopAnimation=h.loopAnimation),void 0!==h.isAdditive&&(I._isAdditive=h.isAdditive),void 0!==h.weight&&(I._weight=h.weight),void 0!==h.playOrder&&(I._playOrder=h.playOrder),void 0!==h.enableBlending&&(I._enableBlending=h.enableBlending),void 0!==h.blendingSpeed&&(I._blendingSpeed=h.blendingSpeed),void 0!==h.metadata&&(I.metadata=h.metadata),I}static MakeAnimationAdditive(h,b,I){let O;O="object"===typeof b?b:{referenceFrame:b,range:I,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let T=h;O.cloneOriginalAnimationGroup&&(T=h.clone(O.clonedAnimationGroupName||T.name));const N=T.targetedAnimations;for(let V=0;V<N.length;V++){const h=N[V];h.animation=g.b.MakeAnimationAdditive(h.animation,O)}if(T.isAdditive=!0,O.clipKeys){let h=Number.MAX_VALUE,b=-Number.MAX_VALUE;const I=T.targetedAnimations;for(let g=0;g<I.length;g++){const O=I[g].animation.getKeys();h>O[0].frame&&(h=O[0].frame),b<O[O.length-1].frame&&(b=O[O.length-1].frame)}T._from=h,T._to=b}return T}static ClipKeys(h,b,I,g,O){const T=h.clone(g||h.name);return w.ClipKeysInPlace(T,b,I,O)}static ClipKeysInPlace(h,b,I,g){return w.ClipInPlace(h,b,I,g,!1)}static ClipFrames(h,b,I,g,O){const T=h.clone(g||h.name);return w.ClipFramesInPlace(T,b,I,O)}static ClipFramesInPlace(h,b,I,g){return w.ClipInPlace(h,b,I,g,!0)}static ClipInPlace(h,b,I,g){let O=arguments.length>4&&void 0!==arguments[4]&&arguments[4],T=Number.MAX_VALUE,N=-Number.MAX_VALUE;const V=h.targetedAnimations;for(let M=0;M<V.length;M++){const h=V[M],y=g?h.animation:h.animation.clone();O&&(y.createKeyForFrame(b),y.createKeyForFrame(I));const q=y.getKeys(),e=[];let P=Number.MAX_VALUE;for(let g=0;g<q.length;g++){const h=q[g];if(!O&&g>=b&&g<=I||O&&h.frame>=b&&h.frame<=I){const b={frame:h.frame,value:h.value.clone?h.value.clone():h.value,inTangent:h.inTangent,outTangent:h.outTangent,interpolation:h.interpolation,lockedTangent:h.lockedTangent};P===Number.MAX_VALUE&&(P=b.frame),b.frame-=P,e.push(b)}}0!==e.length?(T>e[0].frame&&(T=e[0].frame),N<e[e.length-1].frame&&(N=e[e.length-1].frame),y.setKeys(e,!0),h.animation=y):(V.splice(M,1),M--)}return h._from=T,h._to=N,h}getClassName(){return"AnimationGroup"}toString(h){let b="Name: "+this.name;return b+=", type: "+this.getClassName(),h&&(b+=", from: "+this._from,b+=", to: "+this._to,b+=", isStarted: "+this._isStarted,b+=", speedRatio: "+this._speedRatio,b+=", targetedAnimations length: "+this._targetedAnimations.length,b+=", animatables length: "+this._animatables),b}}}}]);