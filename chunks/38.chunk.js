/*! For license information please see seq7h8.38.d6605f38.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11053:(G,D,N)=>{N.r(D),N.d(D,{getAnalytics:()=>xG,getGoogleAnalyticsClientId:()=>MG,initializeAnalytics:()=>kG,isSupported:()=>aG,logEvent:()=>ND,setAnalyticsCollectionEnabled:()=>GD,setConsent:()=>TD,setCurrentScreen:()=>EG,setDefaultEventParameters:()=>DD,setUserId:()=>eG,setUserProperties:()=>fG,settings:()=>uG});var T=N(11039),o=N(11050),Z=N(11047),n=N(11041);let C,P;const r=new WeakMap,v=new WeakMap,q=new WeakMap,g=new WeakMap,X=new WeakMap;let W={get(G,D,N){if(G instanceof IDBTransaction){if("done"===D)return v.get(G);if("objectStoreNames"===D)return G.objectStoreNames||q.get(G);if("store"===D)return N.objectStoreNames[1]?void 0:N.objectStore(N.objectStoreNames[0])}return y(G[D])},set:(G,D,N)=>(G[D]=N,!0),has:(G,D)=>G instanceof IDBTransaction&&("done"===D||"store"===D)||D in G};function j(G){return G!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(P||(P=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(G)?function(){for(var D=arguments.length,N=new Array(D),T=0;T<D;T++)N[T]=arguments[T];return G.apply(h(this),N),y(r.get(this))}:function(){for(var D=arguments.length,N=new Array(D),T=0;T<D;T++)N[T]=arguments[T];return y(G.apply(h(this),N))}:function(D){for(var N=arguments.length,T=new Array(N>1?N-1:0),o=1;o<N;o++)T[o-1]=arguments[o];const Z=G.call(h(this),D,...T);return q.set(Z,D.sort?D.sort():[D]),y(Z)}}function Y(G){return"function"===typeof G?j(G):(G instanceof IDBTransaction&&function(G){if(v.has(G))return;const D=new Promise(((D,N)=>{const T=()=>{G.removeEventListener("complete",o),G.removeEventListener("error",Z),G.removeEventListener("abort",Z)},o=()=>{D(),T()},Z=()=>{N(G.error||new DOMException("AbortError","AbortError")),T()};G.addEventListener("complete",o),G.addEventListener("error",Z),G.addEventListener("abort",Z)}));v.set(G,D)}(G),D=G,(C||(C=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((G=>D instanceof G))?new Proxy(G,W):G);var D}function y(G){if(G instanceof IDBRequest)return function(G){const D=new Promise(((D,N)=>{const T=()=>{G.removeEventListener("success",o),G.removeEventListener("error",Z)},o=()=>{D(y(G.result)),T()},Z=()=>{N(G.error),T()};G.addEventListener("success",o),G.addEventListener("error",Z)}));return D.then((D=>{D instanceof IDBCursor&&r.set(D,G)})).catch((()=>{})),X.set(D,G),D}(G);if(g.has(G))return g.get(G);const D=Y(G);return D!==G&&(g.set(G,D),X.set(D,G)),D}const h=G=>X.get(G);const m=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],L=new Map;function w(G,D){if(!(G instanceof IDBDatabase)||D in G||"string"!==typeof D)return;if(L.get(D))return L.get(D);const N=D.replace(/FromIndex$/,""),T=D!==N,o=R.includes(N);if(!(N in(T?IDBIndex:IDBObjectStore).prototype)||!o&&!m.includes(N))return;const Z=async function(G){const D=this.transaction(G,o?"readwrite":"readonly");let Z=D.store;for(var n=arguments.length,C=new Array(n>1?n-1:0),P=1;P<n;P++)C[P-1]=arguments[P];return T&&(Z=Z.index(C.shift())),(await Promise.all([Z[N](...C),o&&D.done]))[0]};return L.set(D,Z),Z}W=(G=>({...G,get:(D,N,T)=>w(D,N)||G.get(D,N,T),has:(D,N)=>!!w(D,N)||G.has(D,N)}))(W);const B="@firebase/installations",F="0.6.4",S=1e4,V=`w:${F}`,U="FIS_v2",z=36e5,i={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},J=new Z.g("installations","Installations",i);function p(G){return G instanceof Z.h&&G.code.includes("request-failed")}function t(G){let{projectId:D}=G;return`https://firebaseinstallations.googleapis.com/v1/projects/${D}/installations`}function H(G){return{token:G.token,requestStatus:2,expiresIn:(D=G.expiresIn,Number(D.replace("s","000"))),creationTime:Date.now()};var D}async function s(G,D){const N=(await D.json()).error;return J.create("request-failed",{requestName:G,serverCode:N.code,serverMessage:N.message,serverStatus:N.status})}function c(G){let{apiKey:D}=G;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":D})}function K(G,D){let{refreshToken:N}=D;const T=c(G);return T.append("Authorization",function(G){return`${U} ${G}`}(N)),T}async function b(G){const D=await G();return D.status>=500&&D.status<600?G():D}function O(G){return new Promise((D=>{setTimeout(D,G)}))}const Q=/^[cdef][\w-]{21}$/;function A(){try{const G=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(G),G[0]=112+G[0]%16;const D=function(G){const D=(N=G,btoa(String.fromCharCode(...N)).replace(/\+/g,"-").replace(/\//g,"_"));var N;return D.substr(0,22)}(G);return Q.test(D)?D:""}catch(G){return""}}function I(G){return`${G.appName}!${G.appId}`}const d=new Map;function u(G,D){const N=I(G);l(N,D),function(G,D){const N=k();N&&N.postMessage({key:G,fid:D});a()}(N,D)}function l(G,D){const N=d.get(G);if(N)for(const T of N)T(D)}let x=null;function k(){return!x&&"BroadcastChannel"in self&&(x=new BroadcastChannel("[Firebase] FID Change"),x.onmessage=G=>{l(G.data.key,G.data.fid)}),x}function a(){0===d.size&&x&&(x.close(),x=null)}const E="firebase-installations-store";let M=null;function e(){return M||(M=function(G,D){let{blocked:N,upgrade:T,blocking:o,terminated:Z}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=indexedDB.open(G,D),C=y(n);return T&&n.addEventListener("upgradeneeded",(G=>{T(y(n.result),G.oldVersion,G.newVersion,y(n.transaction))})),N&&n.addEventListener("blocked",(()=>N())),C.then((G=>{Z&&G.addEventListener("close",(()=>Z())),o&&G.addEventListener("versionchange",(()=>o()))})).catch((()=>{})),C}("firebase-installations-database",1,{upgrade:(G,D)=>{if(0===D)G.createObjectStore(E)}})),M}async function f(G,D){const N=I(G),T=(await e()).transaction(E,"readwrite"),o=T.objectStore(E),Z=await o.get(N);return await o.put(D,N),await T.done,Z&&Z.fid===D.fid||u(G,D.fid),D}async function GG(G){const D=I(G),N=(await e()).transaction(E,"readwrite");await N.objectStore(E).delete(D),await N.done}async function DG(G,D){const N=I(G),T=(await e()).transaction(E,"readwrite"),o=T.objectStore(E),Z=await o.get(N),n=D(Z);return void 0===n?await o.delete(N):await o.put(n,N),await T.done,!n||Z&&Z.fid===n.fid||u(G,n.fid),n}async function NG(G){let D;const N=await DG(G.appConfig,(N=>{const T=function(G){const D=G||{fid:A(),registrationStatus:0};return ZG(D)}(N),o=function(G,D){if(0===D.registrationStatus){if(!navigator.onLine){return{installationEntry:D,registrationPromise:Promise.reject(J.create("app-offline"))}}const N={fid:D.fid,registrationStatus:1,registrationTime:Date.now()},T=async function(G,D){try{const N=await async function(G,D){let{appConfig:N,heartbeatServiceProvider:T}=G,{fid:o}=D;const Z=t(N),n=c(N),C=T.getImmediate({optional:!0});if(C){const G=await C.getHeartbeatsHeader();G&&n.append("x-firebase-client",G)}const P={fid:o,authVersion:U,appId:N.appId,sdkVersion:V},r={method:"POST",headers:n,body:JSON.stringify(P)},v=await b((()=>fetch(Z,r)));if(v.ok){const G=await v.json();return{fid:G.fid||o,registrationStatus:2,refreshToken:G.refreshToken,authToken:H(G.authToken)}}throw await s("Create Installation",v)}(G,D);return f(G.appConfig,N)}catch(N){throw p(N)&&409===N.customData.serverCode?await GG(G.appConfig):await f(G.appConfig,{fid:D.fid,registrationStatus:0}),N}}(G,N);return{installationEntry:N,registrationPromise:T}}return 1===D.registrationStatus?{installationEntry:D,registrationPromise:TG(G)}:{installationEntry:D}}(G,T);return D=o.registrationPromise,o.installationEntry}));return""===N.fid?{installationEntry:await D}:{installationEntry:N,registrationPromise:D}}async function TG(G){let D=await oG(G.appConfig);for(;1===D.registrationStatus;)await O(100),D=await oG(G.appConfig);if(0===D.registrationStatus){const{installationEntry:D,registrationPromise:N}=await NG(G);return N||D}return D}function oG(G){return DG(G,(G=>{if(!G)throw J.create("installation-not-found");return ZG(G)}))}function ZG(G){return 1===(D=G).registrationStatus&&D.registrationTime+S<Date.now()?{fid:G.fid,registrationStatus:0}:G;var D}async function nG(G,D){let{appConfig:N,heartbeatServiceProvider:T}=G;const o=function(G,D){let{fid:N}=D;return`${t(G)}/${N}/authTokens:generate`}(N,D),Z=K(N,D),n=T.getImmediate({optional:!0});if(n){const G=await n.getHeartbeatsHeader();G&&Z.append("x-firebase-client",G)}const C={installation:{sdkVersion:V,appId:N.appId}},P={method:"POST",headers:Z,body:JSON.stringify(C)},r=await b((()=>fetch(o,P)));if(r.ok){return H(await r.json())}throw await s("Generate Auth Token",r)}async function CG(G){let D,N=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const T=await DG(G.appConfig,(T=>{if(!rG(T))throw J.create("not-registered");const o=T.authToken;if(!N&&function(G){return 2===G.requestStatus&&!function(G){const D=Date.now();return D<G.creationTime||G.creationTime+G.expiresIn<D+z}(G)}(o))return T;if(1===o.requestStatus)return D=async function(G,D){let N=await PG(G.appConfig);for(;1===N.authToken.requestStatus;)await O(100),N=await PG(G.appConfig);const T=N.authToken;return 0===T.requestStatus?CG(G,D):T}(G,N),T;{if(!navigator.onLine)throw J.create("app-offline");const N=function(G){const D={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},G),{authToken:D})}(T);return D=async function(G,D){try{const N=await nG(G,D),T=Object.assign(Object.assign({},D),{authToken:N});return await f(G.appConfig,T),N}catch(N){if(!p(N)||401!==N.customData.serverCode&&404!==N.customData.serverCode){const N=Object.assign(Object.assign({},D),{authToken:{requestStatus:0}});await f(G.appConfig,N)}else await GG(G.appConfig);throw N}}(G,N),N}}));return D?await D:T.authToken}function PG(G){return DG(G,(G=>{if(!rG(G))throw J.create("not-registered");const D=G.authToken;return 1===(N=D).requestStatus&&N.requestTime+S<Date.now()?Object.assign(Object.assign({},G),{authToken:{requestStatus:0}}):G;var N}))}function rG(G){return void 0!==G&&2===G.registrationStatus}async function vG(G){let D=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const N=G;await async function(G){const{registrationPromise:D}=await NG(G);D&&await D}(N);return(await CG(N,D)).token}function qG(G){return J.create("missing-app-config-values",{valueName:G})}const gG="installations",XG=G=>{const D=G.getProvider("app").getImmediate(),N=function(G){if(!G||!G.options)throw qG("App Configuration");if(!G.name)throw qG("App Name");const D=["projectId","apiKey","appId"];for(const N of D)if(!G.options[N])throw qG(N);return{appName:G.name,projectId:G.options.projectId,apiKey:G.options.apiKey,appId:G.options.appId}}(D);return{app:D,appConfig:N,heartbeatServiceProvider:(0,T.z)(D,"heartbeat"),_delete:()=>Promise.resolve()}},WG=G=>{const D=G.getProvider("app").getImmediate(),N=(0,T.z)(D,gG).getImmediate();return{getId:()=>async function(G){const D=G,{installationEntry:N,registrationPromise:T}=await NG(D);return T?T.catch(console.error):CG(D).catch(console.error),N.fid}(N),getToken:G=>vG(N,G)}};(0,T.B)(new n.f(gG,XG,"PUBLIC")),(0,T.B)(new n.f("installations-internal",WG,"PRIVATE")),(0,T.V)(B,F),(0,T.V)(B,F,"esm2017");const jG="analytics",YG="https://www.googletagmanager.com/gtag/js",yG=new o.h("@firebase/analytics"),hG={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},mG=new Z.g("analytics","Analytics",hG);function RG(G){if(!G.startsWith(YG)){const D=mG.create("invalid-gtag-resource",{gtagURL:G});return yG.warn(D.message),""}return G}function LG(G){return Promise.all(G.map((G=>G.catch((G=>G)))))}function wG(G,D){const N=function(G,D){let N;return window.trustedTypes&&(N=window.trustedTypes.createPolicy(G,D)),N}("firebase-js-sdk-policy",{createScriptURL:RG}),T=document.createElement("script"),o=`${YG}?l=${G}&id=${D}`;T.src=N?null===N||void 0===N?void 0:N.createScriptURL(o):o,T.async=!0,document.head.appendChild(T)}function BG(G,D,N,T){return async function(o){try{for(var Z=arguments.length,n=new Array(Z>1?Z-1:0),C=1;C<Z;C++)n[C-1]=arguments[C];if("event"===o){const[T,o]=n;await async function(G,D,N,T,o){try{let Z=[];if(o&&o.send_to){let G=o.send_to;Array.isArray(G)||(G=[G]);const T=await LG(N);for(const N of G){const G=T.find((G=>G.measurementId===N)),o=G&&D[G.appId];if(!o){Z=[];break}Z.push(o)}}0===Z.length&&(Z=Object.values(D)),await Promise.all(Z),G("event",T,o||{})}catch(Z){yG.error(Z)}}(G,D,N,T,o)}else if("config"===o){const[o,Z]=n;await async function(G,D,N,T,o,Z){const n=T[o];try{if(n)await D[n];else{const G=(await LG(N)).find((G=>G.measurementId===o));G&&await D[G.appId]}}catch(C){yG.error(C)}G("config",o,Z)}(G,D,N,T,o,Z)}else if("consent"===o){const[D]=n;G("consent","update",D)}else if("get"===o){const[D,N,T]=n;G("get",D,N,T)}else if("set"===o){const[D]=n;G("set",D)}else G(o,...n)}catch(P){yG.error(P)}}}const FG=new class{constructor(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=G,this.intervalMillis=D}getThrottleMetadata(G){return this.throttleMetadata[G]}setThrottleMetadata(G,D){this.throttleMetadata[G]=D}deleteThrottleMetadata(G){delete this.throttleMetadata[G]}};function SG(G){return new Headers({Accept:"application/json","x-goog-api-key":G})}async function VG(G){let D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FG,N=arguments.length>2?arguments[2]:void 0;const{appId:T,apiKey:o,measurementId:Z}=G.options;if(!T)throw mG.create("no-app-id");if(!o){if(Z)return{measurementId:Z,appId:T};throw mG.create("no-api-key")}const n=D.getThrottleMetadata(T)||{backoffCount:0,throttleEndTimeMillis:Date.now()},C=new zG;return setTimeout((async()=>{C.abort()}),void 0!==N?N:6e4),UG({appId:T,apiKey:o,measurementId:Z},n,C,D)}async function UG(G,D,N){let{throttleEndTimeMillis:T,backoffCount:o}=D,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:FG;var C;const{appId:P,measurementId:r}=G;try{await function(G,D){return new Promise(((N,T)=>{const o=Math.max(D-Date.now(),0),Z=setTimeout(N,o);G.addEventListener((()=>{clearTimeout(Z),T(mG.create("fetch-throttle",{throttleEndTimeMillis:D}))}))}))}(N,T)}catch(v){if(r)return yG.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${r} provided in the "measurementId" field in the local Firebase config. [${null===v||void 0===v?void 0:v.message}]`),{appId:P,measurementId:r};throw v}try{const D=await async function(G){var D;const{appId:N,apiKey:T}=G,o={method:"GET",headers:SG(T)},Z="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",N),n=await fetch(Z,o);if(200!==n.status&&304!==n.status){let G="";try{const N=await n.json();(null===(D=N.error)||void 0===D?void 0:D.message)&&(G=N.error.message)}catch(C){}throw mG.create("config-fetch-failed",{httpStatus:n.status,responseMessage:G})}return n.json()}(G);return n.deleteThrottleMetadata(P),D}catch(v){const D=v;if(!function(G){if(!(G instanceof Z.h)||!G.customData)return!1;const D=Number(G.customData.httpStatus);return 429===D||500===D||503===D||504===D}(D)){if(n.deleteThrottleMetadata(P),r)return yG.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${r} provided in the "measurementId" field in the local Firebase config. [${null===D||void 0===D?void 0:D.message}]`),{appId:P,measurementId:r};throw v}const T=503===Number(null===(C=null===D||void 0===D?void 0:D.customData)||void 0===C?void 0:C.httpStatus)?(0,Z.s)(o,n.intervalMillis,30):(0,Z.s)(o,n.intervalMillis),q={throttleEndTimeMillis:Date.now()+T,backoffCount:o+1};return n.setThrottleMetadata(P,q),yG.debug(`Calling attemptFetch again in ${T} millis`),UG(G,q,N,n)}}class zG{constructor(){this.listeners=[]}addEventListener(G){this.listeners.push(G)}abort(){this.listeners.forEach((G=>G()))}}let iG,JG;function pG(G){JG=G}function tG(G){iG=G}async function HG(G,D,N,T,o,n,C){var P;const r=VG(G);r.then((D=>{N[D.measurementId]=D.appId,G.options.measurementId&&D.measurementId!==G.options.measurementId&&yG.warn(`The measurement ID in the local Firebase config (${G.options.measurementId}) does not match the measurement ID fetched from the server (${D.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((G=>yG.error(G))),D.push(r);const v=async function(){if(!(0,Z.T)())return yG.warn(mG.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,Z.ab)()}catch(G){return yG.warn(mG.create("indexeddb-unavailable",{errorInfo:null===G||void 0===G?void 0:G.toString()}).message),!1}return!0}().then((G=>G?T.getId():void 0)),[q,g]=await Promise.all([r,v]);(function(G){const D=window.document.getElementsByTagName("script");for(const N of Object.values(D))if(N.src&&N.src.includes(YG)&&N.src.includes(G))return N;return null})(n)||wG(n,q.measurementId),JG&&(o("consent","default",JG),pG(void 0)),o("ma",new Date);const X=null!==(P=null===C||void 0===C?void 0:C.config)&&void 0!==P?P:{};return X.origin="firebase",X.update=!0,null!=g&&(X.firebase_id=g),o("config",q.measurementId,X),iG&&(o("set",iG),tG(void 0)),q.measurementId}class sG{constructor(G){this.app=G}_delete(){return delete cG[this.app.options.appId],Promise.resolve()}}let cG={},KG=[];const bG={};let OG,QG,AG="dataLayer",IG="gtag",dG=!1;function uG(G){if(dG)throw mG.create("already-initialized");G.dataLayerName&&(AG=G.dataLayerName),G.gtagName&&(IG=G.gtagName)}function lG(G,D,N){!function(){const G=[];if((0,Z.O)()&&G.push("This is a browser extension environment."),(0,Z.j)()||G.push("Cookies are not available."),G.length>0){const D=G.map(((G,D)=>`(${D+1}) ${G}`)).join(" "),N=mG.create("invalid-analytics-context",{errorInfo:D});yG.warn(N.message)}}();const T=G.options.appId;if(!T)throw mG.create("no-app-id");if(!G.options.apiKey){if(!G.options.measurementId)throw mG.create("no-api-key");yG.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${G.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=cG[T])throw mG.create("already-exists",{id:T});if(!dG){!function(G){let D=[];Array.isArray(window[G])?D=window[G]:window[G]=D}(AG);const{wrappedGtag:G,gtagCore:D}=function(G,D,N,T,o){let Z=function(){for(var G=arguments.length,D=new Array(G),N=0;N<G;N++)D[N]=arguments[N];window[T].push(arguments)};return window[o]&&"function"===typeof window[o]&&(Z=window[o]),window[o]=BG(Z,G,D,N),{gtagCore:Z,wrappedGtag:window[o]}}(cG,KG,bG,AG,IG);QG=G,OG=D,dG=!0}cG[T]=HG(G,KG,bG,D,OG,AG,N);return new sG(G)}function xG(){let G=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,T.N)();G=(0,Z.L)(G);const D=(0,T.z)(G,jG);return D.isInitialized()?D.getImmediate():kG(G)}function kG(G){let D=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const N=(0,T.z)(G,jG);if(N.isInitialized()){const G=N.getImmediate();if((0,Z.w)(D,N.getOptions()))return G;throw mG.create("already-initialized")}return N.initialize({options:D})}async function aG(){if((0,Z.O)())return!1;if(!(0,Z.j)())return!1;if(!(0,Z.T)())return!1;try{return await(0,Z.ab)()}catch(G){return!1}}function EG(G,D,N){G=(0,Z.L)(G),async function(G,D,N,T){if(T&&T.global)return G("set",{screen_name:N}),Promise.resolve();G("config",await D,{update:!0,screen_name:N})}(QG,cG[G.app.options.appId],D,N).catch((G=>yG.error(G)))}async function MG(G){return G=(0,Z.L)(G),async function(G,D){const N=await D;return new Promise(((D,T)=>{G("get",N,"client_id",(G=>{G||T(mG.create("no-client-id")),D(G)}))}))}(QG,cG[G.app.options.appId])}function eG(G,D,N){G=(0,Z.L)(G),async function(G,D,N,T){if(T&&T.global)return G("set",{user_id:N}),Promise.resolve();G("config",await D,{update:!0,user_id:N})}(QG,cG[G.app.options.appId],D,N).catch((G=>yG.error(G)))}function fG(G,D,N){G=(0,Z.L)(G),async function(G,D,N,T){if(T&&T.global){const D={};for(const G of Object.keys(N))D[`user_properties.${G}`]=N[G];return G("set",D),Promise.resolve()}G("config",await D,{update:!0,user_properties:N})}(QG,cG[G.app.options.appId],D,N).catch((G=>yG.error(G)))}function GD(G,D){G=(0,Z.L)(G),async function(G,D){const N=await G;window[`ga-disable-${N}`]=!D}(cG[G.app.options.appId],D).catch((G=>yG.error(G)))}function DD(G){QG?QG("set",G):tG(G)}function ND(G,D,N,T){G=(0,Z.L)(G),async function(G,D,N,T,o){if(o&&o.global)G("event",N,T);else{const o=await D;G("event",N,Object.assign(Object.assign({},T),{send_to:o}))}}(QG,cG[G.app.options.appId],D,N,T).catch((G=>yG.error(G)))}function TD(G){QG?QG("consent","update",G):pG(G)}const oD="@firebase/analytics",ZD="0.10.0";(0,T.B)(new n.f(jG,((G,D)=>{let{options:N}=D;return lG(G.getProvider("app").getImmediate(),G.getProvider("installations-internal").getImmediate(),N)}),"PUBLIC")),(0,T.B)(new n.f("analytics-internal",(function(G){try{const D=G.getProvider(jG).getImmediate();return{logEvent:(G,N,T)=>ND(D,G,N,T)}}catch(D){throw mG.create("interop-component-reg-failed",{reason:D})}}),"PRIVATE")),(0,T.V)(oD,ZD),(0,T.V)(oD,ZD,"esm2017")}}]);