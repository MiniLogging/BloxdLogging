"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13656:(a,v,p)=>{p.r(v),p.d(v,{AnimationGroup:()=>X,TargetedAnimation:()=>R});var P=p(12412),b=p(10893),L=p(10939),t=p(11234),V=p(12409),K=p(11240);class C{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(a,v,p,b){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=v,this._target=a,this._scene=p,this._host=b,this._activeTargets=[],v._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===P.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=K.e.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const a={frame:0,value:this._minValue};this._keys.splice(0,0,a)}if(this._target instanceof Array){let a=0;for(const v of this._target)this._preparePath(v,a),this._getOriginalValues(a),a++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const L=v.getEvents();L&&L.length>0&&L.forEach((a=>{this._events.push(a._clone())})),this._enableBlending=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(a){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const p=this._animation.targetPropertyPath;if(p.length>1){let P=a;for(let a=0;a<p.length-1;a++){const v=p[a];if(P=P[v],void 0===P)throw new Error(`Invalid property (${v}) in property path (${p.join(".")})`)}this._targetPath=p[p.length-1],this._activeTargets[v]=P}else this._targetPath=p[0],this._activeTargets[v]=a;if(void 0===this._activeTargets[v][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${p.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let a=0;for(const v of this._target)void 0!==this._originalValue[a]&&this._setValue(v,this._activeTargets[a],this._originalValue[a],-1,a),a++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let a=0;a<this._events.length;a++)this._events[a].isDone=!1}isStopped(){return this._stopped}dispose(){const a=this._animation.runtimeAnimations.indexOf(this);a>-1&&this._animation.runtimeAnimations.splice(a,1)}setValue(a,v){if(this._targetIsArray)for(let p=0;p<this._target.length;p++){const P=this._target[p];this._setValue(P,this._activeTargets[p],a,v,p)}else this._setValue(this._target,this._directTarget,a,v,0)}_getOriginalValues(){let a,v=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const p=this._activeTargets[v];a=p.getLocalMatrix&&"_matrix"===this._targetPath?p.getLocalMatrix():p[this._targetPath],a&&a.clone?this._originalValue[v]=a.clone():this._originalValue[v]=a}_registerTargetForLateAnimationBinding(a,v){const p=a.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(p),p._lateAnimationHolders||(p._lateAnimationHolders={}),p._lateAnimationHolders[a.targetPath]||(p._lateAnimationHolders[a.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:v}),a.isAdditive?(p._lateAnimationHolders[a.targetPath].additiveAnimations.push(a),p._lateAnimationHolders[a.targetPath].totalAdditiveWeight+=a.weight):(p._lateAnimationHolders[a.targetPath].animations.push(a),p._lateAnimationHolders[a.targetPath].totalWeight+=a.weight)}_setValue(a,v,p,b,L){if(this._currentActiveTarget=v,this._weight=b,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const a=v[this._targetPath];a.clone?this._originalBlendValue=a.clone():this._originalBlendValue=a}this._originalBlendValue.m?P.d.AllowMatrixDecomposeForInterpolation?this._currentValue?K.e.DecomposeLerpToRef(this._originalBlendValue,p,this._blendingFactor,this._currentValue):this._currentValue=K.e.DecomposeLerp(this._originalBlendValue,p,this._blendingFactor):this._currentValue?K.e.LerpToRef(this._originalBlendValue,p,this._blendingFactor,this._currentValue):this._currentValue=K.e.Lerp(this._originalBlendValue,p,this._blendingFactor):this._currentValue=P.d._UniversalLerp(this._originalBlendValue,p,this._blendingFactor);const b=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=b}else this._currentValue?this._currentValue.p?this._currentValue.p(p):this._currentValue=p:null!==p&&void 0!==p&&p.clone?this._currentValue=p.clone():this._currentValue=p;-1!==b?this._registerTargetForLateAnimationBinding(this,this._originalValue[L]):this._animationState.loopMode===P.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[L],v[this._targetPath]):v[this._targetPath]=this._originalValue[L]+this._currentValue:v[this._targetPath]=this._currentValue,a.Sg&&a.Sg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(a){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const p=this._animation.getKeys();a<p[0].frame?a=p[0].frame:a>p[p.length-1].frame&&(a=p[p.length-1].frame);const P=this._events;if(P.length)for(let L=0;L<P.length;L++)P[L].onlyOnce||(P[L].isDone=P[L].frame<a);this._currentFrame=a;const b=this._animation._interpolate(a,this._animationState);this.setValue(b,v)}_prepareForSpeedRatioChange(a){const v=this._previousElapsedTime*(this._animation.framePerSecond*a)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-v}animate(a,v,p,b,L){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const V=this._animation,K=V.targetPropertyPath;if(!K||K.length<1)return this._stopped=!0,!1;let C=!0;(v<this._minFrame||v>this._maxFrame)&&(v=this._minFrame),(p<this._minFrame||p>this._maxFrame)&&(p=this._maxFrame);const F=p-v;let u,c=a*(V.framePerSecond*L)/1e3+this._absoluteFrameOffset,f=0,H=!1;const A=b&&this._animationState.loopMode===P.d.ANIMATIONLOOPMODE_YOYO;if(A){const a=(c-v)/F,p=Math.sin(a*Math.PI);c=Math.abs(p)*F+v;const P=p>=0?1:-1;this._yoyoDirection!==P&&(H=!0),this._yoyoDirection=P}if(this._previousElapsedTime=a,this._previousAbsoluteFrame=c,!b&&p>=v&&(c>=F&&L>0||c<=0&&L<0))C=!1,f=V._getKeyValue(this._maxValue);else if(!b&&v>=p&&(c<=F&&L<0||c>=0&&L>0))C=!1,f=V._getKeyValue(this._minValue);else if(this._animationState.loopMode!==P.d.ANIMATIONLOOPMODE_CYCLE){const a=p.toString()+v.toString();if(!this._offsetsCache[a]){this._animationState.repeatCount=0,this._animationState.loopMode=P.d.ANIMATIONLOOPMODE_CYCLE;const b=V._interpolate(v,this._animationState),L=V._interpolate(p,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),V.dataType){case P.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[a]=L-b;break;case P.d.ANIMATIONTYPE_QUATERNION:case P.d.ANIMATIONTYPE_VECTOR3:case P.d.ANIMATIONTYPE_VECTOR2:case P.d.ANIMATIONTYPE_SIZE:case P.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[a]=L.od(b)}this._highLimitsCache[a]=L}f=this._highLimitsCache[a],u=this._offsetsCache[a]}if(void 0===u)switch(V.dataType){case P.d.ANIMATIONTYPE_FLOAT:u=0;break;case P.d.ANIMATIONTYPE_QUATERNION:u=P.m;break;case P.d.ANIMATIONTYPE_VECTOR3:u=P.s;break;case P.d.ANIMATIONTYPE_VECTOR2:u=P.p;break;case P.d.ANIMATIONTYPE_SIZE:u=P.o;break;case P.d.ANIMATIONTYPE_COLOR3:u=P.h;break;case P.d.ANIMATIONTYPE_COLOR4:u=P.k}let h;if(this._host&&this._host.syncRoot){const a=this._host.syncRoot;h=v+F*((a.masterFrame-a.fromFrame)/(a.toFrame-a.fromFrame))}else h=c>0&&v>p||c<0&&v<p?C&&0!==F?p+c%F:v:C&&0!==F?v+c%F:p;const R=this._events;if(!A&&(L>0&&this.currentFrame>h||L<0&&this.currentFrame<h)||A&&H){this._onLoop();for(let a=0;a<R.length;a++)R[a].onlyOnce||(R[a].isDone=!1);this._animationState.key=L>0?0:V.getKeys().length-1}this._currentFrame=h,this._animationState.repeatCount=0===F?0:c/F|0,this._animationState.highLimitValue=f,this._animationState.offsetValue=u;const X=V._interpolate(h,this._animationState);if(this.setValue(X,t),R.length)for(let P=0;P<R.length;P++)if(F>=0&&h>=R[P].frame&&R[P].frame>=v||F<0&&h<=R[P].frame&&R[P].frame<=v){const a=R[P];a.isDone||(a.onlyOnce&&(R.splice(P,1),P--),a.isDone=!0,a.action(h))}return C||(this._stopped=!0),C}}var F=p(10920);class u{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(a){this._weight=-1!==a?Math.min(Math.max(a,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(a){for(let v=0;v<this._runtimeAnimations.length;v++){this._runtimeAnimations[v]._prepareForSpeedRatioChange(a)}this._speedRatio=a,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(a,v){let p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,L=arguments.length>4&&void 0!==arguments[4]&&arguments[4],t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,V=arguments.length>6?arguments[6]:void 0,K=arguments.length>7?arguments[7]:void 0,C=arguments.length>8?arguments[8]:void 0,F=arguments.length>9&&void 0!==arguments[9]&&arguments[9],u=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=v,this.fromFrame=p,this.toFrame=P,this.loopAnimation=L,this.onAnimationEnd=V,this.onAnimationLoop=C,this.isAdditive=F,this.playOrder=u,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Ud=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new b.c,this.onAnimationLoopObservable=new b.c,this._scene=a,K&&this.appendAnimations(v,K),this._speedRatio=t,a._activeAnimatables.push(this)}syncWith(a){if(this._syncRoot=a,a){const a=this._scene._activeAnimatables.indexOf(this);a>-1&&(this._scene._activeAnimatables.splice(a,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(a,v){for(let p=0;p<v.length;p++){const P=v[p],b=new C(a,P,this._scene,this);b._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(b)}}getAnimationByTargetProperty(a){const v=this._runtimeAnimations;for(let p=0;p<v.length;p++)if(v[p].animation.targetProperty===a)return v[p].animation;return null}getRuntimeAnimationByTargetProperty(a){const v=this._runtimeAnimations;for(let p=0;p<v.length;p++)if(v[p].animation.targetProperty===a)return v[p];return null}reset(){const a=this._runtimeAnimations;for(let v=0;v<a.length;v++)a[v].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(a){const v=this._runtimeAnimations;for(let p=0;p<v.length;p++)v[p].animation.enableBlending=!0,v[p].animation.blendingSpeed=a}disableBlending(){const a=this._runtimeAnimations;for(let v=0;v<a.length;v++)a[v].animation.enableBlending=!1}goToFrame(a){const v=this._runtimeAnimations;if(v[0]){const p=v[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??v[0].currentFrame;const P=0===this.speedRatio?0:(a-this._frameToSyncFromJump)/p*1e3/this.speedRatio;this._manualJumpDelay=-P}for(let p=0;p<v.length;p++)v[p].goToFrame(a,this._weight);this._goToFrame=a}get paused(){return this.Ud}pause(){this.Ud||(this.Ud=!0)}restart(){this.Ud=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(a,v){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a||v){const b=this._scene._activeAnimatables.indexOf(this);if(b>-1){const L=this._runtimeAnimations;for(let p=L.length-1;p>=0;p--){const P=L[p];a&&P.animation.name!=a||(v&&!v(P.target)||(P.dispose(),L.splice(p,1)))}0==L.length&&(p||this._scene._activeAnimatables.splice(b,1),P||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){p||this._scene._activeAnimatables.splice(a,1);const v=this._runtimeAnimations;for(let a=0;a<v.length;a++)v[a].dispose();this._runtimeAnimations.length=0,P||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((a=>{this.onAnimationEndObservable.add((()=>{a(this)}),void 0,void 0,this,!0)}))}_animate(a){if(this.Ud)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=a),!0;if(null===this._localDelayOffset?(this._localDelayOffset=a,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=a-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let v=!1;const p=this._runtimeAnimations;let P;for(P=0;P<p.length;P++){const b=p[P].animate(a-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);v=v||b}if(this.animationStarted=v,!v){if(this.disposeOnEnd)for(P=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(P,1),P=0;P<p.length;P++)p[P].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return v}}function c(a){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return a.originalValue;let v=1;const p=K.k.fb[0],P=K.k.fb[1],b=K.k.Quaternion[0];let L=0;const t=a.animations[0],V=a.originalValue;let C=1,F=!1;if(a.totalWeight<1)C=1-a.totalWeight,V.decompose(P,b,p);else{if(L=1,v=a.totalWeight,C=t.weight/v,1==C){if(!a.totalAdditiveWeight)return t.currentValue;F=!0}t.currentValue.decompose(P,b,p)}if(!F){P.scaleInPlace(C),p.scaleInPlace(C),b.scaleInPlace(C);for(let t=L;t<a.animations.length;t++){const L=a.animations[t];if(0===L.weight)continue;C=L.weight/v;const V=K.k.fb[2],F=K.k.fb[3],u=K.k.Quaternion[1];L.currentValue.decompose(F,u,V),F.scaleAndAddToRef(C,P),u.scaleAndAddToRef(K.i.Dot(b,u)>0?C:-C,b),V.scaleAndAddToRef(C,p)}b.normalize()}for(let c=0;c<a.additiveAnimations.length;c++){const v=a.additiveAnimations[c];if(0===v.weight)continue;const L=K.k.fb[2],t=K.k.fb[3],V=K.k.Quaternion[1];v.currentValue.decompose(t,V,L),t.multiplyToRef(P,t),K.s.LerpToRef(P,t,v.weight,P),b.multiplyToRef(V,V),K.i.SlerpToRef(b,V,v.weight,b),L.scaleAndAddToRef(v.weight,p)}const u=t?t._animationState.workValue:K.k.Matrix[0].clone();return K.e.ComposeToRef(P,b,p,u),u}function f(a,v){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return v;const p=a.animations[0],P=a.originalValue;let b=v;if(0===a.totalWeight&&a.totalAdditiveWeight>0)b.p(P);else if(1===a.animations.length){if(K.i.SlerpToRef(P,p.currentValue,Math.min(1,a.totalWeight),b),0===a.totalAdditiveWeight)return b}else if(a.animations.length>1){let p,L,t=1;if(a.totalWeight<1){const v=1-a.totalWeight;p=[],L=[],p.push(P),L.push(v)}else{if(2===a.animations.length&&(K.i.SlerpToRef(a.animations[0].currentValue,a.animations[1].currentValue,a.animations[1].weight/a.totalWeight,v),0===a.totalAdditiveWeight))return v;p=[],L=[],t=a.totalWeight}for(let v=0;v<a.animations.length;v++){const P=a.animations[v];p.push(P.currentValue),L.push(P.weight/t)}let V=0;for(let a=0;a<p.length;)a?(V+=L[a],K.i.SlerpToRef(b,p[a],L[a]/V,b),a++):(K.i.SlerpToRef(p[a],p[a+1],L[a+1]/(L[a]+L[a+1]),v),b=v,V=L[a]+L[a+1],a+=2)}for(let L=0;L<a.additiveAnimations.length;L++){const v=a.additiveAnimations[L];0!==v.weight&&(b.multiplyToRef(v.currentValue,K.k.Quaternion[0]),K.i.SlerpToRef(b,K.k.Quaternion[0],v.weight,b))}return b}var H,A,h=p(11229);H=h.c,(A=V.e)&&(A.prototype.copyAnimationRange=function(a,v,p){let b=arguments.length>3&&void 0!==arguments[3]&&arguments[3],L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new P.d(this.name,"_matrix",a.animations[0].framePerSecond,P.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const t=a.animations[0].getRange(v);if(!t)return!1;const V=t.from,K=t.to,C=a.animations[0].getKeys(),F=a.length,u=a.getParent(),c=this.getParent(),f=b&&u&&F&&this.length&&F!==this.length,H=f&&c&&u?c.length/u.length:1,A=b&&!c&&L&&(1!==L.x||1!==L.y||1!==L.z),h=this.animations[0].getKeys();let R,X,Q;for(let P=0,s=C.length;P<s;P++)R=C[P],R.frame>=V&&R.frame<=K&&(b?(Q=R.value.clone(),f?(X=Q.getTranslation(),Q.setTranslation(X.scaleInPlace(H))):A&&L?(X=Q.getTranslation(),Q.setTranslation(X.multiplyInPlace(L))):Q=R.value):Q=R.value,h.push({frame:R.frame+p,value:Q}));return this.animations[0].createRange(v,V+p,K+p),!0}),H&&(H.prototype._animate=function(a){if(!this.animationsEnabled)return;const v=F.b.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=v}this.deltaTime=void 0!==a?a:this.useConstantAnimationDeltaTime?16:(v-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=v;const p=this._activeAnimatables;if(0===p.length)return;this._animationTime+=this.deltaTime;const b=this._animationTime;for(let P=0;P<p.length;P++){const a=p[P];!a._animate(b)&&a.disposeOnEnd&&P--}!function(a){if(a._registeredForLateAnimationBindings.length){for(let v=0;v<a._registeredForLateAnimationBindings.length;v++){const p=a._registeredForLateAnimationBindings.data[v];for(const a in p._lateAnimationHolders){const v=p._lateAnimationHolders[a],b=v.animations[0],L=v.originalValue;if(void 0===L||null===L)continue;const t=P.d.AllowMatrixDecomposeForInterpolation&&L.m;let V=p[a];if(t)V=c(v);else if(void 0!==L.w)V=f(v,V||K.i.Identity());else{let a=0,p=1;const t=b&&b._animationState.loopMode===P.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(v.totalWeight<1)V=t?L.clone?L.clone():L:b&&L.scale?L.scale(1-v.totalWeight):b?L*(1-v.totalWeight):L.clone?L.clone():L;else if(b){p=v.totalWeight;const P=b.weight/p;V=1!==P?b.currentValue.scale?b.currentValue.scale(P):b.currentValue*P:b.currentValue,t&&(V.addToRef?V.addToRef(L,V):V+=L),a=1}for(let P=a;P<v.animations.length;P++){const a=v.animations[P],b=a.weight/p;b&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(b,V):V+=a.currentValue*b)}for(let P=0;P<v.additiveAnimations.length;P++){const a=v.additiveAnimations[P],p=a.weight;p&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(p,V):V+=a.currentValue*p)}}p[a]=V}p._lateAnimationHolders={}}a._registeredForLateAnimationBindings.reset()}}(this)},H.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((a,v)=>a.playOrder-v.playOrder))},H.prototype.beginWeightedAnimation=function(a,v,p){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,b=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,K=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,F=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const u=this.beginAnimation(a,v,p,b,L,t,V,!1,K,C,F);return u.weight=P,u},H.prototype.beginAnimation=function(a,v,p,P){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,L=arguments.length>5?arguments[5]:void 0,t=arguments.length>6?arguments[6]:void 0,V=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],K=arguments.length>8?arguments[8]:void 0,C=arguments.length>9?arguments[9]:void 0,F=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(b<0){const a=v;v=p,p=a,b=-b}v>p&&(b=-b),V&&this.stopAnimation(a,void 0,K),t||(t=new u(this,a,v,p,P,b,L,void 0,C,F));const c=!K||K(a);if(a.animations&&c&&t.appendAnimations(a,a.animations),a.getAnimatables){const F=a.getAnimatables();for(let a=0;a<F.length;a++)this.beginAnimation(F[a],v,p,P,b,L,t,V,K,C)}return t.reset(),t},H.prototype.beginHierarchyAnimation=function(a,v,p,P,b){let L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0,K=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],C=arguments.length>9?arguments[9]:void 0,F=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const u=a.getDescendants(v),c=[];c.push(this.beginAnimation(a,p,P,b,L,t,V,K,C,void 0,F));for(const f of u)c.push(this.beginAnimation(f,p,P,b,L,t,V,K,C,void 0,F));return c},H.prototype.beginDirectAnimation=function(a,v,p,P,b){let L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(L<0){const a=p;p=P,P=a,L=-L}return p>P&&(L=-L),new u(this,a,p,P,b,L,arguments.length>6?arguments[6]:void 0,v,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},H.prototype.beginDirectHierarchyAnimation=function(a,v,p,P,b,L,t,V,K){let C=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const F=a.getDescendants(v),u=[];u.push(this.beginDirectAnimation(a,p,P,b,L,t,V,K,C));for(const c of F)u.push(this.beginDirectAnimation(c,p,P,b,L,t,V,K,C));return u},H.prototype.getAnimatableByTarget=function(a){for(let v=0;v<this._activeAnimatables.length;v++)if(this._activeAnimatables[v].target===a)return this._activeAnimatables[v];return null},H.prototype.getAllAnimatablesByTarget=function(a){const v=[];for(let p=0;p<this._activeAnimatables.length;p++)this._activeAnimatables[p].target===a&&v.push(this._activeAnimatables[p]);return v},H.prototype.stopAnimation=function(a,v,p){const P=this.getAllAnimatablesByTarget(a);for(const b of P)b.stop(v,p)},H.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let a=0;a<this._activeAnimatables.length;a++)this._activeAnimatables[a].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const a of this.animationGroups)a.stop()});class R{getClassName(){return"TargetedAnimation"}serialize(){const a={};return a.animation=this.animation.serialize(),a.targetId=this.target.id,a}}class X{get mask(){return this._mask}set mask(a){this._mask!==a&&(this._mask=a,this.syncWithMask(!0))}syncWithMask(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||a){this._numActiveAnimatables=0;for(let a=0;a<this._animatables.length;++a){const v=this._animatables[a];!this.mask||this.mask.disabled||this.mask.retainsTarget(v.target.name)?(this._numActiveAnimatables++,v.paused&&v.restart()):v.paused||v.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let a=0;a<this._animatables.length;++a){const v=this._animatables[a];this.mask.retainsTarget(v.target.name)||(v.stop(),this._animatables.splice(a,1),--a)}for(let a=0;a<this._targetedAnimations.length;a++){const v=this._targetedAnimations[a];this.mask.retainsTarget(v.target.name)||(this._targetedAnimations.splice(a,1),--a)}}}get from(){return this._from}set from(a){if(this._from!==a){this._from=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].fromFrame=this._from}}}get to(){return this._to}set to(a){if(this._to!==a){this._to=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(a){if(this._speedRatio!==a){this._speedRatio=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(a){if(this._loopAnimation!==a){this._loopAnimation=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(a){if(this._isAdditive!==a){this._isAdditive=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(a){this._weight!==a&&(this._weight=a,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(a){if(this._playOrder!==a&&(this._playOrder=a,this._animatables.length>0)){for(let a=0;a<this._animatables.length;a++)this._animatables[a].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(a){if(this._enableBlending!==a&&(this._enableBlending=a,null!==a))for(let v=0;v<this._targetedAnimations.length;++v)this._targetedAnimations[v].animation.enableBlending=a}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(a){if(this._blendingSpeed!==a&&(this._blendingSpeed=a,null!==a))for(let v=0;v<this._targetedAnimations.length;++v)this._targetedAnimations[v].animation.blendingSpeed=a}getLength(a,v){a=a??this._from;return((v=v??this._to)-a)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(a){let v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],p=arguments.length>2&&void 0!==arguments[2]&&arguments[2],P=arguments.length>3?arguments[3]:void 0;if(0===a.length)return null;P=P??a[0].weight;let b=Number.MAX_VALUE,L=-Number.MAX_VALUE;if(p)for(const V of a)V.from<b&&(b=V.from),V.to>L&&(L=V.to);const t=new X(a[0].name+"_merged",a[0]._scene,P);for(const V of a){p&&V.normalize(b,L);for(const a of V.targetedAnimations)t.addTargetedAnimation(a.animation,a.target);v&&V.dispose()}return t}constructor(a){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=a,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new b.c,this.onAnimationLoopObservable=new b.c,this.onAnimationGroupLoopObservable=new b.c,this.onAnimationGroupEndObservable=new b.c,this.onAnimationGroupPauseObservable=new b.c,this.onAnimationGroupPlayObservable=new b.c,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=v||L.b.LastCreatedScene,this._weight=p,this._playOrder=P,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(a,v){const p=new R;p.animation=a,p.target=v;const P=a.getKeys();return this._from>P[0].frame&&(this._from=P[0].frame),this._to<P[P.length-1].frame&&(this._to=P[P.length-1].frame),null!==this._enableBlending&&(a.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(a.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(p),this._shouldStart=!0,p}removeTargetedAnimation(a){for(let v=this._targetedAnimations.length-1;v>-1;v--){this._targetedAnimations[v].animation===a&&this._targetedAnimations.splice(v,1)}}normalize(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==a&&(a=this._from),null==v&&(v=this._to);for(let p=0;p<this._targetedAnimations.length;p++){const P=this._targetedAnimations[p].animation.getKeys(),b=P[0],L=P[P.length-1];if(b.frame>a){const v={frame:a,value:b.value,inTangent:b.inTangent,outTangent:b.outTangent,interpolation:b.interpolation};P.splice(0,0,v)}if(L.frame<v){const a={frame:v,value:L.value,inTangent:L.inTangent,outTangent:L.outTangent,interpolation:L.interpolation};P.push(a)}}return this._from=a,this._to=v,this}_processLoop(a,v,p){a.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(v),this._animationLoopFlags[p]||(this._animationLoopFlags[p]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,p=arguments.length>2?arguments[2]:void 0,P=arguments.length>3?arguments[3]:void 0,b=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=a,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let L=0;L<this._targetedAnimations.length;L++){const t=this._targetedAnimations[L],V=this._scene.beginDirectAnimation(t.target,[t.animation],void 0!==p?p:this._from,void 0!==P?P:this._to,a,v,void 0,void 0,void 0!==b?b:this._isAdditive);V.weight=this._weight,V.playOrder=this._playOrder,V.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(t),this._checkAnimationGroupEnded(V)},this._processLoop(V,t,L),this._animatables.push(V)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=v,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let a=0;a<this._animatables.length;a++){this._animatables[a].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(a){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==a&&(this.loopAnimation=a),this.restart()):(this.stop(),this.start(a,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].reset()}return this}restart(){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const v=this._animatables.slice();for(let P=0;P<v.length;P++)v[P].stop(void 0,void 0,!0,a);let p=0;for(let P=0;P<this._scene._activeAnimatables.length;P++){const v=this._scene._activeAnimatables[P];v._runtimeAnimations.length>0?this._scene._activeAnimatables[p++]=v:a&&this._checkAnimationGroupEnded(v,a)}return this._scene._activeAnimatables.length=p,this._isStarted=!1,this}setWeightForAllAnimatables(a){for(let v=0;v<this._animatables.length;v++){this._animatables[v].weight=a}return this}syncAllAnimationsWith(a){for(let v=0;v<this._animatables.length;v++){this._animatables[v].syncWith(a)}return this}goToFrame(a){if(!this._isStarted)return this;for(let v=0;v<this._animatables.length;v++){this._animatables[v].goToFrame(a)}return this}getCurrentFrame(){var a;return(null===(a=this.animatables[0])||void 0===a?void 0:a.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const a=this._scene.animationGroups.indexOf(this);if(a>-1&&this._scene.animationGroups.splice(a,1),this._parentContainer){const a=this._parentContainer.animationGroups.indexOf(this);a>-1&&this._parentContainer.animationGroups.splice(a,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(a){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const p=this._animatables.indexOf(a);p>-1&&this._animatables.splice(p,1),0===this._animatables.length&&(this._isStarted=!1,v||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(a,v){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const P=new X(a||this.name,this._scene,this._weight,this._playOrder);P._from=this.from,P._to=this.to,P._speedRatio=this.speedRatio,P._loopAnimation=this.loopAnimation,P._isAdditive=this.isAdditive,P._enableBlending=this.enableBlending,P._blendingSpeed=this.blendingSpeed,P.metadata=this.metadata,P.mask=this.mask;for(const b of this._targetedAnimations)P.addTargetedAnimation(p?b.animation.clone():b.animation,v?v(b.target):b.target);return P}serialize(){const a={};a.name=this.name,a.from=this.from,a.to=this.to,a.speedRatio=this.speedRatio,a.loopAnimation=this.loopAnimation,a.isAdditive=this.isAdditive,a.weight=this.weight,a.playOrder=this.playOrder,a.enableBlending=this.enableBlending,a.blendingSpeed=this.blendingSpeed,a.targetedAnimations=[];for(let v=0;v<this.targetedAnimations.length;v++){const p=this.targetedAnimations[v];a.targetedAnimations[v]=p.serialize()}return t.c&&t.c.HasTags(this)&&(a.tags=t.c.GetTags(this)),this.metadata&&(a.metadata=this.metadata),a}static Parse(a,v){const p=new X(a.name,v,a.weight,a.playOrder);for(let b=0;b<a.targetedAnimations.length;b++){const L=a.targetedAnimations[b],t=P.d.Parse(L.animation),V=L.targetId;if("influence"===L.animation.property){const a=v.getMorphTargetById(V);a&&p.addTargetedAnimation(t,a)}else{const a=v.getNodeById(V);null!=a&&p.addTargetedAnimation(t,a)}}return t.c&&t.c.AddTagsTo(p,a.tags),null!==a.from&&null!==a.to&&p.normalize(a.from,a.to),void 0!==a.speedRatio&&(p._speedRatio=a.speedRatio),void 0!==a.loopAnimation&&(p._loopAnimation=a.loopAnimation),void 0!==a.isAdditive&&(p._isAdditive=a.isAdditive),void 0!==a.weight&&(p._weight=a.weight),void 0!==a.playOrder&&(p._playOrder=a.playOrder),void 0!==a.enableBlending&&(p._enableBlending=a.enableBlending),void 0!==a.blendingSpeed&&(p._blendingSpeed=a.blendingSpeed),void 0!==a.metadata&&(p.metadata=a.metadata),p}static MakeAnimationAdditive(a,v,p){let b;b="object"===typeof v?v:{referenceFrame:v,range:p,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let L=a;b.cloneOriginalAnimationGroup&&(L=a.clone(b.clonedAnimationGroupName||L.name));const t=L.targetedAnimations;for(let V=0;V<t.length;V++){const a=t[V];a.animation=P.d.MakeAnimationAdditive(a.animation,b)}if(L.isAdditive=!0,b.clipKeys){let a=Number.MAX_VALUE,v=-Number.MAX_VALUE;const p=L.targetedAnimations;for(let P=0;P<p.length;P++){const b=p[P].animation.getKeys();a>b[0].frame&&(a=b[0].frame),v<b[b.length-1].frame&&(v=b[b.length-1].frame)}L._from=a,L._to=v}return L}static ClipKeys(a,v,p,P,b){const L=a.clone(P||a.name);return X.ClipKeysInPlace(L,v,p,b)}static ClipKeysInPlace(a,v,p,P){return X.ClipInPlace(a,v,p,P,!1)}static ClipFrames(a,v,p,P,b){const L=a.clone(P||a.name);return X.ClipFramesInPlace(L,v,p,b)}static ClipFramesInPlace(a,v,p,P){return X.ClipInPlace(a,v,p,P,!0)}static ClipInPlace(a,v,p,P){let b=arguments.length>4&&void 0!==arguments[4]&&arguments[4],L=Number.MAX_VALUE,t=-Number.MAX_VALUE;const V=a.targetedAnimations;for(let K=0;K<V.length;K++){const a=V[K],C=P?a.animation:a.animation.clone();b&&(C.createKeyForFrame(v),C.createKeyForFrame(p));const F=C.getKeys(),u=[];let c=Number.MAX_VALUE;for(let P=0;P<F.length;P++){const a=F[P];if(!b&&P>=v&&P<=p||b&&a.frame>=v&&a.frame<=p){const v={frame:a.frame,value:a.value.clone?a.value.clone():a.value,inTangent:a.inTangent,outTangent:a.outTangent,interpolation:a.interpolation,lockedTangent:a.lockedTangent};c===Number.MAX_VALUE&&(c=v.frame),v.frame-=c,u.push(v)}}0!==u.length?(L>u[0].frame&&(L=u[0].frame),t<u[u.length-1].frame&&(t=u[u.length-1].frame),C.setKeys(u,!0),a.animation=C):(V.splice(K,1),K--)}return a._from=L,a._to=t,a}getClassName(){return"AnimationGroup"}toString(a){let v="Name: "+this.name;return v+=", type: "+this.getClassName(),a&&(v+=", from: "+this._from,v+=", to: "+this._to,v+=", isStarted: "+this._isStarted,v+=", speedRatio: "+this._speedRatio,v+=", targetedAnimations length: "+this._targetedAnimations.length,v+=", animatables length: "+this._animatables),v}}}}]);