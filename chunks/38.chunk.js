/*! For license information please see q6li2m.38.5c90001f.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11193:(M,E,b)=>{b.r(E),b.d(E,{getAnalytics:()=>iM,getGoogleAnalyticsClientId:()=>QM,initializeAnalytics:()=>GM,isSupported:()=>HM,logEvent:()=>bE,setAnalyticsCollectionEnabled:()=>ME,setConsent:()=>xE,setCurrentScreen:()=>eM,setDefaultEventParameters:()=>EE,setUserId:()=>LM,setUserProperties:()=>fM,settings:()=>AM});var x=b(11163),k=b(11185),a=b(11180),g=b(11171);let n,J;const u=new WeakMap,T=new WeakMap,V=new WeakMap,I=new WeakMap,t=new WeakMap;let y={get(M,E,b){if(M instanceof IDBTransaction){if("done"===E)return T.get(M);if("objectStoreNames"===E)return M.objectStoreNames||V.get(M);if("store"===E)return b.objectStoreNames[1]?void 0:b.objectStore(b.objectStoreNames[0])}return c(M[E])},set:(M,E,b)=>(M[E]=b,!0),has:(M,E)=>M instanceof IDBTransaction&&("done"===E||"store"===E)||E in M};function B(M){return M!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(J||(J=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(M)?function(){for(var E=arguments.length,b=new Array(E),x=0;x<E;x++)b[x]=arguments[x];return M.apply(C(this),b),c(u.get(this))}:function(){for(var E=arguments.length,b=new Array(E),x=0;x<E;x++)b[x]=arguments[x];return c(M.apply(C(this),b))}:function(E){for(var b=arguments.length,x=new Array(b>1?b-1:0),k=1;k<b;k++)x[k-1]=arguments[k];const a=M.call(C(this),E,...x);return V.set(a,E.sort?E.sort():[E]),c(a)}}function r(M){return"function"===typeof M?B(M):(M instanceof IDBTransaction&&function(M){if(T.has(M))return;const E=new Promise(((E,b)=>{const x=()=>{M.removeEventListener("complete",k),M.removeEventListener("error",a),M.removeEventListener("abort",a)},k=()=>{E(),x()},a=()=>{b(M.error||new DOMException("AbortError","AbortError")),x()};M.addEventListener("complete",k),M.addEventListener("error",a),M.addEventListener("abort",a)}));T.set(M,E)}(M),E=M,(n||(n=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((M=>E instanceof M))?new Proxy(M,y):M);var E}function c(M){if(M instanceof IDBRequest)return function(M){const E=new Promise(((E,b)=>{const x=()=>{M.removeEventListener("success",k),M.removeEventListener("error",a)},k=()=>{E(c(M.result)),x()},a=()=>{b(M.error),x()};M.addEventListener("success",k),M.addEventListener("error",a)}));return E.then((E=>{E instanceof IDBCursor&&u.set(E,M)})).catch((()=>{})),t.set(E,M),E}(M);if(I.has(M))return I.get(M);const E=r(M);return E!==M&&(I.set(M,E),t.set(E,M)),E}const C=M=>t.get(M);const R=["get","getKey","getAll","getAllKeys","count"],w=["put","add","delete","clear"],S=new Map;function X(M,E){if(!(M instanceof IDBDatabase)||E in M||"string"!==typeof E)return;if(S.get(E))return S.get(E);const b=E.replace(/FromIndex$/,""),x=E!==b,k=w.includes(b);if(!(b in(x?IDBIndex:IDBObjectStore).prototype)||!k&&!R.includes(b))return;const a=async function(M){const E=this.transaction(M,k?"readwrite":"readonly");let a=E.store;for(var g=arguments.length,n=new Array(g>1?g-1:0),J=1;J<g;J++)n[J-1]=arguments[J];return x&&(a=a.index(n.shift())),(await Promise.all([a[b](...n),k&&E.done]))[0]};return S.set(E,a),a}y=(M=>({...M,get:(E,b,x)=>X(E,b)||M.get(E,b,x),has:(E,b)=>!!X(E,b)||M.has(E,b)}))(y);const U="@firebase/installations",v="0.6.4",N=1e4,K=`w:${v}`,h="FIS_v2",Z=36e5,O={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},p=new a.h("installations","Installations",O);function P(M){return M instanceof a.i&&M.code.includes("request-failed")}function F(M){let{projectId:E}=M;return`https://firebaseinstallations.googleapis.com/v1/projects/${E}/installations`}function l(M){return{token:M.token,requestStatus:2,expiresIn:(E=M.expiresIn,Number(E.replace("s","000"))),creationTime:Date.now()};var E}async function d(M,E){const b=(await E.json()).error;return p.create("request-failed",{requestName:M,serverCode:b.code,serverMessage:b.message,serverStatus:b.status})}function W(M){let{apiKey:E}=M;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":E})}function m(M,E){let{refreshToken:b}=E;const x=W(M);return x.append("Authorization",function(M){return`${h} ${M}`}(b)),x}async function o(M){const E=await M();return E.status>=500&&E.status<600?M():E}function j(M){return new Promise((E=>{setTimeout(E,M)}))}const s=/^[cdef][\w-]{21}$/;function q(){try{const M=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(M),M[0]=112+M[0]%16;const E=function(M){const E=(b=M,btoa(String.fromCharCode(...b)).replace(/\+/g,"-").replace(/\//g,"_"));var b;return E.substr(0,22)}(M);return s.test(E)?E:""}catch(M){return""}}function D(M){return`${M.appName}!${M.appId}`}const z=new Map;function A(M,E){const b=D(M);Y(b,E),function(M,E){const b=G();b&&b.postMessage({key:M,fid:E});H()}(b,E)}function Y(M,E){const b=z.get(M);if(b)for(const x of b)x(E)}let i=null;function G(){return!i&&"BroadcastChannel"in self&&(i=new BroadcastChannel("[Firebase] FID Change"),i.onmessage=M=>{Y(M.data.key,M.data.fid)}),i}function H(){0===z.size&&i&&(i.close(),i=null)}const e="firebase-installations-store";let Q=null;function L(){return Q||(Q=function(M,E){let{blocked:b,upgrade:x,blocking:k,terminated:a}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const g=indexedDB.open(M,E),n=c(g);return x&&g.addEventListener("upgradeneeded",(M=>{x(c(g.result),M.oldVersion,M.newVersion,c(g.transaction))})),b&&g.addEventListener("blocked",(()=>b())),n.then((M=>{a&&M.addEventListener("close",(()=>a())),k&&M.addEventListener("versionchange",(()=>k()))})).catch((()=>{})),n}("firebase-installations-database",1,{upgrade:(M,E)=>{if(0===E)M.createObjectStore(e)}})),Q}async function f(M,E){const b=D(M),x=(await L()).transaction(e,"readwrite"),k=x.objectStore(e),a=await k.get(b);return await k.put(E,b),await x.done,a&&a.fid===E.fid||A(M,E.fid),E}async function MM(M){const E=D(M),b=(await L()).transaction(e,"readwrite");await b.objectStore(e).delete(E),await b.done}async function EM(M,E){const b=D(M),x=(await L()).transaction(e,"readwrite"),k=x.objectStore(e),a=await k.get(b),g=E(a);return void 0===g?await k.delete(b):await k.put(g,b),await x.done,!g||a&&a.fid===g.fid||A(M,g.fid),g}async function bM(M){let E;const b=await EM(M.appConfig,(b=>{const x=function(M){const E=M||{fid:q(),registrationStatus:0};return aM(E)}(b),k=function(M,E){if(0===E.registrationStatus){if(!navigator.onLine){return{installationEntry:E,registrationPromise:Promise.reject(p.create("app-offline"))}}const b={fid:E.fid,registrationStatus:1,registrationTime:Date.now()},x=async function(M,E){try{const b=await async function(M,E){let{appConfig:b,heartbeatServiceProvider:x}=M,{fid:k}=E;const a=F(b),g=W(b),n=x.getImmediate({optional:!0});if(n){const M=await n.getHeartbeatsHeader();M&&g.append("x-firebase-client",M)}const J={fid:k,authVersion:h,appId:b.appId,sdkVersion:K},u={method:"POST",headers:g,body:JSON.stringify(J)},T=await o((()=>fetch(a,u)));if(T.ok){const M=await T.json();return{fid:M.fid||k,registrationStatus:2,refreshToken:M.refreshToken,authToken:l(M.authToken)}}throw await d("Create Installation",T)}(M,E);return f(M.appConfig,b)}catch(b){throw P(b)&&409===b.customData.serverCode?await MM(M.appConfig):await f(M.appConfig,{fid:E.fid,registrationStatus:0}),b}}(M,b);return{installationEntry:b,registrationPromise:x}}return 1===E.registrationStatus?{installationEntry:E,registrationPromise:xM(M)}:{installationEntry:E}}(M,x);return E=k.registrationPromise,k.installationEntry}));return""===b.fid?{installationEntry:await E}:{installationEntry:b,registrationPromise:E}}async function xM(M){let E=await kM(M.appConfig);for(;1===E.registrationStatus;)await j(100),E=await kM(M.appConfig);if(0===E.registrationStatus){const{installationEntry:E,registrationPromise:b}=await bM(M);return b||E}return E}function kM(M){return EM(M,(M=>{if(!M)throw p.create("installation-not-found");return aM(M)}))}function aM(M){return 1===(E=M).registrationStatus&&E.registrationTime+N<Date.now()?{fid:M.fid,registrationStatus:0}:M;var E}async function gM(M,E){let{appConfig:b,heartbeatServiceProvider:x}=M;const k=function(M,E){let{fid:b}=E;return`${F(M)}/${b}/authTokens:generate`}(b,E),a=m(b,E),g=x.getImmediate({optional:!0});if(g){const M=await g.getHeartbeatsHeader();M&&a.append("x-firebase-client",M)}const n={installation:{sdkVersion:K,appId:b.appId}},J={method:"POST",headers:a,body:JSON.stringify(n)},u=await o((()=>fetch(k,J)));if(u.ok){return l(await u.json())}throw await d("Generate Auth Token",u)}async function nM(M){let E,b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const x=await EM(M.appConfig,(x=>{if(!uM(x))throw p.create("not-registered");const k=x.authToken;if(!b&&function(M){return 2===M.requestStatus&&!function(M){const E=Date.now();return E<M.creationTime||M.creationTime+M.expiresIn<E+Z}(M)}(k))return x;if(1===k.requestStatus)return E=async function(M,E){let b=await JM(M.appConfig);for(;1===b.authToken.requestStatus;)await j(100),b=await JM(M.appConfig);const x=b.authToken;return 0===x.requestStatus?nM(M,E):x}(M,b),x;{if(!navigator.onLine)throw p.create("app-offline");const b=function(M){const E={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},M),{authToken:E})}(x);return E=async function(M,E){try{const b=await gM(M,E),x=Object.assign(Object.assign({},E),{authToken:b});return await f(M.appConfig,x),b}catch(b){if(!P(b)||401!==b.customData.serverCode&&404!==b.customData.serverCode){const b=Object.assign(Object.assign({},E),{authToken:{requestStatus:0}});await f(M.appConfig,b)}else await MM(M.appConfig);throw b}}(M,b),b}}));return E?await E:x.authToken}function JM(M){return EM(M,(M=>{if(!uM(M))throw p.create("not-registered");const E=M.authToken;return 1===(b=E).requestStatus&&b.requestTime+N<Date.now()?Object.assign(Object.assign({},M),{authToken:{requestStatus:0}}):M;var b}))}function uM(M){return void 0!==M&&2===M.registrationStatus}async function TM(M){let E=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const b=M;await async function(M){const{registrationPromise:E}=await bM(M);E&&await E}(b);return(await nM(b,E)).token}function VM(M){return p.create("missing-app-config-values",{valueName:M})}const IM="installations",tM=M=>{const E=M.getProvider("app").getImmediate(),b=function(M){if(!M||!M.options)throw VM("App Configuration");if(!M.name)throw VM("App Name");const E=["projectId","apiKey","appId"];for(const b of E)if(!M.options[b])throw VM(b);return{appName:M.name,projectId:M.options.projectId,apiKey:M.options.apiKey,appId:M.options.appId}}(E);return{app:E,appConfig:b,heartbeatServiceProvider:(0,x.u)(E,"heartbeat"),_delete:()=>Promise.resolve()}},yM=M=>{const E=M.getProvider("app").getImmediate(),b=(0,x.u)(E,IM).getImmediate();return{getId:()=>async function(M){const E=M,{installationEntry:b,registrationPromise:x}=await bM(E);return x?x.catch(console.error):nM(E).catch(console.error),b.fid}(b),getToken:M=>TM(b,M)}};(0,x.y)(new g.h(IM,tM,"PUBLIC")),(0,x.y)(new g.h("installations-internal",yM,"PRIVATE")),(0,x.Q)(U,v),(0,x.Q)(U,v,"esm2017");const BM="analytics",rM="https://www.googletagmanager.com/gtag/js",cM=new k.d("@firebase/analytics"),CM={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},RM=new a.h("analytics","Analytics",CM);function wM(M){if(!M.startsWith(rM)){const E=RM.create("invalid-gtag-resource",{gtagURL:M});return cM.warn(E.message),""}return M}function SM(M){return Promise.all(M.map((M=>M.catch((M=>M)))))}function XM(M,E){const b=function(M,E){let b;return window.trustedTypes&&(b=window.trustedTypes.createPolicy(M,E)),b}("firebase-js-sdk-policy",{createScriptURL:wM}),x=document.createElement("script"),k=`${rM}?l=${M}&id=${E}`;x.src=b?null===b||void 0===b?void 0:b.createScriptURL(k):k,x.async=!0,document.head.appendChild(x)}function UM(M,E,b,x){return async function(k){try{for(var a=arguments.length,g=new Array(a>1?a-1:0),n=1;n<a;n++)g[n-1]=arguments[n];if("event"===k){const[x,k]=g;await async function(M,E,b,x,k){try{let a=[];if(k&&k.send_to){let M=k.send_to;Array.isArray(M)||(M=[M]);const x=await SM(b);for(const b of M){const M=x.find((M=>M.measurementId===b)),k=M&&E[M.appId];if(!k){a=[];break}a.push(k)}}0===a.length&&(a=Object.values(E)),await Promise.all(a),M("event",x,k||{})}catch(a){cM.error(a)}}(M,E,b,x,k)}else if("config"===k){const[k,a]=g;await async function(M,E,b,x,k,a){const g=x[k];try{if(g)await E[g];else{const M=(await SM(b)).find((M=>M.measurementId===k));M&&await E[M.appId]}}catch(n){cM.error(n)}M("config",k,a)}(M,E,b,x,k,a)}else if("consent"===k){const[E]=g;M("consent","update",E)}else if("get"===k){const[E,b,x]=g;M("get",E,b,x)}else if("set"===k){const[E]=g;M("set",E)}else M(k,...g)}catch(J){cM.error(J)}}}const vM=new class{constructor(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=M,this.intervalMillis=E}getThrottleMetadata(M){return this.throttleMetadata[M]}setThrottleMetadata(M,E){this.throttleMetadata[M]=E}deleteThrottleMetadata(M){delete this.throttleMetadata[M]}};function NM(M){return new Headers({Accept:"application/json","x-goog-api-key":M})}async function KM(M){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vM,b=arguments.length>2?arguments[2]:void 0;const{appId:x,apiKey:k,measurementId:a}=M.options;if(!x)throw RM.create("no-app-id");if(!k){if(a)return{measurementId:a,appId:x};throw RM.create("no-api-key")}const g=E.getThrottleMetadata(x)||{backoffCount:0,throttleEndTimeMillis:Date.now()},n=new ZM;return setTimeout((async()=>{n.abort()}),void 0!==b?b:6e4),hM({appId:x,apiKey:k,measurementId:a},g,n,E)}async function hM(M,E,b){let{throttleEndTimeMillis:x,backoffCount:k}=E,g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:vM;var n;const{appId:J,measurementId:u}=M;try{await function(M,E){return new Promise(((b,x)=>{const k=Math.max(E-Date.now(),0),a=setTimeout(b,k);M.addEventListener((()=>{clearTimeout(a),x(RM.create("fetch-throttle",{throttleEndTimeMillis:E}))}))}))}(b,x)}catch(T){if(u)return cM.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${u} provided in the "measurementId" field in the local Firebase config. [${null===T||void 0===T?void 0:T.message}]`),{appId:J,measurementId:u};throw T}try{const E=await async function(M){var E;const{appId:b,apiKey:x}=M,k={method:"GET",headers:NM(x)},a="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",b),g=await fetch(a,k);if(200!==g.status&&304!==g.status){let M="";try{const b=await g.json();(null===(E=b.error)||void 0===E?void 0:E.message)&&(M=b.error.message)}catch(n){}throw RM.create("config-fetch-failed",{httpStatus:g.status,responseMessage:M})}return g.json()}(M);return g.deleteThrottleMetadata(J),E}catch(T){const E=T;if(!function(M){if(!(M instanceof a.i)||!M.customData)return!1;const E=Number(M.customData.httpStatus);return 429===E||500===E||503===E||504===E}(E)){if(g.deleteThrottleMetadata(J),u)return cM.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${u} provided in the "measurementId" field in the local Firebase config. [${null===E||void 0===E?void 0:E.message}]`),{appId:J,measurementId:u};throw T}const x=503===Number(null===(n=null===E||void 0===E?void 0:E.customData)||void 0===n?void 0:n.httpStatus)?(0,a.q)(k,g.intervalMillis,30):(0,a.q)(k,g.intervalMillis),V={throttleEndTimeMillis:Date.now()+x,backoffCount:k+1};return g.setThrottleMetadata(J,V),cM.debug(`Calling attemptFetch again in ${x} millis`),hM(M,V,b,g)}}class ZM{constructor(){this.listeners=[]}addEventListener(M){this.listeners.push(M)}abort(){this.listeners.forEach((M=>M()))}}let OM,pM;function PM(M){pM=M}function FM(M){OM=M}async function lM(M,E,b,x,k,g,n){var J;const u=KM(M);u.then((E=>{b[E.measurementId]=E.appId,M.options.measurementId&&E.measurementId!==M.options.measurementId&&cM.warn(`The measurement ID in the local Firebase config (${M.options.measurementId}) does not match the measurement ID fetched from the server (${E.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((M=>cM.error(M))),E.push(u);const T=async function(){if(!(0,a.V)())return cM.warn(RM.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,a.db)()}catch(M){return cM.warn(RM.create("indexeddb-unavailable",{errorInfo:null===M||void 0===M?void 0:M.toString()}).message),!1}return!0}().then((M=>M?x.getId():void 0)),[V,I]=await Promise.all([u,T]);(function(M){const E=window.document.getElementsByTagName("script");for(const b of Object.values(E))if(b.src&&b.src.includes(rM)&&b.src.includes(M))return b;return null})(g)||XM(g,V.measurementId),pM&&(k("consent","default",pM),PM(void 0)),k("ma",new Date);const t=null!==(J=null===n||void 0===n?void 0:n.config)&&void 0!==J?J:{};return t.origin="firebase",t.update=!0,null!=I&&(t.firebase_id=I),k("config",V.measurementId,t),OM&&(k("set",OM),FM(void 0)),V.measurementId}class dM{constructor(M){this.app=M}_delete(){return delete WM[this.app.options.appId],Promise.resolve()}}let WM={},mM=[];const oM={};let jM,sM,qM="dataLayer",DM="gtag",zM=!1;function AM(M){if(zM)throw RM.create("already-initialized");M.dataLayerName&&(qM=M.dataLayerName),M.gtagName&&(DM=M.gtagName)}function YM(M,E,b){!function(){const M=[];if((0,a.N)()&&M.push("This is a browser extension environment."),(0,a.j)()||M.push("Cookies are not available."),M.length>0){const E=M.map(((M,E)=>`(${E+1}) ${M}`)).join(" "),b=RM.create("invalid-analytics-context",{errorInfo:E});cM.warn(b.message)}}();const x=M.options.appId;if(!x)throw RM.create("no-app-id");if(!M.options.apiKey){if(!M.options.measurementId)throw RM.create("no-api-key");cM.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${M.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=WM[x])throw RM.create("already-exists",{id:x});if(!zM){!function(M){let E=[];Array.isArray(window[M])?E=window[M]:window[M]=E}(qM);const{wrappedGtag:M,gtagCore:E}=function(M,E,b,x,k){let a=function(){for(var M=arguments.length,E=new Array(M),b=0;b<M;b++)E[b]=arguments[b];window[x].push(arguments)};return window[k]&&"function"===typeof window[k]&&(a=window[k]),window[k]=UM(a,M,E,b),{gtagCore:a,wrappedGtag:window[k]}}(WM,mM,oM,qM,DM);sM=M,jM=E,zM=!0}WM[x]=lM(M,mM,oM,E,jM,qM,b);return new dM(M)}function iM(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,x.H)();M=(0,a.H)(M);const E=(0,x.u)(M,BM);return E.isInitialized()?E.getImmediate():GM(M)}function GM(M){let E=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const b=(0,x.u)(M,BM);if(b.isInitialized()){const M=b.getImmediate();if((0,a.v)(E,b.getOptions()))return M;throw RM.create("already-initialized")}return b.initialize({options:E})}async function HM(){if((0,a.N)())return!1;if(!(0,a.j)())return!1;if(!(0,a.V)())return!1;try{return await(0,a.db)()}catch(M){return!1}}function eM(M,E,b){M=(0,a.H)(M),async function(M,E,b,x){if(x&&x.global)return M("set",{screen_name:b}),Promise.resolve();M("config",await E,{update:!0,screen_name:b})}(sM,WM[M.app.options.appId],E,b).catch((M=>cM.error(M)))}async function QM(M){return M=(0,a.H)(M),async function(M,E){const b=await E;return new Promise(((E,x)=>{M("get",b,"client_id",(M=>{M||x(RM.create("no-client-id")),E(M)}))}))}(sM,WM[M.app.options.appId])}function LM(M,E,b){M=(0,a.H)(M),async function(M,E,b,x){if(x&&x.global)return M("set",{user_id:b}),Promise.resolve();M("config",await E,{update:!0,user_id:b})}(sM,WM[M.app.options.appId],E,b).catch((M=>cM.error(M)))}function fM(M,E,b){M=(0,a.H)(M),async function(M,E,b,x){if(x&&x.global){const E={};for(const M of Object.keys(b))E[`user_properties.${M}`]=b[M];return M("set",E),Promise.resolve()}M("config",await E,{update:!0,user_properties:b})}(sM,WM[M.app.options.appId],E,b).catch((M=>cM.error(M)))}function ME(M,E){M=(0,a.H)(M),async function(M,E){const b=await M;window[`ga-disable-${b}`]=!E}(WM[M.app.options.appId],E).catch((M=>cM.error(M)))}function EE(M){sM?sM("set",M):FM(M)}function bE(M,E,b,x){M=(0,a.H)(M),async function(M,E,b,x,k){if(k&&k.global)M("event",b,x);else{const k=await E;M("event",b,Object.assign(Object.assign({},x),{send_to:k}))}}(sM,WM[M.app.options.appId],E,b,x).catch((M=>cM.error(M)))}function xE(M){sM?sM("consent","update",M):PM(M)}const kE="@firebase/analytics",aE="0.10.0";(0,x.y)(new g.h(BM,((M,E)=>{let{options:b}=E;return YM(M.getProvider("app").getImmediate(),M.getProvider("installations-internal").getImmediate(),b)}),"PUBLIC")),(0,x.y)(new g.h("analytics-internal",(function(M){try{const E=M.getProvider(BM).getImmediate();return{logEvent:(M,b,x)=>bE(E,M,b,x)}}catch(E){throw RM.create("interop-component-reg-failed",{reason:E})}}),"PRIVATE")),(0,x.Q)(kE,aE),(0,x.Q)(kE,aE,"esm2017")}}]);