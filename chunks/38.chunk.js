"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{13296:(a,R,Y)=>{Y.r(R),Y.d(R,{AnimationGroup:()=>A,TargetedAnimation:()=>v});var T=Y(12031),c=Y(10743),K=Y(10790),g=Y(11073),t=Y(12028),U=Y(11076);class b{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(a,R,Y,c){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._animation=R,this._target=a,this._scene=Y,this._host=c,this._activeTargets=[],R._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===T.e.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=U.d.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const a={frame:0,value:this._minValue};this._keys.splice(0,0,a)}if(this._target instanceof Array){let a=0;for(const R of this._target)this._preparePath(R,a),this._getOriginalValues(a),a++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const K=R.getEvents();K&&K.length>0&&K.forEach((a=>{this._events.push(a._clone())})),this._enableBlending=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(a){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const Y=this._animation.targetPropertyPath;if(Y.length>1){let T=a;for(let a=0;a<Y.length-1;a++){const R=Y[a];if(T=T[R],void 0===T)throw new Error(`Invalid property (${R}) in property path (${Y.join(".")})`)}this._targetPath=Y[Y.length-1],this._activeTargets[R]=T}else this._targetPath=Y[0],this._activeTargets[R]=a;if(void 0===this._activeTargets[R][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${Y.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let a=0;for(const R of this._target)void 0!==this._originalValue[a]&&this._setValue(R,this._activeTargets[a],this._originalValue[a],-1,a),a++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let a=0;a<this._events.length;a++)this._events[a].isDone=!1}isStopped(){return this._stopped}dispose(){const a=this._animation.runtimeAnimations.indexOf(this);a>-1&&this._animation.runtimeAnimations.splice(a,1)}setValue(a,R){if(this._targetIsArray)for(let Y=0;Y<this._target.length;Y++){const T=this._target[Y];this._setValue(T,this._activeTargets[Y],a,R,Y)}else this._setValue(this._target,this._directTarget,a,R,0)}_getOriginalValues(){let a,R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const Y=this._activeTargets[R];a=Y.getLocalMatrix&&"_matrix"===this._targetPath?Y.getLocalMatrix():Y[this._targetPath],a&&a.clone?this._originalValue[R]=a.clone():this._originalValue[R]=a}_registerTargetForLateAnimationBinding(a,R){const Y=a.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(Y),Y._lateAnimationHolders||(Y._lateAnimationHolders={}),Y._lateAnimationHolders[a.targetPath]||(Y._lateAnimationHolders[a.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:R}),a.isAdditive?(Y._lateAnimationHolders[a.targetPath].additiveAnimations.push(a),Y._lateAnimationHolders[a.targetPath].totalAdditiveWeight+=a.weight):(Y._lateAnimationHolders[a.targetPath].animations.push(a),Y._lateAnimationHolders[a.targetPath].totalWeight+=a.weight)}_setValue(a,R,Y,c,K){if(this._currentActiveTarget=R,this._weight=c,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const a=R[this._targetPath];a.clone?this._originalBlendValue=a.clone():this._originalBlendValue=a}this._originalBlendValue.m?T.e.AllowMatrixDecomposeForInterpolation?this._currentValue?U.d.DecomposeLerpToRef(this._originalBlendValue,Y,this._blendingFactor,this._currentValue):this._currentValue=U.d.DecomposeLerp(this._originalBlendValue,Y,this._blendingFactor):this._currentValue?U.d.LerpToRef(this._originalBlendValue,Y,this._blendingFactor,this._currentValue):this._currentValue=U.d.Lerp(this._originalBlendValue,Y,this._blendingFactor):this._currentValue=T.e._UniversalLerp(this._originalBlendValue,Y,this._blendingFactor);const c=a&&a.animationPropertiesOverride?a.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=c}else this._currentValue?this._currentValue.p?this._currentValue.p(Y):this._currentValue=Y:null!==Y&&void 0!==Y&&Y.clone?this._currentValue=Y.clone():this._currentValue=Y;-1!==c?this._registerTargetForLateAnimationBinding(this,this._originalValue[K]):this._animationState.loopMode===T.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[K],R[this._targetPath]):R[this._targetPath]=this._originalValue[K]+this._currentValue:R[this._targetPath]=this._currentValue,a.Pg&&a.Pg(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(a){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const Y=this._animation.getKeys();a<Y[0].frame?a=Y[0].frame:a>Y[Y.length-1].frame&&(a=Y[Y.length-1].frame);const T=this._events;if(T.length)for(let K=0;K<T.length;K++)T[K].onlyOnce||(T[K].isDone=T[K].frame<a);this._currentFrame=a;const c=this._animation._interpolate(a,this._animationState);this.setValue(c,R)}_prepareForSpeedRatioChange(a){const R=this._previousElapsedTime*(this._animation.framePerSecond*a)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-R}animate(a,R,Y,c,K){let g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const t=this._animation,U=t.targetPropertyPath;if(!U||U.length<1)return this._stopped=!0,!1;let b=!0;(R<this._minFrame||R>this._maxFrame)&&(R=this._minFrame),(Y<this._minFrame||Y>this._maxFrame)&&(Y=this._maxFrame);const C=Y-R;let e,Z=a*(t.framePerSecond*K)/1e3+this._absoluteFrameOffset,W=0,o=!1;const i=c&&this._animationState.loopMode===T.e.ANIMATIONLOOPMODE_YOYO;if(i){const a=(Z-R)/C,Y=Math.sin(a*Math.PI);Z=Math.abs(Y)*C+R;const T=Y>=0?1:-1;this._yoyoDirection!==T&&(o=!0),this._yoyoDirection=T}if(this._previousElapsedTime=a,this._previousAbsoluteFrame=Z,!c&&Y>=R&&(Z>=C&&K>0||Z<=0&&K<0))b=!1,W=t._getKeyValue(this._maxValue);else if(!c&&R>=Y&&(Z<=C&&K<0||Z>=0&&K>0))b=!1,W=t._getKeyValue(this._minValue);else if(this._animationState.loopMode!==T.e.ANIMATIONLOOPMODE_CYCLE){const a=Y.toString()+R.toString();if(!this._offsetsCache[a]){this._animationState.repeatCount=0,this._animationState.loopMode=T.e.ANIMATIONLOOPMODE_CYCLE;const c=t._interpolate(R,this._animationState),K=t._interpolate(Y,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),t.dataType){case T.e.ANIMATIONTYPE_FLOAT:this._offsetsCache[a]=K-c;break;case T.e.ANIMATIONTYPE_QUATERNION:case T.e.ANIMATIONTYPE_VECTOR3:case T.e.ANIMATIONTYPE_VECTOR2:case T.e.ANIMATIONTYPE_SIZE:case T.e.ANIMATIONTYPE_COLOR3:this._offsetsCache[a]=K.Vc(c)}this._highLimitsCache[a]=K}W=this._highLimitsCache[a],e=this._offsetsCache[a]}if(void 0===e)switch(t.dataType){case T.e.ANIMATIONTYPE_FLOAT:e=0;break;case T.e.ANIMATIONTYPE_QUATERNION:e=T.l;break;case T.e.ANIMATIONTYPE_VECTOR3:e=T.p;break;case T.e.ANIMATIONTYPE_VECTOR2:e=T.o;break;case T.e.ANIMATIONTYPE_SIZE:e=T.n;break;case T.e.ANIMATIONTYPE_COLOR3:e=T.g;break;case T.e.ANIMATIONTYPE_COLOR4:e=T.i}let d;if(this._host&&this._host.syncRoot){const a=this._host.syncRoot;d=R+C*((a.masterFrame-a.fromFrame)/(a.toFrame-a.fromFrame))}else d=Z>0&&R>Y||Z<0&&R<Y?b&&0!==C?Y+Z%C:R:b&&0!==C?R+Z%C:Y;const v=this._events;if(!i&&(K>0&&this.currentFrame>d||K<0&&this.currentFrame<d)||i&&o){this._onLoop();for(let a=0;a<v.length;a++)v[a].onlyOnce||(v[a].isDone=!1);this._animationState.key=K>0?0:t.getKeys().length-1}this._currentFrame=d,this._animationState.repeatCount=0===C?0:Z/C|0,this._animationState.highLimitValue=W,this._animationState.offsetValue=e;const A=t._interpolate(d,this._animationState);if(this.setValue(A,g),v.length)for(let T=0;T<v.length;T++)if(C>=0&&d>=v[T].frame&&v[T].frame>=R||C<0&&d<=v[T].frame&&v[T].frame<=R){const a=v[T];a.isDone||(a.onlyOnce&&(v.splice(T,1),T--),a.isDone=!0,a.action(d))}return b||(this._stopped=!0),b}}var C=Y(10767);class e{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(a){this._weight=-1!==a?Math.min(Math.max(a,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(a){for(let R=0;R<this._runtimeAnimations.length;R++){this._runtimeAnimations[R]._prepareForSpeedRatioChange(a)}this._speedRatio=a,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(a,R){let Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,K=arguments.length>4&&void 0!==arguments[4]&&arguments[4],g=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,t=arguments.length>6?arguments[6]:void 0,U=arguments.length>7?arguments[7]:void 0,b=arguments.length>8?arguments[8]:void 0,C=arguments.length>9&&void 0!==arguments[9]&&arguments[9],e=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=R,this.fromFrame=Y,this.toFrame=T,this.loopAnimation=K,this.onAnimationEnd=t,this.onAnimationLoop=b,this.isAdditive=C,this.playOrder=e,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Gd=!1,this._speedRatio=1,this._weight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new c.e,this.onAnimationLoopObservable=new c.e,this._scene=a,U&&this.appendAnimations(R,U),this._speedRatio=g,a._activeAnimatables.push(this)}syncWith(a){if(this._syncRoot=a,a){const a=this._scene._activeAnimatables.indexOf(this);a>-1&&(this._scene._activeAnimatables.splice(a,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(a,R){for(let Y=0;Y<R.length;Y++){const T=R[Y],c=new b(a,T,this._scene,this);c._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(c)}}getAnimationByTargetProperty(a){const R=this._runtimeAnimations;for(let Y=0;Y<R.length;Y++)if(R[Y].animation.targetProperty===a)return R[Y].animation;return null}getRuntimeAnimationByTargetProperty(a){const R=this._runtimeAnimations;for(let Y=0;Y<R.length;Y++)if(R[Y].animation.targetProperty===a)return R[Y];return null}reset(){const a=this._runtimeAnimations;for(let R=0;R<a.length;R++)a[R].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(a){const R=this._runtimeAnimations;for(let Y=0;Y<R.length;Y++)R[Y].animation.enableBlending=!0,R[Y].animation.blendingSpeed=a}disableBlending(){const a=this._runtimeAnimations;for(let R=0;R<a.length;R++)a[R].animation.enableBlending=!1}goToFrame(a){const R=this._runtimeAnimations;if(R[0]){const Y=R[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??R[0].currentFrame;const T=0===this.speedRatio?0:(a-this._frameToSyncFromJump)/Y*1e3/this.speedRatio;this._manualJumpDelay=-T}for(let Y=0;Y<R.length;Y++)R[Y].goToFrame(a,this._weight);this._goToFrame=a}get paused(){return this.Gd}pause(){this.Gd||(this.Gd=!0)}restart(){this.Gd=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(a,R){let Y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a||R){const c=this._scene._activeAnimatables.indexOf(this);if(c>-1){const K=this._runtimeAnimations;for(let Y=K.length-1;Y>=0;Y--){const T=K[Y];a&&T.animation.name!=a||(R&&!R(T.target)||(T.dispose(),K.splice(Y,1)))}0==K.length&&(Y||this._scene._activeAnimatables.splice(c,1),T||this._raiseOnAnimationEnd())}}else{const a=this._scene._activeAnimatables.indexOf(this);if(a>-1){Y||this._scene._activeAnimatables.splice(a,1);const R=this._runtimeAnimations;for(let a=0;a<R.length;a++)R[a].dispose();this._runtimeAnimations.length=0,T||this._raiseOnAnimationEnd()}}}waitAsync(){return new Promise((a=>{this.onAnimationEndObservable.add((()=>{a(this)}),void 0,void 0,this,!0)}))}_animate(a){if(this.Gd)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=a),!0;if(null===this._localDelayOffset?(this._localDelayOffset=a,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=a-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight)return!0;let R=!1;const Y=this._runtimeAnimations;let T;for(T=0;T<Y.length;T++){const c=Y[T].animate(a-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);R=R||c}if(this.animationStarted=R,!R){if(this.disposeOnEnd)for(T=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(T,1),T=0;T<Y.length;T++)Y[T].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return R}}function Z(a){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return a.originalValue;let R=1;const Y=U.k.gb[0],T=U.k.gb[1],c=U.k.Quaternion[0];let K=0;const g=a.animations[0],t=a.originalValue;let b=1,C=!1;if(a.totalWeight<1)b=1-a.totalWeight,t.decompose(T,c,Y);else{if(K=1,R=a.totalWeight,b=g.weight/R,1==b){if(!a.totalAdditiveWeight)return g.currentValue;C=!0}g.currentValue.decompose(T,c,Y)}if(!C){T.scaleInPlace(b),Y.scaleInPlace(b),c.scaleInPlace(b);for(let g=K;g<a.animations.length;g++){const K=a.animations[g];if(0===K.weight)continue;b=K.weight/R;const t=U.k.gb[2],C=U.k.gb[3],e=U.k.Quaternion[1];K.currentValue.decompose(C,e,t),C.scaleAndAddToRef(b,T),e.scaleAndAddToRef(U.g.Dot(c,e)>0?b:-b,c),t.scaleAndAddToRef(b,Y)}c.normalize()}for(let Z=0;Z<a.additiveAnimations.length;Z++){const R=a.additiveAnimations[Z];if(0===R.weight)continue;const K=U.k.gb[2],g=U.k.gb[3],t=U.k.Quaternion[1];R.currentValue.decompose(g,t,K),g.multiplyToRef(T,g),U.m.LerpToRef(T,g,R.weight,T),c.multiplyToRef(t,t),U.g.SlerpToRef(c,t,R.weight,c),K.scaleAndAddToRef(R.weight,Y)}const e=g?g._animationState.workValue:U.k.Matrix[0].clone();return U.d.ComposeToRef(T,c,Y,e),e}function W(a,R){if(0===a.totalWeight&&0===a.totalAdditiveWeight)return R;const Y=a.animations[0],T=a.originalValue;let c=R;if(0===a.totalWeight&&a.totalAdditiveWeight>0)c.p(T);else if(1===a.animations.length){if(U.g.SlerpToRef(T,Y.currentValue,Math.min(1,a.totalWeight),c),0===a.totalAdditiveWeight)return c}else if(a.animations.length>1){let Y,K,g=1;if(a.totalWeight<1){const R=1-a.totalWeight;Y=[],K=[],Y.push(T),K.push(R)}else{if(2===a.animations.length&&(U.g.SlerpToRef(a.animations[0].currentValue,a.animations[1].currentValue,a.animations[1].weight/a.totalWeight,R),0===a.totalAdditiveWeight))return R;Y=[],K=[],g=a.totalWeight}for(let R=0;R<a.animations.length;R++){const T=a.animations[R];Y.push(T.currentValue),K.push(T.weight/g)}let t=0;for(let a=0;a<Y.length;)a?(t+=K[a],U.g.SlerpToRef(c,Y[a],K[a]/t,c),a++):(U.g.SlerpToRef(Y[a],Y[a+1],K[a+1]/(K[a]+K[a+1]),R),c=R,t=K[a]+K[a+1],a+=2)}for(let K=0;K<a.additiveAnimations.length;K++){const R=a.additiveAnimations[K];0!==R.weight&&(c.multiplyToRef(R.currentValue,U.k.Quaternion[0]),U.g.SlerpToRef(c,U.k.Quaternion[0],R.weight,c))}return c}var o,i,d=Y(11070);o=d.b,(i=t.d)&&(i.prototype.copyAnimationRange=function(a,R,Y){let c=arguments.length>3&&void 0!==arguments[3]&&arguments[3],K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new T.e(this.name,"_matrix",a.animations[0].framePerSecond,T.e.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const g=a.animations[0].getRange(R);if(!g)return!1;const t=g.from,U=g.to,b=a.animations[0].getKeys(),C=a.length,e=a.getParent(),Z=this.getParent(),W=c&&e&&C&&this.length&&C!==this.length,o=W&&Z&&e?Z.length/e.length:1,i=c&&!Z&&K&&(1!==K.x||1!==K.y||1!==K.z),d=this.animations[0].getKeys();let v,A,r;for(let T=0,m=b.length;T<m;T++)v=b[T],v.frame>=t&&v.frame<=U&&(c?(r=v.value.clone(),W?(A=r.getTranslation(),r.setTranslation(A.scaleInPlace(o))):i&&K?(A=r.getTranslation(),r.setTranslation(A.multiplyInPlace(K))):r=v.value):r=v.value,d.push({frame:v.frame+Y,value:r}));return this.animations[0].createRange(R,t+Y,U+Y),!0}),o&&(o.prototype._animate=function(a){if(!this.animationsEnabled)return;const R=C.c.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=R}this.deltaTime=void 0!==a?a:this.useConstantAnimationDeltaTime?16:(R-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=R;const Y=this._activeAnimatables;if(0===Y.length)return;this._animationTime+=this.deltaTime;const c=this._animationTime;for(let T=0;T<Y.length;T++){const a=Y[T];!a._animate(c)&&a.disposeOnEnd&&T--}!function(a){if(a._registeredForLateAnimationBindings.length){for(let R=0;R<a._registeredForLateAnimationBindings.length;R++){const Y=a._registeredForLateAnimationBindings.data[R];for(const a in Y._lateAnimationHolders){const R=Y._lateAnimationHolders[a],c=R.animations[0],K=R.originalValue;if(void 0===K||null===K)continue;const g=T.e.AllowMatrixDecomposeForInterpolation&&K.m;let t=Y[a];if(g)t=Z(R);else if(void 0!==K.w)t=W(R,t||U.g.Identity());else{let a=0,Y=1;const g=c&&c._animationState.loopMode===T.e.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(R.totalWeight<1)t=g?K.clone?K.clone():K:c&&K.scale?K.scale(1-R.totalWeight):c?K*(1-R.totalWeight):K.clone?K.clone():K;else if(c){Y=R.totalWeight;const T=c.weight/Y;t=1!==T?c.currentValue.scale?c.currentValue.scale(T):c.currentValue*T:c.currentValue,g&&(t.addToRef?t.addToRef(K,t):t+=K),a=1}for(let T=a;T<R.animations.length;T++){const a=R.animations[T],c=a.weight/Y;c&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(c,t):t+=a.currentValue*c)}for(let T=0;T<R.additiveAnimations.length;T++){const a=R.additiveAnimations[T],Y=a.weight;Y&&(a.currentValue.scaleAndAddToRef?a.currentValue.scaleAndAddToRef(Y,t):t+=a.currentValue*Y)}}Y[a]=t}Y._lateAnimationHolders={}}a._registeredForLateAnimationBindings.reset()}}(this)},o.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((a,R)=>a.playOrder-R.playOrder))},o.prototype.beginWeightedAnimation=function(a,R,Y){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,c=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,t=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,b=arguments.length>9?arguments[9]:void 0,C=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const e=this.beginAnimation(a,R,Y,c,K,g,t,!1,U,b,C);return e.weight=T,e},o.prototype.beginAnimation=function(a,R,Y,T){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,K=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0,t=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],U=arguments.length>8?arguments[8]:void 0,b=arguments.length>9?arguments[9]:void 0,C=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(c<0){const a=R;R=Y,Y=a,c=-c}R>Y&&(c=-c),t&&this.stopAnimation(a,void 0,U),g||(g=new e(this,a,R,Y,T,c,K,void 0,b,C));const Z=!U||U(a);if(a.animations&&Z&&g.appendAnimations(a,a.animations),a.getAnimatables){const C=a.getAnimatables();for(let a=0;a<C.length;a++)this.beginAnimation(C[a],R,Y,T,c,K,g,t,U,b)}return g.reset(),g},o.prototype.beginHierarchyAnimation=function(a,R,Y,T,c){let K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,g=arguments.length>6?arguments[6]:void 0,t=arguments.length>7?arguments[7]:void 0,U=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],b=arguments.length>9?arguments[9]:void 0,C=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const e=a.getDescendants(R),Z=[];Z.push(this.beginAnimation(a,Y,T,c,K,g,t,U,b,void 0,C));for(const W of e)Z.push(this.beginAnimation(W,Y,T,c,K,g,t,U,b,void 0,C));return Z},o.prototype.beginDirectAnimation=function(a,R,Y,T,c){let K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(K<0){const a=Y;Y=T,T=a,K=-K}return Y>T&&(K=-K),new e(this,a,Y,T,c,K,arguments.length>6?arguments[6]:void 0,R,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},o.prototype.beginDirectHierarchyAnimation=function(a,R,Y,T,c,K,g,t,U){let b=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const C=a.getDescendants(R),e=[];e.push(this.beginDirectAnimation(a,Y,T,c,K,g,t,U,b));for(const Z of C)e.push(this.beginDirectAnimation(Z,Y,T,c,K,g,t,U,b));return e},o.prototype.getAnimatableByTarget=function(a){for(let R=0;R<this._activeAnimatables.length;R++)if(this._activeAnimatables[R].target===a)return this._activeAnimatables[R];return null},o.prototype.getAllAnimatablesByTarget=function(a){const R=[];for(let Y=0;Y<this._activeAnimatables.length;Y++)this._activeAnimatables[Y].target===a&&R.push(this._activeAnimatables[Y]);return R},o.prototype.stopAnimation=function(a,R,Y){const T=this.getAllAnimatablesByTarget(a);for(const c of T)c.stop(R,Y)},o.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let a=0;a<this._activeAnimatables.length;a++)this._activeAnimatables[a].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const a of this.animationGroups)a.stop()});class v{getClassName(){return"TargetedAnimation"}serialize(){const a={};return a.animation=this.animation.serialize(),a.targetId=this.target.id,a}}class A{get mask(){return this._mask}set mask(a){this._mask!==a&&(this._mask=a,this.syncWithMask(!0))}syncWithMask(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||a){this._numActiveAnimatables=0;for(let a=0;a<this._animatables.length;++a){const R=this._animatables[a];!this.mask||this.mask.disabled||this.mask.retainsTarget(R.target.name)?(this._numActiveAnimatables++,R.paused&&R.restart()):R.paused||R.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let a=0;a<this._animatables.length;++a){const R=this._animatables[a];this.mask.retainsTarget(R.target.name)||(R.stop(),this._animatables.splice(a,1),--a)}for(let a=0;a<this._targetedAnimations.length;a++){const R=this._targetedAnimations[a];this.mask.retainsTarget(R.target.name)||(this._targetedAnimations.splice(a,1),--a)}}}get from(){return this._from}set from(a){if(this._from!==a){this._from=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].fromFrame=this._from}}}get to(){return this._to}set to(a){if(this._to!==a){this._to=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(a){if(this._speedRatio!==a){this._speedRatio=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(a){if(this._loopAnimation!==a){this._loopAnimation=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(a){if(this._isAdditive!==a){this._isAdditive=a;for(let a=0;a<this._animatables.length;a++){this._animatables[a].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(a){this._weight!==a&&(this._weight=a,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(a){if(this._playOrder!==a&&(this._playOrder=a,this._animatables.length>0)){for(let a=0;a<this._animatables.length;a++)this._animatables[a].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(a){if(this._enableBlending!==a&&(this._enableBlending=a,null!==a))for(let R=0;R<this._targetedAnimations.length;++R)this._targetedAnimations[R].animation.enableBlending=a}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(a){if(this._blendingSpeed!==a&&(this._blendingSpeed=a,null!==a))for(let R=0;R<this._targetedAnimations.length;++R)this._targetedAnimations[R].animation.blendingSpeed=a}getLength(a,R){a=a??this._from;return((R=R??this._to)-a)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(a){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Y=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3?arguments[3]:void 0;if(0===a.length)return null;T=T??a[0].weight;let c=Number.MAX_VALUE,K=-Number.MAX_VALUE;if(Y)for(const t of a)t.from<c&&(c=t.from),t.to>K&&(K=t.to);const g=new A(a[0].name+"_merged",a[0]._scene,T);for(const t of a){Y&&t.normalize(c,K);for(const a of t.targetedAnimations)g.addTargetedAnimation(a.animation,a.target);R&&t.dispose()}return g}constructor(a){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=a,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new c.e,this.onAnimationLoopObservable=new c.e,this.onAnimationGroupLoopObservable=new c.e,this.onAnimationGroupEndObservable=new c.e,this.onAnimationGroupPauseObservable=new c.e,this.onAnimationGroupPlayObservable=new c.e,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=R||K.c.LastCreatedScene,this._weight=Y,this._playOrder=T,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(a,R){const Y=new v;Y.animation=a,Y.target=R;const T=a.getKeys();return this._from>T[0].frame&&(this._from=T[0].frame),this._to<T[T.length-1].frame&&(this._to=T[T.length-1].frame),null!==this._enableBlending&&(a.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(a.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(Y),this._shouldStart=!0,Y}removeTargetedAnimation(a){for(let R=this._targetedAnimations.length-1;R>-1;R--){this._targetedAnimations[R].animation===a&&this._targetedAnimations.splice(R,1)}}normalize(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==a&&(a=this._from),null==R&&(R=this._to);for(let Y=0;Y<this._targetedAnimations.length;Y++){const T=this._targetedAnimations[Y].animation.getKeys(),c=T[0],K=T[T.length-1];if(c.frame>a){const R={frame:a,value:c.value,inTangent:c.inTangent,outTangent:c.outTangent,interpolation:c.interpolation};T.splice(0,0,R)}if(K.frame<R){const a={frame:R,value:K.value,inTangent:K.inTangent,outTangent:K.outTangent,interpolation:K.interpolation};T.push(a)}}return this._from=a,this._to=R,this}_processLoop(a,R,Y){a.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(R),this._animationLoopFlags[Y]||(this._animationLoopFlags[Y]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,Y=arguments.length>2?arguments[2]:void 0,T=arguments.length>3?arguments[3]:void 0,c=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=a,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let K=0;K<this._targetedAnimations.length;K++){const g=this._targetedAnimations[K],t=this._scene.beginDirectAnimation(g.target,[g.animation],void 0!==Y?Y:this._from,void 0!==T?T:this._to,a,R,void 0,void 0,void 0!==c?c:this._isAdditive);t.weight=this._weight,t.playOrder=this._playOrder,t.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(g),this._checkAnimationGroupEnded(t)},this._processLoop(t,g,K),this._animatables.push(t)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=R,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let a=0;a<this._animatables.length;a++){this._animatables[a].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(a){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==a&&(this.loopAnimation=a),this.restart()):(this.stop(),this.start(a,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].reset()}return this}restart(){if(!this._isStarted)return this;for(let a=0;a<this._animatables.length;a++){this._animatables[a].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const R=this._animatables.slice();for(let T=0;T<R.length;T++)R[T].stop(void 0,void 0,!0,a);let Y=0;for(let T=0;T<this._scene._activeAnimatables.length;T++){const R=this._scene._activeAnimatables[T];R._runtimeAnimations.length>0?this._scene._activeAnimatables[Y++]=R:a&&this._checkAnimationGroupEnded(R,a)}return this._scene._activeAnimatables.length=Y,this._isStarted=!1,this}setWeightForAllAnimatables(a){for(let R=0;R<this._animatables.length;R++){this._animatables[R].weight=a}return this}syncAllAnimationsWith(a){for(let R=0;R<this._animatables.length;R++){this._animatables[R].syncWith(a)}return this}goToFrame(a){if(!this._isStarted)return this;for(let R=0;R<this._animatables.length;R++){this._animatables[R].goToFrame(a)}return this}getCurrentFrame(){var a;return(null===(a=this.animatables[0])||void 0===a?void 0:a.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const a=this._scene.animationGroups.indexOf(this);if(a>-1&&this._scene.animationGroups.splice(a,1),this._parentContainer){const a=this._parentContainer.animationGroups.indexOf(this);a>-1&&this._parentContainer.animationGroups.splice(a,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(a){let R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Y=this._animatables.indexOf(a);Y>-1&&this._animatables.splice(Y,1),0===this._animatables.length&&(this._isStarted=!1,R||this.onAnimationGroupEndObservable.notifyObservers(this))}clone(a,R){let Y=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const T=new A(a||this.name,this._scene,this._weight,this._playOrder);T._from=this.from,T._to=this.to,T._speedRatio=this.speedRatio,T._loopAnimation=this.loopAnimation,T._isAdditive=this.isAdditive,T._enableBlending=this.enableBlending,T._blendingSpeed=this.blendingSpeed,T.metadata=this.metadata,T.mask=this.mask;for(const c of this._targetedAnimations)T.addTargetedAnimation(Y?c.animation.clone():c.animation,R?R(c.target):c.target);return T}serialize(){const a={};a.name=this.name,a.from=this.from,a.to=this.to,a.speedRatio=this.speedRatio,a.loopAnimation=this.loopAnimation,a.isAdditive=this.isAdditive,a.weight=this.weight,a.playOrder=this.playOrder,a.enableBlending=this.enableBlending,a.blendingSpeed=this.blendingSpeed,a.targetedAnimations=[];for(let R=0;R<this.targetedAnimations.length;R++){const Y=this.targetedAnimations[R];a.targetedAnimations[R]=Y.serialize()}return g.e&&g.e.HasTags(this)&&(a.tags=g.e.GetTags(this)),this.metadata&&(a.metadata=this.metadata),a}static Parse(a,R){const Y=new A(a.name,R,a.weight,a.playOrder);for(let c=0;c<a.targetedAnimations.length;c++){const K=a.targetedAnimations[c],g=T.e.Parse(K.animation),t=K.targetId;if("influence"===K.animation.property){const a=R.getMorphTargetById(t);a&&Y.addTargetedAnimation(g,a)}else{const a=R.getNodeById(t);null!=a&&Y.addTargetedAnimation(g,a)}}return g.e&&g.e.AddTagsTo(Y,a.tags),null!==a.from&&null!==a.to&&Y.normalize(a.from,a.to),void 0!==a.speedRatio&&(Y._speedRatio=a.speedRatio),void 0!==a.loopAnimation&&(Y._loopAnimation=a.loopAnimation),void 0!==a.isAdditive&&(Y._isAdditive=a.isAdditive),void 0!==a.weight&&(Y._weight=a.weight),void 0!==a.playOrder&&(Y._playOrder=a.playOrder),void 0!==a.enableBlending&&(Y._enableBlending=a.enableBlending),void 0!==a.blendingSpeed&&(Y._blendingSpeed=a.blendingSpeed),void 0!==a.metadata&&(Y.metadata=a.metadata),Y}static MakeAnimationAdditive(a,R,Y){let c;c="object"===typeof R?R:{referenceFrame:R,range:Y,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let K=a;c.cloneOriginalAnimationGroup&&(K=a.clone(c.clonedAnimationGroupName||K.name));const g=K.targetedAnimations;for(let t=0;t<g.length;t++){const a=g[t];a.animation=T.e.MakeAnimationAdditive(a.animation,c)}if(K.isAdditive=!0,c.clipKeys){let a=Number.MAX_VALUE,R=-Number.MAX_VALUE;const Y=K.targetedAnimations;for(let T=0;T<Y.length;T++){const c=Y[T].animation.getKeys();a>c[0].frame&&(a=c[0].frame),R<c[c.length-1].frame&&(R=c[c.length-1].frame)}K._from=a,K._to=R}return K}static ClipKeys(a,R,Y,T,c){const K=a.clone(T||a.name);return A.ClipKeysInPlace(K,R,Y,c)}static ClipKeysInPlace(a,R,Y,T){return A.ClipInPlace(a,R,Y,T,!1)}static ClipFrames(a,R,Y,T,c){const K=a.clone(T||a.name);return A.ClipFramesInPlace(K,R,Y,c)}static ClipFramesInPlace(a,R,Y,T){return A.ClipInPlace(a,R,Y,T,!0)}static ClipInPlace(a,R,Y,T){let c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],K=Number.MAX_VALUE,g=-Number.MAX_VALUE;const t=a.targetedAnimations;for(let U=0;U<t.length;U++){const a=t[U],b=T?a.animation:a.animation.clone();c&&(b.createKeyForFrame(R),b.createKeyForFrame(Y));const C=b.getKeys(),e=[];let Z=Number.MAX_VALUE;for(let T=0;T<C.length;T++){const a=C[T];if(!c&&T>=R&&T<=Y||c&&a.frame>=R&&a.frame<=Y){const R={frame:a.frame,value:a.value.clone?a.value.clone():a.value,inTangent:a.inTangent,outTangent:a.outTangent,interpolation:a.interpolation,lockedTangent:a.lockedTangent};Z===Number.MAX_VALUE&&(Z=R.frame),R.frame-=Z,e.push(R)}}0!==e.length?(K>e[0].frame&&(K=e[0].frame),g<e[e.length-1].frame&&(g=e[e.length-1].frame),b.setKeys(e,!0),a.animation=b):(t.splice(U,1),U--)}return a._from=K,a._to=g,a}getClassName(){return"AnimationGroup"}toString(a){let R="Name: "+this.name;return R+=", type: "+this.getClassName(),a&&(R+=", from: "+this._from,R+=", to: "+this._to,R+=", isStarted: "+this._isStarted,R+=", speedRatio: "+this._speedRatio,R+=", targetedAnimations length: "+this._targetedAnimations.length,R+=", animatables length: "+this._animatables),R}}}}]);