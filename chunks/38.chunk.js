/*! For license information please see 4ldmwa.38.1a1236b2.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11891:(L,i,P)=>{P.r(i),P.d(i,{getAnalytics:()=>YL,getGoogleAnalyticsClientId:()=>QL,initializeAnalytics:()=>EL,isSupported:()=>JL,logEvent:()=>Pi,setAnalyticsCollectionEnabled:()=>Li,setConsent:()=>Di,setCurrentScreen:()=>WL,setDefaultEventParameters:()=>ii,setUserId:()=>kL,setUserProperties:()=>yL,settings:()=>fL});var D=P(11865),V=P(11887),M=P(11878),a=P(11871);let w,O;const U=new WeakMap,C=new WeakMap,T=new WeakMap,c=new WeakMap,r=new WeakMap;let F={get(L,i,P){if(L instanceof IDBTransaction){if("done"===i)return C.get(L);if("objectStoreNames"===i)return L.objectStoreNames||T.get(L);if("store"===i)return P.objectStoreNames[1]?void 0:P.objectStore(P.objectStoreNames[0])}return H(L[i])},set:(L,i,P)=>(L[i]=P,!0),has:(L,i)=>L instanceof IDBTransaction&&("done"===i||"store"===i)||i in L};function S(L){return L!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(O||(O=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(L)?function(){for(var i=arguments.length,P=new Array(i),D=0;D<i;D++)P[D]=arguments[D];return L.apply(j(this),P),H(U.get(this))}:function(){for(var i=arguments.length,P=new Array(i),D=0;D<i;D++)P[D]=arguments[D];return H(L.apply(j(this),P))}:function(i){for(var P=arguments.length,D=new Array(P>1?P-1:0),V=1;V<P;V++)D[V-1]=arguments[V];const M=L.call(j(this),i,...D);return T.set(M,i.sort?i.sort():[i]),H(M)}}function q(L){return"function"===typeof L?S(L):(L instanceof IDBTransaction&&function(L){if(C.has(L))return;const i=new Promise(((i,P)=>{const D=()=>{L.removeEventListener("complete",V),L.removeEventListener("error",M),L.removeEventListener("abort",M)},V=()=>{i(),D()},M=()=>{P(L.error||new DOMException("AbortError","AbortError")),D()};L.addEventListener("complete",V),L.addEventListener("error",M),L.addEventListener("abort",M)}));C.set(L,i)}(L),i=L,(w||(w=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((L=>i instanceof L))?new Proxy(L,F):L);var i}function H(L){if(L instanceof IDBRequest)return function(L){const i=new Promise(((i,P)=>{const D=()=>{L.removeEventListener("success",V),L.removeEventListener("error",M)},V=()=>{i(H(L.result)),D()},M=()=>{P(L.error),D()};L.addEventListener("success",V),L.addEventListener("error",M)}));return i.then((i=>{i instanceof IDBCursor&&U.set(i,L)})).catch((()=>{})),r.set(i,L),i}(L);if(c.has(L))return c.get(L);const i=q(L);return i!==L&&(c.set(L,i),r.set(i,L)),i}const j=L=>r.get(L);const B=["get","getKey","getAll","getAllKeys","count"],u=["put","add","delete","clear"],p=new Map;function m(L,i){if(!(L instanceof IDBDatabase)||i in L||"string"!==typeof i)return;if(p.get(i))return p.get(i);const P=i.replace(/FromIndex$/,""),D=i!==P,V=u.includes(P);if(!(P in(D?IDBIndex:IDBObjectStore).prototype)||!V&&!B.includes(P))return;const M=async function(L){const i=this.transaction(L,V?"readwrite":"readonly");let M=i.store;for(var a=arguments.length,w=new Array(a>1?a-1:0),O=1;O<a;O++)w[O-1]=arguments[O];return D&&(M=M.index(w.shift())),(await Promise.all([M[P](...w),V&&i.done]))[0]};return p.set(i,M),M}F=(L=>({...L,get:(i,P,D)=>m(i,P)||L.get(i,P,D),has:(i,P)=>!!m(i,P)||L.has(i,P)}))(F);const X="@firebase/installations",o="0.6.4",g=1e4,Z=`w:${o}`,G="FIS_v2",n=36e5,K={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},I=new M.e("installations","Installations",K);function s(L){return L instanceof M.i&&L.code.includes("request-failed")}function A(L){let{projectId:i}=L;return`https://firebaseinstallations.googleapis.com/v1/projects/${i}/installations`}function e(L){return{token:L.token,requestStatus:2,expiresIn:(i=L.expiresIn,Number(i.replace("s","000"))),creationTime:Date.now()};var i}async function v(L,i){const P=(await i.json()).error;return I.create("request-failed",{requestName:L,serverCode:P.code,serverMessage:P.message,serverStatus:P.status})}function z(L){let{apiKey:i}=L;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":i})}function d(L,i){let{refreshToken:P}=i;const D=z(L);return D.append("Authorization",function(L){return`${G} ${L}`}(P)),D}async function h(L){const i=await L();return i.status>=500&&i.status<600?L():i}function R(L){return new Promise((i=>{setTimeout(i,L)}))}const l=/^[cdef][\w-]{21}$/;function b(){try{const L=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(L),L[0]=112+L[0]%16;const i=function(L){const i=(P=L,btoa(String.fromCharCode(...P)).replace(/\+/g,"-").replace(/\//g,"_"));var P;return i.substr(0,22)}(L);return l.test(i)?i:""}catch(L){return""}}function x(L){return`${L.appName}!${L.appId}`}const t=new Map;function f(L,i){const P=x(L);N(P,i),function(L,i){const P=E();P&&P.postMessage({key:L,fid:i});J()}(P,i)}function N(L,i){const P=t.get(L);if(P)for(const D of P)D(i)}let Y=null;function E(){return!Y&&"BroadcastChannel"in self&&(Y=new BroadcastChannel("[Firebase] FID Change"),Y.onmessage=L=>{N(L.data.key,L.data.fid)}),Y}function J(){0===t.size&&Y&&(Y.close(),Y=null)}const W="firebase-installations-store";let Q=null;function k(){return Q||(Q=function(L,i){let{blocked:P,upgrade:D,blocking:V,terminated:M}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=indexedDB.open(L,i),w=H(a);return D&&a.addEventListener("upgradeneeded",(L=>{D(H(a.result),L.oldVersion,L.newVersion,H(a.transaction))})),P&&a.addEventListener("blocked",(()=>P())),w.then((L=>{M&&L.addEventListener("close",(()=>M())),V&&L.addEventListener("versionchange",(()=>V()))})).catch((()=>{})),w}("firebase-installations-database",1,{upgrade:(L,i)=>{if(0===i)L.createObjectStore(W)}})),Q}async function y(L,i){const P=x(L),D=(await k()).transaction(W,"readwrite"),V=D.objectStore(W),M=await V.get(P);return await V.put(i,P),await D.done,M&&M.fid===i.fid||f(L,i.fid),i}async function LL(L){const i=x(L),P=(await k()).transaction(W,"readwrite");await P.objectStore(W).delete(i),await P.done}async function iL(L,i){const P=x(L),D=(await k()).transaction(W,"readwrite"),V=D.objectStore(W),M=await V.get(P),a=i(M);return void 0===a?await V.delete(P):await V.put(a,P),await D.done,!a||M&&M.fid===a.fid||f(L,a.fid),a}async function PL(L){let i;const P=await iL(L.appConfig,(P=>{const D=function(L){const i=L||{fid:b(),registrationStatus:0};return ML(i)}(P),V=function(L,i){if(0===i.registrationStatus){if(!navigator.onLine){return{installationEntry:i,registrationPromise:Promise.reject(I.create("app-offline"))}}const P={fid:i.fid,registrationStatus:1,registrationTime:Date.now()},D=async function(L,i){try{const P=await async function(L,i){let{appConfig:P,heartbeatServiceProvider:D}=L,{fid:V}=i;const M=A(P),a=z(P),w=D.getImmediate({optional:!0});if(w){const L=await w.getHeartbeatsHeader();L&&a.append("x-firebase-client",L)}const O={fid:V,authVersion:G,appId:P.appId,sdkVersion:Z},U={method:"POST",headers:a,body:JSON.stringify(O)},C=await h((()=>fetch(M,U)));if(C.ok){const L=await C.json();return{fid:L.fid||V,registrationStatus:2,refreshToken:L.refreshToken,authToken:e(L.authToken)}}throw await v("Create Installation",C)}(L,i);return y(L.appConfig,P)}catch(P){throw s(P)&&409===P.customData.serverCode?await LL(L.appConfig):await y(L.appConfig,{fid:i.fid,registrationStatus:0}),P}}(L,P);return{installationEntry:P,registrationPromise:D}}return 1===i.registrationStatus?{installationEntry:i,registrationPromise:DL(L)}:{installationEntry:i}}(L,D);return i=V.registrationPromise,V.installationEntry}));return""===P.fid?{installationEntry:await i}:{installationEntry:P,registrationPromise:i}}async function DL(L){let i=await VL(L.appConfig);for(;1===i.registrationStatus;)await R(100),i=await VL(L.appConfig);if(0===i.registrationStatus){const{installationEntry:i,registrationPromise:P}=await PL(L);return P||i}return i}function VL(L){return iL(L,(L=>{if(!L)throw I.create("installation-not-found");return ML(L)}))}function ML(L){return 1===(i=L).registrationStatus&&i.registrationTime+g<Date.now()?{fid:L.fid,registrationStatus:0}:L;var i}async function aL(L,i){let{appConfig:P,heartbeatServiceProvider:D}=L;const V=function(L,i){let{fid:P}=i;return`${A(L)}/${P}/authTokens:generate`}(P,i),M=d(P,i),a=D.getImmediate({optional:!0});if(a){const L=await a.getHeartbeatsHeader();L&&M.append("x-firebase-client",L)}const w={installation:{sdkVersion:Z,appId:P.appId}},O={method:"POST",headers:M,body:JSON.stringify(w)},U=await h((()=>fetch(V,O)));if(U.ok){return e(await U.json())}throw await v("Generate Auth Token",U)}async function wL(L){let i,P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const D=await iL(L.appConfig,(D=>{if(!UL(D))throw I.create("not-registered");const V=D.authToken;if(!P&&function(L){return 2===L.requestStatus&&!function(L){const i=Date.now();return i<L.creationTime||L.creationTime+L.expiresIn<i+n}(L)}(V))return D;if(1===V.requestStatus)return i=async function(L,i){let P=await OL(L.appConfig);for(;1===P.authToken.requestStatus;)await R(100),P=await OL(L.appConfig);const D=P.authToken;return 0===D.requestStatus?wL(L,i):D}(L,P),D;{if(!navigator.onLine)throw I.create("app-offline");const P=function(L){const i={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},L),{authToken:i})}(D);return i=async function(L,i){try{const P=await aL(L,i),D=Object.assign(Object.assign({},i),{authToken:P});return await y(L.appConfig,D),P}catch(P){if(!s(P)||401!==P.customData.serverCode&&404!==P.customData.serverCode){const P=Object.assign(Object.assign({},i),{authToken:{requestStatus:0}});await y(L.appConfig,P)}else await LL(L.appConfig);throw P}}(L,P),P}}));return i?await i:D.authToken}function OL(L){return iL(L,(L=>{if(!UL(L))throw I.create("not-registered");const i=L.authToken;return 1===(P=i).requestStatus&&P.requestTime+g<Date.now()?Object.assign(Object.assign({},L),{authToken:{requestStatus:0}}):L;var P}))}function UL(L){return void 0!==L&&2===L.registrationStatus}async function CL(L){let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const P=L;await async function(L){const{registrationPromise:i}=await PL(L);i&&await i}(P);return(await wL(P,i)).token}function TL(L){return I.create("missing-app-config-values",{valueName:L})}const cL="installations",rL=L=>{const i=L.getProvider("app").getImmediate(),P=function(L){if(!L||!L.options)throw TL("App Configuration");if(!L.name)throw TL("App Name");const i=["projectId","apiKey","appId"];for(const P of i)if(!L.options[P])throw TL(P);return{appName:L.name,projectId:L.options.projectId,apiKey:L.options.apiKey,appId:L.options.appId}}(i);return{app:i,appConfig:P,heartbeatServiceProvider:(0,D.C)(i,"heartbeat"),_delete:()=>Promise.resolve()}},FL=L=>{const i=L.getProvider("app").getImmediate(),P=(0,D.C)(i,cL).getImmediate();return{getId:()=>async function(L){const i=L,{installationEntry:P,registrationPromise:D}=await PL(i);return D?D.catch(console.error):wL(i).catch(console.error),P.fid}(P),getToken:L=>CL(P,L)}};(0,D.G)(new a.f(cL,rL,"PUBLIC")),(0,D.G)(new a.f("installations-internal",FL,"PRIVATE")),(0,D.bb)(X,o),(0,D.bb)(X,o,"esm2017");const SL="analytics",qL="https://www.googletagmanager.com/gtag/js",HL=new V.g("@firebase/analytics"),jL={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},BL=new M.e("analytics","Analytics",jL);function uL(L){if(!L.startsWith(qL)){const i=BL.create("invalid-gtag-resource",{gtagURL:L});return HL.warn(i.message),""}return L}function pL(L){return Promise.all(L.map((L=>L.catch((L=>L)))))}function mL(L,i){const P=function(L,i){let P;return window.trustedTypes&&(P=window.trustedTypes.createPolicy(L,i)),P}("firebase-js-sdk-policy",{createScriptURL:uL}),D=document.createElement("script"),V=`${qL}?l=${L}&id=${i}`;D.src=P?null===P||void 0===P?void 0:P.createScriptURL(V):V,D.async=!0,document.head.appendChild(D)}function XL(L,i,P,D){return async function(V){try{for(var M=arguments.length,a=new Array(M>1?M-1:0),w=1;w<M;w++)a[w-1]=arguments[w];if("event"===V){const[D,V]=a;await async function(L,i,P,D,V){try{let M=[];if(V&&V.send_to){let L=V.send_to;Array.isArray(L)||(L=[L]);const D=await pL(P);for(const P of L){const L=D.find((L=>L.measurementId===P)),V=L&&i[L.appId];if(!V){M=[];break}M.push(V)}}0===M.length&&(M=Object.values(i)),await Promise.all(M),L("event",D,V||{})}catch(M){HL.error(M)}}(L,i,P,D,V)}else if("config"===V){const[V,M]=a;await async function(L,i,P,D,V,M){const a=D[V];try{if(a)await i[a];else{const L=(await pL(P)).find((L=>L.measurementId===V));L&&await i[L.appId]}}catch(w){HL.error(w)}L("config",V,M)}(L,i,P,D,V,M)}else if("consent"===V){const[i]=a;L("consent","update",i)}else if("get"===V){const[i,P,D]=a;L("get",i,P,D)}else if("set"===V){const[i]=a;L("set",i)}else L(V,...a)}catch(O){HL.error(O)}}}const oL=new class{constructor(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=L,this.intervalMillis=i}getThrottleMetadata(L){return this.throttleMetadata[L]}setThrottleMetadata(L,i){this.throttleMetadata[L]=i}deleteThrottleMetadata(L){delete this.throttleMetadata[L]}};function gL(L){return new Headers({Accept:"application/json","x-goog-api-key":L})}async function ZL(L){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:oL,P=arguments.length>2?arguments[2]:void 0;const{appId:D,apiKey:V,measurementId:M}=L.options;if(!D)throw BL.create("no-app-id");if(!V){if(M)return{measurementId:M,appId:D};throw BL.create("no-api-key")}const a=i.getThrottleMetadata(D)||{backoffCount:0,throttleEndTimeMillis:Date.now()},w=new nL;return setTimeout((async()=>{w.abort()}),void 0!==P?P:6e4),GL({appId:D,apiKey:V,measurementId:M},a,w,i)}async function GL(L,i,P){let{throttleEndTimeMillis:D,backoffCount:V}=i,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:oL;var w;const{appId:O,measurementId:U}=L;try{await function(L,i){return new Promise(((P,D)=>{const V=Math.max(i-Date.now(),0),M=setTimeout(P,V);L.addEventListener((()=>{clearTimeout(M),D(BL.create("fetch-throttle",{throttleEndTimeMillis:i}))}))}))}(P,D)}catch(C){if(U)return HL.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${U} provided in the "measurementId" field in the local Firebase config. [${null===C||void 0===C?void 0:C.message}]`),{appId:O,measurementId:U};throw C}try{const i=await async function(L){var i;const{appId:P,apiKey:D}=L,V={method:"GET",headers:gL(D)},M="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",P),a=await fetch(M,V);if(200!==a.status&&304!==a.status){let L="";try{const P=await a.json();(null===(i=P.error)||void 0===i?void 0:i.message)&&(L=P.error.message)}catch(w){}throw BL.create("config-fetch-failed",{httpStatus:a.status,responseMessage:L})}return a.json()}(L);return a.deleteThrottleMetadata(O),i}catch(C){const i=C;if(!function(L){if(!(L instanceof M.i)||!L.customData)return!1;const i=Number(L.customData.httpStatus);return 429===i||500===i||503===i||504===i}(i)){if(a.deleteThrottleMetadata(O),U)return HL.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${U} provided in the "measurementId" field in the local Firebase config. [${null===i||void 0===i?void 0:i.message}]`),{appId:O,measurementId:U};throw C}const D=503===Number(null===(w=null===i||void 0===i?void 0:i.customData)||void 0===w?void 0:w.httpStatus)?(0,M.v)(V,a.intervalMillis,30):(0,M.v)(V,a.intervalMillis),T={throttleEndTimeMillis:Date.now()+D,backoffCount:V+1};return a.setThrottleMetadata(O,T),HL.debug(`Calling attemptFetch again in ${D} millis`),GL(L,T,P,a)}}class nL{constructor(){this.listeners=[]}addEventListener(L){this.listeners.push(L)}abort(){this.listeners.forEach((L=>L()))}}let KL,IL;function sL(L){IL=L}function AL(L){KL=L}async function eL(L,i,P,D,V,a,w){var O;const U=ZL(L);U.then((i=>{P[i.measurementId]=i.appId,L.options.measurementId&&i.measurementId!==L.options.measurementId&&HL.warn(`The measurement ID in the local Firebase config (${L.options.measurementId}) does not match the measurement ID fetched from the server (${i.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((L=>HL.error(L))),i.push(U);const C=async function(){if(!(0,M.$)())return HL.warn(BL.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,M.mb)()}catch(L){return HL.warn(BL.create("indexeddb-unavailable",{errorInfo:null===L||void 0===L?void 0:L.toString()}).message),!1}return!0}().then((L=>L?D.getId():void 0)),[T,c]=await Promise.all([U,C]);(function(L){const i=window.document.getElementsByTagName("script");for(const P of Object.values(i))if(P.src&&P.src.includes(qL)&&P.src.includes(L))return P;return null})(a)||mL(a,T.measurementId),IL&&(V("consent","default",IL),sL(void 0)),V("js",new Date);const r=null!==(O=null===w||void 0===w?void 0:w.config)&&void 0!==O?O:{};return r.origin="firebase",r.update=!0,null!=c&&(r.firebase_id=c),V("config",T.measurementId,r),KL&&(V("set",KL),AL(void 0)),T.measurementId}class vL{constructor(L){this.app=L}_delete(){return delete zL[this.app.options.appId],Promise.resolve()}}let zL={},dL=[];const hL={};let RL,lL,bL="dataLayer",xL="gtag",tL=!1;function fL(L){if(tL)throw BL.create("already-initialized");L.dataLayerName&&(bL=L.dataLayerName),L.gtagName&&(xL=L.gtagName)}function NL(L,i,P){!function(){const L=[];if((0,M.R)()&&L.push("This is a browser extension environment."),(0,M.l)()||L.push("Cookies are not available."),L.length>0){const i=L.map(((L,i)=>`(${i+1}) ${L}`)).join(" "),P=BL.create("invalid-analytics-context",{errorInfo:i});HL.warn(P.message)}}();const D=L.options.appId;if(!D)throw BL.create("no-app-id");if(!L.options.apiKey){if(!L.options.measurementId)throw BL.create("no-api-key");HL.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${L.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=zL[D])throw BL.create("already-exists",{id:D});if(!tL){!function(L){let i=[];Array.isArray(window[L])?i=window[L]:window[L]=i}(bL);const{wrappedGtag:L,gtagCore:i}=function(L,i,P,D,V){let M=function(){for(var L=arguments.length,i=new Array(L),P=0;P<L;P++)i[P]=arguments[P];window[D].push(arguments)};return window[V]&&"function"===typeof window[V]&&(M=window[V]),window[V]=XL(M,L,i,P),{gtagCore:M,wrappedGtag:window[V]}}(zL,dL,hL,bL,xL);lL=L,RL=i,tL=!0}zL[D]=eL(L,dL,hL,i,RL,bL,P);return new vL(L)}function YL(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,D.T)();L=(0,M.O)(L);const i=(0,D.C)(L,SL);return i.isInitialized()?i.getImmediate():EL(L)}function EL(L){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const P=(0,D.C)(L,SL);if(P.isInitialized()){const L=P.getImmediate();if((0,M.A)(i,P.getOptions()))return L;throw BL.create("already-initialized")}return P.initialize({options:i})}async function JL(){if((0,M.R)())return!1;if(!(0,M.l)())return!1;if(!(0,M.$)())return!1;try{return await(0,M.mb)()}catch(L){return!1}}function WL(L,i,P){L=(0,M.O)(L),async function(L,i,P,D){if(D&&D.global)return L("set",{screen_name:P}),Promise.resolve();L("config",await i,{update:!0,screen_name:P})}(lL,zL[L.app.options.appId],i,P).catch((L=>HL.error(L)))}async function QL(L){return L=(0,M.O)(L),async function(L,i){const P=await i;return new Promise(((i,D)=>{L("get",P,"client_id",(L=>{L||D(BL.create("no-client-id")),i(L)}))}))}(lL,zL[L.app.options.appId])}function kL(L,i,P){L=(0,M.O)(L),async function(L,i,P,D){if(D&&D.global)return L("set",{user_id:P}),Promise.resolve();L("config",await i,{update:!0,user_id:P})}(lL,zL[L.app.options.appId],i,P).catch((L=>HL.error(L)))}function yL(L,i,P){L=(0,M.O)(L),async function(L,i,P,D){if(D&&D.global){const i={};for(const L of Object.keys(P))i[`user_properties.${L}`]=P[L];return L("set",i),Promise.resolve()}L("config",await i,{update:!0,user_properties:P})}(lL,zL[L.app.options.appId],i,P).catch((L=>HL.error(L)))}function Li(L,i){L=(0,M.O)(L),async function(L,i){const P=await L;window[`ga-disable-${P}`]=!i}(zL[L.app.options.appId],i).catch((L=>HL.error(L)))}function ii(L){lL?lL("set",L):AL(L)}function Pi(L,i,P,D){L=(0,M.O)(L),async function(L,i,P,D,V){if(V&&V.global)L("event",P,D);else{const V=await i;L("event",P,Object.assign(Object.assign({},D),{send_to:V}))}}(lL,zL[L.app.options.appId],i,P,D).catch((L=>HL.error(L)))}function Di(L){lL?lL("consent","update",L):sL(L)}const Vi="@firebase/analytics",Mi="0.10.0";(0,D.G)(new a.f(SL,((L,i)=>{let{options:P}=i;return NL(L.getProvider("app").getImmediate(),L.getProvider("installations-internal").getImmediate(),P)}),"PUBLIC")),(0,D.G)(new a.f("analytics-internal",(function(L){try{const i=L.getProvider(SL).getImmediate();return{logEvent:(L,P,D)=>Pi(i,L,P,D)}}catch(i){throw BL.create("interop-component-reg-failed",{reason:i})}}),"PRIVATE")),(0,D.bb)(Vi,Mi),(0,D.bb)(Vi,Mi,"esm2017")}}]);