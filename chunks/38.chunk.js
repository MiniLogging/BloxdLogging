/*! For license information please see oa0udh.38.09962a42.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[38],{11409:(C,M,x)=>{x.r(M),x.d(M,{getAnalytics:()=>uC,getGoogleAnalyticsClientId:()=>rC,initializeAnalytics:()=>YC,isSupported:()=>WC,logEvent:()=>xM,setAnalyticsCollectionEnabled:()=>CM,setConsent:()=>fM,setCurrentScreen:()=>eC,setDefaultEventParameters:()=>MM,setUserId:()=>wC,setUserProperties:()=>lC,settings:()=>vC});var f=x(11386),T=x(11402),z=x(11396),s=x(11391);let S,m;const Q=new WeakMap,V=new WeakMap,y=new WeakMap,U=new WeakMap,O=new WeakMap;let d={get(C,M,x){if(C instanceof IDBTransaction){if("done"===M)return V.get(C);if("objectStoreNames"===M)return C.objectStoreNames||y.get(C);if("store"===M)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return L(C[M])},set:(C,M,x)=>(C[M]=x,!0),has:(C,M)=>C instanceof IDBTransaction&&("done"===M||"store"===M)||M in C};function D(C){return C!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(m||(m=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(C)?function(){for(var M=arguments.length,x=new Array(M),f=0;f<M;f++)x[f]=arguments[f];return C.apply(t(this),x),L(Q.get(this))}:function(){for(var M=arguments.length,x=new Array(M),f=0;f<M;f++)x[f]=arguments[f];return L(C.apply(t(this),x))}:function(M){for(var x=arguments.length,f=new Array(x>1?x-1:0),T=1;T<x;T++)f[T-1]=arguments[T];const z=C.call(t(this),M,...f);return y.set(z,M.sort?M.sort():[M]),L(z)}}function o(C){return"function"===typeof C?D(C):(C instanceof IDBTransaction&&function(C){if(V.has(C))return;const M=new Promise(((M,x)=>{const f=()=>{C.removeEventListener("complete",T),C.removeEventListener("error",z),C.removeEventListener("abort",z)},T=()=>{M(),f()},z=()=>{x(C.error||new DOMException("AbortError","AbortError")),f()};C.addEventListener("complete",T),C.addEventListener("error",z),C.addEventListener("abort",z)}));V.set(C,M)}(C),M=C,(S||(S=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((C=>M instanceof C))?new Proxy(C,d):C);var M}function L(C){if(C instanceof IDBRequest)return function(C){const M=new Promise(((M,x)=>{const f=()=>{C.removeEventListener("success",T),C.removeEventListener("error",z)},T=()=>{M(L(C.result)),f()},z=()=>{x(C.error),f()};C.addEventListener("success",T),C.addEventListener("error",z)}));return M.then((M=>{M instanceof IDBCursor&&Q.set(M,C)})).catch((()=>{})),O.set(M,C),M}(C);if(U.has(C))return U.get(C);const M=o(C);return M!==C&&(U.set(C,M),O.set(M,C)),M}const t=C=>O.get(C);const A=["get","getKey","getAll","getAllKeys","count"],H=["put","add","delete","clear"],j=new Map;function b(C,M){if(!(C instanceof IDBDatabase)||M in C||"string"!==typeof M)return;if(j.get(M))return j.get(M);const x=M.replace(/FromIndex$/,""),f=M!==x,T=H.includes(x);if(!(x in(f?IDBIndex:IDBObjectStore).prototype)||!T&&!A.includes(x))return;const z=async function(C){const M=this.transaction(C,T?"readwrite":"readonly");let z=M.store;for(var s=arguments.length,S=new Array(s>1?s-1:0),m=1;m<s;m++)S[m-1]=arguments[m];return f&&(z=z.index(S.shift())),(await Promise.all([z[x](...S),T&&M.done]))[0]};return j.set(M,z),z}d=(C=>({...C,get:(M,x,f)=>b(M,x)||C.get(M,x,f),has:(M,x)=>!!b(M,x)||C.has(M,x)}))(d);const R="@firebase/installations",n="0.6.4",I=1e4,X=`w:${n}`,g="FIS_v2",B=36e5,F={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},P=new z.f("installations","Installations",F);function h(C){return C instanceof z.g&&C.code.includes("request-failed")}function c(C){let{projectId:M}=C;return`https://firebaseinstallations.googleapis.com/v1/projects/${M}/installations`}function q(C){return{token:C.token,requestStatus:2,expiresIn:(M=C.expiresIn,Number(M.replace("s","000"))),creationTime:Date.now()};var M}async function i(C,M){const x=(await M.json()).error;return P.create("request-failed",{requestName:C,serverCode:x.code,serverMessage:x.message,serverStatus:x.status})}function Z(C){let{apiKey:M}=C;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":M})}function E(C,M){let{refreshToken:x}=M;const f=Z(C);return f.append("Authorization",function(C){return`${g} ${C}`}(x)),f}async function K(C){const M=await C();return M.status>=500&&M.status<600?C():M}function G(C){return new Promise((M=>{setTimeout(M,C)}))}const a=/^[cdef][\w-]{21}$/;function J(){try{const C=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(C),C[0]=112+C[0]%16;const M=function(C){const M=(x=C,btoa(String.fromCharCode(...x)).replace(/\+/g,"-").replace(/\//g,"_"));var x;return M.substr(0,22)}(C);return a.test(M)?M:""}catch(C){return""}}function N(C){return`${C.appName}!${C.appId}`}const k=new Map;function v(C,M){const x=N(C);p(x,M),function(C,M){const x=Y();x&&x.postMessage({key:C,fid:M});W()}(x,M)}function p(C,M){const x=k.get(C);if(x)for(const f of x)f(M)}let u=null;function Y(){return!u&&"BroadcastChannel"in self&&(u=new BroadcastChannel("[Firebase] FID Change"),u.onmessage=C=>{p(C.data.key,C.data.fid)}),u}function W(){0===k.size&&u&&(u.close(),u=null)}const e="firebase-installations-store";let r=null;function w(){return r||(r=function(C,M){let{blocked:x,upgrade:f,blocking:T,terminated:z}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=indexedDB.open(C,M),S=L(s);return f&&s.addEventListener("upgradeneeded",(C=>{f(L(s.result),C.oldVersion,C.newVersion,L(s.transaction))})),x&&s.addEventListener("blocked",(()=>x())),S.then((C=>{z&&C.addEventListener("close",(()=>z())),T&&C.addEventListener("versionchange",(()=>T()))})).catch((()=>{})),S}("firebase-installations-database",1,{upgrade:(C,M)=>{if(0===M)C.createObjectStore(e)}})),r}async function l(C,M){const x=N(C),f=(await w()).transaction(e,"readwrite"),T=f.objectStore(e),z=await T.get(x);return await T.put(M,x),await f.done,z&&z.fid===M.fid||v(C,M.fid),M}async function CC(C){const M=N(C),x=(await w()).transaction(e,"readwrite");await x.objectStore(e).delete(M),await x.done}async function MC(C,M){const x=N(C),f=(await w()).transaction(e,"readwrite"),T=f.objectStore(e),z=await T.get(x),s=M(z);return void 0===s?await T.delete(x):await T.put(s,x),await f.done,!s||z&&z.fid===s.fid||v(C,s.fid),s}async function xC(C){let M;const x=await MC(C.appConfig,(x=>{const f=function(C){const M=C||{fid:J(),registrationStatus:0};return zC(M)}(x),T=function(C,M){if(0===M.registrationStatus){if(!navigator.onLine){return{installationEntry:M,registrationPromise:Promise.reject(P.create("app-offline"))}}const x={fid:M.fid,registrationStatus:1,registrationTime:Date.now()},f=async function(C,M){try{const x=await async function(C,M){let{appConfig:x,heartbeatServiceProvider:f}=C,{fid:T}=M;const z=c(x),s=Z(x),S=f.getImmediate({optional:!0});if(S){const C=await S.getHeartbeatsHeader();C&&s.append("x-firebase-client",C)}const m={fid:T,authVersion:g,appId:x.appId,sdkVersion:X},Q={method:"POST",headers:s,body:JSON.stringify(m)},V=await K((()=>fetch(z,Q)));if(V.ok){const C=await V.json();return{fid:C.fid||T,registrationStatus:2,refreshToken:C.refreshToken,authToken:q(C.authToken)}}throw await i("Create Installation",V)}(C,M);return l(C.appConfig,x)}catch(x){throw h(x)&&409===x.customData.serverCode?await CC(C.appConfig):await l(C.appConfig,{fid:M.fid,registrationStatus:0}),x}}(C,x);return{installationEntry:x,registrationPromise:f}}return 1===M.registrationStatus?{installationEntry:M,registrationPromise:fC(C)}:{installationEntry:M}}(C,f);return M=T.registrationPromise,T.installationEntry}));return""===x.fid?{installationEntry:await M}:{installationEntry:x,registrationPromise:M}}async function fC(C){let M=await TC(C.appConfig);for(;1===M.registrationStatus;)await G(100),M=await TC(C.appConfig);if(0===M.registrationStatus){const{installationEntry:M,registrationPromise:x}=await xC(C);return x||M}return M}function TC(C){return MC(C,(C=>{if(!C)throw P.create("installation-not-found");return zC(C)}))}function zC(C){return 1===(M=C).registrationStatus&&M.registrationTime+I<Date.now()?{fid:C.fid,registrationStatus:0}:C;var M}async function sC(C,M){let{appConfig:x,heartbeatServiceProvider:f}=C;const T=function(C,M){let{fid:x}=M;return`${c(C)}/${x}/authTokens:generate`}(x,M),z=E(x,M),s=f.getImmediate({optional:!0});if(s){const C=await s.getHeartbeatsHeader();C&&z.append("x-firebase-client",C)}const S={installation:{sdkVersion:X,appId:x.appId}},m={method:"POST",headers:z,body:JSON.stringify(S)},Q=await K((()=>fetch(T,m)));if(Q.ok){return q(await Q.json())}throw await i("Generate Auth Token",Q)}async function SC(C){let M,x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const f=await MC(C.appConfig,(f=>{if(!QC(f))throw P.create("not-registered");const T=f.authToken;if(!x&&function(C){return 2===C.requestStatus&&!function(C){const M=Date.now();return M<C.creationTime||C.creationTime+C.expiresIn<M+B}(C)}(T))return f;if(1===T.requestStatus)return M=async function(C,M){let x=await mC(C.appConfig);for(;1===x.authToken.requestStatus;)await G(100),x=await mC(C.appConfig);const f=x.authToken;return 0===f.requestStatus?SC(C,M):f}(C,x),f;{if(!navigator.onLine)throw P.create("app-offline");const x=function(C){const M={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},C),{authToken:M})}(f);return M=async function(C,M){try{const x=await sC(C,M),f=Object.assign(Object.assign({},M),{authToken:x});return await l(C.appConfig,f),x}catch(x){if(!h(x)||401!==x.customData.serverCode&&404!==x.customData.serverCode){const x=Object.assign(Object.assign({},M),{authToken:{requestStatus:0}});await l(C.appConfig,x)}else await CC(C.appConfig);throw x}}(C,x),x}}));return M?await M:f.authToken}function mC(C){return MC(C,(C=>{if(!QC(C))throw P.create("not-registered");const M=C.authToken;return 1===(x=M).requestStatus&&x.requestTime+I<Date.now()?Object.assign(Object.assign({},C),{authToken:{requestStatus:0}}):C;var x}))}function QC(C){return void 0!==C&&2===C.registrationStatus}async function VC(C){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const x=C;await async function(C){const{registrationPromise:M}=await xC(C);M&&await M}(x);return(await SC(x,M)).token}function yC(C){return P.create("missing-app-config-values",{valueName:C})}const UC="installations",OC=C=>{const M=C.getProvider("app").getImmediate(),x=function(C){if(!C||!C.options)throw yC("App Configuration");if(!C.name)throw yC("App Name");const M=["projectId","apiKey","appId"];for(const x of M)if(!C.options[x])throw yC(x);return{appName:C.name,projectId:C.options.projectId,apiKey:C.options.apiKey,appId:C.options.appId}}(M);return{app:M,appConfig:x,heartbeatServiceProvider:(0,f.v)(M,"heartbeat"),_delete:()=>Promise.resolve()}},dC=C=>{const M=C.getProvider("app").getImmediate(),x=(0,f.v)(M,UC).getImmediate();return{getId:()=>async function(C){const M=C,{installationEntry:x,registrationPromise:f}=await xC(M);return f?f.catch(console.error):SC(M).catch(console.error),x.fid}(x),getToken:C=>VC(x,C)}};(0,f.y)(new s.h(UC,OC,"PUBLIC")),(0,f.y)(new s.h("installations-internal",dC,"PRIVATE")),(0,f.O)(R,n),(0,f.O)(R,n,"esm2017");const DC="analytics",oC="https://www.googletagmanager.com/gtag/js",LC=new T.e("@firebase/analytics"),tC={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},AC=new z.f("analytics","Analytics",tC);function HC(C){if(!C.startsWith(oC)){const M=AC.create("invalid-gtag-resource",{gtagURL:C});return LC.warn(M.message),""}return C}function jC(C){return Promise.all(C.map((C=>C.catch((C=>C)))))}function bC(C,M){const x=function(C,M){let x;return window.trustedTypes&&(x=window.trustedTypes.createPolicy(C,M)),x}("firebase-js-sdk-policy",{createScriptURL:HC}),f=document.createElement("script"),T=`${oC}?l=${C}&id=${M}`;f.src=x?null===x||void 0===x?void 0:x.createScriptURL(T):T,f.async=!0,document.head.appendChild(f)}function RC(C,M,x,f){return async function(T){try{for(var z=arguments.length,s=new Array(z>1?z-1:0),S=1;S<z;S++)s[S-1]=arguments[S];if("event"===T){const[f,T]=s;await async function(C,M,x,f,T){try{let z=[];if(T&&T.send_to){let C=T.send_to;Array.isArray(C)||(C=[C]);const f=await jC(x);for(const x of C){const C=f.find((C=>C.measurementId===x)),T=C&&M[C.appId];if(!T){z=[];break}z.push(T)}}0===z.length&&(z=Object.values(M)),await Promise.all(z),C("event",f,T||{})}catch(z){LC.error(z)}}(C,M,x,f,T)}else if("config"===T){const[T,z]=s;await async function(C,M,x,f,T,z){const s=f[T];try{if(s)await M[s];else{const C=(await jC(x)).find((C=>C.measurementId===T));C&&await M[C.appId]}}catch(S){LC.error(S)}C("config",T,z)}(C,M,x,f,T,z)}else if("consent"===T){const[M]=s;C("consent","update",M)}else if("get"===T){const[M,x,f]=s;C("get",M,x,f)}else if("set"===T){const[M]=s;C("set",M)}else C(T,...s)}catch(m){LC.error(m)}}}const nC=new class{constructor(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;this.throttleMetadata=C,this.intervalMillis=M}getThrottleMetadata(C){return this.throttleMetadata[C]}setThrottleMetadata(C,M){this.throttleMetadata[C]=M}deleteThrottleMetadata(C){delete this.throttleMetadata[C]}};function IC(C){return new Headers({Accept:"application/json","x-goog-api-key":C})}async function XC(C){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:nC,x=arguments.length>2?arguments[2]:void 0;const{appId:f,apiKey:T,measurementId:z}=C.options;if(!f)throw AC.create("no-app-id");if(!T){if(z)return{measurementId:z,appId:f};throw AC.create("no-api-key")}const s=M.getThrottleMetadata(f)||{backoffCount:0,throttleEndTimeMillis:Date.now()},S=new BC;return setTimeout((async()=>{S.abort()}),void 0!==x?x:6e4),gC({appId:f,apiKey:T,measurementId:z},s,S,M)}async function gC(C,M,x){let{throttleEndTimeMillis:f,backoffCount:T}=M,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:nC;var S;const{appId:m,measurementId:Q}=C;try{await function(C,M){return new Promise(((x,f)=>{const T=Math.max(M-Date.now(),0),z=setTimeout(x,T);C.addEventListener((()=>{clearTimeout(z),f(AC.create("fetch-throttle",{throttleEndTimeMillis:M}))}))}))}(x,f)}catch(V){if(Q)return LC.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Q} provided in the "measurementId" field in the local Firebase config. [${null===V||void 0===V?void 0:V.message}]`),{appId:m,measurementId:Q};throw V}try{const M=await async function(C){var M;const{appId:x,apiKey:f}=C,T={method:"GET",headers:IC(f)},z="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",x),s=await fetch(z,T);if(200!==s.status&&304!==s.status){let C="";try{const x=await s.json();(null===(M=x.error)||void 0===M?void 0:M.message)&&(C=x.error.message)}catch(S){}throw AC.create("config-fetch-failed",{httpStatus:s.status,responseMessage:C})}return s.json()}(C);return s.deleteThrottleMetadata(m),M}catch(V){const M=V;if(!function(C){if(!(C instanceof z.g)||!C.customData)return!1;const M=Number(C.customData.httpStatus);return 429===M||500===M||503===M||504===M}(M)){if(s.deleteThrottleMetadata(m),Q)return LC.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${Q} provided in the "measurementId" field in the local Firebase config. [${null===M||void 0===M?void 0:M.message}]`),{appId:m,measurementId:Q};throw V}const f=503===Number(null===(S=null===M||void 0===M?void 0:M.customData)||void 0===S?void 0:S.httpStatus)?(0,z.s)(T,s.intervalMillis,30):(0,z.s)(T,s.intervalMillis),y={throttleEndTimeMillis:Date.now()+f,backoffCount:T+1};return s.setThrottleMetadata(m,y),LC.debug(`Calling attemptFetch again in ${f} millis`),gC(C,y,x,s)}}class BC{constructor(){this.listeners=[]}addEventListener(C){this.listeners.push(C)}abort(){this.listeners.forEach((C=>C()))}}let FC,PC;function hC(C){PC=C}function cC(C){FC=C}async function qC(C,M,x,f,T,s,S){var m;const Q=XC(C);Q.then((M=>{x[M.measurementId]=M.appId,C.options.measurementId&&M.measurementId!==C.options.measurementId&&LC.warn(`The measurement ID in the local Firebase config (${C.options.measurementId}) does not match the measurement ID fetched from the server (${M.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((C=>LC.error(C))),M.push(Q);const V=async function(){if(!(0,z.R)())return LC.warn(AC.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,z.cb)()}catch(C){return LC.warn(AC.create("indexeddb-unavailable",{errorInfo:null===C||void 0===C?void 0:C.toString()}).message),!1}return!0}().then((C=>C?f.getId():void 0)),[y,U]=await Promise.all([Q,V]);(function(C){const M=window.document.getElementsByTagName("script");for(const x of Object.values(M))if(x.src&&x.src.includes(oC)&&x.src.includes(C))return x;return null})(s)||bC(s,y.measurementId),PC&&(T("consent","default",PC),hC(void 0)),T("ma",new Date);const O=null!==(m=null===S||void 0===S?void 0:S.config)&&void 0!==m?m:{};return O.origin="firebase",O.update=!0,null!=U&&(O.firebase_id=U),T("config",y.measurementId,O),FC&&(T("set",FC),cC(void 0)),y.measurementId}class iC{constructor(C){this.app=C}_delete(){return delete ZC[this.app.options.appId],Promise.resolve()}}let ZC={},EC=[];const KC={};let GC,aC,JC="dataLayer",NC="gtag",kC=!1;function vC(C){if(kC)throw AC.create("already-initialized");C.dataLayerName&&(JC=C.dataLayerName),C.gtagName&&(NC=C.gtagName)}function pC(C,M,x){!function(){const C=[];if((0,z.L)()&&C.push("This is a browser extension environment."),(0,z.j)()||C.push("Cookies are not available."),C.length>0){const M=C.map(((C,M)=>`(${M+1}) ${C}`)).join(" "),x=AC.create("invalid-analytics-context",{errorInfo:M});LC.warn(x.message)}}();const f=C.options.appId;if(!f)throw AC.create("no-app-id");if(!C.options.apiKey){if(!C.options.measurementId)throw AC.create("no-api-key");LC.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${C.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=ZC[f])throw AC.create("already-exists",{id:f});if(!kC){!function(C){let M=[];Array.isArray(window[C])?M=window[C]:window[C]=M}(JC);const{wrappedGtag:C,gtagCore:M}=function(C,M,x,f,T){let z=function(){for(var C=arguments.length,M=new Array(C),x=0;x<C;x++)M[x]=arguments[x];window[f].push(arguments)};return window[T]&&"function"===typeof window[T]&&(z=window[T]),window[T]=RC(z,C,M,x),{gtagCore:z,wrappedGtag:window[T]}}(ZC,EC,KC,JC,NC);aC=C,GC=M,kC=!0}ZC[f]=qC(C,EC,KC,M,GC,JC,x);return new iC(C)}function uC(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,f.G)();C=(0,z.H)(C);const M=(0,f.v)(C,DC);return M.isInitialized()?M.getImmediate():YC(C)}function YC(C){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const x=(0,f.v)(C,DC);if(x.isInitialized()){const C=x.getImmediate();if((0,z.w)(M,x.getOptions()))return C;throw AC.create("already-initialized")}return x.initialize({options:M})}async function WC(){if((0,z.L)())return!1;if(!(0,z.j)())return!1;if(!(0,z.R)())return!1;try{return await(0,z.cb)()}catch(C){return!1}}function eC(C,M,x){C=(0,z.H)(C),async function(C,M,x,f){if(f&&f.global)return C("set",{screen_name:x}),Promise.resolve();C("config",await M,{update:!0,screen_name:x})}(aC,ZC[C.app.options.appId],M,x).catch((C=>LC.error(C)))}async function rC(C){return C=(0,z.H)(C),async function(C,M){const x=await M;return new Promise(((M,f)=>{C("get",x,"client_id",(C=>{C||f(AC.create("no-client-id")),M(C)}))}))}(aC,ZC[C.app.options.appId])}function wC(C,M,x){C=(0,z.H)(C),async function(C,M,x,f){if(f&&f.global)return C("set",{user_id:x}),Promise.resolve();C("config",await M,{update:!0,user_id:x})}(aC,ZC[C.app.options.appId],M,x).catch((C=>LC.error(C)))}function lC(C,M,x){C=(0,z.H)(C),async function(C,M,x,f){if(f&&f.global){const M={};for(const C of Object.keys(x))M[`user_properties.${C}`]=x[C];return C("set",M),Promise.resolve()}C("config",await M,{update:!0,user_properties:x})}(aC,ZC[C.app.options.appId],M,x).catch((C=>LC.error(C)))}function CM(C,M){C=(0,z.H)(C),async function(C,M){const x=await C;window[`ga-disable-${x}`]=!M}(ZC[C.app.options.appId],M).catch((C=>LC.error(C)))}function MM(C){aC?aC("set",C):cC(C)}function xM(C,M,x,f){C=(0,z.H)(C),async function(C,M,x,f,T){if(T&&T.global)C("event",x,f);else{const T=await M;C("event",x,Object.assign(Object.assign({},f),{send_to:T}))}}(aC,ZC[C.app.options.appId],M,x,f).catch((C=>LC.error(C)))}function fM(C){aC?aC("consent","update",C):hC(C)}const TM="@firebase/analytics",zM="0.10.0";(0,f.y)(new s.h(DC,((C,M)=>{let{options:x}=M;return pC(C.getProvider("app").getImmediate(),C.getProvider("installations-internal").getImmediate(),x)}),"PUBLIC")),(0,f.y)(new s.h("analytics-internal",(function(C){try{const M=C.getProvider(DC).getImmediate();return{logEvent:(C,x,f)=>xM(M,C,x,f)}}catch(M){throw AC.create("interop-component-reg-failed",{reason:M})}}),"PRIVATE")),(0,f.O)(TM,zM),(0,f.O)(TM,zM,"esm2017")}}]);