"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[109],{14914:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphConsoleLogBlock:()=>z});var F=b(13333),E=b(13281),w=b(11551),Q=b(11408);class z extends F.d{constructor(U){if(super(U),this.message=this.registerDataInput("message",E.b),this.logType=this.registerDataInput("logType",E.b,"log"),null!==U&&void 0!==U&&U.messageTemplate){const X=this._getTemplateMatches(U.messageTemplate);for(const U of X)this.registerDataInput(U,E.b)}}_execute(U){const X=this.logType.getValue(U),b=this._getMessageValue(U);"warn"===X?Q.e.Warn(b):"error"===X?Q.e.Error(b):Q.e.Log(b),this.out._activateSignal(U)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(U){var X;if(null!==(X=this.config)&&void 0!==X&&X.messageTemplate){let X=this.config.messageTemplate;const F=this._getTemplateMatches(X);for(const E of F){var b;const F=null===(b=this.getDataInput(E))||void 0===b?void 0:b.getValue(U);void 0!==F&&(X=X.replace(new RegExp(`\\{${E}\\}`,"g"),F.toString()))}return X}return this.message.getValue(U)}_getTemplateMatches(U){const X=/\{([^}]+)\}/g,b=[];let F;for(;null!==(F=X.exec(U));)b.push(F[1]);return b}}(0,w.f)("FlowGraphConsoleLogBlock",z)}}]);