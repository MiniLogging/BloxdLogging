"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[109],{16154:(I,x,L)=>{L.r(x),L.d(x,{FlowGraphConsoleLogBlock:()=>p});var F=L(14540),X=L(14498),G=L(12938),Y=L(12809);class p extends F.e{constructor(I){if(super(I),this.message=this.registerDataInput("message",X.e),this.logType=this.registerDataInput("logType",X.e,"log"),null!==I&&void 0!==I&&I.messageTemplate){const x=this._getTemplateMatches(I.messageTemplate);for(const I of x)this.registerDataInput(I,X.e)}}_execute(I){const x=this.logType.getValue(I),L=this._getMessageValue(I);"warn"===x?Y.c.Warn(L):"error"===x?Y.c.Error(L):Y.c.Log(L),this.out._activateSignal(I)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(I){var x;if(null!==(x=this.config)&&void 0!==x&&x.messageTemplate){let x=this.config.messageTemplate;const F=this._getTemplateMatches(x);for(const X of F){var L;const F=null===(L=this.getDataInput(X))||void 0===L?void 0:L.getValue(I);void 0!==F&&(x=x.replace(new RegExp(`\\{${X}\\}`,"g"),F.toString()))}return x}return this.message.getValue(I)}_getTemplateMatches(I){const x=/\{([^}]+)\}/g,L=[];let F;for(;null!==(F=x.exec(I));)L.push(F[1]);return L}}(0,G.d)("FlowGraphConsoleLogBlock",p)}}]);