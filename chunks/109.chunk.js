"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[109],{15702:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphConsoleLogBlock:()=>G});var x=P(14117),c=P(14073),w=P(12317),v=P(12199);class G extends x.e{constructor(M){if(super(M),this.message=this.registerDataInput("message",c.e),this.logType=this.registerDataInput("logType",c.e,"log"),null!==M&&void 0!==M&&M.messageTemplate){const Z=this._getTemplateMatches(M.messageTemplate);for(const M of Z)this.registerDataInput(M,c.e)}}_execute(M){const Z=this.logType.getValue(M),P=this._getMessageValue(M);"warn"===Z?v.d.Warn(P):"error"===Z?v.d.Error(P):v.d.Log(P),this.out._activateSignal(M)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(M){var Z;if(null!==(Z=this.config)&&void 0!==Z&&Z.messageTemplate){let Z=this.config.messageTemplate;const x=this._getTemplateMatches(Z);for(const c of x){var P;const x=null===(P=this.getDataInput(c))||void 0===P?void 0:P.getValue(M);void 0!==x&&(Z=Z.replace(new RegExp(`\\{${c}\\}`,"g"),x.toString()))}return Z}return this.message.getValue(M)}_getTemplateMatches(M){const Z=/\{([^}]+)\}/g,P=[];let x;for(;null!==(x=Z.exec(M));)P.push(x[1]);return P}}(0,w.g)("FlowGraphConsoleLogBlock",G)}}]);