"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[109],{14568:(o,H,n)=>{n.r(H),n.d(H,{FlowGraphConsoleLogBlock:()=>Y});var E=n(12983),k=n(12933),g=n(11140),O=n(11038);class Y extends E.c{constructor(o){if(super(o),this.message=this.registerDataInput("message",k.b),this.logType=this.registerDataInput("logType",k.b,"log"),null!==o&&void 0!==o&&o.messageTemplate){const H=this._getTemplateMatches(o.messageTemplate);for(const o of H)this.registerDataInput(o,k.b)}}_execute(o){const H=this.logType.getValue(o),n=this._getMessageValue(o);"warn"===H?O.d.Warn(n):"error"===H?O.d.Error(n):O.d.Log(n),this.out._activateSignal(o)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(o){var H;if(null!==(H=this.config)&&void 0!==H&&H.messageTemplate){let H=this.config.messageTemplate;const E=this._getTemplateMatches(H);for(const k of E){var n;const E=null===(n=this.getDataInput(k))||void 0===n?void 0:n.getValue(o);void 0!==E&&(H=H.replace(new RegExp(`\\{${k}\\}`,"g"),E.toString()))}return H}return this.message.getValue(o)}_getTemplateMatches(o){const H=/\{([^}]+)\}/g,n=[];let E;for(;null!==(E=H.exec(o));)n.push(E[1]);return n}}(0,g.e)("FlowGraphConsoleLogBlock",Y)}}]);