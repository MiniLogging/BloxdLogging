"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[109],{14889:(w,E,G)=>{G.r(E),G.d(E,{FlowGraphConsoleLogBlock:()=>x});var P=G(13330),h=G(13281),B=G(11646),y=G(11518);class x extends P.d{constructor(w){if(super(w),this.message=this.registerDataInput("message",h.c),this.logType=this.registerDataInput("logType",h.c,"log"),null!==w&&void 0!==w&&w.messageTemplate){const E=this._getTemplateMatches(w.messageTemplate);for(const w of E)this.registerDataInput(w,h.c)}}_execute(w){const E=this.logType.getValue(w),G=this._getMessageValue(w);"warn"===E?y.e.Warn(G):"error"===E?y.e.Error(G):y.e.Log(G),this.out._activateSignal(w)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(w){var E;if(null!==(E=this.config)&&void 0!==E&&E.messageTemplate){let E=this.config.messageTemplate;const P=this._getTemplateMatches(E);for(const h of P){var G;const P=null===(G=this.getDataInput(h))||void 0===G?void 0:G.getValue(w);void 0!==P&&(E=E.replace(new RegExp(`\\{${h}\\}`,"g"),P.toString()))}return E}return this.message.getValue(w)}_getTemplateMatches(w){const E=/\{([^}]+)\}/g,G=[];let P;for(;null!==(P=E.exec(w));)G.push(P[1]);return G}}(0,B.g)("FlowGraphConsoleLogBlock",x)}}]);