"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[109],{14630:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphConsoleLogBlock:()=>o});var Z=i(13114),U=i(13064),C=i(11253),B=i(11134);class o extends Z.c{constructor(k){if(super(k),this.message=this.registerDataInput("message",U.b),this.logType=this.registerDataInput("logType",U.b,"log"),null!==k&&void 0!==k&&k.messageTemplate){const Q=this._getTemplateMatches(k.messageTemplate);for(const k of Q)this.registerDataInput(k,U.b)}}_execute(k){const Q=this.logType.getValue(k),i=this._getMessageValue(k);"warn"===Q?B.c.Warn(i):"error"===Q?B.c.Error(i):B.c.Log(i),this.out._activateSignal(k)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(k){var Q;if(null!==(Q=this.config)&&void 0!==Q&&Q.messageTemplate){let Q=this.config.messageTemplate;const Z=this._getTemplateMatches(Q);for(const U of Z){var i;const Z=null===(i=this.getDataInput(U))||void 0===i?void 0:i.getValue(k);void 0!==Z&&(Q=Q.replace(new RegExp(`\\{${U}\\}`,"g"),Z.toString()))}return Q}return this.message.getValue(k)}_getTemplateMatches(k){const Q=/\{([^}]+)\}/g,i=[];let Z;for(;null!==(Z=Q.exec(k));)i.push(Z[1]);return i}}(0,C.e)("FlowGraphConsoleLogBlock",o)}}]);