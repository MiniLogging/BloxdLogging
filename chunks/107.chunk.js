"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[107],{15959:(s,k,h)=>{h.r(k),h.d(k,{FlowGraphWaitAllBlock:()=>K});var A=h(14351),g=h(12543),ms=h(14315),i=h(14313);class K extends A.d{constructor(s){super(s),this.config=s,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",ms.e,new i.c(this.config.inputSignalCount||0));for(let k=0;k<this.config.inputSignalCount;k++)this.inFlows.push(this._registerSignalInput(`in_${k}`));this._unregisterSignalInput("in")}_getCurrentActivationState(s){const k=this._cachedActivationState;if(k.length=0,s._hasExecutionVariable(this,"activationState")){const h=s._getExecutionVariable(this,"activationState",[]);for(let s=0;s<h.length;s++)k.push(h[s])}else for(let h=0;h<this.config.inputSignalCount;h++)k.push(!1);return k}_execute(s,k){const h=this._getCurrentActivationState(s);if(k===this.reset)for(let A=0;A<this.config.inputSignalCount;A++)h[A]=!1;else{const s=this.inFlows.indexOf(k);s>=0&&(h[s]=!0)}if(this.remainingInputs.setValue(new i.c(h.filter((s=>!s)).length),s),s._setExecutionVariable(this,"activationState",h.slice()),h.includes(!1))k!==this.reset&&this.out._activateSignal(s);else{this.completed._activateSignal(s);for(let s=0;s<this.config.inputSignalCount;s++)h[s]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(s){super.serialize(s),s.config.inputFlows=this.config.inputSignalCount}}(0,g.f)("FlowGraphWaitAllBlock",K)}}]);