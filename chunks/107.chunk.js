"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[107],{14640:(f,v,Z)=>{Z.r(v),Z.d(v,{FlowGraphWaitAllBlock:()=>e});var V=Z(13173),h=Z(11372),J=Z(13123),l=Z(13115);class e extends V.c{constructor(f){super(f),this.config=f,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",J.k,new l.b(this.config.inputSignalCount||0));for(let v=0;v<this.config.inputSignalCount;v++)this.inFlows.push(this._registerSignalInput(`in_${v}`));this._unregisterSignalInput("in")}_getCurrentActivationState(f){const v=this._cachedActivationState;if(v.length=0,f._hasExecutionVariable(this,"activationState")){const Z=f._getExecutionVariable(this,"activationState",[]);for(let f=0;f<Z.length;f++)v.push(Z[f])}else for(let Z=0;Z<this.config.inputSignalCount;Z++)v.push(!1);return v}_execute(f,v){const Z=this._getCurrentActivationState(f);if(v===this.reset)for(let V=0;V<this.config.inputSignalCount;V++)Z[V]=!1;else{const f=this.inFlows.indexOf(v);f>=0&&(Z[f]=!0)}if(this.remainingInputs.setValue(new l.b(Z.filter((f=>!f)).length),f),f._setExecutionVariable(this,"activationState",Z.slice()),Z.includes(!1))v!==this.reset&&this.out._activateSignal(f);else{this.completed._activateSignal(f);for(let f=0;f<this.config.inputSignalCount;f++)Z[f]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(f){super.serialize(f),f.config.inputFlows=this.config.inputSignalCount}}(0,h.h)("FlowGraphWaitAllBlock",e)}}]);