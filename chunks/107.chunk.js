"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[107],{15700:(a,O,i)=>{i.r(O),i.d(O,{FlowGraphWaitAllBlock:()=>Q});var H=i(14164),b=i(12346),G=i(14124),q=i(14115);class Q extends H.c{constructor(a){super(a),this.config=a,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",G.l,new q.d(this.config.inputSignalCount||0));for(let O=0;O<this.config.inputSignalCount;O++)this.inFlows.push(this._registerSignalInput(`in_${O}`));this._unregisterSignalInput("in")}_getCurrentActivationState(a){const O=this._cachedActivationState;if(O.length=0,a._hasExecutionVariable(this,"activationState")){const i=a._getExecutionVariable(this,"activationState",[]);for(let a=0;a<i.length;a++)O.push(i[a])}else for(let i=0;i<this.config.inputSignalCount;i++)O.push(!1);return O}_execute(a,O){const i=this._getCurrentActivationState(a);if(O===this.reset)for(let H=0;H<this.config.inputSignalCount;H++)i[H]=!1;else{const a=this.inFlows.indexOf(O);a>=0&&(i[a]=!0)}if(this.remainingInputs.setValue(new q.d(i.filter((a=>!a)).length),a),a._setExecutionVariable(this,"activationState",i.slice()),i.includes(!1))O!==this.reset&&this.out._activateSignal(a);else{this.completed._activateSignal(a);for(let a=0;a<this.config.inputSignalCount;a++)i[a]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(a){super.serialize(a),a.config.inputFlows=this.config.inputSignalCount}}(0,b.h)("FlowGraphWaitAllBlock",Q)}}]);