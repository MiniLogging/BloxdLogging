"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[107],{14941:(D,l,G)=>{G.r(l),G.d(l,{FlowGraphWaitAllBlock:()=>X});var V=G(13470),N=G(11667),M=G(13423),b=G(13418);class X extends V.b{constructor(D){super(D),this.config=D,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",M.i,new b.d(this.config.inputSignalCount||0));for(let l=0;l<this.config.inputSignalCount;l++)this.inFlows.push(this._registerSignalInput(`in_${l}`));this._unregisterSignalInput("in")}_getCurrentActivationState(D){const l=this._cachedActivationState;if(l.length=0,D._hasExecutionVariable(this,"activationState")){const G=D._getExecutionVariable(this,"activationState",[]);for(let D=0;D<G.length;D++)l.push(G[D])}else for(let G=0;G<this.config.inputSignalCount;G++)l.push(!1);return l}_execute(D,l){const G=this._getCurrentActivationState(D);if(l===this.reset)for(let V=0;V<this.config.inputSignalCount;V++)G[V]=!1;else{const D=this.inFlows.indexOf(l);D>=0&&(G[D]=!0)}if(this.remainingInputs.setValue(new b.d(G.filter((D=>!D)).length),D),D._setExecutionVariable(this,"activationState",G.slice()),G.includes(!1))l!==this.reset&&this.out._activateSignal(D);else{this.completed._activateSignal(D);for(let D=0;D<this.config.inputSignalCount;D++)G[D]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(D){super.serialize(D),D.config.inputFlows=this.config.inputSignalCount}}(0,N.c)("FlowGraphWaitAllBlock",X)}}]);