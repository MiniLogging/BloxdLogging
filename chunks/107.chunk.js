"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[107],{14442:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphWaitAllBlock:()=>F});var d=C(12874),U=C(11076),W=C(12831),a=C(12825);class F extends d.c{constructor(N){super(N),this.config=N,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",W.g,new a.b(this.config.inputSignalCount||0));for(let q=0;q<this.config.inputSignalCount;q++)this.inFlows.push(this._registerSignalInput(`in_${q}`));this._unregisterSignalInput("in")}_getCurrentActivationState(N){const q=this._cachedActivationState;if(q.length=0,N._hasExecutionVariable(this,"activationState")){const C=N._getExecutionVariable(this,"activationState",[]);for(let N=0;N<C.length;N++)q.push(C[N])}else for(let C=0;C<this.config.inputSignalCount;C++)q.push(!1);return q}_execute(N,q){const C=this._getCurrentActivationState(N);if(q===this.reset)for(let d=0;d<this.config.inputSignalCount;d++)C[d]=!1;else{const N=this.inFlows.indexOf(q);N>=0&&(C[N]=!0)}if(this.remainingInputs.setValue(new a.b(C.filter((N=>!N)).length),N),N._setExecutionVariable(this,"activationState",C.slice()),C.includes(!1))q!==this.reset&&this.out._activateSignal(N);else{this.completed._activateSignal(N);for(let N=0;N<this.config.inputSignalCount;N++)C[N]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(N){super.serialize(N),N.config.inputFlows=this.config.inputSignalCount}}(0,U.h)("FlowGraphWaitAllBlock",F)}}]);