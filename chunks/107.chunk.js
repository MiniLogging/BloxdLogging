"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[107],{15023:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphWaitAllBlock:()=>a});var W=D(13431),B=D(11637),t=D(13392),u=D(13390);class a extends W.d{constructor(c){super(c),this.config=c,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",t.h,new u.d(this.config.inputSignalCount||0));for(let r=0;r<this.config.inputSignalCount;r++)this.inFlows.push(this._registerSignalInput(`in_${r}`));this._unregisterSignalInput("in")}_getCurrentActivationState(c){const r=this._cachedActivationState;if(r.length=0,c._hasExecutionVariable(this,"activationState")){const D=c._getExecutionVariable(this,"activationState",[]);for(let c=0;c<D.length;c++)r.push(D[c])}else for(let D=0;D<this.config.inputSignalCount;D++)r.push(!1);return r}_execute(c,r){const D=this._getCurrentActivationState(c);if(r===this.reset)for(let W=0;W<this.config.inputSignalCount;W++)D[W]=!1;else{const c=this.inFlows.indexOf(r);c>=0&&(D[c]=!0)}if(this.remainingInputs.setValue(new u.d(D.filter((c=>!c)).length),c),c._setExecutionVariable(this,"activationState",D.slice()),D.includes(!1))r!==this.reset&&this.out._activateSignal(c);else{this.completed._activateSignal(c);for(let c=0;c<this.config.inputSignalCount;c++)D[c]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(c){super.serialize(c),c.config.inputFlows=this.config.inputSignalCount}}(0,B.e)("FlowGraphWaitAllBlock",a)}}]);