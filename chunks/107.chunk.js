"use strict";(self.hmihoa2fs98=self.hmihoa2fs98||[]).push([[107],{14975:(b,d,P)=>{P.r(d),P.d(d,{FlowGraphWaitAllBlock:()=>C});var G=P(13409),W=P(11639),i=P(13365),q=P(13360);class C extends G.e{constructor(b){super(b),this.config=b,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",i.d,new q.b(this.config.inputSignalCount||0));for(let d=0;d<this.config.inputSignalCount;d++)this.inFlows.push(this._registerSignalInput(`in_${d}`));this._unregisterSignalInput("in")}_getCurrentActivationState(b){const d=this._cachedActivationState;if(d.length=0,b._hasExecutionVariable(this,"activationState")){const P=b._getExecutionVariable(this,"activationState",[]);for(let b=0;b<P.length;b++)d.push(P[b])}else for(let P=0;P<this.config.inputSignalCount;P++)d.push(!1);return d}_execute(b,d){const P=this._getCurrentActivationState(b);if(d===this.reset)for(let G=0;G<this.config.inputSignalCount;G++)P[G]=!1;else{const b=this.inFlows.indexOf(d);b>=0&&(P[b]=!0)}if(this.remainingInputs.setValue(new q.b(P.filter((b=>!b)).length),b),b._setExecutionVariable(this,"activationState",P.slice()),P.includes(!1))d!==this.reset&&this.out._activateSignal(b);else{this.completed._activateSignal(b);for(let b=0;b<this.config.inputSignalCount;b++)P[b]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(b){super.serialize(b),b.config.inputFlows=this.config.inputSignalCount}}(0,W.f)("FlowGraphWaitAllBlock",C)}}]);