"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[107],{14620:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphWaitAllBlock:()=>o});var Z=i(13114),U=i(11253),C=i(13064),B=i(13060);class o extends Z.c{constructor(k){super(k),this.config=k,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",C.h,new B.e(this.config.inputSignalCount||0));for(let Q=0;Q<this.config.inputSignalCount;Q++)this.inFlows.push(this._registerSignalInput(`in_${Q}`));this._unregisterSignalInput("in")}_getCurrentActivationState(k){const Q=this._cachedActivationState;if(Q.length=0,k._hasExecutionVariable(this,"activationState")){const i=k._getExecutionVariable(this,"activationState",[]);for(let k=0;k<i.length;k++)Q.push(i[k])}else for(let i=0;i<this.config.inputSignalCount;i++)Q.push(!1);return Q}_execute(k,Q){const i=this._getCurrentActivationState(k);if(Q===this.reset)for(let Z=0;Z<this.config.inputSignalCount;Z++)i[Z]=!1;else{const k=this.inFlows.indexOf(Q);k>=0&&(i[k]=!0)}if(this.remainingInputs.setValue(new B.e(i.filter((k=>!k)).length),k),k._setExecutionVariable(this,"activationState",i.slice()),i.includes(!1))Q!==this.reset&&this.out._activateSignal(k);else{this.completed._activateSignal(k);for(let k=0;k<this.config.inputSignalCount;k++)i[k]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(k){super.serialize(k),k.config.inputFlows=this.config.inputSignalCount}}(0,U.e)("FlowGraphWaitAllBlock",o)}}]);