"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[107],{14571:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphWaitAllBlock:()=>h});var q=M(13054),w=M(11242),u=M(13004),y=M(12996);class h extends q.e{constructor(K){super(K),this.config=K,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",u.l,new y.e(this.config.inputSignalCount||0));for(let H=0;H<this.config.inputSignalCount;H++)this.inFlows.push(this._registerSignalInput(`in_${H}`));this._unregisterSignalInput("in")}_getCurrentActivationState(K){const H=this._cachedActivationState;if(H.length=0,K._hasExecutionVariable(this,"activationState")){const M=K._getExecutionVariable(this,"activationState",[]);for(let K=0;K<M.length;K++)H.push(M[K])}else for(let M=0;M<this.config.inputSignalCount;M++)H.push(!1);return H}_execute(K,H){const M=this._getCurrentActivationState(K);if(H===this.reset)for(let q=0;q<this.config.inputSignalCount;q++)M[q]=!1;else{const K=this.inFlows.indexOf(H);K>=0&&(M[K]=!0)}if(this.remainingInputs.setValue(new y.e(M.filter((K=>!K)).length),K),K._setExecutionVariable(this,"activationState",M.slice()),M.includes(!1))H!==this.reset&&this.out._activateSignal(K);else{this.completed._activateSignal(K);for(let K=0;K<this.config.inputSignalCount;K++)M[K]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(K){super.serialize(K),K.config.inputFlows=this.config.inputSignalCount}}(0,w.f)("FlowGraphWaitAllBlock",h)}}]);