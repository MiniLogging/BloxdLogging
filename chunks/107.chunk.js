"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[107],{15960:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphWaitAllBlock:()=>h});var q=W(14328),Q=W(12560),C=W(14274),T=W(14266);class h extends q.d{constructor(r){super(r),this.config=r,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",C.e,new T.d(this.config.inputSignalCount||0));for(let O=0;O<this.config.inputSignalCount;O++)this.inFlows.push(this._registerSignalInput(`in_${O}`));this._unregisterSignalInput("in")}_getCurrentActivationState(r){const O=this._cachedActivationState;if(O.length=0,r._hasExecutionVariable(this,"activationState")){const W=r._getExecutionVariable(this,"activationState",[]);for(let r=0;r<W.length;r++)O.push(W[r])}else for(let W=0;W<this.config.inputSignalCount;W++)O.push(!1);return O}_execute(r,O){const W=this._getCurrentActivationState(r);if(O===this.reset)for(let q=0;q<this.config.inputSignalCount;q++)W[q]=!1;else{const r=this.inFlows.indexOf(O);r>=0&&(W[r]=!0)}if(this.remainingInputs.setValue(new T.d(W.filter((r=>!r)).length),r),r._setExecutionVariable(this,"activationState",W.slice()),W.includes(!1))O!==this.reset&&this.out._activateSignal(r);else{this.completed._activateSignal(r);for(let r=0;r<this.config.inputSignalCount;r++)W[r]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(r){super.serialize(r),r.config.inputFlows=this.config.inputSignalCount}}(0,Q.e)("FlowGraphWaitAllBlock",h)}}]);