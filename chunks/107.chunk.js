"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[107],{15737:(l,a,N)=>{N.r(a),N.d(a,{FlowGraphWaitAllBlock:()=>w});var U=N(14195),c=N(12394),K=N(14145),Z=N(14138);class w extends U.b{constructor(l){super(l),this.config=l,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",K.l,new Z.d(this.config.inputSignalCount||0));for(let a=0;a<this.config.inputSignalCount;a++)this.inFlows.push(this._registerSignalInput(`in_${a}`));this._unregisterSignalInput("in")}_getCurrentActivationState(l){const a=this._cachedActivationState;if(a.length=0,l._hasExecutionVariable(this,"activationState")){const N=l._getExecutionVariable(this,"activationState",[]);for(let l=0;l<N.length;l++)a.push(N[l])}else for(let N=0;N<this.config.inputSignalCount;N++)a.push(!1);return a}_execute(l,a){const N=this._getCurrentActivationState(l);if(a===this.reset)for(let U=0;U<this.config.inputSignalCount;U++)N[U]=!1;else{const l=this.inFlows.indexOf(a);l>=0&&(N[l]=!0)}if(this.remainingInputs.setValue(new Z.d(N.filter((l=>!l)).length),l),l._setExecutionVariable(this,"activationState",N.slice()),N.includes(!1))a!==this.reset&&this.out._activateSignal(l);else{this.completed._activateSignal(l);for(let l=0;l<this.config.inputSignalCount;l++)N[l]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(l){super.serialize(l),l.config.inputFlows=this.config.inputSignalCount}}(0,c.g)("FlowGraphWaitAllBlock",w)}}]);