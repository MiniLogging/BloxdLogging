"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[107],{15980:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphWaitAllBlock:()=>O});var G=T(14295),B=T(12651),L=T(14237),f=T(14229);class O extends G.d{constructor(K){super(K),this.config=K,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",L.g,new f.e(this.config.inputSignalCount||0));for(let A=0;A<this.config.inputSignalCount;A++)this.inFlows.push(this._registerSignalInput(`in_${A}`));this._unregisterSignalInput("in")}_getCurrentActivationState(K){const A=this._cachedActivationState;if(A.length=0,K._hasExecutionVariable(this,"activationState")){const T=K._getExecutionVariable(this,"activationState",[]);for(let K=0;K<T.length;K++)A.push(T[K])}else for(let T=0;T<this.config.inputSignalCount;T++)A.push(!1);return A}_execute(K,A){const T=this._getCurrentActivationState(K);if(A===this.reset)for(let G=0;G<this.config.inputSignalCount;G++)T[G]=!1;else{const K=this.inFlows.indexOf(A);K>=0&&(T[K]=!0)}if(this.remainingInputs.setValue(new f.e(T.filter((K=>!K)).length),K),K._setExecutionVariable(this,"activationState",T.slice()),T.includes(!1))A!==this.reset&&this.out._activateSignal(K);else{this.completed._activateSignal(K);for(let K=0;K<this.config.inputSignalCount;K++)T[K]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(K){super.serialize(K),K.config.inputFlows=this.config.inputSignalCount}}(0,B.c)("FlowGraphWaitAllBlock",O)}}]);