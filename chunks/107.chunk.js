"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[107],{15685:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphWaitAllBlock:()=>i});var A=V(14094),t=V(12344),n=V(14036),q=V(14031);class i extends A.b{constructor(N){super(N),this.config=N,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",n.g,new q.b(this.config.inputSignalCount||0));for(let U=0;U<this.config.inputSignalCount;U++)this.inFlows.push(this._registerSignalInput(`in_${U}`));this._unregisterSignalInput("in")}_getCurrentActivationState(N){const U=this._cachedActivationState;if(U.length=0,N._hasExecutionVariable(this,"activationState")){const V=N._getExecutionVariable(this,"activationState",[]);for(let N=0;N<V.length;N++)U.push(V[N])}else for(let V=0;V<this.config.inputSignalCount;V++)U.push(!1);return U}_execute(N,U){const V=this._getCurrentActivationState(N);if(U===this.reset)for(let A=0;A<this.config.inputSignalCount;A++)V[A]=!1;else{const N=this.inFlows.indexOf(U);N>=0&&(V[N]=!0)}if(this.remainingInputs.setValue(new q.b(V.filter((N=>!N)).length),N),N._setExecutionVariable(this,"activationState",V.slice()),V.includes(!1))U!==this.reset&&this.out._activateSignal(N);else{this.completed._activateSignal(N);for(let N=0;N<this.config.inputSignalCount;N++)V[N]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(N){super.serialize(N),N.config.inputFlows=this.config.inputSignalCount}}(0,t.e)("FlowGraphWaitAllBlock",i)}}]);