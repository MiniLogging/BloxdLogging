"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[107],{15981:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphWaitAllBlock:()=>R});var H=o(14415),g=o(12793),j=o(14362),M=o(14360);class R extends H.d{constructor(D){super(D),this.config=D,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",j.h,new M.b(this.config.inputSignalCount||0));for(let h=0;h<this.config.inputSignalCount;h++)this.inFlows.push(this._registerSignalInput(`in_${h}`));this._unregisterSignalInput("in")}_getCurrentActivationState(D){const h=this._cachedActivationState;if(h.length=0,D._hasExecutionVariable(this,"activationState")){const o=D._getExecutionVariable(this,"activationState",[]);for(let D=0;D<o.length;D++)h.push(o[D])}else for(let o=0;o<this.config.inputSignalCount;o++)h.push(!1);return h}_execute(D,h){const o=this._getCurrentActivationState(D);if(h===this.reset)for(let H=0;H<this.config.inputSignalCount;H++)o[H]=!1;else{const D=this.inFlows.indexOf(h);D>=0&&(o[D]=!0)}if(this.remainingInputs.setValue(new M.b(o.filter((D=>!D)).length),D),D._setExecutionVariable(this,"activationState",o.slice()),o.includes(!1))h!==this.reset&&this.out._activateSignal(D);else{this.completed._activateSignal(D);for(let D=0;D<this.config.inputSignalCount;D++)o[D]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(D){super.serialize(D),D.config.inputFlows=this.config.inputSignalCount}}(0,g.g)("FlowGraphWaitAllBlock",R)}}]);