"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[65],{13783:(W,F,c)=>{c.r(F),c.d(F,{FlowGraphDeterminantBlock:()=>x,FlowGraphInvertMatrixBlock:()=>j,FlowGraphMatrixComposeBlock:()=>y,FlowGraphMatrixDecomposeBlock:()=>q,FlowGraphMatrixMultiplicationBlock:()=>N,FlowGraphTransposeBlock:()=>s});var T=c(12543),Y=c(12517),Z=c(694),w=c(642),A=c(13772),u=c(13763);class s extends A.b{constructor(W){super((0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(W=>W.transpose?W.transpose():Z.b.Transpose(W)),"FlowGraphTransposeBlock",W)}}(0,w.h)("FlowGraphTransposeBlock",s);class x extends A.b{constructor(W){super((0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),Y.n,(W=>W.determinant()),"FlowGraphDeterminantBlock",W)}}(0,w.h)("FlowGraphDeterminantBlock",x);class j extends A.b{constructor(W){super((0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(W=>W.inverse?W.inverse():Z.b.Invert(W)),"FlowGraphInvertMatrixBlock",W)}}(0,w.h)("FlowGraphInvertMatrixBlock",j);class N extends u.c{constructor(W){super((0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),(0,Y.F)((null===W||void 0===W?void 0:W.matrixType)||"Matrix"),((W,F)=>F.multiply(W)),"FlowGraphMatrixMultiplicationBlock",W)}}(0,w.h)("FlowGraphMatrixMultiplicationBlock",N);class q extends T.d{constructor(W){super(W),this.input=this.registerDataInput("input",Y.i),this.position=this.registerDataOutput("position",Y.t),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",Y.p),this.hi=this.registerDataOutput("hi",Y.t),this.isValid=this.registerDataOutput("isValid",Y.e,!1)}_updateOutputs(W){const F=W._getExecutionVariable(this,"executionId",-1),c=W._getExecutionVariable(this,"cachedPosition",null),T=W._getExecutionVariable(this,"cachedRotation",null),Y=W._getExecutionVariable(this,"cachedScaling",null);if(F===W.executionId&&c&&T&&Y)this.position.setValue(c,W),this.rotationQuaternion.setValue(T,W),this.hi.setValue(Y,W);else{const F=this.input.getValue(W),w=c||new Z.l,A=T||new Z.e,u=Y||new Z.l,s=Math.round(1e4*F.m[3])/1e4,x=Math.round(1e4*F.m[7])/1e4,j=Math.round(1e4*F.m[11])/1e4,N=Math.round(1e4*F.m[15])/1e4;if(0!==s||0!==x||0!==j||1!==N)return this.isValid.setValue(!1,W),this.position.setValue(Z.l.Zero(),W),this.rotationQuaternion.setValue(Z.e.Identity(),W),void this.hi.setValue(Z.l.One(),W);const q=F.decompose(u,A,w);this.isValid.setValue(q,W),this.position.setValue(w,W),this.rotationQuaternion.setValue(A,W),this.hi.setValue(u,W),W._setExecutionVariable(this,"cachedPosition",w),W._setExecutionVariable(this,"cachedRotation",A),W._setExecutionVariable(this,"cachedScaling",u),W._setExecutionVariable(this,"executionId",W.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,w.h)("FlowGraphMatrixDecompose",q);class y extends T.d{constructor(W){super(W),this.position=this.registerDataInput("position",Y.t),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",Y.p),this.hi=this.registerDataInput("hi",Y.t),this.value=this.registerDataOutput("value",Y.i)}_updateOutputs(W){const F=W._getExecutionVariable(this,"executionId",-1),c=W._getExecutionVariable(this,"cachedMatrix",null);if(F===W.executionId&&c)this.value.setValue(c,W);else{const F=Z.b.Compose(this.hi.getValue(W),this.rotationQuaternion.getValue(W),this.position.getValue(W));this.value.setValue(F,W),W._setExecutionVariable(this,"cachedMatrix",F),W._setExecutionVariable(this,"executionId",W.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,w.h)("FlowGraphMatrixCompose",y)},13763:(W,F,c)=>{c.d(F,{c:()=>Y});var T=c(13768);class Y extends T.d{constructor(W,F,c,T,Y,Z){super(c,Z),this._operation=T,this._className=Y,this.a=this.registerDataInput("a",W),this.b=this.registerDataInput("b",F)}_doOperation(W){const F=this.a.getValue(W),c=this.b.getValue(W);return this._operation(F,c)}getClassName(){return this._className}}},13768:(W,F,c)=>{c.d(F,{d:()=>A});var T=c(12543),Y=c(12517);const Z="cachedOperationValue",w="cachedExecutionId";class A extends T.d{constructor(W,F){super(F),this.value=this.registerDataOutput("value",W),this.isValid=this.registerDataOutput("isValid",Y.e)}_updateOutputs(W){const F=W._getExecutionVariable(this,w,-1),c=W._getExecutionVariable(this,Z,null);if(void 0!==c&&null!==c&&F===W.executionId)this.isValid.setValue(!0,W),this.value.setValue(c,W);else try{const F=this._doOperation(W);if(void 0===F||null===F)return void this.isValid.setValue(!1,W);W._setExecutionVariable(this,Z,F),W._setExecutionVariable(this,w,W.executionId),this.value.setValue(F,W),this.isValid.setValue(!0,W)}catch(T){this.isValid.setValue(!1,W)}}}},13772:(W,F,c)=>{c.d(F,{b:()=>Y});var T=c(13768);class Y extends T.d{constructor(W,F,c,T,Y){super(F,Y),this._operation=c,this._className=T,this.a=this.registerDataInput("a",W)}_doOperation(W){return this._operation(this.a.getValue(W))}getClassName(){return this._className}}}}]);