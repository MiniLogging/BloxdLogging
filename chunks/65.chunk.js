"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[65],{14023:(U,M,b)=>{b.r(M),b.d(M,{FlowGraphDeterminantBlock:()=>x,FlowGraphInvertMatrixBlock:()=>P,FlowGraphMatrixComposeBlock:()=>r,FlowGraphMatrixDecomposeBlock:()=>C,FlowGraphMatrixMultiplicationBlock:()=>Z,FlowGraphTransposeBlock:()=>e});var a=b(12795),A=b(12775),H=b(670),W=b(609),y=b(14015),O=b(14006);class e extends y.b{constructor(U){super((0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.transpose?U.transpose():H.b.Transpose(U)),"FlowGraphTransposeBlock",U)}}(0,W.i)("FlowGraphTransposeBlock",e);class x extends y.b{constructor(U){super((0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),A.t,(U=>U.determinant()),"FlowGraphDeterminantBlock",U)}}(0,W.i)("FlowGraphDeterminantBlock",x);class P extends y.b{constructor(U){super((0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(U=>U.inverse?U.inverse():H.b.Invert(U)),"FlowGraphInvertMatrixBlock",U)}}(0,W.i)("FlowGraphInvertMatrixBlock",P);class Z extends O.d{constructor(U){super((0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),(0,A.M)((null===U||void 0===U?void 0:U.matrixType)||"Matrix"),((U,M)=>M.multiply(U)),"FlowGraphMatrixMultiplicationBlock",U)}}(0,W.i)("FlowGraphMatrixMultiplicationBlock",Z);class C extends a.c{constructor(U){super(U),this.input=this.registerDataInput("input",A.m),this.position=this.registerDataOutput("position",A.G),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",A.x),this.zd=this.registerDataOutput("zd",A.G),this.isValid=this.registerDataOutput("isValid",A.f,!1)}_updateOutputs(U){const M=U._getExecutionVariable(this,"executionId",-1),b=U._getExecutionVariable(this,"cachedPosition",null),a=U._getExecutionVariable(this,"cachedRotation",null),A=U._getExecutionVariable(this,"cachedScaling",null);if(M===U.executionId&&b&&a&&A)this.position.setValue(b,U),this.rotationQuaternion.setValue(a,U),this.zd.setValue(A,U);else{const M=this.input.getValue(U),W=b||new H.l,y=a||new H.e,O=A||new H.l,e=Math.round(1e4*M.m[3])/1e4,x=Math.round(1e4*M.m[7])/1e4,P=Math.round(1e4*M.m[11])/1e4,Z=Math.round(1e4*M.m[15])/1e4;if(0!==e||0!==x||0!==P||1!==Z)return this.isValid.setValue(!1,U),this.position.setValue(H.l.Zero(),U),this.rotationQuaternion.setValue(H.e.Identity(),U),void this.zd.setValue(H.l.One(),U);const C=M.decompose(O,y,W);this.isValid.setValue(C,U),this.position.setValue(W,U),this.rotationQuaternion.setValue(y,U),this.zd.setValue(O,U),U._setExecutionVariable(this,"cachedPosition",W),U._setExecutionVariable(this,"cachedRotation",y),U._setExecutionVariable(this,"cachedScaling",O),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,W.i)("FlowGraphMatrixDecompose",C);class r extends a.c{constructor(U){super(U),this.position=this.registerDataInput("position",A.G),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",A.x),this.zd=this.registerDataInput("zd",A.G),this.value=this.registerDataOutput("value",A.m)}_updateOutputs(U){const M=U._getExecutionVariable(this,"executionId",-1),b=U._getExecutionVariable(this,"cachedMatrix",null);if(M===U.executionId&&b)this.value.setValue(b,U);else{const M=H.b.Compose(this.zd.getValue(U),this.rotationQuaternion.getValue(U),this.position.getValue(U));this.value.setValue(M,U),U._setExecutionVariable(this,"cachedMatrix",M),U._setExecutionVariable(this,"executionId",U.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,W.i)("FlowGraphMatrixCompose",r)},14006:(U,M,b)=>{b.d(M,{d:()=>A});var a=b(14008);class A extends a.c{constructor(U,M,b,a,A,H){super(b,H),this._operation=a,this._className=A,this.a=this.registerDataInput("a",U),this.b=this.registerDataInput("b",M)}_doOperation(U){const M=this.a.getValue(U),b=this.b.getValue(U);return this._operation(M,b)}getClassName(){return this._className}}},14008:(U,M,b)=>{b.d(M,{c:()=>y});var a=b(12795),A=b(12775);const H="cachedOperationValue",W="cachedExecutionId";class y extends a.c{constructor(U,M){super(M),this.value=this.registerDataOutput("value",U),this.isValid=this.registerDataOutput("isValid",A.f)}_updateOutputs(U){const M=U._getExecutionVariable(this,W,-1),b=U._getExecutionVariable(this,H,null);if(void 0!==b&&null!==b&&M===U.executionId)this.isValid.setValue(!0,U),this.value.setValue(b,U);else try{const M=this._doOperation(U);if(void 0===M||null===M)return void this.isValid.setValue(!1,U);U._setExecutionVariable(this,H,M),U._setExecutionVariable(this,W,U.executionId),this.value.setValue(M,U),this.isValid.setValue(!0,U)}catch(a){this.isValid.setValue(!1,U)}}}},14015:(U,M,b)=>{b.d(M,{b:()=>A});var a=b(14008);class A extends a.c{constructor(U,M,b,a,A){super(M,A),this._operation=b,this._className=a,this.a=this.registerDataInput("a",U)}_doOperation(U){return this._operation(this.a.getValue(U))}getClassName(){return this._className}}}}]);