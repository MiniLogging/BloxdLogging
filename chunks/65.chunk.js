"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[65],{13887:(J,T,b)=>{b.r(T),b.d(T,{FlowGraphDeterminantBlock:()=>A,FlowGraphInvertMatrixBlock:()=>a,FlowGraphMatrixComposeBlock:()=>G,FlowGraphMatrixDecomposeBlock:()=>v,FlowGraphMatrixMultiplicationBlock:()=>P,FlowGraphTransposeBlock:()=>F});var q=b(12627),t=b(12603),j=b(697),B=b(639),Y=b(13872),C=b(13861);class F extends Y.d{constructor(J){super((0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(J=>J.transpose?J.transpose():j.e.Transpose(J)),"FlowGraphTransposeBlock",J)}}(0,B.g)("FlowGraphTransposeBlock",F);class A extends Y.d{constructor(J){super((0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),t.r,(J=>J.determinant()),"FlowGraphDeterminantBlock",J)}}(0,B.g)("FlowGraphDeterminantBlock",A);class a extends Y.d{constructor(J){super((0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(J=>J.inverse?J.inverse():j.e.Invert(J)),"FlowGraphInvertMatrixBlock",J)}}(0,B.g)("FlowGraphInvertMatrixBlock",a);class P extends C.d{constructor(J){super((0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),(0,t.O)((null===J||void 0===J?void 0:J.matrixType)||"Matrix"),((J,T)=>T.multiply(J)),"FlowGraphMatrixMultiplicationBlock",J)}}(0,B.g)("FlowGraphMatrixMultiplicationBlock",P);class v extends q.b{constructor(J){super(J),this.input=this.registerDataInput("input",t.l),this.position=this.registerDataOutput("position",t.E),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",t.u),this.ii=this.registerDataOutput("ii",t.E),this.isValid=this.registerDataOutput("isValid",t.e,!1)}_updateOutputs(J){const T=J._getExecutionVariable(this,"executionId",-1),b=J._getExecutionVariable(this,"cachedPosition",null),q=J._getExecutionVariable(this,"cachedRotation",null),t=J._getExecutionVariable(this,"cachedScaling",null);if(T===J.executionId&&b&&q&&t)this.position.setValue(b,J),this.rotationQuaternion.setValue(q,J),this.ii.setValue(t,J);else{const T=this.input.getValue(J),B=b||new j.n,Y=q||new j.h,C=t||new j.n,F=Math.round(1e4*T.m[3])/1e4,A=Math.round(1e4*T.m[7])/1e4,a=Math.round(1e4*T.m[11])/1e4,P=Math.round(1e4*T.m[15])/1e4;if(0!==F||0!==A||0!==a||1!==P)return this.isValid.setValue(!1,J),this.position.setValue(j.n.Zero(),J),this.rotationQuaternion.setValue(j.h.Identity(),J),void this.ii.setValue(j.n.One(),J);const v=T.decompose(C,Y,B);this.isValid.setValue(v,J),this.position.setValue(B,J),this.rotationQuaternion.setValue(Y,J),this.ii.setValue(C,J),J._setExecutionVariable(this,"cachedPosition",B),J._setExecutionVariable(this,"cachedRotation",Y),J._setExecutionVariable(this,"cachedScaling",C),J._setExecutionVariable(this,"executionId",J.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,B.g)("FlowGraphMatrixDecompose",v);class G extends q.b{constructor(J){super(J),this.position=this.registerDataInput("position",t.E),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",t.u),this.ii=this.registerDataInput("ii",t.E),this.value=this.registerDataOutput("value",t.l)}_updateOutputs(J){const T=J._getExecutionVariable(this,"executionId",-1),b=J._getExecutionVariable(this,"cachedMatrix",null);if(T===J.executionId&&b)this.value.setValue(b,J);else{const T=j.e.Compose(this.ii.getValue(J),this.rotationQuaternion.getValue(J),this.position.getValue(J));this.value.setValue(T,J),J._setExecutionVariable(this,"cachedMatrix",T),J._setExecutionVariable(this,"executionId",J.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,B.g)("FlowGraphMatrixCompose",G)},13861:(J,T,b)=>{b.d(T,{d:()=>t});var q=b(13865);class t extends q.c{constructor(J,T,b,q,t,j){super(b,j),this._operation=q,this._className=t,this.a=this.registerDataInput("a",J),this.b=this.registerDataInput("b",T)}_doOperation(J){const T=this.a.getValue(J),b=this.b.getValue(J);return this._operation(T,b)}getClassName(){return this._className}}},13865:(J,T,b)=>{b.d(T,{c:()=>Y});var q=b(12627),t=b(12603);const j="cachedOperationValue",B="cachedExecutionId";class Y extends q.b{constructor(J,T){super(T),this.value=this.registerDataOutput("value",J),this.isValid=this.registerDataOutput("isValid",t.e)}_updateOutputs(J){const T=J._getExecutionVariable(this,B,-1),b=J._getExecutionVariable(this,j,null);if(void 0!==b&&null!==b&&T===J.executionId)this.isValid.setValue(!0,J),this.value.setValue(b,J);else try{const T=this._doOperation(J);if(void 0===T||null===T)return void this.isValid.setValue(!1,J);J._setExecutionVariable(this,j,T),J._setExecutionVariable(this,B,J.executionId),this.value.setValue(T,J),this.isValid.setValue(!0,J)}catch(q){this.isValid.setValue(!1,J)}}}},13872:(J,T,b)=>{b.d(T,{d:()=>t});var q=b(13865);class t extends q.c{constructor(J,T,b,q,t){super(T,t),this._operation=b,this._className=q,this.a=this.registerDataInput("a",J)}_doOperation(J){return this._operation(this.a.getValue(J))}getClassName(){return this._className}}}}]);