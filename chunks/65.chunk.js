"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[65],{14159:(u,F,z)=>{z.r(F),z.d(F,{FlowGraphDeterminantBlock:()=>j,FlowGraphInvertMatrixBlock:()=>W,FlowGraphMatrixComposeBlock:()=>k,FlowGraphMatrixDecomposeBlock:()=>L,FlowGraphMatrixMultiplicationBlock:()=>E,FlowGraphTransposeBlock:()=>X});var p=z(12980),b=z(12952),R=z(730),c=z(668),I=z(14142),G=z(14129);class X extends I.e{constructor(u){super((0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(u=>u.transpose?u.transpose():R.b.Transpose(u)),"FlowGraphTransposeBlock",u)}}(0,c.h)("FlowGraphTransposeBlock",X);class j extends I.e{constructor(u){super((0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),b.t,(u=>u.determinant()),"FlowGraphDeterminantBlock",u)}}(0,c.h)("FlowGraphDeterminantBlock",j);class W extends I.e{constructor(u){super((0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(u=>u.inverse?u.inverse():R.b.Invert(u)),"FlowGraphInvertMatrixBlock",u)}}(0,c.h)("FlowGraphInvertMatrixBlock",W);class E extends G.c{constructor(u){super((0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),(0,b.M)((null===u||void 0===u?void 0:u.matrixType)||"Matrix"),((u,F)=>F.multiply(u)),"FlowGraphMatrixMultiplicationBlock",u)}}(0,c.h)("FlowGraphMatrixMultiplicationBlock",E);class L extends p.d{constructor(u){super(u),this.input=this.registerDataInput("input",b.p),this.position=this.registerDataOutput("position",b.C),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",b.u),this.ed=this.registerDataOutput("ed",b.C),this.isValid=this.registerDataOutput("isValid",b.i,!1)}_updateOutputs(u){const F=u._getExecutionVariable(this,"executionId",-1),z=u._getExecutionVariable(this,"cachedPosition",null),p=u._getExecutionVariable(this,"cachedRotation",null),b=u._getExecutionVariable(this,"cachedScaling",null);if(F===u.executionId&&z&&p&&b)this.position.setValue(z,u),this.rotationQuaternion.setValue(p,u),this.ed.setValue(b,u);else{const F=this.input.getValue(u),c=z||new R.l,I=p||new R.f,G=b||new R.l,X=Math.round(1e4*F.m[3])/1e4,j=Math.round(1e4*F.m[7])/1e4,W=Math.round(1e4*F.m[11])/1e4,E=Math.round(1e4*F.m[15])/1e4;if(0!==X||0!==j||0!==W||1!==E)return this.isValid.setValue(!1,u),this.position.setValue(R.l.Zero(),u),this.rotationQuaternion.setValue(R.f.Identity(),u),void this.ed.setValue(R.l.One(),u);const L=F.decompose(G,I,c);this.isValid.setValue(L,u),this.position.setValue(c,u),this.rotationQuaternion.setValue(I,u),this.ed.setValue(G,u),u._setExecutionVariable(this,"cachedPosition",c),u._setExecutionVariable(this,"cachedRotation",I),u._setExecutionVariable(this,"cachedScaling",G),u._setExecutionVariable(this,"executionId",u.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,c.h)("FlowGraphMatrixDecompose",L);class k extends p.d{constructor(u){super(u),this.position=this.registerDataInput("position",b.C),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",b.u),this.ed=this.registerDataInput("ed",b.C),this.value=this.registerDataOutput("value",b.p)}_updateOutputs(u){const F=u._getExecutionVariable(this,"executionId",-1),z=u._getExecutionVariable(this,"cachedMatrix",null);if(F===u.executionId&&z)this.value.setValue(z,u);else{const F=R.b.Compose(this.ed.getValue(u),this.rotationQuaternion.getValue(u),this.position.getValue(u));this.value.setValue(F,u),u._setExecutionVariable(this,"cachedMatrix",F),u._setExecutionVariable(this,"executionId",u.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,c.h)("FlowGraphMatrixCompose",k)},14129:(u,F,z)=>{z.d(F,{c:()=>b});var p=z(14133);class b extends p.e{constructor(u,F,z,p,b,R){super(z,R),this._operation=p,this._className=b,this.a=this.registerDataInput("a",u),this.b=this.registerDataInput("b",F)}_doOperation(u){const F=this.a.getValue(u),z=this.b.getValue(u);return this._operation(F,z)}getClassName(){return this._className}}},14133:(u,F,z)=>{z.d(F,{e:()=>I});var p=z(12980),b=z(12952);const R="cachedOperationValue",c="cachedExecutionId";class I extends p.d{constructor(u,F){super(F),this.value=this.registerDataOutput("value",u),this.isValid=this.registerDataOutput("isValid",b.i)}_updateOutputs(u){const F=u._getExecutionVariable(this,c,-1),z=u._getExecutionVariable(this,R,null);if(void 0!==z&&null!==z&&F===u.executionId)this.isValid.setValue(!0,u),this.value.setValue(z,u);else try{const F=this._doOperation(u);if(void 0===F||null===F)return void this.isValid.setValue(!1,u);u._setExecutionVariable(this,R,F),u._setExecutionVariable(this,c,u.executionId),this.value.setValue(F,u),this.isValid.setValue(!0,u)}catch(p){this.isValid.setValue(!1,u)}}}},14142:(u,F,z)=>{z.d(F,{e:()=>b});var p=z(14133);class b extends p.e{constructor(u,F,z,p,b){super(F,b),this._operation=z,this._className=p,this.a=this.registerDataInput("a",u)}_doOperation(u){return this._operation(this.a.getValue(u))}getClassName(){return this._className}}}}]);