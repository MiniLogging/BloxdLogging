"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[77],{14196:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphJsonPointerParserBlock:()=>X});var o=A(12760),t=A(12763);const n=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class h{constructor(c,b){this.path=c,this.ownerBlock=b,this.templatedInputs=[];let A=n.exec(c);const h=new Set;for(;A;){const[,s]=A;if(h.has(s))throw new Error("Duplicate template variable detected.");h.add(s),this.templatedInputs.push(b.registerDataInput(s,t.g,new o.d(0))),A=n.exec(c)}}getAccessor(c,b){let A=this.path;for(const o of this.templatedInputs){const c=o.getValue(b).value;if("number"!==typeof c||c<0)throw new Error("Invalid value for templated input.");A=A.replace(`{${o.name}}`,c.toString())}return c.convert(A)}}var s=A(633),L=A(688),C=A(721),J=A(14025);class X extends J.d{constructor(c){super(t.e,c),this.config=c,this.object=this.registerDataOutput("object",t.e),this.propertyName=this.registerDataOutput("propertyName",t.e),this.setterFunction=this.registerDataOutput("setFunction",t.e,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",t.e,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",t.e,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new h(c.jsonPointer,this)}_doOperation(c){var b,A,o;const t=this.templateComponent.getAccessor(this.config.pathConverter,c),n=t.info.get(t.object),h=null===(b=(A=t.info).getTarget)||void 0===b?void 0:b.call(A,t.object),s=null===(o=t.info.getPropertyName)||void 0===o?void 0:o[0](t.object);if(!h)throw new Error("Object is undefined");return this.object.setValue(h,c),s&&this.propertyName.setValue(s,c),n}_setPropertyValue(c,b,A,o){var t,n;const h=this.templateComponent.getAccessor(this.config.pathConverter,o),s=h.info.type;s.startsWith("Color")&&(A=R(A,s)),null===(t=(n=h.info).set)||void 0===t||t.call(n,A,h.object)}_getPropertyValue(c,b,A){const o=this.templateComponent.getAccessor(this.config.pathConverter,A),t=o.info.type,n=o.info.get(o.object);return t.startsWith("Color")?function(c){if(c instanceof C.d)return new L.k(c.r,c.g,c.b);if(c instanceof C.h)return new L.o(c.r,c.g,c.b,c.a);throw new Error("Invalid color type")}(n):n}_getInterpolationAnimationPropertyInfo(c,b,A){const o=this.templateComponent.getAccessor(this.config.pathConverter,A);return(c,b,A,t)=>{var n;const h=[],s=o.info.type;return s.startsWith("Color")&&(c=c.map((c=>({frame:c.frame,value:R(c.value,s)})))),null===(n=o.info.interpolation)||void 0===n||n.forEach(((b,n)=>{var s;const L=(null===(s=o.info.getPropertyName)||void 0===s?void 0:s[n](o.object))||"Animation-interpolation-"+n;let C=c;A!==b.type&&(C=c.map((c=>({frame:c.frame,value:b.getValue(void 0,c.value.hk?c.value.hk():[c.value],0,1)}))));const J=b.buildAnimations(o.object,L,60,C);for(const c of J)t&&c.babylonAnimation.setEasingFunction(t),h.push(c.babylonAnimation)})),h}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function R(c,b){return c.getClassName().startsWith("Color")?c:"rk"===b?new C.d(c.x,c.y,c.z):"sk"===b?new C.h(c.x,c.y,c.z,c.w):c}(0,s.d)("FlowGraphJsonPointerParserBlock",X)},14025:(c,b,A)=>{A.d(b,{d:()=>s});var o=A(12789),t=A(12763);const n="cachedOperationValue",h="cachedExecutionId";class s extends o.d{constructor(c,b){super(b),this.value=this.registerDataOutput("value",c),this.isValid=this.registerDataOutput("isValid",t.f)}_updateOutputs(c){const b=c._getExecutionVariable(this,h,-1),A=c._getExecutionVariable(this,n,null);if(void 0!==A&&null!==A&&b===c.executionId)this.isValid.setValue(!0,c),this.value.setValue(A,c);else try{const b=this._doOperation(c);if(void 0===b||null===b)return void this.isValid.setValue(!1,c);c._setExecutionVariable(this,n,b),c._setExecutionVariable(this,h,c.executionId),this.value.setValue(b,c),this.isValid.setValue(!0,c)}catch(o){this.isValid.setValue(!1,c)}}}}}]);