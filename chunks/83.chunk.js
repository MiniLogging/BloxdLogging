"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14160:(q,c,U)=>{U.r(c),U.d(c,{FlowGraphForLoopBlock:()=>n});var J=U(12699),Q=U(12648),s=U(10850),g=U(12677),X=U(12642);class n extends J.e{constructor(q){super(q),this.startIndex=this.registerDataInput("startIndex",Q.c,0),this.endIndex=this.registerDataInput("endIndex",Q.c),this.step=this.registerDataInput("step",Q.t,1),this.index=this.registerDataOutput("index",Q.i,new X.b((0,g.n)((null===q||void 0===q?void 0:q.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(q){var c;const U=(0,g.n)(this.startIndex.getValue(q)),J=this.step.getValue(q);let Q=(0,g.n)(this.endIndex.getValue(q));for(let s=U;s<Q&&(this.index.setValue(new X.b(s),q),this.executionFlow._activateSignal(q),Q=(0,g.n)(this.endIndex.getValue(q)),!(s>n.MaxLoopIterations*J));s+=J);null!==(c=this.config)&&void 0!==c&&c.incrementIndexWhenLoopDone&&this.index.setValue(new X.b((0,g.n)(this.index.getValue(q))+J),q),this.completed._activateSignal(q)}getClassName(){return"FlowGraphForLoopBlock"}}n.MaxLoopIterations=1e3,(0,s.f)("FlowGraphForLoopBlock",n)}}]);