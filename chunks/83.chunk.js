"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14321:(s,Z,o)=>{o.r(Z),o.d(Z,{FlowGraphForLoopBlock:()=>v});var t=o(12831),j=o(12775),S=o(10916),a=o(12816),O=o(12771);class v extends t.b{constructor(s){super(s),this.startIndex=this.registerDataInput("startIndex",j.d,0),this.endIndex=this.registerDataInput("endIndex",j.d),this.step=this.registerDataInput("step",j.w,1),this.index=this.registerDataOutput("index",j.j,new O.b((0,a.o)((null===s||void 0===s?void 0:s.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(s){var Z;const o=(0,a.o)(this.startIndex.getValue(s)),t=this.step.getValue(s);let j=(0,a.o)(this.endIndex.getValue(s));for(let S=o;S<j&&(this.index.setValue(new O.b(S),s),this.executionFlow._activateSignal(s),j=(0,a.o)(this.endIndex.getValue(s)),!(S>v.MaxLoopIterations*t));S+=t);null!==(Z=this.config)&&void 0!==Z&&Z.incrementIndexWhenLoopDone&&this.index.setValue(new O.b((0,a.o)(this.index.getValue(s))+t),s),this.completed._activateSignal(s)}getClassName(){return"FlowGraphForLoopBlock"}}v.MaxLoopIterations=1e3,(0,S.f)("FlowGraphForLoopBlock",v)}}]);