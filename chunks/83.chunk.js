"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14275:(x,O,Q)=>{Q.r(O),Q.d(O,{FlowGraphForLoopBlock:()=>l});var X=Q(12744),Z=Q(12707),n=Q(10866),V=Q(12730),o=Q(12703);class l extends X.d{constructor(x){super(x),this.startIndex=this.registerDataInput("startIndex",Z.d,0),this.endIndex=this.registerDataInput("endIndex",Z.d),this.step=this.registerDataInput("step",Z.q,1),this.index=this.registerDataOutput("index",Z.i,new o.b((0,V.u)((null===x||void 0===x?void 0:x.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(x){var O;const Q=(0,V.u)(this.startIndex.getValue(x)),X=this.step.getValue(x);let Z=(0,V.u)(this.endIndex.getValue(x));for(let n=Q;n<Z&&(this.index.setValue(new o.b(n),x),this.executionFlow._activateSignal(x),Z=(0,V.u)(this.endIndex.getValue(x)),!(n>l.MaxLoopIterations*X));n+=X);null!==(O=this.config)&&void 0!==O&&O.incrementIndexWhenLoopDone&&this.index.setValue(new o.b((0,V.u)(this.index.getValue(x))+X),x),this.completed._activateSignal(x)}getClassName(){return"FlowGraphForLoopBlock"}}l.MaxLoopIterations=1e3,(0,n.d)("FlowGraphForLoopBlock",l)}}]);