"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14428:(Z,c,L)=>{L.r(c),L.d(c,{FlowGraphForLoopBlock:()=>p});var k=L(12875),N=L(12825),R=L(11012),G=L(12858),V=L(12817);class p extends k.e{constructor(Z){super(Z),this.startIndex=this.registerDataInput("startIndex",N.e,0),this.endIndex=this.registerDataInput("endIndex",N.e),this.step=this.registerDataInput("step",N.t,1),this.index=this.registerDataOutput("index",N.i,new V.b((0,G.q)((null===Z||void 0===Z?void 0:Z.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(Z){var c;const L=(0,G.q)(this.startIndex.getValue(Z)),k=this.step.getValue(Z);let N=(0,G.q)(this.endIndex.getValue(Z));for(let R=L;R<N&&(this.index.setValue(new V.b(R),Z),this.executionFlow._activateSignal(Z),N=(0,G.q)(this.endIndex.getValue(Z)),!(R>p.MaxLoopIterations*k));R+=k);null!==(c=this.config)&&void 0!==c&&c.incrementIndexWhenLoopDone&&this.index.setValue(new V.b((0,G.q)(this.index.getValue(Z))+k),Z),this.completed._activateSignal(Z)}getClassName(){return"FlowGraphForLoopBlock"}}p.MaxLoopIterations=1e3,(0,R.g)("FlowGraphForLoopBlock",p)}}]);