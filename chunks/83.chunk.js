"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14243:(q,f,j)=>{j.r(f),j.d(f,{FlowGraphForLoopBlock:()=>H});var d=j(12752),g=j(12709),h=j(10965),L=j(12740),Q=j(12704);class H extends d.c{constructor(q){super(q),this.startIndex=this.registerDataInput("startIndex",g.c,0),this.endIndex=this.registerDataInput("endIndex",g.c),this.step=this.registerDataInput("step",g.o,1),this.index=this.registerDataOutput("index",g.e,new Q.c((0,L.m)((null===q||void 0===q?void 0:q.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(q){var f;const j=(0,L.m)(this.startIndex.getValue(q)),d=this.step.getValue(q);let g=(0,L.m)(this.endIndex.getValue(q));for(let h=j;h<g&&(this.index.setValue(new Q.c(h),q),this.executionFlow._activateSignal(q),g=(0,L.m)(this.endIndex.getValue(q)),!(h>H.MaxLoopIterations*d));h+=d);null!==(f=this.config)&&void 0!==f&&f.incrementIndexWhenLoopDone&&this.index.setValue(new Q.c((0,L.m)(this.index.getValue(q))+d),q),this.completed._activateSignal(q)}getClassName(){return"FlowGraphForLoopBlock"}}H.MaxLoopIterations=1e3,(0,h.f)("FlowGraphForLoopBlock",H)}}]);