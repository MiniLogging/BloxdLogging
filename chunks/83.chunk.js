"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[83],{16422:(P,a,R)=>{R.r(a),R.d(a,{Dispose:()=>V,DumpData:()=>l,DumpDataAsync:()=>h,DumpFramebuffer:()=>Q,DumpTools:()=>f});var S=R(15224),A=R(14310),Z=R(14184),p=R(14009);let j,U=null;async function Q(P,a,R,S){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0;const j=await R.readPixels(0,0,P,a);l(P,a,new Uint8Array(j.buffer),S,A,Z,!0,void 0,p)}async function h(P,a,R){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{l(P,a,R,(P=>U(P)),S,A,Z,p,j)}))}function l(P,a,Q,h){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((P,a)=>{let A,Z=null;const U={Sj:!0,depth:!1,gp:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(R.bind(R,14014)).then((Q=>{let{ThinEngine:h}=Q;const l=p.e.Instances.length;try{A=new OffscreenCanvas(100,100),Z=new h(A,!1,U)}catch(q){var f;l<p.e.Instances.length&&(null===(f=p.e.Instances.pop())||void 0===f||f.dispose()),A=document.createElement("canvas"),Z=new h(A,!1,U)}p.e.Instances.pop(),p.e.OnEnginesDisposedObservable.add((P=>{Z&&P!==Z&&!Z.U&&0===p.e.Instances.length&&V()})),Z.getCaps().parallelShaderCompile=void 0;const O=new S.b(Z);R.e(158).then(R.bind(R,17274)).then((R=>{let{passPixelShader:p}=R;if(!Z)return void a("Engine is not defined");const U=new S.d({fa:Z,name:p.name,fragmentShader:p.shader,samplerNames:["textureSampler"]});j={canvas:A,fa:Z,renderer:O,wrapper:U},P(j)}))})).catch(a)}))),await U})().then((R=>{if(R.fa.setSize(P,a,!0),Q instanceof Float32Array){const P=new Uint8Array(Q.length);let a=Q.length;for(;a--;){const R=Q[a];P[a]=Math.round(255*(0,Z.e)(R))}Q=P}const S=R.fa.createRawTexture(Q,P,a,5,!1,!O,1);R.renderer.setViewport(),R.renderer.applyEffectWrapper(R.wrapper),R.wrapper.effect._bindTexture("textureSampler",S),R.renderer.draw(),q?A.h.ToBlob(R.canvas,(P=>{const a=new FileReader;a.onload=P=>{const a=P.target.result;h&&h(a)},a.readAsArrayBuffer(P)}),l,y):A.h.EncodeScreenshotCanvasData(R.canvas,h,l,f,y),S.dispose()}))}function V(){var P;j?(j.wrapper.dispose(),j.renderer.dispose(),j.fa.dispose()):null===(P=U)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.fa.dispose()}));U=null,j=null}const f={DumpData:l,DumpDataAsync:h,DumpFramebuffer:Q,Dispose:V};A.h.DumpData=l,A.h.DumpDataAsync=h,A.h.DumpFramebuffer=Q}}]);