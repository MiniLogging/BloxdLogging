"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14600:(G,V,W)=>{W.r(V),W.d(V,{FlowGraphForLoopBlock:()=>X});var J=W(13115),R=W(13071),d=W(11159),k=W(13104),z=W(13067);class X extends J.e{constructor(G){super(G),this.startIndex=this.registerDataInput("startIndex",R.b,0),this.endIndex=this.registerDataInput("endIndex",R.b),this.step=this.registerDataInput("step",R.r,1),this.index=this.registerDataOutput("index",R.h,new z.e((0,k.r)((null===G||void 0===G?void 0:G.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(G){var V;const W=(0,k.r)(this.startIndex.getValue(G)),J=this.step.getValue(G);let R=(0,k.r)(this.endIndex.getValue(G));for(let d=W;d<R&&(this.index.setValue(new z.e(d),G),this.executionFlow._activateSignal(G),R=(0,k.r)(this.endIndex.getValue(G)),!(d>X.MaxLoopIterations*J));d+=J);null!==(V=this.config)&&void 0!==V&&V.incrementIndexWhenLoopDone&&this.index.setValue(new z.e((0,k.r)(this.index.getValue(G))+J),G),this.completed._activateSignal(G)}getClassName(){return"FlowGraphForLoopBlock"}}X.MaxLoopIterations=1e3,(0,d.d)("FlowGraphForLoopBlock",X)}}]);