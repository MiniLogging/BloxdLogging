"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14179:(h,d,m)=>{m.r(d),m.d(d,{FlowGraphForLoopBlock:()=>D});var j=m(12710),A=m(12671),b=m(11080),w=m(12695),a=m(12668);class D extends j.d{constructor(h){super(h),this.startIndex=this.registerDataInput("startIndex",A.e,0),this.endIndex=this.registerDataInput("endIndex",A.e),this.step=this.registerDataInput("step",A.y,1),this.index=this.registerDataOutput("index",A.i,new a.b((0,w.s)((null===h||void 0===h?void 0:h.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(h){var d;const m=(0,w.s)(this.startIndex.getValue(h)),j=this.step.getValue(h);let A=(0,w.s)(this.endIndex.getValue(h));for(let b=m;b<A&&(this.index.setValue(new a.b(b),h),this.executionFlow._activateSignal(h),A=(0,w.s)(this.endIndex.getValue(h)),!(b>D.MaxLoopIterations*j));b+=j);null!==(d=this.config)&&void 0!==d&&d.incrementIndexWhenLoopDone&&this.index.setValue(new a.b((0,w.s)(this.index.getValue(h))+j),h),this.completed._activateSignal(h)}getClassName(){return"FlowGraphForLoopBlock"}}D.MaxLoopIterations=1e3,(0,b.i)("FlowGraphForLoopBlock",D)}}]);