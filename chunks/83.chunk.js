"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[83],{14486:(V,I,m)=>{m.r(I),m.d(I,{FlowGraphForLoopBlock:()=>j});var C=m(12934),l=m(12899),s=m(11048),F=m(12926),k=m(12896);class j extends C.d{constructor(V){super(V),this.startIndex=this.registerDataInput("startIndex",l.b,0),this.endIndex=this.registerDataInput("endIndex",l.b),this.step=this.registerDataInput("step",l.r,1),this.index=this.registerDataOutput("index",l.h,new k.b((0,F.l)((null===V||void 0===V?void 0:V.initialIndex)??0))),this.executionFlow=this._registerSignalOutput("executionFlow"),this.completed=this._registerSignalOutput("completed"),this._unregisterSignalOutput("out")}_execute(V){var I;const m=(0,F.l)(this.startIndex.getValue(V)),C=this.step.getValue(V);let l=(0,F.l)(this.endIndex.getValue(V));for(let s=m;s<l&&(this.index.setValue(new k.b(s),V),this.executionFlow._activateSignal(V),l=(0,F.l)(this.endIndex.getValue(V)),!(s>j.MaxLoopIterations*C));s+=C);null!==(I=this.config)&&void 0!==I&&I.incrementIndexWhenLoopDone&&this.index.setValue(new k.b((0,F.l)(this.index.getValue(V))+C),V),this.completed._activateSignal(V)}getClassName(){return"FlowGraphForLoopBlock"}}j.MaxLoopIterations=1e3,(0,s.h)("FlowGraphForLoopBlock",j)}}]);