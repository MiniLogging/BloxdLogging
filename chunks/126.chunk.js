"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[126],{16657:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphSetVariableBlock:()=>p});var S=R(12376),A=R(14572),Z=R(14524);class p extends A.c{constructor(P){if(super(P),!P.variable&&!P.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(P.variables&&P.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(P.variables)for(const a of P.variables)this.registerDataInput(a,Z.c);else this.registerDataInput("value",Z.c)}_execute(P,a){var R,S;if(null!==(R=this.config)&&void 0!==R&&R.variables)for(const A of this.config.variables)this._saveVariable(P,A);else this._saveVariable(P,null===(S=this.config)||void 0===S?void 0:S.variable,"value");this.out._activateSignal(P)}_saveVariable(P,a,R){var S;const A=P._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const p of A){const R=P.assetsContext.animationGroups.find((P=>P.uniqueId==p));if(R)for(const S of R.targetedAnimations)if(S.target===P&&S.animation.targetProperty===a){R.stop();const a=A.indexOf(p);a>-1&&A.splice(a,1),P._setGlobalContextVariable("currentlyRunningAnimationGroups",A);break}}const Z=null===(S=this.getDataInput(R||a))||void 0===S?void 0:S.getValue(P);P.setVariable(a,Z)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(P){var a;super.serialize(P),P.config.variable=null===(a=this.config)||void 0===a?void 0:a.variable}}(0,S.d)("FlowGraphSetVariableBlock",p)}}]);