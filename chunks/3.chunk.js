"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[3],{2310:(K,Y,l)=>{l.d(Y,{b:()=>M});var v=l(469),U=l(675),d=l(2299),A=l(2314),c=l(2316),t=l(686),Z=l(627),m=l(569),V=l(492);m.b.prototype.setDepthStencilTexture=function(K,Y){this._engine.setDepthStencilTexture(this._samplers[K],this._uniforms[K],Y,K)};class M extends d.c{get renderList(){return this._renderList}set renderList(K){this._renderList!==K&&(this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),K&&(this._unObserveRenderList=(0,t.l)(K,this._renderListHasChanged)),this._renderList=K)}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(K){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(K)}set onBeforeRender(K){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(K)}set onAfterRender(K){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(K)}set onClear(K){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(K)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(K,Y){let l;l=Array.isArray(K)?K:[K];for(let v=0;v<l.length;++v)for(let K=0;K<this._renderPassIds.length;++K)l[v].setMaterialForRenderPass(this._renderPassIds[K],void 0!==Y?Array.isArray(Y)?Y[K]:Y:void 0)}get isMulti(){var K;return(null===(K=this._renderTarget)||void 0===K?void 0:K.isMulti)??!1}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(K){if(this._boundingBoxSize&&this._boundingBoxSize.equals(K))return;this._boundingBoxSize=K;const Y=this.va();Y&&Y.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var K;return(null===(K=this._renderTarget)||void 0===K?void 0:K._depthStencilTexture)??null}constructor(K,Y,l){let A,t=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Z=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,V=arguments.length>6&&void 0!==arguments[6]&&arguments[6],M=arguments.length>7&&void 0!==arguments[7]?arguments[7]:d.c.TRILINEAR_SAMPLINGMODE,u=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],o=arguments.length>9&&void 0!==arguments[9]&&arguments[9],W=arguments.length>10&&void 0!==arguments[10]&&arguments[10],g=arguments.length>11&&void 0!==arguments[11]?arguments[11]:5,J=arguments.length>12&&void 0!==arguments[12]&&arguments[12],n=arguments.length>13?arguments[13]:void 0,R=arguments.length>14?arguments[14]:void 0,H=arguments.length>15&&void 0!==arguments[15]&&arguments[15],z=arguments.length>16&&void 0!==arguments[16]&&arguments[16],r=!0;if("object"===typeof t){const K=t;t=!!K.generateMipMaps,Z=K.doNotChangeAspectRatio??!0,m=K.type??0,V=!!K.isCube,M=K.samplingMode??d.c.TRILINEAR_SAMPLINGMODE,u=K.generateDepthBuffer??!0,o=!!K.generateStencilBuffer,W=!!K.isMulti,g=K.format??5,J=!!K.delayAllocation,n=K.samples,R=K.creationFlags,H=!!K.noColorAttachment,z=!!K.useSRGBBuffer,A=K.colorAttachment,r=K.gammaSpace??r}if(super(null,l,!t,void 0,M,void 0,void 0,void 0,void 0,g),this._unObserveRenderList=null,this._renderListHasChanged=(K,Y)=>{const l=this._renderList?this._renderList.length:0;var v;(0===Y&&l>0||0===l)&&(null===(v=this.va())||void 0===v||v.meshes.forEach((K=>{K._markSubMeshesAsLightDirty()})))},this.particleSystemList=null,this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new v.b,this.onAfterUnbindObservable=new v.b,this.onBeforeRenderObservable=new v.b,this.onAfterRenderObservable=new v.b,this.onClearObservable=new v.b,this.onResizeObservable=new v.b,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=U.o.Zero(),this._dumpToolsLoading=!1,!(l=this.va()))return;const E=this.va().getEngine();this._gammaSpace=r,this._coordinatesMode=d.c.PROJECTION_MODE,this.renderList=[],this.name=K,this.isRenderTarget=!0,this._initialSizeParameter=Y,this._renderPassIds=[],this._isCubeData=V,this._processSizeParameter(Y),this.renderPassId=this._renderPassIds[0],this._resizeObserver=E.onResizeObservable.add((()=>{})),this._generateMipMaps=!!t,this._doNotChangeAspectRatio=Z,this._renderingManager=new c.b(l),this._renderingManager._useSceneAutoClearSetup=!0,W||(this._renderTargetOptions={generateMipMaps:t,type:m,format:this._format??void 0,samplingMode:this.samplingMode,generateDepthBuffer:u,generateStencilBuffer:o,samples:n,creationFlags:R,noColorAttachment:H,useSRGBBuffer:z,colorAttachment:A,label:this.name},this.samplingMode===d.c.NEAREST_SAMPLINGMODE&&(this.wrapU=d.c.CLAMP_ADDRESSMODE,this.wrapV=d.c.CLAMP_ADDRESSMODE),J||(V?(this._renderTarget=l.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=d.c.INVCUBIC_MODE,this._textureMatrix=U.d.Identity()):this._renderTarget=l.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==n&&(this.samples=n)))}createDepthStencilTexture(){var K;let Y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],v=arguments.length>2&&void 0!==arguments[2]&&arguments[2],U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:14,A=arguments.length>5?arguments[5]:void 0;null===(K=this._renderTarget)||void 0===K||K.createDepthStencilTexture(Y,l,v,U,d,A)}_releaseRenderPassId(){if(this._scene){const K=this._scene.getEngine();for(let Y=0;Y<this._renderPassIds.length;++Y)K.releaseRenderPassId(this._renderPassIds[Y])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const K=this._scene.getEngine(),Y=this._isCubeData?6:this.getRenderLayers()||1;for(let l=0;l<Y;++l)this._renderPassIds[l]=K.createRenderPassId(`RenderTargetTexture - ${this.name}#${l}`)}_processSizeParameter(K){let Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(K.ratio){this._sizeRatio=K.ratio;const Y=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(Y.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(Y.getRenderHeight(),this._sizeRatio)}}else this._size=K;Y&&this._createRenderPassId()}get samples(){var K;return(null===(K=this._renderTarget)||void 0===K?void 0:K.samples)??this._samples}set samples(K){this._renderTarget&&(this._samples=this._renderTarget.setSamples(K))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(K){this._refreshRate=K,this.resetRefreshCounter()}addPostProcess(K){if(!this._postProcessManager){const K=this.va();if(!K)return;this._postProcessManager=new A.e(K),this._postProcesses=new Array}this._postProcesses.push(K),this._postProcesses[0].El=!1}clearPostProcesses(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this._postProcesses){if(K)for(const K of this._postProcesses)K.dispose();this._postProcesses=[]}}removePostProcess(K){if(!this._postProcesses)return;const Y=this._postProcesses.indexOf(K);-1!==Y&&(this._postProcesses.splice(Y,1),this._postProcesses.length>0&&(this._postProcesses[0].El=!1))}_shouldRender(){return-1===this._currentRefreshId||this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const K=this._size.layers;if(K)return K;const Y=this._size.depth;return Y||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(K){const Y=Math.max(1,this.getRenderSize()*K);this.resize(Y)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(K){var Y;const l=this.isCube;null===(Y=this._renderTarget)||void 0===Y||Y.dispose(),this._renderTarget=null;const v=this.va();v&&(this._processSizeParameter(K,!1),this._renderTarget=l?v.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):v.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==this._renderTargetOptions.samples&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._render(K,Y)}isReadyForRendering(){return this._dumpToolsLoading||(this._dumpToolsLoading=!0,l.e(9).then(l.bind(l,2440)).then((K=>this._dumpTools=K))),this._render(!1,!1,!0)}_render(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1],l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const v=this.va();if(!v)return l;const U=v.getEngine();if(void 0!==this.useCameraPostProcesses&&(K=this.useCameraPostProcesses),this._waitingRenderList){if(!this.renderListPredicate){this.renderList=[];for(let K=0;K<this._waitingRenderList.length;K++){const Y=this._waitingRenderList[K],l=v.getMeshById(Y);l&&this.renderList.push(l)}}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const K=this.va();if(!K)return l;const Y=K.meshes;for(let l=0;l<Y.length;l++){const K=Y[l];this.renderListPredicate(K)&&this.renderList.push(K)}}const d=U.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const A=this.activeCamera??v.activeCamera,c=v.activeCamera;A&&(A!==v.activeCamera&&(v.setTransformMatrix(A.getViewMatrix(),A.getProjectionMatrix(!0)),v.activeCamera=A),U.setViewport(A.rigParent?A.rigParent.viewport:A.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let t=l;if(l){v.getViewMatrix()||v.updateTransformMatrix();const K=this.is2DArray||this.is3D?this.getRenderLayers():this.isCube?6:1;for(let d=0;d<K&&t;d++){let K=null;const Y=this.renderList?this.renderList:v.getActiveMeshes().data,A=this.renderList?this.renderList.length:v.getActiveMeshes().length;U.currentRenderPassId=this._renderPassIds[d],this.onBeforeRenderObservable.notifyObservers(d),this.getCustomRenderList&&(K=this.getCustomRenderList(d,Y,A)),K||(K=Y),this._doNotChangeAspectRatio||v.updateTransformMatrix(!0);for(let v=0;v<K.length&&t;++v){const Y=K[v];if(Y.isEnabled()&&!Y.isBlocked&&Y.isVisible&&Y.ui)if(this.customIsReadyFunction){if(!this.customIsReadyFunction(Y,this.refreshRate,l)){t=!1;continue}}else if(!Y.isReady(!0)){t=!1;continue}}this.onAfterRenderObservable.notifyObservers(d),(this.is2DArray||this.is3D||this.isCube)&&(v.incrementRenderId(),v.resetCachedMaterial())}const Y=this.particleSystemList||v.qi;for(const l of Y)l.isReady()||(t=!1)}else if(!this.is2DArray&&!this.is3D||this.isMulti)if(this.isCube&&!this.isMulti)for(let Z=0;Z<6;Z++)this._renderToTarget(Z,K,Y,void 0,A),v.incrementRenderId(),v.resetCachedMaterial();else this._renderToTarget(0,K,Y,void 0,A);else for(let Z=0;Z<this.getRenderLayers();Z++)this._renderToTarget(0,K,Y,Z,A),v.incrementRenderId(),v.resetCachedMaterial();return this.onAfterUnbindObservable.notifyObservers(this),U.currentRenderPassId=d,v.activeCamera=c,c&&(this.activeCamera&&this.activeCamera!==v.activeCamera&&v.setTransformMatrix(c.getViewMatrix(),c.getProjectionMatrix(!0)),U.setViewport(c.viewport)),v.resetCachedMaterial(),t}_bestReflectionRenderTargetDimension(K,Y){const l=K*Y,v=(0,Z.l)(l+16384/(128+l));return Math.min((0,Z.b)(K),v)}_prepareRenderingManager(K,Y,l,v){const U=this.va();if(!U)return;this._renderingManager.reset();const d=U.getRenderId();for(let c=0;c<Y;c++){const Y=K[c];if(Y&&!Y.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(Y,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!Y.isReady(0===this.refreshRate)){this.resetRefreshCounter();continue}if(!Y._internalAbstractMeshDataInfo._currentLODIsUpToDate&&l&&(Y._internalAbstractMeshDataInfo._currentLOD=U.customLODSelector?U.customLODSelector(Y,l):Y.getLOD(l),Y._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!Y._internalAbstractMeshDataInfo._currentLOD)continue;let K,A=Y._internalAbstractMeshDataInfo._currentLOD;if(A!==Y&&0!==A.billboardMode&&A.ri(),A._preActivateForIntermediateRendering(d),K=!(!v||!l)&&0===(Y.layerMask&l.layerMask),Y.isEnabled()&&Y.isVisible&&Y.ui&&!K){if(A!==Y&&A._activate(d,!0),Y._activate(d,!0)&&Y.ui.length){Y.isAnInstance?Y._internalAbstractMeshDataInfo._actAsRegularMesh&&(A=Y):A._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,A._internalAbstractMeshDataInfo._isActiveIntermediate=!0,U._prepareSkeleton(A);for(let K=0;K<A.ui.length;K++){const Y=A.ui[K];this._renderingManager.dispatch(Y,A)}}Y._postActivate()}}}const A=this.particleSystemList||U.qi;for(let c=0;c<A.length;c++){const K=A[c],Y=K.j;K.isStarted()&&Y&&(!Y.position||Y.isEnabled())&&this._renderingManager.dispatchParticles(K)}}_bindFrameBuffer(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const l=this.va();if(!l)return;const v=l.getEngine();this._renderTarget&&v.bindFramebuffer(this._renderTarget,this.isCube?K:void 0,void 0,void 0,this.ignoreCameraViewport,0,Y)}_unbindFrameBuffer(K,Y){this._renderTarget&&K.unBindFramebuffer(this._renderTarget,this.isCube,(()=>{this.onAfterRenderObservable.notifyObservers(Y)}))}_prepareFrame(K,Y,l,v){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):v&&K.postProcessManager._prepareFrame(this._texture)||this._bindFrameBuffer(Y,l)}_renderToTarget(K,Y,l){var v,U;let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const c=this.va();if(!c)return;const t=c.getEngine();this._prepareFrame(c,K,d,Y),null===(v=t._debugPushGroup)||void 0===v||v.call(t,`render to face #${K} layer #${d}`,2),this.is2DArray||this.is3D?(t.currentRenderPassId=this._renderPassIds[d],this.onBeforeRenderObservable.notifyObservers(d)):(t.currentRenderPassId=this._renderPassIds[K],this.onBeforeRenderObservable.notifyObservers(K));if(t.snapshotRendering&&1===t.snapshotRenderingMode)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(t):this.skipInitialClear||t.clear(this.clearColor||c.clearColor,!0,!0,!0);else{var Z;let v=null;const U=this.renderList?this.renderList:c.getActiveMeshes().data,m=this.renderList?this.renderList.length:c.getActiveMeshes().length;this.getCustomRenderList&&(v=this.getCustomRenderList(this.is2DArray||this.is3D?d:K,U,m)),v?this._prepareRenderingManager(v,v.length,A,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(U,m,A,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),v=U);for(const Y of c._beforeRenderTargetClearStage)Y.action(this,K,d);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(t):this.skipInitialClear||t.clear(this.clearColor||c.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||c.updateTransformMatrix(!0);for(const Y of c._beforeRenderTargetDrawStage)Y.action(this,K,d);this._renderingManager.render(this.customRenderFunction,v,this.renderParticles,this.renderSprites);for(const Y of c._afterRenderTargetDrawStage)Y.action(this,K,d);const M=(null===(Z=this._texture)||void 0===Z?void 0:Z.generateMipMaps)??!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,K,this._postProcesses,this.ignoreCameraViewport):Y&&c.postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,K);for(const Y of c._afterRenderTargetPostProcessStage)Y.action(this,K,d);this._texture&&(this._texture.generateMipMaps=M),this._doNotChangeAspectRatio||c.updateTransformMatrix(!0),l&&(this._dumpTools?this._dumpTools.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),t):V.e.Error("dumpTools module is still being loaded. To speed up the process import dump tools directly in your project"))}null===(U=t._debugPopGroup)||void 0===U||U.call(t,2),this._unbindFrameBuffer(t,K),this._texture&&this.isCube&&5===K&&t.generateMipMapsForCubemap(this._texture,!0)}setRenderingOrder(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(K,Y,l,v)}setRenderingAutoClearDepthStencil(K,Y){this._renderingManager.setRenderingAutoClearDepthStencil(K,Y),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const K=this.getSize(),Y=new M(this.name,K,this.va(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return Y.Cj=this.Cj,Y.level=this.level,Y.coordinatesMode=this.coordinatesMode,this.renderList&&(Y.renderList=this.renderList.slice(0)),Y}serialize(){if(!this.name)return null;const K=super.serialize();if(K.renderTargetSize=this.getRenderSize(),K.renderList=[],this.renderList)for(let Y=0;Y<this.renderList.length;Y++)K.renderList.push(this.renderList[Y].id);return K}disposeFramebufferObjects(){var K;null===(K=this._renderTarget)||void 0===K||K.dispose(!0)}releaseInternalTexture(){var K;null===(K=this._renderTarget)||void 0===K||K.releaseTextures(),this._texture=null}dispose(){var K;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.va().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const Y=this.va();if(!Y)return;let l=Y.customRenderTargets.indexOf(this);l>=0&&Y.customRenderTargets.splice(l,1);for(const v of Y.cameras)l=v.customRenderTargets.indexOf(this),l>=0&&v.customRenderTargets.splice(l,1);null===(K=this._renderTarget)||void 0===K||K.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===M.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=M.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}M.REFRESHRATE_RENDER_ONCE=0,M.REFRESHRATE_RENDER_ONEVERYFRAME=1,M.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,d.c._CreateRenderTargetTexture=(K,Y,l,v,U)=>new M(K,Y,l,v)},2331:(K,Y,l)=>{l.d(Y,{e:()=>Z,f:()=>m});var v=l(730),U=l(710),d=l(469),A=l(569),c=l(791);l(2340);const t={xa:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class Z{constructor(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t;this._fullscreenViewport=new U.c(0,0,1,1);const l=Y.xa??t.xa,d=Y.indices??t.indices;this.Ii=K,this._vertexBuffers={[v.e.PositionKind]:new v.e(K,l,v.e.PositionKind,!1,!1,2)},this._indexBuffer=K.createIndexBuffer(d),this._onContextRestoredObserver=K.onContextRestoredObservable.add((()=>{this._indexBuffer=K.createIndexBuffer(d);for(const K in this._vertexBuffers){this._vertexBuffers[K]._rebuild()}}))}setViewport(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._fullscreenViewport;this.Ii.setViewport(K)}bindBuffers(K){this.Ii.bindBuffers(this._vertexBuffers,this._indexBuffer,K)}applyEffectWrapper(K){this.Ii.setState(!0),this.Ii.depthCullingState.depthTest=!1,this.Ii.stencilState.stencilTest=!1,this.Ii.enableEffect(K.drawWrapper),this.bindBuffers(K.effect),K.onApplyObservable.notifyObservers({})}saveStates(){this._savedStateDepthTest=this.Ii.depthCullingState.depthTest,this._savedStateStencilTest=this.Ii.stencilState.stencilTest}restoreStates(){this.Ii.depthCullingState.depthTest=this._savedStateDepthTest,this.Ii.stencilState.stencilTest=this._savedStateStencilTest}draw(){this.Ii.drawElementsType(0,0,6)}_isRenderTargetTexture(K){return void 0!==K.renderTarget}render(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!K.effect.isReady())return;this.saveStates(),this.setViewport();const l=null===Y?null:this._isRenderTargetTexture(Y)?Y.renderTarget:Y;l&&this.Ii.bindFramebuffer(l),this.applyEffectWrapper(K),this.draw(),l&&this.Ii.unBindFramebuffer(l),this.restoreStates()}dispose(){const K=this._vertexBuffers[v.e.PositionKind];K&&(K.dispose(),delete this._vertexBuffers[v.e.PositionKind]),this._indexBuffer&&this.Ii._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.Ii.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class m{static RegisterShaderCodeProcessing(K,Y){Y?m._CustomShaderCodeProcessing[K??""]=Y:delete m._CustomShaderCodeProcessing[K??""]}static _GetShaderCodeProcessing(K){return m._CustomShaderCodeProcessing[K]??m._CustomShaderCodeProcessing[""]}get name(){return this.options.name}set name(K){this.options.name=K}isReady(){var K;return(null===(K=this._drawWrapper.effect)||void 0===K?void 0:K.isReady())??!1}get drawWrapper(){return this._drawWrapper}get effect(){return this._drawWrapper.effect}set effect(K){this._drawWrapper.effect=K}constructor(K){this.alphaMode=0,this.onEffectCreatedObservable=new d.b(void 0,!0),this.onApplyObservable=new d.b,this._shadersLoaded=!1,this._webGPUReady=!1,this._importPromises=[],this.options={...K,name:K.name||"effectWrapper",Ii:K.Ii,uniforms:K.uniforms||K.uniformNames||[],uniformNames:void 0,samplers:K.samplers||K.samplerNames||[],samplerNames:void 0,attributeNames:K.attributeNames||["position"],uniformBuffers:K.uniformBuffers||[],defines:K.defines||"",useShaderStore:K.useShaderStore||!1,vertexUrl:K.vertexUrl||K.vertexShader||"postprocess",vertexShader:void 0,fragmentShader:K.fragmentShader||"pass",indexParameters:K.indexParameters,blockCompilation:K.blockCompilation||!1,shaderLanguage:K.shaderLanguage||0,onCompiled:K.onCompiled||void 0,extraInitializations:K.extraInitializations||void 0,extraInitializationsAsync:K.extraInitializationsAsync||void 0,useAsPostProcess:K.useAsPostProcess??!1},this.options.uniformNames=this.options.uniforms,this.options.samplerNames=this.options.samplers,this.options.vertexShader=this.options.vertexUrl,this.options.useAsPostProcess&&(-1===this.options.samplers.indexOf("textureSampler")&&this.options.samplers.push("textureSampler"),-1===this.options.uniforms.indexOf("scale")&&this.options.uniforms.push("scale")),K.vertexUrl||K.vertexShader?this._shaderPath={vertexSource:this.options.vertexShader}:(this.options.useAsPostProcess||(this.options.uniforms.push("scale"),this.onApplyObservable.add((()=>{this.effect.setFloat2("scale",1,1)}))),this._shaderPath={vertex:this.options.vertexShader}),this._shaderPath.fragmentSource=this.options.fragmentShader,this._shaderPath.spectorName=this.options.name,this.options.useShaderStore&&(this._shaderPath.fragment=this._shaderPath.fragmentSource,this._shaderPath.vertex||(this._shaderPath.vertex=this._shaderPath.vertexSource),delete this._shaderPath.fragmentSource,delete this._shaderPath.vertexSource),this.onApplyObservable.add((()=>{this.bind()})),this.options.useShaderStore||(this._onContextRestoredObserver=this.options.Ii.onContextRestoredObservable.add((()=>{this.effect._pipelineContext=null,this.effect._prepareEffect()}))),this._drawWrapper=new c.b(this.options.Ii),this._webGPUReady=1===this.options.shaderLanguage;const Y=Array.isArray(this.options.defines)?this.options.defines.join("\n"):this.options.defines;this._postConstructor(this.options.blockCompilation,Y,this.options.extraInitializations)}_gatherImports(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Y=arguments.length>1?arguments[1]:void 0;this.options.useAsPostProcess&&(K&&this._webGPUReady?Y.push(Promise.all([l.e(36).then(l.bind(l,12979))])):Y.push(Promise.all([Promise.resolve().then(l.bind(l,2340))])))}_postConstructor(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2?arguments[2]:void 0,v=arguments.length>3?arguments[3]:void 0;this._importPromises.length=0,v&&this._importPromises.push(...v);const U=this.options.Ii.isWebGPU&&!m.ForceGLSL;this._gatherImports(U,this._importPromises),void 0!==l&&l(U,this._importPromises),U&&this._webGPUReady&&(this.options.shaderLanguage=1),K||this.updateEffect(Y)}updateEffect(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3?arguments[3]:void 0,U=arguments.length>4?arguments[4]:void 0,d=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0,t=arguments.length>7?arguments[7]:void 0;const Z=m._GetShaderCodeProcessing(this.name);if(null!==Z&&void 0!==Z&&Z.defineCustomBindings){var V,M;const v=(null===(V=Y)||void 0===V?void 0:V.slice())??[];v.push(...this.options.uniforms);const U=(null===(M=l)||void 0===M?void 0:M.slice())??[];U.push(...this.options.samplers),K=Z.defineCustomBindings(this.name,K,v,U),Y=v,l=U}this.options.defines=K||"";const u=this._shadersLoaded||0===this._importPromises.length?void 0:async()=>{await Promise.all(this._importPromises),this._shadersLoaded=!0};let o;o=this.options.extraInitializationsAsync?async()=>{null===u||void 0===u||u(),await this.options.extraInitializationsAsync}:u,this.options.useShaderStore?this._drawWrapper.effect=this.options.Ii.createEffect({vertex:c??this._shaderPath.vertex,fragment:t??this._shaderPath.fragment},{attributes:this.options.attributeNames,uniformsNames:Y||this.options.uniforms,uniformBuffersNames:this.options.uniformBuffers,samplers:l||this.options.samplers,defines:null!==K?K:"",fallbacks:null,onCompiled:U??this.options.onCompiled,onError:d??null,indexParameters:v||this.options.indexParameters,processCodeAfterIncludes:null!==Z&&void 0!==Z&&Z.processCodeAfterIncludes?(K,Y)=>Z.processCodeAfterIncludes(this.name,K,Y):null,processFinalCode:null!==Z&&void 0!==Z&&Z.processFinalCode?(K,Y)=>Z.processFinalCode(this.name,K,Y):null,shaderLanguage:this.options.shaderLanguage,extraInitializationsAsync:o},this.options.Ii):this._drawWrapper.effect=new A.b(this._shaderPath,this.options.attributeNames,Y||this.options.uniforms,l||this.options.samplerNames,this.options.Ii,K,void 0,U||this.options.onCompiled,void 0,void 0,void 0,this.options.shaderLanguage,o),this.onEffectCreatedObservable.notifyObservers(this._drawWrapper.effect)}bind(){var K,Y;this.options.useAsPostProcess&&(this.options.Ii.setAlphaMode(this.alphaMode),this.drawWrapper.effect.setFloat2("scale",1,1)),null===(K=m._GetShaderCodeProcessing(this.name))||void 0===K||null===(Y=K.bindCustomBindings)||void 0===Y||Y.call(K,this.name,this._drawWrapper.effect)}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.onEffectCreatedObservable.clear(),this.effect.dispose()}}m.ForceGLSL=!1,m._CustomShaderCodeProcessing={}},2262:(K,Y,l)=>{l.d(Y,{d:()=>v.j});l(833),l(706),l(681),l(717),l(2265),l(725),l(2271);var v=l(675);l(710)},2265:(K,Y,l)=>{l.d(Y,{d:()=>c,g:()=>m,j:()=>V});var v,U=l(695),d=l(675),A=l(681);!function(K){K[K.CW=0]="CW",K[K.CCW=1]="CCW"}(v||(v={}));class c{static Interpolate(K,Y,l,v,U){const d=1-3*v+3*Y,A=3*v-6*Y,c=3*Y;let t=K;for(let Z=0;Z<5;Z++){const Y=t*t;t-=(d*(Y*t)+A*Y+c*t-K)*(1/(3*d*Y+2*A*t+c)),t=Math.min(1,Math.max(0,t))}return 3*Math.pow(1-t,2)*t*l+3*(1-t)*Math.pow(t,2)*U+Math.pow(t,3)}}class t{constructor(K){this._radians=K,this._radians<0&&(this._radians+=2*Math.PI)}degrees(){return 180*this._radians/Math.PI}radians(){return this._radians}static BetweenTwoPoints(K,Y){const l=Y.Lg(K),v=Math.atan2(l.y,l.x);return new t(v)}static BetweenTwoVectors(K,Y){let l=K.lengthSquared()*Y.lengthSquared();if(0===l)return new t(Math.PI/2);l=Math.sqrt(l);let v=K.dot(Y)/l;v=(0,U.d)(v,-1,1);const d=Math.acos(v);return new t(d)}static FromRadians(K){return new t(K)}static FromDegrees(K){return new t(K*Math.PI/180)}}class Z{constructor(K,Y,l){this.startPoint=K,this.midPoint=Y,this.endPoint=l;const v=Math.pow(Y.x,2)+Math.pow(Y.y,2),U=(Math.pow(K.x,2)+Math.pow(K.y,2)-v)/2,A=(v-Math.pow(l.x,2)-Math.pow(l.y,2))/2,c=(K.x-Y.x)*(Y.y-l.y)-(Y.x-l.x)*(K.y-Y.y);this.centerPoint=new d.m((U*(Y.y-l.y)-A*(K.y-Y.y))/c,((K.x-Y.x)*A-(Y.x-l.x)*U)/c),this.radius=this.centerPoint.Lg(this.startPoint).length(),this.startAngle=t.BetweenTwoPoints(this.centerPoint,this.startPoint);const Z=this.startAngle.degrees();let m=t.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),V=t.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();m-Z>180&&(m-=360),m-Z<-180&&(m+=360),V-m>180&&(V-=360),V-m<-180&&(V+=360),this.orientation=m-Z<0?0:1,this.angle=t.FromDegrees(0===this.orientation?Z-V:V-Z)}}class m{constructor(K,Y){this._points=new Array,this._length=0,this.closed=!1,this._points.push(new d.m(K,Y))}addLineTo(K,Y){if(this.closed)return this;const l=new d.m(K,Y),v=this._points[this._points.length-1];return this._points.push(l),this._length+=l.Lg(v).length(),this}addArcTo(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const A=this._points[this._points.length-1],c=new d.m(K,Y),t=new d.m(l,v),m=new Z(A,c,t);let V=m.angle.radians()/U;0===m.orientation&&(V*=-1);let M=m.startAngle.radians()+V;for(let d=0;d<U;d++){const K=Math.cos(M)*m.radius+m.centerPoint.x,Y=Math.sin(M)*m.radius+m.centerPoint.y;this.addLineTo(K,Y),M+=V}return this}addQuadraticCurveTo(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const d=(K,Y,l,v)=>(1-K)*(1-K)*Y+2*K*(1-K)*l+K*K*v,A=this._points[this._points.length-1];for(let c=0;c<=U;c++){const t=c/U,Z=d(t,A.x,K,l),m=d(t,A.y,Y,v);this.addLineTo(Z,m)}return this}addBezierCurveTo(K,Y,l,v,U,d){let A=arguments.length>6&&void 0!==arguments[6]?arguments[6]:36;if(this.closed)return this;const c=(K,Y,l,v,U)=>(1-K)*(1-K)*(1-K)*Y+3*K*(1-K)*(1-K)*l+3*K*K*(1-K)*v+K*K*K*U,t=this._points[this._points.length-1];for(let Z=0;Z<=A;Z++){const m=Z/A,V=c(m,t.x,K,l,U),M=c(m,t.y,Y,v,d);this.addLineTo(V,M)}return this}isPointInside(K){let Y=!1;const l=this._points.length;for(let v=l-1,U=0;U<l;v=U++){let l=this._points[v],d=this._points[U],A=d.x-l.x,c=d.y-l.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(l=this._points[U],A=-A,d=this._points[v],c=-c),K.y<l.y||K.y>d.y)continue;if(K.y===l.y&&K.x===l.x)return!0;{const v=c*(K.x-l.x)-A*(K.y-l.y);if(0===v)return!0;if(v<0)continue;Y=!Y}}else{if(K.y!==l.y)continue;if(d.x<=K.x&&K.x<=l.x||l.x<=K.x&&K.x<=d.x)return!0}}return Y}close(){return this.closed=!0,this}length(){let K=this._length;if(this.closed){const Y=this._points[this._points.length-1];K+=this._points[0].Lg(Y).length()}return K}area(){const K=this._points.length;let Y=0;for(let l=K-1,v=0;v<K;l=v++)Y+=this._points[l].x*this._points[v].y-this._points[v].x*this._points[l].y;return.5*Y}getPoints(){return this._points}getPointAtLengthPosition(K){if(K<0||K>1)return d.m.Zero();const Y=K*this.length();let l=0;for(let v=0;v<this._points.length;v++){const K=(v+1)%this._points.length,U=this._points[v],A=this._points[K].Lg(U),c=A.length()+l;if(Y>=l&&Y<=c){const K=A.normalize(),v=Y-l;return new d.m(U.x+K.x*v,U.y+K.y*v)}l=c}return d.m.Zero()}static StartingAt(K,Y){return new m(K,Y)}}class V{constructor(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2?arguments[2]:void 0,v=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.path=K,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array,this._pointAtData={id:0,point:d.o.Zero(),previousPointArrayIndex:0,position:0,subPosition:0,interpolateReady:!1,interpolationMatrix:d.d.Identity()};for(let U=0;U<K.length;U++)this._curve[U]=K[U].clone();this._raw=l||!1,this._alignTangentsWithPath=v,this._compute(Y,v)}getCurve(){return this._curve}getPoints(){return this._curve}length(){return this._distances[this._distances.length-1]}getTangents(){return this._tangents}getNormals(){return this._normals}getBinormals(){return this._binormals}getDistances(){return this._distances}getPointAt(K){return this._updatePointAtData(K).point}getTangentAt(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(K,Y),Y?d.o.TransformCoordinates(d.o.Forward(),this._pointAtData.interpolationMatrix):this._tangents[this._pointAtData.previousPointArrayIndex]}getNormalAt(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(K,Y),Y?d.o.TransformCoordinates(d.o.Right(),this._pointAtData.interpolationMatrix):this._normals[this._pointAtData.previousPointArrayIndex]}getBinormalAt(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(K,Y),Y?d.o.TransformCoordinates(d.o.UpReadOnly,this._pointAtData.interpolationMatrix):this._binormals[this._pointAtData.previousPointArrayIndex]}getDistanceAt(K){return this.length()*K}getPreviousPointIndexAt(K){return this._updatePointAtData(K),this._pointAtData.previousPointArrayIndex}getSubPositionAt(K){return this._updatePointAtData(K),this._pointAtData.subPosition}getClosestPositionTo(K){let Y=Number.MAX_VALUE,l=0;for(let v=0;v<this._curve.length-1;v++){const U=this._curve[v+0],A=this._curve[v+1].Lg(U).normalize(),c=this._distances[v+1]-this._distances[v+0],t=Math.min(Math.max(d.o.Dot(A,K.Lg(U).normalize()),0)*d.o.Distance(U,K)/c,1),Z=d.o.Distance(U.add(A.scale(t*c)),K);Z<Y&&(Y=Z,l=(this._distances[v+0]+c*t)/this.length())}return l}slice(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(K<0&&(K=1- -1*K%1),Y<0&&(Y=1- -1*Y%1),K>Y){const l=K;K=Y,Y=l}const l=this.getCurve(),v=this.getPointAt(K);let U=this.getPreviousPointIndexAt(K);const d=this.getPointAt(Y),A=this.getPreviousPointIndexAt(Y)+1,c=[];return 0!==K&&(U++,c.push(v)),c.push(...l.slice(U,A)),1===Y&&1!==K||c.push(d),new V(c,this.getNormalAt(K),this._raw,this._alignTangentsWithPath)}update(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(let v=0;v<K.length;v++)this._curve[v].x=K[v].x,this._curve[v].y=K[v].y,this._curve[v].z=K[v].z;return this._compute(Y,l),this}_compute(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const l=this._curve.length;if(l<2)return;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[l-1]=this._curve[l-1].Lg(this._curve[l-2]),this._raw||this._tangents[l-1].normalize();const v=this._tangents[0],U=this._normalVector(v,K);let A,c,t,Z,m;this._normals[0]=U,this._raw||this._normals[0].normalize(),this._binormals[0]=d.o.Cross(v,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(let V=1;V<l;V++)A=this._getLastNonNullVector(V),V<l-1&&(c=this._getFirstNonNullVector(V),this._tangents[V]=Y?c:A.add(c),this._tangents[V].normalize()),this._distances[V]=this._distances[V-1]+this._curve[V].Lg(this._curve[V-1]).length(),t=this._tangents[V],m=this._binormals[V-1],this._normals[V]=d.o.Cross(m,t),this._raw||(0===this._normals[V].length()?(Z=this._normals[V-1],this._normals[V]=Z.clone()):this._normals[V].normalize()),this._binormals[V]=d.o.Cross(t,this._normals[V]),this._raw||this._binormals[V].normalize();this._pointAtData.id=NaN}_getFirstNonNullVector(K){let Y=1,l=this._curve[K+Y].Lg(this._curve[K]);for(;0===l.length()&&K+Y+1<this._curve.length;)Y++,l=this._curve[K+Y].Lg(this._curve[K]);return l}_getLastNonNullVector(K){let Y=1,l=this._curve[K].Lg(this._curve[K-Y]);for(;0===l.length()&&K>Y+1;)Y++,l=this._curve[K].Lg(this._curve[K-Y]);return l}_normalVector(K,Y){let l,v=K.length();if(0===v&&(v=1),void 0===Y||null===Y){let Y;Y=(0,U.w)(Math.abs(K.y)/v,1,A.d)?(0,U.w)(Math.abs(K.x)/v,1,A.d)?(0,U.w)(Math.abs(K.z)/v,1,A.d)?d.o.Zero():new d.o(0,0,1):new d.o(1,0,0):new d.o(0,-1,0),l=d.o.Cross(K,Y)}else l=d.o.Cross(K,Y),d.o.CrossToRef(l,K,l);return l.normalize(),l}_updatePointAtData(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._pointAtData.id===K)return this._pointAtData.interpolateReady||this._updateInterpolationMatrix(),this._pointAtData;this._pointAtData.id=K;const l=this.getPoints();if(K<=0)return this._setPointAtData(0,0,l[0],0,Y);if(K>=1)return this._setPointAtData(1,1,l[l.length-1],l.length-1,Y);let v,U=l[0],A=0;const c=K*this.length();for(let t=1;t<l.length;t++){v=l[t];const Z=d.o.Distance(U,v);if(A+=Z,A===c)return this._setPointAtData(K,1,v,t,Y);if(A>c){const l=(A-c)/Z,d=U.Lg(v),m=v.add(d.scaleInPlace(l));return this._setPointAtData(K,1-l,m,t-1,Y)}U=v}return this._pointAtData}_setPointAtData(K,Y,l,v,U){return this._pointAtData.point=l,this._pointAtData.position=K,this._pointAtData.subPosition=Y,this._pointAtData.previousPointArrayIndex=v,this._pointAtData.interpolateReady=U,U&&this._updateInterpolationMatrix(),this._pointAtData}_updateInterpolationMatrix(){this._pointAtData.interpolationMatrix=d.d.Identity();const K=this._pointAtData.previousPointArrayIndex;if(K!==this._tangents.length-1){const Y=K+1,l=this._tangents[K].clone(),v=this._normals[K].clone(),U=this._binormals[K].clone(),A=this._tangents[Y].clone(),c=this._normals[Y].clone(),t=this._binormals[Y].clone(),Z=d.h.RotationQuaternionFromAxis(v,U,l),m=d.h.RotationQuaternionFromAxis(c,t,A);d.h.Slerp(Z,m,this._pointAtData.subPosition).toRotationMatrix(this._pointAtData.interpolationMatrix)}}}},2259:(K,Y,l)=>{l.d(Y,{c:()=>Z,f:()=>m});var v=l(675),U=l(2262);const d=[Math.sqrt(1/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(3/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(15/(4*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(5/(16*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(15/(16*Math.PI))],A=[()=>1,K=>K.y,K=>K.z,K=>K.x,K=>K.x*K.y,K=>K.y*K.z,K=>3*K.z*K.z-1,K=>K.x*K.z,K=>K.x*K.x-K.y*K.y],c=(K,Y)=>d[K]*A[K](Y),t=[Math.PI,2*Math.PI/3,2*Math.PI/3,2*Math.PI/3,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4];class Z{constructor(){this.preScaled=!1,this.l00=v.o.Zero(),this.l1_1=v.o.Zero(),this.l10=v.o.Zero(),this.l11=v.o.Zero(),this.l2_2=v.o.Zero(),this.l2_1=v.o.Zero(),this.l20=v.o.Zero(),this.l21=v.o.Zero(),this.l22=v.o.Zero()}addLight(K,Y,l){U.d.Qi[0].set(Y.r,Y.g,Y.b);const v=U.d.Qi[0],d=U.d.Qi[1];v.scaleToRef(l,d),d.scaleToRef(c(0,K),U.d.Qi[2]),this.l00.addInPlace(U.d.Qi[2]),d.scaleToRef(c(1,K),U.d.Qi[2]),this.l1_1.addInPlace(U.d.Qi[2]),d.scaleToRef(c(2,K),U.d.Qi[2]),this.l10.addInPlace(U.d.Qi[2]),d.scaleToRef(c(3,K),U.d.Qi[2]),this.l11.addInPlace(U.d.Qi[2]),d.scaleToRef(c(4,K),U.d.Qi[2]),this.l2_2.addInPlace(U.d.Qi[2]),d.scaleToRef(c(5,K),U.d.Qi[2]),this.l2_1.addInPlace(U.d.Qi[2]),d.scaleToRef(c(6,K),U.d.Qi[2]),this.l20.addInPlace(U.d.Qi[2]),d.scaleToRef(c(7,K),U.d.Qi[2]),this.l21.addInPlace(U.d.Qi[2]),d.scaleToRef(c(8,K),U.d.Qi[2]),this.l22.addInPlace(U.d.Qi[2])}scaleInPlace(K){this.l00.scaleInPlace(K),this.l1_1.scaleInPlace(K),this.l10.scaleInPlace(K),this.l11.scaleInPlace(K),this.l2_2.scaleInPlace(K),this.l2_1.scaleInPlace(K),this.l20.scaleInPlace(K),this.l21.scaleInPlace(K),this.l22.scaleInPlace(K)}convertIncidentRadianceToIrradiance(){this.l00.scaleInPlace(t[0]),this.l1_1.scaleInPlace(t[1]),this.l10.scaleInPlace(t[2]),this.l11.scaleInPlace(t[3]),this.l2_2.scaleInPlace(t[4]),this.l2_1.scaleInPlace(t[5]),this.l20.scaleInPlace(t[6]),this.l21.scaleInPlace(t[7]),this.l22.scaleInPlace(t[8])}convertIrradianceToLambertianRadiance(){this.scaleInPlace(1/Math.PI)}preScaleForRendering(){this.preScaled=!0,this.l00.scaleInPlace(d[0]),this.l1_1.scaleInPlace(d[1]),this.l10.scaleInPlace(d[2]),this.l11.scaleInPlace(d[3]),this.l2_2.scaleInPlace(d[4]),this.l2_1.scaleInPlace(d[5]),this.l20.scaleInPlace(d[6]),this.l21.scaleInPlace(d[7]),this.l22.scaleInPlace(d[8])}updateFromArray(K){return v.o.FromArrayToRef(K[0],0,this.l00),v.o.FromArrayToRef(K[1],0,this.l1_1),v.o.FromArrayToRef(K[2],0,this.l10),v.o.FromArrayToRef(K[3],0,this.l11),v.o.FromArrayToRef(K[4],0,this.l2_2),v.o.FromArrayToRef(K[5],0,this.l2_1),v.o.FromArrayToRef(K[6],0,this.l20),v.o.FromArrayToRef(K[7],0,this.l21),v.o.FromArrayToRef(K[8],0,this.l22),this}updateFromFloatsArray(K){return v.o.FromFloatsToRef(K[0],K[1],K[2],this.l00),v.o.FromFloatsToRef(K[3],K[4],K[5],this.l1_1),v.o.FromFloatsToRef(K[6],K[7],K[8],this.l10),v.o.FromFloatsToRef(K[9],K[10],K[11],this.l11),v.o.FromFloatsToRef(K[12],K[13],K[14],this.l2_2),v.o.FromFloatsToRef(K[15],K[16],K[17],this.l2_1),v.o.FromFloatsToRef(K[18],K[19],K[20],this.l20),v.o.FromFloatsToRef(K[21],K[22],K[23],this.l21),v.o.FromFloatsToRef(K[24],K[25],K[26],this.l22),this}static yi(K){return(new Z).updateFromArray(K)}static FromPolynomial(K){const Y=new Z;return Y.l00=K.xx.scale(.376127).add(K.yy.scale(.376127)).add(K.zz.scale(.376126)),Y.l1_1=K.y.scale(.977204),Y.l10=K.z.scale(.977204),Y.l11=K.x.scale(.977204),Y.l2_2=K.xy.scale(1.16538),Y.l2_1=K.yz.scale(1.16538),Y.l20=K.zz.scale(1.34567).Lg(K.xx.scale(.672834)).Lg(K.yy.scale(.672834)),Y.l21=K.zx.scale(1.16538),Y.l22=K.xx.scale(1.16538).Lg(K.yy.scale(1.16538)),Y.l1_1.scaleInPlace(-1),Y.l11.scaleInPlace(-1),Y.l2_1.scaleInPlace(-1),Y.l21.scaleInPlace(-1),Y.scaleInPlace(Math.PI),Y}}class m{constructor(){this.x=v.o.Zero(),this.y=v.o.Zero(),this.z=v.o.Zero(),this.xx=v.o.Zero(),this.yy=v.o.Zero(),this.zz=v.o.Zero(),this.xy=v.o.Zero(),this.yz=v.o.Zero(),this.zx=v.o.Zero()}get preScaledHarmonics(){return this._harmonics||(this._harmonics=Z.FromPolynomial(this)),this._harmonics.preScaled||this._harmonics.preScaleForRendering(),this._harmonics}addAmbient(K){U.d.Qi[0].mi(K.r,K.g,K.b);const Y=U.d.Qi[0];this.xx.addInPlace(Y),this.yy.addInPlace(Y),this.zz.addInPlace(Y)}scaleInPlace(K){this.x.scaleInPlace(K),this.y.scaleInPlace(K),this.z.scaleInPlace(K),this.xx.scaleInPlace(K),this.yy.scaleInPlace(K),this.zz.scaleInPlace(K),this.yz.scaleInPlace(K),this.zx.scaleInPlace(K),this.xy.scaleInPlace(K)}updateFromHarmonics(K){return this._harmonics=K,this.x.p(K.l11),this.x.scaleInPlace(1.02333).scaleInPlace(-1),this.y.p(K.l1_1),this.y.scaleInPlace(1.02333).scaleInPlace(-1),this.z.p(K.l10),this.z.scaleInPlace(1.02333),this.xx.p(K.l00),U.d.Qi[0].p(K.l20).scaleInPlace(.247708),U.d.Qi[1].p(K.l22).scaleInPlace(.429043),this.xx.scaleInPlace(.886277).Pi(U.d.Qi[0]).addInPlace(U.d.Qi[1]),this.yy.p(K.l00),this.yy.scaleInPlace(.886277).Pi(U.d.Qi[0]).Pi(U.d.Qi[1]),this.zz.p(K.l00),U.d.Qi[0].p(K.l20).scaleInPlace(.495417),this.zz.scaleInPlace(.886277).addInPlace(U.d.Qi[0]),this.yz.p(K.l2_1),this.yz.scaleInPlace(.858086).scaleInPlace(-1),this.zx.p(K.l21),this.zx.scaleInPlace(.858086).scaleInPlace(-1),this.xy.p(K.l2_2),this.xy.scaleInPlace(.858086),this.scaleInPlace(1/Math.PI),this}static FromHarmonics(K){return(new m).updateFromHarmonics(K)}static yi(K){const Y=new m;return v.o.FromArrayToRef(K[0],0,Y.x),v.o.FromArrayToRef(K[1],0,Y.y),v.o.FromArrayToRef(K[2],0,Y.z),v.o.FromArrayToRef(K[3],0,Y.xx),v.o.FromArrayToRef(K[4],0,Y.yy),v.o.FromArrayToRef(K[5],0,Y.zz),v.o.FromArrayToRef(K[6],0,Y.yz),v.o.FromArrayToRef(K[7],0,Y.zx),v.o.FromArrayToRef(K[8],0,Y.xy),Y}}},2285:(K,Y,l)=>{l.d(Y,{c:()=>Z});var v=l(675),U=l(695),d=l(2259),A=l(681),c=l(706);class t{constructor(K,Y,l,v){this.name=K,this.worldAxisForNormal=Y,this.worldAxisForFileX=l,this.worldAxisForFileY=v}}class Z{static ConvertCubeMapTextureToSphericalPolynomial(K){var Y;if(!K.isCube)return null;null===(Y=K.va())||void 0===Y||Y.getEngine().flushFramebuffer();const l=K.getSize().width,v=K.readPixels(0,void 0,void 0,!1),U=K.readPixels(1,void 0,void 0,!1);let d,A;K.isRenderTarget?(d=K.readPixels(3,void 0,void 0,!1),A=K.readPixels(2,void 0,void 0,!1)):(d=K.readPixels(2,void 0,void 0,!1),A=K.readPixels(3,void 0,void 0,!1));const c=K.readPixels(4,void 0,void 0,!1),t=K.readPixels(5,void 0,void 0,!1),Z=K.gammaSpace;let m=0;return 1!=K.textureType&&2!=K.textureType||(m=1),new Promise((K=>{Promise.all([U,v,d,A,c,t]).then((Y=>{let[v,U,d,A,c,t]=Y;const V={size:l,right:U,left:v,up:d,down:A,front:c,back:t,format:5,type:m,gammaSpace:Z};K(this.ConvertCubeMapToSphericalPolynomial(V))}))}))}static _AreaElement(K,Y){return Math.atan2(K*Y,Math.sqrt(K*K+Y*Y+1))}static ConvertCubeMapToSphericalPolynomial(K){const Y=new d.c;let l=0;const v=2/K.size,t=v,Z=.5*v,m=Z-1;for(let d=0;d<6;d++){const V=this._FileFaces[d],M=K[V.name];let u=m;const o=5===K.format?4:3;for(let d=0;d<K.size;d++){let W=m;for(let t=0;t<K.size;t++){const m=V.worldAxisForFileX.scale(W).add(V.worldAxisForFileY.scale(u)).add(V.worldAxisForNormal);m.normalize();const g=this._AreaElement(W-Z,u-Z)-this._AreaElement(W-Z,u+Z)-this._AreaElement(W+Z,u-Z)+this._AreaElement(W+Z,u+Z);let J=M[d*K.size*o+t*o+0],n=M[d*K.size*o+t*o+1],R=M[d*K.size*o+t*o+2];isNaN(J)&&(J=0),isNaN(n)&&(n=0),isNaN(R)&&(R=0),0===K.type&&(J/=255,n/=255,R/=255),K.gammaSpace&&(J=Math.pow((0,U.d)(J),A.n),n=Math.pow((0,U.d)(n),A.n),R=Math.pow((0,U.d)(R),A.n));const H=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const K=Math.max(J,n,R);if(K>H){const Y=H/K;J*=Y,n*=Y,R*=Y}}else J=(0,U.d)(J,0,H),n=(0,U.d)(n,0,H),R=(0,U.d)(R,0,H);const z=new c.e(J,n,R);Y.addLight(m,z,g),l+=g,W+=v}u+=t}}const V=6*(4*Math.PI)/6/l;return Y.scaleInPlace(V),Y.convertIncidentRadianceToIrradiance(),Y.convertIrradianceToLambertianRadiance(),d.f.FromHarmonics(Y)}}Z._FileFaces=[new t("right",new v.o(1,0,0),new v.o(0,0,-1),new v.o(0,-1,0)),new t("left",new v.o(-1,0,0),new v.o(0,0,1),new v.o(0,-1,0)),new t("up",new v.o(0,1,0),new v.o(1,0,0),new v.o(0,0,1)),new t("down",new v.o(0,-1,0),new v.o(1,0,0),new v.o(0,0,-1)),new t("front",new v.o(0,0,1),new v.o(1,0,0),new v.o(0,-1,0)),new t("back",new v.o(0,0,-1),new v.o(-1,0,0),new v.o(0,-1,0))],Z.MAX_HDRI_VALUE=4096,Z.PRESERVE_CLAMPED_COLORS=!1},2294:(K,Y,l)=>{l.d(Y,{c:()=>t,e:()=>M,g:()=>V});l(2299),l(2310);var v=l(2322),U=l(567),d=l(619),A=l(702);class c extends v.c{getClassName(){return"PassPostProcess"}constructor(K,Y){super(K,"pass",null,null,Y,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0,arguments.length>5?arguments[5]:void 0,void 0,arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,void 0,null,arguments.length>7&&void 0!==arguments[7]&&arguments[7])}_gatherImports(K,Y){K?(this._webGPUReady=!0,Y.push(Promise.all([l.e(32).then(l.bind(l,12953))]))):Y.push(Promise.all([l.e(33).then(l.bind(l,12955))])),super._gatherImports(K,Y)}static _Parse(K,Y,l,v){return A.c.Parse((()=>new c(K.name,K.options,Y,K.renderTargetSamplingMode,K._engine,K.reusable)),K,l,v)}}(0,d.f)("BABYLON.PassPostProcess",c);v.c;function t(K,Y,l,U,d,A,c,t){const Z=Y.getEngine();return Y.isReady=!1,d=d??Y.samplingMode,U=U??Y.type,A=A??Y.format,c=c??Y.width,t=t??Y.height,-1===U&&(U=0),new Promise((m=>{const V=new v.c("postprocess",K,null,null,1,null,d,Z,!1,void 0,U,void 0,null,!1,A);V.externalTextureSamplerBinding=!0;const M=Z.createRenderTargetTexture({width:c,height:t},{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:d,type:U,format:A});V.onEffectCreatedObservable.addOnce((K=>{K.executeWhenCompiled((()=>{V.onApply=K=>{K._bindTexture("textureSampler",Y),K.setFloat2("scale",1,1)},l.postProcessManager.directRender([V],M,!0),Z.restoreDefaultFramebuffer(),Z._releaseTexture(Y),V&&V.dispose(),M._swapAndDie(Y),Y.type=U,Y.format=5,Y.isReady=!0,m(Y)}))}))}))}let Z,m;function V(K){Z||(Z=new Float32Array(1),m=new Int32Array(Z.buffer)),Z[0]=K;const Y=m[0];let l=Y>>16&32768,v=Y>>12&2047;const U=Y>>23&255;return U<103?l:U>142?(l|=31744,l|=(255==U?0:1)&&8388607&Y,l):U<113?(v|=2048,l|=(v>>114-U)+(v>>113-U&1),l):(l|=U-112<<10|v>>1,l+=1&v,l)}function M(K){const Y=(32768&K)>>15,l=(31744&K)>>10,v=1023&K;return 0===l?(Y?-1:1)*Math.pow(2,-14)*(v/Math.pow(2,10)):31==l?v?NaN:1/0*(Y?-1:1):(Y?-1:1)*Math.pow(2,l-15)*(1+v/Math.pow(2,10))}U.b._RescalePostProcessFactory=K=>new c("rescale",1,null,2,K,!1,0)},2322:(K,Y,l)=>{l.d(Y,{c:()=>o});var v=l(646),U=l(668),d=l(469),A=l(675),c=l(569),t=l(652),Z=l(702),m=l(619),V=l(567),M=l(627),u=l(2331);V.b.prototype.setTextureFromPostProcess=function(K,Y,l){var v;let U=null;Y&&(Y._forcedOutputTexture?U=Y._forcedOutputTexture:Y._textures.data[Y._currentRenderTextureInd]&&(U=Y._textures.data[Y._currentRenderTextureInd])),this._bindTexture(K,(null===(v=U)||void 0===v?void 0:v.texture)??null,l)},V.b.prototype.setTextureFromPostProcessOutput=function(K,Y,l){var v;this._bindTexture(K,(null===Y||void 0===Y||null===(v=Y._outputTexture)||void 0===v?void 0:v.texture)??null,l)},c.b.prototype.setTextureFromPostProcess=function(K,Y){this._engine.setTextureFromPostProcess(this._samplers[K],Y,K)},c.b.prototype.setTextureFromPostProcessOutput=function(K,Y){this._engine.setTextureFromPostProcessOutput(this._samplers[K],Y,K)};class o{static get ForceGLSL(){return u.f.ForceGLSL}static set ForceGLSL(K){u.f.ForceGLSL=K}static RegisterShaderCodeProcessing(K,Y){u.f.RegisterShaderCodeProcessing(K,Y)}get name(){return this._effectWrapper.name}set name(K){this._effectWrapper.name=K}get alphaMode(){return this._effectWrapper.alphaMode}set alphaMode(K){this._effectWrapper.alphaMode=K}get samples(){return this._samples}set samples(K){this._samples=Math.min(K,this._engine.getCaps().maxMSAASamples),this._textures.forEach((K=>{K.setSamples(this._samples)}))}get shaderLanguage(){return this._shaderLanguage}getEffectName(){return this._fragmentUrl}set onActivate(K){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),K&&(this._onActivateObserver=this.onActivateObservable.add(K))}set onSizeChanged(K){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(K)}set onApply(K){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(K)}set onBeforeRender(K){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(K)}set onAfterRender(K){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(K)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(K){this._forcedOutputTexture=K}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.mi(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}constructor(K,Y,l,v,c,t){var Z;let m=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,V=arguments.length>7?arguments[7]:void 0,M=arguments.length>8?arguments[8]:void 0,W=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null,g=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,J=arguments.length>11&&void 0!==arguments[11]?arguments[11]:"postprocess",n=arguments.length>12?arguments[12]:void 0,R=arguments.length>13&&void 0!==arguments[13]&&arguments[13],H=arguments.length>14&&void 0!==arguments[14]?arguments[14]:5,z=arguments.length>15?arguments[15]:void 0,r=arguments.length>16?arguments[16]:void 0;this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.El=!0,this.forceAutoClearInAlphaMode=!1,this.animations=[],this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._webGPUReady=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new U.c(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new A.m(1,1),this._texelSize=A.m.Zero(),this.onActivateObservable=new d.b,this.onSizeChangedObservable=new d.b,this.onApplyObservable=new d.b,this.onBeforeRenderObservable=new d.b,this.onAfterRenderObservable=new d.b;let E,y=1,T=null;if(l&&!Array.isArray(l)){const K=l;l=K.uniforms??null,v=K.samplers??null,y=K.size??1,t=K.camera??null,m=K.samplingMode??1,V=K.Ii,M=K.reusable,W=Array.isArray(K.defines)?K.defines.join("\n"):K.defines??null,g=K.textureType??0,J=K.vertexUrl??"postprocess",n=K.indexParameters,R=K.blockCompilation??!1,H=K.textureFormat??5,z=K.shaderLanguage??0,T=K.uniformBuffers??null,r=K.extraInitializations,E=K.effectWrapper}else c&&(y="number"===typeof c?c:{width:c.width,height:c.height});const e=!!E;if(this._effectWrapper=E??new u.f({name:K,useShaderStore:!0,useAsPostProcess:!0,fragmentShader:Y,Ii:V||(null===(Z=t)||void 0===Z?void 0:Z.va().getEngine()),uniforms:l,samplers:v,uniformBuffers:T,defines:W,vertexUrl:J,indexParameters:n,blockCompilation:R,shaderLanguage:z,extraInitializations:r}),this.name=K,this.onEffectCreatedObservable=this._effectWrapper.onEffectCreatedObservable,null!=t?(this._camera=t,this._scene=t.va(),t.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):V&&(this._engine=V,this._engine.postProcesses.push(this)),this._options=y,this.renderTargetSamplingMode=m||1,this._reusable=M||!1,this._textureType=g,this._textureFormat=H,this._shaderLanguage=z||0,this._samplers=v||[],-1===this._samplers.indexOf("textureSampler")&&this._samplers.push("textureSampler"),this._fragmentUrl=Y,this._vertexUrl=J,this._parameters=l||[],-1===this._parameters.indexOf("scale")&&this._parameters.push("scale"),this._uniformBuffers=T||[],this._indexParameters=n,!e){this._webGPUReady=1===this._shaderLanguage;const K=[];this._gatherImports(this._engine.isWebGPU&&!o.ForceGLSL,K),this._effectWrapper._webGPUReady=this._webGPUReady,this._effectWrapper._postConstructor(R,W,r,K)}}_gatherImports(){let K=arguments.length>1?arguments[1]:void 0;arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&this._webGPUReady?K.push(Promise.all([l.e(36).then(l.bind(l,12979))])):K.push(Promise.all([Promise.resolve().then(l.bind(l,2340))]))}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._effectWrapper.drawWrapper.effect}shareOutputWith(K){return this._disposeTextures(),this._shareOutputWithPostProcess=K,this}useOwnOutput(){0==this._textures.length&&(this._textures=new U.c(2)),this._shareOutputWithPostProcess=null}updateEffect(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3?arguments[3]:void 0,U=arguments.length>4?arguments[4]:void 0,d=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0,c=arguments.length>7?arguments[7]:void 0;this._effectWrapper.updateEffect(K,Y,l,v,U,d,A,c),this._postProcessDefines=Array.isArray(this._effectWrapper.options.defines)?this._effectWrapper.options.defines.join("\n"):this._effectWrapper.options.defines}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;for(let U=0;U<this._textureCache.length;U++)if(this._textureCache[U].texture.width===K.width&&this._textureCache[U].texture.height===K.height&&this._textureCache[U].postProcessChannel===l&&this._textureCache[U].texture._generateDepthBuffer===Y.generateDepthBuffer&&this._textureCache[U].texture.samples===Y.samples)return this._textureCache[U].texture;const v=this._engine.createRenderTargetTexture(K,Y);return this._textureCache.push({texture:v,postProcessChannel:l,lastUsedRenderId:-1}),v}_flushTextureCache(){const K=this._renderId;for(let Y=this._textureCache.length-1;Y>=0;Y--)if(K-this._textureCache[Y].lastUsedRenderId>100){let K=!1;for(let l=0;l<this._textures.length;l++)if(this._textures.data[l]===this._textureCache[Y].texture){K=!0;break}K||(this._textureCache[Y].texture.dispose(),this._textureCache.splice(Y,1))}}resize(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3&&void 0!==arguments[3]&&arguments[3],U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this._textures.length>0&&this._textures.reset(),this.width=K,this.height=Y;let d=null;if(l)for(let t=0;t<l._postProcesses.length;t++)if(null!==l._postProcesses[t]){d=l._postProcesses[t];break}const A={width:this.width,height:this.height},c={generateMipMaps:v,generateDepthBuffer:U||d===this,generateStencilBuffer:(U||d===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples,label:"PostProcessRTT-"+this.name};this._textures.push(this._createRenderTargetTexture(A,c,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(A,c,1)),this._texelSize.mi(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}_getTarget(){let K;if(this._shareOutputWithPostProcess)K=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)K=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{let Y;K=this.inputTexture;for(let l=0;l<this._textureCache.length;l++)if(this._textureCache[l].texture===K){Y=this._textureCache[l];break}Y&&(Y.lastUsedRenderId=this._renderId)}return K}activate(K){var Y,l;let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,U=arguments.length>2?arguments[2]:void 0;const d=(K=K||this._camera).va(),A=d.getEngine(),c=A.getCaps().maxTextureSize,t=(v?v.width:this._engine.getRenderWidth(!0))*this._options|0,Z=(v?v.height:this._engine.getRenderHeight(!0))*this._options|0;let m=this._options.width||t,V=this._options.height||Z;const u=7!==this.renderTargetSamplingMode&&1!==this.renderTargetSamplingMode&&2!==this.renderTargetSamplingMode;let o=null;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const K=A.currentViewport;K&&(m*=K.width,V*=K.height)}(u||this.alwaysForcePOT)&&(this._options.width||(m=A.needPOTTextures?(0,M.e)(m,c,this.scaleMode):m),this._options.height||(V=A.needPOTTextures?(0,M.e)(V,c,this.scaleMode):V)),this.width===m&&this.height===V&&(o=this._getTarget())||this.resize(m,V,K,u,U),this._textures.forEach((K=>{K.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(K,this.samples)})),this._flushTextureCache(),this._renderId++}return o||(o=this._getTarget()),this.enablePixelPerfectMode?(this._scaleRatio.mi(t/m,Z/V),this._engine.bindFramebuffer(o,0,t,Z,this.forceFullscreenViewport)):(this._scaleRatio.mi(1,1),this._engine.bindFramebuffer(o,0,void 0,void 0,this.forceFullscreenViewport)),null===(Y=(l=this._engine)._debugInsertMarker)||void 0===Y||Y.call(l,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(K),this.El&&(0===this.alphaMode||this.forceAutoClearInAlphaMode)&&this._engine.clear(this.clearColor?this.clearColor:d.clearColor,d._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),o}get isSupported(){return this._effectWrapper.drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){return this._effectWrapper.isReady()}apply(){if(!this._effectWrapper.isReady())return null;let K;var Y;(this._engine.enableEffect(this._effectWrapper.drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a),K=this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?this._forcedOutputTexture:this.inputTexture,this.externalTextureSamplerBinding)||this._effectWrapper.drawWrapper.effect._bindTexture("textureSampler",null===(Y=K)||void 0===Y?void 0:Y.texture);return this._effectWrapper.drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._effectWrapper.drawWrapper.effect),this._effectWrapper.bind(),this._effectWrapper.drawWrapper.effect}_disposeTextures(){this._shareOutputWithPostProcess||this._forcedOutputTexture?this._disposeTextureCache():(this._disposeTextureCache(),this._textures.dispose())}_disposeTextureCache(){for(let K=this._textureCache.length-1;K>=0;K--)this._textureCache[K].texture.dispose();this._textureCache.length=0}setPrePassRenderer(K){return!!this._prePassEffectConfiguration&&(this._prePassEffectConfiguration=K.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0)}dispose(K){let Y;if(K=K||this._camera,this._disposeTextures(),this._scene&&(Y=this._scene.postProcesses.indexOf(this),-1!==Y&&this._scene.postProcesses.splice(Y,1)),this._parentContainer){const K=this._parentContainer.postProcesses.indexOf(this);K>-1&&this._parentContainer.postProcesses.splice(K,1),this._parentContainer=null}if(Y=this._engine.postProcesses.indexOf(this),-1!==Y&&this._engine.postProcesses.splice(Y,1),K){if(K.detachPostProcess(this),Y=K._postProcesses.indexOf(this),0===Y&&K._postProcesses.length>0){const K=this._camera._getFirstPostProcess();K&&K.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear(),this.onEffectCreatedObservable.clear()}}serialize(){const K=Z.c.Serialize(this),Y=this.getCamera()||this._scene&&this._scene.activeCamera;return K.customType="BABYLON."+this.getClassName(),K.cameraId=Y?Y.id:null,K.reusable=this._reusable,K.textureType=this._textureType,K.fragmentUrl=this._fragmentUrl,K.parameters=this._parameters,K.samplers=this._samplers,K.uniformBuffers=this._uniformBuffers,K.options=this._options,K.defines=this._postProcessDefines,K.textureFormat=this._textureFormat,K.vertexUrl=this._vertexUrl,K.indexParameters=this._indexParameters,K}clone(){const K=this.serialize();K._engine=this._engine,K.cameraId=null;const Y=o.Parse(K,this._scene,"");return Y?(Y.onActivateObservable=this.onActivateObservable.clone(),Y.onSizeChangedObservable=this.onSizeChangedObservable.clone(),Y.onApplyObservable=this.onApplyObservable.clone(),Y.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),Y.onAfterRenderObservable=this.onAfterRenderObservable.clone(),Y._prePassEffectConfiguration=this._prePassEffectConfiguration,Y):null}static Parse(K,Y,l){const v=(0,m.c)(K.customType);if(!v||!v._Parse)return null;const U=Y?Y.getCameraById(K.cameraId):null;return v._Parse(K,U,Y,l)}static _Parse(K,Y,l,v){return Z.c.Parse((()=>new o(K.name,K.fragmentUrl,K.parameters,K.samplers,K.options,Y,K.renderTargetSamplingMode,K._engine,K.reusable,K.defines,K.textureType,K.vertexUrl,K.indexParameters,!1,K.textureFormat)),K,l,v)}}(0,v.d)([(0,t.J)()],o.prototype,"uniqueId",void 0),(0,v.d)([(0,t.J)()],o.prototype,"name",null),(0,v.d)([(0,t.J)()],o.prototype,"width",void 0),(0,v.d)([(0,t.J)()],o.prototype,"height",void 0),(0,v.d)([(0,t.J)()],o.prototype,"renderTargetSamplingMode",void 0),(0,v.d)([(0,t.o)()],o.prototype,"clearColor",void 0),(0,v.d)([(0,t.J)()],o.prototype,"El",void 0),(0,v.d)([(0,t.J)()],o.prototype,"forceAutoClearInAlphaMode",void 0),(0,v.d)([(0,t.J)()],o.prototype,"alphaMode",null),(0,v.d)([(0,t.J)()],o.prototype,"alphaConstants",void 0),(0,v.d)([(0,t.J)()],o.prototype,"enablePixelPerfectMode",void 0),(0,v.d)([(0,t.J)()],o.prototype,"forceFullscreenViewport",void 0),(0,v.d)([(0,t.J)()],o.prototype,"scaleMode",void 0),(0,v.d)([(0,t.J)()],o.prototype,"alwaysForcePOT",void 0),(0,v.d)([(0,t.J)("samples")],o.prototype,"_samples",void 0),(0,v.d)([(0,t.J)()],o.prototype,"adaptScaleToCurrentViewport",void 0),(0,m.f)("BABYLON.PostProcess",o)},2314:(K,Y,l)=>{l.d(Y,{e:()=>d});var v=l(730),U=l(469);class d{constructor(K){this._vertexBuffers={},this.onBeforeRenderObservable=new U.b,this._scene=K}_prepareBuffers(){if(this._vertexBuffers[v.e.PositionKind])return;const K=[];K.push(1,1),K.push(-1,1),K.push(-1,-1),K.push(1,-1),this._vertexBuffers[v.e.PositionKind]=new v.e(this._scene.getEngine(),K,v.e.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const K=[];K.push(0),K.push(1),K.push(2),K.push(0),K.push(2),K.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(K)}_rebuild(){const K=this._vertexBuffers[v.e.PositionKind];K&&(K._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const l=this._scene.activeCamera;return!!l&&(Y=Y||l._postProcesses.filter((K=>null!=K)),!(!Y||0===Y.length||!this._scene.postProcessesEnabled)&&(Y[0].activate(l,K,null!==Y&&void 0!==Y),!0))}directRender(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]&&arguments[2],v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const A=this._scene.getEngine();for(let t=0;t<K.length;t++){var c;if(t<K.length-1)K[t+1].activate(this._scene.activeCamera,null===Y||void 0===Y?void 0:Y.texture);else Y?A.bindFramebuffer(Y,v,void 0,void 0,l,U):d||A.restoreDefaultFramebuffer(),null===(c=A._debugInsertMarker)||void 0===c||c.call(A,`post process ${K[t].name} output`);const Z=K[t],m=Z.apply();m&&(Z.onBeforeRenderObservable.notifyObservers(m),this._prepareBuffers(),A.bindBuffers(this._vertexBuffers,this._indexBuffer,m),A.drawElementsType(0,0,6),Z.onAfterRenderObservable.notifyObservers(m))}A.setDepthBuffer(!0),A.setDepthWrite(!0)}_finalizeFrame(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const d=this._scene.activeCamera;if(!d)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(v=v||d._postProcesses.filter((K=>null!=K))).length||!this._scene.postProcessesEnabled)return;const A=this._scene.getEngine();for(let t=0,Z=v.length;t<Z;t++){const m=v[t];var c;if(t<Z-1)m._outputTexture=v[t+1].activate(d,null===Y||void 0===Y?void 0:Y.texture);else Y?(A.bindFramebuffer(Y,l,void 0,void 0,U),m._outputTexture=Y):(A.restoreDefaultFramebuffer(),m._outputTexture=null),null===(c=A._debugInsertMarker)||void 0===c||c.call(A,`post process ${v[t].name} output`);if(K)break;const V=m.apply();V&&(m.onBeforeRenderObservable.notifyObservers(V),this._prepareBuffers(),A.bindBuffers(this._vertexBuffers,this._indexBuffer,V),A.drawElementsType(0,0,6),m.onAfterRenderObservable.notifyObservers(V))}A.setDepthBuffer(!0),A.setDepthWrite(!0),A.setAlphaMode(0)}dispose(){const K=this._vertexBuffers[v.e.PositionKind];K&&(K.dispose(),this._vertexBuffers[v.e.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},2316:(K,Y,l)=>{l.d(Y,{b:()=>c});var v=l(668),U=l(675);class d{set opaqueSortCompareFn(K){this._opaqueSortCompareFn=K||d.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(K){this._alphaTestSortCompareFn=K||d.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(K){this._transparentSortCompareFn=K||d.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=K,this._opaqueSubMeshes=new v.c(256),this._transparentSubMeshes=new v.c(256),this._alphaTestSubMeshes=new v.c(256),this._depthOnlySubMeshes=new v.c(256),this._particleSystems=new v.c(256),this._spriteManagers=new v.c(256),this._empty=!0,this._edgesRenderers=new v.b(16),this._scene=Y,this.opaqueSortCompareFn=l,this.alphaTestSortCompareFn=U,this.transparentSortCompareFn=d}render(K,Y,l,v){if(K)return void K(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const U=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(U.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),U.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const d=U.getStencilBuffer();if(U.setStencilBuffer(!1),Y&&this._renderSprites(),l&&this._renderParticles(v),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(U.setStencilBuffer(d),this._scene.useOrderIndependentTransparency){const K=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);K.length&&this._renderTransparent(K)}else this._renderTransparent(this._transparentSubMeshes);U.setAlphaMode(0)}if(U.setStencilBuffer(!1),this._edgesRenderers.length){for(let K=0;K<this._edgesRenderers.length;K++)this._edgesRenderers.data[K].render();U.setAlphaMode(0)}U.setStencilBuffer(d)}_renderOpaqueSorted(K){d._RenderSorted(K,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(K){d._RenderSorted(K,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(K){d._RenderSorted(K,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(K,Y,l,v){let A,c=0;const t=l?l.globalPosition:d._ZeroVector;if(v)for(;c<K.length;c++)A=K.data[c],A._alphaIndex=A.getMesh().alphaIndex,A._distanceToCamera=U.o.Distance(A.getBoundingInfo().boundingSphere.centerWorld,t);const Z=K.length===K.data.length?K.data:K.data.slice(0,K.length);Y&&Z.sort(Y);const m=Z[0].getMesh().va();for(c=0;c<Z.length;c++)if(A=Z[c],!m._activeMeshesFrozenButKeepClipping||A.isInFrustum(m._frustumPlanes)){if(v){const K=A.Ha();if(K&&K.needDepthPrePass){const Y=K.va().getEngine();Y.setColorWrite(!1),Y.setAlphaMode(0),A.render(!1),Y.setColorWrite(!0)}}A.render(v)}}static defaultTransparentSortCompare(K,Y){return K._alphaIndex>Y._alphaIndex?1:K._alphaIndex<Y._alphaIndex?-1:d.backToFrontSortCompare(K,Y)}static backToFrontSortCompare(K,Y){return K._distanceToCamera<Y._distanceToCamera?1:K._distanceToCamera>Y._distanceToCamera?-1:0}static frontToBackSortCompare(K,Y){return K._distanceToCamera<Y._distanceToCamera?-1:K._distanceToCamera>Y._distanceToCamera?1:0}static PainterSortCompare(K,Y){const l=K.getMesh(),v=Y.getMesh();return l.material&&v.material?l.material.uniqueId-v.material.uniqueId:l.uniqueId-v.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(K,Y,l){void 0===Y&&(Y=K.getMesh()),void 0===l&&(l=K.Ha()),null!==l&&void 0!==l&&(l.needAlphaBlendingForMesh(Y)?this._transparentSubMeshes.push(K):l.needAlphaTesting()?(l.needDepthPrePass&&this._depthOnlySubMeshes.push(K),this._alphaTestSubMeshes.push(K)):(l.needDepthPrePass&&this._depthOnlySubMeshes.push(K),this._opaqueSubMeshes.push(K)),Y._renderingGroup=this,Y._edgesRenderer&&Y.isEnabled()&&Y.isVisible&&Y._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(Y._edgesRenderer),this._empty=!1)}dispatchSprites(K){this._spriteManagers.push(K),this._empty=!1}dispatchParticles(K){this._particleSystems.push(K),this._empty=!1}_renderParticles(K){if(0===this._particleSystems.length)return;const Y=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let l=0;l<this._particleSystems.length;l++){const v=this._particleSystems.data[l];if(0===(Y&&Y.layerMask&v.layerMask))continue;const U=v.j;U.position&&K&&-1===K.indexOf(U)||this._scene._activeParticles.addCount(v.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const K=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let Y=0;Y<this._spriteManagers.length;Y++){const l=this._spriteManagers.data[Y];0!==(K&&K.layerMask&l.layerMask)&&l.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}d._ZeroVector=U.o.Zero();class A{}class c{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(K){K!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=K,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const K of this._scene.meshes)if(K.ui)for(const Y of K.ui)Y._wasDispatched=!1;if(this._scene.spriteManagers)for(const K of this._scene.spriteManagers)K._wasDispatched=!1;for(const K of this._scene.qi)K._wasDispatched=!1}constructor(K){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new A,this._maintainStateBetweenFrames=!1,this._scene=K;for(let Y=c.MIN_RENDERINGGROUPS;Y<c.MAX_RENDERINGGROUPS;Y++)this._autoClearDepthStencil[Y]={El:!0,depth:!0,stencil:!0}}getRenderingGroup(K){const Y=K||0;return this._prepareRenderingGroup(Y),this._renderingGroups[Y]}_clearDepthStencilBuffer(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,K,Y),this._depthStencilBufferAlreadyCleaned=!0)}render(K,Y,l,v){const U=this._renderingGroupInfo;if(U.hi=this._scene,U.camera=this._scene.activeCamera,this._scene.spriteManagers&&v)for(let d=0;d<this._scene.spriteManagers.length;d++){const K=this._scene.spriteManagers[d];this.dispatchSprites(K)}for(let d=c.MIN_RENDERINGGROUPS;d<c.MAX_RENDERINGGROUPS;d++){this._depthStencilBufferAlreadyCleaned=d===c.MIN_RENDERINGGROUPS;const A=this._renderingGroups[d];if(!A||A._empty)continue;const t=1<<d;if(U.renderingGroupId=d,this._scene.onBeforeRenderingGroupObservable.notifyObservers(U,t),c.AUTOCLEAR){const K=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(d):this._autoClearDepthStencil[d];K&&K.El&&this._clearDepthStencilBuffer(K.depth,K.stencil)}for(const K of this._scene._beforeRenderingGroupDrawStage)K.action(d);A.render(K,v,l,Y);for(const K of this._scene._afterRenderingGroupDrawStage)K.action(d);this._scene.onAfterRenderingGroupObservable.notifyObservers(U,t)}}reset(){if(!this.maintainStateBetweenFrames)for(let K=c.MIN_RENDERINGGROUPS;K<c.MAX_RENDERINGGROUPS;K++){const Y=this._renderingGroups[K];Y&&Y.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let K=c.MIN_RENDERINGGROUPS;K<c.MAX_RENDERINGGROUPS;K++){const Y=this._renderingGroups[K];Y&&Y.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let K=c.MIN_RENDERINGGROUPS;K<c.MAX_RENDERINGGROUPS;K++){const Y=this._renderingGroups[K];Y&&Y.dispose()}}_prepareRenderingGroup(K){void 0===this._renderingGroups[K]&&(this._renderingGroups[K]=new d(K,this._scene,this._customOpaqueSortCompareFn[K],this._customAlphaTestSortCompareFn[K],this._customTransparentSortCompareFn[K]))}dispatchSprites(K){this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(K.renderingGroupId).dispatchSprites(K))}dispatchParticles(K){this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(K.renderingGroupId).dispatchParticles(K))}dispatch(K,Y,l){void 0===Y&&(Y=K.getMesh()),this.maintainStateBetweenFrames&&K._wasDispatched||(K._wasDispatched=!0,this.getRenderingGroup(Y.renderingGroupId).dispatch(K,Y,l))}setRenderingOrder(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[K]=Y,this._customAlphaTestSortCompareFn[K]=l,this._customTransparentSortCompareFn[K]=v,this._renderingGroups[K]){const Y=this._renderingGroups[K];Y.opaqueSortCompareFn=this._customOpaqueSortCompareFn[K],Y.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[K],Y.transparentSortCompareFn=this._customTransparentSortCompareFn[K]}}setRenderingAutoClearDepthStencil(K,Y){let l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],v=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[K]={El:Y,depth:l,stencil:v}}getAutoClearDepthStencilSetup(K){return this._autoClearDepthStencil[K]}}c.MAX_RENDERINGGROUPS=4,c.MIN_RENDERINGGROUPS=0,c.AUTOCLEAR=!0},2340:(K,Y,l)=>{l.r(Y),l.d(Y,{postprocessVertexShader:()=>d});const v="postprocessVertexShader",U="attribute vec2 position;uniform vec2 scale;varying vec2 vUV;const vec2 madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvUV=(position*madd+madd)*scale;gl_Position=vec4(position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";l(577).e.ShadersStore[v]=U;const d={name:v,shader:U}}}]);