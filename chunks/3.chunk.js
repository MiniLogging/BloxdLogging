"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[3],{2331:(a,x,Q)=>{Q.d(x,{b:()=>e});var s=Q(493),h=Q(679),D=Q(2315),N=Q(2334),C=Q(2336),R=Q(691),U=Q(626),W=Q(570),v=Q(507);W.c.prototype.setDepthStencilTexture=function(a,x){this._engine.setDepthStencilTexture(this._samplers[a],this._uniforms[a],x,a)};class e extends D.e{get renderList(){return this._renderList}set renderList(a){this._renderList!==a&&(this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),a&&(this._unObserveRenderList=(0,R.j)(a,this._renderListHasChanged)),this._renderList=a)}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(a){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(a)}set onBeforeRender(a){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(a)}set onAfterRender(a){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(a)}set onClear(a){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(a)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(a,x){let Q;Q=Array.isArray(a)?a:[a];for(let s=0;s<Q.length;++s)for(let a=0;a<this._renderPassIds.length;++a)Q[s].setMaterialForRenderPass(this._renderPassIds[a],void 0!==x?Array.isArray(x)?x[a]:x:void 0)}get isMulti(){var a;return(null===(a=this._renderTarget)||void 0===a?void 0:a.isMulti)??!1}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(a){if(this._boundingBoxSize&&this._boundingBoxSize.equals(a))return;this._boundingBoxSize=a;const x=this.va();x&&x.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var a;return(null===(a=this._renderTarget)||void 0===a?void 0:a._depthStencilTexture)??null}constructor(a,x,Q){let N,R=arguments.length>3&&void 0!==arguments[3]&&arguments[3],U=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],W=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7&&void 0!==arguments[7]?arguments[7]:D.e.TRILINEAR_SAMPLINGMODE,p=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],j=arguments.length>9&&void 0!==arguments[9]&&arguments[9],H=arguments.length>10&&void 0!==arguments[10]&&arguments[10],d=arguments.length>11&&void 0!==arguments[11]?arguments[11]:5,i=arguments.length>12&&void 0!==arguments[12]&&arguments[12],Z=arguments.length>13?arguments[13]:void 0,y=arguments.length>14?arguments[14]:void 0,k=arguments.length>15&&void 0!==arguments[15]&&arguments[15],F=arguments.length>16&&void 0!==arguments[16]&&arguments[16],g=!0;if("object"===typeof R){const a=R;R=!!a.generateMipMaps,U=a.doNotChangeAspectRatio??!0,W=a.type??0,v=!!a.isCube,e=a.samplingMode??D.e.TRILINEAR_SAMPLINGMODE,p=a.generateDepthBuffer??!0,j=!!a.generateStencilBuffer,H=!!a.isMulti,d=a.format??5,i=!!a.delayAllocation,Z=a.samples,y=a.creationFlags,k=!!a.noColorAttachment,F=!!a.useSRGBBuffer,N=a.colorAttachment,g=a.gammaSpace??g}if(super(null,Q,!R,void 0,e,void 0,void 0,void 0,void 0,d),this._unObserveRenderList=null,this._renderListHasChanged=(a,x)=>{const Q=this._renderList?this._renderList.length:0;var s;(0===x&&Q>0||0===Q)&&(null===(s=this.va())||void 0===s||s.meshes.forEach((a=>{a._markSubMeshesAsLightDirty()})))},this.particleSystemList=null,this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new s.e,this.onAfterUnbindObservable=new s.e,this.onBeforeRenderObservable=new s.e,this.onAfterRenderObservable=new s.e,this.onClearObservable=new s.e,this.onResizeObservable=new s.e,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=h.o.Zero(),this._dumpToolsLoading=!1,!(Q=this.va()))return;const l=this.va().getEngine();this._gammaSpace=g,this._coordinatesMode=D.e.PROJECTION_MODE,this.renderList=[],this.name=a,this.isRenderTarget=!0,this._initialSizeParameter=x,this._renderPassIds=[],this._isCubeData=v,this._processSizeParameter(x),this.renderPassId=this._renderPassIds[0],this._resizeObserver=l.onResizeObservable.add((()=>{})),this._generateMipMaps=!!R,this._doNotChangeAspectRatio=U,this._renderingManager=new C.c(Q),this._renderingManager._useSceneAutoClearSetup=!0,H||(this._renderTargetOptions={generateMipMaps:R,type:W,format:this._format??void 0,samplingMode:this.samplingMode,generateDepthBuffer:p,generateStencilBuffer:j,samples:Z,creationFlags:y,noColorAttachment:k,useSRGBBuffer:F,colorAttachment:N,label:this.name},this.samplingMode===D.e.NEAREST_SAMPLINGMODE&&(this.wrapU=D.e.CLAMP_ADDRESSMODE,this.wrapV=D.e.CLAMP_ADDRESSMODE),i||(v?(this._renderTarget=Q.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=D.e.INVCUBIC_MODE,this._textureMatrix=h.e.Identity()):this._renderTarget=Q.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==Z&&(this.samples=Z)))}createDepthStencilTexture(){var a;let x=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:14,N=arguments.length>5?arguments[5]:void 0;null===(a=this._renderTarget)||void 0===a||a.createDepthStencilTexture(x,Q,s,h,D,N)}_releaseRenderPassId(){if(this._scene){const a=this._scene.getEngine();for(let x=0;x<this._renderPassIds.length;++x)a.releaseRenderPassId(this._renderPassIds[x])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const a=this._scene.getEngine(),x=this._isCubeData?6:this.getRenderLayers()||1;for(let Q=0;Q<x;++Q)this._renderPassIds[Q]=a.createRenderPassId(`RenderTargetTexture - ${this.name}#${Q}`)}_processSizeParameter(a){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(a.ratio){this._sizeRatio=a.ratio;const x=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(x.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(x.getRenderHeight(),this._sizeRatio)}}else this._size=a;x&&this._createRenderPassId()}get samples(){var a;return(null===(a=this._renderTarget)||void 0===a?void 0:a.samples)??this._samples}set samples(a){this._renderTarget&&(this._samples=this._renderTarget.setSamples(a))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(a){this._refreshRate=a,this.resetRefreshCounter()}addPostProcess(a){if(!this._postProcessManager){const a=this.va();if(!a)return;this._postProcessManager=new N.d(a),this._postProcesses=new Array}this._postProcesses.push(a),this._postProcesses[0].Al=!1}clearPostProcesses(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this._postProcesses){if(a)for(const a of this._postProcesses)a.dispose();this._postProcesses=[]}}removePostProcess(a){if(!this._postProcesses)return;const x=this._postProcesses.indexOf(a);-1!==x&&(this._postProcesses.splice(x,1),this._postProcesses.length>0&&(this._postProcesses[0].Al=!1))}_shouldRender(){return-1===this._currentRefreshId||this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const a=this._size.layers;if(a)return a;const x=this._size.depth;return x||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(a){const x=Math.max(1,this.getRenderSize()*a);this.resize(x)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(a){var x;const Q=this.isCube;null===(x=this._renderTarget)||void 0===x||x.dispose(),this._renderTarget=null;const s=this.va();s&&(this._processSizeParameter(a,!1),this._renderTarget=Q?s.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):s.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==this._renderTargetOptions.samples&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._render(a,x)}isReadyForRendering(){return this._dumpToolsLoading||(this._dumpToolsLoading=!0,Q.e(9).then(Q.bind(Q,2433)).then((a=>this._dumpTools=a))),this._render(!1,!1,!0)}_render(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],x=arguments.length>1&&void 0!==arguments[1]&&arguments[1],Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this.va();if(!s)return Q;const h=s.getEngine();if(void 0!==this.useCameraPostProcesses&&(a=this.useCameraPostProcesses),this._waitingRenderList){if(!this.renderListPredicate){this.renderList=[];for(let a=0;a<this._waitingRenderList.length;a++){const x=this._waitingRenderList[a],Q=s.getMeshById(x);Q&&this.renderList.push(Q)}}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const a=this.va();if(!a)return Q;const x=a.meshes;for(let Q=0;Q<x.length;Q++){const a=x[Q];this.renderListPredicate(a)&&this.renderList.push(a)}}const D=h.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const N=this.activeCamera??s.activeCamera,C=s.activeCamera;N&&(N!==s.activeCamera&&(s.setTransformMatrix(N.getViewMatrix(),N.getProjectionMatrix(!0)),s.activeCamera=N),h.setViewport(N.rigParent?N.rigParent.viewport:N.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let R=Q;if(Q){s.getViewMatrix()||s.updateTransformMatrix();const a=this.is2DArray||this.is3D?this.getRenderLayers():this.isCube?6:1;for(let D=0;D<a&&R;D++){let a=null;const x=this.renderList?this.renderList:s.getActiveMeshes().data,N=this.renderList?this.renderList.length:s.getActiveMeshes().length;h.currentRenderPassId=this._renderPassIds[D],this.onBeforeRenderObservable.notifyObservers(D),this.getCustomRenderList&&(a=this.getCustomRenderList(D,x,N)),a||(a=x),this._doNotChangeAspectRatio||s.updateTransformMatrix(!0);for(let s=0;s<a.length&&R;++s){const x=a[s];if(x.isEnabled()&&!x.isBlocked&&x.isVisible&&x.si)if(this.customIsReadyFunction){if(!this.customIsReadyFunction(x,this.refreshRate,Q)){R=!1;continue}}else if(!x.isReady(!0)){R=!1;continue}}this.onAfterRenderObservable.notifyObservers(D),(this.is2DArray||this.is3D||this.isCube)&&(s.incrementRenderId(),s.resetCachedMaterial())}const x=this.particleSystemList||s.oi;for(const Q of x)Q.isReady()||(R=!1)}else if(!this.is2DArray&&!this.is3D||this.isMulti)if(this.isCube&&!this.isMulti)for(let U=0;U<6;U++)this._renderToTarget(U,a,x,void 0,N),s.incrementRenderId(),s.resetCachedMaterial();else this._renderToTarget(0,a,x,void 0,N);else for(let U=0;U<this.getRenderLayers();U++)this._renderToTarget(0,a,x,U,N),s.incrementRenderId(),s.resetCachedMaterial();return this.onAfterUnbindObservable.notifyObservers(this),h.currentRenderPassId=D,s.activeCamera=C,C&&(this.activeCamera&&this.activeCamera!==s.activeCamera&&s.setTransformMatrix(C.getViewMatrix(),C.getProjectionMatrix(!0)),h.setViewport(C.viewport)),s.resetCachedMaterial(),R}_bestReflectionRenderTargetDimension(a,x){const Q=a*x,s=(0,U.q)(Q+16384/(128+Q));return Math.min((0,U.d)(a),s)}_prepareRenderingManager(a,x,Q,s){const h=this.va();if(!h)return;this._renderingManager.reset();const D=h.getRenderId();for(let C=0;C<x;C++){const x=a[C];if(x&&!x.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(x,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!x.isReady(0===this.refreshRate)){this.resetRefreshCounter();continue}if(!x._internalAbstractMeshDataInfo._currentLODIsUpToDate&&Q&&(x._internalAbstractMeshDataInfo._currentLOD=h.customLODSelector?h.customLODSelector(x,Q):x.getLOD(Q),x._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!x._internalAbstractMeshDataInfo._currentLOD)continue;let a,N=x._internalAbstractMeshDataInfo._currentLOD;if(N!==x&&0!==N.billboardMode&&N.pi(),N._preActivateForIntermediateRendering(D),a=!(!s||!Q)&&0===(x.layerMask&Q.layerMask),x.isEnabled()&&x.isVisible&&x.si&&!a){if(N!==x&&N._activate(D,!0),x._activate(D,!0)&&x.si.length){x.isAnInstance?x._internalAbstractMeshDataInfo._actAsRegularMesh&&(N=x):N._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,N._internalAbstractMeshDataInfo._isActiveIntermediate=!0,h._prepareSkeleton(N);for(let a=0;a<N.si.length;a++){const x=N.si[a];this._renderingManager.dispatch(x,N)}}x._postActivate()}}}const N=this.particleSystemList||h.oi;for(let C=0;C<N.length;C++){const a=N[C],x=a.j;a.isStarted()&&x&&(!x.position||x.isEnabled())&&this._renderingManager.dispatchParticles(a)}}_bindFrameBuffer(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const Q=this.va();if(!Q)return;const s=Q.getEngine();this._renderTarget&&s.bindFramebuffer(this._renderTarget,this.isCube?a:void 0,void 0,void 0,this.ignoreCameraViewport,0,x)}_unbindFrameBuffer(a,x){this._renderTarget&&a.unBindFramebuffer(this._renderTarget,this.isCube,(()=>{this.onAfterRenderObservable.notifyObservers(x)}))}_prepareFrame(a,x,Q,s){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):s&&a.postProcessManager._prepareFrame(this._texture)||this._bindFrameBuffer(x,Q)}_renderToTarget(a,x,Q){var s,h;let D=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const C=this.va();if(!C)return;const R=C.getEngine();this._prepareFrame(C,a,D,x),null===(s=R._debugPushGroup)||void 0===s||s.call(R,`render to face #${a} layer #${D}`,2),this.is2DArray||this.is3D?(R.currentRenderPassId=this._renderPassIds[D],this.onBeforeRenderObservable.notifyObservers(D)):(R.currentRenderPassId=this._renderPassIds[a],this.onBeforeRenderObservable.notifyObservers(a));if(R.snapshotRendering&&1===R.snapshotRenderingMode)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(R):this.skipInitialClear||R.clear(this.clearColor||C.clearColor,!0,!0,!0);else{var U;let s=null;const h=this.renderList?this.renderList:C.getActiveMeshes().data,W=this.renderList?this.renderList.length:C.getActiveMeshes().length;this.getCustomRenderList&&(s=this.getCustomRenderList(this.is2DArray||this.is3D?D:a,h,W)),s?this._prepareRenderingManager(s,s.length,N,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(h,W,N,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),s=h);for(const x of C._beforeRenderTargetClearStage)x.action(this,a,D);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(R):this.skipInitialClear||R.clear(this.clearColor||C.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||C.updateTransformMatrix(!0);for(const x of C._beforeRenderTargetDrawStage)x.action(this,a,D);this._renderingManager.render(this.customRenderFunction,s,this.renderParticles,this.renderSprites);for(const x of C._afterRenderTargetDrawStage)x.action(this,a,D);const e=(null===(U=this._texture)||void 0===U?void 0:U.generateMipMaps)??!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,a,this._postProcesses,this.ignoreCameraViewport):x&&C.postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,a);for(const x of C._afterRenderTargetPostProcessStage)x.action(this,a,D);this._texture&&(this._texture.generateMipMaps=e),this._doNotChangeAspectRatio||C.updateTransformMatrix(!0),Q&&(this._dumpTools?this._dumpTools.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),R):v.d.Error("dumpTools module is still being loaded. To speed up the process import dump tools directly in your project"))}null===(h=R._debugPopGroup)||void 0===h||h.call(R,2),this._unbindFrameBuffer(R,a),this._texture&&this.isCube&&5===a&&R.generateMipMapsForCubemap(this._texture,!0)}setRenderingOrder(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(a,x,Q,s)}setRenderingAutoClearDepthStencil(a,x){this._renderingManager.setRenderingAutoClearDepthStencil(a,x),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const a=this.getSize(),x=new e(this.name,a,this.va(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return x.Aj=this.Aj,x.level=this.level,x.coordinatesMode=this.coordinatesMode,this.renderList&&(x.renderList=this.renderList.slice(0)),x}serialize(){if(!this.name)return null;const a=super.serialize();if(a.renderTargetSize=this.getRenderSize(),a.renderList=[],this.renderList)for(let x=0;x<this.renderList.length;x++)a.renderList.push(this.renderList[x].id);return a}disposeFramebufferObjects(){var a;null===(a=this._renderTarget)||void 0===a||a.dispose(!0)}releaseInternalTexture(){var a;null===(a=this._renderTarget)||void 0===a||a.releaseTextures(),this._texture=null}dispose(){var a;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.va().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const x=this.va();if(!x)return;let Q=x.customRenderTargets.indexOf(this);Q>=0&&x.customRenderTargets.splice(Q,1);for(const s of x.cameras)Q=s.customRenderTargets.indexOf(this),Q>=0&&s.customRenderTargets.splice(Q,1);null===(a=this._renderTarget)||void 0===a||a.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===e.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=e.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}e.REFRESHRATE_RENDER_ONCE=0,e.REFRESHRATE_RENDER_ONEVERYFRAME=1,e.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,D.e._CreateRenderTargetTexture=(a,x,Q,s,h)=>new e(a,x,Q,s)},2342:(a,x,Q)=>{Q.d(x,{c:()=>U,e:()=>W});var s=Q(747),h=Q(727),D=Q(493),N=Q(570),C=Q(792);Q(2347);const R={xa:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class U{constructor(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:R;this._fullscreenViewport=new h.c(0,0,1,1);const Q=x.xa??R.xa,D=x.indices??R.indices;this.Gi=a,this._vertexBuffers={[s.g.PositionKind]:new s.g(a,Q,s.g.PositionKind,!1,!1,2)},this._indexBuffer=a.createIndexBuffer(D),this._onContextRestoredObserver=a.onContextRestoredObservable.add((()=>{this._indexBuffer=a.createIndexBuffer(D);for(const a in this._vertexBuffers){this._vertexBuffers[a]._rebuild()}}))}setViewport(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._fullscreenViewport;this.Gi.setViewport(a)}bindBuffers(a){this.Gi.bindBuffers(this._vertexBuffers,this._indexBuffer,a)}applyEffectWrapper(a){this.Gi.setState(!0),this.Gi.depthCullingState.depthTest=!1,this.Gi.stencilState.stencilTest=!1,this.Gi.enableEffect(a.drawWrapper),this.bindBuffers(a.effect),a.onApplyObservable.notifyObservers({})}saveStates(){this._savedStateDepthTest=this.Gi.depthCullingState.depthTest,this._savedStateStencilTest=this.Gi.stencilState.stencilTest}restoreStates(){this.Gi.depthCullingState.depthTest=this._savedStateDepthTest,this.Gi.stencilState.stencilTest=this._savedStateStencilTest}draw(){this.Gi.drawElementsType(0,0,6)}_isRenderTargetTexture(a){return void 0!==a.renderTarget}render(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!a.effect.isReady())return;this.saveStates(),this.setViewport();const Q=null===x?null:this._isRenderTargetTexture(x)?x.renderTarget:x;Q&&this.Gi.bindFramebuffer(Q),this.applyEffectWrapper(a),this.draw(),Q&&this.Gi.unBindFramebuffer(Q),this.restoreStates()}dispose(){const a=this._vertexBuffers[s.g.PositionKind];a&&(a.dispose(),delete this._vertexBuffers[s.g.PositionKind]),this._indexBuffer&&this.Gi._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.Gi.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class W{static RegisterShaderCodeProcessing(a,x){x?W._CustomShaderCodeProcessing[a??""]=x:delete W._CustomShaderCodeProcessing[a??""]}static _GetShaderCodeProcessing(a){return W._CustomShaderCodeProcessing[a]??W._CustomShaderCodeProcessing[""]}get name(){return this.options.name}set name(a){this.options.name=a}isReady(){var a;return(null===(a=this._drawWrapper.effect)||void 0===a?void 0:a.isReady())??!1}get drawWrapper(){return this._drawWrapper}get effect(){return this._drawWrapper.effect}set effect(a){this._drawWrapper.effect=a}constructor(a){this.alphaMode=0,this.onEffectCreatedObservable=new D.e(void 0,!0),this.onApplyObservable=new D.e,this._shadersLoaded=!1,this._webGPUReady=!1,this._importPromises=[],this.options={...a,name:a.name||"effectWrapper",Gi:a.Gi,uniforms:a.uniforms||a.uniformNames||[],uniformNames:void 0,samplers:a.samplers||a.samplerNames||[],samplerNames:void 0,attributeNames:a.attributeNames||["position"],uniformBuffers:a.uniformBuffers||[],defines:a.defines||"",useShaderStore:a.useShaderStore||!1,vertexUrl:a.vertexUrl||a.vertexShader||"postprocess",vertexShader:void 0,fragmentShader:a.fragmentShader||"pass",indexParameters:a.indexParameters,blockCompilation:a.blockCompilation||!1,shaderLanguage:a.shaderLanguage||0,onCompiled:a.onCompiled||void 0,extraInitializations:a.extraInitializations||void 0,extraInitializationsAsync:a.extraInitializationsAsync||void 0,useAsPostProcess:a.useAsPostProcess??!1},this.options.uniformNames=this.options.uniforms,this.options.samplerNames=this.options.samplers,this.options.vertexShader=this.options.vertexUrl,this.options.useAsPostProcess&&(-1===this.options.samplers.indexOf("textureSampler")&&this.options.samplers.push("textureSampler"),-1===this.options.uniforms.indexOf("scale")&&this.options.uniforms.push("scale")),a.vertexUrl||a.vertexShader?this._shaderPath={vertexSource:this.options.vertexShader}:(this.options.useAsPostProcess||(this.options.uniforms.push("scale"),this.onApplyObservable.add((()=>{this.effect.setFloat2("scale",1,1)}))),this._shaderPath={vertex:this.options.vertexShader}),this._shaderPath.fragmentSource=this.options.fragmentShader,this._shaderPath.spectorName=this.options.name,this.options.useShaderStore&&(this._shaderPath.fragment=this._shaderPath.fragmentSource,this._shaderPath.vertex||(this._shaderPath.vertex=this._shaderPath.vertexSource),delete this._shaderPath.fragmentSource,delete this._shaderPath.vertexSource),this.onApplyObservable.add((()=>{this.bind()})),this.options.useShaderStore||(this._onContextRestoredObserver=this.options.Gi.onContextRestoredObservable.add((()=>{this.effect._pipelineContext=null,this.effect._prepareEffect()}))),this._drawWrapper=new C.c(this.options.Gi),this._webGPUReady=1===this.options.shaderLanguage;const x=Array.isArray(this.options.defines)?this.options.defines.join("\n"):this.options.defines;this._postConstructor(this.options.blockCompilation,x,this.options.extraInitializations)}_gatherImports(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],x=arguments.length>1?arguments[1]:void 0;this.options.useAsPostProcess&&(a&&this._webGPUReady?x.push(Promise.all([Q.e(36).then(Q.bind(Q,13156))])):x.push(Promise.all([Promise.resolve().then(Q.bind(Q,2347))])))}_postConstructor(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;this._importPromises.length=0,s&&this._importPromises.push(...s);const h=this.options.Gi.isWebGPU&&!W.ForceGLSL;this._gatherImports(h,this._importPromises),void 0!==Q&&Q(h,this._importPromises),h&&this._webGPUReady&&(this.options.shaderLanguage=1),a||this.updateEffect(x)}updateEffect(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3?arguments[3]:void 0,h=arguments.length>4?arguments[4]:void 0,D=arguments.length>5?arguments[5]:void 0,C=arguments.length>6?arguments[6]:void 0,R=arguments.length>7?arguments[7]:void 0;const U=W._GetShaderCodeProcessing(this.name);if(null!==U&&void 0!==U&&U.defineCustomBindings){var v,e;const s=(null===(v=x)||void 0===v?void 0:v.slice())??[];s.push(...this.options.uniforms);const h=(null===(e=Q)||void 0===e?void 0:e.slice())??[];h.push(...this.options.samplers),a=U.defineCustomBindings(this.name,a,s,h),x=s,Q=h}this.options.defines=a||"";const p=this._shadersLoaded||0===this._importPromises.length?void 0:async()=>{await Promise.all(this._importPromises),this._shadersLoaded=!0};let j;j=this.options.extraInitializationsAsync?async()=>{null===p||void 0===p||p(),await this.options.extraInitializationsAsync}:p,this.options.useShaderStore?this._drawWrapper.effect=this.options.Gi.createEffect({vertex:C??this._shaderPath.vertex,fragment:R??this._shaderPath.fragment},{attributes:this.options.attributeNames,uniformsNames:x||this.options.uniforms,uniformBuffersNames:this.options.uniformBuffers,samplers:Q||this.options.samplers,defines:null!==a?a:"",fallbacks:null,onCompiled:h??this.options.onCompiled,onError:D??null,indexParameters:s||this.options.indexParameters,processCodeAfterIncludes:null!==U&&void 0!==U&&U.processCodeAfterIncludes?(a,x)=>U.processCodeAfterIncludes(this.name,a,x):null,processFinalCode:null!==U&&void 0!==U&&U.processFinalCode?(a,x)=>U.processFinalCode(this.name,a,x):null,shaderLanguage:this.options.shaderLanguage,extraInitializationsAsync:j},this.options.Gi):this._drawWrapper.effect=new N.c(this._shaderPath,this.options.attributeNames,x||this.options.uniforms,Q||this.options.samplerNames,this.options.Gi,a,void 0,h||this.options.onCompiled,void 0,void 0,void 0,this.options.shaderLanguage,j),this.onEffectCreatedObservable.notifyObservers(this._drawWrapper.effect)}bind(){var a,x;this.options.useAsPostProcess&&(this.options.Gi.setAlphaMode(this.alphaMode),this.drawWrapper.effect.setFloat2("scale",1,1)),null===(a=W._GetShaderCodeProcessing(this.name))||void 0===a||null===(x=a.bindCustomBindings)||void 0===x||x.call(a,this.name,this._drawWrapper.effect)}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.onEffectCreatedObservable.clear(),this.effect.dispose()}}W.ForceGLSL=!1,W._CustomShaderCodeProcessing={}},2280:(a,x,Q)=>{Q.d(x,{d:()=>s.k});Q(829),Q(722),Q(683),Q(733),Q(2288),Q(742),Q(2290);var s=Q(679);Q(727)},2288:(a,x,Q)=>{Q.d(x,{d:()=>C,h:()=>W,j:()=>v});var s,h=Q(699),D=Q(679),N=Q(683);!function(a){a[a.CW=0]="CW",a[a.CCW=1]="CCW"}(s||(s={}));class C{static Interpolate(a,x,Q,s,h){const D=1-3*s+3*x,N=3*s-6*x,C=3*x;let R=a;for(let U=0;U<5;U++){const x=R*R;R-=(D*(x*R)+N*x+C*R-a)*(1/(3*D*x+2*N*R+C)),R=Math.min(1,Math.max(0,R))}return 3*Math.pow(1-R,2)*R*Q+3*(1-R)*Math.pow(R,2)*h+Math.pow(R,3)}}class R{constructor(a){this._radians=a,this._radians<0&&(this._radians+=2*Math.PI)}degrees(){return 180*this._radians/Math.PI}radians(){return this._radians}static BetweenTwoPoints(a,x){const Q=x.Ag(a),s=Math.atan2(Q.y,Q.x);return new R(s)}static BetweenTwoVectors(a,x){let Q=a.lengthSquared()*x.lengthSquared();if(0===Q)return new R(Math.PI/2);Q=Math.sqrt(Q);let s=a.dot(x)/Q;s=(0,h.c)(s,-1,1);const D=Math.acos(s);return new R(D)}static FromRadians(a){return new R(a)}static FromDegrees(a){return new R(a*Math.PI/180)}}class U{constructor(a,x,Q){this.startPoint=a,this.midPoint=x,this.endPoint=Q;const s=Math.pow(x.x,2)+Math.pow(x.y,2),h=(Math.pow(a.x,2)+Math.pow(a.y,2)-s)/2,N=(s-Math.pow(Q.x,2)-Math.pow(Q.y,2))/2,C=(a.x-x.x)*(x.y-Q.y)-(x.x-Q.x)*(a.y-x.y);this.centerPoint=new D.n((h*(x.y-Q.y)-N*(a.y-x.y))/C,((a.x-x.x)*N-(x.x-Q.x)*h)/C),this.radius=this.centerPoint.Ag(this.startPoint).length(),this.startAngle=R.BetweenTwoPoints(this.centerPoint,this.startPoint);const U=this.startAngle.degrees();let W=R.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),v=R.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();W-U>180&&(W-=360),W-U<-180&&(W+=360),v-W>180&&(v-=360),v-W<-180&&(v+=360),this.orientation=W-U<0?0:1,this.angle=R.FromDegrees(0===this.orientation?U-v:v-U)}}class W{constructor(a,x){this._points=new Array,this._length=0,this.closed=!1,this._points.push(new D.n(a,x))}addLineTo(a,x){if(this.closed)return this;const Q=new D.n(a,x),s=this._points[this._points.length-1];return this._points.push(Q),this._length+=Q.Ag(s).length(),this}addArcTo(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const N=this._points[this._points.length-1],C=new D.n(a,x),R=new D.n(Q,s),W=new U(N,C,R);let v=W.angle.radians()/h;0===W.orientation&&(v*=-1);let e=W.startAngle.radians()+v;for(let D=0;D<h;D++){const a=Math.cos(e)*W.radius+W.centerPoint.x,x=Math.sin(e)*W.radius+W.centerPoint.y;this.addLineTo(a,x),e+=v}return this}addQuadraticCurveTo(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const D=(a,x,Q,s)=>(1-a)*(1-a)*x+2*a*(1-a)*Q+a*a*s,N=this._points[this._points.length-1];for(let C=0;C<=h;C++){const R=C/h,U=D(R,N.x,a,Q),W=D(R,N.y,x,s);this.addLineTo(U,W)}return this}addBezierCurveTo(a,x,Q,s,h,D){let N=arguments.length>6&&void 0!==arguments[6]?arguments[6]:36;if(this.closed)return this;const C=(a,x,Q,s,h)=>(1-a)*(1-a)*(1-a)*x+3*a*(1-a)*(1-a)*Q+3*a*a*(1-a)*s+a*a*a*h,R=this._points[this._points.length-1];for(let U=0;U<=N;U++){const W=U/N,v=C(W,R.x,a,Q,h),e=C(W,R.y,x,s,D);this.addLineTo(v,e)}return this}isPointInside(a){let x=!1;const Q=this._points.length;for(let s=Q-1,h=0;h<Q;s=h++){let Q=this._points[s],D=this._points[h],N=D.x-Q.x,C=D.y-Q.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(Q=this._points[h],N=-N,D=this._points[s],C=-C),a.y<Q.y||a.y>D.y)continue;if(a.y===Q.y&&a.x===Q.x)return!0;{const s=C*(a.x-Q.x)-N*(a.y-Q.y);if(0===s)return!0;if(s<0)continue;x=!x}}else{if(a.y!==Q.y)continue;if(D.x<=a.x&&a.x<=Q.x||Q.x<=a.x&&a.x<=D.x)return!0}}return x}close(){return this.closed=!0,this}length(){let a=this._length;if(this.closed){const x=this._points[this._points.length-1];a+=this._points[0].Ag(x).length()}return a}area(){const a=this._points.length;let x=0;for(let Q=a-1,s=0;s<a;Q=s++)x+=this._points[Q].x*this._points[s].y-this._points[s].x*this._points[Q].y;return.5*x}getPoints(){return this._points}getPointAtLengthPosition(a){if(a<0||a>1)return D.n.Zero();const x=a*this.length();let Q=0;for(let s=0;s<this._points.length;s++){const a=(s+1)%this._points.length,h=this._points[s],N=this._points[a].Ag(h),C=N.length()+Q;if(x>=Q&&x<=C){const a=N.normalize(),s=x-Q;return new D.n(h.x+a.x*s,h.y+a.y*s)}Q=C}return D.n.Zero()}static StartingAt(a,x){return new W(a,x)}}class v{constructor(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2?arguments[2]:void 0,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.path=a,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array,this._pointAtData={id:0,point:D.o.Zero(),previousPointArrayIndex:0,position:0,subPosition:0,interpolateReady:!1,interpolationMatrix:D.e.Identity()};for(let h=0;h<a.length;h++)this._curve[h]=a[h].clone();this._raw=Q||!1,this._alignTangentsWithPath=s,this._compute(x,s)}getCurve(){return this._curve}getPoints(){return this._curve}length(){return this._distances[this._distances.length-1]}getTangents(){return this._tangents}getNormals(){return this._normals}getBinormals(){return this._binormals}getDistances(){return this._distances}getPointAt(a){return this._updatePointAtData(a).point}getTangentAt(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(a,x),x?D.o.TransformCoordinates(D.o.Forward(),this._pointAtData.interpolationMatrix):this._tangents[this._pointAtData.previousPointArrayIndex]}getNormalAt(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(a,x),x?D.o.TransformCoordinates(D.o.Right(),this._pointAtData.interpolationMatrix):this._normals[this._pointAtData.previousPointArrayIndex]}getBinormalAt(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(a,x),x?D.o.TransformCoordinates(D.o.UpReadOnly,this._pointAtData.interpolationMatrix):this._binormals[this._pointAtData.previousPointArrayIndex]}getDistanceAt(a){return this.length()*a}getPreviousPointIndexAt(a){return this._updatePointAtData(a),this._pointAtData.previousPointArrayIndex}getSubPositionAt(a){return this._updatePointAtData(a),this._pointAtData.subPosition}getClosestPositionTo(a){let x=Number.MAX_VALUE,Q=0;for(let s=0;s<this._curve.length-1;s++){const h=this._curve[s+0],N=this._curve[s+1].Ag(h).normalize(),C=this._distances[s+1]-this._distances[s+0],R=Math.min(Math.max(D.o.Dot(N,a.Ag(h).normalize()),0)*D.o.Distance(h,a)/C,1),U=D.o.Distance(h.add(N.scale(R*C)),a);U<x&&(x=U,Q=(this._distances[s+0]+C*R)/this.length())}return Q}slice(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(a<0&&(a=1- -1*a%1),x<0&&(x=1- -1*x%1),a>x){const Q=a;a=x,x=Q}const Q=this.getCurve(),s=this.getPointAt(a);let h=this.getPreviousPointIndexAt(a);const D=this.getPointAt(x),N=this.getPreviousPointIndexAt(x)+1,C=[];return 0!==a&&(h++,C.push(s)),C.push(...Q.slice(h,N)),1===x&&1!==a||C.push(D),new v(C,this.getNormalAt(a),this._raw,this._alignTangentsWithPath)}update(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(let s=0;s<a.length;s++)this._curve[s].x=a[s].x,this._curve[s].y=a[s].y,this._curve[s].z=a[s].z;return this._compute(x,Q),this}_compute(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=this._curve.length;if(Q<2)return;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[Q-1]=this._curve[Q-1].Ag(this._curve[Q-2]),this._raw||this._tangents[Q-1].normalize();const s=this._tangents[0],h=this._normalVector(s,a);let N,C,R,U,W;this._normals[0]=h,this._raw||this._normals[0].normalize(),this._binormals[0]=D.o.Cross(s,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(let v=1;v<Q;v++)N=this._getLastNonNullVector(v),v<Q-1&&(C=this._getFirstNonNullVector(v),this._tangents[v]=x?C:N.add(C),this._tangents[v].normalize()),this._distances[v]=this._distances[v-1]+this._curve[v].Ag(this._curve[v-1]).length(),R=this._tangents[v],W=this._binormals[v-1],this._normals[v]=D.o.Cross(W,R),this._raw||(0===this._normals[v].length()?(U=this._normals[v-1],this._normals[v]=U.clone()):this._normals[v].normalize()),this._binormals[v]=D.o.Cross(R,this._normals[v]),this._raw||this._binormals[v].normalize();this._pointAtData.id=NaN}_getFirstNonNullVector(a){let x=1,Q=this._curve[a+x].Ag(this._curve[a]);for(;0===Q.length()&&a+x+1<this._curve.length;)x++,Q=this._curve[a+x].Ag(this._curve[a]);return Q}_getLastNonNullVector(a){let x=1,Q=this._curve[a].Ag(this._curve[a-x]);for(;0===Q.length()&&a>x+1;)x++,Q=this._curve[a].Ag(this._curve[a-x]);return Q}_normalVector(a,x){let Q,s=a.length();if(0===s&&(s=1),void 0===x||null===x){let x;x=(0,h.v)(Math.abs(a.y)/s,1,N.b)?(0,h.v)(Math.abs(a.x)/s,1,N.b)?(0,h.v)(Math.abs(a.z)/s,1,N.b)?D.o.Zero():new D.o(0,0,1):new D.o(1,0,0):new D.o(0,-1,0),Q=D.o.Cross(a,x)}else Q=D.o.Cross(a,x),D.o.CrossToRef(Q,a,Q);return Q.normalize(),Q}_updatePointAtData(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._pointAtData.id===a)return this._pointAtData.interpolateReady||this._updateInterpolationMatrix(),this._pointAtData;this._pointAtData.id=a;const Q=this.getPoints();if(a<=0)return this._setPointAtData(0,0,Q[0],0,x);if(a>=1)return this._setPointAtData(1,1,Q[Q.length-1],Q.length-1,x);let s,h=Q[0],N=0;const C=a*this.length();for(let R=1;R<Q.length;R++){s=Q[R];const U=D.o.Distance(h,s);if(N+=U,N===C)return this._setPointAtData(a,1,s,R,x);if(N>C){const Q=(N-C)/U,D=h.Ag(s),W=s.add(D.scaleInPlace(Q));return this._setPointAtData(a,1-Q,W,R-1,x)}h=s}return this._pointAtData}_setPointAtData(a,x,Q,s,h){return this._pointAtData.point=Q,this._pointAtData.position=a,this._pointAtData.subPosition=x,this._pointAtData.previousPointArrayIndex=s,this._pointAtData.interpolateReady=h,h&&this._updateInterpolationMatrix(),this._pointAtData}_updateInterpolationMatrix(){this._pointAtData.interpolationMatrix=D.e.Identity();const a=this._pointAtData.previousPointArrayIndex;if(a!==this._tangents.length-1){const x=a+1,Q=this._tangents[a].clone(),s=this._normals[a].clone(),h=this._binormals[a].clone(),N=this._tangents[x].clone(),C=this._normals[x].clone(),R=this._binormals[x].clone(),U=D.g.RotationQuaternionFromAxis(s,h,Q),W=D.g.RotationQuaternionFromAxis(C,R,N);D.g.Slerp(U,W,this._pointAtData.subPosition).toRotationMatrix(this._pointAtData.interpolationMatrix)}}}},2272:(a,x,Q)=>{Q.d(x,{e:()=>U,f:()=>W});var s=Q(679),h=Q(2280);const D=[Math.sqrt(1/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(3/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(15/(4*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(5/(16*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(15/(16*Math.PI))],N=[()=>1,a=>a.y,a=>a.z,a=>a.x,a=>a.x*a.y,a=>a.y*a.z,a=>3*a.z*a.z-1,a=>a.x*a.z,a=>a.x*a.x-a.y*a.y],C=(a,x)=>D[a]*N[a](x),R=[Math.PI,2*Math.PI/3,2*Math.PI/3,2*Math.PI/3,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4];class U{constructor(){this.preScaled=!1,this.l00=s.o.Zero(),this.l1_1=s.o.Zero(),this.l10=s.o.Zero(),this.l11=s.o.Zero(),this.l2_2=s.o.Zero(),this.l2_1=s.o.Zero(),this.l20=s.o.Zero(),this.l21=s.o.Zero(),this.l22=s.o.Zero()}addLight(a,x,Q){h.d.Oi[0].set(x.r,x.g,x.b);const s=h.d.Oi[0],D=h.d.Oi[1];s.scaleToRef(Q,D),D.scaleToRef(C(0,a),h.d.Oi[2]),this.l00.addInPlace(h.d.Oi[2]),D.scaleToRef(C(1,a),h.d.Oi[2]),this.l1_1.addInPlace(h.d.Oi[2]),D.scaleToRef(C(2,a),h.d.Oi[2]),this.l10.addInPlace(h.d.Oi[2]),D.scaleToRef(C(3,a),h.d.Oi[2]),this.l11.addInPlace(h.d.Oi[2]),D.scaleToRef(C(4,a),h.d.Oi[2]),this.l2_2.addInPlace(h.d.Oi[2]),D.scaleToRef(C(5,a),h.d.Oi[2]),this.l2_1.addInPlace(h.d.Oi[2]),D.scaleToRef(C(6,a),h.d.Oi[2]),this.l20.addInPlace(h.d.Oi[2]),D.scaleToRef(C(7,a),h.d.Oi[2]),this.l21.addInPlace(h.d.Oi[2]),D.scaleToRef(C(8,a),h.d.Oi[2]),this.l22.addInPlace(h.d.Oi[2])}scaleInPlace(a){this.l00.scaleInPlace(a),this.l1_1.scaleInPlace(a),this.l10.scaleInPlace(a),this.l11.scaleInPlace(a),this.l2_2.scaleInPlace(a),this.l2_1.scaleInPlace(a),this.l20.scaleInPlace(a),this.l21.scaleInPlace(a),this.l22.scaleInPlace(a)}convertIncidentRadianceToIrradiance(){this.l00.scaleInPlace(R[0]),this.l1_1.scaleInPlace(R[1]),this.l10.scaleInPlace(R[2]),this.l11.scaleInPlace(R[3]),this.l2_2.scaleInPlace(R[4]),this.l2_1.scaleInPlace(R[5]),this.l20.scaleInPlace(R[6]),this.l21.scaleInPlace(R[7]),this.l22.scaleInPlace(R[8])}convertIrradianceToLambertianRadiance(){this.scaleInPlace(1/Math.PI)}preScaleForRendering(){this.preScaled=!0,this.l00.scaleInPlace(D[0]),this.l1_1.scaleInPlace(D[1]),this.l10.scaleInPlace(D[2]),this.l11.scaleInPlace(D[3]),this.l2_2.scaleInPlace(D[4]),this.l2_1.scaleInPlace(D[5]),this.l20.scaleInPlace(D[6]),this.l21.scaleInPlace(D[7]),this.l22.scaleInPlace(D[8])}updateFromArray(a){return s.o.FromArrayToRef(a[0],0,this.l00),s.o.FromArrayToRef(a[1],0,this.l1_1),s.o.FromArrayToRef(a[2],0,this.l10),s.o.FromArrayToRef(a[3],0,this.l11),s.o.FromArrayToRef(a[4],0,this.l2_2),s.o.FromArrayToRef(a[5],0,this.l2_1),s.o.FromArrayToRef(a[6],0,this.l20),s.o.FromArrayToRef(a[7],0,this.l21),s.o.FromArrayToRef(a[8],0,this.l22),this}updateFromFloatsArray(a){return s.o.FromFloatsToRef(a[0],a[1],a[2],this.l00),s.o.FromFloatsToRef(a[3],a[4],a[5],this.l1_1),s.o.FromFloatsToRef(a[6],a[7],a[8],this.l10),s.o.FromFloatsToRef(a[9],a[10],a[11],this.l11),s.o.FromFloatsToRef(a[12],a[13],a[14],this.l2_2),s.o.FromFloatsToRef(a[15],a[16],a[17],this.l2_1),s.o.FromFloatsToRef(a[18],a[19],a[20],this.l20),s.o.FromFloatsToRef(a[21],a[22],a[23],this.l21),s.o.FromFloatsToRef(a[24],a[25],a[26],this.l22),this}static wi(a){return(new U).updateFromArray(a)}static FromPolynomial(a){const x=new U;return x.l00=a.xx.scale(.376127).add(a.yy.scale(.376127)).add(a.zz.scale(.376126)),x.l1_1=a.y.scale(.977204),x.l10=a.z.scale(.977204),x.l11=a.x.scale(.977204),x.l2_2=a.xy.scale(1.16538),x.l2_1=a.yz.scale(1.16538),x.l20=a.zz.scale(1.34567).Ag(a.xx.scale(.672834)).Ag(a.yy.scale(.672834)),x.l21=a.zx.scale(1.16538),x.l22=a.xx.scale(1.16538).Ag(a.yy.scale(1.16538)),x.l1_1.scaleInPlace(-1),x.l11.scaleInPlace(-1),x.l2_1.scaleInPlace(-1),x.l21.scaleInPlace(-1),x.scaleInPlace(Math.PI),x}}class W{constructor(){this.x=s.o.Zero(),this.y=s.o.Zero(),this.z=s.o.Zero(),this.xx=s.o.Zero(),this.yy=s.o.Zero(),this.zz=s.o.Zero(),this.xy=s.o.Zero(),this.yz=s.o.Zero(),this.zx=s.o.Zero()}get preScaledHarmonics(){return this._harmonics||(this._harmonics=U.FromPolynomial(this)),this._harmonics.preScaled||this._harmonics.preScaleForRendering(),this._harmonics}addAmbient(a){h.d.Oi[0].ki(a.r,a.g,a.b);const x=h.d.Oi[0];this.xx.addInPlace(x),this.yy.addInPlace(x),this.zz.addInPlace(x)}scaleInPlace(a){this.x.scaleInPlace(a),this.y.scaleInPlace(a),this.z.scaleInPlace(a),this.xx.scaleInPlace(a),this.yy.scaleInPlace(a),this.zz.scaleInPlace(a),this.yz.scaleInPlace(a),this.zx.scaleInPlace(a),this.xy.scaleInPlace(a)}updateFromHarmonics(a){return this._harmonics=a,this.x.p(a.l11),this.x.scaleInPlace(1.02333).scaleInPlace(-1),this.y.p(a.l1_1),this.y.scaleInPlace(1.02333).scaleInPlace(-1),this.z.p(a.l10),this.z.scaleInPlace(1.02333),this.xx.p(a.l00),h.d.Oi[0].p(a.l20).scaleInPlace(.247708),h.d.Oi[1].p(a.l22).scaleInPlace(.429043),this.xx.scaleInPlace(.886277).Ni(h.d.Oi[0]).addInPlace(h.d.Oi[1]),this.yy.p(a.l00),this.yy.scaleInPlace(.886277).Ni(h.d.Oi[0]).Ni(h.d.Oi[1]),this.zz.p(a.l00),h.d.Oi[0].p(a.l20).scaleInPlace(.495417),this.zz.scaleInPlace(.886277).addInPlace(h.d.Oi[0]),this.yz.p(a.l2_1),this.yz.scaleInPlace(.858086).scaleInPlace(-1),this.zx.p(a.l21),this.zx.scaleInPlace(.858086).scaleInPlace(-1),this.xy.p(a.l2_2),this.xy.scaleInPlace(.858086),this.scaleInPlace(1/Math.PI),this}static FromHarmonics(a){return(new W).updateFromHarmonics(a)}static wi(a){const x=new W;return s.o.FromArrayToRef(a[0],0,x.x),s.o.FromArrayToRef(a[1],0,x.y),s.o.FromArrayToRef(a[2],0,x.z),s.o.FromArrayToRef(a[3],0,x.xx),s.o.FromArrayToRef(a[4],0,x.yy),s.o.FromArrayToRef(a[5],0,x.zz),s.o.FromArrayToRef(a[6],0,x.yz),s.o.FromArrayToRef(a[7],0,x.zx),s.o.FromArrayToRef(a[8],0,x.xy),x}}},2304:(a,x,Q)=>{Q.d(x,{d:()=>U});var s=Q(679),h=Q(699),D=Q(2272),N=Q(683),C=Q(722);class R{constructor(a,x,Q,s){this.name=a,this.worldAxisForNormal=x,this.worldAxisForFileX=Q,this.worldAxisForFileY=s}}class U{static ConvertCubeMapTextureToSphericalPolynomial(a){var x;if(!a.isCube)return null;null===(x=a.va())||void 0===x||x.getEngine().flushFramebuffer();const Q=a.getSize().width,s=a.readPixels(0,void 0,void 0,!1),h=a.readPixels(1,void 0,void 0,!1);let D,N;a.isRenderTarget?(D=a.readPixels(3,void 0,void 0,!1),N=a.readPixels(2,void 0,void 0,!1)):(D=a.readPixels(2,void 0,void 0,!1),N=a.readPixels(3,void 0,void 0,!1));const C=a.readPixels(4,void 0,void 0,!1),R=a.readPixels(5,void 0,void 0,!1),U=a.gammaSpace;let W=0;return 1!=a.textureType&&2!=a.textureType||(W=1),new Promise((a=>{Promise.all([h,s,D,N,C,R]).then((x=>{let[s,h,D,N,C,R]=x;const v={size:Q,right:h,left:s,up:D,down:N,front:C,back:R,format:5,type:W,gammaSpace:U};a(this.ConvertCubeMapToSphericalPolynomial(v))}))}))}static _AreaElement(a,x){return Math.atan2(a*x,Math.sqrt(a*a+x*x+1))}static ConvertCubeMapToSphericalPolynomial(a){const x=new D.e;let Q=0;const s=2/a.size,R=s,U=.5*s,W=U-1;for(let D=0;D<6;D++){const v=this._FileFaces[D],e=a[v.name];let p=W;const j=5===a.format?4:3;for(let D=0;D<a.size;D++){let H=W;for(let R=0;R<a.size;R++){const W=v.worldAxisForFileX.scale(H).add(v.worldAxisForFileY.scale(p)).add(v.worldAxisForNormal);W.normalize();const d=this._AreaElement(H-U,p-U)-this._AreaElement(H-U,p+U)-this._AreaElement(H+U,p-U)+this._AreaElement(H+U,p+U);let i=e[D*a.size*j+R*j+0],Z=e[D*a.size*j+R*j+1],y=e[D*a.size*j+R*j+2];isNaN(i)&&(i=0),isNaN(Z)&&(Z=0),isNaN(y)&&(y=0),0===a.type&&(i/=255,Z/=255,y/=255),a.gammaSpace&&(i=Math.pow((0,h.c)(i),N.l),Z=Math.pow((0,h.c)(Z),N.l),y=Math.pow((0,h.c)(y),N.l));const k=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const a=Math.max(i,Z,y);if(a>k){const x=k/a;i*=x,Z*=x,y*=x}}else i=(0,h.c)(i,0,k),Z=(0,h.c)(Z,0,k),y=(0,h.c)(y,0,k);const F=new C.b(i,Z,y);x.addLight(W,F,d),Q+=d,H+=s}p+=R}}const v=6*(4*Math.PI)/6/Q;return x.scaleInPlace(v),x.convertIncidentRadianceToIrradiance(),x.convertIrradianceToLambertianRadiance(),D.f.FromHarmonics(x)}}U._FileFaces=[new R("right",new s.o(1,0,0),new s.o(0,0,-1),new s.o(0,-1,0)),new R("left",new s.o(-1,0,0),new s.o(0,0,1),new s.o(0,-1,0)),new R("up",new s.o(0,1,0),new s.o(1,0,0),new s.o(0,0,1)),new R("down",new s.o(0,-1,0),new s.o(1,0,0),new s.o(0,0,-1)),new R("front",new s.o(0,0,1),new s.o(1,0,0),new s.o(0,-1,0)),new R("back",new s.o(0,0,-1),new s.o(-1,0,0),new s.o(0,-1,0))],U.MAX_HDRI_VALUE=4096,U.PRESERVE_CLAMPED_COLORS=!1},2309:(a,x,Q)=>{Q.d(x,{d:()=>R,g:()=>e,j:()=>v});Q(2315),Q(2331);var s=Q(2338),h=Q(568),D=Q(619),N=Q(714);class C extends s.e{getClassName(){return"PassPostProcess"}constructor(a,x){super(a,"pass",null,null,x,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0,arguments.length>5?arguments[5]:void 0,void 0,arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,void 0,null,arguments.length>7&&void 0!==arguments[7]&&arguments[7])}_gatherImports(a,x){a?(this._webGPUReady=!0,x.push(Promise.all([Q.e(32).then(Q.bind(Q,13140))]))):x.push(Promise.all([Q.e(33).then(Q.bind(Q,13145))])),super._gatherImports(a,x)}static _Parse(a,x,Q,s){return N.e.Parse((()=>new C(a.name,a.options,x,a.renderTargetSamplingMode,a._engine,a.reusable)),a,Q,s)}}(0,D.g)("BABYLON.PassPostProcess",C);s.e;function R(a,x,Q,h,D,N,C,R){const U=x.getEngine();return x.isReady=!1,D=D??x.samplingMode,h=h??x.type,N=N??x.format,C=C??x.width,R=R??x.height,-1===h&&(h=0),new Promise((W=>{const v=new s.e("postprocess",a,null,null,1,null,D,U,!1,void 0,h,void 0,null,!1,N);v.externalTextureSamplerBinding=!0;const e=U.createRenderTargetTexture({width:C,height:R},{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:D,type:h,format:N});v.onEffectCreatedObservable.addOnce((a=>{a.executeWhenCompiled((()=>{v.onApply=a=>{a._bindTexture("textureSampler",x),a.setFloat2("scale",1,1)},Q.postProcessManager.directRender([v],e,!0),U.restoreDefaultFramebuffer(),U._releaseTexture(x),v&&v.dispose(),e._swapAndDie(x),x.type=h,x.format=5,x.isReady=!0,W(x)}))}))}))}let U,W;function v(a){U||(U=new Float32Array(1),W=new Int32Array(U.buffer)),U[0]=a;const x=W[0];let Q=x>>16&32768,s=x>>12&2047;const h=x>>23&255;return h<103?Q:h>142?(Q|=31744,Q|=(255==h?0:1)&&8388607&x,Q):h<113?(s|=2048,Q|=(s>>114-h)+(s>>113-h&1),Q):(Q|=h-112<<10|s>>1,Q+=1&s,Q)}function e(a){const x=(32768&a)>>15,Q=(31744&a)>>10,s=1023&a;return 0===Q?(x?-1:1)*Math.pow(2,-14)*(s/Math.pow(2,10)):31==Q?s?NaN:1/0*(x?-1:1):(x?-1:1)*Math.pow(2,Q-15)*(1+s/Math.pow(2,10))}h.b._RescalePostProcessFactory=a=>new C("rescale",1,null,2,a,!1,0)},2338:(a,x,Q)=>{Q.d(x,{e:()=>j});var s=Q(652),h=Q(671),D=Q(493),N=Q(679),C=Q(570),R=Q(658),U=Q(714),W=Q(619),v=Q(568),e=Q(626),p=Q(2342);v.b.prototype.setTextureFromPostProcess=function(a,x,Q){var s;let h=null;x&&(x._forcedOutputTexture?h=x._forcedOutputTexture:x._textures.data[x._currentRenderTextureInd]&&(h=x._textures.data[x._currentRenderTextureInd])),this._bindTexture(a,(null===(s=h)||void 0===s?void 0:s.texture)??null,Q)},v.b.prototype.setTextureFromPostProcessOutput=function(a,x,Q){var s;this._bindTexture(a,(null===x||void 0===x||null===(s=x._outputTexture)||void 0===s?void 0:s.texture)??null,Q)},C.c.prototype.setTextureFromPostProcess=function(a,x){this._engine.setTextureFromPostProcess(this._samplers[a],x,a)},C.c.prototype.setTextureFromPostProcessOutput=function(a,x){this._engine.setTextureFromPostProcessOutput(this._samplers[a],x,a)};class j{static get ForceGLSL(){return p.e.ForceGLSL}static set ForceGLSL(a){p.e.ForceGLSL=a}static RegisterShaderCodeProcessing(a,x){p.e.RegisterShaderCodeProcessing(a,x)}get name(){return this._effectWrapper.name}set name(a){this._effectWrapper.name=a}get alphaMode(){return this._effectWrapper.alphaMode}set alphaMode(a){this._effectWrapper.alphaMode=a}get samples(){return this._samples}set samples(a){this._samples=Math.min(a,this._engine.getCaps().maxMSAASamples),this._textures.forEach((a=>{a.setSamples(this._samples)}))}get shaderLanguage(){return this._shaderLanguage}getEffectName(){return this._fragmentUrl}set onActivate(a){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),a&&(this._onActivateObserver=this.onActivateObservable.add(a))}set onSizeChanged(a){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(a)}set onApply(a){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(a)}set onBeforeRender(a){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(a)}set onAfterRender(a){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(a)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(a){this._forcedOutputTexture=a}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.ki(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}constructor(a,x,Q,s,C,R){var U;let W=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,v=arguments.length>7?arguments[7]:void 0,e=arguments.length>8?arguments[8]:void 0,H=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null,d=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,i=arguments.length>11&&void 0!==arguments[11]?arguments[11]:"postprocess",Z=arguments.length>12?arguments[12]:void 0,y=arguments.length>13&&void 0!==arguments[13]&&arguments[13],k=arguments.length>14&&void 0!==arguments[14]?arguments[14]:5,F=arguments.length>15?arguments[15]:void 0,g=arguments.length>16?arguments[16]:void 0;this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.Al=!0,this.forceAutoClearInAlphaMode=!1,this.animations=[],this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._webGPUReady=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new h.c(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new N.n(1,1),this._texelSize=N.n.Zero(),this.onActivateObservable=new D.e,this.onSizeChangedObservable=new D.e,this.onApplyObservable=new D.e,this.onBeforeRenderObservable=new D.e,this.onAfterRenderObservable=new D.e;let l,r=1,J=null;if(Q&&!Array.isArray(Q)){const a=Q;Q=a.uniforms??null,s=a.samplers??null,r=a.size??1,R=a.camera??null,W=a.samplingMode??1,v=a.Gi,e=a.reusable,H=Array.isArray(a.defines)?a.defines.join("\n"):a.defines??null,d=a.textureType??0,i=a.vertexUrl??"postprocess",Z=a.indexParameters,y=a.blockCompilation??!1,k=a.textureFormat??5,F=a.shaderLanguage??0,J=a.uniformBuffers??null,g=a.extraInitializations,l=a.effectWrapper}else C&&(r="number"===typeof C?C:{width:C.width,height:C.height});const K=!!l;if(this._effectWrapper=l??new p.e({name:a,useShaderStore:!0,useAsPostProcess:!0,fragmentShader:x,Gi:v||(null===(U=R)||void 0===U?void 0:U.va().getEngine()),uniforms:Q,samplers:s,uniformBuffers:J,defines:H,vertexUrl:i,indexParameters:Z,blockCompilation:y,shaderLanguage:F,extraInitializations:g}),this.name=a,this.onEffectCreatedObservable=this._effectWrapper.onEffectCreatedObservable,null!=R?(this._camera=R,this._scene=R.va(),R.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):v&&(this._engine=v,this._engine.postProcesses.push(this)),this._options=r,this.renderTargetSamplingMode=W||1,this._reusable=e||!1,this._textureType=d,this._textureFormat=k,this._shaderLanguage=F||0,this._samplers=s||[],-1===this._samplers.indexOf("textureSampler")&&this._samplers.push("textureSampler"),this._fragmentUrl=x,this._vertexUrl=i,this._parameters=Q||[],-1===this._parameters.indexOf("scale")&&this._parameters.push("scale"),this._uniformBuffers=J||[],this._indexParameters=Z,!K){this._webGPUReady=1===this._shaderLanguage;const a=[];this._gatherImports(this._engine.isWebGPU&&!j.ForceGLSL,a),this._effectWrapper._webGPUReady=this._webGPUReady,this._effectWrapper._postConstructor(y,H,g,a)}}_gatherImports(){let a=arguments.length>1?arguments[1]:void 0;arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&this._webGPUReady?a.push(Promise.all([Q.e(36).then(Q.bind(Q,13156))])):a.push(Promise.all([Promise.resolve().then(Q.bind(Q,2347))]))}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._effectWrapper.drawWrapper.effect}shareOutputWith(a){return this._disposeTextures(),this._shareOutputWithPostProcess=a,this}useOwnOutput(){0==this._textures.length&&(this._textures=new h.c(2)),this._shareOutputWithPostProcess=null}updateEffect(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3?arguments[3]:void 0,h=arguments.length>4?arguments[4]:void 0,D=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0,C=arguments.length>7?arguments[7]:void 0;this._effectWrapper.updateEffect(a,x,Q,s,h,D,N,C),this._postProcessDefines=Array.isArray(this._effectWrapper.options.defines)?this._effectWrapper.options.defines.join("\n"):this._effectWrapper.options.defines}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;for(let h=0;h<this._textureCache.length;h++)if(this._textureCache[h].texture.width===a.width&&this._textureCache[h].texture.height===a.height&&this._textureCache[h].postProcessChannel===Q&&this._textureCache[h].texture._generateDepthBuffer===x.generateDepthBuffer&&this._textureCache[h].texture.samples===x.samples)return this._textureCache[h].texture;const s=this._engine.createRenderTargetTexture(a,x);return this._textureCache.push({texture:s,postProcessChannel:Q,lastUsedRenderId:-1}),s}_flushTextureCache(){const a=this._renderId;for(let x=this._textureCache.length-1;x>=0;x--)if(a-this._textureCache[x].lastUsedRenderId>100){let a=!1;for(let Q=0;Q<this._textures.length;Q++)if(this._textures.data[Q]===this._textureCache[x].texture){a=!0;break}a||(this._textureCache[x].texture.dispose(),this._textureCache.splice(x,1))}}resize(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this._textures.length>0&&this._textures.reset(),this.width=a,this.height=x;let D=null;if(Q)for(let R=0;R<Q._postProcesses.length;R++)if(null!==Q._postProcesses[R]){D=Q._postProcesses[R];break}const N={width:this.width,height:this.height},C={generateMipMaps:s,generateDepthBuffer:h||D===this,generateStencilBuffer:(h||D===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples,label:"PostProcessRTT-"+this.name};this._textures.push(this._createRenderTargetTexture(N,C,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(N,C,1)),this._texelSize.ki(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}_getTarget(){let a;if(this._shareOutputWithPostProcess)a=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)a=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{let x;a=this.inputTexture;for(let Q=0;Q<this._textureCache.length;Q++)if(this._textureCache[Q].texture===a){x=this._textureCache[Q];break}x&&(x.lastUsedRenderId=this._renderId)}return a}activate(a){var x,Q;let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,h=arguments.length>2?arguments[2]:void 0;const D=(a=a||this._camera).va(),N=D.getEngine(),C=N.getCaps().maxTextureSize,R=(s?s.width:this._engine.getRenderWidth(!0))*this._options|0,U=(s?s.height:this._engine.getRenderHeight(!0))*this._options|0;let W=this._options.width||R,v=this._options.height||U;const p=7!==this.renderTargetSamplingMode&&1!==this.renderTargetSamplingMode&&2!==this.renderTargetSamplingMode;let j=null;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const a=N.currentViewport;a&&(W*=a.width,v*=a.height)}(p||this.alwaysForcePOT)&&(this._options.width||(W=N.needPOTTextures?(0,e.h)(W,C,this.scaleMode):W),this._options.height||(v=N.needPOTTextures?(0,e.h)(v,C,this.scaleMode):v)),this.width===W&&this.height===v&&(j=this._getTarget())||this.resize(W,v,a,p,h),this._textures.forEach((a=>{a.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(a,this.samples)})),this._flushTextureCache(),this._renderId++}return j||(j=this._getTarget()),this.enablePixelPerfectMode?(this._scaleRatio.ki(R/W,U/v),this._engine.bindFramebuffer(j,0,R,U,this.forceFullscreenViewport)):(this._scaleRatio.ki(1,1),this._engine.bindFramebuffer(j,0,void 0,void 0,this.forceFullscreenViewport)),null===(x=(Q=this._engine)._debugInsertMarker)||void 0===x||x.call(Q,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(a),this.Al&&(0===this.alphaMode||this.forceAutoClearInAlphaMode)&&this._engine.clear(this.clearColor?this.clearColor:D.clearColor,D._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),j}get isSupported(){return this._effectWrapper.drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){return this._effectWrapper.isReady()}apply(){if(!this._effectWrapper.isReady())return null;let a;var x;(this._engine.enableEffect(this._effectWrapper.drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a),a=this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?this._forcedOutputTexture:this.inputTexture,this.externalTextureSamplerBinding)||this._effectWrapper.drawWrapper.effect._bindTexture("textureSampler",null===(x=a)||void 0===x?void 0:x.texture);return this._effectWrapper.drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._effectWrapper.drawWrapper.effect),this._effectWrapper.bind(),this._effectWrapper.drawWrapper.effect}_disposeTextures(){this._shareOutputWithPostProcess||this._forcedOutputTexture?this._disposeTextureCache():(this._disposeTextureCache(),this._textures.dispose())}_disposeTextureCache(){for(let a=this._textureCache.length-1;a>=0;a--)this._textureCache[a].texture.dispose();this._textureCache.length=0}setPrePassRenderer(a){return!!this._prePassEffectConfiguration&&(this._prePassEffectConfiguration=a.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0)}dispose(a){let x;if(a=a||this._camera,this._disposeTextures(),this._scene&&(x=this._scene.postProcesses.indexOf(this),-1!==x&&this._scene.postProcesses.splice(x,1)),this._parentContainer){const a=this._parentContainer.postProcesses.indexOf(this);a>-1&&this._parentContainer.postProcesses.splice(a,1),this._parentContainer=null}if(x=this._engine.postProcesses.indexOf(this),-1!==x&&this._engine.postProcesses.splice(x,1),a){if(a.detachPostProcess(this),x=a._postProcesses.indexOf(this),0===x&&a._postProcesses.length>0){const a=this._camera._getFirstPostProcess();a&&a.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear(),this.onEffectCreatedObservable.clear()}}serialize(){const a=U.e.Serialize(this),x=this.getCamera()||this._scene&&this._scene.activeCamera;return a.customType="BABYLON."+this.getClassName(),a.cameraId=x?x.id:null,a.reusable=this._reusable,a.textureType=this._textureType,a.fragmentUrl=this._fragmentUrl,a.parameters=this._parameters,a.samplers=this._samplers,a.uniformBuffers=this._uniformBuffers,a.options=this._options,a.defines=this._postProcessDefines,a.textureFormat=this._textureFormat,a.vertexUrl=this._vertexUrl,a.indexParameters=this._indexParameters,a}clone(){const a=this.serialize();a._engine=this._engine,a.cameraId=null;const x=j.Parse(a,this._scene,"");return x?(x.onActivateObservable=this.onActivateObservable.clone(),x.onSizeChangedObservable=this.onSizeChangedObservable.clone(),x.onApplyObservable=this.onApplyObservable.clone(),x.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),x.onAfterRenderObservable=this.onAfterRenderObservable.clone(),x._prePassEffectConfiguration=this._prePassEffectConfiguration,x):null}static Parse(a,x,Q){const s=(0,W.c)(a.customType);if(!s||!s._Parse)return null;const h=x?x.getCameraById(a.cameraId):null;return s._Parse(a,h,x,Q)}static _Parse(a,x,Q,s){return U.e.Parse((()=>new j(a.name,a.fragmentUrl,a.parameters,a.samplers,a.options,x,a.renderTargetSamplingMode,a._engine,a.reusable,a.defines,a.textureType,a.vertexUrl,a.indexParameters,!1,a.textureFormat)),a,Q,s)}}(0,s.c)([(0,R.I)()],j.prototype,"uniqueId",void 0),(0,s.c)([(0,R.I)()],j.prototype,"name",null),(0,s.c)([(0,R.I)()],j.prototype,"width",void 0),(0,s.c)([(0,R.I)()],j.prototype,"height",void 0),(0,s.c)([(0,R.I)()],j.prototype,"renderTargetSamplingMode",void 0),(0,s.c)([(0,R.m)()],j.prototype,"clearColor",void 0),(0,s.c)([(0,R.I)()],j.prototype,"Al",void 0),(0,s.c)([(0,R.I)()],j.prototype,"forceAutoClearInAlphaMode",void 0),(0,s.c)([(0,R.I)()],j.prototype,"alphaMode",null),(0,s.c)([(0,R.I)()],j.prototype,"alphaConstants",void 0),(0,s.c)([(0,R.I)()],j.prototype,"enablePixelPerfectMode",void 0),(0,s.c)([(0,R.I)()],j.prototype,"forceFullscreenViewport",void 0),(0,s.c)([(0,R.I)()],j.prototype,"scaleMode",void 0),(0,s.c)([(0,R.I)()],j.prototype,"alwaysForcePOT",void 0),(0,s.c)([(0,R.I)("samples")],j.prototype,"_samples",void 0),(0,s.c)([(0,R.I)()],j.prototype,"adaptScaleToCurrentViewport",void 0),(0,W.g)("BABYLON.PostProcess",j)},2334:(a,x,Q)=>{Q.d(x,{d:()=>D});var s=Q(747),h=Q(493);class D{constructor(a){this._vertexBuffers={},this.onBeforeRenderObservable=new h.e,this._scene=a}_prepareBuffers(){if(this._vertexBuffers[s.g.PositionKind])return;const a=[];a.push(1,1),a.push(-1,1),a.push(-1,-1),a.push(1,-1),this._vertexBuffers[s.g.PositionKind]=new s.g(this._scene.getEngine(),a,s.g.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const a=[];a.push(0),a.push(1),a.push(2),a.push(0),a.push(2),a.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(a)}_rebuild(){const a=this._vertexBuffers[s.g.PositionKind];a&&(a._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const Q=this._scene.activeCamera;return!!Q&&(x=x||Q._postProcesses.filter((a=>null!=a)),!(!x||0===x.length||!this._scene.postProcessesEnabled)&&(x[0].activate(Q,a,null!==x&&void 0!==x),!0))}directRender(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const N=this._scene.getEngine();for(let R=0;R<a.length;R++){var C;if(R<a.length-1)a[R+1].activate(this._scene.activeCamera,null===x||void 0===x?void 0:x.texture);else x?N.bindFramebuffer(x,s,void 0,void 0,Q,h):D||N.restoreDefaultFramebuffer(),null===(C=N._debugInsertMarker)||void 0===C||C.call(N,`post process ${a[R].name} output`);const U=a[R],W=U.apply();W&&(U.onBeforeRenderObservable.notifyObservers(W),this._prepareBuffers(),N.bindBuffers(this._vertexBuffers,this._indexBuffer,W),N.drawElementsType(0,0,6),U.onAfterRenderObservable.notifyObservers(W))}N.setDepthBuffer(!0),N.setDepthWrite(!0)}_finalizeFrame(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const D=this._scene.activeCamera;if(!D)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(s=s||D._postProcesses.filter((a=>null!=a))).length||!this._scene.postProcessesEnabled)return;const N=this._scene.getEngine();for(let R=0,U=s.length;R<U;R++){const W=s[R];var C;if(R<U-1)W._outputTexture=s[R+1].activate(D,null===x||void 0===x?void 0:x.texture);else x?(N.bindFramebuffer(x,Q,void 0,void 0,h),W._outputTexture=x):(N.restoreDefaultFramebuffer(),W._outputTexture=null),null===(C=N._debugInsertMarker)||void 0===C||C.call(N,`post process ${s[R].name} output`);if(a)break;const v=W.apply();v&&(W.onBeforeRenderObservable.notifyObservers(v),this._prepareBuffers(),N.bindBuffers(this._vertexBuffers,this._indexBuffer,v),N.drawElementsType(0,0,6),W.onAfterRenderObservable.notifyObservers(v))}N.setDepthBuffer(!0),N.setDepthWrite(!0),N.setAlphaMode(0)}dispose(){const a=this._vertexBuffers[s.g.PositionKind];a&&(a.dispose(),this._vertexBuffers[s.g.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},2336:(a,x,Q)=>{Q.d(x,{c:()=>C});var s=Q(671),h=Q(679);class D{set opaqueSortCompareFn(a){this._opaqueSortCompareFn=a||D.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(a){this._alphaTestSortCompareFn=a||D.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(a){this._transparentSortCompareFn=a||D.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=a,this._opaqueSubMeshes=new s.c(256),this._transparentSubMeshes=new s.c(256),this._alphaTestSubMeshes=new s.c(256),this._depthOnlySubMeshes=new s.c(256),this._particleSystems=new s.c(256),this._spriteManagers=new s.c(256),this._empty=!0,this._edgesRenderers=new s.b(16),this._scene=x,this.opaqueSortCompareFn=Q,this.alphaTestSortCompareFn=h,this.transparentSortCompareFn=D}render(a,x,Q,s){if(a)return void a(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const h=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(h.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),h.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const D=h.getStencilBuffer();if(h.setStencilBuffer(!1),x&&this._renderSprites(),Q&&this._renderParticles(s),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(h.setStencilBuffer(D),this._scene.useOrderIndependentTransparency){const a=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);a.length&&this._renderTransparent(a)}else this._renderTransparent(this._transparentSubMeshes);h.setAlphaMode(0)}if(h.setStencilBuffer(!1),this._edgesRenderers.length){for(let a=0;a<this._edgesRenderers.length;a++)this._edgesRenderers.data[a].render();h.setAlphaMode(0)}h.setStencilBuffer(D)}_renderOpaqueSorted(a){D._RenderSorted(a,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(a){D._RenderSorted(a,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(a){D._RenderSorted(a,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(a,x,Q,s){let N,C=0;const R=Q?Q.globalPosition:D._ZeroVector;if(s)for(;C<a.length;C++)N=a.data[C],N._alphaIndex=N.getMesh().alphaIndex,N._distanceToCamera=h.o.Distance(N.getBoundingInfo().boundingSphere.centerWorld,R);const U=a.length===a.data.length?a.data:a.data.slice(0,a.length);x&&U.sort(x);const W=U[0].getMesh().va();for(C=0;C<U.length;C++)if(N=U[C],!W._activeMeshesFrozenButKeepClipping||N.isInFrustum(W._frustumPlanes)){if(s){const a=N.Ha();if(a&&a.needDepthPrePass){const x=a.va().getEngine();x.setColorWrite(!1),x.setAlphaMode(0),N.render(!1),x.setColorWrite(!0)}}N.render(s)}}static defaultTransparentSortCompare(a,x){return a._alphaIndex>x._alphaIndex?1:a._alphaIndex<x._alphaIndex?-1:D.backToFrontSortCompare(a,x)}static backToFrontSortCompare(a,x){return a._distanceToCamera<x._distanceToCamera?1:a._distanceToCamera>x._distanceToCamera?-1:0}static frontToBackSortCompare(a,x){return a._distanceToCamera<x._distanceToCamera?-1:a._distanceToCamera>x._distanceToCamera?1:0}static PainterSortCompare(a,x){const Q=a.getMesh(),s=x.getMesh();return Q.material&&s.material?Q.material.uniqueId-s.material.uniqueId:Q.uniqueId-s.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(a,x,Q){void 0===x&&(x=a.getMesh()),void 0===Q&&(Q=a.Ha()),null!==Q&&void 0!==Q&&(Q.needAlphaBlendingForMesh(x)?this._transparentSubMeshes.push(a):Q.needAlphaTesting()?(Q.needDepthPrePass&&this._depthOnlySubMeshes.push(a),this._alphaTestSubMeshes.push(a)):(Q.needDepthPrePass&&this._depthOnlySubMeshes.push(a),this._opaqueSubMeshes.push(a)),x._renderingGroup=this,x._edgesRenderer&&x.isEnabled()&&x.isVisible&&x._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(x._edgesRenderer),this._empty=!1)}dispatchSprites(a){this._spriteManagers.push(a),this._empty=!1}dispatchParticles(a){this._particleSystems.push(a),this._empty=!1}_renderParticles(a){if(0===this._particleSystems.length)return;const x=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let Q=0;Q<this._particleSystems.length;Q++){const s=this._particleSystems.data[Q];if(0===(x&&x.layerMask&s.layerMask))continue;const h=s.j;h.position&&a&&-1===a.indexOf(h)||this._scene._activeParticles.addCount(s.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const a=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let x=0;x<this._spriteManagers.length;x++){const Q=this._spriteManagers.data[x];0!==(a&&a.layerMask&Q.layerMask)&&Q.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}D._ZeroVector=h.o.Zero();class N{}class C{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(a){a!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=a,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const a of this._scene.meshes)if(a.si)for(const x of a.si)x._wasDispatched=!1;if(this._scene.spriteManagers)for(const a of this._scene.spriteManagers)a._wasDispatched=!1;for(const a of this._scene.oi)a._wasDispatched=!1}constructor(a){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new N,this._maintainStateBetweenFrames=!1,this._scene=a;for(let x=C.MIN_RENDERINGGROUPS;x<C.MAX_RENDERINGGROUPS;x++)this._autoClearDepthStencil[x]={Al:!0,depth:!0,stencil:!0}}getRenderingGroup(a){const x=a||0;return this._prepareRenderingGroup(x),this._renderingGroups[x]}_clearDepthStencilBuffer(){let a=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,a,x),this._depthStencilBufferAlreadyCleaned=!0)}render(a,x,Q,s){const h=this._renderingGroupInfo;if(h.fi=this._scene,h.camera=this._scene.activeCamera,this._scene.spriteManagers&&s)for(let D=0;D<this._scene.spriteManagers.length;D++){const a=this._scene.spriteManagers[D];this.dispatchSprites(a)}for(let D=C.MIN_RENDERINGGROUPS;D<C.MAX_RENDERINGGROUPS;D++){this._depthStencilBufferAlreadyCleaned=D===C.MIN_RENDERINGGROUPS;const N=this._renderingGroups[D];if(!N||N._empty)continue;const R=1<<D;if(h.renderingGroupId=D,this._scene.onBeforeRenderingGroupObservable.notifyObservers(h,R),C.AUTOCLEAR){const a=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(D):this._autoClearDepthStencil[D];a&&a.Al&&this._clearDepthStencilBuffer(a.depth,a.stencil)}for(const a of this._scene._beforeRenderingGroupDrawStage)a.action(D);N.render(a,s,Q,x);for(const a of this._scene._afterRenderingGroupDrawStage)a.action(D);this._scene.onAfterRenderingGroupObservable.notifyObservers(h,R)}}reset(){if(!this.maintainStateBetweenFrames)for(let a=C.MIN_RENDERINGGROUPS;a<C.MAX_RENDERINGGROUPS;a++){const x=this._renderingGroups[a];x&&x.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let a=C.MIN_RENDERINGGROUPS;a<C.MAX_RENDERINGGROUPS;a++){const x=this._renderingGroups[a];x&&x.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let a=C.MIN_RENDERINGGROUPS;a<C.MAX_RENDERINGGROUPS;a++){const x=this._renderingGroups[a];x&&x.dispose()}}_prepareRenderingGroup(a){void 0===this._renderingGroups[a]&&(this._renderingGroups[a]=new D(a,this._scene,this._customOpaqueSortCompareFn[a],this._customAlphaTestSortCompareFn[a],this._customTransparentSortCompareFn[a]))}dispatchSprites(a){this.maintainStateBetweenFrames&&a._wasDispatched||(a._wasDispatched=!0,this.getRenderingGroup(a.renderingGroupId).dispatchSprites(a))}dispatchParticles(a){this.maintainStateBetweenFrames&&a._wasDispatched||(a._wasDispatched=!0,this.getRenderingGroup(a.renderingGroupId).dispatchParticles(a))}dispatch(a,x,Q){void 0===x&&(x=a.getMesh()),this.maintainStateBetweenFrames&&a._wasDispatched||(a._wasDispatched=!0,this.getRenderingGroup(x.renderingGroupId).dispatch(a,x,Q))}setRenderingOrder(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[a]=x,this._customAlphaTestSortCompareFn[a]=Q,this._customTransparentSortCompareFn[a]=s,this._renderingGroups[a]){const x=this._renderingGroups[a];x.opaqueSortCompareFn=this._customOpaqueSortCompareFn[a],x.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[a],x.transparentSortCompareFn=this._customTransparentSortCompareFn[a]}}setRenderingAutoClearDepthStencil(a,x){let Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[a]={Al:x,depth:Q,stencil:s}}getAutoClearDepthStencilSetup(a){return this._autoClearDepthStencil[a]}}C.MAX_RENDERINGGROUPS=4,C.MIN_RENDERINGGROUPS=0,C.AUTOCLEAR=!0},2347:(a,x,Q)=>{Q.r(x),Q.d(x,{postprocessVertexShader:()=>D});const s="postprocessVertexShader",h="attribute vec2 position;uniform vec2 scale;varying vec2 vUV;const vec2 madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvUV=(position*madd+madd)*scale;gl_Position=vec4(position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";Q(574).b.ShadersStore[s]=h;const D={name:s,shader:h}}}]);