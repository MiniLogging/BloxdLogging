"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[3],{2377:(k,M,F)=>{F.d(M,{c:()=>U});var l=F(477),t=F(682),g=F(2361),B=F(2383),G=F(2392),A=F(694),N=F(629),d=F(559),L=F(487);d.e.prototype.setDepthStencilTexture=function(k,M){this._engine.setDepthStencilTexture(this._samplers[k],this._uniforms[k],M,k)};class U extends g.d{get renderList(){return this._renderList}set renderList(k){this._renderList!==k&&(this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),k&&(this._unObserveRenderList=(0,A.k)(k,this._renderListHasChanged)),this._renderList=k)}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(k){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(k)}set onBeforeRender(k){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(k)}set onAfterRender(k){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(k)}set onClear(k){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(k)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(k,M){let F;F=Array.isArray(k)?k:[k];for(let l=0;l<F.length;++l)for(let k=0;k<this._renderPassIds.length;++k)F[l].setMaterialForRenderPass(this._renderPassIds[k],void 0!==M?Array.isArray(M)?M[k]:M:void 0)}get isMulti(){var k;return(null===(k=this._renderTarget)||void 0===k?void 0:k.isMulti)??!1}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(k){if(this._boundingBoxSize&&this._boundingBoxSize.equals(k))return;this._boundingBoxSize=k;const M=this.va();M&&M.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var k;return(null===(k=this._renderTarget)||void 0===k?void 0:k._depthStencilTexture)??null}constructor(k,M,F){let B,A=arguments.length>3&&void 0!==arguments[3]&&arguments[3],N=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]?arguments[7]:g.d.TRILINEAR_SAMPLINGMODE,O=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],w=arguments.length>9&&void 0!==arguments[9]&&arguments[9],Z=arguments.length>10&&void 0!==arguments[10]&&arguments[10],R=arguments.length>11&&void 0!==arguments[11]?arguments[11]:5,y=arguments.length>12&&void 0!==arguments[12]&&arguments[12],m=arguments.length>13?arguments[13]:void 0,o=arguments.length>14?arguments[14]:void 0,Q=arguments.length>15&&void 0!==arguments[15]&&arguments[15],v=arguments.length>16&&void 0!==arguments[16]&&arguments[16],J=!0;if("object"===typeof A){const k=A;A=!!k.generateMipMaps,N=k.doNotChangeAspectRatio??!0,d=k.type??0,L=!!k.isCube,U=k.samplingMode??g.d.TRILINEAR_SAMPLINGMODE,O=k.generateDepthBuffer??!0,w=!!k.generateStencilBuffer,Z=!!k.isMulti,R=k.format??5,y=!!k.delayAllocation,m=k.samples,o=k.creationFlags,Q=!!k.noColorAttachment,v=!!k.useSRGBBuffer,B=k.colorAttachment,J=k.gammaSpace??J}if(super(null,F,!A,void 0,U,void 0,void 0,void 0,void 0,R),this._unObserveRenderList=null,this._renderListHasChanged=(k,M)=>{const F=this._renderList?this._renderList.length:0;var l;(0===M&&F>0||0===F)&&(null===(l=this.va())||void 0===l||l.meshes.forEach((k=>{k._markSubMeshesAsLightDirty()})))},this.particleSystemList=null,this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new l.c,this.onAfterUnbindObservable=new l.c,this.onBeforeRenderObservable=new l.c,this.onAfterRenderObservable=new l.c,this.onClearObservable=new l.c,this.onResizeObservable=new l.c,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=t.m.Zero(),this._dumpToolsLoading=!1,!(F=this.va()))return;const n=this.va().getEngine();this._gammaSpace=J,this._coordinatesMode=g.d.PROJECTION_MODE,this.renderList=[],this.name=k,this.isRenderTarget=!0,this._initialSizeParameter=M,this._renderPassIds=[],this._isCubeData=L,this._processSizeParameter(M),this.renderPassId=this._renderPassIds[0],this._resizeObserver=n.onResizeObservable.add((()=>{})),this._generateMipMaps=!!A,this._doNotChangeAspectRatio=N,this._renderingManager=new G.c(F),this._renderingManager._useSceneAutoClearSetup=!0,Z||(this._renderTargetOptions={generateMipMaps:A,type:d,format:this._format??void 0,samplingMode:this.samplingMode,generateDepthBuffer:O,generateStencilBuffer:w,samples:m,creationFlags:o,noColorAttachment:Q,useSRGBBuffer:v,colorAttachment:B,label:this.name},this.samplingMode===g.d.NEAREST_SAMPLINGMODE&&(this.wrapU=g.d.CLAMP_ADDRESSMODE,this.wrapV=g.d.CLAMP_ADDRESSMODE),y||(L?(this._renderTarget=F.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=g.d.INVCUBIC_MODE,this._textureMatrix=t.c.Identity()):this._renderTarget=F.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==m&&(this.samples=m)))}createDepthStencilTexture(){var k;let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],l=arguments.length>2&&void 0!==arguments[2]&&arguments[2],t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:14,B=arguments.length>5?arguments[5]:void 0;null===(k=this._renderTarget)||void 0===k||k.createDepthStencilTexture(M,F,l,t,g,B)}_releaseRenderPassId(){if(this._scene){const k=this._scene.getEngine();for(let M=0;M<this._renderPassIds.length;++M)k.releaseRenderPassId(this._renderPassIds[M])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const k=this._scene.getEngine(),M=this._isCubeData?6:this.getRenderLayers()||1;for(let F=0;F<M;++F)this._renderPassIds[F]=k.createRenderPassId(`RenderTargetTexture - ${this.name}#${F}`)}_processSizeParameter(k){let M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(k.ratio){this._sizeRatio=k.ratio;const M=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(M.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(M.getRenderHeight(),this._sizeRatio)}}else this._size=k;M&&this._createRenderPassId()}get samples(){var k;return(null===(k=this._renderTarget)||void 0===k?void 0:k.samples)??this._samples}set samples(k){this._renderTarget&&(this._samples=this._renderTarget.setSamples(k))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(k){this._refreshRate=k,this.resetRefreshCounter()}addPostProcess(k){if(!this._postProcessManager){const k=this.va();if(!k)return;this._postProcessManager=new B.d(k),this._postProcesses=new Array}this._postProcesses.push(k),this._postProcesses[0].Gl=!1}clearPostProcesses(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this._postProcesses){if(k)for(const k of this._postProcesses)k.dispose();this._postProcesses=[]}}removePostProcess(k){if(!this._postProcesses)return;const M=this._postProcesses.indexOf(k);-1!==M&&(this._postProcesses.splice(M,1),this._postProcesses.length>0&&(this._postProcesses[0].Gl=!1))}_shouldRender(){return-1===this._currentRefreshId||this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const k=this._size.layers;if(k)return k;const M=this._size.depth;return M||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(k){const M=Math.max(1,this.getRenderSize()*k);this.resize(M)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(k){var M;const F=this.isCube;null===(M=this._renderTarget)||void 0===M||M.dispose(),this._renderTarget=null;const l=this.va();l&&(this._processSizeParameter(k,!1),this._renderTarget=F?l.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):l.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==this._renderTargetOptions.samples&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._render(k,M)}isReadyForRendering(){return this._dumpToolsLoading||(this._dumpToolsLoading=!0,F.e(9).then(F.bind(F,2492)).then((k=>this._dumpTools=k))),this._render(!1,!1,!0)}_render(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],M=arguments.length>1&&void 0!==arguments[1]&&arguments[1],F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=this.va();if(!l)return F;const t=l.getEngine();if(void 0!==this.useCameraPostProcesses&&(k=this.useCameraPostProcesses),this._waitingRenderList){if(!this.renderListPredicate){this.renderList=[];for(let k=0;k<this._waitingRenderList.length;k++){const M=this._waitingRenderList[k],F=l.getMeshById(M);F&&this.renderList.push(F)}}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const k=this.va();if(!k)return F;const M=k.meshes;for(let F=0;F<M.length;F++){const k=M[F];this.renderListPredicate(k)&&this.renderList.push(k)}}const g=t.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const B=this.activeCamera??l.activeCamera,G=l.activeCamera;B&&(B!==l.activeCamera&&(l.setTransformMatrix(B.getViewMatrix(),B.getProjectionMatrix(!0)),l.activeCamera=B),t.setViewport(B.rigParent?B.rigParent.viewport:B.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let A=F;if(F){l.getViewMatrix()||l.updateTransformMatrix();const k=this.is2DArray||this.is3D?this.getRenderLayers():this.isCube?6:1;for(let g=0;g<k&&A;g++){let k=null;const M=this.renderList?this.renderList:l.getActiveMeshes().data,B=this.renderList?this.renderList.length:l.getActiveMeshes().length;t.currentRenderPassId=this._renderPassIds[g],this.onBeforeRenderObservable.notifyObservers(g),this.getCustomRenderList&&(k=this.getCustomRenderList(g,M,B)),k||(k=M),this._doNotChangeAspectRatio||l.updateTransformMatrix(!0);for(let l=0;l<k.length&&A;++l){const M=k[l];if(M.isEnabled()&&!M.isBlocked&&M.isVisible&&M.rk)if(this.customIsReadyFunction){if(!this.customIsReadyFunction(M,this.refreshRate,F)){A=!1;continue}}else if(!M.isReady(!0)){A=!1;continue}}this.onAfterRenderObservable.notifyObservers(g),(this.is2DArray||this.is3D||this.isCube)&&(l.incrementRenderId(),l.resetCachedMaterial())}const M=this.particleSystemList||l.Ck;for(const F of M)F.isReady()||(A=!1)}else if(!this.is2DArray&&!this.is3D||this.isMulti)if(this.isCube&&!this.isMulti)for(let N=0;N<6;N++)this._renderToTarget(N,k,M,void 0,B),l.incrementRenderId(),l.resetCachedMaterial();else this._renderToTarget(0,k,M,void 0,B);else for(let N=0;N<this.getRenderLayers();N++)this._renderToTarget(0,k,M,N,B),l.incrementRenderId(),l.resetCachedMaterial();return this.onAfterUnbindObservable.notifyObservers(this),t.currentRenderPassId=g,l.activeCamera=G,G&&(this.activeCamera&&this.activeCamera!==l.activeCamera&&l.setTransformMatrix(G.getViewMatrix(),G.getProjectionMatrix(!0)),t.setViewport(G.viewport)),l.resetCachedMaterial(),A}_bestReflectionRenderTargetDimension(k,M){const F=k*M,l=(0,N.n)(F+16384/(128+F));return Math.min((0,N.b)(k),l)}_prepareRenderingManager(k,M,F,l){const t=this.va();if(!t)return;this._renderingManager.reset();const g=t.getRenderId();for(let G=0;G<M;G++){const M=k[G];if(M&&!M.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(M,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!M.isReady(0===this.refreshRate)){this.resetRefreshCounter();continue}if(!M._internalAbstractMeshDataInfo._currentLODIsUpToDate&&F&&(M._internalAbstractMeshDataInfo._currentLOD=t.customLODSelector?t.customLODSelector(M,F):M.getLOD(F),M._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!M._internalAbstractMeshDataInfo._currentLOD)continue;let k,B=M._internalAbstractMeshDataInfo._currentLOD;if(B!==M&&0!==B.billboardMode&&B.ck(),B._preActivateForIntermediateRendering(g),k=!(!l||!F)&&0===(M.layerMask&F.layerMask),M.isEnabled()&&M.isVisible&&M.rk&&!k){if(B!==M&&B._activate(g,!0),M._activate(g,!0)&&M.rk.length){M.isAnInstance?M._internalAbstractMeshDataInfo._actAsRegularMesh&&(B=M):B._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,B._internalAbstractMeshDataInfo._isActiveIntermediate=!0,t._prepareSkeleton(B);for(let k=0;k<B.rk.length;k++){const M=B.rk[k];this._renderingManager.dispatch(M,B)}}M._postActivate()}}}const B=this.particleSystemList||t.Ck;for(let G=0;G<B.length;G++){const k=B[G],M=k.j;k.isStarted()&&M&&(!M.position||M.isEnabled())&&this._renderingManager.dispatchParticles(k)}}_bindFrameBuffer(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const F=this.va();if(!F)return;const l=F.getEngine();this._renderTarget&&l.bindFramebuffer(this._renderTarget,this.isCube?k:void 0,void 0,void 0,this.ignoreCameraViewport,0,M)}_unbindFrameBuffer(k,M){this._renderTarget&&k.unBindFramebuffer(this._renderTarget,this.isCube,(()=>{this.onAfterRenderObservable.notifyObservers(M)}))}_prepareFrame(k,M,F,l){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):l&&k.postProcessManager._prepareFrame(this._texture)||this._bindFrameBuffer(M,F)}_renderToTarget(k,M,F){var l,t;let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const G=this.va();if(!G)return;const A=G.getEngine();this._prepareFrame(G,k,g,M),null===(l=A._debugPushGroup)||void 0===l||l.call(A,`render to face #${k} layer #${g}`,2),this.is2DArray||this.is3D?(A.currentRenderPassId=this._renderPassIds[g],this.onBeforeRenderObservable.notifyObservers(g)):(A.currentRenderPassId=this._renderPassIds[k],this.onBeforeRenderObservable.notifyObservers(k));if(A.snapshotRendering&&1===A.snapshotRenderingMode)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(A):this.skipInitialClear||A.clear(this.clearColor||G.clearColor,!0,!0,!0);else{var N;let l=null;const t=this.renderList?this.renderList:G.getActiveMeshes().data,d=this.renderList?this.renderList.length:G.getActiveMeshes().length;this.getCustomRenderList&&(l=this.getCustomRenderList(this.is2DArray||this.is3D?g:k,t,d)),l?this._prepareRenderingManager(l,l.length,B,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(t,d,B,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),l=t);for(const M of G._beforeRenderTargetClearStage)M.action(this,k,g);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(A):this.skipInitialClear||A.clear(this.clearColor||G.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||G.updateTransformMatrix(!0);for(const M of G._beforeRenderTargetDrawStage)M.action(this,k,g);this._renderingManager.render(this.customRenderFunction,l,this.renderParticles,this.renderSprites);for(const M of G._afterRenderTargetDrawStage)M.action(this,k,g);const U=(null===(N=this._texture)||void 0===N?void 0:N.generateMipMaps)??!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,k,this._postProcesses,this.ignoreCameraViewport):M&&G.postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,k);for(const M of G._afterRenderTargetPostProcessStage)M.action(this,k,g);this._texture&&(this._texture.generateMipMaps=U),this._doNotChangeAspectRatio||G.updateTransformMatrix(!0),F&&(this._dumpTools?this._dumpTools.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),A):L.c.Error("dumpTools module is still being loaded. To speed up the process import dump tools directly in your project"))}null===(t=A._debugPopGroup)||void 0===t||t.call(A,2),this._unbindFrameBuffer(A,k),this._texture&&this.isCube&&5===k&&A.generateMipMapsForCubemap(this._texture,!0)}setRenderingOrder(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(k,M,F,l)}setRenderingAutoClearDepthStencil(k,M){this._renderingManager.setRenderingAutoClearDepthStencil(k,M),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const k=this.getSize(),M=new U(this.name,k,this.va(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return M.yi=this.yi,M.level=this.level,M.coordinatesMode=this.coordinatesMode,this.renderList&&(M.renderList=this.renderList.slice(0)),M}serialize(){if(!this.name)return null;const k=super.serialize();if(k.renderTargetSize=this.getRenderSize(),k.renderList=[],this.renderList)for(let M=0;M<this.renderList.length;M++)k.renderList.push(this.renderList[M].id);return k}disposeFramebufferObjects(){var k;null===(k=this._renderTarget)||void 0===k||k.dispose(!0)}releaseInternalTexture(){var k;null===(k=this._renderTarget)||void 0===k||k.releaseTextures(),this._texture=null}dispose(){var k;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.va().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const M=this.va();if(!M)return;let F=M.customRenderTargets.indexOf(this);F>=0&&M.customRenderTargets.splice(F,1);for(const l of M.cameras)F=l.customRenderTargets.indexOf(this),F>=0&&l.customRenderTargets.splice(F,1);null===(k=this._renderTarget)||void 0===k||k.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===U.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=U.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}U.REFRESHRATE_RENDER_ONCE=0,U.REFRESHRATE_RENDER_ONEVERYFRAME=1,U.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,g.d._CreateRenderTargetTexture=(k,M,F,l,t)=>new U(k,M,F,l)},2409:(k,M,F)=>{F.d(M,{b:()=>N,e:()=>d});var l=F(733),t=F(724),g=F(477),B=F(559),G=F(775);F(2414);const A={xa:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class N{constructor(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:A;this._fullscreenViewport=new t.e(0,0,1,1);const F=M.xa??A.xa,g=M.indices??A.indices;this.Xj=k,this._vertexBuffers={[l.g.PositionKind]:new l.g(k,F,l.g.PositionKind,!1,!1,2)},this._indexBuffer=k.createIndexBuffer(g),this._onContextRestoredObserver=k.onContextRestoredObservable.add((()=>{this._indexBuffer=k.createIndexBuffer(g);for(const k in this._vertexBuffers){this._vertexBuffers[k]._rebuild()}}))}setViewport(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._fullscreenViewport;this.Xj.setViewport(k)}bindBuffers(k){this.Xj.bindBuffers(this._vertexBuffers,this._indexBuffer,k)}applyEffectWrapper(k){this.Xj.setState(!0),this.Xj.depthCullingState.depthTest=!1,this.Xj.stencilState.stencilTest=!1,this.Xj.enableEffect(k.drawWrapper),this.bindBuffers(k.effect),k.onApplyObservable.notifyObservers({})}saveStates(){this._savedStateDepthTest=this.Xj.depthCullingState.depthTest,this._savedStateStencilTest=this.Xj.stencilState.stencilTest}restoreStates(){this.Xj.depthCullingState.depthTest=this._savedStateDepthTest,this.Xj.stencilState.stencilTest=this._savedStateStencilTest}draw(){this.Xj.drawElementsType(0,0,6)}_isRenderTargetTexture(k){return void 0!==k.renderTarget}render(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!k.effect.isReady())return;this.saveStates(),this.setViewport();const F=null===M?null:this._isRenderTargetTexture(M)?M.renderTarget:M;F&&this.Xj.bindFramebuffer(F),this.applyEffectWrapper(k),this.draw(),F&&this.Xj.unBindFramebuffer(F),this.restoreStates()}dispose(){const k=this._vertexBuffers[l.g.PositionKind];k&&(k.dispose(),delete this._vertexBuffers[l.g.PositionKind]),this._indexBuffer&&this.Xj._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.Xj.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class d{static RegisterShaderCodeProcessing(k,M){M?d._CustomShaderCodeProcessing[k??""]=M:delete d._CustomShaderCodeProcessing[k??""]}static _GetShaderCodeProcessing(k){return d._CustomShaderCodeProcessing[k]??d._CustomShaderCodeProcessing[""]}get name(){return this.options.name}set name(k){this.options.name=k}isReady(){var k;return(null===(k=this._drawWrapper.effect)||void 0===k?void 0:k.isReady())??!1}get drawWrapper(){return this._drawWrapper}get effect(){return this._drawWrapper.effect}set effect(k){this._drawWrapper.effect=k}constructor(k){this.alphaMode=0,this.onEffectCreatedObservable=new g.c(void 0,!0),this.onApplyObservable=new g.c,this._shadersLoaded=!1,this._webGPUReady=!1,this._importPromises=[],this.options={...k,name:k.name||"effectWrapper",Xj:k.Xj,uniforms:k.uniforms||k.uniformNames||[],uniformNames:void 0,samplers:k.samplers||k.samplerNames||[],samplerNames:void 0,attributeNames:k.attributeNames||["position"],uniformBuffers:k.uniformBuffers||[],defines:k.defines||"",useShaderStore:k.useShaderStore||!1,vertexUrl:k.vertexUrl||k.vertexShader||"postprocess",vertexShader:void 0,fragmentShader:k.fragmentShader||"pass",indexParameters:k.indexParameters,blockCompilation:k.blockCompilation||!1,shaderLanguage:k.shaderLanguage||0,onCompiled:k.onCompiled||void 0,extraInitializations:k.extraInitializations||void 0,extraInitializationsAsync:k.extraInitializationsAsync||void 0,useAsPostProcess:k.useAsPostProcess??!1},this.options.uniformNames=this.options.uniforms,this.options.samplerNames=this.options.samplers,this.options.vertexShader=this.options.vertexUrl,this.options.useAsPostProcess&&(-1===this.options.samplers.indexOf("textureSampler")&&this.options.samplers.push("textureSampler"),-1===this.options.uniforms.indexOf("scale")&&this.options.uniforms.push("scale")),k.vertexUrl||k.vertexShader?this._shaderPath={vertexSource:this.options.vertexShader}:(this.options.useAsPostProcess||(this.options.uniforms.push("scale"),this.onApplyObservable.add((()=>{this.effect.setFloat2("scale",1,1)}))),this._shaderPath={vertex:this.options.vertexShader}),this._shaderPath.fragmentSource=this.options.fragmentShader,this._shaderPath.spectorName=this.options.name,this.options.useShaderStore&&(this._shaderPath.fragment=this._shaderPath.fragmentSource,this._shaderPath.vertex||(this._shaderPath.vertex=this._shaderPath.vertexSource),delete this._shaderPath.fragmentSource,delete this._shaderPath.vertexSource),this.onApplyObservable.add((()=>{this.bind()})),this.options.useShaderStore||(this._onContextRestoredObserver=this.options.Xj.onContextRestoredObservable.add((()=>{this.effect._pipelineContext=null,this.effect._prepareEffect()}))),this._drawWrapper=new G.d(this.options.Xj),this._webGPUReady=1===this.options.shaderLanguage;const M=Array.isArray(this.options.defines)?this.options.defines.join("\n"):this.options.defines;this._postConstructor(this.options.blockCompilation,M,this.options.extraInitializations)}_gatherImports(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],M=arguments.length>1?arguments[1]:void 0;this.options.useAsPostProcess&&(k&&this._webGPUReady?M.push(Promise.all([F.e(36).then(F.bind(F,13086))])):M.push(Promise.all([Promise.resolve().then(F.bind(F,2414))])))}_postConstructor(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2?arguments[2]:void 0,l=arguments.length>3?arguments[3]:void 0;this._importPromises.length=0,l&&this._importPromises.push(...l);const t=this.options.Xj.isWebGPU&&!d.ForceGLSL;this._gatherImports(t,this._importPromises),void 0!==F&&F(t,this._importPromises),t&&this._webGPUReady&&(this.options.shaderLanguage=1),k||this.updateEffect(M)}updateEffect(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0,A=arguments.length>7?arguments[7]:void 0;const N=d._GetShaderCodeProcessing(this.name);if(null!==N&&void 0!==N&&N.defineCustomBindings){var L,U;const l=(null===(L=M)||void 0===L?void 0:L.slice())??[];l.push(...this.options.uniforms);const t=(null===(U=F)||void 0===U?void 0:U.slice())??[];t.push(...this.options.samplers),k=N.defineCustomBindings(this.name,k,l,t),M=l,F=t}this.options.defines=k||"";const O=this._shadersLoaded||0===this._importPromises.length?void 0:async()=>{await Promise.all(this._importPromises),this._shadersLoaded=!0};let w;w=this.options.extraInitializationsAsync?async()=>{null===O||void 0===O||O(),await this.options.extraInitializationsAsync}:O,this.options.useShaderStore?this._drawWrapper.effect=this.options.Xj.createEffect({vertex:G??this._shaderPath.vertex,fragment:A??this._shaderPath.fragment},{attributes:this.options.attributeNames,uniformsNames:M||this.options.uniforms,uniformBuffersNames:this.options.uniformBuffers,samplers:F||this.options.samplers,defines:null!==k?k:"",fallbacks:null,onCompiled:t??this.options.onCompiled,onError:g??null,indexParameters:l||this.options.indexParameters,processCodeAfterIncludes:null!==N&&void 0!==N&&N.processCodeAfterIncludes?(k,M)=>N.processCodeAfterIncludes(this.name,k,M):null,processFinalCode:null!==N&&void 0!==N&&N.processFinalCode?(k,M)=>N.processFinalCode(this.name,k,M):null,shaderLanguage:this.options.shaderLanguage,extraInitializationsAsync:w},this.options.Xj):this._drawWrapper.effect=new B.e(this._shaderPath,this.options.attributeNames,M||this.options.uniforms,F||this.options.samplerNames,this.options.Xj,k,void 0,t||this.options.onCompiled,void 0,void 0,void 0,this.options.shaderLanguage,w),this.onEffectCreatedObservable.notifyObservers(this._drawWrapper.effect)}bind(){var k,M;this.options.useAsPostProcess&&(this.options.Xj.setAlphaMode(this.alphaMode),this.drawWrapper.effect.setFloat2("scale",1,1)),null===(k=d._GetShaderCodeProcessing(this.name))||void 0===k||null===(M=k.bindCustomBindings)||void 0===M||M.call(k,this.name,this._drawWrapper.effect)}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.onEffectCreatedObservable.clear(),this.effect.dispose()}}d.ForceGLSL=!1,d._CustomShaderCodeProcessing={}},2331:(k,M,F)=>{F.d(M,{b:()=>l.c,c:()=>l.f,g:()=>l.i,j:()=>l.m});F(826),F(720),F(691),F(726),F(2334),F(730),F(2343);var l=F(682);F(724)},2334:(k,M,F)=>{F.d(M,{e:()=>G,h:()=>d,i:()=>L});var l,t=F(698),g=F(682),B=F(691);!function(k){k[k.CW=0]="CW",k[k.CCW=1]="CCW"}(l||(l={}));class G{static Interpolate(k,M,F,l,t){const g=1-3*l+3*M,B=3*l-6*M,G=3*M;let A=k;for(let N=0;N<5;N++){const M=A*A;A-=(g*(M*A)+B*M+G*A-k)*(1/(3*g*M+2*B*A+G)),A=Math.min(1,Math.max(0,A))}return 3*Math.pow(1-A,2)*A*F+3*(1-A)*Math.pow(A,2)*t+Math.pow(A,3)}}class A{constructor(k){this._radians=k,this._radians<0&&(this._radians+=2*Math.PI)}degrees(){return 180*this._radians/Math.PI}radians(){return this._radians}static BetweenTwoPoints(k,M){const F=M.fe(k),l=Math.atan2(F.y,F.x);return new A(l)}static BetweenTwoVectors(k,M){let F=k.lengthSquared()*M.lengthSquared();if(0===F)return new A(Math.PI/2);F=Math.sqrt(F);let l=k.dot(M)/F;l=(0,t.e)(l,-1,1);const g=Math.acos(l);return new A(g)}static FromRadians(k){return new A(k)}static FromDegrees(k){return new A(k*Math.PI/180)}}class N{constructor(k,M,F){this.startPoint=k,this.midPoint=M,this.endPoint=F;const l=Math.pow(M.x,2)+Math.pow(M.y,2),t=(Math.pow(k.x,2)+Math.pow(k.y,2)-l)/2,B=(l-Math.pow(F.x,2)-Math.pow(F.y,2))/2,G=(k.x-M.x)*(M.y-F.y)-(M.x-F.x)*(k.y-M.y);this.centerPoint=new g.k((t*(M.y-F.y)-B*(k.y-M.y))/G,((k.x-M.x)*B-(M.x-F.x)*t)/G),this.radius=this.centerPoint.fe(this.startPoint).length(),this.startAngle=A.BetweenTwoPoints(this.centerPoint,this.startPoint);const N=this.startAngle.degrees();let d=A.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),L=A.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();d-N>180&&(d-=360),d-N<-180&&(d+=360),L-d>180&&(L-=360),L-d<-180&&(L+=360),this.orientation=d-N<0?0:1,this.angle=A.FromDegrees(0===this.orientation?N-L:L-N)}}class d{constructor(k,M){this._points=new Array,this._length=0,this.closed=!1,this._points.push(new g.k(k,M))}addLineTo(k,M){if(this.closed)return this;const F=new g.k(k,M),l=this._points[this._points.length-1];return this._points.push(F),this._length+=F.fe(l).length(),this}addArcTo(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const B=this._points[this._points.length-1],G=new g.k(k,M),A=new g.k(F,l),d=new N(B,G,A);let L=d.angle.radians()/t;0===d.orientation&&(L*=-1);let U=d.startAngle.radians()+L;for(let g=0;g<t;g++){const k=Math.cos(U)*d.radius+d.centerPoint.x,M=Math.sin(U)*d.radius+d.centerPoint.y;this.addLineTo(k,M),U+=L}return this}addQuadraticCurveTo(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const g=(k,M,F,l)=>(1-k)*(1-k)*M+2*k*(1-k)*F+k*k*l,B=this._points[this._points.length-1];for(let G=0;G<=t;G++){const A=G/t,N=g(A,B.x,k,F),d=g(A,B.y,M,l);this.addLineTo(N,d)}return this}addBezierCurveTo(k,M,F,l,t,g){let B=arguments.length>6&&void 0!==arguments[6]?arguments[6]:36;if(this.closed)return this;const G=(k,M,F,l,t)=>(1-k)*(1-k)*(1-k)*M+3*k*(1-k)*(1-k)*F+3*k*k*(1-k)*l+k*k*k*t,A=this._points[this._points.length-1];for(let N=0;N<=B;N++){const d=N/B,L=G(d,A.x,k,F,t),U=G(d,A.y,M,l,g);this.addLineTo(L,U)}return this}isPointInside(k){let M=!1;const F=this._points.length;for(let l=F-1,t=0;t<F;l=t++){let F=this._points[l],g=this._points[t],B=g.x-F.x,G=g.y-F.y;if(Math.abs(G)>Number.EPSILON){if(G<0&&(F=this._points[t],B=-B,g=this._points[l],G=-G),k.y<F.y||k.y>g.y)continue;if(k.y===F.y&&k.x===F.x)return!0;{const l=G*(k.x-F.x)-B*(k.y-F.y);if(0===l)return!0;if(l<0)continue;M=!M}}else{if(k.y!==F.y)continue;if(g.x<=k.x&&k.x<=F.x||F.x<=k.x&&k.x<=g.x)return!0}}return M}close(){return this.closed=!0,this}length(){let k=this._length;if(this.closed){const M=this._points[this._points.length-1];k+=this._points[0].fe(M).length()}return k}area(){const k=this._points.length;let M=0;for(let F=k-1,l=0;l<k;F=l++)M+=this._points[F].x*this._points[l].y-this._points[l].x*this._points[F].y;return.5*M}getPoints(){return this._points}getPointAtLengthPosition(k){if(k<0||k>1)return g.k.Zero();const M=k*this.length();let F=0;for(let l=0;l<this._points.length;l++){const k=(l+1)%this._points.length,t=this._points[l],B=this._points[k].fe(t),G=B.length()+F;if(M>=F&&M<=G){const k=B.normalize(),l=M-F;return new g.k(t.x+k.x*l,t.y+k.y*l)}F=G}return g.k.Zero()}static StartingAt(k,M){return new d(k,M)}}class L{constructor(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2?arguments[2]:void 0,l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.path=k,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array,this._pointAtData={id:0,point:g.m.Zero(),previousPointArrayIndex:0,position:0,subPosition:0,interpolateReady:!1,interpolationMatrix:g.c.Identity()};for(let t=0;t<k.length;t++)this._curve[t]=k[t].clone();this._raw=F||!1,this._alignTangentsWithPath=l,this._compute(M,l)}getCurve(){return this._curve}getPoints(){return this._curve}length(){return this._distances[this._distances.length-1]}getTangents(){return this._tangents}getNormals(){return this._normals}getBinormals(){return this._binormals}getDistances(){return this._distances}getPointAt(k){return this._updatePointAtData(k).point}getTangentAt(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(k,M),M?g.m.TransformCoordinates(g.m.Forward(),this._pointAtData.interpolationMatrix):this._tangents[this._pointAtData.previousPointArrayIndex]}getNormalAt(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(k,M),M?g.m.TransformCoordinates(g.m.Right(),this._pointAtData.interpolationMatrix):this._normals[this._pointAtData.previousPointArrayIndex]}getBinormalAt(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(k,M),M?g.m.TransformCoordinates(g.m.UpReadOnly,this._pointAtData.interpolationMatrix):this._binormals[this._pointAtData.previousPointArrayIndex]}getDistanceAt(k){return this.length()*k}getPreviousPointIndexAt(k){return this._updatePointAtData(k),this._pointAtData.previousPointArrayIndex}getSubPositionAt(k){return this._updatePointAtData(k),this._pointAtData.subPosition}getClosestPositionTo(k){let M=Number.MAX_VALUE,F=0;for(let l=0;l<this._curve.length-1;l++){const t=this._curve[l+0],B=this._curve[l+1].fe(t).normalize(),G=this._distances[l+1]-this._distances[l+0],A=Math.min(Math.max(g.m.Dot(B,k.fe(t).normalize()),0)*g.m.Distance(t,k)/G,1),N=g.m.Distance(t.add(B.scale(A*G)),k);N<M&&(M=N,F=(this._distances[l+0]+G*A)/this.length())}return F}slice(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(k<0&&(k=1- -1*k%1),M<0&&(M=1- -1*M%1),k>M){const F=k;k=M,M=F}const F=this.getCurve(),l=this.getPointAt(k);let t=this.getPreviousPointIndexAt(k);const g=this.getPointAt(M),B=this.getPreviousPointIndexAt(M)+1,G=[];return 0!==k&&(t++,G.push(l)),G.push(...F.slice(t,B)),1===M&&1!==k||G.push(g),new L(G,this.getNormalAt(k),this._raw,this._alignTangentsWithPath)}update(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(let l=0;l<k.length;l++)this._curve[l].x=k[l].x,this._curve[l].y=k[l].y,this._curve[l].z=k[l].z;return this._compute(M,F),this}_compute(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const F=this._curve.length;if(F<2)return;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[F-1]=this._curve[F-1].fe(this._curve[F-2]),this._raw||this._tangents[F-1].normalize();const l=this._tangents[0],t=this._normalVector(l,k);let B,G,A,N,d;this._normals[0]=t,this._raw||this._normals[0].normalize(),this._binormals[0]=g.m.Cross(l,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(let L=1;L<F;L++)B=this._getLastNonNullVector(L),L<F-1&&(G=this._getFirstNonNullVector(L),this._tangents[L]=M?G:B.add(G),this._tangents[L].normalize()),this._distances[L]=this._distances[L-1]+this._curve[L].fe(this._curve[L-1]).length(),A=this._tangents[L],d=this._binormals[L-1],this._normals[L]=g.m.Cross(d,A),this._raw||(0===this._normals[L].length()?(N=this._normals[L-1],this._normals[L]=N.clone()):this._normals[L].normalize()),this._binormals[L]=g.m.Cross(A,this._normals[L]),this._raw||this._binormals[L].normalize();this._pointAtData.id=NaN}_getFirstNonNullVector(k){let M=1,F=this._curve[k+M].fe(this._curve[k]);for(;0===F.length()&&k+M+1<this._curve.length;)M++,F=this._curve[k+M].fe(this._curve[k]);return F}_getLastNonNullVector(k){let M=1,F=this._curve[k].fe(this._curve[k-M]);for(;0===F.length()&&k>M+1;)M++,F=this._curve[k].fe(this._curve[k-M]);return F}_normalVector(k,M){let F,l=k.length();if(0===l&&(l=1),void 0===M||null===M){let M;M=(0,t.w)(Math.abs(k.y)/l,1,B.b)?(0,t.w)(Math.abs(k.x)/l,1,B.b)?(0,t.w)(Math.abs(k.z)/l,1,B.b)?g.m.Zero():new g.m(0,0,1):new g.m(1,0,0):new g.m(0,-1,0),F=g.m.Cross(k,M)}else F=g.m.Cross(k,M),g.m.CrossToRef(F,k,F);return F.normalize(),F}_updatePointAtData(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._pointAtData.id===k)return this._pointAtData.interpolateReady||this._updateInterpolationMatrix(),this._pointAtData;this._pointAtData.id=k;const F=this.getPoints();if(k<=0)return this._setPointAtData(0,0,F[0],0,M);if(k>=1)return this._setPointAtData(1,1,F[F.length-1],F.length-1,M);let l,t=F[0],B=0;const G=k*this.length();for(let A=1;A<F.length;A++){l=F[A];const N=g.m.Distance(t,l);if(B+=N,B===G)return this._setPointAtData(k,1,l,A,M);if(B>G){const F=(B-G)/N,g=t.fe(l),d=l.add(g.scaleInPlace(F));return this._setPointAtData(k,1-F,d,A-1,M)}t=l}return this._pointAtData}_setPointAtData(k,M,F,l,t){return this._pointAtData.point=F,this._pointAtData.position=k,this._pointAtData.subPosition=M,this._pointAtData.previousPointArrayIndex=l,this._pointAtData.interpolateReady=t,t&&this._updateInterpolationMatrix(),this._pointAtData}_updateInterpolationMatrix(){this._pointAtData.interpolationMatrix=g.c.Identity();const k=this._pointAtData.previousPointArrayIndex;if(k!==this._tangents.length-1){const M=k+1,F=this._tangents[k].clone(),l=this._normals[k].clone(),t=this._binormals[k].clone(),B=this._tangents[M].clone(),G=this._normals[M].clone(),A=this._binormals[M].clone(),N=g.f.RotationQuaternionFromAxis(l,t,F),d=g.f.RotationQuaternionFromAxis(G,A,B);g.f.Slerp(N,d,this._pointAtData.subPosition).toRotationMatrix(this._pointAtData.interpolationMatrix)}}}},2323:(k,M,F)=>{F.d(M,{c:()=>N,f:()=>d});var l=F(682),t=F(2331);const g=[Math.sqrt(1/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(3/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(15/(4*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(5/(16*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(15/(16*Math.PI))],B=[()=>1,k=>k.y,k=>k.z,k=>k.x,k=>k.x*k.y,k=>k.y*k.z,k=>3*k.z*k.z-1,k=>k.x*k.z,k=>k.x*k.x-k.y*k.y],G=(k,M)=>g[k]*B[k](M),A=[Math.PI,2*Math.PI/3,2*Math.PI/3,2*Math.PI/3,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4];class N{constructor(){this.preScaled=!1,this.l00=l.m.Zero(),this.l1_1=l.m.Zero(),this.l10=l.m.Zero(),this.l11=l.m.Zero(),this.l2_2=l.m.Zero(),this.l2_1=l.m.Zero(),this.l20=l.m.Zero(),this.l21=l.m.Zero(),this.l22=l.m.Zero()}addLight(k,M,F){t.g.fk[0].set(M.r,M.g,M.b);const l=t.g.fk[0],g=t.g.fk[1];l.scaleToRef(F,g),g.scaleToRef(G(0,k),t.g.fk[2]),this.l00.addInPlace(t.g.fk[2]),g.scaleToRef(G(1,k),t.g.fk[2]),this.l1_1.addInPlace(t.g.fk[2]),g.scaleToRef(G(2,k),t.g.fk[2]),this.l10.addInPlace(t.g.fk[2]),g.scaleToRef(G(3,k),t.g.fk[2]),this.l11.addInPlace(t.g.fk[2]),g.scaleToRef(G(4,k),t.g.fk[2]),this.l2_2.addInPlace(t.g.fk[2]),g.scaleToRef(G(5,k),t.g.fk[2]),this.l2_1.addInPlace(t.g.fk[2]),g.scaleToRef(G(6,k),t.g.fk[2]),this.l20.addInPlace(t.g.fk[2]),g.scaleToRef(G(7,k),t.g.fk[2]),this.l21.addInPlace(t.g.fk[2]),g.scaleToRef(G(8,k),t.g.fk[2]),this.l22.addInPlace(t.g.fk[2])}scaleInPlace(k){this.l00.scaleInPlace(k),this.l1_1.scaleInPlace(k),this.l10.scaleInPlace(k),this.l11.scaleInPlace(k),this.l2_2.scaleInPlace(k),this.l2_1.scaleInPlace(k),this.l20.scaleInPlace(k),this.l21.scaleInPlace(k),this.l22.scaleInPlace(k)}convertIncidentRadianceToIrradiance(){this.l00.scaleInPlace(A[0]),this.l1_1.scaleInPlace(A[1]),this.l10.scaleInPlace(A[2]),this.l11.scaleInPlace(A[3]),this.l2_2.scaleInPlace(A[4]),this.l2_1.scaleInPlace(A[5]),this.l20.scaleInPlace(A[6]),this.l21.scaleInPlace(A[7]),this.l22.scaleInPlace(A[8])}convertIrradianceToLambertianRadiance(){this.scaleInPlace(1/Math.PI)}preScaleForRendering(){this.preScaled=!0,this.l00.scaleInPlace(g[0]),this.l1_1.scaleInPlace(g[1]),this.l10.scaleInPlace(g[2]),this.l11.scaleInPlace(g[3]),this.l2_2.scaleInPlace(g[4]),this.l2_1.scaleInPlace(g[5]),this.l20.scaleInPlace(g[6]),this.l21.scaleInPlace(g[7]),this.l22.scaleInPlace(g[8])}updateFromArray(k){return l.m.FromArrayToRef(k[0],0,this.l00),l.m.FromArrayToRef(k[1],0,this.l1_1),l.m.FromArrayToRef(k[2],0,this.l10),l.m.FromArrayToRef(k[3],0,this.l11),l.m.FromArrayToRef(k[4],0,this.l2_2),l.m.FromArrayToRef(k[5],0,this.l2_1),l.m.FromArrayToRef(k[6],0,this.l20),l.m.FromArrayToRef(k[7],0,this.l21),l.m.FromArrayToRef(k[8],0,this.l22),this}updateFromFloatsArray(k){return l.m.FromFloatsToRef(k[0],k[1],k[2],this.l00),l.m.FromFloatsToRef(k[3],k[4],k[5],this.l1_1),l.m.FromFloatsToRef(k[6],k[7],k[8],this.l10),l.m.FromFloatsToRef(k[9],k[10],k[11],this.l11),l.m.FromFloatsToRef(k[12],k[13],k[14],this.l2_2),l.m.FromFloatsToRef(k[15],k[16],k[17],this.l2_1),l.m.FromFloatsToRef(k[18],k[19],k[20],this.l20),l.m.FromFloatsToRef(k[21],k[22],k[23],this.l21),l.m.FromFloatsToRef(k[24],k[25],k[26],this.l22),this}static dk(k){return(new N).updateFromArray(k)}static FromPolynomial(k){const M=new N;return M.l00=k.xx.scale(.376127).add(k.yy.scale(.376127)).add(k.zz.scale(.376126)),M.l1_1=k.y.scale(.977204),M.l10=k.z.scale(.977204),M.l11=k.x.scale(.977204),M.l2_2=k.xy.scale(1.16538),M.l2_1=k.yz.scale(1.16538),M.l20=k.zz.scale(1.34567).fe(k.xx.scale(.672834)).fe(k.yy.scale(.672834)),M.l21=k.zx.scale(1.16538),M.l22=k.xx.scale(1.16538).fe(k.yy.scale(1.16538)),M.l1_1.scaleInPlace(-1),M.l11.scaleInPlace(-1),M.l2_1.scaleInPlace(-1),M.l21.scaleInPlace(-1),M.scaleInPlace(Math.PI),M}}class d{constructor(){this.x=l.m.Zero(),this.y=l.m.Zero(),this.z=l.m.Zero(),this.xx=l.m.Zero(),this.yy=l.m.Zero(),this.zz=l.m.Zero(),this.xy=l.m.Zero(),this.yz=l.m.Zero(),this.zx=l.m.Zero()}get preScaledHarmonics(){return this._harmonics||(this._harmonics=N.FromPolynomial(this)),this._harmonics.preScaled||this._harmonics.preScaleForRendering(),this._harmonics}addAmbient(k){t.g.fk[0].yd(k.r,k.g,k.b);const M=t.g.fk[0];this.xx.addInPlace(M),this.yy.addInPlace(M),this.zz.addInPlace(M)}scaleInPlace(k){this.x.scaleInPlace(k),this.y.scaleInPlace(k),this.z.scaleInPlace(k),this.xx.scaleInPlace(k),this.yy.scaleInPlace(k),this.zz.scaleInPlace(k),this.yz.scaleInPlace(k),this.zx.scaleInPlace(k),this.xy.scaleInPlace(k)}updateFromHarmonics(k){return this._harmonics=k,this.x.p(k.l11),this.x.scaleInPlace(1.02333).scaleInPlace(-1),this.y.p(k.l1_1),this.y.scaleInPlace(1.02333).scaleInPlace(-1),this.z.p(k.l10),this.z.scaleInPlace(1.02333),this.xx.p(k.l00),t.g.fk[0].p(k.l20).scaleInPlace(.247708),t.g.fk[1].p(k.l22).scaleInPlace(.429043),this.xx.scaleInPlace(.886277).hk(t.g.fk[0]).addInPlace(t.g.fk[1]),this.yy.p(k.l00),this.yy.scaleInPlace(.886277).hk(t.g.fk[0]).hk(t.g.fk[1]),this.zz.p(k.l00),t.g.fk[0].p(k.l20).scaleInPlace(.495417),this.zz.scaleInPlace(.886277).addInPlace(t.g.fk[0]),this.yz.p(k.l2_1),this.yz.scaleInPlace(.858086).scaleInPlace(-1),this.zx.p(k.l21),this.zx.scaleInPlace(.858086).scaleInPlace(-1),this.xy.p(k.l2_2),this.xy.scaleInPlace(.858086),this.scaleInPlace(1/Math.PI),this}static FromHarmonics(k){return(new d).updateFromHarmonics(k)}static dk(k){const M=new d;return l.m.FromArrayToRef(k[0],0,M.x),l.m.FromArrayToRef(k[1],0,M.y),l.m.FromArrayToRef(k[2],0,M.z),l.m.FromArrayToRef(k[3],0,M.xx),l.m.FromArrayToRef(k[4],0,M.yy),l.m.FromArrayToRef(k[5],0,M.zz),l.m.FromArrayToRef(k[6],0,M.yz),l.m.FromArrayToRef(k[7],0,M.zx),l.m.FromArrayToRef(k[8],0,M.xy),M}}},2353:(k,M,F)=>{F.d(M,{d:()=>N});var l=F(682),t=F(698),g=F(2323),B=F(691),G=F(720);class A{constructor(k,M,F,l){this.name=k,this.worldAxisForNormal=M,this.worldAxisForFileX=F,this.worldAxisForFileY=l}}class N{static ConvertCubeMapTextureToSphericalPolynomial(k){var M;if(!k.isCube)return null;null===(M=k.va())||void 0===M||M.getEngine().flushFramebuffer();const F=k.getSize().width,l=k.readPixels(0,void 0,void 0,!1),t=k.readPixels(1,void 0,void 0,!1);let g,B;k.isRenderTarget?(g=k.readPixels(3,void 0,void 0,!1),B=k.readPixels(2,void 0,void 0,!1)):(g=k.readPixels(2,void 0,void 0,!1),B=k.readPixels(3,void 0,void 0,!1));const G=k.readPixels(4,void 0,void 0,!1),A=k.readPixels(5,void 0,void 0,!1),N=k.gammaSpace;let d=0;return 1!=k.textureType&&2!=k.textureType||(d=1),new Promise((k=>{Promise.all([t,l,g,B,G,A]).then((M=>{let[l,t,g,B,G,A]=M;const L={size:F,right:t,left:l,up:g,down:B,front:G,back:A,format:5,type:d,gammaSpace:N};k(this.ConvertCubeMapToSphericalPolynomial(L))}))}))}static _AreaElement(k,M){return Math.atan2(k*M,Math.sqrt(k*k+M*M+1))}static ConvertCubeMapToSphericalPolynomial(k){const M=new g.c;let F=0;const l=2/k.size,A=l,N=.5*l,d=N-1;for(let g=0;g<6;g++){const L=this._FileFaces[g],U=k[L.name];let O=d;const w=5===k.format?4:3;for(let g=0;g<k.size;g++){let Z=d;for(let A=0;A<k.size;A++){const d=L.worldAxisForFileX.scale(Z).add(L.worldAxisForFileY.scale(O)).add(L.worldAxisForNormal);d.normalize();const R=this._AreaElement(Z-N,O-N)-this._AreaElement(Z-N,O+N)-this._AreaElement(Z+N,O-N)+this._AreaElement(Z+N,O+N);let y=U[g*k.size*w+A*w+0],m=U[g*k.size*w+A*w+1],o=U[g*k.size*w+A*w+2];isNaN(y)&&(y=0),isNaN(m)&&(m=0),isNaN(o)&&(o=0),0===k.type&&(y/=255,m/=255,o/=255),k.gammaSpace&&(y=Math.pow((0,t.e)(y),B.k),m=Math.pow((0,t.e)(m),B.k),o=Math.pow((0,t.e)(o),B.k));const Q=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const k=Math.max(y,m,o);if(k>Q){const M=Q/k;y*=M,m*=M,o*=M}}else y=(0,t.e)(y,0,Q),m=(0,t.e)(m,0,Q),o=(0,t.e)(o,0,Q);const v=new G.c(y,m,o);M.addLight(d,v,R),F+=R,Z+=l}O+=A}}const L=6*(4*Math.PI)/6/F;return M.scaleInPlace(L),M.convertIncidentRadianceToIrradiance(),M.convertIrradianceToLambertianRadiance(),g.f.FromHarmonics(M)}}N._FileFaces=[new A("right",new l.m(1,0,0),new l.m(0,0,-1),new l.m(0,-1,0)),new A("left",new l.m(-1,0,0),new l.m(0,0,1),new l.m(0,-1,0)),new A("up",new l.m(0,1,0),new l.m(1,0,0),new l.m(0,0,1)),new A("down",new l.m(0,-1,0),new l.m(1,0,0),new l.m(0,0,-1)),new A("front",new l.m(0,0,1),new l.m(1,0,0),new l.m(0,-1,0)),new A("back",new l.m(0,0,-1),new l.m(-1,0,0),new l.m(0,-1,0))],N.MAX_HDRI_VALUE=4096,N.PRESERVE_CLAMPED_COLORS=!1},2355:(k,M,F)=>{F.d(M,{b:()=>A,f:()=>U,g:()=>L});F(2361),F(2377);var l=F(2400),t=F(552),g=F(613),B=F(716);class G extends l.d{getClassName(){return"PassPostProcess"}constructor(k,M){super(k,"pass",null,null,M,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0,arguments.length>5?arguments[5]:void 0,void 0,arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,void 0,null,arguments.length>7&&void 0!==arguments[7]&&arguments[7])}_gatherImports(k,M){k?(this._webGPUReady=!0,M.push(Promise.all([F.e(32).then(F.bind(F,13069))]))):M.push(Promise.all([F.e(33).then(F.bind(F,13073))])),super._gatherImports(k,M)}static _Parse(k,M,F,l){return B.c.Parse((()=>new G(k.name,k.options,M,k.renderTargetSamplingMode,k._engine,k.reusable)),k,F,l)}}(0,g.e)("BABYLON.PassPostProcess",G);l.d;function A(k,M,F,t,g,B,G,A){const N=M.getEngine();return M.isReady=!1,g=g??M.samplingMode,t=t??M.type,B=B??M.format,G=G??M.width,A=A??M.height,-1===t&&(t=0),new Promise((d=>{const L=new l.d("postprocess",k,null,null,1,null,g,N,!1,void 0,t,void 0,null,!1,B);L.externalTextureSamplerBinding=!0;const U=N.createRenderTargetTexture({width:G,height:A},{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:g,type:t,format:B});L.onEffectCreatedObservable.addOnce((k=>{k.executeWhenCompiled((()=>{L.onApply=k=>{k._bindTexture("textureSampler",M),k.setFloat2("scale",1,1)},F.postProcessManager.directRender([L],U,!0),N.restoreDefaultFramebuffer(),N._releaseTexture(M),L&&L.dispose(),U._swapAndDie(M),M.type=t,M.format=5,M.isReady=!0,d(M)}))}))}))}let N,d;function L(k){N||(N=new Float32Array(1),d=new Int32Array(N.buffer)),N[0]=k;const M=d[0];let F=M>>16&32768,l=M>>12&2047;const t=M>>23&255;return t<103?F:t>142?(F|=31744,F|=(255==t?0:1)&&8388607&M,F):t<113?(l|=2048,F|=(l>>114-t)+(l>>113-t&1),F):(F|=t-112<<10|l>>1,F+=1&l,F)}function U(k){const M=(32768&k)>>15,F=(31744&k)>>10,l=1023&k;return 0===F?(M?-1:1)*Math.pow(2,-14)*(l/Math.pow(2,10)):31==F?l?NaN:1/0*(M?-1:1):(M?-1:1)*Math.pow(2,F-15)*(1+l/Math.pow(2,10))}t.d._RescalePostProcessFactory=k=>new G("rescale",1,null,2,k,!1,0)},2400:(k,M,F)=>{F.d(M,{d:()=>w});var l=F(654),t=F(676),g=F(477),B=F(682),G=F(559),A=F(663),N=F(716),d=F(613),L=F(552),U=F(629),O=F(2409);L.d.prototype.setTextureFromPostProcess=function(k,M,F){var l;let t=null;M&&(M._forcedOutputTexture?t=M._forcedOutputTexture:M._textures.data[M._currentRenderTextureInd]&&(t=M._textures.data[M._currentRenderTextureInd])),this._bindTexture(k,(null===(l=t)||void 0===l?void 0:l.texture)??null,F)},L.d.prototype.setTextureFromPostProcessOutput=function(k,M,F){var l;this._bindTexture(k,(null===M||void 0===M||null===(l=M._outputTexture)||void 0===l?void 0:l.texture)??null,F)},G.e.prototype.setTextureFromPostProcess=function(k,M){this._engine.setTextureFromPostProcess(this._samplers[k],M,k)},G.e.prototype.setTextureFromPostProcessOutput=function(k,M){this._engine.setTextureFromPostProcessOutput(this._samplers[k],M,k)};class w{static get ForceGLSL(){return O.e.ForceGLSL}static set ForceGLSL(k){O.e.ForceGLSL=k}static RegisterShaderCodeProcessing(k,M){O.e.RegisterShaderCodeProcessing(k,M)}get name(){return this._effectWrapper.name}set name(k){this._effectWrapper.name=k}get alphaMode(){return this._effectWrapper.alphaMode}set alphaMode(k){this._effectWrapper.alphaMode=k}get samples(){return this._samples}set samples(k){this._samples=Math.min(k,this._engine.getCaps().maxMSAASamples),this._textures.forEach((k=>{k.setSamples(this._samples)}))}get shaderLanguage(){return this._shaderLanguage}getEffectName(){return this._fragmentUrl}set onActivate(k){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),k&&(this._onActivateObserver=this.onActivateObservable.add(k))}set onSizeChanged(k){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(k)}set onApply(k){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(k)}set onBeforeRender(k){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(k)}set onAfterRender(k){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(k)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(k){this._forcedOutputTexture=k}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.yd(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}constructor(k,M,F,l,G,A){var N;let d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,L=arguments.length>7?arguments[7]:void 0,U=arguments.length>8?arguments[8]:void 0,Z=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null,R=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,y=arguments.length>11&&void 0!==arguments[11]?arguments[11]:"postprocess",m=arguments.length>12?arguments[12]:void 0,o=arguments.length>13&&void 0!==arguments[13]&&arguments[13],Q=arguments.length>14&&void 0!==arguments[14]?arguments[14]:5,v=arguments.length>15?arguments[15]:void 0,J=arguments.length>16?arguments[16]:void 0;this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.Gl=!0,this.forceAutoClearInAlphaMode=!1,this.animations=[],this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._webGPUReady=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new t.c(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new B.k(1,1),this._texelSize=B.k.Zero(),this.onActivateObservable=new g.c,this.onSizeChangedObservable=new g.c,this.onApplyObservable=new g.c,this.onBeforeRenderObservable=new g.c,this.onAfterRenderObservable=new g.c;let n,a=1,Y=null;if(F&&!Array.isArray(F)){const k=F;F=k.uniforms??null,l=k.samplers??null,a=k.size??1,A=k.camera??null,d=k.samplingMode??1,L=k.Xj,U=k.reusable,Z=Array.isArray(k.defines)?k.defines.join("\n"):k.defines??null,R=k.textureType??0,y=k.vertexUrl??"postprocess",m=k.indexParameters,o=k.blockCompilation??!1,Q=k.textureFormat??5,v=k.shaderLanguage??0,Y=k.uniformBuffers??null,J=k.extraInitializations,n=k.effectWrapper}else G&&(a="number"===typeof G?G:{width:G.width,height:G.height});const s=!!n;if(this._effectWrapper=n??new O.e({name:k,useShaderStore:!0,useAsPostProcess:!0,fragmentShader:M,Xj:L||(null===(N=A)||void 0===N?void 0:N.va().getEngine()),uniforms:F,samplers:l,uniformBuffers:Y,defines:Z,vertexUrl:y,indexParameters:m,blockCompilation:o,shaderLanguage:v,extraInitializations:J}),this.name=k,this.onEffectCreatedObservable=this._effectWrapper.onEffectCreatedObservable,null!=A?(this._camera=A,this._scene=A.va(),A.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):L&&(this._engine=L,this._engine.postProcesses.push(this)),this._options=a,this.renderTargetSamplingMode=d||1,this._reusable=U||!1,this._textureType=R,this._textureFormat=Q,this._shaderLanguage=v||0,this._samplers=l||[],-1===this._samplers.indexOf("textureSampler")&&this._samplers.push("textureSampler"),this._fragmentUrl=M,this._vertexUrl=y,this._parameters=F||[],-1===this._parameters.indexOf("scale")&&this._parameters.push("scale"),this._uniformBuffers=Y||[],this._indexParameters=m,!s){this._webGPUReady=1===this._shaderLanguage;const k=[];this._gatherImports(this._engine.isWebGPU&&!w.ForceGLSL,k),this._effectWrapper._webGPUReady=this._webGPUReady,this._effectWrapper._postConstructor(o,Z,J,k)}}_gatherImports(){let k=arguments.length>1?arguments[1]:void 0;arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&this._webGPUReady?k.push(Promise.all([F.e(36).then(F.bind(F,13086))])):k.push(Promise.all([Promise.resolve().then(F.bind(F,2414))]))}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._effectWrapper.drawWrapper.effect}shareOutputWith(k){return this._disposeTextures(),this._shareOutputWithPostProcess=k,this}useOwnOutput(){0==this._textures.length&&(this._textures=new t.c(2)),this._shareOutputWithPostProcess=null}updateEffect(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3?arguments[3]:void 0,t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0,G=arguments.length>7?arguments[7]:void 0;this._effectWrapper.updateEffect(k,M,F,l,t,g,B,G),this._postProcessDefines=Array.isArray(this._effectWrapper.options.defines)?this._effectWrapper.options.defines.join("\n"):this._effectWrapper.options.defines}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;for(let t=0;t<this._textureCache.length;t++)if(this._textureCache[t].texture.width===k.width&&this._textureCache[t].texture.height===k.height&&this._textureCache[t].postProcessChannel===F&&this._textureCache[t].texture._generateDepthBuffer===M.generateDepthBuffer&&this._textureCache[t].texture.samples===M.samples)return this._textureCache[t].texture;const l=this._engine.createRenderTargetTexture(k,M);return this._textureCache.push({texture:l,postProcessChannel:F,lastUsedRenderId:-1}),l}_flushTextureCache(){const k=this._renderId;for(let M=this._textureCache.length-1;M>=0;M--)if(k-this._textureCache[M].lastUsedRenderId>100){let k=!1;for(let F=0;F<this._textures.length;F++)if(this._textures.data[F]===this._textureCache[M].texture){k=!0;break}k||(this._textureCache[M].texture.dispose(),this._textureCache.splice(M,1))}}resize(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],t=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this._textures.length>0&&this._textures.reset(),this.width=k,this.height=M;let g=null;if(F)for(let A=0;A<F._postProcesses.length;A++)if(null!==F._postProcesses[A]){g=F._postProcesses[A];break}const B={width:this.width,height:this.height},G={generateMipMaps:l,generateDepthBuffer:t||g===this,generateStencilBuffer:(t||g===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples,label:"PostProcessRTT-"+this.name};this._textures.push(this._createRenderTargetTexture(B,G,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(B,G,1)),this._texelSize.yd(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}_getTarget(){let k;if(this._shareOutputWithPostProcess)k=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)k=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{let M;k=this.inputTexture;for(let F=0;F<this._textureCache.length;F++)if(this._textureCache[F].texture===k){M=this._textureCache[F];break}M&&(M.lastUsedRenderId=this._renderId)}return k}activate(k){var M,F;let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=arguments.length>2?arguments[2]:void 0;const g=(k=k||this._camera).va(),B=g.getEngine(),G=B.getCaps().maxTextureSize,A=(l?l.width:this._engine.getRenderWidth(!0))*this._options|0,N=(l?l.height:this._engine.getRenderHeight(!0))*this._options|0;let d=this._options.width||A,L=this._options.height||N;const O=7!==this.renderTargetSamplingMode&&1!==this.renderTargetSamplingMode&&2!==this.renderTargetSamplingMode;let w=null;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const k=B.currentViewport;k&&(d*=k.width,L*=k.height)}(O||this.alwaysForcePOT)&&(this._options.width||(d=B.needPOTTextures?(0,U.f)(d,G,this.scaleMode):d),this._options.height||(L=B.needPOTTextures?(0,U.f)(L,G,this.scaleMode):L)),this.width===d&&this.height===L&&(w=this._getTarget())||this.resize(d,L,k,O,t),this._textures.forEach((k=>{k.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(k,this.samples)})),this._flushTextureCache(),this._renderId++}return w||(w=this._getTarget()),this.enablePixelPerfectMode?(this._scaleRatio.yd(A/d,N/L),this._engine.bindFramebuffer(w,0,A,N,this.forceFullscreenViewport)):(this._scaleRatio.yd(1,1),this._engine.bindFramebuffer(w,0,void 0,void 0,this.forceFullscreenViewport)),null===(M=(F=this._engine)._debugInsertMarker)||void 0===M||M.call(F,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(k),this.Gl&&(0===this.alphaMode||this.forceAutoClearInAlphaMode)&&this._engine.clear(this.clearColor?this.clearColor:g.clearColor,g._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),w}get isSupported(){return this._effectWrapper.drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){return this._effectWrapper.isReady()}apply(){if(!this._effectWrapper.isReady())return null;let k;var M;(this._engine.enableEffect(this._effectWrapper.drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a),k=this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?this._forcedOutputTexture:this.inputTexture,this.externalTextureSamplerBinding)||this._effectWrapper.drawWrapper.effect._bindTexture("textureSampler",null===(M=k)||void 0===M?void 0:M.texture);return this._effectWrapper.drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._effectWrapper.drawWrapper.effect),this._effectWrapper.bind(),this._effectWrapper.drawWrapper.effect}_disposeTextures(){this._shareOutputWithPostProcess||this._forcedOutputTexture?this._disposeTextureCache():(this._disposeTextureCache(),this._textures.dispose())}_disposeTextureCache(){for(let k=this._textureCache.length-1;k>=0;k--)this._textureCache[k].texture.dispose();this._textureCache.length=0}setPrePassRenderer(k){return!!this._prePassEffectConfiguration&&(this._prePassEffectConfiguration=k.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0)}dispose(k){let M;if(k=k||this._camera,this._disposeTextures(),this._scene&&(M=this._scene.postProcesses.indexOf(this),-1!==M&&this._scene.postProcesses.splice(M,1)),this._parentContainer){const k=this._parentContainer.postProcesses.indexOf(this);k>-1&&this._parentContainer.postProcesses.splice(k,1),this._parentContainer=null}if(M=this._engine.postProcesses.indexOf(this),-1!==M&&this._engine.postProcesses.splice(M,1),k){if(k.detachPostProcess(this),M=k._postProcesses.indexOf(this),0===M&&k._postProcesses.length>0){const k=this._camera._getFirstPostProcess();k&&k.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear(),this.onEffectCreatedObservable.clear()}}serialize(){const k=N.c.Serialize(this),M=this.getCamera()||this._scene&&this._scene.activeCamera;return k.customType="BABYLON."+this.getClassName(),k.cameraId=M?M.id:null,k.reusable=this._reusable,k.textureType=this._textureType,k.fragmentUrl=this._fragmentUrl,k.parameters=this._parameters,k.samplers=this._samplers,k.uniformBuffers=this._uniformBuffers,k.options=this._options,k.defines=this._postProcessDefines,k.textureFormat=this._textureFormat,k.vertexUrl=this._vertexUrl,k.indexParameters=this._indexParameters,k}clone(){const k=this.serialize();k._engine=this._engine,k.cameraId=null;const M=w.Parse(k,this._scene,"");return M?(M.onActivateObservable=this.onActivateObservable.clone(),M.onSizeChangedObservable=this.onSizeChangedObservable.clone(),M.onApplyObservable=this.onApplyObservable.clone(),M.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),M.onAfterRenderObservable=this.onAfterRenderObservable.clone(),M._prePassEffectConfiguration=this._prePassEffectConfiguration,M):null}static Parse(k,M,F){const l=(0,d.b)(k.customType);if(!l||!l._Parse)return null;const t=M?M.getCameraById(k.cameraId):null;return l._Parse(k,t,M,F)}static _Parse(k,M,F,l){return N.c.Parse((()=>new w(k.name,k.fragmentUrl,k.parameters,k.samplers,k.options,M,k.renderTargetSamplingMode,k._engine,k.reusable,k.defines,k.textureType,k.vertexUrl,k.indexParameters,!1,k.textureFormat)),k,F,l)}}(0,l.d)([(0,A.E)()],w.prototype,"uniqueId",void 0),(0,l.d)([(0,A.E)()],w.prototype,"name",null),(0,l.d)([(0,A.E)()],w.prototype,"width",void 0),(0,l.d)([(0,A.E)()],w.prototype,"height",void 0),(0,l.d)([(0,A.E)()],w.prototype,"renderTargetSamplingMode",void 0),(0,l.d)([(0,A.j)()],w.prototype,"clearColor",void 0),(0,l.d)([(0,A.E)()],w.prototype,"Gl",void 0),(0,l.d)([(0,A.E)()],w.prototype,"forceAutoClearInAlphaMode",void 0),(0,l.d)([(0,A.E)()],w.prototype,"alphaMode",null),(0,l.d)([(0,A.E)()],w.prototype,"alphaConstants",void 0),(0,l.d)([(0,A.E)()],w.prototype,"enablePixelPerfectMode",void 0),(0,l.d)([(0,A.E)()],w.prototype,"forceFullscreenViewport",void 0),(0,l.d)([(0,A.E)()],w.prototype,"scaleMode",void 0),(0,l.d)([(0,A.E)()],w.prototype,"alwaysForcePOT",void 0),(0,l.d)([(0,A.E)("samples")],w.prototype,"_samples",void 0),(0,l.d)([(0,A.E)()],w.prototype,"adaptScaleToCurrentViewport",void 0),(0,d.e)("BABYLON.PostProcess",w)},2383:(k,M,F)=>{F.d(M,{d:()=>g});var l=F(733),t=F(477);class g{constructor(k){this._vertexBuffers={},this.onBeforeRenderObservable=new t.c,this._scene=k}_prepareBuffers(){if(this._vertexBuffers[l.g.PositionKind])return;const k=[];k.push(1,1),k.push(-1,1),k.push(-1,-1),k.push(1,-1),this._vertexBuffers[l.g.PositionKind]=new l.g(this._scene.getEngine(),k,l.g.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const k=[];k.push(0),k.push(1),k.push(2),k.push(0),k.push(2),k.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(k)}_rebuild(){const k=this._vertexBuffers[l.g.PositionKind];k&&(k._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const F=this._scene.activeCamera;return!!F&&(M=M||F._postProcesses.filter((k=>null!=k)),!(!M||0===M.length||!this._scene.postProcessesEnabled)&&(M[0].activate(F,k,null!==M&&void 0!==M),!0))}directRender(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const B=this._scene.getEngine();for(let A=0;A<k.length;A++){var G;if(A<k.length-1)k[A+1].activate(this._scene.activeCamera,null===M||void 0===M?void 0:M.texture);else M?B.bindFramebuffer(M,l,void 0,void 0,F,t):g||B.restoreDefaultFramebuffer(),null===(G=B._debugInsertMarker)||void 0===G||G.call(B,`post process ${k[A].name} output`);const N=k[A],d=N.apply();d&&(N.onBeforeRenderObservable.notifyObservers(d),this._prepareBuffers(),B.bindBuffers(this._vertexBuffers,this._indexBuffer,d),B.drawElementsType(0,0,6),N.onAfterRenderObservable.notifyObservers(d))}B.setDepthBuffer(!0),B.setDepthWrite(!0)}_finalizeFrame(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const g=this._scene.activeCamera;if(!g)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(l=l||g._postProcesses.filter((k=>null!=k))).length||!this._scene.postProcessesEnabled)return;const B=this._scene.getEngine();for(let A=0,N=l.length;A<N;A++){const d=l[A];var G;if(A<N-1)d._outputTexture=l[A+1].activate(g,null===M||void 0===M?void 0:M.texture);else M?(B.bindFramebuffer(M,F,void 0,void 0,t),d._outputTexture=M):(B.restoreDefaultFramebuffer(),d._outputTexture=null),null===(G=B._debugInsertMarker)||void 0===G||G.call(B,`post process ${l[A].name} output`);if(k)break;const L=d.apply();L&&(d.onBeforeRenderObservable.notifyObservers(L),this._prepareBuffers(),B.bindBuffers(this._vertexBuffers,this._indexBuffer,L),B.drawElementsType(0,0,6),d.onAfterRenderObservable.notifyObservers(L))}B.setDepthBuffer(!0),B.setDepthWrite(!0),B.setAlphaMode(0)}dispose(){const k=this._vertexBuffers[l.g.PositionKind];k&&(k.dispose(),this._vertexBuffers[l.g.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},2392:(k,M,F)=>{F.d(M,{c:()=>G});var l=F(676),t=F(682);class g{set opaqueSortCompareFn(k){this._opaqueSortCompareFn=k||g.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(k){this._alphaTestSortCompareFn=k||g.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(k){this._transparentSortCompareFn=k||g.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=k,this._opaqueSubMeshes=new l.c(256),this._transparentSubMeshes=new l.c(256),this._alphaTestSubMeshes=new l.c(256),this._depthOnlySubMeshes=new l.c(256),this._particleSystems=new l.c(256),this._spriteManagers=new l.c(256),this._empty=!0,this._edgesRenderers=new l.b(16),this._scene=M,this.opaqueSortCompareFn=F,this.alphaTestSortCompareFn=t,this.transparentSortCompareFn=g}render(k,M,F,l){if(k)return void k(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const t=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(t.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),t.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const g=t.getStencilBuffer();if(t.setStencilBuffer(!1),M&&this._renderSprites(),F&&this._renderParticles(l),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(t.setStencilBuffer(g),this._scene.useOrderIndependentTransparency){const k=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);k.length&&this._renderTransparent(k)}else this._renderTransparent(this._transparentSubMeshes);t.setAlphaMode(0)}if(t.setStencilBuffer(!1),this._edgesRenderers.length){for(let k=0;k<this._edgesRenderers.length;k++)this._edgesRenderers.data[k].render();t.setAlphaMode(0)}t.setStencilBuffer(g)}_renderOpaqueSorted(k){g._RenderSorted(k,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(k){g._RenderSorted(k,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(k){g._RenderSorted(k,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(k,M,F,l){let B,G=0;const A=F?F.globalPosition:g._ZeroVector;if(l)for(;G<k.length;G++)B=k.data[G],B._alphaIndex=B.getMesh().alphaIndex,B._distanceToCamera=t.m.Distance(B.getBoundingInfo().boundingSphere.centerWorld,A);const N=k.length===k.data.length?k.data:k.data.slice(0,k.length);M&&N.sort(M);const d=N[0].getMesh().va();for(G=0;G<N.length;G++)if(B=N[G],!d._activeMeshesFrozenButKeepClipping||B.isInFrustum(d._frustumPlanes)){if(l){const k=B.Ha();if(k&&k.needDepthPrePass){const M=k.va().getEngine();M.setColorWrite(!1),M.setAlphaMode(0),B.render(!1),M.setColorWrite(!0)}}B.render(l)}}static defaultTransparentSortCompare(k,M){return k._alphaIndex>M._alphaIndex?1:k._alphaIndex<M._alphaIndex?-1:g.backToFrontSortCompare(k,M)}static backToFrontSortCompare(k,M){return k._distanceToCamera<M._distanceToCamera?1:k._distanceToCamera>M._distanceToCamera?-1:0}static frontToBackSortCompare(k,M){return k._distanceToCamera<M._distanceToCamera?-1:k._distanceToCamera>M._distanceToCamera?1:0}static PainterSortCompare(k,M){const F=k.getMesh(),l=M.getMesh();return F.material&&l.material?F.material.uniqueId-l.material.uniqueId:F.uniqueId-l.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(k,M,F){void 0===M&&(M=k.getMesh()),void 0===F&&(F=k.Ha()),null!==F&&void 0!==F&&(F.needAlphaBlendingForMesh(M)?this._transparentSubMeshes.push(k):F.needAlphaTesting()?(F.needDepthPrePass&&this._depthOnlySubMeshes.push(k),this._alphaTestSubMeshes.push(k)):(F.needDepthPrePass&&this._depthOnlySubMeshes.push(k),this._opaqueSubMeshes.push(k)),M._renderingGroup=this,M._edgesRenderer&&M.isEnabled()&&M.isVisible&&M._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(M._edgesRenderer),this._empty=!1)}dispatchSprites(k){this._spriteManagers.push(k),this._empty=!1}dispatchParticles(k){this._particleSystems.push(k),this._empty=!1}_renderParticles(k){if(0===this._particleSystems.length)return;const M=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let F=0;F<this._particleSystems.length;F++){const l=this._particleSystems.data[F];if(0===(M&&M.layerMask&l.layerMask))continue;const t=l.j;t.position&&k&&-1===k.indexOf(t)||this._scene._activeParticles.addCount(l.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const k=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let M=0;M<this._spriteManagers.length;M++){const F=this._spriteManagers.data[M];0!==(k&&k.layerMask&F.layerMask)&&F.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}g._ZeroVector=t.m.Zero();class B{}class G{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(k){k!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=k,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const k of this._scene.meshes)if(k.rk)for(const M of k.rk)M._wasDispatched=!1;if(this._scene.spriteManagers)for(const k of this._scene.spriteManagers)k._wasDispatched=!1;for(const k of this._scene.Ck)k._wasDispatched=!1}constructor(k){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new B,this._maintainStateBetweenFrames=!1,this._scene=k;for(let M=G.MIN_RENDERINGGROUPS;M<G.MAX_RENDERINGGROUPS;M++)this._autoClearDepthStencil[M]={Gl:!0,depth:!0,stencil:!0}}getRenderingGroup(k){const M=k||0;return this._prepareRenderingGroup(M),this._renderingGroups[M]}_clearDepthStencilBuffer(){let k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,k,M),this._depthStencilBufferAlreadyCleaned=!0)}render(k,M,F,l){const t=this._renderingGroupInfo;if(t.xf=this._scene,t.camera=this._scene.activeCamera,this._scene.spriteManagers&&l)for(let g=0;g<this._scene.spriteManagers.length;g++){const k=this._scene.spriteManagers[g];this.dispatchSprites(k)}for(let g=G.MIN_RENDERINGGROUPS;g<G.MAX_RENDERINGGROUPS;g++){this._depthStencilBufferAlreadyCleaned=g===G.MIN_RENDERINGGROUPS;const B=this._renderingGroups[g];if(!B||B._empty)continue;const A=1<<g;if(t.renderingGroupId=g,this._scene.onBeforeRenderingGroupObservable.notifyObservers(t,A),G.AUTOCLEAR){const k=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(g):this._autoClearDepthStencil[g];k&&k.Gl&&this._clearDepthStencilBuffer(k.depth,k.stencil)}for(const k of this._scene._beforeRenderingGroupDrawStage)k.action(g);B.render(k,l,F,M);for(const k of this._scene._afterRenderingGroupDrawStage)k.action(g);this._scene.onAfterRenderingGroupObservable.notifyObservers(t,A)}}reset(){if(!this.maintainStateBetweenFrames)for(let k=G.MIN_RENDERINGGROUPS;k<G.MAX_RENDERINGGROUPS;k++){const M=this._renderingGroups[k];M&&M.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let k=G.MIN_RENDERINGGROUPS;k<G.MAX_RENDERINGGROUPS;k++){const M=this._renderingGroups[k];M&&M.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let k=G.MIN_RENDERINGGROUPS;k<G.MAX_RENDERINGGROUPS;k++){const M=this._renderingGroups[k];M&&M.dispose()}}_prepareRenderingGroup(k){void 0===this._renderingGroups[k]&&(this._renderingGroups[k]=new g(k,this._scene,this._customOpaqueSortCompareFn[k],this._customAlphaTestSortCompareFn[k],this._customTransparentSortCompareFn[k]))}dispatchSprites(k){this.maintainStateBetweenFrames&&k._wasDispatched||(k._wasDispatched=!0,this.getRenderingGroup(k.renderingGroupId).dispatchSprites(k))}dispatchParticles(k){this.maintainStateBetweenFrames&&k._wasDispatched||(k._wasDispatched=!0,this.getRenderingGroup(k.renderingGroupId).dispatchParticles(k))}dispatch(k,M,F){void 0===M&&(M=k.getMesh()),this.maintainStateBetweenFrames&&k._wasDispatched||(k._wasDispatched=!0,this.getRenderingGroup(M.renderingGroupId).dispatch(k,M,F))}setRenderingOrder(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[k]=M,this._customAlphaTestSortCompareFn[k]=F,this._customTransparentSortCompareFn[k]=l,this._renderingGroups[k]){const M=this._renderingGroups[k];M.opaqueSortCompareFn=this._customOpaqueSortCompareFn[k],M.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[k],M.transparentSortCompareFn=this._customTransparentSortCompareFn[k]}}setRenderingAutoClearDepthStencil(k,M){let F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[k]={Gl:M,depth:F,stencil:l}}getAutoClearDepthStencilSetup(k){return this._autoClearDepthStencil[k]}}G.MAX_RENDERINGGROUPS=4,G.MIN_RENDERINGGROUPS=0,G.AUTOCLEAR=!0},2414:(k,M,F)=>{F.r(M),F.d(M,{postprocessVertexShader:()=>g});const l="postprocessVertexShader",t="attribute vec2 position;uniform vec2 scale;varying vec2 vUV;const vec2 madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvUV=(position*madd+madd)*scale;gl_Position=vec4(position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";F(567).e.ShadersStore[l]=t;const g={name:l,shader:t}}}]);