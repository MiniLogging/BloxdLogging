"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[3],{2044:(j,H,s)=>{s.d(H,{c:()=>p});var i=s(502),B=s(693),e=s(2030),k=s(2049),V=s(2057),C=s(706),L=s(652),U=s(591),x=s(514);U.b.prototype.setDepthStencilTexture=function(j,H){this._engine.setDepthStencilTexture(this._samplers[j],this._uniforms[j],H,j)};class p extends e.b{get renderList(){return this._renderList}set renderList(j){this._renderList!==j&&(this._unObserveRenderList&&(this._unObserveRenderList(),this._unObserveRenderList=null),j&&(this._unObserveRenderList=(0,C.g)(j,this._renderListHasChanged)),this._renderList=j)}get postProcesses(){return this._postProcesses}get _prePassEnabled(){return!!this._prePassRenderTarget&&this._prePassRenderTarget.enabled}set onAfterUnbind(j){this._onAfterUnbindObserver&&this.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=this.onAfterUnbindObservable.add(j)}set onBeforeRender(j){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(j)}set onAfterRender(j){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(j)}set onClear(j){this._onClearObserver&&this.onClearObservable.remove(this._onClearObserver),this._onClearObserver=this.onClearObservable.add(j)}get renderPassIds(){return this._renderPassIds}get currentRefreshId(){return this._currentRefreshId}setMaterialForRendering(j,H){let s;s=Array.isArray(j)?j:[j];for(let i=0;i<s.length;++i)for(let j=0;j<this._renderPassIds.length;++j)s[i].setMaterialForRenderPass(this._renderPassIds[j],void 0!==H?Array.isArray(H)?H[j]:H:void 0)}get isMulti(){var j;return(null===(j=this._renderTarget)||void 0===j?void 0:j.isMulti)??!1}get renderTargetOptions(){return this._renderTargetOptions}get renderTarget(){return this._renderTarget}_onRatioRescale(){this._sizeRatio&&this.resize(this._initialSizeParameter)}set boundingBoxSize(j){if(this._boundingBoxSize&&this._boundingBoxSize.equals(j))return;this._boundingBoxSize=j;const H=this.va();H&&H.markAllMaterialsAsDirty(1)}get boundingBoxSize(){return this._boundingBoxSize}get depthStencilTexture(){var j;return(null===(j=this._renderTarget)||void 0===j?void 0:j._depthStencilTexture)??null}constructor(j,H,s){let k,C=arguments.length>3&&void 0!==arguments[3]&&arguments[3],L=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],U=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=arguments.length>7&&void 0!==arguments[7]?arguments[7]:e.b.TRILINEAR_SAMPLINGMODE,a=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],E=arguments.length>9&&void 0!==arguments[9]&&arguments[9],r=arguments.length>10&&void 0!==arguments[10]&&arguments[10],q=arguments.length>11&&void 0!==arguments[11]?arguments[11]:5,J=arguments.length>12&&void 0!==arguments[12]&&arguments[12],h=arguments.length>13?arguments[13]:void 0,o=arguments.length>14?arguments[14]:void 0,R=arguments.length>15&&void 0!==arguments[15]&&arguments[15],Y=arguments.length>16&&void 0!==arguments[16]&&arguments[16],v=!0;if("object"===typeof C){const j=C;C=!!j.generateMipMaps,L=j.doNotChangeAspectRatio??!0,U=j.type??0,x=!!j.isCube,p=j.samplingMode??e.b.TRILINEAR_SAMPLINGMODE,a=j.generateDepthBuffer??!0,E=!!j.generateStencilBuffer,r=!!j.isMulti,q=j.format??5,J=!!j.delayAllocation,h=j.samples,o=j.creationFlags,R=!!j.noColorAttachment,Y=!!j.useSRGBBuffer,k=j.colorAttachment,v=j.gammaSpace??v}if(super(null,s,!C,void 0,p,void 0,void 0,void 0,void 0,q),this._unObserveRenderList=null,this._renderListHasChanged=(j,H)=>{const s=this._renderList?this._renderList.length:0;var i;(0===H&&s>0||0===s)&&(null===(i=this.va())||void 0===i||i.meshes.forEach((j=>{j._markSubMeshesAsLightDirty()})))},this.particleSystemList=null,this.renderParticles=!0,this.renderSprites=!1,this.forceLayerMaskCheck=!1,this.ignoreCameraViewport=!1,this.onBeforeBindObservable=new i.d,this.onAfterUnbindObservable=new i.d,this.onBeforeRenderObservable=new i.d,this.onAfterRenderObservable=new i.d,this.onClearObservable=new i.d,this.onResizeObservable=new i.d,this._cleared=!1,this.skipInitialClear=!1,this._currentRefreshId=-1,this._refreshRate=1,this._samples=1,this._canRescale=!0,this._renderTarget=null,this.boundingBoxPosition=B.p.Zero(),this._dumpToolsLoading=!1,!(s=this.va()))return;const c=this.va().getEngine();this._gammaSpace=v,this._coordinatesMode=e.b.PROJECTION_MODE,this.renderList=[],this.name=j,this.isRenderTarget=!0,this._initialSizeParameter=H,this._renderPassIds=[],this._isCubeData=x,this._processSizeParameter(H),this.renderPassId=this._renderPassIds[0],this._resizeObserver=c.onResizeObservable.add((()=>{})),this._generateMipMaps=!!C,this._doNotChangeAspectRatio=L,this._renderingManager=new V.d(s),this._renderingManager._useSceneAutoClearSetup=!0,r||(this._renderTargetOptions={generateMipMaps:C,type:U,format:this._format??void 0,samplingMode:this.samplingMode,generateDepthBuffer:a,generateStencilBuffer:E,samples:h,creationFlags:o,noColorAttachment:R,useSRGBBuffer:Y,colorAttachment:k,label:this.name},this.samplingMode===e.b.NEAREST_SAMPLINGMODE&&(this.wrapU=e.b.CLAMP_ADDRESSMODE,this.wrapV=e.b.CLAMP_ADDRESSMODE),J||(x?(this._renderTarget=s.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions),this.coordinatesMode=e.b.INVCUBIC_MODE,this._textureMatrix=B.d.Identity()):this._renderTarget=s.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==h&&(this.samples=h)))}createDepthStencilTexture(){var j;let H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,s=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:14,k=arguments.length>5?arguments[5]:void 0;null===(j=this._renderTarget)||void 0===j||j.createDepthStencilTexture(H,s,i,B,e,k)}_releaseRenderPassId(){if(this._scene){const j=this._scene.getEngine();for(let H=0;H<this._renderPassIds.length;++H)j.releaseRenderPassId(this._renderPassIds[H])}this._renderPassIds=[]}_createRenderPassId(){this._releaseRenderPassId();const j=this._scene.getEngine(),H=this._isCubeData?6:this.getRenderLayers()||1;for(let s=0;s<H;++s)this._renderPassIds[s]=j.createRenderPassId(`RenderTargetTexture - ${this.name}#${s}`)}_processSizeParameter(j){let H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(j.ratio){this._sizeRatio=j.ratio;const H=this._getEngine();this._size={width:this._bestReflectionRenderTargetDimension(H.getRenderWidth(),this._sizeRatio),height:this._bestReflectionRenderTargetDimension(H.getRenderHeight(),this._sizeRatio)}}else this._size=j;H&&this._createRenderPassId()}get samples(){var j;return(null===(j=this._renderTarget)||void 0===j?void 0:j.samples)??this._samples}set samples(j){this._renderTarget&&(this._samples=this._renderTarget.setSamples(j))}resetRefreshCounter(){this._currentRefreshId=-1}get refreshRate(){return this._refreshRate}set refreshRate(j){this._refreshRate=j,this.resetRefreshCounter()}addPostProcess(j){if(!this._postProcessManager){const j=this.va();if(!j)return;this._postProcessManager=new k.c(j),this._postProcesses=new Array}this._postProcesses.push(j),this._postProcesses[0].wl=!1}clearPostProcesses(){let j=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this._postProcesses){if(j)for(const j of this._postProcesses)j.dispose();this._postProcesses=[]}}removePostProcess(j){if(!this._postProcesses)return;const H=this._postProcesses.indexOf(j);-1!==H&&(this._postProcesses.splice(H,1),this._postProcesses.length>0&&(this._postProcesses[0].wl=!1))}_shouldRender(){return-1===this._currentRefreshId||this.refreshRate===this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)}getRenderSize(){return this.getRenderWidth()}getRenderWidth(){return this._size.width?this._size.width:this._size}getRenderHeight(){return this._size.width?this._size.height:this._size}getRenderLayers(){const j=this._size.layers;if(j)return j;const H=this._size.depth;return H||0}disableRescaling(){this._canRescale=!1}get canRescale(){return this._canRescale}scale(j){const H=Math.max(1,this.getRenderSize()*j);this.resize(H)}getReflectionTextureMatrix(){return this.isCube?this._textureMatrix:super.getReflectionTextureMatrix()}resize(j){var H;const s=this.isCube;null===(H=this._renderTarget)||void 0===H||H.dispose(),this._renderTarget=null;const i=this.va();i&&(this._processSizeParameter(j,!1),this._renderTarget=s?i.getEngine().createRenderTargetCubeTexture(this.getRenderSize(),this._renderTargetOptions):i.getEngine().createRenderTargetTexture(this._size,this._renderTargetOptions),this._texture=this._renderTarget.texture,void 0!==this._renderTargetOptions.samples&&(this.samples=this._renderTargetOptions.samples),this.onResizeObservable.hasObservers()&&this.onResizeObservable.notifyObservers(this))}render(){let j=arguments.length>0&&void 0!==arguments[0]&&arguments[0],H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._render(j,H)}isReadyForRendering(){return this._dumpToolsLoading||(this._dumpToolsLoading=!0,s.e(9).then(s.bind(s,2162)).then((j=>this._dumpTools=j))),this._render(!1,!1,!0)}_render(){let j=arguments.length>0&&void 0!==arguments[0]&&arguments[0],H=arguments.length>1&&void 0!==arguments[1]&&arguments[1],s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i=this.va();if(!i)return s;const B=i.getEngine();if(void 0!==this.useCameraPostProcesses&&(j=this.useCameraPostProcesses),this._waitingRenderList){if(!this.renderListPredicate){this.renderList=[];for(let j=0;j<this._waitingRenderList.length;j++){const H=this._waitingRenderList[j],s=i.getMeshById(H);s&&this.renderList.push(s)}}this._waitingRenderList=void 0}if(this.renderListPredicate){this.renderList?this.renderList.length=0:this.renderList=[];const j=this.va();if(!j)return s;const H=j.meshes;for(let s=0;s<H.length;s++){const j=H[s];this.renderListPredicate(j)&&this.renderList.push(j)}}const e=B.currentRenderPassId;this.onBeforeBindObservable.notifyObservers(this);const k=this.activeCamera??i.activeCamera,V=i.activeCamera;k&&(k!==i.activeCamera&&(i.setTransformMatrix(k.getViewMatrix(),k.getProjectionMatrix(!0)),i.activeCamera=k),B.setViewport(k.rigParent?k.rigParent.viewport:k.viewport,this.getRenderWidth(),this.getRenderHeight())),this._defaultRenderListPrepared=!1;let C=s;if(s){i.getViewMatrix()||i.updateTransformMatrix();const j=this.is2DArray||this.is3D?this.getRenderLayers():this.isCube?6:1;for(let e=0;e<j&&C;e++){let j=null;const H=this.renderList?this.renderList:i.getActiveMeshes().data,k=this.renderList?this.renderList.length:i.getActiveMeshes().length;B.currentRenderPassId=this._renderPassIds[e],this.onBeforeRenderObservable.notifyObservers(e),this.getCustomRenderList&&(j=this.getCustomRenderList(e,H,k)),j||(j=H),this._doNotChangeAspectRatio||i.updateTransformMatrix(!0);for(let i=0;i<j.length&&C;++i){const H=j[i];if(H.isEnabled()&&!H.isBlocked&&H.isVisible&&H.lk)if(this.customIsReadyFunction){if(!this.customIsReadyFunction(H,this.refreshRate,s)){C=!1;continue}}else if(!H.isReady(!0)){C=!1;continue}}this.onAfterRenderObservable.notifyObservers(e),(this.is2DArray||this.is3D||this.isCube)&&(i.incrementRenderId(),i.resetCachedMaterial())}const H=this.particleSystemList||i.wk;for(const s of H)s.isReady()||(C=!1)}else if(!this.is2DArray&&!this.is3D||this.isMulti)if(this.isCube&&!this.isMulti)for(let L=0;L<6;L++)this._renderToTarget(L,j,H,void 0,k),i.incrementRenderId(),i.resetCachedMaterial();else this._renderToTarget(0,j,H,void 0,k);else for(let L=0;L<this.getRenderLayers();L++)this._renderToTarget(0,j,H,L,k),i.incrementRenderId(),i.resetCachedMaterial();return this.onAfterUnbindObservable.notifyObservers(this),B.currentRenderPassId=e,i.activeCamera=V,V&&(this.activeCamera&&this.activeCamera!==i.activeCamera&&i.setTransformMatrix(V.getViewMatrix(),V.getProjectionMatrix(!0)),B.setViewport(V.viewport)),i.resetCachedMaterial(),C}_bestReflectionRenderTargetDimension(j,H){const s=j*H,i=(0,L.q)(s+16384/(128+s));return Math.min((0,L.d)(j),i)}_prepareRenderingManager(j,H,s,i){const B=this.va();if(!B)return;this._renderingManager.reset();const e=B.getRenderId();for(let V=0;V<H;V++){const H=j[V];if(H&&!H.isBlocked){if(this.customIsReadyFunction){if(!this.customIsReadyFunction(H,this.refreshRate,!1)){this.resetRefreshCounter();continue}}else if(!H.isReady(0===this.refreshRate)){this.resetRefreshCounter();continue}if(!H._internalAbstractMeshDataInfo._currentLODIsUpToDate&&s&&(H._internalAbstractMeshDataInfo._currentLOD=B.customLODSelector?B.customLODSelector(H,s):H.getLOD(s),H._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0),!H._internalAbstractMeshDataInfo._currentLOD)continue;let j,k=H._internalAbstractMeshDataInfo._currentLOD;if(k!==H&&0!==k.billboardMode&&k.$j(),k._preActivateForIntermediateRendering(e),j=!(!i||!s)&&0===(H.layerMask&s.layerMask),H.isEnabled()&&H.isVisible&&H.lk&&!j){if(k!==H&&k._activate(e,!0),H._activate(e,!0)&&H.lk.length){H.isAnInstance?H._internalAbstractMeshDataInfo._actAsRegularMesh&&(k=H):k._internalAbstractMeshDataInfo._onlyForInstancesIntermediate=!1,k._internalAbstractMeshDataInfo._isActiveIntermediate=!0,B._prepareSkeleton(k);for(let j=0;j<k.lk.length;j++){const H=k.lk[j];this._renderingManager.dispatch(H,k)}}H._postActivate()}}}const k=this.particleSystemList||B.wk;for(let V=0;V<k.length;V++){const j=k[V],H=j.j;j.isStarted()&&H&&(!H.position||H.isEnabled())&&this._renderingManager.dispatchParticles(j)}}_bindFrameBuffer(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const s=this.va();if(!s)return;const i=s.getEngine();this._renderTarget&&i.bindFramebuffer(this._renderTarget,this.isCube?j:void 0,void 0,void 0,this.ignoreCameraViewport,0,H)}_unbindFrameBuffer(j,H){this._renderTarget&&j.unBindFramebuffer(this._renderTarget,this.isCube,(()=>{this.onAfterRenderObservable.notifyObservers(H)}))}_prepareFrame(j,H,s,i){this._postProcessManager?this._prePassEnabled||this._postProcessManager._prepareFrame(this._texture,this._postProcesses):i&&j.postProcessManager._prepareFrame(this._texture)||this._bindFrameBuffer(H,s)}_renderToTarget(j,H,s){var i,B;let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const V=this.va();if(!V)return;const C=V.getEngine();this._prepareFrame(V,j,e,H),null===(i=C._debugPushGroup)||void 0===i||i.call(C,`render to face #${j} layer #${e}`,2),this.is2DArray||this.is3D?(C.currentRenderPassId=this._renderPassIds[e],this.onBeforeRenderObservable.notifyObservers(e)):(C.currentRenderPassId=this._renderPassIds[j],this.onBeforeRenderObservable.notifyObservers(j));if(C.snapshotRendering&&1===C.snapshotRenderingMode)this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(C):this.skipInitialClear||C.clear(this.clearColor||V.clearColor,!0,!0,!0);else{var L;let i=null;const B=this.renderList?this.renderList:V.getActiveMeshes().data,U=this.renderList?this.renderList.length:V.getActiveMeshes().length;this.getCustomRenderList&&(i=this.getCustomRenderList(this.is2DArray||this.is3D?e:j,B,U)),i?this._prepareRenderingManager(i,i.length,k,this.forceLayerMaskCheck):(this._defaultRenderListPrepared||(this._prepareRenderingManager(B,U,k,!this.renderList||this.forceLayerMaskCheck),this._defaultRenderListPrepared=!0),i=B);for(const H of V._beforeRenderTargetClearStage)H.action(this,j,e);this.onClearObservable.hasObservers()?this.onClearObservable.notifyObservers(C):this.skipInitialClear||C.clear(this.clearColor||V.clearColor,!0,!0,!0),this._doNotChangeAspectRatio||V.updateTransformMatrix(!0);for(const H of V._beforeRenderTargetDrawStage)H.action(this,j,e);this._renderingManager.render(this.customRenderFunction,i,this.renderParticles,this.renderSprites);for(const H of V._afterRenderTargetDrawStage)H.action(this,j,e);const p=(null===(L=this._texture)||void 0===L?void 0:L.generateMipMaps)??!1;this._texture&&(this._texture.generateMipMaps=!1),this._postProcessManager?this._postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,j,this._postProcesses,this.ignoreCameraViewport):H&&V.postProcessManager._finalizeFrame(!1,this._renderTarget??void 0,j);for(const H of V._afterRenderTargetPostProcessStage)H.action(this,j,e);this._texture&&(this._texture.generateMipMaps=p),this._doNotChangeAspectRatio||V.updateTransformMatrix(!0),s&&(this._dumpTools?this._dumpTools.DumpFramebuffer(this.getRenderWidth(),this.getRenderHeight(),C):x.b.Error("dumpTools module is still being loaded. To speed up the process import dump tools directly in your project"))}null===(B=C._debugPopGroup)||void 0===B||B.call(C,2),this._unbindFrameBuffer(C,j),this._texture&&this.isCube&&5===j&&C.generateMipMapsForCubemap(this._texture,!0)}setRenderingOrder(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(j,H,s,i)}setRenderingAutoClearDepthStencil(j,H){this._renderingManager.setRenderingAutoClearDepthStencil(j,H),this._renderingManager._useSceneAutoClearSetup=!1}clone(){const j=this.getSize(),H=new p(this.name,j,this.va(),this._renderTargetOptions.generateMipMaps,this._doNotChangeAspectRatio,this._renderTargetOptions.type,this.isCube,this._renderTargetOptions.samplingMode,this._renderTargetOptions.generateDepthBuffer,this._renderTargetOptions.generateStencilBuffer,void 0,this._renderTargetOptions.format,void 0,this._renderTargetOptions.samples);return H.qi=this.qi,H.level=this.level,H.coordinatesMode=this.coordinatesMode,this.renderList&&(H.renderList=this.renderList.slice(0)),H}serialize(){if(!this.name)return null;const j=super.serialize();if(j.renderTargetSize=this.getRenderSize(),j.renderList=[],this.renderList)for(let H=0;H<this.renderList.length;H++)j.renderList.push(this.renderList[H].id);return j}disposeFramebufferObjects(){var j;null===(j=this._renderTarget)||void 0===j||j.dispose(!0)}releaseInternalTexture(){var j;null===(j=this._renderTarget)||void 0===j||j.releaseTextures(),this._texture=null}dispose(){var j;this.onResizeObservable.clear(),this.onClearObservable.clear(),this.onAfterRenderObservable.clear(),this.onAfterUnbindObservable.clear(),this.onBeforeBindObservable.clear(),this.onBeforeRenderObservable.clear(),this._postProcessManager&&(this._postProcessManager.dispose(),this._postProcessManager=null),this._prePassRenderTarget&&this._prePassRenderTarget.dispose(),this._releaseRenderPassId(),this.clearPostProcesses(!0),this._resizeObserver&&(this.va().getEngine().onResizeObservable.remove(this._resizeObserver),this._resizeObserver=null),this.renderList=null;const H=this.va();if(!H)return;let s=H.customRenderTargets.indexOf(this);s>=0&&H.customRenderTargets.splice(s,1);for(const i of H.cameras)s=i.customRenderTargets.indexOf(this),s>=0&&i.customRenderTargets.splice(s,1);null===(j=this._renderTarget)||void 0===j||j.dispose(),this._renderTarget=null,this._texture=null,super.dispose()}_rebuild(){this.refreshRate===p.REFRESHRATE_RENDER_ONCE&&(this.refreshRate=p.REFRESHRATE_RENDER_ONCE),this._postProcessManager&&this._postProcessManager._rebuild()}freeRenderingGroups(){this._renderingManager&&this._renderingManager.freeRenderingGroups()}getViewCount(){return 1}}p.REFRESHRATE_RENDER_ONCE=0,p.REFRESHRATE_RENDER_ONEVERYFRAME=1,p.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,e.b._CreateRenderTargetTexture=(j,H,s,i,B)=>new p(j,H,s,i)},2068:(j,H,s)=>{s.d(H,{d:()=>L,h:()=>U});var i=s(742),B=s(722),e=s(502),k=s(591),V=s(804);s(2070);const C={xa:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]};class L{constructor(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:C;this._fullscreenViewport=new B.e(0,0,1,1);const s=H.xa??C.xa,e=H.indices??C.indices;this.Sj=j,this._vertexBuffers={[i.e.PositionKind]:new i.e(j,s,i.e.PositionKind,!1,!1,2)},this._indexBuffer=j.createIndexBuffer(e),this._onContextRestoredObserver=j.onContextRestoredObservable.add((()=>{this._indexBuffer=j.createIndexBuffer(e);for(const j in this._vertexBuffers){this._vertexBuffers[j]._rebuild()}}))}setViewport(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._fullscreenViewport;this.Sj.setViewport(j)}bindBuffers(j){this.Sj.bindBuffers(this._vertexBuffers,this._indexBuffer,j)}applyEffectWrapper(j){this.Sj.setState(!0),this.Sj.depthCullingState.depthTest=!1,this.Sj.stencilState.stencilTest=!1,this.Sj.enableEffect(j.drawWrapper),this.bindBuffers(j.effect),j.onApplyObservable.notifyObservers({})}saveStates(){this._savedStateDepthTest=this.Sj.depthCullingState.depthTest,this._savedStateStencilTest=this.Sj.stencilState.stencilTest}restoreStates(){this.Sj.depthCullingState.depthTest=this._savedStateDepthTest,this.Sj.stencilState.stencilTest=this._savedStateStencilTest}draw(){this.Sj.drawElementsType(0,0,6)}_isRenderTargetTexture(j){return void 0!==j.renderTarget}render(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!j.effect.isReady())return;this.saveStates(),this.setViewport();const s=null===H?null:this._isRenderTargetTexture(H)?H.renderTarget:H;s&&this.Sj.bindFramebuffer(s),this.applyEffectWrapper(j),this.draw(),s&&this.Sj.unBindFramebuffer(s),this.restoreStates()}dispose(){const j=this._vertexBuffers[i.e.PositionKind];j&&(j.dispose(),delete this._vertexBuffers[i.e.PositionKind]),this._indexBuffer&&this.Sj._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.Sj.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}}class U{static RegisterShaderCodeProcessing(j,H){H?U._CustomShaderCodeProcessing[j??""]=H:delete U._CustomShaderCodeProcessing[j??""]}static _GetShaderCodeProcessing(j){return U._CustomShaderCodeProcessing[j]??U._CustomShaderCodeProcessing[""]}get name(){return this.options.name}set name(j){this.options.name=j}isReady(){var j;return(null===(j=this._drawWrapper.effect)||void 0===j?void 0:j.isReady())??!1}get drawWrapper(){return this._drawWrapper}get effect(){return this._drawWrapper.effect}set effect(j){this._drawWrapper.effect=j}constructor(j){this.alphaMode=0,this.onEffectCreatedObservable=new e.d(void 0,!0),this.onApplyObservable=new e.d,this._shadersLoaded=!1,this._webGPUReady=!1,this._importPromises=[],this.options={...j,name:j.name||"effectWrapper",Sj:j.Sj,uniforms:j.uniforms||j.uniformNames||[],uniformNames:void 0,samplers:j.samplers||j.samplerNames||[],samplerNames:void 0,attributeNames:j.attributeNames||["position"],uniformBuffers:j.uniformBuffers||[],defines:j.defines||"",useShaderStore:j.useShaderStore||!1,vertexUrl:j.vertexUrl||j.vertexShader||"postprocess",vertexShader:void 0,fragmentShader:j.fragmentShader||"pass",indexParameters:j.indexParameters,blockCompilation:j.blockCompilation||!1,shaderLanguage:j.shaderLanguage||0,onCompiled:j.onCompiled||void 0,extraInitializations:j.extraInitializations||void 0,extraInitializationsAsync:j.extraInitializationsAsync||void 0,useAsPostProcess:j.useAsPostProcess??!1},this.options.uniformNames=this.options.uniforms,this.options.samplerNames=this.options.samplers,this.options.vertexShader=this.options.vertexUrl,this.options.useAsPostProcess&&(-1===this.options.samplers.indexOf("textureSampler")&&this.options.samplers.push("textureSampler"),-1===this.options.uniforms.indexOf("scale")&&this.options.uniforms.push("scale")),j.vertexUrl||j.vertexShader?this._shaderPath={vertexSource:this.options.vertexShader}:(this.options.useAsPostProcess||(this.options.uniforms.push("scale"),this.onApplyObservable.add((()=>{this.effect.setFloat2("scale",1,1)}))),this._shaderPath={vertex:this.options.vertexShader}),this._shaderPath.fragmentSource=this.options.fragmentShader,this._shaderPath.spectorName=this.options.name,this.options.useShaderStore&&(this._shaderPath.fragment=this._shaderPath.fragmentSource,this._shaderPath.vertex||(this._shaderPath.vertex=this._shaderPath.vertexSource),delete this._shaderPath.fragmentSource,delete this._shaderPath.vertexSource),this.onApplyObservable.add((()=>{this.bind()})),this.options.useShaderStore||(this._onContextRestoredObserver=this.options.Sj.onContextRestoredObservable.add((()=>{this.effect._pipelineContext=null,this.effect._prepareEffect()}))),this._drawWrapper=new V.e(this.options.Sj),this._webGPUReady=1===this.options.shaderLanguage;const H=Array.isArray(this.options.defines)?this.options.defines.join("\n"):this.options.defines;this._postConstructor(this.options.blockCompilation,H,this.options.extraInitializations)}_gatherImports(){let j=arguments.length>0&&void 0!==arguments[0]&&arguments[0],H=arguments.length>1?arguments[1]:void 0;this.options.useAsPostProcess&&(j&&this._webGPUReady?H.push(Promise.all([s.e(36).then(s.bind(s,12577))])):H.push(Promise.all([Promise.resolve().then(s.bind(s,2070))])))}_postConstructor(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0;this._importPromises.length=0,i&&this._importPromises.push(...i);const B=this.options.Sj.isWebGPU&&!U.ForceGLSL;this._gatherImports(B,this._importPromises),void 0!==s&&s(B,this._importPromises),B&&this._webGPUReady&&(this.options.shaderLanguage=1),j||this.updateEffect(H)}updateEffect(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3?arguments[3]:void 0,B=arguments.length>4?arguments[4]:void 0,e=arguments.length>5?arguments[5]:void 0,V=arguments.length>6?arguments[6]:void 0,C=arguments.length>7?arguments[7]:void 0;const L=U._GetShaderCodeProcessing(this.name);if(null!==L&&void 0!==L&&L.defineCustomBindings){var x,p;const i=(null===(x=H)||void 0===x?void 0:x.slice())??[];i.push(...this.options.uniforms);const B=(null===(p=s)||void 0===p?void 0:p.slice())??[];B.push(...this.options.samplers),j=L.defineCustomBindings(this.name,j,i,B),H=i,s=B}this.options.defines=j||"";const a=this._shadersLoaded||0===this._importPromises.length?void 0:async()=>{await Promise.all(this._importPromises),this._shadersLoaded=!0};let E;E=this.options.extraInitializationsAsync?async()=>{null===a||void 0===a||a(),await this.options.extraInitializationsAsync}:a,this.options.useShaderStore?this._drawWrapper.effect=this.options.Sj.createEffect({vertex:V??this._shaderPath.vertex,fragment:C??this._shaderPath.fragment},{attributes:this.options.attributeNames,uniformsNames:H||this.options.uniforms,uniformBuffersNames:this.options.uniformBuffers,samplers:s||this.options.samplers,defines:null!==j?j:"",fallbacks:null,onCompiled:B??this.options.onCompiled,onError:e??null,indexParameters:i||this.options.indexParameters,processCodeAfterIncludes:null!==L&&void 0!==L&&L.processCodeAfterIncludes?(j,H)=>L.processCodeAfterIncludes(this.name,j,H):null,processFinalCode:null!==L&&void 0!==L&&L.processFinalCode?(j,H)=>L.processFinalCode(this.name,j,H):null,shaderLanguage:this.options.shaderLanguage,extraInitializationsAsync:E},this.options.Sj):this._drawWrapper.effect=new k.b(this._shaderPath,this.options.attributeNames,H||this.options.uniforms,s||this.options.samplerNames,this.options.Sj,j,void 0,B||this.options.onCompiled,void 0,void 0,void 0,this.options.shaderLanguage,E),this.onEffectCreatedObservable.notifyObservers(this._drawWrapper.effect)}bind(){var j,H;this.options.useAsPostProcess&&(this.options.Sj.setAlphaMode(this.alphaMode),this.drawWrapper.effect.setFloat2("scale",1,1)),null===(j=U._GetShaderCodeProcessing(this.name))||void 0===j||null===(H=j.bindCustomBindings)||void 0===H||H.call(j,this.name,this._drawWrapper.effect)}dispose(){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.onEffectCreatedObservable.clear(),this.effect.dispose()}}U.ForceGLSL=!1,U._CustomShaderCodeProcessing={}},2e3:(j,H,s)=>{s.d(H,{c:()=>i.i});s(837),s(716),s(701),s(731),s(2009),s(735),s(2012);var i=s(693);s(722)},2009:(j,H,s)=>{s.d(H,{e:()=>V,f:()=>U,i:()=>x});var i,B=s(708),e=s(693),k=s(701);!function(j){j[j.CW=0]="CW",j[j.CCW=1]="CCW"}(i||(i={}));class V{static Interpolate(j,H,s,i,B){const e=1-3*i+3*H,k=3*i-6*H,V=3*H;let C=j;for(let L=0;L<5;L++){const H=C*C;C-=(e*(H*C)+k*H+V*C-j)*(1/(3*e*H+2*k*C+V)),C=Math.min(1,Math.max(0,C))}return 3*Math.pow(1-C,2)*C*s+3*(1-C)*Math.pow(C,2)*B+Math.pow(C,3)}}class C{constructor(j){this._radians=j,this._radians<0&&(this._radians+=2*Math.PI)}degrees(){return 180*this._radians/Math.PI}radians(){return this._radians}static BetweenTwoPoints(j,H){const s=H.de(j),i=Math.atan2(s.y,s.x);return new C(i)}static BetweenTwoVectors(j,H){let s=j.lengthSquared()*H.lengthSquared();if(0===s)return new C(Math.PI/2);s=Math.sqrt(s);let i=j.dot(H)/s;i=(0,B.e)(i,-1,1);const e=Math.acos(i);return new C(e)}static FromRadians(j){return new C(j)}static FromDegrees(j){return new C(j*Math.PI/180)}}class L{constructor(j,H,s){this.startPoint=j,this.midPoint=H,this.endPoint=s;const i=Math.pow(H.x,2)+Math.pow(H.y,2),B=(Math.pow(j.x,2)+Math.pow(j.y,2)-i)/2,k=(i-Math.pow(s.x,2)-Math.pow(s.y,2))/2,V=(j.x-H.x)*(H.y-s.y)-(H.x-s.x)*(j.y-H.y);this.centerPoint=new e.m((B*(H.y-s.y)-k*(j.y-H.y))/V,((j.x-H.x)*k-(H.x-s.x)*B)/V),this.radius=this.centerPoint.de(this.startPoint).length(),this.startAngle=C.BetweenTwoPoints(this.centerPoint,this.startPoint);const L=this.startAngle.degrees();let U=C.BetweenTwoPoints(this.centerPoint,this.midPoint).degrees(),x=C.BetweenTwoPoints(this.centerPoint,this.endPoint).degrees();U-L>180&&(U-=360),U-L<-180&&(U+=360),x-U>180&&(x-=360),x-U<-180&&(x+=360),this.orientation=U-L<0?0:1,this.angle=C.FromDegrees(0===this.orientation?L-x:x-L)}}class U{constructor(j,H){this._points=new Array,this._length=0,this.closed=!1,this._points.push(new e.m(j,H))}addLineTo(j,H){if(this.closed)return this;const s=new e.m(j,H),i=this._points[this._points.length-1];return this._points.push(s),this._length+=s.de(i).length(),this}addArcTo(j,H,s,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const k=this._points[this._points.length-1],V=new e.m(j,H),C=new e.m(s,i),U=new L(k,V,C);let x=U.angle.radians()/B;0===U.orientation&&(x*=-1);let p=U.startAngle.radians()+x;for(let e=0;e<B;e++){const j=Math.cos(p)*U.radius+U.centerPoint.x,H=Math.sin(p)*U.radius+U.centerPoint.y;this.addLineTo(j,H),p+=x}return this}addQuadraticCurveTo(j,H,s,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:36;if(this.closed)return this;const e=(j,H,s,i)=>(1-j)*(1-j)*H+2*j*(1-j)*s+j*j*i,k=this._points[this._points.length-1];for(let V=0;V<=B;V++){const C=V/B,L=e(C,k.x,j,s),U=e(C,k.y,H,i);this.addLineTo(L,U)}return this}addBezierCurveTo(j,H,s,i,B,e){let k=arguments.length>6&&void 0!==arguments[6]?arguments[6]:36;if(this.closed)return this;const V=(j,H,s,i,B)=>(1-j)*(1-j)*(1-j)*H+3*j*(1-j)*(1-j)*s+3*j*j*(1-j)*i+j*j*j*B,C=this._points[this._points.length-1];for(let L=0;L<=k;L++){const U=L/k,x=V(U,C.x,j,s,B),p=V(U,C.y,H,i,e);this.addLineTo(x,p)}return this}isPointInside(j){let H=!1;const s=this._points.length;for(let i=s-1,B=0;B<s;i=B++){let s=this._points[i],e=this._points[B],k=e.x-s.x,V=e.y-s.y;if(Math.abs(V)>Number.EPSILON){if(V<0&&(s=this._points[B],k=-k,e=this._points[i],V=-V),j.y<s.y||j.y>e.y)continue;if(j.y===s.y&&j.x===s.x)return!0;{const i=V*(j.x-s.x)-k*(j.y-s.y);if(0===i)return!0;if(i<0)continue;H=!H}}else{if(j.y!==s.y)continue;if(e.x<=j.x&&j.x<=s.x||s.x<=j.x&&j.x<=e.x)return!0}}return H}close(){return this.closed=!0,this}length(){let j=this._length;if(this.closed){const H=this._points[this._points.length-1];j+=this._points[0].de(H).length()}return j}area(){const j=this._points.length;let H=0;for(let s=j-1,i=0;i<j;s=i++)H+=this._points[s].x*this._points[i].y-this._points[i].x*this._points[s].y;return.5*H}getPoints(){return this._points}getPointAtLengthPosition(j){if(j<0||j>1)return e.m.Zero();const H=j*this.length();let s=0;for(let i=0;i<this._points.length;i++){const j=(i+1)%this._points.length,B=this._points[i],k=this._points[j].de(B),V=k.length()+s;if(H>=s&&H<=V){const j=k.normalize(),i=H-s;return new e.m(B.x+j.x*i,B.y+j.y*i)}s=V}return e.m.Zero()}static StartingAt(j,H){return new U(j,H)}}class x{constructor(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2?arguments[2]:void 0,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.path=j,this._curve=new Array,this._distances=new Array,this._tangents=new Array,this._normals=new Array,this._binormals=new Array,this._pointAtData={id:0,point:e.p.Zero(),previousPointArrayIndex:0,position:0,subPosition:0,interpolateReady:!1,interpolationMatrix:e.d.Identity()};for(let B=0;B<j.length;B++)this._curve[B]=j[B].clone();this._raw=s||!1,this._alignTangentsWithPath=i,this._compute(H,i)}getCurve(){return this._curve}getPoints(){return this._curve}length(){return this._distances[this._distances.length-1]}getTangents(){return this._tangents}getNormals(){return this._normals}getBinormals(){return this._binormals}getDistances(){return this._distances}getPointAt(j){return this._updatePointAtData(j).point}getTangentAt(j){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(j,H),H?e.p.TransformCoordinates(e.p.Forward(),this._pointAtData.interpolationMatrix):this._tangents[this._pointAtData.previousPointArrayIndex]}getNormalAt(j){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(j,H),H?e.p.TransformCoordinates(e.p.Right(),this._pointAtData.interpolationMatrix):this._normals[this._pointAtData.previousPointArrayIndex]}getBinormalAt(j){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._updatePointAtData(j,H),H?e.p.TransformCoordinates(e.p.UpReadOnly,this._pointAtData.interpolationMatrix):this._binormals[this._pointAtData.previousPointArrayIndex]}getDistanceAt(j){return this.length()*j}getPreviousPointIndexAt(j){return this._updatePointAtData(j),this._pointAtData.previousPointArrayIndex}getSubPositionAt(j){return this._updatePointAtData(j),this._pointAtData.subPosition}getClosestPositionTo(j){let H=Number.MAX_VALUE,s=0;for(let i=0;i<this._curve.length-1;i++){const B=this._curve[i+0],k=this._curve[i+1].de(B).normalize(),V=this._distances[i+1]-this._distances[i+0],C=Math.min(Math.max(e.p.Dot(k,j.de(B).normalize()),0)*e.p.Distance(B,j)/V,1),L=e.p.Distance(B.add(k.scale(C*V)),j);L<H&&(H=L,s=(this._distances[i+0]+V*C)/this.length())}return s}slice(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(j<0&&(j=1- -1*j%1),H<0&&(H=1- -1*H%1),j>H){const s=j;j=H,H=s}const s=this.getCurve(),i=this.getPointAt(j);let B=this.getPreviousPointIndexAt(j);const e=this.getPointAt(H),k=this.getPreviousPointIndexAt(H)+1,V=[];return 0!==j&&(B++,V.push(i)),V.push(...s.slice(B,k)),1===H&&1!==j||V.push(e),new x(V,this.getNormalAt(j),this._raw,this._alignTangentsWithPath)}update(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(let i=0;i<j.length;i++)this._curve[i].x=j[i].x,this._curve[i].y=j[i].y,this._curve[i].z=j[i].z;return this._compute(H,s),this}_compute(j){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const s=this._curve.length;if(s<2)return;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[s-1]=this._curve[s-1].de(this._curve[s-2]),this._raw||this._tangents[s-1].normalize();const i=this._tangents[0],B=this._normalVector(i,j);let k,V,C,L,U;this._normals[0]=B,this._raw||this._normals[0].normalize(),this._binormals[0]=e.p.Cross(i,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(let x=1;x<s;x++)k=this._getLastNonNullVector(x),x<s-1&&(V=this._getFirstNonNullVector(x),this._tangents[x]=H?V:k.add(V),this._tangents[x].normalize()),this._distances[x]=this._distances[x-1]+this._curve[x].de(this._curve[x-1]).length(),C=this._tangents[x],U=this._binormals[x-1],this._normals[x]=e.p.Cross(U,C),this._raw||(0===this._normals[x].length()?(L=this._normals[x-1],this._normals[x]=L.clone()):this._normals[x].normalize()),this._binormals[x]=e.p.Cross(C,this._normals[x]),this._raw||this._binormals[x].normalize();this._pointAtData.id=NaN}_getFirstNonNullVector(j){let H=1,s=this._curve[j+H].de(this._curve[j]);for(;0===s.length()&&j+H+1<this._curve.length;)H++,s=this._curve[j+H].de(this._curve[j]);return s}_getLastNonNullVector(j){let H=1,s=this._curve[j].de(this._curve[j-H]);for(;0===s.length()&&j>H+1;)H++,s=this._curve[j].de(this._curve[j-H]);return s}_normalVector(j,H){let s,i=j.length();if(0===i&&(i=1),void 0===H||null===H){let H;H=(0,B.y)(Math.abs(j.y)/i,1,k.e)?(0,B.y)(Math.abs(j.x)/i,1,k.e)?(0,B.y)(Math.abs(j.z)/i,1,k.e)?e.p.Zero():new e.p(0,0,1):new e.p(1,0,0):new e.p(0,-1,0),s=e.p.Cross(j,H)}else s=e.p.Cross(j,H),e.p.CrossToRef(s,j,s);return s.normalize(),s}_updatePointAtData(j){let H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._pointAtData.id===j)return this._pointAtData.interpolateReady||this._updateInterpolationMatrix(),this._pointAtData;this._pointAtData.id=j;const s=this.getPoints();if(j<=0)return this._setPointAtData(0,0,s[0],0,H);if(j>=1)return this._setPointAtData(1,1,s[s.length-1],s.length-1,H);let i,B=s[0],k=0;const V=j*this.length();for(let C=1;C<s.length;C++){i=s[C];const L=e.p.Distance(B,i);if(k+=L,k===V)return this._setPointAtData(j,1,i,C,H);if(k>V){const s=(k-V)/L,e=B.de(i),U=i.add(e.scaleInPlace(s));return this._setPointAtData(j,1-s,U,C-1,H)}B=i}return this._pointAtData}_setPointAtData(j,H,s,i,B){return this._pointAtData.point=s,this._pointAtData.position=j,this._pointAtData.subPosition=H,this._pointAtData.previousPointArrayIndex=i,this._pointAtData.interpolateReady=B,B&&this._updateInterpolationMatrix(),this._pointAtData}_updateInterpolationMatrix(){this._pointAtData.interpolationMatrix=e.d.Identity();const j=this._pointAtData.previousPointArrayIndex;if(j!==this._tangents.length-1){const H=j+1,s=this._tangents[j].clone(),i=this._normals[j].clone(),B=this._binormals[j].clone(),k=this._tangents[H].clone(),V=this._normals[H].clone(),C=this._binormals[H].clone(),L=e.h.RotationQuaternionFromAxis(i,B,s),U=e.h.RotationQuaternionFromAxis(V,C,k);e.h.Slerp(L,U,this._pointAtData.subPosition).toRotationMatrix(this._pointAtData.interpolationMatrix)}}}},1997:(j,H,s)=>{s.d(H,{b:()=>L,f:()=>U});var i=s(693),B=s(2e3);const e=[Math.sqrt(1/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(3/(4*Math.PI)),-Math.sqrt(3/(4*Math.PI)),Math.sqrt(15/(4*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(5/(16*Math.PI)),-Math.sqrt(15/(4*Math.PI)),Math.sqrt(15/(16*Math.PI))],k=[()=>1,j=>j.y,j=>j.z,j=>j.x,j=>j.x*j.y,j=>j.y*j.z,j=>3*j.z*j.z-1,j=>j.x*j.z,j=>j.x*j.x-j.y*j.y],V=(j,H)=>e[j]*k[j](H),C=[Math.PI,2*Math.PI/3,2*Math.PI/3,2*Math.PI/3,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4,Math.PI/4];class L{constructor(){this.preScaled=!1,this.l00=i.p.Zero(),this.l1_1=i.p.Zero(),this.l10=i.p.Zero(),this.l11=i.p.Zero(),this.l2_2=i.p.Zero(),this.l2_1=i.p.Zero(),this.l20=i.p.Zero(),this.l21=i.p.Zero(),this.l22=i.p.Zero()}addLight(j,H,s){B.c.bk[0].set(H.r,H.g,H.b);const i=B.c.bk[0],e=B.c.bk[1];i.scaleToRef(s,e),e.scaleToRef(V(0,j),B.c.bk[2]),this.l00.addInPlace(B.c.bk[2]),e.scaleToRef(V(1,j),B.c.bk[2]),this.l1_1.addInPlace(B.c.bk[2]),e.scaleToRef(V(2,j),B.c.bk[2]),this.l10.addInPlace(B.c.bk[2]),e.scaleToRef(V(3,j),B.c.bk[2]),this.l11.addInPlace(B.c.bk[2]),e.scaleToRef(V(4,j),B.c.bk[2]),this.l2_2.addInPlace(B.c.bk[2]),e.scaleToRef(V(5,j),B.c.bk[2]),this.l2_1.addInPlace(B.c.bk[2]),e.scaleToRef(V(6,j),B.c.bk[2]),this.l20.addInPlace(B.c.bk[2]),e.scaleToRef(V(7,j),B.c.bk[2]),this.l21.addInPlace(B.c.bk[2]),e.scaleToRef(V(8,j),B.c.bk[2]),this.l22.addInPlace(B.c.bk[2])}scaleInPlace(j){this.l00.scaleInPlace(j),this.l1_1.scaleInPlace(j),this.l10.scaleInPlace(j),this.l11.scaleInPlace(j),this.l2_2.scaleInPlace(j),this.l2_1.scaleInPlace(j),this.l20.scaleInPlace(j),this.l21.scaleInPlace(j),this.l22.scaleInPlace(j)}convertIncidentRadianceToIrradiance(){this.l00.scaleInPlace(C[0]),this.l1_1.scaleInPlace(C[1]),this.l10.scaleInPlace(C[2]),this.l11.scaleInPlace(C[3]),this.l2_2.scaleInPlace(C[4]),this.l2_1.scaleInPlace(C[5]),this.l20.scaleInPlace(C[6]),this.l21.scaleInPlace(C[7]),this.l22.scaleInPlace(C[8])}convertIrradianceToLambertianRadiance(){this.scaleInPlace(1/Math.PI)}preScaleForRendering(){this.preScaled=!0,this.l00.scaleInPlace(e[0]),this.l1_1.scaleInPlace(e[1]),this.l10.scaleInPlace(e[2]),this.l11.scaleInPlace(e[3]),this.l2_2.scaleInPlace(e[4]),this.l2_1.scaleInPlace(e[5]),this.l20.scaleInPlace(e[6]),this.l21.scaleInPlace(e[7]),this.l22.scaleInPlace(e[8])}updateFromArray(j){return i.p.FromArrayToRef(j[0],0,this.l00),i.p.FromArrayToRef(j[1],0,this.l1_1),i.p.FromArrayToRef(j[2],0,this.l10),i.p.FromArrayToRef(j[3],0,this.l11),i.p.FromArrayToRef(j[4],0,this.l2_2),i.p.FromArrayToRef(j[5],0,this.l2_1),i.p.FromArrayToRef(j[6],0,this.l20),i.p.FromArrayToRef(j[7],0,this.l21),i.p.FromArrayToRef(j[8],0,this.l22),this}updateFromFloatsArray(j){return i.p.FromFloatsToRef(j[0],j[1],j[2],this.l00),i.p.FromFloatsToRef(j[3],j[4],j[5],this.l1_1),i.p.FromFloatsToRef(j[6],j[7],j[8],this.l10),i.p.FromFloatsToRef(j[9],j[10],j[11],this.l11),i.p.FromFloatsToRef(j[12],j[13],j[14],this.l2_2),i.p.FromFloatsToRef(j[15],j[16],j[17],this.l2_1),i.p.FromFloatsToRef(j[18],j[19],j[20],this.l20),i.p.FromFloatsToRef(j[21],j[22],j[23],this.l21),i.p.FromFloatsToRef(j[24],j[25],j[26],this.l22),this}static _j(j){return(new L).updateFromArray(j)}static FromPolynomial(j){const H=new L;return H.l00=j.xx.scale(.376127).add(j.yy.scale(.376127)).add(j.zz.scale(.376126)),H.l1_1=j.y.scale(.977204),H.l10=j.z.scale(.977204),H.l11=j.x.scale(.977204),H.l2_2=j.xy.scale(1.16538),H.l2_1=j.yz.scale(1.16538),H.l20=j.zz.scale(1.34567).de(j.xx.scale(.672834)).de(j.yy.scale(.672834)),H.l21=j.zx.scale(1.16538),H.l22=j.xx.scale(1.16538).de(j.yy.scale(1.16538)),H.l1_1.scaleInPlace(-1),H.l11.scaleInPlace(-1),H.l2_1.scaleInPlace(-1),H.l21.scaleInPlace(-1),H.scaleInPlace(Math.PI),H}}class U{constructor(){this.x=i.p.Zero(),this.y=i.p.Zero(),this.z=i.p.Zero(),this.xx=i.p.Zero(),this.yy=i.p.Zero(),this.zz=i.p.Zero(),this.xy=i.p.Zero(),this.yz=i.p.Zero(),this.zx=i.p.Zero()}get preScaledHarmonics(){return this._harmonics||(this._harmonics=L.FromPolynomial(this)),this._harmonics.preScaled||this._harmonics.preScaleForRendering(),this._harmonics}addAmbient(j){B.c.bk[0].wd(j.r,j.g,j.b);const H=B.c.bk[0];this.xx.addInPlace(H),this.yy.addInPlace(H),this.zz.addInPlace(H)}scaleInPlace(j){this.x.scaleInPlace(j),this.y.scaleInPlace(j),this.z.scaleInPlace(j),this.xx.scaleInPlace(j),this.yy.scaleInPlace(j),this.zz.scaleInPlace(j),this.yz.scaleInPlace(j),this.zx.scaleInPlace(j),this.xy.scaleInPlace(j)}updateFromHarmonics(j){return this._harmonics=j,this.x.p(j.l11),this.x.scaleInPlace(1.02333).scaleInPlace(-1),this.y.p(j.l1_1),this.y.scaleInPlace(1.02333).scaleInPlace(-1),this.z.p(j.l10),this.z.scaleInPlace(1.02333),this.xx.p(j.l00),B.c.bk[0].p(j.l20).scaleInPlace(.247708),B.c.bk[1].p(j.l22).scaleInPlace(.429043),this.xx.scaleInPlace(.886277).ck(B.c.bk[0]).addInPlace(B.c.bk[1]),this.yy.p(j.l00),this.yy.scaleInPlace(.886277).ck(B.c.bk[0]).ck(B.c.bk[1]),this.zz.p(j.l00),B.c.bk[0].p(j.l20).scaleInPlace(.495417),this.zz.scaleInPlace(.886277).addInPlace(B.c.bk[0]),this.yz.p(j.l2_1),this.yz.scaleInPlace(.858086).scaleInPlace(-1),this.zx.p(j.l21),this.zx.scaleInPlace(.858086).scaleInPlace(-1),this.xy.p(j.l2_2),this.xy.scaleInPlace(.858086),this.scaleInPlace(1/Math.PI),this}static FromHarmonics(j){return(new U).updateFromHarmonics(j)}static _j(j){const H=new U;return i.p.FromArrayToRef(j[0],0,H.x),i.p.FromArrayToRef(j[1],0,H.y),i.p.FromArrayToRef(j[2],0,H.z),i.p.FromArrayToRef(j[3],0,H.xx),i.p.FromArrayToRef(j[4],0,H.yy),i.p.FromArrayToRef(j[5],0,H.zz),i.p.FromArrayToRef(j[6],0,H.yz),i.p.FromArrayToRef(j[7],0,H.zx),i.p.FromArrayToRef(j[8],0,H.xy),H}}},2016:(j,H,s)=>{s.d(H,{c:()=>L});var i=s(693),B=s(708),e=s(1997),k=s(701),V=s(716);class C{constructor(j,H,s,i){this.name=j,this.worldAxisForNormal=H,this.worldAxisForFileX=s,this.worldAxisForFileY=i}}class L{static ConvertCubeMapTextureToSphericalPolynomial(j){var H;if(!j.isCube)return null;null===(H=j.va())||void 0===H||H.getEngine().flushFramebuffer();const s=j.getSize().width,i=j.readPixels(0,void 0,void 0,!1),B=j.readPixels(1,void 0,void 0,!1);let e,k;j.isRenderTarget?(e=j.readPixels(3,void 0,void 0,!1),k=j.readPixels(2,void 0,void 0,!1)):(e=j.readPixels(2,void 0,void 0,!1),k=j.readPixels(3,void 0,void 0,!1));const V=j.readPixels(4,void 0,void 0,!1),C=j.readPixels(5,void 0,void 0,!1),L=j.gammaSpace;let U=0;return 1!=j.textureType&&2!=j.textureType||(U=1),new Promise((j=>{Promise.all([B,i,e,k,V,C]).then((H=>{let[i,B,e,k,V,C]=H;const x={size:s,right:B,left:i,up:e,down:k,front:V,back:C,format:5,type:U,gammaSpace:L};j(this.ConvertCubeMapToSphericalPolynomial(x))}))}))}static _AreaElement(j,H){return Math.atan2(j*H,Math.sqrt(j*j+H*H+1))}static ConvertCubeMapToSphericalPolynomial(j){const H=new e.b;let s=0;const i=2/j.size,C=i,L=.5*i,U=L-1;for(let e=0;e<6;e++){const x=this._FileFaces[e],p=j[x.name];let a=U;const E=5===j.format?4:3;for(let e=0;e<j.size;e++){let r=U;for(let C=0;C<j.size;C++){const U=x.worldAxisForFileX.scale(r).add(x.worldAxisForFileY.scale(a)).add(x.worldAxisForNormal);U.normalize();const q=this._AreaElement(r-L,a-L)-this._AreaElement(r-L,a+L)-this._AreaElement(r+L,a-L)+this._AreaElement(r+L,a+L);let J=p[e*j.size*E+C*E+0],h=p[e*j.size*E+C*E+1],o=p[e*j.size*E+C*E+2];isNaN(J)&&(J=0),isNaN(h)&&(h=0),isNaN(o)&&(o=0),0===j.type&&(J/=255,h/=255,o/=255),j.gammaSpace&&(J=Math.pow((0,B.e)(J),k.l),h=Math.pow((0,B.e)(h),k.l),o=Math.pow((0,B.e)(o),k.l));const R=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const j=Math.max(J,h,o);if(j>R){const H=R/j;J*=H,h*=H,o*=H}}else J=(0,B.e)(J,0,R),h=(0,B.e)(h,0,R),o=(0,B.e)(o,0,R);const Y=new V.e(J,h,o);H.addLight(U,Y,q),s+=q,r+=i}a+=C}}const x=6*(4*Math.PI)/6/s;return H.scaleInPlace(x),H.convertIncidentRadianceToIrradiance(),H.convertIrradianceToLambertianRadiance(),e.f.FromHarmonics(H)}}L._FileFaces=[new C("right",new i.p(1,0,0),new i.p(0,0,-1),new i.p(0,-1,0)),new C("left",new i.p(-1,0,0),new i.p(0,0,1),new i.p(0,-1,0)),new C("up",new i.p(0,1,0),new i.p(1,0,0),new i.p(0,0,1)),new C("down",new i.p(0,-1,0),new i.p(1,0,0),new i.p(0,0,-1)),new C("front",new i.p(0,0,1),new i.p(1,0,0),new i.p(0,-1,0)),new C("back",new i.p(0,0,-1),new i.p(-1,0,0),new i.p(0,-1,0))],L.MAX_HDRI_VALUE=4096,L.PRESERVE_CLAMPED_COLORS=!1},2025:(j,H,s)=>{s.d(H,{e:()=>C,g:()=>p,j:()=>x});s(2030),s(2044);var i=s(2059),B=s(583),e=s(636),k=s(714);class V extends i.b{getClassName(){return"PassPostProcess"}constructor(j,H){super(j,"pass",null,null,H,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0,arguments.length>5?arguments[5]:void 0,void 0,arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,void 0,null,arguments.length>7&&void 0!==arguments[7]&&arguments[7])}_gatherImports(j,H){j?(this._webGPUReady=!0,H.push(Promise.all([s.e(32).then(s.bind(s,12560))]))):H.push(Promise.all([s.e(33).then(s.bind(s,12565))])),super._gatherImports(j,H)}static _Parse(j,H,s,i){return k.b.Parse((()=>new V(j.name,j.options,H,j.renderTargetSamplingMode,j._engine,j.reusable)),j,s,i)}}(0,e.g)("BABYLON.PassPostProcess",V);i.b;function C(j,H,s,B,e,k,V,C){const L=H.getEngine();return H.isReady=!1,e=e??H.samplingMode,B=B??H.type,k=k??H.format,V=V??H.width,C=C??H.height,-1===B&&(B=0),new Promise((U=>{const x=new i.b("postprocess",j,null,null,1,null,e,L,!1,void 0,B,void 0,null,!1,k);x.externalTextureSamplerBinding=!0;const p=L.createRenderTargetTexture({width:V,height:C},{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:e,type:B,format:k});x.onEffectCreatedObservable.addOnce((j=>{j.executeWhenCompiled((()=>{x.onApply=j=>{j._bindTexture("textureSampler",H),j.setFloat2("scale",1,1)},s.postProcessManager.directRender([x],p,!0),L.restoreDefaultFramebuffer(),L._releaseTexture(H),x&&x.dispose(),p._swapAndDie(H),H.type=B,H.format=5,H.isReady=!0,U(H)}))}))}))}let L,U;function x(j){L||(L=new Float32Array(1),U=new Int32Array(L.buffer)),L[0]=j;const H=U[0];let s=H>>16&32768,i=H>>12&2047;const B=H>>23&255;return B<103?s:B>142?(s|=31744,s|=(255==B?0:1)&&8388607&H,s):B<113?(i|=2048,s|=(i>>114-B)+(i>>113-B&1),s):(s|=B-112<<10|i>>1,s+=1&i,s)}function p(j){const H=(32768&j)>>15,s=(31744&j)>>10,i=1023&j;return 0===s?(H?-1:1)*Math.pow(2,-14)*(i/Math.pow(2,10)):31==s?i?NaN:1/0*(H?-1:1):(H?-1:1)*Math.pow(2,s-15)*(1+i/Math.pow(2,10))}B.d._RescalePostProcessFactory=j=>new V("rescale",1,null,2,j,!1,0)},2059:(j,H,s)=>{s.d(H,{b:()=>E});var i=s(675),B=s(691),e=s(502),k=s(693),V=s(591),C=s(682),L=s(714),U=s(636),x=s(583),p=s(652),a=s(2068);x.d.prototype.setTextureFromPostProcess=function(j,H,s){var i;let B=null;H&&(H._forcedOutputTexture?B=H._forcedOutputTexture:H._textures.data[H._currentRenderTextureInd]&&(B=H._textures.data[H._currentRenderTextureInd])),this._bindTexture(j,(null===(i=B)||void 0===i?void 0:i.texture)??null,s)},x.d.prototype.setTextureFromPostProcessOutput=function(j,H,s){var i;this._bindTexture(j,(null===H||void 0===H||null===(i=H._outputTexture)||void 0===i?void 0:i.texture)??null,s)},V.b.prototype.setTextureFromPostProcess=function(j,H){this._engine.setTextureFromPostProcess(this._samplers[j],H,j)},V.b.prototype.setTextureFromPostProcessOutput=function(j,H){this._engine.setTextureFromPostProcessOutput(this._samplers[j],H,j)};class E{static get ForceGLSL(){return a.h.ForceGLSL}static set ForceGLSL(j){a.h.ForceGLSL=j}static RegisterShaderCodeProcessing(j,H){a.h.RegisterShaderCodeProcessing(j,H)}get name(){return this._effectWrapper.name}set name(j){this._effectWrapper.name=j}get alphaMode(){return this._effectWrapper.alphaMode}set alphaMode(j){this._effectWrapper.alphaMode=j}get samples(){return this._samples}set samples(j){this._samples=Math.min(j,this._engine.getCaps().maxMSAASamples),this._textures.forEach((j=>{j.setSamples(this._samples)}))}get shaderLanguage(){return this._shaderLanguage}getEffectName(){return this._fragmentUrl}set onActivate(j){this._onActivateObserver&&this.onActivateObservable.remove(this._onActivateObserver),j&&(this._onActivateObserver=this.onActivateObservable.add(j))}set onSizeChanged(j){this._onSizeChangedObserver&&this.onSizeChangedObservable.remove(this._onSizeChangedObserver),this._onSizeChangedObserver=this.onSizeChangedObservable.add(j)}set onApply(j){this._onApplyObserver&&this.onApplyObservable.remove(this._onApplyObserver),this._onApplyObserver=this.onApplyObservable.add(j)}set onBeforeRender(j){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(j)}set onAfterRender(j){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=this.onAfterRenderObservable.add(j)}get inputTexture(){return this._textures.data[this._currentRenderTextureInd]}set inputTexture(j){this._forcedOutputTexture=j}restoreDefaultInputTexture(){this._forcedOutputTexture&&(this._forcedOutputTexture=null,this.markTextureDirty())}getCamera(){return this._camera}get texelSize(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.texelSize:(this._forcedOutputTexture&&this._texelSize.wd(1/this._forcedOutputTexture.width,1/this._forcedOutputTexture.height),this._texelSize)}constructor(j,H,s,i,V,C){var L;let U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,x=arguments.length>7?arguments[7]:void 0,p=arguments.length>8?arguments[8]:void 0,r=arguments.length>9&&void 0!==arguments[9]?arguments[9]:null,q=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,J=arguments.length>11&&void 0!==arguments[11]?arguments[11]:"postprocess",h=arguments.length>12?arguments[12]:void 0,o=arguments.length>13&&void 0!==arguments[13]&&arguments[13],R=arguments.length>14&&void 0!==arguments[14]?arguments[14]:5,Y=arguments.length>15?arguments[15]:void 0,v=arguments.length>16?arguments[16]:void 0;this._parentContainer=null,this.width=-1,this.height=-1,this.nodeMaterialSource=null,this._outputTexture=null,this.wl=!0,this.forceAutoClearInAlphaMode=!1,this.animations=[],this.enablePixelPerfectMode=!1,this.forceFullscreenViewport=!0,this.scaleMode=1,this.alwaysForcePOT=!1,this._samples=1,this.adaptScaleToCurrentViewport=!1,this._webGPUReady=!1,this._reusable=!1,this._renderId=0,this.externalTextureSamplerBinding=!1,this._textures=new B.f(2),this._textureCache=[],this._currentRenderTextureInd=0,this._scaleRatio=new k.m(1,1),this._texelSize=k.m.Zero(),this.onActivateObservable=new e.d,this.onSizeChangedObservable=new e.d,this.onApplyObservable=new e.d,this.onBeforeRenderObservable=new e.d,this.onAfterRenderObservable=new e.d;let c,z=1,K=null;if(s&&!Array.isArray(s)){const j=s;s=j.uniforms??null,i=j.samplers??null,z=j.size??1,C=j.camera??null,U=j.samplingMode??1,x=j.Sj,p=j.reusable,r=Array.isArray(j.defines)?j.defines.join("\n"):j.defines??null,q=j.textureType??0,J=j.vertexUrl??"postprocess",h=j.indexParameters,o=j.blockCompilation??!1,R=j.textureFormat??5,Y=j.shaderLanguage??0,K=j.uniformBuffers??null,v=j.extraInitializations,c=j.effectWrapper}else V&&(z="number"===typeof V?V:{width:V.width,height:V.height});const W=!!c;if(this._effectWrapper=c??new a.h({name:j,useShaderStore:!0,useAsPostProcess:!0,fragmentShader:H,Sj:x||(null===(L=C)||void 0===L?void 0:L.va().getEngine()),uniforms:s,samplers:i,uniformBuffers:K,defines:r,vertexUrl:J,indexParameters:h,blockCompilation:o,shaderLanguage:Y,extraInitializations:v}),this.name=j,this.onEffectCreatedObservable=this._effectWrapper.onEffectCreatedObservable,null!=C?(this._camera=C,this._scene=C.va(),C.attachPostProcess(this),this._engine=this._scene.getEngine(),this._scene.postProcesses.push(this),this.uniqueId=this._scene.getUniqueId()):x&&(this._engine=x,this._engine.postProcesses.push(this)),this._options=z,this.renderTargetSamplingMode=U||1,this._reusable=p||!1,this._textureType=q,this._textureFormat=R,this._shaderLanguage=Y||0,this._samplers=i||[],-1===this._samplers.indexOf("textureSampler")&&this._samplers.push("textureSampler"),this._fragmentUrl=H,this._vertexUrl=J,this._parameters=s||[],-1===this._parameters.indexOf("scale")&&this._parameters.push("scale"),this._uniformBuffers=K||[],this._indexParameters=h,!W){this._webGPUReady=1===this._shaderLanguage;const j=[];this._gatherImports(this._engine.isWebGPU&&!E.ForceGLSL,j),this._effectWrapper._webGPUReady=this._webGPUReady,this._effectWrapper._postConstructor(o,r,v,j)}}_gatherImports(){let j=arguments.length>1?arguments[1]:void 0;arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&this._webGPUReady?j.push(Promise.all([s.e(36).then(s.bind(s,12577))])):j.push(Promise.all([Promise.resolve().then(s.bind(s,2070))]))}getClassName(){return"PostProcess"}getEngine(){return this._engine}getEffect(){return this._effectWrapper.drawWrapper.effect}shareOutputWith(j){return this._disposeTextures(),this._shareOutputWithPostProcess=j,this}useOwnOutput(){0==this._textures.length&&(this._textures=new B.f(2)),this._shareOutputWithPostProcess=null}updateEffect(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3?arguments[3]:void 0,B=arguments.length>4?arguments[4]:void 0,e=arguments.length>5?arguments[5]:void 0,k=arguments.length>6?arguments[6]:void 0,V=arguments.length>7?arguments[7]:void 0;this._effectWrapper.updateEffect(j,H,s,i,B,e,k,V),this._postProcessDefines=Array.isArray(this._effectWrapper.options.defines)?this._effectWrapper.options.defines.join("\n"):this._effectWrapper.options.defines}isReusable(){return this._reusable}markTextureDirty(){this.width=-1}_createRenderTargetTexture(j,H){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;for(let B=0;B<this._textureCache.length;B++)if(this._textureCache[B].texture.width===j.width&&this._textureCache[B].texture.height===j.height&&this._textureCache[B].postProcessChannel===s&&this._textureCache[B].texture._generateDepthBuffer===H.generateDepthBuffer&&this._textureCache[B].texture.samples===H.samples)return this._textureCache[B].texture;const i=this._engine.createRenderTargetTexture(j,H);return this._textureCache.push({texture:i,postProcessChannel:s,lastUsedRenderId:-1}),i}_flushTextureCache(){const j=this._renderId;for(let H=this._textureCache.length-1;H>=0;H--)if(j-this._textureCache[H].lastUsedRenderId>100){let j=!1;for(let s=0;s<this._textures.length;s++)if(this._textures.data[s]===this._textureCache[H].texture){j=!0;break}j||(this._textureCache[H].texture.dispose(),this._textureCache.splice(H,1))}}resize(j,H){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],B=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this._textures.length>0&&this._textures.reset(),this.width=j,this.height=H;let e=null;if(s)for(let C=0;C<s._postProcesses.length;C++)if(null!==s._postProcesses[C]){e=s._postProcesses[C];break}const k={width:this.width,height:this.height},V={generateMipMaps:i,generateDepthBuffer:B||e===this,generateStencilBuffer:(B||e===this)&&this._engine.isStencilEnable,samplingMode:this.renderTargetSamplingMode,type:this._textureType,format:this._textureFormat,samples:this._samples,label:"PostProcessRTT-"+this.name};this._textures.push(this._createRenderTargetTexture(k,V,0)),this._reusable&&this._textures.push(this._createRenderTargetTexture(k,V,1)),this._texelSize.wd(1/this.width,1/this.height),this.onSizeChangedObservable.notifyObservers(this)}_getTarget(){let j;if(this._shareOutputWithPostProcess)j=this._shareOutputWithPostProcess.inputTexture;else if(this._forcedOutputTexture)j=this._forcedOutputTexture,this.width=this._forcedOutputTexture.width,this.height=this._forcedOutputTexture.height;else{let H;j=this.inputTexture;for(let s=0;s<this._textureCache.length;s++)if(this._textureCache[s].texture===j){H=this._textureCache[s];break}H&&(H.lastUsedRenderId=this._renderId)}return j}activate(j){var H,s;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,B=arguments.length>2?arguments[2]:void 0;const e=(j=j||this._camera).va(),k=e.getEngine(),V=k.getCaps().maxTextureSize,C=(i?i.width:this._engine.getRenderWidth(!0))*this._options|0,L=(i?i.height:this._engine.getRenderHeight(!0))*this._options|0;let U=this._options.width||C,x=this._options.height||L;const a=7!==this.renderTargetSamplingMode&&1!==this.renderTargetSamplingMode&&2!==this.renderTargetSamplingMode;let E=null;if(!this._shareOutputWithPostProcess&&!this._forcedOutputTexture){if(this.adaptScaleToCurrentViewport){const j=k.currentViewport;j&&(U*=j.width,x*=j.height)}(a||this.alwaysForcePOT)&&(this._options.width||(U=k.needPOTTextures?(0,p.g)(U,V,this.scaleMode):U),this._options.height||(x=k.needPOTTextures?(0,p.g)(x,V,this.scaleMode):x)),this.width===U&&this.height===x&&(E=this._getTarget())||this.resize(U,x,j,a,B),this._textures.forEach((j=>{j.samples!==this.samples&&this._engine.updateRenderTargetTextureSampleCount(j,this.samples)})),this._flushTextureCache(),this._renderId++}return E||(E=this._getTarget()),this.enablePixelPerfectMode?(this._scaleRatio.wd(C/U,L/x),this._engine.bindFramebuffer(E,0,C,L,this.forceFullscreenViewport)):(this._scaleRatio.wd(1,1),this._engine.bindFramebuffer(E,0,void 0,void 0,this.forceFullscreenViewport)),null===(H=(s=this._engine)._debugInsertMarker)||void 0===H||H.call(s,`post process ${this.name} input`),this.onActivateObservable.notifyObservers(j),this.wl&&(0===this.alphaMode||this.forceAutoClearInAlphaMode)&&this._engine.clear(this.clearColor?this.clearColor:e.clearColor,e._allowPostProcessClearColor,!0,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2),E}get isSupported(){return this._effectWrapper.drawWrapper.effect.isSupported}get aspectRatio(){return this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.aspectRatio:this._forcedOutputTexture?this._forcedOutputTexture.width/this._forcedOutputTexture.height:this.width/this.height}isReady(){return this._effectWrapper.isReady()}apply(){if(!this._effectWrapper.isReady())return null;let j;var H;(this._engine.enableEffect(this._effectWrapper.drawWrapper),this._engine.setState(!1),this._engine.setDepthBuffer(!1),this._engine.setDepthWrite(!1),this.alphaConstants&&this.getEngine().setAlphaConstants(this.alphaConstants.r,this.alphaConstants.g,this.alphaConstants.b,this.alphaConstants.a),j=this._shareOutputWithPostProcess?this._shareOutputWithPostProcess.inputTexture:this._forcedOutputTexture?this._forcedOutputTexture:this.inputTexture,this.externalTextureSamplerBinding)||this._effectWrapper.drawWrapper.effect._bindTexture("textureSampler",null===(H=j)||void 0===H?void 0:H.texture);return this._effectWrapper.drawWrapper.effect.setVector2("scale",this._scaleRatio),this.onApplyObservable.notifyObservers(this._effectWrapper.drawWrapper.effect),this._effectWrapper.bind(),this._effectWrapper.drawWrapper.effect}_disposeTextures(){this._shareOutputWithPostProcess||this._forcedOutputTexture?this._disposeTextureCache():(this._disposeTextureCache(),this._textures.dispose())}_disposeTextureCache(){for(let j=this._textureCache.length-1;j>=0;j--)this._textureCache[j].texture.dispose();this._textureCache.length=0}setPrePassRenderer(j){return!!this._prePassEffectConfiguration&&(this._prePassEffectConfiguration=j.addEffectConfiguration(this._prePassEffectConfiguration),this._prePassEffectConfiguration.enabled=!0,!0)}dispose(j){let H;if(j=j||this._camera,this._disposeTextures(),this._scene&&(H=this._scene.postProcesses.indexOf(this),-1!==H&&this._scene.postProcesses.splice(H,1)),this._parentContainer){const j=this._parentContainer.postProcesses.indexOf(this);j>-1&&this._parentContainer.postProcesses.splice(j,1),this._parentContainer=null}if(H=this._engine.postProcesses.indexOf(this),-1!==H&&this._engine.postProcesses.splice(H,1),j){if(j.detachPostProcess(this),H=j._postProcesses.indexOf(this),0===H&&j._postProcesses.length>0){const j=this._camera._getFirstPostProcess();j&&j.markTextureDirty()}this.onActivateObservable.clear(),this.onAfterRenderObservable.clear(),this.onApplyObservable.clear(),this.onBeforeRenderObservable.clear(),this.onSizeChangedObservable.clear(),this.onEffectCreatedObservable.clear()}}serialize(){const j=L.b.Serialize(this),H=this.getCamera()||this._scene&&this._scene.activeCamera;return j.customType="BABYLON."+this.getClassName(),j.cameraId=H?H.id:null,j.reusable=this._reusable,j.textureType=this._textureType,j.fragmentUrl=this._fragmentUrl,j.parameters=this._parameters,j.samplers=this._samplers,j.uniformBuffers=this._uniformBuffers,j.options=this._options,j.defines=this._postProcessDefines,j.textureFormat=this._textureFormat,j.vertexUrl=this._vertexUrl,j.indexParameters=this._indexParameters,j}clone(){const j=this.serialize();j._engine=this._engine,j.cameraId=null;const H=E.Parse(j,this._scene,"");return H?(H.onActivateObservable=this.onActivateObservable.clone(),H.onSizeChangedObservable=this.onSizeChangedObservable.clone(),H.onApplyObservable=this.onApplyObservable.clone(),H.onBeforeRenderObservable=this.onBeforeRenderObservable.clone(),H.onAfterRenderObservable=this.onAfterRenderObservable.clone(),H._prePassEffectConfiguration=this._prePassEffectConfiguration,H):null}static Parse(j,H,s){const i=(0,U.d)(j.customType);if(!i||!i._Parse)return null;const B=H?H.getCameraById(j.cameraId):null;return i._Parse(j,B,H,s)}static _Parse(j,H,s,i){return L.b.Parse((()=>new E(j.name,j.fragmentUrl,j.parameters,j.samplers,j.options,H,j.renderTargetSamplingMode,j._engine,j.reusable,j.defines,j.textureType,j.vertexUrl,j.indexParameters,!1,j.textureFormat)),j,s,i)}}(0,i.e)([(0,C.I)()],E.prototype,"uniqueId",void 0),(0,i.e)([(0,C.I)()],E.prototype,"name",null),(0,i.e)([(0,C.I)()],E.prototype,"width",void 0),(0,i.e)([(0,C.I)()],E.prototype,"height",void 0),(0,i.e)([(0,C.I)()],E.prototype,"renderTargetSamplingMode",void 0),(0,i.e)([(0,C.o)()],E.prototype,"clearColor",void 0),(0,i.e)([(0,C.I)()],E.prototype,"wl",void 0),(0,i.e)([(0,C.I)()],E.prototype,"forceAutoClearInAlphaMode",void 0),(0,i.e)([(0,C.I)()],E.prototype,"alphaMode",null),(0,i.e)([(0,C.I)()],E.prototype,"alphaConstants",void 0),(0,i.e)([(0,C.I)()],E.prototype,"enablePixelPerfectMode",void 0),(0,i.e)([(0,C.I)()],E.prototype,"forceFullscreenViewport",void 0),(0,i.e)([(0,C.I)()],E.prototype,"scaleMode",void 0),(0,i.e)([(0,C.I)()],E.prototype,"alwaysForcePOT",void 0),(0,i.e)([(0,C.I)("samples")],E.prototype,"_samples",void 0),(0,i.e)([(0,C.I)()],E.prototype,"adaptScaleToCurrentViewport",void 0),(0,U.g)("BABYLON.PostProcess",E)},2049:(j,H,s)=>{s.d(H,{c:()=>e});var i=s(742),B=s(502);class e{constructor(j){this._vertexBuffers={},this.onBeforeRenderObservable=new B.d,this._scene=j}_prepareBuffers(){if(this._vertexBuffers[i.e.PositionKind])return;const j=[];j.push(1,1),j.push(-1,1),j.push(-1,-1),j.push(1,-1),this._vertexBuffers[i.e.PositionKind]=new i.e(this._scene.getEngine(),j,i.e.PositionKind,!1,!1,2),this._buildIndexBuffer()}_buildIndexBuffer(){const j=[];j.push(0),j.push(1),j.push(2),j.push(0),j.push(2),j.push(3),this._indexBuffer=this._scene.getEngine().createIndexBuffer(j)}_rebuild(){const j=this._vertexBuffers[i.e.PositionKind];j&&(j._rebuild(),this._buildIndexBuffer())}_prepareFrame(){let j=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const s=this._scene.activeCamera;return!!s&&(H=H||s._postProcesses.filter((j=>null!=j)),!(!H||0===H.length||!this._scene.postProcessesEnabled)&&(H[0].activate(s,j,null!==H&&void 0!==H),!0))}directRender(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,e=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const k=this._scene.getEngine();for(let C=0;C<j.length;C++){var V;if(C<j.length-1)j[C+1].activate(this._scene.activeCamera,null===H||void 0===H?void 0:H.texture);else H?k.bindFramebuffer(H,i,void 0,void 0,s,B):e||k.restoreDefaultFramebuffer(),null===(V=k._debugInsertMarker)||void 0===V||V.call(k,`post process ${j[C].name} output`);const L=j[C],U=L.apply();U&&(L.onBeforeRenderObservable.notifyObservers(U),this._prepareBuffers(),k.bindBuffers(this._vertexBuffers,this._indexBuffer,U),k.drawElementsType(0,0,6),L.onAfterRenderObservable.notifyObservers(U))}k.setDepthBuffer(!0),k.setDepthWrite(!0)}_finalizeFrame(j,H,s,i){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const e=this._scene.activeCamera;if(!e)return;if(this.onBeforeRenderObservable.notifyObservers(this),0===(i=i||e._postProcesses.filter((j=>null!=j))).length||!this._scene.postProcessesEnabled)return;const k=this._scene.getEngine();for(let C=0,L=i.length;C<L;C++){const U=i[C];var V;if(C<L-1)U._outputTexture=i[C+1].activate(e,null===H||void 0===H?void 0:H.texture);else H?(k.bindFramebuffer(H,s,void 0,void 0,B),U._outputTexture=H):(k.restoreDefaultFramebuffer(),U._outputTexture=null),null===(V=k._debugInsertMarker)||void 0===V||V.call(k,`post process ${i[C].name} output`);if(j)break;const x=U.apply();x&&(U.onBeforeRenderObservable.notifyObservers(x),this._prepareBuffers(),k.bindBuffers(this._vertexBuffers,this._indexBuffer,x),k.drawElementsType(0,0,6),U.onAfterRenderObservable.notifyObservers(x))}k.setDepthBuffer(!0),k.setDepthWrite(!0),k.setAlphaMode(0)}dispose(){const j=this._vertexBuffers[i.e.PositionKind];j&&(j.dispose(),this._vertexBuffers[i.e.PositionKind]=null),this._indexBuffer&&(this._scene.getEngine()._releaseBuffer(this._indexBuffer),this._indexBuffer=null)}}},2057:(j,H,s)=>{s.d(H,{d:()=>V});var i=s(691),B=s(693);class e{set opaqueSortCompareFn(j){this._opaqueSortCompareFn=j||e.PainterSortCompare,this._renderOpaque=this._renderOpaqueSorted}set alphaTestSortCompareFn(j){this._alphaTestSortCompareFn=j||e.PainterSortCompare,this._renderAlphaTest=this._renderAlphaTestSorted}set transparentSortCompareFn(j){this._transparentSortCompareFn=j||e.defaultTransparentSortCompare,this._renderTransparent=this._renderTransparentSorted}constructor(j,H){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.index=j,this._opaqueSubMeshes=new i.f(256),this._transparentSubMeshes=new i.f(256),this._alphaTestSubMeshes=new i.f(256),this._depthOnlySubMeshes=new i.f(256),this._particleSystems=new i.f(256),this._spriteManagers=new i.f(256),this._empty=!0,this._edgesRenderers=new i.b(16),this._scene=H,this.opaqueSortCompareFn=s,this.alphaTestSortCompareFn=B,this.transparentSortCompareFn=e}render(j,H,s,i){if(j)return void j(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes,this._depthOnlySubMeshes);const B=this._scene.getEngine();0!==this._depthOnlySubMeshes.length&&(B.setColorWrite(!1),this._renderAlphaTest(this._depthOnlySubMeshes),B.setColorWrite(!0)),0!==this._opaqueSubMeshes.length&&this._renderOpaque(this._opaqueSubMeshes),0!==this._alphaTestSubMeshes.length&&this._renderAlphaTest(this._alphaTestSubMeshes);const e=B.getStencilBuffer();if(B.setStencilBuffer(!1),H&&this._renderSprites(),s&&this._renderParticles(i),this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),0!==this._transparentSubMeshes.length||this._scene.useOrderIndependentTransparency){if(B.setStencilBuffer(e),this._scene.useOrderIndependentTransparency){const j=this._scene.depthPeelingRenderer.render(this._transparentSubMeshes);j.length&&this._renderTransparent(j)}else this._renderTransparent(this._transparentSubMeshes);B.setAlphaMode(0)}if(B.setStencilBuffer(!1),this._edgesRenderers.length){for(let j=0;j<this._edgesRenderers.length;j++)this._edgesRenderers.data[j].render();B.setAlphaMode(0)}B.setStencilBuffer(e)}_renderOpaqueSorted(j){e._RenderSorted(j,this._opaqueSortCompareFn,this._scene.activeCamera,!1)}_renderAlphaTestSorted(j){e._RenderSorted(j,this._alphaTestSortCompareFn,this._scene.activeCamera,!1)}_renderTransparentSorted(j){e._RenderSorted(j,this._transparentSortCompareFn,this._scene.activeCamera,!0)}static _RenderSorted(j,H,s,i){let k,V=0;const C=s?s.globalPosition:e._ZeroVector;if(i)for(;V<j.length;V++)k=j.data[V],k._alphaIndex=k.getMesh().alphaIndex,k._distanceToCamera=B.p.Distance(k.getBoundingInfo().boundingSphere.centerWorld,C);const L=j.length===j.data.length?j.data:j.data.slice(0,j.length);H&&L.sort(H);const U=L[0].getMesh().va();for(V=0;V<L.length;V++)if(k=L[V],!U._activeMeshesFrozenButKeepClipping||k.isInFrustum(U._frustumPlanes)){if(i){const j=k.Ha();if(j&&j.needDepthPrePass){const H=j.va().getEngine();H.setColorWrite(!1),H.setAlphaMode(0),k.render(!1),H.setColorWrite(!0)}}k.render(i)}}static defaultTransparentSortCompare(j,H){return j._alphaIndex>H._alphaIndex?1:j._alphaIndex<H._alphaIndex?-1:e.backToFrontSortCompare(j,H)}static backToFrontSortCompare(j,H){return j._distanceToCamera<H._distanceToCamera?1:j._distanceToCamera>H._distanceToCamera?-1:0}static frontToBackSortCompare(j,H){return j._distanceToCamera<H._distanceToCamera?-1:j._distanceToCamera>H._distanceToCamera?1:0}static PainterSortCompare(j,H){const s=j.getMesh(),i=H.getMesh();return s.material&&i.material?s.material.uniqueId-i.material.uniqueId:s.uniqueId-i.uniqueId}prepare(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset(),this._depthOnlySubMeshes.reset(),this._particleSystems.reset(),this.prepareSprites(),this._edgesRenderers.reset(),this._empty=!0}prepareSprites(){this._spriteManagers.reset()}dispose(){this._opaqueSubMeshes.dispose(),this._transparentSubMeshes.dispose(),this._alphaTestSubMeshes.dispose(),this._depthOnlySubMeshes.dispose(),this._particleSystems.dispose(),this._spriteManagers.dispose(),this._edgesRenderers.dispose()}dispatch(j,H,s){void 0===H&&(H=j.getMesh()),void 0===s&&(s=j.Ha()),null!==s&&void 0!==s&&(s.needAlphaBlendingForMesh(H)?this._transparentSubMeshes.push(j):s.needAlphaTesting()?(s.needDepthPrePass&&this._depthOnlySubMeshes.push(j),this._alphaTestSubMeshes.push(j)):(s.needDepthPrePass&&this._depthOnlySubMeshes.push(j),this._opaqueSubMeshes.push(j)),H._renderingGroup=this,H._edgesRenderer&&H.isEnabled()&&H.isVisible&&H._edgesRenderer.isEnabled&&this._edgesRenderers.pushNoDuplicate(H._edgesRenderer),this._empty=!1)}dispatchSprites(j){this._spriteManagers.push(j),this._empty=!1}dispatchParticles(j){this._particleSystems.push(j),this._empty=!1}_renderParticles(j){if(0===this._particleSystems.length)return;const H=this._scene.activeCamera;this._scene.onBeforeParticlesRenderingObservable.notifyObservers(this._scene);for(let s=0;s<this._particleSystems.length;s++){const i=this._particleSystems.data[s];if(0===(H&&H.layerMask&i.layerMask))continue;const B=i.j;B.position&&j&&-1===j.indexOf(B)||this._scene._activeParticles.addCount(i.render(),!1)}this._scene.onAfterParticlesRenderingObservable.notifyObservers(this._scene)}_renderSprites(){if(!this._scene.spritesEnabled||0===this._spriteManagers.length)return;const j=this._scene.activeCamera;this._scene.onBeforeSpritesRenderingObservable.notifyObservers(this._scene);for(let H=0;H<this._spriteManagers.length;H++){const s=this._spriteManagers.data[H];0!==(j&&j.layerMask&s.layerMask)&&s.render()}this._scene.onAfterSpritesRenderingObservable.notifyObservers(this._scene)}}e._ZeroVector=B.p.Zero();class k{}class V{get maintainStateBetweenFrames(){return this._maintainStateBetweenFrames}set maintainStateBetweenFrames(j){j!==this._maintainStateBetweenFrames&&(this._maintainStateBetweenFrames=j,this._maintainStateBetweenFrames||this.restoreDispachedFlags())}restoreDispachedFlags(){for(const j of this._scene.meshes)if(j.lk)for(const H of j.lk)H._wasDispatched=!1;if(this._scene.spriteManagers)for(const j of this._scene.spriteManagers)j._wasDispatched=!1;for(const j of this._scene.wk)j._wasDispatched=!1}constructor(j){this._useSceneAutoClearSetup=!1,this._renderingGroups=new Array,this._autoClearDepthStencil={},this._customOpaqueSortCompareFn={},this._customAlphaTestSortCompareFn={},this._customTransparentSortCompareFn={},this._renderingGroupInfo=new k,this._maintainStateBetweenFrames=!1,this._scene=j;for(let H=V.MIN_RENDERINGGROUPS;H<V.MAX_RENDERINGGROUPS;H++)this._autoClearDepthStencil[H]={wl:!0,depth:!0,stencil:!0}}getRenderingGroup(j){const H=j||0;return this._prepareRenderingGroup(H),this._renderingGroups[H]}_clearDepthStencilBuffer(){let j=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._depthStencilBufferAlreadyCleaned||(this._scene.getEngine().clear(null,!1,j,H),this._depthStencilBufferAlreadyCleaned=!0)}render(j,H,s,i){const B=this._renderingGroupInfo;if(B.Rc=this._scene,B.camera=this._scene.activeCamera,this._scene.spriteManagers&&i)for(let e=0;e<this._scene.spriteManagers.length;e++){const j=this._scene.spriteManagers[e];this.dispatchSprites(j)}for(let e=V.MIN_RENDERINGGROUPS;e<V.MAX_RENDERINGGROUPS;e++){this._depthStencilBufferAlreadyCleaned=e===V.MIN_RENDERINGGROUPS;const k=this._renderingGroups[e];if(!k||k._empty)continue;const C=1<<e;if(B.renderingGroupId=e,this._scene.onBeforeRenderingGroupObservable.notifyObservers(B,C),V.AUTOCLEAR){const j=this._useSceneAutoClearSetup?this._scene.getAutoClearDepthStencilSetup(e):this._autoClearDepthStencil[e];j&&j.wl&&this._clearDepthStencilBuffer(j.depth,j.stencil)}for(const j of this._scene._beforeRenderingGroupDrawStage)j.action(e);k.render(j,i,s,H);for(const j of this._scene._afterRenderingGroupDrawStage)j.action(e);this._scene.onAfterRenderingGroupObservable.notifyObservers(B,C)}}reset(){if(!this.maintainStateBetweenFrames)for(let j=V.MIN_RENDERINGGROUPS;j<V.MAX_RENDERINGGROUPS;j++){const H=this._renderingGroups[j];H&&H.prepare()}}resetSprites(){if(!this.maintainStateBetweenFrames)for(let j=V.MIN_RENDERINGGROUPS;j<V.MAX_RENDERINGGROUPS;j++){const H=this._renderingGroups[j];H&&H.prepareSprites()}}dispose(){this.freeRenderingGroups(),this._renderingGroups.length=0,this._renderingGroupInfo=null}freeRenderingGroups(){for(let j=V.MIN_RENDERINGGROUPS;j<V.MAX_RENDERINGGROUPS;j++){const H=this._renderingGroups[j];H&&H.dispose()}}_prepareRenderingGroup(j){void 0===this._renderingGroups[j]&&(this._renderingGroups[j]=new e(j,this._scene,this._customOpaqueSortCompareFn[j],this._customAlphaTestSortCompareFn[j],this._customTransparentSortCompareFn[j]))}dispatchSprites(j){this.maintainStateBetweenFrames&&j._wasDispatched||(j._wasDispatched=!0,this.getRenderingGroup(j.renderingGroupId).dispatchSprites(j))}dispatchParticles(j){this.maintainStateBetweenFrames&&j._wasDispatched||(j._wasDispatched=!0,this.getRenderingGroup(j.renderingGroupId).dispatchParticles(j))}dispatch(j,H,s){void 0===H&&(H=j.getMesh()),this.maintainStateBetweenFrames&&j._wasDispatched||(j._wasDispatched=!0,this.getRenderingGroup(H.renderingGroupId).dispatch(j,H,s))}setRenderingOrder(j){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(this._customOpaqueSortCompareFn[j]=H,this._customAlphaTestSortCompareFn[j]=s,this._customTransparentSortCompareFn[j]=i,this._renderingGroups[j]){const H=this._renderingGroups[j];H.opaqueSortCompareFn=this._customOpaqueSortCompareFn[j],H.alphaTestSortCompareFn=this._customAlphaTestSortCompareFn[j],H.transparentSortCompareFn=this._customTransparentSortCompareFn[j]}}setRenderingAutoClearDepthStencil(j,H){let s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._autoClearDepthStencil[j]={wl:H,depth:s,stencil:i}}getAutoClearDepthStencilSetup(j){return this._autoClearDepthStencil[j]}}V.MAX_RENDERINGGROUPS=4,V.MIN_RENDERINGGROUPS=0,V.AUTOCLEAR=!0},2070:(j,H,s)=>{s.r(H),s.d(H,{postprocessVertexShader:()=>e});const i="postprocessVertexShader",B="attribute vec2 position;uniform vec2 scale;varying vec2 vUV;const vec2 madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvUV=(position*madd+madd)*scale;gl_Position=vec4(position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}";s(595).c.ShadersStore[i]=B;const e={name:i,shader:B}}}]);