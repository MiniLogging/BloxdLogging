"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[20],{13089:(U,G,C)=>{C.r(G),C.d(G,{Dispose:()=>D,DumpData:()=>T,DumpDataAsync:()=>O,DumpFramebuffer:()=>P,DumpTools:()=>y});var L=C(12989),X=C(12718),l=C(12911),t=C(12763);let E,K=null;async function P(U,G,C,L){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,t=arguments.length>6?arguments[6]:void 0;const E=await C.readPixels(0,0,U,G);T(U,G,new Uint8Array(E.buffer),L,X,l,!0,void 0,t)}async function O(U,G,C){let L=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],t=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7?arguments[7]:void 0;return await new Promise((K=>{T(U,G,C,(U=>K(U)),L,X,l,t,E)}))}function T(U,G,P,O){let T=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,V=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return K||(K=new Promise(((U,G)=>{let X,l=null;const K={BE:!0,depth:!1,kE:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,13016)).then((P=>{let{ThinEngine:O}=P;const T=t.d.Instances.length;try{X=new OffscreenCanvas(100,100),l=new O(X,!1,K)}catch(p){var y;T<t.d.Instances.length&&(null===(y=t.d.Instances.pop())||void 0===y||y.dispose()),X=document.createElement("canvas"),l=new O(X,!1,K)}t.d.Instances.pop(),t.d.OnEnginesDisposedObservable.add((U=>{l&&U!==l&&!l.t&&0===t.d.Instances.length&&D()})),l.getCaps().parallelShaderCompile=void 0;const V=new L.e(l);C.e(52).then(C.bind(C,14949)).then((C=>{let{passPixelShader:t}=C;if(!l)return void G("Engine is not defined");const K=new L.h({VG:l,name:t.name,fragmentShader:t.shader,samplerNames:["textureSampler"]});E={canvas:X,VG:l,renderer:V,wrapper:K},U(E)}))})).catch(G)}))),await K})().then((C=>{if(C.VG.setSize(U,G,!0),P instanceof Float32Array){const U=new Uint8Array(P.length);let G=P.length;for(;G--;){const C=P[G];U[G]=Math.round(255*(0,l.Clamp)(C))}P=U}const L=C.VG.createRawTexture(P,U,G,5,!1,!V,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",L),C.renderer.draw(),p?X.Tools.ToBlob(C.canvas,(U=>{const G=new FileReader;G.onload=U=>{const G=U.target.result;O&&O(G)},G.readAsArrayBuffer(U)}),T,I):X.Tools.EncodeScreenshotCanvasData(C.canvas,O,T,y,I),L.dispose()}))}function D(){var U;E?(E.wrapper.dispose(),E.renderer.dispose(),E.VG.dispose()):null===(U=K)||void 0===U||U.then((U=>{U.wrapper.dispose(),U.renderer.dispose(),U.VG.dispose()}));K=null,E=null}const y={DumpData:T,DumpDataAsync:O,DumpFramebuffer:P,Dispose:D};X.Tools.DumpData=T,X.Tools.DumpDataAsync=O,X.Tools.DumpFramebuffer=P}}]);