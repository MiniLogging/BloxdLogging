"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[20],{13206:(B,u,F)=>{F.r(u),F.d(u,{Dispose:()=>t,DumpData:()=>Q,DumpDataAsync:()=>Y,DumpFramebuffer:()=>s,DumpTools:()=>v});var Z=F(13084),V=F(12802),p=F(12994),G=F(12855);let R,e=null;async function s(B,u,F,Z){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0;const R=await F.readPixels(0,0,B,u);Q(B,u,new Uint8Array(R.buffer),Z,V,p,!0,void 0,G)}async function Y(B,u,F){let Z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",V=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0;return await new Promise((e=>{Q(B,u,F,(B=>e(B)),Z,V,p,G,R)}))}function Q(B,u,s,Y){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],L=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8?arguments[8]:void 0;(async function(){return e||(e=new Promise(((B,u)=>{let V,p=null;const e={QR:!0,depth:!1,RR:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(F.bind(F,13112)).then((s=>{let{ThinEngine:Y}=s;const Q=G.b.Instances.length;try{V=new OffscreenCanvas(100,100),p=new Y(V,!1,e)}catch(L){var v;Q<G.b.Instances.length&&(null===(v=G.b.Instances.pop())||void 0===v||v.dispose()),V=document.createElement("canvas"),p=new Y(V,!1,e)}G.b.Instances.pop(),G.b.OnEnginesDisposedObservable.add((B=>{p&&B!==p&&!p.G&&0===G.b.Instances.length&&t()})),p.getCaps().parallelShaderCompile=void 0;const D=new Z.c(p);F.e(52).then(F.bind(F,15516)).then((F=>{let{passPixelShader:G}=F;if(!p)return void u("Engine is not defined");const e=new Z.g({vu:p,name:G.name,fragmentShader:G.shader,samplerNames:["textureSampler"]});R={canvas:V,vu:p,renderer:D,wrapper:e},B(R)}))})).catch(u)}))),await e})().then((F=>{if(F.vu.setSize(B,u,!0),s instanceof Float32Array){const B=new Uint8Array(s.length);let u=s.length;for(;u--;){const F=s[u];B[u]=Math.round(255*(0,p.Clamp)(F))}s=B}const Z=F.vu.createRawTexture(s,B,u,5,!1,!D,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",Z),F.renderer.draw(),L?V.Tools.ToBlob(F.canvas,(B=>{const u=new FileReader;u.onload=B=>{const u=B.target.result;Y&&Y(u)},u.readAsArrayBuffer(B)}),Q,q):V.Tools.EncodeScreenshotCanvasData(F.canvas,Y,Q,v,q),Z.dispose()}))}function t(){var B;R?(R.wrapper.dispose(),R.renderer.dispose(),R.vu.dispose()):null===(B=e)||void 0===B||B.then((B=>{B.wrapper.dispose(),B.renderer.dispose(),B.vu.dispose()}));e=null,R=null}const v={DumpData:Q,DumpDataAsync:Y,DumpFramebuffer:s,Dispose:t};V.Tools.DumpData=Q,V.Tools.DumpDataAsync=Y,V.Tools.DumpFramebuffer=s}}]);