"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[20],{12796:(I,g,b)=>{b.r(g),b.d(g,{Dispose:()=>p,DumpData:()=>D,DumpDataAsync:()=>G,DumpFramebuffer:()=>n,DumpTools:()=>x});var e=b(12697),c=b(12409),z=b(12610),M=b(12449);let J,o=null;async function n(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0;const J=await b.readPixels(0,0,I,g);D(I,g,new Uint8Array(J.buffer),e,c,z,!0,void 0,M)}async function G(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7?arguments[7]:void 0;return await new Promise((o=>{D(I,g,b,(I=>o(I)),e,c,z,M,J)}))}function D(I,g,n,G){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",x=arguments.length>5?arguments[5]:void 0,Z=arguments.length>6&&void 0!==arguments[6]&&arguments[6],k=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return o||(o=new Promise(((I,g)=>{let c,z=null;const o={o:!0,depth:!1,ig:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,12726)).then((n=>{let{ThinEngine:G}=n;const D=M.b.Instances.length;try{c=new OffscreenCanvas(100,100),z=new G(c,!1,o)}catch(k){var x;D<M.b.Instances.length&&(null===(x=M.b.Instances.pop())||void 0===x||x.dispose()),c=document.createElement("canvas"),z=new G(c,!1,o)}M.b.Instances.pop(),M.b.OnEnginesDisposedObservable.add((I=>{z&&I!==z&&!z.Z&&0===M.b.Instances.length&&p()})),z.getCaps().parallelShaderCompile=void 0;const Z=new e.d(z);b.e(52).then(b.bind(b,15040)).then((b=>{let{passPixelShader:M}=b;if(!z)return void g("Engine is not defined");const o=new e.g({kg:z,name:M.name,fragmentShader:M.shader,samplerNames:["textureSampler"]});J={canvas:c,kg:z,renderer:Z,wrapper:o},I(J)}))})).catch(g)}))),await o})().then((b=>{if(b.kg.setSize(I,g,!0),n instanceof Float32Array){const I=new Uint8Array(n.length);let g=n.length;for(;g--;){const b=n[g];I[g]=Math.round(255*(0,z.Clamp)(b))}n=I}const e=b.kg.createRawTexture(n,I,g,5,!1,!Z,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",e),b.renderer.draw(),k?c.Tools.ToBlob(b.canvas,(I=>{const g=new FileReader;g.onload=I=>{const g=I.target.result;G&&G(g)},g.readAsArrayBuffer(I)}),D,S):c.Tools.EncodeScreenshotCanvasData(b.canvas,G,D,x,S),e.dispose()}))}function p(){var I;J?(J.wrapper.dispose(),J.renderer.dispose(),J.kg.dispose()):null===(I=o)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.kg.dispose()}));o=null,J=null}const x={DumpData:D,DumpDataAsync:G,DumpFramebuffer:n,Dispose:p};c.Tools.DumpData=D,c.Tools.DumpDataAsync=G,c.Tools.DumpFramebuffer=n}}]);