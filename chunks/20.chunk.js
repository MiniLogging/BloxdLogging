"use strict";(self.hmihoa2fs98=self.hmihoa2fs98||[]).push([[20],{11890:(b,d,P)=>{P.r(d),P.d(d,{Dispose:()=>s,DumpData:()=>Y,DumpDataAsync:()=>x,DumpFramebuffer:()=>L,DumpTools:()=>E});var G=P(11787),W=P(11484),i=P(11700),q=P(11535);let C,J=null;async function L(b,d,P,G){let W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,q=arguments.length>6?arguments[6]:void 0;const C=await P.readPixels(0,0,b,d);Y(b,d,new Uint8Array(C.buffer),G,W,i,!0,void 0,q)}async function x(b,d,P){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",W=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0;return await new Promise((J=>{Y(b,d,P,(b=>J(b)),G,W,i,q,C)}))}function Y(b,d,L,x){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7&&void 0!==arguments[7]&&arguments[7],r=arguments.length>8?arguments[8]:void 0;(async function(){return J||(J=new Promise(((b,d)=>{let W,i=null;const J={Ud:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(P.bind(P,11815)).then((L=>{let{ThinEngine:x}=L;const Y=q.e.Instances.length;try{W=new OffscreenCanvas(100,100),i=new x(W,!1,J)}catch(t){var E;Y<q.e.Instances.length&&(null===(E=q.e.Instances.pop())||void 0===E||E.dispose()),W=document.createElement("canvas"),i=new x(W,!1,J)}q.e.Instances.pop(),q.e.OnEnginesDisposedObservable.add((b=>{i&&b!==i&&!i.L&&0===q.e.Instances.length&&s()})),i.getCaps().parallelShaderCompile=void 0;const w=new G.c(i);P.e(52).then(P.bind(P,14136)).then((P=>{let{passPixelShader:q}=P;if(!i)return void d("Engine is not defined");const J=new G.f({Md:i,name:q.name,fragmentShader:q.shader,samplerNames:["textureSampler"]});C={canvas:W,Md:i,renderer:w,wrapper:J},b(C)}))})).catch(d)}))),await J})().then((P=>{if(P.Md.setSize(b,d,!0),L instanceof Float32Array){const b=new Uint8Array(L.length);let d=L.length;for(;d--;){const P=L[d];b[d]=Math.round(255*(0,i.Clamp)(P))}L=b}const G=P.Md.createRawTexture(L,b,d,5,!1,!w,1);P.renderer.setViewport(),P.renderer.applyEffectWrapper(P.wrapper),P.wrapper.effect._bindTexture("textureSampler",G),P.renderer.draw(),t?W.Tools.ToBlob(P.canvas,(b=>{const d=new FileReader;d.onload=b=>{const d=b.target.result;x&&x(d)},d.readAsArrayBuffer(b)}),Y,r):W.Tools.EncodeScreenshotCanvasData(P.canvas,x,Y,E,r),G.dispose()}))}function s(){var b;C?(C.wrapper.dispose(),C.renderer.dispose(),C.Md.dispose()):null===(b=J)||void 0===b||b.then((b=>{b.wrapper.dispose(),b.renderer.dispose(),b.Md.dispose()}));J=null,C=null}const E={DumpData:Y,DumpDataAsync:x,DumpFramebuffer:L,Dispose:s};W.Tools.DumpData=Y,W.Tools.DumpDataAsync=x,W.Tools.DumpFramebuffer=L}}]);