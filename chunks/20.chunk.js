"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11423:(B,I,C)=>{C.r(I),C.d(I,{Dispose:()=>H,DumpData:()=>R,DumpDataAsync:()=>N,DumpFramebuffer:()=>g,DumpTools:()=>F});var M=C(11300),x=C(11018),y=C(11212),f=C(11056);let L,e=null;async function g(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const L=await C.readPixels(0,0,B,I);R(B,I,new Uint8Array(L.buffer),M,x,y,!0,void 0,f)}async function N(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",x=arguments.length>4?arguments[4]:void 0,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],L=arguments.length>7?arguments[7]:void 0;return await new Promise((e=>{R(B,I,C,(B=>e(B)),M,x,y,f,L)}))}function R(B,I,g,N){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",F=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return e||(e=new Promise(((B,I)=>{let x,y=null;const e={Uf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,11332)).then((g=>{let{ThinEngine:N}=g;const R=f.c.Instances.length;try{x=new OffscreenCanvas(100,100),y=new N(x,!1,e)}catch(q){var F;R<f.c.Instances.length&&(null===(F=f.c.Instances.pop())||void 0===F||F.dispose()),x=document.createElement("canvas"),y=new N(x,!1,e)}f.c.Instances.pop(),f.c.OnEnginesDisposedObservable.add((B=>{y&&B!==y&&!y.R&&0===f.c.Instances.length&&H()})),y.getCaps().parallelShaderCompile=void 0;const k=new M.e(y);C.e(52).then(C.bind(C,13679)).then((C=>{let{passPixelShader:f}=C;if(!y)return void I("Engine is not defined");const e=new M.f({RI:y,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});L={canvas:x,RI:y,renderer:k,wrapper:e},B(L)}))})).catch(I)}))),await e})().then((C=>{if(C.RI.setSize(B,I,!0),g instanceof Float32Array){const B=new Uint8Array(g.length);let I=g.length;for(;I--;){const C=g[I];B[I]=Math.round(255*(0,y.Clamp)(C))}g=B}const M=C.RI.createRawTexture(g,B,I,5,!1,!k,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",M),C.renderer.draw(),q?x.Tools.ToBlob(C.canvas,(B=>{const I=new FileReader;I.onload=B=>{const I=B.target.result;N&&N(I)},I.readAsArrayBuffer(B)}),R,S):x.Tools.EncodeScreenshotCanvasData(C.canvas,N,R,F,S),M.dispose()}))}function H(){var B;L?(L.wrapper.dispose(),L.renderer.dispose(),L.RI.dispose()):null===(B=e)||void 0===B||B.then((B=>{B.wrapper.dispose(),B.renderer.dispose(),B.RI.dispose()}));e=null,L=null}const F={DumpData:R,DumpDataAsync:N,DumpFramebuffer:g,Dispose:H};x.Tools.DumpData=R,x.Tools.DumpDataAsync=N,x.Tools.DumpFramebuffer=g}}]);