"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[20],{12061:(C,U,K)=>{K.r(U),K.d(U,{Dispose:()=>E,DumpData:()=>p,DumpDataAsync:()=>j,DumpFramebuffer:()=>z,DumpTools:()=>u});var m=K(11941),O=K(11660),X=K(11846),A=K(11703);let e,t=null;async function z(C,U,K,m){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const e=await K.readPixels(0,0,C,U);p(C,U,new Uint8Array(e.buffer),m,O,X,!0,void 0,A)}async function j(C,U,K){let m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",O=arguments.length>4?arguments[4]:void 0,X=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{p(C,U,K,(C=>t(C)),m,O,X,A,e)}))}function p(C,U,z,j){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",u=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],v=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Q=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((C,U)=>{let O,X=null;const t={Ue:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(K.bind(K,11962)).then((z=>{let{ThinEngine:j}=z;const p=A.c.Instances.length;try{O=new OffscreenCanvas(100,100),X=new j(O,!1,t)}catch(v){var u;p<A.c.Instances.length&&(null===(u=A.c.Instances.pop())||void 0===u||u.dispose()),O=document.createElement("canvas"),X=new j(O,!1,t)}A.c.Instances.pop(),A.c.OnEnginesDisposedObservable.add((C=>{X&&C!==X&&!X.A&&0===A.c.Instances.length&&E()})),X.getCaps().parallelShaderCompile=void 0;const b=new m.c(X);K.e(52).then(K.bind(K,14289)).then((K=>{let{passPixelShader:A}=K;if(!X)return void U("Engine is not defined");const t=new m.e({uU:X,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});e={canvas:O,uU:X,renderer:b,wrapper:t},C(e)}))})).catch(U)}))),await t})().then((K=>{if(K.uU.setSize(C,U,!0),z instanceof Float32Array){const C=new Uint8Array(z.length);let U=z.length;for(;U--;){const K=z[U];C[U]=Math.round(255*(0,X.Clamp)(K))}z=C}const m=K.uU.createRawTexture(z,C,U,5,!1,!b,1);K.renderer.setViewport(),K.renderer.applyEffectWrapper(K.wrapper),K.wrapper.effect._bindTexture("textureSampler",m),K.renderer.draw(),v?O.Tools.ToBlob(K.canvas,(C=>{const U=new FileReader;U.onload=C=>{const U=C.target.result;j&&j(U)},U.readAsArrayBuffer(C)}),p,Q):O.Tools.EncodeScreenshotCanvasData(K.canvas,j,p,u,Q),m.dispose()}))}function E(){var C;e?(e.wrapper.dispose(),e.renderer.dispose(),e.uU.dispose()):null===(C=t)||void 0===C||C.then((C=>{C.wrapper.dispose(),C.renderer.dispose(),C.uU.dispose()}));t=null,e=null}const u={DumpData:p,DumpDataAsync:j,DumpFramebuffer:z,Dispose:E};O.Tools.DumpData=p,O.Tools.DumpDataAsync=j,O.Tools.DumpFramebuffer=z}}]);