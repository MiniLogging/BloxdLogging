"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[20],{12946:(mm,o,u)=>{u.r(o),u.d(o,{Dispose:()=>q,DumpData:()=>Y,DumpDataAsync:()=>z,DumpFramebuffer:()=>K,DumpTools:()=>x});var f=u(12845),B=u(12549),O=u(12752),r=u(12596);let w,p=null;async function K(mm,o,u,f){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,r=arguments.length>6?arguments[6]:void 0;const w=await u.readPixels(0,0,mm,o);Y(mm,o,new Uint8Array(w.buffer),f,B,O,!0,void 0,r)}async function z(mm,o,u){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],r=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0;return await new Promise((p=>{Y(mm,o,u,(mm=>p(mm)),f,B,O,r,w)}))}function Y(mm,o,K,z){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",x=arguments.length>5?arguments[5]:void 0,H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],M=arguments.length>8?arguments[8]:void 0;(async function(){return p||(p=new Promise(((mm,o)=>{let B,O=null;const p={Xf:!0,depth:!1,Nf:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(u.bind(u,12865)).then((K=>{let{ThinEngine:z}=K;const Y=r.d.Instances.length;try{B=new OffscreenCanvas(100,100),O=new z(B,!1,p)}catch(E){var x;Y<r.d.Instances.length&&(null===(x=r.d.Instances.pop())||void 0===x||x.dispose()),B=document.createElement("canvas"),O=new z(B,!1,p)}r.d.Instances.pop(),r.d.OnEnginesDisposedObservable.add((mm=>{O&&mm!==O&&!O.q&&0===r.d.Instances.length&&q()})),O.getCaps().parallelShaderCompile=void 0;const H=new f.e(O);u.e(52).then(u.bind(u,15103)).then((u=>{let{passPixelShader:r}=u;if(!O)return void o("Engine is not defined");const p=new f.i({Mo:O,name:r.name,fragmentShader:r.shader,samplerNames:["textureSampler"]});w={canvas:B,Mo:O,renderer:H,wrapper:p},mm(w)}))})).catch(o)}))),await p})().then((u=>{if(u.Mo.setSize(mm,o,!0),K instanceof Float32Array){const mm=new Uint8Array(K.length);let o=K.length;for(;o--;){const u=K[o];mm[o]=Math.round(255*(0,O.Clamp)(u))}K=mm}const f=u.Mo.createRawTexture(K,mm,o,5,!1,!H,1);u.renderer.setViewport(),u.renderer.applyEffectWrapper(u.wrapper),u.wrapper.effect._bindTexture("textureSampler",f),u.renderer.draw(),E?B.Tools.ToBlob(u.canvas,(mm=>{const o=new FileReader;o.onload=mm=>{const o=mm.target.result;z&&z(o)},o.readAsArrayBuffer(mm)}),Y,M):B.Tools.EncodeScreenshotCanvasData(u.canvas,z,Y,x,M),f.dispose()}))}function q(){var mm;w?(w.wrapper.dispose(),w.renderer.dispose(),w.Mo.dispose()):null===(mm=p)||void 0===mm||mm.then((mm=>{mm.wrapper.dispose(),mm.renderer.dispose(),mm.Mo.dispose()}));p=null,w=null}const x={DumpData:Y,DumpDataAsync:z,DumpFramebuffer:K,Dispose:q};B.Tools.DumpData=Y,B.Tools.DumpDataAsync=z,B.Tools.DumpFramebuffer=K}}]);