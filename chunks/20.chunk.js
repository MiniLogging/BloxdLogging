"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[20],{11354:(N,q,C)=>{C.r(q),C.d(q,{Dispose:()=>V,DumpData:()=>t,DumpDataAsync:()=>n,DumpFramebuffer:()=>A,DumpTools:()=>Z});var d=C(11234),U=C(10945),W=C(11142),a=C(10995);let F,w=null;async function A(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",W=arguments.length>5?arguments[5]:void 0,a=arguments.length>6?arguments[6]:void 0;const F=await C.readPixels(0,0,N,q);t(N,q,new Uint8Array(F.buffer),d,U,W,!0,void 0,a)}async function n(N,q,C){let d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,W=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7?arguments[7]:void 0;return await new Promise((w=>{t(N,q,C,(N=>w(N)),d,U,W,a,F)}))}function t(N,q,A,n){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],v=arguments.length>8?arguments[8]:void 0;(async function(){return w||(w=new Promise(((N,q)=>{let U,W=null;const w={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,11266)).then((A=>{let{ThinEngine:n}=A;const t=a.e.Instances.length;try{U=new OffscreenCanvas(100,100),W=new n(U,!1,w)}catch(Q){var Z;t<a.e.Instances.length&&(null===(Z=a.e.Instances.pop())||void 0===Z||Z.dispose()),U=document.createElement("canvas"),W=new n(U,!1,w)}a.e.Instances.pop(),a.e.OnEnginesDisposedObservable.add((N=>{W&&N!==W&&!W.A&&0===a.e.Instances.length&&V()})),W.getCaps().parallelShaderCompile=void 0;const J=new d.c(W);C.e(52).then(C.bind(C,13585)).then((C=>{let{passPixelShader:a}=C;if(!W)return void q("Engine is not defined");const w=new d.d({Zq:W,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});F={canvas:U,Zq:W,renderer:J,wrapper:w},N(F)}))})).catch(q)}))),await w})().then((C=>{if(C.Zq.setSize(N,q,!0),A instanceof Float32Array){const N=new Uint8Array(A.length);let q=A.length;for(;q--;){const C=A[q];N[q]=Math.round(255*(0,W.Clamp)(C))}A=N}const d=C.Zq.createRawTexture(A,N,q,5,!1,!J,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",d),C.renderer.draw(),Q?U.Tools.ToBlob(C.canvas,(N=>{const q=new FileReader;q.onload=N=>{const q=N.target.result;n&&n(q)},q.readAsArrayBuffer(N)}),t,v):U.Tools.EncodeScreenshotCanvasData(C.canvas,n,t,Z,v),d.dispose()}))}function V(){var N;F?(F.wrapper.dispose(),F.renderer.dispose(),F.Zq.dispose()):null===(N=w)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.Zq.dispose()}));w=null,F=null}const Z={DumpData:t,DumpDataAsync:n,DumpFramebuffer:A,Dispose:V};U.Tools.DumpData=t,U.Tools.DumpDataAsync=n,U.Tools.DumpFramebuffer=A}}]);