"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[20],{11360:(P,e,n)=>{n.r(e),n.d(e,{Dispose:()=>A,DumpData:()=>q,DumpDataAsync:()=>R,DumpFramebuffer:()=>C,DumpTools:()=>F});var H=n(11245),S=n(10972),p=n(11148),k=n(11017);let m,t=null;async function C(P,e,n,H){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,k=arguments.length>6?arguments[6]:void 0;const m=await n.readPixels(0,0,P,e);q(P,e,new Uint8Array(m.buffer),H,S,p,!0,void 0,k)}async function R(P,e,n){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",S=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],m=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{q(P,e,n,(P=>t(P)),H,S,p,k,m)}))}function q(P,e,C,R){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",F=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7&&void 0!==arguments[7]&&arguments[7],z=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((P,e)=>{let S,p=null;const t={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(n.bind(n,11274)).then((C=>{let{ThinEngine:R}=C;const q=k.d.Instances.length;try{S=new OffscreenCanvas(100,100),p=new R(S,!1,t)}catch(j){var F;q<k.d.Instances.length&&(null===(F=k.d.Instances.pop())||void 0===F||F.dispose()),S=document.createElement("canvas"),p=new R(S,!1,t)}k.d.Instances.pop(),k.d.OnEnginesDisposedObservable.add((P=>{p&&P!==p&&!p.C&&0===k.d.Instances.length&&A()})),p.getCaps().parallelShaderCompile=void 0;const Y=new H.b(p);n.e(52).then(n.bind(n,13572)).then((n=>{let{passPixelShader:k}=n;if(!p)return void e("Engine is not defined");const t=new H.d({Je:p,name:k.name,fragmentShader:k.shader,samplerNames:["textureSampler"]});m={canvas:S,Je:p,renderer:Y,wrapper:t},P(m)}))})).catch(e)}))),await t})().then((n=>{if(n.Je.setSize(P,e,!0),C instanceof Float32Array){const P=new Uint8Array(C.length);let e=C.length;for(;e--;){const n=C[e];P[e]=Math.round(255*(0,p.Clamp)(n))}C=P}const H=n.Je.createRawTexture(C,P,e,5,!1,!Y,1);n.renderer.setViewport(),n.renderer.applyEffectWrapper(n.wrapper),n.wrapper.effect._bindTexture("textureSampler",H),n.renderer.draw(),j?S.Tools.ToBlob(n.canvas,(P=>{const e=new FileReader;e.onload=P=>{const e=P.target.result;R&&R(e)},e.readAsArrayBuffer(P)}),q,z):S.Tools.EncodeScreenshotCanvasData(n.canvas,R,q,F,z),H.dispose()}))}function A(){var P;m?(m.wrapper.dispose(),m.renderer.dispose(),m.Je.dispose()):null===(P=t)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.Je.dispose()}));t=null,m=null}const F={DumpData:q,DumpDataAsync:R,DumpFramebuffer:C,Dispose:A};S.Tools.DumpData=q,S.Tools.DumpDataAsync=R,S.Tools.DumpFramebuffer=C}}]);