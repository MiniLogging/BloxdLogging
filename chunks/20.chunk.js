"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[20],{13046:(D,h,o)=>{o.r(h),o.d(h,{Dispose:()=>Q,DumpData:()=>K,DumpDataAsync:()=>k,DumpFramebuffer:()=>S,DumpTools:()=>v});var H=o(12930),g=o(12642),j=o(12842),M=o(12683);let R,t=null;async function S(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,M=arguments.length>6?arguments[6]:void 0;const R=await o.readPixels(0,0,D,h);K(D,h,new Uint8Array(R.buffer),H,g,j,!0,void 0,M)}async function k(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0;return await new Promise((t=>{K(D,h,o,(D=>t(D)),H,g,j,M,R)}))}function K(D,h,S,k){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,r=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((D,h)=>{let g,j=null;const t={ph:!0,depth:!1,Oh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(o.bind(o,12962)).then((S=>{let{ThinEngine:k}=S;const K=M.d.Instances.length;try{g=new OffscreenCanvas(100,100),j=new k(g,!1,t)}catch(B){var v;K<M.d.Instances.length&&(null===(v=M.d.Instances.pop())||void 0===v||v.dispose()),g=document.createElement("canvas"),j=new k(g,!1,t)}M.d.Instances.pop(),M.d.OnEnginesDisposedObservable.add((D=>{j&&D!==j&&!j.S&&0===M.d.Instances.length&&Q()})),j.getCaps().parallelShaderCompile=void 0;const r=new H.b(j);o.e(52).then(o.bind(o,15193)).then((o=>{let{passPixelShader:M}=o;if(!j)return void h("Engine is not defined");const t=new H.c({bh:j,name:M.name,fragmentShader:M.shader,samplerNames:["textureSampler"]});R={canvas:g,bh:j,renderer:r,wrapper:t},D(R)}))})).catch(h)}))),await t})().then((o=>{if(o.bh.setSize(D,h,!0),S instanceof Float32Array){const D=new Uint8Array(S.length);let h=S.length;for(;h--;){const o=S[h];D[h]=Math.round(255*(0,j.Clamp)(o))}S=D}const H=o.bh.createRawTexture(S,D,h,5,!1,!r,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",H),o.renderer.draw(),B?g.Tools.ToBlob(o.canvas,(D=>{const h=new FileReader;h.onload=D=>{const h=D.target.result;k&&k(h)},h.readAsArrayBuffer(D)}),K,s):g.Tools.EncodeScreenshotCanvasData(o.canvas,k,K,v,s),H.dispose()}))}function Q(){var D;R?(R.wrapper.dispose(),R.renderer.dispose(),R.bh.dispose()):null===(D=t)||void 0===D||D.then((D=>{D.wrapper.dispose(),D.renderer.dispose(),D.bh.dispose()}));t=null,R=null}const v={DumpData:K,DumpDataAsync:k,DumpFramebuffer:S,Dispose:Q};g.Tools.DumpData=K,g.Tools.DumpDataAsync=k,g.Tools.DumpFramebuffer=S}}]);