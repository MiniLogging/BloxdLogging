"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[20],{12817:(s,k,h)=>{h.r(k),h.d(k,{Dispose:()=>a,DumpData:()=>S,DumpDataAsync:()=>c,DumpFramebuffer:()=>O,DumpTools:()=>r});var A=h(12703),g=h(12402),ms=h(12607),i=h(12445);let K,H=null;async function O(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",ms=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;const K=await h.readPixels(0,0,s,k);S(s,k,new Uint8Array(K.buffer),A,g,ms,!0,void 0,i)}async function c(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",g=arguments.length>4?arguments[4]:void 0,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return await new Promise((H=>{S(s,k,h,(s=>H(s)),A,g,ms,i,K)}))}function S(s,k,O,c){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],j=arguments.length>8?arguments[8]:void 0;(async function(){return H||(H=new Promise(((s,k)=>{let g,ms=null;const H={qh:!0,depth:!1,Bh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(h.bind(h,12727)).then((O=>{let{ThinEngine:c}=O;const S=i.b.Instances.length;try{g=new OffscreenCanvas(100,100),ms=new c(g,!1,H)}catch(E){var r;S<i.b.Instances.length&&(null===(r=i.b.Instances.pop())||void 0===r||r.dispose()),g=document.createElement("canvas"),ms=new c(g,!1,H)}i.b.Instances.pop(),i.b.OnEnginesDisposedObservable.add((s=>{ms&&s!==ms&&!ms.P&&0===i.b.Instances.length&&a()})),ms.getCaps().parallelShaderCompile=void 0;const d=new A.b(ms);h.e(52).then(h.bind(h,15084)).then((h=>{let{passPixelShader:i}=h;if(!ms)return void k("Engine is not defined");const H=new A.f({jk:ms,name:i.name,fragmentShader:i.shader,samplerNames:["textureSampler"]});K={canvas:g,jk:ms,renderer:d,wrapper:H},s(K)}))})).catch(k)}))),await H})().then((h=>{if(h.jk.setSize(s,k,!0),O instanceof Float32Array){const s=new Uint8Array(O.length);let k=O.length;for(;k--;){const h=O[k];s[k]=Math.round(255*(0,ms.Clamp)(h))}O=s}const A=h.jk.createRawTexture(O,s,k,5,!1,!d,1);h.renderer.setViewport(),h.renderer.applyEffectWrapper(h.wrapper),h.wrapper.effect._bindTexture("textureSampler",A),h.renderer.draw(),E?g.Tools.ToBlob(h.canvas,(s=>{const k=new FileReader;k.onload=s=>{const k=s.target.result;c&&c(k)},k.readAsArrayBuffer(s)}),S,j):g.Tools.EncodeScreenshotCanvasData(h.canvas,c,S,r,j),A.dispose()}))}function a(){var s;K?(K.wrapper.dispose(),K.renderer.dispose(),K.jk.dispose()):null===(s=H)||void 0===s||s.then((s=>{s.wrapper.dispose(),s.renderer.dispose(),s.jk.dispose()}));H=null,K=null}const r={DumpData:S,DumpDataAsync:c,DumpFramebuffer:O,Dispose:a};g.Tools.DumpData=S,g.Tools.DumpDataAsync=c,g.Tools.DumpFramebuffer=O}}]);