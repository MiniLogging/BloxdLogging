"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[20],{12554:(E,U,g)=>{g.r(U),g.d(U,{Dispose:()=>F,DumpData:()=>P,DumpDataAsync:()=>B,DumpFramebuffer:()=>C,DumpTools:()=>f});var N=g(12433),L=g(12165),D=g(12353),S=g(12205);let u,s=null;async function C(E,U,g,N){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,S=arguments.length>6?arguments[6]:void 0;const u=await g.readPixels(0,0,E,U);P(E,U,new Uint8Array(u.buffer),N,L,D,!0,void 0,S)}async function B(E,U,g){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7?arguments[7]:void 0;return await new Promise((s=>{P(E,U,g,(E=>s(E)),N,L,D,S,u)}))}function P(E,U,C,B){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],I=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8?arguments[8]:void 0;(async function(){return s||(s=new Promise(((E,U)=>{let L,D=null;const s={ag:!0,depth:!1,Vg:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(g.bind(g,12471)).then((C=>{let{ThinEngine:B}=C;const P=S.b.Instances.length;try{L=new OffscreenCanvas(100,100),D=new B(L,!1,s)}catch(I){var f;P<S.b.Instances.length&&(null===(f=S.b.Instances.pop())||void 0===f||f.dispose()),L=document.createElement("canvas"),D=new B(L,!1,s)}S.b.Instances.pop(),S.b.OnEnginesDisposedObservable.add((E=>{D&&E!==D&&!D.C&&0===S.b.Instances.length&&F()})),D.getCaps().parallelShaderCompile=void 0;const d=new N.c(D);g.e(52).then(g.bind(g,14865)).then((g=>{let{passPixelShader:S}=g;if(!D)return void U("Engine is not defined");const s=new N.e({fU:D,name:S.name,fragmentShader:S.shader,samplerNames:["textureSampler"]});u={canvas:L,fU:D,renderer:d,wrapper:s},E(u)}))})).catch(U)}))),await s})().then((g=>{if(g.fU.setSize(E,U,!0),C instanceof Float32Array){const E=new Uint8Array(C.length);let U=C.length;for(;U--;){const g=C[U];E[U]=Math.round(255*(0,D.Clamp)(g))}C=E}const N=g.fU.createRawTexture(C,E,U,5,!1,!d,1);g.renderer.setViewport(),g.renderer.applyEffectWrapper(g.wrapper),g.wrapper.effect._bindTexture("textureSampler",N),g.renderer.draw(),I?L.Tools.ToBlob(g.canvas,(E=>{const U=new FileReader;U.onload=E=>{const U=E.target.result;B&&B(U)},U.readAsArrayBuffer(E)}),P,y):L.Tools.EncodeScreenshotCanvasData(g.canvas,B,P,f,y),N.dispose()}))}function F(){var E;u?(u.wrapper.dispose(),u.renderer.dispose(),u.fU.dispose()):null===(E=s)||void 0===E||E.then((E=>{E.wrapper.dispose(),E.renderer.dispose(),E.fU.dispose()}));s=null,u=null}const f={DumpData:P,DumpDataAsync:B,DumpFramebuffer:C,Dispose:F};L.Tools.DumpData=P,L.Tools.DumpDataAsync=B,L.Tools.DumpFramebuffer=C}}]);