"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[20],{13196:(M,A,O)=>{O.r(A),O.d(A,{Dispose:()=>T,DumpData:()=>e,DumpDataAsync:()=>g,DumpFramebuffer:()=>B,DumpTools:()=>J});var S=O(13090),z=O(12768),Q=O(12980),X=O(12811);let c,j=null;async function B(M,A,O,S){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Q=arguments.length>5?arguments[5]:void 0,X=arguments.length>6?arguments[6]:void 0;const c=await O.readPixels(0,0,M,A);e(M,A,new Uint8Array(c.buffer),S,z,Q,!0,void 0,X)}async function g(M,A,O){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7?arguments[7]:void 0;return await new Promise((j=>{e(M,A,O,(M=>j(M)),S,z,Q,X,c)}))}function e(M,A,B,g){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return j||(j=new Promise(((M,A)=>{let z,Q=null;const j={cc:!0,depth:!1,Sc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(O.bind(O,13119)).then((B=>{let{ThinEngine:g}=B;const e=X.d.Instances.length;try{z=new OffscreenCanvas(100,100),Q=new g(z,!1,j)}catch(G){var J;e<X.d.Instances.length&&(null===(J=X.d.Instances.pop())||void 0===J||J.dispose()),z=document.createElement("canvas"),Q=new g(z,!1,j)}X.d.Instances.pop(),X.d.OnEnginesDisposedObservable.add((M=>{Q&&M!==Q&&!Q.T&&0===X.d.Instances.length&&T()})),Q.getCaps().parallelShaderCompile=void 0;const K=new S.b(Q);O.e(52).then(O.bind(O,15129)).then((O=>{let{passPixelShader:X}=O;if(!Q)return void A("Engine is not defined");const j=new S.c({KA:Q,name:X.name,fragmentShader:X.shader,samplerNames:["textureSampler"]});c={canvas:z,KA:Q,renderer:K,wrapper:j},M(c)}))})).catch(A)}))),await j})().then((O=>{if(O.KA.setSize(M,A,!0),B instanceof Float32Array){const M=new Uint8Array(B.length);let A=B.length;for(;A--;){const O=B[A];M[A]=Math.round(255*(0,Q.Clamp)(O))}B=M}const S=O.KA.createRawTexture(B,M,A,5,!1,!K,1);O.renderer.setViewport(),O.renderer.applyEffectWrapper(O.wrapper),O.wrapper.effect._bindTexture("textureSampler",S),O.renderer.draw(),G?z.Tools.ToBlob(O.canvas,(M=>{const A=new FileReader;A.onload=M=>{const A=M.target.result;g&&g(A)},A.readAsArrayBuffer(M)}),e,d):z.Tools.EncodeScreenshotCanvasData(O.canvas,g,e,J,d),S.dispose()}))}function T(){var M;c?(c.wrapper.dispose(),c.renderer.dispose(),c.KA.dispose()):null===(M=j)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.KA.dispose()}));j=null,c=null}const J={DumpData:e,DumpDataAsync:g,DumpFramebuffer:B,Dispose:T};z.Tools.DumpData=e,z.Tools.DumpDataAsync=g,z.Tools.DumpFramebuffer=B}}]);