"use strict";(self.fyqbdzs5tyo=self.fyqbdzs5tyo||[]).push([[20],{11454:(V,I,A)=>{A.r(I),A.d(I,{Dispose:()=>J,DumpData:()=>P,DumpDataAsync:()=>X,DumpFramebuffer:()=>b,DumpTools:()=>G});var B=A(11330),F=A(11052),E=A(11249),Y=A(11097);let H,c=null;async function b(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const H=await A.readPixels(0,0,V,I);P(V,I,new Uint8Array(H.buffer),B,F,E,!0,void 0,Y)}async function X(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7?arguments[7]:void 0;return await new Promise((c=>{P(V,I,A,(V=>c(V)),B,F,E,Y,H)}))}function P(V,I,b,X){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8?arguments[8]:void 0;(async function(){return c||(c=new Promise(((V,I)=>{let F,E=null;const c={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(A.bind(A,11363)).then((b=>{let{ThinEngine:X}=b;const P=Y.e.Instances.length;try{F=new OffscreenCanvas(100,100),E=new X(F,!1,c)}catch(t){var G;P<Y.e.Instances.length&&(null===(G=Y.e.Instances.pop())||void 0===G||G.dispose()),F=document.createElement("canvas"),E=new X(F,!1,c)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((V=>{E&&V!==E&&!E.H&&0===Y.e.Instances.length&&J()})),E.getCaps().parallelShaderCompile=void 0;const w=new B.e(E);A.e(52).then(A.bind(A,13683)).then((A=>{let{passPixelShader:Y}=A;if(!E)return void I("Engine is not defined");const c=new B.f({wI:E,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});H={canvas:F,wI:E,renderer:w,wrapper:c},V(H)}))})).catch(I)}))),await c})().then((A=>{if(A.wI.setSize(V,I,!0),b instanceof Float32Array){const V=new Uint8Array(b.length);let I=b.length;for(;I--;){const A=b[I];V[I]=Math.round(255*(0,E.Clamp)(A))}b=V}const B=A.wI.createRawTexture(b,V,I,5,!1,!w,1);A.renderer.setViewport(),A.renderer.applyEffectWrapper(A.wrapper),A.wrapper.effect._bindTexture("textureSampler",B),A.renderer.draw(),t?F.Tools.ToBlob(A.canvas,(V=>{const I=new FileReader;I.onload=V=>{const I=V.target.result;X&&X(I)},I.readAsArrayBuffer(V)}),P,u):F.Tools.EncodeScreenshotCanvasData(A.canvas,X,P,G,u),B.dispose()}))}function J(){var V;H?(H.wrapper.dispose(),H.renderer.dispose(),H.wI.dispose()):null===(V=c)||void 0===V||V.then((V=>{V.wrapper.dispose(),V.renderer.dispose(),V.wI.dispose()}));c=null,H=null}const G={DumpData:P,DumpDataAsync:X,DumpFramebuffer:b,Dispose:J};F.Tools.DumpData=P,F.Tools.DumpDataAsync=X,F.Tools.DumpFramebuffer=b}}]);