"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[20],{12468:(I,O,C)=>{C.r(O),C.d(O,{Dispose:()=>s,DumpData:()=>Q,DumpDataAsync:()=>N,DumpFramebuffer:()=>p,DumpTools:()=>Z});var j=C(12370),K=C(12083),i=C(12282),y=C(12132);let S,U=null;async function p(I,O,C,j){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0;const S=await C.readPixels(0,0,I,O);Q(I,O,new Uint8Array(S.buffer),j,K,i,!0,void 0,y)}async function N(I,O,C){let j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",K=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{Q(I,O,C,(I=>U(I)),j,K,i,y,S)}))}function Q(I,O,p,N){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],mI=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((I,O)=>{let K,i=null;const U={QS:!0,depth:!1,SS:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,12398)).then((p=>{let{ThinEngine:N}=p;const Q=y.e.Instances.length;try{K=new OffscreenCanvas(100,100),i=new N(K,!1,U)}catch(mI){var Z;Q<y.e.Instances.length&&(null===(Z=y.e.Instances.pop())||void 0===Z||Z.dispose()),K=document.createElement("canvas"),i=new N(K,!1,U)}y.e.Instances.pop(),y.e.OnEnginesDisposedObservable.add((I=>{i&&I!==i&&!i.p&&0===y.e.Instances.length&&s()})),i.getCaps().parallelShaderCompile=void 0;const q=new j.b(i);C.e(52).then(C.bind(C,14669)).then((C=>{let{passPixelShader:y}=C;if(!i)return void O("Engine is not defined");const U=new j.c({qO:i,name:y.name,fragmentShader:y.shader,samplerNames:["textureSampler"]});S={canvas:K,qO:i,renderer:q,wrapper:U},I(S)}))})).catch(O)}))),await U})().then((C=>{if(C.qO.setSize(I,O,!0),p instanceof Float32Array){const I=new Uint8Array(p.length);let O=p.length;for(;O--;){const C=p[O];I[O]=Math.round(255*(0,i.Clamp)(C))}p=I}const j=C.qO.createRawTexture(p,I,O,5,!1,!q,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",j),C.renderer.draw(),mI?K.Tools.ToBlob(C.canvas,(I=>{const O=new FileReader;O.onload=I=>{const O=I.target.result;N&&N(O)},O.readAsArrayBuffer(I)}),Q,E):K.Tools.EncodeScreenshotCanvasData(C.canvas,N,Q,Z,E),j.dispose()}))}function s(){var I;S?(S.wrapper.dispose(),S.renderer.dispose(),S.qO.dispose()):null===(I=U)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.qO.dispose()}));U=null,S=null}const Z={DumpData:Q,DumpDataAsync:N,DumpFramebuffer:p,Dispose:s};K.Tools.DumpData=Q,K.Tools.DumpDataAsync=N,K.Tools.DumpFramebuffer=p}}]);