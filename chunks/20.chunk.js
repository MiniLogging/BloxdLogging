"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[20],{12664:(l,a,N)=>{N.r(a),N.d(a,{Dispose:()=>y,DumpData:()=>n,DumpDataAsync:()=>J,DumpFramebuffer:()=>T,DumpTools:()=>H});var U=N(12538),c=N(12254),K=N(12461),Z=N(12296);let w,S=null;async function T(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,Z=arguments.length>6?arguments[6]:void 0;const w=await N.readPixels(0,0,l,a);n(l,a,new Uint8Array(w.buffer),U,c,K,!0,void 0,Z)}async function J(l,a,N){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Z=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0;return await new Promise((S=>{n(l,a,N,(l=>S(l)),U,c,K,Z,w)}))}function n(l,a,T,J){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],B=arguments.length>8?arguments[8]:void 0;(async function(){return S||(S=new Promise(((l,a)=>{let c,K=null;const S={o:!0,depth:!1,Jc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(N.bind(N,12566)).then((T=>{let{ThinEngine:J}=T;const n=Z.e.Instances.length;try{c=new OffscreenCanvas(100,100),K=new J(c,!1,S)}catch(W){var H;n<Z.e.Instances.length&&(null===(H=Z.e.Instances.pop())||void 0===H||H.dispose()),c=document.createElement("canvas"),K=new J(c,!1,S)}Z.e.Instances.pop(),Z.e.OnEnginesDisposedObservable.add((l=>{K&&l!==K&&!K.T&&0===Z.e.Instances.length&&y()})),K.getCaps().parallelShaderCompile=void 0;const u=new U.e(K);N.e(52).then(N.bind(N,14917)).then((N=>{let{passPixelShader:Z}=N;if(!K)return void a("Engine is not defined");const S=new U.i({Ha:K,name:Z.name,fragmentShader:Z.shader,samplerNames:["textureSampler"]});w={canvas:c,Ha:K,renderer:u,wrapper:S},l(w)}))})).catch(a)}))),await S})().then((N=>{if(N.Ha.setSize(l,a,!0),T instanceof Float32Array){const l=new Uint8Array(T.length);let a=T.length;for(;a--;){const N=T[a];l[a]=Math.round(255*(0,K.Clamp)(N))}T=l}const U=N.Ha.createRawTexture(T,l,a,5,!1,!u,1);N.renderer.setViewport(),N.renderer.applyEffectWrapper(N.wrapper),N.wrapper.effect._bindTexture("textureSampler",U),N.renderer.draw(),W?c.Tools.ToBlob(N.canvas,(l=>{const a=new FileReader;a.onload=l=>{const a=l.target.result;J&&J(a)},a.readAsArrayBuffer(l)}),n,B):c.Tools.EncodeScreenshotCanvasData(N.canvas,J,n,H,B),U.dispose()}))}function y(){var l;w?(w.wrapper.dispose(),w.renderer.dispose(),w.Ha.dispose()):null===(l=S)||void 0===l||l.then((l=>{l.wrapper.dispose(),l.renderer.dispose(),l.Ha.dispose()}));S=null,w=null}const H={DumpData:n,DumpDataAsync:J,DumpFramebuffer:T,Dispose:y};c.Tools.DumpData=n,c.Tools.DumpDataAsync=J,c.Tools.DumpFramebuffer=T}}]);