"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[20],{11526:(F,b,Q)=>{Q.r(b),Q.d(b,{Dispose:()=>e,DumpData:()=>K,DumpDataAsync:()=>G,DumpFramebuffer:()=>q,DumpTools:()=>N});var C=Q(11410),z=Q(11128),t=Q(11329),g=Q(11161);let W,Z=null;async function q(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const W=await Q.readPixels(0,0,F,b);K(F,b,new Uint8Array(W.buffer),C,z,t,!0,void 0,g)}async function G(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",z=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7?arguments[7]:void 0;return await new Promise((Z=>{K(F,b,Q,(F=>Z(F)),C,z,t,g,W)}))}function K(F,b,q,G){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return Z||(Z=new Promise(((F,b)=>{let z,t=null;const Z={Eb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Q.bind(Q,11446)).then((q=>{let{ThinEngine:G}=q;const K=g.d.Instances.length;try{z=new OffscreenCanvas(100,100),t=new G(z,!1,Z)}catch(E){var N;K<g.d.Instances.length&&(null===(N=g.d.Instances.pop())||void 0===N||N.dispose()),z=document.createElement("canvas"),t=new G(z,!1,Z)}g.d.Instances.pop(),g.d.OnEnginesDisposedObservable.add((F=>{t&&F!==t&&!t.G&&0===g.d.Instances.length&&e()})),t.getCaps().parallelShaderCompile=void 0;const y=new C.e(t);Q.e(52).then(Q.bind(Q,13733)).then((Q=>{let{passPixelShader:g}=Q;if(!t)return void b("Engine is not defined");const Z=new C.i({tQ:t,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});W={canvas:z,tQ:t,renderer:y,wrapper:Z},F(W)}))})).catch(b)}))),await Z})().then((Q=>{if(Q.tQ.setSize(F,b,!0),q instanceof Float32Array){const F=new Uint8Array(q.length);let b=q.length;for(;b--;){const Q=q[b];F[b]=Math.round(255*(0,t.Clamp)(Q))}q=F}const C=Q.tQ.createRawTexture(q,F,b,5,!1,!y,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",C),Q.renderer.draw(),E?z.Tools.ToBlob(Q.canvas,(F=>{const b=new FileReader;b.onload=F=>{const b=F.target.result;G&&G(b)},b.readAsArrayBuffer(F)}),K,c):z.Tools.EncodeScreenshotCanvasData(Q.canvas,G,K,N,c),C.dispose()}))}function e(){var F;W?(W.wrapper.dispose(),W.renderer.dispose(),W.tQ.dispose()):null===(F=Z)||void 0===F||F.then((F=>{F.wrapper.dispose(),F.renderer.dispose(),F.tQ.dispose()}));Z=null,W=null}const N={DumpData:K,DumpDataAsync:G,DumpFramebuffer:q,Dispose:e};z.Tools.DumpData=K,z.Tools.DumpDataAsync=G,z.Tools.DumpFramebuffer=q}}]);