"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[20],{11946:(e,E,H)=>{H.r(E),H.d(E,{Dispose:()=>V,DumpData:()=>i,DumpDataAsync:()=>C,DumpFramebuffer:()=>A,DumpTools:()=>U});var N=H(11842),u=H(11532),z=H(11756),P=H(11579);let M,D=null;async function A(e,E,H,N){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",z=arguments.length>5?arguments[5]:void 0,P=arguments.length>6?arguments[6]:void 0;const M=await H.readPixels(0,0,e,E);i(e,E,new Uint8Array(M.buffer),N,u,z,!0,void 0,P)}async function C(e,E,H){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",u=arguments.length>4?arguments[4]:void 0,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],P=arguments.length>6&&void 0!==arguments[6]&&arguments[6],M=arguments.length>7?arguments[7]:void 0;return await new Promise((D=>{i(e,E,H,(e=>D(e)),N,u,z,P,M)}))}function i(e,E,A,C){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8?arguments[8]:void 0;(async function(){return D||(D=new Promise(((e,E)=>{let u,z=null;const D={EM:!0,depth:!1,nP:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,11868)).then((A=>{let{ThinEngine:C}=A;const i=P.d.Instances.length;try{u=new OffscreenCanvas(100,100),z=new C(u,!1,D)}catch(F){var U;i<P.d.Instances.length&&(null===(U=P.d.Instances.pop())||void 0===U||U.dispose()),u=document.createElement("canvas"),z=new C(u,!1,D)}P.d.Instances.pop(),P.d.OnEnginesDisposedObservable.add((e=>{z&&e!==z&&!z.A&&0===P.d.Instances.length&&V()})),z.getCaps().parallelShaderCompile=void 0;const j=new N.e(z);H.e(52).then(H.bind(H,14168)).then((H=>{let{passPixelShader:P}=H;if(!z)return void E("Engine is not defined");const D=new N.f({UE:z,name:P.name,fragmentShader:P.shader,samplerNames:["textureSampler"]});M={canvas:u,UE:z,renderer:j,wrapper:D},e(M)}))})).catch(E)}))),await D})().then((H=>{if(H.UE.setSize(e,E,!0),A instanceof Float32Array){const e=new Uint8Array(A.length);let E=A.length;for(;E--;){const H=A[E];e[E]=Math.round(255*(0,z.Clamp)(H))}A=e}const N=H.UE.createRawTexture(A,e,E,5,!1,!j,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",N),H.renderer.draw(),F?u.Tools.ToBlob(H.canvas,(e=>{const E=new FileReader;E.onload=e=>{const E=e.target.result;C&&C(E)},E.readAsArrayBuffer(e)}),i,h):u.Tools.EncodeScreenshotCanvasData(H.canvas,C,i,U,h),N.dispose()}))}function V(){var e;M?(M.wrapper.dispose(),M.renderer.dispose(),M.UE.dispose()):null===(e=D)||void 0===e||e.then((e=>{e.wrapper.dispose(),e.renderer.dispose(),e.UE.dispose()}));D=null,M=null}const U={DumpData:i,DumpDataAsync:C,DumpFramebuffer:A,Dispose:V};u.Tools.DumpData=i,u.Tools.DumpDataAsync=C,u.Tools.DumpFramebuffer=A}}]);