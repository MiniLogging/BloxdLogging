"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[20],{12915:(K,A,T)=>{T.r(A),T.d(A,{Dispose:()=>x,DumpData:()=>Z,DumpDataAsync:()=>Y,DumpFramebuffer:()=>Q,DumpTools:()=>J});var G=T(12794),B=T(12526),L=T(12716),f=T(12565);let O,C=null;async function Q(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const O=await T.readPixels(0,0,K,A);Z(K,A,new Uint8Array(O.buffer),G,B,L,!0,void 0,f)}async function Y(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",B=arguments.length>4?arguments[4]:void 0,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{Z(K,A,T,(K=>C(K)),G,B,L,f,O)}))}function Z(K,A,Q,Y){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((K,A)=>{let B,L=null;const C={cf:!0,depth:!1,df:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(T.bind(T,12832)).then((Q=>{let{ThinEngine:Y}=Q;const Z=f.b.Instances.length;try{B=new OffscreenCanvas(100,100),L=new Y(B,!1,C)}catch(P){var J;Z<f.b.Instances.length&&(null===(J=f.b.Instances.pop())||void 0===J||J.dispose()),B=document.createElement("canvas"),L=new Y(B,!1,C)}f.b.Instances.pop(),f.b.OnEnginesDisposedObservable.add((K=>{L&&K!==L&&!L.O&&0===f.b.Instances.length&&x()})),L.getCaps().parallelShaderCompile=void 0;const b=new G.e(L);T.e(52).then(T.bind(T,15178)).then((T=>{let{passPixelShader:f}=T;if(!L)return void A("Engine is not defined");const C=new G.g({bA:L,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});O={canvas:B,bA:L,renderer:b,wrapper:C},K(O)}))})).catch(A)}))),await C})().then((T=>{if(T.bA.setSize(K,A,!0),Q instanceof Float32Array){const K=new Uint8Array(Q.length);let A=Q.length;for(;A--;){const T=Q[A];K[A]=Math.round(255*(0,L.Clamp)(T))}Q=K}const G=T.bA.createRawTexture(Q,K,A,5,!1,!b,1);T.renderer.setViewport(),T.renderer.applyEffectWrapper(T.wrapper),T.wrapper.effect._bindTexture("textureSampler",G),T.renderer.draw(),P?B.Tools.ToBlob(T.canvas,(K=>{const A=new FileReader;A.onload=K=>{const A=K.target.result;Y&&Y(A)},A.readAsArrayBuffer(K)}),Z,F):B.Tools.EncodeScreenshotCanvasData(T.canvas,Y,Z,J,F),G.dispose()}))}function x(){var K;O?(O.wrapper.dispose(),O.renderer.dispose(),O.bA.dispose()):null===(K=C)||void 0===K||K.then((K=>{K.wrapper.dispose(),K.renderer.dispose(),K.bA.dispose()}));C=null,O=null}const J={DumpData:Z,DumpDataAsync:Y,DumpFramebuffer:Q,Dispose:x};B.Tools.DumpData=Z,B.Tools.DumpDataAsync=Y,B.Tools.DumpFramebuffer=Q}}]);