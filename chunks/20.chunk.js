"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[20],{12584:(N,U,V)=>{V.r(U),V.d(U,{Dispose:()=>k,DumpData:()=>p,DumpDataAsync:()=>E,DumpFramebuffer:()=>S,DumpTools:()=>B});var A=V(12491),t=V(12179),n=V(12395),q=V(12223);let i,z=null;async function S(N,U,V,A){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,q=arguments.length>6?arguments[6]:void 0;const i=await V.readPixels(0,0,N,U);p(N,U,new Uint8Array(i.buffer),A,t,n,!0,void 0,q)}async function E(N,U,V){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0;return await new Promise((z=>{p(N,U,V,(N=>z(N)),A,t,n,q,i)}))}function p(N,U,S,E){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7&&void 0!==arguments[7]&&arguments[7],J=arguments.length>8?arguments[8]:void 0;(async function(){return z||(z=new Promise(((N,U)=>{let t,n=null;const z={zi:!0,depth:!1,ti:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(V.bind(V,12514)).then((S=>{let{ThinEngine:E}=S;const p=q.e.Instances.length;try{t=new OffscreenCanvas(100,100),n=new E(t,!1,z)}catch(x){var B;p<q.e.Instances.length&&(null===(B=q.e.Instances.pop())||void 0===B||B.dispose()),t=document.createElement("canvas"),n=new E(t,!1,z)}q.e.Instances.pop(),q.e.OnEnginesDisposedObservable.add((N=>{n&&N!==n&&!n.S&&0===q.e.Instances.length&&k()})),n.getCaps().parallelShaderCompile=void 0;const C=new A.d(n);V.e(52).then(V.bind(V,14841)).then((V=>{let{passPixelShader:q}=V;if(!n)return void U("Engine is not defined");const z=new A.f({BU:n,name:q.name,fragmentShader:q.shader,samplerNames:["textureSampler"]});i={canvas:t,BU:n,renderer:C,wrapper:z},N(i)}))})).catch(U)}))),await z})().then((V=>{if(V.BU.setSize(N,U,!0),S instanceof Float32Array){const N=new Uint8Array(S.length);let U=S.length;for(;U--;){const V=S[U];N[U]=Math.round(255*(0,n.Clamp)(V))}S=N}const A=V.BU.createRawTexture(S,N,U,5,!1,!C,1);V.renderer.setViewport(),V.renderer.applyEffectWrapper(V.wrapper),V.wrapper.effect._bindTexture("textureSampler",A),V.renderer.draw(),x?t.Tools.ToBlob(V.canvas,(N=>{const U=new FileReader;U.onload=N=>{const U=N.target.result;E&&E(U)},U.readAsArrayBuffer(N)}),p,J):t.Tools.EncodeScreenshotCanvasData(V.canvas,E,p,B,J),A.dispose()}))}function k(){var N;i?(i.wrapper.dispose(),i.renderer.dispose(),i.BU.dispose()):null===(N=z)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.BU.dispose()}));z=null,i=null}const B={DumpData:p,DumpDataAsync:E,DumpFramebuffer:S,Dispose:k};t.Tools.DumpData=p,t.Tools.DumpDataAsync=E,t.Tools.DumpFramebuffer=S}}]);