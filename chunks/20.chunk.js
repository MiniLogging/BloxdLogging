"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[20],{11532:(H,O,S)=>{S.r(O),S.d(O,{Dispose:()=>a,DumpData:()=>h,DumpDataAsync:()=>o,DumpFramebuffer:()=>w,DumpTools:()=>j});var t=S(11416),q=S(11131),p=S(11317),G=S(11180);let U,V=null;async function w(H,O,S,t){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,G=arguments.length>6?arguments[6]:void 0;const U=await S.readPixels(0,0,H,O);h(H,O,new Uint8Array(U.buffer),t,q,p,!0,void 0,G)}async function o(H,O,S){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7?arguments[7]:void 0;return await new Promise((V=>{h(H,O,S,(H=>V(H)),t,q,p,G,U)}))}function h(H,O,w,o){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,e=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return V||(V=new Promise(((H,O)=>{let q,p=null;const V={SU:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(S.bind(S,11442)).then((w=>{let{ThinEngine:o}=w;const h=G.c.Instances.length;try{q=new OffscreenCanvas(100,100),p=new o(q,!1,V)}catch(X){var j;h<G.c.Instances.length&&(null===(j=G.c.Instances.pop())||void 0===j||j.dispose()),q=document.createElement("canvas"),p=new o(q,!1,V)}G.c.Instances.pop(),G.c.OnEnginesDisposedObservable.add((H=>{p&&H!==p&&!p.G&&0===G.c.Instances.length&&a()})),p.getCaps().parallelShaderCompile=void 0;const e=new t.e(p);S.e(52).then(S.bind(S,13786)).then((S=>{let{passPixelShader:G}=S;if(!p)return void O("Engine is not defined");const V=new t.h({jO:p,name:G.name,fragmentShader:G.shader,samplerNames:["textureSampler"]});U={canvas:q,jO:p,renderer:e,wrapper:V},H(U)}))})).catch(O)}))),await V})().then((S=>{if(S.jO.setSize(H,O,!0),w instanceof Float32Array){const H=new Uint8Array(w.length);let O=w.length;for(;O--;){const S=w[O];H[O]=Math.round(255*(0,p.Clamp)(S))}w=H}const t=S.jO.createRawTexture(w,H,O,5,!1,!e,1);S.renderer.setViewport(),S.renderer.applyEffectWrapper(S.wrapper),S.wrapper.effect._bindTexture("textureSampler",t),S.renderer.draw(),X?q.Tools.ToBlob(S.canvas,(H=>{const O=new FileReader;O.onload=H=>{const O=H.target.result;o&&o(O)},O.readAsArrayBuffer(H)}),h,E):q.Tools.EncodeScreenshotCanvasData(S.canvas,o,h,j,E),t.dispose()}))}function a(){var H;U?(U.wrapper.dispose(),U.renderer.dispose(),U.jO.dispose()):null===(H=V)||void 0===H||H.then((H=>{H.wrapper.dispose(),H.renderer.dispose(),H.jO.dispose()}));V=null,U=null}const j={DumpData:h,DumpDataAsync:o,DumpFramebuffer:w,Dispose:a};q.Tools.DumpData=h,q.Tools.DumpDataAsync=o,q.Tools.DumpFramebuffer=w}}]);