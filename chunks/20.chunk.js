"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[20],{12689:(u,R,I)=>{I.r(R),I.d(R,{Dispose:()=>b,DumpData:()=>S,DumpDataAsync:()=>G,DumpFramebuffer:()=>t,DumpTools:()=>r});var B=I(12581),U=I(12294),K=I(12491),C=I(12346);let D,s=null;async function t(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,C=arguments.length>6?arguments[6]:void 0;const D=await I.readPixels(0,0,u,R);S(u,R,new Uint8Array(D.buffer),B,U,K,!0,void 0,C)}async function G(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0;return await new Promise((s=>{S(u,R,I,(u=>s(u)),B,U,K,C,D)}))}function S(u,R,t,G){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,P=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],E=arguments.length>8?arguments[8]:void 0;(async function(){return s||(s=new Promise(((u,R)=>{let U,K=null;const s={KD:!0,depth:!1,RD:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(I.bind(I,12599)).then((t=>{let{ThinEngine:G}=t;const S=C.e.Instances.length;try{U=new OffscreenCanvas(100,100),K=new G(U,!1,s)}catch(X){var r;S<C.e.Instances.length&&(null===(r=C.e.Instances.pop())||void 0===r||r.dispose()),U=document.createElement("canvas"),K=new G(U,!1,s)}C.e.Instances.pop(),C.e.OnEnginesDisposedObservable.add((u=>{K&&u!==K&&!K.C&&0===C.e.Instances.length&&b()})),K.getCaps().parallelShaderCompile=void 0;const P=new B.b(K);I.e(52).then(I.bind(I,14949)).then((I=>{let{passPixelShader:C}=I;if(!K)return void R("Engine is not defined");const s=new B.c({rR:K,name:C.name,fragmentShader:C.shader,samplerNames:["textureSampler"]});D={canvas:U,rR:K,renderer:P,wrapper:s},u(D)}))})).catch(R)}))),await s})().then((I=>{if(I.rR.setSize(u,R,!0),t instanceof Float32Array){const u=new Uint8Array(t.length);let R=t.length;for(;R--;){const I=t[R];u[R]=Math.round(255*(0,K.Clamp)(I))}t=u}const B=I.rR.createRawTexture(t,u,R,5,!1,!P,1);I.renderer.setViewport(),I.renderer.applyEffectWrapper(I.wrapper),I.wrapper.effect._bindTexture("textureSampler",B),I.renderer.draw(),X?U.Tools.ToBlob(I.canvas,(u=>{const R=new FileReader;R.onload=u=>{const R=u.target.result;G&&G(R)},R.readAsArrayBuffer(u)}),S,E):U.Tools.EncodeScreenshotCanvasData(I.canvas,G,S,r,E),B.dispose()}))}function b(){var u;D?(D.wrapper.dispose(),D.renderer.dispose(),D.rR.dispose()):null===(u=s)||void 0===u||u.then((u=>{u.wrapper.dispose(),u.renderer.dispose(),u.rR.dispose()}));s=null,D=null}const r={DumpData:S,DumpDataAsync:G,DumpFramebuffer:t,Dispose:b};U.Tools.DumpData=S,U.Tools.DumpDataAsync=G,U.Tools.DumpFramebuffer=t}}]);