"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[20],{11971:(Z,h,V)=>{V.r(h),V.d(h,{Dispose:()=>D,DumpData:()=>N,DumpDataAsync:()=>x,DumpFramebuffer:()=>n,DumpTools:()=>k});var v=V(11850),A=V(11564),H=V(11748),K=V(11599);let d,a=null;async function n(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",H=arguments.length>5?arguments[5]:void 0,K=arguments.length>6?arguments[6]:void 0;const d=await V.readPixels(0,0,Z,h);N(Z,h,new Uint8Array(d.buffer),v,A,H,!0,void 0,K)}async function x(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",A=arguments.length>4?arguments[4]:void 0,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7?arguments[7]:void 0;return await new Promise((a=>{N(Z,h,V,(Z=>a(Z)),v,A,H,K,d)}))}function N(Z,h,n,x){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",k=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],b=arguments.length>8?arguments[8]:void 0;(async function(){return a||(a=new Promise(((Z,h)=>{let A,H=null;const a={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(V.bind(V,11872)).then((n=>{let{ThinEngine:x}=n;const N=K.b.Instances.length;try{A=new OffscreenCanvas(100,100),H=new x(A,!1,a)}catch(F){var k;N<K.b.Instances.length&&(null===(k=K.b.Instances.pop())||void 0===k||k.dispose()),A=document.createElement("canvas"),H=new x(A,!1,a)}K.b.Instances.pop(),K.b.OnEnginesDisposedObservable.add((Z=>{H&&Z!==H&&!H.K&&0===K.b.Instances.length&&D()})),H.getCaps().parallelShaderCompile=void 0;const u=new v.e(H);V.e(52).then(V.bind(V,14279)).then((V=>{let{passPixelShader:K}=V;if(!H)return void h("Engine is not defined");const a=new v.g({Ph:H,name:K.name,fragmentShader:K.shader,samplerNames:["textureSampler"]});d={canvas:A,Ph:H,renderer:u,wrapper:a},Z(d)}))})).catch(h)}))),await a})().then((V=>{if(V.Ph.setSize(Z,h,!0),n instanceof Float32Array){const Z=new Uint8Array(n.length);let h=n.length;for(;h--;){const V=n[h];Z[h]=Math.round(255*(0,H.Clamp)(V))}n=Z}const v=V.Ph.createRawTexture(n,Z,h,5,!1,!u,1);V.renderer.setViewport(),V.renderer.applyEffectWrapper(V.wrapper),V.wrapper.effect._bindTexture("textureSampler",v),V.renderer.draw(),F?A.Tools.ToBlob(V.canvas,(Z=>{const h=new FileReader;h.onload=Z=>{const h=Z.target.result;x&&x(h)},h.readAsArrayBuffer(Z)}),N,b):A.Tools.EncodeScreenshotCanvasData(V.canvas,x,N,k,b),v.dispose()}))}function D(){var Z;d?(d.wrapper.dispose(),d.renderer.dispose(),d.Ph.dispose()):null===(Z=a)||void 0===Z||Z.then((Z=>{Z.wrapper.dispose(),Z.renderer.dispose(),Z.Ph.dispose()}));a=null,d=null}const k={DumpData:N,DumpDataAsync:x,DumpFramebuffer:n,Dispose:D};A.Tools.DumpData=N,A.Tools.DumpDataAsync=x,A.Tools.DumpFramebuffer=n}}]);