"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[20],{12336:(L,r,p)=>{p.r(r),p.d(r,{Dispose:()=>x,DumpData:()=>E,DumpDataAsync:()=>t,DumpFramebuffer:()=>C,DumpTools:()=>w});var J=p(12235),i=p(11957),n=p(12154),j=p(12009);let z,G=null;async function C(L,r,p,J){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,j=arguments.length>6?arguments[6]:void 0;const z=await p.readPixels(0,0,L,r);E(L,r,new Uint8Array(z.buffer),J,i,n,!0,void 0,j)}async function t(L,r,p){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",i=arguments.length>4?arguments[4]:void 0,n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7?arguments[7]:void 0;return await new Promise((G=>{E(L,r,p,(L=>G(L)),J,i,n,j,z)}))}function E(L,r,C,t){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],b=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return G||(G=new Promise(((L,r)=>{let i,n=null;const G={oi:!0,depth:!1,ti:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(p.bind(p,12257)).then((C=>{let{ThinEngine:t}=C;const E=j.c.Instances.length;try{i=new OffscreenCanvas(100,100),n=new t(i,!1,G)}catch(b){var w;E<j.c.Instances.length&&(null===(w=j.c.Instances.pop())||void 0===w||w.dispose()),i=document.createElement("canvas"),n=new t(i,!1,G)}j.c.Instances.pop(),j.c.OnEnginesDisposedObservable.add((L=>{n&&L!==n&&!n.P&&0===j.c.Instances.length&&x()})),n.getCaps().parallelShaderCompile=void 0;const g=new J.e(n);p.e(52).then(p.bind(p,14636)).then((p=>{let{passPixelShader:j}=p;if(!n)return void r("Engine is not defined");const G=new J.g({gr:n,name:j.name,fragmentShader:j.shader,samplerNames:["textureSampler"]});z={canvas:i,gr:n,renderer:g,wrapper:G},L(z)}))})).catch(r)}))),await G})().then((p=>{if(p.gr.setSize(L,r,!0),C instanceof Float32Array){const L=new Uint8Array(C.length);let r=C.length;for(;r--;){const p=C[r];L[r]=Math.round(255*(0,n.Clamp)(p))}C=L}const J=p.gr.createRawTexture(C,L,r,5,!1,!g,1);p.renderer.setViewport(),p.renderer.applyEffectWrapper(p.wrapper),p.wrapper.effect._bindTexture("textureSampler",J),p.renderer.draw(),b?i.Tools.ToBlob(p.canvas,(L=>{const r=new FileReader;r.onload=L=>{const r=L.target.result;t&&t(r)},r.readAsArrayBuffer(L)}),E,c):i.Tools.EncodeScreenshotCanvasData(p.canvas,t,E,w,c),J.dispose()}))}function x(){var L;z?(z.wrapper.dispose(),z.renderer.dispose(),z.gr.dispose()):null===(L=G)||void 0===L||L.then((L=>{L.wrapper.dispose(),L.renderer.dispose(),L.gr.dispose()}));G=null,z=null}const w={DumpData:E,DumpDataAsync:t,DumpFramebuffer:C,Dispose:x};i.Tools.DumpData=E,i.Tools.DumpDataAsync=t,i.Tools.DumpFramebuffer=C}}]);