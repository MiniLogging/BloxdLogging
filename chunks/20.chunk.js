"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[20],{13144:(z,u,U)=>{U.r(u),U.d(u,{Dispose:()=>mz,DumpData:()=>d,DumpDataAsync:()=>S,DumpFramebuffer:()=>R,DumpTools:()=>Z});var J=U(13023),v=U(12748),f=U(12935),g=U(12797);let w,P=null;async function R(z,u,U,J){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const w=await U.readPixels(0,0,z,u);d(z,u,new Uint8Array(w.buffer),J,v,f,!0,void 0,g)}async function S(z,u,U){let J=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",v=arguments.length>4?arguments[4]:void 0,f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7?arguments[7]:void 0;return await new Promise((P=>{d(z,u,U,(z=>P(z)),J,v,f,g,w)}))}function d(z,u,R,S){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],E=arguments.length>7&&void 0!==arguments[7]&&arguments[7],C=arguments.length>8?arguments[8]:void 0;(async function(){return P||(P=new Promise(((z,u)=>{let v,f=null;const P={Yf:!0,depth:!1,tf:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(U.bind(U,13054)).then((R=>{let{ThinEngine:S}=R;const d=g.e.Instances.length;try{v=new OffscreenCanvas(100,100),f=new S(v,!1,P)}catch(E){var Z;d<g.e.Instances.length&&(null===(Z=g.e.Instances.pop())||void 0===Z||Z.dispose()),v=document.createElement("canvas"),f=new S(v,!1,P)}g.e.Instances.pop(),g.e.OnEnginesDisposedObservable.add((z=>{f&&z!==f&&!f.S&&0===g.e.Instances.length&&mz()})),f.getCaps().parallelShaderCompile=void 0;const A=new J.b(f);U.e(52).then(U.bind(U,15034)).then((U=>{let{passPixelShader:g}=U;if(!f)return void u("Engine is not defined");const P=new J.e({Au:f,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});w={canvas:v,Au:f,renderer:A,wrapper:P},z(w)}))})).catch(u)}))),await P})().then((U=>{if(U.Au.setSize(z,u,!0),R instanceof Float32Array){const z=new Uint8Array(R.length);let u=R.length;for(;u--;){const U=R[u];z[u]=Math.round(255*(0,f.Clamp)(U))}R=z}const J=U.Au.createRawTexture(R,z,u,5,!1,!A,1);U.renderer.setViewport(),U.renderer.applyEffectWrapper(U.wrapper),U.wrapper.effect._bindTexture("textureSampler",J),U.renderer.draw(),E?v.Tools.ToBlob(U.canvas,(z=>{const u=new FileReader;u.onload=z=>{const u=z.target.result;S&&S(u)},u.readAsArrayBuffer(z)}),d,C):v.Tools.EncodeScreenshotCanvasData(U.canvas,S,d,Z,C),J.dispose()}))}function mz(){var z;w?(w.wrapper.dispose(),w.renderer.dispose(),w.Au.dispose()):null===(z=P)||void 0===z||z.then((z=>{z.wrapper.dispose(),z.renderer.dispose(),z.Au.dispose()}));P=null,w=null}const Z={DumpData:d,DumpDataAsync:S,DumpFramebuffer:R,Dispose:mz};v.Tools.DumpData=d,v.Tools.DumpDataAsync=S,v.Tools.DumpFramebuffer=R}}]);