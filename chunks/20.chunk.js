"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[20],{13097:(Y,c,h)=>{h.r(c),h.d(c,{Dispose:()=>k,DumpData:()=>q,DumpDataAsync:()=>W,DumpFramebuffer:()=>w,DumpTools:()=>M});var C=h(12986),E=h(12687),N=h(12883),Q=h(12722);let b,H=null;async function w(Y,c,h,C){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6?arguments[6]:void 0;const b=await h.readPixels(0,0,Y,c);q(Y,c,new Uint8Array(b.buffer),C,E,N,!0,void 0,Q)}async function W(Y,c,h){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],b=arguments.length>7?arguments[7]:void 0;return await new Promise((H=>{q(Y,c,h,(Y=>H(Y)),C,E,N,Q,b)}))}function q(Y,c,w,W){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7&&void 0!==arguments[7]&&arguments[7],y=arguments.length>8?arguments[8]:void 0;(async function(){return H||(H=new Promise(((Y,c)=>{let E,N=null;const H={Tc:!0,depth:!1,Pc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(h.bind(h,13010)).then((w=>{let{ThinEngine:W}=w;const q=Q.d.Instances.length;try{E=new OffscreenCanvas(100,100),N=new W(E,!1,H)}catch(P){var M;q<Q.d.Instances.length&&(null===(M=Q.d.Instances.pop())||void 0===M||M.dispose()),E=document.createElement("canvas"),N=new W(E,!1,H)}Q.d.Instances.pop(),Q.d.OnEnginesDisposedObservable.add((Y=>{N&&Y!==N&&!N.q&&0===Q.d.Instances.length&&k()})),N.getCaps().parallelShaderCompile=void 0;const p=new C.b(N);h.e(52).then(h.bind(h,15450)).then((h=>{let{passPixelShader:Q}=h;if(!N)return void c("Engine is not defined");const H=new C.f({Qh:N,name:Q.name,fragmentShader:Q.shader,samplerNames:["textureSampler"]});b={canvas:E,Qh:N,renderer:p,wrapper:H},Y(b)}))})).catch(c)}))),await H})().then((h=>{if(h.Qh.setSize(Y,c,!0),w instanceof Float32Array){const Y=new Uint8Array(w.length);let c=w.length;for(;c--;){const h=w[c];Y[c]=Math.round(255*(0,N.Clamp)(h))}w=Y}const C=h.Qh.createRawTexture(w,Y,c,5,!1,!p,1);h.renderer.setViewport(),h.renderer.applyEffectWrapper(h.wrapper),h.wrapper.effect._bindTexture("textureSampler",C),h.renderer.draw(),P?E.Tools.ToBlob(h.canvas,(Y=>{const c=new FileReader;c.onload=Y=>{const c=Y.target.result;W&&W(c)},c.readAsArrayBuffer(Y)}),q,y):E.Tools.EncodeScreenshotCanvasData(h.canvas,W,q,M,y),C.dispose()}))}function k(){var Y;b?(b.wrapper.dispose(),b.renderer.dispose(),b.Qh.dispose()):null===(Y=H)||void 0===Y||Y.then((Y=>{Y.wrapper.dispose(),Y.renderer.dispose(),Y.Qh.dispose()}));H=null,b=null}const M={DumpData:q,DumpDataAsync:W,DumpFramebuffer:w,Dispose:k};E.Tools.DumpData=q,E.Tools.DumpDataAsync=W,E.Tools.DumpFramebuffer=w}}]);