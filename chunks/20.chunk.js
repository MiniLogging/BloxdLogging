"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[20],{12803:(L,U,x)=>{x.r(U),x.d(U,{Dispose:()=>b,DumpData:()=>h,DumpDataAsync:()=>r,DumpFramebuffer:()=>A,DumpTools:()=>E});var mL=x(12695),p=x(12382),G=x(12610),F=x(12440);let a,o=null;async function A(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,F=arguments.length>6?arguments[6]:void 0;const a=await x.readPixels(0,0,L,U);h(L,U,new Uint8Array(a.buffer),mL,p,G,!0,void 0,F)}async function r(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",p=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7?arguments[7]:void 0;return await new Promise((o=>{h(L,U,x,(L=>o(L)),mL,p,G,F,a)}))}function h(L,U,A,r){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],S=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return o||(o=new Promise(((L,U)=>{let p,G=null;const o={Ea:!0,depth:!1,Aa:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(x.bind(x,12723)).then((A=>{let{ThinEngine:r}=A;const h=F.c.Instances.length;try{p=new OffscreenCanvas(100,100),G=new r(p,!1,o)}catch(S){var E;h<F.c.Instances.length&&(null===(E=F.c.Instances.pop())||void 0===E||E.dispose()),p=document.createElement("canvas"),G=new r(p,!1,o)}F.c.Instances.pop(),F.c.OnEnginesDisposedObservable.add((L=>{G&&L!==G&&!G.A&&0===F.c.Instances.length&&b()})),G.getCaps().parallelShaderCompile=void 0;const Y=new mL.b(G);x.e(52).then(x.bind(x,15108)).then((x=>{let{passPixelShader:F}=x;if(!G)return void U("Engine is not defined");const o=new mL.e({EU:G,name:F.name,fragmentShader:F.shader,samplerNames:["textureSampler"]});a={canvas:p,EU:G,renderer:Y,wrapper:o},L(a)}))})).catch(U)}))),await o})().then((x=>{if(x.EU.setSize(L,U,!0),A instanceof Float32Array){const L=new Uint8Array(A.length);let U=A.length;for(;U--;){const x=A[U];L[U]=Math.round(255*(0,G.Clamp)(x))}A=L}const mL=x.EU.createRawTexture(A,L,U,5,!1,!Y,1);x.renderer.setViewport(),x.renderer.applyEffectWrapper(x.wrapper),x.wrapper.effect._bindTexture("textureSampler",mL),x.renderer.draw(),S?p.Tools.ToBlob(x.canvas,(L=>{const U=new FileReader;U.onload=L=>{const U=L.target.result;r&&r(U)},U.readAsArrayBuffer(L)}),h,V):p.Tools.EncodeScreenshotCanvasData(x.canvas,r,h,E,V),mL.dispose()}))}function b(){var L;a?(a.wrapper.dispose(),a.renderer.dispose(),a.EU.dispose()):null===(L=o)||void 0===L||L.then((L=>{L.wrapper.dispose(),L.renderer.dispose(),L.EU.dispose()}));o=null,a=null}const E={DumpData:h,DumpDataAsync:r,DumpFramebuffer:A,Dispose:b};p.Tools.DumpData=h,p.Tools.DumpDataAsync=r,p.Tools.DumpFramebuffer=A}}]);