"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[20],{12606:(N,p,T)=>{T.r(p),T.d(p,{Dispose:()=>b,DumpData:()=>M,DumpDataAsync:()=>H,DumpFramebuffer:()=>e,DumpTools:()=>l});var A=T(12480),a=T(12190),C=T(12390),U=T(12231);let X,y=null;async function e(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,U=arguments.length>6?arguments[6]:void 0;const X=await T.readPixels(0,0,N,p);M(N,p,new Uint8Array(X.buffer),A,a,C,!0,void 0,U)}async function H(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",a=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7?arguments[7]:void 0;return await new Promise((y=>{M(N,p,T,(N=>y(N)),A,a,C,U,X)}))}function M(N,p,e,H){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return y||(y=new Promise(((N,p)=>{let a,C=null;const y={AX:!0,depth:!1,sU:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(T.bind(T,12511)).then((e=>{let{ThinEngine:H}=e;const M=U.b.Instances.length;try{a=new OffscreenCanvas(100,100),C=new H(a,!1,y)}catch(x){var l;M<U.b.Instances.length&&(null===(l=U.b.Instances.pop())||void 0===l||l.dispose()),a=document.createElement("canvas"),C=new H(a,!1,y)}U.b.Instances.pop(),U.b.OnEnginesDisposedObservable.add((N=>{C&&N!==C&&!C.X&&0===U.b.Instances.length&&b()})),C.getCaps().parallelShaderCompile=void 0;const k=new A.c(C);T.e(52).then(T.bind(T,14826)).then((T=>{let{passPixelShader:U}=T;if(!C)return void p("Engine is not defined");const y=new A.e({kp:C,name:U.name,fragmentShader:U.shader,samplerNames:["textureSampler"]});X={canvas:a,kp:C,renderer:k,wrapper:y},N(X)}))})).catch(p)}))),await y})().then((T=>{if(T.kp.setSize(N,p,!0),e instanceof Float32Array){const N=new Uint8Array(e.length);let p=e.length;for(;p--;){const T=e[p];N[p]=Math.round(255*(0,C.Clamp)(T))}e=N}const A=T.kp.createRawTexture(e,N,p,5,!1,!k,1);T.renderer.setViewport(),T.renderer.applyEffectWrapper(T.wrapper),T.wrapper.effect._bindTexture("textureSampler",A),T.renderer.draw(),x?a.Tools.ToBlob(T.canvas,(N=>{const p=new FileReader;p.onload=N=>{const p=N.target.result;H&&H(p)},p.readAsArrayBuffer(N)}),M,I):a.Tools.EncodeScreenshotCanvasData(T.canvas,H,M,l,I),A.dispose()}))}function b(){var N;X?(X.wrapper.dispose(),X.renderer.dispose(),X.kp.dispose()):null===(N=y)||void 0===N||N.then((N=>{N.wrapper.dispose(),N.renderer.dispose(),N.kp.dispose()}));y=null,X=null}const l={DumpData:M,DumpDataAsync:H,DumpFramebuffer:e,Dispose:b};a.Tools.DumpData=M,a.Tools.DumpDataAsync=H,a.Tools.DumpFramebuffer=e}}]);