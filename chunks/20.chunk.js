"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[20],{13202:(I,x,L)=>{L.r(x),L.d(x,{Dispose:()=>e,DumpData:()=>Q,DumpDataAsync:()=>W,DumpFramebuffer:()=>l,DumpTools:()=>g});var F=L(13085),X=L(12791),G=L(13001),Y=L(12840);let p,B=null;async function l(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",G=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const p=await L.readPixels(0,0,I,x);Q(I,x,new Uint8Array(p.buffer),F,X,G,!0,void 0,Y)}async function W(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{Q(I,x,L,(I=>B(I)),F,X,G,Y,p)}))}function Q(I,x,l,W){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((I,x)=>{let X,G=null;const B={ip:!0,depth:!1,op:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(L.bind(L,13116)).then((l=>{let{ThinEngine:W}=l;const Q=Y.e.Instances.length;try{X=new OffscreenCanvas(100,100),G=new W(X,!1,B)}catch(z){var g;Q<Y.e.Instances.length&&(null===(g=Y.e.Instances.pop())||void 0===g||g.dispose()),X=document.createElement("canvas"),G=new W(X,!1,B)}Y.e.Instances.pop(),Y.e.OnEnginesDisposedObservable.add((I=>{G&&I!==G&&!G.p&&0===Y.e.Instances.length&&e()})),G.getCaps().parallelShaderCompile=void 0;const v=new F.e(G);L.e(52).then(L.bind(L,15376)).then((L=>{let{passPixelShader:Y}=L;if(!G)return void x("Engine is not defined");const B=new F.i({Hx:G,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});p={canvas:X,Hx:G,renderer:v,wrapper:B},I(p)}))})).catch(x)}))),await B})().then((L=>{if(L.Hx.setSize(I,x,!0),l instanceof Float32Array){const I=new Uint8Array(l.length);let x=l.length;for(;x--;){const L=l[x];I[x]=Math.round(255*(0,G.Clamp)(L))}l=I}const F=L.Hx.createRawTexture(l,I,x,5,!1,!v,1);L.renderer.setViewport(),L.renderer.applyEffectWrapper(L.wrapper),L.wrapper.effect._bindTexture("textureSampler",F),L.renderer.draw(),z?X.Tools.ToBlob(L.canvas,(I=>{const x=new FileReader;x.onload=I=>{const x=I.target.result;W&&W(x)},x.readAsArrayBuffer(I)}),Q,H):X.Tools.EncodeScreenshotCanvasData(L.canvas,W,Q,g,H),F.dispose()}))}function e(){var I;p?(p.wrapper.dispose(),p.renderer.dispose(),p.Hx.dispose()):null===(I=B)||void 0===I||I.then((I=>{I.wrapper.dispose(),I.renderer.dispose(),I.Hx.dispose()}));B=null,p=null}const g={DumpData:Q,DumpDataAsync:W,DumpFramebuffer:l,Dispose:e};X.Tools.DumpData=Q,X.Tools.DumpDataAsync=W,X.Tools.DumpFramebuffer=l}}]);