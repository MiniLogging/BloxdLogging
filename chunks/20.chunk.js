"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[20],{12579:(M,Z,P)=>{P.r(Z),P.d(Z,{Dispose:()=>H,DumpData:()=>O,DumpDataAsync:()=>d,DumpFramebuffer:()=>K,DumpTools:()=>j});var x=P(12464),c=P(12175),w=P(12387),v=P(12225);let G,mM=null;async function K(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,v=arguments.length>6?arguments[6]:void 0;const G=await P.readPixels(0,0,M,Z);O(M,Z,new Uint8Array(G.buffer),x,c,w,!0,void 0,v)}async function d(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0;return await new Promise((mM=>{O(M,Z,P,(M=>mM(M)),x,c,w,v,G)}))}function O(M,Z,K,d){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",j=arguments.length>5?arguments[5]:void 0,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return mM||(mM=new Promise(((M,Z)=>{let c,w=null;const mM={o:!0,depth:!1,Kc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(P.bind(P,12490)).then((K=>{let{ThinEngine:d}=K;const O=v.b.Instances.length;try{c=new OffscreenCanvas(100,100),w=new d(c,!1,mM)}catch(U){var j;O<v.b.Instances.length&&(null===(j=v.b.Instances.pop())||void 0===j||j.dispose()),c=document.createElement("canvas"),w=new d(c,!1,mM)}v.b.Instances.pop(),v.b.OnEnginesDisposedObservable.add((M=>{w&&M!==w&&!w.K&&0===v.b.Instances.length&&H()})),w.getCaps().parallelShaderCompile=void 0;const B=new x.d(w);P.e(52).then(P.bind(P,14881)).then((P=>{let{passPixelShader:v}=P;if(!w)return void Z("Engine is not defined");const mM=new x.f({jZ:w,name:v.name,fragmentShader:v.shader,samplerNames:["textureSampler"]});G={canvas:c,jZ:w,renderer:B,wrapper:mM},M(G)}))})).catch(Z)}))),await mM})().then((P=>{if(P.jZ.setSize(M,Z,!0),K instanceof Float32Array){const M=new Uint8Array(K.length);let Z=K.length;for(;Z--;){const P=K[Z];M[Z]=Math.round(255*(0,w.Clamp)(P))}K=M}const x=P.jZ.createRawTexture(K,M,Z,5,!1,!B,1);P.renderer.setViewport(),P.renderer.applyEffectWrapper(P.wrapper),P.wrapper.effect._bindTexture("textureSampler",x),P.renderer.draw(),U?c.Tools.ToBlob(P.canvas,(M=>{const Z=new FileReader;Z.onload=M=>{const Z=M.target.result;d&&d(Z)},Z.readAsArrayBuffer(M)}),O,n):c.Tools.EncodeScreenshotCanvasData(P.canvas,d,O,j,n),x.dispose()}))}function H(){var M;G?(G.wrapper.dispose(),G.renderer.dispose(),G.jZ.dispose()):null===(M=mM)||void 0===M||M.then((M=>{M.wrapper.dispose(),M.renderer.dispose(),M.jZ.dispose()}));mM=null,G=null}const j={DumpData:O,DumpDataAsync:d,DumpFramebuffer:K,Dispose:H};c.Tools.DumpData=O,c.Tools.DumpDataAsync=d,c.Tools.DumpFramebuffer=K}}]);