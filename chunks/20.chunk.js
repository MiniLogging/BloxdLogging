"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11362:(h,V,i)=>{i.r(V),i.d(V,{Dispose:()=>s,DumpData:()=>v,DumpDataAsync:()=>I,DumpFramebuffer:()=>J,DumpTools:()=>t});var S=i(11257),l=i(10952),Y=i(11162),g=i(10988);let q,B=null;async function J(h,V,i,S){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Y=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const q=await i.readPixels(0,0,h,V);v(h,V,new Uint8Array(q.buffer),S,l,Y,!0,void 0,g)}async function I(h,V,i){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",l=arguments.length>4?arguments[4]:void 0,Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{v(h,V,i,(h=>B(h)),S,l,Y,g,q)}))}function v(h,V,J,I){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7&&void 0!==arguments[7]&&arguments[7],n=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((h,V)=>{let l,Y=null;const B={Xg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(i.bind(i,11285)).then((J=>{let{ThinEngine:I}=J;const v=g.d.Instances.length;try{l=new OffscreenCanvas(100,100),Y=new I(l,!1,B)}catch(e){var t;v<g.d.Instances.length&&(null===(t=g.d.Instances.pop())||void 0===t||t.dispose()),l=document.createElement("canvas"),Y=new I(l,!1,B)}g.d.Instances.pop(),g.d.OnEnginesDisposedObservable.add((h=>{Y&&h!==Y&&!Y.B&&0===g.d.Instances.length&&s()})),Y.getCaps().parallelShaderCompile=void 0;const T=new S.b(Y);i.e(52).then(i.bind(i,13576)).then((i=>{let{passPixelShader:g}=i;if(!Y)return void V("Engine is not defined");const B=new S.e({eV:Y,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});q={canvas:l,eV:Y,renderer:T,wrapper:B},h(q)}))})).catch(V)}))),await B})().then((i=>{if(i.eV.setSize(h,V,!0),J instanceof Float32Array){const h=new Uint8Array(J.length);let V=J.length;for(;V--;){const i=J[V];h[V]=Math.round(255*(0,Y.Clamp)(i))}J=h}const S=i.eV.createRawTexture(J,h,V,5,!1,!T,1);i.renderer.setViewport(),i.renderer.applyEffectWrapper(i.wrapper),i.wrapper.effect._bindTexture("textureSampler",S),i.renderer.draw(),e?l.Tools.ToBlob(i.canvas,(h=>{const V=new FileReader;V.onload=h=>{const V=h.target.result;I&&I(V)},V.readAsArrayBuffer(h)}),v,n):l.Tools.EncodeScreenshotCanvasData(i.canvas,I,v,t,n),S.dispose()}))}function s(){var h;q?(q.wrapper.dispose(),q.renderer.dispose(),q.eV.dispose()):null===(h=B)||void 0===h||h.then((h=>{h.wrapper.dispose(),h.renderer.dispose(),h.eV.dispose()}));B=null,q=null}const t={DumpData:v,DumpDataAsync:I,DumpFramebuffer:J,Dispose:s};l.Tools.DumpData=v,l.Tools.DumpDataAsync=I,l.Tools.DumpFramebuffer=J}}]);