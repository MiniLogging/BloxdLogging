"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11420:(o,H,n)=>{n.r(H),n.d(H,{Dispose:()=>A,DumpData:()=>c,DumpDataAsync:()=>G,DumpFramebuffer:()=>S,DumpTools:()=>l});var E=n(11297),k=n(11024),g=n(11205),O=n(11060);let Y,y=null;async function S(o,H,n,E){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,O=arguments.length>6?arguments[6]:void 0;const Y=await n.readPixels(0,0,o,H);c(o,H,new Uint8Array(Y.buffer),E,k,g,!0,void 0,O)}async function G(o,H,n){let E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",k=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Y=arguments.length>7?arguments[7]:void 0;return await new Promise((y=>{c(o,H,n,(o=>y(o)),E,k,g,O,Y)}))}function c(o,H,S,G){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,x=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return y||(y=new Promise(((o,H)=>{let k,g=null;const y={Ng:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(n.bind(n,11330)).then((S=>{let{ThinEngine:G}=S;const c=O.e.Instances.length;try{k=new OffscreenCanvas(100,100),g=new G(k,!1,y)}catch(z){var l;c<O.e.Instances.length&&(null===(l=O.e.Instances.pop())||void 0===l||l.dispose()),k=document.createElement("canvas"),g=new G(k,!1,y)}O.e.Instances.pop(),O.e.OnEnginesDisposedObservable.add((o=>{g&&o!==g&&!g.l&&0===O.e.Instances.length&&A()})),g.getCaps().parallelShaderCompile=void 0;const x=new E.d(g);n.e(52).then(n.bind(n,13724)).then((n=>{let{passPixelShader:O}=n;if(!g)return void H("Engine is not defined");const y=new E.f({lH:g,name:O.name,fragmentShader:O.shader,samplerNames:["textureSampler"]});Y={canvas:k,lH:g,renderer:x,wrapper:y},o(Y)}))})).catch(H)}))),await y})().then((n=>{if(n.lH.setSize(o,H,!0),S instanceof Float32Array){const o=new Uint8Array(S.length);let H=S.length;for(;H--;){const n=S[H];o[H]=Math.round(255*(0,g.Clamp)(n))}S=o}const E=n.lH.createRawTexture(S,o,H,5,!1,!x,1);n.renderer.setViewport(),n.renderer.applyEffectWrapper(n.wrapper),n.wrapper.effect._bindTexture("textureSampler",E),n.renderer.draw(),z?k.Tools.ToBlob(n.canvas,(o=>{const H=new FileReader;H.onload=o=>{const H=o.target.result;G&&G(H)},H.readAsArrayBuffer(o)}),c,V):k.Tools.EncodeScreenshotCanvasData(n.canvas,G,c,l,V),E.dispose()}))}function A(){var o;Y?(Y.wrapper.dispose(),Y.renderer.dispose(),Y.lH.dispose()):null===(o=y)||void 0===o||o.then((o=>{o.wrapper.dispose(),o.renderer.dispose(),o.lH.dispose()}));y=null,Y=null}const l={DumpData:c,DumpDataAsync:G,DumpFramebuffer:S,Dispose:A};k.Tools.DumpData=c,k.Tools.DumpDataAsync=G,k.Tools.DumpFramebuffer=S}}]);