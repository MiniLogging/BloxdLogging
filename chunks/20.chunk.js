"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[20],{11815:(U,X,b)=>{b.r(X),b.d(X,{Dispose:()=>n,DumpData:()=>R,DumpDataAsync:()=>S,DumpFramebuffer:()=>p,DumpTools:()=>a});var F=b(11697),E=b(11385),w=b(11608),Q=b(11442);let z,q=null;async function p(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",w=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6?arguments[6]:void 0;const z=await b.readPixels(0,0,U,X);R(U,X,new Uint8Array(z.buffer),F,E,w,!0,void 0,Q)}async function S(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7?arguments[7]:void 0;return await new Promise((q=>{R(U,X,b,(U=>q(U)),F,E,w,Q,z)}))}function R(U,X,p,S){let R=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,J=arguments.length>6&&void 0!==arguments[6]&&arguments[6],m=arguments.length>7&&void 0!==arguments[7]&&arguments[7],x=arguments.length>8?arguments[8]:void 0;(async function(){return q||(q=new Promise(((U,X)=>{let E,w=null;const q={Rb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,11726)).then((p=>{let{ThinEngine:S}=p;const R=Q.c.Instances.length;try{E=new OffscreenCanvas(100,100),w=new S(E,!1,q)}catch(m){var a;R<Q.c.Instances.length&&(null===(a=Q.c.Instances.pop())||void 0===a||a.dispose()),E=document.createElement("canvas"),w=new S(E,!1,q)}Q.c.Instances.pop(),Q.c.OnEnginesDisposedObservable.add((U=>{w&&U!==w&&!w.R&&0===Q.c.Instances.length&&n()})),w.getCaps().parallelShaderCompile=void 0;const J=new F.d(w);b.e(52).then(b.bind(b,14069)).then((b=>{let{passPixelShader:Q}=b;if(!w)return void X("Engine is not defined");const q=new F.f({aX:w,name:Q.name,fragmentShader:Q.shader,samplerNames:["textureSampler"]});z={canvas:E,aX:w,renderer:J,wrapper:q},U(z)}))})).catch(X)}))),await q})().then((b=>{if(b.aX.setSize(U,X,!0),p instanceof Float32Array){const U=new Uint8Array(p.length);let X=p.length;for(;X--;){const b=p[X];U[X]=Math.round(255*(0,w.Clamp)(b))}p=U}const F=b.aX.createRawTexture(p,U,X,5,!1,!J,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",F),b.renderer.draw(),m?E.Tools.ToBlob(b.canvas,(U=>{const X=new FileReader;X.onload=U=>{const X=U.target.result;S&&S(X)},X.readAsArrayBuffer(U)}),R,x):E.Tools.EncodeScreenshotCanvasData(b.canvas,S,R,a,x),F.dispose()}))}function n(){var U;z?(z.wrapper.dispose(),z.renderer.dispose(),z.aX.dispose()):null===(U=q)||void 0===U||U.then((U=>{U.wrapper.dispose(),U.renderer.dispose(),U.aX.dispose()}));q=null,z=null}const a={DumpData:R,DumpDataAsync:S,DumpFramebuffer:p,Dispose:n};E.Tools.DumpData=R,E.Tools.DumpDataAsync=S,E.Tools.DumpFramebuffer=p}}]);