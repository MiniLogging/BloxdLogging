"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[20],{12546:(H,u,J)=>{J.r(u),J.d(u,{Dispose:()=>P,DumpData:()=>G,DumpDataAsync:()=>d,DumpFramebuffer:()=>b,DumpTools:()=>mH});var O=J(12439),U=J(12171),h=J(12349),w=J(12203);let g,B=null;async function b(H,u,J,O){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0;const g=await J.readPixels(0,0,H,u);G(H,u,new Uint8Array(g.buffer),O,U,h,!0,void 0,w)}async function d(H,u,J){let O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{G(H,u,J,(H=>B(H)),O,U,h,w,g)}))}function G(H,u,b,d){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",mH=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=arguments.length>7&&void 0!==arguments[7]&&arguments[7],p=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((H,u)=>{let U,h=null;const B={Nh:!0,depth:!1,Rh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(J.bind(J,12457)).then((b=>{let{ThinEngine:d}=b;const G=w.e.Instances.length;try{U=new OffscreenCanvas(100,100),h=new d(U,!1,B)}catch(r){var mH;G<w.e.Instances.length&&(null===(mH=w.e.Instances.pop())||void 0===mH||mH.dispose()),U=document.createElement("canvas"),h=new d(U,!1,B)}w.e.Instances.pop(),w.e.OnEnginesDisposedObservable.add((H=>{h&&H!==h&&!h.B&&0===w.e.Instances.length&&P()})),h.getCaps().parallelShaderCompile=void 0;const l=new O.e(h);J.e(52).then(J.bind(J,14792)).then((J=>{let{passPixelShader:w}=J;if(!h)return void u("Engine is not defined");const B=new O.g({mJ:h,name:w.name,fragmentShader:w.shader,samplerNames:["textureSampler"]});g={canvas:U,mJ:h,renderer:l,wrapper:B},H(g)}))})).catch(u)}))),await B})().then((J=>{if(J.mJ.setSize(H,u,!0),b instanceof Float32Array){const H=new Uint8Array(b.length);let u=b.length;for(;u--;){const J=b[u];H[u]=Math.round(255*(0,h.Clamp)(J))}b=H}const O=J.mJ.createRawTexture(b,H,u,5,!1,!l,1);J.renderer.setViewport(),J.renderer.applyEffectWrapper(J.wrapper),J.wrapper.effect._bindTexture("textureSampler",O),J.renderer.draw(),r?U.Tools.ToBlob(J.canvas,(H=>{const u=new FileReader;u.onload=H=>{const u=H.target.result;d&&d(u)},u.readAsArrayBuffer(H)}),G,p):U.Tools.EncodeScreenshotCanvasData(J.canvas,d,G,mH,p),O.dispose()}))}function P(){var H;g?(g.wrapper.dispose(),g.renderer.dispose(),g.mJ.dispose()):null===(H=B)||void 0===H||H.then((H=>{H.wrapper.dispose(),H.renderer.dispose(),H.mJ.dispose()}));B=null,g=null}const mH={DumpData:G,DumpDataAsync:d,DumpFramebuffer:b,Dispose:P};U.Tools.DumpData=G,U.Tools.DumpDataAsync=d,U.Tools.DumpFramebuffer=b}}]);