"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[20],{11621:(f,v,Z)=>{Z.r(v),Z.d(v,{Dispose:()=>W,DumpData:()=>u,DumpDataAsync:()=>O,DumpFramebuffer:()=>H,DumpTools:()=>a});var V=Z(11525),h=Z(11230),J=Z(11440),l=Z(11281);let e,C=null;async function H(f,v,Z,V){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,l=arguments.length>6?arguments[6]:void 0;const e=await Z.readPixels(0,0,f,v);u(f,v,new Uint8Array(e.buffer),V,h,J,!0,void 0,l)}async function O(f,v,Z){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,J=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{u(f,v,Z,(f=>C(f)),V,h,J,l,e)}))}function u(f,v,H,O){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],X=arguments.length>7&&void 0!==arguments[7]&&arguments[7],F=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((f,v)=>{let h,J=null;const C={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Z.bind(Z,11551)).then((H=>{let{ThinEngine:O}=H;const u=l.c.Instances.length;try{h=new OffscreenCanvas(100,100),J=new O(h,!1,C)}catch(X){var a;u<l.c.Instances.length&&(null===(a=l.c.Instances.pop())||void 0===a||a.dispose()),h=document.createElement("canvas"),J=new O(h,!1,C)}l.c.Instances.pop(),l.c.OnEnginesDisposedObservable.add((f=>{J&&f!==J&&!J.C&&0===l.c.Instances.length&&W()})),J.getCaps().parallelShaderCompile=void 0;const b=new V.e(J);Z.e(52).then(Z.bind(Z,13866)).then((Z=>{let{passPixelShader:l}=Z;if(!J)return void v("Engine is not defined");const C=new V.h({bv:J,name:l.name,fragmentShader:l.shader,samplerNames:["textureSampler"]});e={canvas:h,bv:J,renderer:b,wrapper:C},f(e)}))})).catch(v)}))),await C})().then((Z=>{if(Z.bv.setSize(f,v,!0),H instanceof Float32Array){const f=new Uint8Array(H.length);let v=H.length;for(;v--;){const Z=H[v];f[v]=Math.round(255*(0,J.Clamp)(Z))}H=f}const V=Z.bv.createRawTexture(H,f,v,5,!1,!b,1);Z.renderer.setViewport(),Z.renderer.applyEffectWrapper(Z.wrapper),Z.wrapper.effect._bindTexture("textureSampler",V),Z.renderer.draw(),X?h.Tools.ToBlob(Z.canvas,(f=>{const v=new FileReader;v.onload=f=>{const v=f.target.result;O&&O(v)},v.readAsArrayBuffer(f)}),u,F):h.Tools.EncodeScreenshotCanvasData(Z.canvas,O,u,a,F),V.dispose()}))}function W(){var f;e?(e.wrapper.dispose(),e.renderer.dispose(),e.bv.dispose()):null===(f=C)||void 0===f||f.then((f=>{f.wrapper.dispose(),f.renderer.dispose(),f.bv.dispose()}));C=null,e=null}const a={DumpData:u,DumpDataAsync:O,DumpFramebuffer:H,Dispose:W};h.Tools.DumpData=u,h.Tools.DumpDataAsync=O,h.Tools.DumpFramebuffer=H}}]);