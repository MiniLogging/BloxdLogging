"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[20],{13053:(Y,b,C)=>{C.r(b),C.d(b,{Dispose:()=>y,DumpData:()=>F,DumpDataAsync:()=>O,DumpFramebuffer:()=>r,DumpTools:()=>S});var R=C(12929),q=C(12645),A=C(12852),E=C(12702);let B,g=null;async function r(Y,b,C,R){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,E=arguments.length>6?arguments[6]:void 0;const B=await C.readPixels(0,0,Y,b);F(Y,b,new Uint8Array(B.buffer),R,q,A,!0,void 0,E)}async function O(Y,b,C){let R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],E=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7?arguments[7]:void 0;return await new Promise((g=>{F(Y,b,C,(Y=>g(Y)),R,q,A,E,B)}))}function F(Y,b,r,O){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",S=arguments.length>5?arguments[5]:void 0,n=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return g||(g=new Promise(((Y,b)=>{let q,A=null;const g={pb:!0,depth:!1,nb:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,12963)).then((r=>{let{ThinEngine:O}=r;const F=E.d.Instances.length;try{q=new OffscreenCanvas(100,100),A=new O(q,!1,g)}catch(t){var S;F<E.d.Instances.length&&(null===(S=E.d.Instances.pop())||void 0===S||S.dispose()),q=document.createElement("canvas"),A=new O(q,!1,g)}E.d.Instances.pop(),E.d.OnEnginesDisposedObservable.add((Y=>{A&&Y!==A&&!A.O&&0===E.d.Instances.length&&y()})),A.getCaps().parallelShaderCompile=void 0;const n=new R.e(A);C.e(52).then(C.bind(C,15407)).then((C=>{let{passPixelShader:E}=C;if(!A)return void b("Engine is not defined");const g=new R.h({qC:A,name:E.name,fragmentShader:E.shader,samplerNames:["textureSampler"]});B={canvas:q,qC:A,renderer:n,wrapper:g},Y(B)}))})).catch(b)}))),await g})().then((C=>{if(C.qC.setSize(Y,b,!0),r instanceof Float32Array){const Y=new Uint8Array(r.length);let b=r.length;for(;b--;){const C=r[b];Y[b]=Math.round(255*(0,A.Clamp)(C))}r=Y}const R=C.qC.createRawTexture(r,Y,b,5,!1,!n,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",R),C.renderer.draw(),t?q.Tools.ToBlob(C.canvas,(Y=>{const b=new FileReader;b.onload=Y=>{const b=Y.target.result;O&&O(b)},b.readAsArrayBuffer(Y)}),F,I):q.Tools.EncodeScreenshotCanvasData(C.canvas,O,F,S,I),R.dispose()}))}function y(){var Y;B?(B.wrapper.dispose(),B.renderer.dispose(),B.qC.dispose()):null===(Y=g)||void 0===Y||Y.then((Y=>{Y.wrapper.dispose(),Y.renderer.dispose(),Y.qC.dispose()}));g=null,B=null}const S={DumpData:F,DumpDataAsync:O,DumpFramebuffer:r,Dispose:y};q.Tools.DumpData=F,q.Tools.DumpDataAsync=O,q.Tools.DumpFramebuffer=r}}]);