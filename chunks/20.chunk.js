"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[20],{12622:(C,c,d)=>{d.r(c),d.d(c,{Dispose:()=>Z,DumpData:()=>k,DumpDataAsync:()=>g,DumpFramebuffer:()=>j,DumpTools:()=>U});var b=d(12508),X=d(12219),P=d(12418),V=d(12255);let R,p=null;async function j(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",P=arguments.length>5?arguments[5]:void 0,V=arguments.length>6?arguments[6]:void 0;const R=await d.readPixels(0,0,C,c);k(C,c,new Uint8Array(R.buffer),b,X,P,!0,void 0,V)}async function g(C,c,d){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5],V=arguments.length>6&&void 0!==arguments[6]&&arguments[6],R=arguments.length>7?arguments[7]:void 0;return await new Promise((p=>{k(C,c,d,(C=>p(C)),b,X,P,V,R)}))}function k(C,c,j,g){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5?arguments[5]:void 0,A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]&&arguments[7],q=arguments.length>8?arguments[8]:void 0;(async function(){return p||(p=new Promise(((C,c)=>{let X,P=null;const p={nc:!0,depth:!1,uc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(d.bind(d,12538)).then((j=>{let{ThinEngine:g}=j;const k=V.c.Instances.length;try{X=new OffscreenCanvas(100,100),P=new g(X,!1,p)}catch(u){var U;k<V.c.Instances.length&&(null===(U=V.c.Instances.pop())||void 0===U||U.dispose()),X=document.createElement("canvas"),P=new g(X,!1,p)}V.c.Instances.pop(),V.c.OnEnginesDisposedObservable.add((C=>{P&&C!==P&&!P.Z&&0===V.c.Instances.length&&Z()})),P.getCaps().parallelShaderCompile=void 0;const A=new b.d(P);d.e(52).then(d.bind(d,14923)).then((d=>{let{passPixelShader:V}=d;if(!P)return void c("Engine is not defined");const p=new b.e({Gc:P,name:V.name,fragmentShader:V.shader,samplerNames:["textureSampler"]});R={canvas:X,Gc:P,renderer:A,wrapper:p},C(R)}))})).catch(c)}))),await p})().then((d=>{if(d.Gc.setSize(C,c,!0),j instanceof Float32Array){const C=new Uint8Array(j.length);let c=j.length;for(;c--;){const d=j[c];C[c]=Math.round(255*(0,P.Clamp)(d))}j=C}const b=d.Gc.createRawTexture(j,C,c,5,!1,!A,1);d.renderer.setViewport(),d.renderer.applyEffectWrapper(d.wrapper),d.wrapper.effect._bindTexture("textureSampler",b),d.renderer.draw(),u?X.Tools.ToBlob(d.canvas,(C=>{const c=new FileReader;c.onload=C=>{const c=C.target.result;g&&g(c)},c.readAsArrayBuffer(C)}),k,q):X.Tools.EncodeScreenshotCanvasData(d.canvas,g,k,U,q),b.dispose()}))}function Z(){var C;R?(R.wrapper.dispose(),R.renderer.dispose(),R.Gc.dispose()):null===(C=p)||void 0===C||C.then((C=>{C.wrapper.dispose(),C.renderer.dispose(),C.Gc.dispose()}));p=null,R=null}const U={DumpData:k,DumpDataAsync:g,DumpFramebuffer:j,Dispose:Z};X.Tools.DumpData=k,X.Tools.DumpDataAsync=g,X.Tools.DumpFramebuffer=j}}]);