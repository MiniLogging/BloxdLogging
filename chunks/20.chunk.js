"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[20],{12689:(Z,l,C)=>{C.r(l),C.d(l,{Dispose:()=>G,DumpData:()=>E,DumpDataAsync:()=>d,DumpFramebuffer:()=>J,DumpTools:()=>a});var B=C(12568),x=C(12248),b=C(12460),K=C(12295);let f,W=null;async function J(Z,l,C,B){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",b=arguments.length>5?arguments[5]:void 0,K=arguments.length>6?arguments[6]:void 0;const f=await C.readPixels(0,0,Z,l);E(Z,l,new Uint8Array(f.buffer),B,x,b,!0,void 0,K)}async function d(Z,l,C){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",x=arguments.length>4?arguments[4]:void 0,b=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],f=arguments.length>7?arguments[7]:void 0;return await new Promise((W=>{E(Z,l,C,(Z=>W(Z)),B,x,b,K,f)}))}function E(Z,l,J,d){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",a=arguments.length>5?arguments[5]:void 0,q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Y=arguments.length>8?arguments[8]:void 0;(async function(){return W||(W=new Promise(((Z,l)=>{let x,b=null;const W={Gb:!0,depth:!1,bb:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,12596)).then((J=>{let{ThinEngine:d}=J;const E=K.b.Instances.length;try{x=new OffscreenCanvas(100,100),b=new d(x,!1,W)}catch(z){var a;E<K.b.Instances.length&&(null===(a=K.b.Instances.pop())||void 0===a||a.dispose()),x=document.createElement("canvas"),b=new d(x,!1,W)}K.b.Instances.pop(),K.b.OnEnginesDisposedObservable.add((Z=>{b&&Z!==b&&!b.J&&0===K.b.Instances.length&&G()})),b.getCaps().parallelShaderCompile=void 0;const q=new B.e(b);C.e(52).then(C.bind(C,14623)).then((C=>{let{passPixelShader:K}=C;if(!b)return void l("Engine is not defined");const W=new B.i({al:b,name:K.name,fragmentShader:K.shader,samplerNames:["textureSampler"]});f={canvas:x,al:b,renderer:q,wrapper:W},Z(f)}))})).catch(l)}))),await W})().then((C=>{if(C.al.setSize(Z,l,!0),J instanceof Float32Array){const Z=new Uint8Array(J.length);let l=J.length;for(;l--;){const C=J[l];Z[l]=Math.round(255*(0,b.Clamp)(C))}J=Z}const B=C.al.createRawTexture(J,Z,l,5,!1,!q,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",B),C.renderer.draw(),z?x.Tools.ToBlob(C.canvas,(Z=>{const l=new FileReader;l.onload=Z=>{const l=Z.target.result;d&&d(l)},l.readAsArrayBuffer(Z)}),E,Y):x.Tools.EncodeScreenshotCanvasData(C.canvas,d,E,a,Y),B.dispose()}))}function G(){var Z;f?(f.wrapper.dispose(),f.renderer.dispose(),f.al.dispose()):null===(Z=W)||void 0===Z||Z.then((Z=>{Z.wrapper.dispose(),Z.renderer.dispose(),Z.al.dispose()}));W=null,f=null}const a={DumpData:E,DumpDataAsync:d,DumpFramebuffer:J,Dispose:G};x.Tools.DumpData=E,x.Tools.DumpDataAsync=d,x.Tools.DumpFramebuffer=J}}]);