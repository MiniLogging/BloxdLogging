"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[20],{11605:(S,v,D)=>{D.r(v),D.d(v,{Dispose:()=>w,DumpData:()=>A,DumpDataAsync:()=>h,DumpFramebuffer:()=>E,DumpTools:()=>n});var z=D(11488),e=D(11175),N=D(11393),m=D(11222);let B,g=null;async function E(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const B=await D.readPixels(0,0,S,v);A(S,v,new Uint8Array(B.buffer),z,e,N,!0,void 0,m)}async function h(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",e=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=arguments.length>7?arguments[7]:void 0;return await new Promise((g=>{A(S,v,D,(S=>g(S)),z,e,N,m,B)}))}function A(S,v,E,h){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",n=arguments.length>5?arguments[5]:void 0,R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7&&void 0!==arguments[7]&&arguments[7],I=arguments.length>8?arguments[8]:void 0;(async function(){return g||(g=new Promise(((S,v)=>{let e,N=null;const g={Be:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(D.bind(D,11510)).then((E=>{let{ThinEngine:h}=E;const A=m.c.Instances.length;try{e=new OffscreenCanvas(100,100),N=new h(e,!1,g)}catch(O){var n;A<m.c.Instances.length&&(null===(n=m.c.Instances.pop())||void 0===n||n.dispose()),e=document.createElement("canvas"),N=new h(e,!1,g)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((S=>{N&&S!==N&&!N.h&&0===m.c.Instances.length&&w()})),N.getCaps().parallelShaderCompile=void 0;const R=new z.e(N);D.e(52).then(D.bind(D,13893)).then((D=>{let{passPixelShader:m}=D;if(!N)return void v("Engine is not defined");const g=new z.h({nv:N,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});B={canvas:e,nv:N,renderer:R,wrapper:g},S(B)}))})).catch(v)}))),await g})().then((D=>{if(D.nv.setSize(S,v,!0),E instanceof Float32Array){const S=new Uint8Array(E.length);let v=E.length;for(;v--;){const D=E[v];S[v]=Math.round(255*(0,N.Clamp)(D))}E=S}const z=D.nv.createRawTexture(E,S,v,5,!1,!R,1);D.renderer.setViewport(),D.renderer.applyEffectWrapper(D.wrapper),D.wrapper.effect._bindTexture("textureSampler",z),D.renderer.draw(),O?e.Tools.ToBlob(D.canvas,(S=>{const v=new FileReader;v.onload=S=>{const v=S.target.result;h&&h(v)},v.readAsArrayBuffer(S)}),A,I):e.Tools.EncodeScreenshotCanvasData(D.canvas,h,A,n,I),z.dispose()}))}function w(){var S;B?(B.wrapper.dispose(),B.renderer.dispose(),B.nv.dispose()):null===(S=g)||void 0===S||S.then((S=>{S.wrapper.dispose(),S.renderer.dispose(),S.nv.dispose()}));g=null,B=null}const n={DumpData:A,DumpDataAsync:h,DumpFramebuffer:E,Dispose:w};e.Tools.DumpData=A,e.Tools.DumpDataAsync=h,e.Tools.DumpFramebuffer=E}}]);