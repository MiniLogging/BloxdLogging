"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11413:(P,f,Y)=>{Y.r(f),Y.d(f,{Dispose:()=>r,DumpData:()=>y,DumpDataAsync:()=>R,DumpFramebuffer:()=>d,DumpTools:()=>i});var C=Y(11286),q=Y(11014),m=Y(11198),L=Y(11052);let o,w=null;async function d(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",m=arguments.length>5?arguments[5]:void 0,L=arguments.length>6?arguments[6]:void 0;const o=await Y.readPixels(0,0,P,f);y(P,f,new Uint8Array(o.buffer),C,q,m,!0,void 0,L)}async function R(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",q=arguments.length>4?arguments[4]:void 0,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7?arguments[7]:void 0;return await new Promise((w=>{y(P,f,Y,(P=>w(P)),C,q,m,L,o)}))}function y(P,f,d,R){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return w||(w=new Promise(((P,f)=>{let q,m=null;const w={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(Y.bind(Y,11322)).then((d=>{let{ThinEngine:R}=d;const y=L.e.Instances.length;try{q=new OffscreenCanvas(100,100),m=new R(q,!1,w)}catch(g){var i;y<L.e.Instances.length&&(null===(i=L.e.Instances.pop())||void 0===i||i.dispose()),q=document.createElement("canvas"),m=new R(q,!1,w)}L.e.Instances.pop(),L.e.OnEnginesDisposedObservable.add((P=>{m&&P!==m&&!m.R&&0===L.e.Instances.length&&r()})),m.getCaps().parallelShaderCompile=void 0;const u=new C.e(m);Y.e(52).then(Y.bind(Y,13705)).then((Y=>{let{passPixelShader:L}=Y;if(!m)return void f("Engine is not defined");const w=new C.i({Kf:m,name:L.name,fragmentShader:L.shader,samplerNames:["textureSampler"]});o={canvas:q,Kf:m,renderer:u,wrapper:w},P(o)}))})).catch(f)}))),await w})().then((Y=>{if(Y.Kf.setSize(P,f,!0),d instanceof Float32Array){const P=new Uint8Array(d.length);let f=d.length;for(;f--;){const Y=d[f];P[f]=Math.round(255*(0,m.Clamp)(Y))}d=P}const C=Y.Kf.createRawTexture(d,P,f,5,!1,!u,1);Y.renderer.setViewport(),Y.renderer.applyEffectWrapper(Y.wrapper),Y.wrapper.effect._bindTexture("textureSampler",C),Y.renderer.draw(),g?q.Tools.ToBlob(Y.canvas,(P=>{const f=new FileReader;f.onload=P=>{const f=P.target.result;R&&R(f)},f.readAsArrayBuffer(P)}),y,S):q.Tools.EncodeScreenshotCanvasData(Y.canvas,R,y,i,S),C.dispose()}))}function r(){var P;o?(o.wrapper.dispose(),o.renderer.dispose(),o.Kf.dispose()):null===(P=w)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.Kf.dispose()}));w=null,o=null}const i={DumpData:y,DumpDataAsync:R,DumpFramebuffer:d,Dispose:r};q.Tools.DumpData=y,q.Tools.DumpDataAsync=R,q.Tools.DumpFramebuffer=d}}]);