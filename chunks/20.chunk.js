"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[20],{11951:(K,O,F)=>{F.r(O),F.d(O,{Dispose:()=>j,DumpData:()=>t,DumpDataAsync:()=>M,DumpFramebuffer:()=>E,DumpTools:()=>X});var f=F(11831),r=F(11517),l=F(11734),q=F(11559);let J,c=null;async function E(K,O,F,f){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,q=arguments.length>6?arguments[6]:void 0;const J=await F.readPixels(0,0,K,O);t(K,O,new Uint8Array(J.buffer),f,r,l,!0,void 0,q)}async function M(K,O,F){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",r=arguments.length>4?arguments[4]:void 0,l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7?arguments[7]:void 0;return await new Promise((c=>{t(K,O,F,(K=>c(K)),f,r,l,q,J)}))}function t(K,O,E,M){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7&&void 0!==arguments[7]&&arguments[7],o=arguments.length>8?arguments[8]:void 0;(async function(){return c||(c=new Promise(((K,O)=>{let r,l=null;const c={vf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(F.bind(F,11861)).then((E=>{let{ThinEngine:M}=E;const t=q.e.Instances.length;try{r=new OffscreenCanvas(100,100),l=new M(r,!1,c)}catch(T){var X;t<q.e.Instances.length&&(null===(X=q.e.Instances.pop())||void 0===X||X.dispose()),r=document.createElement("canvas"),l=new M(r,!1,c)}q.e.Instances.pop(),q.e.OnEnginesDisposedObservable.add((K=>{l&&K!==l&&!l.M&&0===q.e.Instances.length&&j()})),l.getCaps().parallelShaderCompile=void 0;const u=new f.c(l);F.e(52).then(F.bind(F,14215)).then((F=>{let{passPixelShader:q}=F;if(!l)return void O("Engine is not defined");const c=new f.e({uO:l,name:q.name,fragmentShader:q.shader,samplerNames:["textureSampler"]});J={canvas:r,uO:l,renderer:u,wrapper:c},K(J)}))})).catch(O)}))),await c})().then((F=>{if(F.uO.setSize(K,O,!0),E instanceof Float32Array){const K=new Uint8Array(E.length);let O=E.length;for(;O--;){const F=E[O];K[O]=Math.round(255*(0,l.Clamp)(F))}E=K}const f=F.uO.createRawTexture(E,K,O,5,!1,!u,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",f),F.renderer.draw(),T?r.Tools.ToBlob(F.canvas,(K=>{const O=new FileReader;O.onload=K=>{const O=K.target.result;M&&M(O)},O.readAsArrayBuffer(K)}),t,o):r.Tools.EncodeScreenshotCanvasData(F.canvas,M,t,X,o),f.dispose()}))}function j(){var K;J?(J.wrapper.dispose(),J.renderer.dispose(),J.uO.dispose()):null===(K=c)||void 0===K||K.then((K=>{K.wrapper.dispose(),K.renderer.dispose(),K.uO.dispose()}));c=null,J=null}const X={DumpData:t,DumpDataAsync:M,DumpFramebuffer:E,Dispose:j};r.Tools.DumpData=t,r.Tools.DumpDataAsync=M,r.Tools.DumpFramebuffer=E}}]);