"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[20],{12997:(p,b,M)=>{M.r(b),M.d(b,{Dispose:()=>S,DumpData:()=>x,DumpDataAsync:()=>z,DumpFramebuffer:()=>t,DumpTools:()=>X});var h=M(12876),Q=M(12608),mp=M(12789),y=M(12652);let P,w=null;async function t(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",mp=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0;const P=await M.readPixels(0,0,p,b);x(p,b,new Uint8Array(P.buffer),h,Q,mp,!0,void 0,y)}async function z(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Q=arguments.length>4?arguments[4]:void 0,mp=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7?arguments[7]:void 0;return await new Promise((w=>{x(p,b,M,(p=>w(p)),h,Q,mp,y,P)}))}function x(p,b,t,z){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",X=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],J=arguments.length>7&&void 0!==arguments[7]&&arguments[7],g=arguments.length>8?arguments[8]:void 0;(async function(){return w||(w=new Promise(((p,b)=>{let Q,mp=null;const w={Yb:!0,depth:!1,cb:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(M.bind(M,12905)).then((t=>{let{ThinEngine:z}=t;const x=y.c.Instances.length;try{Q=new OffscreenCanvas(100,100),mp=new z(Q,!1,w)}catch(J){var X;x<y.c.Instances.length&&(null===(X=y.c.Instances.pop())||void 0===X||X.dispose()),Q=document.createElement("canvas"),mp=new z(Q,!1,w)}y.c.Instances.pop(),y.c.OnEnginesDisposedObservable.add((p=>{mp&&p!==mp&&!mp.S&&0===y.c.Instances.length&&S()})),mp.getCaps().parallelShaderCompile=void 0;const c=new h.e(mp);M.e(52).then(M.bind(M,15268)).then((M=>{let{passPixelShader:y}=M;if(!mp)return void b("Engine is not defined");const w=new h.h({hM:mp,name:y.name,fragmentShader:y.shader,samplerNames:["textureSampler"]});P={canvas:Q,hM:mp,renderer:c,wrapper:w},p(P)}))})).catch(b)}))),await w})().then((M=>{if(M.hM.setSize(p,b,!0),t instanceof Float32Array){const p=new Uint8Array(t.length);let b=t.length;for(;b--;){const M=t[b];p[b]=Math.round(255*(0,mp.Clamp)(M))}t=p}const h=M.hM.createRawTexture(t,p,b,5,!1,!c,1);M.renderer.setViewport(),M.renderer.applyEffectWrapper(M.wrapper),M.wrapper.effect._bindTexture("textureSampler",h),M.renderer.draw(),J?Q.Tools.ToBlob(M.canvas,(p=>{const b=new FileReader;b.onload=p=>{const b=p.target.result;z&&z(b)},b.readAsArrayBuffer(p)}),x,g):Q.Tools.EncodeScreenshotCanvasData(M.canvas,z,x,X,g),h.dispose()}))}function S(){var p;P?(P.wrapper.dispose(),P.renderer.dispose(),P.hM.dispose()):null===(p=w)||void 0===p||p.then((p=>{p.wrapper.dispose(),p.renderer.dispose(),p.hM.dispose()}));w=null,P=null}const X={DumpData:x,DumpDataAsync:z,DumpFramebuffer:t,Dispose:S};Q.Tools.DumpData=x,Q.Tools.DumpDataAsync=z,Q.Tools.DumpFramebuffer=t}}]);