"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[20],{12545:(y,c,A)=>{A.r(c),A.d(c,{Dispose:()=>O,DumpData:()=>o,DumpDataAsync:()=>q,DumpFramebuffer:()=>I,DumpTools:()=>L});var l=A(12433),w=A(12144),N=A(12340),p=A(12184);let W,h=null;async function I(y,c,A,l){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,p=arguments.length>6?arguments[6]:void 0;const W=await A.readPixels(0,0,y,c);o(y,c,new Uint8Array(W.buffer),l,w,N,!0,void 0,p)}async function q(y,c,A){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",w=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7?arguments[7]:void 0;return await new Promise((h=>{o(y,c,A,(y=>h(y)),l,w,N,p,W)}))}function o(y,c,I,q){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],P=arguments.length>8?arguments[8]:void 0;(async function(){return h||(h=new Promise(((y,c)=>{let w,N=null;const h={o:!0,depth:!1,Sc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(A.bind(A,12458)).then((I=>{let{ThinEngine:q}=I;const o=p.c.Instances.length;try{w=new OffscreenCanvas(100,100),N=new q(w,!1,h)}catch(H){var L;o<p.c.Instances.length&&(null===(L=p.c.Instances.pop())||void 0===L||L.dispose()),w=document.createElement("canvas"),N=new q(w,!1,h)}p.c.Instances.pop(),p.c.OnEnginesDisposedObservable.add((y=>{N&&y!==N&&!N.I&&0===p.c.Instances.length&&O()})),N.getCaps().parallelShaderCompile=void 0;const i=new l.d(N);A.e(52).then(A.bind(A,14801)).then((A=>{let{passPixelShader:p}=A;if(!N)return void c("Engine is not defined");const h=new l.h({Uc:N,name:p.name,fragmentShader:p.shader,samplerNames:["textureSampler"]});W={canvas:w,Uc:N,renderer:i,wrapper:h},y(W)}))})).catch(c)}))),await h})().then((A=>{if(A.Uc.setSize(y,c,!0),I instanceof Float32Array){const y=new Uint8Array(I.length);let c=I.length;for(;c--;){const A=I[c];y[c]=Math.round(255*(0,N.Clamp)(A))}I=y}const l=A.Uc.createRawTexture(I,y,c,5,!1,!i,1);A.renderer.setViewport(),A.renderer.applyEffectWrapper(A.wrapper),A.wrapper.effect._bindTexture("textureSampler",l),A.renderer.draw(),H?w.Tools.ToBlob(A.canvas,(y=>{const c=new FileReader;c.onload=y=>{const c=y.target.result;q&&q(c)},c.readAsArrayBuffer(y)}),o,P):w.Tools.EncodeScreenshotCanvasData(A.canvas,q,o,L,P),l.dispose()}))}function O(){var y;W?(W.wrapper.dispose(),W.renderer.dispose(),W.Uc.dispose()):null===(y=h)||void 0===y||y.then((y=>{y.wrapper.dispose(),y.renderer.dispose(),y.Uc.dispose()}));h=null,W=null}const L={DumpData:o,DumpDataAsync:q,DumpFramebuffer:I,Dispose:O};w.Tools.DumpData=o,w.Tools.DumpDataAsync=q,w.Tools.DumpFramebuffer=I}}]);