"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[20],{12036:(E,t,z)=>{z.r(t),z.d(t,{Dispose:()=>d,DumpData:()=>h,DumpDataAsync:()=>H,DumpFramebuffer:()=>Z,DumpTools:()=>y});var A=z(11933),X=z(11630),R=z(11834),u=z(11667);let p,C=null;async function Z(E,t,z,A){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",R=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0;const p=await z.readPixels(0,0,E,t);h(E,t,new Uint8Array(p.buffer),A,X,R,!0,void 0,u)}async function H(E,t,z){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",X=arguments.length>4?arguments[4]:void 0,R=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{h(E,t,z,(E=>C(E)),A,X,R,u,p)}))}function h(E,t,Z,H){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,O=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],a=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((E,t)=>{let X,R=null;const C={Ap:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(z.bind(z,11960)).then((Z=>{let{ThinEngine:H}=Z;const h=u.d.Instances.length;try{X=new OffscreenCanvas(100,100),R=new H(X,!1,C)}catch(c){var y;h<u.d.Instances.length&&(null===(y=u.d.Instances.pop())||void 0===y||y.dispose()),X=document.createElement("canvas"),R=new H(X,!1,C)}u.d.Instances.pop(),u.d.OnEnginesDisposedObservable.add((E=>{R&&E!==R&&!R.C&&0===u.d.Instances.length&&d()})),R.getCaps().parallelShaderCompile=void 0;const O=new A.d(R);z.e(52).then(z.bind(z,14245)).then((z=>{let{passPixelShader:u}=z;if(!R)return void t("Engine is not defined");const C=new A.h({ct:R,name:u.name,fragmentShader:u.shader,samplerNames:["textureSampler"]});p={canvas:X,ct:R,renderer:O,wrapper:C},E(p)}))})).catch(t)}))),await C})().then((z=>{if(z.ct.setSize(E,t,!0),Z instanceof Float32Array){const E=new Uint8Array(Z.length);let t=Z.length;for(;t--;){const z=Z[t];E[t]=Math.round(255*(0,R.Clamp)(z))}Z=E}const A=z.ct.createRawTexture(Z,E,t,5,!1,!O,1);z.renderer.setViewport(),z.renderer.applyEffectWrapper(z.wrapper),z.wrapper.effect._bindTexture("textureSampler",A),z.renderer.draw(),c?X.Tools.ToBlob(z.canvas,(E=>{const t=new FileReader;t.onload=E=>{const t=E.target.result;H&&H(t)},t.readAsArrayBuffer(E)}),h,a):X.Tools.EncodeScreenshotCanvasData(z.canvas,H,h,y,a),A.dispose()}))}function d(){var E;p?(p.wrapper.dispose(),p.renderer.dispose(),p.ct.dispose()):null===(E=C)||void 0===E||E.then((E=>{E.wrapper.dispose(),E.renderer.dispose(),E.ct.dispose()}));C=null,p=null}const y={DumpData:h,DumpDataAsync:H,DumpFramebuffer:Z,Dispose:d};X.Tools.DumpData=h,X.Tools.DumpDataAsync=H,X.Tools.DumpFramebuffer=Z}}]);