"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[20],{11542:(n,y,H)=>{H.r(y),H.d(y,{Dispose:()=>A,DumpData:()=>b,DumpDataAsync:()=>q,DumpFramebuffer:()=>V,DumpTools:()=>U});var o=H(11408),G=H(11094),h=H(11303),k=H(11149);let i,B=null;async function V(n,y,H,o){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",h=arguments.length>5?arguments[5]:void 0,k=arguments.length>6?arguments[6]:void 0;const i=await H.readPixels(0,0,n,y);b(n,y,new Uint8Array(i.buffer),o,G,h,!0,void 0,k)}async function q(n,y,H){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",G=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0;return await new Promise((B=>{b(n,y,H,(n=>B(n)),o,G,h,k,i)}))}function b(n,y,V,q){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",U=arguments.length>5?arguments[5]:void 0,T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],z=arguments.length>8?arguments[8]:void 0;(async function(){return B||(B=new Promise(((n,y)=>{let G,h=null;const B={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,11446)).then((V=>{let{ThinEngine:q}=V;const b=k.c.Instances.length;try{G=new OffscreenCanvas(100,100),h=new q(G,!1,B)}catch(W){var U;b<k.c.Instances.length&&(null===(U=k.c.Instances.pop())||void 0===U||U.dispose()),G=document.createElement("canvas"),h=new q(G,!1,B)}k.c.Instances.pop(),k.c.OnEnginesDisposedObservable.add((n=>{h&&n!==h&&!h.A&&0===k.c.Instances.length&&A()})),h.getCaps().parallelShaderCompile=void 0;const T=new o.e(h);H.e(52).then(H.bind(H,13884)).then((H=>{let{passPixelShader:k}=H;if(!h)return void y("Engine is not defined");const B=new o.g({Wy:h,name:k.name,fragmentShader:k.shader,samplerNames:["textureSampler"]});i={canvas:G,Wy:h,renderer:T,wrapper:B},n(i)}))})).catch(y)}))),await B})().then((H=>{if(H.Wy.setSize(n,y,!0),V instanceof Float32Array){const n=new Uint8Array(V.length);let y=V.length;for(;y--;){const H=V[y];n[y]=Math.round(255*(0,h.Clamp)(H))}V=n}const o=H.Wy.createRawTexture(V,n,y,5,!1,!T,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",o),H.renderer.draw(),W?G.Tools.ToBlob(H.canvas,(n=>{const y=new FileReader;y.onload=n=>{const y=n.target.result;q&&q(y)},y.readAsArrayBuffer(n)}),b,z):G.Tools.EncodeScreenshotCanvasData(H.canvas,q,b,U,z),o.dispose()}))}function A(){var n;i?(i.wrapper.dispose(),i.renderer.dispose(),i.Wy.dispose()):null===(n=B)||void 0===n||n.then((n=>{n.wrapper.dispose(),n.renderer.dispose(),n.Wy.dispose()}));B=null,i=null}const U={DumpData:b,DumpDataAsync:q,DumpFramebuffer:V,Dispose:A};G.Tools.DumpData=b,G.Tools.DumpDataAsync=q,G.Tools.DumpFramebuffer=V}}]);