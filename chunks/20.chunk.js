"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[20],{12791:(r,O,W)=>{W.r(O),W.d(O,{Dispose:()=>g,DumpData:()=>v,DumpDataAsync:()=>d,DumpFramebuffer:()=>mr,DumpTools:()=>K});var q=W(12691),Q=W(12428),C=W(12602),T=W(12484);let h,J=null;async function mr(r,O,W,q){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,T=arguments.length>6?arguments[6]:void 0;const h=await W.readPixels(0,0,r,O);v(r,O,new Uint8Array(h.buffer),q,Q,C,!0,void 0,T)}async function d(r,O,W){let q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Q=arguments.length>4?arguments[4]:void 0,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],T=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7?arguments[7]:void 0;return await new Promise((J=>{v(r,O,W,(r=>J(r)),q,Q,C,T,h)}))}function v(r,O,mr,d){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",K=arguments.length>5?arguments[5]:void 0,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],P=arguments.length>7&&void 0!==arguments[7]&&arguments[7],b=arguments.length>8?arguments[8]:void 0;(async function(){return J||(J=new Promise(((r,O)=>{let Q,C=null;const J={Ph:!0,depth:!1,dh:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(W.bind(W,12718)).then((mr=>{let{ThinEngine:d}=mr;const v=T.d.Instances.length;try{Q=new OffscreenCanvas(100,100),C=new d(Q,!1,J)}catch(P){var K;v<T.d.Instances.length&&(null===(K=T.d.Instances.pop())||void 0===K||K.dispose()),Q=document.createElement("canvas"),C=new d(Q,!1,J)}T.d.Instances.pop(),T.d.OnEnginesDisposedObservable.add((r=>{C&&r!==C&&!C.J&&0===T.d.Instances.length&&g()})),C.getCaps().parallelShaderCompile=void 0;const U=new q.e(C);W.e(52).then(W.bind(W,15104)).then((W=>{let{passPixelShader:T}=W;if(!C)return void O("Engine is not defined");const J=new q.g({bO:C,name:T.name,fragmentShader:T.shader,samplerNames:["textureSampler"]});h={canvas:Q,bO:C,renderer:U,wrapper:J},r(h)}))})).catch(O)}))),await J})().then((W=>{if(W.bO.setSize(r,O,!0),mr instanceof Float32Array){const r=new Uint8Array(mr.length);let O=mr.length;for(;O--;){const W=mr[O];r[O]=Math.round(255*(0,C.Clamp)(W))}mr=r}const q=W.bO.createRawTexture(mr,r,O,5,!1,!U,1);W.renderer.setViewport(),W.renderer.applyEffectWrapper(W.wrapper),W.wrapper.effect._bindTexture("textureSampler",q),W.renderer.draw(),P?Q.Tools.ToBlob(W.canvas,(r=>{const O=new FileReader;O.onload=r=>{const O=r.target.result;d&&d(O)},O.readAsArrayBuffer(r)}),v,b):Q.Tools.EncodeScreenshotCanvasData(W.canvas,d,v,K,b),q.dispose()}))}function g(){var r;h?(h.wrapper.dispose(),h.renderer.dispose(),h.bO.dispose()):null===(r=J)||void 0===r||r.then((r=>{r.wrapper.dispose(),r.renderer.dispose(),r.bO.dispose()}));J=null,h=null}const K={DumpData:v,DumpDataAsync:d,DumpFramebuffer:mr,Dispose:g};Q.Tools.DumpData=v,Q.Tools.DumpDataAsync=d,Q.Tools.DumpFramebuffer=mr}}]);