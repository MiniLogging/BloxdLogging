"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[20],{12625:(V,h,mV)=>{mV.r(h),mV.d(h,{Dispose:()=>q,DumpData:()=>n,DumpDataAsync:()=>o,DumpFramebuffer:()=>K,DumpTools:()=>x});var t=mV(12518),L=mV(12253),N=mV(12435),A=mV(12300);let k,C=null;async function K(V,h,mV,t){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",N=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const k=await mV.readPixels(0,0,V,h);n(V,h,new Uint8Array(k.buffer),t,L,N,!0,void 0,A)}async function o(V,h,mV){let t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",L=arguments.length>4?arguments[4]:void 0,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],k=arguments.length>7?arguments[7]:void 0;return await new Promise((C=>{n(V,h,mV,(V=>C(V)),t,L,N,A,k)}))}function n(V,h,K,o){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",x=arguments.length>5?arguments[5]:void 0,R=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return C||(C=new Promise(((V,h)=>{let L,N=null;const C={xk:!0,depth:!1,Ck:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(mV.bind(mV,12553)).then((K=>{let{ThinEngine:o}=K;const n=A.b.Instances.length;try{L=new OffscreenCanvas(100,100),N=new o(L,!1,C)}catch(d){var x;n<A.b.Instances.length&&(null===(x=A.b.Instances.pop())||void 0===x||x.dispose()),L=document.createElement("canvas"),N=new o(L,!1,C)}A.b.Instances.pop(),A.b.OnEnginesDisposedObservable.add((V=>{N&&V!==N&&!N.A&&0===A.b.Instances.length&&q()})),N.getCaps().parallelShaderCompile=void 0;const R=new t.e(N);mV.e(52).then(mV.bind(mV,14862)).then((mV=>{let{passPixelShader:A}=mV;if(!N)return void h("Engine is not defined");const C=new t.h({dh:N,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});k={canvas:L,dh:N,renderer:R,wrapper:C},V(k)}))})).catch(h)}))),await C})().then((mV=>{if(mV.dh.setSize(V,h,!0),K instanceof Float32Array){const V=new Uint8Array(K.length);let h=K.length;for(;h--;){const mV=K[h];V[h]=Math.round(255*(0,N.Clamp)(mV))}K=V}const t=mV.dh.createRawTexture(K,V,h,5,!1,!R,1);mV.renderer.setViewport(),mV.renderer.applyEffectWrapper(mV.wrapper),mV.wrapper.effect._bindTexture("textureSampler",t),mV.renderer.draw(),d?L.Tools.ToBlob(mV.canvas,(V=>{const h=new FileReader;h.onload=V=>{const h=V.target.result;o&&o(h)},h.readAsArrayBuffer(V)}),n,s):L.Tools.EncodeScreenshotCanvasData(mV.canvas,o,n,x,s),t.dispose()}))}function q(){var V;k?(k.wrapper.dispose(),k.renderer.dispose(),k.dh.dispose()):null===(V=C)||void 0===V||V.then((V=>{V.wrapper.dispose(),V.renderer.dispose(),V.dh.dispose()}));C=null,k=null}const x={DumpData:n,DumpDataAsync:o,DumpFramebuffer:K,Dispose:q};L.Tools.DumpData=n,L.Tools.DumpDataAsync=o,L.Tools.DumpFramebuffer=K}}]);