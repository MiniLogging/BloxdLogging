"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11433:(Z,x,F)=>{F.r(x),F.d(x,{Dispose:()=>s,DumpData:()=>c,DumpDataAsync:()=>o,DumpFramebuffer:()=>t,DumpTools:()=>J});var u=F(11292),G=F(10994),f=F(11194),Y=F(11037);let j,d=null;async function t(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",f=arguments.length>5?arguments[5]:void 0,Y=arguments.length>6?arguments[6]:void 0;const j=await F.readPixels(0,0,Z,x);c(Z,x,new Uint8Array(j.buffer),u,G,f,!0,void 0,Y)}async function o(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",G=arguments.length>4?arguments[4]:void 0,f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],j=arguments.length>7?arguments[7]:void 0;return await new Promise((d=>{c(Z,x,F,(Z=>d(Z)),u,G,f,Y,j)}))}function c(Z,x,t,o){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",J=arguments.length>5?arguments[5]:void 0,p=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7&&void 0!==arguments[7]&&arguments[7],k=arguments.length>8?arguments[8]:void 0;(async function(){return d||(d=new Promise(((Z,x)=>{let G,f=null;const d={Kf:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(F.bind(F,11325)).then((t=>{let{ThinEngine:o}=t;const c=Y.c.Instances.length;try{G=new OffscreenCanvas(100,100),f=new o(G,!1,d)}catch(U){var J;c<Y.c.Instances.length&&(null===(J=Y.c.Instances.pop())||void 0===J||J.dispose()),G=document.createElement("canvas"),f=new o(G,!1,d)}Y.c.Instances.pop(),Y.c.OnEnginesDisposedObservable.add((Z=>{f&&Z!==f&&!f.J&&0===Y.c.Instances.length&&s()})),f.getCaps().parallelShaderCompile=void 0;const p=new u.c(f);F.e(52).then(F.bind(F,13746)).then((F=>{let{passPixelShader:Y}=F;if(!f)return void x("Engine is not defined");const d=new u.f({Ux:f,name:Y.name,fragmentShader:Y.shader,samplerNames:["textureSampler"]});j={canvas:G,Ux:f,renderer:p,wrapper:d},Z(j)}))})).catch(x)}))),await d})().then((F=>{if(F.Ux.setSize(Z,x,!0),t instanceof Float32Array){const Z=new Uint8Array(t.length);let x=t.length;for(;x--;){const F=t[x];Z[x]=Math.round(255*(0,f.Clamp)(F))}t=Z}const u=F.Ux.createRawTexture(t,Z,x,5,!1,!p,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",u),F.renderer.draw(),U?G.Tools.ToBlob(F.canvas,(Z=>{const x=new FileReader;x.onload=Z=>{const x=Z.target.result;o&&o(x)},x.readAsArrayBuffer(Z)}),c,k):G.Tools.EncodeScreenshotCanvasData(F.canvas,o,c,J,k),u.dispose()}))}function s(){var Z;j?(j.wrapper.dispose(),j.renderer.dispose(),j.Ux.dispose()):null===(Z=d)||void 0===Z||Z.then((Z=>{Z.wrapper.dispose(),Z.renderer.dispose(),Z.Ux.dispose()}));d=null,j=null}const J={DumpData:c,DumpDataAsync:o,DumpFramebuffer:t,Dispose:s};G.Tools.DumpData=c,G.Tools.DumpDataAsync=o,G.Tools.DumpFramebuffer=t}}]);