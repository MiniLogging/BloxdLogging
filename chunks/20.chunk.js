"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11325:(q,S,b)=>{b.r(S),b.d(S,{Dispose:()=>y,DumpData:()=>l,DumpDataAsync:()=>V,DumpFramebuffer:()=>I,DumpTools:()=>R});var z=b(11208),C=b(10921),v=b(11121),U=b(10975);let g,r=null;async function I(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",v=arguments.length>5?arguments[5]:void 0,U=arguments.length>6?arguments[6]:void 0;const g=await b.readPixels(0,0,q,S);l(q,S,new Uint8Array(g.buffer),z,C,v,!0,void 0,U)}async function V(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",C=arguments.length>4?arguments[4]:void 0,v=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=arguments.length>7?arguments[7]:void 0;return await new Promise((r=>{l(q,S,b,(q=>r(q)),z,C,v,U,g)}))}function l(q,S,I,V){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",R=arguments.length>5?arguments[5]:void 0,G=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],H=arguments.length>8?arguments[8]:void 0;(async function(){return r||(r=new Promise(((q,S)=>{let C,v=null;const r={yb:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(b.bind(b,11239)).then((I=>{let{ThinEngine:V}=I;const l=U.b.Instances.length;try{C=new OffscreenCanvas(100,100),v=new V(C,!1,r)}catch(Z){var R;l<U.b.Instances.length&&(null===(R=U.b.Instances.pop())||void 0===R||R.dispose()),C=document.createElement("canvas"),v=new V(C,!1,r)}U.b.Instances.pop(),U.b.OnEnginesDisposedObservable.add((q=>{v&&q!==v&&!v.V&&0===U.b.Instances.length&&y()})),v.getCaps().parallelShaderCompile=void 0;const G=new z.c(v);b.e(52).then(b.bind(b,13605)).then((b=>{let{passPixelShader:U}=b;if(!v)return void S("Engine is not defined");const r=new z.e({lS:v,name:U.name,fragmentShader:U.shader,samplerNames:["textureSampler"]});g={canvas:C,lS:v,renderer:G,wrapper:r},q(g)}))})).catch(S)}))),await r})().then((b=>{if(b.lS.setSize(q,S,!0),I instanceof Float32Array){const q=new Uint8Array(I.length);let S=I.length;for(;S--;){const b=I[S];q[S]=Math.round(255*(0,v.Clamp)(b))}I=q}const z=b.lS.createRawTexture(I,q,S,5,!1,!G,1);b.renderer.setViewport(),b.renderer.applyEffectWrapper(b.wrapper),b.wrapper.effect._bindTexture("textureSampler",z),b.renderer.draw(),Z?C.Tools.ToBlob(b.canvas,(q=>{const S=new FileReader;S.onload=q=>{const S=q.target.result;V&&V(S)},S.readAsArrayBuffer(q)}),l,H):C.Tools.EncodeScreenshotCanvasData(b.canvas,V,l,R,H),z.dispose()}))}function y(){var q;g?(g.wrapper.dispose(),g.renderer.dispose(),g.lS.dispose()):null===(q=r)||void 0===q||q.then((q=>{q.wrapper.dispose(),q.renderer.dispose(),q.lS.dispose()}));r=null,g=null}const R={DumpData:l,DumpDataAsync:V,DumpFramebuffer:I,Dispose:y};C.Tools.DumpData=l,C.Tools.DumpDataAsync=V,C.Tools.DumpFramebuffer=I}}]);