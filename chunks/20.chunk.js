"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[20],{11886:(w,E,G)=>{G.r(E),G.d(E,{Dispose:()=>u,DumpData:()=>O,DumpDataAsync:()=>i,DumpFramebuffer:()=>l,DumpTools:()=>V});var P=G(11776),h=G(11498),B=G(11689),y=G(11543);let x,U=null;async function l(w,E,G,P){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",B=arguments.length>5?arguments[5]:void 0,y=arguments.length>6?arguments[6]:void 0;const x=await G.readPixels(0,0,w,E);O(w,E,new Uint8Array(x.buffer),P,h,B,!0,void 0,y)}async function i(w,E,G){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],x=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{O(w,E,G,(w=>U(w)),P,h,B,y,x)}))}function O(w,E,l,i){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",V=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((w,E)=>{let h,B=null;const U={o:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(G.bind(G,11806)).then((l=>{let{ThinEngine:i}=l;const O=y.e.Instances.length;try{h=new OffscreenCanvas(100,100),B=new i(h,!1,U)}catch(Q){var V;O<y.e.Instances.length&&(null===(V=y.e.Instances.pop())||void 0===V||V.dispose()),h=document.createElement("canvas"),B=new i(h,!1,U)}y.e.Instances.pop(),y.e.OnEnginesDisposedObservable.add((w=>{B&&w!==B&&!B.O&&0===y.e.Instances.length&&u()})),B.getCaps().parallelShaderCompile=void 0;const a=new P.d(B);G.e(52).then(G.bind(G,14044)).then((G=>{let{passPixelShader:y}=G;if(!B)return void E("Engine is not defined");const U=new P.f({aE:B,name:y.name,fragmentShader:y.shader,samplerNames:["textureSampler"]});x={canvas:h,aE:B,renderer:a,wrapper:U},w(x)}))})).catch(E)}))),await U})().then((G=>{if(G.aE.setSize(w,E,!0),l instanceof Float32Array){const w=new Uint8Array(l.length);let E=l.length;for(;E--;){const G=l[E];w[E]=Math.round(255*(0,B.Clamp)(G))}l=w}const P=G.aE.createRawTexture(l,w,E,5,!1,!a,1);G.renderer.setViewport(),G.renderer.applyEffectWrapper(G.wrapper),G.wrapper.effect._bindTexture("textureSampler",P),G.renderer.draw(),Q?h.Tools.ToBlob(G.canvas,(w=>{const E=new FileReader;E.onload=w=>{const E=w.target.result;i&&i(E)},E.readAsArrayBuffer(w)}),O,c):h.Tools.EncodeScreenshotCanvasData(G.canvas,i,O,V,c),P.dispose()}))}function u(){var w;x?(x.wrapper.dispose(),x.renderer.dispose(),x.aE.dispose()):null===(w=U)||void 0===w||w.then((w=>{w.wrapper.dispose(),w.renderer.dispose(),w.aE.dispose()}));U=null,x=null}const V={DumpData:O,DumpDataAsync:i,DumpFramebuffer:l,Dispose:u};h.Tools.DumpData=O,h.Tools.DumpDataAsync=i,h.Tools.DumpFramebuffer=l}}]);