"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[20],{12972:(q,I,l)=>{l.r(I),l.d(I,{Dispose:()=>x,DumpData:()=>r,DumpDataAsync:()=>Z,DumpFramebuffer:()=>s,DumpTools:()=>o});var w=l(12851),t=l(12564),O=l(12761),c=l(12612);let a,F=null;async function s(q,I,l,w){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0;const a=await l.readPixels(0,0,q,I);r(q,I,new Uint8Array(a.buffer),w,t,O,!0,void 0,c)}async function Z(q,I,l){let w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=arguments.length>7?arguments[7]:void 0;return await new Promise((F=>{r(q,I,l,(q=>F(q)),w,t,O,c,a)}))}function r(q,I,s,Z){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",o=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7&&void 0!==arguments[7]&&arguments[7],V=arguments.length>8?arguments[8]:void 0;(async function(){return F||(F=new Promise(((q,I)=>{let t,O=null;const F={oc:!0,depth:!1,cc:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(l.bind(l,12877)).then((s=>{let{ThinEngine:Z}=s;const r=c.e.Instances.length;try{t=new OffscreenCanvas(100,100),O=new Z(t,!1,F)}catch(T){var o;r<c.e.Instances.length&&(null===(o=c.e.Instances.pop())||void 0===o||o.dispose()),t=document.createElement("canvas"),O=new Z(t,!1,F)}c.e.Instances.pop(),c.e.OnEnginesDisposedObservable.add((q=>{O&&q!==O&&!O.Z&&0===c.e.Instances.length&&x()})),O.getCaps().parallelShaderCompile=void 0;const d=new w.b(O);l.e(52).then(l.bind(l,15229)).then((l=>{let{passPixelShader:c}=l;if(!O)return void I("Engine is not defined");const F=new w.f({oI:O,name:c.name,fragmentShader:c.shader,samplerNames:["textureSampler"]});a={canvas:t,oI:O,renderer:d,wrapper:F},q(a)}))})).catch(I)}))),await F})().then((l=>{if(l.oI.setSize(q,I,!0),s instanceof Float32Array){const q=new Uint8Array(s.length);let I=s.length;for(;I--;){const l=s[I];q[I]=Math.round(255*(0,O.Clamp)(l))}s=q}const w=l.oI.createRawTexture(s,q,I,5,!1,!d,1);l.renderer.setViewport(),l.renderer.applyEffectWrapper(l.wrapper),l.wrapper.effect._bindTexture("textureSampler",w),l.renderer.draw(),T?t.Tools.ToBlob(l.canvas,(q=>{const I=new FileReader;I.onload=q=>{const I=q.target.result;Z&&Z(I)},I.readAsArrayBuffer(q)}),r,V):t.Tools.EncodeScreenshotCanvasData(l.canvas,Z,r,o,V),w.dispose()}))}function x(){var q;a?(a.wrapper.dispose(),a.renderer.dispose(),a.oI.dispose()):null===(q=F)||void 0===q||q.then((q=>{q.wrapper.dispose(),q.renderer.dispose(),q.oI.dispose()}));F=null,a=null}const o={DumpData:r,DumpDataAsync:Z,DumpFramebuffer:s,Dispose:x};t.Tools.DumpData=r,t.Tools.DumpDataAsync=Z,t.Tools.DumpFramebuffer=s}}]);