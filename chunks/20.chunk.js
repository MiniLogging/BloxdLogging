"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[20],{12728:(o,v,V)=>{V.r(v),V.d(v,{Dispose:()=>f,DumpData:()=>x,DumpDataAsync:()=>h,DumpFramebuffer:()=>O,DumpTools:()=>l});var g=V(12604),E=V(12291),I=V(12511),Q=V(12339);let U,n=null;async function O(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6?arguments[6]:void 0;const U=await V.readPixels(0,0,o,v);x(o,v,new Uint8Array(U.buffer),g,E,I,!0,void 0,Q)}async function h(o,v,V){let g=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,I=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],U=arguments.length>7?arguments[7]:void 0;return await new Promise((n=>{x(o,v,V,(o=>n(o)),g,E,I,Q,U)}))}function x(o,v,O,h){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",l=arguments.length>5?arguments[5]:void 0,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8?arguments[8]:void 0;(async function(){return n||(n=new Promise(((o,v)=>{let E,I=null;const n={o:!0,depth:!1,Rg:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(V.bind(V,12628)).then((O=>{let{ThinEngine:h}=O;const x=Q.d.Instances.length;try{E=new OffscreenCanvas(100,100),I=new h(E,!1,n)}catch(T){var l;x<Q.d.Instances.length&&(null===(l=Q.d.Instances.pop())||void 0===l||l.dispose()),E=document.createElement("canvas"),I=new h(E,!1,n)}Q.d.Instances.pop(),Q.d.OnEnginesDisposedObservable.add((o=>{I&&o!==I&&!I.l&&0===Q.d.Instances.length&&f()})),I.getCaps().parallelShaderCompile=void 0;const S=new g.b(I);V.e(52).then(V.bind(V,15012)).then((V=>{let{passPixelShader:Q}=V;if(!I)return void v("Engine is not defined");const n=new g.e({Tv:I,name:Q.name,fragmentShader:Q.shader,samplerNames:["textureSampler"]});U={canvas:E,Tv:I,renderer:S,wrapper:n},o(U)}))})).catch(v)}))),await n})().then((V=>{if(V.Tv.setSize(o,v,!0),O instanceof Float32Array){const o=new Uint8Array(O.length);let v=O.length;for(;v--;){const V=O[v];o[v]=Math.round(255*(0,I.Clamp)(V))}O=o}const g=V.Tv.createRawTexture(O,o,v,5,!1,!S,1);V.renderer.setViewport(),V.renderer.applyEffectWrapper(V.wrapper),V.wrapper.effect._bindTexture("textureSampler",g),V.renderer.draw(),T?E.Tools.ToBlob(V.canvas,(o=>{const v=new FileReader;v.onload=o=>{const v=o.target.result;h&&h(v)},v.readAsArrayBuffer(o)}),x,c):E.Tools.EncodeScreenshotCanvasData(V.canvas,h,x,l,c),g.dispose()}))}function f(){var o;U?(U.wrapper.dispose(),U.renderer.dispose(),U.Tv.dispose()):null===(o=n)||void 0===o||o.then((o=>{o.wrapper.dispose(),o.renderer.dispose(),o.Tv.dispose()}));n=null,U=null}const l={DumpData:x,DumpDataAsync:h,DumpFramebuffer:O,Dispose:f};E.Tools.DumpData=x,E.Tools.DumpDataAsync=h,E.Tools.DumpFramebuffer=O}}]);