"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[20],{11381:(g,w,q)=>{q.r(w),q.d(w,{Dispose:()=>e,DumpData:()=>m,DumpDataAsync:()=>t,DumpFramebuffer:()=>z,DumpTools:()=>y});var R=q(11276),o=q(10991),r=q(11195),S=q(11034);let i,T=null;async function z(g,w,q,R){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",r=arguments.length>5?arguments[5]:void 0,S=arguments.length>6?arguments[6]:void 0;const i=await q.readPixels(0,0,g,w);m(g,w,new Uint8Array(i.buffer),R,o,r,!0,void 0,S)}async function t(g,w,q){let R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",o=arguments.length>4?arguments[4]:void 0,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7?arguments[7]:void 0;return await new Promise((T=>{m(g,w,q,(g=>T(g)),R,o,r,S,i)}))}function m(g,w,z,t){let m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",y=arguments.length>5?arguments[5]:void 0,L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8?arguments[8]:void 0;(async function(){return T||(T=new Promise(((g,w)=>{let o,r=null;const T={kS:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(q.bind(q,11294)).then((z=>{let{ThinEngine:t}=z;const m=S.c.Instances.length;try{o=new OffscreenCanvas(100,100),r=new t(o,!1,T)}catch(A){var y;m<S.c.Instances.length&&(null===(y=S.c.Instances.pop())||void 0===y||y.dispose()),o=document.createElement("canvas"),r=new t(o,!1,T)}S.c.Instances.pop(),S.c.OnEnginesDisposedObservable.add((g=>{r&&g!==r&&!r.L&&0===S.c.Instances.length&&e()})),r.getCaps().parallelShaderCompile=void 0;const L=new R.b(r);q.e(52).then(q.bind(q,13605)).then((q=>{let{passPixelShader:S}=q;if(!r)return void w("Engine is not defined");const T=new R.d({mw:r,name:S.name,fragmentShader:S.shader,samplerNames:["textureSampler"]});i={canvas:o,mw:r,renderer:L,wrapper:T},g(i)}))})).catch(w)}))),await T})().then((q=>{if(q.mw.setSize(g,w,!0),z instanceof Float32Array){const g=new Uint8Array(z.length);let w=z.length;for(;w--;){const q=z[w];g[w]=Math.round(255*(0,r.Clamp)(q))}z=g}const R=q.mw.createRawTexture(z,g,w,5,!1,!L,1);q.renderer.setViewport(),q.renderer.applyEffectWrapper(q.wrapper),q.wrapper.effect._bindTexture("textureSampler",R),q.renderer.draw(),A?o.Tools.ToBlob(q.canvas,(g=>{const w=new FileReader;w.onload=g=>{const w=g.target.result;t&&t(w)},w.readAsArrayBuffer(g)}),m,l):o.Tools.EncodeScreenshotCanvasData(q.canvas,t,m,y,l),R.dispose()}))}function e(){var g;i?(i.wrapper.dispose(),i.renderer.dispose(),i.mw.dispose()):null===(g=T)||void 0===g||g.then((g=>{g.wrapper.dispose(),g.renderer.dispose(),g.mw.dispose()}));T=null,i=null}const y={DumpData:m,DumpDataAsync:t,DumpFramebuffer:z,Dispose:e};o.Tools.DumpData=m,o.Tools.DumpDataAsync=t,o.Tools.DumpFramebuffer=z}}]);