"use strict";(self.vfdo5lmva5i=self.vfdo5lmva5i||[]).push([[20],{11936:(w,o,H)=>{H.r(o),H.d(o,{Dispose:()=>z,DumpData:()=>y,DumpDataAsync:()=>A,DumpFramebuffer:()=>L,DumpTools:()=>C});var h=H(11817),E=H(11531),e=H(11729),D=H(11571);let t,X=null;async function L(w,o,H,h){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",e=arguments.length>5?arguments[5]:void 0,D=arguments.length>6?arguments[6]:void 0;const t=await H.readPixels(0,0,w,o);y(w,o,new Uint8Array(t.buffer),h,E,e,!0,void 0,D)}async function A(w,o,H){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",E=arguments.length>4?arguments[4]:void 0,e=arguments.length>5&&void 0!==arguments[5]&&arguments[5],D=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=arguments.length>7?arguments[7]:void 0;return await new Promise((X=>{y(w,o,H,(w=>X(w)),h,E,e,D,t)}))}function y(w,o,L,A){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",C=arguments.length>5?arguments[5]:void 0,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],M=arguments.length>7&&void 0!==arguments[7]&&arguments[7],i=arguments.length>8?arguments[8]:void 0;(async function(){return X||(X=new Promise(((w,o)=>{let E,e=null;const X={Ee:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,11841)).then((L=>{let{ThinEngine:A}=L;const y=D.e.Instances.length;try{E=new OffscreenCanvas(100,100),e=new A(E,!1,X)}catch(M){var C;y<D.e.Instances.length&&(null===(C=D.e.Instances.pop())||void 0===C||C.dispose()),E=document.createElement("canvas"),e=new A(E,!1,X)}D.e.Instances.pop(),D.e.OnEnginesDisposedObservable.add((w=>{e&&w!==e&&!e.A&&0===D.e.Instances.length&&z()})),e.getCaps().parallelShaderCompile=void 0;const Q=new h.c(e);H.e(52).then(H.bind(H,14283)).then((H=>{let{passPixelShader:D}=H;if(!e)return void o("Engine is not defined");const X=new h.d({Mo:e,name:D.name,fragmentShader:D.shader,samplerNames:["textureSampler"]});t={canvas:E,Mo:e,renderer:Q,wrapper:X},w(t)}))})).catch(o)}))),await X})().then((H=>{if(H.Mo.setSize(w,o,!0),L instanceof Float32Array){const w=new Uint8Array(L.length);let o=L.length;for(;o--;){const H=L[o];w[o]=Math.round(255*(0,e.Clamp)(H))}L=w}const h=H.Mo.createRawTexture(L,w,o,5,!1,!Q,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",h),H.renderer.draw(),M?E.Tools.ToBlob(H.canvas,(w=>{const o=new FileReader;o.onload=w=>{const o=w.target.result;A&&A(o)},o.readAsArrayBuffer(w)}),y,i):E.Tools.EncodeScreenshotCanvasData(H.canvas,A,y,C,i),h.dispose()}))}function z(){var w;t?(t.wrapper.dispose(),t.renderer.dispose(),t.Mo.dispose()):null===(w=X)||void 0===w||w.then((w=>{w.wrapper.dispose(),w.renderer.dispose(),w.Mo.dispose()}));X=null,t=null}const C={DumpData:y,DumpDataAsync:A,DumpFramebuffer:L,Dispose:z};E.Tools.DumpData=y,E.Tools.DumpDataAsync=A,E.Tools.DumpFramebuffer=L}}]);