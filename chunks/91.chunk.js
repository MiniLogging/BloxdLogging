"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[91],{13895:(W,F,c)=>{c.r(F),c.d(F,{FlowGraphSetVariableBlock:()=>w});var T=c(642),Y=c(12566),Z=c(12517);class w extends Y.c{constructor(W){if(super(W),!W.variable&&!W.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(W.variables&&W.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(W.variables)for(const F of W.variables)this.registerDataInput(F,Z.c);else this.registerDataInput("value",Z.c)}_execute(W,F){var c,T;if(null!==(c=this.config)&&void 0!==c&&c.variables)for(const Y of this.config.variables)this._saveVariable(W,Y);else this._saveVariable(W,null===(T=this.config)||void 0===T?void 0:T.variable,"value");this.out._activateSignal(W)}_saveVariable(W,F,c){var T;const Y=W._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of Y){const c=W.assetsContext.animationGroups.find((W=>W.uniqueId==w));if(c)for(const T of c.targetedAnimations)if(T.target===W&&T.animation.targetProperty===F){c.stop();const F=Y.indexOf(w);F>-1&&Y.splice(F,1),W._setGlobalContextVariable("currentlyRunningAnimationGroups",Y);break}}const Z=null===(T=this.getDataInput(c||F))||void 0===T?void 0:T.getValue(W);W.setVariable(F,Z)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(W){var F;super.serialize(W),W.config.variable=null===(F=this.config)||void 0===F?void 0:F.variable}}(0,T.h)("FlowGraphSetVariableBlock",w)}}]);