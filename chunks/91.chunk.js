"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[91],{13967:(A,X,s)=>{s.r(X),s.d(X,{FlowGraphSetVariableBlock:()=>g});var N=s(616),f=s(12724),E=s(12677);class g extends f.e{constructor(A){if(super(A),!A.variable&&!A.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(A.variables&&A.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(A.variables)for(const X of A.variables)this.registerDataInput(X,E.b);else this.registerDataInput("value",E.b)}_execute(A,X){var s,N;if(null!==(s=this.config)&&void 0!==s&&s.variables)for(const f of this.config.variables)this._saveVariable(A,f);else this._saveVariable(A,null===(N=this.config)||void 0===N?void 0:N.variable,"value");this.out._activateSignal(A)}_saveVariable(A,X,s){var N;const f=A._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of f){const s=A.assetsContext.animationGroups.find((A=>A.uniqueId==g));if(s)for(const N of s.targetedAnimations)if(N.target===A&&N.animation.targetProperty===X){s.stop();const X=f.indexOf(g);X>-1&&f.splice(X,1),A._setGlobalContextVariable("currentlyRunningAnimationGroups",f);break}}const E=null===(N=this.getDataInput(s||X))||void 0===N?void 0:N.getValue(A);A.setVariable(X,E)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(A){var X;super.serialize(A),A.config.variable=null===(X=this.config)||void 0===X?void 0:X.variable}}(0,N.f)("FlowGraphSetVariableBlock",g)}}]);