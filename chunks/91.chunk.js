"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[91],{14296:(u,F,z)=>{z.r(F),z.d(F,{FlowGraphSetVariableBlock:()=>c});var p=z(668),b=z(13003),R=z(12952);class c extends b.e{constructor(u){if(super(u),!u.variable&&!u.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(u.variables&&u.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(u.variables)for(const F of u.variables)this.registerDataInput(F,R.e);else this.registerDataInput("value",R.e)}_execute(u,F){var z,p;if(null!==(z=this.config)&&void 0!==z&&z.variables)for(const b of this.config.variables)this._saveVariable(u,b);else this._saveVariable(u,null===(p=this.config)||void 0===p?void 0:p.variable,"value");this.out._activateSignal(u)}_saveVariable(u,F,z){var p;const b=u._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const c of b){const z=u.assetsContext.animationGroups.find((u=>u.uniqueId==c));if(z)for(const p of z.targetedAnimations)if(p.target===u&&p.animation.targetProperty===F){z.stop();const F=b.indexOf(c);F>-1&&b.splice(F,1),u._setGlobalContextVariable("currentlyRunningAnimationGroups",b);break}}const R=null===(p=this.getDataInput(z||F))||void 0===p?void 0:p.getValue(u);u.setVariable(F,R)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(u){var F;super.serialize(u),u.config.variable=null===(F=this.config)||void 0===F?void 0:F.variable}}(0,p.h)("FlowGraphSetVariableBlock",c)}}]);