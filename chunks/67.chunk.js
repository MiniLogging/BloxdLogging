"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[67],{13768:(W,F,c)=>{c.d(F,{d:()=>A});var T=c(12543),Y=c(12517);const Z="cachedOperationValue",w="cachedExecutionId";class A extends T.d{constructor(W,F){super(F),this.value=this.registerDataOutput("value",W),this.isValid=this.registerDataOutput("isValid",Y.e)}_updateOutputs(W){const F=W._getExecutionVariable(this,w,-1),c=W._getExecutionVariable(this,Z,null);if(void 0!==c&&null!==c&&F===W.executionId)this.isValid.setValue(!0,W),this.value.setValue(c,W);else try{const F=this._doOperation(W);if(void 0===F||null===F)return void this.isValid.setValue(!1,W);W._setExecutionVariable(this,Z,F),W._setExecutionVariable(this,w,W.executionId),this.value.setValue(F,W),this.isValid.setValue(!0,W)}catch(T){this.isValid.setValue(!1,W)}}}},13878:(W,F,c)=>{c.r(F),c.d(F,{FlowGraphGetPropertyBlock:()=>w});var T=c(12517),Y=c(642),Z=c(13768);class w extends Z.d{constructor(W){super(T.c,W),this.config=W,this.object=this.registerDataInput("object",T.c,W.object),this.propertyName=this.registerDataInput("propertyName",T.c,W.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",T.c)}_doOperation(W){const F=this.customGetFunction.getValue(W);let c;if(F)c=F(this.object.getValue(W),this.propertyName.getValue(W),W);else{const F=this.object.getValue(W),T=this.propertyName.getValue(W);c=F&&T?this._getPropertyValue(F,T):void 0}return c}_getPropertyValue(W,F){const c=F.split(".");let T=W;for(const Y of c)if(T=T[Y],void 0===T)return;return T}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,Y.h)("FlowGraphGetPropertyBlock",w)}}]);