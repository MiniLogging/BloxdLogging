"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[67],{14053:(n,k,T)=>{T.d(k,{b:()=>w});var c=T(12845),K=T(12831);const Q="cachedOperationValue",G="cachedExecutionId";class w extends c.b{constructor(n,k){super(k),this.value=this.registerDataOutput("value",n),this.isValid=this.registerDataOutput("isValid",K.g)}_updateOutputs(n){const k=n._getExecutionVariable(this,G,-1),T=n._getExecutionVariable(this,Q,null);if(void 0!==T&&null!==T&&k===n.executionId)this.isValid.setValue(!0,n),this.value.setValue(T,n);else try{const k=this._doOperation(n);if(void 0===k||null===k)return void this.isValid.setValue(!1,n);n._setExecutionVariable(this,Q,k),n._setExecutionVariable(this,G,n.executionId),this.value.setValue(k,n),this.isValid.setValue(!0,n)}catch(c){this.isValid.setValue(!1,n)}}}},14171:(n,k,T)=>{T.r(k),T.d(k,{FlowGraphGetPropertyBlock:()=>G});var c=T(12831),K=T(675),Q=T(14053);class G extends Q.b{constructor(n){super(c.e,n),this.config=n,this.object=this.registerDataInput("object",c.e,n.object),this.propertyName=this.registerDataInput("propertyName",c.e,n.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",c.e)}_doOperation(n){const k=this.customGetFunction.getValue(n);let T;if(k)T=k(this.object.getValue(n),this.propertyName.getValue(n),n);else{const k=this.object.getValue(n),c=this.propertyName.getValue(n);T=k&&c?this._getPropertyValue(k,c):void 0}return T}_getPropertyValue(n,k){const T=k.split(".");let c=n;for(const K of T)if(c=c[K],void 0===c)return;return c}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,K.f)("FlowGraphGetPropertyBlock",G)}}]);