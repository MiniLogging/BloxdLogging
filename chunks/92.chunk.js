"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[92],{15876:(L,U,x)=>{x.d(U,{e:()=>a});var mL=x(14371),p=x(14348);const G="cachedOperationValue",F="cachedExecutionId";class a extends mL.e{constructor(L,U){super(U),this.value=this.registerDataOutput("value",L),this.isValid=this.registerDataOutput("isValid",p.e)}_updateOutputs(L){const U=L._getExecutionVariable(this,F,-1),x=L._getExecutionVariable(this,G,null);if(void 0!==x&&null!==x&&U===L.executionId)this.isValid.setValue(!0,L),this.value.setValue(x,L);else try{const U=this._doOperation(L);if(void 0===U||null===U)return void this.isValid.setValue(!1,L);L._setExecutionVariable(this,G,U),L._setExecutionVariable(this,F,L.executionId),this.value.setValue(U,L),this.isValid.setValue(!0,L)}catch(mL){this.isValid.setValue(!1,L)}}}},16001:(L,U,x)=>{x.r(U),x.d(U,{FlowGraphGetPropertyBlock:()=>F});var mL=x(14348),p=x(12547),G=x(15876);class F extends G.e{constructor(L){super(mL.c,L),this.config=L,this.object=this.registerDataInput("object",mL.c,L.object),this.propertyName=this.registerDataInput("propertyName",mL.c,L.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",mL.c)}_doOperation(L){const U=this.customGetFunction.getValue(L);let x;if(U)x=U(this.object.getValue(L),this.propertyName.getValue(L),L);else{const U=this.object.getValue(L),mL=this.propertyName.getValue(L);x=U&&mL?this._getPropertyValue(U,mL):void 0}return x}_getPropertyValue(L,U){const x=U.split(".");let mL=L;for(const p of x)if(mL=mL[p],void 0===mL)return;return mL}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,p.d)("FlowGraphGetPropertyBlock",F)}}]);