"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[92],{14408:(B,I,C)=>{C.d(I,{b:()=>L});var M=C(12927),x=C(12901);const y="cachedOperationValue",f="cachedExecutionId";class L extends M.e{constructor(B,I){super(I),this.value=this.registerDataOutput("value",B),this.isValid=this.registerDataOutput("isValid",x.e)}_updateOutputs(B){const I=B._getExecutionVariable(this,f,-1),C=B._getExecutionVariable(this,y,null);if(void 0!==C&&null!==C&&I===B.executionId)this.isValid.setValue(!0,B),this.value.setValue(C,B);else try{const I=this._doOperation(B);if(void 0===I||null===I)return void this.isValid.setValue(!1,B);B._setExecutionVariable(this,y,I),B._setExecutionVariable(this,f,B.executionId),this.value.setValue(I,B),this.isValid.setValue(!0,B)}catch(M){this.isValid.setValue(!1,B)}}}},14544:(B,I,C)=>{C.r(I),C.d(I,{FlowGraphGetPropertyBlock:()=>f});var M=C(12901),x=C(11149),y=C(14408);class f extends y.b{constructor(B){super(M.b,B),this.config=B,this.object=this.registerDataInput("object",M.b,B.object),this.propertyName=this.registerDataInput("propertyName",M.b,B.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",M.b)}_doOperation(B){const I=this.customGetFunction.getValue(B);let C;if(I)C=I(this.object.getValue(B),this.propertyName.getValue(B),B);else{const I=this.object.getValue(B),M=this.propertyName.getValue(B);C=I&&M?this._getPropertyValue(I,M):void 0}return C}_getPropertyValue(B,I){const C=I.split(".");let M=B;for(const x of C)if(M=M[x],void 0===M)return;return M}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,x.h)("FlowGraphGetPropertyBlock",f)}}]);