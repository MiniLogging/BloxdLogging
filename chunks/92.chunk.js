"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[92],{14382:(h,V,i)=>{i.d(V,{d:()=>q});var S=i(12827),l=i(12805);const Y="cachedOperationValue",g="cachedExecutionId";class q extends S.c{constructor(h,V){super(V),this.value=this.registerDataOutput("value",h),this.isValid=this.registerDataOutput("isValid",l.f)}_updateOutputs(h){const V=h._getExecutionVariable(this,g,-1),i=h._getExecutionVariable(this,Y,null);if(void 0!==i&&null!==i&&V===h.executionId)this.isValid.setValue(!0,h),this.value.setValue(i,h);else try{const V=this._doOperation(h);if(void 0===V||null===V)return void this.isValid.setValue(!1,h);h._setExecutionVariable(this,Y,V),h._setExecutionVariable(this,g,h.executionId),this.value.setValue(V,h),this.isValid.setValue(!0,h)}catch(S){this.isValid.setValue(!1,h)}}}},14512:(h,V,i)=>{i.r(V),i.d(V,{FlowGraphGetPropertyBlock:()=>g});var S=i(12805),l=i(11091),Y=i(14382);class g extends Y.d{constructor(h){super(S.c,h),this.config=h,this.object=this.registerDataInput("object",S.c,h.object),this.propertyName=this.registerDataInput("propertyName",S.c,h.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",S.c)}_doOperation(h){const V=this.customGetFunction.getValue(h);let i;if(V)i=V(this.object.getValue(h),this.propertyName.getValue(h),h);else{const V=this.object.getValue(h),S=this.propertyName.getValue(h);i=V&&S?this._getPropertyValue(V,S):void 0}return i}_getPropertyValue(h,V){const i=V.split(".");let S=h;for(const l of i)if(S=S[l],void 0===S)return;return S}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,l.f)("FlowGraphGetPropertyBlock",g)}}]);