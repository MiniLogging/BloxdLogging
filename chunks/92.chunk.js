"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[92],{14476:(Z,x,F)=>{F.d(x,{c:()=>j});var u=F(12977),G=F(12954);const f="cachedOperationValue",Y="cachedExecutionId";class j extends u.e{constructor(Z,x){super(x),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",G.f)}_updateOutputs(Z){const x=Z._getExecutionVariable(this,Y,-1),F=Z._getExecutionVariable(this,f,null);if(void 0!==F&&null!==F&&x===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(F,Z);else try{const x=this._doOperation(Z);if(void 0===x||null===x)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,f,x),Z._setExecutionVariable(this,Y,Z.executionId),this.value.setValue(x,Z),this.isValid.setValue(!0,Z)}catch(u){this.isValid.setValue(!1,Z)}}}},14599:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphGetPropertyBlock:()=>Y});var u=F(12954),G=F(11136),f=F(14476);class Y extends f.c{constructor(Z){super(u.d,Z),this.config=Z,this.object=this.registerDataInput("object",u.d,Z.object),this.propertyName=this.registerDataInput("propertyName",u.d,Z.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",u.d)}_doOperation(Z){const x=this.customGetFunction.getValue(Z);let F;if(x)F=x(this.object.getValue(Z),this.propertyName.getValue(Z),Z);else{const x=this.object.getValue(Z),u=this.propertyName.getValue(Z);F=x&&u?this._getPropertyValue(x,u):void 0}return F}_getPropertyValue(Z,x){const F=x.split(".");let u=Z;for(const G of F)if(u=u[G],void 0===u)return;return u}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,G.g)("FlowGraphGetPropertyBlock",Y)}}]);