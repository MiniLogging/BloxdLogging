"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[92],{14410:(P,f,Y)=>{Y.d(f,{c:()=>o});var C=Y(12947),q=Y(12917);const m="cachedOperationValue",L="cachedExecutionId";class o extends C.b{constructor(P,f){super(f),this.value=this.registerDataOutput("value",P),this.isValid=this.registerDataOutput("isValid",q.e)}_updateOutputs(P){const f=P._getExecutionVariable(this,L,-1),Y=P._getExecutionVariable(this,m,null);if(void 0!==Y&&null!==Y&&f===P.executionId)this.isValid.setValue(!0,P),this.value.setValue(Y,P);else try{const f=this._doOperation(P);if(void 0===f||null===f)return void this.isValid.setValue(!1,P);P._setExecutionVariable(this,m,f),P._setExecutionVariable(this,L,P.executionId),this.value.setValue(f,P),this.isValid.setValue(!0,P)}catch(C){this.isValid.setValue(!1,P)}}}},14550:(P,f,Y)=>{Y.r(f),Y.d(f,{FlowGraphGetPropertyBlock:()=>L});var C=Y(12917),q=Y(11134),m=Y(14410);class L extends m.c{constructor(P){super(C.d,P),this.config=P,this.object=this.registerDataInput("object",C.d,P.object),this.propertyName=this.registerDataInput("propertyName",C.d,P.propertyName),this.customGetFunction=this.registerDataInput("customGetFunction",C.d)}_doOperation(P){const f=this.customGetFunction.getValue(P);let Y;if(f)Y=f(this.object.getValue(P),this.propertyName.getValue(P),P);else{const f=this.object.getValue(P),C=this.propertyName.getValue(P);Y=f&&C?this._getPropertyValue(f,C):void 0}return Y}_getPropertyValue(P,f){const Y=f.split(".");let C=P;for(const q of Y)if(C=C[q],void 0===C)return;return C}getClassName(){return"FlowGraphGetPropertyBlock"}}(0,q.d)("FlowGraphGetPropertyBlock",L)}}]);