"use strict";(self.vfdo5lmva5i=self.vfdo5lmva5i||[]).push([[50],{14267:(w,o,H)=>{H.r(o),H.d(o,{_TGATextureLoader:()=>t});var h=H(11551);function E(w){let o=0;return{id_length:w[o++],colormap_type:w[o++],image_type:w[o++],colormap_index:w[o++]|w[o++]<<8,colormap_length:w[o++]|w[o++]<<8,colormap_size:w[o++],origin:[w[o++]|w[o++]<<8,w[o++]|w[o++]<<8],width:w[o++]|w[o++]<<8,height:w[o++]|w[o++]<<8,pixel_size:w[o++],flags:w[o++]}}function e(w,o){if(o.length<19)return void h.d.Error("Unable to load TGA file - Not enough data to contain header");let H=18;const e=E(o);if(e.id_length+H>o.length)return void h.d.Error("Unable to load TGA file - Not enough data");H+=e.id_length;let t,X=!1,L=!1,A=!1;switch(e.image_type){case 9:X=!0;case 1:L=!0;break;case 10:X=!0;case 2:break;case 11:X=!0;case 3:A=!0}const y=e.pixel_size>>3,z=e.width*e.height*y;let C,Q,M,i,s,V,r;if(L&&(C=o.subarray(H,H+=e.colormap_length*(e.colormap_size>>3))),X){let w,h,E;t=new Uint8Array(z);let e=0;const D=new Uint8Array(y);for(;H<z&&e<z;)if(w=o[H++],h=1+(127&w),128&w){for(E=0;E<y;++E)D[E]=o[H++];for(E=0;E<h;++E)t.set(D,e+E*y);e+=y*h}else{for(h*=y,E=0;E<h;++E)t[e+E]=o[H++];e+=h}}else t=o.subarray(H,H+=L?e.width*e.height:z);switch((48&e.flags)>>4){default:case 2:Q=0,i=1,r=e.width,M=0,s=1,V=e.height;break;case 0:Q=0,i=1,r=e.width,M=e.height-1,s=-1,V=-1;break;case 3:Q=e.width-1,i=-1,r=-1,M=0,s=1,V=e.height;break;case 1:Q=e.width-1,i=-1,r=-1,M=e.height-1,s=-1,V=-1}const k="_getImageData"+(A?"Grey":"")+e.pixel_size+"bits",P=D[k](e,C,t,M,s,V,Q,i,r);w.getEngine()._uploadDataToTextureDirectly(w,P)}const D={GetTGAHeader:E,UploadContent:e,_getImageData8bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=o,y=w.width,z=w.height;let C,Q,M,i=0;const s=new Uint8Array(y*z*4);for(M=h;M!==e;M+=E)for(Q=D;Q!==X;Q+=t,i++)C=L[i],s[4*(Q+y*M)+3]=255,s[4*(Q+y*M)+2]=A[3*C+0],s[4*(Q+y*M)+1]=A[3*C+1],s[4*(Q+y*M)+0]=A[3*C+2];return s},_getImageData16bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=w.width,y=w.height;let z,C,Q,M=0;const i=new Uint8Array(A*y*4);for(Q=h;Q!==e;Q+=E)for(C=D;C!==X;C+=t,M+=2){z=L[M+0]+(L[M+1]<<8);const w=255*((31744&z)>>10)/31|0,o=255*((992&z)>>5)/31|0,H=255*(31&z)/31|0;i[4*(C+A*Q)+0]=w,i[4*(C+A*Q)+1]=o,i[4*(C+A*Q)+2]=H,i[4*(C+A*Q)+3]=32768&z?0:255}return i},_getImageData24bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=w.width,y=w.height;let z,C,Q=0;const M=new Uint8Array(A*y*4);for(C=h;C!==e;C+=E)for(z=D;z!==X;z+=t,Q+=3)M[4*(z+A*C)+3]=255,M[4*(z+A*C)+2]=L[Q+0],M[4*(z+A*C)+1]=L[Q+1],M[4*(z+A*C)+0]=L[Q+2];return M},_getImageData32bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=w.width,y=w.height;let z,C,Q=0;const M=new Uint8Array(A*y*4);for(C=h;C!==e;C+=E)for(z=D;z!==X;z+=t,Q+=4)M[4*(z+A*C)+2]=L[Q+0],M[4*(z+A*C)+1]=L[Q+1],M[4*(z+A*C)+0]=L[Q+2],M[4*(z+A*C)+3]=L[Q+3];return M},_getImageDataGrey8bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=w.width,y=w.height;let z,C,Q,M=0;const i=new Uint8Array(A*y*4);for(Q=h;Q!==e;Q+=E)for(C=D;C!==X;C+=t,M++)z=L[M],i[4*(C+A*Q)+0]=z,i[4*(C+A*Q)+1]=z,i[4*(C+A*Q)+2]=z,i[4*(C+A*Q)+3]=255;return i},_getImageDataGrey16bits:function(w,o,H,h,E,e,D,t,X){const L=H,A=w.width,y=w.height;let z,C,Q=0;const M=new Uint8Array(A*y*4);for(C=h;C!==e;C+=E)for(z=D;z!==X;z+=t,Q+=2)M[4*(z+A*C)+0]=L[Q+0],M[4*(z+A*C)+1]=L[Q+0],M[4*(z+A*C)+2]=L[Q+0],M[4*(z+A*C)+3]=L[Q+1];return M}};class t{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(w,o,H){const h=new Uint8Array(w.buffer,w.byteOffset,w.byteLength),D=E(h);H(D.width,D.height,o.generateMipMaps,!1,(()=>{e(o,h)}))}}}}]);