"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[50],{15497:(B,u,F)=>{F.r(u),F.d(u,{_TGATextureLoader:()=>R});var Z=F(12822);function V(B){let u=0;return{id_length:B[u++],colormap_type:B[u++],image_type:B[u++],colormap_index:B[u++]|B[u++]<<8,colormap_length:B[u++]|B[u++]<<8,colormap_size:B[u++],origin:[B[u++]|B[u++]<<8,B[u++]|B[u++]<<8],width:B[u++]|B[u++]<<8,height:B[u++]|B[u++]<<8,pixel_size:B[u++],flags:B[u++]}}function p(B,u){if(u.length<19)return void Z.d.Error("Unable to load TGA file - Not enough data to contain header");let F=18;const p=V(u);if(p.id_length+F>u.length)return void Z.d.Error("Unable to load TGA file - Not enough data");F+=p.id_length;let R,e=!1,s=!1,Y=!1;switch(p.image_type){case 9:e=!0;case 1:s=!0;break;case 10:e=!0;case 2:break;case 11:e=!0;case 3:Y=!0}const Q=p.pixel_size>>3,t=p.width*p.height*Q;let v,D,L,q,W,X,f;if(s&&(v=u.subarray(F,F+=p.colormap_length*(p.colormap_size>>3))),e){let B,Z,V;R=new Uint8Array(t);let p=0;const G=new Uint8Array(Q);for(;F<t&&p<t;)if(B=u[F++],Z=1+(127&B),128&B){for(V=0;V<Q;++V)G[V]=u[F++];for(V=0;V<Z;++V)R.set(G,p+V*Q);p+=Q*Z}else{for(Z*=Q,V=0;V<Z;++V)R[p+V]=u[F++];p+=Z}}else R=u.subarray(F,F+=s?p.width*p.height:t);switch((48&p.flags)>>4){default:case 2:D=0,q=1,f=p.width,L=0,W=1,X=p.height;break;case 0:D=0,q=1,f=p.width,L=p.height-1,W=-1,X=-1;break;case 3:D=p.width-1,q=-1,f=-1,L=0,W=1,X=p.height;break;case 1:D=p.width-1,q=-1,f=-1,L=p.height-1,W=-1,X=-1}const C="_getImageData"+(Y?"Grey":"")+p.pixel_size+"bits",x=G[C](p,v,R,L,W,X,D,q,f);B.getEngine()._uploadDataToTextureDirectly(B,x)}const G={GetTGAHeader:V,UploadContent:p,_getImageData8bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=u,Q=B.width,t=B.height;let v,D,L,q=0;const W=new Uint8Array(Q*t*4);for(L=Z;L!==p;L+=V)for(D=G;D!==e;D+=R,q++)v=s[q],W[4*(D+Q*L)+3]=255,W[4*(D+Q*L)+2]=Y[3*v+0],W[4*(D+Q*L)+1]=Y[3*v+1],W[4*(D+Q*L)+0]=Y[3*v+2];return W},_getImageData16bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=B.width,Q=B.height;let t,v,D,L=0;const q=new Uint8Array(Y*Q*4);for(D=Z;D!==p;D+=V)for(v=G;v!==e;v+=R,L+=2){t=s[L+0]+(s[L+1]<<8);const B=255*((31744&t)>>10)/31|0,u=255*((992&t)>>5)/31|0,F=255*(31&t)/31|0;q[4*(v+Y*D)+0]=B,q[4*(v+Y*D)+1]=u,q[4*(v+Y*D)+2]=F,q[4*(v+Y*D)+3]=32768&t?0:255}return q},_getImageData24bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=B.width,Q=B.height;let t,v,D=0;const L=new Uint8Array(Y*Q*4);for(v=Z;v!==p;v+=V)for(t=G;t!==e;t+=R,D+=3)L[4*(t+Y*v)+3]=255,L[4*(t+Y*v)+2]=s[D+0],L[4*(t+Y*v)+1]=s[D+1],L[4*(t+Y*v)+0]=s[D+2];return L},_getImageData32bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=B.width,Q=B.height;let t,v,D=0;const L=new Uint8Array(Y*Q*4);for(v=Z;v!==p;v+=V)for(t=G;t!==e;t+=R,D+=4)L[4*(t+Y*v)+2]=s[D+0],L[4*(t+Y*v)+1]=s[D+1],L[4*(t+Y*v)+0]=s[D+2],L[4*(t+Y*v)+3]=s[D+3];return L},_getImageDataGrey8bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=B.width,Q=B.height;let t,v,D,L=0;const q=new Uint8Array(Y*Q*4);for(D=Z;D!==p;D+=V)for(v=G;v!==e;v+=R,L++)t=s[L],q[4*(v+Y*D)+0]=t,q[4*(v+Y*D)+1]=t,q[4*(v+Y*D)+2]=t,q[4*(v+Y*D)+3]=255;return q},_getImageDataGrey16bits:function(B,u,F,Z,V,p,G,R,e){const s=F,Y=B.width,Q=B.height;let t,v,D=0;const L=new Uint8Array(Y*Q*4);for(v=Z;v!==p;v+=V)for(t=G;t!==e;t+=R,D+=2)L[4*(t+Y*v)+0]=s[D+0],L[4*(t+Y*v)+1]=s[D+0],L[4*(t+Y*v)+2]=s[D+0],L[4*(t+Y*v)+3]=s[D+1];return L}};class R{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(B,u,F){const Z=new Uint8Array(B.buffer,B.byteOffset,B.byteLength),G=V(Z);F(G.width,G.height,u.generateMipMaps,!1,(()=>{p(u,Z)}))}}}}]);