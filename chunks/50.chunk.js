"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[50],{14626:(t,U,y)=>{y.r(U),y.d(U,{_TGATextureLoader:()=>X});var I=y(12221);function r(t){let U=0;return{id_length:t[U++],colormap_type:t[U++],image_type:t[U++],colormap_index:t[U++]|t[U++]<<8,colormap_length:t[U++]|t[U++]<<8,colormap_size:t[U++],origin:[t[U++]|t[U++]<<8,t[U++]|t[U++]<<8],width:t[U++]|t[U++]<<8,height:t[U++]|t[U++]<<8,pixel_size:t[U++],flags:t[U++]}}function Y(t,U){if(U.length<19)return void I.b.Error("Unable to load TGA file - Not enough data to contain header");let y=18;const Y=r(U);if(Y.id_length+y>U.length)return void I.b.Error("Unable to load TGA file - Not enough data");y+=Y.id_length;let X,P=!1,G=!1,M=!1;switch(Y.image_type){case 9:P=!0;case 1:G=!0;break;case 10:P=!0;case 2:break;case 11:P=!0;case 3:M=!0}const L=Y.pixel_size>>3,h=Y.width*Y.height*L;let Q,F,E,w,D,l,g;if(G&&(Q=U.subarray(y,y+=Y.colormap_length*(Y.colormap_size>>3))),P){let t,I,r;X=new Uint8Array(h);let Y=0;const mt=new Uint8Array(L);for(;y<h&&Y<h;)if(t=U[y++],I=1+(127&t),128&t){for(r=0;r<L;++r)mt[r]=U[y++];for(r=0;r<I;++r)X.set(mt,Y+r*L);Y+=L*I}else{for(I*=L,r=0;r<I;++r)X[Y+r]=U[y++];Y+=I}}else X=U.subarray(y,y+=G?Y.width*Y.height:h);switch((48&Y.flags)>>4){default:case 2:F=0,w=1,g=Y.width,E=0,D=1,l=Y.height;break;case 0:F=0,w=1,g=Y.width,E=Y.height-1,D=-1,l=-1;break;case 3:F=Y.width-1,w=-1,g=-1,E=0,D=1,l=Y.height;break;case 1:F=Y.width-1,w=-1,g=-1,E=Y.height-1,D=-1,l=-1}const B="_getImageData"+(M?"Grey":"")+Y.pixel_size+"bits",b=mt[B](Y,Q,X,E,D,l,F,w,g);t.getEngine()._uploadDataToTextureDirectly(t,b)}const mt={GetTGAHeader:r,UploadContent:Y,_getImageData8bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=U,L=t.width,h=t.height;let Q,F,E,w=0;const D=new Uint8Array(L*h*4);for(E=I;E!==Y;E+=r)for(F=mt;F!==P;F+=X,w++)Q=G[w],D[4*(F+L*E)+3]=255,D[4*(F+L*E)+2]=M[3*Q+0],D[4*(F+L*E)+1]=M[3*Q+1],D[4*(F+L*E)+0]=M[3*Q+2];return D},_getImageData16bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=t.width,L=t.height;let h,Q,F,E=0;const w=new Uint8Array(M*L*4);for(F=I;F!==Y;F+=r)for(Q=mt;Q!==P;Q+=X,E+=2){h=G[E+0]+(G[E+1]<<8);const t=255*((31744&h)>>10)/31|0,U=255*((992&h)>>5)/31|0,y=255*(31&h)/31|0;w[4*(Q+M*F)+0]=t,w[4*(Q+M*F)+1]=U,w[4*(Q+M*F)+2]=y,w[4*(Q+M*F)+3]=32768&h?0:255}return w},_getImageData24bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=t.width,L=t.height;let h,Q,F=0;const E=new Uint8Array(M*L*4);for(Q=I;Q!==Y;Q+=r)for(h=mt;h!==P;h+=X,F+=3)E[4*(h+M*Q)+3]=255,E[4*(h+M*Q)+2]=G[F+0],E[4*(h+M*Q)+1]=G[F+1],E[4*(h+M*Q)+0]=G[F+2];return E},_getImageData32bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=t.width,L=t.height;let h,Q,F=0;const E=new Uint8Array(M*L*4);for(Q=I;Q!==Y;Q+=r)for(h=mt;h!==P;h+=X,F+=4)E[4*(h+M*Q)+2]=G[F+0],E[4*(h+M*Q)+1]=G[F+1],E[4*(h+M*Q)+0]=G[F+2],E[4*(h+M*Q)+3]=G[F+3];return E},_getImageDataGrey8bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=t.width,L=t.height;let h,Q,F,E=0;const w=new Uint8Array(M*L*4);for(F=I;F!==Y;F+=r)for(Q=mt;Q!==P;Q+=X,E++)h=G[E],w[4*(Q+M*F)+0]=h,w[4*(Q+M*F)+1]=h,w[4*(Q+M*F)+2]=h,w[4*(Q+M*F)+3]=255;return w},_getImageDataGrey16bits:function(t,U,y,I,r,Y,mt,X,P){const G=y,M=t.width,L=t.height;let h,Q,F=0;const E=new Uint8Array(M*L*4);for(Q=I;Q!==Y;Q+=r)for(h=mt;h!==P;h+=X,F+=2)E[4*(h+M*Q)+0]=G[F+0],E[4*(h+M*Q)+1]=G[F+0],E[4*(h+M*Q)+2]=G[F+0],E[4*(h+M*Q)+3]=G[F+1];return E}};class X{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,U,y){const I=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),mt=r(I);y(mt.width,mt.height,U.generateMipMaps,!1,(()=>{Y(U,I)}))}}}}]);