"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[50],{15020:(z,u,U)=>{U.r(u),U.d(u,{_TGATextureLoader:()=>w});var J=U(12760);function v(z){let u=0;return{id_length:z[u++],colormap_type:z[u++],image_type:z[u++],colormap_index:z[u++]|z[u++]<<8,colormap_length:z[u++]|z[u++]<<8,colormap_size:z[u++],origin:[z[u++]|z[u++]<<8,z[u++]|z[u++]<<8],width:z[u++]|z[u++]<<8,height:z[u++]|z[u++]<<8,pixel_size:z[u++],flags:z[u++]}}function f(z,u){if(u.length<19)return void J.d.Error("Unable to load TGA file - Not enough data to contain header");let U=18;const f=v(u);if(f.id_length+U>u.length)return void J.d.Error("Unable to load TGA file - Not enough data");U+=f.id_length;let w,P=!1,R=!1,S=!1;switch(f.image_type){case 9:P=!0;case 1:R=!0;break;case 10:P=!0;case 2:break;case 11:P=!0;case 3:S=!0}const d=f.pixel_size>>3,mz=f.width*f.height*d;let Z,A,E,C,r,M,T;if(R&&(Z=u.subarray(U,U+=f.colormap_length*(f.colormap_size>>3))),P){let z,J,v;w=new Uint8Array(mz);let f=0;const g=new Uint8Array(d);for(;U<mz&&f<mz;)if(z=u[U++],J=1+(127&z),128&z){for(v=0;v<d;++v)g[v]=u[U++];for(v=0;v<J;++v)w.set(g,f+v*d);f+=d*J}else{for(J*=d,v=0;v<J;++v)w[f+v]=u[U++];f+=J}}else w=u.subarray(U,U+=R?f.width*f.height:mz);switch((48&f.flags)>>4){default:case 2:A=0,C=1,T=f.width,E=0,r=1,M=f.height;break;case 0:A=0,C=1,T=f.width,E=f.height-1,r=-1,M=-1;break;case 3:A=f.width-1,C=-1,T=-1,E=0,r=1,M=f.height;break;case 1:A=f.width-1,C=-1,T=-1,E=f.height-1,r=-1,M=-1}const X="_getImageData"+(S?"Grey":"")+f.pixel_size+"bits",h=g[X](f,Z,w,E,r,M,A,C,T);z.getEngine()._uploadDataToTextureDirectly(z,h)}const g={GetTGAHeader:v,UploadContent:f,_getImageData8bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=u,d=z.width,mz=z.height;let Z,A,E,C=0;const r=new Uint8Array(d*mz*4);for(E=J;E!==f;E+=v)for(A=g;A!==P;A+=w,C++)Z=R[C],r[4*(A+d*E)+3]=255,r[4*(A+d*E)+2]=S[3*Z+0],r[4*(A+d*E)+1]=S[3*Z+1],r[4*(A+d*E)+0]=S[3*Z+2];return r},_getImageData16bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=z.width,d=z.height;let mz,Z,A,E=0;const C=new Uint8Array(S*d*4);for(A=J;A!==f;A+=v)for(Z=g;Z!==P;Z+=w,E+=2){mz=R[E+0]+(R[E+1]<<8);const z=255*((31744&mz)>>10)/31|0,u=255*((992&mz)>>5)/31|0,U=255*(31&mz)/31|0;C[4*(Z+S*A)+0]=z,C[4*(Z+S*A)+1]=u,C[4*(Z+S*A)+2]=U,C[4*(Z+S*A)+3]=32768&mz?0:255}return C},_getImageData24bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=z.width,d=z.height;let mz,Z,A=0;const E=new Uint8Array(S*d*4);for(Z=J;Z!==f;Z+=v)for(mz=g;mz!==P;mz+=w,A+=3)E[4*(mz+S*Z)+3]=255,E[4*(mz+S*Z)+2]=R[A+0],E[4*(mz+S*Z)+1]=R[A+1],E[4*(mz+S*Z)+0]=R[A+2];return E},_getImageData32bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=z.width,d=z.height;let mz,Z,A=0;const E=new Uint8Array(S*d*4);for(Z=J;Z!==f;Z+=v)for(mz=g;mz!==P;mz+=w,A+=4)E[4*(mz+S*Z)+2]=R[A+0],E[4*(mz+S*Z)+1]=R[A+1],E[4*(mz+S*Z)+0]=R[A+2],E[4*(mz+S*Z)+3]=R[A+3];return E},_getImageDataGrey8bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=z.width,d=z.height;let mz,Z,A,E=0;const C=new Uint8Array(S*d*4);for(A=J;A!==f;A+=v)for(Z=g;Z!==P;Z+=w,E++)mz=R[E],C[4*(Z+S*A)+0]=mz,C[4*(Z+S*A)+1]=mz,C[4*(Z+S*A)+2]=mz,C[4*(Z+S*A)+3]=255;return C},_getImageDataGrey16bits:function(z,u,U,J,v,f,g,w,P){const R=U,S=z.width,d=z.height;let mz,Z,A=0;const E=new Uint8Array(S*d*4);for(Z=J;Z!==f;Z+=v)for(mz=g;mz!==P;mz+=w,A+=2)E[4*(mz+S*Z)+0]=R[A+0],E[4*(mz+S*Z)+1]=R[A+0],E[4*(mz+S*Z)+2]=R[A+0],E[4*(mz+S*Z)+3]=R[A+1];return E}};class w{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(z,u,U){const J=new Uint8Array(z.buffer,z.byteOffset,z.byteLength),g=v(J);U(g.width,g.height,u.generateMipMaps,!1,(()=>{f(u,J)}))}}}}]);