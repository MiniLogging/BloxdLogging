"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[50],{13591:(g,w,q)=>{q.r(w),q.d(w,{_TGATextureLoader:()=>i});var R=q(11011);function o(g){let w=0;return{id_length:g[w++],colormap_type:g[w++],image_type:g[w++],colormap_index:g[w++]|g[w++]<<8,colormap_length:g[w++]|g[w++]<<8,colormap_size:g[w++],origin:[g[w++]|g[w++]<<8,g[w++]|g[w++]<<8],width:g[w++]|g[w++]<<8,height:g[w++]|g[w++]<<8,pixel_size:g[w++],flags:g[w++]}}function r(g,w){if(w.length<19)return void R.d.Error("Unable to load TGA file - Not enough data to contain header");let q=18;const r=o(w);if(r.id_length+q>w.length)return void R.d.Error("Unable to load TGA file - Not enough data");q+=r.id_length;let i,T=!1,z=!1,t=!1;switch(r.image_type){case 9:T=!0;case 1:z=!0;break;case 10:T=!0;case 2:break;case 11:T=!0;case 3:t=!0}const m=r.pixel_size>>3,e=r.width*r.height*m;let y,L,A,l,J,x,G;if(z&&(y=w.subarray(q,q+=r.colormap_length*(r.colormap_size>>3))),T){let g,R,o;i=new Uint8Array(e);let r=0;const S=new Uint8Array(m);for(;q<e&&r<e;)if(g=w[q++],R=1+(127&g),128&g){for(o=0;o<m;++o)S[o]=w[q++];for(o=0;o<R;++o)i.set(S,r+o*m);r+=m*R}else{for(R*=m,o=0;o<R;++o)i[r+o]=w[q++];r+=R}}else i=w.subarray(q,q+=z?r.width*r.height:e);switch((48&r.flags)>>4){default:case 2:L=0,l=1,G=r.width,A=0,J=1,x=r.height;break;case 0:L=0,l=1,G=r.width,A=r.height-1,J=-1,x=-1;break;case 3:L=r.width-1,l=-1,G=-1,A=0,J=1,x=r.height;break;case 1:L=r.width-1,l=-1,G=-1,A=r.height-1,J=-1,x=-1}const d="_getImageData"+(t?"Grey":"")+r.pixel_size+"bits",D=S[d](r,y,i,A,J,x,L,l,G);g.getEngine()._uploadDataToTextureDirectly(g,D)}const S={GetTGAHeader:o,UploadContent:r,_getImageData8bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=w,m=g.width,e=g.height;let y,L,A,l=0;const J=new Uint8Array(m*e*4);for(A=R;A!==r;A+=o)for(L=S;L!==T;L+=i,l++)y=z[l],J[4*(L+m*A)+3]=255,J[4*(L+m*A)+2]=t[3*y+0],J[4*(L+m*A)+1]=t[3*y+1],J[4*(L+m*A)+0]=t[3*y+2];return J},_getImageData16bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=g.width,m=g.height;let e,y,L,A=0;const l=new Uint8Array(t*m*4);for(L=R;L!==r;L+=o)for(y=S;y!==T;y+=i,A+=2){e=z[A+0]+(z[A+1]<<8);const g=255*((31744&e)>>10)/31|0,w=255*((992&e)>>5)/31|0,q=255*(31&e)/31|0;l[4*(y+t*L)+0]=g,l[4*(y+t*L)+1]=w,l[4*(y+t*L)+2]=q,l[4*(y+t*L)+3]=32768&e?0:255}return l},_getImageData24bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=g.width,m=g.height;let e,y,L=0;const A=new Uint8Array(t*m*4);for(y=R;y!==r;y+=o)for(e=S;e!==T;e+=i,L+=3)A[4*(e+t*y)+3]=255,A[4*(e+t*y)+2]=z[L+0],A[4*(e+t*y)+1]=z[L+1],A[4*(e+t*y)+0]=z[L+2];return A},_getImageData32bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=g.width,m=g.height;let e,y,L=0;const A=new Uint8Array(t*m*4);for(y=R;y!==r;y+=o)for(e=S;e!==T;e+=i,L+=4)A[4*(e+t*y)+2]=z[L+0],A[4*(e+t*y)+1]=z[L+1],A[4*(e+t*y)+0]=z[L+2],A[4*(e+t*y)+3]=z[L+3];return A},_getImageDataGrey8bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=g.width,m=g.height;let e,y,L,A=0;const l=new Uint8Array(t*m*4);for(L=R;L!==r;L+=o)for(y=S;y!==T;y+=i,A++)e=z[A],l[4*(y+t*L)+0]=e,l[4*(y+t*L)+1]=e,l[4*(y+t*L)+2]=e,l[4*(y+t*L)+3]=255;return l},_getImageDataGrey16bits:function(g,w,q,R,o,r,S,i,T){const z=q,t=g.width,m=g.height;let e,y,L=0;const A=new Uint8Array(t*m*4);for(y=R;y!==r;y+=o)for(e=S;e!==T;e+=i,L+=2)A[4*(e+t*y)+0]=z[L+0],A[4*(e+t*y)+1]=z[L+0],A[4*(e+t*y)+2]=z[L+0],A[4*(e+t*y)+3]=z[L+1];return A}};class i{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(g,w,q){const R=new Uint8Array(g.buffer,g.byteOffset,g.byteLength),S=o(R);q(S.width,S.height,w.generateMipMaps,!1,(()=>{r(w,R)}))}}}}]);