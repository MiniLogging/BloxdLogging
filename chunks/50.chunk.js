"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[50],{14621:(L,r,p)=>{p.r(r),p.d(r,{_TGATextureLoader:()=>z});var J=p(11975);function i(L){let r=0;return{id_length:L[r++],colormap_type:L[r++],image_type:L[r++],colormap_index:L[r++]|L[r++]<<8,colormap_length:L[r++]|L[r++]<<8,colormap_size:L[r++],origin:[L[r++]|L[r++]<<8,L[r++]|L[r++]<<8],width:L[r++]|L[r++]<<8,height:L[r++]|L[r++]<<8,pixel_size:L[r++],flags:L[r++]}}function n(L,r){if(r.length<19)return void J.d.Error("Unable to load TGA file - Not enough data to contain header");let p=18;const n=i(r);if(n.id_length+p>r.length)return void J.d.Error("Unable to load TGA file - Not enough data");p+=n.id_length;let z,G=!1,C=!1,t=!1;switch(n.image_type){case 9:G=!0;case 1:C=!0;break;case 10:G=!0;case 2:break;case 11:G=!0;case 3:t=!0}const E=n.pixel_size>>3,x=n.width*n.height*E;let w,g,b,c,P,O,h;if(C&&(w=r.subarray(p,p+=n.colormap_length*(n.colormap_size>>3))),G){let L,J,i;z=new Uint8Array(x);let n=0;const j=new Uint8Array(E);for(;p<x&&n<x;)if(L=r[p++],J=1+(127&L),128&L){for(i=0;i<E;++i)j[i]=r[p++];for(i=0;i<J;++i)z.set(j,n+i*E);n+=E*J}else{for(J*=E,i=0;i<J;++i)z[n+i]=r[p++];n+=J}}else z=r.subarray(p,p+=C?n.width*n.height:x);switch((48&n.flags)>>4){default:case 2:g=0,c=1,h=n.width,b=0,P=1,O=n.height;break;case 0:g=0,c=1,h=n.width,b=n.height-1,P=-1,O=-1;break;case 3:g=n.width-1,c=-1,h=-1,b=0,P=1,O=n.height;break;case 1:g=n.width-1,c=-1,h=-1,b=n.height-1,P=-1,O=-1}const U="_getImageData"+(t?"Grey":"")+n.pixel_size+"bits",W=j[U](n,w,z,b,P,O,g,c,h);L.getEngine()._uploadDataToTextureDirectly(L,W)}const j={GetTGAHeader:i,UploadContent:n,_getImageData8bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=r,E=L.width,x=L.height;let w,g,b,c=0;const P=new Uint8Array(E*x*4);for(b=J;b!==n;b+=i)for(g=j;g!==G;g+=z,c++)w=C[c],P[4*(g+E*b)+3]=255,P[4*(g+E*b)+2]=t[3*w+0],P[4*(g+E*b)+1]=t[3*w+1],P[4*(g+E*b)+0]=t[3*w+2];return P},_getImageData16bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=L.width,E=L.height;let x,w,g,b=0;const c=new Uint8Array(t*E*4);for(g=J;g!==n;g+=i)for(w=j;w!==G;w+=z,b+=2){x=C[b+0]+(C[b+1]<<8);const L=255*((31744&x)>>10)/31|0,r=255*((992&x)>>5)/31|0,p=255*(31&x)/31|0;c[4*(w+t*g)+0]=L,c[4*(w+t*g)+1]=r,c[4*(w+t*g)+2]=p,c[4*(w+t*g)+3]=32768&x?0:255}return c},_getImageData24bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=L.width,E=L.height;let x,w,g=0;const b=new Uint8Array(t*E*4);for(w=J;w!==n;w+=i)for(x=j;x!==G;x+=z,g+=3)b[4*(x+t*w)+3]=255,b[4*(x+t*w)+2]=C[g+0],b[4*(x+t*w)+1]=C[g+1],b[4*(x+t*w)+0]=C[g+2];return b},_getImageData32bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=L.width,E=L.height;let x,w,g=0;const b=new Uint8Array(t*E*4);for(w=J;w!==n;w+=i)for(x=j;x!==G;x+=z,g+=4)b[4*(x+t*w)+2]=C[g+0],b[4*(x+t*w)+1]=C[g+1],b[4*(x+t*w)+0]=C[g+2],b[4*(x+t*w)+3]=C[g+3];return b},_getImageDataGrey8bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=L.width,E=L.height;let x,w,g,b=0;const c=new Uint8Array(t*E*4);for(g=J;g!==n;g+=i)for(w=j;w!==G;w+=z,b++)x=C[b],c[4*(w+t*g)+0]=x,c[4*(w+t*g)+1]=x,c[4*(w+t*g)+2]=x,c[4*(w+t*g)+3]=255;return c},_getImageDataGrey16bits:function(L,r,p,J,i,n,j,z,G){const C=p,t=L.width,E=L.height;let x,w,g=0;const b=new Uint8Array(t*E*4);for(w=J;w!==n;w+=i)for(x=j;x!==G;x+=z,g+=2)b[4*(x+t*w)+0]=C[g+0],b[4*(x+t*w)+1]=C[g+0],b[4*(x+t*w)+2]=C[g+0],b[4*(x+t*w)+3]=C[g+1];return b}};class z{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(L,r,p){const J=new Uint8Array(L.buffer,L.byteOffset,L.byteLength),j=i(J);p(j.width,j.height,r.generateMipMaps,!1,(()=>{n(r,J)}))}}}}]);