"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[50],{14190:(M,p,b)=>{b.r(p),b.d(p,{_TGATextureLoader:()=>u});var Q=b(11637);function q(M){let p=0;return{id_length:M[p++],colormap_type:M[p++],image_type:M[p++],colormap_index:M[p++]|M[p++]<<8,colormap_length:M[p++]|M[p++]<<8,colormap_size:M[p++],origin:[M[p++]|M[p++]<<8,M[p++]|M[p++]<<8],width:M[p++]|M[p++]<<8,height:M[p++]|M[p++]<<8,pixel_size:M[p++],flags:M[p++]}}function B(M,p){if(p.length<19)return void Q.c.Error("Unable to load TGA file - Not enough data to contain header");let b=18;const B=q(p);if(B.id_length+b>p.length)return void Q.c.Error("Unable to load TGA file - Not enough data");b+=B.id_length;let u,T=!1,O=!1,H=!1;switch(B.image_type){case 9:T=!0;case 1:O=!0;break;case 10:T=!0;case 2:break;case 11:T=!0;case 3:H=!0}const F=B.pixel_size>>3,o=B.width*B.height*F;let W,i,A,j,K,D,a;if(O&&(W=p.subarray(b,b+=B.colormap_length*(B.colormap_size>>3))),T){let M,Q,q;u=new Uint8Array(o);let B=0;const k=new Uint8Array(F);for(;b<o&&B<o;)if(M=p[b++],Q=1+(127&M),128&M){for(q=0;q<F;++q)k[q]=p[b++];for(q=0;q<Q;++q)u.set(k,B+q*F);B+=F*Q}else{for(Q*=F,q=0;q<Q;++q)u[B+q]=p[b++];B+=Q}}else u=p.subarray(b,b+=O?B.width*B.height:o);switch((48&B.flags)>>4){default:case 2:i=0,j=1,a=B.width,A=0,K=1,D=B.height;break;case 0:i=0,j=1,a=B.width,A=B.height-1,K=-1,D=-1;break;case 3:i=B.width-1,j=-1,a=-1,A=0,K=1,D=B.height;break;case 1:i=B.width-1,j=-1,a=-1,A=B.height-1,K=-1,D=-1}const s="_getImageData"+(H?"Grey":"")+B.pixel_size+"bits",S=k[s](B,W,u,A,K,D,i,j,a);M.getEngine()._uploadDataToTextureDirectly(M,S)}const k={GetTGAHeader:q,UploadContent:B,_getImageData8bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=p,F=M.width,o=M.height;let W,i,A,j=0;const K=new Uint8Array(F*o*4);for(A=Q;A!==B;A+=q)for(i=k;i!==T;i+=u,j++)W=O[j],K[4*(i+F*A)+3]=255,K[4*(i+F*A)+2]=H[3*W+0],K[4*(i+F*A)+1]=H[3*W+1],K[4*(i+F*A)+0]=H[3*W+2];return K},_getImageData16bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=M.width,F=M.height;let o,W,i,A=0;const j=new Uint8Array(H*F*4);for(i=Q;i!==B;i+=q)for(W=k;W!==T;W+=u,A+=2){o=O[A+0]+(O[A+1]<<8);const M=255*((31744&o)>>10)/31|0,p=255*((992&o)>>5)/31|0,b=255*(31&o)/31|0;j[4*(W+H*i)+0]=M,j[4*(W+H*i)+1]=p,j[4*(W+H*i)+2]=b,j[4*(W+H*i)+3]=32768&o?0:255}return j},_getImageData24bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=M.width,F=M.height;let o,W,i=0;const A=new Uint8Array(H*F*4);for(W=Q;W!==B;W+=q)for(o=k;o!==T;o+=u,i+=3)A[4*(o+H*W)+3]=255,A[4*(o+H*W)+2]=O[i+0],A[4*(o+H*W)+1]=O[i+1],A[4*(o+H*W)+0]=O[i+2];return A},_getImageData32bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=M.width,F=M.height;let o,W,i=0;const A=new Uint8Array(H*F*4);for(W=Q;W!==B;W+=q)for(o=k;o!==T;o+=u,i+=4)A[4*(o+H*W)+2]=O[i+0],A[4*(o+H*W)+1]=O[i+1],A[4*(o+H*W)+0]=O[i+2],A[4*(o+H*W)+3]=O[i+3];return A},_getImageDataGrey8bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=M.width,F=M.height;let o,W,i,A=0;const j=new Uint8Array(H*F*4);for(i=Q;i!==B;i+=q)for(W=k;W!==T;W+=u,A++)o=O[A],j[4*(W+H*i)+0]=o,j[4*(W+H*i)+1]=o,j[4*(W+H*i)+2]=o,j[4*(W+H*i)+3]=255;return j},_getImageDataGrey16bits:function(M,p,b,Q,q,B,k,u,T){const O=b,H=M.width,F=M.height;let o,W,i=0;const A=new Uint8Array(H*F*4);for(W=Q;W!==B;W+=q)for(o=k;o!==T;o+=u,i+=2)A[4*(o+H*W)+0]=O[i+0],A[4*(o+H*W)+1]=O[i+0],A[4*(o+H*W)+2]=O[i+0],A[4*(o+H*W)+3]=O[i+1];return A}};class u{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(M,p,b){const Q=new Uint8Array(M.buffer,M.byteOffset,M.byteLength),k=q(Q);b(k.width,k.height,p.generateMipMaps,!1,(()=>{B(p,Q)}))}}}}]);