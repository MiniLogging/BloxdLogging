"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[50],{14198:(K,O,F)=>{F.r(O),F.d(O,{_TGATextureLoader:()=>J});var f=F(11534);function r(K){let O=0;return{id_length:K[O++],colormap_type:K[O++],image_type:K[O++],colormap_index:K[O++]|K[O++]<<8,colormap_length:K[O++]|K[O++]<<8,colormap_size:K[O++],origin:[K[O++]|K[O++]<<8,K[O++]|K[O++]<<8],width:K[O++]|K[O++]<<8,height:K[O++]|K[O++]<<8,pixel_size:K[O++],flags:K[O++]}}function l(K,O){if(O.length<19)return void f.c.Error("Unable to load TGA file - Not enough data to contain header");let F=18;const l=r(O);if(l.id_length+F>O.length)return void f.c.Error("Unable to load TGA file - Not enough data");F+=l.id_length;let J,c=!1,E=!1,M=!1;switch(l.image_type){case 9:c=!0;case 1:E=!0;break;case 10:c=!0;case 2:break;case 11:c=!0;case 3:M=!0}const t=l.pixel_size>>3,j=l.width*l.height*t;let X,u,T,o,k,N,Z;if(E&&(X=O.subarray(F,F+=l.colormap_length*(l.colormap_size>>3))),c){let K,f,r;J=new Uint8Array(j);let l=0;const q=new Uint8Array(t);for(;F<j&&l<j;)if(K=O[F++],f=1+(127&K),128&K){for(r=0;r<t;++r)q[r]=O[F++];for(r=0;r<f;++r)J.set(q,l+r*t);l+=t*f}else{for(f*=t,r=0;r<f;++r)J[l+r]=O[F++];l+=f}}else J=O.subarray(F,F+=E?l.width*l.height:j);switch((48&l.flags)>>4){default:case 2:u=0,o=1,Z=l.width,T=0,k=1,N=l.height;break;case 0:u=0,o=1,Z=l.width,T=l.height-1,k=-1,N=-1;break;case 3:u=l.width-1,o=-1,Z=-1,T=0,k=1,N=l.height;break;case 1:u=l.width-1,o=-1,Z=-1,T=l.height-1,k=-1,N=-1}const L="_getImageData"+(M?"Grey":"")+l.pixel_size+"bits",d=q[L](l,X,J,T,k,N,u,o,Z);K.getEngine()._uploadDataToTextureDirectly(K,d)}const q={GetTGAHeader:r,UploadContent:l,_getImageData8bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=O,t=K.width,j=K.height;let X,u,T,o=0;const k=new Uint8Array(t*j*4);for(T=f;T!==l;T+=r)for(u=q;u!==c;u+=J,o++)X=E[o],k[4*(u+t*T)+3]=255,k[4*(u+t*T)+2]=M[3*X+0],k[4*(u+t*T)+1]=M[3*X+1],k[4*(u+t*T)+0]=M[3*X+2];return k},_getImageData16bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=K.width,t=K.height;let j,X,u,T=0;const o=new Uint8Array(M*t*4);for(u=f;u!==l;u+=r)for(X=q;X!==c;X+=J,T+=2){j=E[T+0]+(E[T+1]<<8);const K=255*((31744&j)>>10)/31|0,O=255*((992&j)>>5)/31|0,F=255*(31&j)/31|0;o[4*(X+M*u)+0]=K,o[4*(X+M*u)+1]=O,o[4*(X+M*u)+2]=F,o[4*(X+M*u)+3]=32768&j?0:255}return o},_getImageData24bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=K.width,t=K.height;let j,X,u=0;const T=new Uint8Array(M*t*4);for(X=f;X!==l;X+=r)for(j=q;j!==c;j+=J,u+=3)T[4*(j+M*X)+3]=255,T[4*(j+M*X)+2]=E[u+0],T[4*(j+M*X)+1]=E[u+1],T[4*(j+M*X)+0]=E[u+2];return T},_getImageData32bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=K.width,t=K.height;let j,X,u=0;const T=new Uint8Array(M*t*4);for(X=f;X!==l;X+=r)for(j=q;j!==c;j+=J,u+=4)T[4*(j+M*X)+2]=E[u+0],T[4*(j+M*X)+1]=E[u+1],T[4*(j+M*X)+0]=E[u+2],T[4*(j+M*X)+3]=E[u+3];return T},_getImageDataGrey8bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=K.width,t=K.height;let j,X,u,T=0;const o=new Uint8Array(M*t*4);for(u=f;u!==l;u+=r)for(X=q;X!==c;X+=J,T++)j=E[T],o[4*(X+M*u)+0]=j,o[4*(X+M*u)+1]=j,o[4*(X+M*u)+2]=j,o[4*(X+M*u)+3]=255;return o},_getImageDataGrey16bits:function(K,O,F,f,r,l,q,J,c){const E=F,M=K.width,t=K.height;let j,X,u=0;const T=new Uint8Array(M*t*4);for(X=f;X!==l;X+=r)for(j=q;j!==c;j+=J,u+=2)T[4*(j+M*X)+0]=E[u+0],T[4*(j+M*X)+1]=E[u+0],T[4*(j+M*X)+2]=E[u+0],T[4*(j+M*X)+3]=E[u+1];return T}};class J{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(K,O,F){const f=new Uint8Array(K.buffer,K.byteOffset,K.byteLength),q=r(f);F(q.width,q.height,O.generateMipMaps,!1,(()=>{l(O,f)}))}}}}]);