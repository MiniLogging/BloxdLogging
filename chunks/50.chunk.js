"use strict";(self.fjf2z1c8il8=self.fjf2z1c8il8||[]).push([[50],{15008:(g,i,a)=>{a.r(i),a.d(i,{_TGATextureLoader:()=>k});var n=a(12292);function L(g){let i=0;return{id_length:g[i++],colormap_type:g[i++],image_type:g[i++],colormap_index:g[i++]|g[i++]<<8,colormap_length:g[i++]|g[i++]<<8,colormap_size:g[i++],origin:[g[i++]|g[i++]<<8,g[i++]|g[i++]<<8],width:g[i++]|g[i++]<<8,height:g[i++]|g[i++]<<8,pixel_size:g[i++],flags:g[i++]}}function d(g,i){if(i.length<19)return void n.b.Error("Unable to load TGA file - Not enough data to contain header");let a=18;const d=L(i);if(d.id_length+a>i.length)return void n.b.Error("Unable to load TGA file - Not enough data");a+=d.id_length;let k,e=!1,N=!1,F=!1;switch(d.image_type){case 9:e=!0;case 1:N=!0;break;case 10:e=!0;case 2:break;case 11:e=!0;case 3:F=!0}const I=d.pixel_size>>3,j=d.width*d.height*I;let y,B,c,D,p,R,x;if(N&&(y=i.subarray(a,a+=d.colormap_length*(d.colormap_size>>3))),e){let g,n,L;k=new Uint8Array(j);let d=0;const b=new Uint8Array(I);for(;a<j&&d<j;)if(g=i[a++],n=1+(127&g),128&g){for(L=0;L<I;++L)b[L]=i[a++];for(L=0;L<n;++L)k.set(b,d+L*I);d+=I*n}else{for(n*=I,L=0;L<n;++L)k[d+L]=i[a++];d+=n}}else k=i.subarray(a,a+=N?d.width*d.height:j);switch((48&d.flags)>>4){default:case 2:B=0,D=1,x=d.width,c=0,p=1,R=d.height;break;case 0:B=0,D=1,x=d.width,c=d.height-1,p=-1,R=-1;break;case 3:B=d.width-1,D=-1,x=-1,c=0,p=1,R=d.height;break;case 1:B=d.width-1,D=-1,x=-1,c=d.height-1,p=-1,R=-1}const E="_getImageData"+(F?"Grey":"")+d.pixel_size+"bits",X=b[E](d,y,k,c,p,R,B,D,x);g.getEngine()._uploadDataToTextureDirectly(g,X)}const b={GetTGAHeader:L,UploadContent:d,_getImageData8bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=i,I=g.width,j=g.height;let y,B,c,D=0;const p=new Uint8Array(I*j*4);for(c=n;c!==d;c+=L)for(B=b;B!==e;B+=k,D++)y=N[D],p[4*(B+I*c)+3]=255,p[4*(B+I*c)+2]=F[3*y+0],p[4*(B+I*c)+1]=F[3*y+1],p[4*(B+I*c)+0]=F[3*y+2];return p},_getImageData16bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=g.width,I=g.height;let j,y,B,c=0;const D=new Uint8Array(F*I*4);for(B=n;B!==d;B+=L)for(y=b;y!==e;y+=k,c+=2){j=N[c+0]+(N[c+1]<<8);const g=255*((31744&j)>>10)/31|0,i=255*((992&j)>>5)/31|0,a=255*(31&j)/31|0;D[4*(y+F*B)+0]=g,D[4*(y+F*B)+1]=i,D[4*(y+F*B)+2]=a,D[4*(y+F*B)+3]=32768&j?0:255}return D},_getImageData24bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=g.width,I=g.height;let j,y,B=0;const c=new Uint8Array(F*I*4);for(y=n;y!==d;y+=L)for(j=b;j!==e;j+=k,B+=3)c[4*(j+F*y)+3]=255,c[4*(j+F*y)+2]=N[B+0],c[4*(j+F*y)+1]=N[B+1],c[4*(j+F*y)+0]=N[B+2];return c},_getImageData32bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=g.width,I=g.height;let j,y,B=0;const c=new Uint8Array(F*I*4);for(y=n;y!==d;y+=L)for(j=b;j!==e;j+=k,B+=4)c[4*(j+F*y)+2]=N[B+0],c[4*(j+F*y)+1]=N[B+1],c[4*(j+F*y)+0]=N[B+2],c[4*(j+F*y)+3]=N[B+3];return c},_getImageDataGrey8bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=g.width,I=g.height;let j,y,B,c=0;const D=new Uint8Array(F*I*4);for(B=n;B!==d;B+=L)for(y=b;y!==e;y+=k,c++)j=N[c],D[4*(y+F*B)+0]=j,D[4*(y+F*B)+1]=j,D[4*(y+F*B)+2]=j,D[4*(y+F*B)+3]=255;return D},_getImageDataGrey16bits:function(g,i,a,n,L,d,b,k,e){const N=a,F=g.width,I=g.height;let j,y,B=0;const c=new Uint8Array(F*I*4);for(y=n;y!==d;y+=L)for(j=b;j!==e;j+=k,B+=2)c[4*(j+F*y)+0]=N[B+0],c[4*(j+F*y)+1]=N[B+0],c[4*(j+F*y)+2]=N[B+0],c[4*(j+F*y)+3]=N[B+1];return c}};class k{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(g,i,a){const n=new Uint8Array(g.buffer,g.byteOffset,g.byteLength),b=L(n);a(b.width,b.height,i.generateMipMaps,!1,(()=>{d(i,n)}))}}}}]);