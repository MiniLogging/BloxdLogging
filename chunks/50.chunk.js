"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[50],{13766:(H,O,S)=>{S.r(O),S.d(O,{_TGATextureLoader:()=>U});var t=S(11151);function q(H){let O=0;return{id_length:H[O++],colormap_type:H[O++],image_type:H[O++],colormap_index:H[O++]|H[O++]<<8,colormap_length:H[O++]|H[O++]<<8,colormap_size:H[O++],origin:[H[O++]|H[O++]<<8,H[O++]|H[O++]<<8],width:H[O++]|H[O++]<<8,height:H[O++]|H[O++]<<8,pixel_size:H[O++],flags:H[O++]}}function p(H,O){if(O.length<19)return void t.b.Error("Unable to load TGA file - Not enough data to contain header");let S=18;const p=q(O);if(p.id_length+S>O.length)return void t.b.Error("Unable to load TGA file - Not enough data");S+=p.id_length;let U,V=!1,w=!1,o=!1;switch(p.image_type){case 9:V=!0;case 1:w=!0;break;case 10:V=!0;case 2:break;case 11:V=!0;case 3:o=!0}const h=p.pixel_size>>3,a=p.width*p.height*h;let j,e,X,E,y,T,K;if(w&&(j=O.subarray(S,S+=p.colormap_length*(p.colormap_size>>3))),V){let H,t,q;U=new Uint8Array(a);let p=0;const G=new Uint8Array(h);for(;S<a&&p<a;)if(H=O[S++],t=1+(127&H),128&H){for(q=0;q<h;++q)G[q]=O[S++];for(q=0;q<t;++q)U.set(G,p+q*h);p+=h*t}else{for(t*=h,q=0;q<t;++q)U[p+q]=O[S++];p+=t}}else U=O.subarray(S,S+=w?p.width*p.height:a);switch((48&p.flags)>>4){default:case 2:e=0,E=1,K=p.width,X=0,y=1,T=p.height;break;case 0:e=0,E=1,K=p.width,X=p.height-1,y=-1,T=-1;break;case 3:e=p.width-1,E=-1,K=-1,X=0,y=1,T=p.height;break;case 1:e=p.width-1,E=-1,K=-1,X=p.height-1,y=-1,T=-1}const b="_getImageData"+(o?"Grey":"")+p.pixel_size+"bits",D=G[b](p,j,U,X,y,T,e,E,K);H.getEngine()._uploadDataToTextureDirectly(H,D)}const G={GetTGAHeader:q,UploadContent:p,_getImageData8bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=O,h=H.width,a=H.height;let j,e,X,E=0;const y=new Uint8Array(h*a*4);for(X=t;X!==p;X+=q)for(e=G;e!==V;e+=U,E++)j=w[E],y[4*(e+h*X)+3]=255,y[4*(e+h*X)+2]=o[3*j+0],y[4*(e+h*X)+1]=o[3*j+1],y[4*(e+h*X)+0]=o[3*j+2];return y},_getImageData16bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=H.width,h=H.height;let a,j,e,X=0;const E=new Uint8Array(o*h*4);for(e=t;e!==p;e+=q)for(j=G;j!==V;j+=U,X+=2){a=w[X+0]+(w[X+1]<<8);const H=255*((31744&a)>>10)/31|0,O=255*((992&a)>>5)/31|0,S=255*(31&a)/31|0;E[4*(j+o*e)+0]=H,E[4*(j+o*e)+1]=O,E[4*(j+o*e)+2]=S,E[4*(j+o*e)+3]=32768&a?0:255}return E},_getImageData24bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=H.width,h=H.height;let a,j,e=0;const X=new Uint8Array(o*h*4);for(j=t;j!==p;j+=q)for(a=G;a!==V;a+=U,e+=3)X[4*(a+o*j)+3]=255,X[4*(a+o*j)+2]=w[e+0],X[4*(a+o*j)+1]=w[e+1],X[4*(a+o*j)+0]=w[e+2];return X},_getImageData32bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=H.width,h=H.height;let a,j,e=0;const X=new Uint8Array(o*h*4);for(j=t;j!==p;j+=q)for(a=G;a!==V;a+=U,e+=4)X[4*(a+o*j)+2]=w[e+0],X[4*(a+o*j)+1]=w[e+1],X[4*(a+o*j)+0]=w[e+2],X[4*(a+o*j)+3]=w[e+3];return X},_getImageDataGrey8bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=H.width,h=H.height;let a,j,e,X=0;const E=new Uint8Array(o*h*4);for(e=t;e!==p;e+=q)for(j=G;j!==V;j+=U,X++)a=w[X],E[4*(j+o*e)+0]=a,E[4*(j+o*e)+1]=a,E[4*(j+o*e)+2]=a,E[4*(j+o*e)+3]=255;return E},_getImageDataGrey16bits:function(H,O,S,t,q,p,G,U,V){const w=S,o=H.width,h=H.height;let a,j,e=0;const X=new Uint8Array(o*h*4);for(j=t;j!==p;j+=q)for(a=G;a!==V;a+=U,e+=2)X[4*(a+o*j)+0]=w[e+0],X[4*(a+o*j)+1]=w[e+0],X[4*(a+o*j)+2]=w[e+0],X[4*(a+o*j)+3]=w[e+1];return X}};class U{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(H,O,S){const t=new Uint8Array(H.buffer,H.byteOffset,H.byteLength),G=q(t);S(G.width,G.height,O.generateMipMaps,!1,(()=>{p(O,t)}))}}}}]);