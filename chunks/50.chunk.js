"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[50],{15388:(h,R,l)=>{l.r(R),l.d(R,{_TGATextureLoader:()=>F});var j=l(12711);function a(h){let R=0;return{id_length:h[R++],colormap_type:h[R++],image_type:h[R++],colormap_index:h[R++]|h[R++]<<8,colormap_length:h[R++]|h[R++]<<8,colormap_size:h[R++],origin:[h[R++]|h[R++]<<8,h[R++]|h[R++]<<8],width:h[R++]|h[R++]<<8,height:h[R++]|h[R++]<<8,pixel_size:h[R++],flags:h[R++]}}function D(h,R){if(R.length<19)return void j.c.Error("Unable to load TGA file - Not enough data to contain header");let l=18;const D=a(R);if(D.id_length+l>R.length)return void j.c.Error("Unable to load TGA file - Not enough data");l+=D.id_length;let F,w=!1,mh=!1,u=!1;switch(D.image_type){case 9:w=!0;case 1:mh=!0;break;case 10:w=!0;case 2:break;case 11:w=!0;case 3:u=!0}const c=D.pixel_size>>3,J=D.width*D.height*c;let q,Q,Y,s,t,f,T;if(mh&&(q=R.subarray(l,l+=D.colormap_length*(D.colormap_size>>3))),w){let h,j,a;F=new Uint8Array(J);let D=0;const U=new Uint8Array(c);for(;l<J&&D<J;)if(h=R[l++],j=1+(127&h),128&h){for(a=0;a<c;++a)U[a]=R[l++];for(a=0;a<j;++a)F.set(U,D+a*c);D+=c*j}else{for(j*=c,a=0;a<j;++a)F[D+a]=R[l++];D+=j}}else F=R.subarray(l,l+=mh?D.width*D.height:J);switch((48&D.flags)>>4){default:case 2:Q=0,s=1,T=D.width,Y=0,t=1,f=D.height;break;case 0:Q=0,s=1,T=D.width,Y=D.height-1,t=-1,f=-1;break;case 3:Q=D.width-1,s=-1,T=-1,Y=0,t=1,f=D.height;break;case 1:Q=D.width-1,s=-1,T=-1,Y=D.height-1,t=-1,f=-1}const E="_getImageData"+(u?"Grey":"")+D.pixel_size+"bits",x=U[E](D,q,F,Y,t,f,Q,s,T);h.getEngine()._uploadDataToTextureDirectly(h,x)}const U={GetTGAHeader:a,UploadContent:D,_getImageData8bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=R,c=h.width,J=h.height;let q,Q,Y,s=0;const t=new Uint8Array(c*J*4);for(Y=j;Y!==D;Y+=a)for(Q=U;Q!==w;Q+=F,s++)q=mh[s],t[4*(Q+c*Y)+3]=255,t[4*(Q+c*Y)+2]=u[3*q+0],t[4*(Q+c*Y)+1]=u[3*q+1],t[4*(Q+c*Y)+0]=u[3*q+2];return t},_getImageData16bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=h.width,c=h.height;let J,q,Q,Y=0;const s=new Uint8Array(u*c*4);for(Q=j;Q!==D;Q+=a)for(q=U;q!==w;q+=F,Y+=2){J=mh[Y+0]+(mh[Y+1]<<8);const h=255*((31744&J)>>10)/31|0,R=255*((992&J)>>5)/31|0,l=255*(31&J)/31|0;s[4*(q+u*Q)+0]=h,s[4*(q+u*Q)+1]=R,s[4*(q+u*Q)+2]=l,s[4*(q+u*Q)+3]=32768&J?0:255}return s},_getImageData24bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=h.width,c=h.height;let J,q,Q=0;const Y=new Uint8Array(u*c*4);for(q=j;q!==D;q+=a)for(J=U;J!==w;J+=F,Q+=3)Y[4*(J+u*q)+3]=255,Y[4*(J+u*q)+2]=mh[Q+0],Y[4*(J+u*q)+1]=mh[Q+1],Y[4*(J+u*q)+0]=mh[Q+2];return Y},_getImageData32bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=h.width,c=h.height;let J,q,Q=0;const Y=new Uint8Array(u*c*4);for(q=j;q!==D;q+=a)for(J=U;J!==w;J+=F,Q+=4)Y[4*(J+u*q)+2]=mh[Q+0],Y[4*(J+u*q)+1]=mh[Q+1],Y[4*(J+u*q)+0]=mh[Q+2],Y[4*(J+u*q)+3]=mh[Q+3];return Y},_getImageDataGrey8bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=h.width,c=h.height;let J,q,Q,Y=0;const s=new Uint8Array(u*c*4);for(Q=j;Q!==D;Q+=a)for(q=U;q!==w;q+=F,Y++)J=mh[Y],s[4*(q+u*Q)+0]=J,s[4*(q+u*Q)+1]=J,s[4*(q+u*Q)+2]=J,s[4*(q+u*Q)+3]=255;return s},_getImageDataGrey16bits:function(h,R,l,j,a,D,U,F,w){const mh=l,u=h.width,c=h.height;let J,q,Q=0;const Y=new Uint8Array(u*c*4);for(q=j;q!==D;q+=a)for(J=U;J!==w;J+=F,Q+=2)Y[4*(J+u*q)+0]=mh[Q+0],Y[4*(J+u*q)+1]=mh[Q+0],Y[4*(J+u*q)+2]=mh[Q+0],Y[4*(J+u*q)+3]=mh[Q+1];return Y}};class F{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(h,R,l){const j=new Uint8Array(h.buffer,h.byteOffset,h.byteLength),U=a(j);l(U.width,U.height,R.generateMipMaps,!1,(()=>{D(R,j)}))}}}}]);