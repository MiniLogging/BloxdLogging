"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[50],{13582:(I,E,j)=>{j.r(E),j.d(E,{_TGATextureLoader:()=>t});var e=j(10974);function w(I){let E=0;return{id_length:I[E++],colormap_type:I[E++],image_type:I[E++],colormap_index:I[E++]|I[E++]<<8,colormap_length:I[E++]|I[E++]<<8,colormap_size:I[E++],origin:[I[E++]|I[E++]<<8,I[E++]|I[E++]<<8],width:I[E++]|I[E++]<<8,height:I[E++]|I[E++]<<8,pixel_size:I[E++],flags:I[E++]}}function z(I,E){if(E.length<19)return void e.b.Error("Unable to load TGA file - Not enough data to contain header");let j=18;const z=w(E);if(z.id_length+j>E.length)return void e.b.Error("Unable to load TGA file - Not enough data");j+=z.id_length;let t,U=!1,R=!1,P=!1;switch(z.image_type){case 9:U=!0;case 1:R=!0;break;case 10:U=!0;case 2:break;case 11:U=!0;case 3:P=!0}const o=z.pixel_size>>3,Z=z.width*z.height*o;let c,K,L,F,C,X,q;if(R&&(c=E.subarray(j,j+=z.colormap_length*(z.colormap_size>>3))),U){let I,e,w;t=new Uint8Array(Z);let z=0;const h=new Uint8Array(o);for(;j<Z&&z<Z;)if(I=E[j++],e=1+(127&I),128&I){for(w=0;w<o;++w)h[w]=E[j++];for(w=0;w<e;++w)t.set(h,z+w*o);z+=o*e}else{for(e*=o,w=0;w<e;++w)t[z+w]=E[j++];z+=e}}else t=E.subarray(j,j+=R?z.width*z.height:Z);switch((48&z.flags)>>4){default:case 2:K=0,F=1,q=z.width,L=0,C=1,X=z.height;break;case 0:K=0,F=1,q=z.width,L=z.height-1,C=-1,X=-1;break;case 3:K=z.width-1,F=-1,q=-1,L=0,C=1,X=z.height;break;case 1:K=z.width-1,F=-1,q=-1,L=z.height-1,C=-1,X=-1}const x="_getImageData"+(P?"Grey":"")+z.pixel_size+"bits",u=h[x](z,c,t,L,C,X,K,F,q);I.getEngine()._uploadDataToTextureDirectly(I,u)}const h={GetTGAHeader:w,UploadContent:z,_getImageData8bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=E,o=I.width,Z=I.height;let c,K,L,F=0;const C=new Uint8Array(o*Z*4);for(L=e;L!==z;L+=w)for(K=h;K!==U;K+=t,F++)c=R[F],C[4*(K+o*L)+3]=255,C[4*(K+o*L)+2]=P[3*c+0],C[4*(K+o*L)+1]=P[3*c+1],C[4*(K+o*L)+0]=P[3*c+2];return C},_getImageData16bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=I.width,o=I.height;let Z,c,K,L=0;const F=new Uint8Array(P*o*4);for(K=e;K!==z;K+=w)for(c=h;c!==U;c+=t,L+=2){Z=R[L+0]+(R[L+1]<<8);const I=255*((31744&Z)>>10)/31|0,E=255*((992&Z)>>5)/31|0,j=255*(31&Z)/31|0;F[4*(c+P*K)+0]=I,F[4*(c+P*K)+1]=E,F[4*(c+P*K)+2]=j,F[4*(c+P*K)+3]=32768&Z?0:255}return F},_getImageData24bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=I.width,o=I.height;let Z,c,K=0;const L=new Uint8Array(P*o*4);for(c=e;c!==z;c+=w)for(Z=h;Z!==U;Z+=t,K+=3)L[4*(Z+P*c)+3]=255,L[4*(Z+P*c)+2]=R[K+0],L[4*(Z+P*c)+1]=R[K+1],L[4*(Z+P*c)+0]=R[K+2];return L},_getImageData32bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=I.width,o=I.height;let Z,c,K=0;const L=new Uint8Array(P*o*4);for(c=e;c!==z;c+=w)for(Z=h;Z!==U;Z+=t,K+=4)L[4*(Z+P*c)+2]=R[K+0],L[4*(Z+P*c)+1]=R[K+1],L[4*(Z+P*c)+0]=R[K+2],L[4*(Z+P*c)+3]=R[K+3];return L},_getImageDataGrey8bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=I.width,o=I.height;let Z,c,K,L=0;const F=new Uint8Array(P*o*4);for(K=e;K!==z;K+=w)for(c=h;c!==U;c+=t,L++)Z=R[L],F[4*(c+P*K)+0]=Z,F[4*(c+P*K)+1]=Z,F[4*(c+P*K)+2]=Z,F[4*(c+P*K)+3]=255;return F},_getImageDataGrey16bits:function(I,E,j,e,w,z,h,t,U){const R=j,P=I.width,o=I.height;let Z,c,K=0;const L=new Uint8Array(P*o*4);for(c=e;c!==z;c+=w)for(Z=h;Z!==U;Z+=t,K+=2)L[4*(Z+P*c)+0]=R[K+0],L[4*(Z+P*c)+1]=R[K+0],L[4*(Z+P*c)+2]=R[K+0],L[4*(Z+P*c)+3]=R[K+1];return L}};class t{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(I,E,j){const e=new Uint8Array(I.buffer,I.byteOffset,I.byteLength),h=w(e);j(h.width,h.height,E.generateMipMaps,!1,(()=>{z(E,e)}))}}}}]);