"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[50],{14229:(E,t,z)=>{z.r(t),z.d(t,{_TGATextureLoader:()=>p});var A=z(11640);function X(E){let t=0;return{id_length:E[t++],colormap_type:E[t++],image_type:E[t++],colormap_index:E[t++]|E[t++]<<8,colormap_length:E[t++]|E[t++]<<8,colormap_size:E[t++],origin:[E[t++]|E[t++]<<8,E[t++]|E[t++]<<8],width:E[t++]|E[t++]<<8,height:E[t++]|E[t++]<<8,pixel_size:E[t++],flags:E[t++]}}function R(E,t){if(t.length<19)return void A.d.Error("Unable to load TGA file - Not enough data to contain header");let z=18;const R=X(t);if(R.id_length+z>t.length)return void A.d.Error("Unable to load TGA file - Not enough data");z+=R.id_length;let p,C=!1,Z=!1,H=!1;switch(R.image_type){case 9:C=!0;case 1:Z=!0;break;case 10:C=!0;case 2:break;case 11:C=!0;case 3:H=!0}const h=R.pixel_size>>3,d=R.width*R.height*h;let y,O,c,a,L,mE,W;if(Z&&(y=t.subarray(z,z+=R.colormap_length*(R.colormap_size>>3))),C){let E,A,X;p=new Uint8Array(d);let R=0;const u=new Uint8Array(h);for(;z<d&&R<d;)if(E=t[z++],A=1+(127&E),128&E){for(X=0;X<h;++X)u[X]=t[z++];for(X=0;X<A;++X)p.set(u,R+X*h);R+=h*A}else{for(A*=h,X=0;X<A;++X)p[R+X]=t[z++];R+=A}}else p=t.subarray(z,z+=Z?R.width*R.height:d);switch((48&R.flags)>>4){default:case 2:O=0,a=1,W=R.width,c=0,L=1,mE=R.height;break;case 0:O=0,a=1,W=R.width,c=R.height-1,L=-1,mE=-1;break;case 3:O=R.width-1,a=-1,W=-1,c=0,L=1,mE=R.height;break;case 1:O=R.width-1,a=-1,W=-1,c=R.height-1,L=-1,mE=-1}const I="_getImageData"+(H?"Grey":"")+R.pixel_size+"bits",e=u[I](R,y,p,c,L,mE,O,a,W);E.getEngine()._uploadDataToTextureDirectly(E,e)}const u={GetTGAHeader:X,UploadContent:R,_getImageData8bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=t,h=E.width,d=E.height;let y,O,c,a=0;const L=new Uint8Array(h*d*4);for(c=A;c!==R;c+=X)for(O=u;O!==C;O+=p,a++)y=Z[a],L[4*(O+h*c)+3]=255,L[4*(O+h*c)+2]=H[3*y+0],L[4*(O+h*c)+1]=H[3*y+1],L[4*(O+h*c)+0]=H[3*y+2];return L},_getImageData16bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=E.width,h=E.height;let d,y,O,c=0;const a=new Uint8Array(H*h*4);for(O=A;O!==R;O+=X)for(y=u;y!==C;y+=p,c+=2){d=Z[c+0]+(Z[c+1]<<8);const E=255*((31744&d)>>10)/31|0,t=255*((992&d)>>5)/31|0,z=255*(31&d)/31|0;a[4*(y+H*O)+0]=E,a[4*(y+H*O)+1]=t,a[4*(y+H*O)+2]=z,a[4*(y+H*O)+3]=32768&d?0:255}return a},_getImageData24bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=E.width,h=E.height;let d,y,O=0;const c=new Uint8Array(H*h*4);for(y=A;y!==R;y+=X)for(d=u;d!==C;d+=p,O+=3)c[4*(d+H*y)+3]=255,c[4*(d+H*y)+2]=Z[O+0],c[4*(d+H*y)+1]=Z[O+1],c[4*(d+H*y)+0]=Z[O+2];return c},_getImageData32bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=E.width,h=E.height;let d,y,O=0;const c=new Uint8Array(H*h*4);for(y=A;y!==R;y+=X)for(d=u;d!==C;d+=p,O+=4)c[4*(d+H*y)+2]=Z[O+0],c[4*(d+H*y)+1]=Z[O+1],c[4*(d+H*y)+0]=Z[O+2],c[4*(d+H*y)+3]=Z[O+3];return c},_getImageDataGrey8bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=E.width,h=E.height;let d,y,O,c=0;const a=new Uint8Array(H*h*4);for(O=A;O!==R;O+=X)for(y=u;y!==C;y+=p,c++)d=Z[c],a[4*(y+H*O)+0]=d,a[4*(y+H*O)+1]=d,a[4*(y+H*O)+2]=d,a[4*(y+H*O)+3]=255;return a},_getImageDataGrey16bits:function(E,t,z,A,X,R,u,p,C){const Z=z,H=E.width,h=E.height;let d,y,O=0;const c=new Uint8Array(H*h*4);for(y=A;y!==R;y+=X)for(d=u;d!==C;d+=p,O+=2)c[4*(d+H*y)+0]=Z[O+0],c[4*(d+H*y)+1]=Z[O+0],c[4*(d+H*y)+2]=Z[O+0],c[4*(d+H*y)+3]=Z[O+1];return c}};class p{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(E,t,z){const A=new Uint8Array(E.buffer,E.byteOffset,E.byteLength),u=X(A);z(u.width,u.height,t.generateMipMaps,!1,(()=>{R(t,A)}))}}}}]);