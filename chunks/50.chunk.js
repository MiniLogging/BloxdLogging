"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[50],{14604:(Z,l,C)=>{C.r(l),C.d(l,{_TGATextureLoader:()=>f});var B=C(12263);function x(Z){let l=0;return{id_length:Z[l++],colormap_type:Z[l++],image_type:Z[l++],colormap_index:Z[l++]|Z[l++]<<8,colormap_length:Z[l++]|Z[l++]<<8,colormap_size:Z[l++],origin:[Z[l++]|Z[l++]<<8,Z[l++]|Z[l++]<<8],width:Z[l++]|Z[l++]<<8,height:Z[l++]|Z[l++]<<8,pixel_size:Z[l++],flags:Z[l++]}}function b(Z,l){if(l.length<19)return void B.e.Error("Unable to load TGA file - Not enough data to contain header");let C=18;const b=x(l);if(b.id_length+C>l.length)return void B.e.Error("Unable to load TGA file - Not enough data");C+=b.id_length;let f,W=!1,J=!1,d=!1;switch(b.image_type){case 9:W=!0;case 1:J=!0;break;case 10:W=!0;case 2:break;case 11:W=!0;case 3:d=!0}const E=b.pixel_size>>3,G=b.width*b.height*E;let a,q,z,Y,P,S,i;if(J&&(a=l.subarray(C,C+=b.colormap_length*(b.colormap_size>>3))),W){let Z,B,x;f=new Uint8Array(G);let b=0;const K=new Uint8Array(E);for(;C<G&&b<G;)if(Z=l[C++],B=1+(127&Z),128&Z){for(x=0;x<E;++x)K[x]=l[C++];for(x=0;x<B;++x)f.set(K,b+x*E);b+=E*B}else{for(B*=E,x=0;x<B;++x)f[b+x]=l[C++];b+=B}}else f=l.subarray(C,C+=J?b.width*b.height:G);switch((48&b.flags)>>4){default:case 2:q=0,Y=1,i=b.width,z=0,P=1,S=b.height;break;case 0:q=0,Y=1,i=b.width,z=b.height-1,P=-1,S=-1;break;case 3:q=b.width-1,Y=-1,i=-1,z=0,P=1,S=b.height;break;case 1:q=b.width-1,Y=-1,i=-1,z=b.height-1,P=-1,S=-1}const s="_getImageData"+(d?"Grey":"")+b.pixel_size+"bits",F=K[s](b,a,f,z,P,S,q,Y,i);Z.getEngine()._uploadDataToTextureDirectly(Z,F)}const K={GetTGAHeader:x,UploadContent:b,_getImageData8bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=l,E=Z.width,G=Z.height;let a,q,z,Y=0;const P=new Uint8Array(E*G*4);for(z=B;z!==b;z+=x)for(q=K;q!==W;q+=f,Y++)a=J[Y],P[4*(q+E*z)+3]=255,P[4*(q+E*z)+2]=d[3*a+0],P[4*(q+E*z)+1]=d[3*a+1],P[4*(q+E*z)+0]=d[3*a+2];return P},_getImageData16bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=Z.width,E=Z.height;let G,a,q,z=0;const Y=new Uint8Array(d*E*4);for(q=B;q!==b;q+=x)for(a=K;a!==W;a+=f,z+=2){G=J[z+0]+(J[z+1]<<8);const Z=255*((31744&G)>>10)/31|0,l=255*((992&G)>>5)/31|0,C=255*(31&G)/31|0;Y[4*(a+d*q)+0]=Z,Y[4*(a+d*q)+1]=l,Y[4*(a+d*q)+2]=C,Y[4*(a+d*q)+3]=32768&G?0:255}return Y},_getImageData24bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=Z.width,E=Z.height;let G,a,q=0;const z=new Uint8Array(d*E*4);for(a=B;a!==b;a+=x)for(G=K;G!==W;G+=f,q+=3)z[4*(G+d*a)+3]=255,z[4*(G+d*a)+2]=J[q+0],z[4*(G+d*a)+1]=J[q+1],z[4*(G+d*a)+0]=J[q+2];return z},_getImageData32bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=Z.width,E=Z.height;let G,a,q=0;const z=new Uint8Array(d*E*4);for(a=B;a!==b;a+=x)for(G=K;G!==W;G+=f,q+=4)z[4*(G+d*a)+2]=J[q+0],z[4*(G+d*a)+1]=J[q+1],z[4*(G+d*a)+0]=J[q+2],z[4*(G+d*a)+3]=J[q+3];return z},_getImageDataGrey8bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=Z.width,E=Z.height;let G,a,q,z=0;const Y=new Uint8Array(d*E*4);for(q=B;q!==b;q+=x)for(a=K;a!==W;a+=f,z++)G=J[z],Y[4*(a+d*q)+0]=G,Y[4*(a+d*q)+1]=G,Y[4*(a+d*q)+2]=G,Y[4*(a+d*q)+3]=255;return Y},_getImageDataGrey16bits:function(Z,l,C,B,x,b,K,f,W){const J=C,d=Z.width,E=Z.height;let G,a,q=0;const z=new Uint8Array(d*E*4);for(a=B;a!==b;a+=x)for(G=K;G!==W;G+=f,q+=2)z[4*(G+d*a)+0]=J[q+0],z[4*(G+d*a)+1]=J[q+0],z[4*(G+d*a)+2]=J[q+0],z[4*(G+d*a)+3]=J[q+1];return z}};class f{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(Z,l,C){const B=new Uint8Array(Z.buffer,Z.byteOffset,Z.byteLength),K=x(B);C(K.width,K.height,l.generateMipMaps,!1,(()=>{b(l,B)}))}}}}]);