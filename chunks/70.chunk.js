"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14187:(B,I,C)=>{function M(B){return Math.floor(B/8)}function x(B){return 1<<B%8}C.d(I,{OptimizeIndices:()=>f});class y{constructor(B){this.size=B,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(B){if(B>=this.size)throw new RangeError("Bit index out of range");const I=M(B),C=x(B);return 0!==(this._byteArray[I]&C)}set(B,I){if(B>=this.size)throw new RangeError("Bit index out of range");const C=M(B),y=x(B);I?this._byteArray[C]|=y:this._byteArray[C]&=~y}}function f(B){const I=[],C=B.length/3;for(let y=0;y<C;y++)I.push([B[3*y],B[3*y+1],B[3*y+2]]);const M=new Map;for(let y=0;y<I.length;y++){const B=I[y];for(const I of B){let B=M.get(I);B||M.set(I,B=[]),B.push(y)}}const x=new y(C),f=[],L=B=>{const C=[B];for(;C.length>0;){const B=C.pop();if(!x.get(B)){x.set(B,!0),f.push(I[B]);for(const y of I[B]){const B=M.get(y);if(!B)return;for(const I of B)x.get(I)||C.push(I)}}}};for(let y=0;y<C;y++)x.get(y)||L(y);let e=0;for(const y of f)B[e++]=y[0],B[e++]=y[1],B[e++]=y[2]}}}]);