"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14278:(Z,x,F)=>{function u(Z){return Math.floor(Z/8)}function G(Z){return 1<<Z%8}F.d(x,{OptimizeIndices:()=>Y});class f{constructor(Z){this.size=Z,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(Z){if(Z>=this.size)throw new RangeError("Bit index out of range");const x=u(Z),F=G(Z);return 0!==(this._byteArray[x]&F)}set(Z,x){if(Z>=this.size)throw new RangeError("Bit index out of range");const F=u(Z),f=G(Z);x?this._byteArray[F]|=f:this._byteArray[F]&=~f}}function Y(Z){const x=[],F=Z.length/3;for(let f=0;f<F;f++)x.push([Z[3*f],Z[3*f+1],Z[3*f+2]]);const u=new Map;for(let f=0;f<x.length;f++){const Z=x[f];for(const x of Z){let Z=u.get(x);Z||u.set(x,Z=[]),Z.push(f)}}const G=new f(F),Y=[],j=Z=>{const F=[Z];for(;F.length>0;){const Z=F.pop();if(!G.get(Z)){G.set(Z,!0),Y.push(x[Z]);for(const f of x[Z]){const Z=u.get(f);if(!Z)return;for(const x of Z)G.get(x)||F.push(x)}}}};for(let f=0;f<F;f++)G.get(f)||j(f);let d=0;for(const f of Y)Z[d++]=f[0],Z[d++]=f[1],Z[d++]=f[2]}}}]);