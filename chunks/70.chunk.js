"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[70],{15400:(E,U,g)=>{function N(E){return Math.floor(E/8)}function L(E){return 1<<E%8}g.d(U,{OptimizeIndices:()=>S});class D{constructor(E){this.size=E,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(E){if(E>=this.size)throw new RangeError("Bit index out of range");const U=N(E),g=L(E);return 0!==(this._byteArray[U]&g)}set(E,U){if(E>=this.size)throw new RangeError("Bit index out of range");const g=N(E),D=L(E);U?this._byteArray[g]|=D:this._byteArray[g]&=~D}}function S(E){const U=[],g=E.length/3;for(let D=0;D<g;D++)U.push([E[3*D],E[3*D+1],E[3*D+2]]);const N=new Map;for(let D=0;D<U.length;D++){const E=U[D];for(const U of E){let E=N.get(U);E||N.set(U,E=[]),E.push(D)}}const L=new D(g),S=[],u=E=>{const g=[E];for(;g.length>0;){const E=g.pop();if(!L.get(E)){L.set(E,!0),S.push(U[E]);for(const D of U[E]){const E=N.get(D);if(!E)return;for(const U of E)L.get(U)||g.push(U)}}}};for(let D=0;D<g;D++)L.get(D)||u(D);let s=0;for(const D of S)E[s++]=D[0],E[s++]=D[1],E[s++]=D[2]}}}]);