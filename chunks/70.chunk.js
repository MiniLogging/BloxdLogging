"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14145:(q,S,b)=>{function z(q){return Math.floor(q/8)}function C(q){return 1<<q%8}b.d(S,{OptimizeIndices:()=>U});class v{constructor(q){this.size=q,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(q){if(q>=this.size)throw new RangeError("Bit index out of range");const S=z(q),b=C(q);return 0!==(this._byteArray[S]&b)}set(q,S){if(q>=this.size)throw new RangeError("Bit index out of range");const b=z(q),v=C(q);S?this._byteArray[b]|=v:this._byteArray[b]&=~v}}function U(q){const S=[],b=q.length/3;for(let v=0;v<b;v++)S.push([q[3*v],q[3*v+1],q[3*v+2]]);const z=new Map;for(let v=0;v<S.length;v++){const q=S[v];for(const S of q){let q=z.get(S);q||z.set(S,q=[]),q.push(v)}}const C=new v(b),U=[],g=q=>{const b=[q];for(;b.length>0;){const q=b.pop();if(!C.get(q)){C.set(q,!0),U.push(S[q]);for(const v of S[q]){const q=z.get(v);if(!q)return;for(const S of q)C.get(S)||b.push(S)}}}};for(let v=0;v<b;v++)C.get(v)||g(v);let r=0;for(const v of U)q[r++]=v[0],q[r++]=v[1],q[r++]=v[2]}}}]);