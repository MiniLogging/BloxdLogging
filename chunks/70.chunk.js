"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14116:(q,c,U)=>{U.r(c),U.d(c,{FlowGraphDeterminantBlock:()=>D,FlowGraphInvertMatrixBlock:()=>u,FlowGraphMatrixComposeBlock:()=>H,FlowGraphMatrixDecomposeBlock:()=>r,FlowGraphMatrixMultiplicationBlock:()=>K,FlowGraphTransposeBlock:()=>W});var J=U(12667),Q=U(12648),s=U(10833),g=U(10850),X=U(14105),n=U(14093);class W extends X.c{constructor(q){super((0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(q=>q.transpose?q.transpose():s.d.Transpose(q)),"FlowGraphTransposeBlock",q)}}(0,g.f)("FlowGraphTransposeBlock",W);class D extends X.c{constructor(q){super((0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),Q.t,(q=>q.determinant()),"FlowGraphDeterminantBlock",q)}}(0,g.f)("FlowGraphDeterminantBlock",D);class u extends X.c{constructor(q){super((0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(q=>q.inverse?q.inverse():s.d.Invert(q)),"FlowGraphInvertMatrixBlock",q)}}(0,g.f)("FlowGraphInvertMatrixBlock",u);class K extends n.e{constructor(q){super((0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),(0,Q.S)((null===q||void 0===q?void 0:q.matrixType)||"Matrix"),((q,c)=>c.multiply(q)),"FlowGraphMatrixMultiplicationBlock",q)}}(0,g.f)("FlowGraphMatrixMultiplicationBlock",K);class r extends J.c{constructor(q){super(q),this.input=this.registerDataInput("input",Q.j),this.position=this.registerDataOutput("position",Q.G),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",Q.v),this.ac=this.registerDataOutput("ac",Q.G),this.isValid=this.registerDataOutput("isValid",Q.e,!1)}_updateOutputs(q){const c=q._getExecutionVariable(this,"executionId",-1),U=q._getExecutionVariable(this,"cachedPosition",null),J=q._getExecutionVariable(this,"cachedRotation",null),Q=q._getExecutionVariable(this,"cachedScaling",null);if(c===q.executionId&&U&&J&&Q)this.position.setValue(U,q),this.rotationQuaternion.setValue(J,q),this.ac.setValue(Q,q);else{const c=this.input.getValue(q),g=U||new s.p,X=J||new s.g,n=Q||new s.p,W=Math.round(1e4*c.m[3])/1e4,D=Math.round(1e4*c.m[7])/1e4,u=Math.round(1e4*c.m[11])/1e4,K=Math.round(1e4*c.m[15])/1e4;if(0!==W||0!==D||0!==u||1!==K)return this.isValid.setValue(!1,q),this.position.setValue(s.p.Zero(),q),this.rotationQuaternion.setValue(s.g.Identity(),q),void this.ac.setValue(s.p.One(),q);const r=c.decompose(n,X,g);this.isValid.setValue(r,q),this.position.setValue(g,q),this.rotationQuaternion.setValue(X,q),this.ac.setValue(n,q),q._setExecutionVariable(this,"cachedPosition",g),q._setExecutionVariable(this,"cachedRotation",X),q._setExecutionVariable(this,"cachedScaling",n),q._setExecutionVariable(this,"executionId",q.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,g.f)("FlowGraphMatrixDecompose",r);class H extends J.c{constructor(q){super(q),this.position=this.registerDataInput("position",Q.G),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",Q.v),this.ac=this.registerDataInput("ac",Q.G),this.value=this.registerDataOutput("value",Q.j)}_updateOutputs(q){const c=q._getExecutionVariable(this,"executionId",-1),U=q._getExecutionVariable(this,"cachedMatrix",null);if(c===q.executionId&&U)this.value.setValue(U,q);else{const c=s.d.Compose(this.ac.getValue(q),this.rotationQuaternion.getValue(q),this.position.getValue(q));this.value.setValue(c,q),q._setExecutionVariable(this,"cachedMatrix",c),q._setExecutionVariable(this,"executionId",q.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,g.f)("FlowGraphMatrixCompose",H)},14093:(q,c,U)=>{U.d(c,{e:()=>Q});var J=U(14099);class Q extends J.d{constructor(q,c,U,J,Q,s){super(U,s),this._operation=J,this._className=Q,this.a=this.registerDataInput("a",q),this.b=this.registerDataInput("b",c)}_doOperation(q){const c=this.a.getValue(q),U=this.b.getValue(q);return this._operation(c,U)}getClassName(){return this._className}}},14099:(q,c,U)=>{U.d(c,{d:()=>X});var J=U(12667),Q=U(12648);const s="cachedOperationValue",g="cachedExecutionId";class X extends J.c{constructor(q,c){super(c),this.value=this.registerDataOutput("value",q),this.isValid=this.registerDataOutput("isValid",Q.e)}_updateOutputs(q){const c=q._getExecutionVariable(this,g,-1),U=q._getExecutionVariable(this,s,null);if(void 0!==U&&null!==U&&c===q.executionId)this.isValid.setValue(!0,q),this.value.setValue(U,q);else try{const c=this._doOperation(q);if(void 0===c||null===c)return void this.isValid.setValue(!1,q);q._setExecutionVariable(this,s,c),q._setExecutionVariable(this,g,q.executionId),this.value.setValue(c,q),this.isValid.setValue(!0,q)}catch(J){this.isValid.setValue(!1,q)}}}},14105:(q,c,U)=>{U.d(c,{c:()=>Q});var J=U(14099);class Q extends J.d{constructor(q,c,U,J,Q){super(c,Q),this._operation=U,this._className=J,this.a=this.registerDataInput("a",q)}_doOperation(q){return this._operation(this.a.getValue(q))}getClassName(){return this._className}}}}]);