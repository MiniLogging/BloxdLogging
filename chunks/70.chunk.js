"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14130:(g,w,q)=>{function R(g){return Math.floor(g/8)}function o(g){return 1<<g%8}q.d(w,{OptimizeIndices:()=>S});class r{constructor(g){this.size=g,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(g){if(g>=this.size)throw new RangeError("Bit index out of range");const w=R(g),q=o(g);return 0!==(this._byteArray[w]&q)}set(g,w){if(g>=this.size)throw new RangeError("Bit index out of range");const q=R(g),r=o(g);w?this._byteArray[q]|=r:this._byteArray[q]&=~r}}function S(g){const w=[],q=g.length/3;for(let r=0;r<q;r++)w.push([g[3*r],g[3*r+1],g[3*r+2]]);const R=new Map;for(let r=0;r<w.length;r++){const g=w[r];for(const w of g){let g=R.get(w);g||R.set(w,g=[]),g.push(r)}}const o=new r(q),S=[],i=g=>{const q=[g];for(;q.length>0;){const g=q.pop();if(!o.get(g)){o.set(g,!0),S.push(w[g]);for(const r of w[g]){const g=R.get(r);if(!g)return;for(const w of g)o.get(w)||q.push(w)}}}};for(let r=0;r<q;r++)o.get(r)||i(r);let T=0;for(const r of S)g[T++]=r[0],g[T++]=r[1],g[T++]=r[2]}}}]);