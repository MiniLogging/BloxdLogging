"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14414:(w,p,e)=>{e.r(p),e.d(p,{FlowGraphDeterminantBlock:()=>X,FlowGraphInvertMatrixBlock:()=>k,FlowGraphMatrixComposeBlock:()=>K,FlowGraphMatrixDecomposeBlock:()=>J,FlowGraphMatrixMultiplicationBlock:()=>m,FlowGraphTransposeBlock:()=>j});var r=e(12893),I=e(12872),d=e(11023),f=e(11038),q=e(14404),E=e(14400);class j extends q.e{constructor(w){super((0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(w=>w.transpose?w.transpose():d.b.Transpose(w)),"FlowGraphTransposeBlock",w)}}(0,f.d)("FlowGraphTransposeBlock",j);class X extends q.e{constructor(w){super((0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),I.o,(w=>w.determinant()),"FlowGraphDeterminantBlock",w)}}(0,f.d)("FlowGraphDeterminantBlock",X);class k extends q.e{constructor(w){super((0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(w=>w.inverse?w.inverse():d.b.Invert(w)),"FlowGraphInvertMatrixBlock",w)}}(0,f.d)("FlowGraphInvertMatrixBlock",k);class m extends E.e{constructor(w){super((0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),(0,I.L)((null===w||void 0===w?void 0:w.matrixType)||"Matrix"),((w,p)=>p.multiply(w)),"FlowGraphMatrixMultiplicationBlock",w)}}(0,f.d)("FlowGraphMatrixMultiplicationBlock",m);class J extends r.e{constructor(w){super(w),this.input=this.registerDataInput("input",I.i),this.position=this.registerDataOutput("position",I.z),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",I.p),this.Ne=this.registerDataOutput("Ne",I.z),this.isValid=this.registerDataOutput("isValid",I.g,!1)}_updateOutputs(w){const p=w._getExecutionVariable(this,"executionId",-1),e=w._getExecutionVariable(this,"cachedPosition",null),r=w._getExecutionVariable(this,"cachedRotation",null),I=w._getExecutionVariable(this,"cachedScaling",null);if(p===w.executionId&&e&&r&&I)this.position.setValue(e,w),this.rotationQuaternion.setValue(r,w),this.Ne.setValue(I,w);else{const p=this.input.getValue(w),f=e||new d.k,q=r||new d.c,E=I||new d.k,j=Math.round(1e4*p.m[3])/1e4,X=Math.round(1e4*p.m[7])/1e4,k=Math.round(1e4*p.m[11])/1e4,m=Math.round(1e4*p.m[15])/1e4;if(0!==j||0!==X||0!==k||1!==m)return this.isValid.setValue(!1,w),this.position.setValue(d.k.Zero(),w),this.rotationQuaternion.setValue(d.c.Identity(),w),void this.Ne.setValue(d.k.One(),w);const J=p.decompose(E,q,f);this.isValid.setValue(J,w),this.position.setValue(f,w),this.rotationQuaternion.setValue(q,w),this.Ne.setValue(E,w),w._setExecutionVariable(this,"cachedPosition",f),w._setExecutionVariable(this,"cachedRotation",q),w._setExecutionVariable(this,"cachedScaling",E),w._setExecutionVariable(this,"executionId",w.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,f.d)("FlowGraphMatrixDecompose",J);class K extends r.e{constructor(w){super(w),this.position=this.registerDataInput("position",I.z),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",I.p),this.Ne=this.registerDataInput("Ne",I.z),this.value=this.registerDataOutput("value",I.i)}_updateOutputs(w){const p=w._getExecutionVariable(this,"executionId",-1),e=w._getExecutionVariable(this,"cachedMatrix",null);if(p===w.executionId&&e)this.value.setValue(e,w);else{const p=d.b.Compose(this.Ne.getValue(w),this.rotationQuaternion.getValue(w),this.position.getValue(w));this.value.setValue(p,w),w._setExecutionVariable(this,"cachedMatrix",p),w._setExecutionVariable(this,"executionId",w.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,f.d)("FlowGraphMatrixCompose",K)},14400:(w,p,e)=>{e.d(p,{e:()=>I});var r=e(14402);class I extends r.c{constructor(w,p,e,r,I,d){super(e,d),this._operation=r,this._className=I,this.a=this.registerDataInput("a",w),this.b=this.registerDataInput("b",p)}_doOperation(w){const p=this.a.getValue(w),e=this.b.getValue(w);return this._operation(p,e)}getClassName(){return this._className}}},14402:(w,p,e)=>{e.d(p,{c:()=>q});var r=e(12893),I=e(12872);const d="cachedOperationValue",f="cachedExecutionId";class q extends r.e{constructor(w,p){super(p),this.value=this.registerDataOutput("value",w),this.isValid=this.registerDataOutput("isValid",I.g)}_updateOutputs(w){const p=w._getExecutionVariable(this,f,-1),e=w._getExecutionVariable(this,d,null);if(void 0!==e&&null!==e&&p===w.executionId)this.isValid.setValue(!0,w),this.value.setValue(e,w);else try{const p=this._doOperation(w);if(void 0===p||null===p)return void this.isValid.setValue(!1,w);w._setExecutionVariable(this,d,p),w._setExecutionVariable(this,f,w.executionId),this.value.setValue(p,w),this.isValid.setValue(!0,w)}catch(r){this.isValid.setValue(!1,w)}}}},14404:(w,p,e)=>{e.d(p,{e:()=>I});var r=e(14402);class I extends r.c{constructor(w,p,e,r,I){super(p,I),this._operation=e,this._className=r,this.a=this.registerDataInput("a",w)}_doOperation(w){return this._operation(this.a.getValue(w))}getClassName(){return this._className}}}}]);