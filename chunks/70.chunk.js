"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14554:(G,V,W)=>{W.r(V),W.d(V,{FlowGraphDeterminantBlock:()=>A,FlowGraphInvertMatrixBlock:()=>x,FlowGraphMatrixComposeBlock:()=>t,FlowGraphMatrixDecomposeBlock:()=>L,FlowGraphMatrixMultiplicationBlock:()=>q,FlowGraphTransposeBlock:()=>P});var J=W(13093),R=W(13071),d=W(11136),k=W(11159),z=W(14544),X=W(14533);class P extends z.e{constructor(G){super((0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(G=>G.transpose?G.transpose():d.c.Transpose(G)),"FlowGraphTransposeBlock",G)}}(0,k.d)("FlowGraphTransposeBlock",P);class A extends z.e{constructor(G){super((0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),R.r,(G=>G.determinant()),"FlowGraphDeterminantBlock",G)}}(0,k.d)("FlowGraphDeterminantBlock",A);class x extends z.e{constructor(G){super((0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(G=>G.inverse?G.inverse():d.c.Invert(G)),"FlowGraphInvertMatrixBlock",G)}}(0,k.d)("FlowGraphInvertMatrixBlock",x);class q extends X.c{constructor(G){super((0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),(0,R.I)((null===G||void 0===G?void 0:G.matrixType)||"Matrix"),((G,V)=>V.multiply(G)),"FlowGraphMatrixMultiplicationBlock",G)}}(0,k.d)("FlowGraphMatrixMultiplicationBlock",q);class L extends J.c{constructor(G){super(G),this.input=this.registerDataInput("input",R.l),this.position=this.registerDataOutput("position",R.x),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",R.s),this.vd=this.registerDataOutput("vd",R.x),this.isValid=this.registerDataOutput("isValid",R.d,!1)}_updateOutputs(G){const V=G._getExecutionVariable(this,"executionId",-1),W=G._getExecutionVariable(this,"cachedPosition",null),J=G._getExecutionVariable(this,"cachedRotation",null),R=G._getExecutionVariable(this,"cachedScaling",null);if(V===G.executionId&&W&&J&&R)this.position.setValue(W,G),this.rotationQuaternion.setValue(J,G),this.vd.setValue(R,G);else{const V=this.input.getValue(G),k=W||new d.o,z=J||new d.g,X=R||new d.o,P=Math.round(1e4*V.m[3])/1e4,A=Math.round(1e4*V.m[7])/1e4,x=Math.round(1e4*V.m[11])/1e4,q=Math.round(1e4*V.m[15])/1e4;if(0!==P||0!==A||0!==x||1!==q)return this.isValid.setValue(!1,G),this.position.setValue(d.o.Zero(),G),this.rotationQuaternion.setValue(d.g.Identity(),G),void this.vd.setValue(d.o.One(),G);const L=V.decompose(X,z,k);this.isValid.setValue(L,G),this.position.setValue(k,G),this.rotationQuaternion.setValue(z,G),this.vd.setValue(X,G),G._setExecutionVariable(this,"cachedPosition",k),G._setExecutionVariable(this,"cachedRotation",z),G._setExecutionVariable(this,"cachedScaling",X),G._setExecutionVariable(this,"executionId",G.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,k.d)("FlowGraphMatrixDecompose",L);class t extends J.c{constructor(G){super(G),this.position=this.registerDataInput("position",R.x),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",R.s),this.vd=this.registerDataInput("vd",R.x),this.value=this.registerDataOutput("value",R.l)}_updateOutputs(G){const V=G._getExecutionVariable(this,"executionId",-1),W=G._getExecutionVariable(this,"cachedMatrix",null);if(V===G.executionId&&W)this.value.setValue(W,G);else{const V=d.c.Compose(this.vd.getValue(G),this.rotationQuaternion.getValue(G),this.position.getValue(G));this.value.setValue(V,G),G._setExecutionVariable(this,"cachedMatrix",V),G._setExecutionVariable(this,"executionId",G.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,k.d)("FlowGraphMatrixCompose",t)},14533:(G,V,W)=>{W.d(V,{c:()=>R});var J=W(14535);class R extends J.c{constructor(G,V,W,J,R,d){super(W,d),this._operation=J,this._className=R,this.a=this.registerDataInput("a",G),this.b=this.registerDataInput("b",V)}_doOperation(G){const V=this.a.getValue(G),W=this.b.getValue(G);return this._operation(V,W)}getClassName(){return this._className}}},14535:(G,V,W)=>{W.d(V,{c:()=>z});var J=W(13093),R=W(13071);const d="cachedOperationValue",k="cachedExecutionId";class z extends J.c{constructor(G,V){super(V),this.value=this.registerDataOutput("value",G),this.isValid=this.registerDataOutput("isValid",R.d)}_updateOutputs(G){const V=G._getExecutionVariable(this,k,-1),W=G._getExecutionVariable(this,d,null);if(void 0!==W&&null!==W&&V===G.executionId)this.isValid.setValue(!0,G),this.value.setValue(W,G);else try{const V=this._doOperation(G);if(void 0===V||null===V)return void this.isValid.setValue(!1,G);G._setExecutionVariable(this,d,V),G._setExecutionVariable(this,k,G.executionId),this.value.setValue(V,G),this.isValid.setValue(!0,G)}catch(J){this.isValid.setValue(!1,G)}}}},14544:(G,V,W)=>{W.d(V,{e:()=>R});var J=W(14535);class R extends J.c{constructor(G,V,W,J,R){super(V,R),this._operation=W,this._className=J,this.a=this.registerDataInput("a",G)}_doOperation(G){return this._operation(this.a.getValue(G))}getClassName(){return this._className}}}}]);