"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14210:(P,f,Y)=>{function C(P){return Math.floor(P/8)}function q(P){return 1<<P%8}Y.d(f,{OptimizeIndices:()=>L});class m{constructor(P){this.size=P,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(P){if(P>=this.size)throw new RangeError("Bit index out of range");const f=C(P),Y=q(P);return 0!==(this._byteArray[f]&Y)}set(P,f){if(P>=this.size)throw new RangeError("Bit index out of range");const Y=C(P),m=q(P);f?this._byteArray[Y]|=m:this._byteArray[Y]&=~m}}function L(P){const f=[],Y=P.length/3;for(let m=0;m<Y;m++)f.push([P[3*m],P[3*m+1],P[3*m+2]]);const C=new Map;for(let m=0;m<f.length;m++){const P=f[m];for(const f of P){let P=C.get(f);P||C.set(f,P=[]),P.push(m)}}const q=new m(Y),L=[],o=P=>{const Y=[P];for(;Y.length>0;){const P=Y.pop();if(!q.get(P)){q.set(P,!0),L.push(f[P]);for(const m of f[P]){const P=C.get(m);if(!P)return;for(const f of P)q.get(f)||Y.push(f)}}}};for(let m=0;m<Y;m++)q.get(m)||o(m);let w=0;for(const m of L)P[w++]=m[0],P[w++]=m[1],P[w++]=m[2]}}}]);