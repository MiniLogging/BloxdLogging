"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14385:(Z,c,L)=>{L.r(c),L.d(c,{FlowGraphDeterminantBlock:()=>z,FlowGraphInvertMatrixBlock:()=>i,FlowGraphMatrixComposeBlock:()=>x,FlowGraphMatrixDecomposeBlock:()=>E,FlowGraphMatrixMultiplicationBlock:()=>t,FlowGraphTransposeBlock:()=>J});var k=L(12846),N=L(12825),R=L(10993),G=L(11012),V=L(14370),p=L(14358);class J extends V.d{constructor(Z){super((0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.transpose?Z.transpose():R.b.Transpose(Z)),"FlowGraphTransposeBlock",Z)}}(0,G.g)("FlowGraphTransposeBlock",J);class z extends V.d{constructor(Z){super((0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),N.t,(Z=>Z.determinant()),"FlowGraphDeterminantBlock",Z)}}(0,G.g)("FlowGraphDeterminantBlock",z);class i extends V.d{constructor(Z){super((0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(Z=>Z.inverse?Z.inverse():R.b.Invert(Z)),"FlowGraphInvertMatrixBlock",Z)}}(0,G.g)("FlowGraphInvertMatrixBlock",i);class t extends p.d{constructor(Z){super((0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),(0,N.H)((null===Z||void 0===Z?void 0:Z.matrixType)||"Matrix"),((Z,c)=>c.multiply(Z)),"FlowGraphMatrixMultiplicationBlock",Z)}}(0,G.g)("FlowGraphMatrixMultiplicationBlock",t);class E extends k.c{constructor(Z){super(Z),this.input=this.registerDataInput("input",N.m),this.position=this.registerDataOutput("position",N.A),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",N.u),this.Pc=this.registerDataOutput("Pc",N.A),this.isValid=this.registerDataOutput("isValid",N.g,!1)}_updateOutputs(Z){const c=Z._getExecutionVariable(this,"executionId",-1),L=Z._getExecutionVariable(this,"cachedPosition",null),k=Z._getExecutionVariable(this,"cachedRotation",null),N=Z._getExecutionVariable(this,"cachedScaling",null);if(c===Z.executionId&&L&&k&&N)this.position.setValue(L,Z),this.rotationQuaternion.setValue(k,Z),this.Pc.setValue(N,Z);else{const c=this.input.getValue(Z),G=L||new R.h,V=k||new R.c,p=N||new R.h,J=Math.round(1e4*c.m[3])/1e4,z=Math.round(1e4*c.m[7])/1e4,i=Math.round(1e4*c.m[11])/1e4,t=Math.round(1e4*c.m[15])/1e4;if(0!==J||0!==z||0!==i||1!==t)return this.isValid.setValue(!1,Z),this.position.setValue(R.h.Zero(),Z),this.rotationQuaternion.setValue(R.c.Identity(),Z),void this.Pc.setValue(R.h.One(),Z);const E=c.decompose(p,V,G);this.isValid.setValue(E,Z),this.position.setValue(G,Z),this.rotationQuaternion.setValue(V,Z),this.Pc.setValue(p,Z),Z._setExecutionVariable(this,"cachedPosition",G),Z._setExecutionVariable(this,"cachedRotation",V),Z._setExecutionVariable(this,"cachedScaling",p),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,G.g)("FlowGraphMatrixDecompose",E);class x extends k.c{constructor(Z){super(Z),this.position=this.registerDataInput("position",N.A),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",N.u),this.Pc=this.registerDataInput("Pc",N.A),this.value=this.registerDataOutput("value",N.m)}_updateOutputs(Z){const c=Z._getExecutionVariable(this,"executionId",-1),L=Z._getExecutionVariable(this,"cachedMatrix",null);if(c===Z.executionId&&L)this.value.setValue(L,Z);else{const c=R.b.Compose(this.Pc.getValue(Z),this.rotationQuaternion.getValue(Z),this.position.getValue(Z));this.value.setValue(c,Z),Z._setExecutionVariable(this,"cachedMatrix",c),Z._setExecutionVariable(this,"executionId",Z.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,G.g)("FlowGraphMatrixCompose",x)},14358:(Z,c,L)=>{L.d(c,{d:()=>N});var k=L(14364);class N extends k.d{constructor(Z,c,L,k,N,R){super(L,R),this._operation=k,this._className=N,this.a=this.registerDataInput("a",Z),this.b=this.registerDataInput("b",c)}_doOperation(Z){const c=this.a.getValue(Z),L=this.b.getValue(Z);return this._operation(c,L)}getClassName(){return this._className}}},14364:(Z,c,L)=>{L.d(c,{d:()=>V});var k=L(12846),N=L(12825);const R="cachedOperationValue",G="cachedExecutionId";class V extends k.c{constructor(Z,c){super(c),this.value=this.registerDataOutput("value",Z),this.isValid=this.registerDataOutput("isValid",N.g)}_updateOutputs(Z){const c=Z._getExecutionVariable(this,G,-1),L=Z._getExecutionVariable(this,R,null);if(void 0!==L&&null!==L&&c===Z.executionId)this.isValid.setValue(!0,Z),this.value.setValue(L,Z);else try{const c=this._doOperation(Z);if(void 0===c||null===c)return void this.isValid.setValue(!1,Z);Z._setExecutionVariable(this,R,c),Z._setExecutionVariable(this,G,Z.executionId),this.value.setValue(c,Z),this.isValid.setValue(!0,Z)}catch(k){this.isValid.setValue(!1,Z)}}}},14370:(Z,c,L)=>{L.d(c,{d:()=>N});var k=L(14364);class N extends k.d{constructor(Z,c,L,k,N){super(c,N),this._operation=L,this._className=k,this.a=this.registerDataInput("a",Z)}_doOperation(Z){return this._operation(this.a.getValue(Z))}getClassName(){return this._className}}}}]);