"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[70],{14441:(V,I,m)=>{m.r(I),m.d(I,{FlowGraphDeterminantBlock:()=>K,FlowGraphInvertMatrixBlock:()=>Y,FlowGraphMatrixComposeBlock:()=>v,FlowGraphMatrixDecomposeBlock:()=>O,FlowGraphMatrixMultiplicationBlock:()=>X,FlowGraphTransposeBlock:()=>E});var C=m(12921),l=m(12899),s=m(11040),F=m(11048),k=m(14429),j=m(14422);class E extends k.d{constructor(V){super((0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(V=>V.transpose?V.transpose():s.b.Transpose(V)),"FlowGraphTransposeBlock",V)}}(0,F.h)("FlowGraphTransposeBlock",E);class K extends k.d{constructor(V){super((0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),l.r,(V=>V.determinant()),"FlowGraphDeterminantBlock",V)}}(0,F.h)("FlowGraphDeterminantBlock",K);class Y extends k.d{constructor(V){super((0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(V=>V.inverse?V.inverse():s.b.Invert(V)),"FlowGraphInvertMatrixBlock",V)}}(0,F.h)("FlowGraphInvertMatrixBlock",Y);class X extends j.d{constructor(V){super((0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),(0,l.I)((null===V||void 0===V?void 0:V.matrixType)||"Matrix"),((V,I)=>I.multiply(V)),"FlowGraphMatrixMultiplicationBlock",V)}}(0,F.h)("FlowGraphMatrixMultiplicationBlock",X);class O extends C.e{constructor(V){super(V),this.input=this.registerDataInput("input",l.j),this.position=this.registerDataOutput("position",l.B),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",l.s),this.Vk=this.registerDataOutput("Vk",l.B),this.isValid=this.registerDataOutput("isValid",l.d,!1)}_updateOutputs(V){const I=V._getExecutionVariable(this,"executionId",-1),m=V._getExecutionVariable(this,"cachedPosition",null),C=V._getExecutionVariable(this,"cachedRotation",null),l=V._getExecutionVariable(this,"cachedScaling",null);if(I===V.executionId&&m&&C&&l)this.position.setValue(m,V),this.rotationQuaternion.setValue(C,V),this.Vk.setValue(l,V);else{const I=this.input.getValue(V),F=m||new s.m,k=C||new s.e,j=l||new s.m,E=Math.round(1e4*I.m[3])/1e4,K=Math.round(1e4*I.m[7])/1e4,Y=Math.round(1e4*I.m[11])/1e4,X=Math.round(1e4*I.m[15])/1e4;if(0!==E||0!==K||0!==Y||1!==X)return this.isValid.setValue(!1,V),this.position.setValue(s.m.Zero(),V),this.rotationQuaternion.setValue(s.e.Identity(),V),void this.Vk.setValue(s.m.One(),V);const O=I.decompose(j,k,F);this.isValid.setValue(O,V),this.position.setValue(F,V),this.rotationQuaternion.setValue(k,V),this.Vk.setValue(j,V),V._setExecutionVariable(this,"cachedPosition",F),V._setExecutionVariable(this,"cachedRotation",k),V._setExecutionVariable(this,"cachedScaling",j),V._setExecutionVariable(this,"executionId",V.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}}(0,F.h)("FlowGraphMatrixDecompose",O);class v extends C.e{constructor(V){super(V),this.position=this.registerDataInput("position",l.B),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",l.s),this.Vk=this.registerDataInput("Vk",l.B),this.value=this.registerDataOutput("value",l.j)}_updateOutputs(V){const I=V._getExecutionVariable(this,"executionId",-1),m=V._getExecutionVariable(this,"cachedMatrix",null);if(I===V.executionId&&m)this.value.setValue(m,V);else{const I=s.b.Compose(this.Vk.getValue(V),this.rotationQuaternion.getValue(V),this.position.getValue(V));this.value.setValue(I,V),V._setExecutionVariable(this,"cachedMatrix",I),V._setExecutionVariable(this,"executionId",V.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}}(0,F.h)("FlowGraphMatrixCompose",v)},14422:(V,I,m)=>{m.d(I,{d:()=>l});var C=m(14427);class l extends C.e{constructor(V,I,m,C,l,s){super(m,s),this._operation=C,this._className=l,this.a=this.registerDataInput("a",V),this.b=this.registerDataInput("b",I)}_doOperation(V){const I=this.a.getValue(V),m=this.b.getValue(V);return this._operation(I,m)}getClassName(){return this._className}}},14427:(V,I,m)=>{m.d(I,{e:()=>k});var C=m(12921),l=m(12899);const s="cachedOperationValue",F="cachedExecutionId";class k extends C.e{constructor(V,I){super(I),this.value=this.registerDataOutput("value",V),this.isValid=this.registerDataOutput("isValid",l.d)}_updateOutputs(V){const I=V._getExecutionVariable(this,F,-1),m=V._getExecutionVariable(this,s,null);if(void 0!==m&&null!==m&&I===V.executionId)this.isValid.setValue(!0,V),this.value.setValue(m,V);else try{const I=this._doOperation(V);if(void 0===I||null===I)return void this.isValid.setValue(!1,V);V._setExecutionVariable(this,s,I),V._setExecutionVariable(this,F,V.executionId),this.value.setValue(I,V),this.isValid.setValue(!0,V)}catch(C){this.isValid.setValue(!1,V)}}}},14429:(V,I,m)=>{m.d(I,{d:()=>l});var C=m(14427);class l extends C.e{constructor(V,I,m,C,l){super(I,l),this._operation=m,this._className=C,this.a=this.registerDataInput("a",V)}_doOperation(V){return this._operation(this.a.getValue(V))}getClassName(){return this._className}}}}]);