"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2207:(B,o,e)=>{e.r(o),e.d(o,{_TGATextureLoader:()=>Z});var k=e(514);function d(B){let o=0;return{id_length:B[o++],colormap_type:B[o++],image_type:B[o++],colormap_index:B[o++]|B[o++]<<8,colormap_length:B[o++]|B[o++]<<8,colormap_size:B[o++],origin:[B[o++]|B[o++]<<8,B[o++]|B[o++]<<8],width:B[o++]|B[o++]<<8,height:B[o++]|B[o++]<<8,pixel_size:B[o++],flags:B[o++]}}function f(B,o){if(o.length<19)return void k.d.Error("Unable to load TGA file - Not enough data to contain header");let e=18;const f=d(o);if(f.id_length+e>o.length)return void k.d.Error("Unable to load TGA file - Not enough data");e+=f.id_length;let Z,t=!1,h=!1,O=!1;switch(f.image_type){case 9:t=!0;case 1:h=!0;break;case 10:t=!0;case 2:break;case 11:t=!0;case 3:O=!0}const K=f.pixel_size>>3,w=f.width*f.height*K;let u,L,H,n,W,R,I;if(h&&(u=o.subarray(e,e+=f.colormap_length*(f.colormap_size>>3))),t){let B,k,d;Z=new Uint8Array(w);let f=0;const J=new Uint8Array(K);for(;e<w&&f<w;)if(B=o[e++],k=1+(127&B),128&B){for(d=0;d<K;++d)J[d]=o[e++];for(d=0;d<k;++d)Z.set(J,f+d*K);f+=K*k}else{for(k*=K,d=0;d<k;++d)Z[f+d]=o[e++];f+=k}}else Z=o.subarray(e,e+=h?f.width*f.height:w);switch((48&f.flags)>>4){default:case 2:L=0,n=1,I=f.width,H=0,W=1,R=f.height;break;case 0:L=0,n=1,I=f.width,H=f.height-1,W=-1,R=-1;break;case 3:L=f.width-1,n=-1,I=-1,H=0,W=1,R=f.height;break;case 1:L=f.width-1,n=-1,I=-1,H=f.height-1,W=-1,R=-1}const T="_getImageData"+(O?"Grey":"")+f.pixel_size+"bits",s=J[T](f,u,Z,H,W,R,L,n,I);B.getEngine()._uploadDataToTextureDirectly(B,s)}const J={GetTGAHeader:d,UploadContent:f,_getImageData8bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=o,K=B.width,w=B.height;let u,L,H,n=0;const W=new Uint8Array(K*w*4);for(H=k;H!==f;H+=d)for(L=J;L!==t;L+=Z,n++)u=h[n],W[4*(L+K*H)+3]=255,W[4*(L+K*H)+2]=O[3*u+0],W[4*(L+K*H)+1]=O[3*u+1],W[4*(L+K*H)+0]=O[3*u+2];return W},_getImageData16bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=B.width,K=B.height;let w,u,L,H=0;const n=new Uint8Array(O*K*4);for(L=k;L!==f;L+=d)for(u=J;u!==t;u+=Z,H+=2){w=h[H+0]+(h[H+1]<<8);const B=255*((31744&w)>>10)/31|0,o=255*((992&w)>>5)/31|0,e=255*(31&w)/31|0;n[4*(u+O*L)+0]=B,n[4*(u+O*L)+1]=o,n[4*(u+O*L)+2]=e,n[4*(u+O*L)+3]=32768&w?0:255}return n},_getImageData24bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=B.width,K=B.height;let w,u,L=0;const H=new Uint8Array(O*K*4);for(u=k;u!==f;u+=d)for(w=J;w!==t;w+=Z,L+=3)H[4*(w+O*u)+3]=255,H[4*(w+O*u)+2]=h[L+0],H[4*(w+O*u)+1]=h[L+1],H[4*(w+O*u)+0]=h[L+2];return H},_getImageData32bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=B.width,K=B.height;let w,u,L=0;const H=new Uint8Array(O*K*4);for(u=k;u!==f;u+=d)for(w=J;w!==t;w+=Z,L+=4)H[4*(w+O*u)+2]=h[L+0],H[4*(w+O*u)+1]=h[L+1],H[4*(w+O*u)+0]=h[L+2],H[4*(w+O*u)+3]=h[L+3];return H},_getImageDataGrey8bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=B.width,K=B.height;let w,u,L,H=0;const n=new Uint8Array(O*K*4);for(L=k;L!==f;L+=d)for(u=J;u!==t;u+=Z,H++)w=h[H],n[4*(u+O*L)+0]=w,n[4*(u+O*L)+1]=w,n[4*(u+O*L)+2]=w,n[4*(u+O*L)+3]=255;return n},_getImageDataGrey16bits:function(B,o,e,k,d,f,J,Z,t){const h=e,O=B.width,K=B.height;let w,u,L=0;const H=new Uint8Array(O*K*4);for(u=k;u!==f;u+=d)for(w=J;w!==t;w+=Z,L+=2)H[4*(w+O*u)+0]=h[L+0],H[4*(w+O*u)+1]=h[L+0],H[4*(w+O*u)+2]=h[L+0],H[4*(w+O*u)+3]=h[L+1];return H}};class Z{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(B,o,e){const k=new Uint8Array(B.buffer,B.byteOffset,B.byteLength),J=d(k);e(J.width,J.height,o.generateMipMaps,!1,(()=>{f(o,k)}))}}}}]);