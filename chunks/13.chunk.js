"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2501:(A,X,s)=>{s.r(X),s.d(X,{_KTXTextureLoader:()=>M});var N=s(470);class f{constructor(A,X){if(this.data=A,this.isInvalid=!1,!f.IsValid(A))return this.isInvalid=!0,void N.b.Error("texture missing KTX identifier");const s=Uint32Array.BYTES_PER_ELEMENT,E=new DataView(this.data.buffer,this.data.byteOffset+12,13*s),g=67305985===E.getUint32(0,!0);return this.glType=E.getUint32(1*s,g),this.glTypeSize=E.getUint32(2*s,g),this.glFormat=E.getUint32(3*s,g),this.glInternalFormat=E.getUint32(4*s,g),this.glBaseInternalFormat=E.getUint32(5*s,g),this.pixelWidth=E.getUint32(6*s,g),this.pixelHeight=E.getUint32(7*s,g),this.pixelDepth=E.getUint32(8*s,g),this.numberOfArrayElements=E.getUint32(9*s,g),this.numberOfFaces=E.getUint32(10*s,g),this.numberOfMipmapLevels=E.getUint32(11*s,g),this.bytesOfKeyValueData=E.getUint32(12*s,g),0!==this.glType?(N.b.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(N.b.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(N.b.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==X?(N.b.Error("number of faces expected"+X+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=f.COMPRESSED_2D))}uploadLevels(A,X){switch(this.loadType){case f.COMPRESSED_2D:this._upload2DCompressedLevels(A,X);case f.TEX_2D:case f.COMPRESSED_3D:case f.TEX_3D:}}_upload2DCompressedLevels(A,X){let s=f.HEADER_LEN+this.bytesOfKeyValueData,N=this.pixelWidth,E=this.pixelHeight;const g=X?this.numberOfMipmapLevels:1;for(let f=0;f<g;f++){const X=new Int32Array(this.data.buffer,this.data.byteOffset+s,1)[0];s+=4;for(let g=0;g<this.numberOfFaces;g++){const K=new Uint8Array(this.data.buffer,this.data.byteOffset+s,X);A.getEngine()._uploadCompressedDataToTextureDirectly(A,A.format,N,E,K,g,f),s+=X,s+=3-(X+3)%4}N=Math.max(1,.5*N),E=Math.max(1,.5*E)}}static IsValid(A){if(A.byteLength>=12){const X=new Uint8Array(A.buffer,A.byteOffset,12);if(171===X[0]&&75===X[1]&&84===X[2]&&88===X[3]&&32===X[4]&&49===X[5]&&49===X[6]&&187===X[7]&&13===X[8]&&10===X[9]&&26===X[10]&&10===X[11])return!0}return!1}}f.HEADER_LEN=64,f.COMPRESSED_2D=0,f.COMPRESSED_3D=1,f.TEX_2D=2,f.TEX_3D=3;var E,g,K,r=s(2510),i=s(456);function Y(A,X){const s=(null===X||void 0===X?void 0:X.jsDecoderModule)||KTX2DECODER;A&&(A.wasmUASTCToASTC&&(s.LiteTranscoder_UASTC_ASTC.WasmModuleURL=A.wasmUASTCToASTC),A.wasmUASTCToBC7&&(s.LiteTranscoder_UASTC_BC7.WasmModuleURL=A.wasmUASTCToBC7),A.wasmUASTCToRGBA_UNORM&&(s.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=A.wasmUASTCToRGBA_UNORM),A.wasmUASTCToRGBA_SRGB&&(s.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=A.wasmUASTCToRGBA_SRGB),A.wasmUASTCToR8_UNORM&&(s.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=A.wasmUASTCToR8_UNORM),A.wasmUASTCToRG8_UNORM&&(s.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=A.wasmUASTCToRG8_UNORM),A.jsMSCTranscoder&&(s.MSCTranscoder.JSModuleURL=A.jsMSCTranscoder),A.wasmMSCTranscoder&&(s.MSCTranscoder.WasmModuleURL=A.wasmMSCTranscoder),A.wasmZSTDDecoder&&(s.ZSTDDecoder.WasmModuleURL=A.wasmZSTDDecoder)),X&&(X.wasmUASTCToASTC&&(s.LiteTranscoder_UASTC_ASTC.WasmBinary=X.wasmUASTCToASTC),X.wasmUASTCToBC7&&(s.LiteTranscoder_UASTC_BC7.WasmBinary=X.wasmUASTCToBC7),X.wasmUASTCToRGBA_UNORM&&(s.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=X.wasmUASTCToRGBA_UNORM),X.wasmUASTCToRGBA_SRGB&&(s.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=X.wasmUASTCToRGBA_SRGB),X.wasmUASTCToR8_UNORM&&(s.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=X.wasmUASTCToR8_UNORM),X.wasmUASTCToRG8_UNORM&&(s.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=X.wasmUASTCToRG8_UNORM),X.jsMSCTranscoder&&(s.MSCTranscoder.JSModule=X.jsMSCTranscoder),X.wasmMSCTranscoder&&(s.MSCTranscoder.WasmBinary=X.wasmMSCTranscoder),X.wasmZSTDDecoder&&(s.ZSTDDecoder.WasmBinary=X.wasmZSTDDecoder))}function v(A){let X;"undefined"===typeof A&&"undefined"!==typeof KTX2DECODER&&(A=KTX2DECODER),onmessage=s=>{if(s.data)switch(s.data.action){case"init":{const N=s.data.urls;N&&(N.jsDecoderModule&&"undefined"===typeof A&&(importScripts(N.jsDecoderModule),A=KTX2DECODER),Y(N)),s.data.wasmBinaries&&Y(void 0,{...s.data.wasmBinaries,jsDecoderModule:A}),X=new A.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":A.KTX2Decoder.DefaultDecoderOptions=s.data.options;break;case"decode":X.decode(s.data.data,s.data.caps,s.data.options).then((A=>{const X=[];for(let s=0;s<A.mipmaps.length;++s){const N=A.mipmaps[s];N&&N.data&&X.push(N.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:A},X)})).catch((A=>{postMessage({action:"decoded",success:!1,msg:A})}))}}}!function(A){A[A.ETC1S=0]="ETC1S",A[A.UASTC4x4=1]="UASTC4x4"}(E||(E={})),function(A){A[A.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",A[A.BC7_RGBA=1]="BC7_RGBA",A[A.BC3_RGBA=2]="BC3_RGBA",A[A.BC1_RGB=3]="BC1_RGB",A[A.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",A[A.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",A[A.ETC2_RGBA=6]="ETC2_RGBA",A[A.ETC1_RGB=7]="ETC1_RGB",A[A.RGBA32=8]="RGBA32",A[A.R8=9]="R8",A[A.RG8=10]="RG8"}(g||(g={})),function(A){A[A.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",A[A.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",A[A.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",A[A.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",A[A.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",A[A.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",A[A.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",A[A.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",A[A.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",A[A.RGBA8Format=32856]="RGBA8Format",A[A.R8Format=33321]="R8Format",A[A.RG8Format=33323]="RG8Format"}(K||(K={}));class c{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(A){if(c._WorkerPoolPromise||c._DecoderModulePromise)return;const X={jsDecoderModule:i.d.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:i.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:i.d.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:i.d.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:i.d.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};A&&"function"===typeof Worker&&"undefined"!==typeof URL?c._WorkerPoolPromise=new Promise((s=>{const N=`${Y}(${v})()`,f=URL.createObjectURL(new Blob([N],{type:"application/javascript"}));s(new r.d(A,(async()=>await async function(A,X,s){return await new Promise(((N,f)=>{const E=X=>{A.removeEventListener("error",E),A.removeEventListener("message",g),f(X)},g=X=>{"init"===X.data.action&&(A.removeEventListener("error",E),A.removeEventListener("message",g),N(A))};A.addEventListener("error",E),A.addEventListener("message",g),A.postMessage({action:"init",urls:s,wasmBinaries:X})}))}(new Worker(f),void 0,X))))})):"undefined"===typeof c._KTX2DecoderModule?c._DecoderModulePromise=i.d.LoadBabylonScriptAsync(X.jsDecoderModule).then((()=>(c._KTX2DecoderModule=KTX2DECODER,c._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,c._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,Y(X,c._KTX2DecoderModule),new c._KTX2DecoderModule.KTX2Decoder))):(c._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,c._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,c._DecoderModulePromise=Promise.resolve(new c._KTX2DecoderModule.KTX2Decoder))}constructor(A){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.DefaultNumWorkers;this._engine=A;const s="object"===typeof X&&X.workerPool||c.WorkerPool;if(s)c._WorkerPoolPromise=Promise.resolve(s);else{var N;if("object"===typeof X)c._KTX2DecoderModule=null===X||void 0===X||null===(N=X.binariesAndModulesContainer)||void 0===N?void 0:N.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(c._KTX2DecoderModule=KTX2DECODER);const A="number"===typeof X?X:X.numWorkers??c.DefaultNumWorkers;c._Initialize(A)}}async _uploadAsync(A,X,s){const N=this._engine.getCaps(),f={astc:!!N.astc,bptc:!!N.bptc,s3tc:!!N.s3tc,pvrtc:!!N.pvrtc,etc2:!!N.etc2,etc1:!!N.etc1};if(c._WorkerPoolPromise){const N=await c._WorkerPoolPromise;return await new Promise(((E,g)=>{N.push(((N,K)=>{const r=A=>{N.removeEventListener("error",r),N.removeEventListener("message",i),g(A),K()},i=A=>{if("decoded"===A.data.action){if(N.removeEventListener("error",r),N.removeEventListener("message",i),A.data.success)try{this._createTexture(A.data.decodedData,X,s),E()}catch(f){g({message:f})}else g({message:A.data.msg});K()}};N.addEventListener("error",r),N.addEventListener("message",i),N.postMessage({action:"setDefaultDecoderOptions",options:c.DefaultDecoderOptions._getKTX2DecoderOptions()});const Y=new Uint8Array(A.byteLength);Y.set(new Uint8Array(A.buffer,A.byteOffset,A.byteLength)),N.postMessage({action:"decode",data:Y,caps:f,options:s},[Y.buffer])}))}))}if(c._DecoderModulePromise){const s=await c._DecoderModulePromise;return c.DefaultDecoderOptions.isDirty&&(c._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=c.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((f,E)=>{s.decode(A,N).then((A=>{this._createTexture(A,X),f()})).catch((A=>{E({message:A})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(A,X,s){this._engine._bindTextureDirectly(3553,X),s&&(s.transcodedFormat=A.transcodedFormat,s.isInGammaSpace=A.isInGammaSpace,s.Ej=A.Ej,s.transcoderName=A.transcoderName);let N=!0;switch(A.transcodedFormat){case 32856:X.type=0,X.format=5;break;case 33321:X.type=0,X.format=6;break;case 33323:X.type=0,X.format=7;break;default:X.format=A.transcodedFormat,N=!1}if(X._gammaSpace=A.isInGammaSpace,X.generateMipMaps=A.mipmaps.length>1,A.errors)throw new Error("KTX2 container - could not transcode the data. "+A.errors);for(let f=0;f<A.mipmaps.length;++f){const s=A.mipmaps[f];if(!s||!s.data)throw new Error("KTX2 container - could not transcode one of the image");N?(X.width=s.width,X.height=s.height,this._engine._uploadDataToTextureDirectly(X,s.data,0,f,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(X,A.transcodedFormat,s.width,s.height,s.data,0,f)}X._extension=".ktx2",X.width=A.mipmaps[0].width,X.height=A.mipmaps[0].height,X.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(A){if(A.byteLength>=12){const X=new Uint8Array(A.buffer,A.byteOffset,12);if(171===X[0]&&75===X[1]&&84===X[2]&&88===X[3]&&32===X[4]&&50===X[5]&&48===X[6]&&187===X[7]&&13===X[8]&&10===X[9]&&26===X[10]&&10===X[11])return!0}return!1}}c.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},c.DefaultNumWorkers=c.GetDefaultNumWorkers(),c.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(A){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==A&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=A,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(A){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==A&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=A,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(A){this._forceRGBA!==A&&(this._forceRGBA=A,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(A){this._forceR8!==A&&(this._forceR8=A,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(A){this._forceRG8!==A&&(this._forceRG8=A,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(A){this._bypassTranscoders!==A&&(this._bypassTranscoders=A,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const A={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(A.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[g.BC1_RGB,g.BC3_RGBA],yes:{transcodeFormat:g.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=A,A}};class M{constructor(){this.supportCascades=!1}loadCubeData(A,X,s,N){if(Array.isArray(A))return;X._invertVScale=!X.invertY;const E=X.getEngine(),g=new f(A,6),K=g.numberOfMipmapLevels>1&&X.generateMipMaps;E._unpackFlipY(!0),g.uploadLevels(X,X.generateMipMaps),X.width=g.pixelWidth,X.height=g.pixelHeight,E._setCubeMapTextureParams(X,K,g.numberOfMipmapLevels-1),X.isReady=!0,X.onLoadedObservable.notifyObservers(X),X.onLoadedObservable.clear(),N&&N()}loadData(A,X,s,E){if(f.IsValid(A)){X._invertVScale=!X.invertY;const N=new f(A,1),E=function(A){switch(A){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(N.glInternalFormat);E?(X.format=E,X._useSRGBBuffer=X.getEngine()._getUseSRGBBuffer(!0,X.generateMipMaps),X._gammaSpace=!0):X.format=N.glInternalFormat,s(N.pixelWidth,N.pixelHeight,X.generateMipMaps,!0,(()=>{N.uploadLevels(X,X.generateMipMaps)}),N.isInvalid)}else if(c.IsValid(A)){new c(X.getEngine())._uploadAsync(A,X,E).then((()=>{s(X.width,X.height,X.generateMipMaps,!0,(()=>{}),!1)}),(A=>{N.b.Warn(`Failed to load KTX2 texture data: ${A.message}`),s(0,0,!1,!1,(()=>{}),!0)}))}else N.b.Error("texture missing KTX identifier"),s(0,0,!1,!1,(()=>{}),!0)}}},2510:(A,X,s)=>{s.d(X,{d:()=>f});class N{constructor(A){this._pendingActions=new Array,this._workerInfos=A.map((A=>({workerPromise:Promise.resolve(A),idle:!0})))}dispose(){for(const A of this._workerInfos)A.workerPromise.then((A=>{A.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(A){this._executeOnIdleWorker(A)||this._pendingActions.push(A)}_executeOnIdleWorker(A){for(const X of this._workerInfos)if(X.idle)return this._execute(X,A),!0;return!1}_execute(A,X){A.idle=!1,A.workerPromise.then((s=>{X(s,(()=>{const X=this._pendingActions.shift();X?this._execute(A,X):A.idle=!0}))}))}}class f extends N{constructor(A,X){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:f.DefaultOptions;super([]),this._maxWorkers=A,this._createWorkerAsync=X,this._options=s}push(A){if(!this._executeOnIdleWorker(A))if(this._workerInfos.length<this._maxWorkers){const X={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(X),this._execute(X,A)}else this._pendingActions.push(A)}_execute(A,X){A.timeoutId&&(clearTimeout(A.timeoutId),delete A.timeoutId),super._execute(A,((s,N)=>{X(s,(()=>{N(),A.idle&&(A.timeoutId=setTimeout((()=>{A.workerPromise.then((A=>{A.terminate()}));const X=this._workerInfos.indexOf(A);-1!==X&&this._workerInfos.splice(X,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}f.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);