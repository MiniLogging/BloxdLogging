"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2181:(j,H,s)=>{s.r(H),s.d(H,{_TGATextureLoader:()=>V});var i=s(514);function B(j){let H=0;return{id_length:j[H++],colormap_type:j[H++],image_type:j[H++],colormap_index:j[H++]|j[H++]<<8,colormap_length:j[H++]|j[H++]<<8,colormap_size:j[H++],origin:[j[H++]|j[H++]<<8,j[H++]|j[H++]<<8],width:j[H++]|j[H++]<<8,height:j[H++]|j[H++]<<8,pixel_size:j[H++],flags:j[H++]}}function e(j,H){if(H.length<19)return void i.b.Error("Unable to load TGA file - Not enough data to contain header");let s=18;const e=B(H);if(e.id_length+s>H.length)return void i.b.Error("Unable to load TGA file - Not enough data");s+=e.id_length;let V,C=!1,L=!1,U=!1;switch(e.image_type){case 9:C=!0;case 1:L=!0;break;case 10:C=!0;case 2:break;case 11:C=!0;case 3:U=!0}const x=e.pixel_size>>3,p=e.width*e.height*x;let a,E,r,q,J,h,o;if(L&&(a=H.subarray(s,s+=e.colormap_length*(e.colormap_size>>3))),C){let j,i,B;V=new Uint8Array(p);let e=0;const k=new Uint8Array(x);for(;s<p&&e<p;)if(j=H[s++],i=1+(127&j),128&j){for(B=0;B<x;++B)k[B]=H[s++];for(B=0;B<i;++B)V.set(k,e+B*x);e+=x*i}else{for(i*=x,B=0;B<i;++B)V[e+B]=H[s++];e+=i}}else V=H.subarray(s,s+=L?e.width*e.height:p);switch((48&e.flags)>>4){default:case 2:E=0,q=1,o=e.width,r=0,J=1,h=e.height;break;case 0:E=0,q=1,o=e.width,r=e.height-1,J=-1,h=-1;break;case 3:E=e.width-1,q=-1,o=-1,r=0,J=1,h=e.height;break;case 1:E=e.width-1,q=-1,o=-1,r=e.height-1,J=-1,h=-1}const R="_getImageData"+(U?"Grey":"")+e.pixel_size+"bits",Y=k[R](e,a,V,r,J,h,E,q,o);j.getEngine()._uploadDataToTextureDirectly(j,Y)}const k={GetTGAHeader:B,UploadContent:e,_getImageData8bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=H,x=j.width,p=j.height;let a,E,r,q=0;const J=new Uint8Array(x*p*4);for(r=i;r!==e;r+=B)for(E=k;E!==C;E+=V,q++)a=L[q],J[4*(E+x*r)+3]=255,J[4*(E+x*r)+2]=U[3*a+0],J[4*(E+x*r)+1]=U[3*a+1],J[4*(E+x*r)+0]=U[3*a+2];return J},_getImageData16bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=j.width,x=j.height;let p,a,E,r=0;const q=new Uint8Array(U*x*4);for(E=i;E!==e;E+=B)for(a=k;a!==C;a+=V,r+=2){p=L[r+0]+(L[r+1]<<8);const j=255*((31744&p)>>10)/31|0,H=255*((992&p)>>5)/31|0,s=255*(31&p)/31|0;q[4*(a+U*E)+0]=j,q[4*(a+U*E)+1]=H,q[4*(a+U*E)+2]=s,q[4*(a+U*E)+3]=32768&p?0:255}return q},_getImageData24bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=j.width,x=j.height;let p,a,E=0;const r=new Uint8Array(U*x*4);for(a=i;a!==e;a+=B)for(p=k;p!==C;p+=V,E+=3)r[4*(p+U*a)+3]=255,r[4*(p+U*a)+2]=L[E+0],r[4*(p+U*a)+1]=L[E+1],r[4*(p+U*a)+0]=L[E+2];return r},_getImageData32bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=j.width,x=j.height;let p,a,E=0;const r=new Uint8Array(U*x*4);for(a=i;a!==e;a+=B)for(p=k;p!==C;p+=V,E+=4)r[4*(p+U*a)+2]=L[E+0],r[4*(p+U*a)+1]=L[E+1],r[4*(p+U*a)+0]=L[E+2],r[4*(p+U*a)+3]=L[E+3];return r},_getImageDataGrey8bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=j.width,x=j.height;let p,a,E,r=0;const q=new Uint8Array(U*x*4);for(E=i;E!==e;E+=B)for(a=k;a!==C;a+=V,r++)p=L[r],q[4*(a+U*E)+0]=p,q[4*(a+U*E)+1]=p,q[4*(a+U*E)+2]=p,q[4*(a+U*E)+3]=255;return q},_getImageDataGrey16bits:function(j,H,s,i,B,e,k,V,C){const L=s,U=j.width,x=j.height;let p,a,E=0;const r=new Uint8Array(U*x*4);for(a=i;a!==e;a+=B)for(p=k;p!==C;p+=V,E+=2)r[4*(p+U*a)+0]=L[E+0],r[4*(p+U*a)+1]=L[E+0],r[4*(p+U*a)+2]=L[E+0],r[4*(p+U*a)+3]=L[E+1];return r}};class V{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(j,H,s){const i=new Uint8Array(j.buffer,j.byteOffset,j.byteLength),k=B(i);s(k.width,k.height,H.generateMipMaps,!1,(()=>{e(H,i)}))}}}}]);