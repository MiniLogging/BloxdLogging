"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2499:(t,q,S)=>{S.r(q),S.d(q,{_HDRTextureLoader:()=>Z});var o=S(678);class B{static ConvertPanoramaToCubemap(t,q,S,o){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!t)throw"ConvertPanoramaToCubemap: input cannot be null";if(t.length!=q*S*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(o,this.FACE_FRONT,t,q,S,B),back:this.CreateCubemapTexture(o,this.FACE_BACK,t,q,S,B),left:this.CreateCubemapTexture(o,this.FACE_LEFT,t,q,S,B),right:this.CreateCubemapTexture(o,this.FACE_RIGHT,t,q,S,B),up:this.CreateCubemapTexture(o,this.FACE_UP,t,q,S,B),down:this.CreateCubemapTexture(o,this.FACE_DOWN,t,q,S,B),size:o,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(t,q,S,o,B){let z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const L=new ArrayBuffer(t*t*4*3),r=new Float32Array(L),e=z?Math.max(1,Math.round(o/4/t)):1,C=1/e,Z=C*C,b=q[1].Kg(q[0]).scale(C/t),O=q[3].Kg(q[2]).scale(C/t),i=1/t;let h=0;for(let l=0;l<t;l++)for(let z=0;z<e;z++){let z=q[0],L=q[2];for(let q=0;q<t;q++)for(let C=0;C<e;C++){const e=L.Kg(z).scale(h).add(z);e.normalize();const C=this.CalcProjectionSpherical(e,S,o,B);r[l*t*3+3*q+0]+=C.r*Z,r[l*t*3+3*q+1]+=C.g*Z,r[l*t*3+3*q+2]+=C.b*Z,z=z.add(b),L=L.add(O)}h+=i*C}return r}static CalcProjectionSpherical(t,q,S,o){let B=Math.atan2(t.z,t.x);const z=Math.acos(t.y);for(;B<-Math.PI;)B+=2*Math.PI;for(;B>Math.PI;)B-=2*Math.PI;let L=B/Math.PI;const r=z/Math.PI;L=.5*L+.5;let e=Math.round(L*S);e<0?e=0:e>=S&&(e=S-1);let C=Math.round(r*o);C<0?C=0:C>=o&&(C=o-1);const Z=o-C-1;return{r:q[Z*S*3+3*e+0],g:q[Z*S*3+3*e+1],b:q[Z*S*3+3*e+2]}}}function z(t,q,S,o,B,z){B>0?(B=function(t,q){return q>1023?t*Math.pow(2,1023)*Math.pow(2,q-1023):q<-1074?t*Math.pow(2,-1074)*Math.pow(2,q+1074):t*Math.pow(2,q)}(1,B-136),t[z+0]=q*B,t[z+1]=S*B,t[z+2]=o*B):(t[z+0]=0,t[z+1]=0,t[z+2]=0)}function L(t,q){let S="",o="";for(let B=q;B<t.length-q&&(o=String.fromCharCode(t[B]),"\n"!=o);B++)S+=o;return S}function r(t){let q=0,S=0,o=L(t,0);if("#"!=o[0]||"?"!=o[1])throw"Bad HDR Format.";let B=!1,z=!1,r=0;do{r+=o.length+1,o=L(t,r),"FORMAT=32-bit_rle_rgbe"==o?z=!0:0==o.length&&(B=!0)}while(!B);if(!z)throw"HDR Bad header format, unsupported FORMAT";r+=o.length+1,o=L(t,r);const e=/^-Y (.*) \+X (.*)$/g.exec(o);if(!e||e.length<3)throw"HDR Bad header format, no size";if(S=parseInt(e[2]),q=parseInt(e[1]),S<8||S>32767)throw"HDR Bad header format, unsupported size";return r+=o.length+1,{height:q,width:S,dataPosition:r}}function e(t,q){return function(t,q){let S=q.height;const o=q.width;let B,L,r,e,Z,b=q.dataPosition,O=0,i=0,h=0;const l=new ArrayBuffer(4*o),I=new Uint8Array(l),a=new ArrayBuffer(q.width*q.height*4*3),v=new Float32Array(a);for(;S>0;){if(B=t[b++],L=t[b++],r=t[b++],e=t[b++],2!=B||2!=L||128&r||q.width<8||q.width>32767)return C(t,q);if((r<<8|e)!=o)throw"HDR Bad header format, wrong scan line width";for(O=0,h=0;h<4;h++)for(i=(h+1)*o;O<i;)if(B=t[b++],L=t[b++],B>128){if(Z=B-128,0==Z||Z>i-O)throw"HDR Bad Format, bad scanline data (run)";for(;Z-- >0;)I[O++]=L}else{if(Z=B,0==Z||Z>i-O)throw"HDR Bad Format, bad scanline data (non-run)";if(I[O++]=L,--Z>0)for(let q=0;q<Z;q++)I[O++]=t[b++]}for(h=0;h<o;h++)B=I[h],L=I[h+o],r=I[h+2*o],e=I[h+3*o],z(v,B,L,r,e,(q.height-S)*o*3+3*h);S--}return v}(t,q)}function C(t,q){let S=q.height;const o=q.width;let B,L,r,e,C,Z=q.dataPosition;const b=new ArrayBuffer(q.width*q.height*4*3),O=new Float32Array(b);for(;S>0;){for(C=0;C<q.width;C++)B=t[Z++],L=t[Z++],r=t[Z++],e=t[Z++],z(O,B,L,r,e,(q.height-S)*o*3+3*C);S--}return O}B.FACE_LEFT=[new o.o(-1,-1,-1),new o.o(1,-1,-1),new o.o(-1,1,-1),new o.o(1,1,-1)],B.FACE_RIGHT=[new o.o(1,-1,1),new o.o(-1,-1,1),new o.o(1,1,1),new o.o(-1,1,1)],B.FACE_FRONT=[new o.o(1,-1,-1),new o.o(1,-1,1),new o.o(1,1,-1),new o.o(1,1,1)],B.FACE_BACK=[new o.o(-1,-1,1),new o.o(-1,-1,-1),new o.o(-1,1,1),new o.o(-1,1,-1)],B.FACE_DOWN=[new o.o(1,1,-1),new o.o(1,1,1),new o.o(-1,1,-1),new o.o(-1,1,1)],B.FACE_UP=[new o.o(-1,-1,-1),new o.o(-1,-1,1),new o.o(1,-1,-1),new o.o(1,-1,1)];class Z{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(t,q,S){const o=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),B=r(o),z=e(o,B),L=B.width*B.height,C=new Float32Array(4*L);for(let r=0;r<L;r+=1)C[4*r]=z[3*r],C[4*r+1]=z[3*r+1],C[4*r+2]=z[3*r+2],C[4*r+3]=1;S(B.width,B.height,q.generateMipMaps,!1,(()=>{const t=q.getEngine();q.type=1,q.format=5,q._gammaSpace=!1,t._uploadDataToTextureDirectly(q,C)}))}}}}]);