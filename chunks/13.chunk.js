"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2684:(P,Q,O)=>{O.r(Q),O.d(Q,{_KTXTextureLoader:()=>A});var b=O(561);class F{constructor(P,Q){if(this.data=P,this.isInvalid=!1,!F.IsValid(P))return this.isInvalid=!0,void b.d.Error("texture missing KTX identifier");const O=Uint32Array.BYTES_PER_ELEMENT,g=new DataView(this.data.buffer,this.data.byteOffset+12,13*O),m=67305985===g.getUint32(0,!0);return this.glType=g.getUint32(1*O,m),this.glTypeSize=g.getUint32(2*O,m),this.glFormat=g.getUint32(3*O,m),this.glInternalFormat=g.getUint32(4*O,m),this.glBaseInternalFormat=g.getUint32(5*O,m),this.pixelWidth=g.getUint32(6*O,m),this.pixelHeight=g.getUint32(7*O,m),this.pixelDepth=g.getUint32(8*O,m),this.numberOfArrayElements=g.getUint32(9*O,m),this.numberOfFaces=g.getUint32(10*O,m),this.numberOfMipmapLevels=g.getUint32(11*O,m),this.bytesOfKeyValueData=g.getUint32(12*O,m),0!==this.glType?(b.d.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(b.d.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(b.d.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==Q?(b.d.Error("number of faces expected"+Q+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=F.COMPRESSED_2D))}uploadLevels(P,Q){switch(this.loadType){case F.COMPRESSED_2D:this._upload2DCompressedLevels(P,Q);case F.TEX_2D:case F.COMPRESSED_3D:case F.TEX_3D:}}_upload2DCompressedLevels(P,Q){let O=F.HEADER_LEN+this.bytesOfKeyValueData,b=this.pixelWidth,g=this.pixelHeight;const m=Q?this.numberOfMipmapLevels:1;for(let F=0;F<m;F++){const Q=new Int32Array(this.data.buffer,this.data.byteOffset+O,1)[0];O+=4;for(let m=0;m<this.numberOfFaces;m++){const q=new Uint8Array(this.data.buffer,this.data.byteOffset+O,Q);P.getEngine()._uploadCompressedDataToTextureDirectly(P,P.format,b,g,q,m,F),O+=Q,O+=3-(Q+3)%4}b=Math.max(1,.5*b),g=Math.max(1,.5*g)}}static IsValid(P){if(P.byteLength>=12){const Q=new Uint8Array(P.buffer,P.byteOffset,12);if(171===Q[0]&&75===Q[1]&&84===Q[2]&&88===Q[3]&&32===Q[4]&&49===Q[5]&&49===Q[6]&&187===Q[7]&&13===Q[8]&&10===Q[9]&&26===Q[10]&&10===Q[11])return!0}return!1}}F.HEADER_LEN=64,F.COMPRESSED_2D=0,F.COMPRESSED_3D=1,F.TEX_2D=2,F.TEX_3D=3;var g,m,q,R=O(2688),X=O(545);function C(P,Q){const O=(null===Q||void 0===Q?void 0:Q.jsDecoderModule)||KTX2DECODER;P&&(P.wasmUASTCToASTC&&(O.LiteTranscoder_UASTC_ASTC.WasmModuleURL=P.wasmUASTCToASTC),P.wasmUASTCToBC7&&(O.LiteTranscoder_UASTC_BC7.WasmModuleURL=P.wasmUASTCToBC7),P.wasmUASTCToRGBA_UNORM&&(O.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=P.wasmUASTCToRGBA_UNORM),P.wasmUASTCToRGBA_SRGB&&(O.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=P.wasmUASTCToRGBA_SRGB),P.wasmUASTCToR8_UNORM&&(O.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=P.wasmUASTCToR8_UNORM),P.wasmUASTCToRG8_UNORM&&(O.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=P.wasmUASTCToRG8_UNORM),P.jsMSCTranscoder&&(O.MSCTranscoder.JSModuleURL=P.jsMSCTranscoder),P.wasmMSCTranscoder&&(O.MSCTranscoder.WasmModuleURL=P.wasmMSCTranscoder),P.wasmZSTDDecoder&&(O.ZSTDDecoder.WasmModuleURL=P.wasmZSTDDecoder)),Q&&(Q.wasmUASTCToASTC&&(O.LiteTranscoder_UASTC_ASTC.WasmBinary=Q.wasmUASTCToASTC),Q.wasmUASTCToBC7&&(O.LiteTranscoder_UASTC_BC7.WasmBinary=Q.wasmUASTCToBC7),Q.wasmUASTCToRGBA_UNORM&&(O.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=Q.wasmUASTCToRGBA_UNORM),Q.wasmUASTCToRGBA_SRGB&&(O.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=Q.wasmUASTCToRGBA_SRGB),Q.wasmUASTCToR8_UNORM&&(O.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=Q.wasmUASTCToR8_UNORM),Q.wasmUASTCToRG8_UNORM&&(O.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=Q.wasmUASTCToRG8_UNORM),Q.jsMSCTranscoder&&(O.MSCTranscoder.JSModule=Q.jsMSCTranscoder),Q.wasmMSCTranscoder&&(O.MSCTranscoder.WasmBinary=Q.wasmMSCTranscoder),Q.wasmZSTDDecoder&&(O.ZSTDDecoder.WasmBinary=Q.wasmZSTDDecoder))}function L(P){let Q;"undefined"===typeof P&&"undefined"!==typeof KTX2DECODER&&(P=KTX2DECODER),onmessage=O=>{if(O.data)switch(O.data.action){case"init":{const b=O.data.urls;b&&(b.jsDecoderModule&&"undefined"===typeof P&&(importScripts(b.jsDecoderModule),P=KTX2DECODER),C(b)),O.data.wasmBinaries&&C(void 0,{...O.data.wasmBinaries,jsDecoderModule:P}),Q=new P.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":P.KTX2Decoder.DefaultDecoderOptions=O.data.options;break;case"decode":Q.decode(O.data.data,O.data.caps,O.data.options).then((P=>{const Q=[];for(let O=0;O<P.mipmaps.length;++O){const b=P.mipmaps[O];b&&b.data&&Q.push(b.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:P},Q)})).catch((P=>{postMessage({action:"decoded",success:!1,msg:P})}))}}}!function(P){P[P.ETC1S=0]="ETC1S",P[P.UASTC4x4=1]="UASTC4x4"}(g||(g={})),function(P){P[P.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",P[P.BC7_RGBA=1]="BC7_RGBA",P[P.BC3_RGBA=2]="BC3_RGBA",P[P.BC1_RGB=3]="BC1_RGB",P[P.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",P[P.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",P[P.ETC2_RGBA=6]="ETC2_RGBA",P[P.ETC1_RGB=7]="ETC1_RGB",P[P.RGBA32=8]="RGBA32",P[P.R8=9]="R8",P[P.RG8=10]="RG8"}(m||(m={})),function(P){P[P.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",P[P.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",P[P.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",P[P.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",P[P.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",P[P.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",P[P.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",P[P.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",P[P.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",P[P.RGBA8Format=32856]="RGBA8Format",P[P.R8Format=33321]="R8Format",P[P.RG8Format=33323]="RG8Format"}(q||(q={}));class G{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(P){if(G._WorkerPoolPromise||G._DecoderModulePromise)return;const Q={jsDecoderModule:X.d.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:X.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:X.d.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:X.d.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:X.d.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};P&&"function"===typeof Worker&&"undefined"!==typeof URL?G._WorkerPoolPromise=new Promise((O=>{const b=`${C}(${L})()`,F=URL.createObjectURL(new Blob([b],{type:"application/javascript"}));O(new R.c(P,(async()=>await async function(P,Q,O){return await new Promise(((b,F)=>{const g=Q=>{P.removeEventListener("error",g),P.removeEventListener("message",m),F(Q)},m=Q=>{"init"===Q.data.action&&(P.removeEventListener("error",g),P.removeEventListener("message",m),b(P))};P.addEventListener("error",g),P.addEventListener("message",m),P.postMessage({action:"init",urls:O,wasmBinaries:Q})}))}(new Worker(F),void 0,Q))))})):"undefined"===typeof G._KTX2DecoderModule?G._DecoderModulePromise=X.d.LoadBabylonScriptAsync(Q.jsDecoderModule).then((()=>(G._KTX2DecoderModule=KTX2DECODER,G._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,G._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,C(Q,G._KTX2DecoderModule),new G._KTX2DecoderModule.KTX2Decoder))):(G._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,G._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,G._DecoderModulePromise=Promise.resolve(new G._KTX2DecoderModule.KTX2Decoder))}constructor(P){let Q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:G.DefaultNumWorkers;this._engine=P;const O="object"===typeof Q&&Q.workerPool||G.WorkerPool;if(O)G._WorkerPoolPromise=Promise.resolve(O);else{var b;if("object"===typeof Q)G._KTX2DecoderModule=null===Q||void 0===Q||null===(b=Q.binariesAndModulesContainer)||void 0===b?void 0:b.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(G._KTX2DecoderModule=KTX2DECODER);const P="number"===typeof Q?Q:Q.numWorkers??G.DefaultNumWorkers;G._Initialize(P)}}async _uploadAsync(P,Q,O){const b=this._engine.getCaps(),F={astc:!!b.astc,bptc:!!b.bptc,s3tc:!!b.s3tc,pvrtc:!!b.pvrtc,etc2:!!b.etc2,etc1:!!b.etc1};if(G._WorkerPoolPromise){const b=await G._WorkerPoolPromise;return await new Promise(((g,m)=>{b.push(((b,q)=>{const R=P=>{b.removeEventListener("error",R),b.removeEventListener("message",X),m(P),q()},X=P=>{if("decoded"===P.data.action){if(b.removeEventListener("error",R),b.removeEventListener("message",X),P.data.success)try{this._createTexture(P.data.decodedData,Q,O),g()}catch(F){m({message:F})}else m({message:P.data.msg});q()}};b.addEventListener("error",R),b.addEventListener("message",X),b.postMessage({action:"setDefaultDecoderOptions",options:G.DefaultDecoderOptions._getKTX2DecoderOptions()});const C=new Uint8Array(P.byteLength);C.set(new Uint8Array(P.buffer,P.byteOffset,P.byteLength)),b.postMessage({action:"decode",data:C,caps:F,options:O},[C.buffer])}))}))}if(G._DecoderModulePromise){const O=await G._DecoderModulePromise;return G.DefaultDecoderOptions.isDirty&&(G._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=G.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((F,g)=>{O.decode(P,b).then((P=>{this._createTexture(P,Q),F()})).catch((P=>{g({message:P})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(P,Q,O){this._engine._bindTextureDirectly(3553,Q),O&&(O.transcodedFormat=P.transcodedFormat,O.isInGammaSpace=P.isInGammaSpace,O.wi=P.wi,O.transcoderName=P.transcoderName);let b=!0;switch(P.transcodedFormat){case 32856:Q.type=0,Q.format=5;break;case 33321:Q.type=0,Q.format=6;break;case 33323:Q.type=0,Q.format=7;break;default:Q.format=P.transcodedFormat,b=!1}if(Q._gammaSpace=P.isInGammaSpace,Q.generateMipMaps=P.mipmaps.length>1,P.errors)throw new Error("KTX2 container - could not transcode the data. "+P.errors);for(let F=0;F<P.mipmaps.length;++F){const O=P.mipmaps[F];if(!O||!O.data)throw new Error("KTX2 container - could not transcode one of the image");b?(Q.width=O.width,Q.height=O.height,this._engine._uploadDataToTextureDirectly(Q,O.data,0,F,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(Q,P.transcodedFormat,O.width,O.height,O.data,0,F)}Q._extension=".ktx2",Q.width=P.mipmaps[0].width,Q.height=P.mipmaps[0].height,Q.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(P){if(P.byteLength>=12){const Q=new Uint8Array(P.buffer,P.byteOffset,12);if(171===Q[0]&&75===Q[1]&&84===Q[2]&&88===Q[3]&&32===Q[4]&&50===Q[5]&&48===Q[6]&&187===Q[7]&&13===Q[8]&&10===Q[9]&&26===Q[10]&&10===Q[11])return!0}return!1}}G.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},G.DefaultNumWorkers=G.GetDefaultNumWorkers(),G.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(P){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==P&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=P,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(P){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==P&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=P,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(P){this._forceRGBA!==P&&(this._forceRGBA=P,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(P){this._forceR8!==P&&(this._forceR8=P,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(P){this._forceRG8!==P&&(this._forceRG8=P,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(P){this._bypassTranscoders!==P&&(this._bypassTranscoders=P,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const P={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(P.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[m.BC1_RGB,m.BC3_RGBA],yes:{transcodeFormat:m.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=P,P}};class A{constructor(){this.supportCascades=!1}loadCubeData(P,Q,O,b){if(Array.isArray(P))return;Q._invertVScale=!Q.invertY;const g=Q.getEngine(),m=new F(P,6),q=m.numberOfMipmapLevels>1&&Q.generateMipMaps;g._unpackFlipY(!0),m.uploadLevels(Q,Q.generateMipMaps),Q.width=m.pixelWidth,Q.height=m.pixelHeight,g._setCubeMapTextureParams(Q,q,m.numberOfMipmapLevels-1),Q.isReady=!0,Q.onLoadedObservable.notifyObservers(Q),Q.onLoadedObservable.clear(),b&&b()}loadData(P,Q,O,g){if(F.IsValid(P)){Q._invertVScale=!Q.invertY;const b=new F(P,1),g=function(P){switch(P){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(b.glInternalFormat);g?(Q.format=g,Q._useSRGBBuffer=Q.getEngine()._getUseSRGBBuffer(!0,Q.generateMipMaps),Q._gammaSpace=!0):Q.format=b.glInternalFormat,O(b.pixelWidth,b.pixelHeight,Q.generateMipMaps,!0,(()=>{b.uploadLevels(Q,Q.generateMipMaps)}),b.isInvalid)}else if(G.IsValid(P)){new G(Q.getEngine())._uploadAsync(P,Q,g).then((()=>{O(Q.width,Q.height,Q.generateMipMaps,!0,(()=>{}),!1)}),(P=>{b.d.Warn(`Failed to load KTX2 texture data: ${P.message}`),O(0,0,!1,!1,(()=>{}),!0)}))}else b.d.Error("texture missing KTX identifier"),O(0,0,!1,!1,(()=>{}),!0)}}},2688:(P,Q,O)=>{O.d(Q,{c:()=>F});class b{constructor(P){this._pendingActions=new Array,this._workerInfos=P.map((P=>({workerPromise:Promise.resolve(P),idle:!0})))}dispose(){for(const P of this._workerInfos)P.workerPromise.then((P=>{P.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(P){this._executeOnIdleWorker(P)||this._pendingActions.push(P)}_executeOnIdleWorker(P){for(const Q of this._workerInfos)if(Q.idle)return this._execute(Q,P),!0;return!1}_execute(P,Q){P.idle=!1,P.workerPromise.then((O=>{Q(O,(()=>{const Q=this._pendingActions.shift();Q?this._execute(P,Q):P.idle=!0}))}))}}class F extends b{constructor(P,Q){let O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:F.DefaultOptions;super([]),this._maxWorkers=P,this._createWorkerAsync=Q,this._options=O}push(P){if(!this._executeOnIdleWorker(P))if(this._workerInfos.length<this._maxWorkers){const Q={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(Q),this._execute(Q,P)}else this._pendingActions.push(P)}_execute(P,Q){P.timeoutId&&(clearTimeout(P.timeoutId),delete P.timeoutId),super._execute(P,((O,b)=>{Q(O,(()=>{b(),P.idle&&(P.timeoutId=setTimeout((()=>{P.workerPromise.then((P=>{P.terminate()}));const Q=this._workerInfos.indexOf(P);-1!==Q&&this._workerInfos.splice(Q,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}F.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);