"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2561:(n,k,T)=>{T.r(k),T.d(k,{_KTXTextureLoader:()=>J});var c=T(556);class K{constructor(n,k){if(this.data=n,this.isInvalid=!1,!K.IsValid(n))return this.isInvalid=!0,void c.d.Error("texture missing KTX identifier");const T=Uint32Array.BYTES_PER_ELEMENT,Q=new DataView(this.data.buffer,this.data.byteOffset+12,13*T),G=67305985===Q.getUint32(0,!0);return this.glType=Q.getUint32(1*T,G),this.glTypeSize=Q.getUint32(2*T,G),this.glFormat=Q.getUint32(3*T,G),this.glInternalFormat=Q.getUint32(4*T,G),this.glBaseInternalFormat=Q.getUint32(5*T,G),this.pixelWidth=Q.getUint32(6*T,G),this.pixelHeight=Q.getUint32(7*T,G),this.pixelDepth=Q.getUint32(8*T,G),this.numberOfArrayElements=Q.getUint32(9*T,G),this.numberOfFaces=Q.getUint32(10*T,G),this.numberOfMipmapLevels=Q.getUint32(11*T,G),this.bytesOfKeyValueData=Q.getUint32(12*T,G),0!==this.glType?(c.d.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(c.d.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(c.d.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==k?(c.d.Error("number of faces expected"+k+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=K.COMPRESSED_2D))}uploadLevels(n,k){switch(this.loadType){case K.COMPRESSED_2D:this._upload2DCompressedLevels(n,k);case K.TEX_2D:case K.COMPRESSED_3D:case K.TEX_3D:}}_upload2DCompressedLevels(n,k){let T=K.HEADER_LEN+this.bytesOfKeyValueData,c=this.pixelWidth,Q=this.pixelHeight;const G=k?this.numberOfMipmapLevels:1;for(let K=0;K<G;K++){const k=new Int32Array(this.data.buffer,this.data.byteOffset+T,1)[0];T+=4;for(let G=0;G<this.numberOfFaces;G++){const w=new Uint8Array(this.data.buffer,this.data.byteOffset+T,k);n.getEngine()._uploadCompressedDataToTextureDirectly(n,n.format,c,Q,w,G,K),T+=k,T+=3-(k+3)%4}c=Math.max(1,.5*c),Q=Math.max(1,.5*Q)}}static IsValid(n){if(n.byteLength>=12){const k=new Uint8Array(n.buffer,n.byteOffset,12);if(171===k[0]&&75===k[1]&&84===k[2]&&88===k[3]&&32===k[4]&&49===k[5]&&49===k[6]&&187===k[7]&&13===k[8]&&10===k[9]&&26===k[10]&&10===k[11])return!0}return!1}}K.HEADER_LEN=64,K.COMPRESSED_2D=0,K.COMPRESSED_3D=1,K.TEX_2D=2,K.TEX_3D=3;var Q,G,w,E=T(2570),I=T(542);function S(n,k){const T=(null===k||void 0===k?void 0:k.jsDecoderModule)||KTX2DECODER;n&&(n.wasmUASTCToASTC&&(T.LiteTranscoder_UASTC_ASTC.WasmModuleURL=n.wasmUASTCToASTC),n.wasmUASTCToBC7&&(T.LiteTranscoder_UASTC_BC7.WasmModuleURL=n.wasmUASTCToBC7),n.wasmUASTCToRGBA_UNORM&&(T.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=n.wasmUASTCToRGBA_UNORM),n.wasmUASTCToRGBA_SRGB&&(T.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=n.wasmUASTCToRGBA_SRGB),n.wasmUASTCToR8_UNORM&&(T.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=n.wasmUASTCToR8_UNORM),n.wasmUASTCToRG8_UNORM&&(T.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=n.wasmUASTCToRG8_UNORM),n.jsMSCTranscoder&&(T.MSCTranscoder.JSModuleURL=n.jsMSCTranscoder),n.wasmMSCTranscoder&&(T.MSCTranscoder.WasmModuleURL=n.wasmMSCTranscoder),n.wasmZSTDDecoder&&(T.ZSTDDecoder.WasmModuleURL=n.wasmZSTDDecoder)),k&&(k.wasmUASTCToASTC&&(T.LiteTranscoder_UASTC_ASTC.WasmBinary=k.wasmUASTCToASTC),k.wasmUASTCToBC7&&(T.LiteTranscoder_UASTC_BC7.WasmBinary=k.wasmUASTCToBC7),k.wasmUASTCToRGBA_UNORM&&(T.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=k.wasmUASTCToRGBA_UNORM),k.wasmUASTCToRGBA_SRGB&&(T.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=k.wasmUASTCToRGBA_SRGB),k.wasmUASTCToR8_UNORM&&(T.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=k.wasmUASTCToR8_UNORM),k.wasmUASTCToRG8_UNORM&&(T.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=k.wasmUASTCToRG8_UNORM),k.jsMSCTranscoder&&(T.MSCTranscoder.JSModule=k.jsMSCTranscoder),k.wasmMSCTranscoder&&(T.MSCTranscoder.WasmBinary=k.wasmMSCTranscoder),k.wasmZSTDDecoder&&(T.ZSTDDecoder.WasmBinary=k.wasmZSTDDecoder))}function P(n){let k;"undefined"===typeof n&&"undefined"!==typeof KTX2DECODER&&(n=KTX2DECODER),onmessage=T=>{if(T.data)switch(T.data.action){case"init":{const c=T.data.urls;c&&(c.jsDecoderModule&&"undefined"===typeof n&&(importScripts(c.jsDecoderModule),n=KTX2DECODER),S(c)),T.data.wasmBinaries&&S(void 0,{...T.data.wasmBinaries,jsDecoderModule:n}),k=new n.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":n.KTX2Decoder.DefaultDecoderOptions=T.data.options;break;case"decode":k.decode(T.data.data,T.data.caps,T.data.options).then((n=>{const k=[];for(let T=0;T<n.mipmaps.length;++T){const c=n.mipmaps[T];c&&c.data&&k.push(c.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:n},k)})).catch((n=>{postMessage({action:"decoded",success:!1,msg:n})}))}}}!function(n){n[n.ETC1S=0]="ETC1S",n[n.UASTC4x4=1]="UASTC4x4"}(Q||(Q={})),function(n){n[n.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",n[n.BC7_RGBA=1]="BC7_RGBA",n[n.BC3_RGBA=2]="BC3_RGBA",n[n.BC1_RGB=3]="BC1_RGB",n[n.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",n[n.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",n[n.ETC2_RGBA=6]="ETC2_RGBA",n[n.ETC1_RGB=7]="ETC1_RGB",n[n.RGBA32=8]="RGBA32",n[n.R8=9]="R8",n[n.RG8=10]="RG8"}(G||(G={})),function(n){n[n.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",n[n.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",n[n.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",n[n.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",n[n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",n[n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",n[n.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",n[n.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",n[n.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",n[n.RGBA8Format=32856]="RGBA8Format",n[n.R8Format=33321]="R8Format",n[n.RG8Format=33323]="RG8Format"}(w||(w={}));class W{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(n){if(W._WorkerPoolPromise||W._DecoderModulePromise)return;const k={jsDecoderModule:I.e.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:I.e.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:I.e.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:I.e.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:I.e.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};n&&"function"===typeof Worker&&"undefined"!==typeof URL?W._WorkerPoolPromise=new Promise((T=>{const c=`${S}(${P})()`,K=URL.createObjectURL(new Blob([c],{type:"application/javascript"}));T(new E.b(n,(async()=>await async function(n,k,T){return await new Promise(((c,K)=>{const Q=k=>{n.removeEventListener("error",Q),n.removeEventListener("message",G),K(k)},G=k=>{"init"===k.data.action&&(n.removeEventListener("error",Q),n.removeEventListener("message",G),c(n))};n.addEventListener("error",Q),n.addEventListener("message",G),n.postMessage({action:"init",urls:T,wasmBinaries:k})}))}(new Worker(K),void 0,k))))})):"undefined"===typeof W._KTX2DecoderModule?W._DecoderModulePromise=I.e.LoadBabylonScriptAsync(k.jsDecoderModule).then((()=>(W._KTX2DecoderModule=KTX2DECODER,W._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,W._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,S(k,W._KTX2DecoderModule),new W._KTX2DecoderModule.KTX2Decoder))):(W._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,W._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,W._DecoderModulePromise=Promise.resolve(new W._KTX2DecoderModule.KTX2Decoder))}constructor(n){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:W.DefaultNumWorkers;this._engine=n;const T="object"===typeof k&&k.workerPool||W.WorkerPool;if(T)W._WorkerPoolPromise=Promise.resolve(T);else{var c;if("object"===typeof k)W._KTX2DecoderModule=null===k||void 0===k||null===(c=k.binariesAndModulesContainer)||void 0===c?void 0:c.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(W._KTX2DecoderModule=KTX2DECODER);const n="number"===typeof k?k:k.numWorkers??W.DefaultNumWorkers;W._Initialize(n)}}async _uploadAsync(n,k,T){const c=this._engine.getCaps(),K={astc:!!c.astc,bptc:!!c.bptc,s3tc:!!c.s3tc,pvrtc:!!c.pvrtc,etc2:!!c.etc2,etc1:!!c.etc1};if(W._WorkerPoolPromise){const c=await W._WorkerPoolPromise;return await new Promise(((Q,G)=>{c.push(((c,w)=>{const E=n=>{c.removeEventListener("error",E),c.removeEventListener("message",I),G(n),w()},I=n=>{if("decoded"===n.data.action){if(c.removeEventListener("error",E),c.removeEventListener("message",I),n.data.success)try{this._createTexture(n.data.decodedData,k,T),Q()}catch(K){G({message:K})}else G({message:n.data.msg});w()}};c.addEventListener("error",E),c.addEventListener("message",I),c.postMessage({action:"setDefaultDecoderOptions",options:W.DefaultDecoderOptions._getKTX2DecoderOptions()});const S=new Uint8Array(n.byteLength);S.set(new Uint8Array(n.buffer,n.byteOffset,n.byteLength)),c.postMessage({action:"decode",data:S,caps:K,options:T},[S.buffer])}))}))}if(W._DecoderModulePromise){const T=await W._DecoderModulePromise;return W.DefaultDecoderOptions.isDirty&&(W._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=W.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((K,Q)=>{T.decode(n,c).then((n=>{this._createTexture(n,k),K()})).catch((n=>{Q({message:n})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(n,k,T){this._engine._bindTextureDirectly(3553,k),T&&(T.transcodedFormat=n.transcodedFormat,T.isInGammaSpace=n.isInGammaSpace,T.Bj=n.Bj,T.transcoderName=n.transcoderName);let c=!0;switch(n.transcodedFormat){case 32856:k.type=0,k.format=5;break;case 33321:k.type=0,k.format=6;break;case 33323:k.type=0,k.format=7;break;default:k.format=n.transcodedFormat,c=!1}if(k._gammaSpace=n.isInGammaSpace,k.generateMipMaps=n.mipmaps.length>1,n.errors)throw new Error("KTX2 container - could not transcode the data. "+n.errors);for(let K=0;K<n.mipmaps.length;++K){const T=n.mipmaps[K];if(!T||!T.data)throw new Error("KTX2 container - could not transcode one of the image");c?(k.width=T.width,k.height=T.height,this._engine._uploadDataToTextureDirectly(k,T.data,0,K,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(k,n.transcodedFormat,T.width,T.height,T.data,0,K)}k._extension=".ktx2",k.width=n.mipmaps[0].width,k.height=n.mipmaps[0].height,k.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(n){if(n.byteLength>=12){const k=new Uint8Array(n.buffer,n.byteOffset,12);if(171===k[0]&&75===k[1]&&84===k[2]&&88===k[3]&&32===k[4]&&50===k[5]&&48===k[6]&&187===k[7]&&13===k[8]&&10===k[9]&&26===k[10]&&10===k[11])return!0}return!1}}W.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},W.DefaultNumWorkers=W.GetDefaultNumWorkers(),W.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(n){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==n&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=n,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(n){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==n&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=n,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(n){this._forceRGBA!==n&&(this._forceRGBA=n,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(n){this._forceR8!==n&&(this._forceR8=n,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(n){this._forceRG8!==n&&(this._forceRG8=n,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(n){this._bypassTranscoders!==n&&(this._bypassTranscoders=n,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const n={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(n.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[G.BC1_RGB,G.BC3_RGBA],yes:{transcodeFormat:G.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=n,n}};class J{constructor(){this.supportCascades=!1}loadCubeData(n,k,T,c){if(Array.isArray(n))return;k._invertVScale=!k.invertY;const Q=k.getEngine(),G=new K(n,6),w=G.numberOfMipmapLevels>1&&k.generateMipMaps;Q._unpackFlipY(!0),G.uploadLevels(k,k.generateMipMaps),k.width=G.pixelWidth,k.height=G.pixelHeight,Q._setCubeMapTextureParams(k,w,G.numberOfMipmapLevels-1),k.isReady=!0,k.onLoadedObservable.notifyObservers(k),k.onLoadedObservable.clear(),c&&c()}loadData(n,k,T,Q){if(K.IsValid(n)){k._invertVScale=!k.invertY;const c=new K(n,1),Q=function(n){switch(n){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(c.glInternalFormat);Q?(k.format=Q,k._useSRGBBuffer=k.getEngine()._getUseSRGBBuffer(!0,k.generateMipMaps),k._gammaSpace=!0):k.format=c.glInternalFormat,T(c.pixelWidth,c.pixelHeight,k.generateMipMaps,!0,(()=>{c.uploadLevels(k,k.generateMipMaps)}),c.isInvalid)}else if(W.IsValid(n)){new W(k.getEngine())._uploadAsync(n,k,Q).then((()=>{T(k.width,k.height,k.generateMipMaps,!0,(()=>{}),!1)}),(n=>{c.d.Warn(`Failed to load KTX2 texture data: ${n.message}`),T(0,0,!1,!1,(()=>{}),!0)}))}else c.d.Error("texture missing KTX identifier"),T(0,0,!1,!1,(()=>{}),!0)}}},2570:(n,k,T)=>{T.d(k,{b:()=>K});class c{constructor(n){this._pendingActions=new Array,this._workerInfos=n.map((n=>({workerPromise:Promise.resolve(n),idle:!0})))}dispose(){for(const n of this._workerInfos)n.workerPromise.then((n=>{n.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(n){this._executeOnIdleWorker(n)||this._pendingActions.push(n)}_executeOnIdleWorker(n){for(const k of this._workerInfos)if(k.idle)return this._execute(k,n),!0;return!1}_execute(n,k){n.idle=!1,n.workerPromise.then((T=>{k(T,(()=>{const k=this._pendingActions.shift();k?this._execute(n,k):n.idle=!0}))}))}}class K extends c{constructor(n,k){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:K.DefaultOptions;super([]),this._maxWorkers=n,this._createWorkerAsync=k,this._options=T}push(n){if(!this._executeOnIdleWorker(n))if(this._workerInfos.length<this._maxWorkers){const k={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(k),this._execute(k,n)}else this._pendingActions.push(n)}_execute(n,k){n.timeoutId&&(clearTimeout(n.timeoutId),delete n.timeoutId),super._execute(n,((T,c)=>{k(T,(()=>{c(),n.idle&&(n.timeoutId=setTimeout((()=>{n.workerPromise.then((n=>{n.terminate()}));const k=this._workerInfos.indexOf(n);-1!==k&&this._workerInfos.splice(k,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}K.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);