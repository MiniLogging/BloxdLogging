"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2479:(f,z,w)=>{w.r(z),w.d(z,{_TGATextureLoader:()=>J});var S=w(548);function C(f){let z=0;return{id_length:f[z++],colormap_type:f[z++],image_type:f[z++],colormap_index:f[z++]|f[z++]<<8,colormap_length:f[z++]|f[z++]<<8,colormap_size:f[z++],origin:[f[z++]|f[z++]<<8,f[z++]|f[z++]<<8],width:f[z++]|f[z++]<<8,height:f[z++]|f[z++]<<8,pixel_size:f[z++],flags:f[z++]}}function E(f,z){if(z.length<19)return void S.b.Error("Unable to load TGA file - Not enough data to contain header");let w=18;const E=C(z);if(E.id_length+w>z.length)return void S.b.Error("Unable to load TGA file - Not enough data");w+=E.id_length;let J,x=!1,u=!1,h=!1;switch(E.image_type){case 9:x=!0;case 1:u=!0;break;case 10:x=!0;case 2:break;case 11:x=!0;case 3:h=!0}const X=E.pixel_size>>3,K=E.width*E.height*X;let c,y,e,O,d,B,V;if(u&&(c=z.subarray(w,w+=E.colormap_length*(E.colormap_size>>3))),x){let f,S,C;J=new Uint8Array(K);let E=0;const F=new Uint8Array(X);for(;w<K&&E<K;)if(f=z[w++],S=1+(127&f),128&f){for(C=0;C<X;++C)F[C]=z[w++];for(C=0;C<S;++C)J.set(F,E+C*X);E+=X*S}else{for(S*=X,C=0;C<S;++C)J[E+C]=z[w++];E+=S}}else J=z.subarray(w,w+=u?E.width*E.height:K);switch((48&E.flags)>>4){default:case 2:y=0,O=1,V=E.width,e=0,d=1,B=E.height;break;case 0:y=0,O=1,V=E.width,e=E.height-1,d=-1,B=-1;break;case 3:y=E.width-1,O=-1,V=-1,e=0,d=1,B=E.height;break;case 1:y=E.width-1,O=-1,V=-1,e=E.height-1,d=-1,B=-1}const W="_getImageData"+(h?"Grey":"")+E.pixel_size+"bits",T=F[W](E,c,J,e,d,B,y,O,V);f.getEngine()._uploadDataToTextureDirectly(f,T)}const F={GetTGAHeader:C,UploadContent:E,_getImageData8bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=z,X=f.width,K=f.height;let c,y,e,O=0;const d=new Uint8Array(X*K*4);for(e=S;e!==E;e+=C)for(y=F;y!==x;y+=J,O++)c=u[O],d[4*(y+X*e)+3]=255,d[4*(y+X*e)+2]=h[3*c+0],d[4*(y+X*e)+1]=h[3*c+1],d[4*(y+X*e)+0]=h[3*c+2];return d},_getImageData16bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=f.width,X=f.height;let K,c,y,e=0;const O=new Uint8Array(h*X*4);for(y=S;y!==E;y+=C)for(c=F;c!==x;c+=J,e+=2){K=u[e+0]+(u[e+1]<<8);const f=255*((31744&K)>>10)/31|0,z=255*((992&K)>>5)/31|0,w=255*(31&K)/31|0;O[4*(c+h*y)+0]=f,O[4*(c+h*y)+1]=z,O[4*(c+h*y)+2]=w,O[4*(c+h*y)+3]=32768&K?0:255}return O},_getImageData24bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=f.width,X=f.height;let K,c,y=0;const e=new Uint8Array(h*X*4);for(c=S;c!==E;c+=C)for(K=F;K!==x;K+=J,y+=3)e[4*(K+h*c)+3]=255,e[4*(K+h*c)+2]=u[y+0],e[4*(K+h*c)+1]=u[y+1],e[4*(K+h*c)+0]=u[y+2];return e},_getImageData32bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=f.width,X=f.height;let K,c,y=0;const e=new Uint8Array(h*X*4);for(c=S;c!==E;c+=C)for(K=F;K!==x;K+=J,y+=4)e[4*(K+h*c)+2]=u[y+0],e[4*(K+h*c)+1]=u[y+1],e[4*(K+h*c)+0]=u[y+2],e[4*(K+h*c)+3]=u[y+3];return e},_getImageDataGrey8bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=f.width,X=f.height;let K,c,y,e=0;const O=new Uint8Array(h*X*4);for(y=S;y!==E;y+=C)for(c=F;c!==x;c+=J,e++)K=u[e],O[4*(c+h*y)+0]=K,O[4*(c+h*y)+1]=K,O[4*(c+h*y)+2]=K,O[4*(c+h*y)+3]=255;return O},_getImageDataGrey16bits:function(f,z,w,S,C,E,F,J,x){const u=w,h=f.width,X=f.height;let K,c,y=0;const e=new Uint8Array(h*X*4);for(c=S;c!==E;c+=C)for(K=F;K!==x;K+=J,y+=2)e[4*(K+h*c)+0]=u[y+0],e[4*(K+h*c)+1]=u[y+0],e[4*(K+h*c)+2]=u[y+0],e[4*(K+h*c)+3]=u[y+1];return e}};class J{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(f,z,w){const S=new Uint8Array(f.buffer,f.byteOffset,f.byteLength),F=C(S);w(F.width,F.height,z.generateMipMaps,!1,(()=>{E(z,S)}))}}}}]);