"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2568:(W,F,c)=>{c.r(F),c.d(F,{_KTXTextureLoader:()=>q});var T=c(520);class Y{constructor(W,F){if(this.data=W,this.isInvalid=!1,!Y.IsValid(W))return this.isInvalid=!0,void T.e.Error("texture missing KTX identifier");const c=Uint32Array.BYTES_PER_ELEMENT,Z=new DataView(this.data.buffer,this.data.byteOffset+12,13*c),w=67305985===Z.getUint32(0,!0);return this.glType=Z.getUint32(1*c,w),this.glTypeSize=Z.getUint32(2*c,w),this.glFormat=Z.getUint32(3*c,w),this.glInternalFormat=Z.getUint32(4*c,w),this.glBaseInternalFormat=Z.getUint32(5*c,w),this.pixelWidth=Z.getUint32(6*c,w),this.pixelHeight=Z.getUint32(7*c,w),this.pixelDepth=Z.getUint32(8*c,w),this.numberOfArrayElements=Z.getUint32(9*c,w),this.numberOfFaces=Z.getUint32(10*c,w),this.numberOfMipmapLevels=Z.getUint32(11*c,w),this.bytesOfKeyValueData=Z.getUint32(12*c,w),0!==this.glType?(T.e.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(T.e.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(T.e.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==F?(T.e.Error("number of faces expected"+F+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=Y.COMPRESSED_2D))}uploadLevels(W,F){switch(this.loadType){case Y.COMPRESSED_2D:this._upload2DCompressedLevels(W,F);case Y.TEX_2D:case Y.COMPRESSED_3D:case Y.TEX_3D:}}_upload2DCompressedLevels(W,F){let c=Y.HEADER_LEN+this.bytesOfKeyValueData,T=this.pixelWidth,Z=this.pixelHeight;const w=F?this.numberOfMipmapLevels:1;for(let Y=0;Y<w;Y++){const F=new Int32Array(this.data.buffer,this.data.byteOffset+c,1)[0];c+=4;for(let w=0;w<this.numberOfFaces;w++){const A=new Uint8Array(this.data.buffer,this.data.byteOffset+c,F);W.getEngine()._uploadCompressedDataToTextureDirectly(W,W.format,T,Z,A,w,Y),c+=F,c+=3-(F+3)%4}T=Math.max(1,.5*T),Z=Math.max(1,.5*Z)}}static IsValid(W){if(W.byteLength>=12){const F=new Uint8Array(W.buffer,W.byteOffset,12);if(171===F[0]&&75===F[1]&&84===F[2]&&88===F[3]&&32===F[4]&&49===F[5]&&49===F[6]&&187===F[7]&&13===F[8]&&10===F[9]&&26===F[10]&&10===F[11])return!0}return!1}}Y.HEADER_LEN=64,Y.COMPRESSED_2D=0,Y.COMPRESSED_3D=1,Y.TEX_2D=2,Y.TEX_3D=3;var Z,w,A,u=c(2572),s=c(514);function x(W,F){const c=(null===F||void 0===F?void 0:F.jsDecoderModule)||KTX2DECODER;W&&(W.wasmUASTCToASTC&&(c.LiteTranscoder_UASTC_ASTC.WasmModuleURL=W.wasmUASTCToASTC),W.wasmUASTCToBC7&&(c.LiteTranscoder_UASTC_BC7.WasmModuleURL=W.wasmUASTCToBC7),W.wasmUASTCToRGBA_UNORM&&(c.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=W.wasmUASTCToRGBA_UNORM),W.wasmUASTCToRGBA_SRGB&&(c.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=W.wasmUASTCToRGBA_SRGB),W.wasmUASTCToR8_UNORM&&(c.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=W.wasmUASTCToR8_UNORM),W.wasmUASTCToRG8_UNORM&&(c.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=W.wasmUASTCToRG8_UNORM),W.jsMSCTranscoder&&(c.MSCTranscoder.JSModuleURL=W.jsMSCTranscoder),W.wasmMSCTranscoder&&(c.MSCTranscoder.WasmModuleURL=W.wasmMSCTranscoder),W.wasmZSTDDecoder&&(c.ZSTDDecoder.WasmModuleURL=W.wasmZSTDDecoder)),F&&(F.wasmUASTCToASTC&&(c.LiteTranscoder_UASTC_ASTC.WasmBinary=F.wasmUASTCToASTC),F.wasmUASTCToBC7&&(c.LiteTranscoder_UASTC_BC7.WasmBinary=F.wasmUASTCToBC7),F.wasmUASTCToRGBA_UNORM&&(c.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=F.wasmUASTCToRGBA_UNORM),F.wasmUASTCToRGBA_SRGB&&(c.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=F.wasmUASTCToRGBA_SRGB),F.wasmUASTCToR8_UNORM&&(c.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=F.wasmUASTCToR8_UNORM),F.wasmUASTCToRG8_UNORM&&(c.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=F.wasmUASTCToRG8_UNORM),F.jsMSCTranscoder&&(c.MSCTranscoder.JSModule=F.jsMSCTranscoder),F.wasmMSCTranscoder&&(c.MSCTranscoder.WasmBinary=F.wasmMSCTranscoder),F.wasmZSTDDecoder&&(c.ZSTDDecoder.WasmBinary=F.wasmZSTDDecoder))}function j(W){let F;"undefined"===typeof W&&"undefined"!==typeof KTX2DECODER&&(W=KTX2DECODER),onmessage=c=>{if(c.data)switch(c.data.action){case"init":{const T=c.data.urls;T&&(T.jsDecoderModule&&"undefined"===typeof W&&(importScripts(T.jsDecoderModule),W=KTX2DECODER),x(T)),c.data.wasmBinaries&&x(void 0,{...c.data.wasmBinaries,jsDecoderModule:W}),F=new W.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":W.KTX2Decoder.DefaultDecoderOptions=c.data.options;break;case"decode":F.decode(c.data.data,c.data.caps,c.data.options).then((W=>{const F=[];for(let c=0;c<W.mipmaps.length;++c){const T=W.mipmaps[c];T&&T.data&&F.push(T.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:W},F)})).catch((W=>{postMessage({action:"decoded",success:!1,msg:W})}))}}}!function(W){W[W.ETC1S=0]="ETC1S",W[W.UASTC4x4=1]="UASTC4x4"}(Z||(Z={})),function(W){W[W.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",W[W.BC7_RGBA=1]="BC7_RGBA",W[W.BC3_RGBA=2]="BC3_RGBA",W[W.BC1_RGB=3]="BC1_RGB",W[W.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",W[W.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",W[W.ETC2_RGBA=6]="ETC2_RGBA",W[W.ETC1_RGB=7]="ETC1_RGB",W[W.RGBA32=8]="RGBA32",W[W.R8=9]="R8",W[W.RG8=10]="RG8"}(w||(w={})),function(W){W[W.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",W[W.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",W[W.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",W[W.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",W[W.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",W[W.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",W[W.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",W[W.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",W[W.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",W[W.RGBA8Format=32856]="RGBA8Format",W[W.R8Format=33321]="R8Format",W[W.RG8Format=33323]="RG8Format"}(A||(A={}));class N{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(W){if(N._WorkerPoolPromise||N._DecoderModulePromise)return;const F={jsDecoderModule:s.d.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:s.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:s.d.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:s.d.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:s.d.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};W&&"function"===typeof Worker&&"undefined"!==typeof URL?N._WorkerPoolPromise=new Promise((c=>{const T=`${x}(${j})()`,Y=URL.createObjectURL(new Blob([T],{type:"application/javascript"}));c(new u.d(W,(async()=>await async function(W,F,c){return await new Promise(((T,Y)=>{const Z=F=>{W.removeEventListener("error",Z),W.removeEventListener("message",w),Y(F)},w=F=>{"init"===F.data.action&&(W.removeEventListener("error",Z),W.removeEventListener("message",w),T(W))};W.addEventListener("error",Z),W.addEventListener("message",w),W.postMessage({action:"init",urls:c,wasmBinaries:F})}))}(new Worker(Y),void 0,F))))})):"undefined"===typeof N._KTX2DecoderModule?N._DecoderModulePromise=s.d.LoadBabylonScriptAsync(F.jsDecoderModule).then((()=>(N._KTX2DecoderModule=KTX2DECODER,N._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,N._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,x(F,N._KTX2DecoderModule),new N._KTX2DecoderModule.KTX2Decoder))):(N._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,N._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,N._DecoderModulePromise=Promise.resolve(new N._KTX2DecoderModule.KTX2Decoder))}constructor(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:N.DefaultNumWorkers;this._engine=W;const c="object"===typeof F&&F.workerPool||N.WorkerPool;if(c)N._WorkerPoolPromise=Promise.resolve(c);else{var T;if("object"===typeof F)N._KTX2DecoderModule=null===F||void 0===F||null===(T=F.binariesAndModulesContainer)||void 0===T?void 0:T.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(N._KTX2DecoderModule=KTX2DECODER);const W="number"===typeof F?F:F.numWorkers??N.DefaultNumWorkers;N._Initialize(W)}}async _uploadAsync(W,F,c){const T=this._engine.getCaps(),Y={astc:!!T.astc,bptc:!!T.bptc,s3tc:!!T.s3tc,pvrtc:!!T.pvrtc,etc2:!!T.etc2,etc1:!!T.etc1};if(N._WorkerPoolPromise){const T=await N._WorkerPoolPromise;return await new Promise(((Z,w)=>{T.push(((T,A)=>{const u=W=>{T.removeEventListener("error",u),T.removeEventListener("message",s),w(W),A()},s=W=>{if("decoded"===W.data.action){if(T.removeEventListener("error",u),T.removeEventListener("message",s),W.data.success)try{this._createTexture(W.data.decodedData,F,c),Z()}catch(Y){w({message:Y})}else w({message:W.data.msg});A()}};T.addEventListener("error",u),T.addEventListener("message",s),T.postMessage({action:"setDefaultDecoderOptions",options:N.DefaultDecoderOptions._getKTX2DecoderOptions()});const x=new Uint8Array(W.byteLength);x.set(new Uint8Array(W.buffer,W.byteOffset,W.byteLength)),T.postMessage({action:"decode",data:x,caps:Y,options:c},[x.buffer])}))}))}if(N._DecoderModulePromise){const c=await N._DecoderModulePromise;return N.DefaultDecoderOptions.isDirty&&(N._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=N.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((Y,Z)=>{c.decode(W,T).then((W=>{this._createTexture(W,F),Y()})).catch((W=>{Z({message:W})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(W,F,c){this._engine._bindTextureDirectly(3553,F),c&&(c.transcodedFormat=W.transcodedFormat,c.isInGammaSpace=W.isInGammaSpace,c.Ej=W.Ej,c.transcoderName=W.transcoderName);let T=!0;switch(W.transcodedFormat){case 32856:F.type=0,F.format=5;break;case 33321:F.type=0,F.format=6;break;case 33323:F.type=0,F.format=7;break;default:F.format=W.transcodedFormat,T=!1}if(F._gammaSpace=W.isInGammaSpace,F.generateMipMaps=W.mipmaps.length>1,W.errors)throw new Error("KTX2 container - could not transcode the data. "+W.errors);for(let Y=0;Y<W.mipmaps.length;++Y){const c=W.mipmaps[Y];if(!c||!c.data)throw new Error("KTX2 container - could not transcode one of the image");T?(F.width=c.width,F.height=c.height,this._engine._uploadDataToTextureDirectly(F,c.data,0,Y,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(F,W.transcodedFormat,c.width,c.height,c.data,0,Y)}F._extension=".ktx2",F.width=W.mipmaps[0].width,F.height=W.mipmaps[0].height,F.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(W){if(W.byteLength>=12){const F=new Uint8Array(W.buffer,W.byteOffset,12);if(171===F[0]&&75===F[1]&&84===F[2]&&88===F[3]&&32===F[4]&&50===F[5]&&48===F[6]&&187===F[7]&&13===F[8]&&10===F[9]&&26===F[10]&&10===F[11])return!0}return!1}}N.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},N.DefaultNumWorkers=N.GetDefaultNumWorkers(),N.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(W){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==W&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=W,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(W){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==W&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=W,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(W){this._forceRGBA!==W&&(this._forceRGBA=W,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(W){this._forceR8!==W&&(this._forceR8=W,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(W){this._forceRG8!==W&&(this._forceRG8=W,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(W){this._bypassTranscoders!==W&&(this._bypassTranscoders=W,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const W={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(W.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[w.BC1_RGB,w.BC3_RGBA],yes:{transcodeFormat:w.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=W,W}};class q{constructor(){this.supportCascades=!1}loadCubeData(W,F,c,T){if(Array.isArray(W))return;F._invertVScale=!F.invertY;const Z=F.getEngine(),w=new Y(W,6),A=w.numberOfMipmapLevels>1&&F.generateMipMaps;Z._unpackFlipY(!0),w.uploadLevels(F,F.generateMipMaps),F.width=w.pixelWidth,F.height=w.pixelHeight,Z._setCubeMapTextureParams(F,A,w.numberOfMipmapLevels-1),F.isReady=!0,F.onLoadedObservable.notifyObservers(F),F.onLoadedObservable.clear(),T&&T()}loadData(W,F,c,Z){if(Y.IsValid(W)){F._invertVScale=!F.invertY;const T=new Y(W,1),Z=function(W){switch(W){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(T.glInternalFormat);Z?(F.format=Z,F._useSRGBBuffer=F.getEngine()._getUseSRGBBuffer(!0,F.generateMipMaps),F._gammaSpace=!0):F.format=T.glInternalFormat,c(T.pixelWidth,T.pixelHeight,F.generateMipMaps,!0,(()=>{T.uploadLevels(F,F.generateMipMaps)}),T.isInvalid)}else if(N.IsValid(W)){new N(F.getEngine())._uploadAsync(W,F,Z).then((()=>{c(F.width,F.height,F.generateMipMaps,!0,(()=>{}),!1)}),(W=>{T.e.Warn(`Failed to load KTX2 texture data: ${W.message}`),c(0,0,!1,!1,(()=>{}),!0)}))}else T.e.Error("texture missing KTX identifier"),c(0,0,!1,!1,(()=>{}),!0)}}},2572:(W,F,c)=>{c.d(F,{d:()=>Y});class T{constructor(W){this._pendingActions=new Array,this._workerInfos=W.map((W=>({workerPromise:Promise.resolve(W),idle:!0})))}dispose(){for(const W of this._workerInfos)W.workerPromise.then((W=>{W.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(W){this._executeOnIdleWorker(W)||this._pendingActions.push(W)}_executeOnIdleWorker(W){for(const F of this._workerInfos)if(F.idle)return this._execute(F,W),!0;return!1}_execute(W,F){W.idle=!1,W.workerPromise.then((c=>{F(c,(()=>{const F=this._pendingActions.shift();F?this._execute(W,F):W.idle=!0}))}))}}class Y extends T{constructor(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Y.DefaultOptions;super([]),this._maxWorkers=W,this._createWorkerAsync=F,this._options=c}push(W){if(!this._executeOnIdleWorker(W))if(this._workerInfos.length<this._maxWorkers){const F={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(F),this._execute(F,W)}else this._pendingActions.push(W)}_execute(W,F){W.timeoutId&&(clearTimeout(W.timeoutId),delete W.timeoutId),super._execute(W,((c,T)=>{F(c,(()=>{T(),W.idle&&(W.timeoutId=setTimeout((()=>{W.workerPromise.then((W=>{W.terminate()}));const F=this._workerInfos.indexOf(W);-1!==F&&this._workerInfos.splice(F,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}Y.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);