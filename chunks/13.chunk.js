"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[13],{2562:(U,M,b)=>{b.r(M),b.d(M,{_KTXTextureLoader:()=>C});var a=b(497);class A{constructor(U,M){if(this.data=U,this.isInvalid=!1,!A.IsValid(U))return this.isInvalid=!0,void a.b.Error("texture missing KTX identifier");const b=Uint32Array.BYTES_PER_ELEMENT,H=new DataView(this.data.buffer,this.data.byteOffset+12,13*b),W=67305985===H.getUint32(0,!0);return this.glType=H.getUint32(1*b,W),this.glTypeSize=H.getUint32(2*b,W),this.glFormat=H.getUint32(3*b,W),this.glInternalFormat=H.getUint32(4*b,W),this.glBaseInternalFormat=H.getUint32(5*b,W),this.pixelWidth=H.getUint32(6*b,W),this.pixelHeight=H.getUint32(7*b,W),this.pixelDepth=H.getUint32(8*b,W),this.numberOfArrayElements=H.getUint32(9*b,W),this.numberOfFaces=H.getUint32(10*b,W),this.numberOfMipmapLevels=H.getUint32(11*b,W),this.bytesOfKeyValueData=H.getUint32(12*b,W),0!==this.glType?(a.b.Error("only compressed formats currently supported"),void(this.isInvalid=!0)):(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0===this.pixelHeight||0!==this.pixelDepth?(a.b.Error("only 2D textures currently supported"),void(this.isInvalid=!0)):0!==this.numberOfArrayElements?(a.b.Error("texture arrays not currently supported"),void(this.isInvalid=!0)):this.numberOfFaces!==M?(a.b.Error("number of faces expected"+M+", but found "+this.numberOfFaces),void(this.isInvalid=!0)):void(this.loadType=A.COMPRESSED_2D))}uploadLevels(U,M){switch(this.loadType){case A.COMPRESSED_2D:this._upload2DCompressedLevels(U,M);case A.TEX_2D:case A.COMPRESSED_3D:case A.TEX_3D:}}_upload2DCompressedLevels(U,M){let b=A.HEADER_LEN+this.bytesOfKeyValueData,a=this.pixelWidth,H=this.pixelHeight;const W=M?this.numberOfMipmapLevels:1;for(let A=0;A<W;A++){const M=new Int32Array(this.data.buffer,this.data.byteOffset+b,1)[0];b+=4;for(let W=0;W<this.numberOfFaces;W++){const y=new Uint8Array(this.data.buffer,this.data.byteOffset+b,M);U.getEngine()._uploadCompressedDataToTextureDirectly(U,U.format,a,H,y,W,A),b+=M,b+=3-(M+3)%4}a=Math.max(1,.5*a),H=Math.max(1,.5*H)}}static IsValid(U){if(U.byteLength>=12){const M=new Uint8Array(U.buffer,U.byteOffset,12);if(171===M[0]&&75===M[1]&&84===M[2]&&88===M[3]&&32===M[4]&&49===M[5]&&49===M[6]&&187===M[7]&&13===M[8]&&10===M[9]&&26===M[10]&&10===M[11])return!0}return!1}}A.HEADER_LEN=64,A.COMPRESSED_2D=0,A.COMPRESSED_3D=1,A.TEX_2D=2,A.TEX_3D=3;var H,W,y,O=b(2564),e=b(479);function x(U,M){const b=(null===M||void 0===M?void 0:M.jsDecoderModule)||KTX2DECODER;U&&(U.wasmUASTCToASTC&&(b.LiteTranscoder_UASTC_ASTC.WasmModuleURL=U.wasmUASTCToASTC),U.wasmUASTCToBC7&&(b.LiteTranscoder_UASTC_BC7.WasmModuleURL=U.wasmUASTCToBC7),U.wasmUASTCToRGBA_UNORM&&(b.LiteTranscoder_UASTC_RGBA_UNORM.WasmModuleURL=U.wasmUASTCToRGBA_UNORM),U.wasmUASTCToRGBA_SRGB&&(b.LiteTranscoder_UASTC_RGBA_SRGB.WasmModuleURL=U.wasmUASTCToRGBA_SRGB),U.wasmUASTCToR8_UNORM&&(b.LiteTranscoder_UASTC_R8_UNORM.WasmModuleURL=U.wasmUASTCToR8_UNORM),U.wasmUASTCToRG8_UNORM&&(b.LiteTranscoder_UASTC_RG8_UNORM.WasmModuleURL=U.wasmUASTCToRG8_UNORM),U.jsMSCTranscoder&&(b.MSCTranscoder.JSModuleURL=U.jsMSCTranscoder),U.wasmMSCTranscoder&&(b.MSCTranscoder.WasmModuleURL=U.wasmMSCTranscoder),U.wasmZSTDDecoder&&(b.ZSTDDecoder.WasmModuleURL=U.wasmZSTDDecoder)),M&&(M.wasmUASTCToASTC&&(b.LiteTranscoder_UASTC_ASTC.WasmBinary=M.wasmUASTCToASTC),M.wasmUASTCToBC7&&(b.LiteTranscoder_UASTC_BC7.WasmBinary=M.wasmUASTCToBC7),M.wasmUASTCToRGBA_UNORM&&(b.LiteTranscoder_UASTC_RGBA_UNORM.WasmBinary=M.wasmUASTCToRGBA_UNORM),M.wasmUASTCToRGBA_SRGB&&(b.LiteTranscoder_UASTC_RGBA_SRGB.WasmBinary=M.wasmUASTCToRGBA_SRGB),M.wasmUASTCToR8_UNORM&&(b.LiteTranscoder_UASTC_R8_UNORM.WasmBinary=M.wasmUASTCToR8_UNORM),M.wasmUASTCToRG8_UNORM&&(b.LiteTranscoder_UASTC_RG8_UNORM.WasmBinary=M.wasmUASTCToRG8_UNORM),M.jsMSCTranscoder&&(b.MSCTranscoder.JSModule=M.jsMSCTranscoder),M.wasmMSCTranscoder&&(b.MSCTranscoder.WasmBinary=M.wasmMSCTranscoder),M.wasmZSTDDecoder&&(b.ZSTDDecoder.WasmBinary=M.wasmZSTDDecoder))}function P(U){let M;"undefined"===typeof U&&"undefined"!==typeof KTX2DECODER&&(U=KTX2DECODER),onmessage=b=>{if(b.data)switch(b.data.action){case"init":{const a=b.data.urls;a&&(a.jsDecoderModule&&"undefined"===typeof U&&(importScripts(a.jsDecoderModule),U=KTX2DECODER),x(a)),b.data.wasmBinaries&&x(void 0,{...b.data.wasmBinaries,jsDecoderModule:U}),M=new U.KTX2Decoder,postMessage({action:"init"});break}case"setDefaultDecoderOptions":U.KTX2Decoder.DefaultDecoderOptions=b.data.options;break;case"decode":M.decode(b.data.data,b.data.caps,b.data.options).then((U=>{const M=[];for(let b=0;b<U.mipmaps.length;++b){const a=U.mipmaps[b];a&&a.data&&M.push(a.data.buffer)}postMessage({action:"decoded",success:!0,decodedData:U},M)})).catch((U=>{postMessage({action:"decoded",success:!1,msg:U})}))}}}!function(U){U[U.ETC1S=0]="ETC1S",U[U.UASTC4x4=1]="UASTC4x4"}(H||(H={})),function(U){U[U.ASTC_4X4_RGBA=0]="ASTC_4X4_RGBA",U[U.BC7_RGBA=1]="BC7_RGBA",U[U.BC3_RGBA=2]="BC3_RGBA",U[U.BC1_RGB=3]="BC1_RGB",U[U.PVRTC1_4_RGBA=4]="PVRTC1_4_RGBA",U[U.PVRTC1_4_RGB=5]="PVRTC1_4_RGB",U[U.ETC2_RGBA=6]="ETC2_RGBA",U[U.ETC1_RGB=7]="ETC1_RGB",U[U.RGBA32=8]="RGBA32",U[U.R8=9]="R8",U[U.RG8=10]="RG8"}(W||(W={})),function(U){U[U.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",U[U.COMPRESSED_RGBA_ASTC_4X4_KHR=37808]="COMPRESSED_RGBA_ASTC_4X4_KHR",U[U.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",U[U.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",U[U.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",U[U.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",U[U.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",U[U.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",U[U.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",U[U.RGBA8Format=32856]="RGBA8Format",U[U.R8Format=33321]="R8Format",U[U.RG8Format=33323]="RG8Format"}(y||(y={}));class Z{static GetDefaultNumWorkers(){return"object"===typeof navigator&&navigator.hardwareConcurrency?Math.min(Math.floor(.5*navigator.hardwareConcurrency),4):1}static _Initialize(U){if(Z._WorkerPoolPromise||Z._DecoderModulePromise)return;const M={jsDecoderModule:e.d.GetBabylonScriptURL(this.URLConfig.jsDecoderModule,!0),wasmUASTCToASTC:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToASTC,!0),wasmUASTCToBC7:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToBC7,!0),wasmUASTCToRGBA_UNORM:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_UNORM,!0),wasmUASTCToRGBA_SRGB:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRGBA_SRGB,!0),wasmUASTCToR8_UNORM:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToR8_UNORM,!0),wasmUASTCToRG8_UNORM:e.d.GetBabylonScriptURL(this.URLConfig.wasmUASTCToRG8_UNORM,!0),jsMSCTranscoder:e.d.GetBabylonScriptURL(this.URLConfig.jsMSCTranscoder,!0),wasmMSCTranscoder:e.d.GetBabylonScriptURL(this.URLConfig.wasmMSCTranscoder,!0),wasmZSTDDecoder:e.d.GetBabylonScriptURL(this.URLConfig.wasmZSTDDecoder,!0)};U&&"function"===typeof Worker&&"undefined"!==typeof URL?Z._WorkerPoolPromise=new Promise((b=>{const a=`${x}(${P})()`,A=URL.createObjectURL(new Blob([a],{type:"application/javascript"}));b(new O.b(U,(async()=>await async function(U,M,b){return await new Promise(((a,A)=>{const H=M=>{U.removeEventListener("error",H),U.removeEventListener("message",W),A(M)},W=M=>{"init"===M.data.action&&(U.removeEventListener("error",H),U.removeEventListener("message",W),a(U))};U.addEventListener("error",H),U.addEventListener("message",W),U.postMessage({action:"init",urls:b,wasmBinaries:M})}))}(new Worker(A),void 0,M))))})):"undefined"===typeof Z._KTX2DecoderModule?Z._DecoderModulePromise=e.d.LoadBabylonScriptAsync(M.jsDecoderModule).then((()=>(Z._KTX2DecoderModule=KTX2DECODER,Z._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,Z._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,x(M,Z._KTX2DecoderModule),new Z._KTX2DecoderModule.KTX2Decoder))):(Z._KTX2DecoderModule.MSCTranscoder.UseFromWorkerThread=!1,Z._KTX2DecoderModule.WASMMemoryManager.LoadBinariesFromCurrentThread=!0,Z._DecoderModulePromise=Promise.resolve(new Z._KTX2DecoderModule.KTX2Decoder))}constructor(U){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Z.DefaultNumWorkers;this._engine=U;const b="object"===typeof M&&M.workerPool||Z.WorkerPool;if(b)Z._WorkerPoolPromise=Promise.resolve(b);else{var a;if("object"===typeof M)Z._KTX2DecoderModule=null===M||void 0===M||null===(a=M.binariesAndModulesContainer)||void 0===a?void 0:a.jsDecoderModule;else"undefined"!==typeof KTX2DECODER&&(Z._KTX2DecoderModule=KTX2DECODER);const U="number"===typeof M?M:M.numWorkers??Z.DefaultNumWorkers;Z._Initialize(U)}}async _uploadAsync(U,M,b){const a=this._engine.getCaps(),A={astc:!!a.astc,bptc:!!a.bptc,s3tc:!!a.s3tc,pvrtc:!!a.pvrtc,etc2:!!a.etc2,etc1:!!a.etc1};if(Z._WorkerPoolPromise){const a=await Z._WorkerPoolPromise;return await new Promise(((H,W)=>{a.push(((a,y)=>{const O=U=>{a.removeEventListener("error",O),a.removeEventListener("message",e),W(U),y()},e=U=>{if("decoded"===U.data.action){if(a.removeEventListener("error",O),a.removeEventListener("message",e),U.data.success)try{this._createTexture(U.data.decodedData,M,b),H()}catch(A){W({message:A})}else W({message:U.data.msg});y()}};a.addEventListener("error",O),a.addEventListener("message",e),a.postMessage({action:"setDefaultDecoderOptions",options:Z.DefaultDecoderOptions._getKTX2DecoderOptions()});const x=new Uint8Array(U.byteLength);x.set(new Uint8Array(U.buffer,U.byteOffset,U.byteLength)),a.postMessage({action:"decode",data:x,caps:A,options:b},[x.buffer])}))}))}if(Z._DecoderModulePromise){const b=await Z._DecoderModulePromise;return Z.DefaultDecoderOptions.isDirty&&(Z._KTX2DecoderModule.KTX2Decoder.DefaultDecoderOptions=Z.DefaultDecoderOptions._getKTX2DecoderOptions()),await new Promise(((A,H)=>{b.decode(U,a).then((U=>{this._createTexture(U,M),A()})).catch((U=>{H({message:U})}))}))}throw new Error("KTX2 decoder module is not available")}_createTexture(U,M,b){this._engine._bindTextureDirectly(3553,M),b&&(b.transcodedFormat=U.transcodedFormat,b.isInGammaSpace=U.isInGammaSpace,b.Ei=U.Ei,b.transcoderName=U.transcoderName);let a=!0;switch(U.transcodedFormat){case 32856:M.type=0,M.format=5;break;case 33321:M.type=0,M.format=6;break;case 33323:M.type=0,M.format=7;break;default:M.format=U.transcodedFormat,a=!1}if(M._gammaSpace=U.isInGammaSpace,M.generateMipMaps=U.mipmaps.length>1,U.errors)throw new Error("KTX2 container - could not transcode the data. "+U.errors);for(let A=0;A<U.mipmaps.length;++A){const b=U.mipmaps[A];if(!b||!b.data)throw new Error("KTX2 container - could not transcode one of the image");a?(M.width=b.width,M.height=b.height,this._engine._uploadDataToTextureDirectly(M,b.data,0,A,void 0,!0)):this._engine._uploadCompressedDataToTextureDirectly(M,U.transcodedFormat,b.width,b.height,b.data,0,A)}M._extension=".ktx2",M.width=U.mipmaps[0].width,M.height=U.mipmaps[0].height,M.isReady=!0,this._engine._bindTextureDirectly(3553,null)}static IsValid(U){if(U.byteLength>=12){const M=new Uint8Array(U.buffer,U.byteOffset,12);if(171===M[0]&&75===M[1]&&84===M[2]&&88===M[3]&&32===M[4]&&50===M[5]&&48===M[6]&&187===M[7]&&13===M[8]&&10===M[9]&&26===M[10]&&10===M[11])return!0}return!1}}Z.URLConfig={jsDecoderModule:"https://cdn.babylonjs.com/babylon.ktx2Decoder.js",wasmUASTCToASTC:null,wasmUASTCToBC7:null,wasmUASTCToRGBA_UNORM:null,wasmUASTCToRGBA_SRGB:null,wasmUASTCToR8_UNORM:null,wasmUASTCToRG8_UNORM:null,jsMSCTranscoder:null,wasmMSCTranscoder:null,wasmZSTDDecoder:null},Z.DefaultNumWorkers=Z.GetDefaultNumWorkers(),Z.DefaultDecoderOptions=new class{constructor(){this._isDirty=!0,this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=!0,this._ktx2DecoderOptions={}}get isDirty(){return this._isDirty}get useRGBAIfASTCBC7NotAvailableWhenUASTC(){return this._useRGBAIfASTCBC7NotAvailableWhenUASTC}set useRGBAIfASTCBC7NotAvailableWhenUASTC(U){this._useRGBAIfASTCBC7NotAvailableWhenUASTC!==U&&(this._useRGBAIfASTCBC7NotAvailableWhenUASTC=U,this._isDirty=!0)}get useRGBAIfOnlyBC1BC3AvailableWhenUASTC(){return this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC}set useRGBAIfOnlyBC1BC3AvailableWhenUASTC(U){this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC!==U&&(this._useRGBAIfOnlyBC1BC3AvailableWhenUASTC=U,this._isDirty=!0)}get forceRGBA(){return this._forceRGBA}set forceRGBA(U){this._forceRGBA!==U&&(this._forceRGBA=U,this._isDirty=!0)}get forceR8(){return this._forceR8}set forceR8(U){this._forceR8!==U&&(this._forceR8=U,this._isDirty=!0)}get forceRG8(){return this._forceRG8}set forceRG8(U){this._forceRG8!==U&&(this._forceRG8=U,this._isDirty=!0)}get bypassTranscoders(){return this._bypassTranscoders}set bypassTranscoders(U){this._bypassTranscoders!==U&&(this._bypassTranscoders=U,this._isDirty=!0)}_getKTX2DecoderOptions(){if(!this._isDirty)return this._ktx2DecoderOptions;this._isDirty=!1;const U={useRGBAIfASTCBC7NotAvailableWhenUASTC:this._useRGBAIfASTCBC7NotAvailableWhenUASTC,forceRGBA:this._forceRGBA,forceR8:this._forceR8,forceRG8:this._forceRG8,bypassTranscoders:this._bypassTranscoders};return this.useRGBAIfOnlyBC1BC3AvailableWhenUASTC&&(U.transcodeFormatDecisionTree={UASTC:{transcodeFormat:[W.BC1_RGB,W.BC3_RGBA],yes:{transcodeFormat:W.RGBA32,engineFormat:32856,roundToMultiple4:!1}}}),this._ktx2DecoderOptions=U,U}};class C{constructor(){this.supportCascades=!1}loadCubeData(U,M,b,a){if(Array.isArray(U))return;M._invertVScale=!M.invertY;const H=M.getEngine(),W=new A(U,6),y=W.numberOfMipmapLevels>1&&M.generateMipMaps;H._unpackFlipY(!0),W.uploadLevels(M,M.generateMipMaps),M.width=W.pixelWidth,M.height=W.pixelHeight,H._setCubeMapTextureParams(M,y,W.numberOfMipmapLevels-1),M.isReady=!0,M.onLoadedObservable.notifyObservers(M),M.onLoadedObservable.clear(),a&&a()}loadData(U,M,b,H){if(A.IsValid(U)){M._invertVScale=!M.invertY;const a=new A(U,1),H=function(U){switch(U){case 35916:return 33776;case 35918:return 33778;case 35919:return 33779;case 37493:return 37492;case 37497:return 37496;case 37495:return 37494;case 37840:return 37808;case 36493:return 36492}return null}(a.glInternalFormat);H?(M.format=H,M._useSRGBBuffer=M.getEngine()._getUseSRGBBuffer(!0,M.generateMipMaps),M._gammaSpace=!0):M.format=a.glInternalFormat,b(a.pixelWidth,a.pixelHeight,M.generateMipMaps,!0,(()=>{a.uploadLevels(M,M.generateMipMaps)}),a.isInvalid)}else if(Z.IsValid(U)){new Z(M.getEngine())._uploadAsync(U,M,H).then((()=>{b(M.width,M.height,M.generateMipMaps,!0,(()=>{}),!1)}),(U=>{a.b.Warn(`Failed to load KTX2 texture data: ${U.message}`),b(0,0,!1,!1,(()=>{}),!0)}))}else a.b.Error("texture missing KTX identifier"),b(0,0,!1,!1,(()=>{}),!0)}}},2564:(U,M,b)=>{b.d(M,{b:()=>A});class a{constructor(U){this._pendingActions=new Array,this._workerInfos=U.map((U=>({workerPromise:Promise.resolve(U),idle:!0})))}dispose(){for(const U of this._workerInfos)U.workerPromise.then((U=>{U.terminate()}));this._workerInfos.length=0,this._pendingActions.length=0}push(U){this._executeOnIdleWorker(U)||this._pendingActions.push(U)}_executeOnIdleWorker(U){for(const M of this._workerInfos)if(M.idle)return this._execute(M,U),!0;return!1}_execute(U,M){U.idle=!1,U.workerPromise.then((b=>{M(b,(()=>{const M=this._pendingActions.shift();M?this._execute(U,M):U.idle=!0}))}))}}class A extends a{constructor(U,M){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:A.DefaultOptions;super([]),this._maxWorkers=U,this._createWorkerAsync=M,this._options=b}push(U){if(!this._executeOnIdleWorker(U))if(this._workerInfos.length<this._maxWorkers){const M={workerPromise:this._createWorkerAsync(),idle:!1};this._workerInfos.push(M),this._execute(M,U)}else this._pendingActions.push(U)}_execute(U,M){U.timeoutId&&(clearTimeout(U.timeoutId),delete U.timeoutId),super._execute(U,((b,a)=>{M(b,(()=>{a(),U.idle&&(U.timeoutId=setTimeout((()=>{U.workerPromise.then((U=>{U.terminate()}));const M=this._workerInfos.indexOf(U);-1!==M&&this._workerInfos.splice(M,1)}),this._options.idleTimeElapsedBeforeRelease))}))}))}}A.DefaultOptions={idleTimeElapsedBeforeRelease:1e3}}}]);