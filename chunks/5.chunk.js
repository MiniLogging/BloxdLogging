"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2343:(K,Y,l)=>{var v=l(594),U=l(492),d=l(534),A=l(623),c=l(567),t=l(609);c.b.prototype._partialLoadFile=function(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(K,(K=>{l[Y]=K,l._internalCount++,6===l._internalCount&&v(l)}),void 0,void 0,!0,((K,Y)=>{U&&K&&U(K.status+" "+K.statusText,Y)}))},c.b.prototype._cascadeLoadFiles=function(K,Y,l){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const U=[];U._internalCount=0;for(let d=0;d<6;d++)this._partialLoadFile(l[d],d,U,Y,v)},c.b.prototype._cascadeLoadImgs=function(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,d=arguments.length>5?arguments[5]:void 0;const A=[];A._internalCount=0;for(let c=0;c<6;c++)this._partialLoadImg(v[c],c,A,K,Y,l,U,d)},c.b.prototype._partialLoadImg=function(K,Y,l,v,U,c){let t=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,Z=arguments.length>7?arguments[7]:void 0;const m=(0,A.d)();(0,d.n)(K,(K=>{l[Y]=K,l._internalCount++,v&&v.removePendingData(m),6===l._internalCount&&c&&c(U,l)}),((K,Y)=>{v&&v.removePendingData(m),t&&t(K,Y)}),v?v.offlineProvider:null,Z),v&&v.addPendingData(m)},c.b.prototype.createCubeTextureBase=function(K,Y,l,d){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Z=arguments.length>6?arguments[6]:void 0,m=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,V=arguments.length>8&&void 0!==arguments[8]&&arguments[8],M=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,u=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,o=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,W=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,g=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,J=arguments.length>14&&void 0!==arguments[14]&&arguments[14],n=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const R=o||new v.e(this,7);R.isCube=!0,R.url=K,R.generateMipMaps=!d,R._lodGenerationScale=M,R._lodGenerationOffset=u,R._useSRGBBuffer=!!J&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!d),R!==o&&(R.label=K.substring(0,60)),this._doNotHandleContextLost||(R._extension=m,R._files=l,R._buffer=n);const H=K;this._transformTextureUrl&&!o&&(K=this._transformTextureUrl(K));const z=K.split("?")[0],r=z.lastIndexOf("."),E=m||(r>-1?z.substring(r).toLowerCase():""),y=(0,t.c)(E),T=(v,t)=>{K===H?c&&v&&c(v.status+" "+v.statusText,t):(U.e.Warn(`Failed to load ${K}, falling back to the ${H}`),this.createCubeTextureBase(H,Y,l,!!d,A,c,Z,m,V,M,u,R,W,g,J,n))};if(y)y.then((v=>{const d=K=>{W&&W(R,K),v.loadCubeData(K,R,V,A,c)};n?d(n):l&&6===l.length?v.supportCascades?this._cascadeLoadFiles(Y,(K=>d(K.map((K=>new Uint8Array(K))))),l,c):c?c("Textures type does not support cascades."):U.e.Warn("Texture loader does not support cascades."):this._loadFile(K,(K=>d(new Uint8Array(K))),void 0,void 0,!0,T)}));else{if(!l||0===l.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(Y,R,((K,Y)=>{g&&g(K,Y)}),l,c)}return this._internalTexturesCache.push(R),R}},2277:(K,Y,l)=>{l.d(Y,{c:()=>o});var v=l(695),U=l(492),d=l(2285),A=l(2294);l(2343);const c=131072,t=131072;function Z(K){return K.charCodeAt(0)+(K.charCodeAt(1)<<8)+(K.charCodeAt(2)<<16)+(K.charCodeAt(3)<<24)}const m=Z("DXT1"),V=Z("DXT3"),M=Z("DXT5"),u=Z("DX10");class o{static GetDDSInfo(K){const Y=new Int32Array(K.buffer,K.byteOffset,31),l=new Int32Array(K.buffer,K.byteOffset,35);let v=1;Y[2]&c&&(v=Math.max(1,Y[7]));const U=Y[21],d=U===u?l[32]:0;let A=0;switch(U){case 113:A=2;break;case 116:A=1;break;case u:if(10===d){A=2;break}if(2===d){A=1;break}}return{width:Y[4],height:Y[3],mipmapCount:v,isFourCC:4===(4&Y[20]),isRGB:64===(64&Y[20]),isLuminance:(Y[20]&t)===t,isCube:512===(512&Y[28]),isCompressed:U===m||U===V||U===M,dxgiFormat:d,textureType:A}}static _GetHalfFloatAsFloatRGBAArrayBuffer(K,Y,l,v,U,d){const c=new Float32Array(v),t=new Uint16Array(U,l);let Z=0;for(let m=0;m<Y;m++)for(let Y=0;Y<K;Y++){const l=4*(Y+m*K);c[Z]=(0,A.e)(t[l]),c[Z+1]=(0,A.e)(t[l+1]),c[Z+2]=(0,A.e)(t[l+2]),o.StoreLODInAlphaChannel?c[Z+3]=d:c[Z+3]=(0,A.e)(t[l+3]),Z+=4}return c}static _GetHalfFloatRGBAArrayBuffer(K,Y,l,v,U,d){if(o.StoreLODInAlphaChannel){const c=new Uint16Array(v),t=new Uint16Array(U,l);let Z=0;for(let l=0;l<Y;l++)for(let Y=0;Y<K;Y++){const v=4*(Y+l*K);c[Z]=t[v],c[Z+1]=t[v+1],c[Z+2]=t[v+2],c[Z+3]=(0,A.g)(d),Z+=4}return c}return new Uint16Array(U,l,v)}static _GetFloatRGBAArrayBuffer(K,Y,l,v,U,d){if(o.StoreLODInAlphaChannel){const A=new Float32Array(v),c=new Float32Array(U,l);let t=0;for(let l=0;l<Y;l++)for(let Y=0;Y<K;Y++){const v=4*(Y+l*K);A[t]=c[v],A[t+1]=c[v+1],A[t+2]=c[v+2],A[t+3]=d,t+=4}return A}return new Float32Array(U,l,v)}static _GetFloatAsHalfFloatRGBAArrayBuffer(K,Y,l,v,U,d){const c=new Uint16Array(v),t=new Float32Array(U,l);let Z=0;for(let m=0;m<Y;m++)for(let Y=0;Y<K;Y++)c[Z]=(0,A.g)(t[Z]),c[Z+1]=(0,A.g)(t[Z+1]),c[Z+2]=(0,A.g)(t[Z+2]),o.StoreLODInAlphaChannel?c[Z+3]=(0,A.g)(d):c[Z+3]=(0,A.g)(t[Z+3]),Z+=4;return c}static _GetFloatAsUIntRGBAArrayBuffer(K,Y,l,U,d,A){const c=new Uint8Array(U),t=new Float32Array(d,l);let Z=0;for(let m=0;m<Y;m++)for(let Y=0;Y<K;Y++){const l=4*(Y+m*K);c[Z]=255*(0,v.d)(t[l]),c[Z+1]=255*(0,v.d)(t[l+1]),c[Z+2]=255*(0,v.d)(t[l+2]),o.StoreLODInAlphaChannel?c[Z+3]=A:c[Z+3]=255*(0,v.d)(t[l+3]),Z+=4}return c}static _GetHalfFloatAsUIntRGBAArrayBuffer(K,Y,l,U,d,c){const t=new Uint8Array(U),Z=new Uint16Array(d,l);let m=0;for(let V=0;V<Y;V++)for(let Y=0;Y<K;Y++){const l=4*(Y+V*K);t[m]=255*(0,v.d)((0,A.e)(Z[l])),t[m+1]=255*(0,v.d)((0,A.e)(Z[l+1])),t[m+2]=255*(0,v.d)((0,A.e)(Z[l+2])),o.StoreLODInAlphaChannel?t[m+3]=c:t[m+3]=255*(0,v.d)((0,A.e)(Z[l+3])),m+=4}return t}static _GetRGBAArrayBuffer(K,Y,l,v,U,d,A,c,t){const Z=new Uint8Array(v),m=new Uint8Array(U,l);let V=0;for(let M=0;M<Y;M++)for(let Y=0;Y<K;Y++){const l=4*(Y+M*K);Z[V]=m[l+d],Z[V+1]=m[l+A],Z[V+2]=m[l+c],Z[V+3]=m[l+t],V+=4}return Z}static _ExtractLongWordOrder(K){return 0===K||255===K||-16777216===K?0:1+o._ExtractLongWordOrder(K>>8)}static _GetRGBArrayBuffer(K,Y,l,v,U,d,A,c){const t=new Uint8Array(v),Z=new Uint8Array(U,l);let m=0;for(let V=0;V<Y;V++)for(let Y=0;Y<K;Y++){const l=3*(Y+V*K);t[m]=Z[l+d],t[m+1]=Z[l+A],t[m+2]=Z[l+c],m+=3}return t}static _GetLuminanceArrayBuffer(K,Y,l,v,U){const d=new Uint8Array(v),A=new Uint8Array(U,l);let c=0;for(let t=0;t<Y;t++)for(let Y=0;Y<K;Y++){const l=Y+t*K;d[c]=A[l],c++}return d}static UploadDDSLevels(K,Y,l,v,A,t){let Z=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,W=arguments.length>7?arguments[7]:void 0,g=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=null;v.sphericalPolynomial&&(J=[]);const n=!!K.getCaps().s3tc;Y.generateMipMaps=A;const R=new Int32Array(l.buffer,l.byteOffset,31);let H,z,r,E,y,T,e,i=0,D=0,B=1;if(542327876!==R[0])return void U.e.Error("Invalid magic number in DDS header");if(!v.isFourCC&&!v.isRGB&&!v.isLuminance)return void U.e.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(v.isCompressed&&!n)return void U.e.Error("Compressed textures are not supported on this platform.");let P=R[22];E=R[1]+4;let G=!1;if(v.isFourCC)switch(H=R[21],H){case m:B=8,D=33777;break;case V:B=16,D=33778;break;case M:B=16,D=33779;break;case 113:G=!0,P=64;break;case 116:G=!0,P=128;break;case u:{E+=20;let K=!1;switch(v.dxgiFormat){case 10:G=!0,P=64,K=!0;break;case 2:G=!0,P=128,K=!0;break;case 88:v.isRGB=!0,v.isFourCC=!1,P=32,K=!0}if(K)break}default:return void U.e.Error(["Unsupported FourCC code:",(Q=H,String.fromCharCode(255&Q,Q>>8&255,Q>>16&255,Q>>24&255))])}var Q;const X=o._ExtractLongWordOrder(R[23]),f=o._ExtractLongWordOrder(R[24]),w=o._ExtractLongWordOrder(R[25]),k=o._ExtractLongWordOrder(R[26]);G&&(D=K._getRGBABufferInternalSizedFormat(v.textureType)),T=1,R[2]&c&&!1!==A&&(T=Math.max(1,R[7]));const I=W||0,L=K.getCaps();for(let U=I;U<t;U++){for(z=R[4],r=R[3],e=0;e<T;++e){if(-1===Z||Z===e){const d=-1===Z?e:0;if(!v.isCompressed&&v.isFourCC){Y.format=5,i=z*r*4;let v=null;if(K._badOS||K._badDesktopOS||!L.textureHalfFloat&&!L.textureFloat)128===P?(v=o._GetFloatAsUIntRGBAArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,d),J&&0==d&&J.push(o._GetFloatRGBAArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,d))):64===P&&(v=o._GetHalfFloatAsUIntRGBAArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,d),J&&0==d&&J.push(o._GetHalfFloatAsFloatRGBAArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,d))),Y.type=0;else{const K=L.textureFloat&&(g&&L.textureFloatLinearFiltering||!g),U=L.textureHalfFloat&&(g&&L.textureHalfFloatLinearFiltering||!g),A=(128===P||64===P&&!U)&&K?1:(64===P||128===P&&!K)&&U?2:0;let c,t=null;if(128===P)switch(A){case 1:c=o._GetFloatRGBAArrayBuffer,t=null;break;case 2:c=o._GetFloatAsHalfFloatRGBAArrayBuffer,t=o._GetFloatRGBAArrayBuffer;break;case 0:c=o._GetFloatAsUIntRGBAArrayBuffer,t=o._GetFloatRGBAArrayBuffer}else switch(A){case 1:c=o._GetHalfFloatAsFloatRGBAArrayBuffer,t=null;break;case 2:c=o._GetHalfFloatRGBAArrayBuffer,t=o._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:c=o._GetHalfFloatAsUIntRGBAArrayBuffer,t=o._GetHalfFloatAsFloatRGBAArrayBuffer}Y.type=A,v=c(z,r,l.byteOffset+E,i,l.buffer,d),J&&0==d&&J.push(t?t(z,r,l.byteOffset+E,i,l.buffer,d):v)}v&&K._uploadDataToTextureDirectly(Y,v,U,d)}else if(v.isRGB)Y.type=0,24===P?(Y.format=4,i=z*r*3,y=o._GetRGBArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,X,f,w),K._uploadDataToTextureDirectly(Y,y,U,d)):(Y.format=5,i=z*r*4,y=o._GetRGBAArrayBuffer(z,r,l.byteOffset+E,i,l.buffer,X,f,w,k),K._uploadDataToTextureDirectly(Y,y,U,d));else if(v.isLuminance){const v=K._getUnpackAlignement(),A=z;i=Math.floor((z+v-1)/v)*v*(r-1)+A,y=o._GetLuminanceArrayBuffer(z,r,l.byteOffset+E,i,l.buffer),Y.format=1,Y.type=0,K._uploadDataToTextureDirectly(Y,y,U,d)}else i=Math.max(4,z)/4*Math.max(4,r)/4*B,y=new Uint8Array(l.buffer,l.byteOffset+E,i),Y.type=0,K._uploadCompressedDataToTextureDirectly(Y,D,z,r,y,U,d)}E+=P?z*r*(P/8):i,z*=.5,r*=.5,z=Math.max(1,z),r=Math.max(1,r)}if(void 0!==W)break}J&&J.length>0?v.sphericalPolynomial=d.c.ConvertCubeMapToSphericalPolynomial({size:R[4],right:J[0],left:J[1],up:J[2],down:J[3],front:J[4],back:J[5],format:5,type:1,gammaSpace:!1}):v.sphericalPolynomial=void 0}}o.StoreLODInAlphaChannel=!1}}]);