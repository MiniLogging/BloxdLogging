"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2089:(B,o,e)=>{var k=e(610),d=e(514),f=e(541),J=e(640),Z=e(569),t=e(626);Z.e.prototype._partialLoadFile=function(B,o,e,k){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(B,(B=>{e[o]=B,e._internalCount++,6===e._internalCount&&k(e)}),void 0,void 0,!0,((B,o)=>{d&&B&&d(B.status+" "+B.statusText,o)}))},Z.e.prototype._cascadeLoadFiles=function(B,o,e){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const d=[];d._internalCount=0;for(let f=0;f<6;f++)this._partialLoadFile(e[f],f,d,o,k)},Z.e.prototype._cascadeLoadImgs=function(B,o,e,k){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,f=arguments.length>5?arguments[5]:void 0;const J=[];J._internalCount=0;for(let Z=0;Z<6;Z++)this._partialLoadImg(k[Z],Z,J,B,o,e,d,f)},Z.e.prototype._partialLoadImg=function(B,o,e,k,d,Z){let t=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,h=arguments.length>7?arguments[7]:void 0;const O=(0,J.b)();(0,f.s)(B,(B=>{e[o]=B,e._internalCount++,k&&k.removePendingData(O),6===e._internalCount&&Z&&Z(d,e)}),((B,o)=>{k&&k.removePendingData(O),t&&t(B,o)}),k?k.offlineProvider:null,h),k&&k.addPendingData(O)},Z.e.prototype.createCubeTextureBase=function(B,o,e,f){let J=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,h=arguments.length>6?arguments[6]:void 0,O=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,K=arguments.length>8&&void 0!==arguments[8]&&arguments[8],w=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,u=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,L=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,H=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,n=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,W=arguments.length>14&&void 0!==arguments[14]&&arguments[14],R=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const I=L||new k.e(this,7);I.isCube=!0,I.url=B,I.generateMipMaps=!f,I._lodGenerationScale=w,I._lodGenerationOffset=u,I._useSRGBBuffer=!!W&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!f),I!==L&&(I.label=B.substring(0,60)),this._doNotHandleContextLost||(I._extension=O,I._files=e,I._buffer=R);const T=B;this._transformTextureUrl&&!L&&(B=this._transformTextureUrl(B));const s=B.split("?")[0],V=s.lastIndexOf("."),Q=O||(V>-1?s.substring(V).toLowerCase():""),p=(0,t.e)(Q),X=(k,t)=>{B===T?Z&&k&&Z(k.status+" "+k.statusText,t):(d.d.Warn(`Failed to load ${B}, falling back to the ${T}`),this.createCubeTextureBase(T,o,e,!!f,J,Z,h,O,K,w,u,I,H,n,W,R))};if(p)p.then((k=>{const f=B=>{H&&H(I,B),k.loadCubeData(B,I,K,J,Z)};R?f(R):e&&6===e.length?k.supportCascades?this._cascadeLoadFiles(o,(B=>f(B.map((B=>new Uint8Array(B))))),e,Z):Z?Z("Textures type does not support cascades."):d.d.Warn("Texture loader does not support cascades."):this._loadFile(B,(B=>f(new Uint8Array(B))),void 0,void 0,!0,X)}));else{if(!e||0===e.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(o,I,((B,o)=>{n&&n(B,o)}),e,Z)}return this._internalTexturesCache.push(I),I}},2009:(B,o,e)=>{e.d(o,{c:()=>L});var k=e(701),d=e(514),f=e(2015),J=e(2024);e(2089);const Z=131072,t=131072;function h(B){return B.charCodeAt(0)+(B.charCodeAt(1)<<8)+(B.charCodeAt(2)<<16)+(B.charCodeAt(3)<<24)}const O=h("DXT1"),K=h("DXT3"),w=h("DXT5"),u=h("DX10");class L{static GetDDSInfo(B){const o=new Int32Array(B.buffer,B.byteOffset,31),e=new Int32Array(B.buffer,B.byteOffset,35);let k=1;o[2]&Z&&(k=Math.max(1,o[7]));const d=o[21],f=d===u?e[32]:0;let J=0;switch(d){case 113:J=2;break;case 116:J=1;break;case u:if(10===f){J=2;break}if(2===f){J=1;break}}return{width:o[4],height:o[3],mipmapCount:k,isFourCC:4===(4&o[20]),isRGB:64===(64&o[20]),isLuminance:(o[20]&t)===t,isCube:512===(512&o[28]),isCompressed:d===O||d===K||d===w,dxgiFormat:f,textureType:J}}static _GetHalfFloatAsFloatRGBAArrayBuffer(B,o,e,k,d,f){const Z=new Float32Array(k),t=new Uint16Array(d,e);let h=0;for(let O=0;O<o;O++)for(let o=0;o<B;o++){const e=4*(o+O*B);Z[h]=(0,J.e)(t[e]),Z[h+1]=(0,J.e)(t[e+1]),Z[h+2]=(0,J.e)(t[e+2]),L.StoreLODInAlphaChannel?Z[h+3]=f:Z[h+3]=(0,J.e)(t[e+3]),h+=4}return Z}static _GetHalfFloatRGBAArrayBuffer(B,o,e,k,d,f){if(L.StoreLODInAlphaChannel){const Z=new Uint16Array(k),t=new Uint16Array(d,e);let h=0;for(let e=0;e<o;e++)for(let o=0;o<B;o++){const k=4*(o+e*B);Z[h]=t[k],Z[h+1]=t[k+1],Z[h+2]=t[k+2],Z[h+3]=(0,J.f)(f),h+=4}return Z}return new Uint16Array(d,e,k)}static _GetFloatRGBAArrayBuffer(B,o,e,k,d,f){if(L.StoreLODInAlphaChannel){const J=new Float32Array(k),Z=new Float32Array(d,e);let t=0;for(let e=0;e<o;e++)for(let o=0;o<B;o++){const k=4*(o+e*B);J[t]=Z[k],J[t+1]=Z[k+1],J[t+2]=Z[k+2],J[t+3]=f,t+=4}return J}return new Float32Array(d,e,k)}static _GetFloatAsHalfFloatRGBAArrayBuffer(B,o,e,k,d,f){const Z=new Uint16Array(k),t=new Float32Array(d,e);let h=0;for(let O=0;O<o;O++)for(let o=0;o<B;o++)Z[h]=(0,J.f)(t[h]),Z[h+1]=(0,J.f)(t[h+1]),Z[h+2]=(0,J.f)(t[h+2]),L.StoreLODInAlphaChannel?Z[h+3]=(0,J.f)(f):Z[h+3]=(0,J.f)(t[h+3]),h+=4;return Z}static _GetFloatAsUIntRGBAArrayBuffer(B,o,e,d,f,J){const Z=new Uint8Array(d),t=new Float32Array(f,e);let h=0;for(let O=0;O<o;O++)for(let o=0;o<B;o++){const e=4*(o+O*B);Z[h]=255*(0,k.b)(t[e]),Z[h+1]=255*(0,k.b)(t[e+1]),Z[h+2]=255*(0,k.b)(t[e+2]),L.StoreLODInAlphaChannel?Z[h+3]=J:Z[h+3]=255*(0,k.b)(t[e+3]),h+=4}return Z}static _GetHalfFloatAsUIntRGBAArrayBuffer(B,o,e,d,f,Z){const t=new Uint8Array(d),h=new Uint16Array(f,e);let O=0;for(let K=0;K<o;K++)for(let o=0;o<B;o++){const e=4*(o+K*B);t[O]=255*(0,k.b)((0,J.e)(h[e])),t[O+1]=255*(0,k.b)((0,J.e)(h[e+1])),t[O+2]=255*(0,k.b)((0,J.e)(h[e+2])),L.StoreLODInAlphaChannel?t[O+3]=Z:t[O+3]=255*(0,k.b)((0,J.e)(h[e+3])),O+=4}return t}static _GetRGBAArrayBuffer(B,o,e,k,d,f,J,Z,t){const h=new Uint8Array(k),O=new Uint8Array(d,e);let K=0;for(let w=0;w<o;w++)for(let o=0;o<B;o++){const e=4*(o+w*B);h[K]=O[e+f],h[K+1]=O[e+J],h[K+2]=O[e+Z],h[K+3]=O[e+t],K+=4}return h}static _ExtractLongWordOrder(B){return 0===B||255===B||-16777216===B?0:1+L._ExtractLongWordOrder(B>>8)}static _GetRGBArrayBuffer(B,o,e,k,d,f,J,Z){const t=new Uint8Array(k),h=new Uint8Array(d,e);let O=0;for(let K=0;K<o;K++)for(let o=0;o<B;o++){const e=3*(o+K*B);t[O]=h[e+f],t[O+1]=h[e+J],t[O+2]=h[e+Z],O+=3}return t}static _GetLuminanceArrayBuffer(B,o,e,k,d){const f=new Uint8Array(k),J=new Uint8Array(d,e);let Z=0;for(let t=0;t<o;t++)for(let o=0;o<B;o++){const e=o+t*B;f[Z]=J[e],Z++}return f}static UploadDDSLevels(B,o,e,k,J,t){let h=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,H=arguments.length>7?arguments[7]:void 0,n=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],W=null;k.sphericalPolynomial&&(W=[]);const R=!!B.getCaps().s3tc;o.generateMipMaps=J;const I=new Int32Array(e.buffer,e.byteOffset,31);let T,s,V,Q,p,X,l,v=0,U=0,b=1;if(542327876!==I[0])return void d.d.Error("Invalid magic number in DDS header");if(!k.isFourCC&&!k.isRGB&&!k.isLuminance)return void d.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(k.isCompressed&&!R)return void d.d.Error("Compressed textures are not supported on this platform.");let M=I[22];Q=I[1]+4;let j=!1;if(k.isFourCC)switch(T=I[21],T){case O:b=8,U=33777;break;case K:b=16,U=33778;break;case w:b=16,U=33779;break;case 113:j=!0,M=64;break;case 116:j=!0,M=128;break;case u:{Q+=20;let B=!1;switch(k.dxgiFormat){case 10:j=!0,M=64,B=!0;break;case 2:j=!0,M=128,B=!0;break;case 88:k.isRGB=!0,k.isFourCC=!1,M=32,B=!0}if(B)break}default:return void d.d.Error(["Unsupported FourCC code:",(z=T,String.fromCharCode(255&z,z>>8&255,z>>16&255,z>>24&255))])}var z;const N=L._ExtractLongWordOrder(I[23]),x=L._ExtractLongWordOrder(I[24]),D=L._ExtractLongWordOrder(I[25]),r=L._ExtractLongWordOrder(I[26]);j&&(U=B._getRGBABufferInternalSizedFormat(k.textureType)),X=1,I[2]&Z&&!1!==J&&(X=Math.max(1,I[7]));const Y=H||0,E=B.getCaps();for(let d=Y;d<t;d++){for(s=I[4],V=I[3],l=0;l<X;++l){if(-1===h||h===l){const f=-1===h?l:0;if(!k.isCompressed&&k.isFourCC){o.format=5,v=s*V*4;let k=null;if(B._badOS||B._badDesktopOS||!E.textureHalfFloat&&!E.textureFloat)128===M?(k=L._GetFloatAsUIntRGBAArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,f),W&&0==f&&W.push(L._GetFloatRGBAArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,f))):64===M&&(k=L._GetHalfFloatAsUIntRGBAArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,f),W&&0==f&&W.push(L._GetHalfFloatAsFloatRGBAArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,f))),o.type=0;else{const B=E.textureFloat&&(n&&E.textureFloatLinearFiltering||!n),d=E.textureHalfFloat&&(n&&E.textureHalfFloatLinearFiltering||!n),J=(128===M||64===M&&!d)&&B?1:(64===M||128===M&&!B)&&d?2:0;let Z,t=null;if(128===M)switch(J){case 1:Z=L._GetFloatRGBAArrayBuffer,t=null;break;case 2:Z=L._GetFloatAsHalfFloatRGBAArrayBuffer,t=L._GetFloatRGBAArrayBuffer;break;case 0:Z=L._GetFloatAsUIntRGBAArrayBuffer,t=L._GetFloatRGBAArrayBuffer}else switch(J){case 1:Z=L._GetHalfFloatAsFloatRGBAArrayBuffer,t=null;break;case 2:Z=L._GetHalfFloatRGBAArrayBuffer,t=L._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:Z=L._GetHalfFloatAsUIntRGBAArrayBuffer,t=L._GetHalfFloatAsFloatRGBAArrayBuffer}o.type=J,k=Z(s,V,e.byteOffset+Q,v,e.buffer,f),W&&0==f&&W.push(t?t(s,V,e.byteOffset+Q,v,e.buffer,f):k)}k&&B._uploadDataToTextureDirectly(o,k,d,f)}else if(k.isRGB)o.type=0,24===M?(o.format=4,v=s*V*3,p=L._GetRGBArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,N,x,D),B._uploadDataToTextureDirectly(o,p,d,f)):(o.format=5,v=s*V*4,p=L._GetRGBAArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer,N,x,D,r),B._uploadDataToTextureDirectly(o,p,d,f));else if(k.isLuminance){const k=B._getUnpackAlignement(),J=s;v=Math.floor((s+k-1)/k)*k*(V-1)+J,p=L._GetLuminanceArrayBuffer(s,V,e.byteOffset+Q,v,e.buffer),o.format=1,o.type=0,B._uploadDataToTextureDirectly(o,p,d,f)}else v=Math.max(4,s)/4*Math.max(4,V)/4*b,p=new Uint8Array(e.buffer,e.byteOffset+Q,v),o.type=0,B._uploadCompressedDataToTextureDirectly(o,U,s,V,p,d,f)}Q+=M?s*V*(M/8):v,s*=.5,V*=.5,s=Math.max(1,s),V=Math.max(1,V)}if(void 0!==H)break}W&&W.length>0?k.sphericalPolynomial=f.c.ConvertCubeMapToSphericalPolynomial({size:I[4],right:W[0],left:W[1],up:W[2],down:W[3],front:W[4],back:W[5],format:5,type:1,gammaSpace:!1}):k.sphericalPolynomial=void 0}}L.StoreLODInAlphaChannel=!1}}]);