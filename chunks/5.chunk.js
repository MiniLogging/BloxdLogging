"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2419:(k,M,F)=>{var l=F(588),t=F(487),g=F(522),B=F(620),G=F(552),A=F(599);G.d.prototype._partialLoadFile=function(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(k,(k=>{F[M]=k,F._internalCount++,6===F._internalCount&&l(F)}),void 0,void 0,!0,((k,M)=>{t&&k&&t(k.status+" "+k.statusText,M)}))},G.d.prototype._cascadeLoadFiles=function(k,M,F){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const t=[];t._internalCount=0;for(let g=0;g<6;g++)this._partialLoadFile(F[g],g,t,M,l)},G.d.prototype._cascadeLoadImgs=function(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,g=arguments.length>5?arguments[5]:void 0;const B=[];B._internalCount=0;for(let G=0;G<6;G++)this._partialLoadImg(l[G],G,B,k,M,F,t,g)},G.d.prototype._partialLoadImg=function(k,M,F,l,t,G){let A=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,N=arguments.length>7?arguments[7]:void 0;const d=(0,B.b)();(0,g.r)(k,(k=>{F[M]=k,F._internalCount++,l&&l.removePendingData(d),6===F._internalCount&&G&&G(t,F)}),((k,M)=>{l&&l.removePendingData(d),A&&A(k,M)}),l?l.offlineProvider:null,N),l&&l.addPendingData(d)},G.d.prototype.createCubeTextureBase=function(k,M,F,g){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,N=arguments.length>6?arguments[6]:void 0,d=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,L=arguments.length>8&&void 0!==arguments[8]&&arguments[8],U=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,O=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,w=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,Z=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,R=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,y=arguments.length>14&&void 0!==arguments[14]&&arguments[14],m=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const o=w||new l.c(this,7);o.isCube=!0,o.url=k,o.generateMipMaps=!g,o._lodGenerationScale=U,o._lodGenerationOffset=O,o._useSRGBBuffer=!!y&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!g),o!==w&&(o.label=k.substring(0,60)),this._doNotHandleContextLost||(o._extension=d,o._files=F,o._buffer=m);const Q=k;this._transformTextureUrl&&!w&&(k=this._transformTextureUrl(k));const v=k.split("?")[0],J=v.lastIndexOf("."),n=d||(J>-1?v.substring(J).toLowerCase():""),a=(0,A.c)(n),Y=(l,A)=>{k===Q?G&&l&&G(l.status+" "+l.statusText,A):(t.c.Warn(`Failed to load ${k}, falling back to the ${Q}`),this.createCubeTextureBase(Q,M,F,!!g,B,G,N,d,L,U,O,o,Z,R,y,m))};if(a)a.then((l=>{const g=k=>{Z&&Z(o,k),l.loadCubeData(k,o,L,B,G)};m?g(m):F&&6===F.length?l.supportCascades?this._cascadeLoadFiles(M,(k=>g(k.map((k=>new Uint8Array(k))))),F,G):G?G("Textures type does not support cascades."):t.c.Warn("Texture loader does not support cascades."):this._loadFile(k,(k=>g(new Uint8Array(k))),void 0,void 0,!0,Y)}));else{if(!F||0===F.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(M,o,((k,M)=>{R&&R(k,M)}),F,G)}return this._internalTexturesCache.push(o),o}},2351:(k,M,F)=>{F.d(M,{b:()=>w});var l=F(698),t=F(487),g=F(2353),B=F(2355);F(2419);const G=131072,A=131072;function N(k){return k.charCodeAt(0)+(k.charCodeAt(1)<<8)+(k.charCodeAt(2)<<16)+(k.charCodeAt(3)<<24)}const d=N("DXT1"),L=N("DXT3"),U=N("DXT5"),O=N("DX10");class w{static GetDDSInfo(k){const M=new Int32Array(k.buffer,k.byteOffset,31),F=new Int32Array(k.buffer,k.byteOffset,35);let l=1;M[2]&G&&(l=Math.max(1,M[7]));const t=M[21],g=t===O?F[32]:0;let B=0;switch(t){case 113:B=2;break;case 116:B=1;break;case O:if(10===g){B=2;break}if(2===g){B=1;break}}return{width:M[4],height:M[3],mipmapCount:l,isFourCC:4===(4&M[20]),isRGB:64===(64&M[20]),isLuminance:(M[20]&A)===A,isCube:512===(512&M[28]),isCompressed:t===d||t===L||t===U,dxgiFormat:g,textureType:B}}static _GetHalfFloatAsFloatRGBAArrayBuffer(k,M,F,l,t,g){const G=new Float32Array(l),A=new Uint16Array(t,F);let N=0;for(let d=0;d<M;d++)for(let M=0;M<k;M++){const F=4*(M+d*k);G[N]=(0,B.f)(A[F]),G[N+1]=(0,B.f)(A[F+1]),G[N+2]=(0,B.f)(A[F+2]),w.StoreLODInAlphaChannel?G[N+3]=g:G[N+3]=(0,B.f)(A[F+3]),N+=4}return G}static _GetHalfFloatRGBAArrayBuffer(k,M,F,l,t,g){if(w.StoreLODInAlphaChannel){const G=new Uint16Array(l),A=new Uint16Array(t,F);let N=0;for(let F=0;F<M;F++)for(let M=0;M<k;M++){const l=4*(M+F*k);G[N]=A[l],G[N+1]=A[l+1],G[N+2]=A[l+2],G[N+3]=(0,B.g)(g),N+=4}return G}return new Uint16Array(t,F,l)}static _GetFloatRGBAArrayBuffer(k,M,F,l,t,g){if(w.StoreLODInAlphaChannel){const B=new Float32Array(l),G=new Float32Array(t,F);let A=0;for(let F=0;F<M;F++)for(let M=0;M<k;M++){const l=4*(M+F*k);B[A]=G[l],B[A+1]=G[l+1],B[A+2]=G[l+2],B[A+3]=g,A+=4}return B}return new Float32Array(t,F,l)}static _GetFloatAsHalfFloatRGBAArrayBuffer(k,M,F,l,t,g){const G=new Uint16Array(l),A=new Float32Array(t,F);let N=0;for(let d=0;d<M;d++)for(let M=0;M<k;M++)G[N]=(0,B.g)(A[N]),G[N+1]=(0,B.g)(A[N+1]),G[N+2]=(0,B.g)(A[N+2]),w.StoreLODInAlphaChannel?G[N+3]=(0,B.g)(g):G[N+3]=(0,B.g)(A[N+3]),N+=4;return G}static _GetFloatAsUIntRGBAArrayBuffer(k,M,F,t,g,B){const G=new Uint8Array(t),A=new Float32Array(g,F);let N=0;for(let d=0;d<M;d++)for(let M=0;M<k;M++){const F=4*(M+d*k);G[N]=255*(0,l.e)(A[F]),G[N+1]=255*(0,l.e)(A[F+1]),G[N+2]=255*(0,l.e)(A[F+2]),w.StoreLODInAlphaChannel?G[N+3]=B:G[N+3]=255*(0,l.e)(A[F+3]),N+=4}return G}static _GetHalfFloatAsUIntRGBAArrayBuffer(k,M,F,t,g,G){const A=new Uint8Array(t),N=new Uint16Array(g,F);let d=0;for(let L=0;L<M;L++)for(let M=0;M<k;M++){const F=4*(M+L*k);A[d]=255*(0,l.e)((0,B.f)(N[F])),A[d+1]=255*(0,l.e)((0,B.f)(N[F+1])),A[d+2]=255*(0,l.e)((0,B.f)(N[F+2])),w.StoreLODInAlphaChannel?A[d+3]=G:A[d+3]=255*(0,l.e)((0,B.f)(N[F+3])),d+=4}return A}static _GetRGBAArrayBuffer(k,M,F,l,t,g,B,G,A){const N=new Uint8Array(l),d=new Uint8Array(t,F);let L=0;for(let U=0;U<M;U++)for(let M=0;M<k;M++){const F=4*(M+U*k);N[L]=d[F+g],N[L+1]=d[F+B],N[L+2]=d[F+G],N[L+3]=d[F+A],L+=4}return N}static _ExtractLongWordOrder(k){return 0===k||255===k||-16777216===k?0:1+w._ExtractLongWordOrder(k>>8)}static _GetRGBArrayBuffer(k,M,F,l,t,g,B,G){const A=new Uint8Array(l),N=new Uint8Array(t,F);let d=0;for(let L=0;L<M;L++)for(let M=0;M<k;M++){const F=3*(M+L*k);A[d]=N[F+g],A[d+1]=N[F+B],A[d+2]=N[F+G],d+=3}return A}static _GetLuminanceArrayBuffer(k,M,F,l,t){const g=new Uint8Array(l),B=new Uint8Array(t,F);let G=0;for(let A=0;A<M;A++)for(let M=0;M<k;M++){const F=M+A*k;g[G]=B[F],G++}return g}static UploadDDSLevels(k,M,F,l,B,A){let N=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,Z=arguments.length>7?arguments[7]:void 0,R=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],y=null;l.sphericalPolynomial&&(y=[]);const m=!!k.getCaps().s3tc;M.generateMipMaps=B;const o=new Int32Array(F.buffer,F.byteOffset,31);let Q,v,J,n,a,Y,s,j=0,S=0,c=1;if(542327876!==o[0])return void t.c.Error("Invalid magic number in DDS header");if(!l.isFourCC&&!l.isRGB&&!l.isLuminance)return void t.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(l.isCompressed&&!m)return void t.c.Error("Compressed textures are not supported on this platform.");let r=o[22];n=o[1]+4;let h=!1;if(l.isFourCC)switch(Q=o[21],Q){case d:c=8,S=33777;break;case L:c=16,S=33778;break;case U:c=16,S=33779;break;case 113:h=!0,r=64;break;case 116:h=!0,r=128;break;case O:{n+=20;let k=!1;switch(l.dxgiFormat){case 10:h=!0,r=64,k=!0;break;case 2:h=!0,r=128,k=!0;break;case 88:l.isRGB=!0,l.isFourCC=!1,r=32,k=!0}if(k)break}default:return void t.c.Error(["Unsupported FourCC code:",(e=Q,String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255))])}var e;const x=w._ExtractLongWordOrder(o[23]),p=w._ExtractLongWordOrder(o[24]),K=w._ExtractLongWordOrder(o[25]),f=w._ExtractLongWordOrder(o[26]);h&&(S=k._getRGBABufferInternalSizedFormat(l.textureType)),Y=1,o[2]&G&&!1!==B&&(Y=Math.max(1,o[7]));const W=Z||0,X=k.getCaps();for(let t=W;t<A;t++){for(v=o[4],J=o[3],s=0;s<Y;++s){if(-1===N||N===s){const g=-1===N?s:0;if(!l.isCompressed&&l.isFourCC){M.format=5,j=v*J*4;let l=null;if(k._badOS||k._badDesktopOS||!X.textureHalfFloat&&!X.textureFloat)128===r?(l=w._GetFloatAsUIntRGBAArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,g),y&&0==g&&y.push(w._GetFloatRGBAArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,g))):64===r&&(l=w._GetHalfFloatAsUIntRGBAArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,g),y&&0==g&&y.push(w._GetHalfFloatAsFloatRGBAArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,g))),M.type=0;else{const k=X.textureFloat&&(R&&X.textureFloatLinearFiltering||!R),t=X.textureHalfFloat&&(R&&X.textureHalfFloatLinearFiltering||!R),B=(128===r||64===r&&!t)&&k?1:(64===r||128===r&&!k)&&t?2:0;let G,A=null;if(128===r)switch(B){case 1:G=w._GetFloatRGBAArrayBuffer,A=null;break;case 2:G=w._GetFloatAsHalfFloatRGBAArrayBuffer,A=w._GetFloatRGBAArrayBuffer;break;case 0:G=w._GetFloatAsUIntRGBAArrayBuffer,A=w._GetFloatRGBAArrayBuffer}else switch(B){case 1:G=w._GetHalfFloatAsFloatRGBAArrayBuffer,A=null;break;case 2:G=w._GetHalfFloatRGBAArrayBuffer,A=w._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:G=w._GetHalfFloatAsUIntRGBAArrayBuffer,A=w._GetHalfFloatAsFloatRGBAArrayBuffer}M.type=B,l=G(v,J,F.byteOffset+n,j,F.buffer,g),y&&0==g&&y.push(A?A(v,J,F.byteOffset+n,j,F.buffer,g):l)}l&&k._uploadDataToTextureDirectly(M,l,t,g)}else if(l.isRGB)M.type=0,24===r?(M.format=4,j=v*J*3,a=w._GetRGBArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,x,p,K),k._uploadDataToTextureDirectly(M,a,t,g)):(M.format=5,j=v*J*4,a=w._GetRGBAArrayBuffer(v,J,F.byteOffset+n,j,F.buffer,x,p,K,f),k._uploadDataToTextureDirectly(M,a,t,g));else if(l.isLuminance){const l=k._getUnpackAlignement(),B=v;j=Math.floor((v+l-1)/l)*l*(J-1)+B,a=w._GetLuminanceArrayBuffer(v,J,F.byteOffset+n,j,F.buffer),M.format=1,M.type=0,k._uploadDataToTextureDirectly(M,a,t,g)}else j=Math.max(4,v)/4*Math.max(4,J)/4*c,a=new Uint8Array(F.buffer,F.byteOffset+n,j),M.type=0,k._uploadCompressedDataToTextureDirectly(M,S,v,J,a,t,g)}n+=r?v*J*(r/8):j,v*=.5,J*=.5,v=Math.max(1,v),J=Math.max(1,J)}if(void 0!==Z)break}y&&y.length>0?l.sphericalPolynomial=g.d.ConvertCubeMapToSphericalPolynomial({size:o[4],right:y[0],left:y[1],up:y[2],down:y[3],front:y[4],back:y[5],format:5,type:1,gammaSpace:!1}):l.sphericalPolynomial=void 0}}w.StoreLODInAlphaChannel=!1}}]);