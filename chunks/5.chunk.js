"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2359:(f,z,w)=>{var S=w(650),C=w(548),E=w(583),F=w(668),J=w(616),x=w(661);J.e.prototype._partialLoadFile=function(f,z,w,S){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(f,(f=>{w[z]=f,w._internalCount++,6===w._internalCount&&S(w)}),void 0,void 0,!0,((f,z)=>{C&&f&&C(f.status+" "+f.statusText,z)}))},J.e.prototype._cascadeLoadFiles=function(f,z,w){let S=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const C=[];C._internalCount=0;for(let E=0;E<6;E++)this._partialLoadFile(w[E],E,C,z,S)},J.e.prototype._cascadeLoadImgs=function(f,z,w,S){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,E=arguments.length>5?arguments[5]:void 0;const F=[];F._internalCount=0;for(let J=0;J<6;J++)this._partialLoadImg(S[J],J,F,f,z,w,C,E)},J.e.prototype._partialLoadImg=function(f,z,w,S,C,J){let x=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,u=arguments.length>7?arguments[7]:void 0;const h=(0,F.d)();(0,E.o)(f,(f=>{w[z]=f,w._internalCount++,S&&S.removePendingData(h),6===w._internalCount&&J&&J(C,w)}),((f,z)=>{S&&S.removePendingData(h),x&&x(f,z)}),S?S.offlineProvider:null,u),S&&S.addPendingData(h)},J.e.prototype.createCubeTextureBase=function(f,z,w,E){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,J=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,u=arguments.length>6?arguments[6]:void 0,h=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,X=arguments.length>8&&void 0!==arguments[8]&&arguments[8],K=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,c=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,y=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,e=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,O=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,d=arguments.length>14&&void 0!==arguments[14]&&arguments[14],B=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const V=y||new S.e(this,7);V.isCube=!0,V.url=f,V.generateMipMaps=!E,V._lodGenerationScale=K,V._lodGenerationOffset=c,V._useSRGBBuffer=!!d&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!E),V!==y&&(V.label=f.substring(0,60)),this._doNotHandleContextLost||(V._extension=h,V._files=w,V._buffer=B);const W=f;this._transformTextureUrl&&!y&&(f=this._transformTextureUrl(f));const T=f.split("?")[0],v=T.lastIndexOf("."),D=h||(v>-1?T.substring(v).toLowerCase():""),A=(0,x.d)(D),M=(S,x)=>{f===W?J&&S&&J(S.status+" "+S.statusText,x):(C.b.Warn(`Failed to load ${f}, falling back to the ${W}`),this.createCubeTextureBase(W,z,w,!!E,F,J,u,h,X,K,c,V,e,O,d,B))};if(A)A.then((S=>{const E=f=>{e&&e(V,f),S.loadCubeData(f,V,X,F,J)};B?E(B):w&&6===w.length?S.supportCascades?this._cascadeLoadFiles(z,(f=>E(f.map((f=>new Uint8Array(f))))),w,J):J?J("Textures type does not support cascades."):C.b.Warn("Texture loader does not support cascades."):this._loadFile(f,(f=>E(new Uint8Array(f))),void 0,void 0,!0,M)}));else{if(!w||0===w.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(z,V,((f,z)=>{O&&O(f,z)}),w,J)}return this._internalTexturesCache.push(V),V}},2310:(f,z,w)=>{w.d(z,{e:()=>y});var S=w(741),C=w(548),E=w(2312),F=w(2315);w(2359);const J=131072,x=131072;function u(f){return f.charCodeAt(0)+(f.charCodeAt(1)<<8)+(f.charCodeAt(2)<<16)+(f.charCodeAt(3)<<24)}const h=u("DXT1"),X=u("DXT3"),K=u("DXT5"),c=u("DX10");class y{static GetDDSInfo(f){const z=new Int32Array(f.buffer,f.byteOffset,31),w=new Int32Array(f.buffer,f.byteOffset,35);let S=1;z[2]&J&&(S=Math.max(1,z[7]));const C=z[21],E=C===c?w[32]:0;let F=0;switch(C){case 113:F=2;break;case 116:F=1;break;case c:if(10===E){F=2;break}if(2===E){F=1;break}}return{width:z[4],height:z[3],mipmapCount:S,isFourCC:4===(4&z[20]),isRGB:64===(64&z[20]),isLuminance:(z[20]&x)===x,isCube:512===(512&z[28]),isCompressed:C===h||C===X||C===K,dxgiFormat:E,textureType:F}}static _GetHalfFloatAsFloatRGBAArrayBuffer(f,z,w,S,C,E){const J=new Float32Array(S),x=new Uint16Array(C,w);let u=0;for(let h=0;h<z;h++)for(let z=0;z<f;z++){const w=4*(z+h*f);J[u]=(0,F.d)(x[w]),J[u+1]=(0,F.d)(x[w+1]),J[u+2]=(0,F.d)(x[w+2]),y.StoreLODInAlphaChannel?J[u+3]=E:J[u+3]=(0,F.d)(x[w+3]),u+=4}return J}static _GetHalfFloatRGBAArrayBuffer(f,z,w,S,C,E){if(y.StoreLODInAlphaChannel){const J=new Uint16Array(S),x=new Uint16Array(C,w);let u=0;for(let w=0;w<z;w++)for(let z=0;z<f;z++){const S=4*(z+w*f);J[u]=x[S],J[u+1]=x[S+1],J[u+2]=x[S+2],J[u+3]=(0,F.e)(E),u+=4}return J}return new Uint16Array(C,w,S)}static _GetFloatRGBAArrayBuffer(f,z,w,S,C,E){if(y.StoreLODInAlphaChannel){const F=new Float32Array(S),J=new Float32Array(C,w);let x=0;for(let w=0;w<z;w++)for(let z=0;z<f;z++){const S=4*(z+w*f);F[x]=J[S],F[x+1]=J[S+1],F[x+2]=J[S+2],F[x+3]=E,x+=4}return F}return new Float32Array(C,w,S)}static _GetFloatAsHalfFloatRGBAArrayBuffer(f,z,w,S,C,E){const J=new Uint16Array(S),x=new Float32Array(C,w);let u=0;for(let h=0;h<z;h++)for(let z=0;z<f;z++)J[u]=(0,F.e)(x[u]),J[u+1]=(0,F.e)(x[u+1]),J[u+2]=(0,F.e)(x[u+2]),y.StoreLODInAlphaChannel?J[u+3]=(0,F.e)(E):J[u+3]=(0,F.e)(x[u+3]),u+=4;return J}static _GetFloatAsUIntRGBAArrayBuffer(f,z,w,C,E,F){const J=new Uint8Array(C),x=new Float32Array(E,w);let u=0;for(let h=0;h<z;h++)for(let z=0;z<f;z++){const w=4*(z+h*f);J[u]=255*(0,S.c)(x[w]),J[u+1]=255*(0,S.c)(x[w+1]),J[u+2]=255*(0,S.c)(x[w+2]),y.StoreLODInAlphaChannel?J[u+3]=F:J[u+3]=255*(0,S.c)(x[w+3]),u+=4}return J}static _GetHalfFloatAsUIntRGBAArrayBuffer(f,z,w,C,E,J){const x=new Uint8Array(C),u=new Uint16Array(E,w);let h=0;for(let X=0;X<z;X++)for(let z=0;z<f;z++){const w=4*(z+X*f);x[h]=255*(0,S.c)((0,F.d)(u[w])),x[h+1]=255*(0,S.c)((0,F.d)(u[w+1])),x[h+2]=255*(0,S.c)((0,F.d)(u[w+2])),y.StoreLODInAlphaChannel?x[h+3]=J:x[h+3]=255*(0,S.c)((0,F.d)(u[w+3])),h+=4}return x}static _GetRGBAArrayBuffer(f,z,w,S,C,E,F,J,x){const u=new Uint8Array(S),h=new Uint8Array(C,w);let X=0;for(let K=0;K<z;K++)for(let z=0;z<f;z++){const w=4*(z+K*f);u[X]=h[w+E],u[X+1]=h[w+F],u[X+2]=h[w+J],u[X+3]=h[w+x],X+=4}return u}static _ExtractLongWordOrder(f){return 0===f||255===f||-16777216===f?0:1+y._ExtractLongWordOrder(f>>8)}static _GetRGBArrayBuffer(f,z,w,S,C,E,F,J){const x=new Uint8Array(S),u=new Uint8Array(C,w);let h=0;for(let X=0;X<z;X++)for(let z=0;z<f;z++){const w=3*(z+X*f);x[h]=u[w+E],x[h+1]=u[w+F],x[h+2]=u[w+J],h+=3}return x}static _GetLuminanceArrayBuffer(f,z,w,S,C){const E=new Uint8Array(S),F=new Uint8Array(C,w);let J=0;for(let x=0;x<z;x++)for(let z=0;z<f;z++){const w=z+x*f;E[J]=F[w],J++}return E}static UploadDDSLevels(f,z,w,S,F,x){let u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,e=arguments.length>7?arguments[7]:void 0,O=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],d=null;S.sphericalPolynomial&&(d=[]);const B=!!f.getCaps().s3tc;z.generateMipMaps=F;const V=new Int32Array(w.buffer,w.byteOffset,31);let W,T,v,D,A,M,G,I=0,n=0,P=1;if(542327876!==V[0])return void C.b.Error("Invalid magic number in DDS header");if(!S.isFourCC&&!S.isRGB&&!S.isLuminance)return void C.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(S.isCompressed&&!B)return void C.b.Error("Compressed textures are not supported on this platform.");let R=V[22];D=V[1]+4;let q=!1;if(S.isFourCC)switch(W=V[21],W){case h:P=8,n=33777;break;case X:P=16,n=33778;break;case K:P=16,n=33779;break;case 113:q=!0,R=64;break;case 116:q=!0,R=128;break;case c:{D+=20;let f=!1;switch(S.dxgiFormat){case 10:q=!0,R=64,f=!0;break;case 2:q=!0,R=128,f=!0;break;case 88:S.isRGB=!0,S.isFourCC=!1,R=32,f=!0}if(f)break}default:return void C.b.Error(["Unsupported FourCC code:",(a=W,String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255))])}var a;const s=y._ExtractLongWordOrder(V[23]),H=y._ExtractLongWordOrder(V[24]),L=y._ExtractLongWordOrder(V[25]),U=y._ExtractLongWordOrder(V[26]);q&&(n=f._getRGBABufferInternalSizedFormat(S.textureType)),M=1,V[2]&J&&!1!==F&&(M=Math.max(1,V[7]));const i=e||0,m=f.getCaps();for(let C=i;C<x;C++){for(T=V[4],v=V[3],G=0;G<M;++G){if(-1===u||u===G){const E=-1===u?G:0;if(!S.isCompressed&&S.isFourCC){z.format=5,I=T*v*4;let S=null;if(f._badOS||f._badDesktopOS||!m.textureHalfFloat&&!m.textureFloat)128===R?(S=y._GetFloatAsUIntRGBAArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,E),d&&0==E&&d.push(y._GetFloatRGBAArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,E))):64===R&&(S=y._GetHalfFloatAsUIntRGBAArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,E),d&&0==E&&d.push(y._GetHalfFloatAsFloatRGBAArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,E))),z.type=0;else{const f=m.textureFloat&&(O&&m.textureFloatLinearFiltering||!O),C=m.textureHalfFloat&&(O&&m.textureHalfFloatLinearFiltering||!O),F=(128===R||64===R&&!C)&&f?1:(64===R||128===R&&!f)&&C?2:0;let J,x=null;if(128===R)switch(F){case 1:J=y._GetFloatRGBAArrayBuffer,x=null;break;case 2:J=y._GetFloatAsHalfFloatRGBAArrayBuffer,x=y._GetFloatRGBAArrayBuffer;break;case 0:J=y._GetFloatAsUIntRGBAArrayBuffer,x=y._GetFloatRGBAArrayBuffer}else switch(F){case 1:J=y._GetHalfFloatAsFloatRGBAArrayBuffer,x=null;break;case 2:J=y._GetHalfFloatRGBAArrayBuffer,x=y._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:J=y._GetHalfFloatAsUIntRGBAArrayBuffer,x=y._GetHalfFloatAsFloatRGBAArrayBuffer}z.type=F,S=J(T,v,w.byteOffset+D,I,w.buffer,E),d&&0==E&&d.push(x?x(T,v,w.byteOffset+D,I,w.buffer,E):S)}S&&f._uploadDataToTextureDirectly(z,S,C,E)}else if(S.isRGB)z.type=0,24===R?(z.format=4,I=T*v*3,A=y._GetRGBArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,s,H,L),f._uploadDataToTextureDirectly(z,A,C,E)):(z.format=5,I=T*v*4,A=y._GetRGBAArrayBuffer(T,v,w.byteOffset+D,I,w.buffer,s,H,L,U),f._uploadDataToTextureDirectly(z,A,C,E));else if(S.isLuminance){const S=f._getUnpackAlignement(),F=T;I=Math.floor((T+S-1)/S)*S*(v-1)+F,A=y._GetLuminanceArrayBuffer(T,v,w.byteOffset+D,I,w.buffer),z.format=1,z.type=0,f._uploadDataToTextureDirectly(z,A,C,E)}else I=Math.max(4,T)/4*Math.max(4,v)/4*P,A=new Uint8Array(w.buffer,w.byteOffset+D,I),z.type=0,f._uploadCompressedDataToTextureDirectly(z,n,T,v,A,C,E)}D+=R?T*v*(R/8):I,T*=.5,v*=.5,T=Math.max(1,T),v=Math.max(1,v)}if(void 0!==e)break}d&&d.length>0?S.sphericalPolynomial=E.b.ConvertCubeMapToSphericalPolynomial({size:V[4],right:d[0],left:d[1],up:d[2],down:d[3],front:d[4],back:d[5],format:5,type:1,gammaSpace:!1}):S.sphericalPolynomial=void 0}}y.StoreLODInAlphaChannel=!1}}]);