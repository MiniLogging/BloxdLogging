"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2354:(a,x,Q)=>{var s=Q(594),h=Q(507),D=Q(534),N=Q(621),C=Q(568),R=Q(607);C.b.prototype._partialLoadFile=function(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(a,(a=>{Q[x]=a,Q._internalCount++,6===Q._internalCount&&s(Q)}),void 0,void 0,!0,((a,x)=>{h&&a&&h(a.status+" "+a.statusText,x)}))},C.b.prototype._cascadeLoadFiles=function(a,x,Q){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const h=[];h._internalCount=0;for(let D=0;D<6;D++)this._partialLoadFile(Q[D],D,h,x,s)},C.b.prototype._cascadeLoadImgs=function(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,D=arguments.length>5?arguments[5]:void 0;const N=[];N._internalCount=0;for(let C=0;C<6;C++)this._partialLoadImg(s[C],C,N,a,x,Q,h,D)},C.b.prototype._partialLoadImg=function(a,x,Q,s,h,C){let R=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,U=arguments.length>7?arguments[7]:void 0;const W=(0,N.d)();(0,D.r)(a,(a=>{Q[x]=a,Q._internalCount++,s&&s.removePendingData(W),6===Q._internalCount&&C&&C(h,Q)}),((a,x)=>{s&&s.removePendingData(W),R&&R(a,x)}),s?s.offlineProvider:null,U),s&&s.addPendingData(W)},C.b.prototype.createCubeTextureBase=function(a,x,Q,D){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,U=arguments.length>6?arguments[6]:void 0,W=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,v=arguments.length>8&&void 0!==arguments[8]&&arguments[8],e=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,p=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,j=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,H=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,d=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,i=arguments.length>14&&void 0!==arguments[14]&&arguments[14],Z=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const y=j||new s.c(this,7);y.isCube=!0,y.url=a,y.generateMipMaps=!D,y._lodGenerationScale=e,y._lodGenerationOffset=p,y._useSRGBBuffer=!!i&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!D),y!==j&&(y.label=a.substring(0,60)),this._doNotHandleContextLost||(y._extension=W,y._files=Q,y._buffer=Z);const k=a;this._transformTextureUrl&&!j&&(a=this._transformTextureUrl(a));const F=a.split("?")[0],g=F.lastIndexOf("."),l=W||(g>-1?F.substring(g).toLowerCase():""),r=(0,R.e)(l),J=(s,R)=>{a===k?C&&s&&C(s.status+" "+s.statusText,R):(h.d.Warn(`Failed to load ${a}, falling back to the ${k}`),this.createCubeTextureBase(k,x,Q,!!D,N,C,U,W,v,e,p,y,H,d,i,Z))};if(r)r.then((s=>{const D=a=>{H&&H(y,a),s.loadCubeData(a,y,v,N,C)};Z?D(Z):Q&&6===Q.length?s.supportCascades?this._cascadeLoadFiles(x,(a=>D(a.map((a=>new Uint8Array(a))))),Q,C):C?C("Textures type does not support cascades."):h.d.Warn("Texture loader does not support cascades."):this._loadFile(a,(a=>D(new Uint8Array(a))),void 0,void 0,!0,J)}));else{if(!Q||0===Q.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(x,y,((a,x)=>{d&&d(a,x)}),Q,C)}return this._internalTexturesCache.push(y),y}},2296:(a,x,Q)=>{Q.d(x,{c:()=>j});var s=Q(699),h=Q(507),D=Q(2304),N=Q(2309);Q(2354);const C=131072,R=131072;function U(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}const W=U("DXT1"),v=U("DXT3"),e=U("DXT5"),p=U("DX10");class j{static GetDDSInfo(a){const x=new Int32Array(a.buffer,a.byteOffset,31),Q=new Int32Array(a.buffer,a.byteOffset,35);let s=1;x[2]&C&&(s=Math.max(1,x[7]));const h=x[21],D=h===p?Q[32]:0;let N=0;switch(h){case 113:N=2;break;case 116:N=1;break;case p:if(10===D){N=2;break}if(2===D){N=1;break}}return{width:x[4],height:x[3],mipmapCount:s,isFourCC:4===(4&x[20]),isRGB:64===(64&x[20]),isLuminance:(x[20]&R)===R,isCube:512===(512&x[28]),isCompressed:h===W||h===v||h===e,dxgiFormat:D,textureType:N}}static _GetHalfFloatAsFloatRGBAArrayBuffer(a,x,Q,s,h,D){const C=new Float32Array(s),R=new Uint16Array(h,Q);let U=0;for(let W=0;W<x;W++)for(let x=0;x<a;x++){const Q=4*(x+W*a);C[U]=(0,N.g)(R[Q]),C[U+1]=(0,N.g)(R[Q+1]),C[U+2]=(0,N.g)(R[Q+2]),j.StoreLODInAlphaChannel?C[U+3]=D:C[U+3]=(0,N.g)(R[Q+3]),U+=4}return C}static _GetHalfFloatRGBAArrayBuffer(a,x,Q,s,h,D){if(j.StoreLODInAlphaChannel){const C=new Uint16Array(s),R=new Uint16Array(h,Q);let U=0;for(let Q=0;Q<x;Q++)for(let x=0;x<a;x++){const s=4*(x+Q*a);C[U]=R[s],C[U+1]=R[s+1],C[U+2]=R[s+2],C[U+3]=(0,N.j)(D),U+=4}return C}return new Uint16Array(h,Q,s)}static _GetFloatRGBAArrayBuffer(a,x,Q,s,h,D){if(j.StoreLODInAlphaChannel){const N=new Float32Array(s),C=new Float32Array(h,Q);let R=0;for(let Q=0;Q<x;Q++)for(let x=0;x<a;x++){const s=4*(x+Q*a);N[R]=C[s],N[R+1]=C[s+1],N[R+2]=C[s+2],N[R+3]=D,R+=4}return N}return new Float32Array(h,Q,s)}static _GetFloatAsHalfFloatRGBAArrayBuffer(a,x,Q,s,h,D){const C=new Uint16Array(s),R=new Float32Array(h,Q);let U=0;for(let W=0;W<x;W++)for(let x=0;x<a;x++)C[U]=(0,N.j)(R[U]),C[U+1]=(0,N.j)(R[U+1]),C[U+2]=(0,N.j)(R[U+2]),j.StoreLODInAlphaChannel?C[U+3]=(0,N.j)(D):C[U+3]=(0,N.j)(R[U+3]),U+=4;return C}static _GetFloatAsUIntRGBAArrayBuffer(a,x,Q,h,D,N){const C=new Uint8Array(h),R=new Float32Array(D,Q);let U=0;for(let W=0;W<x;W++)for(let x=0;x<a;x++){const Q=4*(x+W*a);C[U]=255*(0,s.c)(R[Q]),C[U+1]=255*(0,s.c)(R[Q+1]),C[U+2]=255*(0,s.c)(R[Q+2]),j.StoreLODInAlphaChannel?C[U+3]=N:C[U+3]=255*(0,s.c)(R[Q+3]),U+=4}return C}static _GetHalfFloatAsUIntRGBAArrayBuffer(a,x,Q,h,D,C){const R=new Uint8Array(h),U=new Uint16Array(D,Q);let W=0;for(let v=0;v<x;v++)for(let x=0;x<a;x++){const Q=4*(x+v*a);R[W]=255*(0,s.c)((0,N.g)(U[Q])),R[W+1]=255*(0,s.c)((0,N.g)(U[Q+1])),R[W+2]=255*(0,s.c)((0,N.g)(U[Q+2])),j.StoreLODInAlphaChannel?R[W+3]=C:R[W+3]=255*(0,s.c)((0,N.g)(U[Q+3])),W+=4}return R}static _GetRGBAArrayBuffer(a,x,Q,s,h,D,N,C,R){const U=new Uint8Array(s),W=new Uint8Array(h,Q);let v=0;for(let e=0;e<x;e++)for(let x=0;x<a;x++){const Q=4*(x+e*a);U[v]=W[Q+D],U[v+1]=W[Q+N],U[v+2]=W[Q+C],U[v+3]=W[Q+R],v+=4}return U}static _ExtractLongWordOrder(a){return 0===a||255===a||-16777216===a?0:1+j._ExtractLongWordOrder(a>>8)}static _GetRGBArrayBuffer(a,x,Q,s,h,D,N,C){const R=new Uint8Array(s),U=new Uint8Array(h,Q);let W=0;for(let v=0;v<x;v++)for(let x=0;x<a;x++){const Q=3*(x+v*a);R[W]=U[Q+D],R[W+1]=U[Q+N],R[W+2]=U[Q+C],W+=3}return R}static _GetLuminanceArrayBuffer(a,x,Q,s,h){const D=new Uint8Array(s),N=new Uint8Array(h,Q);let C=0;for(let R=0;R<x;R++)for(let x=0;x<a;x++){const Q=x+R*a;D[C]=N[Q],C++}return D}static UploadDDSLevels(a,x,Q,s,N,R){let U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,H=arguments.length>7?arguments[7]:void 0,d=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],i=null;s.sphericalPolynomial&&(i=[]);const Z=!!a.getCaps().s3tc;x.generateMipMaps=N;const y=new Int32Array(Q.buffer,Q.byteOffset,31);let k,F,g,l,r,J,K,E=0,G=0,T=1;if(542327876!==y[0])return void h.d.Error("Invalid magic number in DDS header");if(!s.isFourCC&&!s.isRGB&&!s.isLuminance)return void h.d.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(s.isCompressed&&!Z)return void h.d.Error("Compressed textures are not supported on this platform.");let L=y[22];l=y[1]+4;let b=!1;if(s.isFourCC)switch(k=y[21],k){case W:T=8,G=33777;break;case v:T=16,G=33778;break;case e:T=16,G=33779;break;case 113:b=!0,L=64;break;case 116:b=!0,L=128;break;case p:{l+=20;let a=!1;switch(s.dxgiFormat){case 10:b=!0,L=64,a=!0;break;case 2:b=!0,L=128,a=!0;break;case 88:s.isRGB=!0,s.isFourCC=!1,L=32,a=!0}if(a)break}default:return void h.d.Error(["Unsupported FourCC code:",(Y=k,String.fromCharCode(255&Y,Y>>8&255,Y>>16&255,Y>>24&255))])}var Y;const q=j._ExtractLongWordOrder(y[23]),t=j._ExtractLongWordOrder(y[24]),V=j._ExtractLongWordOrder(y[25]),f=j._ExtractLongWordOrder(y[26]);b&&(G=a._getRGBABufferInternalSizedFormat(s.textureType)),J=1,y[2]&C&&!1!==N&&(J=Math.max(1,y[7]));const n=H||0,m=a.getCaps();for(let h=n;h<R;h++){for(F=y[4],g=y[3],K=0;K<J;++K){if(-1===U||U===K){const D=-1===U?K:0;if(!s.isCompressed&&s.isFourCC){x.format=5,E=F*g*4;let s=null;if(a._badOS||a._badDesktopOS||!m.textureHalfFloat&&!m.textureFloat)128===L?(s=j._GetFloatAsUIntRGBAArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,D),i&&0==D&&i.push(j._GetFloatRGBAArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,D))):64===L&&(s=j._GetHalfFloatAsUIntRGBAArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,D),i&&0==D&&i.push(j._GetHalfFloatAsFloatRGBAArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,D))),x.type=0;else{const a=m.textureFloat&&(d&&m.textureFloatLinearFiltering||!d),h=m.textureHalfFloat&&(d&&m.textureHalfFloatLinearFiltering||!d),N=(128===L||64===L&&!h)&&a?1:(64===L||128===L&&!a)&&h?2:0;let C,R=null;if(128===L)switch(N){case 1:C=j._GetFloatRGBAArrayBuffer,R=null;break;case 2:C=j._GetFloatAsHalfFloatRGBAArrayBuffer,R=j._GetFloatRGBAArrayBuffer;break;case 0:C=j._GetFloatAsUIntRGBAArrayBuffer,R=j._GetFloatRGBAArrayBuffer}else switch(N){case 1:C=j._GetHalfFloatAsFloatRGBAArrayBuffer,R=null;break;case 2:C=j._GetHalfFloatRGBAArrayBuffer,R=j._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:C=j._GetHalfFloatAsUIntRGBAArrayBuffer,R=j._GetHalfFloatAsFloatRGBAArrayBuffer}x.type=N,s=C(F,g,Q.byteOffset+l,E,Q.buffer,D),i&&0==D&&i.push(R?R(F,g,Q.byteOffset+l,E,Q.buffer,D):s)}s&&a._uploadDataToTextureDirectly(x,s,h,D)}else if(s.isRGB)x.type=0,24===L?(x.format=4,E=F*g*3,r=j._GetRGBArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,q,t,V),a._uploadDataToTextureDirectly(x,r,h,D)):(x.format=5,E=F*g*4,r=j._GetRGBAArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer,q,t,V,f),a._uploadDataToTextureDirectly(x,r,h,D));else if(s.isLuminance){const s=a._getUnpackAlignement(),N=F;E=Math.floor((F+s-1)/s)*s*(g-1)+N,r=j._GetLuminanceArrayBuffer(F,g,Q.byteOffset+l,E,Q.buffer),x.format=1,x.type=0,a._uploadDataToTextureDirectly(x,r,h,D)}else E=Math.max(4,F)/4*Math.max(4,g)/4*T,r=new Uint8Array(Q.buffer,Q.byteOffset+l,E),x.type=0,a._uploadCompressedDataToTextureDirectly(x,G,F,g,r,h,D)}l+=L?F*g*(L/8):E,F*=.5,g*=.5,F=Math.max(1,F),g=Math.max(1,g)}if(void 0!==H)break}i&&i.length>0?s.sphericalPolynomial=D.d.ConvertCubeMapToSphericalPolynomial({size:y[4],right:i[0],left:i[1],up:i[2],down:i[3],front:i[4],back:i[5],format:5,type:1,gammaSpace:!1}):s.sphericalPolynomial=void 0}}j.StoreLODInAlphaChannel=!1}}]);