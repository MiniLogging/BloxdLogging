"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2122:(Y,d,t)=>{var x=t(609),C=t(531),U=t(563),y=t(641),B=t(586),W=t(622);B.d.prototype._partialLoadFile=function(Y,d,t,x){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(Y,(Y=>{t[d]=Y,t._internalCount++,6===t._internalCount&&x(t)}),void 0,void 0,!0,((Y,d)=>{C&&Y&&C(Y.status+" "+Y.statusText,d)}))},B.d.prototype._cascadeLoadFiles=function(Y,d,t){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const C=[];C._internalCount=0;for(let U=0;U<6;U++)this._partialLoadFile(t[U],U,C,d,x)},B.d.prototype._cascadeLoadImgs=function(Y,d,t,x){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,U=arguments.length>5?arguments[5]:void 0;const y=[];y._internalCount=0;for(let B=0;B<6;B++)this._partialLoadImg(x[B],B,y,Y,d,t,C,U)},B.d.prototype._partialLoadImg=function(Y,d,t,x,C,B){let W=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7?arguments[7]:void 0;const f=(0,y.b)();(0,U.p)(Y,(Y=>{t[d]=Y,t._internalCount++,x&&x.removePendingData(f),6===t._internalCount&&B&&B(C,t)}),((Y,d)=>{x&&x.removePendingData(f),W&&W(Y,d)}),x?x.offlineProvider:null,o),x&&x.addPendingData(f)},B.d.prototype.createCubeTextureBase=function(Y,d,t,U){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=arguments.length>6?arguments[6]:void 0,f=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,F=arguments.length>8&&void 0!==arguments[8]&&arguments[8],D=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,b=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,m=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,M=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,J=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,g=arguments.length>14&&void 0!==arguments[14]&&arguments[14],T=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const s=m||new x.c(this,7);s.isCube=!0,s.url=Y,s.generateMipMaps=!U,s._lodGenerationScale=D,s._lodGenerationOffset=b,s._useSRGBBuffer=!!g&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!U),s!==m&&(s.label=Y.substring(0,60)),this._doNotHandleContextLost||(s._extension=f,s._files=t,s._buffer=T);const l=Y;this._transformTextureUrl&&!m&&(Y=this._transformTextureUrl(Y));const h=Y.split("?")[0],Z=h.lastIndexOf("."),N=f||(Z>-1?h.substring(Z).toLowerCase():""),w=(0,W.b)(N),K=(x,W)=>{Y===l?B&&x&&B(x.status+" "+x.statusText,W):(C.c.Warn(`Failed to load ${Y}, falling back to the ${l}`),this.createCubeTextureBase(l,d,t,!!U,y,B,o,f,F,D,b,s,M,J,g,T))};if(w)w.then((x=>{const U=Y=>{M&&M(s,Y),x.loadCubeData(Y,s,F,y,B)};T?U(T):t&&6===t.length?x.supportCascades?this._cascadeLoadFiles(d,(Y=>U(Y.map((Y=>new Uint8Array(Y))))),t,B):B?B("Textures type does not support cascades."):C.c.Warn("Texture loader does not support cascades."):this._loadFile(Y,(Y=>U(new Uint8Array(Y))),void 0,void 0,!0,K)}));else{if(!t||0===t.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(d,s,((Y,d)=>{J&&J(Y,d)}),t,B)}return this._internalTexturesCache.push(s),s}},2057:(Y,d,t)=>{t.d(d,{d:()=>m});var x=t(705),C=t(531),U=t(2066),y=t(2075);t(2122);const B=131072,W=131072;function o(Y){return Y.charCodeAt(0)+(Y.charCodeAt(1)<<8)+(Y.charCodeAt(2)<<16)+(Y.charCodeAt(3)<<24)}const f=o("DXT1"),F=o("DXT3"),D=o("DXT5"),b=o("DX10");class m{static GetDDSInfo(Y){const d=new Int32Array(Y.buffer,Y.byteOffset,31),t=new Int32Array(Y.buffer,Y.byteOffset,35);let x=1;d[2]&B&&(x=Math.max(1,d[7]));const C=d[21],U=C===b?t[32]:0;let y=0;switch(C){case 113:y=2;break;case 116:y=1;break;case b:if(10===U){y=2;break}if(2===U){y=1;break}}return{width:d[4],height:d[3],mipmapCount:x,isFourCC:4===(4&d[20]),isRGB:64===(64&d[20]),isLuminance:(d[20]&W)===W,isCube:512===(512&d[28]),isCompressed:C===f||C===F||C===D,dxgiFormat:U,textureType:y}}static _GetHalfFloatAsFloatRGBAArrayBuffer(Y,d,t,x,C,U){const B=new Float32Array(x),W=new Uint16Array(C,t);let o=0;for(let f=0;f<d;f++)for(let d=0;d<Y;d++){const t=4*(d+f*Y);B[o]=(0,y.f)(W[t]),B[o+1]=(0,y.f)(W[t+1]),B[o+2]=(0,y.f)(W[t+2]),m.StoreLODInAlphaChannel?B[o+3]=U:B[o+3]=(0,y.f)(W[t+3]),o+=4}return B}static _GetHalfFloatRGBAArrayBuffer(Y,d,t,x,C,U){if(m.StoreLODInAlphaChannel){const B=new Uint16Array(x),W=new Uint16Array(C,t);let o=0;for(let t=0;t<d;t++)for(let d=0;d<Y;d++){const x=4*(d+t*Y);B[o]=W[x],B[o+1]=W[x+1],B[o+2]=W[x+2],B[o+3]=(0,y.g)(U),o+=4}return B}return new Uint16Array(C,t,x)}static _GetFloatRGBAArrayBuffer(Y,d,t,x,C,U){if(m.StoreLODInAlphaChannel){const y=new Float32Array(x),B=new Float32Array(C,t);let W=0;for(let t=0;t<d;t++)for(let d=0;d<Y;d++){const x=4*(d+t*Y);y[W]=B[x],y[W+1]=B[x+1],y[W+2]=B[x+2],y[W+3]=U,W+=4}return y}return new Float32Array(C,t,x)}static _GetFloatAsHalfFloatRGBAArrayBuffer(Y,d,t,x,C,U){const B=new Uint16Array(x),W=new Float32Array(C,t);let o=0;for(let f=0;f<d;f++)for(let d=0;d<Y;d++)B[o]=(0,y.g)(W[o]),B[o+1]=(0,y.g)(W[o+1]),B[o+2]=(0,y.g)(W[o+2]),m.StoreLODInAlphaChannel?B[o+3]=(0,y.g)(U):B[o+3]=(0,y.g)(W[o+3]),o+=4;return B}static _GetFloatAsUIntRGBAArrayBuffer(Y,d,t,C,U,y){const B=new Uint8Array(C),W=new Float32Array(U,t);let o=0;for(let f=0;f<d;f++)for(let d=0;d<Y;d++){const t=4*(d+f*Y);B[o]=255*(0,x.b)(W[t]),B[o+1]=255*(0,x.b)(W[t+1]),B[o+2]=255*(0,x.b)(W[t+2]),m.StoreLODInAlphaChannel?B[o+3]=y:B[o+3]=255*(0,x.b)(W[t+3]),o+=4}return B}static _GetHalfFloatAsUIntRGBAArrayBuffer(Y,d,t,C,U,B){const W=new Uint8Array(C),o=new Uint16Array(U,t);let f=0;for(let F=0;F<d;F++)for(let d=0;d<Y;d++){const t=4*(d+F*Y);W[f]=255*(0,x.b)((0,y.f)(o[t])),W[f+1]=255*(0,x.b)((0,y.f)(o[t+1])),W[f+2]=255*(0,x.b)((0,y.f)(o[t+2])),m.StoreLODInAlphaChannel?W[f+3]=B:W[f+3]=255*(0,x.b)((0,y.f)(o[t+3])),f+=4}return W}static _GetRGBAArrayBuffer(Y,d,t,x,C,U,y,B,W){const o=new Uint8Array(x),f=new Uint8Array(C,t);let F=0;for(let D=0;D<d;D++)for(let d=0;d<Y;d++){const t=4*(d+D*Y);o[F]=f[t+U],o[F+1]=f[t+y],o[F+2]=f[t+B],o[F+3]=f[t+W],F+=4}return o}static _ExtractLongWordOrder(Y){return 0===Y||255===Y||-16777216===Y?0:1+m._ExtractLongWordOrder(Y>>8)}static _GetRGBArrayBuffer(Y,d,t,x,C,U,y,B){const W=new Uint8Array(x),o=new Uint8Array(C,t);let f=0;for(let F=0;F<d;F++)for(let d=0;d<Y;d++){const t=3*(d+F*Y);W[f]=o[t+U],W[f+1]=o[t+y],W[f+2]=o[t+B],f+=3}return W}static _GetLuminanceArrayBuffer(Y,d,t,x,C){const U=new Uint8Array(x),y=new Uint8Array(C,t);let B=0;for(let W=0;W<d;W++)for(let d=0;d<Y;d++){const t=d+W*Y;U[B]=y[t],B++}return U}static UploadDDSLevels(Y,d,t,x,y,W){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,M=arguments.length>7?arguments[7]:void 0,J=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],g=null;x.sphericalPolynomial&&(g=[]);const T=!!Y.getCaps().s3tc;d.generateMipMaps=y;const s=new Int32Array(t.buffer,t.byteOffset,31);let l,h,Z,N,w,K,P,V=0,j=0,n=1;if(542327876!==s[0])return void C.c.Error("Invalid magic number in DDS header");if(!x.isFourCC&&!x.isRGB&&!x.isLuminance)return void C.c.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(x.isCompressed&&!T)return void C.c.Error("Compressed textures are not supported on this platform.");let H=s[22];N=s[1]+4;let v=!1;if(x.isFourCC)switch(l=s[21],l){case f:n=8,j=33777;break;case F:n=16,j=33778;break;case D:n=16,j=33779;break;case 113:v=!0,H=64;break;case 116:v=!0,H=128;break;case b:{N+=20;let Y=!1;switch(x.dxgiFormat){case 10:v=!0,H=64,Y=!0;break;case 2:v=!0,H=128,Y=!0;break;case 88:x.isRGB=!0,x.isFourCC=!1,H=32,Y=!0}if(Y)break}default:return void C.c.Error(["Unsupported FourCC code:",(u=l,String.fromCharCode(255&u,u>>8&255,u>>16&255,u>>24&255))])}var u;const I=m._ExtractLongWordOrder(s[23]),e=m._ExtractLongWordOrder(s[24]),i=m._ExtractLongWordOrder(s[25]),X=m._ExtractLongWordOrder(s[26]);v&&(j=Y._getRGBABufferInternalSizedFormat(x.textureType)),K=1,s[2]&B&&!1!==y&&(K=Math.max(1,s[7]));const O=M||0,G=Y.getCaps();for(let C=O;C<W;C++){for(h=s[4],Z=s[3],P=0;P<K;++P){if(-1===o||o===P){const U=-1===o?P:0;if(!x.isCompressed&&x.isFourCC){d.format=5,V=h*Z*4;let x=null;if(Y._badOS||Y._badDesktopOS||!G.textureHalfFloat&&!G.textureFloat)128===H?(x=m._GetFloatAsUIntRGBAArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,U),g&&0==U&&g.push(m._GetFloatRGBAArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,U))):64===H&&(x=m._GetHalfFloatAsUIntRGBAArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,U),g&&0==U&&g.push(m._GetHalfFloatAsFloatRGBAArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,U))),d.type=0;else{const Y=G.textureFloat&&(J&&G.textureFloatLinearFiltering||!J),C=G.textureHalfFloat&&(J&&G.textureHalfFloatLinearFiltering||!J),y=(128===H||64===H&&!C)&&Y?1:(64===H||128===H&&!Y)&&C?2:0;let B,W=null;if(128===H)switch(y){case 1:B=m._GetFloatRGBAArrayBuffer,W=null;break;case 2:B=m._GetFloatAsHalfFloatRGBAArrayBuffer,W=m._GetFloatRGBAArrayBuffer;break;case 0:B=m._GetFloatAsUIntRGBAArrayBuffer,W=m._GetFloatRGBAArrayBuffer}else switch(y){case 1:B=m._GetHalfFloatAsFloatRGBAArrayBuffer,W=null;break;case 2:B=m._GetHalfFloatRGBAArrayBuffer,W=m._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:B=m._GetHalfFloatAsUIntRGBAArrayBuffer,W=m._GetHalfFloatAsFloatRGBAArrayBuffer}d.type=y,x=B(h,Z,t.byteOffset+N,V,t.buffer,U),g&&0==U&&g.push(W?W(h,Z,t.byteOffset+N,V,t.buffer,U):x)}x&&Y._uploadDataToTextureDirectly(d,x,C,U)}else if(x.isRGB)d.type=0,24===H?(d.format=4,V=h*Z*3,w=m._GetRGBArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,I,e,i),Y._uploadDataToTextureDirectly(d,w,C,U)):(d.format=5,V=h*Z*4,w=m._GetRGBAArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer,I,e,i,X),Y._uploadDataToTextureDirectly(d,w,C,U));else if(x.isLuminance){const x=Y._getUnpackAlignement(),y=h;V=Math.floor((h+x-1)/x)*x*(Z-1)+y,w=m._GetLuminanceArrayBuffer(h,Z,t.byteOffset+N,V,t.buffer),d.format=1,d.type=0,Y._uploadDataToTextureDirectly(d,w,C,U)}else V=Math.max(4,h)/4*Math.max(4,Z)/4*n,w=new Uint8Array(t.buffer,t.byteOffset+N,V),d.type=0,Y._uploadCompressedDataToTextureDirectly(d,j,h,Z,w,C,U)}N+=H?h*Z*(H/8):V,h*=.5,Z*=.5,h=Math.max(1,h),Z=Math.max(1,Z)}if(void 0!==M)break}g&&g.length>0?x.sphericalPolynomial=U.d.ConvertCubeMapToSphericalPolynomial({size:s[4],right:g[0],left:g[1],up:g[2],down:g[3],front:g[4],back:g[5],format:5,type:1,gammaSpace:!1}):x.sphericalPolynomial=void 0}}m.StoreLODInAlphaChannel=!1}}]);