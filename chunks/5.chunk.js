"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[5],{2073:(j,H,s)=>{var i=s(616),B=s(514),e=s(551),k=s(644),V=s(583),C=s(626);V.d.prototype._partialLoadFile=function(j,H,s,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(j,(j=>{s[H]=j,s._internalCount++,6===s._internalCount&&i(s)}),void 0,void 0,!0,((j,H)=>{B&&j&&B(j.status+" "+j.statusText,H)}))},V.d.prototype._cascadeLoadFiles=function(j,H,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const B=[];B._internalCount=0;for(let e=0;e<6;e++)this._partialLoadFile(s[e],e,B,H,i)},V.d.prototype._cascadeLoadImgs=function(j,H,s,i){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,e=arguments.length>5?arguments[5]:void 0;const k=[];k._internalCount=0;for(let V=0;V<6;V++)this._partialLoadImg(i[V],V,k,j,H,s,B,e)},V.d.prototype._partialLoadImg=function(j,H,s,i,B,V){let C=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,L=arguments.length>7?arguments[7]:void 0;const U=(0,k.c)();(0,e.m)(j,(j=>{s[H]=j,s._internalCount++,i&&i.removePendingData(U),6===s._internalCount&&V&&V(B,s)}),((j,H)=>{i&&i.removePendingData(U),C&&C(j,H)}),i?i.offlineProvider:null,L),i&&i.addPendingData(U)},V.d.prototype.createCubeTextureBase=function(j,H,s,e){let k=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,V=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,L=arguments.length>6?arguments[6]:void 0,U=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,x=arguments.length>8&&void 0!==arguments[8]&&arguments[8],p=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,a=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,E=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,r=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,q=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,J=arguments.length>14&&void 0!==arguments[14]&&arguments[14],h=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const o=E||new i.e(this,7);o.isCube=!0,o.url=j,o.generateMipMaps=!e,o._lodGenerationScale=p,o._lodGenerationOffset=a,o._useSRGBBuffer=!!J&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!e),o!==E&&(o.label=j.substring(0,60)),this._doNotHandleContextLost||(o._extension=U,o._files=s,o._buffer=h);const R=j;this._transformTextureUrl&&!E&&(j=this._transformTextureUrl(j));const Y=j.split("?")[0],v=Y.lastIndexOf("."),c=U||(v>-1?Y.substring(v).toLowerCase():""),z=(0,C.b)(c),K=(i,C)=>{j===R?V&&i&&V(i.status+" "+i.statusText,C):(B.b.Warn(`Failed to load ${j}, falling back to the ${R}`),this.createCubeTextureBase(R,H,s,!!e,k,V,L,U,x,p,a,o,r,q,J,h))};if(z)z.then((i=>{const e=j=>{r&&r(o,j),i.loadCubeData(j,o,x,k,V)};h?e(h):s&&6===s.length?i.supportCascades?this._cascadeLoadFiles(H,(j=>e(j.map((j=>new Uint8Array(j))))),s,V):V?V("Textures type does not support cascades."):B.b.Warn("Texture loader does not support cascades."):this._loadFile(j,(j=>e(new Uint8Array(j))),void 0,void 0,!0,K)}));else{if(!s||0===s.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(H,o,((j,H)=>{q&&q(j,H)}),s,V)}return this._internalTexturesCache.push(o),o}},2014:(j,H,s)=>{s.d(H,{d:()=>E});var i=s(708),B=s(514),e=s(2016),k=s(2025);s(2073);const V=131072,C=131072;function L(j){return j.charCodeAt(0)+(j.charCodeAt(1)<<8)+(j.charCodeAt(2)<<16)+(j.charCodeAt(3)<<24)}const U=L("DXT1"),x=L("DXT3"),p=L("DXT5"),a=L("DX10");class E{static GetDDSInfo(j){const H=new Int32Array(j.buffer,j.byteOffset,31),s=new Int32Array(j.buffer,j.byteOffset,35);let i=1;H[2]&V&&(i=Math.max(1,H[7]));const B=H[21],e=B===a?s[32]:0;let k=0;switch(B){case 113:k=2;break;case 116:k=1;break;case a:if(10===e){k=2;break}if(2===e){k=1;break}}return{width:H[4],height:H[3],mipmapCount:i,isFourCC:4===(4&H[20]),isRGB:64===(64&H[20]),isLuminance:(H[20]&C)===C,isCube:512===(512&H[28]),isCompressed:B===U||B===x||B===p,dxgiFormat:e,textureType:k}}static _GetHalfFloatAsFloatRGBAArrayBuffer(j,H,s,i,B,e){const V=new Float32Array(i),C=new Uint16Array(B,s);let L=0;for(let U=0;U<H;U++)for(let H=0;H<j;H++){const s=4*(H+U*j);V[L]=(0,k.g)(C[s]),V[L+1]=(0,k.g)(C[s+1]),V[L+2]=(0,k.g)(C[s+2]),E.StoreLODInAlphaChannel?V[L+3]=e:V[L+3]=(0,k.g)(C[s+3]),L+=4}return V}static _GetHalfFloatRGBAArrayBuffer(j,H,s,i,B,e){if(E.StoreLODInAlphaChannel){const V=new Uint16Array(i),C=new Uint16Array(B,s);let L=0;for(let s=0;s<H;s++)for(let H=0;H<j;H++){const i=4*(H+s*j);V[L]=C[i],V[L+1]=C[i+1],V[L+2]=C[i+2],V[L+3]=(0,k.j)(e),L+=4}return V}return new Uint16Array(B,s,i)}static _GetFloatRGBAArrayBuffer(j,H,s,i,B,e){if(E.StoreLODInAlphaChannel){const k=new Float32Array(i),V=new Float32Array(B,s);let C=0;for(let s=0;s<H;s++)for(let H=0;H<j;H++){const i=4*(H+s*j);k[C]=V[i],k[C+1]=V[i+1],k[C+2]=V[i+2],k[C+3]=e,C+=4}return k}return new Float32Array(B,s,i)}static _GetFloatAsHalfFloatRGBAArrayBuffer(j,H,s,i,B,e){const V=new Uint16Array(i),C=new Float32Array(B,s);let L=0;for(let U=0;U<H;U++)for(let H=0;H<j;H++)V[L]=(0,k.j)(C[L]),V[L+1]=(0,k.j)(C[L+1]),V[L+2]=(0,k.j)(C[L+2]),E.StoreLODInAlphaChannel?V[L+3]=(0,k.j)(e):V[L+3]=(0,k.j)(C[L+3]),L+=4;return V}static _GetFloatAsUIntRGBAArrayBuffer(j,H,s,B,e,k){const V=new Uint8Array(B),C=new Float32Array(e,s);let L=0;for(let U=0;U<H;U++)for(let H=0;H<j;H++){const s=4*(H+U*j);V[L]=255*(0,i.e)(C[s]),V[L+1]=255*(0,i.e)(C[s+1]),V[L+2]=255*(0,i.e)(C[s+2]),E.StoreLODInAlphaChannel?V[L+3]=k:V[L+3]=255*(0,i.e)(C[s+3]),L+=4}return V}static _GetHalfFloatAsUIntRGBAArrayBuffer(j,H,s,B,e,V){const C=new Uint8Array(B),L=new Uint16Array(e,s);let U=0;for(let x=0;x<H;x++)for(let H=0;H<j;H++){const s=4*(H+x*j);C[U]=255*(0,i.e)((0,k.g)(L[s])),C[U+1]=255*(0,i.e)((0,k.g)(L[s+1])),C[U+2]=255*(0,i.e)((0,k.g)(L[s+2])),E.StoreLODInAlphaChannel?C[U+3]=V:C[U+3]=255*(0,i.e)((0,k.g)(L[s+3])),U+=4}return C}static _GetRGBAArrayBuffer(j,H,s,i,B,e,k,V,C){const L=new Uint8Array(i),U=new Uint8Array(B,s);let x=0;for(let p=0;p<H;p++)for(let H=0;H<j;H++){const s=4*(H+p*j);L[x]=U[s+e],L[x+1]=U[s+k],L[x+2]=U[s+V],L[x+3]=U[s+C],x+=4}return L}static _ExtractLongWordOrder(j){return 0===j||255===j||-16777216===j?0:1+E._ExtractLongWordOrder(j>>8)}static _GetRGBArrayBuffer(j,H,s,i,B,e,k,V){const C=new Uint8Array(i),L=new Uint8Array(B,s);let U=0;for(let x=0;x<H;x++)for(let H=0;H<j;H++){const s=3*(H+x*j);C[U]=L[s+e],C[U+1]=L[s+k],C[U+2]=L[s+V],U+=3}return C}static _GetLuminanceArrayBuffer(j,H,s,i,B){const e=new Uint8Array(i),k=new Uint8Array(B,s);let V=0;for(let C=0;C<H;C++)for(let H=0;H<j;H++){const s=H+C*j;e[V]=k[s],V++}return e}static UploadDDSLevels(j,H,s,i,k,C){let L=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,r=arguments.length>7?arguments[7]:void 0,q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],J=null;i.sphericalPolynomial&&(J=[]);const h=!!j.getCaps().s3tc;H.generateMipMaps=k;const o=new Int32Array(s.buffer,s.byteOffset,31);let R,Y,v,c,z,K,W,P=0,O=0,d=1;if(542327876!==o[0])return void B.b.Error("Invalid magic number in DDS header");if(!i.isFourCC&&!i.isRGB&&!i.isLuminance)return void B.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(i.isCompressed&&!h)return void B.b.Error("Compressed textures are not supported on this platform.");let F=o[22];c=o[1]+4;let m=!1;if(i.isFourCC)switch(R=o[21],R){case U:d=8,O=33777;break;case x:d=16,O=33778;break;case p:d=16,O=33779;break;case 113:m=!0,F=64;break;case 116:m=!0,F=128;break;case a:{c+=20;let j=!1;switch(i.dxgiFormat){case 10:m=!0,F=64,j=!0;break;case 2:m=!0,F=128,j=!0;break;case 88:i.isRGB=!0,i.isFourCC=!1,F=32,j=!0}if(j)break}default:return void B.b.Error(["Unsupported FourCC code:",(G=R,String.fromCharCode(255&G,G>>8&255,G>>16&255,G>>24&255))])}var G;const M=E._ExtractLongWordOrder(o[23]),b=E._ExtractLongWordOrder(o[24]),n=E._ExtractLongWordOrder(o[25]),t=E._ExtractLongWordOrder(o[26]);m&&(O=j._getRGBABufferInternalSizedFormat(i.textureType)),K=1,o[2]&V&&!1!==k&&(K=Math.max(1,o[7]));const u=r||0,S=j.getCaps();for(let B=u;B<C;B++){for(Y=o[4],v=o[3],W=0;W<K;++W){if(-1===L||L===W){const e=-1===L?W:0;if(!i.isCompressed&&i.isFourCC){H.format=5,P=Y*v*4;let i=null;if(j._badOS||j._badDesktopOS||!S.textureHalfFloat&&!S.textureFloat)128===F?(i=E._GetFloatAsUIntRGBAArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,e),J&&0==e&&J.push(E._GetFloatRGBAArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,e))):64===F&&(i=E._GetHalfFloatAsUIntRGBAArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,e),J&&0==e&&J.push(E._GetHalfFloatAsFloatRGBAArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,e))),H.type=0;else{const j=S.textureFloat&&(q&&S.textureFloatLinearFiltering||!q),B=S.textureHalfFloat&&(q&&S.textureHalfFloatLinearFiltering||!q),k=(128===F||64===F&&!B)&&j?1:(64===F||128===F&&!j)&&B?2:0;let V,C=null;if(128===F)switch(k){case 1:V=E._GetFloatRGBAArrayBuffer,C=null;break;case 2:V=E._GetFloatAsHalfFloatRGBAArrayBuffer,C=E._GetFloatRGBAArrayBuffer;break;case 0:V=E._GetFloatAsUIntRGBAArrayBuffer,C=E._GetFloatRGBAArrayBuffer}else switch(k){case 1:V=E._GetHalfFloatAsFloatRGBAArrayBuffer,C=null;break;case 2:V=E._GetHalfFloatRGBAArrayBuffer,C=E._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:V=E._GetHalfFloatAsUIntRGBAArrayBuffer,C=E._GetHalfFloatAsFloatRGBAArrayBuffer}H.type=k,i=V(Y,v,s.byteOffset+c,P,s.buffer,e),J&&0==e&&J.push(C?C(Y,v,s.byteOffset+c,P,s.buffer,e):i)}i&&j._uploadDataToTextureDirectly(H,i,B,e)}else if(i.isRGB)H.type=0,24===F?(H.format=4,P=Y*v*3,z=E._GetRGBArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,M,b,n),j._uploadDataToTextureDirectly(H,z,B,e)):(H.format=5,P=Y*v*4,z=E._GetRGBAArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer,M,b,n,t),j._uploadDataToTextureDirectly(H,z,B,e));else if(i.isLuminance){const i=j._getUnpackAlignement(),k=Y;P=Math.floor((Y+i-1)/i)*i*(v-1)+k,z=E._GetLuminanceArrayBuffer(Y,v,s.byteOffset+c,P,s.buffer),H.format=1,H.type=0,j._uploadDataToTextureDirectly(H,z,B,e)}else P=Math.max(4,Y)/4*Math.max(4,v)/4*d,z=new Uint8Array(s.buffer,s.byteOffset+c,P),H.type=0,j._uploadCompressedDataToTextureDirectly(H,O,Y,v,z,B,e)}c+=F?Y*v*(F/8):P,Y*=.5,v*=.5,Y=Math.max(1,Y),v=Math.max(1,v)}if(void 0!==r)break}J&&J.length>0?i.sphericalPolynomial=e.c.ConvertCubeMapToSphericalPolynomial({size:o[4],right:J[0],left:J[1],up:J[2],down:J[3],front:J[4],back:J[5],format:5,type:1,gammaSpace:!1}):i.sphericalPolynomial=void 0}}E.StoreLODInAlphaChannel=!1}}]);