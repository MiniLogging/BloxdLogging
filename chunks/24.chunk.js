"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[24],{12653:(y,S,I)=>{I.d(S,{c:()=>V});class V{constructor(y,S,I){this.bu=y,this.bv=S,this.distance=I,this.faceId=0,this.subMeshId=0}}},12665:(y,S,I)=>{I.d(S,{c:()=>B});var V=I(12331),i=I(12321),A=I(12325);class B{constructor(y,S,I){this.vectors=(0,V.e)(8,i.OS.Zero),this.center=i.OS.Zero(),this.centerWorld=i.OS.Zero(),this.extendSize=i.OS.Zero(),this.extendSizeWorld=i.OS.Zero(),this.directions=(0,V.e)(3,i.OS.Zero),this.vectorsWorld=(0,V.e)(8,i.OS.Zero),this.minimumWorld=i.OS.Zero(),this.maximumWorld=i.OS.Zero(),this.minimum=i.OS.Zero(),this.maximum=i.OS.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(y,S,I)}reConstruct(y,S,I){const V=y.x,A=y.y,B=y.z,d=S.x,F=S.y,J=S.z,u=this.vectors;this.minimum.od(V,A,B),this.maximum.od(d,F,J),u[0].od(V,A,B),u[1].od(d,F,J),u[2].od(d,A,B),u[3].od(V,F,B),u[4].od(V,A,J),u[5].od(d,F,B),u[6].od(V,F,J),u[7].od(d,A,J),S.addToRef(y,this.center).scaleInPlace(.5),S.subtractToRef(y,this.extendSize).scaleInPlace(.5),this._worldMatrix=I||i.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(y){const S=B._TmpVector3,I=this.maximum.subtractToRef(this.minimum,S[0]),V=I.length();I.normalizeFromLength(V);const i=V*y,A=I.scaleInPlace(.5*i),d=this.center.subtractToRef(A,S[1]),F=this.center.addToRef(A,S[2]);return this.reConstruct(d,F,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(y){const S=this.minimumWorld,I=this.maximumWorld,V=this.directions,A=this.vectorsWorld,B=this.vectors;if(y.isIdentity()){S.A(this.minimum),I.A(this.maximum);for(let y=0;y<8;++y)A[y].A(B[y]);this.extendSizeWorld.A(this.extendSize),this.centerWorld.A(this.center)}else{S.nd(Number.MAX_VALUE),I.nd(-Number.MAX_VALUE);for(let V=0;V<8;++V){const d=A[V];i.OS.TransformCoordinatesToRef(B[V],y,d),S.minimizeInPlace(d),I.maximizeInPlace(d)}I.subtractToRef(S,this.extendSizeWorld).scaleInPlace(.5),I.addToRef(S,this.centerWorld).scaleInPlace(.5)}i.OS.FromArrayToRef(y.m,0,V[0]),i.OS.FromArrayToRef(y.m,4,V[1]),i.OS.FromArrayToRef(y.m,8,V[2]),this._worldMatrix=y}isInFrustum(y){return B.IsInFrustum(this.vectorsWorld,y)}isCompletelyInFrustum(y){return B.IsCompletelyInFrustum(this.vectorsWorld,y)}intersectsPoint(y){const S=this.minimumWorld,I=this.maximumWorld,V=S.x,i=S.y,B=S.z,d=I.x,F=I.y,J=I.z,u=y.x,K=y.y,G=y.z,p=-A.c;return!(d-u<p||p>u-V)&&(!(F-K<p||p>K-i)&&!(J-G<p||p>G-B))}intersectsSphere(y){return B.IntersectsSphere(this.minimumWorld,this.maximumWorld,y.centerWorld,y.radiusWorld)}intersectsMinMax(y,S){const I=this.minimumWorld,V=this.maximumWorld,i=I.x,A=I.y,B=I.z,d=V.x,F=V.y,J=V.z,u=y.x,K=y.y,G=y.z,p=S.x,L=S.y,T=S.z;return!(d<u||i>p)&&(!(F<K||A>L)&&!(J<G||B>T))}dispose(){var y,S;null===(y=this._drawWrapperFront)||void 0===y||y.dispose(),null===(S=this._drawWrapperBack)||void 0===S||S.dispose()}static Intersects(y,S){return y.intersectsMinMax(S.minimumWorld,S.maximumWorld)}static IntersectsSphere(y,S,I,V){const A=B._TmpVector3[0];i.OS.ClampToRef(I,y,S,A);return i.OS.DistanceSquared(I,A)<=V*V}static IsCompletelyInFrustum(y,S){for(let I=0;I<6;++I){const V=S[I];for(let S=0;S<8;++S)if(V.dotCoordinate(y[S])<0)return!1}return!0}static IsInFrustum(y,S){for(let I=0;I<6;++I){let V=!0;const i=S[I];for(let S=0;S<8;++S)if(i.dotCoordinate(y[S])>=0){V=!1;break}if(V)return!1}return!0}}B._TmpVector3=(0,V.e)(3,i.OS.Zero)},12660:(y,S,I)=>{I.d(S,{e:()=>K});var V=I(12331),i=I(12321),A=I(12665),B=I(12667);const d={min:0,max:0},F={min:0,max:0},J=(y,S,I)=>{const V=i.OS.Dot(S.centerWorld,y),A=Math.abs(i.OS.Dot(S.directions[0],y))*S.extendSize.x+Math.abs(i.OS.Dot(S.directions[1],y))*S.extendSize.y+Math.abs(i.OS.Dot(S.directions[2],y))*S.extendSize.z;I.min=V-A,I.max=V+A},u=(y,S,I)=>(J(y,S,d),J(y,I,F),!(d.min>F.max||F.min>d.max));class K{constructor(y,S,I){this._isLocked=!1,this.boundingBox=new A.c(y,S,I),this.boundingSphere=new B.c(y,S,I)}reConstruct(y,S,I){this.boundingBox.reConstruct(y,S,I),this.boundingSphere.reConstruct(y,S,I)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(y){this._isLocked=y}update(y){this._isLocked||(this.boundingBox._update(y),this.boundingSphere._update(y))}centerOn(y,S){const I=K._TmpVector3[0].A(y).uK(S),V=K._TmpVector3[1].A(y).addInPlace(S);return this.boundingBox.reConstruct(I,V,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(I,V,this.boundingBox.getWorldMatrix()),this}encapsulate(y){const S=i.OS.Minimize(this.minimum,y),I=i.OS.Maximize(this.maximum,y);return this.reConstruct(S,I,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(y){const S=i.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(S);const I=i.TmpVectors.OS[0];return i.OS.TransformCoordinatesToRef(y.boundingBox.minimumWorld,S,I),this.encapsulate(I),i.OS.TransformCoordinatesToRef(y.boundingBox.maximumWorld,S,I),this.encapsulate(I),this}scale(y){return this.boundingBox.scale(y),this.boundingSphere.scale(y),this}isInFrustum(y){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===S||3===S)&&this.boundingSphere.isCenterInFrustum(y))return!0;if(!this.boundingSphere.isInFrustum(y))return!1;return!(1!==S&&3!==S)||this.boundingBox.isInFrustum(y)}get diagonalLength(){const y=this.boundingBox;return y.maximumWorld.subtractToRef(y.minimumWorld,K._TmpVector3[0]).length()}isCompletelyInFrustum(y){return this.boundingBox.isCompletelyInFrustum(y)}_checkCollision(y){return y._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(y){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(y)&&!!this.boundingBox.intersectsPoint(y))}intersects(y,S){if(!B.c.Intersects(this.boundingSphere,y.boundingSphere))return!1;if(!A.c.Intersects(this.boundingBox,y.boundingBox))return!1;if(!S)return!0;const I=this.boundingBox,V=y.boundingBox;return!!u(I.directions[0],I,V)&&(!!u(I.directions[1],I,V)&&(!!u(I.directions[2],I,V)&&(!!u(V.directions[0],I,V)&&(!!u(V.directions[1],I,V)&&(!!u(V.directions[2],I,V)&&(!!u(i.OS.Cross(I.directions[0],V.directions[0]),I,V)&&(!!u(i.OS.Cross(I.directions[0],V.directions[1]),I,V)&&(!!u(i.OS.Cross(I.directions[0],V.directions[2]),I,V)&&(!!u(i.OS.Cross(I.directions[1],V.directions[0]),I,V)&&(!!u(i.OS.Cross(I.directions[1],V.directions[1]),I,V)&&(!!u(i.OS.Cross(I.directions[1],V.directions[2]),I,V)&&(!!u(i.OS.Cross(I.directions[2],V.directions[0]),I,V)&&(!!u(i.OS.Cross(I.directions[2],V.directions[1]),I,V)&&!!u(i.OS.Cross(I.directions[2],V.directions[2]),I,V))))))))))))))}}K._TmpVector3=(0,V.e)(2,i.OS.Zero)},12667:(y,S,I)=>{I.d(S,{c:()=>A});var V=I(12331),i=I(12321);class A{constructor(y,S,I){this.center=i.OS.Zero(),this.centerWorld=i.OS.Zero(),this.minimum=i.OS.Zero(),this.maximum=i.OS.Zero(),this.reConstruct(y,S,I)}reConstruct(y,S,I){this.minimum.A(y),this.maximum.A(S);const V=i.OS.Distance(y,S);S.addToRef(y,this.center).scaleInPlace(.5),this.radius=.5*V,this._update(I||i.Matrix.IdentityReadOnly)}scale(y){const S=this.radius*y,I=A._TmpVector3,V=I[0].nd(S),i=this.center.subtractToRef(V,I[1]),B=this.center.addToRef(V,I[2]);return this.reConstruct(i,B,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(y){if(y.isIdentity())this.centerWorld.A(this.center),this.radiusWorld=this.radius;else{i.OS.TransformCoordinatesToRef(this.center,y,this.centerWorld);const S=A._TmpVector3[0];i.OS.TransformNormalFromFloatsToRef(1,1,1,y,S),this.radiusWorld=Math.max(Math.abs(S.x),Math.abs(S.y),Math.abs(S.z))*this.radius}}isInFrustum(y){const S=this.centerWorld,I=this.radiusWorld;for(let V=0;V<6;V++)if(y[V].dotCoordinate(S)<=-I)return!1;return!0}isCenterInFrustum(y){const S=this.centerWorld;for(let I=0;I<6;I++)if(y[I].dotCoordinate(S)<0)return!1;return!0}intersectsPoint(y){const S=i.OS.DistanceSquared(this.centerWorld,y);return!(this.radiusWorld*this.radiusWorld<S)}static Intersects(y,S){const I=i.OS.DistanceSquared(y.centerWorld,S.centerWorld),V=y.radiusWorld+S.radiusWorld;return!(V*V<I)}static CreateFromCenterAndRadius(y,S,I){this._TmpVector3[0].A(y),this._TmpVector3[1].od(0,0,S),this._TmpVector3[2].A(y),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].uK(this._TmpVector3[1]);const V=new A(this._TmpVector3[0],this._TmpVector3[2]);return V._worldMatrix=I||i.Matrix.Identity(),V}}A._TmpVector3=(0,V.e)(3,i.OS.Zero)},12683:(y,S,I)=>{function V(y){-1===y.indexOf("vClipPlane")&&y.push("vClipPlane"),-1===y.indexOf("vClipPlane2")&&y.push("vClipPlane2"),-1===y.indexOf("vClipPlane3")&&y.push("vClipPlane3"),-1===y.indexOf("vClipPlane4")&&y.push("vClipPlane4"),-1===y.indexOf("vClipPlane5")&&y.push("vClipPlane5"),-1===y.indexOf("vClipPlane6")&&y.push("vClipPlane6")}function i(y,S,I){const V=!!(y.clipPlane??S.clipPlane),i=!!(y.clipPlane2??S.clipPlane2),A=!!(y.clipPlane3??S.clipPlane3),B=!!(y.clipPlane4??S.clipPlane4),d=!!(y.clipPlane5??S.clipPlane5),F=!!(y.clipPlane6??S.clipPlane6);V&&I.push("#define CLIPPLANE"),i&&I.push("#define CLIPPLANE2"),A&&I.push("#define CLIPPLANE3"),B&&I.push("#define CLIPPLANE4"),d&&I.push("#define CLIPPLANE5"),F&&I.push("#define CLIPPLANE6")}function A(y,S,I){let V=!1;const i=!!(y.clipPlane??S.clipPlane),A=!!(y.clipPlane2??S.clipPlane2),B=!!(y.clipPlane3??S.clipPlane3),d=!!(y.clipPlane4??S.clipPlane4),F=!!(y.clipPlane5??S.clipPlane5),J=!!(y.clipPlane6??S.clipPlane6);return I.CLIPPLANE!==i&&(I.CLIPPLANE=i,V=!0),I.CLIPPLANE2!==A&&(I.CLIPPLANE2=A,V=!0),I.CLIPPLANE3!==B&&(I.CLIPPLANE3=B,V=!0),I.CLIPPLANE4!==d&&(I.CLIPPLANE4=d,V=!0),I.CLIPPLANE5!==F&&(I.CLIPPLANE5=F,V=!0),I.CLIPPLANE6!==J&&(I.CLIPPLANE6=J,V=!0),V}function B(y,S,I){let V=S.clipPlane??I.clipPlane;d(y,"vClipPlane",V),V=S.clipPlane2??I.clipPlane2,d(y,"vClipPlane2",V),V=S.clipPlane3??I.clipPlane3,d(y,"vClipPlane3",V),V=S.clipPlane4??I.clipPlane4,d(y,"vClipPlane4",V),V=S.clipPlane5??I.clipPlane5,d(y,"vClipPlane5",V),V=S.clipPlane6??I.clipPlane6,d(y,"vClipPlane6",V)}function d(y,S,I){I&&y.setFloat4(S,I.normal.x,I.normal.y,I.normal.z,I.d)}I.d(S,{e:()=>V,f:()=>B,g:()=>A,h:()=>i})},12625:(y,S,I)=>{I.d(S,{e:()=>V});class V{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(y,S){this._defines[y]||(y<this._currentRank&&(this._currentRank=y),y>this._maxRank&&(this._maxRank=y),this._defines[y]=new Array),this._defines[y].push(S)}addCPUSkinningFallback(y,S){this._mesh=S,y<this._currentRank&&(this._currentRank=y),y>this._maxRank&&(this._maxRank=y)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(y,S){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,y=y.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),S._bonesComputationForcedToCPU=!0;const I=this._mesh.Ey();for(let y=0;y<I.meshes.length;y++){const V=I.meshes[y];if(V.material){if(V.computeBonesUsingShaders&&0!==V.numBoneInfluencers)if(V.material.getEffect()===S)V.computeBonesUsingShaders=!1;else if(V.wi)for(const y of V.wi){if(y.effect===S){V.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&V.computeBonesUsingShaders&&V.numBoneInfluencers>0&&(V.computeBonesUsingShaders=!1)}}else{const S=this._defines[this._currentRank];if(S)for(let I=0;I<S.length;I++)y=y.replace("#define "+S[I],"");this._currentRank++}return y}}},12637:(y,S,I)=>{I.d(S,{d:()=>l});var V=I(12306),i=I(12309),A=I(12128),B=I(12133),d=I(12185),F=I(12644),J=I(12574),u=I(12151),K=I(12367),G=I(12440),p=I(12352);class L{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(y){this._func=y}get funcRef(){return this._funcRef}set funcRef(y){this._funcRef=y}get funcMask(){return this._funcMask}set funcMask(y){this._funcMask=y}get opStencilFail(){return this._opStencilFail}set opStencilFail(y){this._opStencilFail=y}get opDepthFail(){return this._opDepthFail}set opDepthFail(y){this._opDepthFail=y}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(y){this._opStencilDepthPass=y}get mask(){return this._mask}set mask(y){this._mask=y}get enabled(){return this._enabled}set enabled(y){this._enabled=y}getClassName(){return"MaterialStencilState"}copyTo(y){p.d.Clone((()=>y),this)}serialize(){return p.d.Serialize(this)}parse(y,S,I){p.d.Parse((()=>this),y,S,I)}}(0,V.c)([(0,i.E)()],L.prototype,"func",null),(0,V.c)([(0,i.E)()],L.prototype,"funcRef",null),(0,V.c)([(0,i.E)()],L.prototype,"funcMask",null),(0,V.c)([(0,i.E)()],L.prototype,"opStencilFail",null),(0,V.c)([(0,i.E)()],L.prototype,"opDepthFail",null),(0,V.c)([(0,i.E)()],L.prototype,"opStencilDepthPass",null),(0,V.c)([(0,i.E)()],L.prototype,"mask",null),(0,V.c)([(0,i.E)()],L.prototype,"enabled",null);var T=I(12675);class l{get _supportGlowLayer(){return!1}set _glowModeEnabled(y){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(y){if(this._alpha===y)return;const S=this._alpha;this._alpha=y,1!==S&&1!==y||this.Su(l.MiscDirtyFlag+l.PrePassDirtyFlag)}get alpha(){return this._alpha}set Dd(y){this._backFaceCulling!==y&&(this._backFaceCulling=y,this.Su(l.TextureDirtyFlag))}get Dd(){return this._backFaceCulling}set cullBackFaces(y){this._cullBackFaces!==y&&(this._cullBackFaces=y,this.Su(l.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(y){this._blockDirtyMechanism!==y&&(this._blockDirtyMechanism=y,y||this.ZK())}atomicMaterialsUpdate(y){this.blockDirtyMechanism=!0;try{y(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(y){this._onDisposeObserver&&this.zi.remove(this._onDisposeObserver),this._onDisposeObserver=this.zi.add(y)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new B.b),this._onBindObservable}set onBind(y){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(y)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new B.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new B.b),this._onEffectCreatedObservable}set alphaMode(y){this._alphaMode!==y&&(this._alphaMode=y,this.Su(l.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(y){this._needDepthPrePass!==y&&(this._needDepthPrePass=y,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(y){this._fogEnabled!==y&&(this._fogEnabled=y,this.Su(l.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case l.WireFrameFillMode:case l.LineListDrawMode:case l.LineLoopDrawMode:case l.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(y){this.fillMode=y?l.WireFrameFillMode:l.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case l.PointFillMode:case l.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(y){this.fillMode=y?l.PointFillMode:l.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(y){this._fillMode!==y&&(this._fillMode=y,this.Su(l.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(y){const S=this.Ey().getEngine().getCaps().fragmentDepthSupported;y&&!S&&u.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=y&&S,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(y){this._drawWrapper=y}constructor(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.zi=new B.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.gi=new L,this._useUBO=!1,this._fillMode=l.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=y;const i=S||d.e.LastCreatedScene;i&&(this._scene=i,this._dirtyCallbacks={},this._forceGLSL=V,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=y||A.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new G.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new J.e(this._scene.getEngine(),void 0,void 0,y),this._useUBO=this.Ey().getEngine().supportsUniformBuffers,this._createUniformBuffer(),I||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),l.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var y;const S=this.Ey().getEngine();null===(y=this._uniformBuffer)||void 0===y||y.dispose(),S.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new J.e(S,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new J.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(y){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.ZK(),this.checkReadyOnlyOnce=!0}unfreeze(){this.ZK(),this.checkReadyOnlyOnce=!1}isReady(y,S){return!0}isReadyForSubMesh(y,S,I){const V=S.materialDefines;return!!V&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=V,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}Ey(){return this._scene}_getEffectiveOrientation(y){return null!==this.sideOrientation?this.sideOrientation:y.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(y){this._transparencyMode!==y&&(this._transparencyMode=y,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===l.MATERIAL_ALPHABLEND||this._transparencyMode===l.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===l.MATERIAL_ALPHATEST||this._transparencyMode===l.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===l.MATERIAL_OPAQUE||this._transparencyMode===l.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(y){return this._hasTransparencyMode?this._transparencyModeIsBlend:y.visibility<1||!this._disableAlphaBlending&&(y.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(y){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(y)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}ZK(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const S=this.Ey().meshes;for(const I of S)if(I.wi)for(const S of I.wi)if(S.Wy()===this)for(const I of S._drawWrappers)I&&this._materialContext===I.materialContext&&(I._wasPreviouslyReady=!1,I._wasPreviouslyUsingInstances=null,I._forceRebindOnNextCall=y);y&&this.Su(l.AllDirtyFlag)}_preBind(y){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const I=this._scene.getEngine(),V=(null==S?this.sideOrientation:S)===l.ClockWiseSideOrientation;return I.enableEffect(y||this._getDrawWrapper()),I.setState(this.Dd,this.zOffset,!1,V,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.gi,this.zOffsetUnits),V}bind(y,S){}buildUniformLayout(){const y=this._uniformBuffer;this._eventInfo.ubo=y,this._callbackPluginEventGeneric(8,this._eventInfo),y.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(y,S,I){const V=I._drawWrapper;this._eventInfo.subMesh=I,this._callbackPluginEventBindForSubMesh(this._eventInfo),V._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(y){}bindView(y){this._useUBO?this._needToBindSceneUbo=!0:y.setMatrix("view",this.Ey().getViewMatrix())}bindViewProjection(y){this._useUBO?this._needToBindSceneUbo=!0:(y.setMatrix("viewProjection",this.Ey().getTransformMatrix()),y.setMatrix("projection",this.Ey().getProjectionMatrix()))}bindEyePosition(y,S){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(y,S)}_afterBind(y){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&S&&(this._needToBindSceneUbo=!1,(0,T.p)(S,this.Ey().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=y?y.visibility:1,this._onBindObservable&&y&&this._onBindObservable.notifyObservers(y),this.disableDepthWrite){const y=this._scene.getEngine();this._cachedDepthWriteState=y.getDepthWrite(),y.setDepthWrite(!1)}if(this.disableColorWrite){const y=this._scene.getEngine();this._cachedColorWriteState=y.getColorWrite(),y.setColorWrite(!1)}if(0!==this.depthFunction){const y=this._scene.getEngine();this._cachedDepthFunctionState=y.getDepthFunction()||0,y.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(y){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=y,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(y){return null}_clonePlugins(y,S){const I={};if(this._serializePlugins(I),l._ParsePlugins(I,y,this._scene,S),this.pluginManager)for(const V of this.pluginManager._plugins){const S=y.pluginManager.getPlugin(V.name);S&&V.copyTo(S)}}getBindedMeshes(){if(this.meshMap){const y=[];for(const S in this.meshMap){const I=this.meshMap[S];I&&y.push(I)}return y}return this._scene.meshes.filter((y=>y.material===this))}forceCompilation(y,S,I,V){const i={clipPlane:!1,useInstances:!1,...I},A=this.Ey(),B=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const d=()=>{if(!this._scene||!this._scene.getEngine())return;const I=A.clipPlane;if(i.clipPlane&&(A.clipPlane=new K.e(0,0,0,1)),this._storeEffectOnSubMeshes){let I=!0,A=null;if(y.wi){const S=new F.e(0,0,0,0,0,y,void 0,!1,!1);S.materialDefines&&(S.materialDefines._renderId=-1),this.isReadyForSubMesh(y,S,i.useInstances)||(S.effect&&S.effect.getCompilationError()&&S.effect.allFallbacksProcessed()?A=S.effect.getCompilationError():(I=!1,setTimeout(d,16)))}I&&(this.allowShaderHotSwapping=B,A&&V&&V(A),S&&S(this))}else this.isReady()?(this.allowShaderHotSwapping=B,S&&S(this)):setTimeout(d,16);i.clipPlane&&(A.clipPlane=I)};d()}async forceCompilationAsync(y,S){return await new Promise(((I,V)=>{this.forceCompilation(y,(()=>{I()}),S,(y=>{V(y)}))}))}Su(y){this.Ey().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(l._DirtyCallbackArray.length=0,y&l.ImageProcessingDirtyFlag&&l._DirtyCallbackArray.push(l._ImageProcessingDirtyCallBack),y&l.TextureDirtyFlag&&l._DirtyCallbackArray.push(l._TextureDirtyCallBack),y&l.LightDirtyFlag&&l._DirtyCallbackArray.push(l._LightsDirtyCallBack),y&l.FresnelDirtyFlag&&l._DirtyCallbackArray.push(l._FresnelDirtyCallBack),y&l.AttributesDirtyFlag&&l._DirtyCallbackArray.push(l._AttributeDirtyCallBack),y&l.MiscDirtyFlag&&l._DirtyCallbackArray.push(l._MiscDirtyCallBack),y&l.PrePassDirtyFlag&&l._DirtyCallbackArray.push(l._PrePassDirtyCallBack),l._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(l._RunDirtyCallBacks),this.Ey().resetCachedMaterial())}resetDrawCache(){const y=this.Ey().meshes;for(const S of y)if(S.wi)for(const y of S.wi)y.Wy()===this&&y.resetDrawCache()}_markAllSubMeshesAsDirty(y){const S=this.Ey();if(S.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const I=S.meshes;for(const V of I)if(V.wi)for(const I of V.wi){if((I.Wy()||(S._hasDefaultMaterial?S.defaultMaterial:null))===this)for(const S of I._drawWrappers)S&&S.defines&&S.defines.markAllAsDirty&&this._materialContext===S.materialContext&&y(S.defines)}}_markScenePrePassDirty(){if(this.Ey().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const y=this.Ey().enablePrePassRenderer();y&&y.Su()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(l._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(l._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(l._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(l._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(l._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(l._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(l._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(l._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(l._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(l._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const y=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.zi.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(y)}))}}setPrePassRenderer(y){return!1}dispose(y,S,I){const V=this.Ey();if(V.stopAnimation(this),V.freeProcessedMaterials(),V.removeMaterial(this),this._eventInfo.forceDisposeTextures=S,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const y=this._parentContainer.materials.indexOf(this);y>-1&&this._parentContainer.materials.splice(y,1),this._parentContainer=null}if(!0!==I)if(this.meshMap)for(const i in this.meshMap){const y=this.meshMap[i];this._disposeMeshResources(y)}else{const y=V.meshes;for(const S of y)this._disposeMeshResources(S)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.zi.notifyObservers(this),this.zi.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(y){if(!y)return;const S=y.Od,I=y._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(y.wi&&I)for(const i of y.wi){const y=i._drawWrappers;for(let A=0;A<y.length;A++){var V;const B=null===(V=y[A])||void 0===V?void 0:V.effect;if(!B)continue;I[A]===this&&(null===S||void 0===S||S._releaseVertexArrayObject(B),i._removeDrawWrapper(A,!0,!0))}}}else null===S||void 0===S||S._releaseVertexArrayObject(this._drawWrapper.effect);y.material!==this||y.sourceMesh||(y.material=null)}serialize(){const y=p.d.Serialize(this);return y.gi=this.gi.serialize(),y.uniqueId=this.uniqueId,this._serializePlugins(y),y}_serializePlugins(y){if(y.plugins={},this.pluginManager)for(const S of this.pluginManager._plugins)S.doNotSerialize||(y.plugins[S.getClassName()]=S.serialize())}static Parse(y,S,I){if(y.customType){if("BABYLON.PBRMaterial"===y.customType&&y.overloadedAlbedo&&(y.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return u.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else y.customType="BABYLON.StandardMaterial";const V=A.Tools.Instantiate(y.customType).Parse(y,S,I);return V._loadedUniqueId=y.uniqueId,V}static _ParsePlugins(y,S,I,V){if(y.plugins)for(const d in y.plugins){var i,B;const F=y.plugins[d];let J=null===(i=S.pluginManager)||void 0===i?void 0:i.getPlugin(F.name);if(!J){const y=A.Tools.Instantiate("BABYLON."+d);y&&(J=new y(S))}null===(B=J)||void 0===B||B.parse(F,I,V)}}}l.TriangleFillMode=0,l.WireFrameFillMode=1,l.PointFillMode=2,l.PointListDrawMode=3,l.LineListDrawMode=4,l.LineLoopDrawMode=5,l.LineStripDrawMode=6,l.TriangleStripDrawMode=7,l.TriangleFanDrawMode=8,l.ClockWiseSideOrientation=0,l.CounterClockWiseSideOrientation=1,l.ImageProcessingDirtyFlag=64,l.TextureDirtyFlag=1,l.LightDirtyFlag=2,l.FresnelDirtyFlag=4,l.AttributesDirtyFlag=8,l.MiscDirtyFlag=16,l.PrePassDirtyFlag=32,l.AllDirtyFlag=127,l.MATERIAL_OPAQUE=0,l.MATERIAL_ALPHATEST=1,l.MATERIAL_ALPHABLEND=2,l.MATERIAL_ALPHATESTANDBLEND=3,l.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,l.MATERIAL_NORMALBLENDMETHOD_RNM=1,l.OnEventObservable=new B.b,l._AllDirtyCallBack=y=>y.markAllAsDirty(),l._ImageProcessingDirtyCallBack=y=>y.markAsImageProcessingDirty(),l._TextureDirtyCallBack=y=>y.markAsTexturesDirty(),l._FresnelDirtyCallBack=y=>y.markAsFresnelDirty(),l._MiscDirtyCallBack=y=>y.markAsMiscDirty(),l._PrePassDirtyCallBack=y=>y.markAsPrePassDirty(),l._LightsDirtyCallBack=y=>y.markAsLightDirty(),l._AttributeDirtyCallBack=y=>y.markAsAttributesDirty(),l._FresnelAndMiscDirtyCallBack=y=>{l._FresnelDirtyCallBack(y),l._MiscDirtyCallBack(y)},l._TextureAndMiscDirtyCallBack=y=>{l._TextureDirtyCallBack(y),l._MiscDirtyCallBack(y)},l._DirtyCallbackArray=[],l._RunDirtyCallBacks=y=>{for(const S of l._DirtyCallbackArray)S(y)},(0,V.c)([(0,i.E)()],l.prototype,"id",void 0),(0,V.c)([(0,i.E)()],l.prototype,"uniqueId",void 0),(0,V.c)([(0,i.E)()],l.prototype,"name",void 0),(0,V.c)([(0,i.E)()],l.prototype,"metadata",void 0),(0,V.c)([(0,i.E)()],l.prototype,"checkReadyOnEveryCall",void 0),(0,V.c)([(0,i.E)()],l.prototype,"checkReadyOnlyOnce",void 0),(0,V.c)([(0,i.E)()],l.prototype,"state",void 0),(0,V.c)([(0,i.E)("alpha")],l.prototype,"_alpha",void 0),(0,V.c)([(0,i.E)("Dd")],l.prototype,"_backFaceCulling",void 0),(0,V.c)([(0,i.E)("cullBackFaces")],l.prototype,"_cullBackFaces",void 0),(0,V.c)([(0,i.E)()],l.prototype,"sideOrientation",void 0),(0,V.c)([(0,i.E)("alphaMode")],l.prototype,"_alphaMode",void 0),(0,V.c)([(0,i.E)()],l.prototype,"_needDepthPrePass",void 0),(0,V.c)([(0,i.E)()],l.prototype,"disableDepthWrite",void 0),(0,V.c)([(0,i.E)()],l.prototype,"disableColorWrite",void 0),(0,V.c)([(0,i.E)()],l.prototype,"forceDepthWrite",void 0),(0,V.c)([(0,i.E)()],l.prototype,"depthFunction",void 0),(0,V.c)([(0,i.E)()],l.prototype,"separateCullingPass",void 0),(0,V.c)([(0,i.E)("fogEnabled")],l.prototype,"_fogEnabled",void 0),(0,V.c)([(0,i.E)()],l.prototype,"pointSize",void 0),(0,V.c)([(0,i.E)()],l.prototype,"zOffset",void 0),(0,V.c)([(0,i.E)()],l.prototype,"zOffsetUnits",void 0),(0,V.c)([(0,i.E)()],l.prototype,"pointsCloud",null),(0,V.c)([(0,i.E)()],l.prototype,"fillMode",null),(0,V.c)([(0,i.E)()],l.prototype,"useLogarithmicDepth",null),(0,V.c)([(0,i.E)()],l.prototype,"transparencyMode",null)},12675:(y,S,I)=>{I.d(S,{C:()=>o,F:()=>p,G:()=>G,H:()=>v,I:()=>n,J:()=>r,L:()=>j,M:()=>z,Q:()=>P,R:()=>q,U:()=>g,X:()=>R,_:()=>L,e:()=>f,f:()=>K,g:()=>C,k:()=>u,l:()=>T,p:()=>l,r:()=>s,u:()=>E,y:()=>O,z:()=>D});var V=I(12151),i=I(12362),A=I(12185),B=I(12617),d=I(12683);const F=i.DS.Black(),J={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function u(y,S,I){if(!y||y.LOGARITHMICDEPTH||y.indexOf&&y.indexOf("LOGARITHMICDEPTH")>=0){const y=I.activeCamera;1===y.mode&&V.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),S.setFloat("logarithmicDepthConstant",2/(Math.log(y.maxZ+1)/Math.LN2))}}function K(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];I&&y.fogEnabled&&(!S||S.applyFog)&&0!==y.fogMode&&(I.setFloat4("vFogInfos",y.fogMode,y.fogStart,y.fogEnd,y.fogDensity),V?(y.fogColor.toLinearSpaceToRef(F,y.getEngine().useExactSrgbConversions),I.setColor3("vFogColor",F)):I.setColor3("vFogColor",y.fogColor))}function G(y,S,I,V,i,A,B,d,F,u){const K=y.numMaxInfluencers||y.numInfluencers;return K<=0?0:(S.push("#define MORPHTARGETS"),y.hasPositions&&S.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),y.hasNormals&&S.push("#define MORPHTARGETTEXTURE_HASNORMALS"),y.hasTangents&&S.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),y.hasUVs&&S.push("#define MORPHTARGETTEXTURE_HASUVS"),y.hasUV2s&&S.push("#define MORPHTARGETTEXTURE_HASUV2S"),y.hasColors&&S.push("#define MORPHTARGETTEXTURE_HASCOLORS"),y.supportsPositions&&i&&S.push("#define MORPHTARGETS_POSITION"),y.supportsNormals&&A&&S.push("#define MORPHTARGETS_NORMAL"),y.supportsTangents&&B&&S.push("#define MORPHTARGETS_TANGENT"),y.supportsUVs&&d&&S.push("#define MORPHTARGETS_UV"),y.supportsUV2s&&F&&S.push("#define MORPHTARGETS_UV2"),y.supportsColors&&u&&S.push("#define MORPHTARGETS_COLOR"),S.push("#define NUM_MORPH_INFLUENCERS "+K),y.isUsingTextureForTargets&&S.push("#define MORPHTARGETS_TEXTURE"),J.NUM_MORPH_INFLUENCERS=K,J.NORMAL=A,J.TANGENT=B,J.UV=d,J.UV2=F,J.COLOR=u,p(I,V,J,i),K)}function p(y,S,I){let i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const B=I.NUM_MORPH_INFLUENCERS;if(B>0&&A.e.LastCreatedEngine){const d=A.e.LastCreatedEngine.getCaps().maxVertexAttribs,F=S.morphTargetManager;if(null!==F&&void 0!==F&&F.isUsingTextureForTargets)return;const J=F&&F.supportsPositions&&i,u=F&&F.supportsNormals&&I.NORMAL,K=F&&F.supportsTangents&&I.TANGENT,G=F&&F.supportsUVs&&I.UV1,p=F&&F.supportsUV2s&&I.UV2,L=F&&F.supportsColors&&I.VERTEXCOLOR;for(let I=0;I<B;I++)J&&y.push("position"+I),u&&y.push("normal"+I),K&&y.push("tangent"+I),G&&y.push("uv_"+I),p&&y.push("uv2_"+I),L&&y.push("color"+I),y.length>d&&V.b.Error("Cannot add more vertex attributes for mesh "+S.name)}}function L(y){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];y.push("world0"),y.push("world1"),y.push("world2"),y.push("world3"),S&&(y.push("previousWorld0"),y.push("previousWorld1"),y.push("previousWorld2"),y.push("previousWorld3"))}function T(y,S){const I=y.morphTargetManager;y&&I&&S.setFloatArray("morphTargetInfluences",I.influences)}function l(y,S){S.bindToEffect(y,"Scene")}function j(y,S,I){S._needUVs=!0,S[I]=!0,y.optimizeUVAllocation&&y.getTextureMatrix().isIdentityAs3x2()?(S[I+"DIRECTUV"]=y.coordinatesIndex+1,S["MAINUV"+(y.coordinatesIndex+1)]=!0):S[I+"DIRECTUV"]=0}function s(y,S,I){const V=y.getTextureMatrix();S.jd(I+"Matrix",V)}function O(y,S,I){I.BAKED_VERTEX_ANIMATION_TEXTURE&&I.INSTANCES&&y.push("bakedVertexAnimationSettingsInstanced")}function f(y,S,I){var V;if(S&&y&&(y.computeBonesUsingShaders&&S._bonesComputationForcedToCPU&&(y.computeBonesUsingShaders=!1),y.useBones&&y.computeBonesUsingShaders&&y.skeleton)){const i=y.skeleton;if(i.isUsingTextureForMatrices&&S.getUniformIndex("boneTextureWidth")>-1){const I=i.getTransformMatrixTexture(y);S.setTexture("boneSampler",I),S.setFloat("boneTextureWidth",4*(i.bones.length+1))}else{const A=i.getTransformMatrices(y);A&&(S.setMatrices("mBones",A),I&&y.Ey().prePassRenderer&&y.Ey().prePassRenderer.getIndex(2)&&(I.previousBones[y.uniqueId]||(I.previousBones[y.uniqueId]=A.slice()),S.setMatrices("mPreviousBones",I.previousBones[y.uniqueId]),V=A,I.previousBones[y.uniqueId].set(V)))}}}function my(y,S,I,V,i){let A=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];y._bindLight(S,I,V,i,A)}function C(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const A=Math.min(S.lightSources.length,i);for(let B=0;B<A;B++){my(S.lightSources[B],B,y,I,"boolean"===typeof V?V:V.SPECULARTERM,S.receiveShadows)}}function D(y,S,I,V){I.NUM_BONE_INFLUENCERS>0&&(V.addCPUSkinningFallback(0,S),y.push("matricesIndices"),y.push("matricesWeights"),I.NUM_BONE_INFLUENCERS>4&&(y.push("matricesIndicesExtra"),y.push("matricesWeightsExtra")))}function o(y,S){(S.INSTANCES||S.THIN_INSTANCES)&&L(y,!!S.PREPASS_VELOCITY),S.INSTANCESCOLOR&&y.push("instanceColor")}function E(y,S){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=0;for(let A=0;A<I&&y["LIGHT"+A];A++)A>0&&(i=V+A,S.addFallback(i,"LIGHT"+A)),y.SHADOWS||(y["SHADOW"+A]&&S.addFallback(V,"SHADOW"+A),y["SHADOWPCF"+A]&&S.addFallback(V,"SHADOWPCF"+A),y["SHADOWPCSS"+A]&&S.addFallback(V,"SHADOWPCSS"+A),y["SHADOWPOISSON"+A]&&S.addFallback(V,"SHADOWPOISSON"+A),y["SHADOWESM"+A]&&S.addFallback(V,"SHADOWESM"+A),y["SHADOWCLOSEESM"+A]&&S.addFallback(V,"SHADOWCLOSEESM"+A));return i++}function z(y,S,I,V,i,A,B){let d=arguments.length>7&&void 0!==arguments[7]&&arguments[7];B._areMiscDirty&&(B.LOGARITHMICDEPTH=I,B.POINTSIZE=V,B.FOG=i&&function(y,S){return S.fogEnabled&&y.applyFog&&0!==S.fogMode}(y,S),B.NONUNIFORMSCALING=y.nonUniformScaling,B.ALPHATEST=A,B.DECAL_AFTER_DETAIL=d)}function r(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!I._areLightsDirty)return I._needNormals;let B=0;const d={needNormals:I._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(y.lightsEnabled&&!A)for(const J of S.lightSources)if(h(y,S,J,B,I,V,d),B++,B===i)break;I.SPECULARTERM=d.specularEnabled,I.SHADOWS=d.shadowEnabled;for(let J=B;J<i;J++)void 0!==I["LIGHT"+J]&&(I["LIGHT"+J]=!1,I["HEMILIGHT"+J]=!1,I["POINTLIGHT"+J]=!1,I["DIRLIGHT"+J]=!1,I["SPOTLIGHT"+J]=!1,I["AREALIGHT"+J]=!1,I["SHADOW"+J]=!1,I["SHADOWCSM"+J]=!1,I["SHADOWCSMDEBUG"+J]=!1,I["SHADOWCSMNUM_CASCADES"+J]=!1,I["SHADOWCSMUSESHADOWMAXZ"+J]=!1,I["SHADOWCSMNOBLEND"+J]=!1,I["SHADOWCSM_RIGHTHANDED"+J]=!1,I["SHADOWPCF"+J]=!1,I["SHADOWPCSS"+J]=!1,I["SHADOWPOISSON"+J]=!1,I["SHADOWESM"+J]=!1,I["SHADOWCLOSEESM"+J]=!1,I["SHADOWCUBE"+J]=!1,I["SHADOWLOWQUALITY"+J]=!1,I["SHADOWMEDIUMQUALITY"+J]=!1);const F=y.getEngine().getCaps();return void 0===I.SHADOWFLOAT&&(d.needRebuild=!0),I.SHADOWFLOAT=d.shadowEnabled&&(F.textureFloatRender&&F.textureFloatLinearFiltering||F.textureHalfFloatRender&&F.textureHalfFloatLinearFiltering),I.LIGHTMAPEXCLUDED=d.lightmapMode,d.needRebuild&&I.rebuild(),d.needNormals}function h(y,S,I,V,i,A,d){switch(d.needNormals=!0,void 0===i["LIGHT"+V]&&(d.needRebuild=!0),i["LIGHT"+V]=!0,i["SPOTLIGHT"+V]=!1,i["HEMILIGHT"+V]=!1,i["POINTLIGHT"+V]=!1,i["DIRLIGHT"+V]=!1,i["AREALIGHT"+V]=!1,I.prepareLightSpecificDefines(i,V),i["LIGHT_FALLOFF_PHYSICAL"+V]=!1,i["LIGHT_FALLOFF_GLTF"+V]=!1,i["LIGHT_FALLOFF_STANDARD"+V]=!1,I.falloffType){case B.d.FALLOFF_GLTF:i["LIGHT_FALLOFF_GLTF"+V]=!0;break;case B.d.FALLOFF_PHYSICAL:i["LIGHT_FALLOFF_PHYSICAL"+V]=!0;break;case B.d.FALLOFF_STANDARD:i["LIGHT_FALLOFF_STANDARD"+V]=!0}if(A&&!I.Cu.equalsFloats(0,0,0)&&(d.specularEnabled=!0),i["SHADOW"+V]=!1,i["SHADOWCSM"+V]=!1,i["SHADOWCSMDEBUG"+V]=!1,i["SHADOWCSMNUM_CASCADES"+V]=!1,i["SHADOWCSMUSESHADOWMAXZ"+V]=!1,i["SHADOWCSMNOBLEND"+V]=!1,i["SHADOWCSM_RIGHTHANDED"+V]=!1,i["SHADOWPCF"+V]=!1,i["SHADOWPCSS"+V]=!1,i["SHADOWPOISSON"+V]=!1,i["SHADOWESM"+V]=!1,i["SHADOWCLOSEESM"+V]=!1,i["SHADOWCUBE"+V]=!1,i["SHADOWLOWQUALITY"+V]=!1,i["SHADOWMEDIUMQUALITY"+V]=!1,S&&S.receiveShadows&&y.shadowsEnabled&&I.shadowEnabled){const S=I.getShadowGenerator(y.activeCamera)??I.getShadowGenerator();if(S){const y=S.getShadowMap();y&&y.renderList&&y.renderList.length>0&&(d.shadowEnabled=!0,S.prepareDefines(i,V))}}I.lightmapMode!=B.d.LIGHTMAP_DEFAULT?(d.lightmapMode=!0,i["LIGHTMAPEXCLUDED"+V]=!0,i["LIGHTMAPNOSPECULAR"+V]=I.lightmapMode==B.d.LIGHTMAP_SHADOWSONLY):(i["LIGHTMAPEXCLUDED"+V]=!1,i["LIGHTMAPNOSPECULAR"+V]=!1)}function n(y,S,I,V,i){let A=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=function(y,S){let I=!1;if(y.activeCamera){const V=S.CAMERA_ORTHOGRAPHIC?1:0,i=S.CAMERA_PERSPECTIVE?1:0,A=1===y.activeCamera.mode?1:0,B=0===y.activeCamera.mode?1:0;(V^A||i^B)&&(S.CAMERA_ORTHOGRAPHIC=1===A,S.CAMERA_PERSPECTIVE=1===B,I=!0)}return I}(y,V);!1!==A&&(F=(0,d.g)(I,y,V)),V.DEPTHPREPASS!==!S.getColorWrite()&&(V.DEPTHPREPASS=!V.DEPTHPREPASS,F=!0),V.INSTANCES!==i&&(V.INSTANCES=i,F=!0),V.THIN_INSTANCES!==B&&(V.THIN_INSTANCES=B,F=!0),F&&V.markAsUnprocessed()}function v(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],A=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],B=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!S._areAttributesDirty&&S._needNormals===S._normals&&S._needUVs===S._uvs)return!1;S._normals=S._needNormals,S._uvs=S._needUVs,S.NORMAL=S._needNormals&&y.isVerticesDataPresent("normal"),S._needNormals&&y.isVerticesDataPresent("tangent")&&(S.TANGENT=!0);for(let d=1;d<=6;++d)S["UV"+d]=!!S._needUVs&&y.isVerticesDataPresent(`uv${1===d?"":d}`);if(I){const I=y.useVertexColors&&y.isVerticesDataPresent("color");S.VERTEXCOLOR=I,S.VERTEXALPHA=y.hasVertexAlpha&&I&&A}return y.isVerticesDataPresent("instanceColor")&&(y.hasInstances||y.hasThinInstances)&&(S.INSTANCESCOLOR=!0),V&&function(y,S){if(y.useBones&&y.computeBonesUsingShaders&&y.skeleton){S.NUM_BONE_INFLUENCERS=y.numBoneInfluencers;const I=void 0!==S.BONETEXTURE;if(y.skeleton.isUsingTextureForMatrices&&I)S.BONETEXTURE=!0;else{S.BonesPerMesh=y.skeleton.bones.length+1,S.BONETEXTURE=!I&&void 0;const V=y.Ey().prePassRenderer;if(V&&V.enabled){const I=-1===V.excludedSkinnedMesh.indexOf(y);S.BONES_VELOCITY_ENABLED=I}}}else S.NUM_BONE_INFLUENCERS=0,S.BonesPerMesh=0,void 0!==S.BONETEXTURE&&(S.BONETEXTURE=!1)}(y,S),i&&function(y,S){const I=y.morphTargetManager;I?(S.MORPHTARGETS_UV=I.supportsUVs&&S.UV1,S.MORPHTARGETS_UV2=I.supportsUV2s&&S.UV2,S.MORPHTARGETS_TANGENT=I.supportsTangents&&S.TANGENT,S.MORPHTARGETS_NORMAL=I.supportsNormals&&S.NORMAL,S.MORPHTARGETS_POSITION=I.supportsPositions,S.MORPHTARGETS_COLOR=I.supportsColors,S.MORPHTARGETTEXTURE_HASUVS=I.hasUVs,S.MORPHTARGETTEXTURE_HASUV2S=I.hasUV2s,S.MORPHTARGETTEXTURE_HASTANGENTS=I.hasTangents,S.MORPHTARGETTEXTURE_HASNORMALS=I.hasNormals,S.MORPHTARGETTEXTURE_HASPOSITIONS=I.hasPositions,S.MORPHTARGETTEXTURE_HASCOLORS=I.hasColors,S.NUM_MORPH_INFLUENCERS=I.numMaxInfluencers||I.numInfluencers,S.MORPHTARGETS=S.NUM_MORPH_INFLUENCERS>0,S.MORPHTARGETS_TEXTURE=I.isUsingTextureForTargets):(S.MORPHTARGETS_UV=!1,S.MORPHTARGETS_UV2=!1,S.MORPHTARGETS_TANGENT=!1,S.MORPHTARGETS_NORMAL=!1,S.MORPHTARGETS_POSITION=!1,S.MORPHTARGETS_COLOR=!1,S.MORPHTARGETTEXTURE_HASUVS=!1,S.MORPHTARGETTEXTURE_HASUV2S=!1,S.MORPHTARGETTEXTURE_HASTANGENTS=!1,S.MORPHTARGETTEXTURE_HASNORMALS=!1,S.MORPHTARGETTEXTURE_HASPOSITIONS=!1,S.MORPHTARGETTEXTURE_HAS_COLORS=!1,S.MORPHTARGETS=!1,S.NUM_MORPH_INFLUENCERS=0)}(y,S),B&&function(y,S){const I=y.bakedVertexAnimationManager;S.BAKED_VERTEX_ANIMATION_TEXTURE=!(!I||!I.isEnabled)}(y,S),!0}function P(y,S){if(y.activeCamera){const I=S.MULTIVIEW;S.MULTIVIEW=null!==y.activeCamera.outputRenderTarget&&y.activeCamera.outputRenderTarget.getViewCount()>1,S.MULTIVIEW!=I&&S.markAsUnprocessed()}}function q(y,S,I){const V=S.ORDER_INDEPENDENT_TRANSPARENCY,i=S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;S.ORDER_INDEPENDENT_TRANSPARENCY=y.useOrderIndependentTransparency&&I,S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!y.getEngine().getCaps().textureFloatLinearFiltering,V===S.ORDER_INDEPENDENT_TRANSPARENCY&&i===S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||S.markAsUnprocessed()}function g(y,S,I){const V=S.PREPASS;if(!S._arePrePassDirty)return;const i=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(y.prePassRenderer&&y.prePassRenderer.enabled&&I){S.PREPASS=!0,S.SCENE_MRT_COUNT=y.prePassRenderer.mrtCount,S.PREPASS_NORMAL_WORLDSPACE=y.prePassRenderer.generateNormalsInWorldSpace,S.PREPASS_COLOR=!0,S.PREPASS_COLOR_INDEX=0;for(let I=0;I<i.length;I++){const V=y.prePassRenderer.getIndex(i[I].type);-1!==V?(S[i[I].define]=!0,S[i[I].index]=V):S[i[I].define]=!1}}else{S.PREPASS=!1;for(let y=0;y<i.length;y++)S[i[y].define]=!1}S.PREPASS!=V&&(S.markAsUnprocessed(),S.markAsImageProcessingDirty())}function k(y,S,I,V){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];i&&i.push("Light"+y),A||(S.push("vLightData"+y,"vLightDiffuse"+y,"vLightSpecular"+y,"vLightDirection"+y,"vLightWidth"+y,"vLightHeight"+y,"vLightFalloff"+y,"vLightGround"+y,"lightMatrix"+y,"shadowsInfo"+y,"depthValues"+y),I.push("shadowTexture"+y),I.push("depthTexture"+y),S.push("viewFrustumZ"+y,"cascadeBlendFactor"+y,"lightSizeUVCorrection"+y,"depthCorrection"+y,"penumbraDarkness"+y,"frustumLengths"+y),V&&(I.push("projectionLightTexture"+y),S.push("textureProjectionMatrix"+y)),B&&I.push("iesLightTexture"+y))}function R(y,S,I){let V,i,A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(y.uniformsNames){const B=y;V=B.uniformsNames,i=B.uniformBuffersNames,S=B.samplers,I=B.defines,A=B.maxSimultaneousLights||0}else V=y,S||(S=[]);for(let B=0;B<A&&I["LIGHT"+B];B++)k(B,V,S,I["PROJECTEDLIGHTTEXTURE"+B],i,!1,I["IESLIGHTTEXTURE"+B]);I.NUM_MORPH_INFLUENCERS&&(V.push("morphTargetInfluences"),V.push("morphTargetCount")),I.BAKED_VERTEX_ANIMATION_TEXTURE&&(V.push("bakedVertexAnimationSettings"),V.push("bakedVertexAnimationTextureSizeInverted"),V.push("bakedVertexAnimationTime"),S.push("bakedVertexAnimationTexture"))}},12631:(y,S,I)=>{I.d(S,{d:()=>A});var V=I(12321),i=I(12637);class A extends i.d{constructor(y,S){let I=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(y,S,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new V.Matrix,this._storeEffectOnSubMeshes=I}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(y,S){return!!y&&(!this._storeEffectOnSubMeshes||(!y.wi||0===y.wi.length||this.isReadyForSubMesh(y,y.wi[0],S)))}_isReadyForSubMesh(y){const S=y.materialDefines;return!(this.checkReadyOnEveryCall||!y.effect||!S||S._renderId!==this.Ey().getRenderId())}bindOnlyWorldMatrix(y){this._activeEffect.setMatrix("world",y)}bindOnlyNormalMatrix(y){this._activeEffect.setMatrix("normalMatrix",y)}bind(y,S){S&&this.bindForSubMesh(y,S,S.wi[0])}_afterBind(y){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2?arguments[2]:void 0;super._afterBind(y,S,I),this.Ey()._cachedEffect=S,I?I._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return I._drawWrapper._forceRebindOnNextCall||y.isCachedMaterialInvalid(this,S,V)}dispose(y,S,I){this._activeEffect=void 0,super.dispose(y,S,I)}}},12672:(y,S,I)=>{I.d(S,{c:()=>d,f:()=>F});var V=I(12306),i=I(12321),A=I(12309);class B{static extractMinAndMaxIndexed(y,S,I,V,i,A){for(let B=I;B<I+V;B++){const I=3*S[B],V=y[I],d=y[I+1],F=y[I+2];i.minimizeInPlaceFromFloats(V,d,F),A.maximizeInPlaceFromFloats(V,d,F)}}static extractMinAndMax(y,S,I,V,i,A){for(let B=S,d=S*V;B<S+I;B++,d+=V){const S=y[d],I=y[d+1],V=y[d+2];i.minimizeInPlaceFromFloats(S,I,V),A.maximizeInPlaceFromFloats(S,I,V)}}}function d(y,S,I,V){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const d=new i.OS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),F=new i.OS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return B.extractMinAndMaxIndexed(y,S,I,V,d,F),A&&(d.x-=d.x*A.x+A.y,d.y-=d.y*A.x+A.y,d.z-=d.z*A.x+A.y,F.x+=F.x*A.x+A.y,F.y+=F.y*A.x+A.y,F.z+=F.z*A.x+A.y),{minimum:d,maximum:F}}function F(y,S,I){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,A=arguments.length>4?arguments[4]:void 0;const d=new i.OS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),F=new i.OS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return A||(A=3),B.extractMinAndMax(y,S,I,A,d,F),V&&(d.x-=d.x*V.x+V.y,d.y-=d.y*V.x+V.y,d.z-=d.z*V.x+V.y,F.x+=F.x*V.x+V.y,F.y+=F.y*V.x+V.y,F.z+=F.z*V.x+V.y),{minimum:d,maximum:F}}(0,V.c)([A.d.filter((function(){for(var y=arguments.length,S=new Array(y),I=0;I<y;I++)S[I]=arguments[I];let[V,i]=S;return!Array.isArray(V)&&!Array.isArray(i)}))],B,"extractMinAndMaxIndexed",null),(0,V.c)([A.d.filter((function(){for(var y=arguments.length,S=new Array(y),I=0;I<y;I++)S[I]=arguments[I];let[V]=S;return!Array.isArray(V)}))],B,"extractMinAndMax",null)},12644:(y,S,I)=>{I.d(S,{e:()=>F});var V=I(12390),i=I(12653),A=I(12660),B=I(12672),d=I(12440);class F{get materialDefines(){var y;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(y=this._getDrawWrapper())||void 0===y?void 0:y.defines}set materialDefines(y){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=y}_getDrawWrapper(y){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];y=y??this._engine.currentRenderPassId;let I=this._drawWrappers[y];return!I&&S&&(this._drawWrappers[y]=I=new d.e(this._mesh.Ey().getEngine())),I}_removeDrawWrapper(y){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var I;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(I=this._drawWrappers[y])||void 0===I||I.dispose(S));this._drawWrappers[y]=void 0}get effect(){var y;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(y=this._getDrawWrapper())||void 0===y?void 0:y.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(y){this._mainDrawWrapperOverride=y}setEffect(y){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2?arguments[2]:void 0,V=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const i=this._drawWrapper;i.setEffect(y,S,V),void 0!==I&&(i.materialContext=I),y||(i.defines=null,i.materialContext=void 0)}resetDrawCache(y){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==y)return void this._removeDrawWrapper(y,!0,S);for(const y of this._drawWrappers)null===y||void 0===y||y.dispose(S)}this._drawWrappers=[]}static AddToMesh(y,S,I,V,i,A,B){return new F(y,S,I,V,i,A,B,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(y,S,I,V,i,A,B){let d=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],F=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=y,this.verticesStart=S,this.verticesCount=I,this.indexStart=V,this.indexCount=i,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=A,this._renderingMesh=B||A,F&&A.wi.push(this),this._engine=this._mesh.Ey().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=A.wi.length-1,d&&(this.refreshBoundingInfo(),A.sd(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(y){return this._boundingInfo=y,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const y=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return y||this._renderingMesh}Wy(){let y=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const S=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!S)return y&&this._mesh.Ey()._hasDefaultMaterial?this._mesh.Ey().defaultMaterial:null;if(this._isMultiMaterial(S)){const y=S.getSubMaterial(this.materialIndex);return this._currentMaterial!==y&&(this._currentMaterial=y,this.resetDrawCache()),y}return S}_isMultiMaterial(y){return void 0!==y.getSubMaterial}refreshBoundingInfo(){let y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Od)return this;if(y||(y=this._renderingMesh.getVerticesData(V.e.PositionKind)),!y)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const S=this._renderingMesh.fd();let I;if(0===this.indexStart&&this.indexCount===S.length){const y=this._renderingMesh.getBoundingInfo();I={minimum:y.minimum.clone(),maximum:y.maximum.clone()}}else I=(0,B.c)(y,S,this.indexStart,this.indexCount,this._renderingMesh.Od.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(I.minimum,I.maximum):this._boundingInfo=new A.e(I.minimum,I.maximum),this}_checkCollision(y){return this.getBoundingInfo()._checkCollision(y)}updateBoundingInfo(y){let S=this.getBoundingInfo();return S||(this.refreshBoundingInfo(),S=this.getBoundingInfo()),S&&S.update(y),this}isInFrustum(y){const S=this.getBoundingInfo();return!!S&&S.isInFrustum(y,this._mesh.oK)}isCompletelyInFrustum(y){const S=this.getBoundingInfo();return!!S&&S.isCompletelyInFrustum(y)}render(y){return this._renderingMesh.render(this,y,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(y,S){if(!this._linesIndexBuffer){const I=6*Math.floor(this.indexCount/3),V=this.verticesStart+this.verticesCount>65535?new Uint32Array(I):new Uint16Array(I);let i=0;if(0===y.length)for(let y=this.indexStart;y<this.indexStart+this.indexCount;y+=3)V[i++]=y,V[i++]=y+1,V[i++]=y+1,V[i++]=y+2,V[i++]=y+2,V[i++]=y;else for(let S=this.indexStart;S<this.indexStart+this.indexCount;S+=3)V[i++]=y[S],V[i++]=y[S+1],V[i++]=y[S+1],V[i++]=y[S+2],V[i++]=y[S+2],V[i++]=y[S];this._linesIndexBuffer=S.createIndexBuffer(V),this._linesIndexCount=V.length}return this._linesIndexBuffer}canIntersects(y){const S=this.getBoundingInfo();return!!S&&y.intersectsBox(S.boundingBox)}intersects(y,S,I,V,i){const A=this.Wy();if(!A)return null;let B=3,d=!1;switch(A.fillMode){case 3:case 5:case 6:case 8:return null;case 7:B=1,d=!0}return 4===A.fillMode?I.length?this._intersectLines(y,S,I,this._mesh.intersectionThreshold,V):this._intersectUnIndexedLines(y,S,I,this._mesh.intersectionThreshold,V):!I.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(y,S,I,V,i):this._intersectTriangles(y,S,I,B,d,V,i)}_intersectLines(y,S,I,V,A){let B=null;for(let d=this.indexStart;d<this.indexStart+this.indexCount;d+=2){const F=S[I[d]],J=S[I[d+1]],u=y.intersectionSegment(F,J,V);if(!(u<0)&&((A||!B||u<B.distance)&&(B=new i.c(null,null,u),B.faceId=d/2,A)))break}return B}_intersectUnIndexedLines(y,S,I,V,A){let B=null;for(let d=this.verticesStart;d<this.verticesStart+this.verticesCount;d+=2){const I=S[d],F=S[d+1],J=y.intersectionSegment(I,F,V);if(!(J<0)&&((A||!B||J<B.distance)&&(B=new i.c(null,null,J),B.faceId=d/2,A)))break}return B}_intersectTriangles(y,S,I,V,i,A,B){let d=null,F=-1;for(let J=this.indexStart;J<this.indexStart+this.indexCount-(3-V);J+=V){F++;const V=I[J],u=I[J+1],K=I[J+2];if(i&&4294967295===K){J+=2;continue}const G=S[V],p=S[u],L=S[K];if(!G||!p||!L)continue;if(B&&!B(G,p,L,y,V,u,K))continue;const T=y.intersectsTriangle(G,p,L);if(T){if(T.distance<0)continue;if((A||!d||T.distance<d.distance)&&(d=T,d.faceId=F,A))break}}return d}_intersectUnIndexedTriangles(y,S,I,V,i){let A=null;for(let B=this.verticesStart;B<this.verticesStart+this.verticesCount;B+=3){const I=S[B],d=S[B+1],F=S[B+2];if(i&&!i(I,d,F,y,-1,-1,-1))continue;const J=y.intersectsTriangle(I,d,F);if(J){if(J.distance<0)continue;if((V||!A||J.distance<A.distance)&&(A=J,A.faceId=B/3,V))break}}return A}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(y,S){const I=new F(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,y,S,!1);if(!this.IsGlobal){const y=this.getBoundingInfo();if(!y)return I;I._boundingInfo=new A.e(y.minimum,y.maximum)}return I}dispose(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.Ey().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const S=this._mesh.wi.indexOf(this);this._mesh.wi.splice(S,1),this.resetDrawCache(void 0,y)}getClassName(){return"SubMesh"}static CreateFromIndices(y,S,I,V,i){let A=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],B=Number.MAX_VALUE,d=-Number.MAX_VALUE;const J=(i||V).fd();for(let F=S;F<S+I;F++){const y=J[F];y<B&&(B=y),y>d&&(d=y)}return new F(y,B,d-B+1,S,I,V,i,A)}}}}]);