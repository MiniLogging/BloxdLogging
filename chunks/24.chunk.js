"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[24],{11514:(R,J,B)=>{B.d(J,{e:()=>Q});class Q{constructor(R,J,B){this.bu=R,this.bv=J,this.distance=B,this.faceId=0,this.subMeshId=0}}},11525:(R,J,B)=>{B.d(J,{d:()=>N});var Q=B(11193),h=B(11186),y=B(11189);class N{constructor(R,J,B){this.vectors=(0,Q.e)(8,h.nJ.Zero),this.center=h.nJ.Zero(),this.centerWorld=h.nJ.Zero(),this.extendSize=h.nJ.Zero(),this.extendSizeWorld=h.nJ.Zero(),this.directions=(0,Q.e)(3,h.nJ.Zero),this.vectorsWorld=(0,Q.e)(8,h.nJ.Zero),this.minimumWorld=h.nJ.Zero(),this.maximumWorld=h.nJ.Zero(),this.minimum=h.nJ.Zero(),this.maximum=h.nJ.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(R,J,B)}reConstruct(R,J,B){const Q=R.x,y=R.y,N=R.z,r=J.x,q=J.y,e=J.z,D=this.vectors;this.minimum.Ar(Q,y,N),this.maximum.Ar(r,q,e),D[0].Ar(Q,y,N),D[1].Ar(r,q,e),D[2].Ar(r,y,N),D[3].Ar(Q,q,N),D[4].Ar(Q,y,e),D[5].Ar(r,q,N),D[6].Ar(Q,q,e),D[7].Ar(r,y,e),J.addToRef(R,this.center).scaleInPlace(.5),J.subtractToRef(R,this.extendSize).scaleInPlace(.5),this._worldMatrix=B||h.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(R){const J=N._TmpVector3,B=this.maximum.subtractToRef(this.minimum,J[0]),Q=B.length();B.normalizeFromLength(Q);const h=Q*R,y=B.scaleInPlace(.5*h),r=this.center.subtractToRef(y,J[1]),q=this.center.addToRef(y,J[2]);return this.reConstruct(r,q,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(R){const J=this.minimumWorld,B=this.maximumWorld,Q=this.directions,y=this.vectorsWorld,N=this.vectors;if(R.isIdentity()){J.h(this.minimum),B.h(this.maximum);for(let R=0;R<8;++R)y[R].h(N[R]);this.extendSizeWorld.h(this.extendSize),this.centerWorld.h(this.center)}else{J.Sr(Number.MAX_VALUE),B.Sr(-Number.MAX_VALUE);for(let Q=0;Q<8;++Q){const r=y[Q];h.nJ.TransformCoordinatesToRef(N[Q],R,r),J.minimizeInPlace(r),B.maximizeInPlace(r)}B.subtractToRef(J,this.extendSizeWorld).scaleInPlace(.5),B.addToRef(J,this.centerWorld).scaleInPlace(.5)}h.nJ.FromArrayToRef(R.m,0,Q[0]),h.nJ.FromArrayToRef(R.m,4,Q[1]),h.nJ.FromArrayToRef(R.m,8,Q[2]),this._worldMatrix=R}isInFrustum(R){return N.IsInFrustum(this.vectorsWorld,R)}isCompletelyInFrustum(R){return N.IsCompletelyInFrustum(this.vectorsWorld,R)}intersectsPoint(R){const J=this.minimumWorld,B=this.maximumWorld,Q=J.x,h=J.y,N=J.z,r=B.x,q=B.y,e=B.z,D=R.x,l=R.y,E=R.z,O=-y.d;return!(r-D<O||O>D-Q)&&(!(q-l<O||O>l-h)&&!(e-E<O||O>E-N))}intersectsSphere(R){return N.IntersectsSphere(this.minimumWorld,this.maximumWorld,R.centerWorld,R.radiusWorld)}intersectsMinMax(R,J){const B=this.minimumWorld,Q=this.maximumWorld,h=B.x,y=B.y,N=B.z,r=Q.x,q=Q.y,e=Q.z,D=R.x,l=R.y,E=R.z,O=J.x,n=J.y,P=J.z;return!(r<D||h>O)&&(!(q<l||y>n)&&!(e<E||N>P))}dispose(){var R,J;null===(R=this._drawWrapperFront)||void 0===R||R.dispose(),null===(J=this._drawWrapperBack)||void 0===J||J.dispose()}static Intersects(R,J){return R.intersectsMinMax(J.minimumWorld,J.maximumWorld)}static IntersectsSphere(R,J,B,Q){const y=N._TmpVector3[0];h.nJ.ClampToRef(B,R,J,y);return h.nJ.DistanceSquared(B,y)<=Q*Q}static IsCompletelyInFrustum(R,J){for(let B=0;B<6;++B){const Q=J[B];for(let J=0;J<8;++J)if(Q.dotCoordinate(R[J])<0)return!1}return!0}static IsInFrustum(R,J){for(let B=0;B<6;++B){let Q=!0;const h=J[B];for(let J=0;J<8;++J)if(h.dotCoordinate(R[J])>=0){Q=!1;break}if(Q)return!1}return!0}}N._TmpVector3=(0,Q.e)(3,h.nJ.Zero)},11517:(R,J,B)=>{B.d(J,{d:()=>l});var Q=B(11193),h=B(11186),y=B(11525),N=B(11533);const r={min:0,max:0},q={min:0,max:0},e=(R,J,B)=>{const Q=h.nJ.Dot(J.centerWorld,R),y=Math.abs(h.nJ.Dot(J.directions[0],R))*J.extendSize.x+Math.abs(h.nJ.Dot(J.directions[1],R))*J.extendSize.y+Math.abs(h.nJ.Dot(J.directions[2],R))*J.extendSize.z;B.min=Q-y,B.max=Q+y},D=(R,J,B)=>(e(R,J,r),e(R,B,q),!(r.min>q.max||q.min>r.max));class l{constructor(R,J,B){this._isLocked=!1,this.boundingBox=new y.d(R,J,B),this.boundingSphere=new N.c(R,J,B)}reConstruct(R,J,B){this.boundingBox.reConstruct(R,J,B),this.boundingSphere.reConstruct(R,J,B)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(R){this._isLocked=R}update(R){this._isLocked||(this.boundingBox._update(R),this.boundingSphere._update(R))}centerOn(R,J){const B=l._TmpVector3[0].h(R).ul(J),Q=l._TmpVector3[1].h(R).addInPlace(J);return this.boundingBox.reConstruct(B,Q,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(B,Q,this.boundingBox.getWorldMatrix()),this}encapsulate(R){const J=h.nJ.Minimize(this.minimum,R),B=h.nJ.Maximize(this.maximum,R);return this.reConstruct(J,B,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(R){const J=h.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(J);const B=h.TmpVectors.nJ[0];return h.nJ.TransformCoordinatesToRef(R.boundingBox.minimumWorld,J,B),this.encapsulate(B),h.nJ.TransformCoordinatesToRef(R.boundingBox.maximumWorld,J,B),this.encapsulate(B),this}scale(R){return this.boundingBox.scale(R),this.boundingSphere.scale(R),this}isInFrustum(R){let J=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===J||3===J)&&this.boundingSphere.isCenterInFrustum(R))return!0;if(!this.boundingSphere.isInFrustum(R))return!1;return!(1!==J&&3!==J)||this.boundingBox.isInFrustum(R)}get diagonalLength(){const R=this.boundingBox;return R.maximumWorld.subtractToRef(R.minimumWorld,l._TmpVector3[0]).length()}isCompletelyInFrustum(R){return this.boundingBox.isCompletelyInFrustum(R)}_checkCollision(R){return R._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(R){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(R)&&!!this.boundingBox.intersectsPoint(R))}intersects(R,J){if(!N.c.Intersects(this.boundingSphere,R.boundingSphere))return!1;if(!y.d.Intersects(this.boundingBox,R.boundingBox))return!1;if(!J)return!0;const B=this.boundingBox,Q=R.boundingBox;return!!D(B.directions[0],B,Q)&&(!!D(B.directions[1],B,Q)&&(!!D(B.directions[2],B,Q)&&(!!D(Q.directions[0],B,Q)&&(!!D(Q.directions[1],B,Q)&&(!!D(Q.directions[2],B,Q)&&(!!D(h.nJ.Cross(B.directions[0],Q.directions[0]),B,Q)&&(!!D(h.nJ.Cross(B.directions[0],Q.directions[1]),B,Q)&&(!!D(h.nJ.Cross(B.directions[0],Q.directions[2]),B,Q)&&(!!D(h.nJ.Cross(B.directions[1],Q.directions[0]),B,Q)&&(!!D(h.nJ.Cross(B.directions[1],Q.directions[1]),B,Q)&&(!!D(h.nJ.Cross(B.directions[1],Q.directions[2]),B,Q)&&(!!D(h.nJ.Cross(B.directions[2],Q.directions[0]),B,Q)&&(!!D(h.nJ.Cross(B.directions[2],Q.directions[1]),B,Q)&&!!D(h.nJ.Cross(B.directions[2],Q.directions[2]),B,Q))))))))))))))}}l._TmpVector3=(0,Q.e)(2,h.nJ.Zero)},11533:(R,J,B)=>{B.d(J,{c:()=>y});var Q=B(11193),h=B(11186);class y{constructor(R,J,B){this.center=h.nJ.Zero(),this.centerWorld=h.nJ.Zero(),this.minimum=h.nJ.Zero(),this.maximum=h.nJ.Zero(),this.reConstruct(R,J,B)}reConstruct(R,J,B){this.minimum.h(R),this.maximum.h(J);const Q=h.nJ.Distance(R,J);J.addToRef(R,this.center).scaleInPlace(.5),this.radius=.5*Q,this._update(B||h.Matrix.IdentityReadOnly)}scale(R){const J=this.radius*R,B=y._TmpVector3,Q=B[0].Sr(J),h=this.center.subtractToRef(Q,B[1]),N=this.center.addToRef(Q,B[2]);return this.reConstruct(h,N,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(R){if(R.isIdentity())this.centerWorld.h(this.center),this.radiusWorld=this.radius;else{h.nJ.TransformCoordinatesToRef(this.center,R,this.centerWorld);const J=y._TmpVector3[0];h.nJ.TransformNormalFromFloatsToRef(1,1,1,R,J),this.radiusWorld=Math.max(Math.abs(J.x),Math.abs(J.y),Math.abs(J.z))*this.radius}}isInFrustum(R){const J=this.centerWorld,B=this.radiusWorld;for(let Q=0;Q<6;Q++)if(R[Q].dotCoordinate(J)<=-B)return!1;return!0}isCenterInFrustum(R){const J=this.centerWorld;for(let B=0;B<6;B++)if(R[B].dotCoordinate(J)<0)return!1;return!0}intersectsPoint(R){const J=h.nJ.DistanceSquared(this.centerWorld,R);return!(this.radiusWorld*this.radiusWorld<J)}static Intersects(R,J){const B=h.nJ.DistanceSquared(R.centerWorld,J.centerWorld),Q=R.radiusWorld+J.radiusWorld;return!(Q*Q<B)}static CreateFromCenterAndRadius(R,J,B){this._TmpVector3[0].h(R),this._TmpVector3[1].Ar(0,0,J),this._TmpVector3[2].h(R),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].ul(this._TmpVector3[1]);const Q=new y(this._TmpVector3[0],this._TmpVector3[2]);return Q._worldMatrix=B||h.Matrix.Identity(),Q}}y._TmpVector3=(0,Q.e)(3,h.nJ.Zero)},11547:(R,J,B)=>{function Q(R){-1===R.indexOf("vClipPlane")&&R.push("vClipPlane"),-1===R.indexOf("vClipPlane2")&&R.push("vClipPlane2"),-1===R.indexOf("vClipPlane3")&&R.push("vClipPlane3"),-1===R.indexOf("vClipPlane4")&&R.push("vClipPlane4"),-1===R.indexOf("vClipPlane5")&&R.push("vClipPlane5"),-1===R.indexOf("vClipPlane6")&&R.push("vClipPlane6")}function h(R,J,B){const Q=!!(R.clipPlane??J.clipPlane),h=!!(R.clipPlane2??J.clipPlane2),y=!!(R.clipPlane3??J.clipPlane3),N=!!(R.clipPlane4??J.clipPlane4),r=!!(R.clipPlane5??J.clipPlane5),q=!!(R.clipPlane6??J.clipPlane6);Q&&B.push("#define CLIPPLANE"),h&&B.push("#define CLIPPLANE2"),y&&B.push("#define CLIPPLANE3"),N&&B.push("#define CLIPPLANE4"),r&&B.push("#define CLIPPLANE5"),q&&B.push("#define CLIPPLANE6")}function y(R,J,B){let Q=!1;const h=!!(R.clipPlane??J.clipPlane),y=!!(R.clipPlane2??J.clipPlane2),N=!!(R.clipPlane3??J.clipPlane3),r=!!(R.clipPlane4??J.clipPlane4),q=!!(R.clipPlane5??J.clipPlane5),e=!!(R.clipPlane6??J.clipPlane6);return B.CLIPPLANE!==h&&(B.CLIPPLANE=h,Q=!0),B.CLIPPLANE2!==y&&(B.CLIPPLANE2=y,Q=!0),B.CLIPPLANE3!==N&&(B.CLIPPLANE3=N,Q=!0),B.CLIPPLANE4!==r&&(B.CLIPPLANE4=r,Q=!0),B.CLIPPLANE5!==q&&(B.CLIPPLANE5=q,Q=!0),B.CLIPPLANE6!==e&&(B.CLIPPLANE6=e,Q=!0),Q}function N(R,J,B){let Q=J.clipPlane??B.clipPlane;r(R,"vClipPlane",Q),Q=J.clipPlane2??B.clipPlane2,r(R,"vClipPlane2",Q),Q=J.clipPlane3??B.clipPlane3,r(R,"vClipPlane3",Q),Q=J.clipPlane4??B.clipPlane4,r(R,"vClipPlane4",Q),Q=J.clipPlane5??B.clipPlane5,r(R,"vClipPlane5",Q),Q=J.clipPlane6??B.clipPlane6,r(R,"vClipPlane6",Q)}function r(R,J,B){B&&R.setFloat4(J,B.normal.x,B.normal.y,B.normal.z,B.d)}B.d(J,{e:()=>Q,g:()=>N,i:()=>y,j:()=>h})},11489:(R,J,B)=>{B.d(J,{c:()=>Q});class Q{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(R,J){this._defines[R]||(R<this._currentRank&&(this._currentRank=R),R>this._maxRank&&(this._maxRank=R),this._defines[R]=new Array),this._defines[R].push(J)}addCPUSkinningFallback(R,J){this._mesh=J,R<this._currentRank&&(this._currentRank=R),R>this._maxRank&&(this._maxRank=R)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(R,J){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,R=R.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),J._bonesComputationForcedToCPU=!0;const B=this._mesh.IR();for(let R=0;R<B.meshes.length;R++){const Q=B.meshes[R];if(Q.material){if(Q.computeBonesUsingShaders&&0!==Q.numBoneInfluencers)if(Q.material.getEffect()===J)Q.computeBonesUsingShaders=!1;else if(Q.Fh)for(const R of Q.Fh){if(R.effect===J){Q.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&Q.computeBonesUsingShaders&&Q.numBoneInfluencers>0&&(Q.computeBonesUsingShaders=!1)}}else{const J=this._defines[this._currentRank];if(J)for(let B=0;B<J.length;B++)R=R.replace("#define "+J[B],"");this._currentRank++}return R}}},11504:(R,J,B)=>{B.d(J,{b:()=>A});var Q=B(11167),h=B(11176),y=B(11030),N=B(11032),r=B(11065),q=B(11507),e=B(11442),D=B(11043),l=B(11232),E=B(11301),O=B(11217);class n{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(R){this._func=R}get funcRef(){return this._funcRef}set funcRef(R){this._funcRef=R}get funcMask(){return this._funcMask}set funcMask(R){this._funcMask=R}get opStencilFail(){return this._opStencilFail}set opStencilFail(R){this._opStencilFail=R}get opDepthFail(){return this._opDepthFail}set opDepthFail(R){this._opDepthFail=R}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(R){this._opStencilDepthPass=R}get mask(){return this._mask}set mask(R){this._mask=R}get enabled(){return this._enabled}set enabled(R){this._enabled=R}getClassName(){return"MaterialStencilState"}copyTo(R){O.c.Clone((()=>R),this)}serialize(){return O.c.Serialize(this)}parse(R,J,B){O.c.Parse((()=>this),R,J,B)}}(0,Q.e)([(0,h.N)()],n.prototype,"func",null),(0,Q.e)([(0,h.N)()],n.prototype,"funcRef",null),(0,Q.e)([(0,h.N)()],n.prototype,"funcMask",null),(0,Q.e)([(0,h.N)()],n.prototype,"opStencilFail",null),(0,Q.e)([(0,h.N)()],n.prototype,"opDepthFail",null),(0,Q.e)([(0,h.N)()],n.prototype,"opStencilDepthPass",null),(0,Q.e)([(0,h.N)()],n.prototype,"mask",null),(0,Q.e)([(0,h.N)()],n.prototype,"enabled",null);var P=B(11539);class A{get _supportGlowLayer(){return!1}set _glowModeEnabled(R){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(R){if(this._alpha===R)return;const J=this._alpha;this._alpha=R,1!==J&&1!==R||this.ND(A.MiscDirtyFlag+A.PrePassDirtyFlag)}get alpha(){return this._alpha}set Pr(R){this._backFaceCulling!==R&&(this._backFaceCulling=R,this.ND(A.TextureDirtyFlag))}get Pr(){return this._backFaceCulling}set cullBackFaces(R){this._cullBackFaces!==R&&(this._cullBackFaces=R,this.ND(A.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(R){this._blockDirtyMechanism!==R&&(this._blockDirtyMechanism=R,R||this.hE())}atomicMaterialsUpdate(R){this.blockDirtyMechanism=!0;try{R(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(R){this._onDisposeObserver&&this.eh.remove(this._onDisposeObserver),this._onDisposeObserver=this.eh.add(R)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new N.e),this._onBindObservable}set onBind(R){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(R)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new N.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new N.e),this._onEffectCreatedObservable}set alphaMode(R){this._alphaMode!==R&&(this._alphaMode=R,this.ND(A.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(R){this._needDepthPrePass!==R&&(this._needDepthPrePass=R,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(R){this._fogEnabled!==R&&(this._fogEnabled=R,this.ND(A.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case A.WireFrameFillMode:case A.LineListDrawMode:case A.LineLoopDrawMode:case A.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(R){this.fillMode=R?A.WireFrameFillMode:A.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case A.PointFillMode:case A.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(R){this.fillMode=R?A.PointFillMode:A.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(R){this._fillMode!==R&&(this._fillMode=R,this.ND(A.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(R){const J=this.IR().getEngine().getCaps().fragmentDepthSupported;R&&!J&&D.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=R&&J,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(R){this._drawWrapper=R}constructor(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.eh=new N.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new n,this._useUBO=!1,this._fillMode=A.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=R;const h=J||r.e.LastCreatedScene;h&&(this._scene=h,this._dirtyCallbacks={},this._forceGLSL=Q,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=R||y.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new E.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new e.c(this._scene.getEngine(),void 0,void 0,R),this._useUBO=this.IR().getEngine().supportsUniformBuffers,this._createUniformBuffer(),B||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),A.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var R;const J=this.IR().getEngine();null===(R=this._uniformBuffer)||void 0===R||R.dispose(),J.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new e.c(J,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new e.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(R){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.hE(),this.checkReadyOnlyOnce=!0}unfreeze(){this.hE(),this.checkReadyOnlyOnce=!1}isReady(R,J){return!0}isReadyForSubMesh(R,J,B){const Q=J.materialDefines;return!!Q&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Q,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}IR(){return this._scene}_getEffectiveOrientation(R){return null!==this.sideOrientation?this.sideOrientation:R.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(R){this._transparencyMode!==R&&(this._transparencyMode=R,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===A.MATERIAL_ALPHABLEND||this._transparencyMode===A.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===A.MATERIAL_ALPHATEST||this._transparencyMode===A.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===A.MATERIAL_OPAQUE||this._transparencyMode===A.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(R){return this._hasTransparencyMode?this._transparencyModeIsBlend:R.visibility<1||!this._disableAlphaBlending&&(R.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(R){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(R)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}hE(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const J=this.IR().meshes;for(const B of J)if(B.Fh)for(const J of B.Fh)if(J.YR()===this)for(const B of J._drawWrappers)B&&this._materialContext===B.materialContext&&(B._wasPreviouslyReady=!1,B._wasPreviouslyUsingInstances=null,B._forceRebindOnNextCall=R);R&&this.ND(A.AllDirtyFlag)}_preBind(R){let J=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const B=this._scene.getEngine(),Q=(null==J?this.sideOrientation:J)===A.ClockWiseSideOrientation;return B.enableEffect(R||this._getDrawWrapper()),B.setState(this.Pr,this.zOffset,!1,Q,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),Q}bind(R,J){}buildUniformLayout(){const R=this._uniformBuffer;this._eventInfo.ubo=R,this._callbackPluginEventGeneric(8,this._eventInfo),R.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(R,J,B){const Q=B._drawWrapper;this._eventInfo.subMesh=B,this._callbackPluginEventBindForSubMesh(this._eventInfo),Q._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(R){}bindView(R){this._useUBO?this._needToBindSceneUbo=!0:R.setMatrix("view",this.IR().getViewMatrix())}bindViewProjection(R){this._useUBO?this._needToBindSceneUbo=!0:(R.setMatrix("viewProjection",this.IR().getTransformMatrix()),R.setMatrix("projection",this.IR().getProjectionMatrix()))}bindEyePosition(R,J){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(R,J)}_afterBind(R){let J=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&J&&(this._needToBindSceneUbo=!1,(0,P.q)(J,this.IR().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=R?R.visibility:1,this._onBindObservable&&R&&this._onBindObservable.notifyObservers(R),this.disableDepthWrite){const R=this._scene.getEngine();this._cachedDepthWriteState=R.getDepthWrite(),R.setDepthWrite(!1)}if(this.disableColorWrite){const R=this._scene.getEngine();this._cachedColorWriteState=R.getColorWrite(),R.setColorWrite(!1)}if(0!==this.depthFunction){const R=this._scene.getEngine();this._cachedDepthFunctionState=R.getDepthFunction()||0,R.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(R){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=R,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(R){return null}_clonePlugins(R,J){const B={};if(this._serializePlugins(B),A._ParsePlugins(B,R,this._scene,J),this.pluginManager)for(const Q of this.pluginManager._plugins){const J=R.pluginManager.getPlugin(Q.name);J&&Q.copyTo(J)}}getBindedMeshes(){if(this.meshMap){const R=[];for(const J in this.meshMap){const B=this.meshMap[J];B&&R.push(B)}return R}return this._scene.meshes.filter((R=>R.material===this))}forceCompilation(R,J,B,Q){const h={clipPlane:!1,useInstances:!1,...B},y=this.IR(),N=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const r=()=>{if(!this._scene||!this._scene.getEngine())return;const B=y.clipPlane;if(h.clipPlane&&(y.clipPlane=new l.b(0,0,0,1)),this._storeEffectOnSubMeshes){let B=!0,y=null;if(R.Fh){const J=new q.d(0,0,0,0,0,R,void 0,!1,!1);J.materialDefines&&(J.materialDefines._renderId=-1),this.isReadyForSubMesh(R,J,h.useInstances)||(J.effect&&J.effect.getCompilationError()&&J.effect.allFallbacksProcessed()?y=J.effect.getCompilationError():(B=!1,setTimeout(r,16)))}B&&(this.allowShaderHotSwapping=N,y&&Q&&Q(y),J&&J(this))}else this.isReady()?(this.allowShaderHotSwapping=N,J&&J(this)):setTimeout(r,16);h.clipPlane&&(y.clipPlane=B)};r()}async forceCompilationAsync(R,J){return await new Promise(((B,Q)=>{this.forceCompilation(R,(()=>{B()}),J,(R=>{Q(R)}))}))}ND(R){this.IR().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(A._DirtyCallbackArray.length=0,R&A.ImageProcessingDirtyFlag&&A._DirtyCallbackArray.push(A._ImageProcessingDirtyCallBack),R&A.TextureDirtyFlag&&A._DirtyCallbackArray.push(A._TextureDirtyCallBack),R&A.LightDirtyFlag&&A._DirtyCallbackArray.push(A._LightsDirtyCallBack),R&A.FresnelDirtyFlag&&A._DirtyCallbackArray.push(A._FresnelDirtyCallBack),R&A.AttributesDirtyFlag&&A._DirtyCallbackArray.push(A._AttributeDirtyCallBack),R&A.MiscDirtyFlag&&A._DirtyCallbackArray.push(A._MiscDirtyCallBack),R&A.PrePassDirtyFlag&&A._DirtyCallbackArray.push(A._PrePassDirtyCallBack),A._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(A._RunDirtyCallBacks),this.IR().resetCachedMaterial())}resetDrawCache(){const R=this.IR().meshes;for(const J of R)if(J.Fh)for(const R of J.Fh)R.YR()===this&&R.resetDrawCache()}_markAllSubMeshesAsDirty(R){const J=this.IR();if(J.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const B=J.meshes;for(const Q of B)if(Q.Fh)for(const B of Q.Fh){if((B.YR()||(J._hasDefaultMaterial?J.defaultMaterial:null))===this)for(const J of B._drawWrappers)J&&J.defines&&J.defines.markAllAsDirty&&this._materialContext===J.materialContext&&R(J.defines)}}_markScenePrePassDirty(){if(this.IR().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const R=this.IR().enablePrePassRenderer();R&&R.ND()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(A._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(A._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(A._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(A._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(A._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(A._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(A._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(A._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(A._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(A._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const R=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.eh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(R)}))}}setPrePassRenderer(R){return!1}dispose(R,J,B){const Q=this.IR();if(Q.stopAnimation(this),Q.freeProcessedMaterials(),Q.removeMaterial(this),this._eventInfo.forceDisposeTextures=J,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const R=this._parentContainer.materials.indexOf(this);R>-1&&this._parentContainer.materials.splice(R,1),this._parentContainer=null}if(!0!==B)if(this.meshMap)for(const h in this.meshMap){const R=this.meshMap[h];this._disposeMeshResources(R)}else{const R=Q.meshes;for(const J of R)this._disposeMeshResources(J)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.eh.notifyObservers(this),this.eh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(R){if(!R)return;const J=R.py,B=R._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(R.Fh&&B)for(const h of R.Fh){const R=h._drawWrappers;for(let y=0;y<R.length;y++){var Q;const N=null===(Q=R[y])||void 0===Q?void 0:Q.effect;if(!N)continue;B[y]===this&&(null===J||void 0===J||J._releaseVertexArrayObject(N),h._removeDrawWrapper(y,!0,!0))}}}else null===J||void 0===J||J._releaseVertexArrayObject(this._drawWrapper.effect);R.material!==this||R.sourceMesh||(R.material=null)}serialize(){const R=O.c.Serialize(this);return R.stencil=this.stencil.serialize(),R.uniqueId=this.uniqueId,this._serializePlugins(R),R}_serializePlugins(R){if(R.plugins={},this.pluginManager)for(const J of this.pluginManager._plugins)J.doNotSerialize||(R.plugins[J.getClassName()]=J.serialize())}static Parse(R,J,B){if(R.customType){if("BABYLON.PBRMaterial"===R.customType&&R.overloadedAlbedo&&(R.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return D.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else R.customType="BABYLON.StandardMaterial";const Q=y.Tools.Instantiate(R.customType).Parse(R,J,B);return Q._loadedUniqueId=R.uniqueId,Q}static _ParsePlugins(R,J,B,Q){if(R.plugins)for(const r in R.plugins){var h,N;const q=R.plugins[r];let e=null===(h=J.pluginManager)||void 0===h?void 0:h.getPlugin(q.name);if(!e){const R=y.Tools.Instantiate("BABYLON."+r);R&&(e=new R(J))}null===(N=e)||void 0===N||N.parse(q,B,Q)}}}A.TriangleFillMode=0,A.WireFrameFillMode=1,A.PointFillMode=2,A.PointListDrawMode=3,A.LineListDrawMode=4,A.LineLoopDrawMode=5,A.LineStripDrawMode=6,A.TriangleStripDrawMode=7,A.TriangleFanDrawMode=8,A.ClockWiseSideOrientation=0,A.CounterClockWiseSideOrientation=1,A.ImageProcessingDirtyFlag=64,A.TextureDirtyFlag=1,A.LightDirtyFlag=2,A.FresnelDirtyFlag=4,A.AttributesDirtyFlag=8,A.MiscDirtyFlag=16,A.PrePassDirtyFlag=32,A.AllDirtyFlag=127,A.MATERIAL_OPAQUE=0,A.MATERIAL_ALPHATEST=1,A.MATERIAL_ALPHABLEND=2,A.MATERIAL_ALPHATESTANDBLEND=3,A.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,A.MATERIAL_NORMALBLENDMETHOD_RNM=1,A.OnEventObservable=new N.e,A._AllDirtyCallBack=R=>R.markAllAsDirty(),A._ImageProcessingDirtyCallBack=R=>R.markAsImageProcessingDirty(),A._TextureDirtyCallBack=R=>R.markAsTexturesDirty(),A._FresnelDirtyCallBack=R=>R.markAsFresnelDirty(),A._MiscDirtyCallBack=R=>R.markAsMiscDirty(),A._PrePassDirtyCallBack=R=>R.markAsPrePassDirty(),A._LightsDirtyCallBack=R=>R.markAsLightDirty(),A._AttributeDirtyCallBack=R=>R.markAsAttributesDirty(),A._FresnelAndMiscDirtyCallBack=R=>{A._FresnelDirtyCallBack(R),A._MiscDirtyCallBack(R)},A._TextureAndMiscDirtyCallBack=R=>{A._TextureDirtyCallBack(R),A._MiscDirtyCallBack(R)},A._DirtyCallbackArray=[],A._RunDirtyCallBacks=R=>{for(const J of A._DirtyCallbackArray)J(R)},(0,Q.e)([(0,h.N)()],A.prototype,"id",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"uniqueId",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"name",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"metadata",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"checkReadyOnEveryCall",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"checkReadyOnlyOnce",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"state",void 0),(0,Q.e)([(0,h.N)("alpha")],A.prototype,"_alpha",void 0),(0,Q.e)([(0,h.N)("Pr")],A.prototype,"_backFaceCulling",void 0),(0,Q.e)([(0,h.N)("cullBackFaces")],A.prototype,"_cullBackFaces",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"sideOrientation",void 0),(0,Q.e)([(0,h.N)("alphaMode")],A.prototype,"_alphaMode",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"_needDepthPrePass",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"disableDepthWrite",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"disableColorWrite",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"forceDepthWrite",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"depthFunction",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"separateCullingPass",void 0),(0,Q.e)([(0,h.N)("fogEnabled")],A.prototype,"_fogEnabled",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"pointSize",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"zOffset",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"zOffsetUnits",void 0),(0,Q.e)([(0,h.N)()],A.prototype,"pointsCloud",null),(0,Q.e)([(0,h.N)()],A.prototype,"fillMode",null),(0,Q.e)([(0,h.N)()],A.prototype,"useLogarithmicDepth",null),(0,Q.e)([(0,h.N)()],A.prototype,"transparencyMode",null)},11539:(R,J,B)=>{B.d(J,{$:()=>W,A:()=>V,D:()=>O,H:()=>E,J:()=>z,L:()=>c,N:()=>d,O:()=>u,Q:()=>H,U:()=>p,Y:()=>i,c:()=>a,cb:()=>Y,d:()=>l,db:()=>n,f:()=>x,i:()=>D,m:()=>P,q:()=>A,r:()=>S,s:()=>M,u:()=>f,w:()=>I});var Q=B(11043),h=B(11224),y=B(11065),N=B(11482),r=B(11547);const q=h.SJ.Black(),e={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function D(R,J,B){if(!R||R.LOGARITHMICDEPTH||R.indexOf&&R.indexOf("LOGARITHMICDEPTH")>=0){const R=B.activeCamera;1===R.mode&&Q.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),J.setFloat("logarithmicDepthConstant",2/(Math.log(R.maxZ+1)/Math.LN2))}}function l(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];B&&R.fogEnabled&&(!J||J.applyFog)&&0!==R.fogMode&&(B.setFloat4("vFogInfos",R.fogMode,R.fogStart,R.fogEnd,R.fogDensity),Q?(R.fogColor.toLinearSpaceToRef(q,R.getEngine().useExactSrgbConversions),B.setColor3("vFogColor",q)):B.setColor3("vFogColor",R.fogColor))}function E(R,J,B,Q,h,y,N,r,q,D){const l=R.numMaxInfluencers||R.numInfluencers;return l<=0?0:(J.push("#define MORPHTARGETS"),R.hasPositions&&J.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),R.hasNormals&&J.push("#define MORPHTARGETTEXTURE_HASNORMALS"),R.hasTangents&&J.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),R.hasUVs&&J.push("#define MORPHTARGETTEXTURE_HASUVS"),R.hasUV2s&&J.push("#define MORPHTARGETTEXTURE_HASUV2S"),R.hasColors&&J.push("#define MORPHTARGETTEXTURE_HASCOLORS"),R.supportsPositions&&h&&J.push("#define MORPHTARGETS_POSITION"),R.supportsNormals&&y&&J.push("#define MORPHTARGETS_NORMAL"),R.supportsTangents&&N&&J.push("#define MORPHTARGETS_TANGENT"),R.supportsUVs&&r&&J.push("#define MORPHTARGETS_UV"),R.supportsUV2s&&q&&J.push("#define MORPHTARGETS_UV2"),R.supportsColors&&D&&J.push("#define MORPHTARGETS_COLOR"),J.push("#define NUM_MORPH_INFLUENCERS "+l),R.isUsingTextureForTargets&&J.push("#define MORPHTARGETS_TEXTURE"),e.NUM_MORPH_INFLUENCERS=l,e.NORMAL=y,e.TANGENT=N,e.UV=r,e.UV2=q,e.COLOR=D,O(B,Q,e,h),l)}function O(R,J,B){let h=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const N=B.NUM_MORPH_INFLUENCERS;if(N>0&&y.e.LastCreatedEngine){const r=y.e.LastCreatedEngine.getCaps().maxVertexAttribs,q=J.morphTargetManager;if(null!==q&&void 0!==q&&q.isUsingTextureForTargets)return;const e=q&&q.supportsPositions&&h,D=q&&q.supportsNormals&&B.NORMAL,l=q&&q.supportsTangents&&B.TANGENT,E=q&&q.supportsUVs&&B.UV1,O=q&&q.supportsUV2s&&B.UV2,n=q&&q.supportsColors&&B.VERTEXCOLOR;for(let B=0;B<N;B++)e&&R.push("position"+B),D&&R.push("normal"+B),l&&R.push("tangent"+B),E&&R.push("uv_"+B),O&&R.push("uv2_"+B),n&&R.push("color"+B),R.length>r&&Q.d.Error("Cannot add more vertex attributes for mesh "+J.name)}}function n(R){let J=arguments.length>1&&void 0!==arguments[1]&&arguments[1];R.push("world0"),R.push("world1"),R.push("world2"),R.push("world3"),J&&(R.push("previousWorld0"),R.push("previousWorld1"),R.push("previousWorld2"),R.push("previousWorld3"))}function P(R,J){const B=R.morphTargetManager;R&&B&&J.setFloatArray("morphTargetInfluences",B.influences)}function A(R,J){J.bindToEffect(R,"Scene")}function u(R,J,B){J._needUVs=!0,J[B]=!0,R.optimizeUVAllocation&&R.getTextureMatrix().isIdentityAs3x2()?(J[B+"DIRECTUV"]=R.coordinatesIndex+1,J["MAINUV"+(R.coordinatesIndex+1)]=!0):J[B+"DIRECTUV"]=0}function S(R,J,B){const Q=R.getTextureMatrix();J.th(B+"Matrix",Q)}function f(R,J,B){B.BAKED_VERTEX_ANIMATION_TEXTURE&&B.INSTANCES&&R.push("bakedVertexAnimationSettingsInstanced")}function a(R,J,B){var Q;if(J&&R&&(R.computeBonesUsingShaders&&J._bonesComputationForcedToCPU&&(R.computeBonesUsingShaders=!1),R.useBones&&R.computeBonesUsingShaders&&R.skeleton)){const h=R.skeleton;if(h.isUsingTextureForMatrices&&J.getUniformIndex("boneTextureWidth")>-1){const B=h.getTransformMatrixTexture(R);J.setTexture("boneSampler",B),J.setFloat("boneTextureWidth",4*(h.bones.length+1))}else{const y=h.getTransformMatrices(R);y&&(J.setMatrices("mBones",y),B&&R.IR().prePassRenderer&&R.IR().prePassRenderer.getIndex(2)&&(B.previousBones[R.uniqueId]||(B.previousBones[R.uniqueId]=y.slice()),J.setMatrices("mPreviousBones",B.previousBones[R.uniqueId]),Q=y,B.previousBones[R.uniqueId].set(Q)))}}}function s(R,J,B,Q,h){let y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];R._bindLight(J,B,Q,h,y)}function x(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const y=Math.min(J.lightSources.length,h);for(let N=0;N<y;N++){s(J.lightSources[N],N,R,B,"boolean"===typeof Q?Q:Q.SPECULARTERM,J.receiveShadows)}}function I(R,J,B,Q){B.NUM_BONE_INFLUENCERS>0&&(Q.addCPUSkinningFallback(0,J),R.push("matricesIndices"),R.push("matricesWeights"),B.NUM_BONE_INFLUENCERS>4&&(R.push("matricesIndicesExtra"),R.push("matricesWeightsExtra")))}function V(R,J){(J.INSTANCES||J.THIN_INSTANCES)&&n(R,!!J.PREPASS_VELOCITY),J.INSTANCESCOLOR&&R.push("instanceColor")}function M(R,J){let B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,h=0;for(let y=0;y<B&&R["LIGHT"+y];y++)y>0&&(h=Q+y,J.addFallback(h,"LIGHT"+y)),R.SHADOWS||(R["SHADOW"+y]&&J.addFallback(Q,"SHADOW"+y),R["SHADOWPCF"+y]&&J.addFallback(Q,"SHADOWPCF"+y),R["SHADOWPCSS"+y]&&J.addFallback(Q,"SHADOWPCSS"+y),R["SHADOWPOISSON"+y]&&J.addFallback(Q,"SHADOWPOISSON"+y),R["SHADOWESM"+y]&&J.addFallback(Q,"SHADOWESM"+y),R["SHADOWCLOSEESM"+y]&&J.addFallback(Q,"SHADOWCLOSEESM"+y));return h++}function H(R,J,B,Q,h,y,N){let r=arguments.length>7&&void 0!==arguments[7]&&arguments[7];N._areMiscDirty&&(N.LOGARITHMICDEPTH=B,N.POINTSIZE=Q,N.FOG=h&&function(R,J){return J.fogEnabled&&R.applyFog&&0!==J.fogMode}(R,J),N.NONUNIFORMSCALING=R.nonUniformScaling,N.ALPHATEST=y,N.DECAL_AFTER_DETAIL=r)}function d(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!B._areLightsDirty)return B._needNormals;let N=0;const r={needNormals:B._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(R.lightsEnabled&&!y)for(const e of J.lightSources)if(X(R,J,e,N,B,Q,r),N++,N===h)break;B.SPECULARTERM=r.specularEnabled,B.SHADOWS=r.shadowEnabled;for(let e=N;e<h;e++)void 0!==B["LIGHT"+e]&&(B["LIGHT"+e]=!1,B["HEMILIGHT"+e]=!1,B["POINTLIGHT"+e]=!1,B["DIRLIGHT"+e]=!1,B["SPOTLIGHT"+e]=!1,B["AREALIGHT"+e]=!1,B["SHADOW"+e]=!1,B["SHADOWCSM"+e]=!1,B["SHADOWCSMDEBUG"+e]=!1,B["SHADOWCSMNUM_CASCADES"+e]=!1,B["SHADOWCSMUSESHADOWMAXZ"+e]=!1,B["SHADOWCSMNOBLEND"+e]=!1,B["SHADOWCSM_RIGHTHANDED"+e]=!1,B["SHADOWPCF"+e]=!1,B["SHADOWPCSS"+e]=!1,B["SHADOWPOISSON"+e]=!1,B["SHADOWESM"+e]=!1,B["SHADOWCLOSEESM"+e]=!1,B["SHADOWCUBE"+e]=!1,B["SHADOWLOWQUALITY"+e]=!1,B["SHADOWMEDIUMQUALITY"+e]=!1);const q=R.getEngine().getCaps();return void 0===B.SHADOWFLOAT&&(r.needRebuild=!0),B.SHADOWFLOAT=r.shadowEnabled&&(q.textureFloatRender&&q.textureFloatLinearFiltering||q.textureHalfFloatRender&&q.textureHalfFloatLinearFiltering),B.LIGHTMAPEXCLUDED=r.lightmapMode,r.needRebuild&&B.rebuild(),r.needNormals}function X(R,J,B,Q,h,y,r){switch(r.needNormals=!0,void 0===h["LIGHT"+Q]&&(r.needRebuild=!0),h["LIGHT"+Q]=!0,h["SPOTLIGHT"+Q]=!1,h["HEMILIGHT"+Q]=!1,h["POINTLIGHT"+Q]=!1,h["DIRLIGHT"+Q]=!1,h["AREALIGHT"+Q]=!1,B.prepareLightSpecificDefines(h,Q),h["LIGHT_FALLOFF_PHYSICAL"+Q]=!1,h["LIGHT_FALLOFF_GLTF"+Q]=!1,h["LIGHT_FALLOFF_STANDARD"+Q]=!1,B.falloffType){case N.b.FALLOFF_GLTF:h["LIGHT_FALLOFF_GLTF"+Q]=!0;break;case N.b.FALLOFF_PHYSICAL:h["LIGHT_FALLOFF_PHYSICAL"+Q]=!0;break;case N.b.FALLOFF_STANDARD:h["LIGHT_FALLOFF_STANDARD"+Q]=!0}if(y&&!B.XD.equalsFloats(0,0,0)&&(r.specularEnabled=!0),h["SHADOW"+Q]=!1,h["SHADOWCSM"+Q]=!1,h["SHADOWCSMDEBUG"+Q]=!1,h["SHADOWCSMNUM_CASCADES"+Q]=!1,h["SHADOWCSMUSESHADOWMAXZ"+Q]=!1,h["SHADOWCSMNOBLEND"+Q]=!1,h["SHADOWCSM_RIGHTHANDED"+Q]=!1,h["SHADOWPCF"+Q]=!1,h["SHADOWPCSS"+Q]=!1,h["SHADOWPOISSON"+Q]=!1,h["SHADOWESM"+Q]=!1,h["SHADOWCLOSEESM"+Q]=!1,h["SHADOWCUBE"+Q]=!1,h["SHADOWLOWQUALITY"+Q]=!1,h["SHADOWMEDIUMQUALITY"+Q]=!1,J&&J.receiveShadows&&R.shadowsEnabled&&B.shadowEnabled){const J=B.getShadowGenerator(R.activeCamera)??B.getShadowGenerator();if(J){const R=J.getShadowMap();R&&R.renderList&&R.renderList.length>0&&(r.shadowEnabled=!0,J.prepareDefines(h,Q))}}B.lightmapMode!=N.b.LIGHTMAP_DEFAULT?(r.lightmapMode=!0,h["LIGHTMAPEXCLUDED"+Q]=!0,h["LIGHTMAPNOSPECULAR"+Q]=B.lightmapMode==N.b.LIGHTMAP_SHADOWSONLY):(h["LIGHTMAPEXCLUDED"+Q]=!1,h["LIGHTMAPNOSPECULAR"+Q]=!1)}function c(R,J,B,Q,h){let y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=function(R,J){let B=!1;if(R.activeCamera){const Q=J.CAMERA_ORTHOGRAPHIC?1:0,h=J.CAMERA_PERSPECTIVE?1:0,y=1===R.activeCamera.mode?1:0,N=0===R.activeCamera.mode?1:0;(Q^y||h^N)&&(J.CAMERA_ORTHOGRAPHIC=1===y,J.CAMERA_PERSPECTIVE=1===N,B=!0)}return B}(R,Q);!1!==y&&(q=(0,r.i)(B,R,Q)),Q.DEPTHPREPASS!==!J.getColorWrite()&&(Q.DEPTHPREPASS=!Q.DEPTHPREPASS,q=!0),Q.INSTANCES!==h&&(Q.INSTANCES=h,q=!0),Q.THIN_INSTANCES!==N&&(Q.THIN_INSTANCES=N,q=!0),q&&Q.markAsUnprocessed()}function z(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]&&arguments[4],y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],N=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!J._areAttributesDirty&&J._needNormals===J._normals&&J._needUVs===J._uvs)return!1;J._normals=J._needNormals,J._uvs=J._needUVs,J.NORMAL=J._needNormals&&R.isVerticesDataPresent("normal"),J._needNormals&&R.isVerticesDataPresent("tangent")&&(J.TANGENT=!0);for(let r=1;r<=6;++r)J["UV"+r]=!!J._needUVs&&R.isVerticesDataPresent(`uv${1===r?"":r}`);if(B){const B=R.useVertexColors&&R.isVerticesDataPresent("color");J.VERTEXCOLOR=B,J.VERTEXALPHA=R.hasVertexAlpha&&B&&y}return R.isVerticesDataPresent("instanceColor")&&(R.hasInstances||R.hasThinInstances)&&(J.INSTANCESCOLOR=!0),Q&&function(R,J){if(R.useBones&&R.computeBonesUsingShaders&&R.skeleton){J.NUM_BONE_INFLUENCERS=R.numBoneInfluencers;const B=void 0!==J.BONETEXTURE;if(R.skeleton.isUsingTextureForMatrices&&B)J.BONETEXTURE=!0;else{J.BonesPerMesh=R.skeleton.bones.length+1,J.BONETEXTURE=!B&&void 0;const Q=R.IR().prePassRenderer;if(Q&&Q.enabled){const B=-1===Q.excludedSkinnedMesh.indexOf(R);J.BONES_VELOCITY_ENABLED=B}}}else J.NUM_BONE_INFLUENCERS=0,J.BonesPerMesh=0,void 0!==J.BONETEXTURE&&(J.BONETEXTURE=!1)}(R,J),h&&function(R,J){const B=R.morphTargetManager;B?(J.MORPHTARGETS_UV=B.supportsUVs&&J.UV1,J.MORPHTARGETS_UV2=B.supportsUV2s&&J.UV2,J.MORPHTARGETS_TANGENT=B.supportsTangents&&J.TANGENT,J.MORPHTARGETS_NORMAL=B.supportsNormals&&J.NORMAL,J.MORPHTARGETS_POSITION=B.supportsPositions,J.MORPHTARGETS_COLOR=B.supportsColors,J.MORPHTARGETTEXTURE_HASUVS=B.hasUVs,J.MORPHTARGETTEXTURE_HASUV2S=B.hasUV2s,J.MORPHTARGETTEXTURE_HASTANGENTS=B.hasTangents,J.MORPHTARGETTEXTURE_HASNORMALS=B.hasNormals,J.MORPHTARGETTEXTURE_HASPOSITIONS=B.hasPositions,J.MORPHTARGETTEXTURE_HASCOLORS=B.hasColors,J.NUM_MORPH_INFLUENCERS=B.numMaxInfluencers||B.numInfluencers,J.MORPHTARGETS=J.NUM_MORPH_INFLUENCERS>0,J.MORPHTARGETS_TEXTURE=B.isUsingTextureForTargets):(J.MORPHTARGETS_UV=!1,J.MORPHTARGETS_UV2=!1,J.MORPHTARGETS_TANGENT=!1,J.MORPHTARGETS_NORMAL=!1,J.MORPHTARGETS_POSITION=!1,J.MORPHTARGETS_COLOR=!1,J.MORPHTARGETTEXTURE_HASUVS=!1,J.MORPHTARGETTEXTURE_HASUV2S=!1,J.MORPHTARGETTEXTURE_HASTANGENTS=!1,J.MORPHTARGETTEXTURE_HASNORMALS=!1,J.MORPHTARGETTEXTURE_HASPOSITIONS=!1,J.MORPHTARGETTEXTURE_HAS_COLORS=!1,J.MORPHTARGETS=!1,J.NUM_MORPH_INFLUENCERS=0)}(R,J),N&&function(R,J){const B=R.bakedVertexAnimationManager;J.BAKED_VERTEX_ANIMATION_TEXTURE=!(!B||!B.isEnabled)}(R,J),!0}function p(R,J){if(R.activeCamera){const B=J.MULTIVIEW;J.MULTIVIEW=null!==R.activeCamera.outputRenderTarget&&R.activeCamera.outputRenderTarget.getViewCount()>1,J.MULTIVIEW!=B&&J.markAsUnprocessed()}}function i(R,J,B){const Q=J.ORDER_INDEPENDENT_TRANSPARENCY,h=J.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;J.ORDER_INDEPENDENT_TRANSPARENCY=R.useOrderIndependentTransparency&&B,J.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!R.getEngine().getCaps().textureFloatLinearFiltering,Q===J.ORDER_INDEPENDENT_TRANSPARENCY&&h===J.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||J.markAsUnprocessed()}function W(R,J,B){const Q=J.PREPASS;if(!J._arePrePassDirty)return;const h=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(R.prePassRenderer&&R.prePassRenderer.enabled&&B){J.PREPASS=!0,J.SCENE_MRT_COUNT=R.prePassRenderer.mrtCount,J.PREPASS_NORMAL_WORLDSPACE=R.prePassRenderer.generateNormalsInWorldSpace,J.PREPASS_COLOR=!0,J.PREPASS_COLOR_INDEX=0;for(let B=0;B<h.length;B++){const Q=R.prePassRenderer.getIndex(h[B].type);-1!==Q?(J[h[B].define]=!0,J[h[B].index]=Q):J[h[B].define]=!1}}else{J.PREPASS=!1;for(let R=0;R<h.length;R++)J[h[R].define]=!1}J.PREPASS!=Q&&(J.markAsUnprocessed(),J.markAsImageProcessingDirty())}function k(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];h&&h.push("Light"+R),y||(J.push("vLightData"+R,"vLightDiffuse"+R,"vLightSpecular"+R,"vLightDirection"+R,"vLightWidth"+R,"vLightHeight"+R,"vLightFalloff"+R,"vLightGround"+R,"lightMatrix"+R,"shadowsInfo"+R,"depthValues"+R),B.push("shadowTexture"+R),B.push("depthTexture"+R),J.push("viewFrustumZ"+R,"cascadeBlendFactor"+R,"lightSizeUVCorrection"+R,"depthCorrection"+R,"penumbraDarkness"+R,"frustumLengths"+R),Q&&(B.push("projectionLightTexture"+R),J.push("textureProjectionMatrix"+R)),N&&B.push("iesLightTexture"+R))}function Y(R,J,B){let Q,h,y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(R.uniformsNames){const N=R;Q=N.uniformsNames,h=N.uniformBuffersNames,J=N.samplers,B=N.defines,y=N.maxSimultaneousLights||0}else Q=R,J||(J=[]);for(let N=0;N<y&&B["LIGHT"+N];N++)k(N,Q,J,B["PROJECTEDLIGHTTEXTURE"+N],h,!1,B["IESLIGHTTEXTURE"+N]);B.NUM_MORPH_INFLUENCERS&&(Q.push("morphTargetInfluences"),Q.push("morphTargetCount")),B.BAKED_VERTEX_ANIMATION_TEXTURE&&(Q.push("bakedVertexAnimationSettings"),Q.push("bakedVertexAnimationTextureSizeInverted"),Q.push("bakedVertexAnimationTime"),J.push("bakedVertexAnimationTexture"))}},11495:(R,J,B)=>{B.d(J,{d:()=>y});var Q=B(11186),h=B(11504);class y extends h.b{constructor(R,J){let B=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(R,J,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new Q.Matrix,this._storeEffectOnSubMeshes=B}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(R,J){return!!R&&(!this._storeEffectOnSubMeshes||(!R.Fh||0===R.Fh.length||this.isReadyForSubMesh(R,R.Fh[0],J)))}_isReadyForSubMesh(R){const J=R.materialDefines;return!(this.checkReadyOnEveryCall||!R.effect||!J||J._renderId!==this.IR().getRenderId())}bindOnlyWorldMatrix(R){this._activeEffect.setMatrix("world",R)}bindOnlyNormalMatrix(R){this._activeEffect.setMatrix("normalMatrix",R)}bind(R,J){J&&this.bindForSubMesh(R,J,J.Fh[0])}_afterBind(R){let J=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,B=arguments.length>2?arguments[2]:void 0;super._afterBind(R,J,B),this.IR()._cachedEffect=J,B?B._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return B._drawWrapper._forceRebindOnNextCall||R.isCachedMaterialInvalid(this,J,Q)}dispose(R,J,B){this._activeEffect=void 0,super.dispose(R,J,B)}}},11537:(R,J,B)=>{B.d(J,{e:()=>r,i:()=>q});var Q=B(11167),h=B(11186),y=B(11176);class N{static extractMinAndMaxIndexed(R,J,B,Q,h,y){for(let N=B;N<B+Q;N++){const B=3*J[N],Q=R[B],r=R[B+1],q=R[B+2];h.minimizeInPlaceFromFloats(Q,r,q),y.maximizeInPlaceFromFloats(Q,r,q)}}static extractMinAndMax(R,J,B,Q,h,y){for(let N=J,r=J*Q;N<J+B;N++,r+=Q){const J=R[r],B=R[r+1],Q=R[r+2];h.minimizeInPlaceFromFloats(J,B,Q),y.maximizeInPlaceFromFloats(J,B,Q)}}}function r(R,J,B,Q){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const r=new h.nJ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new h.nJ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return N.extractMinAndMaxIndexed(R,J,B,Q,r,q),y&&(r.x-=r.x*y.x+y.y,r.y-=r.y*y.x+y.y,r.z-=r.z*y.x+y.y,q.x+=q.x*y.x+y.y,q.y+=q.y*y.x+y.y,q.z+=q.z*y.x+y.y),{minimum:r,maximum:q}}function q(R,J,B){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,y=arguments.length>4?arguments[4]:void 0;const r=new h.nJ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new h.nJ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return y||(y=3),N.extractMinAndMax(R,J,B,y,r,q),Q&&(r.x-=r.x*Q.x+Q.y,r.y-=r.y*Q.x+Q.y,r.z-=r.z*Q.x+Q.y,q.x+=q.x*Q.x+Q.y,q.y+=q.y*Q.x+Q.y,q.z+=q.z*Q.x+Q.y),{minimum:r,maximum:q}}(0,Q.e)([y.d.filter((function(){for(var R=arguments.length,J=new Array(R),B=0;B<R;B++)J[B]=arguments[B];let[Q,h]=J;return!Array.isArray(Q)&&!Array.isArray(h)}))],N,"extractMinAndMaxIndexed",null),(0,Q.e)([y.d.filter((function(){for(var R=arguments.length,J=new Array(R),B=0;B<R;B++)J[B]=arguments[B];let[Q]=J;return!Array.isArray(Q)}))],N,"extractMinAndMax",null)},11507:(R,J,B)=>{B.d(J,{d:()=>q});var Q=B(11262),h=B(11514),y=B(11517),N=B(11537),r=B(11301);class q{get materialDefines(){var R;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(R=this._getDrawWrapper())||void 0===R?void 0:R.defines}set materialDefines(R){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=R}_getDrawWrapper(R){let J=arguments.length>1&&void 0!==arguments[1]&&arguments[1];R=R??this._engine.currentRenderPassId;let B=this._drawWrappers[R];return!B&&J&&(this._drawWrappers[R]=B=new r.c(this._mesh.IR().getEngine())),B}_removeDrawWrapper(R){let J=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var B;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(B=this._drawWrappers[R])||void 0===B||B.dispose(J));this._drawWrappers[R]=void 0}get effect(){var R;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(R=this._getDrawWrapper())||void 0===R?void 0:R.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(R){this._mainDrawWrapperOverride=R}setEffect(R){let J=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,B=arguments.length>2?arguments[2]:void 0,Q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const h=this._drawWrapper;h.setEffect(R,J,Q),void 0!==B&&(h.materialContext=B),R||(h.defines=null,h.materialContext=void 0)}resetDrawCache(R){let J=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==R)return void this._removeDrawWrapper(R,!0,J);for(const R of this._drawWrappers)null===R||void 0===R||R.dispose(J)}this._drawWrappers=[]}static AddToMesh(R,J,B,Q,h,y,N){return new q(R,J,B,Q,h,y,N,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(R,J,B,Q,h,y,N){let r=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=R,this.verticesStart=J,this.verticesCount=B,this.indexStart=Q,this.indexCount=h,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=y,this._renderingMesh=N||y,q&&y.Fh.push(this),this._engine=this._mesh.IR().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=y.Fh.length-1,r&&(this.refreshBoundingInfo(),y.ny(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(R){return this._boundingInfo=R,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const R=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return R||this._renderingMesh}YR(){let R=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const J=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!J)return R&&this._mesh.IR()._hasDefaultMaterial?this._mesh.IR().defaultMaterial:null;if(this._isMultiMaterial(J)){const R=J.getSubMaterial(this.materialIndex);return this._currentMaterial!==R&&(this._currentMaterial=R,this.resetDrawCache()),R}return J}_isMultiMaterial(R){return void 0!==R.getSubMaterial}refreshBoundingInfo(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.py)return this;if(R||(R=this._renderingMesh.getVerticesData(Q.h.PositionKind)),!R)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const J=this._renderingMesh.hr();let B;if(0===this.indexStart&&this.indexCount===J.length){const R=this._renderingMesh.getBoundingInfo();B={minimum:R.minimum.clone(),maximum:R.maximum.clone()}}else B=(0,N.e)(R,J,this.indexStart,this.indexCount,this._renderingMesh.py.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(B.minimum,B.maximum):this._boundingInfo=new y.d(B.minimum,B.maximum),this}_checkCollision(R){return this.getBoundingInfo()._checkCollision(R)}updateBoundingInfo(R){let J=this.getBoundingInfo();return J||(this.refreshBoundingInfo(),J=this.getBoundingInfo()),J&&J.update(R),this}isInFrustum(R){const J=this.getBoundingInfo();return!!J&&J.isInFrustum(R,this._mesh.zl)}isCompletelyInFrustum(R){const J=this.getBoundingInfo();return!!J&&J.isCompletelyInFrustum(R)}render(R){return this._renderingMesh.render(this,R,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(R,J){if(!this._linesIndexBuffer){const B=6*Math.floor(this.indexCount/3),Q=this.verticesStart+this.verticesCount>65535?new Uint32Array(B):new Uint16Array(B);let h=0;if(0===R.length)for(let R=this.indexStart;R<this.indexStart+this.indexCount;R+=3)Q[h++]=R,Q[h++]=R+1,Q[h++]=R+1,Q[h++]=R+2,Q[h++]=R+2,Q[h++]=R;else for(let J=this.indexStart;J<this.indexStart+this.indexCount;J+=3)Q[h++]=R[J],Q[h++]=R[J+1],Q[h++]=R[J+1],Q[h++]=R[J+2],Q[h++]=R[J+2],Q[h++]=R[J];this._linesIndexBuffer=J.createIndexBuffer(Q),this._linesIndexCount=Q.length}return this._linesIndexBuffer}canIntersects(R){const J=this.getBoundingInfo();return!!J&&R.intersectsBox(J.boundingBox)}intersects(R,J,B,Q,h){const y=this.YR();if(!y)return null;let N=3,r=!1;switch(y.fillMode){case 3:case 5:case 6:case 8:return null;case 7:N=1,r=!0}return 4===y.fillMode?B.length?this._intersectLines(R,J,B,this._mesh.intersectionThreshold,Q):this._intersectUnIndexedLines(R,J,B,this._mesh.intersectionThreshold,Q):!B.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(R,J,B,Q,h):this._intersectTriangles(R,J,B,N,r,Q,h)}_intersectLines(R,J,B,Q,y){let N=null;for(let r=this.indexStart;r<this.indexStart+this.indexCount;r+=2){const q=J[B[r]],e=J[B[r+1]],D=R.intersectionSegment(q,e,Q);if(!(D<0)&&((y||!N||D<N.distance)&&(N=new h.e(null,null,D),N.faceId=r/2,y)))break}return N}_intersectUnIndexedLines(R,J,B,Q,y){let N=null;for(let r=this.verticesStart;r<this.verticesStart+this.verticesCount;r+=2){const B=J[r],q=J[r+1],e=R.intersectionSegment(B,q,Q);if(!(e<0)&&((y||!N||e<N.distance)&&(N=new h.e(null,null,e),N.faceId=r/2,y)))break}return N}_intersectTriangles(R,J,B,Q,h,y,N){let r=null,q=-1;for(let e=this.indexStart;e<this.indexStart+this.indexCount-(3-Q);e+=Q){q++;const Q=B[e],D=B[e+1],l=B[e+2];if(h&&4294967295===l){e+=2;continue}const E=J[Q],O=J[D],n=J[l];if(!E||!O||!n)continue;if(N&&!N(E,O,n,R,Q,D,l))continue;const P=R.intersectsTriangle(E,O,n);if(P){if(P.distance<0)continue;if((y||!r||P.distance<r.distance)&&(r=P,r.faceId=q,y))break}}return r}_intersectUnIndexedTriangles(R,J,B,Q,h){let y=null;for(let N=this.verticesStart;N<this.verticesStart+this.verticesCount;N+=3){const B=J[N],r=J[N+1],q=J[N+2];if(h&&!h(B,r,q,R,-1,-1,-1))continue;const e=R.intersectsTriangle(B,r,q);if(e){if(e.distance<0)continue;if((Q||!y||e.distance<y.distance)&&(y=e,y.faceId=N/3,Q))break}}return y}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(R,J){const B=new q(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,R,J,!1);if(!this.IsGlobal){const R=this.getBoundingInfo();if(!R)return B;B._boundingInfo=new y.d(R.minimum,R.maximum)}return B}dispose(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.IR().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const J=this._mesh.Fh.indexOf(this);this._mesh.Fh.splice(J,1),this.resetDrawCache(void 0,R)}getClassName(){return"SubMesh"}static CreateFromIndices(R,J,B,Q,h){let y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],N=Number.MAX_VALUE,r=-Number.MAX_VALUE;const e=(h||Q).hr();for(let q=J;q<J+B;q++){const R=e[q];R<N&&(N=R),R>r&&(r=R)}return new q(R,N,r-N+1,J,B,Q,h,y)}}}}]);