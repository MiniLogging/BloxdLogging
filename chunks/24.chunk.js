"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[24],{13107:(p,b,M)=>{M.d(b,{e:()=>h});class h{constructor(p,b,M){this.bu=p,this.bv=b,this.distance=M,this.faceId=0,this.subMeshId=0}}},13120:(p,b,M)=>{M.d(b,{c:()=>y});var h=M(12785),Q=M(12777),mp=M(12779);class y{constructor(p,b,M){this.vectors=(0,h.e)(8,Q.QM.Zero),this.center=Q.QM.Zero(),this.centerWorld=Q.QM.Zero(),this.extendSize=Q.QM.Zero(),this.extendSizeWorld=Q.QM.Zero(),this.directions=(0,h.e)(3,Q.QM.Zero),this.vectorsWorld=(0,h.e)(8,Q.QM.Zero),this.minimumWorld=Q.QM.Zero(),this.maximumWorld=Q.QM.Zero(),this.minimum=Q.QM.Zero(),this.maximum=Q.QM.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(p,b,M)}reConstruct(p,b,M){const h=p.x,mp=p.y,y=p.z,P=b.x,w=b.y,t=b.z,z=this.vectors;this.minimum.sb(h,mp,y),this.maximum.sb(P,w,t),z[0].sb(h,mp,y),z[1].sb(P,w,t),z[2].sb(P,mp,y),z[3].sb(h,w,y),z[4].sb(h,mp,t),z[5].sb(P,w,y),z[6].sb(h,w,t),z[7].sb(P,mp,t),b.addToRef(p,this.center).scaleInPlace(.5),b.subtractToRef(p,this.extendSize).scaleInPlace(.5),this._worldMatrix=M||Q.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(p){const b=y._TmpVector3,M=this.maximum.subtractToRef(this.minimum,b[0]),h=M.length();M.normalizeFromLength(h);const Q=h*p,mp=M.scaleInPlace(.5*Q),P=this.center.subtractToRef(mp,b[1]),w=this.center.addToRef(mp,b[2]);return this.reConstruct(P,w,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(p){const b=this.minimumWorld,M=this.maximumWorld,h=this.directions,mp=this.vectorsWorld,y=this.vectors;if(p.isIdentity()){b.mp(this.minimum),M.mp(this.maximum);for(let p=0;p<8;++p)mp[p].mp(y[p]);this.extendSizeWorld.mp(this.extendSize),this.centerWorld.mp(this.center)}else{b.Tb(Number.MAX_VALUE),M.Tb(-Number.MAX_VALUE);for(let h=0;h<8;++h){const P=mp[h];Q.QM.TransformCoordinatesToRef(y[h],p,P),b.minimizeInPlace(P),M.maximizeInPlace(P)}M.subtractToRef(b,this.extendSizeWorld).scaleInPlace(.5),M.addToRef(b,this.centerWorld).scaleInPlace(.5)}Q.QM.FromArrayToRef(p.m,0,h[0]),Q.QM.FromArrayToRef(p.m,4,h[1]),Q.QM.FromArrayToRef(p.m,8,h[2]),this._worldMatrix=p}isInFrustum(p){return y.IsInFrustum(this.vectorsWorld,p)}isCompletelyInFrustum(p){return y.IsCompletelyInFrustum(this.vectorsWorld,p)}intersectsPoint(p){const b=this.minimumWorld,M=this.maximumWorld,h=b.x,Q=b.y,y=b.z,P=M.x,w=M.y,t=M.z,z=p.x,x=p.y,S=p.z,X=-mp.d;return!(P-z<X||X>z-h)&&(!(w-x<X||X>x-Q)&&!(t-S<X||X>S-y))}intersectsSphere(p){return y.IntersectsSphere(this.minimumWorld,this.maximumWorld,p.centerWorld,p.radiusWorld)}intersectsMinMax(p,b){const M=this.minimumWorld,h=this.maximumWorld,Q=M.x,mp=M.y,y=M.z,P=h.x,w=h.y,t=h.z,z=p.x,x=p.y,S=p.z,X=b.x,c=b.y,J=b.z;return!(P<z||Q>X)&&(!(w<x||mp>c)&&!(t<S||y>J))}dispose(){var p,b;null===(p=this._drawWrapperFront)||void 0===p||p.dispose(),null===(b=this._drawWrapperBack)||void 0===b||b.dispose()}static Intersects(p,b){return p.intersectsMinMax(b.minimumWorld,b.maximumWorld)}static IntersectsSphere(p,b,M,h){const mp=y._TmpVector3[0];Q.QM.ClampToRef(M,p,b,mp);return Q.QM.DistanceSquared(M,mp)<=h*h}static IsCompletelyInFrustum(p,b){for(let M=0;M<6;++M){const h=b[M];for(let b=0;b<8;++b)if(h.dotCoordinate(p[b])<0)return!1}return!0}static IsInFrustum(p,b){for(let M=0;M<6;++M){let h=!0;const Q=b[M];for(let b=0;b<8;++b)if(Q.dotCoordinate(p[b])>=0){h=!1;break}if(h)return!1}return!0}}y._TmpVector3=(0,h.e)(3,Q.QM.Zero)},13111:(p,b,M)=>{M.d(b,{b:()=>x});var h=M(12785),Q=M(12777),mp=M(13120),y=M(13128);const P={min:0,max:0},w={min:0,max:0},t=(p,b,M)=>{const h=Q.QM.Dot(b.centerWorld,p),mp=Math.abs(Q.QM.Dot(b.directions[0],p))*b.extendSize.x+Math.abs(Q.QM.Dot(b.directions[1],p))*b.extendSize.y+Math.abs(Q.QM.Dot(b.directions[2],p))*b.extendSize.z;M.min=h-mp,M.max=h+mp},z=(p,b,M)=>(t(p,b,P),t(p,M,w),!(P.min>w.max||w.min>P.max));class x{constructor(p,b,M){this._isLocked=!1,this.boundingBox=new mp.c(p,b,M),this.boundingSphere=new y.e(p,b,M)}reConstruct(p,b,M){this.boundingBox.reConstruct(p,b,M),this.boundingSphere.reConstruct(p,b,M)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(p){this._isLocked=p}update(p){this._isLocked||(this.boundingBox._update(p),this.boundingSphere._update(p))}centerOn(p,b){const M=x._TmpVector3[0].mp(p).eS(b),h=x._TmpVector3[1].mp(p).addInPlace(b);return this.boundingBox.reConstruct(M,h,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(M,h,this.boundingBox.getWorldMatrix()),this}encapsulate(p){const b=Q.QM.Minimize(this.minimum,p),M=Q.QM.Maximize(this.maximum,p);return this.reConstruct(b,M,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(p){const b=Q.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(b);const M=Q.TmpVectors.QM[0];return Q.QM.TransformCoordinatesToRef(p.boundingBox.minimumWorld,b,M),this.encapsulate(M),Q.QM.TransformCoordinatesToRef(p.boundingBox.maximumWorld,b,M),this.encapsulate(M),this}scale(p){return this.boundingBox.scale(p),this.boundingSphere.scale(p),this}isInFrustum(p){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===b||3===b)&&this.boundingSphere.isCenterInFrustum(p))return!0;if(!this.boundingSphere.isInFrustum(p))return!1;return!(1!==b&&3!==b)||this.boundingBox.isInFrustum(p)}get diagonalLength(){const p=this.boundingBox;return p.maximumWorld.subtractToRef(p.minimumWorld,x._TmpVector3[0]).length()}isCompletelyInFrustum(p){return this.boundingBox.isCompletelyInFrustum(p)}_checkCollision(p){return p._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(p){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(p)&&!!this.boundingBox.intersectsPoint(p))}intersects(p,b){if(!y.e.Intersects(this.boundingSphere,p.boundingSphere))return!1;if(!mp.c.Intersects(this.boundingBox,p.boundingBox))return!1;if(!b)return!0;const M=this.boundingBox,h=p.boundingBox;return!!z(M.directions[0],M,h)&&(!!z(M.directions[1],M,h)&&(!!z(M.directions[2],M,h)&&(!!z(h.directions[0],M,h)&&(!!z(h.directions[1],M,h)&&(!!z(h.directions[2],M,h)&&(!!z(Q.QM.Cross(M.directions[0],h.directions[0]),M,h)&&(!!z(Q.QM.Cross(M.directions[0],h.directions[1]),M,h)&&(!!z(Q.QM.Cross(M.directions[0],h.directions[2]),M,h)&&(!!z(Q.QM.Cross(M.directions[1],h.directions[0]),M,h)&&(!!z(Q.QM.Cross(M.directions[1],h.directions[1]),M,h)&&(!!z(Q.QM.Cross(M.directions[1],h.directions[2]),M,h)&&(!!z(Q.QM.Cross(M.directions[2],h.directions[0]),M,h)&&(!!z(Q.QM.Cross(M.directions[2],h.directions[1]),M,h)&&!!z(Q.QM.Cross(M.directions[2],h.directions[2]),M,h))))))))))))))}}x._TmpVector3=(0,h.e)(2,Q.QM.Zero)},13128:(p,b,M)=>{M.d(b,{e:()=>mp});var h=M(12785),Q=M(12777);class mp{constructor(p,b,M){this.center=Q.QM.Zero(),this.centerWorld=Q.QM.Zero(),this.minimum=Q.QM.Zero(),this.maximum=Q.QM.Zero(),this.reConstruct(p,b,M)}reConstruct(p,b,M){this.minimum.mp(p),this.maximum.mp(b);const h=Q.QM.Distance(p,b);b.addToRef(p,this.center).scaleInPlace(.5),this.radius=.5*h,this._update(M||Q.Matrix.IdentityReadOnly)}scale(p){const b=this.radius*p,M=mp._TmpVector3,h=M[0].Tb(b),Q=this.center.subtractToRef(h,M[1]),y=this.center.addToRef(h,M[2]);return this.reConstruct(Q,y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(p){if(p.isIdentity())this.centerWorld.mp(this.center),this.radiusWorld=this.radius;else{Q.QM.TransformCoordinatesToRef(this.center,p,this.centerWorld);const b=mp._TmpVector3[0];Q.QM.TransformNormalFromFloatsToRef(1,1,1,p,b),this.radiusWorld=Math.max(Math.abs(b.x),Math.abs(b.y),Math.abs(b.z))*this.radius}}isInFrustum(p){const b=this.centerWorld,M=this.radiusWorld;for(let h=0;h<6;h++)if(p[h].dotCoordinate(b)<=-M)return!1;return!0}isCenterInFrustum(p){const b=this.centerWorld;for(let M=0;M<6;M++)if(p[M].dotCoordinate(b)<0)return!1;return!0}intersectsPoint(p){const b=Q.QM.DistanceSquared(this.centerWorld,p);return!(this.radiusWorld*this.radiusWorld<b)}static Intersects(p,b){const M=Q.QM.DistanceSquared(p.centerWorld,b.centerWorld),h=p.radiusWorld+b.radiusWorld;return!(h*h<M)}static CreateFromCenterAndRadius(p,b,M){this._TmpVector3[0].mp(p),this._TmpVector3[1].sb(0,0,b),this._TmpVector3[2].mp(p),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].eS(this._TmpVector3[1]);const h=new mp(this._TmpVector3[0],this._TmpVector3[2]);return h._worldMatrix=M||Q.Matrix.Identity(),h}}mp._TmpVector3=(0,h.e)(3,Q.QM.Zero)},13147:(p,b,M)=>{function h(p){-1===p.indexOf("vClipPlane")&&p.push("vClipPlane"),-1===p.indexOf("vClipPlane2")&&p.push("vClipPlane2"),-1===p.indexOf("vClipPlane3")&&p.push("vClipPlane3"),-1===p.indexOf("vClipPlane4")&&p.push("vClipPlane4"),-1===p.indexOf("vClipPlane5")&&p.push("vClipPlane5"),-1===p.indexOf("vClipPlane6")&&p.push("vClipPlane6")}function Q(p,b,M){const h=!!(p.clipPlane??b.clipPlane),Q=!!(p.clipPlane2??b.clipPlane2),mp=!!(p.clipPlane3??b.clipPlane3),y=!!(p.clipPlane4??b.clipPlane4),P=!!(p.clipPlane5??b.clipPlane5),w=!!(p.clipPlane6??b.clipPlane6);h&&M.push("#define CLIPPLANE"),Q&&M.push("#define CLIPPLANE2"),mp&&M.push("#define CLIPPLANE3"),y&&M.push("#define CLIPPLANE4"),P&&M.push("#define CLIPPLANE5"),w&&M.push("#define CLIPPLANE6")}function mp(p,b,M){let h=!1;const Q=!!(p.clipPlane??b.clipPlane),mp=!!(p.clipPlane2??b.clipPlane2),y=!!(p.clipPlane3??b.clipPlane3),P=!!(p.clipPlane4??b.clipPlane4),w=!!(p.clipPlane5??b.clipPlane5),t=!!(p.clipPlane6??b.clipPlane6);return M.CLIPPLANE!==Q&&(M.CLIPPLANE=Q,h=!0),M.CLIPPLANE2!==mp&&(M.CLIPPLANE2=mp,h=!0),M.CLIPPLANE3!==y&&(M.CLIPPLANE3=y,h=!0),M.CLIPPLANE4!==P&&(M.CLIPPLANE4=P,h=!0),M.CLIPPLANE5!==w&&(M.CLIPPLANE5=w,h=!0),M.CLIPPLANE6!==t&&(M.CLIPPLANE6=t,h=!0),h}function y(p,b,M){let h=b.clipPlane??M.clipPlane;P(p,"vClipPlane",h),h=b.clipPlane2??M.clipPlane2,P(p,"vClipPlane2",h),h=b.clipPlane3??M.clipPlane3,P(p,"vClipPlane3",h),h=b.clipPlane4??M.clipPlane4,P(p,"vClipPlane4",h),h=b.clipPlane5??M.clipPlane5,P(p,"vClipPlane5",h),h=b.clipPlane6??M.clipPlane6,P(p,"vClipPlane6",h)}function P(p,b,M){M&&p.setFloat4(b,M.normal.x,M.normal.y,M.normal.z,M.d)}M.d(b,{e:()=>h,i:()=>y,m:()=>mp,o:()=>Q})},13087:(p,b,M)=>{M.d(b,{d:()=>h});class h{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(p,b){this._defines[p]||(p<this._currentRank&&(this._currentRank=p),p>this._maxRank&&(this._maxRank=p),this._defines[p]=new Array),this._defines[p].push(b)}addCPUSkinningFallback(p,b){this._mesh=b,p<this._currentRank&&(this._currentRank=p),p>this._maxRank&&(this._maxRank=p)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(p,b){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,p=p.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),b._bonesComputationForcedToCPU=!0;const M=this._mesh.upp();for(let p=0;p<M.meshes.length;p++){const h=M.meshes[p];if(h.material){if(h.computeBonesUsingShaders&&0!==h.numBoneInfluencers)if(h.material.getEffect()===b)h.computeBonesUsingShaders=!1;else if(h.Lb)for(const p of h.Lb){if(p.effect===b){h.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&h.computeBonesUsingShaders&&h.numBoneInfluencers>0&&(h.computeBonesUsingShaders=!1)}}else{const b=this._defines[this._currentRank];if(b)for(let M=0;M<b.length;M++)p=p.replace("#define "+b[M],"");this._currentRank++}return p}}},13097:(p,b,M)=>{M.d(b,{b:()=>g});var h=M(12757),Q=M(12764),mp=M(12608),y=M(12617),P=M(12652),w=M(13100),t=M(13035),z=M(12622),x=M(12829),S=M(12888),X=M(12812);class c{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(p){this._func=p}get funcRef(){return this._funcRef}set funcRef(p){this._funcRef=p}get funcMask(){return this._funcMask}set funcMask(p){this._funcMask=p}get opStencilFail(){return this._opStencilFail}set opStencilFail(p){this._opStencilFail=p}get opDepthFail(){return this._opDepthFail}set opDepthFail(p){this._opDepthFail=p}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(p){this._opStencilDepthPass=p}get mask(){return this._mask}set mask(p){this._mask=p}get enabled(){return this._enabled}set enabled(p){this._enabled=p}getClassName(){return"MaterialStencilState"}copyTo(p){X.e.Clone((()=>p),this)}serialize(){return X.e.Serialize(this)}parse(p,b,M){X.e.Parse((()=>this),p,b,M)}}(0,h.e)([(0,Q.N)()],c.prototype,"func",null),(0,h.e)([(0,Q.N)()],c.prototype,"funcRef",null),(0,h.e)([(0,Q.N)()],c.prototype,"funcMask",null),(0,h.e)([(0,Q.N)()],c.prototype,"opStencilFail",null),(0,h.e)([(0,Q.N)()],c.prototype,"opDepthFail",null),(0,h.e)([(0,Q.N)()],c.prototype,"opStencilDepthPass",null),(0,h.e)([(0,Q.N)()],c.prototype,"mask",null),(0,h.e)([(0,Q.N)()],c.prototype,"enabled",null);var J=M(13143);class g{get _supportGlowLayer(){return!1}set _glowModeEnabled(p){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(p){if(this._alpha===p)return;const b=this._alpha;this._alpha=p,1!==b&&1!==p||this.yx(g.MiscDirtyFlag+g.PrePassDirtyFlag)}get alpha(){return this._alpha}set Bb(p){this._backFaceCulling!==p&&(this._backFaceCulling=p,this.yx(g.TextureDirtyFlag))}get Bb(){return this._backFaceCulling}set cullBackFaces(p){this._cullBackFaces!==p&&(this._cullBackFaces=p,this.yx(g.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(p){this._blockDirtyMechanism!==p&&(this._blockDirtyMechanism=p,p||this.XX())}atomicMaterialsUpdate(p){this.blockDirtyMechanism=!0;try{p(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(p){this._onDisposeObserver&&this.Xb.remove(this._onDisposeObserver),this._onDisposeObserver=this.Xb.add(p)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new y.d),this._onBindObservable}set onBind(p){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(p)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new y.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new y.d),this._onEffectCreatedObservable}set alphaMode(p){this._alphaMode!==p&&(this._alphaMode=p,this.yx(g.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(p){this._needDepthPrePass!==p&&(this._needDepthPrePass=p,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(p){this._fogEnabled!==p&&(this._fogEnabled=p,this.yx(g.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case g.WireFrameFillMode:case g.LineListDrawMode:case g.LineLoopDrawMode:case g.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(p){this.fillMode=p?g.WireFrameFillMode:g.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case g.PointFillMode:case g.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(p){this.fillMode=p?g.PointFillMode:g.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(p){this._fillMode!==p&&(this._fillMode=p,this.yx(g.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(p){const b=this.upp().getEngine().getCaps().fragmentDepthSupported;p&&!b&&z.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=p&&b,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(p){this._drawWrapper=p}constructor(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Xb=new y.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.cb=new c,this._useUBO=!1,this._fillMode=g.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=p;const Q=b||P.c.LastCreatedScene;Q&&(this._scene=Q,this._dirtyCallbacks={},this._forceGLSL=h,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=p||mp.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new S.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new t.b(this._scene.getEngine(),void 0,void 0,p),this._useUBO=this.upp().getEngine().supportsUniformBuffers,this._createUniformBuffer(),M||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),g.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var p;const b=this.upp().getEngine();null===(p=this._uniformBuffer)||void 0===p||p.dispose(),b.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new t.b(b,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new t.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(p){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.XX(),this.checkReadyOnlyOnce=!0}unfreeze(){this.XX(),this.checkReadyOnlyOnce=!1}isReady(p,b){return!0}isReadyForSubMesh(p,b,M){const h=b.materialDefines;return!!h&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=h,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}upp(){return this._scene}_getEffectiveOrientation(p){return null!==this.sideOrientation?this.sideOrientation:p.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(p){this._transparencyMode!==p&&(this._transparencyMode=p,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===g.MATERIAL_ALPHABLEND||this._transparencyMode===g.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===g.MATERIAL_ALPHATEST||this._transparencyMode===g.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===g.MATERIAL_OPAQUE||this._transparencyMode===g.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(p){return this._hasTransparencyMode?this._transparencyModeIsBlend:p.visibility<1||!this._disableAlphaBlending&&(p.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(p){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(p)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}XX(){let p=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=this.upp().meshes;for(const M of b)if(M.Lb)for(const b of M.Lb)if(b.Tp()===this)for(const M of b._drawWrappers)M&&this._materialContext===M.materialContext&&(M._wasPreviouslyReady=!1,M._wasPreviouslyUsingInstances=null,M._forceRebindOnNextCall=p);p&&this.yx(g.AllDirtyFlag)}_preBind(p){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const M=this._scene.getEngine(),h=(null==b?this.sideOrientation:b)===g.ClockWiseSideOrientation;return M.enableEffect(p||this._getDrawWrapper()),M.setState(this.Bb,this.zOffset,!1,h,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.cb,this.zOffsetUnits),h}bind(p,b){}buildUniformLayout(){const p=this._uniformBuffer;this._eventInfo.ubo=p,this._callbackPluginEventGeneric(8,this._eventInfo),p.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(p,b,M){const h=M._drawWrapper;this._eventInfo.subMesh=M,this._callbackPluginEventBindForSubMesh(this._eventInfo),h._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(p){}bindView(p){this._useUBO?this._needToBindSceneUbo=!0:p.setMatrix("view",this.upp().getViewMatrix())}bindViewProjection(p){this._useUBO?this._needToBindSceneUbo=!0:(p.setMatrix("viewProjection",this.upp().getTransformMatrix()),p.setMatrix("projection",this.upp().getProjectionMatrix()))}bindEyePosition(p,b){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(p,b)}_afterBind(p){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&b&&(this._needToBindSceneUbo=!1,(0,J.u)(b,this.upp().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=p?p.visibility:1,this._onBindObservable&&p&&this._onBindObservable.notifyObservers(p),this.disableDepthWrite){const p=this._scene.getEngine();this._cachedDepthWriteState=p.getDepthWrite(),p.setDepthWrite(!1)}if(this.disableColorWrite){const p=this._scene.getEngine();this._cachedColorWriteState=p.getColorWrite(),p.setColorWrite(!1)}if(0!==this.depthFunction){const p=this._scene.getEngine();this._cachedDepthFunctionState=p.getDepthFunction()||0,p.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(p){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=p,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(p){return null}_clonePlugins(p,b){const M={};if(this._serializePlugins(M),g._ParsePlugins(M,p,this._scene,b),this.pluginManager)for(const h of this.pluginManager._plugins){const b=p.pluginManager.getPlugin(h.name);b&&h.copyTo(b)}}getBindedMeshes(){if(this.meshMap){const p=[];for(const b in this.meshMap){const M=this.meshMap[b];M&&p.push(M)}return p}return this._scene.meshes.filter((p=>p.material===this))}forceCompilation(p,b,M,h){const Q={clipPlane:!1,useInstances:!1,...M},mp=this.upp(),y=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const P=()=>{if(!this._scene||!this._scene.getEngine())return;const M=mp.clipPlane;if(Q.clipPlane&&(mp.clipPlane=new x.e(0,0,0,1)),this._storeEffectOnSubMeshes){let M=!0,mp=null;if(p.Lb){const b=new w.d(0,0,0,0,0,p,void 0,!1,!1);b.materialDefines&&(b.materialDefines._renderId=-1),this.isReadyForSubMesh(p,b,Q.useInstances)||(b.effect&&b.effect.getCompilationError()&&b.effect.allFallbacksProcessed()?mp=b.effect.getCompilationError():(M=!1,setTimeout(P,16)))}M&&(this.allowShaderHotSwapping=y,mp&&h&&h(mp),b&&b(this))}else this.isReady()?(this.allowShaderHotSwapping=y,b&&b(this)):setTimeout(P,16);Q.clipPlane&&(mp.clipPlane=M)};P()}async forceCompilationAsync(p,b){return await new Promise(((M,h)=>{this.forceCompilation(p,(()=>{M()}),b,(p=>{h(p)}))}))}yx(p){this.upp().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(g._DirtyCallbackArray.length=0,p&g.ImageProcessingDirtyFlag&&g._DirtyCallbackArray.push(g._ImageProcessingDirtyCallBack),p&g.TextureDirtyFlag&&g._DirtyCallbackArray.push(g._TextureDirtyCallBack),p&g.LightDirtyFlag&&g._DirtyCallbackArray.push(g._LightsDirtyCallBack),p&g.FresnelDirtyFlag&&g._DirtyCallbackArray.push(g._FresnelDirtyCallBack),p&g.AttributesDirtyFlag&&g._DirtyCallbackArray.push(g._AttributeDirtyCallBack),p&g.MiscDirtyFlag&&g._DirtyCallbackArray.push(g._MiscDirtyCallBack),p&g.PrePassDirtyFlag&&g._DirtyCallbackArray.push(g._PrePassDirtyCallBack),g._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(g._RunDirtyCallBacks),this.upp().resetCachedMaterial())}resetDrawCache(){const p=this.upp().meshes;for(const b of p)if(b.Lb)for(const p of b.Lb)p.Tp()===this&&p.resetDrawCache()}_markAllSubMeshesAsDirty(p){const b=this.upp();if(b.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const M=b.meshes;for(const h of M)if(h.Lb)for(const M of h.Lb){if((M.Tp()||(b._hasDefaultMaterial?b.defaultMaterial:null))===this)for(const b of M._drawWrappers)b&&b.defines&&b.defines.markAllAsDirty&&this._materialContext===b.materialContext&&p(b.defines)}}_markScenePrePassDirty(){if(this.upp().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const p=this.upp().enablePrePassRenderer();p&&p.yx()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(g._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(g._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(g._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(g._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(g._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(g._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(g._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(g._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(g._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(g._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const p=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Xb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(p)}))}}setPrePassRenderer(p){return!1}dispose(p,b,M){const h=this.upp();if(h.stopAnimation(this),h.freeProcessedMaterials(),h.removeMaterial(this),this._eventInfo.forceDisposeTextures=b,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const p=this._parentContainer.materials.indexOf(this);p>-1&&this._parentContainer.materials.splice(p,1),this._parentContainer=null}if(!0!==M)if(this.meshMap)for(const Q in this.meshMap){const p=this.meshMap[Q];this._disposeMeshResources(p)}else{const p=h.meshes;for(const b of p)this._disposeMeshResources(b)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Xb.notifyObservers(this),this.Xb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(p){if(!p)return;const b=p.Ub,M=p._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(p.Lb&&M)for(const Q of p.Lb){const p=Q._drawWrappers;for(let mp=0;mp<p.length;mp++){var h;const y=null===(h=p[mp])||void 0===h?void 0:h.effect;if(!y)continue;M[mp]===this&&(null===b||void 0===b||b._releaseVertexArrayObject(y),Q._removeDrawWrapper(mp,!0,!0))}}}else null===b||void 0===b||b._releaseVertexArrayObject(this._drawWrapper.effect);p.material!==this||p.sourceMesh||(p.material=null)}serialize(){const p=X.e.Serialize(this);return p.cb=this.cb.serialize(),p.uniqueId=this.uniqueId,this._serializePlugins(p),p}_serializePlugins(p){if(p.plugins={},this.pluginManager)for(const b of this.pluginManager._plugins)b.doNotSerialize||(p.plugins[b.getClassName()]=b.serialize())}static Parse(p,b,M){if(p.customType){if("BABYLON.PBRMaterial"===p.customType&&p.overloadedAlbedo&&(p.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return z.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else p.customType="BABYLON.StandardMaterial";const h=mp.Tools.Instantiate(p.customType).Parse(p,b,M);return h._loadedUniqueId=p.uniqueId,h}static _ParsePlugins(p,b,M,h){if(p.plugins)for(const P in p.plugins){var Q,y;const w=p.plugins[P];let t=null===(Q=b.pluginManager)||void 0===Q?void 0:Q.getPlugin(w.name);if(!t){const p=mp.Tools.Instantiate("BABYLON."+P);p&&(t=new p(b))}null===(y=t)||void 0===y||y.parse(w,M,h)}}}g.TriangleFillMode=0,g.WireFrameFillMode=1,g.PointFillMode=2,g.PointListDrawMode=3,g.LineListDrawMode=4,g.LineLoopDrawMode=5,g.LineStripDrawMode=6,g.TriangleStripDrawMode=7,g.TriangleFanDrawMode=8,g.ClockWiseSideOrientation=0,g.CounterClockWiseSideOrientation=1,g.ImageProcessingDirtyFlag=64,g.TextureDirtyFlag=1,g.LightDirtyFlag=2,g.FresnelDirtyFlag=4,g.AttributesDirtyFlag=8,g.MiscDirtyFlag=16,g.PrePassDirtyFlag=32,g.AllDirtyFlag=127,g.MATERIAL_OPAQUE=0,g.MATERIAL_ALPHATEST=1,g.MATERIAL_ALPHABLEND=2,g.MATERIAL_ALPHATESTANDBLEND=3,g.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,g.MATERIAL_NORMALBLENDMETHOD_RNM=1,g.OnEventObservable=new y.d,g._AllDirtyCallBack=p=>p.markAllAsDirty(),g._ImageProcessingDirtyCallBack=p=>p.markAsImageProcessingDirty(),g._TextureDirtyCallBack=p=>p.markAsTexturesDirty(),g._FresnelDirtyCallBack=p=>p.markAsFresnelDirty(),g._MiscDirtyCallBack=p=>p.markAsMiscDirty(),g._PrePassDirtyCallBack=p=>p.markAsPrePassDirty(),g._LightsDirtyCallBack=p=>p.markAsLightDirty(),g._AttributeDirtyCallBack=p=>p.markAsAttributesDirty(),g._FresnelAndMiscDirtyCallBack=p=>{g._FresnelDirtyCallBack(p),g._MiscDirtyCallBack(p)},g._TextureAndMiscDirtyCallBack=p=>{g._TextureDirtyCallBack(p),g._MiscDirtyCallBack(p)},g._DirtyCallbackArray=[],g._RunDirtyCallBacks=p=>{for(const b of g._DirtyCallbackArray)b(p)},(0,h.e)([(0,Q.N)()],g.prototype,"id",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"uniqueId",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"name",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"metadata",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"checkReadyOnEveryCall",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"checkReadyOnlyOnce",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"state",void 0),(0,h.e)([(0,Q.N)("alpha")],g.prototype,"_alpha",void 0),(0,h.e)([(0,Q.N)("Bb")],g.prototype,"_backFaceCulling",void 0),(0,h.e)([(0,Q.N)("cullBackFaces")],g.prototype,"_cullBackFaces",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"sideOrientation",void 0),(0,h.e)([(0,Q.N)("alphaMode")],g.prototype,"_alphaMode",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"_needDepthPrePass",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"disableDepthWrite",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"disableColorWrite",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"forceDepthWrite",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"depthFunction",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"separateCullingPass",void 0),(0,h.e)([(0,Q.N)("fogEnabled")],g.prototype,"_fogEnabled",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"pointSize",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"zOffset",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"zOffsetUnits",void 0),(0,h.e)([(0,Q.N)()],g.prototype,"pointsCloud",null),(0,h.e)([(0,Q.N)()],g.prototype,"fillMode",null),(0,h.e)([(0,Q.N)()],g.prototype,"useLogarithmicDepth",null),(0,h.e)([(0,Q.N)()],g.prototype,"transparencyMode",null)},13143:(p,b,M)=>{M.d(b,{B:()=>d,E:()=>a,F:()=>u,H:()=>e,L:()=>X,N:()=>S,O:()=>U,P:()=>Z,Q:()=>G,U:()=>f,W:()=>I,_:()=>q,cb:()=>B,d:()=>o,g:()=>x,gb:()=>s,ib:()=>T,k:()=>L,lb:()=>c,n:()=>z,r:()=>J,u:()=>g,y:()=>Y});var h=M(12622),Q=M(12820),mp=M(12652),y=M(13084),P=M(13147);const w=Q.wM.Black(),t={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function z(p,b,M){if(!p||p.LOGARITHMICDEPTH||p.indexOf&&p.indexOf("LOGARITHMICDEPTH")>=0){const p=M.activeCamera;1===p.mode&&h.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),b.setFloat("logarithmicDepthConstant",2/(Math.log(p.maxZ+1)/Math.LN2))}}function x(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]&&arguments[3];M&&p.fogEnabled&&(!b||b.applyFog)&&0!==p.fogMode&&(M.setFloat4("vFogInfos",p.fogMode,p.fogStart,p.fogEnd,p.fogDensity),h?(p.fogColor.toLinearSpaceToRef(w,p.getEngine().useExactSrgbConversions),M.setColor3("vFogColor",w)):M.setColor3("vFogColor",p.fogColor))}function S(p,b,M,h,Q,mp,y,P,w,z){const x=p.numMaxInfluencers||p.numInfluencers;return x<=0?0:(b.push("#define MORPHTARGETS"),p.hasPositions&&b.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),p.hasNormals&&b.push("#define MORPHTARGETTEXTURE_HASNORMALS"),p.hasTangents&&b.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),p.hasUVs&&b.push("#define MORPHTARGETTEXTURE_HASUVS"),p.hasUV2s&&b.push("#define MORPHTARGETTEXTURE_HASUV2S"),p.hasColors&&b.push("#define MORPHTARGETTEXTURE_HASCOLORS"),p.supportsPositions&&Q&&b.push("#define MORPHTARGETS_POSITION"),p.supportsNormals&&mp&&b.push("#define MORPHTARGETS_NORMAL"),p.supportsTangents&&y&&b.push("#define MORPHTARGETS_TANGENT"),p.supportsUVs&&P&&b.push("#define MORPHTARGETS_UV"),p.supportsUV2s&&w&&b.push("#define MORPHTARGETS_UV2"),p.supportsColors&&z&&b.push("#define MORPHTARGETS_COLOR"),b.push("#define NUM_MORPH_INFLUENCERS "+x),p.isUsingTextureForTargets&&b.push("#define MORPHTARGETS_TEXTURE"),t.NUM_MORPH_INFLUENCERS=x,t.NORMAL=mp,t.TANGENT=y,t.UV=P,t.UV2=w,t.COLOR=z,X(M,h,t,Q),x)}function X(p,b,M){let Q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const y=M.NUM_MORPH_INFLUENCERS;if(y>0&&mp.c.LastCreatedEngine){const P=mp.c.LastCreatedEngine.getCaps().maxVertexAttribs,w=b.morphTargetManager;if(null!==w&&void 0!==w&&w.isUsingTextureForTargets)return;const t=w&&w.supportsPositions&&Q,z=w&&w.supportsNormals&&M.NORMAL,x=w&&w.supportsTangents&&M.TANGENT,S=w&&w.supportsUVs&&M.UV1,X=w&&w.supportsUV2s&&M.UV2,c=w&&w.supportsColors&&M.VERTEXCOLOR;for(let M=0;M<y;M++)t&&p.push("position"+M),z&&p.push("normal"+M),x&&p.push("tangent"+M),S&&p.push("uv_"+M),X&&p.push("uv2_"+M),c&&p.push("color"+M),p.length>P&&h.d.Error("Cannot add more vertex attributes for mesh "+b.name)}}function c(p){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];p.push("world0"),p.push("world1"),p.push("world2"),p.push("world3"),b&&(p.push("previousWorld0"),p.push("previousWorld1"),p.push("previousWorld2"),p.push("previousWorld3"))}function J(p,b){const M=p.morphTargetManager;p&&M&&b.setFloatArray("morphTargetInfluences",M.influences)}function g(p,b){b.bindToEffect(p,"Scene")}function f(p,b,M){b._needUVs=!0,b[M]=!0,p.optimizeUVAllocation&&p.getTextureMatrix().isIdentityAs3x2()?(b[M+"DIRECTUV"]=p.coordinatesIndex+1,b["MAINUV"+(p.coordinatesIndex+1)]=!0):b[M+"DIRECTUV"]=0}function Y(p,b,M){const h=p.getTextureMatrix();b.Gb(M+"Matrix",h)}function a(p,b,M){M.BAKED_VERTEX_ANIMATION_TEXTURE&&M.INSTANCES&&p.push("bakedVertexAnimationSettingsInstanced")}function o(p,b,M){var h;if(b&&p&&(p.computeBonesUsingShaders&&b._bonesComputationForcedToCPU&&(p.computeBonesUsingShaders=!1),p.useBones&&p.computeBonesUsingShaders&&p.skeleton)){const Q=p.skeleton;if(Q.isUsingTextureForMatrices&&b.getUniformIndex("boneTextureWidth")>-1){const M=Q.getTransformMatrixTexture(p);b.setTexture("boneSampler",M),b.setFloat("boneTextureWidth",4*(Q.bones.length+1))}else{const mp=Q.getTransformMatrices(p);mp&&(b.setMatrices("mBones",mp),M&&p.upp().prePassRenderer&&p.upp().prePassRenderer.getIndex(2)&&(M.previousBones[p.uniqueId]||(M.previousBones[p.uniqueId]=mp.slice()),b.setMatrices("mPreviousBones",M.previousBones[p.uniqueId]),h=mp,M.previousBones[p.uniqueId].set(h)))}}}function l(p,b,M,h,Q){let mp=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];p._bindLight(b,M,h,Q,mp)}function L(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const mp=Math.min(b.lightSources.length,Q);for(let y=0;y<mp;y++){l(b.lightSources[y],y,p,M,"boolean"===typeof h?h:h.SPECULARTERM,b.receiveShadows)}}function u(p,b,M,h){M.NUM_BONE_INFLUENCERS>0&&(h.addCPUSkinningFallback(0,b),p.push("matricesIndices"),p.push("matricesWeights"),M.NUM_BONE_INFLUENCERS>4&&(p.push("matricesIndicesExtra"),p.push("matricesWeightsExtra")))}function e(p,b){(b.INSTANCES||b.THIN_INSTANCES)&&c(p,!!b.PREPASS_VELOCITY),b.INSTANCESCOLOR&&p.push("instanceColor")}function d(p,b){let M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,Q=0;for(let mp=0;mp<M&&p["LIGHT"+mp];mp++)mp>0&&(Q=h+mp,b.addFallback(Q,"LIGHT"+mp)),p.SHADOWS||(p["SHADOW"+mp]&&b.addFallback(h,"SHADOW"+mp),p["SHADOWPCF"+mp]&&b.addFallback(h,"SHADOWPCF"+mp),p["SHADOWPCSS"+mp]&&b.addFallback(h,"SHADOWPCSS"+mp),p["SHADOWPOISSON"+mp]&&b.addFallback(h,"SHADOWPOISSON"+mp),p["SHADOWESM"+mp]&&b.addFallback(h,"SHADOWESM"+mp),p["SHADOWCLOSEESM"+mp]&&b.addFallback(h,"SHADOWCLOSEESM"+mp));return Q++}function I(p,b,M,h,Q,mp,y){let P=arguments.length>7&&void 0!==arguments[7]&&arguments[7];y._areMiscDirty&&(y.LOGARITHMICDEPTH=M,y.POINTSIZE=h,y.FOG=Q&&function(p,b){return b.fogEnabled&&p.applyFog&&0!==b.fogMode}(p,b),y.NONUNIFORMSCALING=p.nonUniformScaling,y.ALPHATEST=mp,y.DECAL_AFTER_DETAIL=P)}function G(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,mp=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!M._areLightsDirty)return M._needNormals;let y=0;const P={needNormals:M._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(p.lightsEnabled&&!mp)for(const t of b.lightSources)if(v(p,b,t,y,M,h,P),y++,y===Q)break;M.SPECULARTERM=P.specularEnabled,M.SHADOWS=P.shadowEnabled;for(let t=y;t<Q;t++)void 0!==M["LIGHT"+t]&&(M["LIGHT"+t]=!1,M["HEMILIGHT"+t]=!1,M["POINTLIGHT"+t]=!1,M["DIRLIGHT"+t]=!1,M["SPOTLIGHT"+t]=!1,M["AREALIGHT"+t]=!1,M["SHADOW"+t]=!1,M["SHADOWCSM"+t]=!1,M["SHADOWCSMDEBUG"+t]=!1,M["SHADOWCSMNUM_CASCADES"+t]=!1,M["SHADOWCSMUSESHADOWMAXZ"+t]=!1,M["SHADOWCSMNOBLEND"+t]=!1,M["SHADOWCSM_RIGHTHANDED"+t]=!1,M["SHADOWPCF"+t]=!1,M["SHADOWPCSS"+t]=!1,M["SHADOWPOISSON"+t]=!1,M["SHADOWESM"+t]=!1,M["SHADOWCLOSEESM"+t]=!1,M["SHADOWCUBE"+t]=!1,M["SHADOWLOWQUALITY"+t]=!1,M["SHADOWMEDIUMQUALITY"+t]=!1);const w=p.getEngine().getCaps();return void 0===M.SHADOWFLOAT&&(P.needRebuild=!0),M.SHADOWFLOAT=P.shadowEnabled&&(w.textureFloatRender&&w.textureFloatLinearFiltering||w.textureHalfFloatRender&&w.textureHalfFloatLinearFiltering),M.LIGHTMAPEXCLUDED=P.lightmapMode,P.needRebuild&&M.rebuild(),P.needNormals}function v(p,b,M,h,Q,mp,P){switch(P.needNormals=!0,void 0===Q["LIGHT"+h]&&(P.needRebuild=!0),Q["LIGHT"+h]=!0,Q["SPOTLIGHT"+h]=!1,Q["HEMILIGHT"+h]=!1,Q["POINTLIGHT"+h]=!1,Q["DIRLIGHT"+h]=!1,Q["AREALIGHT"+h]=!1,M.prepareLightSpecificDefines(Q,h),Q["LIGHT_FALLOFF_PHYSICAL"+h]=!1,Q["LIGHT_FALLOFF_GLTF"+h]=!1,Q["LIGHT_FALLOFF_STANDARD"+h]=!1,M.falloffType){case y.e.FALLOFF_GLTF:Q["LIGHT_FALLOFF_GLTF"+h]=!0;break;case y.e.FALLOFF_PHYSICAL:Q["LIGHT_FALLOFF_PHYSICAL"+h]=!0;break;case y.e.FALLOFF_STANDARD:Q["LIGHT_FALLOFF_STANDARD"+h]=!0}if(mp&&!M.Hx.equalsFloats(0,0,0)&&(P.specularEnabled=!0),Q["SHADOW"+h]=!1,Q["SHADOWCSM"+h]=!1,Q["SHADOWCSMDEBUG"+h]=!1,Q["SHADOWCSMNUM_CASCADES"+h]=!1,Q["SHADOWCSMUSESHADOWMAXZ"+h]=!1,Q["SHADOWCSMNOBLEND"+h]=!1,Q["SHADOWCSM_RIGHTHANDED"+h]=!1,Q["SHADOWPCF"+h]=!1,Q["SHADOWPCSS"+h]=!1,Q["SHADOWPOISSON"+h]=!1,Q["SHADOWESM"+h]=!1,Q["SHADOWCLOSEESM"+h]=!1,Q["SHADOWCUBE"+h]=!1,Q["SHADOWLOWQUALITY"+h]=!1,Q["SHADOWMEDIUMQUALITY"+h]=!1,b&&b.receiveShadows&&p.shadowsEnabled&&M.shadowEnabled){const b=M.getShadowGenerator(p.activeCamera)??M.getShadowGenerator();if(b){const p=b.getShadowMap();p&&p.renderList&&p.renderList.length>0&&(P.shadowEnabled=!0,b.prepareDefines(Q,h))}}M.lightmapMode!=y.e.LIGHTMAP_DEFAULT?(P.lightmapMode=!0,Q["LIGHTMAPEXCLUDED"+h]=!0,Q["LIGHTMAPNOSPECULAR"+h]=M.lightmapMode==y.e.LIGHTMAP_SHADOWSONLY):(Q["LIGHTMAPEXCLUDED"+h]=!1,Q["LIGHTMAPNOSPECULAR"+h]=!1)}function Z(p,b,M,h,Q){let mp=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=function(p,b){let M=!1;if(p.activeCamera){const h=b.CAMERA_ORTHOGRAPHIC?1:0,Q=b.CAMERA_PERSPECTIVE?1:0,mp=1===p.activeCamera.mode?1:0,y=0===p.activeCamera.mode?1:0;(h^mp||Q^y)&&(b.CAMERA_ORTHOGRAPHIC=1===mp,b.CAMERA_PERSPECTIVE=1===y,M=!0)}return M}(p,h);!1!==mp&&(w=(0,P.m)(M,p,h)),h.DEPTHPREPASS!==!b.getColorWrite()&&(h.DEPTHPREPASS=!h.DEPTHPREPASS,w=!0),h.INSTANCES!==Q&&(h.INSTANCES=Q,w=!0),h.THIN_INSTANCES!==y&&(h.THIN_INSTANCES=y,w=!0),w&&h.markAsUnprocessed()}function U(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]&&arguments[4],mp=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],y=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!b._areAttributesDirty&&b._needNormals===b._normals&&b._needUVs===b._uvs)return!1;b._normals=b._needNormals,b._uvs=b._needUVs,b.NORMAL=b._needNormals&&p.isVerticesDataPresent("normal"),b._needNormals&&p.isVerticesDataPresent("tangent")&&(b.TANGENT=!0);for(let P=1;P<=6;++P)b["UV"+P]=!!b._needUVs&&p.isVerticesDataPresent(`uv${1===P?"":P}`);if(M){const M=p.useVertexColors&&p.isVerticesDataPresent("color");b.VERTEXCOLOR=M,b.VERTEXALPHA=p.hasVertexAlpha&&M&&mp}return p.isVerticesDataPresent("instanceColor")&&(p.hasInstances||p.hasThinInstances)&&(b.INSTANCESCOLOR=!0),h&&function(p,b){if(p.useBones&&p.computeBonesUsingShaders&&p.skeleton){b.NUM_BONE_INFLUENCERS=p.numBoneInfluencers;const M=void 0!==b.BONETEXTURE;if(p.skeleton.isUsingTextureForMatrices&&M)b.BONETEXTURE=!0;else{b.BonesPerMesh=p.skeleton.bones.length+1,b.BONETEXTURE=!M&&void 0;const h=p.upp().prePassRenderer;if(h&&h.enabled){const M=-1===h.excludedSkinnedMesh.indexOf(p);b.BONES_VELOCITY_ENABLED=M}}}else b.NUM_BONE_INFLUENCERS=0,b.BonesPerMesh=0,void 0!==b.BONETEXTURE&&(b.BONETEXTURE=!1)}(p,b),Q&&function(p,b){const M=p.morphTargetManager;M?(b.MORPHTARGETS_UV=M.supportsUVs&&b.UV1,b.MORPHTARGETS_UV2=M.supportsUV2s&&b.UV2,b.MORPHTARGETS_TANGENT=M.supportsTangents&&b.TANGENT,b.MORPHTARGETS_NORMAL=M.supportsNormals&&b.NORMAL,b.MORPHTARGETS_POSITION=M.supportsPositions,b.MORPHTARGETS_COLOR=M.supportsColors,b.MORPHTARGETTEXTURE_HASUVS=M.hasUVs,b.MORPHTARGETTEXTURE_HASUV2S=M.hasUV2s,b.MORPHTARGETTEXTURE_HASTANGENTS=M.hasTangents,b.MORPHTARGETTEXTURE_HASNORMALS=M.hasNormals,b.MORPHTARGETTEXTURE_HASPOSITIONS=M.hasPositions,b.MORPHTARGETTEXTURE_HASCOLORS=M.hasColors,b.NUM_MORPH_INFLUENCERS=M.numMaxInfluencers||M.numInfluencers,b.MORPHTARGETS=b.NUM_MORPH_INFLUENCERS>0,b.MORPHTARGETS_TEXTURE=M.isUsingTextureForTargets):(b.MORPHTARGETS_UV=!1,b.MORPHTARGETS_UV2=!1,b.MORPHTARGETS_TANGENT=!1,b.MORPHTARGETS_NORMAL=!1,b.MORPHTARGETS_POSITION=!1,b.MORPHTARGETS_COLOR=!1,b.MORPHTARGETTEXTURE_HASUVS=!1,b.MORPHTARGETTEXTURE_HASUV2S=!1,b.MORPHTARGETTEXTURE_HASTANGENTS=!1,b.MORPHTARGETTEXTURE_HASNORMALS=!1,b.MORPHTARGETTEXTURE_HASPOSITIONS=!1,b.MORPHTARGETTEXTURE_HAS_COLORS=!1,b.MORPHTARGETS=!1,b.NUM_MORPH_INFLUENCERS=0)}(p,b),y&&function(p,b){const M=p.bakedVertexAnimationManager;b.BAKED_VERTEX_ANIMATION_TEXTURE=!(!M||!M.isEnabled)}(p,b),!0}function q(p,b){if(p.activeCamera){const M=b.MULTIVIEW;b.MULTIVIEW=null!==p.activeCamera.outputRenderTarget&&p.activeCamera.outputRenderTarget.getViewCount()>1,b.MULTIVIEW!=M&&b.markAsUnprocessed()}}function B(p,b,M){const h=b.ORDER_INDEPENDENT_TRANSPARENCY,Q=b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;b.ORDER_INDEPENDENT_TRANSPARENCY=p.useOrderIndependentTransparency&&M,b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!p.getEngine().getCaps().textureFloatLinearFiltering,h===b.ORDER_INDEPENDENT_TRANSPARENCY&&Q===b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||b.markAsUnprocessed()}function s(p,b,M){const h=b.PREPASS;if(!b._arePrePassDirty)return;const Q=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(p.prePassRenderer&&p.prePassRenderer.enabled&&M){b.PREPASS=!0,b.SCENE_MRT_COUNT=p.prePassRenderer.mrtCount,b.PREPASS_NORMAL_WORLDSPACE=p.prePassRenderer.generateNormalsInWorldSpace,b.PREPASS_COLOR=!0,b.PREPASS_COLOR_INDEX=0;for(let M=0;M<Q.length;M++){const h=p.prePassRenderer.getIndex(Q[M].type);-1!==h?(b[Q[M].define]=!0,b[Q[M].index]=h):b[Q[M].define]=!1}}else{b.PREPASS=!1;for(let p=0;p<Q.length;p++)b[Q[p].define]=!1}b.PREPASS!=h&&(b.markAsUnprocessed(),b.markAsImageProcessingDirty())}function i(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,mp=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];Q&&Q.push("Light"+p),mp||(b.push("vLightData"+p,"vLightDiffuse"+p,"vLightSpecular"+p,"vLightDirection"+p,"vLightWidth"+p,"vLightHeight"+p,"vLightFalloff"+p,"vLightGround"+p,"lightMatrix"+p,"shadowsInfo"+p,"depthValues"+p),M.push("shadowTexture"+p),M.push("depthTexture"+p),b.push("viewFrustumZ"+p,"cascadeBlendFactor"+p,"lightSizeUVCorrection"+p,"depthCorrection"+p,"penumbraDarkness"+p,"frustumLengths"+p),h&&(M.push("projectionLightTexture"+p),b.push("textureProjectionMatrix"+p)),y&&M.push("iesLightTexture"+p))}function T(p,b,M){let h,Q,mp=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(p.uniformsNames){const y=p;h=y.uniformsNames,Q=y.uniformBuffersNames,b=y.samplers,M=y.defines,mp=y.maxSimultaneousLights||0}else h=p,b||(b=[]);for(let y=0;y<mp&&M["LIGHT"+y];y++)i(y,h,b,M["PROJECTEDLIGHTTEXTURE"+y],Q,!1,M["IESLIGHTTEXTURE"+y]);M.NUM_MORPH_INFLUENCERS&&(h.push("morphTargetInfluences"),h.push("morphTargetCount")),M.BAKED_VERTEX_ANIMATION_TEXTURE&&(h.push("bakedVertexAnimationSettings"),h.push("bakedVertexAnimationTextureSizeInverted"),h.push("bakedVertexAnimationTime"),b.push("bakedVertexAnimationTexture"))}},13094:(p,b,M)=>{M.d(b,{c:()=>mp});var h=M(12777),Q=M(13097);class mp extends Q.b{constructor(p,b){let M=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(p,b,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new h.Matrix,this._storeEffectOnSubMeshes=M}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(p,b){return!!p&&(!this._storeEffectOnSubMeshes||(!p.Lb||0===p.Lb.length||this.isReadyForSubMesh(p,p.Lb[0],b)))}_isReadyForSubMesh(p){const b=p.materialDefines;return!(this.checkReadyOnEveryCall||!p.effect||!b||b._renderId!==this.upp().getRenderId())}bindOnlyWorldMatrix(p){this._activeEffect.setMatrix("world",p)}bindOnlyNormalMatrix(p){this._activeEffect.setMatrix("normalMatrix",p)}bind(p,b){b&&this.bindForSubMesh(p,b,b.Lb[0])}_afterBind(p){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,M=arguments.length>2?arguments[2]:void 0;super._afterBind(p,b,M),this.upp()._cachedEffect=b,M?M._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return M._drawWrapper._forceRebindOnNextCall||p.isCachedMaterialInvalid(this,b,h)}dispose(p,b,M){this._activeEffect=void 0,super.dispose(p,b,M)}}},13136:(p,b,M)=>{M.d(b,{c:()=>P,d:()=>w});var h=M(12757),Q=M(12777),mp=M(12764);class y{static extractMinAndMaxIndexed(p,b,M,h,Q,mp){for(let y=M;y<M+h;y++){const M=3*b[y],h=p[M],P=p[M+1],w=p[M+2];Q.minimizeInPlaceFromFloats(h,P,w),mp.maximizeInPlaceFromFloats(h,P,w)}}static extractMinAndMax(p,b,M,h,Q,mp){for(let y=b,P=b*h;y<b+M;y++,P+=h){const b=p[P],M=p[P+1],h=p[P+2];Q.minimizeInPlaceFromFloats(b,M,h),mp.maximizeInPlaceFromFloats(b,M,h)}}}function P(p,b,M,h){let mp=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const P=new Q.QM(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),w=new Q.QM(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return y.extractMinAndMaxIndexed(p,b,M,h,P,w),mp&&(P.x-=P.x*mp.x+mp.y,P.y-=P.y*mp.x+mp.y,P.z-=P.z*mp.x+mp.y,w.x+=w.x*mp.x+mp.y,w.y+=w.y*mp.x+mp.y,w.z+=w.z*mp.x+mp.y),{minimum:P,maximum:w}}function w(p,b,M){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,mp=arguments.length>4?arguments[4]:void 0;const P=new Q.QM(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),w=new Q.QM(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return mp||(mp=3),y.extractMinAndMax(p,b,M,mp,P,w),h&&(P.x-=P.x*h.x+h.y,P.y-=P.y*h.x+h.y,P.z-=P.z*h.x+h.y,w.x+=w.x*h.x+h.y,w.y+=w.y*h.x+h.y,w.z+=w.z*h.x+h.y),{minimum:P,maximum:w}}(0,h.e)([mp.f.filter((function(){for(var p=arguments.length,b=new Array(p),M=0;M<p;M++)b[M]=arguments[M];let[h,Q]=b;return!Array.isArray(h)&&!Array.isArray(Q)}))],y,"extractMinAndMaxIndexed",null),(0,h.e)([mp.f.filter((function(){for(var p=arguments.length,b=new Array(p),M=0;M<p;M++)b[M]=arguments[M];let[h]=b;return!Array.isArray(h)}))],y,"extractMinAndMax",null)},13100:(p,b,M)=>{M.d(b,{d:()=>w});var h=M(12847),Q=M(13107),mp=M(13111),y=M(13136),P=M(12888);class w{get materialDefines(){var p;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(p=this._getDrawWrapper())||void 0===p?void 0:p.defines}set materialDefines(p){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=p}_getDrawWrapper(p){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];p=p??this._engine.currentRenderPassId;let M=this._drawWrappers[p];return!M&&b&&(this._drawWrappers[p]=M=new P.c(this._mesh.upp().getEngine())),M}_removeDrawWrapper(p){let b=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var M;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(M=this._drawWrappers[p])||void 0===M||M.dispose(b));this._drawWrappers[p]=void 0}get effect(){var p;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(p=this._getDrawWrapper())||void 0===p?void 0:p.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(p){this._mainDrawWrapperOverride=p}setEffect(p){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,M=arguments.length>2?arguments[2]:void 0,h=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Q=this._drawWrapper;Q.setEffect(p,b,h),void 0!==M&&(Q.materialContext=M),p||(Q.defines=null,Q.materialContext=void 0)}resetDrawCache(p){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==p)return void this._removeDrawWrapper(p,!0,b);for(const p of this._drawWrappers)null===p||void 0===p||p.dispose(b)}this._drawWrappers=[]}static AddToMesh(p,b,M,h,Q,mp,y){return new w(p,b,M,h,Q,mp,y,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(p,b,M,h,Q,mp,y){let P=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],w=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=p,this.verticesStart=b,this.verticesCount=M,this.indexStart=h,this.indexCount=Q,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=mp,this._renderingMesh=y||mp,w&&mp.Lb.push(this),this._engine=this._mesh.upp().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=mp.Lb.length-1,P&&(this.refreshBoundingInfo(),mp.Zb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(p){return this._boundingInfo=p,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const p=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return p||this._renderingMesh}Tp(){let p=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const b=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!b)return p&&this._mesh.upp()._hasDefaultMaterial?this._mesh.upp().defaultMaterial:null;if(this._isMultiMaterial(b)){const p=b.getSubMaterial(this.materialIndex);return this._currentMaterial!==p&&(this._currentMaterial=p,this.resetDrawCache()),p}return b}_isMultiMaterial(p){return void 0!==p.getSubMaterial}refreshBoundingInfo(){let p=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Ub)return this;if(p||(p=this._renderingMesh.getVerticesData(h.f.PositionKind)),!p)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const b=this._renderingMesh.qb();let M;if(0===this.indexStart&&this.indexCount===b.length){const p=this._renderingMesh.getBoundingInfo();M={minimum:p.minimum.clone(),maximum:p.maximum.clone()}}else M=(0,y.c)(p,b,this.indexStart,this.indexCount,this._renderingMesh.Ub.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(M.minimum,M.maximum):this._boundingInfo=new mp.b(M.minimum,M.maximum),this}_checkCollision(p){return this.getBoundingInfo()._checkCollision(p)}updateBoundingInfo(p){let b=this.getBoundingInfo();return b||(this.refreshBoundingInfo(),b=this.getBoundingInfo()),b&&b.update(p),this}isInFrustum(p){const b=this.getBoundingInfo();return!!b&&b.isInFrustum(p,this._mesh.HS)}isCompletelyInFrustum(p){const b=this.getBoundingInfo();return!!b&&b.isCompletelyInFrustum(p)}render(p){return this._renderingMesh.render(this,p,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(p,b){if(!this._linesIndexBuffer){const M=6*Math.floor(this.indexCount/3),h=this.verticesStart+this.verticesCount>65535?new Uint32Array(M):new Uint16Array(M);let Q=0;if(0===p.length)for(let p=this.indexStart;p<this.indexStart+this.indexCount;p+=3)h[Q++]=p,h[Q++]=p+1,h[Q++]=p+1,h[Q++]=p+2,h[Q++]=p+2,h[Q++]=p;else for(let b=this.indexStart;b<this.indexStart+this.indexCount;b+=3)h[Q++]=p[b],h[Q++]=p[b+1],h[Q++]=p[b+1],h[Q++]=p[b+2],h[Q++]=p[b+2],h[Q++]=p[b];this._linesIndexBuffer=b.createIndexBuffer(h),this._linesIndexCount=h.length}return this._linesIndexBuffer}canIntersects(p){const b=this.getBoundingInfo();return!!b&&p.intersectsBox(b.boundingBox)}intersects(p,b,M,h,Q){const mp=this.Tp();if(!mp)return null;let y=3,P=!1;switch(mp.fillMode){case 3:case 5:case 6:case 8:return null;case 7:y=1,P=!0}return 4===mp.fillMode?M.length?this._intersectLines(p,b,M,this._mesh.intersectionThreshold,h):this._intersectUnIndexedLines(p,b,M,this._mesh.intersectionThreshold,h):!M.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(p,b,M,h,Q):this._intersectTriangles(p,b,M,y,P,h,Q)}_intersectLines(p,b,M,h,mp){let y=null;for(let P=this.indexStart;P<this.indexStart+this.indexCount;P+=2){const w=b[M[P]],t=b[M[P+1]],z=p.intersectionSegment(w,t,h);if(!(z<0)&&((mp||!y||z<y.distance)&&(y=new Q.e(null,null,z),y.faceId=P/2,mp)))break}return y}_intersectUnIndexedLines(p,b,M,h,mp){let y=null;for(let P=this.verticesStart;P<this.verticesStart+this.verticesCount;P+=2){const M=b[P],w=b[P+1],t=p.intersectionSegment(M,w,h);if(!(t<0)&&((mp||!y||t<y.distance)&&(y=new Q.e(null,null,t),y.faceId=P/2,mp)))break}return y}_intersectTriangles(p,b,M,h,Q,mp,y){let P=null,w=-1;for(let t=this.indexStart;t<this.indexStart+this.indexCount-(3-h);t+=h){w++;const h=M[t],z=M[t+1],x=M[t+2];if(Q&&4294967295===x){t+=2;continue}const S=b[h],X=b[z],c=b[x];if(!S||!X||!c)continue;if(y&&!y(S,X,c,p,h,z,x))continue;const J=p.intersectsTriangle(S,X,c);if(J){if(J.distance<0)continue;if((mp||!P||J.distance<P.distance)&&(P=J,P.faceId=w,mp))break}}return P}_intersectUnIndexedTriangles(p,b,M,h,Q){let mp=null;for(let y=this.verticesStart;y<this.verticesStart+this.verticesCount;y+=3){const M=b[y],P=b[y+1],w=b[y+2];if(Q&&!Q(M,P,w,p,-1,-1,-1))continue;const t=p.intersectsTriangle(M,P,w);if(t){if(t.distance<0)continue;if((h||!mp||t.distance<mp.distance)&&(mp=t,mp.faceId=y/3,h))break}}return mp}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(p,b){const M=new w(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,p,b,!1);if(!this.IsGlobal){const p=this.getBoundingInfo();if(!p)return M;M._boundingInfo=new mp.b(p.minimum,p.maximum)}return M}dispose(){let p=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.upp().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const b=this._mesh.Lb.indexOf(this);this._mesh.Lb.splice(b,1),this.resetDrawCache(void 0,p)}getClassName(){return"SubMesh"}static CreateFromIndices(p,b,M,h,Q){let mp=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],y=Number.MAX_VALUE,P=-Number.MAX_VALUE;const t=(Q||h).qb();for(let w=b;w<b+M;w++){const p=t[w];p<y&&(y=p),p>P&&(P=p)}return new w(p,y,P-y+1,b,M,h,Q,mp)}}}}]);