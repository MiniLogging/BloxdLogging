"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[24],{13309:(I,x,L)=>{L.d(x,{b:()=>F});class F{constructor(I,x,L){this.bu=I,this.bv=x,this.distance=L,this.faceId=0,this.subMeshId=0}}},13325:(I,x,L)=>{L.d(x,{e:()=>Y});var F=L(12996),X=L(12983),G=L(12989);class Y{constructor(I,x,L){this.vectors=(0,F.c)(8,X.sx.Zero),this.center=X.sx.Zero(),this.centerWorld=X.sx.Zero(),this.extendSize=X.sx.Zero(),this.extendSizeWorld=X.sx.Zero(),this.directions=(0,F.c)(3,X.sx.Zero),this.vectorsWorld=(0,F.c)(8,X.sx.Zero),this.minimumWorld=X.sx.Zero(),this.maximumWorld=X.sx.Zero(),this.minimum=X.sx.Zero(),this.maximum=X.sx.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(I,x,L)}reConstruct(I,x,L){const F=I.x,G=I.y,Y=I.z,p=x.x,B=x.y,l=x.z,W=this.vectors;this.minimum.YB(F,G,Y),this.maximum.YB(p,B,l),W[0].YB(F,G,Y),W[1].YB(p,B,l),W[2].YB(p,G,Y),W[3].YB(F,B,Y),W[4].YB(F,G,l),W[5].YB(p,B,Y),W[6].YB(F,B,l),W[7].YB(p,G,l),x.addToRef(I,this.center).scaleInPlace(.5),x.subtractToRef(I,this.extendSize).scaleInPlace(.5),this._worldMatrix=L||X.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(I){const x=Y._TmpVector3,L=this.maximum.subtractToRef(this.minimum,x[0]),F=L.length();L.normalizeFromLength(F);const X=F*I,G=L.scaleInPlace(.5*X),p=this.center.subtractToRef(G,x[1]),B=this.center.addToRef(G,x[2]);return this.reConstruct(p,B,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(I){const x=this.minimumWorld,L=this.maximumWorld,F=this.directions,G=this.vectorsWorld,Y=this.vectors;if(I.isIdentity()){x.X(this.minimum),L.X(this.maximum);for(let I=0;I<8;++I)G[I].X(Y[I]);this.extendSizeWorld.X(this.extendSize),this.centerWorld.X(this.center)}else{x.BB(Number.MAX_VALUE),L.BB(-Number.MAX_VALUE);for(let F=0;F<8;++F){const p=G[F];X.sx.TransformCoordinatesToRef(Y[F],I,p),x.minimizeInPlace(p),L.maximizeInPlace(p)}L.subtractToRef(x,this.extendSizeWorld).scaleInPlace(.5),L.addToRef(x,this.centerWorld).scaleInPlace(.5)}X.sx.FromArrayToRef(I.m,0,F[0]),X.sx.FromArrayToRef(I.m,4,F[1]),X.sx.FromArrayToRef(I.m,8,F[2]),this._worldMatrix=I}isInFrustum(I){return Y.IsInFrustum(this.vectorsWorld,I)}isCompletelyInFrustum(I){return Y.IsCompletelyInFrustum(this.vectorsWorld,I)}intersectsPoint(I){const x=this.minimumWorld,L=this.maximumWorld,F=x.x,X=x.y,Y=x.z,p=L.x,B=L.y,l=L.z,W=I.x,Q=I.y,e=I.z,g=-G.e;return!(p-W<g||g>W-F)&&(!(B-Q<g||g>Q-X)&&!(l-e<g||g>e-Y))}intersectsSphere(I){return Y.IntersectsSphere(this.minimumWorld,this.maximumWorld,I.centerWorld,I.radiusWorld)}intersectsMinMax(I,x){const L=this.minimumWorld,F=this.maximumWorld,X=L.x,G=L.y,Y=L.z,p=F.x,B=F.y,l=F.z,W=I.x,Q=I.y,e=I.z,g=x.x,v=x.y,z=x.z;return!(p<W||X>g)&&(!(B<Q||G>v)&&!(l<e||Y>z))}dispose(){var I,x;null===(I=this._drawWrapperFront)||void 0===I||I.dispose(),null===(x=this._drawWrapperBack)||void 0===x||x.dispose()}static Intersects(I,x){return I.intersectsMinMax(x.minimumWorld,x.maximumWorld)}static IntersectsSphere(I,x,L,F){const G=Y._TmpVector3[0];X.sx.ClampToRef(L,I,x,G);return X.sx.DistanceSquared(L,G)<=F*F}static IsCompletelyInFrustum(I,x){for(let L=0;L<6;++L){const F=x[L];for(let x=0;x<8;++x)if(F.dotCoordinate(I[x])<0)return!1}return!0}static IsInFrustum(I,x){for(let L=0;L<6;++L){let F=!0;const X=x[L];for(let x=0;x<8;++x)if(X.dotCoordinate(I[x])>=0){F=!1;break}if(F)return!1}return!0}}Y._TmpVector3=(0,F.c)(3,X.sx.Zero)},13318:(I,x,L)=>{L.d(x,{d:()=>Q});var F=L(12996),X=L(12983),G=L(13325),Y=L(13327);const p={min:0,max:0},B={min:0,max:0},l=(I,x,L)=>{const F=X.sx.Dot(x.centerWorld,I),G=Math.abs(X.sx.Dot(x.directions[0],I))*x.extendSize.x+Math.abs(X.sx.Dot(x.directions[1],I))*x.extendSize.y+Math.abs(X.sx.Dot(x.directions[2],I))*x.extendSize.z;L.min=F-G,L.max=F+G},W=(I,x,L)=>(l(I,x,p),l(I,L,B),!(p.min>B.max||B.min>p.max));class Q{constructor(I,x,L){this._isLocked=!1,this.boundingBox=new G.e(I,x,L),this.boundingSphere=new Y.b(I,x,L)}reConstruct(I,x,L){this.boundingBox.reConstruct(I,x,L),this.boundingSphere.reConstruct(I,x,L)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(I){this._isLocked=I}update(I){this._isLocked||(this.boundingBox._update(I),this.boundingSphere._update(I))}centerOn(I,x){const L=Q._TmpVector3[0].X(I).aQ(x),F=Q._TmpVector3[1].X(I).addInPlace(x);return this.boundingBox.reConstruct(L,F,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(L,F,this.boundingBox.getWorldMatrix()),this}encapsulate(I){const x=X.sx.Minimize(this.minimum,I),L=X.sx.Maximize(this.maximum,I);return this.reConstruct(x,L,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(I){const x=X.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(x);const L=X.TmpVectors.sx[0];return X.sx.TransformCoordinatesToRef(I.boundingBox.minimumWorld,x,L),this.encapsulate(L),X.sx.TransformCoordinatesToRef(I.boundingBox.maximumWorld,x,L),this.encapsulate(L),this}scale(I){return this.boundingBox.scale(I),this.boundingSphere.scale(I),this}isInFrustum(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===x||3===x)&&this.boundingSphere.isCenterInFrustum(I))return!0;if(!this.boundingSphere.isInFrustum(I))return!1;return!(1!==x&&3!==x)||this.boundingBox.isInFrustum(I)}get diagonalLength(){const I=this.boundingBox;return I.maximumWorld.subtractToRef(I.minimumWorld,Q._TmpVector3[0]).length()}isCompletelyInFrustum(I){return this.boundingBox.isCompletelyInFrustum(I)}_checkCollision(I){return I._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(I){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(I)&&!!this.boundingBox.intersectsPoint(I))}intersects(I,x){if(!Y.b.Intersects(this.boundingSphere,I.boundingSphere))return!1;if(!G.e.Intersects(this.boundingBox,I.boundingBox))return!1;if(!x)return!0;const L=this.boundingBox,F=I.boundingBox;return!!W(L.directions[0],L,F)&&(!!W(L.directions[1],L,F)&&(!!W(L.directions[2],L,F)&&(!!W(F.directions[0],L,F)&&(!!W(F.directions[1],L,F)&&(!!W(F.directions[2],L,F)&&(!!W(X.sx.Cross(L.directions[0],F.directions[0]),L,F)&&(!!W(X.sx.Cross(L.directions[0],F.directions[1]),L,F)&&(!!W(X.sx.Cross(L.directions[0],F.directions[2]),L,F)&&(!!W(X.sx.Cross(L.directions[1],F.directions[0]),L,F)&&(!!W(X.sx.Cross(L.directions[1],F.directions[1]),L,F)&&(!!W(X.sx.Cross(L.directions[1],F.directions[2]),L,F)&&(!!W(X.sx.Cross(L.directions[2],F.directions[0]),L,F)&&(!!W(X.sx.Cross(L.directions[2],F.directions[1]),L,F)&&!!W(X.sx.Cross(L.directions[2],F.directions[2]),L,F))))))))))))))}}Q._TmpVector3=(0,F.c)(2,X.sx.Zero)},13327:(I,x,L)=>{L.d(x,{b:()=>G});var F=L(12996),X=L(12983);class G{constructor(I,x,L){this.center=X.sx.Zero(),this.centerWorld=X.sx.Zero(),this.minimum=X.sx.Zero(),this.maximum=X.sx.Zero(),this.reConstruct(I,x,L)}reConstruct(I,x,L){this.minimum.X(I),this.maximum.X(x);const F=X.sx.Distance(I,x);x.addToRef(I,this.center).scaleInPlace(.5),this.radius=.5*F,this._update(L||X.Matrix.IdentityReadOnly)}scale(I){const x=this.radius*I,L=G._TmpVector3,F=L[0].BB(x),X=this.center.subtractToRef(F,L[1]),Y=this.center.addToRef(F,L[2]);return this.reConstruct(X,Y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(I){if(I.isIdentity())this.centerWorld.X(this.center),this.radiusWorld=this.radius;else{X.sx.TransformCoordinatesToRef(this.center,I,this.centerWorld);const x=G._TmpVector3[0];X.sx.TransformNormalFromFloatsToRef(1,1,1,I,x),this.radiusWorld=Math.max(Math.abs(x.x),Math.abs(x.y),Math.abs(x.z))*this.radius}}isInFrustum(I){const x=this.centerWorld,L=this.radiusWorld;for(let F=0;F<6;F++)if(I[F].dotCoordinate(x)<=-L)return!1;return!0}isCenterInFrustum(I){const x=this.centerWorld;for(let L=0;L<6;L++)if(I[L].dotCoordinate(x)<0)return!1;return!0}intersectsPoint(I){const x=X.sx.DistanceSquared(this.centerWorld,I);return!(this.radiusWorld*this.radiusWorld<x)}static Intersects(I,x){const L=X.sx.DistanceSquared(I.centerWorld,x.centerWorld),F=I.radiusWorld+x.radiusWorld;return!(F*F<L)}static CreateFromCenterAndRadius(I,x,L){this._TmpVector3[0].X(I),this._TmpVector3[1].YB(0,0,x),this._TmpVector3[2].X(I),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].aQ(this._TmpVector3[1]);const F=new G(this._TmpVector3[0],this._TmpVector3[2]);return F._worldMatrix=L||X.Matrix.Identity(),F}}G._TmpVector3=(0,F.c)(3,X.sx.Zero)},13340:(I,x,L)=>{function F(I){-1===I.indexOf("vClipPlane")&&I.push("vClipPlane"),-1===I.indexOf("vClipPlane2")&&I.push("vClipPlane2"),-1===I.indexOf("vClipPlane3")&&I.push("vClipPlane3"),-1===I.indexOf("vClipPlane4")&&I.push("vClipPlane4"),-1===I.indexOf("vClipPlane5")&&I.push("vClipPlane5"),-1===I.indexOf("vClipPlane6")&&I.push("vClipPlane6")}function X(I,x,L){const F=!!(I.clipPlane??x.clipPlane),X=!!(I.clipPlane2??x.clipPlane2),G=!!(I.clipPlane3??x.clipPlane3),Y=!!(I.clipPlane4??x.clipPlane4),p=!!(I.clipPlane5??x.clipPlane5),B=!!(I.clipPlane6??x.clipPlane6);F&&L.push("#define CLIPPLANE"),X&&L.push("#define CLIPPLANE2"),G&&L.push("#define CLIPPLANE3"),Y&&L.push("#define CLIPPLANE4"),p&&L.push("#define CLIPPLANE5"),B&&L.push("#define CLIPPLANE6")}function G(I,x,L){let F=!1;const X=!!(I.clipPlane??x.clipPlane),G=!!(I.clipPlane2??x.clipPlane2),Y=!!(I.clipPlane3??x.clipPlane3),p=!!(I.clipPlane4??x.clipPlane4),B=!!(I.clipPlane5??x.clipPlane5),l=!!(I.clipPlane6??x.clipPlane6);return L.CLIPPLANE!==X&&(L.CLIPPLANE=X,F=!0),L.CLIPPLANE2!==G&&(L.CLIPPLANE2=G,F=!0),L.CLIPPLANE3!==Y&&(L.CLIPPLANE3=Y,F=!0),L.CLIPPLANE4!==p&&(L.CLIPPLANE4=p,F=!0),L.CLIPPLANE5!==B&&(L.CLIPPLANE5=B,F=!0),L.CLIPPLANE6!==l&&(L.CLIPPLANE6=l,F=!0),F}function Y(I,x,L){let F=x.clipPlane??L.clipPlane;p(I,"vClipPlane",F),F=x.clipPlane2??L.clipPlane2,p(I,"vClipPlane2",F),F=x.clipPlane3??L.clipPlane3,p(I,"vClipPlane3",F),F=x.clipPlane4??L.clipPlane4,p(I,"vClipPlane4",F),F=x.clipPlane5??L.clipPlane5,p(I,"vClipPlane5",F),F=x.clipPlane6??L.clipPlane6,p(I,"vClipPlane6",F)}function p(I,x,L){L&&I.setFloat4(x,L.normal.x,L.normal.y,L.normal.z,L.d)}L.d(x,{d:()=>F,e:()=>Y,g:()=>G,j:()=>X})},13293:(I,x,L)=>{L.d(x,{e:()=>F});class F{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(I,x){this._defines[I]||(I<this._currentRank&&(this._currentRank=I),I>this._maxRank&&(this._maxRank=I),this._defines[I]=new Array),this._defines[I].push(x)}addCPUSkinningFallback(I,x){this._mesh=x,I<this._currentRank&&(this._currentRank=I),I>this._maxRank&&(this._maxRank=I)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(I,x){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,I=I.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),x._bonesComputationForcedToCPU=!0;const L=this._mesh.tI();for(let I=0;I<L.meshes.length;I++){const F=L.meshes[I];if(F.material){if(F.computeBonesUsingShaders&&0!==F.numBoneInfluencers)if(F.material.getEffect()===x)F.computeBonesUsingShaders=!1;else if(F.jp)for(const I of F.jp){if(I.effect===x){F.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&F.computeBonesUsingShaders&&F.numBoneInfluencers>0&&(F.computeBonesUsingShaders=!1)}}else{const x=this._defines[this._currentRank];if(x)for(let L=0;L<x.length;L++)I=I.replace("#define "+x[L],"");this._currentRank++}return I}}},13299:(I,x,L)=>{L.d(x,{e:()=>H});var F=L(12969),X=L(12971),G=L(12791),Y=L(12797),p=L(12840),B=L(13301),l=L(13239),W=L(12809),Q=L(13026),e=L(13101),g=L(13012);class v{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(I){this._func=I}get funcRef(){return this._funcRef}set funcRef(I){this._funcRef=I}get funcMask(){return this._funcMask}set funcMask(I){this._funcMask=I}get opStencilFail(){return this._opStencilFail}set opStencilFail(I){this._opStencilFail=I}get opDepthFail(){return this._opDepthFail}set opDepthFail(I){this._opDepthFail=I}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(I){this._opStencilDepthPass=I}get mask(){return this._mask}set mask(I){this._mask=I}get enabled(){return this._enabled}set enabled(I){this._enabled=I}getClassName(){return"MaterialStencilState"}copyTo(I){g.c.Clone((()=>I),this)}serialize(){return g.c.Serialize(this)}parse(I,x,L){g.c.Parse((()=>this),I,x,L)}}(0,F.d)([(0,X.K)()],v.prototype,"func",null),(0,F.d)([(0,X.K)()],v.prototype,"funcRef",null),(0,F.d)([(0,X.K)()],v.prototype,"funcMask",null),(0,F.d)([(0,X.K)()],v.prototype,"opStencilFail",null),(0,F.d)([(0,X.K)()],v.prototype,"opDepthFail",null),(0,F.d)([(0,X.K)()],v.prototype,"opStencilDepthPass",null),(0,F.d)([(0,X.K)()],v.prototype,"mask",null),(0,F.d)([(0,X.K)()],v.prototype,"enabled",null);var z=L(13336);class H{get _supportGlowLayer(){return!1}set _glowModeEnabled(I){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(I){if(this._alpha===I)return;const x=this._alpha;this._alpha=I,1!==x&&1!==I||this.nW(H.MiscDirtyFlag+H.PrePassDirtyFlag)}get alpha(){return this._alpha}set GB(I){this._backFaceCulling!==I&&(this._backFaceCulling=I,this.nW(H.TextureDirtyFlag))}get GB(){return this._backFaceCulling}set cullBackFaces(I){this._cullBackFaces!==I&&(this._cullBackFaces=I,this.nW(H.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(I){this._blockDirtyMechanism!==I&&(this._blockDirtyMechanism=I,I||this.De())}atomicMaterialsUpdate(I){this.blockDirtyMechanism=!0;try{I(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(I){this._onDisposeObserver&&this.cp.remove(this._onDisposeObserver),this._onDisposeObserver=this.cp.add(I)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new Y.c),this._onBindObservable}set onBind(I){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(I)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new Y.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new Y.c),this._onEffectCreatedObservable}set alphaMode(I){this._alphaMode!==I&&(this._alphaMode=I,this.nW(H.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(I){this._needDepthPrePass!==I&&(this._needDepthPrePass=I,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(I){this._fogEnabled!==I&&(this._fogEnabled=I,this.nW(H.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case H.WireFrameFillMode:case H.LineListDrawMode:case H.LineLoopDrawMode:case H.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(I){this.fillMode=I?H.WireFrameFillMode:H.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case H.PointFillMode:case H.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(I){this.fillMode=I?H.PointFillMode:H.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(I){this._fillMode!==I&&(this._fillMode=I,this.nW(H.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(I){const x=this.tI().getEngine().getCaps().fragmentDepthSupported;I&&!x&&W.c.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=I&&x,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(I){this._drawWrapper=I}constructor(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.cp=new Y.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.op=new v,this._useUBO=!1,this._fillMode=H.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=I;const X=x||p.e.LastCreatedScene;X&&(this._scene=X,this._dirtyCallbacks={},this._forceGLSL=F,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=I||G.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new e.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new l.b(this._scene.getEngine(),void 0,void 0,I),this._useUBO=this.tI().getEngine().supportsUniformBuffers,this._createUniformBuffer(),L||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),H.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var I;const x=this.tI().getEngine();null===(I=this._uniformBuffer)||void 0===I||I.dispose(),x.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new l.b(x,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new l.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(I){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.De(),this.checkReadyOnlyOnce=!0}unfreeze(){this.De(),this.checkReadyOnlyOnce=!1}isReady(I,x){return!0}isReadyForSubMesh(I,x,L){const F=x.materialDefines;return!!F&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=F,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}tI(){return this._scene}_getEffectiveOrientation(I){return null!==this.sideOrientation?this.sideOrientation:I.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(I){this._transparencyMode!==I&&(this._transparencyMode=I,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===H.MATERIAL_ALPHABLEND||this._transparencyMode===H.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===H.MATERIAL_ALPHATEST||this._transparencyMode===H.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===H.MATERIAL_OPAQUE||this._transparencyMode===H.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(I){return this._hasTransparencyMode?this._transparencyModeIsBlend:I.visibility<1||!this._disableAlphaBlending&&(I.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(I){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(I)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}De(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const x=this.tI().meshes;for(const L of x)if(L.jp)for(const x of L.jp)if(x.kI()===this)for(const L of x._drawWrappers)L&&this._materialContext===L.materialContext&&(L._wasPreviouslyReady=!1,L._wasPreviouslyUsingInstances=null,L._forceRebindOnNextCall=I);I&&this.nW(H.AllDirtyFlag)}_preBind(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const L=this._scene.getEngine(),F=(null==x?this.sideOrientation:x)===H.ClockWiseSideOrientation;return L.enableEffect(I||this._getDrawWrapper()),L.setState(this.GB,this.zOffset,!1,F,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.op,this.zOffsetUnits),F}bind(I,x){}buildUniformLayout(){const I=this._uniformBuffer;this._eventInfo.ubo=I,this._callbackPluginEventGeneric(8,this._eventInfo),I.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(I,x,L){const F=L._drawWrapper;this._eventInfo.subMesh=L,this._callbackPluginEventBindForSubMesh(this._eventInfo),F._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(I){}bindView(I){this._useUBO?this._needToBindSceneUbo=!0:I.setMatrix("view",this.tI().getViewMatrix())}bindViewProjection(I){this._useUBO?this._needToBindSceneUbo=!0:(I.setMatrix("viewProjection",this.tI().getTransformMatrix()),I.setMatrix("projection",this.tI().getProjectionMatrix()))}bindEyePosition(I,x){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(I,x)}_afterBind(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&x&&(this._needToBindSceneUbo=!1,(0,z.j)(x,this.tI().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=I?I.visibility:1,this._onBindObservable&&I&&this._onBindObservable.notifyObservers(I),this.disableDepthWrite){const I=this._scene.getEngine();this._cachedDepthWriteState=I.getDepthWrite(),I.setDepthWrite(!1)}if(this.disableColorWrite){const I=this._scene.getEngine();this._cachedColorWriteState=I.getColorWrite(),I.setColorWrite(!1)}if(0!==this.depthFunction){const I=this._scene.getEngine();this._cachedDepthFunctionState=I.getDepthFunction()||0,I.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(I){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=I,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(I){return null}_clonePlugins(I,x){const L={};if(this._serializePlugins(L),H._ParsePlugins(L,I,this._scene,x),this.pluginManager)for(const F of this.pluginManager._plugins){const x=I.pluginManager.getPlugin(F.name);x&&F.copyTo(x)}}getBindedMeshes(){if(this.meshMap){const I=[];for(const x in this.meshMap){const L=this.meshMap[x];L&&I.push(L)}return I}return this._scene.meshes.filter((I=>I.material===this))}forceCompilation(I,x,L,F){const X={clipPlane:!1,useInstances:!1,...L},G=this.tI(),Y=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const p=()=>{if(!this._scene||!this._scene.getEngine())return;const L=G.clipPlane;if(X.clipPlane&&(G.clipPlane=new Q.b(0,0,0,1)),this._storeEffectOnSubMeshes){let L=!0,G=null;if(I.jp){const x=new B.e(0,0,0,0,0,I,void 0,!1,!1);x.materialDefines&&(x.materialDefines._renderId=-1),this.isReadyForSubMesh(I,x,X.useInstances)||(x.effect&&x.effect.getCompilationError()&&x.effect.allFallbacksProcessed()?G=x.effect.getCompilationError():(L=!1,setTimeout(p,16)))}L&&(this.allowShaderHotSwapping=Y,G&&F&&F(G),x&&x(this))}else this.isReady()?(this.allowShaderHotSwapping=Y,x&&x(this)):setTimeout(p,16);X.clipPlane&&(G.clipPlane=L)};p()}async forceCompilationAsync(I,x){return await new Promise(((L,F)=>{this.forceCompilation(I,(()=>{L()}),x,(I=>{F(I)}))}))}nW(I){this.tI().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(H._DirtyCallbackArray.length=0,I&H.ImageProcessingDirtyFlag&&H._DirtyCallbackArray.push(H._ImageProcessingDirtyCallBack),I&H.TextureDirtyFlag&&H._DirtyCallbackArray.push(H._TextureDirtyCallBack),I&H.LightDirtyFlag&&H._DirtyCallbackArray.push(H._LightsDirtyCallBack),I&H.FresnelDirtyFlag&&H._DirtyCallbackArray.push(H._FresnelDirtyCallBack),I&H.AttributesDirtyFlag&&H._DirtyCallbackArray.push(H._AttributeDirtyCallBack),I&H.MiscDirtyFlag&&H._DirtyCallbackArray.push(H._MiscDirtyCallBack),I&H.PrePassDirtyFlag&&H._DirtyCallbackArray.push(H._PrePassDirtyCallBack),H._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(H._RunDirtyCallBacks),this.tI().resetCachedMaterial())}resetDrawCache(){const I=this.tI().meshes;for(const x of I)if(x.jp)for(const I of x.jp)I.kI()===this&&I.resetDrawCache()}_markAllSubMeshesAsDirty(I){const x=this.tI();if(x.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const L=x.meshes;for(const F of L)if(F.jp)for(const L of F.jp){if((L.kI()||(x._hasDefaultMaterial?x.defaultMaterial:null))===this)for(const x of L._drawWrappers)x&&x.defines&&x.defines.markAllAsDirty&&this._materialContext===x.materialContext&&I(x.defines)}}_markScenePrePassDirty(){if(this.tI().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const I=this.tI().enablePrePassRenderer();I&&I.nW()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(H._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(H._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(H._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(H._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(H._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(H._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(H._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(H._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(H._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(H._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const I=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.cp.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(I)}))}}setPrePassRenderer(I){return!1}dispose(I,x,L){const F=this.tI();if(F.stopAnimation(this),F.freeProcessedMaterials(),F.removeMaterial(this),this._eventInfo.forceDisposeTextures=x,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const I=this._parentContainer.materials.indexOf(this);I>-1&&this._parentContainer.materials.splice(I,1),this._parentContainer=null}if(!0!==L)if(this.meshMap)for(const X in this.meshMap){const I=this.meshMap[X];this._disposeMeshResources(I)}else{const I=F.meshes;for(const x of I)this._disposeMeshResources(x)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.cp.notifyObservers(this),this.cp.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(I){if(!I)return;const x=I.FB,L=I._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(I.jp&&L)for(const X of I.jp){const I=X._drawWrappers;for(let G=0;G<I.length;G++){var F;const Y=null===(F=I[G])||void 0===F?void 0:F.effect;if(!Y)continue;L[G]===this&&(null===x||void 0===x||x._releaseVertexArrayObject(Y),X._removeDrawWrapper(G,!0,!0))}}}else null===x||void 0===x||x._releaseVertexArrayObject(this._drawWrapper.effect);I.material!==this||I.sourceMesh||(I.material=null)}serialize(){const I=g.c.Serialize(this);return I.op=this.op.serialize(),I.uniqueId=this.uniqueId,this._serializePlugins(I),I}_serializePlugins(I){if(I.plugins={},this.pluginManager)for(const x of this.pluginManager._plugins)x.doNotSerialize||(I.plugins[x.getClassName()]=x.serialize())}static Parse(I,x,L){if(I.customType){if("BABYLON.PBRMaterial"===I.customType&&I.overloadedAlbedo&&(I.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return W.c.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else I.customType="BABYLON.StandardMaterial";const F=G.Tools.Instantiate(I.customType).Parse(I,x,L);return F._loadedUniqueId=I.uniqueId,F}static _ParsePlugins(I,x,L,F){if(I.plugins)for(const p in I.plugins){var X,Y;const B=I.plugins[p];let l=null===(X=x.pluginManager)||void 0===X?void 0:X.getPlugin(B.name);if(!l){const I=G.Tools.Instantiate("BABYLON."+p);I&&(l=new I(x))}null===(Y=l)||void 0===Y||Y.parse(B,L,F)}}}H.TriangleFillMode=0,H.WireFrameFillMode=1,H.PointFillMode=2,H.PointListDrawMode=3,H.LineListDrawMode=4,H.LineLoopDrawMode=5,H.LineStripDrawMode=6,H.TriangleStripDrawMode=7,H.TriangleFanDrawMode=8,H.ClockWiseSideOrientation=0,H.CounterClockWiseSideOrientation=1,H.ImageProcessingDirtyFlag=64,H.TextureDirtyFlag=1,H.LightDirtyFlag=2,H.FresnelDirtyFlag=4,H.AttributesDirtyFlag=8,H.MiscDirtyFlag=16,H.PrePassDirtyFlag=32,H.AllDirtyFlag=127,H.MATERIAL_OPAQUE=0,H.MATERIAL_ALPHATEST=1,H.MATERIAL_ALPHABLEND=2,H.MATERIAL_ALPHATESTANDBLEND=3,H.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,H.MATERIAL_NORMALBLENDMETHOD_RNM=1,H.OnEventObservable=new Y.c,H._AllDirtyCallBack=I=>I.markAllAsDirty(),H._ImageProcessingDirtyCallBack=I=>I.markAsImageProcessingDirty(),H._TextureDirtyCallBack=I=>I.markAsTexturesDirty(),H._FresnelDirtyCallBack=I=>I.markAsFresnelDirty(),H._MiscDirtyCallBack=I=>I.markAsMiscDirty(),H._PrePassDirtyCallBack=I=>I.markAsPrePassDirty(),H._LightsDirtyCallBack=I=>I.markAsLightDirty(),H._AttributeDirtyCallBack=I=>I.markAsAttributesDirty(),H._FresnelAndMiscDirtyCallBack=I=>{H._FresnelDirtyCallBack(I),H._MiscDirtyCallBack(I)},H._TextureAndMiscDirtyCallBack=I=>{H._TextureDirtyCallBack(I),H._MiscDirtyCallBack(I)},H._DirtyCallbackArray=[],H._RunDirtyCallBacks=I=>{for(const x of H._DirtyCallbackArray)x(I)},(0,F.d)([(0,X.K)()],H.prototype,"id",void 0),(0,F.d)([(0,X.K)()],H.prototype,"uniqueId",void 0),(0,F.d)([(0,X.K)()],H.prototype,"name",void 0),(0,F.d)([(0,X.K)()],H.prototype,"metadata",void 0),(0,F.d)([(0,X.K)()],H.prototype,"checkReadyOnEveryCall",void 0),(0,F.d)([(0,X.K)()],H.prototype,"checkReadyOnlyOnce",void 0),(0,F.d)([(0,X.K)()],H.prototype,"state",void 0),(0,F.d)([(0,X.K)("alpha")],H.prototype,"_alpha",void 0),(0,F.d)([(0,X.K)("GB")],H.prototype,"_backFaceCulling",void 0),(0,F.d)([(0,X.K)("cullBackFaces")],H.prototype,"_cullBackFaces",void 0),(0,F.d)([(0,X.K)()],H.prototype,"sideOrientation",void 0),(0,F.d)([(0,X.K)("alphaMode")],H.prototype,"_alphaMode",void 0),(0,F.d)([(0,X.K)()],H.prototype,"_needDepthPrePass",void 0),(0,F.d)([(0,X.K)()],H.prototype,"disableDepthWrite",void 0),(0,F.d)([(0,X.K)()],H.prototype,"disableColorWrite",void 0),(0,F.d)([(0,X.K)()],H.prototype,"forceDepthWrite",void 0),(0,F.d)([(0,X.K)()],H.prototype,"depthFunction",void 0),(0,F.d)([(0,X.K)()],H.prototype,"separateCullingPass",void 0),(0,F.d)([(0,X.K)("fogEnabled")],H.prototype,"_fogEnabled",void 0),(0,F.d)([(0,X.K)()],H.prototype,"pointSize",void 0),(0,F.d)([(0,X.K)()],H.prototype,"zOffset",void 0),(0,F.d)([(0,X.K)()],H.prototype,"zOffsetUnits",void 0),(0,F.d)([(0,X.K)()],H.prototype,"pointsCloud",null),(0,F.d)([(0,X.K)()],H.prototype,"fillMode",null),(0,F.d)([(0,X.K)()],H.prototype,"useLogarithmicDepth",null),(0,F.d)([(0,X.K)()],H.prototype,"transparencyMode",null)},13336:(I,x,L)=>{L.d(x,{$:()=>A,A:()=>f,D:()=>g,H:()=>e,K:()=>K,N:()=>M,Q:()=>P,S:()=>s,V:()=>n,Y:()=>u,bb:()=>mI,c:()=>y,cb:()=>w,e:()=>Q,eb:()=>v,f:()=>Z,g:()=>W,i:()=>z,j:()=>H,m:()=>U,p:()=>R,t:()=>q,w:()=>t});var F=L(12809),X=L(13020),G=L(12840),Y=L(13284),p=L(13340);const B=X.Tx.Black(),l={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function W(I,x,L){if(!I||I.LOGARITHMICDEPTH||I.indexOf&&I.indexOf("LOGARITHMICDEPTH")>=0){const I=L.activeCamera;1===I.mode&&F.c.Error("Logarithmic depth is not compatible with orthographic cameras!",20),x.setFloat("logarithmicDepthConstant",2/(Math.log(I.maxZ+1)/Math.LN2))}}function Q(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]&&arguments[3];L&&I.fogEnabled&&(!x||x.applyFog)&&0!==I.fogMode&&(L.setFloat4("vFogInfos",I.fogMode,I.fogStart,I.fogEnd,I.fogDensity),F?(I.fogColor.toLinearSpaceToRef(B,I.getEngine().useExactSrgbConversions),L.setColor3("vFogColor",B)):L.setColor3("vFogColor",I.fogColor))}function e(I,x,L,F,X,G,Y,p,B,W){const Q=I.numMaxInfluencers||I.numInfluencers;return Q<=0?0:(x.push("#define MORPHTARGETS"),I.hasPositions&&x.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),I.hasNormals&&x.push("#define MORPHTARGETTEXTURE_HASNORMALS"),I.hasTangents&&x.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),I.hasUVs&&x.push("#define MORPHTARGETTEXTURE_HASUVS"),I.hasUV2s&&x.push("#define MORPHTARGETTEXTURE_HASUV2S"),I.hasColors&&x.push("#define MORPHTARGETTEXTURE_HASCOLORS"),I.supportsPositions&&X&&x.push("#define MORPHTARGETS_POSITION"),I.supportsNormals&&G&&x.push("#define MORPHTARGETS_NORMAL"),I.supportsTangents&&Y&&x.push("#define MORPHTARGETS_TANGENT"),I.supportsUVs&&p&&x.push("#define MORPHTARGETS_UV"),I.supportsUV2s&&B&&x.push("#define MORPHTARGETS_UV2"),I.supportsColors&&W&&x.push("#define MORPHTARGETS_COLOR"),x.push("#define NUM_MORPH_INFLUENCERS "+Q),I.isUsingTextureForTargets&&x.push("#define MORPHTARGETS_TEXTURE"),l.NUM_MORPH_INFLUENCERS=Q,l.NORMAL=G,l.TANGENT=Y,l.UV=p,l.UV2=B,l.COLOR=W,g(L,F,l,X),Q)}function g(I,x,L){let X=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Y=L.NUM_MORPH_INFLUENCERS;if(Y>0&&G.e.LastCreatedEngine){const p=G.e.LastCreatedEngine.getCaps().maxVertexAttribs,B=x.morphTargetManager;if(null!==B&&void 0!==B&&B.isUsingTextureForTargets)return;const l=B&&B.supportsPositions&&X,W=B&&B.supportsNormals&&L.NORMAL,Q=B&&B.supportsTangents&&L.TANGENT,e=B&&B.supportsUVs&&L.UV1,g=B&&B.supportsUV2s&&L.UV2,v=B&&B.supportsColors&&L.VERTEXCOLOR;for(let L=0;L<Y;L++)l&&I.push("position"+L),W&&I.push("normal"+L),Q&&I.push("tangent"+L),e&&I.push("uv_"+L),g&&I.push("uv2_"+L),v&&I.push("color"+L),I.length>p&&F.c.Error("Cannot add more vertex attributes for mesh "+x.name)}}function v(I){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];I.push("world0"),I.push("world1"),I.push("world2"),I.push("world3"),x&&(I.push("previousWorld0"),I.push("previousWorld1"),I.push("previousWorld2"),I.push("previousWorld3"))}function z(I,x){const L=I.morphTargetManager;I&&L&&x.setFloatArray("morphTargetInfluences",L.influences)}function H(I,x){x.bindToEffect(I,"Scene")}function s(I,x,L){x._needUVs=!0,x[L]=!0,I.optimizeUVAllocation&&I.getTextureMatrix().isIdentityAs3x2()?(x[L+"DIRECTUV"]=I.coordinatesIndex+1,x["MAINUV"+(I.coordinatesIndex+1)]=!0):x[L+"DIRECTUV"]=0}function U(I,x,L){const F=I.getTextureMatrix();x.xB(L+"Matrix",F)}function q(I,x,L){L.BAKED_VERTEX_ANIMATION_TEXTURE&&L.INSTANCES&&I.push("bakedVertexAnimationSettingsInstanced")}function y(I,x,L){var F;if(x&&I&&(I.computeBonesUsingShaders&&x._bonesComputationForcedToCPU&&(I.computeBonesUsingShaders=!1),I.useBones&&I.computeBonesUsingShaders&&I.skeleton)){const X=I.skeleton;if(X.isUsingTextureForMatrices&&x.getUniformIndex("boneTextureWidth")>-1){const L=X.getTransformMatrixTexture(I);x.setTexture("boneSampler",L),x.setFloat("boneTextureWidth",4*(X.bones.length+1))}else{const G=X.getTransformMatrices(I);G&&(x.setMatrices("mBones",G),L&&I.tI().prePassRenderer&&I.tI().prePassRenderer.getIndex(2)&&(L.previousBones[I.uniqueId]||(L.previousBones[I.uniqueId]=G.slice()),x.setMatrices("mPreviousBones",L.previousBones[I.uniqueId]),F=G,L.previousBones[I.uniqueId].set(F)))}}}function T(I,x,L,F,X){let G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];I._bindLight(x,L,F,X,G)}function Z(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const G=Math.min(x.lightSources.length,X);for(let Y=0;Y<G;Y++){T(x.lightSources[Y],Y,I,L,"boolean"===typeof F?F:F.SPECULARTERM,x.receiveShadows)}}function t(I,x,L,F){L.NUM_BONE_INFLUENCERS>0&&(F.addCPUSkinningFallback(0,x),I.push("matricesIndices"),I.push("matricesWeights"),L.NUM_BONE_INFLUENCERS>4&&(I.push("matricesIndicesExtra"),I.push("matricesWeightsExtra")))}function f(I,x){(x.INSTANCES||x.THIN_INSTANCES)&&v(I,!!x.PREPASS_VELOCITY),x.INSTANCESCOLOR&&I.push("instanceColor")}function R(I,x){let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,X=0;for(let G=0;G<L&&I["LIGHT"+G];G++)G>0&&(X=F+G,x.addFallback(X,"LIGHT"+G)),I.SHADOWS||(I["SHADOW"+G]&&x.addFallback(F,"SHADOW"+G),I["SHADOWPCF"+G]&&x.addFallback(F,"SHADOWPCF"+G),I["SHADOWPCSS"+G]&&x.addFallback(F,"SHADOWPCSS"+G),I["SHADOWPOISSON"+G]&&x.addFallback(F,"SHADOWPOISSON"+G),I["SHADOWESM"+G]&&x.addFallback(F,"SHADOWESM"+G),I["SHADOWCLOSEESM"+G]&&x.addFallback(F,"SHADOWCLOSEESM"+G));return X++}function n(I,x,L,F,X,G,Y){let p=arguments.length>7&&void 0!==arguments[7]&&arguments[7];Y._areMiscDirty&&(Y.LOGARITHMICDEPTH=L,Y.POINTSIZE=F,Y.FOG=X&&function(I,x){return x.fogEnabled&&I.applyFog&&0!==x.fogMode}(I,x),Y.NONUNIFORMSCALING=I.nonUniformScaling,Y.ALPHATEST=G,Y.DECAL_AFTER_DETAIL=p)}function P(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!L._areLightsDirty)return L._needNormals;let Y=0;const p={needNormals:L._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(I.lightsEnabled&&!G)for(const l of x.lightSources)if(d(I,x,l,Y,L,F,p),Y++,Y===X)break;L.SPECULARTERM=p.specularEnabled,L.SHADOWS=p.shadowEnabled;for(let l=Y;l<X;l++)void 0!==L["LIGHT"+l]&&(L["LIGHT"+l]=!1,L["HEMILIGHT"+l]=!1,L["POINTLIGHT"+l]=!1,L["DIRLIGHT"+l]=!1,L["SPOTLIGHT"+l]=!1,L["AREALIGHT"+l]=!1,L["SHADOW"+l]=!1,L["SHADOWCSM"+l]=!1,L["SHADOWCSMDEBUG"+l]=!1,L["SHADOWCSMNUM_CASCADES"+l]=!1,L["SHADOWCSMUSESHADOWMAXZ"+l]=!1,L["SHADOWCSMNOBLEND"+l]=!1,L["SHADOWCSM_RIGHTHANDED"+l]=!1,L["SHADOWPCF"+l]=!1,L["SHADOWPCSS"+l]=!1,L["SHADOWPOISSON"+l]=!1,L["SHADOWESM"+l]=!1,L["SHADOWCLOSEESM"+l]=!1,L["SHADOWCUBE"+l]=!1,L["SHADOWLOWQUALITY"+l]=!1,L["SHADOWMEDIUMQUALITY"+l]=!1);const B=I.getEngine().getCaps();return void 0===L.SHADOWFLOAT&&(p.needRebuild=!0),L.SHADOWFLOAT=p.shadowEnabled&&(B.textureFloatRender&&B.textureFloatLinearFiltering||B.textureHalfFloatRender&&B.textureHalfFloatLinearFiltering),L.LIGHTMAPEXCLUDED=p.lightmapMode,p.needRebuild&&L.rebuild(),p.needNormals}function d(I,x,L,F,X,G,p){switch(p.needNormals=!0,void 0===X["LIGHT"+F]&&(p.needRebuild=!0),X["LIGHT"+F]=!0,X["SPOTLIGHT"+F]=!1,X["HEMILIGHT"+F]=!1,X["POINTLIGHT"+F]=!1,X["DIRLIGHT"+F]=!1,X["AREALIGHT"+F]=!1,L.prepareLightSpecificDefines(X,F),X["LIGHT_FALLOFF_PHYSICAL"+F]=!1,X["LIGHT_FALLOFF_GLTF"+F]=!1,X["LIGHT_FALLOFF_STANDARD"+F]=!1,L.falloffType){case Y.d.FALLOFF_GLTF:X["LIGHT_FALLOFF_GLTF"+F]=!0;break;case Y.d.FALLOFF_PHYSICAL:X["LIGHT_FALLOFF_PHYSICAL"+F]=!0;break;case Y.d.FALLOFF_STANDARD:X["LIGHT_FALLOFF_STANDARD"+F]=!0}if(G&&!L.IQ.equalsFloats(0,0,0)&&(p.specularEnabled=!0),X["SHADOW"+F]=!1,X["SHADOWCSM"+F]=!1,X["SHADOWCSMDEBUG"+F]=!1,X["SHADOWCSMNUM_CASCADES"+F]=!1,X["SHADOWCSMUSESHADOWMAXZ"+F]=!1,X["SHADOWCSMNOBLEND"+F]=!1,X["SHADOWCSM_RIGHTHANDED"+F]=!1,X["SHADOWPCF"+F]=!1,X["SHADOWPCSS"+F]=!1,X["SHADOWPOISSON"+F]=!1,X["SHADOWESM"+F]=!1,X["SHADOWCLOSEESM"+F]=!1,X["SHADOWCUBE"+F]=!1,X["SHADOWLOWQUALITY"+F]=!1,X["SHADOWMEDIUMQUALITY"+F]=!1,x&&x.receiveShadows&&I.shadowsEnabled&&L.shadowEnabled){const x=L.getShadowGenerator(I.activeCamera)??L.getShadowGenerator();if(x){const I=x.getShadowMap();I&&I.renderList&&I.renderList.length>0&&(p.shadowEnabled=!0,x.prepareDefines(X,F))}}L.lightmapMode!=Y.d.LIGHTMAP_DEFAULT?(p.lightmapMode=!0,X["LIGHTMAPEXCLUDED"+F]=!0,X["LIGHTMAPNOSPECULAR"+F]=L.lightmapMode==Y.d.LIGHTMAP_SHADOWSONLY):(X["LIGHTMAPEXCLUDED"+F]=!1,X["LIGHTMAPNOSPECULAR"+F]=!1)}function M(I,x,L,F,X){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],B=function(I,x){let L=!1;if(I.activeCamera){const F=x.CAMERA_ORTHOGRAPHIC?1:0,X=x.CAMERA_PERSPECTIVE?1:0,G=1===I.activeCamera.mode?1:0,Y=0===I.activeCamera.mode?1:0;(F^G||X^Y)&&(x.CAMERA_ORTHOGRAPHIC=1===G,x.CAMERA_PERSPECTIVE=1===Y,L=!0)}return L}(I,F);!1!==G&&(B=(0,p.g)(L,I,F)),F.DEPTHPREPASS!==!x.getColorWrite()&&(F.DEPTHPREPASS=!F.DEPTHPREPASS,B=!0),F.INSTANCES!==X&&(F.INSTANCES=X,B=!0),F.THIN_INSTANCES!==Y&&(F.THIN_INSTANCES=Y,B=!0),B&&F.markAsUnprocessed()}function K(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]&&arguments[4],G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!x._areAttributesDirty&&x._needNormals===x._normals&&x._needUVs===x._uvs)return!1;x._normals=x._needNormals,x._uvs=x._needUVs,x.NORMAL=x._needNormals&&I.isVerticesDataPresent("normal"),x._needNormals&&I.isVerticesDataPresent("tangent")&&(x.TANGENT=!0);for(let p=1;p<=6;++p)x["UV"+p]=!!x._needUVs&&I.isVerticesDataPresent(`uv${1===p?"":p}`);if(L){const L=I.useVertexColors&&I.isVerticesDataPresent("color");x.VERTEXCOLOR=L,x.VERTEXALPHA=I.hasVertexAlpha&&L&&G}return I.isVerticesDataPresent("instanceColor")&&(I.hasInstances||I.hasThinInstances)&&(x.INSTANCESCOLOR=!0),F&&function(I,x){if(I.useBones&&I.computeBonesUsingShaders&&I.skeleton){x.NUM_BONE_INFLUENCERS=I.numBoneInfluencers;const L=void 0!==x.BONETEXTURE;if(I.skeleton.isUsingTextureForMatrices&&L)x.BONETEXTURE=!0;else{x.BonesPerMesh=I.skeleton.bones.length+1,x.BONETEXTURE=!L&&void 0;const F=I.tI().prePassRenderer;if(F&&F.enabled){const L=-1===F.excludedSkinnedMesh.indexOf(I);x.BONES_VELOCITY_ENABLED=L}}}else x.NUM_BONE_INFLUENCERS=0,x.BonesPerMesh=0,void 0!==x.BONETEXTURE&&(x.BONETEXTURE=!1)}(I,x),X&&function(I,x){const L=I.morphTargetManager;L?(x.MORPHTARGETS_UV=L.supportsUVs&&x.UV1,x.MORPHTARGETS_UV2=L.supportsUV2s&&x.UV2,x.MORPHTARGETS_TANGENT=L.supportsTangents&&x.TANGENT,x.MORPHTARGETS_NORMAL=L.supportsNormals&&x.NORMAL,x.MORPHTARGETS_POSITION=L.supportsPositions,x.MORPHTARGETS_COLOR=L.supportsColors,x.MORPHTARGETTEXTURE_HASUVS=L.hasUVs,x.MORPHTARGETTEXTURE_HASUV2S=L.hasUV2s,x.MORPHTARGETTEXTURE_HASTANGENTS=L.hasTangents,x.MORPHTARGETTEXTURE_HASNORMALS=L.hasNormals,x.MORPHTARGETTEXTURE_HASPOSITIONS=L.hasPositions,x.MORPHTARGETTEXTURE_HASCOLORS=L.hasColors,x.NUM_MORPH_INFLUENCERS=L.numMaxInfluencers||L.numInfluencers,x.MORPHTARGETS=x.NUM_MORPH_INFLUENCERS>0,x.MORPHTARGETS_TEXTURE=L.isUsingTextureForTargets):(x.MORPHTARGETS_UV=!1,x.MORPHTARGETS_UV2=!1,x.MORPHTARGETS_TANGENT=!1,x.MORPHTARGETS_NORMAL=!1,x.MORPHTARGETS_POSITION=!1,x.MORPHTARGETS_COLOR=!1,x.MORPHTARGETTEXTURE_HASUVS=!1,x.MORPHTARGETTEXTURE_HASUV2S=!1,x.MORPHTARGETTEXTURE_HASTANGENTS=!1,x.MORPHTARGETTEXTURE_HASNORMALS=!1,x.MORPHTARGETTEXTURE_HASPOSITIONS=!1,x.MORPHTARGETTEXTURE_HAS_COLORS=!1,x.MORPHTARGETS=!1,x.NUM_MORPH_INFLUENCERS=0)}(I,x),Y&&function(I,x){const L=I.bakedVertexAnimationManager;x.BAKED_VERTEX_ANIMATION_TEXTURE=!(!L||!L.isEnabled)}(I,x),!0}function u(I,x){if(I.activeCamera){const L=x.MULTIVIEW;x.MULTIVIEW=null!==I.activeCamera.outputRenderTarget&&I.activeCamera.outputRenderTarget.getViewCount()>1,x.MULTIVIEW!=L&&x.markAsUnprocessed()}}function A(I,x,L){const F=x.ORDER_INDEPENDENT_TRANSPARENCY,X=x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;x.ORDER_INDEPENDENT_TRANSPARENCY=I.useOrderIndependentTransparency&&L,x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!I.getEngine().getCaps().textureFloatLinearFiltering,F===x.ORDER_INDEPENDENT_TRANSPARENCY&&X===x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||x.markAsUnprocessed()}function mI(I,x,L){const F=x.PREPASS;if(!x._arePrePassDirty)return;const X=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(I.prePassRenderer&&I.prePassRenderer.enabled&&L){x.PREPASS=!0,x.SCENE_MRT_COUNT=I.prePassRenderer.mrtCount,x.PREPASS_NORMAL_WORLDSPACE=I.prePassRenderer.generateNormalsInWorldSpace,x.PREPASS_COLOR=!0,x.PREPASS_COLOR_INDEX=0;for(let L=0;L<X.length;L++){const F=I.prePassRenderer.getIndex(X[L].type);-1!==F?(x[X[L].define]=!0,x[X[L].index]=F):x[X[L].define]=!1}}else{x.PREPASS=!1;for(let I=0;I<X.length;I++)x[X[I].define]=!1}x.PREPASS!=F&&(x.markAsUnprocessed(),x.markAsImageProcessingDirty())}function O(I,x,L,F){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];X&&X.push("Light"+I),G||(x.push("vLightData"+I,"vLightDiffuse"+I,"vLightSpecular"+I,"vLightDirection"+I,"vLightWidth"+I,"vLightHeight"+I,"vLightFalloff"+I,"vLightGround"+I,"lightMatrix"+I,"shadowsInfo"+I,"depthValues"+I),L.push("shadowTexture"+I),L.push("depthTexture"+I),x.push("viewFrustumZ"+I,"cascadeBlendFactor"+I,"lightSizeUVCorrection"+I,"depthCorrection"+I,"penumbraDarkness"+I,"frustumLengths"+I),F&&(L.push("projectionLightTexture"+I),x.push("textureProjectionMatrix"+I)),Y&&L.push("iesLightTexture"+I))}function w(I,x,L){let F,X,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(I.uniformsNames){const Y=I;F=Y.uniformsNames,X=Y.uniformBuffersNames,x=Y.samplers,L=Y.defines,G=Y.maxSimultaneousLights||0}else F=I,x||(x=[]);for(let Y=0;Y<G&&L["LIGHT"+Y];Y++)O(Y,F,x,L["PROJECTEDLIGHTTEXTURE"+Y],X,!1,L["IESLIGHTTEXTURE"+Y]);L.NUM_MORPH_INFLUENCERS&&(F.push("morphTargetInfluences"),F.push("morphTargetCount")),L.BAKED_VERTEX_ANIMATION_TEXTURE&&(F.push("bakedVertexAnimationSettings"),F.push("bakedVertexAnimationTextureSizeInverted"),F.push("bakedVertexAnimationTime"),x.push("bakedVertexAnimationTexture"))}},13295:(I,x,L)=>{L.d(x,{c:()=>G});var F=L(12983),X=L(13299);class G extends X.e{constructor(I,x){let L=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(I,x,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new F.Matrix,this._storeEffectOnSubMeshes=L}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(I,x){return!!I&&(!this._storeEffectOnSubMeshes||(!I.jp||0===I.jp.length||this.isReadyForSubMesh(I,I.jp[0],x)))}_isReadyForSubMesh(I){const x=I.materialDefines;return!(this.checkReadyOnEveryCall||!I.effect||!x||x._renderId!==this.tI().getRenderId())}bindOnlyWorldMatrix(I){this._activeEffect.setMatrix("world",I)}bindOnlyNormalMatrix(I){this._activeEffect.setMatrix("normalMatrix",I)}bind(I,x){x&&this.bindForSubMesh(I,x,x.jp[0])}_afterBind(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,L=arguments.length>2?arguments[2]:void 0;super._afterBind(I,x,L),this.tI()._cachedEffect=x,L?L._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return L._drawWrapper._forceRebindOnNextCall||I.isCachedMaterialInvalid(this,x,F)}dispose(I,x,L){this._activeEffect=void 0,super.dispose(I,x,L)}}},13333:(I,x,L)=>{L.d(x,{b:()=>p,e:()=>B});var F=L(12969),X=L(12983),G=L(12971);class Y{static extractMinAndMaxIndexed(I,x,L,F,X,G){for(let Y=L;Y<L+F;Y++){const L=3*x[Y],F=I[L],p=I[L+1],B=I[L+2];X.minimizeInPlaceFromFloats(F,p,B),G.maximizeInPlaceFromFloats(F,p,B)}}static extractMinAndMax(I,x,L,F,X,G){for(let Y=x,p=x*F;Y<x+L;Y++,p+=F){const x=I[p],L=I[p+1],F=I[p+2];X.minimizeInPlaceFromFloats(x,L,F),G.maximizeInPlaceFromFloats(x,L,F)}}}function p(I,x,L,F){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const p=new X.sx(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),B=new X.sx(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return Y.extractMinAndMaxIndexed(I,x,L,F,p,B),G&&(p.x-=p.x*G.x+G.y,p.y-=p.y*G.x+G.y,p.z-=p.z*G.x+G.y,B.x+=B.x*G.x+G.y,B.y+=B.y*G.x+G.y,B.z+=B.z*G.x+G.y),{minimum:p,maximum:B}}function B(I,x,L){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,G=arguments.length>4?arguments[4]:void 0;const p=new X.sx(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),B=new X.sx(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return G||(G=3),Y.extractMinAndMax(I,x,L,G,p,B),F&&(p.x-=p.x*F.x+F.y,p.y-=p.y*F.x+F.y,p.z-=p.z*F.x+F.y,B.x+=B.x*F.x+F.y,B.y+=B.y*F.x+F.y,B.z+=B.z*F.x+F.y),{minimum:p,maximum:B}}(0,F.d)([G.g.filter((function(){for(var I=arguments.length,x=new Array(I),L=0;L<I;L++)x[L]=arguments[L];let[F,X]=x;return!Array.isArray(F)&&!Array.isArray(X)}))],Y,"extractMinAndMaxIndexed",null),(0,F.d)([G.g.filter((function(){for(var I=arguments.length,x=new Array(I),L=0;L<I;L++)x[L]=arguments[L];let[F]=x;return!Array.isArray(F)}))],Y,"extractMinAndMax",null)},13301:(I,x,L)=>{L.d(x,{e:()=>B});var F=L(13048),X=L(13309),G=L(13318),Y=L(13333),p=L(13101);class B{get materialDefines(){var I;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(I=this._getDrawWrapper())||void 0===I?void 0:I.defines}set materialDefines(I){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=I}_getDrawWrapper(I){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];I=I??this._engine.currentRenderPassId;let L=this._drawWrappers[I];return!L&&x&&(this._drawWrappers[I]=L=new p.d(this._mesh.tI().getEngine())),L}_removeDrawWrapper(I){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var L;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(L=this._drawWrappers[I])||void 0===L||L.dispose(x));this._drawWrappers[I]=void 0}get effect(){var I;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(I=this._getDrawWrapper())||void 0===I?void 0:I.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(I){this._mainDrawWrapperOverride=I}setEffect(I){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,L=arguments.length>2?arguments[2]:void 0,F=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const X=this._drawWrapper;X.setEffect(I,x,F),void 0!==L&&(X.materialContext=L),I||(X.defines=null,X.materialContext=void 0)}resetDrawCache(I){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==I)return void this._removeDrawWrapper(I,!0,x);for(const I of this._drawWrappers)null===I||void 0===I||I.dispose(x)}this._drawWrappers=[]}static AddToMesh(I,x,L,F,X,G,Y){return new B(I,x,L,F,X,G,Y,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(I,x,L,F,X,G,Y){let p=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],B=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=I,this.verticesStart=x,this.verticesCount=L,this.indexStart=F,this.indexCount=X,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=G,this._renderingMesh=Y||G,B&&G.jp.push(this),this._engine=this._mesh.tI().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=G.jp.length-1,p&&(this.refreshBoundingInfo(),G.LB(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(I){return this._boundingInfo=I,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const I=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return I||this._renderingMesh}kI(){let I=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const x=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!x)return I&&this._mesh.tI()._hasDefaultMaterial?this._mesh.tI().defaultMaterial:null;if(this._isMultiMaterial(x)){const I=x.getSubMaterial(this.materialIndex);return this._currentMaterial!==I&&(this._currentMaterial=I,this.resetDrawCache()),I}return x}_isMultiMaterial(I){return void 0!==I.getSubMaterial}refreshBoundingInfo(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.FB)return this;if(I||(I=this._renderingMesh.getVerticesData(F.g.PositionKind)),!I)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const x=this._renderingMesh.XB();let L;if(0===this.indexStart&&this.indexCount===x.length){const I=this._renderingMesh.getBoundingInfo();L={minimum:I.minimum.clone(),maximum:I.maximum.clone()}}else L=(0,Y.b)(I,x,this.indexStart,this.indexCount,this._renderingMesh.FB.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(L.minimum,L.maximum):this._boundingInfo=new G.d(L.minimum,L.maximum),this}_checkCollision(I){return this.getBoundingInfo()._checkCollision(I)}updateBoundingInfo(I){let x=this.getBoundingInfo();return x||(this.refreshBoundingInfo(),x=this.getBoundingInfo()),x&&x.update(I),this}isInFrustum(I){const x=this.getBoundingInfo();return!!x&&x.isInFrustum(I,this._mesh.CQ)}isCompletelyInFrustum(I){const x=this.getBoundingInfo();return!!x&&x.isCompletelyInFrustum(I)}render(I){return this._renderingMesh.render(this,I,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(I,x){if(!this._linesIndexBuffer){const L=6*Math.floor(this.indexCount/3),F=this.verticesStart+this.verticesCount>65535?new Uint32Array(L):new Uint16Array(L);let X=0;if(0===I.length)for(let I=this.indexStart;I<this.indexStart+this.indexCount;I+=3)F[X++]=I,F[X++]=I+1,F[X++]=I+1,F[X++]=I+2,F[X++]=I+2,F[X++]=I;else for(let x=this.indexStart;x<this.indexStart+this.indexCount;x+=3)F[X++]=I[x],F[X++]=I[x+1],F[X++]=I[x+1],F[X++]=I[x+2],F[X++]=I[x+2],F[X++]=I[x];this._linesIndexBuffer=x.createIndexBuffer(F),this._linesIndexCount=F.length}return this._linesIndexBuffer}canIntersects(I){const x=this.getBoundingInfo();return!!x&&I.intersectsBox(x.boundingBox)}intersects(I,x,L,F,X){const G=this.kI();if(!G)return null;let Y=3,p=!1;switch(G.fillMode){case 3:case 5:case 6:case 8:return null;case 7:Y=1,p=!0}return 4===G.fillMode?L.length?this._intersectLines(I,x,L,this._mesh.intersectionThreshold,F):this._intersectUnIndexedLines(I,x,L,this._mesh.intersectionThreshold,F):!L.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(I,x,L,F,X):this._intersectTriangles(I,x,L,Y,p,F,X)}_intersectLines(I,x,L,F,G){let Y=null;for(let p=this.indexStart;p<this.indexStart+this.indexCount;p+=2){const B=x[L[p]],l=x[L[p+1]],W=I.intersectionSegment(B,l,F);if(!(W<0)&&((G||!Y||W<Y.distance)&&(Y=new X.b(null,null,W),Y.faceId=p/2,G)))break}return Y}_intersectUnIndexedLines(I,x,L,F,G){let Y=null;for(let p=this.verticesStart;p<this.verticesStart+this.verticesCount;p+=2){const L=x[p],B=x[p+1],l=I.intersectionSegment(L,B,F);if(!(l<0)&&((G||!Y||l<Y.distance)&&(Y=new X.b(null,null,l),Y.faceId=p/2,G)))break}return Y}_intersectTriangles(I,x,L,F,X,G,Y){let p=null,B=-1;for(let l=this.indexStart;l<this.indexStart+this.indexCount-(3-F);l+=F){B++;const F=L[l],W=L[l+1],Q=L[l+2];if(X&&4294967295===Q){l+=2;continue}const e=x[F],g=x[W],v=x[Q];if(!e||!g||!v)continue;if(Y&&!Y(e,g,v,I,F,W,Q))continue;const z=I.intersectsTriangle(e,g,v);if(z){if(z.distance<0)continue;if((G||!p||z.distance<p.distance)&&(p=z,p.faceId=B,G))break}}return p}_intersectUnIndexedTriangles(I,x,L,F,X){let G=null;for(let Y=this.verticesStart;Y<this.verticesStart+this.verticesCount;Y+=3){const L=x[Y],p=x[Y+1],B=x[Y+2];if(X&&!X(L,p,B,I,-1,-1,-1))continue;const l=I.intersectsTriangle(L,p,B);if(l){if(l.distance<0)continue;if((F||!G||l.distance<G.distance)&&(G=l,G.faceId=Y/3,F))break}}return G}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(I,x){const L=new B(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,I,x,!1);if(!this.IsGlobal){const I=this.getBoundingInfo();if(!I)return L;L._boundingInfo=new G.d(I.minimum,I.maximum)}return L}dispose(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.tI().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const x=this._mesh.jp.indexOf(this);this._mesh.jp.splice(x,1),this.resetDrawCache(void 0,I)}getClassName(){return"SubMesh"}static CreateFromIndices(I,x,L,F,X){let G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=Number.MAX_VALUE,p=-Number.MAX_VALUE;const l=(X||F).XB();for(let B=x;B<x+L;B++){const I=l[B];I<Y&&(Y=I),I>p&&(p=I)}return new B(I,Y,p-Y+1,x,L,F,X,G)}}}}]);