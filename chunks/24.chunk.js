"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[24],{12776:(Z,l,C)=>{C.d(l,{e:()=>B});class B{constructor(Z,l,C){this.bu=Z,this.bv=l,this.distance=C,this.faceId=0,this.subMeshId=0}}},12784:(Z,l,C)=>{C.d(l,{c:()=>K});var B=C(12456),x=C(12442),b=C(12451);class K{constructor(Z,l,C){this.vectors=(0,B.b)(8,x.ql.Zero),this.center=x.ql.Zero(),this.centerWorld=x.ql.Zero(),this.extendSize=x.ql.Zero(),this.extendSizeWorld=x.ql.Zero(),this.directions=(0,B.b)(3,x.ql.Zero),this.vectorsWorld=(0,B.b)(8,x.ql.Zero),this.minimumWorld=x.ql.Zero(),this.maximumWorld=x.ql.Zero(),this.minimum=x.ql.Zero(),this.maximum=x.ql.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(Z,l,C)}reConstruct(Z,l,C){const B=Z.x,b=Z.y,K=Z.z,f=l.x,W=l.y,J=l.z,d=this.vectors;this.minimum.rb(B,b,K),this.maximum.rb(f,W,J),d[0].rb(B,b,K),d[1].rb(f,W,J),d[2].rb(f,b,K),d[3].rb(B,W,K),d[4].rb(B,b,J),d[5].rb(f,W,K),d[6].rb(B,W,J),d[7].rb(f,b,J),l.addToRef(Z,this.center).scaleInPlace(.5),l.subtractToRef(Z,this.extendSize).scaleInPlace(.5),this._worldMatrix=C||x.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(Z){const l=K._TmpVector3,C=this.maximum.subtractToRef(this.minimum,l[0]),B=C.length();C.normalizeFromLength(B);const x=B*Z,b=C.scaleInPlace(.5*x),f=this.center.subtractToRef(b,l[1]),W=this.center.addToRef(b,l[2]);return this.reConstruct(f,W,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){const l=this.minimumWorld,C=this.maximumWorld,B=this.directions,b=this.vectorsWorld,K=this.vectors;if(Z.isIdentity()){l.B(this.minimum),C.B(this.maximum);for(let Z=0;Z<8;++Z)b[Z].B(K[Z]);this.extendSizeWorld.B(this.extendSize),this.centerWorld.B(this.center)}else{l.ob(Number.MAX_VALUE),C.ob(-Number.MAX_VALUE);for(let B=0;B<8;++B){const f=b[B];x.ql.TransformCoordinatesToRef(K[B],Z,f),l.minimizeInPlace(f),C.maximizeInPlace(f)}C.subtractToRef(l,this.extendSizeWorld).scaleInPlace(.5),C.addToRef(l,this.centerWorld).scaleInPlace(.5)}x.ql.FromArrayToRef(Z.m,0,B[0]),x.ql.FromArrayToRef(Z.m,4,B[1]),x.ql.FromArrayToRef(Z.m,8,B[2]),this._worldMatrix=Z}isInFrustum(Z){return K.IsInFrustum(this.vectorsWorld,Z)}isCompletelyInFrustum(Z){return K.IsCompletelyInFrustum(this.vectorsWorld,Z)}intersectsPoint(Z){const l=this.minimumWorld,C=this.maximumWorld,B=l.x,x=l.y,K=l.z,f=C.x,W=C.y,J=C.z,d=Z.x,E=Z.y,G=Z.z,a=-b.e;return!(f-d<a||a>d-B)&&(!(W-E<a||a>E-x)&&!(J-G<a||a>G-K))}intersectsSphere(Z){return K.IntersectsSphere(this.minimumWorld,this.maximumWorld,Z.centerWorld,Z.radiusWorld)}intersectsMinMax(Z,l){const C=this.minimumWorld,B=this.maximumWorld,x=C.x,b=C.y,K=C.z,f=B.x,W=B.y,J=B.z,d=Z.x,E=Z.y,G=Z.z,a=l.x,q=l.y,z=l.z;return!(f<d||x>a)&&(!(W<E||b>q)&&!(J<G||K>z))}dispose(){var Z,l;null===(Z=this._drawWrapperFront)||void 0===Z||Z.dispose(),null===(l=this._drawWrapperBack)||void 0===l||l.dispose()}static Intersects(Z,l){return Z.intersectsMinMax(l.minimumWorld,l.maximumWorld)}static IntersectsSphere(Z,l,C,B){const b=K._TmpVector3[0];x.ql.ClampToRef(C,Z,l,b);return x.ql.DistanceSquared(C,b)<=B*B}static IsCompletelyInFrustum(Z,l){for(let C=0;C<6;++C){const B=l[C];for(let l=0;l<8;++l)if(B.dotCoordinate(Z[l])<0)return!1}return!0}static IsInFrustum(Z,l){for(let C=0;C<6;++C){let B=!0;const x=l[C];for(let l=0;l<8;++l)if(x.dotCoordinate(Z[l])>=0){B=!1;break}if(B)return!1}return!0}}K._TmpVector3=(0,B.b)(3,x.ql.Zero)},12781:(Z,l,C)=>{C.d(l,{d:()=>E});var B=C(12456),x=C(12442),b=C(12784),K=C(12788);const f={min:0,max:0},W={min:0,max:0},J=(Z,l,C)=>{const B=x.ql.Dot(l.centerWorld,Z),b=Math.abs(x.ql.Dot(l.directions[0],Z))*l.extendSize.x+Math.abs(x.ql.Dot(l.directions[1],Z))*l.extendSize.y+Math.abs(x.ql.Dot(l.directions[2],Z))*l.extendSize.z;C.min=B-b,C.max=B+b},d=(Z,l,C)=>(J(Z,l,f),J(Z,C,W),!(f.min>W.max||W.min>f.max));class E{constructor(Z,l,C){this._isLocked=!1,this.boundingBox=new b.c(Z,l,C),this.boundingSphere=new K.b(Z,l,C)}reConstruct(Z,l,C){this.boundingBox.reConstruct(Z,l,C),this.boundingSphere.reConstruct(Z,l,C)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(Z){this._isLocked=Z}update(Z){this._isLocked||(this.boundingBox._update(Z),this.boundingSphere._update(Z))}centerOn(Z,l){const C=E._TmpVector3[0].B(Z).JG(l),B=E._TmpVector3[1].B(Z).addInPlace(l);return this.boundingBox.reConstruct(C,B,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(C,B,this.boundingBox.getWorldMatrix()),this}encapsulate(Z){const l=x.ql.Minimize(this.minimum,Z),C=x.ql.Maximize(this.maximum,Z);return this.reConstruct(l,C,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(Z){const l=x.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(l);const C=x.TmpVectors.ql[0];return x.ql.TransformCoordinatesToRef(Z.boundingBox.minimumWorld,l,C),this.encapsulate(C),x.ql.TransformCoordinatesToRef(Z.boundingBox.maximumWorld,l,C),this.encapsulate(C),this}scale(Z){return this.boundingBox.scale(Z),this.boundingSphere.scale(Z),this}isInFrustum(Z){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===l||3===l)&&this.boundingSphere.isCenterInFrustum(Z))return!0;if(!this.boundingSphere.isInFrustum(Z))return!1;return!(1!==l&&3!==l)||this.boundingBox.isInFrustum(Z)}get diagonalLength(){const Z=this.boundingBox;return Z.maximumWorld.subtractToRef(Z.minimumWorld,E._TmpVector3[0]).length()}isCompletelyInFrustum(Z){return this.boundingBox.isCompletelyInFrustum(Z)}_checkCollision(Z){return Z._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(Z){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(Z)&&!!this.boundingBox.intersectsPoint(Z))}intersects(Z,l){if(!K.b.Intersects(this.boundingSphere,Z.boundingSphere))return!1;if(!b.c.Intersects(this.boundingBox,Z.boundingBox))return!1;if(!l)return!0;const C=this.boundingBox,B=Z.boundingBox;return!!d(C.directions[0],C,B)&&(!!d(C.directions[1],C,B)&&(!!d(C.directions[2],C,B)&&(!!d(B.directions[0],C,B)&&(!!d(B.directions[1],C,B)&&(!!d(B.directions[2],C,B)&&(!!d(x.ql.Cross(C.directions[0],B.directions[0]),C,B)&&(!!d(x.ql.Cross(C.directions[0],B.directions[1]),C,B)&&(!!d(x.ql.Cross(C.directions[0],B.directions[2]),C,B)&&(!!d(x.ql.Cross(C.directions[1],B.directions[0]),C,B)&&(!!d(x.ql.Cross(C.directions[1],B.directions[1]),C,B)&&(!!d(x.ql.Cross(C.directions[1],B.directions[2]),C,B)&&(!!d(x.ql.Cross(C.directions[2],B.directions[0]),C,B)&&(!!d(x.ql.Cross(C.directions[2],B.directions[1]),C,B)&&!!d(x.ql.Cross(C.directions[2],B.directions[2]),C,B))))))))))))))}}E._TmpVector3=(0,B.b)(2,x.ql.Zero)},12788:(Z,l,C)=>{C.d(l,{b:()=>b});var B=C(12456),x=C(12442);class b{constructor(Z,l,C){this.center=x.ql.Zero(),this.centerWorld=x.ql.Zero(),this.minimum=x.ql.Zero(),this.maximum=x.ql.Zero(),this.reConstruct(Z,l,C)}reConstruct(Z,l,C){this.minimum.B(Z),this.maximum.B(l);const B=x.ql.Distance(Z,l);l.addToRef(Z,this.center).scaleInPlace(.5),this.radius=.5*B,this._update(C||x.Matrix.IdentityReadOnly)}scale(Z){const l=this.radius*Z,C=b._TmpVector3,B=C[0].ob(l),x=this.center.subtractToRef(B,C[1]),K=this.center.addToRef(B,C[2]);return this.reConstruct(x,K,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){if(Z.isIdentity())this.centerWorld.B(this.center),this.radiusWorld=this.radius;else{x.ql.TransformCoordinatesToRef(this.center,Z,this.centerWorld);const l=b._TmpVector3[0];x.ql.TransformNormalFromFloatsToRef(1,1,1,Z,l),this.radiusWorld=Math.max(Math.abs(l.x),Math.abs(l.y),Math.abs(l.z))*this.radius}}isInFrustum(Z){const l=this.centerWorld,C=this.radiusWorld;for(let B=0;B<6;B++)if(Z[B].dotCoordinate(l)<=-C)return!1;return!0}isCenterInFrustum(Z){const l=this.centerWorld;for(let C=0;C<6;C++)if(Z[C].dotCoordinate(l)<0)return!1;return!0}intersectsPoint(Z){const l=x.ql.DistanceSquared(this.centerWorld,Z);return!(this.radiusWorld*this.radiusWorld<l)}static Intersects(Z,l){const C=x.ql.DistanceSquared(Z.centerWorld,l.centerWorld),B=Z.radiusWorld+l.radiusWorld;return!(B*B<C)}static CreateFromCenterAndRadius(Z,l,C){this._TmpVector3[0].B(Z),this._TmpVector3[1].rb(0,0,l),this._TmpVector3[2].B(Z),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].JG(this._TmpVector3[1]);const B=new b(this._TmpVector3[0],this._TmpVector3[2]);return B._worldMatrix=C||x.Matrix.Identity(),B}}b._TmpVector3=(0,B.b)(3,x.ql.Zero)},12804:(Z,l,C)=>{function B(Z){-1===Z.indexOf("vClipPlane")&&Z.push("vClipPlane"),-1===Z.indexOf("vClipPlane2")&&Z.push("vClipPlane2"),-1===Z.indexOf("vClipPlane3")&&Z.push("vClipPlane3"),-1===Z.indexOf("vClipPlane4")&&Z.push("vClipPlane4"),-1===Z.indexOf("vClipPlane5")&&Z.push("vClipPlane5"),-1===Z.indexOf("vClipPlane6")&&Z.push("vClipPlane6")}function x(Z,l,C){const B=!!(Z.clipPlane??l.clipPlane),x=!!(Z.clipPlane2??l.clipPlane2),b=!!(Z.clipPlane3??l.clipPlane3),K=!!(Z.clipPlane4??l.clipPlane4),f=!!(Z.clipPlane5??l.clipPlane5),W=!!(Z.clipPlane6??l.clipPlane6);B&&C.push("#define CLIPPLANE"),x&&C.push("#define CLIPPLANE2"),b&&C.push("#define CLIPPLANE3"),K&&C.push("#define CLIPPLANE4"),f&&C.push("#define CLIPPLANE5"),W&&C.push("#define CLIPPLANE6")}function b(Z,l,C){let B=!1;const x=!!(Z.clipPlane??l.clipPlane),b=!!(Z.clipPlane2??l.clipPlane2),K=!!(Z.clipPlane3??l.clipPlane3),f=!!(Z.clipPlane4??l.clipPlane4),W=!!(Z.clipPlane5??l.clipPlane5),J=!!(Z.clipPlane6??l.clipPlane6);return C.CLIPPLANE!==x&&(C.CLIPPLANE=x,B=!0),C.CLIPPLANE2!==b&&(C.CLIPPLANE2=b,B=!0),C.CLIPPLANE3!==K&&(C.CLIPPLANE3=K,B=!0),C.CLIPPLANE4!==f&&(C.CLIPPLANE4=f,B=!0),C.CLIPPLANE5!==W&&(C.CLIPPLANE5=W,B=!0),C.CLIPPLANE6!==J&&(C.CLIPPLANE6=J,B=!0),B}function K(Z,l,C){let B=l.clipPlane??C.clipPlane;f(Z,"vClipPlane",B),B=l.clipPlane2??C.clipPlane2,f(Z,"vClipPlane2",B),B=l.clipPlane3??C.clipPlane3,f(Z,"vClipPlane3",B),B=l.clipPlane4??C.clipPlane4,f(Z,"vClipPlane4",B),B=l.clipPlane5??C.clipPlane5,f(Z,"vClipPlane5",B),B=l.clipPlane6??C.clipPlane6,f(Z,"vClipPlane6",B)}function f(Z,l,C){C&&Z.setFloat4(l,C.normal.x,C.normal.y,C.normal.z,C.d)}C.d(l,{b:()=>B,d:()=>K,f:()=>b,h:()=>x})},12758:(Z,l,C)=>{C.d(l,{d:()=>B});class B{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(Z,l){this._defines[Z]||(Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z),this._defines[Z]=new Array),this._defines[Z].push(l)}addCPUSkinningFallback(Z,l){this._mesh=l,Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(Z,l){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,Z=Z.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),l._bonesComputationForcedToCPU=!0;const C=this._mesh.cZ();for(let Z=0;Z<C.meshes.length;Z++){const B=C.meshes[Z];if(B.material){if(B.computeBonesUsingShaders&&0!==B.numBoneInfluencers)if(B.material.getEffect()===l)B.computeBonesUsingShaders=!1;else if(B.zb)for(const Z of B.zb){if(Z.effect===l){B.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&B.computeBonesUsingShaders&&B.numBoneInfluencers>0&&(B.computeBonesUsingShaders=!1)}}else{const l=this._defines[this._currentRank];if(l)for(let C=0;C<l.length;C++)Z=Z.replace("#define "+l[C],"");this._currentRank++}return Z}}},12769:(Z,l,C)=>{C.d(l,{b:()=>Y});var B=C(12428),x=C(12432),b=C(12248),K=C(12251),f=C(12295),W=C(12771),J=C(12729),d=C(12263),E=C(12503),G=C(12578),a=C(12478);class q{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(Z){this._func=Z}get funcRef(){return this._funcRef}set funcRef(Z){this._funcRef=Z}get funcMask(){return this._funcMask}set funcMask(Z){this._funcMask=Z}get opStencilFail(){return this._opStencilFail}set opStencilFail(Z){this._opStencilFail=Z}get opDepthFail(){return this._opDepthFail}set opDepthFail(Z){this._opDepthFail=Z}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(Z){this._opStencilDepthPass=Z}get mask(){return this._mask}set mask(Z){this._mask=Z}get enabled(){return this._enabled}set enabled(Z){this._enabled=Z}getClassName(){return"MaterialStencilState"}copyTo(Z){a.b.Clone((()=>Z),this)}serialize(){return a.b.Serialize(this)}parse(Z,l,C){a.b.Parse((()=>this),Z,l,C)}}(0,B.b)([(0,x.R)()],q.prototype,"func",null),(0,B.b)([(0,x.R)()],q.prototype,"funcRef",null),(0,B.b)([(0,x.R)()],q.prototype,"funcMask",null),(0,B.b)([(0,x.R)()],q.prototype,"opStencilFail",null),(0,B.b)([(0,x.R)()],q.prototype,"opDepthFail",null),(0,B.b)([(0,x.R)()],q.prototype,"opStencilDepthPass",null),(0,B.b)([(0,x.R)()],q.prototype,"mask",null),(0,B.b)([(0,x.R)()],q.prototype,"enabled",null);var z=C(12800);class Y{get _supportGlowLayer(){return!1}set _glowModeEnabled(Z){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(Z){if(this._alpha===Z)return;const l=this._alpha;this._alpha=Z,1!==l&&1!==Z||this.mE(Y.MiscDirtyFlag+Y.PrePassDirtyFlag)}get alpha(){return this._alpha}set Ub(Z){this._backFaceCulling!==Z&&(this._backFaceCulling=Z,this.mE(Y.TextureDirtyFlag))}get Ub(){return this._backFaceCulling}set cullBackFaces(Z){this._cullBackFaces!==Z&&(this._cullBackFaces=Z,this.mE(Y.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(Z){this._blockDirtyMechanism!==Z&&(this._blockDirtyMechanism=Z,Z||this.pG())}atomicMaterialsUpdate(Z){this.blockDirtyMechanism=!0;try{Z(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(Z){this._onDisposeObserver&&this.xb.remove(this._onDisposeObserver),this._onDisposeObserver=this.xb.add(Z)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new K.b),this._onBindObservable}set onBind(Z){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(Z)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new K.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new K.b),this._onEffectCreatedObservable}set alphaMode(Z){this._alphaMode!==Z&&(this._alphaMode=Z,this.mE(Y.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(Z){this._needDepthPrePass!==Z&&(this._needDepthPrePass=Z,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(Z){this._fogEnabled!==Z&&(this._fogEnabled=Z,this.mE(Y.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case Y.WireFrameFillMode:case Y.LineListDrawMode:case Y.LineLoopDrawMode:case Y.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(Z){this.fillMode=Z?Y.WireFrameFillMode:Y.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case Y.PointFillMode:case Y.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(Z){this.fillMode=Z?Y.PointFillMode:Y.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(Z){this._fillMode!==Z&&(this._fillMode=Z,this.mE(Y.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(Z){const l=this.cZ().getEngine().getCaps().fragmentDepthSupported;Z&&!l&&d.e.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=Z&&l,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(Z){this._drawWrapper=Z}constructor(Z,l,C){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.xb=new K.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.bb=new q,this._useUBO=!1,this._fillMode=Y.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=Z;const x=l||f.b.LastCreatedScene;x&&(this._scene=x,this._dirtyCallbacks={},this._forceGLSL=B,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=Z||b.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new G.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new J.e(this._scene.getEngine(),void 0,void 0,Z),this._useUBO=this.cZ().getEngine().supportsUniformBuffers,this._createUniformBuffer(),C||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),Y.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var Z;const l=this.cZ().getEngine();null===(Z=this._uniformBuffer)||void 0===Z||Z.dispose(),l.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new J.e(l,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new J.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(Z){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.pG(),this.checkReadyOnlyOnce=!0}unfreeze(){this.pG(),this.checkReadyOnlyOnce=!1}isReady(Z,l){return!0}isReadyForSubMesh(Z,l,C){const B=l.materialDefines;return!!B&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}cZ(){return this._scene}_getEffectiveOrientation(Z){return null!==this.sideOrientation?this.sideOrientation:Z.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(Z){this._transparencyMode!==Z&&(this._transparencyMode=Z,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===Y.MATERIAL_ALPHABLEND||this._transparencyMode===Y.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===Y.MATERIAL_ALPHATEST||this._transparencyMode===Y.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===Y.MATERIAL_OPAQUE||this._transparencyMode===Y.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsBlend:Z.visibility<1||!this._disableAlphaBlending&&(Z.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(Z)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}pG(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const l=this.cZ().meshes;for(const C of l)if(C.zb)for(const l of C.zb)if(l.MZ()===this)for(const C of l._drawWrappers)C&&this._materialContext===C.materialContext&&(C._wasPreviouslyReady=!1,C._wasPreviouslyUsingInstances=null,C._forceRebindOnNextCall=Z);Z&&this.mE(Y.AllDirtyFlag)}_preBind(Z){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const C=this._scene.getEngine(),B=(null==l?this.sideOrientation:l)===Y.ClockWiseSideOrientation;return C.enableEffect(Z||this._getDrawWrapper()),C.setState(this.Ub,this.zOffset,!1,B,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.bb,this.zOffsetUnits),B}bind(Z,l){}buildUniformLayout(){const Z=this._uniformBuffer;this._eventInfo.ubo=Z,this._callbackPluginEventGeneric(8,this._eventInfo),Z.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(Z,l,C){const B=C._drawWrapper;this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),B._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(Z){}bindView(Z){this._useUBO?this._needToBindSceneUbo=!0:Z.setMatrix("view",this.cZ().getViewMatrix())}bindViewProjection(Z){this._useUBO?this._needToBindSceneUbo=!0:(Z.setMatrix("viewProjection",this.cZ().getTransformMatrix()),Z.setMatrix("projection",this.cZ().getProjectionMatrix()))}bindEyePosition(Z,l){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(Z,l)}_afterBind(Z){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&l&&(this._needToBindSceneUbo=!1,(0,z.q)(l,this.cZ().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=Z?Z.visibility:1,this._onBindObservable&&Z&&this._onBindObservable.notifyObservers(Z),this.disableDepthWrite){const Z=this._scene.getEngine();this._cachedDepthWriteState=Z.getDepthWrite(),Z.setDepthWrite(!1)}if(this.disableColorWrite){const Z=this._scene.getEngine();this._cachedColorWriteState=Z.getColorWrite(),Z.setColorWrite(!1)}if(0!==this.depthFunction){const Z=this._scene.getEngine();this._cachedDepthFunctionState=Z.getDepthFunction()||0,Z.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(Z){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=Z,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(Z){return null}_clonePlugins(Z,l){const C={};if(this._serializePlugins(C),Y._ParsePlugins(C,Z,this._scene,l),this.pluginManager)for(const B of this.pluginManager._plugins){const l=Z.pluginManager.getPlugin(B.name);l&&B.copyTo(l)}}getBindedMeshes(){if(this.meshMap){const Z=[];for(const l in this.meshMap){const C=this.meshMap[l];C&&Z.push(C)}return Z}return this._scene.meshes.filter((Z=>Z.material===this))}forceCompilation(Z,l,C,B){const x={clipPlane:!1,useInstances:!1,...C},b=this.cZ(),K=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const f=()=>{if(!this._scene||!this._scene.getEngine())return;const C=b.clipPlane;if(x.clipPlane&&(b.clipPlane=new E.e(0,0,0,1)),this._storeEffectOnSubMeshes){let C=!0,b=null;if(Z.zb){const l=new W.b(0,0,0,0,0,Z,void 0,!1,!1);l.materialDefines&&(l.materialDefines._renderId=-1),this.isReadyForSubMesh(Z,l,x.useInstances)||(l.effect&&l.effect.getCompilationError()&&l.effect.allFallbacksProcessed()?b=l.effect.getCompilationError():(C=!1,setTimeout(f,16)))}C&&(this.allowShaderHotSwapping=K,b&&B&&B(b),l&&l(this))}else this.isReady()?(this.allowShaderHotSwapping=K,l&&l(this)):setTimeout(f,16);x.clipPlane&&(b.clipPlane=C)};f()}async forceCompilationAsync(Z,l){return await new Promise(((C,B)=>{this.forceCompilation(Z,(()=>{C()}),l,(Z=>{B(Z)}))}))}mE(Z){this.cZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(Y._DirtyCallbackArray.length=0,Z&Y.ImageProcessingDirtyFlag&&Y._DirtyCallbackArray.push(Y._ImageProcessingDirtyCallBack),Z&Y.TextureDirtyFlag&&Y._DirtyCallbackArray.push(Y._TextureDirtyCallBack),Z&Y.LightDirtyFlag&&Y._DirtyCallbackArray.push(Y._LightsDirtyCallBack),Z&Y.FresnelDirtyFlag&&Y._DirtyCallbackArray.push(Y._FresnelDirtyCallBack),Z&Y.AttributesDirtyFlag&&Y._DirtyCallbackArray.push(Y._AttributeDirtyCallBack),Z&Y.MiscDirtyFlag&&Y._DirtyCallbackArray.push(Y._MiscDirtyCallBack),Z&Y.PrePassDirtyFlag&&Y._DirtyCallbackArray.push(Y._PrePassDirtyCallBack),Y._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(Y._RunDirtyCallBacks),this.cZ().resetCachedMaterial())}resetDrawCache(){const Z=this.cZ().meshes;for(const l of Z)if(l.zb)for(const Z of l.zb)Z.MZ()===this&&Z.resetDrawCache()}_markAllSubMeshesAsDirty(Z){const l=this.cZ();if(l.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const C=l.meshes;for(const B of C)if(B.zb)for(const C of B.zb){if((C.MZ()||(l._hasDefaultMaterial?l.defaultMaterial:null))===this)for(const l of C._drawWrappers)l&&l.defines&&l.defines.markAllAsDirty&&this._materialContext===l.materialContext&&Z(l.defines)}}_markScenePrePassDirty(){if(this.cZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const Z=this.cZ().enablePrePassRenderer();Z&&Z.mE()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(Y._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(Y._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(Y._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(Y._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(Y._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(Y._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(Y._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(Y._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(Y._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(Y._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const Z=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.xb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(Z)}))}}setPrePassRenderer(Z){return!1}dispose(Z,l,C){const B=this.cZ();if(B.stopAnimation(this),B.freeProcessedMaterials(),B.removeMaterial(this),this._eventInfo.forceDisposeTextures=l,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const Z=this._parentContainer.materials.indexOf(this);Z>-1&&this._parentContainer.materials.splice(Z,1),this._parentContainer=null}if(!0!==C)if(this.meshMap)for(const x in this.meshMap){const Z=this.meshMap[x];this._disposeMeshResources(Z)}else{const Z=B.meshes;for(const l of Z)this._disposeMeshResources(l)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.xb.notifyObservers(this),this.xb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(Z){if(!Z)return;const l=Z.nb,C=Z._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(Z.zb&&C)for(const x of Z.zb){const Z=x._drawWrappers;for(let b=0;b<Z.length;b++){var B;const K=null===(B=Z[b])||void 0===B?void 0:B.effect;if(!K)continue;C[b]===this&&(null===l||void 0===l||l._releaseVertexArrayObject(K),x._removeDrawWrapper(b,!0,!0))}}}else null===l||void 0===l||l._releaseVertexArrayObject(this._drawWrapper.effect);Z.material!==this||Z.sourceMesh||(Z.material=null)}serialize(){const Z=a.b.Serialize(this);return Z.bb=this.bb.serialize(),Z.uniqueId=this.uniqueId,this._serializePlugins(Z),Z}_serializePlugins(Z){if(Z.plugins={},this.pluginManager)for(const l of this.pluginManager._plugins)l.doNotSerialize||(Z.plugins[l.getClassName()]=l.serialize())}static Parse(Z,l,C){if(Z.customType){if("BABYLON.PBRMaterial"===Z.customType&&Z.overloadedAlbedo&&(Z.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return d.e.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else Z.customType="BABYLON.StandardMaterial";const B=b.Tools.Instantiate(Z.customType).Parse(Z,l,C);return B._loadedUniqueId=Z.uniqueId,B}static _ParsePlugins(Z,l,C,B){if(Z.plugins)for(const f in Z.plugins){var x,K;const W=Z.plugins[f];let J=null===(x=l.pluginManager)||void 0===x?void 0:x.getPlugin(W.name);if(!J){const Z=b.Tools.Instantiate("BABYLON."+f);Z&&(J=new Z(l))}null===(K=J)||void 0===K||K.parse(W,C,B)}}}Y.TriangleFillMode=0,Y.WireFrameFillMode=1,Y.PointFillMode=2,Y.PointListDrawMode=3,Y.LineListDrawMode=4,Y.LineLoopDrawMode=5,Y.LineStripDrawMode=6,Y.TriangleStripDrawMode=7,Y.TriangleFanDrawMode=8,Y.ClockWiseSideOrientation=0,Y.CounterClockWiseSideOrientation=1,Y.ImageProcessingDirtyFlag=64,Y.TextureDirtyFlag=1,Y.LightDirtyFlag=2,Y.FresnelDirtyFlag=4,Y.AttributesDirtyFlag=8,Y.MiscDirtyFlag=16,Y.PrePassDirtyFlag=32,Y.AllDirtyFlag=127,Y.MATERIAL_OPAQUE=0,Y.MATERIAL_ALPHATEST=1,Y.MATERIAL_ALPHABLEND=2,Y.MATERIAL_ALPHATESTANDBLEND=3,Y.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,Y.MATERIAL_NORMALBLENDMETHOD_RNM=1,Y.OnEventObservable=new K.b,Y._AllDirtyCallBack=Z=>Z.markAllAsDirty(),Y._ImageProcessingDirtyCallBack=Z=>Z.markAsImageProcessingDirty(),Y._TextureDirtyCallBack=Z=>Z.markAsTexturesDirty(),Y._FresnelDirtyCallBack=Z=>Z.markAsFresnelDirty(),Y._MiscDirtyCallBack=Z=>Z.markAsMiscDirty(),Y._PrePassDirtyCallBack=Z=>Z.markAsPrePassDirty(),Y._LightsDirtyCallBack=Z=>Z.markAsLightDirty(),Y._AttributeDirtyCallBack=Z=>Z.markAsAttributesDirty(),Y._FresnelAndMiscDirtyCallBack=Z=>{Y._FresnelDirtyCallBack(Z),Y._MiscDirtyCallBack(Z)},Y._TextureAndMiscDirtyCallBack=Z=>{Y._TextureDirtyCallBack(Z),Y._MiscDirtyCallBack(Z)},Y._DirtyCallbackArray=[],Y._RunDirtyCallBacks=Z=>{for(const l of Y._DirtyCallbackArray)l(Z)},(0,B.b)([(0,x.R)()],Y.prototype,"id",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"uniqueId",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"name",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"metadata",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"checkReadyOnEveryCall",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"checkReadyOnlyOnce",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"state",void 0),(0,B.b)([(0,x.R)("alpha")],Y.prototype,"_alpha",void 0),(0,B.b)([(0,x.R)("Ub")],Y.prototype,"_backFaceCulling",void 0),(0,B.b)([(0,x.R)("cullBackFaces")],Y.prototype,"_cullBackFaces",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"sideOrientation",void 0),(0,B.b)([(0,x.R)("alphaMode")],Y.prototype,"_alphaMode",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"_needDepthPrePass",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"disableDepthWrite",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"disableColorWrite",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"forceDepthWrite",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"depthFunction",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"separateCullingPass",void 0),(0,B.b)([(0,x.R)("fogEnabled")],Y.prototype,"_fogEnabled",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"pointSize",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"zOffset",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"zOffsetUnits",void 0),(0,B.b)([(0,x.R)()],Y.prototype,"pointsCloud",null),(0,B.b)([(0,x.R)()],Y.prototype,"fillMode",null),(0,B.b)([(0,x.R)()],Y.prototype,"useLogarithmicDepth",null),(0,B.b)([(0,x.R)()],Y.prototype,"transparencyMode",null)},12800:(Z,l,C)=>{C.d(l,{$:()=>k,C:()=>c,D:()=>U,H:()=>a,K:()=>G,O:()=>R,S:()=>v,T:()=>e,X:()=>P,Y:()=>r,b:()=>s,cb:()=>V,eb:()=>g,f:()=>E,fb:()=>M,g:()=>n,hb:()=>q,j:()=>d,n:()=>z,q:()=>Y,t:()=>S,x:()=>t,y:()=>i});var B=C(12263),x=C(12494),b=C(12295),K=C(12755),f=C(12804);const W=x.Sl.Black(),J={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function d(Z,l,C){if(!Z||Z.LOGARITHMICDEPTH||Z.indexOf&&Z.indexOf("LOGARITHMICDEPTH")>=0){const Z=C.activeCamera;1===Z.mode&&B.e.Error("Logarithmic depth is not compatible with orthographic cameras!",20),l.setFloat("logarithmicDepthConstant",2/(Math.log(Z.maxZ+1)/Math.LN2))}}function E(Z,l,C){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];C&&Z.fogEnabled&&(!l||l.applyFog)&&0!==Z.fogMode&&(C.setFloat4("vFogInfos",Z.fogMode,Z.fogStart,Z.fogEnd,Z.fogDensity),B?(Z.fogColor.toLinearSpaceToRef(W,Z.getEngine().useExactSrgbConversions),C.setColor3("vFogColor",W)):C.setColor3("vFogColor",Z.fogColor))}function G(Z,l,C,B,x,b,K,f,W,d){const E=Z.numMaxInfluencers||Z.numInfluencers;return E<=0?0:(l.push("#define MORPHTARGETS"),Z.hasPositions&&l.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),Z.hasNormals&&l.push("#define MORPHTARGETTEXTURE_HASNORMALS"),Z.hasTangents&&l.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),Z.hasUVs&&l.push("#define MORPHTARGETTEXTURE_HASUVS"),Z.hasUV2s&&l.push("#define MORPHTARGETTEXTURE_HASUV2S"),Z.hasColors&&l.push("#define MORPHTARGETTEXTURE_HASCOLORS"),Z.supportsPositions&&x&&l.push("#define MORPHTARGETS_POSITION"),Z.supportsNormals&&b&&l.push("#define MORPHTARGETS_NORMAL"),Z.supportsTangents&&K&&l.push("#define MORPHTARGETS_TANGENT"),Z.supportsUVs&&f&&l.push("#define MORPHTARGETS_UV"),Z.supportsUV2s&&W&&l.push("#define MORPHTARGETS_UV2"),Z.supportsColors&&d&&l.push("#define MORPHTARGETS_COLOR"),l.push("#define NUM_MORPH_INFLUENCERS "+E),Z.isUsingTextureForTargets&&l.push("#define MORPHTARGETS_TEXTURE"),J.NUM_MORPH_INFLUENCERS=E,J.NORMAL=b,J.TANGENT=K,J.UV=f,J.UV2=W,J.COLOR=d,a(C,B,J,x),E)}function a(Z,l,C){let x=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const K=C.NUM_MORPH_INFLUENCERS;if(K>0&&b.b.LastCreatedEngine){const f=b.b.LastCreatedEngine.getCaps().maxVertexAttribs,W=l.morphTargetManager;if(null!==W&&void 0!==W&&W.isUsingTextureForTargets)return;const J=W&&W.supportsPositions&&x,d=W&&W.supportsNormals&&C.NORMAL,E=W&&W.supportsTangents&&C.TANGENT,G=W&&W.supportsUVs&&C.UV1,a=W&&W.supportsUV2s&&C.UV2,q=W&&W.supportsColors&&C.VERTEXCOLOR;for(let C=0;C<K;C++)J&&Z.push("position"+C),d&&Z.push("normal"+C),E&&Z.push("tangent"+C),G&&Z.push("uv_"+C),a&&Z.push("uv2_"+C),q&&Z.push("color"+C),Z.length>f&&B.e.Error("Cannot add more vertex attributes for mesh "+l.name)}}function q(Z){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z.push("world0"),Z.push("world1"),Z.push("world2"),Z.push("world3"),l&&(Z.push("previousWorld0"),Z.push("previousWorld1"),Z.push("previousWorld2"),Z.push("previousWorld3"))}function z(Z,l){const C=Z.morphTargetManager;Z&&C&&l.setFloatArray("morphTargetInfluences",C.influences)}function Y(Z,l){l.bindToEffect(Z,"Scene")}function P(Z,l,C){l._needUVs=!0,l[C]=!0,Z.optimizeUVAllocation&&Z.getTextureMatrix().isIdentityAs3x2()?(l[C+"DIRECTUV"]=Z.coordinatesIndex+1,l["MAINUV"+(Z.coordinatesIndex+1)]=!0):l[C+"DIRECTUV"]=0}function S(Z,l,C){const B=Z.getTextureMatrix();l.sb(C+"Matrix",B)}function i(Z,l,C){C.BAKED_VERTEX_ANIMATION_TEXTURE&&C.INSTANCES&&Z.push("bakedVertexAnimationSettingsInstanced")}function s(Z,l,C){var B;if(l&&Z&&(Z.computeBonesUsingShaders&&l._bonesComputationForcedToCPU&&(Z.computeBonesUsingShaders=!1),Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton)){const x=Z.skeleton;if(x.isUsingTextureForMatrices&&l.getUniformIndex("boneTextureWidth")>-1){const C=x.getTransformMatrixTexture(Z);l.setTexture("boneSampler",C),l.setFloat("boneTextureWidth",4*(x.bones.length+1))}else{const b=x.getTransformMatrices(Z);b&&(l.setMatrices("mBones",b),C&&Z.cZ().prePassRenderer&&Z.cZ().prePassRenderer.getIndex(2)&&(C.previousBones[Z.uniqueId]||(C.previousBones[Z.uniqueId]=b.slice()),l.setMatrices("mPreviousBones",C.previousBones[Z.uniqueId]),B=b,C.previousBones[Z.uniqueId].set(B)))}}}function F(Z,l,C,B,x){let b=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];Z._bindLight(l,C,B,x,b)}function n(Z,l,C,B){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const b=Math.min(l.lightSources.length,x);for(let K=0;K<b;K++){F(l.lightSources[K],K,Z,C,"boolean"===typeof B?B:B.SPECULARTERM,l.receiveShadows)}}function c(Z,l,C,B){C.NUM_BONE_INFLUENCERS>0&&(B.addCPUSkinningFallback(0,l),Z.push("matricesIndices"),Z.push("matricesWeights"),C.NUM_BONE_INFLUENCERS>4&&(Z.push("matricesIndicesExtra"),Z.push("matricesWeightsExtra")))}function U(Z,l){(l.INSTANCES||l.THIN_INSTANCES)&&q(Z,!!l.PREPASS_VELOCITY),l.INSTANCESCOLOR&&Z.push("instanceColor")}function t(Z,l){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,x=0;for(let b=0;b<C&&Z["LIGHT"+b];b++)b>0&&(x=B+b,l.addFallback(x,"LIGHT"+b)),Z.SHADOWS||(Z["SHADOW"+b]&&l.addFallback(B,"SHADOW"+b),Z["SHADOWPCF"+b]&&l.addFallback(B,"SHADOWPCF"+b),Z["SHADOWPCSS"+b]&&l.addFallback(B,"SHADOWPCSS"+b),Z["SHADOWPOISSON"+b]&&l.addFallback(B,"SHADOWPOISSON"+b),Z["SHADOWESM"+b]&&l.addFallback(B,"SHADOWESM"+b),Z["SHADOWCLOSEESM"+b]&&l.addFallback(B,"SHADOWCLOSEESM"+b));return x++}function r(Z,l,C,B,x,b,K){let f=arguments.length>7&&void 0!==arguments[7]&&arguments[7];K._areMiscDirty&&(K.LOGARITHMICDEPTH=C,K.POINTSIZE=B,K.FOG=x&&function(Z,l){return l.fogEnabled&&Z.applyFog&&0!==l.fogMode}(Z,l),K.NONUNIFORMSCALING=Z.nonUniformScaling,K.ALPHATEST=b,K.DECAL_AFTER_DETAIL=f)}function e(Z,l,C,B){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,b=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!C._areLightsDirty)return C._needNormals;let K=0;const f={needNormals:C._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(Z.lightsEnabled&&!b)for(const J of l.lightSources)if(o(Z,l,J,K,C,B,f),K++,K===x)break;C.SPECULARTERM=f.specularEnabled,C.SHADOWS=f.shadowEnabled;for(let J=K;J<x;J++)void 0!==C["LIGHT"+J]&&(C["LIGHT"+J]=!1,C["HEMILIGHT"+J]=!1,C["POINTLIGHT"+J]=!1,C["DIRLIGHT"+J]=!1,C["SPOTLIGHT"+J]=!1,C["AREALIGHT"+J]=!1,C["SHADOW"+J]=!1,C["SHADOWCSM"+J]=!1,C["SHADOWCSMDEBUG"+J]=!1,C["SHADOWCSMNUM_CASCADES"+J]=!1,C["SHADOWCSMUSESHADOWMAXZ"+J]=!1,C["SHADOWCSMNOBLEND"+J]=!1,C["SHADOWCSM_RIGHTHANDED"+J]=!1,C["SHADOWPCF"+J]=!1,C["SHADOWPCSS"+J]=!1,C["SHADOWPOISSON"+J]=!1,C["SHADOWESM"+J]=!1,C["SHADOWCLOSEESM"+J]=!1,C["SHADOWCUBE"+J]=!1,C["SHADOWLOWQUALITY"+J]=!1,C["SHADOWMEDIUMQUALITY"+J]=!1);const W=Z.getEngine().getCaps();return void 0===C.SHADOWFLOAT&&(f.needRebuild=!0),C.SHADOWFLOAT=f.shadowEnabled&&(W.textureFloatRender&&W.textureFloatLinearFiltering||W.textureHalfFloatRender&&W.textureHalfFloatLinearFiltering),C.LIGHTMAPEXCLUDED=f.lightmapMode,f.needRebuild&&C.rebuild(),f.needNormals}function o(Z,l,C,B,x,b,f){switch(f.needNormals=!0,void 0===x["LIGHT"+B]&&(f.needRebuild=!0),x["LIGHT"+B]=!0,x["SPOTLIGHT"+B]=!1,x["HEMILIGHT"+B]=!1,x["POINTLIGHT"+B]=!1,x["DIRLIGHT"+B]=!1,x["AREALIGHT"+B]=!1,C.prepareLightSpecificDefines(x,B),x["LIGHT_FALLOFF_PHYSICAL"+B]=!1,x["LIGHT_FALLOFF_GLTF"+B]=!1,x["LIGHT_FALLOFF_STANDARD"+B]=!1,C.falloffType){case K.d.FALLOFF_GLTF:x["LIGHT_FALLOFF_GLTF"+B]=!0;break;case K.d.FALLOFF_PHYSICAL:x["LIGHT_FALLOFF_PHYSICAL"+B]=!0;break;case K.d.FALLOFF_STANDARD:x["LIGHT_FALLOFF_STANDARD"+B]=!0}if(b&&!C.FE.equalsFloats(0,0,0)&&(f.specularEnabled=!0),x["SHADOW"+B]=!1,x["SHADOWCSM"+B]=!1,x["SHADOWCSMDEBUG"+B]=!1,x["SHADOWCSMNUM_CASCADES"+B]=!1,x["SHADOWCSMUSESHADOWMAXZ"+B]=!1,x["SHADOWCSMNOBLEND"+B]=!1,x["SHADOWCSM_RIGHTHANDED"+B]=!1,x["SHADOWPCF"+B]=!1,x["SHADOWPCSS"+B]=!1,x["SHADOWPOISSON"+B]=!1,x["SHADOWESM"+B]=!1,x["SHADOWCLOSEESM"+B]=!1,x["SHADOWCUBE"+B]=!1,x["SHADOWLOWQUALITY"+B]=!1,x["SHADOWMEDIUMQUALITY"+B]=!1,l&&l.receiveShadows&&Z.shadowsEnabled&&C.shadowEnabled){const l=C.getShadowGenerator(Z.activeCamera)??C.getShadowGenerator();if(l){const Z=l.getShadowMap();Z&&Z.renderList&&Z.renderList.length>0&&(f.shadowEnabled=!0,l.prepareDefines(x,B))}}C.lightmapMode!=K.d.LIGHTMAP_DEFAULT?(f.lightmapMode=!0,x["LIGHTMAPEXCLUDED"+B]=!0,x["LIGHTMAPNOSPECULAR"+B]=C.lightmapMode==K.d.LIGHTMAP_SHADOWSONLY):(x["LIGHTMAPEXCLUDED"+B]=!1,x["LIGHTMAPNOSPECULAR"+B]=!1)}function v(Z,l,C,B,x){let b=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=function(Z,l){let C=!1;if(Z.activeCamera){const B=l.CAMERA_ORTHOGRAPHIC?1:0,x=l.CAMERA_PERSPECTIVE?1:0,b=1===Z.activeCamera.mode?1:0,K=0===Z.activeCamera.mode?1:0;(B^b||x^K)&&(l.CAMERA_ORTHOGRAPHIC=1===b,l.CAMERA_PERSPECTIVE=1===K,C=!0)}return C}(Z,B);!1!==b&&(W=(0,f.f)(C,Z,B)),B.DEPTHPREPASS!==!l.getColorWrite()&&(B.DEPTHPREPASS=!B.DEPTHPREPASS,W=!0),B.INSTANCES!==x&&(B.INSTANCES=x,W=!0),B.THIN_INSTANCES!==K&&(B.THIN_INSTANCES=K,W=!0),W&&B.markAsUnprocessed()}function R(Z,l,C,B){let x=arguments.length>4&&void 0!==arguments[4]&&arguments[4],b=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],K=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!l._areAttributesDirty&&l._needNormals===l._normals&&l._needUVs===l._uvs)return!1;l._normals=l._needNormals,l._uvs=l._needUVs,l.NORMAL=l._needNormals&&Z.isVerticesDataPresent("normal"),l._needNormals&&Z.isVerticesDataPresent("tangent")&&(l.TANGENT=!0);for(let f=1;f<=6;++f)l["UV"+f]=!!l._needUVs&&Z.isVerticesDataPresent(`uv${1===f?"":f}`);if(C){const C=Z.useVertexColors&&Z.isVerticesDataPresent("color");l.VERTEXCOLOR=C,l.VERTEXALPHA=Z.hasVertexAlpha&&C&&b}return Z.isVerticesDataPresent("instanceColor")&&(Z.hasInstances||Z.hasThinInstances)&&(l.INSTANCESCOLOR=!0),B&&function(Z,l){if(Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton){l.NUM_BONE_INFLUENCERS=Z.numBoneInfluencers;const C=void 0!==l.BONETEXTURE;if(Z.skeleton.isUsingTextureForMatrices&&C)l.BONETEXTURE=!0;else{l.BonesPerMesh=Z.skeleton.bones.length+1,l.BONETEXTURE=!C&&void 0;const B=Z.cZ().prePassRenderer;if(B&&B.enabled){const C=-1===B.excludedSkinnedMesh.indexOf(Z);l.BONES_VELOCITY_ENABLED=C}}}else l.NUM_BONE_INFLUENCERS=0,l.BonesPerMesh=0,void 0!==l.BONETEXTURE&&(l.BONETEXTURE=!1)}(Z,l),x&&function(Z,l){const C=Z.morphTargetManager;C?(l.MORPHTARGETS_UV=C.supportsUVs&&l.UV1,l.MORPHTARGETS_UV2=C.supportsUV2s&&l.UV2,l.MORPHTARGETS_TANGENT=C.supportsTangents&&l.TANGENT,l.MORPHTARGETS_NORMAL=C.supportsNormals&&l.NORMAL,l.MORPHTARGETS_POSITION=C.supportsPositions,l.MORPHTARGETS_COLOR=C.supportsColors,l.MORPHTARGETTEXTURE_HASUVS=C.hasUVs,l.MORPHTARGETTEXTURE_HASUV2S=C.hasUV2s,l.MORPHTARGETTEXTURE_HASTANGENTS=C.hasTangents,l.MORPHTARGETTEXTURE_HASNORMALS=C.hasNormals,l.MORPHTARGETTEXTURE_HASPOSITIONS=C.hasPositions,l.MORPHTARGETTEXTURE_HASCOLORS=C.hasColors,l.NUM_MORPH_INFLUENCERS=C.numMaxInfluencers||C.numInfluencers,l.MORPHTARGETS=l.NUM_MORPH_INFLUENCERS>0,l.MORPHTARGETS_TEXTURE=C.isUsingTextureForTargets):(l.MORPHTARGETS_UV=!1,l.MORPHTARGETS_UV2=!1,l.MORPHTARGETS_TANGENT=!1,l.MORPHTARGETS_NORMAL=!1,l.MORPHTARGETS_POSITION=!1,l.MORPHTARGETS_COLOR=!1,l.MORPHTARGETTEXTURE_HASUVS=!1,l.MORPHTARGETTEXTURE_HASUV2S=!1,l.MORPHTARGETTEXTURE_HASTANGENTS=!1,l.MORPHTARGETTEXTURE_HASNORMALS=!1,l.MORPHTARGETTEXTURE_HASPOSITIONS=!1,l.MORPHTARGETTEXTURE_HAS_COLORS=!1,l.MORPHTARGETS=!1,l.NUM_MORPH_INFLUENCERS=0)}(Z,l),K&&function(Z,l){const C=Z.bakedVertexAnimationManager;l.BAKED_VERTEX_ANIMATION_TEXTURE=!(!C||!C.isEnabled)}(Z,l),!0}function k(Z,l){if(Z.activeCamera){const C=l.MULTIVIEW;l.MULTIVIEW=null!==Z.activeCamera.outputRenderTarget&&Z.activeCamera.outputRenderTarget.getViewCount()>1,l.MULTIVIEW!=C&&l.markAsUnprocessed()}}function V(Z,l,C){const B=l.ORDER_INDEPENDENT_TRANSPARENCY,x=l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;l.ORDER_INDEPENDENT_TRANSPARENCY=Z.useOrderIndependentTransparency&&C,l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!Z.getEngine().getCaps().textureFloatLinearFiltering,B===l.ORDER_INDEPENDENT_TRANSPARENCY&&x===l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||l.markAsUnprocessed()}function g(Z,l,C){const B=l.PREPASS;if(!l._arePrePassDirty)return;const x=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(Z.prePassRenderer&&Z.prePassRenderer.enabled&&C){l.PREPASS=!0,l.SCENE_MRT_COUNT=Z.prePassRenderer.mrtCount,l.PREPASS_NORMAL_WORLDSPACE=Z.prePassRenderer.generateNormalsInWorldSpace,l.PREPASS_COLOR=!0,l.PREPASS_COLOR_INDEX=0;for(let C=0;C<x.length;C++){const B=Z.prePassRenderer.getIndex(x[C].type);-1!==B?(l[x[C].define]=!0,l[x[C].index]=B):l[x[C].define]=!1}}else{l.PREPASS=!1;for(let Z=0;Z<x.length;Z++)l[x[Z].define]=!1}l.PREPASS!=B&&(l.markAsUnprocessed(),l.markAsImageProcessingDirty())}function j(Z,l,C,B){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,b=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6];x&&x.push("Light"+Z),b||(l.push("vLightData"+Z,"vLightDiffuse"+Z,"vLightSpecular"+Z,"vLightDirection"+Z,"vLightWidth"+Z,"vLightHeight"+Z,"vLightFalloff"+Z,"vLightGround"+Z,"lightMatrix"+Z,"shadowsInfo"+Z,"depthValues"+Z),C.push("shadowTexture"+Z),C.push("depthTexture"+Z),l.push("viewFrustumZ"+Z,"cascadeBlendFactor"+Z,"lightSizeUVCorrection"+Z,"depthCorrection"+Z,"penumbraDarkness"+Z,"frustumLengths"+Z),B&&(C.push("projectionLightTexture"+Z),l.push("textureProjectionMatrix"+Z)),K&&C.push("iesLightTexture"+Z))}function M(Z,l,C){let B,x,b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(Z.uniformsNames){const K=Z;B=K.uniformsNames,x=K.uniformBuffersNames,l=K.samplers,C=K.defines,b=K.maxSimultaneousLights||0}else B=Z,l||(l=[]);for(let K=0;K<b&&C["LIGHT"+K];K++)j(K,B,l,C["PROJECTEDLIGHTTEXTURE"+K],x,!1,C["IESLIGHTTEXTURE"+K]);C.NUM_MORPH_INFLUENCERS&&(B.push("morphTargetInfluences"),B.push("morphTargetCount")),C.BAKED_VERTEX_ANIMATION_TEXTURE&&(B.push("bakedVertexAnimationSettings"),B.push("bakedVertexAnimationTextureSizeInverted"),B.push("bakedVertexAnimationTime"),l.push("bakedVertexAnimationTexture"))}},12760:(Z,l,C)=>{C.d(l,{e:()=>b});var B=C(12442),x=C(12769);class b extends x.b{constructor(Z,l){let C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(Z,l,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new B.Matrix,this._storeEffectOnSubMeshes=C}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(Z,l){return!!Z&&(!this._storeEffectOnSubMeshes||(!Z.zb||0===Z.zb.length||this.isReadyForSubMesh(Z,Z.zb[0],l)))}_isReadyForSubMesh(Z){const l=Z.materialDefines;return!(this.checkReadyOnEveryCall||!Z.effect||!l||l._renderId!==this.cZ().getRenderId())}bindOnlyWorldMatrix(Z){this._activeEffect.setMatrix("world",Z)}bindOnlyNormalMatrix(Z){this._activeEffect.setMatrix("normalMatrix",Z)}bind(Z,l){l&&this.bindForSubMesh(Z,l,l.zb[0])}_afterBind(Z){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2?arguments[2]:void 0;super._afterBind(Z,l,C),this.cZ()._cachedEffect=l,C?C._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(Z,l,C){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return C._drawWrapper._forceRebindOnNextCall||Z.isCachedMaterialInvalid(this,l,B)}dispose(Z,l,C){this._activeEffect=void 0,super.dispose(Z,l,C)}}},12794:(Z,l,C)=>{C.d(l,{e:()=>f,g:()=>W});var B=C(12428),x=C(12442),b=C(12432);class K{static extractMinAndMaxIndexed(Z,l,C,B,x,b){for(let K=C;K<C+B;K++){const C=3*l[K],B=Z[C],f=Z[C+1],W=Z[C+2];x.minimizeInPlaceFromFloats(B,f,W),b.maximizeInPlaceFromFloats(B,f,W)}}static extractMinAndMax(Z,l,C,B,x,b){for(let K=l,f=l*B;K<l+C;K++,f+=B){const l=Z[f],C=Z[f+1],B=Z[f+2];x.minimizeInPlaceFromFloats(l,C,B),b.maximizeInPlaceFromFloats(l,C,B)}}}function f(Z,l,C,B){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const f=new x.ql(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),W=new x.ql(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return K.extractMinAndMaxIndexed(Z,l,C,B,f,W),b&&(f.x-=f.x*b.x+b.y,f.y-=f.y*b.x+b.y,f.z-=f.z*b.x+b.y,W.x+=W.x*b.x+b.y,W.y+=W.y*b.x+b.y,W.z+=W.z*b.x+b.y),{minimum:f,maximum:W}}function W(Z,l,C){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,b=arguments.length>4?arguments[4]:void 0;const f=new x.ql(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),W=new x.ql(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return b||(b=3),K.extractMinAndMax(Z,l,C,b,f,W),B&&(f.x-=f.x*B.x+B.y,f.y-=f.y*B.x+B.y,f.z-=f.z*B.x+B.y,W.x+=W.x*B.x+B.y,W.y+=W.y*B.x+B.y,W.z+=W.z*B.x+B.y),{minimum:f,maximum:W}}(0,B.b)([b.f.filter((function(){for(var Z=arguments.length,l=new Array(Z),C=0;C<Z;C++)l[C]=arguments[C];let[B,x]=l;return!Array.isArray(B)&&!Array.isArray(x)}))],K,"extractMinAndMaxIndexed",null),(0,B.b)([b.f.filter((function(){for(var Z=arguments.length,l=new Array(Z),C=0;C<Z;C++)l[C]=arguments[C];let[B]=l;return!Array.isArray(B)}))],K,"extractMinAndMax",null)},12771:(Z,l,C)=>{C.d(l,{b:()=>W});var B=C(12530),x=C(12776),b=C(12781),K=C(12794),f=C(12578);class W{get materialDefines(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.defines}set materialDefines(Z){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=Z}_getDrawWrapper(Z){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z=Z??this._engine.currentRenderPassId;let C=this._drawWrappers[Z];return!C&&l&&(this._drawWrappers[Z]=C=new f.d(this._mesh.cZ().getEngine())),C}_removeDrawWrapper(Z){let l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var C;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(C=this._drawWrappers[Z])||void 0===C||C.dispose(l));this._drawWrappers[Z]=void 0}get effect(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(Z){this._mainDrawWrapperOverride=Z}setEffect(Z){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2?arguments[2]:void 0,B=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const x=this._drawWrapper;x.setEffect(Z,l,B),void 0!==C&&(x.materialContext=C),Z||(x.defines=null,x.materialContext=void 0)}resetDrawCache(Z){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==Z)return void this._removeDrawWrapper(Z,!0,l);for(const Z of this._drawWrappers)null===Z||void 0===Z||Z.dispose(l)}this._drawWrappers=[]}static AddToMesh(Z,l,C,B,x,b,K){return new W(Z,l,C,B,x,b,K,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(Z,l,C,B,x,b,K){let f=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],W=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=Z,this.verticesStart=l,this.verticesCount=C,this.indexStart=B,this.indexCount=x,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=b,this._renderingMesh=K||b,W&&b.zb.push(this),this._engine=this._mesh.cZ().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=b.zb.length-1,f&&(this.refreshBoundingInfo(),b.Fb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(Z){return this._boundingInfo=Z,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const Z=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return Z||this._renderingMesh}MZ(){let Z=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const l=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!l)return Z&&this._mesh.cZ()._hasDefaultMaterial?this._mesh.cZ().defaultMaterial:null;if(this._isMultiMaterial(l)){const Z=l.getSubMaterial(this.materialIndex);return this._currentMaterial!==Z&&(this._currentMaterial=Z,this.resetDrawCache()),Z}return l}_isMultiMaterial(Z){return void 0!==Z.getSubMaterial}refreshBoundingInfo(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.nb)return this;if(Z||(Z=this._renderingMesh.getVerticesData(B.h.PositionKind)),!Z)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const l=this._renderingMesh.cb();let C;if(0===this.indexStart&&this.indexCount===l.length){const Z=this._renderingMesh.getBoundingInfo();C={minimum:Z.minimum.clone(),maximum:Z.maximum.clone()}}else C=(0,K.e)(Z,l,this.indexStart,this.indexCount,this._renderingMesh.nb.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(C.minimum,C.maximum):this._boundingInfo=new b.d(C.minimum,C.maximum),this}_checkCollision(Z){return this.getBoundingInfo()._checkCollision(Z)}updateBoundingInfo(Z){let l=this.getBoundingInfo();return l||(this.refreshBoundingInfo(),l=this.getBoundingInfo()),l&&l.update(Z),this}isInFrustum(Z){const l=this.getBoundingInfo();return!!l&&l.isInFrustum(Z,this._mesh.nG)}isCompletelyInFrustum(Z){const l=this.getBoundingInfo();return!!l&&l.isCompletelyInFrustum(Z)}render(Z){return this._renderingMesh.render(this,Z,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(Z,l){if(!this._linesIndexBuffer){const C=6*Math.floor(this.indexCount/3),B=this.verticesStart+this.verticesCount>65535?new Uint32Array(C):new Uint16Array(C);let x=0;if(0===Z.length)for(let Z=this.indexStart;Z<this.indexStart+this.indexCount;Z+=3)B[x++]=Z,B[x++]=Z+1,B[x++]=Z+1,B[x++]=Z+2,B[x++]=Z+2,B[x++]=Z;else for(let l=this.indexStart;l<this.indexStart+this.indexCount;l+=3)B[x++]=Z[l],B[x++]=Z[l+1],B[x++]=Z[l+1],B[x++]=Z[l+2],B[x++]=Z[l+2],B[x++]=Z[l];this._linesIndexBuffer=l.createIndexBuffer(B),this._linesIndexCount=B.length}return this._linesIndexBuffer}canIntersects(Z){const l=this.getBoundingInfo();return!!l&&Z.intersectsBox(l.boundingBox)}intersects(Z,l,C,B,x){const b=this.MZ();if(!b)return null;let K=3,f=!1;switch(b.fillMode){case 3:case 5:case 6:case 8:return null;case 7:K=1,f=!0}return 4===b.fillMode?C.length?this._intersectLines(Z,l,C,this._mesh.intersectionThreshold,B):this._intersectUnIndexedLines(Z,l,C,this._mesh.intersectionThreshold,B):!C.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(Z,l,C,B,x):this._intersectTriangles(Z,l,C,K,f,B,x)}_intersectLines(Z,l,C,B,b){let K=null;for(let f=this.indexStart;f<this.indexStart+this.indexCount;f+=2){const W=l[C[f]],J=l[C[f+1]],d=Z.intersectionSegment(W,J,B);if(!(d<0)&&((b||!K||d<K.distance)&&(K=new x.e(null,null,d),K.faceId=f/2,b)))break}return K}_intersectUnIndexedLines(Z,l,C,B,b){let K=null;for(let f=this.verticesStart;f<this.verticesStart+this.verticesCount;f+=2){const C=l[f],W=l[f+1],J=Z.intersectionSegment(C,W,B);if(!(J<0)&&((b||!K||J<K.distance)&&(K=new x.e(null,null,J),K.faceId=f/2,b)))break}return K}_intersectTriangles(Z,l,C,B,x,b,K){let f=null,W=-1;for(let J=this.indexStart;J<this.indexStart+this.indexCount-(3-B);J+=B){W++;const B=C[J],d=C[J+1],E=C[J+2];if(x&&4294967295===E){J+=2;continue}const G=l[B],a=l[d],q=l[E];if(!G||!a||!q)continue;if(K&&!K(G,a,q,Z,B,d,E))continue;const z=Z.intersectsTriangle(G,a,q);if(z){if(z.distance<0)continue;if((b||!f||z.distance<f.distance)&&(f=z,f.faceId=W,b))break}}return f}_intersectUnIndexedTriangles(Z,l,C,B,x){let b=null;for(let K=this.verticesStart;K<this.verticesStart+this.verticesCount;K+=3){const C=l[K],f=l[K+1],W=l[K+2];if(x&&!x(C,f,W,Z,-1,-1,-1))continue;const J=Z.intersectsTriangle(C,f,W);if(J){if(J.distance<0)continue;if((B||!b||J.distance<b.distance)&&(b=J,b.faceId=K/3,B))break}}return b}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(Z,l){const C=new W(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,Z,l,!1);if(!this.IsGlobal){const Z=this.getBoundingInfo();if(!Z)return C;C._boundingInfo=new b.d(Z.minimum,Z.maximum)}return C}dispose(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.cZ().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const l=this._mesh.zb.indexOf(this);this._mesh.zb.splice(l,1),this.resetDrawCache(void 0,Z)}getClassName(){return"SubMesh"}static CreateFromIndices(Z,l,C,B,x){let b=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],K=Number.MAX_VALUE,f=-Number.MAX_VALUE;const J=(x||B).cb();for(let W=l;W<l+C;W++){const Z=J[W];Z<K&&(K=Z),Z>f&&(f=Z)}return new W(Z,K,f-K+1,l,C,B,x,b)}}}}]);