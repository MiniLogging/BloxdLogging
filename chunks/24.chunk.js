"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[24],{12698:(M,Z,P)=>{P.d(Z,{d:()=>x});class x{constructor(M,Z,P){this.bu=M,this.bv=Z,this.distance=P,this.faceId=0,this.subMeshId=0}}},12710:(M,Z,P)=>{P.d(Z,{e:()=>v});var x=P(12379),c=P(12373),w=P(12377);class v{constructor(M,Z,P){this.vectors=(0,x.c)(8,c.BZ.Zero),this.center=c.BZ.Zero(),this.centerWorld=c.BZ.Zero(),this.extendSize=c.BZ.Zero(),this.extendSizeWorld=c.BZ.Zero(),this.directions=(0,x.c)(3,c.BZ.Zero),this.vectorsWorld=(0,x.c)(8,c.BZ.Zero),this.minimumWorld=c.BZ.Zero(),this.maximumWorld=c.BZ.Zero(),this.minimum=c.BZ.Zero(),this.maximum=c.BZ.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(M,Z,P)}reConstruct(M,Z,P){const x=M.x,w=M.y,v=M.z,G=Z.x,mM=Z.y,K=Z.z,d=this.vectors;this.minimum.lc(x,w,v),this.maximum.lc(G,mM,K),d[0].lc(x,w,v),d[1].lc(G,mM,K),d[2].lc(G,w,v),d[3].lc(x,mM,v),d[4].lc(x,w,K),d[5].lc(G,mM,v),d[6].lc(x,mM,K),d[7].lc(G,w,K),Z.addToRef(M,this.center).scaleInPlace(.5),Z.subtractToRef(M,this.extendSize).scaleInPlace(.5),this._worldMatrix=P||c.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(M){const Z=v._TmpVector3,P=this.maximum.subtractToRef(this.minimum,Z[0]),x=P.length();P.normalizeFromLength(x);const c=x*M,w=P.scaleInPlace(.5*c),G=this.center.subtractToRef(w,Z[1]),mM=this.center.addToRef(w,Z[2]);return this.reConstruct(G,mM,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(M){const Z=this.minimumWorld,P=this.maximumWorld,x=this.directions,w=this.vectorsWorld,v=this.vectors;if(M.isIdentity()){Z.v(this.minimum),P.v(this.maximum);for(let M=0;M<8;++M)w[M].v(v[M]);this.extendSizeWorld.v(this.extendSize),this.centerWorld.v(this.center)}else{Z.Qc(Number.MAX_VALUE),P.Qc(-Number.MAX_VALUE);for(let x=0;x<8;++x){const G=w[x];c.BZ.TransformCoordinatesToRef(v[x],M,G),Z.minimizeInPlace(G),P.maximizeInPlace(G)}P.subtractToRef(Z,this.extendSizeWorld).scaleInPlace(.5),P.addToRef(Z,this.centerWorld).scaleInPlace(.5)}c.BZ.FromArrayToRef(M.m,0,x[0]),c.BZ.FromArrayToRef(M.m,4,x[1]),c.BZ.FromArrayToRef(M.m,8,x[2]),this._worldMatrix=M}isInFrustum(M){return v.IsInFrustum(this.vectorsWorld,M)}isCompletelyInFrustum(M){return v.IsCompletelyInFrustum(this.vectorsWorld,M)}intersectsPoint(M){const Z=this.minimumWorld,P=this.maximumWorld,x=Z.x,c=Z.y,v=Z.z,G=P.x,mM=P.y,K=P.z,d=M.x,O=M.y,H=M.z,j=-w.c;return!(G-d<j||j>d-x)&&(!(mM-O<j||j>O-c)&&!(K-H<j||j>H-v))}intersectsSphere(M){return v.IntersectsSphere(this.minimumWorld,this.maximumWorld,M.centerWorld,M.radiusWorld)}intersectsMinMax(M,Z){const P=this.minimumWorld,x=this.maximumWorld,c=P.x,w=P.y,v=P.z,G=x.x,mM=x.y,K=x.z,d=M.x,O=M.y,H=M.z,j=Z.x,B=Z.y,U=Z.z;return!(G<d||c>j)&&(!(mM<O||w>B)&&!(K<H||v>U))}dispose(){var M,Z;null===(M=this._drawWrapperFront)||void 0===M||M.dispose(),null===(Z=this._drawWrapperBack)||void 0===Z||Z.dispose()}static Intersects(M,Z){return M.intersectsMinMax(Z.minimumWorld,Z.maximumWorld)}static IntersectsSphere(M,Z,P,x){const w=v._TmpVector3[0];c.BZ.ClampToRef(P,M,Z,w);return c.BZ.DistanceSquared(P,w)<=x*x}static IsCompletelyInFrustum(M,Z){for(let P=0;P<6;++P){const x=Z[P];for(let Z=0;Z<8;++Z)if(x.dotCoordinate(M[Z])<0)return!1}return!0}static IsInFrustum(M,Z){for(let P=0;P<6;++P){let x=!0;const c=Z[P];for(let Z=0;Z<8;++Z)if(c.dotCoordinate(M[Z])>=0){x=!1;break}if(x)return!1}return!0}}v._TmpVector3=(0,x.c)(3,c.BZ.Zero)},12703:(M,Z,P)=>{P.d(Z,{d:()=>O});var x=P(12379),c=P(12373),w=P(12710),v=P(12717);const G={min:0,max:0},mM={min:0,max:0},K=(M,Z,P)=>{const x=c.BZ.Dot(Z.centerWorld,M),w=Math.abs(c.BZ.Dot(Z.directions[0],M))*Z.extendSize.x+Math.abs(c.BZ.Dot(Z.directions[1],M))*Z.extendSize.y+Math.abs(c.BZ.Dot(Z.directions[2],M))*Z.extendSize.z;P.min=x-w,P.max=x+w},d=(M,Z,P)=>(K(M,Z,G),K(M,P,mM),!(G.min>mM.max||mM.min>G.max));class O{constructor(M,Z,P){this._isLocked=!1,this.boundingBox=new w.e(M,Z,P),this.boundingSphere=new v.c(M,Z,P)}reConstruct(M,Z,P){this.boundingBox.reConstruct(M,Z,P),this.boundingSphere.reConstruct(M,Z,P)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(M){this._isLocked=M}update(M){this._isLocked||(this.boundingBox._update(M),this.boundingSphere._update(M))}centerOn(M,Z){const P=O._TmpVector3[0].v(M).MH(Z),x=O._TmpVector3[1].v(M).addInPlace(Z);return this.boundingBox.reConstruct(P,x,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(P,x,this.boundingBox.getWorldMatrix()),this}encapsulate(M){const Z=c.BZ.Minimize(this.minimum,M),P=c.BZ.Maximize(this.maximum,M);return this.reConstruct(Z,P,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(M){const Z=c.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(Z);const P=c.TmpVectors.BZ[0];return c.BZ.TransformCoordinatesToRef(M.boundingBox.minimumWorld,Z,P),this.encapsulate(P),c.BZ.TransformCoordinatesToRef(M.boundingBox.maximumWorld,Z,P),this.encapsulate(P),this}scale(M){return this.boundingBox.scale(M),this.boundingSphere.scale(M),this}isInFrustum(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===Z||3===Z)&&this.boundingSphere.isCenterInFrustum(M))return!0;if(!this.boundingSphere.isInFrustum(M))return!1;return!(1!==Z&&3!==Z)||this.boundingBox.isInFrustum(M)}get diagonalLength(){const M=this.boundingBox;return M.maximumWorld.subtractToRef(M.minimumWorld,O._TmpVector3[0]).length()}isCompletelyInFrustum(M){return this.boundingBox.isCompletelyInFrustum(M)}_checkCollision(M){return M._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(M){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(M)&&!!this.boundingBox.intersectsPoint(M))}intersects(M,Z){if(!v.c.Intersects(this.boundingSphere,M.boundingSphere))return!1;if(!w.e.Intersects(this.boundingBox,M.boundingBox))return!1;if(!Z)return!0;const P=this.boundingBox,x=M.boundingBox;return!!d(P.directions[0],P,x)&&(!!d(P.directions[1],P,x)&&(!!d(P.directions[2],P,x)&&(!!d(x.directions[0],P,x)&&(!!d(x.directions[1],P,x)&&(!!d(x.directions[2],P,x)&&(!!d(c.BZ.Cross(P.directions[0],x.directions[0]),P,x)&&(!!d(c.BZ.Cross(P.directions[0],x.directions[1]),P,x)&&(!!d(c.BZ.Cross(P.directions[0],x.directions[2]),P,x)&&(!!d(c.BZ.Cross(P.directions[1],x.directions[0]),P,x)&&(!!d(c.BZ.Cross(P.directions[1],x.directions[1]),P,x)&&(!!d(c.BZ.Cross(P.directions[1],x.directions[2]),P,x)&&(!!d(c.BZ.Cross(P.directions[2],x.directions[0]),P,x)&&(!!d(c.BZ.Cross(P.directions[2],x.directions[1]),P,x)&&!!d(c.BZ.Cross(P.directions[2],x.directions[2]),P,x))))))))))))))}}O._TmpVector3=(0,x.c)(2,c.BZ.Zero)},12717:(M,Z,P)=>{P.d(Z,{c:()=>w});var x=P(12379),c=P(12373);class w{constructor(M,Z,P){this.center=c.BZ.Zero(),this.centerWorld=c.BZ.Zero(),this.minimum=c.BZ.Zero(),this.maximum=c.BZ.Zero(),this.reConstruct(M,Z,P)}reConstruct(M,Z,P){this.minimum.v(M),this.maximum.v(Z);const x=c.BZ.Distance(M,Z);Z.addToRef(M,this.center).scaleInPlace(.5),this.radius=.5*x,this._update(P||c.Matrix.IdentityReadOnly)}scale(M){const Z=this.radius*M,P=w._TmpVector3,x=P[0].Qc(Z),c=this.center.subtractToRef(x,P[1]),v=this.center.addToRef(x,P[2]);return this.reConstruct(c,v,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(M){if(M.isIdentity())this.centerWorld.v(this.center),this.radiusWorld=this.radius;else{c.BZ.TransformCoordinatesToRef(this.center,M,this.centerWorld);const Z=w._TmpVector3[0];c.BZ.TransformNormalFromFloatsToRef(1,1,1,M,Z),this.radiusWorld=Math.max(Math.abs(Z.x),Math.abs(Z.y),Math.abs(Z.z))*this.radius}}isInFrustum(M){const Z=this.centerWorld,P=this.radiusWorld;for(let x=0;x<6;x++)if(M[x].dotCoordinate(Z)<=-P)return!1;return!0}isCenterInFrustum(M){const Z=this.centerWorld;for(let P=0;P<6;P++)if(M[P].dotCoordinate(Z)<0)return!1;return!0}intersectsPoint(M){const Z=c.BZ.DistanceSquared(this.centerWorld,M);return!(this.radiusWorld*this.radiusWorld<Z)}static Intersects(M,Z){const P=c.BZ.DistanceSquared(M.centerWorld,Z.centerWorld),x=M.radiusWorld+Z.radiusWorld;return!(x*x<P)}static CreateFromCenterAndRadius(M,Z,P){this._TmpVector3[0].v(M),this._TmpVector3[1].lc(0,0,Z),this._TmpVector3[2].v(M),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].MH(this._TmpVector3[1]);const x=new w(this._TmpVector3[0],this._TmpVector3[2]);return x._worldMatrix=P||c.Matrix.Identity(),x}}w._TmpVector3=(0,x.c)(3,c.BZ.Zero)},12735:(M,Z,P)=>{function x(M){-1===M.indexOf("vClipPlane")&&M.push("vClipPlane"),-1===M.indexOf("vClipPlane2")&&M.push("vClipPlane2"),-1===M.indexOf("vClipPlane3")&&M.push("vClipPlane3"),-1===M.indexOf("vClipPlane4")&&M.push("vClipPlane4"),-1===M.indexOf("vClipPlane5")&&M.push("vClipPlane5"),-1===M.indexOf("vClipPlane6")&&M.push("vClipPlane6")}function c(M,Z,P){const x=!!(M.clipPlane??Z.clipPlane),c=!!(M.clipPlane2??Z.clipPlane2),w=!!(M.clipPlane3??Z.clipPlane3),v=!!(M.clipPlane4??Z.clipPlane4),G=!!(M.clipPlane5??Z.clipPlane5),mM=!!(M.clipPlane6??Z.clipPlane6);x&&P.push("#define CLIPPLANE"),c&&P.push("#define CLIPPLANE2"),w&&P.push("#define CLIPPLANE3"),v&&P.push("#define CLIPPLANE4"),G&&P.push("#define CLIPPLANE5"),mM&&P.push("#define CLIPPLANE6")}function w(M,Z,P){let x=!1;const c=!!(M.clipPlane??Z.clipPlane),w=!!(M.clipPlane2??Z.clipPlane2),v=!!(M.clipPlane3??Z.clipPlane3),G=!!(M.clipPlane4??Z.clipPlane4),mM=!!(M.clipPlane5??Z.clipPlane5),K=!!(M.clipPlane6??Z.clipPlane6);return P.CLIPPLANE!==c&&(P.CLIPPLANE=c,x=!0),P.CLIPPLANE2!==w&&(P.CLIPPLANE2=w,x=!0),P.CLIPPLANE3!==v&&(P.CLIPPLANE3=v,x=!0),P.CLIPPLANE4!==G&&(P.CLIPPLANE4=G,x=!0),P.CLIPPLANE5!==mM&&(P.CLIPPLANE5=mM,x=!0),P.CLIPPLANE6!==K&&(P.CLIPPLANE6=K,x=!0),x}function v(M,Z,P){let x=Z.clipPlane??P.clipPlane;G(M,"vClipPlane",x),x=Z.clipPlane2??P.clipPlane2,G(M,"vClipPlane2",x),x=Z.clipPlane3??P.clipPlane3,G(M,"vClipPlane3",x),x=Z.clipPlane4??P.clipPlane4,G(M,"vClipPlane4",x),x=Z.clipPlane5??P.clipPlane5,G(M,"vClipPlane5",x),x=Z.clipPlane6??P.clipPlane6,G(M,"vClipPlane6",x)}function G(M,Z,P){P&&M.setFloat4(Z,P.normal.x,P.normal.y,P.normal.z,P.d)}P.d(Z,{e:()=>x,f:()=>v,g:()=>w,h:()=>c})},12672:(M,Z,P)=>{P.d(Z,{e:()=>x});class x{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(M,Z){this._defines[M]||(M<this._currentRank&&(this._currentRank=M),M>this._maxRank&&(this._maxRank=M),this._defines[M]=new Array),this._defines[M].push(Z)}addCPUSkinningFallback(M,Z){this._mesh=Z,M<this._currentRank&&(this._currentRank=M),M>this._maxRank&&(this._maxRank=M)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(M,Z){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,M=M.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),Z._bonesComputationForcedToCPU=!0;const P=this._mesh.DM();for(let M=0;M<P.meshes.length;M++){const x=P.meshes[M];if(x.material){if(x.computeBonesUsingShaders&&0!==x.numBoneInfluencers)if(x.material.getEffect()===Z)x.computeBonesUsingShaders=!1;else if(x.Uc)for(const M of x.Uc){if(M.effect===Z){x.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&x.computeBonesUsingShaders&&x.numBoneInfluencers>0&&(x.computeBonesUsingShaders=!1)}}else{const Z=this._defines[this._currentRank];if(Z)for(let P=0;P<Z.length;P++)M=M.replace("#define "+Z[P],"");this._currentRank++}return M}}},12680:(M,Z,P)=>{P.d(Z,{d:()=>n});var x=P(12351),c=P(12359),w=P(12175),v=P(12184),G=P(12225),mM=P(12689),K=P(12623),d=P(12199),O=P(12408),H=P(12471),j=P(12394);class B{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(M){this._func=M}get funcRef(){return this._funcRef}set funcRef(M){this._funcRef=M}get funcMask(){return this._funcMask}set funcMask(M){this._funcMask=M}get opStencilFail(){return this._opStencilFail}set opStencilFail(M){this._opStencilFail=M}get opDepthFail(){return this._opDepthFail}set opDepthFail(M){this._opDepthFail=M}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(M){this._opStencilDepthPass=M}get mask(){return this._mask}set mask(M){this._mask=M}get enabled(){return this._enabled}set enabled(M){this._enabled=M}getClassName(){return"MaterialStencilState"}copyTo(M){j.b.Clone((()=>M),this)}serialize(){return j.b.Serialize(this)}parse(M,Z,P){j.b.Parse((()=>this),M,Z,P)}}(0,x.c)([(0,c.H)()],B.prototype,"func",null),(0,x.c)([(0,c.H)()],B.prototype,"funcRef",null),(0,x.c)([(0,c.H)()],B.prototype,"funcMask",null),(0,x.c)([(0,c.H)()],B.prototype,"opStencilFail",null),(0,x.c)([(0,c.H)()],B.prototype,"opDepthFail",null),(0,x.c)([(0,c.H)()],B.prototype,"opStencilDepthPass",null),(0,x.c)([(0,c.H)()],B.prototype,"mask",null),(0,x.c)([(0,c.H)()],B.prototype,"enabled",null);var U=P(12731);class n{get _supportGlowLayer(){return!1}set _glowModeEnabled(M){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(M){if(this._alpha===M)return;const Z=this._alpha;this._alpha=M,1!==Z&&1!==M||this.Ad(n.MiscDirtyFlag+n.PrePassDirtyFlag)}get alpha(){return this._alpha}set Dc(M){this._backFaceCulling!==M&&(this._backFaceCulling=M,this.Ad(n.TextureDirtyFlag))}get Dc(){return this._backFaceCulling}set cullBackFaces(M){this._cullBackFaces!==M&&(this._cullBackFaces=M,this.Ad(n.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(M){this._blockDirtyMechanism!==M&&(this._blockDirtyMechanism=M,M||this.bH())}atomicMaterialsUpdate(M){this.blockDirtyMechanism=!0;try{M(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(M){this._onDisposeObserver&&this.Gc.remove(this._onDisposeObserver),this._onDisposeObserver=this.Gc.add(M)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new v.b),this._onBindObservable}set onBind(M){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(M)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new v.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new v.b),this._onEffectCreatedObservable}set alphaMode(M){this._alphaMode!==M&&(this._alphaMode=M,this.Ad(n.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(M){this._needDepthPrePass!==M&&(this._needDepthPrePass=M,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(M){this._fogEnabled!==M&&(this._fogEnabled=M,this.Ad(n.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case n.WireFrameFillMode:case n.LineListDrawMode:case n.LineLoopDrawMode:case n.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(M){this.fillMode=M?n.WireFrameFillMode:n.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case n.PointFillMode:case n.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(M){this.fillMode=M?n.PointFillMode:n.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(M){this._fillMode!==M&&(this._fillMode=M,this.Ad(n.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(M){const Z=this.DM().getEngine().getCaps().fragmentDepthSupported;M&&!Z&&d.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=M&&Z,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(M){this._drawWrapper=M}constructor(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Gc=new v.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.Kc=new B,this._useUBO=!1,this._fillMode=n.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=M;const c=Z||G.b.LastCreatedScene;c&&(this._scene=c,this._dirtyCallbacks={},this._forceGLSL=x,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=M||w.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new H.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new K.b(this._scene.getEngine(),void 0,void 0,M),this._useUBO=this.DM().getEngine().supportsUniformBuffers,this._createUniformBuffer(),P||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),n.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var M;const Z=this.DM().getEngine();null===(M=this._uniformBuffer)||void 0===M||M.dispose(),Z.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new K.b(Z,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new K.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(M){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.bH(),this.checkReadyOnlyOnce=!0}unfreeze(){this.bH(),this.checkReadyOnlyOnce=!1}isReady(M,Z){return!0}isReadyForSubMesh(M,Z,P){const x=Z.materialDefines;return!!x&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=x,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}DM(){return this._scene}_getEffectiveOrientation(M){return null!==this.sideOrientation?this.sideOrientation:M.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(M){this._transparencyMode!==M&&(this._transparencyMode=M,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===n.MATERIAL_ALPHABLEND||this._transparencyMode===n.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===n.MATERIAL_ALPHATEST||this._transparencyMode===n.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===n.MATERIAL_OPAQUE||this._transparencyMode===n.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(M){return this._hasTransparencyMode?this._transparencyModeIsBlend:M.visibility<1||!this._disableAlphaBlending&&(M.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(M){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(M)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}bH(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const Z=this.DM().meshes;for(const P of Z)if(P.Uc)for(const Z of P.Uc)if(Z.EM()===this)for(const P of Z._drawWrappers)P&&this._materialContext===P.materialContext&&(P._wasPreviouslyReady=!1,P._wasPreviouslyUsingInstances=null,P._forceRebindOnNextCall=M);M&&this.Ad(n.AllDirtyFlag)}_preBind(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const P=this._scene.getEngine(),x=(null==Z?this.sideOrientation:Z)===n.ClockWiseSideOrientation;return P.enableEffect(M||this._getDrawWrapper()),P.setState(this.Dc,this.zOffset,!1,x,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.Kc,this.zOffsetUnits),x}bind(M,Z){}buildUniformLayout(){const M=this._uniformBuffer;this._eventInfo.ubo=M,this._callbackPluginEventGeneric(8,this._eventInfo),M.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(M,Z,P){const x=P._drawWrapper;this._eventInfo.subMesh=P,this._callbackPluginEventBindForSubMesh(this._eventInfo),x._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(M){}bindView(M){this._useUBO?this._needToBindSceneUbo=!0:M.setMatrix("view",this.DM().getViewMatrix())}bindViewProjection(M){this._useUBO?this._needToBindSceneUbo=!0:(M.setMatrix("viewProjection",this.DM().getTransformMatrix()),M.setMatrix("projection",this.DM().getProjectionMatrix()))}bindEyePosition(M,Z){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(M,Z)}_afterBind(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&Z&&(this._needToBindSceneUbo=!1,(0,U.r)(Z,this.DM().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=M?M.visibility:1,this._onBindObservable&&M&&this._onBindObservable.notifyObservers(M),this.disableDepthWrite){const M=this._scene.getEngine();this._cachedDepthWriteState=M.getDepthWrite(),M.setDepthWrite(!1)}if(this.disableColorWrite){const M=this._scene.getEngine();this._cachedColorWriteState=M.getColorWrite(),M.setColorWrite(!1)}if(0!==this.depthFunction){const M=this._scene.getEngine();this._cachedDepthFunctionState=M.getDepthFunction()||0,M.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(M){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=M,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(M){return null}_clonePlugins(M,Z){const P={};if(this._serializePlugins(P),n._ParsePlugins(P,M,this._scene,Z),this.pluginManager)for(const x of this.pluginManager._plugins){const Z=M.pluginManager.getPlugin(x.name);Z&&x.copyTo(Z)}}getBindedMeshes(){if(this.meshMap){const M=[];for(const Z in this.meshMap){const P=this.meshMap[Z];P&&M.push(P)}return M}return this._scene.meshes.filter((M=>M.material===this))}forceCompilation(M,Z,P,x){const c={clipPlane:!1,useInstances:!1,...P},w=this.DM(),v=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const G=()=>{if(!this._scene||!this._scene.getEngine())return;const P=w.clipPlane;if(c.clipPlane&&(w.clipPlane=new O.c(0,0,0,1)),this._storeEffectOnSubMeshes){let P=!0,w=null;if(M.Uc){const Z=new mM.b(0,0,0,0,0,M,void 0,!1,!1);Z.materialDefines&&(Z.materialDefines._renderId=-1),this.isReadyForSubMesh(M,Z,c.useInstances)||(Z.effect&&Z.effect.getCompilationError()&&Z.effect.allFallbacksProcessed()?w=Z.effect.getCompilationError():(P=!1,setTimeout(G,16)))}P&&(this.allowShaderHotSwapping=v,w&&x&&x(w),Z&&Z(this))}else this.isReady()?(this.allowShaderHotSwapping=v,Z&&Z(this)):setTimeout(G,16);c.clipPlane&&(w.clipPlane=P)};G()}async forceCompilationAsync(M,Z){return await new Promise(((P,x)=>{this.forceCompilation(M,(()=>{P()}),Z,(M=>{x(M)}))}))}Ad(M){this.DM().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(n._DirtyCallbackArray.length=0,M&n.ImageProcessingDirtyFlag&&n._DirtyCallbackArray.push(n._ImageProcessingDirtyCallBack),M&n.TextureDirtyFlag&&n._DirtyCallbackArray.push(n._TextureDirtyCallBack),M&n.LightDirtyFlag&&n._DirtyCallbackArray.push(n._LightsDirtyCallBack),M&n.FresnelDirtyFlag&&n._DirtyCallbackArray.push(n._FresnelDirtyCallBack),M&n.AttributesDirtyFlag&&n._DirtyCallbackArray.push(n._AttributeDirtyCallBack),M&n.MiscDirtyFlag&&n._DirtyCallbackArray.push(n._MiscDirtyCallBack),M&n.PrePassDirtyFlag&&n._DirtyCallbackArray.push(n._PrePassDirtyCallBack),n._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(n._RunDirtyCallBacks),this.DM().resetCachedMaterial())}resetDrawCache(){const M=this.DM().meshes;for(const Z of M)if(Z.Uc)for(const M of Z.Uc)M.EM()===this&&M.resetDrawCache()}_markAllSubMeshesAsDirty(M){const Z=this.DM();if(Z.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const P=Z.meshes;for(const x of P)if(x.Uc)for(const P of x.Uc){if((P.EM()||(Z._hasDefaultMaterial?Z.defaultMaterial:null))===this)for(const Z of P._drawWrappers)Z&&Z.defines&&Z.defines.markAllAsDirty&&this._materialContext===Z.materialContext&&M(Z.defines)}}_markScenePrePassDirty(){if(this.DM().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const M=this.DM().enablePrePassRenderer();M&&M.Ad()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(n._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(n._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(n._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(n._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(n._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(n._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(n._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(n._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(n._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(n._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const M=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Gc.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(M)}))}}setPrePassRenderer(M){return!1}dispose(M,Z,P){const x=this.DM();if(x.stopAnimation(this),x.freeProcessedMaterials(),x.removeMaterial(this),this._eventInfo.forceDisposeTextures=Z,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const M=this._parentContainer.materials.indexOf(this);M>-1&&this._parentContainer.materials.splice(M,1),this._parentContainer=null}if(!0!==P)if(this.meshMap)for(const c in this.meshMap){const M=this.meshMap[c];this._disposeMeshResources(M)}else{const M=x.meshes;for(const Z of M)this._disposeMeshResources(Z)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Gc.notifyObservers(this),this.Gc.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(M){if(!M)return;const Z=M.tc,P=M._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(M.Uc&&P)for(const c of M.Uc){const M=c._drawWrappers;for(let w=0;w<M.length;w++){var x;const v=null===(x=M[w])||void 0===x?void 0:x.effect;if(!v)continue;P[w]===this&&(null===Z||void 0===Z||Z._releaseVertexArrayObject(v),c._removeDrawWrapper(w,!0,!0))}}}else null===Z||void 0===Z||Z._releaseVertexArrayObject(this._drawWrapper.effect);M.material!==this||M.sourceMesh||(M.material=null)}serialize(){const M=j.b.Serialize(this);return M.Kc=this.Kc.serialize(),M.uniqueId=this.uniqueId,this._serializePlugins(M),M}_serializePlugins(M){if(M.plugins={},this.pluginManager)for(const Z of this.pluginManager._plugins)Z.doNotSerialize||(M.plugins[Z.getClassName()]=Z.serialize())}static Parse(M,Z,P){if(M.customType){if("BABYLON.PBRMaterial"===M.customType&&M.overloadedAlbedo&&(M.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return d.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else M.customType="BABYLON.StandardMaterial";const x=w.Tools.Instantiate(M.customType).Parse(M,Z,P);return x._loadedUniqueId=M.uniqueId,x}static _ParsePlugins(M,Z,P,x){if(M.plugins)for(const G in M.plugins){var c,v;const mM=M.plugins[G];let K=null===(c=Z.pluginManager)||void 0===c?void 0:c.getPlugin(mM.name);if(!K){const M=w.Tools.Instantiate("BABYLON."+G);M&&(K=new M(Z))}null===(v=K)||void 0===v||v.parse(mM,P,x)}}}n.TriangleFillMode=0,n.WireFrameFillMode=1,n.PointFillMode=2,n.PointListDrawMode=3,n.LineListDrawMode=4,n.LineLoopDrawMode=5,n.LineStripDrawMode=6,n.TriangleStripDrawMode=7,n.TriangleFanDrawMode=8,n.ClockWiseSideOrientation=0,n.CounterClockWiseSideOrientation=1,n.ImageProcessingDirtyFlag=64,n.TextureDirtyFlag=1,n.LightDirtyFlag=2,n.FresnelDirtyFlag=4,n.AttributesDirtyFlag=8,n.MiscDirtyFlag=16,n.PrePassDirtyFlag=32,n.AllDirtyFlag=127,n.MATERIAL_OPAQUE=0,n.MATERIAL_ALPHATEST=1,n.MATERIAL_ALPHABLEND=2,n.MATERIAL_ALPHATESTANDBLEND=3,n.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,n.MATERIAL_NORMALBLENDMETHOD_RNM=1,n.OnEventObservable=new v.b,n._AllDirtyCallBack=M=>M.markAllAsDirty(),n._ImageProcessingDirtyCallBack=M=>M.markAsImageProcessingDirty(),n._TextureDirtyCallBack=M=>M.markAsTexturesDirty(),n._FresnelDirtyCallBack=M=>M.markAsFresnelDirty(),n._MiscDirtyCallBack=M=>M.markAsMiscDirty(),n._PrePassDirtyCallBack=M=>M.markAsPrePassDirty(),n._LightsDirtyCallBack=M=>M.markAsLightDirty(),n._AttributeDirtyCallBack=M=>M.markAsAttributesDirty(),n._FresnelAndMiscDirtyCallBack=M=>{n._FresnelDirtyCallBack(M),n._MiscDirtyCallBack(M)},n._TextureAndMiscDirtyCallBack=M=>{n._TextureDirtyCallBack(M),n._MiscDirtyCallBack(M)},n._DirtyCallbackArray=[],n._RunDirtyCallBacks=M=>{for(const Z of n._DirtyCallbackArray)Z(M)},(0,x.c)([(0,c.H)()],n.prototype,"id",void 0),(0,x.c)([(0,c.H)()],n.prototype,"uniqueId",void 0),(0,x.c)([(0,c.H)()],n.prototype,"name",void 0),(0,x.c)([(0,c.H)()],n.prototype,"metadata",void 0),(0,x.c)([(0,c.H)()],n.prototype,"checkReadyOnEveryCall",void 0),(0,x.c)([(0,c.H)()],n.prototype,"checkReadyOnlyOnce",void 0),(0,x.c)([(0,c.H)()],n.prototype,"state",void 0),(0,x.c)([(0,c.H)("alpha")],n.prototype,"_alpha",void 0),(0,x.c)([(0,c.H)("Dc")],n.prototype,"_backFaceCulling",void 0),(0,x.c)([(0,c.H)("cullBackFaces")],n.prototype,"_cullBackFaces",void 0),(0,x.c)([(0,c.H)()],n.prototype,"sideOrientation",void 0),(0,x.c)([(0,c.H)("alphaMode")],n.prototype,"_alphaMode",void 0),(0,x.c)([(0,c.H)()],n.prototype,"_needDepthPrePass",void 0),(0,x.c)([(0,c.H)()],n.prototype,"disableDepthWrite",void 0),(0,x.c)([(0,c.H)()],n.prototype,"disableColorWrite",void 0),(0,x.c)([(0,c.H)()],n.prototype,"forceDepthWrite",void 0),(0,x.c)([(0,c.H)()],n.prototype,"depthFunction",void 0),(0,x.c)([(0,c.H)()],n.prototype,"separateCullingPass",void 0),(0,x.c)([(0,c.H)("fogEnabled")],n.prototype,"_fogEnabled",void 0),(0,x.c)([(0,c.H)()],n.prototype,"pointSize",void 0),(0,x.c)([(0,c.H)()],n.prototype,"zOffset",void 0),(0,x.c)([(0,c.H)()],n.prototype,"zOffsetUnits",void 0),(0,x.c)([(0,c.H)()],n.prototype,"pointsCloud",null),(0,x.c)([(0,c.H)()],n.prototype,"fillMode",null),(0,x.c)([(0,c.H)()],n.prototype,"useLogarithmicDepth",null),(0,x.c)([(0,c.H)()],n.prototype,"transparencyMode",null)},12731:(M,Z,P)=>{P.d(Z,{A:()=>D,C:()=>l,E:()=>j,F:()=>H,H:()=>R,I:()=>C,K:()=>I,L:()=>L,P:()=>Q,T:()=>W,V:()=>k,Z:()=>A,ab:()=>E,e:()=>J,eb:()=>B,g:()=>O,k:()=>F,m:()=>d,q:()=>U,r:()=>n,u:()=>u,w:()=>h,y:()=>N});var x=P(12199),c=P(12406),w=P(12225),v=P(12667),G=P(12735);const mM=c.uZ.Black(),K={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function d(M,Z,P){if(!M||M.LOGARITHMICDEPTH||M.indexOf&&M.indexOf("LOGARITHMICDEPTH")>=0){const M=P.activeCamera;1===M.mode&&x.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),Z.setFloat("logarithmicDepthConstant",2/(Math.log(M.maxZ+1)/Math.LN2))}}function O(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]&&arguments[3];P&&M.fogEnabled&&(!Z||Z.applyFog)&&0!==M.fogMode&&(P.setFloat4("vFogInfos",M.fogMode,M.fogStart,M.fogEnd,M.fogDensity),x?(M.fogColor.toLinearSpaceToRef(mM,M.getEngine().useExactSrgbConversions),P.setColor3("vFogColor",mM)):P.setColor3("vFogColor",M.fogColor))}function H(M,Z,P,x,c,w,v,G,mM,d){const O=M.numMaxInfluencers||M.numInfluencers;return O<=0?0:(Z.push("#define MORPHTARGETS"),M.hasPositions&&Z.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),M.hasNormals&&Z.push("#define MORPHTARGETTEXTURE_HASNORMALS"),M.hasTangents&&Z.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),M.hasUVs&&Z.push("#define MORPHTARGETTEXTURE_HASUVS"),M.hasUV2s&&Z.push("#define MORPHTARGETTEXTURE_HASUV2S"),M.hasColors&&Z.push("#define MORPHTARGETTEXTURE_HASCOLORS"),M.supportsPositions&&c&&Z.push("#define MORPHTARGETS_POSITION"),M.supportsNormals&&w&&Z.push("#define MORPHTARGETS_NORMAL"),M.supportsTangents&&v&&Z.push("#define MORPHTARGETS_TANGENT"),M.supportsUVs&&G&&Z.push("#define MORPHTARGETS_UV"),M.supportsUV2s&&mM&&Z.push("#define MORPHTARGETS_UV2"),M.supportsColors&&d&&Z.push("#define MORPHTARGETS_COLOR"),Z.push("#define NUM_MORPH_INFLUENCERS "+O),M.isUsingTextureForTargets&&Z.push("#define MORPHTARGETS_TEXTURE"),K.NUM_MORPH_INFLUENCERS=O,K.NORMAL=w,K.TANGENT=v,K.UV=G,K.UV2=mM,K.COLOR=d,j(P,x,K,c),O)}function j(M,Z,P){let c=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const v=P.NUM_MORPH_INFLUENCERS;if(v>0&&w.b.LastCreatedEngine){const G=w.b.LastCreatedEngine.getCaps().maxVertexAttribs,mM=Z.morphTargetManager;if(null!==mM&&void 0!==mM&&mM.isUsingTextureForTargets)return;const K=mM&&mM.supportsPositions&&c,d=mM&&mM.supportsNormals&&P.NORMAL,O=mM&&mM.supportsTangents&&P.TANGENT,H=mM&&mM.supportsUVs&&P.UV1,j=mM&&mM.supportsUV2s&&P.UV2,B=mM&&mM.supportsColors&&P.VERTEXCOLOR;for(let P=0;P<v;P++)K&&M.push("position"+P),d&&M.push("normal"+P),O&&M.push("tangent"+P),H&&M.push("uv_"+P),j&&M.push("uv2_"+P),B&&M.push("color"+P),M.length>G&&x.d.Error("Cannot add more vertex attributes for mesh "+Z.name)}}function B(M){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];M.push("world0"),M.push("world1"),M.push("world2"),M.push("world3"),Z&&(M.push("previousWorld0"),M.push("previousWorld1"),M.push("previousWorld2"),M.push("previousWorld3"))}function U(M,Z){const P=M.morphTargetManager;M&&P&&Z.setFloatArray("morphTargetInfluences",P.influences)}function n(M,Z){Z.bindToEffect(M,"Scene")}function L(M,Z,P){Z._needUVs=!0,Z[P]=!0,M.optimizeUVAllocation&&M.getTextureMatrix().isIdentityAs3x2()?(Z[P+"DIRECTUV"]=M.coordinatesIndex+1,Z["MAINUV"+(M.coordinatesIndex+1)]=!0):Z[P+"DIRECTUV"]=0}function u(M,Z,P){const x=M.getTextureMatrix();Z.Nc(P+"Matrix",x)}function N(M,Z,P){P.BAKED_VERTEX_ANIMATION_TEXTURE&&P.INSTANCES&&M.push("bakedVertexAnimationSettingsInstanced")}function J(M,Z,P){var x;if(Z&&M&&(M.computeBonesUsingShaders&&Z._bonesComputationForcedToCPU&&(M.computeBonesUsingShaders=!1),M.useBones&&M.computeBonesUsingShaders&&M.skeleton)){const c=M.skeleton;if(c.isUsingTextureForMatrices&&Z.getUniformIndex("boneTextureWidth")>-1){const P=c.getTransformMatrixTexture(M);Z.setTexture("boneSampler",P),Z.setFloat("boneTextureWidth",4*(c.bones.length+1))}else{const w=c.getTransformMatrices(M);w&&(Z.setMatrices("mBones",w),P&&M.DM().prePassRenderer&&M.DM().prePassRenderer.getIndex(2)&&(P.previousBones[M.uniqueId]||(P.previousBones[M.uniqueId]=w.slice()),Z.setMatrices("mPreviousBones",P.previousBones[M.uniqueId]),x=w,P.previousBones[M.uniqueId].set(x)))}}}function t(M,Z,P,x,c){let w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];M._bindLight(Z,P,x,c,w)}function F(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const w=Math.min(Z.lightSources.length,c);for(let v=0;v<w;v++){t(Z.lightSources[v],v,M,P,"boolean"===typeof x?x:x.SPECULARTERM,Z.receiveShadows)}}function D(M,Z,P,x){P.NUM_BONE_INFLUENCERS>0&&(x.addCPUSkinningFallback(0,Z),M.push("matricesIndices"),M.push("matricesWeights"),P.NUM_BONE_INFLUENCERS>4&&(M.push("matricesIndicesExtra"),M.push("matricesWeightsExtra")))}function l(M,Z){(Z.INSTANCES||Z.THIN_INSTANCES)&&B(M,!!Z.PREPASS_VELOCITY),Z.INSTANCESCOLOR&&M.push("instanceColor")}function h(M,Z){let P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,c=0;for(let w=0;w<P&&M["LIGHT"+w];w++)w>0&&(c=x+w,Z.addFallback(c,"LIGHT"+w)),M.SHADOWS||(M["SHADOW"+w]&&Z.addFallback(x,"SHADOW"+w),M["SHADOWPCF"+w]&&Z.addFallback(x,"SHADOWPCF"+w),M["SHADOWPCSS"+w]&&Z.addFallback(x,"SHADOWPCSS"+w),M["SHADOWPOISSON"+w]&&Z.addFallback(x,"SHADOWPOISSON"+w),M["SHADOWESM"+w]&&Z.addFallback(x,"SHADOWESM"+w),M["SHADOWCLOSEESM"+w]&&Z.addFallback(x,"SHADOWCLOSEESM"+w));return c++}function Q(M,Z,P,x,c,w,v){let G=arguments.length>7&&void 0!==arguments[7]&&arguments[7];v._areMiscDirty&&(v.LOGARITHMICDEPTH=P,v.POINTSIZE=x,v.FOG=c&&function(M,Z){return Z.fogEnabled&&M.applyFog&&0!==Z.fogMode}(M,Z),v.NONUNIFORMSCALING=M.nonUniformScaling,v.ALPHATEST=w,v.DECAL_AFTER_DETAIL=G)}function I(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!P._areLightsDirty)return P._needNormals;let v=0;const G={needNormals:P._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(M.lightsEnabled&&!w)for(const K of Z.lightSources)if(s(M,Z,K,v,P,x,G),v++,v===c)break;P.SPECULARTERM=G.specularEnabled,P.SHADOWS=G.shadowEnabled;for(let K=v;K<c;K++)void 0!==P["LIGHT"+K]&&(P["LIGHT"+K]=!1,P["HEMILIGHT"+K]=!1,P["POINTLIGHT"+K]=!1,P["DIRLIGHT"+K]=!1,P["SPOTLIGHT"+K]=!1,P["AREALIGHT"+K]=!1,P["SHADOW"+K]=!1,P["SHADOWCSM"+K]=!1,P["SHADOWCSMDEBUG"+K]=!1,P["SHADOWCSMNUM_CASCADES"+K]=!1,P["SHADOWCSMUSESHADOWMAXZ"+K]=!1,P["SHADOWCSMNOBLEND"+K]=!1,P["SHADOWCSM_RIGHTHANDED"+K]=!1,P["SHADOWPCF"+K]=!1,P["SHADOWPCSS"+K]=!1,P["SHADOWPOISSON"+K]=!1,P["SHADOWESM"+K]=!1,P["SHADOWCLOSEESM"+K]=!1,P["SHADOWCUBE"+K]=!1,P["SHADOWLOWQUALITY"+K]=!1,P["SHADOWMEDIUMQUALITY"+K]=!1);const mM=M.getEngine().getCaps();return void 0===P.SHADOWFLOAT&&(G.needRebuild=!0),P.SHADOWFLOAT=G.shadowEnabled&&(mM.textureFloatRender&&mM.textureFloatLinearFiltering||mM.textureHalfFloatRender&&mM.textureHalfFloatLinearFiltering),P.LIGHTMAPEXCLUDED=G.lightmapMode,G.needRebuild&&P.rebuild(),G.needNormals}function s(M,Z,P,x,c,w,G){switch(G.needNormals=!0,void 0===c["LIGHT"+x]&&(G.needRebuild=!0),c["LIGHT"+x]=!0,c["SPOTLIGHT"+x]=!1,c["HEMILIGHT"+x]=!1,c["POINTLIGHT"+x]=!1,c["DIRLIGHT"+x]=!1,c["AREALIGHT"+x]=!1,P.prepareLightSpecificDefines(c,x),c["LIGHT_FALLOFF_PHYSICAL"+x]=!1,c["LIGHT_FALLOFF_GLTF"+x]=!1,c["LIGHT_FALLOFF_STANDARD"+x]=!1,P.falloffType){case v.b.FALLOFF_GLTF:c["LIGHT_FALLOFF_GLTF"+x]=!0;break;case v.b.FALLOFF_PHYSICAL:c["LIGHT_FALLOFF_PHYSICAL"+x]=!0;break;case v.b.FALLOFF_STANDARD:c["LIGHT_FALLOFF_STANDARD"+x]=!0}if(w&&!P.HO.equalsFloats(0,0,0)&&(G.specularEnabled=!0),c["SHADOW"+x]=!1,c["SHADOWCSM"+x]=!1,c["SHADOWCSMDEBUG"+x]=!1,c["SHADOWCSMNUM_CASCADES"+x]=!1,c["SHADOWCSMUSESHADOWMAXZ"+x]=!1,c["SHADOWCSMNOBLEND"+x]=!1,c["SHADOWCSM_RIGHTHANDED"+x]=!1,c["SHADOWPCF"+x]=!1,c["SHADOWPCSS"+x]=!1,c["SHADOWPOISSON"+x]=!1,c["SHADOWESM"+x]=!1,c["SHADOWCLOSEESM"+x]=!1,c["SHADOWCUBE"+x]=!1,c["SHADOWLOWQUALITY"+x]=!1,c["SHADOWMEDIUMQUALITY"+x]=!1,Z&&Z.receiveShadows&&M.shadowsEnabled&&P.shadowEnabled){const Z=P.getShadowGenerator(M.activeCamera)??P.getShadowGenerator();if(Z){const M=Z.getShadowMap();M&&M.renderList&&M.renderList.length>0&&(G.shadowEnabled=!0,Z.prepareDefines(c,x))}}P.lightmapMode!=v.b.LIGHTMAP_DEFAULT?(G.lightmapMode=!0,c["LIGHTMAPEXCLUDED"+x]=!0,c["LIGHTMAPNOSPECULAR"+x]=P.lightmapMode==v.b.LIGHTMAP_SHADOWSONLY):(c["LIGHTMAPEXCLUDED"+x]=!1,c["LIGHTMAPNOSPECULAR"+x]=!1)}function C(M,Z,P,x,c){let w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,v=arguments.length>6&&void 0!==arguments[6]&&arguments[6],mM=function(M,Z){let P=!1;if(M.activeCamera){const x=Z.CAMERA_ORTHOGRAPHIC?1:0,c=Z.CAMERA_PERSPECTIVE?1:0,w=1===M.activeCamera.mode?1:0,v=0===M.activeCamera.mode?1:0;(x^w||c^v)&&(Z.CAMERA_ORTHOGRAPHIC=1===w,Z.CAMERA_PERSPECTIVE=1===v,P=!0)}return P}(M,x);!1!==w&&(mM=(0,G.g)(P,M,x)),x.DEPTHPREPASS!==!Z.getColorWrite()&&(x.DEPTHPREPASS=!x.DEPTHPREPASS,mM=!0),x.INSTANCES!==c&&(x.INSTANCES=c,mM=!0),x.THIN_INSTANCES!==v&&(x.THIN_INSTANCES=v,mM=!0),mM&&x.markAsUnprocessed()}function R(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],v=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!Z._areAttributesDirty&&Z._needNormals===Z._normals&&Z._needUVs===Z._uvs)return!1;Z._normals=Z._needNormals,Z._uvs=Z._needUVs,Z.NORMAL=Z._needNormals&&M.isVerticesDataPresent("normal"),Z._needNormals&&M.isVerticesDataPresent("tangent")&&(Z.TANGENT=!0);for(let G=1;G<=6;++G)Z["UV"+G]=!!Z._needUVs&&M.isVerticesDataPresent(`uv${1===G?"":G}`);if(P){const P=M.useVertexColors&&M.isVerticesDataPresent("color");Z.VERTEXCOLOR=P,Z.VERTEXALPHA=M.hasVertexAlpha&&P&&w}return M.isVerticesDataPresent("instanceColor")&&(M.hasInstances||M.hasThinInstances)&&(Z.INSTANCESCOLOR=!0),x&&function(M,Z){if(M.useBones&&M.computeBonesUsingShaders&&M.skeleton){Z.NUM_BONE_INFLUENCERS=M.numBoneInfluencers;const P=void 0!==Z.BONETEXTURE;if(M.skeleton.isUsingTextureForMatrices&&P)Z.BONETEXTURE=!0;else{Z.BonesPerMesh=M.skeleton.bones.length+1,Z.BONETEXTURE=!P&&void 0;const x=M.DM().prePassRenderer;if(x&&x.enabled){const P=-1===x.excludedSkinnedMesh.indexOf(M);Z.BONES_VELOCITY_ENABLED=P}}}else Z.NUM_BONE_INFLUENCERS=0,Z.BonesPerMesh=0,void 0!==Z.BONETEXTURE&&(Z.BONETEXTURE=!1)}(M,Z),c&&function(M,Z){const P=M.morphTargetManager;P?(Z.MORPHTARGETS_UV=P.supportsUVs&&Z.UV1,Z.MORPHTARGETS_UV2=P.supportsUV2s&&Z.UV2,Z.MORPHTARGETS_TANGENT=P.supportsTangents&&Z.TANGENT,Z.MORPHTARGETS_NORMAL=P.supportsNormals&&Z.NORMAL,Z.MORPHTARGETS_POSITION=P.supportsPositions,Z.MORPHTARGETS_COLOR=P.supportsColors,Z.MORPHTARGETTEXTURE_HASUVS=P.hasUVs,Z.MORPHTARGETTEXTURE_HASUV2S=P.hasUV2s,Z.MORPHTARGETTEXTURE_HASTANGENTS=P.hasTangents,Z.MORPHTARGETTEXTURE_HASNORMALS=P.hasNormals,Z.MORPHTARGETTEXTURE_HASPOSITIONS=P.hasPositions,Z.MORPHTARGETTEXTURE_HASCOLORS=P.hasColors,Z.NUM_MORPH_INFLUENCERS=P.numMaxInfluencers||P.numInfluencers,Z.MORPHTARGETS=Z.NUM_MORPH_INFLUENCERS>0,Z.MORPHTARGETS_TEXTURE=P.isUsingTextureForTargets):(Z.MORPHTARGETS_UV=!1,Z.MORPHTARGETS_UV2=!1,Z.MORPHTARGETS_TANGENT=!1,Z.MORPHTARGETS_NORMAL=!1,Z.MORPHTARGETS_POSITION=!1,Z.MORPHTARGETS_COLOR=!1,Z.MORPHTARGETTEXTURE_HASUVS=!1,Z.MORPHTARGETTEXTURE_HASUV2S=!1,Z.MORPHTARGETTEXTURE_HASTANGENTS=!1,Z.MORPHTARGETTEXTURE_HASNORMALS=!1,Z.MORPHTARGETTEXTURE_HASPOSITIONS=!1,Z.MORPHTARGETTEXTURE_HAS_COLORS=!1,Z.MORPHTARGETS=!1,Z.NUM_MORPH_INFLUENCERS=0)}(M,Z),v&&function(M,Z){const P=M.bakedVertexAnimationManager;Z.BAKED_VERTEX_ANIMATION_TEXTURE=!(!P||!P.isEnabled)}(M,Z),!0}function W(M,Z){if(M.activeCamera){const P=Z.MULTIVIEW;Z.MULTIVIEW=null!==M.activeCamera.outputRenderTarget&&M.activeCamera.outputRenderTarget.getViewCount()>1,Z.MULTIVIEW!=P&&Z.markAsUnprocessed()}}function k(M,Z,P){const x=Z.ORDER_INDEPENDENT_TRANSPARENCY,c=Z.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;Z.ORDER_INDEPENDENT_TRANSPARENCY=M.useOrderIndependentTransparency&&P,Z.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!M.getEngine().getCaps().textureFloatLinearFiltering,x===Z.ORDER_INDEPENDENT_TRANSPARENCY&&c===Z.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||Z.markAsUnprocessed()}function A(M,Z,P){const x=Z.PREPASS;if(!Z._arePrePassDirty)return;const c=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(M.prePassRenderer&&M.prePassRenderer.enabled&&P){Z.PREPASS=!0,Z.SCENE_MRT_COUNT=M.prePassRenderer.mrtCount,Z.PREPASS_NORMAL_WORLDSPACE=M.prePassRenderer.generateNormalsInWorldSpace,Z.PREPASS_COLOR=!0,Z.PREPASS_COLOR_INDEX=0;for(let P=0;P<c.length;P++){const x=M.prePassRenderer.getIndex(c[P].type);-1!==x?(Z[c[P].define]=!0,Z[c[P].index]=x):Z[c[P].define]=!1}}else{Z.PREPASS=!1;for(let M=0;M<c.length;M++)Z[c[M].define]=!1}Z.PREPASS!=x&&(Z.markAsUnprocessed(),Z.markAsImageProcessingDirty())}function o(M,Z,P,x){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6];c&&c.push("Light"+M),w||(Z.push("vLightData"+M,"vLightDiffuse"+M,"vLightSpecular"+M,"vLightDirection"+M,"vLightWidth"+M,"vLightHeight"+M,"vLightFalloff"+M,"vLightGround"+M,"lightMatrix"+M,"shadowsInfo"+M,"depthValues"+M),P.push("shadowTexture"+M),P.push("depthTexture"+M),Z.push("viewFrustumZ"+M,"cascadeBlendFactor"+M,"lightSizeUVCorrection"+M,"depthCorrection"+M,"penumbraDarkness"+M,"frustumLengths"+M),x&&(P.push("projectionLightTexture"+M),Z.push("textureProjectionMatrix"+M)),v&&P.push("iesLightTexture"+M))}function E(M,Z,P){let x,c,w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(M.uniformsNames){const v=M;x=v.uniformsNames,c=v.uniformBuffersNames,Z=v.samplers,P=v.defines,w=v.maxSimultaneousLights||0}else x=M,Z||(Z=[]);for(let v=0;v<w&&P["LIGHT"+v];v++)o(v,x,Z,P["PROJECTEDLIGHTTEXTURE"+v],c,!1,P["IESLIGHTTEXTURE"+v]);P.NUM_MORPH_INFLUENCERS&&(x.push("morphTargetInfluences"),x.push("morphTargetCount")),P.BAKED_VERTEX_ANIMATION_TEXTURE&&(x.push("bakedVertexAnimationSettings"),x.push("bakedVertexAnimationTextureSizeInverted"),x.push("bakedVertexAnimationTime"),Z.push("bakedVertexAnimationTexture"))}},12675:(M,Z,P)=>{P.d(Z,{d:()=>w});var x=P(12373),c=P(12680);class w extends c.d{constructor(M,Z){let P=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(M,Z,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new x.Matrix,this._storeEffectOnSubMeshes=P}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(M,Z){return!!M&&(!this._storeEffectOnSubMeshes||(!M.Uc||0===M.Uc.length||this.isReadyForSubMesh(M,M.Uc[0],Z)))}_isReadyForSubMesh(M){const Z=M.materialDefines;return!(this.checkReadyOnEveryCall||!M.effect||!Z||Z._renderId!==this.DM().getRenderId())}bindOnlyWorldMatrix(M){this._activeEffect.setMatrix("world",M)}bindOnlyNormalMatrix(M){this._activeEffect.setMatrix("normalMatrix",M)}bind(M,Z){Z&&this.bindForSubMesh(M,Z,Z.Uc[0])}_afterBind(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,P=arguments.length>2?arguments[2]:void 0;super._afterBind(M,Z,P),this.DM()._cachedEffect=Z,P?P._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return P._drawWrapper._forceRebindOnNextCall||M.isCachedMaterialInvalid(this,Z,x)}dispose(M,Z,P){this._activeEffect=void 0,super.dispose(M,Z,P)}}},12726:(M,Z,P)=>{P.d(Z,{e:()=>G,f:()=>mM});var x=P(12351),c=P(12373),w=P(12359);class v{static extractMinAndMaxIndexed(M,Z,P,x,c,w){for(let v=P;v<P+x;v++){const P=3*Z[v],x=M[P],G=M[P+1],mM=M[P+2];c.minimizeInPlaceFromFloats(x,G,mM),w.maximizeInPlaceFromFloats(x,G,mM)}}static extractMinAndMax(M,Z,P,x,c,w){for(let v=Z,G=Z*x;v<Z+P;v++,G+=x){const Z=M[G],P=M[G+1],x=M[G+2];c.minimizeInPlaceFromFloats(Z,P,x),w.maximizeInPlaceFromFloats(Z,P,x)}}}function G(M,Z,P,x){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const G=new c.BZ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),mM=new c.BZ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return v.extractMinAndMaxIndexed(M,Z,P,x,G,mM),w&&(G.x-=G.x*w.x+w.y,G.y-=G.y*w.x+w.y,G.z-=G.z*w.x+w.y,mM.x+=mM.x*w.x+w.y,mM.y+=mM.y*w.x+w.y,mM.z+=mM.z*w.x+w.y),{minimum:G,maximum:mM}}function mM(M,Z,P){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,w=arguments.length>4?arguments[4]:void 0;const G=new c.BZ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),mM=new c.BZ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return w||(w=3),v.extractMinAndMax(M,Z,P,w,G,mM),x&&(G.x-=G.x*x.x+x.y,G.y-=G.y*x.x+x.y,G.z-=G.z*x.x+x.y,mM.x+=mM.x*x.x+x.y,mM.y+=mM.y*x.x+x.y,mM.z+=mM.z*x.x+x.y),{minimum:G,maximum:mM}}(0,x.c)([w.e.filter((function(){for(var M=arguments.length,Z=new Array(M),P=0;P<M;P++)Z[P]=arguments[P];let[x,c]=Z;return!Array.isArray(x)&&!Array.isArray(c)}))],v,"extractMinAndMaxIndexed",null),(0,x.c)([w.e.filter((function(){for(var M=arguments.length,Z=new Array(M),P=0;P<M;P++)Z[P]=arguments[P];let[x]=Z;return!Array.isArray(x)}))],v,"extractMinAndMax",null)},12689:(M,Z,P)=>{P.d(Z,{b:()=>mM});var x=P(12430),c=P(12698),w=P(12703),v=P(12726),G=P(12471);class mM{get materialDefines(){var M;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(M=this._getDrawWrapper())||void 0===M?void 0:M.defines}set materialDefines(M){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=M}_getDrawWrapper(M){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];M=M??this._engine.currentRenderPassId;let P=this._drawWrappers[M];return!P&&Z&&(this._drawWrappers[M]=P=new G.e(this._mesh.DM().getEngine())),P}_removeDrawWrapper(M){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var P;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(P=this._drawWrappers[M])||void 0===P||P.dispose(Z));this._drawWrappers[M]=void 0}get effect(){var M;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(M=this._getDrawWrapper())||void 0===M?void 0:M.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(M){this._mainDrawWrapperOverride=M}setEffect(M){let Z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,P=arguments.length>2?arguments[2]:void 0,x=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const c=this._drawWrapper;c.setEffect(M,Z,x),void 0!==P&&(c.materialContext=P),M||(c.defines=null,c.materialContext=void 0)}resetDrawCache(M){let Z=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==M)return void this._removeDrawWrapper(M,!0,Z);for(const M of this._drawWrappers)null===M||void 0===M||M.dispose(Z)}this._drawWrappers=[]}static AddToMesh(M,Z,P,x,c,w,v){return new mM(M,Z,P,x,c,w,v,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(M,Z,P,x,c,w,v){let G=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],mM=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=M,this.verticesStart=Z,this.verticesCount=P,this.indexStart=x,this.indexCount=c,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=w,this._renderingMesh=v||w,mM&&w.Uc.push(this),this._engine=this._mesh.DM().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=w.Uc.length-1,G&&(this.refreshBoundingInfo(),w.Jc(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(M){return this._boundingInfo=M,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const M=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return M||this._renderingMesh}EM(){let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const Z=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!Z)return M&&this._mesh.DM()._hasDefaultMaterial?this._mesh.DM().defaultMaterial:null;if(this._isMultiMaterial(Z)){const M=Z.getSubMaterial(this.materialIndex);return this._currentMaterial!==M&&(this._currentMaterial=M,this.resetDrawCache()),M}return Z}_isMultiMaterial(M){return void 0!==M.getSubMaterial}refreshBoundingInfo(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.tc)return this;if(M||(M=this._renderingMesh.getVerticesData(x.g.PositionKind)),!M)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const Z=this._renderingMesh.Fc();let P;if(0===this.indexStart&&this.indexCount===Z.length){const M=this._renderingMesh.getBoundingInfo();P={minimum:M.minimum.clone(),maximum:M.maximum.clone()}}else P=(0,v.e)(M,Z,this.indexStart,this.indexCount,this._renderingMesh.tc.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(P.minimum,P.maximum):this._boundingInfo=new w.d(P.minimum,P.maximum),this}_checkCollision(M){return this.getBoundingInfo()._checkCollision(M)}updateBoundingInfo(M){let Z=this.getBoundingInfo();return Z||(this.refreshBoundingInfo(),Z=this.getBoundingInfo()),Z&&Z.update(M),this}isInFrustum(M){const Z=this.getBoundingInfo();return!!Z&&Z.isInFrustum(M,this._mesh.jH)}isCompletelyInFrustum(M){const Z=this.getBoundingInfo();return!!Z&&Z.isCompletelyInFrustum(M)}render(M){return this._renderingMesh.render(this,M,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(M,Z){if(!this._linesIndexBuffer){const P=6*Math.floor(this.indexCount/3),x=this.verticesStart+this.verticesCount>65535?new Uint32Array(P):new Uint16Array(P);let c=0;if(0===M.length)for(let M=this.indexStart;M<this.indexStart+this.indexCount;M+=3)x[c++]=M,x[c++]=M+1,x[c++]=M+1,x[c++]=M+2,x[c++]=M+2,x[c++]=M;else for(let Z=this.indexStart;Z<this.indexStart+this.indexCount;Z+=3)x[c++]=M[Z],x[c++]=M[Z+1],x[c++]=M[Z+1],x[c++]=M[Z+2],x[c++]=M[Z+2],x[c++]=M[Z];this._linesIndexBuffer=Z.createIndexBuffer(x),this._linesIndexCount=x.length}return this._linesIndexBuffer}canIntersects(M){const Z=this.getBoundingInfo();return!!Z&&M.intersectsBox(Z.boundingBox)}intersects(M,Z,P,x,c){const w=this.EM();if(!w)return null;let v=3,G=!1;switch(w.fillMode){case 3:case 5:case 6:case 8:return null;case 7:v=1,G=!0}return 4===w.fillMode?P.length?this._intersectLines(M,Z,P,this._mesh.intersectionThreshold,x):this._intersectUnIndexedLines(M,Z,P,this._mesh.intersectionThreshold,x):!P.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(M,Z,P,x,c):this._intersectTriangles(M,Z,P,v,G,x,c)}_intersectLines(M,Z,P,x,w){let v=null;for(let G=this.indexStart;G<this.indexStart+this.indexCount;G+=2){const mM=Z[P[G]],K=Z[P[G+1]],d=M.intersectionSegment(mM,K,x);if(!(d<0)&&((w||!v||d<v.distance)&&(v=new c.d(null,null,d),v.faceId=G/2,w)))break}return v}_intersectUnIndexedLines(M,Z,P,x,w){let v=null;for(let G=this.verticesStart;G<this.verticesStart+this.verticesCount;G+=2){const P=Z[G],mM=Z[G+1],K=M.intersectionSegment(P,mM,x);if(!(K<0)&&((w||!v||K<v.distance)&&(v=new c.d(null,null,K),v.faceId=G/2,w)))break}return v}_intersectTriangles(M,Z,P,x,c,w,v){let G=null,mM=-1;for(let K=this.indexStart;K<this.indexStart+this.indexCount-(3-x);K+=x){mM++;const x=P[K],d=P[K+1],O=P[K+2];if(c&&4294967295===O){K+=2;continue}const H=Z[x],j=Z[d],B=Z[O];if(!H||!j||!B)continue;if(v&&!v(H,j,B,M,x,d,O))continue;const U=M.intersectsTriangle(H,j,B);if(U){if(U.distance<0)continue;if((w||!G||U.distance<G.distance)&&(G=U,G.faceId=mM,w))break}}return G}_intersectUnIndexedTriangles(M,Z,P,x,c){let w=null;for(let v=this.verticesStart;v<this.verticesStart+this.verticesCount;v+=3){const P=Z[v],G=Z[v+1],mM=Z[v+2];if(c&&!c(P,G,mM,M,-1,-1,-1))continue;const K=M.intersectsTriangle(P,G,mM);if(K){if(K.distance<0)continue;if((x||!w||K.distance<w.distance)&&(w=K,w.faceId=v/3,x))break}}return w}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(M,Z){const P=new mM(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,M,Z,!1);if(!this.IsGlobal){const M=this.getBoundingInfo();if(!M)return P;P._boundingInfo=new w.d(M.minimum,M.maximum)}return P}dispose(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.DM().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const Z=this._mesh.Uc.indexOf(this);this._mesh.Uc.splice(Z,1),this.resetDrawCache(void 0,M)}getClassName(){return"SubMesh"}static CreateFromIndices(M,Z,P,x,c){let w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],v=Number.MAX_VALUE,G=-Number.MAX_VALUE;const K=(c||x).Fc();for(let mM=Z;mM<Z+P;mM++){const M=K[mM];M<v&&(v=M),M>G&&(G=M)}return new mM(M,v,G-v+1,Z,P,x,c,w)}}}}]);