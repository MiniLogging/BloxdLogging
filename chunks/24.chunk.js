"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[24],{12188:(b,X,P)=>{P.d(X,{d:()=>Q});class Q{constructor(b,X,P){this.bu=b,this.bv=X,this.distance=P,this.faceId=0,this.subMeshId=0}}},12198:(b,X,P)=>{P.d(X,{c:()=>N});var Q=P(11841),S=P(11834),d=P(11836);class N{constructor(b,X,P){this.vectors=(0,Q.b)(8,S.tX.Zero),this.center=S.tX.Zero(),this.centerWorld=S.tX.Zero(),this.extendSize=S.tX.Zero(),this.extendSizeWorld=S.tX.Zero(),this.directions=(0,Q.b)(3,S.tX.Zero),this.vectorsWorld=(0,Q.b)(8,S.tX.Zero),this.minimumWorld=S.tX.Zero(),this.maximumWorld=S.tX.Zero(),this.minimum=S.tX.Zero(),this.maximum=S.tX.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(b,X,P)}reConstruct(b,X,P){const Q=b.x,d=b.y,N=b.z,a=X.x,u=X.y,w=X.z,f=this.vectors;this.minimum.sd(Q,d,N),this.maximum.sd(a,u,w),f[0].sd(Q,d,N),f[1].sd(a,u,w),f[2].sd(a,d,N),f[3].sd(Q,u,N),f[4].sd(Q,d,w),f[5].sd(a,u,N),f[6].sd(Q,u,w),f[7].sd(a,d,w),X.addToRef(b,this.center).scaleInPlace(.5),X.subtractToRef(b,this.extendSize).scaleInPlace(.5),this._worldMatrix=P||S.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(b){const X=N._TmpVector3,P=this.maximum.subtractToRef(this.minimum,X[0]),Q=P.length();P.normalizeFromLength(Q);const S=Q*b,d=P.scaleInPlace(.5*S),a=this.center.subtractToRef(d,X[1]),u=this.center.addToRef(d,X[2]);return this.reConstruct(a,u,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(b){const X=this.minimumWorld,P=this.maximumWorld,Q=this.directions,d=this.vectorsWorld,N=this.vectors;if(b.isIdentity()){X.N(this.minimum),P.N(this.maximum);for(let b=0;b<8;++b)d[b].N(N[b]);this.extendSizeWorld.N(this.extendSize),this.centerWorld.N(this.center)}else{X.Gd(Number.MAX_VALUE),P.Gd(-Number.MAX_VALUE);for(let Q=0;Q<8;++Q){const a=d[Q];S.tX.TransformCoordinatesToRef(N[Q],b,a),X.minimizeInPlace(a),P.maximizeInPlace(a)}P.subtractToRef(X,this.extendSizeWorld).scaleInPlace(.5),P.addToRef(X,this.centerWorld).scaleInPlace(.5)}S.tX.FromArrayToRef(b.m,0,Q[0]),S.tX.FromArrayToRef(b.m,4,Q[1]),S.tX.FromArrayToRef(b.m,8,Q[2]),this._worldMatrix=b}isInFrustum(b){return N.IsInFrustum(this.vectorsWorld,b)}isCompletelyInFrustum(b){return N.IsCompletelyInFrustum(this.vectorsWorld,b)}intersectsPoint(b){const X=this.minimumWorld,P=this.maximumWorld,Q=X.x,S=X.y,N=X.z,a=P.x,u=P.y,w=P.z,f=b.x,O=b.y,e=b.z,Y=-d.c;return!(a-f<Y||Y>f-Q)&&(!(u-O<Y||Y>O-S)&&!(w-e<Y||Y>e-N))}intersectsSphere(b){return N.IntersectsSphere(this.minimumWorld,this.maximumWorld,b.centerWorld,b.radiusWorld)}intersectsMinMax(b,X){const P=this.minimumWorld,Q=this.maximumWorld,S=P.x,d=P.y,N=P.z,a=Q.x,u=Q.y,w=Q.z,f=b.x,O=b.y,e=b.z,Y=X.x,D=X.y,E=X.z;return!(a<f||S>Y)&&(!(u<O||d>D)&&!(w<e||N>E))}dispose(){var b,X;null===(b=this._drawWrapperFront)||void 0===b||b.dispose(),null===(X=this._drawWrapperBack)||void 0===X||X.dispose()}static Intersects(b,X){return b.intersectsMinMax(X.minimumWorld,X.maximumWorld)}static IntersectsSphere(b,X,P,Q){const d=N._TmpVector3[0];S.tX.ClampToRef(P,b,X,d);return S.tX.DistanceSquared(P,d)<=Q*Q}static IsCompletelyInFrustum(b,X){for(let P=0;P<6;++P){const Q=X[P];for(let X=0;X<8;++X)if(Q.dotCoordinate(b[X])<0)return!1}return!0}static IsInFrustum(b,X){for(let P=0;P<6;++P){let Q=!0;const S=X[P];for(let X=0;X<8;++X)if(S.dotCoordinate(b[X])>=0){Q=!1;break}if(Q)return!1}return!0}}N._TmpVector3=(0,Q.b)(3,S.tX.Zero)},12192:(b,X,P)=>{P.d(X,{c:()=>O});var Q=P(11841),S=P(11834),d=P(12198),N=P(12207);const a={min:0,max:0},u={min:0,max:0},w=(b,X,P)=>{const Q=S.tX.Dot(X.centerWorld,b),d=Math.abs(S.tX.Dot(X.directions[0],b))*X.extendSize.x+Math.abs(S.tX.Dot(X.directions[1],b))*X.extendSize.y+Math.abs(S.tX.Dot(X.directions[2],b))*X.extendSize.z;P.min=Q-d,P.max=Q+d},f=(b,X,P)=>(w(b,X,a),w(b,P,u),!(a.min>u.max||u.min>a.max));class O{constructor(b,X,P){this._isLocked=!1,this.boundingBox=new d.c(b,X,P),this.boundingSphere=new N.c(b,X,P)}reConstruct(b,X,P){this.boundingBox.reConstruct(b,X,P),this.boundingSphere.reConstruct(b,X,P)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(b){this._isLocked=b}update(b){this._isLocked||(this.boundingBox._update(b),this.boundingSphere._update(b))}centerOn(b,X){const P=O._TmpVector3[0].N(b).fO(X),Q=O._TmpVector3[1].N(b).addInPlace(X);return this.boundingBox.reConstruct(P,Q,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(P,Q,this.boundingBox.getWorldMatrix()),this}encapsulate(b){const X=S.tX.Minimize(this.minimum,b),P=S.tX.Maximize(this.maximum,b);return this.reConstruct(X,P,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(b){const X=S.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(X);const P=S.TmpVectors.tX[0];return S.tX.TransformCoordinatesToRef(b.boundingBox.minimumWorld,X,P),this.encapsulate(P),S.tX.TransformCoordinatesToRef(b.boundingBox.maximumWorld,X,P),this.encapsulate(P),this}scale(b){return this.boundingBox.scale(b),this.boundingSphere.scale(b),this}isInFrustum(b){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===X||3===X)&&this.boundingSphere.isCenterInFrustum(b))return!0;if(!this.boundingSphere.isInFrustum(b))return!1;return!(1!==X&&3!==X)||this.boundingBox.isInFrustum(b)}get diagonalLength(){const b=this.boundingBox;return b.maximumWorld.subtractToRef(b.minimumWorld,O._TmpVector3[0]).length()}isCompletelyInFrustum(b){return this.boundingBox.isCompletelyInFrustum(b)}_checkCollision(b){return b._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(b){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(b)&&!!this.boundingBox.intersectsPoint(b))}intersects(b,X){if(!N.c.Intersects(this.boundingSphere,b.boundingSphere))return!1;if(!d.c.Intersects(this.boundingBox,b.boundingBox))return!1;if(!X)return!0;const P=this.boundingBox,Q=b.boundingBox;return!!f(P.directions[0],P,Q)&&(!!f(P.directions[1],P,Q)&&(!!f(P.directions[2],P,Q)&&(!!f(Q.directions[0],P,Q)&&(!!f(Q.directions[1],P,Q)&&(!!f(Q.directions[2],P,Q)&&(!!f(S.tX.Cross(P.directions[0],Q.directions[0]),P,Q)&&(!!f(S.tX.Cross(P.directions[0],Q.directions[1]),P,Q)&&(!!f(S.tX.Cross(P.directions[0],Q.directions[2]),P,Q)&&(!!f(S.tX.Cross(P.directions[1],Q.directions[0]),P,Q)&&(!!f(S.tX.Cross(P.directions[1],Q.directions[1]),P,Q)&&(!!f(S.tX.Cross(P.directions[1],Q.directions[2]),P,Q)&&(!!f(S.tX.Cross(P.directions[2],Q.directions[0]),P,Q)&&(!!f(S.tX.Cross(P.directions[2],Q.directions[1]),P,Q)&&!!f(S.tX.Cross(P.directions[2],Q.directions[2]),P,Q))))))))))))))}}O._TmpVector3=(0,Q.b)(2,S.tX.Zero)},12207:(b,X,P)=>{P.d(X,{c:()=>d});var Q=P(11841),S=P(11834);class d{constructor(b,X,P){this.center=S.tX.Zero(),this.centerWorld=S.tX.Zero(),this.minimum=S.tX.Zero(),this.maximum=S.tX.Zero(),this.reConstruct(b,X,P)}reConstruct(b,X,P){this.minimum.N(b),this.maximum.N(X);const Q=S.tX.Distance(b,X);X.addToRef(b,this.center).scaleInPlace(.5),this.radius=.5*Q,this._update(P||S.Matrix.IdentityReadOnly)}scale(b){const X=this.radius*b,P=d._TmpVector3,Q=P[0].Gd(X),S=this.center.subtractToRef(Q,P[1]),N=this.center.addToRef(Q,P[2]);return this.reConstruct(S,N,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(b){if(b.isIdentity())this.centerWorld.N(this.center),this.radiusWorld=this.radius;else{S.tX.TransformCoordinatesToRef(this.center,b,this.centerWorld);const X=d._TmpVector3[0];S.tX.TransformNormalFromFloatsToRef(1,1,1,b,X),this.radiusWorld=Math.max(Math.abs(X.x),Math.abs(X.y),Math.abs(X.z))*this.radius}}isInFrustum(b){const X=this.centerWorld,P=this.radiusWorld;for(let Q=0;Q<6;Q++)if(b[Q].dotCoordinate(X)<=-P)return!1;return!0}isCenterInFrustum(b){const X=this.centerWorld;for(let P=0;P<6;P++)if(b[P].dotCoordinate(X)<0)return!1;return!0}intersectsPoint(b){const X=S.tX.DistanceSquared(this.centerWorld,b);return!(this.radiusWorld*this.radiusWorld<X)}static Intersects(b,X){const P=S.tX.DistanceSquared(b.centerWorld,X.centerWorld),Q=b.radiusWorld+X.radiusWorld;return!(Q*Q<P)}static CreateFromCenterAndRadius(b,X,P){this._TmpVector3[0].N(b),this._TmpVector3[1].sd(0,0,X),this._TmpVector3[2].N(b),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].fO(this._TmpVector3[1]);const Q=new d(this._TmpVector3[0],this._TmpVector3[2]);return Q._worldMatrix=P||S.Matrix.Identity(),Q}}d._TmpVector3=(0,Q.b)(3,S.tX.Zero)},12229:(b,X,P)=>{function Q(b){-1===b.indexOf("vClipPlane")&&b.push("vClipPlane"),-1===b.indexOf("vClipPlane2")&&b.push("vClipPlane2"),-1===b.indexOf("vClipPlane3")&&b.push("vClipPlane3"),-1===b.indexOf("vClipPlane4")&&b.push("vClipPlane4"),-1===b.indexOf("vClipPlane5")&&b.push("vClipPlane5"),-1===b.indexOf("vClipPlane6")&&b.push("vClipPlane6")}function S(b,X,P){const Q=!!(b.clipPlane??X.clipPlane),S=!!(b.clipPlane2??X.clipPlane2),d=!!(b.clipPlane3??X.clipPlane3),N=!!(b.clipPlane4??X.clipPlane4),a=!!(b.clipPlane5??X.clipPlane5),u=!!(b.clipPlane6??X.clipPlane6);Q&&P.push("#define CLIPPLANE"),S&&P.push("#define CLIPPLANE2"),d&&P.push("#define CLIPPLANE3"),N&&P.push("#define CLIPPLANE4"),a&&P.push("#define CLIPPLANE5"),u&&P.push("#define CLIPPLANE6")}function d(b,X,P){let Q=!1;const S=!!(b.clipPlane??X.clipPlane),d=!!(b.clipPlane2??X.clipPlane2),N=!!(b.clipPlane3??X.clipPlane3),a=!!(b.clipPlane4??X.clipPlane4),u=!!(b.clipPlane5??X.clipPlane5),w=!!(b.clipPlane6??X.clipPlane6);return P.CLIPPLANE!==S&&(P.CLIPPLANE=S,Q=!0),P.CLIPPLANE2!==d&&(P.CLIPPLANE2=d,Q=!0),P.CLIPPLANE3!==N&&(P.CLIPPLANE3=N,Q=!0),P.CLIPPLANE4!==a&&(P.CLIPPLANE4=a,Q=!0),P.CLIPPLANE5!==u&&(P.CLIPPLANE5=u,Q=!0),P.CLIPPLANE6!==w&&(P.CLIPPLANE6=w,Q=!0),Q}function N(b,X,P){let Q=X.clipPlane??P.clipPlane;a(b,"vClipPlane",Q),Q=X.clipPlane2??P.clipPlane2,a(b,"vClipPlane2",Q),Q=X.clipPlane3??P.clipPlane3,a(b,"vClipPlane3",Q),Q=X.clipPlane4??P.clipPlane4,a(b,"vClipPlane4",Q),Q=X.clipPlane5??P.clipPlane5,a(b,"vClipPlane5",Q),Q=X.clipPlane6??P.clipPlane6,a(b,"vClipPlane6",Q)}function a(b,X,P){P&&b.setFloat4(X,P.normal.x,P.normal.y,P.normal.z,P.d)}P.d(X,{e:()=>Q,i:()=>N,j:()=>d,m:()=>S})},12163:(b,X,P)=>{P.d(X,{c:()=>Q});class Q{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(b,X){this._defines[b]||(b<this._currentRank&&(this._currentRank=b),b>this._maxRank&&(this._maxRank=b),this._defines[b]=new Array),this._defines[b].push(X)}addCPUSkinningFallback(b,X){this._mesh=X,b<this._currentRank&&(this._currentRank=b),b>this._maxRank&&(this._maxRank=b)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(b,X){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,b=b.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),X._bonesComputationForcedToCPU=!0;const P=this._mesh.Ab();for(let b=0;b<P.meshes.length;b++){const Q=P.meshes[b];if(Q.material){if(Q.computeBonesUsingShaders&&0!==Q.numBoneInfluencers)if(Q.material.getEffect()===X)Q.computeBonesUsingShaders=!1;else if(Q.hd)for(const b of Q.hd){if(b.effect===X){Q.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&Q.computeBonesUsingShaders&&Q.numBoneInfluencers>0&&(Q.computeBonesUsingShaders=!1)}}else{const X=this._defines[this._currentRank];if(X)for(let P=0;P<X.length;P++)b=b.replace("#define "+X[P],"");this._currentRank++}return b}}},12177:(b,X,P)=>{P.d(X,{b:()=>t});var Q=P(11822),S=P(11825),d=P(11689),N=P(11694),a=P(11732),u=P(12179),w=P(12121),f=P(11700),O=P(11887),e=P(11959),Y=P(11862);class D{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(b){this._func=b}get funcRef(){return this._funcRef}set funcRef(b){this._funcRef=b}get funcMask(){return this._funcMask}set funcMask(b){this._funcMask=b}get opStencilFail(){return this._opStencilFail}set opStencilFail(b){this._opStencilFail=b}get opDepthFail(){return this._opDepthFail}set opDepthFail(b){this._opDepthFail=b}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(b){this._opStencilDepthPass=b}get mask(){return this._mask}set mask(b){this._mask=b}get enabled(){return this._enabled}set enabled(b){this._enabled=b}getClassName(){return"MaterialStencilState"}copyTo(b){Y.b.Clone((()=>b),this)}serialize(){return Y.b.Serialize(this)}parse(b,X,P){Y.b.Parse((()=>this),b,X,P)}}(0,Q.b)([(0,S.E)()],D.prototype,"func",null),(0,Q.b)([(0,S.E)()],D.prototype,"funcRef",null),(0,Q.b)([(0,S.E)()],D.prototype,"funcMask",null),(0,Q.b)([(0,S.E)()],D.prototype,"opStencilFail",null),(0,Q.b)([(0,S.E)()],D.prototype,"opDepthFail",null),(0,Q.b)([(0,S.E)()],D.prototype,"opStencilDepthPass",null),(0,Q.b)([(0,S.E)()],D.prototype,"mask",null),(0,Q.b)([(0,S.E)()],D.prototype,"enabled",null);var E=P(12221);class t{get _supportGlowLayer(){return!1}set _glowModeEnabled(b){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(b){if(this._alpha===b)return;const X=this._alpha;this._alpha=b,1!==X&&1!==b||this.pw(t.MiscDirtyFlag+t.PrePassDirtyFlag)}get alpha(){return this._alpha}set Jd(b){this._backFaceCulling!==b&&(this._backFaceCulling=b,this.pw(t.TextureDirtyFlag))}get Jd(){return this._backFaceCulling}set cullBackFaces(b){this._cullBackFaces!==b&&(this._cullBackFaces=b,this.pw(t.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(b){this._blockDirtyMechanism!==b&&(this._blockDirtyMechanism=b,b||this.IO())}atomicMaterialsUpdate(b){this.blockDirtyMechanism=!0;try{b(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(b){this._onDisposeObserver&&this.Nd.remove(this._onDisposeObserver),this._onDisposeObserver=this.Nd.add(b)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new N.d),this._onBindObservable}set onBind(b){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(b)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new N.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new N.d),this._onEffectCreatedObservable}set alphaMode(b){this._alphaMode!==b&&(this._alphaMode=b,this.pw(t.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(b){this._needDepthPrePass!==b&&(this._needDepthPrePass=b,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(b){this._fogEnabled!==b&&(this._fogEnabled=b,this.pw(t.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case t.WireFrameFillMode:case t.LineListDrawMode:case t.LineLoopDrawMode:case t.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(b){this.fillMode=b?t.WireFrameFillMode:t.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case t.PointFillMode:case t.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(b){this.fillMode=b?t.PointFillMode:t.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(b){this._fillMode!==b&&(this._fillMode=b,this.pw(t.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(b){const X=this.Ab().getEngine().getCaps().fragmentDepthSupported;b&&!X&&f.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=b&&X,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(b){this._drawWrapper=b}constructor(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Nd=new N.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new D,this._useUBO=!1,this._fillMode=t.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=b;const S=X||a.e.LastCreatedScene;S&&(this._scene=S,this._dirtyCallbacks={},this._forceGLSL=Q,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=b||d.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new e.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new w.b(this._scene.getEngine(),void 0,void 0,b),this._useUBO=this.Ab().getEngine().supportsUniformBuffers,this._createUniformBuffer(),P||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),t.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var b;const X=this.Ab().getEngine();null===(b=this._uniformBuffer)||void 0===b||b.dispose(),X.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new w.b(X,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new w.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(b){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.IO(),this.checkReadyOnlyOnce=!0}unfreeze(){this.IO(),this.checkReadyOnlyOnce=!1}isReady(b,X){return!0}isReadyForSubMesh(b,X,P){const Q=X.materialDefines;return!!Q&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Q,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}Ab(){return this._scene}_getEffectiveOrientation(b){return null!==this.sideOrientation?this.sideOrientation:b.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(b){this._transparencyMode!==b&&(this._transparencyMode=b,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===t.MATERIAL_ALPHABLEND||this._transparencyMode===t.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===t.MATERIAL_ALPHATEST||this._transparencyMode===t.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===t.MATERIAL_OPAQUE||this._transparencyMode===t.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(b){return this._hasTransparencyMode?this._transparencyModeIsBlend:b.visibility<1||!this._disableAlphaBlending&&(b.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(b){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(b)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}IO(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const X=this.Ab().meshes;for(const P of X)if(P.hd)for(const X of P.hd)if(X.zb()===this)for(const P of X._drawWrappers)P&&this._materialContext===P.materialContext&&(P._wasPreviouslyReady=!1,P._wasPreviouslyUsingInstances=null,P._forceRebindOnNextCall=b);b&&this.pw(t.AllDirtyFlag)}_preBind(b){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const P=this._scene.getEngine(),Q=(null==X?this.sideOrientation:X)===t.ClockWiseSideOrientation;return P.enableEffect(b||this._getDrawWrapper()),P.setState(this.Jd,this.zOffset,!1,Q,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),Q}bind(b,X){}buildUniformLayout(){const b=this._uniformBuffer;this._eventInfo.ubo=b,this._callbackPluginEventGeneric(8,this._eventInfo),b.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(b,X,P){const Q=P._drawWrapper;this._eventInfo.subMesh=P,this._callbackPluginEventBindForSubMesh(this._eventInfo),Q._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(b){}bindView(b){this._useUBO?this._needToBindSceneUbo=!0:b.setMatrix("view",this.Ab().getViewMatrix())}bindViewProjection(b){this._useUBO?this._needToBindSceneUbo=!0:(b.setMatrix("viewProjection",this.Ab().getTransformMatrix()),b.setMatrix("projection",this.Ab().getProjectionMatrix()))}bindEyePosition(b,X){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(b,X)}_afterBind(b){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&X&&(this._needToBindSceneUbo=!1,(0,E.s)(X,this.Ab().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=b?b.visibility:1,this._onBindObservable&&b&&this._onBindObservable.notifyObservers(b),this.disableDepthWrite){const b=this._scene.getEngine();this._cachedDepthWriteState=b.getDepthWrite(),b.setDepthWrite(!1)}if(this.disableColorWrite){const b=this._scene.getEngine();this._cachedColorWriteState=b.getColorWrite(),b.setColorWrite(!1)}if(0!==this.depthFunction){const b=this._scene.getEngine();this._cachedDepthFunctionState=b.getDepthFunction()||0,b.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(b){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=b,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(b){return null}_clonePlugins(b,X){const P={};if(this._serializePlugins(P),t._ParsePlugins(P,b,this._scene,X),this.pluginManager)for(const Q of this.pluginManager._plugins){const X=b.pluginManager.getPlugin(Q.name);X&&Q.copyTo(X)}}getBindedMeshes(){if(this.meshMap){const b=[];for(const X in this.meshMap){const P=this.meshMap[X];P&&b.push(P)}return b}return this._scene.meshes.filter((b=>b.material===this))}forceCompilation(b,X,P,Q){const S={clipPlane:!1,useInstances:!1,...P},d=this.Ab(),N=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const a=()=>{if(!this._scene||!this._scene.getEngine())return;const P=d.clipPlane;if(S.clipPlane&&(d.clipPlane=new O.c(0,0,0,1)),this._storeEffectOnSubMeshes){let P=!0,d=null;if(b.hd){const X=new u.d(0,0,0,0,0,b,void 0,!1,!1);X.materialDefines&&(X.materialDefines._renderId=-1),this.isReadyForSubMesh(b,X,S.useInstances)||(X.effect&&X.effect.getCompilationError()&&X.effect.allFallbacksProcessed()?d=X.effect.getCompilationError():(P=!1,setTimeout(a,16)))}P&&(this.allowShaderHotSwapping=N,d&&Q&&Q(d),X&&X(this))}else this.isReady()?(this.allowShaderHotSwapping=N,X&&X(this)):setTimeout(a,16);S.clipPlane&&(d.clipPlane=P)};a()}async forceCompilationAsync(b,X){return await new Promise(((P,Q)=>{this.forceCompilation(b,(()=>{P()}),X,(b=>{Q(b)}))}))}pw(b){this.Ab().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(t._DirtyCallbackArray.length=0,b&t.ImageProcessingDirtyFlag&&t._DirtyCallbackArray.push(t._ImageProcessingDirtyCallBack),b&t.TextureDirtyFlag&&t._DirtyCallbackArray.push(t._TextureDirtyCallBack),b&t.LightDirtyFlag&&t._DirtyCallbackArray.push(t._LightsDirtyCallBack),b&t.FresnelDirtyFlag&&t._DirtyCallbackArray.push(t._FresnelDirtyCallBack),b&t.AttributesDirtyFlag&&t._DirtyCallbackArray.push(t._AttributeDirtyCallBack),b&t.MiscDirtyFlag&&t._DirtyCallbackArray.push(t._MiscDirtyCallBack),b&t.PrePassDirtyFlag&&t._DirtyCallbackArray.push(t._PrePassDirtyCallBack),t._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(t._RunDirtyCallBacks),this.Ab().resetCachedMaterial())}resetDrawCache(){const b=this.Ab().meshes;for(const X of b)if(X.hd)for(const b of X.hd)b.zb()===this&&b.resetDrawCache()}_markAllSubMeshesAsDirty(b){const X=this.Ab();if(X.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const P=X.meshes;for(const Q of P)if(Q.hd)for(const P of Q.hd){if((P.zb()||(X._hasDefaultMaterial?X.defaultMaterial:null))===this)for(const X of P._drawWrappers)X&&X.defines&&X.defines.markAllAsDirty&&this._materialContext===X.materialContext&&b(X.defines)}}_markScenePrePassDirty(){if(this.Ab().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const b=this.Ab().enablePrePassRenderer();b&&b.pw()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(t._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(t._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(t._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(t._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(t._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(t._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(t._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(t._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(t._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(t._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const b=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Nd.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(b)}))}}setPrePassRenderer(b){return!1}dispose(b,X,P){const Q=this.Ab();if(Q.stopAnimation(this),Q.freeProcessedMaterials(),Q.removeMaterial(this),this._eventInfo.forceDisposeTextures=X,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const b=this._parentContainer.materials.indexOf(this);b>-1&&this._parentContainer.materials.splice(b,1),this._parentContainer=null}if(!0!==P)if(this.meshMap)for(const S in this.meshMap){const b=this.meshMap[S];this._disposeMeshResources(b)}else{const b=Q.meshes;for(const X of b)this._disposeMeshResources(X)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Nd.notifyObservers(this),this.Nd.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(b){if(!b)return;const X=b.Ud,P=b._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(b.hd&&P)for(const S of b.hd){const b=S._drawWrappers;for(let d=0;d<b.length;d++){var Q;const N=null===(Q=b[d])||void 0===Q?void 0:Q.effect;if(!N)continue;P[d]===this&&(null===X||void 0===X||X._releaseVertexArrayObject(N),S._removeDrawWrapper(d,!0,!0))}}}else null===X||void 0===X||X._releaseVertexArrayObject(this._drawWrapper.effect);b.material!==this||b.sourceMesh||(b.material=null)}serialize(){const b=Y.b.Serialize(this);return b.stencil=this.stencil.serialize(),b.uniqueId=this.uniqueId,this._serializePlugins(b),b}_serializePlugins(b){if(b.plugins={},this.pluginManager)for(const X of this.pluginManager._plugins)X.doNotSerialize||(b.plugins[X.getClassName()]=X.serialize())}static Parse(b,X,P){if(b.customType){if("BABYLON.PBRMaterial"===b.customType&&b.overloadedAlbedo&&(b.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return f.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else b.customType="BABYLON.StandardMaterial";const Q=d.Tools.Instantiate(b.customType).Parse(b,X,P);return Q._loadedUniqueId=b.uniqueId,Q}static _ParsePlugins(b,X,P,Q){if(b.plugins)for(const a in b.plugins){var S,N;const u=b.plugins[a];let w=null===(S=X.pluginManager)||void 0===S?void 0:S.getPlugin(u.name);if(!w){const b=d.Tools.Instantiate("BABYLON."+a);b&&(w=new b(X))}null===(N=w)||void 0===N||N.parse(u,P,Q)}}}t.TriangleFillMode=0,t.WireFrameFillMode=1,t.PointFillMode=2,t.PointListDrawMode=3,t.LineListDrawMode=4,t.LineLoopDrawMode=5,t.LineStripDrawMode=6,t.TriangleStripDrawMode=7,t.TriangleFanDrawMode=8,t.ClockWiseSideOrientation=0,t.CounterClockWiseSideOrientation=1,t.ImageProcessingDirtyFlag=64,t.TextureDirtyFlag=1,t.LightDirtyFlag=2,t.FresnelDirtyFlag=4,t.AttributesDirtyFlag=8,t.MiscDirtyFlag=16,t.PrePassDirtyFlag=32,t.AllDirtyFlag=127,t.MATERIAL_OPAQUE=0,t.MATERIAL_ALPHATEST=1,t.MATERIAL_ALPHABLEND=2,t.MATERIAL_ALPHATESTANDBLEND=3,t.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,t.MATERIAL_NORMALBLENDMETHOD_RNM=1,t.OnEventObservable=new N.d,t._AllDirtyCallBack=b=>b.markAllAsDirty(),t._ImageProcessingDirtyCallBack=b=>b.markAsImageProcessingDirty(),t._TextureDirtyCallBack=b=>b.markAsTexturesDirty(),t._FresnelDirtyCallBack=b=>b.markAsFresnelDirty(),t._MiscDirtyCallBack=b=>b.markAsMiscDirty(),t._PrePassDirtyCallBack=b=>b.markAsPrePassDirty(),t._LightsDirtyCallBack=b=>b.markAsLightDirty(),t._AttributeDirtyCallBack=b=>b.markAsAttributesDirty(),t._FresnelAndMiscDirtyCallBack=b=>{t._FresnelDirtyCallBack(b),t._MiscDirtyCallBack(b)},t._TextureAndMiscDirtyCallBack=b=>{t._TextureDirtyCallBack(b),t._MiscDirtyCallBack(b)},t._DirtyCallbackArray=[],t._RunDirtyCallBacks=b=>{for(const X of t._DirtyCallbackArray)X(b)},(0,Q.b)([(0,S.E)()],t.prototype,"id",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"uniqueId",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"name",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"metadata",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"checkReadyOnEveryCall",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"checkReadyOnlyOnce",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"state",void 0),(0,Q.b)([(0,S.E)("alpha")],t.prototype,"_alpha",void 0),(0,Q.b)([(0,S.E)("Jd")],t.prototype,"_backFaceCulling",void 0),(0,Q.b)([(0,S.E)("cullBackFaces")],t.prototype,"_cullBackFaces",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"sideOrientation",void 0),(0,Q.b)([(0,S.E)("alphaMode")],t.prototype,"_alphaMode",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"_needDepthPrePass",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"disableDepthWrite",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"disableColorWrite",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"forceDepthWrite",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"depthFunction",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"separateCullingPass",void 0),(0,Q.b)([(0,S.E)("fogEnabled")],t.prototype,"_fogEnabled",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"pointSize",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"zOffset",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"zOffsetUnits",void 0),(0,Q.b)([(0,S.E)()],t.prototype,"pointsCloud",null),(0,Q.b)([(0,S.E)()],t.prototype,"fillMode",null),(0,Q.b)([(0,S.E)()],t.prototype,"useLogarithmicDepth",null),(0,Q.b)([(0,S.E)()],t.prototype,"transparencyMode",null)},12221:(b,X,P)=>{P.d(X,{B:()=>n,D:()=>Z,G:()=>v,H:()=>Y,L:()=>e,O:()=>V,S:()=>q,U:()=>K,Y:()=>B,ab:()=>o,bb:()=>i,c:()=>y,db:()=>x,eb:()=>H,g:()=>O,hb:()=>p,j:()=>L,k:()=>f,lb:()=>D,o:()=>E,s:()=>t,v:()=>W,x:()=>A});var Q=P(11700),S=P(11878),d=P(11732),N=P(12160),a=P(12229);const u=S.yX.Black(),w={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function f(b,X,P){if(!b||b.LOGARITHMICDEPTH||b.indexOf&&b.indexOf("LOGARITHMICDEPTH")>=0){const b=P.activeCamera;1===b.mode&&Q.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),X.setFloat("logarithmicDepthConstant",2/(Math.log(b.maxZ+1)/Math.LN2))}}function O(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];P&&b.fogEnabled&&(!X||X.applyFog)&&0!==b.fogMode&&(P.setFloat4("vFogInfos",b.fogMode,b.fogStart,b.fogEnd,b.fogDensity),Q?(b.fogColor.toLinearSpaceToRef(u,b.getEngine().useExactSrgbConversions),P.setColor3("vFogColor",u)):P.setColor3("vFogColor",b.fogColor))}function e(b,X,P,Q,S,d,N,a,u,f){const O=b.numMaxInfluencers||b.numInfluencers;return O<=0?0:(X.push("#define MORPHTARGETS"),b.hasPositions&&X.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),b.hasNormals&&X.push("#define MORPHTARGETTEXTURE_HASNORMALS"),b.hasTangents&&X.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),b.hasUVs&&X.push("#define MORPHTARGETTEXTURE_HASUVS"),b.hasUV2s&&X.push("#define MORPHTARGETTEXTURE_HASUV2S"),b.hasColors&&X.push("#define MORPHTARGETTEXTURE_HASCOLORS"),b.supportsPositions&&S&&X.push("#define MORPHTARGETS_POSITION"),b.supportsNormals&&d&&X.push("#define MORPHTARGETS_NORMAL"),b.supportsTangents&&N&&X.push("#define MORPHTARGETS_TANGENT"),b.supportsUVs&&a&&X.push("#define MORPHTARGETS_UV"),b.supportsUV2s&&u&&X.push("#define MORPHTARGETS_UV2"),b.supportsColors&&f&&X.push("#define MORPHTARGETS_COLOR"),X.push("#define NUM_MORPH_INFLUENCERS "+O),b.isUsingTextureForTargets&&X.push("#define MORPHTARGETS_TEXTURE"),w.NUM_MORPH_INFLUENCERS=O,w.NORMAL=d,w.TANGENT=N,w.UV=a,w.UV2=u,w.COLOR=f,Y(P,Q,w,S),O)}function Y(b,X,P){let S=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const N=P.NUM_MORPH_INFLUENCERS;if(N>0&&d.e.LastCreatedEngine){const a=d.e.LastCreatedEngine.getCaps().maxVertexAttribs,u=X.morphTargetManager;if(null!==u&&void 0!==u&&u.isUsingTextureForTargets)return;const w=u&&u.supportsPositions&&S,f=u&&u.supportsNormals&&P.NORMAL,O=u&&u.supportsTangents&&P.TANGENT,e=u&&u.supportsUVs&&P.UV1,Y=u&&u.supportsUV2s&&P.UV2,D=u&&u.supportsColors&&P.VERTEXCOLOR;for(let P=0;P<N;P++)w&&b.push("position"+P),f&&b.push("normal"+P),O&&b.push("tangent"+P),e&&b.push("uv_"+P),Y&&b.push("uv2_"+P),D&&b.push("color"+P),b.length>a&&Q.b.Error("Cannot add more vertex attributes for mesh "+X.name)}}function D(b){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];b.push("world0"),b.push("world1"),b.push("world2"),b.push("world3"),X&&(b.push("previousWorld0"),b.push("previousWorld1"),b.push("previousWorld2"),b.push("previousWorld3"))}function E(b,X){const P=b.morphTargetManager;b&&P&&X.setFloatArray("morphTargetInfluences",P.influences)}function t(b,X){X.bindToEffect(b,"Scene")}function B(b,X,P){X._needUVs=!0,X[P]=!0,b.optimizeUVAllocation&&b.getTextureMatrix().isIdentityAs3x2()?(X[P+"DIRECTUV"]=b.coordinatesIndex+1,X["MAINUV"+(b.coordinatesIndex+1)]=!0):X[P+"DIRECTUV"]=0}function W(b,X,P){const Q=b.getTextureMatrix();X.Cd(P+"Matrix",Q)}function n(b,X,P){P.BAKED_VERTEX_ANIMATION_TEXTURE&&P.INSTANCES&&b.push("bakedVertexAnimationSettingsInstanced")}function y(b,X,P){var Q;if(X&&b&&(b.computeBonesUsingShaders&&X._bonesComputationForcedToCPU&&(b.computeBonesUsingShaders=!1),b.useBones&&b.computeBonesUsingShaders&&b.skeleton)){const S=b.skeleton;if(S.isUsingTextureForMatrices&&X.getUniformIndex("boneTextureWidth")>-1){const P=S.getTransformMatrixTexture(b);X.setTexture("boneSampler",P),X.setFloat("boneTextureWidth",4*(S.bones.length+1))}else{const d=S.getTransformMatrices(b);d&&(X.setMatrices("mBones",d),P&&b.Ab().prePassRenderer&&b.Ab().prePassRenderer.getIndex(2)&&(P.previousBones[b.uniqueId]||(P.previousBones[b.uniqueId]=d.slice()),X.setMatrices("mPreviousBones",P.previousBones[b.uniqueId]),Q=d,P.previousBones[b.uniqueId].set(Q)))}}}function h(b,X,P,Q,S){let d=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];b._bindLight(X,P,Q,S,d)}function L(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const d=Math.min(X.lightSources.length,S);for(let N=0;N<d;N++){h(X.lightSources[N],N,b,P,"boolean"===typeof Q?Q:Q.SPECULARTERM,X.receiveShadows)}}function Z(b,X,P,Q){P.NUM_BONE_INFLUENCERS>0&&(Q.addCPUSkinningFallback(0,X),b.push("matricesIndices"),b.push("matricesWeights"),P.NUM_BONE_INFLUENCERS>4&&(b.push("matricesIndicesExtra"),b.push("matricesWeightsExtra")))}function v(b,X){(X.INSTANCES||X.THIN_INSTANCES)&&D(b,!!X.PREPASS_VELOCITY),X.INSTANCESCOLOR&&b.push("instanceColor")}function A(b,X){let P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,S=0;for(let d=0;d<P&&b["LIGHT"+d];d++)d>0&&(S=Q+d,X.addFallback(S,"LIGHT"+d)),b.SHADOWS||(b["SHADOW"+d]&&X.addFallback(Q,"SHADOW"+d),b["SHADOWPCF"+d]&&X.addFallback(Q,"SHADOWPCF"+d),b["SHADOWPCSS"+d]&&X.addFallback(Q,"SHADOWPCSS"+d),b["SHADOWPOISSON"+d]&&X.addFallback(Q,"SHADOWPOISSON"+d),b["SHADOWESM"+d]&&X.addFallback(Q,"SHADOWESM"+d),b["SHADOWCLOSEESM"+d]&&X.addFallback(Q,"SHADOWCLOSEESM"+d));return S++}function o(b,X,P,Q,S,d,N){let a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];N._areMiscDirty&&(N.LOGARITHMICDEPTH=P,N.POINTSIZE=Q,N.FOG=S&&function(b,X){return X.fogEnabled&&b.applyFog&&0!==X.fogMode}(b,X),N.NONUNIFORMSCALING=b.nonUniformScaling,N.ALPHATEST=d,N.DECAL_AFTER_DETAIL=a)}function K(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!P._areLightsDirty)return P._needNormals;let N=0;const a={needNormals:P._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(b.lightsEnabled&&!d)for(const w of X.lightSources)if(T(b,X,w,N,P,Q,a),N++,N===S)break;P.SPECULARTERM=a.specularEnabled,P.SHADOWS=a.shadowEnabled;for(let w=N;w<S;w++)void 0!==P["LIGHT"+w]&&(P["LIGHT"+w]=!1,P["HEMILIGHT"+w]=!1,P["POINTLIGHT"+w]=!1,P["DIRLIGHT"+w]=!1,P["SPOTLIGHT"+w]=!1,P["AREALIGHT"+w]=!1,P["SHADOW"+w]=!1,P["SHADOWCSM"+w]=!1,P["SHADOWCSMDEBUG"+w]=!1,P["SHADOWCSMNUM_CASCADES"+w]=!1,P["SHADOWCSMUSESHADOWMAXZ"+w]=!1,P["SHADOWCSMNOBLEND"+w]=!1,P["SHADOWCSM_RIGHTHANDED"+w]=!1,P["SHADOWPCF"+w]=!1,P["SHADOWPCSS"+w]=!1,P["SHADOWPOISSON"+w]=!1,P["SHADOWESM"+w]=!1,P["SHADOWCLOSEESM"+w]=!1,P["SHADOWCUBE"+w]=!1,P["SHADOWLOWQUALITY"+w]=!1,P["SHADOWMEDIUMQUALITY"+w]=!1);const u=b.getEngine().getCaps();return void 0===P.SHADOWFLOAT&&(a.needRebuild=!0),P.SHADOWFLOAT=a.shadowEnabled&&(u.textureFloatRender&&u.textureFloatLinearFiltering||u.textureHalfFloatRender&&u.textureHalfFloatLinearFiltering),P.LIGHTMAPEXCLUDED=a.lightmapMode,a.needRebuild&&P.rebuild(),a.needNormals}function T(b,X,P,Q,S,d,a){switch(a.needNormals=!0,void 0===S["LIGHT"+Q]&&(a.needRebuild=!0),S["LIGHT"+Q]=!0,S["SPOTLIGHT"+Q]=!1,S["HEMILIGHT"+Q]=!1,S["POINTLIGHT"+Q]=!1,S["DIRLIGHT"+Q]=!1,S["AREALIGHT"+Q]=!1,P.prepareLightSpecificDefines(S,Q),S["LIGHT_FALLOFF_PHYSICAL"+Q]=!1,S["LIGHT_FALLOFF_GLTF"+Q]=!1,S["LIGHT_FALLOFF_STANDARD"+Q]=!1,P.falloffType){case N.d.FALLOFF_GLTF:S["LIGHT_FALLOFF_GLTF"+Q]=!0;break;case N.d.FALLOFF_PHYSICAL:S["LIGHT_FALLOFF_PHYSICAL"+Q]=!0;break;case N.d.FALLOFF_STANDARD:S["LIGHT_FALLOFF_STANDARD"+Q]=!0}if(d&&!P.uf.equalsFloats(0,0,0)&&(a.specularEnabled=!0),S["SHADOW"+Q]=!1,S["SHADOWCSM"+Q]=!1,S["SHADOWCSMDEBUG"+Q]=!1,S["SHADOWCSMNUM_CASCADES"+Q]=!1,S["SHADOWCSMUSESHADOWMAXZ"+Q]=!1,S["SHADOWCSMNOBLEND"+Q]=!1,S["SHADOWCSM_RIGHTHANDED"+Q]=!1,S["SHADOWPCF"+Q]=!1,S["SHADOWPCSS"+Q]=!1,S["SHADOWPOISSON"+Q]=!1,S["SHADOWESM"+Q]=!1,S["SHADOWCLOSEESM"+Q]=!1,S["SHADOWCUBE"+Q]=!1,S["SHADOWLOWQUALITY"+Q]=!1,S["SHADOWMEDIUMQUALITY"+Q]=!1,X&&X.receiveShadows&&b.shadowsEnabled&&P.shadowEnabled){const X=P.getShadowGenerator(b.activeCamera)??P.getShadowGenerator();if(X){const b=X.getShadowMap();b&&b.renderList&&b.renderList.length>0&&(a.shadowEnabled=!0,X.prepareDefines(S,Q))}}P.lightmapMode!=N.d.LIGHTMAP_DEFAULT?(a.lightmapMode=!0,S["LIGHTMAPEXCLUDED"+Q]=!0,S["LIGHTMAPNOSPECULAR"+Q]=P.lightmapMode==N.d.LIGHTMAP_SHADOWSONLY):(S["LIGHTMAPEXCLUDED"+Q]=!1,S["LIGHTMAPNOSPECULAR"+Q]=!1)}function q(b,X,P,Q,S){let d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=function(b,X){let P=!1;if(b.activeCamera){const Q=X.CAMERA_ORTHOGRAPHIC?1:0,S=X.CAMERA_PERSPECTIVE?1:0,d=1===b.activeCamera.mode?1:0,N=0===b.activeCamera.mode?1:0;(Q^d||S^N)&&(X.CAMERA_ORTHOGRAPHIC=1===d,X.CAMERA_PERSPECTIVE=1===N,P=!0)}return P}(b,Q);!1!==d&&(u=(0,a.j)(P,b,Q)),Q.DEPTHPREPASS!==!X.getColorWrite()&&(Q.DEPTHPREPASS=!Q.DEPTHPREPASS,u=!0),Q.INSTANCES!==S&&(Q.INSTANCES=S,u=!0),Q.THIN_INSTANCES!==N&&(Q.THIN_INSTANCES=N,u=!0),u&&Q.markAsUnprocessed()}function V(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]&&arguments[4],d=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],N=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!X._areAttributesDirty&&X._needNormals===X._normals&&X._needUVs===X._uvs)return!1;X._normals=X._needNormals,X._uvs=X._needUVs,X.NORMAL=X._needNormals&&b.isVerticesDataPresent("normal"),X._needNormals&&b.isVerticesDataPresent("tangent")&&(X.TANGENT=!0);for(let a=1;a<=6;++a)X["UV"+a]=!!X._needUVs&&b.isVerticesDataPresent(`uv${1===a?"":a}`);if(P){const P=b.useVertexColors&&b.isVerticesDataPresent("color");X.VERTEXCOLOR=P,X.VERTEXALPHA=b.hasVertexAlpha&&P&&d}return b.isVerticesDataPresent("instanceColor")&&(b.hasInstances||b.hasThinInstances)&&(X.INSTANCESCOLOR=!0),Q&&function(b,X){if(b.useBones&&b.computeBonesUsingShaders&&b.skeleton){X.NUM_BONE_INFLUENCERS=b.numBoneInfluencers;const P=void 0!==X.BONETEXTURE;if(b.skeleton.isUsingTextureForMatrices&&P)X.BONETEXTURE=!0;else{X.BonesPerMesh=b.skeleton.bones.length+1,X.BONETEXTURE=!P&&void 0;const Q=b.Ab().prePassRenderer;if(Q&&Q.enabled){const P=-1===Q.excludedSkinnedMesh.indexOf(b);X.BONES_VELOCITY_ENABLED=P}}}else X.NUM_BONE_INFLUENCERS=0,X.BonesPerMesh=0,void 0!==X.BONETEXTURE&&(X.BONETEXTURE=!1)}(b,X),S&&function(b,X){const P=b.morphTargetManager;P?(X.MORPHTARGETS_UV=P.supportsUVs&&X.UV1,X.MORPHTARGETS_UV2=P.supportsUV2s&&X.UV2,X.MORPHTARGETS_TANGENT=P.supportsTangents&&X.TANGENT,X.MORPHTARGETS_NORMAL=P.supportsNormals&&X.NORMAL,X.MORPHTARGETS_POSITION=P.supportsPositions,X.MORPHTARGETS_COLOR=P.supportsColors,X.MORPHTARGETTEXTURE_HASUVS=P.hasUVs,X.MORPHTARGETTEXTURE_HASUV2S=P.hasUV2s,X.MORPHTARGETTEXTURE_HASTANGENTS=P.hasTangents,X.MORPHTARGETTEXTURE_HASNORMALS=P.hasNormals,X.MORPHTARGETTEXTURE_HASPOSITIONS=P.hasPositions,X.MORPHTARGETTEXTURE_HASCOLORS=P.hasColors,X.NUM_MORPH_INFLUENCERS=P.numMaxInfluencers||P.numInfluencers,X.MORPHTARGETS=X.NUM_MORPH_INFLUENCERS>0,X.MORPHTARGETS_TEXTURE=P.isUsingTextureForTargets):(X.MORPHTARGETS_UV=!1,X.MORPHTARGETS_UV2=!1,X.MORPHTARGETS_TANGENT=!1,X.MORPHTARGETS_NORMAL=!1,X.MORPHTARGETS_POSITION=!1,X.MORPHTARGETS_COLOR=!1,X.MORPHTARGETTEXTURE_HASUVS=!1,X.MORPHTARGETTEXTURE_HASUV2S=!1,X.MORPHTARGETTEXTURE_HASTANGENTS=!1,X.MORPHTARGETTEXTURE_HASNORMALS=!1,X.MORPHTARGETTEXTURE_HASPOSITIONS=!1,X.MORPHTARGETTEXTURE_HAS_COLORS=!1,X.MORPHTARGETS=!1,X.NUM_MORPH_INFLUENCERS=0)}(b,X),N&&function(b,X){const P=b.bakedVertexAnimationManager;X.BAKED_VERTEX_ANIMATION_TEXTURE=!(!P||!P.isEnabled)}(b,X),!0}function i(b,X){if(b.activeCamera){const P=X.MULTIVIEW;X.MULTIVIEW=null!==b.activeCamera.outputRenderTarget&&b.activeCamera.outputRenderTarget.getViewCount()>1,X.MULTIVIEW!=P&&X.markAsUnprocessed()}}function x(b,X,P){const Q=X.ORDER_INDEPENDENT_TRANSPARENCY,S=X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;X.ORDER_INDEPENDENT_TRANSPARENCY=b.useOrderIndependentTransparency&&P,X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!b.getEngine().getCaps().textureFloatLinearFiltering,Q===X.ORDER_INDEPENDENT_TRANSPARENCY&&S===X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||X.markAsUnprocessed()}function H(b,X,P){const Q=X.PREPASS;if(!X._arePrePassDirty)return;const S=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(b.prePassRenderer&&b.prePassRenderer.enabled&&P){X.PREPASS=!0,X.SCENE_MRT_COUNT=b.prePassRenderer.mrtCount,X.PREPASS_NORMAL_WORLDSPACE=b.prePassRenderer.generateNormalsInWorldSpace,X.PREPASS_COLOR=!0,X.PREPASS_COLOR_INDEX=0;for(let P=0;P<S.length;P++){const Q=b.prePassRenderer.getIndex(S[P].type);-1!==Q?(X[S[P].define]=!0,X[S[P].index]=Q):X[S[P].define]=!1}}else{X.PREPASS=!1;for(let b=0;b<S.length;b++)X[S[b].define]=!1}X.PREPASS!=Q&&(X.markAsUnprocessed(),X.markAsImageProcessingDirty())}function C(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];S&&S.push("Light"+b),d||(X.push("vLightData"+b,"vLightDiffuse"+b,"vLightSpecular"+b,"vLightDirection"+b,"vLightWidth"+b,"vLightHeight"+b,"vLightFalloff"+b,"vLightGround"+b,"lightMatrix"+b,"shadowsInfo"+b,"depthValues"+b),P.push("shadowTexture"+b),P.push("depthTexture"+b),X.push("viewFrustumZ"+b,"cascadeBlendFactor"+b,"lightSizeUVCorrection"+b,"depthCorrection"+b,"penumbraDarkness"+b,"frustumLengths"+b),Q&&(P.push("projectionLightTexture"+b),X.push("textureProjectionMatrix"+b)),N&&P.push("iesLightTexture"+b))}function p(b,X,P){let Q,S,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(b.uniformsNames){const N=b;Q=N.uniformsNames,S=N.uniformBuffersNames,X=N.samplers,P=N.defines,d=N.maxSimultaneousLights||0}else Q=b,X||(X=[]);for(let N=0;N<d&&P["LIGHT"+N];N++)C(N,Q,X,P["PROJECTEDLIGHTTEXTURE"+N],S,!1,P["IESLIGHTTEXTURE"+N]);P.NUM_MORPH_INFLUENCERS&&(Q.push("morphTargetInfluences"),Q.push("morphTargetCount")),P.BAKED_VERTEX_ANIMATION_TEXTURE&&(Q.push("bakedVertexAnimationSettings"),Q.push("bakedVertexAnimationTextureSizeInverted"),Q.push("bakedVertexAnimationTime"),X.push("bakedVertexAnimationTexture"))}},12169:(b,X,P)=>{P.d(X,{d:()=>d});var Q=P(11834),S=P(12177);class d extends S.b{constructor(b,X){let P=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(b,X,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new Q.Matrix,this._storeEffectOnSubMeshes=P}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(b,X){return!!b&&(!this._storeEffectOnSubMeshes||(!b.hd||0===b.hd.length||this.isReadyForSubMesh(b,b.hd[0],X)))}_isReadyForSubMesh(b){const X=b.materialDefines;return!(this.checkReadyOnEveryCall||!b.effect||!X||X._renderId!==this.Ab().getRenderId())}bindOnlyWorldMatrix(b){this._activeEffect.setMatrix("world",b)}bindOnlyNormalMatrix(b){this._activeEffect.setMatrix("normalMatrix",b)}bind(b,X){X&&this.bindForSubMesh(b,X,X.hd[0])}_afterBind(b){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,P=arguments.length>2?arguments[2]:void 0;super._afterBind(b,X,P),this.Ab()._cachedEffect=X,P?P._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return P._drawWrapper._forceRebindOnNextCall||b.isCachedMaterialInvalid(this,X,Q)}dispose(b,X,P){this._activeEffect=void 0,super.dispose(b,X,P)}}},12213:(b,X,P)=>{P.d(X,{d:()=>a,e:()=>u});var Q=P(11822),S=P(11834),d=P(11825);class N{static extractMinAndMaxIndexed(b,X,P,Q,S,d){for(let N=P;N<P+Q;N++){const P=3*X[N],Q=b[P],a=b[P+1],u=b[P+2];S.minimizeInPlaceFromFloats(Q,a,u),d.maximizeInPlaceFromFloats(Q,a,u)}}static extractMinAndMax(b,X,P,Q,S,d){for(let N=X,a=X*Q;N<X+P;N++,a+=Q){const X=b[a],P=b[a+1],Q=b[a+2];S.minimizeInPlaceFromFloats(X,P,Q),d.maximizeInPlaceFromFloats(X,P,Q)}}}function a(b,X,P,Q){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const a=new S.tX(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),u=new S.tX(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return N.extractMinAndMaxIndexed(b,X,P,Q,a,u),d&&(a.x-=a.x*d.x+d.y,a.y-=a.y*d.x+d.y,a.z-=a.z*d.x+d.y,u.x+=u.x*d.x+d.y,u.y+=u.y*d.x+d.y,u.z+=u.z*d.x+d.y),{minimum:a,maximum:u}}function u(b,X,P){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,d=arguments.length>4?arguments[4]:void 0;const a=new S.tX(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),u=new S.tX(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return d||(d=3),N.extractMinAndMax(b,X,P,d,a,u),Q&&(a.x-=a.x*Q.x+Q.y,a.y-=a.y*Q.x+Q.y,a.z-=a.z*Q.x+Q.y,u.x+=u.x*Q.x+Q.y,u.y+=u.y*Q.x+Q.y,u.z+=u.z*Q.x+Q.y),{minimum:a,maximum:u}}(0,Q.b)([d.e.filter((function(){for(var b=arguments.length,X=new Array(b),P=0;P<b;P++)X[P]=arguments[P];let[Q,S]=X;return!Array.isArray(Q)&&!Array.isArray(S)}))],N,"extractMinAndMaxIndexed",null),(0,Q.b)([d.e.filter((function(){for(var b=arguments.length,X=new Array(b),P=0;P<b;P++)X[P]=arguments[P];let[Q]=X;return!Array.isArray(Q)}))],N,"extractMinAndMax",null)},12179:(b,X,P)=>{P.d(X,{d:()=>u});var Q=P(11912),S=P(12188),d=P(12192),N=P(12213),a=P(11959);class u{get materialDefines(){var b;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(b=this._getDrawWrapper())||void 0===b?void 0:b.defines}set materialDefines(b){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=b}_getDrawWrapper(b){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];b=b??this._engine.currentRenderPassId;let P=this._drawWrappers[b];return!P&&X&&(this._drawWrappers[b]=P=new a.b(this._mesh.Ab().getEngine())),P}_removeDrawWrapper(b){let X=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var P;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(P=this._drawWrappers[b])||void 0===P||P.dispose(X));this._drawWrappers[b]=void 0}get effect(){var b;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(b=this._getDrawWrapper())||void 0===b?void 0:b.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(b){this._mainDrawWrapperOverride=b}setEffect(b){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,P=arguments.length>2?arguments[2]:void 0,Q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const S=this._drawWrapper;S.setEffect(b,X,Q),void 0!==P&&(S.materialContext=P),b||(S.defines=null,S.materialContext=void 0)}resetDrawCache(b){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==b)return void this._removeDrawWrapper(b,!0,X);for(const b of this._drawWrappers)null===b||void 0===b||b.dispose(X)}this._drawWrappers=[]}static AddToMesh(b,X,P,Q,S,d,N){return new u(b,X,P,Q,S,d,N,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(b,X,P,Q,S,d,N){let a=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],u=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=b,this.verticesStart=X,this.verticesCount=P,this.indexStart=Q,this.indexCount=S,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=d,this._renderingMesh=N||d,u&&d.hd.push(this),this._engine=this._mesh.Ab().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=d.hd.length-1,a&&(this.refreshBoundingInfo(),d.pd(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(b){return this._boundingInfo=b,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const b=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return b||this._renderingMesh}zb(){let b=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const X=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!X)return b&&this._mesh.Ab()._hasDefaultMaterial?this._mesh.Ab().defaultMaterial:null;if(this._isMultiMaterial(X)){const b=X.getSubMaterial(this.materialIndex);return this._currentMaterial!==b&&(this._currentMaterial=b,this.resetDrawCache()),b}return X}_isMultiMaterial(b){return void 0!==b.getSubMaterial}refreshBoundingInfo(){let b=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Ud)return this;if(b||(b=this._renderingMesh.getVerticesData(Q.g.PositionKind)),!b)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const X=this._renderingMesh.ld();let P;if(0===this.indexStart&&this.indexCount===X.length){const b=this._renderingMesh.getBoundingInfo();P={minimum:b.minimum.clone(),maximum:b.maximum.clone()}}else P=(0,N.d)(b,X,this.indexStart,this.indexCount,this._renderingMesh.Ud.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(P.minimum,P.maximum):this._boundingInfo=new d.c(P.minimum,P.maximum),this}_checkCollision(b){return this.getBoundingInfo()._checkCollision(b)}updateBoundingInfo(b){let X=this.getBoundingInfo();return X||(this.refreshBoundingInfo(),X=this.getBoundingInfo()),X&&X.update(b),this}isInFrustum(b){const X=this.getBoundingInfo();return!!X&&X.isInFrustum(b,this._mesh.ZO)}isCompletelyInFrustum(b){const X=this.getBoundingInfo();return!!X&&X.isCompletelyInFrustum(b)}render(b){return this._renderingMesh.render(this,b,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(b,X){if(!this._linesIndexBuffer){const P=6*Math.floor(this.indexCount/3),Q=this.verticesStart+this.verticesCount>65535?new Uint32Array(P):new Uint16Array(P);let S=0;if(0===b.length)for(let b=this.indexStart;b<this.indexStart+this.indexCount;b+=3)Q[S++]=b,Q[S++]=b+1,Q[S++]=b+1,Q[S++]=b+2,Q[S++]=b+2,Q[S++]=b;else for(let X=this.indexStart;X<this.indexStart+this.indexCount;X+=3)Q[S++]=b[X],Q[S++]=b[X+1],Q[S++]=b[X+1],Q[S++]=b[X+2],Q[S++]=b[X+2],Q[S++]=b[X];this._linesIndexBuffer=X.createIndexBuffer(Q),this._linesIndexCount=Q.length}return this._linesIndexBuffer}canIntersects(b){const X=this.getBoundingInfo();return!!X&&b.intersectsBox(X.boundingBox)}intersects(b,X,P,Q,S){const d=this.zb();if(!d)return null;let N=3,a=!1;switch(d.fillMode){case 3:case 5:case 6:case 8:return null;case 7:N=1,a=!0}return 4===d.fillMode?P.length?this._intersectLines(b,X,P,this._mesh.intersectionThreshold,Q):this._intersectUnIndexedLines(b,X,P,this._mesh.intersectionThreshold,Q):!P.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(b,X,P,Q,S):this._intersectTriangles(b,X,P,N,a,Q,S)}_intersectLines(b,X,P,Q,d){let N=null;for(let a=this.indexStart;a<this.indexStart+this.indexCount;a+=2){const u=X[P[a]],w=X[P[a+1]],f=b.intersectionSegment(u,w,Q);if(!(f<0)&&((d||!N||f<N.distance)&&(N=new S.d(null,null,f),N.faceId=a/2,d)))break}return N}_intersectUnIndexedLines(b,X,P,Q,d){let N=null;for(let a=this.verticesStart;a<this.verticesStart+this.verticesCount;a+=2){const P=X[a],u=X[a+1],w=b.intersectionSegment(P,u,Q);if(!(w<0)&&((d||!N||w<N.distance)&&(N=new S.d(null,null,w),N.faceId=a/2,d)))break}return N}_intersectTriangles(b,X,P,Q,S,d,N){let a=null,u=-1;for(let w=this.indexStart;w<this.indexStart+this.indexCount-(3-Q);w+=Q){u++;const Q=P[w],f=P[w+1],O=P[w+2];if(S&&4294967295===O){w+=2;continue}const e=X[Q],Y=X[f],D=X[O];if(!e||!Y||!D)continue;if(N&&!N(e,Y,D,b,Q,f,O))continue;const E=b.intersectsTriangle(e,Y,D);if(E){if(E.distance<0)continue;if((d||!a||E.distance<a.distance)&&(a=E,a.faceId=u,d))break}}return a}_intersectUnIndexedTriangles(b,X,P,Q,S){let d=null;for(let N=this.verticesStart;N<this.verticesStart+this.verticesCount;N+=3){const P=X[N],a=X[N+1],u=X[N+2];if(S&&!S(P,a,u,b,-1,-1,-1))continue;const w=b.intersectsTriangle(P,a,u);if(w){if(w.distance<0)continue;if((Q||!d||w.distance<d.distance)&&(d=w,d.faceId=N/3,Q))break}}return d}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(b,X){const P=new u(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,b,X,!1);if(!this.IsGlobal){const b=this.getBoundingInfo();if(!b)return P;P._boundingInfo=new d.c(b.minimum,b.maximum)}return P}dispose(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.Ab().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const X=this._mesh.hd.indexOf(this);this._mesh.hd.splice(X,1),this.resetDrawCache(void 0,b)}getClassName(){return"SubMesh"}static CreateFromIndices(b,X,P,Q,S){let d=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],N=Number.MAX_VALUE,a=-Number.MAX_VALUE;const w=(S||Q).ld();for(let u=X;u<X+P;u++){const b=w[u];b<N&&(N=b),b>a&&(a=b)}return new u(b,N,a-N+1,X,P,Q,S,d)}}}}]);