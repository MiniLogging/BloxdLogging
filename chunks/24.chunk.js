"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[24],{11940:(U,X,b)=>{b.d(X,{c:()=>F});class F{constructor(U,X,b){this.bu=U,this.bv=X,this.distance=b,this.faceId=0,this.subMeshId=0}}},11954:(U,X,b)=>{b.d(X,{d:()=>Q});var F=b(11600),E=b(11593),w=b(11597);class Q{constructor(U,X,b){this.vectors=(0,F.e)(8,E.JX.Zero),this.center=E.JX.Zero(),this.centerWorld=E.JX.Zero(),this.extendSize=E.JX.Zero(),this.extendSizeWorld=E.JX.Zero(),this.directions=(0,F.e)(3,E.JX.Zero),this.vectorsWorld=(0,F.e)(8,E.JX.Zero),this.minimumWorld=E.JX.Zero(),this.maximumWorld=E.JX.Zero(),this.minimum=E.JX.Zero(),this.maximum=E.JX.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(U,X,b)}reConstruct(U,X,b){const F=U.x,w=U.y,Q=U.z,z=X.x,q=X.y,p=X.z,S=this.vectors;this.minimum.Pb(F,w,Q),this.maximum.Pb(z,q,p),S[0].Pb(F,w,Q),S[1].Pb(z,q,p),S[2].Pb(z,w,Q),S[3].Pb(F,q,Q),S[4].Pb(F,w,p),S[5].Pb(z,q,Q),S[6].Pb(F,q,p),S[7].Pb(z,w,p),X.addToRef(U,this.center).scaleInPlace(.5),X.subtractToRef(U,this.extendSize).scaleInPlace(.5),this._worldMatrix=b||E.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(U){const X=Q._TmpVector3,b=this.maximum.subtractToRef(this.minimum,X[0]),F=b.length();b.normalizeFromLength(F);const E=F*U,w=b.scaleInPlace(.5*E),z=this.center.subtractToRef(w,X[1]),q=this.center.addToRef(w,X[2]);return this.reConstruct(z,q,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(U){const X=this.minimumWorld,b=this.maximumWorld,F=this.directions,w=this.vectorsWorld,Q=this.vectors;if(U.isIdentity()){X.q(this.minimum),b.q(this.maximum);for(let U=0;U<8;++U)w[U].q(Q[U]);this.extendSizeWorld.q(this.extendSize),this.centerWorld.q(this.center)}else{X.jb(Number.MAX_VALUE),b.jb(-Number.MAX_VALUE);for(let F=0;F<8;++F){const z=w[F];E.JX.TransformCoordinatesToRef(Q[F],U,z),X.minimizeInPlace(z),b.maximizeInPlace(z)}b.subtractToRef(X,this.extendSizeWorld).scaleInPlace(.5),b.addToRef(X,this.centerWorld).scaleInPlace(.5)}E.JX.FromArrayToRef(U.m,0,F[0]),E.JX.FromArrayToRef(U.m,4,F[1]),E.JX.FromArrayToRef(U.m,8,F[2]),this._worldMatrix=U}isInFrustum(U){return Q.IsInFrustum(this.vectorsWorld,U)}isCompletelyInFrustum(U){return Q.IsCompletelyInFrustum(this.vectorsWorld,U)}intersectsPoint(U){const X=this.minimumWorld,b=this.maximumWorld,F=X.x,E=X.y,Q=X.z,z=b.x,q=b.y,p=b.z,S=U.x,R=U.y,n=U.z,a=-w.d;return!(z-S<a||a>S-F)&&(!(q-R<a||a>R-E)&&!(p-n<a||a>n-Q))}intersectsSphere(U){return Q.IntersectsSphere(this.minimumWorld,this.maximumWorld,U.centerWorld,U.radiusWorld)}intersectsMinMax(U,X){const b=this.minimumWorld,F=this.maximumWorld,E=b.x,w=b.y,Q=b.z,z=F.x,q=F.y,p=F.z,S=U.x,R=U.y,n=U.z,a=X.x,J=X.y,m=X.z;return!(z<S||E>a)&&(!(q<R||w>J)&&!(p<n||Q>m))}dispose(){var U,X;null===(U=this._drawWrapperFront)||void 0===U||U.dispose(),null===(X=this._drawWrapperBack)||void 0===X||X.dispose()}static Intersects(U,X){return U.intersectsMinMax(X.minimumWorld,X.maximumWorld)}static IntersectsSphere(U,X,b,F){const w=Q._TmpVector3[0];E.JX.ClampToRef(b,U,X,w);return E.JX.DistanceSquared(b,w)<=F*F}static IsCompletelyInFrustum(U,X){for(let b=0;b<6;++b){const F=X[b];for(let X=0;X<8;++X)if(F.dotCoordinate(U[X])<0)return!1}return!0}static IsInFrustum(U,X){for(let b=0;b<6;++b){let F=!0;const E=X[b];for(let X=0;X<8;++X)if(E.dotCoordinate(U[X])>=0){F=!1;break}if(F)return!1}return!0}}Q._TmpVector3=(0,F.e)(3,E.JX.Zero)},11949:(U,X,b)=>{b.d(X,{d:()=>R});var F=b(11600),E=b(11593),w=b(11954),Q=b(11958);const z={min:0,max:0},q={min:0,max:0},p=(U,X,b)=>{const F=E.JX.Dot(X.centerWorld,U),w=Math.abs(E.JX.Dot(X.directions[0],U))*X.extendSize.x+Math.abs(E.JX.Dot(X.directions[1],U))*X.extendSize.y+Math.abs(E.JX.Dot(X.directions[2],U))*X.extendSize.z;b.min=F-w,b.max=F+w},S=(U,X,b)=>(p(U,X,z),p(U,b,q),!(z.min>q.max||q.min>z.max));class R{constructor(U,X,b){this._isLocked=!1,this.boundingBox=new w.d(U,X,b),this.boundingSphere=new Q.e(U,X,b)}reConstruct(U,X,b){this.boundingBox.reConstruct(U,X,b),this.boundingSphere.reConstruct(U,X,b)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(U){this._isLocked=U}update(U){this._isLocked||(this.boundingBox._update(U),this.boundingSphere._update(U))}centerOn(U,X){const b=R._TmpVector3[0].q(U).pR(X),F=R._TmpVector3[1].q(U).addInPlace(X);return this.boundingBox.reConstruct(b,F,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(b,F,this.boundingBox.getWorldMatrix()),this}encapsulate(U){const X=E.JX.Minimize(this.minimum,U),b=E.JX.Maximize(this.maximum,U);return this.reConstruct(X,b,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(U){const X=E.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(X);const b=E.TmpVectors.JX[0];return E.JX.TransformCoordinatesToRef(U.boundingBox.minimumWorld,X,b),this.encapsulate(b),E.JX.TransformCoordinatesToRef(U.boundingBox.maximumWorld,X,b),this.encapsulate(b),this}scale(U){return this.boundingBox.scale(U),this.boundingSphere.scale(U),this}isInFrustum(U){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===X||3===X)&&this.boundingSphere.isCenterInFrustum(U))return!0;if(!this.boundingSphere.isInFrustum(U))return!1;return!(1!==X&&3!==X)||this.boundingBox.isInFrustum(U)}get diagonalLength(){const U=this.boundingBox;return U.maximumWorld.subtractToRef(U.minimumWorld,R._TmpVector3[0]).length()}isCompletelyInFrustum(U){return this.boundingBox.isCompletelyInFrustum(U)}_checkCollision(U){return U._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(U){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(U)&&!!this.boundingBox.intersectsPoint(U))}intersects(U,X){if(!Q.e.Intersects(this.boundingSphere,U.boundingSphere))return!1;if(!w.d.Intersects(this.boundingBox,U.boundingBox))return!1;if(!X)return!0;const b=this.boundingBox,F=U.boundingBox;return!!S(b.directions[0],b,F)&&(!!S(b.directions[1],b,F)&&(!!S(b.directions[2],b,F)&&(!!S(F.directions[0],b,F)&&(!!S(F.directions[1],b,F)&&(!!S(F.directions[2],b,F)&&(!!S(E.JX.Cross(b.directions[0],F.directions[0]),b,F)&&(!!S(E.JX.Cross(b.directions[0],F.directions[1]),b,F)&&(!!S(E.JX.Cross(b.directions[0],F.directions[2]),b,F)&&(!!S(E.JX.Cross(b.directions[1],F.directions[0]),b,F)&&(!!S(E.JX.Cross(b.directions[1],F.directions[1]),b,F)&&(!!S(E.JX.Cross(b.directions[1],F.directions[2]),b,F)&&(!!S(E.JX.Cross(b.directions[2],F.directions[0]),b,F)&&(!!S(E.JX.Cross(b.directions[2],F.directions[1]),b,F)&&!!S(E.JX.Cross(b.directions[2],F.directions[2]),b,F))))))))))))))}}R._TmpVector3=(0,F.e)(2,E.JX.Zero)},11958:(U,X,b)=>{b.d(X,{e:()=>w});var F=b(11600),E=b(11593);class w{constructor(U,X,b){this.center=E.JX.Zero(),this.centerWorld=E.JX.Zero(),this.minimum=E.JX.Zero(),this.maximum=E.JX.Zero(),this.reConstruct(U,X,b)}reConstruct(U,X,b){this.minimum.q(U),this.maximum.q(X);const F=E.JX.Distance(U,X);X.addToRef(U,this.center).scaleInPlace(.5),this.radius=.5*F,this._update(b||E.Matrix.IdentityReadOnly)}scale(U){const X=this.radius*U,b=w._TmpVector3,F=b[0].jb(X),E=this.center.subtractToRef(F,b[1]),Q=this.center.addToRef(F,b[2]);return this.reConstruct(E,Q,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(U){if(U.isIdentity())this.centerWorld.q(this.center),this.radiusWorld=this.radius;else{E.JX.TransformCoordinatesToRef(this.center,U,this.centerWorld);const X=w._TmpVector3[0];E.JX.TransformNormalFromFloatsToRef(1,1,1,U,X),this.radiusWorld=Math.max(Math.abs(X.x),Math.abs(X.y),Math.abs(X.z))*this.radius}}isInFrustum(U){const X=this.centerWorld,b=this.radiusWorld;for(let F=0;F<6;F++)if(U[F].dotCoordinate(X)<=-b)return!1;return!0}isCenterInFrustum(U){const X=this.centerWorld;for(let b=0;b<6;b++)if(U[b].dotCoordinate(X)<0)return!1;return!0}intersectsPoint(U){const X=E.JX.DistanceSquared(this.centerWorld,U);return!(this.radiusWorld*this.radiusWorld<X)}static Intersects(U,X){const b=E.JX.DistanceSquared(U.centerWorld,X.centerWorld),F=U.radiusWorld+X.radiusWorld;return!(F*F<b)}static CreateFromCenterAndRadius(U,X,b){this._TmpVector3[0].q(U),this._TmpVector3[1].Pb(0,0,X),this._TmpVector3[2].q(U),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].pR(this._TmpVector3[1]);const F=new w(this._TmpVector3[0],this._TmpVector3[2]);return F._worldMatrix=b||E.Matrix.Identity(),F}}w._TmpVector3=(0,F.e)(3,E.JX.Zero)},11972:(U,X,b)=>{function F(U){-1===U.indexOf("vClipPlane")&&U.push("vClipPlane"),-1===U.indexOf("vClipPlane2")&&U.push("vClipPlane2"),-1===U.indexOf("vClipPlane3")&&U.push("vClipPlane3"),-1===U.indexOf("vClipPlane4")&&U.push("vClipPlane4"),-1===U.indexOf("vClipPlane5")&&U.push("vClipPlane5"),-1===U.indexOf("vClipPlane6")&&U.push("vClipPlane6")}function E(U,X,b){const F=!!(U.clipPlane??X.clipPlane),E=!!(U.clipPlane2??X.clipPlane2),w=!!(U.clipPlane3??X.clipPlane3),Q=!!(U.clipPlane4??X.clipPlane4),z=!!(U.clipPlane5??X.clipPlane5),q=!!(U.clipPlane6??X.clipPlane6);F&&b.push("#define CLIPPLANE"),E&&b.push("#define CLIPPLANE2"),w&&b.push("#define CLIPPLANE3"),Q&&b.push("#define CLIPPLANE4"),z&&b.push("#define CLIPPLANE5"),q&&b.push("#define CLIPPLANE6")}function w(U,X,b){let F=!1;const E=!!(U.clipPlane??X.clipPlane),w=!!(U.clipPlane2??X.clipPlane2),Q=!!(U.clipPlane3??X.clipPlane3),z=!!(U.clipPlane4??X.clipPlane4),q=!!(U.clipPlane5??X.clipPlane5),p=!!(U.clipPlane6??X.clipPlane6);return b.CLIPPLANE!==E&&(b.CLIPPLANE=E,F=!0),b.CLIPPLANE2!==w&&(b.CLIPPLANE2=w,F=!0),b.CLIPPLANE3!==Q&&(b.CLIPPLANE3=Q,F=!0),b.CLIPPLANE4!==z&&(b.CLIPPLANE4=z,F=!0),b.CLIPPLANE5!==q&&(b.CLIPPLANE5=q,F=!0),b.CLIPPLANE6!==p&&(b.CLIPPLANE6=p,F=!0),F}function Q(U,X,b){let F=X.clipPlane??b.clipPlane;z(U,"vClipPlane",F),F=X.clipPlane2??b.clipPlane2,z(U,"vClipPlane2",F),F=X.clipPlane3??b.clipPlane3,z(U,"vClipPlane3",F),F=X.clipPlane4??b.clipPlane4,z(U,"vClipPlane4",F),F=X.clipPlane5??b.clipPlane5,z(U,"vClipPlane5",F),F=X.clipPlane6??b.clipPlane6,z(U,"vClipPlane6",F)}function z(U,X,b){b&&U.setFloat4(X,b.normal.x,b.normal.y,b.normal.z,b.d)}b.d(X,{b:()=>F,d:()=>Q,f:()=>w,h:()=>E})},11916:(U,X,b)=>{b.d(X,{d:()=>F});class F{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(U,X){this._defines[U]||(U<this._currentRank&&(this._currentRank=U),U>this._maxRank&&(this._maxRank=U),this._defines[U]=new Array),this._defines[U].push(X)}addCPUSkinningFallback(U,X){this._mesh=X,U<this._currentRank&&(this._currentRank=U),U>this._maxRank&&(this._maxRank=U)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(U,X){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,U=U.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),X._bonesComputationForcedToCPU=!0;const b=this._mesh.fU();for(let U=0;U<b.meshes.length;U++){const F=b.meshes[U];if(F.material){if(F.computeBonesUsingShaders&&0!==F.numBoneInfluencers)if(F.material.getEffect()===X)F.computeBonesUsingShaders=!1;else if(F.ab)for(const U of F.ab){if(U.effect===X){F.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&F.computeBonesUsingShaders&&F.numBoneInfluencers>0&&(F.computeBonesUsingShaders=!1)}}else{const X=this._defines[this._currentRank];if(X)for(let b=0;b<X.length;b++)U=U.replace("#define "+X[b],"");this._currentRank++}return U}}},11928:(U,X,b)=>{b.d(X,{e:()=>x});var F=b(11576),E=b(11583),w=b(11385),Q=b(11392),z=b(11442),q=b(11933),p=b(11857),S=b(11408),R=b(11644),n=b(11707),a=b(11623);class J{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(U){this._func=U}get funcRef(){return this._funcRef}set funcRef(U){this._funcRef=U}get funcMask(){return this._funcMask}set funcMask(U){this._funcMask=U}get opStencilFail(){return this._opStencilFail}set opStencilFail(U){this._opStencilFail=U}get opDepthFail(){return this._opDepthFail}set opDepthFail(U){this._opDepthFail=U}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(U){this._opStencilDepthPass=U}get mask(){return this._mask}set mask(U){this._mask=U}get enabled(){return this._enabled}set enabled(U){this._enabled=U}getClassName(){return"MaterialStencilState"}copyTo(U){a.d.Clone((()=>U),this)}serialize(){return a.d.Serialize(this)}parse(U,X,b){a.d.Parse((()=>this),U,X,b)}}(0,F.c)([(0,E.J)()],J.prototype,"func",null),(0,F.c)([(0,E.J)()],J.prototype,"funcRef",null),(0,F.c)([(0,E.J)()],J.prototype,"funcMask",null),(0,F.c)([(0,E.J)()],J.prototype,"opStencilFail",null),(0,F.c)([(0,E.J)()],J.prototype,"opDepthFail",null),(0,F.c)([(0,E.J)()],J.prototype,"opStencilDepthPass",null),(0,F.c)([(0,E.J)()],J.prototype,"mask",null),(0,F.c)([(0,E.J)()],J.prototype,"enabled",null);var m=b(11969);class x{get _supportGlowLayer(){return!1}set _glowModeEnabled(U){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(U){if(this._alpha===U)return;const X=this._alpha;this._alpha=U,1!==X&&1!==U||this.Cp(x.MiscDirtyFlag+x.PrePassDirtyFlag)}get alpha(){return this._alpha}set ib(U){this._backFaceCulling!==U&&(this._backFaceCulling=U,this.Cp(x.TextureDirtyFlag))}get ib(){return this._backFaceCulling}set cullBackFaces(U){this._cullBackFaces!==U&&(this._cullBackFaces=U,this.Cp(x.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(U){this._blockDirtyMechanism!==U&&(this._blockDirtyMechanism=U,U||this.MR())}atomicMaterialsUpdate(U){this.blockDirtyMechanism=!0;try{U(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(U){this._onDisposeObserver&&this.wb.remove(this._onDisposeObserver),this._onDisposeObserver=this.wb.add(U)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new Q.e),this._onBindObservable}set onBind(U){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(U)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new Q.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new Q.e),this._onEffectCreatedObservable}set alphaMode(U){this._alphaMode!==U&&(this._alphaMode=U,this.Cp(x.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(U){this._needDepthPrePass!==U&&(this._needDepthPrePass=U,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(U){this._fogEnabled!==U&&(this._fogEnabled=U,this.Cp(x.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case x.WireFrameFillMode:case x.LineListDrawMode:case x.LineLoopDrawMode:case x.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(U){this.fillMode=U?x.WireFrameFillMode:x.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case x.PointFillMode:case x.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(U){this.fillMode=U?x.PointFillMode:x.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(U){this._fillMode!==U&&(this._fillMode=U,this.Cp(x.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(U){const X=this.fU().getEngine().getCaps().fragmentDepthSupported;U&&!X&&S.e.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=U&&X,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(U){this._drawWrapper=U}constructor(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.wb=new Q.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new J,this._useUBO=!1,this._fillMode=x.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=U;const E=X||z.c.LastCreatedScene;E&&(this._scene=E,this._dirtyCallbacks={},this._forceGLSL=F,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=U||w.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new n.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new p.e(this._scene.getEngine(),void 0,void 0,U),this._useUBO=this.fU().getEngine().supportsUniformBuffers,this._createUniformBuffer(),b||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),x.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var U;const X=this.fU().getEngine();null===(U=this._uniformBuffer)||void 0===U||U.dispose(),X.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new p.e(X,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new p.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(U){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.MR(),this.checkReadyOnlyOnce=!0}unfreeze(){this.MR(),this.checkReadyOnlyOnce=!1}isReady(U,X){return!0}isReadyForSubMesh(U,X,b){const F=X.materialDefines;return!!F&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=F,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}fU(){return this._scene}_getEffectiveOrientation(U){return null!==this.sideOrientation?this.sideOrientation:U.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(U){this._transparencyMode!==U&&(this._transparencyMode=U,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===x.MATERIAL_ALPHABLEND||this._transparencyMode===x.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===x.MATERIAL_ALPHATEST||this._transparencyMode===x.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===x.MATERIAL_OPAQUE||this._transparencyMode===x.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(U){return this._hasTransparencyMode?this._transparencyModeIsBlend:U.visibility<1||!this._disableAlphaBlending&&(U.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(U){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(U)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}MR(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const X=this.fU().meshes;for(const b of X)if(b.ab)for(const X of b.ab)if(X.yU()===this)for(const b of X._drawWrappers)b&&this._materialContext===b.materialContext&&(b._wasPreviouslyReady=!1,b._wasPreviouslyUsingInstances=null,b._forceRebindOnNextCall=U);U&&this.Cp(x.AllDirtyFlag)}_preBind(U){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const b=this._scene.getEngine(),F=(null==X?this.sideOrientation:X)===x.ClockWiseSideOrientation;return b.enableEffect(U||this._getDrawWrapper()),b.setState(this.ib,this.zOffset,!1,F,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),F}bind(U,X){}buildUniformLayout(){const U=this._uniformBuffer;this._eventInfo.ubo=U,this._callbackPluginEventGeneric(8,this._eventInfo),U.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(U,X,b){const F=b._drawWrapper;this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),F._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(U){}bindView(U){this._useUBO?this._needToBindSceneUbo=!0:U.setMatrix("view",this.fU().getViewMatrix())}bindViewProjection(U){this._useUBO?this._needToBindSceneUbo=!0:(U.setMatrix("viewProjection",this.fU().getTransformMatrix()),U.setMatrix("projection",this.fU().getProjectionMatrix()))}bindEyePosition(U,X){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(U,X)}_afterBind(U){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&X&&(this._needToBindSceneUbo=!1,(0,m.r)(X,this.fU().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=U?U.visibility:1,this._onBindObservable&&U&&this._onBindObservable.notifyObservers(U),this.disableDepthWrite){const U=this._scene.getEngine();this._cachedDepthWriteState=U.getDepthWrite(),U.setDepthWrite(!1)}if(this.disableColorWrite){const U=this._scene.getEngine();this._cachedColorWriteState=U.getColorWrite(),U.setColorWrite(!1)}if(0!==this.depthFunction){const U=this._scene.getEngine();this._cachedDepthFunctionState=U.getDepthFunction()||0,U.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(U){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=U,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(U){return null}_clonePlugins(U,X){const b={};if(this._serializePlugins(b),x._ParsePlugins(b,U,this._scene,X),this.pluginManager)for(const F of this.pluginManager._plugins){const X=U.pluginManager.getPlugin(F.name);X&&F.copyTo(X)}}getBindedMeshes(){if(this.meshMap){const U=[];for(const X in this.meshMap){const b=this.meshMap[X];b&&U.push(b)}return U}return this._scene.meshes.filter((U=>U.material===this))}forceCompilation(U,X,b,F){const E={clipPlane:!1,useInstances:!1,...b},w=this.fU(),Q=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const z=()=>{if(!this._scene||!this._scene.getEngine())return;const b=w.clipPlane;if(E.clipPlane&&(w.clipPlane=new R.c(0,0,0,1)),this._storeEffectOnSubMeshes){let b=!0,w=null;if(U.ab){const X=new q.d(0,0,0,0,0,U,void 0,!1,!1);X.materialDefines&&(X.materialDefines._renderId=-1),this.isReadyForSubMesh(U,X,E.useInstances)||(X.effect&&X.effect.getCompilationError()&&X.effect.allFallbacksProcessed()?w=X.effect.getCompilationError():(b=!1,setTimeout(z,16)))}b&&(this.allowShaderHotSwapping=Q,w&&F&&F(w),X&&X(this))}else this.isReady()?(this.allowShaderHotSwapping=Q,X&&X(this)):setTimeout(z,16);E.clipPlane&&(w.clipPlane=b)};z()}async forceCompilationAsync(U,X){return await new Promise(((b,F)=>{this.forceCompilation(U,(()=>{b()}),X,(U=>{F(U)}))}))}Cp(U){this.fU().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(x._DirtyCallbackArray.length=0,U&x.ImageProcessingDirtyFlag&&x._DirtyCallbackArray.push(x._ImageProcessingDirtyCallBack),U&x.TextureDirtyFlag&&x._DirtyCallbackArray.push(x._TextureDirtyCallBack),U&x.LightDirtyFlag&&x._DirtyCallbackArray.push(x._LightsDirtyCallBack),U&x.FresnelDirtyFlag&&x._DirtyCallbackArray.push(x._FresnelDirtyCallBack),U&x.AttributesDirtyFlag&&x._DirtyCallbackArray.push(x._AttributeDirtyCallBack),U&x.MiscDirtyFlag&&x._DirtyCallbackArray.push(x._MiscDirtyCallBack),U&x.PrePassDirtyFlag&&x._DirtyCallbackArray.push(x._PrePassDirtyCallBack),x._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(x._RunDirtyCallBacks),this.fU().resetCachedMaterial())}resetDrawCache(){const U=this.fU().meshes;for(const X of U)if(X.ab)for(const U of X.ab)U.yU()===this&&U.resetDrawCache()}_markAllSubMeshesAsDirty(U){const X=this.fU();if(X.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const b=X.meshes;for(const F of b)if(F.ab)for(const b of F.ab){if((b.yU()||(X._hasDefaultMaterial?X.defaultMaterial:null))===this)for(const X of b._drawWrappers)X&&X.defines&&X.defines.markAllAsDirty&&this._materialContext===X.materialContext&&U(X.defines)}}_markScenePrePassDirty(){if(this.fU().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const U=this.fU().enablePrePassRenderer();U&&U.Cp()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(x._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(x._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(x._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(x._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(x._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(x._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(x._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(x._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(x._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(x._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const U=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.wb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(U)}))}}setPrePassRenderer(U){return!1}dispose(U,X,b){const F=this.fU();if(F.stopAnimation(this),F.freeProcessedMaterials(),F.removeMaterial(this),this._eventInfo.forceDisposeTextures=X,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const U=this._parentContainer.materials.indexOf(this);U>-1&&this._parentContainer.materials.splice(U,1),this._parentContainer=null}if(!0!==b)if(this.meshMap)for(const E in this.meshMap){const U=this.meshMap[E];this._disposeMeshResources(U)}else{const U=F.meshes;for(const X of U)this._disposeMeshResources(X)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.wb.notifyObservers(this),this.wb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(U){if(!U)return;const X=U.Nb,b=U._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(U.ab&&b)for(const E of U.ab){const U=E._drawWrappers;for(let w=0;w<U.length;w++){var F;const Q=null===(F=U[w])||void 0===F?void 0:F.effect;if(!Q)continue;b[w]===this&&(null===X||void 0===X||X._releaseVertexArrayObject(Q),E._removeDrawWrapper(w,!0,!0))}}}else null===X||void 0===X||X._releaseVertexArrayObject(this._drawWrapper.effect);U.material!==this||U.sourceMesh||(U.material=null)}serialize(){const U=a.d.Serialize(this);return U.stencil=this.stencil.serialize(),U.uniqueId=this.uniqueId,this._serializePlugins(U),U}_serializePlugins(U){if(U.plugins={},this.pluginManager)for(const X of this.pluginManager._plugins)X.doNotSerialize||(U.plugins[X.getClassName()]=X.serialize())}static Parse(U,X,b){if(U.customType){if("BABYLON.PBRMaterial"===U.customType&&U.overloadedAlbedo&&(U.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return S.e.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else U.customType="BABYLON.StandardMaterial";const F=w.Tools.Instantiate(U.customType).Parse(U,X,b);return F._loadedUniqueId=U.uniqueId,F}static _ParsePlugins(U,X,b,F){if(U.plugins)for(const z in U.plugins){var E,Q;const q=U.plugins[z];let p=null===(E=X.pluginManager)||void 0===E?void 0:E.getPlugin(q.name);if(!p){const U=w.Tools.Instantiate("BABYLON."+z);U&&(p=new U(X))}null===(Q=p)||void 0===Q||Q.parse(q,b,F)}}}x.TriangleFillMode=0,x.WireFrameFillMode=1,x.PointFillMode=2,x.PointListDrawMode=3,x.LineListDrawMode=4,x.LineLoopDrawMode=5,x.LineStripDrawMode=6,x.TriangleStripDrawMode=7,x.TriangleFanDrawMode=8,x.ClockWiseSideOrientation=0,x.CounterClockWiseSideOrientation=1,x.ImageProcessingDirtyFlag=64,x.TextureDirtyFlag=1,x.LightDirtyFlag=2,x.FresnelDirtyFlag=4,x.AttributesDirtyFlag=8,x.MiscDirtyFlag=16,x.PrePassDirtyFlag=32,x.AllDirtyFlag=127,x.MATERIAL_OPAQUE=0,x.MATERIAL_ALPHATEST=1,x.MATERIAL_ALPHABLEND=2,x.MATERIAL_ALPHATESTANDBLEND=3,x.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,x.MATERIAL_NORMALBLENDMETHOD_RNM=1,x.OnEventObservable=new Q.e,x._AllDirtyCallBack=U=>U.markAllAsDirty(),x._ImageProcessingDirtyCallBack=U=>U.markAsImageProcessingDirty(),x._TextureDirtyCallBack=U=>U.markAsTexturesDirty(),x._FresnelDirtyCallBack=U=>U.markAsFresnelDirty(),x._MiscDirtyCallBack=U=>U.markAsMiscDirty(),x._PrePassDirtyCallBack=U=>U.markAsPrePassDirty(),x._LightsDirtyCallBack=U=>U.markAsLightDirty(),x._AttributeDirtyCallBack=U=>U.markAsAttributesDirty(),x._FresnelAndMiscDirtyCallBack=U=>{x._FresnelDirtyCallBack(U),x._MiscDirtyCallBack(U)},x._TextureAndMiscDirtyCallBack=U=>{x._TextureDirtyCallBack(U),x._MiscDirtyCallBack(U)},x._DirtyCallbackArray=[],x._RunDirtyCallBacks=U=>{for(const X of x._DirtyCallbackArray)X(U)},(0,F.c)([(0,E.J)()],x.prototype,"id",void 0),(0,F.c)([(0,E.J)()],x.prototype,"uniqueId",void 0),(0,F.c)([(0,E.J)()],x.prototype,"name",void 0),(0,F.c)([(0,E.J)()],x.prototype,"metadata",void 0),(0,F.c)([(0,E.J)()],x.prototype,"checkReadyOnEveryCall",void 0),(0,F.c)([(0,E.J)()],x.prototype,"checkReadyOnlyOnce",void 0),(0,F.c)([(0,E.J)()],x.prototype,"state",void 0),(0,F.c)([(0,E.J)("alpha")],x.prototype,"_alpha",void 0),(0,F.c)([(0,E.J)("ib")],x.prototype,"_backFaceCulling",void 0),(0,F.c)([(0,E.J)("cullBackFaces")],x.prototype,"_cullBackFaces",void 0),(0,F.c)([(0,E.J)()],x.prototype,"sideOrientation",void 0),(0,F.c)([(0,E.J)("alphaMode")],x.prototype,"_alphaMode",void 0),(0,F.c)([(0,E.J)()],x.prototype,"_needDepthPrePass",void 0),(0,F.c)([(0,E.J)()],x.prototype,"disableDepthWrite",void 0),(0,F.c)([(0,E.J)()],x.prototype,"disableColorWrite",void 0),(0,F.c)([(0,E.J)()],x.prototype,"forceDepthWrite",void 0),(0,F.c)([(0,E.J)()],x.prototype,"depthFunction",void 0),(0,F.c)([(0,E.J)()],x.prototype,"separateCullingPass",void 0),(0,F.c)([(0,E.J)("fogEnabled")],x.prototype,"_fogEnabled",void 0),(0,F.c)([(0,E.J)()],x.prototype,"pointSize",void 0),(0,F.c)([(0,E.J)()],x.prototype,"zOffset",void 0),(0,F.c)([(0,E.J)()],x.prototype,"zOffsetUnits",void 0),(0,F.c)([(0,E.J)()],x.prototype,"pointsCloud",null),(0,F.c)([(0,E.J)()],x.prototype,"fillMode",null),(0,F.c)([(0,E.J)()],x.prototype,"useLogarithmicDepth",null),(0,F.c)([(0,E.J)()],x.prototype,"transparencyMode",null)},11969:(U,X,b)=>{b.d(X,{$:()=>y,A:()=>N,E:()=>f,F:()=>j,J:()=>a,K:()=>n,N:()=>A,O:()=>v,P:()=>d,S:()=>I,T:()=>l,V:()=>s,X:()=>h,_:()=>B,db:()=>J,e:()=>u,g:()=>R,k:()=>P,l:()=>S,o:()=>m,r:()=>x,u:()=>O,w:()=>e});var F=b(11408),E=b(11636),w=b(11442),Q=b(11907),z=b(11972);const q=E.NX.Black(),p={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function S(U,X,b){if(!U||U.LOGARITHMICDEPTH||U.indexOf&&U.indexOf("LOGARITHMICDEPTH")>=0){const U=b.activeCamera;1===U.mode&&F.e.Error("Logarithmic depth is not compatible with orthographic cameras!",20),X.setFloat("logarithmicDepthConstant",2/(Math.log(U.maxZ+1)/Math.LN2))}}function R(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]&&arguments[3];b&&U.fogEnabled&&(!X||X.applyFog)&&0!==U.fogMode&&(b.setFloat4("vFogInfos",U.fogMode,U.fogStart,U.fogEnd,U.fogDensity),F?(U.fogColor.toLinearSpaceToRef(q,U.getEngine().useExactSrgbConversions),b.setColor3("vFogColor",q)):b.setColor3("vFogColor",U.fogColor))}function n(U,X,b,F,E,w,Q,z,q,S){const R=U.numMaxInfluencers||U.numInfluencers;return R<=0?0:(X.push("#define MORPHTARGETS"),U.hasPositions&&X.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),U.hasNormals&&X.push("#define MORPHTARGETTEXTURE_HASNORMALS"),U.hasTangents&&X.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),U.hasUVs&&X.push("#define MORPHTARGETTEXTURE_HASUVS"),U.hasUV2s&&X.push("#define MORPHTARGETTEXTURE_HASUV2S"),U.hasColors&&X.push("#define MORPHTARGETTEXTURE_HASCOLORS"),U.supportsPositions&&E&&X.push("#define MORPHTARGETS_POSITION"),U.supportsNormals&&w&&X.push("#define MORPHTARGETS_NORMAL"),U.supportsTangents&&Q&&X.push("#define MORPHTARGETS_TANGENT"),U.supportsUVs&&z&&X.push("#define MORPHTARGETS_UV"),U.supportsUV2s&&q&&X.push("#define MORPHTARGETS_UV2"),U.supportsColors&&S&&X.push("#define MORPHTARGETS_COLOR"),X.push("#define NUM_MORPH_INFLUENCERS "+R),U.isUsingTextureForTargets&&X.push("#define MORPHTARGETS_TEXTURE"),p.NUM_MORPH_INFLUENCERS=R,p.NORMAL=w,p.TANGENT=Q,p.UV=z,p.UV2=q,p.COLOR=S,a(b,F,p,E),R)}function a(U,X,b){let E=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Q=b.NUM_MORPH_INFLUENCERS;if(Q>0&&w.c.LastCreatedEngine){const z=w.c.LastCreatedEngine.getCaps().maxVertexAttribs,q=X.morphTargetManager;if(null!==q&&void 0!==q&&q.isUsingTextureForTargets)return;const p=q&&q.supportsPositions&&E,S=q&&q.supportsNormals&&b.NORMAL,R=q&&q.supportsTangents&&b.TANGENT,n=q&&q.supportsUVs&&b.UV1,a=q&&q.supportsUV2s&&b.UV2,J=q&&q.supportsColors&&b.VERTEXCOLOR;for(let b=0;b<Q;b++)p&&U.push("position"+b),S&&U.push("normal"+b),R&&U.push("tangent"+b),n&&U.push("uv_"+b),a&&U.push("uv2_"+b),J&&U.push("color"+b),U.length>z&&F.e.Error("Cannot add more vertex attributes for mesh "+X.name)}}function J(U){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];U.push("world0"),U.push("world1"),U.push("world2"),U.push("world3"),X&&(U.push("previousWorld0"),U.push("previousWorld1"),U.push("previousWorld2"),U.push("previousWorld3"))}function m(U,X){const b=U.morphTargetManager;U&&b&&X.setFloatArray("morphTargetInfluences",b.influences)}function x(U,X){X.bindToEffect(U,"Scene")}function I(U,X,b){X._needUVs=!0,X[b]=!0,U.optimizeUVAllocation&&U.getTextureMatrix().isIdentityAs3x2()?(X[b+"DIRECTUV"]=U.coordinatesIndex+1,X["MAINUV"+(U.coordinatesIndex+1)]=!0):X[b+"DIRECTUV"]=0}function O(U,X,b){const F=U.getTextureMatrix();X.Ib(b+"Matrix",F)}function N(U,X,b){b.BAKED_VERTEX_ANIMATION_TEXTURE&&b.INSTANCES&&U.push("bakedVertexAnimationSettingsInstanced")}function u(U,X,b){var F;if(X&&U&&(U.computeBonesUsingShaders&&X._bonesComputationForcedToCPU&&(U.computeBonesUsingShaders=!1),U.useBones&&U.computeBonesUsingShaders&&U.skeleton)){const E=U.skeleton;if(E.isUsingTextureForMatrices&&X.getUniformIndex("boneTextureWidth")>-1){const b=E.getTransformMatrixTexture(U);X.setTexture("boneSampler",b),X.setFloat("boneTextureWidth",4*(E.bones.length+1))}else{const w=E.getTransformMatrices(U);w&&(X.setMatrices("mBones",w),b&&U.fU().prePassRenderer&&U.fU().prePassRenderer.getIndex(2)&&(b.previousBones[U.uniqueId]||(b.previousBones[U.uniqueId]=w.slice()),X.setMatrices("mPreviousBones",b.previousBones[U.uniqueId]),F=w,b.previousBones[U.uniqueId].set(F)))}}}function i(U,X,b,F,E){let w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];U._bindLight(X,b,F,E,w)}function P(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const w=Math.min(X.lightSources.length,E);for(let Q=0;Q<w;Q++){i(X.lightSources[Q],Q,U,b,"boolean"===typeof F?F:F.SPECULARTERM,X.receiveShadows)}}function f(U,X,b,F){b.NUM_BONE_INFLUENCERS>0&&(F.addCPUSkinningFallback(0,X),U.push("matricesIndices"),U.push("matricesWeights"),b.NUM_BONE_INFLUENCERS>4&&(U.push("matricesIndicesExtra"),U.push("matricesWeightsExtra")))}function j(U,X){(X.INSTANCES||X.THIN_INSTANCES)&&J(U,!!X.PREPASS_VELOCITY),X.INSTANCESCOLOR&&U.push("instanceColor")}function e(U,X){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,E=0;for(let w=0;w<b&&U["LIGHT"+w];w++)w>0&&(E=F+w,X.addFallback(E,"LIGHT"+w)),U.SHADOWS||(U["SHADOW"+w]&&X.addFallback(F,"SHADOW"+w),U["SHADOWPCF"+w]&&X.addFallback(F,"SHADOWPCF"+w),U["SHADOWPCSS"+w]&&X.addFallback(F,"SHADOWPCSS"+w),U["SHADOWPOISSON"+w]&&X.addFallback(F,"SHADOWPOISSON"+w),U["SHADOWESM"+w]&&X.addFallback(F,"SHADOWESM"+w),U["SHADOWCLOSEESM"+w]&&X.addFallback(F,"SHADOWCLOSEESM"+w));return E++}function l(U,X,b,F,E,w,Q){let z=arguments.length>7&&void 0!==arguments[7]&&arguments[7];Q._areMiscDirty&&(Q.LOGARITHMICDEPTH=b,Q.POINTSIZE=F,Q.FOG=E&&function(U,X){return X.fogEnabled&&U.applyFog&&0!==X.fogMode}(U,X),Q.NONUNIFORMSCALING=U.nonUniformScaling,Q.ALPHATEST=w,Q.DECAL_AFTER_DETAIL=z)}function d(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!b._areLightsDirty)return b._needNormals;let Q=0;const z={needNormals:b._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(U.lightsEnabled&&!w)for(const p of X.lightSources)if(k(U,X,p,Q,b,F,z),Q++,Q===E)break;b.SPECULARTERM=z.specularEnabled,b.SHADOWS=z.shadowEnabled;for(let p=Q;p<E;p++)void 0!==b["LIGHT"+p]&&(b["LIGHT"+p]=!1,b["HEMILIGHT"+p]=!1,b["POINTLIGHT"+p]=!1,b["DIRLIGHT"+p]=!1,b["SPOTLIGHT"+p]=!1,b["AREALIGHT"+p]=!1,b["SHADOW"+p]=!1,b["SHADOWCSM"+p]=!1,b["SHADOWCSMDEBUG"+p]=!1,b["SHADOWCSMNUM_CASCADES"+p]=!1,b["SHADOWCSMUSESHADOWMAXZ"+p]=!1,b["SHADOWCSMNOBLEND"+p]=!1,b["SHADOWCSM_RIGHTHANDED"+p]=!1,b["SHADOWPCF"+p]=!1,b["SHADOWPCSS"+p]=!1,b["SHADOWPOISSON"+p]=!1,b["SHADOWESM"+p]=!1,b["SHADOWCLOSEESM"+p]=!1,b["SHADOWCUBE"+p]=!1,b["SHADOWLOWQUALITY"+p]=!1,b["SHADOWMEDIUMQUALITY"+p]=!1);const q=U.getEngine().getCaps();return void 0===b.SHADOWFLOAT&&(z.needRebuild=!0),b.SHADOWFLOAT=z.shadowEnabled&&(q.textureFloatRender&&q.textureFloatLinearFiltering||q.textureHalfFloatRender&&q.textureHalfFloatLinearFiltering),b.LIGHTMAPEXCLUDED=z.lightmapMode,z.needRebuild&&b.rebuild(),z.needNormals}function k(U,X,b,F,E,w,z){switch(z.needNormals=!0,void 0===E["LIGHT"+F]&&(z.needRebuild=!0),E["LIGHT"+F]=!0,E["SPOTLIGHT"+F]=!1,E["HEMILIGHT"+F]=!1,E["POINTLIGHT"+F]=!1,E["DIRLIGHT"+F]=!1,E["AREALIGHT"+F]=!1,b.prepareLightSpecificDefines(E,F),E["LIGHT_FALLOFF_PHYSICAL"+F]=!1,E["LIGHT_FALLOFF_GLTF"+F]=!1,E["LIGHT_FALLOFF_STANDARD"+F]=!1,b.falloffType){case Q.c.FALLOFF_GLTF:E["LIGHT_FALLOFF_GLTF"+F]=!0;break;case Q.c.FALLOFF_PHYSICAL:E["LIGHT_FALLOFF_PHYSICAL"+F]=!0;break;case Q.c.FALLOFF_STANDARD:E["LIGHT_FALLOFF_STANDARD"+F]=!0}if(w&&!b.iS.equalsFloats(0,0,0)&&(z.specularEnabled=!0),E["SHADOW"+F]=!1,E["SHADOWCSM"+F]=!1,E["SHADOWCSMDEBUG"+F]=!1,E["SHADOWCSMNUM_CASCADES"+F]=!1,E["SHADOWCSMUSESHADOWMAXZ"+F]=!1,E["SHADOWCSMNOBLEND"+F]=!1,E["SHADOWCSM_RIGHTHANDED"+F]=!1,E["SHADOWPCF"+F]=!1,E["SHADOWPCSS"+F]=!1,E["SHADOWPOISSON"+F]=!1,E["SHADOWESM"+F]=!1,E["SHADOWCLOSEESM"+F]=!1,E["SHADOWCUBE"+F]=!1,E["SHADOWLOWQUALITY"+F]=!1,E["SHADOWMEDIUMQUALITY"+F]=!1,X&&X.receiveShadows&&U.shadowsEnabled&&b.shadowEnabled){const X=b.getShadowGenerator(U.activeCamera)??b.getShadowGenerator();if(X){const U=X.getShadowMap();U&&U.renderList&&U.renderList.length>0&&(z.shadowEnabled=!0,X.prepareDefines(E,F))}}b.lightmapMode!=Q.c.LIGHTMAP_DEFAULT?(z.lightmapMode=!0,E["LIGHTMAPEXCLUDED"+F]=!0,E["LIGHTMAPNOSPECULAR"+F]=b.lightmapMode==Q.c.LIGHTMAP_SHADOWSONLY):(E["LIGHTMAPEXCLUDED"+F]=!1,E["LIGHTMAPNOSPECULAR"+F]=!1)}function v(U,X,b,F,E){let w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=function(U,X){let b=!1;if(U.activeCamera){const F=X.CAMERA_ORTHOGRAPHIC?1:0,E=X.CAMERA_PERSPECTIVE?1:0,w=1===U.activeCamera.mode?1:0,Q=0===U.activeCamera.mode?1:0;(F^w||E^Q)&&(X.CAMERA_ORTHOGRAPHIC=1===w,X.CAMERA_PERSPECTIVE=1===Q,b=!0)}return b}(U,F);!1!==w&&(q=(0,z.f)(b,U,F)),F.DEPTHPREPASS!==!X.getColorWrite()&&(F.DEPTHPREPASS=!F.DEPTHPREPASS,q=!0),F.INSTANCES!==E&&(F.INSTANCES=E,q=!0),F.THIN_INSTANCES!==Q&&(F.THIN_INSTANCES=Q,q=!0),q&&F.markAsUnprocessed()}function A(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]&&arguments[4],w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Q=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!X._areAttributesDirty&&X._needNormals===X._normals&&X._needUVs===X._uvs)return!1;X._normals=X._needNormals,X._uvs=X._needUVs,X.NORMAL=X._needNormals&&U.isVerticesDataPresent("normal"),X._needNormals&&U.isVerticesDataPresent("tangent")&&(X.TANGENT=!0);for(let z=1;z<=6;++z)X["UV"+z]=!!X._needUVs&&U.isVerticesDataPresent(`uv${1===z?"":z}`);if(b){const b=U.useVertexColors&&U.isVerticesDataPresent("color");X.VERTEXCOLOR=b,X.VERTEXALPHA=U.hasVertexAlpha&&b&&w}return U.isVerticesDataPresent("instanceColor")&&(U.hasInstances||U.hasThinInstances)&&(X.INSTANCESCOLOR=!0),F&&function(U,X){if(U.useBones&&U.computeBonesUsingShaders&&U.skeleton){X.NUM_BONE_INFLUENCERS=U.numBoneInfluencers;const b=void 0!==X.BONETEXTURE;if(U.skeleton.isUsingTextureForMatrices&&b)X.BONETEXTURE=!0;else{X.BonesPerMesh=U.skeleton.bones.length+1,X.BONETEXTURE=!b&&void 0;const F=U.fU().prePassRenderer;if(F&&F.enabled){const b=-1===F.excludedSkinnedMesh.indexOf(U);X.BONES_VELOCITY_ENABLED=b}}}else X.NUM_BONE_INFLUENCERS=0,X.BonesPerMesh=0,void 0!==X.BONETEXTURE&&(X.BONETEXTURE=!1)}(U,X),E&&function(U,X){const b=U.morphTargetManager;b?(X.MORPHTARGETS_UV=b.supportsUVs&&X.UV1,X.MORPHTARGETS_UV2=b.supportsUV2s&&X.UV2,X.MORPHTARGETS_TANGENT=b.supportsTangents&&X.TANGENT,X.MORPHTARGETS_NORMAL=b.supportsNormals&&X.NORMAL,X.MORPHTARGETS_POSITION=b.supportsPositions,X.MORPHTARGETS_COLOR=b.supportsColors,X.MORPHTARGETTEXTURE_HASUVS=b.hasUVs,X.MORPHTARGETTEXTURE_HASUV2S=b.hasUV2s,X.MORPHTARGETTEXTURE_HASTANGENTS=b.hasTangents,X.MORPHTARGETTEXTURE_HASNORMALS=b.hasNormals,X.MORPHTARGETTEXTURE_HASPOSITIONS=b.hasPositions,X.MORPHTARGETTEXTURE_HASCOLORS=b.hasColors,X.NUM_MORPH_INFLUENCERS=b.numMaxInfluencers||b.numInfluencers,X.MORPHTARGETS=X.NUM_MORPH_INFLUENCERS>0,X.MORPHTARGETS_TEXTURE=b.isUsingTextureForTargets):(X.MORPHTARGETS_UV=!1,X.MORPHTARGETS_UV2=!1,X.MORPHTARGETS_TANGENT=!1,X.MORPHTARGETS_NORMAL=!1,X.MORPHTARGETS_POSITION=!1,X.MORPHTARGETS_COLOR=!1,X.MORPHTARGETTEXTURE_HASUVS=!1,X.MORPHTARGETTEXTURE_HASUV2S=!1,X.MORPHTARGETTEXTURE_HASTANGENTS=!1,X.MORPHTARGETTEXTURE_HASNORMALS=!1,X.MORPHTARGETTEXTURE_HASPOSITIONS=!1,X.MORPHTARGETTEXTURE_HAS_COLORS=!1,X.MORPHTARGETS=!1,X.NUM_MORPH_INFLUENCERS=0)}(U,X),Q&&function(U,X){const b=U.bakedVertexAnimationManager;X.BAKED_VERTEX_ANIMATION_TEXTURE=!(!b||!b.isEnabled)}(U,X),!0}function s(U,X){if(U.activeCamera){const b=X.MULTIVIEW;X.MULTIVIEW=null!==U.activeCamera.outputRenderTarget&&U.activeCamera.outputRenderTarget.getViewCount()>1,X.MULTIVIEW!=b&&X.markAsUnprocessed()}}function h(U,X,b){const F=X.ORDER_INDEPENDENT_TRANSPARENCY,E=X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;X.ORDER_INDEPENDENT_TRANSPARENCY=U.useOrderIndependentTransparency&&b,X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!U.getEngine().getCaps().textureFloatLinearFiltering,F===X.ORDER_INDEPENDENT_TRANSPARENCY&&E===X.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||X.markAsUnprocessed()}function B(U,X,b){const F=X.PREPASS;if(!X._arePrePassDirty)return;const E=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(U.prePassRenderer&&U.prePassRenderer.enabled&&b){X.PREPASS=!0,X.SCENE_MRT_COUNT=U.prePassRenderer.mrtCount,X.PREPASS_NORMAL_WORLDSPACE=U.prePassRenderer.generateNormalsInWorldSpace,X.PREPASS_COLOR=!0,X.PREPASS_COLOR_INDEX=0;for(let b=0;b<E.length;b++){const F=U.prePassRenderer.getIndex(E[b].type);-1!==F?(X[E[b].define]=!0,X[E[b].index]=F):X[E[b].define]=!1}}else{X.PREPASS=!1;for(let U=0;U<E.length;U++)X[E[U].define]=!1}X.PREPASS!=F&&(X.markAsUnprocessed(),X.markAsImageProcessingDirty())}function o(U,X,b,F){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];E&&E.push("Light"+U),w||(X.push("vLightData"+U,"vLightDiffuse"+U,"vLightSpecular"+U,"vLightDirection"+U,"vLightWidth"+U,"vLightHeight"+U,"vLightFalloff"+U,"vLightGround"+U,"lightMatrix"+U,"shadowsInfo"+U,"depthValues"+U),b.push("shadowTexture"+U),b.push("depthTexture"+U),X.push("viewFrustumZ"+U,"cascadeBlendFactor"+U,"lightSizeUVCorrection"+U,"depthCorrection"+U,"penumbraDarkness"+U,"frustumLengths"+U),F&&(b.push("projectionLightTexture"+U),X.push("textureProjectionMatrix"+U)),Q&&b.push("iesLightTexture"+U))}function y(U,X,b){let F,E,w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(U.uniformsNames){const Q=U;F=Q.uniformsNames,E=Q.uniformBuffersNames,X=Q.samplers,b=Q.defines,w=Q.maxSimultaneousLights||0}else F=U,X||(X=[]);for(let Q=0;Q<w&&b["LIGHT"+Q];Q++)o(Q,F,X,b["PROJECTEDLIGHTTEXTURE"+Q],E,!1,b["IESLIGHTTEXTURE"+Q]);b.NUM_MORPH_INFLUENCERS&&(F.push("morphTargetInfluences"),F.push("morphTargetCount")),b.BAKED_VERTEX_ANIMATION_TEXTURE&&(F.push("bakedVertexAnimationSettings"),F.push("bakedVertexAnimationTextureSizeInverted"),F.push("bakedVertexAnimationTime"),X.push("bakedVertexAnimationTexture"))}},11922:(U,X,b)=>{b.d(X,{b:()=>w});var F=b(11593),E=b(11928);class w extends E.e{constructor(U,X){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(U,X,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new F.Matrix,this._storeEffectOnSubMeshes=b}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(U,X){return!!U&&(!this._storeEffectOnSubMeshes||(!U.ab||0===U.ab.length||this.isReadyForSubMesh(U,U.ab[0],X)))}_isReadyForSubMesh(U){const X=U.materialDefines;return!(this.checkReadyOnEveryCall||!U.effect||!X||X._renderId!==this.fU().getRenderId())}bindOnlyWorldMatrix(U){this._activeEffect.setMatrix("world",U)}bindOnlyNormalMatrix(U){this._activeEffect.setMatrix("normalMatrix",U)}bind(U,X){X&&this.bindForSubMesh(U,X,X.ab[0])}_afterBind(U){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0;super._afterBind(U,X,b),this.fU()._cachedEffect=X,b?b._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return b._drawWrapper._forceRebindOnNextCall||U.isCachedMaterialInvalid(this,X,F)}dispose(U,X,b){this._activeEffect=void 0,super.dispose(U,X,b)}}},11962:(U,X,b)=>{b.d(X,{c:()=>z,g:()=>q});var F=b(11576),E=b(11593),w=b(11583);class Q{static extractMinAndMaxIndexed(U,X,b,F,E,w){for(let Q=b;Q<b+F;Q++){const b=3*X[Q],F=U[b],z=U[b+1],q=U[b+2];E.minimizeInPlaceFromFloats(F,z,q),w.maximizeInPlaceFromFloats(F,z,q)}}static extractMinAndMax(U,X,b,F,E,w){for(let Q=X,z=X*F;Q<X+b;Q++,z+=F){const X=U[z],b=U[z+1],F=U[z+2];E.minimizeInPlaceFromFloats(X,b,F),w.maximizeInPlaceFromFloats(X,b,F)}}}function z(U,X,b,F){let w=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const z=new E.JX(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new E.JX(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return Q.extractMinAndMaxIndexed(U,X,b,F,z,q),w&&(z.x-=z.x*w.x+w.y,z.y-=z.y*w.x+w.y,z.z-=z.z*w.x+w.y,q.x+=q.x*w.x+w.y,q.y+=q.y*w.x+w.y,q.z+=q.z*w.x+w.y),{minimum:z,maximum:q}}function q(U,X,b){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,w=arguments.length>4?arguments[4]:void 0;const z=new E.JX(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new E.JX(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return w||(w=3),Q.extractMinAndMax(U,X,b,w,z,q),F&&(z.x-=z.x*F.x+F.y,z.y-=z.y*F.x+F.y,z.z-=z.z*F.x+F.y,q.x+=q.x*F.x+F.y,q.y+=q.y*F.x+F.y,q.z+=q.z*F.x+F.y),{minimum:z,maximum:q}}(0,F.c)([w.c.filter((function(){for(var U=arguments.length,X=new Array(U),b=0;b<U;b++)X[b]=arguments[b];let[F,E]=X;return!Array.isArray(F)&&!Array.isArray(E)}))],Q,"extractMinAndMaxIndexed",null),(0,F.c)([w.c.filter((function(){for(var U=arguments.length,X=new Array(U),b=0;b<U;b++)X[b]=arguments[b];let[F]=X;return!Array.isArray(F)}))],Q,"extractMinAndMax",null)},11933:(U,X,b)=>{b.d(X,{d:()=>q});var F=b(11664),E=b(11940),w=b(11949),Q=b(11962),z=b(11707);class q{get materialDefines(){var U;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(U=this._getDrawWrapper())||void 0===U?void 0:U.defines}set materialDefines(U){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=U}_getDrawWrapper(U){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];U=U??this._engine.currentRenderPassId;let b=this._drawWrappers[U];return!b&&X&&(this._drawWrappers[U]=b=new z.d(this._mesh.fU().getEngine())),b}_removeDrawWrapper(U){let X=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var b;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(b=this._drawWrappers[U])||void 0===b||b.dispose(X));this._drawWrappers[U]=void 0}get effect(){var U;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(U=this._getDrawWrapper())||void 0===U?void 0:U.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(U){this._mainDrawWrapperOverride=U}setEffect(U){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0,F=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const E=this._drawWrapper;E.setEffect(U,X,F),void 0!==b&&(E.materialContext=b),U||(E.defines=null,E.materialContext=void 0)}resetDrawCache(U){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==U)return void this._removeDrawWrapper(U,!0,X);for(const U of this._drawWrappers)null===U||void 0===U||U.dispose(X)}this._drawWrappers=[]}static AddToMesh(U,X,b,F,E,w,Q){return new q(U,X,b,F,E,w,Q,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(U,X,b,F,E,w,Q){let z=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=U,this.verticesStart=X,this.verticesCount=b,this.indexStart=F,this.indexCount=E,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=w,this._renderingMesh=Q||w,q&&w.ab.push(this),this._engine=this._mesh.fU().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=w.ab.length-1,z&&(this.refreshBoundingInfo(),w.Ob(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(U){return this._boundingInfo=U,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const U=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return U||this._renderingMesh}yU(){let U=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const X=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!X)return U&&this._mesh.fU()._hasDefaultMaterial?this._mesh.fU().defaultMaterial:null;if(this._isMultiMaterial(X)){const U=X.getSubMaterial(this.materialIndex);return this._currentMaterial!==U&&(this._currentMaterial=U,this.resetDrawCache()),U}return X}_isMultiMaterial(U){return void 0!==U.getSubMaterial}refreshBoundingInfo(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Nb)return this;if(U||(U=this._renderingMesh.getVerticesData(F.h.PositionKind)),!U)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const X=this._renderingMesh.ub();let b;if(0===this.indexStart&&this.indexCount===X.length){const U=this._renderingMesh.getBoundingInfo();b={minimum:U.minimum.clone(),maximum:U.maximum.clone()}}else b=(0,Q.c)(U,X,this.indexStart,this.indexCount,this._renderingMesh.Nb.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(b.minimum,b.maximum):this._boundingInfo=new w.d(b.minimum,b.maximum),this}_checkCollision(U){return this.getBoundingInfo()._checkCollision(U)}updateBoundingInfo(U){let X=this.getBoundingInfo();return X||(this.refreshBoundingInfo(),X=this.getBoundingInfo()),X&&X.update(U),this}isInFrustum(U){const X=this.getBoundingInfo();return!!X&&X.isInFrustum(U,this._mesh.PR)}isCompletelyInFrustum(U){const X=this.getBoundingInfo();return!!X&&X.isCompletelyInFrustum(U)}render(U){return this._renderingMesh.render(this,U,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(U,X){if(!this._linesIndexBuffer){const b=6*Math.floor(this.indexCount/3),F=this.verticesStart+this.verticesCount>65535?new Uint32Array(b):new Uint16Array(b);let E=0;if(0===U.length)for(let U=this.indexStart;U<this.indexStart+this.indexCount;U+=3)F[E++]=U,F[E++]=U+1,F[E++]=U+1,F[E++]=U+2,F[E++]=U+2,F[E++]=U;else for(let X=this.indexStart;X<this.indexStart+this.indexCount;X+=3)F[E++]=U[X],F[E++]=U[X+1],F[E++]=U[X+1],F[E++]=U[X+2],F[E++]=U[X+2],F[E++]=U[X];this._linesIndexBuffer=X.createIndexBuffer(F),this._linesIndexCount=F.length}return this._linesIndexBuffer}canIntersects(U){const X=this.getBoundingInfo();return!!X&&U.intersectsBox(X.boundingBox)}intersects(U,X,b,F,E){const w=this.yU();if(!w)return null;let Q=3,z=!1;switch(w.fillMode){case 3:case 5:case 6:case 8:return null;case 7:Q=1,z=!0}return 4===w.fillMode?b.length?this._intersectLines(U,X,b,this._mesh.intersectionThreshold,F):this._intersectUnIndexedLines(U,X,b,this._mesh.intersectionThreshold,F):!b.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(U,X,b,F,E):this._intersectTriangles(U,X,b,Q,z,F,E)}_intersectLines(U,X,b,F,w){let Q=null;for(let z=this.indexStart;z<this.indexStart+this.indexCount;z+=2){const q=X[b[z]],p=X[b[z+1]],S=U.intersectionSegment(q,p,F);if(!(S<0)&&((w||!Q||S<Q.distance)&&(Q=new E.c(null,null,S),Q.faceId=z/2,w)))break}return Q}_intersectUnIndexedLines(U,X,b,F,w){let Q=null;for(let z=this.verticesStart;z<this.verticesStart+this.verticesCount;z+=2){const b=X[z],q=X[z+1],p=U.intersectionSegment(b,q,F);if(!(p<0)&&((w||!Q||p<Q.distance)&&(Q=new E.c(null,null,p),Q.faceId=z/2,w)))break}return Q}_intersectTriangles(U,X,b,F,E,w,Q){let z=null,q=-1;for(let p=this.indexStart;p<this.indexStart+this.indexCount-(3-F);p+=F){q++;const F=b[p],S=b[p+1],R=b[p+2];if(E&&4294967295===R){p+=2;continue}const n=X[F],a=X[S],J=X[R];if(!n||!a||!J)continue;if(Q&&!Q(n,a,J,U,F,S,R))continue;const m=U.intersectsTriangle(n,a,J);if(m){if(m.distance<0)continue;if((w||!z||m.distance<z.distance)&&(z=m,z.faceId=q,w))break}}return z}_intersectUnIndexedTriangles(U,X,b,F,E){let w=null;for(let Q=this.verticesStart;Q<this.verticesStart+this.verticesCount;Q+=3){const b=X[Q],z=X[Q+1],q=X[Q+2];if(E&&!E(b,z,q,U,-1,-1,-1))continue;const p=U.intersectsTriangle(b,z,q);if(p){if(p.distance<0)continue;if((F||!w||p.distance<w.distance)&&(w=p,w.faceId=Q/3,F))break}}return w}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(U,X){const b=new q(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,U,X,!1);if(!this.IsGlobal){const U=this.getBoundingInfo();if(!U)return b;b._boundingInfo=new w.d(U.minimum,U.maximum)}return b}dispose(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.fU().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const X=this._mesh.ab.indexOf(this);this._mesh.ab.splice(X,1),this.resetDrawCache(void 0,U)}getClassName(){return"SubMesh"}static CreateFromIndices(U,X,b,F,E){let w=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Q=Number.MAX_VALUE,z=-Number.MAX_VALUE;const p=(E||F).ub();for(let q=X;q<X+b;q++){const U=p[q];U<Q&&(Q=U),U>z&&(z=U)}return new q(U,Q,z-Q+1,X,b,F,E,w)}}}}]);