"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[24],{12070:(Z,h,V)=>{V.d(h,{d:()=>v});class v{constructor(Z,h,V){this.bu=Z,this.bv=h,this.distance=V,this.faceId=0,this.subMeshId=0}}},12080:(Z,h,V)=>{V.d(h,{b:()=>K});var v=V(11739),A=V(11729),H=V(11737);class K{constructor(Z,h,V){this.vectors=(0,v.d)(8,A.Ch.Zero),this.center=A.Ch.Zero(),this.centerWorld=A.Ch.Zero(),this.extendSize=A.Ch.Zero(),this.extendSizeWorld=A.Ch.Zero(),this.directions=(0,v.d)(3,A.Ch.Zero),this.vectorsWorld=(0,v.d)(8,A.Ch.Zero),this.minimumWorld=A.Ch.Zero(),this.maximumWorld=A.Ch.Zero(),this.minimum=A.Ch.Zero(),this.maximum=A.Ch.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(Z,h,V)}reConstruct(Z,h,V){const v=Z.x,H=Z.y,K=Z.z,d=h.x,a=h.y,n=h.z,x=this.vectors;this.minimum.IV(v,H,K),this.maximum.IV(d,a,n),x[0].IV(v,H,K),x[1].IV(d,a,n),x[2].IV(d,H,K),x[3].IV(v,a,K),x[4].IV(v,H,n),x[5].IV(d,a,K),x[6].IV(v,a,n),x[7].IV(d,H,n),h.addToRef(Z,this.center).scaleInPlace(.5),h.subtractToRef(Z,this.extendSize).scaleInPlace(.5),this._worldMatrix=V||A.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(Z){const h=K._TmpVector3,V=this.maximum.subtractToRef(this.minimum,h[0]),v=V.length();V.normalizeFromLength(v);const A=v*Z,H=V.scaleInPlace(.5*A),d=this.center.subtractToRef(H,h[1]),a=this.center.addToRef(H,h[2]);return this.reConstruct(d,a,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){const h=this.minimumWorld,V=this.maximumWorld,v=this.directions,H=this.vectorsWorld,K=this.vectors;if(Z.isIdentity()){h.v(this.minimum),V.v(this.maximum);for(let Z=0;Z<8;++Z)H[Z].v(K[Z]);this.extendSizeWorld.v(this.extendSize),this.centerWorld.v(this.center)}else{h.vd(Number.MAX_VALUE),V.vd(-Number.MAX_VALUE);for(let v=0;v<8;++v){const d=H[v];A.Ch.TransformCoordinatesToRef(K[v],Z,d),h.minimizeInPlace(d),V.maximizeInPlace(d)}V.subtractToRef(h,this.extendSizeWorld).scaleInPlace(.5),V.addToRef(h,this.centerWorld).scaleInPlace(.5)}A.Ch.FromArrayToRef(Z.m,0,v[0]),A.Ch.FromArrayToRef(Z.m,4,v[1]),A.Ch.FromArrayToRef(Z.m,8,v[2]),this._worldMatrix=Z}isInFrustum(Z){return K.IsInFrustum(this.vectorsWorld,Z)}isCompletelyInFrustum(Z){return K.IsCompletelyInFrustum(this.vectorsWorld,Z)}intersectsPoint(Z){const h=this.minimumWorld,V=this.maximumWorld,v=h.x,A=h.y,K=h.z,d=V.x,a=V.y,n=V.z,x=Z.x,N=Z.y,D=Z.z,k=-H.c;return!(d-x<k||k>x-v)&&(!(a-N<k||k>N-A)&&!(n-D<k||k>D-K))}intersectsSphere(Z){return K.IntersectsSphere(this.minimumWorld,this.maximumWorld,Z.centerWorld,Z.radiusWorld)}intersectsMinMax(Z,h){const V=this.minimumWorld,v=this.maximumWorld,A=V.x,H=V.y,K=V.z,d=v.x,a=v.y,n=v.z,x=Z.x,N=Z.y,D=Z.z,k=h.x,u=h.y,F=h.z;return!(d<x||A>k)&&(!(a<N||H>u)&&!(n<D||K>F))}dispose(){var Z,h;null===(Z=this._drawWrapperFront)||void 0===Z||Z.dispose(),null===(h=this._drawWrapperBack)||void 0===h||h.dispose()}static Intersects(Z,h){return Z.intersectsMinMax(h.minimumWorld,h.maximumWorld)}static IntersectsSphere(Z,h,V,v){const H=K._TmpVector3[0];A.Ch.ClampToRef(V,Z,h,H);return A.Ch.DistanceSquared(V,H)<=v*v}static IsCompletelyInFrustum(Z,h){for(let V=0;V<6;++V){const v=h[V];for(let h=0;h<8;++h)if(v.dotCoordinate(Z[h])<0)return!1}return!0}static IsInFrustum(Z,h){for(let V=0;V<6;++V){let v=!0;const A=h[V];for(let h=0;h<8;++h)if(A.dotCoordinate(Z[h])>=0){v=!1;break}if(v)return!1}return!0}}K._TmpVector3=(0,v.d)(3,A.Ch.Zero)},12074:(Z,h,V)=>{V.d(h,{c:()=>N});var v=V(11739),A=V(11729),H=V(12080),K=V(12085);const d={min:0,max:0},a={min:0,max:0},n=(Z,h,V)=>{const v=A.Ch.Dot(h.centerWorld,Z),H=Math.abs(A.Ch.Dot(h.directions[0],Z))*h.extendSize.x+Math.abs(A.Ch.Dot(h.directions[1],Z))*h.extendSize.y+Math.abs(A.Ch.Dot(h.directions[2],Z))*h.extendSize.z;V.min=v-H,V.max=v+H},x=(Z,h,V)=>(n(Z,h,d),n(Z,V,a),!(d.min>a.max||a.min>d.max));class N{constructor(Z,h,V){this._isLocked=!1,this.boundingBox=new H.b(Z,h,V),this.boundingSphere=new K.b(Z,h,V)}reConstruct(Z,h,V){this.boundingBox.reConstruct(Z,h,V),this.boundingSphere.reConstruct(Z,h,V)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(Z){this._isLocked=Z}update(Z){this._isLocked||(this.boundingBox._update(Z),this.boundingSphere._update(Z))}centerOn(Z,h){const V=N._TmpVector3[0].v(Z).EN(h),v=N._TmpVector3[1].v(Z).addInPlace(h);return this.boundingBox.reConstruct(V,v,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(V,v,this.boundingBox.getWorldMatrix()),this}encapsulate(Z){const h=A.Ch.Minimize(this.minimum,Z),V=A.Ch.Maximize(this.maximum,Z);return this.reConstruct(h,V,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(Z){const h=A.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(h);const V=A.TmpVectors.Ch[0];return A.Ch.TransformCoordinatesToRef(Z.boundingBox.minimumWorld,h,V),this.encapsulate(V),A.Ch.TransformCoordinatesToRef(Z.boundingBox.maximumWorld,h,V),this.encapsulate(V),this}scale(Z){return this.boundingBox.scale(Z),this.boundingSphere.scale(Z),this}isInFrustum(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===h||3===h)&&this.boundingSphere.isCenterInFrustum(Z))return!0;if(!this.boundingSphere.isInFrustum(Z))return!1;return!(1!==h&&3!==h)||this.boundingBox.isInFrustum(Z)}get diagonalLength(){const Z=this.boundingBox;return Z.maximumWorld.subtractToRef(Z.minimumWorld,N._TmpVector3[0]).length()}isCompletelyInFrustum(Z){return this.boundingBox.isCompletelyInFrustum(Z)}_checkCollision(Z){return Z._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(Z){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(Z)&&!!this.boundingBox.intersectsPoint(Z))}intersects(Z,h){if(!K.b.Intersects(this.boundingSphere,Z.boundingSphere))return!1;if(!H.b.Intersects(this.boundingBox,Z.boundingBox))return!1;if(!h)return!0;const V=this.boundingBox,v=Z.boundingBox;return!!x(V.directions[0],V,v)&&(!!x(V.directions[1],V,v)&&(!!x(V.directions[2],V,v)&&(!!x(v.directions[0],V,v)&&(!!x(v.directions[1],V,v)&&(!!x(v.directions[2],V,v)&&(!!x(A.Ch.Cross(V.directions[0],v.directions[0]),V,v)&&(!!x(A.Ch.Cross(V.directions[0],v.directions[1]),V,v)&&(!!x(A.Ch.Cross(V.directions[0],v.directions[2]),V,v)&&(!!x(A.Ch.Cross(V.directions[1],v.directions[0]),V,v)&&(!!x(A.Ch.Cross(V.directions[1],v.directions[1]),V,v)&&(!!x(A.Ch.Cross(V.directions[1],v.directions[2]),V,v)&&(!!x(A.Ch.Cross(V.directions[2],v.directions[0]),V,v)&&(!!x(A.Ch.Cross(V.directions[2],v.directions[1]),V,v)&&!!x(A.Ch.Cross(V.directions[2],v.directions[2]),V,v))))))))))))))}}N._TmpVector3=(0,v.d)(2,A.Ch.Zero)},12085:(Z,h,V)=>{V.d(h,{b:()=>H});var v=V(11739),A=V(11729);class H{constructor(Z,h,V){this.center=A.Ch.Zero(),this.centerWorld=A.Ch.Zero(),this.minimum=A.Ch.Zero(),this.maximum=A.Ch.Zero(),this.reConstruct(Z,h,V)}reConstruct(Z,h,V){this.minimum.v(Z),this.maximum.v(h);const v=A.Ch.Distance(Z,h);h.addToRef(Z,this.center).scaleInPlace(.5),this.radius=.5*v,this._update(V||A.Matrix.IdentityReadOnly)}scale(Z){const h=this.radius*Z,V=H._TmpVector3,v=V[0].vd(h),A=this.center.subtractToRef(v,V[1]),K=this.center.addToRef(v,V[2]);return this.reConstruct(A,K,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){if(Z.isIdentity())this.centerWorld.v(this.center),this.radiusWorld=this.radius;else{A.Ch.TransformCoordinatesToRef(this.center,Z,this.centerWorld);const h=H._TmpVector3[0];A.Ch.TransformNormalFromFloatsToRef(1,1,1,Z,h),this.radiusWorld=Math.max(Math.abs(h.x),Math.abs(h.y),Math.abs(h.z))*this.radius}}isInFrustum(Z){const h=this.centerWorld,V=this.radiusWorld;for(let v=0;v<6;v++)if(Z[v].dotCoordinate(h)<=-V)return!1;return!0}isCenterInFrustum(Z){const h=this.centerWorld;for(let V=0;V<6;V++)if(Z[V].dotCoordinate(h)<0)return!1;return!0}intersectsPoint(Z){const h=A.Ch.DistanceSquared(this.centerWorld,Z);return!(this.radiusWorld*this.radiusWorld<h)}static Intersects(Z,h){const V=A.Ch.DistanceSquared(Z.centerWorld,h.centerWorld),v=Z.radiusWorld+h.radiusWorld;return!(v*v<V)}static CreateFromCenterAndRadius(Z,h,V){this._TmpVector3[0].v(Z),this._TmpVector3[1].IV(0,0,h),this._TmpVector3[2].v(Z),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].EN(this._TmpVector3[1]);const v=new H(this._TmpVector3[0],this._TmpVector3[2]);return v._worldMatrix=V||A.Matrix.Identity(),v}}H._TmpVector3=(0,v.d)(3,A.Ch.Zero)},12099:(Z,h,V)=>{function v(Z){-1===Z.indexOf("vClipPlane")&&Z.push("vClipPlane"),-1===Z.indexOf("vClipPlane2")&&Z.push("vClipPlane2"),-1===Z.indexOf("vClipPlane3")&&Z.push("vClipPlane3"),-1===Z.indexOf("vClipPlane4")&&Z.push("vClipPlane4"),-1===Z.indexOf("vClipPlane5")&&Z.push("vClipPlane5"),-1===Z.indexOf("vClipPlane6")&&Z.push("vClipPlane6")}function A(Z,h,V){const v=!!(Z.clipPlane??h.clipPlane),A=!!(Z.clipPlane2??h.clipPlane2),H=!!(Z.clipPlane3??h.clipPlane3),K=!!(Z.clipPlane4??h.clipPlane4),d=!!(Z.clipPlane5??h.clipPlane5),a=!!(Z.clipPlane6??h.clipPlane6);v&&V.push("#define CLIPPLANE"),A&&V.push("#define CLIPPLANE2"),H&&V.push("#define CLIPPLANE3"),K&&V.push("#define CLIPPLANE4"),d&&V.push("#define CLIPPLANE5"),a&&V.push("#define CLIPPLANE6")}function H(Z,h,V){let v=!1;const A=!!(Z.clipPlane??h.clipPlane),H=!!(Z.clipPlane2??h.clipPlane2),K=!!(Z.clipPlane3??h.clipPlane3),d=!!(Z.clipPlane4??h.clipPlane4),a=!!(Z.clipPlane5??h.clipPlane5),n=!!(Z.clipPlane6??h.clipPlane6);return V.CLIPPLANE!==A&&(V.CLIPPLANE=A,v=!0),V.CLIPPLANE2!==H&&(V.CLIPPLANE2=H,v=!0),V.CLIPPLANE3!==K&&(V.CLIPPLANE3=K,v=!0),V.CLIPPLANE4!==d&&(V.CLIPPLANE4=d,v=!0),V.CLIPPLANE5!==a&&(V.CLIPPLANE5=a,v=!0),V.CLIPPLANE6!==n&&(V.CLIPPLANE6=n,v=!0),v}function K(Z,h,V){let v=h.clipPlane??V.clipPlane;d(Z,"vClipPlane",v),v=h.clipPlane2??V.clipPlane2,d(Z,"vClipPlane2",v),v=h.clipPlane3??V.clipPlane3,d(Z,"vClipPlane3",v),v=h.clipPlane4??V.clipPlane4,d(Z,"vClipPlane4",v),v=h.clipPlane5??V.clipPlane5,d(Z,"vClipPlane5",v),v=h.clipPlane6??V.clipPlane6,d(Z,"vClipPlane6",v)}function d(Z,h,V){V&&Z.setFloat4(h,V.normal.x,V.normal.y,V.normal.z,V.d)}V.d(h,{c:()=>v,e:()=>K,h:()=>H,j:()=>A})},12050:(Z,h,V)=>{V.d(h,{c:()=>v});class v{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(Z,h){this._defines[Z]||(Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z),this._defines[Z]=new Array),this._defines[Z].push(h)}addCPUSkinningFallback(Z,h){this._mesh=h,Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(Z,h){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,Z=Z.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),h._bonesComputationForcedToCPU=!0;const V=this._mesh.CZ();for(let Z=0;Z<V.meshes.length;Z++){const v=V.meshes[Z];if(v.material){if(v.computeBonesUsingShaders&&0!==v.numBoneInfluencers)if(v.material.getEffect()===h)v.computeBonesUsingShaders=!1;else if(v.zh)for(const Z of v.zh){if(Z.effect===h){v.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&v.computeBonesUsingShaders&&v.numBoneInfluencers>0&&(v.computeBonesUsingShaders=!1)}}else{const h=this._defines[this._currentRank];if(h)for(let V=0;V<h.length;V++)Z=Z.replace("#define "+h[V],"");this._currentRank++}return Z}}},12062:(Z,h,V)=>{V.d(h,{b:()=>b});var v=V(11720),A=V(11723),H=V(11564),K=V(11566),d=V(11599),a=V(12064),n=V(12003),x=V(11580),N=V(11790),D=V(11860),k=V(11769);class u{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(Z){this._func=Z}get funcRef(){return this._funcRef}set funcRef(Z){this._funcRef=Z}get funcMask(){return this._funcMask}set funcMask(Z){this._funcMask=Z}get opStencilFail(){return this._opStencilFail}set opStencilFail(Z){this._opStencilFail=Z}get opDepthFail(){return this._opDepthFail}set opDepthFail(Z){this._opDepthFail=Z}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(Z){this._opStencilDepthPass=Z}get mask(){return this._mask}set mask(Z){this._mask=Z}get enabled(){return this._enabled}set enabled(Z){this._enabled=Z}getClassName(){return"MaterialStencilState"}copyTo(Z){k.b.Clone((()=>Z),this)}serialize(){return k.b.Serialize(this)}parse(Z,h,V){k.b.Parse((()=>this),Z,h,V)}}(0,v.b)([(0,A.I)()],u.prototype,"func",null),(0,v.b)([(0,A.I)()],u.prototype,"funcRef",null),(0,v.b)([(0,A.I)()],u.prototype,"funcMask",null),(0,v.b)([(0,A.I)()],u.prototype,"opStencilFail",null),(0,v.b)([(0,A.I)()],u.prototype,"opDepthFail",null),(0,v.b)([(0,A.I)()],u.prototype,"opStencilDepthPass",null),(0,v.b)([(0,A.I)()],u.prototype,"mask",null),(0,v.b)([(0,A.I)()],u.prototype,"enabled",null);var F=V(12096);class b{get _supportGlowLayer(){return!1}set _glowModeEnabled(Z){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(Z){if(this._alpha===Z)return;const h=this._alpha;this._alpha=Z,1!==h&&1!==Z||this.Vx(b.MiscDirtyFlag+b.PrePassDirtyFlag)}get alpha(){return this._alpha}set Gh(Z){this._backFaceCulling!==Z&&(this._backFaceCulling=Z,this.Vx(b.TextureDirtyFlag))}get Gh(){return this._backFaceCulling}set cullBackFaces(Z){this._cullBackFaces!==Z&&(this._cullBackFaces=Z,this.Vx(b.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(Z){this._blockDirtyMechanism!==Z&&(this._blockDirtyMechanism=Z,Z||this.dD())}atomicMaterialsUpdate(Z){this.blockDirtyMechanism=!0;try{Z(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(Z){this._onDisposeObserver&&this.jh.remove(this._onDisposeObserver),this._onDisposeObserver=this.jh.add(Z)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new K.b),this._onBindObservable}set onBind(Z){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(Z)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new K.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new K.b),this._onEffectCreatedObservable}set alphaMode(Z){this._alphaMode!==Z&&(this._alphaMode=Z,this.Vx(b.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(Z){this._needDepthPrePass!==Z&&(this._needDepthPrePass=Z,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(Z){this._fogEnabled!==Z&&(this._fogEnabled=Z,this.Vx(b.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case b.WireFrameFillMode:case b.LineListDrawMode:case b.LineLoopDrawMode:case b.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(Z){this.fillMode=Z?b.WireFrameFillMode:b.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case b.PointFillMode:case b.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(Z){this.fillMode=Z?b.PointFillMode:b.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(Z){this._fillMode!==Z&&(this._fillMode=Z,this.Vx(b.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(Z){const h=this.CZ().getEngine().getCaps().fragmentDepthSupported;Z&&!h&&x.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=Z&&h,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(Z){this._drawWrapper=Z}constructor(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.jh=new K.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new u,this._useUBO=!1,this._fillMode=b.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=Z;const A=h||d.b.LastCreatedScene;A&&(this._scene=A,this._dirtyCallbacks={},this._forceGLSL=v,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=Z||H.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new D.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new n.c(this._scene.getEngine(),void 0,void 0,Z),this._useUBO=this.CZ().getEngine().supportsUniformBuffers,this._createUniformBuffer(),V||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),b.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var Z;const h=this.CZ().getEngine();null===(Z=this._uniformBuffer)||void 0===Z||Z.dispose(),h.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new n.c(h,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new n.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(Z){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.dD(),this.checkReadyOnlyOnce=!0}unfreeze(){this.dD(),this.checkReadyOnlyOnce=!1}isReady(Z,h){return!0}isReadyForSubMesh(Z,h,V){const v=h.materialDefines;return!!v&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=v,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}CZ(){return this._scene}_getEffectiveOrientation(Z){return null!==this.sideOrientation?this.sideOrientation:Z.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(Z){this._transparencyMode!==Z&&(this._transparencyMode=Z,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===b.MATERIAL_ALPHABLEND||this._transparencyMode===b.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===b.MATERIAL_ALPHATEST||this._transparencyMode===b.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===b.MATERIAL_OPAQUE||this._transparencyMode===b.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsBlend:Z.visibility<1||!this._disableAlphaBlending&&(Z.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(Z)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}dD(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=this.CZ().meshes;for(const V of h)if(V.zh)for(const h of V.zh)if(h.eZ()===this)for(const V of h._drawWrappers)V&&this._materialContext===V.materialContext&&(V._wasPreviouslyReady=!1,V._wasPreviouslyUsingInstances=null,V._forceRebindOnNextCall=Z);Z&&this.Vx(b.AllDirtyFlag)}_preBind(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const V=this._scene.getEngine(),v=(null==h?this.sideOrientation:h)===b.ClockWiseSideOrientation;return V.enableEffect(Z||this._getDrawWrapper()),V.setState(this.Gh,this.zOffset,!1,v,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),v}bind(Z,h){}buildUniformLayout(){const Z=this._uniformBuffer;this._eventInfo.ubo=Z,this._callbackPluginEventGeneric(8,this._eventInfo),Z.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(Z,h,V){const v=V._drawWrapper;this._eventInfo.subMesh=V,this._callbackPluginEventBindForSubMesh(this._eventInfo),v._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(Z){}bindView(Z){this._useUBO?this._needToBindSceneUbo=!0:Z.setMatrix("view",this.CZ().getViewMatrix())}bindViewProjection(Z){this._useUBO?this._needToBindSceneUbo=!0:(Z.setMatrix("viewProjection",this.CZ().getTransformMatrix()),Z.setMatrix("projection",this.CZ().getProjectionMatrix()))}bindEyePosition(Z,h){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(Z,h)}_afterBind(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&h&&(this._needToBindSceneUbo=!1,(0,F.p)(h,this.CZ().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=Z?Z.visibility:1,this._onBindObservable&&Z&&this._onBindObservable.notifyObservers(Z),this.disableDepthWrite){const Z=this._scene.getEngine();this._cachedDepthWriteState=Z.getDepthWrite(),Z.setDepthWrite(!1)}if(this.disableColorWrite){const Z=this._scene.getEngine();this._cachedColorWriteState=Z.getColorWrite(),Z.setColorWrite(!1)}if(0!==this.depthFunction){const Z=this._scene.getEngine();this._cachedDepthFunctionState=Z.getDepthFunction()||0,Z.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(Z){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=Z,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(Z){return null}_clonePlugins(Z,h){const V={};if(this._serializePlugins(V),b._ParsePlugins(V,Z,this._scene,h),this.pluginManager)for(const v of this.pluginManager._plugins){const h=Z.pluginManager.getPlugin(v.name);h&&v.copyTo(h)}}getBindedMeshes(){if(this.meshMap){const Z=[];for(const h in this.meshMap){const V=this.meshMap[h];V&&Z.push(V)}return Z}return this._scene.meshes.filter((Z=>Z.material===this))}forceCompilation(Z,h,V,v){const A={clipPlane:!1,useInstances:!1,...V},H=this.CZ(),K=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const d=()=>{if(!this._scene||!this._scene.getEngine())return;const V=H.clipPlane;if(A.clipPlane&&(H.clipPlane=new N.c(0,0,0,1)),this._storeEffectOnSubMeshes){let V=!0,H=null;if(Z.zh){const h=new a.d(0,0,0,0,0,Z,void 0,!1,!1);h.materialDefines&&(h.materialDefines._renderId=-1),this.isReadyForSubMesh(Z,h,A.useInstances)||(h.effect&&h.effect.getCompilationError()&&h.effect.allFallbacksProcessed()?H=h.effect.getCompilationError():(V=!1,setTimeout(d,16)))}V&&(this.allowShaderHotSwapping=K,H&&v&&v(H),h&&h(this))}else this.isReady()?(this.allowShaderHotSwapping=K,h&&h(this)):setTimeout(d,16);A.clipPlane&&(H.clipPlane=V)};d()}async forceCompilationAsync(Z,h){return await new Promise(((V,v)=>{this.forceCompilation(Z,(()=>{V()}),h,(Z=>{v(Z)}))}))}Vx(Z){this.CZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(b._DirtyCallbackArray.length=0,Z&b.ImageProcessingDirtyFlag&&b._DirtyCallbackArray.push(b._ImageProcessingDirtyCallBack),Z&b.TextureDirtyFlag&&b._DirtyCallbackArray.push(b._TextureDirtyCallBack),Z&b.LightDirtyFlag&&b._DirtyCallbackArray.push(b._LightsDirtyCallBack),Z&b.FresnelDirtyFlag&&b._DirtyCallbackArray.push(b._FresnelDirtyCallBack),Z&b.AttributesDirtyFlag&&b._DirtyCallbackArray.push(b._AttributeDirtyCallBack),Z&b.MiscDirtyFlag&&b._DirtyCallbackArray.push(b._MiscDirtyCallBack),Z&b.PrePassDirtyFlag&&b._DirtyCallbackArray.push(b._PrePassDirtyCallBack),b._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(b._RunDirtyCallBacks),this.CZ().resetCachedMaterial())}resetDrawCache(){const Z=this.CZ().meshes;for(const h of Z)if(h.zh)for(const Z of h.zh)Z.eZ()===this&&Z.resetDrawCache()}_markAllSubMeshesAsDirty(Z){const h=this.CZ();if(h.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const V=h.meshes;for(const v of V)if(v.zh)for(const V of v.zh){if((V.eZ()||(h._hasDefaultMaterial?h.defaultMaterial:null))===this)for(const h of V._drawWrappers)h&&h.defines&&h.defines.markAllAsDirty&&this._materialContext===h.materialContext&&Z(h.defines)}}_markScenePrePassDirty(){if(this.CZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const Z=this.CZ().enablePrePassRenderer();Z&&Z.Vx()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(b._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(b._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(b._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(b._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(b._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(b._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(b._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(b._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(b._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(b._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const Z=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.jh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(Z)}))}}setPrePassRenderer(Z){return!1}dispose(Z,h,V){const v=this.CZ();if(v.stopAnimation(this),v.freeProcessedMaterials(),v.removeMaterial(this),this._eventInfo.forceDisposeTextures=h,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const Z=this._parentContainer.materials.indexOf(this);Z>-1&&this._parentContainer.materials.splice(Z,1),this._parentContainer=null}if(!0!==V)if(this.meshMap)for(const A in this.meshMap){const Z=this.meshMap[A];this._disposeMeshResources(Z)}else{const Z=v.meshes;for(const h of Z)this._disposeMeshResources(h)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.jh.notifyObservers(this),this.jh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(Z){if(!Z)return;const h=Z.Jh,V=Z._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(Z.zh&&V)for(const A of Z.zh){const Z=A._drawWrappers;for(let H=0;H<Z.length;H++){var v;const K=null===(v=Z[H])||void 0===v?void 0:v.effect;if(!K)continue;V[H]===this&&(null===h||void 0===h||h._releaseVertexArrayObject(K),A._removeDrawWrapper(H,!0,!0))}}}else null===h||void 0===h||h._releaseVertexArrayObject(this._drawWrapper.effect);Z.material!==this||Z.sourceMesh||(Z.material=null)}serialize(){const Z=k.b.Serialize(this);return Z.stencil=this.stencil.serialize(),Z.uniqueId=this.uniqueId,this._serializePlugins(Z),Z}_serializePlugins(Z){if(Z.plugins={},this.pluginManager)for(const h of this.pluginManager._plugins)h.doNotSerialize||(Z.plugins[h.getClassName()]=h.serialize())}static Parse(Z,h,V){if(Z.customType){if("BABYLON.PBRMaterial"===Z.customType&&Z.overloadedAlbedo&&(Z.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return x.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else Z.customType="BABYLON.StandardMaterial";const v=H.Tools.Instantiate(Z.customType).Parse(Z,h,V);return v._loadedUniqueId=Z.uniqueId,v}static _ParsePlugins(Z,h,V,v){if(Z.plugins)for(const d in Z.plugins){var A,K;const a=Z.plugins[d];let n=null===(A=h.pluginManager)||void 0===A?void 0:A.getPlugin(a.name);if(!n){const Z=H.Tools.Instantiate("BABYLON."+d);Z&&(n=new Z(h))}null===(K=n)||void 0===K||K.parse(a,V,v)}}}b.TriangleFillMode=0,b.WireFrameFillMode=1,b.PointFillMode=2,b.PointListDrawMode=3,b.LineListDrawMode=4,b.LineLoopDrawMode=5,b.LineStripDrawMode=6,b.TriangleStripDrawMode=7,b.TriangleFanDrawMode=8,b.ClockWiseSideOrientation=0,b.CounterClockWiseSideOrientation=1,b.ImageProcessingDirtyFlag=64,b.TextureDirtyFlag=1,b.LightDirtyFlag=2,b.FresnelDirtyFlag=4,b.AttributesDirtyFlag=8,b.MiscDirtyFlag=16,b.PrePassDirtyFlag=32,b.AllDirtyFlag=127,b.MATERIAL_OPAQUE=0,b.MATERIAL_ALPHATEST=1,b.MATERIAL_ALPHABLEND=2,b.MATERIAL_ALPHATESTANDBLEND=3,b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,b.MATERIAL_NORMALBLENDMETHOD_RNM=1,b.OnEventObservable=new K.b,b._AllDirtyCallBack=Z=>Z.markAllAsDirty(),b._ImageProcessingDirtyCallBack=Z=>Z.markAsImageProcessingDirty(),b._TextureDirtyCallBack=Z=>Z.markAsTexturesDirty(),b._FresnelDirtyCallBack=Z=>Z.markAsFresnelDirty(),b._MiscDirtyCallBack=Z=>Z.markAsMiscDirty(),b._PrePassDirtyCallBack=Z=>Z.markAsPrePassDirty(),b._LightsDirtyCallBack=Z=>Z.markAsLightDirty(),b._AttributeDirtyCallBack=Z=>Z.markAsAttributesDirty(),b._FresnelAndMiscDirtyCallBack=Z=>{b._FresnelDirtyCallBack(Z),b._MiscDirtyCallBack(Z)},b._TextureAndMiscDirtyCallBack=Z=>{b._TextureDirtyCallBack(Z),b._MiscDirtyCallBack(Z)},b._DirtyCallbackArray=[],b._RunDirtyCallBacks=Z=>{for(const h of b._DirtyCallbackArray)h(Z)},(0,v.b)([(0,A.I)()],b.prototype,"id",void 0),(0,v.b)([(0,A.I)()],b.prototype,"uniqueId",void 0),(0,v.b)([(0,A.I)()],b.prototype,"name",void 0),(0,v.b)([(0,A.I)()],b.prototype,"metadata",void 0),(0,v.b)([(0,A.I)()],b.prototype,"checkReadyOnEveryCall",void 0),(0,v.b)([(0,A.I)()],b.prototype,"checkReadyOnlyOnce",void 0),(0,v.b)([(0,A.I)()],b.prototype,"state",void 0),(0,v.b)([(0,A.I)("alpha")],b.prototype,"_alpha",void 0),(0,v.b)([(0,A.I)("Gh")],b.prototype,"_backFaceCulling",void 0),(0,v.b)([(0,A.I)("cullBackFaces")],b.prototype,"_cullBackFaces",void 0),(0,v.b)([(0,A.I)()],b.prototype,"sideOrientation",void 0),(0,v.b)([(0,A.I)("alphaMode")],b.prototype,"_alphaMode",void 0),(0,v.b)([(0,A.I)()],b.prototype,"_needDepthPrePass",void 0),(0,v.b)([(0,A.I)()],b.prototype,"disableDepthWrite",void 0),(0,v.b)([(0,A.I)()],b.prototype,"disableColorWrite",void 0),(0,v.b)([(0,A.I)()],b.prototype,"forceDepthWrite",void 0),(0,v.b)([(0,A.I)()],b.prototype,"depthFunction",void 0),(0,v.b)([(0,A.I)()],b.prototype,"separateCullingPass",void 0),(0,v.b)([(0,A.I)("fogEnabled")],b.prototype,"_fogEnabled",void 0),(0,v.b)([(0,A.I)()],b.prototype,"pointSize",void 0),(0,v.b)([(0,A.I)()],b.prototype,"zOffset",void 0),(0,v.b)([(0,A.I)()],b.prototype,"zOffsetUnits",void 0),(0,v.b)([(0,A.I)()],b.prototype,"pointsCloud",null),(0,v.b)([(0,A.I)()],b.prototype,"fillMode",null),(0,v.b)([(0,A.I)()],b.prototype,"useLogarithmicDepth",null),(0,v.b)([(0,A.I)()],b.prototype,"transparencyMode",null)},12096:(Z,h,V)=>{V.d(h,{C:()=>l,E:()=>k,F:()=>D,I:()=>W,K:()=>y,O:()=>r,Q:()=>o,T:()=>S,U:()=>z,X:()=>m,Z:()=>g,bb:()=>e,c:()=>E,d:()=>N,fb:()=>u,g:()=>P,k:()=>x,n:()=>F,p:()=>b,s:()=>q,u:()=>B,y:()=>X,z:()=>C});var v=V(11580),A=V(11781),H=V(11599),K=V(12045),d=V(12099);const a=A.Ih.Black(),n={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function x(Z,h,V){if(!Z||Z.LOGARITHMICDEPTH||Z.indexOf&&Z.indexOf("LOGARITHMICDEPTH")>=0){const Z=V.activeCamera;1===Z.mode&&v.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),h.setFloat("logarithmicDepthConstant",2/(Math.log(Z.maxZ+1)/Math.LN2))}}function N(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]&&arguments[3];V&&Z.fogEnabled&&(!h||h.applyFog)&&0!==Z.fogMode&&(V.setFloat4("vFogInfos",Z.fogMode,Z.fogStart,Z.fogEnd,Z.fogDensity),v?(Z.fogColor.toLinearSpaceToRef(a,Z.getEngine().useExactSrgbConversions),V.setColor3("vFogColor",a)):V.setColor3("vFogColor",Z.fogColor))}function D(Z,h,V,v,A,H,K,d,a,x){const N=Z.numMaxInfluencers||Z.numInfluencers;return N<=0?0:(h.push("#define MORPHTARGETS"),Z.hasPositions&&h.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),Z.hasNormals&&h.push("#define MORPHTARGETTEXTURE_HASNORMALS"),Z.hasTangents&&h.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),Z.hasUVs&&h.push("#define MORPHTARGETTEXTURE_HASUVS"),Z.hasUV2s&&h.push("#define MORPHTARGETTEXTURE_HASUV2S"),Z.hasColors&&h.push("#define MORPHTARGETTEXTURE_HASCOLORS"),Z.supportsPositions&&A&&h.push("#define MORPHTARGETS_POSITION"),Z.supportsNormals&&H&&h.push("#define MORPHTARGETS_NORMAL"),Z.supportsTangents&&K&&h.push("#define MORPHTARGETS_TANGENT"),Z.supportsUVs&&d&&h.push("#define MORPHTARGETS_UV"),Z.supportsUV2s&&a&&h.push("#define MORPHTARGETS_UV2"),Z.supportsColors&&x&&h.push("#define MORPHTARGETS_COLOR"),h.push("#define NUM_MORPH_INFLUENCERS "+N),Z.isUsingTextureForTargets&&h.push("#define MORPHTARGETS_TEXTURE"),n.NUM_MORPH_INFLUENCERS=N,n.NORMAL=H,n.TANGENT=K,n.UV=d,n.UV2=a,n.COLOR=x,k(V,v,n,A),N)}function k(Z,h,V){let A=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const K=V.NUM_MORPH_INFLUENCERS;if(K>0&&H.b.LastCreatedEngine){const d=H.b.LastCreatedEngine.getCaps().maxVertexAttribs,a=h.morphTargetManager;if(null!==a&&void 0!==a&&a.isUsingTextureForTargets)return;const n=a&&a.supportsPositions&&A,x=a&&a.supportsNormals&&V.NORMAL,N=a&&a.supportsTangents&&V.TANGENT,D=a&&a.supportsUVs&&V.UV1,k=a&&a.supportsUV2s&&V.UV2,u=a&&a.supportsColors&&V.VERTEXCOLOR;for(let V=0;V<K;V++)n&&Z.push("position"+V),x&&Z.push("normal"+V),N&&Z.push("tangent"+V),D&&Z.push("uv_"+V),k&&Z.push("uv2_"+V),u&&Z.push("color"+V),Z.length>d&&v.b.Error("Cannot add more vertex attributes for mesh "+h.name)}}function u(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z.push("world0"),Z.push("world1"),Z.push("world2"),Z.push("world3"),h&&(Z.push("previousWorld0"),Z.push("previousWorld1"),Z.push("previousWorld2"),Z.push("previousWorld3"))}function F(Z,h){const V=Z.morphTargetManager;Z&&V&&h.setFloatArray("morphTargetInfluences",V.influences)}function b(Z,h){h.bindToEffect(Z,"Scene")}function o(Z,h,V){h._needUVs=!0,h[V]=!0,Z.optimizeUVAllocation&&Z.getTextureMatrix().isIdentityAs3x2()?(h[V+"DIRECTUV"]=Z.coordinatesIndex+1,h["MAINUV"+(Z.coordinatesIndex+1)]=!0):h[V+"DIRECTUV"]=0}function q(Z,h,V){const v=Z.getTextureMatrix();h.wh(V+"Matrix",v)}function X(Z,h,V){V.BAKED_VERTEX_ANIMATION_TEXTURE&&V.INSTANCES&&Z.push("bakedVertexAnimationSettingsInstanced")}function E(Z,h,V){var v;if(h&&Z&&(Z.computeBonesUsingShaders&&h._bonesComputationForcedToCPU&&(Z.computeBonesUsingShaders=!1),Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton)){const A=Z.skeleton;if(A.isUsingTextureForMatrices&&h.getUniformIndex("boneTextureWidth")>-1){const V=A.getTransformMatrixTexture(Z);h.setTexture("boneSampler",V),h.setFloat("boneTextureWidth",4*(A.bones.length+1))}else{const H=A.getTransformMatrices(Z);H&&(h.setMatrices("mBones",H),V&&Z.CZ().prePassRenderer&&Z.CZ().prePassRenderer.getIndex(2)&&(V.previousBones[Z.uniqueId]||(V.previousBones[Z.uniqueId]=H.slice()),h.setMatrices("mPreviousBones",V.previousBones[Z.uniqueId]),v=H,V.previousBones[Z.uniqueId].set(v)))}}}function j(Z,h,V,v,A){let H=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];Z._bindLight(h,V,v,A,H)}function P(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const H=Math.min(h.lightSources.length,A);for(let K=0;K<H;K++){j(h.lightSources[K],K,Z,V,"boolean"===typeof v?v:v.SPECULARTERM,h.receiveShadows)}}function C(Z,h,V,v){V.NUM_BONE_INFLUENCERS>0&&(v.addCPUSkinningFallback(0,h),Z.push("matricesIndices"),Z.push("matricesWeights"),V.NUM_BONE_INFLUENCERS>4&&(Z.push("matricesIndicesExtra"),Z.push("matricesWeightsExtra")))}function l(Z,h){(h.INSTANCES||h.THIN_INSTANCES)&&u(Z,!!h.PREPASS_VELOCITY),h.INSTANCESCOLOR&&Z.push("instanceColor")}function B(Z,h){let V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,A=0;for(let H=0;H<V&&Z["LIGHT"+H];H++)H>0&&(A=v+H,h.addFallback(A,"LIGHT"+H)),Z.SHADOWS||(Z["SHADOW"+H]&&h.addFallback(v,"SHADOW"+H),Z["SHADOWPCF"+H]&&h.addFallback(v,"SHADOWPCF"+H),Z["SHADOWPCSS"+H]&&h.addFallback(v,"SHADOWPCSS"+H),Z["SHADOWPOISSON"+H]&&h.addFallback(v,"SHADOWPOISSON"+H),Z["SHADOWESM"+H]&&h.addFallback(v,"SHADOWESM"+H),Z["SHADOWCLOSEESM"+H]&&h.addFallback(v,"SHADOWCLOSEESM"+H));return A++}function S(Z,h,V,v,A,H,K){let d=arguments.length>7&&void 0!==arguments[7]&&arguments[7];K._areMiscDirty&&(K.LOGARITHMICDEPTH=V,K.POINTSIZE=v,K.FOG=A&&function(Z,h){return h.fogEnabled&&Z.applyFog&&0!==h.fogMode}(Z,h),K.NONUNIFORMSCALING=Z.nonUniformScaling,K.ALPHATEST=H,K.DECAL_AFTER_DETAIL=d)}function r(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!V._areLightsDirty)return V._needNormals;let K=0;const d={needNormals:V._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(Z.lightsEnabled&&!H)for(const n of h.lightSources)if(L(Z,h,n,K,V,v,d),K++,K===A)break;V.SPECULARTERM=d.specularEnabled,V.SHADOWS=d.shadowEnabled;for(let n=K;n<A;n++)void 0!==V["LIGHT"+n]&&(V["LIGHT"+n]=!1,V["HEMILIGHT"+n]=!1,V["POINTLIGHT"+n]=!1,V["DIRLIGHT"+n]=!1,V["SPOTLIGHT"+n]=!1,V["AREALIGHT"+n]=!1,V["SHADOW"+n]=!1,V["SHADOWCSM"+n]=!1,V["SHADOWCSMDEBUG"+n]=!1,V["SHADOWCSMNUM_CASCADES"+n]=!1,V["SHADOWCSMUSESHADOWMAXZ"+n]=!1,V["SHADOWCSMNOBLEND"+n]=!1,V["SHADOWCSM_RIGHTHANDED"+n]=!1,V["SHADOWPCF"+n]=!1,V["SHADOWPCSS"+n]=!1,V["SHADOWPOISSON"+n]=!1,V["SHADOWESM"+n]=!1,V["SHADOWCLOSEESM"+n]=!1,V["SHADOWCUBE"+n]=!1,V["SHADOWLOWQUALITY"+n]=!1,V["SHADOWMEDIUMQUALITY"+n]=!1);const a=Z.getEngine().getCaps();return void 0===V.SHADOWFLOAT&&(d.needRebuild=!0),V.SHADOWFLOAT=d.shadowEnabled&&(a.textureFloatRender&&a.textureFloatLinearFiltering||a.textureHalfFloatRender&&a.textureHalfFloatLinearFiltering),V.LIGHTMAPEXCLUDED=d.lightmapMode,d.needRebuild&&V.rebuild(),d.needNormals}function L(Z,h,V,v,A,H,d){switch(d.needNormals=!0,void 0===A["LIGHT"+v]&&(d.needRebuild=!0),A["LIGHT"+v]=!0,A["SPOTLIGHT"+v]=!1,A["HEMILIGHT"+v]=!1,A["POINTLIGHT"+v]=!1,A["DIRLIGHT"+v]=!1,A["AREALIGHT"+v]=!1,V.prepareLightSpecificDefines(A,v),A["LIGHT_FALLOFF_PHYSICAL"+v]=!1,A["LIGHT_FALLOFF_GLTF"+v]=!1,A["LIGHT_FALLOFF_STANDARD"+v]=!1,V.falloffType){case K.b.FALLOFF_GLTF:A["LIGHT_FALLOFF_GLTF"+v]=!0;break;case K.b.FALLOFF_PHYSICAL:A["LIGHT_FALLOFF_PHYSICAL"+v]=!0;break;case K.b.FALLOFF_STANDARD:A["LIGHT_FALLOFF_STANDARD"+v]=!0}if(H&&!V.Lx.equalsFloats(0,0,0)&&(d.specularEnabled=!0),A["SHADOW"+v]=!1,A["SHADOWCSM"+v]=!1,A["SHADOWCSMDEBUG"+v]=!1,A["SHADOWCSMNUM_CASCADES"+v]=!1,A["SHADOWCSMUSESHADOWMAXZ"+v]=!1,A["SHADOWCSMNOBLEND"+v]=!1,A["SHADOWCSM_RIGHTHANDED"+v]=!1,A["SHADOWPCF"+v]=!1,A["SHADOWPCSS"+v]=!1,A["SHADOWPOISSON"+v]=!1,A["SHADOWESM"+v]=!1,A["SHADOWCLOSEESM"+v]=!1,A["SHADOWCUBE"+v]=!1,A["SHADOWLOWQUALITY"+v]=!1,A["SHADOWMEDIUMQUALITY"+v]=!1,h&&h.receiveShadows&&Z.shadowsEnabled&&V.shadowEnabled){const h=V.getShadowGenerator(Z.activeCamera)??V.getShadowGenerator();if(h){const Z=h.getShadowMap();Z&&Z.renderList&&Z.renderList.length>0&&(d.shadowEnabled=!0,h.prepareDefines(A,v))}}V.lightmapMode!=K.b.LIGHTMAP_DEFAULT?(d.lightmapMode=!0,A["LIGHTMAPEXCLUDED"+v]=!0,A["LIGHTMAPNOSPECULAR"+v]=V.lightmapMode==K.b.LIGHTMAP_SHADOWSONLY):(A["LIGHTMAPEXCLUDED"+v]=!1,A["LIGHTMAPNOSPECULAR"+v]=!1)}function y(Z,h,V,v,A){let H=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,K=arguments.length>6&&void 0!==arguments[6]&&arguments[6],a=function(Z,h){let V=!1;if(Z.activeCamera){const v=h.CAMERA_ORTHOGRAPHIC?1:0,A=h.CAMERA_PERSPECTIVE?1:0,H=1===Z.activeCamera.mode?1:0,K=0===Z.activeCamera.mode?1:0;(v^H||A^K)&&(h.CAMERA_ORTHOGRAPHIC=1===H,h.CAMERA_PERSPECTIVE=1===K,V=!0)}return V}(Z,v);!1!==H&&(a=(0,d.h)(V,Z,v)),v.DEPTHPREPASS!==!h.getColorWrite()&&(v.DEPTHPREPASS=!v.DEPTHPREPASS,a=!0),v.INSTANCES!==A&&(v.INSTANCES=A,a=!0),v.THIN_INSTANCES!==K&&(v.THIN_INSTANCES=K,a=!0),a&&v.markAsUnprocessed()}function W(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]&&arguments[4],H=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],K=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!h._areAttributesDirty&&h._needNormals===h._normals&&h._needUVs===h._uvs)return!1;h._normals=h._needNormals,h._uvs=h._needUVs,h.NORMAL=h._needNormals&&Z.isVerticesDataPresent("normal"),h._needNormals&&Z.isVerticesDataPresent("tangent")&&(h.TANGENT=!0);for(let d=1;d<=6;++d)h["UV"+d]=!!h._needUVs&&Z.isVerticesDataPresent(`uv${1===d?"":d}`);if(V){const V=Z.useVertexColors&&Z.isVerticesDataPresent("color");h.VERTEXCOLOR=V,h.VERTEXALPHA=Z.hasVertexAlpha&&V&&H}return Z.isVerticesDataPresent("instanceColor")&&(Z.hasInstances||Z.hasThinInstances)&&(h.INSTANCESCOLOR=!0),v&&function(Z,h){if(Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton){h.NUM_BONE_INFLUENCERS=Z.numBoneInfluencers;const V=void 0!==h.BONETEXTURE;if(Z.skeleton.isUsingTextureForMatrices&&V)h.BONETEXTURE=!0;else{h.BonesPerMesh=Z.skeleton.bones.length+1,h.BONETEXTURE=!V&&void 0;const v=Z.CZ().prePassRenderer;if(v&&v.enabled){const V=-1===v.excludedSkinnedMesh.indexOf(Z);h.BONES_VELOCITY_ENABLED=V}}}else h.NUM_BONE_INFLUENCERS=0,h.BonesPerMesh=0,void 0!==h.BONETEXTURE&&(h.BONETEXTURE=!1)}(Z,h),A&&function(Z,h){const V=Z.morphTargetManager;V?(h.MORPHTARGETS_UV=V.supportsUVs&&h.UV1,h.MORPHTARGETS_UV2=V.supportsUV2s&&h.UV2,h.MORPHTARGETS_TANGENT=V.supportsTangents&&h.TANGENT,h.MORPHTARGETS_NORMAL=V.supportsNormals&&h.NORMAL,h.MORPHTARGETS_POSITION=V.supportsPositions,h.MORPHTARGETS_COLOR=V.supportsColors,h.MORPHTARGETTEXTURE_HASUVS=V.hasUVs,h.MORPHTARGETTEXTURE_HASUV2S=V.hasUV2s,h.MORPHTARGETTEXTURE_HASTANGENTS=V.hasTangents,h.MORPHTARGETTEXTURE_HASNORMALS=V.hasNormals,h.MORPHTARGETTEXTURE_HASPOSITIONS=V.hasPositions,h.MORPHTARGETTEXTURE_HASCOLORS=V.hasColors,h.NUM_MORPH_INFLUENCERS=V.numMaxInfluencers||V.numInfluencers,h.MORPHTARGETS=h.NUM_MORPH_INFLUENCERS>0,h.MORPHTARGETS_TEXTURE=V.isUsingTextureForTargets):(h.MORPHTARGETS_UV=!1,h.MORPHTARGETS_UV2=!1,h.MORPHTARGETS_TANGENT=!1,h.MORPHTARGETS_NORMAL=!1,h.MORPHTARGETS_POSITION=!1,h.MORPHTARGETS_COLOR=!1,h.MORPHTARGETTEXTURE_HASUVS=!1,h.MORPHTARGETTEXTURE_HASUV2S=!1,h.MORPHTARGETTEXTURE_HASTANGENTS=!1,h.MORPHTARGETTEXTURE_HASNORMALS=!1,h.MORPHTARGETTEXTURE_HASPOSITIONS=!1,h.MORPHTARGETTEXTURE_HAS_COLORS=!1,h.MORPHTARGETS=!1,h.NUM_MORPH_INFLUENCERS=0)}(Z,h),K&&function(Z,h){const V=Z.bakedVertexAnimationManager;h.BAKED_VERTEX_ANIMATION_TEXTURE=!(!V||!V.isEnabled)}(Z,h),!0}function z(Z,h){if(Z.activeCamera){const V=h.MULTIVIEW;h.MULTIVIEW=null!==Z.activeCamera.outputRenderTarget&&Z.activeCamera.outputRenderTarget.getViewCount()>1,h.MULTIVIEW!=V&&h.markAsUnprocessed()}}function m(Z,h,V){const v=h.ORDER_INDEPENDENT_TRANSPARENCY,A=h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;h.ORDER_INDEPENDENT_TRANSPARENCY=Z.useOrderIndependentTransparency&&V,h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!Z.getEngine().getCaps().textureFloatLinearFiltering,v===h.ORDER_INDEPENDENT_TRANSPARENCY&&A===h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||h.markAsUnprocessed()}function g(Z,h,V){const v=h.PREPASS;if(!h._arePrePassDirty)return;const A=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(Z.prePassRenderer&&Z.prePassRenderer.enabled&&V){h.PREPASS=!0,h.SCENE_MRT_COUNT=Z.prePassRenderer.mrtCount,h.PREPASS_NORMAL_WORLDSPACE=Z.prePassRenderer.generateNormalsInWorldSpace,h.PREPASS_COLOR=!0,h.PREPASS_COLOR_INDEX=0;for(let V=0;V<A.length;V++){const v=Z.prePassRenderer.getIndex(A[V].type);-1!==v?(h[A[V].define]=!0,h[A[V].index]=v):h[A[V].define]=!1}}else{h.PREPASS=!1;for(let Z=0;Z<A.length;Z++)h[A[Z].define]=!1}h.PREPASS!=v&&(h.markAsUnprocessed(),h.markAsImageProcessingDirty())}function I(Z,h,V,v){let A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6];A&&A.push("Light"+Z),H||(h.push("vLightData"+Z,"vLightDiffuse"+Z,"vLightSpecular"+Z,"vLightDirection"+Z,"vLightWidth"+Z,"vLightHeight"+Z,"vLightFalloff"+Z,"vLightGround"+Z,"lightMatrix"+Z,"shadowsInfo"+Z,"depthValues"+Z),V.push("shadowTexture"+Z),V.push("depthTexture"+Z),h.push("viewFrustumZ"+Z,"cascadeBlendFactor"+Z,"lightSizeUVCorrection"+Z,"depthCorrection"+Z,"penumbraDarkness"+Z,"frustumLengths"+Z),v&&(V.push("projectionLightTexture"+Z),h.push("textureProjectionMatrix"+Z)),K&&V.push("iesLightTexture"+Z))}function e(Z,h,V){let v,A,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(Z.uniformsNames){const K=Z;v=K.uniformsNames,A=K.uniformBuffersNames,h=K.samplers,V=K.defines,H=K.maxSimultaneousLights||0}else v=Z,h||(h=[]);for(let K=0;K<H&&V["LIGHT"+K];K++)I(K,v,h,V["PROJECTEDLIGHTTEXTURE"+K],A,!1,V["IESLIGHTTEXTURE"+K]);V.NUM_MORPH_INFLUENCERS&&(v.push("morphTargetInfluences"),v.push("morphTargetCount")),V.BAKED_VERTEX_ANIMATION_TEXTURE&&(v.push("bakedVertexAnimationSettings"),v.push("bakedVertexAnimationTextureSizeInverted"),v.push("bakedVertexAnimationTime"),h.push("bakedVertexAnimationTexture"))}},12053:(Z,h,V)=>{V.d(h,{b:()=>H});var v=V(11729),A=V(12062);class H extends A.b{constructor(Z,h){let V=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(Z,h,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new v.Matrix,this._storeEffectOnSubMeshes=V}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(Z,h){return!!Z&&(!this._storeEffectOnSubMeshes||(!Z.zh||0===Z.zh.length||this.isReadyForSubMesh(Z,Z.zh[0],h)))}_isReadyForSubMesh(Z){const h=Z.materialDefines;return!(this.checkReadyOnEveryCall||!Z.effect||!h||h._renderId!==this.CZ().getRenderId())}bindOnlyWorldMatrix(Z){this._activeEffect.setMatrix("world",Z)}bindOnlyNormalMatrix(Z){this._activeEffect.setMatrix("normalMatrix",Z)}bind(Z,h){h&&this.bindForSubMesh(Z,h,h.zh[0])}_afterBind(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,V=arguments.length>2?arguments[2]:void 0;super._afterBind(Z,h,V),this.CZ()._cachedEffect=h,V?V._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return V._drawWrapper._forceRebindOnNextCall||Z.isCachedMaterialInvalid(this,h,v)}dispose(Z,h,V){this._activeEffect=void 0,super.dispose(Z,h,V)}}},12093:(Z,h,V)=>{V.d(h,{b:()=>d,e:()=>a});var v=V(11720),A=V(11729),H=V(11723);class K{static extractMinAndMaxIndexed(Z,h,V,v,A,H){for(let K=V;K<V+v;K++){const V=3*h[K],v=Z[V],d=Z[V+1],a=Z[V+2];A.minimizeInPlaceFromFloats(v,d,a),H.maximizeInPlaceFromFloats(v,d,a)}}static extractMinAndMax(Z,h,V,v,A,H){for(let K=h,d=h*v;K<h+V;K++,d+=v){const h=Z[d],V=Z[d+1],v=Z[d+2];A.minimizeInPlaceFromFloats(h,V,v),H.maximizeInPlaceFromFloats(h,V,v)}}}function d(Z,h,V,v){let H=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const d=new A.Ch(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),a=new A.Ch(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return K.extractMinAndMaxIndexed(Z,h,V,v,d,a),H&&(d.x-=d.x*H.x+H.y,d.y-=d.y*H.x+H.y,d.z-=d.z*H.x+H.y,a.x+=a.x*H.x+H.y,a.y+=a.y*H.x+H.y,a.z+=a.z*H.x+H.y),{minimum:d,maximum:a}}function a(Z,h,V){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,H=arguments.length>4?arguments[4]:void 0;const d=new A.Ch(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),a=new A.Ch(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return H||(H=3),K.extractMinAndMax(Z,h,V,H,d,a),v&&(d.x-=d.x*v.x+v.y,d.y-=d.y*v.x+v.y,d.z-=d.z*v.x+v.y,a.x+=a.x*v.x+v.y,a.y+=a.y*v.x+v.y,a.z+=a.z*v.x+v.y),{minimum:d,maximum:a}}(0,v.b)([H.f.filter((function(){for(var Z=arguments.length,h=new Array(Z),V=0;V<Z;V++)h[V]=arguments[V];let[v,A]=h;return!Array.isArray(v)&&!Array.isArray(A)}))],K,"extractMinAndMaxIndexed",null),(0,v.b)([H.f.filter((function(){for(var Z=arguments.length,h=new Array(Z),V=0;V<Z;V++)h[V]=arguments[V];let[v]=h;return!Array.isArray(v)}))],K,"extractMinAndMax",null)},12064:(Z,h,V)=>{V.d(h,{d:()=>a});var v=V(11805),A=V(12070),H=V(12074),K=V(12093),d=V(11860);class a{get materialDefines(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.defines}set materialDefines(Z){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=Z}_getDrawWrapper(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z=Z??this._engine.currentRenderPassId;let V=this._drawWrappers[Z];return!V&&h&&(this._drawWrappers[Z]=V=new d.e(this._mesh.CZ().getEngine())),V}_removeDrawWrapper(Z){let h=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var V;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(V=this._drawWrappers[Z])||void 0===V||V.dispose(h));this._drawWrappers[Z]=void 0}get effect(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(Z){this._mainDrawWrapperOverride=Z}setEffect(Z){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,V=arguments.length>2?arguments[2]:void 0,v=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const A=this._drawWrapper;A.setEffect(Z,h,v),void 0!==V&&(A.materialContext=V),Z||(A.defines=null,A.materialContext=void 0)}resetDrawCache(Z){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==Z)return void this._removeDrawWrapper(Z,!0,h);for(const Z of this._drawWrappers)null===Z||void 0===Z||Z.dispose(h)}this._drawWrappers=[]}static AddToMesh(Z,h,V,v,A,H,K){return new a(Z,h,V,v,A,H,K,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(Z,h,V,v,A,H,K){let d=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],a=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=Z,this.verticesStart=h,this.verticesCount=V,this.indexStart=v,this.indexCount=A,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=H,this._renderingMesh=K||H,a&&H.zh.push(this),this._engine=this._mesh.CZ().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=H.zh.length-1,d&&(this.refreshBoundingInfo(),H.sh(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(Z){return this._boundingInfo=Z,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const Z=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return Z||this._renderingMesh}eZ(){let Z=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const h=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!h)return Z&&this._mesh.CZ()._hasDefaultMaterial?this._mesh.CZ().defaultMaterial:null;if(this._isMultiMaterial(h)){const Z=h.getSubMaterial(this.materialIndex);return this._currentMaterial!==Z&&(this._currentMaterial=Z,this.resetDrawCache()),Z}return h}_isMultiMaterial(Z){return void 0!==Z.getSubMaterial}refreshBoundingInfo(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Jh)return this;if(Z||(Z=this._renderingMesh.getVerticesData(v.f.PositionKind)),!Z)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const h=this._renderingMesh.fh();let V;if(0===this.indexStart&&this.indexCount===h.length){const Z=this._renderingMesh.getBoundingInfo();V={minimum:Z.minimum.clone(),maximum:Z.maximum.clone()}}else V=(0,K.b)(Z,h,this.indexStart,this.indexCount,this._renderingMesh.Jh.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(V.minimum,V.maximum):this._boundingInfo=new H.c(V.minimum,V.maximum),this}_checkCollision(Z){return this.getBoundingInfo()._checkCollision(Z)}updateBoundingInfo(Z){let h=this.getBoundingInfo();return h||(this.refreshBoundingInfo(),h=this.getBoundingInfo()),h&&h.update(Z),this}isInFrustum(Z){const h=this.getBoundingInfo();return!!h&&h.isInFrustum(Z,this._mesh.gN)}isCompletelyInFrustum(Z){const h=this.getBoundingInfo();return!!h&&h.isCompletelyInFrustum(Z)}render(Z){return this._renderingMesh.render(this,Z,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(Z,h){if(!this._linesIndexBuffer){const V=6*Math.floor(this.indexCount/3),v=this.verticesStart+this.verticesCount>65535?new Uint32Array(V):new Uint16Array(V);let A=0;if(0===Z.length)for(let Z=this.indexStart;Z<this.indexStart+this.indexCount;Z+=3)v[A++]=Z,v[A++]=Z+1,v[A++]=Z+1,v[A++]=Z+2,v[A++]=Z+2,v[A++]=Z;else for(let h=this.indexStart;h<this.indexStart+this.indexCount;h+=3)v[A++]=Z[h],v[A++]=Z[h+1],v[A++]=Z[h+1],v[A++]=Z[h+2],v[A++]=Z[h+2],v[A++]=Z[h];this._linesIndexBuffer=h.createIndexBuffer(v),this._linesIndexCount=v.length}return this._linesIndexBuffer}canIntersects(Z){const h=this.getBoundingInfo();return!!h&&Z.intersectsBox(h.boundingBox)}intersects(Z,h,V,v,A){const H=this.eZ();if(!H)return null;let K=3,d=!1;switch(H.fillMode){case 3:case 5:case 6:case 8:return null;case 7:K=1,d=!0}return 4===H.fillMode?V.length?this._intersectLines(Z,h,V,this._mesh.intersectionThreshold,v):this._intersectUnIndexedLines(Z,h,V,this._mesh.intersectionThreshold,v):!V.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(Z,h,V,v,A):this._intersectTriangles(Z,h,V,K,d,v,A)}_intersectLines(Z,h,V,v,H){let K=null;for(let d=this.indexStart;d<this.indexStart+this.indexCount;d+=2){const a=h[V[d]],n=h[V[d+1]],x=Z.intersectionSegment(a,n,v);if(!(x<0)&&((H||!K||x<K.distance)&&(K=new A.d(null,null,x),K.faceId=d/2,H)))break}return K}_intersectUnIndexedLines(Z,h,V,v,H){let K=null;for(let d=this.verticesStart;d<this.verticesStart+this.verticesCount;d+=2){const V=h[d],a=h[d+1],n=Z.intersectionSegment(V,a,v);if(!(n<0)&&((H||!K||n<K.distance)&&(K=new A.d(null,null,n),K.faceId=d/2,H)))break}return K}_intersectTriangles(Z,h,V,v,A,H,K){let d=null,a=-1;for(let n=this.indexStart;n<this.indexStart+this.indexCount-(3-v);n+=v){a++;const v=V[n],x=V[n+1],N=V[n+2];if(A&&4294967295===N){n+=2;continue}const D=h[v],k=h[x],u=h[N];if(!D||!k||!u)continue;if(K&&!K(D,k,u,Z,v,x,N))continue;const F=Z.intersectsTriangle(D,k,u);if(F){if(F.distance<0)continue;if((H||!d||F.distance<d.distance)&&(d=F,d.faceId=a,H))break}}return d}_intersectUnIndexedTriangles(Z,h,V,v,A){let H=null;for(let K=this.verticesStart;K<this.verticesStart+this.verticesCount;K+=3){const V=h[K],d=h[K+1],a=h[K+2];if(A&&!A(V,d,a,Z,-1,-1,-1))continue;const n=Z.intersectsTriangle(V,d,a);if(n){if(n.distance<0)continue;if((v||!H||n.distance<H.distance)&&(H=n,H.faceId=K/3,v))break}}return H}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(Z,h){const V=new a(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,Z,h,!1);if(!this.IsGlobal){const Z=this.getBoundingInfo();if(!Z)return V;V._boundingInfo=new H.c(Z.minimum,Z.maximum)}return V}dispose(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.CZ().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const h=this._mesh.zh.indexOf(this);this._mesh.zh.splice(h,1),this.resetDrawCache(void 0,Z)}getClassName(){return"SubMesh"}static CreateFromIndices(Z,h,V,v,A){let H=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],K=Number.MAX_VALUE,d=-Number.MAX_VALUE;const n=(A||v).fh();for(let a=h;a<h+V;a++){const Z=n[a];Z<K&&(K=Z),Z>d&&(d=Z)}return new a(Z,K,d-K+1,h,V,v,A,H)}}}}]);