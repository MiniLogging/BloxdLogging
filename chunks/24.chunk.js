"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[24],{12929:(L,U,x)=>{x.d(U,{c:()=>mL});class mL{constructor(L,U,x){this.bu=L,this.bv=U,this.distance=x,this.faceId=0,this.subMeshId=0}}},12940:(L,U,x)=>{x.d(U,{c:()=>F});var mL=x(12602),p=x(12589),G=x(12598);class F{constructor(L,U,x){this.vectors=(0,mL.e)(8,p.YU.Zero),this.center=p.YU.Zero(),this.centerWorld=p.YU.Zero(),this.extendSize=p.YU.Zero(),this.extendSizeWorld=p.YU.Zero(),this.directions=(0,mL.e)(3,p.YU.Zero),this.vectorsWorld=(0,mL.e)(8,p.YU.Zero),this.minimumWorld=p.YU.Zero(),this.maximumWorld=p.YU.Zero(),this.minimum=p.YU.Zero(),this.maximum=p.YU.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(L,U,x)}reConstruct(L,U,x){const mL=L.x,G=L.y,F=L.z,a=U.x,o=U.y,A=U.z,r=this.vectors;this.minimum.da(mL,G,F),this.maximum.da(a,o,A),r[0].da(mL,G,F),r[1].da(a,o,A),r[2].da(a,G,F),r[3].da(mL,o,F),r[4].da(mL,G,A),r[5].da(a,o,F),r[6].da(mL,o,A),r[7].da(a,G,A),U.addToRef(L,this.center).scaleInPlace(.5),U.subtractToRef(L,this.extendSize).scaleInPlace(.5),this._worldMatrix=x||p.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(L){const U=F._TmpVector3,x=this.maximum.subtractToRef(this.minimum,U[0]),mL=x.length();x.normalizeFromLength(mL);const p=mL*L,G=x.scaleInPlace(.5*p),a=this.center.subtractToRef(G,U[1]),o=this.center.addToRef(G,U[2]);return this.reConstruct(a,o,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(L){const U=this.minimumWorld,x=this.maximumWorld,mL=this.directions,G=this.vectorsWorld,F=this.vectors;if(L.isIdentity()){U.p(this.minimum),x.p(this.maximum);for(let L=0;L<8;++L)G[L].p(F[L]);this.extendSizeWorld.p(this.extendSize),this.centerWorld.p(this.center)}else{U.la(Number.MAX_VALUE),x.la(-Number.MAX_VALUE);for(let mL=0;mL<8;++mL){const a=G[mL];p.YU.TransformCoordinatesToRef(F[mL],L,a),U.minimizeInPlace(a),x.maximizeInPlace(a)}x.subtractToRef(U,this.extendSizeWorld).scaleInPlace(.5),x.addToRef(U,this.centerWorld).scaleInPlace(.5)}p.YU.FromArrayToRef(L.m,0,mL[0]),p.YU.FromArrayToRef(L.m,4,mL[1]),p.YU.FromArrayToRef(L.m,8,mL[2]),this._worldMatrix=L}isInFrustum(L){return F.IsInFrustum(this.vectorsWorld,L)}isCompletelyInFrustum(L){return F.IsCompletelyInFrustum(this.vectorsWorld,L)}intersectsPoint(L){const U=this.minimumWorld,x=this.maximumWorld,mL=U.x,p=U.y,F=U.z,a=x.x,o=x.y,A=x.z,r=L.x,h=L.y,b=L.z,E=-G.c;return!(a-r<E||E>r-mL)&&(!(o-h<E||E>h-p)&&!(A-b<E||E>b-F))}intersectsSphere(L){return F.IntersectsSphere(this.minimumWorld,this.maximumWorld,L.centerWorld,L.radiusWorld)}intersectsMinMax(L,U){const x=this.minimumWorld,mL=this.maximumWorld,p=x.x,G=x.y,F=x.z,a=mL.x,o=mL.y,A=mL.z,r=L.x,h=L.y,b=L.z,E=U.x,Y=U.y,S=U.z;return!(a<r||p>E)&&(!(o<h||G>Y)&&!(A<b||F>S))}dispose(){var L,U;null===(L=this._drawWrapperFront)||void 0===L||L.dispose(),null===(U=this._drawWrapperBack)||void 0===U||U.dispose()}static Intersects(L,U){return L.intersectsMinMax(U.minimumWorld,U.maximumWorld)}static IntersectsSphere(L,U,x,mL){const G=F._TmpVector3[0];p.YU.ClampToRef(x,L,U,G);return p.YU.DistanceSquared(x,G)<=mL*mL}static IsCompletelyInFrustum(L,U){for(let x=0;x<6;++x){const mL=U[x];for(let U=0;U<8;++U)if(mL.dotCoordinate(L[U])<0)return!1}return!0}static IsInFrustum(L,U){for(let x=0;x<6;++x){let mL=!0;const p=U[x];for(let U=0;U<8;++U)if(p.dotCoordinate(L[U])>=0){mL=!1;break}if(mL)return!1}return!0}}F._TmpVector3=(0,mL.e)(3,p.YU.Zero)},12938:(L,U,x)=>{x.d(U,{b:()=>h});var mL=x(12602),p=x(12589),G=x(12940),F=x(12945);const a={min:0,max:0},o={min:0,max:0},A=(L,U,x)=>{const mL=p.YU.Dot(U.centerWorld,L),G=Math.abs(p.YU.Dot(U.directions[0],L))*U.extendSize.x+Math.abs(p.YU.Dot(U.directions[1],L))*U.extendSize.y+Math.abs(p.YU.Dot(U.directions[2],L))*U.extendSize.z;x.min=mL-G,x.max=mL+G},r=(L,U,x)=>(A(L,U,a),A(L,x,o),!(a.min>o.max||o.min>a.max));class h{constructor(L,U,x){this._isLocked=!1,this.boundingBox=new G.c(L,U,x),this.boundingSphere=new F.d(L,U,x)}reConstruct(L,U,x){this.boundingBox.reConstruct(L,U,x),this.boundingSphere.reConstruct(L,U,x)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(L){this._isLocked=L}update(L){this._isLocked||(this.boundingBox._update(L),this.boundingSphere._update(L))}centerOn(L,U){const x=h._TmpVector3[0].p(L).dh(U),mL=h._TmpVector3[1].p(L).addInPlace(U);return this.boundingBox.reConstruct(x,mL,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(x,mL,this.boundingBox.getWorldMatrix()),this}encapsulate(L){const U=p.YU.Minimize(this.minimum,L),x=p.YU.Maximize(this.maximum,L);return this.reConstruct(U,x,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(L){const U=p.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(U);const x=p.TmpVectors.YU[0];return p.YU.TransformCoordinatesToRef(L.boundingBox.minimumWorld,U,x),this.encapsulate(x),p.YU.TransformCoordinatesToRef(L.boundingBox.maximumWorld,U,x),this.encapsulate(x),this}scale(L){return this.boundingBox.scale(L),this.boundingSphere.scale(L),this}isInFrustum(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===U||3===U)&&this.boundingSphere.isCenterInFrustum(L))return!0;if(!this.boundingSphere.isInFrustum(L))return!1;return!(1!==U&&3!==U)||this.boundingBox.isInFrustum(L)}get diagonalLength(){const L=this.boundingBox;return L.maximumWorld.subtractToRef(L.minimumWorld,h._TmpVector3[0]).length()}isCompletelyInFrustum(L){return this.boundingBox.isCompletelyInFrustum(L)}_checkCollision(L){return L._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(L){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(L)&&!!this.boundingBox.intersectsPoint(L))}intersects(L,U){if(!F.d.Intersects(this.boundingSphere,L.boundingSphere))return!1;if(!G.c.Intersects(this.boundingBox,L.boundingBox))return!1;if(!U)return!0;const x=this.boundingBox,mL=L.boundingBox;return!!r(x.directions[0],x,mL)&&(!!r(x.directions[1],x,mL)&&(!!r(x.directions[2],x,mL)&&(!!r(mL.directions[0],x,mL)&&(!!r(mL.directions[1],x,mL)&&(!!r(mL.directions[2],x,mL)&&(!!r(p.YU.Cross(x.directions[0],mL.directions[0]),x,mL)&&(!!r(p.YU.Cross(x.directions[0],mL.directions[1]),x,mL)&&(!!r(p.YU.Cross(x.directions[0],mL.directions[2]),x,mL)&&(!!r(p.YU.Cross(x.directions[1],mL.directions[0]),x,mL)&&(!!r(p.YU.Cross(x.directions[1],mL.directions[1]),x,mL)&&(!!r(p.YU.Cross(x.directions[1],mL.directions[2]),x,mL)&&(!!r(p.YU.Cross(x.directions[2],mL.directions[0]),x,mL)&&(!!r(p.YU.Cross(x.directions[2],mL.directions[1]),x,mL)&&!!r(p.YU.Cross(x.directions[2],mL.directions[2]),x,mL))))))))))))))}}h._TmpVector3=(0,mL.e)(2,p.YU.Zero)},12945:(L,U,x)=>{x.d(U,{d:()=>G});var mL=x(12602),p=x(12589);class G{constructor(L,U,x){this.center=p.YU.Zero(),this.centerWorld=p.YU.Zero(),this.minimum=p.YU.Zero(),this.maximum=p.YU.Zero(),this.reConstruct(L,U,x)}reConstruct(L,U,x){this.minimum.p(L),this.maximum.p(U);const mL=p.YU.Distance(L,U);U.addToRef(L,this.center).scaleInPlace(.5),this.radius=.5*mL,this._update(x||p.Matrix.IdentityReadOnly)}scale(L){const U=this.radius*L,x=G._TmpVector3,mL=x[0].la(U),p=this.center.subtractToRef(mL,x[1]),F=this.center.addToRef(mL,x[2]);return this.reConstruct(p,F,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(L){if(L.isIdentity())this.centerWorld.p(this.center),this.radiusWorld=this.radius;else{p.YU.TransformCoordinatesToRef(this.center,L,this.centerWorld);const U=G._TmpVector3[0];p.YU.TransformNormalFromFloatsToRef(1,1,1,L,U),this.radiusWorld=Math.max(Math.abs(U.x),Math.abs(U.y),Math.abs(U.z))*this.radius}}isInFrustum(L){const U=this.centerWorld,x=this.radiusWorld;for(let mL=0;mL<6;mL++)if(L[mL].dotCoordinate(U)<=-x)return!1;return!0}isCenterInFrustum(L){const U=this.centerWorld;for(let x=0;x<6;x++)if(L[x].dotCoordinate(U)<0)return!1;return!0}intersectsPoint(L){const U=p.YU.DistanceSquared(this.centerWorld,L);return!(this.radiusWorld*this.radiusWorld<U)}static Intersects(L,U){const x=p.YU.DistanceSquared(L.centerWorld,U.centerWorld),mL=L.radiusWorld+U.radiusWorld;return!(mL*mL<x)}static CreateFromCenterAndRadius(L,U,x){this._TmpVector3[0].p(L),this._TmpVector3[1].da(0,0,U),this._TmpVector3[2].p(L),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].dh(this._TmpVector3[1]);const mL=new G(this._TmpVector3[0],this._TmpVector3[2]);return mL._worldMatrix=x||p.Matrix.Identity(),mL}}G._TmpVector3=(0,mL.e)(3,p.YU.Zero)},12966:(L,U,x)=>{function mL(L){-1===L.indexOf("vClipPlane")&&L.push("vClipPlane"),-1===L.indexOf("vClipPlane2")&&L.push("vClipPlane2"),-1===L.indexOf("vClipPlane3")&&L.push("vClipPlane3"),-1===L.indexOf("vClipPlane4")&&L.push("vClipPlane4"),-1===L.indexOf("vClipPlane5")&&L.push("vClipPlane5"),-1===L.indexOf("vClipPlane6")&&L.push("vClipPlane6")}function p(L,U,x){const mL=!!(L.clipPlane??U.clipPlane),p=!!(L.clipPlane2??U.clipPlane2),G=!!(L.clipPlane3??U.clipPlane3),F=!!(L.clipPlane4??U.clipPlane4),a=!!(L.clipPlane5??U.clipPlane5),o=!!(L.clipPlane6??U.clipPlane6);mL&&x.push("#define CLIPPLANE"),p&&x.push("#define CLIPPLANE2"),G&&x.push("#define CLIPPLANE3"),F&&x.push("#define CLIPPLANE4"),a&&x.push("#define CLIPPLANE5"),o&&x.push("#define CLIPPLANE6")}function G(L,U,x){let mL=!1;const p=!!(L.clipPlane??U.clipPlane),G=!!(L.clipPlane2??U.clipPlane2),F=!!(L.clipPlane3??U.clipPlane3),a=!!(L.clipPlane4??U.clipPlane4),o=!!(L.clipPlane5??U.clipPlane5),A=!!(L.clipPlane6??U.clipPlane6);return x.CLIPPLANE!==p&&(x.CLIPPLANE=p,mL=!0),x.CLIPPLANE2!==G&&(x.CLIPPLANE2=G,mL=!0),x.CLIPPLANE3!==F&&(x.CLIPPLANE3=F,mL=!0),x.CLIPPLANE4!==a&&(x.CLIPPLANE4=a,mL=!0),x.CLIPPLANE5!==o&&(x.CLIPPLANE5=o,mL=!0),x.CLIPPLANE6!==A&&(x.CLIPPLANE6=A,mL=!0),mL}function F(L,U,x){let mL=U.clipPlane??x.clipPlane;a(L,"vClipPlane",mL),mL=U.clipPlane2??x.clipPlane2,a(L,"vClipPlane2",mL),mL=U.clipPlane3??x.clipPlane3,a(L,"vClipPlane3",mL),mL=U.clipPlane4??x.clipPlane4,a(L,"vClipPlane4",mL),mL=U.clipPlane5??x.clipPlane5,a(L,"vClipPlane5",mL),mL=U.clipPlane6??x.clipPlane6,a(L,"vClipPlane6",mL)}function a(L,U,x){x&&L.setFloat4(U,x.normal.x,x.normal.y,x.normal.z,x.d)}x.d(U,{e:()=>mL,i:()=>F,l:()=>G,o:()=>p})},12906:(L,U,x)=>{x.d(U,{b:()=>mL});class mL{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(L,U){this._defines[L]||(L<this._currentRank&&(this._currentRank=L),L>this._maxRank&&(this._maxRank=L),this._defines[L]=new Array),this._defines[L].push(U)}addCPUSkinningFallback(L,U){this._mesh=U,L<this._currentRank&&(this._currentRank=L),L>this._maxRank&&(this._maxRank=L)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(L,U){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,L=L.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),U._bonesComputationForcedToCPU=!0;const x=this._mesh.PL();for(let L=0;L<x.meshes.length;L++){const mL=x.meshes[L];if(mL.material){if(mL.computeBonesUsingShaders&&0!==mL.numBoneInfluencers)if(mL.material.getEffect()===U)mL.computeBonesUsingShaders=!1;else if(mL.Sa)for(const L of mL.Sa){if(L.effect===U){mL.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&mL.computeBonesUsingShaders&&mL.numBoneInfluencers>0&&(mL.computeBonesUsingShaders=!1)}}else{const U=this._defines[this._currentRank];if(U)for(let x=0;x<U.length;x++)L=L.replace("#define "+U[x],"");this._currentRank++}return L}}},12915:(L,U,x)=>{x.d(U,{c:()=>V});var mL=x(12571),p=x(12574),G=x(12382),F=x(12391),a=x(12440),o=x(12921),A=x(12846),r=x(12406),h=x(12639),b=x(12704),E=x(12625);class Y{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(L){this._func=L}get funcRef(){return this._funcRef}set funcRef(L){this._funcRef=L}get funcMask(){return this._funcMask}set funcMask(L){this._funcMask=L}get opStencilFail(){return this._opStencilFail}set opStencilFail(L){this._opStencilFail=L}get opDepthFail(){return this._opDepthFail}set opDepthFail(L){this._opDepthFail=L}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(L){this._opStencilDepthPass=L}get mask(){return this._mask}set mask(L){this._mask=L}get enabled(){return this._enabled}set enabled(L){this._enabled=L}getClassName(){return"MaterialStencilState"}copyTo(L){E.e.Clone((()=>L),this)}serialize(){return E.e.Serialize(this)}parse(L,U,x){E.e.Parse((()=>this),L,U,x)}}(0,mL.d)([(0,p.R)()],Y.prototype,"func",null),(0,mL.d)([(0,p.R)()],Y.prototype,"funcRef",null),(0,mL.d)([(0,p.R)()],Y.prototype,"funcMask",null),(0,mL.d)([(0,p.R)()],Y.prototype,"opStencilFail",null),(0,mL.d)([(0,p.R)()],Y.prototype,"opDepthFail",null),(0,mL.d)([(0,p.R)()],Y.prototype,"opStencilDepthPass",null),(0,mL.d)([(0,p.R)()],Y.prototype,"mask",null),(0,mL.d)([(0,p.R)()],Y.prototype,"enabled",null);var S=x(12961);class V{get _supportGlowLayer(){return!1}set _glowModeEnabled(L){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(L){if(this._alpha===L)return;const U=this._alpha;this._alpha=L,1!==U&&1!==L||this.kA(V.MiscDirtyFlag+V.PrePassDirtyFlag)}get alpha(){return this._alpha}set Pa(L){this._backFaceCulling!==L&&(this._backFaceCulling=L,this.kA(V.TextureDirtyFlag))}get Pa(){return this._backFaceCulling}set cullBackFaces(L){this._cullBackFaces!==L&&(this._cullBackFaces=L,this.kA(V.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(L){this._blockDirtyMechanism!==L&&(this._blockDirtyMechanism=L,L||this.hE())}atomicMaterialsUpdate(L){this.blockDirtyMechanism=!0;try{L(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(L){this._onDisposeObserver&&this.oa.remove(this._onDisposeObserver),this._onDisposeObserver=this.oa.add(L)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new F.c),this._onBindObservable}set onBind(L){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(L)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new F.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new F.c),this._onEffectCreatedObservable}set alphaMode(L){this._alphaMode!==L&&(this._alphaMode=L,this.kA(V.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(L){this._needDepthPrePass!==L&&(this._needDepthPrePass=L,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(L){this._fogEnabled!==L&&(this._fogEnabled=L,this.kA(V.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case V.WireFrameFillMode:case V.LineListDrawMode:case V.LineLoopDrawMode:case V.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(L){this.fillMode=L?V.WireFrameFillMode:V.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case V.PointFillMode:case V.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(L){this.fillMode=L?V.PointFillMode:V.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(L){this._fillMode!==L&&(this._fillMode=L,this.kA(V.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(L){const U=this.PL().getEngine().getCaps().fragmentDepthSupported;L&&!U&&r.c.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=L&&U,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(L){this._drawWrapper=L}constructor(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.oa=new F.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.Aa=new Y,this._useUBO=!1,this._fillMode=V.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=L;const p=U||a.c.LastCreatedScene;p&&(this._scene=p,this._dirtyCallbacks={},this._forceGLSL=mL,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=L||G.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new b.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new A.c(this._scene.getEngine(),void 0,void 0,L),this._useUBO=this.PL().getEngine().supportsUniformBuffers,this._createUniformBuffer(),x||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),V.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var L;const U=this.PL().getEngine();null===(L=this._uniformBuffer)||void 0===L||L.dispose(),U.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new A.c(U,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new A.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(L){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.hE(),this.checkReadyOnlyOnce=!0}unfreeze(){this.hE(),this.checkReadyOnlyOnce=!1}isReady(L,U){return!0}isReadyForSubMesh(L,U,x){const mL=U.materialDefines;return!!mL&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=mL,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}PL(){return this._scene}_getEffectiveOrientation(L){return null!==this.sideOrientation?this.sideOrientation:L.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(L){this._transparencyMode!==L&&(this._transparencyMode=L,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===V.MATERIAL_ALPHABLEND||this._transparencyMode===V.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===V.MATERIAL_ALPHATEST||this._transparencyMode===V.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===V.MATERIAL_OPAQUE||this._transparencyMode===V.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(L){return this._hasTransparencyMode?this._transparencyModeIsBlend:L.visibility<1||!this._disableAlphaBlending&&(L.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(L){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(L)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}hE(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const U=this.PL().meshes;for(const x of U)if(x.Sa)for(const U of x.Sa)if(U.ZL()===this)for(const x of U._drawWrappers)x&&this._materialContext===x.materialContext&&(x._wasPreviouslyReady=!1,x._wasPreviouslyUsingInstances=null,x._forceRebindOnNextCall=L);L&&this.kA(V.AllDirtyFlag)}_preBind(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const x=this._scene.getEngine(),mL=(null==U?this.sideOrientation:U)===V.ClockWiseSideOrientation;return x.enableEffect(L||this._getDrawWrapper()),x.setState(this.Pa,this.zOffset,!1,mL,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.Aa,this.zOffsetUnits),mL}bind(L,U){}buildUniformLayout(){const L=this._uniformBuffer;this._eventInfo.ubo=L,this._callbackPluginEventGeneric(8,this._eventInfo),L.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(L,U,x){const mL=x._drawWrapper;this._eventInfo.subMesh=x,this._callbackPluginEventBindForSubMesh(this._eventInfo),mL._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(L){}bindView(L){this._useUBO?this._needToBindSceneUbo=!0:L.setMatrix("view",this.PL().getViewMatrix())}bindViewProjection(L){this._useUBO?this._needToBindSceneUbo=!0:(L.setMatrix("viewProjection",this.PL().getTransformMatrix()),L.setMatrix("projection",this.PL().getProjectionMatrix()))}bindEyePosition(L,U){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(L,U)}_afterBind(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&U&&(this._needToBindSceneUbo=!1,(0,S.n)(U,this.PL().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=L?L.visibility:1,this._onBindObservable&&L&&this._onBindObservable.notifyObservers(L),this.disableDepthWrite){const L=this._scene.getEngine();this._cachedDepthWriteState=L.getDepthWrite(),L.setDepthWrite(!1)}if(this.disableColorWrite){const L=this._scene.getEngine();this._cachedColorWriteState=L.getColorWrite(),L.setColorWrite(!1)}if(0!==this.depthFunction){const L=this._scene.getEngine();this._cachedDepthFunctionState=L.getDepthFunction()||0,L.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(L){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=L,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(L){return null}_clonePlugins(L,U){const x={};if(this._serializePlugins(x),V._ParsePlugins(x,L,this._scene,U),this.pluginManager)for(const mL of this.pluginManager._plugins){const U=L.pluginManager.getPlugin(mL.name);U&&mL.copyTo(U)}}getBindedMeshes(){if(this.meshMap){const L=[];for(const U in this.meshMap){const x=this.meshMap[U];x&&L.push(x)}return L}return this._scene.meshes.filter((L=>L.material===this))}forceCompilation(L,U,x,mL){const p={clipPlane:!1,useInstances:!1,...x},G=this.PL(),F=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const a=()=>{if(!this._scene||!this._scene.getEngine())return;const x=G.clipPlane;if(p.clipPlane&&(G.clipPlane=new h.d(0,0,0,1)),this._storeEffectOnSubMeshes){let x=!0,G=null;if(L.Sa){const U=new o.b(0,0,0,0,0,L,void 0,!1,!1);U.materialDefines&&(U.materialDefines._renderId=-1),this.isReadyForSubMesh(L,U,p.useInstances)||(U.effect&&U.effect.getCompilationError()&&U.effect.allFallbacksProcessed()?G=U.effect.getCompilationError():(x=!1,setTimeout(a,16)))}x&&(this.allowShaderHotSwapping=F,G&&mL&&mL(G),U&&U(this))}else this.isReady()?(this.allowShaderHotSwapping=F,U&&U(this)):setTimeout(a,16);p.clipPlane&&(G.clipPlane=x)};a()}async forceCompilationAsync(L,U){return await new Promise(((x,mL)=>{this.forceCompilation(L,(()=>{x()}),U,(L=>{mL(L)}))}))}kA(L){this.PL().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(V._DirtyCallbackArray.length=0,L&V.ImageProcessingDirtyFlag&&V._DirtyCallbackArray.push(V._ImageProcessingDirtyCallBack),L&V.TextureDirtyFlag&&V._DirtyCallbackArray.push(V._TextureDirtyCallBack),L&V.LightDirtyFlag&&V._DirtyCallbackArray.push(V._LightsDirtyCallBack),L&V.FresnelDirtyFlag&&V._DirtyCallbackArray.push(V._FresnelDirtyCallBack),L&V.AttributesDirtyFlag&&V._DirtyCallbackArray.push(V._AttributeDirtyCallBack),L&V.MiscDirtyFlag&&V._DirtyCallbackArray.push(V._MiscDirtyCallBack),L&V.PrePassDirtyFlag&&V._DirtyCallbackArray.push(V._PrePassDirtyCallBack),V._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(V._RunDirtyCallBacks),this.PL().resetCachedMaterial())}resetDrawCache(){const L=this.PL().meshes;for(const U of L)if(U.Sa)for(const L of U.Sa)L.ZL()===this&&L.resetDrawCache()}_markAllSubMeshesAsDirty(L){const U=this.PL();if(U.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const x=U.meshes;for(const mL of x)if(mL.Sa)for(const x of mL.Sa){if((x.ZL()||(U._hasDefaultMaterial?U.defaultMaterial:null))===this)for(const U of x._drawWrappers)U&&U.defines&&U.defines.markAllAsDirty&&this._materialContext===U.materialContext&&L(U.defines)}}_markScenePrePassDirty(){if(this.PL().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const L=this.PL().enablePrePassRenderer();L&&L.kA()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(V._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(V._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(V._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(V._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(V._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(V._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(V._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(V._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(V._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(V._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const L=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.oa.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(L)}))}}setPrePassRenderer(L){return!1}dispose(L,U,x){const mL=this.PL();if(mL.stopAnimation(this),mL.freeProcessedMaterials(),mL.removeMaterial(this),this._eventInfo.forceDisposeTextures=U,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const L=this._parentContainer.materials.indexOf(this);L>-1&&this._parentContainer.materials.splice(L,1),this._parentContainer=null}if(!0!==x)if(this.meshMap)for(const p in this.meshMap){const L=this.meshMap[p];this._disposeMeshResources(L)}else{const L=mL.meshes;for(const U of L)this._disposeMeshResources(U)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.oa.notifyObservers(this),this.oa.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(L){if(!L)return;const U=L.va,x=L._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(L.Sa&&x)for(const p of L.Sa){const L=p._drawWrappers;for(let G=0;G<L.length;G++){var mL;const F=null===(mL=L[G])||void 0===mL?void 0:mL.effect;if(!F)continue;x[G]===this&&(null===U||void 0===U||U._releaseVertexArrayObject(F),p._removeDrawWrapper(G,!0,!0))}}}else null===U||void 0===U||U._releaseVertexArrayObject(this._drawWrapper.effect);L.material!==this||L.sourceMesh||(L.material=null)}serialize(){const L=E.e.Serialize(this);return L.Aa=this.Aa.serialize(),L.uniqueId=this.uniqueId,this._serializePlugins(L),L}_serializePlugins(L){if(L.plugins={},this.pluginManager)for(const U of this.pluginManager._plugins)U.doNotSerialize||(L.plugins[U.getClassName()]=U.serialize())}static Parse(L,U,x){if(L.customType){if("BABYLON.PBRMaterial"===L.customType&&L.overloadedAlbedo&&(L.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return r.c.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else L.customType="BABYLON.StandardMaterial";const mL=G.Tools.Instantiate(L.customType).Parse(L,U,x);return mL._loadedUniqueId=L.uniqueId,mL}static _ParsePlugins(L,U,x,mL){if(L.plugins)for(const a in L.plugins){var p,F;const o=L.plugins[a];let A=null===(p=U.pluginManager)||void 0===p?void 0:p.getPlugin(o.name);if(!A){const L=G.Tools.Instantiate("BABYLON."+a);L&&(A=new L(U))}null===(F=A)||void 0===F||F.parse(o,x,mL)}}}V.TriangleFillMode=0,V.WireFrameFillMode=1,V.PointFillMode=2,V.PointListDrawMode=3,V.LineListDrawMode=4,V.LineLoopDrawMode=5,V.LineStripDrawMode=6,V.TriangleStripDrawMode=7,V.TriangleFanDrawMode=8,V.ClockWiseSideOrientation=0,V.CounterClockWiseSideOrientation=1,V.ImageProcessingDirtyFlag=64,V.TextureDirtyFlag=1,V.LightDirtyFlag=2,V.FresnelDirtyFlag=4,V.AttributesDirtyFlag=8,V.MiscDirtyFlag=16,V.PrePassDirtyFlag=32,V.AllDirtyFlag=127,V.MATERIAL_OPAQUE=0,V.MATERIAL_ALPHATEST=1,V.MATERIAL_ALPHABLEND=2,V.MATERIAL_ALPHATESTANDBLEND=3,V.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,V.MATERIAL_NORMALBLENDMETHOD_RNM=1,V.OnEventObservable=new F.c,V._AllDirtyCallBack=L=>L.markAllAsDirty(),V._ImageProcessingDirtyCallBack=L=>L.markAsImageProcessingDirty(),V._TextureDirtyCallBack=L=>L.markAsTexturesDirty(),V._FresnelDirtyCallBack=L=>L.markAsFresnelDirty(),V._MiscDirtyCallBack=L=>L.markAsMiscDirty(),V._PrePassDirtyCallBack=L=>L.markAsPrePassDirty(),V._LightsDirtyCallBack=L=>L.markAsLightDirty(),V._AttributeDirtyCallBack=L=>L.markAsAttributesDirty(),V._FresnelAndMiscDirtyCallBack=L=>{V._FresnelDirtyCallBack(L),V._MiscDirtyCallBack(L)},V._TextureAndMiscDirtyCallBack=L=>{V._TextureDirtyCallBack(L),V._MiscDirtyCallBack(L)},V._DirtyCallbackArray=[],V._RunDirtyCallBacks=L=>{for(const U of V._DirtyCallbackArray)U(L)},(0,mL.d)([(0,p.R)()],V.prototype,"id",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"uniqueId",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"name",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"metadata",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"checkReadyOnEveryCall",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"checkReadyOnlyOnce",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"state",void 0),(0,mL.d)([(0,p.R)("alpha")],V.prototype,"_alpha",void 0),(0,mL.d)([(0,p.R)("Pa")],V.prototype,"_backFaceCulling",void 0),(0,mL.d)([(0,p.R)("cullBackFaces")],V.prototype,"_cullBackFaces",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"sideOrientation",void 0),(0,mL.d)([(0,p.R)("alphaMode")],V.prototype,"_alphaMode",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"_needDepthPrePass",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"disableDepthWrite",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"disableColorWrite",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"forceDepthWrite",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"depthFunction",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"separateCullingPass",void 0),(0,mL.d)([(0,p.R)("fogEnabled")],V.prototype,"_fogEnabled",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"pointSize",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"zOffset",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"zOffsetUnits",void 0),(0,mL.d)([(0,p.R)()],V.prototype,"pointsCloud",null),(0,mL.d)([(0,p.R)()],V.prototype,"fillMode",null),(0,mL.d)([(0,p.R)()],V.prototype,"useLogarithmicDepth",null),(0,mL.d)([(0,p.R)()],V.prototype,"transparencyMode",null)},12961:(L,U,x)=>{x.d(U,{B:()=>E,D:()=>b,E:()=>y,I:()=>t,M:()=>i,P:()=>H,S:()=>l,T:()=>n,X:()=>N,_:()=>e,b:()=>f,cb:()=>Z,f:()=>h,gb:()=>Y,i:()=>D,l:()=>r,m:()=>S,n:()=>V,r:()=>Q,s:()=>K,t:()=>q,v:()=>P,z:()=>d});var mL=x(12406),p=x(12637),G=x(12440),F=x(12897),a=x(12966);const o=p.QU.Black(),A={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function r(L,U,x){if(!L||L.LOGARITHMICDEPTH||L.indexOf&&L.indexOf("LOGARITHMICDEPTH")>=0){const L=x.activeCamera;1===L.mode&&mL.c.Error("Logarithmic depth is not compatible with orthographic cameras!",20),U.setFloat("logarithmicDepthConstant",2/(Math.log(L.maxZ+1)/Math.LN2))}}function h(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]&&arguments[3];x&&L.fogEnabled&&(!U||U.applyFog)&&0!==L.fogMode&&(x.setFloat4("vFogInfos",L.fogMode,L.fogStart,L.fogEnd,L.fogDensity),mL?(L.fogColor.toLinearSpaceToRef(o,L.getEngine().useExactSrgbConversions),x.setColor3("vFogColor",o)):x.setColor3("vFogColor",L.fogColor))}function b(L,U,x,mL,p,G,F,a,o,r){const h=L.numMaxInfluencers||L.numInfluencers;return h<=0?0:(U.push("#define MORPHTARGETS"),L.hasPositions&&U.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),L.hasNormals&&U.push("#define MORPHTARGETTEXTURE_HASNORMALS"),L.hasTangents&&U.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),L.hasUVs&&U.push("#define MORPHTARGETTEXTURE_HASUVS"),L.hasUV2s&&U.push("#define MORPHTARGETTEXTURE_HASUV2S"),L.hasColors&&U.push("#define MORPHTARGETTEXTURE_HASCOLORS"),L.supportsPositions&&p&&U.push("#define MORPHTARGETS_POSITION"),L.supportsNormals&&G&&U.push("#define MORPHTARGETS_NORMAL"),L.supportsTangents&&F&&U.push("#define MORPHTARGETS_TANGENT"),L.supportsUVs&&a&&U.push("#define MORPHTARGETS_UV"),L.supportsUV2s&&o&&U.push("#define MORPHTARGETS_UV2"),L.supportsColors&&r&&U.push("#define MORPHTARGETS_COLOR"),U.push("#define NUM_MORPH_INFLUENCERS "+h),L.isUsingTextureForTargets&&U.push("#define MORPHTARGETS_TEXTURE"),A.NUM_MORPH_INFLUENCERS=h,A.NORMAL=G,A.TANGENT=F,A.UV=a,A.UV2=o,A.COLOR=r,E(x,mL,A,p),h)}function E(L,U,x){let p=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const F=x.NUM_MORPH_INFLUENCERS;if(F>0&&G.c.LastCreatedEngine){const a=G.c.LastCreatedEngine.getCaps().maxVertexAttribs,o=U.morphTargetManager;if(null!==o&&void 0!==o&&o.isUsingTextureForTargets)return;const A=o&&o.supportsPositions&&p,r=o&&o.supportsNormals&&x.NORMAL,h=o&&o.supportsTangents&&x.TANGENT,b=o&&o.supportsUVs&&x.UV1,E=o&&o.supportsUV2s&&x.UV2,Y=o&&o.supportsColors&&x.VERTEXCOLOR;for(let x=0;x<F;x++)A&&L.push("position"+x),r&&L.push("normal"+x),h&&L.push("tangent"+x),b&&L.push("uv_"+x),E&&L.push("uv2_"+x),Y&&L.push("color"+x),L.length>a&&mL.c.Error("Cannot add more vertex attributes for mesh "+U.name)}}function Y(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];L.push("world0"),L.push("world1"),L.push("world2"),L.push("world3"),U&&(L.push("previousWorld0"),L.push("previousWorld1"),L.push("previousWorld2"),L.push("previousWorld3"))}function S(L,U){const x=L.morphTargetManager;L&&x&&U.setFloatArray("morphTargetInfluences",x.influences)}function V(L,U){U.bindToEffect(L,"Scene")}function H(L,U,x){U._needUVs=!0,U[x]=!0,L.optimizeUVAllocation&&L.getTextureMatrix().isIdentityAs3x2()?(U[x+"DIRECTUV"]=L.coordinatesIndex+1,U["MAINUV"+(L.coordinatesIndex+1)]=!0):U[x+"DIRECTUV"]=0}function Q(L,U,x){const mL=L.getTextureMatrix();U.qa(x+"Matrix",mL)}function q(L,U,x){x.BAKED_VERTEX_ANIMATION_TEXTURE&&x.INSTANCES&&L.push("bakedVertexAnimationSettingsInstanced")}function f(L,U,x){var mL;if(U&&L&&(L.computeBonesUsingShaders&&U._bonesComputationForcedToCPU&&(L.computeBonesUsingShaders=!1),L.useBones&&L.computeBonesUsingShaders&&L.skeleton)){const p=L.skeleton;if(p.isUsingTextureForMatrices&&U.getUniformIndex("boneTextureWidth")>-1){const x=p.getTransformMatrixTexture(L);U.setTexture("boneSampler",x),U.setFloat("boneTextureWidth",4*(p.bones.length+1))}else{const G=p.getTransformMatrices(L);G&&(U.setMatrices("mBones",G),x&&L.PL().prePassRenderer&&L.PL().prePassRenderer.getIndex(2)&&(x.previousBones[L.uniqueId]||(x.previousBones[L.uniqueId]=G.slice()),U.setMatrices("mPreviousBones",x.previousBones[L.uniqueId]),mL=G,x.previousBones[L.uniqueId].set(mL)))}}}function v(L,U,x,mL,p){let G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];L._bindLight(U,x,mL,p,G)}function D(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const G=Math.min(U.lightSources.length,p);for(let F=0;F<G;F++){v(U.lightSources[F],F,L,x,"boolean"===typeof mL?mL:mL.SPECULARTERM,U.receiveShadows)}}function P(L,U,x,mL){x.NUM_BONE_INFLUENCERS>0&&(mL.addCPUSkinningFallback(0,U),L.push("matricesIndices"),L.push("matricesWeights"),x.NUM_BONE_INFLUENCERS>4&&(L.push("matricesIndicesExtra"),L.push("matricesWeightsExtra")))}function d(L,U){(U.INSTANCES||U.THIN_INSTANCES)&&Y(L,!!U.PREPASS_VELOCITY),U.INSTANCESCOLOR&&L.push("instanceColor")}function K(L,U){let x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,p=0;for(let G=0;G<x&&L["LIGHT"+G];G++)G>0&&(p=mL+G,U.addFallback(p,"LIGHT"+G)),L.SHADOWS||(L["SHADOW"+G]&&U.addFallback(mL,"SHADOW"+G),L["SHADOWPCF"+G]&&U.addFallback(mL,"SHADOWPCF"+G),L["SHADOWPCSS"+G]&&U.addFallback(mL,"SHADOWPCSS"+G),L["SHADOWPOISSON"+G]&&U.addFallback(mL,"SHADOWPOISSON"+G),L["SHADOWESM"+G]&&U.addFallback(mL,"SHADOWESM"+G),L["SHADOWCLOSEESM"+G]&&U.addFallback(mL,"SHADOWCLOSEESM"+G));return p++}function l(L,U,x,mL,p,G,F){let a=arguments.length>7&&void 0!==arguments[7]&&arguments[7];F._areMiscDirty&&(F.LOGARITHMICDEPTH=x,F.POINTSIZE=mL,F.FOG=p&&function(L,U){return U.fogEnabled&&L.applyFog&&0!==U.fogMode}(L,U),F.NONUNIFORMSCALING=L.nonUniformScaling,F.ALPHATEST=G,F.DECAL_AFTER_DETAIL=a)}function i(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!x._areLightsDirty)return x._needNormals;let F=0;const a={needNormals:x._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(L.lightsEnabled&&!G)for(const A of U.lightSources)if(X(L,U,A,F,x,mL,a),F++,F===p)break;x.SPECULARTERM=a.specularEnabled,x.SHADOWS=a.shadowEnabled;for(let A=F;A<p;A++)void 0!==x["LIGHT"+A]&&(x["LIGHT"+A]=!1,x["HEMILIGHT"+A]=!1,x["POINTLIGHT"+A]=!1,x["DIRLIGHT"+A]=!1,x["SPOTLIGHT"+A]=!1,x["AREALIGHT"+A]=!1,x["SHADOW"+A]=!1,x["SHADOWCSM"+A]=!1,x["SHADOWCSMDEBUG"+A]=!1,x["SHADOWCSMNUM_CASCADES"+A]=!1,x["SHADOWCSMUSESHADOWMAXZ"+A]=!1,x["SHADOWCSMNOBLEND"+A]=!1,x["SHADOWCSM_RIGHTHANDED"+A]=!1,x["SHADOWPCF"+A]=!1,x["SHADOWPCSS"+A]=!1,x["SHADOWPOISSON"+A]=!1,x["SHADOWESM"+A]=!1,x["SHADOWCLOSEESM"+A]=!1,x["SHADOWCUBE"+A]=!1,x["SHADOWLOWQUALITY"+A]=!1,x["SHADOWMEDIUMQUALITY"+A]=!1);const o=L.getEngine().getCaps();return void 0===x.SHADOWFLOAT&&(a.needRebuild=!0),x.SHADOWFLOAT=a.shadowEnabled&&(o.textureFloatRender&&o.textureFloatLinearFiltering||o.textureHalfFloatRender&&o.textureHalfFloatLinearFiltering),x.LIGHTMAPEXCLUDED=a.lightmapMode,a.needRebuild&&x.rebuild(),a.needNormals}function X(L,U,x,mL,p,G,a){switch(a.needNormals=!0,void 0===p["LIGHT"+mL]&&(a.needRebuild=!0),p["LIGHT"+mL]=!0,p["SPOTLIGHT"+mL]=!1,p["HEMILIGHT"+mL]=!1,p["POINTLIGHT"+mL]=!1,p["DIRLIGHT"+mL]=!1,p["AREALIGHT"+mL]=!1,x.prepareLightSpecificDefines(p,mL),p["LIGHT_FALLOFF_PHYSICAL"+mL]=!1,p["LIGHT_FALLOFF_GLTF"+mL]=!1,p["LIGHT_FALLOFF_STANDARD"+mL]=!1,x.falloffType){case F.d.FALLOFF_GLTF:p["LIGHT_FALLOFF_GLTF"+mL]=!0;break;case F.d.FALLOFF_PHYSICAL:p["LIGHT_FALLOFF_PHYSICAL"+mL]=!0;break;case F.d.FALLOFF_STANDARD:p["LIGHT_FALLOFF_STANDARD"+mL]=!0}if(G&&!x.Pr.equalsFloats(0,0,0)&&(a.specularEnabled=!0),p["SHADOW"+mL]=!1,p["SHADOWCSM"+mL]=!1,p["SHADOWCSMDEBUG"+mL]=!1,p["SHADOWCSMNUM_CASCADES"+mL]=!1,p["SHADOWCSMUSESHADOWMAXZ"+mL]=!1,p["SHADOWCSMNOBLEND"+mL]=!1,p["SHADOWCSM_RIGHTHANDED"+mL]=!1,p["SHADOWPCF"+mL]=!1,p["SHADOWPCSS"+mL]=!1,p["SHADOWPOISSON"+mL]=!1,p["SHADOWESM"+mL]=!1,p["SHADOWCLOSEESM"+mL]=!1,p["SHADOWCUBE"+mL]=!1,p["SHADOWLOWQUALITY"+mL]=!1,p["SHADOWMEDIUMQUALITY"+mL]=!1,U&&U.receiveShadows&&L.shadowsEnabled&&x.shadowEnabled){const U=x.getShadowGenerator(L.activeCamera)??x.getShadowGenerator();if(U){const L=U.getShadowMap();L&&L.renderList&&L.renderList.length>0&&(a.shadowEnabled=!0,U.prepareDefines(p,mL))}}x.lightmapMode!=F.d.LIGHTMAP_DEFAULT?(a.lightmapMode=!0,p["LIGHTMAPEXCLUDED"+mL]=!0,p["LIGHTMAPNOSPECULAR"+mL]=x.lightmapMode==F.d.LIGHTMAP_SHADOWSONLY):(p["LIGHTMAPEXCLUDED"+mL]=!1,p["LIGHTMAPNOSPECULAR"+mL]=!1)}function t(L,U,x,mL,p){let G=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,F=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=function(L,U){let x=!1;if(L.activeCamera){const mL=U.CAMERA_ORTHOGRAPHIC?1:0,p=U.CAMERA_PERSPECTIVE?1:0,G=1===L.activeCamera.mode?1:0,F=0===L.activeCamera.mode?1:0;(mL^G||p^F)&&(U.CAMERA_ORTHOGRAPHIC=1===G,U.CAMERA_PERSPECTIVE=1===F,x=!0)}return x}(L,mL);!1!==G&&(o=(0,a.l)(x,L,mL)),mL.DEPTHPREPASS!==!U.getColorWrite()&&(mL.DEPTHPREPASS=!mL.DEPTHPREPASS,o=!0),mL.INSTANCES!==p&&(mL.INSTANCES=p,o=!0),mL.THIN_INSTANCES!==F&&(mL.THIN_INSTANCES=F,o=!0),o&&mL.markAsUnprocessed()}function y(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]&&arguments[4],G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],F=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!U._areAttributesDirty&&U._needNormals===U._normals&&U._needUVs===U._uvs)return!1;U._normals=U._needNormals,U._uvs=U._needUVs,U.NORMAL=U._needNormals&&L.isVerticesDataPresent("normal"),U._needNormals&&L.isVerticesDataPresent("tangent")&&(U.TANGENT=!0);for(let a=1;a<=6;++a)U["UV"+a]=!!U._needUVs&&L.isVerticesDataPresent(`uv${1===a?"":a}`);if(x){const x=L.useVertexColors&&L.isVerticesDataPresent("color");U.VERTEXCOLOR=x,U.VERTEXALPHA=L.hasVertexAlpha&&x&&G}return L.isVerticesDataPresent("instanceColor")&&(L.hasInstances||L.hasThinInstances)&&(U.INSTANCESCOLOR=!0),mL&&function(L,U){if(L.useBones&&L.computeBonesUsingShaders&&L.skeleton){U.NUM_BONE_INFLUENCERS=L.numBoneInfluencers;const x=void 0!==U.BONETEXTURE;if(L.skeleton.isUsingTextureForMatrices&&x)U.BONETEXTURE=!0;else{U.BonesPerMesh=L.skeleton.bones.length+1,U.BONETEXTURE=!x&&void 0;const mL=L.PL().prePassRenderer;if(mL&&mL.enabled){const x=-1===mL.excludedSkinnedMesh.indexOf(L);U.BONES_VELOCITY_ENABLED=x}}}else U.NUM_BONE_INFLUENCERS=0,U.BonesPerMesh=0,void 0!==U.BONETEXTURE&&(U.BONETEXTURE=!1)}(L,U),p&&function(L,U){const x=L.morphTargetManager;x?(U.MORPHTARGETS_UV=x.supportsUVs&&U.UV1,U.MORPHTARGETS_UV2=x.supportsUV2s&&U.UV2,U.MORPHTARGETS_TANGENT=x.supportsTangents&&U.TANGENT,U.MORPHTARGETS_NORMAL=x.supportsNormals&&U.NORMAL,U.MORPHTARGETS_POSITION=x.supportsPositions,U.MORPHTARGETS_COLOR=x.supportsColors,U.MORPHTARGETTEXTURE_HASUVS=x.hasUVs,U.MORPHTARGETTEXTURE_HASUV2S=x.hasUV2s,U.MORPHTARGETTEXTURE_HASTANGENTS=x.hasTangents,U.MORPHTARGETTEXTURE_HASNORMALS=x.hasNormals,U.MORPHTARGETTEXTURE_HASPOSITIONS=x.hasPositions,U.MORPHTARGETTEXTURE_HASCOLORS=x.hasColors,U.NUM_MORPH_INFLUENCERS=x.numMaxInfluencers||x.numInfluencers,U.MORPHTARGETS=U.NUM_MORPH_INFLUENCERS>0,U.MORPHTARGETS_TEXTURE=x.isUsingTextureForTargets):(U.MORPHTARGETS_UV=!1,U.MORPHTARGETS_UV2=!1,U.MORPHTARGETS_TANGENT=!1,U.MORPHTARGETS_NORMAL=!1,U.MORPHTARGETS_POSITION=!1,U.MORPHTARGETS_COLOR=!1,U.MORPHTARGETTEXTURE_HASUVS=!1,U.MORPHTARGETTEXTURE_HASUV2S=!1,U.MORPHTARGETTEXTURE_HASTANGENTS=!1,U.MORPHTARGETTEXTURE_HASNORMALS=!1,U.MORPHTARGETTEXTURE_HASPOSITIONS=!1,U.MORPHTARGETTEXTURE_HAS_COLORS=!1,U.MORPHTARGETS=!1,U.NUM_MORPH_INFLUENCERS=0)}(L,U),F&&function(L,U){const x=L.bakedVertexAnimationManager;U.BAKED_VERTEX_ANIMATION_TEXTURE=!(!x||!x.isEnabled)}(L,U),!0}function n(L,U){if(L.activeCamera){const x=U.MULTIVIEW;U.MULTIVIEW=null!==L.activeCamera.outputRenderTarget&&L.activeCamera.outputRenderTarget.getViewCount()>1,U.MULTIVIEW!=x&&U.markAsUnprocessed()}}function N(L,U,x){const mL=U.ORDER_INDEPENDENT_TRANSPARENCY,p=U.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;U.ORDER_INDEPENDENT_TRANSPARENCY=L.useOrderIndependentTransparency&&x,U.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!L.getEngine().getCaps().textureFloatLinearFiltering,mL===U.ORDER_INDEPENDENT_TRANSPARENCY&&p===U.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||U.markAsUnprocessed()}function e(L,U,x){const mL=U.PREPASS;if(!U._arePrePassDirty)return;const p=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(L.prePassRenderer&&L.prePassRenderer.enabled&&x){U.PREPASS=!0,U.SCENE_MRT_COUNT=L.prePassRenderer.mrtCount,U.PREPASS_NORMAL_WORLDSPACE=L.prePassRenderer.generateNormalsInWorldSpace,U.PREPASS_COLOR=!0,U.PREPASS_COLOR_INDEX=0;for(let x=0;x<p.length;x++){const mL=L.prePassRenderer.getIndex(p[x].type);-1!==mL?(U[p[x].define]=!0,U[p[x].index]=mL):U[p[x].define]=!1}}else{U.PREPASS=!1;for(let L=0;L<p.length;L++)U[p[L].define]=!1}U.PREPASS!=mL&&(U.markAsUnprocessed(),U.markAsImageProcessingDirty())}function u(L,U,x,mL){let p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6&&void 0!==arguments[6]&&arguments[6];p&&p.push("Light"+L),G||(U.push("vLightData"+L,"vLightDiffuse"+L,"vLightSpecular"+L,"vLightDirection"+L,"vLightWidth"+L,"vLightHeight"+L,"vLightFalloff"+L,"vLightGround"+L,"lightMatrix"+L,"shadowsInfo"+L,"depthValues"+L),x.push("shadowTexture"+L),x.push("depthTexture"+L),U.push("viewFrustumZ"+L,"cascadeBlendFactor"+L,"lightSizeUVCorrection"+L,"depthCorrection"+L,"penumbraDarkness"+L,"frustumLengths"+L),mL&&(x.push("projectionLightTexture"+L),U.push("textureProjectionMatrix"+L)),F&&x.push("iesLightTexture"+L))}function Z(L,U,x){let mL,p,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(L.uniformsNames){const F=L;mL=F.uniformsNames,p=F.uniformBuffersNames,U=F.samplers,x=F.defines,G=F.maxSimultaneousLights||0}else mL=L,U||(U=[]);for(let F=0;F<G&&x["LIGHT"+F];F++)u(F,mL,U,x["PROJECTEDLIGHTTEXTURE"+F],p,!1,x["IESLIGHTTEXTURE"+F]);x.NUM_MORPH_INFLUENCERS&&(mL.push("morphTargetInfluences"),mL.push("morphTargetCount")),x.BAKED_VERTEX_ANIMATION_TEXTURE&&(mL.push("bakedVertexAnimationSettings"),mL.push("bakedVertexAnimationTextureSizeInverted"),mL.push("bakedVertexAnimationTime"),U.push("bakedVertexAnimationTexture"))}},12909:(L,U,x)=>{x.d(U,{d:()=>G});var mL=x(12589),p=x(12915);class G extends p.c{constructor(L,U){let x=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(L,U,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new mL.Matrix,this._storeEffectOnSubMeshes=x}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(L,U){return!!L&&(!this._storeEffectOnSubMeshes||(!L.Sa||0===L.Sa.length||this.isReadyForSubMesh(L,L.Sa[0],U)))}_isReadyForSubMesh(L){const U=L.materialDefines;return!(this.checkReadyOnEveryCall||!L.effect||!U||U._renderId!==this.PL().getRenderId())}bindOnlyWorldMatrix(L){this._activeEffect.setMatrix("world",L)}bindOnlyNormalMatrix(L){this._activeEffect.setMatrix("normalMatrix",L)}bind(L,U){U&&this.bindForSubMesh(L,U,U.Sa[0])}_afterBind(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,x=arguments.length>2?arguments[2]:void 0;super._afterBind(L,U,x),this.PL()._cachedEffect=U,x?x._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return x._drawWrapper._forceRebindOnNextCall||L.isCachedMaterialInvalid(this,U,mL)}dispose(L,U,x){this._activeEffect=void 0,super.dispose(L,U,x)}}},12952:(L,U,x)=>{x.d(U,{e:()=>a,h:()=>o});var mL=x(12571),p=x(12589),G=x(12574);class F{static extractMinAndMaxIndexed(L,U,x,mL,p,G){for(let F=x;F<x+mL;F++){const x=3*U[F],mL=L[x],a=L[x+1],o=L[x+2];p.minimizeInPlaceFromFloats(mL,a,o),G.maximizeInPlaceFromFloats(mL,a,o)}}static extractMinAndMax(L,U,x,mL,p,G){for(let F=U,a=U*mL;F<U+x;F++,a+=mL){const U=L[a],x=L[a+1],mL=L[a+2];p.minimizeInPlaceFromFloats(U,x,mL),G.maximizeInPlaceFromFloats(U,x,mL)}}}function a(L,U,x,mL){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const a=new p.YU(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new p.YU(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return F.extractMinAndMaxIndexed(L,U,x,mL,a,o),G&&(a.x-=a.x*G.x+G.y,a.y-=a.y*G.x+G.y,a.z-=a.z*G.x+G.y,o.x+=o.x*G.x+G.y,o.y+=o.y*G.x+G.y,o.z+=o.z*G.x+G.y),{minimum:a,maximum:o}}function o(L,U,x){let mL=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,G=arguments.length>4?arguments[4]:void 0;const a=new p.YU(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new p.YU(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return G||(G=3),F.extractMinAndMax(L,U,x,G,a,o),mL&&(a.x-=a.x*mL.x+mL.y,a.y-=a.y*mL.x+mL.y,a.z-=a.z*mL.x+mL.y,o.x+=o.x*mL.x+mL.y,o.y+=o.y*mL.x+mL.y,o.z+=o.z*mL.x+mL.y),{minimum:a,maximum:o}}(0,mL.d)([G.g.filter((function(){for(var L=arguments.length,U=new Array(L),x=0;x<L;x++)U[x]=arguments[x];let[mL,p]=U;return!Array.isArray(mL)&&!Array.isArray(p)}))],F,"extractMinAndMaxIndexed",null),(0,mL.d)([G.g.filter((function(){for(var L=arguments.length,U=new Array(L),x=0;x<L;x++)U[x]=arguments[x];let[mL]=U;return!Array.isArray(mL)}))],F,"extractMinAndMax",null)},12921:(L,U,x)=>{x.d(U,{b:()=>o});var mL=x(12666),p=x(12929),G=x(12938),F=x(12952),a=x(12704);class o{get materialDefines(){var L;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(L=this._getDrawWrapper())||void 0===L?void 0:L.defines}set materialDefines(L){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=L}_getDrawWrapper(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];L=L??this._engine.currentRenderPassId;let x=this._drawWrappers[L];return!x&&U&&(this._drawWrappers[L]=x=new a.e(this._mesh.PL().getEngine())),x}_removeDrawWrapper(L){let U=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var x;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(x=this._drawWrappers[L])||void 0===x||x.dispose(U));this._drawWrappers[L]=void 0}get effect(){var L;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(L=this._getDrawWrapper())||void 0===L?void 0:L.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(L){this._mainDrawWrapperOverride=L}setEffect(L){let U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,x=arguments.length>2?arguments[2]:void 0,mL=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const p=this._drawWrapper;p.setEffect(L,U,mL),void 0!==x&&(p.materialContext=x),L||(p.defines=null,p.materialContext=void 0)}resetDrawCache(L){let U=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==L)return void this._removeDrawWrapper(L,!0,U);for(const L of this._drawWrappers)null===L||void 0===L||L.dispose(U)}this._drawWrappers=[]}static AddToMesh(L,U,x,mL,p,G,F){return new o(L,U,x,mL,p,G,F,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(L,U,x,mL,p,G,F){let a=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=L,this.verticesStart=U,this.verticesCount=x,this.indexStart=mL,this.indexCount=p,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=G,this._renderingMesh=F||G,o&&G.Sa.push(this),this._engine=this._mesh.PL().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=G.Sa.length-1,a&&(this.refreshBoundingInfo(),G.fa(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(L){return this._boundingInfo=L,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const L=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return L||this._renderingMesh}ZL(){let L=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const U=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!U)return L&&this._mesh.PL()._hasDefaultMaterial?this._mesh.PL().defaultMaterial:null;if(this._isMultiMaterial(U)){const L=U.getSubMaterial(this.materialIndex);return this._currentMaterial!==L&&(this._currentMaterial=L,this.resetDrawCache()),L}return U}_isMultiMaterial(L){return void 0!==L.getSubMaterial}refreshBoundingInfo(){let L=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.va)return this;if(L||(L=this._renderingMesh.getVerticesData(mL.h.PositionKind)),!L)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const U=this._renderingMesh.Da();let x;if(0===this.indexStart&&this.indexCount===U.length){const L=this._renderingMesh.getBoundingInfo();x={minimum:L.minimum.clone(),maximum:L.maximum.clone()}}else x=(0,F.e)(L,U,this.indexStart,this.indexCount,this._renderingMesh.va.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(x.minimum,x.maximum):this._boundingInfo=new G.b(x.minimum,x.maximum),this}_checkCollision(L){return this.getBoundingInfo()._checkCollision(L)}updateBoundingInfo(L){let U=this.getBoundingInfo();return U||(this.refreshBoundingInfo(),U=this.getBoundingInfo()),U&&U.update(L),this}isInFrustum(L){const U=this.getBoundingInfo();return!!U&&U.isInFrustum(L,this._mesh.Jh)}isCompletelyInFrustum(L){const U=this.getBoundingInfo();return!!U&&U.isCompletelyInFrustum(L)}render(L){return this._renderingMesh.render(this,L,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(L,U){if(!this._linesIndexBuffer){const x=6*Math.floor(this.indexCount/3),mL=this.verticesStart+this.verticesCount>65535?new Uint32Array(x):new Uint16Array(x);let p=0;if(0===L.length)for(let L=this.indexStart;L<this.indexStart+this.indexCount;L+=3)mL[p++]=L,mL[p++]=L+1,mL[p++]=L+1,mL[p++]=L+2,mL[p++]=L+2,mL[p++]=L;else for(let U=this.indexStart;U<this.indexStart+this.indexCount;U+=3)mL[p++]=L[U],mL[p++]=L[U+1],mL[p++]=L[U+1],mL[p++]=L[U+2],mL[p++]=L[U+2],mL[p++]=L[U];this._linesIndexBuffer=U.createIndexBuffer(mL),this._linesIndexCount=mL.length}return this._linesIndexBuffer}canIntersects(L){const U=this.getBoundingInfo();return!!U&&L.intersectsBox(U.boundingBox)}intersects(L,U,x,mL,p){const G=this.ZL();if(!G)return null;let F=3,a=!1;switch(G.fillMode){case 3:case 5:case 6:case 8:return null;case 7:F=1,a=!0}return 4===G.fillMode?x.length?this._intersectLines(L,U,x,this._mesh.intersectionThreshold,mL):this._intersectUnIndexedLines(L,U,x,this._mesh.intersectionThreshold,mL):!x.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(L,U,x,mL,p):this._intersectTriangles(L,U,x,F,a,mL,p)}_intersectLines(L,U,x,mL,G){let F=null;for(let a=this.indexStart;a<this.indexStart+this.indexCount;a+=2){const o=U[x[a]],A=U[x[a+1]],r=L.intersectionSegment(o,A,mL);if(!(r<0)&&((G||!F||r<F.distance)&&(F=new p.c(null,null,r),F.faceId=a/2,G)))break}return F}_intersectUnIndexedLines(L,U,x,mL,G){let F=null;for(let a=this.verticesStart;a<this.verticesStart+this.verticesCount;a+=2){const x=U[a],o=U[a+1],A=L.intersectionSegment(x,o,mL);if(!(A<0)&&((G||!F||A<F.distance)&&(F=new p.c(null,null,A),F.faceId=a/2,G)))break}return F}_intersectTriangles(L,U,x,mL,p,G,F){let a=null,o=-1;for(let A=this.indexStart;A<this.indexStart+this.indexCount-(3-mL);A+=mL){o++;const mL=x[A],r=x[A+1],h=x[A+2];if(p&&4294967295===h){A+=2;continue}const b=U[mL],E=U[r],Y=U[h];if(!b||!E||!Y)continue;if(F&&!F(b,E,Y,L,mL,r,h))continue;const S=L.intersectsTriangle(b,E,Y);if(S){if(S.distance<0)continue;if((G||!a||S.distance<a.distance)&&(a=S,a.faceId=o,G))break}}return a}_intersectUnIndexedTriangles(L,U,x,mL,p){let G=null;for(let F=this.verticesStart;F<this.verticesStart+this.verticesCount;F+=3){const x=U[F],a=U[F+1],o=U[F+2];if(p&&!p(x,a,o,L,-1,-1,-1))continue;const A=L.intersectsTriangle(x,a,o);if(A){if(A.distance<0)continue;if((mL||!G||A.distance<G.distance)&&(G=A,G.faceId=F/3,mL))break}}return G}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(L,U){const x=new o(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,L,U,!1);if(!this.IsGlobal){const L=this.getBoundingInfo();if(!L)return x;x._boundingInfo=new G.b(L.minimum,L.maximum)}return x}dispose(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.PL().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const U=this._mesh.Sa.indexOf(this);this._mesh.Sa.splice(U,1),this.resetDrawCache(void 0,L)}getClassName(){return"SubMesh"}static CreateFromIndices(L,U,x,mL,p){let G=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],F=Number.MAX_VALUE,a=-Number.MAX_VALUE;const A=(p||mL).Da();for(let o=U;o<U+x;o++){const L=A[o];L<F&&(F=L),L>a&&(a=L)}return new o(L,F,a-F+1,U,x,mL,p,G)}}}}]);