"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[24],{13162:(D,h,o)=>{o.d(h,{d:()=>H});class H{constructor(D,h,o){this.bu=D,this.bv=h,this.distance=o,this.faceId=0,this.subMeshId=0}}},13171:(D,h,o)=>{o.d(h,{b:()=>M});var H=o(12836),g=o(12831),j=o(12833);class M{constructor(D,h,o){this.vectors=(0,H.b)(8,g.Gh.Zero),this.center=g.Gh.Zero(),this.centerWorld=g.Gh.Zero(),this.extendSize=g.Gh.Zero(),this.extendSizeWorld=g.Gh.Zero(),this.directions=(0,H.b)(3,g.Gh.Zero),this.vectorsWorld=(0,H.b)(8,g.Gh.Zero),this.minimumWorld=g.Gh.Zero(),this.maximumWorld=g.Gh.Zero(),this.minimum=g.Gh.Zero(),this.maximum=g.Gh.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(D,h,o)}reConstruct(D,h,o){const H=D.x,j=D.y,M=D.z,R=h.x,t=h.y,S=h.z,k=this.vectors;this.minimum.Qg(H,j,M),this.maximum.Qg(R,t,S),k[0].Qg(H,j,M),k[1].Qg(R,t,S),k[2].Qg(R,j,M),k[3].Qg(H,t,M),k[4].Qg(H,j,S),k[5].Qg(R,t,M),k[6].Qg(H,t,S),k[7].Qg(R,j,S),h.addToRef(D,this.center).scaleInPlace(.5),h.subtractToRef(D,this.extendSize).scaleInPlace(.5),this._worldMatrix=o||g.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(D){const h=M._TmpVector3,o=this.maximum.subtractToRef(this.minimum,h[0]),H=o.length();o.normalizeFromLength(H);const g=H*D,j=o.scaleInPlace(.5*g),R=this.center.subtractToRef(j,h[1]),t=this.center.addToRef(j,h[2]);return this.reConstruct(R,t,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(D){const h=this.minimumWorld,o=this.maximumWorld,H=this.directions,j=this.vectorsWorld,M=this.vectors;if(D.isIdentity()){h.M(this.minimum),o.M(this.maximum);for(let D=0;D<8;++D)j[D].M(M[D]);this.extendSizeWorld.M(this.extendSize),this.centerWorld.M(this.center)}else{h.qg(Number.MAX_VALUE),o.qg(-Number.MAX_VALUE);for(let H=0;H<8;++H){const R=j[H];g.Gh.TransformCoordinatesToRef(M[H],D,R),h.minimizeInPlace(R),o.maximizeInPlace(R)}o.subtractToRef(h,this.extendSizeWorld).scaleInPlace(.5),o.addToRef(h,this.centerWorld).scaleInPlace(.5)}g.Gh.FromArrayToRef(D.m,0,H[0]),g.Gh.FromArrayToRef(D.m,4,H[1]),g.Gh.FromArrayToRef(D.m,8,H[2]),this._worldMatrix=D}isInFrustum(D){return M.IsInFrustum(this.vectorsWorld,D)}isCompletelyInFrustum(D){return M.IsCompletelyInFrustum(this.vectorsWorld,D)}intersectsPoint(D){const h=this.minimumWorld,o=this.maximumWorld,H=h.x,g=h.y,M=h.z,R=o.x,t=o.y,S=o.z,k=D.x,K=D.y,Q=D.z,v=-j.d;return!(R-k<v||v>k-H)&&(!(t-K<v||v>K-g)&&!(S-Q<v||v>Q-M))}intersectsSphere(D){return M.IntersectsSphere(this.minimumWorld,this.maximumWorld,D.centerWorld,D.radiusWorld)}intersectsMinMax(D,h){const o=this.minimumWorld,H=this.maximumWorld,g=o.x,j=o.y,M=o.z,R=H.x,t=H.y,S=H.z,k=D.x,K=D.y,Q=D.z,v=h.x,r=h.y,B=h.z;return!(R<k||g>v)&&(!(t<K||j>r)&&!(S<Q||M>B))}dispose(){var D,h;null===(D=this._drawWrapperFront)||void 0===D||D.dispose(),null===(h=this._drawWrapperBack)||void 0===h||h.dispose()}static Intersects(D,h){return D.intersectsMinMax(h.minimumWorld,h.maximumWorld)}static IntersectsSphere(D,h,o,H){const j=M._TmpVector3[0];g.Gh.ClampToRef(o,D,h,j);return g.Gh.DistanceSquared(o,j)<=H*H}static IsCompletelyInFrustum(D,h){for(let o=0;o<6;++o){const H=h[o];for(let h=0;h<8;++h)if(H.dotCoordinate(D[h])<0)return!1}return!0}static IsInFrustum(D,h){for(let o=0;o<6;++o){let H=!0;const g=h[o];for(let h=0;h<8;++h)if(g.dotCoordinate(D[h])>=0){H=!1;break}if(H)return!1}return!0}}M._TmpVector3=(0,H.b)(3,g.Gh.Zero)},13169:(D,h,o)=>{o.d(h,{d:()=>K});var H=o(12836),g=o(12831),j=o(13171),M=o(13176);const R={min:0,max:0},t={min:0,max:0},S=(D,h,o)=>{const H=g.Gh.Dot(h.centerWorld,D),j=Math.abs(g.Gh.Dot(h.directions[0],D))*h.extendSize.x+Math.abs(g.Gh.Dot(h.directions[1],D))*h.extendSize.y+Math.abs(g.Gh.Dot(h.directions[2],D))*h.extendSize.z;o.min=H-j,o.max=H+j},k=(D,h,o)=>(S(D,h,R),S(D,o,t),!(R.min>t.max||t.min>R.max));class K{constructor(D,h,o){this._isLocked=!1,this.boundingBox=new j.b(D,h,o),this.boundingSphere=new M.c(D,h,o)}reConstruct(D,h,o){this.boundingBox.reConstruct(D,h,o),this.boundingSphere.reConstruct(D,h,o)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(D){this._isLocked=D}update(D){this._isLocked||(this.boundingBox._update(D),this.boundingSphere._update(D))}centerOn(D,h){const o=K._TmpVector3[0].M(D).zK(h),H=K._TmpVector3[1].M(D).addInPlace(h);return this.boundingBox.reConstruct(o,H,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(o,H,this.boundingBox.getWorldMatrix()),this}encapsulate(D){const h=g.Gh.Minimize(this.minimum,D),o=g.Gh.Maximize(this.maximum,D);return this.reConstruct(h,o,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(D){const h=g.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(h);const o=g.TmpVectors.Gh[0];return g.Gh.TransformCoordinatesToRef(D.boundingBox.minimumWorld,h,o),this.encapsulate(o),g.Gh.TransformCoordinatesToRef(D.boundingBox.maximumWorld,h,o),this.encapsulate(o),this}scale(D){return this.boundingBox.scale(D),this.boundingSphere.scale(D),this}isInFrustum(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===h||3===h)&&this.boundingSphere.isCenterInFrustum(D))return!0;if(!this.boundingSphere.isInFrustum(D))return!1;return!(1!==h&&3!==h)||this.boundingBox.isInFrustum(D)}get diagonalLength(){const D=this.boundingBox;return D.maximumWorld.subtractToRef(D.minimumWorld,K._TmpVector3[0]).length()}isCompletelyInFrustum(D){return this.boundingBox.isCompletelyInFrustum(D)}_checkCollision(D){return D._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(D){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(D)&&!!this.boundingBox.intersectsPoint(D))}intersects(D,h){if(!M.c.Intersects(this.boundingSphere,D.boundingSphere))return!1;if(!j.b.Intersects(this.boundingBox,D.boundingBox))return!1;if(!h)return!0;const o=this.boundingBox,H=D.boundingBox;return!!k(o.directions[0],o,H)&&(!!k(o.directions[1],o,H)&&(!!k(o.directions[2],o,H)&&(!!k(H.directions[0],o,H)&&(!!k(H.directions[1],o,H)&&(!!k(H.directions[2],o,H)&&(!!k(g.Gh.Cross(o.directions[0],H.directions[0]),o,H)&&(!!k(g.Gh.Cross(o.directions[0],H.directions[1]),o,H)&&(!!k(g.Gh.Cross(o.directions[0],H.directions[2]),o,H)&&(!!k(g.Gh.Cross(o.directions[1],H.directions[0]),o,H)&&(!!k(g.Gh.Cross(o.directions[1],H.directions[1]),o,H)&&(!!k(g.Gh.Cross(o.directions[1],H.directions[2]),o,H)&&(!!k(g.Gh.Cross(o.directions[2],H.directions[0]),o,H)&&(!!k(g.Gh.Cross(o.directions[2],H.directions[1]),o,H)&&!!k(g.Gh.Cross(o.directions[2],H.directions[2]),o,H))))))))))))))}}K._TmpVector3=(0,H.b)(2,g.Gh.Zero)},13176:(D,h,o)=>{o.d(h,{c:()=>j});var H=o(12836),g=o(12831);class j{constructor(D,h,o){this.center=g.Gh.Zero(),this.centerWorld=g.Gh.Zero(),this.minimum=g.Gh.Zero(),this.maximum=g.Gh.Zero(),this.reConstruct(D,h,o)}reConstruct(D,h,o){this.minimum.M(D),this.maximum.M(h);const H=g.Gh.Distance(D,h);h.addToRef(D,this.center).scaleInPlace(.5),this.radius=.5*H,this._update(o||g.Matrix.IdentityReadOnly)}scale(D){const h=this.radius*D,o=j._TmpVector3,H=o[0].qg(h),g=this.center.subtractToRef(H,o[1]),M=this.center.addToRef(H,o[2]);return this.reConstruct(g,M,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(D){if(D.isIdentity())this.centerWorld.M(this.center),this.radiusWorld=this.radius;else{g.Gh.TransformCoordinatesToRef(this.center,D,this.centerWorld);const h=j._TmpVector3[0];g.Gh.TransformNormalFromFloatsToRef(1,1,1,D,h),this.radiusWorld=Math.max(Math.abs(h.x),Math.abs(h.y),Math.abs(h.z))*this.radius}}isInFrustum(D){const h=this.centerWorld,o=this.radiusWorld;for(let H=0;H<6;H++)if(D[H].dotCoordinate(h)<=-o)return!1;return!0}isCenterInFrustum(D){const h=this.centerWorld;for(let o=0;o<6;o++)if(D[o].dotCoordinate(h)<0)return!1;return!0}intersectsPoint(D){const h=g.Gh.DistanceSquared(this.centerWorld,D);return!(this.radiusWorld*this.radiusWorld<h)}static Intersects(D,h){const o=g.Gh.DistanceSquared(D.centerWorld,h.centerWorld),H=D.radiusWorld+h.radiusWorld;return!(H*H<o)}static CreateFromCenterAndRadius(D,h,o){this._TmpVector3[0].M(D),this._TmpVector3[1].Qg(0,0,h),this._TmpVector3[2].M(D),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].zK(this._TmpVector3[1]);const H=new j(this._TmpVector3[0],this._TmpVector3[2]);return H._worldMatrix=o||g.Matrix.Identity(),H}}j._TmpVector3=(0,H.b)(3,g.Gh.Zero)},13198:(D,h,o)=>{function H(D){-1===D.indexOf("vClipPlane")&&D.push("vClipPlane"),-1===D.indexOf("vClipPlane2")&&D.push("vClipPlane2"),-1===D.indexOf("vClipPlane3")&&D.push("vClipPlane3"),-1===D.indexOf("vClipPlane4")&&D.push("vClipPlane4"),-1===D.indexOf("vClipPlane5")&&D.push("vClipPlane5"),-1===D.indexOf("vClipPlane6")&&D.push("vClipPlane6")}function g(D,h,o){const H=!!(D.clipPlane??h.clipPlane),g=!!(D.clipPlane2??h.clipPlane2),j=!!(D.clipPlane3??h.clipPlane3),M=!!(D.clipPlane4??h.clipPlane4),R=!!(D.clipPlane5??h.clipPlane5),t=!!(D.clipPlane6??h.clipPlane6);H&&o.push("#define CLIPPLANE"),g&&o.push("#define CLIPPLANE2"),j&&o.push("#define CLIPPLANE3"),M&&o.push("#define CLIPPLANE4"),R&&o.push("#define CLIPPLANE5"),t&&o.push("#define CLIPPLANE6")}function j(D,h,o){let H=!1;const g=!!(D.clipPlane??h.clipPlane),j=!!(D.clipPlane2??h.clipPlane2),M=!!(D.clipPlane3??h.clipPlane3),R=!!(D.clipPlane4??h.clipPlane4),t=!!(D.clipPlane5??h.clipPlane5),S=!!(D.clipPlane6??h.clipPlane6);return o.CLIPPLANE!==g&&(o.CLIPPLANE=g,H=!0),o.CLIPPLANE2!==j&&(o.CLIPPLANE2=j,H=!0),o.CLIPPLANE3!==M&&(o.CLIPPLANE3=M,H=!0),o.CLIPPLANE4!==R&&(o.CLIPPLANE4=R,H=!0),o.CLIPPLANE5!==t&&(o.CLIPPLANE5=t,H=!0),o.CLIPPLANE6!==S&&(o.CLIPPLANE6=S,H=!0),H}function M(D,h,o){let H=h.clipPlane??o.clipPlane;R(D,"vClipPlane",H),H=h.clipPlane2??o.clipPlane2,R(D,"vClipPlane2",H),H=h.clipPlane3??o.clipPlane3,R(D,"vClipPlane3",H),H=h.clipPlane4??o.clipPlane4,R(D,"vClipPlane4",H),H=h.clipPlane5??o.clipPlane5,R(D,"vClipPlane5",H),H=h.clipPlane6??o.clipPlane6,R(D,"vClipPlane6",H)}function R(D,h,o){o&&D.setFloat4(h,o.normal.x,o.normal.y,o.normal.z,o.d)}o.d(h,{e:()=>H,g:()=>M,i:()=>j,k:()=>g})},13139:(D,h,o)=>{o.d(h,{c:()=>H});class H{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(D,h){this._defines[D]||(D<this._currentRank&&(this._currentRank=D),D>this._maxRank&&(this._maxRank=D),this._defines[D]=new Array),this._defines[D].push(h)}addCPUSkinningFallback(D,h){this._mesh=h,D<this._currentRank&&(this._currentRank=D),D>this._maxRank&&(this._maxRank=D)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(D,h){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,D=D.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),h._bonesComputationForcedToCPU=!0;const o=this._mesh.GD();for(let D=0;D<o.meshes.length;D++){const H=o.meshes[D];if(H.material){if(H.computeBonesUsingShaders&&0!==H.numBoneInfluencers)if(H.material.getEffect()===h)H.computeBonesUsingShaders=!1;else if(H.nh)for(const D of H.nh){if(D.effect===h){H.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&H.computeBonesUsingShaders&&H.numBoneInfluencers>0&&(H.computeBonesUsingShaders=!1)}}else{const h=this._defines[this._currentRank];if(h)for(let o=0;o<h.length;o++)D=D.replace("#define "+h[o],"");this._currentRank++}return D}}},13151:(D,h,o)=>{o.d(h,{c:()=>s});var H=o(12812),g=o(12815),j=o(12642),M=o(12648),R=o(12683),t=o(13158),S=o(13080),k=o(12658),K=o(12875),Q=o(12940),v=o(12860);class r{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(D){this._func=D}get funcRef(){return this._funcRef}set funcRef(D){this._funcRef=D}get funcMask(){return this._funcMask}set funcMask(D){this._funcMask=D}get opStencilFail(){return this._opStencilFail}set opStencilFail(D){this._opStencilFail=D}get opDepthFail(){return this._opDepthFail}set opDepthFail(D){this._opDepthFail=D}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(D){this._opStencilDepthPass=D}get mask(){return this._mask}set mask(D){this._mask=D}get enabled(){return this._enabled}set enabled(D){this._enabled=D}getClassName(){return"MaterialStencilState"}copyTo(D){v.d.Clone((()=>D),this)}serialize(){return v.d.Serialize(this)}parse(D,h,o){v.d.Parse((()=>this),D,h,o)}}(0,H.c)([(0,g.I)()],r.prototype,"func",null),(0,H.c)([(0,g.I)()],r.prototype,"funcRef",null),(0,H.c)([(0,g.I)()],r.prototype,"funcMask",null),(0,H.c)([(0,g.I)()],r.prototype,"opStencilFail",null),(0,H.c)([(0,g.I)()],r.prototype,"opDepthFail",null),(0,H.c)([(0,g.I)()],r.prototype,"opStencilDepthPass",null),(0,H.c)([(0,g.I)()],r.prototype,"mask",null),(0,H.c)([(0,g.I)()],r.prototype,"enabled",null);var B=o(13189);class s{get _supportGlowLayer(){return!1}set _glowModeEnabled(D){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(D){if(this._alpha===D)return;const h=this._alpha;this._alpha=D,1!==h&&1!==D||this.mK(s.MiscDirtyFlag+s.PrePassDirtyFlag)}get alpha(){return this._alpha}set Mg(D){this._backFaceCulling!==D&&(this._backFaceCulling=D,this.mK(s.TextureDirtyFlag))}get Mg(){return this._backFaceCulling}set cullBackFaces(D){this._cullBackFaces!==D&&(this._cullBackFaces=D,this.mK(s.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(D){this._blockDirtyMechanism!==D&&(this._blockDirtyMechanism=D,D||this.pQ())}atomicMaterialsUpdate(D){this.blockDirtyMechanism=!0;try{D(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(D){this._onDisposeObserver&&this.Jh.remove(this._onDisposeObserver),this._onDisposeObserver=this.Jh.add(D)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new M.c),this._onBindObservable}set onBind(D){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(D)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new M.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new M.c),this._onEffectCreatedObservable}set alphaMode(D){this._alphaMode!==D&&(this._alphaMode=D,this.mK(s.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(D){this._needDepthPrePass!==D&&(this._needDepthPrePass=D,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(D){this._fogEnabled!==D&&(this._fogEnabled=D,this.mK(s.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case s.WireFrameFillMode:case s.LineListDrawMode:case s.LineLoopDrawMode:case s.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(D){this.fillMode=D?s.WireFrameFillMode:s.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case s.PointFillMode:case s.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(D){this.fillMode=D?s.PointFillMode:s.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(D){this._fillMode!==D&&(this._fillMode=D,this.mK(s.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(D){const h=this.GD().getEngine().getCaps().fragmentDepthSupported;D&&!h&&k.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=D&&h,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(D){this._drawWrapper=D}constructor(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Jh=new M.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.Oh=new r,this._useUBO=!1,this._fillMode=s.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=D;const g=h||R.d.LastCreatedScene;g&&(this._scene=g,this._dirtyCallbacks={},this._forceGLSL=H,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=D||j.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new Q.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new S.b(this._scene.getEngine(),void 0,void 0,D),this._useUBO=this.GD().getEngine().supportsUniformBuffers,this._createUniformBuffer(),o||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),s.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var D;const h=this.GD().getEngine();null===(D=this._uniformBuffer)||void 0===D||D.dispose(),h.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new S.b(h,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new S.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(D){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.pQ(),this.checkReadyOnlyOnce=!0}unfreeze(){this.pQ(),this.checkReadyOnlyOnce=!1}isReady(D,h){return!0}isReadyForSubMesh(D,h,o){const H=h.materialDefines;return!!H&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=H,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}GD(){return this._scene}_getEffectiveOrientation(D){return null!==this.sideOrientation?this.sideOrientation:D.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(D){this._transparencyMode!==D&&(this._transparencyMode=D,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===s.MATERIAL_ALPHABLEND||this._transparencyMode===s.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===s.MATERIAL_ALPHATEST||this._transparencyMode===s.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===s.MATERIAL_OPAQUE||this._transparencyMode===s.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(D){return this._hasTransparencyMode?this._transparencyModeIsBlend:D.visibility<1||!this._disableAlphaBlending&&(D.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(D){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(D)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}pQ(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=this.GD().meshes;for(const o of h)if(o.nh)for(const h of o.nh)if(h.uD()===this)for(const o of h._drawWrappers)o&&this._materialContext===o.materialContext&&(o._wasPreviouslyReady=!1,o._wasPreviouslyUsingInstances=null,o._forceRebindOnNextCall=D);D&&this.mK(s.AllDirtyFlag)}_preBind(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const o=this._scene.getEngine(),H=(null==h?this.sideOrientation:h)===s.ClockWiseSideOrientation;return o.enableEffect(D||this._getDrawWrapper()),o.setState(this.Mg,this.zOffset,!1,H,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.Oh,this.zOffsetUnits),H}bind(D,h){}buildUniformLayout(){const D=this._uniformBuffer;this._eventInfo.ubo=D,this._callbackPluginEventGeneric(8,this._eventInfo),D.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(D,h,o){const H=o._drawWrapper;this._eventInfo.subMesh=o,this._callbackPluginEventBindForSubMesh(this._eventInfo),H._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(D){}bindView(D){this._useUBO?this._needToBindSceneUbo=!0:D.setMatrix("view",this.GD().getViewMatrix())}bindViewProjection(D){this._useUBO?this._needToBindSceneUbo=!0:(D.setMatrix("viewProjection",this.GD().getTransformMatrix()),D.setMatrix("projection",this.GD().getProjectionMatrix()))}bindEyePosition(D,h){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(D,h)}_afterBind(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&h&&(this._needToBindSceneUbo=!1,(0,B.n)(h,this.GD().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=D?D.visibility:1,this._onBindObservable&&D&&this._onBindObservable.notifyObservers(D),this.disableDepthWrite){const D=this._scene.getEngine();this._cachedDepthWriteState=D.getDepthWrite(),D.setDepthWrite(!1)}if(this.disableColorWrite){const D=this._scene.getEngine();this._cachedColorWriteState=D.getColorWrite(),D.setColorWrite(!1)}if(0!==this.depthFunction){const D=this._scene.getEngine();this._cachedDepthFunctionState=D.getDepthFunction()||0,D.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(D){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=D,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(D){return null}_clonePlugins(D,h){const o={};if(this._serializePlugins(o),s._ParsePlugins(o,D,this._scene,h),this.pluginManager)for(const H of this.pluginManager._plugins){const h=D.pluginManager.getPlugin(H.name);h&&H.copyTo(h)}}getBindedMeshes(){if(this.meshMap){const D=[];for(const h in this.meshMap){const o=this.meshMap[h];o&&D.push(o)}return D}return this._scene.meshes.filter((D=>D.material===this))}forceCompilation(D,h,o,H){const g={clipPlane:!1,useInstances:!1,...o},j=this.GD(),M=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const R=()=>{if(!this._scene||!this._scene.getEngine())return;const o=j.clipPlane;if(g.clipPlane&&(j.clipPlane=new K.b(0,0,0,1)),this._storeEffectOnSubMeshes){let o=!0,j=null;if(D.nh){const h=new t.b(0,0,0,0,0,D,void 0,!1,!1);h.materialDefines&&(h.materialDefines._renderId=-1),this.isReadyForSubMesh(D,h,g.useInstances)||(h.effect&&h.effect.getCompilationError()&&h.effect.allFallbacksProcessed()?j=h.effect.getCompilationError():(o=!1,setTimeout(R,16)))}o&&(this.allowShaderHotSwapping=M,j&&H&&H(j),h&&h(this))}else this.isReady()?(this.allowShaderHotSwapping=M,h&&h(this)):setTimeout(R,16);g.clipPlane&&(j.clipPlane=o)};R()}async forceCompilationAsync(D,h){return await new Promise(((o,H)=>{this.forceCompilation(D,(()=>{o()}),h,(D=>{H(D)}))}))}mK(D){this.GD().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(s._DirtyCallbackArray.length=0,D&s.ImageProcessingDirtyFlag&&s._DirtyCallbackArray.push(s._ImageProcessingDirtyCallBack),D&s.TextureDirtyFlag&&s._DirtyCallbackArray.push(s._TextureDirtyCallBack),D&s.LightDirtyFlag&&s._DirtyCallbackArray.push(s._LightsDirtyCallBack),D&s.FresnelDirtyFlag&&s._DirtyCallbackArray.push(s._FresnelDirtyCallBack),D&s.AttributesDirtyFlag&&s._DirtyCallbackArray.push(s._AttributeDirtyCallBack),D&s.MiscDirtyFlag&&s._DirtyCallbackArray.push(s._MiscDirtyCallBack),D&s.PrePassDirtyFlag&&s._DirtyCallbackArray.push(s._PrePassDirtyCallBack),s._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(s._RunDirtyCallBacks),this.GD().resetCachedMaterial())}resetDrawCache(){const D=this.GD().meshes;for(const h of D)if(h.nh)for(const D of h.nh)D.uD()===this&&D.resetDrawCache()}_markAllSubMeshesAsDirty(D){const h=this.GD();if(h.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const o=h.meshes;for(const H of o)if(H.nh)for(const o of H.nh){if((o.uD()||(h._hasDefaultMaterial?h.defaultMaterial:null))===this)for(const h of o._drawWrappers)h&&h.defines&&h.defines.markAllAsDirty&&this._materialContext===h.materialContext&&D(h.defines)}}_markScenePrePassDirty(){if(this.GD().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const D=this.GD().enablePrePassRenderer();D&&D.mK()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(s._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(s._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(s._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(s._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(s._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(s._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(s._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(s._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(s._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(s._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const D=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Jh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(D)}))}}setPrePassRenderer(D){return!1}dispose(D,h,o){const H=this.GD();if(H.stopAnimation(this),H.freeProcessedMaterials(),H.removeMaterial(this),this._eventInfo.forceDisposeTextures=h,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const D=this._parentContainer.materials.indexOf(this);D>-1&&this._parentContainer.materials.splice(D,1),this._parentContainer=null}if(!0!==o)if(this.meshMap)for(const g in this.meshMap){const D=this.meshMap[g];this._disposeMeshResources(D)}else{const D=H.meshes;for(const h of D)this._disposeMeshResources(h)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Jh.notifyObservers(this),this.Jh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(D){if(!D)return;const h=D.mg,o=D._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(D.nh&&o)for(const g of D.nh){const D=g._drawWrappers;for(let j=0;j<D.length;j++){var H;const M=null===(H=D[j])||void 0===H?void 0:H.effect;if(!M)continue;o[j]===this&&(null===h||void 0===h||h._releaseVertexArrayObject(M),g._removeDrawWrapper(j,!0,!0))}}}else null===h||void 0===h||h._releaseVertexArrayObject(this._drawWrapper.effect);D.material!==this||D.sourceMesh||(D.material=null)}serialize(){const D=v.d.Serialize(this);return D.Oh=this.Oh.serialize(),D.uniqueId=this.uniqueId,this._serializePlugins(D),D}_serializePlugins(D){if(D.plugins={},this.pluginManager)for(const h of this.pluginManager._plugins)h.doNotSerialize||(D.plugins[h.getClassName()]=h.serialize())}static Parse(D,h,o){if(D.customType){if("BABYLON.PBRMaterial"===D.customType&&D.overloadedAlbedo&&(D.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return k.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else D.customType="BABYLON.StandardMaterial";const H=j.Tools.Instantiate(D.customType).Parse(D,h,o);return H._loadedUniqueId=D.uniqueId,H}static _ParsePlugins(D,h,o,H){if(D.plugins)for(const R in D.plugins){var g,M;const t=D.plugins[R];let S=null===(g=h.pluginManager)||void 0===g?void 0:g.getPlugin(t.name);if(!S){const D=j.Tools.Instantiate("BABYLON."+R);D&&(S=new D(h))}null===(M=S)||void 0===M||M.parse(t,o,H)}}}s.TriangleFillMode=0,s.WireFrameFillMode=1,s.PointFillMode=2,s.PointListDrawMode=3,s.LineListDrawMode=4,s.LineLoopDrawMode=5,s.LineStripDrawMode=6,s.TriangleStripDrawMode=7,s.TriangleFanDrawMode=8,s.ClockWiseSideOrientation=0,s.CounterClockWiseSideOrientation=1,s.ImageProcessingDirtyFlag=64,s.TextureDirtyFlag=1,s.LightDirtyFlag=2,s.FresnelDirtyFlag=4,s.AttributesDirtyFlag=8,s.MiscDirtyFlag=16,s.PrePassDirtyFlag=32,s.AllDirtyFlag=127,s.MATERIAL_OPAQUE=0,s.MATERIAL_ALPHATEST=1,s.MATERIAL_ALPHABLEND=2,s.MATERIAL_ALPHATESTANDBLEND=3,s.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,s.MATERIAL_NORMALBLENDMETHOD_RNM=1,s.OnEventObservable=new M.c,s._AllDirtyCallBack=D=>D.markAllAsDirty(),s._ImageProcessingDirtyCallBack=D=>D.markAsImageProcessingDirty(),s._TextureDirtyCallBack=D=>D.markAsTexturesDirty(),s._FresnelDirtyCallBack=D=>D.markAsFresnelDirty(),s._MiscDirtyCallBack=D=>D.markAsMiscDirty(),s._PrePassDirtyCallBack=D=>D.markAsPrePassDirty(),s._LightsDirtyCallBack=D=>D.markAsLightDirty(),s._AttributeDirtyCallBack=D=>D.markAsAttributesDirty(),s._FresnelAndMiscDirtyCallBack=D=>{s._FresnelDirtyCallBack(D),s._MiscDirtyCallBack(D)},s._TextureAndMiscDirtyCallBack=D=>{s._TextureDirtyCallBack(D),s._MiscDirtyCallBack(D)},s._DirtyCallbackArray=[],s._RunDirtyCallBacks=D=>{for(const h of s._DirtyCallbackArray)h(D)},(0,H.c)([(0,g.I)()],s.prototype,"id",void 0),(0,H.c)([(0,g.I)()],s.prototype,"uniqueId",void 0),(0,H.c)([(0,g.I)()],s.prototype,"name",void 0),(0,H.c)([(0,g.I)()],s.prototype,"metadata",void 0),(0,H.c)([(0,g.I)()],s.prototype,"checkReadyOnEveryCall",void 0),(0,H.c)([(0,g.I)()],s.prototype,"checkReadyOnlyOnce",void 0),(0,H.c)([(0,g.I)()],s.prototype,"state",void 0),(0,H.c)([(0,g.I)("alpha")],s.prototype,"_alpha",void 0),(0,H.c)([(0,g.I)("Mg")],s.prototype,"_backFaceCulling",void 0),(0,H.c)([(0,g.I)("cullBackFaces")],s.prototype,"_cullBackFaces",void 0),(0,H.c)([(0,g.I)()],s.prototype,"sideOrientation",void 0),(0,H.c)([(0,g.I)("alphaMode")],s.prototype,"_alphaMode",void 0),(0,H.c)([(0,g.I)()],s.prototype,"_needDepthPrePass",void 0),(0,H.c)([(0,g.I)()],s.prototype,"disableDepthWrite",void 0),(0,H.c)([(0,g.I)()],s.prototype,"disableColorWrite",void 0),(0,H.c)([(0,g.I)()],s.prototype,"forceDepthWrite",void 0),(0,H.c)([(0,g.I)()],s.prototype,"depthFunction",void 0),(0,H.c)([(0,g.I)()],s.prototype,"separateCullingPass",void 0),(0,H.c)([(0,g.I)("fogEnabled")],s.prototype,"_fogEnabled",void 0),(0,H.c)([(0,g.I)()],s.prototype,"pointSize",void 0),(0,H.c)([(0,g.I)()],s.prototype,"zOffset",void 0),(0,H.c)([(0,g.I)()],s.prototype,"zOffsetUnits",void 0),(0,H.c)([(0,g.I)()],s.prototype,"pointsCloud",null),(0,H.c)([(0,g.I)()],s.prototype,"fillMode",null),(0,H.c)([(0,g.I)()],s.prototype,"useLogarithmicDepth",null),(0,H.c)([(0,g.I)()],s.prototype,"transparencyMode",null)},13189:(D,h,o)=>{o.d(h,{B:()=>v,E:()=>Q,G:()=>Z,K:()=>T,O:()=>E,P:()=>U,Q:()=>O,R:()=>e,V:()=>p,Y:()=>mD,_:()=>u,b:()=>y,cb:()=>r,d:()=>K,h:()=>i,j:()=>k,k:()=>B,n:()=>s,p:()=>q,q:()=>J,r:()=>c,v:()=>G,z:()=>N});var H=o(12658),g=o(12870),j=o(12683),M=o(13134),R=o(13198);const t=g.mo.Black(),S={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function k(D,h,o){if(!D||D.LOGARITHMICDEPTH||D.indexOf&&D.indexOf("LOGARITHMICDEPTH")>=0){const D=o.activeCamera;1===D.mode&&H.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),h.setFloat("logarithmicDepthConstant",2/(Math.log(D.maxZ+1)/Math.LN2))}}function K(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]&&arguments[3];o&&D.fogEnabled&&(!h||h.applyFog)&&0!==D.fogMode&&(o.setFloat4("vFogInfos",D.fogMode,D.fogStart,D.fogEnd,D.fogDensity),H?(D.fogColor.toLinearSpaceToRef(t,D.getEngine().useExactSrgbConversions),o.setColor3("vFogColor",t)):o.setColor3("vFogColor",D.fogColor))}function Q(D,h,o,H,g,j,M,R,t,k){const K=D.numMaxInfluencers||D.numInfluencers;return K<=0?0:(h.push("#define MORPHTARGETS"),D.hasPositions&&h.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),D.hasNormals&&h.push("#define MORPHTARGETTEXTURE_HASNORMALS"),D.hasTangents&&h.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),D.hasUVs&&h.push("#define MORPHTARGETTEXTURE_HASUVS"),D.hasUV2s&&h.push("#define MORPHTARGETTEXTURE_HASUV2S"),D.hasColors&&h.push("#define MORPHTARGETTEXTURE_HASCOLORS"),D.supportsPositions&&g&&h.push("#define MORPHTARGETS_POSITION"),D.supportsNormals&&j&&h.push("#define MORPHTARGETS_NORMAL"),D.supportsTangents&&M&&h.push("#define MORPHTARGETS_TANGENT"),D.supportsUVs&&R&&h.push("#define MORPHTARGETS_UV"),D.supportsUV2s&&t&&h.push("#define MORPHTARGETS_UV2"),D.supportsColors&&k&&h.push("#define MORPHTARGETS_COLOR"),h.push("#define NUM_MORPH_INFLUENCERS "+K),D.isUsingTextureForTargets&&h.push("#define MORPHTARGETS_TEXTURE"),S.NUM_MORPH_INFLUENCERS=K,S.NORMAL=j,S.TANGENT=M,S.UV=R,S.UV2=t,S.COLOR=k,v(o,H,S,g),K)}function v(D,h,o){let g=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const M=o.NUM_MORPH_INFLUENCERS;if(M>0&&j.d.LastCreatedEngine){const R=j.d.LastCreatedEngine.getCaps().maxVertexAttribs,t=h.morphTargetManager;if(null!==t&&void 0!==t&&t.isUsingTextureForTargets)return;const S=t&&t.supportsPositions&&g,k=t&&t.supportsNormals&&o.NORMAL,K=t&&t.supportsTangents&&o.TANGENT,Q=t&&t.supportsUVs&&o.UV1,v=t&&t.supportsUV2s&&o.UV2,r=t&&t.supportsColors&&o.VERTEXCOLOR;for(let o=0;o<M;o++)S&&D.push("position"+o),k&&D.push("normal"+o),K&&D.push("tangent"+o),Q&&D.push("uv_"+o),v&&D.push("uv2_"+o),r&&D.push("color"+o),D.length>R&&H.d.Error("Cannot add more vertex attributes for mesh "+h.name)}}function r(D){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];D.push("world0"),D.push("world1"),D.push("world2"),D.push("world3"),h&&(D.push("previousWorld0"),D.push("previousWorld1"),D.push("previousWorld2"),D.push("previousWorld3"))}function B(D,h){const o=D.morphTargetManager;D&&o&&h.setFloatArray("morphTargetInfluences",o.influences)}function s(D,h){h.bindToEffect(D,"Scene")}function U(D,h,o){h._needUVs=!0,h[o]=!0,D.optimizeUVAllocation&&D.getTextureMatrix().isIdentityAs3x2()?(h[o+"DIRECTUV"]=D.coordinatesIndex+1,h["MAINUV"+(D.coordinatesIndex+1)]=!0):h[o+"DIRECTUV"]=0}function q(D,h,o){const H=D.getTextureMatrix();h.Wh(o+"Matrix",H)}function c(D,h,o){o.BAKED_VERTEX_ANIMATION_TEXTURE&&o.INSTANCES&&D.push("bakedVertexAnimationSettingsInstanced")}function y(D,h,o){var H;if(h&&D&&(D.computeBonesUsingShaders&&h._bonesComputationForcedToCPU&&(D.computeBonesUsingShaders=!1),D.useBones&&D.computeBonesUsingShaders&&D.skeleton)){const g=D.skeleton;if(g.isUsingTextureForMatrices&&h.getUniformIndex("boneTextureWidth")>-1){const o=g.getTransformMatrixTexture(D);h.setTexture("boneSampler",o),h.setFloat("boneTextureWidth",4*(g.bones.length+1))}else{const j=g.getTransformMatrices(D);j&&(h.setMatrices("mBones",j),o&&D.GD().prePassRenderer&&D.GD().prePassRenderer.getIndex(2)&&(o.previousBones[D.uniqueId]||(o.previousBones[D.uniqueId]=j.slice()),h.setMatrices("mPreviousBones",o.previousBones[D.uniqueId]),H=j,o.previousBones[D.uniqueId].set(H)))}}}function b(D,h,o,H,g){let j=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];D._bindLight(h,o,H,g,j)}function i(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const j=Math.min(h.lightSources.length,g);for(let M=0;M<j;M++){b(h.lightSources[M],M,D,o,"boolean"===typeof H?H:H.SPECULARTERM,h.receiveShadows)}}function G(D,h,o,H){o.NUM_BONE_INFLUENCERS>0&&(H.addCPUSkinningFallback(0,h),D.push("matricesIndices"),D.push("matricesWeights"),o.NUM_BONE_INFLUENCERS>4&&(D.push("matricesIndicesExtra"),D.push("matricesWeightsExtra")))}function N(D,h){(h.INSTANCES||h.THIN_INSTANCES)&&r(D,!!h.PREPASS_VELOCITY),h.INSTANCESCOLOR&&D.push("instanceColor")}function J(D,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,g=0;for(let j=0;j<o&&D["LIGHT"+j];j++)j>0&&(g=H+j,h.addFallback(g,"LIGHT"+j)),D.SHADOWS||(D["SHADOW"+j]&&h.addFallback(H,"SHADOW"+j),D["SHADOWPCF"+j]&&h.addFallback(H,"SHADOWPCF"+j),D["SHADOWPCSS"+j]&&h.addFallback(H,"SHADOWPCSS"+j),D["SHADOWPOISSON"+j]&&h.addFallback(H,"SHADOWPOISSON"+j),D["SHADOWESM"+j]&&h.addFallback(H,"SHADOWESM"+j),D["SHADOWCLOSEESM"+j]&&h.addFallback(H,"SHADOWCLOSEESM"+j));return g++}function O(D,h,o,H,g,j,M){let R=arguments.length>7&&void 0!==arguments[7]&&arguments[7];M._areMiscDirty&&(M.LOGARITHMICDEPTH=o,M.POINTSIZE=H,M.FOG=g&&function(D,h){return h.fogEnabled&&D.applyFog&&0!==h.fogMode}(D,h),M.NONUNIFORMSCALING=D.nonUniformScaling,M.ALPHATEST=j,M.DECAL_AFTER_DETAIL=R)}function E(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!o._areLightsDirty)return o._needNormals;let M=0;const R={needNormals:o._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(D.lightsEnabled&&!j)for(const S of h.lightSources)if(L(D,h,S,M,o,H,R),M++,M===g)break;o.SPECULARTERM=R.specularEnabled,o.SHADOWS=R.shadowEnabled;for(let S=M;S<g;S++)void 0!==o["LIGHT"+S]&&(o["LIGHT"+S]=!1,o["HEMILIGHT"+S]=!1,o["POINTLIGHT"+S]=!1,o["DIRLIGHT"+S]=!1,o["SPOTLIGHT"+S]=!1,o["AREALIGHT"+S]=!1,o["SHADOW"+S]=!1,o["SHADOWCSM"+S]=!1,o["SHADOWCSMDEBUG"+S]=!1,o["SHADOWCSMNUM_CASCADES"+S]=!1,o["SHADOWCSMUSESHADOWMAXZ"+S]=!1,o["SHADOWCSMNOBLEND"+S]=!1,o["SHADOWCSM_RIGHTHANDED"+S]=!1,o["SHADOWPCF"+S]=!1,o["SHADOWPCSS"+S]=!1,o["SHADOWPOISSON"+S]=!1,o["SHADOWESM"+S]=!1,o["SHADOWCLOSEESM"+S]=!1,o["SHADOWCUBE"+S]=!1,o["SHADOWLOWQUALITY"+S]=!1,o["SHADOWMEDIUMQUALITY"+S]=!1);const t=D.getEngine().getCaps();return void 0===o.SHADOWFLOAT&&(R.needRebuild=!0),o.SHADOWFLOAT=R.shadowEnabled&&(t.textureFloatRender&&t.textureFloatLinearFiltering||t.textureHalfFloatRender&&t.textureHalfFloatLinearFiltering),o.LIGHTMAPEXCLUDED=R.lightmapMode,R.needRebuild&&o.rebuild(),R.needNormals}function L(D,h,o,H,g,j,R){switch(R.needNormals=!0,void 0===g["LIGHT"+H]&&(R.needRebuild=!0),g["LIGHT"+H]=!0,g["SPOTLIGHT"+H]=!1,g["HEMILIGHT"+H]=!1,g["POINTLIGHT"+H]=!1,g["DIRLIGHT"+H]=!1,g["AREALIGHT"+H]=!1,o.prepareLightSpecificDefines(g,H),g["LIGHT_FALLOFF_PHYSICAL"+H]=!1,g["LIGHT_FALLOFF_GLTF"+H]=!1,g["LIGHT_FALLOFF_STANDARD"+H]=!1,o.falloffType){case M.c.FALLOFF_GLTF:g["LIGHT_FALLOFF_GLTF"+H]=!0;break;case M.c.FALLOFF_PHYSICAL:g["LIGHT_FALLOFF_PHYSICAL"+H]=!0;break;case M.c.FALLOFF_STANDARD:g["LIGHT_FALLOFF_STANDARD"+H]=!0}if(j&&!o.MK.equalsFloats(0,0,0)&&(R.specularEnabled=!0),g["SHADOW"+H]=!1,g["SHADOWCSM"+H]=!1,g["SHADOWCSMDEBUG"+H]=!1,g["SHADOWCSMNUM_CASCADES"+H]=!1,g["SHADOWCSMUSESHADOWMAXZ"+H]=!1,g["SHADOWCSMNOBLEND"+H]=!1,g["SHADOWCSM_RIGHTHANDED"+H]=!1,g["SHADOWPCF"+H]=!1,g["SHADOWPCSS"+H]=!1,g["SHADOWPOISSON"+H]=!1,g["SHADOWESM"+H]=!1,g["SHADOWCLOSEESM"+H]=!1,g["SHADOWCUBE"+H]=!1,g["SHADOWLOWQUALITY"+H]=!1,g["SHADOWMEDIUMQUALITY"+H]=!1,h&&h.receiveShadows&&D.shadowsEnabled&&o.shadowEnabled){const h=o.getShadowGenerator(D.activeCamera)??o.getShadowGenerator();if(h){const D=h.getShadowMap();D&&D.renderList&&D.renderList.length>0&&(R.shadowEnabled=!0,h.prepareDefines(g,H))}}o.lightmapMode!=M.c.LIGHTMAP_DEFAULT?(R.lightmapMode=!0,g["LIGHTMAPEXCLUDED"+H]=!0,g["LIGHTMAPNOSPECULAR"+H]=o.lightmapMode==M.c.LIGHTMAP_SHADOWSONLY):(g["LIGHTMAPEXCLUDED"+H]=!1,g["LIGHTMAPNOSPECULAR"+H]=!1)}function T(D,h,o,H,g){let j=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=function(D,h){let o=!1;if(D.activeCamera){const H=h.CAMERA_ORTHOGRAPHIC?1:0,g=h.CAMERA_PERSPECTIVE?1:0,j=1===D.activeCamera.mode?1:0,M=0===D.activeCamera.mode?1:0;(H^j||g^M)&&(h.CAMERA_ORTHOGRAPHIC=1===j,h.CAMERA_PERSPECTIVE=1===M,o=!0)}return o}(D,H);!1!==j&&(t=(0,R.i)(o,D,H)),H.DEPTHPREPASS!==!h.getColorWrite()&&(H.DEPTHPREPASS=!H.DEPTHPREPASS,t=!0),H.INSTANCES!==g&&(H.INSTANCES=g,t=!0),H.THIN_INSTANCES!==M&&(H.THIN_INSTANCES=M,t=!0),t&&H.markAsUnprocessed()}function Z(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]&&arguments[4],j=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],M=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!h._areAttributesDirty&&h._needNormals===h._normals&&h._needUVs===h._uvs)return!1;h._normals=h._needNormals,h._uvs=h._needUVs,h.NORMAL=h._needNormals&&D.isVerticesDataPresent("normal"),h._needNormals&&D.isVerticesDataPresent("tangent")&&(h.TANGENT=!0);for(let R=1;R<=6;++R)h["UV"+R]=!!h._needUVs&&D.isVerticesDataPresent(`uv${1===R?"":R}`);if(o){const o=D.useVertexColors&&D.isVerticesDataPresent("color");h.VERTEXCOLOR=o,h.VERTEXALPHA=D.hasVertexAlpha&&o&&j}return D.isVerticesDataPresent("instanceColor")&&(D.hasInstances||D.hasThinInstances)&&(h.INSTANCESCOLOR=!0),H&&function(D,h){if(D.useBones&&D.computeBonesUsingShaders&&D.skeleton){h.NUM_BONE_INFLUENCERS=D.numBoneInfluencers;const o=void 0!==h.BONETEXTURE;if(D.skeleton.isUsingTextureForMatrices&&o)h.BONETEXTURE=!0;else{h.BonesPerMesh=D.skeleton.bones.length+1,h.BONETEXTURE=!o&&void 0;const H=D.GD().prePassRenderer;if(H&&H.enabled){const o=-1===H.excludedSkinnedMesh.indexOf(D);h.BONES_VELOCITY_ENABLED=o}}}else h.NUM_BONE_INFLUENCERS=0,h.BonesPerMesh=0,void 0!==h.BONETEXTURE&&(h.BONETEXTURE=!1)}(D,h),g&&function(D,h){const o=D.morphTargetManager;o?(h.MORPHTARGETS_UV=o.supportsUVs&&h.UV1,h.MORPHTARGETS_UV2=o.supportsUV2s&&h.UV2,h.MORPHTARGETS_TANGENT=o.supportsTangents&&h.TANGENT,h.MORPHTARGETS_NORMAL=o.supportsNormals&&h.NORMAL,h.MORPHTARGETS_POSITION=o.supportsPositions,h.MORPHTARGETS_COLOR=o.supportsColors,h.MORPHTARGETTEXTURE_HASUVS=o.hasUVs,h.MORPHTARGETTEXTURE_HASUV2S=o.hasUV2s,h.MORPHTARGETTEXTURE_HASTANGENTS=o.hasTangents,h.MORPHTARGETTEXTURE_HASNORMALS=o.hasNormals,h.MORPHTARGETTEXTURE_HASPOSITIONS=o.hasPositions,h.MORPHTARGETTEXTURE_HASCOLORS=o.hasColors,h.NUM_MORPH_INFLUENCERS=o.numMaxInfluencers||o.numInfluencers,h.MORPHTARGETS=h.NUM_MORPH_INFLUENCERS>0,h.MORPHTARGETS_TEXTURE=o.isUsingTextureForTargets):(h.MORPHTARGETS_UV=!1,h.MORPHTARGETS_UV2=!1,h.MORPHTARGETS_TANGENT=!1,h.MORPHTARGETS_NORMAL=!1,h.MORPHTARGETS_POSITION=!1,h.MORPHTARGETS_COLOR=!1,h.MORPHTARGETTEXTURE_HASUVS=!1,h.MORPHTARGETTEXTURE_HASUV2S=!1,h.MORPHTARGETTEXTURE_HASTANGENTS=!1,h.MORPHTARGETTEXTURE_HASNORMALS=!1,h.MORPHTARGETTEXTURE_HASPOSITIONS=!1,h.MORPHTARGETTEXTURE_HAS_COLORS=!1,h.MORPHTARGETS=!1,h.NUM_MORPH_INFLUENCERS=0)}(D,h),M&&function(D,h){const o=D.bakedVertexAnimationManager;h.BAKED_VERTEX_ANIMATION_TEXTURE=!(!o||!o.isEnabled)}(D,h),!0}function e(D,h){if(D.activeCamera){const o=h.MULTIVIEW;h.MULTIVIEW=null!==D.activeCamera.outputRenderTarget&&D.activeCamera.outputRenderTarget.getViewCount()>1,h.MULTIVIEW!=o&&h.markAsUnprocessed()}}function p(D,h,o){const H=h.ORDER_INDEPENDENT_TRANSPARENCY,g=h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;h.ORDER_INDEPENDENT_TRANSPARENCY=D.useOrderIndependentTransparency&&o,h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!D.getEngine().getCaps().textureFloatLinearFiltering,H===h.ORDER_INDEPENDENT_TRANSPARENCY&&g===h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||h.markAsUnprocessed()}function mD(D,h,o){const H=h.PREPASS;if(!h._arePrePassDirty)return;const g=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(D.prePassRenderer&&D.prePassRenderer.enabled&&o){h.PREPASS=!0,h.SCENE_MRT_COUNT=D.prePassRenderer.mrtCount,h.PREPASS_NORMAL_WORLDSPACE=D.prePassRenderer.generateNormalsInWorldSpace,h.PREPASS_COLOR=!0,h.PREPASS_COLOR_INDEX=0;for(let o=0;o<g.length;o++){const H=D.prePassRenderer.getIndex(g[o].type);-1!==H?(h[g[o].define]=!0,h[g[o].index]=H):h[g[o].define]=!1}}else{h.PREPASS=!1;for(let D=0;D<g.length;D++)h[g[D].define]=!1}h.PREPASS!=H&&(h.markAsUnprocessed(),h.markAsImageProcessingDirty())}function a(D,h,o,H){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6];g&&g.push("Light"+D),j||(h.push("vLightData"+D,"vLightDiffuse"+D,"vLightSpecular"+D,"vLightDirection"+D,"vLightWidth"+D,"vLightHeight"+D,"vLightFalloff"+D,"vLightGround"+D,"lightMatrix"+D,"shadowsInfo"+D,"depthValues"+D),o.push("shadowTexture"+D),o.push("depthTexture"+D),h.push("viewFrustumZ"+D,"cascadeBlendFactor"+D,"lightSizeUVCorrection"+D,"depthCorrection"+D,"penumbraDarkness"+D,"frustumLengths"+D),H&&(o.push("projectionLightTexture"+D),h.push("textureProjectionMatrix"+D)),M&&o.push("iesLightTexture"+D))}function u(D,h,o){let H,g,j=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(D.uniformsNames){const M=D;H=M.uniformsNames,g=M.uniformBuffersNames,h=M.samplers,o=M.defines,j=M.maxSimultaneousLights||0}else H=D,h||(h=[]);for(let M=0;M<j&&o["LIGHT"+M];M++)a(M,H,h,o["PROJECTEDLIGHTTEXTURE"+M],g,!1,o["IESLIGHTTEXTURE"+M]);o.NUM_MORPH_INFLUENCERS&&(H.push("morphTargetInfluences"),H.push("morphTargetCount")),o.BAKED_VERTEX_ANIMATION_TEXTURE&&(H.push("bakedVertexAnimationSettings"),H.push("bakedVertexAnimationTextureSizeInverted"),H.push("bakedVertexAnimationTime"),h.push("bakedVertexAnimationTexture"))}},13148:(D,h,o)=>{o.d(h,{d:()=>j});var H=o(12831),g=o(13151);class j extends g.c{constructor(D,h){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(D,h,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new H.Matrix,this._storeEffectOnSubMeshes=o}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(D,h){return!!D&&(!this._storeEffectOnSubMeshes||(!D.nh||0===D.nh.length||this.isReadyForSubMesh(D,D.nh[0],h)))}_isReadyForSubMesh(D){const h=D.materialDefines;return!(this.checkReadyOnEveryCall||!D.effect||!h||h._renderId!==this.GD().getRenderId())}bindOnlyWorldMatrix(D){this._activeEffect.setMatrix("world",D)}bindOnlyNormalMatrix(D){this._activeEffect.setMatrix("normalMatrix",D)}bind(D,h){h&&this.bindForSubMesh(D,h,h.nh[0])}_afterBind(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2?arguments[2]:void 0;super._afterBind(D,h,o),this.GD()._cachedEffect=h,o?o._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return o._drawWrapper._forceRebindOnNextCall||D.isCachedMaterialInvalid(this,h,H)}dispose(D,h,o){this._activeEffect=void 0,super.dispose(D,h,o)}}},13184:(D,h,o)=>{o.d(h,{e:()=>R,f:()=>t});var H=o(12812),g=o(12831),j=o(12815);class M{static extractMinAndMaxIndexed(D,h,o,H,g,j){for(let M=o;M<o+H;M++){const o=3*h[M],H=D[o],R=D[o+1],t=D[o+2];g.minimizeInPlaceFromFloats(H,R,t),j.maximizeInPlaceFromFloats(H,R,t)}}static extractMinAndMax(D,h,o,H,g,j){for(let M=h,R=h*H;M<h+o;M++,R+=H){const h=D[R],o=D[R+1],H=D[R+2];g.minimizeInPlaceFromFloats(h,o,H),j.maximizeInPlaceFromFloats(h,o,H)}}}function R(D,h,o,H){let j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const R=new g.Gh(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t=new g.Gh(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return M.extractMinAndMaxIndexed(D,h,o,H,R,t),j&&(R.x-=R.x*j.x+j.y,R.y-=R.y*j.x+j.y,R.z-=R.z*j.x+j.y,t.x+=t.x*j.x+j.y,t.y+=t.y*j.x+j.y,t.z+=t.z*j.x+j.y),{minimum:R,maximum:t}}function t(D,h,o){let H=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,j=arguments.length>4?arguments[4]:void 0;const R=new g.Gh(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t=new g.Gh(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return j||(j=3),M.extractMinAndMax(D,h,o,j,R,t),H&&(R.x-=R.x*H.x+H.y,R.y-=R.y*H.x+H.y,R.z-=R.z*H.x+H.y,t.x+=t.x*H.x+H.y,t.y+=t.y*H.x+H.y,t.z+=t.z*H.x+H.y),{minimum:R,maximum:t}}(0,H.c)([j.d.filter((function(){for(var D=arguments.length,h=new Array(D),o=0;o<D;o++)h[o]=arguments[o];let[H,g]=h;return!Array.isArray(H)&&!Array.isArray(g)}))],M,"extractMinAndMaxIndexed",null),(0,H.c)([j.d.filter((function(){for(var D=arguments.length,h=new Array(D),o=0;o<D;o++)h[o]=arguments[o];let[H]=h;return!Array.isArray(H)}))],M,"extractMinAndMax",null)},13158:(D,h,o)=>{o.d(h,{b:()=>t});var H=o(12894),g=o(13162),j=o(13169),M=o(13184),R=o(12940);class t{get materialDefines(){var D;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(D=this._getDrawWrapper())||void 0===D?void 0:D.defines}set materialDefines(D){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=D}_getDrawWrapper(D){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];D=D??this._engine.currentRenderPassId;let o=this._drawWrappers[D];return!o&&h&&(this._drawWrappers[D]=o=new R.c(this._mesh.GD().getEngine())),o}_removeDrawWrapper(D){let h=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var o;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(o=this._drawWrappers[D])||void 0===o||o.dispose(h));this._drawWrappers[D]=void 0}get effect(){var D;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(D=this._getDrawWrapper())||void 0===D?void 0:D.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(D){this._mainDrawWrapperOverride=D}setEffect(D){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2?arguments[2]:void 0,H=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const g=this._drawWrapper;g.setEffect(D,h,H),void 0!==o&&(g.materialContext=o),D||(g.defines=null,g.materialContext=void 0)}resetDrawCache(D){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==D)return void this._removeDrawWrapper(D,!0,h);for(const D of this._drawWrappers)null===D||void 0===D||D.dispose(h)}this._drawWrappers=[]}static AddToMesh(D,h,o,H,g,j,M){return new t(D,h,o,H,g,j,M,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(D,h,o,H,g,j,M){let R=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],t=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=D,this.verticesStart=h,this.verticesCount=o,this.indexStart=H,this.indexCount=g,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=j,this._renderingMesh=M||j,t&&j.nh.push(this),this._engine=this._mesh.GD().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=j.nh.length-1,R&&(this.refreshBoundingInfo(),j.xh(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(D){return this._boundingInfo=D,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const D=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return D||this._renderingMesh}uD(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const h=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!h)return D&&this._mesh.GD()._hasDefaultMaterial?this._mesh.GD().defaultMaterial:null;if(this._isMultiMaterial(h)){const D=h.getSubMaterial(this.materialIndex);return this._currentMaterial!==D&&(this._currentMaterial=D,this.resetDrawCache()),D}return h}_isMultiMaterial(D){return void 0!==D.getSubMaterial}refreshBoundingInfo(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.mg)return this;if(D||(D=this._renderingMesh.getVerticesData(H.f.PositionKind)),!D)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const h=this._renderingMesh.jg();let o;if(0===this.indexStart&&this.indexCount===h.length){const D=this._renderingMesh.getBoundingInfo();o={minimum:D.minimum.clone(),maximum:D.maximum.clone()}}else o=(0,M.e)(D,h,this.indexStart,this.indexCount,this._renderingMesh.mg.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(o.minimum,o.maximum):this._boundingInfo=new j.d(o.minimum,o.maximum),this}_checkCollision(D){return this.getBoundingInfo()._checkCollision(D)}updateBoundingInfo(D){let h=this.getBoundingInfo();return h||(this.refreshBoundingInfo(),h=this.getBoundingInfo()),h&&h.update(D),this}isInFrustum(D){const h=this.getBoundingInfo();return!!h&&h.isInFrustum(D,this._mesh.jQ)}isCompletelyInFrustum(D){const h=this.getBoundingInfo();return!!h&&h.isCompletelyInFrustum(D)}render(D){return this._renderingMesh.render(this,D,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(D,h){if(!this._linesIndexBuffer){const o=6*Math.floor(this.indexCount/3),H=this.verticesStart+this.verticesCount>65535?new Uint32Array(o):new Uint16Array(o);let g=0;if(0===D.length)for(let D=this.indexStart;D<this.indexStart+this.indexCount;D+=3)H[g++]=D,H[g++]=D+1,H[g++]=D+1,H[g++]=D+2,H[g++]=D+2,H[g++]=D;else for(let h=this.indexStart;h<this.indexStart+this.indexCount;h+=3)H[g++]=D[h],H[g++]=D[h+1],H[g++]=D[h+1],H[g++]=D[h+2],H[g++]=D[h+2],H[g++]=D[h];this._linesIndexBuffer=h.createIndexBuffer(H),this._linesIndexCount=H.length}return this._linesIndexBuffer}canIntersects(D){const h=this.getBoundingInfo();return!!h&&D.intersectsBox(h.boundingBox)}intersects(D,h,o,H,g){const j=this.uD();if(!j)return null;let M=3,R=!1;switch(j.fillMode){case 3:case 5:case 6:case 8:return null;case 7:M=1,R=!0}return 4===j.fillMode?o.length?this._intersectLines(D,h,o,this._mesh.intersectionThreshold,H):this._intersectUnIndexedLines(D,h,o,this._mesh.intersectionThreshold,H):!o.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(D,h,o,H,g):this._intersectTriangles(D,h,o,M,R,H,g)}_intersectLines(D,h,o,H,j){let M=null;for(let R=this.indexStart;R<this.indexStart+this.indexCount;R+=2){const t=h[o[R]],S=h[o[R+1]],k=D.intersectionSegment(t,S,H);if(!(k<0)&&((j||!M||k<M.distance)&&(M=new g.d(null,null,k),M.faceId=R/2,j)))break}return M}_intersectUnIndexedLines(D,h,o,H,j){let M=null;for(let R=this.verticesStart;R<this.verticesStart+this.verticesCount;R+=2){const o=h[R],t=h[R+1],S=D.intersectionSegment(o,t,H);if(!(S<0)&&((j||!M||S<M.distance)&&(M=new g.d(null,null,S),M.faceId=R/2,j)))break}return M}_intersectTriangles(D,h,o,H,g,j,M){let R=null,t=-1;for(let S=this.indexStart;S<this.indexStart+this.indexCount-(3-H);S+=H){t++;const H=o[S],k=o[S+1],K=o[S+2];if(g&&4294967295===K){S+=2;continue}const Q=h[H],v=h[k],r=h[K];if(!Q||!v||!r)continue;if(M&&!M(Q,v,r,D,H,k,K))continue;const B=D.intersectsTriangle(Q,v,r);if(B){if(B.distance<0)continue;if((j||!R||B.distance<R.distance)&&(R=B,R.faceId=t,j))break}}return R}_intersectUnIndexedTriangles(D,h,o,H,g){let j=null;for(let M=this.verticesStart;M<this.verticesStart+this.verticesCount;M+=3){const o=h[M],R=h[M+1],t=h[M+2];if(g&&!g(o,R,t,D,-1,-1,-1))continue;const S=D.intersectsTriangle(o,R,t);if(S){if(S.distance<0)continue;if((H||!j||S.distance<j.distance)&&(j=S,j.faceId=M/3,H))break}}return j}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(D,h){const o=new t(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,D,h,!1);if(!this.IsGlobal){const D=this.getBoundingInfo();if(!D)return o;o._boundingInfo=new j.d(D.minimum,D.maximum)}return o}dispose(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.GD().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const h=this._mesh.nh.indexOf(this);this._mesh.nh.splice(h,1),this.resetDrawCache(void 0,D)}getClassName(){return"SubMesh"}static CreateFromIndices(D,h,o,H,g){let j=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],M=Number.MAX_VALUE,R=-Number.MAX_VALUE;const S=(g||H).jg();for(let t=h;t<h+o;t++){const D=S[t];D<M&&(M=D),D>R&&(R=D)}return new t(D,M,R-M+1,h,o,H,g,j)}}}}]);