"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[24],{11710:(S,v,D)=>{D.d(v,{b:()=>z});class z{constructor(S,v,D){this.bu=S,this.bv=v,this.distance=D,this.faceId=0,this.subMeshId=0}}},11718:(S,v,D)=>{D.d(v,{c:()=>m});var z=D(11386),e=D(11371),N=D(11377);class m{constructor(S,v,D){this.vectors=(0,z.d)(8,e.Rv.Zero),this.center=e.Rv.Zero(),this.centerWorld=e.Rv.Zero(),this.extendSize=e.Rv.Zero(),this.extendSizeWorld=e.Rv.Zero(),this.directions=(0,z.d)(3,e.Rv.Zero),this.vectorsWorld=(0,z.d)(8,e.Rv.Zero),this.minimumWorld=e.Rv.Zero(),this.maximumWorld=e.Rv.Zero(),this.minimum=e.Rv.Zero(),this.maximum=e.Rv.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(S,v,D)}reConstruct(S,v,D){const z=S.x,N=S.y,m=S.z,B=v.x,g=v.y,E=v.z,h=this.vectors;this.minimum.oe(z,N,m),this.maximum.oe(B,g,E),h[0].oe(z,N,m),h[1].oe(B,g,E),h[2].oe(B,N,m),h[3].oe(z,g,m),h[4].oe(z,N,E),h[5].oe(B,g,m),h[6].oe(z,g,E),h[7].oe(B,N,E),v.addToRef(S,this.center).scaleInPlace(.5),v.subtractToRef(S,this.extendSize).scaleInPlace(.5),this._worldMatrix=D||e.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(S){const v=m._TmpVector3,D=this.maximum.subtractToRef(this.minimum,v[0]),z=D.length();D.normalizeFromLength(z);const e=z*S,N=D.scaleInPlace(.5*e),B=this.center.subtractToRef(N,v[1]),g=this.center.addToRef(N,v[2]);return this.reConstruct(B,g,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(S){const v=this.minimumWorld,D=this.maximumWorld,z=this.directions,N=this.vectorsWorld,m=this.vectors;if(S.isIdentity()){v.N(this.minimum),D.N(this.maximum);for(let S=0;S<8;++S)N[S].N(m[S]);this.extendSizeWorld.N(this.extendSize),this.centerWorld.N(this.center)}else{v.Je(Number.MAX_VALUE),D.Je(-Number.MAX_VALUE);for(let z=0;z<8;++z){const B=N[z];e.Rv.TransformCoordinatesToRef(m[z],S,B),v.minimizeInPlace(B),D.maximizeInPlace(B)}D.subtractToRef(v,this.extendSizeWorld).scaleInPlace(.5),D.addToRef(v,this.centerWorld).scaleInPlace(.5)}e.Rv.FromArrayToRef(S.m,0,z[0]),e.Rv.FromArrayToRef(S.m,4,z[1]),e.Rv.FromArrayToRef(S.m,8,z[2]),this._worldMatrix=S}isInFrustum(S){return m.IsInFrustum(this.vectorsWorld,S)}isCompletelyInFrustum(S){return m.IsCompletelyInFrustum(this.vectorsWorld,S)}intersectsPoint(S){const v=this.minimumWorld,D=this.maximumWorld,z=v.x,e=v.y,m=v.z,B=D.x,g=D.y,E=D.z,h=S.x,A=S.y,w=S.z,n=-N.e;return!(B-h<n||n>h-z)&&(!(g-A<n||n>A-e)&&!(E-w<n||n>w-m))}intersectsSphere(S){return m.IntersectsSphere(this.minimumWorld,this.maximumWorld,S.centerWorld,S.radiusWorld)}intersectsMinMax(S,v){const D=this.minimumWorld,z=this.maximumWorld,e=D.x,N=D.y,m=D.z,B=z.x,g=z.y,E=z.z,h=S.x,A=S.y,w=S.z,n=v.x,R=v.y,O=v.z;return!(B<h||e>n)&&(!(g<A||N>R)&&!(E<w||m>O))}dispose(){var S,v;null===(S=this._drawWrapperFront)||void 0===S||S.dispose(),null===(v=this._drawWrapperBack)||void 0===v||v.dispose()}static Intersects(S,v){return S.intersectsMinMax(v.minimumWorld,v.maximumWorld)}static IntersectsSphere(S,v,D,z){const N=m._TmpVector3[0];e.Rv.ClampToRef(D,S,v,N);return e.Rv.DistanceSquared(D,N)<=z*z}static IsCompletelyInFrustum(S,v){for(let D=0;D<6;++D){const z=v[D];for(let v=0;v<8;++v)if(z.dotCoordinate(S[v])<0)return!1}return!0}static IsInFrustum(S,v){for(let D=0;D<6;++D){let z=!0;const e=v[D];for(let v=0;v<8;++v)if(e.dotCoordinate(S[v])>=0){z=!1;break}if(z)return!1}return!0}}m._TmpVector3=(0,z.d)(3,e.Rv.Zero)},11716:(S,v,D)=>{D.d(v,{c:()=>A});var z=D(11386),e=D(11371),N=D(11718),m=D(11721);const B={min:0,max:0},g={min:0,max:0},E=(S,v,D)=>{const z=e.Rv.Dot(v.centerWorld,S),N=Math.abs(e.Rv.Dot(v.directions[0],S))*v.extendSize.x+Math.abs(e.Rv.Dot(v.directions[1],S))*v.extendSize.y+Math.abs(e.Rv.Dot(v.directions[2],S))*v.extendSize.z;D.min=z-N,D.max=z+N},h=(S,v,D)=>(E(S,v,B),E(S,D,g),!(B.min>g.max||g.min>B.max));class A{constructor(S,v,D){this._isLocked=!1,this.boundingBox=new N.c(S,v,D),this.boundingSphere=new m.e(S,v,D)}reConstruct(S,v,D){this.boundingBox.reConstruct(S,v,D),this.boundingSphere.reConstruct(S,v,D)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(S){this._isLocked=S}update(S){this._isLocked||(this.boundingBox._update(S),this.boundingSphere._update(S))}centerOn(S,v){const D=A._TmpVector3[0].N(S).tA(v),z=A._TmpVector3[1].N(S).addInPlace(v);return this.boundingBox.reConstruct(D,z,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(D,z,this.boundingBox.getWorldMatrix()),this}encapsulate(S){const v=e.Rv.Minimize(this.minimum,S),D=e.Rv.Maximize(this.maximum,S);return this.reConstruct(v,D,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(S){const v=e.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(v);const D=e.TmpVectors.Rv[0];return e.Rv.TransformCoordinatesToRef(S.boundingBox.minimumWorld,v,D),this.encapsulate(D),e.Rv.TransformCoordinatesToRef(S.boundingBox.maximumWorld,v,D),this.encapsulate(D),this}scale(S){return this.boundingBox.scale(S),this.boundingSphere.scale(S),this}isInFrustum(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===v||3===v)&&this.boundingSphere.isCenterInFrustum(S))return!0;if(!this.boundingSphere.isInFrustum(S))return!1;return!(1!==v&&3!==v)||this.boundingBox.isInFrustum(S)}get diagonalLength(){const S=this.boundingBox;return S.maximumWorld.subtractToRef(S.minimumWorld,A._TmpVector3[0]).length()}isCompletelyInFrustum(S){return this.boundingBox.isCompletelyInFrustum(S)}_checkCollision(S){return S._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(S){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(S)&&!!this.boundingBox.intersectsPoint(S))}intersects(S,v){if(!m.e.Intersects(this.boundingSphere,S.boundingSphere))return!1;if(!N.c.Intersects(this.boundingBox,S.boundingBox))return!1;if(!v)return!0;const D=this.boundingBox,z=S.boundingBox;return!!h(D.directions[0],D,z)&&(!!h(D.directions[1],D,z)&&(!!h(D.directions[2],D,z)&&(!!h(z.directions[0],D,z)&&(!!h(z.directions[1],D,z)&&(!!h(z.directions[2],D,z)&&(!!h(e.Rv.Cross(D.directions[0],z.directions[0]),D,z)&&(!!h(e.Rv.Cross(D.directions[0],z.directions[1]),D,z)&&(!!h(e.Rv.Cross(D.directions[0],z.directions[2]),D,z)&&(!!h(e.Rv.Cross(D.directions[1],z.directions[0]),D,z)&&(!!h(e.Rv.Cross(D.directions[1],z.directions[1]),D,z)&&(!!h(e.Rv.Cross(D.directions[1],z.directions[2]),D,z)&&(!!h(e.Rv.Cross(D.directions[2],z.directions[0]),D,z)&&(!!h(e.Rv.Cross(D.directions[2],z.directions[1]),D,z)&&!!h(e.Rv.Cross(D.directions[2],z.directions[2]),D,z))))))))))))))}}A._TmpVector3=(0,z.d)(2,e.Rv.Zero)},11721:(S,v,D)=>{D.d(v,{e:()=>N});var z=D(11386),e=D(11371);class N{constructor(S,v,D){this.center=e.Rv.Zero(),this.centerWorld=e.Rv.Zero(),this.minimum=e.Rv.Zero(),this.maximum=e.Rv.Zero(),this.reConstruct(S,v,D)}reConstruct(S,v,D){this.minimum.N(S),this.maximum.N(v);const z=e.Rv.Distance(S,v);v.addToRef(S,this.center).scaleInPlace(.5),this.radius=.5*z,this._update(D||e.Matrix.IdentityReadOnly)}scale(S){const v=this.radius*S,D=N._TmpVector3,z=D[0].Je(v),e=this.center.subtractToRef(z,D[1]),m=this.center.addToRef(z,D[2]);return this.reConstruct(e,m,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(S){if(S.isIdentity())this.centerWorld.N(this.center),this.radiusWorld=this.radius;else{e.Rv.TransformCoordinatesToRef(this.center,S,this.centerWorld);const v=N._TmpVector3[0];e.Rv.TransformNormalFromFloatsToRef(1,1,1,S,v),this.radiusWorld=Math.max(Math.abs(v.x),Math.abs(v.y),Math.abs(v.z))*this.radius}}isInFrustum(S){const v=this.centerWorld,D=this.radiusWorld;for(let z=0;z<6;z++)if(S[z].dotCoordinate(v)<=-D)return!1;return!0}isCenterInFrustum(S){const v=this.centerWorld;for(let D=0;D<6;D++)if(S[D].dotCoordinate(v)<0)return!1;return!0}intersectsPoint(S){const v=e.Rv.DistanceSquared(this.centerWorld,S);return!(this.radiusWorld*this.radiusWorld<v)}static Intersects(S,v){const D=e.Rv.DistanceSquared(S.centerWorld,v.centerWorld),z=S.radiusWorld+v.radiusWorld;return!(z*z<D)}static CreateFromCenterAndRadius(S,v,D){this._TmpVector3[0].N(S),this._TmpVector3[1].oe(0,0,v),this._TmpVector3[2].N(S),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].tA(this._TmpVector3[1]);const z=new N(this._TmpVector3[0],this._TmpVector3[2]);return z._worldMatrix=D||e.Matrix.Identity(),z}}N._TmpVector3=(0,z.d)(3,e.Rv.Zero)},11738:(S,v,D)=>{function z(S){-1===S.indexOf("vClipPlane")&&S.push("vClipPlane"),-1===S.indexOf("vClipPlane2")&&S.push("vClipPlane2"),-1===S.indexOf("vClipPlane3")&&S.push("vClipPlane3"),-1===S.indexOf("vClipPlane4")&&S.push("vClipPlane4"),-1===S.indexOf("vClipPlane5")&&S.push("vClipPlane5"),-1===S.indexOf("vClipPlane6")&&S.push("vClipPlane6")}function e(S,v,D){const z=!!(S.clipPlane??v.clipPlane),e=!!(S.clipPlane2??v.clipPlane2),N=!!(S.clipPlane3??v.clipPlane3),m=!!(S.clipPlane4??v.clipPlane4),B=!!(S.clipPlane5??v.clipPlane5),g=!!(S.clipPlane6??v.clipPlane6);z&&D.push("#define CLIPPLANE"),e&&D.push("#define CLIPPLANE2"),N&&D.push("#define CLIPPLANE3"),m&&D.push("#define CLIPPLANE4"),B&&D.push("#define CLIPPLANE5"),g&&D.push("#define CLIPPLANE6")}function N(S,v,D){let z=!1;const e=!!(S.clipPlane??v.clipPlane),N=!!(S.clipPlane2??v.clipPlane2),m=!!(S.clipPlane3??v.clipPlane3),B=!!(S.clipPlane4??v.clipPlane4),g=!!(S.clipPlane5??v.clipPlane5),E=!!(S.clipPlane6??v.clipPlane6);return D.CLIPPLANE!==e&&(D.CLIPPLANE=e,z=!0),D.CLIPPLANE2!==N&&(D.CLIPPLANE2=N,z=!0),D.CLIPPLANE3!==m&&(D.CLIPPLANE3=m,z=!0),D.CLIPPLANE4!==B&&(D.CLIPPLANE4=B,z=!0),D.CLIPPLANE5!==g&&(D.CLIPPLANE5=g,z=!0),D.CLIPPLANE6!==E&&(D.CLIPPLANE6=E,z=!0),z}function m(S,v,D){let z=v.clipPlane??D.clipPlane;B(S,"vClipPlane",z),z=v.clipPlane2??D.clipPlane2,B(S,"vClipPlane2",z),z=v.clipPlane3??D.clipPlane3,B(S,"vClipPlane3",z),z=v.clipPlane4??D.clipPlane4,B(S,"vClipPlane4",z),z=v.clipPlane5??D.clipPlane5,B(S,"vClipPlane5",z),z=v.clipPlane6??D.clipPlane6,B(S,"vClipPlane6",z)}function B(S,v,D){D&&S.setFloat4(v,D.normal.x,D.normal.y,D.normal.z,D.d)}D.d(v,{d:()=>z,e:()=>m,f:()=>N,h:()=>e})},11687:(S,v,D)=>{D.d(v,{d:()=>z});class z{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(S,v){this._defines[S]||(S<this._currentRank&&(this._currentRank=S),S>this._maxRank&&(this._maxRank=S),this._defines[S]=new Array),this._defines[S].push(v)}addCPUSkinningFallback(S,v){this._mesh=v,S<this._currentRank&&(this._currentRank=S),S>this._maxRank&&(this._maxRank=S)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(S,v){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,S=S.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),v._bonesComputationForcedToCPU=!0;const D=this._mesh.xS();for(let S=0;S<D.meshes.length;S++){const z=D.meshes[S];if(z.material){if(z.computeBonesUsingShaders&&0!==z.numBoneInfluencers)if(z.material.getEffect()===v)z.computeBonesUsingShaders=!1;else if(z.he)for(const S of z.he){if(S.effect===v){z.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&z.computeBonesUsingShaders&&z.numBoneInfluencers>0&&(z.computeBonesUsingShaders=!1)}}else{const v=this._defines[this._currentRank];if(v)for(let D=0;D<v.length;D++)S=S.replace("#define "+v[D],"");this._currentRank++}return S}}},11699:(S,v,D)=>{D.d(v,{d:()=>I});var z=D(11358),e=D(11364),N=D(11175),m=D(11179),B=D(11222),g=D(11705),E=D(11639),h=D(11190),A=D(11431),w=D(11494),n=D(11415);class R{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(S){this._func=S}get funcRef(){return this._funcRef}set funcRef(S){this._funcRef=S}get funcMask(){return this._funcMask}set funcMask(S){this._funcMask=S}get opStencilFail(){return this._opStencilFail}set opStencilFail(S){this._opStencilFail=S}get opDepthFail(){return this._opDepthFail}set opDepthFail(S){this._opDepthFail=S}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(S){this._opStencilDepthPass=S}get mask(){return this._mask}set mask(S){this._mask=S}get enabled(){return this._enabled}set enabled(S){this._enabled=S}getClassName(){return"MaterialStencilState"}copyTo(S){n.b.Clone((()=>S),this)}serialize(){return n.b.Serialize(this)}parse(S,v,D){n.b.Parse((()=>this),S,v,D)}}(0,z.b)([(0,e.L)()],R.prototype,"func",null),(0,z.b)([(0,e.L)()],R.prototype,"funcRef",null),(0,z.b)([(0,e.L)()],R.prototype,"funcMask",null),(0,z.b)([(0,e.L)()],R.prototype,"opStencilFail",null),(0,z.b)([(0,e.L)()],R.prototype,"opDepthFail",null),(0,z.b)([(0,e.L)()],R.prototype,"opStencilDepthPass",null),(0,z.b)([(0,e.L)()],R.prototype,"mask",null),(0,z.b)([(0,e.L)()],R.prototype,"enabled",null);var O=D(11736);class I{get _supportGlowLayer(){return!1}set _glowModeEnabled(S){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(S){if(this._alpha===S)return;const v=this._alpha;this._alpha=S,1!==v&&1!==S||this.PE(I.MiscDirtyFlag+I.PrePassDirtyFlag)}get alpha(){return this._alpha}set Xe(S){this._backFaceCulling!==S&&(this._backFaceCulling=S,this.PE(I.TextureDirtyFlag))}get Xe(){return this._backFaceCulling}set cullBackFaces(S){this._cullBackFaces!==S&&(this._cullBackFaces=S,this.PE(I.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(S){this._blockDirtyMechanism!==S&&(this._blockDirtyMechanism=S,S||this.qw())}atomicMaterialsUpdate(S){this.blockDirtyMechanism=!0;try{S(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(S){this._onDisposeObserver&&this.Se.remove(this._onDisposeObserver),this._onDisposeObserver=this.Se.add(S)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new m.d),this._onBindObservable}set onBind(S){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(S)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new m.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new m.d),this._onEffectCreatedObservable}set alphaMode(S){this._alphaMode!==S&&(this._alphaMode=S,this.PE(I.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(S){this._needDepthPrePass!==S&&(this._needDepthPrePass=S,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(S){this._fogEnabled!==S&&(this._fogEnabled=S,this.PE(I.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case I.WireFrameFillMode:case I.LineListDrawMode:case I.LineLoopDrawMode:case I.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(S){this.fillMode=S?I.WireFrameFillMode:I.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case I.PointFillMode:case I.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(S){this.fillMode=S?I.PointFillMode:I.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(S){this._fillMode!==S&&(this._fillMode=S,this.PE(I.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(S){const v=this.xS().getEngine().getCaps().fragmentDepthSupported;S&&!v&&h.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=S&&v,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(S){this._drawWrapper=S}constructor(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Se=new m.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new R,this._useUBO=!1,this._fillMode=I.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=S;const e=v||B.c.LastCreatedScene;e&&(this._scene=e,this._dirtyCallbacks={},this._forceGLSL=z,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=S||N.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new w.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new E.d(this._scene.getEngine(),void 0,void 0,S),this._useUBO=this.xS().getEngine().supportsUniformBuffers,this._createUniformBuffer(),D||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),I.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var S;const v=this.xS().getEngine();null===(S=this._uniformBuffer)||void 0===S||S.dispose(),v.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new E.d(v,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new E.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(S){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.qw(),this.checkReadyOnlyOnce=!0}unfreeze(){this.qw(),this.checkReadyOnlyOnce=!1}isReady(S,v){return!0}isReadyForSubMesh(S,v,D){const z=v.materialDefines;return!!z&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=z,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}xS(){return this._scene}_getEffectiveOrientation(S){return null!==this.sideOrientation?this.sideOrientation:S.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(S){this._transparencyMode!==S&&(this._transparencyMode=S,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===I.MATERIAL_ALPHABLEND||this._transparencyMode===I.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===I.MATERIAL_ALPHATEST||this._transparencyMode===I.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===I.MATERIAL_OPAQUE||this._transparencyMode===I.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(S){return this._hasTransparencyMode?this._transparencyModeIsBlend:S.visibility<1||!this._disableAlphaBlending&&(S.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(S){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(S)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}qw(){let S=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const v=this.xS().meshes;for(const D of v)if(D.he)for(const v of D.he)if(v.cS()===this)for(const D of v._drawWrappers)D&&this._materialContext===D.materialContext&&(D._wasPreviouslyReady=!1,D._wasPreviouslyUsingInstances=null,D._forceRebindOnNextCall=S);S&&this.PE(I.AllDirtyFlag)}_preBind(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const D=this._scene.getEngine(),z=(null==v?this.sideOrientation:v)===I.ClockWiseSideOrientation;return D.enableEffect(S||this._getDrawWrapper()),D.setState(this.Xe,this.zOffset,!1,z,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),z}bind(S,v){}buildUniformLayout(){const S=this._uniformBuffer;this._eventInfo.ubo=S,this._callbackPluginEventGeneric(8,this._eventInfo),S.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(S,v,D){const z=D._drawWrapper;this._eventInfo.subMesh=D,this._callbackPluginEventBindForSubMesh(this._eventInfo),z._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(S){}bindView(S){this._useUBO?this._needToBindSceneUbo=!0:S.setMatrix("view",this.xS().getViewMatrix())}bindViewProjection(S){this._useUBO?this._needToBindSceneUbo=!0:(S.setMatrix("viewProjection",this.xS().getTransformMatrix()),S.setMatrix("projection",this.xS().getProjectionMatrix()))}bindEyePosition(S,v){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(S,v)}_afterBind(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&v&&(this._needToBindSceneUbo=!1,(0,O.r)(v,this.xS().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=S?S.visibility:1,this._onBindObservable&&S&&this._onBindObservable.notifyObservers(S),this.disableDepthWrite){const S=this._scene.getEngine();this._cachedDepthWriteState=S.getDepthWrite(),S.setDepthWrite(!1)}if(this.disableColorWrite){const S=this._scene.getEngine();this._cachedColorWriteState=S.getColorWrite(),S.setColorWrite(!1)}if(0!==this.depthFunction){const S=this._scene.getEngine();this._cachedDepthFunctionState=S.getDepthFunction()||0,S.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(S){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=S,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(S){return null}_clonePlugins(S,v){const D={};if(this._serializePlugins(D),I._ParsePlugins(D,S,this._scene,v),this.pluginManager)for(const z of this.pluginManager._plugins){const v=S.pluginManager.getPlugin(z.name);v&&z.copyTo(v)}}getBindedMeshes(){if(this.meshMap){const S=[];for(const v in this.meshMap){const D=this.meshMap[v];D&&S.push(D)}return S}return this._scene.meshes.filter((S=>S.material===this))}forceCompilation(S,v,D,z){const e={clipPlane:!1,useInstances:!1,...D},N=this.xS(),m=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const B=()=>{if(!this._scene||!this._scene.getEngine())return;const D=N.clipPlane;if(e.clipPlane&&(N.clipPlane=new A.c(0,0,0,1)),this._storeEffectOnSubMeshes){let D=!0,N=null;if(S.he){const v=new g.d(0,0,0,0,0,S,void 0,!1,!1);v.materialDefines&&(v.materialDefines._renderId=-1),this.isReadyForSubMesh(S,v,e.useInstances)||(v.effect&&v.effect.getCompilationError()&&v.effect.allFallbacksProcessed()?N=v.effect.getCompilationError():(D=!1,setTimeout(B,16)))}D&&(this.allowShaderHotSwapping=m,N&&z&&z(N),v&&v(this))}else this.isReady()?(this.allowShaderHotSwapping=m,v&&v(this)):setTimeout(B,16);e.clipPlane&&(N.clipPlane=D)};B()}async forceCompilationAsync(S,v){return await new Promise(((D,z)=>{this.forceCompilation(S,(()=>{D()}),v,(S=>{z(S)}))}))}PE(S){this.xS().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(I._DirtyCallbackArray.length=0,S&I.ImageProcessingDirtyFlag&&I._DirtyCallbackArray.push(I._ImageProcessingDirtyCallBack),S&I.TextureDirtyFlag&&I._DirtyCallbackArray.push(I._TextureDirtyCallBack),S&I.LightDirtyFlag&&I._DirtyCallbackArray.push(I._LightsDirtyCallBack),S&I.FresnelDirtyFlag&&I._DirtyCallbackArray.push(I._FresnelDirtyCallBack),S&I.AttributesDirtyFlag&&I._DirtyCallbackArray.push(I._AttributeDirtyCallBack),S&I.MiscDirtyFlag&&I._DirtyCallbackArray.push(I._MiscDirtyCallBack),S&I.PrePassDirtyFlag&&I._DirtyCallbackArray.push(I._PrePassDirtyCallBack),I._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(I._RunDirtyCallBacks),this.xS().resetCachedMaterial())}resetDrawCache(){const S=this.xS().meshes;for(const v of S)if(v.he)for(const S of v.he)S.cS()===this&&S.resetDrawCache()}_markAllSubMeshesAsDirty(S){const v=this.xS();if(v.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const D=v.meshes;for(const z of D)if(z.he)for(const D of z.he){if((D.cS()||(v._hasDefaultMaterial?v.defaultMaterial:null))===this)for(const v of D._drawWrappers)v&&v.defines&&v.defines.markAllAsDirty&&this._materialContext===v.materialContext&&S(v.defines)}}_markScenePrePassDirty(){if(this.xS().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const S=this.xS().enablePrePassRenderer();S&&S.PE()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(I._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(I._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(I._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(I._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(I._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(I._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(I._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(I._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(I._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(I._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const S=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Se.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(S)}))}}setPrePassRenderer(S){return!1}dispose(S,v,D){const z=this.xS();if(z.stopAnimation(this),z.freeProcessedMaterials(),z.removeMaterial(this),this._eventInfo.forceDisposeTextures=v,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const S=this._parentContainer.materials.indexOf(this);S>-1&&this._parentContainer.materials.splice(S,1),this._parentContainer=null}if(!0!==D)if(this.meshMap)for(const e in this.meshMap){const S=this.meshMap[e];this._disposeMeshResources(S)}else{const S=z.meshes;for(const v of S)this._disposeMeshResources(v)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Se.notifyObservers(this),this.Se.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(S){if(!S)return;const v=S.ie,D=S._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(S.he&&D)for(const e of S.he){const S=e._drawWrappers;for(let N=0;N<S.length;N++){var z;const m=null===(z=S[N])||void 0===z?void 0:z.effect;if(!m)continue;D[N]===this&&(null===v||void 0===v||v._releaseVertexArrayObject(m),e._removeDrawWrapper(N,!0,!0))}}}else null===v||void 0===v||v._releaseVertexArrayObject(this._drawWrapper.effect);S.material!==this||S.sourceMesh||(S.material=null)}serialize(){const S=n.b.Serialize(this);return S.stencil=this.stencil.serialize(),S.uniqueId=this.uniqueId,this._serializePlugins(S),S}_serializePlugins(S){if(S.plugins={},this.pluginManager)for(const v of this.pluginManager._plugins)v.doNotSerialize||(S.plugins[v.getClassName()]=v.serialize())}static Parse(S,v,D){if(S.customType){if("BABYLON.PBRMaterial"===S.customType&&S.overloadedAlbedo&&(S.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return h.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else S.customType="BABYLON.StandardMaterial";const z=N.Tools.Instantiate(S.customType).Parse(S,v,D);return z._loadedUniqueId=S.uniqueId,z}static _ParsePlugins(S,v,D,z){if(S.plugins)for(const B in S.plugins){var e,m;const g=S.plugins[B];let E=null===(e=v.pluginManager)||void 0===e?void 0:e.getPlugin(g.name);if(!E){const S=N.Tools.Instantiate("BABYLON."+B);S&&(E=new S(v))}null===(m=E)||void 0===m||m.parse(g,D,z)}}}I.TriangleFillMode=0,I.WireFrameFillMode=1,I.PointFillMode=2,I.PointListDrawMode=3,I.LineListDrawMode=4,I.LineLoopDrawMode=5,I.LineStripDrawMode=6,I.TriangleStripDrawMode=7,I.TriangleFanDrawMode=8,I.ClockWiseSideOrientation=0,I.CounterClockWiseSideOrientation=1,I.ImageProcessingDirtyFlag=64,I.TextureDirtyFlag=1,I.LightDirtyFlag=2,I.FresnelDirtyFlag=4,I.AttributesDirtyFlag=8,I.MiscDirtyFlag=16,I.PrePassDirtyFlag=32,I.AllDirtyFlag=127,I.MATERIAL_OPAQUE=0,I.MATERIAL_ALPHATEST=1,I.MATERIAL_ALPHABLEND=2,I.MATERIAL_ALPHATESTANDBLEND=3,I.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,I.MATERIAL_NORMALBLENDMETHOD_RNM=1,I.OnEventObservable=new m.d,I._AllDirtyCallBack=S=>S.markAllAsDirty(),I._ImageProcessingDirtyCallBack=S=>S.markAsImageProcessingDirty(),I._TextureDirtyCallBack=S=>S.markAsTexturesDirty(),I._FresnelDirtyCallBack=S=>S.markAsFresnelDirty(),I._MiscDirtyCallBack=S=>S.markAsMiscDirty(),I._PrePassDirtyCallBack=S=>S.markAsPrePassDirty(),I._LightsDirtyCallBack=S=>S.markAsLightDirty(),I._AttributeDirtyCallBack=S=>S.markAsAttributesDirty(),I._FresnelAndMiscDirtyCallBack=S=>{I._FresnelDirtyCallBack(S),I._MiscDirtyCallBack(S)},I._TextureAndMiscDirtyCallBack=S=>{I._TextureDirtyCallBack(S),I._MiscDirtyCallBack(S)},I._DirtyCallbackArray=[],I._RunDirtyCallBacks=S=>{for(const v of I._DirtyCallbackArray)v(S)},(0,z.b)([(0,e.L)()],I.prototype,"id",void 0),(0,z.b)([(0,e.L)()],I.prototype,"uniqueId",void 0),(0,z.b)([(0,e.L)()],I.prototype,"name",void 0),(0,z.b)([(0,e.L)()],I.prototype,"metadata",void 0),(0,z.b)([(0,e.L)()],I.prototype,"checkReadyOnEveryCall",void 0),(0,z.b)([(0,e.L)()],I.prototype,"checkReadyOnlyOnce",void 0),(0,z.b)([(0,e.L)()],I.prototype,"state",void 0),(0,z.b)([(0,e.L)("alpha")],I.prototype,"_alpha",void 0),(0,z.b)([(0,e.L)("Xe")],I.prototype,"_backFaceCulling",void 0),(0,z.b)([(0,e.L)("cullBackFaces")],I.prototype,"_cullBackFaces",void 0),(0,z.b)([(0,e.L)()],I.prototype,"sideOrientation",void 0),(0,z.b)([(0,e.L)("alphaMode")],I.prototype,"_alphaMode",void 0),(0,z.b)([(0,e.L)()],I.prototype,"_needDepthPrePass",void 0),(0,z.b)([(0,e.L)()],I.prototype,"disableDepthWrite",void 0),(0,z.b)([(0,e.L)()],I.prototype,"disableColorWrite",void 0),(0,z.b)([(0,e.L)()],I.prototype,"forceDepthWrite",void 0),(0,z.b)([(0,e.L)()],I.prototype,"depthFunction",void 0),(0,z.b)([(0,e.L)()],I.prototype,"separateCullingPass",void 0),(0,z.b)([(0,e.L)("fogEnabled")],I.prototype,"_fogEnabled",void 0),(0,z.b)([(0,e.L)()],I.prototype,"pointSize",void 0),(0,z.b)([(0,e.L)()],I.prototype,"zOffset",void 0),(0,z.b)([(0,e.L)()],I.prototype,"zOffsetUnits",void 0),(0,z.b)([(0,e.L)()],I.prototype,"pointsCloud",null),(0,z.b)([(0,e.L)()],I.prototype,"fillMode",null),(0,z.b)([(0,e.L)()],I.prototype,"useLogarithmicDepth",null),(0,z.b)([(0,e.L)()],I.prototype,"transparencyMode",null)},11736:(S,v,D)=>{D.d(v,{$:()=>c,B:()=>x,D:()=>W,G:()=>n,H:()=>w,J:()=>t,L:()=>i,N:()=>k,Q:()=>K,S:()=>b,U:()=>X,X:()=>a,Y:()=>o,cb:()=>R,e:()=>s,h:()=>A,k:()=>d,m:()=>h,p:()=>O,r:()=>I,s:()=>q,w:()=>p,z:()=>u});var z=D(11190),e=D(11425),N=D(11222),m=D(11680),B=D(11738);const g=e.qv.Black(),E={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function h(S,v,D){if(!S||S.LOGARITHMICDEPTH||S.indexOf&&S.indexOf("LOGARITHMICDEPTH")>=0){const S=D.activeCamera;1===S.mode&&z.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),v.setFloat("logarithmicDepthConstant",2/(Math.log(S.maxZ+1)/Math.LN2))}}function A(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];D&&S.fogEnabled&&(!v||v.applyFog)&&0!==S.fogMode&&(D.setFloat4("vFogInfos",S.fogMode,S.fogStart,S.fogEnd,S.fogDensity),z?(S.fogColor.toLinearSpaceToRef(g,S.getEngine().useExactSrgbConversions),D.setColor3("vFogColor",g)):D.setColor3("vFogColor",S.fogColor))}function w(S,v,D,z,e,N,m,B,g,h){const A=S.numMaxInfluencers||S.numInfluencers;return A<=0?0:(v.push("#define MORPHTARGETS"),S.hasPositions&&v.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),S.hasNormals&&v.push("#define MORPHTARGETTEXTURE_HASNORMALS"),S.hasTangents&&v.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),S.hasUVs&&v.push("#define MORPHTARGETTEXTURE_HASUVS"),S.hasUV2s&&v.push("#define MORPHTARGETTEXTURE_HASUV2S"),S.hasColors&&v.push("#define MORPHTARGETTEXTURE_HASCOLORS"),S.supportsPositions&&e&&v.push("#define MORPHTARGETS_POSITION"),S.supportsNormals&&N&&v.push("#define MORPHTARGETS_NORMAL"),S.supportsTangents&&m&&v.push("#define MORPHTARGETS_TANGENT"),S.supportsUVs&&B&&v.push("#define MORPHTARGETS_UV"),S.supportsUV2s&&g&&v.push("#define MORPHTARGETS_UV2"),S.supportsColors&&h&&v.push("#define MORPHTARGETS_COLOR"),v.push("#define NUM_MORPH_INFLUENCERS "+A),S.isUsingTextureForTargets&&v.push("#define MORPHTARGETS_TEXTURE"),E.NUM_MORPH_INFLUENCERS=A,E.NORMAL=N,E.TANGENT=m,E.UV=B,E.UV2=g,E.COLOR=h,n(D,z,E,e),A)}function n(S,v,D){let e=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const m=D.NUM_MORPH_INFLUENCERS;if(m>0&&N.c.LastCreatedEngine){const B=N.c.LastCreatedEngine.getCaps().maxVertexAttribs,g=v.morphTargetManager;if(null!==g&&void 0!==g&&g.isUsingTextureForTargets)return;const E=g&&g.supportsPositions&&e,h=g&&g.supportsNormals&&D.NORMAL,A=g&&g.supportsTangents&&D.TANGENT,w=g&&g.supportsUVs&&D.UV1,n=g&&g.supportsUV2s&&D.UV2,R=g&&g.supportsColors&&D.VERTEXCOLOR;for(let D=0;D<m;D++)E&&S.push("position"+D),h&&S.push("normal"+D),A&&S.push("tangent"+D),w&&S.push("uv_"+D),n&&S.push("uv2_"+D),R&&S.push("color"+D),S.length>B&&z.b.Error("Cannot add more vertex attributes for mesh "+v.name)}}function R(S){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];S.push("world0"),S.push("world1"),S.push("world2"),S.push("world3"),v&&(S.push("previousWorld0"),S.push("previousWorld1"),S.push("previousWorld2"),S.push("previousWorld3"))}function O(S,v){const D=S.morphTargetManager;S&&D&&v.setFloatArray("morphTargetInfluences",D.influences)}function I(S,v){v.bindToEffect(S,"Scene")}function K(S,v,D){v._needUVs=!0,v[D]=!0,S.optimizeUVAllocation&&S.getTextureMatrix().isIdentityAs3x2()?(v[D+"DIRECTUV"]=S.coordinatesIndex+1,v["MAINUV"+(S.coordinatesIndex+1)]=!0):v[D+"DIRECTUV"]=0}function q(S,v,D){const z=S.getTextureMatrix();v.pe(D+"Matrix",z)}function u(S,v,D){D.BAKED_VERTEX_ANIMATION_TEXTURE&&D.INSTANCES&&S.push("bakedVertexAnimationSettingsInstanced")}function s(S,v,D){var z;if(v&&S&&(S.computeBonesUsingShaders&&v._bonesComputationForcedToCPU&&(S.computeBonesUsingShaders=!1),S.useBones&&S.computeBonesUsingShaders&&S.skeleton)){const e=S.skeleton;if(e.isUsingTextureForMatrices&&v.getUniformIndex("boneTextureWidth")>-1){const D=e.getTransformMatrixTexture(S);v.setTexture("boneSampler",D),v.setFloat("boneTextureWidth",4*(e.bones.length+1))}else{const N=e.getTransformMatrices(S);N&&(v.setMatrices("mBones",N),D&&S.xS().prePassRenderer&&S.xS().prePassRenderer.getIndex(2)&&(D.previousBones[S.uniqueId]||(D.previousBones[S.uniqueId]=N.slice()),v.setMatrices("mPreviousBones",D.previousBones[S.uniqueId]),z=N,D.previousBones[S.uniqueId].set(z)))}}}function r(S,v,D,z,e){let N=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];S._bindLight(v,D,z,e,N)}function d(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const N=Math.min(v.lightSources.length,e);for(let m=0;m<N;m++){r(v.lightSources[m],m,S,D,"boolean"===typeof z?z:z.SPECULARTERM,v.receiveShadows)}}function x(S,v,D,z){D.NUM_BONE_INFLUENCERS>0&&(z.addCPUSkinningFallback(0,v),S.push("matricesIndices"),S.push("matricesWeights"),D.NUM_BONE_INFLUENCERS>4&&(S.push("matricesIndicesExtra"),S.push("matricesWeightsExtra")))}function W(S,v){(v.INSTANCES||v.THIN_INSTANCES)&&R(S,!!v.PREPASS_VELOCITY),v.INSTANCESCOLOR&&S.push("instanceColor")}function p(S,v){let D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,e=0;for(let N=0;N<D&&S["LIGHT"+N];N++)N>0&&(e=z+N,v.addFallback(e,"LIGHT"+N)),S.SHADOWS||(S["SHADOW"+N]&&v.addFallback(z,"SHADOW"+N),S["SHADOWPCF"+N]&&v.addFallback(z,"SHADOWPCF"+N),S["SHADOWPCSS"+N]&&v.addFallback(z,"SHADOWPCSS"+N),S["SHADOWPOISSON"+N]&&v.addFallback(z,"SHADOWPOISSON"+N),S["SHADOWESM"+N]&&v.addFallback(z,"SHADOWESM"+N),S["SHADOWCLOSEESM"+N]&&v.addFallback(z,"SHADOWCLOSEESM"+N));return e++}function b(S,v,D,z,e,N,m){let B=arguments.length>7&&void 0!==arguments[7]&&arguments[7];m._areMiscDirty&&(m.LOGARITHMICDEPTH=D,m.POINTSIZE=z,m.FOG=e&&function(S,v){return v.fogEnabled&&S.applyFog&&0!==v.fogMode}(S,v),m.NONUNIFORMSCALING=S.nonUniformScaling,m.ALPHATEST=N,m.DECAL_AFTER_DETAIL=B)}function k(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!D._areLightsDirty)return D._needNormals;let m=0;const B={needNormals:D._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(S.lightsEnabled&&!N)for(const E of v.lightSources)if(Z(S,v,E,m,D,z,B),m++,m===e)break;D.SPECULARTERM=B.specularEnabled,D.SHADOWS=B.shadowEnabled;for(let E=m;E<e;E++)void 0!==D["LIGHT"+E]&&(D["LIGHT"+E]=!1,D["HEMILIGHT"+E]=!1,D["POINTLIGHT"+E]=!1,D["DIRLIGHT"+E]=!1,D["SPOTLIGHT"+E]=!1,D["AREALIGHT"+E]=!1,D["SHADOW"+E]=!1,D["SHADOWCSM"+E]=!1,D["SHADOWCSMDEBUG"+E]=!1,D["SHADOWCSMNUM_CASCADES"+E]=!1,D["SHADOWCSMUSESHADOWMAXZ"+E]=!1,D["SHADOWCSMNOBLEND"+E]=!1,D["SHADOWCSM_RIGHTHANDED"+E]=!1,D["SHADOWPCF"+E]=!1,D["SHADOWPCSS"+E]=!1,D["SHADOWPOISSON"+E]=!1,D["SHADOWESM"+E]=!1,D["SHADOWCLOSEESM"+E]=!1,D["SHADOWCUBE"+E]=!1,D["SHADOWLOWQUALITY"+E]=!1,D["SHADOWMEDIUMQUALITY"+E]=!1);const g=S.getEngine().getCaps();return void 0===D.SHADOWFLOAT&&(B.needRebuild=!0),D.SHADOWFLOAT=B.shadowEnabled&&(g.textureFloatRender&&g.textureFloatLinearFiltering||g.textureHalfFloatRender&&g.textureHalfFloatLinearFiltering),D.LIGHTMAPEXCLUDED=B.lightmapMode,B.needRebuild&&D.rebuild(),B.needNormals}function Z(S,v,D,z,e,N,B){switch(B.needNormals=!0,void 0===e["LIGHT"+z]&&(B.needRebuild=!0),e["LIGHT"+z]=!0,e["SPOTLIGHT"+z]=!1,e["HEMILIGHT"+z]=!1,e["POINTLIGHT"+z]=!1,e["DIRLIGHT"+z]=!1,e["AREALIGHT"+z]=!1,D.prepareLightSpecificDefines(e,z),e["LIGHT_FALLOFF_PHYSICAL"+z]=!1,e["LIGHT_FALLOFF_GLTF"+z]=!1,e["LIGHT_FALLOFF_STANDARD"+z]=!1,D.falloffType){case m.b.FALLOFF_GLTF:e["LIGHT_FALLOFF_GLTF"+z]=!0;break;case m.b.FALLOFF_PHYSICAL:e["LIGHT_FALLOFF_PHYSICAL"+z]=!0;break;case m.b.FALLOFF_STANDARD:e["LIGHT_FALLOFF_STANDARD"+z]=!0}if(N&&!D.Jh.equalsFloats(0,0,0)&&(B.specularEnabled=!0),e["SHADOW"+z]=!1,e["SHADOWCSM"+z]=!1,e["SHADOWCSMDEBUG"+z]=!1,e["SHADOWCSMNUM_CASCADES"+z]=!1,e["SHADOWCSMUSESHADOWMAXZ"+z]=!1,e["SHADOWCSMNOBLEND"+z]=!1,e["SHADOWCSM_RIGHTHANDED"+z]=!1,e["SHADOWPCF"+z]=!1,e["SHADOWPCSS"+z]=!1,e["SHADOWPOISSON"+z]=!1,e["SHADOWESM"+z]=!1,e["SHADOWCLOSEESM"+z]=!1,e["SHADOWCUBE"+z]=!1,e["SHADOWLOWQUALITY"+z]=!1,e["SHADOWMEDIUMQUALITY"+z]=!1,v&&v.receiveShadows&&S.shadowsEnabled&&D.shadowEnabled){const v=D.getShadowGenerator(S.activeCamera)??D.getShadowGenerator();if(v){const S=v.getShadowMap();S&&S.renderList&&S.renderList.length>0&&(B.shadowEnabled=!0,v.prepareDefines(e,z))}}D.lightmapMode!=m.b.LIGHTMAP_DEFAULT?(B.lightmapMode=!0,e["LIGHTMAPEXCLUDED"+z]=!0,e["LIGHTMAPNOSPECULAR"+z]=D.lightmapMode==m.b.LIGHTMAP_SHADOWSONLY):(e["LIGHTMAPEXCLUDED"+z]=!1,e["LIGHTMAPNOSPECULAR"+z]=!1)}function i(S,v,D,z,e){let N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],g=function(S,v){let D=!1;if(S.activeCamera){const z=v.CAMERA_ORTHOGRAPHIC?1:0,e=v.CAMERA_PERSPECTIVE?1:0,N=1===S.activeCamera.mode?1:0,m=0===S.activeCamera.mode?1:0;(z^N||e^m)&&(v.CAMERA_ORTHOGRAPHIC=1===N,v.CAMERA_PERSPECTIVE=1===m,D=!0)}return D}(S,z);!1!==N&&(g=(0,B.f)(D,S,z)),z.DEPTHPREPASS!==!v.getColorWrite()&&(z.DEPTHPREPASS=!z.DEPTHPREPASS,g=!0),z.INSTANCES!==e&&(z.INSTANCES=e,g=!0),z.THIN_INSTANCES!==m&&(z.THIN_INSTANCES=m,g=!0),g&&z.markAsUnprocessed()}function t(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]&&arguments[4],N=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],m=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!v._areAttributesDirty&&v._needNormals===v._normals&&v._needUVs===v._uvs)return!1;v._normals=v._needNormals,v._uvs=v._needUVs,v.NORMAL=v._needNormals&&S.isVerticesDataPresent("normal"),v._needNormals&&S.isVerticesDataPresent("tangent")&&(v.TANGENT=!0);for(let B=1;B<=6;++B)v["UV"+B]=!!v._needUVs&&S.isVerticesDataPresent(`uv${1===B?"":B}`);if(D){const D=S.useVertexColors&&S.isVerticesDataPresent("color");v.VERTEXCOLOR=D,v.VERTEXALPHA=S.hasVertexAlpha&&D&&N}return S.isVerticesDataPresent("instanceColor")&&(S.hasInstances||S.hasThinInstances)&&(v.INSTANCESCOLOR=!0),z&&function(S,v){if(S.useBones&&S.computeBonesUsingShaders&&S.skeleton){v.NUM_BONE_INFLUENCERS=S.numBoneInfluencers;const D=void 0!==v.BONETEXTURE;if(S.skeleton.isUsingTextureForMatrices&&D)v.BONETEXTURE=!0;else{v.BonesPerMesh=S.skeleton.bones.length+1,v.BONETEXTURE=!D&&void 0;const z=S.xS().prePassRenderer;if(z&&z.enabled){const D=-1===z.excludedSkinnedMesh.indexOf(S);v.BONES_VELOCITY_ENABLED=D}}}else v.NUM_BONE_INFLUENCERS=0,v.BonesPerMesh=0,void 0!==v.BONETEXTURE&&(v.BONETEXTURE=!1)}(S,v),e&&function(S,v){const D=S.morphTargetManager;D?(v.MORPHTARGETS_UV=D.supportsUVs&&v.UV1,v.MORPHTARGETS_UV2=D.supportsUV2s&&v.UV2,v.MORPHTARGETS_TANGENT=D.supportsTangents&&v.TANGENT,v.MORPHTARGETS_NORMAL=D.supportsNormals&&v.NORMAL,v.MORPHTARGETS_POSITION=D.supportsPositions,v.MORPHTARGETS_COLOR=D.supportsColors,v.MORPHTARGETTEXTURE_HASUVS=D.hasUVs,v.MORPHTARGETTEXTURE_HASUV2S=D.hasUV2s,v.MORPHTARGETTEXTURE_HASTANGENTS=D.hasTangents,v.MORPHTARGETTEXTURE_HASNORMALS=D.hasNormals,v.MORPHTARGETTEXTURE_HASPOSITIONS=D.hasPositions,v.MORPHTARGETTEXTURE_HASCOLORS=D.hasColors,v.NUM_MORPH_INFLUENCERS=D.numMaxInfluencers||D.numInfluencers,v.MORPHTARGETS=v.NUM_MORPH_INFLUENCERS>0,v.MORPHTARGETS_TEXTURE=D.isUsingTextureForTargets):(v.MORPHTARGETS_UV=!1,v.MORPHTARGETS_UV2=!1,v.MORPHTARGETS_TANGENT=!1,v.MORPHTARGETS_NORMAL=!1,v.MORPHTARGETS_POSITION=!1,v.MORPHTARGETS_COLOR=!1,v.MORPHTARGETTEXTURE_HASUVS=!1,v.MORPHTARGETTEXTURE_HASUV2S=!1,v.MORPHTARGETTEXTURE_HASTANGENTS=!1,v.MORPHTARGETTEXTURE_HASNORMALS=!1,v.MORPHTARGETTEXTURE_HASPOSITIONS=!1,v.MORPHTARGETTEXTURE_HAS_COLORS=!1,v.MORPHTARGETS=!1,v.NUM_MORPH_INFLUENCERS=0)}(S,v),m&&function(S,v){const D=S.bakedVertexAnimationManager;v.BAKED_VERTEX_ANIMATION_TEXTURE=!(!D||!D.isEnabled)}(S,v),!0}function X(S,v){if(S.activeCamera){const D=v.MULTIVIEW;v.MULTIVIEW=null!==S.activeCamera.outputRenderTarget&&S.activeCamera.outputRenderTarget.getViewCount()>1,v.MULTIVIEW!=D&&v.markAsUnprocessed()}}function a(S,v,D){const z=v.ORDER_INDEPENDENT_TRANSPARENCY,e=v.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;v.ORDER_INDEPENDENT_TRANSPARENCY=S.useOrderIndependentTransparency&&D,v.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!S.getEngine().getCaps().textureFloatLinearFiltering,z===v.ORDER_INDEPENDENT_TRANSPARENCY&&e===v.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||v.markAsUnprocessed()}function o(S,v,D){const z=v.PREPASS;if(!v._arePrePassDirty)return;const e=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(S.prePassRenderer&&S.prePassRenderer.enabled&&D){v.PREPASS=!0,v.SCENE_MRT_COUNT=S.prePassRenderer.mrtCount,v.PREPASS_NORMAL_WORLDSPACE=S.prePassRenderer.generateNormalsInWorldSpace,v.PREPASS_COLOR=!0,v.PREPASS_COLOR_INDEX=0;for(let D=0;D<e.length;D++){const z=S.prePassRenderer.getIndex(e[D].type);-1!==z?(v[e[D].define]=!0,v[e[D].index]=z):v[e[D].define]=!1}}else{v.PREPASS=!1;for(let S=0;S<e.length;S++)v[e[S].define]=!1}v.PREPASS!=z&&(v.markAsUnprocessed(),v.markAsImageProcessingDirty())}function M(S,v,D,z){let e=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6];e&&e.push("Light"+S),N||(v.push("vLightData"+S,"vLightDiffuse"+S,"vLightSpecular"+S,"vLightDirection"+S,"vLightWidth"+S,"vLightHeight"+S,"vLightFalloff"+S,"vLightGround"+S,"lightMatrix"+S,"shadowsInfo"+S,"depthValues"+S),D.push("shadowTexture"+S),D.push("depthTexture"+S),v.push("viewFrustumZ"+S,"cascadeBlendFactor"+S,"lightSizeUVCorrection"+S,"depthCorrection"+S,"penumbraDarkness"+S,"frustumLengths"+S),z&&(D.push("projectionLightTexture"+S),v.push("textureProjectionMatrix"+S)),m&&D.push("iesLightTexture"+S))}function c(S,v,D){let z,e,N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(S.uniformsNames){const m=S;z=m.uniformsNames,e=m.uniformBuffersNames,v=m.samplers,D=m.defines,N=m.maxSimultaneousLights||0}else z=S,v||(v=[]);for(let m=0;m<N&&D["LIGHT"+m];m++)M(m,z,v,D["PROJECTEDLIGHTTEXTURE"+m],e,!1,D["IESLIGHTTEXTURE"+m]);D.NUM_MORPH_INFLUENCERS&&(z.push("morphTargetInfluences"),z.push("morphTargetCount")),D.BAKED_VERTEX_ANIMATION_TEXTURE&&(z.push("bakedVertexAnimationSettings"),z.push("bakedVertexAnimationTextureSizeInverted"),z.push("bakedVertexAnimationTime"),v.push("bakedVertexAnimationTexture"))}},11692:(S,v,D)=>{D.d(v,{c:()=>N});var z=D(11371),e=D(11699);class N extends e.d{constructor(S,v){let D=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(S,v,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new z.Matrix,this._storeEffectOnSubMeshes=D}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(S,v){return!!S&&(!this._storeEffectOnSubMeshes||(!S.he||0===S.he.length||this.isReadyForSubMesh(S,S.he[0],v)))}_isReadyForSubMesh(S){const v=S.materialDefines;return!(this.checkReadyOnEveryCall||!S.effect||!v||v._renderId!==this.xS().getRenderId())}bindOnlyWorldMatrix(S){this._activeEffect.setMatrix("world",S)}bindOnlyNormalMatrix(S){this._activeEffect.setMatrix("normalMatrix",S)}bind(S,v){v&&this.bindForSubMesh(S,v,v.he[0])}_afterBind(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,D=arguments.length>2?arguments[2]:void 0;super._afterBind(S,v,D),this.xS()._cachedEffect=v,D?D._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return D._drawWrapper._forceRebindOnNextCall||S.isCachedMaterialInvalid(this,v,z)}dispose(S,v,D){this._activeEffect=void 0,super.dispose(S,v,D)}}},11730:(S,v,D)=>{D.d(v,{c:()=>B,d:()=>g});var z=D(11358),e=D(11371),N=D(11364);class m{static extractMinAndMaxIndexed(S,v,D,z,e,N){for(let m=D;m<D+z;m++){const D=3*v[m],z=S[D],B=S[D+1],g=S[D+2];e.minimizeInPlaceFromFloats(z,B,g),N.maximizeInPlaceFromFloats(z,B,g)}}static extractMinAndMax(S,v,D,z,e,N){for(let m=v,B=v*z;m<v+D;m++,B+=z){const v=S[B],D=S[B+1],z=S[B+2];e.minimizeInPlaceFromFloats(v,D,z),N.maximizeInPlaceFromFloats(v,D,z)}}}function B(S,v,D,z){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const B=new e.Rv(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),g=new e.Rv(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return m.extractMinAndMaxIndexed(S,v,D,z,B,g),N&&(B.x-=B.x*N.x+N.y,B.y-=B.y*N.x+N.y,B.z-=B.z*N.x+N.y,g.x+=g.x*N.x+N.y,g.y+=g.y*N.x+N.y,g.z+=g.z*N.x+N.y),{minimum:B,maximum:g}}function g(S,v,D){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,N=arguments.length>4?arguments[4]:void 0;const B=new e.Rv(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),g=new e.Rv(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return N||(N=3),m.extractMinAndMax(S,v,D,N,B,g),z&&(B.x-=B.x*z.x+z.y,B.y-=B.y*z.x+z.y,B.z-=B.z*z.x+z.y,g.x+=g.x*z.x+z.y,g.y+=g.y*z.x+z.y,g.z+=g.z*z.x+z.y),{minimum:B,maximum:g}}(0,z.b)([N.f.filter((function(){for(var S=arguments.length,v=new Array(S),D=0;D<S;D++)v[D]=arguments[D];let[z,e]=v;return!Array.isArray(z)&&!Array.isArray(e)}))],m,"extractMinAndMaxIndexed",null),(0,z.b)([N.f.filter((function(){for(var S=arguments.length,v=new Array(S),D=0;D<S;D++)v[D]=arguments[D];let[z]=v;return!Array.isArray(z)}))],m,"extractMinAndMax",null)},11705:(S,v,D)=>{D.d(v,{d:()=>g});var z=D(11452),e=D(11710),N=D(11716),m=D(11730),B=D(11494);class g{get materialDefines(){var S;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(S=this._getDrawWrapper())||void 0===S?void 0:S.defines}set materialDefines(S){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=S}_getDrawWrapper(S){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];S=S??this._engine.currentRenderPassId;let D=this._drawWrappers[S];return!D&&v&&(this._drawWrappers[S]=D=new B.b(this._mesh.xS().getEngine())),D}_removeDrawWrapper(S){let v=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var D;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(D=this._drawWrappers[S])||void 0===D||D.dispose(v));this._drawWrappers[S]=void 0}get effect(){var S;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(S=this._getDrawWrapper())||void 0===S?void 0:S.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(S){this._mainDrawWrapperOverride=S}setEffect(S){let v=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,D=arguments.length>2?arguments[2]:void 0,z=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const e=this._drawWrapper;e.setEffect(S,v,z),void 0!==D&&(e.materialContext=D),S||(e.defines=null,e.materialContext=void 0)}resetDrawCache(S){let v=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==S)return void this._removeDrawWrapper(S,!0,v);for(const S of this._drawWrappers)null===S||void 0===S||S.dispose(v)}this._drawWrappers=[]}static AddToMesh(S,v,D,z,e,N,m){return new g(S,v,D,z,e,N,m,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(S,v,D,z,e,N,m){let B=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],g=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=S,this.verticesStart=v,this.verticesCount=D,this.indexStart=z,this.indexCount=e,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=N,this._renderingMesh=m||N,g&&N.he.push(this),this._engine=this._mesh.xS().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=N.he.length-1,B&&(this.refreshBoundingInfo(),N.ke(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(S){return this._boundingInfo=S,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const S=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return S||this._renderingMesh}cS(){let S=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const v=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!v)return S&&this._mesh.xS()._hasDefaultMaterial?this._mesh.xS().defaultMaterial:null;if(this._isMultiMaterial(v)){const S=v.getSubMaterial(this.materialIndex);return this._currentMaterial!==S&&(this._currentMaterial=S,this.resetDrawCache()),S}return v}_isMultiMaterial(S){return void 0!==S.getSubMaterial}refreshBoundingInfo(){let S=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.ie)return this;if(S||(S=this._renderingMesh.getVerticesData(z.d.PositionKind)),!S)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const v=this._renderingMesh.te();let D;if(0===this.indexStart&&this.indexCount===v.length){const S=this._renderingMesh.getBoundingInfo();D={minimum:S.minimum.clone(),maximum:S.maximum.clone()}}else D=(0,m.c)(S,v,this.indexStart,this.indexCount,this._renderingMesh.ie.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(D.minimum,D.maximum):this._boundingInfo=new N.c(D.minimum,D.maximum),this}_checkCollision(S){return this.getBoundingInfo()._checkCollision(S)}updateBoundingInfo(S){let v=this.getBoundingInfo();return v||(this.refreshBoundingInfo(),v=this.getBoundingInfo()),v&&v.update(S),this}isInFrustum(S){const v=this.getBoundingInfo();return!!v&&v.isInFrustum(S,this._mesh.UA)}isCompletelyInFrustum(S){const v=this.getBoundingInfo();return!!v&&v.isCompletelyInFrustum(S)}render(S){return this._renderingMesh.render(this,S,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(S,v){if(!this._linesIndexBuffer){const D=6*Math.floor(this.indexCount/3),z=this.verticesStart+this.verticesCount>65535?new Uint32Array(D):new Uint16Array(D);let e=0;if(0===S.length)for(let S=this.indexStart;S<this.indexStart+this.indexCount;S+=3)z[e++]=S,z[e++]=S+1,z[e++]=S+1,z[e++]=S+2,z[e++]=S+2,z[e++]=S;else for(let v=this.indexStart;v<this.indexStart+this.indexCount;v+=3)z[e++]=S[v],z[e++]=S[v+1],z[e++]=S[v+1],z[e++]=S[v+2],z[e++]=S[v+2],z[e++]=S[v];this._linesIndexBuffer=v.createIndexBuffer(z),this._linesIndexCount=z.length}return this._linesIndexBuffer}canIntersects(S){const v=this.getBoundingInfo();return!!v&&S.intersectsBox(v.boundingBox)}intersects(S,v,D,z,e){const N=this.cS();if(!N)return null;let m=3,B=!1;switch(N.fillMode){case 3:case 5:case 6:case 8:return null;case 7:m=1,B=!0}return 4===N.fillMode?D.length?this._intersectLines(S,v,D,this._mesh.intersectionThreshold,z):this._intersectUnIndexedLines(S,v,D,this._mesh.intersectionThreshold,z):!D.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(S,v,D,z,e):this._intersectTriangles(S,v,D,m,B,z,e)}_intersectLines(S,v,D,z,N){let m=null;for(let B=this.indexStart;B<this.indexStart+this.indexCount;B+=2){const g=v[D[B]],E=v[D[B+1]],h=S.intersectionSegment(g,E,z);if(!(h<0)&&((N||!m||h<m.distance)&&(m=new e.b(null,null,h),m.faceId=B/2,N)))break}return m}_intersectUnIndexedLines(S,v,D,z,N){let m=null;for(let B=this.verticesStart;B<this.verticesStart+this.verticesCount;B+=2){const D=v[B],g=v[B+1],E=S.intersectionSegment(D,g,z);if(!(E<0)&&((N||!m||E<m.distance)&&(m=new e.b(null,null,E),m.faceId=B/2,N)))break}return m}_intersectTriangles(S,v,D,z,e,N,m){let B=null,g=-1;for(let E=this.indexStart;E<this.indexStart+this.indexCount-(3-z);E+=z){g++;const z=D[E],h=D[E+1],A=D[E+2];if(e&&4294967295===A){E+=2;continue}const w=v[z],n=v[h],R=v[A];if(!w||!n||!R)continue;if(m&&!m(w,n,R,S,z,h,A))continue;const O=S.intersectsTriangle(w,n,R);if(O){if(O.distance<0)continue;if((N||!B||O.distance<B.distance)&&(B=O,B.faceId=g,N))break}}return B}_intersectUnIndexedTriangles(S,v,D,z,e){let N=null;for(let m=this.verticesStart;m<this.verticesStart+this.verticesCount;m+=3){const D=v[m],B=v[m+1],g=v[m+2];if(e&&!e(D,B,g,S,-1,-1,-1))continue;const E=S.intersectsTriangle(D,B,g);if(E){if(E.distance<0)continue;if((z||!N||E.distance<N.distance)&&(N=E,N.faceId=m/3,z))break}}return N}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(S,v){const D=new g(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,S,v,!1);if(!this.IsGlobal){const S=this.getBoundingInfo();if(!S)return D;D._boundingInfo=new N.c(S.minimum,S.maximum)}return D}dispose(){let S=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.xS().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const v=this._mesh.he.indexOf(this);this._mesh.he.splice(v,1),this.resetDrawCache(void 0,S)}getClassName(){return"SubMesh"}static CreateFromIndices(S,v,D,z,e){let N=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],m=Number.MAX_VALUE,B=-Number.MAX_VALUE;const E=(e||z).te();for(let g=v;g<v+D;g++){const S=E[g];S<m&&(m=S),S>B&&(B=S)}return new g(S,m,B-m+1,v,D,z,e,N)}}}}]);