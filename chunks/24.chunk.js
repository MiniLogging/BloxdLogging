"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[24],{11643:(m,S,h)=>{h.d(S,{c:()=>l});class l{constructor(m,S,h){this.bu=m,this.bv=S,this.distance=h,this.faceId=0,this.subMeshId=0}}},11651:(m,S,h)=>{h.d(S,{c:()=>u});var l=h(11356),M=h(11347),O=h(11350);class u{constructor(m,S,h){this.vectors=(0,l.e)(8,M.nS.Zero),this.center=M.nS.Zero(),this.centerWorld=M.nS.Zero(),this.extendSize=M.nS.Zero(),this.extendSizeWorld=M.nS.Zero(),this.directions=(0,l.e)(3,M.nS.Zero),this.vectorsWorld=(0,l.e)(8,M.nS.Zero),this.minimumWorld=M.nS.Zero(),this.maximumWorld=M.nS.Zero(),this.minimum=M.nS.Zero(),this.maximum=M.nS.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(m,S,h)}reConstruct(m,S,h){const l=m.x,O=m.y,u=m.z,b=S.x,q=S.y,Y=S.z,V=this.vectors;this.minimum.Yb(l,O,u),this.maximum.Yb(b,q,Y),V[0].Yb(l,O,u),V[1].Yb(b,q,Y),V[2].Yb(b,O,u),V[3].Yb(l,q,u),V[4].Yb(l,O,Y),V[5].Yb(b,q,u),V[6].Yb(l,q,Y),V[7].Yb(b,O,Y),S.addToRef(m,this.center).scaleInPlace(.5),S.subtractToRef(m,this.extendSize).scaleInPlace(.5),this._worldMatrix=h||M.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(m){const S=u._TmpVector3,h=this.maximum.subtractToRef(this.minimum,S[0]),l=h.length();h.normalizeFromLength(l);const M=l*m,O=h.scaleInPlace(.5*M),b=this.center.subtractToRef(O,S[1]),q=this.center.addToRef(O,S[2]);return this.reConstruct(b,q,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(m){const S=this.minimumWorld,h=this.maximumWorld,l=this.directions,O=this.vectorsWorld,u=this.vectors;if(m.isIdentity()){S.l(this.minimum),h.l(this.maximum);for(let m=0;m<8;++m)O[m].l(u[m]);this.extendSizeWorld.l(this.extendSize),this.centerWorld.l(this.center)}else{S.Zb(Number.MAX_VALUE),h.Zb(-Number.MAX_VALUE);for(let l=0;l<8;++l){const b=O[l];M.nS.TransformCoordinatesToRef(u[l],m,b),S.minimizeInPlace(b),h.maximizeInPlace(b)}h.subtractToRef(S,this.extendSizeWorld).scaleInPlace(.5),h.addToRef(S,this.centerWorld).scaleInPlace(.5)}M.nS.FromArrayToRef(m.m,0,l[0]),M.nS.FromArrayToRef(m.m,4,l[1]),M.nS.FromArrayToRef(m.m,8,l[2]),this._worldMatrix=m}isInFrustum(m){return u.IsInFrustum(this.vectorsWorld,m)}isCompletelyInFrustum(m){return u.IsCompletelyInFrustum(this.vectorsWorld,m)}intersectsPoint(m){const S=this.minimumWorld,h=this.maximumWorld,l=S.x,M=S.y,u=S.z,b=h.x,q=h.y,Y=h.z,V=m.x,I=m.y,Z=m.z,C=-O.d;return!(b-V<C||C>V-l)&&(!(q-I<C||C>I-M)&&!(Y-Z<C||C>Z-u))}intersectsSphere(m){return u.IntersectsSphere(this.minimumWorld,this.maximumWorld,m.centerWorld,m.radiusWorld)}intersectsMinMax(m,S){const h=this.minimumWorld,l=this.maximumWorld,M=h.x,O=h.y,u=h.z,b=l.x,q=l.y,Y=l.z,V=m.x,I=m.y,Z=m.z,C=S.x,B=S.y,D=S.z;return!(b<V||M>C)&&(!(q<I||O>B)&&!(Y<Z||u>D))}dispose(){var m,S;null===(m=this._drawWrapperFront)||void 0===m||m.dispose(),null===(S=this._drawWrapperBack)||void 0===S||S.dispose()}static Intersects(m,S){return m.intersectsMinMax(S.minimumWorld,S.maximumWorld)}static IntersectsSphere(m,S,h,l){const O=u._TmpVector3[0];M.nS.ClampToRef(h,m,S,O);return M.nS.DistanceSquared(h,O)<=l*l}static IsCompletelyInFrustum(m,S){for(let h=0;h<6;++h){const l=S[h];for(let S=0;S<8;++S)if(l.dotCoordinate(m[S])<0)return!1}return!0}static IsInFrustum(m,S){for(let h=0;h<6;++h){let l=!0;const M=S[h];for(let S=0;S<8;++S)if(M.dotCoordinate(m[S])>=0){l=!1;break}if(l)return!1}return!0}}u._TmpVector3=(0,l.e)(3,M.nS.Zero)},11648:(m,S,h)=>{h.d(S,{d:()=>I});var l=h(11356),M=h(11347),O=h(11651),u=h(11653);const b={min:0,max:0},q={min:0,max:0},Y=(m,S,h)=>{const l=M.nS.Dot(S.centerWorld,m),O=Math.abs(M.nS.Dot(S.directions[0],m))*S.extendSize.x+Math.abs(M.nS.Dot(S.directions[1],m))*S.extendSize.y+Math.abs(M.nS.Dot(S.directions[2],m))*S.extendSize.z;h.min=l-O,h.max=l+O},V=(m,S,h)=>(Y(m,S,b),Y(m,h,q),!(b.min>q.max||q.min>b.max));class I{constructor(m,S,h){this._isLocked=!1,this.boundingBox=new O.c(m,S,h),this.boundingSphere=new u.c(m,S,h)}reConstruct(m,S,h){this.boundingBox.reConstruct(m,S,h),this.boundingSphere.reConstruct(m,S,h)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(m){this._isLocked=m}update(m){this._isLocked||(this.boundingBox._update(m),this.boundingSphere._update(m))}centerOn(m,S){const h=I._TmpVector3[0].l(m).yI(S),l=I._TmpVector3[1].l(m).addInPlace(S);return this.boundingBox.reConstruct(h,l,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(h,l,this.boundingBox.getWorldMatrix()),this}encapsulate(m){const S=M.nS.Minimize(this.minimum,m),h=M.nS.Maximize(this.maximum,m);return this.reConstruct(S,h,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(m){const S=M.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(S);const h=M.TmpVectors.nS[0];return M.nS.TransformCoordinatesToRef(m.boundingBox.minimumWorld,S,h),this.encapsulate(h),M.nS.TransformCoordinatesToRef(m.boundingBox.maximumWorld,S,h),this.encapsulate(h),this}scale(m){return this.boundingBox.scale(m),this.boundingSphere.scale(m),this}isInFrustum(m){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===S||3===S)&&this.boundingSphere.isCenterInFrustum(m))return!0;if(!this.boundingSphere.isInFrustum(m))return!1;return!(1!==S&&3!==S)||this.boundingBox.isInFrustum(m)}get diagonalLength(){const m=this.boundingBox;return m.maximumWorld.subtractToRef(m.minimumWorld,I._TmpVector3[0]).length()}isCompletelyInFrustum(m){return this.boundingBox.isCompletelyInFrustum(m)}_checkCollision(m){return m._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(m){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(m)&&!!this.boundingBox.intersectsPoint(m))}intersects(m,S){if(!u.c.Intersects(this.boundingSphere,m.boundingSphere))return!1;if(!O.c.Intersects(this.boundingBox,m.boundingBox))return!1;if(!S)return!0;const h=this.boundingBox,l=m.boundingBox;return!!V(h.directions[0],h,l)&&(!!V(h.directions[1],h,l)&&(!!V(h.directions[2],h,l)&&(!!V(l.directions[0],h,l)&&(!!V(l.directions[1],h,l)&&(!!V(l.directions[2],h,l)&&(!!V(M.nS.Cross(h.directions[0],l.directions[0]),h,l)&&(!!V(M.nS.Cross(h.directions[0],l.directions[1]),h,l)&&(!!V(M.nS.Cross(h.directions[0],l.directions[2]),h,l)&&(!!V(M.nS.Cross(h.directions[1],l.directions[0]),h,l)&&(!!V(M.nS.Cross(h.directions[1],l.directions[1]),h,l)&&(!!V(M.nS.Cross(h.directions[1],l.directions[2]),h,l)&&(!!V(M.nS.Cross(h.directions[2],l.directions[0]),h,l)&&(!!V(M.nS.Cross(h.directions[2],l.directions[1]),h,l)&&!!V(M.nS.Cross(h.directions[2],l.directions[2]),h,l))))))))))))))}}I._TmpVector3=(0,l.e)(2,M.nS.Zero)},11653:(m,S,h)=>{h.d(S,{c:()=>O});var l=h(11356),M=h(11347);class O{constructor(m,S,h){this.center=M.nS.Zero(),this.centerWorld=M.nS.Zero(),this.minimum=M.nS.Zero(),this.maximum=M.nS.Zero(),this.reConstruct(m,S,h)}reConstruct(m,S,h){this.minimum.l(m),this.maximum.l(S);const l=M.nS.Distance(m,S);S.addToRef(m,this.center).scaleInPlace(.5),this.radius=.5*l,this._update(h||M.Matrix.IdentityReadOnly)}scale(m){const S=this.radius*m,h=O._TmpVector3,l=h[0].Zb(S),M=this.center.subtractToRef(l,h[1]),u=this.center.addToRef(l,h[2]);return this.reConstruct(M,u,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(m){if(m.isIdentity())this.centerWorld.l(this.center),this.radiusWorld=this.radius;else{M.nS.TransformCoordinatesToRef(this.center,m,this.centerWorld);const S=O._TmpVector3[0];M.nS.TransformNormalFromFloatsToRef(1,1,1,m,S),this.radiusWorld=Math.max(Math.abs(S.x),Math.abs(S.y),Math.abs(S.z))*this.radius}}isInFrustum(m){const S=this.centerWorld,h=this.radiusWorld;for(let l=0;l<6;l++)if(m[l].dotCoordinate(S)<=-h)return!1;return!0}isCenterInFrustum(m){const S=this.centerWorld;for(let h=0;h<6;h++)if(m[h].dotCoordinate(S)<0)return!1;return!0}intersectsPoint(m){const S=M.nS.DistanceSquared(this.centerWorld,m);return!(this.radiusWorld*this.radiusWorld<S)}static Intersects(m,S){const h=M.nS.DistanceSquared(m.centerWorld,S.centerWorld),l=m.radiusWorld+S.radiusWorld;return!(l*l<h)}static CreateFromCenterAndRadius(m,S,h){this._TmpVector3[0].l(m),this._TmpVector3[1].Yb(0,0,S),this._TmpVector3[2].l(m),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].yI(this._TmpVector3[1]);const l=new O(this._TmpVector3[0],this._TmpVector3[2]);return l._worldMatrix=h||M.Matrix.Identity(),l}}O._TmpVector3=(0,l.e)(3,M.nS.Zero)},11668:(m,S,h)=>{function l(m){-1===m.indexOf("vClipPlane")&&m.push("vClipPlane"),-1===m.indexOf("vClipPlane2")&&m.push("vClipPlane2"),-1===m.indexOf("vClipPlane3")&&m.push("vClipPlane3"),-1===m.indexOf("vClipPlane4")&&m.push("vClipPlane4"),-1===m.indexOf("vClipPlane5")&&m.push("vClipPlane5"),-1===m.indexOf("vClipPlane6")&&m.push("vClipPlane6")}function M(m,S,h){const l=!!(m.clipPlane??S.clipPlane),M=!!(m.clipPlane2??S.clipPlane2),O=!!(m.clipPlane3??S.clipPlane3),u=!!(m.clipPlane4??S.clipPlane4),b=!!(m.clipPlane5??S.clipPlane5),q=!!(m.clipPlane6??S.clipPlane6);l&&h.push("#define CLIPPLANE"),M&&h.push("#define CLIPPLANE2"),O&&h.push("#define CLIPPLANE3"),u&&h.push("#define CLIPPLANE4"),b&&h.push("#define CLIPPLANE5"),q&&h.push("#define CLIPPLANE6")}function O(m,S,h){let l=!1;const M=!!(m.clipPlane??S.clipPlane),O=!!(m.clipPlane2??S.clipPlane2),u=!!(m.clipPlane3??S.clipPlane3),b=!!(m.clipPlane4??S.clipPlane4),q=!!(m.clipPlane5??S.clipPlane5),Y=!!(m.clipPlane6??S.clipPlane6);return h.CLIPPLANE!==M&&(h.CLIPPLANE=M,l=!0),h.CLIPPLANE2!==O&&(h.CLIPPLANE2=O,l=!0),h.CLIPPLANE3!==u&&(h.CLIPPLANE3=u,l=!0),h.CLIPPLANE4!==b&&(h.CLIPPLANE4=b,l=!0),h.CLIPPLANE5!==q&&(h.CLIPPLANE5=q,l=!0),h.CLIPPLANE6!==Y&&(h.CLIPPLANE6=Y,l=!0),l}function u(m,S,h){let l=S.clipPlane??h.clipPlane;b(m,"vClipPlane",l),l=S.clipPlane2??h.clipPlane2,b(m,"vClipPlane2",l),l=S.clipPlane3??h.clipPlane3,b(m,"vClipPlane3",l),l=S.clipPlane4??h.clipPlane4,b(m,"vClipPlane4",l),l=S.clipPlane5??h.clipPlane5,b(m,"vClipPlane5",l),l=S.clipPlane6??h.clipPlane6,b(m,"vClipPlane6",l)}function b(m,S,h){h&&m.setFloat4(S,h.normal.x,h.normal.y,h.normal.z,h.d)}h.d(S,{e:()=>l,g:()=>u,k:()=>O,m:()=>M})},11617:(m,S,h)=>{h.d(S,{e:()=>l});class l{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(m,S){this._defines[m]||(m<this._currentRank&&(this._currentRank=m),m>this._maxRank&&(this._maxRank=m),this._defines[m]=new Array),this._defines[m].push(S)}addCPUSkinningFallback(m,S){this._mesh=S,m<this._currentRank&&(this._currentRank=m),m>this._maxRank&&(this._maxRank=m)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(m,S){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,m=m.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),S._bonesComputationForcedToCPU=!0;const h=this._mesh.sm();for(let m=0;m<h.meshes.length;m++){const l=h.meshes[m];if(l.material){if(l.computeBonesUsingShaders&&0!==l.numBoneInfluencers)if(l.material.getEffect()===S)l.computeBonesUsingShaders=!1;else if(l.CM)for(const m of l.CM){if(m.effect===S){l.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&l.computeBonesUsingShaders&&l.numBoneInfluencers>0&&(l.computeBonesUsingShaders=!1)}}else{const S=this._defines[this._currentRank];if(S)for(let h=0;h<S.length;h++)m=m.replace("#define "+S[h],"");this._currentRank++}return m}}},11629:(m,S,h)=>{h.d(S,{e:()=>E});var l=h(11327),M=h(11336),O=h(11156),u=h(11161),b=h(11196),q=h(11637),Y=h(11581),V=h(11173),I=h(11392),Z=h(11450),C=h(11377);class B{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(m){this._func=m}get funcRef(){return this._funcRef}set funcRef(m){this._funcRef=m}get funcMask(){return this._funcMask}set funcMask(m){this._funcMask=m}get opStencilFail(){return this._opStencilFail}set opStencilFail(m){this._opStencilFail=m}get opDepthFail(){return this._opDepthFail}set opDepthFail(m){this._opDepthFail=m}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(m){this._opStencilDepthPass=m}get mask(){return this._mask}set mask(m){this._mask=m}get enabled(){return this._enabled}set enabled(m){this._enabled=m}getClassName(){return"MaterialStencilState"}copyTo(m){C.e.Clone((()=>m),this)}serialize(){return C.e.Serialize(this)}parse(m,S,h){C.e.Parse((()=>this),m,S,h)}}(0,l.d)([(0,M.F)()],B.prototype,"func",null),(0,l.d)([(0,M.F)()],B.prototype,"funcRef",null),(0,l.d)([(0,M.F)()],B.prototype,"funcMask",null),(0,l.d)([(0,M.F)()],B.prototype,"opStencilFail",null),(0,l.d)([(0,M.F)()],B.prototype,"opDepthFail",null),(0,l.d)([(0,M.F)()],B.prototype,"opStencilDepthPass",null),(0,l.d)([(0,M.F)()],B.prototype,"mask",null),(0,l.d)([(0,M.F)()],B.prototype,"enabled",null);var D=h(11663);class E{get _supportGlowLayer(){return!1}set _glowModeEnabled(m){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(m){if(this._alpha===m)return;const S=this._alpha;this._alpha=m,1!==S&&1!==m||this.ZV(E.MiscDirtyFlag+E.PrePassDirtyFlag)}get alpha(){return this._alpha}set qb(m){this._backFaceCulling!==m&&(this._backFaceCulling=m,this.ZV(E.TextureDirtyFlag))}get qb(){return this._backFaceCulling}set cullBackFaces(m){this._cullBackFaces!==m&&(this._cullBackFaces=m,this.ZV(E.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(m){this._blockDirtyMechanism!==m&&(this._blockDirtyMechanism=m,m||this.VZ())}atomicMaterialsUpdate(m){this.blockDirtyMechanism=!0;try{m(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(m){this._onDisposeObserver&&this.Jh.remove(this._onDisposeObserver),this._onDisposeObserver=this.Jh.add(m)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new u.e),this._onBindObservable}set onBind(m){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(m)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new u.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new u.e),this._onEffectCreatedObservable}set alphaMode(m){this._alphaMode!==m&&(this._alphaMode=m,this.ZV(E.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(m){this._needDepthPrePass!==m&&(this._needDepthPrePass=m,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(m){this._fogEnabled!==m&&(this._fogEnabled=m,this.ZV(E.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case E.WireFrameFillMode:case E.LineListDrawMode:case E.LineLoopDrawMode:case E.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(m){this.fillMode=m?E.WireFrameFillMode:E.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case E.PointFillMode:case E.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(m){this.fillMode=m?E.PointFillMode:E.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(m){this._fillMode!==m&&(this._fillMode=m,this.ZV(E.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(m){const S=this.sm().getEngine().getCaps().fragmentDepthSupported;m&&!S&&V.e.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=m&&S,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(m){this._drawWrapper=m}constructor(m,S,h){let l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Jh=new u.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new B,this._useUBO=!1,this._fillMode=E.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=m;const M=S||b.d.LastCreatedScene;M&&(this._scene=M,this._dirtyCallbacks={},this._forceGLSL=l,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=m||O.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new Z.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new Y.b(this._scene.getEngine(),void 0,void 0,m),this._useUBO=this.sm().getEngine().supportsUniformBuffers,this._createUniformBuffer(),h||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),E.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var m;const S=this.sm().getEngine();null===(m=this._uniformBuffer)||void 0===m||m.dispose(),S.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new Y.b(S,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new Y.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(m){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.VZ(),this.checkReadyOnlyOnce=!0}unfreeze(){this.VZ(),this.checkReadyOnlyOnce=!1}isReady(m,S){return!0}isReadyForSubMesh(m,S,h){const l=S.materialDefines;return!!l&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=l,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}sm(){return this._scene}_getEffectiveOrientation(m){return null!==this.sideOrientation?this.sideOrientation:m.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(m){this._transparencyMode!==m&&(this._transparencyMode=m,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===E.MATERIAL_ALPHABLEND||this._transparencyMode===E.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===E.MATERIAL_ALPHATEST||this._transparencyMode===E.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===E.MATERIAL_OPAQUE||this._transparencyMode===E.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(m){return this._hasTransparencyMode?this._transparencyModeIsBlend:m.visibility<1||!this._disableAlphaBlending&&(m.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(m){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(m)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}VZ(){let m=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const S=this.sm().meshes;for(const h of S)if(h.CM)for(const S of h.CM)if(S.jm()===this)for(const h of S._drawWrappers)h&&this._materialContext===h.materialContext&&(h._wasPreviouslyReady=!1,h._wasPreviouslyUsingInstances=null,h._forceRebindOnNextCall=m);m&&this.ZV(E.AllDirtyFlag)}_preBind(m){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const h=this._scene.getEngine(),l=(null==S?this.sideOrientation:S)===E.ClockWiseSideOrientation;return h.enableEffect(m||this._getDrawWrapper()),h.setState(this.qb,this.zOffset,!1,l,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),l}bind(m,S){}buildUniformLayout(){const m=this._uniformBuffer;this._eventInfo.ubo=m,this._callbackPluginEventGeneric(8,this._eventInfo),m.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(m,S,h){const l=h._drawWrapper;this._eventInfo.subMesh=h,this._callbackPluginEventBindForSubMesh(this._eventInfo),l._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(m){}bindView(m){this._useUBO?this._needToBindSceneUbo=!0:m.setMatrix("view",this.sm().getViewMatrix())}bindViewProjection(m){this._useUBO?this._needToBindSceneUbo=!0:(m.setMatrix("viewProjection",this.sm().getTransformMatrix()),m.setMatrix("projection",this.sm().getProjectionMatrix()))}bindEyePosition(m,S){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(m,S)}_afterBind(m){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&S&&(this._needToBindSceneUbo=!1,(0,D.o)(S,this.sm().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=m?m.visibility:1,this._onBindObservable&&m&&this._onBindObservable.notifyObservers(m),this.disableDepthWrite){const m=this._scene.getEngine();this._cachedDepthWriteState=m.getDepthWrite(),m.setDepthWrite(!1)}if(this.disableColorWrite){const m=this._scene.getEngine();this._cachedColorWriteState=m.getColorWrite(),m.setColorWrite(!1)}if(0!==this.depthFunction){const m=this._scene.getEngine();this._cachedDepthFunctionState=m.getDepthFunction()||0,m.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(m){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=m,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(m){return null}_clonePlugins(m,S){const h={};if(this._serializePlugins(h),E._ParsePlugins(h,m,this._scene,S),this.pluginManager)for(const l of this.pluginManager._plugins){const S=m.pluginManager.getPlugin(l.name);S&&l.copyTo(S)}}getBindedMeshes(){if(this.meshMap){const m=[];for(const S in this.meshMap){const h=this.meshMap[S];h&&m.push(h)}return m}return this._scene.meshes.filter((m=>m.material===this))}forceCompilation(m,S,h,l){const M={clipPlane:!1,useInstances:!1,...h},O=this.sm(),u=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const b=()=>{if(!this._scene||!this._scene.getEngine())return;const h=O.clipPlane;if(M.clipPlane&&(O.clipPlane=new I.e(0,0,0,1)),this._storeEffectOnSubMeshes){let h=!0,O=null;if(m.CM){const S=new q.d(0,0,0,0,0,m,void 0,!1,!1);S.materialDefines&&(S.materialDefines._renderId=-1),this.isReadyForSubMesh(m,S,M.useInstances)||(S.effect&&S.effect.getCompilationError()&&S.effect.allFallbacksProcessed()?O=S.effect.getCompilationError():(h=!1,setTimeout(b,16)))}h&&(this.allowShaderHotSwapping=u,O&&l&&l(O),S&&S(this))}else this.isReady()?(this.allowShaderHotSwapping=u,S&&S(this)):setTimeout(b,16);M.clipPlane&&(O.clipPlane=h)};b()}async forceCompilationAsync(m,S){return await new Promise(((h,l)=>{this.forceCompilation(m,(()=>{h()}),S,(m=>{l(m)}))}))}ZV(m){this.sm().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(E._DirtyCallbackArray.length=0,m&E.ImageProcessingDirtyFlag&&E._DirtyCallbackArray.push(E._ImageProcessingDirtyCallBack),m&E.TextureDirtyFlag&&E._DirtyCallbackArray.push(E._TextureDirtyCallBack),m&E.LightDirtyFlag&&E._DirtyCallbackArray.push(E._LightsDirtyCallBack),m&E.FresnelDirtyFlag&&E._DirtyCallbackArray.push(E._FresnelDirtyCallBack),m&E.AttributesDirtyFlag&&E._DirtyCallbackArray.push(E._AttributeDirtyCallBack),m&E.MiscDirtyFlag&&E._DirtyCallbackArray.push(E._MiscDirtyCallBack),m&E.PrePassDirtyFlag&&E._DirtyCallbackArray.push(E._PrePassDirtyCallBack),E._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(E._RunDirtyCallBacks),this.sm().resetCachedMaterial())}resetDrawCache(){const m=this.sm().meshes;for(const S of m)if(S.CM)for(const m of S.CM)m.jm()===this&&m.resetDrawCache()}_markAllSubMeshesAsDirty(m){const S=this.sm();if(S.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const h=S.meshes;for(const l of h)if(l.CM)for(const h of l.CM){if((h.jm()||(S._hasDefaultMaterial?S.defaultMaterial:null))===this)for(const S of h._drawWrappers)S&&S.defines&&S.defines.markAllAsDirty&&this._materialContext===S.materialContext&&m(S.defines)}}_markScenePrePassDirty(){if(this.sm().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const m=this.sm().enablePrePassRenderer();m&&m.ZV()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(E._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(E._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(E._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(E._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(E._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(E._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(E._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(E._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(E._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(E._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const m=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Jh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(m)}))}}setPrePassRenderer(m){return!1}dispose(m,S,h){const l=this.sm();if(l.stopAnimation(this),l.freeProcessedMaterials(),l.removeMaterial(this),this._eventInfo.forceDisposeTextures=S,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const m=this._parentContainer.materials.indexOf(this);m>-1&&this._parentContainer.materials.splice(m,1),this._parentContainer=null}if(!0!==h)if(this.meshMap)for(const M in this.meshMap){const m=this.meshMap[M];this._disposeMeshResources(m)}else{const m=l.meshes;for(const S of m)this._disposeMeshResources(S)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Jh.notifyObservers(this),this.Jh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(m){if(!m)return;const S=m.ub,h=m._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(m.CM&&h)for(const M of m.CM){const m=M._drawWrappers;for(let O=0;O<m.length;O++){var l;const u=null===(l=m[O])||void 0===l?void 0:l.effect;if(!u)continue;h[O]===this&&(null===S||void 0===S||S._releaseVertexArrayObject(u),M._removeDrawWrapper(O,!0,!0))}}}else null===S||void 0===S||S._releaseVertexArrayObject(this._drawWrapper.effect);m.material!==this||m.sourceMesh||(m.material=null)}serialize(){const m=C.e.Serialize(this);return m.stencil=this.stencil.serialize(),m.uniqueId=this.uniqueId,this._serializePlugins(m),m}_serializePlugins(m){if(m.plugins={},this.pluginManager)for(const S of this.pluginManager._plugins)S.doNotSerialize||(m.plugins[S.getClassName()]=S.serialize())}static Parse(m,S,h){if(m.customType){if("BABYLON.PBRMaterial"===m.customType&&m.overloadedAlbedo&&(m.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return V.e.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else m.customType="BABYLON.StandardMaterial";const l=O.Tools.Instantiate(m.customType).Parse(m,S,h);return l._loadedUniqueId=m.uniqueId,l}static _ParsePlugins(m,S,h,l){if(m.plugins)for(const b in m.plugins){var M,u;const q=m.plugins[b];let Y=null===(M=S.pluginManager)||void 0===M?void 0:M.getPlugin(q.name);if(!Y){const m=O.Tools.Instantiate("BABYLON."+b);m&&(Y=new m(S))}null===(u=Y)||void 0===u||u.parse(q,h,l)}}}E.TriangleFillMode=0,E.WireFrameFillMode=1,E.PointFillMode=2,E.PointListDrawMode=3,E.LineListDrawMode=4,E.LineLoopDrawMode=5,E.LineStripDrawMode=6,E.TriangleStripDrawMode=7,E.TriangleFanDrawMode=8,E.ClockWiseSideOrientation=0,E.CounterClockWiseSideOrientation=1,E.ImageProcessingDirtyFlag=64,E.TextureDirtyFlag=1,E.LightDirtyFlag=2,E.FresnelDirtyFlag=4,E.AttributesDirtyFlag=8,E.MiscDirtyFlag=16,E.PrePassDirtyFlag=32,E.AllDirtyFlag=127,E.MATERIAL_OPAQUE=0,E.MATERIAL_ALPHATEST=1,E.MATERIAL_ALPHABLEND=2,E.MATERIAL_ALPHATESTANDBLEND=3,E.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,E.MATERIAL_NORMALBLENDMETHOD_RNM=1,E.OnEventObservable=new u.e,E._AllDirtyCallBack=m=>m.markAllAsDirty(),E._ImageProcessingDirtyCallBack=m=>m.markAsImageProcessingDirty(),E._TextureDirtyCallBack=m=>m.markAsTexturesDirty(),E._FresnelDirtyCallBack=m=>m.markAsFresnelDirty(),E._MiscDirtyCallBack=m=>m.markAsMiscDirty(),E._PrePassDirtyCallBack=m=>m.markAsPrePassDirty(),E._LightsDirtyCallBack=m=>m.markAsLightDirty(),E._AttributeDirtyCallBack=m=>m.markAsAttributesDirty(),E._FresnelAndMiscDirtyCallBack=m=>{E._FresnelDirtyCallBack(m),E._MiscDirtyCallBack(m)},E._TextureAndMiscDirtyCallBack=m=>{E._TextureDirtyCallBack(m),E._MiscDirtyCallBack(m)},E._DirtyCallbackArray=[],E._RunDirtyCallBacks=m=>{for(const S of E._DirtyCallbackArray)S(m)},(0,l.d)([(0,M.F)()],E.prototype,"id",void 0),(0,l.d)([(0,M.F)()],E.prototype,"uniqueId",void 0),(0,l.d)([(0,M.F)()],E.prototype,"name",void 0),(0,l.d)([(0,M.F)()],E.prototype,"metadata",void 0),(0,l.d)([(0,M.F)()],E.prototype,"checkReadyOnEveryCall",void 0),(0,l.d)([(0,M.F)()],E.prototype,"checkReadyOnlyOnce",void 0),(0,l.d)([(0,M.F)()],E.prototype,"state",void 0),(0,l.d)([(0,M.F)("alpha")],E.prototype,"_alpha",void 0),(0,l.d)([(0,M.F)("qb")],E.prototype,"_backFaceCulling",void 0),(0,l.d)([(0,M.F)("cullBackFaces")],E.prototype,"_cullBackFaces",void 0),(0,l.d)([(0,M.F)()],E.prototype,"sideOrientation",void 0),(0,l.d)([(0,M.F)("alphaMode")],E.prototype,"_alphaMode",void 0),(0,l.d)([(0,M.F)()],E.prototype,"_needDepthPrePass",void 0),(0,l.d)([(0,M.F)()],E.prototype,"disableDepthWrite",void 0),(0,l.d)([(0,M.F)()],E.prototype,"disableColorWrite",void 0),(0,l.d)([(0,M.F)()],E.prototype,"forceDepthWrite",void 0),(0,l.d)([(0,M.F)()],E.prototype,"depthFunction",void 0),(0,l.d)([(0,M.F)()],E.prototype,"separateCullingPass",void 0),(0,l.d)([(0,M.F)("fogEnabled")],E.prototype,"_fogEnabled",void 0),(0,l.d)([(0,M.F)()],E.prototype,"pointSize",void 0),(0,l.d)([(0,M.F)()],E.prototype,"zOffset",void 0),(0,l.d)([(0,M.F)()],E.prototype,"zOffsetUnits",void 0),(0,l.d)([(0,M.F)()],E.prototype,"pointsCloud",null),(0,l.d)([(0,M.F)()],E.prototype,"fillMode",null),(0,l.d)([(0,M.F)()],E.prototype,"useLogarithmicDepth",null),(0,l.d)([(0,M.F)()],E.prototype,"transparencyMode",null)},11663:(m,S,h)=>{h.d(S,{$:()=>a,C:()=>s,G:()=>C,K:()=>Z,N:()=>e,R:()=>G,T:()=>X,V:()=>n,X:()=>T,c:()=>H,db:()=>x,g:()=>I,gb:()=>P,i:()=>y,j:()=>V,jb:()=>J,lb:()=>B,n:()=>D,o:()=>E,r:()=>L,s:()=>v,w:()=>U,z:()=>o});var l=h(11173),M=h(11387),O=h(11196),u=h(11608),b=h(11668);const q=M.RS.Black(),Y={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function V(m,S,h){if(!m||m.LOGARITHMICDEPTH||m.indexOf&&m.indexOf("LOGARITHMICDEPTH")>=0){const m=h.activeCamera;1===m.mode&&l.e.Error("Logarithmic depth is not compatible with orthographic cameras!",20),S.setFloat("logarithmicDepthConstant",2/(Math.log(m.maxZ+1)/Math.LN2))}}function I(m,S,h){let l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];h&&m.fogEnabled&&(!S||S.applyFog)&&0!==m.fogMode&&(h.setFloat4("vFogInfos",m.fogMode,m.fogStart,m.fogEnd,m.fogDensity),l?(m.fogColor.toLinearSpaceToRef(q,m.getEngine().useExactSrgbConversions),h.setColor3("vFogColor",q)):h.setColor3("vFogColor",m.fogColor))}function Z(m,S,h,l,M,O,u,b,q,V){const I=m.numMaxInfluencers||m.numInfluencers;return I<=0?0:(S.push("#define MORPHTARGETS"),m.hasPositions&&S.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),m.hasNormals&&S.push("#define MORPHTARGETTEXTURE_HASNORMALS"),m.hasTangents&&S.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),m.hasUVs&&S.push("#define MORPHTARGETTEXTURE_HASUVS"),m.hasUV2s&&S.push("#define MORPHTARGETTEXTURE_HASUV2S"),m.hasColors&&S.push("#define MORPHTARGETTEXTURE_HASCOLORS"),m.supportsPositions&&M&&S.push("#define MORPHTARGETS_POSITION"),m.supportsNormals&&O&&S.push("#define MORPHTARGETS_NORMAL"),m.supportsTangents&&u&&S.push("#define MORPHTARGETS_TANGENT"),m.supportsUVs&&b&&S.push("#define MORPHTARGETS_UV"),m.supportsUV2s&&q&&S.push("#define MORPHTARGETS_UV2"),m.supportsColors&&V&&S.push("#define MORPHTARGETS_COLOR"),S.push("#define NUM_MORPH_INFLUENCERS "+I),m.isUsingTextureForTargets&&S.push("#define MORPHTARGETS_TEXTURE"),Y.NUM_MORPH_INFLUENCERS=I,Y.NORMAL=O,Y.TANGENT=u,Y.UV=b,Y.UV2=q,Y.COLOR=V,C(h,l,Y,M),I)}function C(m,S,h){let M=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const u=h.NUM_MORPH_INFLUENCERS;if(u>0&&O.d.LastCreatedEngine){const b=O.d.LastCreatedEngine.getCaps().maxVertexAttribs,q=S.morphTargetManager;if(null!==q&&void 0!==q&&q.isUsingTextureForTargets)return;const Y=q&&q.supportsPositions&&M,V=q&&q.supportsNormals&&h.NORMAL,I=q&&q.supportsTangents&&h.TANGENT,Z=q&&q.supportsUVs&&h.UV1,C=q&&q.supportsUV2s&&h.UV2,B=q&&q.supportsColors&&h.VERTEXCOLOR;for(let h=0;h<u;h++)Y&&m.push("position"+h),V&&m.push("normal"+h),I&&m.push("tangent"+h),Z&&m.push("uv_"+h),C&&m.push("uv2_"+h),B&&m.push("color"+h),m.length>b&&l.e.Error("Cannot add more vertex attributes for mesh "+S.name)}}function B(m){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];m.push("world0"),m.push("world1"),m.push("world2"),m.push("world3"),S&&(m.push("previousWorld0"),m.push("previousWorld1"),m.push("previousWorld2"),m.push("previousWorld3"))}function D(m,S){const h=m.morphTargetManager;m&&h&&S.setFloatArray("morphTargetInfluences",h.influences)}function E(m,S){S.bindToEffect(m,"Scene")}function n(m,S,h){S._needUVs=!0,S[h]=!0,m.optimizeUVAllocation&&m.getTextureMatrix().isIdentityAs3x2()?(S[h+"DIRECTUV"]=m.coordinatesIndex+1,S["MAINUV"+(m.coordinatesIndex+1)]=!0):S[h+"DIRECTUV"]=0}function L(m,S,h){const l=m.getTextureMatrix();S.lb(h+"Matrix",l)}function U(m,S,h){h.BAKED_VERTEX_ANIMATION_TEXTURE&&h.INSTANCES&&m.push("bakedVertexAnimationSettingsInstanced")}function H(m,S,h){var l;if(S&&m&&(m.computeBonesUsingShaders&&S._bonesComputationForcedToCPU&&(m.computeBonesUsingShaders=!1),m.useBones&&m.computeBonesUsingShaders&&m.skeleton)){const M=m.skeleton;if(M.isUsingTextureForMatrices&&S.getUniformIndex("boneTextureWidth")>-1){const h=M.getTransformMatrixTexture(m);S.setTexture("boneSampler",h),S.setFloat("boneTextureWidth",4*(M.bones.length+1))}else{const O=M.getTransformMatrices(m);O&&(S.setMatrices("mBones",O),h&&m.sm().prePassRenderer&&m.sm().prePassRenderer.getIndex(2)&&(h.previousBones[m.uniqueId]||(h.previousBones[m.uniqueId]=O.slice()),S.setMatrices("mPreviousBones",h.previousBones[m.uniqueId]),l=O,h.previousBones[m.uniqueId].set(l)))}}}function R(m,S,h,l,M){let O=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];m._bindLight(S,h,l,M,O)}function y(m,S,h,l){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const O=Math.min(S.lightSources.length,M);for(let u=0;u<O;u++){R(S.lightSources[u],u,m,h,"boolean"===typeof l?l:l.SPECULARTERM,S.receiveShadows)}}function o(m,S,h,l){h.NUM_BONE_INFLUENCERS>0&&(l.addCPUSkinningFallback(0,S),m.push("matricesIndices"),m.push("matricesWeights"),h.NUM_BONE_INFLUENCERS>4&&(m.push("matricesIndicesExtra"),m.push("matricesWeightsExtra")))}function s(m,S){(S.INSTANCES||S.THIN_INSTANCES)&&B(m,!!S.PREPASS_VELOCITY),S.INSTANCESCOLOR&&m.push("instanceColor")}function v(m,S){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,M=0;for(let O=0;O<h&&m["LIGHT"+O];O++)O>0&&(M=l+O,S.addFallback(M,"LIGHT"+O)),m.SHADOWS||(m["SHADOW"+O]&&S.addFallback(l,"SHADOW"+O),m["SHADOWPCF"+O]&&S.addFallback(l,"SHADOWPCF"+O),m["SHADOWPCSS"+O]&&S.addFallback(l,"SHADOWPCSS"+O),m["SHADOWPOISSON"+O]&&S.addFallback(l,"SHADOWPOISSON"+O),m["SHADOWESM"+O]&&S.addFallback(l,"SHADOWESM"+O),m["SHADOWCLOSEESM"+O]&&S.addFallback(l,"SHADOWCLOSEESM"+O));return M++}function T(m,S,h,l,M,O,u){let b=arguments.length>7&&void 0!==arguments[7]&&arguments[7];u._areMiscDirty&&(u.LOGARITHMICDEPTH=h,u.POINTSIZE=l,u.FOG=M&&function(m,S){return S.fogEnabled&&m.applyFog&&0!==S.fogMode}(m,S),u.NONUNIFORMSCALING=m.nonUniformScaling,u.ALPHATEST=O,u.DECAL_AFTER_DETAIL=b)}function X(m,S,h,l){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,O=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!h._areLightsDirty)return h._needNormals;let u=0;const b={needNormals:h._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(m.lightsEnabled&&!O)for(const Y of S.lightSources)if(g(m,S,Y,u,h,l,b),u++,u===M)break;h.SPECULARTERM=b.specularEnabled,h.SHADOWS=b.shadowEnabled;for(let Y=u;Y<M;Y++)void 0!==h["LIGHT"+Y]&&(h["LIGHT"+Y]=!1,h["HEMILIGHT"+Y]=!1,h["POINTLIGHT"+Y]=!1,h["DIRLIGHT"+Y]=!1,h["SPOTLIGHT"+Y]=!1,h["AREALIGHT"+Y]=!1,h["SHADOW"+Y]=!1,h["SHADOWCSM"+Y]=!1,h["SHADOWCSMDEBUG"+Y]=!1,h["SHADOWCSMNUM_CASCADES"+Y]=!1,h["SHADOWCSMUSESHADOWMAXZ"+Y]=!1,h["SHADOWCSMNOBLEND"+Y]=!1,h["SHADOWCSM_RIGHTHANDED"+Y]=!1,h["SHADOWPCF"+Y]=!1,h["SHADOWPCSS"+Y]=!1,h["SHADOWPOISSON"+Y]=!1,h["SHADOWESM"+Y]=!1,h["SHADOWCLOSEESM"+Y]=!1,h["SHADOWCUBE"+Y]=!1,h["SHADOWLOWQUALITY"+Y]=!1,h["SHADOWMEDIUMQUALITY"+Y]=!1);const q=m.getEngine().getCaps();return void 0===h.SHADOWFLOAT&&(b.needRebuild=!0),h.SHADOWFLOAT=b.shadowEnabled&&(q.textureFloatRender&&q.textureFloatLinearFiltering||q.textureHalfFloatRender&&q.textureHalfFloatLinearFiltering),h.LIGHTMAPEXCLUDED=b.lightmapMode,b.needRebuild&&h.rebuild(),b.needNormals}function g(m,S,h,l,M,O,b){switch(b.needNormals=!0,void 0===M["LIGHT"+l]&&(b.needRebuild=!0),M["LIGHT"+l]=!0,M["SPOTLIGHT"+l]=!1,M["HEMILIGHT"+l]=!1,M["POINTLIGHT"+l]=!1,M["DIRLIGHT"+l]=!1,M["AREALIGHT"+l]=!1,h.prepareLightSpecificDefines(M,l),M["LIGHT_FALLOFF_PHYSICAL"+l]=!1,M["LIGHT_FALLOFF_GLTF"+l]=!1,M["LIGHT_FALLOFF_STANDARD"+l]=!1,h.falloffType){case u.d.FALLOFF_GLTF:M["LIGHT_FALLOFF_GLTF"+l]=!0;break;case u.d.FALLOFF_PHYSICAL:M["LIGHT_FALLOFF_PHYSICAL"+l]=!0;break;case u.d.FALLOFF_STANDARD:M["LIGHT_FALLOFF_STANDARD"+l]=!0}if(O&&!h.dV.equalsFloats(0,0,0)&&(b.specularEnabled=!0),M["SHADOW"+l]=!1,M["SHADOWCSM"+l]=!1,M["SHADOWCSMDEBUG"+l]=!1,M["SHADOWCSMNUM_CASCADES"+l]=!1,M["SHADOWCSMUSESHADOWMAXZ"+l]=!1,M["SHADOWCSMNOBLEND"+l]=!1,M["SHADOWCSM_RIGHTHANDED"+l]=!1,M["SHADOWPCF"+l]=!1,M["SHADOWPCSS"+l]=!1,M["SHADOWPOISSON"+l]=!1,M["SHADOWESM"+l]=!1,M["SHADOWCLOSEESM"+l]=!1,M["SHADOWCUBE"+l]=!1,M["SHADOWLOWQUALITY"+l]=!1,M["SHADOWMEDIUMQUALITY"+l]=!1,S&&S.receiveShadows&&m.shadowsEnabled&&h.shadowEnabled){const S=h.getShadowGenerator(m.activeCamera)??h.getShadowGenerator();if(S){const m=S.getShadowMap();m&&m.renderList&&m.renderList.length>0&&(b.shadowEnabled=!0,S.prepareDefines(M,l))}}h.lightmapMode!=u.d.LIGHTMAP_DEFAULT?(b.lightmapMode=!0,M["LIGHTMAPEXCLUDED"+l]=!0,M["LIGHTMAPNOSPECULAR"+l]=h.lightmapMode==u.d.LIGHTMAP_SHADOWSONLY):(M["LIGHTMAPEXCLUDED"+l]=!1,M["LIGHTMAPNOSPECULAR"+l]=!1)}function G(m,S,h,l,M){let O=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=function(m,S){let h=!1;if(m.activeCamera){const l=S.CAMERA_ORTHOGRAPHIC?1:0,M=S.CAMERA_PERSPECTIVE?1:0,O=1===m.activeCamera.mode?1:0,u=0===m.activeCamera.mode?1:0;(l^O||M^u)&&(S.CAMERA_ORTHOGRAPHIC=1===O,S.CAMERA_PERSPECTIVE=1===u,h=!0)}return h}(m,l);!1!==O&&(q=(0,b.k)(h,m,l)),l.DEPTHPREPASS!==!S.getColorWrite()&&(l.DEPTHPREPASS=!l.DEPTHPREPASS,q=!0),l.INSTANCES!==M&&(l.INSTANCES=M,q=!0),l.THIN_INSTANCES!==u&&(l.THIN_INSTANCES=u,q=!0),q&&l.markAsUnprocessed()}function e(m,S,h,l){let M=arguments.length>4&&void 0!==arguments[4]&&arguments[4],O=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],u=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!S._areAttributesDirty&&S._needNormals===S._normals&&S._needUVs===S._uvs)return!1;S._normals=S._needNormals,S._uvs=S._needUVs,S.NORMAL=S._needNormals&&m.isVerticesDataPresent("normal"),S._needNormals&&m.isVerticesDataPresent("tangent")&&(S.TANGENT=!0);for(let b=1;b<=6;++b)S["UV"+b]=!!S._needUVs&&m.isVerticesDataPresent(`uv${1===b?"":b}`);if(h){const h=m.useVertexColors&&m.isVerticesDataPresent("color");S.VERTEXCOLOR=h,S.VERTEXALPHA=m.hasVertexAlpha&&h&&O}return m.isVerticesDataPresent("instanceColor")&&(m.hasInstances||m.hasThinInstances)&&(S.INSTANCESCOLOR=!0),l&&function(m,S){if(m.useBones&&m.computeBonesUsingShaders&&m.skeleton){S.NUM_BONE_INFLUENCERS=m.numBoneInfluencers;const h=void 0!==S.BONETEXTURE;if(m.skeleton.isUsingTextureForMatrices&&h)S.BONETEXTURE=!0;else{S.BonesPerMesh=m.skeleton.bones.length+1,S.BONETEXTURE=!h&&void 0;const l=m.sm().prePassRenderer;if(l&&l.enabled){const h=-1===l.excludedSkinnedMesh.indexOf(m);S.BONES_VELOCITY_ENABLED=h}}}else S.NUM_BONE_INFLUENCERS=0,S.BonesPerMesh=0,void 0!==S.BONETEXTURE&&(S.BONETEXTURE=!1)}(m,S),M&&function(m,S){const h=m.morphTargetManager;h?(S.MORPHTARGETS_UV=h.supportsUVs&&S.UV1,S.MORPHTARGETS_UV2=h.supportsUV2s&&S.UV2,S.MORPHTARGETS_TANGENT=h.supportsTangents&&S.TANGENT,S.MORPHTARGETS_NORMAL=h.supportsNormals&&S.NORMAL,S.MORPHTARGETS_POSITION=h.supportsPositions,S.MORPHTARGETS_COLOR=h.supportsColors,S.MORPHTARGETTEXTURE_HASUVS=h.hasUVs,S.MORPHTARGETTEXTURE_HASUV2S=h.hasUV2s,S.MORPHTARGETTEXTURE_HASTANGENTS=h.hasTangents,S.MORPHTARGETTEXTURE_HASNORMALS=h.hasNormals,S.MORPHTARGETTEXTURE_HASPOSITIONS=h.hasPositions,S.MORPHTARGETTEXTURE_HASCOLORS=h.hasColors,S.NUM_MORPH_INFLUENCERS=h.numMaxInfluencers||h.numInfluencers,S.MORPHTARGETS=S.NUM_MORPH_INFLUENCERS>0,S.MORPHTARGETS_TEXTURE=h.isUsingTextureForTargets):(S.MORPHTARGETS_UV=!1,S.MORPHTARGETS_UV2=!1,S.MORPHTARGETS_TANGENT=!1,S.MORPHTARGETS_NORMAL=!1,S.MORPHTARGETS_POSITION=!1,S.MORPHTARGETS_COLOR=!1,S.MORPHTARGETTEXTURE_HASUVS=!1,S.MORPHTARGETTEXTURE_HASUV2S=!1,S.MORPHTARGETTEXTURE_HASTANGENTS=!1,S.MORPHTARGETTEXTURE_HASNORMALS=!1,S.MORPHTARGETTEXTURE_HASPOSITIONS=!1,S.MORPHTARGETTEXTURE_HAS_COLORS=!1,S.MORPHTARGETS=!1,S.NUM_MORPH_INFLUENCERS=0)}(m,S),u&&function(m,S){const h=m.bakedVertexAnimationManager;S.BAKED_VERTEX_ANIMATION_TEXTURE=!(!h||!h.isEnabled)}(m,S),!0}function a(m,S){if(m.activeCamera){const h=S.MULTIVIEW;S.MULTIVIEW=null!==m.activeCamera.outputRenderTarget&&m.activeCamera.outputRenderTarget.getViewCount()>1,S.MULTIVIEW!=h&&S.markAsUnprocessed()}}function x(m,S,h){const l=S.ORDER_INDEPENDENT_TRANSPARENCY,M=S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;S.ORDER_INDEPENDENT_TRANSPARENCY=m.useOrderIndependentTransparency&&h,S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!m.getEngine().getCaps().textureFloatLinearFiltering,l===S.ORDER_INDEPENDENT_TRANSPARENCY&&M===S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||S.markAsUnprocessed()}function P(m,S,h){const l=S.PREPASS;if(!S._arePrePassDirty)return;const M=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(m.prePassRenderer&&m.prePassRenderer.enabled&&h){S.PREPASS=!0,S.SCENE_MRT_COUNT=m.prePassRenderer.mrtCount,S.PREPASS_NORMAL_WORLDSPACE=m.prePassRenderer.generateNormalsInWorldSpace,S.PREPASS_COLOR=!0,S.PREPASS_COLOR_INDEX=0;for(let h=0;h<M.length;h++){const l=m.prePassRenderer.getIndex(M[h].type);-1!==l?(S[M[h].define]=!0,S[M[h].index]=l):S[M[h].define]=!1}}else{S.PREPASS=!1;for(let m=0;m<M.length;m++)S[M[m].define]=!1}S.PREPASS!=l&&(S.markAsUnprocessed(),S.markAsImageProcessingDirty())}function d(m,S,h,l){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6];M&&M.push("Light"+m),O||(S.push("vLightData"+m,"vLightDiffuse"+m,"vLightSpecular"+m,"vLightDirection"+m,"vLightWidth"+m,"vLightHeight"+m,"vLightFalloff"+m,"vLightGround"+m,"lightMatrix"+m,"shadowsInfo"+m,"depthValues"+m),h.push("shadowTexture"+m),h.push("depthTexture"+m),S.push("viewFrustumZ"+m,"cascadeBlendFactor"+m,"lightSizeUVCorrection"+m,"depthCorrection"+m,"penumbraDarkness"+m,"frustumLengths"+m),l&&(h.push("projectionLightTexture"+m),S.push("textureProjectionMatrix"+m)),u&&h.push("iesLightTexture"+m))}function J(m,S,h){let l,M,O=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(m.uniformsNames){const u=m;l=u.uniformsNames,M=u.uniformBuffersNames,S=u.samplers,h=u.defines,O=u.maxSimultaneousLights||0}else l=m,S||(S=[]);for(let u=0;u<O&&h["LIGHT"+u];u++)d(u,l,S,h["PROJECTEDLIGHTTEXTURE"+u],M,!1,h["IESLIGHTTEXTURE"+u]);h.NUM_MORPH_INFLUENCERS&&(l.push("morphTargetInfluences"),l.push("morphTargetCount")),h.BAKED_VERTEX_ANIMATION_TEXTURE&&(l.push("bakedVertexAnimationSettings"),l.push("bakedVertexAnimationTextureSizeInverted"),l.push("bakedVertexAnimationTime"),S.push("bakedVertexAnimationTexture"))}},11625:(m,S,h)=>{h.d(S,{d:()=>O});var l=h(11347),M=h(11629);class O extends M.e{constructor(m,S){let h=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(m,S,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new l.Matrix,this._storeEffectOnSubMeshes=h}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(m,S){return!!m&&(!this._storeEffectOnSubMeshes||(!m.CM||0===m.CM.length||this.isReadyForSubMesh(m,m.CM[0],S)))}_isReadyForSubMesh(m){const S=m.materialDefines;return!(this.checkReadyOnEveryCall||!m.effect||!S||S._renderId!==this.sm().getRenderId())}bindOnlyWorldMatrix(m){this._activeEffect.setMatrix("world",m)}bindOnlyNormalMatrix(m){this._activeEffect.setMatrix("normalMatrix",m)}bind(m,S){S&&this.bindForSubMesh(m,S,S.CM[0])}_afterBind(m){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,h=arguments.length>2?arguments[2]:void 0;super._afterBind(m,S,h),this.sm()._cachedEffect=S,h?h._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(m,S,h){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return h._drawWrapper._forceRebindOnNextCall||m.isCachedMaterialInvalid(this,S,l)}dispose(m,S,h){this._activeEffect=void 0,super.dispose(m,S,h)}}},11656:(m,S,h)=>{h.d(S,{e:()=>b,f:()=>q});var l=h(11327),M=h(11347),O=h(11336);class u{static extractMinAndMaxIndexed(m,S,h,l,M,O){for(let u=h;u<h+l;u++){const h=3*S[u],l=m[h],b=m[h+1],q=m[h+2];M.minimizeInPlaceFromFloats(l,b,q),O.maximizeInPlaceFromFloats(l,b,q)}}static extractMinAndMax(m,S,h,l,M,O){for(let u=S,b=S*l;u<S+h;u++,b+=l){const S=m[b],h=m[b+1],l=m[b+2];M.minimizeInPlaceFromFloats(S,h,l),O.maximizeInPlaceFromFloats(S,h,l)}}}function b(m,S,h,l){let O=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const b=new M.nS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new M.nS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return u.extractMinAndMaxIndexed(m,S,h,l,b,q),O&&(b.x-=b.x*O.x+O.y,b.y-=b.y*O.x+O.y,b.z-=b.z*O.x+O.y,q.x+=q.x*O.x+O.y,q.y+=q.y*O.x+O.y,q.z+=q.z*O.x+O.y),{minimum:b,maximum:q}}function q(m,S,h){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,O=arguments.length>4?arguments[4]:void 0;const b=new M.nS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),q=new M.nS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return O||(O=3),u.extractMinAndMax(m,S,h,O,b,q),l&&(b.x-=b.x*l.x+l.y,b.y-=b.y*l.x+l.y,b.z-=b.z*l.x+l.y,q.x+=q.x*l.x+l.y,q.y+=q.y*l.x+l.y,q.z+=q.z*l.x+l.y),{minimum:b,maximum:q}}(0,l.d)([O.f.filter((function(){for(var m=arguments.length,S=new Array(m),h=0;h<m;h++)S[h]=arguments[h];let[l,M]=S;return!Array.isArray(l)&&!Array.isArray(M)}))],u,"extractMinAndMaxIndexed",null),(0,l.d)([O.f.filter((function(){for(var m=arguments.length,S=new Array(m),h=0;h<m;h++)S[h]=arguments[h];let[l]=S;return!Array.isArray(l)}))],u,"extractMinAndMax",null)},11637:(m,S,h)=>{h.d(S,{d:()=>q});var l=h(11410),M=h(11643),O=h(11648),u=h(11656),b=h(11450);class q{get materialDefines(){var m;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(m=this._getDrawWrapper())||void 0===m?void 0:m.defines}set materialDefines(m){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=m}_getDrawWrapper(m){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];m=m??this._engine.currentRenderPassId;let h=this._drawWrappers[m];return!h&&S&&(this._drawWrappers[m]=h=new b.e(this._mesh.sm().getEngine())),h}_removeDrawWrapper(m){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var h;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(h=this._drawWrappers[m])||void 0===h||h.dispose(S));this._drawWrappers[m]=void 0}get effect(){var m;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(m=this._getDrawWrapper())||void 0===m?void 0:m.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(m){this._mainDrawWrapperOverride=m}setEffect(m){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,h=arguments.length>2?arguments[2]:void 0,l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const M=this._drawWrapper;M.setEffect(m,S,l),void 0!==h&&(M.materialContext=h),m||(M.defines=null,M.materialContext=void 0)}resetDrawCache(m){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==m)return void this._removeDrawWrapper(m,!0,S);for(const m of this._drawWrappers)null===m||void 0===m||m.dispose(S)}this._drawWrappers=[]}static AddToMesh(m,S,h,l,M,O,u){return new q(m,S,h,l,M,O,u,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(m,S,h,l,M,O,u){let b=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],q=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=m,this.verticesStart=S,this.verticesCount=h,this.indexStart=l,this.indexCount=M,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=O,this._renderingMesh=u||O,q&&O.CM.push(this),this._engine=this._mesh.sm().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=O.CM.length-1,b&&(this.refreshBoundingInfo(),O.Mb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(m){return this._boundingInfo=m,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const m=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return m||this._renderingMesh}jm(){let m=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const S=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!S)return m&&this._mesh.sm()._hasDefaultMaterial?this._mesh.sm().defaultMaterial:null;if(this._isMultiMaterial(S)){const m=S.getSubMaterial(this.materialIndex);return this._currentMaterial!==m&&(this._currentMaterial=m,this.resetDrawCache()),m}return S}_isMultiMaterial(m){return void 0!==m.getSubMaterial}refreshBoundingInfo(){let m=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.ub)return this;if(m||(m=this._renderingMesh.getVerticesData(l.f.PositionKind)),!m)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const S=this._renderingMesh.bb();let h;if(0===this.indexStart&&this.indexCount===S.length){const m=this._renderingMesh.getBoundingInfo();h={minimum:m.minimum.clone(),maximum:m.maximum.clone()}}else h=(0,u.e)(m,S,this.indexStart,this.indexCount,this._renderingMesh.ub.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(h.minimum,h.maximum):this._boundingInfo=new O.d(h.minimum,h.maximum),this}_checkCollision(m){return this.getBoundingInfo()._checkCollision(m)}updateBoundingInfo(m){let S=this.getBoundingInfo();return S||(this.refreshBoundingInfo(),S=this.getBoundingInfo()),S&&S.update(m),this}isInFrustum(m){const S=this.getBoundingInfo();return!!S&&S.isInFrustum(m,this._mesh.NI)}isCompletelyInFrustum(m){const S=this.getBoundingInfo();return!!S&&S.isCompletelyInFrustum(m)}render(m){return this._renderingMesh.render(this,m,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(m,S){if(!this._linesIndexBuffer){const h=6*Math.floor(this.indexCount/3),l=this.verticesStart+this.verticesCount>65535?new Uint32Array(h):new Uint16Array(h);let M=0;if(0===m.length)for(let m=this.indexStart;m<this.indexStart+this.indexCount;m+=3)l[M++]=m,l[M++]=m+1,l[M++]=m+1,l[M++]=m+2,l[M++]=m+2,l[M++]=m;else for(let S=this.indexStart;S<this.indexStart+this.indexCount;S+=3)l[M++]=m[S],l[M++]=m[S+1],l[M++]=m[S+1],l[M++]=m[S+2],l[M++]=m[S+2],l[M++]=m[S];this._linesIndexBuffer=S.createIndexBuffer(l),this._linesIndexCount=l.length}return this._linesIndexBuffer}canIntersects(m){const S=this.getBoundingInfo();return!!S&&m.intersectsBox(S.boundingBox)}intersects(m,S,h,l,M){const O=this.jm();if(!O)return null;let u=3,b=!1;switch(O.fillMode){case 3:case 5:case 6:case 8:return null;case 7:u=1,b=!0}return 4===O.fillMode?h.length?this._intersectLines(m,S,h,this._mesh.intersectionThreshold,l):this._intersectUnIndexedLines(m,S,h,this._mesh.intersectionThreshold,l):!h.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(m,S,h,l,M):this._intersectTriangles(m,S,h,u,b,l,M)}_intersectLines(m,S,h,l,O){let u=null;for(let b=this.indexStart;b<this.indexStart+this.indexCount;b+=2){const q=S[h[b]],Y=S[h[b+1]],V=m.intersectionSegment(q,Y,l);if(!(V<0)&&((O||!u||V<u.distance)&&(u=new M.c(null,null,V),u.faceId=b/2,O)))break}return u}_intersectUnIndexedLines(m,S,h,l,O){let u=null;for(let b=this.verticesStart;b<this.verticesStart+this.verticesCount;b+=2){const h=S[b],q=S[b+1],Y=m.intersectionSegment(h,q,l);if(!(Y<0)&&((O||!u||Y<u.distance)&&(u=new M.c(null,null,Y),u.faceId=b/2,O)))break}return u}_intersectTriangles(m,S,h,l,M,O,u){let b=null,q=-1;for(let Y=this.indexStart;Y<this.indexStart+this.indexCount-(3-l);Y+=l){q++;const l=h[Y],V=h[Y+1],I=h[Y+2];if(M&&4294967295===I){Y+=2;continue}const Z=S[l],C=S[V],B=S[I];if(!Z||!C||!B)continue;if(u&&!u(Z,C,B,m,l,V,I))continue;const D=m.intersectsTriangle(Z,C,B);if(D){if(D.distance<0)continue;if((O||!b||D.distance<b.distance)&&(b=D,b.faceId=q,O))break}}return b}_intersectUnIndexedTriangles(m,S,h,l,M){let O=null;for(let u=this.verticesStart;u<this.verticesStart+this.verticesCount;u+=3){const h=S[u],b=S[u+1],q=S[u+2];if(M&&!M(h,b,q,m,-1,-1,-1))continue;const Y=m.intersectsTriangle(h,b,q);if(Y){if(Y.distance<0)continue;if((l||!O||Y.distance<O.distance)&&(O=Y,O.faceId=u/3,l))break}}return O}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(m,S){const h=new q(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,m,S,!1);if(!this.IsGlobal){const m=this.getBoundingInfo();if(!m)return h;h._boundingInfo=new O.d(m.minimum,m.maximum)}return h}dispose(){let m=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.sm().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const S=this._mesh.CM.indexOf(this);this._mesh.CM.splice(S,1),this.resetDrawCache(void 0,m)}getClassName(){return"SubMesh"}static CreateFromIndices(m,S,h,l,M){let O=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],u=Number.MAX_VALUE,b=-Number.MAX_VALUE;const Y=(M||l).bb();for(let q=S;q<S+h;q++){const m=Y[q];m<u&&(u=m),m>b&&(b=m)}return new q(m,u,b-u+1,S,h,l,M,O)}}}}]);