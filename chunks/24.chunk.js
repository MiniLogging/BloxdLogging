"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[24],{11474:(g,w,q)=>{q.d(w,{e:()=>R});class R{constructor(g,w,q){this.bu=g,this.bv=w,this.distance=q,this.faceId=0,this.subMeshId=0}}},11483:(g,w,q)=>{q.d(w,{d:()=>S});var R=q(11192),o=q(11180),r=q(11188);class S{constructor(g,w,q){this.vectors=(0,R.e)(8,o.ew.Zero),this.center=o.ew.Zero(),this.centerWorld=o.ew.Zero(),this.extendSize=o.ew.Zero(),this.extendSizeWorld=o.ew.Zero(),this.directions=(0,R.e)(3,o.ew.Zero),this.vectorsWorld=(0,R.e)(8,o.ew.Zero),this.minimumWorld=o.ew.Zero(),this.maximumWorld=o.ew.Zero(),this.minimum=o.ew.Zero(),this.maximum=o.ew.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(g,w,q)}reConstruct(g,w,q){const R=g.x,r=g.y,S=g.z,i=w.x,T=w.y,z=w.z,t=this.vectors;this.minimum.mi(R,r,S),this.maximum.mi(i,T,z),t[0].mi(R,r,S),t[1].mi(i,T,z),t[2].mi(i,r,S),t[3].mi(R,T,S),t[4].mi(R,r,z),t[5].mi(i,T,S),t[6].mi(R,T,z),t[7].mi(i,r,z),w.addToRef(g,this.center).scaleInPlace(.5),w.subtractToRef(g,this.extendSize).scaleInPlace(.5),this._worldMatrix=q||o.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(g){const w=S._TmpVector3,q=this.maximum.subtractToRef(this.minimum,w[0]),R=q.length();q.normalizeFromLength(R);const o=R*g,r=q.scaleInPlace(.5*o),i=this.center.subtractToRef(r,w[1]),T=this.center.addToRef(r,w[2]);return this.reConstruct(i,T,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(g){const w=this.minimumWorld,q=this.maximumWorld,R=this.directions,r=this.vectorsWorld,S=this.vectors;if(g.isIdentity()){w.T(this.minimum),q.T(this.maximum);for(let g=0;g<8;++g)r[g].T(S[g]);this.extendSizeWorld.T(this.extendSize),this.centerWorld.T(this.center)}else{w.yi(Number.MAX_VALUE),q.yi(-Number.MAX_VALUE);for(let R=0;R<8;++R){const i=r[R];o.ew.TransformCoordinatesToRef(S[R],g,i),w.minimizeInPlace(i),q.maximizeInPlace(i)}q.subtractToRef(w,this.extendSizeWorld).scaleInPlace(.5),q.addToRef(w,this.centerWorld).scaleInPlace(.5)}o.ew.FromArrayToRef(g.m,0,R[0]),o.ew.FromArrayToRef(g.m,4,R[1]),o.ew.FromArrayToRef(g.m,8,R[2]),this._worldMatrix=g}isInFrustum(g){return S.IsInFrustum(this.vectorsWorld,g)}isCompletelyInFrustum(g){return S.IsCompletelyInFrustum(this.vectorsWorld,g)}intersectsPoint(g){const w=this.minimumWorld,q=this.maximumWorld,R=w.x,o=w.y,S=w.z,i=q.x,T=q.y,z=q.z,t=g.x,m=g.y,e=g.z,y=-r.c;return!(i-t<y||y>t-R)&&(!(T-m<y||y>m-o)&&!(z-e<y||y>e-S))}intersectsSphere(g){return S.IntersectsSphere(this.minimumWorld,this.maximumWorld,g.centerWorld,g.radiusWorld)}intersectsMinMax(g,w){const q=this.minimumWorld,R=this.maximumWorld,o=q.x,r=q.y,S=q.z,i=R.x,T=R.y,z=R.z,t=g.x,m=g.y,e=g.z,y=w.x,L=w.y,A=w.z;return!(i<t||o>y)&&(!(T<m||r>L)&&!(z<e||S>A))}dispose(){var g,w;null===(g=this._drawWrapperFront)||void 0===g||g.dispose(),null===(w=this._drawWrapperBack)||void 0===w||w.dispose()}static Intersects(g,w){return g.intersectsMinMax(w.minimumWorld,w.maximumWorld)}static IntersectsSphere(g,w,q,R){const r=S._TmpVector3[0];o.ew.ClampToRef(q,g,w,r);return o.ew.DistanceSquared(q,r)<=R*R}static IsCompletelyInFrustum(g,w){for(let q=0;q<6;++q){const R=w[q];for(let w=0;w<8;++w)if(R.dotCoordinate(g[w])<0)return!1}return!0}static IsInFrustum(g,w){for(let q=0;q<6;++q){let R=!0;const o=w[q];for(let w=0;w<8;++w)if(o.dotCoordinate(g[w])>=0){R=!1;break}if(R)return!1}return!0}}S._TmpVector3=(0,R.e)(3,o.ew.Zero)},11480:(g,w,q)=>{q.d(w,{d:()=>m});var R=q(11192),o=q(11180),r=q(11483),S=q(11489);const i={min:0,max:0},T={min:0,max:0},z=(g,w,q)=>{const R=o.ew.Dot(w.centerWorld,g),r=Math.abs(o.ew.Dot(w.directions[0],g))*w.extendSize.x+Math.abs(o.ew.Dot(w.directions[1],g))*w.extendSize.y+Math.abs(o.ew.Dot(w.directions[2],g))*w.extendSize.z;q.min=R-r,q.max=R+r},t=(g,w,q)=>(z(g,w,i),z(g,q,T),!(i.min>T.max||T.min>i.max));class m{constructor(g,w,q){this._isLocked=!1,this.boundingBox=new r.d(g,w,q),this.boundingSphere=new S.e(g,w,q)}reConstruct(g,w,q){this.boundingBox.reConstruct(g,w,q),this.boundingSphere.reConstruct(g,w,q)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(g){this._isLocked=g}update(g){this._isLocked||(this.boundingBox._update(g),this.boundingSphere._update(g))}centerOn(g,w){const q=m._TmpVector3[0].T(g).Yt(w),R=m._TmpVector3[1].T(g).addInPlace(w);return this.boundingBox.reConstruct(q,R,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(q,R,this.boundingBox.getWorldMatrix()),this}encapsulate(g){const w=o.ew.Minimize(this.minimum,g),q=o.ew.Maximize(this.maximum,g);return this.reConstruct(w,q,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(g){const w=o.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(w);const q=o.TmpVectors.ew[0];return o.ew.TransformCoordinatesToRef(g.boundingBox.minimumWorld,w,q),this.encapsulate(q),o.ew.TransformCoordinatesToRef(g.boundingBox.maximumWorld,w,q),this.encapsulate(q),this}scale(g){return this.boundingBox.scale(g),this.boundingSphere.scale(g),this}isInFrustum(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===w||3===w)&&this.boundingSphere.isCenterInFrustum(g))return!0;if(!this.boundingSphere.isInFrustum(g))return!1;return!(1!==w&&3!==w)||this.boundingBox.isInFrustum(g)}get diagonalLength(){const g=this.boundingBox;return g.maximumWorld.subtractToRef(g.minimumWorld,m._TmpVector3[0]).length()}isCompletelyInFrustum(g){return this.boundingBox.isCompletelyInFrustum(g)}_checkCollision(g){return g._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(g){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(g)&&!!this.boundingBox.intersectsPoint(g))}intersects(g,w){if(!S.e.Intersects(this.boundingSphere,g.boundingSphere))return!1;if(!r.d.Intersects(this.boundingBox,g.boundingBox))return!1;if(!w)return!0;const q=this.boundingBox,R=g.boundingBox;return!!t(q.directions[0],q,R)&&(!!t(q.directions[1],q,R)&&(!!t(q.directions[2],q,R)&&(!!t(R.directions[0],q,R)&&(!!t(R.directions[1],q,R)&&(!!t(R.directions[2],q,R)&&(!!t(o.ew.Cross(q.directions[0],R.directions[0]),q,R)&&(!!t(o.ew.Cross(q.directions[0],R.directions[1]),q,R)&&(!!t(o.ew.Cross(q.directions[0],R.directions[2]),q,R)&&(!!t(o.ew.Cross(q.directions[1],R.directions[0]),q,R)&&(!!t(o.ew.Cross(q.directions[1],R.directions[1]),q,R)&&(!!t(o.ew.Cross(q.directions[1],R.directions[2]),q,R)&&(!!t(o.ew.Cross(q.directions[2],R.directions[0]),q,R)&&(!!t(o.ew.Cross(q.directions[2],R.directions[1]),q,R)&&!!t(o.ew.Cross(q.directions[2],R.directions[2]),q,R))))))))))))))}}m._TmpVector3=(0,R.e)(2,o.ew.Zero)},11489:(g,w,q)=>{q.d(w,{e:()=>r});var R=q(11192),o=q(11180);class r{constructor(g,w,q){this.center=o.ew.Zero(),this.centerWorld=o.ew.Zero(),this.minimum=o.ew.Zero(),this.maximum=o.ew.Zero(),this.reConstruct(g,w,q)}reConstruct(g,w,q){this.minimum.T(g),this.maximum.T(w);const R=o.ew.Distance(g,w);w.addToRef(g,this.center).scaleInPlace(.5),this.radius=.5*R,this._update(q||o.Matrix.IdentityReadOnly)}scale(g){const w=this.radius*g,q=r._TmpVector3,R=q[0].yi(w),o=this.center.subtractToRef(R,q[1]),S=this.center.addToRef(R,q[2]);return this.reConstruct(o,S,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(g){if(g.isIdentity())this.centerWorld.T(this.center),this.radiusWorld=this.radius;else{o.ew.TransformCoordinatesToRef(this.center,g,this.centerWorld);const w=r._TmpVector3[0];o.ew.TransformNormalFromFloatsToRef(1,1,1,g,w),this.radiusWorld=Math.max(Math.abs(w.x),Math.abs(w.y),Math.abs(w.z))*this.radius}}isInFrustum(g){const w=this.centerWorld,q=this.radiusWorld;for(let R=0;R<6;R++)if(g[R].dotCoordinate(w)<=-q)return!1;return!0}isCenterInFrustum(g){const w=this.centerWorld;for(let q=0;q<6;q++)if(g[q].dotCoordinate(w)<0)return!1;return!0}intersectsPoint(g){const w=o.ew.DistanceSquared(this.centerWorld,g);return!(this.radiusWorld*this.radiusWorld<w)}static Intersects(g,w){const q=o.ew.DistanceSquared(g.centerWorld,w.centerWorld),R=g.radiusWorld+w.radiusWorld;return!(R*R<q)}static CreateFromCenterAndRadius(g,w,q){this._TmpVector3[0].T(g),this._TmpVector3[1].mi(0,0,w),this._TmpVector3[2].T(g),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Yt(this._TmpVector3[1]);const R=new r(this._TmpVector3[0],this._TmpVector3[2]);return R._worldMatrix=q||o.Matrix.Identity(),R}}r._TmpVector3=(0,R.e)(3,o.ew.Zero)},11506:(g,w,q)=>{function R(g){-1===g.indexOf("vClipPlane")&&g.push("vClipPlane"),-1===g.indexOf("vClipPlane2")&&g.push("vClipPlane2"),-1===g.indexOf("vClipPlane3")&&g.push("vClipPlane3"),-1===g.indexOf("vClipPlane4")&&g.push("vClipPlane4"),-1===g.indexOf("vClipPlane5")&&g.push("vClipPlane5"),-1===g.indexOf("vClipPlane6")&&g.push("vClipPlane6")}function o(g,w,q){const R=!!(g.clipPlane??w.clipPlane),o=!!(g.clipPlane2??w.clipPlane2),r=!!(g.clipPlane3??w.clipPlane3),S=!!(g.clipPlane4??w.clipPlane4),i=!!(g.clipPlane5??w.clipPlane5),T=!!(g.clipPlane6??w.clipPlane6);R&&q.push("#define CLIPPLANE"),o&&q.push("#define CLIPPLANE2"),r&&q.push("#define CLIPPLANE3"),S&&q.push("#define CLIPPLANE4"),i&&q.push("#define CLIPPLANE5"),T&&q.push("#define CLIPPLANE6")}function r(g,w,q){let R=!1;const o=!!(g.clipPlane??w.clipPlane),r=!!(g.clipPlane2??w.clipPlane2),S=!!(g.clipPlane3??w.clipPlane3),i=!!(g.clipPlane4??w.clipPlane4),T=!!(g.clipPlane5??w.clipPlane5),z=!!(g.clipPlane6??w.clipPlane6);return q.CLIPPLANE!==o&&(q.CLIPPLANE=o,R=!0),q.CLIPPLANE2!==r&&(q.CLIPPLANE2=r,R=!0),q.CLIPPLANE3!==S&&(q.CLIPPLANE3=S,R=!0),q.CLIPPLANE4!==i&&(q.CLIPPLANE4=i,R=!0),q.CLIPPLANE5!==T&&(q.CLIPPLANE5=T,R=!0),q.CLIPPLANE6!==z&&(q.CLIPPLANE6=z,R=!0),R}function S(g,w,q){let R=w.clipPlane??q.clipPlane;i(g,"vClipPlane",R),R=w.clipPlane2??q.clipPlane2,i(g,"vClipPlane2",R),R=w.clipPlane3??q.clipPlane3,i(g,"vClipPlane3",R),R=w.clipPlane4??q.clipPlane4,i(g,"vClipPlane4",R),R=w.clipPlane5??q.clipPlane5,i(g,"vClipPlane5",R),R=w.clipPlane6??q.clipPlane6,i(g,"vClipPlane6",R)}function i(g,w,q){q&&g.setFloat4(w,q.Lw.x,q.Lw.y,q.Lw.z,q.d)}q.d(w,{c:()=>R,d:()=>S,h:()=>r,l:()=>o})},11462:(g,w,q)=>{q.d(w,{e:()=>R});class R{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(g,w){this._defines[g]||(g<this._currentRank&&(this._currentRank=g),g>this._maxRank&&(this._maxRank=g),this._defines[g]=new Array),this._defines[g].push(w)}addCPUSkinningFallback(g,w){this._mesh=w,g<this._currentRank&&(this._currentRank=g),g>this._maxRank&&(this._maxRank=g)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(g,w){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,g=g.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),w._bonesComputationForcedToCPU=!0;const q=this._mesh.Ng();for(let g=0;g<q.meshes.length;g++){const R=q.meshes[g];if(R.material){if(R.computeBonesUsingShaders&&0!==R.numBoneInfluencers)if(R.material.getEffect()===w)R.computeBonesUsingShaders=!1;else if(R.wi)for(const g of R.wi){if(g.effect===w){R.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&R.computeBonesUsingShaders&&R.numBoneInfluencers>0&&(R.computeBonesUsingShaders=!1)}}else{const w=this._defines[this._currentRank];if(w)for(let q=0;q<w.length;q++)g=g.replace("#define "+w[q],"");this._currentRank++}return g}}},11469:(g,w,q)=>{q.d(w,{e:()=>l});var R=q(11161),o=q(11170),r=q(10991),S=q(10998),i=q(11034),T=q(11471),z=q(11409),t=q(11011),m=q(11238),e=q(11284),y=q(11218);class L{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(g){this._func=g}get funcRef(){return this._funcRef}set funcRef(g){this._funcRef=g}get funcMask(){return this._funcMask}set funcMask(g){this._funcMask=g}get opStencilFail(){return this._opStencilFail}set opStencilFail(g){this._opStencilFail=g}get opDepthFail(){return this._opDepthFail}set opDepthFail(g){this._opDepthFail=g}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(g){this._opStencilDepthPass=g}get mask(){return this._mask}set mask(g){this._mask=g}get enabled(){return this._enabled}set enabled(g){this._enabled=g}getClassName(){return"MaterialStencilState"}copyTo(g){y.c.Clone((()=>g),this)}serialize(){return y.c.Serialize(this)}parse(g,w,q){y.c.Parse((()=>this),g,w,q)}}(0,R.e)([(0,o.K)()],L.prototype,"func",null),(0,R.e)([(0,o.K)()],L.prototype,"funcRef",null),(0,R.e)([(0,o.K)()],L.prototype,"funcMask",null),(0,R.e)([(0,o.K)()],L.prototype,"opStencilFail",null),(0,R.e)([(0,o.K)()],L.prototype,"opDepthFail",null),(0,R.e)([(0,o.K)()],L.prototype,"opStencilDepthPass",null),(0,R.e)([(0,o.K)()],L.prototype,"mask",null),(0,R.e)([(0,o.K)()],L.prototype,"enabled",null);var A=q(11499);class l{get _supportGlowLayer(){return!1}set _glowModeEnabled(g){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(g){if(this._alpha===g)return;const w=this._alpha;this._alpha=g,1!==w&&1!==g||this.jz(l.MiscDirtyFlag+l.PrePassDirtyFlag)}get alpha(){return this._alpha}set ti(g){this._backFaceCulling!==g&&(this._backFaceCulling=g,this.jz(l.TextureDirtyFlag))}get ti(){return this._backFaceCulling}set cullBackFaces(g){this._cullBackFaces!==g&&(this._cullBackFaces=g,this.jz(l.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(g){this._blockDirtyMechanism!==g&&(this._blockDirtyMechanism=g,g||this.vm())}atomicMaterialsUpdate(g){this.blockDirtyMechanism=!0;try{g(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(g){this._onDisposeObserver&&this.WS.remove(this._onDisposeObserver),this._onDisposeObserver=this.WS.add(g)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new S.b),this._onBindObservable}set onBind(g){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(g)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new S.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new S.b),this._onEffectCreatedObservable}set alphaMode(g){this._alphaMode!==g&&(this._alphaMode=g,this.jz(l.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(g){this._needDepthPrePass!==g&&(this._needDepthPrePass=g,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(g){this._fogEnabled!==g&&(this._fogEnabled=g,this.jz(l.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case l.WireFrameFillMode:case l.LineListDrawMode:case l.LineLoopDrawMode:case l.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(g){this.fillMode=g?l.WireFrameFillMode:l.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case l.PointFillMode:case l.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(g){this.fillMode=g?l.PointFillMode:l.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(g){this._fillMode!==g&&(this._fillMode=g,this.jz(l.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(g){const w=this.Ng().getEngine().getCaps().fragmentDepthSupported;g&&!w&&t.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=g&&w,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(g){this._drawWrapper=g}constructor(g,w,q){let R=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.WS=new S.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new L,this._useUBO=!1,this._fillMode=l.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=g;const o=w||i.c.LastCreatedScene;o&&(this._scene=o,this._dirtyCallbacks={},this._forceGLSL=R,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=g||r.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new e.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new z.d(this._scene.getEngine(),void 0,void 0,g),this._useUBO=this.Ng().getEngine().supportsUniformBuffers,this._createUniformBuffer(),q||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),l.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var g;const w=this.Ng().getEngine();null===(g=this._uniformBuffer)||void 0===g||g.dispose(),w.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new z.d(w,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new z.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(g){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.vm(),this.checkReadyOnlyOnce=!0}unfreeze(){this.vm(),this.checkReadyOnlyOnce=!1}isReady(g,w){return!0}isReadyForSubMesh(g,w,q){const R=w.materialDefines;return!!R&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=R,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}Ng(){return this._scene}_getEffectiveOrientation(g){return null!==this.sideOrientation?this.sideOrientation:g.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(g){this._transparencyMode!==g&&(this._transparencyMode=g,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===l.MATERIAL_ALPHABLEND||this._transparencyMode===l.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===l.MATERIAL_ALPHATEST||this._transparencyMode===l.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===l.MATERIAL_OPAQUE||this._transparencyMode===l.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(g){return this._hasTransparencyMode?this._transparencyModeIsBlend:g.visibility<1||!this._disableAlphaBlending&&(g.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(g){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(g)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}vm(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const w=this.Ng().meshes;for(const q of w)if(q.wi)for(const w of q.wi)if(w.bg()===this)for(const q of w._drawWrappers)q&&this._materialContext===q.materialContext&&(q._wasPreviouslyReady=!1,q._wasPreviouslyUsingInstances=null,q._forceRebindOnNextCall=g);g&&this.jz(l.AllDirtyFlag)}_preBind(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const q=this._scene.getEngine(),R=(null==w?this.sideOrientation:w)===l.ClockWiseSideOrientation;return q.enableEffect(g||this._getDrawWrapper()),q.setState(this.ti,this.zOffset,!1,R,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),R}bind(g,w){}buildUniformLayout(){const g=this._uniformBuffer;this._eventInfo.ubo=g,this._callbackPluginEventGeneric(8,this._eventInfo),g.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(g,w,q){const R=q._drawWrapper;this._eventInfo.subMesh=q,this._callbackPluginEventBindForSubMesh(this._eventInfo),R._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(g){}bindView(g){this._useUBO?this._needToBindSceneUbo=!0:g.setMatrix("view",this.Ng().getViewMatrix())}bindViewProjection(g){this._useUBO?this._needToBindSceneUbo=!0:(g.setMatrix("viewProjection",this.Ng().getTransformMatrix()),g.setMatrix("projection",this.Ng().getProjectionMatrix()))}bindEyePosition(g,w){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(g,w)}_afterBind(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&w&&(this._needToBindSceneUbo=!1,(0,A.r)(w,this.Ng().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=g?g.visibility:1,this._onBindObservable&&g&&this._onBindObservable.notifyObservers(g),this.disableDepthWrite){const g=this._scene.getEngine();this._cachedDepthWriteState=g.getDepthWrite(),g.setDepthWrite(!1)}if(this.disableColorWrite){const g=this._scene.getEngine();this._cachedColorWriteState=g.getColorWrite(),g.setColorWrite(!1)}if(0!==this.depthFunction){const g=this._scene.getEngine();this._cachedDepthFunctionState=g.getDepthFunction()||0,g.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(g){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=g,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(g){return null}_clonePlugins(g,w){const q={};if(this._serializePlugins(q),l._ParsePlugins(q,g,this._scene,w),this.pluginManager)for(const R of this.pluginManager._plugins){const w=g.pluginManager.getPlugin(R.name);w&&R.copyTo(w)}}getBindedMeshes(){if(this.meshMap){const g=[];for(const w in this.meshMap){const q=this.meshMap[w];q&&g.push(q)}return g}return this._scene.meshes.filter((g=>g.material===this))}forceCompilation(g,w,q,R){const o={clipPlane:!1,useInstances:!1,...q},r=this.Ng(),S=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const i=()=>{if(!this._scene||!this._scene.getEngine())return;const q=r.clipPlane;if(o.clipPlane&&(r.clipPlane=new m.d(0,0,0,1)),this._storeEffectOnSubMeshes){let q=!0,r=null;if(g.wi){const w=new T.b(0,0,0,0,0,g,void 0,!1,!1);w.materialDefines&&(w.materialDefines._renderId=-1),this.isReadyForSubMesh(g,w,o.useInstances)||(w.effect&&w.effect.getCompilationError()&&w.effect.allFallbacksProcessed()?r=w.effect.getCompilationError():(q=!1,setTimeout(i,16)))}q&&(this.allowShaderHotSwapping=S,r&&R&&R(r),w&&w(this))}else this.isReady()?(this.allowShaderHotSwapping=S,w&&w(this)):setTimeout(i,16);o.clipPlane&&(r.clipPlane=q)};i()}async forceCompilationAsync(g,w){return await new Promise(((q,R)=>{this.forceCompilation(g,(()=>{q()}),w,(g=>{R(g)}))}))}jz(g){this.Ng().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(l._DirtyCallbackArray.length=0,g&l.ImageProcessingDirtyFlag&&l._DirtyCallbackArray.push(l._ImageProcessingDirtyCallBack),g&l.TextureDirtyFlag&&l._DirtyCallbackArray.push(l._TextureDirtyCallBack),g&l.LightDirtyFlag&&l._DirtyCallbackArray.push(l._LightsDirtyCallBack),g&l.FresnelDirtyFlag&&l._DirtyCallbackArray.push(l._FresnelDirtyCallBack),g&l.AttributesDirtyFlag&&l._DirtyCallbackArray.push(l._AttributeDirtyCallBack),g&l.MiscDirtyFlag&&l._DirtyCallbackArray.push(l._MiscDirtyCallBack),g&l.PrePassDirtyFlag&&l._DirtyCallbackArray.push(l._PrePassDirtyCallBack),l._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(l._RunDirtyCallBacks),this.Ng().resetCachedMaterial())}resetDrawCache(){const g=this.Ng().meshes;for(const w of g)if(w.wi)for(const g of w.wi)g.bg()===this&&g.resetDrawCache()}_markAllSubMeshesAsDirty(g){const w=this.Ng();if(w.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const q=w.meshes;for(const R of q)if(R.wi)for(const q of R.wi){if((q.bg()||(w._hasDefaultMaterial?w.defaultMaterial:null))===this)for(const w of q._drawWrappers)w&&w.defines&&w.defines.markAllAsDirty&&this._materialContext===w.materialContext&&g(w.defines)}}_markScenePrePassDirty(){if(this.Ng().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const g=this.Ng().enablePrePassRenderer();g&&g.jz()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(l._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(l._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(l._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(l._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(l._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(l._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(l._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(l._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(l._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(l._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const g=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.WS.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(g)}))}}setPrePassRenderer(g){return!1}dispose(g,w,q){const R=this.Ng();if(R.stopAnimation(this),R.freeProcessedMaterials(),R.removeMaterial(this),this._eventInfo.forceDisposeTextures=w,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const g=this._parentContainer.materials.indexOf(this);g>-1&&this._parentContainer.materials.splice(g,1),this._parentContainer=null}if(!0!==q)if(this.meshMap)for(const o in this.meshMap){const g=this.meshMap[o];this._disposeMeshResources(g)}else{const g=R.meshes;for(const w of g)this._disposeMeshResources(w)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.WS.notifyObservers(this),this.WS.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(g){if(!g)return;const w=g.Ti,q=g._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(g.wi&&q)for(const o of g.wi){const g=o._drawWrappers;for(let r=0;r<g.length;r++){var R;const S=null===(R=g[r])||void 0===R?void 0:R.effect;if(!S)continue;q[r]===this&&(null===w||void 0===w||w._releaseVertexArrayObject(S),o._removeDrawWrapper(r,!0,!0))}}}else null===w||void 0===w||w._releaseVertexArrayObject(this._drawWrapper.effect);g.material!==this||g.sourceMesh||(g.material=null)}serialize(){const g=y.c.Serialize(this);return g.stencil=this.stencil.serialize(),g.uniqueId=this.uniqueId,this._serializePlugins(g),g}_serializePlugins(g){if(g.plugins={},this.pluginManager)for(const w of this.pluginManager._plugins)w.doNotSerialize||(g.plugins[w.getClassName()]=w.serialize())}static Parse(g,w,q){if(g.customType){if("BABYLON.PBRMaterial"===g.customType&&g.overloadedAlbedo&&(g.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return t.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else g.customType="BABYLON.StandardMaterial";const R=r.Tools.Instantiate(g.customType).Parse(g,w,q);return R._loadedUniqueId=g.uniqueId,R}static _ParsePlugins(g,w,q,R){if(g.plugins)for(const i in g.plugins){var o,S;const T=g.plugins[i];let z=null===(o=w.pluginManager)||void 0===o?void 0:o.getPlugin(T.name);if(!z){const g=r.Tools.Instantiate("BABYLON."+i);g&&(z=new g(w))}null===(S=z)||void 0===S||S.parse(T,q,R)}}}l.TriangleFillMode=0,l.WireFrameFillMode=1,l.PointFillMode=2,l.PointListDrawMode=3,l.LineListDrawMode=4,l.LineLoopDrawMode=5,l.LineStripDrawMode=6,l.TriangleStripDrawMode=7,l.TriangleFanDrawMode=8,l.ClockWiseSideOrientation=0,l.CounterClockWiseSideOrientation=1,l.ImageProcessingDirtyFlag=64,l.TextureDirtyFlag=1,l.LightDirtyFlag=2,l.FresnelDirtyFlag=4,l.AttributesDirtyFlag=8,l.MiscDirtyFlag=16,l.PrePassDirtyFlag=32,l.AllDirtyFlag=127,l.MATERIAL_OPAQUE=0,l.MATERIAL_ALPHATEST=1,l.MATERIAL_ALPHABLEND=2,l.MATERIAL_ALPHATESTANDBLEND=3,l.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,l.MATERIAL_NORMALBLENDMETHOD_RNM=1,l.OnEventObservable=new S.b,l._AllDirtyCallBack=g=>g.markAllAsDirty(),l._ImageProcessingDirtyCallBack=g=>g.markAsImageProcessingDirty(),l._TextureDirtyCallBack=g=>g.markAsTexturesDirty(),l._FresnelDirtyCallBack=g=>g.markAsFresnelDirty(),l._MiscDirtyCallBack=g=>g.markAsMiscDirty(),l._PrePassDirtyCallBack=g=>g.markAsPrePassDirty(),l._LightsDirtyCallBack=g=>g.markAsLightDirty(),l._AttributeDirtyCallBack=g=>g.markAsAttributesDirty(),l._FresnelAndMiscDirtyCallBack=g=>{l._FresnelDirtyCallBack(g),l._MiscDirtyCallBack(g)},l._TextureAndMiscDirtyCallBack=g=>{l._TextureDirtyCallBack(g),l._MiscDirtyCallBack(g)},l._DirtyCallbackArray=[],l._RunDirtyCallBacks=g=>{for(const w of l._DirtyCallbackArray)w(g)},(0,R.e)([(0,o.K)()],l.prototype,"id",void 0),(0,R.e)([(0,o.K)()],l.prototype,"uniqueId",void 0),(0,R.e)([(0,o.K)()],l.prototype,"name",void 0),(0,R.e)([(0,o.K)()],l.prototype,"metadata",void 0),(0,R.e)([(0,o.K)()],l.prototype,"checkReadyOnEveryCall",void 0),(0,R.e)([(0,o.K)()],l.prototype,"checkReadyOnlyOnce",void 0),(0,R.e)([(0,o.K)()],l.prototype,"state",void 0),(0,R.e)([(0,o.K)("alpha")],l.prototype,"_alpha",void 0),(0,R.e)([(0,o.K)("ti")],l.prototype,"_backFaceCulling",void 0),(0,R.e)([(0,o.K)("cullBackFaces")],l.prototype,"_cullBackFaces",void 0),(0,R.e)([(0,o.K)()],l.prototype,"sideOrientation",void 0),(0,R.e)([(0,o.K)("alphaMode")],l.prototype,"_alphaMode",void 0),(0,R.e)([(0,o.K)()],l.prototype,"_needDepthPrePass",void 0),(0,R.e)([(0,o.K)()],l.prototype,"disableDepthWrite",void 0),(0,R.e)([(0,o.K)()],l.prototype,"disableColorWrite",void 0),(0,R.e)([(0,o.K)()],l.prototype,"forceDepthWrite",void 0),(0,R.e)([(0,o.K)()],l.prototype,"depthFunction",void 0),(0,R.e)([(0,o.K)()],l.prototype,"separateCullingPass",void 0),(0,R.e)([(0,o.K)("fogEnabled")],l.prototype,"_fogEnabled",void 0),(0,R.e)([(0,o.K)()],l.prototype,"pointSize",void 0),(0,R.e)([(0,o.K)()],l.prototype,"zOffset",void 0),(0,R.e)([(0,o.K)()],l.prototype,"zOffsetUnits",void 0),(0,R.e)([(0,o.K)()],l.prototype,"pointsCloud",null),(0,R.e)([(0,o.K)()],l.prototype,"fillMode",null),(0,R.e)([(0,o.K)()],l.prototype,"useLogarithmicDepth",null),(0,R.e)([(0,o.K)()],l.prototype,"transparencyMode",null)},11499:(g,w,q)=>{q.d(w,{$:()=>b,C:()=>a,F:()=>y,G:()=>e,I:()=>M,K:()=>j,L:()=>c,M:()=>J,P:()=>C,R:()=>V,U:()=>s,Y:()=>h,bb:()=>L,c:()=>d,e:()=>m,h:()=>U,j:()=>t,n:()=>A,r:()=>l,s:()=>x,v:()=>H,y:()=>G,z:()=>N});var R=q(11011),o=q(11235),r=q(11034),S=q(11453),i=q(11506);const T=o.Jw.Black(),z={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function t(g,w,q){if(!g||g.LOGARITHMICDEPTH||g.indexOf&&g.indexOf("LOGARITHMICDEPTH")>=0){const g=q.activeCamera;1===g.mode&&R.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),w.setFloat("logarithmicDepthConstant",2/(Math.log(g.maxZ+1)/Math.LN2))}}function m(g,w,q){let R=arguments.length>3&&void 0!==arguments[3]&&arguments[3];q&&g.fogEnabled&&(!w||w.applyFog)&&0!==g.fogMode&&(q.setFloat4("vFogInfos",g.fogMode,g.fogStart,g.fogEnd,g.fogDensity),R?(g.fogColor.toLinearSpaceToRef(T,g.getEngine().useExactSrgbConversions),q.setColor3("vFogColor",T)):q.setColor3("vFogColor",g.fogColor))}function e(g,w,q,R,o,r,S,i,T,t){const m=g.numMaxInfluencers||g.numInfluencers;return m<=0?0:(w.push("#define MORPHTARGETS"),g.hasPositions&&w.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),g.hasNormals&&w.push("#define MORPHTARGETTEXTURE_HASNORMALS"),g.hasTangents&&w.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),g.hasUVs&&w.push("#define MORPHTARGETTEXTURE_HASUVS"),g.hasUV2s&&w.push("#define MORPHTARGETTEXTURE_HASUV2S"),g.hasColors&&w.push("#define MORPHTARGETTEXTURE_HASCOLORS"),g.supportsPositions&&o&&w.push("#define MORPHTARGETS_POSITION"),g.supportsNormals&&r&&w.push("#define MORPHTARGETS_NORMAL"),g.supportsTangents&&S&&w.push("#define MORPHTARGETS_TANGENT"),g.supportsUVs&&i&&w.push("#define MORPHTARGETS_UV"),g.supportsUV2s&&T&&w.push("#define MORPHTARGETS_UV2"),g.supportsColors&&t&&w.push("#define MORPHTARGETS_COLOR"),w.push("#define NUM_MORPH_INFLUENCERS "+m),g.isUsingTextureForTargets&&w.push("#define MORPHTARGETS_TEXTURE"),z.NUM_MORPH_INFLUENCERS=m,z.NORMAL=r,z.TANGENT=S,z.UV=i,z.UV2=T,z.COLOR=t,y(q,R,z,o),m)}function y(g,w,q){let o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const S=q.NUM_MORPH_INFLUENCERS;if(S>0&&r.c.LastCreatedEngine){const i=r.c.LastCreatedEngine.getCaps().maxVertexAttribs,T=w.morphTargetManager;if(null!==T&&void 0!==T&&T.isUsingTextureForTargets)return;const z=T&&T.supportsPositions&&o,t=T&&T.supportsNormals&&q.NORMAL,m=T&&T.supportsTangents&&q.TANGENT,e=T&&T.supportsUVs&&q.UV1,y=T&&T.supportsUV2s&&q.UV2,L=T&&T.supportsColors&&q.VERTEXCOLOR;for(let q=0;q<S;q++)z&&g.push("position"+q),t&&g.push("normal"+q),m&&g.push("tangent"+q),e&&g.push("uv_"+q),y&&g.push("uv2_"+q),L&&g.push("color"+q),g.length>i&&R.d.Error("Cannot add more vertex attributes for mesh "+w.name)}}function L(g){let w=arguments.length>1&&void 0!==arguments[1]&&arguments[1];g.push("world0"),g.push("world1"),g.push("world2"),g.push("world3"),w&&(g.push("previousWorld0"),g.push("previousWorld1"),g.push("previousWorld2"),g.push("previousWorld3"))}function A(g,w){const q=g.morphTargetManager;g&&q&&w.setFloatArray("morphTargetInfluences",q.influences)}function l(g,w){w.bindToEffect(g,"Scene")}function J(g,w,q){w._needUVs=!0,w[q]=!0,g.optimizeUVAllocation&&g.getTextureMatrix().isIdentityAs3x2()?(w[q+"DIRECTUV"]=g.coordinatesIndex+1,w["MAINUV"+(g.coordinatesIndex+1)]=!0):w[q+"DIRECTUV"]=0}function x(g,w,q){const R=g.getTextureMatrix();w.Si(q+"Matrix",R)}function G(g,w,q){q.BAKED_VERTEX_ANIMATION_TEXTURE&&q.INSTANCES&&g.push("bakedVertexAnimationSettingsInstanced")}function d(g,w,q){var R;if(w&&g&&(g.computeBonesUsingShaders&&w._bonesComputationForcedToCPU&&(g.computeBonesUsingShaders=!1),g.useBones&&g.computeBonesUsingShaders&&g.skeleton)){const o=g.skeleton;if(o.isUsingTextureForMatrices&&w.getUniformIndex("boneTextureWidth")>-1){const q=o.getTransformMatrixTexture(g);w.setTexture("boneSampler",q),w.setFloat("boneTextureWidth",4*(o.bones.length+1))}else{const r=o.getTransformMatrices(g);r&&(w.setMatrices("mBones",r),q&&g.Ng().prePassRenderer&&g.Ng().prePassRenderer.getIndex(2)&&(q.previousBones[g.uniqueId]||(q.previousBones[g.uniqueId]=r.slice()),w.setMatrices("mPreviousBones",q.previousBones[g.uniqueId]),R=r,q.previousBones[g.uniqueId].set(R)))}}}function D(g,w,q,R,o){let r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];g._bindLight(w,q,R,o,r)}function U(g,w,q,R){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const r=Math.min(w.lightSources.length,o);for(let S=0;S<r;S++){D(w.lightSources[S],S,g,q,"boolean"===typeof R?R:R.SPECULARTERM,w.receiveShadows)}}function N(g,w,q,R){q.NUM_BONE_INFLUENCERS>0&&(R.addCPUSkinningFallback(0,w),g.push("matricesIndices"),g.push("matricesWeights"),q.NUM_BONE_INFLUENCERS>4&&(g.push("matricesIndicesExtra"),g.push("matricesWeightsExtra")))}function a(g,w){(w.INSTANCES||w.THIN_INSTANCES)&&L(g,!!w.PREPASS_VELOCITY),w.INSTANCESCOLOR&&g.push("instanceColor")}function H(g,w){let q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=0;for(let r=0;r<q&&g["LIGHT"+r];r++)r>0&&(o=R+r,w.addFallback(o,"LIGHT"+r)),g.SHADOWS||(g["SHADOW"+r]&&w.addFallback(R,"SHADOW"+r),g["SHADOWPCF"+r]&&w.addFallback(R,"SHADOWPCF"+r),g["SHADOWPCSS"+r]&&w.addFallback(R,"SHADOWPCSS"+r),g["SHADOWPOISSON"+r]&&w.addFallback(R,"SHADOWPOISSON"+r),g["SHADOWESM"+r]&&w.addFallback(R,"SHADOWESM"+r),g["SHADOWCLOSEESM"+r]&&w.addFallback(R,"SHADOWCLOSEESM"+r));return o++}function C(g,w,q,R,o,r,S){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];S._areMiscDirty&&(S.LOGARITHMICDEPTH=q,S.POINTSIZE=R,S.FOG=o&&function(g,w){return w.fogEnabled&&g.applyFog&&0!==w.fogMode}(g,w),S.NONUNIFORMSCALING=g.nonUniformScaling,S.ALPHATEST=r,S.DECAL_AFTER_DETAIL=i)}function c(g,w,q,R){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!q._areLightsDirty)return q._needNormals;let S=0;const i={needNormals:q._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(g.lightsEnabled&&!r)for(const z of w.lightSources)if(P(g,w,z,S,q,R,i),S++,S===o)break;q.SPECULARTERM=i.specularEnabled,q.SHADOWS=i.shadowEnabled;for(let z=S;z<o;z++)void 0!==q["LIGHT"+z]&&(q["LIGHT"+z]=!1,q["HEMILIGHT"+z]=!1,q["POINTLIGHT"+z]=!1,q["DIRLIGHT"+z]=!1,q["SPOTLIGHT"+z]=!1,q["AREALIGHT"+z]=!1,q["SHADOW"+z]=!1,q["SHADOWCSM"+z]=!1,q["SHADOWCSMDEBUG"+z]=!1,q["SHADOWCSMNUM_CASCADES"+z]=!1,q["SHADOWCSMUSESHADOWMAXZ"+z]=!1,q["SHADOWCSMNOBLEND"+z]=!1,q["SHADOWCSM_RIGHTHANDED"+z]=!1,q["SHADOWPCF"+z]=!1,q["SHADOWPCSS"+z]=!1,q["SHADOWPOISSON"+z]=!1,q["SHADOWESM"+z]=!1,q["SHADOWCLOSEESM"+z]=!1,q["SHADOWCUBE"+z]=!1,q["SHADOWLOWQUALITY"+z]=!1,q["SHADOWMEDIUMQUALITY"+z]=!1);const T=g.getEngine().getCaps();return void 0===q.SHADOWFLOAT&&(i.needRebuild=!0),q.SHADOWFLOAT=i.shadowEnabled&&(T.textureFloatRender&&T.textureFloatLinearFiltering||T.textureHalfFloatRender&&T.textureHalfFloatLinearFiltering),q.LIGHTMAPEXCLUDED=i.lightmapMode,i.needRebuild&&q.rebuild(),i.needNormals}function P(g,w,q,R,o,r,i){switch(i.needNormals=!0,void 0===o["LIGHT"+R]&&(i.needRebuild=!0),o["LIGHT"+R]=!0,o["SPOTLIGHT"+R]=!1,o["HEMILIGHT"+R]=!1,o["POINTLIGHT"+R]=!1,o["DIRLIGHT"+R]=!1,o["AREALIGHT"+R]=!1,q.prepareLightSpecificDefines(o,R),o["LIGHT_FALLOFF_PHYSICAL"+R]=!1,o["LIGHT_FALLOFF_GLTF"+R]=!1,o["LIGHT_FALLOFF_STANDARD"+R]=!1,q.falloffType){case S.c.FALLOFF_GLTF:o["LIGHT_FALLOFF_GLTF"+R]=!0;break;case S.c.FALLOFF_PHYSICAL:o["LIGHT_FALLOFF_PHYSICAL"+R]=!0;break;case S.c.FALLOFF_STANDARD:o["LIGHT_FALLOFF_STANDARD"+R]=!0}if(r&&!q.wt.equalsFloats(0,0,0)&&(i.specularEnabled=!0),o["SHADOW"+R]=!1,o["SHADOWCSM"+R]=!1,o["SHADOWCSMDEBUG"+R]=!1,o["SHADOWCSMNUM_CASCADES"+R]=!1,o["SHADOWCSMUSESHADOWMAXZ"+R]=!1,o["SHADOWCSMNOBLEND"+R]=!1,o["SHADOWCSM_RIGHTHANDED"+R]=!1,o["SHADOWPCF"+R]=!1,o["SHADOWPCSS"+R]=!1,o["SHADOWPOISSON"+R]=!1,o["SHADOWESM"+R]=!1,o["SHADOWCLOSEESM"+R]=!1,o["SHADOWCUBE"+R]=!1,o["SHADOWLOWQUALITY"+R]=!1,o["SHADOWMEDIUMQUALITY"+R]=!1,w&&w.receiveShadows&&g.shadowsEnabled&&q.shadowEnabled){const w=q.getShadowGenerator(g.activeCamera)??q.getShadowGenerator();if(w){const g=w.getShadowMap();g&&g.renderList&&g.renderList.length>0&&(i.shadowEnabled=!0,w.prepareDefines(o,R))}}q.lightmapMode!=S.c.LIGHTMAP_DEFAULT?(i.lightmapMode=!0,o["LIGHTMAPEXCLUDED"+R]=!0,o["LIGHTMAPNOSPECULAR"+R]=q.lightmapMode==S.c.LIGHTMAP_SHADOWSONLY):(o["LIGHTMAPEXCLUDED"+R]=!1,o["LIGHTMAPNOSPECULAR"+R]=!1)}function j(g,w,q,R,o){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,S=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=function(g,w){let q=!1;if(g.activeCamera){const R=w.CAMERA_ORTHOGRAPHIC?1:0,o=w.CAMERA_PERSPECTIVE?1:0,r=1===g.activeCamera.mode?1:0,S=0===g.activeCamera.mode?1:0;(R^r||o^S)&&(w.CAMERA_ORTHOGRAPHIC=1===r,w.CAMERA_PERSPECTIVE=1===S,q=!0)}return q}(g,R);!1!==r&&(T=(0,i.h)(q,g,R)),R.DEPTHPREPASS!==!w.getColorWrite()&&(R.DEPTHPREPASS=!R.DEPTHPREPASS,T=!0),R.INSTANCES!==o&&(R.INSTANCES=o,T=!0),R.THIN_INSTANCES!==S&&(R.THIN_INSTANCES=S,T=!0),T&&R.markAsUnprocessed()}function M(g,w,q,R){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],S=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!w._areAttributesDirty&&w._needNormals===w._normals&&w._needUVs===w._uvs)return!1;w._normals=w._needNormals,w._uvs=w._needUVs,w.NORMAL=w._needNormals&&g.isVerticesDataPresent("normal"),w._needNormals&&g.isVerticesDataPresent("tangent")&&(w.TANGENT=!0);for(let i=1;i<=6;++i)w["UV"+i]=!!w._needUVs&&g.isVerticesDataPresent(`uv${1===i?"":i}`);if(q){const q=g.useVertexColors&&g.isVerticesDataPresent("color");w.VERTEXCOLOR=q,w.VERTEXALPHA=g.hasVertexAlpha&&q&&r}return g.isVerticesDataPresent("instanceColor")&&(g.hasInstances||g.hasThinInstances)&&(w.INSTANCESCOLOR=!0),R&&function(g,w){if(g.useBones&&g.computeBonesUsingShaders&&g.skeleton){w.NUM_BONE_INFLUENCERS=g.numBoneInfluencers;const q=void 0!==w.BONETEXTURE;if(g.skeleton.isUsingTextureForMatrices&&q)w.BONETEXTURE=!0;else{w.BonesPerMesh=g.skeleton.bones.length+1,w.BONETEXTURE=!q&&void 0;const R=g.Ng().prePassRenderer;if(R&&R.enabled){const q=-1===R.excludedSkinnedMesh.indexOf(g);w.BONES_VELOCITY_ENABLED=q}}}else w.NUM_BONE_INFLUENCERS=0,w.BonesPerMesh=0,void 0!==w.BONETEXTURE&&(w.BONETEXTURE=!1)}(g,w),o&&function(g,w){const q=g.morphTargetManager;q?(w.MORPHTARGETS_UV=q.supportsUVs&&w.UV1,w.MORPHTARGETS_UV2=q.supportsUV2s&&w.UV2,w.MORPHTARGETS_TANGENT=q.supportsTangents&&w.TANGENT,w.MORPHTARGETS_NORMAL=q.supportsNormals&&w.NORMAL,w.MORPHTARGETS_POSITION=q.supportsPositions,w.MORPHTARGETS_COLOR=q.supportsColors,w.MORPHTARGETTEXTURE_HASUVS=q.hasUVs,w.MORPHTARGETTEXTURE_HASUV2S=q.hasUV2s,w.MORPHTARGETTEXTURE_HASTANGENTS=q.hasTangents,w.MORPHTARGETTEXTURE_HASNORMALS=q.hasNormals,w.MORPHTARGETTEXTURE_HASPOSITIONS=q.hasPositions,w.MORPHTARGETTEXTURE_HASCOLORS=q.hasColors,w.NUM_MORPH_INFLUENCERS=q.numMaxInfluencers||q.numInfluencers,w.MORPHTARGETS=w.NUM_MORPH_INFLUENCERS>0,w.MORPHTARGETS_TEXTURE=q.isUsingTextureForTargets):(w.MORPHTARGETS_UV=!1,w.MORPHTARGETS_UV2=!1,w.MORPHTARGETS_TANGENT=!1,w.MORPHTARGETS_NORMAL=!1,w.MORPHTARGETS_POSITION=!1,w.MORPHTARGETS_COLOR=!1,w.MORPHTARGETTEXTURE_HASUVS=!1,w.MORPHTARGETTEXTURE_HASUV2S=!1,w.MORPHTARGETTEXTURE_HASTANGENTS=!1,w.MORPHTARGETTEXTURE_HASNORMALS=!1,w.MORPHTARGETTEXTURE_HASPOSITIONS=!1,w.MORPHTARGETTEXTURE_HAS_COLORS=!1,w.MORPHTARGETS=!1,w.NUM_MORPH_INFLUENCERS=0)}(g,w),S&&function(g,w){const q=g.bakedVertexAnimationManager;w.BAKED_VERTEX_ANIMATION_TEXTURE=!(!q||!q.isEnabled)}(g,w),!0}function V(g,w){if(g.activeCamera){const q=w.MULTIVIEW;w.MULTIVIEW=null!==g.activeCamera.outputRenderTarget&&g.activeCamera.outputRenderTarget.getViewCount()>1,w.MULTIVIEW!=q&&w.markAsUnprocessed()}}function s(g,w,q){const R=w.ORDER_INDEPENDENT_TRANSPARENCY,o=w.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;w.ORDER_INDEPENDENT_TRANSPARENCY=g.useOrderIndependentTransparency&&q,w.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!g.getEngine().getCaps().textureFloatLinearFiltering,R===w.ORDER_INDEPENDENT_TRANSPARENCY&&o===w.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||w.markAsUnprocessed()}function h(g,w,q){const R=w.PREPASS;if(!w._arePrePassDirty)return;const o=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(g.prePassRenderer&&g.prePassRenderer.enabled&&q){w.PREPASS=!0,w.SCENE_MRT_COUNT=g.prePassRenderer.mrtCount,w.PREPASS_NORMAL_WORLDSPACE=g.prePassRenderer.generateNormalsInWorldSpace,w.PREPASS_COLOR=!0,w.PREPASS_COLOR_INDEX=0;for(let q=0;q<o.length;q++){const R=g.prePassRenderer.getIndex(o[q].type);-1!==R?(w[o[q].define]=!0,w[o[q].index]=R):w[o[q].define]=!1}}else{w.PREPASS=!1;for(let g=0;g<o.length;g++)w[o[g].define]=!1}w.PREPASS!=R&&(w.markAsUnprocessed(),w.markAsImageProcessingDirty())}function v(g,w,q,R){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6];o&&o.push("Light"+g),r||(w.push("vLightData"+g,"vLightDiffuse"+g,"vLightSpecular"+g,"vLightDirection"+g,"vLightWidth"+g,"vLightHeight"+g,"vLightFalloff"+g,"vLightGround"+g,"lightMatrix"+g,"shadowsInfo"+g,"depthValues"+g),q.push("shadowTexture"+g),q.push("depthTexture"+g),w.push("viewFrustumZ"+g,"cascadeBlendFactor"+g,"lightSizeUVCorrection"+g,"depthCorrection"+g,"penumbraDarkness"+g,"frustumLengths"+g),R&&(q.push("projectionLightTexture"+g),w.push("textureProjectionMatrix"+g)),S&&q.push("iesLightTexture"+g))}function b(g,w,q){let R,o,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(g.uniformsNames){const S=g;R=S.uniformsNames,o=S.uniformBuffersNames,w=S.samplers,q=S.defines,r=S.maxSimultaneousLights||0}else R=g,w||(w=[]);for(let S=0;S<r&&q["LIGHT"+S];S++)v(S,R,w,q["PROJECTEDLIGHTTEXTURE"+S],o,!1,q["IESLIGHTTEXTURE"+S]);q.NUM_MORPH_INFLUENCERS&&(R.push("morphTargetInfluences"),R.push("morphTargetCount")),q.BAKED_VERTEX_ANIMATION_TEXTURE&&(R.push("bakedVertexAnimationSettings"),R.push("bakedVertexAnimationTextureSizeInverted"),R.push("bakedVertexAnimationTime"),w.push("bakedVertexAnimationTexture"))}},11466:(g,w,q)=>{q.d(w,{b:()=>r});var R=q(11180),o=q(11469);class r extends o.e{constructor(g,w){let q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(g,w,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new R.Matrix,this._storeEffectOnSubMeshes=q}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(g,w){return!!g&&(!this._storeEffectOnSubMeshes||(!g.wi||0===g.wi.length||this.isReadyForSubMesh(g,g.wi[0],w)))}_isReadyForSubMesh(g){const w=g.materialDefines;return!(this.checkReadyOnEveryCall||!g.effect||!w||w._renderId!==this.Ng().getRenderId())}bindOnlyWorldMatrix(g){this._activeEffect.setMatrix("world",g)}bindOnlyNormalMatrix(g){this._activeEffect.setMatrix("normalMatrix",g)}bind(g,w){w&&this.bindForSubMesh(g,w,w.wi[0])}_afterBind(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,q=arguments.length>2?arguments[2]:void 0;super._afterBind(g,w,q),this.Ng()._cachedEffect=w,q?q._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(g,w,q){let R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return q._drawWrapper._forceRebindOnNextCall||g.isCachedMaterialInvalid(this,w,R)}dispose(g,w,q){this._activeEffect=void 0,super.dispose(g,w,q)}}},11494:(g,w,q)=>{q.d(w,{b:()=>i,f:()=>T});var R=q(11161),o=q(11180),r=q(11170);class S{static extractMinAndMaxIndexed(g,w,q,R,o,r){for(let S=q;S<q+R;S++){const q=3*w[S],R=g[q],i=g[q+1],T=g[q+2];o.minimizeInPlaceFromFloats(R,i,T),r.maximizeInPlaceFromFloats(R,i,T)}}static extractMinAndMax(g,w,q,R,o,r){for(let S=w,i=w*R;S<w+q;S++,i+=R){const w=g[i],q=g[i+1],R=g[i+2];o.minimizeInPlaceFromFloats(w,q,R),r.maximizeInPlaceFromFloats(w,q,R)}}}function i(g,w,q,R){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const i=new o.ew(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),T=new o.ew(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return S.extractMinAndMaxIndexed(g,w,q,R,i,T),r&&(i.x-=i.x*r.x+r.y,i.y-=i.y*r.x+r.y,i.z-=i.z*r.x+r.y,T.x+=T.x*r.x+r.y,T.y+=T.y*r.x+r.y,T.z+=T.z*r.x+r.y),{minimum:i,maximum:T}}function T(g,w,q){let R=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4?arguments[4]:void 0;const i=new o.ew(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),T=new o.ew(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return r||(r=3),S.extractMinAndMax(g,w,q,r,i,T),R&&(i.x-=i.x*R.x+R.y,i.y-=i.y*R.x+R.y,i.z-=i.z*R.x+R.y,T.x+=T.x*R.x+R.y,T.y+=T.y*R.x+R.y,T.z+=T.z*R.x+R.y),{minimum:i,maximum:T}}(0,R.e)([r.e.filter((function(){for(var g=arguments.length,w=new Array(g),q=0;q<g;q++)w[q]=arguments[q];let[R,o]=w;return!Array.isArray(R)&&!Array.isArray(o)}))],S,"extractMinAndMaxIndexed",null),(0,R.e)([r.e.filter((function(){for(var g=arguments.length,w=new Array(g),q=0;q<g;q++)w[q]=arguments[q];let[R]=w;return!Array.isArray(R)}))],S,"extractMinAndMax",null)},11471:(g,w,q)=>{q.d(w,{b:()=>T});var R=q(11250),o=q(11474),r=q(11480),S=q(11494),i=q(11284);class T{get materialDefines(){var g;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(g=this._getDrawWrapper())||void 0===g?void 0:g.defines}set materialDefines(g){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=g}_getDrawWrapper(g){let w=arguments.length>1&&void 0!==arguments[1]&&arguments[1];g=g??this._engine.currentRenderPassId;let q=this._drawWrappers[g];return!q&&w&&(this._drawWrappers[g]=q=new i.e(this._mesh.Ng().getEngine())),q}_removeDrawWrapper(g){let w=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var q;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(q=this._drawWrappers[g])||void 0===q||q.dispose(w));this._drawWrappers[g]=void 0}get effect(){var g;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(g=this._getDrawWrapper())||void 0===g?void 0:g.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(g){this._mainDrawWrapperOverride=g}setEffect(g){let w=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,q=arguments.length>2?arguments[2]:void 0,R=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=this._drawWrapper;o.setEffect(g,w,R),void 0!==q&&(o.materialContext=q),g||(o.defines=null,o.materialContext=void 0)}resetDrawCache(g){let w=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==g)return void this._removeDrawWrapper(g,!0,w);for(const g of this._drawWrappers)null===g||void 0===g||g.dispose(w)}this._drawWrappers=[]}static AddToMesh(g,w,q,R,o,r,S){return new T(g,w,q,R,o,r,S,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(g,w,q,R,o,r,S){let i=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],T=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=g,this.verticesStart=w,this.verticesCount=q,this.indexStart=R,this.indexCount=o,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=r,this._renderingMesh=S||r,T&&r.wi.push(this),this._engine=this._mesh.Ng().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=r.wi.length-1,i&&(this.refreshBoundingInfo(),r.ii(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(g){return this._boundingInfo=g,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const g=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return g||this._renderingMesh}bg(){let g=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const w=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!w)return g&&this._mesh.Ng()._hasDefaultMaterial?this._mesh.Ng().defaultMaterial:null;if(this._isMultiMaterial(w)){const g=w.getSubMaterial(this.materialIndex);return this._currentMaterial!==g&&(this._currentMaterial=g,this.resetDrawCache()),g}return w}_isMultiMaterial(g){return void 0!==g.getSubMaterial}refreshBoundingInfo(){let g=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Ti)return this;if(g||(g=this._renderingMesh.getVerticesData(R.h.PositionKind)),!g)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const w=this._renderingMesh.zi();let q;if(0===this.indexStart&&this.indexCount===w.length){const g=this._renderingMesh.getBoundingInfo();q={minimum:g.minimum.clone(),maximum:g.maximum.clone()}}else q=(0,S.b)(g,w,this.indexStart,this.indexCount,this._renderingMesh.Ti.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(q.minimum,q.maximum):this._boundingInfo=new r.d(q.minimum,q.maximum),this}_checkCollision(g){return this.getBoundingInfo()._checkCollision(g)}updateBoundingInfo(g){let w=this.getBoundingInfo();return w||(this.refreshBoundingInfo(),w=this.getBoundingInfo()),w&&w.update(g),this}isInFrustum(g){const w=this.getBoundingInfo();return!!w&&w.isInFrustum(g,this._mesh.rm)}isCompletelyInFrustum(g){const w=this.getBoundingInfo();return!!w&&w.isCompletelyInFrustum(g)}render(g){return this._renderingMesh.render(this,g,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(g,w){if(!this._linesIndexBuffer){const q=6*Math.floor(this.indexCount/3),R=this.verticesStart+this.verticesCount>65535?new Uint32Array(q):new Uint16Array(q);let o=0;if(0===g.length)for(let g=this.indexStart;g<this.indexStart+this.indexCount;g+=3)R[o++]=g,R[o++]=g+1,R[o++]=g+1,R[o++]=g+2,R[o++]=g+2,R[o++]=g;else for(let w=this.indexStart;w<this.indexStart+this.indexCount;w+=3)R[o++]=g[w],R[o++]=g[w+1],R[o++]=g[w+1],R[o++]=g[w+2],R[o++]=g[w+2],R[o++]=g[w];this._linesIndexBuffer=w.createIndexBuffer(R),this._linesIndexCount=R.length}return this._linesIndexBuffer}canIntersects(g){const w=this.getBoundingInfo();return!!w&&g.intersectsBox(w.boundingBox)}intersects(g,w,q,R,o){const r=this.bg();if(!r)return null;let S=3,i=!1;switch(r.fillMode){case 3:case 5:case 6:case 8:return null;case 7:S=1,i=!0}return 4===r.fillMode?q.length?this._intersectLines(g,w,q,this._mesh.intersectionThreshold,R):this._intersectUnIndexedLines(g,w,q,this._mesh.intersectionThreshold,R):!q.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(g,w,q,R,o):this._intersectTriangles(g,w,q,S,i,R,o)}_intersectLines(g,w,q,R,r){let S=null;for(let i=this.indexStart;i<this.indexStart+this.indexCount;i+=2){const T=w[q[i]],z=w[q[i+1]],t=g.intersectionSegment(T,z,R);if(!(t<0)&&((r||!S||t<S.distance)&&(S=new o.e(null,null,t),S.faceId=i/2,r)))break}return S}_intersectUnIndexedLines(g,w,q,R,r){let S=null;for(let i=this.verticesStart;i<this.verticesStart+this.verticesCount;i+=2){const q=w[i],T=w[i+1],z=g.intersectionSegment(q,T,R);if(!(z<0)&&((r||!S||z<S.distance)&&(S=new o.e(null,null,z),S.faceId=i/2,r)))break}return S}_intersectTriangles(g,w,q,R,o,r,S){let i=null,T=-1;for(let z=this.indexStart;z<this.indexStart+this.indexCount-(3-R);z+=R){T++;const R=q[z],t=q[z+1],m=q[z+2];if(o&&4294967295===m){z+=2;continue}const e=w[R],y=w[t],L=w[m];if(!e||!y||!L)continue;if(S&&!S(e,y,L,g,R,t,m))continue;const A=g.intersectsTriangle(e,y,L);if(A){if(A.distance<0)continue;if((r||!i||A.distance<i.distance)&&(i=A,i.faceId=T,r))break}}return i}_intersectUnIndexedTriangles(g,w,q,R,o){let r=null;for(let S=this.verticesStart;S<this.verticesStart+this.verticesCount;S+=3){const q=w[S],i=w[S+1],T=w[S+2];if(o&&!o(q,i,T,g,-1,-1,-1))continue;const z=g.intersectsTriangle(q,i,T);if(z){if(z.distance<0)continue;if((R||!r||z.distance<r.distance)&&(r=z,r.faceId=S/3,R))break}}return r}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(g,w){const q=new T(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,g,w,!1);if(!this.IsGlobal){const g=this.getBoundingInfo();if(!g)return q;q._boundingInfo=new r.d(g.minimum,g.maximum)}return q}dispose(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.Ng().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const w=this._mesh.wi.indexOf(this);this._mesh.wi.splice(w,1),this.resetDrawCache(void 0,g)}getClassName(){return"SubMesh"}static CreateFromIndices(g,w,q,R,o){let r=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],S=Number.MAX_VALUE,i=-Number.MAX_VALUE;const z=(o||R).zi();for(let T=w;T<w+q;T++){const g=z[T];g<S&&(S=g),g>i&&(i=g)}return new T(g,S,i-S+1,w,q,R,o,r)}}}}]);