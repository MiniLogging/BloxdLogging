"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[24],{11439:(q,S,b)=>{b.d(S,{b:()=>z});class z{constructor(q,S,b){this.bu=q,this.bv=S,this.distance=b,this.faceId=0,this.subMeshId=0}}},11448:(q,S,b)=>{b.d(S,{c:()=>U});var z=b(11118),C=b(11103),v=b(11109);class U{constructor(q,S,b){this.vectors=(0,z.e)(8,C.yS.Zero),this.center=C.yS.Zero(),this.centerWorld=C.yS.Zero(),this.extendSize=C.yS.Zero(),this.extendSizeWorld=C.yS.Zero(),this.directions=(0,z.e)(3,C.yS.Zero),this.vectorsWorld=(0,z.e)(8,C.yS.Zero),this.minimumWorld=C.yS.Zero(),this.maximumWorld=C.yS.Zero(),this.minimum=C.yS.Zero(),this.maximum=C.yS.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(q,S,b)}reConstruct(q,S,b){const z=q.x,v=q.y,U=q.z,g=S.x,r=S.y,I=S.z,V=this.vectors;this.minimum.Bb(z,v,U),this.maximum.Bb(g,r,I),V[0].Bb(z,v,U),V[1].Bb(g,r,I),V[2].Bb(g,v,U),V[3].Bb(z,r,U),V[4].Bb(z,v,I),V[5].Bb(g,r,U),V[6].Bb(z,r,I),V[7].Bb(g,v,I),S.addToRef(q,this.center).scaleInPlace(.5),S.subtractToRef(q,this.extendSize).scaleInPlace(.5),this._worldMatrix=b||C.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(q){const S=U._TmpVector3,b=this.maximum.subtractToRef(this.minimum,S[0]),z=b.length();b.normalizeFromLength(z);const C=z*q,v=b.scaleInPlace(.5*C),g=this.center.subtractToRef(v,S[1]),r=this.center.addToRef(v,S[2]);return this.reConstruct(g,r,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(q){const S=this.minimumWorld,b=this.maximumWorld,z=this.directions,v=this.vectorsWorld,U=this.vectors;if(q.isIdentity()){S.v(this.minimum),b.v(this.maximum);for(let q=0;q<8;++q)v[q].v(U[q]);this.extendSizeWorld.v(this.extendSize),this.centerWorld.v(this.center)}else{S.fb(Number.MAX_VALUE),b.fb(-Number.MAX_VALUE);for(let z=0;z<8;++z){const g=v[z];C.yS.TransformCoordinatesToRef(U[z],q,g),S.minimizeInPlace(g),b.maximizeInPlace(g)}b.subtractToRef(S,this.extendSizeWorld).scaleInPlace(.5),b.addToRef(S,this.centerWorld).scaleInPlace(.5)}C.yS.FromArrayToRef(q.m,0,z[0]),C.yS.FromArrayToRef(q.m,4,z[1]),C.yS.FromArrayToRef(q.m,8,z[2]),this._worldMatrix=q}isInFrustum(q){return U.IsInFrustum(this.vectorsWorld,q)}isCompletelyInFrustum(q){return U.IsCompletelyInFrustum(this.vectorsWorld,q)}intersectsPoint(q){const S=this.minimumWorld,b=this.maximumWorld,z=S.x,C=S.y,U=S.z,g=b.x,r=b.y,I=b.z,V=q.x,l=q.y,y=q.z,R=-v.d;return!(g-V<R||R>V-z)&&(!(r-l<R||R>l-C)&&!(I-y<R||R>y-U))}intersectsSphere(q){return U.IntersectsSphere(this.minimumWorld,this.maximumWorld,q.centerWorld,q.radiusWorld)}intersectsMinMax(q,S){const b=this.minimumWorld,z=this.maximumWorld,C=b.x,v=b.y,U=b.z,g=z.x,r=z.y,I=z.z,V=q.x,l=q.y,y=q.z,R=S.x,G=S.y,Z=S.z;return!(g<V||C>R)&&(!(r<l||v>G)&&!(I<y||U>Z))}dispose(){var q,S;null===(q=this._drawWrapperFront)||void 0===q||q.dispose(),null===(S=this._drawWrapperBack)||void 0===S||S.dispose()}static Intersects(q,S){return q.intersectsMinMax(S.minimumWorld,S.maximumWorld)}static IntersectsSphere(q,S,b,z){const v=U._TmpVector3[0];C.yS.ClampToRef(b,q,S,v);return C.yS.DistanceSquared(b,v)<=z*z}static IsCompletelyInFrustum(q,S){for(let b=0;b<6;++b){const z=S[b];for(let S=0;S<8;++S)if(z.dotCoordinate(q[S])<0)return!1}return!0}static IsInFrustum(q,S){for(let b=0;b<6;++b){let z=!0;const C=S[b];for(let S=0;S<8;++S)if(C.dotCoordinate(q[S])>=0){z=!1;break}if(z)return!1}return!0}}U._TmpVector3=(0,z.e)(3,C.yS.Zero)},11446:(q,S,b)=>{b.d(S,{c:()=>l});var z=b(11118),C=b(11103),v=b(11448),U=b(11457);const g={min:0,max:0},r={min:0,max:0},I=(q,S,b)=>{const z=C.yS.Dot(S.centerWorld,q),v=Math.abs(C.yS.Dot(S.directions[0],q))*S.extendSize.x+Math.abs(C.yS.Dot(S.directions[1],q))*S.extendSize.y+Math.abs(C.yS.Dot(S.directions[2],q))*S.extendSize.z;b.min=z-v,b.max=z+v},V=(q,S,b)=>(I(q,S,g),I(q,b,r),!(g.min>r.max||r.min>g.max));class l{constructor(q,S,b){this._isLocked=!1,this.boundingBox=new v.c(q,S,b),this.boundingSphere=new U.d(q,S,b)}reConstruct(q,S,b){this.boundingBox.reConstruct(q,S,b),this.boundingSphere.reConstruct(q,S,b)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(q){this._isLocked=q}update(q){this._isLocked||(this.boundingBox._update(q),this.boundingSphere._update(q))}centerOn(q,S){const b=l._TmpVector3[0].v(q).Ql(S),z=l._TmpVector3[1].v(q).addInPlace(S);return this.boundingBox.reConstruct(b,z,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(b,z,this.boundingBox.getWorldMatrix()),this}encapsulate(q){const S=C.yS.Minimize(this.minimum,q),b=C.yS.Maximize(this.maximum,q);return this.reConstruct(S,b,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(q){const S=C.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(S);const b=C.TmpVectors.yS[0];return C.yS.TransformCoordinatesToRef(q.boundingBox.minimumWorld,S,b),this.encapsulate(b),C.yS.TransformCoordinatesToRef(q.boundingBox.maximumWorld,S,b),this.encapsulate(b),this}scale(q){return this.boundingBox.scale(q),this.boundingSphere.scale(q),this}isInFrustum(q){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===S||3===S)&&this.boundingSphere.isCenterInFrustum(q))return!0;if(!this.boundingSphere.isInFrustum(q))return!1;return!(1!==S&&3!==S)||this.boundingBox.isInFrustum(q)}get diagonalLength(){const q=this.boundingBox;return q.maximumWorld.subtractToRef(q.minimumWorld,l._TmpVector3[0]).length()}isCompletelyInFrustum(q){return this.boundingBox.isCompletelyInFrustum(q)}_checkCollision(q){return q._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(q){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(q)&&!!this.boundingBox.intersectsPoint(q))}intersects(q,S){if(!U.d.Intersects(this.boundingSphere,q.boundingSphere))return!1;if(!v.c.Intersects(this.boundingBox,q.boundingBox))return!1;if(!S)return!0;const b=this.boundingBox,z=q.boundingBox;return!!V(b.directions[0],b,z)&&(!!V(b.directions[1],b,z)&&(!!V(b.directions[2],b,z)&&(!!V(z.directions[0],b,z)&&(!!V(z.directions[1],b,z)&&(!!V(z.directions[2],b,z)&&(!!V(C.yS.Cross(b.directions[0],z.directions[0]),b,z)&&(!!V(C.yS.Cross(b.directions[0],z.directions[1]),b,z)&&(!!V(C.yS.Cross(b.directions[0],z.directions[2]),b,z)&&(!!V(C.yS.Cross(b.directions[1],z.directions[0]),b,z)&&(!!V(C.yS.Cross(b.directions[1],z.directions[1]),b,z)&&(!!V(C.yS.Cross(b.directions[1],z.directions[2]),b,z)&&(!!V(C.yS.Cross(b.directions[2],z.directions[0]),b,z)&&(!!V(C.yS.Cross(b.directions[2],z.directions[1]),b,z)&&!!V(C.yS.Cross(b.directions[2],z.directions[2]),b,z))))))))))))))}}l._TmpVector3=(0,z.e)(2,C.yS.Zero)},11457:(q,S,b)=>{b.d(S,{d:()=>v});var z=b(11118),C=b(11103);class v{constructor(q,S,b){this.center=C.yS.Zero(),this.centerWorld=C.yS.Zero(),this.minimum=C.yS.Zero(),this.maximum=C.yS.Zero(),this.reConstruct(q,S,b)}reConstruct(q,S,b){this.minimum.v(q),this.maximum.v(S);const z=C.yS.Distance(q,S);S.addToRef(q,this.center).scaleInPlace(.5),this.radius=.5*z,this._update(b||C.Matrix.IdentityReadOnly)}scale(q){const S=this.radius*q,b=v._TmpVector3,z=b[0].fb(S),C=this.center.subtractToRef(z,b[1]),U=this.center.addToRef(z,b[2]);return this.reConstruct(C,U,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(q){if(q.isIdentity())this.centerWorld.v(this.center),this.radiusWorld=this.radius;else{C.yS.TransformCoordinatesToRef(this.center,q,this.centerWorld);const S=v._TmpVector3[0];C.yS.TransformNormalFromFloatsToRef(1,1,1,q,S),this.radiusWorld=Math.max(Math.abs(S.x),Math.abs(S.y),Math.abs(S.z))*this.radius}}isInFrustum(q){const S=this.centerWorld,b=this.radiusWorld;for(let z=0;z<6;z++)if(q[z].dotCoordinate(S)<=-b)return!1;return!0}isCenterInFrustum(q){const S=this.centerWorld;for(let b=0;b<6;b++)if(q[b].dotCoordinate(S)<0)return!1;return!0}intersectsPoint(q){const S=C.yS.DistanceSquared(this.centerWorld,q);return!(this.radiusWorld*this.radiusWorld<S)}static Intersects(q,S){const b=C.yS.DistanceSquared(q.centerWorld,S.centerWorld),z=q.radiusWorld+S.radiusWorld;return!(z*z<b)}static CreateFromCenterAndRadius(q,S,b){this._TmpVector3[0].v(q),this._TmpVector3[1].Bb(0,0,S),this._TmpVector3[2].v(q),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Ql(this._TmpVector3[1]);const z=new v(this._TmpVector3[0],this._TmpVector3[2]);return z._worldMatrix=b||C.Matrix.Identity(),z}}v._TmpVector3=(0,z.e)(3,C.yS.Zero)},11476:(q,S,b)=>{function z(q){-1===q.indexOf("vClipPlane")&&q.push("vClipPlane"),-1===q.indexOf("vClipPlane2")&&q.push("vClipPlane2"),-1===q.indexOf("vClipPlane3")&&q.push("vClipPlane3"),-1===q.indexOf("vClipPlane4")&&q.push("vClipPlane4"),-1===q.indexOf("vClipPlane5")&&q.push("vClipPlane5"),-1===q.indexOf("vClipPlane6")&&q.push("vClipPlane6")}function C(q,S,b){const z=!!(q.clipPlane??S.clipPlane),C=!!(q.clipPlane2??S.clipPlane2),v=!!(q.clipPlane3??S.clipPlane3),U=!!(q.clipPlane4??S.clipPlane4),g=!!(q.clipPlane5??S.clipPlane5),r=!!(q.clipPlane6??S.clipPlane6);z&&b.push("#define CLIPPLANE"),C&&b.push("#define CLIPPLANE2"),v&&b.push("#define CLIPPLANE3"),U&&b.push("#define CLIPPLANE4"),g&&b.push("#define CLIPPLANE5"),r&&b.push("#define CLIPPLANE6")}function v(q,S,b){let z=!1;const C=!!(q.clipPlane??S.clipPlane),v=!!(q.clipPlane2??S.clipPlane2),U=!!(q.clipPlane3??S.clipPlane3),g=!!(q.clipPlane4??S.clipPlane4),r=!!(q.clipPlane5??S.clipPlane5),I=!!(q.clipPlane6??S.clipPlane6);return b.CLIPPLANE!==C&&(b.CLIPPLANE=C,z=!0),b.CLIPPLANE2!==v&&(b.CLIPPLANE2=v,z=!0),b.CLIPPLANE3!==U&&(b.CLIPPLANE3=U,z=!0),b.CLIPPLANE4!==g&&(b.CLIPPLANE4=g,z=!0),b.CLIPPLANE5!==r&&(b.CLIPPLANE5=r,z=!0),b.CLIPPLANE6!==I&&(b.CLIPPLANE6=I,z=!0),z}function U(q,S,b){let z=S.clipPlane??b.clipPlane;g(q,"vClipPlane",z),z=S.clipPlane2??b.clipPlane2,g(q,"vClipPlane2",z),z=S.clipPlane3??b.clipPlane3,g(q,"vClipPlane3",z),z=S.clipPlane4??b.clipPlane4,g(q,"vClipPlane4",z),z=S.clipPlane5??b.clipPlane5,g(q,"vClipPlane5",z),z=S.clipPlane6??b.clipPlane6,g(q,"vClipPlane6",z)}function g(q,S,b){b&&q.setFloat4(S,b.normal.x,b.normal.y,b.normal.z,b.d)}b.d(S,{d:()=>z,f:()=>U,h:()=>v,k:()=>C})},11412:(q,S,b)=>{b.d(S,{b:()=>z});class z{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(q,S){this._defines[q]||(q<this._currentRank&&(this._currentRank=q),q>this._maxRank&&(this._maxRank=q),this._defines[q]=new Array),this._defines[q].push(S)}addCPUSkinningFallback(q,S){this._mesh=S,q<this._currentRank&&(this._currentRank=q),q>this._maxRank&&(this._maxRank=q)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(q,S){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,q=q.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),S._bonesComputationForcedToCPU=!0;const b=this._mesh.Tq();for(let q=0;q<b.meshes.length;q++){const z=b.meshes[q];if(z.material){if(z.computeBonesUsingShaders&&0!==z.numBoneInfluencers)if(z.material.getEffect()===S)z.computeBonesUsingShaders=!1;else if(z.Gb)for(const q of z.Gb){if(q.effect===S){z.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&z.computeBonesUsingShaders&&z.numBoneInfluencers>0&&(z.computeBonesUsingShaders=!1)}}else{const S=this._defines[this._currentRank];if(S)for(let b=0;b<S.length;b++)q=q.replace("#define "+S[b],"");this._currentRank++}return q}}},11423:(q,S,b)=>{b.d(S,{c:()=>H});var z=b(11081),C=b(11090),v=b(10921),U=b(10929),g=b(10975),r=b(11432),I=b(11366),V=b(10943),l=b(11153),y=b(11220),R=b(11137);class G{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(q){this._func=q}get funcRef(){return this._funcRef}set funcRef(q){this._funcRef=q}get funcMask(){return this._funcMask}set funcMask(q){this._funcMask=q}get opStencilFail(){return this._opStencilFail}set opStencilFail(q){this._opStencilFail=q}get opDepthFail(){return this._opDepthFail}set opDepthFail(q){this._opDepthFail=q}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(q){this._opStencilDepthPass=q}get mask(){return this._mask}set mask(q){this._mask=q}get enabled(){return this._enabled}set enabled(q){this._enabled=q}getClassName(){return"MaterialStencilState"}copyTo(q){R.b.Clone((()=>q),this)}serialize(){return R.b.Serialize(this)}parse(q,S,b){R.b.Parse((()=>this),q,S,b)}}(0,z.e)([(0,C.J)()],G.prototype,"func",null),(0,z.e)([(0,C.J)()],G.prototype,"funcRef",null),(0,z.e)([(0,C.J)()],G.prototype,"funcMask",null),(0,z.e)([(0,C.J)()],G.prototype,"opStencilFail",null),(0,z.e)([(0,C.J)()],G.prototype,"opDepthFail",null),(0,z.e)([(0,C.J)()],G.prototype,"opStencilDepthPass",null),(0,z.e)([(0,C.J)()],G.prototype,"mask",null),(0,z.e)([(0,C.J)()],G.prototype,"enabled",null);var Z=b(11468);class H{get _supportGlowLayer(){return!1}set _glowModeEnabled(q){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(q){if(this._alpha===q)return;const S=this._alpha;this._alpha=q,1!==S&&1!==q||this.gV(H.MiscDirtyFlag+H.PrePassDirtyFlag)}get alpha(){return this._alpha}set Tb(q){this._backFaceCulling!==q&&(this._backFaceCulling=q,this.gV(H.TextureDirtyFlag))}get Tb(){return this._backFaceCulling}set cullBackFaces(q){this._cullBackFaces!==q&&(this._cullBackFaces=q,this.gV(H.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(q){this._blockDirtyMechanism!==q&&(this._blockDirtyMechanism=q,q||this.Cy())}atomicMaterialsUpdate(q){this.blockDirtyMechanism=!0;try{q(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(q){this._onDisposeObserver&&this.gb.remove(this._onDisposeObserver),this._onDisposeObserver=this.gb.add(q)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new U.d),this._onBindObservable}set onBind(q){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(q)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new U.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new U.d),this._onEffectCreatedObservable}set alphaMode(q){this._alphaMode!==q&&(this._alphaMode=q,this.gV(H.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(q){this._needDepthPrePass!==q&&(this._needDepthPrePass=q,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(q){this._fogEnabled!==q&&(this._fogEnabled=q,this.gV(H.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case H.WireFrameFillMode:case H.LineListDrawMode:case H.LineLoopDrawMode:case H.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(q){this.fillMode=q?H.WireFrameFillMode:H.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case H.PointFillMode:case H.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(q){this.fillMode=q?H.PointFillMode:H.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(q){this._fillMode!==q&&(this._fillMode=q,this.gV(H.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(q){const S=this.Tq().getEngine().getCaps().fragmentDepthSupported;q&&!S&&V.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=q&&S,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(q){this._drawWrapper=q}constructor(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.gb=new U.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new G,this._useUBO=!1,this._fillMode=H.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=q;const C=S||g.b.LastCreatedScene;C&&(this._scene=C,this._dirtyCallbacks={},this._forceGLSL=z,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=q||v.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new y.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new I.d(this._scene.getEngine(),void 0,void 0,q),this._useUBO=this.Tq().getEngine().supportsUniformBuffers,this._createUniformBuffer(),b||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),H.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var q;const S=this.Tq().getEngine();null===(q=this._uniformBuffer)||void 0===q||q.dispose(),S.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new I.d(S,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new I.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(q){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.Cy(),this.checkReadyOnlyOnce=!0}unfreeze(){this.Cy(),this.checkReadyOnlyOnce=!1}isReady(q,S){return!0}isReadyForSubMesh(q,S,b){const z=S.materialDefines;return!!z&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=z,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}Tq(){return this._scene}_getEffectiveOrientation(q){return null!==this.sideOrientation?this.sideOrientation:q.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(q){this._transparencyMode!==q&&(this._transparencyMode=q,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===H.MATERIAL_ALPHABLEND||this._transparencyMode===H.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===H.MATERIAL_ALPHATEST||this._transparencyMode===H.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===H.MATERIAL_OPAQUE||this._transparencyMode===H.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(q){return this._hasTransparencyMode?this._transparencyModeIsBlend:q.visibility<1||!this._disableAlphaBlending&&(q.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(q){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(q)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}Cy(){let q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const S=this.Tq().meshes;for(const b of S)if(b.Gb)for(const S of b.Gb)if(S.Dq()===this)for(const b of S._drawWrappers)b&&this._materialContext===b.materialContext&&(b._wasPreviouslyReady=!1,b._wasPreviouslyUsingInstances=null,b._forceRebindOnNextCall=q);q&&this.gV(H.AllDirtyFlag)}_preBind(q){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const b=this._scene.getEngine(),z=(null==S?this.sideOrientation:S)===H.ClockWiseSideOrientation;return b.enableEffect(q||this._getDrawWrapper()),b.setState(this.Tb,this.zOffset,!1,z,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),z}bind(q,S){}buildUniformLayout(){const q=this._uniformBuffer;this._eventInfo.ubo=q,this._callbackPluginEventGeneric(8,this._eventInfo),q.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(q,S,b){const z=b._drawWrapper;this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),z._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(q){}bindView(q){this._useUBO?this._needToBindSceneUbo=!0:q.setMatrix("view",this.Tq().getViewMatrix())}bindViewProjection(q){this._useUBO?this._needToBindSceneUbo=!0:(q.setMatrix("viewProjection",this.Tq().getTransformMatrix()),q.setMatrix("projection",this.Tq().getProjectionMatrix()))}bindEyePosition(q,S){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(q,S)}_afterBind(q){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&S&&(this._needToBindSceneUbo=!1,(0,Z.q)(S,this.Tq().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=q?q.visibility:1,this._onBindObservable&&q&&this._onBindObservable.notifyObservers(q),this.disableDepthWrite){const q=this._scene.getEngine();this._cachedDepthWriteState=q.getDepthWrite(),q.setDepthWrite(!1)}if(this.disableColorWrite){const q=this._scene.getEngine();this._cachedColorWriteState=q.getColorWrite(),q.setColorWrite(!1)}if(0!==this.depthFunction){const q=this._scene.getEngine();this._cachedDepthFunctionState=q.getDepthFunction()||0,q.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(q){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=q,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(q){return null}_clonePlugins(q,S){const b={};if(this._serializePlugins(b),H._ParsePlugins(b,q,this._scene,S),this.pluginManager)for(const z of this.pluginManager._plugins){const S=q.pluginManager.getPlugin(z.name);S&&z.copyTo(S)}}getBindedMeshes(){if(this.meshMap){const q=[];for(const S in this.meshMap){const b=this.meshMap[S];b&&q.push(b)}return q}return this._scene.meshes.filter((q=>q.material===this))}forceCompilation(q,S,b,z){const C={clipPlane:!1,useInstances:!1,...b},v=this.Tq(),U=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const g=()=>{if(!this._scene||!this._scene.getEngine())return;const b=v.clipPlane;if(C.clipPlane&&(v.clipPlane=new l.e(0,0,0,1)),this._storeEffectOnSubMeshes){let b=!0,v=null;if(q.Gb){const S=new r.d(0,0,0,0,0,q,void 0,!1,!1);S.materialDefines&&(S.materialDefines._renderId=-1),this.isReadyForSubMesh(q,S,C.useInstances)||(S.effect&&S.effect.getCompilationError()&&S.effect.allFallbacksProcessed()?v=S.effect.getCompilationError():(b=!1,setTimeout(g,16)))}b&&(this.allowShaderHotSwapping=U,v&&z&&z(v),S&&S(this))}else this.isReady()?(this.allowShaderHotSwapping=U,S&&S(this)):setTimeout(g,16);C.clipPlane&&(v.clipPlane=b)};g()}async forceCompilationAsync(q,S){return await new Promise(((b,z)=>{this.forceCompilation(q,(()=>{b()}),S,(q=>{z(q)}))}))}gV(q){this.Tq().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(H._DirtyCallbackArray.length=0,q&H.ImageProcessingDirtyFlag&&H._DirtyCallbackArray.push(H._ImageProcessingDirtyCallBack),q&H.TextureDirtyFlag&&H._DirtyCallbackArray.push(H._TextureDirtyCallBack),q&H.LightDirtyFlag&&H._DirtyCallbackArray.push(H._LightsDirtyCallBack),q&H.FresnelDirtyFlag&&H._DirtyCallbackArray.push(H._FresnelDirtyCallBack),q&H.AttributesDirtyFlag&&H._DirtyCallbackArray.push(H._AttributeDirtyCallBack),q&H.MiscDirtyFlag&&H._DirtyCallbackArray.push(H._MiscDirtyCallBack),q&H.PrePassDirtyFlag&&H._DirtyCallbackArray.push(H._PrePassDirtyCallBack),H._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(H._RunDirtyCallBacks),this.Tq().resetCachedMaterial())}resetDrawCache(){const q=this.Tq().meshes;for(const S of q)if(S.Gb)for(const q of S.Gb)q.Dq()===this&&q.resetDrawCache()}_markAllSubMeshesAsDirty(q){const S=this.Tq();if(S.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const b=S.meshes;for(const z of b)if(z.Gb)for(const b of z.Gb){if((b.Dq()||(S._hasDefaultMaterial?S.defaultMaterial:null))===this)for(const S of b._drawWrappers)S&&S.defines&&S.defines.markAllAsDirty&&this._materialContext===S.materialContext&&q(S.defines)}}_markScenePrePassDirty(){if(this.Tq().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const q=this.Tq().enablePrePassRenderer();q&&q.gV()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(H._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(H._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(H._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(H._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(H._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(H._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(H._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(H._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(H._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(H._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const q=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.gb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(q)}))}}setPrePassRenderer(q){return!1}dispose(q,S,b){const z=this.Tq();if(z.stopAnimation(this),z.freeProcessedMaterials(),z.removeMaterial(this),this._eventInfo.forceDisposeTextures=S,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const q=this._parentContainer.materials.indexOf(this);q>-1&&this._parentContainer.materials.splice(q,1),this._parentContainer=null}if(!0!==b)if(this.meshMap)for(const C in this.meshMap){const q=this.meshMap[C];this._disposeMeshResources(q)}else{const q=z.meshes;for(const S of q)this._disposeMeshResources(S)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.gb.notifyObservers(this),this.gb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(q){if(!q)return;const S=q.ub,b=q._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(q.Gb&&b)for(const C of q.Gb){const q=C._drawWrappers;for(let v=0;v<q.length;v++){var z;const U=null===(z=q[v])||void 0===z?void 0:z.effect;if(!U)continue;b[v]===this&&(null===S||void 0===S||S._releaseVertexArrayObject(U),C._removeDrawWrapper(v,!0,!0))}}}else null===S||void 0===S||S._releaseVertexArrayObject(this._drawWrapper.effect);q.material!==this||q.sourceMesh||(q.material=null)}serialize(){const q=R.b.Serialize(this);return q.stencil=this.stencil.serialize(),q.uniqueId=this.uniqueId,this._serializePlugins(q),q}_serializePlugins(q){if(q.plugins={},this.pluginManager)for(const S of this.pluginManager._plugins)S.doNotSerialize||(q.plugins[S.getClassName()]=S.serialize())}static Parse(q,S,b){if(q.customType){if("BABYLON.PBRMaterial"===q.customType&&q.overloadedAlbedo&&(q.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return V.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else q.customType="BABYLON.StandardMaterial";const z=v.Tools.Instantiate(q.customType).Parse(q,S,b);return z._loadedUniqueId=q.uniqueId,z}static _ParsePlugins(q,S,b,z){if(q.plugins)for(const g in q.plugins){var C,U;const r=q.plugins[g];let I=null===(C=S.pluginManager)||void 0===C?void 0:C.getPlugin(r.name);if(!I){const q=v.Tools.Instantiate("BABYLON."+g);q&&(I=new q(S))}null===(U=I)||void 0===U||U.parse(r,b,z)}}}H.TriangleFillMode=0,H.WireFrameFillMode=1,H.PointFillMode=2,H.PointListDrawMode=3,H.LineListDrawMode=4,H.LineLoopDrawMode=5,H.LineStripDrawMode=6,H.TriangleStripDrawMode=7,H.TriangleFanDrawMode=8,H.ClockWiseSideOrientation=0,H.CounterClockWiseSideOrientation=1,H.ImageProcessingDirtyFlag=64,H.TextureDirtyFlag=1,H.LightDirtyFlag=2,H.FresnelDirtyFlag=4,H.AttributesDirtyFlag=8,H.MiscDirtyFlag=16,H.PrePassDirtyFlag=32,H.AllDirtyFlag=127,H.MATERIAL_OPAQUE=0,H.MATERIAL_ALPHATEST=1,H.MATERIAL_ALPHABLEND=2,H.MATERIAL_ALPHATESTANDBLEND=3,H.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,H.MATERIAL_NORMALBLENDMETHOD_RNM=1,H.OnEventObservable=new U.d,H._AllDirtyCallBack=q=>q.markAllAsDirty(),H._ImageProcessingDirtyCallBack=q=>q.markAsImageProcessingDirty(),H._TextureDirtyCallBack=q=>q.markAsTexturesDirty(),H._FresnelDirtyCallBack=q=>q.markAsFresnelDirty(),H._MiscDirtyCallBack=q=>q.markAsMiscDirty(),H._PrePassDirtyCallBack=q=>q.markAsPrePassDirty(),H._LightsDirtyCallBack=q=>q.markAsLightDirty(),H._AttributeDirtyCallBack=q=>q.markAsAttributesDirty(),H._FresnelAndMiscDirtyCallBack=q=>{H._FresnelDirtyCallBack(q),H._MiscDirtyCallBack(q)},H._TextureAndMiscDirtyCallBack=q=>{H._TextureDirtyCallBack(q),H._MiscDirtyCallBack(q)},H._DirtyCallbackArray=[],H._RunDirtyCallBacks=q=>{for(const S of H._DirtyCallbackArray)S(q)},(0,z.e)([(0,C.J)()],H.prototype,"id",void 0),(0,z.e)([(0,C.J)()],H.prototype,"uniqueId",void 0),(0,z.e)([(0,C.J)()],H.prototype,"name",void 0),(0,z.e)([(0,C.J)()],H.prototype,"metadata",void 0),(0,z.e)([(0,C.J)()],H.prototype,"checkReadyOnEveryCall",void 0),(0,z.e)([(0,C.J)()],H.prototype,"checkReadyOnlyOnce",void 0),(0,z.e)([(0,C.J)()],H.prototype,"state",void 0),(0,z.e)([(0,C.J)("alpha")],H.prototype,"_alpha",void 0),(0,z.e)([(0,C.J)("Tb")],H.prototype,"_backFaceCulling",void 0),(0,z.e)([(0,C.J)("cullBackFaces")],H.prototype,"_cullBackFaces",void 0),(0,z.e)([(0,C.J)()],H.prototype,"sideOrientation",void 0),(0,z.e)([(0,C.J)("alphaMode")],H.prototype,"_alphaMode",void 0),(0,z.e)([(0,C.J)()],H.prototype,"_needDepthPrePass",void 0),(0,z.e)([(0,C.J)()],H.prototype,"disableDepthWrite",void 0),(0,z.e)([(0,C.J)()],H.prototype,"disableColorWrite",void 0),(0,z.e)([(0,C.J)()],H.prototype,"forceDepthWrite",void 0),(0,z.e)([(0,C.J)()],H.prototype,"depthFunction",void 0),(0,z.e)([(0,C.J)()],H.prototype,"separateCullingPass",void 0),(0,z.e)([(0,C.J)("fogEnabled")],H.prototype,"_fogEnabled",void 0),(0,z.e)([(0,C.J)()],H.prototype,"pointSize",void 0),(0,z.e)([(0,C.J)()],H.prototype,"zOffset",void 0),(0,z.e)([(0,C.J)()],H.prototype,"zOffsetUnits",void 0),(0,z.e)([(0,C.J)()],H.prototype,"pointsCloud",null),(0,z.e)([(0,C.J)()],H.prototype,"fillMode",null),(0,z.e)([(0,C.J)()],H.prototype,"useLogarithmicDepth",null),(0,z.e)([(0,C.J)()],H.prototype,"transparencyMode",null)},11468:(q,S,b)=>{b.d(S,{A:()=>W,E:()=>T,I:()=>B,M:()=>R,O:()=>y,S:()=>i,V:()=>e,X:()=>m,Z:()=>Q,ab:()=>f,c:()=>N,db:()=>J,fb:()=>L,g:()=>l,h:()=>X,ib:()=>d,jb:()=>D,l:()=>V,nb:()=>G,o:()=>Z,q:()=>H,u:()=>k,y:()=>t});var z=b(10943),C=b(11150),v=b(10975),U=b(11407),g=b(11476);const r=C.HS.Black(),I={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function V(q,S,b){if(!q||q.LOGARITHMICDEPTH||q.indexOf&&q.indexOf("LOGARITHMICDEPTH")>=0){const q=b.activeCamera;1===q.mode&&z.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),S.setFloat("logarithmicDepthConstant",2/(Math.log(q.maxZ+1)/Math.LN2))}}function l(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]&&arguments[3];b&&q.fogEnabled&&(!S||S.applyFog)&&0!==q.fogMode&&(b.setFloat4("vFogInfos",q.fogMode,q.fogStart,q.fogEnd,q.fogDensity),z?(q.fogColor.toLinearSpaceToRef(r,q.getEngine().useExactSrgbConversions),b.setColor3("vFogColor",r)):b.setColor3("vFogColor",q.fogColor))}function y(q,S,b,z,C,v,U,g,r,V){const l=q.numMaxInfluencers||q.numInfluencers;return l<=0?0:(S.push("#define MORPHTARGETS"),q.hasPositions&&S.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),q.hasNormals&&S.push("#define MORPHTARGETTEXTURE_HASNORMALS"),q.hasTangents&&S.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),q.hasUVs&&S.push("#define MORPHTARGETTEXTURE_HASUVS"),q.hasUV2s&&S.push("#define MORPHTARGETTEXTURE_HASUV2S"),q.hasColors&&S.push("#define MORPHTARGETTEXTURE_HASCOLORS"),q.supportsPositions&&C&&S.push("#define MORPHTARGETS_POSITION"),q.supportsNormals&&v&&S.push("#define MORPHTARGETS_NORMAL"),q.supportsTangents&&U&&S.push("#define MORPHTARGETS_TANGENT"),q.supportsUVs&&g&&S.push("#define MORPHTARGETS_UV"),q.supportsUV2s&&r&&S.push("#define MORPHTARGETS_UV2"),q.supportsColors&&V&&S.push("#define MORPHTARGETS_COLOR"),S.push("#define NUM_MORPH_INFLUENCERS "+l),q.isUsingTextureForTargets&&S.push("#define MORPHTARGETS_TEXTURE"),I.NUM_MORPH_INFLUENCERS=l,I.NORMAL=v,I.TANGENT=U,I.UV=g,I.UV2=r,I.COLOR=V,R(b,z,I,C),l)}function R(q,S,b){let C=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const U=b.NUM_MORPH_INFLUENCERS;if(U>0&&v.b.LastCreatedEngine){const g=v.b.LastCreatedEngine.getCaps().maxVertexAttribs,r=S.morphTargetManager;if(null!==r&&void 0!==r&&r.isUsingTextureForTargets)return;const I=r&&r.supportsPositions&&C,V=r&&r.supportsNormals&&b.NORMAL,l=r&&r.supportsTangents&&b.TANGENT,y=r&&r.supportsUVs&&b.UV1,R=r&&r.supportsUV2s&&b.UV2,G=r&&r.supportsColors&&b.VERTEXCOLOR;for(let b=0;b<U;b++)I&&q.push("position"+b),V&&q.push("normal"+b),l&&q.push("tangent"+b),y&&q.push("uv_"+b),R&&q.push("uv2_"+b),G&&q.push("color"+b),q.length>g&&z.b.Error("Cannot add more vertex attributes for mesh "+S.name)}}function G(q){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];q.push("world0"),q.push("world1"),q.push("world2"),q.push("world3"),S&&(q.push("previousWorld0"),q.push("previousWorld1"),q.push("previousWorld2"),q.push("previousWorld3"))}function Z(q,S){const b=q.morphTargetManager;q&&b&&S.setFloatArray("morphTargetInfluences",b.influences)}function H(q,S){S.bindToEffect(q,"Scene")}function Q(q,S,b){S._needUVs=!0,S[b]=!0,q.optimizeUVAllocation&&q.getTextureMatrix().isIdentityAs3x2()?(S[b+"DIRECTUV"]=q.coordinatesIndex+1,S["MAINUV"+(q.coordinatesIndex+1)]=!0):S[b+"DIRECTUV"]=0}function k(q,S,b){const z=q.getTextureMatrix();S.Wb(b+"Matrix",z)}function W(q,S,b){b.BAKED_VERTEX_ANIMATION_TEXTURE&&b.INSTANCES&&q.push("bakedVertexAnimationSettingsInstanced")}function N(q,S,b){var z;if(S&&q&&(q.computeBonesUsingShaders&&S._bonesComputationForcedToCPU&&(q.computeBonesUsingShaders=!1),q.useBones&&q.computeBonesUsingShaders&&q.skeleton)){const C=q.skeleton;if(C.isUsingTextureForMatrices&&S.getUniformIndex("boneTextureWidth")>-1){const b=C.getTransformMatrixTexture(q);S.setTexture("boneSampler",b),S.setFloat("boneTextureWidth",4*(C.bones.length+1))}else{const v=C.getTransformMatrices(q);v&&(S.setMatrices("mBones",v),b&&q.Tq().prePassRenderer&&q.Tq().prePassRenderer.getIndex(2)&&(b.previousBones[q.uniqueId]||(b.previousBones[q.uniqueId]=v.slice()),S.setMatrices("mPreviousBones",b.previousBones[q.uniqueId]),z=v,b.previousBones[q.uniqueId].set(z)))}}}function u(q,S,b,z,C){let v=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];q._bindLight(S,b,z,C,v)}function X(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const v=Math.min(S.lightSources.length,C);for(let U=0;U<v;U++){u(S.lightSources[U],U,q,b,"boolean"===typeof z?z:z.SPECULARTERM,S.receiveShadows)}}function T(q,S,b,z){b.NUM_BONE_INFLUENCERS>0&&(z.addCPUSkinningFallback(0,S),q.push("matricesIndices"),q.push("matricesWeights"),b.NUM_BONE_INFLUENCERS>4&&(q.push("matricesIndicesExtra"),q.push("matricesWeightsExtra")))}function B(q,S){(S.INSTANCES||S.THIN_INSTANCES)&&G(q,!!S.PREPASS_VELOCITY),S.INSTANCESCOLOR&&q.push("instanceColor")}function t(q,S){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,C=0;for(let v=0;v<b&&q["LIGHT"+v];v++)v>0&&(C=z+v,S.addFallback(C,"LIGHT"+v)),q.SHADOWS||(q["SHADOW"+v]&&S.addFallback(z,"SHADOW"+v),q["SHADOWPCF"+v]&&S.addFallback(z,"SHADOWPCF"+v),q["SHADOWPCSS"+v]&&S.addFallback(z,"SHADOWPCSS"+v),q["SHADOWPOISSON"+v]&&S.addFallback(z,"SHADOWPOISSON"+v),q["SHADOWESM"+v]&&S.addFallback(z,"SHADOWESM"+v),q["SHADOWCLOSEESM"+v]&&S.addFallback(z,"SHADOWCLOSEESM"+v));return C++}function f(q,S,b,z,C,v,U){let g=arguments.length>7&&void 0!==arguments[7]&&arguments[7];U._areMiscDirty&&(U.LOGARITHMICDEPTH=b,U.POINTSIZE=z,U.FOG=C&&function(q,S){return S.fogEnabled&&q.applyFog&&0!==S.fogMode}(q,S),U.NONUNIFORMSCALING=q.nonUniformScaling,U.ALPHATEST=v,U.DECAL_AFTER_DETAIL=g)}function m(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,v=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!b._areLightsDirty)return b._needNormals;let U=0;const g={needNormals:b._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(q.lightsEnabled&&!v)for(const I of S.lightSources)if(E(q,S,I,U,b,z,g),U++,U===C)break;b.SPECULARTERM=g.specularEnabled,b.SHADOWS=g.shadowEnabled;for(let I=U;I<C;I++)void 0!==b["LIGHT"+I]&&(b["LIGHT"+I]=!1,b["HEMILIGHT"+I]=!1,b["POINTLIGHT"+I]=!1,b["DIRLIGHT"+I]=!1,b["SPOTLIGHT"+I]=!1,b["AREALIGHT"+I]=!1,b["SHADOW"+I]=!1,b["SHADOWCSM"+I]=!1,b["SHADOWCSMDEBUG"+I]=!1,b["SHADOWCSMNUM_CASCADES"+I]=!1,b["SHADOWCSMUSESHADOWMAXZ"+I]=!1,b["SHADOWCSMNOBLEND"+I]=!1,b["SHADOWCSM_RIGHTHANDED"+I]=!1,b["SHADOWPCF"+I]=!1,b["SHADOWPCSS"+I]=!1,b["SHADOWPOISSON"+I]=!1,b["SHADOWESM"+I]=!1,b["SHADOWCLOSEESM"+I]=!1,b["SHADOWCUBE"+I]=!1,b["SHADOWLOWQUALITY"+I]=!1,b["SHADOWMEDIUMQUALITY"+I]=!1);const r=q.getEngine().getCaps();return void 0===b.SHADOWFLOAT&&(g.needRebuild=!0),b.SHADOWFLOAT=g.shadowEnabled&&(r.textureFloatRender&&r.textureFloatLinearFiltering||r.textureHalfFloatRender&&r.textureHalfFloatLinearFiltering),b.LIGHTMAPEXCLUDED=g.lightmapMode,g.needRebuild&&b.rebuild(),g.needNormals}function E(q,S,b,z,C,v,g){switch(g.needNormals=!0,void 0===C["LIGHT"+z]&&(g.needRebuild=!0),C["LIGHT"+z]=!0,C["SPOTLIGHT"+z]=!1,C["HEMILIGHT"+z]=!1,C["POINTLIGHT"+z]=!1,C["DIRLIGHT"+z]=!1,C["AREALIGHT"+z]=!1,b.prepareLightSpecificDefines(C,z),C["LIGHT_FALLOFF_PHYSICAL"+z]=!1,C["LIGHT_FALLOFF_GLTF"+z]=!1,C["LIGHT_FALLOFF_STANDARD"+z]=!1,b.falloffType){case U.d.FALLOFF_GLTF:C["LIGHT_FALLOFF_GLTF"+z]=!0;break;case U.d.FALLOFF_PHYSICAL:C["LIGHT_FALLOFF_PHYSICAL"+z]=!0;break;case U.d.FALLOFF_STANDARD:C["LIGHT_FALLOFF_STANDARD"+z]=!0}if(v&&!b.eV.equalsFloats(0,0,0)&&(g.specularEnabled=!0),C["SHADOW"+z]=!1,C["SHADOWCSM"+z]=!1,C["SHADOWCSMDEBUG"+z]=!1,C["SHADOWCSMNUM_CASCADES"+z]=!1,C["SHADOWCSMUSESHADOWMAXZ"+z]=!1,C["SHADOWCSMNOBLEND"+z]=!1,C["SHADOWCSM_RIGHTHANDED"+z]=!1,C["SHADOWPCF"+z]=!1,C["SHADOWPCSS"+z]=!1,C["SHADOWPOISSON"+z]=!1,C["SHADOWESM"+z]=!1,C["SHADOWCLOSEESM"+z]=!1,C["SHADOWCUBE"+z]=!1,C["SHADOWLOWQUALITY"+z]=!1,C["SHADOWMEDIUMQUALITY"+z]=!1,S&&S.receiveShadows&&q.shadowsEnabled&&b.shadowEnabled){const S=b.getShadowGenerator(q.activeCamera)??b.getShadowGenerator();if(S){const q=S.getShadowMap();q&&q.renderList&&q.renderList.length>0&&(g.shadowEnabled=!0,S.prepareDefines(C,z))}}b.lightmapMode!=U.d.LIGHTMAP_DEFAULT?(g.lightmapMode=!0,C["LIGHTMAPEXCLUDED"+z]=!0,C["LIGHTMAPNOSPECULAR"+z]=b.lightmapMode==U.d.LIGHTMAP_SHADOWSONLY):(C["LIGHTMAPEXCLUDED"+z]=!1,C["LIGHTMAPNOSPECULAR"+z]=!1)}function e(q,S,b,z,C){let v=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],r=function(q,S){let b=!1;if(q.activeCamera){const z=S.CAMERA_ORTHOGRAPHIC?1:0,C=S.CAMERA_PERSPECTIVE?1:0,v=1===q.activeCamera.mode?1:0,U=0===q.activeCamera.mode?1:0;(z^v||C^U)&&(S.CAMERA_ORTHOGRAPHIC=1===v,S.CAMERA_PERSPECTIVE=1===U,b=!0)}return b}(q,z);!1!==v&&(r=(0,g.h)(b,q,z)),z.DEPTHPREPASS!==!S.getColorWrite()&&(z.DEPTHPREPASS=!z.DEPTHPREPASS,r=!0),z.INSTANCES!==C&&(z.INSTANCES=C,r=!0),z.THIN_INSTANCES!==U&&(z.THIN_INSTANCES=U,r=!0),r&&z.markAsUnprocessed()}function i(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]&&arguments[4],v=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],U=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!S._areAttributesDirty&&S._needNormals===S._normals&&S._needUVs===S._uvs)return!1;S._normals=S._needNormals,S._uvs=S._needUVs,S.NORMAL=S._needNormals&&q.isVerticesDataPresent("normal"),S._needNormals&&q.isVerticesDataPresent("tangent")&&(S.TANGENT=!0);for(let g=1;g<=6;++g)S["UV"+g]=!!S._needUVs&&q.isVerticesDataPresent(`uv${1===g?"":g}`);if(b){const b=q.useVertexColors&&q.isVerticesDataPresent("color");S.VERTEXCOLOR=b,S.VERTEXALPHA=q.hasVertexAlpha&&b&&v}return q.isVerticesDataPresent("instanceColor")&&(q.hasInstances||q.hasThinInstances)&&(S.INSTANCESCOLOR=!0),z&&function(q,S){if(q.useBones&&q.computeBonesUsingShaders&&q.skeleton){S.NUM_BONE_INFLUENCERS=q.numBoneInfluencers;const b=void 0!==S.BONETEXTURE;if(q.skeleton.isUsingTextureForMatrices&&b)S.BONETEXTURE=!0;else{S.BonesPerMesh=q.skeleton.bones.length+1,S.BONETEXTURE=!b&&void 0;const z=q.Tq().prePassRenderer;if(z&&z.enabled){const b=-1===z.excludedSkinnedMesh.indexOf(q);S.BONES_VELOCITY_ENABLED=b}}}else S.NUM_BONE_INFLUENCERS=0,S.BonesPerMesh=0,void 0!==S.BONETEXTURE&&(S.BONETEXTURE=!1)}(q,S),C&&function(q,S){const b=q.morphTargetManager;b?(S.MORPHTARGETS_UV=b.supportsUVs&&S.UV1,S.MORPHTARGETS_UV2=b.supportsUV2s&&S.UV2,S.MORPHTARGETS_TANGENT=b.supportsTangents&&S.TANGENT,S.MORPHTARGETS_NORMAL=b.supportsNormals&&S.NORMAL,S.MORPHTARGETS_POSITION=b.supportsPositions,S.MORPHTARGETS_COLOR=b.supportsColors,S.MORPHTARGETTEXTURE_HASUVS=b.hasUVs,S.MORPHTARGETTEXTURE_HASUV2S=b.hasUV2s,S.MORPHTARGETTEXTURE_HASTANGENTS=b.hasTangents,S.MORPHTARGETTEXTURE_HASNORMALS=b.hasNormals,S.MORPHTARGETTEXTURE_HASPOSITIONS=b.hasPositions,S.MORPHTARGETTEXTURE_HASCOLORS=b.hasColors,S.NUM_MORPH_INFLUENCERS=b.numMaxInfluencers||b.numInfluencers,S.MORPHTARGETS=S.NUM_MORPH_INFLUENCERS>0,S.MORPHTARGETS_TEXTURE=b.isUsingTextureForTargets):(S.MORPHTARGETS_UV=!1,S.MORPHTARGETS_UV2=!1,S.MORPHTARGETS_TANGENT=!1,S.MORPHTARGETS_NORMAL=!1,S.MORPHTARGETS_POSITION=!1,S.MORPHTARGETS_COLOR=!1,S.MORPHTARGETTEXTURE_HASUVS=!1,S.MORPHTARGETTEXTURE_HASUV2S=!1,S.MORPHTARGETTEXTURE_HASTANGENTS=!1,S.MORPHTARGETTEXTURE_HASNORMALS=!1,S.MORPHTARGETTEXTURE_HASPOSITIONS=!1,S.MORPHTARGETTEXTURE_HAS_COLORS=!1,S.MORPHTARGETS=!1,S.NUM_MORPH_INFLUENCERS=0)}(q,S),U&&function(q,S){const b=q.bakedVertexAnimationManager;S.BAKED_VERTEX_ANIMATION_TEXTURE=!(!b||!b.isEnabled)}(q,S),!0}function J(q,S){if(q.activeCamera){const b=S.MULTIVIEW;S.MULTIVIEW=null!==q.activeCamera.outputRenderTarget&&q.activeCamera.outputRenderTarget.getViewCount()>1,S.MULTIVIEW!=b&&S.markAsUnprocessed()}}function L(q,S,b){const z=S.ORDER_INDEPENDENT_TRANSPARENCY,C=S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;S.ORDER_INDEPENDENT_TRANSPARENCY=q.useOrderIndependentTransparency&&b,S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!q.getEngine().getCaps().textureFloatLinearFiltering,z===S.ORDER_INDEPENDENT_TRANSPARENCY&&C===S.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||S.markAsUnprocessed()}function d(q,S,b){const z=S.PREPASS;if(!S._arePrePassDirty)return;const C=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(q.prePassRenderer&&q.prePassRenderer.enabled&&b){S.PREPASS=!0,S.SCENE_MRT_COUNT=q.prePassRenderer.mrtCount,S.PREPASS_NORMAL_WORLDSPACE=q.prePassRenderer.generateNormalsInWorldSpace,S.PREPASS_COLOR=!0,S.PREPASS_COLOR_INDEX=0;for(let b=0;b<C.length;b++){const z=q.prePassRenderer.getIndex(C[b].type);-1!==z?(S[C[b].define]=!0,S[C[b].index]=z):S[C[b].define]=!1}}else{S.PREPASS=!1;for(let q=0;q<C.length;q++)S[C[q].define]=!1}S.PREPASS!=z&&(S.markAsUnprocessed(),S.markAsImageProcessingDirty())}function K(q,S,b,z){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,v=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];C&&C.push("Light"+q),v||(S.push("vLightData"+q,"vLightDiffuse"+q,"vLightSpecular"+q,"vLightDirection"+q,"vLightWidth"+q,"vLightHeight"+q,"vLightFalloff"+q,"vLightGround"+q,"lightMatrix"+q,"shadowsInfo"+q,"depthValues"+q),b.push("shadowTexture"+q),b.push("depthTexture"+q),S.push("viewFrustumZ"+q,"cascadeBlendFactor"+q,"lightSizeUVCorrection"+q,"depthCorrection"+q,"penumbraDarkness"+q,"frustumLengths"+q),z&&(b.push("projectionLightTexture"+q),S.push("textureProjectionMatrix"+q)),U&&b.push("iesLightTexture"+q))}function D(q,S,b){let z,C,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(q.uniformsNames){const U=q;z=U.uniformsNames,C=U.uniformBuffersNames,S=U.samplers,b=U.defines,v=U.maxSimultaneousLights||0}else z=q,S||(S=[]);for(let U=0;U<v&&b["LIGHT"+U];U++)K(U,z,S,b["PROJECTEDLIGHTTEXTURE"+U],C,!1,b["IESLIGHTTEXTURE"+U]);b.NUM_MORPH_INFLUENCERS&&(z.push("morphTargetInfluences"),z.push("morphTargetCount")),b.BAKED_VERTEX_ANIMATION_TEXTURE&&(z.push("bakedVertexAnimationSettings"),z.push("bakedVertexAnimationTextureSizeInverted"),z.push("bakedVertexAnimationTime"),S.push("bakedVertexAnimationTexture"))}},11416:(q,S,b)=>{b.d(S,{b:()=>v});var z=b(11103),C=b(11423);class v extends C.c{constructor(q,S){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(q,S,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new z.Matrix,this._storeEffectOnSubMeshes=b}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(q,S){return!!q&&(!this._storeEffectOnSubMeshes||(!q.Gb||0===q.Gb.length||this.isReadyForSubMesh(q,q.Gb[0],S)))}_isReadyForSubMesh(q){const S=q.materialDefines;return!(this.checkReadyOnEveryCall||!q.effect||!S||S._renderId!==this.Tq().getRenderId())}bindOnlyWorldMatrix(q){this._activeEffect.setMatrix("world",q)}bindOnlyNormalMatrix(q){this._activeEffect.setMatrix("normalMatrix",q)}bind(q,S){S&&this.bindForSubMesh(q,S,S.Gb[0])}_afterBind(q){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0;super._afterBind(q,S,b),this.Tq()._cachedEffect=S,b?b._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return b._drawWrapper._forceRebindOnNextCall||q.isCachedMaterialInvalid(this,S,z)}dispose(q,S,b){this._activeEffect=void 0,super.dispose(q,S,b)}}},11466:(q,S,b)=>{b.d(S,{c:()=>g,e:()=>r});var z=b(11081),C=b(11103),v=b(11090);class U{static extractMinAndMaxIndexed(q,S,b,z,C,v){for(let U=b;U<b+z;U++){const b=3*S[U],z=q[b],g=q[b+1],r=q[b+2];C.minimizeInPlaceFromFloats(z,g,r),v.maximizeInPlaceFromFloats(z,g,r)}}static extractMinAndMax(q,S,b,z,C,v){for(let U=S,g=S*z;U<S+b;U++,g+=z){const S=q[g],b=q[g+1],z=q[g+2];C.minimizeInPlaceFromFloats(S,b,z),v.maximizeInPlaceFromFloats(S,b,z)}}}function g(q,S,b,z){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const g=new C.yS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),r=new C.yS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return U.extractMinAndMaxIndexed(q,S,b,z,g,r),v&&(g.x-=g.x*v.x+v.y,g.y-=g.y*v.x+v.y,g.z-=g.z*v.x+v.y,r.x+=r.x*v.x+v.y,r.y+=r.y*v.x+v.y,r.z+=r.z*v.x+v.y),{minimum:g,maximum:r}}function r(q,S,b){let z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,v=arguments.length>4?arguments[4]:void 0;const g=new C.yS(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),r=new C.yS(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return v||(v=3),U.extractMinAndMax(q,S,b,v,g,r),z&&(g.x-=g.x*z.x+z.y,g.y-=g.y*z.x+z.y,g.z-=g.z*z.x+z.y,r.x+=r.x*z.x+z.y,r.y+=r.y*z.x+z.y,r.z+=r.z*z.x+z.y),{minimum:g,maximum:r}}(0,z.e)([v.h.filter((function(){for(var q=arguments.length,S=new Array(q),b=0;b<q;b++)S[b]=arguments[b];let[z,C]=S;return!Array.isArray(z)&&!Array.isArray(C)}))],U,"extractMinAndMaxIndexed",null),(0,z.e)([v.h.filter((function(){for(var q=arguments.length,S=new Array(q),b=0;b<q;b++)S[b]=arguments[b];let[z]=S;return!Array.isArray(z)}))],U,"extractMinAndMax",null)},11432:(q,S,b)=>{b.d(S,{d:()=>r});var z=b(11172),C=b(11439),v=b(11446),U=b(11466),g=b(11220);class r{get materialDefines(){var q;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(q=this._getDrawWrapper())||void 0===q?void 0:q.defines}set materialDefines(q){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=q}_getDrawWrapper(q){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];q=q??this._engine.currentRenderPassId;let b=this._drawWrappers[q];return!b&&S&&(this._drawWrappers[q]=b=new g.e(this._mesh.Tq().getEngine())),b}_removeDrawWrapper(q){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var b;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(b=this._drawWrappers[q])||void 0===b||b.dispose(S));this._drawWrappers[q]=void 0}get effect(){var q;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(q=this._getDrawWrapper())||void 0===q?void 0:q.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(q){this._mainDrawWrapperOverride=q}setEffect(q){let S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0,z=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const C=this._drawWrapper;C.setEffect(q,S,z),void 0!==b&&(C.materialContext=b),q||(C.defines=null,C.materialContext=void 0)}resetDrawCache(q){let S=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==q)return void this._removeDrawWrapper(q,!0,S);for(const q of this._drawWrappers)null===q||void 0===q||q.dispose(S)}this._drawWrappers=[]}static AddToMesh(q,S,b,z,C,v,U){return new r(q,S,b,z,C,v,U,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(q,S,b,z,C,v,U){let g=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],r=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=q,this.verticesStart=S,this.verticesCount=b,this.indexStart=z,this.indexCount=C,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=v,this._renderingMesh=U||v,r&&v.Gb.push(this),this._engine=this._mesh.Tq().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=v.Gb.length-1,g&&(this.refreshBoundingInfo(),v.Nb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(q){return this._boundingInfo=q,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const q=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return q||this._renderingMesh}Dq(){let q=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const S=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!S)return q&&this._mesh.Tq()._hasDefaultMaterial?this._mesh.Tq().defaultMaterial:null;if(this._isMultiMaterial(S)){const q=S.getSubMaterial(this.materialIndex);return this._currentMaterial!==q&&(this._currentMaterial=q,this.resetDrawCache()),q}return S}_isMultiMaterial(q){return void 0!==q.getSubMaterial}refreshBoundingInfo(){let q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.ub)return this;if(q||(q=this._renderingMesh.getVerticesData(z.f.PositionKind)),!q)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const S=this._renderingMesh.Xb();let b;if(0===this.indexStart&&this.indexCount===S.length){const q=this._renderingMesh.getBoundingInfo();b={minimum:q.minimum.clone(),maximum:q.maximum.clone()}}else b=(0,U.c)(q,S,this.indexStart,this.indexCount,this._renderingMesh.ub.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(b.minimum,b.maximum):this._boundingInfo=new v.c(b.minimum,b.maximum),this}_checkCollision(q){return this.getBoundingInfo()._checkCollision(q)}updateBoundingInfo(q){let S=this.getBoundingInfo();return S||(this.refreshBoundingInfo(),S=this.getBoundingInfo()),S&&S.update(q),this}isInFrustum(q){const S=this.getBoundingInfo();return!!S&&S.isInFrustum(q,this._mesh.il)}isCompletelyInFrustum(q){const S=this.getBoundingInfo();return!!S&&S.isCompletelyInFrustum(q)}render(q){return this._renderingMesh.render(this,q,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(q,S){if(!this._linesIndexBuffer){const b=6*Math.floor(this.indexCount/3),z=this.verticesStart+this.verticesCount>65535?new Uint32Array(b):new Uint16Array(b);let C=0;if(0===q.length)for(let q=this.indexStart;q<this.indexStart+this.indexCount;q+=3)z[C++]=q,z[C++]=q+1,z[C++]=q+1,z[C++]=q+2,z[C++]=q+2,z[C++]=q;else for(let S=this.indexStart;S<this.indexStart+this.indexCount;S+=3)z[C++]=q[S],z[C++]=q[S+1],z[C++]=q[S+1],z[C++]=q[S+2],z[C++]=q[S+2],z[C++]=q[S];this._linesIndexBuffer=S.createIndexBuffer(z),this._linesIndexCount=z.length}return this._linesIndexBuffer}canIntersects(q){const S=this.getBoundingInfo();return!!S&&q.intersectsBox(S.boundingBox)}intersects(q,S,b,z,C){const v=this.Dq();if(!v)return null;let U=3,g=!1;switch(v.fillMode){case 3:case 5:case 6:case 8:return null;case 7:U=1,g=!0}return 4===v.fillMode?b.length?this._intersectLines(q,S,b,this._mesh.intersectionThreshold,z):this._intersectUnIndexedLines(q,S,b,this._mesh.intersectionThreshold,z):!b.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(q,S,b,z,C):this._intersectTriangles(q,S,b,U,g,z,C)}_intersectLines(q,S,b,z,v){let U=null;for(let g=this.indexStart;g<this.indexStart+this.indexCount;g+=2){const r=S[b[g]],I=S[b[g+1]],V=q.intersectionSegment(r,I,z);if(!(V<0)&&((v||!U||V<U.distance)&&(U=new C.b(null,null,V),U.faceId=g/2,v)))break}return U}_intersectUnIndexedLines(q,S,b,z,v){let U=null;for(let g=this.verticesStart;g<this.verticesStart+this.verticesCount;g+=2){const b=S[g],r=S[g+1],I=q.intersectionSegment(b,r,z);if(!(I<0)&&((v||!U||I<U.distance)&&(U=new C.b(null,null,I),U.faceId=g/2,v)))break}return U}_intersectTriangles(q,S,b,z,C,v,U){let g=null,r=-1;for(let I=this.indexStart;I<this.indexStart+this.indexCount-(3-z);I+=z){r++;const z=b[I],V=b[I+1],l=b[I+2];if(C&&4294967295===l){I+=2;continue}const y=S[z],R=S[V],G=S[l];if(!y||!R||!G)continue;if(U&&!U(y,R,G,q,z,V,l))continue;const Z=q.intersectsTriangle(y,R,G);if(Z){if(Z.distance<0)continue;if((v||!g||Z.distance<g.distance)&&(g=Z,g.faceId=r,v))break}}return g}_intersectUnIndexedTriangles(q,S,b,z,C){let v=null;for(let U=this.verticesStart;U<this.verticesStart+this.verticesCount;U+=3){const b=S[U],g=S[U+1],r=S[U+2];if(C&&!C(b,g,r,q,-1,-1,-1))continue;const I=q.intersectsTriangle(b,g,r);if(I){if(I.distance<0)continue;if((z||!v||I.distance<v.distance)&&(v=I,v.faceId=U/3,z))break}}return v}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(q,S){const b=new r(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,q,S,!1);if(!this.IsGlobal){const q=this.getBoundingInfo();if(!q)return b;b._boundingInfo=new v.c(q.minimum,q.maximum)}return b}dispose(){let q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.Tq().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const S=this._mesh.Gb.indexOf(this);this._mesh.Gb.splice(S,1),this.resetDrawCache(void 0,q)}getClassName(){return"SubMesh"}static CreateFromIndices(q,S,b,z,C){let v=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],U=Number.MAX_VALUE,g=-Number.MAX_VALUE;const I=(C||z).Xb();for(let r=S;r<S+b;r++){const q=I[r];q<U&&(U=q),q>g&&(g=q)}return new r(q,U,g-U+1,S,b,z,C,v)}}}}]);