"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[24],{12931:(s,k,h)=>{h.d(k,{e:()=>A});class A{constructor(s,k,h){this.bu=s,this.bv=k,this.distance=h,this.faceId=0,this.subMeshId=0}}},12946:(s,k,h)=>{h.d(k,{b:()=>i});var A=h(12603),g=h(12590),ms=h(12598);class i{constructor(s,k,h){this.vectors=(0,A.e)(8,g.Pk.Zero),this.center=g.Pk.Zero(),this.centerWorld=g.Pk.Zero(),this.extendSize=g.Pk.Zero(),this.extendSizeWorld=g.Pk.Zero(),this.directions=(0,A.e)(3,g.Pk.Zero),this.vectorsWorld=(0,A.e)(8,g.Pk.Zero),this.minimumWorld=g.Pk.Zero(),this.maximumWorld=g.Pk.Zero(),this.minimum=g.Pk.Zero(),this.maximum=g.Pk.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(s,k,h)}reConstruct(s,k,h){const A=s.x,ms=s.y,i=s.z,K=k.x,H=k.y,O=k.z,c=this.vectors;this.minimum.cg(A,ms,i),this.maximum.cg(K,H,O),c[0].cg(A,ms,i),c[1].cg(K,H,O),c[2].cg(K,ms,i),c[3].cg(A,H,i),c[4].cg(A,ms,O),c[5].cg(K,H,i),c[6].cg(A,H,O),c[7].cg(K,ms,O),k.addToRef(s,this.center).scaleInPlace(.5),k.subtractToRef(s,this.extendSize).scaleInPlace(.5),this._worldMatrix=h||g.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(s){const k=i._TmpVector3,h=this.maximum.subtractToRef(this.minimum,k[0]),A=h.length();h.normalizeFromLength(A);const g=A*s,ms=h.scaleInPlace(.5*g),K=this.center.subtractToRef(ms,k[1]),H=this.center.addToRef(ms,k[2]);return this.reConstruct(K,H,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(s){const k=this.minimumWorld,h=this.maximumWorld,A=this.directions,ms=this.vectorsWorld,i=this.vectors;if(s.isIdentity()){k.H(this.minimum),h.H(this.maximum);for(let s=0;s<8;++s)ms[s].H(i[s]);this.extendSizeWorld.H(this.extendSize),this.centerWorld.H(this.center)}else{k.Eg(Number.MAX_VALUE),h.Eg(-Number.MAX_VALUE);for(let A=0;A<8;++A){const K=ms[A];g.Pk.TransformCoordinatesToRef(i[A],s,K),k.minimizeInPlace(K),h.maximizeInPlace(K)}h.subtractToRef(k,this.extendSizeWorld).scaleInPlace(.5),h.addToRef(k,this.centerWorld).scaleInPlace(.5)}g.Pk.FromArrayToRef(s.m,0,A[0]),g.Pk.FromArrayToRef(s.m,4,A[1]),g.Pk.FromArrayToRef(s.m,8,A[2]),this._worldMatrix=s}isInFrustum(s){return i.IsInFrustum(this.vectorsWorld,s)}isCompletelyInFrustum(s){return i.IsCompletelyInFrustum(this.vectorsWorld,s)}intersectsPoint(s){const k=this.minimumWorld,h=this.maximumWorld,A=k.x,g=k.y,i=k.z,K=h.x,H=h.y,O=h.z,c=s.x,S=s.y,a=s.z,r=-ms.c;return!(K-c<r||r>c-A)&&(!(H-S<r||r>S-g)&&!(O-a<r||r>a-i))}intersectsSphere(s){return i.IntersectsSphere(this.minimumWorld,this.maximumWorld,s.centerWorld,s.radiusWorld)}intersectsMinMax(s,k){const h=this.minimumWorld,A=this.maximumWorld,g=h.x,ms=h.y,i=h.z,K=A.x,H=A.y,O=A.z,c=s.x,S=s.y,a=s.z,r=k.x,d=k.y,E=k.z;return!(K<c||g>r)&&(!(H<S||ms>d)&&!(O<a||i>E))}dispose(){var s,k;null===(s=this._drawWrapperFront)||void 0===s||s.dispose(),null===(k=this._drawWrapperBack)||void 0===k||k.dispose()}static Intersects(s,k){return s.intersectsMinMax(k.minimumWorld,k.maximumWorld)}static IntersectsSphere(s,k,h,A){const ms=i._TmpVector3[0];g.Pk.ClampToRef(h,s,k,ms);return g.Pk.DistanceSquared(h,ms)<=A*A}static IsCompletelyInFrustum(s,k){for(let h=0;h<6;++h){const A=k[h];for(let k=0;k<8;++k)if(A.dotCoordinate(s[k])<0)return!1}return!0}static IsInFrustum(s,k){for(let h=0;h<6;++h){let A=!0;const g=k[h];for(let k=0;k<8;++k)if(g.dotCoordinate(s[k])>=0){A=!1;break}if(A)return!1}return!0}}i._TmpVector3=(0,A.e)(3,g.Pk.Zero)},12937:(s,k,h)=>{h.d(k,{c:()=>S});var A=h(12603),g=h(12590),ms=h(12946),i=h(12953);const K={min:0,max:0},H={min:0,max:0},O=(s,k,h)=>{const A=g.Pk.Dot(k.centerWorld,s),ms=Math.abs(g.Pk.Dot(k.directions[0],s))*k.extendSize.x+Math.abs(g.Pk.Dot(k.directions[1],s))*k.extendSize.y+Math.abs(g.Pk.Dot(k.directions[2],s))*k.extendSize.z;h.min=A-ms,h.max=A+ms},c=(s,k,h)=>(O(s,k,K),O(s,h,H),!(K.min>H.max||H.min>K.max));class S{constructor(s,k,h){this._isLocked=!1,this.boundingBox=new ms.b(s,k,h),this.boundingSphere=new i.e(s,k,h)}reConstruct(s,k,h){this.boundingBox.reConstruct(s,k,h),this.boundingSphere.reConstruct(s,k,h)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(s){this._isLocked=s}update(s){this._isLocked||(this.boundingBox._update(s),this.boundingSphere._update(s))}centerOn(s,k){const h=S._TmpVector3[0].H(s).ka(k),A=S._TmpVector3[1].H(s).addInPlace(k);return this.boundingBox.reConstruct(h,A,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(h,A,this.boundingBox.getWorldMatrix()),this}encapsulate(s){const k=g.Pk.Minimize(this.minimum,s),h=g.Pk.Maximize(this.maximum,s);return this.reConstruct(k,h,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(s){const k=g.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(k);const h=g.TmpVectors.Pk[0];return g.Pk.TransformCoordinatesToRef(s.boundingBox.minimumWorld,k,h),this.encapsulate(h),g.Pk.TransformCoordinatesToRef(s.boundingBox.maximumWorld,k,h),this.encapsulate(h),this}scale(s){return this.boundingBox.scale(s),this.boundingSphere.scale(s),this}isInFrustum(s){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===k||3===k)&&this.boundingSphere.isCenterInFrustum(s))return!0;if(!this.boundingSphere.isInFrustum(s))return!1;return!(1!==k&&3!==k)||this.boundingBox.isInFrustum(s)}get diagonalLength(){const s=this.boundingBox;return s.maximumWorld.subtractToRef(s.minimumWorld,S._TmpVector3[0]).length()}isCompletelyInFrustum(s){return this.boundingBox.isCompletelyInFrustum(s)}_checkCollision(s){return s._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(s){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(s)&&!!this.boundingBox.intersectsPoint(s))}intersects(s,k){if(!i.e.Intersects(this.boundingSphere,s.boundingSphere))return!1;if(!ms.b.Intersects(this.boundingBox,s.boundingBox))return!1;if(!k)return!0;const h=this.boundingBox,A=s.boundingBox;return!!c(h.directions[0],h,A)&&(!!c(h.directions[1],h,A)&&(!!c(h.directions[2],h,A)&&(!!c(A.directions[0],h,A)&&(!!c(A.directions[1],h,A)&&(!!c(A.directions[2],h,A)&&(!!c(g.Pk.Cross(h.directions[0],A.directions[0]),h,A)&&(!!c(g.Pk.Cross(h.directions[0],A.directions[1]),h,A)&&(!!c(g.Pk.Cross(h.directions[0],A.directions[2]),h,A)&&(!!c(g.Pk.Cross(h.directions[1],A.directions[0]),h,A)&&(!!c(g.Pk.Cross(h.directions[1],A.directions[1]),h,A)&&(!!c(g.Pk.Cross(h.directions[1],A.directions[2]),h,A)&&(!!c(g.Pk.Cross(h.directions[2],A.directions[0]),h,A)&&(!!c(g.Pk.Cross(h.directions[2],A.directions[1]),h,A)&&!!c(g.Pk.Cross(h.directions[2],A.directions[2]),h,A))))))))))))))}}S._TmpVector3=(0,A.e)(2,g.Pk.Zero)},12953:(s,k,h)=>{h.d(k,{e:()=>ms});var A=h(12603),g=h(12590);class ms{constructor(s,k,h){this.center=g.Pk.Zero(),this.centerWorld=g.Pk.Zero(),this.minimum=g.Pk.Zero(),this.maximum=g.Pk.Zero(),this.reConstruct(s,k,h)}reConstruct(s,k,h){this.minimum.H(s),this.maximum.H(k);const A=g.Pk.Distance(s,k);k.addToRef(s,this.center).scaleInPlace(.5),this.radius=.5*A,this._update(h||g.Matrix.IdentityReadOnly)}scale(s){const k=this.radius*s,h=ms._TmpVector3,A=h[0].Eg(k),g=this.center.subtractToRef(A,h[1]),i=this.center.addToRef(A,h[2]);return this.reConstruct(g,i,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(s){if(s.isIdentity())this.centerWorld.H(this.center),this.radiusWorld=this.radius;else{g.Pk.TransformCoordinatesToRef(this.center,s,this.centerWorld);const k=ms._TmpVector3[0];g.Pk.TransformNormalFromFloatsToRef(1,1,1,s,k),this.radiusWorld=Math.max(Math.abs(k.x),Math.abs(k.y),Math.abs(k.z))*this.radius}}isInFrustum(s){const k=this.centerWorld,h=this.radiusWorld;for(let A=0;A<6;A++)if(s[A].dotCoordinate(k)<=-h)return!1;return!0}isCenterInFrustum(s){const k=this.centerWorld;for(let h=0;h<6;h++)if(s[h].dotCoordinate(k)<0)return!1;return!0}intersectsPoint(s){const k=g.Pk.DistanceSquared(this.centerWorld,s);return!(this.radiusWorld*this.radiusWorld<k)}static Intersects(s,k){const h=g.Pk.DistanceSquared(s.centerWorld,k.centerWorld),A=s.radiusWorld+k.radiusWorld;return!(A*A<h)}static CreateFromCenterAndRadius(s,k,h){this._TmpVector3[0].H(s),this._TmpVector3[1].cg(0,0,k),this._TmpVector3[2].H(s),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].ka(this._TmpVector3[1]);const A=new ms(this._TmpVector3[0],this._TmpVector3[2]);return A._worldMatrix=h||g.Matrix.Identity(),A}}ms._TmpVector3=(0,A.e)(3,g.Pk.Zero)},12976:(s,k,h)=>{function A(s){-1===s.indexOf("vClipPlane")&&s.push("vClipPlane"),-1===s.indexOf("vClipPlane2")&&s.push("vClipPlane2"),-1===s.indexOf("vClipPlane3")&&s.push("vClipPlane3"),-1===s.indexOf("vClipPlane4")&&s.push("vClipPlane4"),-1===s.indexOf("vClipPlane5")&&s.push("vClipPlane5"),-1===s.indexOf("vClipPlane6")&&s.push("vClipPlane6")}function g(s,k,h){const A=!!(s.clipPlane??k.clipPlane),g=!!(s.clipPlane2??k.clipPlane2),ms=!!(s.clipPlane3??k.clipPlane3),i=!!(s.clipPlane4??k.clipPlane4),K=!!(s.clipPlane5??k.clipPlane5),H=!!(s.clipPlane6??k.clipPlane6);A&&h.push("#define CLIPPLANE"),g&&h.push("#define CLIPPLANE2"),ms&&h.push("#define CLIPPLANE3"),i&&h.push("#define CLIPPLANE4"),K&&h.push("#define CLIPPLANE5"),H&&h.push("#define CLIPPLANE6")}function ms(s,k,h){let A=!1;const g=!!(s.clipPlane??k.clipPlane),ms=!!(s.clipPlane2??k.clipPlane2),i=!!(s.clipPlane3??k.clipPlane3),K=!!(s.clipPlane4??k.clipPlane4),H=!!(s.clipPlane5??k.clipPlane5),O=!!(s.clipPlane6??k.clipPlane6);return h.CLIPPLANE!==g&&(h.CLIPPLANE=g,A=!0),h.CLIPPLANE2!==ms&&(h.CLIPPLANE2=ms,A=!0),h.CLIPPLANE3!==i&&(h.CLIPPLANE3=i,A=!0),h.CLIPPLANE4!==K&&(h.CLIPPLANE4=K,A=!0),h.CLIPPLANE5!==H&&(h.CLIPPLANE5=H,A=!0),h.CLIPPLANE6!==O&&(h.CLIPPLANE6=O,A=!0),A}function i(s,k,h){let A=k.clipPlane??h.clipPlane;K(s,"vClipPlane",A),A=k.clipPlane2??h.clipPlane2,K(s,"vClipPlane2",A),A=k.clipPlane3??h.clipPlane3,K(s,"vClipPlane3",A),A=k.clipPlane4??h.clipPlane4,K(s,"vClipPlane4",A),A=k.clipPlane5??h.clipPlane5,K(s,"vClipPlane5",A),A=k.clipPlane6??h.clipPlane6,K(s,"vClipPlane6",A)}function K(s,k,h){h&&s.setFloat4(k,h.normal.x,h.normal.y,h.normal.z,h.d)}h.d(k,{c:()=>A,d:()=>i,h:()=>ms,j:()=>g})},12904:(s,k,h)=>{h.d(k,{e:()=>A});class A{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(s,k){this._defines[s]||(s<this._currentRank&&(this._currentRank=s),s>this._maxRank&&(this._maxRank=s),this._defines[s]=new Array),this._defines[s].push(k)}addCPUSkinningFallback(s,k){this._mesh=k,s<this._currentRank&&(this._currentRank=s),s>this._maxRank&&(this._maxRank=s)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(s,k){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,s=s.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),k._bonesComputationForcedToCPU=!0;const h=this._mesh.Is();for(let s=0;s<h.meshes.length;s++){const A=h.meshes[s];if(A.material){if(A.computeBonesUsingShaders&&0!==A.numBoneInfluencers)if(A.material.getEffect()===k)A.computeBonesUsingShaders=!1;else if(A.Lh)for(const s of A.Lh){if(s.effect===k){A.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&A.computeBonesUsingShaders&&A.numBoneInfluencers>0&&(A.computeBonesUsingShaders=!1)}}else{const k=this._defines[this._currentRank];if(k)for(let h=0;h<k.length;h++)s=s.replace("#define "+k[h],"");this._currentRank++}return s}}},12916:(s,k,h)=>{h.d(k,{b:()=>j});var A=h(12570),g=h(12579),ms=h(12402),i=h(12408),K=h(12445),H=h(12925),O=h(12863),c=h(12422),S=h(12645),a=h(12712),r=h(12623);class d{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(s){this._func=s}get funcRef(){return this._funcRef}set funcRef(s){this._funcRef=s}get funcMask(){return this._funcMask}set funcMask(s){this._funcMask=s}get opStencilFail(){return this._opStencilFail}set opStencilFail(s){this._opStencilFail=s}get opDepthFail(){return this._opDepthFail}set opDepthFail(s){this._opDepthFail=s}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(s){this._opStencilDepthPass=s}get mask(){return this._mask}set mask(s){this._mask=s}get enabled(){return this._enabled}set enabled(s){this._enabled=s}getClassName(){return"MaterialStencilState"}copyTo(s){r.e.Clone((()=>s),this)}serialize(){return r.e.Serialize(this)}parse(s,k,h){r.e.Parse((()=>this),s,k,h)}}(0,A.e)([(0,g.J)()],d.prototype,"func",null),(0,A.e)([(0,g.J)()],d.prototype,"funcRef",null),(0,A.e)([(0,g.J)()],d.prototype,"funcMask",null),(0,A.e)([(0,g.J)()],d.prototype,"opStencilFail",null),(0,A.e)([(0,g.J)()],d.prototype,"opDepthFail",null),(0,A.e)([(0,g.J)()],d.prototype,"opStencilDepthPass",null),(0,A.e)([(0,g.J)()],d.prototype,"mask",null),(0,A.e)([(0,g.J)()],d.prototype,"enabled",null);var E=h(12968);class j{get _supportGlowLayer(){return!1}set _glowModeEnabled(s){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(s){if(this._alpha===s)return;const k=this._alpha;this._alpha=s,1!==k&&1!==s||this.mS(j.MiscDirtyFlag+j.PrePassDirtyFlag)}get alpha(){return this._alpha}set Hg(s){this._backFaceCulling!==s&&(this._backFaceCulling=s,this.mS(j.TextureDirtyFlag))}get Hg(){return this._backFaceCulling}set cullBackFaces(s){this._cullBackFaces!==s&&(this._cullBackFaces=s,this.mS(j.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(s){this._blockDirtyMechanism!==s&&(this._blockDirtyMechanism=s,s||this.Xa())}atomicMaterialsUpdate(s){this.blockDirtyMechanism=!0;try{s(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(s){this._onDisposeObserver&&this.Dh.remove(this._onDisposeObserver),this._onDisposeObserver=this.Dh.add(s)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new i.c),this._onBindObservable}set onBind(s){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(s)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new i.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new i.c),this._onEffectCreatedObservable}set alphaMode(s){this._alphaMode!==s&&(this._alphaMode=s,this.mS(j.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(s){this._needDepthPrePass!==s&&(this._needDepthPrePass=s,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(s){this._fogEnabled!==s&&(this._fogEnabled=s,this.mS(j.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case j.WireFrameFillMode:case j.LineListDrawMode:case j.LineLoopDrawMode:case j.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(s){this.fillMode=s?j.WireFrameFillMode:j.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case j.PointFillMode:case j.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(s){this.fillMode=s?j.PointFillMode:j.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(s){this._fillMode!==s&&(this._fillMode=s,this.mS(j.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(s){const k=this.Is().getEngine().getCaps().fragmentDepthSupported;s&&!k&&c.c.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=s&&k,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(s){this._drawWrapper=s}constructor(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Dh=new i.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.Bh=new d,this._useUBO=!1,this._fillMode=j.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=s;const g=k||K.b.LastCreatedScene;g&&(this._scene=g,this._dirtyCallbacks={},this._forceGLSL=A,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=s||ms.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new a.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new O.c(this._scene.getEngine(),void 0,void 0,s),this._useUBO=this.Is().getEngine().supportsUniformBuffers,this._createUniformBuffer(),h||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),j.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var s;const k=this.Is().getEngine();null===(s=this._uniformBuffer)||void 0===s||s.dispose(),k.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new O.c(k,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new O.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(s){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.Xa(),this.checkReadyOnlyOnce=!0}unfreeze(){this.Xa(),this.checkReadyOnlyOnce=!1}isReady(s,k){return!0}isReadyForSubMesh(s,k,h){const A=k.materialDefines;return!!A&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=A,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}Is(){return this._scene}_getEffectiveOrientation(s){return null!==this.sideOrientation?this.sideOrientation:s.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(s){this._transparencyMode!==s&&(this._transparencyMode=s,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===j.MATERIAL_ALPHABLEND||this._transparencyMode===j.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===j.MATERIAL_ALPHATEST||this._transparencyMode===j.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===j.MATERIAL_OPAQUE||this._transparencyMode===j.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(s){return this._hasTransparencyMode?this._transparencyModeIsBlend:s.visibility<1||!this._disableAlphaBlending&&(s.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(s){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(s)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}Xa(){let s=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const k=this.Is().meshes;for(const h of k)if(h.Lh)for(const k of h.Lh)if(k.Ms()===this)for(const h of k._drawWrappers)h&&this._materialContext===h.materialContext&&(h._wasPreviouslyReady=!1,h._wasPreviouslyUsingInstances=null,h._forceRebindOnNextCall=s);s&&this.mS(j.AllDirtyFlag)}_preBind(s){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const h=this._scene.getEngine(),A=(null==k?this.sideOrientation:k)===j.ClockWiseSideOrientation;return h.enableEffect(s||this._getDrawWrapper()),h.setState(this.Hg,this.zOffset,!1,A,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.Bh,this.zOffsetUnits),A}bind(s,k){}buildUniformLayout(){const s=this._uniformBuffer;this._eventInfo.ubo=s,this._callbackPluginEventGeneric(8,this._eventInfo),s.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(s,k,h){const A=h._drawWrapper;this._eventInfo.subMesh=h,this._callbackPluginEventBindForSubMesh(this._eventInfo),A._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(s){}bindView(s){this._useUBO?this._needToBindSceneUbo=!0:s.setMatrix("view",this.Is().getViewMatrix())}bindViewProjection(s){this._useUBO?this._needToBindSceneUbo=!0:(s.setMatrix("viewProjection",this.Is().getTransformMatrix()),s.setMatrix("projection",this.Is().getProjectionMatrix()))}bindEyePosition(s,k){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(s,k)}_afterBind(s){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&k&&(this._needToBindSceneUbo=!1,(0,E.p)(k,this.Is().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=s?s.visibility:1,this._onBindObservable&&s&&this._onBindObservable.notifyObservers(s),this.disableDepthWrite){const s=this._scene.getEngine();this._cachedDepthWriteState=s.getDepthWrite(),s.setDepthWrite(!1)}if(this.disableColorWrite){const s=this._scene.getEngine();this._cachedColorWriteState=s.getColorWrite(),s.setColorWrite(!1)}if(0!==this.depthFunction){const s=this._scene.getEngine();this._cachedDepthFunctionState=s.getDepthFunction()||0,s.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(s){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=s,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(s){return null}_clonePlugins(s,k){const h={};if(this._serializePlugins(h),j._ParsePlugins(h,s,this._scene,k),this.pluginManager)for(const A of this.pluginManager._plugins){const k=s.pluginManager.getPlugin(A.name);k&&A.copyTo(k)}}getBindedMeshes(){if(this.meshMap){const s=[];for(const k in this.meshMap){const h=this.meshMap[k];h&&s.push(h)}return s}return this._scene.meshes.filter((s=>s.material===this))}forceCompilation(s,k,h,A){const g={clipPlane:!1,useInstances:!1,...h},ms=this.Is(),i=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const K=()=>{if(!this._scene||!this._scene.getEngine())return;const h=ms.clipPlane;if(g.clipPlane&&(ms.clipPlane=new S.b(0,0,0,1)),this._storeEffectOnSubMeshes){let h=!0,ms=null;if(s.Lh){const k=new H.b(0,0,0,0,0,s,void 0,!1,!1);k.materialDefines&&(k.materialDefines._renderId=-1),this.isReadyForSubMesh(s,k,g.useInstances)||(k.effect&&k.effect.getCompilationError()&&k.effect.allFallbacksProcessed()?ms=k.effect.getCompilationError():(h=!1,setTimeout(K,16)))}h&&(this.allowShaderHotSwapping=i,ms&&A&&A(ms),k&&k(this))}else this.isReady()?(this.allowShaderHotSwapping=i,k&&k(this)):setTimeout(K,16);g.clipPlane&&(ms.clipPlane=h)};K()}async forceCompilationAsync(s,k){return await new Promise(((h,A)=>{this.forceCompilation(s,(()=>{h()}),k,(s=>{A(s)}))}))}mS(s){this.Is().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(j._DirtyCallbackArray.length=0,s&j.ImageProcessingDirtyFlag&&j._DirtyCallbackArray.push(j._ImageProcessingDirtyCallBack),s&j.TextureDirtyFlag&&j._DirtyCallbackArray.push(j._TextureDirtyCallBack),s&j.LightDirtyFlag&&j._DirtyCallbackArray.push(j._LightsDirtyCallBack),s&j.FresnelDirtyFlag&&j._DirtyCallbackArray.push(j._FresnelDirtyCallBack),s&j.AttributesDirtyFlag&&j._DirtyCallbackArray.push(j._AttributeDirtyCallBack),s&j.MiscDirtyFlag&&j._DirtyCallbackArray.push(j._MiscDirtyCallBack),s&j.PrePassDirtyFlag&&j._DirtyCallbackArray.push(j._PrePassDirtyCallBack),j._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(j._RunDirtyCallBacks),this.Is().resetCachedMaterial())}resetDrawCache(){const s=this.Is().meshes;for(const k of s)if(k.Lh)for(const s of k.Lh)s.Ms()===this&&s.resetDrawCache()}_markAllSubMeshesAsDirty(s){const k=this.Is();if(k.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const h=k.meshes;for(const A of h)if(A.Lh)for(const h of A.Lh){if((h.Ms()||(k._hasDefaultMaterial?k.defaultMaterial:null))===this)for(const k of h._drawWrappers)k&&k.defines&&k.defines.markAllAsDirty&&this._materialContext===k.materialContext&&s(k.defines)}}_markScenePrePassDirty(){if(this.Is().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const s=this.Is().enablePrePassRenderer();s&&s.mS()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(j._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(j._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(j._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(j._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(j._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(j._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(j._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(j._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(j._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(j._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const s=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Dh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(s)}))}}setPrePassRenderer(s){return!1}dispose(s,k,h){const A=this.Is();if(A.stopAnimation(this),A.freeProcessedMaterials(),A.removeMaterial(this),this._eventInfo.forceDisposeTextures=k,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const s=this._parentContainer.materials.indexOf(this);s>-1&&this._parentContainer.materials.splice(s,1),this._parentContainer=null}if(!0!==h)if(this.meshMap)for(const g in this.meshMap){const s=this.meshMap[g];this._disposeMeshResources(s)}else{const s=A.meshes;for(const k of s)this._disposeMeshResources(k)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Dh.notifyObservers(this),this.Dh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(s){if(!s)return;const k=s.mg,h=s._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(s.Lh&&h)for(const g of s.Lh){const s=g._drawWrappers;for(let ms=0;ms<s.length;ms++){var A;const i=null===(A=s[ms])||void 0===A?void 0:A.effect;if(!i)continue;h[ms]===this&&(null===k||void 0===k||k._releaseVertexArrayObject(i),g._removeDrawWrapper(ms,!0,!0))}}}else null===k||void 0===k||k._releaseVertexArrayObject(this._drawWrapper.effect);s.material!==this||s.sourceMesh||(s.material=null)}serialize(){const s=r.e.Serialize(this);return s.Bh=this.Bh.serialize(),s.uniqueId=this.uniqueId,this._serializePlugins(s),s}_serializePlugins(s){if(s.plugins={},this.pluginManager)for(const k of this.pluginManager._plugins)k.doNotSerialize||(s.plugins[k.getClassName()]=k.serialize())}static Parse(s,k,h){if(s.customType){if("BABYLON.PBRMaterial"===s.customType&&s.overloadedAlbedo&&(s.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return c.c.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else s.customType="BABYLON.StandardMaterial";const A=ms.Tools.Instantiate(s.customType).Parse(s,k,h);return A._loadedUniqueId=s.uniqueId,A}static _ParsePlugins(s,k,h,A){if(s.plugins)for(const K in s.plugins){var g,i;const H=s.plugins[K];let O=null===(g=k.pluginManager)||void 0===g?void 0:g.getPlugin(H.name);if(!O){const s=ms.Tools.Instantiate("BABYLON."+K);s&&(O=new s(k))}null===(i=O)||void 0===i||i.parse(H,h,A)}}}j.TriangleFillMode=0,j.WireFrameFillMode=1,j.PointFillMode=2,j.PointListDrawMode=3,j.LineListDrawMode=4,j.LineLoopDrawMode=5,j.LineStripDrawMode=6,j.TriangleStripDrawMode=7,j.TriangleFanDrawMode=8,j.ClockWiseSideOrientation=0,j.CounterClockWiseSideOrientation=1,j.ImageProcessingDirtyFlag=64,j.TextureDirtyFlag=1,j.LightDirtyFlag=2,j.FresnelDirtyFlag=4,j.AttributesDirtyFlag=8,j.MiscDirtyFlag=16,j.PrePassDirtyFlag=32,j.AllDirtyFlag=127,j.MATERIAL_OPAQUE=0,j.MATERIAL_ALPHATEST=1,j.MATERIAL_ALPHABLEND=2,j.MATERIAL_ALPHATESTANDBLEND=3,j.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,j.MATERIAL_NORMALBLENDMETHOD_RNM=1,j.OnEventObservable=new i.c,j._AllDirtyCallBack=s=>s.markAllAsDirty(),j._ImageProcessingDirtyCallBack=s=>s.markAsImageProcessingDirty(),j._TextureDirtyCallBack=s=>s.markAsTexturesDirty(),j._FresnelDirtyCallBack=s=>s.markAsFresnelDirty(),j._MiscDirtyCallBack=s=>s.markAsMiscDirty(),j._PrePassDirtyCallBack=s=>s.markAsPrePassDirty(),j._LightsDirtyCallBack=s=>s.markAsLightDirty(),j._AttributeDirtyCallBack=s=>s.markAsAttributesDirty(),j._FresnelAndMiscDirtyCallBack=s=>{j._FresnelDirtyCallBack(s),j._MiscDirtyCallBack(s)},j._TextureAndMiscDirtyCallBack=s=>{j._TextureDirtyCallBack(s),j._MiscDirtyCallBack(s)},j._DirtyCallbackArray=[],j._RunDirtyCallBacks=s=>{for(const k of j._DirtyCallbackArray)k(s)},(0,A.e)([(0,g.J)()],j.prototype,"id",void 0),(0,A.e)([(0,g.J)()],j.prototype,"uniqueId",void 0),(0,A.e)([(0,g.J)()],j.prototype,"name",void 0),(0,A.e)([(0,g.J)()],j.prototype,"metadata",void 0),(0,A.e)([(0,g.J)()],j.prototype,"checkReadyOnEveryCall",void 0),(0,A.e)([(0,g.J)()],j.prototype,"checkReadyOnlyOnce",void 0),(0,A.e)([(0,g.J)()],j.prototype,"state",void 0),(0,A.e)([(0,g.J)("alpha")],j.prototype,"_alpha",void 0),(0,A.e)([(0,g.J)("Hg")],j.prototype,"_backFaceCulling",void 0),(0,A.e)([(0,g.J)("cullBackFaces")],j.prototype,"_cullBackFaces",void 0),(0,A.e)([(0,g.J)()],j.prototype,"sideOrientation",void 0),(0,A.e)([(0,g.J)("alphaMode")],j.prototype,"_alphaMode",void 0),(0,A.e)([(0,g.J)()],j.prototype,"_needDepthPrePass",void 0),(0,A.e)([(0,g.J)()],j.prototype,"disableDepthWrite",void 0),(0,A.e)([(0,g.J)()],j.prototype,"disableColorWrite",void 0),(0,A.e)([(0,g.J)()],j.prototype,"forceDepthWrite",void 0),(0,A.e)([(0,g.J)()],j.prototype,"depthFunction",void 0),(0,A.e)([(0,g.J)()],j.prototype,"separateCullingPass",void 0),(0,A.e)([(0,g.J)("fogEnabled")],j.prototype,"_fogEnabled",void 0),(0,A.e)([(0,g.J)()],j.prototype,"pointSize",void 0),(0,A.e)([(0,g.J)()],j.prototype,"zOffset",void 0),(0,A.e)([(0,g.J)()],j.prototype,"zOffsetUnits",void 0),(0,A.e)([(0,g.J)()],j.prototype,"pointsCloud",null),(0,A.e)([(0,g.J)()],j.prototype,"fillMode",null),(0,A.e)([(0,g.J)()],j.prototype,"useLogarithmicDepth",null),(0,A.e)([(0,g.J)()],j.prototype,"transparencyMode",null)},12968:(s,k,h)=>{h.d(k,{A:()=>Q,B:()=>r,C:()=>a,E:()=>z,I:()=>t,K:()=>N,L:()=>P,P:()=>I,T:()=>C,V:()=>v,Y:()=>Y,Z:()=>T,_:()=>d,c:()=>w,f:()=>S,i:()=>u,j:()=>c,m:()=>E,p:()=>j,q:()=>R,u:()=>p,w:()=>D,z:()=>G});var A=h(12422),g=h(12636),ms=h(12445),i=h(12900),K=h(12976);const H=g.Bk.Black(),O={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function c(s,k,h){if(!s||s.LOGARITHMICDEPTH||s.indexOf&&s.indexOf("LOGARITHMICDEPTH")>=0){const s=h.activeCamera;1===s.mode&&A.c.Error("Logarithmic depth is not compatible with orthographic cameras!",20),k.setFloat("logarithmicDepthConstant",2/(Math.log(s.maxZ+1)/Math.LN2))}}function S(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3];h&&s.fogEnabled&&(!k||k.applyFog)&&0!==s.fogMode&&(h.setFloat4("vFogInfos",s.fogMode,s.fogStart,s.fogEnd,s.fogDensity),A?(s.fogColor.toLinearSpaceToRef(H,s.getEngine().useExactSrgbConversions),h.setColor3("vFogColor",H)):h.setColor3("vFogColor",s.fogColor))}function a(s,k,h,A,g,ms,i,K,H,c){const S=s.numMaxInfluencers||s.numInfluencers;return S<=0?0:(k.push("#define MORPHTARGETS"),s.hasPositions&&k.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),s.hasNormals&&k.push("#define MORPHTARGETTEXTURE_HASNORMALS"),s.hasTangents&&k.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),s.hasUVs&&k.push("#define MORPHTARGETTEXTURE_HASUVS"),s.hasUV2s&&k.push("#define MORPHTARGETTEXTURE_HASUV2S"),s.hasColors&&k.push("#define MORPHTARGETTEXTURE_HASCOLORS"),s.supportsPositions&&g&&k.push("#define MORPHTARGETS_POSITION"),s.supportsNormals&&ms&&k.push("#define MORPHTARGETS_NORMAL"),s.supportsTangents&&i&&k.push("#define MORPHTARGETS_TANGENT"),s.supportsUVs&&K&&k.push("#define MORPHTARGETS_UV"),s.supportsUV2s&&H&&k.push("#define MORPHTARGETS_UV2"),s.supportsColors&&c&&k.push("#define MORPHTARGETS_COLOR"),k.push("#define NUM_MORPH_INFLUENCERS "+S),s.isUsingTextureForTargets&&k.push("#define MORPHTARGETS_TEXTURE"),O.NUM_MORPH_INFLUENCERS=S,O.NORMAL=ms,O.TANGENT=i,O.UV=K,O.UV2=H,O.COLOR=c,r(h,A,O,g),S)}function r(s,k,h){let g=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const i=h.NUM_MORPH_INFLUENCERS;if(i>0&&ms.b.LastCreatedEngine){const K=ms.b.LastCreatedEngine.getCaps().maxVertexAttribs,H=k.morphTargetManager;if(null!==H&&void 0!==H&&H.isUsingTextureForTargets)return;const O=H&&H.supportsPositions&&g,c=H&&H.supportsNormals&&h.NORMAL,S=H&&H.supportsTangents&&h.TANGENT,a=H&&H.supportsUVs&&h.UV1,r=H&&H.supportsUV2s&&h.UV2,d=H&&H.supportsColors&&h.VERTEXCOLOR;for(let h=0;h<i;h++)O&&s.push("position"+h),c&&s.push("normal"+h),S&&s.push("tangent"+h),a&&s.push("uv_"+h),r&&s.push("uv2_"+h),d&&s.push("color"+h),s.length>K&&A.c.Error("Cannot add more vertex attributes for mesh "+k.name)}}function d(s){let k=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s.push("world0"),s.push("world1"),s.push("world2"),s.push("world3"),k&&(s.push("previousWorld0"),s.push("previousWorld1"),s.push("previousWorld2"),s.push("previousWorld3"))}function E(s,k){const h=s.morphTargetManager;s&&h&&k.setFloatArray("morphTargetInfluences",h.influences)}function j(s,k){k.bindToEffect(s,"Scene")}function P(s,k,h){k._needUVs=!0,k[h]=!0,s.optimizeUVAllocation&&s.getTextureMatrix().isIdentityAs3x2()?(k[h+"DIRECTUV"]=s.coordinatesIndex+1,k["MAINUV"+(s.coordinatesIndex+1)]=!0):k[h+"DIRECTUV"]=0}function R(s,k,h){const A=s.getTextureMatrix();k.Fh(h+"Matrix",A)}function D(s,k,h){h.BAKED_VERTEX_ANIMATION_TEXTURE&&h.INSTANCES&&s.push("bakedVertexAnimationSettingsInstanced")}function w(s,k,h){var A;if(k&&s&&(s.computeBonesUsingShaders&&k._bonesComputationForcedToCPU&&(s.computeBonesUsingShaders=!1),s.useBones&&s.computeBonesUsingShaders&&s.skeleton)){const g=s.skeleton;if(g.isUsingTextureForMatrices&&k.getUniformIndex("boneTextureWidth")>-1){const h=g.getTransformMatrixTexture(s);k.setTexture("boneSampler",h),k.setFloat("boneTextureWidth",4*(g.bones.length+1))}else{const ms=g.getTransformMatrices(s);ms&&(k.setMatrices("mBones",ms),h&&s.Is().prePassRenderer&&s.Is().prePassRenderer.getIndex(2)&&(h.previousBones[s.uniqueId]||(h.previousBones[s.uniqueId]=ms.slice()),k.setMatrices("mPreviousBones",h.previousBones[s.uniqueId]),A=ms,h.previousBones[s.uniqueId].set(A)))}}}function B(s,k,h,A,g){let ms=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];s._bindLight(k,h,A,g,ms)}function u(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const ms=Math.min(k.lightSources.length,g);for(let i=0;i<ms;i++){B(k.lightSources[i],i,s,h,"boolean"===typeof A?A:A.SPECULARTERM,k.receiveShadows)}}function G(s,k,h,A){h.NUM_BONE_INFLUENCERS>0&&(A.addCPUSkinningFallback(0,k),s.push("matricesIndices"),s.push("matricesWeights"),h.NUM_BONE_INFLUENCERS>4&&(s.push("matricesIndicesExtra"),s.push("matricesWeightsExtra")))}function Q(s,k){(k.INSTANCES||k.THIN_INSTANCES)&&d(s,!!k.PREPASS_VELOCITY),k.INSTANCESCOLOR&&s.push("instanceColor")}function p(s,k){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,g=0;for(let ms=0;ms<h&&s["LIGHT"+ms];ms++)ms>0&&(g=A+ms,k.addFallback(g,"LIGHT"+ms)),s.SHADOWS||(s["SHADOW"+ms]&&k.addFallback(A,"SHADOW"+ms),s["SHADOWPCF"+ms]&&k.addFallback(A,"SHADOWPCF"+ms),s["SHADOWPCSS"+ms]&&k.addFallback(A,"SHADOWPCSS"+ms),s["SHADOWPOISSON"+ms]&&k.addFallback(A,"SHADOWPOISSON"+ms),s["SHADOWESM"+ms]&&k.addFallback(A,"SHADOWESM"+ms),s["SHADOWCLOSEESM"+ms]&&k.addFallback(A,"SHADOWCLOSEESM"+ms));return g++}function I(s,k,h,A,g,ms,i){let K=arguments.length>7&&void 0!==arguments[7]&&arguments[7];i._areMiscDirty&&(i.LOGARITHMICDEPTH=h,i.POINTSIZE=A,i.FOG=g&&function(s,k){return k.fogEnabled&&s.applyFog&&0!==k.fogMode}(s,k),i.NONUNIFORMSCALING=s.nonUniformScaling,i.ALPHATEST=ms,i.DECAL_AFTER_DETAIL=K)}function N(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!h._areLightsDirty)return h._needNormals;let i=0;const K={needNormals:h._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(s.lightsEnabled&&!ms)for(const O of k.lightSources)if(b(s,k,O,i,h,A,K),i++,i===g)break;h.SPECULARTERM=K.specularEnabled,h.SHADOWS=K.shadowEnabled;for(let O=i;O<g;O++)void 0!==h["LIGHT"+O]&&(h["LIGHT"+O]=!1,h["HEMILIGHT"+O]=!1,h["POINTLIGHT"+O]=!1,h["DIRLIGHT"+O]=!1,h["SPOTLIGHT"+O]=!1,h["AREALIGHT"+O]=!1,h["SHADOW"+O]=!1,h["SHADOWCSM"+O]=!1,h["SHADOWCSMDEBUG"+O]=!1,h["SHADOWCSMNUM_CASCADES"+O]=!1,h["SHADOWCSMUSESHADOWMAXZ"+O]=!1,h["SHADOWCSMNOBLEND"+O]=!1,h["SHADOWCSM_RIGHTHANDED"+O]=!1,h["SHADOWPCF"+O]=!1,h["SHADOWPCSS"+O]=!1,h["SHADOWPOISSON"+O]=!1,h["SHADOWESM"+O]=!1,h["SHADOWCLOSEESM"+O]=!1,h["SHADOWCUBE"+O]=!1,h["SHADOWLOWQUALITY"+O]=!1,h["SHADOWMEDIUMQUALITY"+O]=!1);const H=s.getEngine().getCaps();return void 0===h.SHADOWFLOAT&&(K.needRebuild=!0),h.SHADOWFLOAT=K.shadowEnabled&&(H.textureFloatRender&&H.textureFloatLinearFiltering||H.textureHalfFloatRender&&H.textureHalfFloatLinearFiltering),h.LIGHTMAPEXCLUDED=K.lightmapMode,K.needRebuild&&h.rebuild(),K.needNormals}function b(s,k,h,A,g,ms,K){switch(K.needNormals=!0,void 0===g["LIGHT"+A]&&(K.needRebuild=!0),g["LIGHT"+A]=!0,g["SPOTLIGHT"+A]=!1,g["HEMILIGHT"+A]=!1,g["POINTLIGHT"+A]=!1,g["DIRLIGHT"+A]=!1,g["AREALIGHT"+A]=!1,h.prepareLightSpecificDefines(g,A),g["LIGHT_FALLOFF_PHYSICAL"+A]=!1,g["LIGHT_FALLOFF_GLTF"+A]=!1,g["LIGHT_FALLOFF_STANDARD"+A]=!1,h.falloffType){case i.b.FALLOFF_GLTF:g["LIGHT_FALLOFF_GLTF"+A]=!0;break;case i.b.FALLOFF_PHYSICAL:g["LIGHT_FALLOFF_PHYSICAL"+A]=!0;break;case i.b.FALLOFF_STANDARD:g["LIGHT_FALLOFF_STANDARD"+A]=!0}if(ms&&!h.rS.equalsFloats(0,0,0)&&(K.specularEnabled=!0),g["SHADOW"+A]=!1,g["SHADOWCSM"+A]=!1,g["SHADOWCSMDEBUG"+A]=!1,g["SHADOWCSMNUM_CASCADES"+A]=!1,g["SHADOWCSMUSESHADOWMAXZ"+A]=!1,g["SHADOWCSMNOBLEND"+A]=!1,g["SHADOWCSM_RIGHTHANDED"+A]=!1,g["SHADOWPCF"+A]=!1,g["SHADOWPCSS"+A]=!1,g["SHADOWPOISSON"+A]=!1,g["SHADOWESM"+A]=!1,g["SHADOWCLOSEESM"+A]=!1,g["SHADOWCUBE"+A]=!1,g["SHADOWLOWQUALITY"+A]=!1,g["SHADOWMEDIUMQUALITY"+A]=!1,k&&k.receiveShadows&&s.shadowsEnabled&&h.shadowEnabled){const k=h.getShadowGenerator(s.activeCamera)??h.getShadowGenerator();if(k){const s=k.getShadowMap();s&&s.renderList&&s.renderList.length>0&&(K.shadowEnabled=!0,k.prepareDefines(g,A))}}h.lightmapMode!=i.b.LIGHTMAP_DEFAULT?(K.lightmapMode=!0,g["LIGHTMAPEXCLUDED"+A]=!0,g["LIGHTMAPNOSPECULAR"+A]=h.lightmapMode==i.b.LIGHTMAP_SHADOWSONLY):(g["LIGHTMAPEXCLUDED"+A]=!1,g["LIGHTMAPNOSPECULAR"+A]=!1)}function t(s,k,h,A,g){let ms=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=function(s,k){let h=!1;if(s.activeCamera){const A=k.CAMERA_ORTHOGRAPHIC?1:0,g=k.CAMERA_PERSPECTIVE?1:0,ms=1===s.activeCamera.mode?1:0,i=0===s.activeCamera.mode?1:0;(A^ms||g^i)&&(k.CAMERA_ORTHOGRAPHIC=1===ms,k.CAMERA_PERSPECTIVE=1===i,h=!0)}return h}(s,A);!1!==ms&&(H=(0,K.h)(h,s,A)),A.DEPTHPREPASS!==!k.getColorWrite()&&(A.DEPTHPREPASS=!A.DEPTHPREPASS,H=!0),A.INSTANCES!==g&&(A.INSTANCES=g,H=!0),A.THIN_INSTANCES!==i&&(A.THIN_INSTANCES=i,H=!0),H&&A.markAsUnprocessed()}function z(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]&&arguments[4],ms=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!k._areAttributesDirty&&k._needNormals===k._normals&&k._needUVs===k._uvs)return!1;k._normals=k._needNormals,k._uvs=k._needUVs,k.NORMAL=k._needNormals&&s.isVerticesDataPresent("normal"),k._needNormals&&s.isVerticesDataPresent("tangent")&&(k.TANGENT=!0);for(let K=1;K<=6;++K)k["UV"+K]=!!k._needUVs&&s.isVerticesDataPresent(`uv${1===K?"":K}`);if(h){const h=s.useVertexColors&&s.isVerticesDataPresent("color");k.VERTEXCOLOR=h,k.VERTEXALPHA=s.hasVertexAlpha&&h&&ms}return s.isVerticesDataPresent("instanceColor")&&(s.hasInstances||s.hasThinInstances)&&(k.INSTANCESCOLOR=!0),A&&function(s,k){if(s.useBones&&s.computeBonesUsingShaders&&s.skeleton){k.NUM_BONE_INFLUENCERS=s.numBoneInfluencers;const h=void 0!==k.BONETEXTURE;if(s.skeleton.isUsingTextureForMatrices&&h)k.BONETEXTURE=!0;else{k.BonesPerMesh=s.skeleton.bones.length+1,k.BONETEXTURE=!h&&void 0;const A=s.Is().prePassRenderer;if(A&&A.enabled){const h=-1===A.excludedSkinnedMesh.indexOf(s);k.BONES_VELOCITY_ENABLED=h}}}else k.NUM_BONE_INFLUENCERS=0,k.BonesPerMesh=0,void 0!==k.BONETEXTURE&&(k.BONETEXTURE=!1)}(s,k),g&&function(s,k){const h=s.morphTargetManager;h?(k.MORPHTARGETS_UV=h.supportsUVs&&k.UV1,k.MORPHTARGETS_UV2=h.supportsUV2s&&k.UV2,k.MORPHTARGETS_TANGENT=h.supportsTangents&&k.TANGENT,k.MORPHTARGETS_NORMAL=h.supportsNormals&&k.NORMAL,k.MORPHTARGETS_POSITION=h.supportsPositions,k.MORPHTARGETS_COLOR=h.supportsColors,k.MORPHTARGETTEXTURE_HASUVS=h.hasUVs,k.MORPHTARGETTEXTURE_HASUV2S=h.hasUV2s,k.MORPHTARGETTEXTURE_HASTANGENTS=h.hasTangents,k.MORPHTARGETTEXTURE_HASNORMALS=h.hasNormals,k.MORPHTARGETTEXTURE_HASPOSITIONS=h.hasPositions,k.MORPHTARGETTEXTURE_HASCOLORS=h.hasColors,k.NUM_MORPH_INFLUENCERS=h.numMaxInfluencers||h.numInfluencers,k.MORPHTARGETS=k.NUM_MORPH_INFLUENCERS>0,k.MORPHTARGETS_TEXTURE=h.isUsingTextureForTargets):(k.MORPHTARGETS_UV=!1,k.MORPHTARGETS_UV2=!1,k.MORPHTARGETS_TANGENT=!1,k.MORPHTARGETS_NORMAL=!1,k.MORPHTARGETS_POSITION=!1,k.MORPHTARGETS_COLOR=!1,k.MORPHTARGETTEXTURE_HASUVS=!1,k.MORPHTARGETTEXTURE_HASUV2S=!1,k.MORPHTARGETTEXTURE_HASTANGENTS=!1,k.MORPHTARGETTEXTURE_HASNORMALS=!1,k.MORPHTARGETTEXTURE_HASPOSITIONS=!1,k.MORPHTARGETTEXTURE_HAS_COLORS=!1,k.MORPHTARGETS=!1,k.NUM_MORPH_INFLUENCERS=0)}(s,k),i&&function(s,k){const h=s.bakedVertexAnimationManager;k.BAKED_VERTEX_ANIMATION_TEXTURE=!(!h||!h.isEnabled)}(s,k),!0}function C(s,k){if(s.activeCamera){const h=k.MULTIVIEW;k.MULTIVIEW=null!==s.activeCamera.outputRenderTarget&&s.activeCamera.outputRenderTarget.getViewCount()>1,k.MULTIVIEW!=h&&k.markAsUnprocessed()}}function v(s,k,h){const A=k.ORDER_INDEPENDENT_TRANSPARENCY,g=k.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;k.ORDER_INDEPENDENT_TRANSPARENCY=s.useOrderIndependentTransparency&&h,k.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!s.getEngine().getCaps().textureFloatLinearFiltering,A===k.ORDER_INDEPENDENT_TRANSPARENCY&&g===k.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||k.markAsUnprocessed()}function Y(s,k,h){const A=k.PREPASS;if(!k._arePrePassDirty)return;const g=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(s.prePassRenderer&&s.prePassRenderer.enabled&&h){k.PREPASS=!0,k.SCENE_MRT_COUNT=s.prePassRenderer.mrtCount,k.PREPASS_NORMAL_WORLDSPACE=s.prePassRenderer.generateNormalsInWorldSpace,k.PREPASS_COLOR=!0,k.PREPASS_COLOR_INDEX=0;for(let h=0;h<g.length;h++){const A=s.prePassRenderer.getIndex(g[h].type);-1!==A?(k[g[h].define]=!0,k[g[h].index]=A):k[g[h].define]=!1}}else{k.PREPASS=!1;for(let s=0;s<g.length;s++)k[g[s].define]=!1}k.PREPASS!=A&&(k.markAsUnprocessed(),k.markAsImageProcessingDirty())}function n(s,k,h,A){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]&&arguments[6];g&&g.push("Light"+s),ms||(k.push("vLightData"+s,"vLightDiffuse"+s,"vLightSpecular"+s,"vLightDirection"+s,"vLightWidth"+s,"vLightHeight"+s,"vLightFalloff"+s,"vLightGround"+s,"lightMatrix"+s,"shadowsInfo"+s,"depthValues"+s),h.push("shadowTexture"+s),h.push("depthTexture"+s),k.push("viewFrustumZ"+s,"cascadeBlendFactor"+s,"lightSizeUVCorrection"+s,"depthCorrection"+s,"penumbraDarkness"+s,"frustumLengths"+s),A&&(h.push("projectionLightTexture"+s),k.push("textureProjectionMatrix"+s)),i&&h.push("iesLightTexture"+s))}function T(s,k,h){let A,g,ms=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(s.uniformsNames){const i=s;A=i.uniformsNames,g=i.uniformBuffersNames,k=i.samplers,h=i.defines,ms=i.maxSimultaneousLights||0}else A=s,k||(k=[]);for(let i=0;i<ms&&h["LIGHT"+i];i++)n(i,A,k,h["PROJECTEDLIGHTTEXTURE"+i],g,!1,h["IESLIGHTTEXTURE"+i]);h.NUM_MORPH_INFLUENCERS&&(A.push("morphTargetInfluences"),A.push("morphTargetCount")),h.BAKED_VERTEX_ANIMATION_TEXTURE&&(A.push("bakedVertexAnimationSettings"),A.push("bakedVertexAnimationTextureSizeInverted"),A.push("bakedVertexAnimationTime"),k.push("bakedVertexAnimationTexture"))}},12911:(s,k,h)=>{h.d(k,{b:()=>ms});var A=h(12590),g=h(12916);class ms extends g.b{constructor(s,k){let h=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(s,k,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new A.Matrix,this._storeEffectOnSubMeshes=h}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(s,k){return!!s&&(!this._storeEffectOnSubMeshes||(!s.Lh||0===s.Lh.length||this.isReadyForSubMesh(s,s.Lh[0],k)))}_isReadyForSubMesh(s){const k=s.materialDefines;return!(this.checkReadyOnEveryCall||!s.effect||!k||k._renderId!==this.Is().getRenderId())}bindOnlyWorldMatrix(s){this._activeEffect.setMatrix("world",s)}bindOnlyNormalMatrix(s){this._activeEffect.setMatrix("normalMatrix",s)}bind(s,k){k&&this.bindForSubMesh(s,k,k.Lh[0])}_afterBind(s){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,h=arguments.length>2?arguments[2]:void 0;super._afterBind(s,k,h),this.Is()._cachedEffect=k,h?h._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return h._drawWrapper._forceRebindOnNextCall||s.isCachedMaterialInvalid(this,k,A)}dispose(s,k,h){this._activeEffect=void 0,super.dispose(s,k,h)}}},12959:(s,k,h)=>{h.d(k,{c:()=>K,f:()=>H});var A=h(12570),g=h(12590),ms=h(12579);class i{static extractMinAndMaxIndexed(s,k,h,A,g,ms){for(let i=h;i<h+A;i++){const h=3*k[i],A=s[h],K=s[h+1],H=s[h+2];g.minimizeInPlaceFromFloats(A,K,H),ms.maximizeInPlaceFromFloats(A,K,H)}}static extractMinAndMax(s,k,h,A,g,ms){for(let i=k,K=k*A;i<k+h;i++,K+=A){const k=s[K],h=s[K+1],A=s[K+2];g.minimizeInPlaceFromFloats(k,h,A),ms.maximizeInPlaceFromFloats(k,h,A)}}}function K(s,k,h,A){let ms=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const K=new g.Pk(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),H=new g.Pk(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return i.extractMinAndMaxIndexed(s,k,h,A,K,H),ms&&(K.x-=K.x*ms.x+ms.y,K.y-=K.y*ms.x+ms.y,K.z-=K.z*ms.x+ms.y,H.x+=H.x*ms.x+ms.y,H.y+=H.y*ms.x+ms.y,H.z+=H.z*ms.x+ms.y),{minimum:K,maximum:H}}function H(s,k,h){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,ms=arguments.length>4?arguments[4]:void 0;const K=new g.Pk(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),H=new g.Pk(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return ms||(ms=3),i.extractMinAndMax(s,k,h,ms,K,H),A&&(K.x-=K.x*A.x+A.y,K.y-=K.y*A.x+A.y,K.z-=K.z*A.x+A.y,H.x+=H.x*A.x+A.y,H.y+=H.y*A.x+A.y,H.z+=H.z*A.x+A.y),{minimum:K,maximum:H}}(0,A.e)([ms.c.filter((function(){for(var s=arguments.length,k=new Array(s),h=0;h<s;h++)k[h]=arguments[h];let[A,g]=k;return!Array.isArray(A)&&!Array.isArray(g)}))],i,"extractMinAndMaxIndexed",null),(0,A.e)([ms.c.filter((function(){for(var s=arguments.length,k=new Array(s),h=0;h<s;h++)k[h]=arguments[h];let[A]=k;return!Array.isArray(A)}))],i,"extractMinAndMax",null)},12925:(s,k,h)=>{h.d(k,{b:()=>H});var A=h(12664),g=h(12931),ms=h(12937),i=h(12959),K=h(12712);class H{get materialDefines(){var s;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(s=this._getDrawWrapper())||void 0===s?void 0:s.defines}set materialDefines(s){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=s}_getDrawWrapper(s){let k=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s=s??this._engine.currentRenderPassId;let h=this._drawWrappers[s];return!h&&k&&(this._drawWrappers[s]=h=new K.b(this._mesh.Is().getEngine())),h}_removeDrawWrapper(s){let k=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var h;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(h=this._drawWrappers[s])||void 0===h||h.dispose(k));this._drawWrappers[s]=void 0}get effect(){var s;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(s=this._getDrawWrapper())||void 0===s?void 0:s.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(s){this._mainDrawWrapperOverride=s}setEffect(s){let k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,h=arguments.length>2?arguments[2]:void 0,A=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const g=this._drawWrapper;g.setEffect(s,k,A),void 0!==h&&(g.materialContext=h),s||(g.defines=null,g.materialContext=void 0)}resetDrawCache(s){let k=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==s)return void this._removeDrawWrapper(s,!0,k);for(const s of this._drawWrappers)null===s||void 0===s||s.dispose(k)}this._drawWrappers=[]}static AddToMesh(s,k,h,A,g,ms,i){return new H(s,k,h,A,g,ms,i,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(s,k,h,A,g,ms,i){let K=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],H=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=s,this.verticesStart=k,this.verticesCount=h,this.indexStart=A,this.indexCount=g,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=ms,this._renderingMesh=i||ms,H&&ms.Lh.push(this),this._engine=this._mesh.Is().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=ms.Lh.length-1,K&&(this.refreshBoundingInfo(),ms.fh(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(s){return this._boundingInfo=s,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const s=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return s||this._renderingMesh}Ms(){let s=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const k=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!k)return s&&this._mesh.Is()._hasDefaultMaterial?this._mesh.Is().defaultMaterial:null;if(this._isMultiMaterial(k)){const s=k.getSubMaterial(this.materialIndex);return this._currentMaterial!==s&&(this._currentMaterial=s,this.resetDrawCache()),s}return k}_isMultiMaterial(s){return void 0!==s.getSubMaterial}refreshBoundingInfo(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.mg)return this;if(s||(s=this._renderingMesh.getVerticesData(A.e.PositionKind)),!s)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const k=this._renderingMesh.sg();let h;if(0===this.indexStart&&this.indexCount===k.length){const s=this._renderingMesh.getBoundingInfo();h={minimum:s.minimum.clone(),maximum:s.maximum.clone()}}else h=(0,i.c)(s,k,this.indexStart,this.indexCount,this._renderingMesh.mg.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(h.minimum,h.maximum):this._boundingInfo=new ms.c(h.minimum,h.maximum),this}_checkCollision(s){return this.getBoundingInfo()._checkCollision(s)}updateBoundingInfo(s){let k=this.getBoundingInfo();return k||(this.refreshBoundingInfo(),k=this.getBoundingInfo()),k&&k.update(s),this}isInFrustum(s){const k=this.getBoundingInfo();return!!k&&k.isInFrustum(s,this._mesh.da)}isCompletelyInFrustum(s){const k=this.getBoundingInfo();return!!k&&k.isCompletelyInFrustum(s)}render(s){return this._renderingMesh.render(this,s,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(s,k){if(!this._linesIndexBuffer){const h=6*Math.floor(this.indexCount/3),A=this.verticesStart+this.verticesCount>65535?new Uint32Array(h):new Uint16Array(h);let g=0;if(0===s.length)for(let s=this.indexStart;s<this.indexStart+this.indexCount;s+=3)A[g++]=s,A[g++]=s+1,A[g++]=s+1,A[g++]=s+2,A[g++]=s+2,A[g++]=s;else for(let k=this.indexStart;k<this.indexStart+this.indexCount;k+=3)A[g++]=s[k],A[g++]=s[k+1],A[g++]=s[k+1],A[g++]=s[k+2],A[g++]=s[k+2],A[g++]=s[k];this._linesIndexBuffer=k.createIndexBuffer(A),this._linesIndexCount=A.length}return this._linesIndexBuffer}canIntersects(s){const k=this.getBoundingInfo();return!!k&&s.intersectsBox(k.boundingBox)}intersects(s,k,h,A,g){const ms=this.Ms();if(!ms)return null;let i=3,K=!1;switch(ms.fillMode){case 3:case 5:case 6:case 8:return null;case 7:i=1,K=!0}return 4===ms.fillMode?h.length?this._intersectLines(s,k,h,this._mesh.intersectionThreshold,A):this._intersectUnIndexedLines(s,k,h,this._mesh.intersectionThreshold,A):!h.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(s,k,h,A,g):this._intersectTriangles(s,k,h,i,K,A,g)}_intersectLines(s,k,h,A,ms){let i=null;for(let K=this.indexStart;K<this.indexStart+this.indexCount;K+=2){const H=k[h[K]],O=k[h[K+1]],c=s.intersectionSegment(H,O,A);if(!(c<0)&&((ms||!i||c<i.distance)&&(i=new g.e(null,null,c),i.faceId=K/2,ms)))break}return i}_intersectUnIndexedLines(s,k,h,A,ms){let i=null;for(let K=this.verticesStart;K<this.verticesStart+this.verticesCount;K+=2){const h=k[K],H=k[K+1],O=s.intersectionSegment(h,H,A);if(!(O<0)&&((ms||!i||O<i.distance)&&(i=new g.e(null,null,O),i.faceId=K/2,ms)))break}return i}_intersectTriangles(s,k,h,A,g,ms,i){let K=null,H=-1;for(let O=this.indexStart;O<this.indexStart+this.indexCount-(3-A);O+=A){H++;const A=h[O],c=h[O+1],S=h[O+2];if(g&&4294967295===S){O+=2;continue}const a=k[A],r=k[c],d=k[S];if(!a||!r||!d)continue;if(i&&!i(a,r,d,s,A,c,S))continue;const E=s.intersectsTriangle(a,r,d);if(E){if(E.distance<0)continue;if((ms||!K||E.distance<K.distance)&&(K=E,K.faceId=H,ms))break}}return K}_intersectUnIndexedTriangles(s,k,h,A,g){let ms=null;for(let i=this.verticesStart;i<this.verticesStart+this.verticesCount;i+=3){const h=k[i],K=k[i+1],H=k[i+2];if(g&&!g(h,K,H,s,-1,-1,-1))continue;const O=s.intersectsTriangle(h,K,H);if(O){if(O.distance<0)continue;if((A||!ms||O.distance<ms.distance)&&(ms=O,ms.faceId=i/3,A))break}}return ms}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(s,k){const h=new H(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,s,k,!1);if(!this.IsGlobal){const s=this.getBoundingInfo();if(!s)return h;h._boundingInfo=new ms.c(s.minimum,s.maximum)}return h}dispose(){let s=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.Is().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const k=this._mesh.Lh.indexOf(this);this._mesh.Lh.splice(k,1),this.resetDrawCache(void 0,s)}getClassName(){return"SubMesh"}static CreateFromIndices(s,k,h,A,g){let ms=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i=Number.MAX_VALUE,K=-Number.MAX_VALUE;const O=(g||A).sg();for(let H=k;H<k+h;H++){const s=O[H];s<i&&(i=s),s>K&&(K=s)}return new H(s,i,K-i+1,k,h,A,g,ms)}}}}]);