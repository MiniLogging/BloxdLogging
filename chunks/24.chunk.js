"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[24],{11620:(F,b,Q)=>{Q.d(b,{d:()=>C});class C{constructor(F,b,Q){this.bu=F,this.bv=b,this.distance=Q,this.faceId=0,this.subMeshId=0}}},11631:(F,b,Q)=>{Q.d(b,{d:()=>g});var C=Q(11320),z=Q(11309),t=Q(11318);class g{constructor(F,b,Q){this.vectors=(0,C.b)(8,z.gQ.Zero),this.center=z.gQ.Zero(),this.centerWorld=z.gQ.Zero(),this.extendSize=z.gQ.Zero(),this.extendSizeWorld=z.gQ.Zero(),this.directions=(0,C.b)(3,z.gQ.Zero),this.vectorsWorld=(0,C.b)(8,z.gQ.Zero),this.minimumWorld=z.gQ.Zero(),this.maximumWorld=z.gQ.Zero(),this.minimum=z.gQ.Zero(),this.maximum=z.gQ.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(F,b,Q)}reConstruct(F,b,Q){const C=F.x,t=F.y,g=F.z,W=b.x,Z=b.y,q=b.z,G=this.vectors;this.minimum.jb(C,t,g),this.maximum.jb(W,Z,q),G[0].jb(C,t,g),G[1].jb(W,Z,q),G[2].jb(W,t,g),G[3].jb(C,Z,g),G[4].jb(C,t,q),G[5].jb(W,Z,g),G[6].jb(C,Z,q),G[7].jb(W,t,q),b.addToRef(F,this.center).scaleInPlace(.5),b.subtractToRef(F,this.extendSize).scaleInPlace(.5),this._worldMatrix=Q||z.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(F){const b=g._TmpVector3,Q=this.maximum.subtractToRef(this.minimum,b[0]),C=Q.length();Q.normalizeFromLength(C);const z=C*F,t=Q.scaleInPlace(.5*z),W=this.center.subtractToRef(t,b[1]),Z=this.center.addToRef(t,b[2]);return this.reConstruct(W,Z,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(F){const b=this.minimumWorld,Q=this.maximumWorld,C=this.directions,t=this.vectorsWorld,g=this.vectors;if(F.isIdentity()){b.W(this.minimum),Q.W(this.maximum);for(let F=0;F<8;++F)t[F].W(g[F]);this.extendSizeWorld.W(this.extendSize),this.centerWorld.W(this.center)}else{b.Yb(Number.MAX_VALUE),Q.Yb(-Number.MAX_VALUE);for(let C=0;C<8;++C){const W=t[C];z.gQ.TransformCoordinatesToRef(g[C],F,W),b.minimizeInPlace(W),Q.maximizeInPlace(W)}Q.subtractToRef(b,this.extendSizeWorld).scaleInPlace(.5),Q.addToRef(b,this.centerWorld).scaleInPlace(.5)}z.gQ.FromArrayToRef(F.m,0,C[0]),z.gQ.FromArrayToRef(F.m,4,C[1]),z.gQ.FromArrayToRef(F.m,8,C[2]),this._worldMatrix=F}isInFrustum(F){return g.IsInFrustum(this.vectorsWorld,F)}isCompletelyInFrustum(F){return g.IsCompletelyInFrustum(this.vectorsWorld,F)}intersectsPoint(F){const b=this.minimumWorld,Q=this.maximumWorld,C=b.x,z=b.y,g=b.z,W=Q.x,Z=Q.y,q=Q.z,G=F.x,K=F.y,e=F.z,N=-t.c;return!(W-G<N||N>G-C)&&(!(Z-K<N||N>K-z)&&!(q-e<N||N>e-g))}intersectsSphere(F){return g.IntersectsSphere(this.minimumWorld,this.maximumWorld,F.centerWorld,F.radiusWorld)}intersectsMinMax(F,b){const Q=this.minimumWorld,C=this.maximumWorld,z=Q.x,t=Q.y,g=Q.z,W=C.x,Z=C.y,q=C.z,G=F.x,K=F.y,e=F.z,N=b.x,y=b.y,E=b.z;return!(W<G||z>N)&&(!(Z<K||t>y)&&!(q<e||g>E))}dispose(){var F,b;null===(F=this._drawWrapperFront)||void 0===F||F.dispose(),null===(b=this._drawWrapperBack)||void 0===b||b.dispose()}static Intersects(F,b){return F.intersectsMinMax(b.minimumWorld,b.maximumWorld)}static IntersectsSphere(F,b,Q,C){const t=g._TmpVector3[0];z.gQ.ClampToRef(Q,F,b,t);return z.gQ.DistanceSquared(Q,t)<=C*C}static IsCompletelyInFrustum(F,b){for(let Q=0;Q<6;++Q){const C=b[Q];for(let b=0;b<8;++b)if(C.dotCoordinate(F[b])<0)return!1}return!0}static IsInFrustum(F,b){for(let Q=0;Q<6;++Q){let C=!0;const z=b[Q];for(let b=0;b<8;++b)if(z.dotCoordinate(F[b])>=0){C=!1;break}if(C)return!1}return!0}}g._TmpVector3=(0,C.b)(3,z.gQ.Zero)},11623:(F,b,Q)=>{Q.d(b,{d:()=>K});var C=Q(11320),z=Q(11309),t=Q(11631),g=Q(11636);const W={min:0,max:0},Z={min:0,max:0},q=(F,b,Q)=>{const C=z.gQ.Dot(b.centerWorld,F),t=Math.abs(z.gQ.Dot(b.directions[0],F))*b.extendSize.x+Math.abs(z.gQ.Dot(b.directions[1],F))*b.extendSize.y+Math.abs(z.gQ.Dot(b.directions[2],F))*b.extendSize.z;Q.min=C-t,Q.max=C+t},G=(F,b,Q)=>(q(F,b,W),q(F,Q,Z),!(W.min>Z.max||Z.min>W.max));class K{constructor(F,b,Q){this._isLocked=!1,this.boundingBox=new t.d(F,b,Q),this.boundingSphere=new g.b(F,b,Q)}reConstruct(F,b,Q){this.boundingBox.reConstruct(F,b,Q),this.boundingSphere.reConstruct(F,b,Q)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(F){this._isLocked=F}update(F){this._isLocked||(this.boundingBox._update(F),this.boundingSphere._update(F))}centerOn(F,b){const Q=K._TmpVector3[0].W(F).PK(b),C=K._TmpVector3[1].W(F).addInPlace(b);return this.boundingBox.reConstruct(Q,C,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(Q,C,this.boundingBox.getWorldMatrix()),this}encapsulate(F){const b=z.gQ.Minimize(this.minimum,F),Q=z.gQ.Maximize(this.maximum,F);return this.reConstruct(b,Q,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(F){const b=z.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(b);const Q=z.TmpVectors.gQ[0];return z.gQ.TransformCoordinatesToRef(F.boundingBox.minimumWorld,b,Q),this.encapsulate(Q),z.gQ.TransformCoordinatesToRef(F.boundingBox.maximumWorld,b,Q),this.encapsulate(Q),this}scale(F){return this.boundingBox.scale(F),this.boundingSphere.scale(F),this}isInFrustum(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===b||3===b)&&this.boundingSphere.isCenterInFrustum(F))return!0;if(!this.boundingSphere.isInFrustum(F))return!1;return!(1!==b&&3!==b)||this.boundingBox.isInFrustum(F)}get diagonalLength(){const F=this.boundingBox;return F.maximumWorld.subtractToRef(F.minimumWorld,K._TmpVector3[0]).length()}isCompletelyInFrustum(F){return this.boundingBox.isCompletelyInFrustum(F)}_checkCollision(F){return F._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(F){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(F)&&!!this.boundingBox.intersectsPoint(F))}intersects(F,b){if(!g.b.Intersects(this.boundingSphere,F.boundingSphere))return!1;if(!t.d.Intersects(this.boundingBox,F.boundingBox))return!1;if(!b)return!0;const Q=this.boundingBox,C=F.boundingBox;return!!G(Q.directions[0],Q,C)&&(!!G(Q.directions[1],Q,C)&&(!!G(Q.directions[2],Q,C)&&(!!G(C.directions[0],Q,C)&&(!!G(C.directions[1],Q,C)&&(!!G(C.directions[2],Q,C)&&(!!G(z.gQ.Cross(Q.directions[0],C.directions[0]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[0],C.directions[1]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[0],C.directions[2]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[1],C.directions[0]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[1],C.directions[1]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[1],C.directions[2]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[2],C.directions[0]),Q,C)&&(!!G(z.gQ.Cross(Q.directions[2],C.directions[1]),Q,C)&&!!G(z.gQ.Cross(Q.directions[2],C.directions[2]),Q,C))))))))))))))}}K._TmpVector3=(0,C.b)(2,z.gQ.Zero)},11636:(F,b,Q)=>{Q.d(b,{b:()=>t});var C=Q(11320),z=Q(11309);class t{constructor(F,b,Q){this.center=z.gQ.Zero(),this.centerWorld=z.gQ.Zero(),this.minimum=z.gQ.Zero(),this.maximum=z.gQ.Zero(),this.reConstruct(F,b,Q)}reConstruct(F,b,Q){this.minimum.W(F),this.maximum.W(b);const C=z.gQ.Distance(F,b);b.addToRef(F,this.center).scaleInPlace(.5),this.radius=.5*C,this._update(Q||z.Matrix.IdentityReadOnly)}scale(F){const b=this.radius*F,Q=t._TmpVector3,C=Q[0].Yb(b),z=this.center.subtractToRef(C,Q[1]),g=this.center.addToRef(C,Q[2]);return this.reConstruct(z,g,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(F){if(F.isIdentity())this.centerWorld.W(this.center),this.radiusWorld=this.radius;else{z.gQ.TransformCoordinatesToRef(this.center,F,this.centerWorld);const b=t._TmpVector3[0];z.gQ.TransformNormalFromFloatsToRef(1,1,1,F,b),this.radiusWorld=Math.max(Math.abs(b.x),Math.abs(b.y),Math.abs(b.z))*this.radius}}isInFrustum(F){const b=this.centerWorld,Q=this.radiusWorld;for(let C=0;C<6;C++)if(F[C].dotCoordinate(b)<=-Q)return!1;return!0}isCenterInFrustum(F){const b=this.centerWorld;for(let Q=0;Q<6;Q++)if(F[Q].dotCoordinate(b)<0)return!1;return!0}intersectsPoint(F){const b=z.gQ.DistanceSquared(this.centerWorld,F);return!(this.radiusWorld*this.radiusWorld<b)}static Intersects(F,b){const Q=z.gQ.DistanceSquared(F.centerWorld,b.centerWorld),C=F.radiusWorld+b.radiusWorld;return!(C*C<Q)}static CreateFromCenterAndRadius(F,b,Q){this._TmpVector3[0].W(F),this._TmpVector3[1].jb(0,0,b),this._TmpVector3[2].W(F),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].PK(this._TmpVector3[1]);const C=new t(this._TmpVector3[0],this._TmpVector3[2]);return C._worldMatrix=Q||z.Matrix.Identity(),C}}t._TmpVector3=(0,C.b)(3,z.gQ.Zero)},11655:(F,b,Q)=>{function C(F){-1===F.indexOf("vClipPlane")&&F.push("vClipPlane"),-1===F.indexOf("vClipPlane2")&&F.push("vClipPlane2"),-1===F.indexOf("vClipPlane3")&&F.push("vClipPlane3"),-1===F.indexOf("vClipPlane4")&&F.push("vClipPlane4"),-1===F.indexOf("vClipPlane5")&&F.push("vClipPlane5"),-1===F.indexOf("vClipPlane6")&&F.push("vClipPlane6")}function z(F,b,Q){const C=!!(F.clipPlane??b.clipPlane),z=!!(F.clipPlane2??b.clipPlane2),t=!!(F.clipPlane3??b.clipPlane3),g=!!(F.clipPlane4??b.clipPlane4),W=!!(F.clipPlane5??b.clipPlane5),Z=!!(F.clipPlane6??b.clipPlane6);C&&Q.push("#define CLIPPLANE"),z&&Q.push("#define CLIPPLANE2"),t&&Q.push("#define CLIPPLANE3"),g&&Q.push("#define CLIPPLANE4"),W&&Q.push("#define CLIPPLANE5"),Z&&Q.push("#define CLIPPLANE6")}function t(F,b,Q){let C=!1;const z=!!(F.clipPlane??b.clipPlane),t=!!(F.clipPlane2??b.clipPlane2),g=!!(F.clipPlane3??b.clipPlane3),W=!!(F.clipPlane4??b.clipPlane4),Z=!!(F.clipPlane5??b.clipPlane5),q=!!(F.clipPlane6??b.clipPlane6);return Q.CLIPPLANE!==z&&(Q.CLIPPLANE=z,C=!0),Q.CLIPPLANE2!==t&&(Q.CLIPPLANE2=t,C=!0),Q.CLIPPLANE3!==g&&(Q.CLIPPLANE3=g,C=!0),Q.CLIPPLANE4!==W&&(Q.CLIPPLANE4=W,C=!0),Q.CLIPPLANE5!==Z&&(Q.CLIPPLANE5=Z,C=!0),Q.CLIPPLANE6!==q&&(Q.CLIPPLANE6=q,C=!0),C}function g(F,b,Q){let C=b.clipPlane??Q.clipPlane;W(F,"vClipPlane",C),C=b.clipPlane2??Q.clipPlane2,W(F,"vClipPlane2",C),C=b.clipPlane3??Q.clipPlane3,W(F,"vClipPlane3",C),C=b.clipPlane4??Q.clipPlane4,W(F,"vClipPlane4",C),C=b.clipPlane5??Q.clipPlane5,W(F,"vClipPlane5",C),C=b.clipPlane6??Q.clipPlane6,W(F,"vClipPlane6",C)}function W(F,b,Q){Q&&F.setFloat4(b,Q.normal.x,Q.normal.y,Q.normal.z,Q.d)}Q.d(b,{b:()=>C,e:()=>g,g:()=>t,j:()=>z})},11600:(F,b,Q)=>{Q.d(b,{c:()=>C});class C{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(F,b){this._defines[F]||(F<this._currentRank&&(this._currentRank=F),F>this._maxRank&&(this._maxRank=F),this._defines[F]=new Array),this._defines[F].push(b)}addCPUSkinningFallback(F,b){this._mesh=b,F<this._currentRank&&(this._currentRank=F),F>this._maxRank&&(this._maxRank=F)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(F,b){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,F=F.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),b._bonesComputationForcedToCPU=!0;const Q=this._mesh.RF();for(let F=0;F<Q.meshes.length;F++){const C=Q.meshes[F];if(C.material){if(C.computeBonesUsingShaders&&0!==C.numBoneInfluencers)if(C.material.getEffect()===b)C.computeBonesUsingShaders=!1;else if(C.Xb)for(const F of C.Xb){if(F.effect===b){C.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&C.computeBonesUsingShaders&&C.numBoneInfluencers>0&&(C.computeBonesUsingShaders=!1)}}else{const b=this._defines[this._currentRank];if(b)for(let Q=0;Q<b.length;Q++)F=F.replace("#define "+b[Q],"");this._currentRank++}return F}}},11607:(F,b,Q)=>{Q.d(b,{c:()=>c});var C=Q(11293),z=Q(11296),t=Q(11128),g=Q(11133),W=Q(11161),Z=Q(11612),q=Q(11553),G=Q(11146),K=Q(11362),e=Q(11423),N=Q(11349);class y{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(F){this._func=F}get funcRef(){return this._funcRef}set funcRef(F){this._funcRef=F}get funcMask(){return this._funcMask}set funcMask(F){this._funcMask=F}get opStencilFail(){return this._opStencilFail}set opStencilFail(F){this._opStencilFail=F}get opDepthFail(){return this._opDepthFail}set opDepthFail(F){this._opDepthFail=F}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(F){this._opStencilDepthPass=F}get mask(){return this._mask}set mask(F){this._mask=F}get enabled(){return this._enabled}set enabled(F){this._enabled=F}getClassName(){return"MaterialStencilState"}copyTo(F){N.e.Clone((()=>F),this)}serialize(){return N.e.Serialize(this)}parse(F,b,Q){N.e.Parse((()=>this),F,b,Q)}}(0,C.b)([(0,z.A)()],y.prototype,"func",null),(0,C.b)([(0,z.A)()],y.prototype,"funcRef",null),(0,C.b)([(0,z.A)()],y.prototype,"funcMask",null),(0,C.b)([(0,z.A)()],y.prototype,"opStencilFail",null),(0,C.b)([(0,z.A)()],y.prototype,"opDepthFail",null),(0,C.b)([(0,z.A)()],y.prototype,"opStencilDepthPass",null),(0,C.b)([(0,z.A)()],y.prototype,"mask",null),(0,C.b)([(0,z.A)()],y.prototype,"enabled",null);var E=Q(11650);class c{get _supportGlowLayer(){return!1}set _glowModeEnabled(F){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(F){if(this._alpha===F)return;const b=this._alpha;this._alpha=F,1!==b&&1!==F||this.EG(c.MiscDirtyFlag+c.PrePassDirtyFlag)}get alpha(){return this._alpha}set nb(F){this._backFaceCulling!==F&&(this._backFaceCulling=F,this.EG(c.TextureDirtyFlag))}get nb(){return this._backFaceCulling}set cullBackFaces(F){this._cullBackFaces!==F&&(this._cullBackFaces=F,this.EG(c.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(F){this._blockDirtyMechanism!==F&&(this._blockDirtyMechanism=F,F||this.pe())}atomicMaterialsUpdate(F){this.blockDirtyMechanism=!0;try{F(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(F){this._onDisposeObserver&&this.Kb.remove(this._onDisposeObserver),this._onDisposeObserver=this.Kb.add(F)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new g.c),this._onBindObservable}set onBind(F){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(F)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new g.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new g.c),this._onEffectCreatedObservable}set alphaMode(F){this._alphaMode!==F&&(this._alphaMode=F,this.EG(c.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(F){this._needDepthPrePass!==F&&(this._needDepthPrePass=F,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(F){this._fogEnabled!==F&&(this._fogEnabled=F,this.EG(c.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case c.WireFrameFillMode:case c.LineListDrawMode:case c.LineLoopDrawMode:case c.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(F){this.fillMode=F?c.WireFrameFillMode:c.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case c.PointFillMode:case c.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(F){this.fillMode=F?c.PointFillMode:c.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(F){this._fillMode!==F&&(this._fillMode=F,this.EG(c.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(F){const b=this.RF().getEngine().getCaps().fragmentDepthSupported;F&&!b&&G.e.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=F&&b,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(F){this._drawWrapper=F}constructor(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Kb=new g.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new y,this._useUBO=!1,this._fillMode=c.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=F;const z=b||W.d.LastCreatedScene;z&&(this._scene=z,this._dirtyCallbacks={},this._forceGLSL=C,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=F||t.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new e.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new q.b(this._scene.getEngine(),void 0,void 0,F),this._useUBO=this.RF().getEngine().supportsUniformBuffers,this._createUniformBuffer(),Q||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),c.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var F;const b=this.RF().getEngine();null===(F=this._uniformBuffer)||void 0===F||F.dispose(),b.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new q.b(b,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new q.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(F){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.pe(),this.checkReadyOnlyOnce=!0}unfreeze(){this.pe(),this.checkReadyOnlyOnce=!1}isReady(F,b){return!0}isReadyForSubMesh(F,b,Q){const C=b.materialDefines;return!!C&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=C,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}RF(){return this._scene}_getEffectiveOrientation(F){return null!==this.sideOrientation?this.sideOrientation:F.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(F){this._transparencyMode!==F&&(this._transparencyMode=F,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===c.MATERIAL_ALPHABLEND||this._transparencyMode===c.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===c.MATERIAL_ALPHATEST||this._transparencyMode===c.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===c.MATERIAL_OPAQUE||this._transparencyMode===c.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(F){return this._hasTransparencyMode?this._transparencyModeIsBlend:F.visibility<1||!this._disableAlphaBlending&&(F.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(F){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(F)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}pe(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const b=this.RF().meshes;for(const Q of b)if(Q.Xb)for(const b of Q.Xb)if(b.TF()===this)for(const Q of b._drawWrappers)Q&&this._materialContext===Q.materialContext&&(Q._wasPreviouslyReady=!1,Q._wasPreviouslyUsingInstances=null,Q._forceRebindOnNextCall=F);F&&this.EG(c.AllDirtyFlag)}_preBind(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const Q=this._scene.getEngine(),C=(null==b?this.sideOrientation:b)===c.ClockWiseSideOrientation;return Q.enableEffect(F||this._getDrawWrapper()),Q.setState(this.nb,this.zOffset,!1,C,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),C}bind(F,b){}buildUniformLayout(){const F=this._uniformBuffer;this._eventInfo.ubo=F,this._callbackPluginEventGeneric(8,this._eventInfo),F.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(F,b,Q){const C=Q._drawWrapper;this._eventInfo.subMesh=Q,this._callbackPluginEventBindForSubMesh(this._eventInfo),C._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(F){}bindView(F){this._useUBO?this._needToBindSceneUbo=!0:F.setMatrix("view",this.RF().getViewMatrix())}bindViewProjection(F){this._useUBO?this._needToBindSceneUbo=!0:(F.setMatrix("viewProjection",this.RF().getTransformMatrix()),F.setMatrix("projection",this.RF().getProjectionMatrix()))}bindEyePosition(F,b){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(F,b)}_afterBind(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&b&&(this._needToBindSceneUbo=!1,(0,E.n)(b,this.RF().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=F?F.visibility:1,this._onBindObservable&&F&&this._onBindObservable.notifyObservers(F),this.disableDepthWrite){const F=this._scene.getEngine();this._cachedDepthWriteState=F.getDepthWrite(),F.setDepthWrite(!1)}if(this.disableColorWrite){const F=this._scene.getEngine();this._cachedColorWriteState=F.getColorWrite(),F.setColorWrite(!1)}if(0!==this.depthFunction){const F=this._scene.getEngine();this._cachedDepthFunctionState=F.getDepthFunction()||0,F.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(F){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=F,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(F){return null}_clonePlugins(F,b){const Q={};if(this._serializePlugins(Q),c._ParsePlugins(Q,F,this._scene,b),this.pluginManager)for(const C of this.pluginManager._plugins){const b=F.pluginManager.getPlugin(C.name);b&&C.copyTo(b)}}getBindedMeshes(){if(this.meshMap){const F=[];for(const b in this.meshMap){const Q=this.meshMap[b];Q&&F.push(Q)}return F}return this._scene.meshes.filter((F=>F.material===this))}forceCompilation(F,b,Q,C){const z={clipPlane:!1,useInstances:!1,...Q},t=this.RF(),g=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const W=()=>{if(!this._scene||!this._scene.getEngine())return;const Q=t.clipPlane;if(z.clipPlane&&(t.clipPlane=new K.d(0,0,0,1)),this._storeEffectOnSubMeshes){let Q=!0,t=null;if(F.Xb){const b=new Z.b(0,0,0,0,0,F,void 0,!1,!1);b.materialDefines&&(b.materialDefines._renderId=-1),this.isReadyForSubMesh(F,b,z.useInstances)||(b.effect&&b.effect.getCompilationError()&&b.effect.allFallbacksProcessed()?t=b.effect.getCompilationError():(Q=!1,setTimeout(W,16)))}Q&&(this.allowShaderHotSwapping=g,t&&C&&C(t),b&&b(this))}else this.isReady()?(this.allowShaderHotSwapping=g,b&&b(this)):setTimeout(W,16);z.clipPlane&&(t.clipPlane=Q)};W()}async forceCompilationAsync(F,b){return await new Promise(((Q,C)=>{this.forceCompilation(F,(()=>{Q()}),b,(F=>{C(F)}))}))}EG(F){this.RF().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(c._DirtyCallbackArray.length=0,F&c.ImageProcessingDirtyFlag&&c._DirtyCallbackArray.push(c._ImageProcessingDirtyCallBack),F&c.TextureDirtyFlag&&c._DirtyCallbackArray.push(c._TextureDirtyCallBack),F&c.LightDirtyFlag&&c._DirtyCallbackArray.push(c._LightsDirtyCallBack),F&c.FresnelDirtyFlag&&c._DirtyCallbackArray.push(c._FresnelDirtyCallBack),F&c.AttributesDirtyFlag&&c._DirtyCallbackArray.push(c._AttributeDirtyCallBack),F&c.MiscDirtyFlag&&c._DirtyCallbackArray.push(c._MiscDirtyCallBack),F&c.PrePassDirtyFlag&&c._DirtyCallbackArray.push(c._PrePassDirtyCallBack),c._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(c._RunDirtyCallBacks),this.RF().resetCachedMaterial())}resetDrawCache(){const F=this.RF().meshes;for(const b of F)if(b.Xb)for(const F of b.Xb)F.TF()===this&&F.resetDrawCache()}_markAllSubMeshesAsDirty(F){const b=this.RF();if(b.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const Q=b.meshes;for(const C of Q)if(C.Xb)for(const Q of C.Xb){if((Q.TF()||(b._hasDefaultMaterial?b.defaultMaterial:null))===this)for(const b of Q._drawWrappers)b&&b.defines&&b.defines.markAllAsDirty&&this._materialContext===b.materialContext&&F(b.defines)}}_markScenePrePassDirty(){if(this.RF().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const F=this.RF().enablePrePassRenderer();F&&F.EG()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(c._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(c._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(c._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(c._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(c._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(c._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(c._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(c._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(c._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(c._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const F=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Kb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(F)}))}}setPrePassRenderer(F){return!1}dispose(F,b,Q){const C=this.RF();if(C.stopAnimation(this),C.freeProcessedMaterials(),C.removeMaterial(this),this._eventInfo.forceDisposeTextures=b,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const F=this._parentContainer.materials.indexOf(this);F>-1&&this._parentContainer.materials.splice(F,1),this._parentContainer=null}if(!0!==Q)if(this.meshMap)for(const z in this.meshMap){const F=this.meshMap[z];this._disposeMeshResources(F)}else{const F=C.meshes;for(const b of F)this._disposeMeshResources(b)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Kb.notifyObservers(this),this.Kb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(F){if(!F)return;const b=F.pb,Q=F._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(F.Xb&&Q)for(const z of F.Xb){const F=z._drawWrappers;for(let t=0;t<F.length;t++){var C;const g=null===(C=F[t])||void 0===C?void 0:C.effect;if(!g)continue;Q[t]===this&&(null===b||void 0===b||b._releaseVertexArrayObject(g),z._removeDrawWrapper(t,!0,!0))}}}else null===b||void 0===b||b._releaseVertexArrayObject(this._drawWrapper.effect);F.material!==this||F.sourceMesh||(F.material=null)}serialize(){const F=N.e.Serialize(this);return F.stencil=this.stencil.serialize(),F.uniqueId=this.uniqueId,this._serializePlugins(F),F}_serializePlugins(F){if(F.plugins={},this.pluginManager)for(const b of this.pluginManager._plugins)b.doNotSerialize||(F.plugins[b.getClassName()]=b.serialize())}static Parse(F,b,Q){if(F.customType){if("BABYLON.PBRMaterial"===F.customType&&F.overloadedAlbedo&&(F.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return G.e.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else F.customType="BABYLON.StandardMaterial";const C=t.Tools.Instantiate(F.customType).Parse(F,b,Q);return C._loadedUniqueId=F.uniqueId,C}static _ParsePlugins(F,b,Q,C){if(F.plugins)for(const W in F.plugins){var z,g;const Z=F.plugins[W];let q=null===(z=b.pluginManager)||void 0===z?void 0:z.getPlugin(Z.name);if(!q){const F=t.Tools.Instantiate("BABYLON."+W);F&&(q=new F(b))}null===(g=q)||void 0===g||g.parse(Z,Q,C)}}}c.TriangleFillMode=0,c.WireFrameFillMode=1,c.PointFillMode=2,c.PointListDrawMode=3,c.LineListDrawMode=4,c.LineLoopDrawMode=5,c.LineStripDrawMode=6,c.TriangleStripDrawMode=7,c.TriangleFanDrawMode=8,c.ClockWiseSideOrientation=0,c.CounterClockWiseSideOrientation=1,c.ImageProcessingDirtyFlag=64,c.TextureDirtyFlag=1,c.LightDirtyFlag=2,c.FresnelDirtyFlag=4,c.AttributesDirtyFlag=8,c.MiscDirtyFlag=16,c.PrePassDirtyFlag=32,c.AllDirtyFlag=127,c.MATERIAL_OPAQUE=0,c.MATERIAL_ALPHATEST=1,c.MATERIAL_ALPHABLEND=2,c.MATERIAL_ALPHATESTANDBLEND=3,c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,c.MATERIAL_NORMALBLENDMETHOD_RNM=1,c.OnEventObservable=new g.c,c._AllDirtyCallBack=F=>F.markAllAsDirty(),c._ImageProcessingDirtyCallBack=F=>F.markAsImageProcessingDirty(),c._TextureDirtyCallBack=F=>F.markAsTexturesDirty(),c._FresnelDirtyCallBack=F=>F.markAsFresnelDirty(),c._MiscDirtyCallBack=F=>F.markAsMiscDirty(),c._PrePassDirtyCallBack=F=>F.markAsPrePassDirty(),c._LightsDirtyCallBack=F=>F.markAsLightDirty(),c._AttributeDirtyCallBack=F=>F.markAsAttributesDirty(),c._FresnelAndMiscDirtyCallBack=F=>{c._FresnelDirtyCallBack(F),c._MiscDirtyCallBack(F)},c._TextureAndMiscDirtyCallBack=F=>{c._TextureDirtyCallBack(F),c._MiscDirtyCallBack(F)},c._DirtyCallbackArray=[],c._RunDirtyCallBacks=F=>{for(const b of c._DirtyCallbackArray)b(F)},(0,C.b)([(0,z.A)()],c.prototype,"id",void 0),(0,C.b)([(0,z.A)()],c.prototype,"uniqueId",void 0),(0,C.b)([(0,z.A)()],c.prototype,"name",void 0),(0,C.b)([(0,z.A)()],c.prototype,"metadata",void 0),(0,C.b)([(0,z.A)()],c.prototype,"checkReadyOnEveryCall",void 0),(0,C.b)([(0,z.A)()],c.prototype,"checkReadyOnlyOnce",void 0),(0,C.b)([(0,z.A)()],c.prototype,"state",void 0),(0,C.b)([(0,z.A)("alpha")],c.prototype,"_alpha",void 0),(0,C.b)([(0,z.A)("nb")],c.prototype,"_backFaceCulling",void 0),(0,C.b)([(0,z.A)("cullBackFaces")],c.prototype,"_cullBackFaces",void 0),(0,C.b)([(0,z.A)()],c.prototype,"sideOrientation",void 0),(0,C.b)([(0,z.A)("alphaMode")],c.prototype,"_alphaMode",void 0),(0,C.b)([(0,z.A)()],c.prototype,"_needDepthPrePass",void 0),(0,C.b)([(0,z.A)()],c.prototype,"disableDepthWrite",void 0),(0,C.b)([(0,z.A)()],c.prototype,"disableColorWrite",void 0),(0,C.b)([(0,z.A)()],c.prototype,"forceDepthWrite",void 0),(0,C.b)([(0,z.A)()],c.prototype,"depthFunction",void 0),(0,C.b)([(0,z.A)()],c.prototype,"separateCullingPass",void 0),(0,C.b)([(0,z.A)("fogEnabled")],c.prototype,"_fogEnabled",void 0),(0,C.b)([(0,z.A)()],c.prototype,"pointSize",void 0),(0,C.b)([(0,z.A)()],c.prototype,"zOffset",void 0),(0,C.b)([(0,z.A)()],c.prototype,"zOffsetUnits",void 0),(0,C.b)([(0,z.A)()],c.prototype,"pointsCloud",null),(0,C.b)([(0,z.A)()],c.prototype,"fillMode",null),(0,C.b)([(0,z.A)()],c.prototype,"useLogarithmicDepth",null),(0,C.b)([(0,z.A)()],c.prototype,"transparencyMode",null)},11650:(F,b,Q)=>{Q.d(b,{C:()=>p,F:()=>N,I:()=>e,L:()=>Y,P:()=>w,S:()=>n,T:()=>X,U:()=>P,Y:()=>s,_:()=>V,cb:()=>h,e:()=>f,fb:()=>T,h:()=>K,ib:()=>y,j:()=>m,k:()=>G,l:()=>E,n:()=>c,r:()=>L,v:()=>D,y:()=>i,z:()=>R});var C=Q(11146),z=Q(11359),t=Q(11161),g=Q(11597),W=Q(11655);const Z=z.GQ.Black(),q={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function G(F,b,Q){if(!F||F.LOGARITHMICDEPTH||F.indexOf&&F.indexOf("LOGARITHMICDEPTH")>=0){const F=Q.activeCamera;1===F.mode&&C.e.Error("Logarithmic depth is not compatible with orthographic cameras!",20),b.setFloat("logarithmicDepthConstant",2/(Math.log(F.maxZ+1)/Math.LN2))}}function K(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Q&&F.fogEnabled&&(!b||b.applyFog)&&0!==F.fogMode&&(Q.setFloat4("vFogInfos",F.fogMode,F.fogStart,F.fogEnd,F.fogDensity),C?(F.fogColor.toLinearSpaceToRef(Z,F.getEngine().useExactSrgbConversions),Q.setColor3("vFogColor",Z)):Q.setColor3("vFogColor",F.fogColor))}function e(F,b,Q,C,z,t,g,W,Z,G){const K=F.numMaxInfluencers||F.numInfluencers;return K<=0?0:(b.push("#define MORPHTARGETS"),F.hasPositions&&b.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),F.hasNormals&&b.push("#define MORPHTARGETTEXTURE_HASNORMALS"),F.hasTangents&&b.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),F.hasUVs&&b.push("#define MORPHTARGETTEXTURE_HASUVS"),F.hasUV2s&&b.push("#define MORPHTARGETTEXTURE_HASUV2S"),F.hasColors&&b.push("#define MORPHTARGETTEXTURE_HASCOLORS"),F.supportsPositions&&z&&b.push("#define MORPHTARGETS_POSITION"),F.supportsNormals&&t&&b.push("#define MORPHTARGETS_NORMAL"),F.supportsTangents&&g&&b.push("#define MORPHTARGETS_TANGENT"),F.supportsUVs&&W&&b.push("#define MORPHTARGETS_UV"),F.supportsUV2s&&Z&&b.push("#define MORPHTARGETS_UV2"),F.supportsColors&&G&&b.push("#define MORPHTARGETS_COLOR"),b.push("#define NUM_MORPH_INFLUENCERS "+K),F.isUsingTextureForTargets&&b.push("#define MORPHTARGETS_TEXTURE"),q.NUM_MORPH_INFLUENCERS=K,q.NORMAL=t,q.TANGENT=g,q.UV=W,q.UV2=Z,q.COLOR=G,N(Q,C,q,z),K)}function N(F,b,Q){let z=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const g=Q.NUM_MORPH_INFLUENCERS;if(g>0&&t.d.LastCreatedEngine){const W=t.d.LastCreatedEngine.getCaps().maxVertexAttribs,Z=b.morphTargetManager;if(null!==Z&&void 0!==Z&&Z.isUsingTextureForTargets)return;const q=Z&&Z.supportsPositions&&z,G=Z&&Z.supportsNormals&&Q.NORMAL,K=Z&&Z.supportsTangents&&Q.TANGENT,e=Z&&Z.supportsUVs&&Q.UV1,N=Z&&Z.supportsUV2s&&Q.UV2,y=Z&&Z.supportsColors&&Q.VERTEXCOLOR;for(let Q=0;Q<g;Q++)q&&F.push("position"+Q),G&&F.push("normal"+Q),K&&F.push("tangent"+Q),e&&F.push("uv_"+Q),N&&F.push("uv2_"+Q),y&&F.push("color"+Q),F.length>W&&C.e.Error("Cannot add more vertex attributes for mesh "+b.name)}}function y(F){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];F.push("world0"),F.push("world1"),F.push("world2"),F.push("world3"),b&&(F.push("previousWorld0"),F.push("previousWorld1"),F.push("previousWorld2"),F.push("previousWorld3"))}function E(F,b){const Q=F.morphTargetManager;F&&Q&&b.setFloatArray("morphTargetInfluences",Q.influences)}function c(F,b){b.bindToEffect(F,"Scene")}function X(F,b,Q){b._needUVs=!0,b[Q]=!0,F.optimizeUVAllocation&&F.getTextureMatrix().isIdentityAs3x2()?(b[Q+"DIRECTUV"]=F.coordinatesIndex+1,b["MAINUV"+(F.coordinatesIndex+1)]=!0):b[Q+"DIRECTUV"]=0}function L(F,b,Q){const C=F.getTextureMatrix();b.mb(Q+"Matrix",C)}function i(F,b,Q){Q.BAKED_VERTEX_ANIMATION_TEXTURE&&Q.INSTANCES&&F.push("bakedVertexAnimationSettingsInstanced")}function f(F,b,Q){var C;if(b&&F&&(F.computeBonesUsingShaders&&b._bonesComputationForcedToCPU&&(F.computeBonesUsingShaders=!1),F.useBones&&F.computeBonesUsingShaders&&F.skeleton)){const z=F.skeleton;if(z.isUsingTextureForMatrices&&b.getUniformIndex("boneTextureWidth")>-1){const Q=z.getTransformMatrixTexture(F);b.setTexture("boneSampler",Q),b.setFloat("boneTextureWidth",4*(z.bones.length+1))}else{const t=z.getTransformMatrices(F);t&&(b.setMatrices("mBones",t),Q&&F.RF().prePassRenderer&&F.RF().prePassRenderer.getIndex(2)&&(Q.previousBones[F.uniqueId]||(Q.previousBones[F.uniqueId]=t.slice()),b.setMatrices("mPreviousBones",Q.previousBones[F.uniqueId]),C=t,Q.previousBones[F.uniqueId].set(C)))}}}function k(F,b,Q,C,z){let t=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];F._bindLight(b,Q,C,z,t)}function m(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const t=Math.min(b.lightSources.length,z);for(let g=0;g<t;g++){k(b.lightSources[g],g,F,Q,"boolean"===typeof C?C:C.SPECULARTERM,b.receiveShadows)}}function R(F,b,Q,C){Q.NUM_BONE_INFLUENCERS>0&&(C.addCPUSkinningFallback(0,b),F.push("matricesIndices"),F.push("matricesWeights"),Q.NUM_BONE_INFLUENCERS>4&&(F.push("matricesIndicesExtra"),F.push("matricesWeightsExtra")))}function p(F,b){(b.INSTANCES||b.THIN_INSTANCES)&&y(F,!!b.PREPASS_VELOCITY),b.INSTANCESCOLOR&&F.push("instanceColor")}function D(F,b){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,z=0;for(let t=0;t<Q&&F["LIGHT"+t];t++)t>0&&(z=C+t,b.addFallback(z,"LIGHT"+t)),F.SHADOWS||(F["SHADOW"+t]&&b.addFallback(C,"SHADOW"+t),F["SHADOWPCF"+t]&&b.addFallback(C,"SHADOWPCF"+t),F["SHADOWPCSS"+t]&&b.addFallback(C,"SHADOWPCSS"+t),F["SHADOWPOISSON"+t]&&b.addFallback(C,"SHADOWPOISSON"+t),F["SHADOWESM"+t]&&b.addFallback(C,"SHADOWESM"+t),F["SHADOWCLOSEESM"+t]&&b.addFallback(C,"SHADOWCLOSEESM"+t));return z++}function P(F,b,Q,C,z,t,g){let W=arguments.length>7&&void 0!==arguments[7]&&arguments[7];g._areMiscDirty&&(g.LOGARITHMICDEPTH=Q,g.POINTSIZE=C,g.FOG=z&&function(F,b){return b.fogEnabled&&F.applyFog&&0!==b.fogMode}(F,b),g.NONUNIFORMSCALING=F.nonUniformScaling,g.ALPHATEST=t,g.DECAL_AFTER_DETAIL=W)}function n(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!Q._areLightsDirty)return Q._needNormals;let g=0;const W={needNormals:Q._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(F.lightsEnabled&&!t)for(const q of b.lightSources)if(j(F,b,q,g,Q,C,W),g++,g===z)break;Q.SPECULARTERM=W.specularEnabled,Q.SHADOWS=W.shadowEnabled;for(let q=g;q<z;q++)void 0!==Q["LIGHT"+q]&&(Q["LIGHT"+q]=!1,Q["HEMILIGHT"+q]=!1,Q["POINTLIGHT"+q]=!1,Q["DIRLIGHT"+q]=!1,Q["SPOTLIGHT"+q]=!1,Q["AREALIGHT"+q]=!1,Q["SHADOW"+q]=!1,Q["SHADOWCSM"+q]=!1,Q["SHADOWCSMDEBUG"+q]=!1,Q["SHADOWCSMNUM_CASCADES"+q]=!1,Q["SHADOWCSMUSESHADOWMAXZ"+q]=!1,Q["SHADOWCSMNOBLEND"+q]=!1,Q["SHADOWCSM_RIGHTHANDED"+q]=!1,Q["SHADOWPCF"+q]=!1,Q["SHADOWPCSS"+q]=!1,Q["SHADOWPOISSON"+q]=!1,Q["SHADOWESM"+q]=!1,Q["SHADOWCLOSEESM"+q]=!1,Q["SHADOWCUBE"+q]=!1,Q["SHADOWLOWQUALITY"+q]=!1,Q["SHADOWMEDIUMQUALITY"+q]=!1);const Z=F.getEngine().getCaps();return void 0===Q.SHADOWFLOAT&&(W.needRebuild=!0),Q.SHADOWFLOAT=W.shadowEnabled&&(Z.textureFloatRender&&Z.textureFloatLinearFiltering||Z.textureHalfFloatRender&&Z.textureHalfFloatLinearFiltering),Q.LIGHTMAPEXCLUDED=W.lightmapMode,W.needRebuild&&Q.rebuild(),W.needNormals}function j(F,b,Q,C,z,t,W){switch(W.needNormals=!0,void 0===z["LIGHT"+C]&&(W.needRebuild=!0),z["LIGHT"+C]=!0,z["SPOTLIGHT"+C]=!1,z["HEMILIGHT"+C]=!1,z["POINTLIGHT"+C]=!1,z["DIRLIGHT"+C]=!1,z["AREALIGHT"+C]=!1,Q.prepareLightSpecificDefines(z,C),z["LIGHT_FALLOFF_PHYSICAL"+C]=!1,z["LIGHT_FALLOFF_GLTF"+C]=!1,z["LIGHT_FALLOFF_STANDARD"+C]=!1,Q.falloffType){case g.e.FALLOFF_GLTF:z["LIGHT_FALLOFF_GLTF"+C]=!0;break;case g.e.FALLOFF_PHYSICAL:z["LIGHT_FALLOFF_PHYSICAL"+C]=!0;break;case g.e.FALLOFF_STANDARD:z["LIGHT_FALLOFF_STANDARD"+C]=!0}if(t&&!Q.OG.equalsFloats(0,0,0)&&(W.specularEnabled=!0),z["SHADOW"+C]=!1,z["SHADOWCSM"+C]=!1,z["SHADOWCSMDEBUG"+C]=!1,z["SHADOWCSMNUM_CASCADES"+C]=!1,z["SHADOWCSMUSESHADOWMAXZ"+C]=!1,z["SHADOWCSMNOBLEND"+C]=!1,z["SHADOWCSM_RIGHTHANDED"+C]=!1,z["SHADOWPCF"+C]=!1,z["SHADOWPCSS"+C]=!1,z["SHADOWPOISSON"+C]=!1,z["SHADOWESM"+C]=!1,z["SHADOWCLOSEESM"+C]=!1,z["SHADOWCUBE"+C]=!1,z["SHADOWLOWQUALITY"+C]=!1,z["SHADOWMEDIUMQUALITY"+C]=!1,b&&b.receiveShadows&&F.shadowsEnabled&&Q.shadowEnabled){const b=Q.getShadowGenerator(F.activeCamera)??Q.getShadowGenerator();if(b){const F=b.getShadowMap();F&&F.renderList&&F.renderList.length>0&&(W.shadowEnabled=!0,b.prepareDefines(z,C))}}Q.lightmapMode!=g.e.LIGHTMAP_DEFAULT?(W.lightmapMode=!0,z["LIGHTMAPEXCLUDED"+C]=!0,z["LIGHTMAPNOSPECULAR"+C]=Q.lightmapMode==g.e.LIGHTMAP_SHADOWSONLY):(z["LIGHTMAPEXCLUDED"+C]=!1,z["LIGHTMAPNOSPECULAR"+C]=!1)}function w(F,b,Q,C,z){let t=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=function(F,b){let Q=!1;if(F.activeCamera){const C=b.CAMERA_ORTHOGRAPHIC?1:0,z=b.CAMERA_PERSPECTIVE?1:0,t=1===F.activeCamera.mode?1:0,g=0===F.activeCamera.mode?1:0;(C^t||z^g)&&(b.CAMERA_ORTHOGRAPHIC=1===t,b.CAMERA_PERSPECTIVE=1===g,Q=!0)}return Q}(F,C);!1!==t&&(Z=(0,W.g)(Q,F,C)),C.DEPTHPREPASS!==!b.getColorWrite()&&(C.DEPTHPREPASS=!C.DEPTHPREPASS,Z=!0),C.INSTANCES!==z&&(C.INSTANCES=z,Z=!0),C.THIN_INSTANCES!==g&&(C.THIN_INSTANCES=g,Z=!0),Z&&C.markAsUnprocessed()}function Y(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],t=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],g=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!b._areAttributesDirty&&b._needNormals===b._normals&&b._needUVs===b._uvs)return!1;b._normals=b._needNormals,b._uvs=b._needUVs,b.NORMAL=b._needNormals&&F.isVerticesDataPresent("normal"),b._needNormals&&F.isVerticesDataPresent("tangent")&&(b.TANGENT=!0);for(let W=1;W<=6;++W)b["UV"+W]=!!b._needUVs&&F.isVerticesDataPresent(`uv${1===W?"":W}`);if(Q){const Q=F.useVertexColors&&F.isVerticesDataPresent("color");b.VERTEXCOLOR=Q,b.VERTEXALPHA=F.hasVertexAlpha&&Q&&t}return F.isVerticesDataPresent("instanceColor")&&(F.hasInstances||F.hasThinInstances)&&(b.INSTANCESCOLOR=!0),C&&function(F,b){if(F.useBones&&F.computeBonesUsingShaders&&F.skeleton){b.NUM_BONE_INFLUENCERS=F.numBoneInfluencers;const Q=void 0!==b.BONETEXTURE;if(F.skeleton.isUsingTextureForMatrices&&Q)b.BONETEXTURE=!0;else{b.BonesPerMesh=F.skeleton.bones.length+1,b.BONETEXTURE=!Q&&void 0;const C=F.RF().prePassRenderer;if(C&&C.enabled){const Q=-1===C.excludedSkinnedMesh.indexOf(F);b.BONES_VELOCITY_ENABLED=Q}}}else b.NUM_BONE_INFLUENCERS=0,b.BonesPerMesh=0,void 0!==b.BONETEXTURE&&(b.BONETEXTURE=!1)}(F,b),z&&function(F,b){const Q=F.morphTargetManager;Q?(b.MORPHTARGETS_UV=Q.supportsUVs&&b.UV1,b.MORPHTARGETS_UV2=Q.supportsUV2s&&b.UV2,b.MORPHTARGETS_TANGENT=Q.supportsTangents&&b.TANGENT,b.MORPHTARGETS_NORMAL=Q.supportsNormals&&b.NORMAL,b.MORPHTARGETS_POSITION=Q.supportsPositions,b.MORPHTARGETS_COLOR=Q.supportsColors,b.MORPHTARGETTEXTURE_HASUVS=Q.hasUVs,b.MORPHTARGETTEXTURE_HASUV2S=Q.hasUV2s,b.MORPHTARGETTEXTURE_HASTANGENTS=Q.hasTangents,b.MORPHTARGETTEXTURE_HASNORMALS=Q.hasNormals,b.MORPHTARGETTEXTURE_HASPOSITIONS=Q.hasPositions,b.MORPHTARGETTEXTURE_HASCOLORS=Q.hasColors,b.NUM_MORPH_INFLUENCERS=Q.numMaxInfluencers||Q.numInfluencers,b.MORPHTARGETS=b.NUM_MORPH_INFLUENCERS>0,b.MORPHTARGETS_TEXTURE=Q.isUsingTextureForTargets):(b.MORPHTARGETS_UV=!1,b.MORPHTARGETS_UV2=!1,b.MORPHTARGETS_TANGENT=!1,b.MORPHTARGETS_NORMAL=!1,b.MORPHTARGETS_POSITION=!1,b.MORPHTARGETS_COLOR=!1,b.MORPHTARGETTEXTURE_HASUVS=!1,b.MORPHTARGETTEXTURE_HASUV2S=!1,b.MORPHTARGETTEXTURE_HASTANGENTS=!1,b.MORPHTARGETTEXTURE_HASNORMALS=!1,b.MORPHTARGETTEXTURE_HASPOSITIONS=!1,b.MORPHTARGETTEXTURE_HAS_COLORS=!1,b.MORPHTARGETS=!1,b.NUM_MORPH_INFLUENCERS=0)}(F,b),g&&function(F,b){const Q=F.bakedVertexAnimationManager;b.BAKED_VERTEX_ANIMATION_TEXTURE=!(!Q||!Q.isEnabled)}(F,b),!0}function s(F,b){if(F.activeCamera){const Q=b.MULTIVIEW;b.MULTIVIEW=null!==F.activeCamera.outputRenderTarget&&F.activeCamera.outputRenderTarget.getViewCount()>1,b.MULTIVIEW!=Q&&b.markAsUnprocessed()}}function V(F,b,Q){const C=b.ORDER_INDEPENDENT_TRANSPARENCY,z=b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;b.ORDER_INDEPENDENT_TRANSPARENCY=F.useOrderIndependentTransparency&&Q,b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!F.getEngine().getCaps().textureFloatLinearFiltering,C===b.ORDER_INDEPENDENT_TRANSPARENCY&&z===b.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||b.markAsUnprocessed()}function h(F,b,Q){const C=b.PREPASS;if(!b._arePrePassDirty)return;const z=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(F.prePassRenderer&&F.prePassRenderer.enabled&&Q){b.PREPASS=!0,b.SCENE_MRT_COUNT=F.prePassRenderer.mrtCount,b.PREPASS_NORMAL_WORLDSPACE=F.prePassRenderer.generateNormalsInWorldSpace,b.PREPASS_COLOR=!0,b.PREPASS_COLOR_INDEX=0;for(let Q=0;Q<z.length;Q++){const C=F.prePassRenderer.getIndex(z[Q].type);-1!==C?(b[z[Q].define]=!0,b[z[Q].index]=C):b[z[Q].define]=!1}}else{b.PREPASS=!1;for(let F=0;F<z.length;F++)b[z[F].define]=!1}b.PREPASS!=C&&(b.markAsUnprocessed(),b.markAsImageProcessingDirty())}function l(F,b,Q,C){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];z&&z.push("Light"+F),t||(b.push("vLightData"+F,"vLightDiffuse"+F,"vLightSpecular"+F,"vLightDirection"+F,"vLightWidth"+F,"vLightHeight"+F,"vLightFalloff"+F,"vLightGround"+F,"lightMatrix"+F,"shadowsInfo"+F,"depthValues"+F),Q.push("shadowTexture"+F),Q.push("depthTexture"+F),b.push("viewFrustumZ"+F,"cascadeBlendFactor"+F,"lightSizeUVCorrection"+F,"depthCorrection"+F,"penumbraDarkness"+F,"frustumLengths"+F),C&&(Q.push("projectionLightTexture"+F),b.push("textureProjectionMatrix"+F)),g&&Q.push("iesLightTexture"+F))}function T(F,b,Q){let C,z,t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(F.uniformsNames){const g=F;C=g.uniformsNames,z=g.uniformBuffersNames,b=g.samplers,Q=g.defines,t=g.maxSimultaneousLights||0}else C=F,b||(b=[]);for(let g=0;g<t&&Q["LIGHT"+g];g++)l(g,C,b,Q["PROJECTEDLIGHTTEXTURE"+g],z,!1,Q["IESLIGHTTEXTURE"+g]);Q.NUM_MORPH_INFLUENCERS&&(C.push("morphTargetInfluences"),C.push("morphTargetCount")),Q.BAKED_VERTEX_ANIMATION_TEXTURE&&(C.push("bakedVertexAnimationSettings"),C.push("bakedVertexAnimationTextureSizeInverted"),C.push("bakedVertexAnimationTime"),b.push("bakedVertexAnimationTexture"))}},11602:(F,b,Q)=>{Q.d(b,{c:()=>t});var C=Q(11309),z=Q(11607);class t extends z.c{constructor(F,b){let Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(F,b,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new C.Matrix,this._storeEffectOnSubMeshes=Q}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(F,b){return!!F&&(!this._storeEffectOnSubMeshes||(!F.Xb||0===F.Xb.length||this.isReadyForSubMesh(F,F.Xb[0],b)))}_isReadyForSubMesh(F){const b=F.materialDefines;return!(this.checkReadyOnEveryCall||!F.effect||!b||b._renderId!==this.RF().getRenderId())}bindOnlyWorldMatrix(F){this._activeEffect.setMatrix("world",F)}bindOnlyNormalMatrix(F){this._activeEffect.setMatrix("normalMatrix",F)}bind(F,b){b&&this.bindForSubMesh(F,b,b.Xb[0])}_afterBind(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2?arguments[2]:void 0;super._afterBind(F,b,Q),this.RF()._cachedEffect=b,Q?Q._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return Q._drawWrapper._forceRebindOnNextCall||F.isCachedMaterialInvalid(this,b,C)}dispose(F,b,Q){this._activeEffect=void 0,super.dispose(F,b,Q)}}},11641:(F,b,Q)=>{Q.d(b,{e:()=>W,i:()=>Z});var C=Q(11293),z=Q(11309),t=Q(11296);class g{static extractMinAndMaxIndexed(F,b,Q,C,z,t){for(let g=Q;g<Q+C;g++){const Q=3*b[g],C=F[Q],W=F[Q+1],Z=F[Q+2];z.minimizeInPlaceFromFloats(C,W,Z),t.maximizeInPlaceFromFloats(C,W,Z)}}static extractMinAndMax(F,b,Q,C,z,t){for(let g=b,W=b*C;g<b+Q;g++,W+=C){const b=F[W],Q=F[W+1],C=F[W+2];z.minimizeInPlaceFromFloats(b,Q,C),t.maximizeInPlaceFromFloats(b,Q,C)}}}function W(F,b,Q,C){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const W=new z.gQ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),Z=new z.gQ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return g.extractMinAndMaxIndexed(F,b,Q,C,W,Z),t&&(W.x-=W.x*t.x+t.y,W.y-=W.y*t.x+t.y,W.z-=W.z*t.x+t.y,Z.x+=Z.x*t.x+t.y,Z.y+=Z.y*t.x+t.y,Z.z+=Z.z*t.x+t.y),{minimum:W,maximum:Z}}function Z(F,b,Q){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,t=arguments.length>4?arguments[4]:void 0;const W=new z.gQ(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),Z=new z.gQ(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return t||(t=3),g.extractMinAndMax(F,b,Q,t,W,Z),C&&(W.x-=W.x*C.x+C.y,W.y-=W.y*C.x+C.y,W.z-=W.z*C.x+C.y,Z.x+=Z.x*C.x+C.y,Z.y+=Z.y*C.x+C.y,Z.z+=Z.z*C.x+C.y),{minimum:W,maximum:Z}}(0,C.b)([t.f.filter((function(){for(var F=arguments.length,b=new Array(F),Q=0;Q<F;Q++)b[Q]=arguments[Q];let[C,z]=b;return!Array.isArray(C)&&!Array.isArray(z)}))],g,"extractMinAndMaxIndexed",null),(0,C.b)([t.f.filter((function(){for(var F=arguments.length,b=new Array(F),Q=0;Q<F;Q++)b[Q]=arguments[Q];let[C]=b;return!Array.isArray(C)}))],g,"extractMinAndMax",null)},11612:(F,b,Q)=>{Q.d(b,{b:()=>Z});var C=Q(11372),z=Q(11620),t=Q(11623),g=Q(11641),W=Q(11423);class Z{get materialDefines(){var F;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(F=this._getDrawWrapper())||void 0===F?void 0:F.defines}set materialDefines(F){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=F}_getDrawWrapper(F){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];F=F??this._engine.currentRenderPassId;let Q=this._drawWrappers[F];return!Q&&b&&(this._drawWrappers[F]=Q=new W.c(this._mesh.RF().getEngine())),Q}_removeDrawWrapper(F){let b=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var Q;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(Q=this._drawWrappers[F])||void 0===Q||Q.dispose(b));this._drawWrappers[F]=void 0}get effect(){var F;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(F=this._getDrawWrapper())||void 0===F?void 0:F.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(F){this._mainDrawWrapperOverride=F}setEffect(F){let b=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2?arguments[2]:void 0,C=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const z=this._drawWrapper;z.setEffect(F,b,C),void 0!==Q&&(z.materialContext=Q),F||(z.defines=null,z.materialContext=void 0)}resetDrawCache(F){let b=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==F)return void this._removeDrawWrapper(F,!0,b);for(const F of this._drawWrappers)null===F||void 0===F||F.dispose(b)}this._drawWrappers=[]}static AddToMesh(F,b,Q,C,z,t,g){return new Z(F,b,Q,C,z,t,g,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(F,b,Q,C,z,t,g){let W=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],Z=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=F,this.verticesStart=b,this.verticesCount=Q,this.indexStart=C,this.indexCount=z,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=t,this._renderingMesh=g||t,Z&&t.Xb.push(this),this._engine=this._mesh.RF().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=t.Xb.length-1,W&&(this.refreshBoundingInfo(),t.Rb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(F){return this._boundingInfo=F,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const F=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return F||this._renderingMesh}TF(){let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const b=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!b)return F&&this._mesh.RF()._hasDefaultMaterial?this._mesh.RF().defaultMaterial:null;if(this._isMultiMaterial(b)){const F=b.getSubMaterial(this.materialIndex);return this._currentMaterial!==F&&(this._currentMaterial=F,this.resetDrawCache()),F}return b}_isMultiMaterial(F){return void 0!==F.getSubMaterial}refreshBoundingInfo(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.pb)return this;if(F||(F=this._renderingMesh.getVerticesData(C.e.PositionKind)),!F)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const b=this._renderingMesh.Pb();let Q;if(0===this.indexStart&&this.indexCount===b.length){const F=this._renderingMesh.getBoundingInfo();Q={minimum:F.minimum.clone(),maximum:F.maximum.clone()}}else Q=(0,g.e)(F,b,this.indexStart,this.indexCount,this._renderingMesh.pb.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(Q.minimum,Q.maximum):this._boundingInfo=new t.d(Q.minimum,Q.maximum),this}_checkCollision(F){return this.getBoundingInfo()._checkCollision(F)}updateBoundingInfo(F){let b=this.getBoundingInfo();return b||(this.refreshBoundingInfo(),b=this.getBoundingInfo()),b&&b.update(F),this}isInFrustum(F){const b=this.getBoundingInfo();return!!b&&b.isInFrustum(F,this._mesh.aK)}isCompletelyInFrustum(F){const b=this.getBoundingInfo();return!!b&&b.isCompletelyInFrustum(F)}render(F){return this._renderingMesh.render(this,F,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(F,b){if(!this._linesIndexBuffer){const Q=6*Math.floor(this.indexCount/3),C=this.verticesStart+this.verticesCount>65535?new Uint32Array(Q):new Uint16Array(Q);let z=0;if(0===F.length)for(let F=this.indexStart;F<this.indexStart+this.indexCount;F+=3)C[z++]=F,C[z++]=F+1,C[z++]=F+1,C[z++]=F+2,C[z++]=F+2,C[z++]=F;else for(let b=this.indexStart;b<this.indexStart+this.indexCount;b+=3)C[z++]=F[b],C[z++]=F[b+1],C[z++]=F[b+1],C[z++]=F[b+2],C[z++]=F[b+2],C[z++]=F[b];this._linesIndexBuffer=b.createIndexBuffer(C),this._linesIndexCount=C.length}return this._linesIndexBuffer}canIntersects(F){const b=this.getBoundingInfo();return!!b&&F.intersectsBox(b.boundingBox)}intersects(F,b,Q,C,z){const t=this.TF();if(!t)return null;let g=3,W=!1;switch(t.fillMode){case 3:case 5:case 6:case 8:return null;case 7:g=1,W=!0}return 4===t.fillMode?Q.length?this._intersectLines(F,b,Q,this._mesh.intersectionThreshold,C):this._intersectUnIndexedLines(F,b,Q,this._mesh.intersectionThreshold,C):!Q.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(F,b,Q,C,z):this._intersectTriangles(F,b,Q,g,W,C,z)}_intersectLines(F,b,Q,C,t){let g=null;for(let W=this.indexStart;W<this.indexStart+this.indexCount;W+=2){const Z=b[Q[W]],q=b[Q[W+1]],G=F.intersectionSegment(Z,q,C);if(!(G<0)&&((t||!g||G<g.distance)&&(g=new z.d(null,null,G),g.faceId=W/2,t)))break}return g}_intersectUnIndexedLines(F,b,Q,C,t){let g=null;for(let W=this.verticesStart;W<this.verticesStart+this.verticesCount;W+=2){const Q=b[W],Z=b[W+1],q=F.intersectionSegment(Q,Z,C);if(!(q<0)&&((t||!g||q<g.distance)&&(g=new z.d(null,null,q),g.faceId=W/2,t)))break}return g}_intersectTriangles(F,b,Q,C,z,t,g){let W=null,Z=-1;for(let q=this.indexStart;q<this.indexStart+this.indexCount-(3-C);q+=C){Z++;const C=Q[q],G=Q[q+1],K=Q[q+2];if(z&&4294967295===K){q+=2;continue}const e=b[C],N=b[G],y=b[K];if(!e||!N||!y)continue;if(g&&!g(e,N,y,F,C,G,K))continue;const E=F.intersectsTriangle(e,N,y);if(E){if(E.distance<0)continue;if((t||!W||E.distance<W.distance)&&(W=E,W.faceId=Z,t))break}}return W}_intersectUnIndexedTriangles(F,b,Q,C,z){let t=null;for(let g=this.verticesStart;g<this.verticesStart+this.verticesCount;g+=3){const Q=b[g],W=b[g+1],Z=b[g+2];if(z&&!z(Q,W,Z,F,-1,-1,-1))continue;const q=F.intersectsTriangle(Q,W,Z);if(q){if(q.distance<0)continue;if((C||!t||q.distance<t.distance)&&(t=q,t.faceId=g/3,C))break}}return t}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(F,b){const Q=new Z(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,F,b,!1);if(!this.IsGlobal){const F=this.getBoundingInfo();if(!F)return Q;Q._boundingInfo=new t.d(F.minimum,F.maximum)}return Q}dispose(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.RF().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const b=this._mesh.Xb.indexOf(this);this._mesh.Xb.splice(b,1),this.resetDrawCache(void 0,F)}getClassName(){return"SubMesh"}static CreateFromIndices(F,b,Q,C,z){let t=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],g=Number.MAX_VALUE,W=-Number.MAX_VALUE;const q=(z||C).Pb();for(let Z=b;Z<b+Q;Z++){const F=q[Z];F<g&&(g=F),F>W&&(W=F)}return new Z(F,g,W-g+1,b,Q,C,z,t)}}}}]);