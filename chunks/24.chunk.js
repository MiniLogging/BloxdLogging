"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[24],{12066:(D,l,G)=>{G.d(l,{e:()=>V});class V{constructor(D,l,G){this.bu=D,this.bv=l,this.distance=G,this.faceId=0,this.subMeshId=0}}},12079:(D,l,G)=>{G.d(l,{d:()=>b});var V=G(11721),N=G(11710),M=G(11713);class b{constructor(D,l,G){this.vectors=(0,V.b)(8,N.Kl.Zero),this.center=N.Kl.Zero(),this.centerWorld=N.Kl.Zero(),this.extendSize=N.Kl.Zero(),this.extendSizeWorld=N.Kl.Zero(),this.directions=(0,V.b)(3,N.Kl.Zero),this.vectorsWorld=(0,V.b)(8,N.Kl.Zero),this.minimumWorld=N.Kl.Zero(),this.maximumWorld=N.Kl.Zero(),this.minimum=N.Kl.Zero(),this.maximum=N.Kl.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(D,l,G)}reConstruct(D,l,G){const V=D.x,M=D.y,b=D.z,X=l.x,t=l.y,R=l.z,n=this.vectors;this.minimum.Lb(V,M,b),this.maximum.Lb(X,t,R),n[0].Lb(V,M,b),n[1].Lb(X,t,R),n[2].Lb(X,M,b),n[3].Lb(V,t,b),n[4].Lb(V,M,R),n[5].Lb(X,t,b),n[6].Lb(V,t,R),n[7].Lb(X,M,R),l.addToRef(D,this.center).scaleInPlace(.5),l.subtractToRef(D,this.extendSize).scaleInPlace(.5),this._worldMatrix=G||N.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(D){const l=b._TmpVector3,G=this.maximum.subtractToRef(this.minimum,l[0]),V=G.length();G.normalizeFromLength(V);const N=V*D,M=G.scaleInPlace(.5*N),X=this.center.subtractToRef(M,l[1]),t=this.center.addToRef(M,l[2]);return this.reConstruct(X,t,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(D){const l=this.minimumWorld,G=this.maximumWorld,V=this.directions,M=this.vectorsWorld,b=this.vectors;if(D.isIdentity()){l.V(this.minimum),G.V(this.maximum);for(let D=0;D<8;++D)M[D].V(b[D]);this.extendSizeWorld.V(this.extendSize),this.centerWorld.V(this.center)}else{l.Ib(Number.MAX_VALUE),G.Ib(-Number.MAX_VALUE);for(let V=0;V<8;++V){const X=M[V];N.Kl.TransformCoordinatesToRef(b[V],D,X),l.minimizeInPlace(X),G.maximizeInPlace(X)}G.subtractToRef(l,this.extendSizeWorld).scaleInPlace(.5),G.addToRef(l,this.centerWorld).scaleInPlace(.5)}N.Kl.FromArrayToRef(D.m,0,V[0]),N.Kl.FromArrayToRef(D.m,4,V[1]),N.Kl.FromArrayToRef(D.m,8,V[2]),this._worldMatrix=D}isInFrustum(D){return b.IsInFrustum(this.vectorsWorld,D)}isCompletelyInFrustum(D){return b.IsCompletelyInFrustum(this.vectorsWorld,D)}intersectsPoint(D){const l=this.minimumWorld,G=this.maximumWorld,V=l.x,N=l.y,b=l.z,X=G.x,t=G.y,R=G.z,n=D.x,g=D.y,j=D.z,e=-M.b;return!(X-n<e||e>n-V)&&(!(t-g<e||e>g-N)&&!(R-j<e||e>j-b))}intersectsSphere(D){return b.IntersectsSphere(this.minimumWorld,this.maximumWorld,D.centerWorld,D.radiusWorld)}intersectsMinMax(D,l){const G=this.minimumWorld,V=this.maximumWorld,N=G.x,M=G.y,b=G.z,X=V.x,t=V.y,R=V.z,n=D.x,g=D.y,j=D.z,e=l.x,K=l.y,F=l.z;return!(X<n||N>e)&&(!(t<g||M>K)&&!(R<j||b>F))}dispose(){var D,l;null===(D=this._drawWrapperFront)||void 0===D||D.dispose(),null===(l=this._drawWrapperBack)||void 0===l||l.dispose()}static Intersects(D,l){return D.intersectsMinMax(l.minimumWorld,l.maximumWorld)}static IntersectsSphere(D,l,G,V){const M=b._TmpVector3[0];N.Kl.ClampToRef(G,D,l,M);return N.Kl.DistanceSquared(G,M)<=V*V}static IsCompletelyInFrustum(D,l){for(let G=0;G<6;++G){const V=l[G];for(let l=0;l<8;++l)if(V.dotCoordinate(D[l])<0)return!1}return!0}static IsInFrustum(D,l){for(let G=0;G<6;++G){let V=!0;const N=l[G];for(let l=0;l<8;++l)if(N.dotCoordinate(D[l])>=0){V=!1;break}if(V)return!1}return!0}}b._TmpVector3=(0,V.b)(3,N.Kl.Zero)},12073:(D,l,G)=>{G.d(l,{d:()=>g});var V=G(11721),N=G(11710),M=G(12079),b=G(12084);const X={min:0,max:0},t={min:0,max:0},R=(D,l,G)=>{const V=N.Kl.Dot(l.centerWorld,D),M=Math.abs(N.Kl.Dot(l.directions[0],D))*l.extendSize.x+Math.abs(N.Kl.Dot(l.directions[1],D))*l.extendSize.y+Math.abs(N.Kl.Dot(l.directions[2],D))*l.extendSize.z;G.min=V-M,G.max=V+M},n=(D,l,G)=>(R(D,l,X),R(D,G,t),!(X.min>t.max||t.min>X.max));class g{constructor(D,l,G){this._isLocked=!1,this.boundingBox=new M.d(D,l,G),this.boundingSphere=new b.e(D,l,G)}reConstruct(D,l,G){this.boundingBox.reConstruct(D,l,G),this.boundingSphere.reConstruct(D,l,G)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(D){this._isLocked=D}update(D){this._isLocked||(this.boundingBox._update(D),this.boundingSphere._update(D))}centerOn(D,l){const G=g._TmpVector3[0].V(D).Kg(l),V=g._TmpVector3[1].V(D).addInPlace(l);return this.boundingBox.reConstruct(G,V,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(G,V,this.boundingBox.getWorldMatrix()),this}encapsulate(D){const l=N.Kl.Minimize(this.minimum,D),G=N.Kl.Maximize(this.maximum,D);return this.reConstruct(l,G,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(D){const l=N.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(l);const G=N.TmpVectors.Kl[0];return N.Kl.TransformCoordinatesToRef(D.boundingBox.minimumWorld,l,G),this.encapsulate(G),N.Kl.TransformCoordinatesToRef(D.boundingBox.maximumWorld,l,G),this.encapsulate(G),this}scale(D){return this.boundingBox.scale(D),this.boundingSphere.scale(D),this}isInFrustum(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===l||3===l)&&this.boundingSphere.isCenterInFrustum(D))return!0;if(!this.boundingSphere.isInFrustum(D))return!1;return!(1!==l&&3!==l)||this.boundingBox.isInFrustum(D)}get diagonalLength(){const D=this.boundingBox;return D.maximumWorld.subtractToRef(D.minimumWorld,g._TmpVector3[0]).length()}isCompletelyInFrustum(D){return this.boundingBox.isCompletelyInFrustum(D)}_checkCollision(D){return D._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(D){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(D)&&!!this.boundingBox.intersectsPoint(D))}intersects(D,l){if(!b.e.Intersects(this.boundingSphere,D.boundingSphere))return!1;if(!M.d.Intersects(this.boundingBox,D.boundingBox))return!1;if(!l)return!0;const G=this.boundingBox,V=D.boundingBox;return!!n(G.directions[0],G,V)&&(!!n(G.directions[1],G,V)&&(!!n(G.directions[2],G,V)&&(!!n(V.directions[0],G,V)&&(!!n(V.directions[1],G,V)&&(!!n(V.directions[2],G,V)&&(!!n(N.Kl.Cross(G.directions[0],V.directions[0]),G,V)&&(!!n(N.Kl.Cross(G.directions[0],V.directions[1]),G,V)&&(!!n(N.Kl.Cross(G.directions[0],V.directions[2]),G,V)&&(!!n(N.Kl.Cross(G.directions[1],V.directions[0]),G,V)&&(!!n(N.Kl.Cross(G.directions[1],V.directions[1]),G,V)&&(!!n(N.Kl.Cross(G.directions[1],V.directions[2]),G,V)&&(!!n(N.Kl.Cross(G.directions[2],V.directions[0]),G,V)&&(!!n(N.Kl.Cross(G.directions[2],V.directions[1]),G,V)&&!!n(N.Kl.Cross(G.directions[2],V.directions[2]),G,V))))))))))))))}}g._TmpVector3=(0,V.b)(2,N.Kl.Zero)},12084:(D,l,G)=>{G.d(l,{e:()=>M});var V=G(11721),N=G(11710);class M{constructor(D,l,G){this.center=N.Kl.Zero(),this.centerWorld=N.Kl.Zero(),this.minimum=N.Kl.Zero(),this.maximum=N.Kl.Zero(),this.reConstruct(D,l,G)}reConstruct(D,l,G){this.minimum.V(D),this.maximum.V(l);const V=N.Kl.Distance(D,l);l.addToRef(D,this.center).scaleInPlace(.5),this.radius=.5*V,this._update(G||N.Matrix.IdentityReadOnly)}scale(D){const l=this.radius*D,G=M._TmpVector3,V=G[0].Ib(l),N=this.center.subtractToRef(V,G[1]),b=this.center.addToRef(V,G[2]);return this.reConstruct(N,b,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(D){if(D.isIdentity())this.centerWorld.V(this.center),this.radiusWorld=this.radius;else{N.Kl.TransformCoordinatesToRef(this.center,D,this.centerWorld);const l=M._TmpVector3[0];N.Kl.TransformNormalFromFloatsToRef(1,1,1,D,l),this.radiusWorld=Math.max(Math.abs(l.x),Math.abs(l.y),Math.abs(l.z))*this.radius}}isInFrustum(D){const l=this.centerWorld,G=this.radiusWorld;for(let V=0;V<6;V++)if(D[V].dotCoordinate(l)<=-G)return!1;return!0}isCenterInFrustum(D){const l=this.centerWorld;for(let G=0;G<6;G++)if(D[G].dotCoordinate(l)<0)return!1;return!0}intersectsPoint(D){const l=N.Kl.DistanceSquared(this.centerWorld,D);return!(this.radiusWorld*this.radiusWorld<l)}static Intersects(D,l){const G=N.Kl.DistanceSquared(D.centerWorld,l.centerWorld),V=D.radiusWorld+l.radiusWorld;return!(V*V<G)}static CreateFromCenterAndRadius(D,l,G){this._TmpVector3[0].V(D),this._TmpVector3[1].Lb(0,0,l),this._TmpVector3[2].V(D),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Kg(this._TmpVector3[1]);const V=new M(this._TmpVector3[0],this._TmpVector3[2]);return V._worldMatrix=G||N.Matrix.Identity(),V}}M._TmpVector3=(0,V.b)(3,N.Kl.Zero)},12100:(D,l,G)=>{function V(D){-1===D.indexOf("vClipPlane")&&D.push("vClipPlane"),-1===D.indexOf("vClipPlane2")&&D.push("vClipPlane2"),-1===D.indexOf("vClipPlane3")&&D.push("vClipPlane3"),-1===D.indexOf("vClipPlane4")&&D.push("vClipPlane4"),-1===D.indexOf("vClipPlane5")&&D.push("vClipPlane5"),-1===D.indexOf("vClipPlane6")&&D.push("vClipPlane6")}function N(D,l,G){const V=!!(D.clipPlane??l.clipPlane),N=!!(D.clipPlane2??l.clipPlane2),M=!!(D.clipPlane3??l.clipPlane3),b=!!(D.clipPlane4??l.clipPlane4),X=!!(D.clipPlane5??l.clipPlane5),t=!!(D.clipPlane6??l.clipPlane6);V&&G.push("#define CLIPPLANE"),N&&G.push("#define CLIPPLANE2"),M&&G.push("#define CLIPPLANE3"),b&&G.push("#define CLIPPLANE4"),X&&G.push("#define CLIPPLANE5"),t&&G.push("#define CLIPPLANE6")}function M(D,l,G){let V=!1;const N=!!(D.clipPlane??l.clipPlane),M=!!(D.clipPlane2??l.clipPlane2),b=!!(D.clipPlane3??l.clipPlane3),X=!!(D.clipPlane4??l.clipPlane4),t=!!(D.clipPlane5??l.clipPlane5),R=!!(D.clipPlane6??l.clipPlane6);return G.CLIPPLANE!==N&&(G.CLIPPLANE=N,V=!0),G.CLIPPLANE2!==M&&(G.CLIPPLANE2=M,V=!0),G.CLIPPLANE3!==b&&(G.CLIPPLANE3=b,V=!0),G.CLIPPLANE4!==X&&(G.CLIPPLANE4=X,V=!0),G.CLIPPLANE5!==t&&(G.CLIPPLANE5=t,V=!0),G.CLIPPLANE6!==R&&(G.CLIPPLANE6=R,V=!0),V}function b(D,l,G){let V=l.clipPlane??G.clipPlane;X(D,"vClipPlane",V),V=l.clipPlane2??G.clipPlane2,X(D,"vClipPlane2",V),V=l.clipPlane3??G.clipPlane3,X(D,"vClipPlane3",V),V=l.clipPlane4??G.clipPlane4,X(D,"vClipPlane4",V),V=l.clipPlane5??G.clipPlane5,X(D,"vClipPlane5",V),V=l.clipPlane6??G.clipPlane6,X(D,"vClipPlane6",V)}function X(D,l,G){G&&D.setFloat4(l,G.normal.x,G.normal.y,G.normal.z,G.d)}G.d(l,{d:()=>V,f:()=>b,g:()=>M,k:()=>N})},12038:(D,l,G)=>{G.d(l,{d:()=>V});class V{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(D,l){this._defines[D]||(D<this._currentRank&&(this._currentRank=D),D>this._maxRank&&(this._maxRank=D),this._defines[D]=new Array),this._defines[D].push(l)}addCPUSkinningFallback(D,l){this._mesh=l,D<this._currentRank&&(this._currentRank=D),D>this._maxRank&&(this._maxRank=D)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(D,l){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,D=D.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),l._bonesComputationForcedToCPU=!0;const G=this._mesh.uD();for(let D=0;D<G.meshes.length;D++){const V=G.meshes[D];if(V.material){if(V.computeBonesUsingShaders&&0!==V.numBoneInfluencers)if(V.material.getEffect()===l)V.computeBonesUsingShaders=!1;else if(V.nb)for(const D of V.nb){if(D.effect===l){V.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&V.computeBonesUsingShaders&&V.numBoneInfluencers>0&&(V.computeBonesUsingShaders=!1)}}else{const l=this._defines[this._currentRank];if(l)for(let G=0;G<l.length;G++)D=D.replace("#define "+l[G],"");this._currentRank++}return D}}},12052:(D,l,G)=>{G.d(l,{c:()=>d});var V=G(11695),N=G(11703),M=G(11530),b=G(11532),X=G(11571),t=G(12059),R=G(11989),n=G(11546),g=G(11759),j=G(11833),e=G(11739);class K{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(D){this._func=D}get funcRef(){return this._funcRef}set funcRef(D){this._funcRef=D}get funcMask(){return this._funcMask}set funcMask(D){this._funcMask=D}get opStencilFail(){return this._opStencilFail}set opStencilFail(D){this._opStencilFail=D}get opDepthFail(){return this._opDepthFail}set opDepthFail(D){this._opDepthFail=D}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(D){this._opStencilDepthPass=D}get mask(){return this._mask}set mask(D){this._mask=D}get enabled(){return this._enabled}set enabled(D){this._enabled=D}getClassName(){return"MaterialStencilState"}copyTo(D){e.c.Clone((()=>D),this)}serialize(){return e.c.Serialize(this)}parse(D,l,G){e.c.Parse((()=>this),D,l,G)}}(0,V.b)([(0,N.L)()],K.prototype,"func",null),(0,V.b)([(0,N.L)()],K.prototype,"funcRef",null),(0,V.b)([(0,N.L)()],K.prototype,"funcMask",null),(0,V.b)([(0,N.L)()],K.prototype,"opStencilFail",null),(0,V.b)([(0,N.L)()],K.prototype,"opDepthFail",null),(0,V.b)([(0,N.L)()],K.prototype,"opStencilDepthPass",null),(0,V.b)([(0,N.L)()],K.prototype,"mask",null),(0,V.b)([(0,N.L)()],K.prototype,"enabled",null);var F=G(12097);class d{get _supportGlowLayer(){return!1}set _glowModeEnabled(D){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(D){if(this._alpha===D)return;const l=this._alpha;this._alpha=D,1!==l&&1!==D||this.QR(d.MiscDirtyFlag+d.PrePassDirtyFlag)}get alpha(){return this._alpha}set ob(D){this._backFaceCulling!==D&&(this._backFaceCulling=D,this.QR(d.TextureDirtyFlag))}get ob(){return this._backFaceCulling}set cullBackFaces(D){this._cullBackFaces!==D&&(this._cullBackFaces=D,this.QR(d.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(D){this._blockDirtyMechanism!==D&&(this._blockDirtyMechanism=D,D||this.nj())}atomicMaterialsUpdate(D){this.blockDirtyMechanism=!0;try{D(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(D){this._onDisposeObserver&&this.Vb.remove(this._onDisposeObserver),this._onDisposeObserver=this.Vb.add(D)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new b.e),this._onBindObservable}set onBind(D){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(D)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new b.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new b.e),this._onEffectCreatedObservable}set alphaMode(D){this._alphaMode!==D&&(this._alphaMode=D,this.QR(d.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(D){this._needDepthPrePass!==D&&(this._needDepthPrePass=D,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(D){this._fogEnabled!==D&&(this._fogEnabled=D,this.QR(d.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case d.WireFrameFillMode:case d.LineListDrawMode:case d.LineLoopDrawMode:case d.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(D){this.fillMode=D?d.WireFrameFillMode:d.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case d.PointFillMode:case d.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(D){this.fillMode=D?d.PointFillMode:d.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(D){this._fillMode!==D&&(this._fillMode=D,this.QR(d.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(D){const l=this.uD().getEngine().getCaps().fragmentDepthSupported;D&&!l&&n.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=D&&l,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(D){this._drawWrapper=D}constructor(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Vb=new b.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new K,this._useUBO=!1,this._fillMode=d.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=D;const N=l||X.d.LastCreatedScene;N&&(this._scene=N,this._dirtyCallbacks={},this._forceGLSL=V,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=D||M.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new j.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new R.b(this._scene.getEngine(),void 0,void 0,D),this._useUBO=this.uD().getEngine().supportsUniformBuffers,this._createUniformBuffer(),G||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),d.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var D;const l=this.uD().getEngine();null===(D=this._uniformBuffer)||void 0===D||D.dispose(),l.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new R.b(l,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new R.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(D){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.nj(),this.checkReadyOnlyOnce=!0}unfreeze(){this.nj(),this.checkReadyOnlyOnce=!1}isReady(D,l){return!0}isReadyForSubMesh(D,l,G){const V=l.materialDefines;return!!V&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=V,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}uD(){return this._scene}_getEffectiveOrientation(D){return null!==this.sideOrientation?this.sideOrientation:D.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(D){this._transparencyMode!==D&&(this._transparencyMode=D,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===d.MATERIAL_ALPHABLEND||this._transparencyMode===d.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===d.MATERIAL_ALPHATEST||this._transparencyMode===d.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===d.MATERIAL_OPAQUE||this._transparencyMode===d.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(D){return this._hasTransparencyMode?this._transparencyModeIsBlend:D.visibility<1||!this._disableAlphaBlending&&(D.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(D){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(D)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}nj(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const l=this.uD().meshes;for(const G of l)if(G.nb)for(const l of G.nb)if(l.cD()===this)for(const G of l._drawWrappers)G&&this._materialContext===G.materialContext&&(G._wasPreviouslyReady=!1,G._wasPreviouslyUsingInstances=null,G._forceRebindOnNextCall=D);D&&this.QR(d.AllDirtyFlag)}_preBind(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const G=this._scene.getEngine(),V=(null==l?this.sideOrientation:l)===d.ClockWiseSideOrientation;return G.enableEffect(D||this._getDrawWrapper()),G.setState(this.ob,this.zOffset,!1,V,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),V}bind(D,l){}buildUniformLayout(){const D=this._uniformBuffer;this._eventInfo.ubo=D,this._callbackPluginEventGeneric(8,this._eventInfo),D.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(D,l,G){const V=G._drawWrapper;this._eventInfo.subMesh=G,this._callbackPluginEventBindForSubMesh(this._eventInfo),V._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(D){}bindView(D){this._useUBO?this._needToBindSceneUbo=!0:D.setMatrix("view",this.uD().getViewMatrix())}bindViewProjection(D){this._useUBO?this._needToBindSceneUbo=!0:(D.setMatrix("viewProjection",this.uD().getTransformMatrix()),D.setMatrix("projection",this.uD().getProjectionMatrix()))}bindEyePosition(D,l){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(D,l)}_afterBind(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&l&&(this._needToBindSceneUbo=!1,(0,F.o)(l,this.uD().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=D?D.visibility:1,this._onBindObservable&&D&&this._onBindObservable.notifyObservers(D),this.disableDepthWrite){const D=this._scene.getEngine();this._cachedDepthWriteState=D.getDepthWrite(),D.setDepthWrite(!1)}if(this.disableColorWrite){const D=this._scene.getEngine();this._cachedColorWriteState=D.getColorWrite(),D.setColorWrite(!1)}if(0!==this.depthFunction){const D=this._scene.getEngine();this._cachedDepthFunctionState=D.getDepthFunction()||0,D.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(D){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=D,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(D){return null}_clonePlugins(D,l){const G={};if(this._serializePlugins(G),d._ParsePlugins(G,D,this._scene,l),this.pluginManager)for(const V of this.pluginManager._plugins){const l=D.pluginManager.getPlugin(V.name);l&&V.copyTo(l)}}getBindedMeshes(){if(this.meshMap){const D=[];for(const l in this.meshMap){const G=this.meshMap[l];G&&D.push(G)}return D}return this._scene.meshes.filter((D=>D.material===this))}forceCompilation(D,l,G,V){const N={clipPlane:!1,useInstances:!1,...G},M=this.uD(),b=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const X=()=>{if(!this._scene||!this._scene.getEngine())return;const G=M.clipPlane;if(N.clipPlane&&(M.clipPlane=new g.d(0,0,0,1)),this._storeEffectOnSubMeshes){let G=!0,M=null;if(D.nb){const l=new t.d(0,0,0,0,0,D,void 0,!1,!1);l.materialDefines&&(l.materialDefines._renderId=-1),this.isReadyForSubMesh(D,l,N.useInstances)||(l.effect&&l.effect.getCompilationError()&&l.effect.allFallbacksProcessed()?M=l.effect.getCompilationError():(G=!1,setTimeout(X,16)))}G&&(this.allowShaderHotSwapping=b,M&&V&&V(M),l&&l(this))}else this.isReady()?(this.allowShaderHotSwapping=b,l&&l(this)):setTimeout(X,16);N.clipPlane&&(M.clipPlane=G)};X()}async forceCompilationAsync(D,l){return await new Promise(((G,V)=>{this.forceCompilation(D,(()=>{G()}),l,(D=>{V(D)}))}))}QR(D){this.uD().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(d._DirtyCallbackArray.length=0,D&d.ImageProcessingDirtyFlag&&d._DirtyCallbackArray.push(d._ImageProcessingDirtyCallBack),D&d.TextureDirtyFlag&&d._DirtyCallbackArray.push(d._TextureDirtyCallBack),D&d.LightDirtyFlag&&d._DirtyCallbackArray.push(d._LightsDirtyCallBack),D&d.FresnelDirtyFlag&&d._DirtyCallbackArray.push(d._FresnelDirtyCallBack),D&d.AttributesDirtyFlag&&d._DirtyCallbackArray.push(d._AttributeDirtyCallBack),D&d.MiscDirtyFlag&&d._DirtyCallbackArray.push(d._MiscDirtyCallBack),D&d.PrePassDirtyFlag&&d._DirtyCallbackArray.push(d._PrePassDirtyCallBack),d._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(d._RunDirtyCallBacks),this.uD().resetCachedMaterial())}resetDrawCache(){const D=this.uD().meshes;for(const l of D)if(l.nb)for(const D of l.nb)D.cD()===this&&D.resetDrawCache()}_markAllSubMeshesAsDirty(D){const l=this.uD();if(l.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const G=l.meshes;for(const V of G)if(V.nb)for(const G of V.nb){if((G.cD()||(l._hasDefaultMaterial?l.defaultMaterial:null))===this)for(const l of G._drawWrappers)l&&l.defines&&l.defines.markAllAsDirty&&this._materialContext===l.materialContext&&D(l.defines)}}_markScenePrePassDirty(){if(this.uD().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const D=this.uD().enablePrePassRenderer();D&&D.QR()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(d._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(d._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(d._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(d._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(d._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(d._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(d._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(d._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(d._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(d._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const D=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Vb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(D)}))}}setPrePassRenderer(D){return!1}dispose(D,l,G){const V=this.uD();if(V.stopAnimation(this),V.freeProcessedMaterials(),V.removeMaterial(this),this._eventInfo.forceDisposeTextures=l,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const D=this._parentContainer.materials.indexOf(this);D>-1&&this._parentContainer.materials.splice(D,1),this._parentContainer=null}if(!0!==G)if(this.meshMap)for(const N in this.meshMap){const D=this.meshMap[N];this._disposeMeshResources(D)}else{const D=V.meshes;for(const l of D)this._disposeMeshResources(l)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Vb.notifyObservers(this),this.Vb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(D){if(!D)return;const l=D.xb,G=D._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(D.nb&&G)for(const N of D.nb){const D=N._drawWrappers;for(let M=0;M<D.length;M++){var V;const b=null===(V=D[M])||void 0===V?void 0:V.effect;if(!b)continue;G[M]===this&&(null===l||void 0===l||l._releaseVertexArrayObject(b),N._removeDrawWrapper(M,!0,!0))}}}else null===l||void 0===l||l._releaseVertexArrayObject(this._drawWrapper.effect);D.material!==this||D.sourceMesh||(D.material=null)}serialize(){const D=e.c.Serialize(this);return D.stencil=this.stencil.serialize(),D.uniqueId=this.uniqueId,this._serializePlugins(D),D}_serializePlugins(D){if(D.plugins={},this.pluginManager)for(const l of this.pluginManager._plugins)l.doNotSerialize||(D.plugins[l.getClassName()]=l.serialize())}static Parse(D,l,G){if(D.customType){if("BABYLON.PBRMaterial"===D.customType&&D.overloadedAlbedo&&(D.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return n.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else D.customType="BABYLON.StandardMaterial";const V=M.Tools.Instantiate(D.customType).Parse(D,l,G);return V._loadedUniqueId=D.uniqueId,V}static _ParsePlugins(D,l,G,V){if(D.plugins)for(const X in D.plugins){var N,b;const t=D.plugins[X];let R=null===(N=l.pluginManager)||void 0===N?void 0:N.getPlugin(t.name);if(!R){const D=M.Tools.Instantiate("BABYLON."+X);D&&(R=new D(l))}null===(b=R)||void 0===b||b.parse(t,G,V)}}}d.TriangleFillMode=0,d.WireFrameFillMode=1,d.PointFillMode=2,d.PointListDrawMode=3,d.LineListDrawMode=4,d.LineLoopDrawMode=5,d.LineStripDrawMode=6,d.TriangleStripDrawMode=7,d.TriangleFanDrawMode=8,d.ClockWiseSideOrientation=0,d.CounterClockWiseSideOrientation=1,d.ImageProcessingDirtyFlag=64,d.TextureDirtyFlag=1,d.LightDirtyFlag=2,d.FresnelDirtyFlag=4,d.AttributesDirtyFlag=8,d.MiscDirtyFlag=16,d.PrePassDirtyFlag=32,d.AllDirtyFlag=127,d.MATERIAL_OPAQUE=0,d.MATERIAL_ALPHATEST=1,d.MATERIAL_ALPHABLEND=2,d.MATERIAL_ALPHATESTANDBLEND=3,d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,d.MATERIAL_NORMALBLENDMETHOD_RNM=1,d.OnEventObservable=new b.e,d._AllDirtyCallBack=D=>D.markAllAsDirty(),d._ImageProcessingDirtyCallBack=D=>D.markAsImageProcessingDirty(),d._TextureDirtyCallBack=D=>D.markAsTexturesDirty(),d._FresnelDirtyCallBack=D=>D.markAsFresnelDirty(),d._MiscDirtyCallBack=D=>D.markAsMiscDirty(),d._PrePassDirtyCallBack=D=>D.markAsPrePassDirty(),d._LightsDirtyCallBack=D=>D.markAsLightDirty(),d._AttributeDirtyCallBack=D=>D.markAsAttributesDirty(),d._FresnelAndMiscDirtyCallBack=D=>{d._FresnelDirtyCallBack(D),d._MiscDirtyCallBack(D)},d._TextureAndMiscDirtyCallBack=D=>{d._TextureDirtyCallBack(D),d._MiscDirtyCallBack(D)},d._DirtyCallbackArray=[],d._RunDirtyCallBacks=D=>{for(const l of d._DirtyCallbackArray)l(D)},(0,V.b)([(0,N.L)()],d.prototype,"id",void 0),(0,V.b)([(0,N.L)()],d.prototype,"uniqueId",void 0),(0,V.b)([(0,N.L)()],d.prototype,"name",void 0),(0,V.b)([(0,N.L)()],d.prototype,"metadata",void 0),(0,V.b)([(0,N.L)()],d.prototype,"checkReadyOnEveryCall",void 0),(0,V.b)([(0,N.L)()],d.prototype,"checkReadyOnlyOnce",void 0),(0,V.b)([(0,N.L)()],d.prototype,"state",void 0),(0,V.b)([(0,N.L)("alpha")],d.prototype,"_alpha",void 0),(0,V.b)([(0,N.L)("ob")],d.prototype,"_backFaceCulling",void 0),(0,V.b)([(0,N.L)("cullBackFaces")],d.prototype,"_cullBackFaces",void 0),(0,V.b)([(0,N.L)()],d.prototype,"sideOrientation",void 0),(0,V.b)([(0,N.L)("alphaMode")],d.prototype,"_alphaMode",void 0),(0,V.b)([(0,N.L)()],d.prototype,"_needDepthPrePass",void 0),(0,V.b)([(0,N.L)()],d.prototype,"disableDepthWrite",void 0),(0,V.b)([(0,N.L)()],d.prototype,"disableColorWrite",void 0),(0,V.b)([(0,N.L)()],d.prototype,"forceDepthWrite",void 0),(0,V.b)([(0,N.L)()],d.prototype,"depthFunction",void 0),(0,V.b)([(0,N.L)()],d.prototype,"separateCullingPass",void 0),(0,V.b)([(0,N.L)("fogEnabled")],d.prototype,"_fogEnabled",void 0),(0,V.b)([(0,N.L)()],d.prototype,"pointSize",void 0),(0,V.b)([(0,N.L)()],d.prototype,"zOffset",void 0),(0,V.b)([(0,N.L)()],d.prototype,"zOffsetUnits",void 0),(0,V.b)([(0,N.L)()],d.prototype,"pointsCloud",null),(0,V.b)([(0,N.L)()],d.prototype,"fillMode",null),(0,V.b)([(0,N.L)()],d.prototype,"useLogarithmicDepth",null),(0,V.b)([(0,N.L)()],d.prototype,"transparencyMode",null)},12097:(D,l,G)=>{G.d(l,{$:()=>c,B:()=>e,C:()=>j,G:()=>O,J:()=>S,K:()=>i,O:()=>H,R:()=>W,T:()=>s,W:()=>U,X:()=>f,d:()=>r,db:()=>K,g:()=>g,i:()=>L,j:()=>n,k:()=>F,o:()=>d,q:()=>h,s:()=>I,t:()=>x,x:()=>u,y:()=>B});var V=G(11546),N=G(11755),M=G(11571),b=G(12034),X=G(12100);const t=N.hl.Black(),R={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function n(D,l,G){if(!D||D.LOGARITHMICDEPTH||D.indexOf&&D.indexOf("LOGARITHMICDEPTH")>=0){const D=G.activeCamera;1===D.mode&&V.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),l.setFloat("logarithmicDepthConstant",2/(Math.log(D.maxZ+1)/Math.LN2))}}function g(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]&&arguments[3];G&&D.fogEnabled&&(!l||l.applyFog)&&0!==D.fogMode&&(G.setFloat4("vFogInfos",D.fogMode,D.fogStart,D.fogEnd,D.fogDensity),V?(D.fogColor.toLinearSpaceToRef(t,D.getEngine().useExactSrgbConversions),G.setColor3("vFogColor",t)):G.setColor3("vFogColor",D.fogColor))}function j(D,l,G,V,N,M,b,X,t,n){const g=D.numMaxInfluencers||D.numInfluencers;return g<=0?0:(l.push("#define MORPHTARGETS"),D.hasPositions&&l.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),D.hasNormals&&l.push("#define MORPHTARGETTEXTURE_HASNORMALS"),D.hasTangents&&l.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),D.hasUVs&&l.push("#define MORPHTARGETTEXTURE_HASUVS"),D.hasUV2s&&l.push("#define MORPHTARGETTEXTURE_HASUV2S"),D.hasColors&&l.push("#define MORPHTARGETTEXTURE_HASCOLORS"),D.supportsPositions&&N&&l.push("#define MORPHTARGETS_POSITION"),D.supportsNormals&&M&&l.push("#define MORPHTARGETS_NORMAL"),D.supportsTangents&&b&&l.push("#define MORPHTARGETS_TANGENT"),D.supportsUVs&&X&&l.push("#define MORPHTARGETS_UV"),D.supportsUV2s&&t&&l.push("#define MORPHTARGETS_UV2"),D.supportsColors&&n&&l.push("#define MORPHTARGETS_COLOR"),l.push("#define NUM_MORPH_INFLUENCERS "+g),D.isUsingTextureForTargets&&l.push("#define MORPHTARGETS_TEXTURE"),R.NUM_MORPH_INFLUENCERS=g,R.NORMAL=M,R.TANGENT=b,R.UV=X,R.UV2=t,R.COLOR=n,e(G,V,R,N),g)}function e(D,l,G){let N=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const b=G.NUM_MORPH_INFLUENCERS;if(b>0&&M.d.LastCreatedEngine){const X=M.d.LastCreatedEngine.getCaps().maxVertexAttribs,t=l.morphTargetManager;if(null!==t&&void 0!==t&&t.isUsingTextureForTargets)return;const R=t&&t.supportsPositions&&N,n=t&&t.supportsNormals&&G.NORMAL,g=t&&t.supportsTangents&&G.TANGENT,j=t&&t.supportsUVs&&G.UV1,e=t&&t.supportsUV2s&&G.UV2,K=t&&t.supportsColors&&G.VERTEXCOLOR;for(let G=0;G<b;G++)R&&D.push("position"+G),n&&D.push("normal"+G),g&&D.push("tangent"+G),j&&D.push("uv_"+G),e&&D.push("uv2_"+G),K&&D.push("color"+G),D.length>X&&V.d.Error("Cannot add more vertex attributes for mesh "+l.name)}}function K(D){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];D.push("world0"),D.push("world1"),D.push("world2"),D.push("world3"),l&&(D.push("previousWorld0"),D.push("previousWorld1"),D.push("previousWorld2"),D.push("previousWorld3"))}function F(D,l){const G=D.morphTargetManager;D&&G&&l.setFloatArray("morphTargetInfluences",G.influences)}function d(D,l){l.bindToEffect(D,"Scene")}function H(D,l,G){l._needUVs=!0,l[G]=!0,D.optimizeUVAllocation&&D.getTextureMatrix().isIdentityAs3x2()?(l[G+"DIRECTUV"]=D.coordinatesIndex+1,l["MAINUV"+(D.coordinatesIndex+1)]=!0):l[G+"DIRECTUV"]=0}function h(D,l,G){const V=D.getTextureMatrix();l.Hb(G+"Matrix",V)}function x(D,l,G){G.BAKED_VERTEX_ANIMATION_TEXTURE&&G.INSTANCES&&D.push("bakedVertexAnimationSettingsInstanced")}function r(D,l,G){var V;if(l&&D&&(D.computeBonesUsingShaders&&l._bonesComputationForcedToCPU&&(D.computeBonesUsingShaders=!1),D.useBones&&D.computeBonesUsingShaders&&D.skeleton)){const N=D.skeleton;if(N.isUsingTextureForMatrices&&l.getUniformIndex("boneTextureWidth")>-1){const G=N.getTransformMatrixTexture(D);l.setTexture("boneSampler",G),l.setFloat("boneTextureWidth",4*(N.bones.length+1))}else{const M=N.getTransformMatrices(D);M&&(l.setMatrices("mBones",M),G&&D.uD().prePassRenderer&&D.uD().prePassRenderer.getIndex(2)&&(G.previousBones[D.uniqueId]||(G.previousBones[D.uniqueId]=M.slice()),l.setMatrices("mPreviousBones",G.previousBones[D.uniqueId]),V=M,G.previousBones[D.uniqueId].set(V)))}}}function o(D,l,G,V,N){let M=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];D._bindLight(l,G,V,N,M)}function L(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const M=Math.min(l.lightSources.length,N);for(let b=0;b<M;b++){o(l.lightSources[b],b,D,G,"boolean"===typeof V?V:V.SPECULARTERM,l.receiveShadows)}}function u(D,l,G,V){G.NUM_BONE_INFLUENCERS>0&&(V.addCPUSkinningFallback(0,l),D.push("matricesIndices"),D.push("matricesWeights"),G.NUM_BONE_INFLUENCERS>4&&(D.push("matricesIndicesExtra"),D.push("matricesWeightsExtra")))}function B(D,l){(l.INSTANCES||l.THIN_INSTANCES)&&K(D,!!l.PREPASS_VELOCITY),l.INSTANCESCOLOR&&D.push("instanceColor")}function I(D,l){let G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,N=0;for(let M=0;M<G&&D["LIGHT"+M];M++)M>0&&(N=V+M,l.addFallback(N,"LIGHT"+M)),D.SHADOWS||(D["SHADOW"+M]&&l.addFallback(V,"SHADOW"+M),D["SHADOWPCF"+M]&&l.addFallback(V,"SHADOWPCF"+M),D["SHADOWPCSS"+M]&&l.addFallback(V,"SHADOWPCSS"+M),D["SHADOWPOISSON"+M]&&l.addFallback(V,"SHADOWPOISSON"+M),D["SHADOWESM"+M]&&l.addFallback(V,"SHADOWESM"+M),D["SHADOWCLOSEESM"+M]&&l.addFallback(V,"SHADOWCLOSEESM"+M));return N++}function W(D,l,G,V,N,M,b){let X=arguments.length>7&&void 0!==arguments[7]&&arguments[7];b._areMiscDirty&&(b.LOGARITHMICDEPTH=G,b.POINTSIZE=V,b.FOG=N&&function(D,l){return l.fogEnabled&&D.applyFog&&0!==l.fogMode}(D,l),b.NONUNIFORMSCALING=D.nonUniformScaling,b.ALPHATEST=M,b.DECAL_AFTER_DETAIL=X)}function i(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!G._areLightsDirty)return G._needNormals;let b=0;const X={needNormals:G._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(D.lightsEnabled&&!M)for(const R of l.lightSources)if(y(D,l,R,b,G,V,X),b++,b===N)break;G.SPECULARTERM=X.specularEnabled,G.SHADOWS=X.shadowEnabled;for(let R=b;R<N;R++)void 0!==G["LIGHT"+R]&&(G["LIGHT"+R]=!1,G["HEMILIGHT"+R]=!1,G["POINTLIGHT"+R]=!1,G["DIRLIGHT"+R]=!1,G["SPOTLIGHT"+R]=!1,G["AREALIGHT"+R]=!1,G["SHADOW"+R]=!1,G["SHADOWCSM"+R]=!1,G["SHADOWCSMDEBUG"+R]=!1,G["SHADOWCSMNUM_CASCADES"+R]=!1,G["SHADOWCSMUSESHADOWMAXZ"+R]=!1,G["SHADOWCSMNOBLEND"+R]=!1,G["SHADOWCSM_RIGHTHANDED"+R]=!1,G["SHADOWPCF"+R]=!1,G["SHADOWPCSS"+R]=!1,G["SHADOWPOISSON"+R]=!1,G["SHADOWESM"+R]=!1,G["SHADOWCLOSEESM"+R]=!1,G["SHADOWCUBE"+R]=!1,G["SHADOWLOWQUALITY"+R]=!1,G["SHADOWMEDIUMQUALITY"+R]=!1);const t=D.getEngine().getCaps();return void 0===G.SHADOWFLOAT&&(X.needRebuild=!0),G.SHADOWFLOAT=X.shadowEnabled&&(t.textureFloatRender&&t.textureFloatLinearFiltering||t.textureHalfFloatRender&&t.textureHalfFloatLinearFiltering),G.LIGHTMAPEXCLUDED=X.lightmapMode,X.needRebuild&&G.rebuild(),X.needNormals}function y(D,l,G,V,N,M,X){switch(X.needNormals=!0,void 0===N["LIGHT"+V]&&(X.needRebuild=!0),N["LIGHT"+V]=!0,N["SPOTLIGHT"+V]=!1,N["HEMILIGHT"+V]=!1,N["POINTLIGHT"+V]=!1,N["DIRLIGHT"+V]=!1,N["AREALIGHT"+V]=!1,G.prepareLightSpecificDefines(N,V),N["LIGHT_FALLOFF_PHYSICAL"+V]=!1,N["LIGHT_FALLOFF_GLTF"+V]=!1,N["LIGHT_FALLOFF_STANDARD"+V]=!1,G.falloffType){case b.c.FALLOFF_GLTF:N["LIGHT_FALLOFF_GLTF"+V]=!0;break;case b.c.FALLOFF_PHYSICAL:N["LIGHT_FALLOFF_PHYSICAL"+V]=!0;break;case b.c.FALLOFF_STANDARD:N["LIGHT_FALLOFF_STANDARD"+V]=!0}if(M&&!G.Ln.equalsFloats(0,0,0)&&(X.specularEnabled=!0),N["SHADOW"+V]=!1,N["SHADOWCSM"+V]=!1,N["SHADOWCSMDEBUG"+V]=!1,N["SHADOWCSMNUM_CASCADES"+V]=!1,N["SHADOWCSMUSESHADOWMAXZ"+V]=!1,N["SHADOWCSMNOBLEND"+V]=!1,N["SHADOWCSM_RIGHTHANDED"+V]=!1,N["SHADOWPCF"+V]=!1,N["SHADOWPCSS"+V]=!1,N["SHADOWPOISSON"+V]=!1,N["SHADOWESM"+V]=!1,N["SHADOWCLOSEESM"+V]=!1,N["SHADOWCUBE"+V]=!1,N["SHADOWLOWQUALITY"+V]=!1,N["SHADOWMEDIUMQUALITY"+V]=!1,l&&l.receiveShadows&&D.shadowsEnabled&&G.shadowEnabled){const l=G.getShadowGenerator(D.activeCamera)??G.getShadowGenerator();if(l){const D=l.getShadowMap();D&&D.renderList&&D.renderList.length>0&&(X.shadowEnabled=!0,l.prepareDefines(N,V))}}G.lightmapMode!=b.c.LIGHTMAP_DEFAULT?(X.lightmapMode=!0,N["LIGHTMAPEXCLUDED"+V]=!0,N["LIGHTMAPNOSPECULAR"+V]=G.lightmapMode==b.c.LIGHTMAP_SHADOWSONLY):(N["LIGHTMAPEXCLUDED"+V]=!1,N["LIGHTMAPNOSPECULAR"+V]=!1)}function S(D,l,G,V,N){let M=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,b=arguments.length>6&&void 0!==arguments[6]&&arguments[6],t=function(D,l){let G=!1;if(D.activeCamera){const V=l.CAMERA_ORTHOGRAPHIC?1:0,N=l.CAMERA_PERSPECTIVE?1:0,M=1===D.activeCamera.mode?1:0,b=0===D.activeCamera.mode?1:0;(V^M||N^b)&&(l.CAMERA_ORTHOGRAPHIC=1===M,l.CAMERA_PERSPECTIVE=1===b,G=!0)}return G}(D,V);!1!==M&&(t=(0,X.g)(G,D,V)),V.DEPTHPREPASS!==!l.getColorWrite()&&(V.DEPTHPREPASS=!V.DEPTHPREPASS,t=!0),V.INSTANCES!==N&&(V.INSTANCES=N,t=!0),V.THIN_INSTANCES!==b&&(V.THIN_INSTANCES=b,t=!0),t&&V.markAsUnprocessed()}function O(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],M=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],b=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!l._areAttributesDirty&&l._needNormals===l._normals&&l._needUVs===l._uvs)return!1;l._normals=l._needNormals,l._uvs=l._needUVs,l.NORMAL=l._needNormals&&D.isVerticesDataPresent("normal"),l._needNormals&&D.isVerticesDataPresent("tangent")&&(l.TANGENT=!0);for(let X=1;X<=6;++X)l["UV"+X]=!!l._needUVs&&D.isVerticesDataPresent(`uv${1===X?"":X}`);if(G){const G=D.useVertexColors&&D.isVerticesDataPresent("color");l.VERTEXCOLOR=G,l.VERTEXALPHA=D.hasVertexAlpha&&G&&M}return D.isVerticesDataPresent("instanceColor")&&(D.hasInstances||D.hasThinInstances)&&(l.INSTANCESCOLOR=!0),V&&function(D,l){if(D.useBones&&D.computeBonesUsingShaders&&D.skeleton){l.NUM_BONE_INFLUENCERS=D.numBoneInfluencers;const G=void 0!==l.BONETEXTURE;if(D.skeleton.isUsingTextureForMatrices&&G)l.BONETEXTURE=!0;else{l.BonesPerMesh=D.skeleton.bones.length+1,l.BONETEXTURE=!G&&void 0;const V=D.uD().prePassRenderer;if(V&&V.enabled){const G=-1===V.excludedSkinnedMesh.indexOf(D);l.BONES_VELOCITY_ENABLED=G}}}else l.NUM_BONE_INFLUENCERS=0,l.BonesPerMesh=0,void 0!==l.BONETEXTURE&&(l.BONETEXTURE=!1)}(D,l),N&&function(D,l){const G=D.morphTargetManager;G?(l.MORPHTARGETS_UV=G.supportsUVs&&l.UV1,l.MORPHTARGETS_UV2=G.supportsUV2s&&l.UV2,l.MORPHTARGETS_TANGENT=G.supportsTangents&&l.TANGENT,l.MORPHTARGETS_NORMAL=G.supportsNormals&&l.NORMAL,l.MORPHTARGETS_POSITION=G.supportsPositions,l.MORPHTARGETS_COLOR=G.supportsColors,l.MORPHTARGETTEXTURE_HASUVS=G.hasUVs,l.MORPHTARGETTEXTURE_HASUV2S=G.hasUV2s,l.MORPHTARGETTEXTURE_HASTANGENTS=G.hasTangents,l.MORPHTARGETTEXTURE_HASNORMALS=G.hasNormals,l.MORPHTARGETTEXTURE_HASPOSITIONS=G.hasPositions,l.MORPHTARGETTEXTURE_HASCOLORS=G.hasColors,l.NUM_MORPH_INFLUENCERS=G.numMaxInfluencers||G.numInfluencers,l.MORPHTARGETS=l.NUM_MORPH_INFLUENCERS>0,l.MORPHTARGETS_TEXTURE=G.isUsingTextureForTargets):(l.MORPHTARGETS_UV=!1,l.MORPHTARGETS_UV2=!1,l.MORPHTARGETS_TANGENT=!1,l.MORPHTARGETS_NORMAL=!1,l.MORPHTARGETS_POSITION=!1,l.MORPHTARGETS_COLOR=!1,l.MORPHTARGETTEXTURE_HASUVS=!1,l.MORPHTARGETTEXTURE_HASUV2S=!1,l.MORPHTARGETTEXTURE_HASTANGENTS=!1,l.MORPHTARGETTEXTURE_HASNORMALS=!1,l.MORPHTARGETTEXTURE_HASPOSITIONS=!1,l.MORPHTARGETTEXTURE_HAS_COLORS=!1,l.MORPHTARGETS=!1,l.NUM_MORPH_INFLUENCERS=0)}(D,l),b&&function(D,l){const G=D.bakedVertexAnimationManager;l.BAKED_VERTEX_ANIMATION_TEXTURE=!(!G||!G.isEnabled)}(D,l),!0}function s(D,l){if(D.activeCamera){const G=l.MULTIVIEW;l.MULTIVIEW=null!==D.activeCamera.outputRenderTarget&&D.activeCamera.outputRenderTarget.getViewCount()>1,l.MULTIVIEW!=G&&l.markAsUnprocessed()}}function U(D,l,G){const V=l.ORDER_INDEPENDENT_TRANSPARENCY,N=l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;l.ORDER_INDEPENDENT_TRANSPARENCY=D.useOrderIndependentTransparency&&G,l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!D.getEngine().getCaps().textureFloatLinearFiltering,V===l.ORDER_INDEPENDENT_TRANSPARENCY&&N===l.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||l.markAsUnprocessed()}function f(D,l,G){const V=l.PREPASS;if(!l._arePrePassDirty)return;const N=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(D.prePassRenderer&&D.prePassRenderer.enabled&&G){l.PREPASS=!0,l.SCENE_MRT_COUNT=D.prePassRenderer.mrtCount,l.PREPASS_NORMAL_WORLDSPACE=D.prePassRenderer.generateNormalsInWorldSpace,l.PREPASS_COLOR=!0,l.PREPASS_COLOR_INDEX=0;for(let G=0;G<N.length;G++){const V=D.prePassRenderer.getIndex(N[G].type);-1!==V?(l[N[G].define]=!0,l[N[G].index]=V):l[N[G].define]=!1}}else{l.PREPASS=!1;for(let D=0;D<N.length;D++)l[N[D].define]=!1}l.PREPASS!=V&&(l.markAsUnprocessed(),l.markAsImageProcessingDirty())}function q(D,l,G,V){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6&&void 0!==arguments[6]&&arguments[6];N&&N.push("Light"+D),M||(l.push("vLightData"+D,"vLightDiffuse"+D,"vLightSpecular"+D,"vLightDirection"+D,"vLightWidth"+D,"vLightHeight"+D,"vLightFalloff"+D,"vLightGround"+D,"lightMatrix"+D,"shadowsInfo"+D,"depthValues"+D),G.push("shadowTexture"+D),G.push("depthTexture"+D),l.push("viewFrustumZ"+D,"cascadeBlendFactor"+D,"lightSizeUVCorrection"+D,"depthCorrection"+D,"penumbraDarkness"+D,"frustumLengths"+D),V&&(G.push("projectionLightTexture"+D),l.push("textureProjectionMatrix"+D)),b&&G.push("iesLightTexture"+D))}function c(D,l,G){let V,N,M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(D.uniformsNames){const b=D;V=b.uniformsNames,N=b.uniformBuffersNames,l=b.samplers,G=b.defines,M=b.maxSimultaneousLights||0}else V=D,l||(l=[]);for(let b=0;b<M&&G["LIGHT"+b];b++)q(b,V,l,G["PROJECTEDLIGHTTEXTURE"+b],N,!1,G["IESLIGHTTEXTURE"+b]);G.NUM_MORPH_INFLUENCERS&&(V.push("morphTargetInfluences"),V.push("morphTargetCount")),G.BAKED_VERTEX_ANIMATION_TEXTURE&&(V.push("bakedVertexAnimationSettings"),V.push("bakedVertexAnimationTextureSizeInverted"),V.push("bakedVertexAnimationTime"),l.push("bakedVertexAnimationTexture"))}},12045:(D,l,G)=>{G.d(l,{e:()=>M});var V=G(11710),N=G(12052);class M extends N.c{constructor(D,l){let G=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(D,l,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new V.Matrix,this._storeEffectOnSubMeshes=G}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(D,l){return!!D&&(!this._storeEffectOnSubMeshes||(!D.nb||0===D.nb.length||this.isReadyForSubMesh(D,D.nb[0],l)))}_isReadyForSubMesh(D){const l=D.materialDefines;return!(this.checkReadyOnEveryCall||!D.effect||!l||l._renderId!==this.uD().getRenderId())}bindOnlyWorldMatrix(D){this._activeEffect.setMatrix("world",D)}bindOnlyNormalMatrix(D){this._activeEffect.setMatrix("normalMatrix",D)}bind(D,l){l&&this.bindForSubMesh(D,l,l.nb[0])}_afterBind(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,G=arguments.length>2?arguments[2]:void 0;super._afterBind(D,l,G),this.uD()._cachedEffect=l,G?G._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return G._drawWrapper._forceRebindOnNextCall||D.isCachedMaterialInvalid(this,l,V)}dispose(D,l,G){this._activeEffect=void 0,super.dispose(D,l,G)}}},12090:(D,l,G)=>{G.d(l,{d:()=>X,g:()=>t});var V=G(11695),N=G(11710),M=G(11703);class b{static extractMinAndMaxIndexed(D,l,G,V,N,M){for(let b=G;b<G+V;b++){const G=3*l[b],V=D[G],X=D[G+1],t=D[G+2];N.minimizeInPlaceFromFloats(V,X,t),M.maximizeInPlaceFromFloats(V,X,t)}}static extractMinAndMax(D,l,G,V,N,M){for(let b=l,X=l*V;b<l+G;b++,X+=V){const l=D[X],G=D[X+1],V=D[X+2];N.minimizeInPlaceFromFloats(l,G,V),M.maximizeInPlaceFromFloats(l,G,V)}}}function X(D,l,G,V){let M=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const X=new N.Kl(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t=new N.Kl(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return b.extractMinAndMaxIndexed(D,l,G,V,X,t),M&&(X.x-=X.x*M.x+M.y,X.y-=X.y*M.x+M.y,X.z-=X.z*M.x+M.y,t.x+=t.x*M.x+M.y,t.y+=t.y*M.x+M.y,t.z+=t.z*M.x+M.y),{minimum:X,maximum:t}}function t(D,l,G){let V=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,M=arguments.length>4?arguments[4]:void 0;const X=new N.Kl(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t=new N.Kl(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return M||(M=3),b.extractMinAndMax(D,l,G,M,X,t),V&&(X.x-=X.x*V.x+V.y,X.y-=X.y*V.x+V.y,X.z-=X.z*V.x+V.y,t.x+=t.x*V.x+V.y,t.y+=t.y*V.x+V.y,t.z+=t.z*V.x+V.y),{minimum:X,maximum:t}}(0,V.b)([M.g.filter((function(){for(var D=arguments.length,l=new Array(D),G=0;G<D;G++)l[G]=arguments[G];let[V,N]=l;return!Array.isArray(V)&&!Array.isArray(N)}))],b,"extractMinAndMaxIndexed",null),(0,V.b)([M.g.filter((function(){for(var D=arguments.length,l=new Array(D),G=0;G<D;G++)l[G]=arguments[G];let[V]=l;return!Array.isArray(V)}))],b,"extractMinAndMax",null)},12059:(D,l,G)=>{G.d(l,{d:()=>t});var V=G(11788),N=G(12066),M=G(12073),b=G(12090),X=G(11833);class t{get materialDefines(){var D;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(D=this._getDrawWrapper())||void 0===D?void 0:D.defines}set materialDefines(D){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=D}_getDrawWrapper(D){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];D=D??this._engine.currentRenderPassId;let G=this._drawWrappers[D];return!G&&l&&(this._drawWrappers[D]=G=new X.c(this._mesh.uD().getEngine())),G}_removeDrawWrapper(D){let l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var G;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(G=this._drawWrappers[D])||void 0===G||G.dispose(l));this._drawWrappers[D]=void 0}get effect(){var D;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(D=this._getDrawWrapper())||void 0===D?void 0:D.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(D){this._mainDrawWrapperOverride=D}setEffect(D){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,G=arguments.length>2?arguments[2]:void 0,V=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const N=this._drawWrapper;N.setEffect(D,l,V),void 0!==G&&(N.materialContext=G),D||(N.defines=null,N.materialContext=void 0)}resetDrawCache(D){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==D)return void this._removeDrawWrapper(D,!0,l);for(const D of this._drawWrappers)null===D||void 0===D||D.dispose(l)}this._drawWrappers=[]}static AddToMesh(D,l,G,V,N,M,b){return new t(D,l,G,V,N,M,b,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(D,l,G,V,N,M,b){let X=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],t=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=D,this.verticesStart=l,this.verticesCount=G,this.indexStart=V,this.indexCount=N,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=M,this._renderingMesh=b||M,t&&M.nb.push(this),this._engine=this._mesh.uD().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=M.nb.length-1,X&&(this.refreshBoundingInfo(),M.hb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(D){return this._boundingInfo=D,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const D=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return D||this._renderingMesh}cD(){let D=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const l=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!l)return D&&this._mesh.uD()._hasDefaultMaterial?this._mesh.uD().defaultMaterial:null;if(this._isMultiMaterial(l)){const D=l.getSubMaterial(this.materialIndex);return this._currentMaterial!==D&&(this._currentMaterial=D,this.resetDrawCache()),D}return l}_isMultiMaterial(D){return void 0!==D.getSubMaterial}refreshBoundingInfo(){let D=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.xb)return this;if(D||(D=this._renderingMesh.getVerticesData(V.e.PositionKind)),!D)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const l=this._renderingMesh.rb();let G;if(0===this.indexStart&&this.indexCount===l.length){const D=this._renderingMesh.getBoundingInfo();G={minimum:D.minimum.clone(),maximum:D.maximum.clone()}}else G=(0,b.d)(D,l,this.indexStart,this.indexCount,this._renderingMesh.xb.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(G.minimum,G.maximum):this._boundingInfo=new M.d(G.minimum,G.maximum),this}_checkCollision(D){return this.getBoundingInfo()._checkCollision(D)}updateBoundingInfo(D){let l=this.getBoundingInfo();return l||(this.refreshBoundingInfo(),l=this.getBoundingInfo()),l&&l.update(D),this}isInFrustum(D){const l=this.getBoundingInfo();return!!l&&l.isInFrustum(D,this._mesh.vg)}isCompletelyInFrustum(D){const l=this.getBoundingInfo();return!!l&&l.isCompletelyInFrustum(D)}render(D){return this._renderingMesh.render(this,D,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(D,l){if(!this._linesIndexBuffer){const G=6*Math.floor(this.indexCount/3),V=this.verticesStart+this.verticesCount>65535?new Uint32Array(G):new Uint16Array(G);let N=0;if(0===D.length)for(let D=this.indexStart;D<this.indexStart+this.indexCount;D+=3)V[N++]=D,V[N++]=D+1,V[N++]=D+1,V[N++]=D+2,V[N++]=D+2,V[N++]=D;else for(let l=this.indexStart;l<this.indexStart+this.indexCount;l+=3)V[N++]=D[l],V[N++]=D[l+1],V[N++]=D[l+1],V[N++]=D[l+2],V[N++]=D[l+2],V[N++]=D[l];this._linesIndexBuffer=l.createIndexBuffer(V),this._linesIndexCount=V.length}return this._linesIndexBuffer}canIntersects(D){const l=this.getBoundingInfo();return!!l&&D.intersectsBox(l.boundingBox)}intersects(D,l,G,V,N){const M=this.cD();if(!M)return null;let b=3,X=!1;switch(M.fillMode){case 3:case 5:case 6:case 8:return null;case 7:b=1,X=!0}return 4===M.fillMode?G.length?this._intersectLines(D,l,G,this._mesh.intersectionThreshold,V):this._intersectUnIndexedLines(D,l,G,this._mesh.intersectionThreshold,V):!G.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(D,l,G,V,N):this._intersectTriangles(D,l,G,b,X,V,N)}_intersectLines(D,l,G,V,M){let b=null;for(let X=this.indexStart;X<this.indexStart+this.indexCount;X+=2){const t=l[G[X]],R=l[G[X+1]],n=D.intersectionSegment(t,R,V);if(!(n<0)&&((M||!b||n<b.distance)&&(b=new N.e(null,null,n),b.faceId=X/2,M)))break}return b}_intersectUnIndexedLines(D,l,G,V,M){let b=null;for(let X=this.verticesStart;X<this.verticesStart+this.verticesCount;X+=2){const G=l[X],t=l[X+1],R=D.intersectionSegment(G,t,V);if(!(R<0)&&((M||!b||R<b.distance)&&(b=new N.e(null,null,R),b.faceId=X/2,M)))break}return b}_intersectTriangles(D,l,G,V,N,M,b){let X=null,t=-1;for(let R=this.indexStart;R<this.indexStart+this.indexCount-(3-V);R+=V){t++;const V=G[R],n=G[R+1],g=G[R+2];if(N&&4294967295===g){R+=2;continue}const j=l[V],e=l[n],K=l[g];if(!j||!e||!K)continue;if(b&&!b(j,e,K,D,V,n,g))continue;const F=D.intersectsTriangle(j,e,K);if(F){if(F.distance<0)continue;if((M||!X||F.distance<X.distance)&&(X=F,X.faceId=t,M))break}}return X}_intersectUnIndexedTriangles(D,l,G,V,N){let M=null;for(let b=this.verticesStart;b<this.verticesStart+this.verticesCount;b+=3){const G=l[b],X=l[b+1],t=l[b+2];if(N&&!N(G,X,t,D,-1,-1,-1))continue;const R=D.intersectsTriangle(G,X,t);if(R){if(R.distance<0)continue;if((V||!M||R.distance<M.distance)&&(M=R,M.faceId=b/3,V))break}}return M}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(D,l){const G=new t(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,D,l,!1);if(!this.IsGlobal){const D=this.getBoundingInfo();if(!D)return G;G._boundingInfo=new M.d(D.minimum,D.maximum)}return G}dispose(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.uD().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const l=this._mesh.nb.indexOf(this);this._mesh.nb.splice(l,1),this.resetDrawCache(void 0,D)}getClassName(){return"SubMesh"}static CreateFromIndices(D,l,G,V,N){let M=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],b=Number.MAX_VALUE,X=-Number.MAX_VALUE;const R=(N||V).rb();for(let t=l;t<l+G;t++){const D=R[t];D<b&&(b=D),D>X&&(X=D)}return new t(D,b,X-b+1,l,G,V,N,M)}}}}]);