"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[24],{12145:(M,p,b)=>{b.d(p,{d:()=>Q});class Q{constructor(M,p,b){this.bu=M,this.bv=p,this.distance=b,this.faceId=0,this.subMeshId=0}}},12153:(M,p,b)=>{b.d(p,{b:()=>k});var Q=b(11800),q=b(11796),B=b(11798);class k{constructor(M,p,b){this.vectors=(0,Q.e)(8,q.Ap.Zero),this.center=q.Ap.Zero(),this.centerWorld=q.Ap.Zero(),this.extendSize=q.Ap.Zero(),this.extendSizeWorld=q.Ap.Zero(),this.directions=(0,Q.e)(3,q.Ap.Zero),this.vectorsWorld=(0,Q.e)(8,q.Ap.Zero),this.minimumWorld=q.Ap.Zero(),this.maximumWorld=q.Ap.Zero(),this.minimum=q.Ap.Zero(),this.maximum=q.Ap.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(M,p,b)}reConstruct(M,p,b){const Q=M.x,B=M.y,k=M.z,u=p.x,T=p.y,O=p.z,H=this.vectors;this.minimum.Db(Q,B,k),this.maximum.Db(u,T,O),H[0].Db(Q,B,k),H[1].Db(u,T,O),H[2].Db(u,B,k),H[3].Db(Q,T,k),H[4].Db(Q,B,O),H[5].Db(u,T,k),H[6].Db(Q,T,O),H[7].Db(u,B,O),p.addToRef(M,this.center).scaleInPlace(.5),p.subtractToRef(M,this.extendSize).scaleInPlace(.5),this._worldMatrix=b||q.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(M){const p=k._TmpVector3,b=this.maximum.subtractToRef(this.minimum,p[0]),Q=b.length();b.normalizeFromLength(Q);const q=Q*M,B=b.scaleInPlace(.5*q),u=this.center.subtractToRef(B,p[1]),T=this.center.addToRef(B,p[2]);return this.reConstruct(u,T,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(M){const p=this.minimumWorld,b=this.maximumWorld,Q=this.directions,B=this.vectorsWorld,k=this.vectors;if(M.isIdentity()){p.B(this.minimum),b.B(this.maximum);for(let M=0;M<8;++M)B[M].B(k[M]);this.extendSizeWorld.B(this.extendSize),this.centerWorld.B(this.center)}else{p.sb(Number.MAX_VALUE),b.sb(-Number.MAX_VALUE);for(let Q=0;Q<8;++Q){const u=B[Q];q.Ap.TransformCoordinatesToRef(k[Q],M,u),p.minimizeInPlace(u),b.maximizeInPlace(u)}b.subtractToRef(p,this.extendSizeWorld).scaleInPlace(.5),b.addToRef(p,this.centerWorld).scaleInPlace(.5)}q.Ap.FromArrayToRef(M.m,0,Q[0]),q.Ap.FromArrayToRef(M.m,4,Q[1]),q.Ap.FromArrayToRef(M.m,8,Q[2]),this._worldMatrix=M}isInFrustum(M){return k.IsInFrustum(this.vectorsWorld,M)}isCompletelyInFrustum(M){return k.IsCompletelyInFrustum(this.vectorsWorld,M)}intersectsPoint(M){const p=this.minimumWorld,b=this.maximumWorld,Q=p.x,q=p.y,k=p.z,u=b.x,T=b.y,O=b.z,H=M.x,F=M.y,o=M.z,W=-B.d;return!(u-H<W||W>H-Q)&&(!(T-F<W||W>F-q)&&!(O-o<W||W>o-k))}intersectsSphere(M){return k.IntersectsSphere(this.minimumWorld,this.maximumWorld,M.centerWorld,M.radiusWorld)}intersectsMinMax(M,p){const b=this.minimumWorld,Q=this.maximumWorld,q=b.x,B=b.y,k=b.z,u=Q.x,T=Q.y,O=Q.z,H=M.x,F=M.y,o=M.z,W=p.x,i=p.y,A=p.z;return!(u<H||q>W)&&(!(T<F||B>i)&&!(O<o||k>A))}dispose(){var M,p;null===(M=this._drawWrapperFront)||void 0===M||M.dispose(),null===(p=this._drawWrapperBack)||void 0===p||p.dispose()}static Intersects(M,p){return M.intersectsMinMax(p.minimumWorld,p.maximumWorld)}static IntersectsSphere(M,p,b,Q){const B=k._TmpVector3[0];q.Ap.ClampToRef(b,M,p,B);return q.Ap.DistanceSquared(b,B)<=Q*Q}static IsCompletelyInFrustum(M,p){for(let b=0;b<6;++b){const Q=p[b];for(let p=0;p<8;++p)if(Q.dotCoordinate(M[p])<0)return!1}return!0}static IsInFrustum(M,p){for(let b=0;b<6;++b){let Q=!0;const q=p[b];for(let p=0;p<8;++p)if(q.dotCoordinate(M[p])>=0){Q=!1;break}if(Q)return!1}return!0}}k._TmpVector3=(0,Q.e)(3,q.Ap.Zero)},12150:(M,p,b)=>{b.d(p,{d:()=>F});var Q=b(11800),q=b(11796),B=b(12153),k=b(12159);const u={min:0,max:0},T={min:0,max:0},O=(M,p,b)=>{const Q=q.Ap.Dot(p.centerWorld,M),B=Math.abs(q.Ap.Dot(p.directions[0],M))*p.extendSize.x+Math.abs(q.Ap.Dot(p.directions[1],M))*p.extendSize.y+Math.abs(q.Ap.Dot(p.directions[2],M))*p.extendSize.z;b.min=Q-B,b.max=Q+B},H=(M,p,b)=>(O(M,p,u),O(M,b,T),!(u.min>T.max||T.min>u.max));class F{constructor(M,p,b){this._isLocked=!1,this.boundingBox=new B.b(M,p,b),this.boundingSphere=new k.b(M,p,b)}reConstruct(M,p,b){this.boundingBox.reConstruct(M,p,b),this.boundingSphere.reConstruct(M,p,b)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(M){this._isLocked=M}update(M){this._isLocked||(this.boundingBox._update(M),this.boundingSphere._update(M))}centerOn(M,p){const b=F._TmpVector3[0].B(M).TF(p),Q=F._TmpVector3[1].B(M).addInPlace(p);return this.boundingBox.reConstruct(b,Q,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(b,Q,this.boundingBox.getWorldMatrix()),this}encapsulate(M){const p=q.Ap.Minimize(this.minimum,M),b=q.Ap.Maximize(this.maximum,M);return this.reConstruct(p,b,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(M){const p=q.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(p);const b=q.TmpVectors.Ap[0];return q.Ap.TransformCoordinatesToRef(M.boundingBox.minimumWorld,p,b),this.encapsulate(b),q.Ap.TransformCoordinatesToRef(M.boundingBox.maximumWorld,p,b),this.encapsulate(b),this}scale(M){return this.boundingBox.scale(M),this.boundingSphere.scale(M),this}isInFrustum(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===p||3===p)&&this.boundingSphere.isCenterInFrustum(M))return!0;if(!this.boundingSphere.isInFrustum(M))return!1;return!(1!==p&&3!==p)||this.boundingBox.isInFrustum(M)}get diagonalLength(){const M=this.boundingBox;return M.maximumWorld.subtractToRef(M.minimumWorld,F._TmpVector3[0]).length()}isCompletelyInFrustum(M){return this.boundingBox.isCompletelyInFrustum(M)}_checkCollision(M){return M._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(M){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(M)&&!!this.boundingBox.intersectsPoint(M))}intersects(M,p){if(!k.b.Intersects(this.boundingSphere,M.boundingSphere))return!1;if(!B.b.Intersects(this.boundingBox,M.boundingBox))return!1;if(!p)return!0;const b=this.boundingBox,Q=M.boundingBox;return!!H(b.directions[0],b,Q)&&(!!H(b.directions[1],b,Q)&&(!!H(b.directions[2],b,Q)&&(!!H(Q.directions[0],b,Q)&&(!!H(Q.directions[1],b,Q)&&(!!H(Q.directions[2],b,Q)&&(!!H(q.Ap.Cross(b.directions[0],Q.directions[0]),b,Q)&&(!!H(q.Ap.Cross(b.directions[0],Q.directions[1]),b,Q)&&(!!H(q.Ap.Cross(b.directions[0],Q.directions[2]),b,Q)&&(!!H(q.Ap.Cross(b.directions[1],Q.directions[0]),b,Q)&&(!!H(q.Ap.Cross(b.directions[1],Q.directions[1]),b,Q)&&(!!H(q.Ap.Cross(b.directions[1],Q.directions[2]),b,Q)&&(!!H(q.Ap.Cross(b.directions[2],Q.directions[0]),b,Q)&&(!!H(q.Ap.Cross(b.directions[2],Q.directions[1]),b,Q)&&!!H(q.Ap.Cross(b.directions[2],Q.directions[2]),b,Q))))))))))))))}}F._TmpVector3=(0,Q.e)(2,q.Ap.Zero)},12159:(M,p,b)=>{b.d(p,{b:()=>B});var Q=b(11800),q=b(11796);class B{constructor(M,p,b){this.center=q.Ap.Zero(),this.centerWorld=q.Ap.Zero(),this.minimum=q.Ap.Zero(),this.maximum=q.Ap.Zero(),this.reConstruct(M,p,b)}reConstruct(M,p,b){this.minimum.B(M),this.maximum.B(p);const Q=q.Ap.Distance(M,p);p.addToRef(M,this.center).scaleInPlace(.5),this.radius=.5*Q,this._update(b||q.Matrix.IdentityReadOnly)}scale(M){const p=this.radius*M,b=B._TmpVector3,Q=b[0].sb(p),q=this.center.subtractToRef(Q,b[1]),k=this.center.addToRef(Q,b[2]);return this.reConstruct(q,k,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(M){if(M.isIdentity())this.centerWorld.B(this.center),this.radiusWorld=this.radius;else{q.Ap.TransformCoordinatesToRef(this.center,M,this.centerWorld);const p=B._TmpVector3[0];q.Ap.TransformNormalFromFloatsToRef(1,1,1,M,p),this.radiusWorld=Math.max(Math.abs(p.x),Math.abs(p.y),Math.abs(p.z))*this.radius}}isInFrustum(M){const p=this.centerWorld,b=this.radiusWorld;for(let Q=0;Q<6;Q++)if(M[Q].dotCoordinate(p)<=-b)return!1;return!0}isCenterInFrustum(M){const p=this.centerWorld;for(let b=0;b<6;b++)if(M[b].dotCoordinate(p)<0)return!1;return!0}intersectsPoint(M){const p=q.Ap.DistanceSquared(this.centerWorld,M);return!(this.radiusWorld*this.radiusWorld<p)}static Intersects(M,p){const b=q.Ap.DistanceSquared(M.centerWorld,p.centerWorld),Q=M.radiusWorld+p.radiusWorld;return!(Q*Q<b)}static CreateFromCenterAndRadius(M,p,b){this._TmpVector3[0].B(M),this._TmpVector3[1].Db(0,0,p),this._TmpVector3[2].B(M),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].TF(this._TmpVector3[1]);const Q=new B(this._TmpVector3[0],this._TmpVector3[2]);return Q._worldMatrix=b||q.Matrix.Identity(),Q}}B._TmpVector3=(0,Q.e)(3,q.Ap.Zero)},12173:(M,p,b)=>{function Q(M){-1===M.indexOf("vClipPlane")&&M.push("vClipPlane"),-1===M.indexOf("vClipPlane2")&&M.push("vClipPlane2"),-1===M.indexOf("vClipPlane3")&&M.push("vClipPlane3"),-1===M.indexOf("vClipPlane4")&&M.push("vClipPlane4"),-1===M.indexOf("vClipPlane5")&&M.push("vClipPlane5"),-1===M.indexOf("vClipPlane6")&&M.push("vClipPlane6")}function q(M,p,b){const Q=!!(M.clipPlane??p.clipPlane),q=!!(M.clipPlane2??p.clipPlane2),B=!!(M.clipPlane3??p.clipPlane3),k=!!(M.clipPlane4??p.clipPlane4),u=!!(M.clipPlane5??p.clipPlane5),T=!!(M.clipPlane6??p.clipPlane6);Q&&b.push("#define CLIPPLANE"),q&&b.push("#define CLIPPLANE2"),B&&b.push("#define CLIPPLANE3"),k&&b.push("#define CLIPPLANE4"),u&&b.push("#define CLIPPLANE5"),T&&b.push("#define CLIPPLANE6")}function B(M,p,b){let Q=!1;const q=!!(M.clipPlane??p.clipPlane),B=!!(M.clipPlane2??p.clipPlane2),k=!!(M.clipPlane3??p.clipPlane3),u=!!(M.clipPlane4??p.clipPlane4),T=!!(M.clipPlane5??p.clipPlane5),O=!!(M.clipPlane6??p.clipPlane6);return b.CLIPPLANE!==q&&(b.CLIPPLANE=q,Q=!0),b.CLIPPLANE2!==B&&(b.CLIPPLANE2=B,Q=!0),b.CLIPPLANE3!==k&&(b.CLIPPLANE3=k,Q=!0),b.CLIPPLANE4!==u&&(b.CLIPPLANE4=u,Q=!0),b.CLIPPLANE5!==T&&(b.CLIPPLANE5=T,Q=!0),b.CLIPPLANE6!==O&&(b.CLIPPLANE6=O,Q=!0),Q}function k(M,p,b){let Q=p.clipPlane??b.clipPlane;u(M,"vClipPlane",Q),Q=p.clipPlane2??b.clipPlane2,u(M,"vClipPlane2",Q),Q=p.clipPlane3??b.clipPlane3,u(M,"vClipPlane3",Q),Q=p.clipPlane4??b.clipPlane4,u(M,"vClipPlane4",Q),Q=p.clipPlane5??b.clipPlane5,u(M,"vClipPlane5",Q),Q=p.clipPlane6??b.clipPlane6,u(M,"vClipPlane6",Q)}function u(M,p,b){b&&M.setFloat4(p,b.normal.x,b.normal.y,b.normal.z,b.d)}b.d(p,{d:()=>Q,e:()=>k,f:()=>B,i:()=>q})},12116:(M,p,b)=>{b.d(p,{c:()=>Q});class Q{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(M,p){this._defines[M]||(M<this._currentRank&&(this._currentRank=M),M>this._maxRank&&(this._maxRank=M),this._defines[M]=new Array),this._defines[M].push(p)}addCPUSkinningFallback(M,p){this._mesh=p,M<this._currentRank&&(this._currentRank=M),M>this._maxRank&&(this._maxRank=M)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(M,p){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,M=M.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),p._bonesComputationForcedToCPU=!0;const b=this._mesh.RM();for(let M=0;M<b.meshes.length;M++){const Q=b.meshes[M];if(Q.material){if(Q.computeBonesUsingShaders&&0!==Q.numBoneInfluencers)if(Q.material.getEffect()===p)Q.computeBonesUsingShaders=!1;else if(Q.Tb)for(const M of Q.Tb){if(M.effect===p){Q.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&Q.computeBonesUsingShaders&&Q.numBoneInfluencers>0&&(Q.computeBonesUsingShaders=!1)}}else{const p=this._defines[this._currentRank];if(p)for(let b=0;b<p.length;b++)M=M.replace("#define "+p[b],"");this._currentRank++}return M}}},12129:(M,p,b)=>{b.d(p,{e:()=>j});var Q=b(11784),q=b(11788),B=b(11621),k=b(11624),u=b(11664),T=b(12137),O=b(12057),H=b(11637),F=b(11842),o=b(11898),W=b(11823);class i{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(M){this._func=M}get funcRef(){return this._funcRef}set funcRef(M){this._funcRef=M}get funcMask(){return this._funcMask}set funcMask(M){this._funcMask=M}get opStencilFail(){return this._opStencilFail}set opStencilFail(M){this._opStencilFail=M}get opDepthFail(){return this._opDepthFail}set opDepthFail(M){this._opDepthFail=M}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(M){this._opStencilDepthPass=M}get mask(){return this._mask}set mask(M){this._mask=M}get enabled(){return this._enabled}set enabled(M){this._enabled=M}getClassName(){return"MaterialStencilState"}copyTo(M){W.b.Clone((()=>M),this)}serialize(){return W.b.Serialize(this)}parse(M,p,b){W.b.Parse((()=>this),M,p,b)}}(0,Q.c)([(0,q.R)()],i.prototype,"func",null),(0,Q.c)([(0,q.R)()],i.prototype,"funcRef",null),(0,Q.c)([(0,q.R)()],i.prototype,"funcMask",null),(0,Q.c)([(0,q.R)()],i.prototype,"opStencilFail",null),(0,Q.c)([(0,q.R)()],i.prototype,"opDepthFail",null),(0,Q.c)([(0,q.R)()],i.prototype,"opStencilDepthPass",null),(0,Q.c)([(0,q.R)()],i.prototype,"mask",null),(0,Q.c)([(0,q.R)()],i.prototype,"enabled",null);var A=b(12167);class j{get _supportGlowLayer(){return!1}set _glowModeEnabled(M){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(M){if(this._alpha===M)return;const p=this._alpha;this._alpha=M,1!==p&&1!==M||this.XO(j.MiscDirtyFlag+j.PrePassDirtyFlag)}get alpha(){return this._alpha}set Kb(M){this._backFaceCulling!==M&&(this._backFaceCulling=M,this.XO(j.TextureDirtyFlag))}get Kb(){return this._backFaceCulling}set cullBackFaces(M){this._cullBackFaces!==M&&(this._cullBackFaces=M,this.XO(j.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(M){this._blockDirtyMechanism!==M&&(this._blockDirtyMechanism=M,M||this.GF())}atomicMaterialsUpdate(M){this.blockDirtyMechanism=!0;try{M(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(M){this._onDisposeObserver&&this.bb.remove(this._onDisposeObserver),this._onDisposeObserver=this.bb.add(M)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new k.b),this._onBindObservable}set onBind(M){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(M)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new k.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new k.b),this._onEffectCreatedObservable}set alphaMode(M){this._alphaMode!==M&&(this._alphaMode=M,this.XO(j.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(M){this._needDepthPrePass!==M&&(this._needDepthPrePass=M,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(M){this._fogEnabled!==M&&(this._fogEnabled=M,this.XO(j.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case j.WireFrameFillMode:case j.LineListDrawMode:case j.LineLoopDrawMode:case j.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(M){this.fillMode=M?j.WireFrameFillMode:j.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case j.PointFillMode:case j.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(M){this.fillMode=M?j.PointFillMode:j.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(M){this._fillMode!==M&&(this._fillMode=M,this.XO(j.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(M){const p=this.RM().getEngine().getCaps().fragmentDepthSupported;M&&!p&&H.c.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=M&&p,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(M){this._drawWrapper=M}constructor(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.bb=new k.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new i,this._useUBO=!1,this._fillMode=j.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=M;const q=p||u.c.LastCreatedScene;q&&(this._scene=q,this._dirtyCallbacks={},this._forceGLSL=Q,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=M||B.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new o.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new O.b(this._scene.getEngine(),void 0,void 0,M),this._useUBO=this.RM().getEngine().supportsUniformBuffers,this._createUniformBuffer(),b||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),j.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var M;const p=this.RM().getEngine();null===(M=this._uniformBuffer)||void 0===M||M.dispose(),p.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new O.b(p,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new O.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(M){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.GF(),this.checkReadyOnlyOnce=!0}unfreeze(){this.GF(),this.checkReadyOnlyOnce=!1}isReady(M,p){return!0}isReadyForSubMesh(M,p,b){const Q=p.materialDefines;return!!Q&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Q,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}RM(){return this._scene}_getEffectiveOrientation(M){return null!==this.sideOrientation?this.sideOrientation:M.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(M){this._transparencyMode!==M&&(this._transparencyMode=M,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===j.MATERIAL_ALPHABLEND||this._transparencyMode===j.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===j.MATERIAL_ALPHATEST||this._transparencyMode===j.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===j.MATERIAL_OPAQUE||this._transparencyMode===j.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(M){return this._hasTransparencyMode?this._transparencyModeIsBlend:M.visibility<1||!this._disableAlphaBlending&&(M.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(M){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(M)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}GF(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const p=this.RM().meshes;for(const b of p)if(b.Tb)for(const p of b.Tb)if(p.UM()===this)for(const b of p._drawWrappers)b&&this._materialContext===b.materialContext&&(b._wasPreviouslyReady=!1,b._wasPreviouslyUsingInstances=null,b._forceRebindOnNextCall=M);M&&this.XO(j.AllDirtyFlag)}_preBind(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const b=this._scene.getEngine(),Q=(null==p?this.sideOrientation:p)===j.ClockWiseSideOrientation;return b.enableEffect(M||this._getDrawWrapper()),b.setState(this.Kb,this.zOffset,!1,Q,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),Q}bind(M,p){}buildUniformLayout(){const M=this._uniformBuffer;this._eventInfo.ubo=M,this._callbackPluginEventGeneric(8,this._eventInfo),M.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(M,p,b){const Q=b._drawWrapper;this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),Q._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(M){}bindView(M){this._useUBO?this._needToBindSceneUbo=!0:M.setMatrix("view",this.RM().getViewMatrix())}bindViewProjection(M){this._useUBO?this._needToBindSceneUbo=!0:(M.setMatrix("viewProjection",this.RM().getTransformMatrix()),M.setMatrix("projection",this.RM().getProjectionMatrix()))}bindEyePosition(M,p){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(M,p)}_afterBind(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&p&&(this._needToBindSceneUbo=!1,(0,A.j)(p,this.RM().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=M?M.visibility:1,this._onBindObservable&&M&&this._onBindObservable.notifyObservers(M),this.disableDepthWrite){const M=this._scene.getEngine();this._cachedDepthWriteState=M.getDepthWrite(),M.setDepthWrite(!1)}if(this.disableColorWrite){const M=this._scene.getEngine();this._cachedColorWriteState=M.getColorWrite(),M.setColorWrite(!1)}if(0!==this.depthFunction){const M=this._scene.getEngine();this._cachedDepthFunctionState=M.getDepthFunction()||0,M.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(M){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=M,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(M){return null}_clonePlugins(M,p){const b={};if(this._serializePlugins(b),j._ParsePlugins(b,M,this._scene,p),this.pluginManager)for(const Q of this.pluginManager._plugins){const p=M.pluginManager.getPlugin(Q.name);p&&Q.copyTo(p)}}getBindedMeshes(){if(this.meshMap){const M=[];for(const p in this.meshMap){const b=this.meshMap[p];b&&M.push(b)}return M}return this._scene.meshes.filter((M=>M.material===this))}forceCompilation(M,p,b,Q){const q={clipPlane:!1,useInstances:!1,...b},B=this.RM(),k=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const u=()=>{if(!this._scene||!this._scene.getEngine())return;const b=B.clipPlane;if(q.clipPlane&&(B.clipPlane=new F.e(0,0,0,1)),this._storeEffectOnSubMeshes){let b=!0,B=null;if(M.Tb){const p=new T.c(0,0,0,0,0,M,void 0,!1,!1);p.materialDefines&&(p.materialDefines._renderId=-1),this.isReadyForSubMesh(M,p,q.useInstances)||(p.effect&&p.effect.getCompilationError()&&p.effect.allFallbacksProcessed()?B=p.effect.getCompilationError():(b=!1,setTimeout(u,16)))}b&&(this.allowShaderHotSwapping=k,B&&Q&&Q(B),p&&p(this))}else this.isReady()?(this.allowShaderHotSwapping=k,p&&p(this)):setTimeout(u,16);q.clipPlane&&(B.clipPlane=b)};u()}async forceCompilationAsync(M,p){return await new Promise(((b,Q)=>{this.forceCompilation(M,(()=>{b()}),p,(M=>{Q(M)}))}))}XO(M){this.RM().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(j._DirtyCallbackArray.length=0,M&j.ImageProcessingDirtyFlag&&j._DirtyCallbackArray.push(j._ImageProcessingDirtyCallBack),M&j.TextureDirtyFlag&&j._DirtyCallbackArray.push(j._TextureDirtyCallBack),M&j.LightDirtyFlag&&j._DirtyCallbackArray.push(j._LightsDirtyCallBack),M&j.FresnelDirtyFlag&&j._DirtyCallbackArray.push(j._FresnelDirtyCallBack),M&j.AttributesDirtyFlag&&j._DirtyCallbackArray.push(j._AttributeDirtyCallBack),M&j.MiscDirtyFlag&&j._DirtyCallbackArray.push(j._MiscDirtyCallBack),M&j.PrePassDirtyFlag&&j._DirtyCallbackArray.push(j._PrePassDirtyCallBack),j._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(j._RunDirtyCallBacks),this.RM().resetCachedMaterial())}resetDrawCache(){const M=this.RM().meshes;for(const p of M)if(p.Tb)for(const M of p.Tb)M.UM()===this&&M.resetDrawCache()}_markAllSubMeshesAsDirty(M){const p=this.RM();if(p.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const b=p.meshes;for(const Q of b)if(Q.Tb)for(const b of Q.Tb){if((b.UM()||(p._hasDefaultMaterial?p.defaultMaterial:null))===this)for(const p of b._drawWrappers)p&&p.defines&&p.defines.markAllAsDirty&&this._materialContext===p.materialContext&&M(p.defines)}}_markScenePrePassDirty(){if(this.RM().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const M=this.RM().enablePrePassRenderer();M&&M.XO()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(j._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(j._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(j._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(j._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(j._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(j._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(j._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(j._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(j._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(j._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const M=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.bb.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(M)}))}}setPrePassRenderer(M){return!1}dispose(M,p,b){const Q=this.RM();if(Q.stopAnimation(this),Q.freeProcessedMaterials(),Q.removeMaterial(this),this._eventInfo.forceDisposeTextures=p,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const M=this._parentContainer.materials.indexOf(this);M>-1&&this._parentContainer.materials.splice(M,1),this._parentContainer=null}if(!0!==b)if(this.meshMap)for(const q in this.meshMap){const M=this.meshMap[q];this._disposeMeshResources(M)}else{const M=Q.meshes;for(const p of M)this._disposeMeshResources(p)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.bb.notifyObservers(this),this.bb.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(M){if(!M)return;const p=M.Ab,b=M._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(M.Tb&&b)for(const q of M.Tb){const M=q._drawWrappers;for(let B=0;B<M.length;B++){var Q;const k=null===(Q=M[B])||void 0===Q?void 0:Q.effect;if(!k)continue;b[B]===this&&(null===p||void 0===p||p._releaseVertexArrayObject(k),q._removeDrawWrapper(B,!0,!0))}}}else null===p||void 0===p||p._releaseVertexArrayObject(this._drawWrapper.effect);M.material!==this||M.sourceMesh||(M.material=null)}serialize(){const M=W.b.Serialize(this);return M.stencil=this.stencil.serialize(),M.uniqueId=this.uniqueId,this._serializePlugins(M),M}_serializePlugins(M){if(M.plugins={},this.pluginManager)for(const p of this.pluginManager._plugins)p.doNotSerialize||(M.plugins[p.getClassName()]=p.serialize())}static Parse(M,p,b){if(M.customType){if("BABYLON.PBRMaterial"===M.customType&&M.overloadedAlbedo&&(M.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return H.c.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else M.customType="BABYLON.StandardMaterial";const Q=B.Tools.Instantiate(M.customType).Parse(M,p,b);return Q._loadedUniqueId=M.uniqueId,Q}static _ParsePlugins(M,p,b,Q){if(M.plugins)for(const u in M.plugins){var q,k;const T=M.plugins[u];let O=null===(q=p.pluginManager)||void 0===q?void 0:q.getPlugin(T.name);if(!O){const M=B.Tools.Instantiate("BABYLON."+u);M&&(O=new M(p))}null===(k=O)||void 0===k||k.parse(T,b,Q)}}}j.TriangleFillMode=0,j.WireFrameFillMode=1,j.PointFillMode=2,j.PointListDrawMode=3,j.LineListDrawMode=4,j.LineLoopDrawMode=5,j.LineStripDrawMode=6,j.TriangleStripDrawMode=7,j.TriangleFanDrawMode=8,j.ClockWiseSideOrientation=0,j.CounterClockWiseSideOrientation=1,j.ImageProcessingDirtyFlag=64,j.TextureDirtyFlag=1,j.LightDirtyFlag=2,j.FresnelDirtyFlag=4,j.AttributesDirtyFlag=8,j.MiscDirtyFlag=16,j.PrePassDirtyFlag=32,j.AllDirtyFlag=127,j.MATERIAL_OPAQUE=0,j.MATERIAL_ALPHATEST=1,j.MATERIAL_ALPHABLEND=2,j.MATERIAL_ALPHATESTANDBLEND=3,j.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,j.MATERIAL_NORMALBLENDMETHOD_RNM=1,j.OnEventObservable=new k.b,j._AllDirtyCallBack=M=>M.markAllAsDirty(),j._ImageProcessingDirtyCallBack=M=>M.markAsImageProcessingDirty(),j._TextureDirtyCallBack=M=>M.markAsTexturesDirty(),j._FresnelDirtyCallBack=M=>M.markAsFresnelDirty(),j._MiscDirtyCallBack=M=>M.markAsMiscDirty(),j._PrePassDirtyCallBack=M=>M.markAsPrePassDirty(),j._LightsDirtyCallBack=M=>M.markAsLightDirty(),j._AttributeDirtyCallBack=M=>M.markAsAttributesDirty(),j._FresnelAndMiscDirtyCallBack=M=>{j._FresnelDirtyCallBack(M),j._MiscDirtyCallBack(M)},j._TextureAndMiscDirtyCallBack=M=>{j._TextureDirtyCallBack(M),j._MiscDirtyCallBack(M)},j._DirtyCallbackArray=[],j._RunDirtyCallBacks=M=>{for(const p of j._DirtyCallbackArray)p(M)},(0,Q.c)([(0,q.R)()],j.prototype,"id",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"uniqueId",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"name",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"metadata",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"checkReadyOnEveryCall",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"checkReadyOnlyOnce",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"state",void 0),(0,Q.c)([(0,q.R)("alpha")],j.prototype,"_alpha",void 0),(0,Q.c)([(0,q.R)("Kb")],j.prototype,"_backFaceCulling",void 0),(0,Q.c)([(0,q.R)("cullBackFaces")],j.prototype,"_cullBackFaces",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"sideOrientation",void 0),(0,Q.c)([(0,q.R)("alphaMode")],j.prototype,"_alphaMode",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"_needDepthPrePass",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"disableDepthWrite",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"disableColorWrite",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"forceDepthWrite",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"depthFunction",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"separateCullingPass",void 0),(0,Q.c)([(0,q.R)("fogEnabled")],j.prototype,"_fogEnabled",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"pointSize",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"zOffset",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"zOffsetUnits",void 0),(0,Q.c)([(0,q.R)()],j.prototype,"pointsCloud",null),(0,Q.c)([(0,q.R)()],j.prototype,"fillMode",null),(0,Q.c)([(0,q.R)()],j.prototype,"useLogarithmicDepth",null),(0,Q.c)([(0,q.R)()],j.prototype,"transparencyMode",null)},12167:(M,p,b)=>{b.d(p,{A:()=>Y,B:()=>r,C:()=>L,D:()=>K,G:()=>P,J:()=>w,L:()=>E,M:()=>n,Q:()=>U,R:()=>i,b:()=>s,c:()=>F,d:()=>f,e:()=>H,g:()=>A,j:()=>j,m:()=>D,n:()=>x,p:()=>a,r:()=>R,v:()=>y,w:()=>W,y:()=>o});var Q=b(11637),q=b(11833),B=b(11664),k=b(12112),u=b(12173);const T=q.ap.Black(),O={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function H(M,p,b){if(!M||M.LOGARITHMICDEPTH||M.indexOf&&M.indexOf("LOGARITHMICDEPTH")>=0){const M=b.activeCamera;1===M.mode&&Q.c.Error("Logarithmic depth is not compatible with orthographic cameras!",20),p.setFloat("logarithmicDepthConstant",2/(Math.log(M.maxZ+1)/Math.LN2))}}function F(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];b&&M.fogEnabled&&(!p||p.applyFog)&&0!==M.fogMode&&(b.setFloat4("vFogInfos",M.fogMode,M.fogStart,M.fogEnd,M.fogDensity),Q?(M.fogColor.toLinearSpaceToRef(T,M.getEngine().useExactSrgbConversions),b.setColor3("vFogColor",T)):b.setColor3("vFogColor",M.fogColor))}function o(M,p,b,Q,q,B,k,u,T,H){const F=M.numMaxInfluencers||M.numInfluencers;return F<=0?0:(p.push("#define MORPHTARGETS"),M.hasPositions&&p.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),M.hasNormals&&p.push("#define MORPHTARGETTEXTURE_HASNORMALS"),M.hasTangents&&p.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),M.hasUVs&&p.push("#define MORPHTARGETTEXTURE_HASUVS"),M.hasUV2s&&p.push("#define MORPHTARGETTEXTURE_HASUV2S"),M.hasColors&&p.push("#define MORPHTARGETTEXTURE_HASCOLORS"),M.supportsPositions&&q&&p.push("#define MORPHTARGETS_POSITION"),M.supportsNormals&&B&&p.push("#define MORPHTARGETS_NORMAL"),M.supportsTangents&&k&&p.push("#define MORPHTARGETS_TANGENT"),M.supportsUVs&&u&&p.push("#define MORPHTARGETS_UV"),M.supportsUV2s&&T&&p.push("#define MORPHTARGETS_UV2"),M.supportsColors&&H&&p.push("#define MORPHTARGETS_COLOR"),p.push("#define NUM_MORPH_INFLUENCERS "+F),M.isUsingTextureForTargets&&p.push("#define MORPHTARGETS_TEXTURE"),O.NUM_MORPH_INFLUENCERS=F,O.NORMAL=B,O.TANGENT=k,O.UV=u,O.UV2=T,O.COLOR=H,W(b,Q,O,q),F)}function W(M,p,b){let q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const k=b.NUM_MORPH_INFLUENCERS;if(k>0&&B.c.LastCreatedEngine){const u=B.c.LastCreatedEngine.getCaps().maxVertexAttribs,T=p.morphTargetManager;if(null!==T&&void 0!==T&&T.isUsingTextureForTargets)return;const O=T&&T.supportsPositions&&q,H=T&&T.supportsNormals&&b.NORMAL,F=T&&T.supportsTangents&&b.TANGENT,o=T&&T.supportsUVs&&b.UV1,W=T&&T.supportsUV2s&&b.UV2,i=T&&T.supportsColors&&b.VERTEXCOLOR;for(let b=0;b<k;b++)O&&M.push("position"+b),H&&M.push("normal"+b),F&&M.push("tangent"+b),o&&M.push("uv_"+b),W&&M.push("uv2_"+b),i&&M.push("color"+b),M.length>u&&Q.c.Error("Cannot add more vertex attributes for mesh "+p.name)}}function i(M){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];M.push("world0"),M.push("world1"),M.push("world2"),M.push("world3"),p&&(M.push("previousWorld0"),M.push("previousWorld1"),M.push("previousWorld2"),M.push("previousWorld3"))}function A(M,p){const b=M.morphTargetManager;M&&b&&p.setFloatArray("morphTargetInfluences",b.influences)}function j(M,p){p.bindToEffect(M,"Scene")}function K(M,p,b){p._needUVs=!0,p[b]=!0,M.optimizeUVAllocation&&M.getTextureMatrix().isIdentityAs3x2()?(p[b+"DIRECTUV"]=M.coordinatesIndex+1,p["MAINUV"+(M.coordinatesIndex+1)]=!0):p[b+"DIRECTUV"]=0}function D(M,p,b){const Q=M.getTextureMatrix();p.ob(b+"Matrix",Q)}function a(M,p,b){b.BAKED_VERTEX_ANIMATION_TEXTURE&&b.INSTANCES&&M.push("bakedVertexAnimationSettingsInstanced")}function s(M,p,b){var Q;if(p&&M&&(M.computeBonesUsingShaders&&p._bonesComputationForcedToCPU&&(M.computeBonesUsingShaders=!1),M.useBones&&M.computeBonesUsingShaders&&M.skeleton)){const q=M.skeleton;if(q.isUsingTextureForMatrices&&p.getUniformIndex("boneTextureWidth")>-1){const b=q.getTransformMatrixTexture(M);p.setTexture("boneSampler",b),p.setFloat("boneTextureWidth",4*(q.bones.length+1))}else{const B=q.getTransformMatrices(M);B&&(p.setMatrices("mBones",B),b&&M.RM().prePassRenderer&&M.RM().prePassRenderer.getIndex(2)&&(b.previousBones[M.uniqueId]||(b.previousBones[M.uniqueId]=B.slice()),p.setMatrices("mPreviousBones",b.previousBones[M.uniqueId]),Q=B,b.previousBones[M.uniqueId].set(Q)))}}}function S(M,p,b,Q,q){let B=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];M._bindLight(p,b,Q,q,B)}function f(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const B=Math.min(p.lightSources.length,q);for(let k=0;k<B;k++){S(p.lightSources[k],k,M,b,"boolean"===typeof Q?Q:Q.SPECULARTERM,p.receiveShadows)}}function R(M,p,b,Q){b.NUM_BONE_INFLUENCERS>0&&(Q.addCPUSkinningFallback(0,p),M.push("matricesIndices"),M.push("matricesWeights"),b.NUM_BONE_INFLUENCERS>4&&(M.push("matricesIndicesExtra"),M.push("matricesWeightsExtra")))}function y(M,p){(p.INSTANCES||p.THIN_INSTANCES)&&i(M,!!p.PREPASS_VELOCITY),p.INSTANCESCOLOR&&M.push("instanceColor")}function x(M,p){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,q=0;for(let B=0;B<b&&M["LIGHT"+B];B++)B>0&&(q=Q+B,p.addFallback(q,"LIGHT"+B)),M.SHADOWS||(M["SHADOW"+B]&&p.addFallback(Q,"SHADOW"+B),M["SHADOWPCF"+B]&&p.addFallback(Q,"SHADOWPCF"+B),M["SHADOWPCSS"+B]&&p.addFallback(Q,"SHADOWPCSS"+B),M["SHADOWPOISSON"+B]&&p.addFallback(Q,"SHADOWPOISSON"+B),M["SHADOWESM"+B]&&p.addFallback(Q,"SHADOWESM"+B),M["SHADOWCLOSEESM"+B]&&p.addFallback(Q,"SHADOWCLOSEESM"+B));return q++}function P(M,p,b,Q,q,B,k){let u=arguments.length>7&&void 0!==arguments[7]&&arguments[7];k._areMiscDirty&&(k.LOGARITHMICDEPTH=b,k.POINTSIZE=Q,k.FOG=q&&function(M,p){return p.fogEnabled&&M.applyFog&&0!==p.fogMode}(M,p),k.NONUNIFORMSCALING=M.nonUniformScaling,k.ALPHATEST=B,k.DECAL_AFTER_DETAIL=u)}function L(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!b._areLightsDirty)return b._needNormals;let k=0;const u={needNormals:b._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(M.lightsEnabled&&!B)for(const O of p.lightSources)if(N(M,p,O,k,b,Q,u),k++,k===q)break;b.SPECULARTERM=u.specularEnabled,b.SHADOWS=u.shadowEnabled;for(let O=k;O<q;O++)void 0!==b["LIGHT"+O]&&(b["LIGHT"+O]=!1,b["HEMILIGHT"+O]=!1,b["POINTLIGHT"+O]=!1,b["DIRLIGHT"+O]=!1,b["SPOTLIGHT"+O]=!1,b["AREALIGHT"+O]=!1,b["SHADOW"+O]=!1,b["SHADOWCSM"+O]=!1,b["SHADOWCSMDEBUG"+O]=!1,b["SHADOWCSMNUM_CASCADES"+O]=!1,b["SHADOWCSMUSESHADOWMAXZ"+O]=!1,b["SHADOWCSMNOBLEND"+O]=!1,b["SHADOWCSM_RIGHTHANDED"+O]=!1,b["SHADOWPCF"+O]=!1,b["SHADOWPCSS"+O]=!1,b["SHADOWPOISSON"+O]=!1,b["SHADOWESM"+O]=!1,b["SHADOWCLOSEESM"+O]=!1,b["SHADOWCUBE"+O]=!1,b["SHADOWLOWQUALITY"+O]=!1,b["SHADOWMEDIUMQUALITY"+O]=!1);const T=M.getEngine().getCaps();return void 0===b.SHADOWFLOAT&&(u.needRebuild=!0),b.SHADOWFLOAT=u.shadowEnabled&&(T.textureFloatRender&&T.textureFloatLinearFiltering||T.textureHalfFloatRender&&T.textureHalfFloatLinearFiltering),b.LIGHTMAPEXCLUDED=u.lightmapMode,u.needRebuild&&b.rebuild(),u.needNormals}function N(M,p,b,Q,q,B,u){switch(u.needNormals=!0,void 0===q["LIGHT"+Q]&&(u.needRebuild=!0),q["LIGHT"+Q]=!0,q["SPOTLIGHT"+Q]=!1,q["HEMILIGHT"+Q]=!1,q["POINTLIGHT"+Q]=!1,q["DIRLIGHT"+Q]=!1,q["AREALIGHT"+Q]=!1,b.prepareLightSpecificDefines(q,Q),q["LIGHT_FALLOFF_PHYSICAL"+Q]=!1,q["LIGHT_FALLOFF_GLTF"+Q]=!1,q["LIGHT_FALLOFF_STANDARD"+Q]=!1,b.falloffType){case k.b.FALLOFF_GLTF:q["LIGHT_FALLOFF_GLTF"+Q]=!0;break;case k.b.FALLOFF_PHYSICAL:q["LIGHT_FALLOFF_PHYSICAL"+Q]=!0;break;case k.b.FALLOFF_STANDARD:q["LIGHT_FALLOFF_STANDARD"+Q]=!0}if(B&&!b.sH.equalsFloats(0,0,0)&&(u.specularEnabled=!0),q["SHADOW"+Q]=!1,q["SHADOWCSM"+Q]=!1,q["SHADOWCSMDEBUG"+Q]=!1,q["SHADOWCSMNUM_CASCADES"+Q]=!1,q["SHADOWCSMUSESHADOWMAXZ"+Q]=!1,q["SHADOWCSMNOBLEND"+Q]=!1,q["SHADOWCSM_RIGHTHANDED"+Q]=!1,q["SHADOWPCF"+Q]=!1,q["SHADOWPCSS"+Q]=!1,q["SHADOWPOISSON"+Q]=!1,q["SHADOWESM"+Q]=!1,q["SHADOWCLOSEESM"+Q]=!1,q["SHADOWCUBE"+Q]=!1,q["SHADOWLOWQUALITY"+Q]=!1,q["SHADOWMEDIUMQUALITY"+Q]=!1,p&&p.receiveShadows&&M.shadowsEnabled&&b.shadowEnabled){const p=b.getShadowGenerator(M.activeCamera)??b.getShadowGenerator();if(p){const M=p.getShadowMap();M&&M.renderList&&M.renderList.length>0&&(u.shadowEnabled=!0,p.prepareDefines(q,Q))}}b.lightmapMode!=k.b.LIGHTMAP_DEFAULT?(u.lightmapMode=!0,q["LIGHTMAPEXCLUDED"+Q]=!0,q["LIGHTMAPNOSPECULAR"+Q]=b.lightmapMode==k.b.LIGHTMAP_SHADOWSONLY):(q["LIGHTMAPEXCLUDED"+Q]=!1,q["LIGHTMAPNOSPECULAR"+Q]=!1)}function r(M,p,b,Q,q){let B=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],T=function(M,p){let b=!1;if(M.activeCamera){const Q=p.CAMERA_ORTHOGRAPHIC?1:0,q=p.CAMERA_PERSPECTIVE?1:0,B=1===M.activeCamera.mode?1:0,k=0===M.activeCamera.mode?1:0;(Q^B||q^k)&&(p.CAMERA_ORTHOGRAPHIC=1===B,p.CAMERA_PERSPECTIVE=1===k,b=!0)}return b}(M,Q);!1!==B&&(T=(0,u.f)(b,M,Q)),Q.DEPTHPREPASS!==!p.getColorWrite()&&(Q.DEPTHPREPASS=!Q.DEPTHPREPASS,T=!0),Q.INSTANCES!==q&&(Q.INSTANCES=q,T=!0),Q.THIN_INSTANCES!==k&&(Q.THIN_INSTANCES=k,T=!0),T&&Q.markAsUnprocessed()}function Y(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]&&arguments[4],B=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],k=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!p._areAttributesDirty&&p._needNormals===p._normals&&p._needUVs===p._uvs)return!1;p._normals=p._needNormals,p._uvs=p._needUVs,p.NORMAL=p._needNormals&&M.isVerticesDataPresent("normal"),p._needNormals&&M.isVerticesDataPresent("tangent")&&(p.TANGENT=!0);for(let u=1;u<=6;++u)p["UV"+u]=!!p._needUVs&&M.isVerticesDataPresent(`uv${1===u?"":u}`);if(b){const b=M.useVertexColors&&M.isVerticesDataPresent("color");p.VERTEXCOLOR=b,p.VERTEXALPHA=M.hasVertexAlpha&&b&&B}return M.isVerticesDataPresent("instanceColor")&&(M.hasInstances||M.hasThinInstances)&&(p.INSTANCESCOLOR=!0),Q&&function(M,p){if(M.useBones&&M.computeBonesUsingShaders&&M.skeleton){p.NUM_BONE_INFLUENCERS=M.numBoneInfluencers;const b=void 0!==p.BONETEXTURE;if(M.skeleton.isUsingTextureForMatrices&&b)p.BONETEXTURE=!0;else{p.BonesPerMesh=M.skeleton.bones.length+1,p.BONETEXTURE=!b&&void 0;const Q=M.RM().prePassRenderer;if(Q&&Q.enabled){const b=-1===Q.excludedSkinnedMesh.indexOf(M);p.BONES_VELOCITY_ENABLED=b}}}else p.NUM_BONE_INFLUENCERS=0,p.BonesPerMesh=0,void 0!==p.BONETEXTURE&&(p.BONETEXTURE=!1)}(M,p),q&&function(M,p){const b=M.morphTargetManager;b?(p.MORPHTARGETS_UV=b.supportsUVs&&p.UV1,p.MORPHTARGETS_UV2=b.supportsUV2s&&p.UV2,p.MORPHTARGETS_TANGENT=b.supportsTangents&&p.TANGENT,p.MORPHTARGETS_NORMAL=b.supportsNormals&&p.NORMAL,p.MORPHTARGETS_POSITION=b.supportsPositions,p.MORPHTARGETS_COLOR=b.supportsColors,p.MORPHTARGETTEXTURE_HASUVS=b.hasUVs,p.MORPHTARGETTEXTURE_HASUV2S=b.hasUV2s,p.MORPHTARGETTEXTURE_HASTANGENTS=b.hasTangents,p.MORPHTARGETTEXTURE_HASNORMALS=b.hasNormals,p.MORPHTARGETTEXTURE_HASPOSITIONS=b.hasPositions,p.MORPHTARGETTEXTURE_HASCOLORS=b.hasColors,p.NUM_MORPH_INFLUENCERS=b.numMaxInfluencers||b.numInfluencers,p.MORPHTARGETS=p.NUM_MORPH_INFLUENCERS>0,p.MORPHTARGETS_TEXTURE=b.isUsingTextureForTargets):(p.MORPHTARGETS_UV=!1,p.MORPHTARGETS_UV2=!1,p.MORPHTARGETS_TANGENT=!1,p.MORPHTARGETS_NORMAL=!1,p.MORPHTARGETS_POSITION=!1,p.MORPHTARGETS_COLOR=!1,p.MORPHTARGETTEXTURE_HASUVS=!1,p.MORPHTARGETTEXTURE_HASUV2S=!1,p.MORPHTARGETTEXTURE_HASTANGENTS=!1,p.MORPHTARGETTEXTURE_HASNORMALS=!1,p.MORPHTARGETTEXTURE_HASPOSITIONS=!1,p.MORPHTARGETTEXTURE_HAS_COLORS=!1,p.MORPHTARGETS=!1,p.NUM_MORPH_INFLUENCERS=0)}(M,p),k&&function(M,p){const b=M.bakedVertexAnimationManager;p.BAKED_VERTEX_ANIMATION_TEXTURE=!(!b||!b.isEnabled)}(M,p),!0}function w(M,p){if(M.activeCamera){const b=p.MULTIVIEW;p.MULTIVIEW=null!==M.activeCamera.outputRenderTarget&&M.activeCamera.outputRenderTarget.getViewCount()>1,p.MULTIVIEW!=b&&p.markAsUnprocessed()}}function E(M,p,b){const Q=p.ORDER_INDEPENDENT_TRANSPARENCY,q=p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;p.ORDER_INDEPENDENT_TRANSPARENCY=M.useOrderIndependentTransparency&&b,p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!M.getEngine().getCaps().textureFloatLinearFiltering,Q===p.ORDER_INDEPENDENT_TRANSPARENCY&&q===p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||p.markAsUnprocessed()}function n(M,p,b){const Q=p.PREPASS;if(!p._arePrePassDirty)return;const q=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(M.prePassRenderer&&M.prePassRenderer.enabled&&b){p.PREPASS=!0,p.SCENE_MRT_COUNT=M.prePassRenderer.mrtCount,p.PREPASS_NORMAL_WORLDSPACE=M.prePassRenderer.generateNormalsInWorldSpace,p.PREPASS_COLOR=!0,p.PREPASS_COLOR_INDEX=0;for(let b=0;b<q.length;b++){const Q=M.prePassRenderer.getIndex(q[b].type);-1!==Q?(p[q[b].define]=!0,p[q[b].index]=Q):p[q[b].define]=!1}}else{p.PREPASS=!1;for(let M=0;M<q.length;M++)p[q[M].define]=!1}p.PREPASS!=Q&&(p.markAsUnprocessed(),p.markAsImageProcessingDirty())}function g(M,p,b,Q){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6];q&&q.push("Light"+M),B||(p.push("vLightData"+M,"vLightDiffuse"+M,"vLightSpecular"+M,"vLightDirection"+M,"vLightWidth"+M,"vLightHeight"+M,"vLightFalloff"+M,"vLightGround"+M,"lightMatrix"+M,"shadowsInfo"+M,"depthValues"+M),b.push("shadowTexture"+M),b.push("depthTexture"+M),p.push("viewFrustumZ"+M,"cascadeBlendFactor"+M,"lightSizeUVCorrection"+M,"depthCorrection"+M,"penumbraDarkness"+M,"frustumLengths"+M),Q&&(b.push("projectionLightTexture"+M),p.push("textureProjectionMatrix"+M)),k&&b.push("iesLightTexture"+M))}function U(M,p,b){let Q,q,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(M.uniformsNames){const k=M;Q=k.uniformsNames,q=k.uniformBuffersNames,p=k.samplers,b=k.defines,B=k.maxSimultaneousLights||0}else Q=M,p||(p=[]);for(let k=0;k<B&&b["LIGHT"+k];k++)g(k,Q,p,b["PROJECTEDLIGHTTEXTURE"+k],q,!1,b["IESLIGHTTEXTURE"+k]);b.NUM_MORPH_INFLUENCERS&&(Q.push("morphTargetInfluences"),Q.push("morphTargetCount")),b.BAKED_VERTEX_ANIMATION_TEXTURE&&(Q.push("bakedVertexAnimationSettings"),Q.push("bakedVertexAnimationTextureSizeInverted"),Q.push("bakedVertexAnimationTime"),p.push("bakedVertexAnimationTexture"))}},12122:(M,p,b)=>{b.d(p,{c:()=>B});var Q=b(11796),q=b(12129);class B extends q.e{constructor(M,p){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(M,p,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new Q.Matrix,this._storeEffectOnSubMeshes=b}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(M,p){return!!M&&(!this._storeEffectOnSubMeshes||(!M.Tb||0===M.Tb.length||this.isReadyForSubMesh(M,M.Tb[0],p)))}_isReadyForSubMesh(M){const p=M.materialDefines;return!(this.checkReadyOnEveryCall||!M.effect||!p||p._renderId!==this.RM().getRenderId())}bindOnlyWorldMatrix(M){this._activeEffect.setMatrix("world",M)}bindOnlyNormalMatrix(M){this._activeEffect.setMatrix("normalMatrix",M)}bind(M,p){p&&this.bindForSubMesh(M,p,p.Tb[0])}_afterBind(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0;super._afterBind(M,p,b),this.RM()._cachedEffect=p,b?b._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return b._drawWrapper._forceRebindOnNextCall||M.isCachedMaterialInvalid(this,p,Q)}dispose(M,p,b){this._activeEffect=void 0,super.dispose(M,p,b)}}},12162:(M,p,b)=>{b.d(p,{d:()=>u,f:()=>T});var Q=b(11784),q=b(11796),B=b(11788);class k{static extractMinAndMaxIndexed(M,p,b,Q,q,B){for(let k=b;k<b+Q;k++){const b=3*p[k],Q=M[b],u=M[b+1],T=M[b+2];q.minimizeInPlaceFromFloats(Q,u,T),B.maximizeInPlaceFromFloats(Q,u,T)}}static extractMinAndMax(M,p,b,Q,q,B){for(let k=p,u=p*Q;k<p+b;k++,u+=Q){const p=M[u],b=M[u+1],Q=M[u+2];q.minimizeInPlaceFromFloats(p,b,Q),B.maximizeInPlaceFromFloats(p,b,Q)}}}function u(M,p,b,Q){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const u=new q.Ap(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),T=new q.Ap(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return k.extractMinAndMaxIndexed(M,p,b,Q,u,T),B&&(u.x-=u.x*B.x+B.y,u.y-=u.y*B.x+B.y,u.z-=u.z*B.x+B.y,T.x+=T.x*B.x+B.y,T.y+=T.y*B.x+B.y,T.z+=T.z*B.x+B.y),{minimum:u,maximum:T}}function T(M,p,b){let Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,B=arguments.length>4?arguments[4]:void 0;const u=new q.Ap(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),T=new q.Ap(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return B||(B=3),k.extractMinAndMax(M,p,b,B,u,T),Q&&(u.x-=u.x*Q.x+Q.y,u.y-=u.y*Q.x+Q.y,u.z-=u.z*Q.x+Q.y,T.x+=T.x*Q.x+Q.y,T.y+=T.y*Q.x+Q.y,T.z+=T.z*Q.x+Q.y),{minimum:u,maximum:T}}(0,Q.c)([B.i.filter((function(){for(var M=arguments.length,p=new Array(M),b=0;b<M;b++)p[b]=arguments[b];let[Q,q]=p;return!Array.isArray(Q)&&!Array.isArray(q)}))],k,"extractMinAndMaxIndexed",null),(0,Q.c)([B.i.filter((function(){for(var M=arguments.length,p=new Array(M),b=0;b<M;b++)p[b]=arguments[b];let[Q]=p;return!Array.isArray(Q)}))],k,"extractMinAndMax",null)},12137:(M,p,b)=>{b.d(p,{c:()=>T});var Q=b(11857),q=b(12145),B=b(12150),k=b(12162),u=b(11898);class T{get materialDefines(){var M;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(M=this._getDrawWrapper())||void 0===M?void 0:M.defines}set materialDefines(M){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=M}_getDrawWrapper(M){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];M=M??this._engine.currentRenderPassId;let b=this._drawWrappers[M];return!b&&p&&(this._drawWrappers[M]=b=new u.e(this._mesh.RM().getEngine())),b}_removeDrawWrapper(M){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var b;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(b=this._drawWrappers[M])||void 0===b||b.dispose(p));this._drawWrappers[M]=void 0}get effect(){var M;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(M=this._getDrawWrapper())||void 0===M?void 0:M.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(M){this._mainDrawWrapperOverride=M}setEffect(M){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0,Q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const q=this._drawWrapper;q.setEffect(M,p,Q),void 0!==b&&(q.materialContext=b),M||(q.defines=null,q.materialContext=void 0)}resetDrawCache(M){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==M)return void this._removeDrawWrapper(M,!0,p);for(const M of this._drawWrappers)null===M||void 0===M||M.dispose(p)}this._drawWrappers=[]}static AddToMesh(M,p,b,Q,q,B,k){return new T(M,p,b,Q,q,B,k,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(M,p,b,Q,q,B,k){let u=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],T=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=M,this.verticesStart=p,this.verticesCount=b,this.indexStart=Q,this.indexCount=q,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=B,this._renderingMesh=k||B,T&&B.Tb.push(this),this._engine=this._mesh.RM().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=B.Tb.length-1,u&&(this.refreshBoundingInfo(),B.ib(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(M){return this._boundingInfo=M,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const M=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return M||this._renderingMesh}UM(){let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const p=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!p)return M&&this._mesh.RM()._hasDefaultMaterial?this._mesh.RM().defaultMaterial:null;if(this._isMultiMaterial(p)){const M=p.getSubMaterial(this.materialIndex);return this._currentMaterial!==M&&(this._currentMaterial=M,this.resetDrawCache()),M}return p}_isMultiMaterial(M){return void 0!==M.getSubMaterial}refreshBoundingInfo(){let M=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Ab)return this;if(M||(M=this._renderingMesh.getVerticesData(Q.f.PositionKind)),!M)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const p=this._renderingMesh.jb();let b;if(0===this.indexStart&&this.indexCount===p.length){const M=this._renderingMesh.getBoundingInfo();b={minimum:M.minimum.clone(),maximum:M.maximum.clone()}}else b=(0,k.d)(M,p,this.indexStart,this.indexCount,this._renderingMesh.Ab.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(b.minimum,b.maximum):this._boundingInfo=new B.d(b.minimum,b.maximum),this}_checkCollision(M){return this.getBoundingInfo()._checkCollision(M)}updateBoundingInfo(M){let p=this.getBoundingInfo();return p||(this.refreshBoundingInfo(),p=this.getBoundingInfo()),p&&p.update(M),this}isInFrustum(M){const p=this.getBoundingInfo();return!!p&&p.isInFrustum(M,this._mesh.SF)}isCompletelyInFrustum(M){const p=this.getBoundingInfo();return!!p&&p.isCompletelyInFrustum(M)}render(M){return this._renderingMesh.render(this,M,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(M,p){if(!this._linesIndexBuffer){const b=6*Math.floor(this.indexCount/3),Q=this.verticesStart+this.verticesCount>65535?new Uint32Array(b):new Uint16Array(b);let q=0;if(0===M.length)for(let M=this.indexStart;M<this.indexStart+this.indexCount;M+=3)Q[q++]=M,Q[q++]=M+1,Q[q++]=M+1,Q[q++]=M+2,Q[q++]=M+2,Q[q++]=M;else for(let p=this.indexStart;p<this.indexStart+this.indexCount;p+=3)Q[q++]=M[p],Q[q++]=M[p+1],Q[q++]=M[p+1],Q[q++]=M[p+2],Q[q++]=M[p+2],Q[q++]=M[p];this._linesIndexBuffer=p.createIndexBuffer(Q),this._linesIndexCount=Q.length}return this._linesIndexBuffer}canIntersects(M){const p=this.getBoundingInfo();return!!p&&M.intersectsBox(p.boundingBox)}intersects(M,p,b,Q,q){const B=this.UM();if(!B)return null;let k=3,u=!1;switch(B.fillMode){case 3:case 5:case 6:case 8:return null;case 7:k=1,u=!0}return 4===B.fillMode?b.length?this._intersectLines(M,p,b,this._mesh.intersectionThreshold,Q):this._intersectUnIndexedLines(M,p,b,this._mesh.intersectionThreshold,Q):!b.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(M,p,b,Q,q):this._intersectTriangles(M,p,b,k,u,Q,q)}_intersectLines(M,p,b,Q,B){let k=null;for(let u=this.indexStart;u<this.indexStart+this.indexCount;u+=2){const T=p[b[u]],O=p[b[u+1]],H=M.intersectionSegment(T,O,Q);if(!(H<0)&&((B||!k||H<k.distance)&&(k=new q.d(null,null,H),k.faceId=u/2,B)))break}return k}_intersectUnIndexedLines(M,p,b,Q,B){let k=null;for(let u=this.verticesStart;u<this.verticesStart+this.verticesCount;u+=2){const b=p[u],T=p[u+1],O=M.intersectionSegment(b,T,Q);if(!(O<0)&&((B||!k||O<k.distance)&&(k=new q.d(null,null,O),k.faceId=u/2,B)))break}return k}_intersectTriangles(M,p,b,Q,q,B,k){let u=null,T=-1;for(let O=this.indexStart;O<this.indexStart+this.indexCount-(3-Q);O+=Q){T++;const Q=b[O],H=b[O+1],F=b[O+2];if(q&&4294967295===F){O+=2;continue}const o=p[Q],W=p[H],i=p[F];if(!o||!W||!i)continue;if(k&&!k(o,W,i,M,Q,H,F))continue;const A=M.intersectsTriangle(o,W,i);if(A){if(A.distance<0)continue;if((B||!u||A.distance<u.distance)&&(u=A,u.faceId=T,B))break}}return u}_intersectUnIndexedTriangles(M,p,b,Q,q){let B=null;for(let k=this.verticesStart;k<this.verticesStart+this.verticesCount;k+=3){const b=p[k],u=p[k+1],T=p[k+2];if(q&&!q(b,u,T,M,-1,-1,-1))continue;const O=M.intersectsTriangle(b,u,T);if(O){if(O.distance<0)continue;if((Q||!B||O.distance<B.distance)&&(B=O,B.faceId=k/3,Q))break}}return B}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(M,p){const b=new T(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,M,p,!1);if(!this.IsGlobal){const M=this.getBoundingInfo();if(!M)return b;b._boundingInfo=new B.d(M.minimum,M.maximum)}return b}dispose(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.RM().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const p=this._mesh.Tb.indexOf(this);this._mesh.Tb.splice(p,1),this.resetDrawCache(void 0,M)}getClassName(){return"SubMesh"}static CreateFromIndices(M,p,b,Q,q){let B=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],k=Number.MAX_VALUE,u=-Number.MAX_VALUE;const O=(q||Q).jb();for(let T=p;T<p+b;T++){const M=O[T];M<k&&(k=M),M>u&&(u=M)}return new T(M,k,u-k+1,p,b,Q,q,B)}}}}]);