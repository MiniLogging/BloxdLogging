"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[24],{11541:(Z,x,F)=>{F.d(x,{c:()=>u});class u{constructor(Z,x,F){this.bu=Z,this.bv=x,this.distance=F,this.faceId=0,this.subMeshId=0}}},11552:(Z,x,F)=>{F.d(x,{d:()=>Y});var u=F(11192),G=F(11179),f=F(11188);class Y{constructor(Z,x,F){this.vectors=(0,u.b)(8,G.kx.Zero),this.center=G.kx.Zero(),this.centerWorld=G.kx.Zero(),this.extendSize=G.kx.Zero(),this.extendSizeWorld=G.kx.Zero(),this.directions=(0,u.b)(3,G.kx.Zero),this.vectorsWorld=(0,u.b)(8,G.kx.Zero),this.minimumWorld=G.kx.Zero(),this.maximumWorld=G.kx.Zero(),this.minimum=G.kx.Zero(),this.maximum=G.kx.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(Z,x,F)}reConstruct(Z,x,F){const u=Z.x,f=Z.y,Y=Z.z,j=x.x,d=x.y,t=x.z,o=this.vectors;this.minimum.Jj(u,f,Y),this.maximum.Jj(j,d,t),o[0].Jj(u,f,Y),o[1].Jj(j,d,t),o[2].Jj(j,f,Y),o[3].Jj(u,d,Y),o[4].Jj(u,f,t),o[5].Jj(j,d,Y),o[6].Jj(u,d,t),o[7].Jj(j,f,t),x.addToRef(Z,this.center).scaleInPlace(.5),x.subtractToRef(Z,this.extendSize).scaleInPlace(.5),this._worldMatrix=F||G.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(Z){const x=Y._TmpVector3,F=this.maximum.subtractToRef(this.minimum,x[0]),u=F.length();F.normalizeFromLength(u);const G=u*Z,f=F.scaleInPlace(.5*G),j=this.center.subtractToRef(f,x[1]),d=this.center.addToRef(f,x[2]);return this.reConstruct(j,d,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){const x=this.minimumWorld,F=this.maximumWorld,u=this.directions,f=this.vectorsWorld,Y=this.vectors;if(Z.isIdentity()){x.G(this.minimum),F.G(this.maximum);for(let Z=0;Z<8;++Z)f[Z].G(Y[Z]);this.extendSizeWorld.G(this.extendSize),this.centerWorld.G(this.center)}else{x.Uj(Number.MAX_VALUE),F.Uj(-Number.MAX_VALUE);for(let u=0;u<8;++u){const j=f[u];G.kx.TransformCoordinatesToRef(Y[u],Z,j),x.minimizeInPlace(j),F.maximizeInPlace(j)}F.subtractToRef(x,this.extendSizeWorld).scaleInPlace(.5),F.addToRef(x,this.centerWorld).scaleInPlace(.5)}G.kx.FromArrayToRef(Z.m,0,u[0]),G.kx.FromArrayToRef(Z.m,4,u[1]),G.kx.FromArrayToRef(Z.m,8,u[2]),this._worldMatrix=Z}isInFrustum(Z){return Y.IsInFrustum(this.vectorsWorld,Z)}isCompletelyInFrustum(Z){return Y.IsCompletelyInFrustum(this.vectorsWorld,Z)}intersectsPoint(Z){const x=this.minimumWorld,F=this.maximumWorld,u=x.x,G=x.y,Y=x.z,j=F.x,d=F.y,t=F.z,o=Z.x,c=Z.y,s=Z.z,J=-f.e;return!(j-o<J||J>o-u)&&(!(d-c<J||J>c-G)&&!(t-s<J||J>s-Y))}intersectsSphere(Z){return Y.IntersectsSphere(this.minimumWorld,this.maximumWorld,Z.centerWorld,Z.radiusWorld)}intersectsMinMax(Z,x){const F=this.minimumWorld,u=this.maximumWorld,G=F.x,f=F.y,Y=F.z,j=u.x,d=u.y,t=u.z,o=Z.x,c=Z.y,s=Z.z,J=x.x,p=x.y,U=x.z;return!(j<o||G>J)&&(!(d<c||f>p)&&!(t<s||Y>U))}dispose(){var Z,x;null===(Z=this._drawWrapperFront)||void 0===Z||Z.dispose(),null===(x=this._drawWrapperBack)||void 0===x||x.dispose()}static Intersects(Z,x){return Z.intersectsMinMax(x.minimumWorld,x.maximumWorld)}static IntersectsSphere(Z,x,F,u){const f=Y._TmpVector3[0];G.kx.ClampToRef(F,Z,x,f);return G.kx.DistanceSquared(F,f)<=u*u}static IsCompletelyInFrustum(Z,x){for(let F=0;F<6;++F){const u=x[F];for(let x=0;x<8;++x)if(u.dotCoordinate(Z[x])<0)return!1}return!0}static IsInFrustum(Z,x){for(let F=0;F<6;++F){let u=!0;const G=x[F];for(let x=0;x<8;++x)if(G.dotCoordinate(Z[x])>=0){u=!1;break}if(u)return!1}return!0}}Y._TmpVector3=(0,u.b)(3,G.kx.Zero)},11546:(Z,x,F)=>{F.d(x,{b:()=>c});var u=F(11192),G=F(11179),f=F(11552),Y=F(11556);const j={min:0,max:0},d={min:0,max:0},t=(Z,x,F)=>{const u=G.kx.Dot(x.centerWorld,Z),f=Math.abs(G.kx.Dot(x.directions[0],Z))*x.extendSize.x+Math.abs(G.kx.Dot(x.directions[1],Z))*x.extendSize.y+Math.abs(G.kx.Dot(x.directions[2],Z))*x.extendSize.z;F.min=u-f,F.max=u+f},o=(Z,x,F)=>(t(Z,x,j),t(Z,F,d),!(j.min>d.max||d.min>j.max));class c{constructor(Z,x,F){this._isLocked=!1,this.boundingBox=new f.d(Z,x,F),this.boundingSphere=new Y.d(Z,x,F)}reConstruct(Z,x,F){this.boundingBox.reConstruct(Z,x,F),this.boundingSphere.reConstruct(Z,x,F)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(Z){this._isLocked=Z}update(Z){this._isLocked||(this.boundingBox._update(Z),this.boundingSphere._update(Z))}centerOn(Z,x){const F=c._TmpVector3[0].G(Z).Dc(x),u=c._TmpVector3[1].G(Z).addInPlace(x);return this.boundingBox.reConstruct(F,u,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(F,u,this.boundingBox.getWorldMatrix()),this}encapsulate(Z){const x=G.kx.Minimize(this.minimum,Z),F=G.kx.Maximize(this.maximum,Z);return this.reConstruct(x,F,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(Z){const x=G.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(x);const F=G.TmpVectors.kx[0];return G.kx.TransformCoordinatesToRef(Z.boundingBox.minimumWorld,x,F),this.encapsulate(F),G.kx.TransformCoordinatesToRef(Z.boundingBox.maximumWorld,x,F),this.encapsulate(F),this}scale(Z){return this.boundingBox.scale(Z),this.boundingSphere.scale(Z),this}isInFrustum(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===x||3===x)&&this.boundingSphere.isCenterInFrustum(Z))return!0;if(!this.boundingSphere.isInFrustum(Z))return!1;return!(1!==x&&3!==x)||this.boundingBox.isInFrustum(Z)}get diagonalLength(){const Z=this.boundingBox;return Z.maximumWorld.subtractToRef(Z.minimumWorld,c._TmpVector3[0]).length()}isCompletelyInFrustum(Z){return this.boundingBox.isCompletelyInFrustum(Z)}_checkCollision(Z){return Z._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(Z){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(Z)&&!!this.boundingBox.intersectsPoint(Z))}intersects(Z,x){if(!Y.d.Intersects(this.boundingSphere,Z.boundingSphere))return!1;if(!f.d.Intersects(this.boundingBox,Z.boundingBox))return!1;if(!x)return!0;const F=this.boundingBox,u=Z.boundingBox;return!!o(F.directions[0],F,u)&&(!!o(F.directions[1],F,u)&&(!!o(F.directions[2],F,u)&&(!!o(u.directions[0],F,u)&&(!!o(u.directions[1],F,u)&&(!!o(u.directions[2],F,u)&&(!!o(G.kx.Cross(F.directions[0],u.directions[0]),F,u)&&(!!o(G.kx.Cross(F.directions[0],u.directions[1]),F,u)&&(!!o(G.kx.Cross(F.directions[0],u.directions[2]),F,u)&&(!!o(G.kx.Cross(F.directions[1],u.directions[0]),F,u)&&(!!o(G.kx.Cross(F.directions[1],u.directions[1]),F,u)&&(!!o(G.kx.Cross(F.directions[1],u.directions[2]),F,u)&&(!!o(G.kx.Cross(F.directions[2],u.directions[0]),F,u)&&(!!o(G.kx.Cross(F.directions[2],u.directions[1]),F,u)&&!!o(G.kx.Cross(F.directions[2],u.directions[2]),F,u))))))))))))))}}c._TmpVector3=(0,u.b)(2,G.kx.Zero)},11556:(Z,x,F)=>{F.d(x,{d:()=>f});var u=F(11192),G=F(11179);class f{constructor(Z,x,F){this.center=G.kx.Zero(),this.centerWorld=G.kx.Zero(),this.minimum=G.kx.Zero(),this.maximum=G.kx.Zero(),this.reConstruct(Z,x,F)}reConstruct(Z,x,F){this.minimum.G(Z),this.maximum.G(x);const u=G.kx.Distance(Z,x);x.addToRef(Z,this.center).scaleInPlace(.5),this.radius=.5*u,this._update(F||G.Matrix.IdentityReadOnly)}scale(Z){const x=this.radius*Z,F=f._TmpVector3,u=F[0].Uj(x),G=this.center.subtractToRef(u,F[1]),Y=this.center.addToRef(u,F[2]);return this.reConstruct(G,Y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(Z){if(Z.isIdentity())this.centerWorld.G(this.center),this.radiusWorld=this.radius;else{G.kx.TransformCoordinatesToRef(this.center,Z,this.centerWorld);const x=f._TmpVector3[0];G.kx.TransformNormalFromFloatsToRef(1,1,1,Z,x),this.radiusWorld=Math.max(Math.abs(x.x),Math.abs(x.y),Math.abs(x.z))*this.radius}}isInFrustum(Z){const x=this.centerWorld,F=this.radiusWorld;for(let u=0;u<6;u++)if(Z[u].dotCoordinate(x)<=-F)return!1;return!0}isCenterInFrustum(Z){const x=this.centerWorld;for(let F=0;F<6;F++)if(Z[F].dotCoordinate(x)<0)return!1;return!0}intersectsPoint(Z){const x=G.kx.DistanceSquared(this.centerWorld,Z);return!(this.radiusWorld*this.radiusWorld<x)}static Intersects(Z,x){const F=G.kx.DistanceSquared(Z.centerWorld,x.centerWorld),u=Z.radiusWorld+x.radiusWorld;return!(u*u<F)}static CreateFromCenterAndRadius(Z,x,F){this._TmpVector3[0].G(Z),this._TmpVector3[1].Jj(0,0,x),this._TmpVector3[2].G(Z),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Dc(this._TmpVector3[1]);const u=new f(this._TmpVector3[0],this._TmpVector3[2]);return u._worldMatrix=F||G.Matrix.Identity(),u}}f._TmpVector3=(0,u.b)(3,G.kx.Zero)},11572:(Z,x,F)=>{function u(Z){-1===Z.indexOf("vClipPlane")&&Z.push("vClipPlane"),-1===Z.indexOf("vClipPlane2")&&Z.push("vClipPlane2"),-1===Z.indexOf("vClipPlane3")&&Z.push("vClipPlane3"),-1===Z.indexOf("vClipPlane4")&&Z.push("vClipPlane4"),-1===Z.indexOf("vClipPlane5")&&Z.push("vClipPlane5"),-1===Z.indexOf("vClipPlane6")&&Z.push("vClipPlane6")}function G(Z,x,F){const u=!!(Z.clipPlane??x.clipPlane),G=!!(Z.clipPlane2??x.clipPlane2),f=!!(Z.clipPlane3??x.clipPlane3),Y=!!(Z.clipPlane4??x.clipPlane4),j=!!(Z.clipPlane5??x.clipPlane5),d=!!(Z.clipPlane6??x.clipPlane6);u&&F.push("#define CLIPPLANE"),G&&F.push("#define CLIPPLANE2"),f&&F.push("#define CLIPPLANE3"),Y&&F.push("#define CLIPPLANE4"),j&&F.push("#define CLIPPLANE5"),d&&F.push("#define CLIPPLANE6")}function f(Z,x,F){let u=!1;const G=!!(Z.clipPlane??x.clipPlane),f=!!(Z.clipPlane2??x.clipPlane2),Y=!!(Z.clipPlane3??x.clipPlane3),j=!!(Z.clipPlane4??x.clipPlane4),d=!!(Z.clipPlane5??x.clipPlane5),t=!!(Z.clipPlane6??x.clipPlane6);return F.CLIPPLANE!==G&&(F.CLIPPLANE=G,u=!0),F.CLIPPLANE2!==f&&(F.CLIPPLANE2=f,u=!0),F.CLIPPLANE3!==Y&&(F.CLIPPLANE3=Y,u=!0),F.CLIPPLANE4!==j&&(F.CLIPPLANE4=j,u=!0),F.CLIPPLANE5!==d&&(F.CLIPPLANE5=d,u=!0),F.CLIPPLANE6!==t&&(F.CLIPPLANE6=t,u=!0),u}function Y(Z,x,F){let u=x.clipPlane??F.clipPlane;j(Z,"vClipPlane",u),u=x.clipPlane2??F.clipPlane2,j(Z,"vClipPlane2",u),u=x.clipPlane3??F.clipPlane3,j(Z,"vClipPlane3",u),u=x.clipPlane4??F.clipPlane4,j(Z,"vClipPlane4",u),u=x.clipPlane5??F.clipPlane5,j(Z,"vClipPlane5",u),u=x.clipPlane6??F.clipPlane6,j(Z,"vClipPlane6",u)}function j(Z,x,F){F&&Z.setFloat4(x,F.normal.x,F.normal.y,F.normal.z,F.d)}F.d(x,{b:()=>u,f:()=>Y,g:()=>f,i:()=>G})},11512:(Z,x,F)=>{F.d(x,{d:()=>u});class u{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(Z,x){this._defines[Z]||(Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z),this._defines[Z]=new Array),this._defines[Z].push(x)}addCPUSkinningFallback(Z,x){this._mesh=x,Z<this._currentRank&&(this._currentRank=Z),Z>this._maxRank&&(this._maxRank=Z)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(Z,x){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,Z=Z.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),x._bonesComputationForcedToCPU=!0;const F=this._mesh.KZ();for(let Z=0;Z<F.meshes.length;Z++){const u=F.meshes[Z];if(u.material){if(u.computeBonesUsingShaders&&0!==u.numBoneInfluencers)if(u.material.getEffect()===x)u.computeBonesUsingShaders=!1;else if(u.bf)for(const Z of u.bf){if(Z.effect===x){u.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&u.computeBonesUsingShaders&&u.numBoneInfluencers>0&&(u.computeBonesUsingShaders=!1)}}else{const x=this._defines[this._currentRank];if(x)for(let F=0;F<x.length;F++)Z=Z.replace("#define "+x[F],"");this._currentRank++}return Z}}},11523:(Z,x,F)=>{F.d(x,{e:()=>k});var u=F(11159),G=F(11165),f=F(10994),Y=F(11e3),j=F(11037),d=F(11532),t=F(11468),o=F(11012),c=F(11238),s=F(11306),J=F(11213);class p{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(Z){this._func=Z}get funcRef(){return this._funcRef}set funcRef(Z){this._funcRef=Z}get funcMask(){return this._funcMask}set funcMask(Z){this._funcMask=Z}get opStencilFail(){return this._opStencilFail}set opStencilFail(Z){this._opStencilFail=Z}get opDepthFail(){return this._opDepthFail}set opDepthFail(Z){this._opDepthFail=Z}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(Z){this._opStencilDepthPass=Z}get mask(){return this._mask}set mask(Z){this._mask=Z}get enabled(){return this._enabled}set enabled(Z){this._enabled=Z}getClassName(){return"MaterialStencilState"}copyTo(Z){J.c.Clone((()=>Z),this)}serialize(){return J.c.Serialize(this)}parse(Z,x,F){J.c.Parse((()=>this),Z,x,F)}}(0,u.d)([(0,G.H)()],p.prototype,"func",null),(0,u.d)([(0,G.H)()],p.prototype,"funcRef",null),(0,u.d)([(0,G.H)()],p.prototype,"funcMask",null),(0,u.d)([(0,G.H)()],p.prototype,"opStencilFail",null),(0,u.d)([(0,G.H)()],p.prototype,"opDepthFail",null),(0,u.d)([(0,G.H)()],p.prototype,"opStencilDepthPass",null),(0,u.d)([(0,G.H)()],p.prototype,"mask",null),(0,u.d)([(0,G.H)()],p.prototype,"enabled",null);var U=F(11570);class k{get _supportGlowLayer(){return!1}set _glowModeEnabled(Z){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(Z){if(this._alpha===Z)return;const x=this._alpha;this._alpha=Z,1!==x&&1!==Z||this.It(k.MiscDirtyFlag+k.PrePassDirtyFlag)}get alpha(){return this._alpha}set sj(Z){this._backFaceCulling!==Z&&(this._backFaceCulling=Z,this.It(k.TextureDirtyFlag))}get sj(){return this._backFaceCulling}set cullBackFaces(Z){this._cullBackFaces!==Z&&(this._cullBackFaces=Z,this.It(k.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(Z){this._blockDirtyMechanism!==Z&&(this._blockDirtyMechanism=Z,Z||this.Ws())}atomicMaterialsUpdate(Z){this.blockDirtyMechanism=!0;try{Z(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(Z){this._onDisposeObserver&&this.Uf.remove(this._onDisposeObserver),this._onDisposeObserver=this.Uf.add(Z)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new Y.b),this._onBindObservable}set onBind(Z){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(Z)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new Y.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new Y.b),this._onEffectCreatedObservable}set alphaMode(Z){this._alphaMode!==Z&&(this._alphaMode=Z,this.It(k.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(Z){this._needDepthPrePass!==Z&&(this._needDepthPrePass=Z,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(Z){this._fogEnabled!==Z&&(this._fogEnabled=Z,this.It(k.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case k.WireFrameFillMode:case k.LineListDrawMode:case k.LineLoopDrawMode:case k.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(Z){this.fillMode=Z?k.WireFrameFillMode:k.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case k.PointFillMode:case k.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(Z){this.fillMode=Z?k.PointFillMode:k.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(Z){this._fillMode!==Z&&(this._fillMode=Z,this.It(k.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(Z){const x=this.KZ().getEngine().getCaps().fragmentDepthSupported;Z&&!x&&o.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=Z&&x,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(Z){this._drawWrapper=Z}constructor(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Uf=new Y.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new p,this._useUBO=!1,this._fillMode=k.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=Z;const G=x||j.c.LastCreatedScene;G&&(this._scene=G,this._dirtyCallbacks={},this._forceGLSL=u,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=Z||f.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new s.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new t.d(this._scene.getEngine(),void 0,void 0,Z),this._useUBO=this.KZ().getEngine().supportsUniformBuffers,this._createUniformBuffer(),F||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),k.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var Z;const x=this.KZ().getEngine();null===(Z=this._uniformBuffer)||void 0===Z||Z.dispose(),x.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new t.d(x,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new t.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(Z){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.Ws(),this.checkReadyOnlyOnce=!0}unfreeze(){this.Ws(),this.checkReadyOnlyOnce=!1}isReady(Z,x){return!0}isReadyForSubMesh(Z,x,F){const u=x.materialDefines;return!!u&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=u,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}KZ(){return this._scene}_getEffectiveOrientation(Z){return null!==this.sideOrientation?this.sideOrientation:Z.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(Z){this._transparencyMode!==Z&&(this._transparencyMode=Z,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===k.MATERIAL_ALPHABLEND||this._transparencyMode===k.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===k.MATERIAL_ALPHATEST||this._transparencyMode===k.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===k.MATERIAL_OPAQUE||this._transparencyMode===k.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsBlend:Z.visibility<1||!this._disableAlphaBlending&&(Z.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(Z){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(Z)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}Ws(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const x=this.KZ().meshes;for(const F of x)if(F.bf)for(const x of F.bf)if(x.TZ()===this)for(const F of x._drawWrappers)F&&this._materialContext===F.materialContext&&(F._wasPreviouslyReady=!1,F._wasPreviouslyUsingInstances=null,F._forceRebindOnNextCall=Z);Z&&this.It(k.AllDirtyFlag)}_preBind(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const F=this._scene.getEngine(),u=(null==x?this.sideOrientation:x)===k.ClockWiseSideOrientation;return F.enableEffect(Z||this._getDrawWrapper()),F.setState(this.sj,this.zOffset,!1,u,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),u}bind(Z,x){}buildUniformLayout(){const Z=this._uniformBuffer;this._eventInfo.ubo=Z,this._callbackPluginEventGeneric(8,this._eventInfo),Z.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(Z,x,F){const u=F._drawWrapper;this._eventInfo.subMesh=F,this._callbackPluginEventBindForSubMesh(this._eventInfo),u._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(Z){}bindView(Z){this._useUBO?this._needToBindSceneUbo=!0:Z.setMatrix("view",this.KZ().getViewMatrix())}bindViewProjection(Z){this._useUBO?this._needToBindSceneUbo=!0:(Z.setMatrix("viewProjection",this.KZ().getTransformMatrix()),Z.setMatrix("projection",this.KZ().getProjectionMatrix()))}bindEyePosition(Z,x){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(Z,x)}_afterBind(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&x&&(this._needToBindSceneUbo=!1,(0,U.o)(x,this.KZ().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=Z?Z.visibility:1,this._onBindObservable&&Z&&this._onBindObservable.notifyObservers(Z),this.disableDepthWrite){const Z=this._scene.getEngine();this._cachedDepthWriteState=Z.getDepthWrite(),Z.setDepthWrite(!1)}if(this.disableColorWrite){const Z=this._scene.getEngine();this._cachedColorWriteState=Z.getColorWrite(),Z.setColorWrite(!1)}if(0!==this.depthFunction){const Z=this._scene.getEngine();this._cachedDepthFunctionState=Z.getDepthFunction()||0,Z.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(Z){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=Z,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(Z){return null}_clonePlugins(Z,x){const F={};if(this._serializePlugins(F),k._ParsePlugins(F,Z,this._scene,x),this.pluginManager)for(const u of this.pluginManager._plugins){const x=Z.pluginManager.getPlugin(u.name);x&&u.copyTo(x)}}getBindedMeshes(){if(this.meshMap){const Z=[];for(const x in this.meshMap){const F=this.meshMap[x];F&&Z.push(F)}return Z}return this._scene.meshes.filter((Z=>Z.material===this))}forceCompilation(Z,x,F,u){const G={clipPlane:!1,useInstances:!1,...F},f=this.KZ(),Y=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const j=()=>{if(!this._scene||!this._scene.getEngine())return;const F=f.clipPlane;if(G.clipPlane&&(f.clipPlane=new c.d(0,0,0,1)),this._storeEffectOnSubMeshes){let F=!0,f=null;if(Z.bf){const x=new d.c(0,0,0,0,0,Z,void 0,!1,!1);x.materialDefines&&(x.materialDefines._renderId=-1),this.isReadyForSubMesh(Z,x,G.useInstances)||(x.effect&&x.effect.getCompilationError()&&x.effect.allFallbacksProcessed()?f=x.effect.getCompilationError():(F=!1,setTimeout(j,16)))}F&&(this.allowShaderHotSwapping=Y,f&&u&&u(f),x&&x(this))}else this.isReady()?(this.allowShaderHotSwapping=Y,x&&x(this)):setTimeout(j,16);G.clipPlane&&(f.clipPlane=F)};j()}async forceCompilationAsync(Z,x){return await new Promise(((F,u)=>{this.forceCompilation(Z,(()=>{F()}),x,(Z=>{u(Z)}))}))}It(Z){this.KZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(k._DirtyCallbackArray.length=0,Z&k.ImageProcessingDirtyFlag&&k._DirtyCallbackArray.push(k._ImageProcessingDirtyCallBack),Z&k.TextureDirtyFlag&&k._DirtyCallbackArray.push(k._TextureDirtyCallBack),Z&k.LightDirtyFlag&&k._DirtyCallbackArray.push(k._LightsDirtyCallBack),Z&k.FresnelDirtyFlag&&k._DirtyCallbackArray.push(k._FresnelDirtyCallBack),Z&k.AttributesDirtyFlag&&k._DirtyCallbackArray.push(k._AttributeDirtyCallBack),Z&k.MiscDirtyFlag&&k._DirtyCallbackArray.push(k._MiscDirtyCallBack),Z&k.PrePassDirtyFlag&&k._DirtyCallbackArray.push(k._PrePassDirtyCallBack),k._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(k._RunDirtyCallBacks),this.KZ().resetCachedMaterial())}resetDrawCache(){const Z=this.KZ().meshes;for(const x of Z)if(x.bf)for(const Z of x.bf)Z.TZ()===this&&Z.resetDrawCache()}_markAllSubMeshesAsDirty(Z){const x=this.KZ();if(x.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const F=x.meshes;for(const u of F)if(u.bf)for(const F of u.bf){if((F.TZ()||(x._hasDefaultMaterial?x.defaultMaterial:null))===this)for(const x of F._drawWrappers)x&&x.defines&&x.defines.markAllAsDirty&&this._materialContext===x.materialContext&&Z(x.defines)}}_markScenePrePassDirty(){if(this.KZ().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const Z=this.KZ().enablePrePassRenderer();Z&&Z.It()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(k._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(k._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(k._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(k._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(k._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(k._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(k._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(k._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(k._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(k._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const Z=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Uf.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(Z)}))}}setPrePassRenderer(Z){return!1}dispose(Z,x,F){const u=this.KZ();if(u.stopAnimation(this),u.freeProcessedMaterials(),u.removeMaterial(this),this._eventInfo.forceDisposeTextures=x,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const Z=this._parentContainer.materials.indexOf(this);Z>-1&&this._parentContainer.materials.splice(Z,1),this._parentContainer=null}if(!0!==F)if(this.meshMap)for(const G in this.meshMap){const Z=this.meshMap[G];this._disposeMeshResources(Z)}else{const Z=u.meshes;for(const x of Z)this._disposeMeshResources(x)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Uf.notifyObservers(this),this.Uf.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(Z){if(!Z)return;const x=Z.af,F=Z._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(Z.bf&&F)for(const G of Z.bf){const Z=G._drawWrappers;for(let f=0;f<Z.length;f++){var u;const Y=null===(u=Z[f])||void 0===u?void 0:u.effect;if(!Y)continue;F[f]===this&&(null===x||void 0===x||x._releaseVertexArrayObject(Y),G._removeDrawWrapper(f,!0,!0))}}}else null===x||void 0===x||x._releaseVertexArrayObject(this._drawWrapper.effect);Z.material!==this||Z.sourceMesh||(Z.material=null)}serialize(){const Z=J.c.Serialize(this);return Z.stencil=this.stencil.serialize(),Z.uniqueId=this.uniqueId,this._serializePlugins(Z),Z}_serializePlugins(Z){if(Z.plugins={},this.pluginManager)for(const x of this.pluginManager._plugins)x.doNotSerialize||(Z.plugins[x.getClassName()]=x.serialize())}static Parse(Z,x,F){if(Z.customType){if("BABYLON.PBRMaterial"===Z.customType&&Z.overloadedAlbedo&&(Z.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return o.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else Z.customType="BABYLON.StandardMaterial";const u=f.Tools.Instantiate(Z.customType).Parse(Z,x,F);return u._loadedUniqueId=Z.uniqueId,u}static _ParsePlugins(Z,x,F,u){if(Z.plugins)for(const j in Z.plugins){var G,Y;const d=Z.plugins[j];let t=null===(G=x.pluginManager)||void 0===G?void 0:G.getPlugin(d.name);if(!t){const Z=f.Tools.Instantiate("BABYLON."+j);Z&&(t=new Z(x))}null===(Y=t)||void 0===Y||Y.parse(d,F,u)}}}k.TriangleFillMode=0,k.WireFrameFillMode=1,k.PointFillMode=2,k.PointListDrawMode=3,k.LineListDrawMode=4,k.LineLoopDrawMode=5,k.LineStripDrawMode=6,k.TriangleStripDrawMode=7,k.TriangleFanDrawMode=8,k.ClockWiseSideOrientation=0,k.CounterClockWiseSideOrientation=1,k.ImageProcessingDirtyFlag=64,k.TextureDirtyFlag=1,k.LightDirtyFlag=2,k.FresnelDirtyFlag=4,k.AttributesDirtyFlag=8,k.MiscDirtyFlag=16,k.PrePassDirtyFlag=32,k.AllDirtyFlag=127,k.MATERIAL_OPAQUE=0,k.MATERIAL_ALPHATEST=1,k.MATERIAL_ALPHABLEND=2,k.MATERIAL_ALPHATESTANDBLEND=3,k.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,k.MATERIAL_NORMALBLENDMETHOD_RNM=1,k.OnEventObservable=new Y.b,k._AllDirtyCallBack=Z=>Z.markAllAsDirty(),k._ImageProcessingDirtyCallBack=Z=>Z.markAsImageProcessingDirty(),k._TextureDirtyCallBack=Z=>Z.markAsTexturesDirty(),k._FresnelDirtyCallBack=Z=>Z.markAsFresnelDirty(),k._MiscDirtyCallBack=Z=>Z.markAsMiscDirty(),k._PrePassDirtyCallBack=Z=>Z.markAsPrePassDirty(),k._LightsDirtyCallBack=Z=>Z.markAsLightDirty(),k._AttributeDirtyCallBack=Z=>Z.markAsAttributesDirty(),k._FresnelAndMiscDirtyCallBack=Z=>{k._FresnelDirtyCallBack(Z),k._MiscDirtyCallBack(Z)},k._TextureAndMiscDirtyCallBack=Z=>{k._TextureDirtyCallBack(Z),k._MiscDirtyCallBack(Z)},k._DirtyCallbackArray=[],k._RunDirtyCallBacks=Z=>{for(const x of k._DirtyCallbackArray)x(Z)},(0,u.d)([(0,G.H)()],k.prototype,"id",void 0),(0,u.d)([(0,G.H)()],k.prototype,"uniqueId",void 0),(0,u.d)([(0,G.H)()],k.prototype,"name",void 0),(0,u.d)([(0,G.H)()],k.prototype,"metadata",void 0),(0,u.d)([(0,G.H)()],k.prototype,"checkReadyOnEveryCall",void 0),(0,u.d)([(0,G.H)()],k.prototype,"checkReadyOnlyOnce",void 0),(0,u.d)([(0,G.H)()],k.prototype,"state",void 0),(0,u.d)([(0,G.H)("alpha")],k.prototype,"_alpha",void 0),(0,u.d)([(0,G.H)("sj")],k.prototype,"_backFaceCulling",void 0),(0,u.d)([(0,G.H)("cullBackFaces")],k.prototype,"_cullBackFaces",void 0),(0,u.d)([(0,G.H)()],k.prototype,"sideOrientation",void 0),(0,u.d)([(0,G.H)("alphaMode")],k.prototype,"_alphaMode",void 0),(0,u.d)([(0,G.H)()],k.prototype,"_needDepthPrePass",void 0),(0,u.d)([(0,G.H)()],k.prototype,"disableDepthWrite",void 0),(0,u.d)([(0,G.H)()],k.prototype,"disableColorWrite",void 0),(0,u.d)([(0,G.H)()],k.prototype,"forceDepthWrite",void 0),(0,u.d)([(0,G.H)()],k.prototype,"depthFunction",void 0),(0,u.d)([(0,G.H)()],k.prototype,"separateCullingPass",void 0),(0,u.d)([(0,G.H)("fogEnabled")],k.prototype,"_fogEnabled",void 0),(0,u.d)([(0,G.H)()],k.prototype,"pointSize",void 0),(0,u.d)([(0,G.H)()],k.prototype,"zOffset",void 0),(0,u.d)([(0,G.H)()],k.prototype,"zOffsetUnits",void 0),(0,u.d)([(0,G.H)()],k.prototype,"pointsCloud",null),(0,u.d)([(0,G.H)()],k.prototype,"fillMode",null),(0,u.d)([(0,G.H)()],k.prototype,"useLogarithmicDepth",null),(0,u.d)([(0,G.H)()],k.prototype,"transparencyMode",null)},11570:(Z,x,F)=>{F.d(x,{A:()=>K,D:()=>y,F:()=>J,G:()=>s,K:()=>i,O:()=>l,S:()=>B,W:()=>M,Y:()=>R,ab:()=>e,e:()=>L,eb:()=>b,f:()=>c,gb:()=>E,h:()=>S,hb:()=>T,ib:()=>p,l:()=>o,m:()=>U,o:()=>k,q:()=>m,u:()=>q,y:()=>C});var u=F(11012),G=F(11230),f=F(11037),Y=F(11509),j=F(11572);const d=G.Lx.Black(),t={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function o(Z,x,F){if(!Z||Z.LOGARITHMICDEPTH||Z.indexOf&&Z.indexOf("LOGARITHMICDEPTH")>=0){const Z=F.activeCamera;1===Z.mode&&u.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),x.setFloat("logarithmicDepthConstant",2/(Math.log(Z.maxZ+1)/Math.LN2))}}function c(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]&&arguments[3];F&&Z.fogEnabled&&(!x||x.applyFog)&&0!==Z.fogMode&&(F.setFloat4("vFogInfos",Z.fogMode,Z.fogStart,Z.fogEnd,Z.fogDensity),u?(Z.fogColor.toLinearSpaceToRef(d,Z.getEngine().useExactSrgbConversions),F.setColor3("vFogColor",d)):F.setColor3("vFogColor",Z.fogColor))}function s(Z,x,F,u,G,f,Y,j,d,o){const c=Z.numMaxInfluencers||Z.numInfluencers;return c<=0?0:(x.push("#define MORPHTARGETS"),Z.hasPositions&&x.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),Z.hasNormals&&x.push("#define MORPHTARGETTEXTURE_HASNORMALS"),Z.hasTangents&&x.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),Z.hasUVs&&x.push("#define MORPHTARGETTEXTURE_HASUVS"),Z.hasUV2s&&x.push("#define MORPHTARGETTEXTURE_HASUV2S"),Z.hasColors&&x.push("#define MORPHTARGETTEXTURE_HASCOLORS"),Z.supportsPositions&&G&&x.push("#define MORPHTARGETS_POSITION"),Z.supportsNormals&&f&&x.push("#define MORPHTARGETS_NORMAL"),Z.supportsTangents&&Y&&x.push("#define MORPHTARGETS_TANGENT"),Z.supportsUVs&&j&&x.push("#define MORPHTARGETS_UV"),Z.supportsUV2s&&d&&x.push("#define MORPHTARGETS_UV2"),Z.supportsColors&&o&&x.push("#define MORPHTARGETS_COLOR"),x.push("#define NUM_MORPH_INFLUENCERS "+c),Z.isUsingTextureForTargets&&x.push("#define MORPHTARGETS_TEXTURE"),t.NUM_MORPH_INFLUENCERS=c,t.NORMAL=f,t.TANGENT=Y,t.UV=j,t.UV2=d,t.COLOR=o,J(F,u,t,G),c)}function J(Z,x,F){let G=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Y=F.NUM_MORPH_INFLUENCERS;if(Y>0&&f.c.LastCreatedEngine){const j=f.c.LastCreatedEngine.getCaps().maxVertexAttribs,d=x.morphTargetManager;if(null!==d&&void 0!==d&&d.isUsingTextureForTargets)return;const t=d&&d.supportsPositions&&G,o=d&&d.supportsNormals&&F.NORMAL,c=d&&d.supportsTangents&&F.TANGENT,s=d&&d.supportsUVs&&F.UV1,J=d&&d.supportsUV2s&&F.UV2,p=d&&d.supportsColors&&F.VERTEXCOLOR;for(let F=0;F<Y;F++)t&&Z.push("position"+F),o&&Z.push("normal"+F),c&&Z.push("tangent"+F),s&&Z.push("uv_"+F),J&&Z.push("uv2_"+F),p&&Z.push("color"+F),Z.length>j&&u.d.Error("Cannot add more vertex attributes for mesh "+x.name)}}function p(Z){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z.push("world0"),Z.push("world1"),Z.push("world2"),Z.push("world3"),x&&(Z.push("previousWorld0"),Z.push("previousWorld1"),Z.push("previousWorld2"),Z.push("previousWorld3"))}function U(Z,x){const F=Z.morphTargetManager;Z&&F&&x.setFloatArray("morphTargetInfluences",F.influences)}function k(Z,x){x.bindToEffect(Z,"Scene")}function M(Z,x,F){x._needUVs=!0,x[F]=!0,Z.optimizeUVAllocation&&Z.getTextureMatrix().isIdentityAs3x2()?(x[F+"DIRECTUV"]=Z.coordinatesIndex+1,x["MAINUV"+(Z.coordinatesIndex+1)]=!0):x[F+"DIRECTUV"]=0}function m(Z,x,F){const u=Z.getTextureMatrix();x.Xf(F+"Matrix",u)}function C(Z,x,F){F.BAKED_VERTEX_ANIMATION_TEXTURE&&F.INSTANCES&&Z.push("bakedVertexAnimationSettingsInstanced")}function L(Z,x,F){var u;if(x&&Z&&(Z.computeBonesUsingShaders&&x._bonesComputationForcedToCPU&&(Z.computeBonesUsingShaders=!1),Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton)){const G=Z.skeleton;if(G.isUsingTextureForMatrices&&x.getUniformIndex("boneTextureWidth")>-1){const F=G.getTransformMatrixTexture(Z);x.setTexture("boneSampler",F),x.setFloat("boneTextureWidth",4*(G.bones.length+1))}else{const f=G.getTransformMatrices(Z);f&&(x.setMatrices("mBones",f),F&&Z.KZ().prePassRenderer&&Z.KZ().prePassRenderer.getIndex(2)&&(F.previousBones[Z.uniqueId]||(F.previousBones[Z.uniqueId]=f.slice()),x.setMatrices("mPreviousBones",F.previousBones[Z.uniqueId]),u=f,F.previousBones[Z.uniqueId].set(u)))}}}function H(Z,x,F,u,G){let f=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];Z._bindLight(x,F,u,G,f)}function S(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const f=Math.min(x.lightSources.length,G);for(let Y=0;Y<f;Y++){H(x.lightSources[Y],Y,Z,F,"boolean"===typeof u?u:u.SPECULARTERM,x.receiveShadows)}}function K(Z,x,F,u){F.NUM_BONE_INFLUENCERS>0&&(u.addCPUSkinningFallback(0,x),Z.push("matricesIndices"),Z.push("matricesWeights"),F.NUM_BONE_INFLUENCERS>4&&(Z.push("matricesIndicesExtra"),Z.push("matricesWeightsExtra")))}function y(Z,x){(x.INSTANCES||x.THIN_INSTANCES)&&p(Z,!!x.PREPASS_VELOCITY),x.INSTANCESCOLOR&&Z.push("instanceColor")}function q(Z,x){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,G=0;for(let f=0;f<F&&Z["LIGHT"+f];f++)f>0&&(G=u+f,x.addFallback(G,"LIGHT"+f)),Z.SHADOWS||(Z["SHADOW"+f]&&x.addFallback(u,"SHADOW"+f),Z["SHADOWPCF"+f]&&x.addFallback(u,"SHADOWPCF"+f),Z["SHADOWPCSS"+f]&&x.addFallback(u,"SHADOWPCSS"+f),Z["SHADOWPOISSON"+f]&&x.addFallback(u,"SHADOWPOISSON"+f),Z["SHADOWESM"+f]&&x.addFallback(u,"SHADOWESM"+f),Z["SHADOWCLOSEESM"+f]&&x.addFallback(u,"SHADOWCLOSEESM"+f));return G++}function R(Z,x,F,u,G,f,Y){let j=arguments.length>7&&void 0!==arguments[7]&&arguments[7];Y._areMiscDirty&&(Y.LOGARITHMICDEPTH=F,Y.POINTSIZE=u,Y.FOG=G&&function(Z,x){return x.fogEnabled&&Z.applyFog&&0!==x.fogMode}(Z,x),Y.NONUNIFORMSCALING=Z.nonUniformScaling,Y.ALPHATEST=f,Y.DECAL_AFTER_DETAIL=j)}function B(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,f=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!F._areLightsDirty)return F._needNormals;let Y=0;const j={needNormals:F._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(Z.lightsEnabled&&!f)for(const t of x.lightSources)if(v(Z,x,t,Y,F,u,j),Y++,Y===G)break;F.SPECULARTERM=j.specularEnabled,F.SHADOWS=j.shadowEnabled;for(let t=Y;t<G;t++)void 0!==F["LIGHT"+t]&&(F["LIGHT"+t]=!1,F["HEMILIGHT"+t]=!1,F["POINTLIGHT"+t]=!1,F["DIRLIGHT"+t]=!1,F["SPOTLIGHT"+t]=!1,F["AREALIGHT"+t]=!1,F["SHADOW"+t]=!1,F["SHADOWCSM"+t]=!1,F["SHADOWCSMDEBUG"+t]=!1,F["SHADOWCSMNUM_CASCADES"+t]=!1,F["SHADOWCSMUSESHADOWMAXZ"+t]=!1,F["SHADOWCSMNOBLEND"+t]=!1,F["SHADOWCSM_RIGHTHANDED"+t]=!1,F["SHADOWPCF"+t]=!1,F["SHADOWPCSS"+t]=!1,F["SHADOWPOISSON"+t]=!1,F["SHADOWESM"+t]=!1,F["SHADOWCLOSEESM"+t]=!1,F["SHADOWCUBE"+t]=!1,F["SHADOWLOWQUALITY"+t]=!1,F["SHADOWMEDIUMQUALITY"+t]=!1);const d=Z.getEngine().getCaps();return void 0===F.SHADOWFLOAT&&(j.needRebuild=!0),F.SHADOWFLOAT=j.shadowEnabled&&(d.textureFloatRender&&d.textureFloatLinearFiltering||d.textureHalfFloatRender&&d.textureHalfFloatLinearFiltering),F.LIGHTMAPEXCLUDED=j.lightmapMode,j.needRebuild&&F.rebuild(),j.needNormals}function v(Z,x,F,u,G,f,j){switch(j.needNormals=!0,void 0===G["LIGHT"+u]&&(j.needRebuild=!0),G["LIGHT"+u]=!0,G["SPOTLIGHT"+u]=!1,G["HEMILIGHT"+u]=!1,G["POINTLIGHT"+u]=!1,G["DIRLIGHT"+u]=!1,G["AREALIGHT"+u]=!1,F.prepareLightSpecificDefines(G,u),G["LIGHT_FALLOFF_PHYSICAL"+u]=!1,G["LIGHT_FALLOFF_GLTF"+u]=!1,G["LIGHT_FALLOFF_STANDARD"+u]=!1,F.falloffType){case Y.c.FALLOFF_GLTF:G["LIGHT_FALLOFF_GLTF"+u]=!0;break;case Y.c.FALLOFF_PHYSICAL:G["LIGHT_FALLOFF_PHYSICAL"+u]=!0;break;case Y.c.FALLOFF_STANDARD:G["LIGHT_FALLOFF_STANDARD"+u]=!0}if(f&&!F.Co.equalsFloats(0,0,0)&&(j.specularEnabled=!0),G["SHADOW"+u]=!1,G["SHADOWCSM"+u]=!1,G["SHADOWCSMDEBUG"+u]=!1,G["SHADOWCSMNUM_CASCADES"+u]=!1,G["SHADOWCSMUSESHADOWMAXZ"+u]=!1,G["SHADOWCSMNOBLEND"+u]=!1,G["SHADOWCSM_RIGHTHANDED"+u]=!1,G["SHADOWPCF"+u]=!1,G["SHADOWPCSS"+u]=!1,G["SHADOWPOISSON"+u]=!1,G["SHADOWESM"+u]=!1,G["SHADOWCLOSEESM"+u]=!1,G["SHADOWCUBE"+u]=!1,G["SHADOWLOWQUALITY"+u]=!1,G["SHADOWMEDIUMQUALITY"+u]=!1,x&&x.receiveShadows&&Z.shadowsEnabled&&F.shadowEnabled){const x=F.getShadowGenerator(Z.activeCamera)??F.getShadowGenerator();if(x){const Z=x.getShadowMap();Z&&Z.renderList&&Z.renderList.length>0&&(j.shadowEnabled=!0,x.prepareDefines(G,u))}}F.lightmapMode!=Y.c.LIGHTMAP_DEFAULT?(j.lightmapMode=!0,G["LIGHTMAPEXCLUDED"+u]=!0,G["LIGHTMAPNOSPECULAR"+u]=F.lightmapMode==Y.c.LIGHTMAP_SHADOWSONLY):(G["LIGHTMAPEXCLUDED"+u]=!1,G["LIGHTMAPNOSPECULAR"+u]=!1)}function l(Z,x,F,u,G){let f=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],d=function(Z,x){let F=!1;if(Z.activeCamera){const u=x.CAMERA_ORTHOGRAPHIC?1:0,G=x.CAMERA_PERSPECTIVE?1:0,f=1===Z.activeCamera.mode?1:0,Y=0===Z.activeCamera.mode?1:0;(u^f||G^Y)&&(x.CAMERA_ORTHOGRAPHIC=1===f,x.CAMERA_PERSPECTIVE=1===Y,F=!0)}return F}(Z,u);!1!==f&&(d=(0,j.g)(F,Z,u)),u.DEPTHPREPASS!==!x.getColorWrite()&&(u.DEPTHPREPASS=!u.DEPTHPREPASS,d=!0),u.INSTANCES!==G&&(u.INSTANCES=G,d=!0),u.THIN_INSTANCES!==Y&&(u.THIN_INSTANCES=Y,d=!0),d&&u.markAsUnprocessed()}function i(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]&&arguments[4],f=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!x._areAttributesDirty&&x._needNormals===x._normals&&x._needUVs===x._uvs)return!1;x._normals=x._needNormals,x._uvs=x._needUVs,x.NORMAL=x._needNormals&&Z.isVerticesDataPresent("normal"),x._needNormals&&Z.isVerticesDataPresent("tangent")&&(x.TANGENT=!0);for(let j=1;j<=6;++j)x["UV"+j]=!!x._needUVs&&Z.isVerticesDataPresent(`uv${1===j?"":j}`);if(F){const F=Z.useVertexColors&&Z.isVerticesDataPresent("color");x.VERTEXCOLOR=F,x.VERTEXALPHA=Z.hasVertexAlpha&&F&&f}return Z.isVerticesDataPresent("instanceColor")&&(Z.hasInstances||Z.hasThinInstances)&&(x.INSTANCESCOLOR=!0),u&&function(Z,x){if(Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton){x.NUM_BONE_INFLUENCERS=Z.numBoneInfluencers;const F=void 0!==x.BONETEXTURE;if(Z.skeleton.isUsingTextureForMatrices&&F)x.BONETEXTURE=!0;else{x.BonesPerMesh=Z.skeleton.bones.length+1,x.BONETEXTURE=!F&&void 0;const u=Z.KZ().prePassRenderer;if(u&&u.enabled){const F=-1===u.excludedSkinnedMesh.indexOf(Z);x.BONES_VELOCITY_ENABLED=F}}}else x.NUM_BONE_INFLUENCERS=0,x.BonesPerMesh=0,void 0!==x.BONETEXTURE&&(x.BONETEXTURE=!1)}(Z,x),G&&function(Z,x){const F=Z.morphTargetManager;F?(x.MORPHTARGETS_UV=F.supportsUVs&&x.UV1,x.MORPHTARGETS_UV2=F.supportsUV2s&&x.UV2,x.MORPHTARGETS_TANGENT=F.supportsTangents&&x.TANGENT,x.MORPHTARGETS_NORMAL=F.supportsNormals&&x.NORMAL,x.MORPHTARGETS_POSITION=F.supportsPositions,x.MORPHTARGETS_COLOR=F.supportsColors,x.MORPHTARGETTEXTURE_HASUVS=F.hasUVs,x.MORPHTARGETTEXTURE_HASUV2S=F.hasUV2s,x.MORPHTARGETTEXTURE_HASTANGENTS=F.hasTangents,x.MORPHTARGETTEXTURE_HASNORMALS=F.hasNormals,x.MORPHTARGETTEXTURE_HASPOSITIONS=F.hasPositions,x.MORPHTARGETTEXTURE_HASCOLORS=F.hasColors,x.NUM_MORPH_INFLUENCERS=F.numMaxInfluencers||F.numInfluencers,x.MORPHTARGETS=x.NUM_MORPH_INFLUENCERS>0,x.MORPHTARGETS_TEXTURE=F.isUsingTextureForTargets):(x.MORPHTARGETS_UV=!1,x.MORPHTARGETS_UV2=!1,x.MORPHTARGETS_TANGENT=!1,x.MORPHTARGETS_NORMAL=!1,x.MORPHTARGETS_POSITION=!1,x.MORPHTARGETS_COLOR=!1,x.MORPHTARGETTEXTURE_HASUVS=!1,x.MORPHTARGETTEXTURE_HASUV2S=!1,x.MORPHTARGETTEXTURE_HASTANGENTS=!1,x.MORPHTARGETTEXTURE_HASNORMALS=!1,x.MORPHTARGETTEXTURE_HASPOSITIONS=!1,x.MORPHTARGETTEXTURE_HAS_COLORS=!1,x.MORPHTARGETS=!1,x.NUM_MORPH_INFLUENCERS=0)}(Z,x),Y&&function(Z,x){const F=Z.bakedVertexAnimationManager;x.BAKED_VERTEX_ANIMATION_TEXTURE=!(!F||!F.isEnabled)}(Z,x),!0}function e(Z,x){if(Z.activeCamera){const F=x.MULTIVIEW;x.MULTIVIEW=null!==Z.activeCamera.outputRenderTarget&&Z.activeCamera.outputRenderTarget.getViewCount()>1,x.MULTIVIEW!=F&&x.markAsUnprocessed()}}function b(Z,x,F){const u=x.ORDER_INDEPENDENT_TRANSPARENCY,G=x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;x.ORDER_INDEPENDENT_TRANSPARENCY=Z.useOrderIndependentTransparency&&F,x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!Z.getEngine().getCaps().textureFloatLinearFiltering,u===x.ORDER_INDEPENDENT_TRANSPARENCY&&G===x.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||x.markAsUnprocessed()}function E(Z,x,F){const u=x.PREPASS;if(!x._arePrePassDirty)return;const G=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(Z.prePassRenderer&&Z.prePassRenderer.enabled&&F){x.PREPASS=!0,x.SCENE_MRT_COUNT=Z.prePassRenderer.mrtCount,x.PREPASS_NORMAL_WORLDSPACE=Z.prePassRenderer.generateNormalsInWorldSpace,x.PREPASS_COLOR=!0,x.PREPASS_COLOR_INDEX=0;for(let F=0;F<G.length;F++){const u=Z.prePassRenderer.getIndex(G[F].type);-1!==u?(x[G[F].define]=!0,x[G[F].index]=u):x[G[F].define]=!1}}else{x.PREPASS=!1;for(let Z=0;Z<G.length;Z++)x[G[Z].define]=!1}x.PREPASS!=u&&(x.markAsUnprocessed(),x.markAsImageProcessingDirty())}function w(Z,x,F,u){let G=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];G&&G.push("Light"+Z),f||(x.push("vLightData"+Z,"vLightDiffuse"+Z,"vLightSpecular"+Z,"vLightDirection"+Z,"vLightWidth"+Z,"vLightHeight"+Z,"vLightFalloff"+Z,"vLightGround"+Z,"lightMatrix"+Z,"shadowsInfo"+Z,"depthValues"+Z),F.push("shadowTexture"+Z),F.push("depthTexture"+Z),x.push("viewFrustumZ"+Z,"cascadeBlendFactor"+Z,"lightSizeUVCorrection"+Z,"depthCorrection"+Z,"penumbraDarkness"+Z,"frustumLengths"+Z),u&&(F.push("projectionLightTexture"+Z),x.push("textureProjectionMatrix"+Z)),Y&&F.push("iesLightTexture"+Z))}function T(Z,x,F){let u,G,f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(Z.uniformsNames){const Y=Z;u=Y.uniformsNames,G=Y.uniformBuffersNames,x=Y.samplers,F=Y.defines,f=Y.maxSimultaneousLights||0}else u=Z,x||(x=[]);for(let Y=0;Y<f&&F["LIGHT"+Y];Y++)w(Y,u,x,F["PROJECTEDLIGHTTEXTURE"+Y],G,!1,F["IESLIGHTTEXTURE"+Y]);F.NUM_MORPH_INFLUENCERS&&(u.push("morphTargetInfluences"),u.push("morphTargetCount")),F.BAKED_VERTEX_ANIMATION_TEXTURE&&(u.push("bakedVertexAnimationSettings"),u.push("bakedVertexAnimationTextureSizeInverted"),u.push("bakedVertexAnimationTime"),x.push("bakedVertexAnimationTexture"))}},11520:(Z,x,F)=>{F.d(x,{b:()=>f});var u=F(11179),G=F(11523);class f extends G.e{constructor(Z,x){let F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(Z,x,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new u.Matrix,this._storeEffectOnSubMeshes=F}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(Z,x){return!!Z&&(!this._storeEffectOnSubMeshes||(!Z.bf||0===Z.bf.length||this.isReadyForSubMesh(Z,Z.bf[0],x)))}_isReadyForSubMesh(Z){const x=Z.materialDefines;return!(this.checkReadyOnEveryCall||!Z.effect||!x||x._renderId!==this.KZ().getRenderId())}bindOnlyWorldMatrix(Z){this._activeEffect.setMatrix("world",Z)}bindOnlyNormalMatrix(Z){this._activeEffect.setMatrix("normalMatrix",Z)}bind(Z,x){x&&this.bindForSubMesh(Z,x,x.bf[0])}_afterBind(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2?arguments[2]:void 0;super._afterBind(Z,x,F),this.KZ()._cachedEffect=x,F?F._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return F._drawWrapper._forceRebindOnNextCall||Z.isCachedMaterialInvalid(this,x,u)}dispose(Z,x,F){this._activeEffect=void 0,super.dispose(Z,x,F)}}},11564:(Z,x,F)=>{F.d(x,{b:()=>j,c:()=>d});var u=F(11159),G=F(11179),f=F(11165);class Y{static extractMinAndMaxIndexed(Z,x,F,u,G,f){for(let Y=F;Y<F+u;Y++){const F=3*x[Y],u=Z[F],j=Z[F+1],d=Z[F+2];G.minimizeInPlaceFromFloats(u,j,d),f.maximizeInPlaceFromFloats(u,j,d)}}static extractMinAndMax(Z,x,F,u,G,f){for(let Y=x,j=x*u;Y<x+F;Y++,j+=u){const x=Z[j],F=Z[j+1],u=Z[j+2];G.minimizeInPlaceFromFloats(x,F,u),f.maximizeInPlaceFromFloats(x,F,u)}}}function j(Z,x,F,u){let f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const j=new G.kx(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),d=new G.kx(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return Y.extractMinAndMaxIndexed(Z,x,F,u,j,d),f&&(j.x-=j.x*f.x+f.y,j.y-=j.y*f.x+f.y,j.z-=j.z*f.x+f.y,d.x+=d.x*f.x+f.y,d.y+=d.y*f.x+f.y,d.z+=d.z*f.x+f.y),{minimum:j,maximum:d}}function d(Z,x,F){let u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,f=arguments.length>4?arguments[4]:void 0;const j=new G.kx(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),d=new G.kx(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return f||(f=3),Y.extractMinAndMax(Z,x,F,f,j,d),u&&(j.x-=j.x*u.x+u.y,j.y-=j.y*u.x+u.y,j.z-=j.z*u.x+u.y,d.x+=d.x*u.x+u.y,d.y+=d.y*u.x+u.y,d.z+=d.z*u.x+u.y),{minimum:j,maximum:d}}(0,u.d)([f.c.filter((function(){for(var Z=arguments.length,x=new Array(Z),F=0;F<Z;F++)x[F]=arguments[F];let[u,G]=x;return!Array.isArray(u)&&!Array.isArray(G)}))],Y,"extractMinAndMaxIndexed",null),(0,u.d)([f.c.filter((function(){for(var Z=arguments.length,x=new Array(Z),F=0;F<Z;F++)x[F]=arguments[F];let[u]=x;return!Array.isArray(u)}))],Y,"extractMinAndMax",null)},11532:(Z,x,F)=>{F.d(x,{c:()=>d});var u=F(11265),G=F(11541),f=F(11546),Y=F(11564),j=F(11306);class d{get materialDefines(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.defines}set materialDefines(Z){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=Z}_getDrawWrapper(Z){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Z=Z??this._engine.currentRenderPassId;let F=this._drawWrappers[Z];return!F&&x&&(this._drawWrappers[Z]=F=new j.b(this._mesh.KZ().getEngine())),F}_removeDrawWrapper(Z){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var F;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(F=this._drawWrappers[Z])||void 0===F||F.dispose(x));this._drawWrappers[Z]=void 0}get effect(){var Z;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(Z=this._getDrawWrapper())||void 0===Z?void 0:Z.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(Z){this._mainDrawWrapperOverride=Z}setEffect(Z){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2?arguments[2]:void 0,u=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const G=this._drawWrapper;G.setEffect(Z,x,u),void 0!==F&&(G.materialContext=F),Z||(G.defines=null,G.materialContext=void 0)}resetDrawCache(Z){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==Z)return void this._removeDrawWrapper(Z,!0,x);for(const Z of this._drawWrappers)null===Z||void 0===Z||Z.dispose(x)}this._drawWrappers=[]}static AddToMesh(Z,x,F,u,G,f,Y){return new d(Z,x,F,u,G,f,Y,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(Z,x,F,u,G,f,Y){let j=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],d=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=Z,this.verticesStart=x,this.verticesCount=F,this.indexStart=u,this.indexCount=G,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=f,this._renderingMesh=Y||f,d&&f.bf.push(this),this._engine=this._mesh.KZ().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=f.bf.length-1,j&&(this.refreshBoundingInfo(),f.Qf(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(Z){return this._boundingInfo=Z,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const Z=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return Z||this._renderingMesh}TZ(){let Z=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const x=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!x)return Z&&this._mesh.KZ()._hasDefaultMaterial?this._mesh.KZ().defaultMaterial:null;if(this._isMultiMaterial(x)){const Z=x.getSubMaterial(this.materialIndex);return this._currentMaterial!==Z&&(this._currentMaterial=Z,this.resetDrawCache()),Z}return x}_isMultiMaterial(Z){return void 0!==Z.getSubMaterial}refreshBoundingInfo(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.af)return this;if(Z||(Z=this._renderingMesh.getVerticesData(u.f.PositionKind)),!Z)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const x=this._renderingMesh.cj();let F;if(0===this.indexStart&&this.indexCount===x.length){const Z=this._renderingMesh.getBoundingInfo();F={minimum:Z.minimum.clone(),maximum:Z.maximum.clone()}}else F=(0,Y.b)(Z,x,this.indexStart,this.indexCount,this._renderingMesh.af.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(F.minimum,F.maximum):this._boundingInfo=new f.b(F.minimum,F.maximum),this}_checkCollision(Z){return this.getBoundingInfo()._checkCollision(Z)}updateBoundingInfo(Z){let x=this.getBoundingInfo();return x||(this.refreshBoundingInfo(),x=this.getBoundingInfo()),x&&x.update(Z),this}isInFrustum(Z){const x=this.getBoundingInfo();return!!x&&x.isInFrustum(Z,this._mesh.ts)}isCompletelyInFrustum(Z){const x=this.getBoundingInfo();return!!x&&x.isCompletelyInFrustum(Z)}render(Z){return this._renderingMesh.render(this,Z,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(Z,x){if(!this._linesIndexBuffer){const F=6*Math.floor(this.indexCount/3),u=this.verticesStart+this.verticesCount>65535?new Uint32Array(F):new Uint16Array(F);let G=0;if(0===Z.length)for(let Z=this.indexStart;Z<this.indexStart+this.indexCount;Z+=3)u[G++]=Z,u[G++]=Z+1,u[G++]=Z+1,u[G++]=Z+2,u[G++]=Z+2,u[G++]=Z;else for(let x=this.indexStart;x<this.indexStart+this.indexCount;x+=3)u[G++]=Z[x],u[G++]=Z[x+1],u[G++]=Z[x+1],u[G++]=Z[x+2],u[G++]=Z[x+2],u[G++]=Z[x];this._linesIndexBuffer=x.createIndexBuffer(u),this._linesIndexCount=u.length}return this._linesIndexBuffer}canIntersects(Z){const x=this.getBoundingInfo();return!!x&&Z.intersectsBox(x.boundingBox)}intersects(Z,x,F,u,G){const f=this.TZ();if(!f)return null;let Y=3,j=!1;switch(f.fillMode){case 3:case 5:case 6:case 8:return null;case 7:Y=1,j=!0}return 4===f.fillMode?F.length?this._intersectLines(Z,x,F,this._mesh.intersectionThreshold,u):this._intersectUnIndexedLines(Z,x,F,this._mesh.intersectionThreshold,u):!F.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(Z,x,F,u,G):this._intersectTriangles(Z,x,F,Y,j,u,G)}_intersectLines(Z,x,F,u,f){let Y=null;for(let j=this.indexStart;j<this.indexStart+this.indexCount;j+=2){const d=x[F[j]],t=x[F[j+1]],o=Z.intersectionSegment(d,t,u);if(!(o<0)&&((f||!Y||o<Y.distance)&&(Y=new G.c(null,null,o),Y.faceId=j/2,f)))break}return Y}_intersectUnIndexedLines(Z,x,F,u,f){let Y=null;for(let j=this.verticesStart;j<this.verticesStart+this.verticesCount;j+=2){const F=x[j],d=x[j+1],t=Z.intersectionSegment(F,d,u);if(!(t<0)&&((f||!Y||t<Y.distance)&&(Y=new G.c(null,null,t),Y.faceId=j/2,f)))break}return Y}_intersectTriangles(Z,x,F,u,G,f,Y){let j=null,d=-1;for(let t=this.indexStart;t<this.indexStart+this.indexCount-(3-u);t+=u){d++;const u=F[t],o=F[t+1],c=F[t+2];if(G&&4294967295===c){t+=2;continue}const s=x[u],J=x[o],p=x[c];if(!s||!J||!p)continue;if(Y&&!Y(s,J,p,Z,u,o,c))continue;const U=Z.intersectsTriangle(s,J,p);if(U){if(U.distance<0)continue;if((f||!j||U.distance<j.distance)&&(j=U,j.faceId=d,f))break}}return j}_intersectUnIndexedTriangles(Z,x,F,u,G){let f=null;for(let Y=this.verticesStart;Y<this.verticesStart+this.verticesCount;Y+=3){const F=x[Y],j=x[Y+1],d=x[Y+2];if(G&&!G(F,j,d,Z,-1,-1,-1))continue;const t=Z.intersectsTriangle(F,j,d);if(t){if(t.distance<0)continue;if((u||!f||t.distance<f.distance)&&(f=t,f.faceId=Y/3,u))break}}return f}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(Z,x){const F=new d(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,Z,x,!1);if(!this.IsGlobal){const Z=this.getBoundingInfo();if(!Z)return F;F._boundingInfo=new f.b(Z.minimum,Z.maximum)}return F}dispose(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.KZ().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const x=this._mesh.bf.indexOf(this);this._mesh.bf.splice(x,1),this.resetDrawCache(void 0,Z)}getClassName(){return"SubMesh"}static CreateFromIndices(Z,x,F,u,G){let f=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=Number.MAX_VALUE,j=-Number.MAX_VALUE;const t=(G||u).cj();for(let d=x;d<x+F;d++){const Z=t[d];Z<Y&&(Y=Z),Z>j&&(j=Z)}return new d(Z,Y,j-Y+1,x,F,u,G,f)}}}}]);