"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[24],{12805:(u,R,I)=>{I.d(R,{b:()=>B});class B{constructor(u,R,I){this.bu=u,this.bv=R,this.distance=I,this.faceId=0,this.subMeshId=0}}},12813:(u,R,I)=>{I.d(R,{c:()=>C});var B=I(12487),U=I(12481),K=I(12485);class C{constructor(u,R,I){this.vectors=(0,B.d)(8,U.PR.Zero),this.center=U.PR.Zero(),this.centerWorld=U.PR.Zero(),this.extendSize=U.PR.Zero(),this.extendSizeWorld=U.PR.Zero(),this.directions=(0,B.d)(3,U.PR.Zero),this.vectorsWorld=(0,B.d)(8,U.PR.Zero),this.minimumWorld=U.PR.Zero(),this.maximumWorld=U.PR.Zero(),this.minimum=U.PR.Zero(),this.maximum=U.PR.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(u,R,I)}reConstruct(u,R,I){const B=u.x,K=u.y,C=u.z,D=R.x,s=R.y,t=R.z,G=this.vectors;this.minimum.ED(B,K,C),this.maximum.ED(D,s,t),G[0].ED(B,K,C),G[1].ED(D,s,t),G[2].ED(D,K,C),G[3].ED(B,s,C),G[4].ED(B,K,t),G[5].ED(D,s,C),G[6].ED(B,s,t),G[7].ED(D,K,t),R.addToRef(u,this.center).scaleInPlace(.5),R.subtractToRef(u,this.extendSize).scaleInPlace(.5),this._worldMatrix=I||U.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(u){const R=C._TmpVector3,I=this.maximum.subtractToRef(this.minimum,R[0]),B=I.length();I.normalizeFromLength(B);const U=B*u,K=I.scaleInPlace(.5*U),D=this.center.subtractToRef(K,R[1]),s=this.center.addToRef(K,R[2]);return this.reConstruct(D,s,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(u){const R=this.minimumWorld,I=this.maximumWorld,B=this.directions,K=this.vectorsWorld,C=this.vectors;if(u.isIdentity()){R.B(this.minimum),I.B(this.maximum);for(let u=0;u<8;++u)K[u].B(C[u]);this.extendSizeWorld.B(this.extendSize),this.centerWorld.B(this.center)}else{R.fD(Number.MAX_VALUE),I.fD(-Number.MAX_VALUE);for(let B=0;B<8;++B){const D=K[B];U.PR.TransformCoordinatesToRef(C[B],u,D),R.minimizeInPlace(D),I.maximizeInPlace(D)}I.subtractToRef(R,this.extendSizeWorld).scaleInPlace(.5),I.addToRef(R,this.centerWorld).scaleInPlace(.5)}U.PR.FromArrayToRef(u.m,0,B[0]),U.PR.FromArrayToRef(u.m,4,B[1]),U.PR.FromArrayToRef(u.m,8,B[2]),this._worldMatrix=u}isInFrustum(u){return C.IsInFrustum(this.vectorsWorld,u)}isCompletelyInFrustum(u){return C.IsCompletelyInFrustum(this.vectorsWorld,u)}intersectsPoint(u){const R=this.minimumWorld,I=this.maximumWorld,B=R.x,U=R.y,C=R.z,D=I.x,s=I.y,t=I.z,G=u.x,S=u.y,b=u.z,r=-K.c;return!(D-G<r||r>G-B)&&(!(s-S<r||r>S-U)&&!(t-b<r||r>b-C))}intersectsSphere(u){return C.IntersectsSphere(this.minimumWorld,this.maximumWorld,u.centerWorld,u.radiusWorld)}intersectsMinMax(u,R){const I=this.minimumWorld,B=this.maximumWorld,U=I.x,K=I.y,C=I.z,D=B.x,s=B.y,t=B.z,G=u.x,S=u.y,b=u.z,r=R.x,P=R.y,X=R.z;return!(D<G||U>r)&&(!(s<S||K>P)&&!(t<b||C>X))}dispose(){var u,R;null===(u=this._drawWrapperFront)||void 0===u||u.dispose(),null===(R=this._drawWrapperBack)||void 0===R||R.dispose()}static Intersects(u,R){return u.intersectsMinMax(R.minimumWorld,R.maximumWorld)}static IntersectsSphere(u,R,I,B){const K=C._TmpVector3[0];U.PR.ClampToRef(I,u,R,K);return U.PR.DistanceSquared(I,K)<=B*B}static IsCompletelyInFrustum(u,R){for(let I=0;I<6;++I){const B=R[I];for(let R=0;R<8;++R)if(B.dotCoordinate(u[R])<0)return!1}return!0}static IsInFrustum(u,R){for(let I=0;I<6;++I){let B=!0;const U=R[I];for(let R=0;R<8;++R)if(U.dotCoordinate(u[R])>=0){B=!1;break}if(B)return!1}return!0}}C._TmpVector3=(0,B.d)(3,U.PR.Zero)},12808:(u,R,I)=>{I.d(R,{c:()=>S});var B=I(12487),U=I(12481),K=I(12813),C=I(12820);const D={min:0,max:0},s={min:0,max:0},t=(u,R,I)=>{const B=U.PR.Dot(R.centerWorld,u),K=Math.abs(U.PR.Dot(R.directions[0],u))*R.extendSize.x+Math.abs(U.PR.Dot(R.directions[1],u))*R.extendSize.y+Math.abs(U.PR.Dot(R.directions[2],u))*R.extendSize.z;I.min=B-K,I.max=B+K},G=(u,R,I)=>(t(u,R,D),t(u,I,s),!(D.min>s.max||s.min>D.max));class S{constructor(u,R,I){this._isLocked=!1,this.boundingBox=new K.c(u,R,I),this.boundingSphere=new C.d(u,R,I)}reConstruct(u,R,I){this.boundingBox.reConstruct(u,R,I),this.boundingSphere.reConstruct(u,R,I)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(u){this._isLocked=u}update(u){this._isLocked||(this.boundingBox._update(u),this.boundingSphere._update(u))}centerOn(u,R){const I=S._TmpVector3[0].B(u).RS(R),B=S._TmpVector3[1].B(u).addInPlace(R);return this.boundingBox.reConstruct(I,B,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(I,B,this.boundingBox.getWorldMatrix()),this}encapsulate(u){const R=U.PR.Minimize(this.minimum,u),I=U.PR.Maximize(this.maximum,u);return this.reConstruct(R,I,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(u){const R=U.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(R);const I=U.TmpVectors.PR[0];return U.PR.TransformCoordinatesToRef(u.boundingBox.minimumWorld,R,I),this.encapsulate(I),U.PR.TransformCoordinatesToRef(u.boundingBox.maximumWorld,R,I),this.encapsulate(I),this}scale(u){return this.boundingBox.scale(u),this.boundingSphere.scale(u),this}isInFrustum(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===R||3===R)&&this.boundingSphere.isCenterInFrustum(u))return!0;if(!this.boundingSphere.isInFrustum(u))return!1;return!(1!==R&&3!==R)||this.boundingBox.isInFrustum(u)}get diagonalLength(){const u=this.boundingBox;return u.maximumWorld.subtractToRef(u.minimumWorld,S._TmpVector3[0]).length()}isCompletelyInFrustum(u){return this.boundingBox.isCompletelyInFrustum(u)}_checkCollision(u){return u._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(u){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(u)&&!!this.boundingBox.intersectsPoint(u))}intersects(u,R){if(!C.d.Intersects(this.boundingSphere,u.boundingSphere))return!1;if(!K.c.Intersects(this.boundingBox,u.boundingBox))return!1;if(!R)return!0;const I=this.boundingBox,B=u.boundingBox;return!!G(I.directions[0],I,B)&&(!!G(I.directions[1],I,B)&&(!!G(I.directions[2],I,B)&&(!!G(B.directions[0],I,B)&&(!!G(B.directions[1],I,B)&&(!!G(B.directions[2],I,B)&&(!!G(U.PR.Cross(I.directions[0],B.directions[0]),I,B)&&(!!G(U.PR.Cross(I.directions[0],B.directions[1]),I,B)&&(!!G(U.PR.Cross(I.directions[0],B.directions[2]),I,B)&&(!!G(U.PR.Cross(I.directions[1],B.directions[0]),I,B)&&(!!G(U.PR.Cross(I.directions[1],B.directions[1]),I,B)&&(!!G(U.PR.Cross(I.directions[1],B.directions[2]),I,B)&&(!!G(U.PR.Cross(I.directions[2],B.directions[0]),I,B)&&(!!G(U.PR.Cross(I.directions[2],B.directions[1]),I,B)&&!!G(U.PR.Cross(I.directions[2],B.directions[2]),I,B))))))))))))))}}S._TmpVector3=(0,B.d)(2,U.PR.Zero)},12820:(u,R,I)=>{I.d(R,{d:()=>K});var B=I(12487),U=I(12481);class K{constructor(u,R,I){this.center=U.PR.Zero(),this.centerWorld=U.PR.Zero(),this.minimum=U.PR.Zero(),this.maximum=U.PR.Zero(),this.reConstruct(u,R,I)}reConstruct(u,R,I){this.minimum.B(u),this.maximum.B(R);const B=U.PR.Distance(u,R);R.addToRef(u,this.center).scaleInPlace(.5),this.radius=.5*B,this._update(I||U.Matrix.IdentityReadOnly)}scale(u){const R=this.radius*u,I=K._TmpVector3,B=I[0].fD(R),U=this.center.subtractToRef(B,I[1]),C=this.center.addToRef(B,I[2]);return this.reConstruct(U,C,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(u){if(u.isIdentity())this.centerWorld.B(this.center),this.radiusWorld=this.radius;else{U.PR.TransformCoordinatesToRef(this.center,u,this.centerWorld);const R=K._TmpVector3[0];U.PR.TransformNormalFromFloatsToRef(1,1,1,u,R),this.radiusWorld=Math.max(Math.abs(R.x),Math.abs(R.y),Math.abs(R.z))*this.radius}}isInFrustum(u){const R=this.centerWorld,I=this.radiusWorld;for(let B=0;B<6;B++)if(u[B].dotCoordinate(R)<=-I)return!1;return!0}isCenterInFrustum(u){const R=this.centerWorld;for(let I=0;I<6;I++)if(u[I].dotCoordinate(R)<0)return!1;return!0}intersectsPoint(u){const R=U.PR.DistanceSquared(this.centerWorld,u);return!(this.radiusWorld*this.radiusWorld<R)}static Intersects(u,R){const I=U.PR.DistanceSquared(u.centerWorld,R.centerWorld),B=u.radiusWorld+R.radiusWorld;return!(B*B<I)}static CreateFromCenterAndRadius(u,R,I){this._TmpVector3[0].B(u),this._TmpVector3[1].ED(0,0,R),this._TmpVector3[2].B(u),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].RS(this._TmpVector3[1]);const B=new K(this._TmpVector3[0],this._TmpVector3[2]);return B._worldMatrix=I||U.Matrix.Identity(),B}}K._TmpVector3=(0,B.d)(3,U.PR.Zero)},12840:(u,R,I)=>{function B(u){-1===u.indexOf("vClipPlane")&&u.push("vClipPlane"),-1===u.indexOf("vClipPlane2")&&u.push("vClipPlane2"),-1===u.indexOf("vClipPlane3")&&u.push("vClipPlane3"),-1===u.indexOf("vClipPlane4")&&u.push("vClipPlane4"),-1===u.indexOf("vClipPlane5")&&u.push("vClipPlane5"),-1===u.indexOf("vClipPlane6")&&u.push("vClipPlane6")}function U(u,R,I){const B=!!(u.clipPlane??R.clipPlane),U=!!(u.clipPlane2??R.clipPlane2),K=!!(u.clipPlane3??R.clipPlane3),C=!!(u.clipPlane4??R.clipPlane4),D=!!(u.clipPlane5??R.clipPlane5),s=!!(u.clipPlane6??R.clipPlane6);B&&I.push("#define CLIPPLANE"),U&&I.push("#define CLIPPLANE2"),K&&I.push("#define CLIPPLANE3"),C&&I.push("#define CLIPPLANE4"),D&&I.push("#define CLIPPLANE5"),s&&I.push("#define CLIPPLANE6")}function K(u,R,I){let B=!1;const U=!!(u.clipPlane??R.clipPlane),K=!!(u.clipPlane2??R.clipPlane2),C=!!(u.clipPlane3??R.clipPlane3),D=!!(u.clipPlane4??R.clipPlane4),s=!!(u.clipPlane5??R.clipPlane5),t=!!(u.clipPlane6??R.clipPlane6);return I.CLIPPLANE!==U&&(I.CLIPPLANE=U,B=!0),I.CLIPPLANE2!==K&&(I.CLIPPLANE2=K,B=!0),I.CLIPPLANE3!==C&&(I.CLIPPLANE3=C,B=!0),I.CLIPPLANE4!==D&&(I.CLIPPLANE4=D,B=!0),I.CLIPPLANE5!==s&&(I.CLIPPLANE5=s,B=!0),I.CLIPPLANE6!==t&&(I.CLIPPLANE6=t,B=!0),B}function C(u,R,I){let B=R.clipPlane??I.clipPlane;D(u,"vClipPlane",B),B=R.clipPlane2??I.clipPlane2,D(u,"vClipPlane2",B),B=R.clipPlane3??I.clipPlane3,D(u,"vClipPlane3",B),B=R.clipPlane4??I.clipPlane4,D(u,"vClipPlane4",B),B=R.clipPlane5??I.clipPlane5,D(u,"vClipPlane5",B),B=R.clipPlane6??I.clipPlane6,D(u,"vClipPlane6",B)}function D(u,R,I){I&&u.setFloat4(R,I.normal.x,I.normal.y,I.normal.z,I.d)}I.d(R,{e:()=>B,g:()=>C,j:()=>K,n:()=>U})},12782:(u,R,I)=>{I.d(R,{e:()=>B});class B{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(u,R){this._defines[u]||(u<this._currentRank&&(this._currentRank=u),u>this._maxRank&&(this._maxRank=u),this._defines[u]=new Array),this._defines[u].push(R)}addCPUSkinningFallback(u,R){this._mesh=R,u<this._currentRank&&(this._currentRank=u),u>this._maxRank&&(this._maxRank=u)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(u,R){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,u=u.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),R._bonesComputationForcedToCPU=!0;const I=this._mesh.eu();for(let u=0;u<I.meshes.length;u++){const B=I.meshes[u];if(B.material){if(B.computeBonesUsingShaders&&0!==B.numBoneInfluencers)if(B.material.getEffect()===R)B.computeBonesUsingShaders=!1;else if(B.DD)for(const u of B.DD){if(u.effect===R){B.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&B.computeBonesUsingShaders&&B.numBoneInfluencers>0&&(B.computeBonesUsingShaders=!1)}}else{const R=this._defines[this._currentRank];if(R)for(let I=0;I<R.length;I++)u=u.replace("#define "+R[I],"");this._currentRank++}return u}}},12796:(u,R,I)=>{I.d(R,{c:()=>E});var B=I(12466),U=I(12472),K=I(12294),C=I(12303),D=I(12346),s=I(12798),t=I(12724),G=I(12315),S=I(12521),b=I(12587),r=I(12507);class P{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(u){this._func=u}get funcRef(){return this._funcRef}set funcRef(u){this._funcRef=u}get funcMask(){return this._funcMask}set funcMask(u){this._funcMask=u}get opStencilFail(){return this._opStencilFail}set opStencilFail(u){this._opStencilFail=u}get opDepthFail(){return this._opDepthFail}set opDepthFail(u){this._opDepthFail=u}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(u){this._opStencilDepthPass=u}get mask(){return this._mask}set mask(u){this._mask=u}get enabled(){return this._enabled}set enabled(u){this._enabled=u}getClassName(){return"MaterialStencilState"}copyTo(u){r.e.Clone((()=>u),this)}serialize(){return r.e.Serialize(this)}parse(u,R,I){r.e.Parse((()=>this),u,R,I)}}(0,B.c)([(0,U.S)()],P.prototype,"func",null),(0,B.c)([(0,U.S)()],P.prototype,"funcRef",null),(0,B.c)([(0,U.S)()],P.prototype,"funcMask",null),(0,B.c)([(0,U.S)()],P.prototype,"opStencilFail",null),(0,B.c)([(0,U.S)()],P.prototype,"opDepthFail",null),(0,B.c)([(0,U.S)()],P.prototype,"opStencilDepthPass",null),(0,B.c)([(0,U.S)()],P.prototype,"mask",null),(0,B.c)([(0,U.S)()],P.prototype,"enabled",null);var X=I(12831);class E{get _supportGlowLayer(){return!1}set _glowModeEnabled(u){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(u){if(this._alpha===u)return;const R=this._alpha;this._alpha=u,1!==R&&1!==u||this.Ot(E.MiscDirtyFlag+E.PrePassDirtyFlag)}get alpha(){return this._alpha}set XD(u){this._backFaceCulling!==u&&(this._backFaceCulling=u,this.Ot(E.TextureDirtyFlag))}get XD(){return this._backFaceCulling}set cullBackFaces(u){this._cullBackFaces!==u&&(this._cullBackFaces=u,this.Ot(E.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(u){this._blockDirtyMechanism!==u&&(this._blockDirtyMechanism=u,u||this.aS())}atomicMaterialsUpdate(u){this.blockDirtyMechanism=!0;try{u(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(u){this._onDisposeObserver&&this.uD.remove(this._onDisposeObserver),this._onDisposeObserver=this.uD.add(u)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new C.c),this._onBindObservable}set onBind(u){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(u)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new C.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new C.c),this._onEffectCreatedObservable}set alphaMode(u){this._alphaMode!==u&&(this._alphaMode=u,this.Ot(E.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(u){this._needDepthPrePass!==u&&(this._needDepthPrePass=u,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(u){this._fogEnabled!==u&&(this._fogEnabled=u,this.Ot(E.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case E.WireFrameFillMode:case E.LineListDrawMode:case E.LineLoopDrawMode:case E.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(u){this.fillMode=u?E.WireFrameFillMode:E.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case E.PointFillMode:case E.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(u){this.fillMode=u?E.PointFillMode:E.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(u){this._fillMode!==u&&(this._fillMode=u,this.Ot(E.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(u){const R=this.eu().getEngine().getCaps().fragmentDepthSupported;u&&!R&&G.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=u&&R,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(u){this._drawWrapper=u}constructor(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.uD=new C.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.RD=new P,this._useUBO=!1,this._fillMode=E.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=u;const U=R||D.e.LastCreatedScene;U&&(this._scene=U,this._dirtyCallbacks={},this._forceGLSL=B,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=u||K.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new b.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new t.e(this._scene.getEngine(),void 0,void 0,u),this._useUBO=this.eu().getEngine().supportsUniformBuffers,this._createUniformBuffer(),I||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),E.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var u;const R=this.eu().getEngine();null===(u=this._uniformBuffer)||void 0===u||u.dispose(),R.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new t.e(R,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new t.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(u){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.aS(),this.checkReadyOnlyOnce=!0}unfreeze(){this.aS(),this.checkReadyOnlyOnce=!1}isReady(u,R){return!0}isReadyForSubMesh(u,R,I){const B=R.materialDefines;return!!B&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}eu(){return this._scene}_getEffectiveOrientation(u){return null!==this.sideOrientation?this.sideOrientation:u.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(u){this._transparencyMode!==u&&(this._transparencyMode=u,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===E.MATERIAL_ALPHABLEND||this._transparencyMode===E.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===E.MATERIAL_ALPHATEST||this._transparencyMode===E.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===E.MATERIAL_OPAQUE||this._transparencyMode===E.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(u){return this._hasTransparencyMode?this._transparencyModeIsBlend:u.visibility<1||!this._disableAlphaBlending&&(u.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(u){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(u)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}aS(){let u=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const R=this.eu().meshes;for(const I of R)if(I.DD)for(const R of I.DD)if(R.cu()===this)for(const I of R._drawWrappers)I&&this._materialContext===I.materialContext&&(I._wasPreviouslyReady=!1,I._wasPreviouslyUsingInstances=null,I._forceRebindOnNextCall=u);u&&this.Ot(E.AllDirtyFlag)}_preBind(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const I=this._scene.getEngine(),B=(null==R?this.sideOrientation:R)===E.ClockWiseSideOrientation;return I.enableEffect(u||this._getDrawWrapper()),I.setState(this.XD,this.zOffset,!1,B,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.RD,this.zOffsetUnits),B}bind(u,R){}buildUniformLayout(){const u=this._uniformBuffer;this._eventInfo.ubo=u,this._callbackPluginEventGeneric(8,this._eventInfo),u.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(u,R,I){const B=I._drawWrapper;this._eventInfo.subMesh=I,this._callbackPluginEventBindForSubMesh(this._eventInfo),B._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(u){}bindView(u){this._useUBO?this._needToBindSceneUbo=!0:u.setMatrix("view",this.eu().getViewMatrix())}bindViewProjection(u){this._useUBO?this._needToBindSceneUbo=!0:(u.setMatrix("viewProjection",this.eu().getTransformMatrix()),u.setMatrix("projection",this.eu().getProjectionMatrix()))}bindEyePosition(u,R){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(u,R)}_afterBind(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&R&&(this._needToBindSceneUbo=!1,(0,X.n)(R,this.eu().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=u?u.visibility:1,this._onBindObservable&&u&&this._onBindObservable.notifyObservers(u),this.disableDepthWrite){const u=this._scene.getEngine();this._cachedDepthWriteState=u.getDepthWrite(),u.setDepthWrite(!1)}if(this.disableColorWrite){const u=this._scene.getEngine();this._cachedColorWriteState=u.getColorWrite(),u.setColorWrite(!1)}if(0!==this.depthFunction){const u=this._scene.getEngine();this._cachedDepthFunctionState=u.getDepthFunction()||0,u.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(u){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=u,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(u){return null}_clonePlugins(u,R){const I={};if(this._serializePlugins(I),E._ParsePlugins(I,u,this._scene,R),this.pluginManager)for(const B of this.pluginManager._plugins){const R=u.pluginManager.getPlugin(B.name);R&&B.copyTo(R)}}getBindedMeshes(){if(this.meshMap){const u=[];for(const R in this.meshMap){const I=this.meshMap[R];I&&u.push(I)}return u}return this._scene.meshes.filter((u=>u.material===this))}forceCompilation(u,R,I,B){const U={clipPlane:!1,useInstances:!1,...I},K=this.eu(),C=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const D=()=>{if(!this._scene||!this._scene.getEngine())return;const I=K.clipPlane;if(U.clipPlane&&(K.clipPlane=new S.c(0,0,0,1)),this._storeEffectOnSubMeshes){let I=!0,K=null;if(u.DD){const R=new s.b(0,0,0,0,0,u,void 0,!1,!1);R.materialDefines&&(R.materialDefines._renderId=-1),this.isReadyForSubMesh(u,R,U.useInstances)||(R.effect&&R.effect.getCompilationError()&&R.effect.allFallbacksProcessed()?K=R.effect.getCompilationError():(I=!1,setTimeout(D,16)))}I&&(this.allowShaderHotSwapping=C,K&&B&&B(K),R&&R(this))}else this.isReady()?(this.allowShaderHotSwapping=C,R&&R(this)):setTimeout(D,16);U.clipPlane&&(K.clipPlane=I)};D()}async forceCompilationAsync(u,R){return await new Promise(((I,B)=>{this.forceCompilation(u,(()=>{I()}),R,(u=>{B(u)}))}))}Ot(u){this.eu().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(E._DirtyCallbackArray.length=0,u&E.ImageProcessingDirtyFlag&&E._DirtyCallbackArray.push(E._ImageProcessingDirtyCallBack),u&E.TextureDirtyFlag&&E._DirtyCallbackArray.push(E._TextureDirtyCallBack),u&E.LightDirtyFlag&&E._DirtyCallbackArray.push(E._LightsDirtyCallBack),u&E.FresnelDirtyFlag&&E._DirtyCallbackArray.push(E._FresnelDirtyCallBack),u&E.AttributesDirtyFlag&&E._DirtyCallbackArray.push(E._AttributeDirtyCallBack),u&E.MiscDirtyFlag&&E._DirtyCallbackArray.push(E._MiscDirtyCallBack),u&E.PrePassDirtyFlag&&E._DirtyCallbackArray.push(E._PrePassDirtyCallBack),E._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(E._RunDirtyCallBacks),this.eu().resetCachedMaterial())}resetDrawCache(){const u=this.eu().meshes;for(const R of u)if(R.DD)for(const u of R.DD)u.cu()===this&&u.resetDrawCache()}_markAllSubMeshesAsDirty(u){const R=this.eu();if(R.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const I=R.meshes;for(const B of I)if(B.DD)for(const I of B.DD){if((I.cu()||(R._hasDefaultMaterial?R.defaultMaterial:null))===this)for(const R of I._drawWrappers)R&&R.defines&&R.defines.markAllAsDirty&&this._materialContext===R.materialContext&&u(R.defines)}}_markScenePrePassDirty(){if(this.eu().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const u=this.eu().enablePrePassRenderer();u&&u.Ot()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(E._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(E._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(E._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(E._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(E._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(E._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(E._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(E._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(E._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(E._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const u=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.uD.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(u)}))}}setPrePassRenderer(u){return!1}dispose(u,R,I){const B=this.eu();if(B.stopAnimation(this),B.freeProcessedMaterials(),B.removeMaterial(this),this._eventInfo.forceDisposeTextures=R,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const u=this._parentContainer.materials.indexOf(this);u>-1&&this._parentContainer.materials.splice(u,1),this._parentContainer=null}if(!0!==I)if(this.meshMap)for(const U in this.meshMap){const u=this.meshMap[U];this._disposeMeshResources(u)}else{const u=B.meshes;for(const R of u)this._disposeMeshResources(R)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.uD.notifyObservers(this),this.uD.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(u){if(!u)return;const R=u.rD,I=u._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(u.DD&&I)for(const U of u.DD){const u=U._drawWrappers;for(let K=0;K<u.length;K++){var B;const C=null===(B=u[K])||void 0===B?void 0:B.effect;if(!C)continue;I[K]===this&&(null===R||void 0===R||R._releaseVertexArrayObject(C),U._removeDrawWrapper(K,!0,!0))}}}else null===R||void 0===R||R._releaseVertexArrayObject(this._drawWrapper.effect);u.material!==this||u.sourceMesh||(u.material=null)}serialize(){const u=r.e.Serialize(this);return u.RD=this.RD.serialize(),u.uniqueId=this.uniqueId,this._serializePlugins(u),u}_serializePlugins(u){if(u.plugins={},this.pluginManager)for(const R of this.pluginManager._plugins)R.doNotSerialize||(u.plugins[R.getClassName()]=R.serialize())}static Parse(u,R,I){if(u.customType){if("BABYLON.PBRMaterial"===u.customType&&u.overloadedAlbedo&&(u.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return G.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else u.customType="BABYLON.StandardMaterial";const B=K.Tools.Instantiate(u.customType).Parse(u,R,I);return B._loadedUniqueId=u.uniqueId,B}static _ParsePlugins(u,R,I,B){if(u.plugins)for(const D in u.plugins){var U,C;const s=u.plugins[D];let t=null===(U=R.pluginManager)||void 0===U?void 0:U.getPlugin(s.name);if(!t){const u=K.Tools.Instantiate("BABYLON."+D);u&&(t=new u(R))}null===(C=t)||void 0===C||C.parse(s,I,B)}}}E.TriangleFillMode=0,E.WireFrameFillMode=1,E.PointFillMode=2,E.PointListDrawMode=3,E.LineListDrawMode=4,E.LineLoopDrawMode=5,E.LineStripDrawMode=6,E.TriangleStripDrawMode=7,E.TriangleFanDrawMode=8,E.ClockWiseSideOrientation=0,E.CounterClockWiseSideOrientation=1,E.ImageProcessingDirtyFlag=64,E.TextureDirtyFlag=1,E.LightDirtyFlag=2,E.FresnelDirtyFlag=4,E.AttributesDirtyFlag=8,E.MiscDirtyFlag=16,E.PrePassDirtyFlag=32,E.AllDirtyFlag=127,E.MATERIAL_OPAQUE=0,E.MATERIAL_ALPHATEST=1,E.MATERIAL_ALPHABLEND=2,E.MATERIAL_ALPHATESTANDBLEND=3,E.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,E.MATERIAL_NORMALBLENDMETHOD_RNM=1,E.OnEventObservable=new C.c,E._AllDirtyCallBack=u=>u.markAllAsDirty(),E._ImageProcessingDirtyCallBack=u=>u.markAsImageProcessingDirty(),E._TextureDirtyCallBack=u=>u.markAsTexturesDirty(),E._FresnelDirtyCallBack=u=>u.markAsFresnelDirty(),E._MiscDirtyCallBack=u=>u.markAsMiscDirty(),E._PrePassDirtyCallBack=u=>u.markAsPrePassDirty(),E._LightsDirtyCallBack=u=>u.markAsLightDirty(),E._AttributeDirtyCallBack=u=>u.markAsAttributesDirty(),E._FresnelAndMiscDirtyCallBack=u=>{E._FresnelDirtyCallBack(u),E._MiscDirtyCallBack(u)},E._TextureAndMiscDirtyCallBack=u=>{E._TextureDirtyCallBack(u),E._MiscDirtyCallBack(u)},E._DirtyCallbackArray=[],E._RunDirtyCallBacks=u=>{for(const R of E._DirtyCallbackArray)R(u)},(0,B.c)([(0,U.S)()],E.prototype,"id",void 0),(0,B.c)([(0,U.S)()],E.prototype,"uniqueId",void 0),(0,B.c)([(0,U.S)()],E.prototype,"name",void 0),(0,B.c)([(0,U.S)()],E.prototype,"metadata",void 0),(0,B.c)([(0,U.S)()],E.prototype,"checkReadyOnEveryCall",void 0),(0,B.c)([(0,U.S)()],E.prototype,"checkReadyOnlyOnce",void 0),(0,B.c)([(0,U.S)()],E.prototype,"state",void 0),(0,B.c)([(0,U.S)("alpha")],E.prototype,"_alpha",void 0),(0,B.c)([(0,U.S)("XD")],E.prototype,"_backFaceCulling",void 0),(0,B.c)([(0,U.S)("cullBackFaces")],E.prototype,"_cullBackFaces",void 0),(0,B.c)([(0,U.S)()],E.prototype,"sideOrientation",void 0),(0,B.c)([(0,U.S)("alphaMode")],E.prototype,"_alphaMode",void 0),(0,B.c)([(0,U.S)()],E.prototype,"_needDepthPrePass",void 0),(0,B.c)([(0,U.S)()],E.prototype,"disableDepthWrite",void 0),(0,B.c)([(0,U.S)()],E.prototype,"disableColorWrite",void 0),(0,B.c)([(0,U.S)()],E.prototype,"forceDepthWrite",void 0),(0,B.c)([(0,U.S)()],E.prototype,"depthFunction",void 0),(0,B.c)([(0,U.S)()],E.prototype,"separateCullingPass",void 0),(0,B.c)([(0,U.S)("fogEnabled")],E.prototype,"_fogEnabled",void 0),(0,B.c)([(0,U.S)()],E.prototype,"pointSize",void 0),(0,B.c)([(0,U.S)()],E.prototype,"zOffset",void 0),(0,B.c)([(0,U.S)()],E.prototype,"zOffsetUnits",void 0),(0,B.c)([(0,U.S)()],E.prototype,"pointsCloud",null),(0,B.c)([(0,U.S)()],E.prototype,"fillMode",null),(0,B.c)([(0,U.S)()],E.prototype,"useLogarithmicDepth",null),(0,B.c)([(0,U.S)()],E.prototype,"transparencyMode",null)},12831:(u,R,I)=>{I.d(R,{C:()=>b,G:()=>g,I:()=>x,M:()=>j,P:()=>z,Q:()=>o,S:()=>v,W:()=>p,Z:()=>l,ab:()=>c,b:()=>Q,d:()=>S,db:()=>P,f:()=>q,j:()=>G,l:()=>X,n:()=>E,o:()=>f,q:()=>M,r:()=>T,s:()=>e,w:()=>Y,y:()=>r});var B=I(12315),U=I(12518),K=I(12346),C=I(12776),D=I(12840);const s=U.fR.Black(),t={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function G(u,R,I){if(!u||u.LOGARITHMICDEPTH||u.indexOf&&u.indexOf("LOGARITHMICDEPTH")>=0){const u=I.activeCamera;1===u.mode&&B.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),R.setFloat("logarithmicDepthConstant",2/(Math.log(u.maxZ+1)/Math.LN2))}}function S(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];I&&u.fogEnabled&&(!R||R.applyFog)&&0!==u.fogMode&&(I.setFloat4("vFogInfos",u.fogMode,u.fogStart,u.fogEnd,u.fogDensity),B?(u.fogColor.toLinearSpaceToRef(s,u.getEngine().useExactSrgbConversions),I.setColor3("vFogColor",s)):I.setColor3("vFogColor",u.fogColor))}function b(u,R,I,B,U,K,C,D,s,G){const S=u.numMaxInfluencers||u.numInfluencers;return S<=0?0:(R.push("#define MORPHTARGETS"),u.hasPositions&&R.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),u.hasNormals&&R.push("#define MORPHTARGETTEXTURE_HASNORMALS"),u.hasTangents&&R.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),u.hasUVs&&R.push("#define MORPHTARGETTEXTURE_HASUVS"),u.hasUV2s&&R.push("#define MORPHTARGETTEXTURE_HASUV2S"),u.hasColors&&R.push("#define MORPHTARGETTEXTURE_HASCOLORS"),u.supportsPositions&&U&&R.push("#define MORPHTARGETS_POSITION"),u.supportsNormals&&K&&R.push("#define MORPHTARGETS_NORMAL"),u.supportsTangents&&C&&R.push("#define MORPHTARGETS_TANGENT"),u.supportsUVs&&D&&R.push("#define MORPHTARGETS_UV"),u.supportsUV2s&&s&&R.push("#define MORPHTARGETS_UV2"),u.supportsColors&&G&&R.push("#define MORPHTARGETS_COLOR"),R.push("#define NUM_MORPH_INFLUENCERS "+S),u.isUsingTextureForTargets&&R.push("#define MORPHTARGETS_TEXTURE"),t.NUM_MORPH_INFLUENCERS=S,t.NORMAL=K,t.TANGENT=C,t.UV=D,t.UV2=s,t.COLOR=G,r(I,B,t,U),S)}function r(u,R,I){let U=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const C=I.NUM_MORPH_INFLUENCERS;if(C>0&&K.e.LastCreatedEngine){const D=K.e.LastCreatedEngine.getCaps().maxVertexAttribs,s=R.morphTargetManager;if(null!==s&&void 0!==s&&s.isUsingTextureForTargets)return;const t=s&&s.supportsPositions&&U,G=s&&s.supportsNormals&&I.NORMAL,S=s&&s.supportsTangents&&I.TANGENT,b=s&&s.supportsUVs&&I.UV1,r=s&&s.supportsUV2s&&I.UV2,P=s&&s.supportsColors&&I.VERTEXCOLOR;for(let I=0;I<C;I++)t&&u.push("position"+I),G&&u.push("normal"+I),S&&u.push("tangent"+I),b&&u.push("uv_"+I),r&&u.push("uv2_"+I),P&&u.push("color"+I),u.length>D&&B.b.Error("Cannot add more vertex attributes for mesh "+R.name)}}function P(u){let R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];u.push("world0"),u.push("world1"),u.push("world2"),u.push("world3"),R&&(u.push("previousWorld0"),u.push("previousWorld1"),u.push("previousWorld2"),u.push("previousWorld3"))}function X(u,R){const I=u.morphTargetManager;u&&I&&R.setFloatArray("morphTargetInfluences",I.influences)}function E(u,R){R.bindToEffect(u,"Scene")}function z(u,R,I){R._needUVs=!0,R[I]=!0,u.optimizeUVAllocation&&u.getTextureMatrix().isIdentityAs3x2()?(R[I+"DIRECTUV"]=u.coordinatesIndex+1,R["MAINUV"+(u.coordinatesIndex+1)]=!0):R[I+"DIRECTUV"]=0}function f(u,R,I){const B=u.getTextureMatrix();R.SD(I+"Matrix",B)}function T(u,R,I){I.BAKED_VERTEX_ANIMATION_TEXTURE&&I.INSTANCES&&u.push("bakedVertexAnimationSettingsInstanced")}function Q(u,R,I){var B;if(R&&u&&(u.computeBonesUsingShaders&&R._bonesComputationForcedToCPU&&(u.computeBonesUsingShaders=!1),u.useBones&&u.computeBonesUsingShaders&&u.skeleton)){const U=u.skeleton;if(U.isUsingTextureForMatrices&&R.getUniformIndex("boneTextureWidth")>-1){const I=U.getTransformMatrixTexture(u);R.setTexture("boneSampler",I),R.setFloat("boneTextureWidth",4*(U.bones.length+1))}else{const K=U.getTransformMatrices(u);K&&(R.setMatrices("mBones",K),I&&u.eu().prePassRenderer&&u.eu().prePassRenderer.getIndex(2)&&(I.previousBones[u.uniqueId]||(I.previousBones[u.uniqueId]=K.slice()),R.setMatrices("mPreviousBones",I.previousBones[u.uniqueId]),B=K,I.previousBones[u.uniqueId].set(B)))}}}function V(u,R,I,B,U){let K=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];u._bindLight(R,I,B,U,K)}function q(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const K=Math.min(R.lightSources.length,U);for(let C=0;C<K;C++){V(R.lightSources[C],C,u,I,"boolean"===typeof B?B:B.SPECULARTERM,R.receiveShadows)}}function e(u,R,I,B){I.NUM_BONE_INFLUENCERS>0&&(B.addCPUSkinningFallback(0,R),u.push("matricesIndices"),u.push("matricesWeights"),I.NUM_BONE_INFLUENCERS>4&&(u.push("matricesIndicesExtra"),u.push("matricesWeightsExtra")))}function Y(u,R){(R.INSTANCES||R.THIN_INSTANCES)&&P(u,!!R.PREPASS_VELOCITY),R.INSTANCESCOLOR&&u.push("instanceColor")}function M(u,R){let I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,U=0;for(let K=0;K<I&&u["LIGHT"+K];K++)K>0&&(U=B+K,R.addFallback(U,"LIGHT"+K)),u.SHADOWS||(u["SHADOW"+K]&&R.addFallback(B,"SHADOW"+K),u["SHADOWPCF"+K]&&R.addFallback(B,"SHADOWPCF"+K),u["SHADOWPCSS"+K]&&R.addFallback(B,"SHADOWPCSS"+K),u["SHADOWPOISSON"+K]&&R.addFallback(B,"SHADOWPOISSON"+K),u["SHADOWESM"+K]&&R.addFallback(B,"SHADOWESM"+K),u["SHADOWCLOSEESM"+K]&&R.addFallback(B,"SHADOWCLOSEESM"+K));return U++}function o(u,R,I,B,U,K,C){let D=arguments.length>7&&void 0!==arguments[7]&&arguments[7];C._areMiscDirty&&(C.LOGARITHMICDEPTH=I,C.POINTSIZE=B,C.FOG=U&&function(u,R){return R.fogEnabled&&u.applyFog&&0!==R.fogMode}(u,R),C.NONUNIFORMSCALING=u.nonUniformScaling,C.ALPHATEST=K,C.DECAL_AFTER_DETAIL=D)}function j(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!I._areLightsDirty)return I._needNormals;let C=0;const D={needNormals:I._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(u.lightsEnabled&&!K)for(const t of R.lightSources)if(h(u,R,t,C,I,B,D),C++,C===U)break;I.SPECULARTERM=D.specularEnabled,I.SHADOWS=D.shadowEnabled;for(let t=C;t<U;t++)void 0!==I["LIGHT"+t]&&(I["LIGHT"+t]=!1,I["HEMILIGHT"+t]=!1,I["POINTLIGHT"+t]=!1,I["DIRLIGHT"+t]=!1,I["SPOTLIGHT"+t]=!1,I["AREALIGHT"+t]=!1,I["SHADOW"+t]=!1,I["SHADOWCSM"+t]=!1,I["SHADOWCSMDEBUG"+t]=!1,I["SHADOWCSMNUM_CASCADES"+t]=!1,I["SHADOWCSMUSESHADOWMAXZ"+t]=!1,I["SHADOWCSMNOBLEND"+t]=!1,I["SHADOWCSM_RIGHTHANDED"+t]=!1,I["SHADOWPCF"+t]=!1,I["SHADOWPCSS"+t]=!1,I["SHADOWPOISSON"+t]=!1,I["SHADOWESM"+t]=!1,I["SHADOWCLOSEESM"+t]=!1,I["SHADOWCUBE"+t]=!1,I["SHADOWLOWQUALITY"+t]=!1,I["SHADOWMEDIUMQUALITY"+t]=!1);const s=u.getEngine().getCaps();return void 0===I.SHADOWFLOAT&&(D.needRebuild=!0),I.SHADOWFLOAT=D.shadowEnabled&&(s.textureFloatRender&&s.textureFloatLinearFiltering||s.textureHalfFloatRender&&s.textureHalfFloatLinearFiltering),I.LIGHTMAPEXCLUDED=D.lightmapMode,D.needRebuild&&I.rebuild(),D.needNormals}function h(u,R,I,B,U,K,D){switch(D.needNormals=!0,void 0===U["LIGHT"+B]&&(D.needRebuild=!0),U["LIGHT"+B]=!0,U["SPOTLIGHT"+B]=!1,U["HEMILIGHT"+B]=!1,U["POINTLIGHT"+B]=!1,U["DIRLIGHT"+B]=!1,U["AREALIGHT"+B]=!1,I.prepareLightSpecificDefines(U,B),U["LIGHT_FALLOFF_PHYSICAL"+B]=!1,U["LIGHT_FALLOFF_GLTF"+B]=!1,U["LIGHT_FALLOFF_STANDARD"+B]=!1,I.falloffType){case C.d.FALLOFF_GLTF:U["LIGHT_FALLOFF_GLTF"+B]=!0;break;case C.d.FALLOFF_PHYSICAL:U["LIGHT_FALLOFF_PHYSICAL"+B]=!0;break;case C.d.FALLOFF_STANDARD:U["LIGHT_FALLOFF_STANDARD"+B]=!0}if(K&&!I.rG.equalsFloats(0,0,0)&&(D.specularEnabled=!0),U["SHADOW"+B]=!1,U["SHADOWCSM"+B]=!1,U["SHADOWCSMDEBUG"+B]=!1,U["SHADOWCSMNUM_CASCADES"+B]=!1,U["SHADOWCSMUSESHADOWMAXZ"+B]=!1,U["SHADOWCSMNOBLEND"+B]=!1,U["SHADOWCSM_RIGHTHANDED"+B]=!1,U["SHADOWPCF"+B]=!1,U["SHADOWPCSS"+B]=!1,U["SHADOWPOISSON"+B]=!1,U["SHADOWESM"+B]=!1,U["SHADOWCLOSEESM"+B]=!1,U["SHADOWCUBE"+B]=!1,U["SHADOWLOWQUALITY"+B]=!1,U["SHADOWMEDIUMQUALITY"+B]=!1,R&&R.receiveShadows&&u.shadowsEnabled&&I.shadowEnabled){const R=I.getShadowGenerator(u.activeCamera)??I.getShadowGenerator();if(R){const u=R.getShadowMap();u&&u.renderList&&u.renderList.length>0&&(D.shadowEnabled=!0,R.prepareDefines(U,B))}}I.lightmapMode!=C.d.LIGHTMAP_DEFAULT?(D.lightmapMode=!0,U["LIGHTMAPEXCLUDED"+B]=!0,U["LIGHTMAPNOSPECULAR"+B]=I.lightmapMode==C.d.LIGHTMAP_SHADOWSONLY):(U["LIGHTMAPEXCLUDED"+B]=!1,U["LIGHTMAPNOSPECULAR"+B]=!1)}function x(u,R,I,B,U){let K=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,C=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=function(u,R){let I=!1;if(u.activeCamera){const B=R.CAMERA_ORTHOGRAPHIC?1:0,U=R.CAMERA_PERSPECTIVE?1:0,K=1===u.activeCamera.mode?1:0,C=0===u.activeCamera.mode?1:0;(B^K||U^C)&&(R.CAMERA_ORTHOGRAPHIC=1===K,R.CAMERA_PERSPECTIVE=1===C,I=!0)}return I}(u,B);!1!==K&&(s=(0,D.j)(I,u,B)),B.DEPTHPREPASS!==!R.getColorWrite()&&(B.DEPTHPREPASS=!B.DEPTHPREPASS,s=!0),B.INSTANCES!==U&&(B.INSTANCES=U,s=!0),B.THIN_INSTANCES!==C&&(B.THIN_INSTANCES=C,s=!0),s&&B.markAsUnprocessed()}function g(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4],K=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],C=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!R._areAttributesDirty&&R._needNormals===R._normals&&R._needUVs===R._uvs)return!1;R._normals=R._needNormals,R._uvs=R._needUVs,R.NORMAL=R._needNormals&&u.isVerticesDataPresent("normal"),R._needNormals&&u.isVerticesDataPresent("tangent")&&(R.TANGENT=!0);for(let D=1;D<=6;++D)R["UV"+D]=!!R._needUVs&&u.isVerticesDataPresent(`uv${1===D?"":D}`);if(I){const I=u.useVertexColors&&u.isVerticesDataPresent("color");R.VERTEXCOLOR=I,R.VERTEXALPHA=u.hasVertexAlpha&&I&&K}return u.isVerticesDataPresent("instanceColor")&&(u.hasInstances||u.hasThinInstances)&&(R.INSTANCESCOLOR=!0),B&&function(u,R){if(u.useBones&&u.computeBonesUsingShaders&&u.skeleton){R.NUM_BONE_INFLUENCERS=u.numBoneInfluencers;const I=void 0!==R.BONETEXTURE;if(u.skeleton.isUsingTextureForMatrices&&I)R.BONETEXTURE=!0;else{R.BonesPerMesh=u.skeleton.bones.length+1,R.BONETEXTURE=!I&&void 0;const B=u.eu().prePassRenderer;if(B&&B.enabled){const I=-1===B.excludedSkinnedMesh.indexOf(u);R.BONES_VELOCITY_ENABLED=I}}}else R.NUM_BONE_INFLUENCERS=0,R.BonesPerMesh=0,void 0!==R.BONETEXTURE&&(R.BONETEXTURE=!1)}(u,R),U&&function(u,R){const I=u.morphTargetManager;I?(R.MORPHTARGETS_UV=I.supportsUVs&&R.UV1,R.MORPHTARGETS_UV2=I.supportsUV2s&&R.UV2,R.MORPHTARGETS_TANGENT=I.supportsTangents&&R.TANGENT,R.MORPHTARGETS_NORMAL=I.supportsNormals&&R.NORMAL,R.MORPHTARGETS_POSITION=I.supportsPositions,R.MORPHTARGETS_COLOR=I.supportsColors,R.MORPHTARGETTEXTURE_HASUVS=I.hasUVs,R.MORPHTARGETTEXTURE_HASUV2S=I.hasUV2s,R.MORPHTARGETTEXTURE_HASTANGENTS=I.hasTangents,R.MORPHTARGETTEXTURE_HASNORMALS=I.hasNormals,R.MORPHTARGETTEXTURE_HASPOSITIONS=I.hasPositions,R.MORPHTARGETTEXTURE_HASCOLORS=I.hasColors,R.NUM_MORPH_INFLUENCERS=I.numMaxInfluencers||I.numInfluencers,R.MORPHTARGETS=R.NUM_MORPH_INFLUENCERS>0,R.MORPHTARGETS_TEXTURE=I.isUsingTextureForTargets):(R.MORPHTARGETS_UV=!1,R.MORPHTARGETS_UV2=!1,R.MORPHTARGETS_TANGENT=!1,R.MORPHTARGETS_NORMAL=!1,R.MORPHTARGETS_POSITION=!1,R.MORPHTARGETS_COLOR=!1,R.MORPHTARGETTEXTURE_HASUVS=!1,R.MORPHTARGETTEXTURE_HASUV2S=!1,R.MORPHTARGETTEXTURE_HASTANGENTS=!1,R.MORPHTARGETTEXTURE_HASNORMALS=!1,R.MORPHTARGETTEXTURE_HASPOSITIONS=!1,R.MORPHTARGETTEXTURE_HAS_COLORS=!1,R.MORPHTARGETS=!1,R.NUM_MORPH_INFLUENCERS=0)}(u,R),C&&function(u,R){const I=u.bakedVertexAnimationManager;R.BAKED_VERTEX_ANIMATION_TEXTURE=!(!I||!I.isEnabled)}(u,R),!0}function v(u,R){if(u.activeCamera){const I=R.MULTIVIEW;R.MULTIVIEW=null!==u.activeCamera.outputRenderTarget&&u.activeCamera.outputRenderTarget.getViewCount()>1,R.MULTIVIEW!=I&&R.markAsUnprocessed()}}function p(u,R,I){const B=R.ORDER_INDEPENDENT_TRANSPARENCY,U=R.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;R.ORDER_INDEPENDENT_TRANSPARENCY=u.useOrderIndependentTransparency&&I,R.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!u.getEngine().getCaps().textureFloatLinearFiltering,B===R.ORDER_INDEPENDENT_TRANSPARENCY&&U===R.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||R.markAsUnprocessed()}function l(u,R,I){const B=R.PREPASS;if(!R._arePrePassDirty)return;const U=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(u.prePassRenderer&&u.prePassRenderer.enabled&&I){R.PREPASS=!0,R.SCENE_MRT_COUNT=u.prePassRenderer.mrtCount,R.PREPASS_NORMAL_WORLDSPACE=u.prePassRenderer.generateNormalsInWorldSpace,R.PREPASS_COLOR=!0,R.PREPASS_COLOR_INDEX=0;for(let I=0;I<U.length;I++){const B=u.prePassRenderer.getIndex(U[I].type);-1!==B?(R[U[I].define]=!0,R[U[I].index]=B):R[U[I].define]=!1}}else{R.PREPASS=!1;for(let u=0;u<U.length;u++)R[U[u].define]=!1}R.PREPASS!=B&&(R.markAsUnprocessed(),R.markAsImageProcessingDirty())}function Z(u,R,I,B){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]&&arguments[6];U&&U.push("Light"+u),K||(R.push("vLightData"+u,"vLightDiffuse"+u,"vLightSpecular"+u,"vLightDirection"+u,"vLightWidth"+u,"vLightHeight"+u,"vLightFalloff"+u,"vLightGround"+u,"lightMatrix"+u,"shadowsInfo"+u,"depthValues"+u),I.push("shadowTexture"+u),I.push("depthTexture"+u),R.push("viewFrustumZ"+u,"cascadeBlendFactor"+u,"lightSizeUVCorrection"+u,"depthCorrection"+u,"penumbraDarkness"+u,"frustumLengths"+u),B&&(I.push("projectionLightTexture"+u),R.push("textureProjectionMatrix"+u)),C&&I.push("iesLightTexture"+u))}function c(u,R,I){let B,U,K=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(u.uniformsNames){const C=u;B=C.uniformsNames,U=C.uniformBuffersNames,R=C.samplers,I=C.defines,K=C.maxSimultaneousLights||0}else B=u,R||(R=[]);for(let C=0;C<K&&I["LIGHT"+C];C++)Z(C,B,R,I["PROJECTEDLIGHTTEXTURE"+C],U,!1,I["IESLIGHTTEXTURE"+C]);I.NUM_MORPH_INFLUENCERS&&(B.push("morphTargetInfluences"),B.push("morphTargetCount")),I.BAKED_VERTEX_ANIMATION_TEXTURE&&(B.push("bakedVertexAnimationSettings"),B.push("bakedVertexAnimationTextureSizeInverted"),B.push("bakedVertexAnimationTime"),R.push("bakedVertexAnimationTexture"))}},12787:(u,R,I)=>{I.d(R,{e:()=>K});var B=I(12481),U=I(12796);class K extends U.c{constructor(u,R){let I=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(u,R,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new B.Matrix,this._storeEffectOnSubMeshes=I}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(u,R){return!!u&&(!this._storeEffectOnSubMeshes||(!u.DD||0===u.DD.length||this.isReadyForSubMesh(u,u.DD[0],R)))}_isReadyForSubMesh(u){const R=u.materialDefines;return!(this.checkReadyOnEveryCall||!u.effect||!R||R._renderId!==this.eu().getRenderId())}bindOnlyWorldMatrix(u){this._activeEffect.setMatrix("world",u)}bindOnlyNormalMatrix(u){this._activeEffect.setMatrix("normalMatrix",u)}bind(u,R){R&&this.bindForSubMesh(u,R,R.DD[0])}_afterBind(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2?arguments[2]:void 0;super._afterBind(u,R,I),this.eu()._cachedEffect=R,I?I._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return I._drawWrapper._forceRebindOnNextCall||u.isCachedMaterialInvalid(this,R,B)}dispose(u,R,I){this._activeEffect=void 0,super.dispose(u,R,I)}}},12824:(u,R,I)=>{I.d(R,{e:()=>D,g:()=>s});var B=I(12466),U=I(12481),K=I(12472);class C{static extractMinAndMaxIndexed(u,R,I,B,U,K){for(let C=I;C<I+B;C++){const I=3*R[C],B=u[I],D=u[I+1],s=u[I+2];U.minimizeInPlaceFromFloats(B,D,s),K.maximizeInPlaceFromFloats(B,D,s)}}static extractMinAndMax(u,R,I,B,U,K){for(let C=R,D=R*B;C<R+I;C++,D+=B){const R=u[D],I=u[D+1],B=u[D+2];U.minimizeInPlaceFromFloats(R,I,B),K.maximizeInPlaceFromFloats(R,I,B)}}}function D(u,R,I,B){let K=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const D=new U.PR(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s=new U.PR(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return C.extractMinAndMaxIndexed(u,R,I,B,D,s),K&&(D.x-=D.x*K.x+K.y,D.y-=D.y*K.x+K.y,D.z-=D.z*K.x+K.y,s.x+=s.x*K.x+K.y,s.y+=s.y*K.x+K.y,s.z+=s.z*K.x+K.y),{minimum:D,maximum:s}}function s(u,R,I){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,K=arguments.length>4?arguments[4]:void 0;const D=new U.PR(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),s=new U.PR(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return K||(K=3),C.extractMinAndMax(u,R,I,K,D,s),B&&(D.x-=D.x*B.x+B.y,D.y-=D.y*B.x+B.y,D.z-=D.z*B.x+B.y,s.x+=s.x*B.x+B.y,s.y+=s.y*B.x+B.y,s.z+=s.z*B.x+B.y),{minimum:D,maximum:s}}(0,B.c)([K.i.filter((function(){for(var u=arguments.length,R=new Array(u),I=0;I<u;I++)R[I]=arguments[I];let[B,U]=R;return!Array.isArray(B)&&!Array.isArray(U)}))],C,"extractMinAndMaxIndexed",null),(0,B.c)([K.i.filter((function(){for(var u=arguments.length,R=new Array(u),I=0;I<u;I++)R[I]=arguments[I];let[B]=R;return!Array.isArray(B)}))],C,"extractMinAndMax",null)},12798:(u,R,I)=>{I.d(R,{b:()=>s});var B=I(12549),U=I(12805),K=I(12808),C=I(12824),D=I(12587);class s{get materialDefines(){var u;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(u=this._getDrawWrapper())||void 0===u?void 0:u.defines}set materialDefines(u){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=u}_getDrawWrapper(u){let R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];u=u??this._engine.currentRenderPassId;let I=this._drawWrappers[u];return!I&&R&&(this._drawWrappers[u]=I=new D.d(this._mesh.eu().getEngine())),I}_removeDrawWrapper(u){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var I;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(I=this._drawWrappers[u])||void 0===I||I.dispose(R));this._drawWrappers[u]=void 0}get effect(){var u;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(u=this._getDrawWrapper())||void 0===u?void 0:u.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(u){this._mainDrawWrapperOverride=u}setEffect(u){let R=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,I=arguments.length>2?arguments[2]:void 0,B=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const U=this._drawWrapper;U.setEffect(u,R,B),void 0!==I&&(U.materialContext=I),u||(U.defines=null,U.materialContext=void 0)}resetDrawCache(u){let R=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==u)return void this._removeDrawWrapper(u,!0,R);for(const u of this._drawWrappers)null===u||void 0===u||u.dispose(R)}this._drawWrappers=[]}static AddToMesh(u,R,I,B,U,K,C){return new s(u,R,I,B,U,K,C,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(u,R,I,B,U,K,C){let D=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],s=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=u,this.verticesStart=R,this.verticesCount=I,this.indexStart=B,this.indexCount=U,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=K,this._renderingMesh=C||K,s&&K.DD.push(this),this._engine=this._mesh.eu().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=K.DD.length-1,D&&(this.refreshBoundingInfo(),K.bD(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(u){return this._boundingInfo=u,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const u=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return u||this._renderingMesh}cu(){let u=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const R=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!R)return u&&this._mesh.eu()._hasDefaultMaterial?this._mesh.eu().defaultMaterial:null;if(this._isMultiMaterial(R)){const u=R.getSubMaterial(this.materialIndex);return this._currentMaterial!==u&&(this._currentMaterial=u,this.resetDrawCache()),u}return R}_isMultiMaterial(u){return void 0!==u.getSubMaterial}refreshBoundingInfo(){let u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.rD)return this;if(u||(u=this._renderingMesh.getVerticesData(B.i.PositionKind)),!u)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const R=this._renderingMesh.PD();let I;if(0===this.indexStart&&this.indexCount===R.length){const u=this._renderingMesh.getBoundingInfo();I={minimum:u.minimum.clone(),maximum:u.maximum.clone()}}else I=(0,C.e)(u,R,this.indexStart,this.indexCount,this._renderingMesh.rD.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(I.minimum,I.maximum):this._boundingInfo=new K.c(I.minimum,I.maximum),this}_checkCollision(u){return this.getBoundingInfo()._checkCollision(u)}updateBoundingInfo(u){let R=this.getBoundingInfo();return R||(this.refreshBoundingInfo(),R=this.getBoundingInfo()),R&&R.update(u),this}isInFrustum(u){const R=this.getBoundingInfo();return!!R&&R.isInFrustum(u,this._mesh.PS)}isCompletelyInFrustum(u){const R=this.getBoundingInfo();return!!R&&R.isCompletelyInFrustum(u)}render(u){return this._renderingMesh.render(this,u,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(u,R){if(!this._linesIndexBuffer){const I=6*Math.floor(this.indexCount/3),B=this.verticesStart+this.verticesCount>65535?new Uint32Array(I):new Uint16Array(I);let U=0;if(0===u.length)for(let u=this.indexStart;u<this.indexStart+this.indexCount;u+=3)B[U++]=u,B[U++]=u+1,B[U++]=u+1,B[U++]=u+2,B[U++]=u+2,B[U++]=u;else for(let R=this.indexStart;R<this.indexStart+this.indexCount;R+=3)B[U++]=u[R],B[U++]=u[R+1],B[U++]=u[R+1],B[U++]=u[R+2],B[U++]=u[R+2],B[U++]=u[R];this._linesIndexBuffer=R.createIndexBuffer(B),this._linesIndexCount=B.length}return this._linesIndexBuffer}canIntersects(u){const R=this.getBoundingInfo();return!!R&&u.intersectsBox(R.boundingBox)}intersects(u,R,I,B,U){const K=this.cu();if(!K)return null;let C=3,D=!1;switch(K.fillMode){case 3:case 5:case 6:case 8:return null;case 7:C=1,D=!0}return 4===K.fillMode?I.length?this._intersectLines(u,R,I,this._mesh.intersectionThreshold,B):this._intersectUnIndexedLines(u,R,I,this._mesh.intersectionThreshold,B):!I.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(u,R,I,B,U):this._intersectTriangles(u,R,I,C,D,B,U)}_intersectLines(u,R,I,B,K){let C=null;for(let D=this.indexStart;D<this.indexStart+this.indexCount;D+=2){const s=R[I[D]],t=R[I[D+1]],G=u.intersectionSegment(s,t,B);if(!(G<0)&&((K||!C||G<C.distance)&&(C=new U.b(null,null,G),C.faceId=D/2,K)))break}return C}_intersectUnIndexedLines(u,R,I,B,K){let C=null;for(let D=this.verticesStart;D<this.verticesStart+this.verticesCount;D+=2){const I=R[D],s=R[D+1],t=u.intersectionSegment(I,s,B);if(!(t<0)&&((K||!C||t<C.distance)&&(C=new U.b(null,null,t),C.faceId=D/2,K)))break}return C}_intersectTriangles(u,R,I,B,U,K,C){let D=null,s=-1;for(let t=this.indexStart;t<this.indexStart+this.indexCount-(3-B);t+=B){s++;const B=I[t],G=I[t+1],S=I[t+2];if(U&&4294967295===S){t+=2;continue}const b=R[B],r=R[G],P=R[S];if(!b||!r||!P)continue;if(C&&!C(b,r,P,u,B,G,S))continue;const X=u.intersectsTriangle(b,r,P);if(X){if(X.distance<0)continue;if((K||!D||X.distance<D.distance)&&(D=X,D.faceId=s,K))break}}return D}_intersectUnIndexedTriangles(u,R,I,B,U){let K=null;for(let C=this.verticesStart;C<this.verticesStart+this.verticesCount;C+=3){const I=R[C],D=R[C+1],s=R[C+2];if(U&&!U(I,D,s,u,-1,-1,-1))continue;const t=u.intersectsTriangle(I,D,s);if(t){if(t.distance<0)continue;if((B||!K||t.distance<K.distance)&&(K=t,K.faceId=C/3,B))break}}return K}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(u,R){const I=new s(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,u,R,!1);if(!this.IsGlobal){const u=this.getBoundingInfo();if(!u)return I;I._boundingInfo=new K.c(u.minimum,u.maximum)}return I}dispose(){let u=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.eu().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const R=this._mesh.DD.indexOf(this);this._mesh.DD.splice(R,1),this.resetDrawCache(void 0,u)}getClassName(){return"SubMesh"}static CreateFromIndices(u,R,I,B,U){let K=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],C=Number.MAX_VALUE,D=-Number.MAX_VALUE;const t=(U||B).PD();for(let s=R;s<R+I;s++){const u=t[s];u<C&&(C=u),u>D&&(D=u)}return new s(u,C,D-C+1,R,I,B,U,K)}}}}]);