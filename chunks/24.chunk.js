"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[24],{13023:(K,A,T)=>{T.d(A,{b:()=>G});class G{constructor(K,A,T){this.bu=K,this.bv=A,this.distance=T,this.faceId=0,this.subMeshId=0}}},13030:(K,A,T)=>{T.d(A,{e:()=>f});var G=T(12714),B=T(12700),L=T(12706);class f{constructor(K,A,T){this.vectors=(0,G.b)(8,B.PA.Zero),this.center=B.PA.Zero(),this.centerWorld=B.PA.Zero(),this.extendSize=B.PA.Zero(),this.extendSizeWorld=B.PA.Zero(),this.directions=(0,G.b)(3,B.PA.Zero),this.vectorsWorld=(0,G.b)(8,B.PA.Zero),this.minimumWorld=B.PA.Zero(),this.maximumWorld=B.PA.Zero(),this.minimum=B.PA.Zero(),this.maximum=B.PA.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(K,A,T)}reConstruct(K,A,T){const G=K.x,L=K.y,f=K.z,O=A.x,C=A.y,Q=A.z,Y=this.vectors;this.minimum.RO(G,L,f),this.maximum.RO(O,C,Q),Y[0].RO(G,L,f),Y[1].RO(O,C,Q),Y[2].RO(O,L,f),Y[3].RO(G,C,f),Y[4].RO(G,L,Q),Y[5].RO(O,C,f),Y[6].RO(G,C,Q),Y[7].RO(O,L,Q),A.addToRef(K,this.center).scaleInPlace(.5),A.subtractToRef(K,this.extendSize).scaleInPlace(.5),this._worldMatrix=T||B.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(K){const A=f._TmpVector3,T=this.maximum.subtractToRef(this.minimum,A[0]),G=T.length();T.normalizeFromLength(G);const B=G*K,L=T.scaleInPlace(.5*B),O=this.center.subtractToRef(L,A[1]),C=this.center.addToRef(L,A[2]);return this.reConstruct(O,C,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(K){const A=this.minimumWorld,T=this.maximumWorld,G=this.directions,L=this.vectorsWorld,f=this.vectors;if(K.isIdentity()){A.G(this.minimum),T.G(this.maximum);for(let K=0;K<8;++K)L[K].G(f[K]);this.extendSizeWorld.G(this.extendSize),this.centerWorld.G(this.center)}else{A.IO(Number.MAX_VALUE),T.IO(-Number.MAX_VALUE);for(let G=0;G<8;++G){const O=L[G];B.PA.TransformCoordinatesToRef(f[G],K,O),A.minimizeInPlace(O),T.maximizeInPlace(O)}T.subtractToRef(A,this.extendSizeWorld).scaleInPlace(.5),T.addToRef(A,this.centerWorld).scaleInPlace(.5)}B.PA.FromArrayToRef(K.m,0,G[0]),B.PA.FromArrayToRef(K.m,4,G[1]),B.PA.FromArrayToRef(K.m,8,G[2]),this._worldMatrix=K}isInFrustum(K){return f.IsInFrustum(this.vectorsWorld,K)}isCompletelyInFrustum(K){return f.IsCompletelyInFrustum(this.vectorsWorld,K)}intersectsPoint(K){const A=this.minimumWorld,T=this.maximumWorld,G=A.x,B=A.y,f=A.z,O=T.x,C=T.y,Q=T.z,Y=K.x,Z=K.y,x=K.z,J=-L.c;return!(O-Y<J||J>Y-G)&&(!(C-Z<J||J>Z-B)&&!(Q-x<J||J>x-f))}intersectsSphere(K){return f.IntersectsSphere(this.minimumWorld,this.maximumWorld,K.centerWorld,K.radiusWorld)}intersectsMinMax(K,A){const T=this.minimumWorld,G=this.maximumWorld,B=T.x,L=T.y,f=T.z,O=G.x,C=G.y,Q=G.z,Y=K.x,Z=K.y,x=K.z,J=A.x,b=A.y,P=A.z;return!(O<Y||B>J)&&(!(C<Z||L>b)&&!(Q<x||f>P))}dispose(){var K,A;null===(K=this._drawWrapperFront)||void 0===K||K.dispose(),null===(A=this._drawWrapperBack)||void 0===A||A.dispose()}static Intersects(K,A){return K.intersectsMinMax(A.minimumWorld,A.maximumWorld)}static IntersectsSphere(K,A,T,G){const L=f._TmpVector3[0];B.PA.ClampToRef(T,K,A,L);return B.PA.DistanceSquared(T,L)<=G*G}static IsCompletelyInFrustum(K,A){for(let T=0;T<6;++T){const G=A[T];for(let A=0;A<8;++A)if(G.dotCoordinate(K[A])<0)return!1}return!0}static IsInFrustum(K,A){for(let T=0;T<6;++T){let G=!0;const B=A[T];for(let A=0;A<8;++A)if(B.dotCoordinate(K[A])>=0){G=!1;break}if(G)return!1}return!0}}f._TmpVector3=(0,G.b)(3,B.PA.Zero)},13027:(K,A,T)=>{T.d(A,{e:()=>Z});var G=T(12714),B=T(12700),L=T(13030),f=T(13039);const O={min:0,max:0},C={min:0,max:0},Q=(K,A,T)=>{const G=B.PA.Dot(A.centerWorld,K),L=Math.abs(B.PA.Dot(A.directions[0],K))*A.extendSize.x+Math.abs(B.PA.Dot(A.directions[1],K))*A.extendSize.y+Math.abs(B.PA.Dot(A.directions[2],K))*A.extendSize.z;T.min=G-L,T.max=G+L},Y=(K,A,T)=>(Q(K,A,O),Q(K,T,C),!(O.min>C.max||C.min>O.max));class Z{constructor(K,A,T){this._isLocked=!1,this.boundingBox=new L.e(K,A,T),this.boundingSphere=new f.b(K,A,T)}reConstruct(K,A,T){this.boundingBox.reConstruct(K,A,T),this.boundingSphere.reConstruct(K,A,T)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(K){this._isLocked=K}update(K){this._isLocked||(this.boundingBox._update(K),this.boundingSphere._update(K))}centerOn(K,A){const T=Z._TmpVector3[0].G(K).DZ(A),G=Z._TmpVector3[1].G(K).addInPlace(A);return this.boundingBox.reConstruct(T,G,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(T,G,this.boundingBox.getWorldMatrix()),this}encapsulate(K){const A=B.PA.Minimize(this.minimum,K),T=B.PA.Maximize(this.maximum,K);return this.reConstruct(A,T,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(K){const A=B.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(A);const T=B.TmpVectors.PA[0];return B.PA.TransformCoordinatesToRef(K.boundingBox.minimumWorld,A,T),this.encapsulate(T),B.PA.TransformCoordinatesToRef(K.boundingBox.maximumWorld,A,T),this.encapsulate(T),this}scale(K){return this.boundingBox.scale(K),this.boundingSphere.scale(K),this}isInFrustum(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===A||3===A)&&this.boundingSphere.isCenterInFrustum(K))return!0;if(!this.boundingSphere.isInFrustum(K))return!1;return!(1!==A&&3!==A)||this.boundingBox.isInFrustum(K)}get diagonalLength(){const K=this.boundingBox;return K.maximumWorld.subtractToRef(K.minimumWorld,Z._TmpVector3[0]).length()}isCompletelyInFrustum(K){return this.boundingBox.isCompletelyInFrustum(K)}_checkCollision(K){return K._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(K){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(K)&&!!this.boundingBox.intersectsPoint(K))}intersects(K,A){if(!f.b.Intersects(this.boundingSphere,K.boundingSphere))return!1;if(!L.e.Intersects(this.boundingBox,K.boundingBox))return!1;if(!A)return!0;const T=this.boundingBox,G=K.boundingBox;return!!Y(T.directions[0],T,G)&&(!!Y(T.directions[1],T,G)&&(!!Y(T.directions[2],T,G)&&(!!Y(G.directions[0],T,G)&&(!!Y(G.directions[1],T,G)&&(!!Y(G.directions[2],T,G)&&(!!Y(B.PA.Cross(T.directions[0],G.directions[0]),T,G)&&(!!Y(B.PA.Cross(T.directions[0],G.directions[1]),T,G)&&(!!Y(B.PA.Cross(T.directions[0],G.directions[2]),T,G)&&(!!Y(B.PA.Cross(T.directions[1],G.directions[0]),T,G)&&(!!Y(B.PA.Cross(T.directions[1],G.directions[1]),T,G)&&(!!Y(B.PA.Cross(T.directions[1],G.directions[2]),T,G)&&(!!Y(B.PA.Cross(T.directions[2],G.directions[0]),T,G)&&(!!Y(B.PA.Cross(T.directions[2],G.directions[1]),T,G)&&!!Y(B.PA.Cross(T.directions[2],G.directions[2]),T,G))))))))))))))}}Z._TmpVector3=(0,G.b)(2,B.PA.Zero)},13039:(K,A,T)=>{T.d(A,{b:()=>L});var G=T(12714),B=T(12700);class L{constructor(K,A,T){this.center=B.PA.Zero(),this.centerWorld=B.PA.Zero(),this.minimum=B.PA.Zero(),this.maximum=B.PA.Zero(),this.reConstruct(K,A,T)}reConstruct(K,A,T){this.minimum.G(K),this.maximum.G(A);const G=B.PA.Distance(K,A);A.addToRef(K,this.center).scaleInPlace(.5),this.radius=.5*G,this._update(T||B.Matrix.IdentityReadOnly)}scale(K){const A=this.radius*K,T=L._TmpVector3,G=T[0].IO(A),B=this.center.subtractToRef(G,T[1]),f=this.center.addToRef(G,T[2]);return this.reConstruct(B,f,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(K){if(K.isIdentity())this.centerWorld.G(this.center),this.radiusWorld=this.radius;else{B.PA.TransformCoordinatesToRef(this.center,K,this.centerWorld);const A=L._TmpVector3[0];B.PA.TransformNormalFromFloatsToRef(1,1,1,K,A),this.radiusWorld=Math.max(Math.abs(A.x),Math.abs(A.y),Math.abs(A.z))*this.radius}}isInFrustum(K){const A=this.centerWorld,T=this.radiusWorld;for(let G=0;G<6;G++)if(K[G].dotCoordinate(A)<=-T)return!1;return!0}isCenterInFrustum(K){const A=this.centerWorld;for(let T=0;T<6;T++)if(K[T].dotCoordinate(A)<0)return!1;return!0}intersectsPoint(K){const A=B.PA.DistanceSquared(this.centerWorld,K);return!(this.radiusWorld*this.radiusWorld<A)}static Intersects(K,A){const T=B.PA.DistanceSquared(K.centerWorld,A.centerWorld),G=K.radiusWorld+A.radiusWorld;return!(G*G<T)}static CreateFromCenterAndRadius(K,A,T){this._TmpVector3[0].G(K),this._TmpVector3[1].RO(0,0,A),this._TmpVector3[2].G(K),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].DZ(this._TmpVector3[1]);const G=new L(this._TmpVector3[0],this._TmpVector3[2]);return G._worldMatrix=T||B.Matrix.Identity(),G}}L._TmpVector3=(0,G.b)(3,B.PA.Zero)},13063:(K,A,T)=>{function G(K){-1===K.indexOf("vClipPlane")&&K.push("vClipPlane"),-1===K.indexOf("vClipPlane2")&&K.push("vClipPlane2"),-1===K.indexOf("vClipPlane3")&&K.push("vClipPlane3"),-1===K.indexOf("vClipPlane4")&&K.push("vClipPlane4"),-1===K.indexOf("vClipPlane5")&&K.push("vClipPlane5"),-1===K.indexOf("vClipPlane6")&&K.push("vClipPlane6")}function B(K,A,T){const G=!!(K.clipPlane??A.clipPlane),B=!!(K.clipPlane2??A.clipPlane2),L=!!(K.clipPlane3??A.clipPlane3),f=!!(K.clipPlane4??A.clipPlane4),O=!!(K.clipPlane5??A.clipPlane5),C=!!(K.clipPlane6??A.clipPlane6);G&&T.push("#define CLIPPLANE"),B&&T.push("#define CLIPPLANE2"),L&&T.push("#define CLIPPLANE3"),f&&T.push("#define CLIPPLANE4"),O&&T.push("#define CLIPPLANE5"),C&&T.push("#define CLIPPLANE6")}function L(K,A,T){let G=!1;const B=!!(K.clipPlane??A.clipPlane),L=!!(K.clipPlane2??A.clipPlane2),f=!!(K.clipPlane3??A.clipPlane3),O=!!(K.clipPlane4??A.clipPlane4),C=!!(K.clipPlane5??A.clipPlane5),Q=!!(K.clipPlane6??A.clipPlane6);return T.CLIPPLANE!==B&&(T.CLIPPLANE=B,G=!0),T.CLIPPLANE2!==L&&(T.CLIPPLANE2=L,G=!0),T.CLIPPLANE3!==f&&(T.CLIPPLANE3=f,G=!0),T.CLIPPLANE4!==O&&(T.CLIPPLANE4=O,G=!0),T.CLIPPLANE5!==C&&(T.CLIPPLANE5=C,G=!0),T.CLIPPLANE6!==Q&&(T.CLIPPLANE6=Q,G=!0),G}function f(K,A,T){let G=A.clipPlane??T.clipPlane;O(K,"vClipPlane",G),G=A.clipPlane2??T.clipPlane2,O(K,"vClipPlane2",G),G=A.clipPlane3??T.clipPlane3,O(K,"vClipPlane3",G),G=A.clipPlane4??T.clipPlane4,O(K,"vClipPlane4",G),G=A.clipPlane5??T.clipPlane5,O(K,"vClipPlane5",G),G=A.clipPlane6??T.clipPlane6,O(K,"vClipPlane6",G)}function O(K,A,T){T&&K.setFloat4(A,T.normal.x,T.normal.y,T.normal.z,T.d)}T.d(A,{e:()=>G,g:()=>f,k:()=>L,o:()=>B})},13009:(K,A,T)=>{T.d(A,{d:()=>G});class G{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(K,A){this._defines[K]||(K<this._currentRank&&(this._currentRank=K),K>this._maxRank&&(this._maxRank=K),this._defines[K]=new Array),this._defines[K].push(A)}addCPUSkinningFallback(K,A){this._mesh=A,K<this._currentRank&&(this._currentRank=K),K>this._maxRank&&(this._maxRank=K)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(K,A){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,K=K.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),A._bonesComputationForcedToCPU=!0;const T=this._mesh.SK();for(let K=0;K<T.meshes.length;K++){const G=T.meshes[K];if(G.material){if(G.computeBonesUsingShaders&&0!==G.numBoneInfluencers)if(G.material.getEffect()===A)G.computeBonesUsingShaders=!1;else if(G.hf)for(const K of G.hf){if(K.effect===A){G.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&G.computeBonesUsingShaders&&G.numBoneInfluencers>0&&(G.computeBonesUsingShaders=!1)}}else{const A=this._defines[this._currentRank];if(A)for(let T=0;T<A.length;T++)K=K.replace("#define "+A[T],"");this._currentRank++}return K}}},13016:(K,A,T)=>{T.d(A,{e:()=>F});var G=T(12683),B=T(12688),L=T(12526),f=T(12534),O=T(12565),C=T(13018),Q=T(12958),Y=T(12548),Z=T(12747),x=T(12812),J=T(12733);class b{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(K){this._func=K}get funcRef(){return this._funcRef}set funcRef(K){this._funcRef=K}get funcMask(){return this._funcMask}set funcMask(K){this._funcMask=K}get opStencilFail(){return this._opStencilFail}set opStencilFail(K){this._opStencilFail=K}get opDepthFail(){return this._opDepthFail}set opDepthFail(K){this._opDepthFail=K}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(K){this._opStencilDepthPass=K}get mask(){return this._mask}set mask(K){this._mask=K}get enabled(){return this._enabled}set enabled(K){this._enabled=K}getClassName(){return"MaterialStencilState"}copyTo(K){J.c.Clone((()=>K),this)}serialize(){return J.c.Serialize(this)}parse(K,A,T){J.c.Parse((()=>this),K,A,T)}}(0,G.c)([(0,B.B)()],b.prototype,"func",null),(0,G.c)([(0,B.B)()],b.prototype,"funcRef",null),(0,G.c)([(0,B.B)()],b.prototype,"funcMask",null),(0,G.c)([(0,B.B)()],b.prototype,"opStencilFail",null),(0,G.c)([(0,B.B)()],b.prototype,"opDepthFail",null),(0,G.c)([(0,B.B)()],b.prototype,"opStencilDepthPass",null),(0,G.c)([(0,B.B)()],b.prototype,"mask",null),(0,G.c)([(0,B.B)()],b.prototype,"enabled",null);var P=T(13056);class F{get _supportGlowLayer(){return!1}set _glowModeEnabled(K){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(K){if(this._alpha===K)return;const A=this._alpha;this._alpha=K,1!==A&&1!==K||this.fY(F.MiscDirtyFlag+F.PrePassDirtyFlag)}get alpha(){return this._alpha}set tf(K){this._backFaceCulling!==K&&(this._backFaceCulling=K,this.fY(F.TextureDirtyFlag))}get tf(){return this._backFaceCulling}set cullBackFaces(K){this._cullBackFaces!==K&&(this._cullBackFaces=K,this.fY(F.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(K){this._blockDirtyMechanism!==K&&(this._blockDirtyMechanism=K,K||this.Cx())}atomicMaterialsUpdate(K){this.blockDirtyMechanism=!0;try{K(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(K){this._onDisposeObserver&&this.Ff.remove(this._onDisposeObserver),this._onDisposeObserver=this.Ff.add(K)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new f.e),this._onBindObservable}set onBind(K){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(K)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new f.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new f.e),this._onEffectCreatedObservable}set alphaMode(K){this._alphaMode!==K&&(this._alphaMode=K,this.fY(F.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(K){this._needDepthPrePass!==K&&(this._needDepthPrePass=K,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(K){this._fogEnabled!==K&&(this._fogEnabled=K,this.fY(F.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case F.WireFrameFillMode:case F.LineListDrawMode:case F.LineLoopDrawMode:case F.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(K){this.fillMode=K?F.WireFrameFillMode:F.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case F.PointFillMode:case F.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(K){this.fillMode=K?F.PointFillMode:F.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(K){this._fillMode!==K&&(this._fillMode=K,this.fY(F.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(K){const A=this.SK().getEngine().getCaps().fragmentDepthSupported;K&&!A&&Y.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=K&&A,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(K){this._drawWrapper=K}constructor(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Ff=new f.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.df=new b,this._useUBO=!1,this._fillMode=F.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=K;const B=A||O.b.LastCreatedScene;B&&(this._scene=B,this._dirtyCallbacks={},this._forceGLSL=G,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=K||L.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new x.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new Q.e(this._scene.getEngine(),void 0,void 0,K),this._useUBO=this.SK().getEngine().supportsUniformBuffers,this._createUniformBuffer(),T||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),F.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var K;const A=this.SK().getEngine();null===(K=this._uniformBuffer)||void 0===K||K.dispose(),A.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new Q.e(A,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new Q.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(K){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.Cx(),this.checkReadyOnlyOnce=!0}unfreeze(){this.Cx(),this.checkReadyOnlyOnce=!1}isReady(K,A){return!0}isReadyForSubMesh(K,A,T){const G=A.materialDefines;return!!G&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=G,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}SK(){return this._scene}_getEffectiveOrientation(K){return null!==this.sideOrientation?this.sideOrientation:K.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(K){this._transparencyMode!==K&&(this._transparencyMode=K,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===F.MATERIAL_ALPHABLEND||this._transparencyMode===F.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===F.MATERIAL_ALPHATEST||this._transparencyMode===F.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===F.MATERIAL_OPAQUE||this._transparencyMode===F.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(K){return this._hasTransparencyMode?this._transparencyModeIsBlend:K.visibility<1||!this._disableAlphaBlending&&(K.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(K){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(K)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}Cx(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const A=this.SK().meshes;for(const T of A)if(T.hf)for(const A of T.hf)if(A.jK()===this)for(const T of A._drawWrappers)T&&this._materialContext===T.materialContext&&(T._wasPreviouslyReady=!1,T._wasPreviouslyUsingInstances=null,T._forceRebindOnNextCall=K);K&&this.fY(F.AllDirtyFlag)}_preBind(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const T=this._scene.getEngine(),G=(null==A?this.sideOrientation:A)===F.ClockWiseSideOrientation;return T.enableEffect(K||this._getDrawWrapper()),T.setState(this.tf,this.zOffset,!1,G,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.df,this.zOffsetUnits),G}bind(K,A){}buildUniformLayout(){const K=this._uniformBuffer;this._eventInfo.ubo=K,this._callbackPluginEventGeneric(8,this._eventInfo),K.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(K,A,T){const G=T._drawWrapper;this._eventInfo.subMesh=T,this._callbackPluginEventBindForSubMesh(this._eventInfo),G._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(K){}bindView(K){this._useUBO?this._needToBindSceneUbo=!0:K.setMatrix("view",this.SK().getViewMatrix())}bindViewProjection(K){this._useUBO?this._needToBindSceneUbo=!0:(K.setMatrix("viewProjection",this.SK().getTransformMatrix()),K.setMatrix("projection",this.SK().getProjectionMatrix()))}bindEyePosition(K,A){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(K,A)}_afterBind(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&A&&(this._needToBindSceneUbo=!1,(0,P.s)(A,this.SK().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=K?K.visibility:1,this._onBindObservable&&K&&this._onBindObservable.notifyObservers(K),this.disableDepthWrite){const K=this._scene.getEngine();this._cachedDepthWriteState=K.getDepthWrite(),K.setDepthWrite(!1)}if(this.disableColorWrite){const K=this._scene.getEngine();this._cachedColorWriteState=K.getColorWrite(),K.setColorWrite(!1)}if(0!==this.depthFunction){const K=this._scene.getEngine();this._cachedDepthFunctionState=K.getDepthFunction()||0,K.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(K){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=K,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(K){return null}_clonePlugins(K,A){const T={};if(this._serializePlugins(T),F._ParsePlugins(T,K,this._scene,A),this.pluginManager)for(const G of this.pluginManager._plugins){const A=K.pluginManager.getPlugin(G.name);A&&G.copyTo(A)}}getBindedMeshes(){if(this.meshMap){const K=[];for(const A in this.meshMap){const T=this.meshMap[A];T&&K.push(T)}return K}return this._scene.meshes.filter((K=>K.material===this))}forceCompilation(K,A,T,G){const B={clipPlane:!1,useInstances:!1,...T},L=this.SK(),f=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const O=()=>{if(!this._scene||!this._scene.getEngine())return;const T=L.clipPlane;if(B.clipPlane&&(L.clipPlane=new Z.e(0,0,0,1)),this._storeEffectOnSubMeshes){let T=!0,L=null;if(K.hf){const A=new C.c(0,0,0,0,0,K,void 0,!1,!1);A.materialDefines&&(A.materialDefines._renderId=-1),this.isReadyForSubMesh(K,A,B.useInstances)||(A.effect&&A.effect.getCompilationError()&&A.effect.allFallbacksProcessed()?L=A.effect.getCompilationError():(T=!1,setTimeout(O,16)))}T&&(this.allowShaderHotSwapping=f,L&&G&&G(L),A&&A(this))}else this.isReady()?(this.allowShaderHotSwapping=f,A&&A(this)):setTimeout(O,16);B.clipPlane&&(L.clipPlane=T)};O()}async forceCompilationAsync(K,A){return await new Promise(((T,G)=>{this.forceCompilation(K,(()=>{T()}),A,(K=>{G(K)}))}))}fY(K){this.SK().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(F._DirtyCallbackArray.length=0,K&F.ImageProcessingDirtyFlag&&F._DirtyCallbackArray.push(F._ImageProcessingDirtyCallBack),K&F.TextureDirtyFlag&&F._DirtyCallbackArray.push(F._TextureDirtyCallBack),K&F.LightDirtyFlag&&F._DirtyCallbackArray.push(F._LightsDirtyCallBack),K&F.FresnelDirtyFlag&&F._DirtyCallbackArray.push(F._FresnelDirtyCallBack),K&F.AttributesDirtyFlag&&F._DirtyCallbackArray.push(F._AttributeDirtyCallBack),K&F.MiscDirtyFlag&&F._DirtyCallbackArray.push(F._MiscDirtyCallBack),K&F.PrePassDirtyFlag&&F._DirtyCallbackArray.push(F._PrePassDirtyCallBack),F._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(F._RunDirtyCallBacks),this.SK().resetCachedMaterial())}resetDrawCache(){const K=this.SK().meshes;for(const A of K)if(A.hf)for(const K of A.hf)K.jK()===this&&K.resetDrawCache()}_markAllSubMeshesAsDirty(K){const A=this.SK();if(A.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const T=A.meshes;for(const G of T)if(G.hf)for(const T of G.hf){if((T.jK()||(A._hasDefaultMaterial?A.defaultMaterial:null))===this)for(const A of T._drawWrappers)A&&A.defines&&A.defines.markAllAsDirty&&this._materialContext===A.materialContext&&K(A.defines)}}_markScenePrePassDirty(){if(this.SK().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const K=this.SK().enablePrePassRenderer();K&&K.fY()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(F._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(F._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(F._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(F._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(F._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(F._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(F._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(F._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(F._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(F._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const K=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Ff.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(K)}))}}setPrePassRenderer(K){return!1}dispose(K,A,T){const G=this.SK();if(G.stopAnimation(this),G.freeProcessedMaterials(),G.removeMaterial(this),this._eventInfo.forceDisposeTextures=A,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const K=this._parentContainer.materials.indexOf(this);K>-1&&this._parentContainer.materials.splice(K,1),this._parentContainer=null}if(!0!==T)if(this.meshMap)for(const B in this.meshMap){const K=this.meshMap[B];this._disposeMeshResources(K)}else{const K=G.meshes;for(const A of K)this._disposeMeshResources(A)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Ff.notifyObservers(this),this.Ff.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(K){if(!K)return;const A=K.Mf,T=K._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(K.hf&&T)for(const B of K.hf){const K=B._drawWrappers;for(let L=0;L<K.length;L++){var G;const f=null===(G=K[L])||void 0===G?void 0:G.effect;if(!f)continue;T[L]===this&&(null===A||void 0===A||A._releaseVertexArrayObject(f),B._removeDrawWrapper(L,!0,!0))}}}else null===A||void 0===A||A._releaseVertexArrayObject(this._drawWrapper.effect);K.material!==this||K.sourceMesh||(K.material=null)}serialize(){const K=J.c.Serialize(this);return K.df=this.df.serialize(),K.uniqueId=this.uniqueId,this._serializePlugins(K),K}_serializePlugins(K){if(K.plugins={},this.pluginManager)for(const A of this.pluginManager._plugins)A.doNotSerialize||(K.plugins[A.getClassName()]=A.serialize())}static Parse(K,A,T){if(K.customType){if("BABYLON.PBRMaterial"===K.customType&&K.overloadedAlbedo&&(K.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return Y.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else K.customType="BABYLON.StandardMaterial";const G=L.Tools.Instantiate(K.customType).Parse(K,A,T);return G._loadedUniqueId=K.uniqueId,G}static _ParsePlugins(K,A,T,G){if(K.plugins)for(const O in K.plugins){var B,f;const C=K.plugins[O];let Q=null===(B=A.pluginManager)||void 0===B?void 0:B.getPlugin(C.name);if(!Q){const K=L.Tools.Instantiate("BABYLON."+O);K&&(Q=new K(A))}null===(f=Q)||void 0===f||f.parse(C,T,G)}}}F.TriangleFillMode=0,F.WireFrameFillMode=1,F.PointFillMode=2,F.PointListDrawMode=3,F.LineListDrawMode=4,F.LineLoopDrawMode=5,F.LineStripDrawMode=6,F.TriangleStripDrawMode=7,F.TriangleFanDrawMode=8,F.ClockWiseSideOrientation=0,F.CounterClockWiseSideOrientation=1,F.ImageProcessingDirtyFlag=64,F.TextureDirtyFlag=1,F.LightDirtyFlag=2,F.FresnelDirtyFlag=4,F.AttributesDirtyFlag=8,F.MiscDirtyFlag=16,F.PrePassDirtyFlag=32,F.AllDirtyFlag=127,F.MATERIAL_OPAQUE=0,F.MATERIAL_ALPHATEST=1,F.MATERIAL_ALPHABLEND=2,F.MATERIAL_ALPHATESTANDBLEND=3,F.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,F.MATERIAL_NORMALBLENDMETHOD_RNM=1,F.OnEventObservable=new f.e,F._AllDirtyCallBack=K=>K.markAllAsDirty(),F._ImageProcessingDirtyCallBack=K=>K.markAsImageProcessingDirty(),F._TextureDirtyCallBack=K=>K.markAsTexturesDirty(),F._FresnelDirtyCallBack=K=>K.markAsFresnelDirty(),F._MiscDirtyCallBack=K=>K.markAsMiscDirty(),F._PrePassDirtyCallBack=K=>K.markAsPrePassDirty(),F._LightsDirtyCallBack=K=>K.markAsLightDirty(),F._AttributeDirtyCallBack=K=>K.markAsAttributesDirty(),F._FresnelAndMiscDirtyCallBack=K=>{F._FresnelDirtyCallBack(K),F._MiscDirtyCallBack(K)},F._TextureAndMiscDirtyCallBack=K=>{F._TextureDirtyCallBack(K),F._MiscDirtyCallBack(K)},F._DirtyCallbackArray=[],F._RunDirtyCallBacks=K=>{for(const A of F._DirtyCallbackArray)A(K)},(0,G.c)([(0,B.B)()],F.prototype,"id",void 0),(0,G.c)([(0,B.B)()],F.prototype,"uniqueId",void 0),(0,G.c)([(0,B.B)()],F.prototype,"name",void 0),(0,G.c)([(0,B.B)()],F.prototype,"metadata",void 0),(0,G.c)([(0,B.B)()],F.prototype,"checkReadyOnEveryCall",void 0),(0,G.c)([(0,B.B)()],F.prototype,"checkReadyOnlyOnce",void 0),(0,G.c)([(0,B.B)()],F.prototype,"state",void 0),(0,G.c)([(0,B.B)("alpha")],F.prototype,"_alpha",void 0),(0,G.c)([(0,B.B)("tf")],F.prototype,"_backFaceCulling",void 0),(0,G.c)([(0,B.B)("cullBackFaces")],F.prototype,"_cullBackFaces",void 0),(0,G.c)([(0,B.B)()],F.prototype,"sideOrientation",void 0),(0,G.c)([(0,B.B)("alphaMode")],F.prototype,"_alphaMode",void 0),(0,G.c)([(0,B.B)()],F.prototype,"_needDepthPrePass",void 0),(0,G.c)([(0,B.B)()],F.prototype,"disableDepthWrite",void 0),(0,G.c)([(0,B.B)()],F.prototype,"disableColorWrite",void 0),(0,G.c)([(0,B.B)()],F.prototype,"forceDepthWrite",void 0),(0,G.c)([(0,B.B)()],F.prototype,"depthFunction",void 0),(0,G.c)([(0,B.B)()],F.prototype,"separateCullingPass",void 0),(0,G.c)([(0,B.B)("fogEnabled")],F.prototype,"_fogEnabled",void 0),(0,G.c)([(0,B.B)()],F.prototype,"pointSize",void 0),(0,G.c)([(0,B.B)()],F.prototype,"zOffset",void 0),(0,G.c)([(0,B.B)()],F.prototype,"zOffsetUnits",void 0),(0,G.c)([(0,B.B)()],F.prototype,"pointsCloud",null),(0,G.c)([(0,B.B)()],F.prototype,"fillMode",null),(0,G.c)([(0,B.B)()],F.prototype,"useLogarithmicDepth",null),(0,G.c)([(0,B.B)()],F.prototype,"transparencyMode",null)},13056:(K,A,T)=>{T.d(A,{$:()=>r,D:()=>S,H:()=>J,L:()=>x,P:()=>e,T:()=>H,W:()=>c,Y:()=>d,Z:()=>u,_:()=>p,bb:()=>h,cb:()=>s,e:()=>mK,eb:()=>b,h:()=>Z,j:()=>z,k:()=>Y,o:()=>P,s:()=>F,t:()=>N,w:()=>l,x:()=>D,z:()=>g});var G=T(12548),B=T(12743),L=T(12565),f=T(13005),O=T(13063);const C=B.DA.Black(),Q={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function Y(K,A,T){if(!K||K.LOGARITHMICDEPTH||K.indexOf&&K.indexOf("LOGARITHMICDEPTH")>=0){const K=T.activeCamera;1===K.mode&&G.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),A.setFloat("logarithmicDepthConstant",2/(Math.log(K.maxZ+1)/Math.LN2))}}function Z(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]&&arguments[3];T&&K.fogEnabled&&(!A||A.applyFog)&&0!==K.fogMode&&(T.setFloat4("vFogInfos",K.fogMode,K.fogStart,K.fogEnd,K.fogDensity),G?(K.fogColor.toLinearSpaceToRef(C,K.getEngine().useExactSrgbConversions),T.setColor3("vFogColor",C)):T.setColor3("vFogColor",K.fogColor))}function x(K,A,T,G,B,L,f,O,C,Y){const Z=K.numMaxInfluencers||K.numInfluencers;return Z<=0?0:(A.push("#define MORPHTARGETS"),K.hasPositions&&A.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),K.hasNormals&&A.push("#define MORPHTARGETTEXTURE_HASNORMALS"),K.hasTangents&&A.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),K.hasUVs&&A.push("#define MORPHTARGETTEXTURE_HASUVS"),K.hasUV2s&&A.push("#define MORPHTARGETTEXTURE_HASUV2S"),K.hasColors&&A.push("#define MORPHTARGETTEXTURE_HASCOLORS"),K.supportsPositions&&B&&A.push("#define MORPHTARGETS_POSITION"),K.supportsNormals&&L&&A.push("#define MORPHTARGETS_NORMAL"),K.supportsTangents&&f&&A.push("#define MORPHTARGETS_TANGENT"),K.supportsUVs&&O&&A.push("#define MORPHTARGETS_UV"),K.supportsUV2s&&C&&A.push("#define MORPHTARGETS_UV2"),K.supportsColors&&Y&&A.push("#define MORPHTARGETS_COLOR"),A.push("#define NUM_MORPH_INFLUENCERS "+Z),K.isUsingTextureForTargets&&A.push("#define MORPHTARGETS_TEXTURE"),Q.NUM_MORPH_INFLUENCERS=Z,Q.NORMAL=L,Q.TANGENT=f,Q.UV=O,Q.UV2=C,Q.COLOR=Y,J(T,G,Q,B),Z)}function J(K,A,T){let B=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const f=T.NUM_MORPH_INFLUENCERS;if(f>0&&L.b.LastCreatedEngine){const O=L.b.LastCreatedEngine.getCaps().maxVertexAttribs,C=A.morphTargetManager;if(null!==C&&void 0!==C&&C.isUsingTextureForTargets)return;const Q=C&&C.supportsPositions&&B,Y=C&&C.supportsNormals&&T.NORMAL,Z=C&&C.supportsTangents&&T.TANGENT,x=C&&C.supportsUVs&&T.UV1,J=C&&C.supportsUV2s&&T.UV2,b=C&&C.supportsColors&&T.VERTEXCOLOR;for(let T=0;T<f;T++)Q&&K.push("position"+T),Y&&K.push("normal"+T),Z&&K.push("tangent"+T),x&&K.push("uv_"+T),J&&K.push("uv2_"+T),b&&K.push("color"+T),K.length>O&&G.d.Error("Cannot add more vertex attributes for mesh "+A.name)}}function b(K){let A=arguments.length>1&&void 0!==arguments[1]&&arguments[1];K.push("world0"),K.push("world1"),K.push("world2"),K.push("world3"),A&&(K.push("previousWorld0"),K.push("previousWorld1"),K.push("previousWorld2"),K.push("previousWorld3"))}function P(K,A){const T=K.morphTargetManager;K&&T&&A.setFloatArray("morphTargetInfluences",T.influences)}function F(K,A){A.bindToEffect(K,"Scene")}function d(K,A,T){A._needUVs=!0,A[T]=!0,K.optimizeUVAllocation&&K.getTextureMatrix().isIdentityAs3x2()?(A[T+"DIRECTUV"]=K.coordinatesIndex+1,A["MAINUV"+(K.coordinatesIndex+1)]=!0):A[T+"DIRECTUV"]=0}function N(K,A,T){const G=K.getTextureMatrix();A.Xf(T+"Matrix",G)}function D(K,A,T){T.BAKED_VERTEX_ANIMATION_TEXTURE&&T.INSTANCES&&K.push("bakedVertexAnimationSettingsInstanced")}function mK(K,A,T){var G;if(A&&K&&(K.computeBonesUsingShaders&&A._bonesComputationForcedToCPU&&(K.computeBonesUsingShaders=!1),K.useBones&&K.computeBonesUsingShaders&&K.skeleton)){const B=K.skeleton;if(B.isUsingTextureForMatrices&&A.getUniformIndex("boneTextureWidth")>-1){const T=B.getTransformMatrixTexture(K);A.setTexture("boneSampler",T),A.setFloat("boneTextureWidth",4*(B.bones.length+1))}else{const L=B.getTransformMatrices(K);L&&(A.setMatrices("mBones",L),T&&K.SK().prePassRenderer&&K.SK().prePassRenderer.getIndex(2)&&(T.previousBones[K.uniqueId]||(T.previousBones[K.uniqueId]=L.slice()),A.setMatrices("mPreviousBones",T.previousBones[K.uniqueId]),G=L,T.previousBones[K.uniqueId].set(G)))}}}function U(K,A,T,G,B){let L=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];K._bindLight(A,T,G,B,L)}function z(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const L=Math.min(A.lightSources.length,B);for(let f=0;f<L;f++){U(A.lightSources[f],f,K,T,"boolean"===typeof G?G:G.SPECULARTERM,A.receiveShadows)}}function g(K,A,T,G){T.NUM_BONE_INFLUENCERS>0&&(G.addCPUSkinningFallback(0,A),K.push("matricesIndices"),K.push("matricesWeights"),T.NUM_BONE_INFLUENCERS>4&&(K.push("matricesIndicesExtra"),K.push("matricesWeightsExtra")))}function S(K,A){(A.INSTANCES||A.THIN_INSTANCES)&&b(K,!!A.PREPASS_VELOCITY),A.INSTANCESCOLOR&&K.push("instanceColor")}function l(K,A){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,B=0;for(let L=0;L<T&&K["LIGHT"+L];L++)L>0&&(B=G+L,A.addFallback(B,"LIGHT"+L)),K.SHADOWS||(K["SHADOW"+L]&&A.addFallback(G,"SHADOW"+L),K["SHADOWPCF"+L]&&A.addFallback(G,"SHADOWPCF"+L),K["SHADOWPCSS"+L]&&A.addFallback(G,"SHADOWPCSS"+L),K["SHADOWPOISSON"+L]&&A.addFallback(G,"SHADOWPOISSON"+L),K["SHADOWESM"+L]&&A.addFallback(G,"SHADOWESM"+L),K["SHADOWCLOSEESM"+L]&&A.addFallback(G,"SHADOWCLOSEESM"+L));return B++}function u(K,A,T,G,B,L,f){let O=arguments.length>7&&void 0!==arguments[7]&&arguments[7];f._areMiscDirty&&(f.LOGARITHMICDEPTH=T,f.POINTSIZE=G,f.FOG=B&&function(K,A){return A.fogEnabled&&K.applyFog&&0!==A.fogMode}(K,A),f.NONUNIFORMSCALING=K.nonUniformScaling,f.ALPHATEST=L,f.DECAL_AFTER_DETAIL=O)}function c(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!T._areLightsDirty)return T._needNormals;let f=0;const O={needNormals:T._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(K.lightsEnabled&&!L)for(const Q of A.lightSources)if(n(K,A,Q,f,T,G,O),f++,f===B)break;T.SPECULARTERM=O.specularEnabled,T.SHADOWS=O.shadowEnabled;for(let Q=f;Q<B;Q++)void 0!==T["LIGHT"+Q]&&(T["LIGHT"+Q]=!1,T["HEMILIGHT"+Q]=!1,T["POINTLIGHT"+Q]=!1,T["DIRLIGHT"+Q]=!1,T["SPOTLIGHT"+Q]=!1,T["AREALIGHT"+Q]=!1,T["SHADOW"+Q]=!1,T["SHADOWCSM"+Q]=!1,T["SHADOWCSMDEBUG"+Q]=!1,T["SHADOWCSMNUM_CASCADES"+Q]=!1,T["SHADOWCSMUSESHADOWMAXZ"+Q]=!1,T["SHADOWCSMNOBLEND"+Q]=!1,T["SHADOWCSM_RIGHTHANDED"+Q]=!1,T["SHADOWPCF"+Q]=!1,T["SHADOWPCSS"+Q]=!1,T["SHADOWPOISSON"+Q]=!1,T["SHADOWESM"+Q]=!1,T["SHADOWCLOSEESM"+Q]=!1,T["SHADOWCUBE"+Q]=!1,T["SHADOWLOWQUALITY"+Q]=!1,T["SHADOWMEDIUMQUALITY"+Q]=!1);const C=K.getEngine().getCaps();return void 0===T.SHADOWFLOAT&&(O.needRebuild=!0),T.SHADOWFLOAT=O.shadowEnabled&&(C.textureFloatRender&&C.textureFloatLinearFiltering||C.textureHalfFloatRender&&C.textureHalfFloatLinearFiltering),T.LIGHTMAPEXCLUDED=O.lightmapMode,O.needRebuild&&T.rebuild(),O.needNormals}function n(K,A,T,G,B,L,O){switch(O.needNormals=!0,void 0===B["LIGHT"+G]&&(O.needRebuild=!0),B["LIGHT"+G]=!0,B["SPOTLIGHT"+G]=!1,B["HEMILIGHT"+G]=!1,B["POINTLIGHT"+G]=!1,B["DIRLIGHT"+G]=!1,B["AREALIGHT"+G]=!1,T.prepareLightSpecificDefines(B,G),B["LIGHT_FALLOFF_PHYSICAL"+G]=!1,B["LIGHT_FALLOFF_GLTF"+G]=!1,B["LIGHT_FALLOFF_STANDARD"+G]=!1,T.falloffType){case f.d.FALLOFF_GLTF:B["LIGHT_FALLOFF_GLTF"+G]=!0;break;case f.d.FALLOFF_PHYSICAL:B["LIGHT_FALLOFF_PHYSICAL"+G]=!0;break;case f.d.FALLOFF_STANDARD:B["LIGHT_FALLOFF_STANDARD"+G]=!0}if(L&&!T.eY.equalsFloats(0,0,0)&&(O.specularEnabled=!0),B["SHADOW"+G]=!1,B["SHADOWCSM"+G]=!1,B["SHADOWCSMDEBUG"+G]=!1,B["SHADOWCSMNUM_CASCADES"+G]=!1,B["SHADOWCSMUSESHADOWMAXZ"+G]=!1,B["SHADOWCSMNOBLEND"+G]=!1,B["SHADOWCSM_RIGHTHANDED"+G]=!1,B["SHADOWPCF"+G]=!1,B["SHADOWPCSS"+G]=!1,B["SHADOWPOISSON"+G]=!1,B["SHADOWESM"+G]=!1,B["SHADOWCLOSEESM"+G]=!1,B["SHADOWCUBE"+G]=!1,B["SHADOWLOWQUALITY"+G]=!1,B["SHADOWMEDIUMQUALITY"+G]=!1,A&&A.receiveShadows&&K.shadowsEnabled&&T.shadowEnabled){const A=T.getShadowGenerator(K.activeCamera)??T.getShadowGenerator();if(A){const K=A.getShadowMap();K&&K.renderList&&K.renderList.length>0&&(O.shadowEnabled=!0,A.prepareDefines(B,G))}}T.lightmapMode!=f.d.LIGHTMAP_DEFAULT?(O.lightmapMode=!0,B["LIGHTMAPEXCLUDED"+G]=!0,B["LIGHTMAPNOSPECULAR"+G]=T.lightmapMode==f.d.LIGHTMAP_SHADOWSONLY):(B["LIGHTMAPEXCLUDED"+G]=!1,B["LIGHTMAPNOSPECULAR"+G]=!1)}function H(K,A,T,G,B){let L=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=function(K,A){let T=!1;if(K.activeCamera){const G=A.CAMERA_ORTHOGRAPHIC?1:0,B=A.CAMERA_PERSPECTIVE?1:0,L=1===K.activeCamera.mode?1:0,f=0===K.activeCamera.mode?1:0;(G^L||B^f)&&(A.CAMERA_ORTHOGRAPHIC=1===L,A.CAMERA_PERSPECTIVE=1===f,T=!0)}return T}(K,G);!1!==L&&(C=(0,O.k)(T,K,G)),G.DEPTHPREPASS!==!A.getColorWrite()&&(G.DEPTHPREPASS=!G.DEPTHPREPASS,C=!0),G.INSTANCES!==B&&(G.INSTANCES=B,C=!0),G.THIN_INSTANCES!==f&&(G.THIN_INSTANCES=f,C=!0),C&&G.markAsUnprocessed()}function e(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]&&arguments[4],L=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],f=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!A._areAttributesDirty&&A._needNormals===A._normals&&A._needUVs===A._uvs)return!1;A._normals=A._needNormals,A._uvs=A._needUVs,A.NORMAL=A._needNormals&&K.isVerticesDataPresent("normal"),A._needNormals&&K.isVerticesDataPresent("tangent")&&(A.TANGENT=!0);for(let O=1;O<=6;++O)A["UV"+O]=!!A._needUVs&&K.isVerticesDataPresent(`uv${1===O?"":O}`);if(T){const T=K.useVertexColors&&K.isVerticesDataPresent("color");A.VERTEXCOLOR=T,A.VERTEXALPHA=K.hasVertexAlpha&&T&&L}return K.isVerticesDataPresent("instanceColor")&&(K.hasInstances||K.hasThinInstances)&&(A.INSTANCESCOLOR=!0),G&&function(K,A){if(K.useBones&&K.computeBonesUsingShaders&&K.skeleton){A.NUM_BONE_INFLUENCERS=K.numBoneInfluencers;const T=void 0!==A.BONETEXTURE;if(K.skeleton.isUsingTextureForMatrices&&T)A.BONETEXTURE=!0;else{A.BonesPerMesh=K.skeleton.bones.length+1,A.BONETEXTURE=!T&&void 0;const G=K.SK().prePassRenderer;if(G&&G.enabled){const T=-1===G.excludedSkinnedMesh.indexOf(K);A.BONES_VELOCITY_ENABLED=T}}}else A.NUM_BONE_INFLUENCERS=0,A.BonesPerMesh=0,void 0!==A.BONETEXTURE&&(A.BONETEXTURE=!1)}(K,A),B&&function(K,A){const T=K.morphTargetManager;T?(A.MORPHTARGETS_UV=T.supportsUVs&&A.UV1,A.MORPHTARGETS_UV2=T.supportsUV2s&&A.UV2,A.MORPHTARGETS_TANGENT=T.supportsTangents&&A.TANGENT,A.MORPHTARGETS_NORMAL=T.supportsNormals&&A.NORMAL,A.MORPHTARGETS_POSITION=T.supportsPositions,A.MORPHTARGETS_COLOR=T.supportsColors,A.MORPHTARGETTEXTURE_HASUVS=T.hasUVs,A.MORPHTARGETTEXTURE_HASUV2S=T.hasUV2s,A.MORPHTARGETTEXTURE_HASTANGENTS=T.hasTangents,A.MORPHTARGETTEXTURE_HASNORMALS=T.hasNormals,A.MORPHTARGETTEXTURE_HASPOSITIONS=T.hasPositions,A.MORPHTARGETTEXTURE_HASCOLORS=T.hasColors,A.NUM_MORPH_INFLUENCERS=T.numMaxInfluencers||T.numInfluencers,A.MORPHTARGETS=A.NUM_MORPH_INFLUENCERS>0,A.MORPHTARGETS_TEXTURE=T.isUsingTextureForTargets):(A.MORPHTARGETS_UV=!1,A.MORPHTARGETS_UV2=!1,A.MORPHTARGETS_TANGENT=!1,A.MORPHTARGETS_NORMAL=!1,A.MORPHTARGETS_POSITION=!1,A.MORPHTARGETS_COLOR=!1,A.MORPHTARGETTEXTURE_HASUVS=!1,A.MORPHTARGETTEXTURE_HASUV2S=!1,A.MORPHTARGETTEXTURE_HASTANGENTS=!1,A.MORPHTARGETTEXTURE_HASNORMALS=!1,A.MORPHTARGETTEXTURE_HASPOSITIONS=!1,A.MORPHTARGETTEXTURE_HAS_COLORS=!1,A.MORPHTARGETS=!1,A.NUM_MORPH_INFLUENCERS=0)}(K,A),f&&function(K,A){const T=K.bakedVertexAnimationManager;A.BAKED_VERTEX_ANIMATION_TEXTURE=!(!T||!T.isEnabled)}(K,A),!0}function p(K,A){if(K.activeCamera){const T=A.MULTIVIEW;A.MULTIVIEW=null!==K.activeCamera.outputRenderTarget&&K.activeCamera.outputRenderTarget.getViewCount()>1,A.MULTIVIEW!=T&&A.markAsUnprocessed()}}function r(K,A,T){const G=A.ORDER_INDEPENDENT_TRANSPARENCY,B=A.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;A.ORDER_INDEPENDENT_TRANSPARENCY=K.useOrderIndependentTransparency&&T,A.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!K.getEngine().getCaps().textureFloatLinearFiltering,G===A.ORDER_INDEPENDENT_TRANSPARENCY&&B===A.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||A.markAsUnprocessed()}function h(K,A,T){const G=A.PREPASS;if(!A._arePrePassDirty)return;const B=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(K.prePassRenderer&&K.prePassRenderer.enabled&&T){A.PREPASS=!0,A.SCENE_MRT_COUNT=K.prePassRenderer.mrtCount,A.PREPASS_NORMAL_WORLDSPACE=K.prePassRenderer.generateNormalsInWorldSpace,A.PREPASS_COLOR=!0,A.PREPASS_COLOR_INDEX=0;for(let T=0;T<B.length;T++){const G=K.prePassRenderer.getIndex(B[T].type);-1!==G?(A[B[T].define]=!0,A[B[T].index]=G):A[B[T].define]=!1}}else{A.PREPASS=!1;for(let K=0;K<B.length;K++)A[B[K].define]=!1}A.PREPASS!=G&&(A.markAsUnprocessed(),A.markAsImageProcessingDirty())}function k(K,A,T,G){let B=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6];B&&B.push("Light"+K),L||(A.push("vLightData"+K,"vLightDiffuse"+K,"vLightSpecular"+K,"vLightDirection"+K,"vLightWidth"+K,"vLightHeight"+K,"vLightFalloff"+K,"vLightGround"+K,"lightMatrix"+K,"shadowsInfo"+K,"depthValues"+K),T.push("shadowTexture"+K),T.push("depthTexture"+K),A.push("viewFrustumZ"+K,"cascadeBlendFactor"+K,"lightSizeUVCorrection"+K,"depthCorrection"+K,"penumbraDarkness"+K,"frustumLengths"+K),G&&(T.push("projectionLightTexture"+K),A.push("textureProjectionMatrix"+K)),f&&T.push("iesLightTexture"+K))}function s(K,A,T){let G,B,L=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(K.uniformsNames){const f=K;G=f.uniformsNames,B=f.uniformBuffersNames,A=f.samplers,T=f.defines,L=f.maxSimultaneousLights||0}else G=K,A||(A=[]);for(let f=0;f<L&&T["LIGHT"+f];f++)k(f,G,A,T["PROJECTEDLIGHTTEXTURE"+f],B,!1,T["IESLIGHTTEXTURE"+f]);T.NUM_MORPH_INFLUENCERS&&(G.push("morphTargetInfluences"),G.push("morphTargetCount")),T.BAKED_VERTEX_ANIMATION_TEXTURE&&(G.push("bakedVertexAnimationSettings"),G.push("bakedVertexAnimationTextureSizeInverted"),G.push("bakedVertexAnimationTime"),A.push("bakedVertexAnimationTexture"))}},13011:(K,A,T)=>{T.d(A,{e:()=>L});var G=T(12700),B=T(13016);class L extends B.e{constructor(K,A){let T=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(K,A,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new G.Matrix,this._storeEffectOnSubMeshes=T}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(K,A){return!!K&&(!this._storeEffectOnSubMeshes||(!K.hf||0===K.hf.length||this.isReadyForSubMesh(K,K.hf[0],A)))}_isReadyForSubMesh(K){const A=K.materialDefines;return!(this.checkReadyOnEveryCall||!K.effect||!A||A._renderId!==this.SK().getRenderId())}bindOnlyWorldMatrix(K){this._activeEffect.setMatrix("world",K)}bindOnlyNormalMatrix(K){this._activeEffect.setMatrix("normalMatrix",K)}bind(K,A){A&&this.bindForSubMesh(K,A,A.hf[0])}_afterBind(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2?arguments[2]:void 0;super._afterBind(K,A,T),this.SK()._cachedEffect=A,T?T._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return T._drawWrapper._forceRebindOnNextCall||K.isCachedMaterialInvalid(this,A,G)}dispose(K,A,T){this._activeEffect=void 0,super.dispose(K,A,T)}}},13048:(K,A,T)=>{T.d(A,{e:()=>O,g:()=>C});var G=T(12683),B=T(12700),L=T(12688);class f{static extractMinAndMaxIndexed(K,A,T,G,B,L){for(let f=T;f<T+G;f++){const T=3*A[f],G=K[T],O=K[T+1],C=K[T+2];B.minimizeInPlaceFromFloats(G,O,C),L.maximizeInPlaceFromFloats(G,O,C)}}static extractMinAndMax(K,A,T,G,B,L){for(let f=A,O=A*G;f<A+T;f++,O+=G){const A=K[O],T=K[O+1],G=K[O+2];B.minimizeInPlaceFromFloats(A,T,G),L.maximizeInPlaceFromFloats(A,T,G)}}}function O(K,A,T,G){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const O=new B.PA(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),C=new B.PA(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return f.extractMinAndMaxIndexed(K,A,T,G,O,C),L&&(O.x-=O.x*L.x+L.y,O.y-=O.y*L.x+L.y,O.z-=O.z*L.x+L.y,C.x+=C.x*L.x+L.y,C.y+=C.y*L.x+L.y,C.z+=C.z*L.x+L.y),{minimum:O,maximum:C}}function C(K,A,T){let G=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,L=arguments.length>4?arguments[4]:void 0;const O=new B.PA(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),C=new B.PA(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return L||(L=3),f.extractMinAndMax(K,A,T,L,O,C),G&&(O.x-=O.x*G.x+G.y,O.y-=O.y*G.x+G.y,O.z-=O.z*G.x+G.y,C.x+=C.x*G.x+G.y,C.y+=C.y*G.x+G.y,C.z+=C.z*G.x+G.y),{minimum:O,maximum:C}}(0,G.c)([L.e.filter((function(){for(var K=arguments.length,A=new Array(K),T=0;T<K;T++)A[T]=arguments[T];let[G,B]=A;return!Array.isArray(G)&&!Array.isArray(B)}))],f,"extractMinAndMaxIndexed",null),(0,G.c)([L.e.filter((function(){for(var K=arguments.length,A=new Array(K),T=0;T<K;T++)A[T]=arguments[T];let[G]=A;return!Array.isArray(G)}))],f,"extractMinAndMax",null)},13018:(K,A,T)=>{T.d(A,{c:()=>C});var G=T(12768),B=T(13023),L=T(13027),f=T(13048),O=T(12812);class C{get materialDefines(){var K;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(K=this._getDrawWrapper())||void 0===K?void 0:K.defines}set materialDefines(K){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=K}_getDrawWrapper(K){let A=arguments.length>1&&void 0!==arguments[1]&&arguments[1];K=K??this._engine.currentRenderPassId;let T=this._drawWrappers[K];return!T&&A&&(this._drawWrappers[K]=T=new O.b(this._mesh.SK().getEngine())),T}_removeDrawWrapper(K){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var T;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(T=this._drawWrappers[K])||void 0===T||T.dispose(A));this._drawWrappers[K]=void 0}get effect(){var K;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(K=this._getDrawWrapper())||void 0===K?void 0:K.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(K){this._mainDrawWrapperOverride=K}setEffect(K){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2?arguments[2]:void 0,G=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const B=this._drawWrapper;B.setEffect(K,A,G),void 0!==T&&(B.materialContext=T),K||(B.defines=null,B.materialContext=void 0)}resetDrawCache(K){let A=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==K)return void this._removeDrawWrapper(K,!0,A);for(const K of this._drawWrappers)null===K||void 0===K||K.dispose(A)}this._drawWrappers=[]}static AddToMesh(K,A,T,G,B,L,f){return new C(K,A,T,G,B,L,f,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(K,A,T,G,B,L,f){let O=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],C=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=K,this.verticesStart=A,this.verticesCount=T,this.indexStart=G,this.indexCount=B,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=L,this._renderingMesh=f||L,C&&L.hf.push(this),this._engine=this._mesh.SK().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=L.hf.length-1,O&&(this.refreshBoundingInfo(),L.wf(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(K){return this._boundingInfo=K,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const K=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return K||this._renderingMesh}jK(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const A=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!A)return K&&this._mesh.SK()._hasDefaultMaterial?this._mesh.SK().defaultMaterial:null;if(this._isMultiMaterial(A)){const K=A.getSubMaterial(this.materialIndex);return this._currentMaterial!==K&&(this._currentMaterial=K,this.resetDrawCache()),K}return A}_isMultiMaterial(K){return void 0!==K.getSubMaterial}refreshBoundingInfo(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Mf)return this;if(K||(K=this._renderingMesh.getVerticesData(G.d.PositionKind)),!K)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const A=this._renderingMesh.Ef();let T;if(0===this.indexStart&&this.indexCount===A.length){const K=this._renderingMesh.getBoundingInfo();T={minimum:K.minimum.clone(),maximum:K.maximum.clone()}}else T=(0,f.e)(K,A,this.indexStart,this.indexCount,this._renderingMesh.Mf.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(T.minimum,T.maximum):this._boundingInfo=new L.e(T.minimum,T.maximum),this}_checkCollision(K){return this.getBoundingInfo()._checkCollision(K)}updateBoundingInfo(K){let A=this.getBoundingInfo();return A||(this.refreshBoundingInfo(),A=this.getBoundingInfo()),A&&A.update(K),this}isInFrustum(K){const A=this.getBoundingInfo();return!!A&&A.isInFrustum(K,this._mesh.rZ)}isCompletelyInFrustum(K){const A=this.getBoundingInfo();return!!A&&A.isCompletelyInFrustum(K)}render(K){return this._renderingMesh.render(this,K,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(K,A){if(!this._linesIndexBuffer){const T=6*Math.floor(this.indexCount/3),G=this.verticesStart+this.verticesCount>65535?new Uint32Array(T):new Uint16Array(T);let B=0;if(0===K.length)for(let K=this.indexStart;K<this.indexStart+this.indexCount;K+=3)G[B++]=K,G[B++]=K+1,G[B++]=K+1,G[B++]=K+2,G[B++]=K+2,G[B++]=K;else for(let A=this.indexStart;A<this.indexStart+this.indexCount;A+=3)G[B++]=K[A],G[B++]=K[A+1],G[B++]=K[A+1],G[B++]=K[A+2],G[B++]=K[A+2],G[B++]=K[A];this._linesIndexBuffer=A.createIndexBuffer(G),this._linesIndexCount=G.length}return this._linesIndexBuffer}canIntersects(K){const A=this.getBoundingInfo();return!!A&&K.intersectsBox(A.boundingBox)}intersects(K,A,T,G,B){const L=this.jK();if(!L)return null;let f=3,O=!1;switch(L.fillMode){case 3:case 5:case 6:case 8:return null;case 7:f=1,O=!0}return 4===L.fillMode?T.length?this._intersectLines(K,A,T,this._mesh.intersectionThreshold,G):this._intersectUnIndexedLines(K,A,T,this._mesh.intersectionThreshold,G):!T.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(K,A,T,G,B):this._intersectTriangles(K,A,T,f,O,G,B)}_intersectLines(K,A,T,G,L){let f=null;for(let O=this.indexStart;O<this.indexStart+this.indexCount;O+=2){const C=A[T[O]],Q=A[T[O+1]],Y=K.intersectionSegment(C,Q,G);if(!(Y<0)&&((L||!f||Y<f.distance)&&(f=new B.b(null,null,Y),f.faceId=O/2,L)))break}return f}_intersectUnIndexedLines(K,A,T,G,L){let f=null;for(let O=this.verticesStart;O<this.verticesStart+this.verticesCount;O+=2){const T=A[O],C=A[O+1],Q=K.intersectionSegment(T,C,G);if(!(Q<0)&&((L||!f||Q<f.distance)&&(f=new B.b(null,null,Q),f.faceId=O/2,L)))break}return f}_intersectTriangles(K,A,T,G,B,L,f){let O=null,C=-1;for(let Q=this.indexStart;Q<this.indexStart+this.indexCount-(3-G);Q+=G){C++;const G=T[Q],Y=T[Q+1],Z=T[Q+2];if(B&&4294967295===Z){Q+=2;continue}const x=A[G],J=A[Y],b=A[Z];if(!x||!J||!b)continue;if(f&&!f(x,J,b,K,G,Y,Z))continue;const P=K.intersectsTriangle(x,J,b);if(P){if(P.distance<0)continue;if((L||!O||P.distance<O.distance)&&(O=P,O.faceId=C,L))break}}return O}_intersectUnIndexedTriangles(K,A,T,G,B){let L=null;for(let f=this.verticesStart;f<this.verticesStart+this.verticesCount;f+=3){const T=A[f],O=A[f+1],C=A[f+2];if(B&&!B(T,O,C,K,-1,-1,-1))continue;const Q=K.intersectsTriangle(T,O,C);if(Q){if(Q.distance<0)continue;if((G||!L||Q.distance<L.distance)&&(L=Q,L.faceId=f/3,G))break}}return L}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(K,A){const T=new C(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,K,A,!1);if(!this.IsGlobal){const K=this.getBoundingInfo();if(!K)return T;T._boundingInfo=new L.e(K.minimum,K.maximum)}return T}dispose(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.SK().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const A=this._mesh.hf.indexOf(this);this._mesh.hf.splice(A,1),this.resetDrawCache(void 0,K)}getClassName(){return"SubMesh"}static CreateFromIndices(K,A,T,G,B){let L=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],f=Number.MAX_VALUE,O=-Number.MAX_VALUE;const Q=(B||G).Ef();for(let C=A;C<A+T;C++){const K=Q[C];K<f&&(f=K),K>O&&(O=K)}return new C(K,f,O-f+1,A,T,G,B,L)}}}}]);