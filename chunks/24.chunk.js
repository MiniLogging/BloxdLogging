"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[24],{11943:(F,P,f)=>{f.d(P,{d:()=>c});class c{constructor(F,P,f){this.bu=F,this.bv=P,this.distance=f,this.faceId=0,this.subMeshId=0}}},11949:(F,P,f)=>{f.d(P,{d:()=>H});var c=f(11655),N=f(11639),q=f(11648);class H{constructor(F,P,f){this.vectors=(0,c.e)(8,N.tP.Zero),this.center=N.tP.Zero(),this.centerWorld=N.tP.Zero(),this.extendSize=N.tP.Zero(),this.extendSizeWorld=N.tP.Zero(),this.directions=(0,c.e)(3,N.tP.Zero),this.vectorsWorld=(0,c.e)(8,N.tP.Zero),this.minimumWorld=N.tP.Zero(),this.maximumWorld=N.tP.Zero(),this.minimum=N.tP.Zero(),this.maximum=N.tP.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(F,P,f)}reConstruct(F,P,f){const c=F.x,q=F.y,H=F.z,A=P.x,o=P.y,j=P.z,i=this.vectors;this.minimum.fc(c,q,H),this.maximum.fc(A,o,j),i[0].fc(c,q,H),i[1].fc(A,o,j),i[2].fc(A,q,H),i[3].fc(c,o,H),i[4].fc(c,q,j),i[5].fc(A,o,H),i[6].fc(c,o,j),i[7].fc(A,q,j),P.addToRef(F,this.center).scaleInPlace(.5),P.subtractToRef(F,this.extendSize).scaleInPlace(.5),this._worldMatrix=f||N.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(F){const P=H._TmpVector3,f=this.maximum.subtractToRef(this.minimum,P[0]),c=f.length();f.normalizeFromLength(c);const N=c*F,q=f.scaleInPlace(.5*N),A=this.center.subtractToRef(q,P[1]),o=this.center.addToRef(q,P[2]);return this.reConstruct(A,o,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(F){const P=this.minimumWorld,f=this.maximumWorld,c=this.directions,q=this.vectorsWorld,H=this.vectors;if(F.isIdentity()){P.q(this.minimum),f.q(this.maximum);for(let F=0;F<8;++F)q[F].q(H[F]);this.extendSizeWorld.q(this.extendSize),this.centerWorld.q(this.center)}else{P.Nc(Number.MAX_VALUE),f.Nc(-Number.MAX_VALUE);for(let c=0;c<8;++c){const A=q[c];N.tP.TransformCoordinatesToRef(H[c],F,A),P.minimizeInPlace(A),f.maximizeInPlace(A)}f.subtractToRef(P,this.extendSizeWorld).scaleInPlace(.5),f.addToRef(P,this.centerWorld).scaleInPlace(.5)}N.tP.FromArrayToRef(F.m,0,c[0]),N.tP.FromArrayToRef(F.m,4,c[1]),N.tP.FromArrayToRef(F.m,8,c[2]),this._worldMatrix=F}isInFrustum(F){return H.IsInFrustum(this.vectorsWorld,F)}isCompletelyInFrustum(F){return H.IsCompletelyInFrustum(this.vectorsWorld,F)}intersectsPoint(F){const P=this.minimumWorld,f=this.maximumWorld,c=P.x,N=P.y,H=P.z,A=f.x,o=f.y,j=f.z,i=F.x,u=F.y,T=F.z,Y=-q.e;return!(A-i<Y||Y>i-c)&&(!(o-u<Y||Y>u-N)&&!(j-T<Y||Y>T-H))}intersectsSphere(F){return H.IntersectsSphere(this.minimumWorld,this.maximumWorld,F.centerWorld,F.radiusWorld)}intersectsMinMax(F,P){const f=this.minimumWorld,c=this.maximumWorld,N=f.x,q=f.y,H=f.z,A=c.x,o=c.y,j=c.z,i=F.x,u=F.y,T=F.z,Y=P.x,t=P.y,C=P.z;return!(A<i||N>Y)&&(!(o<u||q>t)&&!(j<T||H>C))}dispose(){var F,P;null===(F=this._drawWrapperFront)||void 0===F||F.dispose(),null===(P=this._drawWrapperBack)||void 0===P||P.dispose()}static Intersects(F,P){return F.intersectsMinMax(P.minimumWorld,P.maximumWorld)}static IntersectsSphere(F,P,f,c){const q=H._TmpVector3[0];N.tP.ClampToRef(f,F,P,q);return N.tP.DistanceSquared(f,q)<=c*c}static IsCompletelyInFrustum(F,P){for(let f=0;f<6;++f){const c=P[f];for(let P=0;P<8;++P)if(c.dotCoordinate(F[P])<0)return!1}return!0}static IsInFrustum(F,P){for(let f=0;f<6;++f){let c=!0;const N=P[f];for(let P=0;P<8;++P)if(N.dotCoordinate(F[P])>=0){c=!1;break}if(c)return!1}return!0}}H._TmpVector3=(0,c.e)(3,N.tP.Zero)},11947:(F,P,f)=>{f.d(P,{b:()=>u});var c=f(11655),N=f(11639),q=f(11949),H=f(11958);const A={min:0,max:0},o={min:0,max:0},j=(F,P,f)=>{const c=N.tP.Dot(P.centerWorld,F),q=Math.abs(N.tP.Dot(P.directions[0],F))*P.extendSize.x+Math.abs(N.tP.Dot(P.directions[1],F))*P.extendSize.y+Math.abs(N.tP.Dot(P.directions[2],F))*P.extendSize.z;f.min=c-q,f.max=c+q},i=(F,P,f)=>(j(F,P,A),j(F,f,o),!(A.min>o.max||o.min>A.max));class u{constructor(F,P,f){this._isLocked=!1,this.boundingBox=new q.d(F,P,f),this.boundingSphere=new H.d(F,P,f)}reConstruct(F,P,f){this.boundingBox.reConstruct(F,P,f),this.boundingSphere.reConstruct(F,P,f)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(F){this._isLocked=F}update(F){this._isLocked||(this.boundingBox._update(F),this.boundingSphere._update(F))}centerOn(F,P){const f=u._TmpVector3[0].q(F).Ou(P),c=u._TmpVector3[1].q(F).addInPlace(P);return this.boundingBox.reConstruct(f,c,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(f,c,this.boundingBox.getWorldMatrix()),this}encapsulate(F){const P=N.tP.Minimize(this.minimum,F),f=N.tP.Maximize(this.maximum,F);return this.reConstruct(P,f,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(F){const P=N.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(P);const f=N.TmpVectors.tP[0];return N.tP.TransformCoordinatesToRef(F.boundingBox.minimumWorld,P,f),this.encapsulate(f),N.tP.TransformCoordinatesToRef(F.boundingBox.maximumWorld,P,f),this.encapsulate(f),this}scale(F){return this.boundingBox.scale(F),this.boundingSphere.scale(F),this}isInFrustum(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===P||3===P)&&this.boundingSphere.isCenterInFrustum(F))return!0;if(!this.boundingSphere.isInFrustum(F))return!1;return!(1!==P&&3!==P)||this.boundingBox.isInFrustum(F)}get diagonalLength(){const F=this.boundingBox;return F.maximumWorld.subtractToRef(F.minimumWorld,u._TmpVector3[0]).length()}isCompletelyInFrustum(F){return this.boundingBox.isCompletelyInFrustum(F)}_checkCollision(F){return F._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(F){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(F)&&!!this.boundingBox.intersectsPoint(F))}intersects(F,P){if(!H.d.Intersects(this.boundingSphere,F.boundingSphere))return!1;if(!q.d.Intersects(this.boundingBox,F.boundingBox))return!1;if(!P)return!0;const f=this.boundingBox,c=F.boundingBox;return!!i(f.directions[0],f,c)&&(!!i(f.directions[1],f,c)&&(!!i(f.directions[2],f,c)&&(!!i(c.directions[0],f,c)&&(!!i(c.directions[1],f,c)&&(!!i(c.directions[2],f,c)&&(!!i(N.tP.Cross(f.directions[0],c.directions[0]),f,c)&&(!!i(N.tP.Cross(f.directions[0],c.directions[1]),f,c)&&(!!i(N.tP.Cross(f.directions[0],c.directions[2]),f,c)&&(!!i(N.tP.Cross(f.directions[1],c.directions[0]),f,c)&&(!!i(N.tP.Cross(f.directions[1],c.directions[1]),f,c)&&(!!i(N.tP.Cross(f.directions[1],c.directions[2]),f,c)&&(!!i(N.tP.Cross(f.directions[2],c.directions[0]),f,c)&&(!!i(N.tP.Cross(f.directions[2],c.directions[1]),f,c)&&!!i(N.tP.Cross(f.directions[2],c.directions[2]),f,c))))))))))))))}}u._TmpVector3=(0,c.e)(2,N.tP.Zero)},11958:(F,P,f)=>{f.d(P,{d:()=>q});var c=f(11655),N=f(11639);class q{constructor(F,P,f){this.center=N.tP.Zero(),this.centerWorld=N.tP.Zero(),this.minimum=N.tP.Zero(),this.maximum=N.tP.Zero(),this.reConstruct(F,P,f)}reConstruct(F,P,f){this.minimum.q(F),this.maximum.q(P);const c=N.tP.Distance(F,P);P.addToRef(F,this.center).scaleInPlace(.5),this.radius=.5*c,this._update(f||N.Matrix.IdentityReadOnly)}scale(F){const P=this.radius*F,f=q._TmpVector3,c=f[0].Nc(P),N=this.center.subtractToRef(c,f[1]),H=this.center.addToRef(c,f[2]);return this.reConstruct(N,H,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(F){if(F.isIdentity())this.centerWorld.q(this.center),this.radiusWorld=this.radius;else{N.tP.TransformCoordinatesToRef(this.center,F,this.centerWorld);const P=q._TmpVector3[0];N.tP.TransformNormalFromFloatsToRef(1,1,1,F,P),this.radiusWorld=Math.max(Math.abs(P.x),Math.abs(P.y),Math.abs(P.z))*this.radius}}isInFrustum(F){const P=this.centerWorld,f=this.radiusWorld;for(let c=0;c<6;c++)if(F[c].dotCoordinate(P)<=-f)return!1;return!0}isCenterInFrustum(F){const P=this.centerWorld;for(let f=0;f<6;f++)if(F[f].dotCoordinate(P)<0)return!1;return!0}intersectsPoint(F){const P=N.tP.DistanceSquared(this.centerWorld,F);return!(this.radiusWorld*this.radiusWorld<P)}static Intersects(F,P){const f=N.tP.DistanceSquared(F.centerWorld,P.centerWorld),c=F.radiusWorld+P.radiusWorld;return!(c*c<f)}static CreateFromCenterAndRadius(F,P,f){this._TmpVector3[0].q(F),this._TmpVector3[1].fc(0,0,P),this._TmpVector3[2].q(F),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Ou(this._TmpVector3[1]);const c=new q(this._TmpVector3[0],this._TmpVector3[2]);return c._worldMatrix=f||N.Matrix.Identity(),c}}q._TmpVector3=(0,c.e)(3,N.tP.Zero)},11976:(F,P,f)=>{function c(F){-1===F.indexOf("vClipPlane")&&F.push("vClipPlane"),-1===F.indexOf("vClipPlane2")&&F.push("vClipPlane2"),-1===F.indexOf("vClipPlane3")&&F.push("vClipPlane3"),-1===F.indexOf("vClipPlane4")&&F.push("vClipPlane4"),-1===F.indexOf("vClipPlane5")&&F.push("vClipPlane5"),-1===F.indexOf("vClipPlane6")&&F.push("vClipPlane6")}function N(F,P,f){const c=!!(F.clipPlane??P.clipPlane),N=!!(F.clipPlane2??P.clipPlane2),q=!!(F.clipPlane3??P.clipPlane3),H=!!(F.clipPlane4??P.clipPlane4),A=!!(F.clipPlane5??P.clipPlane5),o=!!(F.clipPlane6??P.clipPlane6);c&&f.push("#define CLIPPLANE"),N&&f.push("#define CLIPPLANE2"),q&&f.push("#define CLIPPLANE3"),H&&f.push("#define CLIPPLANE4"),A&&f.push("#define CLIPPLANE5"),o&&f.push("#define CLIPPLANE6")}function q(F,P,f){let c=!1;const N=!!(F.clipPlane??P.clipPlane),q=!!(F.clipPlane2??P.clipPlane2),H=!!(F.clipPlane3??P.clipPlane3),A=!!(F.clipPlane4??P.clipPlane4),o=!!(F.clipPlane5??P.clipPlane5),j=!!(F.clipPlane6??P.clipPlane6);return f.CLIPPLANE!==N&&(f.CLIPPLANE=N,c=!0),f.CLIPPLANE2!==q&&(f.CLIPPLANE2=q,c=!0),f.CLIPPLANE3!==H&&(f.CLIPPLANE3=H,c=!0),f.CLIPPLANE4!==A&&(f.CLIPPLANE4=A,c=!0),f.CLIPPLANE5!==o&&(f.CLIPPLANE5=o,c=!0),f.CLIPPLANE6!==j&&(f.CLIPPLANE6=j,c=!0),c}function H(F,P,f){let c=P.clipPlane??f.clipPlane;A(F,"vClipPlane",c),c=P.clipPlane2??f.clipPlane2,A(F,"vClipPlane2",c),c=P.clipPlane3??f.clipPlane3,A(F,"vClipPlane3",c),c=P.clipPlane4??f.clipPlane4,A(F,"vClipPlane4",c),c=P.clipPlane5??f.clipPlane5,A(F,"vClipPlane5",c),c=P.clipPlane6??f.clipPlane6,A(F,"vClipPlane6",c)}function A(F,P,f){f&&F.setFloat4(P,f.normal.x,f.normal.y,f.normal.z,f.d)}f.d(P,{c:()=>c,d:()=>H,h:()=>q,l:()=>N})},11926:(F,P,f)=>{f.d(P,{c:()=>c});class c{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(F,P){this._defines[F]||(F<this._currentRank&&(this._currentRank=F),F>this._maxRank&&(this._maxRank=F),this._defines[F]=new Array),this._defines[F].push(P)}addCPUSkinningFallback(F,P){this._mesh=P,F<this._currentRank&&(this._currentRank=F),F>this._maxRank&&(this._maxRank=F)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(F,P){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,F=F.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),P._bonesComputationForcedToCPU=!0;const f=this._mesh.OF();for(let F=0;F<f.meshes.length;F++){const c=f.meshes[F];if(c.material){if(c.computeBonesUsingShaders&&0!==c.numBoneInfluencers)if(c.material.getEffect()===P)c.computeBonesUsingShaders=!1;else if(c.nf)for(const F of c.nf){if(F.effect===P){c.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&c.computeBonesUsingShaders&&c.numBoneInfluencers>0&&(c.computeBonesUsingShaders=!1)}}else{const P=this._defines[this._currentRank];if(P)for(let f=0;f<P.length;f++)F=F.replace("#define "+P[f],"");this._currentRank++}return F}}},11937:(F,P,f)=>{f.d(P,{d:()=>L});var c=f(11619),N=f(11628),q=f(11462),H=f(11464),A=f(11501),o=f(11940),j=f(11869),i=f(11474),u=f(11697),T=f(11739),Y=f(11677);class t{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(F){this._func=F}get funcRef(){return this._funcRef}set funcRef(F){this._funcRef=F}get funcMask(){return this._funcMask}set funcMask(F){this._funcMask=F}get opStencilFail(){return this._opStencilFail}set opStencilFail(F){this._opStencilFail=F}get opDepthFail(){return this._opDepthFail}set opDepthFail(F){this._opDepthFail=F}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(F){this._opStencilDepthPass=F}get mask(){return this._mask}set mask(F){this._mask=F}get enabled(){return this._enabled}set enabled(F){this._enabled=F}getClassName(){return"MaterialStencilState"}copyTo(F){Y.e.Clone((()=>F),this)}serialize(){return Y.e.Serialize(this)}parse(F,P,f){Y.e.Parse((()=>this),F,P,f)}}(0,c.e)([(0,N.L)()],t.prototype,"func",null),(0,c.e)([(0,N.L)()],t.prototype,"funcRef",null),(0,c.e)([(0,N.L)()],t.prototype,"funcMask",null),(0,c.e)([(0,N.L)()],t.prototype,"opStencilFail",null),(0,c.e)([(0,N.L)()],t.prototype,"opDepthFail",null),(0,c.e)([(0,N.L)()],t.prototype,"opStencilDepthPass",null),(0,c.e)([(0,N.L)()],t.prototype,"mask",null),(0,c.e)([(0,N.L)()],t.prototype,"enabled",null);var C=f(11973);class L{get _supportGlowLayer(){return!1}set _glowModeEnabled(F){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(F){if(this._alpha===F)return;const P=this._alpha;this._alpha=F,1!==P&&1!==F||this.Ti(L.MiscDirtyFlag+L.PrePassDirtyFlag)}get alpha(){return this._alpha}set Pc(F){this._backFaceCulling!==F&&(this._backFaceCulling=F,this.Ti(L.TextureDirtyFlag))}get Pc(){return this._backFaceCulling}set cullBackFaces(F){this._cullBackFaces!==F&&(this._cullBackFaces=F,this.Ti(L.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(F){this._blockDirtyMechanism!==F&&(this._blockDirtyMechanism=F,F||this.iT())}atomicMaterialsUpdate(F){this.blockDirtyMechanism=!0;try{F(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(F){this._onDisposeObserver&&this.Mf.remove(this._onDisposeObserver),this._onDisposeObserver=this.Mf.add(F)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new H.d),this._onBindObservable}set onBind(F){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(F)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new H.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new H.d),this._onEffectCreatedObservable}set alphaMode(F){this._alphaMode!==F&&(this._alphaMode=F,this.Ti(L.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(F){this._needDepthPrePass!==F&&(this._needDepthPrePass=F,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(F){this._fogEnabled!==F&&(this._fogEnabled=F,this.Ti(L.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case L.WireFrameFillMode:case L.LineListDrawMode:case L.LineLoopDrawMode:case L.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(F){this.fillMode=F?L.WireFrameFillMode:L.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case L.PointFillMode:case L.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(F){this.fillMode=F?L.PointFillMode:L.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(F){this._fillMode!==F&&(this._fillMode=F,this.Ti(L.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(F){const P=this.OF().getEngine().getCaps().fragmentDepthSupported;F&&!P&&i.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=F&&P,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(F){this._drawWrapper=F}constructor(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Mf=new H.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new t,this._useUBO=!1,this._fillMode=L.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=F;const N=P||A.b.LastCreatedScene;N&&(this._scene=N,this._dirtyCallbacks={},this._forceGLSL=c,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=F||q.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new T.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new j.c(this._scene.getEngine(),void 0,void 0,F),this._useUBO=this.OF().getEngine().supportsUniformBuffers,this._createUniformBuffer(),f||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),L.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var F;const P=this.OF().getEngine();null===(F=this._uniformBuffer)||void 0===F||F.dispose(),P.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new j.c(P,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new j.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(F){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.iT(),this.checkReadyOnlyOnce=!0}unfreeze(){this.iT(),this.checkReadyOnlyOnce=!1}isReady(F,P){return!0}isReadyForSubMesh(F,P,f){const c=P.materialDefines;return!!c&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=c,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}OF(){return this._scene}_getEffectiveOrientation(F){return null!==this.sideOrientation?this.sideOrientation:F.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(F){this._transparencyMode!==F&&(this._transparencyMode=F,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===L.MATERIAL_ALPHABLEND||this._transparencyMode===L.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===L.MATERIAL_ALPHATEST||this._transparencyMode===L.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===L.MATERIAL_OPAQUE||this._transparencyMode===L.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(F){return this._hasTransparencyMode?this._transparencyModeIsBlend:F.visibility<1||!this._disableAlphaBlending&&(F.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(F){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(F)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}iT(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const P=this.OF().meshes;for(const f of P)if(f.nf)for(const P of f.nf)if(P.pF()===this)for(const f of P._drawWrappers)f&&this._materialContext===f.materialContext&&(f._wasPreviouslyReady=!1,f._wasPreviouslyUsingInstances=null,f._forceRebindOnNextCall=F);F&&this.Ti(L.AllDirtyFlag)}_preBind(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const f=this._scene.getEngine(),c=(null==P?this.sideOrientation:P)===L.ClockWiseSideOrientation;return f.enableEffect(F||this._getDrawWrapper()),f.setState(this.Pc,this.zOffset,!1,c,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),c}bind(F,P){}buildUniformLayout(){const F=this._uniformBuffer;this._eventInfo.ubo=F,this._callbackPluginEventGeneric(8,this._eventInfo),F.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(F,P,f){const c=f._drawWrapper;this._eventInfo.subMesh=f,this._callbackPluginEventBindForSubMesh(this._eventInfo),c._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(F){}bindView(F){this._useUBO?this._needToBindSceneUbo=!0:F.setMatrix("view",this.OF().getViewMatrix())}bindViewProjection(F){this._useUBO?this._needToBindSceneUbo=!0:(F.setMatrix("viewProjection",this.OF().getTransformMatrix()),F.setMatrix("projection",this.OF().getProjectionMatrix()))}bindEyePosition(F,P){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(F,P)}_afterBind(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&P&&(this._needToBindSceneUbo=!1,(0,C.s)(P,this.OF().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=F?F.visibility:1,this._onBindObservable&&F&&this._onBindObservable.notifyObservers(F),this.disableDepthWrite){const F=this._scene.getEngine();this._cachedDepthWriteState=F.getDepthWrite(),F.setDepthWrite(!1)}if(this.disableColorWrite){const F=this._scene.getEngine();this._cachedColorWriteState=F.getColorWrite(),F.setColorWrite(!1)}if(0!==this.depthFunction){const F=this._scene.getEngine();this._cachedDepthFunctionState=F.getDepthFunction()||0,F.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(F){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=F,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(F){return null}_clonePlugins(F,P){const f={};if(this._serializePlugins(f),L._ParsePlugins(f,F,this._scene,P),this.pluginManager)for(const c of this.pluginManager._plugins){const P=F.pluginManager.getPlugin(c.name);P&&c.copyTo(P)}}getBindedMeshes(){if(this.meshMap){const F=[];for(const P in this.meshMap){const f=this.meshMap[P];f&&F.push(f)}return F}return this._scene.meshes.filter((F=>F.material===this))}forceCompilation(F,P,f,c){const N={clipPlane:!1,useInstances:!1,...f},q=this.OF(),H=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const A=()=>{if(!this._scene||!this._scene.getEngine())return;const f=q.clipPlane;if(N.clipPlane&&(q.clipPlane=new u.e(0,0,0,1)),this._storeEffectOnSubMeshes){let f=!0,q=null;if(F.nf){const P=new o.e(0,0,0,0,0,F,void 0,!1,!1);P.materialDefines&&(P.materialDefines._renderId=-1),this.isReadyForSubMesh(F,P,N.useInstances)||(P.effect&&P.effect.getCompilationError()&&P.effect.allFallbacksProcessed()?q=P.effect.getCompilationError():(f=!1,setTimeout(A,16)))}f&&(this.allowShaderHotSwapping=H,q&&c&&c(q),P&&P(this))}else this.isReady()?(this.allowShaderHotSwapping=H,P&&P(this)):setTimeout(A,16);N.clipPlane&&(q.clipPlane=f)};A()}async forceCompilationAsync(F,P){return await new Promise(((f,c)=>{this.forceCompilation(F,(()=>{f()}),P,(F=>{c(F)}))}))}Ti(F){this.OF().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(L._DirtyCallbackArray.length=0,F&L.ImageProcessingDirtyFlag&&L._DirtyCallbackArray.push(L._ImageProcessingDirtyCallBack),F&L.TextureDirtyFlag&&L._DirtyCallbackArray.push(L._TextureDirtyCallBack),F&L.LightDirtyFlag&&L._DirtyCallbackArray.push(L._LightsDirtyCallBack),F&L.FresnelDirtyFlag&&L._DirtyCallbackArray.push(L._FresnelDirtyCallBack),F&L.AttributesDirtyFlag&&L._DirtyCallbackArray.push(L._AttributeDirtyCallBack),F&L.MiscDirtyFlag&&L._DirtyCallbackArray.push(L._MiscDirtyCallBack),F&L.PrePassDirtyFlag&&L._DirtyCallbackArray.push(L._PrePassDirtyCallBack),L._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(L._RunDirtyCallBacks),this.OF().resetCachedMaterial())}resetDrawCache(){const F=this.OF().meshes;for(const P of F)if(P.nf)for(const F of P.nf)F.pF()===this&&F.resetDrawCache()}_markAllSubMeshesAsDirty(F){const P=this.OF();if(P.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const f=P.meshes;for(const c of f)if(c.nf)for(const f of c.nf){if((f.pF()||(P._hasDefaultMaterial?P.defaultMaterial:null))===this)for(const P of f._drawWrappers)P&&P.defines&&P.defines.markAllAsDirty&&this._materialContext===P.materialContext&&F(P.defines)}}_markScenePrePassDirty(){if(this.OF().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const F=this.OF().enablePrePassRenderer();F&&F.Ti()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(L._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(L._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(L._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(L._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(L._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(L._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(L._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(L._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(L._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(L._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const F=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Mf.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(F)}))}}setPrePassRenderer(F){return!1}dispose(F,P,f){const c=this.OF();if(c.stopAnimation(this),c.freeProcessedMaterials(),c.removeMaterial(this),this._eventInfo.forceDisposeTextures=P,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const F=this._parentContainer.materials.indexOf(this);F>-1&&this._parentContainer.materials.splice(F,1),this._parentContainer=null}if(!0!==f)if(this.meshMap)for(const N in this.meshMap){const F=this.meshMap[N];this._disposeMeshResources(F)}else{const F=c.meshes;for(const P of F)this._disposeMeshResources(P)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Mf.notifyObservers(this),this.Mf.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(F){if(!F)return;const P=F.Sf,f=F._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(F.nf&&f)for(const N of F.nf){const F=N._drawWrappers;for(let q=0;q<F.length;q++){var c;const H=null===(c=F[q])||void 0===c?void 0:c.effect;if(!H)continue;f[q]===this&&(null===P||void 0===P||P._releaseVertexArrayObject(H),N._removeDrawWrapper(q,!0,!0))}}}else null===P||void 0===P||P._releaseVertexArrayObject(this._drawWrapper.effect);F.material!==this||F.sourceMesh||(F.material=null)}serialize(){const F=Y.e.Serialize(this);return F.stencil=this.stencil.serialize(),F.uniqueId=this.uniqueId,this._serializePlugins(F),F}_serializePlugins(F){if(F.plugins={},this.pluginManager)for(const P of this.pluginManager._plugins)P.doNotSerialize||(F.plugins[P.getClassName()]=P.serialize())}static Parse(F,P,f){if(F.customType){if("BABYLON.PBRMaterial"===F.customType&&F.overloadedAlbedo&&(F.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return i.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else F.customType="BABYLON.StandardMaterial";const c=q.Tools.Instantiate(F.customType).Parse(F,P,f);return c._loadedUniqueId=F.uniqueId,c}static _ParsePlugins(F,P,f,c){if(F.plugins)for(const A in F.plugins){var N,H;const o=F.plugins[A];let j=null===(N=P.pluginManager)||void 0===N?void 0:N.getPlugin(o.name);if(!j){const F=q.Tools.Instantiate("BABYLON."+A);F&&(j=new F(P))}null===(H=j)||void 0===H||H.parse(o,f,c)}}}L.TriangleFillMode=0,L.WireFrameFillMode=1,L.PointFillMode=2,L.PointListDrawMode=3,L.LineListDrawMode=4,L.LineLoopDrawMode=5,L.LineStripDrawMode=6,L.TriangleStripDrawMode=7,L.TriangleFanDrawMode=8,L.ClockWiseSideOrientation=0,L.CounterClockWiseSideOrientation=1,L.ImageProcessingDirtyFlag=64,L.TextureDirtyFlag=1,L.LightDirtyFlag=2,L.FresnelDirtyFlag=4,L.AttributesDirtyFlag=8,L.MiscDirtyFlag=16,L.PrePassDirtyFlag=32,L.AllDirtyFlag=127,L.MATERIAL_OPAQUE=0,L.MATERIAL_ALPHATEST=1,L.MATERIAL_ALPHABLEND=2,L.MATERIAL_ALPHATESTANDBLEND=3,L.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,L.MATERIAL_NORMALBLENDMETHOD_RNM=1,L.OnEventObservable=new H.d,L._AllDirtyCallBack=F=>F.markAllAsDirty(),L._ImageProcessingDirtyCallBack=F=>F.markAsImageProcessingDirty(),L._TextureDirtyCallBack=F=>F.markAsTexturesDirty(),L._FresnelDirtyCallBack=F=>F.markAsFresnelDirty(),L._MiscDirtyCallBack=F=>F.markAsMiscDirty(),L._PrePassDirtyCallBack=F=>F.markAsPrePassDirty(),L._LightsDirtyCallBack=F=>F.markAsLightDirty(),L._AttributeDirtyCallBack=F=>F.markAsAttributesDirty(),L._FresnelAndMiscDirtyCallBack=F=>{L._FresnelDirtyCallBack(F),L._MiscDirtyCallBack(F)},L._TextureAndMiscDirtyCallBack=F=>{L._TextureDirtyCallBack(F),L._MiscDirtyCallBack(F)},L._DirtyCallbackArray=[],L._RunDirtyCallBacks=F=>{for(const P of L._DirtyCallbackArray)P(F)},(0,c.e)([(0,N.L)()],L.prototype,"id",void 0),(0,c.e)([(0,N.L)()],L.prototype,"uniqueId",void 0),(0,c.e)([(0,N.L)()],L.prototype,"name",void 0),(0,c.e)([(0,N.L)()],L.prototype,"metadata",void 0),(0,c.e)([(0,N.L)()],L.prototype,"checkReadyOnEveryCall",void 0),(0,c.e)([(0,N.L)()],L.prototype,"checkReadyOnlyOnce",void 0),(0,c.e)([(0,N.L)()],L.prototype,"state",void 0),(0,c.e)([(0,N.L)("alpha")],L.prototype,"_alpha",void 0),(0,c.e)([(0,N.L)("Pc")],L.prototype,"_backFaceCulling",void 0),(0,c.e)([(0,N.L)("cullBackFaces")],L.prototype,"_cullBackFaces",void 0),(0,c.e)([(0,N.L)()],L.prototype,"sideOrientation",void 0),(0,c.e)([(0,N.L)("alphaMode")],L.prototype,"_alphaMode",void 0),(0,c.e)([(0,N.L)()],L.prototype,"_needDepthPrePass",void 0),(0,c.e)([(0,N.L)()],L.prototype,"disableDepthWrite",void 0),(0,c.e)([(0,N.L)()],L.prototype,"disableColorWrite",void 0),(0,c.e)([(0,N.L)()],L.prototype,"forceDepthWrite",void 0),(0,c.e)([(0,N.L)()],L.prototype,"depthFunction",void 0),(0,c.e)([(0,N.L)()],L.prototype,"separateCullingPass",void 0),(0,c.e)([(0,N.L)("fogEnabled")],L.prototype,"_fogEnabled",void 0),(0,c.e)([(0,N.L)()],L.prototype,"pointSize",void 0),(0,c.e)([(0,N.L)()],L.prototype,"zOffset",void 0),(0,c.e)([(0,N.L)()],L.prototype,"zOffsetUnits",void 0),(0,c.e)([(0,N.L)()],L.prototype,"pointsCloud",null),(0,c.e)([(0,N.L)()],L.prototype,"fillMode",null),(0,c.e)([(0,N.L)()],L.prototype,"useLogarithmicDepth",null),(0,c.e)([(0,N.L)()],L.prototype,"transparencyMode",null)},11973:(F,P,f)=>{f.d(P,{$:()=>I,D:()=>z,F:()=>O,J:()=>d,M:()=>Y,O:()=>T,P:()=>k,S:()=>x,W:()=>Q,Y:()=>J,Z:()=>V,ab:()=>E,c:()=>Z,cb:()=>r,eb:()=>p,f:()=>u,ib:()=>t,j:()=>y,n:()=>i,o:()=>C,s:()=>L,v:()=>B,z:()=>M});var c=f(11474),N=f(11690),q=f(11501),H=f(11919),A=f(11976);const o=N.BP.Black(),j={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function i(F,P,f){if(!F||F.LOGARITHMICDEPTH||F.indexOf&&F.indexOf("LOGARITHMICDEPTH")>=0){const F=f.activeCamera;1===F.mode&&c.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),P.setFloat("logarithmicDepthConstant",2/(Math.log(F.maxZ+1)/Math.LN2))}}function u(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]&&arguments[3];f&&F.fogEnabled&&(!P||P.applyFog)&&0!==F.fogMode&&(f.setFloat4("vFogInfos",F.fogMode,F.fogStart,F.fogEnd,F.fogDensity),c?(F.fogColor.toLinearSpaceToRef(o,F.getEngine().useExactSrgbConversions),f.setColor3("vFogColor",o)):f.setColor3("vFogColor",F.fogColor))}function T(F,P,f,c,N,q,H,A,o,i){const u=F.numMaxInfluencers||F.numInfluencers;return u<=0?0:(P.push("#define MORPHTARGETS"),F.hasPositions&&P.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),F.hasNormals&&P.push("#define MORPHTARGETTEXTURE_HASNORMALS"),F.hasTangents&&P.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),F.hasUVs&&P.push("#define MORPHTARGETTEXTURE_HASUVS"),F.hasUV2s&&P.push("#define MORPHTARGETTEXTURE_HASUV2S"),F.hasColors&&P.push("#define MORPHTARGETTEXTURE_HASCOLORS"),F.supportsPositions&&N&&P.push("#define MORPHTARGETS_POSITION"),F.supportsNormals&&q&&P.push("#define MORPHTARGETS_NORMAL"),F.supportsTangents&&H&&P.push("#define MORPHTARGETS_TANGENT"),F.supportsUVs&&A&&P.push("#define MORPHTARGETS_UV"),F.supportsUV2s&&o&&P.push("#define MORPHTARGETS_UV2"),F.supportsColors&&i&&P.push("#define MORPHTARGETS_COLOR"),P.push("#define NUM_MORPH_INFLUENCERS "+u),F.isUsingTextureForTargets&&P.push("#define MORPHTARGETS_TEXTURE"),j.NUM_MORPH_INFLUENCERS=u,j.NORMAL=q,j.TANGENT=H,j.UV=A,j.UV2=o,j.COLOR=i,Y(f,c,j,N),u)}function Y(F,P,f){let N=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const H=f.NUM_MORPH_INFLUENCERS;if(H>0&&q.b.LastCreatedEngine){const A=q.b.LastCreatedEngine.getCaps().maxVertexAttribs,o=P.morphTargetManager;if(null!==o&&void 0!==o&&o.isUsingTextureForTargets)return;const j=o&&o.supportsPositions&&N,i=o&&o.supportsNormals&&f.NORMAL,u=o&&o.supportsTangents&&f.TANGENT,T=o&&o.supportsUVs&&f.UV1,Y=o&&o.supportsUV2s&&f.UV2,t=o&&o.supportsColors&&f.VERTEXCOLOR;for(let f=0;f<H;f++)j&&F.push("position"+f),i&&F.push("normal"+f),u&&F.push("tangent"+f),T&&F.push("uv_"+f),Y&&F.push("uv2_"+f),t&&F.push("color"+f),F.length>A&&c.d.Error("Cannot add more vertex attributes for mesh "+P.name)}}function t(F){let P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];F.push("world0"),F.push("world1"),F.push("world2"),F.push("world3"),P&&(F.push("previousWorld0"),F.push("previousWorld1"),F.push("previousWorld2"),F.push("previousWorld3"))}function C(F,P){const f=F.morphTargetManager;F&&f&&P.setFloatArray("morphTargetInfluences",f.influences)}function L(F,P){P.bindToEffect(F,"Scene")}function J(F,P,f){P._needUVs=!0,P[f]=!0,F.optimizeUVAllocation&&F.getTextureMatrix().isIdentityAs3x2()?(P[f+"DIRECTUV"]=F.coordinatesIndex+1,P["MAINUV"+(F.coordinatesIndex+1)]=!0):P[f+"DIRECTUV"]=0}function B(F,P,f){const c=F.getTextureMatrix();P.sf(f+"Matrix",c)}function z(F,P,f){f.BAKED_VERTEX_ANIMATION_TEXTURE&&f.INSTANCES&&F.push("bakedVertexAnimationSettingsInstanced")}function Z(F,P,f){var c;if(P&&F&&(F.computeBonesUsingShaders&&P._bonesComputationForcedToCPU&&(F.computeBonesUsingShaders=!1),F.useBones&&F.computeBonesUsingShaders&&F.skeleton)){const N=F.skeleton;if(N.isUsingTextureForMatrices&&P.getUniformIndex("boneTextureWidth")>-1){const f=N.getTransformMatrixTexture(F);P.setTexture("boneSampler",f),P.setFloat("boneTextureWidth",4*(N.bones.length+1))}else{const q=N.getTransformMatrices(F);q&&(P.setMatrices("mBones",q),f&&F.OF().prePassRenderer&&F.OF().prePassRenderer.getIndex(2)&&(f.previousBones[F.uniqueId]||(f.previousBones[F.uniqueId]=q.slice()),P.setMatrices("mPreviousBones",f.previousBones[F.uniqueId]),c=q,f.previousBones[F.uniqueId].set(c)))}}}function R(F,P,f,c,N){let q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];F._bindLight(P,f,c,N,q)}function y(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const q=Math.min(P.lightSources.length,N);for(let H=0;H<q;H++){R(P.lightSources[H],H,F,f,"boolean"===typeof c?c:c.SPECULARTERM,P.receiveShadows)}}function O(F,P,f,c){f.NUM_BONE_INFLUENCERS>0&&(c.addCPUSkinningFallback(0,P),F.push("matricesIndices"),F.push("matricesWeights"),f.NUM_BONE_INFLUENCERS>4&&(F.push("matricesIndicesExtra"),F.push("matricesWeightsExtra")))}function d(F,P){(P.INSTANCES||P.THIN_INSTANCES)&&t(F,!!P.PREPASS_VELOCITY),P.INSTANCESCOLOR&&F.push("instanceColor")}function M(F,P){let f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,N=0;for(let q=0;q<f&&F["LIGHT"+q];q++)q>0&&(N=c+q,P.addFallback(N,"LIGHT"+q)),F.SHADOWS||(F["SHADOW"+q]&&P.addFallback(c,"SHADOW"+q),F["SHADOWPCF"+q]&&P.addFallback(c,"SHADOWPCF"+q),F["SHADOWPCSS"+q]&&P.addFallback(c,"SHADOWPCSS"+q),F["SHADOWPOISSON"+q]&&P.addFallback(c,"SHADOWPOISSON"+q),F["SHADOWESM"+q]&&P.addFallback(c,"SHADOWESM"+q),F["SHADOWCLOSEESM"+q]&&P.addFallback(c,"SHADOWCLOSEESM"+q));return N++}function V(F,P,f,c,N,q,H){let A=arguments.length>7&&void 0!==arguments[7]&&arguments[7];H._areMiscDirty&&(H.LOGARITHMICDEPTH=f,H.POINTSIZE=c,H.FOG=N&&function(F,P){return P.fogEnabled&&F.applyFog&&0!==P.fogMode}(F,P),H.NONUNIFORMSCALING=F.nonUniformScaling,H.ALPHATEST=q,H.DECAL_AFTER_DETAIL=A)}function Q(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!f._areLightsDirty)return f._needNormals;let H=0;const A={needNormals:f._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(F.lightsEnabled&&!q)for(const j of P.lightSources)if(K(F,P,j,H,f,c,A),H++,H===N)break;f.SPECULARTERM=A.specularEnabled,f.SHADOWS=A.shadowEnabled;for(let j=H;j<N;j++)void 0!==f["LIGHT"+j]&&(f["LIGHT"+j]=!1,f["HEMILIGHT"+j]=!1,f["POINTLIGHT"+j]=!1,f["DIRLIGHT"+j]=!1,f["SPOTLIGHT"+j]=!1,f["AREALIGHT"+j]=!1,f["SHADOW"+j]=!1,f["SHADOWCSM"+j]=!1,f["SHADOWCSMDEBUG"+j]=!1,f["SHADOWCSMNUM_CASCADES"+j]=!1,f["SHADOWCSMUSESHADOWMAXZ"+j]=!1,f["SHADOWCSMNOBLEND"+j]=!1,f["SHADOWCSM_RIGHTHANDED"+j]=!1,f["SHADOWPCF"+j]=!1,f["SHADOWPCSS"+j]=!1,f["SHADOWPOISSON"+j]=!1,f["SHADOWESM"+j]=!1,f["SHADOWCLOSEESM"+j]=!1,f["SHADOWCUBE"+j]=!1,f["SHADOWLOWQUALITY"+j]=!1,f["SHADOWMEDIUMQUALITY"+j]=!1);const o=F.getEngine().getCaps();return void 0===f.SHADOWFLOAT&&(A.needRebuild=!0),f.SHADOWFLOAT=A.shadowEnabled&&(o.textureFloatRender&&o.textureFloatLinearFiltering||o.textureHalfFloatRender&&o.textureHalfFloatLinearFiltering),f.LIGHTMAPEXCLUDED=A.lightmapMode,A.needRebuild&&f.rebuild(),A.needNormals}function K(F,P,f,c,N,q,A){switch(A.needNormals=!0,void 0===N["LIGHT"+c]&&(A.needRebuild=!0),N["LIGHT"+c]=!0,N["SPOTLIGHT"+c]=!1,N["HEMILIGHT"+c]=!1,N["POINTLIGHT"+c]=!1,N["DIRLIGHT"+c]=!1,N["AREALIGHT"+c]=!1,f.prepareLightSpecificDefines(N,c),N["LIGHT_FALLOFF_PHYSICAL"+c]=!1,N["LIGHT_FALLOFF_GLTF"+c]=!1,N["LIGHT_FALLOFF_STANDARD"+c]=!1,f.falloffType){case H.e.FALLOFF_GLTF:N["LIGHT_FALLOFF_GLTF"+c]=!0;break;case H.e.FALLOFF_PHYSICAL:N["LIGHT_FALLOFF_PHYSICAL"+c]=!0;break;case H.e.FALLOFF_STANDARD:N["LIGHT_FALLOFF_STANDARD"+c]=!0}if(q&&!f.ni.equalsFloats(0,0,0)&&(A.specularEnabled=!0),N["SHADOW"+c]=!1,N["SHADOWCSM"+c]=!1,N["SHADOWCSMDEBUG"+c]=!1,N["SHADOWCSMNUM_CASCADES"+c]=!1,N["SHADOWCSMUSESHADOWMAXZ"+c]=!1,N["SHADOWCSMNOBLEND"+c]=!1,N["SHADOWCSM_RIGHTHANDED"+c]=!1,N["SHADOWPCF"+c]=!1,N["SHADOWPCSS"+c]=!1,N["SHADOWPOISSON"+c]=!1,N["SHADOWESM"+c]=!1,N["SHADOWCLOSEESM"+c]=!1,N["SHADOWCUBE"+c]=!1,N["SHADOWLOWQUALITY"+c]=!1,N["SHADOWMEDIUMQUALITY"+c]=!1,P&&P.receiveShadows&&F.shadowsEnabled&&f.shadowEnabled){const P=f.getShadowGenerator(F.activeCamera)??f.getShadowGenerator();if(P){const F=P.getShadowMap();F&&F.renderList&&F.renderList.length>0&&(A.shadowEnabled=!0,P.prepareDefines(N,c))}}f.lightmapMode!=H.e.LIGHTMAP_DEFAULT?(A.lightmapMode=!0,N["LIGHTMAPEXCLUDED"+c]=!0,N["LIGHTMAPNOSPECULAR"+c]=f.lightmapMode==H.e.LIGHTMAP_SHADOWSONLY):(N["LIGHTMAPEXCLUDED"+c]=!1,N["LIGHTMAPNOSPECULAR"+c]=!1)}function x(F,P,f,c,N){let q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,H=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=function(F,P){let f=!1;if(F.activeCamera){const c=P.CAMERA_ORTHOGRAPHIC?1:0,N=P.CAMERA_PERSPECTIVE?1:0,q=1===F.activeCamera.mode?1:0,H=0===F.activeCamera.mode?1:0;(c^q||N^H)&&(P.CAMERA_ORTHOGRAPHIC=1===q,P.CAMERA_PERSPECTIVE=1===H,f=!0)}return f}(F,c);!1!==q&&(o=(0,A.h)(f,F,c)),c.DEPTHPREPASS!==!P.getColorWrite()&&(c.DEPTHPREPASS=!c.DEPTHPREPASS,o=!0),c.INSTANCES!==N&&(c.INSTANCES=N,o=!0),c.THIN_INSTANCES!==H&&(c.THIN_INSTANCES=H,o=!0),o&&c.markAsUnprocessed()}function k(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4],q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],H=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!P._areAttributesDirty&&P._needNormals===P._normals&&P._needUVs===P._uvs)return!1;P._normals=P._needNormals,P._uvs=P._needUVs,P.NORMAL=P._needNormals&&F.isVerticesDataPresent("normal"),P._needNormals&&F.isVerticesDataPresent("tangent")&&(P.TANGENT=!0);for(let A=1;A<=6;++A)P["UV"+A]=!!P._needUVs&&F.isVerticesDataPresent(`uv${1===A?"":A}`);if(f){const f=F.useVertexColors&&F.isVerticesDataPresent("color");P.VERTEXCOLOR=f,P.VERTEXALPHA=F.hasVertexAlpha&&f&&q}return F.isVerticesDataPresent("instanceColor")&&(F.hasInstances||F.hasThinInstances)&&(P.INSTANCESCOLOR=!0),c&&function(F,P){if(F.useBones&&F.computeBonesUsingShaders&&F.skeleton){P.NUM_BONE_INFLUENCERS=F.numBoneInfluencers;const f=void 0!==P.BONETEXTURE;if(F.skeleton.isUsingTextureForMatrices&&f)P.BONETEXTURE=!0;else{P.BonesPerMesh=F.skeleton.bones.length+1,P.BONETEXTURE=!f&&void 0;const c=F.OF().prePassRenderer;if(c&&c.enabled){const f=-1===c.excludedSkinnedMesh.indexOf(F);P.BONES_VELOCITY_ENABLED=f}}}else P.NUM_BONE_INFLUENCERS=0,P.BonesPerMesh=0,void 0!==P.BONETEXTURE&&(P.BONETEXTURE=!1)}(F,P),N&&function(F,P){const f=F.morphTargetManager;f?(P.MORPHTARGETS_UV=f.supportsUVs&&P.UV1,P.MORPHTARGETS_UV2=f.supportsUV2s&&P.UV2,P.MORPHTARGETS_TANGENT=f.supportsTangents&&P.TANGENT,P.MORPHTARGETS_NORMAL=f.supportsNormals&&P.NORMAL,P.MORPHTARGETS_POSITION=f.supportsPositions,P.MORPHTARGETS_COLOR=f.supportsColors,P.MORPHTARGETTEXTURE_HASUVS=f.hasUVs,P.MORPHTARGETTEXTURE_HASUV2S=f.hasUV2s,P.MORPHTARGETTEXTURE_HASTANGENTS=f.hasTangents,P.MORPHTARGETTEXTURE_HASNORMALS=f.hasNormals,P.MORPHTARGETTEXTURE_HASPOSITIONS=f.hasPositions,P.MORPHTARGETTEXTURE_HASCOLORS=f.hasColors,P.NUM_MORPH_INFLUENCERS=f.numMaxInfluencers||f.numInfluencers,P.MORPHTARGETS=P.NUM_MORPH_INFLUENCERS>0,P.MORPHTARGETS_TEXTURE=f.isUsingTextureForTargets):(P.MORPHTARGETS_UV=!1,P.MORPHTARGETS_UV2=!1,P.MORPHTARGETS_TANGENT=!1,P.MORPHTARGETS_NORMAL=!1,P.MORPHTARGETS_POSITION=!1,P.MORPHTARGETS_COLOR=!1,P.MORPHTARGETTEXTURE_HASUVS=!1,P.MORPHTARGETTEXTURE_HASUV2S=!1,P.MORPHTARGETTEXTURE_HASTANGENTS=!1,P.MORPHTARGETTEXTURE_HASNORMALS=!1,P.MORPHTARGETTEXTURE_HASPOSITIONS=!1,P.MORPHTARGETTEXTURE_HAS_COLORS=!1,P.MORPHTARGETS=!1,P.NUM_MORPH_INFLUENCERS=0)}(F,P),H&&function(F,P){const f=F.bakedVertexAnimationManager;P.BAKED_VERTEX_ANIMATION_TEXTURE=!(!f||!f.isEnabled)}(F,P),!0}function I(F,P){if(F.activeCamera){const f=P.MULTIVIEW;P.MULTIVIEW=null!==F.activeCamera.outputRenderTarget&&F.activeCamera.outputRenderTarget.getViewCount()>1,P.MULTIVIEW!=f&&P.markAsUnprocessed()}}function E(F,P,f){const c=P.ORDER_INDEPENDENT_TRANSPARENCY,N=P.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;P.ORDER_INDEPENDENT_TRANSPARENCY=F.useOrderIndependentTransparency&&f,P.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!F.getEngine().getCaps().textureFloatLinearFiltering,c===P.ORDER_INDEPENDENT_TRANSPARENCY&&N===P.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||P.markAsUnprocessed()}function r(F,P,f){const c=P.PREPASS;if(!P._arePrePassDirty)return;const N=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(F.prePassRenderer&&F.prePassRenderer.enabled&&f){P.PREPASS=!0,P.SCENE_MRT_COUNT=F.prePassRenderer.mrtCount,P.PREPASS_NORMAL_WORLDSPACE=F.prePassRenderer.generateNormalsInWorldSpace,P.PREPASS_COLOR=!0,P.PREPASS_COLOR_INDEX=0;for(let f=0;f<N.length;f++){const c=F.prePassRenderer.getIndex(N[f].type);-1!==c?(P[N[f].define]=!0,P[N[f].index]=c):P[N[f].define]=!1}}else{P.PREPASS=!1;for(let F=0;F<N.length;F++)P[N[F].define]=!1}P.PREPASS!=c&&(P.markAsUnprocessed(),P.markAsImageProcessingDirty())}function n(F,P,f,c){let N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6&&void 0!==arguments[6]&&arguments[6];N&&N.push("Light"+F),q||(P.push("vLightData"+F,"vLightDiffuse"+F,"vLightSpecular"+F,"vLightDirection"+F,"vLightWidth"+F,"vLightHeight"+F,"vLightFalloff"+F,"vLightGround"+F,"lightMatrix"+F,"shadowsInfo"+F,"depthValues"+F),f.push("shadowTexture"+F),f.push("depthTexture"+F),P.push("viewFrustumZ"+F,"cascadeBlendFactor"+F,"lightSizeUVCorrection"+F,"depthCorrection"+F,"penumbraDarkness"+F,"frustumLengths"+F),c&&(f.push("projectionLightTexture"+F),P.push("textureProjectionMatrix"+F)),H&&f.push("iesLightTexture"+F))}function p(F,P,f){let c,N,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(F.uniformsNames){const H=F;c=H.uniformsNames,N=H.uniformBuffersNames,P=H.samplers,f=H.defines,q=H.maxSimultaneousLights||0}else c=F,P||(P=[]);for(let H=0;H<q&&f["LIGHT"+H];H++)n(H,c,P,f["PROJECTEDLIGHTTEXTURE"+H],N,!1,f["IESLIGHTTEXTURE"+H]);f.NUM_MORPH_INFLUENCERS&&(c.push("morphTargetInfluences"),c.push("morphTargetCount")),f.BAKED_VERTEX_ANIMATION_TEXTURE&&(c.push("bakedVertexAnimationSettings"),c.push("bakedVertexAnimationTextureSizeInverted"),c.push("bakedVertexAnimationTime"),P.push("bakedVertexAnimationTexture"))}},11931:(F,P,f)=>{f.d(P,{d:()=>q});var c=f(11639),N=f(11937);class q extends N.d{constructor(F,P){let f=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(F,P,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new c.Matrix,this._storeEffectOnSubMeshes=f}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(F,P){return!!F&&(!this._storeEffectOnSubMeshes||(!F.nf||0===F.nf.length||this.isReadyForSubMesh(F,F.nf[0],P)))}_isReadyForSubMesh(F){const P=F.materialDefines;return!(this.checkReadyOnEveryCall||!F.effect||!P||P._renderId!==this.OF().getRenderId())}bindOnlyWorldMatrix(F){this._activeEffect.setMatrix("world",F)}bindOnlyNormalMatrix(F){this._activeEffect.setMatrix("normalMatrix",F)}bind(F,P){P&&this.bindForSubMesh(F,P,P.nf[0])}_afterBind(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,f=arguments.length>2?arguments[2]:void 0;super._afterBind(F,P,f),this.OF()._cachedEffect=P,f?f._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return f._drawWrapper._forceRebindOnNextCall||F.isCachedMaterialInvalid(this,P,c)}dispose(F,P,f){this._activeEffect=void 0,super.dispose(F,P,f)}}},11967:(F,P,f)=>{f.d(P,{c:()=>A,f:()=>o});var c=f(11619),N=f(11639),q=f(11628);class H{static extractMinAndMaxIndexed(F,P,f,c,N,q){for(let H=f;H<f+c;H++){const f=3*P[H],c=F[f],A=F[f+1],o=F[f+2];N.minimizeInPlaceFromFloats(c,A,o),q.maximizeInPlaceFromFloats(c,A,o)}}static extractMinAndMax(F,P,f,c,N,q){for(let H=P,A=P*c;H<P+f;H++,A+=c){const P=F[A],f=F[A+1],c=F[A+2];N.minimizeInPlaceFromFloats(P,f,c),q.maximizeInPlaceFromFloats(P,f,c)}}}function A(F,P,f,c){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const A=new N.tP(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new N.tP(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return H.extractMinAndMaxIndexed(F,P,f,c,A,o),q&&(A.x-=A.x*q.x+q.y,A.y-=A.y*q.x+q.y,A.z-=A.z*q.x+q.y,o.x+=o.x*q.x+q.y,o.y+=o.y*q.x+q.y,o.z+=o.z*q.x+q.y),{minimum:A,maximum:o}}function o(F,P,f){let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,q=arguments.length>4?arguments[4]:void 0;const A=new N.tP(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new N.tP(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return q||(q=3),H.extractMinAndMax(F,P,f,q,A,o),c&&(A.x-=A.x*c.x+c.y,A.y-=A.y*c.x+c.y,A.z-=A.z*c.x+c.y,o.x+=o.x*c.x+c.y,o.y+=o.y*c.x+c.y,o.z+=o.z*c.x+c.y),{minimum:A,maximum:o}}(0,c.e)([q.g.filter((function(){for(var F=arguments.length,P=new Array(F),f=0;f<F;f++)P[f]=arguments[f];let[c,N]=P;return!Array.isArray(c)&&!Array.isArray(N)}))],H,"extractMinAndMaxIndexed",null),(0,c.e)([q.g.filter((function(){for(var F=arguments.length,P=new Array(F),f=0;f<F;f++)P[f]=arguments[f];let[c]=P;return!Array.isArray(c)}))],H,"extractMinAndMax",null)},11940:(F,P,f)=>{f.d(P,{e:()=>o});var c=f(11706),N=f(11943),q=f(11947),H=f(11967),A=f(11739);class o{get materialDefines(){var F;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(F=this._getDrawWrapper())||void 0===F?void 0:F.defines}set materialDefines(F){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=F}_getDrawWrapper(F){let P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];F=F??this._engine.currentRenderPassId;let f=this._drawWrappers[F];return!f&&P&&(this._drawWrappers[F]=f=new A.d(this._mesh.OF().getEngine())),f}_removeDrawWrapper(F){let P=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var f;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(f=this._drawWrappers[F])||void 0===f||f.dispose(P));this._drawWrappers[F]=void 0}get effect(){var F;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(F=this._getDrawWrapper())||void 0===F?void 0:F.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(F){this._mainDrawWrapperOverride=F}setEffect(F){let P=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,f=arguments.length>2?arguments[2]:void 0,c=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const N=this._drawWrapper;N.setEffect(F,P,c),void 0!==f&&(N.materialContext=f),F||(N.defines=null,N.materialContext=void 0)}resetDrawCache(F){let P=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==F)return void this._removeDrawWrapper(F,!0,P);for(const F of this._drawWrappers)null===F||void 0===F||F.dispose(P)}this._drawWrappers=[]}static AddToMesh(F,P,f,c,N,q,H){return new o(F,P,f,c,N,q,H,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(F,P,f,c,N,q,H){let A=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=F,this.verticesStart=P,this.verticesCount=f,this.indexStart=c,this.indexCount=N,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=q,this._renderingMesh=H||q,o&&q.nf.push(this),this._engine=this._mesh.OF().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=q.nf.length-1,A&&(this.refreshBoundingInfo(),q.gf(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(F){return this._boundingInfo=F,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const F=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return F||this._renderingMesh}pF(){let F=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const P=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!P)return F&&this._mesh.OF()._hasDefaultMaterial?this._mesh.OF().defaultMaterial:null;if(this._isMultiMaterial(P)){const F=P.getSubMaterial(this.materialIndex);return this._currentMaterial!==F&&(this._currentMaterial=F,this.resetDrawCache()),F}return P}_isMultiMaterial(F){return void 0!==F.getSubMaterial}refreshBoundingInfo(){let F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.Sf)return this;if(F||(F=this._renderingMesh.getVerticesData(c.f.PositionKind)),!F)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const P=this._renderingMesh.Fc();let f;if(0===this.indexStart&&this.indexCount===P.length){const F=this._renderingMesh.getBoundingInfo();f={minimum:F.minimum.clone(),maximum:F.maximum.clone()}}else f=(0,H.c)(F,P,this.indexStart,this.indexCount,this._renderingMesh.Sf.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(f.minimum,f.maximum):this._boundingInfo=new q.b(f.minimum,f.maximum),this}_checkCollision(F){return this.getBoundingInfo()._checkCollision(F)}updateBoundingInfo(F){let P=this.getBoundingInfo();return P||(this.refreshBoundingInfo(),P=this.getBoundingInfo()),P&&P.update(F),this}isInFrustum(F){const P=this.getBoundingInfo();return!!P&&P.isInFrustum(F,this._mesh.Uu)}isCompletelyInFrustum(F){const P=this.getBoundingInfo();return!!P&&P.isCompletelyInFrustum(F)}render(F){return this._renderingMesh.render(this,F,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(F,P){if(!this._linesIndexBuffer){const f=6*Math.floor(this.indexCount/3),c=this.verticesStart+this.verticesCount>65535?new Uint32Array(f):new Uint16Array(f);let N=0;if(0===F.length)for(let F=this.indexStart;F<this.indexStart+this.indexCount;F+=3)c[N++]=F,c[N++]=F+1,c[N++]=F+1,c[N++]=F+2,c[N++]=F+2,c[N++]=F;else for(let P=this.indexStart;P<this.indexStart+this.indexCount;P+=3)c[N++]=F[P],c[N++]=F[P+1],c[N++]=F[P+1],c[N++]=F[P+2],c[N++]=F[P+2],c[N++]=F[P];this._linesIndexBuffer=P.createIndexBuffer(c),this._linesIndexCount=c.length}return this._linesIndexBuffer}canIntersects(F){const P=this.getBoundingInfo();return!!P&&F.intersectsBox(P.boundingBox)}intersects(F,P,f,c,N){const q=this.pF();if(!q)return null;let H=3,A=!1;switch(q.fillMode){case 3:case 5:case 6:case 8:return null;case 7:H=1,A=!0}return 4===q.fillMode?f.length?this._intersectLines(F,P,f,this._mesh.intersectionThreshold,c):this._intersectUnIndexedLines(F,P,f,this._mesh.intersectionThreshold,c):!f.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(F,P,f,c,N):this._intersectTriangles(F,P,f,H,A,c,N)}_intersectLines(F,P,f,c,q){let H=null;for(let A=this.indexStart;A<this.indexStart+this.indexCount;A+=2){const o=P[f[A]],j=P[f[A+1]],i=F.intersectionSegment(o,j,c);if(!(i<0)&&((q||!H||i<H.distance)&&(H=new N.d(null,null,i),H.faceId=A/2,q)))break}return H}_intersectUnIndexedLines(F,P,f,c,q){let H=null;for(let A=this.verticesStart;A<this.verticesStart+this.verticesCount;A+=2){const f=P[A],o=P[A+1],j=F.intersectionSegment(f,o,c);if(!(j<0)&&((q||!H||j<H.distance)&&(H=new N.d(null,null,j),H.faceId=A/2,q)))break}return H}_intersectTriangles(F,P,f,c,N,q,H){let A=null,o=-1;for(let j=this.indexStart;j<this.indexStart+this.indexCount-(3-c);j+=c){o++;const c=f[j],i=f[j+1],u=f[j+2];if(N&&4294967295===u){j+=2;continue}const T=P[c],Y=P[i],t=P[u];if(!T||!Y||!t)continue;if(H&&!H(T,Y,t,F,c,i,u))continue;const C=F.intersectsTriangle(T,Y,t);if(C){if(C.distance<0)continue;if((q||!A||C.distance<A.distance)&&(A=C,A.faceId=o,q))break}}return A}_intersectUnIndexedTriangles(F,P,f,c,N){let q=null;for(let H=this.verticesStart;H<this.verticesStart+this.verticesCount;H+=3){const f=P[H],A=P[H+1],o=P[H+2];if(N&&!N(f,A,o,F,-1,-1,-1))continue;const j=F.intersectsTriangle(f,A,o);if(j){if(j.distance<0)continue;if((c||!q||j.distance<q.distance)&&(q=j,q.faceId=H/3,c))break}}return q}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(F,P){const f=new o(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,F,P,!1);if(!this.IsGlobal){const F=this.getBoundingInfo();if(!F)return f;f._boundingInfo=new q.b(F.minimum,F.maximum)}return f}dispose(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.OF().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const P=this._mesh.nf.indexOf(this);this._mesh.nf.splice(P,1),this.resetDrawCache(void 0,F)}getClassName(){return"SubMesh"}static CreateFromIndices(F,P,f,c,N){let q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],H=Number.MAX_VALUE,A=-Number.MAX_VALUE;const j=(N||c).Fc();for(let o=P;o<P+f;o++){const F=j[o];F<H&&(H=F),F>A&&(A=F)}return new o(F,H,A-H+1,P,f,c,N,q)}}}}]);