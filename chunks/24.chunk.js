"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[24],{12711:(N,p,T)=>{T.d(p,{b:()=>A});class A{constructor(N,p,T){this.bu=N,this.bv=p,this.distance=T,this.faceId=0,this.subMeshId=0}}},12719:(N,p,T)=>{T.d(p,{d:()=>U});var A=T(12384),a=T(12371),C=T(12376);class U{constructor(N,p,T){this.vectors=(0,A.e)(8,a.xp.Zero),this.center=a.xp.Zero(),this.centerWorld=a.xp.Zero(),this.extendSize=a.xp.Zero(),this.extendSizeWorld=a.xp.Zero(),this.directions=(0,A.e)(3,a.xp.Zero),this.vectorsWorld=(0,A.e)(8,a.xp.Zero),this.minimumWorld=a.xp.Zero(),this.maximumWorld=a.xp.Zero(),this.minimum=a.xp.Zero(),this.maximum=a.xp.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(N,p,T)}reConstruct(N,p,T){const A=N.x,C=N.y,U=N.z,X=p.x,y=p.y,e=p.z,H=this.vectors;this.minimum.kX(A,C,U),this.maximum.kX(X,y,e),H[0].kX(A,C,U),H[1].kX(X,y,e),H[2].kX(X,C,U),H[3].kX(A,y,U),H[4].kX(A,C,e),H[5].kX(X,y,U),H[6].kX(A,y,e),H[7].kX(X,C,e),p.addToRef(N,this.center).scaleInPlace(.5),p.subtractToRef(N,this.extendSize).scaleInPlace(.5),this._worldMatrix=T||a.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(N){const p=U._TmpVector3,T=this.maximum.subtractToRef(this.minimum,p[0]),A=T.length();T.normalizeFromLength(A);const a=A*N,C=T.scaleInPlace(.5*a),X=this.center.subtractToRef(C,p[1]),y=this.center.addToRef(C,p[2]);return this.reConstruct(X,y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(N){const p=this.minimumWorld,T=this.maximumWorld,A=this.directions,C=this.vectorsWorld,U=this.vectors;if(N.isIdentity()){p.A(this.minimum),T.A(this.maximum);for(let N=0;N<8;++N)C[N].A(U[N]);this.extendSizeWorld.A(this.extendSize),this.centerWorld.A(this.center)}else{p.IX(Number.MAX_VALUE),T.IX(-Number.MAX_VALUE);for(let A=0;A<8;++A){const X=C[A];a.xp.TransformCoordinatesToRef(U[A],N,X),p.minimizeInPlace(X),T.maximizeInPlace(X)}T.subtractToRef(p,this.extendSizeWorld).scaleInPlace(.5),T.addToRef(p,this.centerWorld).scaleInPlace(.5)}a.xp.FromArrayToRef(N.m,0,A[0]),a.xp.FromArrayToRef(N.m,4,A[1]),a.xp.FromArrayToRef(N.m,8,A[2]),this._worldMatrix=N}isInFrustum(N){return U.IsInFrustum(this.vectorsWorld,N)}isCompletelyInFrustum(N){return U.IsCompletelyInFrustum(this.vectorsWorld,N)}intersectsPoint(N){const p=this.minimumWorld,T=this.maximumWorld,A=p.x,a=p.y,U=p.z,X=T.x,y=T.y,e=T.z,H=N.x,M=N.y,b=N.z,l=-C.b;return!(X-H<l||l>H-A)&&(!(y-M<l||l>M-a)&&!(e-b<l||l>b-U))}intersectsSphere(N){return U.IntersectsSphere(this.minimumWorld,this.maximumWorld,N.centerWorld,N.radiusWorld)}intersectsMinMax(N,p){const T=this.minimumWorld,A=this.maximumWorld,a=T.x,C=T.y,U=T.z,X=A.x,y=A.y,e=A.z,H=N.x,M=N.y,b=N.z,l=p.x,k=p.y,x=p.z;return!(X<H||a>l)&&(!(y<M||C>k)&&!(e<b||U>x))}dispose(){var N,p;null===(N=this._drawWrapperFront)||void 0===N||N.dispose(),null===(p=this._drawWrapperBack)||void 0===p||p.dispose()}static Intersects(N,p){return N.intersectsMinMax(p.minimumWorld,p.maximumWorld)}static IntersectsSphere(N,p,T,A){const C=U._TmpVector3[0];a.xp.ClampToRef(T,N,p,C);return a.xp.DistanceSquared(T,C)<=A*A}static IsCompletelyInFrustum(N,p){for(let T=0;T<6;++T){const A=p[T];for(let p=0;p<8;++p)if(A.dotCoordinate(N[p])<0)return!1}return!0}static IsInFrustum(N,p){for(let T=0;T<6;++T){let A=!0;const a=p[T];for(let p=0;p<8;++p)if(a.dotCoordinate(N[p])>=0){A=!1;break}if(A)return!1}return!0}}U._TmpVector3=(0,A.e)(3,a.xp.Zero)},12717:(N,p,T)=>{T.d(p,{d:()=>M});var A=T(12384),a=T(12371),C=T(12719),U=T(12721);const X={min:0,max:0},y={min:0,max:0},e=(N,p,T)=>{const A=a.xp.Dot(p.centerWorld,N),C=Math.abs(a.xp.Dot(p.directions[0],N))*p.extendSize.x+Math.abs(a.xp.Dot(p.directions[1],N))*p.extendSize.y+Math.abs(a.xp.Dot(p.directions[2],N))*p.extendSize.z;T.min=A-C,T.max=A+C},H=(N,p,T)=>(e(N,p,X),e(N,T,y),!(X.min>y.max||y.min>X.max));class M{constructor(N,p,T){this._isLocked=!1,this.boundingBox=new C.d(N,p,T),this.boundingSphere=new U.c(N,p,T)}reConstruct(N,p,T){this.boundingBox.reConstruct(N,p,T),this.boundingSphere.reConstruct(N,p,T)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(N){this._isLocked=N}update(N){this._isLocked||(this.boundingBox._update(N),this.boundingSphere._update(N))}centerOn(N,p){const T=M._TmpVector3[0].A(N).iM(p),A=M._TmpVector3[1].A(N).addInPlace(p);return this.boundingBox.reConstruct(T,A,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(T,A,this.boundingBox.getWorldMatrix()),this}encapsulate(N){const p=a.xp.Minimize(this.minimum,N),T=a.xp.Maximize(this.maximum,N);return this.reConstruct(p,T,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(N){const p=a.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(p);const T=a.TmpVectors.xp[0];return a.xp.TransformCoordinatesToRef(N.boundingBox.minimumWorld,p,T),this.encapsulate(T),a.xp.TransformCoordinatesToRef(N.boundingBox.maximumWorld,p,T),this.encapsulate(T),this}scale(N){return this.boundingBox.scale(N),this.boundingSphere.scale(N),this}isInFrustum(N){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===p||3===p)&&this.boundingSphere.isCenterInFrustum(N))return!0;if(!this.boundingSphere.isInFrustum(N))return!1;return!(1!==p&&3!==p)||this.boundingBox.isInFrustum(N)}get diagonalLength(){const N=this.boundingBox;return N.maximumWorld.subtractToRef(N.minimumWorld,M._TmpVector3[0]).length()}isCompletelyInFrustum(N){return this.boundingBox.isCompletelyInFrustum(N)}_checkCollision(N){return N._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(N){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(N)&&!!this.boundingBox.intersectsPoint(N))}intersects(N,p){if(!U.c.Intersects(this.boundingSphere,N.boundingSphere))return!1;if(!C.d.Intersects(this.boundingBox,N.boundingBox))return!1;if(!p)return!0;const T=this.boundingBox,A=N.boundingBox;return!!H(T.directions[0],T,A)&&(!!H(T.directions[1],T,A)&&(!!H(T.directions[2],T,A)&&(!!H(A.directions[0],T,A)&&(!!H(A.directions[1],T,A)&&(!!H(A.directions[2],T,A)&&(!!H(a.xp.Cross(T.directions[0],A.directions[0]),T,A)&&(!!H(a.xp.Cross(T.directions[0],A.directions[1]),T,A)&&(!!H(a.xp.Cross(T.directions[0],A.directions[2]),T,A)&&(!!H(a.xp.Cross(T.directions[1],A.directions[0]),T,A)&&(!!H(a.xp.Cross(T.directions[1],A.directions[1]),T,A)&&(!!H(a.xp.Cross(T.directions[1],A.directions[2]),T,A)&&(!!H(a.xp.Cross(T.directions[2],A.directions[0]),T,A)&&(!!H(a.xp.Cross(T.directions[2],A.directions[1]),T,A)&&!!H(a.xp.Cross(T.directions[2],A.directions[2]),T,A))))))))))))))}}M._TmpVector3=(0,A.e)(2,a.xp.Zero)},12721:(N,p,T)=>{T.d(p,{c:()=>C});var A=T(12384),a=T(12371);class C{constructor(N,p,T){this.center=a.xp.Zero(),this.centerWorld=a.xp.Zero(),this.minimum=a.xp.Zero(),this.maximum=a.xp.Zero(),this.reConstruct(N,p,T)}reConstruct(N,p,T){this.minimum.A(N),this.maximum.A(p);const A=a.xp.Distance(N,p);p.addToRef(N,this.center).scaleInPlace(.5),this.radius=.5*A,this._update(T||a.Matrix.IdentityReadOnly)}scale(N){const p=this.radius*N,T=C._TmpVector3,A=T[0].IX(p),a=this.center.subtractToRef(A,T[1]),U=this.center.addToRef(A,T[2]);return this.reConstruct(a,U,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(N){if(N.isIdentity())this.centerWorld.A(this.center),this.radiusWorld=this.radius;else{a.xp.TransformCoordinatesToRef(this.center,N,this.centerWorld);const p=C._TmpVector3[0];a.xp.TransformNormalFromFloatsToRef(1,1,1,N,p),this.radiusWorld=Math.max(Math.abs(p.x),Math.abs(p.y),Math.abs(p.z))*this.radius}}isInFrustum(N){const p=this.centerWorld,T=this.radiusWorld;for(let A=0;A<6;A++)if(N[A].dotCoordinate(p)<=-T)return!1;return!0}isCenterInFrustum(N){const p=this.centerWorld;for(let T=0;T<6;T++)if(N[T].dotCoordinate(p)<0)return!1;return!0}intersectsPoint(N){const p=a.xp.DistanceSquared(this.centerWorld,N);return!(this.radiusWorld*this.radiusWorld<p)}static Intersects(N,p){const T=a.xp.DistanceSquared(N.centerWorld,p.centerWorld),A=N.radiusWorld+p.radiusWorld;return!(A*A<T)}static CreateFromCenterAndRadius(N,p,T){this._TmpVector3[0].A(N),this._TmpVector3[1].kX(0,0,p),this._TmpVector3[2].A(N),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].iM(this._TmpVector3[1]);const A=new C(this._TmpVector3[0],this._TmpVector3[2]);return A._worldMatrix=T||a.Matrix.Identity(),A}}C._TmpVector3=(0,A.e)(3,a.xp.Zero)},12736:(N,p,T)=>{function A(N){-1===N.indexOf("vClipPlane")&&N.push("vClipPlane"),-1===N.indexOf("vClipPlane2")&&N.push("vClipPlane2"),-1===N.indexOf("vClipPlane3")&&N.push("vClipPlane3"),-1===N.indexOf("vClipPlane4")&&N.push("vClipPlane4"),-1===N.indexOf("vClipPlane5")&&N.push("vClipPlane5"),-1===N.indexOf("vClipPlane6")&&N.push("vClipPlane6")}function a(N,p,T){const A=!!(N.clipPlane??p.clipPlane),a=!!(N.clipPlane2??p.clipPlane2),C=!!(N.clipPlane3??p.clipPlane3),U=!!(N.clipPlane4??p.clipPlane4),X=!!(N.clipPlane5??p.clipPlane5),y=!!(N.clipPlane6??p.clipPlane6);A&&T.push("#define CLIPPLANE"),a&&T.push("#define CLIPPLANE2"),C&&T.push("#define CLIPPLANE3"),U&&T.push("#define CLIPPLANE4"),X&&T.push("#define CLIPPLANE5"),y&&T.push("#define CLIPPLANE6")}function C(N,p,T){let A=!1;const a=!!(N.clipPlane??p.clipPlane),C=!!(N.clipPlane2??p.clipPlane2),U=!!(N.clipPlane3??p.clipPlane3),X=!!(N.clipPlane4??p.clipPlane4),y=!!(N.clipPlane5??p.clipPlane5),e=!!(N.clipPlane6??p.clipPlane6);return T.CLIPPLANE!==a&&(T.CLIPPLANE=a,A=!0),T.CLIPPLANE2!==C&&(T.CLIPPLANE2=C,A=!0),T.CLIPPLANE3!==U&&(T.CLIPPLANE3=U,A=!0),T.CLIPPLANE4!==X&&(T.CLIPPLANE4=X,A=!0),T.CLIPPLANE5!==y&&(T.CLIPPLANE5=y,A=!0),T.CLIPPLANE6!==e&&(T.CLIPPLANE6=e,A=!0),A}function U(N,p,T){let A=p.clipPlane??T.clipPlane;X(N,"vClipPlane",A),A=p.clipPlane2??T.clipPlane2,X(N,"vClipPlane2",A),A=p.clipPlane3??T.clipPlane3,X(N,"vClipPlane3",A),A=p.clipPlane4??T.clipPlane4,X(N,"vClipPlane4",A),A=p.clipPlane5??T.clipPlane5,X(N,"vClipPlane5",A),A=p.clipPlane6??T.clipPlane6,X(N,"vClipPlane6",A)}function X(N,p,T){T&&N.setFloat4(p,T.normal.x,T.normal.y,T.normal.z,T.d)}T.d(p,{e:()=>A,i:()=>U,m:()=>C,p:()=>a})},12700:(N,p,T)=>{T.d(p,{e:()=>A});class A{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(N,p){this._defines[N]||(N<this._currentRank&&(this._currentRank=N),N>this._maxRank&&(this._maxRank=N),this._defines[N]=new Array),this._defines[N].push(p)}addCPUSkinningFallback(N,p){this._mesh=p,N<this._currentRank&&(this._currentRank=N),N>this._maxRank&&(this._maxRank=N)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(N,p){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,N=N.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),p._bonesComputationForcedToCPU=!0;const T=this._mesh.KN();for(let N=0;N<T.meshes.length;N++){const A=T.meshes[N];if(A.material){if(A.computeBonesUsingShaders&&0!==A.numBoneInfluencers)if(A.material.getEffect()===p)A.computeBonesUsingShaders=!1;else if(A.CX)for(const N of A.CX){if(N.effect===p){A.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&A.computeBonesUsingShaders&&A.numBoneInfluencers>0&&(A.computeBonesUsingShaders=!1)}}else{const p=this._defines[this._currentRank];if(p)for(let T=0;T<p.length;T++)N=N.replace("#define "+p[T],"");this._currentRank++}return N}}},12705:(N,p,T)=>{T.d(p,{c:()=>I});var A=T(12354),a=T(12359),C=T(12190),U=T(12194),X=T(12231),y=T(12708),e=T(12647),H=T(12205),M=T(12429),b=T(12494),l=T(12409);class k{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(N){this._func=N}get funcRef(){return this._funcRef}set funcRef(N){this._funcRef=N}get funcMask(){return this._funcMask}set funcMask(N){this._funcMask=N}get opStencilFail(){return this._opStencilFail}set opStencilFail(N){this._opStencilFail=N}get opDepthFail(){return this._opDepthFail}set opDepthFail(N){this._opDepthFail=N}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(N){this._opStencilDepthPass=N}get mask(){return this._mask}set mask(N){this._mask=N}get enabled(){return this._enabled}set enabled(N){this._enabled=N}getClassName(){return"MaterialStencilState"}copyTo(N){l.e.Clone((()=>N),this)}serialize(){return l.e.Serialize(this)}parse(N,p,T){l.e.Parse((()=>this),N,p,T)}}(0,A.b)([(0,a.H)()],k.prototype,"func",null),(0,A.b)([(0,a.H)()],k.prototype,"funcRef",null),(0,A.b)([(0,a.H)()],k.prototype,"funcMask",null),(0,A.b)([(0,a.H)()],k.prototype,"opStencilFail",null),(0,A.b)([(0,a.H)()],k.prototype,"opDepthFail",null),(0,A.b)([(0,a.H)()],k.prototype,"opStencilDepthPass",null),(0,A.b)([(0,a.H)()],k.prototype,"mask",null),(0,A.b)([(0,a.H)()],k.prototype,"enabled",null);var x=T(12731);class I{get _supportGlowLayer(){return!1}set _glowModeEnabled(N){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(N){if(this._alpha===N)return;const p=this._alpha;this._alpha=N,1!==p&&1!==N||this.bH(I.MiscDirtyFlag+I.PrePassDirtyFlag)}get alpha(){return this._alpha}set lX(N){this._backFaceCulling!==N&&(this._backFaceCulling=N,this.bH(I.TextureDirtyFlag))}get lX(){return this._backFaceCulling}set cullBackFaces(N){this._cullBackFaces!==N&&(this._cullBackFaces=N,this.bH(I.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(N){this._blockDirtyMechanism!==N&&(this._blockDirtyMechanism=N,N||this.rb())}atomicMaterialsUpdate(N){this.blockDirtyMechanism=!0;try{N(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(N){this._onDisposeObserver&&this.SU.remove(this._onDisposeObserver),this._onDisposeObserver=this.SU.add(N)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new U.c),this._onBindObservable}set onBind(N){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(N)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new U.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new U.c),this._onEffectCreatedObservable}set alphaMode(N){this._alphaMode!==N&&(this._alphaMode=N,this.bH(I.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(N){this._needDepthPrePass!==N&&(this._needDepthPrePass=N,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(N){this._fogEnabled!==N&&(this._fogEnabled=N,this.bH(I.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case I.WireFrameFillMode:case I.LineListDrawMode:case I.LineLoopDrawMode:case I.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(N){this.fillMode=N?I.WireFrameFillMode:I.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case I.PointFillMode:case I.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(N){this.fillMode=N?I.PointFillMode:I.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(N){this._fillMode!==N&&(this._fillMode=N,this.bH(I.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(N){const p=this.KN().getEngine().getCaps().fragmentDepthSupported;N&&!p&&H.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=N&&p,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(N){this._drawWrapper=N}constructor(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.SU=new U.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.sU=new k,this._useUBO=!1,this._fillMode=I.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=N;const a=p||X.b.LastCreatedScene;a&&(this._scene=a,this._dirtyCallbacks={},this._forceGLSL=A,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=N||C.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new b.c(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new e.d(this._scene.getEngine(),void 0,void 0,N),this._useUBO=this.KN().getEngine().supportsUniformBuffers,this._createUniformBuffer(),T||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),I.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var N;const p=this.KN().getEngine();null===(N=this._uniformBuffer)||void 0===N||N.dispose(),p.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new e.d(p,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new e.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(N){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.rb(),this.checkReadyOnlyOnce=!0}unfreeze(){this.rb(),this.checkReadyOnlyOnce=!1}isReady(N,p){return!0}isReadyForSubMesh(N,p,T){const A=p.materialDefines;return!!A&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=A,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}KN(){return this._scene}_getEffectiveOrientation(N){return null!==this.sideOrientation?this.sideOrientation:N.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(N){this._transparencyMode!==N&&(this._transparencyMode=N,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===I.MATERIAL_ALPHABLEND||this._transparencyMode===I.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===I.MATERIAL_ALPHATEST||this._transparencyMode===I.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===I.MATERIAL_OPAQUE||this._transparencyMode===I.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(N){return this._hasTransparencyMode?this._transparencyModeIsBlend:N.visibility<1||!this._disableAlphaBlending&&(N.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(N){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(N)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}rb(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const p=this.KN().meshes;for(const T of p)if(T.CX)for(const p of T.CX)if(p.qN()===this)for(const T of p._drawWrappers)T&&this._materialContext===T.materialContext&&(T._wasPreviouslyReady=!1,T._wasPreviouslyUsingInstances=null,T._forceRebindOnNextCall=N);N&&this.bH(I.AllDirtyFlag)}_preBind(N){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const T=this._scene.getEngine(),A=(null==p?this.sideOrientation:p)===I.ClockWiseSideOrientation;return T.enableEffect(N||this._getDrawWrapper()),T.setState(this.lX,this.zOffset,!1,A,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.sU,this.zOffsetUnits),A}bind(N,p){}buildUniformLayout(){const N=this._uniformBuffer;this._eventInfo.ubo=N,this._callbackPluginEventGeneric(8,this._eventInfo),N.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(N,p,T){const A=T._drawWrapper;this._eventInfo.subMesh=T,this._callbackPluginEventBindForSubMesh(this._eventInfo),A._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(N){}bindView(N){this._useUBO?this._needToBindSceneUbo=!0:N.setMatrix("view",this.KN().getViewMatrix())}bindViewProjection(N){this._useUBO?this._needToBindSceneUbo=!0:(N.setMatrix("viewProjection",this.KN().getTransformMatrix()),N.setMatrix("projection",this.KN().getProjectionMatrix()))}bindEyePosition(N,p){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(N,p)}_afterBind(N){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&p&&(this._needToBindSceneUbo=!1,(0,x.m)(p,this.KN().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=N?N.visibility:1,this._onBindObservable&&N&&this._onBindObservable.notifyObservers(N),this.disableDepthWrite){const N=this._scene.getEngine();this._cachedDepthWriteState=N.getDepthWrite(),N.setDepthWrite(!1)}if(this.disableColorWrite){const N=this._scene.getEngine();this._cachedColorWriteState=N.getColorWrite(),N.setColorWrite(!1)}if(0!==this.depthFunction){const N=this._scene.getEngine();this._cachedDepthFunctionState=N.getDepthFunction()||0,N.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(N){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=N,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(N){return null}_clonePlugins(N,p){const T={};if(this._serializePlugins(T),I._ParsePlugins(T,N,this._scene,p),this.pluginManager)for(const A of this.pluginManager._plugins){const p=N.pluginManager.getPlugin(A.name);p&&A.copyTo(p)}}getBindedMeshes(){if(this.meshMap){const N=[];for(const p in this.meshMap){const T=this.meshMap[p];T&&N.push(T)}return N}return this._scene.meshes.filter((N=>N.material===this))}forceCompilation(N,p,T,A){const a={clipPlane:!1,useInstances:!1,...T},C=this.KN(),U=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const X=()=>{if(!this._scene||!this._scene.getEngine())return;const T=C.clipPlane;if(a.clipPlane&&(C.clipPlane=new M.b(0,0,0,1)),this._storeEffectOnSubMeshes){let T=!0,C=null;if(N.CX){const p=new y.c(0,0,0,0,0,N,void 0,!1,!1);p.materialDefines&&(p.materialDefines._renderId=-1),this.isReadyForSubMesh(N,p,a.useInstances)||(p.effect&&p.effect.getCompilationError()&&p.effect.allFallbacksProcessed()?C=p.effect.getCompilationError():(T=!1,setTimeout(X,16)))}T&&(this.allowShaderHotSwapping=U,C&&A&&A(C),p&&p(this))}else this.isReady()?(this.allowShaderHotSwapping=U,p&&p(this)):setTimeout(X,16);a.clipPlane&&(C.clipPlane=T)};X()}async forceCompilationAsync(N,p){return await new Promise(((T,A)=>{this.forceCompilation(N,(()=>{T()}),p,(N=>{A(N)}))}))}bH(N){this.KN().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(I._DirtyCallbackArray.length=0,N&I.ImageProcessingDirtyFlag&&I._DirtyCallbackArray.push(I._ImageProcessingDirtyCallBack),N&I.TextureDirtyFlag&&I._DirtyCallbackArray.push(I._TextureDirtyCallBack),N&I.LightDirtyFlag&&I._DirtyCallbackArray.push(I._LightsDirtyCallBack),N&I.FresnelDirtyFlag&&I._DirtyCallbackArray.push(I._FresnelDirtyCallBack),N&I.AttributesDirtyFlag&&I._DirtyCallbackArray.push(I._AttributeDirtyCallBack),N&I.MiscDirtyFlag&&I._DirtyCallbackArray.push(I._MiscDirtyCallBack),N&I.PrePassDirtyFlag&&I._DirtyCallbackArray.push(I._PrePassDirtyCallBack),I._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(I._RunDirtyCallBacks),this.KN().resetCachedMaterial())}resetDrawCache(){const N=this.KN().meshes;for(const p of N)if(p.CX)for(const N of p.CX)N.qN()===this&&N.resetDrawCache()}_markAllSubMeshesAsDirty(N){const p=this.KN();if(p.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const T=p.meshes;for(const A of T)if(A.CX)for(const T of A.CX){if((T.qN()||(p._hasDefaultMaterial?p.defaultMaterial:null))===this)for(const p of T._drawWrappers)p&&p.defines&&p.defines.markAllAsDirty&&this._materialContext===p.materialContext&&N(p.defines)}}_markScenePrePassDirty(){if(this.KN().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const N=this.KN().enablePrePassRenderer();N&&N.bH()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(I._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(I._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(I._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(I._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(I._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(I._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(I._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(I._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(I._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(I._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const N=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.SU.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(N)}))}}setPrePassRenderer(N){return!1}dispose(N,p,T){const A=this.KN();if(A.stopAnimation(this),A.freeProcessedMaterials(),A.removeMaterial(this),this._eventInfo.forceDisposeTextures=p,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const N=this._parentContainer.materials.indexOf(this);N>-1&&this._parentContainer.materials.splice(N,1),this._parentContainer=null}if(!0!==T)if(this.meshMap)for(const a in this.meshMap){const N=this.meshMap[a];this._disposeMeshResources(N)}else{const N=A.meshes;for(const p of N)this._disposeMeshResources(p)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.SU.notifyObservers(this),this.SU.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(N){if(!N)return;const p=N.MX,T=N._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(N.CX&&T)for(const a of N.CX){const N=a._drawWrappers;for(let C=0;C<N.length;C++){var A;const U=null===(A=N[C])||void 0===A?void 0:A.effect;if(!U)continue;T[C]===this&&(null===p||void 0===p||p._releaseVertexArrayObject(U),a._removeDrawWrapper(C,!0,!0))}}}else null===p||void 0===p||p._releaseVertexArrayObject(this._drawWrapper.effect);N.material!==this||N.sourceMesh||(N.material=null)}serialize(){const N=l.e.Serialize(this);return N.sU=this.sU.serialize(),N.uniqueId=this.uniqueId,this._serializePlugins(N),N}_serializePlugins(N){if(N.plugins={},this.pluginManager)for(const p of this.pluginManager._plugins)p.doNotSerialize||(N.plugins[p.getClassName()]=p.serialize())}static Parse(N,p,T){if(N.customType){if("BABYLON.PBRMaterial"===N.customType&&N.overloadedAlbedo&&(N.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return H.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else N.customType="BABYLON.StandardMaterial";const A=C.Tools.Instantiate(N.customType).Parse(N,p,T);return A._loadedUniqueId=N.uniqueId,A}static _ParsePlugins(N,p,T,A){if(N.plugins)for(const X in N.plugins){var a,U;const y=N.plugins[X];let e=null===(a=p.pluginManager)||void 0===a?void 0:a.getPlugin(y.name);if(!e){const N=C.Tools.Instantiate("BABYLON."+X);N&&(e=new N(p))}null===(U=e)||void 0===U||U.parse(y,T,A)}}}I.TriangleFillMode=0,I.WireFrameFillMode=1,I.PointFillMode=2,I.PointListDrawMode=3,I.LineListDrawMode=4,I.LineLoopDrawMode=5,I.LineStripDrawMode=6,I.TriangleStripDrawMode=7,I.TriangleFanDrawMode=8,I.ClockWiseSideOrientation=0,I.CounterClockWiseSideOrientation=1,I.ImageProcessingDirtyFlag=64,I.TextureDirtyFlag=1,I.LightDirtyFlag=2,I.FresnelDirtyFlag=4,I.AttributesDirtyFlag=8,I.MiscDirtyFlag=16,I.PrePassDirtyFlag=32,I.AllDirtyFlag=127,I.MATERIAL_OPAQUE=0,I.MATERIAL_ALPHATEST=1,I.MATERIAL_ALPHABLEND=2,I.MATERIAL_ALPHATESTANDBLEND=3,I.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,I.MATERIAL_NORMALBLENDMETHOD_RNM=1,I.OnEventObservable=new U.c,I._AllDirtyCallBack=N=>N.markAllAsDirty(),I._ImageProcessingDirtyCallBack=N=>N.markAsImageProcessingDirty(),I._TextureDirtyCallBack=N=>N.markAsTexturesDirty(),I._FresnelDirtyCallBack=N=>N.markAsFresnelDirty(),I._MiscDirtyCallBack=N=>N.markAsMiscDirty(),I._PrePassDirtyCallBack=N=>N.markAsPrePassDirty(),I._LightsDirtyCallBack=N=>N.markAsLightDirty(),I._AttributeDirtyCallBack=N=>N.markAsAttributesDirty(),I._FresnelAndMiscDirtyCallBack=N=>{I._FresnelDirtyCallBack(N),I._MiscDirtyCallBack(N)},I._TextureAndMiscDirtyCallBack=N=>{I._TextureDirtyCallBack(N),I._MiscDirtyCallBack(N)},I._DirtyCallbackArray=[],I._RunDirtyCallBacks=N=>{for(const p of I._DirtyCallbackArray)p(N)},(0,A.b)([(0,a.H)()],I.prototype,"id",void 0),(0,A.b)([(0,a.H)()],I.prototype,"uniqueId",void 0),(0,A.b)([(0,a.H)()],I.prototype,"name",void 0),(0,A.b)([(0,a.H)()],I.prototype,"metadata",void 0),(0,A.b)([(0,a.H)()],I.prototype,"checkReadyOnEveryCall",void 0),(0,A.b)([(0,a.H)()],I.prototype,"checkReadyOnlyOnce",void 0),(0,A.b)([(0,a.H)()],I.prototype,"state",void 0),(0,A.b)([(0,a.H)("alpha")],I.prototype,"_alpha",void 0),(0,A.b)([(0,a.H)("lX")],I.prototype,"_backFaceCulling",void 0),(0,A.b)([(0,a.H)("cullBackFaces")],I.prototype,"_cullBackFaces",void 0),(0,A.b)([(0,a.H)()],I.prototype,"sideOrientation",void 0),(0,A.b)([(0,a.H)("alphaMode")],I.prototype,"_alphaMode",void 0),(0,A.b)([(0,a.H)()],I.prototype,"_needDepthPrePass",void 0),(0,A.b)([(0,a.H)()],I.prototype,"disableDepthWrite",void 0),(0,A.b)([(0,a.H)()],I.prototype,"disableColorWrite",void 0),(0,A.b)([(0,a.H)()],I.prototype,"forceDepthWrite",void 0),(0,A.b)([(0,a.H)()],I.prototype,"depthFunction",void 0),(0,A.b)([(0,a.H)()],I.prototype,"separateCullingPass",void 0),(0,A.b)([(0,a.H)("fogEnabled")],I.prototype,"_fogEnabled",void 0),(0,A.b)([(0,a.H)()],I.prototype,"pointSize",void 0),(0,A.b)([(0,a.H)()],I.prototype,"zOffset",void 0),(0,A.b)([(0,a.H)()],I.prototype,"zOffsetUnits",void 0),(0,A.b)([(0,a.H)()],I.prototype,"pointsCloud",null),(0,A.b)([(0,a.H)()],I.prototype,"fillMode",null),(0,A.b)([(0,a.H)()],I.prototype,"useLogarithmicDepth",null),(0,A.b)([(0,a.H)()],I.prototype,"transparencyMode",null)},12731:(N,p,T)=>{T.d(p,{A:()=>l,D:()=>b,F:()=>f,I:()=>J,M:()=>z,N:()=>L,O:()=>W,Q:()=>G,R:()=>o,U:()=>Z,V:()=>q,X:()=>k,b:()=>g,c:()=>M,d:()=>i,h:()=>H,k:()=>x,m:()=>I,p:()=>n,r:()=>v,u:()=>w,v:()=>K,z:()=>F});var A=T(12205),a=T(12421),C=T(12231),U=T(12691),X=T(12736);const y=a.wp.Black(),e={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function H(N,p,T){if(!N||N.LOGARITHMICDEPTH||N.indexOf&&N.indexOf("LOGARITHMICDEPTH")>=0){const N=T.activeCamera;1===N.mode&&A.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),p.setFloat("logarithmicDepthConstant",2/(Math.log(N.maxZ+1)/Math.LN2))}}function M(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]&&arguments[3];T&&N.fogEnabled&&(!p||p.applyFog)&&0!==N.fogMode&&(T.setFloat4("vFogInfos",N.fogMode,N.fogStart,N.fogEnd,N.fogDensity),A?(N.fogColor.toLinearSpaceToRef(y,N.getEngine().useExactSrgbConversions),T.setColor3("vFogColor",y)):T.setColor3("vFogColor",N.fogColor))}function b(N,p,T,A,a,C,U,X,y,H){const M=N.numMaxInfluencers||N.numInfluencers;return M<=0?0:(p.push("#define MORPHTARGETS"),N.hasPositions&&p.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),N.hasNormals&&p.push("#define MORPHTARGETTEXTURE_HASNORMALS"),N.hasTangents&&p.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),N.hasUVs&&p.push("#define MORPHTARGETTEXTURE_HASUVS"),N.hasUV2s&&p.push("#define MORPHTARGETTEXTURE_HASUV2S"),N.hasColors&&p.push("#define MORPHTARGETTEXTURE_HASCOLORS"),N.supportsPositions&&a&&p.push("#define MORPHTARGETS_POSITION"),N.supportsNormals&&C&&p.push("#define MORPHTARGETS_NORMAL"),N.supportsTangents&&U&&p.push("#define MORPHTARGETS_TANGENT"),N.supportsUVs&&X&&p.push("#define MORPHTARGETS_UV"),N.supportsUV2s&&y&&p.push("#define MORPHTARGETS_UV2"),N.supportsColors&&H&&p.push("#define MORPHTARGETS_COLOR"),p.push("#define NUM_MORPH_INFLUENCERS "+M),N.isUsingTextureForTargets&&p.push("#define MORPHTARGETS_TEXTURE"),e.NUM_MORPH_INFLUENCERS=M,e.NORMAL=C,e.TANGENT=U,e.UV=X,e.UV2=y,e.COLOR=H,l(T,A,e,a),M)}function l(N,p,T){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const U=T.NUM_MORPH_INFLUENCERS;if(U>0&&C.b.LastCreatedEngine){const X=C.b.LastCreatedEngine.getCaps().maxVertexAttribs,y=p.morphTargetManager;if(null!==y&&void 0!==y&&y.isUsingTextureForTargets)return;const e=y&&y.supportsPositions&&a,H=y&&y.supportsNormals&&T.NORMAL,M=y&&y.supportsTangents&&T.TANGENT,b=y&&y.supportsUVs&&T.UV1,l=y&&y.supportsUV2s&&T.UV2,k=y&&y.supportsColors&&T.VERTEXCOLOR;for(let T=0;T<U;T++)e&&N.push("position"+T),H&&N.push("normal"+T),M&&N.push("tangent"+T),b&&N.push("uv_"+T),l&&N.push("uv2_"+T),k&&N.push("color"+T),N.length>X&&A.d.Error("Cannot add more vertex attributes for mesh "+p.name)}}function k(N){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];N.push("world0"),N.push("world1"),N.push("world2"),N.push("world3"),p&&(N.push("previousWorld0"),N.push("previousWorld1"),N.push("previousWorld2"),N.push("previousWorld3"))}function x(N,p){const T=N.morphTargetManager;N&&T&&p.setFloatArray("morphTargetInfluences",T.influences)}function I(N,p){p.bindToEffect(N,"Scene")}function L(N,p,T){p._needUVs=!0,p[T]=!0,N.optimizeUVAllocation&&N.getTextureMatrix().isIdentityAs3x2()?(p[T+"DIRECTUV"]=N.coordinatesIndex+1,p["MAINUV"+(N.coordinatesIndex+1)]=!0):p[T+"DIRECTUV"]=0}function n(N,p,T){const A=N.getTextureMatrix();p.eX(T+"Matrix",A)}function w(N,p,T){T.BAKED_VERTEX_ANIMATION_TEXTURE&&T.INSTANCES&&N.push("bakedVertexAnimationSettingsInstanced")}function g(N,p,T){var A;if(p&&N&&(N.computeBonesUsingShaders&&p._bonesComputationForcedToCPU&&(N.computeBonesUsingShaders=!1),N.useBones&&N.computeBonesUsingShaders&&N.skeleton)){const a=N.skeleton;if(a.isUsingTextureForMatrices&&p.getUniformIndex("boneTextureWidth")>-1){const T=a.getTransformMatrixTexture(N);p.setTexture("boneSampler",T),p.setFloat("boneTextureWidth",4*(a.bones.length+1))}else{const C=a.getTransformMatrices(N);C&&(p.setMatrices("mBones",C),T&&N.KN().prePassRenderer&&N.KN().prePassRenderer.getIndex(2)&&(T.previousBones[N.uniqueId]||(T.previousBones[N.uniqueId]=C.slice()),p.setMatrices("mPreviousBones",T.previousBones[N.uniqueId]),A=C,T.previousBones[N.uniqueId].set(A)))}}}function P(N,p,T,A,a){let C=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];N._bindLight(p,T,A,a,C)}function i(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const C=Math.min(p.lightSources.length,a);for(let U=0;U<C;U++){P(p.lightSources[U],U,N,T,"boolean"===typeof A?A:A.SPECULARTERM,p.receiveShadows)}}function K(N,p,T,A){T.NUM_BONE_INFLUENCERS>0&&(A.addCPUSkinningFallback(0,p),N.push("matricesIndices"),N.push("matricesWeights"),T.NUM_BONE_INFLUENCERS>4&&(N.push("matricesIndicesExtra"),N.push("matricesWeightsExtra")))}function F(N,p){(p.INSTANCES||p.THIN_INSTANCES)&&k(N,!!p.PREPASS_VELOCITY),p.INSTANCESCOLOR&&N.push("instanceColor")}function v(N,p){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=0;for(let C=0;C<T&&N["LIGHT"+C];C++)C>0&&(a=A+C,p.addFallback(a,"LIGHT"+C)),N.SHADOWS||(N["SHADOW"+C]&&p.addFallback(A,"SHADOW"+C),N["SHADOWPCF"+C]&&p.addFallback(A,"SHADOWPCF"+C),N["SHADOWPCSS"+C]&&p.addFallback(A,"SHADOWPCSS"+C),N["SHADOWPOISSON"+C]&&p.addFallback(A,"SHADOWPOISSON"+C),N["SHADOWESM"+C]&&p.addFallback(A,"SHADOWESM"+C),N["SHADOWCLOSEESM"+C]&&p.addFallback(A,"SHADOWCLOSEESM"+C));return a++}function W(N,p,T,A,a,C,U){let X=arguments.length>7&&void 0!==arguments[7]&&arguments[7];U._areMiscDirty&&(U.LOGARITHMICDEPTH=T,U.POINTSIZE=A,U.FOG=a&&function(N,p){return p.fogEnabled&&N.applyFog&&0!==p.fogMode}(N,p),U.NONUNIFORMSCALING=N.nonUniformScaling,U.ALPHATEST=C,U.DECAL_AFTER_DETAIL=X)}function z(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!T._areLightsDirty)return T._needNormals;let U=0;const X={needNormals:T._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(N.lightsEnabled&&!C)for(const e of p.lightSources)if(R(N,p,e,U,T,A,X),U++,U===a)break;T.SPECULARTERM=X.specularEnabled,T.SHADOWS=X.shadowEnabled;for(let e=U;e<a;e++)void 0!==T["LIGHT"+e]&&(T["LIGHT"+e]=!1,T["HEMILIGHT"+e]=!1,T["POINTLIGHT"+e]=!1,T["DIRLIGHT"+e]=!1,T["SPOTLIGHT"+e]=!1,T["AREALIGHT"+e]=!1,T["SHADOW"+e]=!1,T["SHADOWCSM"+e]=!1,T["SHADOWCSMDEBUG"+e]=!1,T["SHADOWCSMNUM_CASCADES"+e]=!1,T["SHADOWCSMUSESHADOWMAXZ"+e]=!1,T["SHADOWCSMNOBLEND"+e]=!1,T["SHADOWCSM_RIGHTHANDED"+e]=!1,T["SHADOWPCF"+e]=!1,T["SHADOWPCSS"+e]=!1,T["SHADOWPOISSON"+e]=!1,T["SHADOWESM"+e]=!1,T["SHADOWCLOSEESM"+e]=!1,T["SHADOWCUBE"+e]=!1,T["SHADOWLOWQUALITY"+e]=!1,T["SHADOWMEDIUMQUALITY"+e]=!1);const y=N.getEngine().getCaps();return void 0===T.SHADOWFLOAT&&(X.needRebuild=!0),T.SHADOWFLOAT=X.shadowEnabled&&(y.textureFloatRender&&y.textureFloatLinearFiltering||y.textureHalfFloatRender&&y.textureHalfFloatLinearFiltering),T.LIGHTMAPEXCLUDED=X.lightmapMode,X.needRebuild&&T.rebuild(),X.needNormals}function R(N,p,T,A,a,C,X){switch(X.needNormals=!0,void 0===a["LIGHT"+A]&&(X.needRebuild=!0),a["LIGHT"+A]=!0,a["SPOTLIGHT"+A]=!1,a["HEMILIGHT"+A]=!1,a["POINTLIGHT"+A]=!1,a["DIRLIGHT"+A]=!1,a["AREALIGHT"+A]=!1,T.prepareLightSpecificDefines(a,A),a["LIGHT_FALLOFF_PHYSICAL"+A]=!1,a["LIGHT_FALLOFF_GLTF"+A]=!1,a["LIGHT_FALLOFF_STANDARD"+A]=!1,T.falloffType){case U.d.FALLOFF_GLTF:a["LIGHT_FALLOFF_GLTF"+A]=!0;break;case U.d.FALLOFF_PHYSICAL:a["LIGHT_FALLOFF_PHYSICAL"+A]=!0;break;case U.d.FALLOFF_STANDARD:a["LIGHT_FALLOFF_STANDARD"+A]=!0}if(C&&!T.mM.equalsFloats(0,0,0)&&(X.specularEnabled=!0),a["SHADOW"+A]=!1,a["SHADOWCSM"+A]=!1,a["SHADOWCSMDEBUG"+A]=!1,a["SHADOWCSMNUM_CASCADES"+A]=!1,a["SHADOWCSMUSESHADOWMAXZ"+A]=!1,a["SHADOWCSMNOBLEND"+A]=!1,a["SHADOWCSM_RIGHTHANDED"+A]=!1,a["SHADOWPCF"+A]=!1,a["SHADOWPCSS"+A]=!1,a["SHADOWPOISSON"+A]=!1,a["SHADOWESM"+A]=!1,a["SHADOWCLOSEESM"+A]=!1,a["SHADOWCUBE"+A]=!1,a["SHADOWLOWQUALITY"+A]=!1,a["SHADOWMEDIUMQUALITY"+A]=!1,p&&p.receiveShadows&&N.shadowsEnabled&&T.shadowEnabled){const p=T.getShadowGenerator(N.activeCamera)??T.getShadowGenerator();if(p){const N=p.getShadowMap();N&&N.renderList&&N.renderList.length>0&&(X.shadowEnabled=!0,p.prepareDefines(a,A))}}T.lightmapMode!=U.d.LIGHTMAP_DEFAULT?(X.lightmapMode=!0,a["LIGHTMAPEXCLUDED"+A]=!0,a["LIGHTMAPNOSPECULAR"+A]=T.lightmapMode==U.d.LIGHTMAP_SHADOWSONLY):(a["LIGHTMAPEXCLUDED"+A]=!1,a["LIGHTMAPNOSPECULAR"+A]=!1)}function J(N,p,T,A,a){let C=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,U=arguments.length>6&&void 0!==arguments[6]&&arguments[6],y=function(N,p){let T=!1;if(N.activeCamera){const A=p.CAMERA_ORTHOGRAPHIC?1:0,a=p.CAMERA_PERSPECTIVE?1:0,C=1===N.activeCamera.mode?1:0,U=0===N.activeCamera.mode?1:0;(A^C||a^U)&&(p.CAMERA_ORTHOGRAPHIC=1===C,p.CAMERA_PERSPECTIVE=1===U,T=!0)}return T}(N,A);!1!==C&&(y=(0,X.m)(T,N,A)),A.DEPTHPREPASS!==!p.getColorWrite()&&(A.DEPTHPREPASS=!A.DEPTHPREPASS,y=!0),A.INSTANCES!==a&&(A.INSTANCES=a,y=!0),A.THIN_INSTANCES!==U&&(A.THIN_INSTANCES=U,y=!0),y&&A.markAsUnprocessed()}function f(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],C=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],U=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!p._areAttributesDirty&&p._needNormals===p._normals&&p._needUVs===p._uvs)return!1;p._normals=p._needNormals,p._uvs=p._needUVs,p.NORMAL=p._needNormals&&N.isVerticesDataPresent("normal"),p._needNormals&&N.isVerticesDataPresent("tangent")&&(p.TANGENT=!0);for(let X=1;X<=6;++X)p["UV"+X]=!!p._needUVs&&N.isVerticesDataPresent(`uv${1===X?"":X}`);if(T){const T=N.useVertexColors&&N.isVerticesDataPresent("color");p.VERTEXCOLOR=T,p.VERTEXALPHA=N.hasVertexAlpha&&T&&C}return N.isVerticesDataPresent("instanceColor")&&(N.hasInstances||N.hasThinInstances)&&(p.INSTANCESCOLOR=!0),A&&function(N,p){if(N.useBones&&N.computeBonesUsingShaders&&N.skeleton){p.NUM_BONE_INFLUENCERS=N.numBoneInfluencers;const T=void 0!==p.BONETEXTURE;if(N.skeleton.isUsingTextureForMatrices&&T)p.BONETEXTURE=!0;else{p.BonesPerMesh=N.skeleton.bones.length+1,p.BONETEXTURE=!T&&void 0;const A=N.KN().prePassRenderer;if(A&&A.enabled){const T=-1===A.excludedSkinnedMesh.indexOf(N);p.BONES_VELOCITY_ENABLED=T}}}else p.NUM_BONE_INFLUENCERS=0,p.BonesPerMesh=0,void 0!==p.BONETEXTURE&&(p.BONETEXTURE=!1)}(N,p),a&&function(N,p){const T=N.morphTargetManager;T?(p.MORPHTARGETS_UV=T.supportsUVs&&p.UV1,p.MORPHTARGETS_UV2=T.supportsUV2s&&p.UV2,p.MORPHTARGETS_TANGENT=T.supportsTangents&&p.TANGENT,p.MORPHTARGETS_NORMAL=T.supportsNormals&&p.NORMAL,p.MORPHTARGETS_POSITION=T.supportsPositions,p.MORPHTARGETS_COLOR=T.supportsColors,p.MORPHTARGETTEXTURE_HASUVS=T.hasUVs,p.MORPHTARGETTEXTURE_HASUV2S=T.hasUV2s,p.MORPHTARGETTEXTURE_HASTANGENTS=T.hasTangents,p.MORPHTARGETTEXTURE_HASNORMALS=T.hasNormals,p.MORPHTARGETTEXTURE_HASPOSITIONS=T.hasPositions,p.MORPHTARGETTEXTURE_HASCOLORS=T.hasColors,p.NUM_MORPH_INFLUENCERS=T.numMaxInfluencers||T.numInfluencers,p.MORPHTARGETS=p.NUM_MORPH_INFLUENCERS>0,p.MORPHTARGETS_TEXTURE=T.isUsingTextureForTargets):(p.MORPHTARGETS_UV=!1,p.MORPHTARGETS_UV2=!1,p.MORPHTARGETS_TANGENT=!1,p.MORPHTARGETS_NORMAL=!1,p.MORPHTARGETS_POSITION=!1,p.MORPHTARGETS_COLOR=!1,p.MORPHTARGETTEXTURE_HASUVS=!1,p.MORPHTARGETTEXTURE_HASUV2S=!1,p.MORPHTARGETTEXTURE_HASTANGENTS=!1,p.MORPHTARGETTEXTURE_HASNORMALS=!1,p.MORPHTARGETTEXTURE_HASPOSITIONS=!1,p.MORPHTARGETTEXTURE_HAS_COLORS=!1,p.MORPHTARGETS=!1,p.NUM_MORPH_INFLUENCERS=0)}(N,p),U&&function(N,p){const T=N.bakedVertexAnimationManager;p.BAKED_VERTEX_ANIMATION_TEXTURE=!(!T||!T.isEnabled)}(N,p),!0}function G(N,p){if(N.activeCamera){const T=p.MULTIVIEW;p.MULTIVIEW=null!==N.activeCamera.outputRenderTarget&&N.activeCamera.outputRenderTarget.getViewCount()>1,p.MULTIVIEW!=T&&p.markAsUnprocessed()}}function o(N,p,T){const A=p.ORDER_INDEPENDENT_TRANSPARENCY,a=p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;p.ORDER_INDEPENDENT_TRANSPARENCY=N.useOrderIndependentTransparency&&T,p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!N.getEngine().getCaps().textureFloatLinearFiltering,A===p.ORDER_INDEPENDENT_TRANSPARENCY&&a===p.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||p.markAsUnprocessed()}function Z(N,p,T){const A=p.PREPASS;if(!p._arePrePassDirty)return;const a=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(N.prePassRenderer&&N.prePassRenderer.enabled&&T){p.PREPASS=!0,p.SCENE_MRT_COUNT=N.prePassRenderer.mrtCount,p.PREPASS_NORMAL_WORLDSPACE=N.prePassRenderer.generateNormalsInWorldSpace,p.PREPASS_COLOR=!0,p.PREPASS_COLOR_INDEX=0;for(let T=0;T<a.length;T++){const A=N.prePassRenderer.getIndex(a[T].type);-1!==A?(p[a[T].define]=!0,p[a[T].index]=A):p[a[T].define]=!1}}else{p.PREPASS=!1;for(let N=0;N<a.length;N++)p[a[N].define]=!1}p.PREPASS!=A&&(p.markAsUnprocessed(),p.markAsImageProcessingDirty())}function mN(N,p,T,A){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];a&&a.push("Light"+N),C||(p.push("vLightData"+N,"vLightDiffuse"+N,"vLightSpecular"+N,"vLightDirection"+N,"vLightWidth"+N,"vLightHeight"+N,"vLightFalloff"+N,"vLightGround"+N,"lightMatrix"+N,"shadowsInfo"+N,"depthValues"+N),T.push("shadowTexture"+N),T.push("depthTexture"+N),p.push("viewFrustumZ"+N,"cascadeBlendFactor"+N,"lightSizeUVCorrection"+N,"depthCorrection"+N,"penumbraDarkness"+N,"frustumLengths"+N),A&&(T.push("projectionLightTexture"+N),p.push("textureProjectionMatrix"+N)),U&&T.push("iesLightTexture"+N))}function q(N,p,T){let A,a,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(N.uniformsNames){const U=N;A=U.uniformsNames,a=U.uniformBuffersNames,p=U.samplers,T=U.defines,C=U.maxSimultaneousLights||0}else A=N,p||(p=[]);for(let U=0;U<C&&T["LIGHT"+U];U++)mN(U,A,p,T["PROJECTEDLIGHTTEXTURE"+U],a,!1,T["IESLIGHTTEXTURE"+U]);T.NUM_MORPH_INFLUENCERS&&(A.push("morphTargetInfluences"),A.push("morphTargetCount")),T.BAKED_VERTEX_ANIMATION_TEXTURE&&(A.push("bakedVertexAnimationSettings"),A.push("bakedVertexAnimationTextureSizeInverted"),A.push("bakedVertexAnimationTime"),p.push("bakedVertexAnimationTexture"))}},12702:(N,p,T)=>{T.d(p,{e:()=>C});var A=T(12371),a=T(12705);class C extends a.c{constructor(N,p){let T=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(N,p,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new A.Matrix,this._storeEffectOnSubMeshes=T}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(N,p){return!!N&&(!this._storeEffectOnSubMeshes||(!N.CX||0===N.CX.length||this.isReadyForSubMesh(N,N.CX[0],p)))}_isReadyForSubMesh(N){const p=N.materialDefines;return!(this.checkReadyOnEveryCall||!N.effect||!p||p._renderId!==this.KN().getRenderId())}bindOnlyWorldMatrix(N){this._activeEffect.setMatrix("world",N)}bindOnlyNormalMatrix(N){this._activeEffect.setMatrix("normalMatrix",N)}bind(N,p){p&&this.bindForSubMesh(N,p,p.CX[0])}_afterBind(N){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2?arguments[2]:void 0;super._afterBind(N,p,T),this.KN()._cachedEffect=p,T?T._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return T._drawWrapper._forceRebindOnNextCall||N.isCachedMaterialInvalid(this,p,A)}dispose(N,p,T){this._activeEffect=void 0,super.dispose(N,p,T)}}},12724:(N,p,T)=>{T.d(p,{c:()=>X,d:()=>y});var A=T(12354),a=T(12371),C=T(12359);class U{static extractMinAndMaxIndexed(N,p,T,A,a,C){for(let U=T;U<T+A;U++){const T=3*p[U],A=N[T],X=N[T+1],y=N[T+2];a.minimizeInPlaceFromFloats(A,X,y),C.maximizeInPlaceFromFloats(A,X,y)}}static extractMinAndMax(N,p,T,A,a,C){for(let U=p,X=p*A;U<p+T;U++,X+=A){const p=N[X],T=N[X+1],A=N[X+2];a.minimizeInPlaceFromFloats(p,T,A),C.maximizeInPlaceFromFloats(p,T,A)}}}function X(N,p,T,A){let C=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const X=new a.xp(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),y=new a.xp(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return U.extractMinAndMaxIndexed(N,p,T,A,X,y),C&&(X.x-=X.x*C.x+C.y,X.y-=X.y*C.x+C.y,X.z-=X.z*C.x+C.y,y.x+=y.x*C.x+C.y,y.y+=y.y*C.x+C.y,y.z+=y.z*C.x+C.y),{minimum:X,maximum:y}}function y(N,p,T){let A=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,C=arguments.length>4?arguments[4]:void 0;const X=new a.xp(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),y=new a.xp(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return C||(C=3),U.extractMinAndMax(N,p,T,C,X,y),A&&(X.x-=X.x*A.x+A.y,X.y-=X.y*A.x+A.y,X.z-=X.z*A.x+A.y,y.x+=y.x*A.x+A.y,y.y+=y.y*A.x+A.y,y.z+=y.z*A.x+A.y),{minimum:X,maximum:y}}(0,A.b)([C.e.filter((function(){for(var N=arguments.length,p=new Array(N),T=0;T<N;T++)p[T]=arguments[T];let[A,a]=p;return!Array.isArray(A)&&!Array.isArray(a)}))],U,"extractMinAndMaxIndexed",null),(0,A.b)([C.e.filter((function(){for(var N=arguments.length,p=new Array(N),T=0;T<N;T++)p[T]=arguments[T];let[A]=p;return!Array.isArray(A)}))],U,"extractMinAndMax",null)},12708:(N,p,T)=>{T.d(p,{c:()=>y});var A=T(12451),a=T(12711),C=T(12717),U=T(12724),X=T(12494);class y{get materialDefines(){var N;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(N=this._getDrawWrapper())||void 0===N?void 0:N.defines}set materialDefines(N){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=N}_getDrawWrapper(N){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];N=N??this._engine.currentRenderPassId;let T=this._drawWrappers[N];return!T&&p&&(this._drawWrappers[N]=T=new X.c(this._mesh.KN().getEngine())),T}_removeDrawWrapper(N){let p=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var T;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(T=this._drawWrappers[N])||void 0===T||T.dispose(p));this._drawWrappers[N]=void 0}get effect(){var N;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(N=this._getDrawWrapper())||void 0===N?void 0:N.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(N){this._mainDrawWrapperOverride=N}setEffect(N){let p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,T=arguments.length>2?arguments[2]:void 0,A=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=this._drawWrapper;a.setEffect(N,p,A),void 0!==T&&(a.materialContext=T),N||(a.defines=null,a.materialContext=void 0)}resetDrawCache(N){let p=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==N)return void this._removeDrawWrapper(N,!0,p);for(const N of this._drawWrappers)null===N||void 0===N||N.dispose(p)}this._drawWrappers=[]}static AddToMesh(N,p,T,A,a,C,U){return new y(N,p,T,A,a,C,U,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(N,p,T,A,a,C,U){let X=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],y=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=N,this.verticesStart=p,this.verticesCount=T,this.indexStart=A,this.indexCount=a,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=C,this._renderingMesh=U||C,y&&C.CX.push(this),this._engine=this._mesh.KN().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=C.CX.length-1,X&&(this.refreshBoundingInfo(),C.HX(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(N){return this._boundingInfo=N,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const N=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return N||this._renderingMesh}qN(){let N=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const p=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!p)return N&&this._mesh.KN()._hasDefaultMaterial?this._mesh.KN().defaultMaterial:null;if(this._isMultiMaterial(p)){const N=p.getSubMaterial(this.materialIndex);return this._currentMaterial!==N&&(this._currentMaterial=N,this.resetDrawCache()),N}return p}_isMultiMaterial(N){return void 0!==N.getSubMaterial}refreshBoundingInfo(){let N=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.MX)return this;if(N||(N=this._renderingMesh.getVerticesData(A.f.PositionKind)),!N)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const p=this._renderingMesh.bX();let T;if(0===this.indexStart&&this.indexCount===p.length){const N=this._renderingMesh.getBoundingInfo();T={minimum:N.minimum.clone(),maximum:N.maximum.clone()}}else T=(0,U.c)(N,p,this.indexStart,this.indexCount,this._renderingMesh.MX.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(T.minimum,T.maximum):this._boundingInfo=new C.d(T.minimum,T.maximum),this}_checkCollision(N){return this.getBoundingInfo()._checkCollision(N)}updateBoundingInfo(N){let p=this.getBoundingInfo();return p||(this.refreshBoundingInfo(),p=this.getBoundingInfo()),p&&p.update(N),this}isInFrustum(N){const p=this.getBoundingInfo();return!!p&&p.isInFrustum(N,this._mesh.qM)}isCompletelyInFrustum(N){const p=this.getBoundingInfo();return!!p&&p.isCompletelyInFrustum(N)}render(N){return this._renderingMesh.render(this,N,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(N,p){if(!this._linesIndexBuffer){const T=6*Math.floor(this.indexCount/3),A=this.verticesStart+this.verticesCount>65535?new Uint32Array(T):new Uint16Array(T);let a=0;if(0===N.length)for(let N=this.indexStart;N<this.indexStart+this.indexCount;N+=3)A[a++]=N,A[a++]=N+1,A[a++]=N+1,A[a++]=N+2,A[a++]=N+2,A[a++]=N;else for(let p=this.indexStart;p<this.indexStart+this.indexCount;p+=3)A[a++]=N[p],A[a++]=N[p+1],A[a++]=N[p+1],A[a++]=N[p+2],A[a++]=N[p+2],A[a++]=N[p];this._linesIndexBuffer=p.createIndexBuffer(A),this._linesIndexCount=A.length}return this._linesIndexBuffer}canIntersects(N){const p=this.getBoundingInfo();return!!p&&N.intersectsBox(p.boundingBox)}intersects(N,p,T,A,a){const C=this.qN();if(!C)return null;let U=3,X=!1;switch(C.fillMode){case 3:case 5:case 6:case 8:return null;case 7:U=1,X=!0}return 4===C.fillMode?T.length?this._intersectLines(N,p,T,this._mesh.intersectionThreshold,A):this._intersectUnIndexedLines(N,p,T,this._mesh.intersectionThreshold,A):!T.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(N,p,T,A,a):this._intersectTriangles(N,p,T,U,X,A,a)}_intersectLines(N,p,T,A,C){let U=null;for(let X=this.indexStart;X<this.indexStart+this.indexCount;X+=2){const y=p[T[X]],e=p[T[X+1]],H=N.intersectionSegment(y,e,A);if(!(H<0)&&((C||!U||H<U.distance)&&(U=new a.b(null,null,H),U.faceId=X/2,C)))break}return U}_intersectUnIndexedLines(N,p,T,A,C){let U=null;for(let X=this.verticesStart;X<this.verticesStart+this.verticesCount;X+=2){const T=p[X],y=p[X+1],e=N.intersectionSegment(T,y,A);if(!(e<0)&&((C||!U||e<U.distance)&&(U=new a.b(null,null,e),U.faceId=X/2,C)))break}return U}_intersectTriangles(N,p,T,A,a,C,U){let X=null,y=-1;for(let e=this.indexStart;e<this.indexStart+this.indexCount-(3-A);e+=A){y++;const A=T[e],H=T[e+1],M=T[e+2];if(a&&4294967295===M){e+=2;continue}const b=p[A],l=p[H],k=p[M];if(!b||!l||!k)continue;if(U&&!U(b,l,k,N,A,H,M))continue;const x=N.intersectsTriangle(b,l,k);if(x){if(x.distance<0)continue;if((C||!X||x.distance<X.distance)&&(X=x,X.faceId=y,C))break}}return X}_intersectUnIndexedTriangles(N,p,T,A,a){let C=null;for(let U=this.verticesStart;U<this.verticesStart+this.verticesCount;U+=3){const T=p[U],X=p[U+1],y=p[U+2];if(a&&!a(T,X,y,N,-1,-1,-1))continue;const e=N.intersectsTriangle(T,X,y);if(e){if(e.distance<0)continue;if((A||!C||e.distance<C.distance)&&(C=e,C.faceId=U/3,A))break}}return C}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(N,p){const T=new y(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,N,p,!1);if(!this.IsGlobal){const N=this.getBoundingInfo();if(!N)return T;T._boundingInfo=new C.d(N.minimum,N.maximum)}return T}dispose(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.KN().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const p=this._mesh.CX.indexOf(this);this._mesh.CX.splice(p,1),this.resetDrawCache(void 0,N)}getClassName(){return"SubMesh"}static CreateFromIndices(N,p,T,A,a){let C=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],U=Number.MAX_VALUE,X=-Number.MAX_VALUE;const e=(a||A).bX();for(let y=p;y<p+T;y++){const N=e[y];N<U&&(U=N),N>X&&(X=N)}return new y(N,U,X-U+1,p,T,A,a,C)}}}}]);