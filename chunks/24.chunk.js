"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[24],{12908:(I,g,b)=>{b.d(g,{b:()=>e});class e{constructor(I,g,b){this.bu=I,this.bv=g,this.distance=b,this.faceId=0,this.subMeshId=0}}},12925:(I,g,b)=>{b.d(g,{d:()=>M});var e=b(12604),c=b(12590),z=b(12597);class M{constructor(I,g,b){this.vectors=(0,e.e)(8,c.Vg.Zero),this.center=c.Vg.Zero(),this.centerWorld=c.Vg.Zero(),this.extendSize=c.Vg.Zero(),this.extendSizeWorld=c.Vg.Zero(),this.directions=(0,e.e)(3,c.Vg.Zero),this.vectorsWorld=(0,e.e)(8,c.Vg.Zero),this.minimumWorld=c.Vg.Zero(),this.maximumWorld=c.Vg.Zero(),this.minimum=c.Vg.Zero(),this.maximum=c.Vg.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(I,g,b)}reConstruct(I,g,b){const e=I.x,z=I.y,M=I.z,J=g.x,o=g.y,n=g.z,G=this.vectors;this.minimum.Db(e,z,M),this.maximum.Db(J,o,n),G[0].Db(e,z,M),G[1].Db(J,o,n),G[2].Db(J,z,M),G[3].Db(e,o,M),G[4].Db(e,z,n),G[5].Db(J,o,M),G[6].Db(e,o,n),G[7].Db(J,z,n),g.addToRef(I,this.center).scaleInPlace(.5),g.subtractToRef(I,this.extendSize).scaleInPlace(.5),this._worldMatrix=b||c.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(I){const g=M._TmpVector3,b=this.maximum.subtractToRef(this.minimum,g[0]),e=b.length();b.normalizeFromLength(e);const c=e*I,z=b.scaleInPlace(.5*c),J=this.center.subtractToRef(z,g[1]),o=this.center.addToRef(z,g[2]);return this.reConstruct(J,o,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(I){const g=this.minimumWorld,b=this.maximumWorld,e=this.directions,z=this.vectorsWorld,M=this.vectors;if(I.isIdentity()){g.G(this.minimum),b.G(this.maximum);for(let I=0;I<8;++I)z[I].G(M[I]);this.extendSizeWorld.G(this.extendSize),this.centerWorld.G(this.center)}else{g.kb(Number.MAX_VALUE),b.kb(-Number.MAX_VALUE);for(let e=0;e<8;++e){const J=z[e];c.Vg.TransformCoordinatesToRef(M[e],I,J),g.minimizeInPlace(J),b.maximizeInPlace(J)}b.subtractToRef(g,this.extendSizeWorld).scaleInPlace(.5),b.addToRef(g,this.centerWorld).scaleInPlace(.5)}c.Vg.FromArrayToRef(I.m,0,e[0]),c.Vg.FromArrayToRef(I.m,4,e[1]),c.Vg.FromArrayToRef(I.m,8,e[2]),this._worldMatrix=I}isInFrustum(I){return M.IsInFrustum(this.vectorsWorld,I)}isCompletelyInFrustum(I){return M.IsCompletelyInFrustum(this.vectorsWorld,I)}intersectsPoint(I){const g=this.minimumWorld,b=this.maximumWorld,e=g.x,c=g.y,M=g.z,J=b.x,o=b.y,n=b.z,G=I.x,D=I.y,p=I.z,x=-z.b;return!(J-G<x||x>G-e)&&(!(o-D<x||x>D-c)&&!(n-p<x||x>p-M))}intersectsSphere(I){return M.IntersectsSphere(this.minimumWorld,this.maximumWorld,I.centerWorld,I.radiusWorld)}intersectsMinMax(I,g){const b=this.minimumWorld,e=this.maximumWorld,c=b.x,z=b.y,M=b.z,J=e.x,o=e.y,n=e.z,G=I.x,D=I.y,p=I.z,x=g.x,Z=g.y,k=g.z;return!(J<G||c>x)&&(!(o<D||z>Z)&&!(n<p||M>k))}dispose(){var I,g;null===(I=this._drawWrapperFront)||void 0===I||I.dispose(),null===(g=this._drawWrapperBack)||void 0===g||g.dispose()}static Intersects(I,g){return I.intersectsMinMax(g.minimumWorld,g.maximumWorld)}static IntersectsSphere(I,g,b,e){const z=M._TmpVector3[0];c.Vg.ClampToRef(b,I,g,z);return c.Vg.DistanceSquared(b,z)<=e*e}static IsCompletelyInFrustum(I,g){for(let b=0;b<6;++b){const e=g[b];for(let g=0;g<8;++g)if(e.dotCoordinate(I[g])<0)return!1}return!0}static IsInFrustum(I,g){for(let b=0;b<6;++b){let e=!0;const c=g[b];for(let g=0;g<8;++g)if(c.dotCoordinate(I[g])>=0){e=!1;break}if(e)return!1}return!0}}M._TmpVector3=(0,e.e)(3,c.Vg.Zero)},12916:(I,g,b)=>{b.d(g,{d:()=>D});var e=b(12604),c=b(12590),z=b(12925),M=b(12932);const J={min:0,max:0},o={min:0,max:0},n=(I,g,b)=>{const e=c.Vg.Dot(g.centerWorld,I),z=Math.abs(c.Vg.Dot(g.directions[0],I))*g.extendSize.x+Math.abs(c.Vg.Dot(g.directions[1],I))*g.extendSize.y+Math.abs(c.Vg.Dot(g.directions[2],I))*g.extendSize.z;b.min=e-z,b.max=e+z},G=(I,g,b)=>(n(I,g,J),n(I,b,o),!(J.min>o.max||o.min>J.max));class D{constructor(I,g,b){this._isLocked=!1,this.boundingBox=new z.d(I,g,b),this.boundingSphere=new M.d(I,g,b)}reConstruct(I,g,b){this.boundingBox.reConstruct(I,g,b),this.boundingSphere.reConstruct(I,g,b)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(I){this._isLocked=I}update(I){this._isLocked||(this.boundingBox._update(I),this.boundingSphere._update(I))}centerOn(I,g){const b=D._TmpVector3[0].G(I).Op(g),e=D._TmpVector3[1].G(I).addInPlace(g);return this.boundingBox.reConstruct(b,e,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(b,e,this.boundingBox.getWorldMatrix()),this}encapsulate(I){const g=c.Vg.Minimize(this.minimum,I),b=c.Vg.Maximize(this.maximum,I);return this.reConstruct(g,b,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(I){const g=c.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(g);const b=c.TmpVectors.Vg[0];return c.Vg.TransformCoordinatesToRef(I.boundingBox.minimumWorld,g,b),this.encapsulate(b),c.Vg.TransformCoordinatesToRef(I.boundingBox.maximumWorld,g,b),this.encapsulate(b),this}scale(I){return this.boundingBox.scale(I),this.boundingSphere.scale(I),this}isInFrustum(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===g||3===g)&&this.boundingSphere.isCenterInFrustum(I))return!0;if(!this.boundingSphere.isInFrustum(I))return!1;return!(1!==g&&3!==g)||this.boundingBox.isInFrustum(I)}get diagonalLength(){const I=this.boundingBox;return I.maximumWorld.subtractToRef(I.minimumWorld,D._TmpVector3[0]).length()}isCompletelyInFrustum(I){return this.boundingBox.isCompletelyInFrustum(I)}_checkCollision(I){return I._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(I){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(I)&&!!this.boundingBox.intersectsPoint(I))}intersects(I,g){if(!M.d.Intersects(this.boundingSphere,I.boundingSphere))return!1;if(!z.d.Intersects(this.boundingBox,I.boundingBox))return!1;if(!g)return!0;const b=this.boundingBox,e=I.boundingBox;return!!G(b.directions[0],b,e)&&(!!G(b.directions[1],b,e)&&(!!G(b.directions[2],b,e)&&(!!G(e.directions[0],b,e)&&(!!G(e.directions[1],b,e)&&(!!G(e.directions[2],b,e)&&(!!G(c.Vg.Cross(b.directions[0],e.directions[0]),b,e)&&(!!G(c.Vg.Cross(b.directions[0],e.directions[1]),b,e)&&(!!G(c.Vg.Cross(b.directions[0],e.directions[2]),b,e)&&(!!G(c.Vg.Cross(b.directions[1],e.directions[0]),b,e)&&(!!G(c.Vg.Cross(b.directions[1],e.directions[1]),b,e)&&(!!G(c.Vg.Cross(b.directions[1],e.directions[2]),b,e)&&(!!G(c.Vg.Cross(b.directions[2],e.directions[0]),b,e)&&(!!G(c.Vg.Cross(b.directions[2],e.directions[1]),b,e)&&!!G(c.Vg.Cross(b.directions[2],e.directions[2]),b,e))))))))))))))}}D._TmpVector3=(0,e.e)(2,c.Vg.Zero)},12932:(I,g,b)=>{b.d(g,{d:()=>z});var e=b(12604),c=b(12590);class z{constructor(I,g,b){this.center=c.Vg.Zero(),this.centerWorld=c.Vg.Zero(),this.minimum=c.Vg.Zero(),this.maximum=c.Vg.Zero(),this.reConstruct(I,g,b)}reConstruct(I,g,b){this.minimum.G(I),this.maximum.G(g);const e=c.Vg.Distance(I,g);g.addToRef(I,this.center).scaleInPlace(.5),this.radius=.5*e,this._update(b||c.Matrix.IdentityReadOnly)}scale(I){const g=this.radius*I,b=z._TmpVector3,e=b[0].kb(g),c=this.center.subtractToRef(e,b[1]),M=this.center.addToRef(e,b[2]);return this.reConstruct(c,M,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(I){if(I.isIdentity())this.centerWorld.G(this.center),this.radiusWorld=this.radius;else{c.Vg.TransformCoordinatesToRef(this.center,I,this.centerWorld);const g=z._TmpVector3[0];c.Vg.TransformNormalFromFloatsToRef(1,1,1,I,g),this.radiusWorld=Math.max(Math.abs(g.x),Math.abs(g.y),Math.abs(g.z))*this.radius}}isInFrustum(I){const g=this.centerWorld,b=this.radiusWorld;for(let e=0;e<6;e++)if(I[e].dotCoordinate(g)<=-b)return!1;return!0}isCenterInFrustum(I){const g=this.centerWorld;for(let b=0;b<6;b++)if(I[b].dotCoordinate(g)<0)return!1;return!0}intersectsPoint(I){const g=c.Vg.DistanceSquared(this.centerWorld,I);return!(this.radiusWorld*this.radiusWorld<g)}static Intersects(I,g){const b=c.Vg.DistanceSquared(I.centerWorld,g.centerWorld),e=I.radiusWorld+g.radiusWorld;return!(e*e<b)}static CreateFromCenterAndRadius(I,g,b){this._TmpVector3[0].G(I),this._TmpVector3[1].Db(0,0,g),this._TmpVector3[2].G(I),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Op(this._TmpVector3[1]);const e=new z(this._TmpVector3[0],this._TmpVector3[2]);return e._worldMatrix=b||c.Matrix.Identity(),e}}z._TmpVector3=(0,e.e)(3,c.Vg.Zero)},12952:(I,g,b)=>{function e(I){-1===I.indexOf("vClipPlane")&&I.push("vClipPlane"),-1===I.indexOf("vClipPlane2")&&I.push("vClipPlane2"),-1===I.indexOf("vClipPlane3")&&I.push("vClipPlane3"),-1===I.indexOf("vClipPlane4")&&I.push("vClipPlane4"),-1===I.indexOf("vClipPlane5")&&I.push("vClipPlane5"),-1===I.indexOf("vClipPlane6")&&I.push("vClipPlane6")}function c(I,g,b){const e=!!(I.clipPlane??g.clipPlane),c=!!(I.clipPlane2??g.clipPlane2),z=!!(I.clipPlane3??g.clipPlane3),M=!!(I.clipPlane4??g.clipPlane4),J=!!(I.clipPlane5??g.clipPlane5),o=!!(I.clipPlane6??g.clipPlane6);e&&b.push("#define CLIPPLANE"),c&&b.push("#define CLIPPLANE2"),z&&b.push("#define CLIPPLANE3"),M&&b.push("#define CLIPPLANE4"),J&&b.push("#define CLIPPLANE5"),o&&b.push("#define CLIPPLANE6")}function z(I,g,b){let e=!1;const c=!!(I.clipPlane??g.clipPlane),z=!!(I.clipPlane2??g.clipPlane2),M=!!(I.clipPlane3??g.clipPlane3),J=!!(I.clipPlane4??g.clipPlane4),o=!!(I.clipPlane5??g.clipPlane5),n=!!(I.clipPlane6??g.clipPlane6);return b.CLIPPLANE!==c&&(b.CLIPPLANE=c,e=!0),b.CLIPPLANE2!==z&&(b.CLIPPLANE2=z,e=!0),b.CLIPPLANE3!==M&&(b.CLIPPLANE3=M,e=!0),b.CLIPPLANE4!==J&&(b.CLIPPLANE4=J,e=!0),b.CLIPPLANE5!==o&&(b.CLIPPLANE5=o,e=!0),b.CLIPPLANE6!==n&&(b.CLIPPLANE6=n,e=!0),e}function M(I,g,b){let e=g.clipPlane??b.clipPlane;J(I,"vClipPlane",e),e=g.clipPlane2??b.clipPlane2,J(I,"vClipPlane2",e),e=g.clipPlane3??b.clipPlane3,J(I,"vClipPlane3",e),e=g.clipPlane4??b.clipPlane4,J(I,"vClipPlane4",e),e=g.clipPlane5??b.clipPlane5,J(I,"vClipPlane5",e),e=g.clipPlane6??b.clipPlane6,J(I,"vClipPlane6",e)}function J(I,g,b){b&&I.setFloat4(g,b.normal.x,b.normal.y,b.normal.z,b.d)}b.d(g,{b:()=>e,f:()=>M,g:()=>z,j:()=>c})},12892:(I,g,b)=>{b.d(g,{e:()=>e});class e{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(I,g){this._defines[I]||(I<this._currentRank&&(this._currentRank=I),I>this._maxRank&&(this._maxRank=I),this._defines[I]=new Array),this._defines[I].push(g)}addCPUSkinningFallback(I,g){this._mesh=g,I<this._currentRank&&(this._currentRank=I),I>this._maxRank&&(this._maxRank=I)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(I,g){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,I=I.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),g._bonesComputationForcedToCPU=!0;const b=this._mesh.EI();for(let I=0;I<b.meshes.length;I++){const e=b.meshes[I];if(e.material){if(e.computeBonesUsingShaders&&0!==e.numBoneInfluencers)if(e.material.getEffect()===g)e.computeBonesUsingShaders=!1;else if(e.Ib)for(const I of e.Ib){if(I.effect===g){e.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&e.computeBonesUsingShaders&&e.numBoneInfluencers>0&&(e.computeBonesUsingShaders=!1)}}else{const g=this._defines[this._currentRank];if(g)for(let b=0;b<g.length;b++)I=I.replace("#define "+g[b],"");this._currentRank++}return I}}},12901:(I,g,b)=>{b.d(g,{b:()=>S});var e=b(12577),c=b(12584),z=b(12409),M=b(12412),J=b(12449),o=b(12905),n=b(12837),G=b(12420),D=b(12646),p=b(12704),x=b(12622);class Z{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(I){this._func=I}get funcRef(){return this._funcRef}set funcRef(I){this._funcRef=I}get funcMask(){return this._funcMask}set funcMask(I){this._funcMask=I}get opStencilFail(){return this._opStencilFail}set opStencilFail(I){this._opStencilFail=I}get opDepthFail(){return this._opDepthFail}set opDepthFail(I){this._opDepthFail=I}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(I){this._opStencilDepthPass=I}get mask(){return this._mask}set mask(I){this._mask=I}get enabled(){return this._enabled}set enabled(I){this._enabled=I}getClassName(){return"MaterialStencilState"}copyTo(I){x.b.Clone((()=>I),this)}serialize(){return x.b.Serialize(this)}parse(I,g,b){x.b.Parse((()=>this),I,g,b)}}(0,e.d)([(0,c.E)()],Z.prototype,"func",null),(0,e.d)([(0,c.E)()],Z.prototype,"funcRef",null),(0,e.d)([(0,c.E)()],Z.prototype,"funcMask",null),(0,e.d)([(0,c.E)()],Z.prototype,"opStencilFail",null),(0,e.d)([(0,c.E)()],Z.prototype,"opDepthFail",null),(0,e.d)([(0,c.E)()],Z.prototype,"opStencilDepthPass",null),(0,e.d)([(0,c.E)()],Z.prototype,"mask",null),(0,e.d)([(0,c.E)()],Z.prototype,"enabled",null);var k=b(12943);class S{get _supportGlowLayer(){return!1}set _glowModeEnabled(I){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(I){if(this._alpha===I)return;const g=this._alpha;this._alpha=I,1!==g&&1!==I||this.XD(S.MiscDirtyFlag+S.PrePassDirtyFlag)}get alpha(){return this._alpha}set Gb(I){this._backFaceCulling!==I&&(this._backFaceCulling=I,this.XD(S.TextureDirtyFlag))}get Gb(){return this._backFaceCulling}set cullBackFaces(I){this._cullBackFaces!==I&&(this._cullBackFaces=I,this.XD(S.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(I){this._blockDirtyMechanism!==I&&(this._blockDirtyMechanism=I,I||this.sx())}atomicMaterialsUpdate(I){this.blockDirtyMechanism=!0;try{I(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(I){this._onDisposeObserver&&this.Og.remove(this._onDisposeObserver),this._onDisposeObserver=this.Og.add(I)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new M.c),this._onBindObservable}set onBind(I){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(I)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new M.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new M.c),this._onEffectCreatedObservable}set alphaMode(I){this._alphaMode!==I&&(this._alphaMode=I,this.XD(S.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(I){this._needDepthPrePass!==I&&(this._needDepthPrePass=I,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(I){this._fogEnabled!==I&&(this._fogEnabled=I,this.XD(S.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case S.WireFrameFillMode:case S.LineListDrawMode:case S.LineLoopDrawMode:case S.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(I){this.fillMode=I?S.WireFrameFillMode:S.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case S.PointFillMode:case S.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(I){this.fillMode=I?S.PointFillMode:S.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(I){this._fillMode!==I&&(this._fillMode=I,this.XD(S.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(I){const g=this.EI().getEngine().getCaps().fragmentDepthSupported;I&&!g&&G.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=I&&g,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(I){this._drawWrapper=I}constructor(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Og=new M.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.ig=new Z,this._useUBO=!1,this._fillMode=S.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=I;const c=g||J.b.LastCreatedScene;c&&(this._scene=c,this._dirtyCallbacks={},this._forceGLSL=e,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=I||z.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new p.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new n.d(this._scene.getEngine(),void 0,void 0,I),this._useUBO=this.EI().getEngine().supportsUniformBuffers,this._createUniformBuffer(),b||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),S.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var I;const g=this.EI().getEngine();null===(I=this._uniformBuffer)||void 0===I||I.dispose(),g.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new n.d(g,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new n.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(I){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.sx(),this.checkReadyOnlyOnce=!0}unfreeze(){this.sx(),this.checkReadyOnlyOnce=!1}isReady(I,g){return!0}isReadyForSubMesh(I,g,b){const e=g.materialDefines;return!!e&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=e,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}EI(){return this._scene}_getEffectiveOrientation(I){return null!==this.sideOrientation?this.sideOrientation:I.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(I){this._transparencyMode!==I&&(this._transparencyMode=I,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===S.MATERIAL_ALPHABLEND||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===S.MATERIAL_ALPHATEST||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===S.MATERIAL_OPAQUE||this._transparencyMode===S.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(I){return this._hasTransparencyMode?this._transparencyModeIsBlend:I.visibility<1||!this._disableAlphaBlending&&(I.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(I){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(I)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}sx(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const g=this.EI().meshes;for(const b of g)if(b.Ib)for(const g of b.Ib)if(g.hI()===this)for(const b of g._drawWrappers)b&&this._materialContext===b.materialContext&&(b._wasPreviouslyReady=!1,b._wasPreviouslyUsingInstances=null,b._forceRebindOnNextCall=I);I&&this.XD(S.AllDirtyFlag)}_preBind(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const b=this._scene.getEngine(),e=(null==g?this.sideOrientation:g)===S.ClockWiseSideOrientation;return b.enableEffect(I||this._getDrawWrapper()),b.setState(this.Gb,this.zOffset,!1,e,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.ig,this.zOffsetUnits),e}bind(I,g){}buildUniformLayout(){const I=this._uniformBuffer;this._eventInfo.ubo=I,this._callbackPluginEventGeneric(8,this._eventInfo),I.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(I,g,b){const e=b._drawWrapper;this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),e._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(I){}bindView(I){this._useUBO?this._needToBindSceneUbo=!0:I.setMatrix("view",this.EI().getViewMatrix())}bindViewProjection(I){this._useUBO?this._needToBindSceneUbo=!0:(I.setMatrix("viewProjection",this.EI().getTransformMatrix()),I.setMatrix("projection",this.EI().getProjectionMatrix()))}bindEyePosition(I,g){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(I,g)}_afterBind(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&g&&(this._needToBindSceneUbo=!1,(0,k.r)(g,this.EI().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=I?I.visibility:1,this._onBindObservable&&I&&this._onBindObservable.notifyObservers(I),this.disableDepthWrite){const I=this._scene.getEngine();this._cachedDepthWriteState=I.getDepthWrite(),I.setDepthWrite(!1)}if(this.disableColorWrite){const I=this._scene.getEngine();this._cachedColorWriteState=I.getColorWrite(),I.setColorWrite(!1)}if(0!==this.depthFunction){const I=this._scene.getEngine();this._cachedDepthFunctionState=I.getDepthFunction()||0,I.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(I){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=I,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(I){return null}_clonePlugins(I,g){const b={};if(this._serializePlugins(b),S._ParsePlugins(b,I,this._scene,g),this.pluginManager)for(const e of this.pluginManager._plugins){const g=I.pluginManager.getPlugin(e.name);g&&e.copyTo(g)}}getBindedMeshes(){if(this.meshMap){const I=[];for(const g in this.meshMap){const b=this.meshMap[g];b&&I.push(b)}return I}return this._scene.meshes.filter((I=>I.material===this))}forceCompilation(I,g,b,e){const c={clipPlane:!1,useInstances:!1,...b},z=this.EI(),M=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const J=()=>{if(!this._scene||!this._scene.getEngine())return;const b=z.clipPlane;if(c.clipPlane&&(z.clipPlane=new D.b(0,0,0,1)),this._storeEffectOnSubMeshes){let b=!0,z=null;if(I.Ib){const g=new o.b(0,0,0,0,0,I,void 0,!1,!1);g.materialDefines&&(g.materialDefines._renderId=-1),this.isReadyForSubMesh(I,g,c.useInstances)||(g.effect&&g.effect.getCompilationError()&&g.effect.allFallbacksProcessed()?z=g.effect.getCompilationError():(b=!1,setTimeout(J,16)))}b&&(this.allowShaderHotSwapping=M,z&&e&&e(z),g&&g(this))}else this.isReady()?(this.allowShaderHotSwapping=M,g&&g(this)):setTimeout(J,16);c.clipPlane&&(z.clipPlane=b)};J()}async forceCompilationAsync(I,g){return await new Promise(((b,e)=>{this.forceCompilation(I,(()=>{b()}),g,(I=>{e(I)}))}))}XD(I){this.EI().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(S._DirtyCallbackArray.length=0,I&S.ImageProcessingDirtyFlag&&S._DirtyCallbackArray.push(S._ImageProcessingDirtyCallBack),I&S.TextureDirtyFlag&&S._DirtyCallbackArray.push(S._TextureDirtyCallBack),I&S.LightDirtyFlag&&S._DirtyCallbackArray.push(S._LightsDirtyCallBack),I&S.FresnelDirtyFlag&&S._DirtyCallbackArray.push(S._FresnelDirtyCallBack),I&S.AttributesDirtyFlag&&S._DirtyCallbackArray.push(S._AttributeDirtyCallBack),I&S.MiscDirtyFlag&&S._DirtyCallbackArray.push(S._MiscDirtyCallBack),I&S.PrePassDirtyFlag&&S._DirtyCallbackArray.push(S._PrePassDirtyCallBack),S._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(S._RunDirtyCallBacks),this.EI().resetCachedMaterial())}resetDrawCache(){const I=this.EI().meshes;for(const g of I)if(g.Ib)for(const I of g.Ib)I.hI()===this&&I.resetDrawCache()}_markAllSubMeshesAsDirty(I){const g=this.EI();if(g.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const b=g.meshes;for(const e of b)if(e.Ib)for(const b of e.Ib){if((b.hI()||(g._hasDefaultMaterial?g.defaultMaterial:null))===this)for(const g of b._drawWrappers)g&&g.defines&&g.defines.markAllAsDirty&&this._materialContext===g.materialContext&&I(g.defines)}}_markScenePrePassDirty(){if(this.EI().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const I=this.EI().enablePrePassRenderer();I&&I.XD()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(S._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(S._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(S._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(S._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(S._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(S._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(S._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(S._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(S._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(S._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const I=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Og.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(I)}))}}setPrePassRenderer(I){return!1}dispose(I,g,b){const e=this.EI();if(e.stopAnimation(this),e.freeProcessedMaterials(),e.removeMaterial(this),this._eventInfo.forceDisposeTextures=g,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const I=this._parentContainer.materials.indexOf(this);I>-1&&this._parentContainer.materials.splice(I,1),this._parentContainer=null}if(!0!==b)if(this.meshMap)for(const c in this.meshMap){const I=this.meshMap[c];this._disposeMeshResources(I)}else{const I=e.meshes;for(const g of I)this._disposeMeshResources(g)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Og.notifyObservers(this),this.Og.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(I){if(!I)return;const g=I.ob,b=I._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(I.Ib&&b)for(const c of I.Ib){const I=c._drawWrappers;for(let z=0;z<I.length;z++){var e;const M=null===(e=I[z])||void 0===e?void 0:e.effect;if(!M)continue;b[z]===this&&(null===g||void 0===g||g._releaseVertexArrayObject(M),c._removeDrawWrapper(z,!0,!0))}}}else null===g||void 0===g||g._releaseVertexArrayObject(this._drawWrapper.effect);I.material!==this||I.sourceMesh||(I.material=null)}serialize(){const I=x.b.Serialize(this);return I.ig=this.ig.serialize(),I.uniqueId=this.uniqueId,this._serializePlugins(I),I}_serializePlugins(I){if(I.plugins={},this.pluginManager)for(const g of this.pluginManager._plugins)g.doNotSerialize||(I.plugins[g.getClassName()]=g.serialize())}static Parse(I,g,b){if(I.customType){if("BABYLON.PBRMaterial"===I.customType&&I.overloadedAlbedo&&(I.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return G.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else I.customType="BABYLON.StandardMaterial";const e=z.Tools.Instantiate(I.customType).Parse(I,g,b);return e._loadedUniqueId=I.uniqueId,e}static _ParsePlugins(I,g,b,e){if(I.plugins)for(const J in I.plugins){var c,M;const o=I.plugins[J];let n=null===(c=g.pluginManager)||void 0===c?void 0:c.getPlugin(o.name);if(!n){const I=z.Tools.Instantiate("BABYLON."+J);I&&(n=new I(g))}null===(M=n)||void 0===M||M.parse(o,b,e)}}}S.TriangleFillMode=0,S.WireFrameFillMode=1,S.PointFillMode=2,S.PointListDrawMode=3,S.LineListDrawMode=4,S.LineLoopDrawMode=5,S.LineStripDrawMode=6,S.TriangleStripDrawMode=7,S.TriangleFanDrawMode=8,S.ClockWiseSideOrientation=0,S.CounterClockWiseSideOrientation=1,S.ImageProcessingDirtyFlag=64,S.TextureDirtyFlag=1,S.LightDirtyFlag=2,S.FresnelDirtyFlag=4,S.AttributesDirtyFlag=8,S.MiscDirtyFlag=16,S.PrePassDirtyFlag=32,S.AllDirtyFlag=127,S.MATERIAL_OPAQUE=0,S.MATERIAL_ALPHATEST=1,S.MATERIAL_ALPHABLEND=2,S.MATERIAL_ALPHATESTANDBLEND=3,S.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,S.MATERIAL_NORMALBLENDMETHOD_RNM=1,S.OnEventObservable=new M.c,S._AllDirtyCallBack=I=>I.markAllAsDirty(),S._ImageProcessingDirtyCallBack=I=>I.markAsImageProcessingDirty(),S._TextureDirtyCallBack=I=>I.markAsTexturesDirty(),S._FresnelDirtyCallBack=I=>I.markAsFresnelDirty(),S._MiscDirtyCallBack=I=>I.markAsMiscDirty(),S._PrePassDirtyCallBack=I=>I.markAsPrePassDirty(),S._LightsDirtyCallBack=I=>I.markAsLightDirty(),S._AttributeDirtyCallBack=I=>I.markAsAttributesDirty(),S._FresnelAndMiscDirtyCallBack=I=>{S._FresnelDirtyCallBack(I),S._MiscDirtyCallBack(I)},S._TextureAndMiscDirtyCallBack=I=>{S._TextureDirtyCallBack(I),S._MiscDirtyCallBack(I)},S._DirtyCallbackArray=[],S._RunDirtyCallBacks=I=>{for(const g of S._DirtyCallbackArray)g(I)},(0,e.d)([(0,c.E)()],S.prototype,"id",void 0),(0,e.d)([(0,c.E)()],S.prototype,"uniqueId",void 0),(0,e.d)([(0,c.E)()],S.prototype,"name",void 0),(0,e.d)([(0,c.E)()],S.prototype,"metadata",void 0),(0,e.d)([(0,c.E)()],S.prototype,"checkReadyOnEveryCall",void 0),(0,e.d)([(0,c.E)()],S.prototype,"checkReadyOnlyOnce",void 0),(0,e.d)([(0,c.E)()],S.prototype,"state",void 0),(0,e.d)([(0,c.E)("alpha")],S.prototype,"_alpha",void 0),(0,e.d)([(0,c.E)("Gb")],S.prototype,"_backFaceCulling",void 0),(0,e.d)([(0,c.E)("cullBackFaces")],S.prototype,"_cullBackFaces",void 0),(0,e.d)([(0,c.E)()],S.prototype,"sideOrientation",void 0),(0,e.d)([(0,c.E)("alphaMode")],S.prototype,"_alphaMode",void 0),(0,e.d)([(0,c.E)()],S.prototype,"_needDepthPrePass",void 0),(0,e.d)([(0,c.E)()],S.prototype,"disableDepthWrite",void 0),(0,e.d)([(0,c.E)()],S.prototype,"disableColorWrite",void 0),(0,e.d)([(0,c.E)()],S.prototype,"forceDepthWrite",void 0),(0,e.d)([(0,c.E)()],S.prototype,"depthFunction",void 0),(0,e.d)([(0,c.E)()],S.prototype,"separateCullingPass",void 0),(0,e.d)([(0,c.E)("fogEnabled")],S.prototype,"_fogEnabled",void 0),(0,e.d)([(0,c.E)()],S.prototype,"pointSize",void 0),(0,e.d)([(0,c.E)()],S.prototype,"zOffset",void 0),(0,e.d)([(0,c.E)()],S.prototype,"zOffsetUnits",void 0),(0,e.d)([(0,c.E)()],S.prototype,"pointsCloud",null),(0,e.d)([(0,c.E)()],S.prototype,"fillMode",null),(0,e.d)([(0,c.E)()],S.prototype,"useLogarithmicDepth",null),(0,e.d)([(0,c.E)()],S.prototype,"transparencyMode",null)},12943:(I,g,b)=>{b.d(g,{$:()=>Z,A:()=>E,B:()=>mI,F:()=>x,G:()=>p,J:()=>r,N:()=>C,R:()=>Y,T:()=>f,V:()=>F,W:()=>O,Y:()=>H,Z:()=>i,_:()=>h,b:()=>v,d:()=>D,g:()=>R,j:()=>G,n:()=>k,r:()=>S,u:()=>V,x:()=>s,y:()=>a});var e=b(12420),c=b(12637),z=b(12449),M=b(12885),J=b(12952);const o=c.Eg.Black(),n={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function G(I,g,b){if(!I||I.LOGARITHMICDEPTH||I.indexOf&&I.indexOf("LOGARITHMICDEPTH")>=0){const I=b.activeCamera;1===I.mode&&e.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),g.setFloat("logarithmicDepthConstant",2/(Math.log(I.maxZ+1)/Math.LN2))}}function D(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]&&arguments[3];b&&I.fogEnabled&&(!g||g.applyFog)&&0!==I.fogMode&&(b.setFloat4("vFogInfos",I.fogMode,I.fogStart,I.fogEnd,I.fogDensity),e?(I.fogColor.toLinearSpaceToRef(o,I.getEngine().useExactSrgbConversions),b.setColor3("vFogColor",o)):b.setColor3("vFogColor",I.fogColor))}function p(I,g,b,e,c,z,M,J,o,G){const D=I.numMaxInfluencers||I.numInfluencers;return D<=0?0:(g.push("#define MORPHTARGETS"),I.hasPositions&&g.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),I.hasNormals&&g.push("#define MORPHTARGETTEXTURE_HASNORMALS"),I.hasTangents&&g.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),I.hasUVs&&g.push("#define MORPHTARGETTEXTURE_HASUVS"),I.hasUV2s&&g.push("#define MORPHTARGETTEXTURE_HASUV2S"),I.hasColors&&g.push("#define MORPHTARGETTEXTURE_HASCOLORS"),I.supportsPositions&&c&&g.push("#define MORPHTARGETS_POSITION"),I.supportsNormals&&z&&g.push("#define MORPHTARGETS_NORMAL"),I.supportsTangents&&M&&g.push("#define MORPHTARGETS_TANGENT"),I.supportsUVs&&J&&g.push("#define MORPHTARGETS_UV"),I.supportsUV2s&&o&&g.push("#define MORPHTARGETS_UV2"),I.supportsColors&&G&&g.push("#define MORPHTARGETS_COLOR"),g.push("#define NUM_MORPH_INFLUENCERS "+D),I.isUsingTextureForTargets&&g.push("#define MORPHTARGETS_TEXTURE"),n.NUM_MORPH_INFLUENCERS=D,n.NORMAL=z,n.TANGENT=M,n.UV=J,n.UV2=o,n.COLOR=G,x(b,e,n,c),D)}function x(I,g,b){let c=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const M=b.NUM_MORPH_INFLUENCERS;if(M>0&&z.b.LastCreatedEngine){const J=z.b.LastCreatedEngine.getCaps().maxVertexAttribs,o=g.morphTargetManager;if(null!==o&&void 0!==o&&o.isUsingTextureForTargets)return;const n=o&&o.supportsPositions&&c,G=o&&o.supportsNormals&&b.NORMAL,D=o&&o.supportsTangents&&b.TANGENT,p=o&&o.supportsUVs&&b.UV1,x=o&&o.supportsUV2s&&b.UV2,Z=o&&o.supportsColors&&b.VERTEXCOLOR;for(let b=0;b<M;b++)n&&I.push("position"+b),G&&I.push("normal"+b),D&&I.push("tangent"+b),p&&I.push("uv_"+b),x&&I.push("uv2_"+b),Z&&I.push("color"+b),I.length>J&&e.b.Error("Cannot add more vertex attributes for mesh "+g.name)}}function Z(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];I.push("world0"),I.push("world1"),I.push("world2"),I.push("world3"),g&&(I.push("previousWorld0"),I.push("previousWorld1"),I.push("previousWorld2"),I.push("previousWorld3"))}function k(I,g){const b=I.morphTargetManager;I&&b&&g.setFloatArray("morphTargetInfluences",b.influences)}function S(I,g){g.bindToEffect(I,"Scene")}function f(I,g,b){g._needUVs=!0,g[b]=!0,I.optimizeUVAllocation&&I.getTextureMatrix().isIdentityAs3x2()?(g[b+"DIRECTUV"]=I.coordinatesIndex+1,g["MAINUV"+(I.coordinatesIndex+1)]=!0):g[b+"DIRECTUV"]=0}function V(I,g,b){const e=I.getTextureMatrix();g.zb(b+"Matrix",e)}function a(I,g,b){b.BAKED_VERTEX_ANIMATION_TEXTURE&&b.INSTANCES&&I.push("bakedVertexAnimationSettingsInstanced")}function v(I,g,b){var e;if(g&&I&&(I.computeBonesUsingShaders&&g._bonesComputationForcedToCPU&&(I.computeBonesUsingShaders=!1),I.useBones&&I.computeBonesUsingShaders&&I.skeleton)){const c=I.skeleton;if(c.isUsingTextureForMatrices&&g.getUniformIndex("boneTextureWidth")>-1){const b=c.getTransformMatrixTexture(I);g.setTexture("boneSampler",b),g.setFloat("boneTextureWidth",4*(c.bones.length+1))}else{const z=c.getTransformMatrices(I);z&&(g.setMatrices("mBones",z),b&&I.EI().prePassRenderer&&I.EI().prePassRenderer.getIndex(2)&&(b.previousBones[I.uniqueId]||(b.previousBones[I.uniqueId]=z.slice()),g.setMatrices("mPreviousBones",b.previousBones[I.uniqueId]),e=z,b.previousBones[I.uniqueId].set(e)))}}}function X(I,g,b,e,c){let z=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];I._bindLight(g,b,e,c,z)}function R(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const z=Math.min(g.lightSources.length,c);for(let M=0;M<z;M++){X(g.lightSources[M],M,I,b,"boolean"===typeof e?e:e.SPECULARTERM,g.receiveShadows)}}function E(I,g,b,e){b.NUM_BONE_INFLUENCERS>0&&(e.addCPUSkinningFallback(0,g),I.push("matricesIndices"),I.push("matricesWeights"),b.NUM_BONE_INFLUENCERS>4&&(I.push("matricesIndicesExtra"),I.push("matricesWeightsExtra")))}function mI(I,g){(g.INSTANCES||g.THIN_INSTANCES)&&Z(I,!!g.PREPASS_VELOCITY),g.INSTANCESCOLOR&&I.push("instanceColor")}function s(I,g){let b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,c=0;for(let z=0;z<b&&I["LIGHT"+z];z++)z>0&&(c=e+z,g.addFallback(c,"LIGHT"+z)),I.SHADOWS||(I["SHADOW"+z]&&g.addFallback(e,"SHADOW"+z),I["SHADOWPCF"+z]&&g.addFallback(e,"SHADOWPCF"+z),I["SHADOWPCSS"+z]&&g.addFallback(e,"SHADOWPCSS"+z),I["SHADOWPOISSON"+z]&&g.addFallback(e,"SHADOWPOISSON"+z),I["SHADOWESM"+z]&&g.addFallback(e,"SHADOWESM"+z),I["SHADOWCLOSEESM"+z]&&g.addFallback(e,"SHADOWCLOSEESM"+z));return c++}function F(I,g,b,e,c,z,M){let J=arguments.length>7&&void 0!==arguments[7]&&arguments[7];M._areMiscDirty&&(M.LOGARITHMICDEPTH=b,M.POINTSIZE=e,M.FOG=c&&function(I,g){return g.fogEnabled&&I.applyFog&&0!==g.fogMode}(I,g),M.NONUNIFORMSCALING=I.nonUniformScaling,M.ALPHATEST=z,M.DECAL_AFTER_DETAIL=J)}function Y(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!b._areLightsDirty)return b._needNormals;let M=0;const J={needNormals:b._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(I.lightsEnabled&&!z)for(const n of g.lightSources)if(d(I,g,n,M,b,e,J),M++,M===c)break;b.SPECULARTERM=J.specularEnabled,b.SHADOWS=J.shadowEnabled;for(let n=M;n<c;n++)void 0!==b["LIGHT"+n]&&(b["LIGHT"+n]=!1,b["HEMILIGHT"+n]=!1,b["POINTLIGHT"+n]=!1,b["DIRLIGHT"+n]=!1,b["SPOTLIGHT"+n]=!1,b["AREALIGHT"+n]=!1,b["SHADOW"+n]=!1,b["SHADOWCSM"+n]=!1,b["SHADOWCSMDEBUG"+n]=!1,b["SHADOWCSMNUM_CASCADES"+n]=!1,b["SHADOWCSMUSESHADOWMAXZ"+n]=!1,b["SHADOWCSMNOBLEND"+n]=!1,b["SHADOWCSM_RIGHTHANDED"+n]=!1,b["SHADOWPCF"+n]=!1,b["SHADOWPCSS"+n]=!1,b["SHADOWPOISSON"+n]=!1,b["SHADOWESM"+n]=!1,b["SHADOWCLOSEESM"+n]=!1,b["SHADOWCUBE"+n]=!1,b["SHADOWLOWQUALITY"+n]=!1,b["SHADOWMEDIUMQUALITY"+n]=!1);const o=I.getEngine().getCaps();return void 0===b.SHADOWFLOAT&&(J.needRebuild=!0),b.SHADOWFLOAT=J.shadowEnabled&&(o.textureFloatRender&&o.textureFloatLinearFiltering||o.textureHalfFloatRender&&o.textureHalfFloatLinearFiltering),b.LIGHTMAPEXCLUDED=J.lightmapMode,J.needRebuild&&b.rebuild(),J.needNormals}function d(I,g,b,e,c,z,J){switch(J.needNormals=!0,void 0===c["LIGHT"+e]&&(J.needRebuild=!0),c["LIGHT"+e]=!0,c["SPOTLIGHT"+e]=!1,c["HEMILIGHT"+e]=!1,c["POINTLIGHT"+e]=!1,c["DIRLIGHT"+e]=!1,c["AREALIGHT"+e]=!1,b.prepareLightSpecificDefines(c,e),c["LIGHT_FALLOFF_PHYSICAL"+e]=!1,c["LIGHT_FALLOFF_GLTF"+e]=!1,c["LIGHT_FALLOFF_STANDARD"+e]=!1,b.falloffType){case M.d.FALLOFF_GLTF:c["LIGHT_FALLOFF_GLTF"+e]=!0;break;case M.d.FALLOFF_PHYSICAL:c["LIGHT_FALLOFF_PHYSICAL"+e]=!0;break;case M.d.FALLOFF_STANDARD:c["LIGHT_FALLOFF_STANDARD"+e]=!0}if(z&&!b.PD.equalsFloats(0,0,0)&&(J.specularEnabled=!0),c["SHADOW"+e]=!1,c["SHADOWCSM"+e]=!1,c["SHADOWCSMDEBUG"+e]=!1,c["SHADOWCSMNUM_CASCADES"+e]=!1,c["SHADOWCSMUSESHADOWMAXZ"+e]=!1,c["SHADOWCSMNOBLEND"+e]=!1,c["SHADOWCSM_RIGHTHANDED"+e]=!1,c["SHADOWPCF"+e]=!1,c["SHADOWPCSS"+e]=!1,c["SHADOWPOISSON"+e]=!1,c["SHADOWESM"+e]=!1,c["SHADOWCLOSEESM"+e]=!1,c["SHADOWCUBE"+e]=!1,c["SHADOWLOWQUALITY"+e]=!1,c["SHADOWMEDIUMQUALITY"+e]=!1,g&&g.receiveShadows&&I.shadowsEnabled&&b.shadowEnabled){const g=b.getShadowGenerator(I.activeCamera)??b.getShadowGenerator();if(g){const I=g.getShadowMap();I&&I.renderList&&I.renderList.length>0&&(J.shadowEnabled=!0,g.prepareDefines(c,e))}}b.lightmapMode!=M.d.LIGHTMAP_DEFAULT?(J.lightmapMode=!0,c["LIGHTMAPEXCLUDED"+e]=!0,c["LIGHTMAPNOSPECULAR"+e]=b.lightmapMode==M.d.LIGHTMAP_SHADOWSONLY):(c["LIGHTMAPEXCLUDED"+e]=!1,c["LIGHTMAPNOSPECULAR"+e]=!1)}function C(I,g,b,e,c){let z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,M=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=function(I,g){let b=!1;if(I.activeCamera){const e=g.CAMERA_ORTHOGRAPHIC?1:0,c=g.CAMERA_PERSPECTIVE?1:0,z=1===I.activeCamera.mode?1:0,M=0===I.activeCamera.mode?1:0;(e^z||c^M)&&(g.CAMERA_ORTHOGRAPHIC=1===z,g.CAMERA_PERSPECTIVE=1===M,b=!0)}return b}(I,e);!1!==z&&(o=(0,J.g)(b,I,e)),e.DEPTHPREPASS!==!g.getColorWrite()&&(e.DEPTHPREPASS=!e.DEPTHPREPASS,o=!0),e.INSTANCES!==c&&(e.INSTANCES=c,o=!0),e.THIN_INSTANCES!==M&&(e.THIN_INSTANCES=M,o=!0),o&&e.markAsUnprocessed()}function r(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]&&arguments[4],z=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],M=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!g._areAttributesDirty&&g._needNormals===g._normals&&g._needUVs===g._uvs)return!1;g._normals=g._needNormals,g._uvs=g._needUVs,g.NORMAL=g._needNormals&&I.isVerticesDataPresent("normal"),g._needNormals&&I.isVerticesDataPresent("tangent")&&(g.TANGENT=!0);for(let J=1;J<=6;++J)g["UV"+J]=!!g._needUVs&&I.isVerticesDataPresent(`uv${1===J?"":J}`);if(b){const b=I.useVertexColors&&I.isVerticesDataPresent("color");g.VERTEXCOLOR=b,g.VERTEXALPHA=I.hasVertexAlpha&&b&&z}return I.isVerticesDataPresent("instanceColor")&&(I.hasInstances||I.hasThinInstances)&&(g.INSTANCESCOLOR=!0),e&&function(I,g){if(I.useBones&&I.computeBonesUsingShaders&&I.skeleton){g.NUM_BONE_INFLUENCERS=I.numBoneInfluencers;const b=void 0!==g.BONETEXTURE;if(I.skeleton.isUsingTextureForMatrices&&b)g.BONETEXTURE=!0;else{g.BonesPerMesh=I.skeleton.bones.length+1,g.BONETEXTURE=!b&&void 0;const e=I.EI().prePassRenderer;if(e&&e.enabled){const b=-1===e.excludedSkinnedMesh.indexOf(I);g.BONES_VELOCITY_ENABLED=b}}}else g.NUM_BONE_INFLUENCERS=0,g.BonesPerMesh=0,void 0!==g.BONETEXTURE&&(g.BONETEXTURE=!1)}(I,g),c&&function(I,g){const b=I.morphTargetManager;b?(g.MORPHTARGETS_UV=b.supportsUVs&&g.UV1,g.MORPHTARGETS_UV2=b.supportsUV2s&&g.UV2,g.MORPHTARGETS_TANGENT=b.supportsTangents&&g.TANGENT,g.MORPHTARGETS_NORMAL=b.supportsNormals&&g.NORMAL,g.MORPHTARGETS_POSITION=b.supportsPositions,g.MORPHTARGETS_COLOR=b.supportsColors,g.MORPHTARGETTEXTURE_HASUVS=b.hasUVs,g.MORPHTARGETTEXTURE_HASUV2S=b.hasUV2s,g.MORPHTARGETTEXTURE_HASTANGENTS=b.hasTangents,g.MORPHTARGETTEXTURE_HASNORMALS=b.hasNormals,g.MORPHTARGETTEXTURE_HASPOSITIONS=b.hasPositions,g.MORPHTARGETTEXTURE_HASCOLORS=b.hasColors,g.NUM_MORPH_INFLUENCERS=b.numMaxInfluencers||b.numInfluencers,g.MORPHTARGETS=g.NUM_MORPH_INFLUENCERS>0,g.MORPHTARGETS_TEXTURE=b.isUsingTextureForTargets):(g.MORPHTARGETS_UV=!1,g.MORPHTARGETS_UV2=!1,g.MORPHTARGETS_TANGENT=!1,g.MORPHTARGETS_NORMAL=!1,g.MORPHTARGETS_POSITION=!1,g.MORPHTARGETS_COLOR=!1,g.MORPHTARGETTEXTURE_HASUVS=!1,g.MORPHTARGETTEXTURE_HASUV2S=!1,g.MORPHTARGETTEXTURE_HASTANGENTS=!1,g.MORPHTARGETTEXTURE_HASNORMALS=!1,g.MORPHTARGETTEXTURE_HASPOSITIONS=!1,g.MORPHTARGETTEXTURE_HAS_COLORS=!1,g.MORPHTARGETS=!1,g.NUM_MORPH_INFLUENCERS=0)}(I,g),M&&function(I,g){const b=I.bakedVertexAnimationManager;g.BAKED_VERTEX_ANIMATION_TEXTURE=!(!b||!b.isEnabled)}(I,g),!0}function O(I,g){if(I.activeCamera){const b=g.MULTIVIEW;g.MULTIVIEW=null!==I.activeCamera.outputRenderTarget&&I.activeCamera.outputRenderTarget.getViewCount()>1,g.MULTIVIEW!=b&&g.markAsUnprocessed()}}function H(I,g,b){const e=g.ORDER_INDEPENDENT_TRANSPARENCY,c=g.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;g.ORDER_INDEPENDENT_TRANSPARENCY=I.useOrderIndependentTransparency&&b,g.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!I.getEngine().getCaps().textureFloatLinearFiltering,e===g.ORDER_INDEPENDENT_TRANSPARENCY&&c===g.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||g.markAsUnprocessed()}function i(I,g,b){const e=g.PREPASS;if(!g._arePrePassDirty)return;const c=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(I.prePassRenderer&&I.prePassRenderer.enabled&&b){g.PREPASS=!0,g.SCENE_MRT_COUNT=I.prePassRenderer.mrtCount,g.PREPASS_NORMAL_WORLDSPACE=I.prePassRenderer.generateNormalsInWorldSpace,g.PREPASS_COLOR=!0,g.PREPASS_COLOR_INDEX=0;for(let b=0;b<c.length;b++){const e=I.prePassRenderer.getIndex(c[b].type);-1!==e?(g[c[b].define]=!0,g[c[b].index]=e):g[c[b].define]=!1}}else{g.PREPASS=!1;for(let I=0;I<c.length;I++)g[c[I].define]=!1}g.PREPASS!=e&&(g.markAsUnprocessed(),g.markAsImageProcessingDirty())}function U(I,g,b,e){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6];c&&c.push("Light"+I),z||(g.push("vLightData"+I,"vLightDiffuse"+I,"vLightSpecular"+I,"vLightDirection"+I,"vLightWidth"+I,"vLightHeight"+I,"vLightFalloff"+I,"vLightGround"+I,"lightMatrix"+I,"shadowsInfo"+I,"depthValues"+I),b.push("shadowTexture"+I),b.push("depthTexture"+I),g.push("viewFrustumZ"+I,"cascadeBlendFactor"+I,"lightSizeUVCorrection"+I,"depthCorrection"+I,"penumbraDarkness"+I,"frustumLengths"+I),e&&(b.push("projectionLightTexture"+I),g.push("textureProjectionMatrix"+I)),M&&b.push("iesLightTexture"+I))}function h(I,g,b){let e,c,z=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(I.uniformsNames){const M=I;e=M.uniformsNames,c=M.uniformBuffersNames,g=M.samplers,b=M.defines,z=M.maxSimultaneousLights||0}else e=I,g||(g=[]);for(let M=0;M<z&&b["LIGHT"+M];M++)U(M,e,g,b["PROJECTEDLIGHTTEXTURE"+M],c,!1,b["IESLIGHTTEXTURE"+M]);b.NUM_MORPH_INFLUENCERS&&(e.push("morphTargetInfluences"),e.push("morphTargetCount")),b.BAKED_VERTEX_ANIMATION_TEXTURE&&(e.push("bakedVertexAnimationSettings"),e.push("bakedVertexAnimationTextureSizeInverted"),e.push("bakedVertexAnimationTime"),g.push("bakedVertexAnimationTexture"))}},12899:(I,g,b)=>{b.d(g,{d:()=>z});var e=b(12590),c=b(12901);class z extends c.b{constructor(I,g){let b=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(I,g,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new e.Matrix,this._storeEffectOnSubMeshes=b}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(I,g){return!!I&&(!this._storeEffectOnSubMeshes||(!I.Ib||0===I.Ib.length||this.isReadyForSubMesh(I,I.Ib[0],g)))}_isReadyForSubMesh(I){const g=I.materialDefines;return!(this.checkReadyOnEveryCall||!I.effect||!g||g._renderId!==this.EI().getRenderId())}bindOnlyWorldMatrix(I){this._activeEffect.setMatrix("world",I)}bindOnlyNormalMatrix(I){this._activeEffect.setMatrix("normalMatrix",I)}bind(I,g){g&&this.bindForSubMesh(I,g,g.Ib[0])}_afterBind(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0;super._afterBind(I,g,b),this.EI()._cachedEffect=g,b?b._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return b._drawWrapper._forceRebindOnNextCall||I.isCachedMaterialInvalid(this,g,e)}dispose(I,g,b){this._activeEffect=void 0,super.dispose(I,g,b)}}},12934:(I,g,b)=>{b.d(g,{b:()=>J,d:()=>o});var e=b(12577),c=b(12590),z=b(12584);class M{static extractMinAndMaxIndexed(I,g,b,e,c,z){for(let M=b;M<b+e;M++){const b=3*g[M],e=I[b],J=I[b+1],o=I[b+2];c.minimizeInPlaceFromFloats(e,J,o),z.maximizeInPlaceFromFloats(e,J,o)}}static extractMinAndMax(I,g,b,e,c,z){for(let M=g,J=g*e;M<g+b;M++,J+=e){const g=I[J],b=I[J+1],e=I[J+2];c.minimizeInPlaceFromFloats(g,b,e),z.maximizeInPlaceFromFloats(g,b,e)}}}function J(I,g,b,e){let z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const J=new c.Vg(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new c.Vg(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return M.extractMinAndMaxIndexed(I,g,b,e,J,o),z&&(J.x-=J.x*z.x+z.y,J.y-=J.y*z.x+z.y,J.z-=J.z*z.x+z.y,o.x+=o.x*z.x+z.y,o.y+=o.y*z.x+z.y,o.z+=o.z*z.x+z.y),{minimum:J,maximum:o}}function o(I,g,b){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,z=arguments.length>4?arguments[4]:void 0;const J=new c.Vg(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o=new c.Vg(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return z||(z=3),M.extractMinAndMax(I,g,b,z,J,o),e&&(J.x-=J.x*e.x+e.y,J.y-=J.y*e.x+e.y,J.z-=J.z*e.x+e.y,o.x+=o.x*e.x+e.y,o.y+=o.y*e.x+e.y,o.z+=o.z*e.x+e.y),{minimum:J,maximum:o}}(0,e.d)([z.g.filter((function(){for(var I=arguments.length,g=new Array(I),b=0;b<I;b++)g[b]=arguments[b];let[e,c]=g;return!Array.isArray(e)&&!Array.isArray(c)}))],M,"extractMinAndMaxIndexed",null),(0,e.d)([z.g.filter((function(){for(var I=arguments.length,g=new Array(I),b=0;b<I;b++)g[b]=arguments[b];let[e]=g;return!Array.isArray(e)}))],M,"extractMinAndMax",null)},12905:(I,g,b)=>{b.d(g,{b:()=>o});var e=b(12659),c=b(12908),z=b(12916),M=b(12934),J=b(12704);class o{get materialDefines(){var I;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(I=this._getDrawWrapper())||void 0===I?void 0:I.defines}set materialDefines(I){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=I}_getDrawWrapper(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];I=I??this._engine.currentRenderPassId;let b=this._drawWrappers[I];return!b&&g&&(this._drawWrappers[I]=b=new J.e(this._mesh.EI().getEngine())),b}_removeDrawWrapper(I){let g=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var b;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(b=this._drawWrappers[I])||void 0===b||b.dispose(g));this._drawWrappers[I]=void 0}get effect(){var I;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(I=this._getDrawWrapper())||void 0===I?void 0:I.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(I){this._mainDrawWrapperOverride=I}setEffect(I){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,b=arguments.length>2?arguments[2]:void 0,e=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const c=this._drawWrapper;c.setEffect(I,g,e),void 0!==b&&(c.materialContext=b),I||(c.defines=null,c.materialContext=void 0)}resetDrawCache(I){let g=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==I)return void this._removeDrawWrapper(I,!0,g);for(const I of this._drawWrappers)null===I||void 0===I||I.dispose(g)}this._drawWrappers=[]}static AddToMesh(I,g,b,e,c,z,M){return new o(I,g,b,e,c,z,M,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(I,g,b,e,c,z,M){let J=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],o=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=I,this.verticesStart=g,this.verticesCount=b,this.indexStart=e,this.indexCount=c,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=z,this._renderingMesh=M||z,o&&z.Ib.push(this),this._engine=this._mesh.EI().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=z.Ib.length-1,J&&(this.refreshBoundingInfo(),z.Mb(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(I){return this._boundingInfo=I,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const I=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return I||this._renderingMesh}hI(){let I=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const g=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!g)return I&&this._mesh.EI()._hasDefaultMaterial?this._mesh.EI().defaultMaterial:null;if(this._isMultiMaterial(g)){const I=g.getSubMaterial(this.materialIndex);return this._currentMaterial!==I&&(this._currentMaterial=I,this.resetDrawCache()),I}return g}_isMultiMaterial(I){return void 0!==I.getSubMaterial}refreshBoundingInfo(){let I=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.ob)return this;if(I||(I=this._renderingMesh.getVerticesData(e.f.PositionKind)),!I)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const g=this._renderingMesh.nb();let b;if(0===this.indexStart&&this.indexCount===g.length){const I=this._renderingMesh.getBoundingInfo();b={minimum:I.minimum.clone(),maximum:I.maximum.clone()}}else b=(0,M.b)(I,g,this.indexStart,this.indexCount,this._renderingMesh.ob.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(b.minimum,b.maximum):this._boundingInfo=new z.d(b.minimum,b.maximum),this}_checkCollision(I){return this.getBoundingInfo()._checkCollision(I)}updateBoundingInfo(I){let g=this.getBoundingInfo();return g||(this.refreshBoundingInfo(),g=this.getBoundingInfo()),g&&g.update(I),this}isInFrustum(I){const g=this.getBoundingInfo();return!!g&&g.isInFrustum(I,this._mesh.tp)}isCompletelyInFrustum(I){const g=this.getBoundingInfo();return!!g&&g.isCompletelyInFrustum(I)}render(I){return this._renderingMesh.render(this,I,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(I,g){if(!this._linesIndexBuffer){const b=6*Math.floor(this.indexCount/3),e=this.verticesStart+this.verticesCount>65535?new Uint32Array(b):new Uint16Array(b);let c=0;if(0===I.length)for(let I=this.indexStart;I<this.indexStart+this.indexCount;I+=3)e[c++]=I,e[c++]=I+1,e[c++]=I+1,e[c++]=I+2,e[c++]=I+2,e[c++]=I;else for(let g=this.indexStart;g<this.indexStart+this.indexCount;g+=3)e[c++]=I[g],e[c++]=I[g+1],e[c++]=I[g+1],e[c++]=I[g+2],e[c++]=I[g+2],e[c++]=I[g];this._linesIndexBuffer=g.createIndexBuffer(e),this._linesIndexCount=e.length}return this._linesIndexBuffer}canIntersects(I){const g=this.getBoundingInfo();return!!g&&I.intersectsBox(g.boundingBox)}intersects(I,g,b,e,c){const z=this.hI();if(!z)return null;let M=3,J=!1;switch(z.fillMode){case 3:case 5:case 6:case 8:return null;case 7:M=1,J=!0}return 4===z.fillMode?b.length?this._intersectLines(I,g,b,this._mesh.intersectionThreshold,e):this._intersectUnIndexedLines(I,g,b,this._mesh.intersectionThreshold,e):!b.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(I,g,b,e,c):this._intersectTriangles(I,g,b,M,J,e,c)}_intersectLines(I,g,b,e,z){let M=null;for(let J=this.indexStart;J<this.indexStart+this.indexCount;J+=2){const o=g[b[J]],n=g[b[J+1]],G=I.intersectionSegment(o,n,e);if(!(G<0)&&((z||!M||G<M.distance)&&(M=new c.b(null,null,G),M.faceId=J/2,z)))break}return M}_intersectUnIndexedLines(I,g,b,e,z){let M=null;for(let J=this.verticesStart;J<this.verticesStart+this.verticesCount;J+=2){const b=g[J],o=g[J+1],n=I.intersectionSegment(b,o,e);if(!(n<0)&&((z||!M||n<M.distance)&&(M=new c.b(null,null,n),M.faceId=J/2,z)))break}return M}_intersectTriangles(I,g,b,e,c,z,M){let J=null,o=-1;for(let n=this.indexStart;n<this.indexStart+this.indexCount-(3-e);n+=e){o++;const e=b[n],G=b[n+1],D=b[n+2];if(c&&4294967295===D){n+=2;continue}const p=g[e],x=g[G],Z=g[D];if(!p||!x||!Z)continue;if(M&&!M(p,x,Z,I,e,G,D))continue;const k=I.intersectsTriangle(p,x,Z);if(k){if(k.distance<0)continue;if((z||!J||k.distance<J.distance)&&(J=k,J.faceId=o,z))break}}return J}_intersectUnIndexedTriangles(I,g,b,e,c){let z=null;for(let M=this.verticesStart;M<this.verticesStart+this.verticesCount;M+=3){const b=g[M],J=g[M+1],o=g[M+2];if(c&&!c(b,J,o,I,-1,-1,-1))continue;const n=I.intersectsTriangle(b,J,o);if(n){if(n.distance<0)continue;if((e||!z||n.distance<z.distance)&&(z=n,z.faceId=M/3,e))break}}return z}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(I,g){const b=new o(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,I,g,!1);if(!this.IsGlobal){const I=this.getBoundingInfo();if(!I)return b;b._boundingInfo=new z.d(I.minimum,I.maximum)}return b}dispose(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.EI().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const g=this._mesh.Ib.indexOf(this);this._mesh.Ib.splice(g,1),this.resetDrawCache(void 0,I)}getClassName(){return"SubMesh"}static CreateFromIndices(I,g,b,e,c){let z=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],M=Number.MAX_VALUE,J=-Number.MAX_VALUE;const n=(c||e).nb();for(let o=g;o<g+b;o++){const I=n[o];I<M&&(M=I),I>J&&(J=I)}return new o(I,M,J-M+1,g,b,e,c,z)}}}}]);