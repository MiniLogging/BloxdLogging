"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[24],{11522:(B,I,C)=>{C.d(I,{c:()=>M});class M{constructor(B,I,C){this.bu=B,this.bv=I,this.distance=C,this.faceId=0,this.subMeshId=0}}},11536:(B,I,C)=>{C.d(I,{b:()=>f});var M=C(11204),x=C(11194),y=C(11197);class f{constructor(B,I,C){this.vectors=(0,M.b)(8,x.HI.Zero),this.center=x.HI.Zero(),this.centerWorld=x.HI.Zero(),this.extendSize=x.HI.Zero(),this.extendSizeWorld=x.HI.Zero(),this.directions=(0,M.b)(3,x.HI.Zero),this.vectorsWorld=(0,M.b)(8,x.HI.Zero),this.minimumWorld=x.HI.Zero(),this.maximumWorld=x.HI.Zero(),this.minimum=x.HI.Zero(),this.maximum=x.HI.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(B,I,C)}reConstruct(B,I,C){const M=B.x,y=B.y,f=B.z,L=I.x,e=I.y,g=I.z,N=this.vectors;this.minimum.vf(M,y,f),this.maximum.vf(L,e,g),N[0].vf(M,y,f),N[1].vf(L,e,g),N[2].vf(L,y,f),N[3].vf(M,e,f),N[4].vf(M,y,g),N[5].vf(L,e,f),N[6].vf(M,e,g),N[7].vf(L,y,g),I.addToRef(B,this.center).scaleInPlace(.5),I.subtractToRef(B,this.extendSize).scaleInPlace(.5),this._worldMatrix=C||x.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(B){const I=f._TmpVector3,C=this.maximum.subtractToRef(this.minimum,I[0]),M=C.length();C.normalizeFromLength(M);const x=M*B,y=C.scaleInPlace(.5*x),L=this.center.subtractToRef(y,I[1]),e=this.center.addToRef(y,I[2]);return this.reConstruct(L,e,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(B){const I=this.minimumWorld,C=this.maximumWorld,M=this.directions,y=this.vectorsWorld,f=this.vectors;if(B.isIdentity()){I.M(this.minimum),C.M(this.maximum);for(let B=0;B<8;++B)y[B].M(f[B]);this.extendSizeWorld.M(this.extendSize),this.centerWorld.M(this.center)}else{I.Tf(Number.MAX_VALUE),C.Tf(-Number.MAX_VALUE);for(let M=0;M<8;++M){const L=y[M];x.HI.TransformCoordinatesToRef(f[M],B,L),I.minimizeInPlace(L),C.maximizeInPlace(L)}C.subtractToRef(I,this.extendSizeWorld).scaleInPlace(.5),C.addToRef(I,this.centerWorld).scaleInPlace(.5)}x.HI.FromArrayToRef(B.m,0,M[0]),x.HI.FromArrayToRef(B.m,4,M[1]),x.HI.FromArrayToRef(B.m,8,M[2]),this._worldMatrix=B}isInFrustum(B){return f.IsInFrustum(this.vectorsWorld,B)}isCompletelyInFrustum(B){return f.IsCompletelyInFrustum(this.vectorsWorld,B)}intersectsPoint(B){const I=this.minimumWorld,C=this.maximumWorld,M=I.x,x=I.y,f=I.z,L=C.x,e=C.y,g=C.z,N=B.x,R=B.y,H=B.z,F=-y.d;return!(L-N<F||F>N-M)&&(!(e-R<F||F>R-x)&&!(g-H<F||F>H-f))}intersectsSphere(B){return f.IntersectsSphere(this.minimumWorld,this.maximumWorld,B.centerWorld,B.radiusWorld)}intersectsMinMax(B,I){const C=this.minimumWorld,M=this.maximumWorld,x=C.x,y=C.y,f=C.z,L=M.x,e=M.y,g=M.z,N=B.x,R=B.y,H=B.z,F=I.x,k=I.y,q=I.z;return!(L<N||x>F)&&(!(e<R||y>k)&&!(g<H||f>q))}dispose(){var B,I;null===(B=this._drawWrapperFront)||void 0===B||B.dispose(),null===(I=this._drawWrapperBack)||void 0===I||I.dispose()}static Intersects(B,I){return B.intersectsMinMax(I.minimumWorld,I.maximumWorld)}static IntersectsSphere(B,I,C,M){const y=f._TmpVector3[0];x.HI.ClampToRef(C,B,I,y);return x.HI.DistanceSquared(C,y)<=M*M}static IsCompletelyInFrustum(B,I){for(let C=0;C<6;++C){const M=I[C];for(let I=0;I<8;++I)if(M.dotCoordinate(B[I])<0)return!1}return!0}static IsInFrustum(B,I){for(let C=0;C<6;++C){let M=!0;const x=I[C];for(let I=0;I<8;++I)if(x.dotCoordinate(B[I])>=0){M=!1;break}if(M)return!1}return!0}}f._TmpVector3=(0,M.b)(3,x.HI.Zero)},11527:(B,I,C)=>{C.d(I,{b:()=>R});var M=C(11204),x=C(11194),y=C(11536),f=C(11545);const L={min:0,max:0},e={min:0,max:0},g=(B,I,C)=>{const M=x.HI.Dot(I.centerWorld,B),y=Math.abs(x.HI.Dot(I.directions[0],B))*I.extendSize.x+Math.abs(x.HI.Dot(I.directions[1],B))*I.extendSize.y+Math.abs(x.HI.Dot(I.directions[2],B))*I.extendSize.z;C.min=M-y,C.max=M+y},N=(B,I,C)=>(g(B,I,L),g(B,C,e),!(L.min>e.max||e.min>L.max));class R{constructor(B,I,C){this._isLocked=!1,this.boundingBox=new y.b(B,I,C),this.boundingSphere=new f.b(B,I,C)}reConstruct(B,I,C){this.boundingBox.reConstruct(B,I,C),this.boundingSphere.reConstruct(B,I,C)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(B){this._isLocked=B}update(B){this._isLocked||(this.boundingBox._update(B),this.boundingSphere._update(B))}centerOn(B,I){const C=R._TmpVector3[0].M(B).cR(I),M=R._TmpVector3[1].M(B).addInPlace(I);return this.boundingBox.reConstruct(C,M,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(C,M,this.boundingBox.getWorldMatrix()),this}encapsulate(B){const I=x.HI.Minimize(this.minimum,B),C=x.HI.Maximize(this.maximum,B);return this.reConstruct(I,C,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(B){const I=x.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(I);const C=x.TmpVectors.HI[0];return x.HI.TransformCoordinatesToRef(B.boundingBox.minimumWorld,I,C),this.encapsulate(C),x.HI.TransformCoordinatesToRef(B.boundingBox.maximumWorld,I,C),this.encapsulate(C),this}scale(B){return this.boundingBox.scale(B),this.boundingSphere.scale(B),this}isInFrustum(B){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===I||3===I)&&this.boundingSphere.isCenterInFrustum(B))return!0;if(!this.boundingSphere.isInFrustum(B))return!1;return!(1!==I&&3!==I)||this.boundingBox.isInFrustum(B)}get diagonalLength(){const B=this.boundingBox;return B.maximumWorld.subtractToRef(B.minimumWorld,R._TmpVector3[0]).length()}isCompletelyInFrustum(B){return this.boundingBox.isCompletelyInFrustum(B)}_checkCollision(B){return B._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(B){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(B)&&!!this.boundingBox.intersectsPoint(B))}intersects(B,I){if(!f.b.Intersects(this.boundingSphere,B.boundingSphere))return!1;if(!y.b.Intersects(this.boundingBox,B.boundingBox))return!1;if(!I)return!0;const C=this.boundingBox,M=B.boundingBox;return!!N(C.directions[0],C,M)&&(!!N(C.directions[1],C,M)&&(!!N(C.directions[2],C,M)&&(!!N(M.directions[0],C,M)&&(!!N(M.directions[1],C,M)&&(!!N(M.directions[2],C,M)&&(!!N(x.HI.Cross(C.directions[0],M.directions[0]),C,M)&&(!!N(x.HI.Cross(C.directions[0],M.directions[1]),C,M)&&(!!N(x.HI.Cross(C.directions[0],M.directions[2]),C,M)&&(!!N(x.HI.Cross(C.directions[1],M.directions[0]),C,M)&&(!!N(x.HI.Cross(C.directions[1],M.directions[1]),C,M)&&(!!N(x.HI.Cross(C.directions[1],M.directions[2]),C,M)&&(!!N(x.HI.Cross(C.directions[2],M.directions[0]),C,M)&&(!!N(x.HI.Cross(C.directions[2],M.directions[1]),C,M)&&!!N(x.HI.Cross(C.directions[2],M.directions[2]),C,M))))))))))))))}}R._TmpVector3=(0,M.b)(2,x.HI.Zero)},11545:(B,I,C)=>{C.d(I,{b:()=>y});var M=C(11204),x=C(11194);class y{constructor(B,I,C){this.center=x.HI.Zero(),this.centerWorld=x.HI.Zero(),this.minimum=x.HI.Zero(),this.maximum=x.HI.Zero(),this.reConstruct(B,I,C)}reConstruct(B,I,C){this.minimum.M(B),this.maximum.M(I);const M=x.HI.Distance(B,I);I.addToRef(B,this.center).scaleInPlace(.5),this.radius=.5*M,this._update(C||x.Matrix.IdentityReadOnly)}scale(B){const I=this.radius*B,C=y._TmpVector3,M=C[0].Tf(I),x=this.center.subtractToRef(M,C[1]),f=this.center.addToRef(M,C[2]);return this.reConstruct(x,f,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(B){if(B.isIdentity())this.centerWorld.M(this.center),this.radiusWorld=this.radius;else{x.HI.TransformCoordinatesToRef(this.center,B,this.centerWorld);const I=y._TmpVector3[0];x.HI.TransformNormalFromFloatsToRef(1,1,1,B,I),this.radiusWorld=Math.max(Math.abs(I.x),Math.abs(I.y),Math.abs(I.z))*this.radius}}isInFrustum(B){const I=this.centerWorld,C=this.radiusWorld;for(let M=0;M<6;M++)if(B[M].dotCoordinate(I)<=-C)return!1;return!0}isCenterInFrustum(B){const I=this.centerWorld;for(let C=0;C<6;C++)if(B[C].dotCoordinate(I)<0)return!1;return!0}intersectsPoint(B){const I=x.HI.DistanceSquared(this.centerWorld,B);return!(this.radiusWorld*this.radiusWorld<I)}static Intersects(B,I){const C=x.HI.DistanceSquared(B.centerWorld,I.centerWorld),M=B.radiusWorld+I.radiusWorld;return!(M*M<C)}static CreateFromCenterAndRadius(B,I,C){this._TmpVector3[0].M(B),this._TmpVector3[1].vf(0,0,I),this._TmpVector3[2].M(B),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].cR(this._TmpVector3[1]);const M=new y(this._TmpVector3[0],this._TmpVector3[2]);return M._worldMatrix=C||x.Matrix.Identity(),M}}y._TmpVector3=(0,M.b)(3,x.HI.Zero)},11565:(B,I,C)=>{function M(B){-1===B.indexOf("vClipPlane")&&B.push("vClipPlane"),-1===B.indexOf("vClipPlane2")&&B.push("vClipPlane2"),-1===B.indexOf("vClipPlane3")&&B.push("vClipPlane3"),-1===B.indexOf("vClipPlane4")&&B.push("vClipPlane4"),-1===B.indexOf("vClipPlane5")&&B.push("vClipPlane5"),-1===B.indexOf("vClipPlane6")&&B.push("vClipPlane6")}function x(B,I,C){const M=!!(B.clipPlane??I.clipPlane),x=!!(B.clipPlane2??I.clipPlane2),y=!!(B.clipPlane3??I.clipPlane3),f=!!(B.clipPlane4??I.clipPlane4),L=!!(B.clipPlane5??I.clipPlane5),e=!!(B.clipPlane6??I.clipPlane6);M&&C.push("#define CLIPPLANE"),x&&C.push("#define CLIPPLANE2"),y&&C.push("#define CLIPPLANE3"),f&&C.push("#define CLIPPLANE4"),L&&C.push("#define CLIPPLANE5"),e&&C.push("#define CLIPPLANE6")}function y(B,I,C){let M=!1;const x=!!(B.clipPlane??I.clipPlane),y=!!(B.clipPlane2??I.clipPlane2),f=!!(B.clipPlane3??I.clipPlane3),L=!!(B.clipPlane4??I.clipPlane4),e=!!(B.clipPlane5??I.clipPlane5),g=!!(B.clipPlane6??I.clipPlane6);return C.CLIPPLANE!==x&&(C.CLIPPLANE=x,M=!0),C.CLIPPLANE2!==y&&(C.CLIPPLANE2=y,M=!0),C.CLIPPLANE3!==f&&(C.CLIPPLANE3=f,M=!0),C.CLIPPLANE4!==L&&(C.CLIPPLANE4=L,M=!0),C.CLIPPLANE5!==e&&(C.CLIPPLANE5=e,M=!0),C.CLIPPLANE6!==g&&(C.CLIPPLANE6=g,M=!0),M}function f(B,I,C){let M=I.clipPlane??C.clipPlane;L(B,"vClipPlane",M),M=I.clipPlane2??C.clipPlane2,L(B,"vClipPlane2",M),M=I.clipPlane3??C.clipPlane3,L(B,"vClipPlane3",M),M=I.clipPlane4??C.clipPlane4,L(B,"vClipPlane4",M),M=I.clipPlane5??C.clipPlane5,L(B,"vClipPlane5",M),M=I.clipPlane6??C.clipPlane6,L(B,"vClipPlane6",M)}function L(B,I,C){C&&B.setFloat4(I,C.normal.x,C.normal.y,C.normal.z,C.d)}C.d(I,{e:()=>M,f:()=>f,h:()=>y,l:()=>x})},11509:(B,I,C)=>{C.d(I,{b:()=>M});class M{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(B,I){this._defines[B]||(B<this._currentRank&&(this._currentRank=B),B>this._maxRank&&(this._maxRank=B),this._defines[B]=new Array),this._defines[B].push(I)}addCPUSkinningFallback(B,I){this._mesh=I,B<this._currentRank&&(this._currentRank=B),B>this._maxRank&&(this._maxRank=B)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(B,I){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,B=B.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),I._bonesComputationForcedToCPU=!0;const C=this._mesh.rB();for(let B=0;B<C.meshes.length;B++){const M=C.meshes[B];if(M.material){if(M.computeBonesUsingShaders&&0!==M.numBoneInfluencers)if(M.material.getEffect()===I)M.computeBonesUsingShaders=!1;else if(M.cf)for(const B of M.cf){if(B.effect===I){M.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&M.computeBonesUsingShaders&&M.numBoneInfluencers>0&&(M.computeBonesUsingShaders=!1)}}else{const I=this._defines[this._currentRank];if(I)for(let C=0;C<I.length;C++)B=B.replace("#define "+I[C],"");this._currentRank++}return B}}},11516:(B,I,C)=>{C.d(I,{c:()=>S});var M=C(11180),x=C(11186),y=C(11018),f=C(11022),L=C(11056),e=C(11518),g=C(11463),N=C(11027),R=C(11242),H=C(11313),F=C(11226);class k{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(B){this._func=B}get funcRef(){return this._funcRef}set funcRef(B){this._funcRef=B}get funcMask(){return this._funcMask}set funcMask(B){this._funcMask=B}get opStencilFail(){return this._opStencilFail}set opStencilFail(B){this._opStencilFail=B}get opDepthFail(){return this._opDepthFail}set opDepthFail(B){this._opDepthFail=B}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(B){this._opStencilDepthPass=B}get mask(){return this._mask}set mask(B){this._mask=B}get enabled(){return this._enabled}set enabled(B){this._enabled=B}getClassName(){return"MaterialStencilState"}copyTo(B){F.d.Clone((()=>B),this)}serialize(){return F.d.Serialize(this)}parse(B,I,C){F.d.Parse((()=>this),B,I,C)}}(0,M.e)([(0,x.K)()],k.prototype,"func",null),(0,M.e)([(0,x.K)()],k.prototype,"funcRef",null),(0,M.e)([(0,x.K)()],k.prototype,"funcMask",null),(0,M.e)([(0,x.K)()],k.prototype,"opStencilFail",null),(0,M.e)([(0,x.K)()],k.prototype,"opDepthFail",null),(0,M.e)([(0,x.K)()],k.prototype,"opStencilDepthPass",null),(0,M.e)([(0,x.K)()],k.prototype,"mask",null),(0,M.e)([(0,x.K)()],k.prototype,"enabled",null);var q=C(11559);class S{get _supportGlowLayer(){return!1}set _glowModeEnabled(B){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(B){if(this._alpha===B)return;const I=this._alpha;this._alpha=B,1!==I&&1!==B||this.RN(S.MiscDirtyFlag+S.PrePassDirtyFlag)}get alpha(){return this._alpha}set Yf(B){this._backFaceCulling!==B&&(this._backFaceCulling=B,this.RN(S.TextureDirtyFlag))}get Yf(){return this._backFaceCulling}set cullBackFaces(B){this._cullBackFaces!==B&&(this._cullBackFaces=B,this.RN(S.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(B){this._blockDirtyMechanism!==B&&(this._blockDirtyMechanism=B,B||this.eH())}atomicMaterialsUpdate(B){this.blockDirtyMechanism=!0;try{B(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(B){this._onDisposeObserver&&this.If.remove(this._onDisposeObserver),this._onDisposeObserver=this.If.add(B)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new f.e),this._onBindObservable}set onBind(B){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(B)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new f.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new f.e),this._onEffectCreatedObservable}set alphaMode(B){this._alphaMode!==B&&(this._alphaMode=B,this.RN(S.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(B){this._needDepthPrePass!==B&&(this._needDepthPrePass=B,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(B){this._fogEnabled!==B&&(this._fogEnabled=B,this.RN(S.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case S.WireFrameFillMode:case S.LineListDrawMode:case S.LineLoopDrawMode:case S.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(B){this.fillMode=B?S.WireFrameFillMode:S.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case S.PointFillMode:case S.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(B){this.fillMode=B?S.PointFillMode:S.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(B){this._fillMode!==B&&(this._fillMode=B,this.RN(S.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(B){const I=this.rB().getEngine().getCaps().fragmentDepthSupported;B&&!I&&N.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=B&&I,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(B){this._drawWrapper=B}constructor(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.If=new f.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new k,this._useUBO=!1,this._fillMode=S.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=B;const x=I||L.c.LastCreatedScene;x&&(this._scene=x,this._dirtyCallbacks={},this._forceGLSL=M,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=B||y.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new H.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new g.c(this._scene.getEngine(),void 0,void 0,B),this._useUBO=this.rB().getEngine().supportsUniformBuffers,this._createUniformBuffer(),C||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),S.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var B;const I=this.rB().getEngine();null===(B=this._uniformBuffer)||void 0===B||B.dispose(),I.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new g.c(I,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new g.c(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(B){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.eH(),this.checkReadyOnlyOnce=!0}unfreeze(){this.eH(),this.checkReadyOnlyOnce=!1}isReady(B,I){return!0}isReadyForSubMesh(B,I,C){const M=I.materialDefines;return!!M&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=M,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}rB(){return this._scene}_getEffectiveOrientation(B){return null!==this.sideOrientation?this.sideOrientation:B.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(B){this._transparencyMode!==B&&(this._transparencyMode=B,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===S.MATERIAL_ALPHABLEND||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===S.MATERIAL_ALPHATEST||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===S.MATERIAL_OPAQUE||this._transparencyMode===S.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(B){return this._hasTransparencyMode?this._transparencyModeIsBlend:B.visibility<1||!this._disableAlphaBlending&&(B.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(B){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(B)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}eH(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const I=this.rB().meshes;for(const C of I)if(C.cf)for(const I of C.cf)if(I.lB()===this)for(const C of I._drawWrappers)C&&this._materialContext===C.materialContext&&(C._wasPreviouslyReady=!1,C._wasPreviouslyUsingInstances=null,C._forceRebindOnNextCall=B);B&&this.RN(S.AllDirtyFlag)}_preBind(B){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const C=this._scene.getEngine(),M=(null==I?this.sideOrientation:I)===S.ClockWiseSideOrientation;return C.enableEffect(B||this._getDrawWrapper()),C.setState(this.Yf,this.zOffset,!1,M,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),M}bind(B,I){}buildUniformLayout(){const B=this._uniformBuffer;this._eventInfo.ubo=B,this._callbackPluginEventGeneric(8,this._eventInfo),B.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(B,I,C){const M=C._drawWrapper;this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),M._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(B){}bindView(B){this._useUBO?this._needToBindSceneUbo=!0:B.setMatrix("view",this.rB().getViewMatrix())}bindViewProjection(B){this._useUBO?this._needToBindSceneUbo=!0:(B.setMatrix("viewProjection",this.rB().getTransformMatrix()),B.setMatrix("projection",this.rB().getProjectionMatrix()))}bindEyePosition(B,I){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(B,I)}_afterBind(B){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&I&&(this._needToBindSceneUbo=!1,(0,q.l)(I,this.rB().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=B?B.visibility:1,this._onBindObservable&&B&&this._onBindObservable.notifyObservers(B),this.disableDepthWrite){const B=this._scene.getEngine();this._cachedDepthWriteState=B.getDepthWrite(),B.setDepthWrite(!1)}if(this.disableColorWrite){const B=this._scene.getEngine();this._cachedColorWriteState=B.getColorWrite(),B.setColorWrite(!1)}if(0!==this.depthFunction){const B=this._scene.getEngine();this._cachedDepthFunctionState=B.getDepthFunction()||0,B.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(B){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=B,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(B){return null}_clonePlugins(B,I){const C={};if(this._serializePlugins(C),S._ParsePlugins(C,B,this._scene,I),this.pluginManager)for(const M of this.pluginManager._plugins){const I=B.pluginManager.getPlugin(M.name);I&&M.copyTo(I)}}getBindedMeshes(){if(this.meshMap){const B=[];for(const I in this.meshMap){const C=this.meshMap[I];C&&B.push(C)}return B}return this._scene.meshes.filter((B=>B.material===this))}forceCompilation(B,I,C,M){const x={clipPlane:!1,useInstances:!1,...C},y=this.rB(),f=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const L=()=>{if(!this._scene||!this._scene.getEngine())return;const C=y.clipPlane;if(x.clipPlane&&(y.clipPlane=new R.d(0,0,0,1)),this._storeEffectOnSubMeshes){let C=!0,y=null;if(B.cf){const I=new e.d(0,0,0,0,0,B,void 0,!1,!1);I.materialDefines&&(I.materialDefines._renderId=-1),this.isReadyForSubMesh(B,I,x.useInstances)||(I.effect&&I.effect.getCompilationError()&&I.effect.allFallbacksProcessed()?y=I.effect.getCompilationError():(C=!1,setTimeout(L,16)))}C&&(this.allowShaderHotSwapping=f,y&&M&&M(y),I&&I(this))}else this.isReady()?(this.allowShaderHotSwapping=f,I&&I(this)):setTimeout(L,16);x.clipPlane&&(y.clipPlane=C)};L()}async forceCompilationAsync(B,I){return await new Promise(((C,M)=>{this.forceCompilation(B,(()=>{C()}),I,(B=>{M(B)}))}))}RN(B){this.rB().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(S._DirtyCallbackArray.length=0,B&S.ImageProcessingDirtyFlag&&S._DirtyCallbackArray.push(S._ImageProcessingDirtyCallBack),B&S.TextureDirtyFlag&&S._DirtyCallbackArray.push(S._TextureDirtyCallBack),B&S.LightDirtyFlag&&S._DirtyCallbackArray.push(S._LightsDirtyCallBack),B&S.FresnelDirtyFlag&&S._DirtyCallbackArray.push(S._FresnelDirtyCallBack),B&S.AttributesDirtyFlag&&S._DirtyCallbackArray.push(S._AttributeDirtyCallBack),B&S.MiscDirtyFlag&&S._DirtyCallbackArray.push(S._MiscDirtyCallBack),B&S.PrePassDirtyFlag&&S._DirtyCallbackArray.push(S._PrePassDirtyCallBack),S._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(S._RunDirtyCallBacks),this.rB().resetCachedMaterial())}resetDrawCache(){const B=this.rB().meshes;for(const I of B)if(I.cf)for(const B of I.cf)B.lB()===this&&B.resetDrawCache()}_markAllSubMeshesAsDirty(B){const I=this.rB();if(I.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const C=I.meshes;for(const M of C)if(M.cf)for(const C of M.cf){if((C.lB()||(I._hasDefaultMaterial?I.defaultMaterial:null))===this)for(const I of C._drawWrappers)I&&I.defines&&I.defines.markAllAsDirty&&this._materialContext===I.materialContext&&B(I.defines)}}_markScenePrePassDirty(){if(this.rB().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const B=this.rB().enablePrePassRenderer();B&&B.RN()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(S._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(S._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(S._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(S._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(S._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(S._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(S._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(S._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(S._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(S._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const B=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.If.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(B)}))}}setPrePassRenderer(B){return!1}dispose(B,I,C){const M=this.rB();if(M.stopAnimation(this),M.freeProcessedMaterials(),M.removeMaterial(this),this._eventInfo.forceDisposeTextures=I,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const B=this._parentContainer.materials.indexOf(this);B>-1&&this._parentContainer.materials.splice(B,1),this._parentContainer=null}if(!0!==C)if(this.meshMap)for(const x in this.meshMap){const B=this.meshMap[x];this._disposeMeshResources(B)}else{const B=M.meshes;for(const I of B)this._disposeMeshResources(I)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.If.notifyObservers(this),this.If.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(B){if(!B)return;const I=B.zf,C=B._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(B.cf&&C)for(const x of B.cf){const B=x._drawWrappers;for(let y=0;y<B.length;y++){var M;const f=null===(M=B[y])||void 0===M?void 0:M.effect;if(!f)continue;C[y]===this&&(null===I||void 0===I||I._releaseVertexArrayObject(f),x._removeDrawWrapper(y,!0,!0))}}}else null===I||void 0===I||I._releaseVertexArrayObject(this._drawWrapper.effect);B.material!==this||B.sourceMesh||(B.material=null)}serialize(){const B=F.d.Serialize(this);return B.stencil=this.stencil.serialize(),B.uniqueId=this.uniqueId,this._serializePlugins(B),B}_serializePlugins(B){if(B.plugins={},this.pluginManager)for(const I of this.pluginManager._plugins)I.doNotSerialize||(B.plugins[I.getClassName()]=I.serialize())}static Parse(B,I,C){if(B.customType){if("BABYLON.PBRMaterial"===B.customType&&B.overloadedAlbedo&&(B.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return N.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else B.customType="BABYLON.StandardMaterial";const M=y.Tools.Instantiate(B.customType).Parse(B,I,C);return M._loadedUniqueId=B.uniqueId,M}static _ParsePlugins(B,I,C,M){if(B.plugins)for(const L in B.plugins){var x,f;const e=B.plugins[L];let g=null===(x=I.pluginManager)||void 0===x?void 0:x.getPlugin(e.name);if(!g){const B=y.Tools.Instantiate("BABYLON."+L);B&&(g=new B(I))}null===(f=g)||void 0===f||f.parse(e,C,M)}}}S.TriangleFillMode=0,S.WireFrameFillMode=1,S.PointFillMode=2,S.PointListDrawMode=3,S.LineListDrawMode=4,S.LineLoopDrawMode=5,S.LineStripDrawMode=6,S.TriangleStripDrawMode=7,S.TriangleFanDrawMode=8,S.ClockWiseSideOrientation=0,S.CounterClockWiseSideOrientation=1,S.ImageProcessingDirtyFlag=64,S.TextureDirtyFlag=1,S.LightDirtyFlag=2,S.FresnelDirtyFlag=4,S.AttributesDirtyFlag=8,S.MiscDirtyFlag=16,S.PrePassDirtyFlag=32,S.AllDirtyFlag=127,S.MATERIAL_OPAQUE=0,S.MATERIAL_ALPHATEST=1,S.MATERIAL_ALPHABLEND=2,S.MATERIAL_ALPHATESTANDBLEND=3,S.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,S.MATERIAL_NORMALBLENDMETHOD_RNM=1,S.OnEventObservable=new f.e,S._AllDirtyCallBack=B=>B.markAllAsDirty(),S._ImageProcessingDirtyCallBack=B=>B.markAsImageProcessingDirty(),S._TextureDirtyCallBack=B=>B.markAsTexturesDirty(),S._FresnelDirtyCallBack=B=>B.markAsFresnelDirty(),S._MiscDirtyCallBack=B=>B.markAsMiscDirty(),S._PrePassDirtyCallBack=B=>B.markAsPrePassDirty(),S._LightsDirtyCallBack=B=>B.markAsLightDirty(),S._AttributeDirtyCallBack=B=>B.markAsAttributesDirty(),S._FresnelAndMiscDirtyCallBack=B=>{S._FresnelDirtyCallBack(B),S._MiscDirtyCallBack(B)},S._TextureAndMiscDirtyCallBack=B=>{S._TextureDirtyCallBack(B),S._MiscDirtyCallBack(B)},S._DirtyCallbackArray=[],S._RunDirtyCallBacks=B=>{for(const I of S._DirtyCallbackArray)I(B)},(0,M.e)([(0,x.K)()],S.prototype,"id",void 0),(0,M.e)([(0,x.K)()],S.prototype,"uniqueId",void 0),(0,M.e)([(0,x.K)()],S.prototype,"name",void 0),(0,M.e)([(0,x.K)()],S.prototype,"metadata",void 0),(0,M.e)([(0,x.K)()],S.prototype,"checkReadyOnEveryCall",void 0),(0,M.e)([(0,x.K)()],S.prototype,"checkReadyOnlyOnce",void 0),(0,M.e)([(0,x.K)()],S.prototype,"state",void 0),(0,M.e)([(0,x.K)("alpha")],S.prototype,"_alpha",void 0),(0,M.e)([(0,x.K)("Yf")],S.prototype,"_backFaceCulling",void 0),(0,M.e)([(0,x.K)("cullBackFaces")],S.prototype,"_cullBackFaces",void 0),(0,M.e)([(0,x.K)()],S.prototype,"sideOrientation",void 0),(0,M.e)([(0,x.K)("alphaMode")],S.prototype,"_alphaMode",void 0),(0,M.e)([(0,x.K)()],S.prototype,"_needDepthPrePass",void 0),(0,M.e)([(0,x.K)()],S.prototype,"disableDepthWrite",void 0),(0,M.e)([(0,x.K)()],S.prototype,"disableColorWrite",void 0),(0,M.e)([(0,x.K)()],S.prototype,"forceDepthWrite",void 0),(0,M.e)([(0,x.K)()],S.prototype,"depthFunction",void 0),(0,M.e)([(0,x.K)()],S.prototype,"separateCullingPass",void 0),(0,M.e)([(0,x.K)("fogEnabled")],S.prototype,"_fogEnabled",void 0),(0,M.e)([(0,x.K)()],S.prototype,"pointSize",void 0),(0,M.e)([(0,x.K)()],S.prototype,"zOffset",void 0),(0,M.e)([(0,x.K)()],S.prototype,"zOffsetUnits",void 0),(0,M.e)([(0,x.K)()],S.prototype,"pointsCloud",null),(0,M.e)([(0,x.K)()],S.prototype,"fillMode",null),(0,M.e)([(0,x.K)()],S.prototype,"useLogarithmicDepth",null),(0,M.e)([(0,x.K)()],S.prototype,"transparencyMode",null)},11559:(B,I,C)=>{C.d(I,{C:()=>H,F:()=>n,J:()=>p,L:()=>i,N:()=>o,P:()=>J,T:()=>O,W:()=>a,X:()=>W,_:()=>l,ab:()=>k,d:()=>V,e:()=>R,g:()=>t,h:()=>N,i:()=>q,l:()=>S,o:()=>U,p:()=>D,r:()=>G,v:()=>r,x:()=>A,y:()=>F});var M=C(11027),x=C(11239),y=C(11056),f=C(11505),L=C(11565);const e=x.SI.Black(),g={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function N(B,I,C){if(!B||B.LOGARITHMICDEPTH||B.indexOf&&B.indexOf("LOGARITHMICDEPTH")>=0){const B=C.activeCamera;1===B.mode&&M.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),I.setFloat("logarithmicDepthConstant",2/(Math.log(B.maxZ+1)/Math.LN2))}}function R(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]&&arguments[3];C&&B.fogEnabled&&(!I||I.applyFog)&&0!==B.fogMode&&(C.setFloat4("vFogInfos",B.fogMode,B.fogStart,B.fogEnd,B.fogDensity),M?(B.fogColor.toLinearSpaceToRef(e,B.getEngine().useExactSrgbConversions),C.setColor3("vFogColor",e)):C.setColor3("vFogColor",B.fogColor))}function H(B,I,C,M,x,y,f,L,e,N){const R=B.numMaxInfluencers||B.numInfluencers;return R<=0?0:(I.push("#define MORPHTARGETS"),B.hasPositions&&I.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),B.hasNormals&&I.push("#define MORPHTARGETTEXTURE_HASNORMALS"),B.hasTangents&&I.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),B.hasUVs&&I.push("#define MORPHTARGETTEXTURE_HASUVS"),B.hasUV2s&&I.push("#define MORPHTARGETTEXTURE_HASUV2S"),B.hasColors&&I.push("#define MORPHTARGETTEXTURE_HASCOLORS"),B.supportsPositions&&x&&I.push("#define MORPHTARGETS_POSITION"),B.supportsNormals&&y&&I.push("#define MORPHTARGETS_NORMAL"),B.supportsTangents&&f&&I.push("#define MORPHTARGETS_TANGENT"),B.supportsUVs&&L&&I.push("#define MORPHTARGETS_UV"),B.supportsUV2s&&e&&I.push("#define MORPHTARGETS_UV2"),B.supportsColors&&N&&I.push("#define MORPHTARGETS_COLOR"),I.push("#define NUM_MORPH_INFLUENCERS "+R),B.isUsingTextureForTargets&&I.push("#define MORPHTARGETS_TEXTURE"),g.NUM_MORPH_INFLUENCERS=R,g.NORMAL=y,g.TANGENT=f,g.UV=L,g.UV2=e,g.COLOR=N,F(C,M,g,x),R)}function F(B,I,C){let x=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const f=C.NUM_MORPH_INFLUENCERS;if(f>0&&y.c.LastCreatedEngine){const L=y.c.LastCreatedEngine.getCaps().maxVertexAttribs,e=I.morphTargetManager;if(null!==e&&void 0!==e&&e.isUsingTextureForTargets)return;const g=e&&e.supportsPositions&&x,N=e&&e.supportsNormals&&C.NORMAL,R=e&&e.supportsTangents&&C.TANGENT,H=e&&e.supportsUVs&&C.UV1,F=e&&e.supportsUV2s&&C.UV2,k=e&&e.supportsColors&&C.VERTEXCOLOR;for(let C=0;C<f;C++)g&&B.push("position"+C),N&&B.push("normal"+C),R&&B.push("tangent"+C),H&&B.push("uv_"+C),F&&B.push("uv2_"+C),k&&B.push("color"+C),B.length>L&&M.b.Error("Cannot add more vertex attributes for mesh "+I.name)}}function k(B){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];B.push("world0"),B.push("world1"),B.push("world2"),B.push("world3"),I&&(B.push("previousWorld0"),B.push("previousWorld1"),B.push("previousWorld2"),B.push("previousWorld3"))}function q(B,I){const C=B.morphTargetManager;B&&C&&I.setFloatArray("morphTargetInfluences",C.influences)}function S(B,I){I.bindToEffect(B,"Scene")}function o(B,I,C){I._needUVs=!0,I[C]=!0,B.optimizeUVAllocation&&B.getTextureMatrix().isIdentityAs3x2()?(I[C+"DIRECTUV"]=B.coordinatesIndex+1,I["MAINUV"+(B.coordinatesIndex+1)]=!0):I[C+"DIRECTUV"]=0}function U(B,I,C){const M=B.getTextureMatrix();I.pf(C+"Matrix",M)}function G(B,I,C){C.BAKED_VERTEX_ANIMATION_TEXTURE&&C.INSTANCES&&B.push("bakedVertexAnimationSettingsInstanced")}function V(B,I,C){var M;if(I&&B&&(B.computeBonesUsingShaders&&I._bonesComputationForcedToCPU&&(B.computeBonesUsingShaders=!1),B.useBones&&B.computeBonesUsingShaders&&B.skeleton)){const x=B.skeleton;if(x.isUsingTextureForMatrices&&I.getUniformIndex("boneTextureWidth")>-1){const C=x.getTransformMatrixTexture(B);I.setTexture("boneSampler",C),I.setFloat("boneTextureWidth",4*(x.bones.length+1))}else{const y=x.getTransformMatrices(B);y&&(I.setMatrices("mBones",y),C&&B.rB().prePassRenderer&&B.rB().prePassRenderer.getIndex(2)&&(C.previousBones[B.uniqueId]||(C.previousBones[B.uniqueId]=y.slice()),I.setMatrices("mPreviousBones",C.previousBones[B.uniqueId]),M=y,C.previousBones[B.uniqueId].set(M)))}}}function c(B,I,C,M,x){let y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];B._bindLight(I,C,M,x,y)}function t(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const y=Math.min(I.lightSources.length,x);for(let f=0;f<y;f++){c(I.lightSources[f],f,B,C,"boolean"===typeof M?M:M.SPECULARTERM,I.receiveShadows)}}function r(B,I,C,M){C.NUM_BONE_INFLUENCERS>0&&(M.addCPUSkinningFallback(0,I),B.push("matricesIndices"),B.push("matricesWeights"),C.NUM_BONE_INFLUENCERS>4&&(B.push("matricesIndicesExtra"),B.push("matricesWeightsExtra")))}function A(B,I){(I.INSTANCES||I.THIN_INSTANCES)&&k(B,!!I.PREPASS_VELOCITY),I.INSTANCESCOLOR&&B.push("instanceColor")}function D(B,I){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,x=0;for(let y=0;y<C&&B["LIGHT"+y];y++)y>0&&(x=M+y,I.addFallback(x,"LIGHT"+y)),B.SHADOWS||(B["SHADOW"+y]&&I.addFallback(M,"SHADOW"+y),B["SHADOWPCF"+y]&&I.addFallback(M,"SHADOWPCF"+y),B["SHADOWPCSS"+y]&&I.addFallback(M,"SHADOWPCSS"+y),B["SHADOWPOISSON"+y]&&I.addFallback(M,"SHADOWPOISSON"+y),B["SHADOWESM"+y]&&I.addFallback(M,"SHADOWESM"+y),B["SHADOWCLOSEESM"+y]&&I.addFallback(M,"SHADOWCLOSEESM"+y));return x++}function J(B,I,C,M,x,y,f){let L=arguments.length>7&&void 0!==arguments[7]&&arguments[7];f._areMiscDirty&&(f.LOGARITHMICDEPTH=C,f.POINTSIZE=M,f.FOG=x&&function(B,I){return I.fogEnabled&&B.applyFog&&0!==I.fogMode}(B,I),f.NONUNIFORMSCALING=B.nonUniformScaling,f.ALPHATEST=y,f.DECAL_AFTER_DETAIL=L)}function i(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!C._areLightsDirty)return C._needNormals;let f=0;const L={needNormals:C._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(B.lightsEnabled&&!y)for(const g of I.lightSources)if(u(B,I,g,f,C,M,L),f++,f===x)break;C.SPECULARTERM=L.specularEnabled,C.SHADOWS=L.shadowEnabled;for(let g=f;g<x;g++)void 0!==C["LIGHT"+g]&&(C["LIGHT"+g]=!1,C["HEMILIGHT"+g]=!1,C["POINTLIGHT"+g]=!1,C["DIRLIGHT"+g]=!1,C["SPOTLIGHT"+g]=!1,C["AREALIGHT"+g]=!1,C["SHADOW"+g]=!1,C["SHADOWCSM"+g]=!1,C["SHADOWCSMDEBUG"+g]=!1,C["SHADOWCSMNUM_CASCADES"+g]=!1,C["SHADOWCSMUSESHADOWMAXZ"+g]=!1,C["SHADOWCSMNOBLEND"+g]=!1,C["SHADOWCSM_RIGHTHANDED"+g]=!1,C["SHADOWPCF"+g]=!1,C["SHADOWPCSS"+g]=!1,C["SHADOWPOISSON"+g]=!1,C["SHADOWESM"+g]=!1,C["SHADOWCLOSEESM"+g]=!1,C["SHADOWCUBE"+g]=!1,C["SHADOWLOWQUALITY"+g]=!1,C["SHADOWMEDIUMQUALITY"+g]=!1);const e=B.getEngine().getCaps();return void 0===C.SHADOWFLOAT&&(L.needRebuild=!0),C.SHADOWFLOAT=L.shadowEnabled&&(e.textureFloatRender&&e.textureFloatLinearFiltering||e.textureHalfFloatRender&&e.textureHalfFloatLinearFiltering),C.LIGHTMAPEXCLUDED=L.lightmapMode,L.needRebuild&&C.rebuild(),L.needNormals}function u(B,I,C,M,x,y,L){switch(L.needNormals=!0,void 0===x["LIGHT"+M]&&(L.needRebuild=!0),x["LIGHT"+M]=!0,x["SPOTLIGHT"+M]=!1,x["HEMILIGHT"+M]=!1,x["POINTLIGHT"+M]=!1,x["DIRLIGHT"+M]=!1,x["AREALIGHT"+M]=!1,C.prepareLightSpecificDefines(x,M),x["LIGHT_FALLOFF_PHYSICAL"+M]=!1,x["LIGHT_FALLOFF_GLTF"+M]=!1,x["LIGHT_FALLOFF_STANDARD"+M]=!1,C.falloffType){case f.c.FALLOFF_GLTF:x["LIGHT_FALLOFF_GLTF"+M]=!0;break;case f.c.FALLOFF_PHYSICAL:x["LIGHT_FALLOFF_PHYSICAL"+M]=!0;break;case f.c.FALLOFF_STANDARD:x["LIGHT_FALLOFF_STANDARD"+M]=!0}if(y&&!C.WN.equalsFloats(0,0,0)&&(L.specularEnabled=!0),x["SHADOW"+M]=!1,x["SHADOWCSM"+M]=!1,x["SHADOWCSMDEBUG"+M]=!1,x["SHADOWCSMNUM_CASCADES"+M]=!1,x["SHADOWCSMUSESHADOWMAXZ"+M]=!1,x["SHADOWCSMNOBLEND"+M]=!1,x["SHADOWCSM_RIGHTHANDED"+M]=!1,x["SHADOWPCF"+M]=!1,x["SHADOWPCSS"+M]=!1,x["SHADOWPOISSON"+M]=!1,x["SHADOWESM"+M]=!1,x["SHADOWCLOSEESM"+M]=!1,x["SHADOWCUBE"+M]=!1,x["SHADOWLOWQUALITY"+M]=!1,x["SHADOWMEDIUMQUALITY"+M]=!1,I&&I.receiveShadows&&B.shadowsEnabled&&C.shadowEnabled){const I=C.getShadowGenerator(B.activeCamera)??C.getShadowGenerator();if(I){const B=I.getShadowMap();B&&B.renderList&&B.renderList.length>0&&(L.shadowEnabled=!0,I.prepareDefines(x,M))}}C.lightmapMode!=f.c.LIGHTMAP_DEFAULT?(L.lightmapMode=!0,x["LIGHTMAPEXCLUDED"+M]=!0,x["LIGHTMAPNOSPECULAR"+M]=C.lightmapMode==f.c.LIGHTMAP_SHADOWSONLY):(x["LIGHTMAPEXCLUDED"+M]=!1,x["LIGHTMAPNOSPECULAR"+M]=!1)}function p(B,I,C,M,x){let y=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],e=function(B,I){let C=!1;if(B.activeCamera){const M=I.CAMERA_ORTHOGRAPHIC?1:0,x=I.CAMERA_PERSPECTIVE?1:0,y=1===B.activeCamera.mode?1:0,f=0===B.activeCamera.mode?1:0;(M^y||x^f)&&(I.CAMERA_ORTHOGRAPHIC=1===y,I.CAMERA_PERSPECTIVE=1===f,C=!0)}return C}(B,M);!1!==y&&(e=(0,L.h)(C,B,M)),M.DEPTHPREPASS!==!I.getColorWrite()&&(M.DEPTHPREPASS=!M.DEPTHPREPASS,e=!0),M.INSTANCES!==x&&(M.INSTANCES=x,e=!0),M.THIN_INSTANCES!==f&&(M.THIN_INSTANCES=f,e=!0),e&&M.markAsUnprocessed()}function n(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]&&arguments[4],y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],f=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!I._areAttributesDirty&&I._needNormals===I._normals&&I._needUVs===I._uvs)return!1;I._normals=I._needNormals,I._uvs=I._needUVs,I.NORMAL=I._needNormals&&B.isVerticesDataPresent("normal"),I._needNormals&&B.isVerticesDataPresent("tangent")&&(I.TANGENT=!0);for(let L=1;L<=6;++L)I["UV"+L]=!!I._needUVs&&B.isVerticesDataPresent(`uv${1===L?"":L}`);if(C){const C=B.useVertexColors&&B.isVerticesDataPresent("color");I.VERTEXCOLOR=C,I.VERTEXALPHA=B.hasVertexAlpha&&C&&y}return B.isVerticesDataPresent("instanceColor")&&(B.hasInstances||B.hasThinInstances)&&(I.INSTANCESCOLOR=!0),M&&function(B,I){if(B.useBones&&B.computeBonesUsingShaders&&B.skeleton){I.NUM_BONE_INFLUENCERS=B.numBoneInfluencers;const C=void 0!==I.BONETEXTURE;if(B.skeleton.isUsingTextureForMatrices&&C)I.BONETEXTURE=!0;else{I.BonesPerMesh=B.skeleton.bones.length+1,I.BONETEXTURE=!C&&void 0;const M=B.rB().prePassRenderer;if(M&&M.enabled){const C=-1===M.excludedSkinnedMesh.indexOf(B);I.BONES_VELOCITY_ENABLED=C}}}else I.NUM_BONE_INFLUENCERS=0,I.BonesPerMesh=0,void 0!==I.BONETEXTURE&&(I.BONETEXTURE=!1)}(B,I),x&&function(B,I){const C=B.morphTargetManager;C?(I.MORPHTARGETS_UV=C.supportsUVs&&I.UV1,I.MORPHTARGETS_UV2=C.supportsUV2s&&I.UV2,I.MORPHTARGETS_TANGENT=C.supportsTangents&&I.TANGENT,I.MORPHTARGETS_NORMAL=C.supportsNormals&&I.NORMAL,I.MORPHTARGETS_POSITION=C.supportsPositions,I.MORPHTARGETS_COLOR=C.supportsColors,I.MORPHTARGETTEXTURE_HASUVS=C.hasUVs,I.MORPHTARGETTEXTURE_HASUV2S=C.hasUV2s,I.MORPHTARGETTEXTURE_HASTANGENTS=C.hasTangents,I.MORPHTARGETTEXTURE_HASNORMALS=C.hasNormals,I.MORPHTARGETTEXTURE_HASPOSITIONS=C.hasPositions,I.MORPHTARGETTEXTURE_HASCOLORS=C.hasColors,I.NUM_MORPH_INFLUENCERS=C.numMaxInfluencers||C.numInfluencers,I.MORPHTARGETS=I.NUM_MORPH_INFLUENCERS>0,I.MORPHTARGETS_TEXTURE=C.isUsingTextureForTargets):(I.MORPHTARGETS_UV=!1,I.MORPHTARGETS_UV2=!1,I.MORPHTARGETS_TANGENT=!1,I.MORPHTARGETS_NORMAL=!1,I.MORPHTARGETS_POSITION=!1,I.MORPHTARGETS_COLOR=!1,I.MORPHTARGETTEXTURE_HASUVS=!1,I.MORPHTARGETTEXTURE_HASUV2S=!1,I.MORPHTARGETTEXTURE_HASTANGENTS=!1,I.MORPHTARGETTEXTURE_HASNORMALS=!1,I.MORPHTARGETTEXTURE_HASPOSITIONS=!1,I.MORPHTARGETTEXTURE_HAS_COLORS=!1,I.MORPHTARGETS=!1,I.NUM_MORPH_INFLUENCERS=0)}(B,I),f&&function(B,I){const C=B.bakedVertexAnimationManager;I.BAKED_VERTEX_ANIMATION_TEXTURE=!(!C||!C.isEnabled)}(B,I),!0}function O(B,I){if(B.activeCamera){const C=I.MULTIVIEW;I.MULTIVIEW=null!==B.activeCamera.outputRenderTarget&&B.activeCamera.outputRenderTarget.getViewCount()>1,I.MULTIVIEW!=C&&I.markAsUnprocessed()}}function a(B,I,C){const M=I.ORDER_INDEPENDENT_TRANSPARENCY,x=I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;I.ORDER_INDEPENDENT_TRANSPARENCY=B.useOrderIndependentTransparency&&C,I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!B.getEngine().getCaps().textureFloatLinearFiltering,M===I.ORDER_INDEPENDENT_TRANSPARENCY&&x===I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||I.markAsUnprocessed()}function W(B,I,C){const M=I.PREPASS;if(!I._arePrePassDirty)return;const x=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(B.prePassRenderer&&B.prePassRenderer.enabled&&C){I.PREPASS=!0,I.SCENE_MRT_COUNT=B.prePassRenderer.mrtCount,I.PREPASS_NORMAL_WORLDSPACE=B.prePassRenderer.generateNormalsInWorldSpace,I.PREPASS_COLOR=!0,I.PREPASS_COLOR_INDEX=0;for(let C=0;C<x.length;C++){const M=B.prePassRenderer.getIndex(x[C].type);-1!==M?(I[x[C].define]=!0,I[x[C].index]=M):I[x[C].define]=!1}}else{I.PREPASS=!1;for(let B=0;B<x.length;B++)I[x[B].define]=!1}I.PREPASS!=M&&(I.markAsUnprocessed(),I.markAsImageProcessingDirty())}function d(B,I,C,M){let x=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6];x&&x.push("Light"+B),y||(I.push("vLightData"+B,"vLightDiffuse"+B,"vLightSpecular"+B,"vLightDirection"+B,"vLightWidth"+B,"vLightHeight"+B,"vLightFalloff"+B,"vLightGround"+B,"lightMatrix"+B,"shadowsInfo"+B,"depthValues"+B),C.push("shadowTexture"+B),C.push("depthTexture"+B),I.push("viewFrustumZ"+B,"cascadeBlendFactor"+B,"lightSizeUVCorrection"+B,"depthCorrection"+B,"penumbraDarkness"+B,"frustumLengths"+B),M&&(C.push("projectionLightTexture"+B),I.push("textureProjectionMatrix"+B)),f&&C.push("iesLightTexture"+B))}function l(B,I,C){let M,x,y=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(B.uniformsNames){const f=B;M=f.uniformsNames,x=f.uniformBuffersNames,I=f.samplers,C=f.defines,y=f.maxSimultaneousLights||0}else M=B,I||(I=[]);for(let f=0;f<y&&C["LIGHT"+f];f++)d(f,M,I,C["PROJECTEDLIGHTTEXTURE"+f],x,!1,C["IESLIGHTTEXTURE"+f]);C.NUM_MORPH_INFLUENCERS&&(M.push("morphTargetInfluences"),M.push("morphTargetCount")),C.BAKED_VERTEX_ANIMATION_TEXTURE&&(M.push("bakedVertexAnimationSettings"),M.push("bakedVertexAnimationTextureSizeInverted"),M.push("bakedVertexAnimationTime"),I.push("bakedVertexAnimationTexture"))}},11513:(B,I,C)=>{C.d(I,{c:()=>y});var M=C(11194),x=C(11516);class y extends x.c{constructor(B,I){let C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(B,I,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new M.Matrix,this._storeEffectOnSubMeshes=C}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(B,I){return!!B&&(!this._storeEffectOnSubMeshes||(!B.cf||0===B.cf.length||this.isReadyForSubMesh(B,B.cf[0],I)))}_isReadyForSubMesh(B){const I=B.materialDefines;return!(this.checkReadyOnEveryCall||!B.effect||!I||I._renderId!==this.rB().getRenderId())}bindOnlyWorldMatrix(B){this._activeEffect.setMatrix("world",B)}bindOnlyNormalMatrix(B){this._activeEffect.setMatrix("normalMatrix",B)}bind(B,I){I&&this.bindForSubMesh(B,I,I.cf[0])}_afterBind(B){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2?arguments[2]:void 0;super._afterBind(B,I,C),this.rB()._cachedEffect=I,C?C._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return C._drawWrapper._forceRebindOnNextCall||B.isCachedMaterialInvalid(this,I,M)}dispose(B,I,C){this._activeEffect=void 0,super.dispose(B,I,C)}}},11550:(B,I,C)=>{C.d(I,{b:()=>L,d:()=>e});var M=C(11180),x=C(11194),y=C(11186);class f{static extractMinAndMaxIndexed(B,I,C,M,x,y){for(let f=C;f<C+M;f++){const C=3*I[f],M=B[C],L=B[C+1],e=B[C+2];x.minimizeInPlaceFromFloats(M,L,e),y.maximizeInPlaceFromFloats(M,L,e)}}static extractMinAndMax(B,I,C,M,x,y){for(let f=I,L=I*M;f<I+C;f++,L+=M){const I=B[L],C=B[L+1],M=B[L+2];x.minimizeInPlaceFromFloats(I,C,M),y.maximizeInPlaceFromFloats(I,C,M)}}}function L(B,I,C,M){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const L=new x.HI(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e=new x.HI(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return f.extractMinAndMaxIndexed(B,I,C,M,L,e),y&&(L.x-=L.x*y.x+y.y,L.y-=L.y*y.x+y.y,L.z-=L.z*y.x+y.y,e.x+=e.x*y.x+y.y,e.y+=e.y*y.x+y.y,e.z+=e.z*y.x+y.y),{minimum:L,maximum:e}}function e(B,I,C){let M=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,y=arguments.length>4?arguments[4]:void 0;const L=new x.HI(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e=new x.HI(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return y||(y=3),f.extractMinAndMax(B,I,C,y,L,e),M&&(L.x-=L.x*M.x+M.y,L.y-=L.y*M.x+M.y,L.z-=L.z*M.x+M.y,e.x+=e.x*M.x+M.y,e.y+=e.y*M.x+M.y,e.z+=e.z*M.x+M.y),{minimum:L,maximum:e}}(0,M.e)([y.f.filter((function(){for(var B=arguments.length,I=new Array(B),C=0;C<B;C++)I[C]=arguments[C];let[M,x]=I;return!Array.isArray(M)&&!Array.isArray(x)}))],f,"extractMinAndMaxIndexed",null),(0,M.e)([y.f.filter((function(){for(var B=arguments.length,I=new Array(B),C=0;C<B;C++)I[C]=arguments[C];let[M]=I;return!Array.isArray(M)}))],f,"extractMinAndMax",null)},11518:(B,I,C)=>{C.d(I,{d:()=>e});var M=C(11270),x=C(11522),y=C(11527),f=C(11550),L=C(11313);class e{get materialDefines(){var B;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(B=this._getDrawWrapper())||void 0===B?void 0:B.defines}set materialDefines(B){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=B}_getDrawWrapper(B){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];B=B??this._engine.currentRenderPassId;let C=this._drawWrappers[B];return!C&&I&&(this._drawWrappers[B]=C=new L.b(this._mesh.rB().getEngine())),C}_removeDrawWrapper(B){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var C;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(C=this._drawWrappers[B])||void 0===C||C.dispose(I));this._drawWrappers[B]=void 0}get effect(){var B;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(B=this._getDrawWrapper())||void 0===B?void 0:B.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(B){this._mainDrawWrapperOverride=B}setEffect(B){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2?arguments[2]:void 0,M=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const x=this._drawWrapper;x.setEffect(B,I,M),void 0!==C&&(x.materialContext=C),B||(x.defines=null,x.materialContext=void 0)}resetDrawCache(B){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==B)return void this._removeDrawWrapper(B,!0,I);for(const B of this._drawWrappers)null===B||void 0===B||B.dispose(I)}this._drawWrappers=[]}static AddToMesh(B,I,C,M,x,y,f){return new e(B,I,C,M,x,y,f,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(B,I,C,M,x,y,f){let L=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],e=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=B,this.verticesStart=I,this.verticesCount=C,this.indexStart=M,this.indexCount=x,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=y,this._renderingMesh=f||y,e&&y.cf.push(this),this._engine=this._mesh.rB().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=y.cf.length-1,L&&(this.refreshBoundingInfo(),y.nf(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(B){return this._boundingInfo=B,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const B=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return B||this._renderingMesh}lB(){let B=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const I=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!I)return B&&this._mesh.rB()._hasDefaultMaterial?this._mesh.rB().defaultMaterial:null;if(this._isMultiMaterial(I)){const B=I.getSubMaterial(this.materialIndex);return this._currentMaterial!==B&&(this._currentMaterial=B,this.resetDrawCache()),B}return I}_isMultiMaterial(B){return void 0!==B.getSubMaterial}refreshBoundingInfo(){let B=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.zf)return this;if(B||(B=this._renderingMesh.getVerticesData(M.g.PositionKind)),!B)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const I=this._renderingMesh.bf();let C;if(0===this.indexStart&&this.indexCount===I.length){const B=this._renderingMesh.getBoundingInfo();C={minimum:B.minimum.clone(),maximum:B.maximum.clone()}}else C=(0,f.b)(B,I,this.indexStart,this.indexCount,this._renderingMesh.zf.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(C.minimum,C.maximum):this._boundingInfo=new y.b(C.minimum,C.maximum),this}_checkCollision(B){return this.getBoundingInfo()._checkCollision(B)}updateBoundingInfo(B){let I=this.getBoundingInfo();return I||(this.refreshBoundingInfo(),I=this.getBoundingInfo()),I&&I.update(B),this}isInFrustum(B){const I=this.getBoundingInfo();return!!I&&I.isInFrustum(B,this._mesh.dR)}isCompletelyInFrustum(B){const I=this.getBoundingInfo();return!!I&&I.isCompletelyInFrustum(B)}render(B){return this._renderingMesh.render(this,B,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(B,I){if(!this._linesIndexBuffer){const C=6*Math.floor(this.indexCount/3),M=this.verticesStart+this.verticesCount>65535?new Uint32Array(C):new Uint16Array(C);let x=0;if(0===B.length)for(let B=this.indexStart;B<this.indexStart+this.indexCount;B+=3)M[x++]=B,M[x++]=B+1,M[x++]=B+1,M[x++]=B+2,M[x++]=B+2,M[x++]=B;else for(let I=this.indexStart;I<this.indexStart+this.indexCount;I+=3)M[x++]=B[I],M[x++]=B[I+1],M[x++]=B[I+1],M[x++]=B[I+2],M[x++]=B[I+2],M[x++]=B[I];this._linesIndexBuffer=I.createIndexBuffer(M),this._linesIndexCount=M.length}return this._linesIndexBuffer}canIntersects(B){const I=this.getBoundingInfo();return!!I&&B.intersectsBox(I.boundingBox)}intersects(B,I,C,M,x){const y=this.lB();if(!y)return null;let f=3,L=!1;switch(y.fillMode){case 3:case 5:case 6:case 8:return null;case 7:f=1,L=!0}return 4===y.fillMode?C.length?this._intersectLines(B,I,C,this._mesh.intersectionThreshold,M):this._intersectUnIndexedLines(B,I,C,this._mesh.intersectionThreshold,M):!C.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(B,I,C,M,x):this._intersectTriangles(B,I,C,f,L,M,x)}_intersectLines(B,I,C,M,y){let f=null;for(let L=this.indexStart;L<this.indexStart+this.indexCount;L+=2){const e=I[C[L]],g=I[C[L+1]],N=B.intersectionSegment(e,g,M);if(!(N<0)&&((y||!f||N<f.distance)&&(f=new x.c(null,null,N),f.faceId=L/2,y)))break}return f}_intersectUnIndexedLines(B,I,C,M,y){let f=null;for(let L=this.verticesStart;L<this.verticesStart+this.verticesCount;L+=2){const C=I[L],e=I[L+1],g=B.intersectionSegment(C,e,M);if(!(g<0)&&((y||!f||g<f.distance)&&(f=new x.c(null,null,g),f.faceId=L/2,y)))break}return f}_intersectTriangles(B,I,C,M,x,y,f){let L=null,e=-1;for(let g=this.indexStart;g<this.indexStart+this.indexCount-(3-M);g+=M){e++;const M=C[g],N=C[g+1],R=C[g+2];if(x&&4294967295===R){g+=2;continue}const H=I[M],F=I[N],k=I[R];if(!H||!F||!k)continue;if(f&&!f(H,F,k,B,M,N,R))continue;const q=B.intersectsTriangle(H,F,k);if(q){if(q.distance<0)continue;if((y||!L||q.distance<L.distance)&&(L=q,L.faceId=e,y))break}}return L}_intersectUnIndexedTriangles(B,I,C,M,x){let y=null;for(let f=this.verticesStart;f<this.verticesStart+this.verticesCount;f+=3){const C=I[f],L=I[f+1],e=I[f+2];if(x&&!x(C,L,e,B,-1,-1,-1))continue;const g=B.intersectsTriangle(C,L,e);if(g){if(g.distance<0)continue;if((M||!y||g.distance<y.distance)&&(y=g,y.faceId=f/3,M))break}}return y}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(B,I){const C=new e(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,B,I,!1);if(!this.IsGlobal){const B=this.getBoundingInfo();if(!B)return C;C._boundingInfo=new y.b(B.minimum,B.maximum)}return C}dispose(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.rB().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const I=this._mesh.cf.indexOf(this);this._mesh.cf.splice(I,1),this.resetDrawCache(void 0,B)}getClassName(){return"SubMesh"}static CreateFromIndices(B,I,C,M,x){let y=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],f=Number.MAX_VALUE,L=-Number.MAX_VALUE;const g=(x||M).bf();for(let e=I;e<I+C;e++){const B=g[e];B<f&&(f=B),B>L&&(L=B)}return new e(B,f,L-f+1,I,C,M,x,y)}}}}]);