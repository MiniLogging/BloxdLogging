"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[24],{12724:(C,c,d)=>{d.d(c,{d:()=>b});class b{constructor(C,c,d){this.bu=C,this.bv=c,this.distance=d,this.faceId=0,this.subMeshId=0}}},12734:(C,c,d)=>{d.d(c,{e:()=>V});var b=d(12416),X=d(12403),P=d(12412);class V{constructor(C,c,d){this.vectors=(0,b.c)(8,X.dd.Zero),this.center=X.dd.Zero(),this.centerWorld=X.dd.Zero(),this.extendSize=X.dd.Zero(),this.extendSizeWorld=X.dd.Zero(),this.directions=(0,b.c)(3,X.dd.Zero),this.vectorsWorld=(0,b.c)(8,X.dd.Zero),this.minimumWorld=X.dd.Zero(),this.maximumWorld=X.dd.Zero(),this.minimum=X.dd.Zero(),this.maximum=X.dd.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(C,c,d)}reConstruct(C,c,d){const b=C.x,P=C.y,V=C.z,R=c.x,p=c.y,j=c.z,g=this.vectors;this.minimum.yc(b,P,V),this.maximum.yc(R,p,j),g[0].yc(b,P,V),g[1].yc(R,p,j),g[2].yc(R,P,V),g[3].yc(b,p,V),g[4].yc(b,P,j),g[5].yc(R,p,V),g[6].yc(b,p,j),g[7].yc(R,P,j),c.addToRef(C,this.center).scaleInPlace(.5),c.subtractToRef(C,this.extendSize).scaleInPlace(.5),this._worldMatrix=d||X.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(C){const c=V._TmpVector3,d=this.maximum.subtractToRef(this.minimum,c[0]),b=d.length();d.normalizeFromLength(b);const X=b*C,P=d.scaleInPlace(.5*X),R=this.center.subtractToRef(P,c[1]),p=this.center.addToRef(P,c[2]);return this.reConstruct(R,p,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(C){const c=this.minimumWorld,d=this.maximumWorld,b=this.directions,P=this.vectorsWorld,V=this.vectors;if(C.isIdentity()){c.V(this.minimum),d.V(this.maximum);for(let C=0;C<8;++C)P[C].V(V[C]);this.extendSizeWorld.V(this.extendSize),this.centerWorld.V(this.center)}else{c.Hc(Number.MAX_VALUE),d.Hc(-Number.MAX_VALUE);for(let b=0;b<8;++b){const R=P[b];X.dd.TransformCoordinatesToRef(V[b],C,R),c.minimizeInPlace(R),d.maximizeInPlace(R)}d.subtractToRef(c,this.extendSizeWorld).scaleInPlace(.5),d.addToRef(c,this.centerWorld).scaleInPlace(.5)}X.dd.FromArrayToRef(C.m,0,b[0]),X.dd.FromArrayToRef(C.m,4,b[1]),X.dd.FromArrayToRef(C.m,8,b[2]),this._worldMatrix=C}isInFrustum(C){return V.IsInFrustum(this.vectorsWorld,C)}isCompletelyInFrustum(C){return V.IsCompletelyInFrustum(this.vectorsWorld,C)}intersectsPoint(C){const c=this.minimumWorld,d=this.maximumWorld,b=c.x,X=c.y,V=c.z,R=d.x,p=d.y,j=d.z,g=C.x,k=C.y,Z=C.z,U=-P.d;return!(R-g<U||U>g-b)&&(!(p-k<U||U>k-X)&&!(j-Z<U||U>Z-V))}intersectsSphere(C){return V.IntersectsSphere(this.minimumWorld,this.maximumWorld,C.centerWorld,C.radiusWorld)}intersectsMinMax(C,c){const d=this.minimumWorld,b=this.maximumWorld,X=d.x,P=d.y,V=d.z,R=b.x,p=b.y,j=b.z,g=C.x,k=C.y,Z=C.z,U=c.x,A=c.y,u=c.z;return!(R<g||X>U)&&(!(p<k||P>A)&&!(j<Z||V>u))}dispose(){var C,c;null===(C=this._drawWrapperFront)||void 0===C||C.dispose(),null===(c=this._drawWrapperBack)||void 0===c||c.dispose()}static Intersects(C,c){return C.intersectsMinMax(c.minimumWorld,c.maximumWorld)}static IntersectsSphere(C,c,d,b){const P=V._TmpVector3[0];X.dd.ClampToRef(d,C,c,P);return X.dd.DistanceSquared(d,P)<=b*b}static IsCompletelyInFrustum(C,c){for(let d=0;d<6;++d){const b=c[d];for(let c=0;c<8;++c)if(b.dotCoordinate(C[c])<0)return!1}return!0}static IsInFrustum(C,c){for(let d=0;d<6;++d){let b=!0;const X=c[d];for(let c=0;c<8;++c)if(X.dotCoordinate(C[c])>=0){b=!1;break}if(b)return!1}return!0}}V._TmpVector3=(0,b.c)(3,X.dd.Zero)},12731:(C,c,d)=>{d.d(c,{b:()=>k});var b=d(12416),X=d(12403),P=d(12734),V=d(12741);const R={min:0,max:0},p={min:0,max:0},j=(C,c,d)=>{const b=X.dd.Dot(c.centerWorld,C),P=Math.abs(X.dd.Dot(c.directions[0],C))*c.extendSize.x+Math.abs(X.dd.Dot(c.directions[1],C))*c.extendSize.y+Math.abs(X.dd.Dot(c.directions[2],C))*c.extendSize.z;d.min=b-P,d.max=b+P},g=(C,c,d)=>(j(C,c,R),j(C,d,p),!(R.min>p.max||p.min>R.max));class k{constructor(C,c,d){this._isLocked=!1,this.boundingBox=new P.e(C,c,d),this.boundingSphere=new V.e(C,c,d)}reConstruct(C,c,d){this.boundingBox.reConstruct(C,c,d),this.boundingSphere.reConstruct(C,c,d)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(C){this._isLocked=C}update(C){this._isLocked||(this.boundingBox._update(C),this.boundingSphere._update(C))}centerOn(C,c){const d=k._TmpVector3[0].V(C).wZ(c),b=k._TmpVector3[1].V(C).addInPlace(c);return this.boundingBox.reConstruct(d,b,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(d,b,this.boundingBox.getWorldMatrix()),this}encapsulate(C){const c=X.dd.Minimize(this.minimum,C),d=X.dd.Maximize(this.maximum,C);return this.reConstruct(c,d,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(C){const c=X.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(c);const d=X.TmpVectors.dd[0];return X.dd.TransformCoordinatesToRef(C.boundingBox.minimumWorld,c,d),this.encapsulate(d),X.dd.TransformCoordinatesToRef(C.boundingBox.maximumWorld,c,d),this.encapsulate(d),this}scale(C){return this.boundingBox.scale(C),this.boundingSphere.scale(C),this}isInFrustum(C){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===c||3===c)&&this.boundingSphere.isCenterInFrustum(C))return!0;if(!this.boundingSphere.isInFrustum(C))return!1;return!(1!==c&&3!==c)||this.boundingBox.isInFrustum(C)}get diagonalLength(){const C=this.boundingBox;return C.maximumWorld.subtractToRef(C.minimumWorld,k._TmpVector3[0]).length()}isCompletelyInFrustum(C){return this.boundingBox.isCompletelyInFrustum(C)}_checkCollision(C){return C._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(C){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(C)&&!!this.boundingBox.intersectsPoint(C))}intersects(C,c){if(!V.e.Intersects(this.boundingSphere,C.boundingSphere))return!1;if(!P.e.Intersects(this.boundingBox,C.boundingBox))return!1;if(!c)return!0;const d=this.boundingBox,b=C.boundingBox;return!!g(d.directions[0],d,b)&&(!!g(d.directions[1],d,b)&&(!!g(d.directions[2],d,b)&&(!!g(b.directions[0],d,b)&&(!!g(b.directions[1],d,b)&&(!!g(b.directions[2],d,b)&&(!!g(X.dd.Cross(d.directions[0],b.directions[0]),d,b)&&(!!g(X.dd.Cross(d.directions[0],b.directions[1]),d,b)&&(!!g(X.dd.Cross(d.directions[0],b.directions[2]),d,b)&&(!!g(X.dd.Cross(d.directions[1],b.directions[0]),d,b)&&(!!g(X.dd.Cross(d.directions[1],b.directions[1]),d,b)&&(!!g(X.dd.Cross(d.directions[1],b.directions[2]),d,b)&&(!!g(X.dd.Cross(d.directions[2],b.directions[0]),d,b)&&(!!g(X.dd.Cross(d.directions[2],b.directions[1]),d,b)&&!!g(X.dd.Cross(d.directions[2],b.directions[2]),d,b))))))))))))))}}k._TmpVector3=(0,b.c)(2,X.dd.Zero)},12741:(C,c,d)=>{d.d(c,{e:()=>P});var b=d(12416),X=d(12403);class P{constructor(C,c,d){this.center=X.dd.Zero(),this.centerWorld=X.dd.Zero(),this.minimum=X.dd.Zero(),this.maximum=X.dd.Zero(),this.reConstruct(C,c,d)}reConstruct(C,c,d){this.minimum.V(C),this.maximum.V(c);const b=X.dd.Distance(C,c);c.addToRef(C,this.center).scaleInPlace(.5),this.radius=.5*b,this._update(d||X.Matrix.IdentityReadOnly)}scale(C){const c=this.radius*C,d=P._TmpVector3,b=d[0].Hc(c),X=this.center.subtractToRef(b,d[1]),V=this.center.addToRef(b,d[2]);return this.reConstruct(X,V,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(C){if(C.isIdentity())this.centerWorld.V(this.center),this.radiusWorld=this.radius;else{X.dd.TransformCoordinatesToRef(this.center,C,this.centerWorld);const c=P._TmpVector3[0];X.dd.TransformNormalFromFloatsToRef(1,1,1,C,c),this.radiusWorld=Math.max(Math.abs(c.x),Math.abs(c.y),Math.abs(c.z))*this.radius}}isInFrustum(C){const c=this.centerWorld,d=this.radiusWorld;for(let b=0;b<6;b++)if(C[b].dotCoordinate(c)<=-d)return!1;return!0}isCenterInFrustum(C){const c=this.centerWorld;for(let d=0;d<6;d++)if(C[d].dotCoordinate(c)<0)return!1;return!0}intersectsPoint(C){const c=X.dd.DistanceSquared(this.centerWorld,C);return!(this.radiusWorld*this.radiusWorld<c)}static Intersects(C,c){const d=X.dd.DistanceSquared(C.centerWorld,c.centerWorld),b=C.radiusWorld+c.radiusWorld;return!(b*b<d)}static CreateFromCenterAndRadius(C,c,d){this._TmpVector3[0].V(C),this._TmpVector3[1].yc(0,0,c),this._TmpVector3[2].V(C),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].wZ(this._TmpVector3[1]);const b=new P(this._TmpVector3[0],this._TmpVector3[2]);return b._worldMatrix=d||X.Matrix.Identity(),b}}P._TmpVector3=(0,b.c)(3,X.dd.Zero)},12756:(C,c,d)=>{function b(C){-1===C.indexOf("vClipPlane")&&C.push("vClipPlane"),-1===C.indexOf("vClipPlane2")&&C.push("vClipPlane2"),-1===C.indexOf("vClipPlane3")&&C.push("vClipPlane3"),-1===C.indexOf("vClipPlane4")&&C.push("vClipPlane4"),-1===C.indexOf("vClipPlane5")&&C.push("vClipPlane5"),-1===C.indexOf("vClipPlane6")&&C.push("vClipPlane6")}function X(C,c,d){const b=!!(C.clipPlane??c.clipPlane),X=!!(C.clipPlane2??c.clipPlane2),P=!!(C.clipPlane3??c.clipPlane3),V=!!(C.clipPlane4??c.clipPlane4),R=!!(C.clipPlane5??c.clipPlane5),p=!!(C.clipPlane6??c.clipPlane6);b&&d.push("#define CLIPPLANE"),X&&d.push("#define CLIPPLANE2"),P&&d.push("#define CLIPPLANE3"),V&&d.push("#define CLIPPLANE4"),R&&d.push("#define CLIPPLANE5"),p&&d.push("#define CLIPPLANE6")}function P(C,c,d){let b=!1;const X=!!(C.clipPlane??c.clipPlane),P=!!(C.clipPlane2??c.clipPlane2),V=!!(C.clipPlane3??c.clipPlane3),R=!!(C.clipPlane4??c.clipPlane4),p=!!(C.clipPlane5??c.clipPlane5),j=!!(C.clipPlane6??c.clipPlane6);return d.CLIPPLANE!==X&&(d.CLIPPLANE=X,b=!0),d.CLIPPLANE2!==P&&(d.CLIPPLANE2=P,b=!0),d.CLIPPLANE3!==V&&(d.CLIPPLANE3=V,b=!0),d.CLIPPLANE4!==R&&(d.CLIPPLANE4=R,b=!0),d.CLIPPLANE5!==p&&(d.CLIPPLANE5=p,b=!0),d.CLIPPLANE6!==j&&(d.CLIPPLANE6=j,b=!0),b}function V(C,c,d){let b=c.clipPlane??d.clipPlane;R(C,"vClipPlane",b),b=c.clipPlane2??d.clipPlane2,R(C,"vClipPlane2",b),b=c.clipPlane3??d.clipPlane3,R(C,"vClipPlane3",b),b=c.clipPlane4??d.clipPlane4,R(C,"vClipPlane4",b),b=c.clipPlane5??d.clipPlane5,R(C,"vClipPlane5",b),b=c.clipPlane6??d.clipPlane6,R(C,"vClipPlane6",b)}function R(C,c,d){d&&C.setFloat4(c,d.normal.x,d.normal.y,d.normal.z,d.d)}d.d(c,{b:()=>b,e:()=>V,g:()=>P,j:()=>X})},12704:(C,c,d)=>{d.d(c,{c:()=>b});class b{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(C,c){this._defines[C]||(C<this._currentRank&&(this._currentRank=C),C>this._maxRank&&(this._maxRank=C),this._defines[C]=new Array),this._defines[C].push(c)}addCPUSkinningFallback(C,c){this._mesh=c,C<this._currentRank&&(this._currentRank=C),C>this._maxRank&&(this._maxRank=C)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(C,c){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,C=C.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),c._bonesComputationForcedToCPU=!0;const d=this._mesh.NC();for(let C=0;C<d.meshes.length;C++){const b=d.meshes[C];if(b.material){if(b.computeBonesUsingShaders&&0!==b.numBoneInfluencers)if(b.material.getEffect()===c)b.computeBonesUsingShaders=!1;else if(b.Nc)for(const C of b.Nc){if(C.effect===c){b.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&b.computeBonesUsingShaders&&b.numBoneInfluencers>0&&(b.computeBonesUsingShaders=!1)}}else{const c=this._defines[this._currentRank];if(c)for(let d=0;d<c.length;d++)C=C.replace("#define "+c[d],"");this._currentRank++}return C}}},12714:(C,c,d)=>{d.d(c,{e:()=>q});var b=d(12384),X=d(12388),P=d(12219),V=d(12221),R=d(12255),p=d(12718),j=d(12660),g=d(12233),k=d(12442),Z=d(12514),U=d(12431);class A{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(C){this._func=C}get funcRef(){return this._funcRef}set funcRef(C){this._funcRef=C}get funcMask(){return this._funcMask}set funcMask(C){this._funcMask=C}get opStencilFail(){return this._opStencilFail}set opStencilFail(C){this._opStencilFail=C}get opDepthFail(){return this._opDepthFail}set opDepthFail(C){this._opDepthFail=C}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(C){this._opStencilDepthPass=C}get mask(){return this._mask}set mask(C){this._mask=C}get enabled(){return this._enabled}set enabled(C){this._enabled=C}getClassName(){return"MaterialStencilState"}copyTo(C){U.e.Clone((()=>C),this)}serialize(){return U.e.Serialize(this)}parse(C,c,d){U.e.Parse((()=>this),C,c,d)}}(0,b.e)([(0,X.P)()],A.prototype,"func",null),(0,b.e)([(0,X.P)()],A.prototype,"funcRef",null),(0,b.e)([(0,X.P)()],A.prototype,"funcMask",null),(0,b.e)([(0,X.P)()],A.prototype,"opStencilFail",null),(0,b.e)([(0,X.P)()],A.prototype,"opDepthFail",null),(0,b.e)([(0,X.P)()],A.prototype,"opStencilDepthPass",null),(0,b.e)([(0,X.P)()],A.prototype,"mask",null),(0,b.e)([(0,X.P)()],A.prototype,"enabled",null);var u=d(12750);class q{get _supportGlowLayer(){return!1}set _glowModeEnabled(C){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(C){if(this._alpha===C)return;const c=this._alpha;this._alpha=C,1!==c&&1!==C||this.Wk(q.MiscDirtyFlag+q.PrePassDirtyFlag)}get alpha(){return this._alpha}set Jc(C){this._backFaceCulling!==C&&(this._backFaceCulling=C,this.Wk(q.TextureDirtyFlag))}get Jc(){return this._backFaceCulling}set cullBackFaces(C){this._cullBackFaces!==C&&(this._cullBackFaces=C,this.Wk(q.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(C){this._blockDirtyMechanism!==C&&(this._blockDirtyMechanism=C,C||this.nU())}atomicMaterialsUpdate(C){this.blockDirtyMechanism=!0;try{C(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(C){this._onDisposeObserver&&this.Uc.remove(this._onDisposeObserver),this._onDisposeObserver=this.Uc.add(C)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new V.b),this._onBindObservable}set onBind(C){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(C)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new V.b),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new V.b),this._onEffectCreatedObservable}set alphaMode(C){this._alphaMode!==C&&(this._alphaMode=C,this.Wk(q.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(C){this._needDepthPrePass!==C&&(this._needDepthPrePass=C,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(C){this._fogEnabled!==C&&(this._fogEnabled=C,this.Wk(q.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case q.WireFrameFillMode:case q.LineListDrawMode:case q.LineLoopDrawMode:case q.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(C){this.fillMode=C?q.WireFrameFillMode:q.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case q.PointFillMode:case q.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(C){this.fillMode=C?q.PointFillMode:q.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(C){this._fillMode!==C&&(this._fillMode=C,this.Wk(q.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(C){const c=this.NC().getEngine().getCaps().fragmentDepthSupported;C&&!c&&g.d.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=C&&c,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(C){this._drawWrapper=C}constructor(C,c,d){let b=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.Uc=new V.b,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.uc=new A,this._useUBO=!1,this._fillMode=q.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=C;const X=c||R.c.LastCreatedScene;X&&(this._scene=X,this._dirtyCallbacks={},this._forceGLSL=b,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=C||P.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new Z.b(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new j.b(this._scene.getEngine(),void 0,void 0,C),this._useUBO=this.NC().getEngine().supportsUniformBuffers,this._createUniformBuffer(),d||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),q.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var C;const c=this.NC().getEngine();null===(C=this._uniformBuffer)||void 0===C||C.dispose(),c.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new j.b(c,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new j.b(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(C){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.nU(),this.checkReadyOnlyOnce=!0}unfreeze(){this.nU(),this.checkReadyOnlyOnce=!1}isReady(C,c){return!0}isReadyForSubMesh(C,c,d){const b=c.materialDefines;return!!b&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=b,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}NC(){return this._scene}_getEffectiveOrientation(C){return null!==this.sideOrientation?this.sideOrientation:C.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(C){this._transparencyMode!==C&&(this._transparencyMode=C,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===q.MATERIAL_ALPHABLEND||this._transparencyMode===q.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===q.MATERIAL_ALPHATEST||this._transparencyMode===q.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===q.MATERIAL_OPAQUE||this._transparencyMode===q.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(C){return this._hasTransparencyMode?this._transparencyModeIsBlend:C.visibility<1||!this._disableAlphaBlending&&(C.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(C){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(C)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}nU(){let C=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const c=this.NC().meshes;for(const d of c)if(d.Nc)for(const c of d.Nc)if(c.yC()===this)for(const d of c._drawWrappers)d&&this._materialContext===d.materialContext&&(d._wasPreviouslyReady=!1,d._wasPreviouslyUsingInstances=null,d._forceRebindOnNextCall=C);C&&this.Wk(q.AllDirtyFlag)}_preBind(C){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const d=this._scene.getEngine(),b=(null==c?this.sideOrientation:c)===q.ClockWiseSideOrientation;return d.enableEffect(C||this._getDrawWrapper()),d.setState(this.Jc,this.zOffset,!1,b,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.uc,this.zOffsetUnits),b}bind(C,c){}buildUniformLayout(){const C=this._uniformBuffer;this._eventInfo.ubo=C,this._callbackPluginEventGeneric(8,this._eventInfo),C.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(C,c,d){const b=d._drawWrapper;this._eventInfo.subMesh=d,this._callbackPluginEventBindForSubMesh(this._eventInfo),b._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(C){}bindView(C){this._useUBO?this._needToBindSceneUbo=!0:C.setMatrix("view",this.NC().getViewMatrix())}bindViewProjection(C){this._useUBO?this._needToBindSceneUbo=!0:(C.setMatrix("viewProjection",this.NC().getTransformMatrix()),C.setMatrix("projection",this.NC().getProjectionMatrix()))}bindEyePosition(C,c){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(C,c)}_afterBind(C){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&c&&(this._needToBindSceneUbo=!1,(0,u.r)(c,this.NC().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=C?C.visibility:1,this._onBindObservable&&C&&this._onBindObservable.notifyObservers(C),this.disableDepthWrite){const C=this._scene.getEngine();this._cachedDepthWriteState=C.getDepthWrite(),C.setDepthWrite(!1)}if(this.disableColorWrite){const C=this._scene.getEngine();this._cachedColorWriteState=C.getColorWrite(),C.setColorWrite(!1)}if(0!==this.depthFunction){const C=this._scene.getEngine();this._cachedDepthFunctionState=C.getDepthFunction()||0,C.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(C){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=C,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(C){return null}_clonePlugins(C,c){const d={};if(this._serializePlugins(d),q._ParsePlugins(d,C,this._scene,c),this.pluginManager)for(const b of this.pluginManager._plugins){const c=C.pluginManager.getPlugin(b.name);c&&b.copyTo(c)}}getBindedMeshes(){if(this.meshMap){const C=[];for(const c in this.meshMap){const d=this.meshMap[c];d&&C.push(d)}return C}return this._scene.meshes.filter((C=>C.material===this))}forceCompilation(C,c,d,b){const X={clipPlane:!1,useInstances:!1,...d},P=this.NC(),V=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const R=()=>{if(!this._scene||!this._scene.getEngine())return;const d=P.clipPlane;if(X.clipPlane&&(P.clipPlane=new k.c(0,0,0,1)),this._storeEffectOnSubMeshes){let d=!0,P=null;if(C.Nc){const c=new p.c(0,0,0,0,0,C,void 0,!1,!1);c.materialDefines&&(c.materialDefines._renderId=-1),this.isReadyForSubMesh(C,c,X.useInstances)||(c.effect&&c.effect.getCompilationError()&&c.effect.allFallbacksProcessed()?P=c.effect.getCompilationError():(d=!1,setTimeout(R,16)))}d&&(this.allowShaderHotSwapping=V,P&&b&&b(P),c&&c(this))}else this.isReady()?(this.allowShaderHotSwapping=V,c&&c(this)):setTimeout(R,16);X.clipPlane&&(P.clipPlane=d)};R()}async forceCompilationAsync(C,c){return await new Promise(((d,b)=>{this.forceCompilation(C,(()=>{d()}),c,(C=>{b(C)}))}))}Wk(C){this.NC().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(q._DirtyCallbackArray.length=0,C&q.ImageProcessingDirtyFlag&&q._DirtyCallbackArray.push(q._ImageProcessingDirtyCallBack),C&q.TextureDirtyFlag&&q._DirtyCallbackArray.push(q._TextureDirtyCallBack),C&q.LightDirtyFlag&&q._DirtyCallbackArray.push(q._LightsDirtyCallBack),C&q.FresnelDirtyFlag&&q._DirtyCallbackArray.push(q._FresnelDirtyCallBack),C&q.AttributesDirtyFlag&&q._DirtyCallbackArray.push(q._AttributeDirtyCallBack),C&q.MiscDirtyFlag&&q._DirtyCallbackArray.push(q._MiscDirtyCallBack),C&q.PrePassDirtyFlag&&q._DirtyCallbackArray.push(q._PrePassDirtyCallBack),q._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(q._RunDirtyCallBacks),this.NC().resetCachedMaterial())}resetDrawCache(){const C=this.NC().meshes;for(const c of C)if(c.Nc)for(const C of c.Nc)C.yC()===this&&C.resetDrawCache()}_markAllSubMeshesAsDirty(C){const c=this.NC();if(c.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const d=c.meshes;for(const b of d)if(b.Nc)for(const d of b.Nc){if((d.yC()||(c._hasDefaultMaterial?c.defaultMaterial:null))===this)for(const c of d._drawWrappers)c&&c.defines&&c.defines.markAllAsDirty&&this._materialContext===c.materialContext&&C(c.defines)}}_markScenePrePassDirty(){if(this.NC().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const C=this.NC().enablePrePassRenderer();C&&C.Wk()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(q._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(q._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(q._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(q._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(q._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(q._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(q._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(q._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(q._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(q._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const C=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.Uc.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(C)}))}}setPrePassRenderer(C){return!1}dispose(C,c,d){const b=this.NC();if(b.stopAnimation(this),b.freeProcessedMaterials(),b.removeMaterial(this),this._eventInfo.forceDisposeTextures=c,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const C=this._parentContainer.materials.indexOf(this);C>-1&&this._parentContainer.materials.splice(C,1),this._parentContainer=null}if(!0!==d)if(this.meshMap)for(const X in this.meshMap){const C=this.meshMap[X];this._disposeMeshResources(C)}else{const C=b.meshes;for(const c of C)this._disposeMeshResources(c)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.Uc.notifyObservers(this),this.Uc.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(C){if(!C)return;const c=C.zc,d=C._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(C.Nc&&d)for(const X of C.Nc){const C=X._drawWrappers;for(let P=0;P<C.length;P++){var b;const V=null===(b=C[P])||void 0===b?void 0:b.effect;if(!V)continue;d[P]===this&&(null===c||void 0===c||c._releaseVertexArrayObject(V),X._removeDrawWrapper(P,!0,!0))}}}else null===c||void 0===c||c._releaseVertexArrayObject(this._drawWrapper.effect);C.material!==this||C.sourceMesh||(C.material=null)}serialize(){const C=U.e.Serialize(this);return C.uc=this.uc.serialize(),C.uniqueId=this.uniqueId,this._serializePlugins(C),C}_serializePlugins(C){if(C.plugins={},this.pluginManager)for(const c of this.pluginManager._plugins)c.doNotSerialize||(C.plugins[c.getClassName()]=c.serialize())}static Parse(C,c,d){if(C.customType){if("BABYLON.PBRMaterial"===C.customType&&C.overloadedAlbedo&&(C.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return g.d.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else C.customType="BABYLON.StandardMaterial";const b=P.Tools.Instantiate(C.customType).Parse(C,c,d);return b._loadedUniqueId=C.uniqueId,b}static _ParsePlugins(C,c,d,b){if(C.plugins)for(const R in C.plugins){var X,V;const p=C.plugins[R];let j=null===(X=c.pluginManager)||void 0===X?void 0:X.getPlugin(p.name);if(!j){const C=P.Tools.Instantiate("BABYLON."+R);C&&(j=new C(c))}null===(V=j)||void 0===V||V.parse(p,d,b)}}}q.TriangleFillMode=0,q.WireFrameFillMode=1,q.PointFillMode=2,q.PointListDrawMode=3,q.LineListDrawMode=4,q.LineLoopDrawMode=5,q.LineStripDrawMode=6,q.TriangleStripDrawMode=7,q.TriangleFanDrawMode=8,q.ClockWiseSideOrientation=0,q.CounterClockWiseSideOrientation=1,q.ImageProcessingDirtyFlag=64,q.TextureDirtyFlag=1,q.LightDirtyFlag=2,q.FresnelDirtyFlag=4,q.AttributesDirtyFlag=8,q.MiscDirtyFlag=16,q.PrePassDirtyFlag=32,q.AllDirtyFlag=127,q.MATERIAL_OPAQUE=0,q.MATERIAL_ALPHATEST=1,q.MATERIAL_ALPHABLEND=2,q.MATERIAL_ALPHATESTANDBLEND=3,q.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,q.MATERIAL_NORMALBLENDMETHOD_RNM=1,q.OnEventObservable=new V.b,q._AllDirtyCallBack=C=>C.markAllAsDirty(),q._ImageProcessingDirtyCallBack=C=>C.markAsImageProcessingDirty(),q._TextureDirtyCallBack=C=>C.markAsTexturesDirty(),q._FresnelDirtyCallBack=C=>C.markAsFresnelDirty(),q._MiscDirtyCallBack=C=>C.markAsMiscDirty(),q._PrePassDirtyCallBack=C=>C.markAsPrePassDirty(),q._LightsDirtyCallBack=C=>C.markAsLightDirty(),q._AttributeDirtyCallBack=C=>C.markAsAttributesDirty(),q._FresnelAndMiscDirtyCallBack=C=>{q._FresnelDirtyCallBack(C),q._MiscDirtyCallBack(C)},q._TextureAndMiscDirtyCallBack=C=>{q._TextureDirtyCallBack(C),q._MiscDirtyCallBack(C)},q._DirtyCallbackArray=[],q._RunDirtyCallBacks=C=>{for(const c of q._DirtyCallbackArray)c(C)},(0,b.e)([(0,X.P)()],q.prototype,"id",void 0),(0,b.e)([(0,X.P)()],q.prototype,"uniqueId",void 0),(0,b.e)([(0,X.P)()],q.prototype,"name",void 0),(0,b.e)([(0,X.P)()],q.prototype,"metadata",void 0),(0,b.e)([(0,X.P)()],q.prototype,"checkReadyOnEveryCall",void 0),(0,b.e)([(0,X.P)()],q.prototype,"checkReadyOnlyOnce",void 0),(0,b.e)([(0,X.P)()],q.prototype,"state",void 0),(0,b.e)([(0,X.P)("alpha")],q.prototype,"_alpha",void 0),(0,b.e)([(0,X.P)("Jc")],q.prototype,"_backFaceCulling",void 0),(0,b.e)([(0,X.P)("cullBackFaces")],q.prototype,"_cullBackFaces",void 0),(0,b.e)([(0,X.P)()],q.prototype,"sideOrientation",void 0),(0,b.e)([(0,X.P)("alphaMode")],q.prototype,"_alphaMode",void 0),(0,b.e)([(0,X.P)()],q.prototype,"_needDepthPrePass",void 0),(0,b.e)([(0,X.P)()],q.prototype,"disableDepthWrite",void 0),(0,b.e)([(0,X.P)()],q.prototype,"disableColorWrite",void 0),(0,b.e)([(0,X.P)()],q.prototype,"forceDepthWrite",void 0),(0,b.e)([(0,X.P)()],q.prototype,"depthFunction",void 0),(0,b.e)([(0,X.P)()],q.prototype,"separateCullingPass",void 0),(0,b.e)([(0,X.P)("fogEnabled")],q.prototype,"_fogEnabled",void 0),(0,b.e)([(0,X.P)()],q.prototype,"pointSize",void 0),(0,b.e)([(0,X.P)()],q.prototype,"zOffset",void 0),(0,b.e)([(0,X.P)()],q.prototype,"zOffsetUnits",void 0),(0,b.e)([(0,X.P)()],q.prototype,"pointsCloud",null),(0,b.e)([(0,X.P)()],q.prototype,"fillMode",null),(0,b.e)([(0,X.P)()],q.prototype,"useLogarithmicDepth",null),(0,b.e)([(0,X.P)()],q.prototype,"transparencyMode",null)},12750:(C,c,d)=>{d.d(c,{$:()=>w,B:()=>N,D:()=>r,E:()=>U,H:()=>Z,I:()=>f,J:()=>L,L:()=>i,O:()=>B,R:()=>K,U:()=>T,Y:()=>z,bb:()=>y,d:()=>n,eb:()=>A,g:()=>k,k:()=>E,o:()=>g,q:()=>u,r:()=>q,s:()=>t,t:()=>M,x:()=>e});var b=d(12233),X=d(12438),P=d(12255),V=d(12702),R=d(12756);const p=X.pd.Black(),j={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function g(C,c,d){if(!C||C.LOGARITHMICDEPTH||C.indexOf&&C.indexOf("LOGARITHMICDEPTH")>=0){const C=d.activeCamera;1===C.mode&&b.d.Error("Logarithmic depth is not compatible with orthographic cameras!",20),c.setFloat("logarithmicDepthConstant",2/(Math.log(C.maxZ+1)/Math.LN2))}}function k(C,c,d){let b=arguments.length>3&&void 0!==arguments[3]&&arguments[3];d&&C.fogEnabled&&(!c||c.applyFog)&&0!==C.fogMode&&(d.setFloat4("vFogInfos",C.fogMode,C.fogStart,C.fogEnd,C.fogDensity),b?(C.fogColor.toLinearSpaceToRef(p,C.getEngine().useExactSrgbConversions),d.setColor3("vFogColor",p)):d.setColor3("vFogColor",C.fogColor))}function Z(C,c,d,b,X,P,V,R,p,g){const k=C.numMaxInfluencers||C.numInfluencers;return k<=0?0:(c.push("#define MORPHTARGETS"),C.hasPositions&&c.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),C.hasNormals&&c.push("#define MORPHTARGETTEXTURE_HASNORMALS"),C.hasTangents&&c.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),C.hasUVs&&c.push("#define MORPHTARGETTEXTURE_HASUVS"),C.hasUV2s&&c.push("#define MORPHTARGETTEXTURE_HASUV2S"),C.hasColors&&c.push("#define MORPHTARGETTEXTURE_HASCOLORS"),C.supportsPositions&&X&&c.push("#define MORPHTARGETS_POSITION"),C.supportsNormals&&P&&c.push("#define MORPHTARGETS_NORMAL"),C.supportsTangents&&V&&c.push("#define MORPHTARGETS_TANGENT"),C.supportsUVs&&R&&c.push("#define MORPHTARGETS_UV"),C.supportsUV2s&&p&&c.push("#define MORPHTARGETS_UV2"),C.supportsColors&&g&&c.push("#define MORPHTARGETS_COLOR"),c.push("#define NUM_MORPH_INFLUENCERS "+k),C.isUsingTextureForTargets&&c.push("#define MORPHTARGETS_TEXTURE"),j.NUM_MORPH_INFLUENCERS=k,j.NORMAL=P,j.TANGENT=V,j.UV=R,j.UV2=p,j.COLOR=g,U(d,b,j,X),k)}function U(C,c,d){let X=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const V=d.NUM_MORPH_INFLUENCERS;if(V>0&&P.c.LastCreatedEngine){const R=P.c.LastCreatedEngine.getCaps().maxVertexAttribs,p=c.morphTargetManager;if(null!==p&&void 0!==p&&p.isUsingTextureForTargets)return;const j=p&&p.supportsPositions&&X,g=p&&p.supportsNormals&&d.NORMAL,k=p&&p.supportsTangents&&d.TANGENT,Z=p&&p.supportsUVs&&d.UV1,U=p&&p.supportsUV2s&&d.UV2,A=p&&p.supportsColors&&d.VERTEXCOLOR;for(let d=0;d<V;d++)j&&C.push("position"+d),g&&C.push("normal"+d),k&&C.push("tangent"+d),Z&&C.push("uv_"+d),U&&C.push("uv2_"+d),A&&C.push("color"+d),C.length>R&&b.d.Error("Cannot add more vertex attributes for mesh "+c.name)}}function A(C){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];C.push("world0"),C.push("world1"),C.push("world2"),C.push("world3"),c&&(C.push("previousWorld0"),C.push("previousWorld1"),C.push("previousWorld2"),C.push("previousWorld3"))}function u(C,c){const d=C.morphTargetManager;C&&d&&c.setFloatArray("morphTargetInfluences",d.influences)}function q(C,c){c.bindToEffect(C,"Scene")}function B(C,c,d){c._needUVs=!0,c[d]=!0,C.optimizeUVAllocation&&C.getTextureMatrix().isIdentityAs3x2()?(c[d+"DIRECTUV"]=C.coordinatesIndex+1,c["MAINUV"+(C.coordinatesIndex+1)]=!0):c[d+"DIRECTUV"]=0}function t(C,c,d){const b=C.getTextureMatrix();c.fc(d+"Matrix",b)}function e(C,c,d){d.BAKED_VERTEX_ANIMATION_TEXTURE&&d.INSTANCES&&C.push("bakedVertexAnimationSettingsInstanced")}function n(C,c,d){var b;if(c&&C&&(C.computeBonesUsingShaders&&c._bonesComputationForcedToCPU&&(C.computeBonesUsingShaders=!1),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const X=C.skeleton;if(X.isUsingTextureForMatrices&&c.getUniformIndex("boneTextureWidth")>-1){const d=X.getTransformMatrixTexture(C);c.setTexture("boneSampler",d),c.setFloat("boneTextureWidth",4*(X.bones.length+1))}else{const P=X.getTransformMatrices(C);P&&(c.setMatrices("mBones",P),d&&C.NC().prePassRenderer&&C.NC().prePassRenderer.getIndex(2)&&(d.previousBones[C.uniqueId]||(d.previousBones[C.uniqueId]=P.slice()),c.setMatrices("mPreviousBones",d.previousBones[C.uniqueId]),b=P,d.previousBones[C.uniqueId].set(b)))}}}function W(C,c,d,b,X){let P=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];C._bindLight(c,d,b,X,P)}function E(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const P=Math.min(c.lightSources.length,X);for(let V=0;V<P;V++){W(c.lightSources[V],V,C,d,"boolean"===typeof b?b:b.SPECULARTERM,c.receiveShadows)}}function N(C,c,d,b){d.NUM_BONE_INFLUENCERS>0&&(b.addCPUSkinningFallback(0,c),C.push("matricesIndices"),C.push("matricesWeights"),d.NUM_BONE_INFLUENCERS>4&&(C.push("matricesIndicesExtra"),C.push("matricesWeightsExtra")))}function r(C,c){(c.INSTANCES||c.THIN_INSTANCES)&&A(C,!!c.PREPASS_VELOCITY),c.INSTANCESCOLOR&&C.push("instanceColor")}function M(C,c){let d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,X=0;for(let P=0;P<d&&C["LIGHT"+P];P++)P>0&&(X=b+P,c.addFallback(X,"LIGHT"+P)),C.SHADOWS||(C["SHADOW"+P]&&c.addFallback(b,"SHADOW"+P),C["SHADOWPCF"+P]&&c.addFallback(b,"SHADOWPCF"+P),C["SHADOWPCSS"+P]&&c.addFallback(b,"SHADOWPCSS"+P),C["SHADOWPOISSON"+P]&&c.addFallback(b,"SHADOWPOISSON"+P),C["SHADOWESM"+P]&&c.addFallback(b,"SHADOWESM"+P),C["SHADOWCLOSEESM"+P]&&c.addFallback(b,"SHADOWCLOSEESM"+P));return X++}function K(C,c,d,b,X,P,V){let R=arguments.length>7&&void 0!==arguments[7]&&arguments[7];V._areMiscDirty&&(V.LOGARITHMICDEPTH=d,V.POINTSIZE=b,V.FOG=X&&function(C,c){return c.fogEnabled&&C.applyFog&&0!==c.fogMode}(C,c),V.NONUNIFORMSCALING=C.nonUniformScaling,V.ALPHATEST=P,V.DECAL_AFTER_DETAIL=R)}function i(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!d._areLightsDirty)return d._needNormals;let V=0;const R={needNormals:d._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(C.lightsEnabled&&!P)for(const j of c.lightSources)if(h(C,c,j,V,d,b,R),V++,V===X)break;d.SPECULARTERM=R.specularEnabled,d.SHADOWS=R.shadowEnabled;for(let j=V;j<X;j++)void 0!==d["LIGHT"+j]&&(d["LIGHT"+j]=!1,d["HEMILIGHT"+j]=!1,d["POINTLIGHT"+j]=!1,d["DIRLIGHT"+j]=!1,d["SPOTLIGHT"+j]=!1,d["AREALIGHT"+j]=!1,d["SHADOW"+j]=!1,d["SHADOWCSM"+j]=!1,d["SHADOWCSMDEBUG"+j]=!1,d["SHADOWCSMNUM_CASCADES"+j]=!1,d["SHADOWCSMUSESHADOWMAXZ"+j]=!1,d["SHADOWCSMNOBLEND"+j]=!1,d["SHADOWCSM_RIGHTHANDED"+j]=!1,d["SHADOWPCF"+j]=!1,d["SHADOWPCSS"+j]=!1,d["SHADOWPOISSON"+j]=!1,d["SHADOWESM"+j]=!1,d["SHADOWCLOSEESM"+j]=!1,d["SHADOWCUBE"+j]=!1,d["SHADOWLOWQUALITY"+j]=!1,d["SHADOWMEDIUMQUALITY"+j]=!1);const p=C.getEngine().getCaps();return void 0===d.SHADOWFLOAT&&(R.needRebuild=!0),d.SHADOWFLOAT=R.shadowEnabled&&(p.textureFloatRender&&p.textureFloatLinearFiltering||p.textureHalfFloatRender&&p.textureHalfFloatLinearFiltering),d.LIGHTMAPEXCLUDED=R.lightmapMode,R.needRebuild&&d.rebuild(),R.needNormals}function h(C,c,d,b,X,P,R){switch(R.needNormals=!0,void 0===X["LIGHT"+b]&&(R.needRebuild=!0),X["LIGHT"+b]=!0,X["SPOTLIGHT"+b]=!1,X["HEMILIGHT"+b]=!1,X["POINTLIGHT"+b]=!1,X["DIRLIGHT"+b]=!1,X["AREALIGHT"+b]=!1,d.prepareLightSpecificDefines(X,b),X["LIGHT_FALLOFF_PHYSICAL"+b]=!1,X["LIGHT_FALLOFF_GLTF"+b]=!1,X["LIGHT_FALLOFF_STANDARD"+b]=!1,d.falloffType){case V.e.FALLOFF_GLTF:X["LIGHT_FALLOFF_GLTF"+b]=!0;break;case V.e.FALLOFF_PHYSICAL:X["LIGHT_FALLOFF_PHYSICAL"+b]=!0;break;case V.e.FALLOFF_STANDARD:X["LIGHT_FALLOFF_STANDARD"+b]=!0}if(P&&!d.Ik.equalsFloats(0,0,0)&&(R.specularEnabled=!0),X["SHADOW"+b]=!1,X["SHADOWCSM"+b]=!1,X["SHADOWCSMDEBUG"+b]=!1,X["SHADOWCSMNUM_CASCADES"+b]=!1,X["SHADOWCSMUSESHADOWMAXZ"+b]=!1,X["SHADOWCSMNOBLEND"+b]=!1,X["SHADOWCSM_RIGHTHANDED"+b]=!1,X["SHADOWPCF"+b]=!1,X["SHADOWPCSS"+b]=!1,X["SHADOWPOISSON"+b]=!1,X["SHADOWESM"+b]=!1,X["SHADOWCLOSEESM"+b]=!1,X["SHADOWCUBE"+b]=!1,X["SHADOWLOWQUALITY"+b]=!1,X["SHADOWMEDIUMQUALITY"+b]=!1,c&&c.receiveShadows&&C.shadowsEnabled&&d.shadowEnabled){const c=d.getShadowGenerator(C.activeCamera)??d.getShadowGenerator();if(c){const C=c.getShadowMap();C&&C.renderList&&C.renderList.length>0&&(R.shadowEnabled=!0,c.prepareDefines(X,b))}}d.lightmapMode!=V.e.LIGHTMAP_DEFAULT?(R.lightmapMode=!0,X["LIGHTMAPEXCLUDED"+b]=!0,X["LIGHTMAPNOSPECULAR"+b]=d.lightmapMode==V.e.LIGHTMAP_SHADOWSONLY):(X["LIGHTMAPEXCLUDED"+b]=!1,X["LIGHTMAPNOSPECULAR"+b]=!1)}function L(C,c,d,b,X){let P=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,V=arguments.length>6&&void 0!==arguments[6]&&arguments[6],p=function(C,c){let d=!1;if(C.activeCamera){const b=c.CAMERA_ORTHOGRAPHIC?1:0,X=c.CAMERA_PERSPECTIVE?1:0,P=1===C.activeCamera.mode?1:0,V=0===C.activeCamera.mode?1:0;(b^P||X^V)&&(c.CAMERA_ORTHOGRAPHIC=1===P,c.CAMERA_PERSPECTIVE=1===V,d=!0)}return d}(C,b);!1!==P&&(p=(0,R.g)(d,C,b)),b.DEPTHPREPASS!==!c.getColorWrite()&&(b.DEPTHPREPASS=!b.DEPTHPREPASS,p=!0),b.INSTANCES!==X&&(b.INSTANCES=X,p=!0),b.THIN_INSTANCES!==V&&(b.THIN_INSTANCES=V,p=!0),p&&b.markAsUnprocessed()}function f(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]&&arguments[4],P=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],V=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!c._areAttributesDirty&&c._needNormals===c._normals&&c._needUVs===c._uvs)return!1;c._normals=c._needNormals,c._uvs=c._needUVs,c.NORMAL=c._needNormals&&C.isVerticesDataPresent("normal"),c._needNormals&&C.isVerticesDataPresent("tangent")&&(c.TANGENT=!0);for(let R=1;R<=6;++R)c["UV"+R]=!!c._needUVs&&C.isVerticesDataPresent(`uv${1===R?"":R}`);if(d){const d=C.useVertexColors&&C.isVerticesDataPresent("color");c.VERTEXCOLOR=d,c.VERTEXALPHA=C.hasVertexAlpha&&d&&P}return C.isVerticesDataPresent("instanceColor")&&(C.hasInstances||C.hasThinInstances)&&(c.INSTANCESCOLOR=!0),b&&function(C,c){if(C.useBones&&C.computeBonesUsingShaders&&C.skeleton){c.NUM_BONE_INFLUENCERS=C.numBoneInfluencers;const d=void 0!==c.BONETEXTURE;if(C.skeleton.isUsingTextureForMatrices&&d)c.BONETEXTURE=!0;else{c.BonesPerMesh=C.skeleton.bones.length+1,c.BONETEXTURE=!d&&void 0;const b=C.NC().prePassRenderer;if(b&&b.enabled){const d=-1===b.excludedSkinnedMesh.indexOf(C);c.BONES_VELOCITY_ENABLED=d}}}else c.NUM_BONE_INFLUENCERS=0,c.BonesPerMesh=0,void 0!==c.BONETEXTURE&&(c.BONETEXTURE=!1)}(C,c),X&&function(C,c){const d=C.morphTargetManager;d?(c.MORPHTARGETS_UV=d.supportsUVs&&c.UV1,c.MORPHTARGETS_UV2=d.supportsUV2s&&c.UV2,c.MORPHTARGETS_TANGENT=d.supportsTangents&&c.TANGENT,c.MORPHTARGETS_NORMAL=d.supportsNormals&&c.NORMAL,c.MORPHTARGETS_POSITION=d.supportsPositions,c.MORPHTARGETS_COLOR=d.supportsColors,c.MORPHTARGETTEXTURE_HASUVS=d.hasUVs,c.MORPHTARGETTEXTURE_HASUV2S=d.hasUV2s,c.MORPHTARGETTEXTURE_HASTANGENTS=d.hasTangents,c.MORPHTARGETTEXTURE_HASNORMALS=d.hasNormals,c.MORPHTARGETTEXTURE_HASPOSITIONS=d.hasPositions,c.MORPHTARGETTEXTURE_HASCOLORS=d.hasColors,c.NUM_MORPH_INFLUENCERS=d.numMaxInfluencers||d.numInfluencers,c.MORPHTARGETS=c.NUM_MORPH_INFLUENCERS>0,c.MORPHTARGETS_TEXTURE=d.isUsingTextureForTargets):(c.MORPHTARGETS_UV=!1,c.MORPHTARGETS_UV2=!1,c.MORPHTARGETS_TANGENT=!1,c.MORPHTARGETS_NORMAL=!1,c.MORPHTARGETS_POSITION=!1,c.MORPHTARGETS_COLOR=!1,c.MORPHTARGETTEXTURE_HASUVS=!1,c.MORPHTARGETTEXTURE_HASUV2S=!1,c.MORPHTARGETTEXTURE_HASTANGENTS=!1,c.MORPHTARGETTEXTURE_HASNORMALS=!1,c.MORPHTARGETTEXTURE_HASPOSITIONS=!1,c.MORPHTARGETTEXTURE_HAS_COLORS=!1,c.MORPHTARGETS=!1,c.NUM_MORPH_INFLUENCERS=0)}(C,c),V&&function(C,c){const d=C.bakedVertexAnimationManager;c.BAKED_VERTEX_ANIMATION_TEXTURE=!(!d||!d.isEnabled)}(C,c),!0}function T(C,c){if(C.activeCamera){const d=c.MULTIVIEW;c.MULTIVIEW=null!==C.activeCamera.outputRenderTarget&&C.activeCamera.outputRenderTarget.getViewCount()>1,c.MULTIVIEW!=d&&c.markAsUnprocessed()}}function z(C,c,d){const b=c.ORDER_INDEPENDENT_TRANSPARENCY,X=c.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;c.ORDER_INDEPENDENT_TRANSPARENCY=C.useOrderIndependentTransparency&&d,c.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!C.getEngine().getCaps().textureFloatLinearFiltering,b===c.ORDER_INDEPENDENT_TRANSPARENCY&&X===c.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||c.markAsUnprocessed()}function w(C,c,d){const b=c.PREPASS;if(!c._arePrePassDirty)return;const X=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(C.prePassRenderer&&C.prePassRenderer.enabled&&d){c.PREPASS=!0,c.SCENE_MRT_COUNT=C.prePassRenderer.mrtCount,c.PREPASS_NORMAL_WORLDSPACE=C.prePassRenderer.generateNormalsInWorldSpace,c.PREPASS_COLOR=!0,c.PREPASS_COLOR_INDEX=0;for(let d=0;d<X.length;d++){const b=C.prePassRenderer.getIndex(X[d].type);-1!==b?(c[X[d].define]=!0,c[X[d].index]=b):c[X[d].define]=!1}}else{c.PREPASS=!1;for(let C=0;C<X.length;C++)c[X[C].define]=!1}c.PREPASS!=b&&(c.markAsUnprocessed(),c.markAsImageProcessingDirty())}function J(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,P=arguments.length>5&&void 0!==arguments[5]&&arguments[5],V=arguments.length>6&&void 0!==arguments[6]&&arguments[6];X&&X.push("Light"+C),P||(c.push("vLightData"+C,"vLightDiffuse"+C,"vLightSpecular"+C,"vLightDirection"+C,"vLightWidth"+C,"vLightHeight"+C,"vLightFalloff"+C,"vLightGround"+C,"lightMatrix"+C,"shadowsInfo"+C,"depthValues"+C),d.push("shadowTexture"+C),d.push("depthTexture"+C),c.push("viewFrustumZ"+C,"cascadeBlendFactor"+C,"lightSizeUVCorrection"+C,"depthCorrection"+C,"penumbraDarkness"+C,"frustumLengths"+C),b&&(d.push("projectionLightTexture"+C),c.push("textureProjectionMatrix"+C)),V&&d.push("iesLightTexture"+C))}function y(C,c,d){let b,X,P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(C.uniformsNames){const V=C;b=V.uniformsNames,X=V.uniformBuffersNames,c=V.samplers,d=V.defines,P=V.maxSimultaneousLights||0}else b=C,c||(c=[]);for(let V=0;V<P&&d["LIGHT"+V];V++)J(V,b,c,d["PROJECTEDLIGHTTEXTURE"+V],X,!1,d["IESLIGHTTEXTURE"+V]);d.NUM_MORPH_INFLUENCERS&&(b.push("morphTargetInfluences"),b.push("morphTargetCount")),d.BAKED_VERTEX_ANIMATION_TEXTURE&&(b.push("bakedVertexAnimationSettings"),b.push("bakedVertexAnimationTextureSizeInverted"),b.push("bakedVertexAnimationTime"),c.push("bakedVertexAnimationTexture"))}},12710:(C,c,d)=>{d.d(c,{b:()=>P});var b=d(12403),X=d(12714);class P extends X.e{constructor(C,c){let d=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(C,c,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new b.Matrix,this._storeEffectOnSubMeshes=d}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(C,c){return!!C&&(!this._storeEffectOnSubMeshes||(!C.Nc||0===C.Nc.length||this.isReadyForSubMesh(C,C.Nc[0],c)))}_isReadyForSubMesh(C){const c=C.materialDefines;return!(this.checkReadyOnEveryCall||!C.effect||!c||c._renderId!==this.NC().getRenderId())}bindOnlyWorldMatrix(C){this._activeEffect.setMatrix("world",C)}bindOnlyNormalMatrix(C){this._activeEffect.setMatrix("normalMatrix",C)}bind(C,c){c&&this.bindForSubMesh(C,c,c.Nc[0])}_afterBind(C){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,d=arguments.length>2?arguments[2]:void 0;super._afterBind(C,c,d),this.NC()._cachedEffect=c,d?d._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(C,c,d){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return d._drawWrapper._forceRebindOnNextCall||C.isCachedMaterialInvalid(this,c,b)}dispose(C,c,d){this._activeEffect=void 0,super.dispose(C,c,d)}}},12748:(C,c,d)=>{d.d(c,{b:()=>R,f:()=>p});var b=d(12384),X=d(12403),P=d(12388);class V{static extractMinAndMaxIndexed(C,c,d,b,X,P){for(let V=d;V<d+b;V++){const d=3*c[V],b=C[d],R=C[d+1],p=C[d+2];X.minimizeInPlaceFromFloats(b,R,p),P.maximizeInPlaceFromFloats(b,R,p)}}static extractMinAndMax(C,c,d,b,X,P){for(let V=c,R=c*b;V<c+d;V++,R+=b){const c=C[R],d=C[R+1],b=C[R+2];X.minimizeInPlaceFromFloats(c,d,b),P.maximizeInPlaceFromFloats(c,d,b)}}}function R(C,c,d,b){let P=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const R=new X.dd(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),p=new X.dd(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return V.extractMinAndMaxIndexed(C,c,d,b,R,p),P&&(R.x-=R.x*P.x+P.y,R.y-=R.y*P.x+P.y,R.z-=R.z*P.x+P.y,p.x+=p.x*P.x+P.y,p.y+=p.y*P.x+P.y,p.z+=p.z*P.x+P.y),{minimum:R,maximum:p}}function p(C,c,d){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,P=arguments.length>4?arguments[4]:void 0;const R=new X.dd(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),p=new X.dd(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return P||(P=3),V.extractMinAndMax(C,c,d,P,R,p),b&&(R.x-=R.x*b.x+b.y,R.y-=R.y*b.x+b.y,R.z-=R.z*b.x+b.y,p.x+=p.x*b.x+b.y,p.y+=p.y*b.x+b.y,p.z+=p.z*b.x+b.y),{minimum:R,maximum:p}}(0,b.e)([P.h.filter((function(){for(var C=arguments.length,c=new Array(C),d=0;d<C;d++)c[d]=arguments[d];let[b,X]=c;return!Array.isArray(b)&&!Array.isArray(X)}))],V,"extractMinAndMaxIndexed",null),(0,b.e)([P.h.filter((function(){for(var C=arguments.length,c=new Array(C),d=0;d<C;d++)c[d]=arguments[d];let[b]=c;return!Array.isArray(b)}))],V,"extractMinAndMax",null)},12718:(C,c,d)=>{d.d(c,{c:()=>p});var b=d(12471),X=d(12724),P=d(12731),V=d(12748),R=d(12514);class p{get materialDefines(){var C;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(C=this._getDrawWrapper())||void 0===C?void 0:C.defines}set materialDefines(C){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=C}_getDrawWrapper(C){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];C=C??this._engine.currentRenderPassId;let d=this._drawWrappers[C];return!d&&c&&(this._drawWrappers[C]=d=new R.b(this._mesh.NC().getEngine())),d}_removeDrawWrapper(C){let c=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var d;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(d=this._drawWrappers[C])||void 0===d||d.dispose(c));this._drawWrappers[C]=void 0}get effect(){var C;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(C=this._getDrawWrapper())||void 0===C?void 0:C.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(C){this._mainDrawWrapperOverride=C}setEffect(C){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,d=arguments.length>2?arguments[2]:void 0,b=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const X=this._drawWrapper;X.setEffect(C,c,b),void 0!==d&&(X.materialContext=d),C||(X.defines=null,X.materialContext=void 0)}resetDrawCache(C){let c=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==C)return void this._removeDrawWrapper(C,!0,c);for(const C of this._drawWrappers)null===C||void 0===C||C.dispose(c)}this._drawWrappers=[]}static AddToMesh(C,c,d,b,X,P,V){return new p(C,c,d,b,X,P,V,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(C,c,d,b,X,P,V){let R=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],p=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=C,this.verticesStart=c,this.verticesCount=d,this.indexStart=b,this.indexCount=X,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=P,this._renderingMesh=V||P,p&&P.Nc.push(this),this._engine=this._mesh.NC().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=P.Nc.length-1,R&&(this.refreshBoundingInfo(),P.Tc(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(C){return this._boundingInfo=C,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const C=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return C||this._renderingMesh}yC(){let C=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const c=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!c)return C&&this._mesh.NC()._hasDefaultMaterial?this._mesh.NC().defaultMaterial:null;if(this._isMultiMaterial(c)){const C=c.getSubMaterial(this.materialIndex);return this._currentMaterial!==C&&(this._currentMaterial=C,this.resetDrawCache()),C}return c}_isMultiMaterial(C){return void 0!==C.getSubMaterial}refreshBoundingInfo(){let C=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.zc)return this;if(C||(C=this._renderingMesh.getVerticesData(b.g.PositionKind)),!C)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const c=this._renderingMesh.wc();let d;if(0===this.indexStart&&this.indexCount===c.length){const C=this._renderingMesh.getBoundingInfo();d={minimum:C.minimum.clone(),maximum:C.maximum.clone()}}else d=(0,V.b)(C,c,this.indexStart,this.indexCount,this._renderingMesh.zc.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(d.minimum,d.maximum):this._boundingInfo=new P.b(d.minimum,d.maximum),this}_checkCollision(C){return this.getBoundingInfo()._checkCollision(C)}updateBoundingInfo(C){let c=this.getBoundingInfo();return c||(this.refreshBoundingInfo(),c=this.getBoundingInfo()),c&&c.update(C),this}isInFrustum(C){const c=this.getBoundingInfo();return!!c&&c.isInFrustum(C,this._mesh.YZ)}isCompletelyInFrustum(C){const c=this.getBoundingInfo();return!!c&&c.isCompletelyInFrustum(C)}render(C){return this._renderingMesh.render(this,C,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(C,c){if(!this._linesIndexBuffer){const d=6*Math.floor(this.indexCount/3),b=this.verticesStart+this.verticesCount>65535?new Uint32Array(d):new Uint16Array(d);let X=0;if(0===C.length)for(let C=this.indexStart;C<this.indexStart+this.indexCount;C+=3)b[X++]=C,b[X++]=C+1,b[X++]=C+1,b[X++]=C+2,b[X++]=C+2,b[X++]=C;else for(let c=this.indexStart;c<this.indexStart+this.indexCount;c+=3)b[X++]=C[c],b[X++]=C[c+1],b[X++]=C[c+1],b[X++]=C[c+2],b[X++]=C[c+2],b[X++]=C[c];this._linesIndexBuffer=c.createIndexBuffer(b),this._linesIndexCount=b.length}return this._linesIndexBuffer}canIntersects(C){const c=this.getBoundingInfo();return!!c&&C.intersectsBox(c.boundingBox)}intersects(C,c,d,b,X){const P=this.yC();if(!P)return null;let V=3,R=!1;switch(P.fillMode){case 3:case 5:case 6:case 8:return null;case 7:V=1,R=!0}return 4===P.fillMode?d.length?this._intersectLines(C,c,d,this._mesh.intersectionThreshold,b):this._intersectUnIndexedLines(C,c,d,this._mesh.intersectionThreshold,b):!d.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(C,c,d,b,X):this._intersectTriangles(C,c,d,V,R,b,X)}_intersectLines(C,c,d,b,P){let V=null;for(let R=this.indexStart;R<this.indexStart+this.indexCount;R+=2){const p=c[d[R]],j=c[d[R+1]],g=C.intersectionSegment(p,j,b);if(!(g<0)&&((P||!V||g<V.distance)&&(V=new X.d(null,null,g),V.faceId=R/2,P)))break}return V}_intersectUnIndexedLines(C,c,d,b,P){let V=null;for(let R=this.verticesStart;R<this.verticesStart+this.verticesCount;R+=2){const d=c[R],p=c[R+1],j=C.intersectionSegment(d,p,b);if(!(j<0)&&((P||!V||j<V.distance)&&(V=new X.d(null,null,j),V.faceId=R/2,P)))break}return V}_intersectTriangles(C,c,d,b,X,P,V){let R=null,p=-1;for(let j=this.indexStart;j<this.indexStart+this.indexCount-(3-b);j+=b){p++;const b=d[j],g=d[j+1],k=d[j+2];if(X&&4294967295===k){j+=2;continue}const Z=c[b],U=c[g],A=c[k];if(!Z||!U||!A)continue;if(V&&!V(Z,U,A,C,b,g,k))continue;const u=C.intersectsTriangle(Z,U,A);if(u){if(u.distance<0)continue;if((P||!R||u.distance<R.distance)&&(R=u,R.faceId=p,P))break}}return R}_intersectUnIndexedTriangles(C,c,d,b,X){let P=null;for(let V=this.verticesStart;V<this.verticesStart+this.verticesCount;V+=3){const d=c[V],R=c[V+1],p=c[V+2];if(X&&!X(d,R,p,C,-1,-1,-1))continue;const j=C.intersectsTriangle(d,R,p);if(j){if(j.distance<0)continue;if((b||!P||j.distance<P.distance)&&(P=j,P.faceId=V/3,b))break}}return P}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(C,c){const d=new p(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,C,c,!1);if(!this.IsGlobal){const C=this.getBoundingInfo();if(!C)return d;d._boundingInfo=new P.b(C.minimum,C.maximum)}return d}dispose(){let C=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.NC().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const c=this._mesh.Nc.indexOf(this);this._mesh.Nc.splice(c,1),this.resetDrawCache(void 0,C)}getClassName(){return"SubMesh"}static CreateFromIndices(C,c,d,b,X){let P=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],V=Number.MAX_VALUE,R=-Number.MAX_VALUE;const j=(X||b).wc();for(let p=c;p<c+d;p++){const C=j[p];C<V&&(V=C),C>R&&(R=C)}return new p(C,V,R-V+1,c,d,b,X,P)}}}}]);