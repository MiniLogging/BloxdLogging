"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[24],{11558:(k,h,o)=>{o.d(h,{e:()=>x});class x{constructor(k,h,o){this.bu=k,this.bv=h,this.distance=o,this.faceId=0,this.subMeshId=0}}},11569:(k,h,o)=>{o.d(h,{b:()=>Y});var x=o(11256),I=o(11239),q=o(11248);class Y{constructor(k,h,o){this.vectors=(0,x.d)(8,I.Vh.Zero),this.center=I.Vh.Zero(),this.centerWorld=I.Vh.Zero(),this.extendSize=I.Vh.Zero(),this.extendSizeWorld=I.Vh.Zero(),this.directions=(0,x.d)(3,I.Vh.Zero),this.vectorsWorld=(0,x.d)(8,I.Vh.Zero),this.minimumWorld=I.Vh.Zero(),this.maximumWorld=I.Vh.Zero(),this.minimum=I.Vh.Zero(),this.maximum=I.Vh.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(k,h,o)}reConstruct(k,h,o){const x=k.x,q=k.y,Y=k.z,J=h.x,G=h.y,l=h.z,A=this.vectors;this.minimum.VJ(x,q,Y),this.maximum.VJ(J,G,l),A[0].VJ(x,q,Y),A[1].VJ(J,G,l),A[2].VJ(J,q,Y),A[3].VJ(x,G,Y),A[4].VJ(x,q,l),A[5].VJ(J,G,Y),A[6].VJ(x,G,l),A[7].VJ(J,q,l),h.addToRef(k,this.center).scaleInPlace(.5),h.subtractToRef(k,this.extendSize).scaleInPlace(.5),this._worldMatrix=o||I.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(k){const h=Y._TmpVector3,o=this.maximum.subtractToRef(this.minimum,h[0]),x=o.length();o.normalizeFromLength(x);const I=x*k,q=o.scaleInPlace(.5*I),J=this.center.subtractToRef(q,h[1]),G=this.center.addToRef(q,h[2]);return this.reConstruct(J,G,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(k){const h=this.minimumWorld,o=this.maximumWorld,x=this.directions,q=this.vectorsWorld,Y=this.vectors;if(k.isIdentity()){h.Y(this.minimum),o.Y(this.maximum);for(let k=0;k<8;++k)q[k].Y(Y[k]);this.extendSizeWorld.Y(this.extendSize),this.centerWorld.Y(this.center)}else{h.FJ(Number.MAX_VALUE),o.FJ(-Number.MAX_VALUE);for(let x=0;x<8;++x){const J=q[x];I.Vh.TransformCoordinatesToRef(Y[x],k,J),h.minimizeInPlace(J),o.maximizeInPlace(J)}o.subtractToRef(h,this.extendSizeWorld).scaleInPlace(.5),o.addToRef(h,this.centerWorld).scaleInPlace(.5)}I.Vh.FromArrayToRef(k.m,0,x[0]),I.Vh.FromArrayToRef(k.m,4,x[1]),I.Vh.FromArrayToRef(k.m,8,x[2]),this._worldMatrix=k}isInFrustum(k){return Y.IsInFrustum(this.vectorsWorld,k)}isCompletelyInFrustum(k){return Y.IsCompletelyInFrustum(this.vectorsWorld,k)}intersectsPoint(k){const h=this.minimumWorld,o=this.maximumWorld,x=h.x,I=h.y,Y=h.z,J=o.x,G=o.y,l=o.z,A=k.x,K=k.y,a=k.z,N=-q.d;return!(J-A<N||N>A-x)&&(!(G-K<N||N>K-I)&&!(l-a<N||N>a-Y))}intersectsSphere(k){return Y.IntersectsSphere(this.minimumWorld,this.maximumWorld,k.centerWorld,k.radiusWorld)}intersectsMinMax(k,h){const o=this.minimumWorld,x=this.maximumWorld,I=o.x,q=o.y,Y=o.z,J=x.x,G=x.y,l=x.z,A=k.x,K=k.y,a=k.z,N=h.x,X=h.y,c=h.z;return!(J<A||I>N)&&(!(G<K||q>X)&&!(l<a||Y>c))}dispose(){var k,h;null===(k=this._drawWrapperFront)||void 0===k||k.dispose(),null===(h=this._drawWrapperBack)||void 0===h||h.dispose()}static Intersects(k,h){return k.intersectsMinMax(h.minimumWorld,h.maximumWorld)}static IntersectsSphere(k,h,o,x){const q=Y._TmpVector3[0];I.Vh.ClampToRef(o,k,h,q);return I.Vh.DistanceSquared(o,q)<=x*x}static IsCompletelyInFrustum(k,h){for(let o=0;o<6;++o){const x=h[o];for(let h=0;h<8;++h)if(x.dotCoordinate(k[h])<0)return!1}return!0}static IsInFrustum(k,h){for(let o=0;o<6;++o){let x=!0;const I=h[o];for(let h=0;h<8;++h)if(I.dotCoordinate(k[h])>=0){x=!1;break}if(x)return!1}return!0}}Y._TmpVector3=(0,x.d)(3,I.Vh.Zero)},11565:(k,h,o)=>{o.d(h,{c:()=>K});var x=o(11256),I=o(11239),q=o(11569),Y=o(11576);const J={min:0,max:0},G={min:0,max:0},l=(k,h,o)=>{const x=I.Vh.Dot(h.centerWorld,k),q=Math.abs(I.Vh.Dot(h.directions[0],k))*h.extendSize.x+Math.abs(I.Vh.Dot(h.directions[1],k))*h.extendSize.y+Math.abs(I.Vh.Dot(h.directions[2],k))*h.extendSize.z;o.min=x-q,o.max=x+q},A=(k,h,o)=>(l(k,h,J),l(k,o,G),!(J.min>G.max||G.min>J.max));class K{constructor(k,h,o){this._isLocked=!1,this.boundingBox=new q.b(k,h,o),this.boundingSphere=new Y.d(k,h,o)}reConstruct(k,h,o){this.boundingBox.reConstruct(k,h,o),this.boundingSphere.reConstruct(k,h,o)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(k){this._isLocked=k}update(k){this._isLocked||(this.boundingBox._update(k),this.boundingSphere._update(k))}centerOn(k,h){const o=K._TmpVector3[0].Y(k).xK(h),x=K._TmpVector3[1].Y(k).addInPlace(h);return this.boundingBox.reConstruct(o,x,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(o,x,this.boundingBox.getWorldMatrix()),this}encapsulate(k){const h=I.Vh.Minimize(this.minimum,k),o=I.Vh.Maximize(this.maximum,k);return this.reConstruct(h,o,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(k){const h=I.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(h);const o=I.TmpVectors.Vh[0];return I.Vh.TransformCoordinatesToRef(k.boundingBox.minimumWorld,h,o),this.encapsulate(o),I.Vh.TransformCoordinatesToRef(k.boundingBox.maximumWorld,h,o),this.encapsulate(o),this}scale(k){return this.boundingBox.scale(k),this.boundingSphere.scale(k),this}isInFrustum(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===h||3===h)&&this.boundingSphere.isCenterInFrustum(k))return!0;if(!this.boundingSphere.isInFrustum(k))return!1;return!(1!==h&&3!==h)||this.boundingBox.isInFrustum(k)}get diagonalLength(){const k=this.boundingBox;return k.maximumWorld.subtractToRef(k.minimumWorld,K._TmpVector3[0]).length()}isCompletelyInFrustum(k){return this.boundingBox.isCompletelyInFrustum(k)}_checkCollision(k){return k._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(k){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(k)&&!!this.boundingBox.intersectsPoint(k))}intersects(k,h){if(!Y.d.Intersects(this.boundingSphere,k.boundingSphere))return!1;if(!q.b.Intersects(this.boundingBox,k.boundingBox))return!1;if(!h)return!0;const o=this.boundingBox,x=k.boundingBox;return!!A(o.directions[0],o,x)&&(!!A(o.directions[1],o,x)&&(!!A(o.directions[2],o,x)&&(!!A(x.directions[0],o,x)&&(!!A(x.directions[1],o,x)&&(!!A(x.directions[2],o,x)&&(!!A(I.Vh.Cross(o.directions[0],x.directions[0]),o,x)&&(!!A(I.Vh.Cross(o.directions[0],x.directions[1]),o,x)&&(!!A(I.Vh.Cross(o.directions[0],x.directions[2]),o,x)&&(!!A(I.Vh.Cross(o.directions[1],x.directions[0]),o,x)&&(!!A(I.Vh.Cross(o.directions[1],x.directions[1]),o,x)&&(!!A(I.Vh.Cross(o.directions[1],x.directions[2]),o,x)&&(!!A(I.Vh.Cross(o.directions[2],x.directions[0]),o,x)&&(!!A(I.Vh.Cross(o.directions[2],x.directions[1]),o,x)&&!!A(I.Vh.Cross(o.directions[2],x.directions[2]),o,x))))))))))))))}}K._TmpVector3=(0,x.d)(2,I.Vh.Zero)},11576:(k,h,o)=>{o.d(h,{d:()=>q});var x=o(11256),I=o(11239);class q{constructor(k,h,o){this.center=I.Vh.Zero(),this.centerWorld=I.Vh.Zero(),this.minimum=I.Vh.Zero(),this.maximum=I.Vh.Zero(),this.reConstruct(k,h,o)}reConstruct(k,h,o){this.minimum.Y(k),this.maximum.Y(h);const x=I.Vh.Distance(k,h);h.addToRef(k,this.center).scaleInPlace(.5),this.radius=.5*x,this._update(o||I.Matrix.IdentityReadOnly)}scale(k){const h=this.radius*k,o=q._TmpVector3,x=o[0].FJ(h),I=this.center.subtractToRef(x,o[1]),Y=this.center.addToRef(x,o[2]);return this.reConstruct(I,Y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(k){if(k.isIdentity())this.centerWorld.Y(this.center),this.radiusWorld=this.radius;else{I.Vh.TransformCoordinatesToRef(this.center,k,this.centerWorld);const h=q._TmpVector3[0];I.Vh.TransformNormalFromFloatsToRef(1,1,1,k,h),this.radiusWorld=Math.max(Math.abs(h.x),Math.abs(h.y),Math.abs(h.z))*this.radius}}isInFrustum(k){const h=this.centerWorld,o=this.radiusWorld;for(let x=0;x<6;x++)if(k[x].dotCoordinate(h)<=-o)return!1;return!0}isCenterInFrustum(k){const h=this.centerWorld;for(let o=0;o<6;o++)if(k[o].dotCoordinate(h)<0)return!1;return!0}intersectsPoint(k){const h=I.Vh.DistanceSquared(this.centerWorld,k);return!(this.radiusWorld*this.radiusWorld<h)}static Intersects(k,h){const o=I.Vh.DistanceSquared(k.centerWorld,h.centerWorld),x=k.radiusWorld+h.radiusWorld;return!(x*x<o)}static CreateFromCenterAndRadius(k,h,o){this._TmpVector3[0].Y(k),this._TmpVector3[1].VJ(0,0,h),this._TmpVector3[2].Y(k),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].xK(this._TmpVector3[1]);const x=new q(this._TmpVector3[0],this._TmpVector3[2]);return x._worldMatrix=o||I.Matrix.Identity(),x}}q._TmpVector3=(0,x.d)(3,I.Vh.Zero)},11602:(k,h,o)=>{function x(k){-1===k.indexOf("vClipPlane")&&k.push("vClipPlane"),-1===k.indexOf("vClipPlane2")&&k.push("vClipPlane2"),-1===k.indexOf("vClipPlane3")&&k.push("vClipPlane3"),-1===k.indexOf("vClipPlane4")&&k.push("vClipPlane4"),-1===k.indexOf("vClipPlane5")&&k.push("vClipPlane5"),-1===k.indexOf("vClipPlane6")&&k.push("vClipPlane6")}function I(k,h,o){const x=!!(k.clipPlane??h.clipPlane),I=!!(k.clipPlane2??h.clipPlane2),q=!!(k.clipPlane3??h.clipPlane3),Y=!!(k.clipPlane4??h.clipPlane4),J=!!(k.clipPlane5??h.clipPlane5),G=!!(k.clipPlane6??h.clipPlane6);x&&o.push("#define CLIPPLANE"),I&&o.push("#define CLIPPLANE2"),q&&o.push("#define CLIPPLANE3"),Y&&o.push("#define CLIPPLANE4"),J&&o.push("#define CLIPPLANE5"),G&&o.push("#define CLIPPLANE6")}function q(k,h,o){let x=!1;const I=!!(k.clipPlane??h.clipPlane),q=!!(k.clipPlane2??h.clipPlane2),Y=!!(k.clipPlane3??h.clipPlane3),J=!!(k.clipPlane4??h.clipPlane4),G=!!(k.clipPlane5??h.clipPlane5),l=!!(k.clipPlane6??h.clipPlane6);return o.CLIPPLANE!==I&&(o.CLIPPLANE=I,x=!0),o.CLIPPLANE2!==q&&(o.CLIPPLANE2=q,x=!0),o.CLIPPLANE3!==Y&&(o.CLIPPLANE3=Y,x=!0),o.CLIPPLANE4!==J&&(o.CLIPPLANE4=J,x=!0),o.CLIPPLANE5!==G&&(o.CLIPPLANE5=G,x=!0),o.CLIPPLANE6!==l&&(o.CLIPPLANE6=l,x=!0),x}function Y(k,h,o){let x=h.clipPlane??o.clipPlane;J(k,"vClipPlane",x),x=h.clipPlane2??o.clipPlane2,J(k,"vClipPlane2",x),x=h.clipPlane3??o.clipPlane3,J(k,"vClipPlane3",x),x=h.clipPlane4??o.clipPlane4,J(k,"vClipPlane4",x),x=h.clipPlane5??o.clipPlane5,J(k,"vClipPlane5",x),x=h.clipPlane6??o.clipPlane6,J(k,"vClipPlane6",x)}function J(k,h,o){o&&k.setFloat4(h,o.normal.x,o.normal.y,o.normal.z,o.d)}o.d(h,{c:()=>x,g:()=>Y,k:()=>q,n:()=>I})},11537:(k,h,o)=>{o.d(h,{b:()=>x});class x{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(k,h){this._defines[k]||(k<this._currentRank&&(this._currentRank=k),k>this._maxRank&&(this._maxRank=k),this._defines[k]=new Array),this._defines[k].push(h)}addCPUSkinningFallback(k,h){this._mesh=h,k<this._currentRank&&(this._currentRank=k),k>this._maxRank&&(this._maxRank=k)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(k,h){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,k=k.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),h._bonesComputationForcedToCPU=!0;const o=this._mesh.ik();for(let k=0;k<o.meshes.length;k++){const x=o.meshes[k];if(x.material){if(x.computeBonesUsingShaders&&0!==x.numBoneInfluencers)if(x.material.getEffect()===h)x.computeBonesUsingShaders=!1;else if(x.Oh)for(const k of x.Oh){if(k.effect===h){x.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&x.computeBonesUsingShaders&&x.numBoneInfluencers>0&&(x.computeBonesUsingShaders=!1)}}else{const h=this._defines[this._currentRank];if(h)for(let o=0;o<h.length;o++)k=k.replace("#define "+h[o],"");this._currentRank++}return k}}},11551:(k,h,o)=>{o.d(h,{e:()=>W});var x=o(11227),I=o(11233),q=o(11078),Y=o(11082),J=o(11120),G=o(11554),l=o(11499),A=o(11098),K=o(11288),a=o(11356),N=o(11271);class X{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(k){this._func=k}get funcRef(){return this._funcRef}set funcRef(k){this._funcRef=k}get funcMask(){return this._funcMask}set funcMask(k){this._funcMask=k}get opStencilFail(){return this._opStencilFail}set opStencilFail(k){this._opStencilFail=k}get opDepthFail(){return this._opDepthFail}set opDepthFail(k){this._opDepthFail=k}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(k){this._opStencilDepthPass=k}get mask(){return this._mask}set mask(k){this._mask=k}get enabled(){return this._enabled}set enabled(k){this._enabled=k}getClassName(){return"MaterialStencilState"}copyTo(k){N.c.Clone((()=>k),this)}serialize(){return N.c.Serialize(this)}parse(k,h,o){N.c.Parse((()=>this),k,h,o)}}(0,x.d)([(0,I.E)()],X.prototype,"func",null),(0,x.d)([(0,I.E)()],X.prototype,"funcRef",null),(0,x.d)([(0,I.E)()],X.prototype,"funcMask",null),(0,x.d)([(0,I.E)()],X.prototype,"opStencilFail",null),(0,x.d)([(0,I.E)()],X.prototype,"opDepthFail",null),(0,x.d)([(0,I.E)()],X.prototype,"opStencilDepthPass",null),(0,x.d)([(0,I.E)()],X.prototype,"mask",null),(0,x.d)([(0,I.E)()],X.prototype,"enabled",null);var c=o(11593);class W{get _supportGlowLayer(){return!1}set _glowModeEnabled(k){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(k){if(this._alpha===k)return;const h=this._alpha;this._alpha=k,1!==h&&1!==k||this.Pl(W.MiscDirtyFlag+W.PrePassDirtyFlag)}get alpha(){return this._alpha}set bJ(k){this._backFaceCulling!==k&&(this._backFaceCulling=k,this.Pl(W.TextureDirtyFlag))}get bJ(){return this._backFaceCulling}set cullBackFaces(k){this._cullBackFaces!==k&&(this._cullBackFaces=k,this.Pl(W.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(k){this._blockDirtyMechanism!==k&&(this._blockDirtyMechanism=k,k||this.LK())}atomicMaterialsUpdate(k){this.blockDirtyMechanism=!0;try{k(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(k){this._onDisposeObserver&&this.sh.remove(this._onDisposeObserver),this._onDisposeObserver=this.sh.add(k)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new Y.d),this._onBindObservable}set onBind(k){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(k)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new Y.d),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new Y.d),this._onEffectCreatedObservable}set alphaMode(k){this._alphaMode!==k&&(this._alphaMode=k,this.Pl(W.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(k){this._needDepthPrePass!==k&&(this._needDepthPrePass=k,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(k){this._fogEnabled!==k&&(this._fogEnabled=k,this.Pl(W.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case W.WireFrameFillMode:case W.LineListDrawMode:case W.LineLoopDrawMode:case W.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(k){this.fillMode=k?W.WireFrameFillMode:W.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case W.PointFillMode:case W.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(k){this.fillMode=k?W.PointFillMode:W.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(k){this._fillMode!==k&&(this._fillMode=k,this.Pl(W.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(k){const h=this.ik().getEngine().getCaps().fragmentDepthSupported;k&&!h&&A.c.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=k&&h,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(k){this._drawWrapper=k}constructor(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.sh=new Y.d,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new X,this._useUBO=!1,this._fillMode=W.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=k;const I=h||J.b.LastCreatedScene;I&&(this._scene=I,this._dirtyCallbacks={},this._forceGLSL=x,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=k||q.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new a.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new l.d(this._scene.getEngine(),void 0,void 0,k),this._useUBO=this.ik().getEngine().supportsUniformBuffers,this._createUniformBuffer(),o||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),W.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var k;const h=this.ik().getEngine();null===(k=this._uniformBuffer)||void 0===k||k.dispose(),h.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new l.d(h,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new l.d(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(k){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.LK(),this.checkReadyOnlyOnce=!0}unfreeze(){this.LK(),this.checkReadyOnlyOnce=!1}isReady(k,h){return!0}isReadyForSubMesh(k,h,o){const x=h.materialDefines;return!!x&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=x,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}ik(){return this._scene}_getEffectiveOrientation(k){return null!==this.sideOrientation?this.sideOrientation:k.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(k){this._transparencyMode!==k&&(this._transparencyMode=k,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===W.MATERIAL_ALPHABLEND||this._transparencyMode===W.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===W.MATERIAL_ALPHATEST||this._transparencyMode===W.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===W.MATERIAL_OPAQUE||this._transparencyMode===W.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(k){return this._hasTransparencyMode?this._transparencyModeIsBlend:k.visibility<1||!this._disableAlphaBlending&&(k.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(k){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(k)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}LK(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const h=this.ik().meshes;for(const o of h)if(o.Oh)for(const h of o.Oh)if(h.Hk()===this)for(const o of h._drawWrappers)o&&this._materialContext===o.materialContext&&(o._wasPreviouslyReady=!1,o._wasPreviouslyUsingInstances=null,o._forceRebindOnNextCall=k);k&&this.Pl(W.AllDirtyFlag)}_preBind(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const o=this._scene.getEngine(),x=(null==h?this.sideOrientation:h)===W.ClockWiseSideOrientation;return o.enableEffect(k||this._getDrawWrapper()),o.setState(this.bJ,this.zOffset,!1,x,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),x}bind(k,h){}buildUniformLayout(){const k=this._uniformBuffer;this._eventInfo.ubo=k,this._callbackPluginEventGeneric(8,this._eventInfo),k.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(k,h,o){const x=o._drawWrapper;this._eventInfo.subMesh=o,this._callbackPluginEventBindForSubMesh(this._eventInfo),x._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(k){}bindView(k){this._useUBO?this._needToBindSceneUbo=!0:k.setMatrix("view",this.ik().getViewMatrix())}bindViewProjection(k){this._useUBO?this._needToBindSceneUbo=!0:(k.setMatrix("viewProjection",this.ik().getTransformMatrix()),k.setMatrix("projection",this.ik().getProjectionMatrix()))}bindEyePosition(k,h){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(k,h)}_afterBind(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&h&&(this._needToBindSceneUbo=!1,(0,c.l)(h,this.ik().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=k?k.visibility:1,this._onBindObservable&&k&&this._onBindObservable.notifyObservers(k),this.disableDepthWrite){const k=this._scene.getEngine();this._cachedDepthWriteState=k.getDepthWrite(),k.setDepthWrite(!1)}if(this.disableColorWrite){const k=this._scene.getEngine();this._cachedColorWriteState=k.getColorWrite(),k.setColorWrite(!1)}if(0!==this.depthFunction){const k=this._scene.getEngine();this._cachedDepthFunctionState=k.getDepthFunction()||0,k.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(k){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=k,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(k){return null}_clonePlugins(k,h){const o={};if(this._serializePlugins(o),W._ParsePlugins(o,k,this._scene,h),this.pluginManager)for(const x of this.pluginManager._plugins){const h=k.pluginManager.getPlugin(x.name);h&&x.copyTo(h)}}getBindedMeshes(){if(this.meshMap){const k=[];for(const h in this.meshMap){const o=this.meshMap[h];o&&k.push(o)}return k}return this._scene.meshes.filter((k=>k.material===this))}forceCompilation(k,h,o,x){const I={clipPlane:!1,useInstances:!1,...o},q=this.ik(),Y=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const J=()=>{if(!this._scene||!this._scene.getEngine())return;const o=q.clipPlane;if(I.clipPlane&&(q.clipPlane=new K.b(0,0,0,1)),this._storeEffectOnSubMeshes){let o=!0,q=null;if(k.Oh){const h=new G.c(0,0,0,0,0,k,void 0,!1,!1);h.materialDefines&&(h.materialDefines._renderId=-1),this.isReadyForSubMesh(k,h,I.useInstances)||(h.effect&&h.effect.getCompilationError()&&h.effect.allFallbacksProcessed()?q=h.effect.getCompilationError():(o=!1,setTimeout(J,16)))}o&&(this.allowShaderHotSwapping=Y,q&&x&&x(q),h&&h(this))}else this.isReady()?(this.allowShaderHotSwapping=Y,h&&h(this)):setTimeout(J,16);I.clipPlane&&(q.clipPlane=o)};J()}async forceCompilationAsync(k,h){return await new Promise(((o,x)=>{this.forceCompilation(k,(()=>{o()}),h,(k=>{x(k)}))}))}Pl(k){this.ik().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(W._DirtyCallbackArray.length=0,k&W.ImageProcessingDirtyFlag&&W._DirtyCallbackArray.push(W._ImageProcessingDirtyCallBack),k&W.TextureDirtyFlag&&W._DirtyCallbackArray.push(W._TextureDirtyCallBack),k&W.LightDirtyFlag&&W._DirtyCallbackArray.push(W._LightsDirtyCallBack),k&W.FresnelDirtyFlag&&W._DirtyCallbackArray.push(W._FresnelDirtyCallBack),k&W.AttributesDirtyFlag&&W._DirtyCallbackArray.push(W._AttributeDirtyCallBack),k&W.MiscDirtyFlag&&W._DirtyCallbackArray.push(W._MiscDirtyCallBack),k&W.PrePassDirtyFlag&&W._DirtyCallbackArray.push(W._PrePassDirtyCallBack),W._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(W._RunDirtyCallBacks),this.ik().resetCachedMaterial())}resetDrawCache(){const k=this.ik().meshes;for(const h of k)if(h.Oh)for(const k of h.Oh)k.Hk()===this&&k.resetDrawCache()}_markAllSubMeshesAsDirty(k){const h=this.ik();if(h.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const o=h.meshes;for(const x of o)if(x.Oh)for(const o of x.Oh){if((o.Hk()||(h._hasDefaultMaterial?h.defaultMaterial:null))===this)for(const h of o._drawWrappers)h&&h.defines&&h.defines.markAllAsDirty&&this._materialContext===h.materialContext&&k(h.defines)}}_markScenePrePassDirty(){if(this.ik().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const k=this.ik().enablePrePassRenderer();k&&k.Pl()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(W._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(W._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(W._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(W._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(W._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(W._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(W._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(W._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(W._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(W._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const k=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.sh.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(k)}))}}setPrePassRenderer(k){return!1}dispose(k,h,o){const x=this.ik();if(x.stopAnimation(this),x.freeProcessedMaterials(),x.removeMaterial(this),this._eventInfo.forceDisposeTextures=h,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const k=this._parentContainer.materials.indexOf(this);k>-1&&this._parentContainer.materials.splice(k,1),this._parentContainer=null}if(!0!==o)if(this.meshMap)for(const I in this.meshMap){const k=this.meshMap[I];this._disposeMeshResources(k)}else{const k=x.meshes;for(const h of k)this._disposeMeshResources(h)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.sh.notifyObservers(this),this.sh.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(k){if(!k)return;const h=k.jJ,o=k._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(k.Oh&&o)for(const I of k.Oh){const k=I._drawWrappers;for(let q=0;q<k.length;q++){var x;const Y=null===(x=k[q])||void 0===x?void 0:x.effect;if(!Y)continue;o[q]===this&&(null===h||void 0===h||h._releaseVertexArrayObject(Y),I._removeDrawWrapper(q,!0,!0))}}}else null===h||void 0===h||h._releaseVertexArrayObject(this._drawWrapper.effect);k.material!==this||k.sourceMesh||(k.material=null)}serialize(){const k=N.c.Serialize(this);return k.stencil=this.stencil.serialize(),k.uniqueId=this.uniqueId,this._serializePlugins(k),k}_serializePlugins(k){if(k.plugins={},this.pluginManager)for(const h of this.pluginManager._plugins)h.doNotSerialize||(k.plugins[h.getClassName()]=h.serialize())}static Parse(k,h,o){if(k.customType){if("BABYLON.PBRMaterial"===k.customType&&k.overloadedAlbedo&&(k.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return A.c.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else k.customType="BABYLON.StandardMaterial";const x=q.Tools.Instantiate(k.customType).Parse(k,h,o);return x._loadedUniqueId=k.uniqueId,x}static _ParsePlugins(k,h,o,x){if(k.plugins)for(const J in k.plugins){var I,Y;const G=k.plugins[J];let l=null===(I=h.pluginManager)||void 0===I?void 0:I.getPlugin(G.name);if(!l){const k=q.Tools.Instantiate("BABYLON."+J);k&&(l=new k(h))}null===(Y=l)||void 0===Y||Y.parse(G,o,x)}}}W.TriangleFillMode=0,W.WireFrameFillMode=1,W.PointFillMode=2,W.PointListDrawMode=3,W.LineListDrawMode=4,W.LineLoopDrawMode=5,W.LineStripDrawMode=6,W.TriangleStripDrawMode=7,W.TriangleFanDrawMode=8,W.ClockWiseSideOrientation=0,W.CounterClockWiseSideOrientation=1,W.ImageProcessingDirtyFlag=64,W.TextureDirtyFlag=1,W.LightDirtyFlag=2,W.FresnelDirtyFlag=4,W.AttributesDirtyFlag=8,W.MiscDirtyFlag=16,W.PrePassDirtyFlag=32,W.AllDirtyFlag=127,W.MATERIAL_OPAQUE=0,W.MATERIAL_ALPHATEST=1,W.MATERIAL_ALPHABLEND=2,W.MATERIAL_ALPHATESTANDBLEND=3,W.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,W.MATERIAL_NORMALBLENDMETHOD_RNM=1,W.OnEventObservable=new Y.d,W._AllDirtyCallBack=k=>k.markAllAsDirty(),W._ImageProcessingDirtyCallBack=k=>k.markAsImageProcessingDirty(),W._TextureDirtyCallBack=k=>k.markAsTexturesDirty(),W._FresnelDirtyCallBack=k=>k.markAsFresnelDirty(),W._MiscDirtyCallBack=k=>k.markAsMiscDirty(),W._PrePassDirtyCallBack=k=>k.markAsPrePassDirty(),W._LightsDirtyCallBack=k=>k.markAsLightDirty(),W._AttributeDirtyCallBack=k=>k.markAsAttributesDirty(),W._FresnelAndMiscDirtyCallBack=k=>{W._FresnelDirtyCallBack(k),W._MiscDirtyCallBack(k)},W._TextureAndMiscDirtyCallBack=k=>{W._TextureDirtyCallBack(k),W._MiscDirtyCallBack(k)},W._DirtyCallbackArray=[],W._RunDirtyCallBacks=k=>{for(const h of W._DirtyCallbackArray)h(k)},(0,x.d)([(0,I.E)()],W.prototype,"id",void 0),(0,x.d)([(0,I.E)()],W.prototype,"uniqueId",void 0),(0,x.d)([(0,I.E)()],W.prototype,"name",void 0),(0,x.d)([(0,I.E)()],W.prototype,"metadata",void 0),(0,x.d)([(0,I.E)()],W.prototype,"checkReadyOnEveryCall",void 0),(0,x.d)([(0,I.E)()],W.prototype,"checkReadyOnlyOnce",void 0),(0,x.d)([(0,I.E)()],W.prototype,"state",void 0),(0,x.d)([(0,I.E)("alpha")],W.prototype,"_alpha",void 0),(0,x.d)([(0,I.E)("bJ")],W.prototype,"_backFaceCulling",void 0),(0,x.d)([(0,I.E)("cullBackFaces")],W.prototype,"_cullBackFaces",void 0),(0,x.d)([(0,I.E)()],W.prototype,"sideOrientation",void 0),(0,x.d)([(0,I.E)("alphaMode")],W.prototype,"_alphaMode",void 0),(0,x.d)([(0,I.E)()],W.prototype,"_needDepthPrePass",void 0),(0,x.d)([(0,I.E)()],W.prototype,"disableDepthWrite",void 0),(0,x.d)([(0,I.E)()],W.prototype,"disableColorWrite",void 0),(0,x.d)([(0,I.E)()],W.prototype,"forceDepthWrite",void 0),(0,x.d)([(0,I.E)()],W.prototype,"depthFunction",void 0),(0,x.d)([(0,I.E)()],W.prototype,"separateCullingPass",void 0),(0,x.d)([(0,I.E)("fogEnabled")],W.prototype,"_fogEnabled",void 0),(0,x.d)([(0,I.E)()],W.prototype,"pointSize",void 0),(0,x.d)([(0,I.E)()],W.prototype,"zOffset",void 0),(0,x.d)([(0,I.E)()],W.prototype,"zOffsetUnits",void 0),(0,x.d)([(0,I.E)()],W.prototype,"pointsCloud",null),(0,x.d)([(0,I.E)()],W.prototype,"fillMode",null),(0,x.d)([(0,I.E)()],W.prototype,"useLogarithmicDepth",null),(0,x.d)([(0,I.E)()],W.prototype,"transparencyMode",null)},11593:(k,h,o)=>{o.d(h,{D:()=>N,F:()=>a,H:()=>D,K:()=>w,L:()=>s,O:()=>f,P:()=>R,Q:()=>U,U:()=>Q,W:()=>B,Z:()=>n,ab:()=>X,e:()=>j,f:()=>K,i:()=>b,j:()=>A,k:()=>c,l:()=>W,m:()=>M,p:()=>F,t:()=>T,v:()=>V,z:()=>i});var x=o(11098),I=o(11281),q=o(11120),Y=o(11534),J=o(11602);const G=I.Zh.Black(),l={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function A(k,h,o){if(!k||k.LOGARITHMICDEPTH||k.indexOf&&k.indexOf("LOGARITHMICDEPTH")>=0){const k=o.activeCamera;1===k.mode&&x.c.Error("Logarithmic depth is not compatible with orthographic cameras!",20),h.setFloat("logarithmicDepthConstant",2/(Math.log(k.maxZ+1)/Math.LN2))}}function K(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]&&arguments[3];o&&k.fogEnabled&&(!h||h.applyFog)&&0!==k.fogMode&&(o.setFloat4("vFogInfos",k.fogMode,k.fogStart,k.fogEnd,k.fogDensity),x?(k.fogColor.toLinearSpaceToRef(G,k.getEngine().useExactSrgbConversions),o.setColor3("vFogColor",G)):o.setColor3("vFogColor",k.fogColor))}function a(k,h,o,x,I,q,Y,J,G,A){const K=k.numMaxInfluencers||k.numInfluencers;return K<=0?0:(h.push("#define MORPHTARGETS"),k.hasPositions&&h.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),k.hasNormals&&h.push("#define MORPHTARGETTEXTURE_HASNORMALS"),k.hasTangents&&h.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),k.hasUVs&&h.push("#define MORPHTARGETTEXTURE_HASUVS"),k.hasUV2s&&h.push("#define MORPHTARGETTEXTURE_HASUV2S"),k.hasColors&&h.push("#define MORPHTARGETTEXTURE_HASCOLORS"),k.supportsPositions&&I&&h.push("#define MORPHTARGETS_POSITION"),k.supportsNormals&&q&&h.push("#define MORPHTARGETS_NORMAL"),k.supportsTangents&&Y&&h.push("#define MORPHTARGETS_TANGENT"),k.supportsUVs&&J&&h.push("#define MORPHTARGETS_UV"),k.supportsUV2s&&G&&h.push("#define MORPHTARGETS_UV2"),k.supportsColors&&A&&h.push("#define MORPHTARGETS_COLOR"),h.push("#define NUM_MORPH_INFLUENCERS "+K),k.isUsingTextureForTargets&&h.push("#define MORPHTARGETS_TEXTURE"),l.NUM_MORPH_INFLUENCERS=K,l.NORMAL=q,l.TANGENT=Y,l.UV=J,l.UV2=G,l.COLOR=A,N(o,x,l,I),K)}function N(k,h,o){let I=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Y=o.NUM_MORPH_INFLUENCERS;if(Y>0&&q.b.LastCreatedEngine){const J=q.b.LastCreatedEngine.getCaps().maxVertexAttribs,G=h.morphTargetManager;if(null!==G&&void 0!==G&&G.isUsingTextureForTargets)return;const l=G&&G.supportsPositions&&I,A=G&&G.supportsNormals&&o.NORMAL,K=G&&G.supportsTangents&&o.TANGENT,a=G&&G.supportsUVs&&o.UV1,N=G&&G.supportsUV2s&&o.UV2,X=G&&G.supportsColors&&o.VERTEXCOLOR;for(let o=0;o<Y;o++)l&&k.push("position"+o),A&&k.push("normal"+o),K&&k.push("tangent"+o),a&&k.push("uv_"+o),N&&k.push("uv2_"+o),X&&k.push("color"+o),k.length>J&&x.c.Error("Cannot add more vertex attributes for mesh "+h.name)}}function X(k){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];k.push("world0"),k.push("world1"),k.push("world2"),k.push("world3"),h&&(k.push("previousWorld0"),k.push("previousWorld1"),k.push("previousWorld2"),k.push("previousWorld3"))}function c(k,h){const o=k.morphTargetManager;k&&o&&h.setFloatArray("morphTargetInfluences",o.influences)}function W(k,h){h.bindToEffect(k,"Scene")}function f(k,h,o){h._needUVs=!0,h[o]=!0,k.optimizeUVAllocation&&k.getTextureMatrix().isIdentityAs3x2()?(h[o+"DIRECTUV"]=k.coordinatesIndex+1,h["MAINUV"+(k.coordinatesIndex+1)]=!0):h[o+"DIRECTUV"]=0}function M(k,h,o){const x=k.getTextureMatrix();h.qq(o+"Matrix",x)}function T(k,h,o){o.BAKED_VERTEX_ANIMATION_TEXTURE&&o.INSTANCES&&k.push("bakedVertexAnimationSettingsInstanced")}function j(k,h,o){var x;if(h&&k&&(k.computeBonesUsingShaders&&h._bonesComputationForcedToCPU&&(k.computeBonesUsingShaders=!1),k.useBones&&k.computeBonesUsingShaders&&k.skeleton)){const I=k.skeleton;if(I.isUsingTextureForMatrices&&h.getUniformIndex("boneTextureWidth")>-1){const o=I.getTransformMatrixTexture(k);h.setTexture("boneSampler",o),h.setFloat("boneTextureWidth",4*(I.bones.length+1))}else{const q=I.getTransformMatrices(k);q&&(h.setMatrices("mBones",q),o&&k.ik().prePassRenderer&&k.ik().prePassRenderer.getIndex(2)&&(o.previousBones[k.uniqueId]||(o.previousBones[k.uniqueId]=q.slice()),h.setMatrices("mPreviousBones",o.previousBones[k.uniqueId]),x=q,o.previousBones[k.uniqueId].set(x)))}}}function d(k,h,o,x,I){let q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];k._bindLight(h,o,x,I,q)}function b(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const q=Math.min(h.lightSources.length,I);for(let Y=0;Y<q;Y++){d(h.lightSources[Y],Y,k,o,"boolean"===typeof x?x:x.SPECULARTERM,h.receiveShadows)}}function V(k,h,o,x){o.NUM_BONE_INFLUENCERS>0&&(x.addCPUSkinningFallback(0,h),k.push("matricesIndices"),k.push("matricesWeights"),o.NUM_BONE_INFLUENCERS>4&&(k.push("matricesIndicesExtra"),k.push("matricesWeightsExtra")))}function i(k,h){(h.INSTANCES||h.THIN_INSTANCES)&&X(k,!!h.PREPASS_VELOCITY),h.INSTANCESCOLOR&&k.push("instanceColor")}function F(k,h){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,I=0;for(let q=0;q<o&&k["LIGHT"+q];q++)q>0&&(I=x+q,h.addFallback(I,"LIGHT"+q)),k.SHADOWS||(k["SHADOW"+q]&&h.addFallback(x,"SHADOW"+q),k["SHADOWPCF"+q]&&h.addFallback(x,"SHADOWPCF"+q),k["SHADOWPCSS"+q]&&h.addFallback(x,"SHADOWPCSS"+q),k["SHADOWPOISSON"+q]&&h.addFallback(x,"SHADOWPOISSON"+q),k["SHADOWESM"+q]&&h.addFallback(x,"SHADOWESM"+q),k["SHADOWCLOSEESM"+q]&&h.addFallback(x,"SHADOWCLOSEESM"+q));return I++}function R(k,h,o,x,I,q,Y){let J=arguments.length>7&&void 0!==arguments[7]&&arguments[7];Y._areMiscDirty&&(Y.LOGARITHMICDEPTH=o,Y.POINTSIZE=x,Y.FOG=I&&function(k,h){return h.fogEnabled&&k.applyFog&&0!==h.fogMode}(k,h),Y.NONUNIFORMSCALING=k.nonUniformScaling,Y.ALPHATEST=q,Y.DECAL_AFTER_DETAIL=J)}function s(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!o._areLightsDirty)return o._needNormals;let Y=0;const J={needNormals:o._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(k.lightsEnabled&&!q)for(const l of h.lightSources)if(Z(k,h,l,Y,o,x,J),Y++,Y===I)break;o.SPECULARTERM=J.specularEnabled,o.SHADOWS=J.shadowEnabled;for(let l=Y;l<I;l++)void 0!==o["LIGHT"+l]&&(o["LIGHT"+l]=!1,o["HEMILIGHT"+l]=!1,o["POINTLIGHT"+l]=!1,o["DIRLIGHT"+l]=!1,o["SPOTLIGHT"+l]=!1,o["AREALIGHT"+l]=!1,o["SHADOW"+l]=!1,o["SHADOWCSM"+l]=!1,o["SHADOWCSMDEBUG"+l]=!1,o["SHADOWCSMNUM_CASCADES"+l]=!1,o["SHADOWCSMUSESHADOWMAXZ"+l]=!1,o["SHADOWCSMNOBLEND"+l]=!1,o["SHADOWCSM_RIGHTHANDED"+l]=!1,o["SHADOWPCF"+l]=!1,o["SHADOWPCSS"+l]=!1,o["SHADOWPOISSON"+l]=!1,o["SHADOWESM"+l]=!1,o["SHADOWCLOSEESM"+l]=!1,o["SHADOWCUBE"+l]=!1,o["SHADOWLOWQUALITY"+l]=!1,o["SHADOWMEDIUMQUALITY"+l]=!1);const G=k.getEngine().getCaps();return void 0===o.SHADOWFLOAT&&(J.needRebuild=!0),o.SHADOWFLOAT=J.shadowEnabled&&(G.textureFloatRender&&G.textureFloatLinearFiltering||G.textureHalfFloatRender&&G.textureHalfFloatLinearFiltering),o.LIGHTMAPEXCLUDED=J.lightmapMode,J.needRebuild&&o.rebuild(),J.needNormals}function Z(k,h,o,x,I,q,J){switch(J.needNormals=!0,void 0===I["LIGHT"+x]&&(J.needRebuild=!0),I["LIGHT"+x]=!0,I["SPOTLIGHT"+x]=!1,I["HEMILIGHT"+x]=!1,I["POINTLIGHT"+x]=!1,I["DIRLIGHT"+x]=!1,I["AREALIGHT"+x]=!1,o.prepareLightSpecificDefines(I,x),I["LIGHT_FALLOFF_PHYSICAL"+x]=!1,I["LIGHT_FALLOFF_GLTF"+x]=!1,I["LIGHT_FALLOFF_STANDARD"+x]=!1,o.falloffType){case Y.e.FALLOFF_GLTF:I["LIGHT_FALLOFF_GLTF"+x]=!0;break;case Y.e.FALLOFF_PHYSICAL:I["LIGHT_FALLOFF_PHYSICAL"+x]=!0;break;case Y.e.FALLOFF_STANDARD:I["LIGHT_FALLOFF_STANDARD"+x]=!0}if(q&&!o.cA.equalsFloats(0,0,0)&&(J.specularEnabled=!0),I["SHADOW"+x]=!1,I["SHADOWCSM"+x]=!1,I["SHADOWCSMDEBUG"+x]=!1,I["SHADOWCSMNUM_CASCADES"+x]=!1,I["SHADOWCSMUSESHADOWMAXZ"+x]=!1,I["SHADOWCSMNOBLEND"+x]=!1,I["SHADOWCSM_RIGHTHANDED"+x]=!1,I["SHADOWPCF"+x]=!1,I["SHADOWPCSS"+x]=!1,I["SHADOWPOISSON"+x]=!1,I["SHADOWESM"+x]=!1,I["SHADOWCLOSEESM"+x]=!1,I["SHADOWCUBE"+x]=!1,I["SHADOWLOWQUALITY"+x]=!1,I["SHADOWMEDIUMQUALITY"+x]=!1,h&&h.receiveShadows&&k.shadowsEnabled&&o.shadowEnabled){const h=o.getShadowGenerator(k.activeCamera)??o.getShadowGenerator();if(h){const k=h.getShadowMap();k&&k.renderList&&k.renderList.length>0&&(J.shadowEnabled=!0,h.prepareDefines(I,x))}}o.lightmapMode!=Y.e.LIGHTMAP_DEFAULT?(J.lightmapMode=!0,I["LIGHTMAPEXCLUDED"+x]=!0,I["LIGHTMAPNOSPECULAR"+x]=o.lightmapMode==Y.e.LIGHTMAP_SHADOWSONLY):(I["LIGHTMAPEXCLUDED"+x]=!1,I["LIGHTMAPNOSPECULAR"+x]=!1)}function w(k,h,o,x,I){let q=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=function(k,h){let o=!1;if(k.activeCamera){const x=h.CAMERA_ORTHOGRAPHIC?1:0,I=h.CAMERA_PERSPECTIVE?1:0,q=1===k.activeCamera.mode?1:0,Y=0===k.activeCamera.mode?1:0;(x^q||I^Y)&&(h.CAMERA_ORTHOGRAPHIC=1===q,h.CAMERA_PERSPECTIVE=1===Y,o=!0)}return o}(k,x);!1!==q&&(G=(0,J.k)(o,k,x)),x.DEPTHPREPASS!==!h.getColorWrite()&&(x.DEPTHPREPASS=!x.DEPTHPREPASS,G=!0),x.INSTANCES!==I&&(x.INSTANCES=I,G=!0),x.THIN_INSTANCES!==Y&&(x.THIN_INSTANCES=Y,G=!0),G&&x.markAsUnprocessed()}function D(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]&&arguments[4],q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!h._areAttributesDirty&&h._needNormals===h._normals&&h._needUVs===h._uvs)return!1;h._normals=h._needNormals,h._uvs=h._needUVs,h.NORMAL=h._needNormals&&k.isVerticesDataPresent("normal"),h._needNormals&&k.isVerticesDataPresent("tangent")&&(h.TANGENT=!0);for(let J=1;J<=6;++J)h["UV"+J]=!!h._needUVs&&k.isVerticesDataPresent(`uv${1===J?"":J}`);if(o){const o=k.useVertexColors&&k.isVerticesDataPresent("color");h.VERTEXCOLOR=o,h.VERTEXALPHA=k.hasVertexAlpha&&o&&q}return k.isVerticesDataPresent("instanceColor")&&(k.hasInstances||k.hasThinInstances)&&(h.INSTANCESCOLOR=!0),x&&function(k,h){if(k.useBones&&k.computeBonesUsingShaders&&k.skeleton){h.NUM_BONE_INFLUENCERS=k.numBoneInfluencers;const o=void 0!==h.BONETEXTURE;if(k.skeleton.isUsingTextureForMatrices&&o)h.BONETEXTURE=!0;else{h.BonesPerMesh=k.skeleton.bones.length+1,h.BONETEXTURE=!o&&void 0;const x=k.ik().prePassRenderer;if(x&&x.enabled){const o=-1===x.excludedSkinnedMesh.indexOf(k);h.BONES_VELOCITY_ENABLED=o}}}else h.NUM_BONE_INFLUENCERS=0,h.BonesPerMesh=0,void 0!==h.BONETEXTURE&&(h.BONETEXTURE=!1)}(k,h),I&&function(k,h){const o=k.morphTargetManager;o?(h.MORPHTARGETS_UV=o.supportsUVs&&h.UV1,h.MORPHTARGETS_UV2=o.supportsUV2s&&h.UV2,h.MORPHTARGETS_TANGENT=o.supportsTangents&&h.TANGENT,h.MORPHTARGETS_NORMAL=o.supportsNormals&&h.NORMAL,h.MORPHTARGETS_POSITION=o.supportsPositions,h.MORPHTARGETS_COLOR=o.supportsColors,h.MORPHTARGETTEXTURE_HASUVS=o.hasUVs,h.MORPHTARGETTEXTURE_HASUV2S=o.hasUV2s,h.MORPHTARGETTEXTURE_HASTANGENTS=o.hasTangents,h.MORPHTARGETTEXTURE_HASNORMALS=o.hasNormals,h.MORPHTARGETTEXTURE_HASPOSITIONS=o.hasPositions,h.MORPHTARGETTEXTURE_HASCOLORS=o.hasColors,h.NUM_MORPH_INFLUENCERS=o.numMaxInfluencers||o.numInfluencers,h.MORPHTARGETS=h.NUM_MORPH_INFLUENCERS>0,h.MORPHTARGETS_TEXTURE=o.isUsingTextureForTargets):(h.MORPHTARGETS_UV=!1,h.MORPHTARGETS_UV2=!1,h.MORPHTARGETS_TANGENT=!1,h.MORPHTARGETS_NORMAL=!1,h.MORPHTARGETS_POSITION=!1,h.MORPHTARGETS_COLOR=!1,h.MORPHTARGETTEXTURE_HASUVS=!1,h.MORPHTARGETTEXTURE_HASUV2S=!1,h.MORPHTARGETTEXTURE_HASTANGENTS=!1,h.MORPHTARGETTEXTURE_HASNORMALS=!1,h.MORPHTARGETTEXTURE_HASPOSITIONS=!1,h.MORPHTARGETTEXTURE_HAS_COLORS=!1,h.MORPHTARGETS=!1,h.NUM_MORPH_INFLUENCERS=0)}(k,h),Y&&function(k,h){const o=k.bakedVertexAnimationManager;h.BAKED_VERTEX_ANIMATION_TEXTURE=!(!o||!o.isEnabled)}(k,h),!0}function U(k,h){if(k.activeCamera){const o=h.MULTIVIEW;h.MULTIVIEW=null!==k.activeCamera.outputRenderTarget&&k.activeCamera.outputRenderTarget.getViewCount()>1,h.MULTIVIEW!=o&&h.markAsUnprocessed()}}function Q(k,h,o){const x=h.ORDER_INDEPENDENT_TRANSPARENCY,I=h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;h.ORDER_INDEPENDENT_TRANSPARENCY=k.useOrderIndependentTransparency&&o,h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!k.getEngine().getCaps().textureFloatLinearFiltering,x===h.ORDER_INDEPENDENT_TRANSPARENCY&&I===h.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||h.markAsUnprocessed()}function B(k,h,o){const x=h.PREPASS;if(!h._arePrePassDirty)return;const I=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(k.prePassRenderer&&k.prePassRenderer.enabled&&o){h.PREPASS=!0,h.SCENE_MRT_COUNT=k.prePassRenderer.mrtCount,h.PREPASS_NORMAL_WORLDSPACE=k.prePassRenderer.generateNormalsInWorldSpace,h.PREPASS_COLOR=!0,h.PREPASS_COLOR_INDEX=0;for(let o=0;o<I.length;o++){const x=k.prePassRenderer.getIndex(I[o].type);-1!==x?(h[I[o].define]=!0,h[I[o].index]=x):h[I[o].define]=!1}}else{h.PREPASS=!1;for(let k=0;k<I.length;k++)h[I[k].define]=!1}h.PREPASS!=x&&(h.markAsUnprocessed(),h.markAsImageProcessingDirty())}function E(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];I&&I.push("Light"+k),q||(h.push("vLightData"+k,"vLightDiffuse"+k,"vLightSpecular"+k,"vLightDirection"+k,"vLightWidth"+k,"vLightHeight"+k,"vLightFalloff"+k,"vLightGround"+k,"lightMatrix"+k,"shadowsInfo"+k,"depthValues"+k),o.push("shadowTexture"+k),o.push("depthTexture"+k),h.push("viewFrustumZ"+k,"cascadeBlendFactor"+k,"lightSizeUVCorrection"+k,"depthCorrection"+k,"penumbraDarkness"+k,"frustumLengths"+k),x&&(o.push("projectionLightTexture"+k),h.push("textureProjectionMatrix"+k)),Y&&o.push("iesLightTexture"+k))}function n(k,h,o){let x,I,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(k.uniformsNames){const Y=k;x=Y.uniformsNames,I=Y.uniformBuffersNames,h=Y.samplers,o=Y.defines,q=Y.maxSimultaneousLights||0}else x=k,h||(h=[]);for(let Y=0;Y<q&&o["LIGHT"+Y];Y++)E(Y,x,h,o["PROJECTEDLIGHTTEXTURE"+Y],I,!1,o["IESLIGHTTEXTURE"+Y]);o.NUM_MORPH_INFLUENCERS&&(x.push("morphTargetInfluences"),x.push("morphTargetCount")),o.BAKED_VERTEX_ANIMATION_TEXTURE&&(x.push("bakedVertexAnimationSettings"),x.push("bakedVertexAnimationTextureSizeInverted"),x.push("bakedVertexAnimationTime"),h.push("bakedVertexAnimationTexture"))}},11544:(k,h,o)=>{o.d(h,{d:()=>q});var x=o(11239),I=o(11551);class q extends I.e{constructor(k,h){let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(k,h,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new x.Matrix,this._storeEffectOnSubMeshes=o}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(k,h){return!!k&&(!this._storeEffectOnSubMeshes||(!k.Oh||0===k.Oh.length||this.isReadyForSubMesh(k,k.Oh[0],h)))}_isReadyForSubMesh(k){const h=k.materialDefines;return!(this.checkReadyOnEveryCall||!k.effect||!h||h._renderId!==this.ik().getRenderId())}bindOnlyWorldMatrix(k){this._activeEffect.setMatrix("world",k)}bindOnlyNormalMatrix(k){this._activeEffect.setMatrix("normalMatrix",k)}bind(k,h){h&&this.bindForSubMesh(k,h,h.Oh[0])}_afterBind(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2?arguments[2]:void 0;super._afterBind(k,h,o),this.ik()._cachedEffect=h,o?o._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return o._drawWrapper._forceRebindOnNextCall||k.isCachedMaterialInvalid(this,h,x)}dispose(k,h,o){this._activeEffect=void 0,super.dispose(k,h,o)}}},11585:(k,h,o)=>{o.d(h,{c:()=>J,d:()=>G});var x=o(11227),I=o(11239),q=o(11233);class Y{static extractMinAndMaxIndexed(k,h,o,x,I,q){for(let Y=o;Y<o+x;Y++){const o=3*h[Y],x=k[o],J=k[o+1],G=k[o+2];I.minimizeInPlaceFromFloats(x,J,G),q.maximizeInPlaceFromFloats(x,J,G)}}static extractMinAndMax(k,h,o,x,I,q){for(let Y=h,J=h*x;Y<h+o;Y++,J+=x){const h=k[J],o=k[J+1],x=k[J+2];I.minimizeInPlaceFromFloats(h,o,x),q.maximizeInPlaceFromFloats(h,o,x)}}}function J(k,h,o,x){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const J=new I.Vh(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),G=new I.Vh(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return Y.extractMinAndMaxIndexed(k,h,o,x,J,G),q&&(J.x-=J.x*q.x+q.y,J.y-=J.y*q.x+q.y,J.z-=J.z*q.x+q.y,G.x+=G.x*q.x+q.y,G.y+=G.y*q.x+q.y,G.z+=G.z*q.x+q.y),{minimum:J,maximum:G}}function G(k,h,o){let x=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,q=arguments.length>4?arguments[4]:void 0;const J=new I.Vh(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),G=new I.Vh(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return q||(q=3),Y.extractMinAndMax(k,h,o,q,J,G),x&&(J.x-=J.x*x.x+x.y,J.y-=J.y*x.x+x.y,J.z-=J.z*x.x+x.y,G.x+=G.x*x.x+x.y,G.y+=G.y*x.x+x.y,G.z+=G.z*x.x+x.y),{minimum:J,maximum:G}}(0,x.d)([q.e.filter((function(){for(var k=arguments.length,h=new Array(k),o=0;o<k;o++)h[o]=arguments[o];let[x,I]=h;return!Array.isArray(x)&&!Array.isArray(I)}))],Y,"extractMinAndMaxIndexed",null),(0,x.d)([q.e.filter((function(){for(var k=arguments.length,h=new Array(k),o=0;o<k;o++)h[o]=arguments[o];let[x]=h;return!Array.isArray(x)}))],Y,"extractMinAndMax",null)},11554:(k,h,o)=>{o.d(h,{c:()=>G});var x=o(11308),I=o(11558),q=o(11565),Y=o(11585),J=o(11356);class G{get materialDefines(){var k;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(k=this._getDrawWrapper())||void 0===k?void 0:k.defines}set materialDefines(k){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=k}_getDrawWrapper(k){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];k=k??this._engine.currentRenderPassId;let o=this._drawWrappers[k];return!o&&h&&(this._drawWrappers[k]=o=new J.e(this._mesh.ik().getEngine())),o}_removeDrawWrapper(k){let h=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var o;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(o=this._drawWrappers[k])||void 0===o||o.dispose(h));this._drawWrappers[k]=void 0}get effect(){var k;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(k=this._getDrawWrapper())||void 0===k?void 0:k.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(k){this._mainDrawWrapperOverride=k}setEffect(k){let h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2?arguments[2]:void 0,x=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const I=this._drawWrapper;I.setEffect(k,h,x),void 0!==o&&(I.materialContext=o),k||(I.defines=null,I.materialContext=void 0)}resetDrawCache(k){let h=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==k)return void this._removeDrawWrapper(k,!0,h);for(const k of this._drawWrappers)null===k||void 0===k||k.dispose(h)}this._drawWrappers=[]}static AddToMesh(k,h,o,x,I,q,Y){return new G(k,h,o,x,I,q,Y,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(k,h,o,x,I,q,Y){let J=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],G=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=k,this.verticesStart=h,this.verticesCount=o,this.indexStart=x,this.indexCount=I,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=q,this._renderingMesh=Y||q,G&&q.Oh.push(this),this._engine=this._mesh.ik().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=q.Oh.length-1,J&&(this.refreshBoundingInfo(),q.eq(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(k){return this._boundingInfo=k,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const k=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return k||this._renderingMesh}Hk(){let k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const h=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!h)return k&&this._mesh.ik()._hasDefaultMaterial?this._mesh.ik().defaultMaterial:null;if(this._isMultiMaterial(h)){const k=h.getSubMaterial(this.materialIndex);return this._currentMaterial!==k&&(this._currentMaterial=k,this.resetDrawCache()),k}return h}_isMultiMaterial(k){return void 0!==k.getSubMaterial}refreshBoundingInfo(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.jJ)return this;if(k||(k=this._renderingMesh.getVerticesData(x.g.PositionKind)),!k)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const h=this._renderingMesh.dJ();let o;if(0===this.indexStart&&this.indexCount===h.length){const k=this._renderingMesh.getBoundingInfo();o={minimum:k.minimum.clone(),maximum:k.maximum.clone()}}else o=(0,Y.c)(k,h,this.indexStart,this.indexCount,this._renderingMesh.jJ.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(o.minimum,o.maximum):this._boundingInfo=new q.c(o.minimum,o.maximum),this}_checkCollision(k){return this.getBoundingInfo()._checkCollision(k)}updateBoundingInfo(k){let h=this.getBoundingInfo();return h||(this.refreshBoundingInfo(),h=this.getBoundingInfo()),h&&h.update(k),this}isInFrustum(k){const h=this.getBoundingInfo();return!!h&&h.isInFrustum(k,this._mesh.WK)}isCompletelyInFrustum(k){const h=this.getBoundingInfo();return!!h&&h.isCompletelyInFrustum(k)}render(k){return this._renderingMesh.render(this,k,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(k,h){if(!this._linesIndexBuffer){const o=6*Math.floor(this.indexCount/3),x=this.verticesStart+this.verticesCount>65535?new Uint32Array(o):new Uint16Array(o);let I=0;if(0===k.length)for(let k=this.indexStart;k<this.indexStart+this.indexCount;k+=3)x[I++]=k,x[I++]=k+1,x[I++]=k+1,x[I++]=k+2,x[I++]=k+2,x[I++]=k;else for(let h=this.indexStart;h<this.indexStart+this.indexCount;h+=3)x[I++]=k[h],x[I++]=k[h+1],x[I++]=k[h+1],x[I++]=k[h+2],x[I++]=k[h+2],x[I++]=k[h];this._linesIndexBuffer=h.createIndexBuffer(x),this._linesIndexCount=x.length}return this._linesIndexBuffer}canIntersects(k){const h=this.getBoundingInfo();return!!h&&k.intersectsBox(h.boundingBox)}intersects(k,h,o,x,I){const q=this.Hk();if(!q)return null;let Y=3,J=!1;switch(q.fillMode){case 3:case 5:case 6:case 8:return null;case 7:Y=1,J=!0}return 4===q.fillMode?o.length?this._intersectLines(k,h,o,this._mesh.intersectionThreshold,x):this._intersectUnIndexedLines(k,h,o,this._mesh.intersectionThreshold,x):!o.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(k,h,o,x,I):this._intersectTriangles(k,h,o,Y,J,x,I)}_intersectLines(k,h,o,x,q){let Y=null;for(let J=this.indexStart;J<this.indexStart+this.indexCount;J+=2){const G=h[o[J]],l=h[o[J+1]],A=k.intersectionSegment(G,l,x);if(!(A<0)&&((q||!Y||A<Y.distance)&&(Y=new I.e(null,null,A),Y.faceId=J/2,q)))break}return Y}_intersectUnIndexedLines(k,h,o,x,q){let Y=null;for(let J=this.verticesStart;J<this.verticesStart+this.verticesCount;J+=2){const o=h[J],G=h[J+1],l=k.intersectionSegment(o,G,x);if(!(l<0)&&((q||!Y||l<Y.distance)&&(Y=new I.e(null,null,l),Y.faceId=J/2,q)))break}return Y}_intersectTriangles(k,h,o,x,I,q,Y){let J=null,G=-1;for(let l=this.indexStart;l<this.indexStart+this.indexCount-(3-x);l+=x){G++;const x=o[l],A=o[l+1],K=o[l+2];if(I&&4294967295===K){l+=2;continue}const a=h[x],N=h[A],X=h[K];if(!a||!N||!X)continue;if(Y&&!Y(a,N,X,k,x,A,K))continue;const c=k.intersectsTriangle(a,N,X);if(c){if(c.distance<0)continue;if((q||!J||c.distance<J.distance)&&(J=c,J.faceId=G,q))break}}return J}_intersectUnIndexedTriangles(k,h,o,x,I){let q=null;for(let Y=this.verticesStart;Y<this.verticesStart+this.verticesCount;Y+=3){const o=h[Y],J=h[Y+1],G=h[Y+2];if(I&&!I(o,J,G,k,-1,-1,-1))continue;const l=k.intersectsTriangle(o,J,G);if(l){if(l.distance<0)continue;if((x||!q||l.distance<q.distance)&&(q=l,q.faceId=Y/3,x))break}}return q}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(k,h){const o=new G(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,k,h,!1);if(!this.IsGlobal){const k=this.getBoundingInfo();if(!k)return o;o._boundingInfo=new q.c(k.minimum,k.maximum)}return o}dispose(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.ik().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const h=this._mesh.Oh.indexOf(this);this._mesh.Oh.splice(h,1),this.resetDrawCache(void 0,k)}getClassName(){return"SubMesh"}static CreateFromIndices(k,h,o,x,I){let q=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=Number.MAX_VALUE,J=-Number.MAX_VALUE;const l=(I||x).dJ();for(let G=h;G<h+o;G++){const k=l[G];k<Y&&(Y=k),k>J&&(J=k)}return new G(k,Y,J-Y+1,h,o,x,I,q)}}}}]);