"use strict";(self.fyqbdzs5tyo=self.fyqbdzs5tyo||[]).push([[24],{11568:(V,I,A)=>{A.d(I,{e:()=>B});class B{constructor(V,I,A){this.bu=V,this.bv=I,this.distance=A,this.faceId=0,this.subMeshId=0}}},11580:(V,I,A)=>{A.d(I,{e:()=>Y});var B=A(11240),F=A(11231),E=A(11237);class Y{constructor(V,I,A){this.vectors=(0,B.b)(8,F.tI.Zero),this.center=F.tI.Zero(),this.centerWorld=F.tI.Zero(),this.extendSize=F.tI.Zero(),this.extendSizeWorld=F.tI.Zero(),this.directions=(0,B.b)(3,F.tI.Zero),this.vectorsWorld=(0,B.b)(8,F.tI.Zero),this.minimumWorld=F.tI.Zero(),this.maximumWorld=F.tI.Zero(),this.minimum=F.tI.Zero(),this.maximum=F.tI.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(V,I,A)}reConstruct(V,I,A){const B=V.x,E=V.y,Y=V.z,H=I.x,c=I.y,b=I.z,X=this.vectors;this.minimum.XH(B,E,Y),this.maximum.XH(H,c,b),X[0].XH(B,E,Y),X[1].XH(H,c,b),X[2].XH(H,E,Y),X[3].XH(B,c,Y),X[4].XH(B,E,b),X[5].XH(H,c,Y),X[6].XH(B,c,b),X[7].XH(H,E,b),I.addToRef(V,this.center).scaleInPlace(.5),I.subtractToRef(V,this.extendSize).scaleInPlace(.5),this._worldMatrix=A||F.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(V){const I=Y._TmpVector3,A=this.maximum.subtractToRef(this.minimum,I[0]),B=A.length();A.normalizeFromLength(B);const F=B*V,E=A.scaleInPlace(.5*F),H=this.center.subtractToRef(E,I[1]),c=this.center.addToRef(E,I[2]);return this.reConstruct(H,c,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(V){const I=this.minimumWorld,A=this.maximumWorld,B=this.directions,E=this.vectorsWorld,Y=this.vectors;if(V.isIdentity()){I.B(this.minimum),A.B(this.maximum);for(let V=0;V<8;++V)E[V].B(Y[V]);this.extendSizeWorld.B(this.extendSize),this.centerWorld.B(this.center)}else{I.JH(Number.MAX_VALUE),A.JH(-Number.MAX_VALUE);for(let B=0;B<8;++B){const H=E[B];F.tI.TransformCoordinatesToRef(Y[B],V,H),I.minimizeInPlace(H),A.maximizeInPlace(H)}A.subtractToRef(I,this.extendSizeWorld).scaleInPlace(.5),A.addToRef(I,this.centerWorld).scaleInPlace(.5)}F.tI.FromArrayToRef(V.m,0,B[0]),F.tI.FromArrayToRef(V.m,4,B[1]),F.tI.FromArrayToRef(V.m,8,B[2]),this._worldMatrix=V}isInFrustum(V){return Y.IsInFrustum(this.vectorsWorld,V)}isCompletelyInFrustum(V){return Y.IsCompletelyInFrustum(this.vectorsWorld,V)}intersectsPoint(V){const I=this.minimumWorld,A=this.maximumWorld,B=I.x,F=I.y,Y=I.z,H=A.x,c=A.y,b=A.z,X=V.x,P=V.y,J=V.z,G=-E.d;return!(H-X<G||G>X-B)&&(!(c-P<G||G>P-F)&&!(b-J<G||G>J-Y))}intersectsSphere(V){return Y.IntersectsSphere(this.minimumWorld,this.maximumWorld,V.centerWorld,V.radiusWorld)}intersectsMinMax(V,I){const A=this.minimumWorld,B=this.maximumWorld,F=A.x,E=A.y,Y=A.z,H=B.x,c=B.y,b=B.z,X=V.x,P=V.y,J=V.z,G=I.x,w=I.y,t=I.z;return!(H<X||F>G)&&(!(c<P||E>w)&&!(b<J||Y>t))}dispose(){var V,I;null===(V=this._drawWrapperFront)||void 0===V||V.dispose(),null===(I=this._drawWrapperBack)||void 0===I||I.dispose()}static Intersects(V,I){return V.intersectsMinMax(I.minimumWorld,I.maximumWorld)}static IntersectsSphere(V,I,A,B){const E=Y._TmpVector3[0];F.tI.ClampToRef(A,V,I,E);return F.tI.DistanceSquared(A,E)<=B*B}static IsCompletelyInFrustum(V,I){for(let A=0;A<6;++A){const B=I[A];for(let I=0;I<8;++I)if(B.dotCoordinate(V[I])<0)return!1}return!0}static IsInFrustum(V,I){for(let A=0;A<6;++A){let B=!0;const F=I[A];for(let I=0;I<8;++I)if(F.dotCoordinate(V[I])>=0){B=!1;break}if(B)return!1}return!0}}Y._TmpVector3=(0,B.b)(3,F.tI.Zero)},11571:(V,I,A)=>{A.d(I,{d:()=>P});var B=A(11240),F=A(11231),E=A(11580),Y=A(11587);const H={min:0,max:0},c={min:0,max:0},b=(V,I,A)=>{const B=F.tI.Dot(I.centerWorld,V),E=Math.abs(F.tI.Dot(I.directions[0],V))*I.extendSize.x+Math.abs(F.tI.Dot(I.directions[1],V))*I.extendSize.y+Math.abs(F.tI.Dot(I.directions[2],V))*I.extendSize.z;A.min=B-E,A.max=B+E},X=(V,I,A)=>(b(V,I,H),b(V,A,c),!(H.min>c.max||c.min>H.max));class P{constructor(V,I,A){this._isLocked=!1,this.boundingBox=new E.e(V,I,A),this.boundingSphere=new Y.e(V,I,A)}reConstruct(V,I,A){this.boundingBox.reConstruct(V,I,A),this.boundingSphere.reConstruct(V,I,A)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(V){this._isLocked=V}update(V){this._isLocked||(this.boundingBox._update(V),this.boundingSphere._update(V))}centerOn(V,I){const A=P._TmpVector3[0].B(V).wJ(I),B=P._TmpVector3[1].B(V).addInPlace(I);return this.boundingBox.reConstruct(A,B,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(A,B,this.boundingBox.getWorldMatrix()),this}encapsulate(V){const I=F.tI.Minimize(this.minimum,V),A=F.tI.Maximize(this.maximum,V);return this.reConstruct(I,A,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(V){const I=F.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(I);const A=F.TmpVectors.tI[0];return F.tI.TransformCoordinatesToRef(V.boundingBox.minimumWorld,I,A),this.encapsulate(A),F.tI.TransformCoordinatesToRef(V.boundingBox.maximumWorld,I,A),this.encapsulate(A),this}scale(V){return this.boundingBox.scale(V),this.boundingSphere.scale(V),this}isInFrustum(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===I||3===I)&&this.boundingSphere.isCenterInFrustum(V))return!0;if(!this.boundingSphere.isInFrustum(V))return!1;return!(1!==I&&3!==I)||this.boundingBox.isInFrustum(V)}get diagonalLength(){const V=this.boundingBox;return V.maximumWorld.subtractToRef(V.minimumWorld,P._TmpVector3[0]).length()}isCompletelyInFrustum(V){return this.boundingBox.isCompletelyInFrustum(V)}_checkCollision(V){return V._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(V){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(V)&&!!this.boundingBox.intersectsPoint(V))}intersects(V,I){if(!Y.e.Intersects(this.boundingSphere,V.boundingSphere))return!1;if(!E.e.Intersects(this.boundingBox,V.boundingBox))return!1;if(!I)return!0;const A=this.boundingBox,B=V.boundingBox;return!!X(A.directions[0],A,B)&&(!!X(A.directions[1],A,B)&&(!!X(A.directions[2],A,B)&&(!!X(B.directions[0],A,B)&&(!!X(B.directions[1],A,B)&&(!!X(B.directions[2],A,B)&&(!!X(F.tI.Cross(A.directions[0],B.directions[0]),A,B)&&(!!X(F.tI.Cross(A.directions[0],B.directions[1]),A,B)&&(!!X(F.tI.Cross(A.directions[0],B.directions[2]),A,B)&&(!!X(F.tI.Cross(A.directions[1],B.directions[0]),A,B)&&(!!X(F.tI.Cross(A.directions[1],B.directions[1]),A,B)&&(!!X(F.tI.Cross(A.directions[1],B.directions[2]),A,B)&&(!!X(F.tI.Cross(A.directions[2],B.directions[0]),A,B)&&(!!X(F.tI.Cross(A.directions[2],B.directions[1]),A,B)&&!!X(F.tI.Cross(A.directions[2],B.directions[2]),A,B))))))))))))))}}P._TmpVector3=(0,B.b)(2,F.tI.Zero)},11587:(V,I,A)=>{A.d(I,{e:()=>E});var B=A(11240),F=A(11231);class E{constructor(V,I,A){this.center=F.tI.Zero(),this.centerWorld=F.tI.Zero(),this.minimum=F.tI.Zero(),this.maximum=F.tI.Zero(),this.reConstruct(V,I,A)}reConstruct(V,I,A){this.minimum.B(V),this.maximum.B(I);const B=F.tI.Distance(V,I);I.addToRef(V,this.center).scaleInPlace(.5),this.radius=.5*B,this._update(A||F.Matrix.IdentityReadOnly)}scale(V){const I=this.radius*V,A=E._TmpVector3,B=A[0].JH(I),F=this.center.subtractToRef(B,A[1]),Y=this.center.addToRef(B,A[2]);return this.reConstruct(F,Y,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(V){if(V.isIdentity())this.centerWorld.B(this.center),this.radiusWorld=this.radius;else{F.tI.TransformCoordinatesToRef(this.center,V,this.centerWorld);const I=E._TmpVector3[0];F.tI.TransformNormalFromFloatsToRef(1,1,1,V,I),this.radiusWorld=Math.max(Math.abs(I.x),Math.abs(I.y),Math.abs(I.z))*this.radius}}isInFrustum(V){const I=this.centerWorld,A=this.radiusWorld;for(let B=0;B<6;B++)if(V[B].dotCoordinate(I)<=-A)return!1;return!0}isCenterInFrustum(V){const I=this.centerWorld;for(let A=0;A<6;A++)if(V[A].dotCoordinate(I)<0)return!1;return!0}intersectsPoint(V){const I=F.tI.DistanceSquared(this.centerWorld,V);return!(this.radiusWorld*this.radiusWorld<I)}static Intersects(V,I){const A=F.tI.DistanceSquared(V.centerWorld,I.centerWorld),B=V.radiusWorld+I.radiusWorld;return!(B*B<A)}static CreateFromCenterAndRadius(V,I,A){this._TmpVector3[0].B(V),this._TmpVector3[1].XH(0,0,I),this._TmpVector3[2].B(V),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].wJ(this._TmpVector3[1]);const B=new E(this._TmpVector3[0],this._TmpVector3[2]);return B._worldMatrix=A||F.Matrix.Identity(),B}}E._TmpVector3=(0,B.b)(3,F.tI.Zero)},11605:(V,I,A)=>{function B(V){-1===V.indexOf("vClipPlane")&&V.push("vClipPlane"),-1===V.indexOf("vClipPlane2")&&V.push("vClipPlane2"),-1===V.indexOf("vClipPlane3")&&V.push("vClipPlane3"),-1===V.indexOf("vClipPlane4")&&V.push("vClipPlane4"),-1===V.indexOf("vClipPlane5")&&V.push("vClipPlane5"),-1===V.indexOf("vClipPlane6")&&V.push("vClipPlane6")}function F(V,I,A){const B=!!(V.clipPlane??I.clipPlane),F=!!(V.clipPlane2??I.clipPlane2),E=!!(V.clipPlane3??I.clipPlane3),Y=!!(V.clipPlane4??I.clipPlane4),H=!!(V.clipPlane5??I.clipPlane5),c=!!(V.clipPlane6??I.clipPlane6);B&&A.push("#define CLIPPLANE"),F&&A.push("#define CLIPPLANE2"),E&&A.push("#define CLIPPLANE3"),Y&&A.push("#define CLIPPLANE4"),H&&A.push("#define CLIPPLANE5"),c&&A.push("#define CLIPPLANE6")}function E(V,I,A){let B=!1;const F=!!(V.clipPlane??I.clipPlane),E=!!(V.clipPlane2??I.clipPlane2),Y=!!(V.clipPlane3??I.clipPlane3),H=!!(V.clipPlane4??I.clipPlane4),c=!!(V.clipPlane5??I.clipPlane5),b=!!(V.clipPlane6??I.clipPlane6);return A.CLIPPLANE!==F&&(A.CLIPPLANE=F,B=!0),A.CLIPPLANE2!==E&&(A.CLIPPLANE2=E,B=!0),A.CLIPPLANE3!==Y&&(A.CLIPPLANE3=Y,B=!0),A.CLIPPLANE4!==H&&(A.CLIPPLANE4=H,B=!0),A.CLIPPLANE5!==c&&(A.CLIPPLANE5=c,B=!0),A.CLIPPLANE6!==b&&(A.CLIPPLANE6=b,B=!0),B}function Y(V,I,A){let B=I.clipPlane??A.clipPlane;H(V,"vClipPlane",B),B=I.clipPlane2??A.clipPlane2,H(V,"vClipPlane2",B),B=I.clipPlane3??A.clipPlane3,H(V,"vClipPlane3",B),B=I.clipPlane4??A.clipPlane4,H(V,"vClipPlane4",B),B=I.clipPlane5??A.clipPlane5,H(V,"vClipPlane5",B),B=I.clipPlane6??A.clipPlane6,H(V,"vClipPlane6",B)}function H(V,I,A){A&&V.setFloat4(I,A.normal.x,A.normal.y,A.normal.z,A.d)}A.d(I,{d:()=>B,h:()=>Y,l:()=>E,p:()=>F})},11546:(V,I,A)=>{A.d(I,{c:()=>B});class B{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(V,I){this._defines[V]||(V<this._currentRank&&(this._currentRank=V),V>this._maxRank&&(this._maxRank=V),this._defines[V]=new Array),this._defines[V].push(I)}addCPUSkinningFallback(V,I){this._mesh=I,V<this._currentRank&&(this._currentRank=V),V>this._maxRank&&(this._maxRank=V)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(V,I){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,V=V.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),I._bonesComputationForcedToCPU=!0;const A=this._mesh.sV();for(let V=0;V<A.meshes.length;V++){const B=A.meshes[V];if(B.material){if(B.computeBonesUsingShaders&&0!==B.numBoneInfluencers)if(B.material.getEffect()===I)B.computeBonesUsingShaders=!1;else if(B.IH)for(const V of B.IH){if(V.effect===I){B.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&B.computeBonesUsingShaders&&B.numBoneInfluencers>0&&(B.computeBonesUsingShaders=!1)}}else{const I=this._defines[this._currentRank];if(I)for(let A=0;A<I.length;A++)V=V.replace("#define "+I[A],"");this._currentRank++}return V}}},11561:(V,I,A)=>{A.d(I,{c:()=>u});var B=A(11213),F=A(11222),E=A(11052),Y=A(11057),H=A(11097),c=A(11563),b=A(11489),X=A(11064),P=A(11278),J=A(11347),G=A(11265);class w{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(V){this._func=V}get funcRef(){return this._funcRef}set funcRef(V){this._funcRef=V}get funcMask(){return this._funcMask}set funcMask(V){this._funcMask=V}get opStencilFail(){return this._opStencilFail}set opStencilFail(V){this._opStencilFail=V}get opDepthFail(){return this._opDepthFail}set opDepthFail(V){this._opDepthFail=V}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(V){this._opStencilDepthPass=V}get mask(){return this._mask}set mask(V){this._mask=V}get enabled(){return this._enabled}set enabled(V){this._enabled=V}getClassName(){return"MaterialStencilState"}copyTo(V){G.b.Clone((()=>V),this)}serialize(){return G.b.Serialize(this)}parse(V,I,A){G.b.Parse((()=>this),V,I,A)}}(0,B.b)([(0,F.A)()],w.prototype,"func",null),(0,B.b)([(0,F.A)()],w.prototype,"funcRef",null),(0,B.b)([(0,F.A)()],w.prototype,"funcMask",null),(0,B.b)([(0,F.A)()],w.prototype,"opStencilFail",null),(0,B.b)([(0,F.A)()],w.prototype,"opDepthFail",null),(0,B.b)([(0,F.A)()],w.prototype,"opStencilDepthPass",null),(0,B.b)([(0,F.A)()],w.prototype,"mask",null),(0,B.b)([(0,F.A)()],w.prototype,"enabled",null);var t=A(11597);class u{get _supportGlowLayer(){return!1}set _glowModeEnabled(V){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(V){if(this._alpha===V)return;const I=this._alpha;this._alpha=V,1!==I&&1!==V||this.FP(u.MiscDirtyFlag+u.PrePassDirtyFlag)}get alpha(){return this._alpha}set bH(V){this._backFaceCulling!==V&&(this._backFaceCulling=V,this.FP(u.TextureDirtyFlag))}get bH(){return this._backFaceCulling}set cullBackFaces(V){this._cullBackFaces!==V&&(this._cullBackFaces=V,this.FP(u.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(V){this._blockDirtyMechanism!==V&&(this._blockDirtyMechanism=V,V||this.IG())}atomicMaterialsUpdate(V){this.blockDirtyMechanism=!0;try{V(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(V){this._onDisposeObserver&&this.aY.remove(this._onDisposeObserver),this._onDisposeObserver=this.aY.add(V)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new Y.c),this._onBindObservable}set onBind(V){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(V)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new Y.c),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new Y.c),this._onEffectCreatedObservable}set alphaMode(V){this._alphaMode!==V&&(this._alphaMode=V,this.FP(u.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(V){this._needDepthPrePass!==V&&(this._needDepthPrePass=V,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(V){this._fogEnabled!==V&&(this._fogEnabled=V,this.FP(u.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case u.WireFrameFillMode:case u.LineListDrawMode:case u.LineLoopDrawMode:case u.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(V){this.fillMode=V?u.WireFrameFillMode:u.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case u.PointFillMode:case u.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(V){this.fillMode=V?u.PointFillMode:u.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(V){this._fillMode!==V&&(this._fillMode=V,this.FP(u.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(V){const I=this.sV().getEngine().getCaps().fragmentDepthSupported;V&&!I&&X.b.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=V&&I,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(V){this._drawWrapper=V}constructor(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.aY=new Y.c,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new w,this._useUBO=!1,this._fillMode=u.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=V;const F=I||H.e.LastCreatedScene;F&&(this._scene=F,this._dirtyCallbacks={},this._forceGLSL=B,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=V||E.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new J.e(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new b.e(this._scene.getEngine(),void 0,void 0,V),this._useUBO=this.sV().getEngine().supportsUniformBuffers,this._createUniformBuffer(),A||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),u.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var V;const I=this.sV().getEngine();null===(V=this._uniformBuffer)||void 0===V||V.dispose(),I.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new b.e(I,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new b.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(V){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.IG(),this.checkReadyOnlyOnce=!0}unfreeze(){this.IG(),this.checkReadyOnlyOnce=!1}isReady(V,I){return!0}isReadyForSubMesh(V,I,A){const B=I.materialDefines;return!!B&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}sV(){return this._scene}_getEffectiveOrientation(V){return null!==this.sideOrientation?this.sideOrientation:V.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(V){this._transparencyMode!==V&&(this._transparencyMode=V,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===u.MATERIAL_ALPHABLEND||this._transparencyMode===u.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===u.MATERIAL_ALPHATEST||this._transparencyMode===u.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===u.MATERIAL_OPAQUE||this._transparencyMode===u.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(V){return this._hasTransparencyMode?this._transparencyModeIsBlend:V.visibility<1||!this._disableAlphaBlending&&(V.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(V){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(V)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}IG(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const I=this.sV().meshes;for(const A of I)if(A.IH)for(const I of A.IH)if(I.lV()===this)for(const A of I._drawWrappers)A&&this._materialContext===A.materialContext&&(A._wasPreviouslyReady=!1,A._wasPreviouslyUsingInstances=null,A._forceRebindOnNextCall=V);V&&this.FP(u.AllDirtyFlag)}_preBind(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const A=this._scene.getEngine(),B=(null==I?this.sideOrientation:I)===u.ClockWiseSideOrientation;return A.enableEffect(V||this._getDrawWrapper()),A.setState(this.bH,this.zOffset,!1,B,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),B}bind(V,I){}buildUniformLayout(){const V=this._uniformBuffer;this._eventInfo.ubo=V,this._callbackPluginEventGeneric(8,this._eventInfo),V.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(V,I,A){const B=A._drawWrapper;this._eventInfo.subMesh=A,this._callbackPluginEventBindForSubMesh(this._eventInfo),B._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(V){}bindView(V){this._useUBO?this._needToBindSceneUbo=!0:V.setMatrix("view",this.sV().getViewMatrix())}bindViewProjection(V){this._useUBO?this._needToBindSceneUbo=!0:(V.setMatrix("viewProjection",this.sV().getTransformMatrix()),V.setMatrix("projection",this.sV().getProjectionMatrix()))}bindEyePosition(V,I){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(V,I)}_afterBind(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&I&&(this._needToBindSceneUbo=!1,(0,t.r)(I,this.sV().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=V?V.visibility:1,this._onBindObservable&&V&&this._onBindObservable.notifyObservers(V),this.disableDepthWrite){const V=this._scene.getEngine();this._cachedDepthWriteState=V.getDepthWrite(),V.setDepthWrite(!1)}if(this.disableColorWrite){const V=this._scene.getEngine();this._cachedColorWriteState=V.getColorWrite(),V.setColorWrite(!1)}if(0!==this.depthFunction){const V=this._scene.getEngine();this._cachedDepthFunctionState=V.getDepthFunction()||0,V.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(V){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=V,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(V){return null}_clonePlugins(V,I){const A={};if(this._serializePlugins(A),u._ParsePlugins(A,V,this._scene,I),this.pluginManager)for(const B of this.pluginManager._plugins){const I=V.pluginManager.getPlugin(B.name);I&&B.copyTo(I)}}getBindedMeshes(){if(this.meshMap){const V=[];for(const I in this.meshMap){const A=this.meshMap[I];A&&V.push(A)}return V}return this._scene.meshes.filter((V=>V.material===this))}forceCompilation(V,I,A,B){const F={clipPlane:!1,useInstances:!1,...A},E=this.sV(),Y=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const H=()=>{if(!this._scene||!this._scene.getEngine())return;const A=E.clipPlane;if(F.clipPlane&&(E.clipPlane=new P.d(0,0,0,1)),this._storeEffectOnSubMeshes){let A=!0,E=null;if(V.IH){const I=new c.e(0,0,0,0,0,V,void 0,!1,!1);I.materialDefines&&(I.materialDefines._renderId=-1),this.isReadyForSubMesh(V,I,F.useInstances)||(I.effect&&I.effect.getCompilationError()&&I.effect.allFallbacksProcessed()?E=I.effect.getCompilationError():(A=!1,setTimeout(H,16)))}A&&(this.allowShaderHotSwapping=Y,E&&B&&B(E),I&&I(this))}else this.isReady()?(this.allowShaderHotSwapping=Y,I&&I(this)):setTimeout(H,16);F.clipPlane&&(E.clipPlane=A)};H()}async forceCompilationAsync(V,I){return await new Promise(((A,B)=>{this.forceCompilation(V,(()=>{A()}),I,(V=>{B(V)}))}))}FP(V){this.sV().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(u._DirtyCallbackArray.length=0,V&u.ImageProcessingDirtyFlag&&u._DirtyCallbackArray.push(u._ImageProcessingDirtyCallBack),V&u.TextureDirtyFlag&&u._DirtyCallbackArray.push(u._TextureDirtyCallBack),V&u.LightDirtyFlag&&u._DirtyCallbackArray.push(u._LightsDirtyCallBack),V&u.FresnelDirtyFlag&&u._DirtyCallbackArray.push(u._FresnelDirtyCallBack),V&u.AttributesDirtyFlag&&u._DirtyCallbackArray.push(u._AttributeDirtyCallBack),V&u.MiscDirtyFlag&&u._DirtyCallbackArray.push(u._MiscDirtyCallBack),V&u.PrePassDirtyFlag&&u._DirtyCallbackArray.push(u._PrePassDirtyCallBack),u._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(u._RunDirtyCallBacks),this.sV().resetCachedMaterial())}resetDrawCache(){const V=this.sV().meshes;for(const I of V)if(I.IH)for(const V of I.IH)V.lV()===this&&V.resetDrawCache()}_markAllSubMeshesAsDirty(V){const I=this.sV();if(I.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const A=I.meshes;for(const B of A)if(B.IH)for(const A of B.IH){if((A.lV()||(I._hasDefaultMaterial?I.defaultMaterial:null))===this)for(const I of A._drawWrappers)I&&I.defines&&I.defines.markAllAsDirty&&this._materialContext===I.materialContext&&V(I.defines)}}_markScenePrePassDirty(){if(this.sV().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const V=this.sV().enablePrePassRenderer();V&&V.FP()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(u._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(u._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(u._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(u._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(u._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(u._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(u._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(u._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(u._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(u._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const V=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.aY.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(V)}))}}setPrePassRenderer(V){return!1}dispose(V,I,A){const B=this.sV();if(B.stopAnimation(this),B.freeProcessedMaterials(),B.removeMaterial(this),this._eventInfo.forceDisposeTextures=I,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const V=this._parentContainer.materials.indexOf(this);V>-1&&this._parentContainer.materials.splice(V,1),this._parentContainer=null}if(!0!==A)if(this.meshMap)for(const F in this.meshMap){const V=this.meshMap[F];this._disposeMeshResources(V)}else{const V=B.meshes;for(const I of V)this._disposeMeshResources(I)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.aY.notifyObservers(this),this.aY.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(V){if(!V)return;const I=V.HH,A=V._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(V.IH&&A)for(const F of V.IH){const V=F._drawWrappers;for(let E=0;E<V.length;E++){var B;const Y=null===(B=V[E])||void 0===B?void 0:B.effect;if(!Y)continue;A[E]===this&&(null===I||void 0===I||I._releaseVertexArrayObject(Y),F._removeDrawWrapper(E,!0,!0))}}}else null===I||void 0===I||I._releaseVertexArrayObject(this._drawWrapper.effect);V.material!==this||V.sourceMesh||(V.material=null)}serialize(){const V=G.b.Serialize(this);return V.stencil=this.stencil.serialize(),V.uniqueId=this.uniqueId,this._serializePlugins(V),V}_serializePlugins(V){if(V.plugins={},this.pluginManager)for(const I of this.pluginManager._plugins)I.doNotSerialize||(V.plugins[I.getClassName()]=I.serialize())}static Parse(V,I,A){if(V.customType){if("BABYLON.PBRMaterial"===V.customType&&V.overloadedAlbedo&&(V.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return X.b.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else V.customType="BABYLON.StandardMaterial";const B=E.Tools.Instantiate(V.customType).Parse(V,I,A);return B._loadedUniqueId=V.uniqueId,B}static _ParsePlugins(V,I,A,B){if(V.plugins)for(const H in V.plugins){var F,Y;const c=V.plugins[H];let b=null===(F=I.pluginManager)||void 0===F?void 0:F.getPlugin(c.name);if(!b){const V=E.Tools.Instantiate("BABYLON."+H);V&&(b=new V(I))}null===(Y=b)||void 0===Y||Y.parse(c,A,B)}}}u.TriangleFillMode=0,u.WireFrameFillMode=1,u.PointFillMode=2,u.PointListDrawMode=3,u.LineListDrawMode=4,u.LineLoopDrawMode=5,u.LineStripDrawMode=6,u.TriangleStripDrawMode=7,u.TriangleFanDrawMode=8,u.ClockWiseSideOrientation=0,u.CounterClockWiseSideOrientation=1,u.ImageProcessingDirtyFlag=64,u.TextureDirtyFlag=1,u.LightDirtyFlag=2,u.FresnelDirtyFlag=4,u.AttributesDirtyFlag=8,u.MiscDirtyFlag=16,u.PrePassDirtyFlag=32,u.AllDirtyFlag=127,u.MATERIAL_OPAQUE=0,u.MATERIAL_ALPHATEST=1,u.MATERIAL_ALPHABLEND=2,u.MATERIAL_ALPHATESTANDBLEND=3,u.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,u.MATERIAL_NORMALBLENDMETHOD_RNM=1,u.OnEventObservable=new Y.c,u._AllDirtyCallBack=V=>V.markAllAsDirty(),u._ImageProcessingDirtyCallBack=V=>V.markAsImageProcessingDirty(),u._TextureDirtyCallBack=V=>V.markAsTexturesDirty(),u._FresnelDirtyCallBack=V=>V.markAsFresnelDirty(),u._MiscDirtyCallBack=V=>V.markAsMiscDirty(),u._PrePassDirtyCallBack=V=>V.markAsPrePassDirty(),u._LightsDirtyCallBack=V=>V.markAsLightDirty(),u._AttributeDirtyCallBack=V=>V.markAsAttributesDirty(),u._FresnelAndMiscDirtyCallBack=V=>{u._FresnelDirtyCallBack(V),u._MiscDirtyCallBack(V)},u._TextureAndMiscDirtyCallBack=V=>{u._TextureDirtyCallBack(V),u._MiscDirtyCallBack(V)},u._DirtyCallbackArray=[],u._RunDirtyCallBacks=V=>{for(const I of u._DirtyCallbackArray)I(V)},(0,B.b)([(0,F.A)()],u.prototype,"id",void 0),(0,B.b)([(0,F.A)()],u.prototype,"uniqueId",void 0),(0,B.b)([(0,F.A)()],u.prototype,"name",void 0),(0,B.b)([(0,F.A)()],u.prototype,"metadata",void 0),(0,B.b)([(0,F.A)()],u.prototype,"checkReadyOnEveryCall",void 0),(0,B.b)([(0,F.A)()],u.prototype,"checkReadyOnlyOnce",void 0),(0,B.b)([(0,F.A)()],u.prototype,"state",void 0),(0,B.b)([(0,F.A)("alpha")],u.prototype,"_alpha",void 0),(0,B.b)([(0,F.A)("bH")],u.prototype,"_backFaceCulling",void 0),(0,B.b)([(0,F.A)("cullBackFaces")],u.prototype,"_cullBackFaces",void 0),(0,B.b)([(0,F.A)()],u.prototype,"sideOrientation",void 0),(0,B.b)([(0,F.A)("alphaMode")],u.prototype,"_alphaMode",void 0),(0,B.b)([(0,F.A)()],u.prototype,"_needDepthPrePass",void 0),(0,B.b)([(0,F.A)()],u.prototype,"disableDepthWrite",void 0),(0,B.b)([(0,F.A)()],u.prototype,"disableColorWrite",void 0),(0,B.b)([(0,F.A)()],u.prototype,"forceDepthWrite",void 0),(0,B.b)([(0,F.A)()],u.prototype,"depthFunction",void 0),(0,B.b)([(0,F.A)()],u.prototype,"separateCullingPass",void 0),(0,B.b)([(0,F.A)("fogEnabled")],u.prototype,"_fogEnabled",void 0),(0,B.b)([(0,F.A)()],u.prototype,"pointSize",void 0),(0,B.b)([(0,F.A)()],u.prototype,"zOffset",void 0),(0,B.b)([(0,F.A)()],u.prototype,"zOffsetUnits",void 0),(0,B.b)([(0,F.A)()],u.prototype,"pointsCloud",null),(0,B.b)([(0,F.A)()],u.prototype,"fillMode",null),(0,B.b)([(0,F.A)()],u.prototype,"useLogarithmicDepth",null),(0,B.b)([(0,F.A)()],u.prototype,"transparencyMode",null)},11597:(V,I,A)=>{A.d(I,{B:()=>J,E:()=>x,H:()=>M,J:()=>h,M:()=>W,Q:()=>Q,R:()=>f,S:()=>R,W:()=>q,_:()=>l,ab:()=>w,c:()=>L,d:()=>P,h:()=>m,l:()=>X,o:()=>t,r:()=>u,t:()=>g,u:()=>S,w:()=>o,x:()=>s,y:()=>e,z:()=>G});var B=A(11064),F=A(11276),E=A(11097),Y=A(11540),H=A(11605);const c=F.oI.Black(),b={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function X(V,I,A){if(!V||V.LOGARITHMICDEPTH||V.indexOf&&V.indexOf("LOGARITHMICDEPTH")>=0){const V=A.activeCamera;1===V.mode&&B.b.Error("Logarithmic depth is not compatible with orthographic cameras!",20),I.setFloat("logarithmicDepthConstant",2/(Math.log(V.maxZ+1)/Math.LN2))}}function P(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]&&arguments[3];A&&V.fogEnabled&&(!I||I.applyFog)&&0!==V.fogMode&&(A.setFloat4("vFogInfos",V.fogMode,V.fogStart,V.fogEnd,V.fogDensity),B?(V.fogColor.toLinearSpaceToRef(c,V.getEngine().useExactSrgbConversions),A.setColor3("vFogColor",c)):A.setColor3("vFogColor",V.fogColor))}function J(V,I,A,B,F,E,Y,H,c,X){const P=V.numMaxInfluencers||V.numInfluencers;return P<=0?0:(I.push("#define MORPHTARGETS"),V.hasPositions&&I.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),V.hasNormals&&I.push("#define MORPHTARGETTEXTURE_HASNORMALS"),V.hasTangents&&I.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),V.hasUVs&&I.push("#define MORPHTARGETTEXTURE_HASUVS"),V.hasUV2s&&I.push("#define MORPHTARGETTEXTURE_HASUV2S"),V.hasColors&&I.push("#define MORPHTARGETTEXTURE_HASCOLORS"),V.supportsPositions&&F&&I.push("#define MORPHTARGETS_POSITION"),V.supportsNormals&&E&&I.push("#define MORPHTARGETS_NORMAL"),V.supportsTangents&&Y&&I.push("#define MORPHTARGETS_TANGENT"),V.supportsUVs&&H&&I.push("#define MORPHTARGETS_UV"),V.supportsUV2s&&c&&I.push("#define MORPHTARGETS_UV2"),V.supportsColors&&X&&I.push("#define MORPHTARGETS_COLOR"),I.push("#define NUM_MORPH_INFLUENCERS "+P),V.isUsingTextureForTargets&&I.push("#define MORPHTARGETS_TEXTURE"),b.NUM_MORPH_INFLUENCERS=P,b.NORMAL=E,b.TANGENT=Y,b.UV=H,b.UV2=c,b.COLOR=X,G(A,B,b,F),P)}function G(V,I,A){let F=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const Y=A.NUM_MORPH_INFLUENCERS;if(Y>0&&E.e.LastCreatedEngine){const H=E.e.LastCreatedEngine.getCaps().maxVertexAttribs,c=I.morphTargetManager;if(null!==c&&void 0!==c&&c.isUsingTextureForTargets)return;const b=c&&c.supportsPositions&&F,X=c&&c.supportsNormals&&A.NORMAL,P=c&&c.supportsTangents&&A.TANGENT,J=c&&c.supportsUVs&&A.UV1,G=c&&c.supportsUV2s&&A.UV2,w=c&&c.supportsColors&&A.VERTEXCOLOR;for(let A=0;A<Y;A++)b&&V.push("position"+A),X&&V.push("normal"+A),P&&V.push("tangent"+A),J&&V.push("uv_"+A),G&&V.push("uv2_"+A),w&&V.push("color"+A),V.length>H&&B.b.Error("Cannot add more vertex attributes for mesh "+I.name)}}function w(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];V.push("world0"),V.push("world1"),V.push("world2"),V.push("world3"),I&&(V.push("previousWorld0"),V.push("previousWorld1"),V.push("previousWorld2"),V.push("previousWorld3"))}function t(V,I){const A=V.morphTargetManager;V&&A&&I.setFloatArray("morphTargetInfluences",A.influences)}function u(V,I){I.bindToEffect(V,"Scene")}function W(V,I,A){I._needUVs=!0,I[A]=!0,V.optimizeUVAllocation&&V.getTextureMatrix().isIdentityAs3x2()?(I[A+"DIRECTUV"]=V.coordinatesIndex+1,I["MAINUV"+(V.coordinatesIndex+1)]=!0):I[A+"DIRECTUV"]=0}function g(V,I,A){const B=V.getTextureMatrix();I.EH(A+"Matrix",B)}function o(V,I,A){A.BAKED_VERTEX_ANIMATION_TEXTURE&&A.INSTANCES&&V.push("bakedVertexAnimationSettingsInstanced")}function L(V,I,A){var B;if(I&&V&&(V.computeBonesUsingShaders&&I._bonesComputationForcedToCPU&&(V.computeBonesUsingShaders=!1),V.useBones&&V.computeBonesUsingShaders&&V.skeleton)){const F=V.skeleton;if(F.isUsingTextureForMatrices&&I.getUniformIndex("boneTextureWidth")>-1){const A=F.getTransformMatrixTexture(V);I.setTexture("boneSampler",A),I.setFloat("boneTextureWidth",4*(F.bones.length+1))}else{const E=F.getTransformMatrices(V);E&&(I.setMatrices("mBones",E),A&&V.sV().prePassRenderer&&V.sV().prePassRenderer.getIndex(2)&&(A.previousBones[V.uniqueId]||(A.previousBones[V.uniqueId]=E.slice()),I.setMatrices("mPreviousBones",A.previousBones[V.uniqueId]),B=E,A.previousBones[V.uniqueId].set(B)))}}}function z(V,I,A,B,F){let E=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];V._bindLight(I,A,B,F,E)}function m(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const E=Math.min(I.lightSources.length,F);for(let Y=0;Y<E;Y++){z(I.lightSources[Y],Y,V,A,"boolean"===typeof B?B:B.SPECULARTERM,I.receiveShadows)}}function s(V,I,A,B){A.NUM_BONE_INFLUENCERS>0&&(B.addCPUSkinningFallback(0,I),V.push("matricesIndices"),V.push("matricesWeights"),A.NUM_BONE_INFLUENCERS>4&&(V.push("matricesIndicesExtra"),V.push("matricesWeightsExtra")))}function e(V,I){(I.INSTANCES||I.THIN_INSTANCES)&&w(V,!!I.PREPASS_VELOCITY),I.INSTANCESCOLOR&&V.push("instanceColor")}function S(V,I){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,F=0;for(let E=0;E<A&&V["LIGHT"+E];E++)E>0&&(F=B+E,I.addFallback(F,"LIGHT"+E)),V.SHADOWS||(V["SHADOW"+E]&&I.addFallback(B,"SHADOW"+E),V["SHADOWPCF"+E]&&I.addFallback(B,"SHADOWPCF"+E),V["SHADOWPCSS"+E]&&I.addFallback(B,"SHADOWPCSS"+E),V["SHADOWPOISSON"+E]&&I.addFallback(B,"SHADOWPOISSON"+E),V["SHADOWESM"+E]&&I.addFallback(B,"SHADOWESM"+E),V["SHADOWCLOSEESM"+E]&&I.addFallback(B,"SHADOWCLOSEESM"+E));return F++}function Q(V,I,A,B,F,E,Y){let H=arguments.length>7&&void 0!==arguments[7]&&arguments[7];Y._areMiscDirty&&(Y.LOGARITHMICDEPTH=A,Y.POINTSIZE=B,Y.FOG=F&&function(V,I){return I.fogEnabled&&V.applyFog&&0!==I.fogMode}(V,I),Y.NONUNIFORMSCALING=V.nonUniformScaling,Y.ALPHATEST=E,Y.DECAL_AFTER_DETAIL=H)}function h(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!A._areLightsDirty)return A._needNormals;let Y=0;const H={needNormals:A._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(V.lightsEnabled&&!E)for(const b of I.lightSources)if(r(V,I,b,Y,A,B,H),Y++,Y===F)break;A.SPECULARTERM=H.specularEnabled,A.SHADOWS=H.shadowEnabled;for(let b=Y;b<F;b++)void 0!==A["LIGHT"+b]&&(A["LIGHT"+b]=!1,A["HEMILIGHT"+b]=!1,A["POINTLIGHT"+b]=!1,A["DIRLIGHT"+b]=!1,A["SPOTLIGHT"+b]=!1,A["AREALIGHT"+b]=!1,A["SHADOW"+b]=!1,A["SHADOWCSM"+b]=!1,A["SHADOWCSMDEBUG"+b]=!1,A["SHADOWCSMNUM_CASCADES"+b]=!1,A["SHADOWCSMUSESHADOWMAXZ"+b]=!1,A["SHADOWCSMNOBLEND"+b]=!1,A["SHADOWCSM_RIGHTHANDED"+b]=!1,A["SHADOWPCF"+b]=!1,A["SHADOWPCSS"+b]=!1,A["SHADOWPOISSON"+b]=!1,A["SHADOWESM"+b]=!1,A["SHADOWCLOSEESM"+b]=!1,A["SHADOWCUBE"+b]=!1,A["SHADOWLOWQUALITY"+b]=!1,A["SHADOWMEDIUMQUALITY"+b]=!1);const c=V.getEngine().getCaps();return void 0===A.SHADOWFLOAT&&(H.needRebuild=!0),A.SHADOWFLOAT=H.shadowEnabled&&(c.textureFloatRender&&c.textureFloatLinearFiltering||c.textureHalfFloatRender&&c.textureHalfFloatLinearFiltering),A.LIGHTMAPEXCLUDED=H.lightmapMode,H.needRebuild&&A.rebuild(),H.needNormals}function r(V,I,A,B,F,E,H){switch(H.needNormals=!0,void 0===F["LIGHT"+B]&&(H.needRebuild=!0),F["LIGHT"+B]=!0,F["SPOTLIGHT"+B]=!1,F["HEMILIGHT"+B]=!1,F["POINTLIGHT"+B]=!1,F["DIRLIGHT"+B]=!1,F["AREALIGHT"+B]=!1,A.prepareLightSpecificDefines(F,B),F["LIGHT_FALLOFF_PHYSICAL"+B]=!1,F["LIGHT_FALLOFF_GLTF"+B]=!1,F["LIGHT_FALLOFF_STANDARD"+B]=!1,A.falloffType){case Y.e.FALLOFF_GLTF:F["LIGHT_FALLOFF_GLTF"+B]=!0;break;case Y.e.FALLOFF_PHYSICAL:F["LIGHT_FALLOFF_PHYSICAL"+B]=!0;break;case Y.e.FALLOFF_STANDARD:F["LIGHT_FALLOFF_STANDARD"+B]=!0}if(E&&!A.QP.equalsFloats(0,0,0)&&(H.specularEnabled=!0),F["SHADOW"+B]=!1,F["SHADOWCSM"+B]=!1,F["SHADOWCSMDEBUG"+B]=!1,F["SHADOWCSMNUM_CASCADES"+B]=!1,F["SHADOWCSMUSESHADOWMAXZ"+B]=!1,F["SHADOWCSMNOBLEND"+B]=!1,F["SHADOWCSM_RIGHTHANDED"+B]=!1,F["SHADOWPCF"+B]=!1,F["SHADOWPCSS"+B]=!1,F["SHADOWPOISSON"+B]=!1,F["SHADOWESM"+B]=!1,F["SHADOWCLOSEESM"+B]=!1,F["SHADOWCUBE"+B]=!1,F["SHADOWLOWQUALITY"+B]=!1,F["SHADOWMEDIUMQUALITY"+B]=!1,I&&I.receiveShadows&&V.shadowsEnabled&&A.shadowEnabled){const I=A.getShadowGenerator(V.activeCamera)??A.getShadowGenerator();if(I){const V=I.getShadowMap();V&&V.renderList&&V.renderList.length>0&&(H.shadowEnabled=!0,I.prepareDefines(F,B))}}A.lightmapMode!=Y.e.LIGHTMAP_DEFAULT?(H.lightmapMode=!0,F["LIGHTMAPEXCLUDED"+B]=!0,F["LIGHTMAPNOSPECULAR"+B]=A.lightmapMode==Y.e.LIGHTMAP_SHADOWSONLY):(F["LIGHTMAPEXCLUDED"+B]=!1,F["LIGHTMAPNOSPECULAR"+B]=!1)}function M(V,I,A,B,F){let E=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=function(V,I){let A=!1;if(V.activeCamera){const B=I.CAMERA_ORTHOGRAPHIC?1:0,F=I.CAMERA_PERSPECTIVE?1:0,E=1===V.activeCamera.mode?1:0,Y=0===V.activeCamera.mode?1:0;(B^E||F^Y)&&(I.CAMERA_ORTHOGRAPHIC=1===E,I.CAMERA_PERSPECTIVE=1===Y,A=!0)}return A}(V,B);!1!==E&&(c=(0,H.l)(A,V,B)),B.DEPTHPREPASS!==!I.getColorWrite()&&(B.DEPTHPREPASS=!B.DEPTHPREPASS,c=!0),B.INSTANCES!==F&&(B.INSTANCES=F,c=!0),B.THIN_INSTANCES!==Y&&(B.THIN_INSTANCES=Y,c=!0),c&&B.markAsUnprocessed()}function x(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]&&arguments[4],E=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!I._areAttributesDirty&&I._needNormals===I._normals&&I._needUVs===I._uvs)return!1;I._normals=I._needNormals,I._uvs=I._needUVs,I.NORMAL=I._needNormals&&V.isVerticesDataPresent("normal"),I._needNormals&&V.isVerticesDataPresent("tangent")&&(I.TANGENT=!0);for(let H=1;H<=6;++H)I["UV"+H]=!!I._needUVs&&V.isVerticesDataPresent(`uv${1===H?"":H}`);if(A){const A=V.useVertexColors&&V.isVerticesDataPresent("color");I.VERTEXCOLOR=A,I.VERTEXALPHA=V.hasVertexAlpha&&A&&E}return V.isVerticesDataPresent("instanceColor")&&(V.hasInstances||V.hasThinInstances)&&(I.INSTANCESCOLOR=!0),B&&function(V,I){if(V.useBones&&V.computeBonesUsingShaders&&V.skeleton){I.NUM_BONE_INFLUENCERS=V.numBoneInfluencers;const A=void 0!==I.BONETEXTURE;if(V.skeleton.isUsingTextureForMatrices&&A)I.BONETEXTURE=!0;else{I.BonesPerMesh=V.skeleton.bones.length+1,I.BONETEXTURE=!A&&void 0;const B=V.sV().prePassRenderer;if(B&&B.enabled){const A=-1===B.excludedSkinnedMesh.indexOf(V);I.BONES_VELOCITY_ENABLED=A}}}else I.NUM_BONE_INFLUENCERS=0,I.BonesPerMesh=0,void 0!==I.BONETEXTURE&&(I.BONETEXTURE=!1)}(V,I),F&&function(V,I){const A=V.morphTargetManager;A?(I.MORPHTARGETS_UV=A.supportsUVs&&I.UV1,I.MORPHTARGETS_UV2=A.supportsUV2s&&I.UV2,I.MORPHTARGETS_TANGENT=A.supportsTangents&&I.TANGENT,I.MORPHTARGETS_NORMAL=A.supportsNormals&&I.NORMAL,I.MORPHTARGETS_POSITION=A.supportsPositions,I.MORPHTARGETS_COLOR=A.supportsColors,I.MORPHTARGETTEXTURE_HASUVS=A.hasUVs,I.MORPHTARGETTEXTURE_HASUV2S=A.hasUV2s,I.MORPHTARGETTEXTURE_HASTANGENTS=A.hasTangents,I.MORPHTARGETTEXTURE_HASNORMALS=A.hasNormals,I.MORPHTARGETTEXTURE_HASPOSITIONS=A.hasPositions,I.MORPHTARGETTEXTURE_HASCOLORS=A.hasColors,I.NUM_MORPH_INFLUENCERS=A.numMaxInfluencers||A.numInfluencers,I.MORPHTARGETS=I.NUM_MORPH_INFLUENCERS>0,I.MORPHTARGETS_TEXTURE=A.isUsingTextureForTargets):(I.MORPHTARGETS_UV=!1,I.MORPHTARGETS_UV2=!1,I.MORPHTARGETS_TANGENT=!1,I.MORPHTARGETS_NORMAL=!1,I.MORPHTARGETS_POSITION=!1,I.MORPHTARGETS_COLOR=!1,I.MORPHTARGETTEXTURE_HASUVS=!1,I.MORPHTARGETTEXTURE_HASUV2S=!1,I.MORPHTARGETTEXTURE_HASTANGENTS=!1,I.MORPHTARGETTEXTURE_HASNORMALS=!1,I.MORPHTARGETTEXTURE_HASPOSITIONS=!1,I.MORPHTARGETTEXTURE_HAS_COLORS=!1,I.MORPHTARGETS=!1,I.NUM_MORPH_INFLUENCERS=0)}(V,I),Y&&function(V,I){const A=V.bakedVertexAnimationManager;I.BAKED_VERTEX_ANIMATION_TEXTURE=!(!A||!A.isEnabled)}(V,I),!0}function f(V,I){if(V.activeCamera){const A=I.MULTIVIEW;I.MULTIVIEW=null!==V.activeCamera.outputRenderTarget&&V.activeCamera.outputRenderTarget.getViewCount()>1,I.MULTIVIEW!=A&&I.markAsUnprocessed()}}function R(V,I,A){const B=I.ORDER_INDEPENDENT_TRANSPARENCY,F=I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;I.ORDER_INDEPENDENT_TRANSPARENCY=V.useOrderIndependentTransparency&&A,I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!V.getEngine().getCaps().textureFloatLinearFiltering,B===I.ORDER_INDEPENDENT_TRANSPARENCY&&F===I.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||I.markAsUnprocessed()}function q(V,I,A){const B=I.PREPASS;if(!I._arePrePassDirty)return;const F=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(V.prePassRenderer&&V.prePassRenderer.enabled&&A){I.PREPASS=!0,I.SCENE_MRT_COUNT=V.prePassRenderer.mrtCount,I.PREPASS_NORMAL_WORLDSPACE=V.prePassRenderer.generateNormalsInWorldSpace,I.PREPASS_COLOR=!0,I.PREPASS_COLOR_INDEX=0;for(let A=0;A<F.length;A++){const B=V.prePassRenderer.getIndex(F[A].type);-1!==B?(I[F[A].define]=!0,I[F[A].index]=B):I[F[A].define]=!1}}else{I.PREPASS=!1;for(let V=0;V<F.length;V++)I[F[V].define]=!1}I.PREPASS!=B&&(I.markAsUnprocessed(),I.markAsImageProcessingDirty())}function N(V,I,A,B){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];F&&F.push("Light"+V),E||(I.push("vLightData"+V,"vLightDiffuse"+V,"vLightSpecular"+V,"vLightDirection"+V,"vLightWidth"+V,"vLightHeight"+V,"vLightFalloff"+V,"vLightGround"+V,"lightMatrix"+V,"shadowsInfo"+V,"depthValues"+V),A.push("shadowTexture"+V),A.push("depthTexture"+V),I.push("viewFrustumZ"+V,"cascadeBlendFactor"+V,"lightSizeUVCorrection"+V,"depthCorrection"+V,"penumbraDarkness"+V,"frustumLengths"+V),B&&(A.push("projectionLightTexture"+V),I.push("textureProjectionMatrix"+V)),Y&&A.push("iesLightTexture"+V))}function l(V,I,A){let B,F,E=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(V.uniformsNames){const Y=V;B=Y.uniformsNames,F=Y.uniformBuffersNames,I=Y.samplers,A=Y.defines,E=Y.maxSimultaneousLights||0}else B=V,I||(I=[]);for(let Y=0;Y<E&&A["LIGHT"+Y];Y++)N(Y,B,I,A["PROJECTEDLIGHTTEXTURE"+Y],F,!1,A["IESLIGHTTEXTURE"+Y]);A.NUM_MORPH_INFLUENCERS&&(B.push("morphTargetInfluences"),B.push("morphTargetCount")),A.BAKED_VERTEX_ANIMATION_TEXTURE&&(B.push("bakedVertexAnimationSettings"),B.push("bakedVertexAnimationTextureSizeInverted"),B.push("bakedVertexAnimationTime"),I.push("bakedVertexAnimationTexture"))}},11553:(V,I,A)=>{A.d(I,{e:()=>E});var B=A(11231),F=A(11561);class E extends F.c{constructor(V,I){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(V,I,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new B.Matrix,this._storeEffectOnSubMeshes=A}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(V,I){return!!V&&(!this._storeEffectOnSubMeshes||(!V.IH||0===V.IH.length||this.isReadyForSubMesh(V,V.IH[0],I)))}_isReadyForSubMesh(V){const I=V.materialDefines;return!(this.checkReadyOnEveryCall||!V.effect||!I||I._renderId!==this.sV().getRenderId())}bindOnlyWorldMatrix(V){this._activeEffect.setMatrix("world",V)}bindOnlyNormalMatrix(V){this._activeEffect.setMatrix("normalMatrix",V)}bind(V,I){I&&this.bindForSubMesh(V,I,I.IH[0])}_afterBind(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,A=arguments.length>2?arguments[2]:void 0;super._afterBind(V,I,A),this.sV()._cachedEffect=I,A?A._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return A._drawWrapper._forceRebindOnNextCall||V.isCachedMaterialInvalid(this,I,B)}dispose(V,I,A){this._activeEffect=void 0,super.dispose(V,I,A)}}},11589:(V,I,A)=>{A.d(I,{b:()=>H,f:()=>c});var B=A(11213),F=A(11231),E=A(11222);class Y{static extractMinAndMaxIndexed(V,I,A,B,F,E){for(let Y=A;Y<A+B;Y++){const A=3*I[Y],B=V[A],H=V[A+1],c=V[A+2];F.minimizeInPlaceFromFloats(B,H,c),E.maximizeInPlaceFromFloats(B,H,c)}}static extractMinAndMax(V,I,A,B,F,E){for(let Y=I,H=I*B;Y<I+A;Y++,H+=B){const I=V[H],A=V[H+1],B=V[H+2];F.minimizeInPlaceFromFloats(I,A,B),E.maximizeInPlaceFromFloats(I,A,B)}}}function H(V,I,A,B){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const H=new F.tI(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),c=new F.tI(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return Y.extractMinAndMaxIndexed(V,I,A,B,H,c),E&&(H.x-=H.x*E.x+E.y,H.y-=H.y*E.x+E.y,H.z-=H.z*E.x+E.y,c.x+=c.x*E.x+E.y,c.y+=c.y*E.x+E.y,c.z+=c.z*E.x+E.y),{minimum:H,maximum:c}}function c(V,I,A){let B=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,E=arguments.length>4?arguments[4]:void 0;const H=new F.tI(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),c=new F.tI(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return E||(E=3),Y.extractMinAndMax(V,I,A,E,H,c),B&&(H.x-=H.x*B.x+B.y,H.y-=H.y*B.x+B.y,H.z-=H.z*B.x+B.y,c.x+=c.x*B.x+B.y,c.y+=c.y*B.x+B.y,c.z+=c.z*B.x+B.y),{minimum:H,maximum:c}}(0,B.b)([E.f.filter((function(){for(var V=arguments.length,I=new Array(V),A=0;A<V;A++)I[A]=arguments[A];let[B,F]=I;return!Array.isArray(B)&&!Array.isArray(F)}))],Y,"extractMinAndMaxIndexed",null),(0,B.b)([E.f.filter((function(){for(var V=arguments.length,I=new Array(V),A=0;A<V;A++)I[A]=arguments[A];let[B]=I;return!Array.isArray(B)}))],Y,"extractMinAndMax",null)},11563:(V,I,A)=>{A.d(I,{e:()=>c});var B=A(11300),F=A(11568),E=A(11571),Y=A(11589),H=A(11347);class c{get materialDefines(){var V;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(V=this._getDrawWrapper())||void 0===V?void 0:V.defines}set materialDefines(V){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=V}_getDrawWrapper(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];V=V??this._engine.currentRenderPassId;let A=this._drawWrappers[V];return!A&&I&&(this._drawWrappers[V]=A=new H.e(this._mesh.sV().getEngine())),A}_removeDrawWrapper(V){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var A;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(A=this._drawWrappers[V])||void 0===A||A.dispose(I));this._drawWrappers[V]=void 0}get effect(){var V;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(V=this._getDrawWrapper())||void 0===V?void 0:V.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(V){this._mainDrawWrapperOverride=V}setEffect(V){let I=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,A=arguments.length>2?arguments[2]:void 0,B=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const F=this._drawWrapper;F.setEffect(V,I,B),void 0!==A&&(F.materialContext=A),V||(F.defines=null,F.materialContext=void 0)}resetDrawCache(V){let I=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==V)return void this._removeDrawWrapper(V,!0,I);for(const V of this._drawWrappers)null===V||void 0===V||V.dispose(I)}this._drawWrappers=[]}static AddToMesh(V,I,A,B,F,E,Y){return new c(V,I,A,B,F,E,Y,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(V,I,A,B,F,E,Y){let H=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],c=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=V,this.verticesStart=I,this.verticesCount=A,this.indexStart=B,this.indexCount=F,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=E,this._renderingMesh=Y||E,c&&E.IH.push(this),this._engine=this._mesh.sV().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=E.IH.length-1,H&&(this.refreshBoundingInfo(),E.YH(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(V){return this._boundingInfo=V,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const V=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return V||this._renderingMesh}lV(){let V=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const I=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!I)return V&&this._mesh.sV()._hasDefaultMaterial?this._mesh.sV().defaultMaterial:null;if(this._isMultiMaterial(I)){const V=I.getSubMaterial(this.materialIndex);return this._currentMaterial!==V&&(this._currentMaterial=V,this.resetDrawCache()),V}return I}_isMultiMaterial(V){return void 0!==V.getSubMaterial}refreshBoundingInfo(){let V=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.HH)return this;if(V||(V=this._renderingMesh.getVerticesData(B.g.PositionKind)),!V)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const I=this._renderingMesh.cH();let A;if(0===this.indexStart&&this.indexCount===I.length){const V=this._renderingMesh.getBoundingInfo();A={minimum:V.minimum.clone(),maximum:V.maximum.clone()}}else A=(0,Y.b)(V,I,this.indexStart,this.indexCount,this._renderingMesh.HH.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(A.minimum,A.maximum):this._boundingInfo=new E.d(A.minimum,A.maximum),this}_checkCollision(V){return this.getBoundingInfo()._checkCollision(V)}updateBoundingInfo(V){let I=this.getBoundingInfo();return I||(this.refreshBoundingInfo(),I=this.getBoundingInfo()),I&&I.update(V),this}isInFrustum(V){const I=this.getBoundingInfo();return!!I&&I.isInFrustum(V,this._mesh.hJ)}isCompletelyInFrustum(V){const I=this.getBoundingInfo();return!!I&&I.isCompletelyInFrustum(V)}render(V){return this._renderingMesh.render(this,V,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(V,I){if(!this._linesIndexBuffer){const A=6*Math.floor(this.indexCount/3),B=this.verticesStart+this.verticesCount>65535?new Uint32Array(A):new Uint16Array(A);let F=0;if(0===V.length)for(let V=this.indexStart;V<this.indexStart+this.indexCount;V+=3)B[F++]=V,B[F++]=V+1,B[F++]=V+1,B[F++]=V+2,B[F++]=V+2,B[F++]=V;else for(let I=this.indexStart;I<this.indexStart+this.indexCount;I+=3)B[F++]=V[I],B[F++]=V[I+1],B[F++]=V[I+1],B[F++]=V[I+2],B[F++]=V[I+2],B[F++]=V[I];this._linesIndexBuffer=I.createIndexBuffer(B),this._linesIndexCount=B.length}return this._linesIndexBuffer}canIntersects(V){const I=this.getBoundingInfo();return!!I&&V.intersectsBox(I.boundingBox)}intersects(V,I,A,B,F){const E=this.lV();if(!E)return null;let Y=3,H=!1;switch(E.fillMode){case 3:case 5:case 6:case 8:return null;case 7:Y=1,H=!0}return 4===E.fillMode?A.length?this._intersectLines(V,I,A,this._mesh.intersectionThreshold,B):this._intersectUnIndexedLines(V,I,A,this._mesh.intersectionThreshold,B):!A.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(V,I,A,B,F):this._intersectTriangles(V,I,A,Y,H,B,F)}_intersectLines(V,I,A,B,E){let Y=null;for(let H=this.indexStart;H<this.indexStart+this.indexCount;H+=2){const c=I[A[H]],b=I[A[H+1]],X=V.intersectionSegment(c,b,B);if(!(X<0)&&((E||!Y||X<Y.distance)&&(Y=new F.e(null,null,X),Y.faceId=H/2,E)))break}return Y}_intersectUnIndexedLines(V,I,A,B,E){let Y=null;for(let H=this.verticesStart;H<this.verticesStart+this.verticesCount;H+=2){const A=I[H],c=I[H+1],b=V.intersectionSegment(A,c,B);if(!(b<0)&&((E||!Y||b<Y.distance)&&(Y=new F.e(null,null,b),Y.faceId=H/2,E)))break}return Y}_intersectTriangles(V,I,A,B,F,E,Y){let H=null,c=-1;for(let b=this.indexStart;b<this.indexStart+this.indexCount-(3-B);b+=B){c++;const B=A[b],X=A[b+1],P=A[b+2];if(F&&4294967295===P){b+=2;continue}const J=I[B],G=I[X],w=I[P];if(!J||!G||!w)continue;if(Y&&!Y(J,G,w,V,B,X,P))continue;const t=V.intersectsTriangle(J,G,w);if(t){if(t.distance<0)continue;if((E||!H||t.distance<H.distance)&&(H=t,H.faceId=c,E))break}}return H}_intersectUnIndexedTriangles(V,I,A,B,F){let E=null;for(let Y=this.verticesStart;Y<this.verticesStart+this.verticesCount;Y+=3){const A=I[Y],H=I[Y+1],c=I[Y+2];if(F&&!F(A,H,c,V,-1,-1,-1))continue;const b=V.intersectsTriangle(A,H,c);if(b){if(b.distance<0)continue;if((B||!E||b.distance<E.distance)&&(E=b,E.faceId=Y/3,B))break}}return E}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(V,I){const A=new c(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,V,I,!1);if(!this.IsGlobal){const V=this.getBoundingInfo();if(!V)return A;A._boundingInfo=new E.d(V.minimum,V.maximum)}return A}dispose(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.sV().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const I=this._mesh.IH.indexOf(this);this._mesh.IH.splice(I,1),this.resetDrawCache(void 0,V)}getClassName(){return"SubMesh"}static CreateFromIndices(V,I,A,B,F){let E=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],Y=Number.MAX_VALUE,H=-Number.MAX_VALUE;const b=(F||B).cH();for(let c=I;c<I+A;c++){const V=b[c];V<Y&&(Y=V),V>H&&(H=V)}return new c(V,Y,H-Y+1,I,A,B,F,E)}}}}]);