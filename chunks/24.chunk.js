"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[24],{11530:(P,f,Y)=>{Y.d(f,{e:()=>C});class C{constructor(P,f,Y){this.bu=P,this.bv=f,this.distance=Y,this.faceId=0,this.subMeshId=0}}},11542:(P,f,Y)=>{Y.d(f,{d:()=>L});var C=Y(11196),q=Y(11179),m=Y(11187);class L{constructor(P,f,Y){this.vectors=(0,C.d)(8,q.Of.Zero),this.center=q.Of.Zero(),this.centerWorld=q.Of.Zero(),this.extendSize=q.Of.Zero(),this.extendSizeWorld=q.Of.Zero(),this.directions=(0,C.d)(3,q.Of.Zero),this.vectorsWorld=(0,C.d)(8,q.Of.Zero),this.minimumWorld=q.Of.Zero(),this.maximumWorld=q.Of.Zero(),this.minimum=q.Of.Zero(),this.maximum=q.Of.Zero(),this._drawWrapperFront=null,this._drawWrapperBack=null,this.reConstruct(P,f,Y)}reConstruct(P,f,Y){const C=P.x,m=P.y,L=P.z,o=f.x,w=f.y,d=f.z,R=this.vectors;this.minimum.do(C,m,L),this.maximum.do(o,w,d),R[0].do(C,m,L),R[1].do(o,w,d),R[2].do(o,m,L),R[3].do(C,w,L),R[4].do(C,m,d),R[5].do(o,w,L),R[6].do(C,w,d),R[7].do(o,m,d),f.addToRef(P,this.center).scaleInPlace(.5),f.subtractToRef(P,this.extendSize).scaleInPlace(.5),this._worldMatrix=Y||q.Matrix.IdentityReadOnly,this._update(this._worldMatrix)}scale(P){const f=L._TmpVector3,Y=this.maximum.subtractToRef(this.minimum,f[0]),C=Y.length();Y.normalizeFromLength(C);const q=C*P,m=Y.scaleInPlace(.5*q),o=this.center.subtractToRef(m,f[1]),w=this.center.addToRef(m,f[2]);return this.reConstruct(o,w,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(P){const f=this.minimumWorld,Y=this.maximumWorld,C=this.directions,m=this.vectorsWorld,L=this.vectors;if(P.isIdentity()){f.q(this.minimum),Y.q(this.maximum);for(let P=0;P<8;++P)m[P].q(L[P]);this.extendSizeWorld.q(this.extendSize),this.centerWorld.q(this.center)}else{f.yo(Number.MAX_VALUE),Y.yo(-Number.MAX_VALUE);for(let C=0;C<8;++C){const o=m[C];q.Of.TransformCoordinatesToRef(L[C],P,o),f.minimizeInPlace(o),Y.maximizeInPlace(o)}Y.subtractToRef(f,this.extendSizeWorld).scaleInPlace(.5),Y.addToRef(f,this.centerWorld).scaleInPlace(.5)}q.Of.FromArrayToRef(P.m,0,C[0]),q.Of.FromArrayToRef(P.m,4,C[1]),q.Of.FromArrayToRef(P.m,8,C[2]),this._worldMatrix=P}isInFrustum(P){return L.IsInFrustum(this.vectorsWorld,P)}isCompletelyInFrustum(P){return L.IsCompletelyInFrustum(this.vectorsWorld,P)}intersectsPoint(P){const f=this.minimumWorld,Y=this.maximumWorld,C=f.x,q=f.y,L=f.z,o=Y.x,w=Y.y,d=Y.z,R=P.x,y=P.y,r=P.z,i=-m.c;return!(o-R<i||i>R-C)&&(!(w-y<i||i>y-q)&&!(d-r<i||i>r-L))}intersectsSphere(P){return L.IntersectsSphere(this.minimumWorld,this.maximumWorld,P.centerWorld,P.radiusWorld)}intersectsMinMax(P,f){const Y=this.minimumWorld,C=this.maximumWorld,q=Y.x,m=Y.y,L=Y.z,o=C.x,w=C.y,d=C.z,R=P.x,y=P.y,r=P.z,i=f.x,u=f.y,g=f.z;return!(o<R||q>i)&&(!(w<y||m>u)&&!(d<r||L>g))}dispose(){var P,f;null===(P=this._drawWrapperFront)||void 0===P||P.dispose(),null===(f=this._drawWrapperBack)||void 0===f||f.dispose()}static Intersects(P,f){return P.intersectsMinMax(f.minimumWorld,f.maximumWorld)}static IntersectsSphere(P,f,Y,C){const m=L._TmpVector3[0];q.Of.ClampToRef(Y,P,f,m);return q.Of.DistanceSquared(Y,m)<=C*C}static IsCompletelyInFrustum(P,f){for(let Y=0;Y<6;++Y){const C=f[Y];for(let f=0;f<8;++f)if(C.dotCoordinate(P[f])<0)return!1}return!0}static IsInFrustum(P,f){for(let Y=0;Y<6;++Y){let C=!0;const q=f[Y];for(let f=0;f<8;++f)if(q.dotCoordinate(P[f])>=0){C=!1;break}if(C)return!1}return!0}}L._TmpVector3=(0,C.d)(3,q.Of.Zero)},11533:(P,f,Y)=>{Y.d(f,{c:()=>y});var C=Y(11196),q=Y(11179),m=Y(11542),L=Y(11545);const o={min:0,max:0},w={min:0,max:0},d=(P,f,Y)=>{const C=q.Of.Dot(f.centerWorld,P),m=Math.abs(q.Of.Dot(f.directions[0],P))*f.extendSize.x+Math.abs(q.Of.Dot(f.directions[1],P))*f.extendSize.y+Math.abs(q.Of.Dot(f.directions[2],P))*f.extendSize.z;Y.min=C-m,Y.max=C+m},R=(P,f,Y)=>(d(P,f,o),d(P,Y,w),!(o.min>w.max||w.min>o.max));class y{constructor(P,f,Y){this._isLocked=!1,this.boundingBox=new m.d(P,f,Y),this.boundingSphere=new L.e(P,f,Y)}reConstruct(P,f,Y){this.boundingBox.reConstruct(P,f,Y),this.boundingSphere.reConstruct(P,f,Y)}get minimum(){return this.boundingBox.minimum}get maximum(){return this.boundingBox.maximum}get isLocked(){return this._isLocked}set isLocked(P){this._isLocked=P}update(P){this._isLocked||(this.boundingBox._update(P),this.boundingSphere._update(P))}centerOn(P,f){const Y=y._TmpVector3[0].q(P).Ly(f),C=y._TmpVector3[1].q(P).addInPlace(f);return this.boundingBox.reConstruct(Y,C,this.boundingBox.getWorldMatrix()),this.boundingSphere.reConstruct(Y,C,this.boundingBox.getWorldMatrix()),this}encapsulate(P){const f=q.Of.Minimize(this.minimum,P),Y=q.Of.Maximize(this.maximum,P);return this.reConstruct(f,Y,this.boundingBox.getWorldMatrix()),this}encapsulateBoundingInfo(P){const f=q.TmpVectors.Matrix[0];this.boundingBox.getWorldMatrix().invertToRef(f);const Y=q.TmpVectors.Of[0];return q.Of.TransformCoordinatesToRef(P.boundingBox.minimumWorld,f,Y),this.encapsulate(Y),q.Of.TransformCoordinatesToRef(P.boundingBox.maximumWorld,f,Y),this.encapsulate(Y),this}scale(P){return this.boundingBox.scale(P),this.boundingSphere.scale(P),this}isInFrustum(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((2===f||3===f)&&this.boundingSphere.isCenterInFrustum(P))return!0;if(!this.boundingSphere.isInFrustum(P))return!1;return!(1!==f&&3!==f)||this.boundingBox.isInFrustum(P)}get diagonalLength(){const P=this.boundingBox;return P.maximumWorld.subtractToRef(P.minimumWorld,y._TmpVector3[0]).length()}isCompletelyInFrustum(P){return this.boundingBox.isCompletelyInFrustum(P)}_checkCollision(P){return P._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)}intersectsPoint(P){return!!this.boundingSphere.centerWorld&&(!!this.boundingSphere.intersectsPoint(P)&&!!this.boundingBox.intersectsPoint(P))}intersects(P,f){if(!L.e.Intersects(this.boundingSphere,P.boundingSphere))return!1;if(!m.d.Intersects(this.boundingBox,P.boundingBox))return!1;if(!f)return!0;const Y=this.boundingBox,C=P.boundingBox;return!!R(Y.directions[0],Y,C)&&(!!R(Y.directions[1],Y,C)&&(!!R(Y.directions[2],Y,C)&&(!!R(C.directions[0],Y,C)&&(!!R(C.directions[1],Y,C)&&(!!R(C.directions[2],Y,C)&&(!!R(q.Of.Cross(Y.directions[0],C.directions[0]),Y,C)&&(!!R(q.Of.Cross(Y.directions[0],C.directions[1]),Y,C)&&(!!R(q.Of.Cross(Y.directions[0],C.directions[2]),Y,C)&&(!!R(q.Of.Cross(Y.directions[1],C.directions[0]),Y,C)&&(!!R(q.Of.Cross(Y.directions[1],C.directions[1]),Y,C)&&(!!R(q.Of.Cross(Y.directions[1],C.directions[2]),Y,C)&&(!!R(q.Of.Cross(Y.directions[2],C.directions[0]),Y,C)&&(!!R(q.Of.Cross(Y.directions[2],C.directions[1]),Y,C)&&!!R(q.Of.Cross(Y.directions[2],C.directions[2]),Y,C))))))))))))))}}y._TmpVector3=(0,C.d)(2,q.Of.Zero)},11545:(P,f,Y)=>{Y.d(f,{e:()=>m});var C=Y(11196),q=Y(11179);class m{constructor(P,f,Y){this.center=q.Of.Zero(),this.centerWorld=q.Of.Zero(),this.minimum=q.Of.Zero(),this.maximum=q.Of.Zero(),this.reConstruct(P,f,Y)}reConstruct(P,f,Y){this.minimum.q(P),this.maximum.q(f);const C=q.Of.Distance(P,f);f.addToRef(P,this.center).scaleInPlace(.5),this.radius=.5*C,this._update(Y||q.Matrix.IdentityReadOnly)}scale(P){const f=this.radius*P,Y=m._TmpVector3,C=Y[0].yo(f),q=this.center.subtractToRef(C,Y[1]),L=this.center.addToRef(C,Y[2]);return this.reConstruct(q,L,this._worldMatrix),this}getWorldMatrix(){return this._worldMatrix}_update(P){if(P.isIdentity())this.centerWorld.q(this.center),this.radiusWorld=this.radius;else{q.Of.TransformCoordinatesToRef(this.center,P,this.centerWorld);const f=m._TmpVector3[0];q.Of.TransformNormalFromFloatsToRef(1,1,1,P,f),this.radiusWorld=Math.max(Math.abs(f.x),Math.abs(f.y),Math.abs(f.z))*this.radius}}isInFrustum(P){const f=this.centerWorld,Y=this.radiusWorld;for(let C=0;C<6;C++)if(P[C].dotCoordinate(f)<=-Y)return!1;return!0}isCenterInFrustum(P){const f=this.centerWorld;for(let Y=0;Y<6;Y++)if(P[Y].dotCoordinate(f)<0)return!1;return!0}intersectsPoint(P){const f=q.Of.DistanceSquared(this.centerWorld,P);return!(this.radiusWorld*this.radiusWorld<f)}static Intersects(P,f){const Y=q.Of.DistanceSquared(P.centerWorld,f.centerWorld),C=P.radiusWorld+f.radiusWorld;return!(C*C<Y)}static CreateFromCenterAndRadius(P,f,Y){this._TmpVector3[0].q(P),this._TmpVector3[1].do(0,0,f),this._TmpVector3[2].q(P),this._TmpVector3[0].addInPlace(this._TmpVector3[1]),this._TmpVector3[2].Ly(this._TmpVector3[1]);const C=new m(this._TmpVector3[0],this._TmpVector3[2]);return C._worldMatrix=Y||q.Matrix.Identity(),C}}m._TmpVector3=(0,C.d)(3,q.Of.Zero)},11561:(P,f,Y)=>{function C(P){-1===P.indexOf("vClipPlane")&&P.push("vClipPlane"),-1===P.indexOf("vClipPlane2")&&P.push("vClipPlane2"),-1===P.indexOf("vClipPlane3")&&P.push("vClipPlane3"),-1===P.indexOf("vClipPlane4")&&P.push("vClipPlane4"),-1===P.indexOf("vClipPlane5")&&P.push("vClipPlane5"),-1===P.indexOf("vClipPlane6")&&P.push("vClipPlane6")}function q(P,f,Y){const C=!!(P.clipPlane??f.clipPlane),q=!!(P.clipPlane2??f.clipPlane2),m=!!(P.clipPlane3??f.clipPlane3),L=!!(P.clipPlane4??f.clipPlane4),o=!!(P.clipPlane5??f.clipPlane5),w=!!(P.clipPlane6??f.clipPlane6);C&&Y.push("#define CLIPPLANE"),q&&Y.push("#define CLIPPLANE2"),m&&Y.push("#define CLIPPLANE3"),L&&Y.push("#define CLIPPLANE4"),o&&Y.push("#define CLIPPLANE5"),w&&Y.push("#define CLIPPLANE6")}function m(P,f,Y){let C=!1;const q=!!(P.clipPlane??f.clipPlane),m=!!(P.clipPlane2??f.clipPlane2),L=!!(P.clipPlane3??f.clipPlane3),o=!!(P.clipPlane4??f.clipPlane4),w=!!(P.clipPlane5??f.clipPlane5),d=!!(P.clipPlane6??f.clipPlane6);return Y.CLIPPLANE!==q&&(Y.CLIPPLANE=q,C=!0),Y.CLIPPLANE2!==m&&(Y.CLIPPLANE2=m,C=!0),Y.CLIPPLANE3!==L&&(Y.CLIPPLANE3=L,C=!0),Y.CLIPPLANE4!==o&&(Y.CLIPPLANE4=o,C=!0),Y.CLIPPLANE5!==w&&(Y.CLIPPLANE5=w,C=!0),Y.CLIPPLANE6!==d&&(Y.CLIPPLANE6=d,C=!0),C}function L(P,f,Y){let C=f.clipPlane??Y.clipPlane;o(P,"vClipPlane",C),C=f.clipPlane2??Y.clipPlane2,o(P,"vClipPlane2",C),C=f.clipPlane3??Y.clipPlane3,o(P,"vClipPlane3",C),C=f.clipPlane4??Y.clipPlane4,o(P,"vClipPlane4",C),C=f.clipPlane5??Y.clipPlane5,o(P,"vClipPlane5",C),C=f.clipPlane6??Y.clipPlane6,o(P,"vClipPlane6",C)}function o(P,f,Y){Y&&P.setFloat4(f,Y.normal.x,Y.normal.y,Y.normal.z,Y.d)}Y.d(f,{d:()=>C,f:()=>L,h:()=>m,l:()=>q})},11511:(P,f,Y)=>{Y.d(f,{d:()=>C});class C{constructor(){this._defines={},this._currentRank=32,this._maxRank=-1,this._mesh=null}unBindMesh(){this._mesh=null}addFallback(P,f){this._defines[P]||(P<this._currentRank&&(this._currentRank=P),P>this._maxRank&&(this._maxRank=P),this._defines[P]=new Array),this._defines[P].push(f)}addCPUSkinningFallback(P,f){this._mesh=f,P<this._currentRank&&(this._currentRank=P),P>this._maxRank&&(this._maxRank=P)}get hasMoreFallbacks(){return this._currentRank<=this._maxRank}reduce(P,f){if(this._mesh&&this._mesh.computeBonesUsingShaders&&this._mesh.numBoneInfluencers>0){this._mesh.computeBonesUsingShaders=!1,P=P.replace("#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),f._bonesComputationForcedToCPU=!0;const Y=this._mesh.vP();for(let P=0;P<Y.meshes.length;P++){const C=Y.meshes[P];if(C.material){if(C.computeBonesUsingShaders&&0!==C.numBoneInfluencers)if(C.material.getEffect()===f)C.computeBonesUsingShaders=!1;else if(C.Jf)for(const P of C.Jf){if(P.effect===f){C.computeBonesUsingShaders=!1;break}}}else!this._mesh.material&&C.computeBonesUsingShaders&&C.numBoneInfluencers>0&&(C.computeBonesUsingShaders=!1)}}else{const f=this._defines[this._currentRank];if(f)for(let Y=0;Y<f.length;Y++)P=P.replace("#define "+f[Y],"");this._currentRank++}return P}}},11524:(P,f,Y)=>{Y.d(f,{d:()=>S});var C=Y(11165),q=Y(11170),m=Y(11014),L=Y(11018),o=Y(11052),w=Y(11526),d=Y(11455),R=Y(11025),y=Y(11230),r=Y(11304),i=Y(11216);class u{constructor(){this.reset()}reset(){this.enabled=!1,this.mask=255,this.func=519,this.funcRef=1,this.funcMask=255,this.opStencilFail=7680,this.opDepthFail=7680,this.opStencilDepthPass=7681}get func(){return this._func}set func(P){this._func=P}get funcRef(){return this._funcRef}set funcRef(P){this._funcRef=P}get funcMask(){return this._funcMask}set funcMask(P){this._funcMask=P}get opStencilFail(){return this._opStencilFail}set opStencilFail(P){this._opStencilFail=P}get opDepthFail(){return this._opDepthFail}set opDepthFail(P){this._opDepthFail=P}get opStencilDepthPass(){return this._opStencilDepthPass}set opStencilDepthPass(P){this._opStencilDepthPass=P}get mask(){return this._mask}set mask(P){this._mask=P}get enabled(){return this._enabled}set enabled(P){this._enabled=P}getClassName(){return"MaterialStencilState"}copyTo(P){i.e.Clone((()=>P),this)}serialize(){return i.e.Serialize(this)}parse(P,f,Y){i.e.Parse((()=>this),P,f,Y)}}(0,C.b)([(0,q.F)()],u.prototype,"func",null),(0,C.b)([(0,q.F)()],u.prototype,"funcRef",null),(0,C.b)([(0,q.F)()],u.prototype,"funcMask",null),(0,C.b)([(0,q.F)()],u.prototype,"opStencilFail",null),(0,C.b)([(0,q.F)()],u.prototype,"opDepthFail",null),(0,C.b)([(0,q.F)()],u.prototype,"opStencilDepthPass",null),(0,C.b)([(0,q.F)()],u.prototype,"mask",null),(0,C.b)([(0,q.F)()],u.prototype,"enabled",null);var g=Y(11555);class S{get _supportGlowLayer(){return!1}set _glowModeEnabled(P){}get shaderLanguage(){return this._shaderLanguage}get canRenderToMRT(){return!1}set alpha(P){if(this._alpha===P)return;const f=this._alpha;this._alpha=P,1!==f&&1!==P||this.Ed(S.MiscDirtyFlag+S.PrePassDirtyFlag)}get alpha(){return this._alpha}set XL(P){this._backFaceCulling!==P&&(this._backFaceCulling=P,this.Ed(S.TextureDirtyFlag))}get XL(){return this._backFaceCulling}set cullBackFaces(P){this._cullBackFaces!==P&&(this._cullBackFaces=P,this.Ed(S.TextureDirtyFlag))}get cullBackFaces(){return this._cullBackFaces}get blockDirtyMechanism(){return this._blockDirtyMechanism}set blockDirtyMechanism(P){this._blockDirtyMechanism!==P&&(this._blockDirtyMechanism=P,P||this.Fy())}atomicMaterialsUpdate(P){this.blockDirtyMechanism=!0;try{P(this)}finally{this.blockDirtyMechanism=!1}}get hasRenderTargetTextures(){return this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._eventInfo.hasRenderTargetTextures}set onDispose(P){this._onDisposeObserver&&this.vf.remove(this._onDisposeObserver),this._onDisposeObserver=this.vf.add(P)}get onBindObservable(){return this._onBindObservable||(this._onBindObservable=new L.e),this._onBindObservable}set onBind(P){this._onBindObserver&&this.onBindObservable.remove(this._onBindObserver),this._onBindObserver=this.onBindObservable.add(P)}get onUnBindObservable(){return this._onUnBindObservable||(this._onUnBindObservable=new L.e),this._onUnBindObservable}get onEffectCreatedObservable(){return this._onEffectCreatedObservable||(this._onEffectCreatedObservable=new L.e),this._onEffectCreatedObservable}set alphaMode(P){this._alphaMode!==P&&(this._alphaMode=P,this.Ed(S.TextureDirtyFlag))}get alphaMode(){return this._alphaMode}set needDepthPrePass(P){this._needDepthPrePass!==P&&(this._needDepthPrePass=P,this._needDepthPrePass&&(this.checkReadyOnEveryCall=!0))}get needDepthPrePass(){return this._needDepthPrePass}get isPrePassCapable(){return!1}set fogEnabled(P){this._fogEnabled!==P&&(this._fogEnabled=P,this.Ed(S.MiscDirtyFlag))}get fogEnabled(){return this._fogEnabled}get wireframe(){switch(this._fillMode){case S.WireFrameFillMode:case S.LineListDrawMode:case S.LineLoopDrawMode:case S.LineStripDrawMode:return!0}return this._scene.forceWireframe}set wireframe(P){this.fillMode=P?S.WireFrameFillMode:S.TriangleFillMode}get pointsCloud(){switch(this._fillMode){case S.PointFillMode:case S.PointListDrawMode:return!0}return this._scene.forcePointsCloud}set pointsCloud(P){this.fillMode=P?S.PointFillMode:S.TriangleFillMode}get fillMode(){return this._fillMode}set fillMode(P){this._fillMode!==P&&(this._fillMode=P,this.Ed(S.MiscDirtyFlag))}get useLogarithmicDepth(){return this._useLogarithmicDepth}set useLogarithmicDepth(P){const f=this.vP().getEngine().getCaps().fragmentDepthSupported;P&&!f&&R.e.Warn("Logarithmic depth has been requested for a material on a device that doesn't support it."),this._useLogarithmicDepth=P&&f,this._markAllSubMeshesAsMiscDirty()}_getDrawWrapper(){return this._drawWrapper}_setDrawWrapper(P){this._drawWrapper=P}constructor(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.shadowDepthWrapper=null,this.allowShaderHotSwapping=!0,this._shaderLanguage=0,this._forceGLSL=!1,this.metadata=null,this.reservedDataStore=null,this.checkReadyOnEveryCall=!1,this.checkReadyOnlyOnce=!1,this.state="",this._alpha=1,this._backFaceCulling=!0,this._cullBackFaces=!0,this._blockDirtyMechanism=!1,this.sideOrientation=null,this.onCompiled=null,this.onError=null,this.getRenderTargetTextures=null,this.doNotSerialize=!1,this._storeEffectOnSubMeshes=!1,this.animations=null,this.vf=new L.e,this._onDisposeObserver=null,this._onUnBindObservable=null,this._onBindObserver=null,this._alphaMode=2,this._needDepthPrePass=!1,this.disableDepthWrite=!1,this.disableColorWrite=!1,this.forceDepthWrite=!1,this.depthFunction=0,this.separateCullingPass=!1,this._fogEnabled=!0,this.pointSize=1,this.zOffset=0,this.zOffsetUnits=0,this.stencil=new u,this._useUBO=!1,this._fillMode=S.TriangleFillMode,this._cachedDepthWriteState=!1,this._cachedColorWriteState=!1,this._cachedDepthFunctionState=0,this._indexInSceneMaterialArray=-1,this.meshMap=null,this._parentContainer=null,this._uniformBufferLayoutBuilt=!1,this._eventInfo={},this._callbackPluginEventGeneric=()=>{},this._callbackPluginEventIsReadyForSubMesh=()=>{},this._callbackPluginEventPrepareDefines=()=>{},this._callbackPluginEventPrepareDefinesBeforeAttributes=()=>{},this._callbackPluginEventHardBindForSubMesh=()=>{},this._callbackPluginEventBindForSubMesh=()=>{},this._callbackPluginEventHasRenderTargetTextures=()=>{},this._callbackPluginEventFillRenderTargetTextures=()=>{},this._transparencyMode=null,this.name=P;const q=f||o.e.LastCreatedScene;q&&(this._scene=q,this._dirtyCallbacks={},this._forceGLSL=C,this._dirtyCallbacks[1]=this._markAllSubMeshesAsTexturesDirty.bind(this),this._dirtyCallbacks[2]=this._markAllSubMeshesAsLightsDirty.bind(this),this._dirtyCallbacks[4]=this._markAllSubMeshesAsFresnelDirty.bind(this),this._dirtyCallbacks[8]=this._markAllSubMeshesAsAttributesDirty.bind(this),this._dirtyCallbacks[16]=this._markAllSubMeshesAsMiscDirty.bind(this),this._dirtyCallbacks[32]=this._markAllSubMeshesAsPrePassDirty.bind(this),this._dirtyCallbacks[127]=this._markAllSubMeshesAsAllDirty.bind(this),this.id=P||m.Tools.RandomId(),this.uniqueId=this._scene.getUniqueId(),this._materialContext=this._scene.getEngine().createMaterialContext(),this._drawWrapper=new r.d(this._scene.getEngine(),!1),this._drawWrapper.materialContext=this._materialContext,this._uniformBuffer=new d.e(this._scene.getEngine(),void 0,void 0,P),this._useUBO=this.vP().getEngine().supportsUniformBuffers,this._createUniformBuffer(),Y||this._scene.addMaterial(this),this._scene.useMaterialMeshMap&&(this.meshMap={}),S.OnEventObservable.notifyObservers(this,1))}_createUniformBuffer(){var P;const f=this.vP().getEngine();null===(P=this._uniformBuffer)||void 0===P||P.dispose(),f.isWebGPU&&!this._forceGLSL?(this._uniformBuffer=new d.e(f,void 0,void 0,this.name,!0),this._shaderLanguage=1):this._uniformBuffer=new d.e(this._scene.getEngine(),void 0,void 0,this.name),this._uniformBufferLayoutBuilt=!1}toString(P){return"Name: "+this.name}getClassName(){return"Material"}get _isMaterial(){return!0}get isFrozen(){return this.checkReadyOnlyOnce}freeze(){this.Fy(),this.checkReadyOnlyOnce=!0}unfreeze(){this.Fy(),this.checkReadyOnlyOnce=!1}isReady(P,f){return!0}isReadyForSubMesh(P,f,Y){const C=f.materialDefines;return!!C&&(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=C,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),this._eventInfo.isReadyForSubMesh)}getEffect(){return this._drawWrapper.effect}vP(){return this._scene}_getEffectiveOrientation(P){return null!==this.sideOrientation?this.sideOrientation:P.sideOrientation}get transparencyMode(){return this._transparencyMode}set transparencyMode(P){this._transparencyMode!==P&&(this._transparencyMode=P,this._markAllSubMeshesAsTexturesAndMiscDirty())}get _hasTransparencyMode(){return null!=this._transparencyMode}get _transparencyModeIsBlend(){return this._transparencyMode===S.MATERIAL_ALPHABLEND||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _transparencyModeIsTest(){return this._transparencyMode===S.MATERIAL_ALPHATEST||this._transparencyMode===S.MATERIAL_ALPHATESTANDBLEND}get _disableAlphaBlending(){return this._transparencyMode===S.MATERIAL_OPAQUE||this._transparencyMode===S.MATERIAL_ALPHATEST}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&this.alpha<1}needAlphaBlendingForMesh(P){return this._hasTransparencyMode?this._transparencyModeIsBlend:P.visibility<1||!this._disableAlphaBlending&&(P.hasVertexAlpha||this.needAlphaBlending())}needAlphaTesting(){return!!this._hasTransparencyMode&&this._transparencyModeIsTest}needAlphaTestingForMesh(P){return this._hasTransparencyMode?this._transparencyModeIsTest:!this.needAlphaBlendingForMesh(P)&&this.needAlphaTesting()}getAlphaTestTexture(){return null}Fy(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const f=this.vP().meshes;for(const Y of f)if(Y.Jf)for(const f of Y.Jf)if(f.IP()===this)for(const Y of f._drawWrappers)Y&&this._materialContext===Y.materialContext&&(Y._wasPreviouslyReady=!1,Y._wasPreviouslyUsingInstances=null,Y._forceRebindOnNextCall=P);P&&this.Ed(S.AllDirtyFlag)}_preBind(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const Y=this._scene.getEngine(),C=(null==f?this.sideOrientation:f)===S.ClockWiseSideOrientation;return Y.enableEffect(P||this._getDrawWrapper()),Y.setState(this.XL,this.zOffset,!1,C,this._scene._mirroredCameraPosition?!this.cullBackFaces:this.cullBackFaces,this.stencil,this.zOffsetUnits),C}bind(P,f){}buildUniformLayout(){const P=this._uniformBuffer;this._eventInfo.ubo=P,this._callbackPluginEventGeneric(8,this._eventInfo),P.create(),this._uniformBufferLayoutBuilt=!0}bindForSubMesh(P,f,Y){const C=Y._drawWrapper;this._eventInfo.subMesh=Y,this._callbackPluginEventBindForSubMesh(this._eventInfo),C._forceRebindOnNextCall=!1}bindOnlyWorldMatrix(P){}bindView(P){this._useUBO?this._needToBindSceneUbo=!0:P.setMatrix("view",this.vP().getViewMatrix())}bindViewProjection(P){this._useUBO?this._needToBindSceneUbo=!0:(P.setMatrix("viewProjection",this.vP().getTransformMatrix()),P.setMatrix("projection",this.vP().getProjectionMatrix()))}bindEyePosition(P,f){this._useUBO?this._needToBindSceneUbo=!0:this._scene.bindEyePosition(P,f)}_afterBind(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(this._scene._cachedMaterial=this,this._needToBindSceneUbo&&f&&(this._needToBindSceneUbo=!1,(0,g.o)(f,this.vP().getSceneUniformBuffer()),this._scene.finalizeSceneUbo()),this._scene._cachedVisibility=P?P.visibility:1,this._onBindObservable&&P&&this._onBindObservable.notifyObservers(P),this.disableDepthWrite){const P=this._scene.getEngine();this._cachedDepthWriteState=P.getDepthWrite(),P.setDepthWrite(!1)}if(this.disableColorWrite){const P=this._scene.getEngine();this._cachedColorWriteState=P.getColorWrite(),P.setColorWrite(!1)}if(0!==this.depthFunction){const P=this._scene.getEngine();this._cachedDepthFunctionState=P.getDepthFunction()||0,P.setDepthFunction(this.depthFunction)}}unbind(){if(this._scene.getSceneUniformBuffer().unbindEffect(),this._onUnBindObservable&&this._onUnBindObservable.notifyObservers(this),0!==this.depthFunction){this._scene.getEngine().setDepthFunction(this._cachedDepthFunctionState)}if(this.disableDepthWrite){this._scene.getEngine().setDepthWrite(this._cachedDepthWriteState)}if(this.disableColorWrite){this._scene.getEngine().setColorWrite(this._cachedColorWriteState)}}getAnimatables(){return this._eventInfo.animatables=[],this._callbackPluginEventGeneric(256,this._eventInfo),this._eventInfo.animatables}getActiveTextures(){return this._eventInfo.activeTextures=[],this._callbackPluginEventGeneric(512,this._eventInfo),this._eventInfo.activeTextures}hasTexture(P){return this._eventInfo.hasTexture=!1,this._eventInfo.texture=P,this._callbackPluginEventGeneric(1024,this._eventInfo),this._eventInfo.hasTexture}clone(P){return null}_clonePlugins(P,f){const Y={};if(this._serializePlugins(Y),S._ParsePlugins(Y,P,this._scene,f),this.pluginManager)for(const C of this.pluginManager._plugins){const f=P.pluginManager.getPlugin(C.name);f&&C.copyTo(f)}}getBindedMeshes(){if(this.meshMap){const P=[];for(const f in this.meshMap){const Y=this.meshMap[f];Y&&P.push(Y)}return P}return this._scene.meshes.filter((P=>P.material===this))}forceCompilation(P,f,Y,C){const q={clipPlane:!1,useInstances:!1,...Y},m=this.vP(),L=this.allowShaderHotSwapping;this.allowShaderHotSwapping=!1;const o=()=>{if(!this._scene||!this._scene.getEngine())return;const Y=m.clipPlane;if(q.clipPlane&&(m.clipPlane=new y.d(0,0,0,1)),this._storeEffectOnSubMeshes){let Y=!0,m=null;if(P.Jf){const f=new w.c(0,0,0,0,0,P,void 0,!1,!1);f.materialDefines&&(f.materialDefines._renderId=-1),this.isReadyForSubMesh(P,f,q.useInstances)||(f.effect&&f.effect.getCompilationError()&&f.effect.allFallbacksProcessed()?m=f.effect.getCompilationError():(Y=!1,setTimeout(o,16)))}Y&&(this.allowShaderHotSwapping=L,m&&C&&C(m),f&&f(this))}else this.isReady()?(this.allowShaderHotSwapping=L,f&&f(this)):setTimeout(o,16);q.clipPlane&&(m.clipPlane=Y)};o()}async forceCompilationAsync(P,f){return await new Promise(((Y,C)=>{this.forceCompilation(P,(()=>{Y()}),f,(P=>{C(P)}))}))}Ed(P){this.vP().blockMaterialDirtyMechanism||this._blockDirtyMechanism||(S._DirtyCallbackArray.length=0,P&S.ImageProcessingDirtyFlag&&S._DirtyCallbackArray.push(S._ImageProcessingDirtyCallBack),P&S.TextureDirtyFlag&&S._DirtyCallbackArray.push(S._TextureDirtyCallBack),P&S.LightDirtyFlag&&S._DirtyCallbackArray.push(S._LightsDirtyCallBack),P&S.FresnelDirtyFlag&&S._DirtyCallbackArray.push(S._FresnelDirtyCallBack),P&S.AttributesDirtyFlag&&S._DirtyCallbackArray.push(S._AttributeDirtyCallBack),P&S.MiscDirtyFlag&&S._DirtyCallbackArray.push(S._MiscDirtyCallBack),P&S.PrePassDirtyFlag&&S._DirtyCallbackArray.push(S._PrePassDirtyCallBack),S._DirtyCallbackArray.length&&this._markAllSubMeshesAsDirty(S._RunDirtyCallBacks),this.vP().resetCachedMaterial())}resetDrawCache(){const P=this.vP().meshes;for(const f of P)if(f.Jf)for(const P of f.Jf)P.IP()===this&&P.resetDrawCache()}_markAllSubMeshesAsDirty(P){const f=this.vP();if(f.blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const Y=f.meshes;for(const C of Y)if(C.Jf)for(const Y of C.Jf){if((Y.IP()||(f._hasDefaultMaterial?f.defaultMaterial:null))===this)for(const f of Y._drawWrappers)f&&f.defines&&f.defines.markAllAsDirty&&this._materialContext===f.materialContext&&P(f.defines)}}_markScenePrePassDirty(){if(this.vP().blockMaterialDirtyMechanism||this._blockDirtyMechanism)return;const P=this.vP().enablePrePassRenderer();P&&P.Ed()}_markAllSubMeshesAsAllDirty(){this._markAllSubMeshesAsDirty(S._AllDirtyCallBack)}_markAllSubMeshesAsImageProcessingDirty(){this._markAllSubMeshesAsDirty(S._ImageProcessingDirtyCallBack)}_markAllSubMeshesAsTexturesDirty(){this._markAllSubMeshesAsDirty(S._TextureDirtyCallBack)}_markAllSubMeshesAsFresnelDirty(){this._markAllSubMeshesAsDirty(S._FresnelDirtyCallBack)}_markAllSubMeshesAsFresnelAndMiscDirty(){this._markAllSubMeshesAsDirty(S._FresnelAndMiscDirtyCallBack)}_markAllSubMeshesAsLightsDirty(){this._markAllSubMeshesAsDirty(S._LightsDirtyCallBack)}_markAllSubMeshesAsAttributesDirty(){this._markAllSubMeshesAsDirty(S._AttributeDirtyCallBack)}_markAllSubMeshesAsMiscDirty(){this._markAllSubMeshesAsDirty(S._MiscDirtyCallBack)}_markAllSubMeshesAsPrePassDirty(){this._markAllSubMeshesAsDirty(S._PrePassDirtyCallBack)}_markAllSubMeshesAsTexturesAndMiscDirty(){this._markAllSubMeshesAsDirty(S._TextureAndMiscDirtyCallBack)}_checkScenePerformancePriority(){if(0!==this._scene.performancePriority){this.checkReadyOnlyOnce=!0;const P=this._scene.onScenePerformancePriorityChangedObservable.addOnce((()=>{this.checkReadyOnlyOnce=!1}));this.vf.add((()=>{this._scene.onScenePerformancePriorityChangedObservable.remove(P)}))}}setPrePassRenderer(P){return!1}dispose(P,f,Y){const C=this.vP();if(C.stopAnimation(this),C.freeProcessedMaterials(),C.removeMaterial(this),this._eventInfo.forceDisposeTextures=f,this._callbackPluginEventGeneric(2,this._eventInfo),this._parentContainer){const P=this._parentContainer.materials.indexOf(this);P>-1&&this._parentContainer.materials.splice(P,1),this._parentContainer=null}if(!0!==Y)if(this.meshMap)for(const q in this.meshMap){const P=this.meshMap[q];this._disposeMeshResources(P)}else{const P=C.meshes;for(const f of P)this._disposeMeshResources(f)}this._uniformBuffer.dispose(),this._drawWrapper.effect&&(this._storeEffectOnSubMeshes||this._drawWrapper.effect.dispose(),this._drawWrapper.effect=null),this.metadata=null,this.vf.notifyObservers(this),this.vf.clear(),this._onBindObservable&&this._onBindObservable.clear(),this._onUnBindObservable&&this._onUnBindObservable.clear(),this._onEffectCreatedObservable&&this._onEffectCreatedObservable.clear(),this._eventInfo&&(this._eventInfo={})}_disposeMeshResources(P){if(!P)return;const f=P.qq,Y=P._internalAbstractMeshDataInfo._materialForRenderPass;if(this._storeEffectOnSubMeshes){if(P.Jf&&Y)for(const q of P.Jf){const P=q._drawWrappers;for(let m=0;m<P.length;m++){var C;const L=null===(C=P[m])||void 0===C?void 0:C.effect;if(!L)continue;Y[m]===this&&(null===f||void 0===f||f._releaseVertexArrayObject(L),q._removeDrawWrapper(m,!0,!0))}}}else null===f||void 0===f||f._releaseVertexArrayObject(this._drawWrapper.effect);P.material!==this||P.sourceMesh||(P.material=null)}serialize(){const P=i.e.Serialize(this);return P.stencil=this.stencil.serialize(),P.uniqueId=this.uniqueId,this._serializePlugins(P),P}_serializePlugins(P){if(P.plugins={},this.pluginManager)for(const f of this.pluginManager._plugins)f.doNotSerialize||(P.plugins[f.getClassName()]=f.serialize())}static Parse(P,f,Y){if(P.customType){if("BABYLON.PBRMaterial"===P.customType&&P.overloadedAlbedo&&(P.customType="BABYLON.LegacyPBRMaterial",!BABYLON.LegacyPBRMaterial))return R.e.Error("Your scene is trying to load a legacy version of the PBRMaterial, please, include it from the materials library."),null}else P.customType="BABYLON.StandardMaterial";const C=m.Tools.Instantiate(P.customType).Parse(P,f,Y);return C._loadedUniqueId=P.uniqueId,C}static _ParsePlugins(P,f,Y,C){if(P.plugins)for(const o in P.plugins){var q,L;const w=P.plugins[o];let d=null===(q=f.pluginManager)||void 0===q?void 0:q.getPlugin(w.name);if(!d){const P=m.Tools.Instantiate("BABYLON."+o);P&&(d=new P(f))}null===(L=d)||void 0===L||L.parse(w,Y,C)}}}S.TriangleFillMode=0,S.WireFrameFillMode=1,S.PointFillMode=2,S.PointListDrawMode=3,S.LineListDrawMode=4,S.LineLoopDrawMode=5,S.LineStripDrawMode=6,S.TriangleStripDrawMode=7,S.TriangleFanDrawMode=8,S.ClockWiseSideOrientation=0,S.CounterClockWiseSideOrientation=1,S.ImageProcessingDirtyFlag=64,S.TextureDirtyFlag=1,S.LightDirtyFlag=2,S.FresnelDirtyFlag=4,S.AttributesDirtyFlag=8,S.MiscDirtyFlag=16,S.PrePassDirtyFlag=32,S.AllDirtyFlag=127,S.MATERIAL_OPAQUE=0,S.MATERIAL_ALPHATEST=1,S.MATERIAL_ALPHABLEND=2,S.MATERIAL_ALPHATESTANDBLEND=3,S.MATERIAL_NORMALBLENDMETHOD_WHITEOUT=0,S.MATERIAL_NORMALBLENDMETHOD_RNM=1,S.OnEventObservable=new L.e,S._AllDirtyCallBack=P=>P.markAllAsDirty(),S._ImageProcessingDirtyCallBack=P=>P.markAsImageProcessingDirty(),S._TextureDirtyCallBack=P=>P.markAsTexturesDirty(),S._FresnelDirtyCallBack=P=>P.markAsFresnelDirty(),S._MiscDirtyCallBack=P=>P.markAsMiscDirty(),S._PrePassDirtyCallBack=P=>P.markAsPrePassDirty(),S._LightsDirtyCallBack=P=>P.markAsLightDirty(),S._AttributeDirtyCallBack=P=>P.markAsAttributesDirty(),S._FresnelAndMiscDirtyCallBack=P=>{S._FresnelDirtyCallBack(P),S._MiscDirtyCallBack(P)},S._TextureAndMiscDirtyCallBack=P=>{S._TextureDirtyCallBack(P),S._MiscDirtyCallBack(P)},S._DirtyCallbackArray=[],S._RunDirtyCallBacks=P=>{for(const f of S._DirtyCallbackArray)f(P)},(0,C.b)([(0,q.F)()],S.prototype,"id",void 0),(0,C.b)([(0,q.F)()],S.prototype,"uniqueId",void 0),(0,C.b)([(0,q.F)()],S.prototype,"name",void 0),(0,C.b)([(0,q.F)()],S.prototype,"metadata",void 0),(0,C.b)([(0,q.F)()],S.prototype,"checkReadyOnEveryCall",void 0),(0,C.b)([(0,q.F)()],S.prototype,"checkReadyOnlyOnce",void 0),(0,C.b)([(0,q.F)()],S.prototype,"state",void 0),(0,C.b)([(0,q.F)("alpha")],S.prototype,"_alpha",void 0),(0,C.b)([(0,q.F)("XL")],S.prototype,"_backFaceCulling",void 0),(0,C.b)([(0,q.F)("cullBackFaces")],S.prototype,"_cullBackFaces",void 0),(0,C.b)([(0,q.F)()],S.prototype,"sideOrientation",void 0),(0,C.b)([(0,q.F)("alphaMode")],S.prototype,"_alphaMode",void 0),(0,C.b)([(0,q.F)()],S.prototype,"_needDepthPrePass",void 0),(0,C.b)([(0,q.F)()],S.prototype,"disableDepthWrite",void 0),(0,C.b)([(0,q.F)()],S.prototype,"disableColorWrite",void 0),(0,C.b)([(0,q.F)()],S.prototype,"forceDepthWrite",void 0),(0,C.b)([(0,q.F)()],S.prototype,"depthFunction",void 0),(0,C.b)([(0,q.F)()],S.prototype,"separateCullingPass",void 0),(0,C.b)([(0,q.F)("fogEnabled")],S.prototype,"_fogEnabled",void 0),(0,C.b)([(0,q.F)()],S.prototype,"pointSize",void 0),(0,C.b)([(0,q.F)()],S.prototype,"zOffset",void 0),(0,C.b)([(0,q.F)()],S.prototype,"zOffsetUnits",void 0),(0,C.b)([(0,q.F)()],S.prototype,"pointsCloud",null),(0,C.b)([(0,q.F)()],S.prototype,"fillMode",null),(0,C.b)([(0,q.F)()],S.prototype,"useLogarithmicDepth",null),(0,C.b)([(0,q.F)()],S.prototype,"transparencyMode",null)},11555:(P,f,Y)=>{Y.d(f,{A:()=>v,D:()=>c,E:()=>i,F:()=>r,G:()=>s,J:()=>e,N:()=>D,O:()=>K,S:()=>U,T:()=>a,V:()=>Q,Z:()=>J,bb:()=>I,c:()=>O,d:()=>y,f:()=>l,fb:()=>u,i:()=>R,k:()=>g,o:()=>S,q:()=>M,u:()=>T,y:()=>V});var C=Y(11025),q=Y(11228),m=Y(11052),L=Y(11508),o=Y(11561);const w=q.Df.Black(),d={NUM_MORPH_INFLUENCERS:0,NORMAL:!1,TANGENT:!1,UV:!1,UV2:!1,COLOR:!1};function R(P,f,Y){if(!P||P.LOGARITHMICDEPTH||P.indexOf&&P.indexOf("LOGARITHMICDEPTH")>=0){const P=Y.activeCamera;1===P.mode&&C.e.Error("Logarithmic depth is not compatible with orthographic cameras!",20),f.setFloat("logarithmicDepthConstant",2/(Math.log(P.maxZ+1)/Math.LN2))}}function y(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Y&&P.fogEnabled&&(!f||f.applyFog)&&0!==P.fogMode&&(Y.setFloat4("vFogInfos",P.fogMode,P.fogStart,P.fogEnd,P.fogDensity),C?(P.fogColor.toLinearSpaceToRef(w,P.getEngine().useExactSrgbConversions),Y.setColor3("vFogColor",w)):Y.setColor3("vFogColor",P.fogColor))}function r(P,f,Y,C,q,m,L,o,w,R){const y=P.numMaxInfluencers||P.numInfluencers;return y<=0?0:(f.push("#define MORPHTARGETS"),P.hasPositions&&f.push("#define MORPHTARGETTEXTURE_HASPOSITIONS"),P.hasNormals&&f.push("#define MORPHTARGETTEXTURE_HASNORMALS"),P.hasTangents&&f.push("#define MORPHTARGETTEXTURE_HASTANGENTS"),P.hasUVs&&f.push("#define MORPHTARGETTEXTURE_HASUVS"),P.hasUV2s&&f.push("#define MORPHTARGETTEXTURE_HASUV2S"),P.hasColors&&f.push("#define MORPHTARGETTEXTURE_HASCOLORS"),P.supportsPositions&&q&&f.push("#define MORPHTARGETS_POSITION"),P.supportsNormals&&m&&f.push("#define MORPHTARGETS_NORMAL"),P.supportsTangents&&L&&f.push("#define MORPHTARGETS_TANGENT"),P.supportsUVs&&o&&f.push("#define MORPHTARGETS_UV"),P.supportsUV2s&&w&&f.push("#define MORPHTARGETS_UV2"),P.supportsColors&&R&&f.push("#define MORPHTARGETS_COLOR"),f.push("#define NUM_MORPH_INFLUENCERS "+y),P.isUsingTextureForTargets&&f.push("#define MORPHTARGETS_TEXTURE"),d.NUM_MORPH_INFLUENCERS=y,d.NORMAL=m,d.TANGENT=L,d.UV=o,d.UV2=w,d.COLOR=R,i(Y,C,d,q),y)}function i(P,f,Y){let q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const L=Y.NUM_MORPH_INFLUENCERS;if(L>0&&m.e.LastCreatedEngine){const o=m.e.LastCreatedEngine.getCaps().maxVertexAttribs,w=f.morphTargetManager;if(null!==w&&void 0!==w&&w.isUsingTextureForTargets)return;const d=w&&w.supportsPositions&&q,R=w&&w.supportsNormals&&Y.NORMAL,y=w&&w.supportsTangents&&Y.TANGENT,r=w&&w.supportsUVs&&Y.UV1,i=w&&w.supportsUV2s&&Y.UV2,u=w&&w.supportsColors&&Y.VERTEXCOLOR;for(let Y=0;Y<L;Y++)d&&P.push("position"+Y),R&&P.push("normal"+Y),y&&P.push("tangent"+Y),r&&P.push("uv_"+Y),i&&P.push("uv2_"+Y),u&&P.push("color"+Y),P.length>o&&C.e.Error("Cannot add more vertex attributes for mesh "+f.name)}}function u(P){let f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];P.push("world0"),P.push("world1"),P.push("world2"),P.push("world3"),f&&(P.push("previousWorld0"),P.push("previousWorld1"),P.push("previousWorld2"),P.push("previousWorld3"))}function g(P,f){const Y=P.morphTargetManager;P&&Y&&f.setFloatArray("morphTargetInfluences",Y.influences)}function S(P,f){f.bindToEffect(P,"Scene")}function K(P,f,Y){f._needUVs=!0,f[Y]=!0,P.optimizeUVAllocation&&P.getTextureMatrix().isIdentityAs3x2()?(f[Y+"DIRECTUV"]=P.coordinatesIndex+1,f["MAINUV"+(P.coordinatesIndex+1)]=!0):f[Y+"DIRECTUV"]=0}function M(P,f,Y){const C=P.getTextureMatrix();f.bf(Y+"Matrix",C)}function V(P,f,Y){Y.BAKED_VERTEX_ANIMATION_TEXTURE&&Y.INSTANCES&&P.push("bakedVertexAnimationSettingsInstanced")}function O(P,f,Y){var C;if(f&&P&&(P.computeBonesUsingShaders&&f._bonesComputationForcedToCPU&&(P.computeBonesUsingShaders=!1),P.useBones&&P.computeBonesUsingShaders&&P.skeleton)){const q=P.skeleton;if(q.isUsingTextureForMatrices&&f.getUniformIndex("boneTextureWidth")>-1){const Y=q.getTransformMatrixTexture(P);f.setTexture("boneSampler",Y),f.setFloat("boneTextureWidth",4*(q.bones.length+1))}else{const m=q.getTransformMatrices(P);m&&(f.setMatrices("mBones",m),Y&&P.vP().prePassRenderer&&P.vP().prePassRenderer.getIndex(2)&&(Y.previousBones[P.uniqueId]||(Y.previousBones[P.uniqueId]=m.slice()),f.setMatrices("mPreviousBones",Y.previousBones[P.uniqueId]),C=m,Y.previousBones[P.uniqueId].set(C)))}}}function n(P,f,Y,C,q){let m=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];P._bindLight(f,Y,C,q,m)}function l(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4;const m=Math.min(f.lightSources.length,q);for(let L=0;L<m;L++){n(f.lightSources[L],L,P,Y,"boolean"===typeof C?C:C.SPECULARTERM,f.receiveShadows)}}function v(P,f,Y,C){Y.NUM_BONE_INFLUENCERS>0&&(C.addCPUSkinningFallback(0,f),P.push("matricesIndices"),P.push("matricesWeights"),Y.NUM_BONE_INFLUENCERS>4&&(P.push("matricesIndicesExtra"),P.push("matricesWeightsExtra")))}function c(P,f){(f.INSTANCES||f.THIN_INSTANCES)&&u(P,!!f.PREPASS_VELOCITY),f.INSTANCESCOLOR&&P.push("instanceColor")}function T(P,f){let Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,q=0;for(let m=0;m<Y&&P["LIGHT"+m];m++)m>0&&(q=C+m,f.addFallback(q,"LIGHT"+m)),P.SHADOWS||(P["SHADOW"+m]&&f.addFallback(C,"SHADOW"+m),P["SHADOWPCF"+m]&&f.addFallback(C,"SHADOWPCF"+m),P["SHADOWPCSS"+m]&&f.addFallback(C,"SHADOWPCSS"+m),P["SHADOWPOISSON"+m]&&f.addFallback(C,"SHADOWPOISSON"+m),P["SHADOWESM"+m]&&f.addFallback(C,"SHADOWESM"+m),P["SHADOWCLOSEESM"+m]&&f.addFallback(C,"SHADOWCLOSEESM"+m));return q++}function U(P,f,Y,C,q,m,L){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];L._areMiscDirty&&(L.LOGARITHMICDEPTH=Y,L.POINTSIZE=C,L.FOG=q&&function(P,f){return f.fogEnabled&&P.applyFog&&0!==f.fogMode}(P,f),L.NONUNIFORMSCALING=P.nonUniformScaling,L.ALPHATEST=m,L.DECAL_AFTER_DETAIL=o)}function D(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!Y._areLightsDirty)return Y._needNormals;let L=0;const o={needNormals:Y._needNormals,needRebuild:!1,lightmapMode:!1,shadowEnabled:!1,specularEnabled:!1};if(P.lightsEnabled&&!m)for(const d of f.lightSources)if(j(P,f,d,L,Y,C,o),L++,L===q)break;Y.SPECULARTERM=o.specularEnabled,Y.SHADOWS=o.shadowEnabled;for(let d=L;d<q;d++)void 0!==Y["LIGHT"+d]&&(Y["LIGHT"+d]=!1,Y["HEMILIGHT"+d]=!1,Y["POINTLIGHT"+d]=!1,Y["DIRLIGHT"+d]=!1,Y["SPOTLIGHT"+d]=!1,Y["AREALIGHT"+d]=!1,Y["SHADOW"+d]=!1,Y["SHADOWCSM"+d]=!1,Y["SHADOWCSMDEBUG"+d]=!1,Y["SHADOWCSMNUM_CASCADES"+d]=!1,Y["SHADOWCSMUSESHADOWMAXZ"+d]=!1,Y["SHADOWCSMNOBLEND"+d]=!1,Y["SHADOWCSM_RIGHTHANDED"+d]=!1,Y["SHADOWPCF"+d]=!1,Y["SHADOWPCSS"+d]=!1,Y["SHADOWPOISSON"+d]=!1,Y["SHADOWESM"+d]=!1,Y["SHADOWCLOSEESM"+d]=!1,Y["SHADOWCUBE"+d]=!1,Y["SHADOWLOWQUALITY"+d]=!1,Y["SHADOWMEDIUMQUALITY"+d]=!1);const w=P.getEngine().getCaps();return void 0===Y.SHADOWFLOAT&&(o.needRebuild=!0),Y.SHADOWFLOAT=o.shadowEnabled&&(w.textureFloatRender&&w.textureFloatLinearFiltering||w.textureHalfFloatRender&&w.textureHalfFloatLinearFiltering),Y.LIGHTMAPEXCLUDED=o.lightmapMode,o.needRebuild&&Y.rebuild(),o.needNormals}function j(P,f,Y,C,q,m,o){switch(o.needNormals=!0,void 0===q["LIGHT"+C]&&(o.needRebuild=!0),q["LIGHT"+C]=!0,q["SPOTLIGHT"+C]=!1,q["HEMILIGHT"+C]=!1,q["POINTLIGHT"+C]=!1,q["DIRLIGHT"+C]=!1,q["AREALIGHT"+C]=!1,Y.prepareLightSpecificDefines(q,C),q["LIGHT_FALLOFF_PHYSICAL"+C]=!1,q["LIGHT_FALLOFF_GLTF"+C]=!1,q["LIGHT_FALLOFF_STANDARD"+C]=!1,Y.falloffType){case L.e.FALLOFF_GLTF:q["LIGHT_FALLOFF_GLTF"+C]=!0;break;case L.e.FALLOFF_PHYSICAL:q["LIGHT_FALLOFF_PHYSICAL"+C]=!0;break;case L.e.FALLOFF_STANDARD:q["LIGHT_FALLOFF_STANDARD"+C]=!0}if(m&&!Y.KR.equalsFloats(0,0,0)&&(o.specularEnabled=!0),q["SHADOW"+C]=!1,q["SHADOWCSM"+C]=!1,q["SHADOWCSMDEBUG"+C]=!1,q["SHADOWCSMNUM_CASCADES"+C]=!1,q["SHADOWCSMUSESHADOWMAXZ"+C]=!1,q["SHADOWCSMNOBLEND"+C]=!1,q["SHADOWCSM_RIGHTHANDED"+C]=!1,q["SHADOWPCF"+C]=!1,q["SHADOWPCSS"+C]=!1,q["SHADOWPOISSON"+C]=!1,q["SHADOWESM"+C]=!1,q["SHADOWCLOSEESM"+C]=!1,q["SHADOWCUBE"+C]=!1,q["SHADOWLOWQUALITY"+C]=!1,q["SHADOWMEDIUMQUALITY"+C]=!1,f&&f.receiveShadows&&P.shadowsEnabled&&Y.shadowEnabled){const f=Y.getShadowGenerator(P.activeCamera)??Y.getShadowGenerator();if(f){const P=f.getShadowMap();P&&P.renderList&&P.renderList.length>0&&(o.shadowEnabled=!0,f.prepareDefines(q,C))}}Y.lightmapMode!=L.e.LIGHTMAP_DEFAULT?(o.lightmapMode=!0,q["LIGHTMAPEXCLUDED"+C]=!0,q["LIGHTMAPNOSPECULAR"+C]=Y.lightmapMode==L.e.LIGHTMAP_SHADOWSONLY):(q["LIGHTMAPEXCLUDED"+C]=!1,q["LIGHTMAPNOSPECULAR"+C]=!1)}function e(P,f,Y,C,q){let m=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,L=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=function(P,f){let Y=!1;if(P.activeCamera){const C=f.CAMERA_ORTHOGRAPHIC?1:0,q=f.CAMERA_PERSPECTIVE?1:0,m=1===P.activeCamera.mode?1:0,L=0===P.activeCamera.mode?1:0;(C^m||q^L)&&(f.CAMERA_ORTHOGRAPHIC=1===m,f.CAMERA_PERSPECTIVE=1===L,Y=!0)}return Y}(P,C);!1!==m&&(w=(0,o.h)(Y,P,C)),C.DEPTHPREPASS!==!f.getColorWrite()&&(C.DEPTHPREPASS=!C.DEPTHPREPASS,w=!0),C.INSTANCES!==q&&(C.INSTANCES=q,w=!0),C.THIN_INSTANCES!==L&&(C.THIN_INSTANCES=L,w=!0),w&&C.markAsUnprocessed()}function s(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]&&arguments[4],m=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],L=!(arguments.length>6&&void 0!==arguments[6])||arguments[6];if(!f._areAttributesDirty&&f._needNormals===f._normals&&f._needUVs===f._uvs)return!1;f._normals=f._needNormals,f._uvs=f._needUVs,f.NORMAL=f._needNormals&&P.isVerticesDataPresent("normal"),f._needNormals&&P.isVerticesDataPresent("tangent")&&(f.TANGENT=!0);for(let o=1;o<=6;++o)f["UV"+o]=!!f._needUVs&&P.isVerticesDataPresent(`uv${1===o?"":o}`);if(Y){const Y=P.useVertexColors&&P.isVerticesDataPresent("color");f.VERTEXCOLOR=Y,f.VERTEXALPHA=P.hasVertexAlpha&&Y&&m}return P.isVerticesDataPresent("instanceColor")&&(P.hasInstances||P.hasThinInstances)&&(f.INSTANCESCOLOR=!0),C&&function(P,f){if(P.useBones&&P.computeBonesUsingShaders&&P.skeleton){f.NUM_BONE_INFLUENCERS=P.numBoneInfluencers;const Y=void 0!==f.BONETEXTURE;if(P.skeleton.isUsingTextureForMatrices&&Y)f.BONETEXTURE=!0;else{f.BonesPerMesh=P.skeleton.bones.length+1,f.BONETEXTURE=!Y&&void 0;const C=P.vP().prePassRenderer;if(C&&C.enabled){const Y=-1===C.excludedSkinnedMesh.indexOf(P);f.BONES_VELOCITY_ENABLED=Y}}}else f.NUM_BONE_INFLUENCERS=0,f.BonesPerMesh=0,void 0!==f.BONETEXTURE&&(f.BONETEXTURE=!1)}(P,f),q&&function(P,f){const Y=P.morphTargetManager;Y?(f.MORPHTARGETS_UV=Y.supportsUVs&&f.UV1,f.MORPHTARGETS_UV2=Y.supportsUV2s&&f.UV2,f.MORPHTARGETS_TANGENT=Y.supportsTangents&&f.TANGENT,f.MORPHTARGETS_NORMAL=Y.supportsNormals&&f.NORMAL,f.MORPHTARGETS_POSITION=Y.supportsPositions,f.MORPHTARGETS_COLOR=Y.supportsColors,f.MORPHTARGETTEXTURE_HASUVS=Y.hasUVs,f.MORPHTARGETTEXTURE_HASUV2S=Y.hasUV2s,f.MORPHTARGETTEXTURE_HASTANGENTS=Y.hasTangents,f.MORPHTARGETTEXTURE_HASNORMALS=Y.hasNormals,f.MORPHTARGETTEXTURE_HASPOSITIONS=Y.hasPositions,f.MORPHTARGETTEXTURE_HASCOLORS=Y.hasColors,f.NUM_MORPH_INFLUENCERS=Y.numMaxInfluencers||Y.numInfluencers,f.MORPHTARGETS=f.NUM_MORPH_INFLUENCERS>0,f.MORPHTARGETS_TEXTURE=Y.isUsingTextureForTargets):(f.MORPHTARGETS_UV=!1,f.MORPHTARGETS_UV2=!1,f.MORPHTARGETS_TANGENT=!1,f.MORPHTARGETS_NORMAL=!1,f.MORPHTARGETS_POSITION=!1,f.MORPHTARGETS_COLOR=!1,f.MORPHTARGETTEXTURE_HASUVS=!1,f.MORPHTARGETTEXTURE_HASUV2S=!1,f.MORPHTARGETTEXTURE_HASTANGENTS=!1,f.MORPHTARGETTEXTURE_HASNORMALS=!1,f.MORPHTARGETTEXTURE_HASPOSITIONS=!1,f.MORPHTARGETTEXTURE_HAS_COLORS=!1,f.MORPHTARGETS=!1,f.NUM_MORPH_INFLUENCERS=0)}(P,f),L&&function(P,f){const Y=P.bakedVertexAnimationManager;f.BAKED_VERTEX_ANIMATION_TEXTURE=!(!Y||!Y.isEnabled)}(P,f),!0}function a(P,f){if(P.activeCamera){const Y=f.MULTIVIEW;f.MULTIVIEW=null!==P.activeCamera.outputRenderTarget&&P.activeCamera.outputRenderTarget.getViewCount()>1,f.MULTIVIEW!=Y&&f.markAsUnprocessed()}}function Q(P,f,Y){const C=f.ORDER_INDEPENDENT_TRANSPARENCY,q=f.ORDER_INDEPENDENT_TRANSPARENCY_16BITS;f.ORDER_INDEPENDENT_TRANSPARENCY=P.useOrderIndependentTransparency&&Y,f.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!P.getEngine().getCaps().textureFloatLinearFiltering,C===f.ORDER_INDEPENDENT_TRANSPARENCY&&q===f.ORDER_INDEPENDENT_TRANSPARENCY_16BITS||f.markAsUnprocessed()}function J(P,f,Y){const C=f.PREPASS;if(!f._arePrePassDirty)return;const q=[{type:1,define:"PREPASS_POSITION",index:"PREPASS_POSITION_INDEX"},{type:9,define:"PREPASS_LOCAL_POSITION",index:"PREPASS_LOCAL_POSITION_INDEX"},{type:2,define:"PREPASS_VELOCITY",index:"PREPASS_VELOCITY_INDEX"},{type:11,define:"PREPASS_VELOCITY_LINEAR",index:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:3,define:"PREPASS_REFLECTIVITY",index:"PREPASS_REFLECTIVITY_INDEX"},{type:0,define:"PREPASS_IRRADIANCE",index:"PREPASS_IRRADIANCE_INDEX"},{type:7,define:"PREPASS_ALBEDO_SQRT",index:"PREPASS_ALBEDO_SQRT_INDEX"},{type:5,define:"PREPASS_DEPTH",index:"PREPASS_DEPTH_INDEX"},{type:10,define:"PREPASS_SCREENSPACE_DEPTH",index:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:6,define:"PREPASS_NORMAL",index:"PREPASS_NORMAL_INDEX"},{type:8,define:"PREPASS_WORLD_NORMAL",index:"PREPASS_WORLD_NORMAL_INDEX"}];if(P.prePassRenderer&&P.prePassRenderer.enabled&&Y){f.PREPASS=!0,f.SCENE_MRT_COUNT=P.prePassRenderer.mrtCount,f.PREPASS_NORMAL_WORLDSPACE=P.prePassRenderer.generateNormalsInWorldSpace,f.PREPASS_COLOR=!0,f.PREPASS_COLOR_INDEX=0;for(let Y=0;Y<q.length;Y++){const C=P.prePassRenderer.getIndex(q[Y].type);-1!==C?(f[q[Y].define]=!0,f[q[Y].index]=C):f[q[Y].define]=!1}}else{f.PREPASS=!1;for(let P=0;P<q.length;P++)f[q[P].define]=!1}f.PREPASS!=C&&(f.markAsUnprocessed(),f.markAsImageProcessingDirty())}function N(P,f,Y,C){let q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6&&void 0!==arguments[6]&&arguments[6];q&&q.push("Light"+P),m||(f.push("vLightData"+P,"vLightDiffuse"+P,"vLightSpecular"+P,"vLightDirection"+P,"vLightWidth"+P,"vLightHeight"+P,"vLightFalloff"+P,"vLightGround"+P,"lightMatrix"+P,"shadowsInfo"+P,"depthValues"+P),Y.push("shadowTexture"+P),Y.push("depthTexture"+P),f.push("viewFrustumZ"+P,"cascadeBlendFactor"+P,"lightSizeUVCorrection"+P,"depthCorrection"+P,"penumbraDarkness"+P,"frustumLengths"+P),C&&(Y.push("projectionLightTexture"+P),f.push("textureProjectionMatrix"+P)),L&&Y.push("iesLightTexture"+P))}function I(P,f,Y){let C,q,m=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;if(P.uniformsNames){const L=P;C=L.uniformsNames,q=L.uniformBuffersNames,f=L.samplers,Y=L.defines,m=L.maxSimultaneousLights||0}else C=P,f||(f=[]);for(let L=0;L<m&&Y["LIGHT"+L];L++)N(L,C,f,Y["PROJECTEDLIGHTTEXTURE"+L],q,!1,Y["IESLIGHTTEXTURE"+L]);Y.NUM_MORPH_INFLUENCERS&&(C.push("morphTargetInfluences"),C.push("morphTargetCount")),Y.BAKED_VERTEX_ANIMATION_TEXTURE&&(C.push("bakedVertexAnimationSettings"),C.push("bakedVertexAnimationTextureSizeInverted"),C.push("bakedVertexAnimationTime"),f.push("bakedVertexAnimationTexture"))}},11520:(P,f,Y)=>{Y.d(f,{b:()=>m});var C=Y(11179),q=Y(11524);class m extends q.d{constructor(P,f){let Y=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(P,f,void 0,arguments.length>3&&void 0!==arguments[3]&&arguments[3]),this._normalMatrix=new C.Matrix,this._storeEffectOnSubMeshes=Y}getEffect(){return this._storeEffectOnSubMeshes?this._activeEffect:super.getEffect()}isReady(P,f){return!!P&&(!this._storeEffectOnSubMeshes||(!P.Jf||0===P.Jf.length||this.isReadyForSubMesh(P,P.Jf[0],f)))}_isReadyForSubMesh(P){const f=P.materialDefines;return!(this.checkReadyOnEveryCall||!P.effect||!f||f._renderId!==this.vP().getRenderId())}bindOnlyWorldMatrix(P){this._activeEffect.setMatrix("world",P)}bindOnlyNormalMatrix(P){this._activeEffect.setMatrix("normalMatrix",P)}bind(P,f){f&&this.bindForSubMesh(P,f,f.Jf[0])}_afterBind(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Y=arguments.length>2?arguments[2]:void 0;super._afterBind(P,f,Y),this.vP()._cachedEffect=f,Y?Y._drawWrapper._forceRebindOnNextCall=!1:this._drawWrapper._forceRebindOnNextCall=!1}_mustRebind(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return Y._drawWrapper._forceRebindOnNextCall||P.isCachedMaterialInvalid(this,f,C)}dispose(P,f,Y){this._activeEffect=void 0,super.dispose(P,f,Y)}}},11549:(P,f,Y)=>{Y.d(f,{e:()=>o,h:()=>w});var C=Y(11165),q=Y(11179),m=Y(11170);class L{static extractMinAndMaxIndexed(P,f,Y,C,q,m){for(let L=Y;L<Y+C;L++){const Y=3*f[L],C=P[Y],o=P[Y+1],w=P[Y+2];q.minimizeInPlaceFromFloats(C,o,w),m.maximizeInPlaceFromFloats(C,o,w)}}static extractMinAndMax(P,f,Y,C,q,m){for(let L=f,o=f*C;L<f+Y;L++,o+=C){const f=P[o],Y=P[o+1],C=P[o+2];q.minimizeInPlaceFromFloats(f,Y,C),m.maximizeInPlaceFromFloats(f,Y,C)}}}function o(P,f,Y,C){let m=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const o=new q.Of(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),w=new q.Of(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return L.extractMinAndMaxIndexed(P,f,Y,C,o,w),m&&(o.x-=o.x*m.x+m.y,o.y-=o.y*m.x+m.y,o.z-=o.z*m.x+m.y,w.x+=w.x*m.x+m.y,w.y+=w.y*m.x+m.y,w.z+=w.z*m.x+m.y),{minimum:o,maximum:w}}function w(P,f,Y){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,m=arguments.length>4?arguments[4]:void 0;const o=new q.Of(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),w=new q.Of(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return m||(m=3),L.extractMinAndMax(P,f,Y,m,o,w),C&&(o.x-=o.x*C.x+C.y,o.y-=o.y*C.x+C.y,o.z-=o.z*C.x+C.y,w.x+=w.x*C.x+C.y,w.y+=w.y*C.x+C.y,w.z+=w.z*C.x+C.y),{minimum:o,maximum:w}}(0,C.b)([m.g.filter((function(){for(var P=arguments.length,f=new Array(P),Y=0;Y<P;Y++)f[Y]=arguments[Y];let[C,q]=f;return!Array.isArray(C)&&!Array.isArray(q)}))],L,"extractMinAndMaxIndexed",null),(0,C.b)([m.g.filter((function(){for(var P=arguments.length,f=new Array(P),Y=0;Y<P;Y++)f[Y]=arguments[Y];let[C]=f;return!Array.isArray(C)}))],L,"extractMinAndMax",null)},11526:(P,f,Y)=>{Y.d(f,{c:()=>w});var C=Y(11255),q=Y(11530),m=Y(11533),L=Y(11549),o=Y(11304);class w{get materialDefines(){var P;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.defines:null===(P=this._getDrawWrapper())||void 0===P?void 0:P.defines}set materialDefines(P){(this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)).defines=P}_getDrawWrapper(P){let f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];P=P??this._engine.currentRenderPassId;let Y=this._drawWrappers[P];return!Y&&f&&(this._drawWrappers[P]=Y=new o.d(this._mesh.vP().getEngine())),Y}_removeDrawWrapper(P){let f=arguments.length>2&&void 0!==arguments[2]&&arguments[2];var Y;arguments.length>1&&void 0!==arguments[1]&&!arguments[1]||(null===(Y=this._drawWrappers[P])||void 0===Y||Y.dispose(f));this._drawWrappers[P]=void 0}get effect(){var P;return this._mainDrawWrapperOverride?this._mainDrawWrapperOverride.effect:(null===(P=this._getDrawWrapper())||void 0===P?void 0:P.effect)??null}get _drawWrapper(){return this._mainDrawWrapperOverride??this._getDrawWrapper(void 0,!0)}get _drawWrapperOverride(){return this._mainDrawWrapperOverride}_setMainDrawWrapperOverride(P){this._mainDrawWrapperOverride=P}setEffect(P){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Y=arguments.length>2?arguments[2]:void 0,C=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const q=this._drawWrapper;q.setEffect(P,f,C),void 0!==Y&&(q.materialContext=Y),P||(q.defines=null,q.materialContext=void 0)}resetDrawCache(P){let f=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this._drawWrappers){if(void 0!==P)return void this._removeDrawWrapper(P,!0,f);for(const P of this._drawWrappers)null===P||void 0===P||P.dispose(f)}this._drawWrappers=[]}static AddToMesh(P,f,Y,C,q,m,L){return new w(P,f,Y,C,q,m,L,!(arguments.length>7&&void 0!==arguments[7])||arguments[7])}constructor(P,f,Y,C,q,m,L){let o=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],w=!(arguments.length>8&&void 0!==arguments[8])||arguments[8];this.materialIndex=P,this.verticesStart=f,this.verticesCount=Y,this.indexStart=C,this.indexCount=q,this._mainDrawWrapperOverride=null,this._linesIndexCount=0,this._linesIndexBuffer=null,this._lastColliderWorldVertices=null,this._lastColliderTransformMatrix=null,this._wasDispatched=!1,this._renderId=0,this._alphaIndex=0,this._distanceToCamera=0,this._currentMaterial=null,this._mesh=m,this._renderingMesh=L||m,w&&m.Jf.push(this),this._engine=this._mesh.vP().getEngine(),this.resetDrawCache(),this._trianglePlanes=[],this._id=m.Jf.length-1,o&&(this.refreshBoundingInfo(),m.XC(!0))}get IsGlobal(){return 0===this.verticesStart&&this.verticesCount===this._mesh.getTotalVertices()&&0===this.indexStart&&this.indexCount===this._mesh.getTotalIndices()}getBoundingInfo(){return this.IsGlobal||this._mesh.hasThinInstances?this._mesh.getBoundingInfo():this._boundingInfo}setBoundingInfo(P){return this._boundingInfo=P,this}getMesh(){return this._mesh}getRenderingMesh(){return this._renderingMesh}getReplacementMesh(){return this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null}getEffectiveMesh(){const P=this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:null;return P||this._renderingMesh}IP(){let P=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const f=this._renderingMesh.getMaterialForRenderPass(this._engine.currentRenderPassId)??this._renderingMesh.material;if(!f)return P&&this._mesh.vP()._hasDefaultMaterial?this._mesh.vP().defaultMaterial:null;if(this._isMultiMaterial(f)){const P=f.getSubMaterial(this.materialIndex);return this._currentMaterial!==P&&(this._currentMaterial=P,this.resetDrawCache()),P}return f}_isMultiMaterial(P){return void 0!==P.getSubMaterial}refreshBoundingInfo(){let P=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this._lastColliderWorldVertices=null,this.IsGlobal||!this._renderingMesh||!this._renderingMesh.qq)return this;if(P||(P=this._renderingMesh.getVerticesData(C.d.PositionKind)),!P)return this._boundingInfo=this._mesh.getBoundingInfo(),this;const f=this._renderingMesh.eq();let Y;if(0===this.indexStart&&this.indexCount===f.length){const P=this._renderingMesh.getBoundingInfo();Y={minimum:P.minimum.clone(),maximum:P.maximum.clone()}}else Y=(0,L.e)(P,f,this.indexStart,this.indexCount,this._renderingMesh.qq.boundingBias);return this._boundingInfo?this._boundingInfo.reConstruct(Y.minimum,Y.maximum):this._boundingInfo=new m.c(Y.minimum,Y.maximum),this}_checkCollision(P){return this.getBoundingInfo()._checkCollision(P)}updateBoundingInfo(P){let f=this.getBoundingInfo();return f||(this.refreshBoundingInfo(),f=this.getBoundingInfo()),f&&f.update(P),this}isInFrustum(P){const f=this.getBoundingInfo();return!!f&&f.isInFrustum(P,this._mesh.ly)}isCompletelyInFrustum(P){const f=this.getBoundingInfo();return!!f&&f.isCompletelyInFrustum(P)}render(P){return this._renderingMesh.render(this,P,this._mesh._internalAbstractMeshDataInfo._actAsRegularMesh?this._mesh:void 0),this}_getLinesIndexBuffer(P,f){if(!this._linesIndexBuffer){const Y=6*Math.floor(this.indexCount/3),C=this.verticesStart+this.verticesCount>65535?new Uint32Array(Y):new Uint16Array(Y);let q=0;if(0===P.length)for(let P=this.indexStart;P<this.indexStart+this.indexCount;P+=3)C[q++]=P,C[q++]=P+1,C[q++]=P+1,C[q++]=P+2,C[q++]=P+2,C[q++]=P;else for(let f=this.indexStart;f<this.indexStart+this.indexCount;f+=3)C[q++]=P[f],C[q++]=P[f+1],C[q++]=P[f+1],C[q++]=P[f+2],C[q++]=P[f+2],C[q++]=P[f];this._linesIndexBuffer=f.createIndexBuffer(C),this._linesIndexCount=C.length}return this._linesIndexBuffer}canIntersects(P){const f=this.getBoundingInfo();return!!f&&P.intersectsBox(f.boundingBox)}intersects(P,f,Y,C,q){const m=this.IP();if(!m)return null;let L=3,o=!1;switch(m.fillMode){case 3:case 5:case 6:case 8:return null;case 7:L=1,o=!0}return 4===m.fillMode?Y.length?this._intersectLines(P,f,Y,this._mesh.intersectionThreshold,C):this._intersectUnIndexedLines(P,f,Y,this._mesh.intersectionThreshold,C):!Y.length&&this._mesh._unIndexed?this._intersectUnIndexedTriangles(P,f,Y,C,q):this._intersectTriangles(P,f,Y,L,o,C,q)}_intersectLines(P,f,Y,C,m){let L=null;for(let o=this.indexStart;o<this.indexStart+this.indexCount;o+=2){const w=f[Y[o]],d=f[Y[o+1]],R=P.intersectionSegment(w,d,C);if(!(R<0)&&((m||!L||R<L.distance)&&(L=new q.e(null,null,R),L.faceId=o/2,m)))break}return L}_intersectUnIndexedLines(P,f,Y,C,m){let L=null;for(let o=this.verticesStart;o<this.verticesStart+this.verticesCount;o+=2){const Y=f[o],w=f[o+1],d=P.intersectionSegment(Y,w,C);if(!(d<0)&&((m||!L||d<L.distance)&&(L=new q.e(null,null,d),L.faceId=o/2,m)))break}return L}_intersectTriangles(P,f,Y,C,q,m,L){let o=null,w=-1;for(let d=this.indexStart;d<this.indexStart+this.indexCount-(3-C);d+=C){w++;const C=Y[d],R=Y[d+1],y=Y[d+2];if(q&&4294967295===y){d+=2;continue}const r=f[C],i=f[R],u=f[y];if(!r||!i||!u)continue;if(L&&!L(r,i,u,P,C,R,y))continue;const g=P.intersectsTriangle(r,i,u);if(g){if(g.distance<0)continue;if((m||!o||g.distance<o.distance)&&(o=g,o.faceId=w,m))break}}return o}_intersectUnIndexedTriangles(P,f,Y,C,q){let m=null;for(let L=this.verticesStart;L<this.verticesStart+this.verticesCount;L+=3){const Y=f[L],o=f[L+1],w=f[L+2];if(q&&!q(Y,o,w,P,-1,-1,-1))continue;const d=P.intersectsTriangle(Y,o,w);if(d){if(d.distance<0)continue;if((C||!m||d.distance<m.distance)&&(m=d,m.faceId=L/3,C))break}}return m}_rebuild(){this._linesIndexBuffer&&(this._linesIndexBuffer=null)}clone(P,f){const Y=new w(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,P,f,!1);if(!this.IsGlobal){const P=this.getBoundingInfo();if(!P)return Y;Y._boundingInfo=new m.c(P.minimum,P.maximum)}return Y}dispose(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._linesIndexBuffer&&(this._mesh.vP().getEngine()._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null);const f=this._mesh.Jf.indexOf(this);this._mesh.Jf.splice(f,1),this.resetDrawCache(void 0,P)}getClassName(){return"SubMesh"}static CreateFromIndices(P,f,Y,C,q){let m=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],L=Number.MAX_VALUE,o=-Number.MAX_VALUE;const d=(q||C).eq();for(let w=f;w<f+Y;w++){const P=d[w];P<L&&(L=P),P>o&&(o=P)}return new w(P,L,o-L+1,f,Y,C,q,m)}}}}]);