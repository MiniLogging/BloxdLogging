"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[117],{16600:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphWaitAllBlock:()=>j});var S=R(14572),A=R(12376),Z=R(14524),p=R(14516);class j extends S.c{constructor(P){super(P),this.config=P,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",Z.e,new p.c(this.config.inputSignalCount||0));for(let a=0;a<this.config.inputSignalCount;a++)this.inFlows.push(this._registerSignalInput(`in_${a}`));this._unregisterSignalInput("in")}_getCurrentActivationState(P){const a=this._cachedActivationState;if(a.length=0,P._hasExecutionVariable(this,"activationState")){const R=P._getExecutionVariable(this,"activationState",[]);for(let P=0;P<R.length;P++)a.push(R[P])}else for(let R=0;R<this.config.inputSignalCount;R++)a.push(!1);return a}_execute(P,a){const R=this._getCurrentActivationState(P);if(a===this.reset)for(let S=0;S<this.config.inputSignalCount;S++)R[S]=!1;else{const P=this.inFlows.indexOf(a);P>=0&&(R[P]=!0)}if(this.remainingInputs.setValue(new p.c(R.filter((P=>!P)).length),P),P._setExecutionVariable(this,"activationState",R.slice()),R.includes(!1))a!==this.reset&&this.out._activateSignal(P);else{this.completed._activateSignal(P);for(let P=0;P<this.config.inputSignalCount;P++)R[P]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(P){super.serialize(P),P.config.inputFlows=this.config.inputSignalCount}}(0,A.d)("FlowGraphWaitAllBlock",j)}}]);