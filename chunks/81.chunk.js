"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[81],{14098:(U,M,b)=>{b.r(M),b.d(M,{FlowGraphSwitchBlock:()=>y});var a=b(12793),A=b(12775),H=b(609),W=b(12809);class y extends a.c{constructor(U){super(U),this.config=U,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",A.c);const M=this.config.cases||[];for(const b of M)this._caseToOutputFlow.set(b,this._registerSignalOutput(`out_${b}`))}_execute(U,M){const b=this.case.getValue(U);let a;a=(0,W.t)(b)?this._getOutputFlowForCase((0,W.r)(b)):this._getOutputFlowForCase(b),a?a._activateSignal(U):this.default._activateSignal(U)}addCase(U){this.config.cases.includes(U)||(this.config.cases.push(U),this._caseToOutputFlow.set(U,this._registerSignalOutput(`out_${U}`)))}removeCase(U){if(!this.config.cases.includes(U))return;const M=this.config.cases.indexOf(U);this.config.cases.splice(M,1),this._caseToOutputFlow.delete(U)}_getOutputFlowForCase(U){return this._caseToOutputFlow.get(U)}getClassName(){return"FlowGraphSwitchBlock"}serialize(U){super.serialize(U),U.cases=this.config.cases}}(0,H.i)("FlowGraphSwitchBlock",y)}}]);