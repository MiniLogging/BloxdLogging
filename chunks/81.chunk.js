"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[81],{13961:(J,T,b)=>{b.r(T),b.d(T,{FlowGraphSwitchBlock:()=>Y});var q=b(12620),t=b(12603),j=b(639),B=b(12633);class Y extends q.c{constructor(J){super(J),this.config=J,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",t.c);const T=this.config.cases||[];for(const b of T)this._caseToOutputFlow.set(b,this._registerSignalOutput(`out_${b}`))}_execute(J,T){const b=this.case.getValue(J);let q;q=(0,B.s)(b)?this._getOutputFlowForCase((0,B.p)(b)):this._getOutputFlowForCase(b),q?q._activateSignal(J):this.default._activateSignal(J)}addCase(J){this.config.cases.includes(J)||(this.config.cases.push(J),this._caseToOutputFlow.set(J,this._registerSignalOutput(`out_${J}`)))}removeCase(J){if(!this.config.cases.includes(J))return;const T=this.config.cases.indexOf(J);this.config.cases.splice(T,1),this._caseToOutputFlow.delete(J)}_getOutputFlowForCase(J){return this._caseToOutputFlow.get(J)}getClassName(){return"FlowGraphSwitchBlock"}serialize(J){super.serialize(J),J.cases=this.config.cases}}(0,j.g)("FlowGraphSwitchBlock",Y)}}]);