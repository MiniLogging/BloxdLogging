"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[81],{14120:(n,k,T)=>{T.r(k),T.d(k,{FlowGraphSwitchBlock:()=>w});var c=T(12843),K=T(12831),Q=T(675),G=T(12861);class w extends c.d{constructor(n){super(n),this.config=n,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",K.e);const k=this.config.cases||[];for(const T of k)this._caseToOutputFlow.set(T,this._registerSignalOutput(`out_${T}`))}_execute(n,k){const T=this.case.getValue(n);let c;c=(0,G.u)(T)?this._getOutputFlowForCase((0,G.r)(T)):this._getOutputFlowForCase(T),c?c._activateSignal(n):this.default._activateSignal(n)}addCase(n){this.config.cases.includes(n)||(this.config.cases.push(n),this._caseToOutputFlow.set(n,this._registerSignalOutput(`out_${n}`)))}removeCase(n){if(!this.config.cases.includes(n))return;const k=this.config.cases.indexOf(n);this.config.cases.splice(k,1),this._caseToOutputFlow.delete(n)}_getOutputFlowForCase(n){return this._caseToOutputFlow.get(n)}getClassName(){return"FlowGraphSwitchBlock"}serialize(n){super.serialize(n),n.cases=this.config.cases}}(0,Q.f)("FlowGraphSwitchBlock",w)}}]);