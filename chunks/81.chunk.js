"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[81],{13916:(A,X,s)=>{s.r(X),s.d(X,{FlowGraphSwitchBlock:()=>K});var N=s(12696),f=s(12677),E=s(616),g=s(12706);class K extends N.c{constructor(A){super(A),this.config=A,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",f.b);const X=this.config.cases||[];for(const s of X)this._caseToOutputFlow.set(s,this._registerSignalOutput(`out_${s}`))}_execute(A,X){const s=this.case.getValue(A);let N;N=(0,g.w)(s)?this._getOutputFlowForCase((0,g.s)(s)):this._getOutputFlowForCase(s),N?N._activateSignal(A):this.default._activateSignal(A)}addCase(A){this.config.cases.includes(A)||(this.config.cases.push(A),this._caseToOutputFlow.set(A,this._registerSignalOutput(`out_${A}`)))}removeCase(A){if(!this.config.cases.includes(A))return;const X=this.config.cases.indexOf(A);this.config.cases.splice(X,1),this._caseToOutputFlow.delete(A)}_getOutputFlowForCase(A){return this._caseToOutputFlow.get(A)}getClassName(){return"FlowGraphSwitchBlock"}serialize(A){super.serialize(A),A.cases=this.config.cases}}(0,E.f)("FlowGraphSwitchBlock",K)}}]);