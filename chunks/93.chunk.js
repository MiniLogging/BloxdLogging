"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[93],{16023:(L,U,x)=>{x.r(U),x.d(U,{FlowGraphJsonPointerParserBlock:()=>h});var mL=x(14343),p=x(14348);const G=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class F{constructor(L,U){this.path=L,this.ownerBlock=U,this.templatedInputs=[];let x=G.exec(L);const F=new Set;for(;x;){const[,a]=x;if(F.has(a))throw new Error("Duplicate template variable detected.");F.add(a),this.templatedInputs.push(U.registerDataInput(a,p.i,new mL.b(0))),x=G.exec(L)}}getAccessor(L,U){let x=this.path;for(const mL of this.templatedInputs){const L=mL.getValue(U).value;if("number"!==typeof L||L<0)throw new Error("Invalid value for templated input.");x=x.replace(`{${mL.name}}`,L.toString())}return L.convert(x)}}var a=x(12547),o=x(12589),A=x(12637),r=x(15876);class h extends r.e{constructor(L){super(p.c,L),this.config=L,this.object=this.registerDataOutput("object",p.c),this.propertyName=this.registerDataOutput("propertyName",p.c),this.setterFunction=this.registerDataOutput("setFunction",p.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",p.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",p.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new F(L.jsonPointer,this)}_doOperation(L){var U,x,mL;const p=this.templateComponent.getAccessor(this.config.pathConverter,L),G=p.info.get(p.object),F=null===(U=(x=p.info).getTarget)||void 0===U?void 0:U.call(x,p.object),a=null===(mL=p.info.getPropertyName)||void 0===mL?void 0:mL[0](p.object);if(!F)throw new Error("Object is undefined");return this.object.setValue(F,L),a&&this.propertyName.setValue(a,L),G}_setPropertyValue(L,U,x,mL){var p,G;const F=this.templateComponent.getAccessor(this.config.pathConverter,mL),a=F.info.type;a.startsWith("Color")&&(x=b(x,a)),null===(p=(G=F.info).set)||void 0===p||p.call(G,x,F.object)}_getPropertyValue(L,U,x){const mL=this.templateComponent.getAccessor(this.config.pathConverter,x),p=mL.info.type,G=mL.info.get(mL.object);return p.startsWith("Color")?function(L){if(L instanceof A.QU)return new o.YU(L.r,L.g,L.b);if(L instanceof A.ia)return new o.Vector4(L.r,L.g,L.b,L.a);throw new Error("Invalid color type")}(G):G}_getInterpolationAnimationPropertyInfo(L,U,x){const mL=this.templateComponent.getAccessor(this.config.pathConverter,x);return(L,U,x,p)=>{var G;const F=[],a=mL.info.type;return a.startsWith("Color")&&(L=L.map((L=>({frame:L.frame,value:b(L.value,a)})))),null===(G=mL.info.interpolation)||void 0===G||G.forEach(((U,G)=>{var a;const o=(null===(a=mL.info.getPropertyName)||void 0===a?void 0:a[G](mL.object))||"Animation-interpolation-"+G;let A=L;x!==U.type&&(A=L.map((L=>({frame:L.frame,value:U.getValue(void 0,L.value.Va?L.value.Va():[L.value],0,1)}))));const r=U.buildAnimations(mL.object,o,60,A);for(const L of r)p&&L.babylonAnimation.setEasingFunction(p),F.push(L.babylonAnimation)})),F}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function b(L,U){return L.getClassName().startsWith("Color")?L:"QU"===U?new A.QU(L.x,L.y,L.z):"ia"===U?new A.ia(L.x,L.y,L.z,L.w):L}(0,a.d)("FlowGraphJsonPointerParserBlock",h)},15876:(L,U,x)=>{x.d(U,{e:()=>a});var mL=x(14371),p=x(14348);const G="cachedOperationValue",F="cachedExecutionId";class a extends mL.e{constructor(L,U){super(U),this.value=this.registerDataOutput("value",L),this.isValid=this.registerDataOutput("isValid",p.e)}_updateOutputs(L){const U=L._getExecutionVariable(this,F,-1),x=L._getExecutionVariable(this,G,null);if(void 0!==x&&null!==x&&U===L.executionId)this.isValid.setValue(!0,L),this.value.setValue(x,L);else try{const U=this._doOperation(L);if(void 0===U||null===U)return void this.isValid.setValue(!1,L);L._setExecutionVariable(this,G,U),L._setExecutionVariable(this,F,L.executionId),this.value.setValue(U,L),this.isValid.setValue(!0,L)}catch(mL){this.isValid.setValue(!1,L)}}}}}]);