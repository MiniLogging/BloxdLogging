"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[93],{16043:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphJsonPointerParserBlock:()=>Z});var G=T(14229),B=T(14237);const L=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class f{constructor(K,A){this.path=K,this.ownerBlock=A,this.templatedInputs=[];let T=L.exec(K);const f=new Set;for(;T;){const[,O]=T;if(f.has(O))throw new Error("Duplicate template variable detected.");f.add(O),this.templatedInputs.push(A.registerDataInput(O,B.g,new G.e(0))),T=L.exec(K)}}getAccessor(K,A){let T=this.path;for(const G of this.templatedInputs){const K=G.getValue(A).value;if("number"!==typeof K||K<0)throw new Error("Invalid value for templated input.");T=T.replace(`{${G.name}}`,K.toString())}return K.convert(T)}}var O=T(12651),C=T(12700),Q=T(12743),Y=T(15884);class Z extends Y.b{constructor(K){super(B.b,K),this.config=K,this.object=this.registerDataOutput("object",B.b),this.propertyName=this.registerDataOutput("propertyName",B.b),this.setterFunction=this.registerDataOutput("setFunction",B.b,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",B.b,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",B.b,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new f(K.jsonPointer,this)}_doOperation(K){var A,T,G;const B=this.templateComponent.getAccessor(this.config.pathConverter,K),L=B.info.get(B.object),f=null===(A=(T=B.info).getTarget)||void 0===A?void 0:A.call(T,B.object),O=null===(G=B.info.getPropertyName)||void 0===G?void 0:G[0](B.object);if(!f)throw new Error("Object is undefined");return this.object.setValue(f,K),O&&this.propertyName.setValue(O,K),L}_setPropertyValue(K,A,T,G){var B,L;const f=this.templateComponent.getAccessor(this.config.pathConverter,G),O=f.info.type;O.startsWith("Color")&&(T=x(T,O)),null===(B=(L=f.info).set)||void 0===B||B.call(L,T,f.object)}_getPropertyValue(K,A,T){const G=this.templateComponent.getAccessor(this.config.pathConverter,T),B=G.info.type,L=G.info.get(G.object);return B.startsWith("Color")?function(K){if(K instanceof Q.DA)return new C.PA(K.r,K.g,K.b);if(K instanceof Q.oO)return new C.Vector4(K.r,K.g,K.b,K.a);throw new Error("Invalid color type")}(L):L}_getInterpolationAnimationPropertyInfo(K,A,T){const G=this.templateComponent.getAccessor(this.config.pathConverter,T);return(K,A,T,B)=>{var L;const f=[],O=G.info.type;return O.startsWith("Color")&&(K=K.map((K=>({frame:K.frame,value:x(K.value,O)})))),null===(L=G.info.interpolation)||void 0===L||L.forEach(((A,L)=>{var O;const C=(null===(O=G.info.getPropertyName)||void 0===O?void 0:O[L](G.object))||"Animation-interpolation-"+L;let Q=K;T!==A.type&&(Q=K.map((K=>({frame:K.frame,value:A.getValue(void 0,K.value.kf?K.value.kf():[K.value],0,1)}))));const Y=A.buildAnimations(G.object,C,60,Q);for(const K of Y)B&&K.babylonAnimation.setEasingFunction(B),f.push(K.babylonAnimation)})),f}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function x(K,A){return K.getClassName().startsWith("Color")?K:"DA"===A?new Q.DA(K.x,K.y,K.z):"oO"===A?new Q.oO(K.x,K.y,K.z,K.w):K}(0,O.c)("FlowGraphJsonPointerParserBlock",Z)},15884:(K,A,T)=>{T.d(A,{b:()=>O});var G=T(14262),B=T(14237);const L="cachedOperationValue",f="cachedExecutionId";class O extends G.e{constructor(K,A){super(A),this.value=this.registerDataOutput("value",K),this.isValid=this.registerDataOutput("isValid",B.d)}_updateOutputs(K){const A=K._getExecutionVariable(this,f,-1),T=K._getExecutionVariable(this,L,null);if(void 0!==T&&null!==T&&A===K.executionId)this.isValid.setValue(!0,K),this.value.setValue(T,K);else try{const A=this._doOperation(K);if(void 0===A||null===A)return void this.isValid.setValue(!1,K);K._setExecutionVariable(this,L,A),K._setExecutionVariable(this,f,K.executionId),this.value.setValue(A,K),this.isValid.setValue(!0,K)}catch(G){this.isValid.setValue(!1,K)}}}}}]);