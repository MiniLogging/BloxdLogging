"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[93],{16126:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphJsonPointerParserBlock:()=>I});var J=Z(14397),S=Z(14405);const P=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class v{constructor(t,b){this.path=t,this.ownerBlock=b,this.templatedInputs=[];let Z=P.exec(t);const v=new Set;for(;Z;){const[,h]=Z;if(v.has(h))throw new Error("Duplicate template variable detected.");v.add(h),this.templatedInputs.push(b.registerDataInput(h,S.j,new J.b(0))),Z=P.exec(t)}}getAccessor(t,b){let Z=this.path;for(const J of this.templatedInputs){const t=J.getValue(b).value;if("number"!==typeof t||t<0)throw new Error("Invalid value for templated input.");Z=Z.replace(`{${J.name}}`,t.toString())}return t.convert(Z)}}var h=Z(12688),C=Z(12735),Y=Z(12775),g=Z(15959);class I extends g.d{constructor(t){super(S.c,t),this.config=t,this.object=this.registerDataOutput("object",S.c),this.propertyName=this.registerDataOutput("propertyName",S.c),this.setterFunction=this.registerDataOutput("setFunction",S.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",S.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",S.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new v(t.jsonPointer,this)}_doOperation(t){var b,Z,J;const S=this.templateComponent.getAccessor(this.config.pathConverter,t),P=S.info.get(S.object),v=null===(b=(Z=S.info).getTarget)||void 0===b?void 0:b.call(Z,S.object),h=null===(J=S.info.getPropertyName)||void 0===J?void 0:J[0](S.object);if(!v)throw new Error("Object is undefined");return this.object.setValue(v,t),h&&this.propertyName.setValue(h,t),P}_setPropertyValue(t,b,Z,J){var S,P;const v=this.templateComponent.getAccessor(this.config.pathConverter,J),h=v.info.type;h.startsWith("Color")&&(Z=r(Z,h)),null===(S=(P=v.info).set)||void 0===S||S.call(P,Z,v.object)}_getPropertyValue(t,b,Z){const J=this.templateComponent.getAccessor(this.config.pathConverter,Z),S=J.info.type,P=J.info.get(J.object);return S.startsWith("Color")?function(t){if(t instanceof Y.hZ)return new C.JZ(t.r,t.g,t.b);if(t instanceof Y.Fb)return new C.Vector4(t.r,t.g,t.b,t.a);throw new Error("Invalid color type")}(P):P}_getInterpolationAnimationPropertyInfo(t,b,Z){const J=this.templateComponent.getAccessor(this.config.pathConverter,Z);return(t,b,Z,S)=>{var P;const v=[],h=J.info.type;return h.startsWith("Color")&&(t=t.map((t=>({frame:t.frame,value:r(t.value,h)})))),null===(P=J.info.interpolation)||void 0===P||P.forEach(((b,P)=>{var h;const C=(null===(h=J.info.getPropertyName)||void 0===h?void 0:h[P](J.object))||"Animation-interpolation-"+P;let Y=t;Z!==b.type&&(Y=t.map((t=>({frame:t.frame,value:b.getValue(void 0,t.value.jb?t.value.jb():[t.value],0,1)}))));const g=b.buildAnimations(J.object,C,60,Y);for(const t of g)S&&t.babylonAnimation.setEasingFunction(S),v.push(t.babylonAnimation)})),v}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function r(t,b){return t.getClassName().startsWith("Color")?t:"hZ"===b?new Y.hZ(t.x,t.y,t.z):"Fb"===b?new Y.Fb(t.x,t.y,t.z,t.w):t}(0,h.f)("FlowGraphJsonPointerParserBlock",I)},15959:(t,b,Z)=>{Z.d(b,{d:()=>h});var J=Z(14432),S=Z(14405);const P="cachedOperationValue",v="cachedExecutionId";class h extends J.e{constructor(t,b){super(b),this.value=this.registerDataOutput("value",t),this.isValid=this.registerDataOutput("isValid",S.f)}_updateOutputs(t){const b=t._getExecutionVariable(this,v,-1),Z=t._getExecutionVariable(this,P,null);if(void 0!==Z&&null!==Z&&b===t.executionId)this.isValid.setValue(!0,t),this.value.setValue(Z,t);else try{const b=this._doOperation(t);if(void 0===b||null===b)return void this.isValid.setValue(!1,t);t._setExecutionVariable(this,P,b),t._setExecutionVariable(this,v,t.executionId),this.value.setValue(b,t),this.isValid.setValue(!0,t)}catch(J){this.isValid.setValue(!1,t)}}}}}]);