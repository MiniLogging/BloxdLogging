"use strict";(self.kdlk57exiqh=self.kdlk57exiqh||[]).push([[93],{15514:(i,x,e)=>{e.r(x),e.d(x,{FlowGraphJsonPointerParserBlock:()=>A});var j=e(13868),E=e(13874);const a=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class Y{constructor(i,x){this.path=i,this.ownerBlock=x,this.templatedInputs=[];let e=a.exec(i);const Y=new Set;for(;e;){const[,J]=e;if(Y.has(J))throw new Error("Duplicate template variable detected.");Y.add(J),this.templatedInputs.push(x.registerDataInput(J,E.h,new j.d(0))),e=a.exec(i)}}getAccessor(i,x){let e=this.path;for(const j of this.templatedInputs){const i=j.getValue(x).value;if("number"!==typeof i||i<0)throw new Error("Invalid value for templated input.");e=e.replace(`{${j.name}}`,i.toString())}return i.convert(e)}}var J=e(12204),u=e(12250),b=e(12286),g=e(15373);class A extends g.c{constructor(i){super(E.c,i),this.config=i,this.object=this.registerDataOutput("object",E.c),this.propertyName=this.registerDataOutput("propertyName",E.c),this.setterFunction=this.registerDataOutput("setFunction",E.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",E.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",E.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new Y(i.jsonPointer,this)}_doOperation(i){var x,e,j;const E=this.templateComponent.getAccessor(this.config.pathConverter,i),a=E.info.get(E.object),Y=null===(x=(e=E.info).getTarget)||void 0===x?void 0:x.call(e,E.object),J=null===(j=E.info.getPropertyName)||void 0===j?void 0:j[0](E.object);if(!Y)throw new Error("Object is undefined");return this.object.setValue(Y,i),J&&this.propertyName.setValue(J,i),a}_setPropertyValue(i,x,e,j){var E,a;const Y=this.templateComponent.getAccessor(this.config.pathConverter,j),J=Y.info.type;J.startsWith("Color")&&(e=K(e,J)),null===(E=(a=Y.info).set)||void 0===E||E.call(a,e,Y.object)}_getPropertyValue(i,x,e){const j=this.templateComponent.getAccessor(this.config.pathConverter,e),E=j.info.type,a=j.info.get(j.object);return E.startsWith("Color")?function(i){if(i instanceof b.MJ)return new u.KJ(i.r,i.g,i.b);if(i instanceof b.lJ)return new u.Vector4(i.r,i.g,i.b,i.a);throw new Error("Invalid color type")}(a):a}_getInterpolationAnimationPropertyInfo(i,x,e){const j=this.templateComponent.getAccessor(this.config.pathConverter,e);return(i,x,e,E)=>{var a;const Y=[],J=j.info.type;return J.startsWith("Color")&&(i=i.map((i=>({frame:i.frame,value:K(i.value,J)})))),null===(a=j.info.interpolation)||void 0===a||a.forEach(((x,a)=>{var J;const u=(null===(J=j.info.getPropertyName)||void 0===J?void 0:J[a](j.object))||"Animation-interpolation-"+a;let b=i;e!==x.type&&(b=i.map((i=>({frame:i.frame,value:x.getValue(void 0,i.value.de?i.value.de():[i.value],0,1)}))));const g=x.buildAnimations(j.object,u,60,b);for(const i of g)E&&i.babylonAnimation.setEasingFunction(E),Y.push(i.babylonAnimation)})),Y}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function K(i,x){return i.getClassName().startsWith("Color")?i:"MJ"===x?new b.MJ(i.x,i.y,i.z):"lJ"===x?new b.lJ(i.x,i.y,i.z,i.w):i}(0,J.f)("FlowGraphJsonPointerParserBlock",A)},15373:(i,x,e)=>{e.d(x,{c:()=>J});var j=e(13900),E=e(13874);const a="cachedOperationValue",Y="cachedExecutionId";class J extends j.e{constructor(i,x){super(x),this.value=this.registerDataOutput("value",i),this.isValid=this.registerDataOutput("isValid",E.g)}_updateOutputs(i){const x=i._getExecutionVariable(this,Y,-1),e=i._getExecutionVariable(this,a,null);if(void 0!==e&&null!==e&&x===i.executionId)this.isValid.setValue(!0,i),this.value.setValue(e,i);else try{const x=this._doOperation(i);if(void 0===x||null===x)return void this.isValid.setValue(!1,i);i._setExecutionVariable(this,a,x),i._setExecutionVariable(this,Y,i.executionId),this.value.setValue(x,i),this.isValid.setValue(!0,i)}catch(j){this.isValid.setValue(!1,i)}}}}}]);