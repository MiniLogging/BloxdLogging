"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[93],{15112:(M,p,b)=>{b.r(p),b.d(p,{FlowGraphJsonPointerParserBlock:()=>F});var Q=b(13468),q=b(13477);const B=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class k{constructor(M,p){this.path=M,this.ownerBlock=p,this.templatedInputs=[];let b=B.exec(M);const k=new Set;for(;b;){const[,u]=b;if(k.has(u))throw new Error("Duplicate template variable detected.");k.add(u),this.templatedInputs.push(p.registerDataInput(u,q.e,new Q.e(0))),b=B.exec(M)}}getAccessor(M,p){let b=this.path;for(const Q of this.templatedInputs){const M=Q.getValue(p).value;if("number"!==typeof M||M<0)throw new Error("Invalid value for templated input.");b=b.replace(`{${Q.name}}`,M.toString())}return M.convert(b)}}var u=b(11757),T=b(11796),O=b(11833),H=b(14995);class F extends H.d{constructor(M){super(q.c,M),this.config=M,this.object=this.registerDataOutput("object",q.c),this.propertyName=this.registerDataOutput("propertyName",q.c),this.setterFunction=this.registerDataOutput("setFunction",q.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",q.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",q.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new k(M.jsonPointer,this)}_doOperation(M){var p,b,Q;const q=this.templateComponent.getAccessor(this.config.pathConverter,M),B=q.info.get(q.object),k=null===(p=(b=q.info).getTarget)||void 0===p?void 0:p.call(b,q.object),u=null===(Q=q.info.getPropertyName)||void 0===Q?void 0:Q[0](q.object);if(!k)throw new Error("Object is undefined");return this.object.setValue(k,M),u&&this.propertyName.setValue(u,M),B}_setPropertyValue(M,p,b,Q){var q,B;const k=this.templateComponent.getAccessor(this.config.pathConverter,Q),u=k.info.type;u.startsWith("Color")&&(b=o(b,u)),null===(q=(B=k.info).set)||void 0===q||q.call(B,b,k.object)}_getPropertyValue(M,p,b){const Q=this.templateComponent.getAccessor(this.config.pathConverter,b),q=Q.info.type,B=Q.info.get(Q.object);return q.startsWith("Color")?function(M){if(M instanceof O.ap)return new T.Ap(M.r,M.g,M.b);if(M instanceof O.Sb)return new T.Vector4(M.r,M.g,M.b,M.a);throw new Error("Invalid color type")}(B):B}_getInterpolationAnimationPropertyInfo(M,p,b){const Q=this.templateComponent.getAccessor(this.config.pathConverter,b);return(M,p,b,q)=>{var B;const k=[],u=Q.info.type;return u.startsWith("Color")&&(M=M.map((M=>({frame:M.frame,value:o(M.value,u)})))),null===(B=Q.info.interpolation)||void 0===B||B.forEach(((p,B)=>{var u;const T=(null===(u=Q.info.getPropertyName)||void 0===u?void 0:u[B](Q.object))||"Animation-interpolation-"+B;let O=M;b!==p.type&&(O=M.map((M=>({frame:M.frame,value:p.getValue(void 0,M.value.Ob?M.value.Ob():[M.value],0,1)}))));const H=p.buildAnimations(Q.object,T,60,O);for(const M of H)q&&M.babylonAnimation.setEasingFunction(q),k.push(M.babylonAnimation)})),k}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function o(M,p){return M.getClassName().startsWith("Color")?M:"ap"===p?new O.ap(M.x,M.y,M.z):"Sb"===p?new O.Sb(M.x,M.y,M.z,M.w):M}(0,u.g)("FlowGraphJsonPointerParserBlock",F)},14995:(M,p,b)=>{b.d(p,{d:()=>u});var Q=b(13492),q=b(13477);const B="cachedOperationValue",k="cachedExecutionId";class u extends Q.b{constructor(M,p){super(p),this.value=this.registerDataOutput("value",M),this.isValid=this.registerDataOutput("isValid",q.d)}_updateOutputs(M){const p=M._getExecutionVariable(this,k,-1),b=M._getExecutionVariable(this,B,null);if(void 0!==b&&null!==b&&p===M.executionId)this.isValid.setValue(!0,M),this.value.setValue(b,M);else try{const p=this._doOperation(M);if(void 0===p||null===p)return void this.isValid.setValue(!1,M);M._setExecutionVariable(this,B,p),M._setExecutionVariable(this,k,M.executionId),this.value.setValue(p,M),this.isValid.setValue(!0,M)}catch(Q){this.isValid.setValue(!1,M)}}}}}]);