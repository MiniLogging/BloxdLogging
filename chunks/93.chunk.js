"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[93],{15914:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphJsonPointerParserBlock:()=>D});var e=b(14278),c=b(14282);const z=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class M{constructor(I,g){this.path=I,this.ownerBlock=g,this.templatedInputs=[];let b=z.exec(I);const M=new Set;for(;b;){const[,J]=b;if(M.has(J))throw new Error("Duplicate template variable detected.");M.add(J),this.templatedInputs.push(g.registerDataInput(J,c.h,new e.d(0))),b=z.exec(I)}}getAccessor(I,g){let b=this.path;for(const e of this.templatedInputs){const I=e.getValue(g).value;if("number"!==typeof I||I<0)throw new Error("Invalid value for templated input.");b=b.replace(`{${e.name}}`,I.toString())}return I.convert(b)}}var J=b(12558),o=b(12590),n=b(12637),G=b(15776);class D extends G.d{constructor(I){super(c.c,I),this.config=I,this.object=this.registerDataOutput("object",c.c),this.propertyName=this.registerDataOutput("propertyName",c.c),this.setterFunction=this.registerDataOutput("setFunction",c.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",c.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",c.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new M(I.jsonPointer,this)}_doOperation(I){var g,b,e;const c=this.templateComponent.getAccessor(this.config.pathConverter,I),z=c.info.get(c.object),M=null===(g=(b=c.info).getTarget)||void 0===g?void 0:g.call(b,c.object),J=null===(e=c.info.getPropertyName)||void 0===e?void 0:e[0](c.object);if(!M)throw new Error("Object is undefined");return this.object.setValue(M,I),J&&this.propertyName.setValue(J,I),z}_setPropertyValue(I,g,b,e){var c,z;const M=this.templateComponent.getAccessor(this.config.pathConverter,e),J=M.info.type;J.startsWith("Color")&&(b=p(b,J)),null===(c=(z=M.info).set)||void 0===c||c.call(z,b,M.object)}_getPropertyValue(I,g,b){const e=this.templateComponent.getAccessor(this.config.pathConverter,b),c=e.info.type,z=e.info.get(e.object);return c.startsWith("Color")?function(I){if(I instanceof n.Eg)return new o.Vg(I.r,I.g,I.b);if(I instanceof n.Sb)return new o.Vector4(I.r,I.g,I.b,I.a);throw new Error("Invalid color type")}(z):z}_getInterpolationAnimationPropertyInfo(I,g,b){const e=this.templateComponent.getAccessor(this.config.pathConverter,b);return(I,g,b,c)=>{var z;const M=[],J=e.info.type;return J.startsWith("Color")&&(I=I.map((I=>({frame:I.frame,value:p(I.value,J)})))),null===(z=e.info.interpolation)||void 0===z||z.forEach(((g,z)=>{var J;const o=(null===(J=e.info.getPropertyName)||void 0===J?void 0:J[z](e.object))||"Animation-interpolation-"+z;let n=I;b!==g.type&&(n=I.map((I=>({frame:I.frame,value:g.getValue(void 0,I.value.bb?I.value.bb():[I.value],0,1)}))));const G=g.buildAnimations(e.object,o,60,n);for(const I of G)c&&I.babylonAnimation.setEasingFunction(c),M.push(I.babylonAnimation)})),M}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function p(I,g){return I.getClassName().startsWith("Color")?I:"Eg"===g?new n.Eg(I.x,I.y,I.z):"Sb"===g?new n.Sb(I.x,I.y,I.z,I.w):I}(0,J.g)("FlowGraphJsonPointerParserBlock",D)},15776:(I,g,b)=>{b.d(g,{d:()=>J});var e=b(14295),c=b(14282);const z="cachedOperationValue",M="cachedExecutionId";class J extends e.d{constructor(I,g){super(g),this.value=this.registerDataOutput("value",I),this.isValid=this.registerDataOutput("isValid",c.g)}_updateOutputs(I){const g=I._getExecutionVariable(this,M,-1),b=I._getExecutionVariable(this,z,null);if(void 0!==b&&null!==b&&g===I.executionId)this.isValid.setValue(!0,I),this.value.setValue(b,I);else try{const g=this._doOperation(I);if(void 0===g||null===g)return void this.isValid.setValue(!1,I);I._setExecutionVariable(this,z,g),I._setExecutionVariable(this,M,I.executionId),this.value.setValue(g,I),this.isValid.setValue(!0,I)}catch(e){this.isValid.setValue(!1,I)}}}}}]);