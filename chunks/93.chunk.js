"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[93],{15688:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphJsonPointerParserBlock:()=>K});var V=I(14029),i=I(14033);const A=new RegExp(/\/\{(\w+)\}(?=\/|$)/g);class B{constructor(y,S){this.path=y,this.ownerBlock=S,this.templatedInputs=[];let I=A.exec(y);const B=new Set;for(;I;){const[,d]=I;if(B.has(d))throw new Error("Duplicate template variable detected.");B.add(d),this.templatedInputs.push(S.registerDataInput(d,i.i,new V.c(0))),I=A.exec(y)}}getAccessor(y,S){let I=this.path;for(const V of this.templatedInputs){const y=V.getValue(S).value;if("number"!==typeof y||y<0)throw new Error("Invalid value for templated input.");I=I.replace(`{${V.name}}`,y.toString())}return y.convert(I)}}var d=I(12282),F=I(12321),J=I(12362),u=I(15540);class K extends u.e{constructor(y){super(i.c,y),this.config=y,this.object=this.registerDataOutput("object",i.c),this.propertyName=this.registerDataOutput("propertyName",i.c),this.setterFunction=this.registerDataOutput("setFunction",i.c,this._setPropertyValue.bind(this)),this.getterFunction=this.registerDataOutput("getFunction",i.c,this._getPropertyValue.bind(this)),this.generateAnimationsFunction=this.registerDataOutput("generateAnimationsFunction",i.c,this._getInterpolationAnimationPropertyInfo.bind(this)),this.templateComponent=new B(y.jsonPointer,this)}_doOperation(y){var S,I,V;const i=this.templateComponent.getAccessor(this.config.pathConverter,y),A=i.info.get(i.object),B=null===(S=(I=i.info).getTarget)||void 0===S?void 0:S.call(I,i.object),d=null===(V=i.info.getPropertyName)||void 0===V?void 0:V[0](i.object);if(!B)throw new Error("Object is undefined");return this.object.setValue(B,y),d&&this.propertyName.setValue(d,y),A}_setPropertyValue(y,S,I,V){var i,A;const B=this.templateComponent.getAccessor(this.config.pathConverter,V),d=B.info.type;d.startsWith("Color")&&(I=G(I,d)),null===(i=(A=B.info).set)||void 0===i||i.call(A,I,B.object)}_getPropertyValue(y,S,I){const V=this.templateComponent.getAccessor(this.config.pathConverter,I),i=V.info.type,A=V.info.get(V.object);return i.startsWith("Color")?function(y){if(y instanceof J.DS)return new F.OS(y.r,y.g,y.b);if(y instanceof J.vd)return new F.Vector4(y.r,y.g,y.b,y.a);throw new Error("Invalid color type")}(A):A}_getInterpolationAnimationPropertyInfo(y,S,I){const V=this.templateComponent.getAccessor(this.config.pathConverter,I);return(y,S,I,i)=>{var A;const B=[],d=V.info.type;return d.startsWith("Color")&&(y=y.map((y=>({frame:y.frame,value:G(y.value,d)})))),null===(A=V.info.interpolation)||void 0===A||A.forEach(((S,A)=>{var d;const F=(null===(d=V.info.getPropertyName)||void 0===d?void 0:d[A](V.object))||"Animation-interpolation-"+A;let J=y;I!==S.type&&(J=y.map((y=>({frame:y.frame,value:S.getValue(void 0,y.value.Vd?y.value.Vd():[y.value],0,1)}))));const u=S.buildAnimations(V.object,F,60,J);for(const y of u)i&&y.babylonAnimation.setEasingFunction(i),B.push(y.babylonAnimation)})),B}}getClassName(){return"FlowGraphJsonPointerParserBlock"}}function G(y,S){return y.getClassName().startsWith("Color")?y:"DS"===S?new J.DS(y.x,y.y,y.z):"vd"===S?new J.vd(y.x,y.y,y.z,y.w):y}(0,d.e)("FlowGraphJsonPointerParserBlock",K)},15540:(y,S,I)=>{I.d(S,{e:()=>d});var V=I(14058),i=I(14033);const A="cachedOperationValue",B="cachedExecutionId";class d extends V.d{constructor(y,S){super(S),this.value=this.registerDataOutput("value",y),this.isValid=this.registerDataOutput("isValid",i.f)}_updateOutputs(y){const S=y._getExecutionVariable(this,B,-1),I=y._getExecutionVariable(this,A,null);if(void 0!==I&&null!==I&&S===y.executionId)this.isValid.setValue(!0,y),this.value.setValue(I,y);else try{const S=this._doOperation(y);if(void 0===S||null===S)return void this.isValid.setValue(!1,y);y._setExecutionVariable(this,A,S),y._setExecutionVariable(this,B,y.executionId),this.value.setValue(S,y),this.isValid.setValue(!0,y)}catch(V){this.isValid.setValue(!1,y)}}}}}]);