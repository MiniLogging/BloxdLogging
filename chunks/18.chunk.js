"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[18],{2275:(c,b,A)=>{function o(c){return Math.floor(c/8)}function t(c){return 1<<c%8}A.d(b,{OptimizeIndices:()=>h});class n{constructor(c){this.size=c,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(c){if(c>=this.size)throw new RangeError("Bit index out of range");const b=o(c),A=t(c);return 0!==(this._byteArray[b]&A)}set(c,b){if(c>=this.size)throw new RangeError("Bit index out of range");const A=o(c),n=t(c);b?this._byteArray[A]|=n:this._byteArray[A]&=~n}}function h(c){const b=[],A=c.length/3;for(let n=0;n<A;n++)b.push([c[3*n],c[3*n+1],c[3*n+2]]);const o=new Map;for(let n=0;n<b.length;n++){const c=b[n];for(const b of c){let c=o.get(b);c||o.set(b,c=[]),c.push(n)}}const t=new n(A),h=[],s=c=>{const A=[c];for(;A.length>0;){const c=A.pop();if(!t.get(c)){t.set(c,!0),h.push(b[c]);for(const n of b[c]){const c=o.get(n);if(!c)return;for(const b of c)t.get(b)||A.push(b)}}}};for(let n=0;n<A;n++)t.get(n)||s(n);let L=0;for(const n of h)c[L++]=n[0],c[L++]=n[1],c[L++]=n[2]}}}]);