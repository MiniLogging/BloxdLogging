"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[100],{15716:(e,d,v)=>{v.r(d),v.d(d,{FlowGraphThrottleBlock:()=>B});var P=v(14181),p=v(14220),L=v(12381);class B extends p.c{constructor(e){super(e),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",P.n),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",P.n,NaN)}_execute(e,d){if(d===this.reset)return this.lastRemainingTime.setValue(NaN,e),e._setExecutionVariable(this,"lastRemainingTime",NaN),void e._setExecutionVariable(this,"timestamp",0);const v=this.duration.getValue(e);if(v<=0||isNaN(v)||!isFinite(v))return this._reportError(e,"Invalid duration in Throttle block");const P=e._getExecutionVariable(this,"lastRemainingTime",NaN),p=Date.now();if(isNaN(P))return this.lastRemainingTime.setValue(0,e),e._setExecutionVariable(this,"lastRemainingTime",0),e._setExecutionVariable(this,"timestamp",p),this.out._activateSignal(e);{const d=p-e._getExecutionVariable(this,"timestamp",0),P=1e3*v;if(P<=d)return this.lastRemainingTime.setValue(0,e),e._setExecutionVariable(this,"lastRemainingTime",0),e._setExecutionVariable(this,"timestamp",p),this.out._activateSignal(e);{const v=P-d;this.lastRemainingTime.setValue(v/1e3,e),e._setExecutionVariable(this,"lastRemainingTime",v)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,L.h)("FlowGraphThrottleBlock",B)}}]);