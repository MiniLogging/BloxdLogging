"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[100],{15022:(K,O,F)=>{F.r(O),F.d(O,{FlowGraphThrottleBlock:()=>q});var f=F(13441),r=F(13493),l=F(11661);class q extends r.d{constructor(K){super(K),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",f.s),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",f.s,NaN)}_execute(K,O){if(O===this.reset)return this.lastRemainingTime.setValue(NaN,K),K._setExecutionVariable(this,"lastRemainingTime",NaN),void K._setExecutionVariable(this,"timestamp",0);const F=this.duration.getValue(K);if(F<=0||isNaN(F)||!isFinite(F))return this._reportError(K,"Invalid duration in Throttle block");const f=K._getExecutionVariable(this,"lastRemainingTime",NaN),r=Date.now();if(isNaN(f))return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",r),this.out._activateSignal(K);{const O=r-K._getExecutionVariable(this,"timestamp",0),f=1e3*F;if(f<=O)return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",r),this.out._activateSignal(K);{const F=f-O;this.lastRemainingTime.setValue(F/1e3,K),K._setExecutionVariable(this,"lastRemainingTime",F)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,l.g)("FlowGraphThrottleBlock",q)}}]);