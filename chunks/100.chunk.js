"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[100],{15400:(L,r,p)=>{p.r(r),p.d(r,{FlowGraphThrottleBlock:()=>j});var J=p(13868),i=p(13922),n=p(12087);class j extends i.e{constructor(L){super(L),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",J.v),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",J.v,NaN)}_execute(L,r){if(r===this.reset)return this.lastRemainingTime.setValue(NaN,L),L._setExecutionVariable(this,"lastRemainingTime",NaN),void L._setExecutionVariable(this,"timestamp",0);const p=this.duration.getValue(L);if(p<=0||isNaN(p)||!isFinite(p))return this._reportError(L,"Invalid duration in Throttle block");const J=L._getExecutionVariable(this,"lastRemainingTime",NaN),i=Date.now();if(isNaN(J))return this.lastRemainingTime.setValue(0,L),L._setExecutionVariable(this,"lastRemainingTime",0),L._setExecutionVariable(this,"timestamp",i),this.out._activateSignal(L);{const r=i-L._getExecutionVariable(this,"timestamp",0),J=1e3*p;if(J<=r)return this.lastRemainingTime.setValue(0,L),L._setExecutionVariable(this,"lastRemainingTime",0),L._setExecutionVariable(this,"timestamp",i),this.out._activateSignal(L);{const p=J-r;this.lastRemainingTime.setValue(p/1e3,L),L._setExecutionVariable(this,"lastRemainingTime",p)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,n.e)("FlowGraphThrottleBlock",j)}}]);