"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[100],{15422:(I,O,C)=>{C.r(O),C.d(O,{FlowGraphThrottleBlock:()=>y});var j=C(13886),K=C(13944),i=C(12226);class y extends K.e{constructor(I){super(I),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",j.u),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",j.u,NaN)}_execute(I,O){if(O===this.reset)return this.lastRemainingTime.setValue(NaN,I),I._setExecutionVariable(this,"lastRemainingTime",NaN),void I._setExecutionVariable(this,"timestamp",0);const C=this.duration.getValue(I);if(C<=0||isNaN(C)||!isFinite(C))return this._reportError(I,"Invalid duration in Throttle block");const j=I._getExecutionVariable(this,"lastRemainingTime",NaN),K=Date.now();if(isNaN(j))return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",K),this.out._activateSignal(I);{const O=K-I._getExecutionVariable(this,"timestamp",0),j=1e3*C;if(j<=O)return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",K),this.out._activateSignal(I);{const C=j-O;this.lastRemainingTime.setValue(C/1e3,I),I._setExecutionVariable(this,"lastRemainingTime",C)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,i.e)("FlowGraphThrottleBlock",y)}}]);