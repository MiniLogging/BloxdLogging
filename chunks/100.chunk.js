"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[100],{14884:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphThrottleBlock:()=>Q});var F=b(13281),E=b(13333),w=b(11551);class Q extends E.d{constructor(U){super(U),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",F.s),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",F.s,NaN)}_execute(U,X){if(X===this.reset)return this.lastRemainingTime.setValue(NaN,U),U._setExecutionVariable(this,"lastRemainingTime",NaN),void U._setExecutionVariable(this,"timestamp",0);const b=this.duration.getValue(U);if(b<=0||isNaN(b)||!isFinite(b))return this._reportError(U,"Invalid duration in Throttle block");const F=U._getExecutionVariable(this,"lastRemainingTime",NaN),E=Date.now();if(isNaN(F))return this.lastRemainingTime.setValue(0,U),U._setExecutionVariable(this,"lastRemainingTime",0),U._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(U);{const X=E-U._getExecutionVariable(this,"timestamp",0),F=1e3*b;if(F<=X)return this.lastRemainingTime.setValue(0,U),U._setExecutionVariable(this,"lastRemainingTime",0),U._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(U);{const b=F-X;this.lastRemainingTime.setValue(b/1e3,U),U._setExecutionVariable(this,"lastRemainingTime",b)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,w.f)("FlowGraphThrottleBlock",Q)}}]);