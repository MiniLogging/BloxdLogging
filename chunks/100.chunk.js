"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{14188:(c,b,A)=>{A.r(b),A.d(b,{FlowGraphSetVariableBlock:()=>h});var o=A(633),t=A(12813),n=A(12763);class h extends t.d{constructor(c){if(super(c),!c.variable&&!c.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(c.variables&&c.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(c.variables)for(const b of c.variables)this.registerDataInput(b,n.e);else this.registerDataInput("value",n.e)}_execute(c,b){var A,o;if(null!==(A=this.config)&&void 0!==A&&A.variables)for(const t of this.config.variables)this._saveVariable(c,t);else this._saveVariable(c,null===(o=this.config)||void 0===o?void 0:o.variable,"value");this.out._activateSignal(c)}_saveVariable(c,b,A){var o;const t=c._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const h of t){const A=c.assetsContext.animationGroups.find((c=>c.uniqueId==h));if(A)for(const o of A.targetedAnimations)if(o.target===c&&o.animation.targetProperty===b){A.stop();const b=t.indexOf(h);b>-1&&t.splice(b,1),c._setGlobalContextVariable("currentlyRunningAnimationGroups",t);break}}const n=null===(o=this.getDataInput(A||b))||void 0===o?void 0:o.getValue(c);c.setVariable(b,n)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(c){var b;super.serialize(c),c.config.variable=null===(b=this.config)||void 0===b?void 0:b.variable}}(0,o.d)("FlowGraphSetVariableBlock",h)}}]);