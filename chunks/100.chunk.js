"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[100],{15941:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphThrottleBlock:()=>f});var G=T(14237),B=T(14295),L=T(12651);class f extends B.d{constructor(K){super(K),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",G.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",G.q,NaN)}_execute(K,A){if(A===this.reset)return this.lastRemainingTime.setValue(NaN,K),K._setExecutionVariable(this,"lastRemainingTime",NaN),void K._setExecutionVariable(this,"timestamp",0);const T=this.duration.getValue(K);if(T<=0||isNaN(T)||!isFinite(T))return this._reportError(K,"Invalid duration in Throttle block");const G=K._getExecutionVariable(this,"lastRemainingTime",NaN),B=Date.now();if(isNaN(G))return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(K);{const A=B-K._getExecutionVariable(this,"timestamp",0),G=1e3*T;if(G<=A)return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(K);{const T=G-A;this.lastRemainingTime.setValue(T/1e3,K),K._setExecutionVariable(this,"lastRemainingTime",T)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,L.c)("FlowGraphThrottleBlock",f)}}]);