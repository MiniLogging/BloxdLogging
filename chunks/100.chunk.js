"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[100],{14438:(R,J,B)=>{B.r(J),B.d(J,{FlowGraphThrottleBlock:()=>N});var Q=B(12894),h=B(12947),y=B(11142);class N extends h.d{constructor(R){super(R),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Q.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Q.t,NaN)}_execute(R,J){if(J===this.reset)return this.lastRemainingTime.setValue(NaN,R),R._setExecutionVariable(this,"lastRemainingTime",NaN),void R._setExecutionVariable(this,"timestamp",0);const B=this.duration.getValue(R);if(B<=0||isNaN(B)||!isFinite(B))return this._reportError(R,"Invalid duration in Throttle block");const Q=R._getExecutionVariable(this,"lastRemainingTime",NaN),h=Date.now();if(isNaN(Q))return this.lastRemainingTime.setValue(0,R),R._setExecutionVariable(this,"lastRemainingTime",0),R._setExecutionVariable(this,"timestamp",h),this.out._activateSignal(R);{const J=h-R._getExecutionVariable(this,"timestamp",0),Q=1e3*B;if(Q<=J)return this.lastRemainingTime.setValue(0,R),R._setExecutionVariable(this,"lastRemainingTime",0),R._setExecutionVariable(this,"timestamp",h),this.out._activateSignal(R);{const B=Q-J;this.lastRemainingTime.setValue(B/1e3,R),R._setExecutionVariable(this,"lastRemainingTime",B)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,y.h)("FlowGraphThrottleBlock",N)}}]);