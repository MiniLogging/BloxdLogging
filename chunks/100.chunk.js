"use strict";(self.fjf2z1c8il8=self.fjf2z1c8il8||[]).push([[100],{15834:(g,i,a)=>{a.r(i),a.d(i,{FlowGraphThrottleBlock:()=>b});var n=a(14214),L=a(14271),d=a(12415);class b extends L.d{constructor(g){super(g),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",n.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",n.q,NaN)}_execute(g,i){if(i===this.reset)return this.lastRemainingTime.setValue(NaN,g),g._setExecutionVariable(this,"lastRemainingTime",NaN),void g._setExecutionVariable(this,"timestamp",0);const a=this.duration.getValue(g);if(a<=0||isNaN(a)||!isFinite(a))return this._reportError(g,"Invalid duration in Throttle block");const n=g._getExecutionVariable(this,"lastRemainingTime",NaN),L=Date.now();if(isNaN(n))return this.lastRemainingTime.setValue(0,g),g._setExecutionVariable(this,"lastRemainingTime",0),g._setExecutionVariable(this,"timestamp",L),this.out._activateSignal(g);{const i=L-g._getExecutionVariable(this,"timestamp",0),n=1e3*a;if(n<=i)return this.lastRemainingTime.setValue(0,g),g._setExecutionVariable(this,"lastRemainingTime",0),g._setExecutionVariable(this,"timestamp",L),this.out._activateSignal(g);{const a=n-i;this.lastRemainingTime.setValue(a/1e3,g),g._setExecutionVariable(this,"lastRemainingTime",a)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,d.e)("FlowGraphThrottleBlock",b)}}]);