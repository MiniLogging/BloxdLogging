"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[100],{16116:(h,d,T)=>{T.r(d),T.d(d,{FlowGraphThrottleBlock:()=>n});var Y=T(14528),y=T(14578),C=T(12714);class n extends y.e{constructor(h){super(h),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Y.s),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Y.s,NaN)}_execute(h,d){if(d===this.reset)return this.lastRemainingTime.setValue(NaN,h),h._setExecutionVariable(this,"lastRemainingTime",NaN),void h._setExecutionVariable(this,"timestamp",0);const T=this.duration.getValue(h);if(T<=0||isNaN(T)||!isFinite(T))return this._reportError(h,"Invalid duration in Throttle block");const Y=h._getExecutionVariable(this,"lastRemainingTime",NaN),y=Date.now();if(isNaN(Y))return this.lastRemainingTime.setValue(0,h),h._setExecutionVariable(this,"lastRemainingTime",0),h._setExecutionVariable(this,"timestamp",y),this.out._activateSignal(h);{const d=y-h._getExecutionVariable(this,"timestamp",0),Y=1e3*T;if(Y<=d)return this.lastRemainingTime.setValue(0,h),h._setExecutionVariable(this,"lastRemainingTime",0),h._setExecutionVariable(this,"timestamp",y),this.out._activateSignal(h);{const T=Y-d;this.lastRemainingTime.setValue(T/1e3,h),h._setExecutionVariable(this,"lastRemainingTime",T)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,C.e)("FlowGraphThrottleBlock",n)}}]);