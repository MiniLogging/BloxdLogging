"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[100],{15046:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphThrottleBlock:()=>A});var m=K(13514),O=K(13564),X=K(11789);class A extends O.c{constructor(C){super(C),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",m.w),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",m.w,NaN)}_execute(C,U){if(U===this.reset)return this.lastRemainingTime.setValue(NaN,C),C._setExecutionVariable(this,"lastRemainingTime",NaN),void C._setExecutionVariable(this,"timestamp",0);const K=this.duration.getValue(C);if(K<=0||isNaN(K)||!isFinite(K))return this._reportError(C,"Invalid duration in Throttle block");const m=C._getExecutionVariable(this,"lastRemainingTime",NaN),O=Date.now();if(isNaN(m))return this.lastRemainingTime.setValue(0,C),C._setExecutionVariable(this,"lastRemainingTime",0),C._setExecutionVariable(this,"timestamp",O),this.out._activateSignal(C);{const U=O-C._getExecutionVariable(this,"timestamp",0),m=1e3*K;if(m<=U)return this.lastRemainingTime.setValue(0,C),C._setExecutionVariable(this,"lastRemainingTime",0),C._setExecutionVariable(this,"timestamp",O),this.out._activateSignal(C);{const K=m-U;this.lastRemainingTime.setValue(K/1e3,C),C._setExecutionVariable(this,"lastRemainingTime",K)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,X.h)("FlowGraphThrottleBlock",A)}}]);