"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[100],{14539:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphThrottleBlock:()=>y});var q=M(13004),w=M(13054),u=M(11242);class y extends w.e{constructor(K){super(K),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",q.x),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",q.x,NaN)}_execute(K,H){if(H===this.reset)return this.lastRemainingTime.setValue(NaN,K),K._setExecutionVariable(this,"lastRemainingTime",NaN),void K._setExecutionVariable(this,"timestamp",0);const M=this.duration.getValue(K);if(M<=0||isNaN(M)||!isFinite(M))return this._reportError(K,"Invalid duration in Throttle block");const q=K._getExecutionVariable(this,"lastRemainingTime",NaN),w=Date.now();if(isNaN(q))return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(K);{const H=w-K._getExecutionVariable(this,"timestamp",0),q=1e3*M;if(q<=H)return this.lastRemainingTime.setValue(0,K),K._setExecutionVariable(this,"lastRemainingTime",0),K._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(K);{const M=q-H;this.lastRemainingTime.setValue(M/1e3,K),K._setExecutionVariable(this,"lastRemainingTime",M)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,u.f)("FlowGraphThrottleBlock",y)}}]);