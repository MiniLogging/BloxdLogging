"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[100],{16308:(B,u,F)=>{F.r(u),F.d(u,{FlowGraphThrottleBlock:()=>G});var Z=F(14701),V=F(14741),p=F(12949);class G extends V.b{constructor(B){super(B),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Z.u),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Z.u,NaN)}_execute(B,u){if(u===this.reset)return this.lastRemainingTime.setValue(NaN,B),B._setExecutionVariable(this,"lastRemainingTime",NaN),void B._setExecutionVariable(this,"timestamp",0);const F=this.duration.getValue(B);if(F<=0||isNaN(F)||!isFinite(F))return this._reportError(B,"Invalid duration in Throttle block");const Z=B._getExecutionVariable(this,"lastRemainingTime",NaN),V=Date.now();if(isNaN(Z))return this.lastRemainingTime.setValue(0,B),B._setExecutionVariable(this,"lastRemainingTime",0),B._setExecutionVariable(this,"timestamp",V),this.out._activateSignal(B);{const u=V-B._getExecutionVariable(this,"timestamp",0),Z=1e3*F;if(Z<=u)return this.lastRemainingTime.setValue(0,B),B._setExecutionVariable(this,"lastRemainingTime",0),B._setExecutionVariable(this,"timestamp",V),this.out._activateSignal(B);{const F=Z-u;this.lastRemainingTime.setValue(F/1e3,B),B._setExecutionVariable(this,"lastRemainingTime",F)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,p.f)("FlowGraphThrottleBlock",G)}}]);