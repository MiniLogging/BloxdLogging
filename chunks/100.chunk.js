"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[100],{15639:(N,U,V)=>{V.r(U),V.d(U,{FlowGraphThrottleBlock:()=>q});var A=V(14036),t=V(14094),n=V(12344);class q extends t.b{constructor(N){super(N),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",A.p),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",A.p,NaN)}_execute(N,U){if(U===this.reset)return this.lastRemainingTime.setValue(NaN,N),N._setExecutionVariable(this,"lastRemainingTime",NaN),void N._setExecutionVariable(this,"timestamp",0);const V=this.duration.getValue(N);if(V<=0||isNaN(V)||!isFinite(V))return this._reportError(N,"Invalid duration in Throttle block");const A=N._getExecutionVariable(this,"lastRemainingTime",NaN),t=Date.now();if(isNaN(A))return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(N);{const U=t-N._getExecutionVariable(this,"timestamp",0),A=1e3*V;if(A<=U)return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(N);{const V=A-U;this.lastRemainingTime.setValue(V/1e3,N),N._setExecutionVariable(this,"lastRemainingTime",V)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,n.e)("FlowGraphThrottleBlock",q)}}]);