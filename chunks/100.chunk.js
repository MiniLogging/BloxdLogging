"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[100],{15453:(t,U,y)=>{y.r(U),y.d(U,{FlowGraphThrottleBlock:()=>mt});var I=y(13845),r=y(13899),Y=y(12338);class mt extends r.e{constructor(t){super(t),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",I.w),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",I.w,NaN)}_execute(t,U){if(U===this.reset)return this.lastRemainingTime.setValue(NaN,t),t._setExecutionVariable(this,"lastRemainingTime",NaN),void t._setExecutionVariable(this,"timestamp",0);const y=this.duration.getValue(t);if(y<=0||isNaN(y)||!isFinite(y))return this._reportError(t,"Invalid duration in Throttle block");const I=t._getExecutionVariable(this,"lastRemainingTime",NaN),r=Date.now();if(isNaN(I))return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",r),this.out._activateSignal(t);{const U=r-t._getExecutionVariable(this,"timestamp",0),I=1e3*y;if(I<=U)return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",r),this.out._activateSignal(t);{const y=I-U;this.lastRemainingTime.setValue(y/1e3,t),t._setExecutionVariable(this,"lastRemainingTime",y)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,Y.f)("FlowGraphThrottleBlock",mt)}}]);