"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[100],{15667:(V,h,mV)=>{mV.r(h),mV.d(h,{FlowGraphThrottleBlock:()=>A});var t=mV(14109),L=mV(14144),N=mV(12388);class A extends L.c{constructor(V){super(V),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",t.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",t.r,NaN)}_execute(V,h){if(h===this.reset)return this.lastRemainingTime.setValue(NaN,V),V._setExecutionVariable(this,"lastRemainingTime",NaN),void V._setExecutionVariable(this,"timestamp",0);const mV=this.duration.getValue(V);if(mV<=0||isNaN(mV)||!isFinite(mV))return this._reportError(V,"Invalid duration in Throttle block");const t=V._getExecutionVariable(this,"lastRemainingTime",NaN),L=Date.now();if(isNaN(t))return this.lastRemainingTime.setValue(0,V),V._setExecutionVariable(this,"lastRemainingTime",0),V._setExecutionVariable(this,"timestamp",L),this.out._activateSignal(V);{const h=L-V._getExecutionVariable(this,"timestamp",0),t=1e3*mV;if(t<=h)return this.lastRemainingTime.setValue(0,V),V._setExecutionVariable(this,"lastRemainingTime",0),V._setExecutionVariable(this,"timestamp",L),this.out._activateSignal(V);{const mV=t-h;this.lastRemainingTime.setValue(mV/1e3,V),V._setExecutionVariable(this,"lastRemainingTime",mV)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,N.i)("FlowGraphThrottleBlock",A)}}]);