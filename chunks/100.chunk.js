"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[100],{14397:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphThrottleBlock:()=>a});var d=C(12831),U=C(12874),W=C(11076);class a extends U.c{constructor(N){super(N),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",d.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",d.r,NaN)}_execute(N,q){if(q===this.reset)return this.lastRemainingTime.setValue(NaN,N),N._setExecutionVariable(this,"lastRemainingTime",NaN),void N._setExecutionVariable(this,"timestamp",0);const C=this.duration.getValue(N);if(C<=0||isNaN(C)||!isFinite(C))return this._reportError(N,"Invalid duration in Throttle block");const d=N._getExecutionVariable(this,"lastRemainingTime",NaN),U=Date.now();if(isNaN(d))return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(N);{const q=U-N._getExecutionVariable(this,"timestamp",0),d=1e3*C;if(d<=q)return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(N);{const C=d-q;this.lastRemainingTime.setValue(C/1e3,N),N._setExecutionVariable(this,"lastRemainingTime",C)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,W.h)("FlowGraphThrottleBlock",a)}}]);