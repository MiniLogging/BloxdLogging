"use strict";(self.i6szn8jgzh=self.i6szn8jgzh||[]).push([[100],{15133:(b,n,i)=>{i.r(n),i.d(n,{FlowGraphThrottleBlock:()=>U});var e=i(13522),V=i(13582),Q=i(11734);class U extends V.d{constructor(b){super(b),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",e.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",e.q,NaN)}_execute(b,n){if(n===this.reset)return this.lastRemainingTime.setValue(NaN,b),b._setExecutionVariable(this,"lastRemainingTime",NaN),void b._setExecutionVariable(this,"timestamp",0);const i=this.duration.getValue(b);if(i<=0||isNaN(i)||!isFinite(i))return this._reportError(b,"Invalid duration in Throttle block");const e=b._getExecutionVariable(this,"lastRemainingTime",NaN),V=Date.now();if(isNaN(e))return this.lastRemainingTime.setValue(0,b),b._setExecutionVariable(this,"lastRemainingTime",0),b._setExecutionVariable(this,"timestamp",V),this.out._activateSignal(b);{const n=V-b._getExecutionVariable(this,"timestamp",0),e=1e3*i;if(e<=n)return this.lastRemainingTime.setValue(0,b),b._setExecutionVariable(this,"lastRemainingTime",0),b._setExecutionVariable(this,"timestamp",V),this.out._activateSignal(b);{const i=e-n;this.lastRemainingTime.setValue(i/1e3,b),b._setExecutionVariable(this,"lastRemainingTime",i)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,Q.i)("FlowGraphThrottleBlock",U)}}]);