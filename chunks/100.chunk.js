"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[100],{15596:(N,p,T)=>{T.r(p),T.d(p,{FlowGraphThrottleBlock:()=>U});var A=T(14082),a=T(14129),C=T(12331);class U extends a.d{constructor(N){super(N),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",A.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",A.r,NaN)}_execute(N,p){if(p===this.reset)return this.lastRemainingTime.setValue(NaN,N),N._setExecutionVariable(this,"lastRemainingTime",NaN),void N._setExecutionVariable(this,"timestamp",0);const T=this.duration.getValue(N);if(T<=0||isNaN(T)||!isFinite(T))return this._reportError(N,"Invalid duration in Throttle block");const A=N._getExecutionVariable(this,"lastRemainingTime",NaN),a=Date.now();if(isNaN(A))return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",a),this.out._activateSignal(N);{const p=a-N._getExecutionVariable(this,"timestamp",0),A=1e3*T;if(A<=p)return this.lastRemainingTime.setValue(0,N),N._setExecutionVariable(this,"lastRemainingTime",0),N._setExecutionVariable(this,"timestamp",a),this.out._activateSignal(N);{const T=A-p;this.lastRemainingTime.setValue(T/1e3,N),N._setExecutionVariable(this,"lastRemainingTime",T)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,C.d)("FlowGraphThrottleBlock",U)}}]);