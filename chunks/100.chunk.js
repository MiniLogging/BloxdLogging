"use strict";(self.ynu1yiqvs98=self.ynu1yiqvs98||[]).push([[100],{14408:(I,E,j)=>{j.r(E),j.d(E,{FlowGraphThrottleBlock:()=>h});var e=j(12819),w=j(12859),z=j(11073);class h extends w.b{constructor(I){super(I),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",e.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",e.t,NaN)}_execute(I,E){if(E===this.reset)return this.lastRemainingTime.setValue(NaN,I),I._setExecutionVariable(this,"lastRemainingTime",NaN),void I._setExecutionVariable(this,"timestamp",0);const j=this.duration.getValue(I);if(j<=0||isNaN(j)||!isFinite(j))return this._reportError(I,"Invalid duration in Throttle block");const e=I._getExecutionVariable(this,"lastRemainingTime",NaN),w=Date.now();if(isNaN(e))return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(I);{const E=w-I._getExecutionVariable(this,"timestamp",0),e=1e3*j;if(e<=E)return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(I);{const j=e-E;this.lastRemainingTime.setValue(j/1e3,I),I._setExecutionVariable(this,"lastRemainingTime",j)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,z.h)("FlowGraphThrottleBlock",h)}}]);