"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[100],{15255:(b,X,P)=>{P.r(X),P.d(X,{FlowGraphThrottleBlock:()=>N});var Q=P(13631),S=P(13678),d=P(11802);class N extends S.b{constructor(b){super(b),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Q.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Q.t,NaN)}_execute(b,X){if(X===this.reset)return this.lastRemainingTime.setValue(NaN,b),b._setExecutionVariable(this,"lastRemainingTime",NaN),void b._setExecutionVariable(this,"timestamp",0);const P=this.duration.getValue(b);if(P<=0||isNaN(P)||!isFinite(P))return this._reportError(b,"Invalid duration in Throttle block");const Q=b._getExecutionVariable(this,"lastRemainingTime",NaN),S=Date.now();if(isNaN(Q))return this.lastRemainingTime.setValue(0,b),b._setExecutionVariable(this,"lastRemainingTime",0),b._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(b);{const X=S-b._getExecutionVariable(this,"timestamp",0),Q=1e3*P;if(Q<=X)return this.lastRemainingTime.setValue(0,b),b._setExecutionVariable(this,"lastRemainingTime",0),b._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(b);{const P=Q-X;this.lastRemainingTime.setValue(P/1e3,b),b._setExecutionVariable(this,"lastRemainingTime",P)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,d.h)("FlowGraphThrottleBlock",N)}}]);