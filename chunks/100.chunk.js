"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[100],{16241:(Y,c,h)=>{h.r(c),h.d(c,{FlowGraphThrottleBlock:()=>Q});var C=h(14459),E=h(14506),N=h(12825);class Q extends E.c{constructor(Y){super(Y),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",C.n),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",C.n,NaN)}_execute(Y,c){if(c===this.reset)return this.lastRemainingTime.setValue(NaN,Y),Y._setExecutionVariable(this,"lastRemainingTime",NaN),void Y._setExecutionVariable(this,"timestamp",0);const h=this.duration.getValue(Y);if(h<=0||isNaN(h)||!isFinite(h))return this._reportError(Y,"Invalid duration in Throttle block");const C=Y._getExecutionVariable(this,"lastRemainingTime",NaN),E=Date.now();if(isNaN(C))return this.lastRemainingTime.setValue(0,Y),Y._setExecutionVariable(this,"lastRemainingTime",0),Y._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(Y);{const c=E-Y._getExecutionVariable(this,"timestamp",0),C=1e3*h;if(C<=c)return this.lastRemainingTime.setValue(0,Y),Y._setExecutionVariable(this,"lastRemainingTime",0),Y._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(Y);{const h=C-c;this.lastRemainingTime.setValue(h/1e3,Y),Y._setExecutionVariable(this,"lastRemainingTime",h)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,N.e)("FlowGraphThrottleBlock",Q)}}]);