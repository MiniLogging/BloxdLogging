"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[100],{16118:(I,x,L)=>{L.r(x),L.d(x,{FlowGraphThrottleBlock:()=>Y});var F=L(14498),X=L(14540),G=L(12938);class Y extends X.e{constructor(I){super(I),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",F.x),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",F.x,NaN)}_execute(I,x){if(x===this.reset)return this.lastRemainingTime.setValue(NaN,I),I._setExecutionVariable(this,"lastRemainingTime",NaN),void I._setExecutionVariable(this,"timestamp",0);const L=this.duration.getValue(I);if(L<=0||isNaN(L)||!isFinite(L))return this._reportError(I,"Invalid duration in Throttle block");const F=I._getExecutionVariable(this,"lastRemainingTime",NaN),X=Date.now();if(isNaN(F))return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",X),this.out._activateSignal(I);{const x=X-I._getExecutionVariable(this,"timestamp",0),F=1e3*L;if(F<=x)return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",X),this.out._activateSignal(I);{const L=F-x;this.lastRemainingTime.setValue(L/1e3,I),I._setExecutionVariable(this,"lastRemainingTime",L)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,G.d)("FlowGraphThrottleBlock",Y)}}]);