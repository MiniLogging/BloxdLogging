"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[100],{14608:(f,v,Z)=>{Z.r(v),Z.d(v,{FlowGraphThrottleBlock:()=>l});var V=Z(13123),h=Z(13173),J=Z(11372);class l extends h.c{constructor(f){super(f),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",V.v),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",V.v,NaN)}_execute(f,v){if(v===this.reset)return this.lastRemainingTime.setValue(NaN,f),f._setExecutionVariable(this,"lastRemainingTime",NaN),void f._setExecutionVariable(this,"timestamp",0);const Z=this.duration.getValue(f);if(Z<=0||isNaN(Z)||!isFinite(Z))return this._reportError(f,"Invalid duration in Throttle block");const V=f._getExecutionVariable(this,"lastRemainingTime",NaN),h=Date.now();if(isNaN(V))return this.lastRemainingTime.setValue(0,f),f._setExecutionVariable(this,"lastRemainingTime",0),f._setExecutionVariable(this,"timestamp",h),this.out._activateSignal(f);{const v=h-f._getExecutionVariable(this,"timestamp",0),V=1e3*Z;if(V<=v)return this.lastRemainingTime.setValue(0,f),f._setExecutionVariable(this,"lastRemainingTime",0),f._setExecutionVariable(this,"timestamp",h),this.out._activateSignal(f);{const Z=V-v;this.lastRemainingTime.setValue(Z/1e3,f),f._setExecutionVariable(this,"lastRemainingTime",Z)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,J.h)("FlowGraphThrottleBlock",l)}}]);