"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[100],{15666:(a,O,i)=>{i.r(O),i.d(O,{FlowGraphThrottleBlock:()=>q});var H=i(14124),b=i(14164),G=i(12346);class q extends b.c{constructor(a){super(a),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",H.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",H.t,NaN)}_execute(a,O){if(O===this.reset)return this.lastRemainingTime.setValue(NaN,a),a._setExecutionVariable(this,"lastRemainingTime",NaN),void a._setExecutionVariable(this,"timestamp",0);const i=this.duration.getValue(a);if(i<=0||isNaN(i)||!isFinite(i))return this._reportError(a,"Invalid duration in Throttle block");const H=a._getExecutionVariable(this,"lastRemainingTime",NaN),b=Date.now();if(isNaN(H))return this.lastRemainingTime.setValue(0,a),a._setExecutionVariable(this,"lastRemainingTime",0),a._setExecutionVariable(this,"timestamp",b),this.out._activateSignal(a);{const O=b-a._getExecutionVariable(this,"timestamp",0),H=1e3*i;if(H<=O)return this.lastRemainingTime.setValue(0,a),a._setExecutionVariable(this,"lastRemainingTime",0),a._setExecutionVariable(this,"timestamp",b),this.out._activateSignal(a);{const i=H-O;this.lastRemainingTime.setValue(i/1e3,a),a._setExecutionVariable(this,"lastRemainingTime",i)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,G.h)("FlowGraphThrottleBlock",q)}}]);