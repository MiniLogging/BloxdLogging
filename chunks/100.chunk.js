"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[100],{14519:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphThrottleBlock:()=>g});var C=Q(12951),z=Q(13e3),t=Q(11265);class g extends z.d{constructor(F){super(F),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",C.m),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",C.m,NaN)}_execute(F,b){if(b===this.reset)return this.lastRemainingTime.setValue(NaN,F),F._setExecutionVariable(this,"lastRemainingTime",NaN),void F._setExecutionVariable(this,"timestamp",0);const Q=this.duration.getValue(F);if(Q<=0||isNaN(Q)||!isFinite(Q))return this._reportError(F,"Invalid duration in Throttle block");const C=F._getExecutionVariable(this,"lastRemainingTime",NaN),z=Date.now();if(isNaN(C))return this.lastRemainingTime.setValue(0,F),F._setExecutionVariable(this,"lastRemainingTime",0),F._setExecutionVariable(this,"timestamp",z),this.out._activateSignal(F);{const b=z-F._getExecutionVariable(this,"timestamp",0),C=1e3*Q;if(C<=b)return this.lastRemainingTime.setValue(0,F),F._setExecutionVariable(this,"lastRemainingTime",0),F._setExecutionVariable(this,"timestamp",z),this.out._activateSignal(F);{const Q=C-b;this.lastRemainingTime.setValue(Q/1e3,F),F._setExecutionVariable(this,"lastRemainingTime",Q)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,t.g)("FlowGraphThrottleBlock",g)}}]);