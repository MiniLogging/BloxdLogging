"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[100],{15950:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphThrottleBlock:()=>M});var H=o(14362),g=o(14415),j=o(12793);class M extends g.d{constructor(D){super(D),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",H.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",H.q,NaN)}_execute(D,h){if(h===this.reset)return this.lastRemainingTime.setValue(NaN,D),D._setExecutionVariable(this,"lastRemainingTime",NaN),void D._setExecutionVariable(this,"timestamp",0);const o=this.duration.getValue(D);if(o<=0||isNaN(o)||!isFinite(o))return this._reportError(D,"Invalid duration in Throttle block");const H=D._getExecutionVariable(this,"lastRemainingTime",NaN),g=Date.now();if(isNaN(H))return this.lastRemainingTime.setValue(0,D),D._setExecutionVariable(this,"lastRemainingTime",0),D._setExecutionVariable(this,"timestamp",g),this.out._activateSignal(D);{const h=g-D._getExecutionVariable(this,"timestamp",0),H=1e3*o;if(H<=h)return this.lastRemainingTime.setValue(0,D),D._setExecutionVariable(this,"lastRemainingTime",0),D._setExecutionVariable(this,"timestamp",g),this.out._activateSignal(D);{const o=H-h;this.lastRemainingTime.setValue(o/1e3,D),D._setExecutionVariable(this,"lastRemainingTime",o)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,j.g)("FlowGraphThrottleBlock",M)}}]);