"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[100],{15863:(mm,o,u)=>{u.r(o),u.d(o,{FlowGraphThrottleBlock:()=>r});var f=u(14257),B=u(14308),O=u(12702);class r extends B.d{constructor(mm){super(mm),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",f.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",f.r,NaN)}_execute(mm,o){if(o===this.reset)return this.lastRemainingTime.setValue(NaN,mm),mm._setExecutionVariable(this,"lastRemainingTime",NaN),void mm._setExecutionVariable(this,"timestamp",0);const u=this.duration.getValue(mm);if(u<=0||isNaN(u)||!isFinite(u))return this._reportError(mm,"Invalid duration in Throttle block");const f=mm._getExecutionVariable(this,"lastRemainingTime",NaN),B=Date.now();if(isNaN(f))return this.lastRemainingTime.setValue(0,mm),mm._setExecutionVariable(this,"lastRemainingTime",0),mm._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(mm);{const o=B-mm._getExecutionVariable(this,"timestamp",0),f=1e3*u;if(f<=o)return this.lastRemainingTime.setValue(0,mm),mm._setExecutionVariable(this,"lastRemainingTime",0),mm._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(mm);{const u=f-o;this.lastRemainingTime.setValue(u/1e3,mm),mm._setExecutionVariable(this,"lastRemainingTime",u)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,O.c)("FlowGraphThrottleBlock",r)}}]);