"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{13894:(L,j,P)=>{P.r(j),P.d(j,{FlowGraphSetVariableBlock:()=>Y});var A=P(606),R=P(12554),o=P(12510);class Y extends R.b{constructor(L){if(super(L),!L.variable&&!L.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(L.variables&&L.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(L.variables)for(const j of L.variables)this.registerDataInput(j,o.d);else this.registerDataInput("value",o.d)}_execute(L,j){var P,A;if(null!==(P=this.config)&&void 0!==P&&P.variables)for(const R of this.config.variables)this._saveVariable(L,R);else this._saveVariable(L,null===(A=this.config)||void 0===A?void 0:A.variable,"value");this.out._activateSignal(L)}_saveVariable(L,j,P){var A;const R=L._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Y of R){const P=L.assetsContext.animationGroups.find((L=>L.uniqueId==Y));if(P)for(const A of P.targetedAnimations)if(A.target===L&&A.animation.targetProperty===j){P.stop();const j=R.indexOf(Y);j>-1&&R.splice(j,1),L._setGlobalContextVariable("currentlyRunningAnimationGroups",R);break}}const o=null===(A=this.getDataInput(P||j))||void 0===A?void 0:A.getValue(L);L.setVariable(j,o)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(L){var j;super.serialize(L),L.config.variable=null===(j=this.config)||void 0===j?void 0:j.variable}}(0,A.h)("FlowGraphSetVariableBlock",Y)}}]);