"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[100],{14589:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphThrottleBlock:()=>B});var Z=i(13064),U=i(13114),C=i(11253);class B extends U.c{constructor(k){super(k),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Z.o),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Z.o,NaN)}_execute(k,Q){if(Q===this.reset)return this.lastRemainingTime.setValue(NaN,k),k._setExecutionVariable(this,"lastRemainingTime",NaN),void k._setExecutionVariable(this,"timestamp",0);const i=this.duration.getValue(k);if(i<=0||isNaN(i)||!isFinite(i))return this._reportError(k,"Invalid duration in Throttle block");const Z=k._getExecutionVariable(this,"lastRemainingTime",NaN),U=Date.now();if(isNaN(Z))return this.lastRemainingTime.setValue(0,k),k._setExecutionVariable(this,"lastRemainingTime",0),k._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(k);{const Q=U-k._getExecutionVariable(this,"timestamp",0),Z=1e3*i;if(Z<=Q)return this.lastRemainingTime.setValue(0,k),k._setExecutionVariable(this,"lastRemainingTime",0),k._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(k);{const i=Z-Q;this.lastRemainingTime.setValue(i/1e3,k),k._setExecutionVariable(this,"lastRemainingTime",i)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,C.e)("FlowGraphThrottleBlock",B)}}]);