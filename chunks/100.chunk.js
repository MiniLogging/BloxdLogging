"use strict";(self.h6ljd275xwr=self.h6ljd275xwr||[]).push([[100],{14645:(n,y,H)=>{H.r(y),H.d(y,{FlowGraphThrottleBlock:()=>k});var o=H(13117),G=H(13162),h=H(11248);class k extends G.b{constructor(n){super(n),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",o.p),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",o.p,NaN)}_execute(n,y){if(y===this.reset)return this.lastRemainingTime.setValue(NaN,n),n._setExecutionVariable(this,"lastRemainingTime",NaN),void n._setExecutionVariable(this,"timestamp",0);const H=this.duration.getValue(n);if(H<=0||isNaN(H)||!isFinite(H))return this._reportError(n,"Invalid duration in Throttle block");const o=n._getExecutionVariable(this,"lastRemainingTime",NaN),G=Date.now();if(isNaN(o))return this.lastRemainingTime.setValue(0,n),n._setExecutionVariable(this,"lastRemainingTime",0),n._setExecutionVariable(this,"timestamp",G),this.out._activateSignal(n);{const y=G-n._getExecutionVariable(this,"timestamp",0),o=1e3*H;if(o<=y)return this.lastRemainingTime.setValue(0,n),n._setExecutionVariable(this,"lastRemainingTime",0),n._setExecutionVariable(this,"timestamp",G),this.out._activateSignal(n);{const H=o-y;this.lastRemainingTime.setValue(H/1e3,n),n._setExecutionVariable(this,"lastRemainingTime",H)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,h.h)("FlowGraphThrottleBlock",k)}}]);