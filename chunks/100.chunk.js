"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[100],{15785:(z,u,U)=>{U.r(u),U.d(u,{FlowGraphThrottleBlock:()=>g});var J=U(14196),v=U(14248),f=U(12875);class g extends v.e{constructor(z){super(z),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",J.x),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",J.x,NaN)}_execute(z,u){if(u===this.reset)return this.lastRemainingTime.setValue(NaN,z),z._setExecutionVariable(this,"lastRemainingTime",NaN),void z._setExecutionVariable(this,"timestamp",0);const U=this.duration.getValue(z);if(U<=0||isNaN(U)||!isFinite(U))return this._reportError(z,"Invalid duration in Throttle block");const J=z._getExecutionVariable(this,"lastRemainingTime",NaN),v=Date.now();if(isNaN(J))return this.lastRemainingTime.setValue(0,z),z._setExecutionVariable(this,"lastRemainingTime",0),z._setExecutionVariable(this,"timestamp",v),this.out._activateSignal(z);{const u=v-z._getExecutionVariable(this,"timestamp",0),J=1e3*U;if(J<=u)return this.lastRemainingTime.setValue(0,z),z._setExecutionVariable(this,"lastRemainingTime",0),z._setExecutionVariable(this,"timestamp",v),this.out._activateSignal(z);{const U=J-u;this.lastRemainingTime.setValue(U/1e3,z),z._setExecutionVariable(this,"lastRemainingTime",U)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,f.f)("FlowGraphThrottleBlock",g)}}]);