"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[100],{16064:(p,b,M)=>{M.r(b),M.d(b,{FlowGraphThrottleBlock:()=>y});var h=M(14316),Q=M(14367),mp=M(12730);class y extends Q.d{constructor(p){super(p),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",h.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",h.t,NaN)}_execute(p,b){if(b===this.reset)return this.lastRemainingTime.setValue(NaN,p),p._setExecutionVariable(this,"lastRemainingTime",NaN),void p._setExecutionVariable(this,"timestamp",0);const M=this.duration.getValue(p);if(M<=0||isNaN(M)||!isFinite(M))return this._reportError(p,"Invalid duration in Throttle block");const h=p._getExecutionVariable(this,"lastRemainingTime",NaN),Q=Date.now();if(isNaN(h))return this.lastRemainingTime.setValue(0,p),p._setExecutionVariable(this,"lastRemainingTime",0),p._setExecutionVariable(this,"timestamp",Q),this.out._activateSignal(p);{const b=Q-p._getExecutionVariable(this,"timestamp",0),h=1e3*M;if(h<=b)return this.lastRemainingTime.setValue(0,p),p._setExecutionVariable(this,"lastRemainingTime",0),p._setExecutionVariable(this,"timestamp",Q),this.out._activateSignal(p);{const M=h-b;this.lastRemainingTime.setValue(M/1e3,p),p._setExecutionVariable(this,"lastRemainingTime",M)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,mp.c)("FlowGraphThrottleBlock",y)}}]);