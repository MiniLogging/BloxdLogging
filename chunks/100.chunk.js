"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[100],{15813:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphThrottleBlock:()=>M});var e=b(14282),c=b(14320),z=b(12558);class M extends c.c{constructor(I){super(I),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",e.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",e.t,NaN)}_execute(I,g){if(g===this.reset)return this.lastRemainingTime.setValue(NaN,I),I._setExecutionVariable(this,"lastRemainingTime",NaN),void I._setExecutionVariable(this,"timestamp",0);const b=this.duration.getValue(I);if(b<=0||isNaN(b)||!isFinite(b))return this._reportError(I,"Invalid duration in Throttle block");const e=I._getExecutionVariable(this,"lastRemainingTime",NaN),c=Date.now();if(isNaN(e))return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",c),this.out._activateSignal(I);{const g=c-I._getExecutionVariable(this,"timestamp",0),e=1e3*b;if(e<=g)return this.lastRemainingTime.setValue(0,I),I._setExecutionVariable(this,"lastRemainingTime",0),I._setExecutionVariable(this,"timestamp",c),this.out._activateSignal(I);{const b=e-g;this.lastRemainingTime.setValue(b/1e3,I),I._setExecutionVariable(this,"lastRemainingTime",b)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,z.g)("FlowGraphThrottleBlock",M)}}]);