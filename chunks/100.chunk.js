"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{14212:(Z,U,n)=>{n.r(U),n.d(U,{FlowGraphSetVariableBlock:()=>H});var i=n(633),B=n(12861),l=n(12826);class H extends B.e{constructor(Z){if(super(Z),!Z.variable&&!Z.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(Z.variables&&Z.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(Z.variables)for(const U of Z.variables)this.registerDataInput(U,l.b);else this.registerDataInput("value",l.b)}_execute(Z,U){var n,i;if(null!==(n=this.config)&&void 0!==n&&n.variables)for(const B of this.config.variables)this._saveVariable(Z,B);else this._saveVariable(Z,null===(i=this.config)||void 0===i?void 0:i.variable,"value");this.out._activateSignal(Z)}_saveVariable(Z,U,n){var i;const B=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const H of B){const n=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId==H));if(n)for(const i of n.targetedAnimations)if(i.target===Z&&i.animation.targetProperty===U){n.stop();const U=B.indexOf(H);U>-1&&B.splice(U,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",B);break}}const l=null===(i=this.getDataInput(n||U))||void 0===i?void 0:i.getValue(Z);Z.setVariable(U,l)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(Z){var U;super.serialize(Z),Z.config.variable=null===(U=this.config)||void 0===U?void 0:U.variable}}(0,i.g)("FlowGraphSetVariableBlock",H)}}]);