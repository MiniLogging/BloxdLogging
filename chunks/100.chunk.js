"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{14315:(t,q,S)=>{S.r(q),S.d(q,{FlowGraphSetVariableBlock:()=>L});var o=S(622),B=S(12981),z=S(12927);class L extends B.d{constructor(t){if(super(t),!t.variable&&!t.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(t.variables&&t.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(t.variables)for(const q of t.variables)this.registerDataInput(q,z.b);else this.registerDataInput("value",z.b)}_execute(t,q){var S,o;if(null!==(S=this.config)&&void 0!==S&&S.variables)for(const B of this.config.variables)this._saveVariable(t,B);else this._saveVariable(t,null===(o=this.config)||void 0===o?void 0:o.variable,"value");this.out._activateSignal(t)}_saveVariable(t,q,S){var o;const B=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const L of B){const S=t.assetsContext.animationGroups.find((t=>t.uniqueId==L));if(S)for(const o of S.targetedAnimations)if(o.target===t&&o.animation.targetProperty===q){S.stop();const q=B.indexOf(L);q>-1&&B.splice(q,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",B);break}}const z=null===(o=this.getDataInput(S||q))||void 0===o?void 0:o.getValue(t);t.setVariable(q,z)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(t){var q;super.serialize(t),t.config.variable=null===(q=this.config)||void 0===q?void 0:q.variable}}(0,o.c)("FlowGraphSetVariableBlock",L)}}]);