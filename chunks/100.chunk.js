"use strict";(self.kdlk57exiqh=self.kdlk57exiqh||[]).push([[100],{15414:(i,x,e)=>{e.r(x),e.d(x,{FlowGraphThrottleBlock:()=>Y});var j=e(13874),E=e(13930),a=e(12204);class Y extends E.b{constructor(i){super(i),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",j.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",j.q,NaN)}_execute(i,x){if(x===this.reset)return this.lastRemainingTime.setValue(NaN,i),i._setExecutionVariable(this,"lastRemainingTime",NaN),void i._setExecutionVariable(this,"timestamp",0);const e=this.duration.getValue(i);if(e<=0||isNaN(e)||!isFinite(e))return this._reportError(i,"Invalid duration in Throttle block");const j=i._getExecutionVariable(this,"lastRemainingTime",NaN),E=Date.now();if(isNaN(j))return this.lastRemainingTime.setValue(0,i),i._setExecutionVariable(this,"lastRemainingTime",0),i._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(i);{const x=E-i._getExecutionVariable(this,"timestamp",0),j=1e3*e;if(j<=x)return this.lastRemainingTime.setValue(0,i),i._setExecutionVariable(this,"lastRemainingTime",0),i._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(i);{const e=j-x;this.lastRemainingTime.setValue(e/1e3,i),i._setExecutionVariable(this,"lastRemainingTime",e)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,a.f)("FlowGraphThrottleBlock",Y)}}]);