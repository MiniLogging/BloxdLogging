"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[100],{15040:(M,p,b)=>{b.r(p),b.d(p,{FlowGraphThrottleBlock:()=>k});var Q=b(13477),q=b(13520),B=b(11757);class k extends q.c{constructor(M){super(M),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",Q.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",Q.q,NaN)}_execute(M,p){if(p===this.reset)return this.lastRemainingTime.setValue(NaN,M),M._setExecutionVariable(this,"lastRemainingTime",NaN),void M._setExecutionVariable(this,"timestamp",0);const b=this.duration.getValue(M);if(b<=0||isNaN(b)||!isFinite(b))return this._reportError(M,"Invalid duration in Throttle block");const Q=M._getExecutionVariable(this,"lastRemainingTime",NaN),q=Date.now();if(isNaN(Q))return this.lastRemainingTime.setValue(0,M),M._setExecutionVariable(this,"lastRemainingTime",0),M._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(M);{const p=q-M._getExecutionVariable(this,"timestamp",0),Q=1e3*b;if(Q<=p)return this.lastRemainingTime.setValue(0,M),M._setExecutionVariable(this,"lastRemainingTime",0),M._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(M);{const b=Q-p;this.lastRemainingTime.setValue(b/1e3,M),M._setExecutionVariable(this,"lastRemainingTime",b)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,B.g)("FlowGraphThrottleBlock",k)}}]);