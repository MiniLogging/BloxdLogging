"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[100],{15718:(U,G,C)=>{C.r(G),C.d(G,{FlowGraphThrottleBlock:()=>t});var L=C(14134),X=C(14188),l=C(12850);class t extends X.d{constructor(U){super(U),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",L.y),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",L.y,NaN)}_execute(U,G){if(G===this.reset)return this.lastRemainingTime.setValue(NaN,U),U._setExecutionVariable(this,"lastRemainingTime",NaN),void U._setExecutionVariable(this,"timestamp",0);const C=this.duration.getValue(U);if(C<=0||isNaN(C)||!isFinite(C))return this._reportError(U,"Invalid duration in Throttle block");const L=U._getExecutionVariable(this,"lastRemainingTime",NaN),X=Date.now();if(isNaN(L))return this.lastRemainingTime.setValue(0,U),U._setExecutionVariable(this,"lastRemainingTime",0),U._setExecutionVariable(this,"timestamp",X),this.out._activateSignal(U);{const G=X-U._getExecutionVariable(this,"timestamp",0),L=1e3*C;if(L<=G)return this.lastRemainingTime.setValue(0,U),U._setExecutionVariable(this,"lastRemainingTime",0),U._setExecutionVariable(this,"timestamp",X),this.out._activateSignal(U);{const C=L-G;this.lastRemainingTime.setValue(C/1e3,U),U._setExecutionVariable(this,"lastRemainingTime",C)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,l.e)("FlowGraphThrottleBlock",t)}}]);