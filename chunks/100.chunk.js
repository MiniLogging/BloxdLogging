"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[100],{15070:(Z,h,V)=>{V.r(h),V.d(h,{FlowGraphThrottleBlock:()=>K});var v=V(13459),A=V(13512),H=V(11691);class K extends A.b{constructor(Z){super(Z),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",v.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",v.t,NaN)}_execute(Z,h){if(h===this.reset)return this.lastRemainingTime.setValue(NaN,Z),Z._setExecutionVariable(this,"lastRemainingTime",NaN),void Z._setExecutionVariable(this,"timestamp",0);const V=this.duration.getValue(Z);if(V<=0||isNaN(V)||!isFinite(V))return this._reportError(Z,"Invalid duration in Throttle block");const v=Z._getExecutionVariable(this,"lastRemainingTime",NaN),A=Date.now();if(isNaN(v))return this.lastRemainingTime.setValue(0,Z),Z._setExecutionVariable(this,"lastRemainingTime",0),Z._setExecutionVariable(this,"timestamp",A),this.out._activateSignal(Z);{const h=A-Z._getExecutionVariable(this,"timestamp",0),v=1e3*V;if(v<=h)return this.lastRemainingTime.setValue(0,Z),Z._setExecutionVariable(this,"lastRemainingTime",0),Z._setExecutionVariable(this,"timestamp",A),this.out._activateSignal(Z);{const V=v-h;this.lastRemainingTime.setValue(V/1e3,Z),Z._setExecutionVariable(this,"lastRemainingTime",V)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,H.i)("FlowGraphThrottleBlock",K)}}]);