"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[100],{14944:(e,E,H)=>{H.r(E),H.d(E,{FlowGraphThrottleBlock:()=>P});var N=H(13415),u=H(13475),z=H(11690);class P extends u.d{constructor(e){super(e),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",N.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",N.t,NaN)}_execute(e,E){if(E===this.reset)return this.lastRemainingTime.setValue(NaN,e),e._setExecutionVariable(this,"lastRemainingTime",NaN),void e._setExecutionVariable(this,"timestamp",0);const H=this.duration.getValue(e);if(H<=0||isNaN(H)||!isFinite(H))return this._reportError(e,"Invalid duration in Throttle block");const N=e._getExecutionVariable(this,"lastRemainingTime",NaN),u=Date.now();if(isNaN(N))return this.lastRemainingTime.setValue(0,e),e._setExecutionVariable(this,"lastRemainingTime",0),e._setExecutionVariable(this,"timestamp",u),this.out._activateSignal(e);{const E=u-e._getExecutionVariable(this,"timestamp",0),N=1e3*H;if(N<=E)return this.lastRemainingTime.setValue(0,e),e._setExecutionVariable(this,"lastRemainingTime",0),e._setExecutionVariable(this,"timestamp",u),this.out._activateSignal(e);{const H=N-E;this.lastRemainingTime.setValue(H/1e3,e),e._setExecutionVariable(this,"lastRemainingTime",H)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,z.g)("FlowGraphThrottleBlock",P)}}]);