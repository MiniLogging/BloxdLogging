"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[100],{15571:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphThrottleBlock:()=>p});var l=A(13993),w=A(14036),N=A(12283);class p extends w.e{constructor(y){super(y),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",l.s),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",l.s,NaN)}_execute(y,c){if(c===this.reset)return this.lastRemainingTime.setValue(NaN,y),y._setExecutionVariable(this,"lastRemainingTime",NaN),void y._setExecutionVariable(this,"timestamp",0);const A=this.duration.getValue(y);if(A<=0||isNaN(A)||!isFinite(A))return this._reportError(y,"Invalid duration in Throttle block");const l=y._getExecutionVariable(this,"lastRemainingTime",NaN),w=Date.now();if(isNaN(l))return this.lastRemainingTime.setValue(0,y),y._setExecutionVariable(this,"lastRemainingTime",0),y._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(y);{const c=w-y._getExecutionVariable(this,"timestamp",0),l=1e3*A;if(l<=c)return this.lastRemainingTime.setValue(0,y),y._setExecutionVariable(this,"lastRemainingTime",0),y._setExecutionVariable(this,"timestamp",w),this.out._activateSignal(y);{const A=l-c;this.lastRemainingTime.setValue(A/1e3,y),y._setExecutionVariable(this,"lastRemainingTime",A)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,N.f)("FlowGraphThrottleBlock",p)}}]);