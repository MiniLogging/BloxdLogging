"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[100],{15773:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphThrottleBlock:()=>Q});var g=V(14241),E=V(14283),I=V(12449);class Q extends E.d{constructor(o){super(o),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",g.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",g.t,NaN)}_execute(o,v){if(v===this.reset)return this.lastRemainingTime.setValue(NaN,o),o._setExecutionVariable(this,"lastRemainingTime",NaN),void o._setExecutionVariable(this,"timestamp",0);const V=this.duration.getValue(o);if(V<=0||isNaN(V)||!isFinite(V))return this._reportError(o,"Invalid duration in Throttle block");const g=o._getExecutionVariable(this,"lastRemainingTime",NaN),E=Date.now();if(isNaN(g))return this.lastRemainingTime.setValue(0,o),o._setExecutionVariable(this,"lastRemainingTime",0),o._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(o);{const v=E-o._getExecutionVariable(this,"timestamp",0),g=1e3*V;if(g<=v)return this.lastRemainingTime.setValue(0,o),o._setExecutionVariable(this,"lastRemainingTime",0),o._setExecutionVariable(this,"timestamp",E),this.out._activateSignal(o);{const V=g-v;this.lastRemainingTime.setValue(V/1e3,o),o._setExecutionVariable(this,"lastRemainingTime",V)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,I.h)("FlowGraphThrottleBlock",Q)}}]);