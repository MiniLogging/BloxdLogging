"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[100],{16079:(a,c,o)=>{o.r(c),o.d(c,{FlowGraphThrottleBlock:()=>i});var s=o(14394),q=o(14442),t=o(12776);class i extends q.d{constructor(a){super(a),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",s.o),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",s.o,NaN)}_execute(a,c){if(c===this.reset)return this.lastRemainingTime.setValue(NaN,a),a._setExecutionVariable(this,"lastRemainingTime",NaN),void a._setExecutionVariable(this,"timestamp",0);const o=this.duration.getValue(a);if(o<=0||isNaN(o)||!isFinite(o))return this._reportError(a,"Invalid duration in Throttle block");const s=a._getExecutionVariable(this,"lastRemainingTime",NaN),q=Date.now();if(isNaN(s))return this.lastRemainingTime.setValue(0,a),a._setExecutionVariable(this,"lastRemainingTime",0),a._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(a);{const c=q-a._getExecutionVariable(this,"timestamp",0),s=1e3*o;if(s<=c)return this.lastRemainingTime.setValue(0,a),a._setExecutionVariable(this,"lastRemainingTime",0),a._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(a);{const o=s-c;this.lastRemainingTime.setValue(o/1e3,a),a._setExecutionVariable(this,"lastRemainingTime",o)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,t.d)("FlowGraphThrottleBlock",i)}}]);