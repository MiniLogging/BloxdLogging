"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[100],{14629:(B,E,v)=>{v.r(E),v.d(E,{FlowGraphThrottleBlock:()=>c});var z=v(13102),o=v(13142),q=v(11345);class c extends o.d{constructor(B){super(B),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",z.v),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",z.v,NaN)}_execute(B,E){if(E===this.reset)return this.lastRemainingTime.setValue(NaN,B),B._setExecutionVariable(this,"lastRemainingTime",NaN),void B._setExecutionVariable(this,"timestamp",0);const v=this.duration.getValue(B);if(v<=0||isNaN(v)||!isFinite(v))return this._reportError(B,"Invalid duration in Throttle block");const z=B._getExecutionVariable(this,"lastRemainingTime",NaN),o=Date.now();if(isNaN(z))return this.lastRemainingTime.setValue(0,B),B._setExecutionVariable(this,"lastRemainingTime",0),B._setExecutionVariable(this,"timestamp",o),this.out._activateSignal(B);{const E=o-B._getExecutionVariable(this,"timestamp",0),z=1e3*v;if(z<=E)return this.lastRemainingTime.setValue(0,B),B._setExecutionVariable(this,"lastRemainingTime",0),B._setExecutionVariable(this,"timestamp",o),this.out._activateSignal(B);{const v=z-E;this.lastRemainingTime.setValue(v/1e3,B),B._setExecutionVariable(this,"lastRemainingTime",v)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,q.f)("FlowGraphThrottleBlock",c)}}]);