"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[100],{16049:(q,I,l)=>{l.r(I),l.d(I,{FlowGraphThrottleBlock:()=>c});var w=l(14441),t=l(14488),O=l(12711);class c extends t.e{constructor(q){super(q),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",w.v),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",w.v,NaN)}_execute(q,I){if(I===this.reset)return this.lastRemainingTime.setValue(NaN,q),q._setExecutionVariable(this,"lastRemainingTime",NaN),void q._setExecutionVariable(this,"timestamp",0);const l=this.duration.getValue(q);if(l<=0||isNaN(l)||!isFinite(l))return this._reportError(q,"Invalid duration in Throttle block");const w=q._getExecutionVariable(this,"lastRemainingTime",NaN),t=Date.now();if(isNaN(w))return this.lastRemainingTime.setValue(0,q),q._setExecutionVariable(this,"lastRemainingTime",0),q._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(q);{const I=t-q._getExecutionVariable(this,"timestamp",0),w=1e3*l;if(w<=I)return this.lastRemainingTime.setValue(0,q),q._setExecutionVariable(this,"lastRemainingTime",0),q._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(q);{const l=w-I;this.lastRemainingTime.setValue(l/1e3,q),q._setExecutionVariable(this,"lastRemainingTime",l)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,O.e)("FlowGraphThrottleBlock",c)}}]);