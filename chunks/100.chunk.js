"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[100],{14983:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphThrottleBlock:()=>u});var W=D(13392),B=D(13431),t=D(11637);class u extends B.d{constructor(c){super(c),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",W.u),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",W.u,NaN)}_execute(c,r){if(r===this.reset)return this.lastRemainingTime.setValue(NaN,c),c._setExecutionVariable(this,"lastRemainingTime",NaN),void c._setExecutionVariable(this,"timestamp",0);const D=this.duration.getValue(c);if(D<=0||isNaN(D)||!isFinite(D))return this._reportError(c,"Invalid duration in Throttle block");const W=c._getExecutionVariable(this,"lastRemainingTime",NaN),B=Date.now();if(isNaN(W))return this.lastRemainingTime.setValue(0,c),c._setExecutionVariable(this,"lastRemainingTime",0),c._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(c);{const r=B-c._getExecutionVariable(this,"timestamp",0),W=1e3*D;if(W<=r)return this.lastRemainingTime.setValue(0,c),c._setExecutionVariable(this,"lastRemainingTime",0),c._setExecutionVariable(this,"timestamp",B),this.out._activateSignal(c);{const D=W-r;this.lastRemainingTime.setValue(D/1e3,c),c._setExecutionVariable(this,"lastRemainingTime",D)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,t.e)("FlowGraphThrottleBlock",u)}}]);