"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[100],{14336:(P,e,n)=>{n.r(e),n.d(e,{FlowGraphThrottleBlock:()=>k});var H=n(12819),S=n(12860),p=n(11096);class k extends S.c{constructor(P){super(P),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",H.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",H.r,NaN)}_execute(P,e){if(e===this.reset)return this.lastRemainingTime.setValue(NaN,P),P._setExecutionVariable(this,"lastRemainingTime",NaN),void P._setExecutionVariable(this,"timestamp",0);const n=this.duration.getValue(P);if(n<=0||isNaN(n)||!isFinite(n))return this._reportError(P,"Invalid duration in Throttle block");const H=P._getExecutionVariable(this,"lastRemainingTime",NaN),S=Date.now();if(isNaN(H))return this.lastRemainingTime.setValue(0,P),P._setExecutionVariable(this,"lastRemainingTime",0),P._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(P);{const e=S-P._getExecutionVariable(this,"timestamp",0),H=1e3*n;if(H<=e)return this.lastRemainingTime.setValue(0,P),P._setExecutionVariable(this,"lastRemainingTime",0),P._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(P);{const n=H-e;this.lastRemainingTime.setValue(n/1e3,P),P._setExecutionVariable(this,"lastRemainingTime",n)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,p.h)("FlowGraphThrottleBlock",k)}}]);