"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[100],{15565:(H,u,J)=>{J.r(u),J.d(u,{FlowGraphThrottleBlock:()=>w});var O=J(14018),U=J(14064),h=J(12304);class w extends U.e{constructor(H){super(H),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",O.z),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",O.z,NaN)}_execute(H,u){if(u===this.reset)return this.lastRemainingTime.setValue(NaN,H),H._setExecutionVariable(this,"lastRemainingTime",NaN),void H._setExecutionVariable(this,"timestamp",0);const J=this.duration.getValue(H);if(J<=0||isNaN(J)||!isFinite(J))return this._reportError(H,"Invalid duration in Throttle block");const O=H._getExecutionVariable(this,"lastRemainingTime",NaN),U=Date.now();if(isNaN(O))return this.lastRemainingTime.setValue(0,H),H._setExecutionVariable(this,"lastRemainingTime",0),H._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(H);{const u=U-H._getExecutionVariable(this,"timestamp",0),O=1e3*J;if(O<=u)return this.lastRemainingTime.setValue(0,H),H._setExecutionVariable(this,"lastRemainingTime",0),H._setExecutionVariable(this,"timestamp",U),this.out._activateSignal(H);{const J=O-u;this.lastRemainingTime.setValue(J/1e3,H),H._setExecutionVariable(this,"lastRemainingTime",J)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,h.f)("FlowGraphThrottleBlock",w)}}]);