"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[100],{14514:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphThrottleBlock:()=>x});var u=j(12880),k=j(12928),B=j(11181);class x extends k.e{constructor(G){super(G),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",u.s),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",u.s,NaN)}_execute(G,A){if(A===this.reset)return this.lastRemainingTime.setValue(NaN,G),G._setExecutionVariable(this,"lastRemainingTime",NaN),void G._setExecutionVariable(this,"timestamp",0);const j=this.duration.getValue(G);if(j<=0||isNaN(j)||!isFinite(j))return this._reportError(G,"Invalid duration in Throttle block");const u=G._getExecutionVariable(this,"lastRemainingTime",NaN),k=Date.now();if(isNaN(u))return this.lastRemainingTime.setValue(0,G),G._setExecutionVariable(this,"lastRemainingTime",0),G._setExecutionVariable(this,"timestamp",k),this.out._activateSignal(G);{const A=k-G._getExecutionVariable(this,"timestamp",0),u=1e3*j;if(u<=A)return this.lastRemainingTime.setValue(0,G),G._setExecutionVariable(this,"lastRemainingTime",0),G._setExecutionVariable(this,"timestamp",k),this.out._activateSignal(G);{const j=u-A;this.lastRemainingTime.setValue(j/1e3,G),G._setExecutionVariable(this,"lastRemainingTime",j)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,B.h)("FlowGraphThrottleBlock",x)}}]);