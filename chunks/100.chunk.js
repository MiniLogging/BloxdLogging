"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{14611:(R,x,H)=>{H.r(x),H.d(x,{FlowGraphSetVariableBlock:()=>A});var k=H(610),c=H(13301),t=H(13246);class A extends c.d{constructor(R){if(super(R),!R.variable&&!R.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(R.variables&&R.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(R.variables)for(const x of R.variables)this.registerDataInput(x,t.b);else this.registerDataInput("value",t.b)}_execute(R,x){var H,k;if(null!==(H=this.config)&&void 0!==H&&H.variables)for(const c of this.config.variables)this._saveVariable(R,c);else this._saveVariable(R,null===(k=this.config)||void 0===k?void 0:k.variable,"value");this.out._activateSignal(R)}_saveVariable(R,x,H){var k;const c=R._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of c){const H=R.assetsContext.animationGroups.find((R=>R.uniqueId==A));if(H)for(const k of H.targetedAnimations)if(k.target===R&&k.animation.targetProperty===x){H.stop();const x=c.indexOf(A);x>-1&&c.splice(x,1),R._setGlobalContextVariable("currentlyRunningAnimationGroups",c);break}}const t=null===(k=this.getDataInput(H||x))||void 0===k?void 0:k.getValue(R);R.setVariable(x,t)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(R){var x;super.serialize(R),R.config.variable=null===(x=this.config)||void 0===x?void 0:x.variable}}(0,k.h)("FlowGraphSetVariableBlock",A)}}]);