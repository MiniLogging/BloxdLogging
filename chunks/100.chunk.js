"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[100],{15658:(M,Z,P)=>{P.r(Z),P.d(Z,{FlowGraphThrottleBlock:()=>v});var x=P(14073),c=P(14117),w=P(12317);class v extends c.e{constructor(M){super(M),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",x.u),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",x.u,NaN)}_execute(M,Z){if(Z===this.reset)return this.lastRemainingTime.setValue(NaN,M),M._setExecutionVariable(this,"lastRemainingTime",NaN),void M._setExecutionVariable(this,"timestamp",0);const P=this.duration.getValue(M);if(P<=0||isNaN(P)||!isFinite(P))return this._reportError(M,"Invalid duration in Throttle block");const x=M._getExecutionVariable(this,"lastRemainingTime",NaN),c=Date.now();if(isNaN(x))return this.lastRemainingTime.setValue(0,M),M._setExecutionVariable(this,"lastRemainingTime",0),M._setExecutionVariable(this,"timestamp",c),this.out._activateSignal(M);{const Z=c-M._getExecutionVariable(this,"timestamp",0),x=1e3*P;if(x<=Z)return this.lastRemainingTime.setValue(0,M),M._setExecutionVariable(this,"lastRemainingTime",0),M._setExecutionVariable(this,"timestamp",c),this.out._activateSignal(M);{const P=x-Z;this.lastRemainingTime.setValue(P/1e3,M),M._setExecutionVariable(this,"lastRemainingTime",P)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,w.g)("FlowGraphThrottleBlock",v)}}]);