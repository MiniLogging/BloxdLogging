"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[100],{16210:(h,R,l)=>{l.r(R),l.d(R,{FlowGraphThrottleBlock:()=>U});var j=l(14597),a=l(14646),D=l(12852);class U extends a.c{constructor(h){super(h),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",j.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",j.r,NaN)}_execute(h,R){if(R===this.reset)return this.lastRemainingTime.setValue(NaN,h),h._setExecutionVariable(this,"lastRemainingTime",NaN),void h._setExecutionVariable(this,"timestamp",0);const l=this.duration.getValue(h);if(l<=0||isNaN(l)||!isFinite(l))return this._reportError(h,"Invalid duration in Throttle block");const j=h._getExecutionVariable(this,"lastRemainingTime",NaN),a=Date.now();if(isNaN(j))return this.lastRemainingTime.setValue(0,h),h._setExecutionVariable(this,"lastRemainingTime",0),h._setExecutionVariable(this,"timestamp",a),this.out._activateSignal(h);{const R=a-h._getExecutionVariable(this,"timestamp",0),j=1e3*l;if(j<=R)return this.lastRemainingTime.setValue(0,h),h._setExecutionVariable(this,"lastRemainingTime",0),h._setExecutionVariable(this,"timestamp",a),this.out._activateSignal(h);{const l=j-R;this.lastRemainingTime.setValue(l/1e3,h),h._setExecutionVariable(this,"lastRemainingTime",l)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,D.f)("FlowGraphThrottleBlock",U)}}]);