"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[100],{15919:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphThrottleBlock:()=>T});var q=W(14274),Q=W(14328),C=W(12560);class T extends Q.d{constructor(r){super(r),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",q.r),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",q.r,NaN)}_execute(r,O){if(O===this.reset)return this.lastRemainingTime.setValue(NaN,r),r._setExecutionVariable(this,"lastRemainingTime",NaN),void r._setExecutionVariable(this,"timestamp",0);const W=this.duration.getValue(r);if(W<=0||isNaN(W)||!isFinite(W))return this._reportError(r,"Invalid duration in Throttle block");const q=r._getExecutionVariable(this,"lastRemainingTime",NaN),Q=Date.now();if(isNaN(q))return this.lastRemainingTime.setValue(0,r),r._setExecutionVariable(this,"lastRemainingTime",0),r._setExecutionVariable(this,"timestamp",Q),this.out._activateSignal(r);{const O=Q-r._getExecutionVariable(this,"timestamp",0),q=1e3*W;if(q<=O)return this.lastRemainingTime.setValue(0,r),r._setExecutionVariable(this,"lastRemainingTime",0),r._setExecutionVariable(this,"timestamp",Q),this.out._activateSignal(r);{const W=q-O;this.lastRemainingTime.setValue(W/1e3,r),r._setExecutionVariable(this,"lastRemainingTime",W)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,C.e)("FlowGraphThrottleBlock",T)}}]);