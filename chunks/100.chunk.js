"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[100],{14335:(v,d,Q)=>{Q.r(d),Q.d(d,{FlowGraphSetVariableBlock:()=>e});var n=Q(591),T=Q(12966),L=Q(12908);class e extends T.d{constructor(v){if(super(v),!v.variable&&!v.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(v.variables&&v.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(v.variables)for(const d of v.variables)this.registerDataInput(d,L.c);else this.registerDataInput("value",L.c)}_execute(v,d){var Q,n;if(null!==(Q=this.config)&&void 0!==Q&&Q.variables)for(const T of this.config.variables)this._saveVariable(v,T);else this._saveVariable(v,null===(n=this.config)||void 0===n?void 0:n.variable,"value");this.out._activateSignal(v)}_saveVariable(v,d,Q){var n;const T=v._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const e of T){const Q=v.assetsContext.animationGroups.find((v=>v.uniqueId==e));if(Q)for(const n of Q.targetedAnimations)if(n.target===v&&n.animation.targetProperty===d){Q.stop();const d=T.indexOf(e);d>-1&&T.splice(d,1),v._setGlobalContextVariable("currentlyRunningAnimationGroups",T);break}}const L=null===(n=this.getDataInput(Q||d))||void 0===n?void 0:n.getValue(v);v.setVariable(d,L)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(v){var d;super.serialize(v),v.config.variable=null===(d=this.config)||void 0===d?void 0:d.variable}}(0,n.f)("FlowGraphSetVariableBlock",e)}}]);