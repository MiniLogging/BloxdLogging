"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[100],{14564:(H,O,S)=>{S.r(O),S.d(O,{FlowGraphThrottleBlock:()=>G});var t=S(13035),q=S(13090),p=S(11262);class G extends q.d{constructor(H){super(H),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",t.t),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",t.t,NaN)}_execute(H,O){if(O===this.reset)return this.lastRemainingTime.setValue(NaN,H),H._setExecutionVariable(this,"lastRemainingTime",NaN),void H._setExecutionVariable(this,"timestamp",0);const S=this.duration.getValue(H);if(S<=0||isNaN(S)||!isFinite(S))return this._reportError(H,"Invalid duration in Throttle block");const t=H._getExecutionVariable(this,"lastRemainingTime",NaN),q=Date.now();if(isNaN(t))return this.lastRemainingTime.setValue(0,H),H._setExecutionVariable(this,"lastRemainingTime",0),H._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(H);{const O=q-H._getExecutionVariable(this,"timestamp",0),t=1e3*S;if(t<=O)return this.lastRemainingTime.setValue(0,H),H._setExecutionVariable(this,"lastRemainingTime",0),H._setExecutionVariable(this,"timestamp",q),this.out._activateSignal(H);{const S=t-O;this.lastRemainingTime.setValue(S/1e3,H),H._setExecutionVariable(this,"lastRemainingTime",S)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,p.g)("FlowGraphThrottleBlock",G)}}]);