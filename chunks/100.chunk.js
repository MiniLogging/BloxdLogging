"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[100],{16019:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphThrottleBlock:()=>v});var J=Z(14405),S=Z(14464),P=Z(12688);class v extends S.e{constructor(t){super(t),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",J.q),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",J.q,NaN)}_execute(t,b){if(b===this.reset)return this.lastRemainingTime.setValue(NaN,t),t._setExecutionVariable(this,"lastRemainingTime",NaN),void t._setExecutionVariable(this,"timestamp",0);const Z=this.duration.getValue(t);if(Z<=0||isNaN(Z)||!isFinite(Z))return this._reportError(t,"Invalid duration in Throttle block");const J=t._getExecutionVariable(this,"lastRemainingTime",NaN),S=Date.now();if(isNaN(J))return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(t);{const b=S-t._getExecutionVariable(this,"timestamp",0),J=1e3*Z;if(J<=b)return this.lastRemainingTime.setValue(0,t),t._setExecutionVariable(this,"lastRemainingTime",0),t._setExecutionVariable(this,"timestamp",S),this.out._activateSignal(t);{const Z=J-b;this.lastRemainingTime.setValue(Z/1e3,t),t._setExecutionVariable(this,"lastRemainingTime",Z)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,P.f)("FlowGraphThrottleBlock",v)}}]);