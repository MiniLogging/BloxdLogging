"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[110],{16573:(P,a,R)=>{R.r(a),R.d(a,{FlowGraphThrottleBlock:()=>p});var S=R(14524),A=R(14572),Z=R(12376);class p extends A.c{constructor(P){super(P),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",S.p),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",S.p,NaN)}_execute(P,a){if(a===this.reset)return this.lastRemainingTime.setValue(NaN,P),P._setExecutionVariable(this,"lastRemainingTime",NaN),void P._setExecutionVariable(this,"timestamp",0);const R=this.duration.getValue(P);if(R<=0||isNaN(R)||!isFinite(R))return this._reportError(P,"Invalid duration in Throttle block");const S=P._getExecutionVariable(this,"lastRemainingTime",NaN),A=Date.now();if(isNaN(S))return this.lastRemainingTime.setValue(0,P),P._setExecutionVariable(this,"lastRemainingTime",0),P._setExecutionVariable(this,"timestamp",A),this.out._activateSignal(P);{const a=A-P._getExecutionVariable(this,"timestamp",0),S=1e3*R;if(S<=a)return this.lastRemainingTime.setValue(0,P),P._setExecutionVariable(this,"lastRemainingTime",0),P._setExecutionVariable(this,"timestamp",A),this.out._activateSignal(P);{const R=S-a;this.lastRemainingTime.setValue(R/1e3,P),P._setExecutionVariable(this,"lastRemainingTime",R)}}}getClassName(){return"FlowGraphThrottleBlock"}}(0,Z.d)("FlowGraphThrottleBlock",p)}}]);