"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[49],{14379:(b,X,P)=>{P.r(X),P.d(X,{_HDRTextureLoader:()=>f});var Q=P(11834);class S{static ConvertPanoramaToCubemap(b,X,P,Q){let S=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!b)throw"ConvertPanoramaToCubemap: input cannot be null";if(b.length!=X*P*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(Q,this.FACE_FRONT,b,X,P,S),back:this.CreateCubemapTexture(Q,this.FACE_BACK,b,X,P,S),left:this.CreateCubemapTexture(Q,this.FACE_LEFT,b,X,P,S),right:this.CreateCubemapTexture(Q,this.FACE_RIGHT,b,X,P,S),up:this.CreateCubemapTexture(Q,this.FACE_UP,b,X,P,S),down:this.CreateCubemapTexture(Q,this.FACE_DOWN,b,X,P,S),size:Q,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(b,X,P,Q,S){let d=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const N=new ArrayBuffer(b*b*4*3),a=new Float32Array(N),u=d?Math.max(1,Math.round(Q/4/b)):1,w=1/u,f=w*w,O=X[1].BX(X[0]).scale(w/b),e=X[3].BX(X[2]).scale(w/b),Y=1/b;let D=0;for(let E=0;E<b;E++)for(let d=0;d<u;d++){let d=X[0],N=X[2];for(let X=0;X<b;X++)for(let w=0;w<u;w++){const u=N.BX(d).scale(D).add(d);u.normalize();const w=this.CalcProjectionSpherical(u,P,Q,S);a[E*b*3+3*X+0]+=w.r*f,a[E*b*3+3*X+1]+=w.g*f,a[E*b*3+3*X+2]+=w.b*f,d=d.add(O),N=N.add(e)}D+=Y*w}return a}static CalcProjectionSpherical(b,X,P,Q){let S=Math.atan2(b.z,b.x);const d=Math.acos(b.y);for(;S<-Math.PI;)S+=2*Math.PI;for(;S>Math.PI;)S-=2*Math.PI;let N=S/Math.PI;const a=d/Math.PI;N=.5*N+.5;let u=Math.round(N*P);u<0?u=0:u>=P&&(u=P-1);let w=Math.round(a*Q);w<0?w=0:w>=Q&&(w=Q-1);const f=Q-w-1;return{r:X[f*P*3+3*u+0],g:X[f*P*3+3*u+1],b:X[f*P*3+3*u+2]}}}function d(b,X,P,Q,S,d){S>0?(S=function(b,X){return X>1023?b*Math.pow(2,1023)*Math.pow(2,X-1023):X<-1074?b*Math.pow(2,-1074)*Math.pow(2,X+1074):b*Math.pow(2,X)}(1,S-136),b[d+0]=X*S,b[d+1]=P*S,b[d+2]=Q*S):(b[d+0]=0,b[d+1]=0,b[d+2]=0)}function N(b,X){let P="",Q="";for(let S=X;S<b.length-X&&(Q=String.fromCharCode(b[S]),"\n"!=Q);S++)P+=Q;return P}function a(b){let X=0,P=0,Q=N(b,0);if("#"!=Q[0]||"?"!=Q[1])throw"Bad HDR Format.";let S=!1,d=!1,a=0;do{a+=Q.length+1,Q=N(b,a),"FORMAT=32-bit_rle_rgbe"==Q?d=!0:0==Q.length&&(S=!0)}while(!S);if(!d)throw"HDR Bad header format, unsupported FORMAT";a+=Q.length+1,Q=N(b,a);const u=/^-Y (.*) \+X (.*)$/g.exec(Q);if(!u||u.length<3)throw"HDR Bad header format, no size";if(P=parseInt(u[2]),X=parseInt(u[1]),P<8||P>32767)throw"HDR Bad header format, unsupported size";return a+=Q.length+1,{height:X,width:P,dataPosition:a}}function u(b,X){return function(b,X){let P=X.height;const Q=X.width;let S,N,a,u,f,O=X.dataPosition,e=0,Y=0,D=0;const E=new ArrayBuffer(4*Q),t=new Uint8Array(E),B=new ArrayBuffer(X.width*X.height*4*3),W=new Float32Array(B);for(;P>0;){if(S=b[O++],N=b[O++],a=b[O++],u=b[O++],2!=S||2!=N||128&a||X.width<8||X.width>32767)return w(b,X);if((a<<8|u)!=Q)throw"HDR Bad header format, wrong scan line width";for(e=0,D=0;D<4;D++)for(Y=(D+1)*Q;e<Y;)if(S=b[O++],N=b[O++],S>128){if(f=S-128,0==f||f>Y-e)throw"HDR Bad Format, bad scanline data (run)";for(;f-- >0;)t[e++]=N}else{if(f=S,0==f||f>Y-e)throw"HDR Bad Format, bad scanline data (non-run)";if(t[e++]=N,--f>0)for(let X=0;X<f;X++)t[e++]=b[O++]}for(D=0;D<Q;D++)S=t[D],N=t[D+Q],a=t[D+2*Q],u=t[D+3*Q],d(W,S,N,a,u,(X.height-P)*Q*3+3*D);P--}return W}(b,X)}function w(b,X){let P=X.height;const Q=X.width;let S,N,a,u,w,f=X.dataPosition;const O=new ArrayBuffer(X.width*X.height*4*3),e=new Float32Array(O);for(;P>0;){for(w=0;w<X.width;w++)S=b[f++],N=b[f++],a=b[f++],u=b[f++],d(e,S,N,a,u,(X.height-P)*Q*3+3*w);P--}return e}S.FACE_LEFT=[new Q.tX(-1,-1,-1),new Q.tX(1,-1,-1),new Q.tX(-1,1,-1),new Q.tX(1,1,-1)],S.FACE_RIGHT=[new Q.tX(1,-1,1),new Q.tX(-1,-1,1),new Q.tX(1,1,1),new Q.tX(-1,1,1)],S.FACE_FRONT=[new Q.tX(1,-1,-1),new Q.tX(1,-1,1),new Q.tX(1,1,-1),new Q.tX(1,1,1)],S.FACE_BACK=[new Q.tX(-1,-1,1),new Q.tX(-1,-1,-1),new Q.tX(-1,1,1),new Q.tX(-1,1,-1)],S.FACE_DOWN=[new Q.tX(1,1,-1),new Q.tX(1,1,1),new Q.tX(-1,1,-1),new Q.tX(-1,1,1)],S.FACE_UP=[new Q.tX(-1,-1,-1),new Q.tX(-1,-1,1),new Q.tX(1,-1,-1),new Q.tX(1,-1,1)];class f{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(b,X,P){const Q=new Uint8Array(b.buffer,b.byteOffset,b.byteLength),S=a(Q),d=u(Q,S),N=S.width*S.height,w=new Float32Array(4*N);for(let a=0;a<N;a+=1)w[4*a]=d[3*a],w[4*a+1]=d[3*a+1],w[4*a+2]=d[3*a+2],w[4*a+3]=1;P(S.width,S.height,X.generateMipMaps,!1,(()=>{const b=X.getEngine();X.type=1,X.format=5,X._gammaSpace=!1,b._uploadDataToTextureDirectly(X,w)}))}}}}]);