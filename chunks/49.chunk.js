"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[49],{14833:(E,U,g)=>{g.r(U),g.d(U,{_HDRTextureLoader:()=>B});var N=g(12334);class L{static ConvertPanoramaToCubemap(E,U,g,N){let L=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!E)throw"ConvertPanoramaToCubemap: input cannot be null";if(E.length!=U*g*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(N,this.FACE_FRONT,E,U,g,L),back:this.CreateCubemapTexture(N,this.FACE_BACK,E,U,g,L),left:this.CreateCubemapTexture(N,this.FACE_LEFT,E,U,g,L),right:this.CreateCubemapTexture(N,this.FACE_RIGHT,E,U,g,L),up:this.CreateCubemapTexture(N,this.FACE_UP,E,U,g,L),down:this.CreateCubemapTexture(N,this.FACE_DOWN,E,U,g,L),size:N,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(E,U,g,N,L){let D=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const S=new ArrayBuffer(E*E*4*3),u=new Float32Array(S),s=D?Math.max(1,Math.round(N/4/E)):1,C=1/s,B=C*C,P=U[1].IU(U[0]).scale(C/E),F=U[3].IU(U[2]).scale(C/E),f=1/E;let d=0;for(let I=0;I<E;I++)for(let D=0;D<s;D++){let D=U[0],S=U[2];for(let U=0;U<E;U++)for(let C=0;C<s;C++){const s=S.IU(D).scale(d).add(D);s.normalize();const C=this.CalcProjectionSpherical(s,g,N,L);u[I*E*3+3*U+0]+=C.r*B,u[I*E*3+3*U+1]+=C.g*B,u[I*E*3+3*U+2]+=C.b*B,D=D.add(P),S=S.add(F)}d+=f*C}return u}static CalcProjectionSpherical(E,U,g,N){let L=Math.atan2(E.z,E.x);const D=Math.acos(E.y);for(;L<-Math.PI;)L+=2*Math.PI;for(;L>Math.PI;)L-=2*Math.PI;let S=L/Math.PI;const u=D/Math.PI;S=.5*S+.5;let s=Math.round(S*g);s<0?s=0:s>=g&&(s=g-1);let C=Math.round(u*N);C<0?C=0:C>=N&&(C=N-1);const B=N-C-1;return{r:U[B*g*3+3*s+0],g:U[B*g*3+3*s+1],b:U[B*g*3+3*s+2]}}}function D(E,U,g,N,L,D){L>0?(L=function(E,U){return U>1023?E*Math.pow(2,1023)*Math.pow(2,U-1023):U<-1074?E*Math.pow(2,-1074)*Math.pow(2,U+1074):E*Math.pow(2,U)}(1,L-136),E[D+0]=U*L,E[D+1]=g*L,E[D+2]=N*L):(E[D+0]=0,E[D+1]=0,E[D+2]=0)}function S(E,U){let g="",N="";for(let L=U;L<E.length-U&&(N=String.fromCharCode(E[L]),"\n"!=N);L++)g+=N;return g}function u(E){let U=0,g=0,N=S(E,0);if("#"!=N[0]||"?"!=N[1])throw"Bad HDR Format.";let L=!1,D=!1,u=0;do{u+=N.length+1,N=S(E,u),"FORMAT=32-bit_rle_rgbe"==N?D=!0:0==N.length&&(L=!0)}while(!L);if(!D)throw"HDR Bad header format, unsupported FORMAT";u+=N.length+1,N=S(E,u);const s=/^-Y (.*) \+X (.*)$/g.exec(N);if(!s||s.length<3)throw"HDR Bad header format, no size";if(g=parseInt(s[2]),U=parseInt(s[1]),g<8||g>32767)throw"HDR Bad header format, unsupported size";return u+=N.length+1,{height:U,width:g,dataPosition:u}}function s(E,U){return function(E,U){let g=U.height;const N=U.width;let L,S,u,s,B,P=U.dataPosition,F=0,f=0,d=0;const I=new ArrayBuffer(4*N),y=new Uint8Array(I),h=new ArrayBuffer(U.width*U.height*4*3),V=new Float32Array(h);for(;g>0;){if(L=E[P++],S=E[P++],u=E[P++],s=E[P++],2!=L||2!=S||128&u||U.width<8||U.width>32767)return C(E,U);if((u<<8|s)!=N)throw"HDR Bad header format, wrong scan line width";for(F=0,d=0;d<4;d++)for(f=(d+1)*N;F<f;)if(L=E[P++],S=E[P++],L>128){if(B=L-128,0==B||B>f-F)throw"HDR Bad Format, bad scanline data (run)";for(;B-- >0;)y[F++]=S}else{if(B=L,0==B||B>f-F)throw"HDR Bad Format, bad scanline data (non-run)";if(y[F++]=S,--B>0)for(let U=0;U<B;U++)y[F++]=E[P++]}for(d=0;d<N;d++)L=y[d],S=y[d+N],u=y[d+2*N],s=y[d+3*N],D(V,L,S,u,s,(U.height-g)*N*3+3*d);g--}return V}(E,U)}function C(E,U){let g=U.height;const N=U.width;let L,S,u,s,C,B=U.dataPosition;const P=new ArrayBuffer(U.width*U.height*4*3),F=new Float32Array(P);for(;g>0;){for(C=0;C<U.width;C++)L=E[B++],S=E[B++],u=E[B++],s=E[B++],D(F,L,S,u,s,(U.height-g)*N*3+3*C);g--}return F}L.FACE_LEFT=[new N.dU(-1,-1,-1),new N.dU(1,-1,-1),new N.dU(-1,1,-1),new N.dU(1,1,-1)],L.FACE_RIGHT=[new N.dU(1,-1,1),new N.dU(-1,-1,1),new N.dU(1,1,1),new N.dU(-1,1,1)],L.FACE_FRONT=[new N.dU(1,-1,-1),new N.dU(1,-1,1),new N.dU(1,1,-1),new N.dU(1,1,1)],L.FACE_BACK=[new N.dU(-1,-1,1),new N.dU(-1,-1,-1),new N.dU(-1,1,1),new N.dU(-1,1,-1)],L.FACE_DOWN=[new N.dU(1,1,-1),new N.dU(1,1,1),new N.dU(-1,1,-1),new N.dU(-1,1,1)],L.FACE_UP=[new N.dU(-1,-1,-1),new N.dU(-1,-1,1),new N.dU(1,-1,-1),new N.dU(1,-1,1)];class B{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(E,U,g){const N=new Uint8Array(E.buffer,E.byteOffset,E.byteLength),L=u(N),D=s(N,L),S=L.width*L.height,C=new Float32Array(4*S);for(let u=0;u<S;u+=1)C[4*u]=D[3*u],C[4*u+1]=D[3*u+1],C[4*u+2]=D[3*u+2],C[4*u+3]=1;g(L.width,L.height,U.generateMipMaps,!1,(()=>{const E=U.getEngine();U.type=1,U.format=5,U._gammaSpace=!1,E._uploadDataToTextureDirectly(U,C)}))}}}}]);