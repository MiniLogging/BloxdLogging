"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[49],{15227:(p,b,M)=>{M.r(b),M.d(b,{_HDRTextureLoader:()=>z});var h=M(12777);class Q{static ConvertPanoramaToCubemap(p,b,M,h){let Q=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!p)throw"ConvertPanoramaToCubemap: input cannot be null";if(p.length!=b*M*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(h,this.FACE_FRONT,p,b,M,Q),back:this.CreateCubemapTexture(h,this.FACE_BACK,p,b,M,Q),left:this.CreateCubemapTexture(h,this.FACE_LEFT,p,b,M,Q),right:this.CreateCubemapTexture(h,this.FACE_RIGHT,p,b,M,Q),up:this.CreateCubemapTexture(h,this.FACE_UP,p,b,M,Q),down:this.CreateCubemapTexture(h,this.FACE_DOWN,p,b,M,Q),size:h,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(p,b,M,h,Q){let mp=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const y=new ArrayBuffer(p*p*4*3),P=new Float32Array(y),w=mp?Math.max(1,Math.round(h/4/p)):1,t=1/w,z=t*t,x=b[1].mh(b[0]).scale(t/p),S=b[3].mh(b[2]).scale(t/p),X=1/p;let c=0;for(let J=0;J<p;J++)for(let mp=0;mp<w;mp++){let mp=b[0],y=b[2];for(let b=0;b<p;b++)for(let t=0;t<w;t++){const w=y.mh(mp).scale(c).add(mp);w.normalize();const t=this.CalcProjectionSpherical(w,M,h,Q);P[J*p*3+3*b+0]+=t.r*z,P[J*p*3+3*b+1]+=t.g*z,P[J*p*3+3*b+2]+=t.b*z,mp=mp.add(x),y=y.add(S)}c+=X*t}return P}static CalcProjectionSpherical(p,b,M,h){let Q=Math.atan2(p.z,p.x);const mp=Math.acos(p.y);for(;Q<-Math.PI;)Q+=2*Math.PI;for(;Q>Math.PI;)Q-=2*Math.PI;let y=Q/Math.PI;const P=mp/Math.PI;y=.5*y+.5;let w=Math.round(y*M);w<0?w=0:w>=M&&(w=M-1);let t=Math.round(P*h);t<0?t=0:t>=h&&(t=h-1);const z=h-t-1;return{r:b[z*M*3+3*w+0],g:b[z*M*3+3*w+1],b:b[z*M*3+3*w+2]}}}function mp(p,b,M,h,Q,mp){Q>0?(Q=function(p,b){return b>1023?p*Math.pow(2,1023)*Math.pow(2,b-1023):b<-1074?p*Math.pow(2,-1074)*Math.pow(2,b+1074):p*Math.pow(2,b)}(1,Q-136),p[mp+0]=b*Q,p[mp+1]=M*Q,p[mp+2]=h*Q):(p[mp+0]=0,p[mp+1]=0,p[mp+2]=0)}function y(p,b){let M="",h="";for(let Q=b;Q<p.length-b&&(h=String.fromCharCode(p[Q]),"\n"!=h);Q++)M+=h;return M}function P(p){let b=0,M=0,h=y(p,0);if("#"!=h[0]||"?"!=h[1])throw"Bad HDR Format.";let Q=!1,mp=!1,P=0;do{P+=h.length+1,h=y(p,P),"FORMAT=32-bit_rle_rgbe"==h?mp=!0:0==h.length&&(Q=!0)}while(!Q);if(!mp)throw"HDR Bad header format, unsupported FORMAT";P+=h.length+1,h=y(p,P);const w=/^-Y (.*) \+X (.*)$/g.exec(h);if(!w||w.length<3)throw"HDR Bad header format, no size";if(M=parseInt(w[2]),b=parseInt(w[1]),M<8||M>32767)throw"HDR Bad header format, unsupported size";return P+=h.length+1,{height:b,width:M,dataPosition:P}}function w(p,b){return function(p,b){let M=b.height;const h=b.width;let Q,y,P,w,z,x=b.dataPosition,S=0,X=0,c=0;const J=new ArrayBuffer(4*h),g=new Uint8Array(J),f=new ArrayBuffer(b.width*b.height*4*3),Y=new Float32Array(f);for(;M>0;){if(Q=p[x++],y=p[x++],P=p[x++],w=p[x++],2!=Q||2!=y||128&P||b.width<8||b.width>32767)return t(p,b);if((P<<8|w)!=h)throw"HDR Bad header format, wrong scan line width";for(S=0,c=0;c<4;c++)for(X=(c+1)*h;S<X;)if(Q=p[x++],y=p[x++],Q>128){if(z=Q-128,0==z||z>X-S)throw"HDR Bad Format, bad scanline data (run)";for(;z-- >0;)g[S++]=y}else{if(z=Q,0==z||z>X-S)throw"HDR Bad Format, bad scanline data (non-run)";if(g[S++]=y,--z>0)for(let b=0;b<z;b++)g[S++]=p[x++]}for(c=0;c<h;c++)Q=g[c],y=g[c+h],P=g[c+2*h],w=g[c+3*h],mp(Y,Q,y,P,w,(b.height-M)*h*3+3*c);M--}return Y}(p,b)}function t(p,b){let M=b.height;const h=b.width;let Q,y,P,w,t,z=b.dataPosition;const x=new ArrayBuffer(b.width*b.height*4*3),S=new Float32Array(x);for(;M>0;){for(t=0;t<b.width;t++)Q=p[z++],y=p[z++],P=p[z++],w=p[z++],mp(S,Q,y,P,w,(b.height-M)*h*3+3*t);M--}return S}Q.FACE_LEFT=[new h.QM(-1,-1,-1),new h.QM(1,-1,-1),new h.QM(-1,1,-1),new h.QM(1,1,-1)],Q.FACE_RIGHT=[new h.QM(1,-1,1),new h.QM(-1,-1,1),new h.QM(1,1,1),new h.QM(-1,1,1)],Q.FACE_FRONT=[new h.QM(1,-1,-1),new h.QM(1,-1,1),new h.QM(1,1,-1),new h.QM(1,1,1)],Q.FACE_BACK=[new h.QM(-1,-1,1),new h.QM(-1,-1,-1),new h.QM(-1,1,1),new h.QM(-1,1,-1)],Q.FACE_DOWN=[new h.QM(1,1,-1),new h.QM(1,1,1),new h.QM(-1,1,-1),new h.QM(-1,1,1)],Q.FACE_UP=[new h.QM(-1,-1,-1),new h.QM(-1,-1,1),new h.QM(1,-1,-1),new h.QM(1,-1,1)];class z{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(p,b,M){const h=new Uint8Array(p.buffer,p.byteOffset,p.byteLength),Q=P(h),mp=w(h,Q),y=Q.width*Q.height,t=new Float32Array(4*y);for(let P=0;P<y;P+=1)t[4*P]=mp[3*P],t[4*P+1]=mp[3*P+1],t[4*P+2]=mp[3*P+2],t[4*P+3]=1;M(Q.width,Q.height,b.generateMipMaps,!1,(()=>{const p=b.getEngine();b.type=1,b.format=5,b._gammaSpace=!1,p._uploadDataToTextureDirectly(b,t)}))}}}}]);