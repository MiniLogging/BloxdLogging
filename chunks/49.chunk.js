"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[49],{13553:(N,q,C)=>{C.r(q),C.d(q,{_HDRTextureLoader:()=>n});var d=C(11122);class U{static ConvertPanoramaToCubemap(N,q,C,d){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!N)throw"ConvertPanoramaToCubemap: input cannot be null";if(N.length!=q*C*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(d,this.FACE_FRONT,N,q,C,U),back:this.CreateCubemapTexture(d,this.FACE_BACK,N,q,C,U),left:this.CreateCubemapTexture(d,this.FACE_LEFT,N,q,C,U),right:this.CreateCubemapTexture(d,this.FACE_RIGHT,N,q,C,U),up:this.CreateCubemapTexture(d,this.FACE_UP,N,q,C,U),down:this.CreateCubemapTexture(d,this.FACE_DOWN,N,q,C,U),size:d,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(N,q,C,d,U){let W=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const a=new ArrayBuffer(N*N*4*3),F=new Float32Array(a),w=W?Math.max(1,Math.round(d/4/N)):1,A=1/w,n=A*A,t=q[1].Qq(q[0]).scale(A/N),V=q[3].Qq(q[2]).scale(A/N),Z=1/N;let J=0;for(let Q=0;Q<N;Q++)for(let W=0;W<w;W++){let W=q[0],a=q[2];for(let q=0;q<N;q++)for(let A=0;A<w;A++){const w=a.Qq(W).scale(J).add(W);w.normalize();const A=this.CalcProjectionSpherical(w,C,d,U);F[Q*N*3+3*q+0]+=A.r*n,F[Q*N*3+3*q+1]+=A.g*n,F[Q*N*3+3*q+2]+=A.b*n,W=W.add(t),a=a.add(V)}J+=Z*A}return F}static CalcProjectionSpherical(N,q,C,d){let U=Math.atan2(N.z,N.x);const W=Math.acos(N.y);for(;U<-Math.PI;)U+=2*Math.PI;for(;U>Math.PI;)U-=2*Math.PI;let a=U/Math.PI;const F=W/Math.PI;a=.5*a+.5;let w=Math.round(a*C);w<0?w=0:w>=C&&(w=C-1);let A=Math.round(F*d);A<0?A=0:A>=d&&(A=d-1);const n=d-A-1;return{r:q[n*C*3+3*w+0],g:q[n*C*3+3*w+1],b:q[n*C*3+3*w+2]}}}function W(N,q,C,d,U,W){U>0?(U=function(N,q){return q>1023?N*Math.pow(2,1023)*Math.pow(2,q-1023):q<-1074?N*Math.pow(2,-1074)*Math.pow(2,q+1074):N*Math.pow(2,q)}(1,U-136),N[W+0]=q*U,N[W+1]=C*U,N[W+2]=d*U):(N[W+0]=0,N[W+1]=0,N[W+2]=0)}function a(N,q){let C="",d="";for(let U=q;U<N.length-q&&(d=String.fromCharCode(N[U]),"\n"!=d);U++)C+=d;return C}function F(N){let q=0,C=0,d=a(N,0);if("#"!=d[0]||"?"!=d[1])throw"Bad HDR Format.";let U=!1,W=!1,F=0;do{F+=d.length+1,d=a(N,F),"FORMAT=32-bit_rle_rgbe"==d?W=!0:0==d.length&&(U=!0)}while(!U);if(!W)throw"HDR Bad header format, unsupported FORMAT";F+=d.length+1,d=a(N,F);const w=/^-Y (.*) \+X (.*)$/g.exec(d);if(!w||w.length<3)throw"HDR Bad header format, no size";if(C=parseInt(w[2]),q=parseInt(w[1]),C<8||C>32767)throw"HDR Bad header format, unsupported size";return F+=d.length+1,{height:q,width:C,dataPosition:F}}function w(N,q){return function(N,q){let C=q.height;const d=q.width;let U,a,F,w,n,t=q.dataPosition,V=0,Z=0,J=0;const Q=new ArrayBuffer(4*d),v=new Uint8Array(Q),r=new ArrayBuffer(q.width*q.height*4*3),O=new Float32Array(r);for(;C>0;){if(U=N[t++],a=N[t++],F=N[t++],w=N[t++],2!=U||2!=a||128&F||q.width<8||q.width>32767)return A(N,q);if((F<<8|w)!=d)throw"HDR Bad header format, wrong scan line width";for(V=0,J=0;J<4;J++)for(Z=(J+1)*d;V<Z;)if(U=N[t++],a=N[t++],U>128){if(n=U-128,0==n||n>Z-V)throw"HDR Bad Format, bad scanline data (run)";for(;n-- >0;)v[V++]=a}else{if(n=U,0==n||n>Z-V)throw"HDR Bad Format, bad scanline data (non-run)";if(v[V++]=a,--n>0)for(let q=0;q<n;q++)v[V++]=N[t++]}for(J=0;J<d;J++)U=v[J],a=v[J+d],F=v[J+2*d],w=v[J+3*d],W(O,U,a,F,w,(q.height-C)*d*3+3*J);C--}return O}(N,q)}function A(N,q){let C=q.height;const d=q.width;let U,a,F,w,A,n=q.dataPosition;const t=new ArrayBuffer(q.width*q.height*4*3),V=new Float32Array(t);for(;C>0;){for(A=0;A<q.width;A++)U=N[n++],a=N[n++],F=N[n++],w=N[n++],W(V,U,a,F,w,(q.height-C)*d*3+3*A);C--}return V}U.FACE_LEFT=[new d.Jq(-1,-1,-1),new d.Jq(1,-1,-1),new d.Jq(-1,1,-1),new d.Jq(1,1,-1)],U.FACE_RIGHT=[new d.Jq(1,-1,1),new d.Jq(-1,-1,1),new d.Jq(1,1,1),new d.Jq(-1,1,1)],U.FACE_FRONT=[new d.Jq(1,-1,-1),new d.Jq(1,-1,1),new d.Jq(1,1,-1),new d.Jq(1,1,1)],U.FACE_BACK=[new d.Jq(-1,-1,1),new d.Jq(-1,-1,-1),new d.Jq(-1,1,1),new d.Jq(-1,1,-1)],U.FACE_DOWN=[new d.Jq(1,1,-1),new d.Jq(1,1,1),new d.Jq(-1,1,-1),new d.Jq(-1,1,1)],U.FACE_UP=[new d.Jq(-1,-1,-1),new d.Jq(-1,-1,1),new d.Jq(1,-1,-1),new d.Jq(1,-1,1)];class n{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(N,q,C){const d=new Uint8Array(N.buffer,N.byteOffset,N.byteLength),U=F(d),W=w(d,U),a=U.width*U.height,A=new Float32Array(4*a);for(let F=0;F<a;F+=1)A[4*F]=W[3*F],A[4*F+1]=W[3*F+1],A[4*F+2]=W[3*F+2],A[4*F+3]=1;C(U.width,U.height,q.generateMipMaps,!1,(()=>{const N=q.getEngine();q.type=1,q.format=5,q._gammaSpace=!1,N._uploadDataToTextureDirectly(q,A)}))}}}}]);