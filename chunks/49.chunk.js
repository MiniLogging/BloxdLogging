"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[49],{14758:(H,u,J)=>{J.r(u),J.d(u,{_HDRTextureLoader:()=>d});var O=J(12338);class U{static ConvertPanoramaToCubemap(H,u,J,O){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!H)throw"ConvertPanoramaToCubemap: input cannot be null";if(H.length!=u*J*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(O,this.FACE_FRONT,H,u,J,U),back:this.CreateCubemapTexture(O,this.FACE_BACK,H,u,J,U),left:this.CreateCubemapTexture(O,this.FACE_LEFT,H,u,J,U),right:this.CreateCubemapTexture(O,this.FACE_RIGHT,H,u,J,U),up:this.CreateCubemapTexture(O,this.FACE_UP,H,u,J,U),down:this.CreateCubemapTexture(O,this.FACE_DOWN,H,u,J,U),size:O,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(H,u,J,O,U){let h=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const w=new ArrayBuffer(H*H*4*3),g=new Float32Array(w),B=h?Math.max(1,Math.round(O/4/H)):1,b=1/B,d=b*b,G=u[1].ru(u[0]).scale(b/H),P=u[3].ru(u[2]).scale(b/H),mH=1/H;let l=0;for(let r=0;r<H;r++)for(let h=0;h<B;h++){let h=u[0],w=u[2];for(let u=0;u<H;u++)for(let b=0;b<B;b++){const B=w.ru(h).scale(l).add(h);B.normalize();const b=this.CalcProjectionSpherical(B,J,O,U);g[r*H*3+3*u+0]+=b.r*d,g[r*H*3+3*u+1]+=b.g*d,g[r*H*3+3*u+2]+=b.b*d,h=h.add(G),w=w.add(P)}l+=mH*b}return g}static CalcProjectionSpherical(H,u,J,O){let U=Math.atan2(H.z,H.x);const h=Math.acos(H.y);for(;U<-Math.PI;)U+=2*Math.PI;for(;U>Math.PI;)U-=2*Math.PI;let w=U/Math.PI;const g=h/Math.PI;w=.5*w+.5;let B=Math.round(w*J);B<0?B=0:B>=J&&(B=J-1);let b=Math.round(g*O);b<0?b=0:b>=O&&(b=O-1);const d=O-b-1;return{r:u[d*J*3+3*B+0],g:u[d*J*3+3*B+1],b:u[d*J*3+3*B+2]}}}function h(H,u,J,O,U,h){U>0?(U=function(H,u){return u>1023?H*Math.pow(2,1023)*Math.pow(2,u-1023):u<-1074?H*Math.pow(2,-1074)*Math.pow(2,u+1074):H*Math.pow(2,u)}(1,U-136),H[h+0]=u*U,H[h+1]=J*U,H[h+2]=O*U):(H[h+0]=0,H[h+1]=0,H[h+2]=0)}function w(H,u){let J="",O="";for(let U=u;U<H.length-u&&(O=String.fromCharCode(H[U]),"\n"!=O);U++)J+=O;return J}function g(H){let u=0,J=0,O=w(H,0);if("#"!=O[0]||"?"!=O[1])throw"Bad HDR Format.";let U=!1,h=!1,g=0;do{g+=O.length+1,O=w(H,g),"FORMAT=32-bit_rle_rgbe"==O?h=!0:0==O.length&&(U=!0)}while(!U);if(!h)throw"HDR Bad header format, unsupported FORMAT";g+=O.length+1,O=w(H,g);const B=/^-Y (.*) \+X (.*)$/g.exec(O);if(!B||B.length<3)throw"HDR Bad header format, no size";if(J=parseInt(B[2]),u=parseInt(B[1]),J<8||J>32767)throw"HDR Bad header format, unsupported size";return g+=O.length+1,{height:u,width:J,dataPosition:g}}function B(H,u){return function(H,u){let J=u.height;const O=u.width;let U,w,g,B,d,G=u.dataPosition,P=0,mH=0,l=0;const r=new ArrayBuffer(4*O),p=new Uint8Array(r),a=new ArrayBuffer(u.width*u.height*4*3),k=new Float32Array(a);for(;J>0;){if(U=H[G++],w=H[G++],g=H[G++],B=H[G++],2!=U||2!=w||128&g||u.width<8||u.width>32767)return b(H,u);if((g<<8|B)!=O)throw"HDR Bad header format, wrong scan line width";for(P=0,l=0;l<4;l++)for(mH=(l+1)*O;P<mH;)if(U=H[G++],w=H[G++],U>128){if(d=U-128,0==d||d>mH-P)throw"HDR Bad Format, bad scanline data (run)";for(;d-- >0;)p[P++]=w}else{if(d=U,0==d||d>mH-P)throw"HDR Bad Format, bad scanline data (non-run)";if(p[P++]=w,--d>0)for(let u=0;u<d;u++)p[P++]=H[G++]}for(l=0;l<O;l++)U=p[l],w=p[l+O],g=p[l+2*O],B=p[l+3*O],h(k,U,w,g,B,(u.height-J)*O*3+3*l);J--}return k}(H,u)}function b(H,u){let J=u.height;const O=u.width;let U,w,g,B,b,d=u.dataPosition;const G=new ArrayBuffer(u.width*u.height*4*3),P=new Float32Array(G);for(;J>0;){for(b=0;b<u.width;b++)U=H[d++],w=H[d++],g=H[d++],B=H[d++],h(P,U,w,g,B,(u.height-J)*O*3+3*b);J--}return P}U.FACE_LEFT=[new O.lu(-1,-1,-1),new O.lu(1,-1,-1),new O.lu(-1,1,-1),new O.lu(1,1,-1)],U.FACE_RIGHT=[new O.lu(1,-1,1),new O.lu(-1,-1,1),new O.lu(1,1,1),new O.lu(-1,1,1)],U.FACE_FRONT=[new O.lu(1,-1,-1),new O.lu(1,-1,1),new O.lu(1,1,-1),new O.lu(1,1,1)],U.FACE_BACK=[new O.lu(-1,-1,1),new O.lu(-1,-1,-1),new O.lu(-1,1,1),new O.lu(-1,1,-1)],U.FACE_DOWN=[new O.lu(1,1,-1),new O.lu(1,1,1),new O.lu(-1,1,-1),new O.lu(-1,1,1)],U.FACE_UP=[new O.lu(-1,-1,-1),new O.lu(-1,-1,1),new O.lu(1,-1,-1),new O.lu(1,-1,1)];class d{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(H,u,J){const O=new Uint8Array(H.buffer,H.byteOffset,H.byteLength),U=g(O),h=B(O,U),w=U.width*U.height,b=new Float32Array(4*w);for(let g=0;g<w;g+=1)b[4*g]=h[3*g],b[4*g+1]=h[3*g+1],b[4*g+2]=h[3*g+2],b[4*g+3]=1;J(U.width,U.height,u.generateMipMaps,!1,(()=>{const H=u.getEngine();u.type=1,u.format=5,u._gammaSpace=!1,H._uploadDataToTextureDirectly(u,b)}))}}}}]);