"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[49],{14025:(w,E,G)=>{G.r(E),G.d(E,{_HDRTextureLoader:()=>i});var P=G(11679);class h{static ConvertPanoramaToCubemap(w,E,G,P){let h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!w)throw"ConvertPanoramaToCubemap: input cannot be null";if(w.length!=E*G*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(P,this.FACE_FRONT,w,E,G,h),back:this.CreateCubemapTexture(P,this.FACE_BACK,w,E,G,h),left:this.CreateCubemapTexture(P,this.FACE_LEFT,w,E,G,h),right:this.CreateCubemapTexture(P,this.FACE_RIGHT,w,E,G,h),up:this.CreateCubemapTexture(P,this.FACE_UP,w,E,G,h),down:this.CreateCubemapTexture(P,this.FACE_DOWN,w,E,G,h),size:P,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(w,E,G,P,h){let B=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const y=new ArrayBuffer(w*w*4*3),x=new Float32Array(y),U=B?Math.max(1,Math.round(P/4/w)):1,l=1/U,i=l*l,O=E[1].cE(E[0]).scale(l/w),u=E[3].cE(E[2]).scale(l/w),V=1/w;let a=0;for(let Q=0;Q<w;Q++)for(let B=0;B<U;B++){let B=E[0],y=E[2];for(let E=0;E<w;E++)for(let l=0;l<U;l++){const U=y.cE(B).scale(a).add(B);U.normalize();const l=this.CalcProjectionSpherical(U,G,P,h);x[Q*w*3+3*E+0]+=l.r*i,x[Q*w*3+3*E+1]+=l.g*i,x[Q*w*3+3*E+2]+=l.b*i,B=B.add(O),y=y.add(u)}a+=V*l}return x}static CalcProjectionSpherical(w,E,G,P){let h=Math.atan2(w.z,w.x);const B=Math.acos(w.y);for(;h<-Math.PI;)h+=2*Math.PI;for(;h>Math.PI;)h-=2*Math.PI;let y=h/Math.PI;const x=B/Math.PI;y=.5*y+.5;let U=Math.round(y*G);U<0?U=0:U>=G&&(U=G-1);let l=Math.round(x*P);l<0?l=0:l>=P&&(l=P-1);const i=P-l-1;return{r:E[i*G*3+3*U+0],g:E[i*G*3+3*U+1],b:E[i*G*3+3*U+2]}}}function B(w,E,G,P,h,B){h>0?(h=function(w,E){return E>1023?w*Math.pow(2,1023)*Math.pow(2,E-1023):E<-1074?w*Math.pow(2,-1074)*Math.pow(2,E+1074):w*Math.pow(2,E)}(1,h-136),w[B+0]=E*h,w[B+1]=G*h,w[B+2]=P*h):(w[B+0]=0,w[B+1]=0,w[B+2]=0)}function y(w,E){let G="",P="";for(let h=E;h<w.length-E&&(P=String.fromCharCode(w[h]),"\n"!=P);h++)G+=P;return G}function x(w){let E=0,G=0,P=y(w,0);if("#"!=P[0]||"?"!=P[1])throw"Bad HDR Format.";let h=!1,B=!1,x=0;do{x+=P.length+1,P=y(w,x),"FORMAT=32-bit_rle_rgbe"==P?B=!0:0==P.length&&(h=!0)}while(!h);if(!B)throw"HDR Bad header format, unsupported FORMAT";x+=P.length+1,P=y(w,x);const U=/^-Y (.*) \+X (.*)$/g.exec(P);if(!U||U.length<3)throw"HDR Bad header format, no size";if(G=parseInt(U[2]),E=parseInt(U[1]),G<8||G>32767)throw"HDR Bad header format, unsupported size";return x+=P.length+1,{height:E,width:G,dataPosition:x}}function U(w,E){return function(w,E){let G=E.height;const P=E.width;let h,y,x,U,i,O=E.dataPosition,u=0,V=0,a=0;const Q=new ArrayBuffer(4*P),c=new Uint8Array(Q),Z=new ArrayBuffer(E.width*E.height*4*3),J=new Float32Array(Z);for(;G>0;){if(h=w[O++],y=w[O++],x=w[O++],U=w[O++],2!=h||2!=y||128&x||E.width<8||E.width>32767)return l(w,E);if((x<<8|U)!=P)throw"HDR Bad header format, wrong scan line width";for(u=0,a=0;a<4;a++)for(V=(a+1)*P;u<V;)if(h=w[O++],y=w[O++],h>128){if(i=h-128,0==i||i>V-u)throw"HDR Bad Format, bad scanline data (run)";for(;i-- >0;)c[u++]=y}else{if(i=h,0==i||i>V-u)throw"HDR Bad Format, bad scanline data (non-run)";if(c[u++]=y,--i>0)for(let E=0;E<i;E++)c[u++]=w[O++]}for(a=0;a<P;a++)h=c[a],y=c[a+P],x=c[a+2*P],U=c[a+3*P],B(J,h,y,x,U,(E.height-G)*P*3+3*a);G--}return J}(w,E)}function l(w,E){let G=E.height;const P=E.width;let h,y,x,U,l,i=E.dataPosition;const O=new ArrayBuffer(E.width*E.height*4*3),u=new Float32Array(O);for(;G>0;){for(l=0;l<E.width;l++)h=w[i++],y=w[i++],x=w[i++],U=w[i++],B(u,h,y,x,U,(E.height-G)*P*3+3*l);G--}return u}h.FACE_LEFT=[new P.QE(-1,-1,-1),new P.QE(1,-1,-1),new P.QE(-1,1,-1),new P.QE(1,1,-1)],h.FACE_RIGHT=[new P.QE(1,-1,1),new P.QE(-1,-1,1),new P.QE(1,1,1),new P.QE(-1,1,1)],h.FACE_FRONT=[new P.QE(1,-1,-1),new P.QE(1,-1,1),new P.QE(1,1,-1),new P.QE(1,1,1)],h.FACE_BACK=[new P.QE(-1,-1,1),new P.QE(-1,-1,-1),new P.QE(-1,1,1),new P.QE(-1,1,-1)],h.FACE_DOWN=[new P.QE(1,1,-1),new P.QE(1,1,1),new P.QE(-1,1,-1),new P.QE(-1,1,1)],h.FACE_UP=[new P.QE(-1,-1,-1),new P.QE(-1,-1,1),new P.QE(1,-1,-1),new P.QE(1,-1,1)];class i{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(w,E,G){const P=new Uint8Array(w.buffer,w.byteOffset,w.byteLength),h=x(P),B=U(P,h),y=h.width*h.height,l=new Float32Array(4*y);for(let x=0;x<y;x+=1)l[4*x]=B[3*x],l[4*x+1]=B[3*x+1],l[4*x+2]=B[3*x+2],l[4*x+3]=1;G(h.width,h.height,E.generateMipMaps,!1,(()=>{const w=E.getEngine();E.type=1,E.format=5,E._gammaSpace=!1,w._uploadDataToTextureDirectly(E,l)}))}}}}]);