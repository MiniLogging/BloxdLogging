"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[49],{14900:(C,c,d)=>{d.r(c),d.d(c,{_HDRTextureLoader:()=>g});var b=d(12403);class X{static ConvertPanoramaToCubemap(C,c,d,b){let X=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!C)throw"ConvertPanoramaToCubemap: input cannot be null";if(C.length!=c*d*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(b,this.FACE_FRONT,C,c,d,X),back:this.CreateCubemapTexture(b,this.FACE_BACK,C,c,d,X),left:this.CreateCubemapTexture(b,this.FACE_LEFT,C,c,d,X),right:this.CreateCubemapTexture(b,this.FACE_RIGHT,C,c,d,X),up:this.CreateCubemapTexture(b,this.FACE_UP,C,c,d,X),down:this.CreateCubemapTexture(b,this.FACE_DOWN,C,c,d,X),size:b,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(C,c,d,b,X){let P=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const V=new ArrayBuffer(C*C*4*3),R=new Float32Array(V),p=P?Math.max(1,Math.round(b/4/C)):1,j=1/p,g=j*j,k=c[1].Xd(c[0]).scale(j/C),Z=c[3].Xd(c[2]).scale(j/C),U=1/C;let A=0;for(let u=0;u<C;u++)for(let P=0;P<p;P++){let P=c[0],V=c[2];for(let c=0;c<C;c++)for(let j=0;j<p;j++){const p=V.Xd(P).scale(A).add(P);p.normalize();const j=this.CalcProjectionSpherical(p,d,b,X);R[u*C*3+3*c+0]+=j.r*g,R[u*C*3+3*c+1]+=j.g*g,R[u*C*3+3*c+2]+=j.b*g,P=P.add(k),V=V.add(Z)}A+=U*j}return R}static CalcProjectionSpherical(C,c,d,b){let X=Math.atan2(C.z,C.x);const P=Math.acos(C.y);for(;X<-Math.PI;)X+=2*Math.PI;for(;X>Math.PI;)X-=2*Math.PI;let V=X/Math.PI;const R=P/Math.PI;V=.5*V+.5;let p=Math.round(V*d);p<0?p=0:p>=d&&(p=d-1);let j=Math.round(R*b);j<0?j=0:j>=b&&(j=b-1);const g=b-j-1;return{r:c[g*d*3+3*p+0],g:c[g*d*3+3*p+1],b:c[g*d*3+3*p+2]}}}function P(C,c,d,b,X,P){X>0?(X=function(C,c){return c>1023?C*Math.pow(2,1023)*Math.pow(2,c-1023):c<-1074?C*Math.pow(2,-1074)*Math.pow(2,c+1074):C*Math.pow(2,c)}(1,X-136),C[P+0]=c*X,C[P+1]=d*X,C[P+2]=b*X):(C[P+0]=0,C[P+1]=0,C[P+2]=0)}function V(C,c){let d="",b="";for(let X=c;X<C.length-c&&(b=String.fromCharCode(C[X]),"\n"!=b);X++)d+=b;return d}function R(C){let c=0,d=0,b=V(C,0);if("#"!=b[0]||"?"!=b[1])throw"Bad HDR Format.";let X=!1,P=!1,R=0;do{R+=b.length+1,b=V(C,R),"FORMAT=32-bit_rle_rgbe"==b?P=!0:0==b.length&&(X=!0)}while(!X);if(!P)throw"HDR Bad header format, unsupported FORMAT";R+=b.length+1,b=V(C,R);const p=/^-Y (.*) \+X (.*)$/g.exec(b);if(!p||p.length<3)throw"HDR Bad header format, no size";if(d=parseInt(p[2]),c=parseInt(p[1]),d<8||d>32767)throw"HDR Bad header format, unsupported size";return R+=b.length+1,{height:c,width:d,dataPosition:R}}function p(C,c){return function(C,c){let d=c.height;const b=c.width;let X,V,R,p,g,k=c.dataPosition,Z=0,U=0,A=0;const u=new ArrayBuffer(4*b),q=new Uint8Array(u),B=new ArrayBuffer(c.width*c.height*4*3),t=new Float32Array(B);for(;d>0;){if(X=C[k++],V=C[k++],R=C[k++],p=C[k++],2!=X||2!=V||128&R||c.width<8||c.width>32767)return j(C,c);if((R<<8|p)!=b)throw"HDR Bad header format, wrong scan line width";for(Z=0,A=0;A<4;A++)for(U=(A+1)*b;Z<U;)if(X=C[k++],V=C[k++],X>128){if(g=X-128,0==g||g>U-Z)throw"HDR Bad Format, bad scanline data (run)";for(;g-- >0;)q[Z++]=V}else{if(g=X,0==g||g>U-Z)throw"HDR Bad Format, bad scanline data (non-run)";if(q[Z++]=V,--g>0)for(let c=0;c<g;c++)q[Z++]=C[k++]}for(A=0;A<b;A++)X=q[A],V=q[A+b],R=q[A+2*b],p=q[A+3*b],P(t,X,V,R,p,(c.height-d)*b*3+3*A);d--}return t}(C,c)}function j(C,c){let d=c.height;const b=c.width;let X,V,R,p,j,g=c.dataPosition;const k=new ArrayBuffer(c.width*c.height*4*3),Z=new Float32Array(k);for(;d>0;){for(j=0;j<c.width;j++)X=C[g++],V=C[g++],R=C[g++],p=C[g++],P(Z,X,V,R,p,(c.height-d)*b*3+3*j);d--}return Z}X.FACE_LEFT=[new b.dd(-1,-1,-1),new b.dd(1,-1,-1),new b.dd(-1,1,-1),new b.dd(1,1,-1)],X.FACE_RIGHT=[new b.dd(1,-1,1),new b.dd(-1,-1,1),new b.dd(1,1,1),new b.dd(-1,1,1)],X.FACE_FRONT=[new b.dd(1,-1,-1),new b.dd(1,-1,1),new b.dd(1,1,-1),new b.dd(1,1,1)],X.FACE_BACK=[new b.dd(-1,-1,1),new b.dd(-1,-1,-1),new b.dd(-1,1,1),new b.dd(-1,1,-1)],X.FACE_DOWN=[new b.dd(1,1,-1),new b.dd(1,1,1),new b.dd(-1,1,-1),new b.dd(-1,1,1)],X.FACE_UP=[new b.dd(-1,-1,-1),new b.dd(-1,-1,1),new b.dd(1,-1,-1),new b.dd(1,-1,1)];class g{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(C,c,d){const b=new Uint8Array(C.buffer,C.byteOffset,C.byteLength),X=R(b),P=p(b,X),V=X.width*X.height,j=new Float32Array(4*V);for(let R=0;R<V;R+=1)j[4*R]=P[3*R],j[4*R+1]=P[3*R+1],j[4*R+2]=P[3*R+2],j[4*R+3]=1;d(X.width,X.height,c.generateMipMaps,!1,(()=>{const C=c.getEngine();c.type=1,c.format=5,c._gammaSpace=!1,C._uploadDataToTextureDirectly(c,j)}))}}}}]);