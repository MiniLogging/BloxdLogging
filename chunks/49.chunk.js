"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[49],{13634:(W,F,c)=>{c.r(F),c.d(F,{AnimationGroup:()=>E,TargetedAnimation:()=>I});var T=c(12409),Y=c(511),Z=c(543),w=c(656),A=c(12402),u=c(694);class s{get currentFrame(){return this._currentFrame}get weight(){return this._weight}get currentValue(){return this._currentValue}get targetPath(){return this._targetPath}get target(){return this._currentActiveTarget}get isAdditive(){return this._host&&this._host.isAdditive}constructor(W,F,c,Y){if(this._events=new Array,this._currentFrame=0,this._originalValue=new Array,this._originalBlendValue=null,this._offsetsCache={},this._highLimitsCache={},this._stopped=!1,this._blendingFactor=0,this._currentValue=null,this._currentActiveTarget=null,this._directTarget=null,this._targetPath="",this._weight=1,this._absoluteFrameOffset=0,this._previousElapsedTime=0,this._yoyoDirection=1,this._previousAbsoluteFrame=0,this._targetIsArray=!1,this._coreRuntimeAnimation=null,this._animation=F,this._target=W,this._scene=c,this._host=Y,this._activeTargets=[],F._runtimeAnimations.push(this),this._animationState={key:0,repeatCount:0,loopMode:this._getCorrectLoopMode()},this._animation.dataType===T.d.ANIMATIONTYPE_MATRIX&&(this._animationState.workValue=u.b.Zero()),this._keys=this._animation.getKeys(),this._minFrame=this._keys[0].frame,this._maxFrame=this._keys[this._keys.length-1].frame,this._minValue=this._keys[0].value,this._maxValue=this._keys[this._keys.length-1].value,0!==this._minFrame){const W={frame:0,value:this._minValue};this._keys.splice(0,0,W)}if(this._target instanceof Array){let W=0;for(const F of this._target)this._preparePath(F,W),this._getOriginalValues(W),W++;this._targetIsArray=!0}else this._preparePath(this._target),this._getOriginalValues(),this._targetIsArray=!1,this._directTarget=this._activeTargets[0];const Z=F.getEvents();if(Z&&Z.length>0)for(const T of Z)this._events.push(T._clone());this._enableBlending=W&&W.animationPropertiesOverride?W.animationPropertiesOverride.enableBlending:this._animation.enableBlending}_preparePath(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const c=this._animation.targetPropertyPath;if(c.length>1){let T=W;for(let W=0;W<c.length-1;W++){const F=c[W];if(T=T[F],void 0===T)throw new Error(`Invalid property (${F}) in property path (${c.join(".")})`)}this._targetPath=c[c.length-1],this._activeTargets[F]=T}else this._targetPath=c[0],this._activeTargets[F]=W;if(void 0===this._activeTargets[F][this._targetPath])throw new Error(`Invalid property (${this._targetPath}) in property path (${c.join(".")})`)}get animation(){return this._animation}reset(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])if(this._target instanceof Array){let W=0;for(const F of this._target)void 0!==this._originalValue[W]&&this._setValue(F,this._activeTargets[W],this._originalValue[W],-1,W),W++}else void 0!==this._originalValue[0]&&this._setValue(this._target,this._directTarget,this._originalValue[0],-1,0);this._offsetsCache={},this._highLimitsCache={},this._currentFrame=0,this._blendingFactor=0;for(let W=0;W<this._events.length;W++)this._events[W].isDone=!1}isStopped(){return this._stopped}dispose(){const W=this._animation.runtimeAnimations.indexOf(this);W>-1&&this._animation.runtimeAnimations.splice(W,1)}setValue(W,F){if(this._targetIsArray)for(let c=0;c<this._target.length;c++){const T=this._target[c];this._setValue(T,this._activeTargets[c],W,F,c)}else this._setValue(this._target,this._directTarget,W,F,0)}_getOriginalValues(){let W,F=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const c=this._activeTargets[F];W=c.getLocalMatrix&&"_matrix"===this._targetPath?c.getLocalMatrix():c[this._targetPath],W&&W.clone?this._originalValue[F]=W.clone():this._originalValue[F]=W}_registerTargetForLateAnimationBinding(W,F){const c=W.target;this._scene._registeredForLateAnimationBindings.pushNoDuplicate(c),c._lateAnimationHolders||(c._lateAnimationHolders={}),c._lateAnimationHolders[W.targetPath]||(c._lateAnimationHolders[W.targetPath]={totalWeight:0,totalAdditiveWeight:0,animations:[],additiveAnimations:[],originalValue:F}),W.isAdditive?(c._lateAnimationHolders[W.targetPath].additiveAnimations.push(W),c._lateAnimationHolders[W.targetPath].totalAdditiveWeight+=W.weight):(c._lateAnimationHolders[W.targetPath].animations.push(W),c._lateAnimationHolders[W.targetPath].totalWeight+=W.weight)}_setValue(W,F,c,Y,Z){if(this._currentActiveTarget=F,this._weight=Y,this._enableBlending&&this._blendingFactor<=1){if(!this._originalBlendValue){const W=F[this._targetPath];W.clone?this._originalBlendValue=W.clone():this._originalBlendValue=W}this._originalBlendValue.m?T.d.AllowMatrixDecomposeForInterpolation?this._currentValue?u.b.DecomposeLerpToRef(this._originalBlendValue,c,this._blendingFactor,this._currentValue):this._currentValue=u.b.DecomposeLerp(this._originalBlendValue,c,this._blendingFactor):this._currentValue?u.b.LerpToRef(this._originalBlendValue,c,this._blendingFactor,this._currentValue):this._currentValue=u.b.Lerp(this._originalBlendValue,c,this._blendingFactor):this._currentValue=T.d._UniversalLerp(this._originalBlendValue,c,this._blendingFactor);const Y=W&&W.animationPropertiesOverride?W.animationPropertiesOverride.blendingSpeed:this._animation.blendingSpeed;this._blendingFactor+=Y}else this._currentValue?this._currentValue.p?this._currentValue.p(c):this._currentValue=c:null!==c&&void 0!==c&&c.clone?this._currentValue=c.clone():this._currentValue=c;-1!==Y?this._registerTargetForLateAnimationBinding(this,this._originalValue[Z]):this._animationState.loopMode===T.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT?this._currentValue.addToRef?this._currentValue.addToRef(this._originalValue[Z],F[this._targetPath]):F[this._targetPath]=this._originalValue[Z]+this._currentValue:F[this._targetPath]=this._currentValue,W.Oi&&W.Oi(this._animation.targetProperty)}_getCorrectLoopMode(){return this._target&&this._target.animationPropertiesOverride?this._target.animationPropertiesOverride.loopMode:this._animation.loopMode}goToFrame(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const c=this._animation.getKeys();W<c[0].frame?W=c[0].frame:W>c[c.length-1].frame&&(W=c[c.length-1].frame);const T=this._events;if(T.length)for(let Z=0;Z<T.length;Z++)T[Z].onlyOnce||(T[Z].isDone=T[Z].frame<W);this._currentFrame=W;const Y=this._animation._interpolate(W,this._animationState);this.setValue(Y,F)}_prepareForSpeedRatioChange(W){const F=this._previousElapsedTime*(this._animation.framePerSecond*W)/1e3;this._absoluteFrameOffset=this._previousAbsoluteFrame-F}animate(W,F,c,Y,Z){let w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:-1;const A=this._animation,u=A.targetPropertyPath;if(!u||u.length<1)return this._stopped=!0,!1;let s,x=!0;const j=this._events;let N=0;if(this._coreRuntimeAnimation)N=c-F,s=this._coreRuntimeAnimation.currentFrame,this._currentFrame=s,this._animationState.repeatCount=this._coreRuntimeAnimation._animationState.repeatCount,this._animationState.highLimitValue=this._coreRuntimeAnimation._animationState.highLimitValue,this._animationState.offsetValue=this._coreRuntimeAnimation._animationState.offsetValue;else{let w;(F<this._minFrame||F>this._maxFrame)&&(F=this._minFrame),(c<this._minFrame||c>this._maxFrame)&&(c=this._maxFrame),N=c-F;let u=W*(A.framePerSecond*Z)/1e3+this._absoluteFrameOffset,q=0,y=!1;const i=Y&&this._animationState.loopMode===T.d.ANIMATIONLOOPMODE_YOYO;if(i){const W=(u-F)/N,c=Math.sin(W*Math.PI);u=Math.abs(c)*N+F;const T=c>=0?1:-1;this._yoyoDirection!==T&&(y=!0),this._yoyoDirection=T}if(this._previousElapsedTime=W,this._previousAbsoluteFrame=u,!Y&&c>=F&&(u>=N&&Z>0||u<=0&&Z<0))x=!1,q=A._getKeyValue(this._maxValue);else if(!Y&&F>=c&&(u<=N&&Z<0||u>=0&&Z>0))x=!1,q=A._getKeyValue(this._minValue);else if(this._animationState.loopMode!==T.d.ANIMATIONLOOPMODE_CYCLE){const W=c.toString()+F.toString();if(!this._offsetsCache[W]){this._animationState.repeatCount=0,this._animationState.loopMode=T.d.ANIMATIONLOOPMODE_CYCLE;const Y=A._interpolate(F,this._animationState),Z=A._interpolate(c,this._animationState);switch(this._animationState.loopMode=this._getCorrectLoopMode(),A.dataType){case T.d.ANIMATIONTYPE_FLOAT:this._offsetsCache[W]=Z-Y;break;case T.d.ANIMATIONTYPE_QUATERNION:case T.d.ANIMATIONTYPE_VECTOR3:case T.d.ANIMATIONTYPE_VECTOR2:case T.d.ANIMATIONTYPE_SIZE:case T.d.ANIMATIONTYPE_COLOR3:this._offsetsCache[W]=Z.Bg(Y)}this._highLimitsCache[W]=Z}q=this._highLimitsCache[W],w=this._offsetsCache[W]}if(void 0===w)switch(A.dataType){case T.d.ANIMATIONTYPE_FLOAT:w=0;break;case T.d.ANIMATIONTYPE_QUATERNION:w=T.o;break;case T.d.ANIMATIONTYPE_VECTOR3:w=T.u;break;case T.d.ANIMATIONTYPE_VECTOR2:w=T.r;break;case T.d.ANIMATIONTYPE_SIZE:w=T.p;break;case T.d.ANIMATIONTYPE_COLOR3:w=T.h;break;case T.d.ANIMATIONTYPE_COLOR4:w=T.l}if(this._host&&this._host.syncRoot){const W=this._host.syncRoot;s=F+N*((W.masterFrame-W.fromFrame)/(W.toFrame-W.fromFrame))}else s=u>0&&F>c||u<0&&F<c?x&&0!==N?c+u%N:F:x&&0!==N?F+u%N:c;if(!i&&(Z>0&&this.currentFrame>s||Z<0&&this.currentFrame<s)||i&&y){this._onLoop();for(let W=0;W<j.length;W++)j[W].onlyOnce||(j[W].isDone=!1);this._animationState.key=Z>0?0:A.getKeys().length-1}this._currentFrame=s,this._animationState.repeatCount=0===N?0:u/N|0,this._animationState.highLimitValue=q,this._animationState.offsetValue=w}const q=A._interpolate(s,this._animationState);if(this.setValue(q,w),j.length)for(let T=0;T<j.length;T++)if(N>=0&&s>=j[T].frame&&j[T].frame>=F||N<0&&s<=j[T].frame&&j[T].frame<=F){const W=j[T];W.isDone||(W.onlyOnce&&(j.splice(T,1),T--),W.isDone=!0,W.action(s))}return x||(this._stopped=!0),x}}var x=c(530);class j{get syncRoot(){return this._syncRoot}get masterFrame(){return 0===this._runtimeAnimations.length?0:this._runtimeAnimations[0].currentFrame}get weight(){return this._weight}set weight(W){this._weight=-1!==W?Math.min(Math.max(W,0),1):-1}get speedRatio(){return this._speedRatio}set speedRatio(W){for(let F=0;F<this._runtimeAnimations.length;F++){this._runtimeAnimations[F]._prepareForSpeedRatioChange(W)}this._speedRatio=W,null!==this._goToFrame&&this.goToFrame(this._goToFrame)}get elapsedTime(){return null===this._localDelayOffset?0:this._scene._animationTime-this._localDelayOffset}constructor(W,F){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,Z=arguments.length>4&&void 0!==arguments[4]&&arguments[4],w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,A=arguments.length>6?arguments[6]:void 0,u=arguments.length>7?arguments[7]:void 0,s=arguments.length>8?arguments[8]:void 0,x=arguments.length>9&&void 0!==arguments[9]&&arguments[9],j=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0;this.target=F,this.fromFrame=c,this.toFrame=T,this.loopAnimation=Z,this.onAnimationEnd=A,this.onAnimationLoop=s,this.isAdditive=x,this.playOrder=j,this._localDelayOffset=null,this._pausedDelay=null,this._manualJumpDelay=null,this._runtimeAnimations=new Array,this.Nk=!1,this._speedRatio=1,this._weight=-1,this._previousWeight=-1,this._syncRoot=null,this._frameToSyncFromJump=null,this._goToFrame=null,this.disposeOnEnd=!0,this.animationStarted=!1,this.onAnimationEndObservable=new Y.b,this.onAnimationLoopObservable=new Y.b,this._scene=W,u&&this.appendAnimations(F,u),this._speedRatio=w,W._activeAnimatables.push(this)}syncWith(W){if(this._syncRoot=W,W){const W=this._scene._activeAnimatables.indexOf(this);W>-1&&(this._scene._activeAnimatables.splice(W,1),this._scene._activeAnimatables.push(this))}return this}getAnimations(){return this._runtimeAnimations}appendAnimations(W,F){for(let c=0;c<F.length;c++){const T=F[c],Y=new s(W,T,this._scene,this);Y._onLoop=()=>{this.onAnimationLoopObservable.notifyObservers(this),this.onAnimationLoop&&this.onAnimationLoop()},this._runtimeAnimations.push(Y)}}getAnimationByTargetProperty(W){const F=this._runtimeAnimations;for(let c=0;c<F.length;c++)if(F[c].animation.targetProperty===W)return F[c].animation;return null}getRuntimeAnimationByTargetProperty(W){const F=this._runtimeAnimations;for(let c=0;c<F.length;c++)if(F[c].animation.targetProperty===W)return F[c];return null}reset(){const W=this._runtimeAnimations;for(let F=0;F<W.length;F++)W[F].reset(!0);this._localDelayOffset=null,this._pausedDelay=null}enableBlending(W){const F=this._runtimeAnimations;for(let c=0;c<F.length;c++)F[c].animation.enableBlending=!0,F[c].animation.blendingSpeed=W}disableBlending(){const W=this._runtimeAnimations;for(let F=0;F<W.length;F++)W[F].animation.enableBlending=!1}goToFrame(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const c=this._runtimeAnimations;if(c[0]){const F=c[0].animation.framePerSecond;this._frameToSyncFromJump=this._frameToSyncFromJump??c[0].currentFrame;const T=0===this.speedRatio?0:(W-this._frameToSyncFromJump)/F*1e3/this.speedRatio;this._manualJumpDelay=-T}for(let T=0;T<c.length;T++)c[T].goToFrame(W,F?this._weight:-1);this._goToFrame=W}get paused(){return this.Nk}pause(){this.Nk||(this.Nk=!0)}restart(){this.Nk=!1}_raiseOnAnimationEnd(){this.onAnimationEnd&&this.onAnimationEnd(),this.onAnimationEndObservable.notifyObservers(this)}stop(W,F){let c=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(W||F){const Y=this._scene._activeAnimatables.indexOf(this);if(Y>-1){const Z=this._runtimeAnimations;for(let c=Z.length-1;c>=0;c--){const T=Z[c];W&&T.animation.name!=W||(F&&!F(T.target)||(T.dispose(),Z.splice(c,1)))}0==Z.length&&(c||this._scene._activeAnimatables.splice(Y,1),T||this._raiseOnAnimationEnd())}}else{const W=this._scene._activeAnimatables.indexOf(this);if(W>-1){c||this._scene._activeAnimatables.splice(W,1);const F=this._runtimeAnimations;for(let W=0;W<F.length;W++)F[W].dispose();this._runtimeAnimations.length=0,T||this._raiseOnAnimationEnd()}}}async waitAsync(){return await new Promise((W=>{this.onAnimationEndObservable.add((()=>{W(this)}),void 0,void 0,this,!0)}))}_animate(W){if(this.Nk)return this.animationStarted=!1,null===this._pausedDelay&&(this._pausedDelay=W),!0;if(null===this._localDelayOffset?(this._localDelayOffset=W,this._pausedDelay=null):null!==this._pausedDelay&&(this._localDelayOffset+=W-this._pausedDelay,this._pausedDelay=null),null!==this._manualJumpDelay&&(this._localDelayOffset+=this.speedRatio<0?-this._manualJumpDelay:this._manualJumpDelay,this._manualJumpDelay=null,this._frameToSyncFromJump=null),this._goToFrame=null,0===this._weight&&0===this._previousWeight)return!0;this._previousWeight=this._weight;let F=!1;const c=this._runtimeAnimations;let T;for(T=0;T<c.length;T++){const Y=c[T].animate(W-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this._speedRatio,this._weight);F=F||Y}if(this.animationStarted=F,!F){if(this.disposeOnEnd)for(T=this._scene._activeAnimatables.indexOf(this),this._scene._activeAnimatables.splice(T,1),T=0;T<c.length;T++)c[T].dispose();this._raiseOnAnimationEnd(),this.disposeOnEnd&&(this.onAnimationEnd=null,this.onAnimationLoop=null,this.onAnimationLoopObservable.clear(),this.onAnimationEndObservable.clear())}return F}}function N(W){if(0===W.totalWeight&&0===W.totalAdditiveWeight)return W.originalValue;let F=1;const c=u.g.oi[0],T=u.g.oi[1],Y=u.g.Quaternion[0];let Z=0;const w=W.animations[0],A=W.originalValue;let s=1,x=!1;if(W.totalWeight<1)s=1-W.totalWeight,A.decompose(T,Y,c);else{if(Z=1,F=W.totalWeight,s=w.weight/F,1==s){if(!W.totalAdditiveWeight)return w.currentValue;x=!0}w.currentValue.decompose(T,Y,c)}if(!x){T.scaleInPlace(s),c.scaleInPlace(s),Y.scaleInPlace(s);for(let w=Z;w<W.animations.length;w++){const Z=W.animations[w];if(0===Z.weight)continue;s=Z.weight/F;const A=u.g.oi[2],x=u.g.oi[3],j=u.g.Quaternion[1];Z.currentValue.decompose(x,j,A),x.scaleAndAddToRef(s,T),j.scaleAndAddToRef(u.e.Dot(Y,j)>0?s:-s,Y),A.scaleAndAddToRef(s,c)}Y.normalize()}for(let N=0;N<W.additiveAnimations.length;N++){const F=W.additiveAnimations[N];if(0===F.weight)continue;const Z=u.g.oi[2],w=u.g.oi[3],A=u.g.Quaternion[1];F.currentValue.decompose(w,A,Z),w.multiplyToRef(T,w),u.l.LerpToRef(T,w,F.weight,T),Y.multiplyToRef(A,A),u.e.SlerpToRef(Y,A,F.weight,Y),Z.scaleAndAddToRef(F.weight,c)}const j=w?w._animationState.workValue:u.g.Matrix[0].clone();return u.b.ComposeToRef(T,Y,c,j),j}function q(W,F){if(0===W.totalWeight&&0===W.totalAdditiveWeight)return F;const c=W.animations[0],T=W.originalValue;let Y=F;if(0===W.totalWeight&&W.totalAdditiveWeight>0)Y.p(T);else if(1===W.animations.length){if(u.e.SlerpToRef(T,c.currentValue,Math.min(1,W.totalWeight),Y),0===W.totalAdditiveWeight)return Y}else if(W.animations.length>1){let c,Z,w=1;if(W.totalWeight<1){const F=1-W.totalWeight;c=[],Z=[],c.push(T),Z.push(F)}else{if(2===W.animations.length&&(u.e.SlerpToRef(W.animations[0].currentValue,W.animations[1].currentValue,W.animations[1].weight/W.totalWeight,F),0===W.totalAdditiveWeight))return F;c=[],Z=[],w=W.totalWeight}for(let F=0;F<W.animations.length;F++){const T=W.animations[F];c.push(T.currentValue),Z.push(T.weight/w)}let A=0;for(let W=0;W<c.length;)W?(A+=Z[W],u.e.SlerpToRef(Y,c[W],Z[W]/A,Y),W++):(u.e.SlerpToRef(c[W],c[W+1],Z[W+1]/(Z[W]+Z[W+1]),F),Y=F,A=Z[W]+Z[W+1],W+=2)}for(let Z=0;Z<W.additiveAnimations.length;Z++){const F=W.additiveAnimations[Z];0!==F.weight&&(Y.multiplyToRef(F.currentValue,u.g.Quaternion[0]),u.e.SlerpToRef(Y,u.g.Quaternion[0],F.weight,Y))}return Y}var y,i,e=c(2486);y=e.b,(i=A.c)&&(i.prototype.copyAnimationRange=function(W,F,c){let Y=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;0===this.animations.length&&(this.animations.push(new T.d(this.name,"_matrix",W.animations[0].framePerSecond,T.d.ANIMATIONTYPE_MATRIX,0)),this.animations[0].setKeys([]));const w=W.animations[0].getRange(F);if(!w)return!1;const A=w.from,u=w.to,s=W.animations[0].getKeys(),x=W.length,j=W.getParent(),N=this.getParent(),q=Y&&j&&x&&this.length&&x!==this.length,y=q&&N&&j?N.length/j.length:1,i=Y&&!N&&Z&&(1!==Z.x||1!==Z.y||1!==Z.z),e=this.animations[0].getKeys();let I,E,O;for(let T=0,z=s.length;T<z;T++)I=s[T],I.frame>=A&&I.frame<=u&&(Y?(O=I.value.clone(),q?(E=O.getTranslation(),O.setTranslation(E.scaleInPlace(y))):i&&Z?(E=O.getTranslation(),O.setTranslation(E.multiplyInPlace(Z))):O=I.value):O=I.value,e.push({frame:I.frame+c,value:O}));return this.animations[0].createRange(F,A+c,u+c),!0}),y&&(y.prototype._animate=function(W){if(!this.animationsEnabled)return;const F=x.d.Now;if(!this._animationTimeLast){if(this._pendingData.length>0)return;this._animationTimeLast=F}this.deltaTime=void 0!==W?W:this.useConstantAnimationDeltaTime?16:(F-this._animationTimeLast)*this.animationTimeScale,this._animationTimeLast=F;const c=this._activeAnimatables;if(0===c.length)return;this._animationTime+=this.deltaTime;const Y=this._animationTime;for(let T=0;T<c.length;T++){const W=c[T];!W._animate(Y)&&W.disposeOnEnd&&T--}!function(W){if(W._registeredForLateAnimationBindings.length){for(let F=0;F<W._registeredForLateAnimationBindings.length;F++){const c=W._registeredForLateAnimationBindings.data[F];for(const W in c._lateAnimationHolders){const F=c._lateAnimationHolders[W],Y=F.animations[0],Z=F.originalValue;if(void 0===Z||null===Z)continue;const w=T.d.AllowMatrixDecomposeForInterpolation&&Z.m;let A=c[W];if(w)A=N(F);else if(void 0!==Z.w)A=q(F,A||u.e.Identity());else{let W=0,c=1;const w=Y&&Y._animationState.loopMode===T.d.ANIMATIONLOOPMODE_RELATIVE_FROM_CURRENT;if(F.totalWeight<1)A=w?Z.clone?Z.clone():Z:Y&&Z.scale?Z.scale(1-F.totalWeight):Y?Z*(1-F.totalWeight):Z.clone?Z.clone():Z;else if(Y){c=F.totalWeight;const T=Y.weight/c;A=1!==T?Y.currentValue.scale?Y.currentValue.scale(T):Y.currentValue*T:Y.currentValue,w&&(A.addToRef?A.addToRef(Z,A):A+=Z),W=1}for(let T=W;T<F.animations.length;T++){const W=F.animations[T],Y=W.weight/c;Y&&(W.currentValue.scaleAndAddToRef?W.currentValue.scaleAndAddToRef(Y,A):A+=W.currentValue*Y)}for(let T=0;T<F.additiveAnimations.length;T++){const W=F.additiveAnimations[T],c=W.weight;c&&(W.currentValue.scaleAndAddToRef?W.currentValue.scaleAndAddToRef(c,A):A+=W.currentValue*c)}}c[W]=A}c._lateAnimationHolders={}}W._registeredForLateAnimationBindings.reset()}}(this)},y.prototype.sortActiveAnimatables=function(){this._activeAnimatables.sort(((W,F)=>W.playOrder-F.playOrder))},y.prototype.beginWeightedAnimation=function(W,F,c){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,Y=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,A=arguments.length>7?arguments[7]:void 0,u=arguments.length>8?arguments[8]:void 0,s=arguments.length>9?arguments[9]:void 0,x=arguments.length>10&&void 0!==arguments[10]&&arguments[10];const j=this.beginAnimation(W,F,c,Y,Z,w,A,!1,u,s,x);return j.weight=T,j},y.prototype.beginAnimation=function(W,F,c,T){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,Z=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0,A=!(arguments.length>7&&void 0!==arguments[7])||arguments[7],u=arguments.length>8?arguments[8]:void 0,s=arguments.length>9?arguments[9]:void 0,x=arguments.length>10&&void 0!==arguments[10]&&arguments[10];if(Y<0){const W=F;F=c,c=W,Y=-Y}F>c&&(Y=-Y),A&&this.stopAnimation(W,void 0,u),w||(w=new j(this,W,F,c,T,Y,Z,void 0,s,x));const N=!u||u(W);if(W.animations&&N&&w.appendAnimations(W,W.animations),W.getAnimatables){const x=W.getAnimatables();for(let W=0;W<x.length;W++)this.beginAnimation(x[W],F,c,T,Y,Z,w,A,u,s)}return w.reset(),w},y.prototype.beginHierarchyAnimation=function(W,F,c,T,Y){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,w=arguments.length>6?arguments[6]:void 0,A=arguments.length>7?arguments[7]:void 0,u=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],s=arguments.length>9?arguments[9]:void 0,x=arguments.length>11&&void 0!==arguments[11]&&arguments[11];const j=W.getDescendants(F),N=[];N.push(this.beginAnimation(W,c,T,Y,Z,w,A,u,s,void 0,x));for(const q of j)N.push(this.beginAnimation(q,c,T,Y,Z,w,A,u,s,void 0,x));return N},y.prototype.beginDirectAnimation=function(W,F,c,T,Y){let Z=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;if(Z<0){const W=c;c=T,T=W,Z=-Z}return c>T&&(Z=-Z),new j(this,W,c,T,Y,Z,arguments.length>6?arguments[6]:void 0,F,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]&&arguments[8])},y.prototype.beginDirectHierarchyAnimation=function(W,F,c,T,Y,Z,w,A,u){let s=arguments.length>9&&void 0!==arguments[9]&&arguments[9];const x=W.getDescendants(F),j=[];j.push(this.beginDirectAnimation(W,c,T,Y,Z,w,A,u,s));for(const N of x)j.push(this.beginDirectAnimation(N,c,T,Y,Z,w,A,u,s));return j},y.prototype.getAnimatableByTarget=function(W){for(let F=0;F<this._activeAnimatables.length;F++)if(this._activeAnimatables[F].target===W)return this._activeAnimatables[F];return null},y.prototype.getAllAnimatablesByTarget=function(W){const F=[];for(let c=0;c<this._activeAnimatables.length;c++)this._activeAnimatables[c].target===W&&F.push(this._activeAnimatables[c]);return F},y.prototype.stopAnimation=function(W,F,c){const T=this.getAllAnimatablesByTarget(W);for(const Y of T)Y.stop(F,c)},y.prototype.stopAllAnimations=function(){if(this._activeAnimatables){for(let W=0;W<this._activeAnimatables.length;W++)this._activeAnimatables[W].stop(void 0,void 0,!0);this._activeAnimatables.length=0}for(const W of this.animationGroups)W.stop()});class I{getClassName(){return"TargetedAnimation"}serialize(){const W={};return W.animation=this.animation.serialize(),W.targetId=this.target.id,W}}class E{get mask(){return this._mask}set mask(W){this._mask!==W&&(this._mask=W,this.syncWithMask(!0))}syncWithMask(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.mask||W){this._numActiveAnimatables=0;for(let W=0;W<this._animatables.length;++W){const F=this._animatables[W];!this.mask||this.mask.disabled||this.mask.retainsTarget(F.target.name)?(this._numActiveAnimatables++,F.paused&&F.restart()):F.paused||F.pause()}}else this._numActiveAnimatables=this._targetedAnimations.length}removeUnmaskedAnimations(){if(this.mask&&!this.mask.disabled){for(let W=0;W<this._animatables.length;++W){const F=this._animatables[W];this.mask.retainsTarget(F.target.name)||(F.stop(),this._animatables.splice(W,1),--W)}for(let W=0;W<this._targetedAnimations.length;W++){const F=this._targetedAnimations[W];this.mask.retainsTarget(F.target.name)||(this._targetedAnimations.splice(W,1),--W)}}}get from(){return this._from}set from(W){if(this._from!==W){this._from=W;for(let W=0;W<this._animatables.length;W++){this._animatables[W].fromFrame=this._from}}}get to(){return this._to}set to(W){if(this._to!==W){this._to=W;for(let W=0;W<this._animatables.length;W++){this._animatables[W].toFrame=this._to}}}get isStarted(){return this._isStarted}get isPlaying(){return this._isStarted&&!this._isPaused}get speedRatio(){return this._speedRatio}set speedRatio(W){if(this._speedRatio!==W){this._speedRatio=W;for(let W=0;W<this._animatables.length;W++){this._animatables[W].speedRatio=this._speedRatio}}}get loopAnimation(){return this._loopAnimation}set loopAnimation(W){if(this._loopAnimation!==W){this._loopAnimation=W;for(let W=0;W<this._animatables.length;W++){this._animatables[W].loopAnimation=this._loopAnimation}}}get isAdditive(){return this._isAdditive}set isAdditive(W){if(this._isAdditive!==W){this._isAdditive=W;for(let W=0;W<this._animatables.length;W++){this._animatables[W].isAdditive=this._isAdditive}}}get weight(){return this._weight}set weight(W){this._weight!==W&&(this._weight=W,this.setWeightForAllAnimatables(this._weight))}get targetedAnimations(){return this._targetedAnimations}get animatables(){return this._animatables}get children(){return this._targetedAnimations}get playOrder(){return this._playOrder}set playOrder(W){if(this._playOrder!==W&&(this._playOrder=W,this._animatables.length>0)){for(let W=0;W<this._animatables.length;W++)this._animatables[W].playOrder=this._playOrder;this._scene.sortActiveAnimatables()}}get enableBlending(){return this._enableBlending}set enableBlending(W){if(this._enableBlending!==W&&(this._enableBlending=W,null!==W))for(let F=0;F<this._targetedAnimations.length;++F)this._targetedAnimations[F].animation.enableBlending=W}get blendingSpeed(){return this._blendingSpeed}set blendingSpeed(W){if(this._blendingSpeed!==W&&(this._blendingSpeed=W,null!==W))for(let F=0;F<this._targetedAnimations.length;++F)this._targetedAnimations[F].animation.blendingSpeed=W}getLength(W,F){W=W??this._from;return((F=F??this._to)-W)/(this.targetedAnimations[0].animation.framePerSecond*this._speedRatio)}static MergeAnimationGroups(W){let F=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],c=arguments.length>2&&void 0!==arguments[2]&&arguments[2],T=arguments.length>3?arguments[3]:void 0;if(0===W.length)return null;T=T??W[0].weight;let Y=Number.MAX_VALUE,Z=-Number.MAX_VALUE;if(c)for(const A of W)A.from<Y&&(Y=A.from),A.to>Z&&(Z=A.to);const w=new E(W[0].name+"_merged",W[0]._scene,T);for(const A of W){c&&A.normalize(Y,Z);for(const W of A.targetedAnimations)w.addTargetedAnimation(W.animation,W.target);F&&A.dispose()}return w}constructor(W){let F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1,T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.name=W,this._targetedAnimations=new Array,this._animatables=new Array,this._from=Number.MAX_VALUE,this._to=-Number.MAX_VALUE,this._speedRatio=1,this._loopAnimation=!1,this._isAdditive=!1,this._weight=-1,this._playOrder=0,this._enableBlending=null,this._blendingSpeed=null,this._numActiveAnimatables=0,this._shouldStart=!0,this._parentContainer=null,this.onAnimationEndObservable=new Y.b,this.onAnimationLoopObservable=new Y.b,this.onAnimationGroupLoopObservable=new Y.b,this.onAnimationGroupEndObservable=new Y.b,this.onAnimationGroupPauseObservable=new Y.b,this.onAnimationGroupPlayObservable=new Y.b,this.metadata=null,this._mask=null,this._animationLoopFlags=[],this._scene=F||Z.e.LastCreatedScene,this._weight=c,this._playOrder=T,this.uniqueId=this._scene.getUniqueId(),this._scene.addAnimationGroup(this)}addTargetedAnimation(W,F){const c=new I;c.animation=W,c.target=F;const T=W.getKeys();return this._from>T[0].frame&&(this._from=T[0].frame),this._to<T[T.length-1].frame&&(this._to=T[T.length-1].frame),null!==this._enableBlending&&(W.enableBlending=this._enableBlending),null!==this._blendingSpeed&&(W.blendingSpeed=this._blendingSpeed),this._targetedAnimations.push(c),this._shouldStart=!0,c}removeTargetedAnimation(W){for(let F=this._targetedAnimations.length-1;F>-1;F--){this._targetedAnimations[F].animation===W&&this._targetedAnimations.splice(F,1)}}normalize(){let W=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;null==W&&(W=this._from),null==F&&(F=this._to);for(let c=0;c<this._targetedAnimations.length;c++){const T=this._targetedAnimations[c].animation.getKeys(),Y=T[0],Z=T[T.length-1];if(Y.frame>W){const F={frame:W,value:Y.value,inTangent:Y.inTangent,outTangent:Y.outTangent,interpolation:Y.interpolation};T.splice(0,0,F)}if(Z.frame<F){const W={frame:F,value:Z.value,inTangent:Z.inTangent,outTangent:Z.outTangent,interpolation:Z.interpolation};T.push(W)}}return this._from=W,this._to=F,this}_processLoop(W,F,c){W.onAnimationLoop=()=>{this.onAnimationLoopObservable.notifyObservers(F),this._animationLoopFlags[c]||(this._animationLoopFlags[c]=!0,this._animationLoopCount++,this._animationLoopCount===this._numActiveAnimatables&&(this.onAnimationGroupLoopObservable.notifyObservers(this),this._animationLoopCount=0,this._animationLoopFlags.length=0))}}start(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0],F=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,c=arguments.length>2?arguments[2]:void 0,T=arguments.length>3?arguments[3]:void 0,Y=arguments.length>4?arguments[4]:void 0;if(this._isStarted||0===this._targetedAnimations.length)return this;this._loopAnimation=W,this._shouldStart=!1,this._animationLoopCount=0,this._animationLoopFlags.length=0;for(let Z=0;Z<this._targetedAnimations.length;Z++){const w=this._targetedAnimations[Z],A=this._scene.beginDirectAnimation(w.target,[w.animation],void 0!==c?c:this._from,void 0!==T?T:this._to,W,F,void 0,void 0,void 0!==Y?Y:this._isAdditive);A.weight=this._weight,A.playOrder=this._playOrder,A.onAnimationEnd=()=>{this.onAnimationEndObservable.notifyObservers(w),this._checkAnimationGroupEnded(A)},this._processLoop(A,w,Z),this._animatables.push(A)}return this.syncWithMask(),this._scene.sortActiveAnimatables(),this._speedRatio=F,this._isStarted=!0,this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}pause(){if(!this._isStarted)return this;this._isPaused=!0;for(let W=0;W<this._animatables.length;W++){this._animatables[W].pause()}return this.onAnimationGroupPauseObservable.notifyObservers(this),this}play(W){return this.isStarted&&this._animatables.length&&!this._shouldStart?(void 0!==W&&(this.loopAnimation=W),this.restart()):(this.stop(),this.start(W,this._speedRatio)),this}reset(){if(!this._isStarted)return this.play(),this.goToFrame(0),this.stop(!0),this;for(let W=0;W<this._animatables.length;W++){this._animatables[W].reset()}return this}restart(){if(!this._isStarted)return this;for(let W=0;W<this._animatables.length;W++){this._animatables[W].restart()}return this.syncWithMask(),this._isPaused=!1,this.onAnimationGroupPlayObservable.notifyObservers(this),this}stop(){let W=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isStarted)return this;const F=this._animatables.slice();for(let T=0;T<F.length;T++)F[T].stop(void 0,void 0,!0,W);let c=0;for(let T=0;T<this._scene._activeAnimatables.length;T++){const F=this._scene._activeAnimatables[T];F._runtimeAnimations.length>0?this._scene._activeAnimatables[c++]=F:W&&this._checkAnimationGroupEnded(F,W)}return this._scene._activeAnimatables.length=c,this._isStarted=!1,this}setWeightForAllAnimatables(W){for(let F=0;F<this._animatables.length;F++){this._animatables[F].weight=W}return this}syncAllAnimationsWith(W){for(let F=0;F<this._animatables.length;F++){this._animatables[F].syncWith(W)}return this}goToFrame(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._isStarted)return this;for(let c=0;c<this._animatables.length;c++){this._animatables[c].goToFrame(W,F)}return this}getCurrentFrame(){var W;return(null===(W=this.animatables[0])||void 0===W?void 0:W.masterFrame)||0}dispose(){this.isStarted&&this.stop(),this._targetedAnimations.length=0,this._animatables.length=0;const W=this._scene.animationGroups.indexOf(this);if(W>-1&&this._scene.animationGroups.splice(W,1),this._parentContainer){const W=this._parentContainer.animationGroups.indexOf(this);W>-1&&this._parentContainer.animationGroups.splice(W,1),this._parentContainer=null}this.onAnimationEndObservable.clear(),this.onAnimationGroupEndObservable.clear(),this.onAnimationGroupPauseObservable.clear(),this.onAnimationGroupPlayObservable.clear(),this.onAnimationLoopObservable.clear(),this.onAnimationGroupLoopObservable.clear()}_checkAnimationGroupEnded(W){let F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const c=this._animatables.indexOf(W);c>-1&&this._animatables.splice(c,1),this._animatables.length===this._targetedAnimations.length-this._numActiveAnimatables&&(this._isStarted=!1,F||this.onAnimationGroupEndObservable.notifyObservers(this),this._animatables.length=0)}clone(W,F){let c=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const T=new E(W||this.name,this._scene,this._weight,this._playOrder);T._from=this.from,T._to=this.to,T._speedRatio=this.speedRatio,T._loopAnimation=this.loopAnimation,T._isAdditive=this.isAdditive,T._enableBlending=this.enableBlending,T._blendingSpeed=this.blendingSpeed,T.metadata=this.metadata,T.mask=this.mask;for(const Y of this._targetedAnimations)T.addTargetedAnimation(c?Y.animation.clone():Y.animation,F?F(Y.target):Y.target);return T}serialize(){const W={};W.name=this.name,W.from=this.from,W.to=this.to,W.speedRatio=this.speedRatio,W.loopAnimation=this.loopAnimation,W.isAdditive=this.isAdditive,W.weight=this.weight,W.playOrder=this.playOrder,W.enableBlending=this.enableBlending,W.blendingSpeed=this.blendingSpeed,W.targetedAnimations=[];for(let F=0;F<this.targetedAnimations.length;F++){const c=this.targetedAnimations[F];W.targetedAnimations[F]=c.serialize()}return w.d&&w.d.HasTags(this)&&(W.tags=w.d.GetTags(this)),this.metadata&&(W.metadata=this.metadata),W}static Parse(W,F){const c=new E(W.name,F,W.weight,W.playOrder);for(let Y=0;Y<W.targetedAnimations.length;Y++){const Z=W.targetedAnimations[Y],w=T.d.Parse(Z.animation),A=Z.targetId;if("influence"===Z.animation.property){const W=F.getMorphTargetById(A);W&&c.addTargetedAnimation(w,W)}else{const W=F.getNodeById(A);null!=W&&c.addTargetedAnimation(w,W)}}return w.d&&w.d.AddTagsTo(c,W.tags),null!==W.from&&null!==W.to&&c.normalize(W.from,W.to),void 0!==W.speedRatio&&(c._speedRatio=W.speedRatio),void 0!==W.loopAnimation&&(c._loopAnimation=W.loopAnimation),void 0!==W.isAdditive&&(c._isAdditive=W.isAdditive),void 0!==W.weight&&(c._weight=W.weight),void 0!==W.playOrder&&(c._playOrder=W.playOrder),void 0!==W.enableBlending&&(c._enableBlending=W.enableBlending),void 0!==W.blendingSpeed&&(c._blendingSpeed=W.blendingSpeed),void 0!==W.metadata&&(c.metadata=W.metadata),c}static MakeAnimationAdditive(W,F,c){let Y;Y="object"===typeof F?F:{referenceFrame:F,range:c,cloneOriginalAnimationGroup:arguments.length>3&&void 0!==arguments[3]&&arguments[3],clonedAnimationName:arguments.length>4?arguments[4]:void 0};let Z=W;Y.cloneOriginalAnimationGroup&&(Z=W.clone(Y.clonedAnimationGroupName||Z.name));const w=Z.targetedAnimations;for(let A=0;A<w.length;A++){const W=w[A];W.animation=T.d.MakeAnimationAdditive(W.animation,Y)}if(Z.isAdditive=!0,Y.clipKeys){let W=Number.MAX_VALUE,F=-Number.MAX_VALUE;const c=Z.targetedAnimations;for(let T=0;T<c.length;T++){const Y=c[T].animation.getKeys();W>Y[0].frame&&(W=Y[0].frame),F<Y[Y.length-1].frame&&(F=Y[Y.length-1].frame)}Z._from=W,Z._to=F}return Z}static ClipKeys(W,F,c,T,Y){const Z=W.clone(T||W.name);return E.ClipKeysInPlace(Z,F,c,Y)}static ClipKeysInPlace(W,F,c,T){return E.ClipInPlace(W,F,c,T,!1)}static ClipFrames(W,F,c,T,Y){const Z=W.clone(T||W.name);return E.ClipFramesInPlace(Z,F,c,Y)}static ClipFramesInPlace(W,F,c,T){return E.ClipInPlace(W,F,c,T,!0)}static ClipInPlace(W,F,c,T){let Y=arguments.length>4&&void 0!==arguments[4]&&arguments[4],Z=Number.MAX_VALUE,w=-Number.MAX_VALUE;const A=W.targetedAnimations;for(let u=0;u<A.length;u++){const W=A[u],s=T?W.animation:W.animation.clone();Y&&(s.createKeyForFrame(F),s.createKeyForFrame(c));const x=s.getKeys(),j=[];let N=Number.MAX_VALUE;for(let T=0;T<x.length;T++){const W=x[T];if(!Y&&T>=F&&T<=c||Y&&W.frame>=F&&W.frame<=c){const F={frame:W.frame,value:W.value.clone?W.value.clone():W.value,inTangent:W.inTangent,outTangent:W.outTangent,interpolation:W.interpolation,lockedTangent:W.lockedTangent};N===Number.MAX_VALUE&&(N=F.frame),F.frame-=N,j.push(F)}}0!==j.length?(Z>j[0].frame&&(Z=j[0].frame),w<j[j.length-1].frame&&(w=j[j.length-1].frame),s.setKeys(j,!0),W.animation=s):(A.splice(u,1),u--)}return W._from=Z,W._to=w,W}getClassName(){return"AnimationGroup"}toString(W){let F="Name: "+this.name;return F+=", type: "+this.getClassName(),W&&(F+=", from: "+this._from,F+=", to: "+this._to,F+=", isStarted: "+this._isStarted,F+=", speedRatio: "+this._speedRatio,F+=", targetedAnimations length: "+this._targetedAnimations.length,F+=", animatables length: "+this._animatables),F}}}}]);