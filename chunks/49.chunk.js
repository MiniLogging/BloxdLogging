"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[49],{14144:(e,E,H)=>{H.r(E),H.d(E,{_HDRTextureLoader:()=>C});var N=H(11738);class u{static ConvertPanoramaToCubemap(e,E,H,N){let u=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!e)throw"ConvertPanoramaToCubemap: input cannot be null";if(e.length!=E*H*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(N,this.FACE_FRONT,e,E,H,u),back:this.CreateCubemapTexture(N,this.FACE_BACK,e,E,H,u),left:this.CreateCubemapTexture(N,this.FACE_LEFT,e,E,H,u),right:this.CreateCubemapTexture(N,this.FACE_RIGHT,e,E,H,u),up:this.CreateCubemapTexture(N,this.FACE_UP,e,E,H,u),down:this.CreateCubemapTexture(N,this.FACE_DOWN,e,E,H,u),size:N,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(e,E,H,N,u){let z=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const P=new ArrayBuffer(e*e*4*3),M=new Float32Array(P),D=z?Math.max(1,Math.round(N/4/e)):1,A=1/D,C=A*A,i=E[1].FE(E[0]).scale(A/e),V=E[3].FE(E[2]).scale(A/e),U=1/e;let j=0;for(let F=0;F<e;F++)for(let z=0;z<D;z++){let z=E[0],P=E[2];for(let E=0;E<e;E++)for(let A=0;A<D;A++){const D=P.FE(z).scale(j).add(z);D.normalize();const A=this.CalcProjectionSpherical(D,H,N,u);M[F*e*3+3*E+0]+=A.r*C,M[F*e*3+3*E+1]+=A.g*C,M[F*e*3+3*E+2]+=A.b*C,z=z.add(i),P=P.add(V)}j+=U*A}return M}static CalcProjectionSpherical(e,E,H,N){let u=Math.atan2(e.z,e.x);const z=Math.acos(e.y);for(;u<-Math.PI;)u+=2*Math.PI;for(;u>Math.PI;)u-=2*Math.PI;let P=u/Math.PI;const M=z/Math.PI;P=.5*P+.5;let D=Math.round(P*H);D<0?D=0:D>=H&&(D=H-1);let A=Math.round(M*N);A<0?A=0:A>=N&&(A=N-1);const C=N-A-1;return{r:E[C*H*3+3*D+0],g:E[C*H*3+3*D+1],b:E[C*H*3+3*D+2]}}}function z(e,E,H,N,u,z){u>0?(u=function(e,E){return E>1023?e*Math.pow(2,1023)*Math.pow(2,E-1023):E<-1074?e*Math.pow(2,-1074)*Math.pow(2,E+1074):e*Math.pow(2,E)}(1,u-136),e[z+0]=E*u,e[z+1]=H*u,e[z+2]=N*u):(e[z+0]=0,e[z+1]=0,e[z+2]=0)}function P(e,E){let H="",N="";for(let u=E;u<e.length-E&&(N=String.fromCharCode(e[u]),"\n"!=N);u++)H+=N;return H}function M(e){let E=0,H=0,N=P(e,0);if("#"!=N[0]||"?"!=N[1])throw"Bad HDR Format.";let u=!1,z=!1,M=0;do{M+=N.length+1,N=P(e,M),"FORMAT=32-bit_rle_rgbe"==N?z=!0:0==N.length&&(u=!0)}while(!u);if(!z)throw"HDR Bad header format, unsupported FORMAT";M+=N.length+1,N=P(e,M);const D=/^-Y (.*) \+X (.*)$/g.exec(N);if(!D||D.length<3)throw"HDR Bad header format, no size";if(H=parseInt(D[2]),E=parseInt(D[1]),H<8||H>32767)throw"HDR Bad header format, unsupported size";return M+=N.length+1,{height:E,width:H,dataPosition:M}}function D(e,E){return function(e,E){let H=E.height;const N=E.width;let u,P,M,D,C,i=E.dataPosition,V=0,U=0,j=0;const F=new ArrayBuffer(4*N),h=new Uint8Array(F),S=new ArrayBuffer(E.width*E.height*4*3),X=new Float32Array(S);for(;H>0;){if(u=e[i++],P=e[i++],M=e[i++],D=e[i++],2!=u||2!=P||128&M||E.width<8||E.width>32767)return A(e,E);if((M<<8|D)!=N)throw"HDR Bad header format, wrong scan line width";for(V=0,j=0;j<4;j++)for(U=(j+1)*N;V<U;)if(u=e[i++],P=e[i++],u>128){if(C=u-128,0==C||C>U-V)throw"HDR Bad Format, bad scanline data (run)";for(;C-- >0;)h[V++]=P}else{if(C=u,0==C||C>U-V)throw"HDR Bad Format, bad scanline data (non-run)";if(h[V++]=P,--C>0)for(let E=0;E<C;E++)h[V++]=e[i++]}for(j=0;j<N;j++)u=h[j],P=h[j+N],M=h[j+2*N],D=h[j+3*N],z(X,u,P,M,D,(E.height-H)*N*3+3*j);H--}return X}(e,E)}function A(e,E){let H=E.height;const N=E.width;let u,P,M,D,A,C=E.dataPosition;const i=new ArrayBuffer(E.width*E.height*4*3),V=new Float32Array(i);for(;H>0;){for(A=0;A<E.width;A++)u=e[C++],P=e[C++],M=e[C++],D=e[C++],z(V,u,P,M,D,(E.height-H)*N*3+3*A);H--}return V}u.FACE_LEFT=[new N.jE(-1,-1,-1),new N.jE(1,-1,-1),new N.jE(-1,1,-1),new N.jE(1,1,-1)],u.FACE_RIGHT=[new N.jE(1,-1,1),new N.jE(-1,-1,1),new N.jE(1,1,1),new N.jE(-1,1,1)],u.FACE_FRONT=[new N.jE(1,-1,-1),new N.jE(1,-1,1),new N.jE(1,1,-1),new N.jE(1,1,1)],u.FACE_BACK=[new N.jE(-1,-1,1),new N.jE(-1,-1,-1),new N.jE(-1,1,1),new N.jE(-1,1,-1)],u.FACE_DOWN=[new N.jE(1,1,-1),new N.jE(1,1,1),new N.jE(-1,1,-1),new N.jE(-1,1,1)],u.FACE_UP=[new N.jE(-1,-1,-1),new N.jE(-1,-1,1),new N.jE(1,-1,-1),new N.jE(1,-1,1)];class C{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(e,E,H){const N=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),u=M(N),z=D(N,u),P=u.width*u.height,A=new Float32Array(4*P);for(let M=0;M<P;M+=1)A[4*M]=z[3*M],A[4*M+1]=z[3*M+1],A[4*M+2]=z[3*M+2],A[4*M+3]=1;H(u.width,u.height,E.generateMipMaps,!1,(()=>{const e=E.getEngine();E.type=1,E.format=5,E._gammaSpace=!1,e._uploadDataToTextureDirectly(E,A)}))}}}}]);