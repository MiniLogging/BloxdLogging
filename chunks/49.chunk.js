"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[49],{13550:(P,e,n)=>{n.r(e),n.d(e,{_HDRTextureLoader:()=>R});var H=n(11133);class S{static ConvertPanoramaToCubemap(P,e,n,H){let S=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!P)throw"ConvertPanoramaToCubemap: input cannot be null";if(P.length!=e*n*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(H,this.FACE_FRONT,P,e,n,S),back:this.CreateCubemapTexture(H,this.FACE_BACK,P,e,n,S),left:this.CreateCubemapTexture(H,this.FACE_LEFT,P,e,n,S),right:this.CreateCubemapTexture(H,this.FACE_RIGHT,P,e,n,S),up:this.CreateCubemapTexture(H,this.FACE_UP,P,e,n,S),down:this.CreateCubemapTexture(H,this.FACE_DOWN,P,e,n,S),size:H,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(P,e,n,H,S){let p=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const k=new ArrayBuffer(P*P*4*3),m=new Float32Array(k),t=p?Math.max(1,Math.round(H/4/P)):1,C=1/t,R=C*C,q=e[1].be(e[0]).scale(C/P),A=e[3].be(e[2]).scale(C/P),F=1/P;let Y=0;for(let j=0;j<P;j++)for(let p=0;p<t;p++){let p=e[0],k=e[2];for(let e=0;e<P;e++)for(let C=0;C<t;C++){const t=k.be(p).scale(Y).add(p);t.normalize();const C=this.CalcProjectionSpherical(t,n,H,S);m[j*P*3+3*e+0]+=C.r*R,m[j*P*3+3*e+1]+=C.g*R,m[j*P*3+3*e+2]+=C.b*R,p=p.add(q),k=k.add(A)}Y+=F*C}return m}static CalcProjectionSpherical(P,e,n,H){let S=Math.atan2(P.z,P.x);const p=Math.acos(P.y);for(;S<-Math.PI;)S+=2*Math.PI;for(;S>Math.PI;)S-=2*Math.PI;let k=S/Math.PI;const m=p/Math.PI;k=.5*k+.5;let t=Math.round(k*n);t<0?t=0:t>=n&&(t=n-1);let C=Math.round(m*H);C<0?C=0:C>=H&&(C=H-1);const R=H-C-1;return{r:e[R*n*3+3*t+0],g:e[R*n*3+3*t+1],b:e[R*n*3+3*t+2]}}}function p(P,e,n,H,S,p){S>0?(S=function(P,e){return e>1023?P*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?P*Math.pow(2,-1074)*Math.pow(2,e+1074):P*Math.pow(2,e)}(1,S-136),P[p+0]=e*S,P[p+1]=n*S,P[p+2]=H*S):(P[p+0]=0,P[p+1]=0,P[p+2]=0)}function k(P,e){let n="",H="";for(let S=e;S<P.length-e&&(H=String.fromCharCode(P[S]),"\n"!=H);S++)n+=H;return n}function m(P){let e=0,n=0,H=k(P,0);if("#"!=H[0]||"?"!=H[1])throw"Bad HDR Format.";let S=!1,p=!1,m=0;do{m+=H.length+1,H=k(P,m),"FORMAT=32-bit_rle_rgbe"==H?p=!0:0==H.length&&(S=!0)}while(!S);if(!p)throw"HDR Bad header format, unsupported FORMAT";m+=H.length+1,H=k(P,m);const t=/^-Y (.*) \+X (.*)$/g.exec(H);if(!t||t.length<3)throw"HDR Bad header format, no size";if(n=parseInt(t[2]),e=parseInt(t[1]),n<8||n>32767)throw"HDR Bad header format, unsupported size";return m+=H.length+1,{height:e,width:n,dataPosition:m}}function t(P,e){return function(P,e){let n=e.height;const H=e.width;let S,k,m,t,R,q=e.dataPosition,A=0,F=0,Y=0;const j=new ArrayBuffer(4*H),z=new Uint8Array(j),w=new ArrayBuffer(e.width*e.height*4*3),J=new Float32Array(w);for(;n>0;){if(S=P[q++],k=P[q++],m=P[q++],t=P[q++],2!=S||2!=k||128&m||e.width<8||e.width>32767)return C(P,e);if((m<<8|t)!=H)throw"HDR Bad header format, wrong scan line width";for(A=0,Y=0;Y<4;Y++)for(F=(Y+1)*H;A<F;)if(S=P[q++],k=P[q++],S>128){if(R=S-128,0==R||R>F-A)throw"HDR Bad Format, bad scanline data (run)";for(;R-- >0;)z[A++]=k}else{if(R=S,0==R||R>F-A)throw"HDR Bad Format, bad scanline data (non-run)";if(z[A++]=k,--R>0)for(let e=0;e<R;e++)z[A++]=P[q++]}for(Y=0;Y<H;Y++)S=z[Y],k=z[Y+H],m=z[Y+2*H],t=z[Y+3*H],p(J,S,k,m,t,(e.height-n)*H*3+3*Y);n--}return J}(P,e)}function C(P,e){let n=e.height;const H=e.width;let S,k,m,t,C,R=e.dataPosition;const q=new ArrayBuffer(e.width*e.height*4*3),A=new Float32Array(q);for(;n>0;){for(C=0;C<e.width;C++)S=P[R++],k=P[R++],m=P[R++],t=P[R++],p(A,S,k,m,t,(e.height-n)*H*3+3*C);n--}return A}S.FACE_LEFT=[new H.Ie(-1,-1,-1),new H.Ie(1,-1,-1),new H.Ie(-1,1,-1),new H.Ie(1,1,-1)],S.FACE_RIGHT=[new H.Ie(1,-1,1),new H.Ie(-1,-1,1),new H.Ie(1,1,1),new H.Ie(-1,1,1)],S.FACE_FRONT=[new H.Ie(1,-1,-1),new H.Ie(1,-1,1),new H.Ie(1,1,-1),new H.Ie(1,1,1)],S.FACE_BACK=[new H.Ie(-1,-1,1),new H.Ie(-1,-1,-1),new H.Ie(-1,1,1),new H.Ie(-1,1,-1)],S.FACE_DOWN=[new H.Ie(1,1,-1),new H.Ie(1,1,1),new H.Ie(-1,1,-1),new H.Ie(-1,1,1)],S.FACE_UP=[new H.Ie(-1,-1,-1),new H.Ie(-1,-1,1),new H.Ie(1,-1,-1),new H.Ie(1,-1,1)];class R{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(P,e,n){const H=new Uint8Array(P.buffer,P.byteOffset,P.byteLength),S=m(H),p=t(H,S),k=S.width*S.height,C=new Float32Array(4*k);for(let m=0;m<k;m+=1)C[4*m]=p[3*m],C[4*m+1]=p[3*m+1],C[4*m+2]=p[3*m+2],C[4*m+3]=1;n(S.width,S.height,e.generateMipMaps,!1,(()=>{const P=e.getEngine();e.type=1,e.format=5,e._gammaSpace=!1,P._uploadDataToTextureDirectly(e,C)}))}}}}]);