"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[49],{14867:(a,O,i)=>{i.r(O),i.d(O,{_HDRTextureLoader:()=>P});var H=i(12395);class b{static ConvertPanoramaToCubemap(a,O,i,H){let b=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!a)throw"ConvertPanoramaToCubemap: input cannot be null";if(a.length!=O*i*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(H,this.FACE_FRONT,a,O,i,b),back:this.CreateCubemapTexture(H,this.FACE_BACK,a,O,i,b),left:this.CreateCubemapTexture(H,this.FACE_LEFT,a,O,i,b),right:this.CreateCubemapTexture(H,this.FACE_RIGHT,a,O,i,b),up:this.CreateCubemapTexture(H,this.FACE_UP,a,O,i,b),down:this.CreateCubemapTexture(H,this.FACE_DOWN,a,O,i,b),size:H,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(a,O,i,H,b){let G=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const q=new ArrayBuffer(a*a*4*3),Q=new Float32Array(q),k=G?Math.max(1,Math.round(H/4/a)):1,I=1/k,P=I*I,e=O[1].FO(O[0]).scale(I/a),h=O[3].FO(O[2]).scale(I/a),j=1/a;let Z=0;for(let F=0;F<a;F++)for(let G=0;G<k;G++){let G=O[0],q=O[2];for(let O=0;O<a;O++)for(let I=0;I<k;I++){const k=q.FO(G).scale(Z).add(G);k.normalize();const I=this.CalcProjectionSpherical(k,i,H,b);Q[F*a*3+3*O+0]+=I.r*P,Q[F*a*3+3*O+1]+=I.g*P,Q[F*a*3+3*O+2]+=I.b*P,G=G.add(e),q=q.add(h)}Z+=j*I}return Q}static CalcProjectionSpherical(a,O,i,H){let b=Math.atan2(a.z,a.x);const G=Math.acos(a.y);for(;b<-Math.PI;)b+=2*Math.PI;for(;b>Math.PI;)b-=2*Math.PI;let q=b/Math.PI;const Q=G/Math.PI;q=.5*q+.5;let k=Math.round(q*i);k<0?k=0:k>=i&&(k=i-1);let I=Math.round(Q*H);I<0?I=0:I>=H&&(I=H-1);const P=H-I-1;return{r:O[P*i*3+3*k+0],g:O[P*i*3+3*k+1],b:O[P*i*3+3*k+2]}}}function G(a,O,i,H,b,G){b>0?(b=function(a,O){return O>1023?a*Math.pow(2,1023)*Math.pow(2,O-1023):O<-1074?a*Math.pow(2,-1074)*Math.pow(2,O+1074):a*Math.pow(2,O)}(1,b-136),a[G+0]=O*b,a[G+1]=i*b,a[G+2]=H*b):(a[G+0]=0,a[G+1]=0,a[G+2]=0)}function q(a,O){let i="",H="";for(let b=O;b<a.length-O&&(H=String.fromCharCode(a[b]),"\n"!=H);b++)i+=H;return i}function Q(a){let O=0,i=0,H=q(a,0);if("#"!=H[0]||"?"!=H[1])throw"Bad HDR Format.";let b=!1,G=!1,Q=0;do{Q+=H.length+1,H=q(a,Q),"FORMAT=32-bit_rle_rgbe"==H?G=!0:0==H.length&&(b=!0)}while(!b);if(!G)throw"HDR Bad header format, unsupported FORMAT";Q+=H.length+1,H=q(a,Q);const k=/^-Y (.*) \+X (.*)$/g.exec(H);if(!k||k.length<3)throw"HDR Bad header format, no size";if(i=parseInt(k[2]),O=parseInt(k[1]),i<8||i>32767)throw"HDR Bad header format, unsupported size";return Q+=H.length+1,{height:O,width:i,dataPosition:Q}}function k(a,O){return function(a,O){let i=O.height;const H=O.width;let b,q,Q,k,P,e=O.dataPosition,h=0,j=0,Z=0;const F=new ArrayBuffer(4*H),r=new Uint8Array(F),J=new ArrayBuffer(O.width*O.height*4*3),ma=new Float32Array(J);for(;i>0;){if(b=a[e++],q=a[e++],Q=a[e++],k=a[e++],2!=b||2!=q||128&Q||O.width<8||O.width>32767)return I(a,O);if((Q<<8|k)!=H)throw"HDR Bad header format, wrong scan line width";for(h=0,Z=0;Z<4;Z++)for(j=(Z+1)*H;h<j;)if(b=a[e++],q=a[e++],b>128){if(P=b-128,0==P||P>j-h)throw"HDR Bad Format, bad scanline data (run)";for(;P-- >0;)r[h++]=q}else{if(P=b,0==P||P>j-h)throw"HDR Bad Format, bad scanline data (non-run)";if(r[h++]=q,--P>0)for(let O=0;O<P;O++)r[h++]=a[e++]}for(Z=0;Z<H;Z++)b=r[Z],q=r[Z+H],Q=r[Z+2*H],k=r[Z+3*H],G(ma,b,q,Q,k,(O.height-i)*H*3+3*Z);i--}return ma}(a,O)}function I(a,O){let i=O.height;const H=O.width;let b,q,Q,k,I,P=O.dataPosition;const e=new ArrayBuffer(O.width*O.height*4*3),h=new Float32Array(e);for(;i>0;){for(I=0;I<O.width;I++)b=a[P++],q=a[P++],Q=a[P++],k=a[P++],G(h,b,q,Q,k,(O.height-i)*H*3+3*I);i--}return h}b.FACE_LEFT=[new H.ZO(-1,-1,-1),new H.ZO(1,-1,-1),new H.ZO(-1,1,-1),new H.ZO(1,1,-1)],b.FACE_RIGHT=[new H.ZO(1,-1,1),new H.ZO(-1,-1,1),new H.ZO(1,1,1),new H.ZO(-1,1,1)],b.FACE_FRONT=[new H.ZO(1,-1,-1),new H.ZO(1,-1,1),new H.ZO(1,1,-1),new H.ZO(1,1,1)],b.FACE_BACK=[new H.ZO(-1,-1,1),new H.ZO(-1,-1,-1),new H.ZO(-1,1,1),new H.ZO(-1,1,-1)],b.FACE_DOWN=[new H.ZO(1,1,-1),new H.ZO(1,1,1),new H.ZO(-1,1,-1),new H.ZO(-1,1,1)],b.FACE_UP=[new H.ZO(-1,-1,-1),new H.ZO(-1,-1,1),new H.ZO(1,-1,-1),new H.ZO(1,-1,1)];class P{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(a,O,i){const H=new Uint8Array(a.buffer,a.byteOffset,a.byteLength),b=Q(H),G=k(H,b),q=b.width*b.height,I=new Float32Array(4*q);for(let Q=0;Q<q;Q+=1)I[4*Q]=G[3*Q],I[4*Q+1]=G[3*Q+1],I[4*Q+2]=G[3*Q+2],I[4*Q+3]=1;i(b.width,b.height,O.generateMipMaps,!1,(()=>{const a=O.getEngine();O.type=1,O.format=5,O._gammaSpace=!1,a._uploadDataToTextureDirectly(O,I)}))}}}}]);