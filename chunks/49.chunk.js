"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[49],{13654:(R,J,B)=>{B.r(J),B.d(J,{_HDRTextureLoader:()=>D});var Q=B(11186);class h{static ConvertPanoramaToCubemap(R,J,B,Q){let h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!R)throw"ConvertPanoramaToCubemap: input cannot be null";if(R.length!=J*B*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(Q,this.FACE_FRONT,R,J,B,h),back:this.CreateCubemapTexture(Q,this.FACE_BACK,R,J,B,h),left:this.CreateCubemapTexture(Q,this.FACE_LEFT,R,J,B,h),right:this.CreateCubemapTexture(Q,this.FACE_RIGHT,R,J,B,h),up:this.CreateCubemapTexture(Q,this.FACE_UP,R,J,B,h),down:this.CreateCubemapTexture(Q,this.FACE_DOWN,R,J,B,h),size:Q,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(R,J,B,Q,h){let y=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const N=new ArrayBuffer(R*R*4*3),r=new Float32Array(N),q=y?Math.max(1,Math.round(Q/4/R)):1,e=1/q,D=e*e,l=J[1].PJ(J[0]).scale(e/R),E=J[3].PJ(J[2]).scale(e/R),O=1/R;let n=0;for(let P=0;P<R;P++)for(let y=0;y<q;y++){let y=J[0],N=J[2];for(let J=0;J<R;J++)for(let e=0;e<q;e++){const q=N.PJ(y).scale(n).add(y);q.normalize();const e=this.CalcProjectionSpherical(q,B,Q,h);r[P*R*3+3*J+0]+=e.r*D,r[P*R*3+3*J+1]+=e.g*D,r[P*R*3+3*J+2]+=e.b*D,y=y.add(l),N=N.add(E)}n+=O*e}return r}static CalcProjectionSpherical(R,J,B,Q){let h=Math.atan2(R.z,R.x);const y=Math.acos(R.y);for(;h<-Math.PI;)h+=2*Math.PI;for(;h>Math.PI;)h-=2*Math.PI;let N=h/Math.PI;const r=y/Math.PI;N=.5*N+.5;let q=Math.round(N*B);q<0?q=0:q>=B&&(q=B-1);let e=Math.round(r*Q);e<0?e=0:e>=Q&&(e=Q-1);const D=Q-e-1;return{r:J[D*B*3+3*q+0],g:J[D*B*3+3*q+1],b:J[D*B*3+3*q+2]}}}function y(R,J,B,Q,h,y){h>0?(h=function(R,J){return J>1023?R*Math.pow(2,1023)*Math.pow(2,J-1023):J<-1074?R*Math.pow(2,-1074)*Math.pow(2,J+1074):R*Math.pow(2,J)}(1,h-136),R[y+0]=J*h,R[y+1]=B*h,R[y+2]=Q*h):(R[y+0]=0,R[y+1]=0,R[y+2]=0)}function N(R,J){let B="",Q="";for(let h=J;h<R.length-J&&(Q=String.fromCharCode(R[h]),"\n"!=Q);h++)B+=Q;return B}function r(R){let J=0,B=0,Q=N(R,0);if("#"!=Q[0]||"?"!=Q[1])throw"Bad HDR Format.";let h=!1,y=!1,r=0;do{r+=Q.length+1,Q=N(R,r),"FORMAT=32-bit_rle_rgbe"==Q?y=!0:0==Q.length&&(h=!0)}while(!h);if(!y)throw"HDR Bad header format, unsupported FORMAT";r+=Q.length+1,Q=N(R,r);const q=/^-Y (.*) \+X (.*)$/g.exec(Q);if(!q||q.length<3)throw"HDR Bad header format, no size";if(B=parseInt(q[2]),J=parseInt(q[1]),B<8||B>32767)throw"HDR Bad header format, unsupported size";return r+=Q.length+1,{height:J,width:B,dataPosition:r}}function q(R,J){return function(R,J){let B=J.height;const Q=J.width;let h,N,r,q,D,l=J.dataPosition,E=0,O=0,n=0;const P=new ArrayBuffer(4*Q),A=new Uint8Array(P),u=new ArrayBuffer(J.width*J.height*4*3),S=new Float32Array(u);for(;B>0;){if(h=R[l++],N=R[l++],r=R[l++],q=R[l++],2!=h||2!=N||128&r||J.width<8||J.width>32767)return e(R,J);if((r<<8|q)!=Q)throw"HDR Bad header format, wrong scan line width";for(E=0,n=0;n<4;n++)for(O=(n+1)*Q;E<O;)if(h=R[l++],N=R[l++],h>128){if(D=h-128,0==D||D>O-E)throw"HDR Bad Format, bad scanline data (run)";for(;D-- >0;)A[E++]=N}else{if(D=h,0==D||D>O-E)throw"HDR Bad Format, bad scanline data (non-run)";if(A[E++]=N,--D>0)for(let J=0;J<D;J++)A[E++]=R[l++]}for(n=0;n<Q;n++)h=A[n],N=A[n+Q],r=A[n+2*Q],q=A[n+3*Q],y(S,h,N,r,q,(J.height-B)*Q*3+3*n);B--}return S}(R,J)}function e(R,J){let B=J.height;const Q=J.width;let h,N,r,q,e,D=J.dataPosition;const l=new ArrayBuffer(J.width*J.height*4*3),E=new Float32Array(l);for(;B>0;){for(e=0;e<J.width;e++)h=R[D++],N=R[D++],r=R[D++],q=R[D++],y(E,h,N,r,q,(J.height-B)*Q*3+3*e);B--}return E}h.FACE_LEFT=[new Q.nJ(-1,-1,-1),new Q.nJ(1,-1,-1),new Q.nJ(-1,1,-1),new Q.nJ(1,1,-1)],h.FACE_RIGHT=[new Q.nJ(1,-1,1),new Q.nJ(-1,-1,1),new Q.nJ(1,1,1),new Q.nJ(-1,1,1)],h.FACE_FRONT=[new Q.nJ(1,-1,-1),new Q.nJ(1,-1,1),new Q.nJ(1,1,-1),new Q.nJ(1,1,1)],h.FACE_BACK=[new Q.nJ(-1,-1,1),new Q.nJ(-1,-1,-1),new Q.nJ(-1,1,1),new Q.nJ(-1,1,-1)],h.FACE_DOWN=[new Q.nJ(1,1,-1),new Q.nJ(1,1,1),new Q.nJ(-1,1,-1),new Q.nJ(-1,1,1)],h.FACE_UP=[new Q.nJ(-1,-1,-1),new Q.nJ(-1,-1,1),new Q.nJ(1,-1,-1),new Q.nJ(1,-1,1)];class D{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(R,J,B){const Q=new Uint8Array(R.buffer,R.byteOffset,R.byteLength),h=r(Q),y=q(Q,h),N=h.width*h.height,e=new Float32Array(4*N);for(let r=0;r<N;r+=1)e[4*r]=y[3*r],e[4*r+1]=y[3*r+1],e[4*r+2]=y[3*r+2],e[4*r+3]=1;B(h.width,h.height,J.generateMipMaps,!1,(()=>{const R=J.getEngine();J.type=1,J.format=5,J._gammaSpace=!1,R._uploadDataToTextureDirectly(J,e)}))}}}}]);