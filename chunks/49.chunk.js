"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[49],{13666:(k,h,o)=>{o.r(h),o.d(h,{_HDRTextureLoader:()=>A});var x=o(11239);class I{static ConvertPanoramaToCubemap(k,h,o,x){let I=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!k)throw"ConvertPanoramaToCubemap: input cannot be null";if(k.length!=h*o*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(x,this.FACE_FRONT,k,h,o,I),back:this.CreateCubemapTexture(x,this.FACE_BACK,k,h,o,I),left:this.CreateCubemapTexture(x,this.FACE_LEFT,k,h,o,I),right:this.CreateCubemapTexture(x,this.FACE_RIGHT,k,h,o,I),up:this.CreateCubemapTexture(x,this.FACE_UP,k,h,o,I),down:this.CreateCubemapTexture(x,this.FACE_DOWN,k,h,o,I),size:x,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(k,h,o,x,I){let q=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const Y=new ArrayBuffer(k*k*4*3),J=new Float32Array(Y),G=q?Math.max(1,Math.round(x/4/k)):1,l=1/G,A=l*l,K=h[1].ih(h[0]).scale(l/k),a=h[3].ih(h[2]).scale(l/k),N=1/k;let X=0;for(let c=0;c<k;c++)for(let q=0;q<G;q++){let q=h[0],Y=h[2];for(let h=0;h<k;h++)for(let l=0;l<G;l++){const G=Y.ih(q).scale(X).add(q);G.normalize();const l=this.CalcProjectionSpherical(G,o,x,I);J[c*k*3+3*h+0]+=l.r*A,J[c*k*3+3*h+1]+=l.g*A,J[c*k*3+3*h+2]+=l.b*A,q=q.add(K),Y=Y.add(a)}X+=N*l}return J}static CalcProjectionSpherical(k,h,o,x){let I=Math.atan2(k.z,k.x);const q=Math.acos(k.y);for(;I<-Math.PI;)I+=2*Math.PI;for(;I>Math.PI;)I-=2*Math.PI;let Y=I/Math.PI;const J=q/Math.PI;Y=.5*Y+.5;let G=Math.round(Y*o);G<0?G=0:G>=o&&(G=o-1);let l=Math.round(J*x);l<0?l=0:l>=x&&(l=x-1);const A=x-l-1;return{r:h[A*o*3+3*G+0],g:h[A*o*3+3*G+1],b:h[A*o*3+3*G+2]}}}function q(k,h,o,x,I,q){I>0?(I=function(k,h){return h>1023?k*Math.pow(2,1023)*Math.pow(2,h-1023):h<-1074?k*Math.pow(2,-1074)*Math.pow(2,h+1074):k*Math.pow(2,h)}(1,I-136),k[q+0]=h*I,k[q+1]=o*I,k[q+2]=x*I):(k[q+0]=0,k[q+1]=0,k[q+2]=0)}function Y(k,h){let o="",x="";for(let I=h;I<k.length-h&&(x=String.fromCharCode(k[I]),"\n"!=x);I++)o+=x;return o}function J(k){let h=0,o=0,x=Y(k,0);if("#"!=x[0]||"?"!=x[1])throw"Bad HDR Format.";let I=!1,q=!1,J=0;do{J+=x.length+1,x=Y(k,J),"FORMAT=32-bit_rle_rgbe"==x?q=!0:0==x.length&&(I=!0)}while(!I);if(!q)throw"HDR Bad header format, unsupported FORMAT";J+=x.length+1,x=Y(k,J);const G=/^-Y (.*) \+X (.*)$/g.exec(x);if(!G||G.length<3)throw"HDR Bad header format, no size";if(o=parseInt(G[2]),h=parseInt(G[1]),o<8||o>32767)throw"HDR Bad header format, unsupported size";return J+=x.length+1,{height:h,width:o,dataPosition:J}}function G(k,h){return function(k,h){let o=h.height;const x=h.width;let I,Y,J,G,A,K=h.dataPosition,a=0,N=0,X=0;const c=new ArrayBuffer(4*x),W=new Uint8Array(c),f=new ArrayBuffer(h.width*h.height*4*3),M=new Float32Array(f);for(;o>0;){if(I=k[K++],Y=k[K++],J=k[K++],G=k[K++],2!=I||2!=Y||128&J||h.width<8||h.width>32767)return l(k,h);if((J<<8|G)!=x)throw"HDR Bad header format, wrong scan line width";for(a=0,X=0;X<4;X++)for(N=(X+1)*x;a<N;)if(I=k[K++],Y=k[K++],I>128){if(A=I-128,0==A||A>N-a)throw"HDR Bad Format, bad scanline data (run)";for(;A-- >0;)W[a++]=Y}else{if(A=I,0==A||A>N-a)throw"HDR Bad Format, bad scanline data (non-run)";if(W[a++]=Y,--A>0)for(let h=0;h<A;h++)W[a++]=k[K++]}for(X=0;X<x;X++)I=W[X],Y=W[X+x],J=W[X+2*x],G=W[X+3*x],q(M,I,Y,J,G,(h.height-o)*x*3+3*X);o--}return M}(k,h)}function l(k,h){let o=h.height;const x=h.width;let I,Y,J,G,l,A=h.dataPosition;const K=new ArrayBuffer(h.width*h.height*4*3),a=new Float32Array(K);for(;o>0;){for(l=0;l<h.width;l++)I=k[A++],Y=k[A++],J=k[A++],G=k[A++],q(a,I,Y,J,G,(h.height-o)*x*3+3*l);o--}return a}I.FACE_LEFT=[new x.Vh(-1,-1,-1),new x.Vh(1,-1,-1),new x.Vh(-1,1,-1),new x.Vh(1,1,-1)],I.FACE_RIGHT=[new x.Vh(1,-1,1),new x.Vh(-1,-1,1),new x.Vh(1,1,1),new x.Vh(-1,1,1)],I.FACE_FRONT=[new x.Vh(1,-1,-1),new x.Vh(1,-1,1),new x.Vh(1,1,-1),new x.Vh(1,1,1)],I.FACE_BACK=[new x.Vh(-1,-1,1),new x.Vh(-1,-1,-1),new x.Vh(-1,1,1),new x.Vh(-1,1,-1)],I.FACE_DOWN=[new x.Vh(1,1,-1),new x.Vh(1,1,1),new x.Vh(-1,1,-1),new x.Vh(-1,1,1)],I.FACE_UP=[new x.Vh(-1,-1,-1),new x.Vh(-1,-1,1),new x.Vh(1,-1,-1),new x.Vh(1,-1,1)];class A{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(k,h,o){const x=new Uint8Array(k.buffer,k.byteOffset,k.byteLength),I=J(x),q=G(x,I),Y=I.width*I.height,l=new Float32Array(4*Y);for(let J=0;J<Y;J+=1)l[4*J]=q[3*J],l[4*J+1]=q[3*J+1],l[4*J+2]=q[3*J+2],l[4*J+3]=1;o(I.width,I.height,h.generateMipMaps,!1,(()=>{const k=h.getEngine();h.type=1,h.format=5,h._gammaSpace=!1,k._uploadDataToTextureDirectly(h,l)}))}}}}]);