"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[49],{13818:(k,Q,i)=>{i.r(Q),i.d(Q,{_HDRTextureLoader:()=>J});var Z=i(11298);class U{static ConvertPanoramaToCubemap(k,Q,i,Z){let U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!k)throw"ConvertPanoramaToCubemap: input cannot be null";if(k.length!=Q*i*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(Z,this.FACE_FRONT,k,Q,i,U),back:this.CreateCubemapTexture(Z,this.FACE_BACK,k,Q,i,U),left:this.CreateCubemapTexture(Z,this.FACE_LEFT,k,Q,i,U),right:this.CreateCubemapTexture(Z,this.FACE_RIGHT,k,Q,i,U),up:this.CreateCubemapTexture(Z,this.FACE_UP,k,Q,i,U),down:this.CreateCubemapTexture(Z,this.FACE_DOWN,k,Q,i,U),size:Z,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(k,Q,i,Z,U){let C=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const B=new ArrayBuffer(k*k*4*3),o=new Float32Array(B),m=C?Math.max(1,Math.round(Z/4/k)):1,O=1/m,J=O*O,G=Q[1].EQ(Q[0]).scale(O/k),H=Q[3].EQ(Q[2]).scale(O/k),e=1/k;let F=0;for(let z=0;z<k;z++)for(let C=0;C<m;C++){let C=Q[0],B=Q[2];for(let Q=0;Q<k;Q++)for(let O=0;O<m;O++){const m=B.EQ(C).scale(F).add(C);m.normalize();const O=this.CalcProjectionSpherical(m,i,Z,U);o[z*k*3+3*Q+0]+=O.r*J,o[z*k*3+3*Q+1]+=O.g*J,o[z*k*3+3*Q+2]+=O.b*J,C=C.add(G),B=B.add(H)}F+=e*O}return o}static CalcProjectionSpherical(k,Q,i,Z){let U=Math.atan2(k.z,k.x);const C=Math.acos(k.y);for(;U<-Math.PI;)U+=2*Math.PI;for(;U>Math.PI;)U-=2*Math.PI;let B=U/Math.PI;const o=C/Math.PI;B=.5*B+.5;let m=Math.round(B*i);m<0?m=0:m>=i&&(m=i-1);let O=Math.round(o*Z);O<0?O=0:O>=Z&&(O=Z-1);const J=Z-O-1;return{r:Q[J*i*3+3*m+0],g:Q[J*i*3+3*m+1],b:Q[J*i*3+3*m+2]}}}function C(k,Q,i,Z,U,C){U>0?(U=function(k,Q){return Q>1023?k*Math.pow(2,1023)*Math.pow(2,Q-1023):Q<-1074?k*Math.pow(2,-1074)*Math.pow(2,Q+1074):k*Math.pow(2,Q)}(1,U-136),k[C+0]=Q*U,k[C+1]=i*U,k[C+2]=Z*U):(k[C+0]=0,k[C+1]=0,k[C+2]=0)}function B(k,Q){let i="",Z="";for(let U=Q;U<k.length-Q&&(Z=String.fromCharCode(k[U]),"\n"!=Z);U++)i+=Z;return i}function o(k){let Q=0,i=0,Z=B(k,0);if("#"!=Z[0]||"?"!=Z[1])throw"Bad HDR Format.";let U=!1,C=!1,o=0;do{o+=Z.length+1,Z=B(k,o),"FORMAT=32-bit_rle_rgbe"==Z?C=!0:0==Z.length&&(U=!0)}while(!U);if(!C)throw"HDR Bad header format, unsupported FORMAT";o+=Z.length+1,Z=B(k,o);const m=/^-Y (.*) \+X (.*)$/g.exec(Z);if(!m||m.length<3)throw"HDR Bad header format, no size";if(i=parseInt(m[2]),Q=parseInt(m[1]),i<8||i>32767)throw"HDR Bad header format, unsupported size";return o+=Z.length+1,{height:Q,width:i,dataPosition:o}}function m(k,Q){return function(k,Q){let i=Q.height;const Z=Q.width;let U,B,o,m,J,G=Q.dataPosition,H=0,e=0,F=0;const z=new ArrayBuffer(4*Z),E=new Uint8Array(z),l=new ArrayBuffer(Q.width*Q.height*4*3),h=new Float32Array(l);for(;i>0;){if(U=k[G++],B=k[G++],o=k[G++],m=k[G++],2!=U||2!=B||128&o||Q.width<8||Q.width>32767)return O(k,Q);if((o<<8|m)!=Z)throw"HDR Bad header format, wrong scan line width";for(H=0,F=0;F<4;F++)for(e=(F+1)*Z;H<e;)if(U=k[G++],B=k[G++],U>128){if(J=U-128,0==J||J>e-H)throw"HDR Bad Format, bad scanline data (run)";for(;J-- >0;)E[H++]=B}else{if(J=U,0==J||J>e-H)throw"HDR Bad Format, bad scanline data (non-run)";if(E[H++]=B,--J>0)for(let Q=0;Q<J;Q++)E[H++]=k[G++]}for(F=0;F<Z;F++)U=E[F],B=E[F+Z],o=E[F+2*Z],m=E[F+3*Z],C(h,U,B,o,m,(Q.height-i)*Z*3+3*F);i--}return h}(k,Q)}function O(k,Q){let i=Q.height;const Z=Q.width;let U,B,o,m,O,J=Q.dataPosition;const G=new ArrayBuffer(Q.width*Q.height*4*3),H=new Float32Array(G);for(;i>0;){for(O=0;O<Q.width;O++)U=k[J++],B=k[J++],o=k[J++],m=k[J++],C(H,U,B,o,m,(Q.height-i)*Z*3+3*O);i--}return H}U.FACE_LEFT=[new Z.zQ(-1,-1,-1),new Z.zQ(1,-1,-1),new Z.zQ(-1,1,-1),new Z.zQ(1,1,-1)],U.FACE_RIGHT=[new Z.zQ(1,-1,1),new Z.zQ(-1,-1,1),new Z.zQ(1,1,1),new Z.zQ(-1,1,1)],U.FACE_FRONT=[new Z.zQ(1,-1,-1),new Z.zQ(1,-1,1),new Z.zQ(1,1,-1),new Z.zQ(1,1,1)],U.FACE_BACK=[new Z.zQ(-1,-1,1),new Z.zQ(-1,-1,-1),new Z.zQ(-1,1,1),new Z.zQ(-1,1,-1)],U.FACE_DOWN=[new Z.zQ(1,1,-1),new Z.zQ(1,1,1),new Z.zQ(-1,1,-1),new Z.zQ(-1,1,1)],U.FACE_UP=[new Z.zQ(-1,-1,-1),new Z.zQ(-1,-1,1),new Z.zQ(1,-1,-1),new Z.zQ(1,-1,1)];class J{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(k,Q,i){const Z=new Uint8Array(k.buffer,k.byteOffset,k.byteLength),U=o(Z),C=m(Z,U),B=U.width*U.height,O=new Float32Array(4*B);for(let o=0;o<B;o+=1)O[4*o]=C[3*o],O[4*o+1]=C[3*o+1],O[4*o+2]=C[3*o+2],O[4*o+3]=1;i(U.width,U.height,Q.generateMipMaps,!1,(()=>{const k=Q.getEngine();Q.type=1,Q.format=5,Q._gammaSpace=!1,k._uploadDataToTextureDirectly(Q,O)}))}}}}]);