"use strict";(self.nyfa010khv=self.nyfa010khv||[]).push([[49],{14606:(L,r,p)=>{p.r(r),p.d(r,{_HDRTextureLoader:()=>t});var J=p(12136);class i{static ConvertPanoramaToCubemap(L,r,p,J){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!L)throw"ConvertPanoramaToCubemap: input cannot be null";if(L.length!=r*p*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(J,this.FACE_FRONT,L,r,p,i),back:this.CreateCubemapTexture(J,this.FACE_BACK,L,r,p,i),left:this.CreateCubemapTexture(J,this.FACE_LEFT,L,r,p,i),right:this.CreateCubemapTexture(J,this.FACE_RIGHT,L,r,p,i),up:this.CreateCubemapTexture(J,this.FACE_UP,L,r,p,i),down:this.CreateCubemapTexture(J,this.FACE_DOWN,L,r,p,i),size:J,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(L,r,p,J,i){let n=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const j=new ArrayBuffer(L*L*4*3),z=new Float32Array(j),G=n?Math.max(1,Math.round(J/4/L)):1,C=1/G,t=C*C,E=r[1].Pr(r[0]).scale(C/L),x=r[3].Pr(r[2]).scale(C/L),w=1/L;let g=0;for(let b=0;b<L;b++)for(let n=0;n<G;n++){let n=r[0],j=r[2];for(let r=0;r<L;r++)for(let C=0;C<G;C++){const G=j.Pr(n).scale(g).add(n);G.normalize();const C=this.CalcProjectionSpherical(G,p,J,i);z[b*L*3+3*r+0]+=C.r*t,z[b*L*3+3*r+1]+=C.g*t,z[b*L*3+3*r+2]+=C.b*t,n=n.add(E),j=j.add(x)}g+=w*C}return z}static CalcProjectionSpherical(L,r,p,J){let i=Math.atan2(L.z,L.x);const n=Math.acos(L.y);for(;i<-Math.PI;)i+=2*Math.PI;for(;i>Math.PI;)i-=2*Math.PI;let j=i/Math.PI;const z=n/Math.PI;j=.5*j+.5;let G=Math.round(j*p);G<0?G=0:G>=p&&(G=p-1);let C=Math.round(z*J);C<0?C=0:C>=J&&(C=J-1);const t=J-C-1;return{r:r[t*p*3+3*G+0],g:r[t*p*3+3*G+1],b:r[t*p*3+3*G+2]}}}function n(L,r,p,J,i,n){i>0?(i=function(L,r){return r>1023?L*Math.pow(2,1023)*Math.pow(2,r-1023):r<-1074?L*Math.pow(2,-1074)*Math.pow(2,r+1074):L*Math.pow(2,r)}(1,i-136),L[n+0]=r*i,L[n+1]=p*i,L[n+2]=J*i):(L[n+0]=0,L[n+1]=0,L[n+2]=0)}function j(L,r){let p="",J="";for(let i=r;i<L.length-r&&(J=String.fromCharCode(L[i]),"\n"!=J);i++)p+=J;return p}function z(L){let r=0,p=0,J=j(L,0);if("#"!=J[0]||"?"!=J[1])throw"Bad HDR Format.";let i=!1,n=!1,z=0;do{z+=J.length+1,J=j(L,z),"FORMAT=32-bit_rle_rgbe"==J?n=!0:0==J.length&&(i=!0)}while(!i);if(!n)throw"HDR Bad header format, unsupported FORMAT";z+=J.length+1,J=j(L,z);const G=/^-Y (.*) \+X (.*)$/g.exec(J);if(!G||G.length<3)throw"HDR Bad header format, no size";if(p=parseInt(G[2]),r=parseInt(G[1]),p<8||p>32767)throw"HDR Bad header format, unsupported size";return z+=J.length+1,{height:r,width:p,dataPosition:z}}function G(L,r){return function(L,r){let p=r.height;const J=r.width;let i,j,z,G,t,E=r.dataPosition,x=0,w=0,g=0;const b=new ArrayBuffer(4*J),c=new Uint8Array(b),P=new ArrayBuffer(r.width*r.height*4*3),O=new Float32Array(P);for(;p>0;){if(i=L[E++],j=L[E++],z=L[E++],G=L[E++],2!=i||2!=j||128&z||r.width<8||r.width>32767)return C(L,r);if((z<<8|G)!=J)throw"HDR Bad header format, wrong scan line width";for(x=0,g=0;g<4;g++)for(w=(g+1)*J;x<w;)if(i=L[E++],j=L[E++],i>128){if(t=i-128,0==t||t>w-x)throw"HDR Bad Format, bad scanline data (run)";for(;t-- >0;)c[x++]=j}else{if(t=i,0==t||t>w-x)throw"HDR Bad Format, bad scanline data (non-run)";if(c[x++]=j,--t>0)for(let r=0;r<t;r++)c[x++]=L[E++]}for(g=0;g<J;g++)i=c[g],j=c[g+J],z=c[g+2*J],G=c[g+3*J],n(O,i,j,z,G,(r.height-p)*J*3+3*g);p--}return O}(L,r)}function C(L,r){let p=r.height;const J=r.width;let i,j,z,G,C,t=r.dataPosition;const E=new ArrayBuffer(r.width*r.height*4*3),x=new Float32Array(E);for(;p>0;){for(C=0;C<r.width;C++)i=L[t++],j=L[t++],z=L[t++],G=L[t++],n(x,i,j,z,G,(r.height-p)*J*3+3*C);p--}return x}i.FACE_LEFT=[new J.cr(-1,-1,-1),new J.cr(1,-1,-1),new J.cr(-1,1,-1),new J.cr(1,1,-1)],i.FACE_RIGHT=[new J.cr(1,-1,1),new J.cr(-1,-1,1),new J.cr(1,1,1),new J.cr(-1,1,1)],i.FACE_FRONT=[new J.cr(1,-1,-1),new J.cr(1,-1,1),new J.cr(1,1,-1),new J.cr(1,1,1)],i.FACE_BACK=[new J.cr(-1,-1,1),new J.cr(-1,-1,-1),new J.cr(-1,1,1),new J.cr(-1,1,-1)],i.FACE_DOWN=[new J.cr(1,1,-1),new J.cr(1,1,1),new J.cr(-1,1,-1),new J.cr(-1,1,1)],i.FACE_UP=[new J.cr(-1,-1,-1),new J.cr(-1,-1,1),new J.cr(1,-1,-1),new J.cr(1,-1,1)];class t{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(L,r,p){const J=new Uint8Array(L.buffer,L.byteOffset,L.byteLength),i=z(J),n=G(J,i),j=i.width*i.height,C=new Float32Array(4*j);for(let z=0;z<j;z+=1)C[4*z]=n[3*z],C[4*z+1]=n[3*z+1],C[4*z+2]=n[3*z+2],C[4*z+3]=1;p(i.width,i.height,r.generateMipMaps,!1,(()=>{const L=r.getEngine();r.type=1,r.format=5,r._gammaSpace=!1,L._uploadDataToTextureDirectly(r,C)}))}}}}]);