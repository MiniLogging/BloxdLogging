"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[49],{14993:(o,v,V)=>{V.r(v),V.d(v,{_HDRTextureLoader:()=>h});var g=V(12488);class E{static ConvertPanoramaToCubemap(o,v,V,g){let E=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!o)throw"ConvertPanoramaToCubemap: input cannot be null";if(o.length!=v*V*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(g,this.FACE_FRONT,o,v,V,E),back:this.CreateCubemapTexture(g,this.FACE_BACK,o,v,V,E),left:this.CreateCubemapTexture(g,this.FACE_LEFT,o,v,V,E),right:this.CreateCubemapTexture(g,this.FACE_RIGHT,o,v,V,E),up:this.CreateCubemapTexture(g,this.FACE_UP,o,v,V,E),down:this.CreateCubemapTexture(g,this.FACE_DOWN,o,v,V,E),size:g,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(o,v,V,g,E){let I=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const Q=new ArrayBuffer(o*o*4*3),U=new Float32Array(Q),n=I?Math.max(1,Math.round(g/4/o)):1,O=1/n,h=O*O,x=v[1].Rv(v[0]).scale(O/o),f=v[3].Rv(v[2]).scale(O/o),l=1/o;let S=0;for(let T=0;T<o;T++)for(let I=0;I<n;I++){let I=v[0],Q=v[2];for(let v=0;v<o;v++)for(let O=0;O<n;O++){const n=Q.Rv(I).scale(S).add(I);n.normalize();const O=this.CalcProjectionSpherical(n,V,g,E);U[T*o*3+3*v+0]+=O.r*h,U[T*o*3+3*v+1]+=O.g*h,U[T*o*3+3*v+2]+=O.b*h,I=I.add(x),Q=Q.add(f)}S+=l*O}return U}static CalcProjectionSpherical(o,v,V,g){let E=Math.atan2(o.z,o.x);const I=Math.acos(o.y);for(;E<-Math.PI;)E+=2*Math.PI;for(;E>Math.PI;)E-=2*Math.PI;let Q=E/Math.PI;const U=I/Math.PI;Q=.5*Q+.5;let n=Math.round(Q*V);n<0?n=0:n>=V&&(n=V-1);let O=Math.round(U*g);O<0?O=0:O>=g&&(O=g-1);const h=g-O-1;return{r:v[h*V*3+3*n+0],g:v[h*V*3+3*n+1],b:v[h*V*3+3*n+2]}}}function I(o,v,V,g,E,I){E>0?(E=function(o,v){return v>1023?o*Math.pow(2,1023)*Math.pow(2,v-1023):v<-1074?o*Math.pow(2,-1074)*Math.pow(2,v+1074):o*Math.pow(2,v)}(1,E-136),o[I+0]=v*E,o[I+1]=V*E,o[I+2]=g*E):(o[I+0]=0,o[I+1]=0,o[I+2]=0)}function Q(o,v){let V="",g="";for(let E=v;E<o.length-v&&(g=String.fromCharCode(o[E]),"\n"!=g);E++)V+=g;return V}function U(o){let v=0,V=0,g=Q(o,0);if("#"!=g[0]||"?"!=g[1])throw"Bad HDR Format.";let E=!1,I=!1,U=0;do{U+=g.length+1,g=Q(o,U),"FORMAT=32-bit_rle_rgbe"==g?I=!0:0==g.length&&(E=!0)}while(!E);if(!I)throw"HDR Bad header format, unsupported FORMAT";U+=g.length+1,g=Q(o,U);const n=/^-Y (.*) \+X (.*)$/g.exec(g);if(!n||n.length<3)throw"HDR Bad header format, no size";if(V=parseInt(n[2]),v=parseInt(n[1]),V<8||V>32767)throw"HDR Bad header format, unsupported size";return U+=g.length+1,{height:v,width:V,dataPosition:U}}function n(o,v){return function(o,v){let V=v.height;const g=v.width;let E,Q,U,n,h,x=v.dataPosition,f=0,l=0,S=0;const T=new ArrayBuffer(4*g),c=new Uint8Array(T),R=new ArrayBuffer(v.width*v.height*4*3),j=new Float32Array(R);for(;V>0;){if(E=o[x++],Q=o[x++],U=o[x++],n=o[x++],2!=E||2!=Q||128&U||v.width<8||v.width>32767)return O(o,v);if((U<<8|n)!=g)throw"HDR Bad header format, wrong scan line width";for(f=0,S=0;S<4;S++)for(l=(S+1)*g;f<l;)if(E=o[x++],Q=o[x++],E>128){if(h=E-128,0==h||h>l-f)throw"HDR Bad Format, bad scanline data (run)";for(;h-- >0;)c[f++]=Q}else{if(h=E,0==h||h>l-f)throw"HDR Bad Format, bad scanline data (non-run)";if(c[f++]=Q,--h>0)for(let v=0;v<h;v++)c[f++]=o[x++]}for(S=0;S<g;S++)E=c[S],Q=c[S+g],U=c[S+2*g],n=c[S+3*g],I(j,E,Q,U,n,(v.height-V)*g*3+3*S);V--}return j}(o,v)}function O(o,v){let V=v.height;const g=v.width;let E,Q,U,n,O,h=v.dataPosition;const x=new ArrayBuffer(v.width*v.height*4*3),f=new Float32Array(x);for(;V>0;){for(O=0;O<v.width;O++)E=o[h++],Q=o[h++],U=o[h++],n=o[h++],I(f,E,Q,U,n,(v.height-V)*g*3+3*O);V--}return f}E.FACE_LEFT=[new g.cv(-1,-1,-1),new g.cv(1,-1,-1),new g.cv(-1,1,-1),new g.cv(1,1,-1)],E.FACE_RIGHT=[new g.cv(1,-1,1),new g.cv(-1,-1,1),new g.cv(1,1,1),new g.cv(-1,1,1)],E.FACE_FRONT=[new g.cv(1,-1,-1),new g.cv(1,-1,1),new g.cv(1,1,-1),new g.cv(1,1,1)],E.FACE_BACK=[new g.cv(-1,-1,1),new g.cv(-1,-1,-1),new g.cv(-1,1,1),new g.cv(-1,1,-1)],E.FACE_DOWN=[new g.cv(1,1,-1),new g.cv(1,1,1),new g.cv(-1,1,-1),new g.cv(-1,1,1)],E.FACE_UP=[new g.cv(-1,-1,-1),new g.cv(-1,-1,1),new g.cv(1,-1,-1),new g.cv(1,-1,1)];class h{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(o,v,V){const g=new Uint8Array(o.buffer,o.byteOffset,o.byteLength),E=U(g),I=n(g,E),Q=E.width*E.height,O=new Float32Array(4*Q);for(let U=0;U<Q;U+=1)O[4*U]=I[3*U],O[4*U+1]=I[3*U+1],O[4*U+2]=I[3*U+2],O[4*U+3]=1;V(E.width,E.height,v.generateMipMaps,!1,(()=>{const o=v.getEngine();v.type=1,v.format=5,v._gammaSpace=!1,o._uploadDataToTextureDirectly(v,O)}))}}}}]);