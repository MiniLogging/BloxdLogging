"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[53],{15182:(K,A,T)=>{T.r(A),T.d(A,{postprocessVertexShaderWGSL:()=>f});var G=T(12618);const B="postprocessVertexShader",L="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";G.b.ShadersStoreWGSL[B]||(G.b.ShadersStoreWGSL[B]=L);const f={name:B,shader:L}}}]);