"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[53],{14953:(U,G,C)=>{C.r(G),C.d(G,{postprocessVertexShaderWGSL:()=>t});var L=C(12808);const X="postprocessVertexShader",l="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";L.d.ShadersStoreWGSL[X]||(L.d.ShadersStoreWGSL[X]=l);const t={name:X,shader:l}}}]);