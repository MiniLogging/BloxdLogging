"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[53],{15112:(L,U,x)=>{x.r(U),x.d(U,{postprocessVertexShaderWGSL:()=>F});var mL=x(12496);const p="postprocessVertexShader",G="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";mL.d.ShadersStoreWGSL[p]||(mL.d.ShadersStoreWGSL[p]=G);const F={name:p,shader:G}}}]);