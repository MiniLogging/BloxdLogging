"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[53],{14902:(a,O,i)=>{i.r(O),i.d(O,{postprocessVertexShaderWGSL:()=>q});var H=i(12287);const b="postprocessVertexShader",G="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";H.c.ShadersStoreWGSL[b]||(H.c.ShadersStoreWGSL[b]=G);const q={name:b,shader:G}}}]);