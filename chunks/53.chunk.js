"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[53],{15090:(s,k,h)=>{h.r(k),h.d(k,{postprocessVertexShaderWGSL:()=>i});var A=h(12493);const g="postprocessVertexShader",ms="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";A.e.ShadersStoreWGSL[g]||(A.e.ShadersStoreWGSL[g]=ms);const i={name:g,shader:ms}}}]);