"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[53],{13761:(K,H,M)=>{M.r(H),M.d(H,{postprocessVertexShaderWGSL:()=>y});var q=M(11193);const w="postprocessVertexShader",u="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";q.d.ShadersStoreWGSL[w]||(q.d.ShadersStoreWGSL[w]=u);const y={name:w,shader:u}}}]);