"use strict";(self.ozi0exxand9=self.ozi0exxand9||[]).push([[53],{13875:(f,v,Z)=>{Z.r(v),Z.d(v,{postprocessVertexShaderWGSL:()=>l});var V=Z(11333);const h="postprocessVertexShader",J="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";V.c.ShadersStoreWGSL[h]||(V.c.ShadersStoreWGSL[h]=J);const l={name:h,shader:J}}}]);