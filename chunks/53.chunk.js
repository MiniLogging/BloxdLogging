"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[53],{13857:(k,Q,i)=>{i.r(Q),i.d(Q,{postprocessVertexShaderWGSL:()=>B});var Z=i(11210);const U="postprocessVertexShader",C="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";Z.d.ShadersStoreWGSL[U]||(Z.d.ShadersStoreWGSL[U]=C);const B={name:U,shader:C}}}]);