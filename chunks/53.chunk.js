"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[53],{13478:(K,Y,l)=>{l.r(Y),l.d(Y,{colorPixelShaderWGSL:()=>A});var v=l(577);l(12188),l(12211),l(12216),l(12231);const U="colorPixelShader",d="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vColor: vec4f;\n#else\nuniform color: vec4f;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nfragmentOutputs.color=input.vColor;\n#else\nfragmentOutputs.color=uniforms.color;\n#endif\n#include<fogFragment>(color,fragmentOutputs.color)\n#define CUSTOM_FRAGMENT_MAIN_END\n}";v.e.ShadersStoreWGSL[U]=d;const A={name:U,shader:d}}}]);