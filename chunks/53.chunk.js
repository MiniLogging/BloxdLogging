"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[53],{14869:(V,h,mV)=>{mV.r(h),mV.d(h,{postprocessVertexShaderWGSL:()=>A});var t=mV(12342);const L="postprocessVertexShader",N="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";t.b.ShadersStoreWGSL[L]||(t.b.ShadersStoreWGSL[L]=N);const A={name:L,shader:N}}}]);