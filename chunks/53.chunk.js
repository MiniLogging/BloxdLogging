"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[53],{13731:(o,H,n)=>{n.r(H),n.d(H,{postprocessVertexShaderWGSL:()=>O});var E=n(11101);const k="postprocessVertexShader",g="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";E.d.ShadersStoreWGSL[k]||(E.d.ShadersStoreWGSL[k]=g);const O={name:k,shader:g}}}]);