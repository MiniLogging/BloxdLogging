"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[53],{13795:(H,O,S)=>{S.r(O),S.d(O,{postprocessVertexShaderWGSL:()=>G});var t=S(11223);const q="postprocessVertexShader",p="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";t.d.ShadersStoreWGSL[q]||(t.d.ShadersStoreWGSL[q]=p);const G={name:q,shader:p}}}]);