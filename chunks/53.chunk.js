"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[53],{15195:(D,h,o)=>{o.r(h),o.d(h,{postprocessVertexShaderWGSL:()=>M});var H=o(12741);const g="postprocessVertexShader",j="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";H.d.ShadersStoreWGSL[g]||(H.d.ShadersStoreWGSL[g]=j);const M={name:g,shader:j}}}]);