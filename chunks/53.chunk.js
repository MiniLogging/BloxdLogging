"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[53],{15107:(r,O,W)=>{W.r(O),W.d(O,{postprocessVertexShaderWGSL:()=>T});var q=W(12524);const Q="postprocessVertexShader",C="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";q.c.ShadersStoreWGSL[Q]||(q.c.ShadersStoreWGSL[Q]=C);const T={name:Q,shader:C}}}]);