"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[53],{14090:(F,P,f)=>{f.r(P),f.d(P,{postprocessVertexShaderWGSL:()=>H});var c=f(11548);const N="postprocessVertexShader",q="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";c.c.ShadersStoreWGSL[N]||(c.c.ShadersStoreWGSL[N]=q);const H={name:N,shader:q}}}]);