"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[53],{15414:(Y,b,C)=>{C.r(b),C.d(b,{postprocessVertexShaderWGSL:()=>E});var R=C(12747);const q="postprocessVertexShader",A="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";R.b.ShadersStoreWGSL[q]||(R.b.ShadersStoreWGSL[q]=A);const E={name:q,shader:A}}}]);