"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[53],{14175:(e,E,H)=>{H.r(E),H.d(E,{postprocessVertexShaderWGSL:()=>P});var N=H(11633);const u="postprocessVertexShader",z="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";N.d.ShadersStoreWGSL[u]||(N.d.ShadersStoreWGSL[u]=z);const P={name:u,shader:z}}}]);