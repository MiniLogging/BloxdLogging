"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[53],{15105:(mm,o,u)=>{u.r(o),u.d(o,{postprocessVertexShaderWGSL:()=>r});var f=u(12652);const B="postprocessVertexShader",O="attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);\n#define CUSTOM_VERTEX_DEFINITIONS\n@vertex\nfn main(input : VertexInputs)->FragmentInputs {\n#define CUSTOM_VERTEX_MAIN_BEGIN\nvertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);\n#define CUSTOM_VERTEX_MAIN_END\n}\n";f.e.ShadersStoreWGSL[B]||(f.e.ShadersStoreWGSL[B]=O);const r={name:B,shader:O}}}]);