"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[29],{13422:(q,f,j)=>{j.r(f),j.d(f,{_BasisTextureLoader:()=>O});var d,g=j(10992),h=j(11438),L=j(11090);function Q(){const q=0,f=1,j=2,d=3,g=6,h=8,L=9,Q=10,H=14;let r=null;function u(q,f,j,d,g){const h=q.getImageTranscodedSizeInBytes(f,j,d);let L=new Uint8Array(h);if(!q.transcodeImage(L,f,j,d,1,0))return null;if(g){L=function(q,f,j,d){const g=new Uint16Array(4),h=new Uint16Array(j*d),L=j/4,Q=d/4;for(let H=0;H<Q;H++)for(let d=0;d<L;d++){const Q=f+8*(H*L+d);g[0]=q[Q]|q[Q+1]<<8,g[1]=q[Q+2]|q[Q+3]<<8,g[2]=(2*(31&g[0])+1*(31&g[1]))/3|(2*(2016&g[0])+1*(2016&g[1]))/3&2016|(2*(63488&g[0])+1*(63488&g[1]))/3&63488,g[3]=(2*(31&g[1])+1*(31&g[0]))/3|(2*(2016&g[1])+1*(2016&g[0]))/3&2016|(2*(63488&g[1])+1*(63488&g[0]))/3&63488;for(let f=0;f<4;f++){const L=q[Q+4+f];let r=(4*H+f)*j+4*d;h[r++]=g[3&L],h[r++]=g[L>>2&3],h[r++]=g[L>>4&3],h[r++]=g[L>>6&3]}}return h}(L,0,q.getImageWidth(f,j)+3&-4,q.getImageHeight(f,j)+3&-4)}return L}onmessage=X=>{if("init"===X.data.action){if(X.data.url)try{importScripts(X.data.url)}catch(z){postMessage({action:"error",error:z})}r||(r=BASIS({wasmBinary:X.data.wasmBinary})),null!==r&&r.then((q=>{BASIS=q,q.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===X.data.action){const r=X.data.config,z=X.data.imageData,B=new BASIS.BasisFile(z),D=function(q){const f=q.getHasAlpha(),j=q.getNumImages(),d=[];for(let g=0;g<j;g++){const f={levels:[]},j=q.getNumLevels(g);for(let d=0;d<j;d++){const j={width:q.getImageWidth(g,d),height:q.getImageHeight(g,d)};f.levels.push(j)}d.push(f)}return{Rf:f,images:d}}(B);let i=X.data.ignoreSupportedFormats?null:function(r,u){let X=null;r.supportedCompressionFormats&&(X=r.supportedCompressionFormats.astc?Q:r.supportedCompressionFormats.bc7?g:r.supportedCompressionFormats.s3tc?u.Rf?d:j:r.supportedCompressionFormats.pvrtc?u.Rf?L:h:r.supportedCompressionFormats.etc2?f:r.supportedCompressionFormats.etc1?q:H);return X}(X.data.config,D),t=!1;null===i&&(t=!0,i=D.Rf?d:j);let O=!0;B.startTranscoding()||(O=!1);const N=[];for(let q=0;q<D.images.length&&O;q++){const f=D.images[q];if(void 0===r.loadSingleImage||r.loadSingleImage===q){let j=f.levels.length;!1===r.loadMipmapLevels&&(j=1);for(let d=0;d<j;d++){const j=f.levels[d],g=u(B,q,d,i,t);if(!g){O=!1;break}j.transcodedPixels=g,N.push(j.transcodedPixels.buffer)}}}B.close(),B.delete(),t&&(i=-1),O?postMessage({action:"transcode",success:O,id:X.data.id,fileInfo:D,format:i},N):postMessage({action:"transcode",success:O,id:X.data.id})}}}!function(q){q[q.cTFETC1=0]="cTFETC1",q[q.cTFETC2=1]="cTFETC2",q[q.cTFBC1=2]="cTFBC1",q[q.cTFBC3=3]="cTFBC3",q[q.cTFBC4=4]="cTFBC4",q[q.cTFBC5=5]="cTFBC5",q[q.cTFBC7=6]="cTFBC7",q[q.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",q[q.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",q[q.cTFASTC_4x4=10]="cTFASTC_4x4",q[q.cTFATC_RGB=11]="cTFATC_RGB",q[q.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",q[q.cTFRGBA32=13]="cTFRGBA32",q[q.cTFRGB565=14]="cTFRGB565",q[q.cTFBGR565=15]="cTFBGR565",q[q.cTFRGBA4444=16]="cTFRGBA4444",q[q.cTFFXT1_RGB=17]="cTFFXT1_RGB",q[q.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",q[q.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",q[q.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",q[q.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(d||(d={}));const H={JSModuleURL:`${g.h._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${g.h._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let r=null,u=null,X=0;const z=async()=>(r||(r=new Promise(((q,f)=>{u?q(u):g.h.LoadFileAsync(g.h.GetBabylonScriptURL(H.WasmModuleURL)).then((j=>{if("function"!==typeof URL)return f("Basis transcoder requires an environment with a URL constructor");const d=URL.createObjectURL(new Blob([`(${Q})()`],{type:"application/javascript"}));u=new Worker(d),async function(q,f,j){return await new Promise(((d,h)=>{const L=f=>{"init"===f.data.action?(q.removeEventListener("message",L),d(q)):"error"===f.data.action&&h(f.data.error||"error initializing worker")};q.addEventListener("message",L),q.postMessage({action:"init",url:j?g.h.GetBabylonScriptURL(j):void 0,wasmBinary:f},[f])}))}(u,j,H.JSModuleURL).then(q,f)})).catch(f)}))),await r),B=async(q,f)=>{const j=q instanceof ArrayBuffer?new Uint8Array(q):q;return await new Promise(((q,d)=>{z().then((()=>{const g=X++,h=f=>{"transcode"===f.data.action&&f.data.id===g&&(u.removeEventListener("message",h),f.data.success?q(f.data):d("Transcode is not supported on this device"))};u.addEventListener("message",h);const L=new Uint8Array(j.byteLength);L.set(new Uint8Array(j.buffer,j.byteOffset,j.byteLength)),u.postMessage({action:"transcode",id:g,imageData:L,config:f,ignoreSupportedFormats:false},[L.buffer])}),(q=>{d(q)}))}))},D=(q,f)=>{var j;let d=null===(j=f._gl)||void 0===j?void 0:j.TEXTURE_2D;var g;q.isCube&&(d=null===(g=f._gl)||void 0===g?void 0:g.TEXTURE_CUBE_MAP);f._bindTextureDirectly(d,q,!0)},i=(q,f)=>{const j=q.getEngine();for(let Q=0;Q<f.fileInfo.images.length;Q++){const H=f.fileInfo.images[Q].levels[0];if(q._invertVScale=q.invertY,-1===f.format||f.format===d.cTFRGB565)if(q.type=10,q.format=4,!j._features.basisNeedsPOT||Math.log2(H.width)%1===0&&Math.log2(H.height)%1===0)q._invertVScale=!q.invertY,q.width=H.width+3&-4,q.height=H.height+3&-4,q.samplingMode=2,D(q,j),j._uploadDataToTextureDirectly(q,new Uint16Array(H.transcodedPixels.buffer),Q,0,4,!0);else{const f=new L.c(j,2);q._invertVScale=q.invertY,f.type=10,f.format=4,f.width=H.width+3&-4,f.height=H.height+3&-4,D(f,j),j._uploadDataToTextureDirectly(f,new Uint16Array(H.transcodedPixels.buffer),Q,0,4,!0),j._rescaleTexture(f,q,j.scenes[0],j._getInternalFormat(4),(()=>{j._releaseTexture(f),D(q,j)}))}else{q.width=H.width,q.height=H.height,q.generateMipMaps=f.fileInfo.images[Q].levels.length>1;const d=t.GetInternalFormatFromBasisFormat(f.format,j);q.format=d,D(q,j);const L=f.fileInfo.images[Q].levels;for(let f=0;f<L.length;f++){const g=L[f];j._uploadCompressedDataToTextureDirectly(q,d,g.width,g.height,g.transcodedPixels,Q,f)}!j._features.basisNeedsPOT||Math.log2(q.width)%1===0&&Math.log2(q.height)%1===0||(g.h.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),q._cachedWrapU=h.e.CLAMP_ADDRESSMODE,q._cachedWrapV=h.e.CLAMP_ADDRESSMODE)}}},t={JSModuleURL:H.JSModuleURL,WasmModuleURL:H.WasmModuleURL,GetInternalFormatFromBasisFormat:(q,f)=>{let j;switch(q){case d.cTFETC1:j=36196;break;case d.cTFBC1:j=33776;break;case d.cTFBC4:j=33779;break;case d.cTFASTC_4x4:j=37808;break;case d.cTFETC2:j=37496;break;case d.cTFBC7:j=36492}if(void 0===j)throw"The chosen Basis transcoder format is not currently supported";return j},TranscodeAsync:B,LoadTextureFromTranscodeResult:i};Object.defineProperty(t,"JSModuleURL",{get:function(){return H.JSModuleURL},set:function(q){H.JSModuleURL=q}}),Object.defineProperty(t,"WasmModuleURL",{get:function(){return H.WasmModuleURL},set:function(q){H.WasmModuleURL=q}});class O{constructor(){this.supportCascades=!1}loadCubeData(q,f,j,d,h){if(Array.isArray(q))return;const L=f.getEngine().getCaps(),Q={supportedCompressionFormats:{etc1:!!L.etc1,s3tc:!!L.s3tc,pvrtc:!!L.pvrtc,etc2:!!L.etc2,astc:!!L.astc,bc7:!!L.bptc}};B(q,Q).then((q=>{const j=q.fileInfo.images[0].levels.length>1&&f.generateMipMaps;i(f,q),f.getEngine()._setCubeMapTextureParams(f,j),f.isReady=!0,f.onLoadedObservable.notifyObservers(f),f.onLoadedObservable.clear(),d&&d()})).catch((q=>{g.h.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),f.isReady=!0,h&&h(q)}))}loadData(q,f,j){const d=f.getEngine().getCaps(),h={supportedCompressionFormats:{etc1:!!d.etc1,s3tc:!!d.s3tc,pvrtc:!!d.pvrtc,etc2:!!d.etc2,astc:!!d.astc,bc7:!!d.bptc}};B(q,h).then((q=>{const d=q.fileInfo.images[0].levels[0],g=q.fileInfo.images[0].levels.length>1&&f.generateMipMaps;j(d.width,d.height,g,-1!==q.format,(()=>{i(f,q)}))})).catch((q=>{g.h.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),g.h.Warn(`Failed to transcode Basis file: ${q}`),j(0,0,!1,!1,(()=>{}),!0)}))}}}}]);