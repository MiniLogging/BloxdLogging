"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[29],{13255:(w,E,G)=>{var P=G(11626),h=G(11518),B=G(11547),y=G(11650),x=G(11578),U=G(11635);x.b.prototype._partialLoadFile=function(w,E,G,P){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(w,(w=>{G[E]=w,G._internalCount++,6===G._internalCount&&P(G)}),void 0,void 0,!0,((w,E)=>{h&&w&&h(w.status+" "+w.statusText,E)}))},x.b.prototype._cascadeLoadFiles=function(w,E,G){let P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const h=[];h._internalCount=0;for(let B=0;B<6;B++)this._partialLoadFile(G[B],B,h,E,P)},x.b.prototype._cascadeLoadImgs=function(w,E,G,P){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,B=arguments.length>5?arguments[5]:void 0;const y=[];y._internalCount=0;for(let x=0;x<6;x++)this._partialLoadImg(P[x],x,y,w,E,G,h,B)},x.b.prototype._partialLoadImg=function(w,E,G,P,h,x){let U=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,l=arguments.length>7?arguments[7]:void 0;const i=(0,y.e)();(0,B.p)(w,(w=>{G[E]=w,G._internalCount++,P&&P.removePendingData(i),6===G._internalCount&&x&&x(h,G)}),((w,E)=>{P&&P.removePendingData(i),U&&U(w,E)}),P?P.offlineProvider:null,l),P&&P.addPendingData(i)},x.b.prototype.createCubeTextureBase=function(w,E,G,B){let y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,x=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,l=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,O=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,V=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,a=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,Q=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,c=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,Z=arguments.length>14&&void 0!==arguments[14]&&arguments[14],J=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const d=a||new P.e(this,7);d.isCube=!0,d.url=w,d.generateMipMaps=!B,d._lodGenerationScale=u,d._lodGenerationOffset=V,d._useSRGBBuffer=!!Z&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!B),d!==a&&(d.label=w.substring(0,60)),this._doNotHandleContextLost||(d._extension=i,d._files=G,d._buffer=J);const K=w;this._transformTextureUrl&&!a&&(w=this._transformTextureUrl(w));const t=i??function(w){const E=w.split("?")[0],G=E.lastIndexOf(".");return G>-1?E.substring(G).toLowerCase():""}(w),q=(0,U.d)(t),W=(w,E)=>{d.dispose(),x?x(w,E):w&&h.e.Warn(w)},T=(P,x)=>{w===K?P&&W(P.status+" "+P.statusText,x):(h.e.Warn(`Failed to load ${w}, falling back to the ${K}`),this.createCubeTextureBase(K,E,G,!!B,y,W,l,i,O,u,V,d,Q,c,Z,J))};if(q)q.then((P=>{const h=w=>{Q&&Q(d,w),P.loadCubeData(w,d,O,y,((w,E)=>{W(w,E)}))};J?h(J):G&&6===G.length?P.supportCascades?this._cascadeLoadFiles(E,(w=>h(w.map((w=>new Uint8Array(w))))),G,W):W("Textures type does not support cascades."):this._loadFile(w,(w=>h(new Uint8Array(w))),void 0,void 0,!0,T)}));else{if(!G||0===G.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(E,d,((w,E)=>{c&&c(w,E)}),G,W)}return this._internalTexturesCache.push(d),d}},12177:(w,E,G)=>{G.d(E,{e:()=>l});var P=G(11679),h=G(11689),B=G(11863),y=G(11681),x=G(11716);class U{constructor(w,E,G,P){this.name=w,this.worldAxisForNormal=E,this.worldAxisForFileX=G,this.worldAxisForFileY=P}}class l{static ConvertCubeMapTextureToSphericalPolynomial(w){var E;if(!w.isCube)return null;null===(E=w.Ww())||void 0===E||E.getEngine().flushFramebuffer();const G=w.getSize().width,P=w.readPixels(0,void 0,void 0,!1),h=w.readPixels(1,void 0,void 0,!1);let B,y;w.isRenderTarget?(B=w.readPixels(3,void 0,void 0,!1),y=w.readPixels(2,void 0,void 0,!1)):(B=w.readPixels(2,void 0,void 0,!1),y=w.readPixels(3,void 0,void 0,!1));const x=w.readPixels(4,void 0,void 0,!1),U=w.readPixels(5,void 0,void 0,!1),l=w.gammaSpace;let i=0;return 1!=w.textureType&&2!=w.textureType||(i=1),new Promise((w=>{Promise.all([h,P,B,y,x,U]).then((E=>{let[P,h,B,y,x,U]=E;const O={size:G,right:h,left:P,up:B,down:y,front:x,back:U,format:5,type:i,gammaSpace:l};w(this.ConvertCubeMapToSphericalPolynomial(O))}))}))}static _AreaElement(w,E){return Math.atan2(w*E,Math.sqrt(w*w+E*E+1))}static ConvertCubeMapToSphericalPolynomial(w){const E=new B.c;let G=0;const P=2/w.size,U=P,l=.5*P,i=l-1;for(let B=0;B<6;B++){const O=this._FileFaces[B],u=w[O.name];let V=i;const a=5===w.format?4:3;for(let B=0;B<w.size;B++){let Q=i;for(let U=0;U<w.size;U++){const i=O.worldAxisForFileX.scale(Q).add(O.worldAxisForFileY.scale(V)).add(O.worldAxisForNormal);i.normalize();const c=this._AreaElement(Q-l,V-l)-this._AreaElement(Q-l,V+l)-this._AreaElement(Q+l,V-l)+this._AreaElement(Q+l,V+l);let Z=u[B*w.size*a+U*a+0],J=u[B*w.size*a+U*a+1],d=u[B*w.size*a+U*a+2];isNaN(Z)&&(Z=0),isNaN(J)&&(J=0),isNaN(d)&&(d=0),0===w.type&&(Z/=255,J/=255,d/=255),w.gammaSpace&&(Z=Math.pow((0,h.Clamp)(Z),y.l),J=Math.pow((0,h.Clamp)(J),y.l),d=Math.pow((0,h.Clamp)(d),y.l));const K=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const w=Math.max(Z,J,d);if(w>K){const E=K/w;Z*=E,J*=E,d*=E}}else Z=(0,h.Clamp)(Z,0,K),J=(0,h.Clamp)(J,0,K),d=(0,h.Clamp)(d,0,K);const t=new x.dE(Z,J,d);E.addLight(i,t,c),G+=c,Q+=P}V+=U}}const O=6*(4*Math.PI)/6/G;return E.scaleInPlace(O),E.convertIncidentRadianceToIrradiance(),E.convertIrradianceToLambertianRadiance(),B.d.FromHarmonics(E)}}l._FileFaces=[new U("right",new P.QE(1,0,0),new P.QE(0,0,-1),new P.QE(0,-1,0)),new U("left",new P.QE(-1,0,0),new P.QE(0,0,1),new P.QE(0,-1,0)),new U("up",new P.QE(0,1,0),new P.QE(1,0,0),new P.QE(0,0,1)),new U("down",new P.QE(0,-1,0),new P.QE(1,0,0),new P.QE(0,0,-1)),new U("front",new P.QE(0,0,1),new P.QE(1,0,0),new P.QE(0,-1,0)),new U("back",new P.QE(0,0,-1),new P.QE(-1,0,0),new P.QE(0,-1,0))],l.MAX_HDRI_VALUE=4096,l.PRESERVE_CLAMPED_COLORS=!1},14002:(w,E,G)=>{G.d(E,{DDSTools:()=>a});var P=G(11689),h=G(11518),B=G(12177),y=G(11890);G(13255);const x=131072,U=131072;function l(w){return w.charCodeAt(0)+(w.charCodeAt(1)<<8)+(w.charCodeAt(2)<<16)+(w.charCodeAt(3)<<24)}const i=l("DXT1"),O=l("DXT3"),u=l("DXT5"),V=l("DX10");class a{static GetDDSInfo(w){const E=new Int32Array(w.buffer,w.byteOffset,31),G=new Int32Array(w.buffer,w.byteOffset,35);let P=1;E[2]&x&&(P=Math.max(1,E[7]));const h=E[21],B=h===V?G[32]:0;let y=0;switch(h){case 113:y=2;break;case 116:y=1;break;case V:if(10===B){y=2;break}if(2===B){y=1;break}}return{width:E[4],height:E[3],mipmapCount:P,isFourCC:4===(4&E[20]),isRGB:64===(64&E[20]),isLuminance:(E[20]&U)===U,isCube:512===(512&E[28]),isCompressed:h===i||h===O||h===u,dxgiFormat:B,textureType:y}}static _GetHalfFloatAsFloatRGBAArrayBuffer(w,E,G,P,h,B){const x=new Float32Array(P),U=new Uint16Array(h,G);let l=0;for(let i=0;i<E;i++)for(let E=0;E<w;E++){const G=4*(E+i*w);x[l]=(0,y.h)(U[G]),x[l+1]=(0,y.h)(U[G+1]),x[l+2]=(0,y.h)(U[G+2]),a.StoreLODInAlphaChannel?x[l+3]=B:x[l+3]=(0,y.h)(U[G+3]),l+=4}return x}static _GetHalfFloatRGBAArrayBuffer(w,E,G,P,h,B){if(a.StoreLODInAlphaChannel){const x=new Uint16Array(P),U=new Uint16Array(h,G);let l=0;for(let G=0;G<E;G++)for(let E=0;E<w;E++){const P=4*(E+G*w);x[l]=U[P],x[l+1]=U[P+1],x[l+2]=U[P+2],x[l+3]=(0,y.o)(B),l+=4}return x}return new Uint16Array(h,G,P)}static _GetFloatRGBAArrayBuffer(w,E,G,P,h,B){if(a.StoreLODInAlphaChannel){const y=new Float32Array(P),x=new Float32Array(h,G);let U=0;for(let G=0;G<E;G++)for(let E=0;E<w;E++){const P=4*(E+G*w);y[U]=x[P],y[U+1]=x[P+1],y[U+2]=x[P+2],y[U+3]=B,U+=4}return y}return new Float32Array(h,G,P)}static _GetFloatAsHalfFloatRGBAArrayBuffer(w,E,G,P,h,B){const x=new Uint16Array(P),U=new Float32Array(h,G);let l=0;for(let i=0;i<E;i++)for(let E=0;E<w;E++)x[l]=(0,y.o)(U[l]),x[l+1]=(0,y.o)(U[l+1]),x[l+2]=(0,y.o)(U[l+2]),a.StoreLODInAlphaChannel?x[l+3]=(0,y.o)(B):x[l+3]=(0,y.o)(U[l+3]),l+=4;return x}static _GetFloatAsUIntRGBAArrayBuffer(w,E,G,h,B,y){const x=new Uint8Array(h),U=new Float32Array(B,G);let l=0;for(let i=0;i<E;i++)for(let E=0;E<w;E++){const G=4*(E+i*w);x[l]=255*(0,P.Clamp)(U[G]),x[l+1]=255*(0,P.Clamp)(U[G+1]),x[l+2]=255*(0,P.Clamp)(U[G+2]),a.StoreLODInAlphaChannel?x[l+3]=y:x[l+3]=255*(0,P.Clamp)(U[G+3]),l+=4}return x}static _GetHalfFloatAsUIntRGBAArrayBuffer(w,E,G,h,B,x){const U=new Uint8Array(h),l=new Uint16Array(B,G);let i=0;for(let O=0;O<E;O++)for(let E=0;E<w;E++){const G=4*(E+O*w);U[i]=255*(0,P.Clamp)((0,y.h)(l[G])),U[i+1]=255*(0,P.Clamp)((0,y.h)(l[G+1])),U[i+2]=255*(0,P.Clamp)((0,y.h)(l[G+2])),a.StoreLODInAlphaChannel?U[i+3]=x:U[i+3]=255*(0,P.Clamp)((0,y.h)(l[G+3])),i+=4}return U}static _GetRGBAArrayBuffer(w,E,G,P,h,B,y,x,U){const l=new Uint8Array(P),i=new Uint8Array(h,G);let O=0;for(let u=0;u<E;u++)for(let E=0;E<w;E++){const G=4*(E+u*w);l[O]=i[G+B],l[O+1]=i[G+y],l[O+2]=i[G+x],l[O+3]=i[G+U],O+=4}return l}static _ExtractLongWordOrder(w){return 0===w||255===w||-16777216===w?0:1+a._ExtractLongWordOrder(w>>8)}static _GetRGBArrayBuffer(w,E,G,P,h,B,y,x){const U=new Uint8Array(P),l=new Uint8Array(h,G);let i=0;for(let O=0;O<E;O++)for(let E=0;E<w;E++){const G=3*(E+O*w);U[i]=l[G+B],U[i+1]=l[G+y],U[i+2]=l[G+x],i+=3}return U}static _GetLuminanceArrayBuffer(w,E,G,P,h){const B=new Uint8Array(P),y=new Uint8Array(h,G);let x=0;for(let U=0;U<E;U++)for(let E=0;E<w;E++){const G=E+U*w;B[x]=y[G],x++}return B}static UploadDDSLevels(w,E,G,P,y,U){let l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,Q=arguments.length>7?arguments[7]:void 0,c=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],Z=null;P.sphericalPolynomial&&(Z=[]);const J=!!w.getCaps().s3tc;E.generateMipMaps=y;const d=new Int32Array(G.buffer,G.byteOffset,31);let K,t,q,W,T,I,j,g=0,o=0,f=1;if(542327876!==d[0])return void h.e.Error("Invalid magic number in DDS header");if(!P.isFourCC&&!P.isRGB&&!P.isLuminance)return void h.e.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(P.isCompressed&&!J)return void h.e.Error("Compressed textures are not supported on this platform.");let k=d[22];W=d[1]+4;let N=!1;if(P.isFourCC)switch(K=d[21],K){case i:f=8,o=33777;break;case O:f=16,o=33778;break;case u:f=16,o=33779;break;case 113:N=!0,k=64;break;case 116:N=!0,k=128;break;case V:{W+=20;let w=!1;switch(P.dxgiFormat){case 10:N=!0,k=64,w=!0;break;case 2:N=!0,k=128,w=!0;break;case 88:P.isRGB=!0,P.isFourCC=!1,k=32,w=!0}if(w)break}default:return void h.e.Error(["Unsupported FourCC code:",(v=K,String.fromCharCode(255&v,v>>8&255,v>>16&255,v>>24&255))])}var v;const C=a._ExtractLongWordOrder(d[23]),s=a._ExtractLongWordOrder(d[24]),F=a._ExtractLongWordOrder(d[25]),M=a._ExtractLongWordOrder(d[26]);N&&(o=w._getRGBABufferInternalSizedFormat(P.textureType)),I=1,d[2]&x&&!1!==y&&(I=Math.max(1,d[7]));const p=Q||0,D=w.getCaps();for(let h=p;h<U;h++){for(t=d[4],q=d[3],j=0;j<I;++j){if(-1===l||l===j){const B=-1===l?j:0;if(!P.isCompressed&&P.isFourCC){E.format=5,g=t*q*4;let P=null;if(w._badOS||w._badDesktopOS||!D.textureHalfFloat&&!D.textureFloat)128===k?(P=a._GetFloatAsUIntRGBAArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,B),Z&&0==B&&Z.push(a._GetFloatRGBAArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,B))):64===k&&(P=a._GetHalfFloatAsUIntRGBAArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,B),Z&&0==B&&Z.push(a._GetHalfFloatAsFloatRGBAArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,B))),E.type=0;else{const w=D.textureFloat&&(c&&D.textureFloatLinearFiltering||!c),h=D.textureHalfFloat&&(c&&D.textureHalfFloatLinearFiltering||!c),y=(128===k||64===k&&!h)&&w?1:(64===k||128===k&&!w)&&h?2:0;let x,U=null;if(128===k)switch(y){case 1:x=a._GetFloatRGBAArrayBuffer,U=null;break;case 2:x=a._GetFloatAsHalfFloatRGBAArrayBuffer,U=a._GetFloatRGBAArrayBuffer;break;case 0:x=a._GetFloatAsUIntRGBAArrayBuffer,U=a._GetFloatRGBAArrayBuffer}else switch(y){case 1:x=a._GetHalfFloatAsFloatRGBAArrayBuffer,U=null;break;case 2:x=a._GetHalfFloatRGBAArrayBuffer,U=a._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:x=a._GetHalfFloatAsUIntRGBAArrayBuffer,U=a._GetHalfFloatAsFloatRGBAArrayBuffer}E.type=y,P=x(t,q,G.byteOffset+W,g,G.buffer,B),Z&&0==B&&Z.push(U?U(t,q,G.byteOffset+W,g,G.buffer,B):P)}P&&w._uploadDataToTextureDirectly(E,P,h,B)}else if(P.isRGB)E.type=0,24===k?(E.format=4,g=t*q*3,T=a._GetRGBArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,C,s,F),w._uploadDataToTextureDirectly(E,T,h,B)):(E.format=5,g=t*q*4,T=a._GetRGBAArrayBuffer(t,q,G.byteOffset+W,g,G.buffer,C,s,F,M),w._uploadDataToTextureDirectly(E,T,h,B));else if(P.isLuminance){const P=w._getUnpackAlignement(),y=t;g=Math.floor((t+P-1)/P)*P*(q-1)+y,T=a._GetLuminanceArrayBuffer(t,q,G.byteOffset+W,g,G.buffer),E.format=1,E.type=0,w._uploadDataToTextureDirectly(E,T,h,B)}else g=Math.max(4,t)/4*Math.max(4,q)/4*f,T=new Uint8Array(G.buffer,G.byteOffset+W,g),E.type=0,w._uploadCompressedDataToTextureDirectly(E,o,t,q,T,h,B)}W+=k?t*q*(k/8):g,t*=.5,q*=.5,t=Math.max(1,t),q=Math.max(1,q)}if(void 0!==Q)break}Z&&Z.length>0?P.sphericalPolynomial=B.e.ConvertCubeMapToSphericalPolynomial({size:d[4],right:Z[0],left:Z[1],up:Z[2],down:Z[3],front:Z[4],back:Z[5],format:5,type:1,gammaSpace:!1}):P.sphericalPolynomial=void 0}}a.StoreLODInAlphaChannel=!1}}]);