"use strict";(self.v2pspxy442l=self.v2pspxy442l||[]).push([[29],{14107:(l,a,N)=>{var U=N(12373),c=N(12268),K=N(12298),Z=N(12403),w=N(12336),S=N(12386);w.c.prototype._partialLoadFile=function(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this._loadFile(l,(l=>{N[a]=l,N._internalCount++,6===N._internalCount&&U(N)}),void 0,void 0,!0,((l,a)=>{c&&l&&c(l.status+" "+l.statusText,a)}))},w.c.prototype._cascadeLoadFiles=function(l,a,N){let U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const c=[];c._internalCount=0;for(let K=0;K<6;K++)this._partialLoadFile(N[K],K,c,a,U)},w.c.prototype._cascadeLoadImgs=function(l,a,N,U){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,K=arguments.length>5?arguments[5]:void 0;const Z=[];Z._internalCount=0;for(let w=0;w<6;w++)this._partialLoadImg(U[w],w,Z,l,a,N,c,K)},w.c.prototype._partialLoadImg=function(l,a,N,U,c,w){let S=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,T=arguments.length>7?arguments[7]:void 0;const J=(0,Z.b)();(0,K.s)(l,(l=>{N[a]=l,N._internalCount++,U&&U.removePendingData(J),6===N._internalCount&&w&&w(c,N)}),((l,a)=>{U&&U.removePendingData(J),S&&S(l,a)}),U?U.offlineProvider:null,T),U&&U.addPendingData(J)},w.c.prototype.createCubeTextureBase=function(l,a,N,K){let Z=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,w=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,T=arguments.length>6?arguments[6]:void 0,J=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,n=arguments.length>8&&void 0!==arguments[8]&&arguments[8],y=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,H=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,u=arguments.length>11&&void 0!==arguments[11]?arguments[11]:null,W=arguments.length>12&&void 0!==arguments[12]?arguments[12]:null,B=arguments.length>13&&void 0!==arguments[13]?arguments[13]:null,Y=arguments.length>14&&void 0!==arguments[14]&&arguments[14],C=arguments.length>15&&void 0!==arguments[15]?arguments[15]:null;const M=u||new U.c(this,7);M.isCube=!0,M.url=l,M.generateMipMaps=!K,M._lodGenerationScale=y,M._lodGenerationOffset=H,M._useSRGBBuffer=!!Y&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!K),M!==u&&(M.label=l.substring(0,60)),this._doNotHandleContextLost||(M._extension=J,M._files=N,M._buffer=C);const A=l;this._transformTextureUrl&&!u&&(l=this._transformTextureUrl(l));const E=J??function(l){const a=l.split("?")[0],N=a.lastIndexOf(".");return N>-1?a.substring(N).toLowerCase():""}(l),q=(0,S.d)(E),b=(l,a)=>{M.dispose(),w?w(l,a):l&&c.b.Warn(l)},z=(U,w)=>{l===A?U&&b(U.status+" "+U.statusText,w):(c.b.Warn(`Failed to load ${l}, falling back to the ${A}`),this.createCubeTextureBase(A,a,N,!!K,Z,b,T,J,n,y,H,M,W,B,Y,C))};if(q)q.then((U=>{const c=l=>{W&&W(M,l),U.loadCubeData(l,M,n,Z,((l,a)=>{b(l,a)}))};C?c(C):N&&6===N.length?U.supportCascades?this._cascadeLoadFiles(a,(l=>c(l.map((l=>new Uint8Array(l))))),N,b):b("Textures type does not support cascades."):this._loadFile(l,(l=>c(new Uint8Array(l))),void 0,void 0,!0,z)}));else{if(!N||0===N.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(a,M,((l,a)=>{B&&B(l,a)}),N,b)}return this._internalTexturesCache.push(M),M}},12946:(l,a,N)=>{N.d(a,{b:()=>T});var U=N(12447),c=N(12461),K=N(12623),Z=N(12452),w=N(12479);class S{constructor(l,a,N,U){this.name=l,this.worldAxisForNormal=a,this.worldAxisForFileX=N,this.worldAxisForFileY=U}}class T{static ConvertCubeMapTextureToSphericalPolynomial(l){var a;if(!l.isCube)return null;null===(a=l.bl())||void 0===a||a.getEngine().flushFramebuffer();const N=l.getSize().width,U=l.readPixels(0,void 0,void 0,!1),c=l.readPixels(1,void 0,void 0,!1);let K,Z;l.isRenderTarget?(K=l.readPixels(3,void 0,void 0,!1),Z=l.readPixels(2,void 0,void 0,!1)):(K=l.readPixels(2,void 0,void 0,!1),Z=l.readPixels(3,void 0,void 0,!1));const w=l.readPixels(4,void 0,void 0,!1),S=l.readPixels(5,void 0,void 0,!1),T=l.gammaSpace;let J=0;return 1!=l.textureType&&2!=l.textureType||(J=1),new Promise((l=>{Promise.all([c,U,K,Z,w,S]).then((a=>{let[U,c,K,Z,w,S]=a;const n={size:N,right:c,left:U,up:K,down:Z,front:w,back:S,format:5,type:J,gammaSpace:T};l(this.ConvertCubeMapToSphericalPolynomial(n))}))}))}static _AreaElement(l,a){return Math.atan2(l*a,Math.sqrt(l*l+a*a+1))}static ConvertCubeMapToSphericalPolynomial(l){const a=new K.c;let N=0;const U=2/l.size,S=U,T=.5*U,J=T-1;for(let K=0;K<6;K++){const n=this._FileFaces[K],y=l[n.name];let H=J;const u=5===l.format?4:3;for(let K=0;K<l.size;K++){let W=J;for(let S=0;S<l.size;S++){const J=n.worldAxisForFileX.scale(W).add(n.worldAxisForFileY.scale(H)).add(n.worldAxisForNormal);J.normalize();const B=this._AreaElement(W-T,H-T)-this._AreaElement(W-T,H+T)-this._AreaElement(W+T,H-T)+this._AreaElement(W+T,H+T);let Y=y[K*l.size*u+S*u+0],C=y[K*l.size*u+S*u+1],M=y[K*l.size*u+S*u+2];isNaN(Y)&&(Y=0),isNaN(C)&&(C=0),isNaN(M)&&(M=0),0===l.type&&(Y/=255,C/=255,M/=255),l.gammaSpace&&(Y=Math.pow((0,c.Clamp)(Y),Z.k),C=Math.pow((0,c.Clamp)(C),Z.k),M=Math.pow((0,c.Clamp)(M),Z.k));const A=this.MAX_HDRI_VALUE;if(this.PRESERVE_CLAMPED_COLORS){const l=Math.max(Y,C,M);if(l>A){const a=A/l;Y*=a,C*=a,M*=a}}else Y=(0,c.Clamp)(Y,0,A),C=(0,c.Clamp)(C,0,A),M=(0,c.Clamp)(M,0,A);const E=new w.Ca(Y,C,M);a.addLight(J,E,B),N+=B,W+=U}H+=S}}const n=6*(4*Math.PI)/6/N;return a.scaleInPlace(n),a.convertIncidentRadianceToIrradiance(),a.convertIrradianceToLambertianRadiance(),K.g.FromHarmonics(a)}}T._FileFaces=[new S("right",new U.ua(1,0,0),new U.ua(0,0,-1),new U.ua(0,-1,0)),new S("left",new U.ua(-1,0,0),new U.ua(0,0,1),new U.ua(0,-1,0)),new S("up",new U.ua(0,1,0),new U.ua(1,0,0),new U.ua(0,0,1)),new S("down",new U.ua(0,-1,0),new U.ua(1,0,0),new U.ua(0,0,-1)),new S("front",new U.ua(0,0,1),new U.ua(1,0,0),new U.ua(0,-1,0)),new S("back",new U.ua(0,0,-1),new U.ua(-1,0,0),new U.ua(0,-1,0))],T.MAX_HDRI_VALUE=4096,T.PRESERVE_CLAMPED_COLORS=!1},14879:(l,a,N)=>{N.d(a,{DDSTools:()=>u});var U=N(12461),c=N(12268),K=N(12946),Z=N(12668);N(14107);const w=131072,S=131072;function T(l){return l.charCodeAt(0)+(l.charCodeAt(1)<<8)+(l.charCodeAt(2)<<16)+(l.charCodeAt(3)<<24)}const J=T("DXT1"),n=T("DXT3"),y=T("DXT5"),H=T("DX10");class u{static GetDDSInfo(l){const a=new Int32Array(l.buffer,l.byteOffset,31),N=new Int32Array(l.buffer,l.byteOffset,35);let U=1;a[2]&w&&(U=Math.max(1,a[7]));const c=a[21],K=c===H?N[32]:0;let Z=0;switch(c){case 113:Z=2;break;case 116:Z=1;break;case H:if(10===K){Z=2;break}if(2===K){Z=1;break}}return{width:a[4],height:a[3],mipmapCount:U,isFourCC:4===(4&a[20]),isRGB:64===(64&a[20]),isLuminance:(a[20]&S)===S,isCube:512===(512&a[28]),isCompressed:c===J||c===n||c===y,dxgiFormat:K,textureType:Z}}static _GetHalfFloatAsFloatRGBAArrayBuffer(l,a,N,U,c,K){const w=new Float32Array(U),S=new Uint16Array(c,N);let T=0;for(let J=0;J<a;J++)for(let a=0;a<l;a++){const N=4*(a+J*l);w[T]=(0,Z.f)(S[N]),w[T+1]=(0,Z.f)(S[N+1]),w[T+2]=(0,Z.f)(S[N+2]),u.StoreLODInAlphaChannel?w[T+3]=K:w[T+3]=(0,Z.f)(S[N+3]),T+=4}return w}static _GetHalfFloatRGBAArrayBuffer(l,a,N,U,c,K){if(u.StoreLODInAlphaChannel){const w=new Uint16Array(U),S=new Uint16Array(c,N);let T=0;for(let N=0;N<a;N++)for(let a=0;a<l;a++){const U=4*(a+N*l);w[T]=S[U],w[T+1]=S[U+1],w[T+2]=S[U+2],w[T+3]=(0,Z.n)(K),T+=4}return w}return new Uint16Array(c,N,U)}static _GetFloatRGBAArrayBuffer(l,a,N,U,c,K){if(u.StoreLODInAlphaChannel){const Z=new Float32Array(U),w=new Float32Array(c,N);let S=0;for(let N=0;N<a;N++)for(let a=0;a<l;a++){const U=4*(a+N*l);Z[S]=w[U],Z[S+1]=w[U+1],Z[S+2]=w[U+2],Z[S+3]=K,S+=4}return Z}return new Float32Array(c,N,U)}static _GetFloatAsHalfFloatRGBAArrayBuffer(l,a,N,U,c,K){const w=new Uint16Array(U),S=new Float32Array(c,N);let T=0;for(let J=0;J<a;J++)for(let a=0;a<l;a++)w[T]=(0,Z.n)(S[T]),w[T+1]=(0,Z.n)(S[T+1]),w[T+2]=(0,Z.n)(S[T+2]),u.StoreLODInAlphaChannel?w[T+3]=(0,Z.n)(K):w[T+3]=(0,Z.n)(S[T+3]),T+=4;return w}static _GetFloatAsUIntRGBAArrayBuffer(l,a,N,c,K,Z){const w=new Uint8Array(c),S=new Float32Array(K,N);let T=0;for(let J=0;J<a;J++)for(let a=0;a<l;a++){const N=4*(a+J*l);w[T]=255*(0,U.Clamp)(S[N]),w[T+1]=255*(0,U.Clamp)(S[N+1]),w[T+2]=255*(0,U.Clamp)(S[N+2]),u.StoreLODInAlphaChannel?w[T+3]=Z:w[T+3]=255*(0,U.Clamp)(S[N+3]),T+=4}return w}static _GetHalfFloatAsUIntRGBAArrayBuffer(l,a,N,c,K,w){const S=new Uint8Array(c),T=new Uint16Array(K,N);let J=0;for(let n=0;n<a;n++)for(let a=0;a<l;a++){const N=4*(a+n*l);S[J]=255*(0,U.Clamp)((0,Z.f)(T[N])),S[J+1]=255*(0,U.Clamp)((0,Z.f)(T[N+1])),S[J+2]=255*(0,U.Clamp)((0,Z.f)(T[N+2])),u.StoreLODInAlphaChannel?S[J+3]=w:S[J+3]=255*(0,U.Clamp)((0,Z.f)(T[N+3])),J+=4}return S}static _GetRGBAArrayBuffer(l,a,N,U,c,K,Z,w,S){const T=new Uint8Array(U),J=new Uint8Array(c,N);let n=0;for(let y=0;y<a;y++)for(let a=0;a<l;a++){const N=4*(a+y*l);T[n]=J[N+K],T[n+1]=J[N+Z],T[n+2]=J[N+w],T[n+3]=J[N+S],n+=4}return T}static _ExtractLongWordOrder(l){return 0===l||255===l||-16777216===l?0:1+u._ExtractLongWordOrder(l>>8)}static _GetRGBArrayBuffer(l,a,N,U,c,K,Z,w){const S=new Uint8Array(U),T=new Uint8Array(c,N);let J=0;for(let n=0;n<a;n++)for(let a=0;a<l;a++){const N=3*(a+n*l);S[J]=T[N+K],S[J+1]=T[N+Z],S[J+2]=T[N+w],J+=3}return S}static _GetLuminanceArrayBuffer(l,a,N,U,c){const K=new Uint8Array(U),Z=new Uint8Array(c,N);let w=0;for(let S=0;S<a;S++)for(let a=0;a<l;a++){const N=a+S*l;K[w]=Z[N],w++}return K}static UploadDDSLevels(l,a,N,U,Z,S){let T=arguments.length>6&&void 0!==arguments[6]?arguments[6]:-1,W=arguments.length>7?arguments[7]:void 0,B=!(arguments.length>8&&void 0!==arguments[8])||arguments[8],Y=null;U.sphericalPolynomial&&(Y=[]);const C=!!l.getCaps().s3tc;a.generateMipMaps=Z;const M=new Int32Array(N.buffer,N.byteOffset,31);let A,E,q,b,z,I,t,O=0,h=0,i=1;if(542327876!==M[0])return void c.b.Error("Invalid magic number in DDS header");if(!U.isFourCC&&!U.isRGB&&!U.isLuminance)return void c.b.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(U.isCompressed&&!C)return void c.b.Error("Compressed textures are not supported on this platform.");let k=M[22];b=M[1]+4;let Q=!1;if(U.isFourCC)switch(A=M[21],A){case J:i=8,h=33777;break;case n:i=16,h=33778;break;case y:i=16,h=33779;break;case 113:Q=!0,k=64;break;case 116:Q=!0,k=128;break;case H:{b+=20;let l=!1;switch(U.dxgiFormat){case 10:Q=!0,k=64,l=!0;break;case 2:Q=!0,k=128,l=!0;break;case 88:U.isRGB=!0,U.isFourCC=!1,k=32,l=!0}if(l)break}default:return void c.b.Error(["Unsupported FourCC code:",(j=A,String.fromCharCode(255&j,j>>8&255,j>>16&255,j>>24&255))])}var j;const f=u._ExtractLongWordOrder(M[23]),p=u._ExtractLongWordOrder(M[24]),R=u._ExtractLongWordOrder(M[25]),L=u._ExtractLongWordOrder(M[26]);Q&&(h=l._getRGBABufferInternalSizedFormat(U.textureType)),I=1,M[2]&w&&!1!==Z&&(I=Math.max(1,M[7]));const r=W||0,X=l.getCaps();for(let c=r;c<S;c++){for(E=M[4],q=M[3],t=0;t<I;++t){if(-1===T||T===t){const K=-1===T?t:0;if(!U.isCompressed&&U.isFourCC){a.format=5,O=E*q*4;let U=null;if(l._badOS||l._badDesktopOS||!X.textureHalfFloat&&!X.textureFloat)128===k?(U=u._GetFloatAsUIntRGBAArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,K),Y&&0==K&&Y.push(u._GetFloatRGBAArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,K))):64===k&&(U=u._GetHalfFloatAsUIntRGBAArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,K),Y&&0==K&&Y.push(u._GetHalfFloatAsFloatRGBAArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,K))),a.type=0;else{const l=X.textureFloat&&(B&&X.textureFloatLinearFiltering||!B),c=X.textureHalfFloat&&(B&&X.textureHalfFloatLinearFiltering||!B),Z=(128===k||64===k&&!c)&&l?1:(64===k||128===k&&!l)&&c?2:0;let w,S=null;if(128===k)switch(Z){case 1:w=u._GetFloatRGBAArrayBuffer,S=null;break;case 2:w=u._GetFloatAsHalfFloatRGBAArrayBuffer,S=u._GetFloatRGBAArrayBuffer;break;case 0:w=u._GetFloatAsUIntRGBAArrayBuffer,S=u._GetFloatRGBAArrayBuffer}else switch(Z){case 1:w=u._GetHalfFloatAsFloatRGBAArrayBuffer,S=null;break;case 2:w=u._GetHalfFloatRGBAArrayBuffer,S=u._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:w=u._GetHalfFloatAsUIntRGBAArrayBuffer,S=u._GetHalfFloatAsFloatRGBAArrayBuffer}a.type=Z,U=w(E,q,N.byteOffset+b,O,N.buffer,K),Y&&0==K&&Y.push(S?S(E,q,N.byteOffset+b,O,N.buffer,K):U)}U&&l._uploadDataToTextureDirectly(a,U,c,K)}else if(U.isRGB)a.type=0,24===k?(a.format=4,O=E*q*3,z=u._GetRGBArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,f,p,R),l._uploadDataToTextureDirectly(a,z,c,K)):(a.format=5,O=E*q*4,z=u._GetRGBAArrayBuffer(E,q,N.byteOffset+b,O,N.buffer,f,p,R,L),l._uploadDataToTextureDirectly(a,z,c,K));else if(U.isLuminance){const U=l._getUnpackAlignement(),Z=E;O=Math.floor((E+U-1)/U)*U*(q-1)+Z,z=u._GetLuminanceArrayBuffer(E,q,N.byteOffset+b,O,N.buffer),a.format=1,a.type=0,l._uploadDataToTextureDirectly(a,z,c,K)}else O=Math.max(4,E)/4*Math.max(4,q)/4*i,z=new Uint8Array(N.buffer,N.byteOffset+b,O),a.type=0,l._uploadCompressedDataToTextureDirectly(a,h,E,q,z,c,K)}b+=k?E*q*(k/8):O,E*=.5,q*=.5,E=Math.max(1,E),q=Math.max(1,q)}if(void 0!==W)break}Y&&Y.length>0?U.sphericalPolynomial=K.b.ConvertCubeMapToSphericalPolynomial({size:M[4],right:Y[0],left:Y[1],up:Y[2],down:Y[3],front:Y[4],back:Y[5],format:5,type:1,gammaSpace:!1}):U.sphericalPolynomial=void 0}}u.StoreLODInAlphaChannel=!1}}]);