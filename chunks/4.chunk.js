"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[4],{10993:(b,o,l)=>{l.r(o),l.d(o,{_BasisTextureLoader:()=>k});var g,I=l(1262),v=l(1029),W=l(1186);function n(){const b=0,o=1,l=2,g=3,I=6,v=8,W=9,n=10,T=14;let t=null;function A(b,o,l,g,I){const v=b.getImageTranscodedSizeInBytes(o,l,g);let W=new Uint8Array(v);if(!b.transcodeImage(W,o,l,g,1,0))return null;if(I){W=function(b,o,l,g){const I=new Uint16Array(4),v=new Uint16Array(l*g),W=l/4,n=g/4;for(let T=0;T<n;T++)for(let g=0;g<W;g++){const n=o+8*(T*W+g);I[0]=b[n]|b[n+1]<<8,I[1]=b[n+2]|b[n+3]<<8,I[2]=(2*(31&I[0])+1*(31&I[1]))/3|(2*(2016&I[0])+1*(2016&I[1]))/3&2016|(2*(63488&I[0])+1*(63488&I[1]))/3&63488,I[3]=(2*(31&I[1])+1*(31&I[0]))/3|(2*(2016&I[1])+1*(2016&I[0]))/3&2016|(2*(63488&I[1])+1*(63488&I[0]))/3&63488;for(let o=0;o<4;o++){const W=b[n+4+o];let t=(4*T+o)*l+4*g;v[t++]=I[3&W],v[t++]=I[W>>2&3],v[t++]=I[W>>4&3],v[t++]=I[W>>6&3]}}return v}(W,0,b.getImageWidth(o,l)+3&-4,b.getImageHeight(o,l)+3&-4)}return W}onmessage=w=>{if("init"===w.data.action){if(w.data.url)try{importScripts(w.data.url)}catch(C){postMessage({action:"error",error:C})}t||(t=BASIS({wasmBinary:w.data.wasmBinary})),null!==t&&t.then((b=>{BASIS=b,b.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===w.data.action){const t=w.data.config,C=w.data.imageData,U=new BASIS.BasisFile(C),m=function(b){const o=b.getHasAlpha(),l=b.getNumImages(),g=[];for(let I=0;I<l;I++){const o={levels:[]},l=b.getNumLevels(I);for(let g=0;g<l;g++){const l={width:b.getImageWidth(I,g),height:b.getImageHeight(I,g)};o.levels.push(l)}g.push(o)}return{ed:o,images:g}}(U);let N=w.data.ignoreSupportedFormats?null:function(t,A){let w=null;t.supportedCompressionFormats&&(w=t.supportedCompressionFormats.astc?n:t.supportedCompressionFormats.bc7?I:t.supportedCompressionFormats.s3tc?A.ed?g:l:t.supportedCompressionFormats.pvrtc?A.ed?W:v:t.supportedCompressionFormats.etc2?o:t.supportedCompressionFormats.etc1?b:T);return w}(w.data.config,m),x=!1;null===N&&(x=!0,N=m.ed?g:l);let k=!0;U.startTranscoding()||(k=!1);const D=[];for(let b=0;b<m.images.length&&k;b++){const o=m.images[b];if(void 0===t.loadSingleImage||t.loadSingleImage===b){let l=o.levels.length;!1===t.loadMipmapLevels&&(l=1);for(let g=0;g<l;g++){const l=o.levels[g],I=A(U,b,g,N,x);if(!I){k=!1;break}l.transcodedPixels=I,D.push(l.transcodedPixels.buffer)}}}U.close(),U.delete(),x&&(N=-1),k?postMessage({action:"transcode",success:k,id:w.data.id,fileInfo:m,format:N},D):postMessage({action:"transcode",success:k,id:w.data.id})}}}!function(b){b[b.cTFETC1=0]="cTFETC1",b[b.cTFETC2=1]="cTFETC2",b[b.cTFBC1=2]="cTFBC1",b[b.cTFBC3=3]="cTFBC3",b[b.cTFBC4=4]="cTFBC4",b[b.cTFBC5=5]="cTFBC5",b[b.cTFBC7=6]="cTFBC7",b[b.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",b[b.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",b[b.cTFASTC_4x4=10]="cTFASTC_4x4",b[b.cTFATC_RGB=11]="cTFATC_RGB",b[b.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",b[b.cTFRGBA32=13]="cTFRGBA32",b[b.cTFRGB565=14]="cTFRGB565",b[b.cTFBGR565=15]="cTFBGR565",b[b.cTFRGBA4444=16]="cTFRGBA4444",b[b.cTFFXT1_RGB=17]="cTFFXT1_RGB",b[b.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",b[b.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",b[b.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",b[b.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(g||(g={}));const T={JSModuleURL:`${I.c._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${I.c._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let t=null,A=null,w=0;const C=()=>(t||(t=new Promise(((b,o)=>{A?b(A):I.c.LoadFileAsync(I.c.GetBabylonScriptURL(T.WasmModuleURL)).then((l=>{if("function"!==typeof URL)return o("Basis transcoder requires an environment with a URL constructor");const g=URL.createObjectURL(new Blob([`(${n})()`],{type:"application/javascript"}));A=new Worker(g),function(b,o,l){return new Promise(((g,v)=>{const W=o=>{"init"===o.data.action?(b.removeEventListener("message",W),g(b)):"error"===o.data.action&&v(o.data.error||"error initializing worker")};b.addEventListener("message",W),b.postMessage({action:"init",url:l?I.c.GetBabylonScriptURL(l):void 0,wasmBinary:o},[o])}))}(A,l,T.JSModuleURL).then(b,o)})).catch(o)}))),t),U=(b,o)=>{const l=b instanceof ArrayBuffer?new Uint8Array(b):b;return new Promise(((b,g)=>{C().then((()=>{const I=w++,v=o=>{"transcode"===o.data.action&&o.data.id===I&&(A.removeEventListener("message",v),o.data.success?b(o.data):g("Transcode is not supported on this device"))};A.addEventListener("message",v);const W=new Uint8Array(l.byteLength);W.set(new Uint8Array(l.buffer,l.byteOffset,l.byteLength)),A.postMessage({action:"transcode",id:I,imageData:W,config:o,ignoreSupportedFormats:false},[W.buffer])}),(b=>{g(b)}))}))},m=(b,o)=>{var l;let g=null===(l=o._gl)||void 0===l?void 0:l.TEXTURE_2D;var I;b.isCube&&(g=null===(I=o._gl)||void 0===I?void 0:I.TEXTURE_CUBE_MAP);o._bindTextureDirectly(g,b,!0)},N=(b,o)=>{const l=b.getEngine();for(let n=0;n<o.fileInfo.images.length;n++){const T=o.fileInfo.images[n].levels[0];if(b._invertVScale=b.invertY,-1===o.format||o.format===g.cTFRGB565)if(b.type=10,b.format=4,!l._features.basisNeedsPOT||Math.log2(T.width)%1===0&&Math.log2(T.height)%1===0)b._invertVScale=!b.invertY,b.width=T.width+3&-4,b.height=T.height+3&-4,b.samplingMode=2,m(b,l),l._uploadDataToTextureDirectly(b,new Uint16Array(T.transcodedPixels.buffer),n,0,4,!0);else{const o=new W.e(l,2);b._invertVScale=b.invertY,o.type=10,o.format=4,o.width=T.width+3&-4,o.height=T.height+3&-4,m(o,l),l._uploadDataToTextureDirectly(o,new Uint16Array(T.transcodedPixels.buffer),n,0,4,!0),l._rescaleTexture(o,b,l.scenes[0],l._getInternalFormat(4),(()=>{l._releaseTexture(o),m(b,l)}))}else{b.width=T.width,b.height=T.height,b.generateMipMaps=o.fileInfo.images[n].levels.length>1;const g=x.GetInternalFormatFromBasisFormat(o.format,l);b.format=g,m(b,l),o.fileInfo.images[n].levels.forEach(((o,I)=>{l._uploadCompressedDataToTextureDirectly(b,g,o.width,o.height,o.transcodedPixels,n,I)})),!l._features.basisNeedsPOT||Math.log2(b.width)%1===0&&Math.log2(b.height)%1===0||(I.c.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),b._cachedWrapU=v.d.CLAMP_ADDRESSMODE,b._cachedWrapV=v.d.CLAMP_ADDRESSMODE)}}},x={JSModuleURL:T.JSModuleURL,WasmModuleURL:T.WasmModuleURL,GetInternalFormatFromBasisFormat:(b,o)=>{let l;switch(b){case g.cTFETC1:l=36196;break;case g.cTFBC1:l=33776;break;case g.cTFBC4:l=33779;break;case g.cTFASTC_4x4:l=37808;break;case g.cTFETC2:l=37496;break;case g.cTFBC7:l=36492}if(void 0===l)throw"The chosen Basis transcoder format is not currently supported";return l},TranscodeAsync:U,LoadTextureFromTranscodeResult:N};Object.defineProperty(x,"JSModuleURL",{get:function(){return T.JSModuleURL},set:function(b){T.JSModuleURL=b}}),Object.defineProperty(x,"WasmModuleURL",{get:function(){return T.WasmModuleURL},set:function(b){T.WasmModuleURL=b}});class k{constructor(){this.supportCascades=!1}loadCubeData(b,o,l,g,v){if(Array.isArray(b))return;const W=o.getEngine().getCaps(),n={supportedCompressionFormats:{etc1:!!W.etc1,s3tc:!!W.s3tc,pvrtc:!!W.pvrtc,etc2:!!W.etc2,astc:!!W.astc,bc7:!!W.bptc}};U(b,n).then((b=>{const l=b.fileInfo.images[0].levels.length>1&&o.generateMipMaps;N(o,b),o.getEngine()._setCubeMapTextureParams(o,l),o.isReady=!0,o.onLoadedObservable.notifyObservers(o),o.onLoadedObservable.clear(),g&&g()})).catch((b=>{I.c.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),o.isReady=!0,v&&v(b)}))}loadData(b,o,l){const g=o.getEngine().getCaps(),v={supportedCompressionFormats:{etc1:!!g.etc1,s3tc:!!g.s3tc,pvrtc:!!g.pvrtc,etc2:!!g.etc2,astc:!!g.astc,bc7:!!g.bptc}};U(b,v).then((b=>{const g=b.fileInfo.images[0].levels[0],I=b.fileInfo.images[0].levels.length>1&&o.generateMipMaps;l(g.width,g.height,I,-1!==b.format,(()=>{N(o,b)}))})).catch((b=>{I.c.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),I.c.Warn(`Failed to transcode Basis file: ${b}`),l(0,0,!1,!1,(()=>{}),!0)}))}}}}]);