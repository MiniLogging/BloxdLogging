"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[116],{15681:(y,S,I)=>{I.r(S),I.d(S,{FlowGraphSetVariableBlock:()=>B});var V=I(12282),i=I(14080),A=I(14033);class B extends i.d{constructor(y){if(super(y),!y.variable&&!y.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(y.variables&&y.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(y.variables)for(const S of y.variables)this.registerDataInput(S,A.c);else this.registerDataInput("value",A.c)}_execute(y,S){var I,V;if(null!==(I=this.config)&&void 0!==I&&I.variables)for(const i of this.config.variables)this._saveVariable(y,i);else this._saveVariable(y,null===(V=this.config)||void 0===V?void 0:V.variable,"value");this.out._activateSignal(y)}_saveVariable(y,S,I){var V;const i=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const B of i){const I=y.assetsContext.animationGroups.find((y=>y.uniqueId==B));if(I)for(const V of I.targetedAnimations)if(V.target===y&&V.animation.targetProperty===S){I.stop();const S=i.indexOf(B);S>-1&&i.splice(S,1),y._setGlobalContextVariable("currentlyRunningAnimationGroups",i);break}}const A=null===(V=this.getDataInput(I||S))||void 0===V?void 0:V.getValue(y);y.setVariable(S,A)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(y){var S;super.serialize(y),y.config.variable=null===(S=this.config)||void 0===S?void 0:S.variable}}(0,V.e)("FlowGraphSetVariableBlock",B)}}]);