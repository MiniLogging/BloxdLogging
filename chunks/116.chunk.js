"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[116],{14530:(R,J,B)=>{B.r(J),B.d(J,{FlowGraphSetVariableBlock:()=>N});var Q=B(11142),h=B(12947),y=B(12894);class N extends h.d{constructor(R){if(super(R),!R.variable&&!R.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(R.variables&&R.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(R.variables)for(const J of R.variables)this.registerDataInput(J,y.e);else this.registerDataInput("value",y.e)}_execute(R,J){var B,Q;if(null!==(B=this.config)&&void 0!==B&&B.variables)for(const h of this.config.variables)this._saveVariable(R,h);else this._saveVariable(R,null===(Q=this.config)||void 0===Q?void 0:Q.variable,"value");this.out._activateSignal(R)}_saveVariable(R,J,B){var Q;const h=R._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const N of h){const B=R.assetsContext.animationGroups.find((R=>R.uniqueId==N));if(B)for(const Q of B.targetedAnimations)if(Q.target===R&&Q.animation.targetProperty===J){B.stop();const J=h.indexOf(N);J>-1&&h.splice(J,1),R._setGlobalContextVariable("currentlyRunningAnimationGroups",h);break}}const y=null===(Q=this.getDataInput(B||J))||void 0===Q?void 0:Q.getValue(R);R.setVariable(J,y)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(R){var J;super.serialize(R),R.config.variable=null===(J=this.config)||void 0===J?void 0:J.variable}}(0,Q.h)("FlowGraphSetVariableBlock",N)}}]);