"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[116],{16004:(r,O,W)=>{W.r(O),W.d(O,{FlowGraphSetVariableBlock:()=>T});var q=W(12560),Q=W(14328),C=W(14274);class T extends Q.d{constructor(r){if(super(r),!r.variable&&!r.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(r.variables&&r.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(r.variables)for(const O of r.variables)this.registerDataInput(O,C.c);else this.registerDataInput("value",C.c)}_execute(r,O){var W,q;if(null!==(W=this.config)&&void 0!==W&&W.variables)for(const Q of this.config.variables)this._saveVariable(r,Q);else this._saveVariable(r,null===(q=this.config)||void 0===q?void 0:q.variable,"value");this.out._activateSignal(r)}_saveVariable(r,O,W){var q;const Q=r._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const T of Q){const W=r.assetsContext.animationGroups.find((r=>r.uniqueId==T));if(W)for(const q of W.targetedAnimations)if(q.target===r&&q.animation.targetProperty===O){W.stop();const O=Q.indexOf(T);O>-1&&Q.splice(O,1),r._setGlobalContextVariable("currentlyRunningAnimationGroups",Q);break}}const C=null===(q=this.getDataInput(W||O))||void 0===q?void 0:q.getValue(r);r.setVariable(O,C)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(r){var O;super.serialize(r),r.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,q.e)("FlowGraphSetVariableBlock",T)}}]);