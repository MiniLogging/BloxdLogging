"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[116],{16164:(a,c,o)=>{o.r(c),o.d(c,{FlowGraphSetVariableBlock:()=>i});var s=o(12776),q=o(14442),t=o(14394);class i extends q.d{constructor(a){if(super(a),!a.variable&&!a.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(a.variables&&a.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(a.variables)for(const c of a.variables)this.registerDataInput(c,t.c);else this.registerDataInput("value",t.c)}_execute(a,c){var o,s;if(null!==(o=this.config)&&void 0!==o&&o.variables)for(const q of this.config.variables)this._saveVariable(a,q);else this._saveVariable(a,null===(s=this.config)||void 0===s?void 0:s.variable,"value");this.out._activateSignal(a)}_saveVariable(a,c,o){var s;const q=a._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const i of q){const o=a.assetsContext.animationGroups.find((a=>a.uniqueId==i));if(o)for(const s of o.targetedAnimations)if(s.target===a&&s.animation.targetProperty===c){o.stop();const c=q.indexOf(i);c>-1&&q.splice(c,1),a._setGlobalContextVariable("currentlyRunningAnimationGroups",q);break}}const t=null===(s=this.getDataInput(o||c))||void 0===s?void 0:s.getValue(a);a.setVariable(c,t)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(a){var c;super.serialize(a),a.config.variable=null===(c=this.config)||void 0===c?void 0:c.variable}}(0,s.d)("FlowGraphSetVariableBlock",i)}}]);