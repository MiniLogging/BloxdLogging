"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[116],{15756:(E,U,g)=>{g.r(U),g.d(U,{FlowGraphSetVariableBlock:()=>S});var N=g(12292),L=g(14100),D=g(14058);class S extends L.e{constructor(E){if(super(E),!E.variable&&!E.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(E.variables&&E.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(E.variables)for(const U of E.variables)this.registerDataInput(U,D.e);else this.registerDataInput("value",D.e)}_execute(E,U){var g,N;if(null!==(g=this.config)&&void 0!==g&&g.variables)for(const L of this.config.variables)this._saveVariable(E,L);else this._saveVariable(E,null===(N=this.config)||void 0===N?void 0:N.variable,"value");this.out._activateSignal(E)}_saveVariable(E,U,g){var N;const L=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const S of L){const g=E.assetsContext.animationGroups.find((E=>E.uniqueId==S));if(g)for(const N of g.targetedAnimations)if(N.target===E&&N.animation.targetProperty===U){g.stop();const U=L.indexOf(S);U>-1&&L.splice(U,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",L);break}}const D=null===(N=this.getDataInput(g||U))||void 0===N?void 0:N.getValue(E);E.setVariable(U,D)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(E){var U;super.serialize(E),E.config.variable=null===(U=this.config)||void 0===U?void 0:U.variable}}(0,N.f)("FlowGraphSetVariableBlock",S)}}]);