"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[116],{15040:(e,E,H)=>{H.r(E),H.d(E,{FlowGraphSetVariableBlock:()=>P});var N=H(11690),u=H(13475),z=H(13415);class P extends u.d{constructor(e){if(super(e),!e.variable&&!e.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(e.variables&&e.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(e.variables)for(const E of e.variables)this.registerDataInput(E,z.b);else this.registerDataInput("value",z.b)}_execute(e,E){var H,N;if(null!==(H=this.config)&&void 0!==H&&H.variables)for(const u of this.config.variables)this._saveVariable(e,u);else this._saveVariable(e,null===(N=this.config)||void 0===N?void 0:N.variable,"value");this.out._activateSignal(e)}_saveVariable(e,E,H){var N;const u=e._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const P of u){const H=e.assetsContext.animationGroups.find((e=>e.uniqueId==P));if(H)for(const N of H.targetedAnimations)if(N.target===e&&N.animation.targetProperty===E){H.stop();const E=u.indexOf(P);E>-1&&u.splice(E,1),e._setGlobalContextVariable("currentlyRunningAnimationGroups",u);break}}const z=null===(N=this.getDataInput(H||E))||void 0===N?void 0:N.getValue(e);e.setVariable(E,z)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(e){var E;super.serialize(e),e.config.variable=null===(E=this.config)||void 0===E?void 0:E.variable}}(0,N.g)("FlowGraphSetVariableBlock",P)}}]);