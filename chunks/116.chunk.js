"use strict";(self["1kjc9ee3uyt"]=self["1kjc9ee3uyt"]||[]).push([[116],{14934:(w,E,G)=>{G.r(E),G.d(E,{FlowGraphSetVariableBlock:()=>y});var P=G(11646),h=G(13330),B=G(13281);class y extends h.d{constructor(w){if(super(w),!w.variable&&!w.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(w.variables&&w.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(w.variables)for(const E of w.variables)this.registerDataInput(E,B.c);else this.registerDataInput("value",B.c)}_execute(w,E){var G,P;if(null!==(G=this.config)&&void 0!==G&&G.variables)for(const h of this.config.variables)this._saveVariable(w,h);else this._saveVariable(w,null===(P=this.config)||void 0===P?void 0:P.variable,"value");this.out._activateSignal(w)}_saveVariable(w,E,G){var P;const h=w._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const y of h){const G=w.assetsContext.animationGroups.find((w=>w.uniqueId==y));if(G)for(const P of G.targetedAnimations)if(P.target===w&&P.animation.targetProperty===E){G.stop();const E=h.indexOf(y);E>-1&&h.splice(E,1),w._setGlobalContextVariable("currentlyRunningAnimationGroups",h);break}}const B=null===(P=this.getDataInput(G||E))||void 0===P?void 0:P.getValue(w);w.setVariable(E,B)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(w){var E;super.serialize(w),w.config.variable=null===(E=this.config)||void 0===E?void 0:E.variable}}(0,P.g)("FlowGraphSetVariableBlock",y)}}]);