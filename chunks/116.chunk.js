"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[116],{16038:(D,h,o)=>{o.r(h),o.d(h,{FlowGraphSetVariableBlock:()=>M});var H=o(12793),g=o(14415),j=o(14362);class M extends g.d{constructor(D){if(super(D),!D.variable&&!D.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(D.variables&&D.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(D.variables)for(const h of D.variables)this.registerDataInput(h,j.c);else this.registerDataInput("value",j.c)}_execute(D,h){var o,H;if(null!==(o=this.config)&&void 0!==o&&o.variables)for(const g of this.config.variables)this._saveVariable(D,g);else this._saveVariable(D,null===(H=this.config)||void 0===H?void 0:H.variable,"value");this.out._activateSignal(D)}_saveVariable(D,h,o){var H;const g=D._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const M of g){const o=D.assetsContext.animationGroups.find((D=>D.uniqueId==M));if(o)for(const H of o.targetedAnimations)if(H.target===D&&H.animation.targetProperty===h){o.stop();const h=g.indexOf(M);h>-1&&g.splice(h,1),D._setGlobalContextVariable("currentlyRunningAnimationGroups",g);break}}const j=null===(H=this.getDataInput(o||h))||void 0===H?void 0:H.getValue(D);D.setVariable(h,j)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(D){var h;super.serialize(D),D.config.variable=null===(h=this.config)||void 0===h?void 0:h.variable}}(0,H.g)("FlowGraphSetVariableBlock",M)}}]);