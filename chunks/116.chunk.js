"use strict";(self.agop5zpabxv=self.agop5zpabxv||[]).push([[116],{15676:(H,u,J)=>{J.r(u),J.d(u,{FlowGraphSetVariableBlock:()=>w});var O=J(12304),U=J(14064),h=J(14018);class w extends U.e{constructor(H){if(super(H),!H.variable&&!H.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(H.variables&&H.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(H.variables)for(const u of H.variables)this.registerDataInput(u,h.d);else this.registerDataInput("value",h.d)}_execute(H,u){var J,O;if(null!==(J=this.config)&&void 0!==J&&J.variables)for(const U of this.config.variables)this._saveVariable(H,U);else this._saveVariable(H,null===(O=this.config)||void 0===O?void 0:O.variable,"value");this.out._activateSignal(H)}_saveVariable(H,u,J){var O;const U=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const w of U){const J=H.assetsContext.animationGroups.find((H=>H.uniqueId==w));if(J)for(const O of J.targetedAnimations)if(O.target===H&&O.animation.targetProperty===u){J.stop();const u=U.indexOf(w);u>-1&&U.splice(u,1),H._setGlobalContextVariable("currentlyRunningAnimationGroups",U);break}}const h=null===(O=this.getDataInput(J||u))||void 0===O?void 0:O.getValue(H);H.setVariable(u,h)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(H){var u;super.serialize(H),H.config.variable=null===(u=this.config)||void 0===u?void 0:u.variable}}(0,O.f)("FlowGraphSetVariableBlock",w)}}]);