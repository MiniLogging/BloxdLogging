"use strict";(self["9x1utqq1axc"]=self["9x1utqq1axc"]||[]).push([[116],{15672:(y,c,A)=>{A.r(c),A.d(c,{FlowGraphSetVariableBlock:()=>p});var l=A(12283),w=A(14036),N=A(13993);class p extends w.e{constructor(y){if(super(y),!y.variable&&!y.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(y.variables&&y.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(y.variables)for(const c of y.variables)this.registerDataInput(c,N.e);else this.registerDataInput("value",N.e)}_execute(y,c){var A,l;if(null!==(A=this.config)&&void 0!==A&&A.variables)for(const w of this.config.variables)this._saveVariable(y,w);else this._saveVariable(y,null===(l=this.config)||void 0===l?void 0:l.variable,"value");this.out._activateSignal(y)}_saveVariable(y,c,A){var l;const w=y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const p of w){const A=y.assetsContext.animationGroups.find((y=>y.uniqueId==p));if(A)for(const l of A.targetedAnimations)if(l.target===y&&l.animation.targetProperty===c){A.stop();const c=w.indexOf(p);c>-1&&w.splice(c,1),y._setGlobalContextVariable("currentlyRunningAnimationGroups",w);break}}const N=null===(l=this.getDataInput(A||c))||void 0===l?void 0:l.getValue(y);y.setVariable(c,N)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(y){var c;super.serialize(y),y.config.variable=null===(c=this.config)||void 0===c?void 0:c.variable}}(0,l.f)("FlowGraphSetVariableBlock",p)}}]);