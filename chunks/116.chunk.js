"use strict";(self["80dd64vgxnn"]=self["80dd64vgxnn"]||[]).push([[116],{15942:(mm,o,u)=>{u.r(o),u.d(o,{FlowGraphSetVariableBlock:()=>r});var f=u(12702),B=u(14308),O=u(14257);class r extends B.d{constructor(mm){if(super(mm),!mm.variable&&!mm.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(mm.variables&&mm.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(mm.variables)for(const o of mm.variables)this.registerDataInput(o,O.b);else this.registerDataInput("value",O.b)}_execute(mm,o){var u,f;if(null!==(u=this.config)&&void 0!==u&&u.variables)for(const B of this.config.variables)this._saveVariable(mm,B);else this._saveVariable(mm,null===(f=this.config)||void 0===f?void 0:f.variable,"value");this.out._activateSignal(mm)}_saveVariable(mm,o,u){var f;const B=mm._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const r of B){const u=mm.assetsContext.animationGroups.find((mm=>mm.uniqueId==r));if(u)for(const f of u.targetedAnimations)if(f.target===mm&&f.animation.targetProperty===o){u.stop();const o=B.indexOf(r);o>-1&&B.splice(o,1),mm._setGlobalContextVariable("currentlyRunningAnimationGroups",B);break}}const O=null===(f=this.getDataInput(u||o))||void 0===f?void 0:f.getValue(mm);mm.setVariable(o,O)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(mm){var o;super.serialize(mm),mm.config.variable=null===(o=this.config)||void 0===o?void 0:o.variable}}(0,f.c)("FlowGraphSetVariableBlock",r)}}]);