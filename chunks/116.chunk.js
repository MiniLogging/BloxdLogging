"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[116],{14606:(o,H,n)=>{n.r(H),n.d(H,{FlowGraphSetVariableBlock:()=>O});var E=n(11140),k=n(12983),g=n(12933);class O extends k.c{constructor(o){if(super(o),!o.variable&&!o.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(o.variables&&o.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(o.variables)for(const H of o.variables)this.registerDataInput(H,g.b);else this.registerDataInput("value",g.b)}_execute(o,H){var n,E;if(null!==(n=this.config)&&void 0!==n&&n.variables)for(const k of this.config.variables)this._saveVariable(o,k);else this._saveVariable(o,null===(E=this.config)||void 0===E?void 0:E.variable,"value");this.out._activateSignal(o)}_saveVariable(o,H,n){var E;const k=o._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const O of k){const n=o.assetsContext.animationGroups.find((o=>o.uniqueId==O));if(n)for(const E of n.targetedAnimations)if(E.target===o&&E.animation.targetProperty===H){n.stop();const H=k.indexOf(O);H>-1&&k.splice(H,1),o._setGlobalContextVariable("currentlyRunningAnimationGroups",k);break}}const g=null===(E=this.getDataInput(n||H))||void 0===E?void 0:E.getValue(o);o.setVariable(H,g)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(o){var H;super.serialize(o),o.config.variable=null===(H=this.config)||void 0===H?void 0:H.variable}}(0,E.e)("FlowGraphSetVariableBlock",O)}}]);