"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[116],{15911:(I,g,b)=>{b.r(g),b.d(g,{FlowGraphSetVariableBlock:()=>M});var e=b(12558),c=b(14320),z=b(14282);class M extends c.c{constructor(I){if(super(I),!I.variable&&!I.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(I.variables&&I.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(I.variables)for(const g of I.variables)this.registerDataInput(g,z.c);else this.registerDataInput("value",z.c)}_execute(I,g){var b,e;if(null!==(b=this.config)&&void 0!==b&&b.variables)for(const c of this.config.variables)this._saveVariable(I,c);else this._saveVariable(I,null===(e=this.config)||void 0===e?void 0:e.variable,"value");this.out._activateSignal(I)}_saveVariable(I,g,b){var e;const c=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const M of c){const b=I.assetsContext.animationGroups.find((I=>I.uniqueId==M));if(b)for(const e of b.targetedAnimations)if(e.target===I&&e.animation.targetProperty===g){b.stop();const g=c.indexOf(M);g>-1&&c.splice(g,1),I._setGlobalContextVariable("currentlyRunningAnimationGroups",c);break}}const z=null===(e=this.getDataInput(b||g))||void 0===e?void 0:e.getValue(I);I.setVariable(g,z)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(I){var g;super.serialize(I),I.config.variable=null===(g=this.config)||void 0===g?void 0:g.variable}}(0,e.g)("FlowGraphSetVariableBlock",M)}}]);