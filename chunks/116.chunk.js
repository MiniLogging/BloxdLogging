"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[116],{15180:(Z,h,V)=>{V.r(h),V.d(h,{FlowGraphSetVariableBlock:()=>K});var v=V(11691),A=V(13512),H=V(13459);class K extends A.b{constructor(Z){if(super(Z),!Z.variable&&!Z.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(Z.variables&&Z.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(Z.variables)for(const h of Z.variables)this.registerDataInput(h,H.c);else this.registerDataInput("value",H.c)}_execute(Z,h){var V,v;if(null!==(V=this.config)&&void 0!==V&&V.variables)for(const A of this.config.variables)this._saveVariable(Z,A);else this._saveVariable(Z,null===(v=this.config)||void 0===v?void 0:v.variable,"value");this.out._activateSignal(Z)}_saveVariable(Z,h,V){var v;const A=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const K of A){const V=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId==K));if(V)for(const v of V.targetedAnimations)if(v.target===Z&&v.animation.targetProperty===h){V.stop();const h=A.indexOf(K);h>-1&&A.splice(h,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",A);break}}const H=null===(v=this.getDataInput(V||h))||void 0===v?void 0:v.getValue(Z);Z.setVariable(h,H)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(Z){var h;super.serialize(Z),Z.config.variable=null===(h=this.config)||void 0===h?void 0:h.variable}}(0,v.i)("FlowGraphSetVariableBlock",K)}}]);