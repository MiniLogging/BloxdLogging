"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[116],{14663:(H,O,S)=>{S.r(O),S.d(O,{FlowGraphSetVariableBlock:()=>G});var t=S(11262),q=S(13090),p=S(13035);class G extends q.d{constructor(H){if(super(H),!H.variable&&!H.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(H.variables&&H.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(H.variables)for(const O of H.variables)this.registerDataInput(O,p.e);else this.registerDataInput("value",p.e)}_execute(H,O){var S,t;if(null!==(S=this.config)&&void 0!==S&&S.variables)for(const q of this.config.variables)this._saveVariable(H,q);else this._saveVariable(H,null===(t=this.config)||void 0===t?void 0:t.variable,"value");this.out._activateSignal(H)}_saveVariable(H,O,S){var t;const q=H._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const G of q){const S=H.assetsContext.animationGroups.find((H=>H.uniqueId==G));if(S)for(const t of S.targetedAnimations)if(t.target===H&&t.animation.targetProperty===O){S.stop();const O=q.indexOf(G);O>-1&&q.splice(O,1),H._setGlobalContextVariable("currentlyRunningAnimationGroups",q);break}}const p=null===(t=this.getDataInput(S||O))||void 0===t?void 0:t.getValue(H);H.setVariable(O,p)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(H){var O;super.serialize(H),H.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,t.g)("FlowGraphSetVariableBlock",G)}}]);