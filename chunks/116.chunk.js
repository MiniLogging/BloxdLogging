"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[116],{16014:(s,k,h)=>{h.r(k),h.d(k,{FlowGraphSetVariableBlock:()=>i});var A=h(12543),g=h(14351),ms=h(14315);class i extends g.d{constructor(s){if(super(s),!s.variable&&!s.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(s.variables&&s.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(s.variables)for(const k of s.variables)this.registerDataInput(k,ms.c);else this.registerDataInput("value",ms.c)}_execute(s,k){var h,A;if(null!==(h=this.config)&&void 0!==h&&h.variables)for(const g of this.config.variables)this._saveVariable(s,g);else this._saveVariable(s,null===(A=this.config)||void 0===A?void 0:A.variable,"value");this.out._activateSignal(s)}_saveVariable(s,k,h){var A;const g=s._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const i of g){const h=s.assetsContext.animationGroups.find((s=>s.uniqueId==i));if(h)for(const A of h.targetedAnimations)if(A.target===s&&A.animation.targetProperty===k){h.stop();const k=g.indexOf(i);k>-1&&g.splice(k,1),s._setGlobalContextVariable("currentlyRunningAnimationGroups",g);break}}const ms=null===(A=this.getDataInput(h||k))||void 0===A?void 0:A.getValue(s);s.setVariable(k,ms)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(s){var k;super.serialize(s),s.config.variable=null===(k=this.config)||void 0===k?void 0:k.variable}}(0,A.f)("FlowGraphSetVariableBlock",i)}}]);