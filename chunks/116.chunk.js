"use strict";(self["7c63p8lin4r"]=self["7c63p8lin4r"]||[]).push([[116],{15890:(z,u,U)=>{U.r(u),U.d(u,{FlowGraphSetVariableBlock:()=>g});var J=U(12875),v=U(14248),f=U(14196);class g extends v.e{constructor(z){if(super(z),!z.variable&&!z.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(z.variables&&z.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(z.variables)for(const u of z.variables)this.registerDataInput(u,f.e);else this.registerDataInput("value",f.e)}_execute(z,u){var U,J;if(null!==(U=this.config)&&void 0!==U&&U.variables)for(const v of this.config.variables)this._saveVariable(z,v);else this._saveVariable(z,null===(J=this.config)||void 0===J?void 0:J.variable,"value");this.out._activateSignal(z)}_saveVariable(z,u,U){var J;const v=z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of v){const U=z.assetsContext.animationGroups.find((z=>z.uniqueId==g));if(U)for(const J of U.targetedAnimations)if(J.target===z&&J.animation.targetProperty===u){U.stop();const u=v.indexOf(g);u>-1&&v.splice(u,1),z._setGlobalContextVariable("currentlyRunningAnimationGroups",v);break}}const f=null===(J=this.getDataInput(U||u))||void 0===J?void 0:J.getValue(z);z.setVariable(u,f)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(z){var u;super.serialize(z),z.config.variable=null===(u=this.config)||void 0===u?void 0:u.variable}}(0,J.f)("FlowGraphSetVariableBlock",g)}}]);