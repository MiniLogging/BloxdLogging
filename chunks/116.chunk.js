"use strict";(self.fjf2z1c8il8=self.fjf2z1c8il8||[]).push([[116],{15922:(g,i,a)=>{a.r(i),a.d(i,{FlowGraphSetVariableBlock:()=>b});var n=a(12415),L=a(14271),d=a(14214);class b extends L.d{constructor(g){if(super(g),!g.variable&&!g.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(g.variables&&g.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(g.variables)for(const i of g.variables)this.registerDataInput(i,d.d);else this.registerDataInput("value",d.d)}_execute(g,i){var a,n;if(null!==(a=this.config)&&void 0!==a&&a.variables)for(const L of this.config.variables)this._saveVariable(g,L);else this._saveVariable(g,null===(n=this.config)||void 0===n?void 0:n.variable,"value");this.out._activateSignal(g)}_saveVariable(g,i,a){var n;const L=g._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const b of L){const a=g.assetsContext.animationGroups.find((g=>g.uniqueId==b));if(a)for(const n of a.targetedAnimations)if(n.target===g&&n.animation.targetProperty===i){a.stop();const i=L.indexOf(b);i>-1&&L.splice(i,1),g._setGlobalContextVariable("currentlyRunningAnimationGroups",L);break}}const d=null===(n=this.getDataInput(a||i))||void 0===n?void 0:n.getValue(g);g.setVariable(i,d)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(g){var i;super.serialize(g),g.config.variable=null===(i=this.config)||void 0===i?void 0:i.variable}}(0,n.e)("FlowGraphSetVariableBlock",b)}}]);