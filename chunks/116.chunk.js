"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[116],{15813:(e,d,v)=>{v.r(d),v.d(d,{FlowGraphSetVariableBlock:()=>B});var P=v(12381),p=v(14220),L=v(14181);class B extends p.c{constructor(e){if(super(e),!e.variable&&!e.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(e.variables&&e.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(e.variables)for(const d of e.variables)this.registerDataInput(d,L.b);else this.registerDataInput("value",L.b)}_execute(e,d){var v,P;if(null!==(v=this.config)&&void 0!==v&&v.variables)for(const p of this.config.variables)this._saveVariable(e,p);else this._saveVariable(e,null===(P=this.config)||void 0===P?void 0:P.variable,"value");this.out._activateSignal(e)}_saveVariable(e,d,v){var P;const p=e._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const B of p){const v=e.assetsContext.animationGroups.find((e=>e.uniqueId==B));if(v)for(const P of v.targetedAnimations)if(P.target===e&&P.animation.targetProperty===d){v.stop();const d=p.indexOf(B);d>-1&&p.splice(d,1),e._setGlobalContextVariable("currentlyRunningAnimationGroups",p);break}}const L=null===(P=this.getDataInput(v||d))||void 0===P?void 0:P.getValue(e);e.setVariable(d,L)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(e){var d;super.serialize(e),e.config.variable=null===(d=this.config)||void 0===d?void 0:d.variable}}(0,P.h)("FlowGraphSetVariableBlock",B)}}]);