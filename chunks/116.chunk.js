"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[116],{14768:(m,S,h)=>{h.r(S),h.d(S,{FlowGraphSetVariableBlock:()=>u});var l=h(11293),M=h(13107),O=h(13060);class u extends M.c{constructor(m){if(super(m),!m.variable&&!m.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(m.variables&&m.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(m.variables)for(const S of m.variables)this.registerDataInput(S,O.b);else this.registerDataInput("value",O.b)}_execute(m,S){var h,l;if(null!==(h=this.config)&&void 0!==h&&h.variables)for(const M of this.config.variables)this._saveVariable(m,M);else this._saveVariable(m,null===(l=this.config)||void 0===l?void 0:l.variable,"value");this.out._activateSignal(m)}_saveVariable(m,S,h){var l;const M=m._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const u of M){const h=m.assetsContext.animationGroups.find((m=>m.uniqueId==u));if(h)for(const l of h.targetedAnimations)if(l.target===m&&l.animation.targetProperty===S){h.stop();const S=M.indexOf(u);S>-1&&M.splice(S,1),m._setGlobalContextVariable("currentlyRunningAnimationGroups",M);break}}const O=null===(l=this.getDataInput(h||S))||void 0===l?void 0:l.getValue(m);m.setVariable(S,O)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(m){var S;super.serialize(m),m.config.variable=null===(S=this.config)||void 0===S?void 0:S.variable}}(0,l.e)("FlowGraphSetVariableBlock",u)}}]);