"use strict";(self["3nlrbof8msu"]=self["3nlrbof8msu"]||[]).push([[116],{16120:(t,b,Z)=>{Z.r(b),Z.d(b,{FlowGraphSetVariableBlock:()=>v});var J=Z(12688),S=Z(14464),P=Z(14405);class v extends S.e{constructor(t){if(super(t),!t.variable&&!t.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(t.variables&&t.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(t.variables)for(const b of t.variables)this.registerDataInput(b,P.c);else this.registerDataInput("value",P.c)}_execute(t,b){var Z,J;if(null!==(Z=this.config)&&void 0!==Z&&Z.variables)for(const S of this.config.variables)this._saveVariable(t,S);else this._saveVariable(t,null===(J=this.config)||void 0===J?void 0:J.variable,"value");this.out._activateSignal(t)}_saveVariable(t,b,Z){var J;const S=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const v of S){const Z=t.assetsContext.animationGroups.find((t=>t.uniqueId==v));if(Z)for(const J of Z.targetedAnimations)if(J.target===t&&J.animation.targetProperty===b){Z.stop();const b=S.indexOf(v);b>-1&&S.splice(b,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",S);break}}const P=null===(J=this.getDataInput(Z||b))||void 0===J?void 0:J.getValue(t);t.setVariable(b,P)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(t){var b;super.serialize(t),t.config.variable=null===(b=this.config)||void 0===b?void 0:b.variable}}(0,J.f)("FlowGraphSetVariableBlock",v)}}]);