"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[116],{14496:(q,S,b)=>{b.r(S),b.d(S,{FlowGraphSetVariableBlock:()=>U});var z=b(11058),C=b(12866),v=b(12839);class U extends C.e{constructor(q){if(super(q),!q.variable&&!q.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(q.variables&&q.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(q.variables)for(const S of q.variables)this.registerDataInput(S,v.d);else this.registerDataInput("value",v.d)}_execute(q,S){var b,z;if(null!==(b=this.config)&&void 0!==b&&b.variables)for(const C of this.config.variables)this._saveVariable(q,C);else this._saveVariable(q,null===(z=this.config)||void 0===z?void 0:z.variable,"value");this.out._activateSignal(q)}_saveVariable(q,S,b){var z;const C=q._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of C){const b=q.assetsContext.animationGroups.find((q=>q.uniqueId==U));if(b)for(const z of b.targetedAnimations)if(z.target===q&&z.animation.targetProperty===S){b.stop();const S=C.indexOf(U);S>-1&&C.splice(S,1),q._setGlobalContextVariable("currentlyRunningAnimationGroups",C);break}}const v=null===(z=this.getDataInput(b||S))||void 0===z?void 0:z.getValue(q);q.setVariable(S,v)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(q){var S;super.serialize(q),q.config.variable=null===(S=this.config)||void 0===S?void 0:S.variable}}(0,z.f)("FlowGraphSetVariableBlock",U)}}]);