"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[116],{16209:(h,d,T)=>{T.r(d),T.d(d,{FlowGraphSetVariableBlock:()=>n});var Y=T(12714),y=T(14578),C=T(14528);class n extends y.e{constructor(h){if(super(h),!h.variable&&!h.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(h.variables&&h.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(h.variables)for(const d of h.variables)this.registerDataInput(d,C.b);else this.registerDataInput("value",C.b)}_execute(h,d){var T,Y;if(null!==(T=this.config)&&void 0!==T&&T.variables)for(const y of this.config.variables)this._saveVariable(h,y);else this._saveVariable(h,null===(Y=this.config)||void 0===Y?void 0:Y.variable,"value");this.out._activateSignal(h)}_saveVariable(h,d,T){var Y;const y=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const n of y){const T=h.assetsContext.animationGroups.find((h=>h.uniqueId==n));if(T)for(const Y of T.targetedAnimations)if(Y.target===h&&Y.animation.targetProperty===d){T.stop();const d=y.indexOf(n);d>-1&&y.splice(d,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",y);break}}const C=null===(Y=this.getDataInput(T||d))||void 0===Y?void 0:Y.getValue(h);h.setVariable(d,C)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(h){var d;super.serialize(h),h.config.variable=null===(d=this.config)||void 0===d?void 0:d.variable}}(0,Y.e)("FlowGraphSetVariableBlock",n)}}]);