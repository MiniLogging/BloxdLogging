"use strict";(self.bbj0x35f849=self.bbj0x35f849||[]).push([[116],{14507:(N,q,C)=>{C.r(q),C.d(q,{FlowGraphSetVariableBlock:()=>a});var d=C(11076),U=C(12874),W=C(12831);class a extends U.c{constructor(N){if(super(N),!N.variable&&!N.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(N.variables&&N.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(N.variables)for(const q of N.variables)this.registerDataInput(q,W.b);else this.registerDataInput("value",W.b)}_execute(N,q){var C,d;if(null!==(C=this.config)&&void 0!==C&&C.variables)for(const U of this.config.variables)this._saveVariable(N,U);else this._saveVariable(N,null===(d=this.config)||void 0===d?void 0:d.variable,"value");this.out._activateSignal(N)}_saveVariable(N,q,C){var d;const U=N._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const a of U){const C=N.assetsContext.animationGroups.find((N=>N.uniqueId==a));if(C)for(const d of C.targetedAnimations)if(d.target===N&&d.animation.targetProperty===q){C.stop();const q=U.indexOf(a);q>-1&&U.splice(q,1),N._setGlobalContextVariable("currentlyRunningAnimationGroups",U);break}}const W=null===(d=this.getDataInput(C||q))||void 0===d?void 0:d.getValue(N);N.setVariable(q,W)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(N){var q;super.serialize(N),N.config.variable=null===(q=this.config)||void 0===q?void 0:q.variable}}(0,d.h)("FlowGraphSetVariableBlock",a)}}]);