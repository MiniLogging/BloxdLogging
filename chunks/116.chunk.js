"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[116],{15763:(a,O,i)=>{i.r(O),i.d(O,{FlowGraphSetVariableBlock:()=>q});var H=i(12346),b=i(14164),G=i(14124);class q extends b.c{constructor(a){if(super(a),!a.variable&&!a.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(a.variables&&a.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(a.variables)for(const O of a.variables)this.registerDataInput(O,G.e);else this.registerDataInput("value",G.e)}_execute(a,O){var i,H;if(null!==(i=this.config)&&void 0!==i&&i.variables)for(const b of this.config.variables)this._saveVariable(a,b);else this._saveVariable(a,null===(H=this.config)||void 0===H?void 0:H.variable,"value");this.out._activateSignal(a)}_saveVariable(a,O,i){var H;const b=a._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const q of b){const i=a.assetsContext.animationGroups.find((a=>a.uniqueId==q));if(i)for(const H of i.targetedAnimations)if(H.target===a&&H.animation.targetProperty===O){i.stop();const O=b.indexOf(q);O>-1&&b.splice(O,1),a._setGlobalContextVariable("currentlyRunningAnimationGroups",b);break}}const G=null===(H=this.getDataInput(i||O))||void 0===H?void 0:H.getValue(a);a.setVariable(O,G)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(a){var O;super.serialize(a),a.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,H.h)("FlowGraphSetVariableBlock",q)}}]);