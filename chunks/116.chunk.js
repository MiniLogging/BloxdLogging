"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[116],{14612:(F,b,Q)=>{Q.r(b),Q.d(b,{FlowGraphSetVariableBlock:()=>g});var C=Q(11265),z=Q(13e3),t=Q(12951);class g extends z.d{constructor(F){if(super(F),!F.variable&&!F.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(F.variables&&F.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(F.variables)for(const b of F.variables)this.registerDataInput(b,t.b);else this.registerDataInput("value",t.b)}_execute(F,b){var Q,C;if(null!==(Q=this.config)&&void 0!==Q&&Q.variables)for(const z of this.config.variables)this._saveVariable(F,z);else this._saveVariable(F,null===(C=this.config)||void 0===C?void 0:C.variable,"value");this.out._activateSignal(F)}_saveVariable(F,b,Q){var C;const z=F._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of z){const Q=F.assetsContext.animationGroups.find((F=>F.uniqueId==g));if(Q)for(const C of Q.targetedAnimations)if(C.target===F&&C.animation.targetProperty===b){Q.stop();const b=z.indexOf(g);b>-1&&z.splice(b,1),F._setGlobalContextVariable("currentlyRunningAnimationGroups",z);break}}const t=null===(C=this.getDataInput(Q||b))||void 0===C?void 0:C.getValue(F);F.setVariable(b,t)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(F){var b;super.serialize(F),F.config.variable=null===(b=this.config)||void 0===b?void 0:b.variable}}(0,C.g)("FlowGraphSetVariableBlock",g)}}]);