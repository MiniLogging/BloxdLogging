"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[116],{16314:(h,R,l)=>{l.r(R),l.d(R,{FlowGraphSetVariableBlock:()=>U});var j=l(12852),a=l(14646),D=l(14597);class U extends a.c{constructor(h){if(super(h),!h.variable&&!h.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(h.variables&&h.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(h.variables)for(const R of h.variables)this.registerDataInput(R,D.c);else this.registerDataInput("value",D.c)}_execute(h,R){var l,j;if(null!==(l=this.config)&&void 0!==l&&l.variables)for(const a of this.config.variables)this._saveVariable(h,a);else this._saveVariable(h,null===(j=this.config)||void 0===j?void 0:j.variable,"value");this.out._activateSignal(h)}_saveVariable(h,R,l){var j;const a=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const U of a){const l=h.assetsContext.animationGroups.find((h=>h.uniqueId==U));if(l)for(const j of l.targetedAnimations)if(j.target===h&&j.animation.targetProperty===R){l.stop();const R=a.indexOf(U);R>-1&&a.splice(R,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",a);break}}const D=null===(j=this.getDataInput(l||R))||void 0===j?void 0:j.getValue(h);h.setVariable(R,D)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(h){var R;super.serialize(h),h.config.variable=null===(R=this.config)||void 0===R?void 0:R.variable}}(0,j.f)("FlowGraphSetVariableBlock",U)}}]);