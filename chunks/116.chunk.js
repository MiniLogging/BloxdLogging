"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[116],{16339:(Y,c,h)=>{h.r(c),h.d(c,{FlowGraphSetVariableBlock:()=>Q});var C=h(12825),E=h(14506),N=h(14459);class Q extends E.c{constructor(Y){if(super(Y),!Y.variable&&!Y.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(Y.variables&&Y.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(Y.variables)for(const c of Y.variables)this.registerDataInput(c,N.c);else this.registerDataInput("value",N.c)}_execute(Y,c){var h,C;if(null!==(h=this.config)&&void 0!==h&&h.variables)for(const E of this.config.variables)this._saveVariable(Y,E);else this._saveVariable(Y,null===(C=this.config)||void 0===C?void 0:C.variable,"value");this.out._activateSignal(Y)}_saveVariable(Y,c,h){var C;const E=Y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Q of E){const h=Y.assetsContext.animationGroups.find((Y=>Y.uniqueId==Q));if(h)for(const C of h.targetedAnimations)if(C.target===Y&&C.animation.targetProperty===c){h.stop();const c=E.indexOf(Q);c>-1&&E.splice(c,1),Y._setGlobalContextVariable("currentlyRunningAnimationGroups",E);break}}const N=null===(C=this.getDataInput(h||c))||void 0===C?void 0:C.getValue(Y);Y.setVariable(c,N)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(Y){var c;super.serialize(Y),Y.config.variable=null===(c=this.config)||void 0===c?void 0:c.variable}}(0,C.e)("FlowGraphSetVariableBlock",Q)}}]);