"use strict";(self["9d4d30r2sf"]=self["9d4d30r2sf"]||[]).push([[116],{15857:(o,v,V)=>{V.r(v),V.d(v,{FlowGraphSetVariableBlock:()=>Q});var g=V(12449),E=V(14283),I=V(14241);class Q extends E.d{constructor(o){if(super(o),!o.variable&&!o.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(o.variables&&o.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(o.variables)for(const v of o.variables)this.registerDataInput(v,I.e);else this.registerDataInput("value",I.e)}_execute(o,v){var V,g;if(null!==(V=this.config)&&void 0!==V&&V.variables)for(const E of this.config.variables)this._saveVariable(o,E);else this._saveVariable(o,null===(g=this.config)||void 0===g?void 0:g.variable,"value");this.out._activateSignal(o)}_saveVariable(o,v,V){var g;const E=o._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Q of E){const V=o.assetsContext.animationGroups.find((o=>o.uniqueId==Q));if(V)for(const g of V.targetedAnimations)if(g.target===o&&g.animation.targetProperty===v){V.stop();const v=E.indexOf(Q);v>-1&&E.splice(v,1),o._setGlobalContextVariable("currentlyRunningAnimationGroups",E);break}}const I=null===(g=this.getDataInput(V||v))||void 0===g?void 0:g.getValue(o);o.setVariable(v,I)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(o){var v;super.serialize(o),o.config.variable=null===(v=this.config)||void 0===v?void 0:v.variable}}(0,g.h)("FlowGraphSetVariableBlock",Q)}}]);