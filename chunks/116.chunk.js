"use strict";(self["269hv5nclphh"]=self["269hv5nclphh"]||[]).push([[116],{15748:(E,H,d)=>{d.r(H),d.d(H,{FlowGraphSetVariableBlock:()=>g});var n=d(12344),Z=d(14140),I=d(14103);class g extends Z.d{constructor(E){if(super(E),!E.variable&&!E.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(E.variables&&E.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(E.variables)for(const H of E.variables)this.registerDataInput(H,I.e);else this.registerDataInput("value",I.e)}_execute(E,H){var d,n;if(null!==(d=this.config)&&void 0!==d&&d.variables)for(const Z of this.config.variables)this._saveVariable(E,Z);else this._saveVariable(E,null===(n=this.config)||void 0===n?void 0:n.variable,"value");this.out._activateSignal(E)}_saveVariable(E,H,d){var n;const Z=E._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of Z){const d=E.assetsContext.animationGroups.find((E=>E.uniqueId==g));if(d)for(const n of d.targetedAnimations)if(n.target===E&&n.animation.targetProperty===H){d.stop();const H=Z.indexOf(g);H>-1&&Z.splice(H,1),E._setGlobalContextVariable("currentlyRunningAnimationGroups",Z);break}}const I=null===(n=this.getDataInput(d||H))||void 0===n?void 0:n.getValue(E);E.setVariable(H,I)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(E){var H;super.serialize(E),E.config.variable=null===(H=this.config)||void 0===H?void 0:H.variable}}(0,n.e)("FlowGraphSetVariableBlock",g)}}]);