"use strict";(self.ksd6jhs1yr=self.ksd6jhs1yr||[]).push([[116],{15762:(C,c,d)=>{d.r(c),d.d(c,{FlowGraphSetVariableBlock:()=>V});var b=d(12345),X=d(14185),P=d(14126);class V extends X.e{constructor(C){if(super(C),!C.variable&&!C.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(C.variables&&C.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(C.variables)for(const c of C.variables)this.registerDataInput(c,P.b);else this.registerDataInput("value",P.b)}_execute(C,c){var d,b;if(null!==(d=this.config)&&void 0!==d&&d.variables)for(const X of this.config.variables)this._saveVariable(C,X);else this._saveVariable(C,null===(b=this.config)||void 0===b?void 0:b.variable,"value");this.out._activateSignal(C)}_saveVariable(C,c,d){var b;const X=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const V of X){const d=C.assetsContext.animationGroups.find((C=>C.uniqueId==V));if(d)for(const b of d.targetedAnimations)if(b.target===C&&b.animation.targetProperty===c){d.stop();const c=X.indexOf(V);c>-1&&X.splice(c,1),C._setGlobalContextVariable("currentlyRunningAnimationGroups",X);break}}const P=null===(b=this.getDataInput(d||c))||void 0===b?void 0:b.getValue(C);C.setVariable(c,P)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(C){var c;super.serialize(C),C.config.variable=null===(c=this.config)||void 0===c?void 0:c.variable}}(0,b.e)("FlowGraphSetVariableBlock",V)}}]);