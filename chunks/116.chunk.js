"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[116],{14525:(h,V,i)=>{i.r(V),i.d(V,{FlowGraphSetVariableBlock:()=>g});var S=i(11091),l=i(12861),Y=i(12805);class g extends l.e{constructor(h){if(super(h),!h.variable&&!h.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(h.variables&&h.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(h.variables)for(const V of h.variables)this.registerDataInput(V,Y.c);else this.registerDataInput("value",Y.c)}_execute(h,V){var i,S;if(null!==(i=this.config)&&void 0!==i&&i.variables)for(const l of this.config.variables)this._saveVariable(h,l);else this._saveVariable(h,null===(S=this.config)||void 0===S?void 0:S.variable,"value");this.out._activateSignal(h)}_saveVariable(h,V,i){var S;const l=h._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const g of l){const i=h.assetsContext.animationGroups.find((h=>h.uniqueId==g));if(i)for(const S of i.targetedAnimations)if(S.target===h&&S.animation.targetProperty===V){i.stop();const V=l.indexOf(g);V>-1&&l.splice(V,1),h._setGlobalContextVariable("currentlyRunningAnimationGroups",l);break}}const Y=null===(S=this.getDataInput(i||V))||void 0===S?void 0:S.getValue(h);h.setVariable(V,Y)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(h){var V;super.serialize(h),h.config.variable=null===(V=this.config)||void 0===V?void 0:V.variable}}(0,S.f)("FlowGraphSetVariableBlock",g)}}]);