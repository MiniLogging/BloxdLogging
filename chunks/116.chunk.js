"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[116],{14947:(U,X,b)=>{b.r(X),b.d(X,{FlowGraphSetVariableBlock:()=>Q});var F=b(11551),E=b(13333),w=b(13281);class Q extends E.d{constructor(U){if(super(U),!U.variable&&!U.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(U.variables&&U.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(U.variables)for(const X of U.variables)this.registerDataInput(X,w.b);else this.registerDataInput("value",w.b)}_execute(U,X){var b,F;if(null!==(b=this.config)&&void 0!==b&&b.variables)for(const E of this.config.variables)this._saveVariable(U,E);else this._saveVariable(U,null===(F=this.config)||void 0===F?void 0:F.variable,"value");this.out._activateSignal(U)}_saveVariable(U,X,b){var F;const E=U._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Q of E){const b=U.assetsContext.animationGroups.find((U=>U.uniqueId==Q));if(b)for(const F of b.targetedAnimations)if(F.target===U&&F.animation.targetProperty===X){b.stop();const X=E.indexOf(Q);X>-1&&E.splice(X,1),U._setGlobalContextVariable("currentlyRunningAnimationGroups",E);break}}const w=null===(F=this.getDataInput(b||X))||void 0===F?void 0:F.getValue(U);U.setVariable(X,w)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(U){var X;super.serialize(U),U.config.variable=null===(X=this.config)||void 0===X?void 0:X.variable}}(0,F.f)("FlowGraphSetVariableBlock",Q)}}]);