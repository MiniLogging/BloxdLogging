"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[116],{14722:(B,E,v)=>{v.r(E),v.d(E,{FlowGraphSetVariableBlock:()=>c});var z=v(11345),o=v(13142),q=v(13102);class c extends o.d{constructor(B){if(super(B),!B.variable&&!B.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(B.variables&&B.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(B.variables)for(const E of B.variables)this.registerDataInput(E,q.c);else this.registerDataInput("value",q.c)}_execute(B,E){var v,z;if(null!==(v=this.config)&&void 0!==v&&v.variables)for(const o of this.config.variables)this._saveVariable(B,o);else this._saveVariable(B,null===(z=this.config)||void 0===z?void 0:z.variable,"value");this.out._activateSignal(B)}_saveVariable(B,E,v){var z;const o=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const c of o){const v=B.assetsContext.animationGroups.find((B=>B.uniqueId==c));if(v)for(const z of v.targetedAnimations)if(z.target===B&&z.animation.targetProperty===E){v.stop();const E=o.indexOf(c);E>-1&&o.splice(E,1),B._setGlobalContextVariable("currentlyRunningAnimationGroups",o);break}}const q=null===(z=this.getDataInput(v||E))||void 0===z?void 0:z.getValue(B);B.setVariable(E,q)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(B){var E;super.serialize(B),B.config.variable=null===(E=this.config)||void 0===E?void 0:E.variable}}(0,z.f)("FlowGraphSetVariableBlock",c)}}]);