"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[116],{14993:(D,l,G)=>{G.r(l),G.d(l,{FlowGraphSetVariableBlock:()=>b});var V=G(11667),N=G(13470),M=G(13423);class b extends N.b{constructor(D){if(super(D),!D.variable&&!D.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(D.variables&&D.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(D.variables)for(const l of D.variables)this.registerDataInput(l,M.d);else this.registerDataInput("value",M.d)}_execute(D,l){var G,V;if(null!==(G=this.config)&&void 0!==G&&G.variables)for(const N of this.config.variables)this._saveVariable(D,N);else this._saveVariable(D,null===(V=this.config)||void 0===V?void 0:V.variable,"value");this.out._activateSignal(D)}_saveVariable(D,l,G){var V;const N=D._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const b of N){const G=D.assetsContext.animationGroups.find((D=>D.uniqueId==b));if(G)for(const V of G.targetedAnimations)if(V.target===D&&V.animation.targetProperty===l){G.stop();const l=N.indexOf(b);l>-1&&N.splice(l,1),D._setGlobalContextVariable("currentlyRunningAnimationGroups",N);break}}const M=null===(V=this.getDataInput(G||l))||void 0===V?void 0:V.getValue(D);D.setVariable(l,M)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(D){var l;super.serialize(D),D.config.variable=null===(l=this.config)||void 0===l?void 0:l.variable}}(0,V.c)("FlowGraphSetVariableBlock",b)}}]);