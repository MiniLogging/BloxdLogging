"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[116],{15357:(b,X,P)=>{P.r(X),P.d(X,{FlowGraphSetVariableBlock:()=>N});var Q=P(11802),S=P(13678),d=P(13631);class N extends S.b{constructor(b){if(super(b),!b.variable&&!b.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(b.variables&&b.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(b.variables)for(const X of b.variables)this.registerDataInput(X,d.e);else this.registerDataInput("value",d.e)}_execute(b,X){var P,Q;if(null!==(P=this.config)&&void 0!==P&&P.variables)for(const S of this.config.variables)this._saveVariable(b,S);else this._saveVariable(b,null===(Q=this.config)||void 0===Q?void 0:Q.variable,"value");this.out._activateSignal(b)}_saveVariable(b,X,P){var Q;const S=b._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const N of S){const P=b.assetsContext.animationGroups.find((b=>b.uniqueId==N));if(P)for(const Q of P.targetedAnimations)if(Q.target===b&&Q.animation.targetProperty===X){P.stop();const X=S.indexOf(N);X>-1&&S.splice(X,1),b._setGlobalContextVariable("currentlyRunningAnimationGroups",S);break}}const d=null===(Q=this.getDataInput(P||X))||void 0===Q?void 0:Q.getValue(b);b.setVariable(X,d)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(b){var X;super.serialize(b),b.config.variable=null===(X=this.config)||void 0===X?void 0:X.variable}}(0,Q.h)("FlowGraphSetVariableBlock",N)}}]);