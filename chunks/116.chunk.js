"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[116],{14675:(k,Q,i)=>{i.r(Q),i.d(Q,{FlowGraphSetVariableBlock:()=>B});var Z=i(11253),U=i(13114),C=i(13064);class B extends U.c{constructor(k){if(super(k),!k.variable&&!k.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(k.variables&&k.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(k.variables)for(const Q of k.variables)this.registerDataInput(Q,C.b);else this.registerDataInput("value",C.b)}_execute(k,Q){var i,Z;if(null!==(i=this.config)&&void 0!==i&&i.variables)for(const U of this.config.variables)this._saveVariable(k,U);else this._saveVariable(k,null===(Z=this.config)||void 0===Z?void 0:Z.variable,"value");this.out._activateSignal(k)}_saveVariable(k,Q,i){var Z;const U=k._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const B of U){const i=k.assetsContext.animationGroups.find((k=>k.uniqueId==B));if(i)for(const Z of i.targetedAnimations)if(Z.target===k&&Z.animation.targetProperty===Q){i.stop();const Q=U.indexOf(B);Q>-1&&U.splice(Q,1),k._setGlobalContextVariable("currentlyRunningAnimationGroups",U);break}}const C=null===(Z=this.getDataInput(i||Q))||void 0===Z?void 0:Z.getValue(k);k.setVariable(Q,C)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(k){var Q;super.serialize(k),k.config.variable=null===(Q=this.config)||void 0===Q?void 0:Q.variable}}(0,Z.e)("FlowGraphSetVariableBlock",B)}}]);