"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[116],{15113:(K,O,F)=>{F.r(O),F.d(O,{FlowGraphSetVariableBlock:()=>q});var f=F(11661),r=F(13493),l=F(13441);class q extends r.d{constructor(K){if(super(K),!K.variable&&!K.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(K.variables&&K.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(K.variables)for(const O of K.variables)this.registerDataInput(O,l.d);else this.registerDataInput("value",l.d)}_execute(K,O){var F,f;if(null!==(F=this.config)&&void 0!==F&&F.variables)for(const r of this.config.variables)this._saveVariable(K,r);else this._saveVariable(K,null===(f=this.config)||void 0===f?void 0:f.variable,"value");this.out._activateSignal(K)}_saveVariable(K,O,F){var f;const r=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const q of r){const F=K.assetsContext.animationGroups.find((K=>K.uniqueId==q));if(F)for(const f of F.targetedAnimations)if(f.target===K&&f.animation.targetProperty===O){F.stop();const O=r.indexOf(q);O>-1&&r.splice(O,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",r);break}}const l=null===(f=this.getDataInput(F||O))||void 0===f?void 0:f.getValue(K);K.setVariable(O,l)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(K){var O;super.serialize(K),K.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,f.g)("FlowGraphSetVariableBlock",q)}}]);