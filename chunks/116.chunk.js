"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[116],{14632:(K,H,M)=>{M.r(H),M.d(H,{FlowGraphSetVariableBlock:()=>y});var q=M(11242),w=M(13054),u=M(13004);class y extends w.e{constructor(K){if(super(K),!K.variable&&!K.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(K.variables&&K.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(K.variables)for(const H of K.variables)this.registerDataInput(H,u.d);else this.registerDataInput("value",u.d)}_execute(K,H){var M,q;if(null!==(M=this.config)&&void 0!==M&&M.variables)for(const w of this.config.variables)this._saveVariable(K,w);else this._saveVariable(K,null===(q=this.config)||void 0===q?void 0:q.variable,"value");this.out._activateSignal(K)}_saveVariable(K,H,M){var q;const w=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const y of w){const M=K.assetsContext.animationGroups.find((K=>K.uniqueId==y));if(M)for(const q of M.targetedAnimations)if(q.target===K&&q.animation.targetProperty===H){M.stop();const H=w.indexOf(y);H>-1&&w.splice(H,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",w);break}}const u=null===(q=this.getDataInput(M||H))||void 0===q?void 0:q.getValue(K);K.setVariable(H,u)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(K){var H;super.serialize(K),K.config.variable=null===(H=this.config)||void 0===H?void 0:H.variable}}(0,q.f)("FlowGraphSetVariableBlock",y)}}]);