"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[116],{16201:(I,x,L)=>{L.r(x),L.d(x,{FlowGraphSetVariableBlock:()=>Y});var F=L(12938),X=L(14540),G=L(14498);class Y extends X.e{constructor(I){if(super(I),!I.variable&&!I.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(I.variables&&I.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(I.variables)for(const x of I.variables)this.registerDataInput(x,G.e);else this.registerDataInput("value",G.e)}_execute(I,x){var L,F;if(null!==(L=this.config)&&void 0!==L&&L.variables)for(const X of this.config.variables)this._saveVariable(I,X);else this._saveVariable(I,null===(F=this.config)||void 0===F?void 0:F.variable,"value");this.out._activateSignal(I)}_saveVariable(I,x,L){var F;const X=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Y of X){const L=I.assetsContext.animationGroups.find((I=>I.uniqueId==Y));if(L)for(const F of L.targetedAnimations)if(F.target===I&&F.animation.targetProperty===x){L.stop();const x=X.indexOf(Y);x>-1&&X.splice(x,1),I._setGlobalContextVariable("currentlyRunningAnimationGroups",X);break}}const G=null===(F=this.getDataInput(L||x))||void 0===F?void 0:F.getValue(I);I.setVariable(x,G)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(I){var x;super.serialize(I),I.config.variable=null===(x=this.config)||void 0===x?void 0:x.variable}}(0,F.d)("FlowGraphSetVariableBlock",Y)}}]);