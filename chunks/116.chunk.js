"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[116],{16270:(Y,b,C)=>{C.r(b),C.d(b,{FlowGraphSetVariableBlock:()=>E});var R=C(12790),q=C(14466),A=C(14424);class E extends q.d{constructor(Y){if(super(Y),!Y.variable&&!Y.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(Y.variables&&Y.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(Y.variables)for(const b of Y.variables)this.registerDataInput(b,A.b);else this.registerDataInput("value",A.b)}_execute(Y,b){var C,R;if(null!==(C=this.config)&&void 0!==C&&C.variables)for(const q of this.config.variables)this._saveVariable(Y,q);else this._saveVariable(Y,null===(R=this.config)||void 0===R?void 0:R.variable,"value");this.out._activateSignal(Y)}_saveVariable(Y,b,C){var R;const q=Y._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const E of q){const C=Y.assetsContext.animationGroups.find((Y=>Y.uniqueId==E));if(C)for(const R of C.targetedAnimations)if(R.target===Y&&R.animation.targetProperty===b){C.stop();const b=q.indexOf(E);b>-1&&q.splice(b,1),Y._setGlobalContextVariable("currentlyRunningAnimationGroups",q);break}}const A=null===(R=this.getDataInput(C||b))||void 0===R?void 0:R.getValue(Y);Y.setVariable(b,A)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(Y){var b;super.serialize(Y),Y.config.variable=null===(b=this.config)||void 0===b?void 0:b.variable}}(0,R.g)("FlowGraphSetVariableBlock",E)}}]);