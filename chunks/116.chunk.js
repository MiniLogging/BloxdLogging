"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[116],{14557:(B,I,C)=>{C.r(I),C.d(I,{FlowGraphSetVariableBlock:()=>f});var M=C(11149),x=C(12952),y=C(12901);class f extends x.b{constructor(B){if(super(B),!B.variable&&!B.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(B.variables&&B.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(B.variables)for(const I of B.variables)this.registerDataInput(I,y.b);else this.registerDataInput("value",y.b)}_execute(B,I){var C,M;if(null!==(C=this.config)&&void 0!==C&&C.variables)for(const x of this.config.variables)this._saveVariable(B,x);else this._saveVariable(B,null===(M=this.config)||void 0===M?void 0:M.variable,"value");this.out._activateSignal(B)}_saveVariable(B,I,C){var M;const x=B._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const f of x){const C=B.assetsContext.animationGroups.find((B=>B.uniqueId==f));if(C)for(const M of C.targetedAnimations)if(M.target===B&&M.animation.targetProperty===I){C.stop();const I=x.indexOf(f);I>-1&&x.splice(I,1),B._setGlobalContextVariable("currentlyRunningAnimationGroups",x);break}}const y=null===(M=this.getDataInput(C||I))||void 0===M?void 0:M.getValue(B);B.setVariable(I,y)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(B){var I;super.serialize(B),B.config.variable=null===(I=this.config)||void 0===I?void 0:I.variable}}(0,M.h)("FlowGraphSetVariableBlock",f)}}]);