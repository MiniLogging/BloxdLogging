"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[116],{15525:(t,U,y)=>{y.r(U),y.d(U,{FlowGraphSetVariableBlock:()=>mt});var I=y(12338),r=y(13899),Y=y(13845);class mt extends r.e{constructor(t){if(super(t),!t.variable&&!t.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(t.variables&&t.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(t.variables)for(const U of t.variables)this.registerDataInput(U,Y.e);else this.registerDataInput("value",Y.e)}_execute(t,U){var y,I;if(null!==(y=this.config)&&void 0!==y&&y.variables)for(const r of this.config.variables)this._saveVariable(t,r);else this._saveVariable(t,null===(I=this.config)||void 0===I?void 0:I.variable,"value");this.out._activateSignal(t)}_saveVariable(t,U,y){var I;const r=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const mt of r){const y=t.assetsContext.animationGroups.find((t=>t.uniqueId==mt));if(y)for(const I of y.targetedAnimations)if(I.target===t&&I.animation.targetProperty===U){y.stop();const U=r.indexOf(mt);U>-1&&r.splice(U,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",r);break}}const Y=null===(I=this.getDataInput(y||U))||void 0===I?void 0:I.getValue(t);t.setVariable(U,Y)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(t){var U;super.serialize(t),t.config.variable=null===(U=this.config)||void 0===U?void 0:U.variable}}(0,I.f)("FlowGraphSetVariableBlock",mt)}}]);