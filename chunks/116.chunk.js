"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[116],{14610:(G,A,j)=>{j.r(A),j.d(A,{FlowGraphSetVariableBlock:()=>x});var u=j(11181),k=j(12928),B=j(12880);class x extends k.e{constructor(G){if(super(G),!G.variable&&!G.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(G.variables&&G.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(G.variables)for(const A of G.variables)this.registerDataInput(A,B.c);else this.registerDataInput("value",B.c)}_execute(G,A){var j,u;if(null!==(j=this.config)&&void 0!==j&&j.variables)for(const k of this.config.variables)this._saveVariable(G,k);else this._saveVariable(G,null===(u=this.config)||void 0===u?void 0:u.variable,"value");this.out._activateSignal(G)}_saveVariable(G,A,j){var u;const k=G._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const x of k){const j=G.assetsContext.animationGroups.find((G=>G.uniqueId==x));if(j)for(const u of j.targetedAnimations)if(u.target===G&&u.animation.targetProperty===A){j.stop();const A=k.indexOf(x);A>-1&&k.splice(A,1),G._setGlobalContextVariable("currentlyRunningAnimationGroups",k);break}}const B=null===(u=this.getDataInput(j||A))||void 0===u?void 0:u.getValue(G);G.setVariable(A,B)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(G){var A;super.serialize(G),G.config.variable=null===(A=this.config)||void 0===A?void 0:A.variable}}(0,u.h)("FlowGraphSetVariableBlock",x)}}]);