"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[116],{15081:(c,r,D)=>{D.r(r),D.d(r,{FlowGraphSetVariableBlock:()=>u});var W=D(11637),B=D(13431),t=D(13392);class u extends B.d{constructor(c){if(super(c),!c.variable&&!c.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(c.variables&&c.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(c.variables)for(const r of c.variables)this.registerDataInput(r,t.c);else this.registerDataInput("value",t.c)}_execute(c,r){var D,W;if(null!==(D=this.config)&&void 0!==D&&D.variables)for(const B of this.config.variables)this._saveVariable(c,B);else this._saveVariable(c,null===(W=this.config)||void 0===W?void 0:W.variable,"value");this.out._activateSignal(c)}_saveVariable(c,r,D){var W;const B=c._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const u of B){const D=c.assetsContext.animationGroups.find((c=>c.uniqueId==u));if(D)for(const W of D.targetedAnimations)if(W.target===c&&W.animation.targetProperty===r){D.stop();const r=B.indexOf(u);r>-1&&B.splice(r,1),c._setGlobalContextVariable("currentlyRunningAnimationGroups",B);break}}const t=null===(W=this.getDataInput(D||r))||void 0===W?void 0:W.getValue(c);c.setVariable(r,t)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(c){var r;super.serialize(c),c.config.variable=null===(r=this.config)||void 0===r?void 0:r.variable}}(0,W.e)("FlowGraphSetVariableBlock",u)}}]);