"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[116],{15989:(M,A,O)=>{O.r(A),O.d(A,{FlowGraphSetVariableBlock:()=>X});var S=O(12919),z=O(14288),Q=O(14238);class X extends z.e{constructor(M){if(super(M),!M.variable&&!M.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(M.variables&&M.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(M.variables)for(const A of M.variables)this.registerDataInput(A,Q.b);else this.registerDataInput("value",Q.b)}_execute(M,A){var O,S;if(null!==(O=this.config)&&void 0!==O&&O.variables)for(const z of this.config.variables)this._saveVariable(M,z);else this._saveVariable(M,null===(S=this.config)||void 0===S?void 0:S.variable,"value");this.out._activateSignal(M)}_saveVariable(M,A,O){var S;const z=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const X of z){const O=M.assetsContext.animationGroups.find((M=>M.uniqueId==X));if(O)for(const S of O.targetedAnimations)if(S.target===M&&S.animation.targetProperty===A){O.stop();const A=z.indexOf(X);A>-1&&z.splice(A,1),M._setGlobalContextVariable("currentlyRunningAnimationGroups",z);break}}const Q=null===(S=this.getDataInput(O||A))||void 0===S?void 0:S.getValue(M);M.setVariable(A,Q)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(M){var A;super.serialize(M),M.config.variable=null===(A=this.config)||void 0===A?void 0:A.variable}}(0,S.g)("FlowGraphSetVariableBlock",X)}}]);