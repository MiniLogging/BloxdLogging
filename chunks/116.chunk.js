"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[116],{16158:(p,b,M)=>{M.r(b),M.d(b,{FlowGraphSetVariableBlock:()=>y});var h=M(12730),Q=M(14367),mp=M(14316);class y extends Q.d{constructor(p){if(super(p),!p.variable&&!p.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(p.variables&&p.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(p.variables)for(const b of p.variables)this.registerDataInput(b,mp.e);else this.registerDataInput("value",mp.e)}_execute(p,b){var M,h;if(null!==(M=this.config)&&void 0!==M&&M.variables)for(const Q of this.config.variables)this._saveVariable(p,Q);else this._saveVariable(p,null===(h=this.config)||void 0===h?void 0:h.variable,"value");this.out._activateSignal(p)}_saveVariable(p,b,M){var h;const Q=p._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const y of Q){const M=p.assetsContext.animationGroups.find((p=>p.uniqueId==y));if(M)for(const h of M.targetedAnimations)if(h.target===p&&h.animation.targetProperty===b){M.stop();const b=Q.indexOf(y);b>-1&&Q.splice(b,1),p._setGlobalContextVariable("currentlyRunningAnimationGroups",Q);break}}const mp=null===(h=this.getDataInput(M||b))||void 0===h?void 0:h.getValue(p);p.setVariable(b,mp)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(p){var b;super.serialize(p),p.config.variable=null===(b=this.config)||void 0===b?void 0:b.variable}}(0,h.c)("FlowGraphSetVariableBlock",y)}}]);