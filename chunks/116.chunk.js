"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[116],{15120:(C,U,K)=>{K.r(U),K.d(U,{FlowGraphSetVariableBlock:()=>A});var m=K(11789),O=K(13564),X=K(13514);class A extends O.c{constructor(C){if(super(C),!C.variable&&!C.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(C.variables&&C.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(C.variables)for(const U of C.variables)this.registerDataInput(U,X.c);else this.registerDataInput("value",X.c)}_execute(C,U){var K,m;if(null!==(K=this.config)&&void 0!==K&&K.variables)for(const O of this.config.variables)this._saveVariable(C,O);else this._saveVariable(C,null===(m=this.config)||void 0===m?void 0:m.variable,"value");this.out._activateSignal(C)}_saveVariable(C,U,K){var m;const O=C._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const A of O){const K=C.assetsContext.animationGroups.find((C=>C.uniqueId==A));if(K)for(const m of K.targetedAnimations)if(m.target===C&&m.animation.targetProperty===U){K.stop();const U=O.indexOf(A);U>-1&&O.splice(U,1),C._setGlobalContextVariable("currentlyRunningAnimationGroups",O);break}}const X=null===(m=this.getDataInput(K||U))||void 0===m?void 0:m.getValue(C);C.setVariable(U,X)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(C){var U;super.serialize(C),C.config.variable=null===(U=this.config)||void 0===U?void 0:U.variable}}(0,m.h)("FlowGraphSetVariableBlock",A)}}]);