"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[116],{14615:(Z,x,F)=>{F.r(x),F.d(x,{FlowGraphSetVariableBlock:()=>Y});var u=F(11136),G=F(13007),f=F(12954);class Y extends G.e{constructor(Z){if(super(Z),!Z.variable&&!Z.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(Z.variables&&Z.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(Z.variables)for(const x of Z.variables)this.registerDataInput(x,f.d);else this.registerDataInput("value",f.d)}_execute(Z,x){var F,u;if(null!==(F=this.config)&&void 0!==F&&F.variables)for(const G of this.config.variables)this._saveVariable(Z,G);else this._saveVariable(Z,null===(u=this.config)||void 0===u?void 0:u.variable,"value");this.out._activateSignal(Z)}_saveVariable(Z,x,F){var u;const G=Z._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const Y of G){const F=Z.assetsContext.animationGroups.find((Z=>Z.uniqueId==Y));if(F)for(const u of F.targetedAnimations)if(u.target===Z&&u.animation.targetProperty===x){F.stop();const x=G.indexOf(Y);x>-1&&G.splice(x,1),Z._setGlobalContextVariable("currentlyRunningAnimationGroups",G);break}}const f=null===(u=this.getDataInput(F||x))||void 0===u?void 0:u.getValue(Z);Z.setVariable(x,f)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(Z){var x;super.serialize(Z),Z.config.variable=null===(x=this.config)||void 0===x?void 0:x.variable}}(0,u.g)("FlowGraphSetVariableBlock",Y)}}]);