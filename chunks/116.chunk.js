"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[116],{15511:(I,O,C)=>{C.r(O),C.d(O,{FlowGraphSetVariableBlock:()=>y});var j=C(12226),K=C(13944),i=C(13886);class y extends K.e{constructor(I){if(super(I),!I.variable&&!I.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(I.variables&&I.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(I.variables)for(const O of I.variables)this.registerDataInput(O,i.d);else this.registerDataInput("value",i.d)}_execute(I,O){var C,j;if(null!==(C=this.config)&&void 0!==C&&C.variables)for(const K of this.config.variables)this._saveVariable(I,K);else this._saveVariable(I,null===(j=this.config)||void 0===j?void 0:j.variable,"value");this.out._activateSignal(I)}_saveVariable(I,O,C){var j;const K=I._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const y of K){const C=I.assetsContext.animationGroups.find((I=>I.uniqueId==y));if(C)for(const j of C.targetedAnimations)if(j.target===I&&j.animation.targetProperty===O){C.stop();const O=K.indexOf(y);O>-1&&K.splice(O,1),I._setGlobalContextVariable("currentlyRunningAnimationGroups",K);break}}const i=null===(j=this.getDataInput(C||O))||void 0===j?void 0:j.getValue(I);I.setVariable(O,i)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(I){var O;super.serialize(I),I.config.variable=null===(O=this.config)||void 0===O?void 0:O.variable}}(0,j.e)("FlowGraphSetVariableBlock",y)}}]);