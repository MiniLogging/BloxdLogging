"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[116],{16034:(K,A,T)=>{T.r(A),T.d(A,{FlowGraphSetVariableBlock:()=>f});var G=T(12651),B=T(14295),L=T(14237);class f extends B.d{constructor(K){if(super(K),!K.variable&&!K.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(K.variables&&K.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(K.variables)for(const A of K.variables)this.registerDataInput(A,L.b);else this.registerDataInput("value",L.b)}_execute(K,A){var T,G;if(null!==(T=this.config)&&void 0!==T&&T.variables)for(const B of this.config.variables)this._saveVariable(K,B);else this._saveVariable(K,null===(G=this.config)||void 0===G?void 0:G.variable,"value");this.out._activateSignal(K)}_saveVariable(K,A,T){var G;const B=K._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const f of B){const T=K.assetsContext.animationGroups.find((K=>K.uniqueId==f));if(T)for(const G of T.targetedAnimations)if(G.target===K&&G.animation.targetProperty===A){T.stop();const A=B.indexOf(f);A>-1&&B.splice(A,1),K._setGlobalContextVariable("currentlyRunningAnimationGroups",B);break}}const L=null===(G=this.getDataInput(T||A))||void 0===G?void 0:G.getValue(K);K.setVariable(A,L)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(K){var A;super.serialize(K),K.config.variable=null===(A=this.config)||void 0===A?void 0:A.variable}}(0,G.c)("FlowGraphSetVariableBlock",f)}}]);