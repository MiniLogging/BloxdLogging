"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[116],{15109:(M,p,b)=>{b.r(p),b.d(p,{FlowGraphSetVariableBlock:()=>k});var Q=b(11757),q=b(13520),B=b(13477);class k extends q.c{constructor(M){if(super(M),!M.variable&&!M.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(M.variables&&M.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(M.variables)for(const p of M.variables)this.registerDataInput(p,B.c);else this.registerDataInput("value",B.c)}_execute(M,p){var b,Q;if(null!==(b=this.config)&&void 0!==b&&b.variables)for(const q of this.config.variables)this._saveVariable(M,q);else this._saveVariable(M,null===(Q=this.config)||void 0===Q?void 0:Q.variable,"value");this.out._activateSignal(M)}_saveVariable(M,p,b){var Q;const q=M._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const k of q){const b=M.assetsContext.animationGroups.find((M=>M.uniqueId==k));if(b)for(const Q of b.targetedAnimations)if(Q.target===M&&Q.animation.targetProperty===p){b.stop();const p=q.indexOf(k);p>-1&&q.splice(p,1),M._setGlobalContextVariable("currentlyRunningAnimationGroups",q);break}}const B=null===(Q=this.getDataInput(b||p))||void 0===Q?void 0:Q.getValue(M);M.setVariable(p,B)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(M){var p;super.serialize(M),M.config.variable=null===(p=this.config)||void 0===p?void 0:p.variable}}(0,Q.g)("FlowGraphSetVariableBlock",k)}}]);