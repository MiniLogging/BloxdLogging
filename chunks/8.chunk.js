"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8,9],{2407:(K,Y,l)=>{var v;l.d(Y,{b:()=>U}),function(K){K[K.PointerMove=0]="PointerMove",K[K.PointerDown=1]="PointerDown",K[K.PointerUp=2]="PointerUp"}(v||(v={}));class U{}U.DOM_DELTA_PIXEL=0,U.DOM_DELTA_LINE=1,U.DOM_DELTA_PAGE=2},2398:(K,Y,l)=>{l.d(Y,{b:()=>v,f:()=>d,i:()=>U});class v{}v.KEYDOWN=1,v.KEYUP=2;class U{constructor(K,Y){this.type=K,this.event=Y}}class d extends U{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(K){this.skipOnKeyboardObservable=K}constructor(K,Y){super(K,Y),this.type=K,this.event=Y,this.skipOnKeyboardObservable=!1}}},2395:(K,Y,l)=>{l.d(Y,{b:()=>U,e:()=>A,i:()=>c});var v=l(675);class U{}U.POINTERDOWN=1,U.POINTERUP=2,U.POINTERMOVE=4,U.POINTERWHEEL=8,U.POINTERPICK=16,U.POINTERTAP=32,U.POINTERDOUBLETAP=64;class d{constructor(K,Y){this.type=K,this.event=Y}}class A extends d{constructor(K,Y,l,U){super(K,Y),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new v.m(l,U)}}class c extends d{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(K,Y,l){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(K,Y),this._pickInfo=l,this._inputManager=v}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2438:(K,Y,l)=>{var v=l(2285),U=l(2305);U.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(U.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=v.c.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((K=>{this._texture._sphericalPolynomial=K,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(K){this._texture&&(this._texture._sphericalPolynomial=K)},enumerable:!0,configurable:!0})},2382:(K,Y,l)=>{function v(K){K.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}l.d(Y,{e:()=>v})},2387:(K,Y,l)=>{l.d(Y,{d:()=>d,e:()=>U});var v=l(2382);function U(K,Y){Y.EXPOSURE&&K.push("exposureLinear"),Y.CONTRAST&&K.push("contrast"),Y.COLORGRADING&&K.push("colorTransformSettings"),(Y.VIGNETTE||Y.DITHER)&&K.push("vInverseScreenSize"),Y.VIGNETTE&&(K.push("vignetteSettings1"),K.push("vignetteSettings2")),Y.COLORCURVES&&(0,v.e)(K),Y.DITHER&&K.push("ditherIntensity")}function d(K,Y){Y.COLORGRADING&&K.push("txColorTransform")}},2375:(K,Y,l)=>{l.d(Y,{e:()=>u});var v=l(646),U=l(652),d=l(469),A=l(706),c=l(702),t=l(2382);class Z{constructor(){this._dirty=!0,this._tempColor=new A.g(0,0,0,0),this._globalCurve=new A.g(0,0,0,0),this._highlightsCurve=new A.g(0,0,0,0),this._midtonesCurve=new A.g(0,0,0,0),this._shadowsCurve=new A.g(0,0,0,0),this._positiveCurve=new A.g(0,0,0,0),this._negativeCurve=new A.g(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(K){this._globalHue=K,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(K){this._globalDensity=K,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(K){this._globalSaturation=K,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(K){this._globalExposure=K,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(K){this._highlightsHue=K,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(K){this._highlightsDensity=K,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(K){this._highlightsSaturation=K,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(K){this._highlightsExposure=K,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(K){this._midtonesHue=K,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(K){this._midtonesDensity=K,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(K){this._midtonesSaturation=K,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(K){this._midtonesExposure=K,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(K){this._shadowsHue=K,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(K){this._shadowsDensity=K,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(K){this._shadowsSaturation=K,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(K){this._shadowsExposure=K,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";K._dirty&&(K._dirty=!1,K._getColorGradingDataToRef(K._globalHue,K._globalDensity,K._globalSaturation,K._globalExposure,K._globalCurve),K._getColorGradingDataToRef(K._highlightsHue,K._highlightsDensity,K._highlightsSaturation,K._highlightsExposure,K._tempColor),K._tempColor.multiplyToRef(K._globalCurve,K._highlightsCurve),K._getColorGradingDataToRef(K._midtonesHue,K._midtonesDensity,K._midtonesSaturation,K._midtonesExposure,K._tempColor),K._tempColor.multiplyToRef(K._globalCurve,K._midtonesCurve),K._getColorGradingDataToRef(K._shadowsHue,K._shadowsDensity,K._shadowsSaturation,K._shadowsExposure,K._tempColor),K._tempColor.multiplyToRef(K._globalCurve,K._shadowsCurve),K._highlightsCurve.subtractToRef(K._midtonesCurve,K._positiveCurve),K._midtonesCurve.subtractToRef(K._shadowsCurve,K._negativeCurve)),Y&&(Y.setFloat4(l,K._positiveCurve.r,K._positiveCurve.g,K._positiveCurve.b,K._positiveCurve.a),Y.setFloat4(v,K._midtonesCurve.r,K._midtonesCurve.g,K._midtonesCurve.b,K._midtonesCurve.a),Y.setFloat4(U,K._negativeCurve.r,K._negativeCurve.g,K._negativeCurve.b,K._negativeCurve.a))}_getColorGradingDataToRef(K,Y,l,v,U){null!=K&&(K=Z._Clamp(K,0,360),Y=Z._Clamp(Y,-100,100),l=Z._Clamp(l,-100,100),v=Z._Clamp(v,-100,100),Y=Z._ApplyColorGradingSliderNonlinear(Y),Y*=.5,v=Z._ApplyColorGradingSliderNonlinear(v),Y<0&&(Y*=-1,K=(K+180)%360),Z._FromHSBToRef(K,Y,50+.25*v,U),U.scaleToRef(2,U),U.a=1+.01*l)}static _ApplyColorGradingSliderNonlinear(K){K/=100;let Y=Math.abs(K);return Y=Math.pow(Y,2),K<0&&(Y*=-1),Y*=100,Y}static _FromHSBToRef(K,Y,l,v){let U=Z._Clamp(K,0,360);const d=Z._Clamp(Y/100,0,1),A=Z._Clamp(l/100,0,1);if(0===d)v.r=A,v.g=A,v.b=A;else{U/=60;const K=Math.floor(U),Y=U-K,l=A*(1-d),c=A*(1-d*Y),t=A*(1-d*(1-Y));switch(K){case 0:v.r=A,v.g=t,v.b=l;break;case 1:v.r=c,v.g=A,v.b=l;break;case 2:v.r=l,v.g=A,v.b=t;break;case 3:v.r=l,v.g=c,v.b=A;break;case 4:v.r=t,v.g=l,v.b=A;break;default:v.r=A,v.g=l,v.b=c}}v.a=1}static _Clamp(K,Y,l){return Math.min(Math.max(K,Y),l)}clone(){return c.c.Clone((()=>new Z),this)}serialize(){return c.c.Serialize(this)}static Parse(K){return c.c.Parse((()=>new Z),K,null,null)}}Z.PrepareUniforms=t.e,(0,v.d)([(0,U.J)()],Z.prototype,"_globalHue",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_globalDensity",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_globalSaturation",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_globalExposure",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_highlightsHue",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_highlightsDensity",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_highlightsSaturation",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_highlightsExposure",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_midtonesHue",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_midtonesDensity",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_midtonesSaturation",void 0),(0,v.d)([(0,U.J)()],Z.prototype,"_midtonesExposure",void 0),c.c._ColorCurvesParser=Z.Parse;var m=l(627),V=l(2387),M=l(619);class u{constructor(){this.colorCurves=new Z,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=u.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new A.g(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=u.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.onUpdateParameters=new d.b}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(K){this._colorCurvesEnabled!==K&&(this._colorCurvesEnabled=K,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(K){this._colorGradingTexture!==K&&(this._colorGradingTexture=K,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(K){this._colorGradingEnabled!==K&&(this._colorGradingEnabled=K,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(K){this._colorGradingWithGreenDepth!==K&&(this._colorGradingWithGreenDepth=K,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(K){this._colorGradingBGR!==K&&(this._colorGradingBGR=K,this._updateParameters())}get exposure(){return this._exposure}set exposure(K){this._exposure!==K&&(this._exposure=K,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(K){this._toneMappingEnabled!==K&&(this._toneMappingEnabled=K,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(K){this._toneMappingType!==K&&(this._toneMappingType=K,this._updateParameters())}get contrast(){return this._contrast}set contrast(K){this._contrast!==K&&(this._contrast=K,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(K){this.vignetteCenterY=K}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(K){this.vignetteCenterX=K}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(K){this._vignetteBlendMode!==K&&(this._vignetteBlendMode=K,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(K){this._vignetteEnabled!==K&&(this._vignetteEnabled=K,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(K){this._ditheringEnabled!==K&&(this._ditheringEnabled=K,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(K){this._ditheringIntensity!==K&&(this._ditheringIntensity=K,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(K){this._skipFinalColorClamp!==K&&(this._skipFinalColorClamp=K,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(K){this._applyByPostProcess!==K&&(this._applyByPostProcess=K,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(K){this._isEnabled!==K&&(this._isEnabled=K,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(K){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return K.VIGNETTE=!1,K.TONEMAPPING=0,K.CONTRAST=!1,K.EXPOSURE=!1,K.COLORCURVES=!1,K.COLORGRADING=!1,K.COLORGRADING3D=!1,K.DITHER=!1,K.IMAGEPROCESSING=!1,K.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(K.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(K.VIGNETTE=this.vignetteEnabled,K.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===u._VIGNETTEMODE_MULTIPLY,K.VIGNETTEBLENDMODEOPAQUE=!K.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case u.TONEMAPPING_KHR_PBR_NEUTRAL:K.TONEMAPPING=3;break;case u.TONEMAPPING_ACES:K.TONEMAPPING=2;break;default:K.TONEMAPPING=1}else K.TONEMAPPING=0;K.CONTRAST=1!==this.contrast,K.EXPOSURE=1!==this.exposure,K.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,K.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,K.COLORGRADING?K.COLORGRADING3D=this.colorGradingTexture.is3D:K.COLORGRADING3D=!1,K.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,K.SAMPLER3DBGRMAP=this.colorGradingBGR,K.DITHER=this._ditheringEnabled,K.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,K.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,K.IMAGEPROCESSING=K.VIGNETTE||!!K.TONEMAPPING||K.CONTRAST||K.EXPOSURE||K.COLORCURVES||K.COLORGRADING||K.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(K,Y){if(this._colorCurvesEnabled&&this.colorCurves&&Z.Bind(this.colorCurves,K),this._vignetteEnabled||this._ditheringEnabled){const l=1/K.getEngine().getRenderWidth(),v=1/K.getEngine().getRenderHeight();if(K.setFloat2("vInverseScreenSize",l,v),this._ditheringEnabled&&K.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const U=null!=Y?Y:v/l;let d=Math.tan(.5*this.vignetteCameraFov),A=d*U;const c=Math.sqrt(A*d);A=(0,m.j)(A,c,this.vignetteStretch),d=(0,m.j)(d,c,this.vignetteStretch),K.setFloat4("vignetteSettings1",A,d,-A*this.vignetteCenterX,-d*this.vignetteCenterY);const t=-2*this.vignetteWeight;K.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,t)}}if(K.setFloat("exposureLinear",this.exposure),K.setFloat("contrast",this.contrast),this.colorGradingTexture){K.setTexture("txColorTransform",this.colorGradingTexture);const Y=this.colorGradingTexture.getSize().height;K.setFloat4("colorTransformSettings",(Y-1)/Y,.5/Y,Y,this.colorGradingTexture.level)}}clone(){return c.c.Clone((()=>new u),this)}serialize(){return c.c.Serialize(this)}static Parse(K){const Y=c.c.Parse((()=>new u),K,null,null);return void 0!==K.vignetteCentreX&&(Y.vignetteCenterX=K.vignetteCentreX),void 0!==K.vignetteCentreY&&(Y.vignetteCenterY=K.vignetteCentreY),Y}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}u.TONEMAPPING_STANDARD=0,u.TONEMAPPING_ACES=1,u.TONEMAPPING_KHR_PBR_NEUTRAL=2,u.PrepareUniforms=V.e,u.PrepareSamplers=V.d,u._VIGNETTEMODE_MULTIPLY=0,u._VIGNETTEMODE_OPAQUE=1,(0,v.d)([(0,U.h)()],u.prototype,"colorCurves",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_colorCurvesEnabled",void 0),(0,v.d)([(0,U.C)("colorGradingTexture")],u.prototype,"_colorGradingTexture",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_colorGradingEnabled",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_colorGradingWithGreenDepth",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_colorGradingBGR",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_exposure",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_toneMappingEnabled",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_toneMappingType",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_contrast",void 0),(0,v.d)([(0,U.J)()],u.prototype,"vignetteStretch",void 0),(0,v.d)([(0,U.J)()],u.prototype,"vignetteCenterX",void 0),(0,v.d)([(0,U.J)()],u.prototype,"vignetteCenterY",void 0),(0,v.d)([(0,U.J)()],u.prototype,"vignetteWeight",void 0),(0,v.d)([(0,U.o)()],u.prototype,"vignetteColor",void 0),(0,v.d)([(0,U.J)()],u.prototype,"vignetteCameraFov",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_vignetteBlendMode",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_vignetteEnabled",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_ditheringEnabled",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_ditheringIntensity",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_skipFinalColorClamp",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_applyByPostProcess",void 0),(0,v.d)([(0,U.J)()],u.prototype,"_isEnabled",void 0),c.c._ImageProcessingConfigurationParser=u.Parse,(0,M.f)("BABYLON.ImageProcessingConfiguration",u)},2440:(K,Y,l)=>{l.r(Y),l.d(Y,{Dispose:()=>M,DumpData:()=>V,DumpDataAsync:()=>m,DumpFramebuffer:()=>Z,DumpTools:()=>u});var v=l(2331),U=l(475),d=l(695),A=l(526);let c,t=null;async function Z(K,Y,l,v){let U=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",d=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const c=await l.readPixels(0,0,K,Y);V(K,Y,new Uint8Array(c.buffer),v,U,d,!0,void 0,A)}function m(K,Y,l){let v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",U=arguments.length>4?arguments[4]:void 0,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7?arguments[7]:void 0;return new Promise((t=>{V(K,Y,l,(K=>t(K)),v,U,d,A,c)}))}function V(K,Y,Z,m){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",u=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],W=arguments.length>7&&void 0!==arguments[7]&&arguments[7],g=arguments.length>8?arguments[8]:void 0;(async function(){return t||(t=new Promise(((K,Y)=>{let U,d=null;const t={Qk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};l.e(22).then(l.bind(l,12001)).then((Z=>{let{ThinEngine:m}=Z;try{U=new OffscreenCanvas(100,100),d=new m(U,!1,t)}catch(u){U=document.createElement("canvas"),d=new m(U,!1,t)}A.e.Instances.pop(),A.e.OnEnginesDisposedObservable.add((K=>{d&&K!==d&&!d.u&&0===A.e.Instances.length&&M()})),d.getCaps().parallelShaderCompile=void 0;const V=new v.e(d);l.e(33).then(l.bind(l,12955)).then((l=>{let{passPixelShader:A}=l;if(!d)return void Y("Engine is not defined");const t=new v.f({Ii:d,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});c={canvas:U,Ii:d,renderer:V,wrapper:t},K(c)}))})).catch(Y)}))),await t})().then((l=>{if(l.Ii.setSize(K,Y,!0),Z instanceof Float32Array){const K=new Uint8Array(Z.length);let Y=Z.length;for(;Y--;){const l=Z[Y];K[Y]=Math.round(255*(0,d.d)(l))}Z=K}const v=l.Ii.createRawTexture(Z,K,Y,5,!1,!o,1);l.renderer.setViewport(),l.renderer.applyEffectWrapper(l.wrapper),l.wrapper.effect._bindTexture("textureSampler",v),l.renderer.draw(),W?U.d.ToBlob(l.canvas,(K=>{const Y=new FileReader;Y.onload=K=>{const Y=K.target.result;m&&m(Y)},Y.readAsArrayBuffer(K)}),V,g):U.d.EncodeScreenshotCanvasData(l.canvas,m,V,u,g),v.dispose()}))}function M(){var K;c?(c.wrapper.dispose(),c.renderer.dispose(),c.Ii.dispose()):null===(K=t)||void 0===K||K.then((K=>{K.wrapper.dispose(),K.renderer.dispose(),K.Ii.dispose()}));t=null,c=null}const u={DumpData:V,DumpDataAsync:m,DumpFramebuffer:Z,Dispose:M};U.d.DumpData=V,U.d.DumpDataAsync=m,U.d.DumpFramebuffer=Z},2360:(K,Y,l)=>{l.d(Y,{c:()=>o,g:()=>J,h:()=>H,i:()=>z});var v=l(475),U=l(675),d=l(695),A=l(2259),c=l(594),t=l(2305),Z=(l(2366),l(2322)),m=l(492);l(2431),l(2438),l(2440);const V="image/png",M=2,u=[134,22,135,150,246,214,150,54];function o(K){const Y=new DataView(K.buffer,K.byteOffset,K.byteLength);let l=0;for(let A=0;A<u.length;A++)if(Y.getUint8(l++)!==u[A])return m.e.Error("Not a babylon environment map"),null;let v="",U=0;for(;U=Y.getUint8(l++);)v+=String.fromCharCode(U);let d=JSON.parse(v);return d=W(d),d.bj&&(d.bj.specularDataPosition=l,d.bj.lodGenerationScale=d.bj.lodGenerationScale||.8),d}function W(K){if(K.version>M)throw new Error(`Unsupported babylon environment map version "${K.version}". Latest supported version is "${M}".`);return 2===K.version?K:K={...K,version:2,imageType:V}}function g(K,Y){const l=(Y=W(Y)).bj;let v=Math.log2(Y.width);if(v=Math.round(v)+1,l.mipmaps.length!==6*v)throw new Error(`Unsupported specular mipmaps number "${l.mipmaps.length}"`);const U=new Array(v);for(let d=0;d<v;d++){U[d]=new Array(6);for(let Y=0;Y<6;Y++){const v=l.mipmaps[6*d+Y];U[d][Y]=new Uint8Array(K.buffer,K.byteOffset+l.specularDataPosition+v.position,v.length)}}return U}function J(K,Y,l){const v=(l=W(l)).bj;if(!v)return Promise.resolve();K._lodGenerationScale=v.lodGenerationScale;return R(K,g(Y,l),l.imageType)}function n(K,Y,l,v,U,d,A,c,t,Z,m){return new Promise(((V,M)=>{if(l){const l=Y.createTexture(null,!0,!0,null,1,null,(K=>{M(K)}),K);null===v||void 0===v||v.onEffectCreatedObservable.addOnce((c=>{c.executeWhenCompiled((()=>{v.externalTextureSamplerBinding=!0,v.onApply=v=>{v._bindTexture("textureSampler",l),v.setFloat2("scale",1,Y._features.needsInvertingBitmap&&K instanceof ImageBitmap?-1:1)},Y.scenes.length&&(Y.scenes[0].postProcessManager.directRender([v],Z,!0,d,A),Y.restoreDefaultFramebuffer(),l.dispose(),URL.revokeObjectURL(U),V())}))}))}else{if(Y._uploadImageToTexture(m,K,d,A),c){const l=t[A];l&&Y._uploadImageToTexture(l._texture,K,d,0)}V()}}))}async function R(K,Y){let U=arguments.length>2&&void 0!==arguments[2]?arguments[2]:V;if(!v.d.IsExponentOfTwo(K.width))throw new Error("Texture size must be a power of two");const A=(0,d.m)(K.width)+1,m=K.getEngine();let M=!1,u=!1,o=null,W=null,g=null;const J=m.getCaps();K.format=5,K.type=0,K.generateMipMaps=!0,K._cachedAnisotropicFilteringLevel=null,m.updateTextureSamplingMode(3,K),J.textureLOD?m._features.supportRenderAndCopyToLodForFloatTextures?J.textureHalfFloatRender&&J.textureHalfFloatLinearFiltering?(M=!0,K.type=2):J.textureFloatRender&&J.textureFloatLinearFiltering&&(M=!0,K.type=1):M=!1:(M=!1,u=!0,g={});let R=0;if(M)m.isWebGPU?(R=1,await l.e(25).then(l.bind(l,12986))):await l.e(23).then(l.bind(l,12989)),o=new Z.c("rgbdDecode","rgbdDecode",null,null,1,null,3,m,!1,void 0,K.type,void 0,null,!1,void 0,R),K._isRGBD=!1,K.invertY=!1,W=m.createRenderTargetCubeTexture(K.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:K.type,format:5});else if(K._isRGBD=!0,K.invertY=!0,u){const Y=3,l=K._lodGenerationScale,v=K._lodGenerationOffset;for(let U=0;U<Y;U++){const d=(A-1)*l+v,Z=v+(d-v)*(1-U/(Y-1)),V=Math.round(Math.min(Math.max(Z,0),d)),M=new c.e(m,2);M.isCube=!0,M.invertY=!0,M.generateMipMaps=!1,m.updateTextureSamplingMode(2,M);const u=new t.e(null);switch(u._isCube=!0,u._texture=M,g[V]=u,U){case 0:K._lodTextureLow=u;break;case 1:K._lodTextureMid=u;break;case 2:K._lodTextureHigh=u}}}const H=[];for(let l=0;l<Y.length;l++)for(let v=0;v<6;v++){const d=Y[l][v],A=new Blob([d],{type:U}),c=URL.createObjectURL(A);let t;if(m._features.forceBitmapOverHTMLImageElement)t=m.createImageBitmap(A,{premultiplyAlpha:"none"}).then((Y=>n(Y,m,M,o,c,v,l,u,g,W,K)));else{const Y=new Image;Y.src=c,t=new Promise(((U,d)=>{Y.onload=()=>{n(Y,m,M,o,c,v,l,u,g,W,K).then((()=>U())).catch((K=>{d(K)}))},Y.onerror=K=>{d(K)}}))}H.push(t)}if(Y.length<A){let l;const v=Math.pow(2,A-1-Y.length),U=v*v*4;switch(K.type){case 0:l=new Uint8Array(U);break;case 2:l=new Uint16Array(U);break;case 1:l=new Float32Array(U)}for(let d=Y.length;d<A;d++)for(let Y=0;Y<6;Y++)m._uploadArrayBufferViewToTexture(K,l,Y,d)}return Promise.all(H).then((()=>{W&&(m._releaseTexture(K),W._swapAndDie(K)),o&&o.dispose(),u&&(K._lodTextureHigh&&K._lodTextureHigh._texture&&(K._lodTextureHigh._texture.isReady=!0),K._lodTextureMid&&K._lodTextureMid._texture&&(K._lodTextureMid._texture.isReady=!0),K._lodTextureLow&&K._lodTextureLow._texture&&(K._lodTextureLow._texture.isReady=!0))}))}function H(K,Y){const l=(Y=W(Y)).irradiance;if(!l)return;const v=new A.f;U.o.FromArrayToRef(l.x,0,v.x),U.o.FromArrayToRef(l.y,0,v.y),U.o.FromArrayToRef(l.z,0,v.z),U.o.FromArrayToRef(l.xx,0,v.xx),U.o.FromArrayToRef(l.yy,0,v.yy),U.o.FromArrayToRef(l.zz,0,v.zz),U.o.FromArrayToRef(l.yz,0,v.yz),U.o.FromArrayToRef(l.zx,0,v.zx),U.o.FromArrayToRef(l.xy,0,v.xy),K._sphericalPolynomial=v}function z(K,Y,l,v,U){const d=R(K.getEngine().createRawCubeTexture(null,K.width,K.format,K.type,K.generateMipMaps,K.invertY,K.samplingMode,K._compression),Y).then((()=>K));return K.onRebuildCallback=K=>({proxy:d,isReady:!0,isAsync:!0}),K._source=13,K._bufferViewArrayArray=Y,K._lodGenerationScale=v,K._lodGenerationOffset=U,K._sphericalPolynomial=l,R(K,Y).then((()=>(K.isReady=!0,K)))}},2419:(K,Y,l)=>{l.d(Y,{b:()=>U});var v=l(508);class U{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(K,Y){U.Enabled&&(this._current+=K,Y&&this._fetchResult())}beginMonitoring(){U.Enabled&&(this._startMonitoringTime=v.d.Now)}endMonitoring(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!U.Enabled)return;K&&this.fetchNewFrame();const Y=v.d.Now;this._current=Y-this._startMonitoringTime,K&&this._fetchResult()}Gi(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const K=v.d.Now;K-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=K,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}U.Enabled=!0},2431:(K,Y,l)=>{l.d(Y,{d:()=>d});var v=l(2322),U=l(2294);class d{static ExpandRGBDTexture(K){const Y=K._texture;if(!Y||!K.isRGBD)return;const U=Y.getEngine(),d=U.getCaps(),A=Y.isReady;let c=!1;d.textureHalfFloatRender&&d.textureHalfFloatLinearFiltering?(c=!0,Y.type=2):d.textureFloatRender&&d.textureFloatLinearFiltering&&(c=!0,Y.type=1),c&&(Y.isReady=!1,Y._isRGBD=!1,Y.invertY=!1);const t=async()=>{const d=U.isWebGPU,A=d?1:0;Y.isReady=!1,d?await Promise.all([l.e(25).then(l.bind(l,12986)),l.e(26).then(l.bind(l,12996))]):await Promise.all([l.e(23).then(l.bind(l,12989)),l.e(24).then(l.bind(l,13001))]);const c=new v.c("rgbdDecode","rgbdDecode",null,null,1,null,3,U,!1,void 0,Y.type,void 0,null,!1,void 0,A);c.externalTextureSamplerBinding=!0;const t=U.createRenderTargetTexture(Y.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:Y.samplingMode,type:Y.type,format:5});c.onEffectCreatedObservable.addOnce((l=>{l.executeWhenCompiled((()=>{c.onApply=K=>{K._bindTexture("textureSampler",Y),K.setFloat2("scale",1,1)},K.va().postProcessManager.directRender([c],t,!0),U.restoreDefaultFramebuffer(),U._releaseTexture(Y),c&&c.dispose(),t._swapAndDie(Y),Y.isReady=!0}))}))};c&&(A?t():K.onLoadObservable.addOnce(t))}static EncodeTextureToRGBD(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,U.c)("rgbdEncode",K,Y,l,1,5)}}},2428:(K,Y,l)=>{l.d(Y,{c:()=>v});class v{static get UniqueId(){const K=this._UniqueIdCounter;return this._UniqueIdCounter++,K}}v._UniqueIdCounter=1},2413:(K,Y,l)=>{l.d(Y,{e:()=>v});class v{}v._IsPickingAvailable=!1},2366:(K,Y,l)=>{l.d(Y,{b:()=>KK});var v=l(475),U=l(508),d=l(469),A=l(668);class c{constructor(){this._count=0,this._data={}}p(K){this.clear(),K.forEach(((K,Y)=>this.add(K,Y)))}get(K){const Y=this._data[K];if(void 0!==Y)return Y}getOrAddWithFactory(K,Y){let l=this.get(K);return void 0!==l||(l=Y(K),l&&this.add(K,l)),l}getOrAdd(K,Y){const l=this.get(K);return void 0!==l?l:(this.add(K,Y),Y)}contains(K){return void 0!==this._data[K]}add(K,Y){return void 0===this._data[K]&&(this._data[K]=Y,++this._count,!0)}set(K,Y){return void 0!==this._data[K]&&(this._data[K]=Y,!0)}getAndRemove(K){const Y=this.get(K);return void 0!==Y?(delete this._data[K],--this._count,Y):null}remove(K){return!!this.contains(K)&&(delete this._data[K],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(K){for(const Y in this._data){K(Y,this._data[Y])}}first(K){for(const Y in this._data){const l=K(Y,this._data[Y]);if(l)return l}return null}}var t=l(635),Z=l(675),m=l(2375),V=l(831),M=l(823);class u{constructor(K,Y,l,v,U,d){this.source=K,this.pointerX=Y,this.pointerY=l,this.meshUnderPointer=v,this.sourceEvent=U,this.additionalData=d}static CreateNew(K,Y,l){const v=K.va();return new u(K,v.pointerX,v.pointerY,v.meshUnderPointer||K,Y,l)}static CreateNewFromSprite(K,Y,l,v){return new u(K,Y.pointerX,Y.pointerY,Y.meshUnderPointer,l,v)}static CreateNewFromScene(K,Y){return new u(null,K.pointerX,K.pointerY,K.meshUnderPointer,Y)}static CreateNewFromPrimitive(K,Y,l,v){return new u(K,Y.x,Y.y,null,l,v)}}var o=l(2314),W=l(2316),g=l(863),J=l(484),n=l(526),R=l(515),H=l(2395);class z{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const K in z.Triggers)if(Object.prototype.hasOwnProperty.call(z.Triggers,K))return!0;return!1}static get HasPickTriggers(){for(const K in z.Triggers)if(Object.prototype.hasOwnProperty.call(z.Triggers,K)){const Y=parseInt(K);if(Y>=1&&Y<=7)return!0}return!1}static HasSpecificTrigger(K){for(const Y in z.Triggers)if(Object.prototype.hasOwnProperty.call(z.Triggers,Y)){if(parseInt(Y)===K)return!0}return!1}}z.Triggers={};var r,E,y,T,e,i,D,B=l(2398);!function(K){K[K.Generic=0]="Generic",K[K.Keyboard=1]="Keyboard",K[K.Mouse=2]="Mouse",K[K.Touch=3]="Touch",K[K.DualShock=4]="DualShock",K[K.Xbox=5]="Xbox",K[K.Switch=6]="Switch",K[K.DualSense=7]="DualSense"}(r||(r={})),function(K){K[K.Horizontal=0]="Horizontal",K[K.Vertical=1]="Vertical",K[K.LeftClick=2]="LeftClick",K[K.MiddleClick=3]="MiddleClick",K[K.RightClick=4]="RightClick",K[K.BrowserBack=5]="BrowserBack",K[K.BrowserForward=6]="BrowserForward",K[K.MouseWheelX=7]="MouseWheelX",K[K.MouseWheelY=8]="MouseWheelY",K[K.MouseWheelZ=9]="MouseWheelZ",K[K.Move=12]="Move"}(E||(E={})),function(K){K[K.Horizontal=0]="Horizontal",K[K.Vertical=1]="Vertical",K[K.LeftClick=2]="LeftClick",K[K.MiddleClick=3]="MiddleClick",K[K.RightClick=4]="RightClick",K[K.BrowserBack=5]="BrowserBack",K[K.BrowserForward=6]="BrowserForward",K[K.MouseWheelX=7]="MouseWheelX",K[K.MouseWheelY=8]="MouseWheelY",K[K.MouseWheelZ=9]="MouseWheelZ",K[K.DeltaHorizontal=10]="DeltaHorizontal",K[K.DeltaVertical=11]="DeltaVertical"}(y||(y={})),function(K){K[K.Cross=0]="Cross",K[K.Circle=1]="Circle",K[K.Square=2]="Square",K[K.Triangle=3]="Triangle",K[K.L1=4]="L1",K[K.R1=5]="R1",K[K.L2=6]="L2",K[K.R2=7]="R2",K[K.Share=8]="Share",K[K.Options=9]="Options",K[K.L3=10]="L3",K[K.R3=11]="R3",K[K.DPadUp=12]="DPadUp",K[K.DPadDown=13]="DPadDown",K[K.DPadLeft=14]="DPadLeft",K[K.DPadRight=15]="DPadRight",K[K.Home=16]="Home",K[K.TouchPad=17]="TouchPad",K[K.LStickXAxis=18]="LStickXAxis",K[K.LStickYAxis=19]="LStickYAxis",K[K.RStickXAxis=20]="RStickXAxis",K[K.RStickYAxis=21]="RStickYAxis"}(T||(T={})),function(K){K[K.Cross=0]="Cross",K[K.Circle=1]="Circle",K[K.Square=2]="Square",K[K.Triangle=3]="Triangle",K[K.L1=4]="L1",K[K.R1=5]="R1",K[K.L2=6]="L2",K[K.R2=7]="R2",K[K.Create=8]="Create",K[K.Options=9]="Options",K[K.L3=10]="L3",K[K.R3=11]="R3",K[K.DPadUp=12]="DPadUp",K[K.DPadDown=13]="DPadDown",K[K.DPadLeft=14]="DPadLeft",K[K.DPadRight=15]="DPadRight",K[K.Home=16]="Home",K[K.TouchPad=17]="TouchPad",K[K.LStickXAxis=18]="LStickXAxis",K[K.LStickYAxis=19]="LStickYAxis",K[K.RStickXAxis=20]="RStickXAxis",K[K.RStickYAxis=21]="RStickYAxis"}(e||(e={})),function(K){K[K.A=0]="A",K[K.B=1]="B",K[K.X=2]="X",K[K.Y=3]="Y",K[K.LB=4]="LB",K[K.RB=5]="RB",K[K.LT=6]="LT",K[K.RT=7]="RT",K[K.Back=8]="Back",K[K.Start=9]="Start",K[K.LS=10]="LS",K[K.RS=11]="RS",K[K.DPadUp=12]="DPadUp",K[K.DPadDown=13]="DPadDown",K[K.DPadLeft=14]="DPadLeft",K[K.DPadRight=15]="DPadRight",K[K.Home=16]="Home",K[K.LStickXAxis=17]="LStickXAxis",K[K.LStickYAxis=18]="LStickYAxis",K[K.RStickXAxis=19]="RStickXAxis",K[K.RStickYAxis=20]="RStickYAxis"}(i||(i={})),function(K){K[K.B=0]="B",K[K.A=1]="A",K[K.Y=2]="Y",K[K.X=3]="X",K[K.L=4]="L",K[K.R=5]="R",K[K.ZL=6]="ZL",K[K.ZR=7]="ZR",K[K.Minus=8]="Minus",K[K.Plus=9]="Plus",K[K.LS=10]="LS",K[K.RS=11]="RS",K[K.DPadUp=12]="DPadUp",K[K.DPadDown=13]="DPadDown",K[K.DPadLeft=14]="DPadLeft",K[K.DPadRight=15]="DPadRight",K[K.Home=16]="Home",K[K.Capture=17]="Capture",K[K.LStickXAxis=18]="LStickXAxis",K[K.LStickYAxis=19]="LStickYAxis",K[K.RStickXAxis=20]="RStickXAxis",K[K.RStickYAxis=21]="RStickYAxis"}(D||(D={}));var P=l(2407);class G{static CreateDeviceEvent(K,Y,l,v,U,d,A){switch(K){case r.Keyboard:return this._CreateKeyboardEvent(l,v,U,d);case r.Mouse:if(l===E.MouseWheelX||l===E.MouseWheelY||l===E.MouseWheelZ)return this._CreateWheelEvent(K,Y,l,v,U,d);case r.Touch:return this._CreatePointerEvent(K,Y,l,v,U,d,A);default:throw`Unable to generate event for device ${r[K]}`}}static _CreatePointerEvent(K,Y,l,v,U,d,A){const c=this._CreateMouseEvent(K,Y,l,v,U,d);K===r.Mouse?(c.deviceType=r.Mouse,c.pointerId=1,c.pointerType="mouse"):(c.deviceType=r.Touch,c.pointerId=A??Y,c.pointerType="touch");let t=0;return t+=U.pollInput(K,Y,E.LeftClick),t+=2*U.pollInput(K,Y,E.RightClick),t+=4*U.pollInput(K,Y,E.MiddleClick),c.buttons=t,l===E.Move?c.type="pointermove":l>=E.LeftClick&&l<=E.RightClick&&(c.type=1===v?"pointerdown":"pointerup",c.button=l-2),c}static _CreateWheelEvent(K,Y,l,v,U,d){const A=this._CreateMouseEvent(K,Y,l,v,U,d);switch(A.pointerId=1,A.type="wheel",A.deltaMode=P.b.DOM_DELTA_PIXEL,A.deltaX=0,A.deltaY=0,A.deltaZ=0,l){case E.MouseWheelX:A.deltaX=v;break;case E.MouseWheelY:A.deltaY=v;break;case E.MouseWheelZ:A.deltaZ=v}return A}static _CreateMouseEvent(K,Y,l,v,U,d){const A=this._CreateEvent(d),c=U.pollInput(K,Y,E.Horizontal),t=U.pollInput(K,Y,E.Vertical);return d?(A.movementX=0,A.movementY=0,A.offsetX=A.movementX-d.getBoundingClientRect().x,A.offsetY=A.movementY-d.getBoundingClientRect().y):(A.movementX=U.pollInput(K,Y,10),A.movementY=U.pollInput(K,Y,11),A.offsetX=0,A.offsetY=0),this._CheckNonCharacterKeys(A,U),A.clientX=c,A.clientY=t,A.x=c,A.y=t,A.deviceType=K,A.deviceSlot=Y,A.inputIndex=l,A}static _CreateKeyboardEvent(K,Y,l,v){const U=this._CreateEvent(v);return this._CheckNonCharacterKeys(U,l),U.deviceType=r.Keyboard,U.deviceSlot=0,U.inputIndex=K,U.type=1===Y?"keydown":"keyup",U.key=String.fromCharCode(K),U.keyCode=K,U}static _CheckNonCharacterKeys(K,Y){const l=Y.isDeviceAvailable(r.Keyboard),v=l&&1===Y.pollInput(r.Keyboard,0,18),U=l&&1===Y.pollInput(r.Keyboard,0,17),d=l&&(1===Y.pollInput(r.Keyboard,0,91)||1===Y.pollInput(r.Keyboard,0,92)||1===Y.pollInput(r.Keyboard,0,93)),A=l&&1===Y.pollInput(r.Keyboard,0,16);K.altKey=v,K.ctrlKey=U,K.metaKey=d,K.shiftKey=A}static _CreateEvent(K){const Y={preventDefault:()=>{}};return Y.target=K,Y}}class Q{constructor(K,Y,l){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(K,Y,((K,Y,v,U)=>{const d=G.CreateDeviceEvent(K,Y,v,U,this);l(K,Y,d)})):this._createDummyNativeInput()}pollInput(K,Y,l){return this._nativeInput.pollInput(K,Y,l)}isDeviceAvailable(K){return K===r.Mouse||K===r.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const X=Object.keys(E).length/2;class f{constructor(K,Y,l,U){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=v.d.IsSafari(),this._usingMacOS=(0,J.i)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=K=>{},this._keyboardUpEvent=K=>{},this._keyboardBlurEvent=K=>{},this._pointerMoveEvent=K=>{},this._pointerDownEvent=K=>{},this._pointerUpEvent=K=>{},this._pointerCancelEvent=K=>{},this._pointerWheelEvent=K=>{},this._pointerBlurEvent=K=>{},this._pointerMacOSChromeOutEvent=K=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,J.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,J.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=K=>{},this._gamepadDisconnectedEvent=K=>{},this._eventPrefix=v.d.GetPointerPrefix(K),this._engine=K,this._onDeviceConnected=Y,this._onDeviceDisconnected=l,this._onInputChanged=U,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOS&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(K,Y,l){const U=this._inputs[K][Y];if(!U)throw`Unable to find device ${r[K]}`;K>=r.DualShock&&K<=r.DualSense&&this._updateDevice(K,Y,l);const d=U[l];if(void 0===d)throw`Unable to find input ${l} for device ${r[K]} in slot ${Y}`;return l===E.Move&&v.d.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),d}isDeviceAvailable(K){return void 0!==this._inputs[K]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const K=null===this||void 0===this?void 0:this._engine.getInputElement();if(K&&(!this._eventsAttached||this._elementToAttachTo!==K)){if(this._disableEvents(),this._inputs)for(const K of this._inputs)if(K)for(const Y in K){const l=K[+Y];if(l)for(let K=0;K<l.length;K++)l[K]=0}this._elementToAttachTo=K,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOS&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const K=navigator.getGamepads();for(const Y of K)Y&&this._addGamePad(Y)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(r.Mouse,0,0,0)}_addGamePad(K){const Y=this._getGamepadDeviceType(K.id),l=K.index;this._gamepads=this._gamepads||new Array(K.index+1),this._registerDevice(Y,l,K.buttons.length+K.axes.length),this._gamepads[l]=Y}_addPointerDevice(K,Y,l,v){this._pointerActive||(this._pointerActive=!0),this._registerDevice(K,Y,X);const U=this._inputs[K][Y];U[0]=l,U[1]=v}_registerDevice(K,Y,l){if(void 0===Y)throw`Unable to register device ${r[K]} to undefined slot.`;if(this._inputs[K]||(this._inputs[K]={}),!this._inputs[K][Y]){const v=new Array(l);v.fill(0),this._inputs[K][Y]=v,this._onDeviceConnected(K,Y)}}_unregisterDevice(K,Y){this._inputs[K][Y]&&(delete this._inputs[K][Y],this._onDeviceDisconnected(K,Y))}_handleKeyActions(){this._keyboardDownEvent=K=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(r.Keyboard,0,255));const Y=this._inputs[r.Keyboard][0];if(Y){Y[K.keyCode]=1;const l=K;l.inputIndex=K.keyCode,this._usingMacOS&&K.metaKey&&"Meta"!==K.key&&(this._metaKeys.includes(K.keyCode)||this._metaKeys.push(K.keyCode)),this._onInputChanged(r.Keyboard,0,l)}},this._keyboardUpEvent=K=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(r.Keyboard,0,255));const Y=this._inputs[r.Keyboard][0];if(Y){Y[K.keyCode]=0;const l=K;if(l.inputIndex=K.keyCode,this._usingMacOS&&"Meta"===K.key&&this._metaKeys.length>0){for(const K of this._metaKeys){const l=G.CreateDeviceEvent(r.Keyboard,0,K,0,this,this._elementToAttachTo);Y[K]=0,this._onInputChanged(r.Keyboard,0,l)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(r.Keyboard,0,l)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const K=this._inputs[r.Keyboard][0];for(let Y=0;Y<K.length;Y++)if(0!==K[Y]){K[Y]=0;const l=G.CreateDeviceEvent(r.Keyboard,0,Y,0,this,this._elementToAttachTo);this._onInputChanged(r.Keyboard,0,l)}this._usingMacOS&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,J.i)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let v=0;v<this._maxTouchPoints;v++)this._activeTouchIds[v]=-1;this._pointerMoveEvent=K=>{const Y=this._getPointerType(K);let l=Y===r.Mouse?0:this._activeTouchIds.indexOf(K.pointerId);if(Y===r.Touch&&-1===l){const U=this._activeTouchIds.indexOf(-1);if(!(U>=0))return void v.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);l=U,this._activeTouchIds[U]=K.pointerId,this._onDeviceConnected(Y,l)}this._inputs[Y]||(this._inputs[Y]={}),this._inputs[Y][l]||this._addPointerDevice(Y,l,K.clientX,K.clientY);const U=this._inputs[Y][l];if(U){const v=K;v.inputIndex=E.Move,U[E.Horizontal]=K.clientX,U[E.Vertical]=K.clientY,Y===r.Touch&&0===U[E.LeftClick]&&(U[E.LeftClick]=1),void 0===K.pointerId&&(K.pointerId=this._mouseId),this._onInputChanged(Y,l,v),this._usingSafari||-1===K.button||(v.inputIndex=K.button+2,U[K.button+2]=U[K.button+2]?0:1,this._onInputChanged(Y,l,v))}},this._pointerDownEvent=K=>{const Y=this._getPointerType(K);let l=Y===r.Mouse?0:K.pointerId;if(Y===r.Touch){let Y=this._activeTouchIds.indexOf(K.pointerId);if(-1===Y&&(Y=this._activeTouchIds.indexOf(-1)),!(Y>=0))return void v.d.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);l=Y,this._activeTouchIds[Y]=K.pointerId}this._inputs[Y]||(this._inputs[Y]={}),this._inputs[Y][l]?Y===r.Touch&&this._onDeviceConnected(Y,l):this._addPointerDevice(Y,l,K.clientX,K.clientY);const U=this._inputs[Y][l];if(U){const v=U[E.Horizontal],A=U[E.Vertical];if(Y===r.Mouse){if(void 0===K.pointerId&&(K.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(d){}}else if(K.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(K.pointerId)}catch(d){}U[E.Horizontal]=K.clientX,U[E.Vertical]=K.clientY,U[K.button+2]=1;const c=K;c.inputIndex=K.button+2,this._onInputChanged(Y,l,c),v===K.clientX&&A===K.clientY||(c.inputIndex=E.Move,this._onInputChanged(Y,l,c))}},this._pointerUpEvent=K=>{var Y;const l=this._getPointerType(K),v=l===r.Mouse?0:this._activeTouchIds.indexOf(K.pointerId);if(l===r.Touch){if(-1===v)return;this._activeTouchIds[v]=-1}const U=null===(Y=this._inputs[l])||void 0===Y?void 0:Y[v];if(U&&0!==U[K.button+2]){var d,A,c,t;const Y=U[E.Horizontal],Z=U[E.Vertical];U[E.Horizontal]=K.clientX,U[E.Vertical]=K.clientY,U[K.button+2]=0;const m=K;void 0===K.pointerId&&(K.pointerId=this._mouseId),Y===K.clientX&&Z===K.clientY||(m.inputIndex=E.Move,this._onInputChanged(l,v,m)),m.inputIndex=K.button+2,l===r.Mouse&&this._mouseId>=0&&null!==(d=(A=this._elementToAttachTo).hasPointerCapture)&&void 0!==d&&d.call(A,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):K.pointerId&&null!==(c=(t=this._elementToAttachTo).hasPointerCapture)&&void 0!==c&&c.call(t,K.pointerId)&&this._elementToAttachTo.releasePointerCapture(K.pointerId),this._onInputChanged(l,v,m),l===r.Touch&&this._onDeviceDisconnected(l,v)}},this._pointerCancelEvent=K=>{if("mouse"===K.pointerType){var Y,l;const K=this._inputs[r.Mouse][0];this._mouseId>=0&&null!==(Y=(l=this._elementToAttachTo).hasPointerCapture)&&void 0!==Y&&Y.call(l,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let Y=E.LeftClick;Y<=E.BrowserForward;Y++)if(1===K[Y]){K[Y]=0;const l=G.CreateDeviceEvent(r.Mouse,0,Y,0,this,this._elementToAttachTo);this._onInputChanged(r.Mouse,0,l)}}else{var v,U;const Y=this._activeTouchIds.indexOf(K.pointerId);if(-1===Y)return;null!==(v=(U=this._elementToAttachTo).hasPointerCapture)&&void 0!==v&&v.call(U,K.pointerId)&&this._elementToAttachTo.releasePointerCapture(K.pointerId),this._inputs[r.Touch][Y][E.LeftClick]=0;const l=G.CreateDeviceEvent(r.Touch,Y,E.LeftClick,0,this,this._elementToAttachTo,K.pointerId);this._onInputChanged(r.Touch,Y,l),this._activeTouchIds[Y]=-1,this._onDeviceDisconnected(r.Touch,Y)}},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let K=!1;const Y=function(){};try{const l=Object.defineProperty({},"passive",{get:function(){K=!0}});this._elementToAttachTo.addEventListener("test",Y,l),this._elementToAttachTo.removeEventListener("test",Y,l)}catch(l){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(r.Mouse)){var K,Y;const l=this._inputs[r.Mouse][0];this._mouseId>=0&&null!==(K=(Y=this._elementToAttachTo).hasPointerCapture)&&void 0!==K&&K.call(Y,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let K=E.LeftClick;K<=E.BrowserForward;K++)if(1===l[K]){l[K]=0;const Y=G.CreateDeviceEvent(r.Mouse,0,K,0,this,this._elementToAttachTo);this._onInputChanged(r.Mouse,0,Y)}}if(this.isDeviceAvailable(r.Touch)){const K=this._inputs[r.Touch];for(let Y=0;Y<this._activeTouchIds.length;Y++){var l,v,U;const d=this._activeTouchIds[Y];if(null!==(l=(v=this._elementToAttachTo).hasPointerCapture)&&void 0!==l&&l.call(v,d)&&this._elementToAttachTo.releasePointerCapture(d),-1!==d&&1===(null===(U=K[Y])||void 0===U?void 0:U[E.LeftClick])){K[Y][E.LeftClick]=0;const l=G.CreateDeviceEvent(r.Touch,Y,E.LeftClick,0,this,this._elementToAttachTo,d);this._onInputChanged(r.Touch,Y,l),this._activeTouchIds[Y]=-1,this._onDeviceDisconnected(r.Touch,Y)}}}},this._pointerWheelEvent=K=>{const Y=r.Mouse;this._inputs[Y]||(this._inputs[Y]=[]),this._inputs[Y][0]||(this._pointerActive=!0,this._registerDevice(Y,0,X));const l=this._inputs[Y][0];if(l){l[E.MouseWheelX]=K.deltaX||0,l[E.MouseWheelY]=K.deltaY||K.wheelDelta||0,l[E.MouseWheelZ]=K.deltaZ||0;const v=K;void 0===K.pointerId&&(K.pointerId=this._mouseId),0!==l[E.MouseWheelX]&&(v.inputIndex=E.MouseWheelX,this._onInputChanged(Y,0,v)),0!==l[E.MouseWheelY]&&(v.inputIndex=E.MouseWheelY,this._onInputChanged(Y,0,v)),0!==l[E.MouseWheelZ]&&(v.inputIndex=E.MouseWheelZ,this._onInputChanged(Y,0,v))}},this._usingMacOS&&this._isUsingChromium&&(this._pointerMacOSChromeOutEvent=K=>{K.buttons>1&&this._pointerCancelEvent(K)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!K&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(r.Mouse)){const K=this._inputs[r.Mouse][0];K[E.MouseWheelX]=0,K[E.MouseWheelY]=0,K[E.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=K=>{this._addGamePad(K.gamepad)},this._gamepadDisconnectedEvent=K=>{if(this._gamepads){const Y=this._getGamepadDeviceType(K.gamepad.id),l=K.gamepad.index;this._unregisterDevice(Y,l),delete this._gamepads[l]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(K,Y,l){const v=navigator.getGamepads()[Y];if(v&&K===this._gamepads[Y]){const U=this._inputs[K][Y];l>=v.buttons.length?U[l]=v.axes[l-v.buttons.length].valueOf():U[l]=v.buttons[l].value}}_getGamepadDeviceType(K){return-1!==K.indexOf("054c")?-1!==K.indexOf("0ce6")?r.DualSense:r.DualShock:-1!==K.indexOf("Xbox One")||-1!==K.search("Xbox 360")||-1!==K.search("xinput")?r.Xbox:-1!==K.indexOf("057e")?r.Switch:r.Generic}_getPointerType(K){let Y=r.Mouse;return("touch"===K.pointerType||"pen"===K.pointerType||K.touches)&&(Y=r.Touch),Y}}class w{constructor(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=Y,this.deviceSlot=l,this.onInputChangedObservable=new d.b,this._deviceInputSystem=K}getInput(K){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,K)}}class k{constructor(K){this._registeredManagers=new Array,this._refCount=0,this.registerManager=K=>{for(let Y=0;Y<this._devices.length;Y++){const l=this._devices[Y];for(const v in l){const l=+v;K._addDevice(new w(this._deviceInputSystem,Y,l))}}this._registeredManagers.push(K)},this.unregisterManager=K=>{const Y=this._registeredManagers.indexOf(K);Y>-1&&this._registeredManagers.splice(Y,1)};const Y=Object.keys(r).length/2;this._devices=new Array(Y);const l=(K,Y)=>{this._devices[K]||(this._devices[K]=new Array),this._devices[K][Y]||(this._devices[K][Y]=Y);for(const l of this._registeredManagers){const v=new w(this._deviceInputSystem,K,Y);l._addDevice(v)}},v=(K,Y)=>{var l;null!==(l=this._devices[K])&&void 0!==l&&l[Y]&&delete this._devices[K][Y];for(const v of this._registeredManagers)v._removeDevice(K,Y)},U=(K,Y,l)=>{if(l)for(const v of this._registeredManagers)v._onInputChanged(K,Y,l)};"undefined"!==typeof _native?this._deviceInputSystem=new Q(l,v,U):this._deviceInputSystem=new f(K,l,v,U)}dispose(){this._deviceInputSystem.dispose()}}class I{getDeviceSource(K,Y){if(void 0===Y){if(void 0===this._firstDevice[K])return null;Y=this._firstDevice[K]}return this._devices[K]&&void 0!==this._devices[K][Y]?this._devices[K][Y]:null}getDeviceSources(K){return this._devices[K]?this._devices[K].filter((K=>!!K)):[]}constructor(K){const Y=Object.keys(r).length/2;this._devices=new Array(Y),this._firstDevice=new Array(Y),this._engine=K,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new k(K)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new d.b((K=>{for(const Y of this._devices)if(Y)for(const l of Y)l&&this.onDeviceConnectedObservable.notifyObserver(K,l)})),this.onDeviceDisconnectedObservable=new d.b,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=K.Hi.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.Hi.remove(this._onDisposeObserver)}_addDevice(K){this._devices[K.deviceType]||(this._devices[K.deviceType]=new Array),this._devices[K.deviceType][K.deviceSlot]||(this._devices[K.deviceType][K.deviceSlot]=K,this._updateFirstDevices(K.deviceType)),this.onDeviceConnectedObservable.notifyObservers(K)}_removeDevice(K,Y){var l,v;const U=null===(l=this._devices[K])||void 0===l?void 0:l[Y];this.onDeviceDisconnectedObservable.notifyObservers(U),null!==(v=this._devices[K])&&void 0!==v&&v[Y]&&delete this._devices[K][Y],this._updateFirstDevices(K)}_onInputChanged(K,Y,l){var v,U;null===(v=this._devices[K])||void 0===v||null===(U=v[Y])||void 0===U||U.onInputChangedObservable.notifyObservers(l)}_updateFirstDevices(K){switch(K){case r.Keyboard:case r.Mouse:this._firstDevice[K]=0;break;case r.Touch:case r.DualSense:case r.DualShock:case r.Xbox:case r.Switch:case r.Generic:{delete this._firstDevice[K];const Y=this._devices[K];if(Y)for(let l=0;l<Y.length;l++)if(Y[l]){this._firstDevice[K]=l;break}break}}}}var L=l(2413);class a{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(K){this._singleClick=K}set doubleClick(K){this._doubleClick=K}set hasSwiped(K){this._hasSwiped=K}set ignore(K){this._ignore=K}}class F{constructor(K){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new Z.m(0,0),this._previousStartingPointerPosition=new Z.m(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=K||n.e.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(K){return this._meshUnderPointerId[K]||null}get unTranslatedPointer(){return new Z.m(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(K){this._pointerX=K}get pointerY(){return this._pointerY}set pointerY(K){this._pointerY=K}_updatePointerPosition(K){const Y=this._scene.getEngine().getInputElementClientRect();Y&&(this._pointerX=K.clientX-Y.left,this._pointerY=K.clientY-Y.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(K,Y){const l=this._scene,v=l.getEngine(),U=v.getInputElement();U&&(U.tabIndex=v.canvasTabIndex,l.doNotHandleCursors||(U.style.cursor=l.defaultCursor)),this._setCursorAndPointerOverMesh(K,Y,l);for(const t of l._pointerMoveStage){var d;const l=!(null===(d=K=K||this._pickMove(Y))||void 0===d||!d.pickedMesh);K=t.action(this._unTranslatedPointerX,this._unTranslatedPointerY,K,l,U)}const A=Y.inputIndex>=E.MouseWheelX&&Y.inputIndex<=E.MouseWheelZ?H.b.POINTERWHEEL:H.b.POINTERMOVE;let c;l.onPointerMove&&(K=K||this._pickMove(Y),l.onPointerMove(Y,K,A)),K?(c=new H.i(A,Y,K),this._setRayOnPointerInfo(K,Y)):(c=new H.i(A,Y,null,this),this._movePointerInfo=c),l.onPointerObservable.hasObservers()&&l.onPointerObservable.notifyObservers(c,A)}_setRayOnPointerInfo(K,Y){const l=this._scene;K&&L.e._IsPickingAvailable&&(K.ray||(K.ray=l.createPickingRay(Y.offsetX,Y.offsetY,Z.d.Identity(),l.activeCamera)))}_addCameraPointerObserver(K,Y){return this._cameraObserverCount++,this._scene.onPointerObservable.add(K,Y)}_removeCameraPointerObserver(K){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(K)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(K,Y,l){const v=this._scene,U=new H.e(l,Y,this._unTranslatedPointerX,this._unTranslatedPointerY);return K&&(U.originalPickingInfo=K,U.ray=K.ray,"xr-near"===Y.pointerType&&K.originMesh&&(U.nearInteractionPickingInfo=K)),v.onPrePointerObservable.notifyObservers(U,l),!!U.skipOnPointerObservable}_pickMove(K){const Y=this._scene,l=Y.Ik(this._unTranslatedPointerX,this._unTranslatedPointerY,Y.pointerMovePredicate,Y.pointerMoveFastCheck,Y.cameraToUseForPointers,Y.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(l,K,Y),l}_setCursorAndPointerOverMesh(K,Y,l){const v=l.getEngine().getInputElement();if(null!==K&&void 0!==K&&K.pickedMesh){if(this.setPointerOverMesh(K.pickedMesh,Y.pointerId,K,Y),!l.doNotHandleCursors&&v&&this._pointerOverMesh){const K=this._pointerOverMesh._getActionManagerForTrigger();K&&K.hasPointerTriggers&&(v.style.cursor=K.hoverCursor||l.hoverCursor)}}else this.setPointerOverMesh(null,Y.pointerId,K,Y)}simulatePointerMove(K,Y){const l=new PointerEvent("pointermove",Y);l.inputIndex=E.Move,this._checkPrePointerObservable(K,l,H.b.POINTERMOVE)||this._processPointerMove(K,l)}simulatePointerDown(K,Y){const l=new PointerEvent("pointerdown",Y);l.inputIndex=l.button+2,this._checkPrePointerObservable(K,l,H.b.POINTERDOWN)||this._processPointerDown(K,l)}_processPointerDown(K,Y){var l;const v=this._scene;if(null!==(l=K)&&void 0!==l&&l.pickedMesh){this._pickedDownMesh=K.pickedMesh;const l=K.pickedMesh._getActionManagerForTrigger();if(l){if(l.hasPickTriggers)switch(l.processTrigger(5,u.CreateNew(K.pickedMesh,Y,K)),Y.button){case 0:l.processTrigger(2,u.CreateNew(K.pickedMesh,Y,K));break;case 1:l.processTrigger(4,u.CreateNew(K.pickedMesh,Y,K));break;case 2:l.processTrigger(3,u.CreateNew(K.pickedMesh,Y,K))}l.hasSpecificTrigger(8)&&window.setTimeout((()=>{const K=v.Ik(this._unTranslatedPointerX,this._unTranslatedPointerY,(K=>K.Zh&&K.isVisible&&K.isReady()&&K.actionManager&&K.actionManager.hasSpecificTrigger(8)&&K===this._pickedDownMesh),!1,v.cameraToUseForPointers);null!==K&&void 0!==K&&K.pickedMesh&&l&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>F.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,l.processTrigger(8,u.CreateNew(K.pickedMesh,Y)))}),F.LongPressDelay)}}else for(const A of v._pointerDownStage)K=A.action(this._unTranslatedPointerX,this._unTranslatedPointerY,K,Y,!1);let U;const d=H.b.POINTERDOWN;K?(v.onPointerDown&&v.onPointerDown(Y,K,d),U=new H.i(d,Y,K),this._setRayOnPointerInfo(K,Y)):U=new H.i(d,Y,null,this),v.onPointerObservable.hasObservers()&&v.onPointerObservable.notifyObservers(U,d)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(K,Y,l){const v=new PointerEvent("pointerup",Y);v.inputIndex=E.Move;const U=new a;l?U.doubleClick=!0:U.singleClick=!0,this._checkPrePointerObservable(K,v,H.b.POINTERUP)||this._processPointerUp(K,v,U)}_processPointerUp(K,Y,l){var v;const U=this._scene;if(null!==(v=K)&&void 0!==v&&v.pickedMesh){if(this._pickedUpMesh=K.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(U.onPointerPick&&U.onPointerPick(Y,K),l.singleClick&&!l.ignore&&U.onPointerObservable.observers.length>this._cameraObserverCount)){const l=H.b.POINTERPICK,v=new H.i(l,Y,K);this._setRayOnPointerInfo(K,Y),U.onPointerObservable.notifyObservers(v,l)}const v=K.pickedMesh._getActionManagerForTrigger();if(v&&!l.ignore){v.processTrigger(7,u.CreateNew(K.pickedMesh,Y,K)),!l.hasSwiped&&l.singleClick&&v.processTrigger(1,u.CreateNew(K.pickedMesh,Y,K));const U=K.pickedMesh._getActionManagerForTrigger(6);l.doubleClick&&U&&U.processTrigger(6,u.CreateNew(K.pickedMesh,Y,K))}}else if(!l.ignore)for(const d of U._pointerUpStage)K=d.action(this._unTranslatedPointerX,this._unTranslatedPointerY,K,Y,l.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const K=this._pickedDownMesh._getActionManagerForTrigger(16);K&&K.processTrigger(16,u.CreateNew(this._pickedDownMesh,Y))}if(!l.ignore){const v=new H.i(H.b.POINTERUP,Y,K);if(this._setRayOnPointerInfo(K,Y),U.onPointerObservable.notifyObservers(v,H.b.POINTERUP),U.onPointerUp&&U.onPointerUp(Y,K,H.b.POINTERUP),!l.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let v=0;if(l.singleClick?v=H.b.POINTERTAP:l.doubleClick&&(v=H.b.POINTERDOUBLETAP),v){const l=new H.i(v,Y,K);U.onPointerObservable.hasObservers()&&U.onPointerObservable.hasSpecificMask(v)&&U.onPointerObservable.notifyObservers(l,v)}}}}isPointerCaptured(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[K]}attachControl(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const U=this._scene,d=U.getEngine();v||(v=d.getInputElement()),this._alreadyAttached&&this.Li(),v&&(this._alreadyAttachedTo=v),this._deviceSourceManager=new I(d),this._initActionManager=K=>{if(!this._meshPickProceed){const Y=U.skipPointerUpPicking||0===U._registeredActions&&!this._checkForPicking()&&!U.onPointerUp?null:U.Ik(this._unTranslatedPointerX,this._unTranslatedPointerY,U.pointerUpPredicate,U.pointerUpFastCheck,U.cameraToUseForPointers,U.pointerUpTrianglePredicate);this._currentPickResult=Y,Y&&(K=Y.hit&&Y.pickedMesh?Y.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return K},this._delayedSimpleClick=(K,Y,l)=>{if((Date.now()-this._previousStartingPointerTime>F.DoubleClickDelay&&!this._doubleClickOccured||K!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,Y.singleClick=!0,Y.ignore=!1,this._delayedClicks[K])){const Y=this._delayedClicks[K].evt,l=H.b.POINTERTAP,v=new H.i(l,Y,this._currentPickResult);U.onPointerObservable.hasObservers()&&U.onPointerObservable.hasSpecificMask(l)&&U.onPointerObservable.notifyObservers(v,l),this._delayedClicks[K]=null}},this._initClickEvent=(K,Y,l,v)=>{const U=new a;this._currentPickResult=null;let d=null,A=K.hasSpecificMask(H.b.POINTERPICK)||Y.hasSpecificMask(H.b.POINTERPICK)||K.hasSpecificMask(H.b.POINTERTAP)||Y.hasSpecificMask(H.b.POINTERTAP)||K.hasSpecificMask(H.b.POINTERDOUBLETAP)||Y.hasSpecificMask(H.b.POINTERDOUBLETAP);!A&&z&&(d=this._initActionManager(d,U),d&&(A=d.hasPickTriggers));let c=!1;if(A){const A=l.button;if(U.hasSwiped=this._isPointerSwiping(),!U.hasSwiped){let m=!F.ExclusiveDoubleClickMode;if(m||(m=!K.hasSpecificMask(H.b.POINTERDOUBLETAP)&&!Y.hasSpecificMask(H.b.POINTERDOUBLETAP),m&&!z.HasSpecificTrigger(6)&&(d=this._initActionManager(d,U),d&&(m=!d.hasSpecificTrigger(6)))),m)(Date.now()-this._previousStartingPointerTime>F.DoubleClickDelay||A!==this._previousButtonPressed)&&(U.singleClick=!0,v(U,this._currentPickResult),c=!0);else{const K={evt:l,clickInfo:U,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,A,U,v),F.DoubleClickDelay)};this._delayedClicks[A]=K}let V=K.hasSpecificMask(H.b.POINTERDOUBLETAP)||Y.hasSpecificMask(H.b.POINTERDOUBLETAP);if(!V&&z.HasSpecificTrigger(6)&&(d=this._initActionManager(d,U),d&&(V=d.hasSpecificTrigger(6))),V)if(A===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<F.DoubleClickDelay&&!this._doubleClickOccured){if(U.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=A,F.ExclusiveDoubleClickMode){var t;if(this._delayedClicks[A])clearTimeout(null===(t=this._delayedClicks[A])||void 0===t?void 0:t.timeoutId),this._delayedClicks[A]=null;v(U,this._previousPickResult)}else v(U,this._currentPickResult);else{var Z;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,U.doubleClick=!0,U.ignore=!1,F.ExclusiveDoubleClickMode&&this._delayedClicks[A])clearTimeout(null===(Z=this._delayedClicks[A])||void 0===Z?void 0:Z.timeoutId),this._delayedClicks[A]=null;v(U,this._currentPickResult)}c=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=A}}c||v(U,this._currentPickResult)},this._onPointerMove=K=>{if(this._updatePointerPosition(K),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>F.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>F.DragMovementThreshold),d.isPointerLock&&d._verifyPointerLock(),this._checkPrePointerObservable(null,K,K.inputIndex>=E.MouseWheelX&&K.inputIndex<=E.MouseWheelZ?H.b.POINTERWHEEL:H.b.POINTERMOVE))return;if(!U.cameraToUseForPointers&&!U.activeCamera)return;if(U.Ll)return void this._processPointerMove(new M.c,K);U.pointerMovePredicate||(U.pointerMovePredicate=K=>K.Zh&&K.isVisible&&K.isReady()&&K.isEnabled()&&(K.enablePointerMoveEvents||U.constantlyUpdateMeshUnderPointer||null!==K._getActionManagerForTrigger())&&(!U.cameraToUseForPointers||0!==(U.cameraToUseForPointers.layerMask&K.layerMask)));const Y=U._registeredActions>0||U.constantlyUpdateMeshUnderPointer?this._pickMove(K):null;this._processPointerMove(Y,K)},this._onPointerDown=K=>{const Y=this._activePointerIds.indexOf(-1);if(-1===Y?this._activePointerIds.push(K.pointerId):this._activePointerIds[Y]=K.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,F.ExclusiveDoubleClickMode)for(let v=0;v<this._delayedClicks.length;v++)if(this._delayedClicks[v])if(K.button===v){var l;clearTimeout(null===(l=this._delayedClicks[v])||void 0===l?void 0:l.timeoutId)}else{const K=this._delayedClicks[v].clickInfo;this._doubleClickOccured=!1,K.singleClick=!0,K.ignore=!1;const Y=this._delayedClicks[v].evt,l=H.b.POINTERTAP,d=new H.i(l,Y,this._currentPickResult);U.onPointerObservable.hasObservers()&&U.onPointerObservable.hasSpecificMask(l)&&U.onPointerObservable.notifyObservers(d,l),this._delayedClicks[v]=null}if(this._updatePointerPosition(K),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=K.button),U.preventDefaultOnPointerDown&&v&&(K.preventDefault(),v.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,K,H.b.POINTERDOWN))return;if(!U.cameraToUseForPointers&&!U.activeCamera)return;let d;this._pointerCaptures[K.pointerId]=!0,U.pointerDownPredicate||(U.pointerDownPredicate=K=>K.Zh&&K.isVisible&&K.isReady()&&K.isEnabled()&&(!U.cameraToUseForPointers||0!==(U.cameraToUseForPointers.layerMask&K.layerMask))),this._pickedDownMesh=null,d=U.skipPointerDownPicking||0===U._registeredActions&&!this._checkForPicking()&&!U.onPointerDown?new M.c:U.Ik(this._unTranslatedPointerX,this._unTranslatedPointerY,U.pointerDownPredicate,U.pointerDownFastCheck,U.cameraToUseForPointers,U.pointerDownTrianglePredicate),this._processPointerDown(d,K)},this._onPointerUp=K=>{const Y=this._activePointerIds.indexOf(K.pointerId);-1!==Y&&(this._activePointerIds[Y]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(K),U.preventDefaultOnPointerUp&&v&&(K.preventDefault(),v.focus()),this._initClickEvent(U.onPrePointerObservable,U.onPointerObservable,K,((Y,l)=>{if(U.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!Y.ignore)){if(this._checkPrePointerObservable(null,K,H.b.POINTERUP))return this._swipeButtonPressed===K.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===K.buttons&&(this._pointerCaptures[K.pointerId]=!1));Y.hasSwiped||(Y.singleClick&&U.onPrePointerObservable.hasSpecificMask(H.b.POINTERTAP)&&this._checkPrePointerObservable(null,K,H.b.POINTERTAP)&&(this._skipPointerTap=!0),Y.doubleClick&&U.onPrePointerObservable.hasSpecificMask(H.b.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,K,H.b.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[K.pointerId]?(0===K.buttons&&(this._pointerCaptures[K.pointerId]=!1),(U.cameraToUseForPointers||U.activeCamera)&&(U.pointerUpPredicate||(U.pointerUpPredicate=K=>K.Zh&&K.isVisible&&K.isReady()&&K.isEnabled()&&(!U.cameraToUseForPointers||0!==(U.cameraToUseForPointers.layerMask&K.layerMask))),!this._meshPickProceed&&(z&&z.HasTriggers||this._checkForPicking()||U.onPointerUp)&&this._initActionManager(null,Y),l||(l=this._currentPickResult),this._processPointerUp(l,K,Y),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===K.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===K.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=K=>{const Y=B.b.KEYDOWN;if(U.onPreKeyboardObservable.hasObservers()){const l=new B.f(Y,K);if(U.onPreKeyboardObservable.notifyObservers(l,Y),l.skipOnKeyboardObservable)return}if(U.onKeyboardObservable.hasObservers()){const l=new B.i(Y,K);U.onKeyboardObservable.notifyObservers(l,Y)}U.actionManager&&U.actionManager.processTrigger(14,u.CreateNewFromScene(U,K))},this._onKeyUp=K=>{const Y=B.b.KEYUP;if(U.onPreKeyboardObservable.hasObservers()){const l=new B.f(Y,K);if(U.onPreKeyboardObservable.notifyObservers(l,Y),l.skipOnKeyboardObservable)return}if(U.onKeyboardObservable.hasObservers()){const l=new B.i(Y,K);U.onKeyboardObservable.notifyObservers(l,Y)}U.actionManager&&U.actionManager.processTrigger(15,u.CreateNewFromScene(U,K))},this._deviceSourceManager.onDeviceConnectedObservable.add((v=>{v.deviceType===r.Mouse?v.onInputChangedObservable.add((U=>{this._originMouseEvent=U,U.inputIndex===E.LeftClick||U.inputIndex===E.MiddleClick||U.inputIndex===E.RightClick||U.inputIndex===E.BrowserBack||U.inputIndex===E.BrowserForward?Y&&1===v.getInput(U.inputIndex)?this._onPointerDown(U):K&&0===v.getInput(U.inputIndex)&&this._onPointerUp(U):l&&(U.inputIndex===E.Move?this._onPointerMove(U):U.inputIndex!==E.MouseWheelX&&U.inputIndex!==E.MouseWheelY&&U.inputIndex!==E.MouseWheelZ||this._onPointerMove(U))})):v.deviceType===r.Touch?v.onInputChangedObservable.add((U=>{U.inputIndex===E.LeftClick&&(Y&&1===v.getInput(U.inputIndex)?(this._onPointerDown(U),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):K&&0===v.getInput(U.inputIndex)&&(this._onPointerUp(U),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),l&&U.inputIndex===E.Move&&this._onPointerMove(U)})):v.deviceType===r.Keyboard&&v.onInputChangedObservable.add((K=>{"keydown"===K.type?this._onKeyDown(K):"keyup"===K.type&&this._onKeyUp(K)}))})),this._alreadyAttached=!0}Li(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2?arguments[2]:void 0,v=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[Y]===K&&(!K||!K._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const U=this._meshUnderPointerId[Y];let d;U&&(d=U._getActionManagerForTrigger(10),d&&d.processTrigger(10,u.CreateNew(U,v,{pointerId:Y}))),K?(this._meshUnderPointerId[Y]=K,this._pointerOverMesh=K,d=K._getActionManagerForTrigger(9),d&&d.processTrigger(9,u.CreateNew(K,v,{pointerId:Y,pickResult:l}))):(delete this._meshUnderPointerId[Y],this._pointerOverMesh=null)}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(K){this._pointerOverMesh===K&&(this._pointerOverMesh=null),this._pickedDownMesh===K&&(this._pickedDownMesh=null),this._pickedUpMesh===K&&(this._pickedUpMesh=null);for(const Y in this._meshUnderPointerId)this._meshUnderPointerId[Y]===K&&delete this._meshUnderPointerId[Y]}}F.DragMovementThreshold=10,F.LongPressDelay=500,F.DoubleClickDelay=300,F.ExclusiveDoubleClickMode=!1;var s=l(2419),b=l(706),x=l(717),C=l(2428),N=l(534),j=l(845),p=l(686);class S{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Ll=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var q,O=l(492),h=l(619);!function(K){K[K.BackwardCompatible=0]="BackwardCompatible",K[K.Intermediate=1]="Intermediate",K[K.Aggressive=2]="Aggressive"}(q||(q={}));class KK{static DefaultMaterialFactory(K){throw(0,R.e)("cb")}static CollisionCoordinatorFactory(){throw(0,R.e)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(K){K!==this._clearColor&&(this._clearColor=K,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(K){if(K!==this._performancePriority){switch(this._performancePriority=K,K){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Ll=!1,this.El=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Ll=!0,this.El=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Ll=!0,this.El=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(K)}}set forceWireframe(K){this._forceWireframe!==K&&(this._forceWireframe=K,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(K){this._skipFrustumClipping!==K&&(this._skipFrustumClipping=K)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(K){this._forcePointsCloud!==K&&(this._forcePointsCloud=K,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(K){this._environmentTexture!==K&&(this._environmentTexture=K,this.markAllMaterialsAsDirty(1))}getNodes(){let K=[];return K=K.concat(this.meshes),K=K.concat(this.lights),K=K.concat(this.cameras),K=K.concat(this.transformNodes),this.skeletons.forEach((Y=>K=K.concat(Y.bones))),K}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(K){this._animationPropertiesOverride=K}set onDispose(K){this._onDisposeObserver&&this.Hi.remove(this._onDisposeObserver),this._onDisposeObserver=this.Hi.add(K)}set beforeRender(K){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),K&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(K))}set afterRender(K){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),K&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(K))}set beforeCameraRender(K){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(K)}set afterCameraRender(K){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(K)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(K){this._pointerPickingConfiguration.pointerDownPredicate=K}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(K){this._pointerPickingConfiguration.pointerUpPredicate=K}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(K){this._pointerPickingConfiguration.pointerMovePredicate=K}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(K){this._pointerPickingConfiguration.pointerDownFastCheck=K}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(K){this._pointerPickingConfiguration.pointerUpFastCheck=K}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(K){this._pointerPickingConfiguration.pointerMoveFastCheck=K}get Ll(){return this._pointerPickingConfiguration.Ll}set Ll(K){this._pointerPickingConfiguration.Ll=K}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(K){this._pointerPickingConfiguration.skipPointerDownPicking=K}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(K){this._pointerPickingConfiguration.skipPointerUpPicking=K}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return F.DragMovementThreshold}static set DragMovementThreshold(K){F.DragMovementThreshold=K}static get LongPressDelay(){return F.LongPressDelay}static set LongPressDelay(K){F.LongPressDelay=K}static get DoubleClickDelay(){return F.DoubleClickDelay}static set DoubleClickDelay(K){F.DoubleClickDelay=K}static get ExclusiveDoubleClickMode(){return F.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(K){F.ExclusiveDoubleClickMode=K}bindEyePosition(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const v=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:this.activeCamera.globalPosition,U=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return Z.j.Vector4[0].set(v.x,v.y,v.z,U?-1:1),K&&(l?K.setFloat3(Y,Z.j.Vector4[0].x,Z.j.Vector4[0].y,Z.j.Vector4[0].z):K.setVector4(Y,Z.j.Vector4[0])),Z.j.Vector4[0]}finalizeSceneUbo(){const K=this.getSceneUniformBuffer(),Y=this.bindEyePosition(null);return K.updateFloat4("vEyePosition",Y.x,Y.y,Y.z,Y.w),K.update(),K}set useRightHandedSystem(K){this._useRightHandedSystem!==K&&(this._useRightHandedSystem=K,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(K){this._currentStepId=K}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(K){this._fogEnabled!==K&&(this._fogEnabled=K,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(K){this._fogMode!==K&&(this._fogMode=K,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(K){this._shadowsEnabled!==K&&(this._shadowsEnabled=K,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(K){this._lightsEnabled!==K&&(this._lightsEnabled=K,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(K){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),K&&(this._unObserveActiveCameras=(0,p.l)(K,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=K}get activeCamera(){return this._activeCamera}set activeCamera(K){K!==this._activeCamera&&(this._activeCamera=K,this.onActiveCameraChanged.notifyObservers(this))}get defaultMaterial(){return this.nl||(this.nl=KK.DefaultMaterialFactory(this)),this.nl}set defaultMaterial(K){this.nl=K}set texturesEnabled(K){this._texturesEnabled!==K&&(this._texturesEnabled=K,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(K){if(this._frameGraph)return this._frameGraph=K,void(K||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=K,K&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph)}set skeletonsEnabled(K){this._skeletonsEnabled!==K&&(this._skeletonsEnabled=K,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=KK.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const K of this._transientComponents)K.register();this._transientComponents.length=0}}bb(K){this._components.push(K),this._transientComponents.push(K);const Y=K;Y.addFromContainer&&Y.serialize&&this._serializableComponents.push(Y)}_getComponent(K){for(const Y of this._components)if(Y.name===K)return Y;return null}constructor(K,Y){this._inputManager=new F(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.El=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new b.g(.2,.2,.3,1),this.onClearColorChangedObservable=new d.b,this.ambientColor=new b.e(0,0,0),this.environmentIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new d.b,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.qi=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.om=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.Hi=new d.b,this._onDisposeObserver=null,this.onBeforeRenderObservable=new d.b,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new d.b,this.onAfterRenderCameraObservable=new d.b,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new d.b,this.onAfterAnimationsObservable=new d.b,this.onBeforeDrawPhaseObservable=new d.b,this.onAfterDrawPhaseObservable=new d.b,this.onReadyObservable=new d.b,this.onBeforeCameraRenderObservable=new d.b,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new d.b,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new d.b,this.onAfterActiveMeshesEvaluationObservable=new d.b,this.onBeforeParticlesRenderingObservable=new d.b,this.onAfterParticlesRenderingObservable=new d.b,this.onDataLoadedObservable=new d.b,this.onNewCameraAddedObservable=new d.b,this.onCameraRemovedObservable=new d.b,this.onNewLightAddedObservable=new d.b,this.onLightRemovedObservable=new d.b,this.onNewGeometryAddedObservable=new d.b,this.onGeometryRemovedObservable=new d.b,this.onNewTransformNodeAddedObservable=new d.b,this.onTransformNodeRemovedObservable=new d.b,this.onNewMeshAddedObservable=new d.b,this.onMeshRemovedObservable=new d.b,this.onNewSkeletonAddedObservable=new d.b,this.onSkeletonRemovedObservable=new d.b,this.onNewMaterialAddedObservable=new d.b,this.onNewMultiMaterialAddedObservable=new d.b,this.onMaterialRemovedObservable=new d.b,this.onMultiMaterialRemovedObservable=new d.b,this.onNewTextureAddedObservable=new d.b,this.onTextureRemovedObservable=new d.b,this.onBeforeRenderTargetsRenderObservable=new d.b,this.onAfterRenderTargetsRenderObservable=new d.b,this.onBeforeStepObservable=new d.b,this.onAfterStepObservable=new d.b,this.onActiveCameraChanged=new d.b,this.onActiveCamerasChanged=new d.b,this.onBeforeRenderingGroupObservable=new d.b,this.onAfterRenderingGroupObservable=new d.b,this.onMeshImportedObservable=new d.b,this.onAnimationFileImportedObservable=new d.b,this._registeredForLateAnimationBindings=new A.b(256),this._pointerPickingConfiguration=new S,this.onPrePointerObservable=new d.b,this.onPointerObservable=new d.b,this.onPreKeyboardObservable=new d.b,this.onKeyboardObservable=new d.b,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=KK.FOGMODE_NONE,this.fogColor=new b.e(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new Z.o(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new A.b(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new s.b,this._activeIndices=new s.b,this._activeParticles=new s.b,this._activeBones=new s.b,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=new Array,this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new A.c(256),this._processedMaterials=new A.c(256),this._renderTargets=new A.b(256),this._materialsRenderTargets=new A.b(256),this._activeParticleSystems=new A.c(256),this._activeSkeletons=new A.b(32),this._softwareSkinnedMeshes=new A.b(32),this._activeAnimatables=new Array,this._transformMatrix=Z.d.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=g.d.Create(),this._beforeClearStage=g.d.Create(),this._beforeRenderTargetClearStage=g.d.Create(),this._gatherRenderTargetsStage=g.d.Create(),this._gatherActiveCameraRenderTargetsStage=g.d.Create(),this._isReadyForMeshStage=g.d.Create(),this._beforeEvaluateActiveMeshStage=g.d.Create(),this._evaluateSubMeshStage=g.d.Create(),this._preActiveMeshStage=g.d.Create(),this._cameraDrawRenderTargetStage=g.d.Create(),this._beforeCameraDrawStage=g.d.Create(),this._beforeRenderTargetDrawStage=g.d.Create(),this._beforeRenderingGroupDrawStage=g.d.Create(),this._beforeRenderingMeshStage=g.d.Create(),this._afterRenderingMeshStage=g.d.Create(),this._afterRenderingGroupDrawStage=g.d.Create(),this._afterCameraDrawStage=g.d.Create(),this._afterCameraPostProcessStage=g.d.Create(),this._afterRenderTargetDrawStage=g.d.Create(),this._afterRenderTargetPostProcessStage=g.d.Create(),this._afterRenderStage=g.d.Create(),this._pointerMoveStage=g.d.Create(),this._pointerDownStage=g.d.Create(),this._pointerUpStage=g.d.Create(),this._geometriesByUniqueId=null,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[];const l={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...Y};K=this._engine=K||n.e.LastCreatedEngine,l.virtual?K._virtualScenes.push(this):(n.e._LastCreatedScene=this,K.scenes.push(this)),this._uid=null,this._renderingManager=new W.b(this),o.e&&(this.postProcessManager=new o.e(this)),(0,J.k)()&&this.attachControl(),this._createUbo(),m.e&&(this._imageProcessingConfiguration=new m.e),this.setDefaultCandidateProviders(),l.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=l.useMaterialMeshMap,this.useClonedMeshMap=l.useClonedMeshMap,Y&&Y.virtual||K.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(K){return this._defaultSubMeshCandidates.data=K.ui,this._defaultSubMeshCandidates.length=K.ui.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=K=>this._getDefaultSubMeshCandidates(K),this.getIntersectingSubMeshCandidates=(K,Y)=>this._getDefaultSubMeshCandidates(K),this.getCollidingSubMeshCandidates=(K,Y)=>this._getDefaultSubMeshCandidates(K)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(K){this._inputManager.pointerX=K}get pointerY(){return this._inputManager.pointerY}set pointerY(K){this._inputManager.pointerY=K}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(K,Y){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==Y||this._cachedMaterial!==K||this._cachedVisibility!==l}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(K,Y){return this._inputManager.simulatePointerMove(K,Y),this}simulatePointerDown(K,Y){return this._inputManager.simulatePointerDown(K,Y),this}simulatePointerUp(K,Y,l){return this._inputManager.simulatePointerUp(K,Y,l),this}isPointerCaptured(){let K=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(K)}attachControl(){let K=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(K,Y,l)}Li(){this._inputManager.Li()}isReady(){var K,Y;let l,v=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const U=this.getEngine(),d=U.currentRenderPassId;U.currentRenderPassId=(null===(K=this.activeCamera)||void 0===K?void 0:K.renderPassId)??d;let A=!0;for(this._pendingData.length>0&&(A=!1),null===(Y=this.prePassRenderer)||void 0===Y||Y.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&A&&(A=this.depthPeelingRenderer.isReady()),v&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),l=0;l<this.meshes.length;l++){const K=this.meshes[l];if(!K.ui||0===K.ui.length)continue;if(!K.isReady(!0)){A=!1;continue}const Y=K.hasThinInstances||"InstancedMesh"===K.getClassName()||"InstancedLinesMesh"===K.getClassName()||U.getCaps().instancedArrays&&K.instances.length>0;for(const l of this._isReadyForMeshStage)l.action(K,Y)||(A=!1);if(!v)continue;const d=K.material||this.defaultMaterial;if(d)if(d._storeEffectOnSubMeshes)for(const l of K.ui){const K=l.Ha();K&&K.hasRenderTargetTextures&&null!=K.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(K)&&(this._processedMaterials.push(K),this._materialsRenderTargets.concatWithNoDuplicate(K.getRenderTargetTextures()))}else d.hasRenderTargetTextures&&null!=d.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(d)&&(this._processedMaterials.push(d),this._materialsRenderTargets.concatWithNoDuplicate(d.getRenderTargetTextures()))}if(v)for(l=0;l<this._materialsRenderTargets.length;++l){this._materialsRenderTargets.data[l].isReadyForRendering()||(A=!1)}for(l=0;l<this.geometries.length;l++){2===this.geometries[l].delayLoadState&&(A=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const c of this.activeCameras)c.isReady(!0)||(A=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(A=!1));for(const c of this.qi)c.isReady()||(A=!1);if(this.layers)for(const c of this.layers)c.isReady()||(A=!1);return U.areAllEffectsReady()||(A=!1),U.currentRenderPassId=d,A}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(K){this.onBeforeRenderObservable.add(K)}unregisterBeforeRender(K){this.onBeforeRenderObservable.removeCallback(K)}registerAfterRender(K){this.onAfterRenderObservable.add(K)}unregisterAfterRender(K){this.onAfterRenderObservable.removeCallback(K)}_executeOnceBeforeRender(K){const Y=()=>{K(),setTimeout((()=>{this.unregisterBeforeRender(Y)}))};this.registerBeforeRender(Y)}executeOnceBeforeRender(K,Y){void 0!==Y?setTimeout((()=>{this._executeOnceBeforeRender(K)}),Y):this._executeOnceBeforeRender(K)}addPendingData(K){this._pendingData.push(K)}removePendingData(K){const Y=this.isLoading,l=this._pendingData.indexOf(K);-1!==l&&this._pendingData.splice(l,1),Y&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(K),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(Y)}whenReadyAsync(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise((Y=>{this.executeWhenReady((()=>{Y()}),K)}))}_checkIsReady(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(K)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(K)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=U.d.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(K,Y,l,v){l||v||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===K.updateFlag&&this._projectionUpdateFlag===Y.updateFlag||(this._viewUpdateFlag=K.updateFlag,this._projectionUpdateFlag=Y.updateFlag,this._viewMatrix=K,this._projectionMatrix=Y,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?x.e.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=x.e.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(l,v):this._sceneUbo.useUbo&&(this._sceneUbo.Xi("viewProjection",this._transformMatrix),this._sceneUbo.Xi("view",this._viewMatrix),this._sceneUbo.Xi("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(K){const Y=new V.d(this._engine,void 0,!1,K??"hi");return Y.addUniform("viewProjection",16),Y.addUniform("view",16),Y.addUniform("projection",16),Y.addUniform("vEyePosition",4),Y}setSceneUniformBuffer(K){this._sceneUbo=K,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return C.c.UniqueId}Wi(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._blockEntityCollection||(this.meshes.push(K),K._resyncLightSources(),K.parent||K._addToSceneRootNodes(),this.onNewMeshAddedObservable.notifyObservers(K),Y&&K.getChildMeshes().forEach((K=>{this.Wi(K)})))}gi(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const l=this.meshes.indexOf(K);return-1!==l&&(this.meshes.splice(l,1),K.parent||K._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(K),this.onMeshRemovedObservable.notifyObservers(K),Y&&K.getChildMeshes().forEach((K=>{this.gi(K)})),l}addTransformNode(K){this._blockEntityCollection||K.va()===this&&-1!==K._indexInSceneTransformNodesArray||(K._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(K),K.parent||K._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(K))}removeTransformNode(K){const Y=K._indexInSceneTransformNodesArray;if(-1!==Y){if(Y!==this.transformNodes.length-1){const K=this.transformNodes[this.transformNodes.length-1];this.transformNodes[Y]=K,K._indexInSceneTransformNodesArray=Y}K._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),K.parent||K._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(K),Y}removeSkeleton(K){const Y=this.skeletons.indexOf(K);return-1!==Y&&(this.skeletons.splice(Y,1),this.onSkeletonRemovedObservable.notifyObservers(K),this._executeActiveContainerCleanup(this._activeSkeletons)),Y}removeMorphTargetManager(K){const Y=this.morphTargetManagers.indexOf(K);return-1!==Y&&this.morphTargetManagers.splice(Y,1),Y}removeLight(K){const Y=this.lights.indexOf(K);if(-1!==Y){for(const Y of this.meshes)Y._removeLightSource(K,!1);this.lights.splice(Y,1),this.sortLightsByPriority(),K.parent||K._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(K),Y}removeCamera(K){const Y=this.cameras.indexOf(K);if(-1!==Y&&(this.cameras.splice(Y,1),K.parent||K._removeFromSceneRootNodes()),this.activeCameras){const Y=this.activeCameras.indexOf(K);-1!==Y&&this.activeCameras.splice(Y,1)}return this.activeCamera===K&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(K),Y}removeParticleSystem(K){const Y=this.qi.indexOf(K);return-1!==Y&&(this.qi.splice(Y,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),Y}removeAnimation(K){const Y=this.animations.indexOf(K);return-1!==Y&&this.animations.splice(Y,1),Y}stopAnimation(K,Y,l){}removeAnimationGroup(K){const Y=this.animationGroups.indexOf(K);return-1!==Y&&this.animationGroups.splice(Y,1),Y}removeMultiMaterial(K){const Y=this.multiMaterials.indexOf(K);return-1!==Y&&this.multiMaterials.splice(Y,1),this.onMultiMaterialRemovedObservable.notifyObservers(K),Y}removeMaterial(K){const Y=K._indexInSceneMaterialArray;if(-1!==Y&&Y<this.materials.length){if(Y!==this.materials.length-1){const K=this.materials[this.materials.length-1];this.materials[Y]=K,K._indexInSceneMaterialArray=Y}K._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(K),Y}removeActionManager(K){const Y=this.actionManagers.indexOf(K);return-1!==Y&&this.actionManagers.splice(Y,1),Y}removeTexture(K){const Y=this.textures.indexOf(K);return-1!==Y&&this.textures.splice(Y,1),this.onTextureRemovedObservable.notifyObservers(K),Y}addLight(K){if(!this._blockEntityCollection){this.lights.push(K),this.sortLightsByPriority(),K.parent||K._addToSceneRootNodes();for(const Y of this.meshes)-1===Y.lightSources.indexOf(K)&&(Y.lightSources.push(K),Y._resyncLightSources());this.onNewLightAddedObservable.notifyObservers(K)}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(j.b.CompareLightsPriority)}addCamera(K){this._blockEntityCollection||(this.cameras.push(K),this.onNewCameraAddedObservable.notifyObservers(K),K.parent||K._addToSceneRootNodes())}addSkeleton(K){this._blockEntityCollection||(this.skeletons.push(K),this.onNewSkeletonAddedObservable.notifyObservers(K))}addParticleSystem(K){this._blockEntityCollection||this.qi.push(K)}addAnimation(K){this._blockEntityCollection||this.animations.push(K)}addAnimationGroup(K){this._blockEntityCollection||this.animationGroups.push(K)}addMultiMaterial(K){this._blockEntityCollection||(this.multiMaterials.push(K),this.onNewMultiMaterialAddedObservable.notifyObservers(K))}addMaterial(K){this._blockEntityCollection||K.va()===this&&-1!==K._indexInSceneMaterialArray||(K._indexInSceneMaterialArray=this.materials.length,this.materials.push(K),this.onNewMaterialAddedObservable.notifyObservers(K))}addMorphTargetManager(K){this._blockEntityCollection||this.morphTargetManagers.push(K)}addGeometry(K){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[K.uniqueId]=this.geometries.length),this.geometries.push(K))}addActionManager(K){this.actionManagers.push(K)}addTexture(K){this._blockEntityCollection||(this.textures.push(K),this.onNewTextureAddedObservable.notifyObservers(K))}switchActiveCamera(K){let Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Li(),this.activeCamera=K,Y&&K.attachControl())}setActiveCameraById(K){const Y=this.getCameraById(K);return Y?(this.activeCamera=Y,Y):null}setActiveCameraByName(K){const Y=this.getCameraByName(K);return Y?(this.activeCamera=Y,Y):null}getAnimationGroupByName(K){for(let Y=0;Y<this.animationGroups.length;Y++)if(this.animationGroups[Y].name===K)return this.animationGroups[Y];return null}_getMaterial(K,Y){for(let l=0;l<this.materials.length;l++){const K=this.materials[l];if(Y(K))return K}if(K)for(let l=0;l<this.multiMaterials.length;l++){const K=this.multiMaterials[l];if(Y(K))return K}return null}getMaterialByUniqueID(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Y,(Y=>Y.uniqueId===K))}getMaterialById(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Y,(Y=>Y.id===K))}getMaterialByName(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(Y,(Y=>Y.name===K))}getLastMaterialById(K){let Y=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let l=this.materials.length-1;l>=0;l--)if(this.materials[l].id===K)return this.materials[l];if(Y)for(let l=this.multiMaterials.length-1;l>=0;l--)if(this.multiMaterials[l].id===K)return this.multiMaterials[l];return null}getTextureByUniqueId(K){for(let Y=0;Y<this.textures.length;Y++)if(this.textures[Y].uniqueId===K)return this.textures[Y];return null}getTextureByName(K){for(let Y=0;Y<this.textures.length;Y++)if(this.textures[Y].name===K)return this.textures[Y];return null}getCameraById(K){for(let Y=0;Y<this.cameras.length;Y++)if(this.cameras[Y].id===K)return this.cameras[Y];return null}getCameraByUniqueId(K){for(let Y=0;Y<this.cameras.length;Y++)if(this.cameras[Y].uniqueId===K)return this.cameras[Y];return null}getCameraByName(K){for(let Y=0;Y<this.cameras.length;Y++)if(this.cameras[Y].name===K)return this.cameras[Y];return null}getBoneById(K){for(let Y=0;Y<this.skeletons.length;Y++){const l=this.skeletons[Y];for(let Y=0;Y<l.bones.length;Y++)if(l.bones[Y].id===K)return l.bones[Y]}return null}getBoneByName(K){for(let Y=0;Y<this.skeletons.length;Y++){const l=this.skeletons[Y];for(let Y=0;Y<l.bones.length;Y++)if(l.bones[Y].name===K)return l.bones[Y]}return null}getLightByName(K){for(let Y=0;Y<this.lights.length;Y++)if(this.lights[Y].name===K)return this.lights[Y];return null}getLightById(K){for(let Y=0;Y<this.lights.length;Y++)if(this.lights[Y].id===K)return this.lights[Y];return null}getLightByUniqueId(K){for(let Y=0;Y<this.lights.length;Y++)if(this.lights[Y].uniqueId===K)return this.lights[Y];return null}getParticleSystemById(K){for(let Y=0;Y<this.qi.length;Y++)if(this.qi[Y].id===K)return this.qi[Y];return null}getGeometryById(K){for(let Y=0;Y<this.geometries.length;Y++)if(this.geometries[Y].id===K)return this.geometries[Y];return null}_getGeometryByUniqueId(K){if(this._geometriesByUniqueId){const Y=this._geometriesByUniqueId[K];if(void 0!==Y)return this.geometries[Y]}else for(let Y=0;Y<this.geometries.length;Y++)if(this.geometries[Y].uniqueId===K)return this.geometries[Y];return null}pushGeometry(K,Y){return!(!Y&&this._getGeometryByUniqueId(K.uniqueId))&&(this.addGeometry(K),this.onNewGeometryAddedObservable.notifyObservers(K),!0)}removeGeometry(K){let Y;if(this._geometriesByUniqueId){if(Y=this._geometriesByUniqueId[K.uniqueId],void 0===Y)return!1}else if(Y=this.geometries.indexOf(K),Y<0)return!1;if(Y!==this.geometries.length-1){const K=this.geometries[this.geometries.length-1];K&&(this.geometries[Y]=K,this._geometriesByUniqueId&&(this._geometriesByUniqueId[K.uniqueId]=Y))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[K.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(K),!0}getGeometries(){return this.geometries}getMeshById(K){for(let Y=0;Y<this.meshes.length;Y++)if(this.meshes[Y].id===K)return this.meshes[Y];return null}getMeshesById(K){return this.meshes.filter((function(Y){return Y.id===K}))}getTransformNodeById(K){for(let Y=0;Y<this.transformNodes.length;Y++)if(this.transformNodes[Y].id===K)return this.transformNodes[Y];return null}getTransformNodeByUniqueId(K){for(let Y=0;Y<this.transformNodes.length;Y++)if(this.transformNodes[Y].uniqueId===K)return this.transformNodes[Y];return null}getTransformNodesById(K){return this.transformNodes.filter((function(Y){return Y.id===K}))}getMeshByUniqueId(K){for(let Y=0;Y<this.meshes.length;Y++)if(this.meshes[Y].uniqueId===K)return this.meshes[Y];return null}getLastMeshById(K){for(let Y=this.meshes.length-1;Y>=0;Y--)if(this.meshes[Y].id===K)return this.meshes[Y];return null}getLastTransformNodeById(K){for(let Y=this.transformNodes.length-1;Y>=0;Y--)if(this.transformNodes[Y].id===K)return this.transformNodes[Y];return null}getLastEntryById(K){let Y;for(Y=this.meshes.length-1;Y>=0;Y--)if(this.meshes[Y].id===K)return this.meshes[Y];for(Y=this.transformNodes.length-1;Y>=0;Y--)if(this.transformNodes[Y].id===K)return this.transformNodes[Y];for(Y=this.cameras.length-1;Y>=0;Y--)if(this.cameras[Y].id===K)return this.cameras[Y];for(Y=this.lights.length-1;Y>=0;Y--)if(this.lights[Y].id===K)return this.lights[Y];return null}getNodeById(K){const Y=this.getMeshById(K);if(Y)return Y;const l=this.getTransformNodeById(K);if(l)return l;const v=this.getLightById(K);if(v)return v;const U=this.getCameraById(K);if(U)return U;const d=this.getBoneById(K);return d||null}getNodeByName(K){const Y=this.getMeshByName(K);if(Y)return Y;const l=this.getTransformNodeByName(K);if(l)return l;const v=this.getLightByName(K);if(v)return v;const U=this.getCameraByName(K);if(U)return U;const d=this.getBoneByName(K);return d||null}getMeshByName(K){for(let Y=0;Y<this.meshes.length;Y++)if(this.meshes[Y].name===K)return this.meshes[Y];return null}getTransformNodeByName(K){for(let Y=0;Y<this.transformNodes.length;Y++)if(this.transformNodes[Y].name===K)return this.transformNodes[Y];return null}getLastSkeletonById(K){for(let Y=this.skeletons.length-1;Y>=0;Y--)if(this.skeletons[Y].id===K)return this.skeletons[Y];return null}getSkeletonByUniqueId(K){for(let Y=0;Y<this.skeletons.length;Y++)if(this.skeletons[Y].uniqueId===K)return this.skeletons[Y];return null}getSkeletonById(K){for(let Y=0;Y<this.skeletons.length;Y++)if(this.skeletons[Y].id===K)return this.skeletons[Y];return null}getSkeletonByName(K){for(let Y=0;Y<this.skeletons.length;Y++)if(this.skeletons[Y].name===K)return this.skeletons[Y];return null}getMorphTargetManagerById(K){for(let Y=0;Y<this.morphTargetManagers.length;Y++)if(this.morphTargetManagers[Y].uniqueId===K)return this.morphTargetManagers[Y];return null}getMorphTargetById(K){for(let Y=0;Y<this.morphTargetManagers.length;++Y){const l=this.morphTargetManagers[Y];for(let Y=0;Y<l.numTargets;++Y){const v=l.getTarget(Y);if(v.id===K)return v}}return null}getMorphTargetByName(K){for(let Y=0;Y<this.morphTargetManagers.length;++Y){const l=this.morphTargetManagers[Y];for(let Y=0;Y<l.numTargets;++Y){const v=l.getTarget(Y);if(v.name===K)return v}}return null}getPostProcessByName(K){for(let Y=0;Y<this.postProcesses.length;++Y){const l=this.postProcesses[Y];if(l.name===K)return l}return null}isActiveMesh(K){return-1!==this._activeMeshes.indexOf(K)}get uid(){return this._uid||(this._uid=v.d.RandomId()),this._uid}addExternalData(K,Y){return this._externalData||(this._externalData=new c),this._externalData.add(K,Y)}getExternalData(K){return this._externalData?this._externalData.get(K):null}getOrAddExternalDataWithFactory(K,Y){return this._externalData||(this._externalData=new c),this._externalData.getOrAddWithFactory(K,Y)}removeExternalData(K){return this._externalData.remove(K)}_evaluateSubMesh(K,Y,l,v){if(v||K.isInFrustum(this._frustumPlanes)){for(const v of this._evaluateSubMeshStage)v.action(Y,K);const l=K.Ha();null!==l&&void 0!==l&&(l.hasRenderTargetTextures&&null!=l.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(l)&&(this._processedMaterials.push(l),this._materialsRenderTargets.concatWithNoDuplicate(l.getRenderTargetTextures())),this._renderingManager.dispatch(K,Y,l))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(K){this._preventFreeActiveMeshesAndRenderingGroups!==K&&(K&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=K)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let K=0;K<this.activeCameras.length;K++){const Y=this.activeCameras[K];Y&&Y._activeMeshes&&Y._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let K=0;K<this.textures.length;K++){const Y=this.textures[K];Y&&Y.renderList&&Y.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0],Y=arguments.length>1?arguments[1]:void 0,l=arguments.length>2?arguments[2]:void 0,v=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],U=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=U,this._skipEvaluateActiveMeshesCompletely=K,v)for(let K=0;K<this._activeMeshes.length;K++)this._activeMeshes.data[K]._freeze();Y&&Y()}else l&&l("No active camera found")})),this}unfreezeActiveMeshes(){for(let K=0;K<this.meshes.length;K++){const Y=this.meshes[K];Y._internalAbstractMeshDataInfo&&(Y._internalAbstractMeshDataInfo._isActive=!1)}for(let K=0;K<this._activeMeshes.length;K++)this._activeMeshes.data[K]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(K){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>K.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var K;if(this._activeMeshes.length>0)null===(K=this.activeCamera)||void 0===K||K._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const K=this._activeMeshes.length;for(let Y=0;Y<K;Y++){this._activeMeshes.data[Y].ri()}}if(this._activeParticleSystems){const K=this._activeParticleSystems.length;for(let Y=0;Y<K;Y++)this._activeParticleSystems.data[Y].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const v of this._beforeEvaluateActiveMeshStage)v.action();const Y=this.getActiveMeshCandidates(),l=Y.length;for(let v=0;v<l;v++){const K=Y.data[v];if(K._internalAbstractMeshDataInfo._currentLODIsUpToDate=!1,K.isBlocked)continue;if(this._totalVertices.addCount(K.getTotalVertices(),!1),!K.isReady()||!K.isEnabled()||K.ni.hasAZeroComponent)continue;K.ri(),K.actionManager&&K.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(K);let l=this.customLODSelector?this.customLODSelector(K,this.activeCamera):K.getLOD(this.activeCamera);if(K._internalAbstractMeshDataInfo._currentLOD=l,K._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0,void 0!==l&&null!==l&&(l!==K&&0!==l.billboardMode&&l.ri(),K._preActivate(),K.isVisible&&K.visibility>0&&0!==(K.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||K.Yh||K.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(K),this.activeCamera._activeMeshes.push(K),l!==K&&l._activate(this._renderId,!1);for(const Y of this._preActiveMeshStage)Y.action(K);K._activate(this._renderId,!1)&&(K.isAnInstance?K._internalAbstractMeshDataInfo._actAsRegularMesh&&(l=K):l._internalAbstractMeshDataInfo._onlyForInstances=!1,l._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(K,l)),K._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let K=0;K<this.qi.length;K++){const Y=this.qi[K];if(!Y.isStarted()||!Y.j)continue;const l=Y.j;l.position&&!l.isEnabled()||(this._activeParticleSystems.push(Y),Y.animate(),this._renderingManager.dispatchParticles(Y))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(K){this._skeletonsEnabled&&K.skeleton&&(this._activeSkeletons.pushNoDuplicate(K.skeleton)&&(K.skeleton.prepare(),this._activeBones.addCount(K.skeleton.bones.length,!1)),K.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(K)&&this.frameGraph&&K.applySkeleton(K.skeleton))}_activeMesh(K,Y){this._prepareSkeleton(Y);let l=K.hasInstances||K.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||Y.Yh;if(Y&&Y.ui&&Y.ui.length>0){const v=this.getActiveSubMeshCandidates(Y),U=v.length;l=l||1===U;for(let d=0;d<U;d++){const U=v.data[d];this._evaluateSubMesh(U,Y,K,l)}}}updateTransformMatrix(K){const Y=this.activeCamera;if(Y)if(Y._renderingMultiview){const l=Y._rigCameras[0],v=Y._rigCameras[1];this.setTransformMatrix(l.getViewMatrix(),l.getProjectionMatrix(K),v.getViewMatrix(),v.getProjectionMatrix(K))}else this.setTransformMatrix(Y.getViewMatrix(),Y.getProjectionMatrix(K))}_bindFrameBuffer(K){let Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];K&&K._multiviewTexture?K._multiviewTexture._bindFrameBuffer():K&&K.outputRenderTarget?K.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer(),Y&&this._clearFrameBuffer(K)}_clearFrameBuffer(K){if(K&&K._multiviewTexture);else if(K&&K.outputRenderTarget&&!K._renderingMultiview){const Y=K.outputRenderTarget;Y.onClearObservable.hasObservers()?Y.onClearObservable.notifyObservers(this._engine):Y.skipInitialClear||K.isRightCamera||(this.El&&this._engine.clear(Y.clearColor||this._clearColor,!Y._cleared,!0,!0),Y._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(K,Y){var l;let U=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(K&&K._skipRendering)return;const d=this._engine;if(this._activeCamera=K,!this.activeCamera)throw new Error("Active camera not set");if(d.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&U){let Y=!0;K._renderingMultiview&&K.outputRenderTarget&&(Y=K.outputRenderTarget.skipInitialClear,this.El&&(this._defaultFrameBufferCleared=!1,K.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),K._renderingMultiview&&K.outputRenderTarget&&(K.outputRenderTarget.skipInitialClear=Y)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let v=0;v<this._softwareSkinnedMeshes.length;v++){const K=this._softwareSkinnedMeshes.data[v];K.applySkeleton(K.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),K.customRenderTargets&&K.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(K.customRenderTargets),Y&&Y.customRenderTargets&&Y.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(Y.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const v of this._gatherActiveCameraRenderTargetsStage)v.action(this._renderTargets);let A=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){v.d.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let K=0;K<this._renderTargets.length;K++){const Y=this._renderTargets.data[K];if(Y._shouldRender()){this._renderId++;const K=Y.activeCamera&&Y.activeCamera!==this.activeCamera;Y.render(K,this.dumpNextRenderTargets),A=!0}}v.d.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const K of this._cameraDrawRenderTargetStage)A=K.action(this.activeCamera)||A;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(l=K.outputRenderTarget)||void 0===l?void 0:l.renderPassId)??K.renderPassId??0,A&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||K._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const v of this._beforeCameraDrawStage)v.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),d.snapshotRendering&&1===d.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const v of this._afterCameraDrawStage)v.action(this.activeCamera);if(this.postProcessManager&&!K._multiviewTexture){const Y=K.outputRenderTarget?K.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(K.isIntermediate,Y)}for(const v of this._afterCameraPostProcessStage)v.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(K){let Y=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===K.cameraRigMode||K._renderingMultiview)return K._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(K,void 0,Y),void this.onAfterRenderCameraObservable.notifyObservers(K);if(K._useMultiviewToSingleView)this._renderMultiviewToSingleView(K);else{this.onBeforeCameraRenderObservable.notifyObservers(K);for(let Y=0;Y<K._rigCameras.length;Y++)this._renderForCamera(K._rigCameras[Y],K)}this._activeCamera=K,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(K)}_checkIntersections(){for(let K=0;K<this._meshesForIntersections.length;K++){const Y=this._meshesForIntersections.data[K];if(Y.actionManager)for(let K=0;Y.actionManager&&K<Y.actionManager.actions.length;K++){const l=Y.actionManager.actions[K];if(12===l.trigger||13===l.trigger){const K=l.getTriggerParameter(),v=K.mesh?K.mesh:K,U=v.intersectsMesh(Y,K.usePreciseIntersection),d=Y._intersectionsInProgress.indexOf(v);U&&-1===d?12===l.trigger?(l._executeCurrent(u.CreateNew(Y,void 0,v)),Y._intersectionsInProgress.push(v)):13===l.trigger&&Y._intersectionsInProgress.push(v):!U&&d>-1&&(13===l.trigger&&l._executeCurrent(u.CreateNew(Y,void 0,v)),Y.actionManager.hasSpecificTrigger(13,(K=>{const Y=K.mesh?K.mesh:K;return v===Y}))&&13!==l.trigger||Y._intersectionsInProgress.splice(d,1))}}}}_advancePhysicsEngineStep(K){}_animate(K){}animate(){if(this._engine.isDeterministicLockStep()){let K=Math.max(KK.MinDeltaTime,Math.min(this._engine.getDeltaTime(),KK.MaxDeltaTime))+this._timeAccumulator;const Y=this._engine.getTimeStep(),l=1e3/Y/1e3;let v=0;const U=this._engine.getLockstepMaxSteps();let d=Math.floor(K/Y);for(d=Math.min(d,U);K>0&&v<d;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=Y*l,this._animate(Y),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(Y),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,v++,K-=Y;this._timeAccumulator=K<0?0:K}else{const K=this.useConstantAnimationDeltaTime?16:Math.max(KK.MinDeltaTime,Math.min(this._engine.getDeltaTime(),KK.MaxDeltaTime));this._animationRatio=.06*K,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(K)}}_clear(){(this.autoClearDepthAndStencil||this.El)&&this._engine.clear(this._clearColor,this.El||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(K){var Y;if(null===K||void 0===K||!K.outputRenderTarget||null!==K&&void 0!==K&&K.isRigCamera||(K.outputRenderTarget._cleared=!1),null!==K&&void 0!==K&&null!==(Y=K.rigCameras)&&void 0!==Y&&Y.length)for(let l=0;l<K.rigCameras.length;++l){const Y=K.rigCameras[l].outputRenderTarget;Y&&(Y._cleared=!1)}}resetDrawCache(K){if(this.meshes)for(const Y of this.meshes)Y.resetDrawCache(K)}_renderWithFrameGraph(){var K;let Y=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),Y)for(const U of this.cameras)if(U.update(),0!==U.cameraRigMode)for(let K=0;K<U._rigCameras.length;K++)U._rigCameras[K].update();for(const U of this._beforeClearStage)U.action();const l=this.getActiveMeshCandidates(),v=l.length;for(let U=0;U<v;U++){const K=l.data[U];K.isBlocked||(this._totalVertices.addCount(K.getTotalVertices(),!1),K.isReady()&&K.isEnabled()&&!K.ni.hasAZeroComponent&&(K.ri(),K.actionManager&&K.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(K)))}if(this.particlesEnabled)for(let U=0;U<this.qi.length;U++){const K=this.qi[U];if(!K.isStarted()||!K.j)continue;const Y=K.j;Y.position&&!Y.isEnabled()||(this._activeParticleSystems.push(K),K.animate())}null===(K=this.frameGraph)||void 0===K||K.execute()}render(){var K;let Y=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(K=this.activeCameras)&&void 0!==K&&K.length&&this.activeCameras.forEach(this._checkCameraRenderTarget),this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),l||this.animate();for(const K of this._beforeCameraUpdateStage)K.action();if(Y)if(this.activeCameras&&this.activeCameras.length>0)for(let K=0;K<this.activeCameras.length;K++){const Y=this.activeCameras[K];if(Y.update(),0!==Y.cameraRigMode)for(let K=0;K<Y._rigCameras.length;K++)Y._rigCameras[K].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let K=0;K<this.activeCamera._rigCameras.length;K++)this.activeCamera._rigCameras[K].update();if(this.onBeforeRenderObservable.notifyObservers(this),this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(Y,l);else{var U;const K=this.getEngine();this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const Y=null!==(U=this.activeCameras)&&void 0!==U&&U.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){v.d.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!0;for(let l=0;l<this.customRenderTargets.length;l++){const v=this.customRenderTargets[l];if(v._shouldRender()){if(this._renderId++,this.activeCamera=v.activeCamera||this.activeCamera,!this.activeCamera)throw new Error("Active camera not set");K.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),v.render(Y!==this.activeCamera,this.dumpNextRenderTargets)}}v.d.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!1,this._renderId++}this._engine.currentRenderPassId=(null===Y||void 0===Y?void 0:Y.renderPassId)??0,this.activeCamera=Y,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const l of this._beforeClearStage)l.action();this._clearFrameBuffer(this.activeCamera);for(const l of this._gatherRenderTargetsStage)l.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let l=0;l<this.activeCameras.length;l++)this._processSubCameras(this.activeCameras[l],l>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const K of this._afterRenderStage)K.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let K=0;K<this._toBeDisposed.length;K++){const Y=this._toBeDisposed[K];Y&&Y.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let K=0;K<this.materials.length;K++)this.materials[K].freeze()}unfreezeMaterials(){for(let K=0;K<this.materials.length;K++)this.materials[K].unfreeze()}dispose(){if(this.u)return;this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations&&(this._activeAnimatables.forEach((K=>{K.onAnimationEndObservable.clear(),K.onAnimationEnd=null})),this.stopAllAnimations()),this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const K=this._activeRequests.slice();for(const U of K)U.abort();this._activeRequests.length=0;try{this.Hi.notifyObservers(this)}catch(v){O.e.Error("An error occurred while calling onDisposeObservable!",v)}this.Li();if(this._engine.getInputElement())for(let U=0;U<this.cameras.length;U++)this.cameras[U].Li();this._disposeList(this.animationGroups),this._disposeList(this.lights),this._disposeList(this.meshes,(K=>K.dispose(!0))),this._disposeList(this.transformNodes,(K=>K.dispose(!0)));const Y=this.cameras;this._disposeList(Y),this.nl&&this.nl.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.qi),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let l=this._engine.scenes.indexOf(this);l>-1&&this._engine.scenes.splice(l,1),n.e._LastCreatedScene===this&&(this._engine.scenes.length>0?n.e._LastCreatedScene=this._engine.scenes[this._engine.scenes.length-1]:n.e._LastCreatedScene=null),l=this._engine._virtualScenes.indexOf(this),l>-1&&this._engine._virtualScenes.splice(l,1),this._engine.wipeCaches(!0),this.Hi.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this._isDisposed=!0}_disposeList(K,Y){const l=K.slice(0);Y=Y??(K=>K.dispose());for(const v of l)Y(v);K.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let K=0;K<this.meshes.length;K++){const Y=this.meshes[K].oi;Y&&Y.clearCachedData()}}cleanCachedTextureBuffer(){for(const K of this.textures){K._buffer&&(K._buffer=null)}}getWorldExtends(K){const Y=new Z.o(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),l=new Z.o(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return K=K||(()=>!0),this.meshes.filter(K).forEach((K=>{if(K.ri(!0),!K.ui||0===K.ui.length||K.infiniteDistance)return;const v=K.getBoundingInfo(),U=v.boundingBox.minimumWorld,d=v.boundingBox.maximumWorld;Z.o.CheckExtends(U,Y,l),Z.o.CheckExtends(d,Y,l)})),{min:Y,max:l}}createPickingRay(K,Y,l,v){throw(0,R.e)("Ray")}createPickingRayToRef(K,Y,l,v,U){throw(0,R.e)("Ray")}createPickingRayInCameraSpace(K,Y,l){throw(0,R.e)("Ray")}createPickingRayInCameraSpaceToRef(K,Y,l,v){throw(0,R.e)("Ray")}Ik(K,Y,l,v,U,d){const A=(0,R.e)("Ray",!0);return A&&O.e.Warn(A),new M.c}pickWithBoundingInfo(K,Y,l,v,U){const d=(0,R.e)("Ray",!0);return d&&O.e.Warn(d),new M.c}pickWithRay(K,Y,l,v){throw(0,R.e)("Ray")}multiPick(K,Y,l,v,U){throw(0,R.e)("Ray")}multiPickWithRay(K,Y,l){throw(0,R.e)("Ray")}setPointerOverMesh(K,Y,l){this._inputManager.setPointerOverMesh(K,Y,l)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const K of this.geometries)K._rebuild();for(const K of this.meshes)K._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const K of this._components)K.rebuild();for(const K of this.qi)K.rebuild();if(this.spriteManagers)for(const K of this.spriteManagers)K.rebuild()}_rebuildTextures(){for(const K of this.textures)K._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(K,Y,l){if(void 0===Y)return K;const v=[];for(const U in K){const d=K[U];t.c&&t.c.MatchesQuery(d,Y)&&(!l||l(d))&&v.push(d)}return v}getMeshesByTags(K,Y){return this._getByTags(this.meshes,K,Y)}getCamerasByTags(K,Y){return this._getByTags(this.cameras,K,Y)}getLightsByTags(K,Y){return this._getByTags(this.lights,K,Y)}getMaterialByTags(K,Y){return this._getByTags(this.materials,K,Y).concat(this._getByTags(this.multiMaterials,K,Y))}getTransformNodesByTags(K,Y){return this._getByTags(this.transformNodes,K,Y)}setRenderingOrder(K){let Y=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,v=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(K,Y,l,v)}setRenderingAutoClearDepthStencil(K,Y){let l=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],v=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(K,Y,l,v)}getAutoClearDepthStencilSetup(K){return this._renderingManager.getAutoClearDepthStencilSetup(K)}_forceBlockMaterialDirtyMechanism(K){this._blockMaterialDirtyMechanism=K}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(K){this._blockMaterialDirtyMechanism!==K&&(this._blockMaterialDirtyMechanism=K,K||this.markAllMaterialsAsDirty(63))}markAllMaterialsAsDirty(K,Y){if(!this._blockMaterialDirtyMechanism)for(const l of this.materials)Y&&!Y(l)||l.Mi(K)}_loadFile(K,Y,l,v,U,d,A){const c=(0,N.l)(K,Y,l,v?this.offlineProvider:void 0,U,d,A);return this._activeRequests.push(c),c.onCompleteObservable.add((K=>{this._activeRequests.splice(this._activeRequests.indexOf(K),1)})),c}_loadFileAsync(K,Y,l,v,U){return new Promise(((d,A)=>{this._loadFile(K,(K=>{d(K)}),Y,l,v,((K,Y)=>{A(Y)}),U)}))}_requestFile(K,Y,l,v,U,d,A){const c=(0,N.s)(K,Y,l,v?this.offlineProvider:void 0,U,d,A);return this._activeRequests.push(c),c.onCompleteObservable.add((K=>{this._activeRequests.splice(this._activeRequests.indexOf(K),1)})),c}_requestFileAsync(K,Y,l,v,U){return new Promise(((d,A)=>{this._requestFile(K,(K=>{d(K)}),Y,l,v,(K=>{A(K)}),U)}))}_readFile(K,Y,l,v,U){const d=(0,N.r)(K,Y,l,v,U);return this._activeRequests.push(d),d.onCompleteObservable.add((K=>{this._activeRequests.splice(this._activeRequests.indexOf(K),1)})),d}_readFileAsync(K,Y,l){return new Promise(((v,U)=>{this._readFile(K,(K=>{v(K)}),Y,l,(K=>{U(K)}))}))}getPerfCollector(){throw(0,R.e)("performanceViewerSceneExtension")}setActiveCameraByID(K){return this.setActiveCameraById(K)}getMaterialByID(K){return this.getMaterialById(K)}getLastMaterialByID(K){return this.getLastMaterialById(K)}getTextureByUniqueID(K){return this.getTextureByUniqueId(K)}getCameraByID(K){return this.getCameraById(K)}getCameraByUniqueID(K){return this.getCameraByUniqueId(K)}getBoneByID(K){return this.getBoneById(K)}getLightByID(K){return this.getLightById(K)}getLightByUniqueID(K){return this.getLightByUniqueId(K)}getParticleSystemByID(K){return this.getParticleSystemById(K)}getGeometryByID(K){return this.getGeometryById(K)}getMeshByID(K){return this.getMeshById(K)}getMeshByUniqueID(K){return this.getMeshByUniqueId(K)}getLastMeshByID(K){return this.getLastMeshById(K)}getMeshesByID(K){return this.getMeshesById(K)}getTransformNodeByID(K){return this.getTransformNodeById(K)}getTransformNodeByUniqueID(K){return this.getTransformNodeByUniqueId(K)}getTransformNodesByID(K){return this.getTransformNodesById(K)}getNodeByID(K){return this.getNodeById(K)}getLastEntryByID(K){return this.getLastEntryById(K)}getLastSkeletonByID(K){return this.getLastSkeletonById(K)}}KK.FOGMODE_NONE=0,KK.FOGMODE_EXP=1,KK.FOGMODE_EXP2=2,KK.FOGMODE_LINEAR=3,KK.MinDeltaTime=1,KK.MaxDeltaTime=1e3,(0,h.f)("BABYLON.Scene",KK)}}]);