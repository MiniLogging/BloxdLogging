"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{10060:(a,i,K)=>{K.r(i),K.d(i,{_HDRTextureLoader:()=>f});var j=K(1018);class N{static ConvertPanoramaToCubemap(a,i,K,j){let N=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!a)throw"ConvertPanoramaToCubemap: input cannot be null";if(a.length!=i*K*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(j,this.FACE_FRONT,a,i,K,N),back:this.CreateCubemapTexture(j,this.FACE_BACK,a,i,K,N),left:this.CreateCubemapTexture(j,this.FACE_LEFT,a,i,K,N),right:this.CreateCubemapTexture(j,this.FACE_RIGHT,a,i,K,N),up:this.CreateCubemapTexture(j,this.FACE_UP,a,i,K,N),down:this.CreateCubemapTexture(j,this.FACE_DOWN,a,i,K,N),size:j,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(a,i,K,j,N){let E=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const v=new ArrayBuffer(a*a*4*3),e=new Float32Array(v),Y=E?Math.max(1,Math.round(j/4/a)):1,H=1/Y,f=H*H,o=i[1].zc(i[0]).scale(H/a),U=i[3].zc(i[2]).scale(H/a),q=1/a;let u=0;for(let g=0;g<a;g++)for(let E=0;E<Y;E++){let E=i[0],v=i[2];for(let i=0;i<a;i++)for(let H=0;H<Y;H++){const Y=v.zc(E).scale(u).add(E);Y.normalize();const H=this.CalcProjectionSpherical(Y,K,j,N);e[g*a*3+3*i+0]+=H.r*f,e[g*a*3+3*i+1]+=H.g*f,e[g*a*3+3*i+2]+=H.b*f,E=E.add(o),v=v.add(U)}u+=q*H}return e}static CalcProjectionSpherical(a,i,K,j){let N=Math.atan2(a.z,a.x);const E=Math.acos(a.y);for(;N<-Math.PI;)N+=2*Math.PI;for(;N>Math.PI;)N-=2*Math.PI;let v=N/Math.PI;const e=E/Math.PI;v=.5*v+.5;let Y=Math.round(v*K);Y<0?Y=0:Y>=K&&(Y=K-1);let H=Math.round(e*j);H<0?H=0:H>=j&&(H=j-1);const f=j-H-1;return{r:i[f*K*3+3*Y+0],g:i[f*K*3+3*Y+1],b:i[f*K*3+3*Y+2]}}}function E(a,i,K,j,N,E){N>0?(N=function(a,i){return i>1023?a*Math.pow(2,1023)*Math.pow(2,i-1023):i<-1074?a*Math.pow(2,-1074)*Math.pow(2,i+1074):a*Math.pow(2,i)}(1,N-136),a[E+0]=i*N,a[E+1]=K*N,a[E+2]=j*N):(a[E+0]=0,a[E+1]=0,a[E+2]=0)}function v(a,i){let K="",j="";for(let N=i;N<a.length-i&&(j=String.fromCharCode(a[N]),"\n"!=j);N++)K+=j;return K}function e(a){let i=0,K=0,j=v(a,0);if("#"!=j[0]||"?"!=j[1])throw"Bad HDR Format.";let N=!1,E=!1,e=0;do{e+=j.length+1,j=v(a,e),"FORMAT=32-bit_rle_rgbe"==j?E=!0:0==j.length&&(N=!0)}while(!N);if(!E)throw"HDR Bad header format, unsupported FORMAT";e+=j.length+1,j=v(a,e);const Y=/^-Y (.*) \+X (.*)$/g.exec(j);if(!Y||Y.length<3)throw"HDR Bad header format, no size";if(K=parseInt(Y[2]),i=parseInt(Y[1]),K<8||K>32767)throw"HDR Bad header format, unsupported size";return e+=j.length+1,{height:i,width:K,dataPosition:e}}function Y(a,i){return function(a,i){let K=i.height;const j=i.width;let N,v,e,Y,f,o=i.dataPosition,U=0,q=0,u=0;const g=new ArrayBuffer(4*j),s=new Uint8Array(g),B=new ArrayBuffer(i.width*i.height*4*3),h=new Float32Array(B);for(;K>0;){if(N=a[o++],v=a[o++],e=a[o++],Y=a[o++],2!=N||2!=v||128&e||i.width<8||i.width>32767)return H(a,i);if((e<<8|Y)!=j)throw"HDR Bad header format, wrong scan line width";for(U=0,u=0;u<4;u++)for(q=(u+1)*j;U<q;)if(N=a[o++],v=a[o++],N>128){if(f=N-128,0==f||f>q-U)throw"HDR Bad Format, bad scanline data (run)";for(;f-- >0;)s[U++]=v}else{if(f=N,0==f||f>q-U)throw"HDR Bad Format, bad scanline data (non-run)";if(s[U++]=v,--f>0)for(let i=0;i<f;i++)s[U++]=a[o++]}for(u=0;u<j;u++)N=s[u],v=s[u+j],e=s[u+2*j],Y=s[u+3*j],E(h,N,v,e,Y,(i.height-K)*j*3+3*u);K--}return h}(a,i)}function H(a,i){let K=i.height;const j=i.width;let N,v,e,Y,H,f=i.dataPosition;const o=new ArrayBuffer(i.width*i.height*4*3),U=new Float32Array(o);for(;K>0;){for(H=0;H<i.width;H++)N=a[f++],v=a[f++],e=a[f++],Y=a[f++],E(U,N,v,e,Y,(i.height-K)*j*3+3*H);K--}return U}N.FACE_LEFT=[new j.o(-1,-1,-1),new j.o(1,-1,-1),new j.o(-1,1,-1),new j.o(1,1,-1)],N.FACE_RIGHT=[new j.o(1,-1,1),new j.o(-1,-1,1),new j.o(1,1,1),new j.o(-1,1,1)],N.FACE_FRONT=[new j.o(1,-1,-1),new j.o(1,-1,1),new j.o(1,1,-1),new j.o(1,1,1)],N.FACE_BACK=[new j.o(-1,-1,1),new j.o(-1,-1,-1),new j.o(-1,1,1),new j.o(-1,1,-1)],N.FACE_DOWN=[new j.o(1,1,-1),new j.o(1,1,1),new j.o(-1,1,-1),new j.o(-1,1,1)],N.FACE_UP=[new j.o(-1,-1,-1),new j.o(-1,-1,1),new j.o(1,-1,-1),new j.o(1,-1,1)];class f{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(a,i,K){const j=new Uint8Array(a.buffer,a.byteOffset,a.byteLength),N=e(j),E=Y(j,N),v=N.width*N.height,H=new Float32Array(4*v);for(let e=0;e<v;e+=1)H[4*e]=E[3*e],H[4*e+1]=E[3*e+1],H[4*e+2]=E[3*e+2],H[4*e+3]=1;K(N.width,N.height,i.generateMipMaps,!1,(()=>{const a=i.getEngine();i.type=1,i.format=5,i._gammaSpace=!1,a._uploadDataToTextureDirectly(i,H)}))}}}}]);