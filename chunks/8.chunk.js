"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8,9],{2455:(k,M,F)=>{var l;F.d(M,{e:()=>t}),function(k){k[k.PointerMove=0]="PointerMove",k[k.PointerDown=1]="PointerDown",k[k.PointerUp=2]="PointerUp"}(l||(l={}));class t{}t.DOM_DELTA_PIXEL=0,t.DOM_DELTA_LINE=1,t.DOM_DELTA_PAGE=2},2452:(k,M,F)=>{F.d(M,{c:()=>l,d:()=>g,g:()=>t});class l{}l.KEYDOWN=1,l.KEYUP=2;class t{constructor(k,M){this.type=k,this.event=M}}class g extends t{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(k){this.skipOnKeyboardObservable=k}constructor(k,M){super(k,M),this.type=k,this.event=M,this.skipOnKeyboardObservable=!1}}},2449:(k,M,F)=>{F.d(M,{d:()=>t,e:()=>B,h:()=>G});var l=F(682);class t{}t.POINTERDOWN=1,t.POINTERUP=2,t.POINTERMOVE=4,t.POINTERWHEEL=8,t.POINTERPICK=16,t.POINTERTAP=32,t.POINTERDOUBLETAP=64;class g{constructor(k,M){this.type=k,this.event=M}}class B extends g{constructor(k,M,F,t){super(k,M),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new l.k(F,t)}}class G extends g{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(k,M,F){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(k,M),this._pickInfo=F,this._inputManager=l}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2487:(k,M,F)=>{var l=F(2353),t=F(2370);t.b.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(t.b.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=l.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((k=>{this._texture._sphericalPolynomial=k,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(k){this._texture&&(this._texture._sphericalPolynomial=k)},enumerable:!0,configurable:!0})},2441:(k,M,F)=>{function l(k){k.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}F.d(M,{c:()=>l})},2444:(k,M,F)=>{F.d(M,{b:()=>g,c:()=>t});var l=F(2441);function t(k,M){M.EXPOSURE&&k.push("exposureLinear"),M.CONTRAST&&k.push("contrast"),M.COLORGRADING&&k.push("colorTransformSettings"),(M.VIGNETTE||M.DITHER)&&k.push("vInverseScreenSize"),M.VIGNETTE&&(k.push("vignetteSettings1"),k.push("vignetteSettings2")),M.COLORCURVES&&(0,l.c)(k),M.DITHER&&k.push("ditherIntensity")}function g(k,M){M.COLORGRADING&&k.push("txColorTransform")}},2438:(k,M,F)=>{F.d(M,{e:()=>O});var l=F(654),t=F(663),g=F(477),B=F(720),G=F(716),A=F(2441);class N{constructor(){this._dirty=!0,this._tempColor=new B.g(0,0,0,0),this._globalCurve=new B.g(0,0,0,0),this._highlightsCurve=new B.g(0,0,0,0),this._midtonesCurve=new B.g(0,0,0,0),this._shadowsCurve=new B.g(0,0,0,0),this._positiveCurve=new B.g(0,0,0,0),this._negativeCurve=new B.g(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(k){this._globalHue=k,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(k){this._globalDensity=k,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(k){this._globalSaturation=k,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(k){this._globalExposure=k,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(k){this._highlightsHue=k,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(k){this._highlightsDensity=k,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(k){this._highlightsSaturation=k,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(k){this._highlightsExposure=k,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(k){this._midtonesHue=k,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(k){this._midtonesDensity=k,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(k){this._midtonesSaturation=k,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(k){this._midtonesExposure=k,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(k){this._shadowsHue=k,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(k){this._shadowsDensity=k,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(k){this._shadowsSaturation=k,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(k){this._shadowsExposure=k,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";k._dirty&&(k._dirty=!1,k._getColorGradingDataToRef(k._globalHue,k._globalDensity,k._globalSaturation,k._globalExposure,k._globalCurve),k._getColorGradingDataToRef(k._highlightsHue,k._highlightsDensity,k._highlightsSaturation,k._highlightsExposure,k._tempColor),k._tempColor.multiplyToRef(k._globalCurve,k._highlightsCurve),k._getColorGradingDataToRef(k._midtonesHue,k._midtonesDensity,k._midtonesSaturation,k._midtonesExposure,k._tempColor),k._tempColor.multiplyToRef(k._globalCurve,k._midtonesCurve),k._getColorGradingDataToRef(k._shadowsHue,k._shadowsDensity,k._shadowsSaturation,k._shadowsExposure,k._tempColor),k._tempColor.multiplyToRef(k._globalCurve,k._shadowsCurve),k._highlightsCurve.subtractToRef(k._midtonesCurve,k._positiveCurve),k._midtonesCurve.subtractToRef(k._shadowsCurve,k._negativeCurve)),M&&(M.setFloat4(F,k._positiveCurve.r,k._positiveCurve.g,k._positiveCurve.b,k._positiveCurve.a),M.setFloat4(l,k._midtonesCurve.r,k._midtonesCurve.g,k._midtonesCurve.b,k._midtonesCurve.a),M.setFloat4(t,k._negativeCurve.r,k._negativeCurve.g,k._negativeCurve.b,k._negativeCurve.a))}_getColorGradingDataToRef(k,M,F,l,t){null!=k&&(k=N._Clamp(k,0,360),M=N._Clamp(M,-100,100),F=N._Clamp(F,-100,100),l=N._Clamp(l,-100,100),M=N._ApplyColorGradingSliderNonlinear(M),M*=.5,l=N._ApplyColorGradingSliderNonlinear(l),M<0&&(M*=-1,k=(k+180)%360),N._FromHSBToRef(k,M,50+.25*l,t),t.scaleToRef(2,t),t.a=1+.01*F)}static _ApplyColorGradingSliderNonlinear(k){k/=100;let M=Math.abs(k);return M=Math.pow(M,2),k<0&&(M*=-1),M*=100,M}static _FromHSBToRef(k,M,F,l){let t=N._Clamp(k,0,360);const g=N._Clamp(M/100,0,1),B=N._Clamp(F/100,0,1);if(0===g)l.r=B,l.g=B,l.b=B;else{t/=60;const k=Math.floor(t),M=t-k,F=B*(1-g),G=B*(1-g*M),A=B*(1-g*(1-M));switch(k){case 0:l.r=B,l.g=A,l.b=F;break;case 1:l.r=G,l.g=B,l.b=F;break;case 2:l.r=F,l.g=B,l.b=A;break;case 3:l.r=F,l.g=G,l.b=B;break;case 4:l.r=A,l.g=F,l.b=B;break;default:l.r=B,l.g=F,l.b=G}}l.a=1}static _Clamp(k,M,F){return Math.min(Math.max(k,M),F)}clone(){return G.c.Clone((()=>new N),this)}serialize(){return G.c.Serialize(this)}static Parse(k){return G.c.Parse((()=>new N),k,null,null)}}N.PrepareUniforms=A.c,(0,l.d)([(0,t.E)()],N.prototype,"_globalHue",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_globalDensity",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_globalSaturation",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_globalExposure",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_highlightsHue",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_highlightsDensity",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_highlightsSaturation",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_highlightsExposure",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_midtonesHue",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_midtonesDensity",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_midtonesSaturation",void 0),(0,l.d)([(0,t.E)()],N.prototype,"_midtonesExposure",void 0),G.c._ColorCurvesParser=N.Parse;var d=F(629),L=F(2444),U=F(613);class O{constructor(){this.colorCurves=new N,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=O.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new B.g(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=O.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.onUpdateParameters=new g.c}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(k){this._colorCurvesEnabled!==k&&(this._colorCurvesEnabled=k,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(k){this._colorGradingTexture!==k&&(this._colorGradingTexture=k,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(k){this._colorGradingEnabled!==k&&(this._colorGradingEnabled=k,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(k){this._colorGradingWithGreenDepth!==k&&(this._colorGradingWithGreenDepth=k,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(k){this._colorGradingBGR!==k&&(this._colorGradingBGR=k,this._updateParameters())}get exposure(){return this._exposure}set exposure(k){this._exposure!==k&&(this._exposure=k,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(k){this._toneMappingEnabled!==k&&(this._toneMappingEnabled=k,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(k){this._toneMappingType!==k&&(this._toneMappingType=k,this._updateParameters())}get contrast(){return this._contrast}set contrast(k){this._contrast!==k&&(this._contrast=k,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(k){this.vignetteCenterY=k}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(k){this.vignetteCenterX=k}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(k){this._vignetteBlendMode!==k&&(this._vignetteBlendMode=k,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(k){this._vignetteEnabled!==k&&(this._vignetteEnabled=k,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(k){this._ditheringEnabled!==k&&(this._ditheringEnabled=k,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(k){this._ditheringIntensity!==k&&(this._ditheringIntensity=k,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(k){this._skipFinalColorClamp!==k&&(this._skipFinalColorClamp=k,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(k){this._applyByPostProcess!==k&&(this._applyByPostProcess=k,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(k){this._isEnabled!==k&&(this._isEnabled=k,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(k){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return k.VIGNETTE=!1,k.TONEMAPPING=0,k.CONTRAST=!1,k.EXPOSURE=!1,k.COLORCURVES=!1,k.COLORGRADING=!1,k.COLORGRADING3D=!1,k.DITHER=!1,k.IMAGEPROCESSING=!1,k.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(k.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(k.VIGNETTE=this.vignetteEnabled,k.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===O._VIGNETTEMODE_MULTIPLY,k.VIGNETTEBLENDMODEOPAQUE=!k.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case O.TONEMAPPING_KHR_PBR_NEUTRAL:k.TONEMAPPING=3;break;case O.TONEMAPPING_ACES:k.TONEMAPPING=2;break;default:k.TONEMAPPING=1}else k.TONEMAPPING=0;k.CONTRAST=1!==this.contrast,k.EXPOSURE=1!==this.exposure,k.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,k.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,k.COLORGRADING?k.COLORGRADING3D=this.colorGradingTexture.is3D:k.COLORGRADING3D=!1,k.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,k.SAMPLER3DBGRMAP=this.colorGradingBGR,k.DITHER=this._ditheringEnabled,k.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,k.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,k.IMAGEPROCESSING=k.VIGNETTE||!!k.TONEMAPPING||k.CONTRAST||k.EXPOSURE||k.COLORCURVES||k.COLORGRADING||k.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(k,M){if(this._colorCurvesEnabled&&this.colorCurves&&N.Bind(this.colorCurves,k),this._vignetteEnabled||this._ditheringEnabled){const F=1/k.getEngine().getRenderWidth(),l=1/k.getEngine().getRenderHeight();if(k.setFloat2("vInverseScreenSize",F,l),this._ditheringEnabled&&k.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const t=null!=M?M:l/F;let g=Math.tan(.5*this.vignetteCameraFov),B=g*t;const G=Math.sqrt(B*g);B=(0,d.l)(B,G,this.vignetteStretch),g=(0,d.l)(g,G,this.vignetteStretch),k.setFloat4("vignetteSettings1",B,g,-B*this.vignetteCenterX,-g*this.vignetteCenterY);const A=-2*this.vignetteWeight;k.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,A)}}if(k.setFloat("exposureLinear",this.exposure),k.setFloat("contrast",this.contrast),this.colorGradingTexture){k.setTexture("txColorTransform",this.colorGradingTexture);const M=this.colorGradingTexture.getSize().height;k.setFloat4("colorTransformSettings",(M-1)/M,.5/M,M,this.colorGradingTexture.level)}}clone(){return G.c.Clone((()=>new O),this)}serialize(){return G.c.Serialize(this)}static Parse(k){const M=G.c.Parse((()=>new O),k,null,null);return void 0!==k.vignetteCentreX&&(M.vignetteCenterX=k.vignetteCentreX),void 0!==k.vignetteCentreY&&(M.vignetteCenterY=k.vignetteCentreY),M}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}O.TONEMAPPING_STANDARD=0,O.TONEMAPPING_ACES=1,O.TONEMAPPING_KHR_PBR_NEUTRAL=2,O.PrepareUniforms=L.c,O.PrepareSamplers=L.b,O._VIGNETTEMODE_MULTIPLY=0,O._VIGNETTEMODE_OPAQUE=1,(0,l.d)([(0,t.d)()],O.prototype,"colorCurves",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_colorCurvesEnabled",void 0),(0,l.d)([(0,t.x)("colorGradingTexture")],O.prototype,"_colorGradingTexture",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_colorGradingEnabled",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_colorGradingWithGreenDepth",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_colorGradingBGR",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_exposure",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_toneMappingEnabled",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_toneMappingType",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_contrast",void 0),(0,l.d)([(0,t.E)()],O.prototype,"vignetteStretch",void 0),(0,l.d)([(0,t.E)()],O.prototype,"vignetteCenterX",void 0),(0,l.d)([(0,t.E)()],O.prototype,"vignetteCenterY",void 0),(0,l.d)([(0,t.E)()],O.prototype,"vignetteWeight",void 0),(0,l.d)([(0,t.j)()],O.prototype,"vignetteColor",void 0),(0,l.d)([(0,t.E)()],O.prototype,"vignetteCameraFov",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_vignetteBlendMode",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_vignetteEnabled",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_ditheringEnabled",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_ditheringIntensity",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_skipFinalColorClamp",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_applyByPostProcess",void 0),(0,l.d)([(0,t.E)()],O.prototype,"_isEnabled",void 0),G.c._ImageProcessingConfigurationParser=O.Parse,(0,U.e)("BABYLON.ImageProcessingConfiguration",O)},2492:(k,M,F)=>{F.r(M),F.d(M,{Dispose:()=>U,DumpData:()=>L,DumpDataAsync:()=>d,DumpFramebuffer:()=>N,DumpTools:()=>O});var l=F(2409),t=F(480),g=F(698),B=F(516);let G,A=null;async function N(k,M,F,l){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,B=arguments.length>6?arguments[6]:void 0;const G=await F.readPixels(0,0,k,M);L(k,M,new Uint8Array(G.buffer),l,t,g,!0,void 0,B)}function d(k,M,F){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",t=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6],G=arguments.length>7?arguments[7]:void 0;return new Promise((A=>{L(k,M,F,(k=>A(k)),l,t,g,B,G)}))}function L(k,M,N,d){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",O=arguments.length>5?arguments[5]:void 0,w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Z=arguments.length>7&&void 0!==arguments[7]&&arguments[7],R=arguments.length>8?arguments[8]:void 0;(async function(){return A||(A=new Promise(((k,M)=>{let t,g=null;const A={Sk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};F.e(22).then(F.bind(F,12169)).then((N=>{let{ThinEngine:d}=N;try{t=new OffscreenCanvas(100,100),g=new d(t,!1,A)}catch(O){t=document.createElement("canvas"),g=new d(t,!1,A)}B.e.Instances.pop(),B.e.OnEnginesDisposedObservable.add((k=>{g&&k!==g&&!g.u&&0===B.e.Instances.length&&U()})),g.getCaps().parallelShaderCompile=void 0;const L=new l.b(g);F.e(33).then(F.bind(F,13073)).then((F=>{let{passPixelShader:B}=F;if(!g)return void M("Engine is not defined");const A=new l.e({Xj:g,name:B.name,fragmentShader:B.shader,samplerNames:["textureSampler"]});G={canvas:t,Xj:g,renderer:L,wrapper:A},k(G)}))})).catch(M)}))),await A})().then((F=>{if(F.Xj.setSize(k,M,!0),N instanceof Float32Array){const k=new Uint8Array(N.length);let M=N.length;for(;M--;){const F=N[M];k[M]=Math.round(255*(0,g.e)(F))}N=k}const l=F.Xj.createRawTexture(N,k,M,5,!1,!w,1);F.renderer.setViewport(),F.renderer.applyEffectWrapper(F.wrapper),F.wrapper.effect._bindTexture("textureSampler",l),F.renderer.draw(),Z?t.f.ToBlob(F.canvas,(k=>{const M=new FileReader;M.onload=k=>{const M=k.target.result;d&&d(M)},M.readAsArrayBuffer(k)}),L,R):t.f.EncodeScreenshotCanvasData(F.canvas,d,L,O,R),l.dispose()}))}function U(){var k;G?(G.wrapper.dispose(),G.renderer.dispose(),G.Xj.dispose()):null===(k=A)||void 0===k||k.then((k=>{k.wrapper.dispose(),k.renderer.dispose(),k.Xj.dispose()}));A=null,G=null}const O={DumpData:L,DumpDataAsync:d,DumpFramebuffer:N,Dispose:U};t.f.DumpData=L,t.f.DumpDataAsync=d,t.f.DumpFramebuffer=N},2427:(k,M,F)=>{F.d(M,{d:()=>w,g:()=>y,k:()=>Q,l:()=>v});var l=F(480),t=F(682),g=F(698),B=F(2323),G=F(588),A=F(2370),N=(F(2430),F(2400)),d=F(487);F(2478),F(2487),F(2492);const L="image/png",U=2,O=[134,22,135,150,246,214,150,54];function w(k){const M=new DataView(k.buffer,k.byteOffset,k.byteLength);let F=0;for(let B=0;B<O.length;B++)if(M.getUint8(F++)!==O[B])return d.c.Error("Not a babylon environment map"),null;let l="",t=0;for(;t=M.getUint8(F++);)l+=String.fromCharCode(t);let g=JSON.parse(l);return g=Z(g),g.uk&&(g.uk.specularDataPosition=F,g.uk.lodGenerationScale=g.uk.lodGenerationScale||.8),g}function Z(k){if(k.version>U)throw new Error(`Unsupported babylon environment map version "${k.version}". Latest supported version is "${U}".`);return 2===k.version?k:k={...k,version:2,imageType:L}}function R(k,M){const F=(M=Z(M)).uk;let l=Math.log2(M.width);if(l=Math.round(l)+1,F.mipmaps.length!==6*l)throw new Error(`Unsupported specular mipmaps number "${F.mipmaps.length}"`);const t=new Array(l);for(let g=0;g<l;g++){t[g]=new Array(6);for(let M=0;M<6;M++){const l=F.mipmaps[6*g+M];t[g][M]=new Uint8Array(k.buffer,k.byteOffset+F.specularDataPosition+l.position,l.length)}}return t}function y(k,M,F){const l=(F=Z(F)).uk;if(!l)return Promise.resolve();k._lodGenerationScale=l.lodGenerationScale;return o(k,R(M,F),F.imageType)}function m(k,M,F,l,t,g,B,G,A,N,d){return new Promise(((L,U)=>{if(F){const F=M.createTexture(null,!0,!0,null,1,null,(k=>{U(k)}),k);null===l||void 0===l||l.onEffectCreatedObservable.addOnce((G=>{G.executeWhenCompiled((()=>{l.externalTextureSamplerBinding=!0,l.onApply=l=>{l._bindTexture("textureSampler",F),l.setFloat2("scale",1,M._features.needsInvertingBitmap&&k instanceof ImageBitmap?-1:1)},M.scenes.length&&(M.scenes[0].postProcessManager.directRender([l],N,!0,g,B),M.restoreDefaultFramebuffer(),F.dispose(),URL.revokeObjectURL(t),L())}))}))}else{if(M._uploadImageToTexture(d,k,g,B),G){const F=A[B];F&&M._uploadImageToTexture(F._texture,k,g,0)}L()}}))}async function o(k,M){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;if(!l.f.IsExponentOfTwo(k.width))throw new Error("Texture size must be a power of two");const B=(0,g.m)(k.width)+1,d=k.getEngine();let U=!1,O=!1,w=null,Z=null,R=null;const y=d.getCaps();k.format=5,k.type=0,k.generateMipMaps=!0,k._cachedAnisotropicFilteringLevel=null,d.updateTextureSamplingMode(3,k),y.textureLOD?d._features.supportRenderAndCopyToLodForFloatTextures?y.textureHalfFloatRender&&y.textureHalfFloatLinearFiltering?(U=!0,k.type=2):y.textureFloatRender&&y.textureFloatLinearFiltering&&(U=!0,k.type=1):U=!1:(U=!1,O=!0,R={});let o=0;if(U)d.isWebGPU?(o=1,await F.e(25).then(F.bind(F,13092))):await F.e(23).then(F.bind(F,13098)),w=new N.d("rgbdDecode","rgbdDecode",null,null,1,null,3,d,!1,void 0,k.type,void 0,null,!1,void 0,o),k._isRGBD=!1,k.invertY=!1,Z=d.createRenderTargetCubeTexture(k.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:k.type,format:5});else if(k._isRGBD=!0,k.invertY=!0,O){const M=3,F=k._lodGenerationScale,l=k._lodGenerationOffset;for(let t=0;t<M;t++){const g=(B-1)*F+l,N=l+(g-l)*(1-t/(M-1)),L=Math.round(Math.min(Math.max(N,0),g)),U=new G.c(d,2);U.isCube=!0,U.invertY=!0,U.generateMipMaps=!1,d.updateTextureSamplingMode(2,U);const O=new A.b(null);switch(O._isCube=!0,O._texture=U,R[L]=O,t){case 0:k._lodTextureLow=O;break;case 1:k._lodTextureMid=O;break;case 2:k._lodTextureHigh=O}}}const Q=[];for(let F=0;F<M.length;F++)for(let l=0;l<6;l++){const g=M[F][l],B=new Blob([g],{type:t}),G=URL.createObjectURL(B);let A;if(d._features.forceBitmapOverHTMLImageElement)A=d.createImageBitmap(B,{premultiplyAlpha:"none"}).then((M=>m(M,d,U,w,G,l,F,O,R,Z,k)));else{const M=new Image;M.src=G,A=new Promise(((t,g)=>{M.onload=()=>{m(M,d,U,w,G,l,F,O,R,Z,k).then((()=>t())).catch((k=>{g(k)}))},M.onerror=k=>{g(k)}}))}Q.push(A)}if(M.length<B){let F;const l=Math.pow(2,B-1-M.length),t=l*l*4;switch(k.type){case 0:F=new Uint8Array(t);break;case 2:F=new Uint16Array(t);break;case 1:F=new Float32Array(t)}for(let g=M.length;g<B;g++)for(let M=0;M<6;M++)d._uploadArrayBufferViewToTexture(k,F,M,g)}return Promise.all(Q).then((()=>{Z&&(d._releaseTexture(k),Z._swapAndDie(k)),w&&w.dispose(),O&&(k._lodTextureHigh&&k._lodTextureHigh._texture&&(k._lodTextureHigh._texture.isReady=!0),k._lodTextureMid&&k._lodTextureMid._texture&&(k._lodTextureMid._texture.isReady=!0),k._lodTextureLow&&k._lodTextureLow._texture&&(k._lodTextureLow._texture.isReady=!0))}))}function Q(k,M){const F=(M=Z(M)).irradiance;if(!F)return;const l=new B.f;t.m.FromArrayToRef(F.x,0,l.x),t.m.FromArrayToRef(F.y,0,l.y),t.m.FromArrayToRef(F.z,0,l.z),t.m.FromArrayToRef(F.xx,0,l.xx),t.m.FromArrayToRef(F.yy,0,l.yy),t.m.FromArrayToRef(F.zz,0,l.zz),t.m.FromArrayToRef(F.yz,0,l.yz),t.m.FromArrayToRef(F.zx,0,l.zx),t.m.FromArrayToRef(F.xy,0,l.xy),k._sphericalPolynomial=l}function v(k,M,F,l,t){const g=o(k.getEngine().createRawCubeTexture(null,k.width,k.format,k.type,k.generateMipMaps,k.invertY,k.samplingMode,k._compression),M).then((()=>k));return k.onRebuildCallback=k=>({proxy:g,isReady:!0,isAsync:!0}),k._source=13,k._bufferViewArrayArray=M,k._lodGenerationScale=l,k._lodGenerationOffset=t,k._sphericalPolynomial=F,o(k,M).then((()=>(k.isReady=!0,k)))}},2466:(k,M,F)=>{F.d(M,{c:()=>t});var l=F(498);class t{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(k,M){t.Enabled&&(this._current+=k,M&&this._fetchResult())}beginMonitoring(){t.Enabled&&(this._startMonitoringTime=l.e.Now)}endMonitoring(){let k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!t.Enabled)return;k&&this.fetchNewFrame();const M=l.e.Now;this._current=M-this._startMonitoringTime,k&&this._fetchResult()}jk(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const k=l.e.Now;k-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=k,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}t.Enabled=!0},2478:(k,M,F)=>{F.d(M,{e:()=>g});var l=F(2400),t=F(2355);class g{static ExpandRGBDTexture(k){const M=k._texture;if(!M||!k.isRGBD)return;const t=M.getEngine(),g=t.getCaps(),B=M.isReady;let G=!1;g.textureHalfFloatRender&&g.textureHalfFloatLinearFiltering?(G=!0,M.type=2):g.textureFloatRender&&g.textureFloatLinearFiltering&&(G=!0,M.type=1),G&&(M.isReady=!1,M._isRGBD=!1,M.invertY=!1);const A=async()=>{const g=t.isWebGPU,B=g?1:0;M.isReady=!1,g?await Promise.all([F.e(25).then(F.bind(F,13092)),F.e(26).then(F.bind(F,13101))]):await Promise.all([F.e(23).then(F.bind(F,13098)),F.e(24).then(F.bind(F,13109))]);const G=new l.d("rgbdDecode","rgbdDecode",null,null,1,null,3,t,!1,void 0,M.type,void 0,null,!1,void 0,B);G.externalTextureSamplerBinding=!0;const A=t.createRenderTargetTexture(M.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:M.samplingMode,type:M.type,format:5});G.onEffectCreatedObservable.addOnce((F=>{F.executeWhenCompiled((()=>{G.onApply=k=>{k._bindTexture("textureSampler",M),k.setFloat2("scale",1,1)},k.va().postProcessManager.directRender([G],A,!0),t.restoreDefaultFramebuffer(),t._releaseTexture(M),G&&G.dispose(),A._swapAndDie(M),M.isReady=!0}))}))};G&&(B?A():k.onLoadObservable.addOnce(A))}static EncodeTextureToRGBD(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,t.b)("rgbdEncode",k,M,F,1,5)}}},2474:(k,M,F)=>{F.d(M,{d:()=>l});class l{static get UniqueId(){const k=this._UniqueIdCounter;return this._UniqueIdCounter++,k}}l._UniqueIdCounter=1},2463:(k,M,F)=>{F.d(M,{c:()=>l});class l{}l._IsPickingAvailable=!1},2430:(k,M,F)=>{F.d(M,{e:()=>kk});var l=F(480),t=F(498),g=F(477),B=F(676);class G{constructor(){this._count=0,this._data={}}p(k){this.clear(),k.forEach(((k,M)=>this.add(k,M)))}get(k){const M=this._data[k];if(void 0!==M)return M}getOrAddWithFactory(k,M){let F=this.get(k);return void 0!==F||(F=M(k),F&&this.add(k,F)),F}getOrAdd(k,M){const F=this.get(k);return void 0!==F?F:(this.add(k,M),M)}contains(k){return void 0!==this._data[k]}add(k,M){return void 0===this._data[k]&&(this._data[k]=M,++this._count,!0)}set(k,M){return void 0!==this._data[k]&&(this._data[k]=M,!0)}getAndRemove(k){const M=this.get(k);return void 0!==M?(delete this._data[k],--this._count,M):null}remove(k){return!!this.contains(k)&&(delete this._data[k],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(k){for(const M in this._data){k(M,this._data[M])}}first(k){for(const M in this._data){const F=k(M,this._data[M]);if(F)return F}return null}}var A=F(635),N=F(682),d=F(2438),L=F(818),U=F(815);class O{constructor(k,M,F,l,t,g){this.source=k,this.pointerX=M,this.pointerY=F,this.meshUnderPointer=l,this.sourceEvent=t,this.additionalData=g}static CreateNew(k,M,F){const l=k.va();return new O(k,l.pointerX,l.pointerY,l.meshUnderPointer||k,M,F)}static CreateNewFromSprite(k,M,F,l){return new O(k,M.pointerX,M.pointerY,M.meshUnderPointer,F,l)}static CreateNewFromScene(k,M){return new O(null,k.pointerX,k.pointerY,k.meshUnderPointer,M)}static CreateNewFromPrimitive(k,M,F,l){return new O(k,M.x,M.y,null,F,l)}}var w=F(2383),Z=F(2392),R=F(866),y=F(482),m=F(516),o=F(500),Q=F(2449);class v{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const k in v.Triggers)if(Object.prototype.hasOwnProperty.call(v.Triggers,k))return!0;return!1}static get HasPickTriggers(){for(const k in v.Triggers)if(Object.prototype.hasOwnProperty.call(v.Triggers,k)){const M=parseInt(k);if(M>=1&&M<=7)return!0}return!1}static HasSpecificTrigger(k){for(const M in v.Triggers)if(Object.prototype.hasOwnProperty.call(v.Triggers,M)){if(parseInt(M)===k)return!0}return!1}}v.Triggers={};var J,n,a,Y,s,j,S,c=F(2452);!function(k){k[k.Generic=0]="Generic",k[k.Keyboard=1]="Keyboard",k[k.Mouse=2]="Mouse",k[k.Touch=3]="Touch",k[k.DualShock=4]="DualShock",k[k.Xbox=5]="Xbox",k[k.Switch=6]="Switch",k[k.DualSense=7]="DualSense"}(J||(J={})),function(k){k[k.Horizontal=0]="Horizontal",k[k.Vertical=1]="Vertical",k[k.LeftClick=2]="LeftClick",k[k.MiddleClick=3]="MiddleClick",k[k.RightClick=4]="RightClick",k[k.BrowserBack=5]="BrowserBack",k[k.BrowserForward=6]="BrowserForward",k[k.MouseWheelX=7]="MouseWheelX",k[k.MouseWheelY=8]="MouseWheelY",k[k.MouseWheelZ=9]="MouseWheelZ",k[k.Move=12]="Move"}(n||(n={})),function(k){k[k.Horizontal=0]="Horizontal",k[k.Vertical=1]="Vertical",k[k.LeftClick=2]="LeftClick",k[k.MiddleClick=3]="MiddleClick",k[k.RightClick=4]="RightClick",k[k.BrowserBack=5]="BrowserBack",k[k.BrowserForward=6]="BrowserForward",k[k.MouseWheelX=7]="MouseWheelX",k[k.MouseWheelY=8]="MouseWheelY",k[k.MouseWheelZ=9]="MouseWheelZ",k[k.DeltaHorizontal=10]="DeltaHorizontal",k[k.DeltaVertical=11]="DeltaVertical"}(a||(a={})),function(k){k[k.Cross=0]="Cross",k[k.Circle=1]="Circle",k[k.Square=2]="Square",k[k.Triangle=3]="Triangle",k[k.L1=4]="L1",k[k.R1=5]="R1",k[k.L2=6]="L2",k[k.R2=7]="R2",k[k.Share=8]="Share",k[k.Options=9]="Options",k[k.L3=10]="L3",k[k.R3=11]="R3",k[k.DPadUp=12]="DPadUp",k[k.DPadDown=13]="DPadDown",k[k.DPadLeft=14]="DPadLeft",k[k.DPadRight=15]="DPadRight",k[k.Home=16]="Home",k[k.TouchPad=17]="TouchPad",k[k.LStickXAxis=18]="LStickXAxis",k[k.LStickYAxis=19]="LStickYAxis",k[k.RStickXAxis=20]="RStickXAxis",k[k.RStickYAxis=21]="RStickYAxis"}(Y||(Y={})),function(k){k[k.Cross=0]="Cross",k[k.Circle=1]="Circle",k[k.Square=2]="Square",k[k.Triangle=3]="Triangle",k[k.L1=4]="L1",k[k.R1=5]="R1",k[k.L2=6]="L2",k[k.R2=7]="R2",k[k.Create=8]="Create",k[k.Options=9]="Options",k[k.L3=10]="L3",k[k.R3=11]="R3",k[k.DPadUp=12]="DPadUp",k[k.DPadDown=13]="DPadDown",k[k.DPadLeft=14]="DPadLeft",k[k.DPadRight=15]="DPadRight",k[k.Home=16]="Home",k[k.TouchPad=17]="TouchPad",k[k.LStickXAxis=18]="LStickXAxis",k[k.LStickYAxis=19]="LStickYAxis",k[k.RStickXAxis=20]="RStickXAxis",k[k.RStickYAxis=21]="RStickYAxis"}(s||(s={})),function(k){k[k.A=0]="A",k[k.B=1]="B",k[k.X=2]="X",k[k.Y=3]="Y",k[k.LB=4]="LB",k[k.RB=5]="RB",k[k.LT=6]="LT",k[k.RT=7]="RT",k[k.Back=8]="Back",k[k.Start=9]="Start",k[k.LS=10]="LS",k[k.RS=11]="RS",k[k.DPadUp=12]="DPadUp",k[k.DPadDown=13]="DPadDown",k[k.DPadLeft=14]="DPadLeft",k[k.DPadRight=15]="DPadRight",k[k.Home=16]="Home",k[k.LStickXAxis=17]="LStickXAxis",k[k.LStickYAxis=18]="LStickYAxis",k[k.RStickXAxis=19]="RStickXAxis",k[k.RStickYAxis=20]="RStickYAxis"}(j||(j={})),function(k){k[k.B=0]="B",k[k.A=1]="A",k[k.Y=2]="Y",k[k.X=3]="X",k[k.L=4]="L",k[k.R=5]="R",k[k.ZL=6]="ZL",k[k.ZR=7]="ZR",k[k.Minus=8]="Minus",k[k.Plus=9]="Plus",k[k.LS=10]="LS",k[k.RS=11]="RS",k[k.DPadUp=12]="DPadUp",k[k.DPadDown=13]="DPadDown",k[k.DPadLeft=14]="DPadLeft",k[k.DPadRight=15]="DPadRight",k[k.Home=16]="Home",k[k.Capture=17]="Capture",k[k.LStickXAxis=18]="LStickXAxis",k[k.LStickYAxis=19]="LStickYAxis",k[k.RStickXAxis=20]="RStickXAxis",k[k.RStickYAxis=21]="RStickYAxis"}(S||(S={}));var r=F(2455);class h{static CreateDeviceEvent(k,M,F,l,t,g,B){switch(k){case J.Keyboard:return this._CreateKeyboardEvent(F,l,t,g);case J.Mouse:if(F===n.MouseWheelX||F===n.MouseWheelY||F===n.MouseWheelZ)return this._CreateWheelEvent(k,M,F,l,t,g);case J.Touch:return this._CreatePointerEvent(k,M,F,l,t,g,B);default:throw`Unable to generate event for device ${J[k]}`}}static _CreatePointerEvent(k,M,F,l,t,g,B){const G=this._CreateMouseEvent(k,M,F,l,t,g);k===J.Mouse?(G.deviceType=J.Mouse,G.pointerId=1,G.pointerType="mouse"):(G.deviceType=J.Touch,G.pointerId=B??M,G.pointerType="touch");let A=0;return A+=t.pollInput(k,M,n.LeftClick),A+=2*t.pollInput(k,M,n.RightClick),A+=4*t.pollInput(k,M,n.MiddleClick),G.buttons=A,F===n.Move?G.type="pointermove":F>=n.LeftClick&&F<=n.RightClick&&(G.type=1===l?"pointerdown":"pointerup",G.button=F-2),G}static _CreateWheelEvent(k,M,F,l,t,g){const B=this._CreateMouseEvent(k,M,F,l,t,g);switch(B.pointerId=1,B.type="wheel",B.deltaMode=r.e.DOM_DELTA_PIXEL,B.deltaX=0,B.deltaY=0,B.deltaZ=0,F){case n.MouseWheelX:B.deltaX=l;break;case n.MouseWheelY:B.deltaY=l;break;case n.MouseWheelZ:B.deltaZ=l}return B}static _CreateMouseEvent(k,M,F,l,t,g){const B=this._CreateEvent(g),G=t.pollInput(k,M,n.Horizontal),A=t.pollInput(k,M,n.Vertical);return g?(B.movementX=0,B.movementY=0,B.offsetX=B.movementX-g.getBoundingClientRect().x,B.offsetY=B.movementY-g.getBoundingClientRect().y):(B.movementX=t.pollInput(k,M,10),B.movementY=t.pollInput(k,M,11),B.offsetX=0,B.offsetY=0),this._CheckNonCharacterKeys(B,t),B.clientX=G,B.clientY=A,B.x=G,B.y=A,B.deviceType=k,B.deviceSlot=M,B.inputIndex=F,B}static _CreateKeyboardEvent(k,M,F,l){const t=this._CreateEvent(l);return this._CheckNonCharacterKeys(t,F),t.deviceType=J.Keyboard,t.deviceSlot=0,t.inputIndex=k,t.type=1===M?"keydown":"keyup",t.key=String.fromCharCode(k),t.keyCode=k,t}static _CheckNonCharacterKeys(k,M){const F=M.isDeviceAvailable(J.Keyboard),l=F&&1===M.pollInput(J.Keyboard,0,18),t=F&&1===M.pollInput(J.Keyboard,0,17),g=F&&(1===M.pollInput(J.Keyboard,0,91)||1===M.pollInput(J.Keyboard,0,92)||1===M.pollInput(J.Keyboard,0,93)),B=F&&1===M.pollInput(J.Keyboard,0,16);k.altKey=l,k.ctrlKey=t,k.metaKey=g,k.shiftKey=B}static _CreateEvent(k){const M={preventDefault:()=>{}};return M.target=k,M}}class e{constructor(k,M,F){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(k,M,((k,M,l,t)=>{const g=h.CreateDeviceEvent(k,M,l,t,this);F(k,M,g)})):this._createDummyNativeInput()}pollInput(k,M,F){return this._nativeInput.pollInput(k,M,F)}isDeviceAvailable(k){return k===J.Mouse||k===J.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const x=Object.keys(n).length/2;class p{constructor(k,M,F,t){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=l.f.IsSafari(),this._usingMacOS=(0,y.i)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=k=>{},this._keyboardUpEvent=k=>{},this._keyboardBlurEvent=k=>{},this._pointerMoveEvent=k=>{},this._pointerDownEvent=k=>{},this._pointerUpEvent=k=>{},this._pointerCancelEvent=k=>{},this._pointerWheelEvent=k=>{},this._pointerBlurEvent=k=>{},this._pointerMacOSChromeOutEvent=k=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,y.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,y.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=k=>{},this._gamepadDisconnectedEvent=k=>{},this._eventPrefix=l.f.GetPointerPrefix(k),this._engine=k,this._onDeviceConnected=M,this._onDeviceDisconnected=F,this._onInputChanged=t,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOS&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(k,M,F){const t=this._inputs[k][M];if(!t)throw`Unable to find device ${J[k]}`;k>=J.DualShock&&k<=J.DualSense&&this._updateDevice(k,M,F);const g=t[F];if(void 0===g)throw`Unable to find input ${F} for device ${J[k]} in slot ${M}`;return F===n.Move&&l.f.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),g}isDeviceAvailable(k){return void 0!==this._inputs[k]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const k=null===this||void 0===this?void 0:this._engine.getInputElement();if(k&&(!this._eventsAttached||this._elementToAttachTo!==k)){if(this._disableEvents(),this._inputs)for(const k of this._inputs)if(k)for(const M in k){const F=k[+M];if(F)for(let k=0;k<F.length;k++)F[k]=0}this._elementToAttachTo=k,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOS&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const k=navigator.getGamepads();for(const M of k)M&&this._addGamePad(M)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(J.Mouse,0,0,0)}_addGamePad(k){const M=this._getGamepadDeviceType(k.id),F=k.index;this._gamepads=this._gamepads||new Array(k.index+1),this._registerDevice(M,F,k.buttons.length+k.axes.length),this._gamepads[F]=M}_addPointerDevice(k,M,F,l){this._pointerActive||(this._pointerActive=!0),this._registerDevice(k,M,x);const t=this._inputs[k][M];t[0]=F,t[1]=l}_registerDevice(k,M,F){if(void 0===M)throw`Unable to register device ${J[k]} to undefined slot.`;if(this._inputs[k]||(this._inputs[k]={}),!this._inputs[k][M]){const l=new Array(F);l.fill(0),this._inputs[k][M]=l,this._onDeviceConnected(k,M)}}_unregisterDevice(k,M){this._inputs[k][M]&&(delete this._inputs[k][M],this._onDeviceDisconnected(k,M))}_handleKeyActions(){this._keyboardDownEvent=k=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(J.Keyboard,0,255));const M=this._inputs[J.Keyboard][0];if(M){M[k.keyCode]=1;const F=k;F.inputIndex=k.keyCode,this._usingMacOS&&k.metaKey&&"Meta"!==k.key&&(this._metaKeys.includes(k.keyCode)||this._metaKeys.push(k.keyCode)),this._onInputChanged(J.Keyboard,0,F)}},this._keyboardUpEvent=k=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(J.Keyboard,0,255));const M=this._inputs[J.Keyboard][0];if(M){M[k.keyCode]=0;const F=k;if(F.inputIndex=k.keyCode,this._usingMacOS&&"Meta"===k.key&&this._metaKeys.length>0){for(const k of this._metaKeys){const F=h.CreateDeviceEvent(J.Keyboard,0,k,0,this,this._elementToAttachTo);M[k]=0,this._onInputChanged(J.Keyboard,0,F)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(J.Keyboard,0,F)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const k=this._inputs[J.Keyboard][0];for(let M=0;M<k.length;M++)if(0!==k[M]){k[M]=0;const F=h.CreateDeviceEvent(J.Keyboard,0,M,0,this,this._elementToAttachTo);this._onInputChanged(J.Keyboard,0,F)}this._usingMacOS&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,y.i)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let l=0;l<this._maxTouchPoints;l++)this._activeTouchIds[l]=-1;this._pointerMoveEvent=k=>{const M=this._getPointerType(k);let F=M===J.Mouse?0:this._activeTouchIds.indexOf(k.pointerId);if(M===J.Touch&&-1===F){const t=this._activeTouchIds.indexOf(-1);if(!(t>=0))return void l.f.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);F=t,this._activeTouchIds[t]=k.pointerId,this._onDeviceConnected(M,F)}this._inputs[M]||(this._inputs[M]={}),this._inputs[M][F]||this._addPointerDevice(M,F,k.clientX,k.clientY);const t=this._inputs[M][F];if(t){const l=k;l.inputIndex=n.Move,t[n.Horizontal]=k.clientX,t[n.Vertical]=k.clientY,M===J.Touch&&0===t[n.LeftClick]&&(t[n.LeftClick]=1),void 0===k.pointerId&&(k.pointerId=this._mouseId),this._onInputChanged(M,F,l),this._usingSafari||-1===k.button||(l.inputIndex=k.button+2,t[k.button+2]=t[k.button+2]?0:1,this._onInputChanged(M,F,l))}},this._pointerDownEvent=k=>{const M=this._getPointerType(k);let F=M===J.Mouse?0:k.pointerId;if(M===J.Touch){let M=this._activeTouchIds.indexOf(k.pointerId);if(-1===M&&(M=this._activeTouchIds.indexOf(-1)),!(M>=0))return void l.f.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);F=M,this._activeTouchIds[M]=k.pointerId}this._inputs[M]||(this._inputs[M]={}),this._inputs[M][F]?M===J.Touch&&this._onDeviceConnected(M,F):this._addPointerDevice(M,F,k.clientX,k.clientY);const t=this._inputs[M][F];if(t){const l=t[n.Horizontal],B=t[n.Vertical];if(M===J.Mouse){if(void 0===k.pointerId&&(k.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(g){}}else if(k.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(k.pointerId)}catch(g){}t[n.Horizontal]=k.clientX,t[n.Vertical]=k.clientY,t[k.button+2]=1;const G=k;G.inputIndex=k.button+2,this._onInputChanged(M,F,G),l===k.clientX&&B===k.clientY||(G.inputIndex=n.Move,this._onInputChanged(M,F,G))}},this._pointerUpEvent=k=>{var M;const F=this._getPointerType(k),l=F===J.Mouse?0:this._activeTouchIds.indexOf(k.pointerId);if(F===J.Touch){if(-1===l)return;this._activeTouchIds[l]=-1}const t=null===(M=this._inputs[F])||void 0===M?void 0:M[l];if(t&&0!==t[k.button+2]){var g,B,G,A;const M=t[n.Horizontal],N=t[n.Vertical];t[n.Horizontal]=k.clientX,t[n.Vertical]=k.clientY,t[k.button+2]=0;const d=k;void 0===k.pointerId&&(k.pointerId=this._mouseId),M===k.clientX&&N===k.clientY||(d.inputIndex=n.Move,this._onInputChanged(F,l,d)),d.inputIndex=k.button+2,F===J.Mouse&&this._mouseId>=0&&null!==(g=(B=this._elementToAttachTo).hasPointerCapture)&&void 0!==g&&g.call(B,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):k.pointerId&&null!==(G=(A=this._elementToAttachTo).hasPointerCapture)&&void 0!==G&&G.call(A,k.pointerId)&&this._elementToAttachTo.releasePointerCapture(k.pointerId),this._onInputChanged(F,l,d),F===J.Touch&&this._onDeviceDisconnected(F,l)}},this._pointerCancelEvent=k=>{if("mouse"===k.pointerType){var M,F;const k=this._inputs[J.Mouse][0];this._mouseId>=0&&null!==(M=(F=this._elementToAttachTo).hasPointerCapture)&&void 0!==M&&M.call(F,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let M=n.LeftClick;M<=n.BrowserForward;M++)if(1===k[M]){k[M]=0;const F=h.CreateDeviceEvent(J.Mouse,0,M,0,this,this._elementToAttachTo);this._onInputChanged(J.Mouse,0,F)}}else{var l,t;const M=this._activeTouchIds.indexOf(k.pointerId);if(-1===M)return;null!==(l=(t=this._elementToAttachTo).hasPointerCapture)&&void 0!==l&&l.call(t,k.pointerId)&&this._elementToAttachTo.releasePointerCapture(k.pointerId),this._inputs[J.Touch][M][n.LeftClick]=0;const F=h.CreateDeviceEvent(J.Touch,M,n.LeftClick,0,this,this._elementToAttachTo,k.pointerId);this._onInputChanged(J.Touch,M,F),this._activeTouchIds[M]=-1,this._onDeviceDisconnected(J.Touch,M)}},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let k=!1;const M=function(){};try{const F=Object.defineProperty({},"passive",{get:function(){k=!0}});this._elementToAttachTo.addEventListener("test",M,F),this._elementToAttachTo.removeEventListener("test",M,F)}catch(F){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(J.Mouse)){var k,M;const F=this._inputs[J.Mouse][0];this._mouseId>=0&&null!==(k=(M=this._elementToAttachTo).hasPointerCapture)&&void 0!==k&&k.call(M,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let k=n.LeftClick;k<=n.BrowserForward;k++)if(1===F[k]){F[k]=0;const M=h.CreateDeviceEvent(J.Mouse,0,k,0,this,this._elementToAttachTo);this._onInputChanged(J.Mouse,0,M)}}if(this.isDeviceAvailable(J.Touch)){const k=this._inputs[J.Touch];for(let M=0;M<this._activeTouchIds.length;M++){var F,l,t;const g=this._activeTouchIds[M];if(null!==(F=(l=this._elementToAttachTo).hasPointerCapture)&&void 0!==F&&F.call(l,g)&&this._elementToAttachTo.releasePointerCapture(g),-1!==g&&1===(null===(t=k[M])||void 0===t?void 0:t[n.LeftClick])){k[M][n.LeftClick]=0;const F=h.CreateDeviceEvent(J.Touch,M,n.LeftClick,0,this,this._elementToAttachTo,g);this._onInputChanged(J.Touch,M,F),this._activeTouchIds[M]=-1,this._onDeviceDisconnected(J.Touch,M)}}}},this._pointerWheelEvent=k=>{const M=J.Mouse;this._inputs[M]||(this._inputs[M]=[]),this._inputs[M][0]||(this._pointerActive=!0,this._registerDevice(M,0,x));const F=this._inputs[M][0];if(F){F[n.MouseWheelX]=k.deltaX||0,F[n.MouseWheelY]=k.deltaY||k.wheelDelta||0,F[n.MouseWheelZ]=k.deltaZ||0;const l=k;void 0===k.pointerId&&(k.pointerId=this._mouseId),0!==F[n.MouseWheelX]&&(l.inputIndex=n.MouseWheelX,this._onInputChanged(M,0,l)),0!==F[n.MouseWheelY]&&(l.inputIndex=n.MouseWheelY,this._onInputChanged(M,0,l)),0!==F[n.MouseWheelZ]&&(l.inputIndex=n.MouseWheelZ,this._onInputChanged(M,0,l))}},this._usingMacOS&&this._isUsingChromium&&(this._pointerMacOSChromeOutEvent=k=>{k.buttons>1&&this._pointerCancelEvent(k)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!k&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(J.Mouse)){const k=this._inputs[J.Mouse][0];k[n.MouseWheelX]=0,k[n.MouseWheelY]=0,k[n.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=k=>{this._addGamePad(k.gamepad)},this._gamepadDisconnectedEvent=k=>{if(this._gamepads){const M=this._getGamepadDeviceType(k.gamepad.id),F=k.gamepad.index;this._unregisterDevice(M,F),delete this._gamepads[F]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(k,M,F){const l=navigator.getGamepads()[M];if(l&&k===this._gamepads[M]){const t=this._inputs[k][M];F>=l.buttons.length?t[F]=l.axes[F-l.buttons.length].valueOf():t[F]=l.buttons[F].value}}_getGamepadDeviceType(k){return-1!==k.indexOf("054c")?-1!==k.indexOf("0ce6")?J.DualSense:J.DualShock:-1!==k.indexOf("Xbox One")||-1!==k.search("Xbox 360")||-1!==k.search("xinput")?J.Xbox:-1!==k.indexOf("057e")?J.Switch:J.Generic}_getPointerType(k){let M=J.Mouse;return("touch"===k.pointerType||"pen"===k.pointerType||k.touches)&&(M=J.Touch),M}}class K{constructor(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=M,this.deviceSlot=F,this.onInputChangedObservable=new g.c,this._deviceInputSystem=k}getInput(k){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,k)}}class f{constructor(k){this._registeredManagers=new Array,this._refCount=0,this.registerManager=k=>{for(let M=0;M<this._devices.length;M++){const F=this._devices[M];for(const l in F){const F=+l;k._addDevice(new K(this._deviceInputSystem,M,F))}}this._registeredManagers.push(k)},this.unregisterManager=k=>{const M=this._registeredManagers.indexOf(k);M>-1&&this._registeredManagers.splice(M,1)};const M=Object.keys(J).length/2;this._devices=new Array(M);const F=(k,M)=>{this._devices[k]||(this._devices[k]=new Array),this._devices[k][M]||(this._devices[k][M]=M);for(const F of this._registeredManagers){const l=new K(this._deviceInputSystem,k,M);F._addDevice(l)}},l=(k,M)=>{var F;null!==(F=this._devices[k])&&void 0!==F&&F[M]&&delete this._devices[k][M];for(const l of this._registeredManagers)l._removeDevice(k,M)},t=(k,M,F)=>{if(F)for(const l of this._registeredManagers)l._onInputChanged(k,M,F)};"undefined"!==typeof _native?this._deviceInputSystem=new e(F,l,t):this._deviceInputSystem=new p(k,F,l,t)}dispose(){this._deviceInputSystem.dispose()}}class W{getDeviceSource(k,M){if(void 0===M){if(void 0===this._firstDevice[k])return null;M=this._firstDevice[k]}return this._devices[k]&&void 0!==this._devices[k][M]?this._devices[k][M]:null}getDeviceSources(k){return this._devices[k]?this._devices[k].filter((k=>!!k)):[]}constructor(k){const M=Object.keys(J).length/2;this._devices=new Array(M),this._firstDevice=new Array(M),this._engine=k,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new f(k)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new g.c((k=>{for(const M of this._devices)if(M)for(const F of M)F&&this.onDeviceConnectedObservable.notifyObserver(k,F)})),this.onDeviceDisconnectedObservable=new g.c,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=k.kk.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.kk.remove(this._onDisposeObserver)}_addDevice(k){this._devices[k.deviceType]||(this._devices[k.deviceType]=new Array),this._devices[k.deviceType][k.deviceSlot]||(this._devices[k.deviceType][k.deviceSlot]=k,this._updateFirstDevices(k.deviceType)),this.onDeviceConnectedObservable.notifyObservers(k)}_removeDevice(k,M){var F,l;const t=null===(F=this._devices[k])||void 0===F?void 0:F[M];this.onDeviceDisconnectedObservable.notifyObservers(t),null!==(l=this._devices[k])&&void 0!==l&&l[M]&&delete this._devices[k][M],this._updateFirstDevices(k)}_onInputChanged(k,M,F){var l,t;null===(l=this._devices[k])||void 0===l||null===(t=l[M])||void 0===t||t.onInputChangedObservable.notifyObservers(F)}_updateFirstDevices(k){switch(k){case J.Keyboard:case J.Mouse:this._firstDevice[k]=0;break;case J.Touch:case J.DualSense:case J.DualShock:case J.Xbox:case J.Switch:case J.Generic:{delete this._firstDevice[k];const M=this._devices[k];if(M)for(let F=0;F<M.length;F++)if(M[F]){this._firstDevice[k]=F;break}break}}}}var X=F(2463);class V{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(k){this._singleClick=k}set doubleClick(k){this._doubleClick=k}set hasSwiped(k){this._hasSwiped=k}set ignore(k){this._ignore=k}}class z{constructor(k){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new N.k(0,0),this._previousStartingPointerPosition=new N.k(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=k||m.e.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(k){return this._meshUnderPointerId[k]||null}get unTranslatedPointer(){return new N.k(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(k){this._pointerX=k}get pointerY(){return this._pointerY}set pointerY(k){this._pointerY=k}_updatePointerPosition(k){const M=this._scene.getEngine().getInputElementClientRect();M&&(this._pointerX=k.clientX-M.left,this._pointerY=k.clientY-M.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(k,M){const F=this._scene,l=F.getEngine(),t=l.getInputElement();t&&(t.tabIndex=l.canvasTabIndex,F.doNotHandleCursors||(t.style.cursor=F.defaultCursor)),this._setCursorAndPointerOverMesh(k,M,F);for(const A of F._pointerMoveStage){var g;const F=!(null===(g=k=k||this._pickMove(M))||void 0===g||!g.pickedMesh);k=A.action(this._unTranslatedPointerX,this._unTranslatedPointerY,k,F,t)}const B=M.inputIndex>=n.MouseWheelX&&M.inputIndex<=n.MouseWheelZ?Q.d.POINTERWHEEL:Q.d.POINTERMOVE;let G;F.onPointerMove&&(k=k||this._pickMove(M),F.onPointerMove(M,k,B)),k?(G=new Q.h(B,M,k),this._setRayOnPointerInfo(k,M)):(G=new Q.h(B,M,null,this),this._movePointerInfo=G),F.onPointerObservable.hasObservers()&&F.onPointerObservable.notifyObservers(G,B)}_setRayOnPointerInfo(k,M){const F=this._scene;k&&X.c._IsPickingAvailable&&(k.ray||(k.ray=F.createPickingRay(M.offsetX,M.offsetY,N.c.Identity(),F.activeCamera)))}_addCameraPointerObserver(k,M){return this._cameraObserverCount++,this._scene.onPointerObservable.add(k,M)}_removeCameraPointerObserver(k){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(k)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(k,M,F){const l=this._scene,t=new Q.e(F,M,this._unTranslatedPointerX,this._unTranslatedPointerY);return k&&(t.originalPickingInfo=k,t.ray=k.ray,"xr-near"===M.pointerType&&k.originMesh&&(t.nearInteractionPickingInfo=k)),l.onPrePointerObservable.notifyObservers(t,F),!!t.skipOnPointerObservable}_pickMove(k){const M=this._scene,F=M.ee(this._unTranslatedPointerX,this._unTranslatedPointerY,M.pointerMovePredicate,M.pointerMoveFastCheck,M.cameraToUseForPointers,M.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(F,k,M),F}_setCursorAndPointerOverMesh(k,M,F){const l=F.getEngine().getInputElement();if(null!==k&&void 0!==k&&k.pickedMesh){if(this.setPointerOverMesh(k.pickedMesh,M.pointerId,k,M),!F.doNotHandleCursors&&l&&this._pointerOverMesh){const k=this._pointerOverMesh._getActionManagerForTrigger();k&&k.hasPointerTriggers&&(l.style.cursor=k.hoverCursor||F.hoverCursor)}}else this.setPointerOverMesh(null,M.pointerId,k,M)}simulatePointerMove(k,M){const F=new PointerEvent("pointermove",M);F.inputIndex=n.Move,this._checkPrePointerObservable(k,F,Q.d.POINTERMOVE)||this._processPointerMove(k,F)}simulatePointerDown(k,M){const F=new PointerEvent("pointerdown",M);F.inputIndex=F.button+2,this._checkPrePointerObservable(k,F,Q.d.POINTERDOWN)||this._processPointerDown(k,F)}_processPointerDown(k,M){var F;const l=this._scene;if(null!==(F=k)&&void 0!==F&&F.pickedMesh){this._pickedDownMesh=k.pickedMesh;const F=k.pickedMesh._getActionManagerForTrigger();if(F){if(F.hasPickTriggers)switch(F.processTrigger(5,O.CreateNew(k.pickedMesh,M,k)),M.button){case 0:F.processTrigger(2,O.CreateNew(k.pickedMesh,M,k));break;case 1:F.processTrigger(4,O.CreateNew(k.pickedMesh,M,k));break;case 2:F.processTrigger(3,O.CreateNew(k.pickedMesh,M,k))}F.hasSpecificTrigger(8)&&window.setTimeout((()=>{const k=l.ee(this._unTranslatedPointerX,this._unTranslatedPointerY,(k=>k.Ef&&k.isVisible&&k.isReady()&&k.actionManager&&k.actionManager.hasSpecificTrigger(8)&&k===this._pickedDownMesh),!1,l.cameraToUseForPointers);null!==k&&void 0!==k&&k.pickedMesh&&F&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>z.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,F.processTrigger(8,O.CreateNew(k.pickedMesh,M)))}),z.LongPressDelay)}}else for(const B of l._pointerDownStage)k=B.action(this._unTranslatedPointerX,this._unTranslatedPointerY,k,M,!1);let t;const g=Q.d.POINTERDOWN;k?(l.onPointerDown&&l.onPointerDown(M,k,g),t=new Q.h(g,M,k),this._setRayOnPointerInfo(k,M)):t=new Q.h(g,M,null,this),l.onPointerObservable.hasObservers()&&l.onPointerObservable.notifyObservers(t,g)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(k,M,F){const l=new PointerEvent("pointerup",M);l.inputIndex=n.Move;const t=new V;F?t.doubleClick=!0:t.singleClick=!0,this._checkPrePointerObservable(k,l,Q.d.POINTERUP)||this._processPointerUp(k,l,t)}_processPointerUp(k,M,F){var l;const t=this._scene;if(null!==(l=k)&&void 0!==l&&l.pickedMesh){if(this._pickedUpMesh=k.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(t.onPointerPick&&t.onPointerPick(M,k),F.singleClick&&!F.ignore&&t.onPointerObservable.observers.length>this._cameraObserverCount)){const F=Q.d.POINTERPICK,l=new Q.h(F,M,k);this._setRayOnPointerInfo(k,M),t.onPointerObservable.notifyObservers(l,F)}const l=k.pickedMesh._getActionManagerForTrigger();if(l&&!F.ignore){l.processTrigger(7,O.CreateNew(k.pickedMesh,M,k)),!F.hasSwiped&&F.singleClick&&l.processTrigger(1,O.CreateNew(k.pickedMesh,M,k));const t=k.pickedMesh._getActionManagerForTrigger(6);F.doubleClick&&t&&t.processTrigger(6,O.CreateNew(k.pickedMesh,M,k))}}else if(!F.ignore)for(const g of t._pointerUpStage)k=g.action(this._unTranslatedPointerX,this._unTranslatedPointerY,k,M,F.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const k=this._pickedDownMesh._getActionManagerForTrigger(16);k&&k.processTrigger(16,O.CreateNew(this._pickedDownMesh,M))}if(!F.ignore){const l=new Q.h(Q.d.POINTERUP,M,k);if(this._setRayOnPointerInfo(k,M),t.onPointerObservable.notifyObservers(l,Q.d.POINTERUP),t.onPointerUp&&t.onPointerUp(M,k,Q.d.POINTERUP),!F.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let l=0;if(F.singleClick?l=Q.d.POINTERTAP:F.doubleClick&&(l=Q.d.POINTERDOUBLETAP),l){const F=new Q.h(l,M,k);t.onPointerObservable.hasObservers()&&t.onPointerObservable.hasSpecificMask(l)&&t.onPointerObservable.notifyObservers(F,l)}}}}isPointerCaptured(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[k]}attachControl(){let k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const t=this._scene,g=t.getEngine();l||(l=g.getInputElement()),this._alreadyAttached&&this.ak(),l&&(this._alreadyAttachedTo=l),this._deviceSourceManager=new W(g),this._initActionManager=k=>{if(!this._meshPickProceed){const M=t.skipPointerUpPicking||0===t._registeredActions&&!this._checkForPicking()&&!t.onPointerUp?null:t.ee(this._unTranslatedPointerX,this._unTranslatedPointerY,t.pointerUpPredicate,t.pointerUpFastCheck,t.cameraToUseForPointers,t.pointerUpTrianglePredicate);this._currentPickResult=M,M&&(k=M.hit&&M.pickedMesh?M.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return k},this._delayedSimpleClick=(k,M,F)=>{if((Date.now()-this._previousStartingPointerTime>z.DoubleClickDelay&&!this._doubleClickOccured||k!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,M.singleClick=!0,M.ignore=!1,this._delayedClicks[k])){const M=this._delayedClicks[k].evt,F=Q.d.POINTERTAP,l=new Q.h(F,M,this._currentPickResult);t.onPointerObservable.hasObservers()&&t.onPointerObservable.hasSpecificMask(F)&&t.onPointerObservable.notifyObservers(l,F),this._delayedClicks[k]=null}},this._initClickEvent=(k,M,F,l)=>{const t=new V;this._currentPickResult=null;let g=null,B=k.hasSpecificMask(Q.d.POINTERPICK)||M.hasSpecificMask(Q.d.POINTERPICK)||k.hasSpecificMask(Q.d.POINTERTAP)||M.hasSpecificMask(Q.d.POINTERTAP)||k.hasSpecificMask(Q.d.POINTERDOUBLETAP)||M.hasSpecificMask(Q.d.POINTERDOUBLETAP);!B&&v&&(g=this._initActionManager(g,t),g&&(B=g.hasPickTriggers));let G=!1;if(B){const B=F.button;if(t.hasSwiped=this._isPointerSwiping(),!t.hasSwiped){let d=!z.ExclusiveDoubleClickMode;if(d||(d=!k.hasSpecificMask(Q.d.POINTERDOUBLETAP)&&!M.hasSpecificMask(Q.d.POINTERDOUBLETAP),d&&!v.HasSpecificTrigger(6)&&(g=this._initActionManager(g,t),g&&(d=!g.hasSpecificTrigger(6)))),d)(Date.now()-this._previousStartingPointerTime>z.DoubleClickDelay||B!==this._previousButtonPressed)&&(t.singleClick=!0,l(t,this._currentPickResult),G=!0);else{const k={evt:F,clickInfo:t,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,B,t,l),z.DoubleClickDelay)};this._delayedClicks[B]=k}let L=k.hasSpecificMask(Q.d.POINTERDOUBLETAP)||M.hasSpecificMask(Q.d.POINTERDOUBLETAP);if(!L&&v.HasSpecificTrigger(6)&&(g=this._initActionManager(g,t),g&&(L=g.hasSpecificTrigger(6))),L)if(B===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<z.DoubleClickDelay&&!this._doubleClickOccured){if(t.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=B,z.ExclusiveDoubleClickMode){var A;if(this._delayedClicks[B])clearTimeout(null===(A=this._delayedClicks[B])||void 0===A?void 0:A.timeoutId),this._delayedClicks[B]=null;l(t,this._previousPickResult)}else l(t,this._currentPickResult);else{var N;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,t.doubleClick=!0,t.ignore=!1,z.ExclusiveDoubleClickMode&&this._delayedClicks[B])clearTimeout(null===(N=this._delayedClicks[B])||void 0===N?void 0:N.timeoutId),this._delayedClicks[B]=null;l(t,this._currentPickResult)}G=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=B}}G||l(t,this._currentPickResult)},this._onPointerMove=k=>{if(this._updatePointerPosition(k),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>z.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>z.DragMovementThreshold),g.isPointerLock&&g._verifyPointerLock(),this._checkPrePointerObservable(null,k,k.inputIndex>=n.MouseWheelX&&k.inputIndex<=n.MouseWheelZ?Q.d.POINTERWHEEL:Q.d.POINTERMOVE))return;if(!t.cameraToUseForPointers&&!t.activeCamera)return;if(t.Nl)return void this._processPointerMove(new U.c,k);t.pointerMovePredicate||(t.pointerMovePredicate=k=>k.Ef&&k.isVisible&&k.isReady()&&k.isEnabled()&&(k.enablePointerMoveEvents||t.constantlyUpdateMeshUnderPointer||null!==k._getActionManagerForTrigger())&&(!t.cameraToUseForPointers||0!==(t.cameraToUseForPointers.layerMask&k.layerMask)));const M=t._registeredActions>0||t.constantlyUpdateMeshUnderPointer?this._pickMove(k):null;this._processPointerMove(M,k)},this._onPointerDown=k=>{const M=this._activePointerIds.indexOf(-1);if(-1===M?this._activePointerIds.push(k.pointerId):this._activePointerIds[M]=k.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,z.ExclusiveDoubleClickMode)for(let l=0;l<this._delayedClicks.length;l++)if(this._delayedClicks[l])if(k.button===l){var F;clearTimeout(null===(F=this._delayedClicks[l])||void 0===F?void 0:F.timeoutId)}else{const k=this._delayedClicks[l].clickInfo;this._doubleClickOccured=!1,k.singleClick=!0,k.ignore=!1;const M=this._delayedClicks[l].evt,F=Q.d.POINTERTAP,g=new Q.h(F,M,this._currentPickResult);t.onPointerObservable.hasObservers()&&t.onPointerObservable.hasSpecificMask(F)&&t.onPointerObservable.notifyObservers(g,F),this._delayedClicks[l]=null}if(this._updatePointerPosition(k),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=k.button),t.preventDefaultOnPointerDown&&l&&(k.preventDefault(),l.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,k,Q.d.POINTERDOWN))return;if(!t.cameraToUseForPointers&&!t.activeCamera)return;let g;this._pointerCaptures[k.pointerId]=!0,t.pointerDownPredicate||(t.pointerDownPredicate=k=>k.Ef&&k.isVisible&&k.isReady()&&k.isEnabled()&&(!t.cameraToUseForPointers||0!==(t.cameraToUseForPointers.layerMask&k.layerMask))),this._pickedDownMesh=null,g=t.skipPointerDownPicking||0===t._registeredActions&&!this._checkForPicking()&&!t.onPointerDown?new U.c:t.ee(this._unTranslatedPointerX,this._unTranslatedPointerY,t.pointerDownPredicate,t.pointerDownFastCheck,t.cameraToUseForPointers,t.pointerDownTrianglePredicate),this._processPointerDown(g,k)},this._onPointerUp=k=>{const M=this._activePointerIds.indexOf(k.pointerId);-1!==M&&(this._activePointerIds[M]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(k),t.preventDefaultOnPointerUp&&l&&(k.preventDefault(),l.focus()),this._initClickEvent(t.onPrePointerObservable,t.onPointerObservable,k,((M,F)=>{if(t.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!M.ignore)){if(this._checkPrePointerObservable(null,k,Q.d.POINTERUP))return this._swipeButtonPressed===k.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===k.buttons&&(this._pointerCaptures[k.pointerId]=!1));M.hasSwiped||(M.singleClick&&t.onPrePointerObservable.hasSpecificMask(Q.d.POINTERTAP)&&this._checkPrePointerObservable(null,k,Q.d.POINTERTAP)&&(this._skipPointerTap=!0),M.doubleClick&&t.onPrePointerObservable.hasSpecificMask(Q.d.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,k,Q.d.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[k.pointerId]?(0===k.buttons&&(this._pointerCaptures[k.pointerId]=!1),(t.cameraToUseForPointers||t.activeCamera)&&(t.pointerUpPredicate||(t.pointerUpPredicate=k=>k.Ef&&k.isVisible&&k.isReady()&&k.isEnabled()&&(!t.cameraToUseForPointers||0!==(t.cameraToUseForPointers.layerMask&k.layerMask))),!this._meshPickProceed&&(v&&v.HasTriggers||this._checkForPicking()||t.onPointerUp)&&this._initActionManager(null,M),F||(F=this._currentPickResult),this._processPointerUp(F,k,M),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===k.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===k.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=k=>{const M=c.c.KEYDOWN;if(t.onPreKeyboardObservable.hasObservers()){const F=new c.d(M,k);if(t.onPreKeyboardObservable.notifyObservers(F,M),F.skipOnKeyboardObservable)return}if(t.onKeyboardObservable.hasObservers()){const F=new c.g(M,k);t.onKeyboardObservable.notifyObservers(F,M)}t.actionManager&&t.actionManager.processTrigger(14,O.CreateNewFromScene(t,k))},this._onKeyUp=k=>{const M=c.c.KEYUP;if(t.onPreKeyboardObservable.hasObservers()){const F=new c.d(M,k);if(t.onPreKeyboardObservable.notifyObservers(F,M),F.skipOnKeyboardObservable)return}if(t.onKeyboardObservable.hasObservers()){const F=new c.g(M,k);t.onKeyboardObservable.notifyObservers(F,M)}t.actionManager&&t.actionManager.processTrigger(15,O.CreateNewFromScene(t,k))},this._deviceSourceManager.onDeviceConnectedObservable.add((l=>{l.deviceType===J.Mouse?l.onInputChangedObservable.add((t=>{this._originMouseEvent=t,t.inputIndex===n.LeftClick||t.inputIndex===n.MiddleClick||t.inputIndex===n.RightClick||t.inputIndex===n.BrowserBack||t.inputIndex===n.BrowserForward?M&&1===l.getInput(t.inputIndex)?this._onPointerDown(t):k&&0===l.getInput(t.inputIndex)&&this._onPointerUp(t):F&&(t.inputIndex===n.Move?this._onPointerMove(t):t.inputIndex!==n.MouseWheelX&&t.inputIndex!==n.MouseWheelY&&t.inputIndex!==n.MouseWheelZ||this._onPointerMove(t))})):l.deviceType===J.Touch?l.onInputChangedObservable.add((t=>{t.inputIndex===n.LeftClick&&(M&&1===l.getInput(t.inputIndex)?(this._onPointerDown(t),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):k&&0===l.getInput(t.inputIndex)&&(this._onPointerUp(t),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),F&&t.inputIndex===n.Move&&this._onPointerMove(t)})):l.deviceType===J.Keyboard&&l.onInputChangedObservable.add((k=>{"keydown"===k.type?this._onKeyDown(k):"keyup"===k.type&&this._onKeyUp(k)}))})),this._alreadyAttached=!0}ak(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,F=arguments.length>2?arguments[2]:void 0,l=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[M]===k&&(!k||!k._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const t=this._meshUnderPointerId[M];let g;t&&(g=t._getActionManagerForTrigger(10),g&&g.processTrigger(10,O.CreateNew(t,l,{pointerId:M}))),k?(this._meshUnderPointerId[M]=k,this._pointerOverMesh=k,g=k._getActionManagerForTrigger(9),g&&g.processTrigger(9,O.CreateNew(k,l,{pointerId:M,pickResult:F}))):(delete this._meshUnderPointerId[M],this._pointerOverMesh=null)}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(k){this._pointerOverMesh===k&&(this._pointerOverMesh=null),this._pickedDownMesh===k&&(this._pickedDownMesh=null),this._pickedUpMesh===k&&(this._pickedUpMesh=null);for(const M in this._meshUnderPointerId)this._meshUnderPointerId[M]===k&&delete this._meshUnderPointerId[M]}}z.DragMovementThreshold=10,z.LongPressDelay=500,z.DoubleClickDelay=300,z.ExclusiveDoubleClickMode=!1;var E=F(2466),u=F(720),T=F(726),P=F(2474),q=F(522),I=F(848),C=F(694);class D{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Nl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var i,H=F(487),b=F(613);!function(k){k[k.BackwardCompatible=0]="BackwardCompatible",k[k.Intermediate=1]="Intermediate",k[k.Aggressive=2]="Aggressive"}(i||(i={}));class kk{static DefaultMaterialFactory(k){throw(0,o.c)("cb")}static CollisionCoordinatorFactory(){throw(0,o.c)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(k){k!==this._clearColor&&(this._clearColor=k,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(k){if(k!==this._performancePriority){switch(this._performancePriority=k,k){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!1,this.Gl=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!0,this.Gl=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Nl=!0,this.Gl=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(k)}}set forceWireframe(k){this._forceWireframe!==k&&(this._forceWireframe=k,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(k){this._skipFrustumClipping!==k&&(this._skipFrustumClipping=k)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(k){this._forcePointsCloud!==k&&(this._forcePointsCloud=k,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(k){this._environmentTexture!==k&&(this._environmentTexture=k,this.markAllMaterialsAsDirty(1))}getNodes(){let k=[];return k=k.concat(this.meshes),k=k.concat(this.lights),k=k.concat(this.cameras),k=k.concat(this.transformNodes),this.skeletons.forEach((M=>k=k.concat(M.bones))),k}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(k){this._animationPropertiesOverride=k}set onDispose(k){this._onDisposeObserver&&this.kk.remove(this._onDisposeObserver),this._onDisposeObserver=this.kk.add(k)}set beforeRender(k){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),k&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(k))}set afterRender(k){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),k&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(k))}set beforeCameraRender(k){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(k)}set afterCameraRender(k){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(k)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(k){this._pointerPickingConfiguration.pointerDownPredicate=k}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(k){this._pointerPickingConfiguration.pointerUpPredicate=k}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(k){this._pointerPickingConfiguration.pointerMovePredicate=k}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(k){this._pointerPickingConfiguration.pointerDownFastCheck=k}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(k){this._pointerPickingConfiguration.pointerUpFastCheck=k}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(k){this._pointerPickingConfiguration.pointerMoveFastCheck=k}get Nl(){return this._pointerPickingConfiguration.Nl}set Nl(k){this._pointerPickingConfiguration.Nl=k}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(k){this._pointerPickingConfiguration.skipPointerDownPicking=k}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(k){this._pointerPickingConfiguration.skipPointerUpPicking=k}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return z.DragMovementThreshold}static set DragMovementThreshold(k){z.DragMovementThreshold=k}static get LongPressDelay(){return z.LongPressDelay}static set LongPressDelay(k){z.LongPressDelay=k}static get DoubleClickDelay(){return z.DoubleClickDelay}static set DoubleClickDelay(k){z.DoubleClickDelay=k}static get ExclusiveDoubleClickMode(){return z.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(k){z.ExclusiveDoubleClickMode=k}bindEyePosition(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:this.activeCamera.globalPosition,t=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return N.i.Vector4[0].set(l.x,l.y,l.z,t?-1:1),k&&(F?k.setFloat3(M,N.i.Vector4[0].x,N.i.Vector4[0].y,N.i.Vector4[0].z):k.setVector4(M,N.i.Vector4[0])),N.i.Vector4[0]}finalizeSceneUbo(){const k=this.getSceneUniformBuffer(),M=this.bindEyePosition(null);return k.updateFloat4("vEyePosition",M.x,M.y,M.z,M.w),k.update(),k}set useRightHandedSystem(k){this._useRightHandedSystem!==k&&(this._useRightHandedSystem=k,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(k){this._currentStepId=k}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(k){this._fogEnabled!==k&&(this._fogEnabled=k,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(k){this._fogMode!==k&&(this._fogMode=k,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(k){this._shadowsEnabled!==k&&(this._shadowsEnabled=k,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(k){this._lightsEnabled!==k&&(this._lightsEnabled=k,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(k){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),k&&(this._unObserveActiveCameras=(0,C.k)(k,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=k}get activeCamera(){return this._activeCamera}set activeCamera(k){k!==this._activeCamera&&(this._activeCamera=k,this.onActiveCameraChanged.notifyObservers(this))}get defaultMaterial(){return this.pl||(this.pl=kk.DefaultMaterialFactory(this)),this.pl}set defaultMaterial(k){this.pl=k}set texturesEnabled(k){this._texturesEnabled!==k&&(this._texturesEnabled=k,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(k){if(this._frameGraph)return this._frameGraph=k,void(k||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=k,k&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph)}set skeletonsEnabled(k){this._skeletonsEnabled!==k&&(this._skeletonsEnabled=k,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=kk.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const k of this._transientComponents)k.register();this._transientComponents.length=0}}bb(k){this._components.push(k),this._transientComponents.push(k);const M=k;M.addFromContainer&&M.serialize&&this._serializableComponents.push(M)}_getComponent(k){for(const M of this._components)if(M.name===k)return M;return null}constructor(k,M){this._inputManager=new z(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.Gl=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new u.g(.2,.2,.3,1),this.onClearColorChangedObservable=new g.c,this.ambientColor=new u.c(0,0,0),this.environmentIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new g.c,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.Ck=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.qm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.kk=new g.c,this._onDisposeObserver=null,this.onBeforeRenderObservable=new g.c,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new g.c,this.onAfterRenderCameraObservable=new g.c,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new g.c,this.onAfterAnimationsObservable=new g.c,this.onBeforeDrawPhaseObservable=new g.c,this.onAfterDrawPhaseObservable=new g.c,this.onReadyObservable=new g.c,this.onBeforeCameraRenderObservable=new g.c,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new g.c,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new g.c,this.onAfterActiveMeshesEvaluationObservable=new g.c,this.onBeforeParticlesRenderingObservable=new g.c,this.onAfterParticlesRenderingObservable=new g.c,this.onDataLoadedObservable=new g.c,this.onNewCameraAddedObservable=new g.c,this.onCameraRemovedObservable=new g.c,this.onNewLightAddedObservable=new g.c,this.onLightRemovedObservable=new g.c,this.onNewGeometryAddedObservable=new g.c,this.onGeometryRemovedObservable=new g.c,this.onNewTransformNodeAddedObservable=new g.c,this.onTransformNodeRemovedObservable=new g.c,this.onNewMeshAddedObservable=new g.c,this.onMeshRemovedObservable=new g.c,this.onNewSkeletonAddedObservable=new g.c,this.onSkeletonRemovedObservable=new g.c,this.onNewMaterialAddedObservable=new g.c,this.onNewMultiMaterialAddedObservable=new g.c,this.onMaterialRemovedObservable=new g.c,this.onMultiMaterialRemovedObservable=new g.c,this.onNewTextureAddedObservable=new g.c,this.onTextureRemovedObservable=new g.c,this.onBeforeRenderTargetsRenderObservable=new g.c,this.onAfterRenderTargetsRenderObservable=new g.c,this.onBeforeStepObservable=new g.c,this.onAfterStepObservable=new g.c,this.onActiveCameraChanged=new g.c,this.onActiveCamerasChanged=new g.c,this.onBeforeRenderingGroupObservable=new g.c,this.onAfterRenderingGroupObservable=new g.c,this.onMeshImportedObservable=new g.c,this.onAnimationFileImportedObservable=new g.c,this._registeredForLateAnimationBindings=new B.b(256),this._pointerPickingConfiguration=new D,this.onPrePointerObservable=new g.c,this.onPointerObservable=new g.c,this.onPreKeyboardObservable=new g.c,this.onKeyboardObservable=new g.c,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=kk.FOGMODE_NONE,this.fogColor=new u.c(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new N.m(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new B.b(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new E.c,this._activeIndices=new E.c,this._activeParticles=new E.c,this._activeBones=new E.c,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=new Array,this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new B.c(256),this._processedMaterials=new B.c(256),this._renderTargets=new B.b(256),this._materialsRenderTargets=new B.b(256),this._activeParticleSystems=new B.c(256),this._activeSkeletons=new B.b(32),this._softwareSkinnedMeshes=new B.b(32),this._activeAnimatables=new Array,this._transformMatrix=N.c.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=R.f.Create(),this._beforeClearStage=R.f.Create(),this._beforeRenderTargetClearStage=R.f.Create(),this._gatherRenderTargetsStage=R.f.Create(),this._gatherActiveCameraRenderTargetsStage=R.f.Create(),this._isReadyForMeshStage=R.f.Create(),this._beforeEvaluateActiveMeshStage=R.f.Create(),this._evaluateSubMeshStage=R.f.Create(),this._preActiveMeshStage=R.f.Create(),this._cameraDrawRenderTargetStage=R.f.Create(),this._beforeCameraDrawStage=R.f.Create(),this._beforeRenderTargetDrawStage=R.f.Create(),this._beforeRenderingGroupDrawStage=R.f.Create(),this._beforeRenderingMeshStage=R.f.Create(),this._afterRenderingMeshStage=R.f.Create(),this._afterRenderingGroupDrawStage=R.f.Create(),this._afterCameraDrawStage=R.f.Create(),this._afterCameraPostProcessStage=R.f.Create(),this._afterRenderTargetDrawStage=R.f.Create(),this._afterRenderTargetPostProcessStage=R.f.Create(),this._afterRenderStage=R.f.Create(),this._pointerMoveStage=R.f.Create(),this._pointerDownStage=R.f.Create(),this._pointerUpStage=R.f.Create(),this._geometriesByUniqueId=null,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[];const F={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...M};k=this._engine=k||m.e.LastCreatedEngine,F.virtual?k._virtualScenes.push(this):(m.e._LastCreatedScene=this,k.scenes.push(this)),this._uid=null,this._renderingManager=new Z.c(this),w.d&&(this.postProcessManager=new w.d(this)),(0,y.j)()&&this.attachControl(),this._createUbo(),d.e&&(this._imageProcessingConfiguration=new d.e),this.setDefaultCandidateProviders(),F.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=F.useMaterialMeshMap,this.useClonedMeshMap=F.useClonedMeshMap,M&&M.virtual||k.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(k){return this._defaultSubMeshCandidates.data=k.rk,this._defaultSubMeshCandidates.length=k.rk.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=k=>this._getDefaultSubMeshCandidates(k),this.getIntersectingSubMeshCandidates=(k,M)=>this._getDefaultSubMeshCandidates(k),this.getCollidingSubMeshCandidates=(k,M)=>this._getDefaultSubMeshCandidates(k)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(k){this._inputManager.pointerX=k}get pointerY(){return this._inputManager.pointerY}set pointerY(k){this._inputManager.pointerY=k}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(k,M){let F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==M||this._cachedMaterial!==k||this._cachedVisibility!==F}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(k,M){return this._inputManager.simulatePointerMove(k,M),this}simulatePointerDown(k,M){return this._inputManager.simulatePointerDown(k,M),this}simulatePointerUp(k,M,F){return this._inputManager.simulatePointerUp(k,M,F),this}isPointerCaptured(){let k=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(k)}attachControl(){let k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(k,M,F)}ak(){this._inputManager.ak()}isReady(){var k,M;let F,l=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const t=this.getEngine(),g=t.currentRenderPassId;t.currentRenderPassId=(null===(k=this.activeCamera)||void 0===k?void 0:k.renderPassId)??g;let B=!0;for(this._pendingData.length>0&&(B=!1),null===(M=this.prePassRenderer)||void 0===M||M.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&B&&(B=this.depthPeelingRenderer.isReady()),l&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),F=0;F<this.meshes.length;F++){const k=this.meshes[F];if(!k.rk||0===k.rk.length)continue;if(!k.isReady(!0)){B=!1;continue}const M=k.hasThinInstances||"InstancedMesh"===k.getClassName()||"InstancedLinesMesh"===k.getClassName()||t.getCaps().instancedArrays&&k.instances.length>0;for(const F of this._isReadyForMeshStage)F.action(k,M)||(B=!1);if(!l)continue;const g=k.material||this.defaultMaterial;if(g)if(g._storeEffectOnSubMeshes)for(const F of k.rk){const k=F.Ha();k&&k.hasRenderTargetTextures&&null!=k.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(k)&&(this._processedMaterials.push(k),this._materialsRenderTargets.concatWithNoDuplicate(k.getRenderTargetTextures()))}else g.hasRenderTargetTextures&&null!=g.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(g)&&(this._processedMaterials.push(g),this._materialsRenderTargets.concatWithNoDuplicate(g.getRenderTargetTextures()))}if(l)for(F=0;F<this._materialsRenderTargets.length;++F){this._materialsRenderTargets.data[F].isReadyForRendering()||(B=!1)}for(F=0;F<this.geometries.length;F++){2===this.geometries[F].delayLoadState&&(B=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const G of this.activeCameras)G.isReady(!0)||(B=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(B=!1));for(const G of this.Ck)G.isReady()||(B=!1);if(this.layers)for(const G of this.layers)G.isReady()||(B=!1);return t.areAllEffectsReady()||(B=!1),t.currentRenderPassId=g,B}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(k){this.onBeforeRenderObservable.add(k)}unregisterBeforeRender(k){this.onBeforeRenderObservable.removeCallback(k)}registerAfterRender(k){this.onAfterRenderObservable.add(k)}unregisterAfterRender(k){this.onAfterRenderObservable.removeCallback(k)}_executeOnceBeforeRender(k){const M=()=>{k(),setTimeout((()=>{this.unregisterBeforeRender(M)}))};this.registerBeforeRender(M)}executeOnceBeforeRender(k,M){void 0!==M?setTimeout((()=>{this._executeOnceBeforeRender(k)}),M):this._executeOnceBeforeRender(k)}addPendingData(k){this._pendingData.push(k)}removePendingData(k){const M=this.isLoading,F=this._pendingData.indexOf(k);-1!==F&&this._pendingData.splice(F,1),M&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(k),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(M)}whenReadyAsync(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise((M=>{this.executeWhenReady((()=>{M()}),k)}))}_checkIsReady(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(k)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(k)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=t.e.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(k,M,F,l){F||l||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===k.updateFlag&&this._projectionUpdateFlag===M.updateFlag||(this._viewUpdateFlag=k.updateFlag,this._projectionUpdateFlag=M.updateFlag,this._viewMatrix=k,this._projectionMatrix=M,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?T.e.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=T.e.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(F,l):this._sceneUbo.useUbo&&(this._sceneUbo.tk("viewProjection",this._transformMatrix),this._sceneUbo.tk("view",this._viewMatrix),this._sceneUbo.tk("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(k){const M=new L.c(this._engine,void 0,!1,k??"xf");return M.addUniform("viewProjection",16),M.addUniform("view",16),M.addUniform("projection",16),M.addUniform("vEyePosition",4),M}setSceneUniformBuffer(k){this._sceneUbo=k,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return P.d.UniqueId}Ak(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._blockEntityCollection||(this.meshes.push(k),k._resyncLightSources(),k.parent||k._addToSceneRootNodes(),this.onNewMeshAddedObservable.notifyObservers(k),M&&k.getChildMeshes().forEach((k=>{this.Ak(k)})))}Bk(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const F=this.meshes.indexOf(k);return-1!==F&&(this.meshes.splice(F,1),k.parent||k._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(k),this.onMeshRemovedObservable.notifyObservers(k),M&&k.getChildMeshes().forEach((k=>{this.Bk(k)})),F}addTransformNode(k){this._blockEntityCollection||k.va()===this&&-1!==k._indexInSceneTransformNodesArray||(k._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(k),k.parent||k._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(k))}removeTransformNode(k){const M=k._indexInSceneTransformNodesArray;if(-1!==M){if(M!==this.transformNodes.length-1){const k=this.transformNodes[this.transformNodes.length-1];this.transformNodes[M]=k,k._indexInSceneTransformNodesArray=M}k._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),k.parent||k._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(k),M}removeSkeleton(k){const M=this.skeletons.indexOf(k);return-1!==M&&(this.skeletons.splice(M,1),this.onSkeletonRemovedObservable.notifyObservers(k),this._executeActiveContainerCleanup(this._activeSkeletons)),M}removeMorphTargetManager(k){const M=this.morphTargetManagers.indexOf(k);return-1!==M&&this.morphTargetManagers.splice(M,1),M}removeLight(k){const M=this.lights.indexOf(k);if(-1!==M){for(const M of this.meshes)M._removeLightSource(k,!1);this.lights.splice(M,1),this.sortLightsByPriority(),k.parent||k._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(k),M}removeCamera(k){const M=this.cameras.indexOf(k);if(-1!==M&&(this.cameras.splice(M,1),k.parent||k._removeFromSceneRootNodes()),this.activeCameras){const M=this.activeCameras.indexOf(k);-1!==M&&this.activeCameras.splice(M,1)}return this.activeCamera===k&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(k),M}removeParticleSystem(k){const M=this.Ck.indexOf(k);return-1!==M&&(this.Ck.splice(M,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),M}removeAnimation(k){const M=this.animations.indexOf(k);return-1!==M&&this.animations.splice(M,1),M}stopAnimation(k,M,F){}removeAnimationGroup(k){const M=this.animationGroups.indexOf(k);return-1!==M&&this.animationGroups.splice(M,1),M}removeMultiMaterial(k){const M=this.multiMaterials.indexOf(k);return-1!==M&&this.multiMaterials.splice(M,1),this.onMultiMaterialRemovedObservable.notifyObservers(k),M}removeMaterial(k){const M=k._indexInSceneMaterialArray;if(-1!==M&&M<this.materials.length){if(M!==this.materials.length-1){const k=this.materials[this.materials.length-1];this.materials[M]=k,k._indexInSceneMaterialArray=M}k._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(k),M}removeActionManager(k){const M=this.actionManagers.indexOf(k);return-1!==M&&this.actionManagers.splice(M,1),M}removeTexture(k){const M=this.textures.indexOf(k);return-1!==M&&this.textures.splice(M,1),this.onTextureRemovedObservable.notifyObservers(k),M}addLight(k){if(!this._blockEntityCollection){this.lights.push(k),this.sortLightsByPriority(),k.parent||k._addToSceneRootNodes();for(const M of this.meshes)-1===M.lightSources.indexOf(k)&&(M.lightSources.push(k),M._resyncLightSources());this.onNewLightAddedObservable.notifyObservers(k)}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(I.e.CompareLightsPriority)}addCamera(k){this._blockEntityCollection||(this.cameras.push(k),this.onNewCameraAddedObservable.notifyObservers(k),k.parent||k._addToSceneRootNodes())}addSkeleton(k){this._blockEntityCollection||(this.skeletons.push(k),this.onNewSkeletonAddedObservable.notifyObservers(k))}addParticleSystem(k){this._blockEntityCollection||this.Ck.push(k)}addAnimation(k){this._blockEntityCollection||this.animations.push(k)}addAnimationGroup(k){this._blockEntityCollection||this.animationGroups.push(k)}addMultiMaterial(k){this._blockEntityCollection||(this.multiMaterials.push(k),this.onNewMultiMaterialAddedObservable.notifyObservers(k))}addMaterial(k){this._blockEntityCollection||k.va()===this&&-1!==k._indexInSceneMaterialArray||(k._indexInSceneMaterialArray=this.materials.length,this.materials.push(k),this.onNewMaterialAddedObservable.notifyObservers(k))}addMorphTargetManager(k){this._blockEntityCollection||this.morphTargetManagers.push(k)}addGeometry(k){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[k.uniqueId]=this.geometries.length),this.geometries.push(k))}addActionManager(k){this.actionManagers.push(k)}addTexture(k){this._blockEntityCollection||(this.textures.push(k),this.onNewTextureAddedObservable.notifyObservers(k))}switchActiveCamera(k){let M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.ak(),this.activeCamera=k,M&&k.attachControl())}setActiveCameraById(k){const M=this.getCameraById(k);return M?(this.activeCamera=M,M):null}setActiveCameraByName(k){const M=this.getCameraByName(k);return M?(this.activeCamera=M,M):null}getAnimationGroupByName(k){for(let M=0;M<this.animationGroups.length;M++)if(this.animationGroups[M].name===k)return this.animationGroups[M];return null}_getMaterial(k,M){for(let F=0;F<this.materials.length;F++){const k=this.materials[F];if(M(k))return k}if(k)for(let F=0;F<this.multiMaterials.length;F++){const k=this.multiMaterials[F];if(M(k))return k}return null}getMaterialByUniqueID(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(M,(M=>M.uniqueId===k))}getMaterialById(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(M,(M=>M.id===k))}getMaterialByName(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(M,(M=>M.name===k))}getLastMaterialById(k){let M=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let F=this.materials.length-1;F>=0;F--)if(this.materials[F].id===k)return this.materials[F];if(M)for(let F=this.multiMaterials.length-1;F>=0;F--)if(this.multiMaterials[F].id===k)return this.multiMaterials[F];return null}getTextureByUniqueId(k){for(let M=0;M<this.textures.length;M++)if(this.textures[M].uniqueId===k)return this.textures[M];return null}getTextureByName(k){for(let M=0;M<this.textures.length;M++)if(this.textures[M].name===k)return this.textures[M];return null}getCameraById(k){for(let M=0;M<this.cameras.length;M++)if(this.cameras[M].id===k)return this.cameras[M];return null}getCameraByUniqueId(k){for(let M=0;M<this.cameras.length;M++)if(this.cameras[M].uniqueId===k)return this.cameras[M];return null}getCameraByName(k){for(let M=0;M<this.cameras.length;M++)if(this.cameras[M].name===k)return this.cameras[M];return null}getBoneById(k){for(let M=0;M<this.skeletons.length;M++){const F=this.skeletons[M];for(let M=0;M<F.bones.length;M++)if(F.bones[M].id===k)return F.bones[M]}return null}getBoneByName(k){for(let M=0;M<this.skeletons.length;M++){const F=this.skeletons[M];for(let M=0;M<F.bones.length;M++)if(F.bones[M].name===k)return F.bones[M]}return null}getLightByName(k){for(let M=0;M<this.lights.length;M++)if(this.lights[M].name===k)return this.lights[M];return null}getLightById(k){for(let M=0;M<this.lights.length;M++)if(this.lights[M].id===k)return this.lights[M];return null}getLightByUniqueId(k){for(let M=0;M<this.lights.length;M++)if(this.lights[M].uniqueId===k)return this.lights[M];return null}getParticleSystemById(k){for(let M=0;M<this.Ck.length;M++)if(this.Ck[M].id===k)return this.Ck[M];return null}getGeometryById(k){for(let M=0;M<this.geometries.length;M++)if(this.geometries[M].id===k)return this.geometries[M];return null}_getGeometryByUniqueId(k){if(this._geometriesByUniqueId){const M=this._geometriesByUniqueId[k];if(void 0!==M)return this.geometries[M]}else for(let M=0;M<this.geometries.length;M++)if(this.geometries[M].uniqueId===k)return this.geometries[M];return null}pushGeometry(k,M){return!(!M&&this._getGeometryByUniqueId(k.uniqueId))&&(this.addGeometry(k),this.onNewGeometryAddedObservable.notifyObservers(k),!0)}removeGeometry(k){let M;if(this._geometriesByUniqueId){if(M=this._geometriesByUniqueId[k.uniqueId],void 0===M)return!1}else if(M=this.geometries.indexOf(k),M<0)return!1;if(M!==this.geometries.length-1){const k=this.geometries[this.geometries.length-1];k&&(this.geometries[M]=k,this._geometriesByUniqueId&&(this._geometriesByUniqueId[k.uniqueId]=M))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[k.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(k),!0}getGeometries(){return this.geometries}getMeshById(k){for(let M=0;M<this.meshes.length;M++)if(this.meshes[M].id===k)return this.meshes[M];return null}getMeshesById(k){return this.meshes.filter((function(M){return M.id===k}))}getTransformNodeById(k){for(let M=0;M<this.transformNodes.length;M++)if(this.transformNodes[M].id===k)return this.transformNodes[M];return null}getTransformNodeByUniqueId(k){for(let M=0;M<this.transformNodes.length;M++)if(this.transformNodes[M].uniqueId===k)return this.transformNodes[M];return null}getTransformNodesById(k){return this.transformNodes.filter((function(M){return M.id===k}))}getMeshByUniqueId(k){for(let M=0;M<this.meshes.length;M++)if(this.meshes[M].uniqueId===k)return this.meshes[M];return null}getLastMeshById(k){for(let M=this.meshes.length-1;M>=0;M--)if(this.meshes[M].id===k)return this.meshes[M];return null}getLastTransformNodeById(k){for(let M=this.transformNodes.length-1;M>=0;M--)if(this.transformNodes[M].id===k)return this.transformNodes[M];return null}getLastEntryById(k){let M;for(M=this.meshes.length-1;M>=0;M--)if(this.meshes[M].id===k)return this.meshes[M];for(M=this.transformNodes.length-1;M>=0;M--)if(this.transformNodes[M].id===k)return this.transformNodes[M];for(M=this.cameras.length-1;M>=0;M--)if(this.cameras[M].id===k)return this.cameras[M];for(M=this.lights.length-1;M>=0;M--)if(this.lights[M].id===k)return this.lights[M];return null}getNodeById(k){const M=this.getMeshById(k);if(M)return M;const F=this.getTransformNodeById(k);if(F)return F;const l=this.getLightById(k);if(l)return l;const t=this.getCameraById(k);if(t)return t;const g=this.getBoneById(k);return g||null}getNodeByName(k){const M=this.getMeshByName(k);if(M)return M;const F=this.getTransformNodeByName(k);if(F)return F;const l=this.getLightByName(k);if(l)return l;const t=this.getCameraByName(k);if(t)return t;const g=this.getBoneByName(k);return g||null}getMeshByName(k){for(let M=0;M<this.meshes.length;M++)if(this.meshes[M].name===k)return this.meshes[M];return null}getTransformNodeByName(k){for(let M=0;M<this.transformNodes.length;M++)if(this.transformNodes[M].name===k)return this.transformNodes[M];return null}getLastSkeletonById(k){for(let M=this.skeletons.length-1;M>=0;M--)if(this.skeletons[M].id===k)return this.skeletons[M];return null}getSkeletonByUniqueId(k){for(let M=0;M<this.skeletons.length;M++)if(this.skeletons[M].uniqueId===k)return this.skeletons[M];return null}getSkeletonById(k){for(let M=0;M<this.skeletons.length;M++)if(this.skeletons[M].id===k)return this.skeletons[M];return null}getSkeletonByName(k){for(let M=0;M<this.skeletons.length;M++)if(this.skeletons[M].name===k)return this.skeletons[M];return null}getMorphTargetManagerById(k){for(let M=0;M<this.morphTargetManagers.length;M++)if(this.morphTargetManagers[M].uniqueId===k)return this.morphTargetManagers[M];return null}getMorphTargetById(k){for(let M=0;M<this.morphTargetManagers.length;++M){const F=this.morphTargetManagers[M];for(let M=0;M<F.numTargets;++M){const l=F.getTarget(M);if(l.id===k)return l}}return null}getMorphTargetByName(k){for(let M=0;M<this.morphTargetManagers.length;++M){const F=this.morphTargetManagers[M];for(let M=0;M<F.numTargets;++M){const l=F.getTarget(M);if(l.name===k)return l}}return null}getPostProcessByName(k){for(let M=0;M<this.postProcesses.length;++M){const F=this.postProcesses[M];if(F.name===k)return F}return null}isActiveMesh(k){return-1!==this._activeMeshes.indexOf(k)}get uid(){return this._uid||(this._uid=l.f.RandomId()),this._uid}addExternalData(k,M){return this._externalData||(this._externalData=new G),this._externalData.add(k,M)}getExternalData(k){return this._externalData?this._externalData.get(k):null}getOrAddExternalDataWithFactory(k,M){return this._externalData||(this._externalData=new G),this._externalData.getOrAddWithFactory(k,M)}removeExternalData(k){return this._externalData.remove(k)}_evaluateSubMesh(k,M,F,l){if(l||k.isInFrustum(this._frustumPlanes)){for(const l of this._evaluateSubMeshStage)l.action(M,k);const F=k.Ha();null!==F&&void 0!==F&&(F.hasRenderTargetTextures&&null!=F.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(F)&&(this._processedMaterials.push(F),this._materialsRenderTargets.concatWithNoDuplicate(F.getRenderTargetTextures())),this._renderingManager.dispatch(k,M,F))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(k){this._preventFreeActiveMeshesAndRenderingGroups!==k&&(k&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=k)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let k=0;k<this.activeCameras.length;k++){const M=this.activeCameras[k];M&&M._activeMeshes&&M._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let k=0;k<this.textures.length;k++){const M=this.textures[k];M&&M.renderList&&M.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0],M=arguments.length>1?arguments[1]:void 0,F=arguments.length>2?arguments[2]:void 0,l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],t=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=t,this._skipEvaluateActiveMeshesCompletely=k,l)for(let k=0;k<this._activeMeshes.length;k++)this._activeMeshes.data[k]._freeze();M&&M()}else F&&F("No active camera found")})),this}unfreezeActiveMeshes(){for(let k=0;k<this.meshes.length;k++){const M=this.meshes[k];M._internalAbstractMeshDataInfo&&(M._internalAbstractMeshDataInfo._isActive=!1)}for(let k=0;k<this._activeMeshes.length;k++)this._activeMeshes.data[k]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(k){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>k.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var k;if(this._activeMeshes.length>0)null===(k=this.activeCamera)||void 0===k||k._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const k=this._activeMeshes.length;for(let M=0;M<k;M++){this._activeMeshes.data[M].ck()}}if(this._activeParticleSystems){const k=this._activeParticleSystems.length;for(let M=0;M<k;M++)this._activeParticleSystems.data[M].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const l of this._beforeEvaluateActiveMeshStage)l.action();const M=this.getActiveMeshCandidates(),F=M.length;for(let l=0;l<F;l++){const k=M.data[l];if(k._internalAbstractMeshDataInfo._currentLODIsUpToDate=!1,k.isBlocked)continue;if(this._totalVertices.addCount(k.getTotalVertices(),!1),!k.isReady()||!k.isEnabled()||k.Ad.hasAZeroComponent)continue;k.ck(),k.actionManager&&k.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(k);let F=this.customLODSelector?this.customLODSelector(k,this.activeCamera):k.getLOD(this.activeCamera);if(k._internalAbstractMeshDataInfo._currentLOD=F,k._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0,void 0!==F&&null!==F&&(F!==k&&0!==F.billboardMode&&F.ck(),k._preActivate(),k.isVisible&&k.visibility>0&&0!==(k.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||k.jc||k.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(k),this.activeCamera._activeMeshes.push(k),F!==k&&F._activate(this._renderId,!1);for(const M of this._preActiveMeshStage)M.action(k);k._activate(this._renderId,!1)&&(k.isAnInstance?k._internalAbstractMeshDataInfo._actAsRegularMesh&&(F=k):F._internalAbstractMeshDataInfo._onlyForInstances=!1,F._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(k,F)),k._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let k=0;k<this.Ck.length;k++){const M=this.Ck[k];if(!M.isStarted()||!M.j)continue;const F=M.j;F.position&&!F.isEnabled()||(this._activeParticleSystems.push(M),M.animate(),this._renderingManager.dispatchParticles(M))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(k){this._skeletonsEnabled&&k.skeleton&&(this._activeSkeletons.pushNoDuplicate(k.skeleton)&&(k.skeleton.prepare(),this._activeBones.addCount(k.skeleton.bones.length,!1)),k.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(k)&&this.frameGraph&&k.applySkeleton(k.skeleton))}_activeMesh(k,M){this._prepareSkeleton(M);let F=k.hasInstances||k.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||M.jc;if(M&&M.rk&&M.rk.length>0){const l=this.getActiveSubMeshCandidates(M),t=l.length;F=F||1===t;for(let g=0;g<t;g++){const t=l.data[g];this._evaluateSubMesh(t,M,k,F)}}}updateTransformMatrix(k){const M=this.activeCamera;if(M)if(M._renderingMultiview){const F=M._rigCameras[0],l=M._rigCameras[1];this.setTransformMatrix(F.getViewMatrix(),F.getProjectionMatrix(k),l.getViewMatrix(),l.getProjectionMatrix(k))}else this.setTransformMatrix(M.getViewMatrix(),M.getProjectionMatrix(k))}_bindFrameBuffer(k){let M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];k&&k._multiviewTexture?k._multiviewTexture._bindFrameBuffer():k&&k.outputRenderTarget?k.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer(),M&&this._clearFrameBuffer(k)}_clearFrameBuffer(k){if(k&&k._multiviewTexture);else if(k&&k.outputRenderTarget&&!k._renderingMultiview){const M=k.outputRenderTarget;M.onClearObservable.hasObservers()?M.onClearObservable.notifyObservers(this._engine):M.skipInitialClear||k.isRightCamera||(this.Gl&&this._engine.clear(M.clearColor||this._clearColor,!M._cleared,!0,!0),M._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(k,M){var F;let t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(k&&k._skipRendering)return;const g=this._engine;if(this._activeCamera=k,!this.activeCamera)throw new Error("Active camera not set");if(g.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&t){let M=!0;k._renderingMultiview&&k.outputRenderTarget&&(M=k.outputRenderTarget.skipInitialClear,this.Gl&&(this._defaultFrameBufferCleared=!1,k.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),k._renderingMultiview&&k.outputRenderTarget&&(k.outputRenderTarget.skipInitialClear=M)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let l=0;l<this._softwareSkinnedMeshes.length;l++){const k=this._softwareSkinnedMeshes.data[l];k.applySkeleton(k.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),k.customRenderTargets&&k.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(k.customRenderTargets),M&&M.customRenderTargets&&M.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(M.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const l of this._gatherActiveCameraRenderTargetsStage)l.action(this._renderTargets);let B=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){l.f.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let k=0;k<this._renderTargets.length;k++){const M=this._renderTargets.data[k];if(M._shouldRender()){this._renderId++;const k=M.activeCamera&&M.activeCamera!==this.activeCamera;M.render(k,this.dumpNextRenderTargets),B=!0}}l.f.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const k of this._cameraDrawRenderTargetStage)B=k.action(this.activeCamera)||B;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(F=k.outputRenderTarget)||void 0===F?void 0:F.renderPassId)??k.renderPassId??0,B&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||k._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const l of this._beforeCameraDrawStage)l.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),g.snapshotRendering&&1===g.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const l of this._afterCameraDrawStage)l.action(this.activeCamera);if(this.postProcessManager&&!k._multiviewTexture){const M=k.outputRenderTarget?k.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(k.isIntermediate,M)}for(const l of this._afterCameraPostProcessStage)l.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(k){let M=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===k.cameraRigMode||k._renderingMultiview)return k._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(k,void 0,M),void this.onAfterRenderCameraObservable.notifyObservers(k);if(k._useMultiviewToSingleView)this._renderMultiviewToSingleView(k);else{this.onBeforeCameraRenderObservable.notifyObservers(k);for(let M=0;M<k._rigCameras.length;M++)this._renderForCamera(k._rigCameras[M],k)}this._activeCamera=k,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(k)}_checkIntersections(){for(let k=0;k<this._meshesForIntersections.length;k++){const M=this._meshesForIntersections.data[k];if(M.actionManager)for(let k=0;M.actionManager&&k<M.actionManager.actions.length;k++){const F=M.actionManager.actions[k];if(12===F.trigger||13===F.trigger){const k=F.getTriggerParameter(),l=k.mesh?k.mesh:k,t=l.intersectsMesh(M,k.usePreciseIntersection),g=M._intersectionsInProgress.indexOf(l);t&&-1===g?12===F.trigger?(F._executeCurrent(O.CreateNew(M,void 0,l)),M._intersectionsInProgress.push(l)):13===F.trigger&&M._intersectionsInProgress.push(l):!t&&g>-1&&(13===F.trigger&&F._executeCurrent(O.CreateNew(M,void 0,l)),M.actionManager.hasSpecificTrigger(13,(k=>{const M=k.mesh?k.mesh:k;return l===M}))&&13!==F.trigger||M._intersectionsInProgress.splice(g,1))}}}}_advancePhysicsEngineStep(k){}_animate(k){}animate(){if(this._engine.isDeterministicLockStep()){let k=Math.max(kk.MinDeltaTime,Math.min(this._engine.getDeltaTime(),kk.MaxDeltaTime))+this._timeAccumulator;const M=this._engine.getTimeStep(),F=1e3/M/1e3;let l=0;const t=this._engine.getLockstepMaxSteps();let g=Math.floor(k/M);for(g=Math.min(g,t);k>0&&l<g;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=M*F,this._animate(M),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(M),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,l++,k-=M;this._timeAccumulator=k<0?0:k}else{const k=this.useConstantAnimationDeltaTime?16:Math.max(kk.MinDeltaTime,Math.min(this._engine.getDeltaTime(),kk.MaxDeltaTime));this._animationRatio=.06*k,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(k)}}_clear(){(this.autoClearDepthAndStencil||this.Gl)&&this._engine.clear(this._clearColor,this.Gl||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(k){var M;if(null===k||void 0===k||!k.outputRenderTarget||null!==k&&void 0!==k&&k.isRigCamera||(k.outputRenderTarget._cleared=!1),null!==k&&void 0!==k&&null!==(M=k.rigCameras)&&void 0!==M&&M.length)for(let F=0;F<k.rigCameras.length;++F){const M=k.rigCameras[F].outputRenderTarget;M&&(M._cleared=!1)}}resetDrawCache(k){if(this.meshes)for(const M of this.meshes)M.resetDrawCache(k)}_renderWithFrameGraph(){var k;let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),M)for(const t of this.cameras)if(t.update(),0!==t.cameraRigMode)for(let k=0;k<t._rigCameras.length;k++)t._rigCameras[k].update();for(const t of this._beforeClearStage)t.action();const F=this.getActiveMeshCandidates(),l=F.length;for(let t=0;t<l;t++){const k=F.data[t];k.isBlocked||(this._totalVertices.addCount(k.getTotalVertices(),!1),k.isReady()&&k.isEnabled()&&!k.Ad.hasAZeroComponent&&(k.ck(),k.actionManager&&k.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(k)))}if(this.particlesEnabled)for(let t=0;t<this.Ck.length;t++){const k=this.Ck[t];if(!k.isStarted()||!k.j)continue;const M=k.j;M.position&&!M.isEnabled()||(this._activeParticleSystems.push(k),k.animate())}null===(k=this.frameGraph)||void 0===k||k.execute()}render(){var k;let M=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],F=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(k=this.activeCameras)&&void 0!==k&&k.length&&this.activeCameras.forEach(this._checkCameraRenderTarget),this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),F||this.animate();for(const k of this._beforeCameraUpdateStage)k.action();if(M)if(this.activeCameras&&this.activeCameras.length>0)for(let k=0;k<this.activeCameras.length;k++){const M=this.activeCameras[k];if(M.update(),0!==M.cameraRigMode)for(let k=0;k<M._rigCameras.length;k++)M._rigCameras[k].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let k=0;k<this.activeCamera._rigCameras.length;k++)this.activeCamera._rigCameras[k].update();if(this.onBeforeRenderObservable.notifyObservers(this),this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(M,F);else{var t;const k=this.getEngine();this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const M=null!==(t=this.activeCameras)&&void 0!==t&&t.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){l.f.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!0;for(let F=0;F<this.customRenderTargets.length;F++){const l=this.customRenderTargets[F];if(l._shouldRender()){if(this._renderId++,this.activeCamera=l.activeCamera||this.activeCamera,!this.activeCamera)throw new Error("Active camera not set");k.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),l.render(M!==this.activeCamera,this.dumpNextRenderTargets)}}l.f.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!1,this._renderId++}this._engine.currentRenderPassId=(null===M||void 0===M?void 0:M.renderPassId)??0,this.activeCamera=M,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const F of this._beforeClearStage)F.action();this._clearFrameBuffer(this.activeCamera);for(const F of this._gatherRenderTargetsStage)F.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let F=0;F<this.activeCameras.length;F++)this._processSubCameras(this.activeCameras[F],F>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const k of this._afterRenderStage)k.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let k=0;k<this._toBeDisposed.length;k++){const M=this._toBeDisposed[k];M&&M.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let k=0;k<this.materials.length;k++)this.materials[k].freeze()}unfreezeMaterials(){for(let k=0;k<this.materials.length;k++)this.materials[k].unfreeze()}dispose(){if(this.u)return;this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations&&(this._activeAnimatables.forEach((k=>{k.onAnimationEndObservable.clear(),k.onAnimationEnd=null})),this.stopAllAnimations()),this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const k=this._activeRequests.slice();for(const t of k)t.abort();this._activeRequests.length=0;try{this.kk.notifyObservers(this)}catch(l){H.c.Error("An error occurred while calling onDisposeObservable!",l)}this.ak();if(this._engine.getInputElement())for(let t=0;t<this.cameras.length;t++)this.cameras[t].ak();this._disposeList(this.animationGroups),this._disposeList(this.lights),this._disposeList(this.meshes,(k=>k.dispose(!0))),this._disposeList(this.transformNodes,(k=>k.dispose(!0)));const M=this.cameras;this._disposeList(M),this.pl&&this.pl.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.Ck),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let F=this._engine.scenes.indexOf(this);F>-1&&this._engine.scenes.splice(F,1),m.e._LastCreatedScene===this&&(this._engine.scenes.length>0?m.e._LastCreatedScene=this._engine.scenes[this._engine.scenes.length-1]:m.e._LastCreatedScene=null),F=this._engine._virtualScenes.indexOf(this),F>-1&&this._engine._virtualScenes.splice(F,1),this._engine.wipeCaches(!0),this.kk.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this._isDisposed=!0}_disposeList(k,M){const F=k.slice(0);M=M??(k=>k.dispose());for(const l of F)M(l);k.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let k=0;k<this.meshes.length;k++){const M=this.meshes[k].sk;M&&M.clearCachedData()}}cleanCachedTextureBuffer(){for(const k of this.textures){k._buffer&&(k._buffer=null)}}getWorldExtends(k){const M=new N.m(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),F=new N.m(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return k=k||(()=>!0),this.meshes.filter(k).forEach((k=>{if(k.ck(!0),!k.rk||0===k.rk.length||k.infiniteDistance)return;const l=k.getBoundingInfo(),t=l.boundingBox.minimumWorld,g=l.boundingBox.maximumWorld;N.m.CheckExtends(t,M,F),N.m.CheckExtends(g,M,F)})),{min:M,max:F}}createPickingRay(k,M,F,l){throw(0,o.c)("Ray")}createPickingRayToRef(k,M,F,l,t){throw(0,o.c)("Ray")}createPickingRayInCameraSpace(k,M,F){throw(0,o.c)("Ray")}createPickingRayInCameraSpaceToRef(k,M,F,l){throw(0,o.c)("Ray")}ee(k,M,F,l,t,g){const B=(0,o.c)("Ray",!0);return B&&H.c.Warn(B),new U.c}pickWithBoundingInfo(k,M,F,l,t){const g=(0,o.c)("Ray",!0);return g&&H.c.Warn(g),new U.c}pickWithRay(k,M,F,l){throw(0,o.c)("Ray")}multiPick(k,M,F,l,t){throw(0,o.c)("Ray")}multiPickWithRay(k,M,F){throw(0,o.c)("Ray")}setPointerOverMesh(k,M,F){this._inputManager.setPointerOverMesh(k,M,F)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const k of this.geometries)k._rebuild();for(const k of this.meshes)k._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const k of this._components)k.rebuild();for(const k of this.Ck)k.rebuild();if(this.spriteManagers)for(const k of this.spriteManagers)k.rebuild()}_rebuildTextures(){for(const k of this.textures)k._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(k,M,F){if(void 0===M)return k;const l=[];for(const t in k){const g=k[t];A.e&&A.e.MatchesQuery(g,M)&&(!F||F(g))&&l.push(g)}return l}getMeshesByTags(k,M){return this._getByTags(this.meshes,k,M)}getCamerasByTags(k,M){return this._getByTags(this.cameras,k,M)}getLightsByTags(k,M){return this._getByTags(this.lights,k,M)}getMaterialByTags(k,M){return this._getByTags(this.materials,k,M).concat(this._getByTags(this.multiMaterials,k,M))}getTransformNodesByTags(k,M){return this._getByTags(this.transformNodes,k,M)}setRenderingOrder(k){let M=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(k,M,F,l)}setRenderingAutoClearDepthStencil(k,M){let F=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(k,M,F,l)}getAutoClearDepthStencilSetup(k){return this._renderingManager.getAutoClearDepthStencilSetup(k)}_forceBlockMaterialDirtyMechanism(k){this._blockMaterialDirtyMechanism=k}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(k){this._blockMaterialDirtyMechanism!==k&&(this._blockMaterialDirtyMechanism=k,k||this.markAllMaterialsAsDirty(63))}markAllMaterialsAsDirty(k,M){if(!this._blockMaterialDirtyMechanism)for(const F of this.materials)M&&!M(F)||F.bk(k)}_loadFile(k,M,F,l,t,g,B){const G=(0,q.o)(k,M,F,l?this.offlineProvider:void 0,t,g,B);return this._activeRequests.push(G),G.onCompleteObservable.add((k=>{this._activeRequests.splice(this._activeRequests.indexOf(k),1)})),G}_loadFileAsync(k,M,F,l,t){return new Promise(((g,B)=>{this._loadFile(k,(k=>{g(k)}),M,F,l,((k,M)=>{B(M)}),t)}))}_requestFile(k,M,F,l,t,g,B){const G=(0,q.x)(k,M,F,l?this.offlineProvider:void 0,t,g,B);return this._activeRequests.push(G),G.onCompleteObservable.add((k=>{this._activeRequests.splice(this._activeRequests.indexOf(k),1)})),G}_requestFileAsync(k,M,F,l,t){return new Promise(((g,B)=>{this._requestFile(k,(k=>{g(k)}),M,F,l,(k=>{B(k)}),t)}))}_readFile(k,M,F,l,t){const g=(0,q.t)(k,M,F,l,t);return this._activeRequests.push(g),g.onCompleteObservable.add((k=>{this._activeRequests.splice(this._activeRequests.indexOf(k),1)})),g}_readFileAsync(k,M,F){return new Promise(((l,t)=>{this._readFile(k,(k=>{l(k)}),M,F,(k=>{t(k)}))}))}getPerfCollector(){throw(0,o.c)("performanceViewerSceneExtension")}setActiveCameraByID(k){return this.setActiveCameraById(k)}getMaterialByID(k){return this.getMaterialById(k)}getLastMaterialByID(k){return this.getLastMaterialById(k)}getTextureByUniqueID(k){return this.getTextureByUniqueId(k)}getCameraByID(k){return this.getCameraById(k)}getCameraByUniqueID(k){return this.getCameraByUniqueId(k)}getBoneByID(k){return this.getBoneById(k)}getLightByID(k){return this.getLightById(k)}getLightByUniqueID(k){return this.getLightByUniqueId(k)}getParticleSystemByID(k){return this.getParticleSystemById(k)}getGeometryByID(k){return this.getGeometryById(k)}getMeshByID(k){return this.getMeshById(k)}getMeshByUniqueID(k){return this.getMeshByUniqueId(k)}getLastMeshByID(k){return this.getLastMeshById(k)}getMeshesByID(k){return this.getMeshesById(k)}getTransformNodeByID(k){return this.getTransformNodeById(k)}getTransformNodeByUniqueID(k){return this.getTransformNodeByUniqueId(k)}getTransformNodesByID(k){return this.getTransformNodesById(k)}getNodeByID(k){return this.getNodeById(k)}getLastEntryByID(k){return this.getLastEntryById(k)}getLastSkeletonByID(k){return this.getLastSkeletonById(k)}}kk.FOGMODE_NONE=0,kk.FOGMODE_EXP=1,kk.FOGMODE_EXP2=2,kk.FOGMODE_LINEAR=3,kk.MinDeltaTime=1,kk.MaxDeltaTime=1e3,(0,b.e)("BABYLON.Scene",kk)}}]);