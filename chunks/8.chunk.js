"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{2482:(U,M,b)=>{b.r(M),b.d(M,{_BasisTextureLoader:()=>F});var a,A=b(479),H=b(2371),W=b(591);function y(){const U=0,M=1,b=2,a=3,A=6,H=8,W=9,y=10,O=14;let e=null;function x(U,M,b,a,A){const H=U.getImageTranscodedSizeInBytes(M,b,a);let W=new Uint8Array(H);if(!U.transcodeImage(W,M,b,a,1,0))return null;if(A){W=function(U,M,b,a){const A=new Uint16Array(4),H=new Uint16Array(b*a),W=b/4,y=a/4;for(let O=0;O<y;O++)for(let a=0;a<W;a++){const y=M+8*(O*W+a);A[0]=U[y]|U[y+1]<<8,A[1]=U[y+2]|U[y+3]<<8,A[2]=(2*(31&A[0])+1*(31&A[1]))/3|(2*(2016&A[0])+1*(2016&A[1]))/3&2016|(2*(63488&A[0])+1*(63488&A[1]))/3&63488,A[3]=(2*(31&A[1])+1*(31&A[0]))/3|(2*(2016&A[1])+1*(2016&A[0]))/3&2016|(2*(63488&A[1])+1*(63488&A[0]))/3&63488;for(let M=0;M<4;M++){const W=U[y+4+M];let e=(4*O+M)*b+4*a;H[e++]=A[3&W],H[e++]=A[W>>2&3],H[e++]=A[W>>4&3],H[e++]=A[W>>6&3]}}return H}(W,0,U.getImageWidth(M,b)+3&-4,U.getImageHeight(M,b)+3&-4)}return W}onmessage=P=>{if("init"===P.data.action){if(P.data.url)try{importScripts(P.data.url)}catch(Z){postMessage({action:"error",error:Z})}e||(e=BASIS({wasmBinary:P.data.wasmBinary})),null!==e&&e.then((U=>{BASIS=U,U.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===P.data.action){const e=P.data.config,Z=P.data.imageData,C=new BASIS.BasisFile(Z),r=function(U){const M=U.getHasAlpha(),b=U.getNumImages(),a=[];for(let A=0;A<b;A++){const M={levels:[]},b=U.getNumLevels(A);for(let a=0;a<b;a++){const b={width:U.getImageWidth(A,a),height:U.getImageHeight(A,a)};M.levels.push(b)}a.push(M)}return{Ei:M,images:a}}(C);let B=P.data.ignoreSupportedFormats?null:function(e,x){let P=null;e.supportedCompressionFormats&&(P=e.supportedCompressionFormats.astc?y:e.supportedCompressionFormats.bc7?A:e.supportedCompressionFormats.s3tc?x.Ei?a:b:e.supportedCompressionFormats.pvrtc?x.Ei?W:H:e.supportedCompressionFormats.etc2?M:e.supportedCompressionFormats.etc1?U:O);return P}(P.data.config,r),J=!1;null===B&&(J=!0,B=r.Ei?a:b);let F=!0;C.startTranscoding()||(F=!1);const f=[];for(let U=0;U<r.images.length&&F;U++){const M=r.images[U];if(void 0===e.loadSingleImage||e.loadSingleImage===U){let b=M.levels.length;!1===e.loadMipmapLevels&&(b=1);for(let a=0;a<b;a++){const b=M.levels[a],A=x(C,U,a,B,J);if(!A){F=!1;break}b.transcodedPixels=A,f.push(b.transcodedPixels.buffer)}}}C.close(),C.delete(),J&&(B=-1),F?postMessage({action:"transcode",success:F,id:P.data.id,fileInfo:r,format:B},f):postMessage({action:"transcode",success:F,id:P.data.id})}}}!function(U){U[U.cTFETC1=0]="cTFETC1",U[U.cTFETC2=1]="cTFETC2",U[U.cTFBC1=2]="cTFBC1",U[U.cTFBC3=3]="cTFBC3",U[U.cTFBC4=4]="cTFBC4",U[U.cTFBC5=5]="cTFBC5",U[U.cTFBC7=6]="cTFBC7",U[U.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",U[U.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",U[U.cTFASTC_4x4=10]="cTFASTC_4x4",U[U.cTFATC_RGB=11]="cTFATC_RGB",U[U.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",U[U.cTFRGBA32=13]="cTFRGBA32",U[U.cTFRGB565=14]="cTFRGB565",U[U.cTFBGR565=15]="cTFBGR565",U[U.cTFRGBA4444=16]="cTFRGBA4444",U[U.cTFFXT1_RGB=17]="cTFFXT1_RGB",U[U.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",U[U.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",U[U.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",U[U.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(a||(a={}));const O={JSModuleURL:`${A.d._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${A.d._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let e=null,x=null,P=0;const Z=async()=>(e||(e=new Promise(((U,M)=>{x?U(x):A.d.LoadFileAsync(A.d.GetBabylonScriptURL(O.WasmModuleURL)).then((b=>{if("function"!==typeof URL)return M("Basis transcoder requires an environment with a URL constructor");const a=URL.createObjectURL(new Blob([`(${y})()`],{type:"application/javascript"}));x=new Worker(a),async function(U,M,b){return await new Promise(((a,H)=>{const W=M=>{"init"===M.data.action?(U.removeEventListener("message",W),a(U)):"error"===M.data.action&&H(M.data.error||"error initializing worker")};U.addEventListener("message",W),U.postMessage({action:"init",url:b?A.d.GetBabylonScriptURL(b):void 0,wasmBinary:M},[M])}))}(x,b,O.JSModuleURL).then(U,M)})).catch(M)}))),await e),C=async(U,M)=>{const b=U instanceof ArrayBuffer?new Uint8Array(U):U;return await new Promise(((U,a)=>{Z().then((()=>{const A=P++,H=M=>{"transcode"===M.data.action&&M.data.id===A&&(x.removeEventListener("message",H),M.data.success?U(M.data):a("Transcode is not supported on this device"))};x.addEventListener("message",H);const W=new Uint8Array(b.byteLength);W.set(new Uint8Array(b.buffer,b.byteOffset,b.byteLength)),x.postMessage({action:"transcode",id:A,imageData:W,config:M,ignoreSupportedFormats:false},[W.buffer])}),(U=>{a(U)}))}))},r=(U,M)=>{var b;let a=null===(b=M._gl)||void 0===b?void 0:b.TEXTURE_2D;var A;U.isCube&&(a=null===(A=M._gl)||void 0===A?void 0:A.TEXTURE_CUBE_MAP);M._bindTextureDirectly(a,U,!0)},B=(U,M)=>{const b=U.getEngine();for(let y=0;y<M.fileInfo.images.length;y++){const O=M.fileInfo.images[y].levels[0];if(U._invertVScale=U.invertY,-1===M.format||M.format===a.cTFRGB565)if(U.type=10,U.format=4,!b._features.basisNeedsPOT||Math.log2(O.width)%1===0&&Math.log2(O.height)%1===0)U._invertVScale=!U.invertY,U.width=O.width+3&-4,U.height=O.height+3&-4,U.samplingMode=2,r(U,b),b._uploadDataToTextureDirectly(U,new Uint16Array(O.transcodedPixels.buffer),y,0,4,!0);else{const M=new W.e(b,2);U._invertVScale=U.invertY,M.type=10,M.format=4,M.width=O.width+3&-4,M.height=O.height+3&-4,r(M,b),b._uploadDataToTextureDirectly(M,new Uint16Array(O.transcodedPixels.buffer),y,0,4,!0),b._rescaleTexture(M,U,b.scenes[0],b._getInternalFormat(4),(()=>{b._releaseTexture(M),r(U,b)}))}else{U.width=O.width,U.height=O.height,U.generateMipMaps=M.fileInfo.images[y].levels.length>1;const a=J.GetInternalFormatFromBasisFormat(M.format,b);U.format=a,r(U,b);const W=M.fileInfo.images[y].levels;for(let M=0;M<W.length;M++){const A=W[M];b._uploadCompressedDataToTextureDirectly(U,a,A.width,A.height,A.transcodedPixels,y,M)}!b._features.basisNeedsPOT||Math.log2(U.width)%1===0&&Math.log2(U.height)%1===0||(A.d.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),U._cachedWrapU=H.e.CLAMP_ADDRESSMODE,U._cachedWrapV=H.e.CLAMP_ADDRESSMODE)}}},J={JSModuleURL:O.JSModuleURL,WasmModuleURL:O.WasmModuleURL,GetInternalFormatFromBasisFormat:(U,M)=>{let b;switch(U){case a.cTFETC1:b=36196;break;case a.cTFBC1:b=33776;break;case a.cTFBC4:b=33779;break;case a.cTFASTC_4x4:b=37808;break;case a.cTFETC2:b=37496;break;case a.cTFBC7:b=36492}if(void 0===b)throw"The chosen Basis transcoder format is not currently supported";return b},TranscodeAsync:C,LoadTextureFromTranscodeResult:B};Object.defineProperty(J,"JSModuleURL",{get:function(){return O.JSModuleURL},set:function(U){O.JSModuleURL=U}}),Object.defineProperty(J,"WasmModuleURL",{get:function(){return O.WasmModuleURL},set:function(U){O.WasmModuleURL=U}});class F{constructor(){this.supportCascades=!1}loadCubeData(U,M,b,a,H){if(Array.isArray(U))return;const W=M.getEngine().getCaps(),y={supportedCompressionFormats:{etc1:!!W.etc1,s3tc:!!W.s3tc,pvrtc:!!W.pvrtc,etc2:!!W.etc2,astc:!!W.astc,bc7:!!W.bptc}};C(U,y).then((U=>{const b=U.fileInfo.images[0].levels.length>1&&M.generateMipMaps;B(M,U),M.getEngine()._setCubeMapTextureParams(M,b),M.isReady=!0,M.onLoadedObservable.notifyObservers(M),M.onLoadedObservable.clear(),a&&a()})).catch((U=>{A.d.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),M.isReady=!0,H&&H(U)}))}loadData(U,M,b){const a=M.getEngine().getCaps(),H={supportedCompressionFormats:{etc1:!!a.etc1,s3tc:!!a.s3tc,pvrtc:!!a.pvrtc,etc2:!!a.etc2,astc:!!a.astc,bc7:!!a.bptc}};C(U,H).then((U=>{const a=U.fileInfo.images[0].levels[0],A=U.fileInfo.images[0].levels.length>1&&M.generateMipMaps;b(a.width,a.height,A,-1!==U.format,(()=>{B(M,U)}))})).catch((U=>{A.d.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),A.d.Warn(`Failed to transcode Basis file: ${U}`),b(0,0,!1,!1,(()=>{}),!0)}))}}}}]);