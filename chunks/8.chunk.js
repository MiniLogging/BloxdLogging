"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{2457:(n,k,T)=>{T.r(k),T.d(k,{_BasisTextureLoader:()=>C});var c,K=T(542),Q=T(2334),G=T(654);function w(){const n=0,k=1,T=2,c=3,K=6,Q=8,G=9,w=10,E=14;let I=null;function S(n,k,T,c,K){const Q=n.getImageTranscodedSizeInBytes(k,T,c);let G=new Uint8Array(Q);if(!n.transcodeImage(G,k,T,c,1,0))return null;if(K){G=function(n,k,T,c){const K=new Uint16Array(4),Q=new Uint16Array(T*c),G=T/4,w=c/4;for(let E=0;E<w;E++)for(let c=0;c<G;c++){const w=k+8*(E*G+c);K[0]=n[w]|n[w+1]<<8,K[1]=n[w+2]|n[w+3]<<8,K[2]=(2*(31&K[0])+1*(31&K[1]))/3|(2*(2016&K[0])+1*(2016&K[1]))/3&2016|(2*(63488&K[0])+1*(63488&K[1]))/3&63488,K[3]=(2*(31&K[1])+1*(31&K[0]))/3|(2*(2016&K[1])+1*(2016&K[0]))/3&2016|(2*(63488&K[1])+1*(63488&K[0]))/3&63488;for(let k=0;k<4;k++){const G=n[w+4+k];let I=(4*E+k)*T+4*c;Q[I++]=K[3&G],Q[I++]=K[G>>2&3],Q[I++]=K[G>>4&3],Q[I++]=K[G>>6&3]}}return Q}(G,0,n.getImageWidth(k,T)+3&-4,n.getImageHeight(k,T)+3&-4)}return G}onmessage=P=>{if("init"===P.data.action){if(P.data.url)try{importScripts(P.data.url)}catch(W){postMessage({action:"error",error:W})}I||(I=BASIS({wasmBinary:P.data.wasmBinary})),null!==I&&I.then((n=>{BASIS=n,n.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===P.data.action){const I=P.data.config,W=P.data.imageData,J=new BASIS.BasisFile(W),H=function(n){const k=n.getHasAlpha(),T=n.getNumImages(),c=[];for(let K=0;K<T;K++){const k={levels:[]},T=n.getNumLevels(K);for(let c=0;c<T;c++){const T={width:n.getImageWidth(K,c),height:n.getImageHeight(K,c)};k.levels.push(T)}c.push(k)}return{Bj:k,images:c}}(J);let s=P.data.ignoreSupportedFormats?null:function(I,S){let P=null;I.supportedCompressionFormats&&(P=I.supportedCompressionFormats.astc?w:I.supportedCompressionFormats.bc7?K:I.supportedCompressionFormats.s3tc?S.Bj?c:T:I.supportedCompressionFormats.pvrtc?S.Bj?G:Q:I.supportedCompressionFormats.etc2?k:I.supportedCompressionFormats.etc1?n:E);return P}(P.data.config,H),b=!1;null===s&&(b=!0,s=H.Bj?c:T);let C=!0;J.startTranscoding()||(C=!1);const z=[];for(let n=0;n<H.images.length&&C;n++){const k=H.images[n];if(void 0===I.loadSingleImage||I.loadSingleImage===n){let T=k.levels.length;!1===I.loadMipmapLevels&&(T=1);for(let c=0;c<T;c++){const T=k.levels[c],K=S(J,n,c,s,b);if(!K){C=!1;break}T.transcodedPixels=K,z.push(T.transcodedPixels.buffer)}}}J.close(),J.delete(),b&&(s=-1),C?postMessage({action:"transcode",success:C,id:P.data.id,fileInfo:H,format:s},z):postMessage({action:"transcode",success:C,id:P.data.id})}}}!function(n){n[n.cTFETC1=0]="cTFETC1",n[n.cTFETC2=1]="cTFETC2",n[n.cTFBC1=2]="cTFBC1",n[n.cTFBC3=3]="cTFBC3",n[n.cTFBC4=4]="cTFBC4",n[n.cTFBC5=5]="cTFBC5",n[n.cTFBC7=6]="cTFBC7",n[n.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",n[n.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",n[n.cTFASTC_4x4=10]="cTFASTC_4x4",n[n.cTFATC_RGB=11]="cTFATC_RGB",n[n.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",n[n.cTFRGBA32=13]="cTFRGBA32",n[n.cTFRGB565=14]="cTFRGB565",n[n.cTFBGR565=15]="cTFBGR565",n[n.cTFRGBA4444=16]="cTFRGBA4444",n[n.cTFFXT1_RGB=17]="cTFFXT1_RGB",n[n.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",n[n.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",n[n.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",n[n.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(c||(c={}));const E={JSModuleURL:`${K.e._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${K.e._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let I=null,S=null,P=0;const W=async()=>(I||(I=new Promise(((n,k)=>{S?n(S):K.e.LoadFileAsync(K.e.GetBabylonScriptURL(E.WasmModuleURL)).then((T=>{if("function"!==typeof URL)return k("Basis transcoder requires an environment with a URL constructor");const c=URL.createObjectURL(new Blob([`(${w})()`],{type:"application/javascript"}));S=new Worker(c),async function(n,k,T){return await new Promise(((c,Q)=>{const G=k=>{"init"===k.data.action?(n.removeEventListener("message",G),c(n)):"error"===k.data.action&&Q(k.data.error||"error initializing worker")};n.addEventListener("message",G),n.postMessage({action:"init",url:T?K.e.GetBabylonScriptURL(T):void 0,wasmBinary:k},[k])}))}(S,T,E.JSModuleURL).then(n,k)})).catch(k)}))),await I),J=async(n,k)=>{const T=n instanceof ArrayBuffer?new Uint8Array(n):n;return await new Promise(((n,c)=>{W().then((()=>{const K=P++,Q=k=>{"transcode"===k.data.action&&k.data.id===K&&(S.removeEventListener("message",Q),k.data.success?n(k.data):c("Transcode is not supported on this device"))};S.addEventListener("message",Q);const G=new Uint8Array(T.byteLength);G.set(new Uint8Array(T.buffer,T.byteOffset,T.byteLength)),S.postMessage({action:"transcode",id:K,imageData:G,config:k,ignoreSupportedFormats:false},[G.buffer])}),(n=>{c(n)}))}))},H=(n,k)=>{var T;let c=null===(T=k._gl)||void 0===T?void 0:T.TEXTURE_2D;var K;n.isCube&&(c=null===(K=k._gl)||void 0===K?void 0:K.TEXTURE_CUBE_MAP);k._bindTextureDirectly(c,n,!0)},s=(n,k)=>{const T=n.getEngine();for(let w=0;w<k.fileInfo.images.length;w++){const E=k.fileInfo.images[w].levels[0];if(n._invertVScale=n.invertY,-1===k.format||k.format===c.cTFRGB565)if(n.type=10,n.format=4,!T._features.basisNeedsPOT||Math.log2(E.width)%1===0&&Math.log2(E.height)%1===0)n._invertVScale=!n.invertY,n.width=E.width+3&-4,n.height=E.height+3&-4,n.samplingMode=2,H(n,T),T._uploadDataToTextureDirectly(n,new Uint16Array(E.transcodedPixels.buffer),w,0,4,!0);else{const k=new G.d(T,2);n._invertVScale=n.invertY,k.type=10,k.format=4,k.width=E.width+3&-4,k.height=E.height+3&-4,H(k,T),T._uploadDataToTextureDirectly(k,new Uint16Array(E.transcodedPixels.buffer),w,0,4,!0),T._rescaleTexture(k,n,T.scenes[0],T._getInternalFormat(4),(()=>{T._releaseTexture(k),H(n,T)}))}else{n.width=E.width,n.height=E.height,n.generateMipMaps=k.fileInfo.images[w].levels.length>1;const c=b.GetInternalFormatFromBasisFormat(k.format,T);n.format=c,H(n,T);const G=k.fileInfo.images[w].levels;for(let k=0;k<G.length;k++){const K=G[k];T._uploadCompressedDataToTextureDirectly(n,c,K.width,K.height,K.transcodedPixels,w,k)}!T._features.basisNeedsPOT||Math.log2(n.width)%1===0&&Math.log2(n.height)%1===0||(K.e.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),n._cachedWrapU=Q.b.CLAMP_ADDRESSMODE,n._cachedWrapV=Q.b.CLAMP_ADDRESSMODE)}}},b={JSModuleURL:E.JSModuleURL,WasmModuleURL:E.WasmModuleURL,GetInternalFormatFromBasisFormat:(n,k)=>{let T;switch(n){case c.cTFETC1:T=36196;break;case c.cTFBC1:T=33776;break;case c.cTFBC4:T=33779;break;case c.cTFASTC_4x4:T=37808;break;case c.cTFETC2:T=37496;break;case c.cTFBC7:T=36492}if(void 0===T)throw"The chosen Basis transcoder format is not currently supported";return T},TranscodeAsync:J,LoadTextureFromTranscodeResult:s};Object.defineProperty(b,"JSModuleURL",{get:function(){return E.JSModuleURL},set:function(n){E.JSModuleURL=n}}),Object.defineProperty(b,"WasmModuleURL",{get:function(){return E.WasmModuleURL},set:function(n){E.WasmModuleURL=n}});class C{constructor(){this.supportCascades=!1}loadCubeData(n,k,T,c,Q){if(Array.isArray(n))return;const G=k.getEngine().getCaps(),w={supportedCompressionFormats:{etc1:!!G.etc1,s3tc:!!G.s3tc,pvrtc:!!G.pvrtc,etc2:!!G.etc2,astc:!!G.astc,bc7:!!G.bptc}};J(n,w).then((n=>{const T=n.fileInfo.images[0].levels.length>1&&k.generateMipMaps;s(k,n),k.getEngine()._setCubeMapTextureParams(k,T),k.isReady=!0,k.onLoadedObservable.notifyObservers(k),k.onLoadedObservable.clear(),c&&c()})).catch((n=>{K.e.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),k.isReady=!0,Q&&Q(n)}))}loadData(n,k,T){const c=k.getEngine().getCaps(),Q={supportedCompressionFormats:{etc1:!!c.etc1,s3tc:!!c.s3tc,pvrtc:!!c.pvrtc,etc2:!!c.etc2,astc:!!c.astc,bc7:!!c.bptc}};J(n,Q).then((n=>{const c=n.fileInfo.images[0].levels[0],K=n.fileInfo.images[0].levels.length>1&&k.generateMipMaps;T(c.width,c.height,K,-1!==n.format,(()=>{s(k,n)}))})).catch((n=>{K.e.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),K.e.Warn(`Failed to transcode Basis file: ${n}`),T(0,0,!1,!1,(()=>{}),!0)}))}}}}]);