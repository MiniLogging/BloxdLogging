"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{2162:(U,W,l)=>{l.r(W),l.d(W,{_BasisTextureLoader:()=>m});var M,t=l(503),L=l(2048),p=l(624);function B(){const U=0,W=1,l=2,M=3,t=6,L=8,p=9,B=10,k=14;let A=null;function q(U,W,l,M,t){const L=U.getImageTranscodedSizeInBytes(W,l,M);let p=new Uint8Array(L);if(!U.transcodeImage(p,W,l,M,1,0))return null;if(t){p=function(U,W,l,M){const t=new Uint16Array(4),L=new Uint16Array(l*M),p=l/4,B=M/4;for(let k=0;k<B;k++)for(let M=0;M<p;M++){const B=W+8*(k*p+M);t[0]=U[B]|U[B+1]<<8,t[1]=U[B+2]|U[B+3]<<8,t[2]=(2*(31&t[0])+1*(31&t[1]))/3|(2*(2016&t[0])+1*(2016&t[1]))/3&2016|(2*(63488&t[0])+1*(63488&t[1]))/3&63488,t[3]=(2*(31&t[1])+1*(31&t[0]))/3|(2*(2016&t[1])+1*(2016&t[0]))/3&2016|(2*(63488&t[1])+1*(63488&t[0]))/3&63488;for(let W=0;W<4;W++){const p=U[B+4+W];let A=(4*k+W)*l+4*M;L[A++]=t[3&p],L[A++]=t[p>>2&3],L[A++]=t[p>>4&3],L[A++]=t[p>>6&3]}}return L}(p,0,U.getImageWidth(W,l)+3&-4,U.getImageHeight(W,l)+3&-4)}return p}onmessage=y=>{if("init"===y.data.action){if(y.data.url)try{importScripts(y.data.url)}catch(j){postMessage({action:"error",error:j})}A||(A=BASIS({wasmBinary:y.data.wasmBinary})),null!==A&&A.then((U=>{BASIS=U,U.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===y.data.action){const A=y.data.config,j=y.data.imageData,s=new BASIS.BasisFile(j),w=function(U){const W=U.getHasAlpha(),l=U.getNumImages(),M=[];for(let t=0;t<l;t++){const W={levels:[]},l=U.getNumLevels(t);for(let M=0;M<l;M++){const l={width:U.getImageWidth(t,M),height:U.getImageHeight(t,M)};W.levels.push(l)}M.push(W)}return{yi:W,images:M}}(s);let K=y.data.ignoreSupportedFormats?null:function(A,q){let y=null;A.supportedCompressionFormats&&(y=A.supportedCompressionFormats.astc?B:A.supportedCompressionFormats.bc7?t:A.supportedCompressionFormats.s3tc?q.yi?M:l:A.supportedCompressionFormats.pvrtc?q.yi?p:L:A.supportedCompressionFormats.etc2?W:A.supportedCompressionFormats.etc1?U:k);return y}(y.data.config,w),r=!1;null===K&&(r=!0,K=w.yi?M:l);let m=!0;s.startTranscoding()||(m=!1);const f=[];for(let U=0;U<w.images.length&&m;U++){const W=w.images[U];if(void 0===A.loadSingleImage||A.loadSingleImage===U){let l=W.levels.length;!1===A.loadMipmapLevels&&(l=1);for(let M=0;M<l;M++){const l=W.levels[M],t=q(s,U,M,K,r);if(!t){m=!1;break}l.transcodedPixels=t,f.push(l.transcodedPixels.buffer)}}}s.close(),s.delete(),r&&(K=-1),m?postMessage({action:"transcode",success:m,id:y.data.id,fileInfo:w,format:K},f):postMessage({action:"transcode",success:m,id:y.data.id})}}}!function(U){U[U.cTFETC1=0]="cTFETC1",U[U.cTFETC2=1]="cTFETC2",U[U.cTFBC1=2]="cTFBC1",U[U.cTFBC3=3]="cTFBC3",U[U.cTFBC4=4]="cTFBC4",U[U.cTFBC5=5]="cTFBC5",U[U.cTFBC7=6]="cTFBC7",U[U.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",U[U.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",U[U.cTFASTC_4x4=10]="cTFASTC_4x4",U[U.cTFATC_RGB=11]="cTFATC_RGB",U[U.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",U[U.cTFRGBA32=13]="cTFRGBA32",U[U.cTFRGB565=14]="cTFRGB565",U[U.cTFBGR565=15]="cTFBGR565",U[U.cTFRGBA4444=16]="cTFRGBA4444",U[U.cTFFXT1_RGB=17]="cTFFXT1_RGB",U[U.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",U[U.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",U[U.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",U[U.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(M||(M={}));const k={JSModuleURL:`${t.h._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${t.h._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let A=null,q=null,y=0;const j=async()=>(A||(A=new Promise(((U,W)=>{q?U(q):t.h.LoadFileAsync(t.h.GetBabylonScriptURL(k.WasmModuleURL)).then((l=>{if("function"!==typeof URL)return W("Basis transcoder requires an environment with a URL constructor");const M=URL.createObjectURL(new Blob([`(${B})()`],{type:"application/javascript"}));q=new Worker(M),async function(U,W,l){return await new Promise(((M,L)=>{const p=W=>{"init"===W.data.action?(U.removeEventListener("message",p),M(U)):"error"===W.data.action&&L(W.data.error||"error initializing worker")};U.addEventListener("message",p),U.postMessage({action:"init",url:l?t.h.GetBabylonScriptURL(l):void 0,wasmBinary:W},[W])}))}(q,l,k.JSModuleURL).then(U,W)})).catch(W)}))),await A),s=async(U,W)=>{const l=U instanceof ArrayBuffer?new Uint8Array(U):U;return await new Promise(((U,M)=>{j().then((()=>{const t=y++,L=W=>{"transcode"===W.data.action&&W.data.id===t&&(q.removeEventListener("message",L),W.data.success?U(W.data):M("Transcode is not supported on this device"))};q.addEventListener("message",L);const p=new Uint8Array(l.byteLength);p.set(new Uint8Array(l.buffer,l.byteOffset,l.byteLength)),q.postMessage({action:"transcode",id:t,imageData:p,config:W,ignoreSupportedFormats:false},[p.buffer])}),(U=>{M(U)}))}))},w=(U,W)=>{var l;let M=null===(l=W._gl)||void 0===l?void 0:l.TEXTURE_2D;var t;U.isCube&&(M=null===(t=W._gl)||void 0===t?void 0:t.TEXTURE_CUBE_MAP);W._bindTextureDirectly(M,U,!0)},K=(U,W)=>{const l=U.getEngine();for(let B=0;B<W.fileInfo.images.length;B++){const k=W.fileInfo.images[B].levels[0];if(U._invertVScale=U.invertY,-1===W.format||W.format===M.cTFRGB565)if(U.type=10,U.format=4,!l._features.basisNeedsPOT||Math.log2(k.width)%1===0&&Math.log2(k.height)%1===0)U._invertVScale=!U.invertY,U.width=k.width+3&-4,U.height=k.height+3&-4,U.samplingMode=2,w(U,l),l._uploadDataToTextureDirectly(U,new Uint16Array(k.transcodedPixels.buffer),B,0,4,!0);else{const W=new p.c(l,2);U._invertVScale=U.invertY,W.type=10,W.format=4,W.width=k.width+3&-4,W.height=k.height+3&-4,w(W,l),l._uploadDataToTextureDirectly(W,new Uint16Array(k.transcodedPixels.buffer),B,0,4,!0),l._rescaleTexture(W,U,l.scenes[0],l._getInternalFormat(4),(()=>{l._releaseTexture(W),w(U,l)}))}else{U.width=k.width,U.height=k.height,U.generateMipMaps=W.fileInfo.images[B].levels.length>1;const M=r.GetInternalFormatFromBasisFormat(W.format,l);U.format=M,w(U,l);const p=W.fileInfo.images[B].levels;for(let W=0;W<p.length;W++){const t=p[W];l._uploadCompressedDataToTextureDirectly(U,M,t.width,t.height,t.transcodedPixels,B,W)}!l._features.basisNeedsPOT||Math.log2(U.width)%1===0&&Math.log2(U.height)%1===0||(t.h.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),U._cachedWrapU=L.d.CLAMP_ADDRESSMODE,U._cachedWrapV=L.d.CLAMP_ADDRESSMODE)}}},r={JSModuleURL:k.JSModuleURL,WasmModuleURL:k.WasmModuleURL,GetInternalFormatFromBasisFormat:(U,W)=>{let l;switch(U){case M.cTFETC1:l=36196;break;case M.cTFBC1:l=33776;break;case M.cTFBC4:l=33779;break;case M.cTFASTC_4x4:l=37808;break;case M.cTFETC2:l=37496;break;case M.cTFBC7:l=36492}if(void 0===l)throw"The chosen Basis transcoder format is not currently supported";return l},TranscodeAsync:s,LoadTextureFromTranscodeResult:K};Object.defineProperty(r,"JSModuleURL",{get:function(){return k.JSModuleURL},set:function(U){k.JSModuleURL=U}}),Object.defineProperty(r,"WasmModuleURL",{get:function(){return k.WasmModuleURL},set:function(U){k.WasmModuleURL=U}});class m{constructor(){this.supportCascades=!1}loadCubeData(U,W,l,M,L){if(Array.isArray(U))return;const p=W.getEngine().getCaps(),B={supportedCompressionFormats:{etc1:!!p.etc1,s3tc:!!p.s3tc,pvrtc:!!p.pvrtc,etc2:!!p.etc2,astc:!!p.astc,bc7:!!p.bptc}};s(U,B).then((U=>{const l=U.fileInfo.images[0].levels.length>1&&W.generateMipMaps;K(W,U),W.getEngine()._setCubeMapTextureParams(W,l),W.isReady=!0,W.onLoadedObservable.notifyObservers(W),W.onLoadedObservable.clear(),M&&M()})).catch((U=>{t.h.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),W.isReady=!0,L&&L(U)}))}loadData(U,W,l){const M=W.getEngine().getCaps(),L={supportedCompressionFormats:{etc1:!!M.etc1,s3tc:!!M.s3tc,pvrtc:!!M.pvrtc,etc2:!!M.etc2,astc:!!M.astc,bc7:!!M.bptc}};s(U,L).then((U=>{const M=U.fileInfo.images[0].levels[0],t=U.fileInfo.images[0].levels.length>1&&W.generateMipMaps;l(M.width,M.height,t,-1!==U.format,(()=>{K(W,U)}))})).catch((U=>{t.h.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),t.h.Warn(`Failed to transcode Basis file: ${U}`),l(0,0,!1,!1,(()=>{}),!0)}))}}}}]);