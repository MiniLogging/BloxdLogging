"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{10961:(o,i,p)=>{p.r(i),p.d(i,{_HDRTextureLoader:()=>a});var b=p(977);class k{static ConvertPanoramaToCubemap(o,i,p,b){let k=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!o)throw"ConvertPanoramaToCubemap: input cannot be null";if(o.length!=i*p*3)throw"ConvertPanoramaToCubemap: input size is wrong";return{front:this.CreateCubemapTexture(b,this.FACE_FRONT,o,i,p,k),back:this.CreateCubemapTexture(b,this.FACE_BACK,o,i,p,k),left:this.CreateCubemapTexture(b,this.FACE_LEFT,o,i,p,k),right:this.CreateCubemapTexture(b,this.FACE_RIGHT,o,i,p,k),up:this.CreateCubemapTexture(b,this.FACE_UP,o,i,p,k),down:this.CreateCubemapTexture(b,this.FACE_DOWN,o,i,p,k),size:b,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(o,i,p,b,k){let u=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const j=new ArrayBuffer(o*o*4*3),z=new Float32Array(j),g=u?Math.max(1,Math.round(b/4/o)):1,J=1/g,a=J*J,G=i[1].Gc(i[0]).scale(J/o),O=i[3].Gc(i[2]).scale(J/o),C=1/o;let l=0;for(let R=0;R<o;R++)for(let u=0;u<g;u++){let u=i[0],j=i[2];for(let i=0;i<o;i++)for(let J=0;J<g;J++){const g=j.Gc(u).scale(l).add(u);g.normalize();const J=this.CalcProjectionSpherical(g,p,b,k);z[R*o*3+3*i+0]+=J.r*a,z[R*o*3+3*i+1]+=J.g*a,z[R*o*3+3*i+2]+=J.b*a,u=u.add(G),j=j.add(O)}l+=C*J}return z}static CalcProjectionSpherical(o,i,p,b){let k=Math.atan2(o.z,o.x);const u=Math.acos(o.y);for(;k<-Math.PI;)k+=2*Math.PI;for(;k>Math.PI;)k-=2*Math.PI;let j=k/Math.PI;const z=u/Math.PI;j=.5*j+.5;let g=Math.round(j*p);g<0?g=0:g>=p&&(g=p-1);let J=Math.round(z*b);J<0?J=0:J>=b&&(J=b-1);const a=b-J-1;return{r:i[a*p*3+3*g+0],g:i[a*p*3+3*g+1],b:i[a*p*3+3*g+2]}}}function u(o,i,p,b,k,u){k>0?(k=function(o,i){return i>1023?o*Math.pow(2,1023)*Math.pow(2,i-1023):i<-1074?o*Math.pow(2,-1074)*Math.pow(2,i+1074):o*Math.pow(2,i)}(1,k-136),o[u+0]=i*k,o[u+1]=p*k,o[u+2]=b*k):(o[u+0]=0,o[u+1]=0,o[u+2]=0)}function j(o,i){let p="",b="";for(let k=i;k<o.length-i&&(b=String.fromCharCode(o[k]),"\n"!=b);k++)p+=b;return p}function z(o){let i=0,p=0,b=j(o,0);if("#"!=b[0]||"?"!=b[1])throw"Bad HDR Format.";let k=!1,u=!1,z=0;do{z+=b.length+1,b=j(o,z),"FORMAT=32-bit_rle_rgbe"==b?u=!0:0==b.length&&(k=!0)}while(!k);if(!u)throw"HDR Bad header format, unsupported FORMAT";z+=b.length+1,b=j(o,z);const g=/^-Y (.*) \+X (.*)$/g.exec(b);if(!g||g.length<3)throw"HDR Bad header format, no size";if(p=parseInt(g[2]),i=parseInt(g[1]),p<8||p>32767)throw"HDR Bad header format, unsupported size";return z+=b.length+1,{height:i,width:p,dataPosition:z}}function g(o,i){return function(o,i){let p=i.height;const b=i.width;let k,j,z,g,a,G=i.dataPosition,O=0,C=0,l=0;const R=new ArrayBuffer(4*b),E=new Uint8Array(R),F=new ArrayBuffer(i.width*i.height*4*3),e=new Float32Array(F);for(;p>0;){if(k=o[G++],j=o[G++],z=o[G++],g=o[G++],2!=k||2!=j||128&z||i.width<8||i.width>32767)return J(o,i);if((z<<8|g)!=b)throw"HDR Bad header format, wrong scan line width";for(O=0,l=0;l<4;l++)for(C=(l+1)*b;O<C;)if(k=o[G++],j=o[G++],k>128){if(a=k-128,0==a||a>C-O)throw"HDR Bad Format, bad scanline data (run)";for(;a-- >0;)E[O++]=j}else{if(a=k,0==a||a>C-O)throw"HDR Bad Format, bad scanline data (non-run)";if(E[O++]=j,--a>0)for(let i=0;i<a;i++)E[O++]=o[G++]}for(l=0;l<b;l++)k=E[l],j=E[l+b],z=E[l+2*b],g=E[l+3*b],u(e,k,j,z,g,(i.height-p)*b*3+3*l);p--}return e}(o,i)}function J(o,i){let p=i.height;const b=i.width;let k,j,z,g,J,a=i.dataPosition;const G=new ArrayBuffer(i.width*i.height*4*3),O=new Float32Array(G);for(;p>0;){for(J=0;J<i.width;J++)k=o[a++],j=o[a++],z=o[a++],g=o[a++],u(O,k,j,z,g,(i.height-p)*b*3+3*J);p--}return O}k.FACE_LEFT=[new b.i(-1,-1,-1),new b.i(1,-1,-1),new b.i(-1,1,-1),new b.i(1,1,-1)],k.FACE_RIGHT=[new b.i(1,-1,1),new b.i(-1,-1,1),new b.i(1,1,1),new b.i(-1,1,1)],k.FACE_FRONT=[new b.i(1,-1,-1),new b.i(1,-1,1),new b.i(1,1,-1),new b.i(1,1,1)],k.FACE_BACK=[new b.i(-1,-1,1),new b.i(-1,-1,-1),new b.i(-1,1,1),new b.i(-1,1,-1)],k.FACE_DOWN=[new b.i(1,1,-1),new b.i(1,1,1),new b.i(-1,1,-1),new b.i(-1,1,1)],k.FACE_UP=[new b.i(-1,-1,-1),new b.i(-1,-1,1),new b.i(1,-1,-1),new b.i(1,-1,1)];class a{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(o,i,p){const b=new Uint8Array(o.buffer,o.byteOffset,o.byteLength),k=z(b),u=g(b,k),j=k.width*k.height,J=new Float32Array(4*j);for(let z=0;z<j;z+=1)J[4*z]=u[3*z],J[4*z+1]=u[3*z+1],J[4*z+2]=u[3*z+2],J[4*z+3]=1;p(k.width,k.height,i.generateMipMaps,!1,(()=>{const o=i.getEngine();i.type=1,i.format=5,i._gammaSpace=!1,o._uploadDataToTextureDirectly(i,J)}))}}}}]);