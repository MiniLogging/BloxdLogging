"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8,9],{2397:(a,x,Q)=>{var s;Q.d(x,{b:()=>h}),function(a){a[a.PointerMove=0]="PointerMove",a[a.PointerDown=1]="PointerDown",a[a.PointerUp=2]="PointerUp"}(s||(s={}));class h{}h.DOM_DELTA_PIXEL=0,h.DOM_DELTA_LINE=1,h.DOM_DELTA_PAGE=2},2388:(a,x,Q)=>{Q.d(x,{c:()=>s,d:()=>D,e:()=>h});class s{}s.KEYDOWN=1,s.KEYUP=2;class h{constructor(a,x){this.type=a,this.event=x}}class D extends h{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(a){this.skipOnKeyboardObservable=a}constructor(a,x){super(a,x),this.type=a,this.event=x,this.skipOnKeyboardObservable=!1}}},2381:(a,x,Q)=>{Q.d(x,{c:()=>h,d:()=>N,e:()=>C});var s=Q(679);class h{}h.POINTERDOWN=1,h.POINTERUP=2,h.POINTERMOVE=4,h.POINTERWHEEL=8,h.POINTERPICK=16,h.POINTERTAP=32,h.POINTERDOUBLETAP=64;class D{constructor(a,x){this.type=a,this.event=x}}class N extends D{constructor(a,x,Q,h){super(a,x),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new s.n(Q,h)}}class C extends D{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(a,x,Q){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(a,x),this._pickInfo=Q,this._inputManager=s}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2429:(a,x,Q)=>{var s=Q(2304),h=Q(2323);h.c.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(h.c.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=s.d.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((a=>{this._texture._sphericalPolynomial=a,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(a){this._texture&&(this._texture._sphericalPolynomial=a)},enumerable:!0,configurable:!0})},2371:(a,x,Q)=>{function s(a){a.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}Q.d(x,{c:()=>s})},2377:(a,x,Q)=>{Q.d(x,{e:()=>D,i:()=>h});var s=Q(2371);function h(a,x){x.EXPOSURE&&a.push("exposureLinear"),x.CONTRAST&&a.push("contrast"),x.COLORGRADING&&a.push("colorTransformSettings"),(x.VIGNETTE||x.DITHER)&&a.push("vInverseScreenSize"),x.VIGNETTE&&(a.push("vignetteSettings1"),a.push("vignetteSettings2")),x.COLORCURVES&&(0,s.c)(a),x.DITHER&&a.push("ditherIntensity")}function D(a,x){x.COLORGRADING&&a.push("txColorTransform")}},2368:(a,x,Q)=>{Q.d(x,{d:()=>p});var s=Q(652),h=Q(658),D=Q(493),N=Q(722),C=Q(714),R=Q(2371);class U{constructor(){this._dirty=!0,this._tempColor=new N.c(0,0,0,0),this._globalCurve=new N.c(0,0,0,0),this._highlightsCurve=new N.c(0,0,0,0),this._midtonesCurve=new N.c(0,0,0,0),this._shadowsCurve=new N.c(0,0,0,0),this._positiveCurve=new N.c(0,0,0,0),this._negativeCurve=new N.c(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(a){this._globalHue=a,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(a){this._globalDensity=a,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(a){this._globalSaturation=a,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(a){this._globalExposure=a,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(a){this._highlightsHue=a,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(a){this._highlightsDensity=a,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(a){this._highlightsSaturation=a,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(a){this._highlightsExposure=a,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(a){this._midtonesHue=a,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(a){this._midtonesDensity=a,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(a){this._midtonesSaturation=a,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(a){this._midtonesExposure=a,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(a){this._shadowsHue=a,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(a){this._shadowsDensity=a,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(a){this._shadowsSaturation=a,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(a){this._shadowsExposure=a,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";a._dirty&&(a._dirty=!1,a._getColorGradingDataToRef(a._globalHue,a._globalDensity,a._globalSaturation,a._globalExposure,a._globalCurve),a._getColorGradingDataToRef(a._highlightsHue,a._highlightsDensity,a._highlightsSaturation,a._highlightsExposure,a._tempColor),a._tempColor.multiplyToRef(a._globalCurve,a._highlightsCurve),a._getColorGradingDataToRef(a._midtonesHue,a._midtonesDensity,a._midtonesSaturation,a._midtonesExposure,a._tempColor),a._tempColor.multiplyToRef(a._globalCurve,a._midtonesCurve),a._getColorGradingDataToRef(a._shadowsHue,a._shadowsDensity,a._shadowsSaturation,a._shadowsExposure,a._tempColor),a._tempColor.multiplyToRef(a._globalCurve,a._shadowsCurve),a._highlightsCurve.subtractToRef(a._midtonesCurve,a._positiveCurve),a._midtonesCurve.subtractToRef(a._shadowsCurve,a._negativeCurve)),x&&(x.setFloat4(Q,a._positiveCurve.r,a._positiveCurve.g,a._positiveCurve.b,a._positiveCurve.a),x.setFloat4(s,a._midtonesCurve.r,a._midtonesCurve.g,a._midtonesCurve.b,a._midtonesCurve.a),x.setFloat4(h,a._negativeCurve.r,a._negativeCurve.g,a._negativeCurve.b,a._negativeCurve.a))}_getColorGradingDataToRef(a,x,Q,s,h){null!=a&&(a=U._Clamp(a,0,360),x=U._Clamp(x,-100,100),Q=U._Clamp(Q,-100,100),s=U._Clamp(s,-100,100),x=U._ApplyColorGradingSliderNonlinear(x),x*=.5,s=U._ApplyColorGradingSliderNonlinear(s),x<0&&(x*=-1,a=(a+180)%360),U._FromHSBToRef(a,x,50+.25*s,h),h.scaleToRef(2,h),h.a=1+.01*Q)}static _ApplyColorGradingSliderNonlinear(a){a/=100;let x=Math.abs(a);return x=Math.pow(x,2),a<0&&(x*=-1),x*=100,x}static _FromHSBToRef(a,x,Q,s){let h=U._Clamp(a,0,360);const D=U._Clamp(x/100,0,1),N=U._Clamp(Q/100,0,1);if(0===D)s.r=N,s.g=N,s.b=N;else{h/=60;const a=Math.floor(h),x=h-a,Q=N*(1-D),C=N*(1-D*x),R=N*(1-D*(1-x));switch(a){case 0:s.r=N,s.g=R,s.b=Q;break;case 1:s.r=C,s.g=N,s.b=Q;break;case 2:s.r=Q,s.g=N,s.b=R;break;case 3:s.r=Q,s.g=C,s.b=N;break;case 4:s.r=R,s.g=Q,s.b=N;break;default:s.r=N,s.g=Q,s.b=C}}s.a=1}static _Clamp(a,x,Q){return Math.min(Math.max(a,x),Q)}clone(){return C.e.Clone((()=>new U),this)}serialize(){return C.e.Serialize(this)}static Parse(a){return C.e.Parse((()=>new U),a,null,null)}}U.PrepareUniforms=R.c,(0,s.c)([(0,h.I)()],U.prototype,"_globalHue",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_globalDensity",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_globalSaturation",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_globalExposure",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_highlightsHue",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_highlightsDensity",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_highlightsSaturation",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_highlightsExposure",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_midtonesHue",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_midtonesDensity",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_midtonesSaturation",void 0),(0,s.c)([(0,h.I)()],U.prototype,"_midtonesExposure",void 0),C.e._ColorCurvesParser=U.Parse;var W=Q(626),v=Q(2377),e=Q(619);class p{constructor(){this.colorCurves=new U,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=p.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new N.c(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=p.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.onUpdateParameters=new D.e}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(a){this._colorCurvesEnabled!==a&&(this._colorCurvesEnabled=a,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(a){this._colorGradingTexture!==a&&(this._colorGradingTexture=a,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(a){this._colorGradingEnabled!==a&&(this._colorGradingEnabled=a,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(a){this._colorGradingWithGreenDepth!==a&&(this._colorGradingWithGreenDepth=a,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(a){this._colorGradingBGR!==a&&(this._colorGradingBGR=a,this._updateParameters())}get exposure(){return this._exposure}set exposure(a){this._exposure!==a&&(this._exposure=a,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(a){this._toneMappingEnabled!==a&&(this._toneMappingEnabled=a,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(a){this._toneMappingType!==a&&(this._toneMappingType=a,this._updateParameters())}get contrast(){return this._contrast}set contrast(a){this._contrast!==a&&(this._contrast=a,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(a){this.vignetteCenterY=a}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(a){this.vignetteCenterX=a}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(a){this._vignetteBlendMode!==a&&(this._vignetteBlendMode=a,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(a){this._vignetteEnabled!==a&&(this._vignetteEnabled=a,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(a){this._ditheringEnabled!==a&&(this._ditheringEnabled=a,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(a){this._ditheringIntensity!==a&&(this._ditheringIntensity=a,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(a){this._skipFinalColorClamp!==a&&(this._skipFinalColorClamp=a,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(a){this._applyByPostProcess!==a&&(this._applyByPostProcess=a,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(a){this._isEnabled!==a&&(this._isEnabled=a,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(a){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return a.VIGNETTE=!1,a.TONEMAPPING=0,a.CONTRAST=!1,a.EXPOSURE=!1,a.COLORCURVES=!1,a.COLORGRADING=!1,a.COLORGRADING3D=!1,a.DITHER=!1,a.IMAGEPROCESSING=!1,a.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(a.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(a.VIGNETTE=this.vignetteEnabled,a.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===p._VIGNETTEMODE_MULTIPLY,a.VIGNETTEBLENDMODEOPAQUE=!a.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case p.TONEMAPPING_KHR_PBR_NEUTRAL:a.TONEMAPPING=3;break;case p.TONEMAPPING_ACES:a.TONEMAPPING=2;break;default:a.TONEMAPPING=1}else a.TONEMAPPING=0;a.CONTRAST=1!==this.contrast,a.EXPOSURE=1!==this.exposure,a.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,a.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,a.COLORGRADING?a.COLORGRADING3D=this.colorGradingTexture.is3D:a.COLORGRADING3D=!1,a.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,a.SAMPLER3DBGRMAP=this.colorGradingBGR,a.DITHER=this._ditheringEnabled,a.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,a.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,a.IMAGEPROCESSING=a.VIGNETTE||!!a.TONEMAPPING||a.CONTRAST||a.EXPOSURE||a.COLORCURVES||a.COLORGRADING||a.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(a,x){if(this._colorCurvesEnabled&&this.colorCurves&&U.Bind(this.colorCurves,a),this._vignetteEnabled||this._ditheringEnabled){const Q=1/a.getEngine().getRenderWidth(),s=1/a.getEngine().getRenderHeight();if(a.setFloat2("vInverseScreenSize",Q,s),this._ditheringEnabled&&a.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const h=null!=x?x:s/Q;let D=Math.tan(.5*this.vignetteCameraFov),N=D*h;const C=Math.sqrt(N*D);N=(0,W.o)(N,C,this.vignetteStretch),D=(0,W.o)(D,C,this.vignetteStretch),a.setFloat4("vignetteSettings1",N,D,-N*this.vignetteCenterX,-D*this.vignetteCenterY);const R=-2*this.vignetteWeight;a.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,R)}}if(a.setFloat("exposureLinear",this.exposure),a.setFloat("contrast",this.contrast),this.colorGradingTexture){a.setTexture("txColorTransform",this.colorGradingTexture);const x=this.colorGradingTexture.getSize().height;a.setFloat4("colorTransformSettings",(x-1)/x,.5/x,x,this.colorGradingTexture.level)}}clone(){return C.e.Clone((()=>new p),this)}serialize(){return C.e.Serialize(this)}static Parse(a){const x=C.e.Parse((()=>new p),a,null,null);return void 0!==a.vignetteCentreX&&(x.vignetteCenterX=a.vignetteCentreX),void 0!==a.vignetteCentreY&&(x.vignetteCenterY=a.vignetteCentreY),x}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}p.TONEMAPPING_STANDARD=0,p.TONEMAPPING_ACES=1,p.TONEMAPPING_KHR_PBR_NEUTRAL=2,p.PrepareUniforms=v.i,p.PrepareSamplers=v.e,p._VIGNETTEMODE_MULTIPLY=0,p._VIGNETTEMODE_OPAQUE=1,(0,s.c)([(0,h.i)()],p.prototype,"colorCurves",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_colorCurvesEnabled",void 0),(0,s.c)([(0,h.D)("colorGradingTexture")],p.prototype,"_colorGradingTexture",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_colorGradingEnabled",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_colorGradingWithGreenDepth",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_colorGradingBGR",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_exposure",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_toneMappingEnabled",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_toneMappingType",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_contrast",void 0),(0,s.c)([(0,h.I)()],p.prototype,"vignetteStretch",void 0),(0,s.c)([(0,h.I)()],p.prototype,"vignetteCenterX",void 0),(0,s.c)([(0,h.I)()],p.prototype,"vignetteCenterY",void 0),(0,s.c)([(0,h.I)()],p.prototype,"vignetteWeight",void 0),(0,s.c)([(0,h.m)()],p.prototype,"vignetteColor",void 0),(0,s.c)([(0,h.I)()],p.prototype,"vignetteCameraFov",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_vignetteBlendMode",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_vignetteEnabled",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_ditheringEnabled",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_ditheringIntensity",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_skipFinalColorClamp",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_applyByPostProcess",void 0),(0,s.c)([(0,h.I)()],p.prototype,"_isEnabled",void 0),C.e._ImageProcessingConfigurationParser=p.Parse,(0,e.g)("BABYLON.ImageProcessingConfiguration",p)},2433:(a,x,Q)=>{Q.r(x),Q.d(x,{Dispose:()=>e,DumpData:()=>v,DumpDataAsync:()=>W,DumpFramebuffer:()=>U,DumpTools:()=>p});var s=Q(2342),h=Q(496),D=Q(699),N=Q(529);let C,R=null;async function U(a,x,Q,s){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",D=arguments.length>5?arguments[5]:void 0,N=arguments.length>6?arguments[6]:void 0;const C=await Q.readPixels(0,0,a,x);v(a,x,new Uint8Array(C.buffer),s,h,D,!0,void 0,N)}function W(a,x,Q){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6],C=arguments.length>7?arguments[7]:void 0;return new Promise((R=>{v(a,x,Q,(a=>R(a)),s,h,D,N,C)}))}function v(a,x,U,W){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",p=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],H=arguments.length>7&&void 0!==arguments[7]&&arguments[7],d=arguments.length>8?arguments[8]:void 0;(async function(){return R||(R=new Promise(((a,x)=>{let h,D=null;const R={Mk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Q.e(22).then(Q.bind(Q,12158)).then((U=>{let{ThinEngine:W}=U;try{h=new OffscreenCanvas(100,100),D=new W(h,!1,R)}catch(p){h=document.createElement("canvas"),D=new W(h,!1,R)}N.d.Instances.pop(),N.d.OnEnginesDisposedObservable.add((a=>{D&&a!==D&&!D.u&&0===N.d.Instances.length&&e()})),D.getCaps().parallelShaderCompile=void 0;const v=new s.c(D);Q.e(33).then(Q.bind(Q,13145)).then((Q=>{let{passPixelShader:N}=Q;if(!D)return void x("Engine is not defined");const R=new s.e({Gi:D,name:N.name,fragmentShader:N.shader,samplerNames:["textureSampler"]});C={canvas:h,Gi:D,renderer:v,wrapper:R},a(C)}))})).catch(x)}))),await R})().then((Q=>{if(Q.Gi.setSize(a,x,!0),U instanceof Float32Array){const a=new Uint8Array(U.length);let x=U.length;for(;x--;){const Q=U[x];a[x]=Math.round(255*(0,D.c)(Q))}U=a}const s=Q.Gi.createRawTexture(U,a,x,5,!1,!j,1);Q.renderer.setViewport(),Q.renderer.applyEffectWrapper(Q.wrapper),Q.wrapper.effect._bindTexture("textureSampler",s),Q.renderer.draw(),H?h.g.ToBlob(Q.canvas,(a=>{const x=new FileReader;x.onload=a=>{const x=a.target.result;W&&W(x)},x.readAsArrayBuffer(a)}),v,d):h.g.EncodeScreenshotCanvasData(Q.canvas,W,v,p,d),s.dispose()}))}function e(){var a;C?(C.wrapper.dispose(),C.renderer.dispose(),C.Gi.dispose()):null===(a=R)||void 0===a||a.then((a=>{a.wrapper.dispose(),a.renderer.dispose(),a.Gi.dispose()}));R=null,C=null}const p={DumpData:v,DumpDataAsync:W,DumpFramebuffer:U,Dispose:e};h.g.DumpData=v,h.g.DumpDataAsync=W,h.g.DumpFramebuffer=U},2362:(a,x,Q)=>{Q.d(x,{d:()=>j,f:()=>i,g:()=>k,j:()=>F});var s=Q(496),h=Q(679),D=Q(699),N=Q(2272),C=Q(594),R=Q(2323),U=(Q(2366),Q(2338)),W=Q(507);Q(2424),Q(2429),Q(2433);const v="image/png",e=2,p=[134,22,135,150,246,214,150,54];function j(a){const x=new DataView(a.buffer,a.byteOffset,a.byteLength);let Q=0;for(let N=0;N<p.length;N++)if(x.getUint8(Q++)!==p[N])return W.d.Error("Not a babylon environment map"),null;let s="",h=0;for(;h=x.getUint8(Q++);)s+=String.fromCharCode(h);let D=JSON.parse(s);return D=H(D),D._i&&(D._i.specularDataPosition=Q,D._i.lodGenerationScale=D._i.lodGenerationScale||.8),D}function H(a){if(a.version>e)throw new Error(`Unsupported babylon environment map version "${a.version}". Latest supported version is "${e}".`);return 2===a.version?a:a={...a,version:2,imageType:v}}function d(a,x){const Q=(x=H(x))._i;let s=Math.log2(x.width);if(s=Math.round(s)+1,Q.mipmaps.length!==6*s)throw new Error(`Unsupported specular mipmaps number "${Q.mipmaps.length}"`);const h=new Array(s);for(let D=0;D<s;D++){h[D]=new Array(6);for(let x=0;x<6;x++){const s=Q.mipmaps[6*D+x];h[D][x]=new Uint8Array(a.buffer,a.byteOffset+Q.specularDataPosition+s.position,s.length)}}return h}function i(a,x,Q){const s=(Q=H(Q))._i;if(!s)return Promise.resolve();a._lodGenerationScale=s.lodGenerationScale;return y(a,d(x,Q),Q.imageType)}function Z(a,x,Q,s,h,D,N,C,R,U,W){return new Promise(((v,e)=>{if(Q){const Q=x.createTexture(null,!0,!0,null,1,null,(a=>{e(a)}),a);null===s||void 0===s||s.onEffectCreatedObservable.addOnce((C=>{C.executeWhenCompiled((()=>{s.externalTextureSamplerBinding=!0,s.onApply=s=>{s._bindTexture("textureSampler",Q),s.setFloat2("scale",1,x._features.needsInvertingBitmap&&a instanceof ImageBitmap?-1:1)},x.scenes.length&&(x.scenes[0].postProcessManager.directRender([s],U,!0,D,N),x.restoreDefaultFramebuffer(),Q.dispose(),URL.revokeObjectURL(h),v())}))}))}else{if(x._uploadImageToTexture(W,a,D,N),C){const Q=R[N];Q&&x._uploadImageToTexture(Q._texture,a,D,0)}v()}}))}async function y(a,x){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:v;if(!s.g.IsExponentOfTwo(a.width))throw new Error("Texture size must be a power of two");const N=(0,D.k)(a.width)+1,W=a.getEngine();let e=!1,p=!1,j=null,H=null,d=null;const i=W.getCaps();a.format=5,a.type=0,a.generateMipMaps=!0,a._cachedAnisotropicFilteringLevel=null,W.updateTextureSamplingMode(3,a),i.textureLOD?W._features.supportRenderAndCopyToLodForFloatTextures?i.textureHalfFloatRender&&i.textureHalfFloatLinearFiltering?(e=!0,a.type=2):i.textureFloatRender&&i.textureFloatLinearFiltering&&(e=!0,a.type=1):e=!1:(e=!1,p=!0,d={});let y=0;if(e)W.isWebGPU?(y=1,await Q.e(25).then(Q.bind(Q,13159))):await Q.e(23).then(Q.bind(Q,13164)),j=new U.e("rgbdDecode","rgbdDecode",null,null,1,null,3,W,!1,void 0,a.type,void 0,null,!1,void 0,y),a._isRGBD=!1,a.invertY=!1,H=W.createRenderTargetCubeTexture(a.width,{generateDepthBuffer:!1,generateMipMaps:!0,generateStencilBuffer:!1,samplingMode:3,type:a.type,format:5});else if(a._isRGBD=!0,a.invertY=!0,p){const x=3,Q=a._lodGenerationScale,s=a._lodGenerationOffset;for(let h=0;h<x;h++){const D=(N-1)*Q+s,U=s+(D-s)*(1-h/(x-1)),v=Math.round(Math.min(Math.max(U,0),D)),e=new C.c(W,2);e.isCube=!0,e.invertY=!0,e.generateMipMaps=!1,W.updateTextureSamplingMode(2,e);const p=new R.c(null);switch(p._isCube=!0,p._texture=e,d[v]=p,h){case 0:a._lodTextureLow=p;break;case 1:a._lodTextureMid=p;break;case 2:a._lodTextureHigh=p}}}const k=[];for(let Q=0;Q<x.length;Q++)for(let s=0;s<6;s++){const D=x[Q][s],N=new Blob([D],{type:h}),C=URL.createObjectURL(N);let R;if(W._features.forceBitmapOverHTMLImageElement)R=W.createImageBitmap(N,{premultiplyAlpha:"none"}).then((x=>Z(x,W,e,j,C,s,Q,p,d,H,a)));else{const x=new Image;x.src=C,R=new Promise(((h,D)=>{x.onload=()=>{Z(x,W,e,j,C,s,Q,p,d,H,a).then((()=>h())).catch((a=>{D(a)}))},x.onerror=a=>{D(a)}}))}k.push(R)}if(x.length<N){let Q;const s=Math.pow(2,N-1-x.length),h=s*s*4;switch(a.type){case 0:Q=new Uint8Array(h);break;case 2:Q=new Uint16Array(h);break;case 1:Q=new Float32Array(h)}for(let D=x.length;D<N;D++)for(let x=0;x<6;x++)W._uploadArrayBufferViewToTexture(a,Q,x,D)}return Promise.all(k).then((()=>{H&&(W._releaseTexture(a),H._swapAndDie(a)),j&&j.dispose(),p&&(a._lodTextureHigh&&a._lodTextureHigh._texture&&(a._lodTextureHigh._texture.isReady=!0),a._lodTextureMid&&a._lodTextureMid._texture&&(a._lodTextureMid._texture.isReady=!0),a._lodTextureLow&&a._lodTextureLow._texture&&(a._lodTextureLow._texture.isReady=!0))}))}function k(a,x){const Q=(x=H(x)).irradiance;if(!Q)return;const s=new N.f;h.o.FromArrayToRef(Q.x,0,s.x),h.o.FromArrayToRef(Q.y,0,s.y),h.o.FromArrayToRef(Q.z,0,s.z),h.o.FromArrayToRef(Q.xx,0,s.xx),h.o.FromArrayToRef(Q.yy,0,s.yy),h.o.FromArrayToRef(Q.zz,0,s.zz),h.o.FromArrayToRef(Q.yz,0,s.yz),h.o.FromArrayToRef(Q.zx,0,s.zx),h.o.FromArrayToRef(Q.xy,0,s.xy),a._sphericalPolynomial=s}function F(a,x,Q,s,h){const D=y(a.getEngine().createRawCubeTexture(null,a.width,a.format,a.type,a.generateMipMaps,a.invertY,a.samplingMode,a._compression),x).then((()=>a));return a.onRebuildCallback=a=>({proxy:D,isReady:!0,isAsync:!0}),a._source=13,a._bufferViewArrayArray=x,a._lodGenerationScale=s,a._lodGenerationOffset=h,a._sphericalPolynomial=Q,y(a,x).then((()=>(a.isReady=!0,a)))}},2412:(a,x,Q)=>{Q.d(x,{b:()=>h});var s=Q(517);class h{get min(){return this._min}get max(){return this._max}get average(){return this._average}get lastSecAverage(){return this._lastSecAverage}get current(){return this._current}get total(){return this._totalAccumulated}get count(){return this._totalValueCount}constructor(){this._startMonitoringTime=0,this._min=0,this._max=0,this._average=0,this._lastSecAverage=0,this._current=0,this._totalValueCount=0,this._totalAccumulated=0,this._lastSecAccumulated=0,this._lastSecTime=0,this._lastSecValueCount=0}fetchNewFrame(){this._totalValueCount++,this._current=0,this._lastSecValueCount++}addCount(a,x){h.Enabled&&(this._current+=a,x&&this._fetchResult())}beginMonitoring(){h.Enabled&&(this._startMonitoringTime=s.b.Now)}endMonitoring(){let a=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!h.Enabled)return;a&&this.fetchNewFrame();const x=s.b.Now;this._current=x-this._startMonitoringTime,a&&this._fetchResult()}Ei(){this._fetchResult()}_fetchResult(){this._totalAccumulated+=this._current,this._lastSecAccumulated+=this._current,this._min=Math.min(this._min,this._current),this._max=Math.max(this._max,this._current),this._average=this._totalAccumulated/this._totalValueCount;const a=s.b.Now;a-this._lastSecTime>1e3&&(this._lastSecAverage=this._lastSecAccumulated/this._lastSecValueCount,this._lastSecTime=a,this._lastSecAccumulated=0,this._lastSecValueCount=0)}}h.Enabled=!0},2424:(a,x,Q)=>{Q.d(x,{b:()=>D});var s=Q(2338),h=Q(2309);class D{static ExpandRGBDTexture(a){const x=a._texture;if(!x||!a.isRGBD)return;const h=x.getEngine(),D=h.getCaps(),N=x.isReady;let C=!1;D.textureHalfFloatRender&&D.textureHalfFloatLinearFiltering?(C=!0,x.type=2):D.textureFloatRender&&D.textureFloatLinearFiltering&&(C=!0,x.type=1),C&&(x.isReady=!1,x._isRGBD=!1,x.invertY=!1);const R=async()=>{const D=h.isWebGPU,N=D?1:0;x.isReady=!1,D?await Promise.all([Q.e(25).then(Q.bind(Q,13159)),Q.e(26).then(Q.bind(Q,13170))]):await Promise.all([Q.e(23).then(Q.bind(Q,13164)),Q.e(24).then(Q.bind(Q,13175))]);const C=new s.e("rgbdDecode","rgbdDecode",null,null,1,null,3,h,!1,void 0,x.type,void 0,null,!1,void 0,N);C.externalTextureSamplerBinding=!0;const R=h.createRenderTargetTexture(x.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:x.samplingMode,type:x.type,format:5});C.onEffectCreatedObservable.addOnce((Q=>{Q.executeWhenCompiled((()=>{C.onApply=a=>{a._bindTexture("textureSampler",x),a.setFloat2("scale",1,1)},a.va().postProcessManager.directRender([C],R,!0),h.restoreDefaultFramebuffer(),h._releaseTexture(x),C&&C.dispose(),R._swapAndDie(x),x.isReady=!0}))}))};C&&(N?R():a.onLoadObservable.addOnce(R))}static EncodeTextureToRGBD(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,h.d)("rgbdEncode",a,x,Q,1,5)}}},2417:(a,x,Q)=>{Q.d(x,{b:()=>s});class s{static get UniqueId(){const a=this._UniqueIdCounter;return this._UniqueIdCounter++,a}}s._UniqueIdCounter=1},2405:(a,x,Q)=>{Q.d(x,{d:()=>s});class s{}s._IsPickingAvailable=!1},2366:(a,x,Q)=>{Q.d(x,{d:()=>aa});var s=Q(496),h=Q(517),D=Q(493),N=Q(671);class C{constructor(){this._count=0,this._data={}}p(a){this.clear(),a.forEach(((a,x)=>this.add(a,x)))}get(a){const x=this._data[a];if(void 0!==x)return x}getOrAddWithFactory(a,x){let Q=this.get(a);return void 0!==Q||(Q=x(a),Q&&this.add(a,Q)),Q}getOrAdd(a,x){const Q=this.get(a);return void 0!==Q?Q:(this.add(a,x),x)}contains(a){return void 0!==this._data[a]}add(a,x){return void 0===this._data[a]&&(this._data[a]=x,++this._count,!0)}set(a,x){return void 0!==this._data[a]&&(this._data[a]=x,!0)}getAndRemove(a){const x=this.get(a);return void 0!==x?(delete this._data[a],--this._count,x):null}remove(a){return!!this.contains(a)&&(delete this._data[a],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(a){for(const x in this._data){a(x,this._data[x])}}first(a){for(const x in this._data){const Q=a(x,this._data[x]);if(Q)return Q}return null}}var R=Q(634),U=Q(679),W=Q(2368),v=Q(827),e=Q(824);class p{constructor(a,x,Q,s,h,D){this.source=a,this.pointerX=x,this.pointerY=Q,this.meshUnderPointer=s,this.sourceEvent=h,this.additionalData=D}static CreateNew(a,x,Q){const s=a.va();return new p(a,s.pointerX,s.pointerY,s.meshUnderPointer||a,x,Q)}static CreateNewFromSprite(a,x,Q,s){return new p(a,x.pointerX,x.pointerY,x.meshUnderPointer,Q,s)}static CreateNewFromScene(a,x){return new p(null,a.pointerX,a.pointerY,a.meshUnderPointer,x)}static CreateNewFromPrimitive(a,x,Q,s){return new p(a,x.x,x.y,null,Q,s)}}var j=Q(2334),H=Q(2336),d=Q(863),i=Q(499),Z=Q(529),y=Q(519),k=Q(2381);class F{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const a in F.Triggers)if(Object.prototype.hasOwnProperty.call(F.Triggers,a))return!0;return!1}static get HasPickTriggers(){for(const a in F.Triggers)if(Object.prototype.hasOwnProperty.call(F.Triggers,a)){const x=parseInt(a);if(x>=1&&x<=7)return!0}return!1}static HasSpecificTrigger(a){for(const x in F.Triggers)if(Object.prototype.hasOwnProperty.call(F.Triggers,x)){if(parseInt(x)===a)return!0}return!1}}F.Triggers={};var g,l,r,J,K,E,G,T=Q(2388);!function(a){a[a.Generic=0]="Generic",a[a.Keyboard=1]="Keyboard",a[a.Mouse=2]="Mouse",a[a.Touch=3]="Touch",a[a.DualShock=4]="DualShock",a[a.Xbox=5]="Xbox",a[a.Switch=6]="Switch",a[a.DualSense=7]="DualSense"}(g||(g={})),function(a){a[a.Horizontal=0]="Horizontal",a[a.Vertical=1]="Vertical",a[a.LeftClick=2]="LeftClick",a[a.MiddleClick=3]="MiddleClick",a[a.RightClick=4]="RightClick",a[a.BrowserBack=5]="BrowserBack",a[a.BrowserForward=6]="BrowserForward",a[a.MouseWheelX=7]="MouseWheelX",a[a.MouseWheelY=8]="MouseWheelY",a[a.MouseWheelZ=9]="MouseWheelZ",a[a.Move=12]="Move"}(l||(l={})),function(a){a[a.Horizontal=0]="Horizontal",a[a.Vertical=1]="Vertical",a[a.LeftClick=2]="LeftClick",a[a.MiddleClick=3]="MiddleClick",a[a.RightClick=4]="RightClick",a[a.BrowserBack=5]="BrowserBack",a[a.BrowserForward=6]="BrowserForward",a[a.MouseWheelX=7]="MouseWheelX",a[a.MouseWheelY=8]="MouseWheelY",a[a.MouseWheelZ=9]="MouseWheelZ",a[a.DeltaHorizontal=10]="DeltaHorizontal",a[a.DeltaVertical=11]="DeltaVertical"}(r||(r={})),function(a){a[a.Cross=0]="Cross",a[a.Circle=1]="Circle",a[a.Square=2]="Square",a[a.Triangle=3]="Triangle",a[a.L1=4]="L1",a[a.R1=5]="R1",a[a.L2=6]="L2",a[a.R2=7]="R2",a[a.Share=8]="Share",a[a.Options=9]="Options",a[a.L3=10]="L3",a[a.R3=11]="R3",a[a.DPadUp=12]="DPadUp",a[a.DPadDown=13]="DPadDown",a[a.DPadLeft=14]="DPadLeft",a[a.DPadRight=15]="DPadRight",a[a.Home=16]="Home",a[a.TouchPad=17]="TouchPad",a[a.LStickXAxis=18]="LStickXAxis",a[a.LStickYAxis=19]="LStickYAxis",a[a.RStickXAxis=20]="RStickXAxis",a[a.RStickYAxis=21]="RStickYAxis"}(J||(J={})),function(a){a[a.Cross=0]="Cross",a[a.Circle=1]="Circle",a[a.Square=2]="Square",a[a.Triangle=3]="Triangle",a[a.L1=4]="L1",a[a.R1=5]="R1",a[a.L2=6]="L2",a[a.R2=7]="R2",a[a.Create=8]="Create",a[a.Options=9]="Options",a[a.L3=10]="L3",a[a.R3=11]="R3",a[a.DPadUp=12]="DPadUp",a[a.DPadDown=13]="DPadDown",a[a.DPadLeft=14]="DPadLeft",a[a.DPadRight=15]="DPadRight",a[a.Home=16]="Home",a[a.TouchPad=17]="TouchPad",a[a.LStickXAxis=18]="LStickXAxis",a[a.LStickYAxis=19]="LStickYAxis",a[a.RStickXAxis=20]="RStickXAxis",a[a.RStickYAxis=21]="RStickYAxis"}(K||(K={})),function(a){a[a.A=0]="A",a[a.B=1]="B",a[a.X=2]="X",a[a.Y=3]="Y",a[a.LB=4]="LB",a[a.RB=5]="RB",a[a.LT=6]="LT",a[a.RT=7]="RT",a[a.Back=8]="Back",a[a.Start=9]="Start",a[a.LS=10]="LS",a[a.RS=11]="RS",a[a.DPadUp=12]="DPadUp",a[a.DPadDown=13]="DPadDown",a[a.DPadLeft=14]="DPadLeft",a[a.DPadRight=15]="DPadRight",a[a.Home=16]="Home",a[a.LStickXAxis=17]="LStickXAxis",a[a.LStickYAxis=18]="LStickYAxis",a[a.RStickXAxis=19]="RStickXAxis",a[a.RStickYAxis=20]="RStickYAxis"}(E||(E={})),function(a){a[a.B=0]="B",a[a.A=1]="A",a[a.Y=2]="Y",a[a.X=3]="X",a[a.L=4]="L",a[a.R=5]="R",a[a.ZL=6]="ZL",a[a.ZR=7]="ZR",a[a.Minus=8]="Minus",a[a.Plus=9]="Plus",a[a.LS=10]="LS",a[a.RS=11]="RS",a[a.DPadUp=12]="DPadUp",a[a.DPadDown=13]="DPadDown",a[a.DPadLeft=14]="DPadLeft",a[a.DPadRight=15]="DPadRight",a[a.Home=16]="Home",a[a.Capture=17]="Capture",a[a.LStickXAxis=18]="LStickXAxis",a[a.LStickYAxis=19]="LStickYAxis",a[a.RStickXAxis=20]="RStickXAxis",a[a.RStickYAxis=21]="RStickYAxis"}(G||(G={}));var L=Q(2397);class b{static CreateDeviceEvent(a,x,Q,s,h,D,N){switch(a){case g.Keyboard:return this._CreateKeyboardEvent(Q,s,h,D);case g.Mouse:if(Q===l.MouseWheelX||Q===l.MouseWheelY||Q===l.MouseWheelZ)return this._CreateWheelEvent(a,x,Q,s,h,D);case g.Touch:return this._CreatePointerEvent(a,x,Q,s,h,D,N);default:throw`Unable to generate event for device ${g[a]}`}}static _CreatePointerEvent(a,x,Q,s,h,D,N){const C=this._CreateMouseEvent(a,x,Q,s,h,D);a===g.Mouse?(C.deviceType=g.Mouse,C.pointerId=1,C.pointerType="mouse"):(C.deviceType=g.Touch,C.pointerId=N??x,C.pointerType="touch");let R=0;return R+=h.pollInput(a,x,l.LeftClick),R+=2*h.pollInput(a,x,l.RightClick),R+=4*h.pollInput(a,x,l.MiddleClick),C.buttons=R,Q===l.Move?C.type="pointermove":Q>=l.LeftClick&&Q<=l.RightClick&&(C.type=1===s?"pointerdown":"pointerup",C.button=Q-2),C}static _CreateWheelEvent(a,x,Q,s,h,D){const N=this._CreateMouseEvent(a,x,Q,s,h,D);switch(N.pointerId=1,N.type="wheel",N.deltaMode=L.b.DOM_DELTA_PIXEL,N.deltaX=0,N.deltaY=0,N.deltaZ=0,Q){case l.MouseWheelX:N.deltaX=s;break;case l.MouseWheelY:N.deltaY=s;break;case l.MouseWheelZ:N.deltaZ=s}return N}static _CreateMouseEvent(a,x,Q,s,h,D){const N=this._CreateEvent(D),C=h.pollInput(a,x,l.Horizontal),R=h.pollInput(a,x,l.Vertical);return D?(N.movementX=0,N.movementY=0,N.offsetX=N.movementX-D.getBoundingClientRect().x,N.offsetY=N.movementY-D.getBoundingClientRect().y):(N.movementX=h.pollInput(a,x,10),N.movementY=h.pollInput(a,x,11),N.offsetX=0,N.offsetY=0),this._CheckNonCharacterKeys(N,h),N.clientX=C,N.clientY=R,N.x=C,N.y=R,N.deviceType=a,N.deviceSlot=x,N.inputIndex=Q,N}static _CreateKeyboardEvent(a,x,Q,s){const h=this._CreateEvent(s);return this._CheckNonCharacterKeys(h,Q),h.deviceType=g.Keyboard,h.deviceSlot=0,h.inputIndex=a,h.type=1===x?"keydown":"keyup",h.key=String.fromCharCode(a),h.keyCode=a,h}static _CheckNonCharacterKeys(a,x){const Q=x.isDeviceAvailable(g.Keyboard),s=Q&&1===x.pollInput(g.Keyboard,0,18),h=Q&&1===x.pollInput(g.Keyboard,0,17),D=Q&&(1===x.pollInput(g.Keyboard,0,91)||1===x.pollInput(g.Keyboard,0,92)||1===x.pollInput(g.Keyboard,0,93)),N=Q&&1===x.pollInput(g.Keyboard,0,16);a.altKey=s,a.ctrlKey=h,a.metaKey=D,a.shiftKey=N}static _CreateEvent(a){const x={preventDefault:()=>{}};return x.target=a,x}}class Y{constructor(a,x,Q){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(a,x,((a,x,s,h)=>{const D=b.CreateDeviceEvent(a,x,s,h,this);Q(a,x,D)})):this._createDummyNativeInput()}pollInput(a,x,Q){return this._nativeInput.pollInput(a,x,Q)}isDeviceAvailable(a){return a===g.Mouse||a===g.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const q=Object.keys(l).length/2;class t{constructor(a,x,Q,h){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=s.g.IsSafari(),this._usingMacOS=(0,i.f)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=a=>{},this._keyboardUpEvent=a=>{},this._keyboardBlurEvent=a=>{},this._pointerMoveEvent=a=>{},this._pointerDownEvent=a=>{},this._pointerUpEvent=a=>{},this._pointerCancelEvent=a=>{},this._pointerWheelEvent=a=>{},this._pointerBlurEvent=a=>{},this._pointerMacOSChromeOutEvent=a=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,i.f)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,i.f)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=a=>{},this._gamepadDisconnectedEvent=a=>{},this._eventPrefix=s.g.GetPointerPrefix(a),this._engine=a,this._onDeviceConnected=x,this._onDeviceDisconnected=Q,this._onInputChanged=h,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOS&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(a,x,Q){const h=this._inputs[a][x];if(!h)throw`Unable to find device ${g[a]}`;a>=g.DualShock&&a<=g.DualSense&&this._updateDevice(a,x,Q);const D=h[Q];if(void 0===D)throw`Unable to find input ${Q} for device ${g[a]} in slot ${x}`;return Q===l.Move&&s.g.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),D}isDeviceAvailable(a){return void 0!==this._inputs[a]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const a=null===this||void 0===this?void 0:this._engine.getInputElement();if(a&&(!this._eventsAttached||this._elementToAttachTo!==a)){if(this._disableEvents(),this._inputs)for(const a of this._inputs)if(a)for(const x in a){const Q=a[+x];if(Q)for(let a=0;a<Q.length;a++)Q[a]=0}this._elementToAttachTo=a,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOS&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const a=navigator.getGamepads();for(const x of a)x&&this._addGamePad(x)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(g.Mouse,0,0,0)}_addGamePad(a){const x=this._getGamepadDeviceType(a.id),Q=a.index;this._gamepads=this._gamepads||new Array(a.index+1),this._registerDevice(x,Q,a.buttons.length+a.axes.length),this._gamepads[Q]=x}_addPointerDevice(a,x,Q,s){this._pointerActive||(this._pointerActive=!0),this._registerDevice(a,x,q);const h=this._inputs[a][x];h[0]=Q,h[1]=s}_registerDevice(a,x,Q){if(void 0===x)throw`Unable to register device ${g[a]} to undefined slot.`;if(this._inputs[a]||(this._inputs[a]={}),!this._inputs[a][x]){const s=new Array(Q);s.fill(0),this._inputs[a][x]=s,this._onDeviceConnected(a,x)}}_unregisterDevice(a,x){this._inputs[a][x]&&(delete this._inputs[a][x],this._onDeviceDisconnected(a,x))}_handleKeyActions(){this._keyboardDownEvent=a=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(g.Keyboard,0,255));const x=this._inputs[g.Keyboard][0];if(x){x[a.keyCode]=1;const Q=a;Q.inputIndex=a.keyCode,this._usingMacOS&&a.metaKey&&"Meta"!==a.key&&(this._metaKeys.includes(a.keyCode)||this._metaKeys.push(a.keyCode)),this._onInputChanged(g.Keyboard,0,Q)}},this._keyboardUpEvent=a=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(g.Keyboard,0,255));const x=this._inputs[g.Keyboard][0];if(x){x[a.keyCode]=0;const Q=a;if(Q.inputIndex=a.keyCode,this._usingMacOS&&"Meta"===a.key&&this._metaKeys.length>0){for(const a of this._metaKeys){const Q=b.CreateDeviceEvent(g.Keyboard,0,a,0,this,this._elementToAttachTo);x[a]=0,this._onInputChanged(g.Keyboard,0,Q)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(g.Keyboard,0,Q)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const a=this._inputs[g.Keyboard][0];for(let x=0;x<a.length;x++)if(0!==a[x]){a[x]=0;const Q=b.CreateDeviceEvent(g.Keyboard,0,x,0,this,this._elementToAttachTo);this._onInputChanged(g.Keyboard,0,Q)}this._usingMacOS&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,i.f)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let s=0;s<this._maxTouchPoints;s++)this._activeTouchIds[s]=-1;this._pointerMoveEvent=a=>{const x=this._getPointerType(a);let Q=x===g.Mouse?0:this._activeTouchIds.indexOf(a.pointerId);if(x===g.Touch&&-1===Q){const h=this._activeTouchIds.indexOf(-1);if(!(h>=0))return void s.g.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);Q=h,this._activeTouchIds[h]=a.pointerId,this._onDeviceConnected(x,Q)}this._inputs[x]||(this._inputs[x]={}),this._inputs[x][Q]||this._addPointerDevice(x,Q,a.clientX,a.clientY);const h=this._inputs[x][Q];if(h){const s=a;s.inputIndex=l.Move,h[l.Horizontal]=a.clientX,h[l.Vertical]=a.clientY,x===g.Touch&&0===h[l.LeftClick]&&(h[l.LeftClick]=1),void 0===a.pointerId&&(a.pointerId=this._mouseId),this._onInputChanged(x,Q,s),this._usingSafari||-1===a.button||(s.inputIndex=a.button+2,h[a.button+2]=h[a.button+2]?0:1,this._onInputChanged(x,Q,s))}},this._pointerDownEvent=a=>{const x=this._getPointerType(a);let Q=x===g.Mouse?0:a.pointerId;if(x===g.Touch){let x=this._activeTouchIds.indexOf(a.pointerId);if(-1===x&&(x=this._activeTouchIds.indexOf(-1)),!(x>=0))return void s.g.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);Q=x,this._activeTouchIds[x]=a.pointerId}this._inputs[x]||(this._inputs[x]={}),this._inputs[x][Q]?x===g.Touch&&this._onDeviceConnected(x,Q):this._addPointerDevice(x,Q,a.clientX,a.clientY);const h=this._inputs[x][Q];if(h){const s=h[l.Horizontal],N=h[l.Vertical];if(x===g.Mouse){if(void 0===a.pointerId&&(a.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(D){}}else if(a.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(a.pointerId)}catch(D){}h[l.Horizontal]=a.clientX,h[l.Vertical]=a.clientY,h[a.button+2]=1;const C=a;C.inputIndex=a.button+2,this._onInputChanged(x,Q,C),s===a.clientX&&N===a.clientY||(C.inputIndex=l.Move,this._onInputChanged(x,Q,C))}},this._pointerUpEvent=a=>{var x;const Q=this._getPointerType(a),s=Q===g.Mouse?0:this._activeTouchIds.indexOf(a.pointerId);if(Q===g.Touch){if(-1===s)return;this._activeTouchIds[s]=-1}const h=null===(x=this._inputs[Q])||void 0===x?void 0:x[s];if(h&&0!==h[a.button+2]){var D,N,C,R;const x=h[l.Horizontal],U=h[l.Vertical];h[l.Horizontal]=a.clientX,h[l.Vertical]=a.clientY,h[a.button+2]=0;const W=a;void 0===a.pointerId&&(a.pointerId=this._mouseId),x===a.clientX&&U===a.clientY||(W.inputIndex=l.Move,this._onInputChanged(Q,s,W)),W.inputIndex=a.button+2,Q===g.Mouse&&this._mouseId>=0&&null!==(D=(N=this._elementToAttachTo).hasPointerCapture)&&void 0!==D&&D.call(N,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):a.pointerId&&null!==(C=(R=this._elementToAttachTo).hasPointerCapture)&&void 0!==C&&C.call(R,a.pointerId)&&this._elementToAttachTo.releasePointerCapture(a.pointerId),this._onInputChanged(Q,s,W),Q===g.Touch&&this._onDeviceDisconnected(Q,s)}},this._pointerCancelEvent=a=>{if("mouse"===a.pointerType){var x,Q;const a=this._inputs[g.Mouse][0];this._mouseId>=0&&null!==(x=(Q=this._elementToAttachTo).hasPointerCapture)&&void 0!==x&&x.call(Q,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let x=l.LeftClick;x<=l.BrowserForward;x++)if(1===a[x]){a[x]=0;const Q=b.CreateDeviceEvent(g.Mouse,0,x,0,this,this._elementToAttachTo);this._onInputChanged(g.Mouse,0,Q)}}else{var s,h;const x=this._activeTouchIds.indexOf(a.pointerId);if(-1===x)return;null!==(s=(h=this._elementToAttachTo).hasPointerCapture)&&void 0!==s&&s.call(h,a.pointerId)&&this._elementToAttachTo.releasePointerCapture(a.pointerId),this._inputs[g.Touch][x][l.LeftClick]=0;const Q=b.CreateDeviceEvent(g.Touch,x,l.LeftClick,0,this,this._elementToAttachTo,a.pointerId);this._onInputChanged(g.Touch,x,Q),this._activeTouchIds[x]=-1,this._onDeviceDisconnected(g.Touch,x)}},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let a=!1;const x=function(){};try{const Q=Object.defineProperty({},"passive",{get:function(){a=!0}});this._elementToAttachTo.addEventListener("test",x,Q),this._elementToAttachTo.removeEventListener("test",x,Q)}catch(Q){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(g.Mouse)){var a,x;const Q=this._inputs[g.Mouse][0];this._mouseId>=0&&null!==(a=(x=this._elementToAttachTo).hasPointerCapture)&&void 0!==a&&a.call(x,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let a=l.LeftClick;a<=l.BrowserForward;a++)if(1===Q[a]){Q[a]=0;const x=b.CreateDeviceEvent(g.Mouse,0,a,0,this,this._elementToAttachTo);this._onInputChanged(g.Mouse,0,x)}}if(this.isDeviceAvailable(g.Touch)){const a=this._inputs[g.Touch];for(let x=0;x<this._activeTouchIds.length;x++){var Q,s,h;const D=this._activeTouchIds[x];if(null!==(Q=(s=this._elementToAttachTo).hasPointerCapture)&&void 0!==Q&&Q.call(s,D)&&this._elementToAttachTo.releasePointerCapture(D),-1!==D&&1===(null===(h=a[x])||void 0===h?void 0:h[l.LeftClick])){a[x][l.LeftClick]=0;const Q=b.CreateDeviceEvent(g.Touch,x,l.LeftClick,0,this,this._elementToAttachTo,D);this._onInputChanged(g.Touch,x,Q),this._activeTouchIds[x]=-1,this._onDeviceDisconnected(g.Touch,x)}}}},this._pointerWheelEvent=a=>{const x=g.Mouse;this._inputs[x]||(this._inputs[x]=[]),this._inputs[x][0]||(this._pointerActive=!0,this._registerDevice(x,0,q));const Q=this._inputs[x][0];if(Q){Q[l.MouseWheelX]=a.deltaX||0,Q[l.MouseWheelY]=a.deltaY||a.wheelDelta||0,Q[l.MouseWheelZ]=a.deltaZ||0;const s=a;void 0===a.pointerId&&(a.pointerId=this._mouseId),0!==Q[l.MouseWheelX]&&(s.inputIndex=l.MouseWheelX,this._onInputChanged(x,0,s)),0!==Q[l.MouseWheelY]&&(s.inputIndex=l.MouseWheelY,this._onInputChanged(x,0,s)),0!==Q[l.MouseWheelZ]&&(s.inputIndex=l.MouseWheelZ,this._onInputChanged(x,0,s))}},this._usingMacOS&&this._isUsingChromium&&(this._pointerMacOSChromeOutEvent=a=>{a.buttons>1&&this._pointerCancelEvent(a)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOSChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!a&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(g.Mouse)){const a=this._inputs[g.Mouse][0];a[l.MouseWheelX]=0,a[l.MouseWheelY]=0,a[l.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=a=>{this._addGamePad(a.gamepad)},this._gamepadDisconnectedEvent=a=>{if(this._gamepads){const x=this._getGamepadDeviceType(a.gamepad.id),Q=a.gamepad.index;this._unregisterDevice(x,Q),delete this._gamepads[Q]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(a,x,Q){const s=navigator.getGamepads()[x];if(s&&a===this._gamepads[x]){const h=this._inputs[a][x];Q>=s.buttons.length?h[Q]=s.axes[Q-s.buttons.length].valueOf():h[Q]=s.buttons[Q].value}}_getGamepadDeviceType(a){return-1!==a.indexOf("054c")?-1!==a.indexOf("0ce6")?g.DualSense:g.DualShock:-1!==a.indexOf("Xbox One")||-1!==a.search("Xbox 360")||-1!==a.search("xinput")?g.Xbox:-1!==a.indexOf("057e")?g.Switch:g.Generic}_getPointerType(a){let x=g.Mouse;return("touch"===a.pointerType||"pen"===a.pointerType||a.touches)&&(x=g.Touch),x}}class V{constructor(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=x,this.deviceSlot=Q,this.onInputChangedObservable=new D.e,this._deviceInputSystem=a}getInput(a){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,a)}}class f{constructor(a){this._registeredManagers=new Array,this._refCount=0,this.registerManager=a=>{for(let x=0;x<this._devices.length;x++){const Q=this._devices[x];for(const s in Q){const Q=+s;a._addDevice(new V(this._deviceInputSystem,x,Q))}}this._registeredManagers.push(a)},this.unregisterManager=a=>{const x=this._registeredManagers.indexOf(a);x>-1&&this._registeredManagers.splice(x,1)};const x=Object.keys(g).length/2;this._devices=new Array(x);const Q=(a,x)=>{this._devices[a]||(this._devices[a]=new Array),this._devices[a][x]||(this._devices[a][x]=x);for(const Q of this._registeredManagers){const s=new V(this._deviceInputSystem,a,x);Q._addDevice(s)}},s=(a,x)=>{var Q;null!==(Q=this._devices[a])&&void 0!==Q&&Q[x]&&delete this._devices[a][x];for(const s of this._registeredManagers)s._removeDevice(a,x)},h=(a,x,Q)=>{if(Q)for(const s of this._registeredManagers)s._onInputChanged(a,x,Q)};"undefined"!==typeof _native?this._deviceInputSystem=new Y(Q,s,h):this._deviceInputSystem=new t(a,Q,s,h)}dispose(){this._deviceInputSystem.dispose()}}class n{getDeviceSource(a,x){if(void 0===x){if(void 0===this._firstDevice[a])return null;x=this._firstDevice[a]}return this._devices[a]&&void 0!==this._devices[a][x]?this._devices[a][x]:null}getDeviceSources(a){return this._devices[a]?this._devices[a].filter((a=>!!a)):[]}constructor(a){const x=Object.keys(g).length/2;this._devices=new Array(x),this._firstDevice=new Array(x),this._engine=a,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new f(a)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new D.e((a=>{for(const x of this._devices)if(x)for(const Q of x)Q&&this.onDeviceConnectedObservable.notifyObserver(a,Q)})),this.onDeviceDisconnectedObservable=new D.e,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=a.Fi.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.Fi.remove(this._onDisposeObserver)}_addDevice(a){this._devices[a.deviceType]||(this._devices[a.deviceType]=new Array),this._devices[a.deviceType][a.deviceSlot]||(this._devices[a.deviceType][a.deviceSlot]=a,this._updateFirstDevices(a.deviceType)),this.onDeviceConnectedObservable.notifyObservers(a)}_removeDevice(a,x){var Q,s;const h=null===(Q=this._devices[a])||void 0===Q?void 0:Q[x];this.onDeviceDisconnectedObservable.notifyObservers(h),null!==(s=this._devices[a])&&void 0!==s&&s[x]&&delete this._devices[a][x],this._updateFirstDevices(a)}_onInputChanged(a,x,Q){var s,h;null===(s=this._devices[a])||void 0===s||null===(h=s[x])||void 0===h||h.onInputChangedObservable.notifyObservers(Q)}_updateFirstDevices(a){switch(a){case g.Keyboard:case g.Mouse:this._firstDevice[a]=0;break;case g.Touch:case g.DualSense:case g.DualShock:case g.Xbox:case g.Switch:case g.Generic:{delete this._firstDevice[a];const x=this._devices[a];if(x)for(let Q=0;Q<x.length;Q++)if(x[Q]){this._firstDevice[a]=Q;break}break}}}}var m=Q(2405);class S{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(a){this._singleClick=a}set doubleClick(a){this._doubleClick=a}set hasSwiped(a){this._hasSwiped=a}set ignore(a){this._ignore=a}}class z{constructor(a){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new U.n(0,0),this._previousStartingPointerPosition=new U.n(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=a||Z.d.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(a){return this._meshUnderPointerId[a]||null}get unTranslatedPointer(){return new U.n(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(a){this._pointerX=a}get pointerY(){return this._pointerY}set pointerY(a){this._pointerY=a}_updatePointerPosition(a){const x=this._scene.getEngine().getInputElementClientRect();x&&(this._pointerX=a.clientX-x.left,this._pointerY=a.clientY-x.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(a,x){const Q=this._scene,s=Q.getEngine(),h=s.getInputElement();h&&(h.tabIndex=s.canvasTabIndex,Q.doNotHandleCursors||(h.style.cursor=Q.defaultCursor)),this._setCursorAndPointerOverMesh(a,x,Q);for(const R of Q._pointerMoveStage){var D;const Q=!(null===(D=a=a||this._pickMove(x))||void 0===D||!D.pickedMesh);a=R.action(this._unTranslatedPointerX,this._unTranslatedPointerY,a,Q,h)}const N=x.inputIndex>=l.MouseWheelX&&x.inputIndex<=l.MouseWheelZ?k.c.POINTERWHEEL:k.c.POINTERMOVE;let C;Q.onPointerMove&&(a=a||this._pickMove(x),Q.onPointerMove(x,a,N)),a?(C=new k.e(N,x,a),this._setRayOnPointerInfo(a,x)):(C=new k.e(N,x,null,this),this._movePointerInfo=C),Q.onPointerObservable.hasObservers()&&Q.onPointerObservable.notifyObservers(C,N)}_setRayOnPointerInfo(a,x){const Q=this._scene;a&&m.d._IsPickingAvailable&&(a.ray||(a.ray=Q.createPickingRay(x.offsetX,x.offsetY,U.e.Identity(),Q.activeCamera)))}_addCameraPointerObserver(a,x){return this._cameraObserverCount++,this._scene.onPointerObservable.add(a,x)}_removeCameraPointerObserver(a){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(a)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(a,x,Q){const s=this._scene,h=new k.d(Q,x,this._unTranslatedPointerX,this._unTranslatedPointerY);return a&&(h.originalPickingInfo=a,h.ray=a.ray,"xr-near"===x.pointerType&&a.originMesh&&(h.nearInteractionPickingInfo=a)),s.onPrePointerObservable.notifyObservers(h,Q),!!h.skipOnPointerObservable}_pickMove(a){const x=this._scene,Q=x.Gk(this._unTranslatedPointerX,this._unTranslatedPointerY,x.pointerMovePredicate,x.pointerMoveFastCheck,x.cameraToUseForPointers,x.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(Q,a,x),Q}_setCursorAndPointerOverMesh(a,x,Q){const s=Q.getEngine().getInputElement();if(null!==a&&void 0!==a&&a.pickedMesh){if(this.setPointerOverMesh(a.pickedMesh,x.pointerId,a,x),!Q.doNotHandleCursors&&s&&this._pointerOverMesh){const a=this._pointerOverMesh._getActionManagerForTrigger();a&&a.hasPointerTriggers&&(s.style.cursor=a.hoverCursor||Q.hoverCursor)}}else this.setPointerOverMesh(null,x.pointerId,a,x)}simulatePointerMove(a,x){const Q=new PointerEvent("pointermove",x);Q.inputIndex=l.Move,this._checkPrePointerObservable(a,Q,k.c.POINTERMOVE)||this._processPointerMove(a,Q)}simulatePointerDown(a,x){const Q=new PointerEvent("pointerdown",x);Q.inputIndex=Q.button+2,this._checkPrePointerObservable(a,Q,k.c.POINTERDOWN)||this._processPointerDown(a,Q)}_processPointerDown(a,x){var Q;const s=this._scene;if(null!==(Q=a)&&void 0!==Q&&Q.pickedMesh){this._pickedDownMesh=a.pickedMesh;const Q=a.pickedMesh._getActionManagerForTrigger();if(Q){if(Q.hasPickTriggers)switch(Q.processTrigger(5,p.CreateNew(a.pickedMesh,x,a)),x.button){case 0:Q.processTrigger(2,p.CreateNew(a.pickedMesh,x,a));break;case 1:Q.processTrigger(4,p.CreateNew(a.pickedMesh,x,a));break;case 2:Q.processTrigger(3,p.CreateNew(a.pickedMesh,x,a))}Q.hasSpecificTrigger(8)&&window.setTimeout((()=>{const a=s.Gk(this._unTranslatedPointerX,this._unTranslatedPointerY,(a=>a.Xh&&a.isVisible&&a.isReady()&&a.actionManager&&a.actionManager.hasSpecificTrigger(8)&&a===this._pickedDownMesh),!1,s.cameraToUseForPointers);null!==a&&void 0!==a&&a.pickedMesh&&Q&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>z.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,Q.processTrigger(8,p.CreateNew(a.pickedMesh,x)))}),z.LongPressDelay)}}else for(const N of s._pointerDownStage)a=N.action(this._unTranslatedPointerX,this._unTranslatedPointerY,a,x,!1);let h;const D=k.c.POINTERDOWN;a?(s.onPointerDown&&s.onPointerDown(x,a,D),h=new k.e(D,x,a),this._setRayOnPointerInfo(a,x)):h=new k.e(D,x,null,this),s.onPointerObservable.hasObservers()&&s.onPointerObservable.notifyObservers(h,D)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(a,x,Q){const s=new PointerEvent("pointerup",x);s.inputIndex=l.Move;const h=new S;Q?h.doubleClick=!0:h.singleClick=!0,this._checkPrePointerObservable(a,s,k.c.POINTERUP)||this._processPointerUp(a,s,h)}_processPointerUp(a,x,Q){var s;const h=this._scene;if(null!==(s=a)&&void 0!==s&&s.pickedMesh){if(this._pickedUpMesh=a.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(h.onPointerPick&&h.onPointerPick(x,a),Q.singleClick&&!Q.ignore&&h.onPointerObservable.observers.length>this._cameraObserverCount)){const Q=k.c.POINTERPICK,s=new k.e(Q,x,a);this._setRayOnPointerInfo(a,x),h.onPointerObservable.notifyObservers(s,Q)}const s=a.pickedMesh._getActionManagerForTrigger();if(s&&!Q.ignore){s.processTrigger(7,p.CreateNew(a.pickedMesh,x,a)),!Q.hasSwiped&&Q.singleClick&&s.processTrigger(1,p.CreateNew(a.pickedMesh,x,a));const h=a.pickedMesh._getActionManagerForTrigger(6);Q.doubleClick&&h&&h.processTrigger(6,p.CreateNew(a.pickedMesh,x,a))}}else if(!Q.ignore)for(const D of h._pointerUpStage)a=D.action(this._unTranslatedPointerX,this._unTranslatedPointerY,a,x,Q.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const a=this._pickedDownMesh._getActionManagerForTrigger(16);a&&a.processTrigger(16,p.CreateNew(this._pickedDownMesh,x))}if(!Q.ignore){const s=new k.e(k.c.POINTERUP,x,a);if(this._setRayOnPointerInfo(a,x),h.onPointerObservable.notifyObservers(s,k.c.POINTERUP),h.onPointerUp&&h.onPointerUp(x,a,k.c.POINTERUP),!Q.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let s=0;if(Q.singleClick?s=k.c.POINTERTAP:Q.doubleClick&&(s=k.c.POINTERDOUBLETAP),s){const Q=new k.e(s,x,a);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(s)&&h.onPointerObservable.notifyObservers(Q,s)}}}}isPointerCaptured(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[a]}attachControl(){let a=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const h=this._scene,D=h.getEngine();s||(s=D.getInputElement()),this._alreadyAttached&&this.Ji(),s&&(this._alreadyAttachedTo=s),this._deviceSourceManager=new n(D),this._initActionManager=a=>{if(!this._meshPickProceed){const x=h.skipPointerUpPicking||0===h._registeredActions&&!this._checkForPicking()&&!h.onPointerUp?null:h.Gk(this._unTranslatedPointerX,this._unTranslatedPointerY,h.pointerUpPredicate,h.pointerUpFastCheck,h.cameraToUseForPointers,h.pointerUpTrianglePredicate);this._currentPickResult=x,x&&(a=x.hit&&x.pickedMesh?x.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return a},this._delayedSimpleClick=(a,x,Q)=>{if((Date.now()-this._previousStartingPointerTime>z.DoubleClickDelay&&!this._doubleClickOccured||a!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,x.singleClick=!0,x.ignore=!1,this._delayedClicks[a])){const x=this._delayedClicks[a].evt,Q=k.c.POINTERTAP,s=new k.e(Q,x,this._currentPickResult);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(Q)&&h.onPointerObservable.notifyObservers(s,Q),this._delayedClicks[a]=null}},this._initClickEvent=(a,x,Q,s)=>{const h=new S;this._currentPickResult=null;let D=null,N=a.hasSpecificMask(k.c.POINTERPICK)||x.hasSpecificMask(k.c.POINTERPICK)||a.hasSpecificMask(k.c.POINTERTAP)||x.hasSpecificMask(k.c.POINTERTAP)||a.hasSpecificMask(k.c.POINTERDOUBLETAP)||x.hasSpecificMask(k.c.POINTERDOUBLETAP);!N&&F&&(D=this._initActionManager(D,h),D&&(N=D.hasPickTriggers));let C=!1;if(N){const N=Q.button;if(h.hasSwiped=this._isPointerSwiping(),!h.hasSwiped){let W=!z.ExclusiveDoubleClickMode;if(W||(W=!a.hasSpecificMask(k.c.POINTERDOUBLETAP)&&!x.hasSpecificMask(k.c.POINTERDOUBLETAP),W&&!F.HasSpecificTrigger(6)&&(D=this._initActionManager(D,h),D&&(W=!D.hasSpecificTrigger(6)))),W)(Date.now()-this._previousStartingPointerTime>z.DoubleClickDelay||N!==this._previousButtonPressed)&&(h.singleClick=!0,s(h,this._currentPickResult),C=!0);else{const a={evt:Q,clickInfo:h,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,N,h,s),z.DoubleClickDelay)};this._delayedClicks[N]=a}let v=a.hasSpecificMask(k.c.POINTERDOUBLETAP)||x.hasSpecificMask(k.c.POINTERDOUBLETAP);if(!v&&F.HasSpecificTrigger(6)&&(D=this._initActionManager(D,h),D&&(v=D.hasSpecificTrigger(6))),v)if(N===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<z.DoubleClickDelay&&!this._doubleClickOccured){if(h.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=N,z.ExclusiveDoubleClickMode){var R;if(this._delayedClicks[N])clearTimeout(null===(R=this._delayedClicks[N])||void 0===R?void 0:R.timeoutId),this._delayedClicks[N]=null;s(h,this._previousPickResult)}else s(h,this._currentPickResult);else{var U;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,h.doubleClick=!0,h.ignore=!1,z.ExclusiveDoubleClickMode&&this._delayedClicks[N])clearTimeout(null===(U=this._delayedClicks[N])||void 0===U?void 0:U.timeoutId),this._delayedClicks[N]=null;s(h,this._currentPickResult)}C=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=N}}C||s(h,this._currentPickResult)},this._onPointerMove=a=>{if(this._updatePointerPosition(a),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>z.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>z.DragMovementThreshold),D.isPointerLock&&D._verifyPointerLock(),this._checkPrePointerObservable(null,a,a.inputIndex>=l.MouseWheelX&&a.inputIndex<=l.MouseWheelZ?k.c.POINTERWHEEL:k.c.POINTERMOVE))return;if(!h.cameraToUseForPointers&&!h.activeCamera)return;if(h.Hl)return void this._processPointerMove(new e.d,a);h.pointerMovePredicate||(h.pointerMovePredicate=a=>a.Xh&&a.isVisible&&a.isReady()&&a.isEnabled()&&(a.enablePointerMoveEvents||h.constantlyUpdateMeshUnderPointer||null!==a._getActionManagerForTrigger())&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&a.layerMask)));const x=h._registeredActions>0||h.constantlyUpdateMeshUnderPointer?this._pickMove(a):null;this._processPointerMove(x,a)},this._onPointerDown=a=>{const x=this._activePointerIds.indexOf(-1);if(-1===x?this._activePointerIds.push(a.pointerId):this._activePointerIds[x]=a.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,z.ExclusiveDoubleClickMode)for(let s=0;s<this._delayedClicks.length;s++)if(this._delayedClicks[s])if(a.button===s){var Q;clearTimeout(null===(Q=this._delayedClicks[s])||void 0===Q?void 0:Q.timeoutId)}else{const a=this._delayedClicks[s].clickInfo;this._doubleClickOccured=!1,a.singleClick=!0,a.ignore=!1;const x=this._delayedClicks[s].evt,Q=k.c.POINTERTAP,D=new k.e(Q,x,this._currentPickResult);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(Q)&&h.onPointerObservable.notifyObservers(D,Q),this._delayedClicks[s]=null}if(this._updatePointerPosition(a),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=a.button),h.preventDefaultOnPointerDown&&s&&(a.preventDefault(),s.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,a,k.c.POINTERDOWN))return;if(!h.cameraToUseForPointers&&!h.activeCamera)return;let D;this._pointerCaptures[a.pointerId]=!0,h.pointerDownPredicate||(h.pointerDownPredicate=a=>a.Xh&&a.isVisible&&a.isReady()&&a.isEnabled()&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&a.layerMask))),this._pickedDownMesh=null,D=h.skipPointerDownPicking||0===h._registeredActions&&!this._checkForPicking()&&!h.onPointerDown?new e.d:h.Gk(this._unTranslatedPointerX,this._unTranslatedPointerY,h.pointerDownPredicate,h.pointerDownFastCheck,h.cameraToUseForPointers,h.pointerDownTrianglePredicate),this._processPointerDown(D,a)},this._onPointerUp=a=>{const x=this._activePointerIds.indexOf(a.pointerId);-1!==x&&(this._activePointerIds[x]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(a),h.preventDefaultOnPointerUp&&s&&(a.preventDefault(),s.focus()),this._initClickEvent(h.onPrePointerObservable,h.onPointerObservable,a,((x,Q)=>{if(h.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!x.ignore)){if(this._checkPrePointerObservable(null,a,k.c.POINTERUP))return this._swipeButtonPressed===a.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===a.buttons&&(this._pointerCaptures[a.pointerId]=!1));x.hasSwiped||(x.singleClick&&h.onPrePointerObservable.hasSpecificMask(k.c.POINTERTAP)&&this._checkPrePointerObservable(null,a,k.c.POINTERTAP)&&(this._skipPointerTap=!0),x.doubleClick&&h.onPrePointerObservable.hasSpecificMask(k.c.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,a,k.c.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[a.pointerId]?(0===a.buttons&&(this._pointerCaptures[a.pointerId]=!1),(h.cameraToUseForPointers||h.activeCamera)&&(h.pointerUpPredicate||(h.pointerUpPredicate=a=>a.Xh&&a.isVisible&&a.isReady()&&a.isEnabled()&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&a.layerMask))),!this._meshPickProceed&&(F&&F.HasTriggers||this._checkForPicking()||h.onPointerUp)&&this._initActionManager(null,x),Q||(Q=this._currentPickResult),this._processPointerUp(Q,a,x),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===a.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===a.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=a=>{const x=T.c.KEYDOWN;if(h.onPreKeyboardObservable.hasObservers()){const Q=new T.d(x,a);if(h.onPreKeyboardObservable.notifyObservers(Q,x),Q.skipOnKeyboardObservable)return}if(h.onKeyboardObservable.hasObservers()){const Q=new T.e(x,a);h.onKeyboardObservable.notifyObservers(Q,x)}h.actionManager&&h.actionManager.processTrigger(14,p.CreateNewFromScene(h,a))},this._onKeyUp=a=>{const x=T.c.KEYUP;if(h.onPreKeyboardObservable.hasObservers()){const Q=new T.d(x,a);if(h.onPreKeyboardObservable.notifyObservers(Q,x),Q.skipOnKeyboardObservable)return}if(h.onKeyboardObservable.hasObservers()){const Q=new T.e(x,a);h.onKeyboardObservable.notifyObservers(Q,x)}h.actionManager&&h.actionManager.processTrigger(15,p.CreateNewFromScene(h,a))},this._deviceSourceManager.onDeviceConnectedObservable.add((s=>{s.deviceType===g.Mouse?s.onInputChangedObservable.add((h=>{this._originMouseEvent=h,h.inputIndex===l.LeftClick||h.inputIndex===l.MiddleClick||h.inputIndex===l.RightClick||h.inputIndex===l.BrowserBack||h.inputIndex===l.BrowserForward?x&&1===s.getInput(h.inputIndex)?this._onPointerDown(h):a&&0===s.getInput(h.inputIndex)&&this._onPointerUp(h):Q&&(h.inputIndex===l.Move?this._onPointerMove(h):h.inputIndex!==l.MouseWheelX&&h.inputIndex!==l.MouseWheelY&&h.inputIndex!==l.MouseWheelZ||this._onPointerMove(h))})):s.deviceType===g.Touch?s.onInputChangedObservable.add((h=>{h.inputIndex===l.LeftClick&&(x&&1===s.getInput(h.inputIndex)?(this._onPointerDown(h),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):a&&0===s.getInput(h.inputIndex)&&(this._onPointerUp(h),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),Q&&h.inputIndex===l.Move&&this._onPointerMove(h)})):s.deviceType===g.Keyboard&&s.onInputChangedObservable.add((a=>{"keydown"===a.type?this._onKeyDown(a):"keyup"===a.type&&this._onKeyUp(a)}))})),this._alreadyAttached=!0}Ji(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,Q=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[x]===a&&(!a||!a._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const h=this._meshUnderPointerId[x];let D;h&&(D=h._getActionManagerForTrigger(10),D&&D.processTrigger(10,p.CreateNew(h,s,{pointerId:x}))),a?(this._meshUnderPointerId[x]=a,this._pointerOverMesh=a,D=a._getActionManagerForTrigger(9),D&&D.processTrigger(9,p.CreateNew(a,s,{pointerId:x,pickResult:Q}))):(delete this._meshUnderPointerId[x],this._pointerOverMesh=null)}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(a){this._pointerOverMesh===a&&(this._pointerOverMesh=null),this._pickedDownMesh===a&&(this._pickedDownMesh=null),this._pickedUpMesh===a&&(this._pickedUpMesh=null);for(const x in this._meshUnderPointerId)this._meshUnderPointerId[x]===a&&delete this._meshUnderPointerId[x]}}z.DragMovementThreshold=10,z.LongPressDelay=500,z.DoubleClickDelay=300,z.ExclusiveDoubleClickMode=!1;var M=Q(2412),O=Q(722),I=Q(733),B=Q(2417),P=Q(534),w=Q(846),u=Q(691);class c{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Hl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var X,o=Q(507),A=Q(619);!function(a){a[a.BackwardCompatible=0]="BackwardCompatible",a[a.Intermediate=1]="Intermediate",a[a.Aggressive=2]="Aggressive"}(X||(X={}));class aa{static DefaultMaterialFactory(a){throw(0,y.c)("cb")}static CollisionCoordinatorFactory(){throw(0,y.c)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(a){a!==this._clearColor&&(this._clearColor=a,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(a){if(a!==this._performancePriority){switch(this._performancePriority=a,a){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Hl=!1,this.Al=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Hl=!0,this.Al=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Hl=!0,this.Al=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(a)}}set forceWireframe(a){this._forceWireframe!==a&&(this._forceWireframe=a,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(a){this._skipFrustumClipping!==a&&(this._skipFrustumClipping=a)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(a){this._forcePointsCloud!==a&&(this._forcePointsCloud=a,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(a){this._environmentTexture!==a&&(this._environmentTexture=a,this.markAllMaterialsAsDirty(1))}getNodes(){let a=[];return a=a.concat(this.meshes),a=a.concat(this.lights),a=a.concat(this.cameras),a=a.concat(this.transformNodes),this.skeletons.forEach((x=>a=a.concat(x.bones))),a}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(a){this._animationPropertiesOverride=a}set onDispose(a){this._onDisposeObserver&&this.Fi.remove(this._onDisposeObserver),this._onDisposeObserver=this.Fi.add(a)}set beforeRender(a){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),a&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(a))}set afterRender(a){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),a&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(a))}set beforeCameraRender(a){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(a)}set afterCameraRender(a){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(a)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(a){this._pointerPickingConfiguration.pointerDownPredicate=a}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(a){this._pointerPickingConfiguration.pointerUpPredicate=a}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(a){this._pointerPickingConfiguration.pointerMovePredicate=a}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(a){this._pointerPickingConfiguration.pointerDownFastCheck=a}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(a){this._pointerPickingConfiguration.pointerUpFastCheck=a}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(a){this._pointerPickingConfiguration.pointerMoveFastCheck=a}get Hl(){return this._pointerPickingConfiguration.Hl}set Hl(a){this._pointerPickingConfiguration.Hl=a}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(a){this._pointerPickingConfiguration.skipPointerDownPicking=a}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(a){this._pointerPickingConfiguration.skipPointerUpPicking=a}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return z.DragMovementThreshold}static set DragMovementThreshold(a){z.DragMovementThreshold=a}static get LongPressDelay(){return z.LongPressDelay}static set LongPressDelay(a){z.LongPressDelay=a}static get DoubleClickDelay(){return z.DoubleClickDelay}static set DoubleClickDelay(a){z.DoubleClickDelay=a}static get ExclusiveDoubleClickMode(){return z.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(a){z.ExclusiveDoubleClickMode=a}bindEyePosition(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:this.activeCamera.globalPosition,h=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return U.k.Vector4[0].set(s.x,s.y,s.z,h?-1:1),a&&(Q?a.setFloat3(x,U.k.Vector4[0].x,U.k.Vector4[0].y,U.k.Vector4[0].z):a.setVector4(x,U.k.Vector4[0])),U.k.Vector4[0]}finalizeSceneUbo(){const a=this.getSceneUniformBuffer(),x=this.bindEyePosition(null);return a.updateFloat4("vEyePosition",x.x,x.y,x.z,x.w),a.update(),a}set useRightHandedSystem(a){this._useRightHandedSystem!==a&&(this._useRightHandedSystem=a,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(a){this._currentStepId=a}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(a){this._fogEnabled!==a&&(this._fogEnabled=a,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(a){this._fogMode!==a&&(this._fogMode=a,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(a){this._shadowsEnabled!==a&&(this._shadowsEnabled=a,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(a){this._lightsEnabled!==a&&(this._lightsEnabled=a,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(a){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),a&&(this._unObserveActiveCameras=(0,u.j)(a,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=a}get activeCamera(){return this._activeCamera}set activeCamera(a){a!==this._activeCamera&&(this._activeCamera=a,this.onActiveCameraChanged.notifyObservers(this))}get defaultMaterial(){return this.jl||(this.jl=aa.DefaultMaterialFactory(this)),this.jl}set defaultMaterial(a){this.jl=a}set texturesEnabled(a){this._texturesEnabled!==a&&(this._texturesEnabled=a,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(a){if(this._frameGraph)return this._frameGraph=a,void(a||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=a,a&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph)}set skeletonsEnabled(a){this._skeletonsEnabled!==a&&(this._skeletonsEnabled=a,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=aa.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const a of this._transientComponents)a.register();this._transientComponents.length=0}}bb(a){this._components.push(a),this._transientComponents.push(a);const x=a;x.addFromContainer&&x.serialize&&this._serializableComponents.push(x)}_getComponent(a){for(const x of this._components)if(x.name===a)return x;return null}constructor(a,x){this._inputManager=new z(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.Al=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new O.c(.2,.2,.3,1),this.onClearColorChangedObservable=new D.e,this.ambientColor=new O.b(0,0,0),this.environmentIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new D.e,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.oi=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.jm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.Fi=new D.e,this._onDisposeObserver=null,this.onBeforeRenderObservable=new D.e,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new D.e,this.onAfterRenderCameraObservable=new D.e,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new D.e,this.onAfterAnimationsObservable=new D.e,this.onBeforeDrawPhaseObservable=new D.e,this.onAfterDrawPhaseObservable=new D.e,this.onReadyObservable=new D.e,this.onBeforeCameraRenderObservable=new D.e,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new D.e,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new D.e,this.onAfterActiveMeshesEvaluationObservable=new D.e,this.onBeforeParticlesRenderingObservable=new D.e,this.onAfterParticlesRenderingObservable=new D.e,this.onDataLoadedObservable=new D.e,this.onNewCameraAddedObservable=new D.e,this.onCameraRemovedObservable=new D.e,this.onNewLightAddedObservable=new D.e,this.onLightRemovedObservable=new D.e,this.onNewGeometryAddedObservable=new D.e,this.onGeometryRemovedObservable=new D.e,this.onNewTransformNodeAddedObservable=new D.e,this.onTransformNodeRemovedObservable=new D.e,this.onNewMeshAddedObservable=new D.e,this.onMeshRemovedObservable=new D.e,this.onNewSkeletonAddedObservable=new D.e,this.onSkeletonRemovedObservable=new D.e,this.onNewMaterialAddedObservable=new D.e,this.onNewMultiMaterialAddedObservable=new D.e,this.onMaterialRemovedObservable=new D.e,this.onMultiMaterialRemovedObservable=new D.e,this.onNewTextureAddedObservable=new D.e,this.onTextureRemovedObservable=new D.e,this.onBeforeRenderTargetsRenderObservable=new D.e,this.onAfterRenderTargetsRenderObservable=new D.e,this.onBeforeStepObservable=new D.e,this.onAfterStepObservable=new D.e,this.onActiveCameraChanged=new D.e,this.onActiveCamerasChanged=new D.e,this.onBeforeRenderingGroupObservable=new D.e,this.onAfterRenderingGroupObservable=new D.e,this.onMeshImportedObservable=new D.e,this.onAnimationFileImportedObservable=new D.e,this._registeredForLateAnimationBindings=new N.b(256),this._pointerPickingConfiguration=new c,this.onPrePointerObservable=new D.e,this.onPointerObservable=new D.e,this.onPreKeyboardObservable=new D.e,this.onKeyboardObservable=new D.e,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=aa.FOGMODE_NONE,this.fogColor=new O.b(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new U.o(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new N.b(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new M.b,this._activeIndices=new M.b,this._activeParticles=new M.b,this._activeBones=new M.b,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=new Array,this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new N.c(256),this._processedMaterials=new N.c(256),this._renderTargets=new N.b(256),this._materialsRenderTargets=new N.b(256),this._activeParticleSystems=new N.c(256),this._activeSkeletons=new N.b(32),this._softwareSkinnedMeshes=new N.b(32),this._activeAnimatables=new Array,this._transformMatrix=U.e.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=d.h.Create(),this._beforeClearStage=d.h.Create(),this._beforeRenderTargetClearStage=d.h.Create(),this._gatherRenderTargetsStage=d.h.Create(),this._gatherActiveCameraRenderTargetsStage=d.h.Create(),this._isReadyForMeshStage=d.h.Create(),this._beforeEvaluateActiveMeshStage=d.h.Create(),this._evaluateSubMeshStage=d.h.Create(),this._preActiveMeshStage=d.h.Create(),this._cameraDrawRenderTargetStage=d.h.Create(),this._beforeCameraDrawStage=d.h.Create(),this._beforeRenderTargetDrawStage=d.h.Create(),this._beforeRenderingGroupDrawStage=d.h.Create(),this._beforeRenderingMeshStage=d.h.Create(),this._afterRenderingMeshStage=d.h.Create(),this._afterRenderingGroupDrawStage=d.h.Create(),this._afterCameraDrawStage=d.h.Create(),this._afterCameraPostProcessStage=d.h.Create(),this._afterRenderTargetDrawStage=d.h.Create(),this._afterRenderTargetPostProcessStage=d.h.Create(),this._afterRenderStage=d.h.Create(),this._pointerMoveStage=d.h.Create(),this._pointerDownStage=d.h.Create(),this._pointerUpStage=d.h.Create(),this._geometriesByUniqueId=null,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[];const Q={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...x};a=this._engine=a||Z.d.LastCreatedEngine,Q.virtual?a._virtualScenes.push(this):(Z.d._LastCreatedScene=this,a.scenes.push(this)),this._uid=null,this._renderingManager=new H.c(this),j.d&&(this.postProcessManager=new j.d(this)),(0,i.j)()&&this.attachControl(),this._createUbo(),W.d&&(this._imageProcessingConfiguration=new W.d),this.setDefaultCandidateProviders(),Q.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=Q.useMaterialMeshMap,this.useClonedMeshMap=Q.useClonedMeshMap,x&&x.virtual||a.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(a){return this._defaultSubMeshCandidates.data=a.si,this._defaultSubMeshCandidates.length=a.si.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=a=>this._getDefaultSubMeshCandidates(a),this.getIntersectingSubMeshCandidates=(a,x)=>this._getDefaultSubMeshCandidates(a),this.getCollidingSubMeshCandidates=(a,x)=>this._getDefaultSubMeshCandidates(a)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(a){this._inputManager.pointerX=a}get pointerY(){return this._inputManager.pointerY}set pointerY(a){this._inputManager.pointerY=a}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(a,x){let Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==x||this._cachedMaterial!==a||this._cachedVisibility!==Q}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(a,x){return this._inputManager.simulatePointerMove(a,x),this}simulatePointerDown(a,x){return this._inputManager.simulatePointerDown(a,x),this}simulatePointerUp(a,x,Q){return this._inputManager.simulatePointerUp(a,x,Q),this}isPointerCaptured(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(a)}attachControl(){let a=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(a,x,Q)}Ji(){this._inputManager.Ji()}isReady(){var a,x;let Q,s=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const h=this.getEngine(),D=h.currentRenderPassId;h.currentRenderPassId=(null===(a=this.activeCamera)||void 0===a?void 0:a.renderPassId)??D;let N=!0;for(this._pendingData.length>0&&(N=!1),null===(x=this.prePassRenderer)||void 0===x||x.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&N&&(N=this.depthPeelingRenderer.isReady()),s&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),Q=0;Q<this.meshes.length;Q++){const a=this.meshes[Q];if(!a.si||0===a.si.length)continue;if(!a.isReady(!0)){N=!1;continue}const x=a.hasThinInstances||"InstancedMesh"===a.getClassName()||"InstancedLinesMesh"===a.getClassName()||h.getCaps().instancedArrays&&a.instances.length>0;for(const Q of this._isReadyForMeshStage)Q.action(a,x)||(N=!1);if(!s)continue;const D=a.material||this.defaultMaterial;if(D)if(D._storeEffectOnSubMeshes)for(const Q of a.si){const a=Q.Ha();a&&a.hasRenderTargetTextures&&null!=a.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(a)&&(this._processedMaterials.push(a),this._materialsRenderTargets.concatWithNoDuplicate(a.getRenderTargetTextures()))}else D.hasRenderTargetTextures&&null!=D.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(D)&&(this._processedMaterials.push(D),this._materialsRenderTargets.concatWithNoDuplicate(D.getRenderTargetTextures()))}if(s)for(Q=0;Q<this._materialsRenderTargets.length;++Q){this._materialsRenderTargets.data[Q].isReadyForRendering()||(N=!1)}for(Q=0;Q<this.geometries.length;Q++){2===this.geometries[Q].delayLoadState&&(N=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const C of this.activeCameras)C.isReady(!0)||(N=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(N=!1));for(const C of this.oi)C.isReady()||(N=!1);if(this.layers)for(const C of this.layers)C.isReady()||(N=!1);return h.areAllEffectsReady()||(N=!1),h.currentRenderPassId=D,N}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(a){this.onBeforeRenderObservable.add(a)}unregisterBeforeRender(a){this.onBeforeRenderObservable.removeCallback(a)}registerAfterRender(a){this.onAfterRenderObservable.add(a)}unregisterAfterRender(a){this.onAfterRenderObservable.removeCallback(a)}_executeOnceBeforeRender(a){const x=()=>{a(),setTimeout((()=>{this.unregisterBeforeRender(x)}))};this.registerBeforeRender(x)}executeOnceBeforeRender(a,x){void 0!==x?setTimeout((()=>{this._executeOnceBeforeRender(a)}),x):this._executeOnceBeforeRender(a)}addPendingData(a){this._pendingData.push(a)}removePendingData(a){const x=this.isLoading,Q=this._pendingData.indexOf(a);-1!==Q&&this._pendingData.splice(Q,1),x&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(a),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(x)}whenReadyAsync(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise((x=>{this.executeWhenReady((()=>{x()}),a)}))}_checkIsReady(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(a)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(a)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=h.b.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(a,x,Q,s){Q||s||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===a.updateFlag&&this._projectionUpdateFlag===x.updateFlag||(this._viewUpdateFlag=a.updateFlag,this._projectionUpdateFlag=x.updateFlag,this._viewMatrix=a,this._projectionMatrix=x,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?I.c.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=I.c.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(Q,s):this._sceneUbo.useUbo&&(this._sceneUbo.Vi("viewProjection",this._transformMatrix),this._sceneUbo.Vi("view",this._viewMatrix),this._sceneUbo.Vi("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(a){const x=new v.b(this._engine,void 0,!1,a??"fi");return x.addUniform("viewProjection",16),x.addUniform("view",16),x.addUniform("projection",16),x.addUniform("vEyePosition",4),x}setSceneUniformBuffer(a){this._sceneUbo=a,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return B.b.UniqueId}Ui(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._blockEntityCollection||(this.meshes.push(a),a._resyncLightSources(),a.parent||a._addToSceneRootNodes(),this.onNewMeshAddedObservable.notifyObservers(a),x&&a.getChildMeshes().forEach((a=>{this.Ui(a)})))}ei(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const Q=this.meshes.indexOf(a);return-1!==Q&&(this.meshes.splice(Q,1),a.parent||a._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(a),this.onMeshRemovedObservable.notifyObservers(a),x&&a.getChildMeshes().forEach((a=>{this.ei(a)})),Q}addTransformNode(a){this._blockEntityCollection||a.va()===this&&-1!==a._indexInSceneTransformNodesArray||(a._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(a),a.parent||a._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(a))}removeTransformNode(a){const x=a._indexInSceneTransformNodesArray;if(-1!==x){if(x!==this.transformNodes.length-1){const a=this.transformNodes[this.transformNodes.length-1];this.transformNodes[x]=a,a._indexInSceneTransformNodesArray=x}a._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),a.parent||a._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(a),x}removeSkeleton(a){const x=this.skeletons.indexOf(a);return-1!==x&&(this.skeletons.splice(x,1),this.onSkeletonRemovedObservable.notifyObservers(a),this._executeActiveContainerCleanup(this._activeSkeletons)),x}removeMorphTargetManager(a){const x=this.morphTargetManagers.indexOf(a);return-1!==x&&this.morphTargetManagers.splice(x,1),x}removeLight(a){const x=this.lights.indexOf(a);if(-1!==x){for(const x of this.meshes)x._removeLightSource(a,!1);this.lights.splice(x,1),this.sortLightsByPriority(),a.parent||a._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(a),x}removeCamera(a){const x=this.cameras.indexOf(a);if(-1!==x&&(this.cameras.splice(x,1),a.parent||a._removeFromSceneRootNodes()),this.activeCameras){const x=this.activeCameras.indexOf(a);-1!==x&&this.activeCameras.splice(x,1)}return this.activeCamera===a&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(a),x}removeParticleSystem(a){const x=this.oi.indexOf(a);return-1!==x&&(this.oi.splice(x,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),x}removeAnimation(a){const x=this.animations.indexOf(a);return-1!==x&&this.animations.splice(x,1),x}stopAnimation(a,x,Q){}removeAnimationGroup(a){const x=this.animationGroups.indexOf(a);return-1!==x&&this.animationGroups.splice(x,1),x}removeMultiMaterial(a){const x=this.multiMaterials.indexOf(a);return-1!==x&&this.multiMaterials.splice(x,1),this.onMultiMaterialRemovedObservable.notifyObservers(a),x}removeMaterial(a){const x=a._indexInSceneMaterialArray;if(-1!==x&&x<this.materials.length){if(x!==this.materials.length-1){const a=this.materials[this.materials.length-1];this.materials[x]=a,a._indexInSceneMaterialArray=x}a._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(a),x}removeActionManager(a){const x=this.actionManagers.indexOf(a);return-1!==x&&this.actionManagers.splice(x,1),x}removeTexture(a){const x=this.textures.indexOf(a);return-1!==x&&this.textures.splice(x,1),this.onTextureRemovedObservable.notifyObservers(a),x}addLight(a){if(!this._blockEntityCollection){this.lights.push(a),this.sortLightsByPriority(),a.parent||a._addToSceneRootNodes();for(const x of this.meshes)-1===x.lightSources.indexOf(a)&&(x.lightSources.push(a),x._resyncLightSources());this.onNewLightAddedObservable.notifyObservers(a)}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(w.d.CompareLightsPriority)}addCamera(a){this._blockEntityCollection||(this.cameras.push(a),this.onNewCameraAddedObservable.notifyObservers(a),a.parent||a._addToSceneRootNodes())}addSkeleton(a){this._blockEntityCollection||(this.skeletons.push(a),this.onNewSkeletonAddedObservable.notifyObservers(a))}addParticleSystem(a){this._blockEntityCollection||this.oi.push(a)}addAnimation(a){this._blockEntityCollection||this.animations.push(a)}addAnimationGroup(a){this._blockEntityCollection||this.animationGroups.push(a)}addMultiMaterial(a){this._blockEntityCollection||(this.multiMaterials.push(a),this.onNewMultiMaterialAddedObservable.notifyObservers(a))}addMaterial(a){this._blockEntityCollection||a.va()===this&&-1!==a._indexInSceneMaterialArray||(a._indexInSceneMaterialArray=this.materials.length,this.materials.push(a),this.onNewMaterialAddedObservable.notifyObservers(a))}addMorphTargetManager(a){this._blockEntityCollection||this.morphTargetManagers.push(a)}addGeometry(a){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[a.uniqueId]=this.geometries.length),this.geometries.push(a))}addActionManager(a){this.actionManagers.push(a)}addTexture(a){this._blockEntityCollection||(this.textures.push(a),this.onNewTextureAddedObservable.notifyObservers(a))}switchActiveCamera(a){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Ji(),this.activeCamera=a,x&&a.attachControl())}setActiveCameraById(a){const x=this.getCameraById(a);return x?(this.activeCamera=x,x):null}setActiveCameraByName(a){const x=this.getCameraByName(a);return x?(this.activeCamera=x,x):null}getAnimationGroupByName(a){for(let x=0;x<this.animationGroups.length;x++)if(this.animationGroups[x].name===a)return this.animationGroups[x];return null}_getMaterial(a,x){for(let Q=0;Q<this.materials.length;Q++){const a=this.materials[Q];if(x(a))return a}if(a)for(let Q=0;Q<this.multiMaterials.length;Q++){const a=this.multiMaterials[Q];if(x(a))return a}return null}getMaterialByUniqueID(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.uniqueId===a))}getMaterialById(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.id===a))}getMaterialByName(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.name===a))}getLastMaterialById(a){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let Q=this.materials.length-1;Q>=0;Q--)if(this.materials[Q].id===a)return this.materials[Q];if(x)for(let Q=this.multiMaterials.length-1;Q>=0;Q--)if(this.multiMaterials[Q].id===a)return this.multiMaterials[Q];return null}getTextureByUniqueId(a){for(let x=0;x<this.textures.length;x++)if(this.textures[x].uniqueId===a)return this.textures[x];return null}getTextureByName(a){for(let x=0;x<this.textures.length;x++)if(this.textures[x].name===a)return this.textures[x];return null}getCameraById(a){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].id===a)return this.cameras[x];return null}getCameraByUniqueId(a){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].uniqueId===a)return this.cameras[x];return null}getCameraByName(a){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].name===a)return this.cameras[x];return null}getBoneById(a){for(let x=0;x<this.skeletons.length;x++){const Q=this.skeletons[x];for(let x=0;x<Q.bones.length;x++)if(Q.bones[x].id===a)return Q.bones[x]}return null}getBoneByName(a){for(let x=0;x<this.skeletons.length;x++){const Q=this.skeletons[x];for(let x=0;x<Q.bones.length;x++)if(Q.bones[x].name===a)return Q.bones[x]}return null}getLightByName(a){for(let x=0;x<this.lights.length;x++)if(this.lights[x].name===a)return this.lights[x];return null}getLightById(a){for(let x=0;x<this.lights.length;x++)if(this.lights[x].id===a)return this.lights[x];return null}getLightByUniqueId(a){for(let x=0;x<this.lights.length;x++)if(this.lights[x].uniqueId===a)return this.lights[x];return null}getParticleSystemById(a){for(let x=0;x<this.oi.length;x++)if(this.oi[x].id===a)return this.oi[x];return null}getGeometryById(a){for(let x=0;x<this.geometries.length;x++)if(this.geometries[x].id===a)return this.geometries[x];return null}_getGeometryByUniqueId(a){if(this._geometriesByUniqueId){const x=this._geometriesByUniqueId[a];if(void 0!==x)return this.geometries[x]}else for(let x=0;x<this.geometries.length;x++)if(this.geometries[x].uniqueId===a)return this.geometries[x];return null}pushGeometry(a,x){return!(!x&&this._getGeometryByUniqueId(a.uniqueId))&&(this.addGeometry(a),this.onNewGeometryAddedObservable.notifyObservers(a),!0)}removeGeometry(a){let x;if(this._geometriesByUniqueId){if(x=this._geometriesByUniqueId[a.uniqueId],void 0===x)return!1}else if(x=this.geometries.indexOf(a),x<0)return!1;if(x!==this.geometries.length-1){const a=this.geometries[this.geometries.length-1];a&&(this.geometries[x]=a,this._geometriesByUniqueId&&(this._geometriesByUniqueId[a.uniqueId]=x))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[a.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(a),!0}getGeometries(){return this.geometries}getMeshById(a){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].id===a)return this.meshes[x];return null}getMeshesById(a){return this.meshes.filter((function(x){return x.id===a}))}getTransformNodeById(a){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].id===a)return this.transformNodes[x];return null}getTransformNodeByUniqueId(a){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].uniqueId===a)return this.transformNodes[x];return null}getTransformNodesById(a){return this.transformNodes.filter((function(x){return x.id===a}))}getMeshByUniqueId(a){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].uniqueId===a)return this.meshes[x];return null}getLastMeshById(a){for(let x=this.meshes.length-1;x>=0;x--)if(this.meshes[x].id===a)return this.meshes[x];return null}getLastTransformNodeById(a){for(let x=this.transformNodes.length-1;x>=0;x--)if(this.transformNodes[x].id===a)return this.transformNodes[x];return null}getLastEntryById(a){let x;for(x=this.meshes.length-1;x>=0;x--)if(this.meshes[x].id===a)return this.meshes[x];for(x=this.transformNodes.length-1;x>=0;x--)if(this.transformNodes[x].id===a)return this.transformNodes[x];for(x=this.cameras.length-1;x>=0;x--)if(this.cameras[x].id===a)return this.cameras[x];for(x=this.lights.length-1;x>=0;x--)if(this.lights[x].id===a)return this.lights[x];return null}getNodeById(a){const x=this.getMeshById(a);if(x)return x;const Q=this.getTransformNodeById(a);if(Q)return Q;const s=this.getLightById(a);if(s)return s;const h=this.getCameraById(a);if(h)return h;const D=this.getBoneById(a);return D||null}getNodeByName(a){const x=this.getMeshByName(a);if(x)return x;const Q=this.getTransformNodeByName(a);if(Q)return Q;const s=this.getLightByName(a);if(s)return s;const h=this.getCameraByName(a);if(h)return h;const D=this.getBoneByName(a);return D||null}getMeshByName(a){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].name===a)return this.meshes[x];return null}getTransformNodeByName(a){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].name===a)return this.transformNodes[x];return null}getLastSkeletonById(a){for(let x=this.skeletons.length-1;x>=0;x--)if(this.skeletons[x].id===a)return this.skeletons[x];return null}getSkeletonByUniqueId(a){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].uniqueId===a)return this.skeletons[x];return null}getSkeletonById(a){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].id===a)return this.skeletons[x];return null}getSkeletonByName(a){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].name===a)return this.skeletons[x];return null}getMorphTargetManagerById(a){for(let x=0;x<this.morphTargetManagers.length;x++)if(this.morphTargetManagers[x].uniqueId===a)return this.morphTargetManagers[x];return null}getMorphTargetById(a){for(let x=0;x<this.morphTargetManagers.length;++x){const Q=this.morphTargetManagers[x];for(let x=0;x<Q.numTargets;++x){const s=Q.getTarget(x);if(s.id===a)return s}}return null}getMorphTargetByName(a){for(let x=0;x<this.morphTargetManagers.length;++x){const Q=this.morphTargetManagers[x];for(let x=0;x<Q.numTargets;++x){const s=Q.getTarget(x);if(s.name===a)return s}}return null}getPostProcessByName(a){for(let x=0;x<this.postProcesses.length;++x){const Q=this.postProcesses[x];if(Q.name===a)return Q}return null}isActiveMesh(a){return-1!==this._activeMeshes.indexOf(a)}get uid(){return this._uid||(this._uid=s.g.RandomId()),this._uid}addExternalData(a,x){return this._externalData||(this._externalData=new C),this._externalData.add(a,x)}getExternalData(a){return this._externalData?this._externalData.get(a):null}getOrAddExternalDataWithFactory(a,x){return this._externalData||(this._externalData=new C),this._externalData.getOrAddWithFactory(a,x)}removeExternalData(a){return this._externalData.remove(a)}_evaluateSubMesh(a,x,Q,s){if(s||a.isInFrustum(this._frustumPlanes)){for(const s of this._evaluateSubMeshStage)s.action(x,a);const Q=a.Ha();null!==Q&&void 0!==Q&&(Q.hasRenderTargetTextures&&null!=Q.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(Q)&&(this._processedMaterials.push(Q),this._materialsRenderTargets.concatWithNoDuplicate(Q.getRenderTargetTextures())),this._renderingManager.dispatch(a,x,Q))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(a){this._preventFreeActiveMeshesAndRenderingGroups!==a&&(a&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=a)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let a=0;a<this.activeCameras.length;a++){const x=this.activeCameras[a];x&&x._activeMeshes&&x._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let a=0;a<this.textures.length;a++){const x=this.textures[a];x&&x.renderList&&x.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0],x=arguments.length>1?arguments[1]:void 0,Q=arguments.length>2?arguments[2]:void 0,s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=h,this._skipEvaluateActiveMeshesCompletely=a,s)for(let a=0;a<this._activeMeshes.length;a++)this._activeMeshes.data[a]._freeze();x&&x()}else Q&&Q("No active camera found")})),this}unfreezeActiveMeshes(){for(let a=0;a<this.meshes.length;a++){const x=this.meshes[a];x._internalAbstractMeshDataInfo&&(x._internalAbstractMeshDataInfo._isActive=!1)}for(let a=0;a<this._activeMeshes.length;a++)this._activeMeshes.data[a]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(a){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>a.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var a;if(this._activeMeshes.length>0)null===(a=this.activeCamera)||void 0===a||a._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const a=this._activeMeshes.length;for(let x=0;x<a;x++){this._activeMeshes.data[x].pi()}}if(this._activeParticleSystems){const a=this._activeParticleSystems.length;for(let x=0;x<a;x++)this._activeParticleSystems.data[x].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const s of this._beforeEvaluateActiveMeshStage)s.action();const x=this.getActiveMeshCandidates(),Q=x.length;for(let s=0;s<Q;s++){const a=x.data[s];if(a._internalAbstractMeshDataInfo._currentLODIsUpToDate=!1,a.isBlocked)continue;if(this._totalVertices.addCount(a.getTotalVertices(),!1),!a.isReady()||!a.isEnabled()||a.li.hasAZeroComponent)continue;a.pi(),a.actionManager&&a.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(a);let Q=this.customLODSelector?this.customLODSelector(a,this.activeCamera):a.getLOD(this.activeCamera);if(a._internalAbstractMeshDataInfo._currentLOD=Q,a._internalAbstractMeshDataInfo._currentLODIsUpToDate=!0,void 0!==Q&&null!==Q&&(Q!==a&&0!==Q.billboardMode&&Q.pi(),a._preActivate(),a.isVisible&&a.visibility>0&&0!==(a.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||a.Wh||a.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(a),this.activeCamera._activeMeshes.push(a),Q!==a&&Q._activate(this._renderId,!1);for(const x of this._preActiveMeshStage)x.action(a);a._activate(this._renderId,!1)&&(a.isAnInstance?a._internalAbstractMeshDataInfo._actAsRegularMesh&&(Q=a):Q._internalAbstractMeshDataInfo._onlyForInstances=!1,Q._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(a,Q)),a._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let a=0;a<this.oi.length;a++){const x=this.oi[a];if(!x.isStarted()||!x.j)continue;const Q=x.j;Q.position&&!Q.isEnabled()||(this._activeParticleSystems.push(x),x.animate(),this._renderingManager.dispatchParticles(x))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(a){this._skeletonsEnabled&&a.skeleton&&(this._activeSkeletons.pushNoDuplicate(a.skeleton)&&(a.skeleton.prepare(),this._activeBones.addCount(a.skeleton.bones.length,!1)),a.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(a)&&this.frameGraph&&a.applySkeleton(a.skeleton))}_activeMesh(a,x){this._prepareSkeleton(x);let Q=a.hasInstances||a.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||x.Wh;if(x&&x.si&&x.si.length>0){const s=this.getActiveSubMeshCandidates(x),h=s.length;Q=Q||1===h;for(let D=0;D<h;D++){const h=s.data[D];this._evaluateSubMesh(h,x,a,Q)}}}updateTransformMatrix(a){const x=this.activeCamera;if(x)if(x._renderingMultiview){const Q=x._rigCameras[0],s=x._rigCameras[1];this.setTransformMatrix(Q.getViewMatrix(),Q.getProjectionMatrix(a),s.getViewMatrix(),s.getProjectionMatrix(a))}else this.setTransformMatrix(x.getViewMatrix(),x.getProjectionMatrix(a))}_bindFrameBuffer(a){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];a&&a._multiviewTexture?a._multiviewTexture._bindFrameBuffer():a&&a.outputRenderTarget?a.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer(),x&&this._clearFrameBuffer(a)}_clearFrameBuffer(a){if(a&&a._multiviewTexture);else if(a&&a.outputRenderTarget&&!a._renderingMultiview){const x=a.outputRenderTarget;x.onClearObservable.hasObservers()?x.onClearObservable.notifyObservers(this._engine):x.skipInitialClear||a.isRightCamera||(this.Al&&this._engine.clear(x.clearColor||this._clearColor,!x._cleared,!0,!0),x._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(a,x){var Q;let h=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(a&&a._skipRendering)return;const D=this._engine;if(this._activeCamera=a,!this.activeCamera)throw new Error("Active camera not set");if(D.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&h){let x=!0;a._renderingMultiview&&a.outputRenderTarget&&(x=a.outputRenderTarget.skipInitialClear,this.Al&&(this._defaultFrameBufferCleared=!1,a.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),a._renderingMultiview&&a.outputRenderTarget&&(a.outputRenderTarget.skipInitialClear=x)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let s=0;s<this._softwareSkinnedMeshes.length;s++){const a=this._softwareSkinnedMeshes.data[s];a.applySkeleton(a.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),a.customRenderTargets&&a.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(a.customRenderTargets),x&&x.customRenderTargets&&x.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(x.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const s of this._gatherActiveCameraRenderTargetsStage)s.action(this._renderTargets);let N=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){s.g.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let a=0;a<this._renderTargets.length;a++){const x=this._renderTargets.data[a];if(x._shouldRender()){this._renderId++;const a=x.activeCamera&&x.activeCamera!==this.activeCamera;x.render(a,this.dumpNextRenderTargets),N=!0}}s.g.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const a of this._cameraDrawRenderTargetStage)N=a.action(this.activeCamera)||N;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(Q=a.outputRenderTarget)||void 0===Q?void 0:Q.renderPassId)??a.renderPassId??0,N&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||a._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const s of this._beforeCameraDrawStage)s.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),D.snapshotRendering&&1===D.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const s of this._afterCameraDrawStage)s.action(this.activeCamera);if(this.postProcessManager&&!a._multiviewTexture){const x=a.outputRenderTarget?a.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(a.isIntermediate,x)}for(const s of this._afterCameraPostProcessStage)s.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(a){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===a.cameraRigMode||a._renderingMultiview)return a._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(a,void 0,x),void this.onAfterRenderCameraObservable.notifyObservers(a);if(a._useMultiviewToSingleView)this._renderMultiviewToSingleView(a);else{this.onBeforeCameraRenderObservable.notifyObservers(a);for(let x=0;x<a._rigCameras.length;x++)this._renderForCamera(a._rigCameras[x],a)}this._activeCamera=a,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(a)}_checkIntersections(){for(let a=0;a<this._meshesForIntersections.length;a++){const x=this._meshesForIntersections.data[a];if(x.actionManager)for(let a=0;x.actionManager&&a<x.actionManager.actions.length;a++){const Q=x.actionManager.actions[a];if(12===Q.trigger||13===Q.trigger){const a=Q.getTriggerParameter(),s=a.mesh?a.mesh:a,h=s.intersectsMesh(x,a.usePreciseIntersection),D=x._intersectionsInProgress.indexOf(s);h&&-1===D?12===Q.trigger?(Q._executeCurrent(p.CreateNew(x,void 0,s)),x._intersectionsInProgress.push(s)):13===Q.trigger&&x._intersectionsInProgress.push(s):!h&&D>-1&&(13===Q.trigger&&Q._executeCurrent(p.CreateNew(x,void 0,s)),x.actionManager.hasSpecificTrigger(13,(a=>{const x=a.mesh?a.mesh:a;return s===x}))&&13!==Q.trigger||x._intersectionsInProgress.splice(D,1))}}}}_advancePhysicsEngineStep(a){}_animate(a){}animate(){if(this._engine.isDeterministicLockStep()){let a=Math.max(aa.MinDeltaTime,Math.min(this._engine.getDeltaTime(),aa.MaxDeltaTime))+this._timeAccumulator;const x=this._engine.getTimeStep(),Q=1e3/x/1e3;let s=0;const h=this._engine.getLockstepMaxSteps();let D=Math.floor(a/x);for(D=Math.min(D,h);a>0&&s<D;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=x*Q,this._animate(x),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(x),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,s++,a-=x;this._timeAccumulator=a<0?0:a}else{const a=this.useConstantAnimationDeltaTime?16:Math.max(aa.MinDeltaTime,Math.min(this._engine.getDeltaTime(),aa.MaxDeltaTime));this._animationRatio=.06*a,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(a)}}_clear(){(this.autoClearDepthAndStencil||this.Al)&&this._engine.clear(this._clearColor,this.Al||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(a){var x;if(null===a||void 0===a||!a.outputRenderTarget||null!==a&&void 0!==a&&a.isRigCamera||(a.outputRenderTarget._cleared=!1),null!==a&&void 0!==a&&null!==(x=a.rigCameras)&&void 0!==x&&x.length)for(let Q=0;Q<a.rigCameras.length;++Q){const x=a.rigCameras[Q].outputRenderTarget;x&&(x._cleared=!1)}}resetDrawCache(a){if(this.meshes)for(const x of this.meshes)x.resetDrawCache(a)}_renderWithFrameGraph(){var a;let x=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),x)for(const h of this.cameras)if(h.update(),0!==h.cameraRigMode)for(let a=0;a<h._rigCameras.length;a++)h._rigCameras[a].update();for(const h of this._beforeClearStage)h.action();const Q=this.getActiveMeshCandidates(),s=Q.length;for(let h=0;h<s;h++){const a=Q.data[h];a.isBlocked||(this._totalVertices.addCount(a.getTotalVertices(),!1),a.isReady()&&a.isEnabled()&&!a.li.hasAZeroComponent&&(a.pi(),a.actionManager&&a.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(a)))}if(this.particlesEnabled)for(let h=0;h<this.oi.length;h++){const a=this.oi[h];if(!a.isStarted()||!a.j)continue;const x=a.j;x.position&&!x.isEnabled()||(this._activeParticleSystems.push(a),a.animate())}null===(a=this.frameGraph)||void 0===a||a.execute()}render(){var a;let x=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],Q=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(a=this.activeCameras)&&void 0!==a&&a.length&&this.activeCameras.forEach(this._checkCameraRenderTarget),this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),Q||this.animate();for(const a of this._beforeCameraUpdateStage)a.action();if(x)if(this.activeCameras&&this.activeCameras.length>0)for(let a=0;a<this.activeCameras.length;a++){const x=this.activeCameras[a];if(x.update(),0!==x.cameraRigMode)for(let a=0;a<x._rigCameras.length;a++)x._rigCameras[a].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let a=0;a<this.activeCamera._rigCameras.length;a++)this.activeCamera._rigCameras[a].update();if(this.onBeforeRenderObservable.notifyObservers(this),this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(x,Q);else{var h;const a=this.getEngine();this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const x=null!==(h=this.activeCameras)&&void 0!==h&&h.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){s.g.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!0;for(let Q=0;Q<this.customRenderTargets.length;Q++){const s=this.customRenderTargets[Q];if(s._shouldRender()){if(this._renderId++,this.activeCamera=s.activeCamera||this.activeCamera,!this.activeCamera)throw new Error("Active camera not set");a.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),s.render(x!==this.activeCamera,this.dumpNextRenderTargets)}}s.g.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._intermediateRendering=!1,this._renderId++}this._engine.currentRenderPassId=(null===x||void 0===x?void 0:x.renderPassId)??0,this.activeCamera=x,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const Q of this._beforeClearStage)Q.action();this._clearFrameBuffer(this.activeCamera);for(const Q of this._gatherRenderTargetsStage)Q.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let Q=0;Q<this.activeCameras.length;Q++)this._processSubCameras(this.activeCameras[Q],Q>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const a of this._afterRenderStage)a.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let a=0;a<this._toBeDisposed.length;a++){const x=this._toBeDisposed[a];x&&x.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let a=0;a<this.materials.length;a++)this.materials[a].freeze()}unfreezeMaterials(){for(let a=0;a<this.materials.length;a++)this.materials[a].unfreeze()}dispose(){if(this.u)return;this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations&&(this._activeAnimatables.forEach((a=>{a.onAnimationEndObservable.clear(),a.onAnimationEnd=null})),this.stopAllAnimations()),this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const a=this._activeRequests.slice();for(const h of a)h.abort();this._activeRequests.length=0;try{this.Fi.notifyObservers(this)}catch(s){o.d.Error("An error occurred while calling onDisposeObservable!",s)}this.Ji();if(this._engine.getInputElement())for(let h=0;h<this.cameras.length;h++)this.cameras[h].Ji();this._disposeList(this.animationGroups),this._disposeList(this.lights),this._disposeList(this.meshes,(a=>a.dispose(!0))),this._disposeList(this.transformNodes,(a=>a.dispose(!0)));const x=this.cameras;this._disposeList(x),this.jl&&this.jl.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.oi),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let Q=this._engine.scenes.indexOf(this);Q>-1&&this._engine.scenes.splice(Q,1),Z.d._LastCreatedScene===this&&(this._engine.scenes.length>0?Z.d._LastCreatedScene=this._engine.scenes[this._engine.scenes.length-1]:Z.d._LastCreatedScene=null),Q=this._engine._virtualScenes.indexOf(this),Q>-1&&this._engine._virtualScenes.splice(Q,1),this._engine.wipeCaches(!0),this.Fi.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this._isDisposed=!0}_disposeList(a,x){const Q=a.slice(0);x=x??(a=>a.dispose());for(const s of Q)x(s);a.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let a=0;a<this.meshes.length;a++){const x=this.meshes[a].mi;x&&x.clearCachedData()}}cleanCachedTextureBuffer(){for(const a of this.textures){a._buffer&&(a._buffer=null)}}getWorldExtends(a){const x=new U.o(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),Q=new U.o(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);return a=a||(()=>!0),this.meshes.filter(a).forEach((a=>{if(a.pi(!0),!a.si||0===a.si.length||a.infiniteDistance)return;const s=a.getBoundingInfo(),h=s.boundingBox.minimumWorld,D=s.boundingBox.maximumWorld;U.o.CheckExtends(h,x,Q),U.o.CheckExtends(D,x,Q)})),{min:x,max:Q}}createPickingRay(a,x,Q,s){throw(0,y.c)("Ray")}createPickingRayToRef(a,x,Q,s,h){throw(0,y.c)("Ray")}createPickingRayInCameraSpace(a,x,Q){throw(0,y.c)("Ray")}createPickingRayInCameraSpaceToRef(a,x,Q,s){throw(0,y.c)("Ray")}Gk(a,x,Q,s,h,D){const N=(0,y.c)("Ray",!0);return N&&o.d.Warn(N),new e.d}pickWithBoundingInfo(a,x,Q,s,h){const D=(0,y.c)("Ray",!0);return D&&o.d.Warn(D),new e.d}pickWithRay(a,x,Q,s){throw(0,y.c)("Ray")}multiPick(a,x,Q,s,h){throw(0,y.c)("Ray")}multiPickWithRay(a,x,Q){throw(0,y.c)("Ray")}setPointerOverMesh(a,x,Q){this._inputManager.setPointerOverMesh(a,x,Q)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const a of this.geometries)a._rebuild();for(const a of this.meshes)a._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const a of this._components)a.rebuild();for(const a of this.oi)a.rebuild();if(this.spriteManagers)for(const a of this.spriteManagers)a.rebuild()}_rebuildTextures(){for(const a of this.textures)a._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(a,x,Q){if(void 0===x)return a;const s=[];for(const h in a){const D=a[h];R.e&&R.e.MatchesQuery(D,x)&&(!Q||Q(D))&&s.push(D)}return s}getMeshesByTags(a,x){return this._getByTags(this.meshes,a,x)}getCamerasByTags(a,x){return this._getByTags(this.cameras,a,x)}getLightsByTags(a,x){return this._getByTags(this.lights,a,x)}getMaterialByTags(a,x){return this._getByTags(this.materials,a,x).concat(this._getByTags(this.multiMaterials,a,x))}getTransformNodesByTags(a,x){return this._getByTags(this.transformNodes,a,x)}setRenderingOrder(a){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(a,x,Q,s)}setRenderingAutoClearDepthStencil(a,x){let Q=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(a,x,Q,s)}getAutoClearDepthStencilSetup(a){return this._renderingManager.getAutoClearDepthStencilSetup(a)}_forceBlockMaterialDirtyMechanism(a){this._blockMaterialDirtyMechanism=a}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(a){this._blockMaterialDirtyMechanism!==a&&(this._blockMaterialDirtyMechanism=a,a||this.markAllMaterialsAsDirty(63))}markAllMaterialsAsDirty(a,x){if(!this._blockMaterialDirtyMechanism)for(const Q of this.materials)x&&!x(Q)||Q.Ki(a)}_loadFile(a,x,Q,s,h,D,N){const C=(0,P.n)(a,x,Q,s?this.offlineProvider:void 0,h,D,N);return this._activeRequests.push(C),C.onCompleteObservable.add((a=>{this._activeRequests.splice(this._activeRequests.indexOf(a),1)})),C}_loadFileAsync(a,x,Q,s,h){return new Promise(((D,N)=>{this._loadFile(a,(a=>{D(a)}),x,Q,s,((a,x)=>{N(x)}),h)}))}_requestFile(a,x,Q,s,h,D,N){const C=(0,P.w)(a,x,Q,s?this.offlineProvider:void 0,h,D,N);return this._activeRequests.push(C),C.onCompleteObservable.add((a=>{this._activeRequests.splice(this._activeRequests.indexOf(a),1)})),C}_requestFileAsync(a,x,Q,s,h){return new Promise(((D,N)=>{this._requestFile(a,(a=>{D(a)}),x,Q,s,(a=>{N(a)}),h)}))}_readFile(a,x,Q,s,h){const D=(0,P.t)(a,x,Q,s,h);return this._activeRequests.push(D),D.onCompleteObservable.add((a=>{this._activeRequests.splice(this._activeRequests.indexOf(a),1)})),D}_readFileAsync(a,x,Q){return new Promise(((s,h)=>{this._readFile(a,(a=>{s(a)}),x,Q,(a=>{h(a)}))}))}getPerfCollector(){throw(0,y.c)("performanceViewerSceneExtension")}setActiveCameraByID(a){return this.setActiveCameraById(a)}getMaterialByID(a){return this.getMaterialById(a)}getLastMaterialByID(a){return this.getLastMaterialById(a)}getTextureByUniqueID(a){return this.getTextureByUniqueId(a)}getCameraByID(a){return this.getCameraById(a)}getCameraByUniqueID(a){return this.getCameraByUniqueId(a)}getBoneByID(a){return this.getBoneById(a)}getLightByID(a){return this.getLightById(a)}getLightByUniqueID(a){return this.getLightByUniqueId(a)}getParticleSystemByID(a){return this.getParticleSystemById(a)}getGeometryByID(a){return this.getGeometryById(a)}getMeshByID(a){return this.getMeshById(a)}getMeshByUniqueID(a){return this.getMeshByUniqueId(a)}getLastMeshByID(a){return this.getLastMeshById(a)}getMeshesByID(a){return this.getMeshesById(a)}getTransformNodeByID(a){return this.getTransformNodeById(a)}getTransformNodeByUniqueID(a){return this.getTransformNodeByUniqueId(a)}getTransformNodesByID(a){return this.getTransformNodesById(a)}getNodeByID(a){return this.getNodeById(a)}getLastEntryByID(a){return this.getLastEntryById(a)}getLastSkeletonByID(a){return this.getLastSkeletonById(a)}}aa.FOGMODE_NONE=0,aa.FOGMODE_EXP=1,aa.FOGMODE_EXP2=2,aa.FOGMODE_LINEAR=3,aa.MinDeltaTime=1,aa.MaxDeltaTime=1e3,(0,A.g)("BABYLON.Scene",aa)}}]);