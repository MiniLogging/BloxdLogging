"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{2463:(W,F,c)=>{c.r(F),c.d(F,{_BasisTextureLoader:()=>I});var T,Y=c(514),Z=c(2337),w=c(613);function A(){const W=0,F=1,c=2,T=3,Y=6,Z=8,w=9,A=10,u=14;let s=null;function x(W,F,c,T,Y){const Z=W.getImageTranscodedSizeInBytes(F,c,T);let w=new Uint8Array(Z);if(!W.transcodeImage(w,F,c,T,1,0))return null;if(Y){w=function(W,F,c,T){const Y=new Uint16Array(4),Z=new Uint16Array(c*T),w=c/4,A=T/4;for(let u=0;u<A;u++)for(let T=0;T<w;T++){const A=F+8*(u*w+T);Y[0]=W[A]|W[A+1]<<8,Y[1]=W[A+2]|W[A+3]<<8,Y[2]=(2*(31&Y[0])+1*(31&Y[1]))/3|(2*(2016&Y[0])+1*(2016&Y[1]))/3&2016|(2*(63488&Y[0])+1*(63488&Y[1]))/3&63488,Y[3]=(2*(31&Y[1])+1*(31&Y[0]))/3|(2*(2016&Y[1])+1*(2016&Y[0]))/3&2016|(2*(63488&Y[1])+1*(63488&Y[0]))/3&63488;for(let F=0;F<4;F++){const w=W[A+4+F];let s=(4*u+F)*c+4*T;Z[s++]=Y[3&w],Z[s++]=Y[w>>2&3],Z[s++]=Y[w>>4&3],Z[s++]=Y[w>>6&3]}}return Z}(w,0,W.getImageWidth(F,c)+3&-4,W.getImageHeight(F,c)+3&-4)}return w}onmessage=j=>{if("init"===j.data.action){if(j.data.url)try{importScripts(j.data.url)}catch(N){postMessage({action:"error",error:N})}s||(s=BASIS({wasmBinary:j.data.wasmBinary})),null!==s&&s.then((W=>{BASIS=W,W.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===j.data.action){const s=j.data.config,N=j.data.imageData,q=new BASIS.BasisFile(N),y=function(W){const F=W.getHasAlpha(),c=W.getNumImages(),T=[];for(let Y=0;Y<c;Y++){const F={levels:[]},c=W.getNumLevels(Y);for(let T=0;T<c;T++){const c={width:W.getImageWidth(Y,T),height:W.getImageHeight(Y,T)};F.levels.push(c)}T.push(F)}return{Ej:F,images:T}}(q);let i=j.data.ignoreSupportedFormats?null:function(s,x){let j=null;s.supportedCompressionFormats&&(j=s.supportedCompressionFormats.astc?A:s.supportedCompressionFormats.bc7?Y:s.supportedCompressionFormats.s3tc?x.Ej?T:c:s.supportedCompressionFormats.pvrtc?x.Ej?w:Z:s.supportedCompressionFormats.etc2?F:s.supportedCompressionFormats.etc1?W:u);return j}(j.data.config,y),e=!1;null===i&&(e=!0,i=y.Ej?T:c);let I=!0;q.startTranscoding()||(I=!1);const E=[];for(let W=0;W<y.images.length&&I;W++){const F=y.images[W];if(void 0===s.loadSingleImage||s.loadSingleImage===W){let c=F.levels.length;!1===s.loadMipmapLevels&&(c=1);for(let T=0;T<c;T++){const c=F.levels[T],Y=x(q,W,T,i,e);if(!Y){I=!1;break}c.transcodedPixels=Y,E.push(c.transcodedPixels.buffer)}}}q.close(),q.delete(),e&&(i=-1),I?postMessage({action:"transcode",success:I,id:j.data.id,fileInfo:y,format:i},E):postMessage({action:"transcode",success:I,id:j.data.id})}}}!function(W){W[W.cTFETC1=0]="cTFETC1",W[W.cTFETC2=1]="cTFETC2",W[W.cTFBC1=2]="cTFBC1",W[W.cTFBC3=3]="cTFBC3",W[W.cTFBC4=4]="cTFBC4",W[W.cTFBC5=5]="cTFBC5",W[W.cTFBC7=6]="cTFBC7",W[W.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",W[W.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",W[W.cTFASTC_4x4=10]="cTFASTC_4x4",W[W.cTFATC_RGB=11]="cTFATC_RGB",W[W.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",W[W.cTFRGBA32=13]="cTFRGBA32",W[W.cTFRGB565=14]="cTFRGB565",W[W.cTFBGR565=15]="cTFBGR565",W[W.cTFRGBA4444=16]="cTFRGBA4444",W[W.cTFFXT1_RGB=17]="cTFFXT1_RGB",W[W.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",W[W.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",W[W.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",W[W.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(T||(T={}));const u={JSModuleURL:`${Y.d._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${Y.d._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let s=null,x=null,j=0;const N=async()=>(s||(s=new Promise(((W,F)=>{x?W(x):Y.d.LoadFileAsync(Y.d.GetBabylonScriptURL(u.WasmModuleURL)).then((c=>{if("function"!==typeof URL)return F("Basis transcoder requires an environment with a URL constructor");const T=URL.createObjectURL(new Blob([`(${A})()`],{type:"application/javascript"}));x=new Worker(T),async function(W,F,c){return await new Promise(((T,Z)=>{const w=F=>{"init"===F.data.action?(W.removeEventListener("message",w),T(W)):"error"===F.data.action&&Z(F.data.error||"error initializing worker")};W.addEventListener("message",w),W.postMessage({action:"init",url:c?Y.d.GetBabylonScriptURL(c):void 0,wasmBinary:F},[F])}))}(x,c,u.JSModuleURL).then(W,F)})).catch(F)}))),await s),q=async(W,F)=>{const c=W instanceof ArrayBuffer?new Uint8Array(W):W;return await new Promise(((W,T)=>{N().then((()=>{const Y=j++,Z=F=>{"transcode"===F.data.action&&F.data.id===Y&&(x.removeEventListener("message",Z),F.data.success?W(F.data):T("Transcode is not supported on this device"))};x.addEventListener("message",Z);const w=new Uint8Array(c.byteLength);w.set(new Uint8Array(c.buffer,c.byteOffset,c.byteLength)),x.postMessage({action:"transcode",id:Y,imageData:w,config:F,ignoreSupportedFormats:false},[w.buffer])}),(W=>{T(W)}))}))},y=(W,F)=>{var c;let T=null===(c=F._gl)||void 0===c?void 0:c.TEXTURE_2D;var Y;W.isCube&&(T=null===(Y=F._gl)||void 0===Y?void 0:Y.TEXTURE_CUBE_MAP);F._bindTextureDirectly(T,W,!0)},i=(W,F)=>{const c=W.getEngine();for(let A=0;A<F.fileInfo.images.length;A++){const u=F.fileInfo.images[A].levels[0];if(W._invertVScale=W.invertY,-1===F.format||F.format===T.cTFRGB565)if(W.type=10,W.format=4,!c._features.basisNeedsPOT||Math.log2(u.width)%1===0&&Math.log2(u.height)%1===0)W._invertVScale=!W.invertY,W.width=u.width+3&-4,W.height=u.height+3&-4,W.samplingMode=2,y(W,c),c._uploadDataToTextureDirectly(W,new Uint16Array(u.transcodedPixels.buffer),A,0,4,!0);else{const F=new w.d(c,2);W._invertVScale=W.invertY,F.type=10,F.format=4,F.width=u.width+3&-4,F.height=u.height+3&-4,y(F,c),c._uploadDataToTextureDirectly(F,new Uint16Array(u.transcodedPixels.buffer),A,0,4,!0),c._rescaleTexture(F,W,c.scenes[0],c._getInternalFormat(4),(()=>{c._releaseTexture(F),y(W,c)}))}else{W.width=u.width,W.height=u.height,W.generateMipMaps=F.fileInfo.images[A].levels.length>1;const T=e.GetInternalFormatFromBasisFormat(F.format,c);W.format=T,y(W,c);const w=F.fileInfo.images[A].levels;for(let F=0;F<w.length;F++){const Y=w[F];c._uploadCompressedDataToTextureDirectly(W,T,Y.width,Y.height,Y.transcodedPixels,A,F)}!c._features.basisNeedsPOT||Math.log2(W.width)%1===0&&Math.log2(W.height)%1===0||(Y.d.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),W._cachedWrapU=Z.b.CLAMP_ADDRESSMODE,W._cachedWrapV=Z.b.CLAMP_ADDRESSMODE)}}},e={JSModuleURL:u.JSModuleURL,WasmModuleURL:u.WasmModuleURL,GetInternalFormatFromBasisFormat:(W,F)=>{let c;switch(W){case T.cTFETC1:c=36196;break;case T.cTFBC1:c=33776;break;case T.cTFBC4:c=33779;break;case T.cTFASTC_4x4:c=37808;break;case T.cTFETC2:c=37496;break;case T.cTFBC7:c=36492}if(void 0===c)throw"The chosen Basis transcoder format is not currently supported";return c},TranscodeAsync:q,LoadTextureFromTranscodeResult:i};Object.defineProperty(e,"JSModuleURL",{get:function(){return u.JSModuleURL},set:function(W){u.JSModuleURL=W}}),Object.defineProperty(e,"WasmModuleURL",{get:function(){return u.WasmModuleURL},set:function(W){u.WasmModuleURL=W}});class I{constructor(){this.supportCascades=!1}loadCubeData(W,F,c,T,Z){if(Array.isArray(W))return;const w=F.getEngine().getCaps(),A={supportedCompressionFormats:{etc1:!!w.etc1,s3tc:!!w.s3tc,pvrtc:!!w.pvrtc,etc2:!!w.etc2,astc:!!w.astc,bc7:!!w.bptc}};q(W,A).then((W=>{const c=W.fileInfo.images[0].levels.length>1&&F.generateMipMaps;i(F,W),F.getEngine()._setCubeMapTextureParams(F,c),F.isReady=!0,F.onLoadedObservable.notifyObservers(F),F.onLoadedObservable.clear(),T&&T()})).catch((W=>{Y.d.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),F.isReady=!0,Z&&Z(W)}))}loadData(W,F,c){const T=F.getEngine().getCaps(),Z={supportedCompressionFormats:{etc1:!!T.etc1,s3tc:!!T.s3tc,pvrtc:!!T.pvrtc,etc2:!!T.etc2,astc:!!T.astc,bc7:!!T.bptc}};q(W,Z).then((W=>{const T=W.fileInfo.images[0].levels[0],Y=W.fileInfo.images[0].levels.length>1&&F.generateMipMaps;c(T.width,T.height,Y,-1!==W.format,(()=>{i(F,W)}))})).catch((W=>{Y.d.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),Y.d.Warn(`Failed to transcode Basis file: ${W}`),c(0,0,!1,!1,(()=>{}),!0)}))}}}}]);