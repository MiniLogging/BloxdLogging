"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[8],{2514:(u,F,z)=>{z.r(F),z.d(F,{_BasisTextureLoader:()=>e});var p,b=z(528),R=z(2403),c=z(651);function I(){const u=0,F=1,z=2,p=3,b=6,R=8,c=9,I=10,G=14;let X=null;function j(u,F,z,p,b){const R=u.getImageTranscodedSizeInBytes(F,z,p);let c=new Uint8Array(R);if(!u.transcodeImage(c,F,z,p,1,0))return null;if(b){c=function(u,F,z,p){const b=new Uint16Array(4),R=new Uint16Array(z*p),c=z/4,I=p/4;for(let G=0;G<I;G++)for(let p=0;p<c;p++){const I=F+8*(G*c+p);b[0]=u[I]|u[I+1]<<8,b[1]=u[I+2]|u[I+3]<<8,b[2]=(2*(31&b[0])+1*(31&b[1]))/3|(2*(2016&b[0])+1*(2016&b[1]))/3&2016|(2*(63488&b[0])+1*(63488&b[1]))/3&63488,b[3]=(2*(31&b[1])+1*(31&b[0]))/3|(2*(2016&b[1])+1*(2016&b[0]))/3&2016|(2*(63488&b[1])+1*(63488&b[0]))/3&63488;for(let F=0;F<4;F++){const c=u[I+4+F];let X=(4*G+F)*z+4*p;R[X++]=b[3&c],R[X++]=b[c>>2&3],R[X++]=b[c>>4&3],R[X++]=b[c>>6&3]}}return R}(c,0,u.getImageWidth(F,z)+3&-4,u.getImageHeight(F,z)+3&-4)}return c}onmessage=W=>{if("init"===W.data.action){if(W.data.url)try{importScripts(W.data.url)}catch(E){postMessage({action:"error",error:E})}X||(X=BASIS({wasmBinary:W.data.wasmBinary})),null!==X&&X.then((u=>{BASIS=u,u.initializeBasis(),postMessage({action:"init"})}))}else if("transcode"===W.data.action){const X=W.data.config,E=W.data.imageData,L=new BASIS.BasisFile(E),k=function(u){const F=u.getHasAlpha(),z=u.getNumImages(),p=[];for(let b=0;b<z;b++){const F={levels:[]},z=u.getNumLevels(b);for(let p=0;p<z;p++){const z={width:u.getImageWidth(b,p),height:u.getImageHeight(b,p)};F.levels.push(z)}p.push(F)}return{qi:F,images:p}}(L);let N=W.data.ignoreSupportedFormats?null:function(X,j){let W=null;X.supportedCompressionFormats&&(W=X.supportedCompressionFormats.astc?I:X.supportedCompressionFormats.bc7?b:X.supportedCompressionFormats.s3tc?j.qi?p:z:X.supportedCompressionFormats.pvrtc?j.qi?c:R:X.supportedCompressionFormats.etc2?F:X.supportedCompressionFormats.etc1?u:G);return W}(W.data.config,k),Y=!1;null===N&&(Y=!0,N=k.qi?p:z);let e=!0;L.startTranscoding()||(e=!1);const d=[];for(let u=0;u<k.images.length&&e;u++){const F=k.images[u];if(void 0===X.loadSingleImage||X.loadSingleImage===u){let z=F.levels.length;!1===X.loadMipmapLevels&&(z=1);for(let p=0;p<z;p++){const z=F.levels[p],b=j(L,u,p,N,Y);if(!b){e=!1;break}z.transcodedPixels=b,d.push(z.transcodedPixels.buffer)}}}L.close(),L.delete(),Y&&(N=-1),e?postMessage({action:"transcode",success:e,id:W.data.id,fileInfo:k,format:N},d):postMessage({action:"transcode",success:e,id:W.data.id})}}}!function(u){u[u.cTFETC1=0]="cTFETC1",u[u.cTFETC2=1]="cTFETC2",u[u.cTFBC1=2]="cTFBC1",u[u.cTFBC3=3]="cTFBC3",u[u.cTFBC4=4]="cTFBC4",u[u.cTFBC5=5]="cTFBC5",u[u.cTFBC7=6]="cTFBC7",u[u.cTFPVRTC1_4_RGB=8]="cTFPVRTC1_4_RGB",u[u.cTFPVRTC1_4_RGBA=9]="cTFPVRTC1_4_RGBA",u[u.cTFASTC_4x4=10]="cTFASTC_4x4",u[u.cTFATC_RGB=11]="cTFATC_RGB",u[u.cTFATC_RGBA_INTERPOLATED_ALPHA=12]="cTFATC_RGBA_INTERPOLATED_ALPHA",u[u.cTFRGBA32=13]="cTFRGBA32",u[u.cTFRGB565=14]="cTFRGB565",u[u.cTFBGR565=15]="cTFBGR565",u[u.cTFRGBA4444=16]="cTFRGBA4444",u[u.cTFFXT1_RGB=17]="cTFFXT1_RGB",u[u.cTFPVRTC2_4_RGB=18]="cTFPVRTC2_4_RGB",u[u.cTFPVRTC2_4_RGBA=19]="cTFPVRTC2_4_RGBA",u[u.cTFETC2_EAC_R11=20]="cTFETC2_EAC_R11",u[u.cTFETC2_EAC_RG11=21]="cTFETC2_EAC_RG11"}(p||(p={}));const G={JSModuleURL:`${b.e._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.js`,WasmModuleURL:`${b.e._DefaultCdnUrl}/basisTranscoder/1/basis_transcoder.wasm`};let X=null,j=null,W=0;const E=async()=>(X||(X=new Promise(((u,F)=>{j?u(j):b.e.LoadFileAsync(b.e.GetBabylonScriptURL(G.WasmModuleURL)).then((z=>{if("function"!==typeof URL)return F("Basis transcoder requires an environment with a URL constructor");const p=URL.createObjectURL(new Blob([`(${I})()`],{type:"application/javascript"}));j=new Worker(p),async function(u,F,z){return await new Promise(((p,R)=>{const c=F=>{"init"===F.data.action?(u.removeEventListener("message",c),p(u)):"error"===F.data.action&&R(F.data.error||"error initializing worker")};u.addEventListener("message",c),u.postMessage({action:"init",url:z?b.e.GetBabylonScriptURL(z):void 0,wasmBinary:F},[F])}))}(j,z,G.JSModuleURL).then(u,F)})).catch(F)}))),await X),L=async(u,F)=>{const z=u instanceof ArrayBuffer?new Uint8Array(u):u;return await new Promise(((u,p)=>{E().then((()=>{const b=W++,R=F=>{"transcode"===F.data.action&&F.data.id===b&&(j.removeEventListener("message",R),F.data.success?u(F.data):p("Transcode is not supported on this device"))};j.addEventListener("message",R);const c=new Uint8Array(z.byteLength);c.set(new Uint8Array(z.buffer,z.byteOffset,z.byteLength)),j.postMessage({action:"transcode",id:b,imageData:c,config:F,ignoreSupportedFormats:false},[c.buffer])}),(u=>{p(u)}))}))},k=(u,F)=>{var z;let p=null===(z=F._gl)||void 0===z?void 0:z.TEXTURE_2D;var b;u.isCube&&(p=null===(b=F._gl)||void 0===b?void 0:b.TEXTURE_CUBE_MAP);F._bindTextureDirectly(p,u,!0)},N=(u,F)=>{const z=u.getEngine();for(let I=0;I<F.fileInfo.images.length;I++){const G=F.fileInfo.images[I].levels[0];if(u._invertVScale=u.invertY,-1===F.format||F.format===p.cTFRGB565)if(u.type=10,u.format=4,!z._features.basisNeedsPOT||Math.log2(G.width)%1===0&&Math.log2(G.height)%1===0)u._invertVScale=!u.invertY,u.width=G.width+3&-4,u.height=G.height+3&-4,u.samplingMode=2,k(u,z),z._uploadDataToTextureDirectly(u,new Uint16Array(G.transcodedPixels.buffer),I,0,4,!0);else{const F=new c.d(z,2);u._invertVScale=u.invertY,F.type=10,F.format=4,F.width=G.width+3&-4,F.height=G.height+3&-4,k(F,z),z._uploadDataToTextureDirectly(F,new Uint16Array(G.transcodedPixels.buffer),I,0,4,!0),z._rescaleTexture(F,u,z.scenes[0],z._getInternalFormat(4),(()=>{z._releaseTexture(F),k(u,z)}))}else{u.width=G.width,u.height=G.height,u.generateMipMaps=F.fileInfo.images[I].levels.length>1;const p=Y.GetInternalFormatFromBasisFormat(F.format,z);u.format=p,k(u,z);const c=F.fileInfo.images[I].levels;for(let F=0;F<c.length;F++){const b=c[F];z._uploadCompressedDataToTextureDirectly(u,p,b.width,b.height,b.transcodedPixels,I,F)}!z._features.basisNeedsPOT||Math.log2(u.width)%1===0&&Math.log2(u.height)%1===0||(b.e.Warn("Loaded .basis texture width and height are not a power of two. Texture wrapping will be set to Texture.CLAMP_ADDRESSMODE as other modes are not supported with non power of two dimensions in webGL 1."),u._cachedWrapU=R.e.CLAMP_ADDRESSMODE,u._cachedWrapV=R.e.CLAMP_ADDRESSMODE)}}},Y={JSModuleURL:G.JSModuleURL,WasmModuleURL:G.WasmModuleURL,GetInternalFormatFromBasisFormat:(u,F)=>{let z;switch(u){case p.cTFETC1:z=36196;break;case p.cTFBC1:z=33776;break;case p.cTFBC4:z=33779;break;case p.cTFASTC_4x4:z=37808;break;case p.cTFETC2:z=37496;break;case p.cTFBC7:z=36492}if(void 0===z)throw"The chosen Basis transcoder format is not currently supported";return z},TranscodeAsync:L,LoadTextureFromTranscodeResult:N};Object.defineProperty(Y,"JSModuleURL",{get:function(){return G.JSModuleURL},set:function(u){G.JSModuleURL=u}}),Object.defineProperty(Y,"WasmModuleURL",{get:function(){return G.WasmModuleURL},set:function(u){G.WasmModuleURL=u}});class e{constructor(){this.supportCascades=!1}loadCubeData(u,F,z,p,R){if(Array.isArray(u))return;const c=F.getEngine().getCaps(),I={supportedCompressionFormats:{etc1:!!c.etc1,s3tc:!!c.s3tc,pvrtc:!!c.pvrtc,etc2:!!c.etc2,astc:!!c.astc,bc7:!!c.bptc}};L(u,I).then((u=>{const z=u.fileInfo.images[0].levels.length>1&&F.generateMipMaps;N(F,u),F.getEngine()._setCubeMapTextureParams(F,z),F.isReady=!0,F.onLoadedObservable.notifyObservers(F),F.onLoadedObservable.clear(),p&&p()})).catch((u=>{b.e.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),F.isReady=!0,R&&R(u)}))}loadData(u,F,z){const p=F.getEngine().getCaps(),R={supportedCompressionFormats:{etc1:!!p.etc1,s3tc:!!p.s3tc,pvrtc:!!p.pvrtc,etc2:!!p.etc2,astc:!!p.astc,bc7:!!p.bptc}};L(u,R).then((u=>{const p=u.fileInfo.images[0].levels[0],b=u.fileInfo.images[0].levels.length>1&&F.generateMipMaps;z(p.width,p.height,b,-1!==u.format,(()=>{N(F,u)}))})).catch((u=>{b.e.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),b.e.Warn(`Failed to transcode Basis file: ${u}`),z(0,0,!1,!1,(()=>{}),!0)}))}}}}]);