"use strict";(self.fjf2z1c8il8=self.fjf2z1c8il8||[]).push([[25],{12859:(g,i,a)=>{a.d(i,{d:()=>I});var n=a(12441),L=a(12778),d=a(12447),b=a(12850),k=a(12843),e=a(12861),N=a(12820);class F extends k.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class I extends e.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(g){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(g,"DetailMap",140,new F,i),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=L.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=g._dirtyCallbacks[1]}isReadyForSubMesh(g,i,a){return!this._isEnabled||!(g._areTexturesDirty&&i.texturesEnabled&&a.getCaps().standardDerivatives&&this._texture&&b.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(g,i){if(this._isEnabled){g.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const a=i.getEngine();g._areTexturesDirty&&(a.getCaps().standardDerivatives&&this._texture&&b.b.DetailTextureEnabled&&this._isEnabled?((0,N.N)(this._texture,g,"DETAIL"),g.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):g.DETAIL=!1)}else g.DETAIL=!1}bindForSubMesh(g,i){if(!this._isEnabled)return;const a=this._material.isFrozen;g.useUbo&&a&&g.isSync||this._texture&&b.b.DetailTextureEnabled&&(g.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,N.q)(this._texture,g,"detail")),i.texturesEnabled&&this._texture&&b.b.DetailTextureEnabled&&g.setTexture("detailSampler",this._texture)}hasTexture(g){return this._texture===g}getActiveTextures(g){this._texture&&g.push(this._texture)}getAnimatables(g){this._texture&&this._texture.animations&&this._texture.animations.length>0&&g.push(this._texture)}dispose(g){var i;g&&(null===(i=this._texture)||void 0===i||i.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(g){g.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,n.e)([(0,d.H)("detailTexture"),(0,d.e)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"texture",void 0),(0,n.e)([(0,d.P)()],I.prototype,"diffuseBlendLevel",void 0),(0,n.e)([(0,d.P)()],I.prototype,"roughnessBlendLevel",void 0),(0,n.e)([(0,d.P)()],I.prototype,"bumpLevel",void 0),(0,n.e)([(0,d.P)(),(0,d.e)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"normalBlendMethod",void 0),(0,n.e)([(0,d.P)(),(0,d.e)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"isEnabled",void 0)},12843:(g,i,a)=>{a.d(i,{b:()=>n});class n{constructor(g){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=g,g)for(const i in g)Object.prototype.hasOwnProperty.call(g,i)&&this._setDefaultValue(i)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||g,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const g of Object.keys(this))"_"!==g[0]&&this._keys.push(g);if(this._externalProperties)for(const g in this._externalProperties)-1===this._keys.indexOf(g)&&this._keys.push(g)}isEqual(g){if(this._keys.length!==g._keys.length)return!1;for(let i=0;i<this._keys.length;i++){const a=this._keys[i];if(this[a]!==g[a])return!1}return!0}cloneTo(g){this._keys.length!==g._keys.length&&(g._keys=this._keys.slice(0));for(let i=0;i<this._keys.length;i++){const a=this._keys[i];g[a]=this[a]}}reset(){for(const g of this._keys)this._setDefaultValue(g)}_setDefaultValue(g){var i,a,n,L;const d=(null===(i=this._externalProperties)||void 0===i||null===(a=i[g])||void 0===a?void 0:a.type)??typeof this[g],b=null===(n=this._externalProperties)||void 0===n||null===(L=n[g])||void 0===L?void 0:L.default;switch(d){case"number":this[g]=b??0;break;case"string":this[g]=b??"";break;default:this[g]=b??!1}}toString(){let g="";for(let i=0;i<this._keys.length;i++){const a=this._keys[i],n=this[a];switch(typeof n){case"number":case"string":g+="#define "+a+" "+n+"\n";break;default:n&&(g+="#define "+a+"\n")}}return g}}},12850:(g,i,a)=>{a.d(i,{b:()=>L});var n=a(12354);class L{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(g){this._DiffuseTextureEnabled!==g&&(this._DiffuseTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(g){this._BaseWeightTextureEnabled!==g&&(this._BaseWeightTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(g){this._BaseDiffuseRoughnessTextureEnabled!==g&&(this._BaseDiffuseRoughnessTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(g){this._DetailTextureEnabled!==g&&(this._DetailTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(g){this._DecalMapEnabled!==g&&(this._DecalMapEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(g){this._AmbientTextureEnabled!==g&&(this._AmbientTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(g){this._OpacityTextureEnabled!==g&&(this._OpacityTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(g){this._ReflectionTextureEnabled!==g&&(this._ReflectionTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(g){this._EmissiveTextureEnabled!==g&&(this._EmissiveTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(g){this._SpecularTextureEnabled!==g&&(this._SpecularTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(g){this._BumpTextureEnabled!==g&&(this._BumpTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(g){this._LightmapTextureEnabled!==g&&(this._LightmapTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(g){this._RefractionTextureEnabled!==g&&(this._RefractionTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(g){this._ColorGradingTextureEnabled!==g&&(this._ColorGradingTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(g){this._FresnelEnabled!==g&&(this._FresnelEnabled=g,n.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(g){this._ClearCoatTextureEnabled!==g&&(this._ClearCoatTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(g){this._ClearCoatBumpTextureEnabled!==g&&(this._ClearCoatBumpTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(g){this._ClearCoatTintTextureEnabled!==g&&(this._ClearCoatTintTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(g){this._SheenTextureEnabled!==g&&(this._SheenTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(g){this._AnisotropicTextureEnabled!==g&&(this._AnisotropicTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(g){this._ThicknessTextureEnabled!==g&&(this._ThicknessTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(g){this._RefractionIntensityTextureEnabled!==g&&(this._RefractionIntensityTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(g){this._TranslucencyIntensityTextureEnabled!==g&&(this._TranslucencyIntensityTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(g){this._TranslucencyColorTextureEnabled!==g&&(this._TranslucencyColorTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(g){this._IridescenceTextureEnabled!==g&&(this._IridescenceTextureEnabled=g,n.d.MarkAllMaterialsAsDirty(1))}}L._DiffuseTextureEnabled=!0,L._BaseWeightTextureEnabled=!0,L._BaseDiffuseRoughnessTextureEnabled=!0,L._DetailTextureEnabled=!0,L._DecalMapEnabled=!0,L._AmbientTextureEnabled=!0,L._OpacityTextureEnabled=!0,L._ReflectionTextureEnabled=!0,L._EmissiveTextureEnabled=!0,L._SpecularTextureEnabled=!0,L._BumpTextureEnabled=!0,L._LightmapTextureEnabled=!0,L._RefractionTextureEnabled=!0,L._ColorGradingTextureEnabled=!0,L._FresnelEnabled=!0,L._ClearCoatTextureEnabled=!0,L._ClearCoatBumpTextureEnabled=!0,L._ClearCoatTintTextureEnabled=!0,L._SheenTextureEnabled=!0,L._AnisotropicTextureEnabled=!0,L._ThicknessTextureEnabled=!0,L._RefractionIntensityTextureEnabled=!0,L._TranslucencyIntensityTextureEnabled=!0,L._TranslucencyColorTextureEnabled=!0,L._IridescenceTextureEnabled=!0},12865:(g,i,a)=>{a.d(i,{c:()=>d});var n,L=a(12452);!function(g){g[g.Zero=0]="Zero",g[g.One=1]="One",g[g.MaxViewZ=2]="MaxViewZ"}(n||(n={}));class d{static CreateConfiguration(g){return d._Configurations[g]={defines:{},previousWorldMatrices:{},previousViewProjection:L.Matrix.Zero(),currentViewProjection:L.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},d._Configurations[g]}static DeleteConfiguration(g){delete d._Configurations[g]}static GetConfiguration(g){return d._Configurations[g]}static AddUniformsAndSamplers(g,i){g.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(g,i){for(const a of i)if(a.Yd)for(const i of a.Yd)i._removeDrawWrapper(g)}static PrepareDefines(g,i,a){if(!a._arePrePassDirty)return;const n=d._Configurations[g];if(!n)return;a.PREPASS=!0,a.PREPASS_COLOR=!1,a.PREPASS_COLOR_INDEX=-1;let L=0;for(let b=0;b<d.GeometryTextureDescriptions.length;b++){const g=d.GeometryTextureDescriptions[b],i=g.define,k=g.defineIndex,e=n.defines[k];void 0!==e?(a[i]=!0,a[k]=e,L++):(a[i]=!1,delete a[k])}a.SCENE_MRT_COUNT=L,a.BONES_VELOCITY_ENABLED=i.useBones&&i.computeBonesUsingShaders&&i.skeleton&&!i.skeleton.isUsingTextureForMatrices&&-1===n.excludedSkinnedMesh.indexOf(i)}static Bind(g,i,a,n,L){const b=d._Configurations[g];if(!b)return;const k=a.Pg(),e=k.getEngine();if(b.reverseCulling&&e.setStateCullFaceType(k._mirroredCameraPosition?L.cullBackFaces:!L.cullBackFaces),(void 0!==b.defines.PREPASS_VELOCITY_INDEX||void 0!==b.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(b.previousWorldMatrices[a.uniqueId]||(b.previousWorldMatrices[a.uniqueId]=n.clone()),b.previousViewProjection||(b.previousViewProjection=k.getTransformMatrix().clone(),b.currentViewProjection=k.getTransformMatrix().clone()),b.currentViewProjection.updateFlag!==k.getTransformMatrix().updateFlag?(b.lastUpdateFrameId=e.frameId,b.previousViewProjection.I(b.currentViewProjection),b.currentViewProjection.I(k.getTransformMatrix())):b.lastUpdateFrameId!==e.frameId&&(b.lastUpdateFrameId=e.frameId,b.previousViewProjection.I(b.currentViewProjection)),i.setMatrix("previousWorld",b.previousWorldMatrices[a.uniqueId]),i.setMatrix("previousViewProjection",b.previousViewProjection),b.previousWorldMatrices[a.uniqueId]=n.clone(),a.useBones&&a.computeBonesUsingShaders&&a.skeleton)){const g=a.skeleton;if(!g.isUsingTextureForMatrices||-1===i.getUniformIndex("boneTextureWidth")){const n=g.getTransformMatrices(a);n&&(b.previousBones[a.uniqueId]||(b.previousBones[a.uniqueId]=n.slice()),i.setMatrices("mPreviousBones",b.previousBones[a.uniqueId]),b.previousBones[a.uniqueId].set(n))}}}}d.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],d._Configurations={}},12861:(g,i,a)=>{a.d(i,{b:()=>p});var n=a(12441),L=a(12447),d=a(12778),b=a(12316),k=a(12337),e=a(12367);const N=new RegExp("^([gimus]+)!");class F{constructor(g){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=g,this._scene=g.Pg(),this._engine=this._scene.getEngine()}_addPlugin(g){for(let n=0;n<this._plugins.length;++n)if(this._plugins[n].name===g.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!g.isCompatible(this._material.shaderLanguage))throw`The plugin "${g.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const i=g.getClassName();F._MaterialPluginClassToMainDefine[i]||(F._MaterialPluginClassToMainDefine[i]="MATERIALPLUGIN_"+ ++F._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(g,i)=>this._handlePluginEvent(g,i),this._plugins.push(g),this._plugins.sort(((g,i)=>g.priority-i.priority)),this._codeInjectionPoints={};const a={};a[F._MaterialPluginClassToMainDefine[i]]={type:"boolean",default:!0};for(const n of this._plugins)n.collectDefines(a),this._collectPointNames("vertex",n.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",n.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=a,!0}_activatePlugin(g){-1===this._activePlugins.indexOf(g)&&(this._activePlugins.push(g),this._activePlugins.sort(((g,i)=>g.priority-i.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),g.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(g),this._activePluginsForExtraEvents.sort(((g,i)=>g.priority-i.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(g){for(let i=0;i<this._plugins.length;++i)if(this._plugins[i].name===g)return this._plugins[i];return null}_handlePluginEventIsReadyForSubMesh(g){let i=!0;for(const a of this._activePlugins)i=i&&a.isReadyForSubMesh(g.defines,this._scene,this._engine,g.subMesh);g.isReadyForSubMesh=i}_handlePluginEventPrepareDefinesBeforeAttributes(g){for(const i of this._activePlugins)i.prepareDefinesBeforeAttributes(g.defines,this._scene,g.mesh)}_handlePluginEventPrepareDefines(g){for(const i of this._activePlugins)i.prepareDefines(g.defines,this._scene,g.mesh)}_handlePluginEventHardBindForSubMesh(g){for(const i of this._activePluginsForExtraEvents)i.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,g.subMesh)}_handlePluginEventBindForSubMesh(g){for(const i of this._activePlugins)i.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,g.subMesh)}_handlePluginEventHasRenderTargetTextures(g){let i=!1;for(const a of this._activePluginsForExtraEvents)if(i=a.hasRenderTargetTextures(),i)break;g.hasRenderTargetTextures=i}_handlePluginEventFillRenderTargetTextures(g){for(const i of this._activePluginsForExtraEvents)i.fillRenderTargetTextures(g.renderTargets)}_handlePluginEvent(g,i){switch(g){case 512:{const g=i;for(const i of this._activePlugins)i.getActiveTextures(g.activeTextures);break}case 256:{const g=i;for(const i of this._activePlugins)i.getAnimatables(g.animatables);break}case 1024:{const g=i;let a=!1;for(const i of this._activePlugins)if(a=i.hasTexture(g.texture),a)break;g.hasTexture=a;break}case 2:{const g=i;for(const i of this._plugins)i.dispose(g.forceDisposeTextures);break}case 4:i.defineNames=this._defineNamesFromPlugins;break;case 128:{const g=i;for(const i of this._activePlugins)g.fallbackRank=i.addFallbacks(g.defines,g.fallbacks,g.fallbackRank),i.getAttributes(g.attributes,this._scene,g.mesh);this._uniformList.length>0&&g.uniforms.push(...this._uniformList),this._samplerList.length>0&&g.samplers.push(...this._samplerList),this._uboList.length>0&&g.uniformBuffersNames.push(...this._uboList),g.customCode=this._injectCustomCode(g,g.customCode);break}case 8:{const g=i;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const a=1===this._material.shaderLanguage;for(const i of this._plugins){const n=i.getUniforms(this._material.shaderLanguage);if(n){if(n.ubo)for(const i of n.ubo){if(i.size&&i.type){const n=i.arraySize??0;if(g.ubo.addUniform(i.name,i.size,n),a){let g;switch(i.type){case"mat4":g="mat4x4f";break;case"float":g="f32";break;default:g=`${i.type}f`}this._uboDeclaration+=n>0?`uniform ${i.name}: array<${g}, ${n}>;\n`:`uniform ${i.name}: ${g};\n`}else this._uboDeclaration+=`${i.type} ${i.name}${n>0?`[${n}]`:""};\n`}this._uniformList.push(i.name)}n.vertex&&(this._vertexDeclaration+=n.vertex+"\n"),n.fragment&&(this._fragmentDeclaration+=n.fragment+"\n")}i.getSamplers(this._samplerList),i.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(g,i){if(i)for(const a in i)this._codeInjectionPoints[g]||(this._codeInjectionPoints[g]={}),this._codeInjectionPoints[g][a]=!0}_injectCustomCode(g,i){return(a,n)=>{var L;i&&(n=i(a,n)),this._uboDeclaration&&(n=n.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(n=n.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(n=n.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const d=null===(L=this._codeInjectionPoints)||void 0===L?void 0:L[a];if(!d)return n;let b=null;for(let i in d){let L="";for(const n of this._activePlugins){var F;let d=null===(F=n.getCustomCode(a,this._material.shaderLanguage))||void 0===F?void 0:F[i];if(d){if(n.resolveIncludes){if(null===b){const i=0;b={defines:[],indexParameters:g.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:e.c.GetShadersRepository(i),includesShadersStore:e.c.GetIncludesShadersStore(i),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,o:this._engine.o,processCodeAfterIncludes:void 0}}b.isFragment="fragment"===a,(0,k.g)(d,b,(g=>d=g))}L+=d+"\n"}}if(L.length>0)if("!"===i.charAt(0)){i=i.substring(1);let g="g";if("!"===i.charAt(0))g="",i=i.substring(1);else{const a=N.exec(i);a&&a.length>=2&&(g=a[1],i=i.substring(g.length+1))}g.indexOf("g")<0&&(g+="g");const a=n,d=new RegExp(i,g);let b=d.exec(a);for(;null!==b;){let g=L;for(let i=0;i<b.length;++i)g=g.replace("$"+i,b[i]);n=n.replace(b[0],g),b=d.exec(a)}}else{const g="#define "+i;n=n.replace(g,"\n"+L+"\n"+g)}}return n}}}F._MaterialPluginClassToMainDefine={},F._MaterialPluginCounter=0,b.c.OnEnginesDisposedObservable.add((()=>{B()}));const I=[];let j=!1,y=null;function B(){I.length=0,j=!1,d.c.OnEventObservable.remove(y),y=null}var c=a(12484),D=a(12415);class p{isCompatible(g){return 0===g}_enable(g){g&&this._pluginManager._activatePlugin(this)}constructor(g,i,a,n){let L=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=g,this.name=i,this.priority=a,this.resolveIncludes=b,g.pluginManager||(g.pluginManager=new F(g),g.dd.add((()=>{g.pluginManager=void 0}))),this._pluginDefineNames=n,this._pluginManager=g.pluginManager,L&&this._pluginManager._addPlugin(this),d&&this._enable(!0),this.markAllDefinesAsDirty=g._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(g,i,a,n){return!0}hardBindForSubMesh(g,i,a,n){}bindForSubMesh(g,i,a,n){}dispose(g){}getCustomCode(g){return null}collectDefines(g){if(this._pluginDefineNames)for(const i of Object.keys(this._pluginDefineNames)){if("_"===i[0])continue;const a=typeof this._pluginDefineNames[i];g[i]={type:"number"===a?"number":"string"===a?"string":"boolean"===a?"boolean":"object",default:this._pluginDefineNames[i]}}}prepareDefinesBeforeAttributes(g,i,a){}prepareDefines(g,i,a){}hasTexture(g){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(g){}getActiveTextures(g){}getAnimatables(g){}addFallbacks(g,i,a){return a}getSamplers(g){}getAttributes(g,i,a){}getUniformBuffersNames(g){}getUniforms(){return{}}copyTo(g){c.c.Clone((()=>g),this)}serialize(){return c.c.Serialize(this)}parse(g,i,a){c.c.Parse((()=>this),g,i,a)}}(0,n.e)([(0,L.P)()],p.prototype,"name",void 0),(0,n.e)([(0,L.P)()],p.prototype,"priority",void 0),(0,n.e)([(0,L.P)()],p.prototype,"resolveIncludes",void 0),(0,n.e)([(0,L.P)()],p.prototype,"registerForExtraEvents",void 0),(0,D.e)("BABYLON.MaterialPluginBase",p)},12836:(g,i,a)=>{a.d(i,{c:()=>n});class n{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(g){g.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(g){}bindForSubMesh(g,i,a,n,L){if(i.prePassRenderer&&i.prePassRenderer.enabled&&i.prePassRenderer.currentRTisSceneRT&&(-1!==i.prePassRenderer.getIndex(2)||-1!==i.prePassRenderer.getIndex(11))){this.previousWorldMatrices[a.uniqueId]||(this.previousWorldMatrices[a.uniqueId]=n.clone()),this.previousViewProjection||(this.previousViewProjection=i.getTransformMatrix().clone(),this.currentViewProjection=i.getTransformMatrix().clone());const L=i.getEngine();this.currentViewProjection.updateFlag!==i.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.I(this.currentViewProjection),this.currentViewProjection.I(i.getTransformMatrix())):this._lastUpdateFrameId!==L.frameId&&(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.I(this.currentViewProjection)),g.setMatrix("previousWorld",this.previousWorldMatrices[a.uniqueId]),g.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[a.uniqueId]=n.clone()}}}},12831:(g,i,a)=>{a.d(i,{pi:()=>f});var n=a(12441),L=a(12447),d=a(12541),b=a(12692),k=a(12496),e=a(12526),N=a(12836),F=a(12701),I=a(12778),j=a(12843),y=a(12773),B=a(12436),c=a(12415),D=a(12850),p=a(12770),R=a(12859),x=a(12825),E=a(12820),X=a(12484),v=a(12865);const P={effect:null,subMesh:null};class Y extends j.b{constructor(g){super(g),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(g){const i=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const a of i)this[a]=a===g}}class f extends y.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(g){this._attachImageProcessingConfiguration(g),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(g){g!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=g||this.Pg().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(g){this.imageProcessingConfiguration.colorCurvesEnabled=g}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(g){this.imageProcessingConfiguration.colorGradingEnabled=g}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(g){this._imageProcessingConfiguration.toneMappingEnabled=g}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(g){this._imageProcessingConfiguration.exposure=g}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(g){this._imageProcessingConfiguration.contrast=g}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(g){this._imageProcessingConfiguration.colorGradingTexture=g}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(g){this._imageProcessingConfiguration.colorCurves=g}get canRenderToMRT(){return!0}constructor(g,i){super(g,i,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||f.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new k.Ri(0,0,0),this.diffuseColor=new k.Ri(1,1,1),this.specularColor=new k.Ri(1,1,1),this.emissiveColor=new k.Ri(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new d.g(16),this._globalAmbientColor=new k.Ri(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new R.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new N.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"pi"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===I.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Ud&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==I.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Ud||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(g,i){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const L=i._drawWrapper;if(L.effect&&this.isFrozen&&L._wasPreviouslyReady&&L._wasPreviouslyUsingInstances===n)return!0;i.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),i.materialDefines=new Y(this._eventInfo.defineNames));const d=this.Pg(),b=i.materialDefines;if(this._isReadyForSubMesh(i))return!0;const k=d.getEngine();b._needNormals=(0,E.L)(d,g,b,!0,this._maxSimultaneousLights,this._disableLighting),(0,E.S)(d,b);const I=this.needAlphaBlendingForMesh(g)&&this.Pg().useOrderIndependentTransparency;if((0,E.Y)(d,b,this.canRenderToMRT&&!I),(0,E.U)(d,b,I),v.c.PrepareDefines(k.currentRenderPassId,g,b),b._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,b._needUVs=!1;for(let g=1;g<=6;++g)b["MAINUV"+g]=!1;if(d.texturesEnabled){if(b.DIFFUSEDIRECTUV=0,b.BUMPDIRECTUV=0,b.AMBIENTDIRECTUV=0,b.OPACITYDIRECTUV=0,b.EMISSIVEDIRECTUV=0,b.SPECULARDIRECTUV=0,b.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&f.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._diffuseTexture,b,"DIFFUSE")}else b.DIFFUSE=!1;if(this._ambientTexture&&f.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._ambientTexture,b,"AMBIENT")}else b.AMBIENT=!1;if(this._opacityTexture&&f.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._opacityTexture,b,"OPACITY"),b.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else b.OPACITY=!1;if(this._reflectionTexture&&f.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(b._needNormals=!0,b.REFLECTION=!0,b.ROUGHNESS=this._roughness>0,b.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,b.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===B.c.INVCUBIC_MODE,b.REFLECTIONMAP_3D=this._reflectionTexture.isCube,b.REFLECTIONMAP_OPPOSITEZ=b.REFLECTIONMAP_3D&&this.Pg().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,b.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case B.c.EXPLICIT_MODE:b.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case B.c.PLANAR_MODE:b.setReflectionMode("REFLECTIONMAP_PLANAR");break;case B.c.PROJECTION_MODE:b.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case B.c.SKYBOX_MODE:b.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case B.c.SPHERICAL_MODE:b.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case B.c.EQUIRECTANGULAR_MODE:b.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case B.c.FIXED_EQUIRECTANGULAR_MODE:b.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case B.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:b.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case B.c.CUBIC_MODE:case B.c.INVCUBIC_MODE:default:b.setReflectionMode("REFLECTIONMAP_CUBIC")}b.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else b.REFLECTION=!1,b.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&f.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._emissiveTexture,b,"EMISSIVE")}else b.EMISSIVE=!1;if(this._lightmapTexture&&f.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._lightmapTexture,b,"LIGHTMAP"),b.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,b.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else b.LIGHTMAP=!1;if(this._specularTexture&&f.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,E.N)(this._specularTexture,b,"SPECULAR"),b.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else b.SPECULAR=!1;if(d.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&f.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,E.N)(this._bumpTexture,b,"BUMP"),b.PARALLAX=this._useParallax,b.PARALLAX_RHS=d.useRightHandedSystem,b.PARALLAXOCCLUSION=this._useParallaxOcclusion,b.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else b.BUMP=!1,b.PARALLAX=!1,b.PARALLAX_RHS=!1,b.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&f.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;b._needUVs=!0,b.REFRACTION=!0,b.REFRACTIONMAP_3D=this._refractionTexture.isCube,b.RGBDREFRACTION=this._refractionTexture.isRGBD,b.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else b.REFRACTION=!1;b.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else b.DIFFUSE=!1,b.AMBIENT=!1,b.OPACITY=!1,b.REFLECTION=!1,b.EMISSIVE=!1,b.LIGHTMAP=!1,b.BUMP=!1,b.REFRACTION=!1;b.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),b.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,b.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,b.SPECULAROVERALPHA=this._useSpecularOverAlpha,b.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,b.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,b.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(g)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=b,this._eventInfo.subMesh=i,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(b._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(b),b.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,b.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(b._areFresnelDirty&&(f.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(b.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,b.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,b.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,b.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,b.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,b.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,b._needNormals=!0,b.FRESNEL=!0):b.FRESNEL=!1),b.AREALIGHTUSED)for(let a=0;a<g.lightSources.length;a++)if(!g.lightSources[a]._isReady())return!1;(0,E.O)(g,d,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(g),b,this._applyDecalMapAfterDetailMap),(0,E.K)(d,k,this,b,n,null,i.getRenderingMesh().hasThinInstances),this._eventInfo.defines=b,this._eventInfo.mesh=g,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,E.I)(g,b,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let j=!1;if(b.isDirty){const n=b._areLightsDisposed;b.markAsProcessed();const L=new p.b;b.REFLECTION&&L.addFallback(0,"REFLECTION"),b.SPECULAR&&L.addFallback(0,"SPECULAR"),b.BUMP&&L.addFallback(0,"BUMP"),b.PARALLAX&&L.addFallback(1,"PARALLAX"),b.PARALLAX_RHS&&L.addFallback(1,"PARALLAX_RHS"),b.PARALLAXOCCLUSION&&L.addFallback(0,"PARALLAXOCCLUSION"),b.SPECULAROVERALPHA&&L.addFallback(0,"SPECULAROVERALPHA"),b.FOG&&L.addFallback(1,"FOG"),b.POINTSIZE&&L.addFallback(0,"POINTSIZE"),b.LOGARITHMICDEPTH&&L.addFallback(0,"LOGARITHMICDEPTH"),(0,E.r)(b,L,this._maxSimultaneousLights),b.SPECULARTERM&&L.addFallback(0,"SPECULARTERM"),b.DIFFUSEFRESNEL&&L.addFallback(1,"DIFFUSEFRESNEL"),b.OPACITYFRESNEL&&L.addFallback(2,"OPACITYFRESNEL"),b.REFLECTIONFRESNEL&&L.addFallback(3,"REFLECTIONFRESNEL"),b.EMISSIVEFRESNEL&&L.addFallback(4,"EMISSIVEFRESNEL"),b.FRESNEL&&L.addFallback(4,"FRESNEL"),b.MULTIVIEW&&L.addFallback(0,"MULTIVIEW");const I=[e.g.PositionKind];b.NORMAL&&I.push(e.g.NormalKind),b.TANGENT&&I.push(e.g.TangentKind);for(let g=1;g<=6;++g)b["UV"+g]&&I.push(`uv${1===g?"":g}`);b.VERTEXCOLOR&&I.push(e.g.ColorKind),(0,E.x)(I,g,b,L),(0,E.B)(I,b),(0,E.E)(I,g,b),(0,E.v)(I,g,b);let y="default";const B=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],c=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],D=["Material","Scene","Mesh"],R={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:b.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=L,this._eventInfo.fallbackRank=0,this._eventInfo.defines=b,this._eventInfo.uniforms=B,this._eventInfo.attributes=I,this._eventInfo.samplers=c,this._eventInfo.uniformBuffersNames=D,this._eventInfo.customCode=void 0,this._eventInfo.mesh=g,this._eventInfo.indexParameters=R,this._callbackPluginEventGeneric(128,this._eventInfo),v.c.AddUniformsAndSamplers(B,c),N.c.AddUniforms(B),N.c.AddSamplers(c),F.c&&(F.c.PrepareUniforms(B,b),F.c.PrepareSamplers(c,b)),(0,E.Z)({uniformsNames:B,uniformBuffersNames:D,samplers:c,defines:b,maxSimultaneousLights:this._maxSimultaneousLights}),(0,x.e)(B);const X={};this.customShaderNameResolve&&(y=this.customShaderNameResolve(y,B,D,c,b,I,X));const Y=b.toString(),f=i.effect;let C=d.getEngine().createEffect(y,{attributes:I,uniformsNames:B,uniformBuffersNames:D,samplers:c,defines:Y,fallbacks:L,onCompiled:this.onCompiled,onError:this.onError,indexParameters:R,processFinalCode:X.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:b.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([a.e(41),a.e(64)]).then(a.bind(a,15099)),Promise.all([a.e(39),a.e(65)]).then(a.bind(a,15247))]):await Promise.all([Promise.all([a.e(34),a.e(67)]).then(a.bind(a,15329)),Promise.all([a.e(33),a.e(68)]).then(a.bind(a,15473))]),this._shadersLoaded=!0}},k);if(this._eventInfo.customCode=void 0,C)if(this._onEffectCreatedObservable&&(P.effect=C,P.subMesh=i,this._onEffectCreatedObservable.notifyObservers(P)),this.allowShaderHotSwapping&&f&&!C.isReady()){if(C=f,b.markAsUnprocessed(),j=this.isFrozen,n)return b._areLightsDisposed=!0,!1}else d.resetCachedMaterial(),i.setEffect(C,b,this._materialContext)}return!(!i.effect||!i.effect.isReady())&&(b._renderId=d.getRenderId(),L._wasPreviouslyReady=!j,L._wasPreviouslyUsingInstances=n,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const g=this._uniformBuffer;g.addUniform("diffuseLeftColor",4),g.addUniform("diffuseRightColor",4),g.addUniform("opacityParts",4),g.addUniform("reflectionLeftColor",4),g.addUniform("reflectionRightColor",4),g.addUniform("refractionLeftColor",4),g.addUniform("refractionRightColor",4),g.addUniform("emissiveLeftColor",4),g.addUniform("emissiveRightColor",4),g.addUniform("vDiffuseInfos",2),g.addUniform("vAmbientInfos",2),g.addUniform("vOpacityInfos",2),g.addUniform("vReflectionInfos",2),g.addUniform("vReflectionPosition",3),g.addUniform("vReflectionSize",3),g.addUniform("vEmissiveInfos",2),g.addUniform("vLightmapInfos",2),g.addUniform("vSpecularInfos",2),g.addUniform("vBumpInfos",3),g.addUniform("diffuseMatrix",16),g.addUniform("ambientMatrix",16),g.addUniform("opacityMatrix",16),g.addUniform("reflectionMatrix",16),g.addUniform("emissiveMatrix",16),g.addUniform("lightmapMatrix",16),g.addUniform("specularMatrix",16),g.addUniform("bumpMatrix",16),g.addUniform("vTangentSpaceParams",2),g.addUniform("pointSize",1),g.addUniform("alphaCutOff",1),g.addUniform("refractionMatrix",16),g.addUniform("vRefractionInfos",4),g.addUniform("vRefractionPosition",3),g.addUniform("vRefractionSize",3),g.addUniform("vSpecularColor",4),g.addUniform("vEmissiveColor",3),g.addUniform("vDiffuseColor",4),g.addUniform("vAmbientColor",3),g.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(g,i,a){const n=this.Pg(),L=a.materialDefines;if(!L)return;const d=a.effect;if(!d)return;this._activeEffect=d,i.getMeshUniformBuffer().bindToEffect(d,"Mesh"),i.transferToEffect(g),this._uniformBuffer.bindToEffect(d,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,n,i,g,this.isFrozen),v.c.Bind(n.getEngine().currentRenderPassId,this._activeEffect,i,g,this);const e=n.activeCamera;e?this._uniformBuffer.updateFloat4("cameraInfo",e.Vd,e.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=a,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),L.OBJECTSPACE_NORMALMAP&&(g.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const N=this._mustRebind(n,d,a,i.visibility);(0,E.c)(i,d);const F=this._uniformBuffer;if(N){if(this.bindViewProjection(d),!F.useUbo||!this.isFrozen||!F.isSync||a._drawWrapper._forceRebindOnNextCall){if(f.FresnelEnabled&&L.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(F.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),F.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&F.updateColor4("opacityParts",new k.Ri(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(F.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),F.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(F.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),F.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(F.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),F.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),n.texturesEnabled){if(this._diffuseTexture&&f.DiffuseTextureEnabled&&(F.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,E.q)(this._diffuseTexture,F,"diffuse")),this._ambientTexture&&f.AmbientTextureEnabled&&(F.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,E.q)(this._ambientTexture,F,"ambient")),this._opacityTexture&&f.OpacityTextureEnabled&&(F.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,E.q)(this._opacityTexture,F,"opacity")),this._hasAlphaChannel()&&F.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&f.ReflectionTextureEnabled){if(F.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),F.ld("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const g=this._reflectionTexture;F.updateVector3("vReflectionPosition",g.boundingBoxPosition),F.updateVector3("vReflectionSize",g.boundingBoxSize)}}else F.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&f.EmissiveTextureEnabled&&(F.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,E.q)(this._emissiveTexture,F,"emissive")),this._lightmapTexture&&f.LightmapTextureEnabled&&(F.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,E.q)(this._lightmapTexture,F,"lightmap")),this._specularTexture&&f.SpecularTextureEnabled&&(F.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,E.q)(this._specularTexture,F,"specular")),this._bumpTexture&&n.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&(F.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,E.q)(this._bumpTexture,F,"bump"),n._mirroredCameraPosition?F.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):F.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&f.RefractionTextureEnabled){let g=1;if(this._refractionTexture.isCube||(F.ld("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(g=this._refractionTexture.depth)),F.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,g,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const g=this._refractionTexture;F.updateVector3("vRefractionPosition",g.boundingBoxPosition),F.updateVector3("vRefractionSize",g.boundingBoxSize)}}}this.pointsCloud&&F.updateFloat("pointSize",this.pointSize),F.updateColor4("vSpecularColor",this.specularColor,this.specularPower),F.updateColor3("vEmissiveColor",f.EmissiveTextureEnabled?this.emissiveColor:k.Ri.BlackReadOnly),F.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),n.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),F.updateColor3("vAmbientColor",this._globalAmbientColor)}n.texturesEnabled&&(this._diffuseTexture&&f.DiffuseTextureEnabled&&d.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&f.AmbientTextureEnabled&&d.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&f.OpacityTextureEnabled&&d.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&f.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?d.setTexture("reflectionCubeSampler",this._reflectionTexture):d.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&f.EmissiveTextureEnabled&&d.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&f.LightmapTextureEnabled&&d.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&f.SpecularTextureEnabled&&d.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&n.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&d.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&f.RefractionTextureEnabled&&(this._refractionTexture.isCube?d.setTexture("refractionCubeSampler",this._refractionTexture):d.setTexture("refraction2DSampler",this._refractionTexture))),this.Pg().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(i)&&this.Pg().depthPeelingRenderer.bind(d),this._eventInfo.subMesh=a,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,x.i)(d,this,n),this.bindEyePosition(d)}else n.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(N||!this.isFrozen){var I;if(n.lightsEnabled&&!this._disableLighting&&(0,E.f)(n,i,d,L,this._maxSimultaneousLights),(n.fogEnabled&&i.applyFog&&n.fogMode!==b.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||i.receiveShadows||L.PREPASS)&&this.bindView(d),(0,E.d)(n,i,d),L.NUM_MORPH_INFLUENCERS&&(0,E.m)(i,d),L.BAKED_VERTEX_ANIMATION_TEXTURE)null===(I=i.bakedVertexAnimationManager)||void 0===I||I.bind(d,L.INSTANCES);this.useLogarithmicDepth&&(0,E.j)(L,d,n),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(i,this._activeEffect,a),F.update()}getAnimatables(){const g=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&g.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&g.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&g.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&g.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&g.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&g.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&g.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&g.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&g.push(this._refractionTexture),g}getActiveTextures(){const g=super.getActiveTextures();return this._diffuseTexture&&g.push(this._diffuseTexture),this._ambientTexture&&g.push(this._ambientTexture),this._opacityTexture&&g.push(this._opacityTexture),this._reflectionTexture&&g.push(this._reflectionTexture),this._emissiveTexture&&g.push(this._emissiveTexture),this._specularTexture&&g.push(this._specularTexture),this._bumpTexture&&g.push(this._bumpTexture),this._lightmapTexture&&g.push(this._lightmapTexture),this._refractionTexture&&g.push(this._refractionTexture),g}hasTexture(g){return!!super.hasTexture(g)||(this._diffuseTexture===g||(this._ambientTexture===g||(this._opacityTexture===g||(this._reflectionTexture===g||(this._emissiveTexture===g||(this._specularTexture===g||(this._bumpTexture===g||(this._lightmapTexture===g||this._refractionTexture===g))))))))}dispose(g,i){var a,n,L,d,b,k,e,N,F;i&&(null===(a=this._diffuseTexture)||void 0===a||a.dispose(),null===(n=this._ambientTexture)||void 0===n||n.dispose(),null===(L=this._opacityTexture)||void 0===L||L.dispose(),null===(d=this._reflectionTexture)||void 0===d||d.dispose(),null===(b=this._emissiveTexture)||void 0===b||b.dispose(),null===(k=this._specularTexture)||void 0===k||k.dispose(),null===(e=this._bumpTexture)||void 0===e||e.dispose(),null===(N=this._lightmapTexture)||void 0===N||N.dispose(),null===(F=this._refractionTexture)||void 0===F||F.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(g,i)}clone(g){let i=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const n=X.c.Clone((()=>new f(g,this.Pg())),this,{cloneTexturesOnlyOnce:i});return n.name=g,n.id=g,this.bd.copyTo(n.bd),this._clonePlugins(n,a),n}static Parse(g,i,a){const n=X.c.Parse((()=>new f(g.name,i)),g,i,a);return g.bd&&n.bd.parse(g.bd,i,a),I.c._ParsePlugins(g,n,i,a),n}static get DiffuseTextureEnabled(){return D.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(g){D.b.DiffuseTextureEnabled=g}static get DetailTextureEnabled(){return D.b.DetailTextureEnabled}static set DetailTextureEnabled(g){D.b.DetailTextureEnabled=g}static get AmbientTextureEnabled(){return D.b.AmbientTextureEnabled}static set AmbientTextureEnabled(g){D.b.AmbientTextureEnabled=g}static get OpacityTextureEnabled(){return D.b.OpacityTextureEnabled}static set OpacityTextureEnabled(g){D.b.OpacityTextureEnabled=g}static get ReflectionTextureEnabled(){return D.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(g){D.b.ReflectionTextureEnabled=g}static get EmissiveTextureEnabled(){return D.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(g){D.b.EmissiveTextureEnabled=g}static get SpecularTextureEnabled(){return D.b.SpecularTextureEnabled}static set SpecularTextureEnabled(g){D.b.SpecularTextureEnabled=g}static get BumpTextureEnabled(){return D.b.BumpTextureEnabled}static set BumpTextureEnabled(g){D.b.BumpTextureEnabled=g}static get LightmapTextureEnabled(){return D.b.LightmapTextureEnabled}static set LightmapTextureEnabled(g){D.b.LightmapTextureEnabled=g}static get RefractionTextureEnabled(){return D.b.RefractionTextureEnabled}static set RefractionTextureEnabled(g){D.b.RefractionTextureEnabled=g}static get ColorGradingTextureEnabled(){return D.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(g){D.b.ColorGradingTextureEnabled=g}static get FresnelEnabled(){return D.b.FresnelEnabled}static set FresnelEnabled(g){D.b.FresnelEnabled=g}}f.ForceGLSL=!1,(0,n.e)([(0,L.H)("diffuseTexture")],f.prototype,"_diffuseTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"diffuseTexture",void 0),(0,n.e)([(0,L.H)("ambientTexture")],f.prototype,"_ambientTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"ambientTexture",void 0),(0,n.e)([(0,L.H)("opacityTexture")],f.prototype,"_opacityTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"opacityTexture",void 0),(0,n.e)([(0,L.H)("reflectionTexture")],f.prototype,"_reflectionTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"reflectionTexture",void 0),(0,n.e)([(0,L.H)("emissiveTexture")],f.prototype,"_emissiveTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"emissiveTexture",void 0),(0,n.e)([(0,L.H)("specularTexture")],f.prototype,"_specularTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"specularTexture",void 0),(0,n.e)([(0,L.H)("bumpTexture")],f.prototype,"_bumpTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"bumpTexture",void 0),(0,n.e)([(0,L.H)("lightmapTexture")],f.prototype,"_lightmapTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"lightmapTexture",void 0),(0,n.e)([(0,L.H)("refractionTexture")],f.prototype,"_refractionTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"refractionTexture",void 0),(0,n.e)([(0,L.o)("ambient")],f.prototype,"ambientColor",void 0),(0,n.e)([(0,L.o)("diffuse")],f.prototype,"diffuseColor",void 0),(0,n.e)([(0,L.o)("specular")],f.prototype,"specularColor",void 0),(0,n.e)([(0,L.o)("emissive")],f.prototype,"emissiveColor",void 0),(0,n.e)([(0,L.P)()],f.prototype,"specularPower",void 0),(0,n.e)([(0,L.P)("useAlphaFromDiffuseTexture")],f.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"useAlphaFromDiffuseTexture",void 0),(0,n.e)([(0,L.P)("useEmissiveAsIllumination")],f.prototype,"_useEmissiveAsIllumination",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useEmissiveAsIllumination",void 0),(0,n.e)([(0,L.P)("linkEmissiveWithDiffuse")],f.prototype,"_linkEmissiveWithDiffuse",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"linkEmissiveWithDiffuse",void 0),(0,n.e)([(0,L.P)("useSpecularOverAlpha")],f.prototype,"_useSpecularOverAlpha",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useSpecularOverAlpha",void 0),(0,n.e)([(0,L.P)("useReflectionOverAlpha")],f.prototype,"_useReflectionOverAlpha",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useReflectionOverAlpha",void 0),(0,n.e)([(0,L.P)("disableLighting")],f.prototype,"_disableLighting",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsLightsDirty")],f.prototype,"disableLighting",void 0),(0,n.e)([(0,L.P)("useObjectSpaceNormalMap")],f.prototype,"_useObjectSpaceNormalMap",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useObjectSpaceNormalMap",void 0),(0,n.e)([(0,L.P)("useParallax")],f.prototype,"_useParallax",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallax",void 0),(0,n.e)([(0,L.P)("useParallaxOcclusion")],f.prototype,"_useParallaxOcclusion",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallaxOcclusion",void 0),(0,n.e)([(0,L.P)()],f.prototype,"parallaxScaleBias",void 0),(0,n.e)([(0,L.P)("roughness")],f.prototype,"_roughness",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"roughness",void 0),(0,n.e)([(0,L.P)()],f.prototype,"indexOfRefraction",void 0),(0,n.e)([(0,L.P)()],f.prototype,"invertRefractionY",void 0),(0,n.e)([(0,L.P)()],f.prototype,"alphaCutOff",void 0),(0,n.e)([(0,L.P)("useLightmapAsShadowmap")],f.prototype,"_useLightmapAsShadowmap",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useLightmapAsShadowmap",void 0),(0,n.e)([(0,L.w)("diffuseFresnelParameters")],f.prototype,"_diffuseFresnelParameters",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"diffuseFresnelParameters",void 0),(0,n.e)([(0,L.w)("opacityFresnelParameters")],f.prototype,"_opacityFresnelParameters",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],f.prototype,"opacityFresnelParameters",void 0),(0,n.e)([(0,L.w)("reflectionFresnelParameters")],f.prototype,"_reflectionFresnelParameters",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"reflectionFresnelParameters",void 0),(0,n.e)([(0,L.w)("refractionFresnelParameters")],f.prototype,"_refractionFresnelParameters",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"refractionFresnelParameters",void 0),(0,n.e)([(0,L.w)("emissiveFresnelParameters")],f.prototype,"_emissiveFresnelParameters",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"emissiveFresnelParameters",void 0),(0,n.e)([(0,L.P)("useReflectionFresnelFromSpecular")],f.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"useReflectionFresnelFromSpecular",void 0),(0,n.e)([(0,L.P)("useGlossinessFromSpecularMapAlpha")],f.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,n.e)([(0,L.P)("maxSimultaneousLights")],f.prototype,"_maxSimultaneousLights",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsLightsDirty")],f.prototype,"maxSimultaneousLights",void 0),(0,n.e)([(0,L.P)("invertNormalMapX")],f.prototype,"_invertNormalMapX",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapX",void 0),(0,n.e)([(0,L.P)("invertNormalMapY")],f.prototype,"_invertNormalMapY",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapY",void 0),(0,n.e)([(0,L.P)("twoSidedLighting")],f.prototype,"_twoSidedLighting",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"twoSidedLighting",void 0),(0,n.e)([(0,L.P)("applyDecalMapAfterDetailMap")],f.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,n.e)([(0,L.e)("_markAllSubMeshesAsMiscDirty")],f.prototype,"applyDecalMapAfterDetailMap",void 0),(0,c.e)("BABYLON.StandardMaterial",f),b.e.DefaultMaterialFactory=g=>new f("default material",g)}}]);