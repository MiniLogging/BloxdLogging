"use strict";(self.rsqbdnwe5e=self.rsqbdnwe5e||[]).push([[25],{12774:(N,p,T)=>{T.d(p,{e:()=>M});var A=T(12354),a=T(12705),C=T(12359),U=T(12766),X=T(12761),y=T(12777),e=T(12731);class H extends X.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class M extends y.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(N){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(N,"DetailMap",140,new H,p),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=a.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=N._dirtyCallbacks[1]}isReadyForSubMesh(N,p,T){return!this._isEnabled||!(N._areTexturesDirty&&p.texturesEnabled&&T.getCaps().standardDerivatives&&this._texture&&U.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(N,p){if(this._isEnabled){N.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const T=p.getEngine();N._areTexturesDirty&&(T.getCaps().standardDerivatives&&this._texture&&U.e.DetailTextureEnabled&&this._isEnabled?((0,e.N)(this._texture,N,"DETAIL"),N.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):N.DETAIL=!1)}else N.DETAIL=!1}bindForSubMesh(N,p){if(!this._isEnabled)return;const T=this._material.isFrozen;N.useUbo&&T&&N.isSync||this._texture&&U.e.DetailTextureEnabled&&(N.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,e.p)(this._texture,N,"detail")),p.texturesEnabled&&this._texture&&U.e.DetailTextureEnabled&&N.setTexture("detailSampler",this._texture)}hasTexture(N){return this._texture===N}getActiveTextures(N){this._texture&&N.push(this._texture)}getAnimatables(N){this._texture&&this._texture.animations&&this._texture.animations.length>0&&N.push(this._texture)}dispose(N){var p;N&&(null===(p=this._texture)||void 0===p||p.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(N){N.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,A.b)([(0,C.z)("detailTexture"),(0,C.d)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"texture",void 0),(0,A.b)([(0,C.H)()],M.prototype,"diffuseBlendLevel",void 0),(0,A.b)([(0,C.H)()],M.prototype,"roughnessBlendLevel",void 0),(0,A.b)([(0,C.H)()],M.prototype,"bumpLevel",void 0),(0,A.b)([(0,C.H)(),(0,C.d)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"normalBlendMethod",void 0),(0,A.b)([(0,C.H)(),(0,C.d)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"isEnabled",void 0)},12761:(N,p,T)=>{T.d(p,{e:()=>A});class A{constructor(N){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=N,N)for(const p in N)Object.prototype.hasOwnProperty.call(N,p)&&this._setDefaultValue(p)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||N,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const N of Object.keys(this))"_"!==N[0]&&this._keys.push(N);if(this._externalProperties)for(const N in this._externalProperties)-1===this._keys.indexOf(N)&&this._keys.push(N)}isEqual(N){if(this._keys.length!==N._keys.length)return!1;for(let p=0;p<this._keys.length;p++){const T=this._keys[p];if(this[T]!==N[T])return!1}return!0}cloneTo(N){this._keys.length!==N._keys.length&&(N._keys=this._keys.slice(0));for(let p=0;p<this._keys.length;p++){const T=this._keys[p];N[T]=this[T]}}reset(){for(const N of this._keys)this._setDefaultValue(N)}_setDefaultValue(N){var p,T,A,a;const C=(null===(p=this._externalProperties)||void 0===p||null===(T=p[N])||void 0===T?void 0:T.type)??typeof this[N],U=null===(A=this._externalProperties)||void 0===A||null===(a=A[N])||void 0===a?void 0:a.default;switch(C){case"number":this[N]=U??0;break;case"string":this[N]=U??"";break;default:this[N]=U??!1}}toString(){let N="";for(let p=0;p<this._keys.length;p++){const T=this._keys[p],A=this[T];switch(typeof A){case"number":case"string":N+="#define "+T+" "+A+"\n";break;default:A&&(N+="#define "+T+"\n")}}return N}}},12766:(N,p,T)=>{T.d(p,{e:()=>a});var A=T(12270);class a{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(N){this._DiffuseTextureEnabled!==N&&(this._DiffuseTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(N){this._BaseWeightTextureEnabled!==N&&(this._BaseWeightTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(N){this._BaseDiffuseRoughnessTextureEnabled!==N&&(this._BaseDiffuseRoughnessTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(N){this._DetailTextureEnabled!==N&&(this._DetailTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(N){this._DecalMapEnabled!==N&&(this._DecalMapEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(N){this._AmbientTextureEnabled!==N&&(this._AmbientTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(N){this._OpacityTextureEnabled!==N&&(this._OpacityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(N){this._ReflectionTextureEnabled!==N&&(this._ReflectionTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(N){this._EmissiveTextureEnabled!==N&&(this._EmissiveTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(N){this._SpecularTextureEnabled!==N&&(this._SpecularTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(N){this._BumpTextureEnabled!==N&&(this._BumpTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(N){this._LightmapTextureEnabled!==N&&(this._LightmapTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(N){this._RefractionTextureEnabled!==N&&(this._RefractionTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(N){this._ColorGradingTextureEnabled!==N&&(this._ColorGradingTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(N){this._FresnelEnabled!==N&&(this._FresnelEnabled=N,A.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(N){this._ClearCoatTextureEnabled!==N&&(this._ClearCoatTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(N){this._ClearCoatBumpTextureEnabled!==N&&(this._ClearCoatBumpTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(N){this._ClearCoatTintTextureEnabled!==N&&(this._ClearCoatTintTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(N){this._SheenTextureEnabled!==N&&(this._SheenTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(N){this._AnisotropicTextureEnabled!==N&&(this._AnisotropicTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(N){this._ThicknessTextureEnabled!==N&&(this._ThicknessTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(N){this._RefractionIntensityTextureEnabled!==N&&(this._RefractionIntensityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(N){this._TranslucencyIntensityTextureEnabled!==N&&(this._TranslucencyIntensityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(N){this._TranslucencyColorTextureEnabled!==N&&(this._TranslucencyColorTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(N){this._IridescenceTextureEnabled!==N&&(this._IridescenceTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}}a._DiffuseTextureEnabled=!0,a._BaseWeightTextureEnabled=!0,a._BaseDiffuseRoughnessTextureEnabled=!0,a._DetailTextureEnabled=!0,a._DecalMapEnabled=!0,a._AmbientTextureEnabled=!0,a._OpacityTextureEnabled=!0,a._ReflectionTextureEnabled=!0,a._EmissiveTextureEnabled=!0,a._SpecularTextureEnabled=!0,a._BumpTextureEnabled=!0,a._LightmapTextureEnabled=!0,a._RefractionTextureEnabled=!0,a._ColorGradingTextureEnabled=!0,a._FresnelEnabled=!0,a._ClearCoatTextureEnabled=!0,a._ClearCoatBumpTextureEnabled=!0,a._ClearCoatTintTextureEnabled=!0,a._SheenTextureEnabled=!0,a._AnisotropicTextureEnabled=!0,a._ThicknessTextureEnabled=!0,a._RefractionIntensityTextureEnabled=!0,a._TranslucencyIntensityTextureEnabled=!0,a._TranslucencyColorTextureEnabled=!0,a._IridescenceTextureEnabled=!0},12786:(N,p,T)=>{T.d(p,{d:()=>C});var A,a=T(12371);!function(N){N[N.Zero=0]="Zero",N[N.One=1]="One",N[N.MaxViewZ=2]="MaxViewZ"}(A||(A={}));class C{static CreateConfiguration(N){return C._Configurations[N]={defines:{},previousWorldMatrices:{},previousViewProjection:a.Matrix.Zero(),currentViewProjection:a.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},C._Configurations[N]}static DeleteConfiguration(N){delete C._Configurations[N]}static GetConfiguration(N){return C._Configurations[N]}static AddUniformsAndSamplers(N,p){N.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(N,p){for(const T of p)if(T.CX)for(const p of T.CX)p._removeDrawWrapper(N)}static PrepareDefines(N,p,T){if(!T._arePrePassDirty)return;const A=C._Configurations[N];if(!A)return;T.PREPASS=!0,T.PREPASS_COLOR=!1,T.PREPASS_COLOR_INDEX=-1;let a=0;for(let U=0;U<C.GeometryTextureDescriptions.length;U++){const N=C.GeometryTextureDescriptions[U],p=N.define,X=N.defineIndex,y=A.defines[X];void 0!==y?(T[p]=!0,T[X]=y,a++):(T[p]=!1,delete T[X])}T.SCENE_MRT_COUNT=a,T.BONES_VELOCITY_ENABLED=p.useBones&&p.computeBonesUsingShaders&&p.skeleton&&!p.skeleton.isUsingTextureForMatrices&&-1===A.excludedSkinnedMesh.indexOf(p)}static Bind(N,p,T,A,a){const U=C._Configurations[N];if(!U)return;const X=T.KN(),y=X.getEngine();if(U.reverseCulling&&y.setStateCullFaceType(X._mirroredCameraPosition?a.cullBackFaces:!a.cullBackFaces),(void 0!==U.defines.PREPASS_VELOCITY_INDEX||void 0!==U.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(U.previousWorldMatrices[T.uniqueId]||(U.previousWorldMatrices[T.uniqueId]=A.clone()),U.previousViewProjection||(U.previousViewProjection=X.getTransformMatrix().clone(),U.currentViewProjection=X.getTransformMatrix().clone()),U.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(U.lastUpdateFrameId=y.frameId,U.previousViewProjection.A(U.currentViewProjection),U.currentViewProjection.A(X.getTransformMatrix())):U.lastUpdateFrameId!==y.frameId&&(U.lastUpdateFrameId=y.frameId,U.previousViewProjection.A(U.currentViewProjection)),p.setMatrix("previousWorld",U.previousWorldMatrices[T.uniqueId]),p.setMatrix("previousViewProjection",U.previousViewProjection),U.previousWorldMatrices[T.uniqueId]=A.clone(),T.useBones&&T.computeBonesUsingShaders&&T.skeleton)){const N=T.skeleton;if(!N.isUsingTextureForMatrices||-1===p.getUniformIndex("boneTextureWidth")){const A=N.getTransformMatrices(T);A&&(U.previousBones[T.uniqueId]||(U.previousBones[T.uniqueId]=A.slice()),p.setMatrices("mPreviousBones",U.previousBones[T.uniqueId]),U.previousBones[T.uniqueId].set(A))}}}}C.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],C._Configurations={}},12777:(N,p,T)=>{T.d(p,{c:()=>L});var A=T(12354),a=T(12359),C=T(12705),U=T(12231),X=T(12257),y=T(12281);const e=new RegExp("^([gimus]+)!");class H{constructor(N){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=N,this._scene=N.KN(),this._engine=this._scene.getEngine()}_addPlugin(N){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===N.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!N.isCompatible(this._material.shaderLanguage))throw`The plugin "${N.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const p=N.getClassName();H._MaterialPluginClassToMainDefine[p]||(H._MaterialPluginClassToMainDefine[p]="MATERIALPLUGIN_"+ ++H._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(N,p)=>this._handlePluginEvent(N,p),this._plugins.push(N),this._plugins.sort(((N,p)=>N.priority-p.priority)),this._codeInjectionPoints={};const T={};T[H._MaterialPluginClassToMainDefine[p]]={type:"boolean",default:!0};for(const A of this._plugins)A.collectDefines(T),this._collectPointNames("vertex",A.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",A.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=T,!0}_activatePlugin(N){-1===this._activePlugins.indexOf(N)&&(this._activePlugins.push(N),this._activePlugins.sort(((N,p)=>N.priority-p.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),N.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(N),this._activePluginsForExtraEvents.sort(((N,p)=>N.priority-p.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(N){for(let p=0;p<this._plugins.length;++p)if(this._plugins[p].name===N)return this._plugins[p];return null}_handlePluginEventIsReadyForSubMesh(N){let p=!0;for(const T of this._activePlugins)p=p&&T.isReadyForSubMesh(N.defines,this._scene,this._engine,N.subMesh);N.isReadyForSubMesh=p}_handlePluginEventPrepareDefinesBeforeAttributes(N){for(const p of this._activePlugins)p.prepareDefinesBeforeAttributes(N.defines,this._scene,N.mesh)}_handlePluginEventPrepareDefines(N){for(const p of this._activePlugins)p.prepareDefines(N.defines,this._scene,N.mesh)}_handlePluginEventHardBindForSubMesh(N){for(const p of this._activePluginsForExtraEvents)p.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,N.subMesh)}_handlePluginEventBindForSubMesh(N){for(const p of this._activePlugins)p.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,N.subMesh)}_handlePluginEventHasRenderTargetTextures(N){let p=!1;for(const T of this._activePluginsForExtraEvents)if(p=T.hasRenderTargetTextures(),p)break;N.hasRenderTargetTextures=p}_handlePluginEventFillRenderTargetTextures(N){for(const p of this._activePluginsForExtraEvents)p.fillRenderTargetTextures(N.renderTargets)}_handlePluginEvent(N,p){switch(N){case 512:{const N=p;for(const p of this._activePlugins)p.getActiveTextures(N.activeTextures);break}case 256:{const N=p;for(const p of this._activePlugins)p.getAnimatables(N.animatables);break}case 1024:{const N=p;let T=!1;for(const p of this._activePlugins)if(T=p.hasTexture(N.texture),T)break;N.hasTexture=T;break}case 2:{const N=p;for(const p of this._plugins)p.dispose(N.forceDisposeTextures);break}case 4:p.defineNames=this._defineNamesFromPlugins;break;case 128:{const N=p;for(const p of this._activePlugins)N.fallbackRank=p.addFallbacks(N.defines,N.fallbacks,N.fallbackRank),p.getAttributes(N.attributes,this._scene,N.mesh);this._uniformList.length>0&&N.uniforms.push(...this._uniformList),this._samplerList.length>0&&N.samplers.push(...this._samplerList),this._uboList.length>0&&N.uniformBuffersNames.push(...this._uboList),N.customCode=this._injectCustomCode(N,N.customCode);break}case 8:{const N=p;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const T=1===this._material.shaderLanguage;for(const p of this._plugins){const A=p.getUniforms(this._material.shaderLanguage);if(A){if(A.ubo)for(const p of A.ubo){if(p.size&&p.type){const A=p.arraySize??0;if(N.ubo.addUniform(p.name,p.size,A),T){let N;switch(p.type){case"mat4":N="mat4x4f";break;case"float":N="f32";break;default:N=`${p.type}f`}this._uboDeclaration+=A>0?`uniform ${p.name}: array<${N}, ${A}>;\n`:`uniform ${p.name}: ${N};\n`}else this._uboDeclaration+=`${p.type} ${p.name}${A>0?`[${A}]`:""};\n`}this._uniformList.push(p.name)}A.vertex&&(this._vertexDeclaration+=A.vertex+"\n"),A.fragment&&(this._fragmentDeclaration+=A.fragment+"\n")}p.getSamplers(this._samplerList),p.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(N,p){if(p)for(const T in p)this._codeInjectionPoints[N]||(this._codeInjectionPoints[N]={}),this._codeInjectionPoints[N][T]=!0}_injectCustomCode(N,p){return(T,A)=>{var a;p&&(A=p(T,A)),this._uboDeclaration&&(A=A.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(A=A.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(A=A.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const C=null===(a=this._codeInjectionPoints)||void 0===a?void 0:a[T];if(!C)return A;let U=null;for(let p in C){let a="";for(const A of this._activePlugins){var H;let C=null===(H=A.getCustomCode(T,this._material.shaderLanguage))||void 0===H?void 0:H[p];if(C){if(A.resolveIncludes){if(null===U){const p=0;U={defines:[],indexParameters:N.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:y.b.GetShadersRepository(p),includesShadersStore:y.b.GetIncludesShadersStore(p),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,BU:this._engine.BU,processCodeAfterIncludes:void 0}}U.isFragment="fragment"===T,(0,X.g)(C,U,(N=>C=N))}a+=C+"\n"}}if(a.length>0)if("!"===p.charAt(0)){p=p.substring(1);let N="g";if("!"===p.charAt(0))N="",p=p.substring(1);else{const T=e.exec(p);T&&T.length>=2&&(N=T[1],p=p.substring(N.length+1))}N.indexOf("g")<0&&(N+="g");const T=A,C=new RegExp(p,N);let U=C.exec(T);for(;null!==U;){let N=a;for(let p=0;p<U.length;++p)N=N.replace("$"+p,U[p]);A=A.replace(U[0],N),U=C.exec(T)}}else{const N="#define "+p;A=A.replace(N,"\n"+a+"\n"+N)}}return A}}}H._MaterialPluginClassToMainDefine={},H._MaterialPluginCounter=0,U.b.OnEnginesDisposedObservable.add((()=>{k()}));const M=[];let b=!1,l=null;function k(){M.length=0,b=!1,C.c.OnEventObservable.remove(l),l=null}var x=T(12409),I=T(12331);class L{isCompatible(N){return 0===N}_enable(N){N&&this._pluginManager._activatePlugin(this)}constructor(N,p,T,A){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=N,this.name=p,this.priority=T,this.resolveIncludes=U,N.pluginManager||(N.pluginManager=new H(N),N.SU.add((()=>{N.pluginManager=void 0}))),this._pluginDefineNames=A,this._pluginManager=N.pluginManager,a&&this._pluginManager._addPlugin(this),C&&this._enable(!0),this.markAllDefinesAsDirty=N._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(N,p,T,A){return!0}hardBindForSubMesh(N,p,T,A){}bindForSubMesh(N,p,T,A){}dispose(N){}getCustomCode(N){return null}collectDefines(N){if(this._pluginDefineNames)for(const p of Object.keys(this._pluginDefineNames)){if("_"===p[0])continue;const T=typeof this._pluginDefineNames[p];N[p]={type:"number"===T?"number":"string"===T?"string":"boolean"===T?"boolean":"object",default:this._pluginDefineNames[p]}}}prepareDefinesBeforeAttributes(N,p,T){}prepareDefines(N,p,T){}hasTexture(N){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(N){}getActiveTextures(N){}getAnimatables(N){}addFallbacks(N,p,T){return T}getSamplers(N){}getAttributes(N,p,T){}getUniformBuffersNames(N){}getUniforms(){return{}}copyTo(N){x.e.Clone((()=>N),this)}serialize(){return x.e.Serialize(this)}parse(N,p,T){x.e.Parse((()=>this),N,p,T)}}(0,A.b)([(0,a.H)()],L.prototype,"name",void 0),(0,A.b)([(0,a.H)()],L.prototype,"priority",void 0),(0,A.b)([(0,a.H)()],L.prototype,"resolveIncludes",void 0),(0,A.b)([(0,a.H)()],L.prototype,"registerForExtraEvents",void 0),(0,I.d)("BABYLON.MaterialPluginBase",L)},12754:(N,p,T)=>{T.d(p,{d:()=>A});class A{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(N){N.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(N){}bindForSubMesh(N,p,T,A,a){if(p.prePassRenderer&&p.prePassRenderer.enabled&&p.prePassRenderer.currentRTisSceneRT&&(-1!==p.prePassRenderer.getIndex(2)||-1!==p.prePassRenderer.getIndex(11))){this.previousWorldMatrices[T.uniqueId]||(this.previousWorldMatrices[T.uniqueId]=A.clone()),this.previousViewProjection||(this.previousViewProjection=p.getTransformMatrix().clone(),this.currentViewProjection=p.getTransformMatrix().clone());const a=p.getEngine();this.currentViewProjection.updateFlag!==p.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=a.frameId,this.previousViewProjection.A(this.currentViewProjection),this.currentViewProjection.A(p.getTransformMatrix())):this._lastUpdateFrameId!==a.frameId&&(this._lastUpdateFrameId=a.frameId,this.previousViewProjection.A(this.currentViewProjection)),N.setMatrix("previousWorld",this.previousWorldMatrices[T.uniqueId]),N.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[T.uniqueId]=A.clone()}}}},12745:(N,p,T)=>{T.d(p,{np:()=>v});var A=T(12354),a=T(12359),C=T(12471),U=T(12617),X=T(12421),y=T(12451),e=T(12754),H=T(12623),M=T(12705),b=T(12761),l=T(12702),k=T(12352),x=T(12331),I=T(12766),L=T(12700),n=T(12774),w=T(12736),g=T(12731),P=T(12409),i=T(12786);const K={effect:null,subMesh:null};class F extends b.e{constructor(N){super(N),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(N){const p=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const T of p)this[T]=T===N}}class v extends l.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(N){this._attachImageProcessingConfiguration(N),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(N){N!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=N||this.KN().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(N){this.imageProcessingConfiguration.colorCurvesEnabled=N}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(N){this.imageProcessingConfiguration.colorGradingEnabled=N}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(N){this._imageProcessingConfiguration.toneMappingEnabled=N}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(N){this._imageProcessingConfiguration.exposure=N}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(N){this._imageProcessingConfiguration.contrast=N}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(N){this._imageProcessingConfiguration.colorGradingTexture=N}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(N){this._imageProcessingConfiguration.colorCurves=N}get canRenderToMRT(){return!0}constructor(N,p){super(N,p,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||v.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new X.wp(0,0,0),this.diffuseColor=new X.wp(1,1,1),this.specularColor=new X.wp(1,1,1),this.emissiveColor=new X.wp(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new C.c(16),this._globalAmbientColor=new X.wp(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new n.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new e.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"np"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===M.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.XX&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==M.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.XX||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(N,p){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const a=p._drawWrapper;if(a.effect&&this.isFrozen&&a._wasPreviouslyReady&&a._wasPreviouslyUsingInstances===A)return!0;p.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),p.materialDefines=new F(this._eventInfo.defineNames));const C=this.KN(),U=p.materialDefines;if(this._isReadyForSubMesh(p))return!0;const X=C.getEngine();U._needNormals=(0,g.M)(C,N,U,!0,this._maxSimultaneousLights,this._disableLighting),(0,g.Q)(C,U);const M=this.needAlphaBlendingForMesh(N)&&this.KN().useOrderIndependentTransparency;if((0,g.U)(C,U,this.canRenderToMRT&&!M),(0,g.R)(C,U,M),i.d.PrepareDefines(X.currentRenderPassId,N,U),U._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,U._needUVs=!1;for(let N=1;N<=6;++N)U["MAINUV"+N]=!1;if(C.texturesEnabled){if(U.DIFFUSEDIRECTUV=0,U.BUMPDIRECTUV=0,U.AMBIENTDIRECTUV=0,U.OPACITYDIRECTUV=0,U.EMISSIVEDIRECTUV=0,U.SPECULARDIRECTUV=0,U.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&v.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._diffuseTexture,U,"DIFFUSE")}else U.DIFFUSE=!1;if(this._ambientTexture&&v.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._ambientTexture,U,"AMBIENT")}else U.AMBIENT=!1;if(this._opacityTexture&&v.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._opacityTexture,U,"OPACITY"),U.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else U.OPACITY=!1;if(this._reflectionTexture&&v.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(U._needNormals=!0,U.REFLECTION=!0,U.ROUGHNESS=this._roughness>0,U.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,U.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===k.c.INVCUBIC_MODE,U.REFLECTIONMAP_3D=this._reflectionTexture.isCube,U.REFLECTIONMAP_OPPOSITEZ=U.REFLECTIONMAP_3D&&this.KN().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,U.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case k.c.EXPLICIT_MODE:U.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case k.c.PLANAR_MODE:U.setReflectionMode("REFLECTIONMAP_PLANAR");break;case k.c.PROJECTION_MODE:U.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case k.c.SKYBOX_MODE:U.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case k.c.SPHERICAL_MODE:U.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case k.c.EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case k.c.FIXED_EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case k.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:U.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case k.c.CUBIC_MODE:case k.c.INVCUBIC_MODE:default:U.setReflectionMode("REFLECTIONMAP_CUBIC")}U.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else U.REFLECTION=!1,U.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&v.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._emissiveTexture,U,"EMISSIVE")}else U.EMISSIVE=!1;if(this._lightmapTexture&&v.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._lightmapTexture,U,"LIGHTMAP"),U.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,U.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else U.LIGHTMAP=!1;if(this._specularTexture&&v.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,g.N)(this._specularTexture,U,"SPECULAR"),U.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else U.SPECULAR=!1;if(C.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&v.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,g.N)(this._bumpTexture,U,"BUMP"),U.PARALLAX=this._useParallax,U.PARALLAX_RHS=C.useRightHandedSystem,U.PARALLAXOCCLUSION=this._useParallaxOcclusion,U.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else U.BUMP=!1,U.PARALLAX=!1,U.PARALLAX_RHS=!1,U.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&v.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;U._needUVs=!0,U.REFRACTION=!0,U.REFRACTIONMAP_3D=this._refractionTexture.isCube,U.RGBDREFRACTION=this._refractionTexture.isRGBD,U.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else U.REFRACTION=!1;U.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else U.DIFFUSE=!1,U.AMBIENT=!1,U.OPACITY=!1,U.REFLECTION=!1,U.EMISSIVE=!1,U.LIGHTMAP=!1,U.BUMP=!1,U.REFRACTION=!1;U.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),U.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,U.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,U.SPECULAROVERALPHA=this._useSpecularOverAlpha,U.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,U.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,U.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(N)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=U,this._eventInfo.subMesh=p,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(U._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(U),U.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,U.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(U._areFresnelDirty&&(v.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(U.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,U.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,U.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,U.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,U.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,U.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,U._needNormals=!0,U.FRESNEL=!0):U.FRESNEL=!1),U.AREALIGHTUSED)for(let T=0;T<N.lightSources.length;T++)if(!N.lightSources[T]._isReady())return!1;(0,g.O)(N,C,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(N),U,this._applyDecalMapAfterDetailMap),(0,g.I)(C,X,this,U,A,null,p.getRenderingMesh().hasThinInstances),this._eventInfo.defines=U,this._eventInfo.mesh=N,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,g.F)(N,U,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let b=!1;if(U.isDirty){const A=U._areLightsDisposed;U.markAsProcessed();const a=new L.e;U.REFLECTION&&a.addFallback(0,"REFLECTION"),U.SPECULAR&&a.addFallback(0,"SPECULAR"),U.BUMP&&a.addFallback(0,"BUMP"),U.PARALLAX&&a.addFallback(1,"PARALLAX"),U.PARALLAX_RHS&&a.addFallback(1,"PARALLAX_RHS"),U.PARALLAXOCCLUSION&&a.addFallback(0,"PARALLAXOCCLUSION"),U.SPECULAROVERALPHA&&a.addFallback(0,"SPECULAROVERALPHA"),U.FOG&&a.addFallback(1,"FOG"),U.POINTSIZE&&a.addFallback(0,"POINTSIZE"),U.LOGARITHMICDEPTH&&a.addFallback(0,"LOGARITHMICDEPTH"),(0,g.r)(U,a,this._maxSimultaneousLights),U.SPECULARTERM&&a.addFallback(0,"SPECULARTERM"),U.DIFFUSEFRESNEL&&a.addFallback(1,"DIFFUSEFRESNEL"),U.OPACITYFRESNEL&&a.addFallback(2,"OPACITYFRESNEL"),U.REFLECTIONFRESNEL&&a.addFallback(3,"REFLECTIONFRESNEL"),U.EMISSIVEFRESNEL&&a.addFallback(4,"EMISSIVEFRESNEL"),U.FRESNEL&&a.addFallback(4,"FRESNEL"),U.MULTIVIEW&&a.addFallback(0,"MULTIVIEW");const M=[y.f.PositionKind];U.NORMAL&&M.push(y.f.NormalKind),U.TANGENT&&M.push(y.f.TangentKind);for(let N=1;N<=6;++N)U["UV"+N]&&M.push(`uv${1===N?"":N}`);U.VERTEXCOLOR&&M.push(y.f.ColorKind),(0,g.v)(M,N,U,a),(0,g.z)(M,U),(0,g.A)(M,N,U),(0,g.u)(M,N,U);let l="default";const k=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],x=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],I=["Material","Scene","Mesh"],n={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:U.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=a,this._eventInfo.fallbackRank=0,this._eventInfo.defines=U,this._eventInfo.uniforms=k,this._eventInfo.attributes=M,this._eventInfo.samplers=x,this._eventInfo.uniformBuffersNames=I,this._eventInfo.customCode=void 0,this._eventInfo.mesh=N,this._eventInfo.indexParameters=n,this._callbackPluginEventGeneric(128,this._eventInfo),i.d.AddUniformsAndSamplers(k,x),e.d.AddUniforms(k),e.d.AddSamplers(x),H.e&&(H.e.PrepareUniforms(k,U),H.e.PrepareSamplers(x,U)),(0,g.V)({uniformsNames:k,uniformBuffersNames:I,samplers:x,defines:U,maxSimultaneousLights:this._maxSimultaneousLights}),(0,w.e)(k);const P={};this.customShaderNameResolve&&(l=this.customShaderNameResolve(l,k,I,x,U,M,P));const F=U.toString(),v=p.effect;let W=C.getEngine().createEffect(l,{attributes:M,uniformsNames:k,uniformBuffersNames:I,samplers:x,defines:F,fallbacks:a,onCompiled:this.onCompiled,onError:this.onError,indexParameters:n,processFinalCode:P.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:U.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([T.e(41),T.e(64)]).then(T.bind(T,14891)),Promise.all([T.e(39),T.e(65)]).then(T.bind(T,15035))]):await Promise.all([Promise.all([T.e(34),T.e(67)]).then(T.bind(T,15128)),Promise.all([T.e(33),T.e(68)]).then(T.bind(T,15271))]),this._shadersLoaded=!0}},X);if(this._eventInfo.customCode=void 0,W)if(this._onEffectCreatedObservable&&(K.effect=W,K.subMesh=p,this._onEffectCreatedObservable.notifyObservers(K)),this.allowShaderHotSwapping&&v&&!W.isReady()){if(W=v,U.markAsUnprocessed(),b=this.isFrozen,A)return U._areLightsDisposed=!0,!1}else C.resetCachedMaterial(),p.setEffect(W,U,this._materialContext)}return!(!p.effect||!p.effect.isReady())&&(U._renderId=C.getRenderId(),a._wasPreviouslyReady=!b,a._wasPreviouslyUsingInstances=A,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const N=this._uniformBuffer;N.addUniform("diffuseLeftColor",4),N.addUniform("diffuseRightColor",4),N.addUniform("opacityParts",4),N.addUniform("reflectionLeftColor",4),N.addUniform("reflectionRightColor",4),N.addUniform("refractionLeftColor",4),N.addUniform("refractionRightColor",4),N.addUniform("emissiveLeftColor",4),N.addUniform("emissiveRightColor",4),N.addUniform("vDiffuseInfos",2),N.addUniform("vAmbientInfos",2),N.addUniform("vOpacityInfos",2),N.addUniform("vReflectionInfos",2),N.addUniform("vReflectionPosition",3),N.addUniform("vReflectionSize",3),N.addUniform("vEmissiveInfos",2),N.addUniform("vLightmapInfos",2),N.addUniform("vSpecularInfos",2),N.addUniform("vBumpInfos",3),N.addUniform("diffuseMatrix",16),N.addUniform("ambientMatrix",16),N.addUniform("opacityMatrix",16),N.addUniform("reflectionMatrix",16),N.addUniform("emissiveMatrix",16),N.addUniform("lightmapMatrix",16),N.addUniform("specularMatrix",16),N.addUniform("bumpMatrix",16),N.addUniform("vTangentSpaceParams",2),N.addUniform("pointSize",1),N.addUniform("alphaCutOff",1),N.addUniform("refractionMatrix",16),N.addUniform("vRefractionInfos",4),N.addUniform("vRefractionPosition",3),N.addUniform("vRefractionSize",3),N.addUniform("vSpecularColor",4),N.addUniform("vEmissiveColor",3),N.addUniform("vDiffuseColor",4),N.addUniform("vAmbientColor",3),N.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(N,p,T){const A=this.KN(),a=T.materialDefines;if(!a)return;const C=T.effect;if(!C)return;this._activeEffect=C,p.getMeshUniformBuffer().bindToEffect(C,"Mesh"),p.transferToEffect(N),this._uniformBuffer.bindToEffect(C,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,A,p,N,this.isFrozen),i.d.Bind(A.getEngine().currentRenderPassId,this._activeEffect,p,N,this);const y=A.activeCamera;y?this._uniformBuffer.updateFloat4("cameraInfo",y.yX,y.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=T,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),a.OBJECTSPACE_NORMALMAP&&(N.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const e=this._mustRebind(A,C,T,p.visibility);(0,g.b)(p,C);const H=this._uniformBuffer;if(e){if(this.bindViewProjection(C),!H.useUbo||!this.isFrozen||!H.isSync||T._drawWrapper._forceRebindOnNextCall){if(v.FresnelEnabled&&a.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(H.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),H.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&H.updateColor4("opacityParts",new X.wp(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(H.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),H.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(H.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),H.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(H.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),H.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),A.texturesEnabled){if(this._diffuseTexture&&v.DiffuseTextureEnabled&&(H.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,g.p)(this._diffuseTexture,H,"diffuse")),this._ambientTexture&&v.AmbientTextureEnabled&&(H.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,g.p)(this._ambientTexture,H,"ambient")),this._opacityTexture&&v.OpacityTextureEnabled&&(H.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,g.p)(this._opacityTexture,H,"opacity")),this._hasAlphaChannel()&&H.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&v.ReflectionTextureEnabled){if(H.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),H.eX("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const N=this._reflectionTexture;H.updateVector3("vReflectionPosition",N.boundingBoxPosition),H.updateVector3("vReflectionSize",N.boundingBoxSize)}}else H.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&v.EmissiveTextureEnabled&&(H.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,g.p)(this._emissiveTexture,H,"emissive")),this._lightmapTexture&&v.LightmapTextureEnabled&&(H.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,g.p)(this._lightmapTexture,H,"lightmap")),this._specularTexture&&v.SpecularTextureEnabled&&(H.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,g.p)(this._specularTexture,H,"specular")),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&(H.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,g.p)(this._bumpTexture,H,"bump"),A._mirroredCameraPosition?H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&v.RefractionTextureEnabled){let N=1;if(this._refractionTexture.isCube||(H.eX("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(N=this._refractionTexture.depth)),H.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,N,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const N=this._refractionTexture;H.updateVector3("vRefractionPosition",N.boundingBoxPosition),H.updateVector3("vRefractionSize",N.boundingBoxSize)}}}this.pointsCloud&&H.updateFloat("pointSize",this.pointSize),H.updateColor4("vSpecularColor",this.specularColor,this.specularPower),H.updateColor3("vEmissiveColor",v.EmissiveTextureEnabled?this.emissiveColor:X.wp.BlackReadOnly),H.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),A.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),H.updateColor3("vAmbientColor",this._globalAmbientColor)}A.texturesEnabled&&(this._diffuseTexture&&v.DiffuseTextureEnabled&&C.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&v.AmbientTextureEnabled&&C.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&v.OpacityTextureEnabled&&C.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&v.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?C.setTexture("reflectionCubeSampler",this._reflectionTexture):C.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&v.EmissiveTextureEnabled&&C.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&v.LightmapTextureEnabled&&C.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&v.SpecularTextureEnabled&&C.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&C.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&v.RefractionTextureEnabled&&(this._refractionTexture.isCube?C.setTexture("refractionCubeSampler",this._refractionTexture):C.setTexture("refraction2DSampler",this._refractionTexture))),this.KN().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(p)&&this.KN().depthPeelingRenderer.bind(C),this._eventInfo.subMesh=T,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,w.i)(C,this,A),this.bindEyePosition(C)}else A.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(e||!this.isFrozen){var M;if(A.lightsEnabled&&!this._disableLighting&&(0,g.d)(A,p,C,a,this._maxSimultaneousLights),(A.fogEnabled&&p.applyFog&&A.fogMode!==U.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||p.receiveShadows||a.PREPASS)&&this.bindView(C),(0,g.c)(A,p,C),a.NUM_MORPH_INFLUENCERS&&(0,g.k)(p,C),a.BAKED_VERTEX_ANIMATION_TEXTURE)null===(M=p.bakedVertexAnimationManager)||void 0===M||M.bind(C,a.INSTANCES);this.useLogarithmicDepth&&(0,g.h)(a,C,A),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(p,this._activeEffect,T),H.update()}getAnimatables(){const N=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&N.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&N.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&N.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&N.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&N.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&N.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&N.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&N.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&N.push(this._refractionTexture),N}getActiveTextures(){const N=super.getActiveTextures();return this._diffuseTexture&&N.push(this._diffuseTexture),this._ambientTexture&&N.push(this._ambientTexture),this._opacityTexture&&N.push(this._opacityTexture),this._reflectionTexture&&N.push(this._reflectionTexture),this._emissiveTexture&&N.push(this._emissiveTexture),this._specularTexture&&N.push(this._specularTexture),this._bumpTexture&&N.push(this._bumpTexture),this._lightmapTexture&&N.push(this._lightmapTexture),this._refractionTexture&&N.push(this._refractionTexture),N}hasTexture(N){return!!super.hasTexture(N)||(this._diffuseTexture===N||(this._ambientTexture===N||(this._opacityTexture===N||(this._reflectionTexture===N||(this._emissiveTexture===N||(this._specularTexture===N||(this._bumpTexture===N||(this._lightmapTexture===N||this._refractionTexture===N))))))))}dispose(N,p){var T,A,a,C,U,X,y,e,H;p&&(null===(T=this._diffuseTexture)||void 0===T||T.dispose(),null===(A=this._ambientTexture)||void 0===A||A.dispose(),null===(a=this._opacityTexture)||void 0===a||a.dispose(),null===(C=this._reflectionTexture)||void 0===C||C.dispose(),null===(U=this._emissiveTexture)||void 0===U||U.dispose(),null===(X=this._specularTexture)||void 0===X||X.dispose(),null===(y=this._bumpTexture)||void 0===y||y.dispose(),null===(e=this._lightmapTexture)||void 0===e||e.dispose(),null===(H=this._refractionTexture)||void 0===H||H.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(N,p)}clone(N){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const A=P.e.Clone((()=>new v(N,this.KN())),this,{cloneTexturesOnlyOnce:p});return A.name=N,A.id=N,this.sU.copyTo(A.sU),this._clonePlugins(A,T),A}static Parse(N,p,T){const A=P.e.Parse((()=>new v(N.name,p)),N,p,T);return N.sU&&A.sU.parse(N.sU,p,T),M.c._ParsePlugins(N,A,p,T),A}static get DiffuseTextureEnabled(){return I.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(N){I.e.DiffuseTextureEnabled=N}static get DetailTextureEnabled(){return I.e.DetailTextureEnabled}static set DetailTextureEnabled(N){I.e.DetailTextureEnabled=N}static get AmbientTextureEnabled(){return I.e.AmbientTextureEnabled}static set AmbientTextureEnabled(N){I.e.AmbientTextureEnabled=N}static get OpacityTextureEnabled(){return I.e.OpacityTextureEnabled}static set OpacityTextureEnabled(N){I.e.OpacityTextureEnabled=N}static get ReflectionTextureEnabled(){return I.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(N){I.e.ReflectionTextureEnabled=N}static get EmissiveTextureEnabled(){return I.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(N){I.e.EmissiveTextureEnabled=N}static get SpecularTextureEnabled(){return I.e.SpecularTextureEnabled}static set SpecularTextureEnabled(N){I.e.SpecularTextureEnabled=N}static get BumpTextureEnabled(){return I.e.BumpTextureEnabled}static set BumpTextureEnabled(N){I.e.BumpTextureEnabled=N}static get LightmapTextureEnabled(){return I.e.LightmapTextureEnabled}static set LightmapTextureEnabled(N){I.e.LightmapTextureEnabled=N}static get RefractionTextureEnabled(){return I.e.RefractionTextureEnabled}static set RefractionTextureEnabled(N){I.e.RefractionTextureEnabled=N}static get ColorGradingTextureEnabled(){return I.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(N){I.e.ColorGradingTextureEnabled=N}static get FresnelEnabled(){return I.e.FresnelEnabled}static set FresnelEnabled(N){I.e.FresnelEnabled=N}}v.ForceGLSL=!1,(0,A.b)([(0,a.z)("diffuseTexture")],v.prototype,"_diffuseTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"diffuseTexture",void 0),(0,A.b)([(0,a.z)("ambientTexture")],v.prototype,"_ambientTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"ambientTexture",void 0),(0,A.b)([(0,a.z)("opacityTexture")],v.prototype,"_opacityTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"opacityTexture",void 0),(0,A.b)([(0,a.z)("reflectionTexture")],v.prototype,"_reflectionTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"reflectionTexture",void 0),(0,A.b)([(0,a.z)("emissiveTexture")],v.prototype,"_emissiveTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"emissiveTexture",void 0),(0,A.b)([(0,a.z)("specularTexture")],v.prototype,"_specularTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"specularTexture",void 0),(0,A.b)([(0,a.z)("bumpTexture")],v.prototype,"_bumpTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"bumpTexture",void 0),(0,A.b)([(0,a.z)("lightmapTexture")],v.prototype,"_lightmapTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"lightmapTexture",void 0),(0,A.b)([(0,a.z)("refractionTexture")],v.prototype,"_refractionTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"refractionTexture",void 0),(0,A.b)([(0,a.j)("ambient")],v.prototype,"ambientColor",void 0),(0,A.b)([(0,a.j)("diffuse")],v.prototype,"diffuseColor",void 0),(0,A.b)([(0,a.j)("specular")],v.prototype,"specularColor",void 0),(0,A.b)([(0,a.j)("emissive")],v.prototype,"emissiveColor",void 0),(0,A.b)([(0,a.H)()],v.prototype,"specularPower",void 0),(0,A.b)([(0,a.H)("useAlphaFromDiffuseTexture")],v.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,a.H)("useEmissiveAsIllumination")],v.prototype,"_useEmissiveAsIllumination",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useEmissiveAsIllumination",void 0),(0,A.b)([(0,a.H)("linkEmissiveWithDiffuse")],v.prototype,"_linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,a.H)("useSpecularOverAlpha")],v.prototype,"_useSpecularOverAlpha",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useSpecularOverAlpha",void 0),(0,A.b)([(0,a.H)("useReflectionOverAlpha")],v.prototype,"_useReflectionOverAlpha",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useReflectionOverAlpha",void 0),(0,A.b)([(0,a.H)("disableLighting")],v.prototype,"_disableLighting",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsLightsDirty")],v.prototype,"disableLighting",void 0),(0,A.b)([(0,a.H)("useObjectSpaceNormalMap")],v.prototype,"_useObjectSpaceNormalMap",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useObjectSpaceNormalMap",void 0),(0,A.b)([(0,a.H)("useParallax")],v.prototype,"_useParallax",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallax",void 0),(0,A.b)([(0,a.H)("useParallaxOcclusion")],v.prototype,"_useParallaxOcclusion",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallaxOcclusion",void 0),(0,A.b)([(0,a.H)()],v.prototype,"parallaxScaleBias",void 0),(0,A.b)([(0,a.H)("roughness")],v.prototype,"_roughness",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"roughness",void 0),(0,A.b)([(0,a.H)()],v.prototype,"indexOfRefraction",void 0),(0,A.b)([(0,a.H)()],v.prototype,"invertRefractionY",void 0),(0,A.b)([(0,a.H)()],v.prototype,"alphaCutOff",void 0),(0,A.b)([(0,a.H)("useLightmapAsShadowmap")],v.prototype,"_useLightmapAsShadowmap",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useLightmapAsShadowmap",void 0),(0,A.b)([(0,a.n)("diffuseFresnelParameters")],v.prototype,"_diffuseFresnelParameters",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"diffuseFresnelParameters",void 0),(0,A.b)([(0,a.n)("opacityFresnelParameters")],v.prototype,"_opacityFresnelParameters",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],v.prototype,"opacityFresnelParameters",void 0),(0,A.b)([(0,a.n)("reflectionFresnelParameters")],v.prototype,"_reflectionFresnelParameters",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"reflectionFresnelParameters",void 0),(0,A.b)([(0,a.n)("refractionFresnelParameters")],v.prototype,"_refractionFresnelParameters",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"refractionFresnelParameters",void 0),(0,A.b)([(0,a.n)("emissiveFresnelParameters")],v.prototype,"_emissiveFresnelParameters",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"emissiveFresnelParameters",void 0),(0,A.b)([(0,a.H)("useReflectionFresnelFromSpecular")],v.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,a.H)("useGlossinessFromSpecularMapAlpha")],v.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,a.H)("maxSimultaneousLights")],v.prototype,"_maxSimultaneousLights",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsLightsDirty")],v.prototype,"maxSimultaneousLights",void 0),(0,A.b)([(0,a.H)("invertNormalMapX")],v.prototype,"_invertNormalMapX",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapX",void 0),(0,A.b)([(0,a.H)("invertNormalMapY")],v.prototype,"_invertNormalMapY",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapY",void 0),(0,A.b)([(0,a.H)("twoSidedLighting")],v.prototype,"_twoSidedLighting",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"twoSidedLighting",void 0),(0,A.b)([(0,a.H)("applyDecalMapAfterDetailMap")],v.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,A.b)([(0,a.d)("_markAllSubMeshesAsMiscDirty")],v.prototype,"applyDecalMapAfterDetailMap",void 0),(0,x.d)("BABYLON.StandardMaterial",v),U.c.DefaultMaterialFactory=N=>new v("default material",N)}}]);