"use strict";(self["5dou0t7wntc"]=self["5dou0t7wntc"]||[]).push([[25],{12129:(K,O,F)=>{F.d(O,{c:()=>t});var f=F(11693),r=F(12053),l=F(11698),q=F(12120),J=F(12117),c=F(12133),E=F(12092);class M extends J.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class t extends c.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(K){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(K,"DetailMap",140,new M,O),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=r.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=K._dirtyCallbacks[1]}isReadyForSubMesh(K,O,F){return!this._isEnabled||!(K._areTexturesDirty&&O.texturesEnabled&&F.getCaps().standardDerivatives&&this._texture&&q.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(K,O){if(this._isEnabled){K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const F=O.getEngine();K._areTexturesDirty&&(F.getCaps().standardDerivatives&&this._texture&&q.b.DetailTextureEnabled&&this._isEnabled?((0,E.V)(this._texture,K,"DETAIL"),K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):K.DETAIL=!1)}else K.DETAIL=!1}bindForSubMesh(K,O){if(!this._isEnabled)return;const F=this._material.isFrozen;K.useUbo&&F&&K.isSync||this._texture&&q.b.DetailTextureEnabled&&(K.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,E.t)(this._texture,K,"detail")),O.texturesEnabled&&this._texture&&q.b.DetailTextureEnabled&&K.setTexture("detailSampler",this._texture)}hasTexture(K){return this._texture===K}getActiveTextures(K){this._texture&&K.push(this._texture)}getAnimatables(K){this._texture&&this._texture.animations&&this._texture.animations.length>0&&K.push(this._texture)}dispose(K){var O;K&&(null===(O=this._texture)||void 0===O||O.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(K){K.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,f.c)([(0,l.F)("detailTexture"),(0,l.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"texture",void 0),(0,f.c)([(0,l.N)()],t.prototype,"diffuseBlendLevel",void 0),(0,f.c)([(0,l.N)()],t.prototype,"roughnessBlendLevel",void 0),(0,f.c)([(0,l.N)()],t.prototype,"bumpLevel",void 0),(0,f.c)([(0,l.N)(),(0,l.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"normalBlendMethod",void 0),(0,f.c)([(0,l.N)(),(0,l.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"isEnabled",void 0)},12117:(K,O,F)=>{F.d(O,{e:()=>f});class f{constructor(K){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=K,K)for(const O in K)Object.prototype.hasOwnProperty.call(K,O)&&this._setDefaultValue(O)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||K,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const K of Object.keys(this))"_"!==K[0]&&this._keys.push(K);if(this._externalProperties)for(const K in this._externalProperties)-1===this._keys.indexOf(K)&&this._keys.push(K)}isEqual(K){if(this._keys.length!==K._keys.length)return!1;for(let O=0;O<this._keys.length;O++){const F=this._keys[O];if(this[F]!==K[F])return!1}return!0}cloneTo(K){this._keys.length!==K._keys.length&&(K._keys=this._keys.slice(0));for(let O=0;O<this._keys.length;O++){const F=this._keys[O];K[F]=this[F]}}reset(){for(const K of this._keys)this._setDefaultValue(K)}_setDefaultValue(K){var O,F,f,r;const l=(null===(O=this._externalProperties)||void 0===O||null===(F=O[K])||void 0===F?void 0:F.type)??typeof this[K],q=null===(f=this._externalProperties)||void 0===f||null===(r=f[K])||void 0===r?void 0:r.default;switch(l){case"number":this[K]=q??0;break;case"string":this[K]=q??"";break;default:this[K]=q??!1}}toString(){let K="";for(let O=0;O<this._keys.length;O++){const F=this._keys[O],f=this[F];switch(typeof f){case"number":case"string":K+="#define "+F+" "+f+"\n";break;default:f&&(K+="#define "+F+"\n")}}return K}}},12120:(K,O,F)=>{F.d(O,{b:()=>r});var f=F(11597);class r{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){this._DiffuseTextureEnabled!==K&&(this._DiffuseTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(K){this._BaseWeightTextureEnabled!==K&&(this._BaseWeightTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(K){this._BaseDiffuseRoughnessTextureEnabled!==K&&(this._BaseDiffuseRoughnessTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(K){this._DetailTextureEnabled!==K&&(this._DetailTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(K){this._DecalMapEnabled!==K&&(this._DecalMapEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(K){this._AmbientTextureEnabled!==K&&(this._AmbientTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(K){this._OpacityTextureEnabled!==K&&(this._OpacityTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){this._ReflectionTextureEnabled!==K&&(this._ReflectionTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){this._EmissiveTextureEnabled!==K&&(this._EmissiveTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(K){this._SpecularTextureEnabled!==K&&(this._SpecularTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(K){this._BumpTextureEnabled!==K&&(this._BumpTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(K){this._LightmapTextureEnabled!==K&&(this._LightmapTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(K){this._RefractionTextureEnabled!==K&&(this._RefractionTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){this._ColorGradingTextureEnabled!==K&&(this._ColorGradingTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(K){this._FresnelEnabled!==K&&(this._FresnelEnabled=K,f.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(K){this._ClearCoatTextureEnabled!==K&&(this._ClearCoatTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(K){this._ClearCoatBumpTextureEnabled!==K&&(this._ClearCoatBumpTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(K){this._ClearCoatTintTextureEnabled!==K&&(this._ClearCoatTintTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(K){this._SheenTextureEnabled!==K&&(this._SheenTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(K){this._AnisotropicTextureEnabled!==K&&(this._AnisotropicTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(K){this._ThicknessTextureEnabled!==K&&(this._ThicknessTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(K){this._RefractionIntensityTextureEnabled!==K&&(this._RefractionIntensityTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(K){this._TranslucencyIntensityTextureEnabled!==K&&(this._TranslucencyIntensityTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(K){this._TranslucencyColorTextureEnabled!==K&&(this._TranslucencyColorTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(K){this._IridescenceTextureEnabled!==K&&(this._IridescenceTextureEnabled=K,f.c.MarkAllMaterialsAsDirty(1))}}r._DiffuseTextureEnabled=!0,r._BaseWeightTextureEnabled=!0,r._BaseDiffuseRoughnessTextureEnabled=!0,r._DetailTextureEnabled=!0,r._DecalMapEnabled=!0,r._AmbientTextureEnabled=!0,r._OpacityTextureEnabled=!0,r._ReflectionTextureEnabled=!0,r._EmissiveTextureEnabled=!0,r._SpecularTextureEnabled=!0,r._BumpTextureEnabled=!0,r._LightmapTextureEnabled=!0,r._RefractionTextureEnabled=!0,r._ColorGradingTextureEnabled=!0,r._FresnelEnabled=!0,r._ClearCoatTextureEnabled=!0,r._ClearCoatBumpTextureEnabled=!0,r._ClearCoatTintTextureEnabled=!0,r._SheenTextureEnabled=!0,r._AnisotropicTextureEnabled=!0,r._ThicknessTextureEnabled=!0,r._RefractionIntensityTextureEnabled=!0,r._TranslucencyIntensityTextureEnabled=!0,r._TranslucencyColorTextureEnabled=!0,r._IridescenceTextureEnabled=!0},12141:(K,O,F)=>{F.d(O,{e:()=>l});var f,r=F(11713);!function(K){K[K.Zero=0]="Zero",K[K.One=1]="One",K[K.MaxViewZ=2]="MaxViewZ"}(f||(f={}));class l{static CreateConfiguration(K){return l._Configurations[K]={defines:{},previousWorldMatrices:{},previousViewProjection:r.Matrix.Zero(),currentViewProjection:r.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},l._Configurations[K]}static DeleteConfiguration(K){delete l._Configurations[K]}static GetConfiguration(K){return l._Configurations[K]}static AddUniformsAndSamplers(K,O){K.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(K,O){for(const F of O)if(F.Df)for(const O of F.Df)O._removeDrawWrapper(K)}static PrepareDefines(K,O,F){if(!F._arePrePassDirty)return;const f=l._Configurations[K];if(!f)return;F.PREPASS=!0,F.PREPASS_COLOR=!1,F.PREPASS_COLOR_INDEX=-1;let r=0;for(let q=0;q<l.GeometryTextureDescriptions.length;q++){const K=l.GeometryTextureDescriptions[q],O=K.define,J=K.defineIndex,c=f.defines[J];void 0!==c?(F[O]=!0,F[J]=c,r++):(F[O]=!1,delete F[J])}F.SCENE_MRT_COUNT=r,F.BONES_VELOCITY_ENABLED=O.useBones&&O.computeBonesUsingShaders&&O.skeleton&&!O.skeleton.isUsingTextureForMatrices&&-1===f.excludedSkinnedMesh.indexOf(O)}static Bind(K,O,F,f,r){const q=l._Configurations[K];if(!q)return;const J=F.HK(),c=J.getEngine();if(q.reverseCulling&&c.setStateCullFaceType(J._mirroredCameraPosition?r.cullBackFaces:!r.cullBackFaces),(void 0!==q.defines.PREPASS_VELOCITY_INDEX||void 0!==q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(q.previousWorldMatrices[F.uniqueId]||(q.previousWorldMatrices[F.uniqueId]=f.clone()),q.previousViewProjection||(q.previousViewProjection=J.getTransformMatrix().clone(),q.currentViewProjection=J.getTransformMatrix().clone()),q.currentViewProjection.updateFlag!==J.getTransformMatrix().updateFlag?(q.lastUpdateFrameId=c.frameId,q.previousViewProjection.l(q.currentViewProjection),q.currentViewProjection.l(J.getTransformMatrix())):q.lastUpdateFrameId!==c.frameId&&(q.lastUpdateFrameId=c.frameId,q.previousViewProjection.l(q.currentViewProjection)),O.setMatrix("previousWorld",q.previousWorldMatrices[F.uniqueId]),O.setMatrix("previousViewProjection",q.previousViewProjection),q.previousWorldMatrices[F.uniqueId]=f.clone(),F.useBones&&F.computeBonesUsingShaders&&F.skeleton)){const K=F.skeleton;if(!K.isUsingTextureForMatrices||-1===O.getUniformIndex("boneTextureWidth")){const f=K.getTransformMatrices(F);f&&(q.previousBones[F.uniqueId]||(q.previousBones[F.uniqueId]=f.slice()),O.setMatrices("mPreviousBones",q.previousBones[F.uniqueId]),q.previousBones[F.uniqueId].set(f))}}}}l.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],l._Configurations={}},12133:(K,O,F)=>{F.d(O,{c:()=>k});var f=F(11693),r=F(11698),l=F(12053),q=F(11559),J=F(11572),c=F(11610);const E=new RegExp("^([gimus]+)!");class M{constructor(K){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=K,this._scene=K.HK(),this._engine=this._scene.getEngine()}_addPlugin(K){for(let f=0;f<this._plugins.length;++f)if(this._plugins[f].name===K.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!K.isCompatible(this._material.shaderLanguage))throw`The plugin "${K.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const O=K.getClassName();M._MaterialPluginClassToMainDefine[O]||(M._MaterialPluginClassToMainDefine[O]="MATERIALPLUGIN_"+ ++M._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(K,O)=>this._handlePluginEvent(K,O),this._plugins.push(K),this._plugins.sort(((K,O)=>K.priority-O.priority)),this._codeInjectionPoints={};const F={};F[M._MaterialPluginClassToMainDefine[O]]={type:"boolean",default:!0};for(const f of this._plugins)f.collectDefines(F),this._collectPointNames("vertex",f.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",f.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=F,!0}_activatePlugin(K){-1===this._activePlugins.indexOf(K)&&(this._activePlugins.push(K),this._activePlugins.sort(((K,O)=>K.priority-O.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),K.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(K),this._activePluginsForExtraEvents.sort(((K,O)=>K.priority-O.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(K){for(let O=0;O<this._plugins.length;++O)if(this._plugins[O].name===K)return this._plugins[O];return null}_handlePluginEventIsReadyForSubMesh(K){let O=!0;for(const F of this._activePlugins)O=O&&F.isReadyForSubMesh(K.defines,this._scene,this._engine,K.subMesh);K.isReadyForSubMesh=O}_handlePluginEventPrepareDefinesBeforeAttributes(K){for(const O of this._activePlugins)O.prepareDefinesBeforeAttributes(K.defines,this._scene,K.mesh)}_handlePluginEventPrepareDefines(K){for(const O of this._activePlugins)O.prepareDefines(K.defines,this._scene,K.mesh)}_handlePluginEventHardBindForSubMesh(K){for(const O of this._activePluginsForExtraEvents)O.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventBindForSubMesh(K){for(const O of this._activePlugins)O.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventHasRenderTargetTextures(K){let O=!1;for(const F of this._activePluginsForExtraEvents)if(O=F.hasRenderTargetTextures(),O)break;K.hasRenderTargetTextures=O}_handlePluginEventFillRenderTargetTextures(K){for(const O of this._activePluginsForExtraEvents)O.fillRenderTargetTextures(K.renderTargets)}_handlePluginEvent(K,O){switch(K){case 512:{const K=O;for(const O of this._activePlugins)O.getActiveTextures(K.activeTextures);break}case 256:{const K=O;for(const O of this._activePlugins)O.getAnimatables(K.animatables);break}case 1024:{const K=O;let F=!1;for(const O of this._activePlugins)if(F=O.hasTexture(K.texture),F)break;K.hasTexture=F;break}case 2:{const K=O;for(const O of this._plugins)O.dispose(K.forceDisposeTextures);break}case 4:O.defineNames=this._defineNamesFromPlugins;break;case 128:{const K=O;for(const O of this._activePlugins)K.fallbackRank=O.addFallbacks(K.defines,K.fallbacks,K.fallbackRank),O.getAttributes(K.attributes,this._scene,K.mesh);this._uniformList.length>0&&K.uniforms.push(...this._uniformList),this._samplerList.length>0&&K.samplers.push(...this._samplerList),this._uboList.length>0&&K.uniformBuffersNames.push(...this._uboList),K.customCode=this._injectCustomCode(K,K.customCode);break}case 8:{const K=O;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const F=1===this._material.shaderLanguage;for(const O of this._plugins){const f=O.getUniforms(this._material.shaderLanguage);if(f){if(f.ubo)for(const O of f.ubo){if(O.size&&O.type){const f=O.arraySize??0;if(K.ubo.addUniform(O.name,O.size,f),F){let K;switch(O.type){case"mat4":K="mat4x4f";break;case"float":K="f32";break;default:K=`${O.type}f`}this._uboDeclaration+=f>0?`uniform ${O.name}: array<${K}, ${f}>;\n`:`uniform ${O.name}: ${K};\n`}else this._uboDeclaration+=`${O.type} ${O.name}${f>0?`[${f}]`:""};\n`}this._uniformList.push(O.name)}f.vertex&&(this._vertexDeclaration+=f.vertex+"\n"),f.fragment&&(this._fragmentDeclaration+=f.fragment+"\n")}O.getSamplers(this._samplerList),O.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(K,O){if(O)for(const F in O)this._codeInjectionPoints[K]||(this._codeInjectionPoints[K]={}),this._codeInjectionPoints[K][F]=!0}_injectCustomCode(K,O){return(F,f)=>{var r;O&&(f=O(F,f)),this._uboDeclaration&&(f=f.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(f=f.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(f=f.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const l=null===(r=this._codeInjectionPoints)||void 0===r?void 0:r[F];if(!l)return f;let q=null;for(let O in l){let r="";for(const f of this._activePlugins){var M;let l=null===(M=f.getCustomCode(F,this._material.shaderLanguage))||void 0===M?void 0:M[O];if(l){if(f.resolveIncludes){if(null===q){const O=0;q={defines:[],indexParameters:K.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:c.c.GetShadersRepository(O),includesShadersStore:c.c.GetIncludesShadersStore(O),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}q.isFragment="fragment"===F,(0,J.e)(l,q,(K=>l=K))}r+=l+"\n"}}if(r.length>0)if("!"===O.charAt(0)){O=O.substring(1);let K="g";if("!"===O.charAt(0))K="",O=O.substring(1);else{const F=E.exec(O);F&&F.length>=2&&(K=F[1],O=O.substring(K.length+1))}K.indexOf("g")<0&&(K+="g");const F=f,l=new RegExp(O,K);let q=l.exec(F);for(;null!==q;){let K=r;for(let O=0;O<q.length;++O)K=K.replace("$"+O,q[O]);f=f.replace(q[0],K),q=l.exec(F)}}else{const K="#define "+O;f=f.replace(K,"\n"+r+"\n"+K)}}return f}}}M._MaterialPluginClassToMainDefine={},M._MaterialPluginCounter=0,q.e.OnEnginesDisposedObservable.add((()=>{u()}));const t=[];let j=!1,X=null;function u(){t.length=0,j=!1,l.e.OnEventObservable.remove(X),X=null}var T=F(11753),o=F(11661);class k{isCompatible(K){return 0===K}_enable(K){K&&this._pluginManager._activatePlugin(this)}constructor(K,O,F,f){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=K,this.name=O,this.priority=F,this.resolveIncludes=q,K.pluginManager||(K.pluginManager=new M(K),K.Wf.add((()=>{K.pluginManager=void 0}))),this._pluginDefineNames=f,this._pluginManager=K.pluginManager,r&&this._pluginManager._addPlugin(this),l&&this._enable(!0),this.markAllDefinesAsDirty=K._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(K,O,F,f){return!0}hardBindForSubMesh(K,O,F,f){}bindForSubMesh(K,O,F,f){}dispose(K){}getCustomCode(K){return null}collectDefines(K){if(this._pluginDefineNames)for(const O of Object.keys(this._pluginDefineNames)){if("_"===O[0])continue;const F=typeof this._pluginDefineNames[O];K[O]={type:"number"===F?"number":"string"===F?"string":"boolean"===F?"boolean":"object",default:this._pluginDefineNames[O]}}}prepareDefinesBeforeAttributes(K,O,F){}prepareDefines(K,O,F){}hasTexture(K){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(K){}getActiveTextures(K){}getAnimatables(K){}addFallbacks(K,O,F){return F}getSamplers(K){}getAttributes(K,O,F){}getUniformBuffersNames(K){}getUniforms(){return{}}copyTo(K){T.e.Clone((()=>K),this)}serialize(){return T.e.Serialize(this)}parse(K,O,F){T.e.Parse((()=>this),K,O,F)}}(0,f.c)([(0,r.N)()],k.prototype,"name",void 0),(0,f.c)([(0,r.N)()],k.prototype,"priority",void 0),(0,f.c)([(0,r.N)()],k.prototype,"resolveIncludes",void 0),(0,f.c)([(0,r.N)()],k.prototype,"registerForExtraEvents",void 0),(0,o.g)("BABYLON.MaterialPluginBase",k)},12112:(K,O,F)=>{F.d(O,{c:()=>f});class f{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(K){K.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(K){}bindForSubMesh(K,O,F,f,r){if(O.prePassRenderer&&O.prePassRenderer.enabled&&O.prePassRenderer.currentRTisSceneRT&&(-1!==O.prePassRenderer.getIndex(2)||-1!==O.prePassRenderer.getIndex(11))){this.previousWorldMatrices[F.uniqueId]||(this.previousWorldMatrices[F.uniqueId]=f.clone()),this.previousViewProjection||(this.previousViewProjection=O.getTransformMatrix().clone(),this.currentViewProjection=O.getTransformMatrix().clone());const r=O.getEngine();this.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.l(this.currentViewProjection),this.currentViewProjection.l(O.getTransformMatrix())):this._lastUpdateFrameId!==r.frameId&&(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.l(this.currentViewProjection)),K.setMatrix("previousWorld",this.previousWorldMatrices[F.uniqueId]),K.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[F.uniqueId]=f.clone()}}}},12106:(K,O,F)=>{F.d(O,{NO:()=>e});var f=F(11693),r=F(11698),l=F(11816),q=F(11964),J=F(11764),c=F(11793),E=F(12112),M=F(11967),t=F(12053),j=F(12117),X=F(12050),u=F(11688),T=F(11661),o=F(12120),k=F(12043),N=F(12129),Z=F(12099),L=F(12092),d=F(11753),a=F(12141);const g={effect:null,subMesh:null};class H extends j.e{constructor(K){super(K),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(K){const O=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const F of O)this[F]=F===K}}class e extends X.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(K){this._attachImageProcessingConfiguration(K),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(K){K!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=K||this.HK().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(K){this.imageProcessingConfiguration.colorCurvesEnabled=K}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(K){this.imageProcessingConfiguration.colorGradingEnabled=K}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(K){this._imageProcessingConfiguration.toneMappingEnabled=K}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(K){this._imageProcessingConfiguration.exposure=K}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(K){this._imageProcessingConfiguration.contrast=K}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(K){this._imageProcessingConfiguration.colorGradingTexture=K}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(K){this._imageProcessingConfiguration.colorCurves=K}get canRenderToMRT(){return!0}constructor(K,O){super(K,O,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||e.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new J.ZO(0,0,0),this.diffuseColor=new J.ZO(1,1,1),this.specularColor=new J.ZO(1,1,1),this.emissiveColor=new J.ZO(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new l.e(16),this._globalAmbientColor=new J.ZO(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new N.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new E.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),e.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),e.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(e.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(e.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"NO"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===t.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.bf&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==t.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.bf||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(K,O){let f=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const r=O._drawWrapper;if(r.effect&&this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===f)return!0;O.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),O.materialDefines=new H(this._eventInfo.defineNames));const l=this.HK(),q=O.materialDefines;if(this._isReadyForSubMesh(O))return!0;const J=l.getEngine();q._needNormals=(0,L.T)(l,K,q,!0,this._maxSimultaneousLights,this._disableLighting),(0,L.Y)(l,q);const t=this.needAlphaBlendingForMesh(K)&&this.HK().useOrderIndependentTransparency;if((0,L.bb)(l,q,this.canRenderToMRT&&!t),(0,L.$)(l,q,t),a.e.PrepareDefines(J.currentRenderPassId,K,q),q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,q._needUVs=!1;for(let K=1;K<=6;++K)q["MAINUV"+K]=!1;if(l.texturesEnabled){if(q.DIFFUSEDIRECTUV=0,q.BUMPDIRECTUV=0,q.AMBIENTDIRECTUV=0,q.OPACITYDIRECTUV=0,q.EMISSIVEDIRECTUV=0,q.SPECULARDIRECTUV=0,q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&e.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._diffuseTexture,q,"DIFFUSE")}else q.DIFFUSE=!1;if(this._ambientTexture&&e.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._ambientTexture,q,"AMBIENT")}else q.AMBIENT=!1;if(this._opacityTexture&&e.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._opacityTexture,q,"OPACITY"),q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else q.OPACITY=!1;if(this._reflectionTexture&&e.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(q._needNormals=!0,q.REFLECTION=!0,q.ROUGHNESS=this._roughness>0,q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===u.b.INVCUBIC_MODE,q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,q.REFLECTIONMAP_OPPOSITEZ=q.REFLECTIONMAP_3D&&this.HK().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case u.b.EXPLICIT_MODE:q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case u.b.PLANAR_MODE:q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case u.b.PROJECTION_MODE:q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case u.b.SKYBOX_MODE:q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case u.b.SPHERICAL_MODE:q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case u.b.EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case u.b.FIXED_EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case u.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case u.b.CUBIC_MODE:case u.b.INVCUBIC_MODE:default:q.setReflectionMode("REFLECTIONMAP_CUBIC")}q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else q.REFLECTION=!1,q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&e.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._emissiveTexture,q,"EMISSIVE")}else q.EMISSIVE=!1;if(this._lightmapTexture&&e.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._lightmapTexture,q,"LIGHTMAP"),q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else q.LIGHTMAP=!1;if(this._specularTexture&&e.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,L.V)(this._specularTexture,q,"SPECULAR"),q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else q.SPECULAR=!1;if(l.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&e.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,L.V)(this._bumpTexture,q,"BUMP"),q.PARALLAX=this._useParallax,q.PARALLAX_RHS=l.useRightHandedSystem,q.PARALLAXOCCLUSION=this._useParallaxOcclusion,q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else q.BUMP=!1,q.PARALLAX=!1,q.PARALLAX_RHS=!1,q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&e.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;q._needUVs=!0,q.REFRACTION=!0,q.REFRACTIONMAP_3D=this._refractionTexture.isCube,q.RGBDREFRACTION=this._refractionTexture.isRGBD,q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else q.REFRACTION=!1;q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else q.DIFFUSE=!1,q.AMBIENT=!1,q.OPACITY=!1,q.REFLECTION=!1,q.EMISSIVE=!1,q.LIGHTMAP=!1,q.BUMP=!1,q.REFRACTION=!1;q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,q.SPECULAROVERALPHA=this._useSpecularOverAlpha,q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(K)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=q,this._eventInfo.subMesh=O,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(q),q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(q._areFresnelDirty&&(e.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,q._needNormals=!0,q.FRESNEL=!0):q.FRESNEL=!1),q.AREALIGHTUSED)for(let F=0;F<K.lightSources.length;F++)if(!K.lightSources[F]._isReady())return!1;(0,L.X)(K,l,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(K),q,this._applyDecalMapAfterDetailMap),(0,L.Q)(l,J,this,q,f,null,O.getRenderingMesh().hasThinInstances),this._eventInfo.defines=q,this._eventInfo.mesh=K,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,L.M)(K,q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let j=!1;if(q.isDirty){const f=q._areLightsDisposed;q.markAsProcessed();const r=new k.b;q.REFLECTION&&r.addFallback(0,"REFLECTION"),q.SPECULAR&&r.addFallback(0,"SPECULAR"),q.BUMP&&r.addFallback(0,"BUMP"),q.PARALLAX&&r.addFallback(1,"PARALLAX"),q.PARALLAX_RHS&&r.addFallback(1,"PARALLAX_RHS"),q.PARALLAXOCCLUSION&&r.addFallback(0,"PARALLAXOCCLUSION"),q.SPECULAROVERALPHA&&r.addFallback(0,"SPECULAROVERALPHA"),q.FOG&&r.addFallback(1,"FOG"),q.POINTSIZE&&r.addFallback(0,"POINTSIZE"),q.LOGARITHMICDEPTH&&r.addFallback(0,"LOGARITHMICDEPTH"),(0,L.x)(q,r,this._maxSimultaneousLights),q.SPECULARTERM&&r.addFallback(0,"SPECULARTERM"),q.DIFFUSEFRESNEL&&r.addFallback(1,"DIFFUSEFRESNEL"),q.OPACITYFRESNEL&&r.addFallback(2,"OPACITYFRESNEL"),q.REFLECTIONFRESNEL&&r.addFallback(3,"REFLECTIONFRESNEL"),q.EMISSIVEFRESNEL&&r.addFallback(4,"EMISSIVEFRESNEL"),q.FRESNEL&&r.addFallback(4,"FRESNEL"),q.MULTIVIEW&&r.addFallback(0,"MULTIVIEW");const t=[c.d.PositionKind];q.NORMAL&&t.push(c.d.NormalKind),q.TANGENT&&t.push(c.d.TangentKind);for(let K=1;K<=6;++K)q["UV"+K]&&t.push(`uv${1===K?"":K}`);q.VERTEXCOLOR&&t.push(c.d.ColorKind),(0,L.C)(t,K,q,r),(0,L.G)(t,q),(0,L.H)(t,K,q),(0,L.A)(t,K,q);let X="default";const u=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],T=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],o=["Material","Scene","Mesh"],N={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=r,this._eventInfo.fallbackRank=0,this._eventInfo.defines=q,this._eventInfo.uniforms=u,this._eventInfo.attributes=t,this._eventInfo.samplers=T,this._eventInfo.uniformBuffersNames=o,this._eventInfo.customCode=void 0,this._eventInfo.mesh=K,this._eventInfo.indexParameters=N,this._callbackPluginEventGeneric(128,this._eventInfo),a.e.AddUniformsAndSamplers(u,T),E.c.AddUniforms(u),E.c.AddSamplers(T),M.d&&(M.d.PrepareUniforms(u,q),M.d.PrepareSamplers(T,q)),(0,L.fb)({uniformsNames:u,uniformBuffersNames:o,samplers:T,defines:q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,Z.e)(u);const d={};this.customShaderNameResolve&&(X=this.customShaderNameResolve(X,u,o,T,q,t,d));const H=q.toString(),e=O.effect;let W=l.getEngine().createEffect(X,{attributes:t,uniformsNames:u,uniformBuffersNames:o,samplers:T,defines:H,fallbacks:r,onCompiled:this.onCompiled,onError:this.onError,indexParameters:N,processFinalCode:d.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([F.e(41),F.e(64)]).then(F.bind(F,14286)),Promise.all([F.e(39),F.e(65)]).then(F.bind(F,14439))]):await Promise.all([Promise.all([F.e(34),F.e(67)]).then(F.bind(F,14516)),Promise.all([F.e(33),F.e(68)]).then(F.bind(F,14666))]),this._shadersLoaded=!0}},J);if(this._eventInfo.customCode=void 0,W)if(this._onEffectCreatedObservable&&(g.effect=W,g.subMesh=O,this._onEffectCreatedObservable.notifyObservers(g)),this.allowShaderHotSwapping&&e&&!W.isReady()){if(W=e,q.markAsUnprocessed(),j=this.isFrozen,f)return q._areLightsDisposed=!0,!1}else l.resetCachedMaterial(),O.setEffect(W,q,this._materialContext)}return!(!O.effect||!O.effect.isReady())&&(q._renderId=l.getRenderId(),r._wasPreviouslyReady=!j,r._wasPreviouslyUsingInstances=f,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const K=this._uniformBuffer;K.addUniform("diffuseLeftColor",4),K.addUniform("diffuseRightColor",4),K.addUniform("opacityParts",4),K.addUniform("reflectionLeftColor",4),K.addUniform("reflectionRightColor",4),K.addUniform("refractionLeftColor",4),K.addUniform("refractionRightColor",4),K.addUniform("emissiveLeftColor",4),K.addUniform("emissiveRightColor",4),K.addUniform("vDiffuseInfos",2),K.addUniform("vAmbientInfos",2),K.addUniform("vOpacityInfos",2),K.addUniform("vReflectionInfos",2),K.addUniform("vReflectionPosition",3),K.addUniform("vReflectionSize",3),K.addUniform("vEmissiveInfos",2),K.addUniform("vLightmapInfos",2),K.addUniform("vSpecularInfos",2),K.addUniform("vBumpInfos",3),K.addUniform("diffuseMatrix",16),K.addUniform("ambientMatrix",16),K.addUniform("opacityMatrix",16),K.addUniform("reflectionMatrix",16),K.addUniform("emissiveMatrix",16),K.addUniform("lightmapMatrix",16),K.addUniform("specularMatrix",16),K.addUniform("bumpMatrix",16),K.addUniform("vTangentSpaceParams",2),K.addUniform("pointSize",1),K.addUniform("alphaCutOff",1),K.addUniform("refractionMatrix",16),K.addUniform("vRefractionInfos",4),K.addUniform("vRefractionPosition",3),K.addUniform("vRefractionSize",3),K.addUniform("vSpecularColor",4),K.addUniform("vEmissiveColor",3),K.addUniform("vDiffuseColor",4),K.addUniform("vAmbientColor",3),K.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(K,O,F){const f=this.HK(),r=F.materialDefines;if(!r)return;const l=F.effect;if(!l)return;this._activeEffect=l,O.getMeshUniformBuffer().bindToEffect(l,"Mesh"),O.transferToEffect(K),this._uniformBuffer.bindToEffect(l,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,f,O,K,this.isFrozen),a.e.Bind(f.getEngine().currentRenderPassId,this._activeEffect,O,K,this);const c=f.activeCamera;c?this._uniformBuffer.updateFloat4("cameraInfo",c.if,c.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=F,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),r.OBJECTSPACE_NORMALMAP&&(K.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const E=this._mustRebind(f,l,F,O.visibility);(0,L.c)(O,l);const M=this._uniformBuffer;if(E){if(this.bindViewProjection(l),!M.useUbo||!this.isFrozen||!M.isSync||F._drawWrapper._forceRebindOnNextCall){if(e.FresnelEnabled&&r.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(M.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),M.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&M.updateColor4("opacityParts",new J.ZO(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(M.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),M.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(M.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),M.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(M.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),M.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),f.texturesEnabled){if(this._diffuseTexture&&e.DiffuseTextureEnabled&&(M.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,L.t)(this._diffuseTexture,M,"diffuse")),this._ambientTexture&&e.AmbientTextureEnabled&&(M.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,L.t)(this._ambientTexture,M,"ambient")),this._opacityTexture&&e.OpacityTextureEnabled&&(M.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,L.t)(this._opacityTexture,M,"opacity")),this._hasAlphaChannel()&&M.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&e.ReflectionTextureEnabled){if(M.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),M.sf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const K=this._reflectionTexture;M.updateVector3("vReflectionPosition",K.boundingBoxPosition),M.updateVector3("vReflectionSize",K.boundingBoxSize)}}else M.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&e.EmissiveTextureEnabled&&(M.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,L.t)(this._emissiveTexture,M,"emissive")),this._lightmapTexture&&e.LightmapTextureEnabled&&(M.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,L.t)(this._lightmapTexture,M,"lightmap")),this._specularTexture&&e.SpecularTextureEnabled&&(M.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,L.t)(this._specularTexture,M,"specular")),this._bumpTexture&&f.getEngine().getCaps().standardDerivatives&&e.BumpTextureEnabled&&(M.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,L.t)(this._bumpTexture,M,"bump"),f._mirroredCameraPosition?M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&e.RefractionTextureEnabled){let K=1;if(this._refractionTexture.isCube||(M.sf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(K=this._refractionTexture.depth)),M.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,K,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const K=this._refractionTexture;M.updateVector3("vRefractionPosition",K.boundingBoxPosition),M.updateVector3("vRefractionSize",K.boundingBoxSize)}}}this.pointsCloud&&M.updateFloat("pointSize",this.pointSize),M.updateColor4("vSpecularColor",this.specularColor,this.specularPower),M.updateColor3("vEmissiveColor",e.EmissiveTextureEnabled?this.emissiveColor:J.ZO.BlackReadOnly),M.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),f.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),M.updateColor3("vAmbientColor",this._globalAmbientColor)}f.texturesEnabled&&(this._diffuseTexture&&e.DiffuseTextureEnabled&&l.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&e.AmbientTextureEnabled&&l.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&e.OpacityTextureEnabled&&l.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&e.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?l.setTexture("reflectionCubeSampler",this._reflectionTexture):l.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&e.EmissiveTextureEnabled&&l.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&e.LightmapTextureEnabled&&l.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&e.SpecularTextureEnabled&&l.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&f.getEngine().getCaps().standardDerivatives&&e.BumpTextureEnabled&&l.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&e.RefractionTextureEnabled&&(this._refractionTexture.isCube?l.setTexture("refractionCubeSampler",this._refractionTexture):l.setTexture("refraction2DSampler",this._refractionTexture))),this.HK().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(O)&&this.HK().depthPeelingRenderer.bind(l),this._eventInfo.subMesh=F,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,Z.g)(l,this,f),this.bindEyePosition(l)}else f.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(E||!this.isFrozen){var t;if(f.lightsEnabled&&!this._disableLighting&&(0,L.i)(f,O,l,r,this._maxSimultaneousLights),(f.fogEnabled&&O.applyFog&&f.fogMode!==q.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||O.receiveShadows||r.PREPASS)&&this.bindView(l),(0,L.f)(f,O,l),r.NUM_MORPH_INFLUENCERS&&(0,L.m)(O,l),r.BAKED_VERTEX_ANIMATION_TEXTURE)null===(t=O.bakedVertexAnimationManager)||void 0===t||t.bind(l,r.INSTANCES);this.useLogarithmicDepth&&(0,L.j)(r,l,f),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(O,this._activeEffect,F),M.update()}getAnimatables(){const K=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&K.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&K.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&K.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&K.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&K.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&K.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&K.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&K.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&K.push(this._refractionTexture),K}getActiveTextures(){const K=super.getActiveTextures();return this._diffuseTexture&&K.push(this._diffuseTexture),this._ambientTexture&&K.push(this._ambientTexture),this._opacityTexture&&K.push(this._opacityTexture),this._reflectionTexture&&K.push(this._reflectionTexture),this._emissiveTexture&&K.push(this._emissiveTexture),this._specularTexture&&K.push(this._specularTexture),this._bumpTexture&&K.push(this._bumpTexture),this._lightmapTexture&&K.push(this._lightmapTexture),this._refractionTexture&&K.push(this._refractionTexture),K}hasTexture(K){return!!super.hasTexture(K)||(this._diffuseTexture===K||(this._ambientTexture===K||(this._opacityTexture===K||(this._reflectionTexture===K||(this._emissiveTexture===K||(this._specularTexture===K||(this._bumpTexture===K||(this._lightmapTexture===K||this._refractionTexture===K))))))))}dispose(K,O){var F,f,r,l,q,J,c,E,M;O&&(null===(F=this._diffuseTexture)||void 0===F||F.dispose(),null===(f=this._ambientTexture)||void 0===f||f.dispose(),null===(r=this._opacityTexture)||void 0===r||r.dispose(),null===(l=this._reflectionTexture)||void 0===l||l.dispose(),null===(q=this._emissiveTexture)||void 0===q||q.dispose(),null===(J=this._specularTexture)||void 0===J||J.dispose(),null===(c=this._bumpTexture)||void 0===c||c.dispose(),null===(E=this._lightmapTexture)||void 0===E||E.dispose(),null===(M=this._refractionTexture)||void 0===M||M.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(K,O)}clone(K){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const f=d.e.Clone((()=>new e(K,this.HK())),this,{cloneTexturesOnlyOnce:O});return f.name=K,f.id=K,this.stencil.copyTo(f.stencil),this._clonePlugins(f,F),f}static Parse(K,O,F){const f=d.e.Parse((()=>new e(K.name,O)),K,O,F);return K.stencil&&f.stencil.parse(K.stencil,O,F),t.e._ParsePlugins(K,f,O,F),f}static get DiffuseTextureEnabled(){return o.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){o.b.DiffuseTextureEnabled=K}static get DetailTextureEnabled(){return o.b.DetailTextureEnabled}static set DetailTextureEnabled(K){o.b.DetailTextureEnabled=K}static get AmbientTextureEnabled(){return o.b.AmbientTextureEnabled}static set AmbientTextureEnabled(K){o.b.AmbientTextureEnabled=K}static get OpacityTextureEnabled(){return o.b.OpacityTextureEnabled}static set OpacityTextureEnabled(K){o.b.OpacityTextureEnabled=K}static get ReflectionTextureEnabled(){return o.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){o.b.ReflectionTextureEnabled=K}static get EmissiveTextureEnabled(){return o.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){o.b.EmissiveTextureEnabled=K}static get SpecularTextureEnabled(){return o.b.SpecularTextureEnabled}static set SpecularTextureEnabled(K){o.b.SpecularTextureEnabled=K}static get BumpTextureEnabled(){return o.b.BumpTextureEnabled}static set BumpTextureEnabled(K){o.b.BumpTextureEnabled=K}static get LightmapTextureEnabled(){return o.b.LightmapTextureEnabled}static set LightmapTextureEnabled(K){o.b.LightmapTextureEnabled=K}static get RefractionTextureEnabled(){return o.b.RefractionTextureEnabled}static set RefractionTextureEnabled(K){o.b.RefractionTextureEnabled=K}static get ColorGradingTextureEnabled(){return o.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){o.b.ColorGradingTextureEnabled=K}static get FresnelEnabled(){return o.b.FresnelEnabled}static set FresnelEnabled(K){o.b.FresnelEnabled=K}}e.ForceGLSL=!1,(0,f.c)([(0,r.F)("diffuseTexture")],e.prototype,"_diffuseTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"diffuseTexture",void 0),(0,f.c)([(0,r.F)("ambientTexture")],e.prototype,"_ambientTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"ambientTexture",void 0),(0,f.c)([(0,r.F)("opacityTexture")],e.prototype,"_opacityTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"opacityTexture",void 0),(0,f.c)([(0,r.F)("reflectionTexture")],e.prototype,"_reflectionTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"reflectionTexture",void 0),(0,f.c)([(0,r.F)("emissiveTexture")],e.prototype,"_emissiveTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"emissiveTexture",void 0),(0,f.c)([(0,r.F)("specularTexture")],e.prototype,"_specularTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"specularTexture",void 0),(0,f.c)([(0,r.F)("bumpTexture")],e.prototype,"_bumpTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"bumpTexture",void 0),(0,f.c)([(0,r.F)("lightmapTexture")],e.prototype,"_lightmapTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"lightmapTexture",void 0),(0,f.c)([(0,r.F)("refractionTexture")],e.prototype,"_refractionTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"refractionTexture",void 0),(0,f.c)([(0,r.n)("ambient")],e.prototype,"ambientColor",void 0),(0,f.c)([(0,r.n)("diffuse")],e.prototype,"diffuseColor",void 0),(0,f.c)([(0,r.n)("specular")],e.prototype,"specularColor",void 0),(0,f.c)([(0,r.n)("emissive")],e.prototype,"emissiveColor",void 0),(0,f.c)([(0,r.N)()],e.prototype,"specularPower",void 0),(0,f.c)([(0,r.N)("useAlphaFromDiffuseTexture")],e.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"useAlphaFromDiffuseTexture",void 0),(0,f.c)([(0,r.N)("useEmissiveAsIllumination")],e.prototype,"_useEmissiveAsIllumination",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useEmissiveAsIllumination",void 0),(0,f.c)([(0,r.N)("linkEmissiveWithDiffuse")],e.prototype,"_linkEmissiveWithDiffuse",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"linkEmissiveWithDiffuse",void 0),(0,f.c)([(0,r.N)("useSpecularOverAlpha")],e.prototype,"_useSpecularOverAlpha",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useSpecularOverAlpha",void 0),(0,f.c)([(0,r.N)("useReflectionOverAlpha")],e.prototype,"_useReflectionOverAlpha",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useReflectionOverAlpha",void 0),(0,f.c)([(0,r.N)("disableLighting")],e.prototype,"_disableLighting",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsLightsDirty")],e.prototype,"disableLighting",void 0),(0,f.c)([(0,r.N)("useObjectSpaceNormalMap")],e.prototype,"_useObjectSpaceNormalMap",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useObjectSpaceNormalMap",void 0),(0,f.c)([(0,r.N)("useParallax")],e.prototype,"_useParallax",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useParallax",void 0),(0,f.c)([(0,r.N)("useParallaxOcclusion")],e.prototype,"_useParallaxOcclusion",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useParallaxOcclusion",void 0),(0,f.c)([(0,r.N)()],e.prototype,"parallaxScaleBias",void 0),(0,f.c)([(0,r.N)("roughness")],e.prototype,"_roughness",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"roughness",void 0),(0,f.c)([(0,r.N)()],e.prototype,"indexOfRefraction",void 0),(0,f.c)([(0,r.N)()],e.prototype,"invertRefractionY",void 0),(0,f.c)([(0,r.N)()],e.prototype,"alphaCutOff",void 0),(0,f.c)([(0,r.N)("useLightmapAsShadowmap")],e.prototype,"_useLightmapAsShadowmap",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useLightmapAsShadowmap",void 0),(0,f.c)([(0,r.q)("diffuseFresnelParameters")],e.prototype,"_diffuseFresnelParameters",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"diffuseFresnelParameters",void 0),(0,f.c)([(0,r.q)("opacityFresnelParameters")],e.prototype,"_opacityFresnelParameters",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],e.prototype,"opacityFresnelParameters",void 0),(0,f.c)([(0,r.q)("reflectionFresnelParameters")],e.prototype,"_reflectionFresnelParameters",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"reflectionFresnelParameters",void 0),(0,f.c)([(0,r.q)("refractionFresnelParameters")],e.prototype,"_refractionFresnelParameters",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"refractionFresnelParameters",void 0),(0,f.c)([(0,r.q)("emissiveFresnelParameters")],e.prototype,"_emissiveFresnelParameters",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"emissiveFresnelParameters",void 0),(0,f.c)([(0,r.N)("useReflectionFresnelFromSpecular")],e.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"useReflectionFresnelFromSpecular",void 0),(0,f.c)([(0,r.N)("useGlossinessFromSpecularMapAlpha")],e.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,f.c)([(0,r.N)("maxSimultaneousLights")],e.prototype,"_maxSimultaneousLights",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsLightsDirty")],e.prototype,"maxSimultaneousLights",void 0),(0,f.c)([(0,r.N)("invertNormalMapX")],e.prototype,"_invertNormalMapX",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"invertNormalMapX",void 0),(0,f.c)([(0,r.N)("invertNormalMapY")],e.prototype,"_invertNormalMapY",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"invertNormalMapY",void 0),(0,f.c)([(0,r.N)("twoSidedLighting")],e.prototype,"_twoSidedLighting",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"twoSidedLighting",void 0),(0,f.c)([(0,r.N)("applyDecalMapAfterDetailMap")],e.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,f.c)([(0,r.d)("_markAllSubMeshesAsMiscDirty")],e.prototype,"applyDecalMapAfterDetailMap",void 0),(0,T.g)("BABYLON.StandardMaterial",e),q.d.DefaultMaterialFactory=K=>new e("default material",K)}}]);