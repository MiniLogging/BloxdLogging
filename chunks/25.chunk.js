"use strict";(self.uji65st81d=self.uji65st81d||[]).push([[25],{12785:(V,h,mV)=>{mV.d(h,{b:()=>n});var t=mV(12409),L=mV(12718),N=mV(12413),A=mV(12776),k=mV(12770),C=mV(12790),K=mV(12746);class o extends k.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class n extends C.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(V){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(V,"DetailMap",140,new o,h),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=L.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=V._dirtyCallbacks[1]}isReadyForSubMesh(V,h,mV){return!this._isEnabled||!(V._areTexturesDirty&&h.texturesEnabled&&mV.getCaps().standardDerivatives&&this._texture&&A.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(V,h){if(this._isEnabled){V.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const mV=h.getEngine();V._areTexturesDirty&&(mV.getCaps().standardDerivatives&&this._texture&&A.e.DetailTextureEnabled&&this._isEnabled?((0,K.I)(this._texture,V,"DETAIL"),V.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):V.DETAIL=!1)}else V.DETAIL=!1}bindForSubMesh(V,h){if(!this._isEnabled)return;const mV=this._material.isFrozen;V.useUbo&&mV&&V.isSync||this._texture&&A.e.DetailTextureEnabled&&(V.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,K.n)(this._texture,V,"detail")),h.texturesEnabled&&this._texture&&A.e.DetailTextureEnabled&&V.setTexture("detailSampler",this._texture)}hasTexture(V){return this._texture===V}getActiveTextures(V){this._texture&&V.push(this._texture)}getAnimatables(V){this._texture&&this._texture.animations&&this._texture.animations.length>0&&V.push(this._texture)}dispose(V){var h;V&&(null===(h=this._texture)||void 0===h||h.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(V){V.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,t.e)([(0,N.B)("detailTexture"),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],n.prototype,"texture",void 0),(0,t.e)([(0,N.J)()],n.prototype,"diffuseBlendLevel",void 0),(0,t.e)([(0,N.J)()],n.prototype,"roughnessBlendLevel",void 0),(0,t.e)([(0,N.J)()],n.prototype,"bumpLevel",void 0),(0,t.e)([(0,N.J)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],n.prototype,"normalBlendMethod",void 0),(0,t.e)([(0,N.J)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],n.prototype,"isEnabled",void 0)},12770:(V,h,mV)=>{mV.d(h,{b:()=>t});class t{constructor(V){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=V,V)for(const h in V)Object.prototype.hasOwnProperty.call(V,h)&&this._setDefaultValue(h)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||V,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const V of Object.keys(this))"_"!==V[0]&&this._keys.push(V);if(this._externalProperties)for(const V in this._externalProperties)-1===this._keys.indexOf(V)&&this._keys.push(V)}isEqual(V){if(this._keys.length!==V._keys.length)return!1;for(let h=0;h<this._keys.length;h++){const mV=this._keys[h];if(this[mV]!==V[mV])return!1}return!0}cloneTo(V){this._keys.length!==V._keys.length&&(V._keys=this._keys.slice(0));for(let h=0;h<this._keys.length;h++){const mV=this._keys[h];V[mV]=this[mV]}}reset(){for(const V of this._keys)this._setDefaultValue(V)}_setDefaultValue(V){var h,mV,t,L;const N=(null===(h=this._externalProperties)||void 0===h||null===(mV=h[V])||void 0===mV?void 0:mV.type)??typeof this[V],A=null===(t=this._externalProperties)||void 0===t||null===(L=t[V])||void 0===L?void 0:L.default;switch(N){case"number":this[V]=A??0;break;case"string":this[V]=A??"";break;default:this[V]=A??!1}}toString(){let V="";for(let h=0;h<this._keys.length;h++){const mV=this._keys[h],t=this[mV];switch(typeof t){case"number":case"string":V+="#define "+mV+" "+t+"\n";break;default:t&&(V+="#define "+mV+"\n")}}return V}}},12776:(V,h,mV)=>{mV.d(h,{e:()=>L});var t=mV(12331);class L{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(V){this._DiffuseTextureEnabled!==V&&(this._DiffuseTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(V){this._BaseWeightTextureEnabled!==V&&(this._BaseWeightTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(V){this._BaseDiffuseRoughnessTextureEnabled!==V&&(this._BaseDiffuseRoughnessTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(V){this._DetailTextureEnabled!==V&&(this._DetailTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(V){this._DecalMapEnabled!==V&&(this._DecalMapEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(V){this._AmbientTextureEnabled!==V&&(this._AmbientTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(V){this._OpacityTextureEnabled!==V&&(this._OpacityTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(V){this._ReflectionTextureEnabled!==V&&(this._ReflectionTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(V){this._EmissiveTextureEnabled!==V&&(this._EmissiveTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(V){this._SpecularTextureEnabled!==V&&(this._SpecularTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(V){this._BumpTextureEnabled!==V&&(this._BumpTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(V){this._LightmapTextureEnabled!==V&&(this._LightmapTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(V){this._RefractionTextureEnabled!==V&&(this._RefractionTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(V){this._ColorGradingTextureEnabled!==V&&(this._ColorGradingTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(V){this._FresnelEnabled!==V&&(this._FresnelEnabled=V,t.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(V){this._ClearCoatTextureEnabled!==V&&(this._ClearCoatTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(V){this._ClearCoatBumpTextureEnabled!==V&&(this._ClearCoatBumpTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(V){this._ClearCoatTintTextureEnabled!==V&&(this._ClearCoatTintTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(V){this._SheenTextureEnabled!==V&&(this._SheenTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(V){this._AnisotropicTextureEnabled!==V&&(this._AnisotropicTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(V){this._ThicknessTextureEnabled!==V&&(this._ThicknessTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(V){this._RefractionIntensityTextureEnabled!==V&&(this._RefractionIntensityTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(V){this._TranslucencyIntensityTextureEnabled!==V&&(this._TranslucencyIntensityTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(V){this._TranslucencyColorTextureEnabled!==V&&(this._TranslucencyColorTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(V){this._IridescenceTextureEnabled!==V&&(this._IridescenceTextureEnabled=V,t.b.MarkAllMaterialsAsDirty(1))}}L._DiffuseTextureEnabled=!0,L._BaseWeightTextureEnabled=!0,L._BaseDiffuseRoughnessTextureEnabled=!0,L._DetailTextureEnabled=!0,L._DecalMapEnabled=!0,L._AmbientTextureEnabled=!0,L._OpacityTextureEnabled=!0,L._ReflectionTextureEnabled=!0,L._EmissiveTextureEnabled=!0,L._SpecularTextureEnabled=!0,L._BumpTextureEnabled=!0,L._LightmapTextureEnabled=!0,L._RefractionTextureEnabled=!0,L._ColorGradingTextureEnabled=!0,L._FresnelEnabled=!0,L._ClearCoatTextureEnabled=!0,L._ClearCoatBumpTextureEnabled=!0,L._ClearCoatTintTextureEnabled=!0,L._SheenTextureEnabled=!0,L._AnisotropicTextureEnabled=!0,L._ThicknessTextureEnabled=!0,L._RefractionIntensityTextureEnabled=!0,L._TranslucencyIntensityTextureEnabled=!0,L._TranslucencyColorTextureEnabled=!0,L._IridescenceTextureEnabled=!0},12793:(V,h,mV)=>{mV.d(h,{b:()=>N});var t,L=mV(12422);!function(V){V[V.Zero=0]="Zero",V[V.One=1]="One",V[V.MaxViewZ=2]="MaxViewZ"}(t||(t={}));class N{static CreateConfiguration(V){return N._Configurations[V]={defines:{},previousWorldMatrices:{},previousViewProjection:L.Matrix.Zero(),currentViewProjection:L.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},N._Configurations[V]}static DeleteConfiguration(V){delete N._Configurations[V]}static GetConfiguration(V){return N._Configurations[V]}static AddUniformsAndSamplers(V,h){V.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(V,h){for(const mV of h)if(mV.dk)for(const h of mV.dk)h._removeDrawWrapper(V)}static PrepareDefines(V,h,mV){if(!mV._arePrePassDirty)return;const t=N._Configurations[V];if(!t)return;mV.PREPASS=!0,mV.PREPASS_COLOR=!1,mV.PREPASS_COLOR_INDEX=-1;let L=0;for(let A=0;A<N.GeometryTextureDescriptions.length;A++){const V=N.GeometryTextureDescriptions[A],h=V.define,k=V.defineIndex,C=t.defines[k];void 0!==C?(mV[h]=!0,mV[k]=C,L++):(mV[h]=!1,delete mV[k])}mV.SCENE_MRT_COUNT=L,mV.BONES_VELOCITY_ENABLED=h.useBones&&h.computeBonesUsingShaders&&h.skeleton&&!h.skeleton.isUsingTextureForMatrices&&-1===t.excludedSkinnedMesh.indexOf(h)}static Bind(V,h,mV,t,L){const A=N._Configurations[V];if(!A)return;const k=mV.DV(),C=k.getEngine();if(A.reverseCulling&&C.setStateCullFaceType(k._mirroredCameraPosition?L.cullBackFaces:!L.cullBackFaces),(void 0!==A.defines.PREPASS_VELOCITY_INDEX||void 0!==A.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(A.previousWorldMatrices[mV.uniqueId]||(A.previousWorldMatrices[mV.uniqueId]=t.clone()),A.previousViewProjection||(A.previousViewProjection=k.getTransformMatrix().clone(),A.currentViewProjection=k.getTransformMatrix().clone()),A.currentViewProjection.updateFlag!==k.getTransformMatrix().updateFlag?(A.lastUpdateFrameId=C.frameId,A.previousViewProjection.t(A.currentViewProjection),A.currentViewProjection.t(k.getTransformMatrix())):A.lastUpdateFrameId!==C.frameId&&(A.lastUpdateFrameId=C.frameId,A.previousViewProjection.t(A.currentViewProjection)),h.setMatrix("previousWorld",A.previousWorldMatrices[mV.uniqueId]),h.setMatrix("previousViewProjection",A.previousViewProjection),A.previousWorldMatrices[mV.uniqueId]=t.clone(),mV.useBones&&mV.computeBonesUsingShaders&&mV.skeleton)){const V=mV.skeleton;if(!V.isUsingTextureForMatrices||-1===h.getUniformIndex("boneTextureWidth")){const t=V.getTransformMatrices(mV);t&&(A.previousBones[mV.uniqueId]||(A.previousBones[mV.uniqueId]=t.slice()),h.setMatrices("mPreviousBones",A.previousBones[mV.uniqueId]),A.previousBones[mV.uniqueId].set(t))}}}}N.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],N._Configurations={}},12790:(V,h,mV)=>{mV.d(h,{d:()=>M});var t=mV(12409),L=mV(12413),N=mV(12718),A=mV(12300),k=mV(12315),C=mV(12342);const K=new RegExp("^([gimus]+)!");class o{constructor(V){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=V,this._scene=V.DV(),this._engine=this._scene.getEngine()}_addPlugin(V){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===V.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!V.isCompatible(this._material.shaderLanguage))throw`The plugin "${V.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const h=V.getClassName();o._MaterialPluginClassToMainDefine[h]||(o._MaterialPluginClassToMainDefine[h]="MATERIALPLUGIN_"+ ++o._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(V,h)=>this._handlePluginEvent(V,h),this._plugins.push(V),this._plugins.sort(((V,h)=>V.priority-h.priority)),this._codeInjectionPoints={};const mV={};mV[o._MaterialPluginClassToMainDefine[h]]={type:"boolean",default:!0};for(const t of this._plugins)t.collectDefines(mV),this._collectPointNames("vertex",t.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",t.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=mV,!0}_activatePlugin(V){-1===this._activePlugins.indexOf(V)&&(this._activePlugins.push(V),this._activePlugins.sort(((V,h)=>V.priority-h.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),V.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(V),this._activePluginsForExtraEvents.sort(((V,h)=>V.priority-h.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(V){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===V)return this._plugins[h];return null}_handlePluginEventIsReadyForSubMesh(V){let h=!0;for(const mV of this._activePlugins)h=h&&mV.isReadyForSubMesh(V.defines,this._scene,this._engine,V.subMesh);V.isReadyForSubMesh=h}_handlePluginEventPrepareDefinesBeforeAttributes(V){for(const h of this._activePlugins)h.prepareDefinesBeforeAttributes(V.defines,this._scene,V.mesh)}_handlePluginEventPrepareDefines(V){for(const h of this._activePlugins)h.prepareDefines(V.defines,this._scene,V.mesh)}_handlePluginEventHardBindForSubMesh(V){for(const h of this._activePluginsForExtraEvents)h.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,V.subMesh)}_handlePluginEventBindForSubMesh(V){for(const h of this._activePlugins)h.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,V.subMesh)}_handlePluginEventHasRenderTargetTextures(V){let h=!1;for(const mV of this._activePluginsForExtraEvents)if(h=mV.hasRenderTargetTextures(),h)break;V.hasRenderTargetTextures=h}_handlePluginEventFillRenderTargetTextures(V){for(const h of this._activePluginsForExtraEvents)h.fillRenderTargetTextures(V.renderTargets)}_handlePluginEvent(V,h){switch(V){case 512:{const V=h;for(const h of this._activePlugins)h.getActiveTextures(V.activeTextures);break}case 256:{const V=h;for(const h of this._activePlugins)h.getAnimatables(V.animatables);break}case 1024:{const V=h;let mV=!1;for(const h of this._activePlugins)if(mV=h.hasTexture(V.texture),mV)break;V.hasTexture=mV;break}case 2:{const V=h;for(const h of this._plugins)h.dispose(V.forceDisposeTextures);break}case 4:h.defineNames=this._defineNamesFromPlugins;break;case 128:{const V=h;for(const h of this._activePlugins)V.fallbackRank=h.addFallbacks(V.defines,V.fallbacks,V.fallbackRank),h.getAttributes(V.attributes,this._scene,V.mesh);this._uniformList.length>0&&V.uniforms.push(...this._uniformList),this._samplerList.length>0&&V.samplers.push(...this._samplerList),this._uboList.length>0&&V.uniformBuffersNames.push(...this._uboList),V.customCode=this._injectCustomCode(V,V.customCode);break}case 8:{const V=h;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const mV=1===this._material.shaderLanguage;for(const h of this._plugins){const t=h.getUniforms(this._material.shaderLanguage);if(t){if(t.ubo)for(const h of t.ubo){if(h.size&&h.type){const t=h.arraySize??0;if(V.ubo.addUniform(h.name,h.size,t),mV){let V;switch(h.type){case"mat4":V="mat4x4f";break;case"float":V="f32";break;default:V=`${h.type}f`}this._uboDeclaration+=t>0?`uniform ${h.name}: array<${V}, ${t}>;\n`:`uniform ${h.name}: ${V};\n`}else this._uboDeclaration+=`${h.type} ${h.name}${t>0?`[${t}]`:""};\n`}this._uniformList.push(h.name)}t.vertex&&(this._vertexDeclaration+=t.vertex+"\n"),t.fragment&&(this._fragmentDeclaration+=t.fragment+"\n")}h.getSamplers(this._samplerList),h.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(V,h){if(h)for(const mV in h)this._codeInjectionPoints[V]||(this._codeInjectionPoints[V]={}),this._codeInjectionPoints[V][mV]=!0}_injectCustomCode(V,h){return(mV,t)=>{var L;h&&(t=h(mV,t)),this._uboDeclaration&&(t=t.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(t=t.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(t=t.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const N=null===(L=this._codeInjectionPoints)||void 0===L?void 0:L[mV];if(!N)return t;let A=null;for(let h in N){let L="";for(const t of this._activePlugins){var o;let N=null===(o=t.getCustomCode(mV,this._material.shaderLanguage))||void 0===o?void 0:o[h];if(N){if(t.resolveIncludes){if(null===A){const h=0;A={defines:[],indexParameters:V.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:C.b.GetShadersRepository(h),includesShadersStore:C.b.GetIncludesShadersStore(h),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,bh:this._engine.bh,processCodeAfterIncludes:void 0}}A.isFragment="fragment"===mV,(0,k.i)(N,A,(V=>N=V))}L+=N+"\n"}}if(L.length>0)if("!"===h.charAt(0)){h=h.substring(1);let V="g";if("!"===h.charAt(0))V="",h=h.substring(1);else{const mV=K.exec(h);mV&&mV.length>=2&&(V=mV[1],h=h.substring(V.length+1))}V.indexOf("g")<0&&(V+="g");const mV=t,N=new RegExp(h,V);let A=N.exec(mV);for(;null!==A;){let V=L;for(let h=0;h<A.length;++h)V=V.replace("$"+h,A[h]);t=t.replace(A[0],V),A=N.exec(mV)}}else{const V="#define "+h;t=t.replace(V,"\n"+L+"\n"+V)}}return t}}}o._MaterialPluginClassToMainDefine={},o._MaterialPluginCounter=0,A.b.OnEnginesDisposedObservable.add((()=>{R()}));const n=[];let q=!1,x=null;function R(){n.length=0,q=!1,N.c.OnEventObservable.remove(x),x=null}var d=mV(12448),s=mV(12388);class M{isCompatible(V){return 0===V}_enable(V){V&&this._pluginManager._activatePlugin(this)}constructor(V,h,mV,t){let L=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=V,this.name=h,this.priority=mV,this.resolveIncludes=A,V.pluginManager||(V.pluginManager=new o(V),V.XL.add((()=>{V.pluginManager=void 0}))),this._pluginDefineNames=t,this._pluginManager=V.pluginManager,L&&this._pluginManager._addPlugin(this),N&&this._enable(!0),this.markAllDefinesAsDirty=V._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(V,h,mV,t){return!0}hardBindForSubMesh(V,h,mV,t){}bindForSubMesh(V,h,mV,t){}dispose(V){}getCustomCode(V){return null}collectDefines(V){if(this._pluginDefineNames)for(const h of Object.keys(this._pluginDefineNames)){if("_"===h[0])continue;const mV=typeof this._pluginDefineNames[h];V[h]={type:"number"===mV?"number":"string"===mV?"string":"boolean"===mV?"boolean":"object",default:this._pluginDefineNames[h]}}}prepareDefinesBeforeAttributes(V,h,mV){}prepareDefines(V,h,mV){}hasTexture(V){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(V){}getActiveTextures(V){}getAnimatables(V){}addFallbacks(V,h,mV){return mV}getSamplers(V){}getAttributes(V,h,mV){}getUniformBuffersNames(V){}getUniforms(){return{}}copyTo(V){d.e.Clone((()=>V),this)}serialize(){return d.e.Serialize(this)}parse(V,h,mV){d.e.Parse((()=>this),V,h,mV)}}(0,t.e)([(0,L.J)()],M.prototype,"name",void 0),(0,t.e)([(0,L.J)()],M.prototype,"priority",void 0),(0,t.e)([(0,L.J)()],M.prototype,"resolveIncludes",void 0),(0,t.e)([(0,L.J)()],M.prototype,"registerForExtraEvents",void 0),(0,s.i)("BABYLON.MaterialPluginBase",M)},12762:(V,h,mV)=>{mV.d(h,{e:()=>t});class t{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(V){V.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(V){}bindForSubMesh(V,h,mV,t,L){if(h.prePassRenderer&&h.prePassRenderer.enabled&&h.prePassRenderer.currentRTisSceneRT&&(-1!==h.prePassRenderer.getIndex(2)||-1!==h.prePassRenderer.getIndex(11))){this.previousWorldMatrices[mV.uniqueId]||(this.previousWorldMatrices[mV.uniqueId]=t.clone()),this.previousViewProjection||(this.previousViewProjection=h.getTransformMatrix().clone(),this.currentViewProjection=h.getTransformMatrix().clone());const L=h.getEngine();this.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.t(this.currentViewProjection),this.currentViewProjection.t(h.getTransformMatrix())):this._lastUpdateFrameId!==L.frameId&&(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.t(this.currentViewProjection)),V.setMatrix("previousWorld",this.previousWorldMatrices[mV.uniqueId]),V.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[mV.uniqueId]=t.clone()}}}},12754:(V,h,mV)=>{mV.d(h,{Qh:()=>j});var t=mV(12409),L=mV(12413),N=mV(12507),A=mV(12648),k=mV(12453),C=mV(12481),K=mV(12762),o=mV(12654),n=mV(12718),q=mV(12770),x=mV(12711),R=mV(12406),d=mV(12388),s=mV(12776),M=mV(12704),c=mV(12785),z=mV(12751),Q=mV(12746),J=mV(12448),v=mV(12793);const D={effect:null,subMesh:null};class H extends q.b{constructor(V){super(V),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(V){const h=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const mV of h)this[mV]=mV===V}}class j extends x.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(V){this._attachImageProcessingConfiguration(V),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(V){V!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=V||this.DV().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(V){this.imageProcessingConfiguration.colorCurvesEnabled=V}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(V){this.imageProcessingConfiguration.colorGradingEnabled=V}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(V){this._imageProcessingConfiguration.toneMappingEnabled=V}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(V){this._imageProcessingConfiguration.exposure=V}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(V){this._imageProcessingConfiguration.contrast=V}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(V){this._imageProcessingConfiguration.colorGradingTexture=V}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(V){this._imageProcessingConfiguration.colorCurves=V}get canRenderToMRT(){return!0}constructor(V,h){super(V,h,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||j.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new k.Jh(0,0,0),this.diffuseColor=new k.Jh(1,1,1),this.specularColor=new k.Jh(1,1,1),this.emissiveColor=new k.Jh(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new N.g(16),this._globalAmbientColor=new k.Jh(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new c.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new K.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),j.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),j.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(j.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(j.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Qh"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===n.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Mk&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==n.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Mk||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(V,h){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const L=h._drawWrapper;if(L.effect&&this.isFrozen&&L._wasPreviouslyReady&&L._wasPreviouslyUsingInstances===t)return!0;h.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),h.materialDefines=new H(this._eventInfo.defineNames));const N=this.DV(),A=h.materialDefines;if(this._isReadyForSubMesh(h))return!0;const k=N.getEngine();A._needNormals=(0,Q.E)(N,V,A,!0,this._maxSimultaneousLights,this._disableLighting),(0,Q.N)(N,A);const n=this.needAlphaBlendingForMesh(V)&&this.DV().useOrderIndependentTransparency;if((0,Q.R)(N,A,this.canRenderToMRT&&!n),(0,Q.Q)(N,A,n),v.b.PrepareDefines(k.currentRenderPassId,V,A),A._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,A._needUVs=!1;for(let V=1;V<=6;++V)A["MAINUV"+V]=!1;if(N.texturesEnabled){if(A.DIFFUSEDIRECTUV=0,A.BUMPDIRECTUV=0,A.AMBIENTDIRECTUV=0,A.OPACITYDIRECTUV=0,A.EMISSIVEDIRECTUV=0,A.SPECULARDIRECTUV=0,A.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&j.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._diffuseTexture,A,"DIFFUSE")}else A.DIFFUSE=!1;if(this._ambientTexture&&j.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._ambientTexture,A,"AMBIENT")}else A.AMBIENT=!1;if(this._opacityTexture&&j.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._opacityTexture,A,"OPACITY"),A.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else A.OPACITY=!1;if(this._reflectionTexture&&j.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(A._needNormals=!0,A.REFLECTION=!0,A.ROUGHNESS=this._roughness>0,A.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,A.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===R.d.INVCUBIC_MODE,A.REFLECTIONMAP_3D=this._reflectionTexture.isCube,A.REFLECTIONMAP_OPPOSITEZ=A.REFLECTIONMAP_3D&&this.DV().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,A.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case R.d.EXPLICIT_MODE:A.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case R.d.PLANAR_MODE:A.setReflectionMode("REFLECTIONMAP_PLANAR");break;case R.d.PROJECTION_MODE:A.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case R.d.SKYBOX_MODE:A.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case R.d.SPHERICAL_MODE:A.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case R.d.EQUIRECTANGULAR_MODE:A.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case R.d.FIXED_EQUIRECTANGULAR_MODE:A.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case R.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:A.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case R.d.CUBIC_MODE:case R.d.INVCUBIC_MODE:default:A.setReflectionMode("REFLECTIONMAP_CUBIC")}A.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else A.REFLECTION=!1,A.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&j.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._emissiveTexture,A,"EMISSIVE")}else A.EMISSIVE=!1;if(this._lightmapTexture&&j.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._lightmapTexture,A,"LIGHTMAP"),A.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,A.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else A.LIGHTMAP=!1;if(this._specularTexture&&j.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Q.I)(this._specularTexture,A,"SPECULAR"),A.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else A.SPECULAR=!1;if(N.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&j.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Q.I)(this._bumpTexture,A,"BUMP"),A.PARALLAX=this._useParallax,A.PARALLAX_RHS=N.useRightHandedSystem,A.PARALLAXOCCLUSION=this._useParallaxOcclusion,A.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else A.BUMP=!1,A.PARALLAX=!1,A.PARALLAX_RHS=!1,A.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&j.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;A._needUVs=!0,A.REFRACTION=!0,A.REFRACTIONMAP_3D=this._refractionTexture.isCube,A.RGBDREFRACTION=this._refractionTexture.isRGBD,A.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else A.REFRACTION=!1;A.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else A.DIFFUSE=!1,A.AMBIENT=!1,A.OPACITY=!1,A.REFLECTION=!1,A.EMISSIVE=!1,A.LIGHTMAP=!1,A.BUMP=!1,A.REFRACTION=!1;A.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),A.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,A.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,A.SPECULAROVERALPHA=this._useSpecularOverAlpha,A.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,A.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,A.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(V)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=A,this._eventInfo.subMesh=h,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(A._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(A),A.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,A.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(A._areFresnelDirty&&(j.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(A.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,A.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,A.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,A.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,A.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,A.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,A._needNormals=!0,A.FRESNEL=!0):A.FRESNEL=!1),A.AREALIGHTUSED)for(let mV=0;mV<V.lightSources.length;mV++)if(!V.lightSources[mV]._isReady())return!1;(0,Q.M)(V,N,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(V),A,this._applyDecalMapAfterDetailMap),(0,Q.A)(N,k,this,A,t,null,h.getRenderingMesh().hasThinInstances),this._eventInfo.defines=A,this._eventInfo.mesh=V,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Q.z)(V,A,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let q=!1;if(A.isDirty){const t=A._areLightsDisposed;A.markAsProcessed();const L=new M.b;A.REFLECTION&&L.addFallback(0,"REFLECTION"),A.SPECULAR&&L.addFallback(0,"SPECULAR"),A.BUMP&&L.addFallback(0,"BUMP"),A.PARALLAX&&L.addFallback(1,"PARALLAX"),A.PARALLAX_RHS&&L.addFallback(1,"PARALLAX_RHS"),A.PARALLAXOCCLUSION&&L.addFallback(0,"PARALLAXOCCLUSION"),A.SPECULAROVERALPHA&&L.addFallback(0,"SPECULAROVERALPHA"),A.FOG&&L.addFallback(1,"FOG"),A.POINTSIZE&&L.addFallback(0,"POINTSIZE"),A.LOGARITHMICDEPTH&&L.addFallback(0,"LOGARITHMICDEPTH"),(0,Q.o)(A,L,this._maxSimultaneousLights),A.SPECULARTERM&&L.addFallback(0,"SPECULARTERM"),A.DIFFUSEFRESNEL&&L.addFallback(1,"DIFFUSEFRESNEL"),A.OPACITYFRESNEL&&L.addFallback(2,"OPACITYFRESNEL"),A.REFLECTIONFRESNEL&&L.addFallback(3,"REFLECTIONFRESNEL"),A.EMISSIVEFRESNEL&&L.addFallback(4,"EMISSIVEFRESNEL"),A.FRESNEL&&L.addFallback(4,"FRESNEL"),A.MULTIVIEW&&L.addFallback(0,"MULTIVIEW");const n=[C.i.PositionKind];A.NORMAL&&n.push(C.i.NormalKind),A.TANGENT&&n.push(C.i.TangentKind);for(let V=1;V<=6;++V)A["UV"+V]&&n.push(`uv${1===V?"":V}`);A.VERTEXCOLOR&&n.push(C.i.ColorKind),(0,Q.u)(n,V,A,L),(0,Q.w)(n,A),(0,Q.x)(n,V,A),(0,Q.s)(n,V,A);let x="default";const R=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],d=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],s=["Material","Scene","Mesh"],c={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:A.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=L,this._eventInfo.fallbackRank=0,this._eventInfo.defines=A,this._eventInfo.uniforms=R,this._eventInfo.attributes=n,this._eventInfo.samplers=d,this._eventInfo.uniformBuffersNames=s,this._eventInfo.customCode=void 0,this._eventInfo.mesh=V,this._eventInfo.indexParameters=c,this._callbackPluginEventGeneric(128,this._eventInfo),v.b.AddUniformsAndSamplers(R,d),K.e.AddUniforms(R),K.e.AddSamplers(d),o.b&&(o.b.PrepareUniforms(R,A),o.b.PrepareSamplers(d,A)),(0,Q.V)({uniformsNames:R,uniformBuffersNames:s,samplers:d,defines:A,maxSimultaneousLights:this._maxSimultaneousLights}),(0,z.e)(R);const J={};this.customShaderNameResolve&&(x=this.customShaderNameResolve(x,R,s,d,A,n,J));const H=A.toString(),j=h.effect;let l=N.getEngine().createEffect(x,{attributes:n,uniformsNames:R,uniformBuffersNames:s,samplers:d,defines:H,fallbacks:L,onCompiled:this.onCompiled,onError:this.onError,indexParameters:c,processFinalCode:J.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:A.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([mV.e(41),mV.e(64)]).then(mV.bind(mV,14935)),Promise.all([mV.e(39),mV.e(65)]).then(mV.bind(mV,15096))]):await Promise.all([Promise.all([mV.e(34),mV.e(67)]).then(mV.bind(mV,15180)),Promise.all([mV.e(33),mV.e(68)]).then(mV.bind(mV,15333))]),this._shadersLoaded=!0}},k);if(this._eventInfo.customCode=void 0,l)if(this._onEffectCreatedObservable&&(D.effect=l,D.subMesh=h,this._onEffectCreatedObservable.notifyObservers(D)),this.allowShaderHotSwapping&&j&&!l.isReady()){if(l=j,A.markAsUnprocessed(),q=this.isFrozen,t)return A._areLightsDisposed=!0,!1}else N.resetCachedMaterial(),h.setEffect(l,A,this._materialContext)}return!(!h.effect||!h.effect.isReady())&&(A._renderId=N.getRenderId(),L._wasPreviouslyReady=!q,L._wasPreviouslyUsingInstances=t,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const V=this._uniformBuffer;V.addUniform("diffuseLeftColor",4),V.addUniform("diffuseRightColor",4),V.addUniform("opacityParts",4),V.addUniform("reflectionLeftColor",4),V.addUniform("reflectionRightColor",4),V.addUniform("refractionLeftColor",4),V.addUniform("refractionRightColor",4),V.addUniform("emissiveLeftColor",4),V.addUniform("emissiveRightColor",4),V.addUniform("vDiffuseInfos",2),V.addUniform("vAmbientInfos",2),V.addUniform("vOpacityInfos",2),V.addUniform("vReflectionInfos",2),V.addUniform("vReflectionPosition",3),V.addUniform("vReflectionSize",3),V.addUniform("vEmissiveInfos",2),V.addUniform("vLightmapInfos",2),V.addUniform("vSpecularInfos",2),V.addUniform("vBumpInfos",3),V.addUniform("diffuseMatrix",16),V.addUniform("ambientMatrix",16),V.addUniform("opacityMatrix",16),V.addUniform("reflectionMatrix",16),V.addUniform("emissiveMatrix",16),V.addUniform("lightmapMatrix",16),V.addUniform("specularMatrix",16),V.addUniform("bumpMatrix",16),V.addUniform("vTangentSpaceParams",2),V.addUniform("pointSize",1),V.addUniform("alphaCutOff",1),V.addUniform("refractionMatrix",16),V.addUniform("vRefractionInfos",4),V.addUniform("vRefractionPosition",3),V.addUniform("vRefractionSize",3),V.addUniform("vSpecularColor",4),V.addUniform("vEmissiveColor",3),V.addUniform("vDiffuseColor",4),V.addUniform("vAmbientColor",3),V.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(V,h,mV){const t=this.DV(),L=mV.materialDefines;if(!L)return;const N=mV.effect;if(!N)return;this._activeEffect=N,h.getMeshUniformBuffer().bindToEffect(N,"Mesh"),h.transferToEffect(V),this._uniformBuffer.bindToEffect(N,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,t,h,V,this.isFrozen),v.b.Bind(t.getEngine().currentRenderPassId,this._activeEffect,h,V,this);const C=t.activeCamera;C?this._uniformBuffer.updateFloat4("cameraInfo",C.ck,C.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=mV,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),L.OBJECTSPACE_NORMALMAP&&(V.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const K=this._mustRebind(t,N,mV,h.visibility);(0,Q.c)(h,N);const o=this._uniformBuffer;if(K){if(this.bindViewProjection(N),!o.useUbo||!this.isFrozen||!o.isSync||mV._drawWrapper._forceRebindOnNextCall){if(j.FresnelEnabled&&L.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(o.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),o.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&o.updateColor4("opacityParts",new k.Jh(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(o.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),o.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(o.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),o.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(o.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),o.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),t.texturesEnabled){if(this._diffuseTexture&&j.DiffuseTextureEnabled&&(o.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Q.n)(this._diffuseTexture,o,"diffuse")),this._ambientTexture&&j.AmbientTextureEnabled&&(o.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Q.n)(this._ambientTexture,o,"ambient")),this._opacityTexture&&j.OpacityTextureEnabled&&(o.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Q.n)(this._opacityTexture,o,"opacity")),this._hasAlphaChannel()&&o.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&j.ReflectionTextureEnabled){if(o.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),o.zk("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const V=this._reflectionTexture;o.updateVector3("vReflectionPosition",V.boundingBoxPosition),o.updateVector3("vReflectionSize",V.boundingBoxSize)}}else o.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&j.EmissiveTextureEnabled&&(o.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Q.n)(this._emissiveTexture,o,"emissive")),this._lightmapTexture&&j.LightmapTextureEnabled&&(o.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Q.n)(this._lightmapTexture,o,"lightmap")),this._specularTexture&&j.SpecularTextureEnabled&&(o.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Q.n)(this._specularTexture,o,"specular")),this._bumpTexture&&t.getEngine().getCaps().standardDerivatives&&j.BumpTextureEnabled&&(o.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Q.n)(this._bumpTexture,o,"bump"),t._mirroredCameraPosition?o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&j.RefractionTextureEnabled){let V=1;if(this._refractionTexture.isCube||(o.zk("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(V=this._refractionTexture.depth)),o.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,V,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const V=this._refractionTexture;o.updateVector3("vRefractionPosition",V.boundingBoxPosition),o.updateVector3("vRefractionSize",V.boundingBoxSize)}}}this.pointsCloud&&o.updateFloat("pointSize",this.pointSize),o.updateColor4("vSpecularColor",this.specularColor,this.specularPower),o.updateColor3("vEmissiveColor",j.EmissiveTextureEnabled?this.emissiveColor:k.Jh.BlackReadOnly),o.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),t.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),o.updateColor3("vAmbientColor",this._globalAmbientColor)}t.texturesEnabled&&(this._diffuseTexture&&j.DiffuseTextureEnabled&&N.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&j.AmbientTextureEnabled&&N.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&j.OpacityTextureEnabled&&N.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&j.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?N.setTexture("reflectionCubeSampler",this._reflectionTexture):N.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&j.EmissiveTextureEnabled&&N.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&j.LightmapTextureEnabled&&N.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&j.SpecularTextureEnabled&&N.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&t.getEngine().getCaps().standardDerivatives&&j.BumpTextureEnabled&&N.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&j.RefractionTextureEnabled&&(this._refractionTexture.isCube?N.setTexture("refractionCubeSampler",this._refractionTexture):N.setTexture("refraction2DSampler",this._refractionTexture))),this.DV().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(h)&&this.DV().depthPeelingRenderer.bind(N),this._eventInfo.subMesh=mV,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,z.h)(N,this,t),this.bindEyePosition(N)}else t.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(K||!this.isFrozen){var n;if(t.lightsEnabled&&!this._disableLighting&&(0,Q.f)(t,h,N,L,this._maxSimultaneousLights),(t.fogEnabled&&h.applyFog&&t.fogMode!==A.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||h.receiveShadows||L.PREPASS)&&this.bindView(N),(0,Q.d)(t,h,N),L.NUM_MORPH_INFLUENCERS&&(0,Q.i)(h,N),L.BAKED_VERTEX_ANIMATION_TEXTURE)null===(n=h.bakedVertexAnimationManager)||void 0===n||n.bind(N,L.INSTANCES);this.useLogarithmicDepth&&(0,Q.g)(L,N,t),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(h,this._activeEffect,mV),o.update()}getAnimatables(){const V=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&V.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&V.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&V.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&V.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&V.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&V.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&V.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&V.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&V.push(this._refractionTexture),V}getActiveTextures(){const V=super.getActiveTextures();return this._diffuseTexture&&V.push(this._diffuseTexture),this._ambientTexture&&V.push(this._ambientTexture),this._opacityTexture&&V.push(this._opacityTexture),this._reflectionTexture&&V.push(this._reflectionTexture),this._emissiveTexture&&V.push(this._emissiveTexture),this._specularTexture&&V.push(this._specularTexture),this._bumpTexture&&V.push(this._bumpTexture),this._lightmapTexture&&V.push(this._lightmapTexture),this._refractionTexture&&V.push(this._refractionTexture),V}hasTexture(V){return!!super.hasTexture(V)||(this._diffuseTexture===V||(this._ambientTexture===V||(this._opacityTexture===V||(this._reflectionTexture===V||(this._emissiveTexture===V||(this._specularTexture===V||(this._bumpTexture===V||(this._lightmapTexture===V||this._refractionTexture===V))))))))}dispose(V,h){var mV,t,L,N,A,k,C,K,o;h&&(null===(mV=this._diffuseTexture)||void 0===mV||mV.dispose(),null===(t=this._ambientTexture)||void 0===t||t.dispose(),null===(L=this._opacityTexture)||void 0===L||L.dispose(),null===(N=this._reflectionTexture)||void 0===N||N.dispose(),null===(A=this._emissiveTexture)||void 0===A||A.dispose(),null===(k=this._specularTexture)||void 0===k||k.dispose(),null===(C=this._bumpTexture)||void 0===C||C.dispose(),null===(K=this._lightmapTexture)||void 0===K||K.dispose(),null===(o=this._refractionTexture)||void 0===o||o.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(V,h)}clone(V){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],mV=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const t=J.e.Clone((()=>new j(V,this.DV())),this,{cloneTexturesOnlyOnce:h});return t.name=V,t.id=V,this.Ck.copyTo(t.Ck),this._clonePlugins(t,mV),t}static Parse(V,h,mV){const t=J.e.Parse((()=>new j(V.name,h)),V,h,mV);return V.Ck&&t.Ck.parse(V.Ck,h,mV),n.c._ParsePlugins(V,t,h,mV),t}static get DiffuseTextureEnabled(){return s.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(V){s.e.DiffuseTextureEnabled=V}static get DetailTextureEnabled(){return s.e.DetailTextureEnabled}static set DetailTextureEnabled(V){s.e.DetailTextureEnabled=V}static get AmbientTextureEnabled(){return s.e.AmbientTextureEnabled}static set AmbientTextureEnabled(V){s.e.AmbientTextureEnabled=V}static get OpacityTextureEnabled(){return s.e.OpacityTextureEnabled}static set OpacityTextureEnabled(V){s.e.OpacityTextureEnabled=V}static get ReflectionTextureEnabled(){return s.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(V){s.e.ReflectionTextureEnabled=V}static get EmissiveTextureEnabled(){return s.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(V){s.e.EmissiveTextureEnabled=V}static get SpecularTextureEnabled(){return s.e.SpecularTextureEnabled}static set SpecularTextureEnabled(V){s.e.SpecularTextureEnabled=V}static get BumpTextureEnabled(){return s.e.BumpTextureEnabled}static set BumpTextureEnabled(V){s.e.BumpTextureEnabled=V}static get LightmapTextureEnabled(){return s.e.LightmapTextureEnabled}static set LightmapTextureEnabled(V){s.e.LightmapTextureEnabled=V}static get RefractionTextureEnabled(){return s.e.RefractionTextureEnabled}static set RefractionTextureEnabled(V){s.e.RefractionTextureEnabled=V}static get ColorGradingTextureEnabled(){return s.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(V){s.e.ColorGradingTextureEnabled=V}static get FresnelEnabled(){return s.e.FresnelEnabled}static set FresnelEnabled(V){s.e.FresnelEnabled=V}}j.ForceGLSL=!1,(0,t.e)([(0,L.B)("diffuseTexture")],j.prototype,"_diffuseTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],j.prototype,"diffuseTexture",void 0),(0,t.e)([(0,L.B)("ambientTexture")],j.prototype,"_ambientTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"ambientTexture",void 0),(0,t.e)([(0,L.B)("opacityTexture")],j.prototype,"_opacityTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],j.prototype,"opacityTexture",void 0),(0,t.e)([(0,L.B)("reflectionTexture")],j.prototype,"_reflectionTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"reflectionTexture",void 0),(0,t.e)([(0,L.B)("emissiveTexture")],j.prototype,"_emissiveTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"emissiveTexture",void 0),(0,t.e)([(0,L.B)("specularTexture")],j.prototype,"_specularTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"specularTexture",void 0),(0,t.e)([(0,L.B)("bumpTexture")],j.prototype,"_bumpTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"bumpTexture",void 0),(0,t.e)([(0,L.B)("lightmapTexture")],j.prototype,"_lightmapTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"lightmapTexture",void 0),(0,t.e)([(0,L.B)("refractionTexture")],j.prototype,"_refractionTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"refractionTexture",void 0),(0,t.e)([(0,L.l)("ambient")],j.prototype,"ambientColor",void 0),(0,t.e)([(0,L.l)("diffuse")],j.prototype,"diffuseColor",void 0),(0,t.e)([(0,L.l)("specular")],j.prototype,"specularColor",void 0),(0,t.e)([(0,L.l)("emissive")],j.prototype,"emissiveColor",void 0),(0,t.e)([(0,L.J)()],j.prototype,"specularPower",void 0),(0,t.e)([(0,L.J)("useAlphaFromDiffuseTexture")],j.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],j.prototype,"useAlphaFromDiffuseTexture",void 0),(0,t.e)([(0,L.J)("useEmissiveAsIllumination")],j.prototype,"_useEmissiveAsIllumination",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useEmissiveAsIllumination",void 0),(0,t.e)([(0,L.J)("linkEmissiveWithDiffuse")],j.prototype,"_linkEmissiveWithDiffuse",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"linkEmissiveWithDiffuse",void 0),(0,t.e)([(0,L.J)("useSpecularOverAlpha")],j.prototype,"_useSpecularOverAlpha",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useSpecularOverAlpha",void 0),(0,t.e)([(0,L.J)("useReflectionOverAlpha")],j.prototype,"_useReflectionOverAlpha",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useReflectionOverAlpha",void 0),(0,t.e)([(0,L.J)("disableLighting")],j.prototype,"_disableLighting",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsLightsDirty")],j.prototype,"disableLighting",void 0),(0,t.e)([(0,L.J)("useObjectSpaceNormalMap")],j.prototype,"_useObjectSpaceNormalMap",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useObjectSpaceNormalMap",void 0),(0,t.e)([(0,L.J)("useParallax")],j.prototype,"_useParallax",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useParallax",void 0),(0,t.e)([(0,L.J)("useParallaxOcclusion")],j.prototype,"_useParallaxOcclusion",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useParallaxOcclusion",void 0),(0,t.e)([(0,L.J)()],j.prototype,"parallaxScaleBias",void 0),(0,t.e)([(0,L.J)("roughness")],j.prototype,"_roughness",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"roughness",void 0),(0,t.e)([(0,L.J)()],j.prototype,"indexOfRefraction",void 0),(0,t.e)([(0,L.J)()],j.prototype,"invertRefractionY",void 0),(0,t.e)([(0,L.J)()],j.prototype,"alphaCutOff",void 0),(0,t.e)([(0,L.J)("useLightmapAsShadowmap")],j.prototype,"_useLightmapAsShadowmap",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useLightmapAsShadowmap",void 0),(0,t.e)([(0,L.p)("diffuseFresnelParameters")],j.prototype,"_diffuseFresnelParameters",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelDirty")],j.prototype,"diffuseFresnelParameters",void 0),(0,t.e)([(0,L.p)("opacityFresnelParameters")],j.prototype,"_opacityFresnelParameters",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],j.prototype,"opacityFresnelParameters",void 0),(0,t.e)([(0,L.p)("reflectionFresnelParameters")],j.prototype,"_reflectionFresnelParameters",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelDirty")],j.prototype,"reflectionFresnelParameters",void 0),(0,t.e)([(0,L.p)("refractionFresnelParameters")],j.prototype,"_refractionFresnelParameters",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelDirty")],j.prototype,"refractionFresnelParameters",void 0),(0,t.e)([(0,L.p)("emissiveFresnelParameters")],j.prototype,"_emissiveFresnelParameters",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelDirty")],j.prototype,"emissiveFresnelParameters",void 0),(0,t.e)([(0,L.J)("useReflectionFresnelFromSpecular")],j.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsFresnelDirty")],j.prototype,"useReflectionFresnelFromSpecular",void 0),(0,t.e)([(0,L.J)("useGlossinessFromSpecularMapAlpha")],j.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,t.e)([(0,L.J)("maxSimultaneousLights")],j.prototype,"_maxSimultaneousLights",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsLightsDirty")],j.prototype,"maxSimultaneousLights",void 0),(0,t.e)([(0,L.J)("invertNormalMapX")],j.prototype,"_invertNormalMapX",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"invertNormalMapX",void 0),(0,t.e)([(0,L.J)("invertNormalMapY")],j.prototype,"_invertNormalMapY",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"invertNormalMapY",void 0),(0,t.e)([(0,L.J)("twoSidedLighting")],j.prototype,"_twoSidedLighting",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"twoSidedLighting",void 0),(0,t.e)([(0,L.J)("applyDecalMapAfterDetailMap")],j.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,t.e)([(0,L.c)("_markAllSubMeshesAsMiscDirty")],j.prototype,"applyDecalMapAfterDetailMap",void 0),(0,d.i)("BABYLON.StandardMaterial",j),A.d.DefaultMaterialFactory=V=>new j("default material",V)}}]);