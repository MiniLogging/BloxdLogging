"use strict";(self.bjbkv7h3qsd=self.bjbkv7h3qsd||[]).push([[25],{11591:(G,A,j)=>{j.d(A,{e:()=>H});var u=j(11202),k=j(11526),B=j(11204),x=j(11588),s=j(11585),O=j(11599),d=j(11560);class h extends s.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class H extends O.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(G){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(G,"DetailMap",140,new h,A),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=k.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=G._dirtyCallbacks[1]}isReadyForSubMesh(G,A,j){return!this._isEnabled||!(G._areTexturesDirty&&A.texturesEnabled&&j.getCaps().standardDerivatives&&this._texture&&x.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(G,A){if(this._isEnabled){G.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const j=A.getEngine();G._areTexturesDirty&&(j.getCaps().standardDerivatives&&this._texture&&x.d.DetailTextureEnabled&&this._isEnabled?((0,d.W)(this._texture,G,"DETAIL"),G.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):G.DETAIL=!1)}else G.DETAIL=!1}bindForSubMesh(G,A){if(!this._isEnabled)return;const j=this._material.isFrozen;G.useUbo&&j&&G.isSync||this._texture&&x.d.DetailTextureEnabled&&(G.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,d.v)(this._texture,G,"detail")),A.texturesEnabled&&this._texture&&x.d.DetailTextureEnabled&&G.setTexture("detailSampler",this._texture)}hasTexture(G){return this._texture===G}getActiveTextures(G){this._texture&&G.push(this._texture)}getAnimatables(G){this._texture&&this._texture.animations&&this._texture.animations.length>0&&G.push(this._texture)}dispose(G){var A;G&&(null===(A=this._texture)||void 0===A||A.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(G){G.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,u.b)([(0,B.C)("detailTexture"),(0,B.b)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"texture",void 0),(0,u.b)([(0,B.L)()],H.prototype,"diffuseBlendLevel",void 0),(0,u.b)([(0,B.L)()],H.prototype,"roughnessBlendLevel",void 0),(0,u.b)([(0,B.L)()],H.prototype,"bumpLevel",void 0),(0,u.b)([(0,B.L)(),(0,B.b)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"normalBlendMethod",void 0),(0,u.b)([(0,B.L)(),(0,B.b)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"isEnabled",void 0)},11585:(G,A,j)=>{j.d(A,{e:()=>u});class u{constructor(G){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=G,G)for(const A in G)Object.prototype.hasOwnProperty.call(G,A)&&this._setDefaultValue(A)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let G=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||G,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const G of Object.keys(this))"_"!==G[0]&&this._keys.push(G);if(this._externalProperties)for(const G in this._externalProperties)-1===this._keys.indexOf(G)&&this._keys.push(G)}isEqual(G){if(this._keys.length!==G._keys.length)return!1;for(let A=0;A<this._keys.length;A++){const j=this._keys[A];if(this[j]!==G[j])return!1}return!0}cloneTo(G){this._keys.length!==G._keys.length&&(G._keys=this._keys.slice(0));for(let A=0;A<this._keys.length;A++){const j=this._keys[A];G[j]=this[j]}}reset(){for(const G of this._keys)this._setDefaultValue(G)}_setDefaultValue(G){var A,j,u,k;const B=(null===(A=this._externalProperties)||void 0===A||null===(j=A[G])||void 0===j?void 0:j.type)??typeof this[G],x=null===(u=this._externalProperties)||void 0===u||null===(k=u[G])||void 0===k?void 0:k.default;switch(B){case"number":this[G]=x??0;break;case"string":this[G]=x??"";break;default:this[G]=x??!1}}toString(){let G="";for(let A=0;A<this._keys.length;A++){const j=this._keys[A],u=this[j];switch(typeof u){case"number":case"string":G+="#define "+j+" "+u+"\n";break;default:u&&(G+="#define "+j+"\n")}}return G}}},11588:(G,A,j)=>{j.d(A,{d:()=>k});var u=j(11120);class k{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(G){this._DiffuseTextureEnabled!==G&&(this._DiffuseTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(G){this._BaseWeightTextureEnabled!==G&&(this._BaseWeightTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(G){this._BaseDiffuseRoughnessTextureEnabled!==G&&(this._BaseDiffuseRoughnessTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(G){this._DetailTextureEnabled!==G&&(this._DetailTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(G){this._DecalMapEnabled!==G&&(this._DecalMapEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(G){this._AmbientTextureEnabled!==G&&(this._AmbientTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(G){this._OpacityTextureEnabled!==G&&(this._OpacityTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(G){this._ReflectionTextureEnabled!==G&&(this._ReflectionTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(G){this._EmissiveTextureEnabled!==G&&(this._EmissiveTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(G){this._SpecularTextureEnabled!==G&&(this._SpecularTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(G){this._BumpTextureEnabled!==G&&(this._BumpTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(G){this._LightmapTextureEnabled!==G&&(this._LightmapTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(G){this._RefractionTextureEnabled!==G&&(this._RefractionTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(G){this._ColorGradingTextureEnabled!==G&&(this._ColorGradingTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(G){this._FresnelEnabled!==G&&(this._FresnelEnabled=G,u.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(G){this._ClearCoatTextureEnabled!==G&&(this._ClearCoatTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(G){this._ClearCoatBumpTextureEnabled!==G&&(this._ClearCoatBumpTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(G){this._ClearCoatTintTextureEnabled!==G&&(this._ClearCoatTintTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(G){this._SheenTextureEnabled!==G&&(this._SheenTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(G){this._AnisotropicTextureEnabled!==G&&(this._AnisotropicTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(G){this._ThicknessTextureEnabled!==G&&(this._ThicknessTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(G){this._RefractionIntensityTextureEnabled!==G&&(this._RefractionIntensityTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(G){this._TranslucencyIntensityTextureEnabled!==G&&(this._TranslucencyIntensityTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(G){this._TranslucencyColorTextureEnabled!==G&&(this._TranslucencyColorTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(G){this._IridescenceTextureEnabled!==G&&(this._IridescenceTextureEnabled=G,u.e.MarkAllMaterialsAsDirty(1))}}k._DiffuseTextureEnabled=!0,k._BaseWeightTextureEnabled=!0,k._BaseDiffuseRoughnessTextureEnabled=!0,k._DetailTextureEnabled=!0,k._DecalMapEnabled=!0,k._AmbientTextureEnabled=!0,k._OpacityTextureEnabled=!0,k._ReflectionTextureEnabled=!0,k._EmissiveTextureEnabled=!0,k._SpecularTextureEnabled=!0,k._BumpTextureEnabled=!0,k._LightmapTextureEnabled=!0,k._RefractionTextureEnabled=!0,k._ColorGradingTextureEnabled=!0,k._FresnelEnabled=!0,k._ClearCoatTextureEnabled=!0,k._ClearCoatBumpTextureEnabled=!0,k._ClearCoatTintTextureEnabled=!0,k._SheenTextureEnabled=!0,k._AnisotropicTextureEnabled=!0,k._ThicknessTextureEnabled=!0,k._RefractionIntensityTextureEnabled=!0,k._TranslucencyIntensityTextureEnabled=!0,k._TranslucencyColorTextureEnabled=!0,k._IridescenceTextureEnabled=!0},11606:(G,A,j)=>{j.d(A,{e:()=>B});var u,k=j(11218);!function(G){G[G.Zero=0]="Zero",G[G.One=1]="One",G[G.MaxViewZ=2]="MaxViewZ"}(u||(u={}));class B{static CreateConfiguration(G){return B._Configurations[G]={defines:{},previousWorldMatrices:{},previousViewProjection:k.Matrix.Zero(),currentViewProjection:k.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},B._Configurations[G]}static DeleteConfiguration(G){delete B._Configurations[G]}static GetConfiguration(G){return B._Configurations[G]}static AddUniformsAndSamplers(G,A){G.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(G,A){for(const j of A)if(j.ds)for(const A of j.ds)A._removeDrawWrapper(G)}static PrepareDefines(G,A,j){if(!j._arePrePassDirty)return;const u=B._Configurations[G];if(!u)return;j.PREPASS=!0,j.PREPASS_COLOR=!1,j.PREPASS_COLOR_INDEX=-1;let k=0;for(let x=0;x<B.GeometryTextureDescriptions.length;x++){const G=B.GeometryTextureDescriptions[x],A=G.define,s=G.defineIndex,O=u.defines[s];void 0!==O?(j[A]=!0,j[s]=O,k++):(j[A]=!1,delete j[s])}j.SCENE_MRT_COUNT=k,j.BONES_VELOCITY_ENABLED=A.useBones&&A.computeBonesUsingShaders&&A.skeleton&&!A.skeleton.isUsingTextureForMatrices&&-1===u.excludedSkinnedMesh.indexOf(A)}static Bind(G,A,j,u,k){const x=B._Configurations[G];if(!x)return;const s=j.gG(),O=s.getEngine();if(x.reverseCulling&&O.setStateCullFaceType(s._mirroredCameraPosition?k.cullBackFaces:!k.cullBackFaces),(void 0!==x.defines.PREPASS_VELOCITY_INDEX||void 0!==x.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(x.previousWorldMatrices[j.uniqueId]||(x.previousWorldMatrices[j.uniqueId]=u.clone()),x.previousViewProjection||(x.previousViewProjection=s.getTransformMatrix().clone(),x.currentViewProjection=s.getTransformMatrix().clone()),x.currentViewProjection.updateFlag!==s.getTransformMatrix().updateFlag?(x.lastUpdateFrameId=O.frameId,x.previousViewProjection.B(x.currentViewProjection),x.currentViewProjection.B(s.getTransformMatrix())):x.lastUpdateFrameId!==O.frameId&&(x.lastUpdateFrameId=O.frameId,x.previousViewProjection.B(x.currentViewProjection)),A.setMatrix("previousWorld",x.previousWorldMatrices[j.uniqueId]),A.setMatrix("previousViewProjection",x.previousViewProjection),x.previousWorldMatrices[j.uniqueId]=u.clone(),j.useBones&&j.computeBonesUsingShaders&&j.skeleton)){const G=j.skeleton;if(!G.isUsingTextureForMatrices||-1===A.getUniformIndex("boneTextureWidth")){const u=G.getTransformMatrices(j);u&&(x.previousBones[j.uniqueId]||(x.previousBones[j.uniqueId]=u.slice()),A.setMatrices("mPreviousBones",x.previousBones[j.uniqueId]),x.previousBones[j.uniqueId].set(u))}}}}B.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],B._Configurations={}},11599:(G,A,j)=>{j.d(A,{e:()=>t});var u=j(11202),k=j(11204),B=j(11526),x=j(11085),s=j(11106),O=j(11134);const d=new RegExp("^([gimus]+)!");class h{constructor(G){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=G,this._scene=G.gG(),this._engine=this._scene.getEngine()}_addPlugin(G){for(let u=0;u<this._plugins.length;++u)if(this._plugins[u].name===G.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!G.isCompatible(this._material.shaderLanguage))throw`The plugin "${G.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const A=G.getClassName();h._MaterialPluginClassToMainDefine[A]||(h._MaterialPluginClassToMainDefine[A]="MATERIALPLUGIN_"+ ++h._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(G,A)=>this._handlePluginEvent(G,A),this._plugins.push(G),this._plugins.sort(((G,A)=>G.priority-A.priority)),this._codeInjectionPoints={};const j={};j[h._MaterialPluginClassToMainDefine[A]]={type:"boolean",default:!0};for(const u of this._plugins)u.collectDefines(j),this._collectPointNames("vertex",u.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",u.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=j,!0}_activatePlugin(G){-1===this._activePlugins.indexOf(G)&&(this._activePlugins.push(G),this._activePlugins.sort(((G,A)=>G.priority-A.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),G.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(G),this._activePluginsForExtraEvents.sort(((G,A)=>G.priority-A.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(G){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===G)return this._plugins[A];return null}_handlePluginEventIsReadyForSubMesh(G){let A=!0;for(const j of this._activePlugins)A=A&&j.isReadyForSubMesh(G.defines,this._scene,this._engine,G.subMesh);G.isReadyForSubMesh=A}_handlePluginEventPrepareDefinesBeforeAttributes(G){for(const A of this._activePlugins)A.prepareDefinesBeforeAttributes(G.defines,this._scene,G.mesh)}_handlePluginEventPrepareDefines(G){for(const A of this._activePlugins)A.prepareDefines(G.defines,this._scene,G.mesh)}_handlePluginEventHardBindForSubMesh(G){for(const A of this._activePluginsForExtraEvents)A.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,G.subMesh)}_handlePluginEventBindForSubMesh(G){for(const A of this._activePlugins)A.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,G.subMesh)}_handlePluginEventHasRenderTargetTextures(G){let A=!1;for(const j of this._activePluginsForExtraEvents)if(A=j.hasRenderTargetTextures(),A)break;G.hasRenderTargetTextures=A}_handlePluginEventFillRenderTargetTextures(G){for(const A of this._activePluginsForExtraEvents)A.fillRenderTargetTextures(G.renderTargets)}_handlePluginEvent(G,A){switch(G){case 512:{const G=A;for(const A of this._activePlugins)A.getActiveTextures(G.activeTextures);break}case 256:{const G=A;for(const A of this._activePlugins)A.getAnimatables(G.animatables);break}case 1024:{const G=A;let j=!1;for(const A of this._activePlugins)if(j=A.hasTexture(G.texture),j)break;G.hasTexture=j;break}case 2:{const G=A;for(const A of this._plugins)A.dispose(G.forceDisposeTextures);break}case 4:A.defineNames=this._defineNamesFromPlugins;break;case 128:{const G=A;for(const A of this._activePlugins)G.fallbackRank=A.addFallbacks(G.defines,G.fallbacks,G.fallbackRank),A.getAttributes(G.attributes,this._scene,G.mesh);this._uniformList.length>0&&G.uniforms.push(...this._uniformList),this._samplerList.length>0&&G.samplers.push(...this._samplerList),this._uboList.length>0&&G.uniformBuffersNames.push(...this._uboList),G.customCode=this._injectCustomCode(G,G.customCode);break}case 8:{const G=A;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const j=1===this._material.shaderLanguage;for(const A of this._plugins){const u=A.getUniforms(this._material.shaderLanguage);if(u){if(u.ubo)for(const A of u.ubo){if(A.size&&A.type){const u=A.arraySize??0;if(G.ubo.addUniform(A.name,A.size,u),j){let G;switch(A.type){case"mat4":G="mat4x4f";break;case"float":G="f32";break;default:G=`${A.type}f`}this._uboDeclaration+=u>0?`uniform ${A.name}: array<${G}, ${u}>;\n`:`uniform ${A.name}: ${G};\n`}else this._uboDeclaration+=`${A.type} ${A.name}${u>0?`[${u}]`:""};\n`}this._uniformList.push(A.name)}u.vertex&&(this._vertexDeclaration+=u.vertex+"\n"),u.fragment&&(this._fragmentDeclaration+=u.fragment+"\n")}A.getSamplers(this._samplerList),A.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(G,A){if(A)for(const j in A)this._codeInjectionPoints[G]||(this._codeInjectionPoints[G]={}),this._codeInjectionPoints[G][j]=!0}_injectCustomCode(G,A){return(j,u)=>{var k;A&&(u=A(j,u)),this._uboDeclaration&&(u=u.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(u=u.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(u=u.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const B=null===(k=this._codeInjectionPoints)||void 0===k?void 0:k[j];if(!B)return u;let x=null;for(let A in B){let k="";for(const u of this._activePlugins){var h;let B=null===(h=u.getCustomCode(j,this._material.shaderLanguage))||void 0===h?void 0:h[A];if(B){if(u.resolveIncludes){if(null===x){const A=0;x={defines:[],indexParameters:G.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:O.e.GetShadersRepository(A),includesShadersStore:O.e.GetIncludesShadersStore(A),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}x.isFragment="fragment"===j,(0,s.g)(B,x,(G=>B=G))}k+=B+"\n"}}if(k.length>0)if("!"===A.charAt(0)){A=A.substring(1);let G="g";if("!"===A.charAt(0))G="",A=A.substring(1);else{const j=d.exec(A);j&&j.length>=2&&(G=j[1],A=A.substring(G.length+1))}G.indexOf("g")<0&&(G+="g");const j=u,B=new RegExp(A,G);let x=B.exec(j);for(;null!==x;){let G=k;for(let A=0;A<x.length;++A)G=G.replace("$"+A,x[A]);u=u.replace(x[0],G),x=B.exec(j)}}else{const G="#define "+A;u=u.replace(G,"\n"+k+"\n"+G)}}return u}}}h._MaterialPluginClassToMainDefine={},h._MaterialPluginCounter=0,x.d.OnEnginesDisposedObservable.add((()=>{U()}));const H=[];let F=!1,R=null;function U(){H.length=0,F=!1,B.b.OnEventObservable.remove(R),R=null}var S=j(11251),C=j(11181);class t{isCompatible(G){return 0===G}_enable(G){G&&this._pluginManager._activatePlugin(this)}constructor(G,A,j,u){let k=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],x=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=G,this.name=A,this.priority=j,this.resolveIncludes=x,G.pluginManager||(G.pluginManager=new h(G),G.ks.add((()=>{G.pluginManager=void 0}))),this._pluginDefineNames=u,this._pluginManager=G.pluginManager,k&&this._pluginManager._addPlugin(this),B&&this._enable(!0),this.markAllDefinesAsDirty=G._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(G,A,j,u){return!0}hardBindForSubMesh(G,A,j,u){}bindForSubMesh(G,A,j,u){}dispose(G){}getCustomCode(G){return null}collectDefines(G){if(this._pluginDefineNames)for(const A of Object.keys(this._pluginDefineNames)){if("_"===A[0])continue;const j=typeof this._pluginDefineNames[A];G[A]={type:"number"===j?"number":"string"===j?"string":"boolean"===j?"boolean":"object",default:this._pluginDefineNames[A]}}}prepareDefinesBeforeAttributes(G,A,j){}prepareDefines(G,A,j){}hasTexture(G){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(G){}getActiveTextures(G){}getAnimatables(G){}addFallbacks(G,A,j){return j}getSamplers(G){}getAttributes(G,A,j){}getUniformBuffersNames(G){}getUniforms(){return{}}copyTo(G){S.c.Clone((()=>G),this)}serialize(){return S.c.Serialize(this)}parse(G,A,j){S.c.Parse((()=>this),G,A,j)}}(0,u.b)([(0,k.L)()],t.prototype,"name",void 0),(0,u.b)([(0,k.L)()],t.prototype,"priority",void 0),(0,u.b)([(0,k.L)()],t.prototype,"resolveIncludes",void 0),(0,u.b)([(0,k.L)()],t.prototype,"registerForExtraEvents",void 0),(0,C.h)("BABYLON.MaterialPluginBase",t)},11582:(G,A,j)=>{j.d(A,{c:()=>u});class u{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(G){G.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(G){}bindForSubMesh(G,A,j,u,k){if(A.prePassRenderer&&A.prePassRenderer.enabled&&A.prePassRenderer.currentRTisSceneRT&&(-1!==A.prePassRenderer.getIndex(2)||-1!==A.prePassRenderer.getIndex(11))){this.previousWorldMatrices[j.uniqueId]||(this.previousWorldMatrices[j.uniqueId]=u.clone()),this.previousViewProjection||(this.previousViewProjection=A.getTransformMatrix().clone(),this.currentViewProjection=A.getTransformMatrix().clone());const k=A.getEngine();this.currentViewProjection.updateFlag!==A.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=k.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(A.getTransformMatrix())):this._lastUpdateFrameId!==k.frameId&&(this._lastUpdateFrameId=k.frameId,this.previousViewProjection.B(this.currentViewProjection)),G.setMatrix("previousWorld",this.previousWorldMatrices[j.uniqueId]),G.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[j.uniqueId]=u.clone()}}}},11574:(G,A,j)=>{j.d(A,{YA:()=>c});var u=j(11202),k=j(11204),B=j(11310),x=j(11458),s=j(11262),O=j(11290),d=j(11582),h=j(11462),H=j(11526),F=j(11585),R=j(11522),U=j(11196),S=j(11181),C=j(11588),t=j(11517),Y=j(11591),n=j(11566),Q=j(11560),X=j(11251),I=j(11606);const D={effect:null,subMesh:null};class g extends F.e{constructor(G){super(G),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(G){const A=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const j of A)this[j]=j===G}}class c extends R.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(G){this._attachImageProcessingConfiguration(G),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(G){G!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=G||this.gG().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(G){this.imageProcessingConfiguration.colorCurvesEnabled=G}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(G){this.imageProcessingConfiguration.colorGradingEnabled=G}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(G){this._imageProcessingConfiguration.toneMappingEnabled=G}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(G){this._imageProcessingConfiguration.exposure=G}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(G){this._imageProcessingConfiguration.contrast=G}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(G){this._imageProcessingConfiguration.colorGradingTexture=G}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(G){this._imageProcessingConfiguration.colorCurves=G}get canRenderToMRT(){return!0}constructor(G,A){super(G,A,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||c.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new s.nA(0,0,0),this.diffuseColor=new s.nA(1,1,1),this.specularColor=new s.nA(1,1,1),this.emissiveColor=new s.nA(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new B.d(16),this._globalAmbientColor=new s.nA(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Y.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new d.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),c.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),c.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(c.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(c.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"YA"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===H.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Hs&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==H.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Hs||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(G,A){let u=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const k=A._drawWrapper;if(k.effect&&this.isFrozen&&k._wasPreviouslyReady&&k._wasPreviouslyUsingInstances===u)return!0;A.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),A.materialDefines=new g(this._eventInfo.defineNames));const B=this.gG(),x=A.materialDefines;if(this._isReadyForSubMesh(A))return!0;const s=B.getEngine();x._needNormals=(0,Q.S)(B,G,x,!0,this._maxSimultaneousLights,this._disableLighting),(0,Q.$)(B,x);const H=this.needAlphaBlendingForMesh(G)&&this.gG().useOrderIndependentTransparency;if((0,Q.eb)(B,x,this.canRenderToMRT&&!H),(0,Q.ab)(B,x,H),I.e.PrepareDefines(s.currentRenderPassId,G,x),x._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,x._needUVs=!1;for(let G=1;G<=6;++G)x["MAINUV"+G]=!1;if(B.texturesEnabled){if(x.DIFFUSEDIRECTUV=0,x.BUMPDIRECTUV=0,x.AMBIENTDIRECTUV=0,x.OPACITYDIRECTUV=0,x.EMISSIVEDIRECTUV=0,x.SPECULARDIRECTUV=0,x.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&c.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._diffuseTexture,x,"DIFFUSE")}else x.DIFFUSE=!1;if(this._ambientTexture&&c.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._ambientTexture,x,"AMBIENT")}else x.AMBIENT=!1;if(this._opacityTexture&&c.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._opacityTexture,x,"OPACITY"),x.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else x.OPACITY=!1;if(this._reflectionTexture&&c.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(x._needNormals=!0,x.REFLECTION=!0,x.ROUGHNESS=this._roughness>0,x.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,x.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===U.e.INVCUBIC_MODE,x.REFLECTIONMAP_3D=this._reflectionTexture.isCube,x.REFLECTIONMAP_OPPOSITEZ=x.REFLECTIONMAP_3D&&this.gG().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,x.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case U.e.EXPLICIT_MODE:x.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case U.e.PLANAR_MODE:x.setReflectionMode("REFLECTIONMAP_PLANAR");break;case U.e.PROJECTION_MODE:x.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case U.e.SKYBOX_MODE:x.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case U.e.SPHERICAL_MODE:x.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case U.e.EQUIRECTANGULAR_MODE:x.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case U.e.FIXED_EQUIRECTANGULAR_MODE:x.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case U.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:x.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case U.e.CUBIC_MODE:case U.e.INVCUBIC_MODE:default:x.setReflectionMode("REFLECTIONMAP_CUBIC")}x.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else x.REFLECTION=!1,x.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&c.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._emissiveTexture,x,"EMISSIVE")}else x.EMISSIVE=!1;if(this._lightmapTexture&&c.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._lightmapTexture,x,"LIGHTMAP"),x.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,x.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else x.LIGHTMAP=!1;if(this._specularTexture&&c.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Q.W)(this._specularTexture,x,"SPECULAR"),x.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else x.SPECULAR=!1;if(B.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&c.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Q.W)(this._bumpTexture,x,"BUMP"),x.PARALLAX=this._useParallax,x.PARALLAX_RHS=B.useRightHandedSystem,x.PARALLAXOCCLUSION=this._useParallaxOcclusion,x.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else x.BUMP=!1,x.PARALLAX=!1,x.PARALLAX_RHS=!1,x.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&c.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;x._needUVs=!0,x.REFRACTION=!0,x.REFRACTIONMAP_3D=this._refractionTexture.isCube,x.RGBDREFRACTION=this._refractionTexture.isRGBD,x.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else x.REFRACTION=!1;x.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else x.DIFFUSE=!1,x.AMBIENT=!1,x.OPACITY=!1,x.REFLECTION=!1,x.EMISSIVE=!1,x.LIGHTMAP=!1,x.BUMP=!1,x.REFRACTION=!1;x.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),x.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,x.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,x.SPECULAROVERALPHA=this._useSpecularOverAlpha,x.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,x.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,x.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(G)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=x,this._eventInfo.subMesh=A,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(x._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(x),x.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,x.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(x._areFresnelDirty&&(c.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(x.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,x.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,x.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,x.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,x.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,x.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,x._needNormals=!0,x.FRESNEL=!0):x.FRESNEL=!1),x.AREALIGHTUSED)for(let j=0;j<G.lightSources.length;j++)if(!G.lightSources[j]._isReady())return!1;(0,Q.Z)(G,B,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(G),x,this._applyDecalMapAfterDetailMap),(0,Q.P)(B,s,this,x,u,null,A.getRenderingMesh().hasThinInstances),this._eventInfo.defines=x,this._eventInfo.mesh=G,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Q.N)(G,x,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let F=!1;if(x.isDirty){const u=x._areLightsDisposed;x.markAsProcessed();const k=new t.e;x.REFLECTION&&k.addFallback(0,"REFLECTION"),x.SPECULAR&&k.addFallback(0,"SPECULAR"),x.BUMP&&k.addFallback(0,"BUMP"),x.PARALLAX&&k.addFallback(1,"PARALLAX"),x.PARALLAX_RHS&&k.addFallback(1,"PARALLAX_RHS"),x.PARALLAXOCCLUSION&&k.addFallback(0,"PARALLAXOCCLUSION"),x.SPECULAROVERALPHA&&k.addFallback(0,"SPECULAROVERALPHA"),x.FOG&&k.addFallback(1,"FOG"),x.POINTSIZE&&k.addFallback(0,"POINTSIZE"),x.LOGARITHMICDEPTH&&k.addFallback(0,"LOGARITHMICDEPTH"),(0,Q.z)(x,k,this._maxSimultaneousLights),x.SPECULARTERM&&k.addFallback(0,"SPECULARTERM"),x.DIFFUSEFRESNEL&&k.addFallback(1,"DIFFUSEFRESNEL"),x.OPACITYFRESNEL&&k.addFallback(2,"OPACITYFRESNEL"),x.REFLECTIONFRESNEL&&k.addFallback(3,"REFLECTIONFRESNEL"),x.EMISSIVEFRESNEL&&k.addFallback(4,"EMISSIVEFRESNEL"),x.FRESNEL&&k.addFallback(4,"FRESNEL"),x.MULTIVIEW&&k.addFallback(0,"MULTIVIEW");const H=[O.h.PositionKind];x.NORMAL&&H.push(O.h.NormalKind),x.TANGENT&&H.push(O.h.TangentKind);for(let G=1;G<=6;++G)x["UV"+G]&&H.push(`uv${1===G?"":G}`);x.VERTEXCOLOR&&H.push(O.h.ColorKind),(0,Q.H)(H,G,x,k),(0,Q.I)(H,x),(0,Q.L)(H,G,x),(0,Q.D)(H,G,x);let R="default";const U=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],S=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],C=["Material","Scene","Mesh"],Y={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:x.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=k,this._eventInfo.fallbackRank=0,this._eventInfo.defines=x,this._eventInfo.uniforms=U,this._eventInfo.attributes=H,this._eventInfo.samplers=S,this._eventInfo.uniformBuffersNames=C,this._eventInfo.customCode=void 0,this._eventInfo.mesh=G,this._eventInfo.indexParameters=Y,this._callbackPluginEventGeneric(128,this._eventInfo),I.e.AddUniformsAndSamplers(U,S),d.c.AddUniforms(U),d.c.AddSamplers(S),h.c&&(h.c.PrepareUniforms(U,x),h.c.PrepareSamplers(S,x)),(0,Q.ib)({uniformsNames:U,uniformBuffersNames:C,samplers:S,defines:x,maxSimultaneousLights:this._maxSimultaneousLights}),(0,n.d)(U);const X={};this.customShaderNameResolve&&(R=this.customShaderNameResolve(R,U,C,S,x,H,X));const g=x.toString(),c=A.effect;let E=B.getEngine().createEffect(R,{attributes:H,uniformsNames:U,uniformBuffersNames:C,samplers:S,defines:g,fallbacks:k,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Y,processFinalCode:X.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:x.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([j.e(41),j.e(64)]).then(j.bind(j,13737)),Promise.all([j.e(39),j.e(65)]).then(j.bind(j,13910))]):await Promise.all([Promise.all([j.e(34),j.e(67)]).then(j.bind(j,13972)),Promise.all([j.e(33),j.e(68)]).then(j.bind(j,14154))]),this._shadersLoaded=!0}},s);if(this._eventInfo.customCode=void 0,E)if(this._onEffectCreatedObservable&&(D.effect=E,D.subMesh=A,this._onEffectCreatedObservable.notifyObservers(D)),this.allowShaderHotSwapping&&c&&!E.isReady()){if(E=c,x.markAsUnprocessed(),F=this.isFrozen,u)return x._areLightsDisposed=!0,!1}else B.resetCachedMaterial(),A.setEffect(E,x,this._materialContext)}return!(!A.effect||!A.effect.isReady())&&(x._renderId=B.getRenderId(),k._wasPreviouslyReady=!F,k._wasPreviouslyUsingInstances=u,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const G=this._uniformBuffer;G.addUniform("diffuseLeftColor",4),G.addUniform("diffuseRightColor",4),G.addUniform("opacityParts",4),G.addUniform("reflectionLeftColor",4),G.addUniform("reflectionRightColor",4),G.addUniform("refractionLeftColor",4),G.addUniform("refractionRightColor",4),G.addUniform("emissiveLeftColor",4),G.addUniform("emissiveRightColor",4),G.addUniform("vDiffuseInfos",2),G.addUniform("vAmbientInfos",2),G.addUniform("vOpacityInfos",2),G.addUniform("vReflectionInfos",2),G.addUniform("vReflectionPosition",3),G.addUniform("vReflectionSize",3),G.addUniform("vEmissiveInfos",2),G.addUniform("vLightmapInfos",2),G.addUniform("vSpecularInfos",2),G.addUniform("vBumpInfos",3),G.addUniform("diffuseMatrix",16),G.addUniform("ambientMatrix",16),G.addUniform("opacityMatrix",16),G.addUniform("reflectionMatrix",16),G.addUniform("emissiveMatrix",16),G.addUniform("lightmapMatrix",16),G.addUniform("specularMatrix",16),G.addUniform("bumpMatrix",16),G.addUniform("vTangentSpaceParams",2),G.addUniform("pointSize",1),G.addUniform("alphaCutOff",1),G.addUniform("refractionMatrix",16),G.addUniform("vRefractionInfos",4),G.addUniform("vRefractionPosition",3),G.addUniform("vRefractionSize",3),G.addUniform("vSpecularColor",4),G.addUniform("vEmissiveColor",3),G.addUniform("vDiffuseColor",4),G.addUniform("vAmbientColor",3),G.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(G,A,j){const u=this.gG(),k=j.materialDefines;if(!k)return;const B=j.effect;if(!B)return;this._activeEffect=B,A.getMeshUniformBuffer().bindToEffect(B,"Mesh"),A.transferToEffect(G),this._uniformBuffer.bindToEffect(B,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,u,A,G,this.isFrozen),I.e.Bind(u.getEngine().currentRenderPassId,this._activeEffect,A,G,this);const O=u.activeCamera;O?this._uniformBuffer.updateFloat4("cameraInfo",O.Fs,O.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=j,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),k.OBJECTSPACE_NORMALMAP&&(G.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const d=this._mustRebind(u,B,j,A.visibility);(0,Q.c)(A,B);const h=this._uniformBuffer;if(d){if(this.bindViewProjection(B),!h.useUbo||!this.isFrozen||!h.isSync||j._drawWrapper._forceRebindOnNextCall){if(c.FresnelEnabled&&k.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new s.nA(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),u.texturesEnabled){if(this._diffuseTexture&&c.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Q.v)(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&c.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Q.v)(this._ambientTexture,h,"ambient")),this._opacityTexture&&c.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Q.v)(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&c.ReflectionTextureEnabled){if(h.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),h.Rs("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const G=this._reflectionTexture;h.updateVector3("vReflectionPosition",G.boundingBoxPosition),h.updateVector3("vReflectionSize",G.boundingBoxSize)}}else h.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&c.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Q.v)(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&c.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Q.v)(this._lightmapTexture,h,"lightmap")),this._specularTexture&&c.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Q.v)(this._specularTexture,h,"specular")),this._bumpTexture&&u.getEngine().getCaps().standardDerivatives&&c.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Q.v)(this._bumpTexture,h,"bump"),u._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&c.RefractionTextureEnabled){let G=1;if(this._refractionTexture.isCube||(h.Rs("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(G=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,G,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const G=this._refractionTexture;h.updateVector3("vRefractionPosition",G.boundingBoxPosition),h.updateVector3("vRefractionSize",G.boundingBoxSize)}}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",c.EmissiveTextureEnabled?this.emissiveColor:s.nA.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),u.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}u.texturesEnabled&&(this._diffuseTexture&&c.DiffuseTextureEnabled&&B.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&c.AmbientTextureEnabled&&B.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&c.OpacityTextureEnabled&&B.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&c.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?B.setTexture("reflectionCubeSampler",this._reflectionTexture):B.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&c.EmissiveTextureEnabled&&B.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&c.LightmapTextureEnabled&&B.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&c.SpecularTextureEnabled&&B.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&u.getEngine().getCaps().standardDerivatives&&c.BumpTextureEnabled&&B.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&c.RefractionTextureEnabled&&(this._refractionTexture.isCube?B.setTexture("refractionCubeSampler",this._refractionTexture):B.setTexture("refraction2DSampler",this._refractionTexture))),this.gG().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(A)&&this.gG().depthPeelingRenderer.bind(B),this._eventInfo.subMesh=j,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,n.g)(B,this,u),this.bindEyePosition(B)}else u.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(d||!this.isFrozen){var H;if(u.lightsEnabled&&!this._disableLighting&&(0,Q.j)(u,A,B,k,this._maxSimultaneousLights),(u.fogEnabled&&A.applyFog&&u.fogMode!==x.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||A.receiveShadows||k.PREPASS)&&this.bindView(B),(0,Q.f)(u,A,B),k.NUM_MORPH_INFLUENCERS&&(0,Q.r)(A,B),k.BAKED_VERTEX_ANIMATION_TEXTURE)null===(H=A.bakedVertexAnimationManager)||void 0===H||H.bind(B,k.INSTANCES);this.useLogarithmicDepth&&(0,Q.n)(k,B,u),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(A,this._activeEffect,j),h.update()}getAnimatables(){const G=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&G.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&G.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&G.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&G.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&G.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&G.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&G.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&G.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&G.push(this._refractionTexture),G}getActiveTextures(){const G=super.getActiveTextures();return this._diffuseTexture&&G.push(this._diffuseTexture),this._ambientTexture&&G.push(this._ambientTexture),this._opacityTexture&&G.push(this._opacityTexture),this._reflectionTexture&&G.push(this._reflectionTexture),this._emissiveTexture&&G.push(this._emissiveTexture),this._specularTexture&&G.push(this._specularTexture),this._bumpTexture&&G.push(this._bumpTexture),this._lightmapTexture&&G.push(this._lightmapTexture),this._refractionTexture&&G.push(this._refractionTexture),G}hasTexture(G){return!!super.hasTexture(G)||(this._diffuseTexture===G||(this._ambientTexture===G||(this._opacityTexture===G||(this._reflectionTexture===G||(this._emissiveTexture===G||(this._specularTexture===G||(this._bumpTexture===G||(this._lightmapTexture===G||this._refractionTexture===G))))))))}dispose(G,A){var j,u,k,B,x,s,O,d,h;A&&(null===(j=this._diffuseTexture)||void 0===j||j.dispose(),null===(u=this._ambientTexture)||void 0===u||u.dispose(),null===(k=this._opacityTexture)||void 0===k||k.dispose(),null===(B=this._reflectionTexture)||void 0===B||B.dispose(),null===(x=this._emissiveTexture)||void 0===x||x.dispose(),null===(s=this._specularTexture)||void 0===s||s.dispose(),null===(O=this._bumpTexture)||void 0===O||O.dispose(),null===(d=this._lightmapTexture)||void 0===d||d.dispose(),null===(h=this._refractionTexture)||void 0===h||h.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(G,A)}clone(G){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],j=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const u=X.c.Clone((()=>new c(G,this.gG())),this,{cloneTexturesOnlyOnce:A});return u.name=G,u.id=G,this.stencil.copyTo(u.stencil),this._clonePlugins(u,j),u}static Parse(G,A,j){const u=X.c.Parse((()=>new c(G.name,A)),G,A,j);return G.stencil&&u.stencil.parse(G.stencil,A,j),H.b._ParsePlugins(G,u,A,j),u}static get DiffuseTextureEnabled(){return C.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(G){C.d.DiffuseTextureEnabled=G}static get DetailTextureEnabled(){return C.d.DetailTextureEnabled}static set DetailTextureEnabled(G){C.d.DetailTextureEnabled=G}static get AmbientTextureEnabled(){return C.d.AmbientTextureEnabled}static set AmbientTextureEnabled(G){C.d.AmbientTextureEnabled=G}static get OpacityTextureEnabled(){return C.d.OpacityTextureEnabled}static set OpacityTextureEnabled(G){C.d.OpacityTextureEnabled=G}static get ReflectionTextureEnabled(){return C.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(G){C.d.ReflectionTextureEnabled=G}static get EmissiveTextureEnabled(){return C.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(G){C.d.EmissiveTextureEnabled=G}static get SpecularTextureEnabled(){return C.d.SpecularTextureEnabled}static set SpecularTextureEnabled(G){C.d.SpecularTextureEnabled=G}static get BumpTextureEnabled(){return C.d.BumpTextureEnabled}static set BumpTextureEnabled(G){C.d.BumpTextureEnabled=G}static get LightmapTextureEnabled(){return C.d.LightmapTextureEnabled}static set LightmapTextureEnabled(G){C.d.LightmapTextureEnabled=G}static get RefractionTextureEnabled(){return C.d.RefractionTextureEnabled}static set RefractionTextureEnabled(G){C.d.RefractionTextureEnabled=G}static get ColorGradingTextureEnabled(){return C.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(G){C.d.ColorGradingTextureEnabled=G}static get FresnelEnabled(){return C.d.FresnelEnabled}static set FresnelEnabled(G){C.d.FresnelEnabled=G}}c.ForceGLSL=!1,(0,u.b)([(0,k.C)("diffuseTexture")],c.prototype,"_diffuseTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],c.prototype,"diffuseTexture",void 0),(0,u.b)([(0,k.C)("ambientTexture")],c.prototype,"_ambientTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"ambientTexture",void 0),(0,u.b)([(0,k.C)("opacityTexture")],c.prototype,"_opacityTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],c.prototype,"opacityTexture",void 0),(0,u.b)([(0,k.C)("reflectionTexture")],c.prototype,"_reflectionTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"reflectionTexture",void 0),(0,u.b)([(0,k.C)("emissiveTexture")],c.prototype,"_emissiveTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"emissiveTexture",void 0),(0,u.b)([(0,k.C)("specularTexture")],c.prototype,"_specularTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"specularTexture",void 0),(0,u.b)([(0,k.C)("bumpTexture")],c.prototype,"_bumpTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"bumpTexture",void 0),(0,u.b)([(0,k.C)("lightmapTexture")],c.prototype,"_lightmapTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"lightmapTexture",void 0),(0,u.b)([(0,k.C)("refractionTexture")],c.prototype,"_refractionTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"refractionTexture",void 0),(0,u.b)([(0,k.l)("ambient")],c.prototype,"ambientColor",void 0),(0,u.b)([(0,k.l)("diffuse")],c.prototype,"diffuseColor",void 0),(0,u.b)([(0,k.l)("specular")],c.prototype,"specularColor",void 0),(0,u.b)([(0,k.l)("emissive")],c.prototype,"emissiveColor",void 0),(0,u.b)([(0,k.L)()],c.prototype,"specularPower",void 0),(0,u.b)([(0,k.L)("useAlphaFromDiffuseTexture")],c.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],c.prototype,"useAlphaFromDiffuseTexture",void 0),(0,u.b)([(0,k.L)("useEmissiveAsIllumination")],c.prototype,"_useEmissiveAsIllumination",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useEmissiveAsIllumination",void 0),(0,u.b)([(0,k.L)("linkEmissiveWithDiffuse")],c.prototype,"_linkEmissiveWithDiffuse",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"linkEmissiveWithDiffuse",void 0),(0,u.b)([(0,k.L)("useSpecularOverAlpha")],c.prototype,"_useSpecularOverAlpha",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useSpecularOverAlpha",void 0),(0,u.b)([(0,k.L)("useReflectionOverAlpha")],c.prototype,"_useReflectionOverAlpha",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useReflectionOverAlpha",void 0),(0,u.b)([(0,k.L)("disableLighting")],c.prototype,"_disableLighting",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsLightsDirty")],c.prototype,"disableLighting",void 0),(0,u.b)([(0,k.L)("useObjectSpaceNormalMap")],c.prototype,"_useObjectSpaceNormalMap",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useObjectSpaceNormalMap",void 0),(0,u.b)([(0,k.L)("useParallax")],c.prototype,"_useParallax",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useParallax",void 0),(0,u.b)([(0,k.L)("useParallaxOcclusion")],c.prototype,"_useParallaxOcclusion",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useParallaxOcclusion",void 0),(0,u.b)([(0,k.L)()],c.prototype,"parallaxScaleBias",void 0),(0,u.b)([(0,k.L)("roughness")],c.prototype,"_roughness",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"roughness",void 0),(0,u.b)([(0,k.L)()],c.prototype,"indexOfRefraction",void 0),(0,u.b)([(0,k.L)()],c.prototype,"invertRefractionY",void 0),(0,u.b)([(0,k.L)()],c.prototype,"alphaCutOff",void 0),(0,u.b)([(0,k.L)("useLightmapAsShadowmap")],c.prototype,"_useLightmapAsShadowmap",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useLightmapAsShadowmap",void 0),(0,u.b)([(0,k.s)("diffuseFresnelParameters")],c.prototype,"_diffuseFresnelParameters",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelDirty")],c.prototype,"diffuseFresnelParameters",void 0),(0,u.b)([(0,k.s)("opacityFresnelParameters")],c.prototype,"_opacityFresnelParameters",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],c.prototype,"opacityFresnelParameters",void 0),(0,u.b)([(0,k.s)("reflectionFresnelParameters")],c.prototype,"_reflectionFresnelParameters",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelDirty")],c.prototype,"reflectionFresnelParameters",void 0),(0,u.b)([(0,k.s)("refractionFresnelParameters")],c.prototype,"_refractionFresnelParameters",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelDirty")],c.prototype,"refractionFresnelParameters",void 0),(0,u.b)([(0,k.s)("emissiveFresnelParameters")],c.prototype,"_emissiveFresnelParameters",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelDirty")],c.prototype,"emissiveFresnelParameters",void 0),(0,u.b)([(0,k.L)("useReflectionFresnelFromSpecular")],c.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsFresnelDirty")],c.prototype,"useReflectionFresnelFromSpecular",void 0),(0,u.b)([(0,k.L)("useGlossinessFromSpecularMapAlpha")],c.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,u.b)([(0,k.L)("maxSimultaneousLights")],c.prototype,"_maxSimultaneousLights",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsLightsDirty")],c.prototype,"maxSimultaneousLights",void 0),(0,u.b)([(0,k.L)("invertNormalMapX")],c.prototype,"_invertNormalMapX",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"invertNormalMapX",void 0),(0,u.b)([(0,k.L)("invertNormalMapY")],c.prototype,"_invertNormalMapY",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"invertNormalMapY",void 0),(0,u.b)([(0,k.L)("twoSidedLighting")],c.prototype,"_twoSidedLighting",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"twoSidedLighting",void 0),(0,u.b)([(0,k.L)("applyDecalMapAfterDetailMap")],c.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,u.b)([(0,k.b)("_markAllSubMeshesAsMiscDirty")],c.prototype,"applyDecalMapAfterDetailMap",void 0),(0,S.h)("BABYLON.StandardMaterial",c),x.b.DefaultMaterialFactory=G=>new c("default material",G)}}]);