"use strict";(self.mo7o6813fhb=self.mo7o6813fhb||[]).push([[25],{12811:(t,U,y)=>{y.d(U,{b:()=>L});var I=y(12366),r=y(12741),Y=y(12375),mt=y(12804),X=y(12800),P=y(12814),G=y(12785);class M extends X.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class L extends P.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(t){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(t,"DetailMap",140,new M,U),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=r.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=t._dirtyCallbacks[1]}isReadyForSubMesh(t,U,y){return!this._isEnabled||!(t._areTexturesDirty&&U.texturesEnabled&&y.getCaps().standardDerivatives&&this._texture&&mt.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(t,U){if(this._isEnabled){t.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const y=U.getEngine();t._areTexturesDirty&&(y.getCaps().standardDerivatives&&this._texture&&mt.d.DetailTextureEnabled&&this._isEnabled?((0,G.Q)(this._texture,t,"DETAIL"),t.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):t.DETAIL=!1)}else t.DETAIL=!1}bindForSubMesh(t,U){if(!this._isEnabled)return;const y=this._material.isFrozen;t.useUbo&&y&&t.isSync||this._texture&&mt.d.DetailTextureEnabled&&(t.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,G.o)(this._texture,t,"detail")),U.texturesEnabled&&this._texture&&mt.d.DetailTextureEnabled&&t.setTexture("detailSampler",this._texture)}hasTexture(t){return this._texture===t}getActiveTextures(t){this._texture&&t.push(this._texture)}getAnimatables(t){this._texture&&this._texture.animations&&this._texture.animations.length>0&&t.push(this._texture)}dispose(t){var U;t&&(null===(U=this._texture)||void 0===U||U.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(t){t.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,I.b)([(0,Y.B)("detailTexture"),(0,Y.d)("_markAllSubMeshesAsTexturesDirty")],L.prototype,"texture",void 0),(0,I.b)([(0,Y.I)()],L.prototype,"diffuseBlendLevel",void 0),(0,I.b)([(0,Y.I)()],L.prototype,"roughnessBlendLevel",void 0),(0,I.b)([(0,Y.I)()],L.prototype,"bumpLevel",void 0),(0,I.b)([(0,Y.I)(),(0,Y.d)("_markAllSubMeshesAsTexturesDirty")],L.prototype,"normalBlendMethod",void 0),(0,I.b)([(0,Y.I)(),(0,Y.d)("_markAllSubMeshesAsTexturesDirty")],L.prototype,"isEnabled",void 0)},12800:(t,U,y)=>{y.d(U,{e:()=>I});class I{constructor(t){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=t,t)for(const U in t)Object.prototype.hasOwnProperty.call(t,U)&&this._setDefaultValue(U)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||t,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const t of Object.keys(this))"_"!==t[0]&&this._keys.push(t);if(this._externalProperties)for(const t in this._externalProperties)-1===this._keys.indexOf(t)&&this._keys.push(t)}isEqual(t){if(this._keys.length!==t._keys.length)return!1;for(let U=0;U<this._keys.length;U++){const y=this._keys[U];if(this[y]!==t[y])return!1}return!0}cloneTo(t){this._keys.length!==t._keys.length&&(t._keys=this._keys.slice(0));for(let U=0;U<this._keys.length;U++){const y=this._keys[U];t[y]=this[y]}}reset(){for(const t of this._keys)this._setDefaultValue(t)}_setDefaultValue(t){var U,y,I,r;const Y=(null===(U=this._externalProperties)||void 0===U||null===(y=U[t])||void 0===y?void 0:y.type)??typeof this[t],mt=null===(I=this._externalProperties)||void 0===I||null===(r=I[t])||void 0===r?void 0:r.default;switch(Y){case"number":this[t]=mt??0;break;case"string":this[t]=mt??"";break;default:this[t]=mt??!1}}toString(){let t="";for(let U=0;U<this._keys.length;U++){const y=this._keys[U],I=this[y];switch(typeof I){case"number":case"string":t+="#define "+y+" "+I+"\n";break;default:I&&(t+="#define "+y+"\n")}}return t}}},12804:(t,U,y)=>{y.d(U,{d:()=>r});var I=y(12285);class r{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(t){this._DiffuseTextureEnabled!==t&&(this._DiffuseTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(t){this._BaseWeightTextureEnabled!==t&&(this._BaseWeightTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(t){this._BaseDiffuseRoughnessTextureEnabled!==t&&(this._BaseDiffuseRoughnessTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(t){this._DetailTextureEnabled!==t&&(this._DetailTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(t){this._DecalMapEnabled!==t&&(this._DecalMapEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(t){this._AmbientTextureEnabled!==t&&(this._AmbientTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(t){this._OpacityTextureEnabled!==t&&(this._OpacityTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(t){this._ReflectionTextureEnabled!==t&&(this._ReflectionTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(t){this._EmissiveTextureEnabled!==t&&(this._EmissiveTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(t){this._SpecularTextureEnabled!==t&&(this._SpecularTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(t){this._BumpTextureEnabled!==t&&(this._BumpTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(t){this._LightmapTextureEnabled!==t&&(this._LightmapTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(t){this._RefractionTextureEnabled!==t&&(this._RefractionTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(t){this._ColorGradingTextureEnabled!==t&&(this._ColorGradingTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(t){this._FresnelEnabled!==t&&(this._FresnelEnabled=t,I.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(t){this._ClearCoatTextureEnabled!==t&&(this._ClearCoatTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(t){this._ClearCoatBumpTextureEnabled!==t&&(this._ClearCoatBumpTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(t){this._ClearCoatTintTextureEnabled!==t&&(this._ClearCoatTintTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(t){this._SheenTextureEnabled!==t&&(this._SheenTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(t){this._AnisotropicTextureEnabled!==t&&(this._AnisotropicTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(t){this._ThicknessTextureEnabled!==t&&(this._ThicknessTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(t){this._RefractionIntensityTextureEnabled!==t&&(this._RefractionIntensityTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(t){this._TranslucencyIntensityTextureEnabled!==t&&(this._TranslucencyIntensityTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(t){this._TranslucencyColorTextureEnabled!==t&&(this._TranslucencyColorTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(t){this._IridescenceTextureEnabled!==t&&(this._IridescenceTextureEnabled=t,I.e.MarkAllMaterialsAsDirty(1))}}r._DiffuseTextureEnabled=!0,r._BaseWeightTextureEnabled=!0,r._BaseDiffuseRoughnessTextureEnabled=!0,r._DetailTextureEnabled=!0,r._DecalMapEnabled=!0,r._AmbientTextureEnabled=!0,r._OpacityTextureEnabled=!0,r._ReflectionTextureEnabled=!0,r._EmissiveTextureEnabled=!0,r._SpecularTextureEnabled=!0,r._BumpTextureEnabled=!0,r._LightmapTextureEnabled=!0,r._RefractionTextureEnabled=!0,r._ColorGradingTextureEnabled=!0,r._FresnelEnabled=!0,r._ClearCoatTextureEnabled=!0,r._ClearCoatBumpTextureEnabled=!0,r._ClearCoatTintTextureEnabled=!0,r._SheenTextureEnabled=!0,r._AnisotropicTextureEnabled=!0,r._ThicknessTextureEnabled=!0,r._RefractionIntensityTextureEnabled=!0,r._TranslucencyIntensityTextureEnabled=!0,r._TranslucencyColorTextureEnabled=!0,r._IridescenceTextureEnabled=!0},12816:(t,U,y)=>{y.d(U,{c:()=>Y});var I,r=y(12386);!function(t){t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.MaxViewZ=2]="MaxViewZ"}(I||(I={}));class Y{static CreateConfiguration(t){return Y._Configurations[t]={defines:{},previousWorldMatrices:{},previousViewProjection:r.Matrix.Zero(),currentViewProjection:r.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},Y._Configurations[t]}static DeleteConfiguration(t){delete Y._Configurations[t]}static GetConfiguration(t){return Y._Configurations[t]}static AddUniformsAndSamplers(t,U){t.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(t,U){for(const y of U)if(y.BX)for(const U of y.BX)U._removeDrawWrapper(t)}static PrepareDefines(t,U,y){if(!y._arePrePassDirty)return;const I=Y._Configurations[t];if(!I)return;y.PREPASS=!0,y.PREPASS_COLOR=!1,y.PREPASS_COLOR_INDEX=-1;let r=0;for(let mt=0;mt<Y.GeometryTextureDescriptions.length;mt++){const t=Y.GeometryTextureDescriptions[mt],U=t.define,X=t.defineIndex,P=I.defines[X];void 0!==P?(y[U]=!0,y[X]=P,r++):(y[U]=!1,delete y[X])}y.SCENE_MRT_COUNT=r,y.BONES_VELOCITY_ENABLED=U.useBones&&U.computeBonesUsingShaders&&U.skeleton&&!U.skeleton.isUsingTextureForMatrices&&-1===I.excludedSkinnedMesh.indexOf(U)}static Bind(t,U,y,I,r){const mt=Y._Configurations[t];if(!mt)return;const X=y.St(),P=X.getEngine();if(mt.reverseCulling&&P.setStateCullFaceType(X._mirroredCameraPosition?r.cullBackFaces:!r.cullBackFaces),(void 0!==mt.defines.PREPASS_VELOCITY_INDEX||void 0!==mt.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(mt.previousWorldMatrices[y.uniqueId]||(mt.previousWorldMatrices[y.uniqueId]=I.clone()),mt.previousViewProjection||(mt.previousViewProjection=X.getTransformMatrix().clone(),mt.currentViewProjection=X.getTransformMatrix().clone()),mt.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(mt.lastUpdateFrameId=P.frameId,mt.previousViewProjection.Y(mt.currentViewProjection),mt.currentViewProjection.Y(X.getTransformMatrix())):mt.lastUpdateFrameId!==P.frameId&&(mt.lastUpdateFrameId=P.frameId,mt.previousViewProjection.Y(mt.currentViewProjection)),U.setMatrix("previousWorld",mt.previousWorldMatrices[y.uniqueId]),U.setMatrix("previousViewProjection",mt.previousViewProjection),mt.previousWorldMatrices[y.uniqueId]=I.clone(),y.useBones&&y.computeBonesUsingShaders&&y.skeleton)){const t=y.skeleton;if(!t.isUsingTextureForMatrices||-1===U.getUniformIndex("boneTextureWidth")){const I=t.getTransformMatrices(y);I&&(mt.previousBones[y.uniqueId]||(mt.previousBones[y.uniqueId]=I.slice()),U.setMatrices("mPreviousBones",mt.previousBones[y.uniqueId]),mt.previousBones[y.uniqueId].set(I))}}}}Y.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],Y._Configurations={}},12814:(t,U,y)=>{y.d(U,{b:()=>D});var I=y(12366),r=y(12375),Y=y(12741),mt=y(12250),X=y(12266),P=y(12296);const G=new RegExp("^([gimus]+)!");class M{constructor(t){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=t,this._scene=t.St(),this._engine=this._scene.getEngine()}_addPlugin(t){for(let I=0;I<this._plugins.length;++I)if(this._plugins[I].name===t.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!t.isCompatible(this._material.shaderLanguage))throw`The plugin "${t.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const U=t.getClassName();M._MaterialPluginClassToMainDefine[U]||(M._MaterialPluginClassToMainDefine[U]="MATERIALPLUGIN_"+ ++M._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(t,U)=>this._handlePluginEvent(t,U),this._plugins.push(t),this._plugins.sort(((t,U)=>t.priority-U.priority)),this._codeInjectionPoints={};const y={};y[M._MaterialPluginClassToMainDefine[U]]={type:"boolean",default:!0};for(const I of this._plugins)I.collectDefines(y),this._collectPointNames("vertex",I.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",I.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=y,!0}_activatePlugin(t){-1===this._activePlugins.indexOf(t)&&(this._activePlugins.push(t),this._activePlugins.sort(((t,U)=>t.priority-U.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),t.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(t),this._activePluginsForExtraEvents.sort(((t,U)=>t.priority-U.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(t){for(let U=0;U<this._plugins.length;++U)if(this._plugins[U].name===t)return this._plugins[U];return null}_handlePluginEventIsReadyForSubMesh(t){let U=!0;for(const y of this._activePlugins)U=U&&y.isReadyForSubMesh(t.defines,this._scene,this._engine,t.subMesh);t.isReadyForSubMesh=U}_handlePluginEventPrepareDefinesBeforeAttributes(t){for(const U of this._activePlugins)U.prepareDefinesBeforeAttributes(t.defines,this._scene,t.mesh)}_handlePluginEventPrepareDefines(t){for(const U of this._activePlugins)U.prepareDefines(t.defines,this._scene,t.mesh)}_handlePluginEventHardBindForSubMesh(t){for(const U of this._activePluginsForExtraEvents)U.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,t.subMesh)}_handlePluginEventBindForSubMesh(t){for(const U of this._activePlugins)U.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,t.subMesh)}_handlePluginEventHasRenderTargetTextures(t){let U=!1;for(const y of this._activePluginsForExtraEvents)if(U=y.hasRenderTargetTextures(),U)break;t.hasRenderTargetTextures=U}_handlePluginEventFillRenderTargetTextures(t){for(const U of this._activePluginsForExtraEvents)U.fillRenderTargetTextures(t.renderTargets)}_handlePluginEvent(t,U){switch(t){case 512:{const t=U;for(const U of this._activePlugins)U.getActiveTextures(t.activeTextures);break}case 256:{const t=U;for(const U of this._activePlugins)U.getAnimatables(t.animatables);break}case 1024:{const t=U;let y=!1;for(const U of this._activePlugins)if(y=U.hasTexture(t.texture),y)break;t.hasTexture=y;break}case 2:{const t=U;for(const U of this._plugins)U.dispose(t.forceDisposeTextures);break}case 4:U.defineNames=this._defineNamesFromPlugins;break;case 128:{const t=U;for(const U of this._activePlugins)t.fallbackRank=U.addFallbacks(t.defines,t.fallbacks,t.fallbackRank),U.getAttributes(t.attributes,this._scene,t.mesh);this._uniformList.length>0&&t.uniforms.push(...this._uniformList),this._samplerList.length>0&&t.samplers.push(...this._samplerList),this._uboList.length>0&&t.uniformBuffersNames.push(...this._uboList),t.customCode=this._injectCustomCode(t,t.customCode);break}case 8:{const t=U;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const y=1===this._material.shaderLanguage;for(const U of this._plugins){const I=U.getUniforms(this._material.shaderLanguage);if(I){if(I.ubo)for(const U of I.ubo){if(U.size&&U.type){const I=U.arraySize??0;if(t.ubo.addUniform(U.name,U.size,I),y){let t;switch(U.type){case"mat4":t="mat4x4f";break;case"float":t="f32";break;default:t=`${U.type}f`}this._uboDeclaration+=I>0?`uniform ${U.name}: array<${t}, ${I}>;\n`:`uniform ${U.name}: ${t};\n`}else this._uboDeclaration+=`${U.type} ${U.name}${I>0?`[${I}]`:""};\n`}this._uniformList.push(U.name)}I.vertex&&(this._vertexDeclaration+=I.vertex+"\n"),I.fragment&&(this._fragmentDeclaration+=I.fragment+"\n")}U.getSamplers(this._samplerList),U.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(t,U){if(U)for(const y in U)this._codeInjectionPoints[t]||(this._codeInjectionPoints[t]={}),this._codeInjectionPoints[t][y]=!0}_injectCustomCode(t,U){return(y,I)=>{var r;U&&(I=U(y,I)),this._uboDeclaration&&(I=I.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(I=I.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(I=I.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const Y=null===(r=this._codeInjectionPoints)||void 0===r?void 0:r[y];if(!Y)return I;let mt=null;for(let U in Y){let r="";for(const I of this._activePlugins){var M;let Y=null===(M=I.getCustomCode(y,this._material.shaderLanguage))||void 0===M?void 0:M[U];if(Y){if(I.resolveIncludes){if(null===mt){const U=0;mt={defines:[],indexParameters:t.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:P.e.GetShadersRepository(U),includesShadersStore:P.e.GetIncludesShadersStore(U),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,LX:this._engine.LX,processCodeAfterIncludes:void 0}}mt.isFragment="fragment"===y,(0,X.k)(Y,mt,(t=>Y=t))}r+=Y+"\n"}}if(r.length>0)if("!"===U.charAt(0)){U=U.substring(1);let t="g";if("!"===U.charAt(0))t="",U=U.substring(1);else{const y=G.exec(U);y&&y.length>=2&&(t=y[1],U=U.substring(t.length+1))}t.indexOf("g")<0&&(t+="g");const y=I,Y=new RegExp(U,t);let mt=Y.exec(y);for(;null!==mt;){let t=r;for(let U=0;U<mt.length;++U)t=t.replace("$"+U,mt[U]);I=I.replace(mt[0],t),mt=Y.exec(y)}}else{const t="#define "+U;I=I.replace(t,"\n"+r+"\n"+t)}}return I}}}M._MaterialPluginClassToMainDefine={},M._MaterialPluginCounter=0,mt.d.OnEnginesDisposedObservable.add((()=>{F()}));const L=[];let h=!1,Q=null;function F(){L.length=0,h=!1,Y.e.OnEventObservable.remove(Q),Q=null}var E=y(12426),w=y(12338);class D{isCompatible(t){return 0===t}_enable(t){t&&this._pluginManager._activatePlugin(this)}constructor(t,U,y,I){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],mt=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=t,this.name=U,this.priority=y,this.resolveIncludes=mt,t.pluginManager||(t.pluginManager=new M(t),t.FX.add((()=>{t.pluginManager=void 0}))),this._pluginDefineNames=I,this._pluginManager=t.pluginManager,r&&this._pluginManager._addPlugin(this),Y&&this._enable(!0),this.markAllDefinesAsDirty=t._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(t,U,y,I){return!0}hardBindForSubMesh(t,U,y,I){}bindForSubMesh(t,U,y,I){}dispose(t){}getCustomCode(t){return null}collectDefines(t){if(this._pluginDefineNames)for(const U of Object.keys(this._pluginDefineNames)){if("_"===U[0])continue;const y=typeof this._pluginDefineNames[U];t[U]={type:"number"===y?"number":"string"===y?"string":"boolean"===y?"boolean":"object",default:this._pluginDefineNames[U]}}}prepareDefinesBeforeAttributes(t,U,y){}prepareDefines(t,U,y){}hasTexture(t){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(t){}getActiveTextures(t){}getAnimatables(t){}addFallbacks(t,U,y){return y}getSamplers(t){}getAttributes(t,U,y){}getUniformBuffersNames(t){}getUniforms(){return{}}copyTo(t){E.b.Clone((()=>t),this)}serialize(){return E.b.Serialize(this)}parse(t,U,y){E.b.Parse((()=>this),t,U,y)}}(0,I.b)([(0,r.I)()],D.prototype,"name",void 0),(0,I.b)([(0,r.I)()],D.prototype,"priority",void 0),(0,I.b)([(0,r.I)()],D.prototype,"resolveIncludes",void 0),(0,I.b)([(0,r.I)()],D.prototype,"registerForExtraEvents",void 0),(0,w.f)("BABYLON.MaterialPluginBase",D)},12798:(t,U,y)=>{y.d(U,{b:()=>I});class I{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(t){t.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(t){}bindForSubMesh(t,U,y,I,r){if(U.prePassRenderer&&U.prePassRenderer.enabled&&U.prePassRenderer.currentRTisSceneRT&&(-1!==U.prePassRenderer.getIndex(2)||-1!==U.prePassRenderer.getIndex(11))){this.previousWorldMatrices[y.uniqueId]||(this.previousWorldMatrices[y.uniqueId]=I.clone()),this.previousViewProjection||(this.previousViewProjection=U.getTransformMatrix().clone(),this.currentViewProjection=U.getTransformMatrix().clone());const r=U.getEngine();this.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.Y(this.currentViewProjection),this.currentViewProjection.Y(U.getTransformMatrix())):this._lastUpdateFrameId!==r.frameId&&(this._lastUpdateFrameId=r.frameId,this.previousViewProjection.Y(this.currentViewProjection)),t.setMatrix("previousWorld",this.previousWorldMatrices[y.uniqueId]),t.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[y.uniqueId]=I.clone()}}}},12794:(t,U,y)=>{y.d(U,{BU:()=>S});var I=y(12366),r=y(12375),Y=y(12496),mt=y(12653),X=y(12442),P=y(12480),G=y(12798),M=y(12662),L=y(12741),h=y(12800),Q=y(12737),F=y(12361),E=y(12338),w=y(12804),D=y(12731),l=y(12811),g=y(12788),B=y(12785),b=y(12426),p=y(12816);const c={effect:null,subMesh:null};class f extends h.e{constructor(t){super(t),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(t){const U=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const y of U)this[y]=y===t}}class S extends Q.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(t){this._attachImageProcessingConfiguration(t),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(t){t!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=t||this.St().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(t){this.imageProcessingConfiguration.colorCurvesEnabled=t}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(t){this.imageProcessingConfiguration.colorGradingEnabled=t}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(t){this._imageProcessingConfiguration.toneMappingEnabled=t}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(t){this._imageProcessingConfiguration.exposure=t}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(t){this._imageProcessingConfiguration.contrast=t}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(t){this._imageProcessingConfiguration.colorGradingTexture=t}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(t){this._imageProcessingConfiguration.colorCurves=t}get canRenderToMRT(){return!0}constructor(t,U){super(t,U,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||S.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new X.bU(0,0,0),this.diffuseColor=new X.bU(1,1,1),this.specularColor=new X.bU(1,1,1),this.emissiveColor=new X.bU(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new Y.e(16),this._globalAmbientColor=new X.bU(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new l.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new G.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"BU"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===L.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.pX&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==L.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.pX||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(t,U){let I=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const r=U._drawWrapper;if(r.effect&&this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===I)return!0;U.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),U.materialDefines=new f(this._eventInfo.defineNames));const Y=this.St(),mt=U.materialDefines;if(this._isReadyForSubMesh(U))return!0;const X=Y.getEngine();mt._needNormals=(0,B.N)(Y,t,mt,!0,this._maxSimultaneousLights,this._disableLighting),(0,B.T)(Y,mt);const L=this.needAlphaBlendingForMesh(t)&&this.St().useOrderIndependentTransparency;if((0,B.Y)(Y,mt,this.canRenderToMRT&&!L),(0,B.W)(Y,mt,L),p.c.PrepareDefines(X.currentRenderPassId,t,mt),mt._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,mt._needUVs=!1;for(let t=1;t<=6;++t)mt["MAINUV"+t]=!1;if(Y.texturesEnabled){if(mt.DIFFUSEDIRECTUV=0,mt.BUMPDIRECTUV=0,mt.AMBIENTDIRECTUV=0,mt.OPACITYDIRECTUV=0,mt.EMISSIVEDIRECTUV=0,mt.SPECULARDIRECTUV=0,mt.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&S.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._diffuseTexture,mt,"DIFFUSE")}else mt.DIFFUSE=!1;if(this._ambientTexture&&S.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._ambientTexture,mt,"AMBIENT")}else mt.AMBIENT=!1;if(this._opacityTexture&&S.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._opacityTexture,mt,"OPACITY"),mt.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else mt.OPACITY=!1;if(this._reflectionTexture&&S.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(mt._needNormals=!0,mt.REFLECTION=!0,mt.ROUGHNESS=this._roughness>0,mt.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,mt.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===F.d.INVCUBIC_MODE,mt.REFLECTIONMAP_3D=this._reflectionTexture.isCube,mt.REFLECTIONMAP_OPPOSITEZ=mt.REFLECTIONMAP_3D&&this.St().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,mt.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case F.d.EXPLICIT_MODE:mt.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case F.d.PLANAR_MODE:mt.setReflectionMode("REFLECTIONMAP_PLANAR");break;case F.d.PROJECTION_MODE:mt.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case F.d.SKYBOX_MODE:mt.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case F.d.SPHERICAL_MODE:mt.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case F.d.EQUIRECTANGULAR_MODE:mt.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case F.d.FIXED_EQUIRECTANGULAR_MODE:mt.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case F.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:mt.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case F.d.CUBIC_MODE:case F.d.INVCUBIC_MODE:default:mt.setReflectionMode("REFLECTIONMAP_CUBIC")}mt.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else mt.REFLECTION=!1,mt.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&S.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._emissiveTexture,mt,"EMISSIVE")}else mt.EMISSIVE=!1;if(this._lightmapTexture&&S.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._lightmapTexture,mt,"LIGHTMAP"),mt.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,mt.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else mt.LIGHTMAP=!1;if(this._specularTexture&&S.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,B.Q)(this._specularTexture,mt,"SPECULAR"),mt.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else mt.SPECULAR=!1;if(Y.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&S.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,B.Q)(this._bumpTexture,mt,"BUMP"),mt.PARALLAX=this._useParallax,mt.PARALLAX_RHS=Y.useRightHandedSystem,mt.PARALLAXOCCLUSION=this._useParallaxOcclusion,mt.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else mt.BUMP=!1,mt.PARALLAX=!1,mt.PARALLAX_RHS=!1,mt.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&S.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;mt._needUVs=!0,mt.REFRACTION=!0,mt.REFRACTIONMAP_3D=this._refractionTexture.isCube,mt.RGBDREFRACTION=this._refractionTexture.isRGBD,mt.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else mt.REFRACTION=!1;mt.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else mt.DIFFUSE=!1,mt.AMBIENT=!1,mt.OPACITY=!1,mt.REFLECTION=!1,mt.EMISSIVE=!1,mt.LIGHTMAP=!1,mt.BUMP=!1,mt.REFRACTION=!1;mt.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),mt.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,mt.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,mt.SPECULAROVERALPHA=this._useSpecularOverAlpha,mt.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,mt.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,mt.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(t)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=mt,this._eventInfo.subMesh=U,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(mt._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(mt),mt.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,mt.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(mt._areFresnelDirty&&(S.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(mt.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,mt.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,mt.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,mt.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,mt.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,mt.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,mt._needNormals=!0,mt.FRESNEL=!0):mt.FRESNEL=!1),mt.AREALIGHTUSED)for(let y=0;y<t.lightSources.length;y++)if(!t.lightSources[y]._isReady())return!1;(0,B.S)(t,Y,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(t),mt,this._applyDecalMapAfterDetailMap),(0,B.K)(Y,X,this,mt,I,null,U.getRenderingMesh().hasThinInstances),this._eventInfo.defines=mt,this._eventInfo.mesh=t,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,B.G)(t,mt,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let h=!1;if(mt.isDirty){const I=mt._areLightsDisposed;mt.markAsProcessed();const r=new D.b;mt.REFLECTION&&r.addFallback(0,"REFLECTION"),mt.SPECULAR&&r.addFallback(0,"SPECULAR"),mt.BUMP&&r.addFallback(0,"BUMP"),mt.PARALLAX&&r.addFallback(1,"PARALLAX"),mt.PARALLAX_RHS&&r.addFallback(1,"PARALLAX_RHS"),mt.PARALLAXOCCLUSION&&r.addFallback(0,"PARALLAXOCCLUSION"),mt.SPECULAROVERALPHA&&r.addFallback(0,"SPECULAROVERALPHA"),mt.FOG&&r.addFallback(1,"FOG"),mt.POINTSIZE&&r.addFallback(0,"POINTSIZE"),mt.LOGARITHMICDEPTH&&r.addFallback(0,"LOGARITHMICDEPTH"),(0,B.s)(mt,r,this._maxSimultaneousLights),mt.SPECULARTERM&&r.addFallback(0,"SPECULARTERM"),mt.DIFFUSEFRESNEL&&r.addFallback(1,"DIFFUSEFRESNEL"),mt.OPACITYFRESNEL&&r.addFallback(2,"OPACITYFRESNEL"),mt.REFLECTIONFRESNEL&&r.addFallback(3,"REFLECTIONFRESNEL"),mt.EMISSIVEFRESNEL&&r.addFallback(4,"EMISSIVEFRESNEL"),mt.FRESNEL&&r.addFallback(4,"FRESNEL"),mt.MULTIVIEW&&r.addFallback(0,"MULTIVIEW");const L=[P.e.PositionKind];mt.NORMAL&&L.push(P.e.NormalKind),mt.TANGENT&&L.push(P.e.TangentKind);for(let t=1;t<=6;++t)mt["UV"+t]&&L.push(`uv${1===t?"":t}`);mt.VERTEXCOLOR&&L.push(P.e.ColorKind),(0,B.y)(L,t,mt,r),(0,B.z)(L,mt),(0,B.C)(L,t,mt),(0,B.u)(L,t,mt);let Q="default";const F=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],E=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],w=["Material","Scene","Mesh"],l={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:mt.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=r,this._eventInfo.fallbackRank=0,this._eventInfo.defines=mt,this._eventInfo.uniforms=F,this._eventInfo.attributes=L,this._eventInfo.samplers=E,this._eventInfo.uniformBuffersNames=w,this._eventInfo.customCode=void 0,this._eventInfo.mesh=t,this._eventInfo.indexParameters=l,this._callbackPluginEventGeneric(128,this._eventInfo),p.c.AddUniformsAndSamplers(F,E),G.b.AddUniforms(F),G.b.AddSamplers(E),M.e&&(M.e.PrepareUniforms(F,mt),M.e.PrepareSamplers(E,mt)),(0,B.Z)({uniformsNames:F,uniformBuffersNames:w,samplers:E,defines:mt,maxSimultaneousLights:this._maxSimultaneousLights}),(0,g.d)(F);const b={};this.customShaderNameResolve&&(Q=this.customShaderNameResolve(Q,F,w,E,mt,L,b));const f=mt.toString(),S=U.effect;let N=Y.getEngine().createEffect(Q,{attributes:L,uniformsNames:F,uniformBuffersNames:w,samplers:E,defines:f,fallbacks:r,onCompiled:this.onCompiled,onError:this.onError,indexParameters:l,processFinalCode:b.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:mt.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([y.e(41),y.e(64)]).then(y.bind(y,14720)),Promise.all([y.e(39),y.e(65)]).then(y.bind(y,14865))]):await Promise.all([Promise.all([y.e(34),y.e(67)]).then(y.bind(y,14964)),Promise.all([y.e(33),y.e(68)]).then(y.bind(y,15105))]),this._shadersLoaded=!0}},X);if(this._eventInfo.customCode=void 0,N)if(this._onEffectCreatedObservable&&(c.effect=N,c.subMesh=U,this._onEffectCreatedObservable.notifyObservers(c)),this.allowShaderHotSwapping&&S&&!N.isReady()){if(N=S,mt.markAsUnprocessed(),h=this.isFrozen,I)return mt._areLightsDisposed=!0,!1}else Y.resetCachedMaterial(),U.setEffect(N,mt,this._materialContext)}return!(!U.effect||!U.effect.isReady())&&(mt._renderId=Y.getRenderId(),r._wasPreviouslyReady=!h,r._wasPreviouslyUsingInstances=I,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const t=this._uniformBuffer;t.addUniform("diffuseLeftColor",4),t.addUniform("diffuseRightColor",4),t.addUniform("opacityParts",4),t.addUniform("reflectionLeftColor",4),t.addUniform("reflectionRightColor",4),t.addUniform("refractionLeftColor",4),t.addUniform("refractionRightColor",4),t.addUniform("emissiveLeftColor",4),t.addUniform("emissiveRightColor",4),t.addUniform("vDiffuseInfos",2),t.addUniform("vAmbientInfos",2),t.addUniform("vOpacityInfos",2),t.addUniform("vReflectionInfos",2),t.addUniform("vReflectionPosition",3),t.addUniform("vReflectionSize",3),t.addUniform("vEmissiveInfos",2),t.addUniform("vLightmapInfos",2),t.addUniform("vSpecularInfos",2),t.addUniform("vBumpInfos",3),t.addUniform("diffuseMatrix",16),t.addUniform("ambientMatrix",16),t.addUniform("opacityMatrix",16),t.addUniform("reflectionMatrix",16),t.addUniform("emissiveMatrix",16),t.addUniform("lightmapMatrix",16),t.addUniform("specularMatrix",16),t.addUniform("bumpMatrix",16),t.addUniform("vTangentSpaceParams",2),t.addUniform("pointSize",1),t.addUniform("alphaCutOff",1),t.addUniform("refractionMatrix",16),t.addUniform("vRefractionInfos",4),t.addUniform("vRefractionPosition",3),t.addUniform("vRefractionSize",3),t.addUniform("vSpecularColor",4),t.addUniform("vEmissiveColor",3),t.addUniform("vDiffuseColor",4),t.addUniform("vAmbientColor",3),t.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(t,U,y){const I=this.St(),r=y.materialDefines;if(!r)return;const Y=y.effect;if(!Y)return;this._activeEffect=Y,U.getMeshUniformBuffer().bindToEffect(Y,"Mesh"),U.transferToEffect(t),this._uniformBuffer.bindToEffect(Y,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,I,U,t,this.isFrozen),p.c.Bind(I.getEngine().currentRenderPassId,this._activeEffect,U,t,this);const P=I.activeCamera;P?this._uniformBuffer.updateFloat4("cameraInfo",P.cX,P.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=y,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),r.OBJECTSPACE_NORMALMAP&&(t.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const G=this._mustRebind(I,Y,y,U.visibility);(0,B.c)(U,Y);const M=this._uniformBuffer;if(G){if(this.bindViewProjection(Y),!M.useUbo||!this.isFrozen||!M.isSync||y._drawWrapper._forceRebindOnNextCall){if(S.FresnelEnabled&&r.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(M.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),M.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&M.updateColor4("opacityParts",new X.bU(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(M.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),M.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(M.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),M.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(M.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),M.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),I.texturesEnabled){if(this._diffuseTexture&&S.DiffuseTextureEnabled&&(M.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,B.o)(this._diffuseTexture,M,"diffuse")),this._ambientTexture&&S.AmbientTextureEnabled&&(M.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,B.o)(this._ambientTexture,M,"ambient")),this._opacityTexture&&S.OpacityTextureEnabled&&(M.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,B.o)(this._opacityTexture,M,"opacity")),this._hasAlphaChannel()&&M.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&S.ReflectionTextureEnabled){if(M.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),M.fX("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const t=this._reflectionTexture;M.updateVector3("vReflectionPosition",t.boundingBoxPosition),M.updateVector3("vReflectionSize",t.boundingBoxSize)}}else M.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&S.EmissiveTextureEnabled&&(M.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,B.o)(this._emissiveTexture,M,"emissive")),this._lightmapTexture&&S.LightmapTextureEnabled&&(M.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,B.o)(this._lightmapTexture,M,"lightmap")),this._specularTexture&&S.SpecularTextureEnabled&&(M.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,B.o)(this._specularTexture,M,"specular")),this._bumpTexture&&I.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&(M.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,B.o)(this._bumpTexture,M,"bump"),I._mirroredCameraPosition?M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&S.RefractionTextureEnabled){let t=1;if(this._refractionTexture.isCube||(M.fX("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(t=this._refractionTexture.depth)),M.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,t,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const t=this._refractionTexture;M.updateVector3("vRefractionPosition",t.boundingBoxPosition),M.updateVector3("vRefractionSize",t.boundingBoxSize)}}}this.pointsCloud&&M.updateFloat("pointSize",this.pointSize),M.updateColor4("vSpecularColor",this.specularColor,this.specularPower),M.updateColor3("vEmissiveColor",S.EmissiveTextureEnabled?this.emissiveColor:X.bU.BlackReadOnly),M.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),I.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),M.updateColor3("vAmbientColor",this._globalAmbientColor)}I.texturesEnabled&&(this._diffuseTexture&&S.DiffuseTextureEnabled&&Y.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&S.AmbientTextureEnabled&&Y.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&S.OpacityTextureEnabled&&Y.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&S.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?Y.setTexture("reflectionCubeSampler",this._reflectionTexture):Y.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&S.EmissiveTextureEnabled&&Y.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&S.LightmapTextureEnabled&&Y.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&S.SpecularTextureEnabled&&Y.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&I.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&Y.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&S.RefractionTextureEnabled&&(this._refractionTexture.isCube?Y.setTexture("refractionCubeSampler",this._refractionTexture):Y.setTexture("refraction2DSampler",this._refractionTexture))),this.St().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(U)&&this.St().depthPeelingRenderer.bind(Y),this._eventInfo.subMesh=y,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,g.e)(Y,this,I),this.bindEyePosition(Y)}else I.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(G||!this.isFrozen){var L;if(I.lightsEnabled&&!this._disableLighting&&(0,B.f)(I,U,Y,r,this._maxSimultaneousLights),(I.fogEnabled&&U.applyFog&&I.fogMode!==mt.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||U.receiveShadows||r.PREPASS)&&this.bindView(Y),(0,B.e)(I,U,Y),r.NUM_MORPH_INFLUENCERS&&(0,B.k)(U,Y),r.BAKED_VERTEX_ANIMATION_TEXTURE)null===(L=U.bakedVertexAnimationManager)||void 0===L||L.bind(Y,r.INSTANCES);this.useLogarithmicDepth&&(0,B.h)(r,Y,I),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(U,this._activeEffect,y),M.update()}getAnimatables(){const t=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&t.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&t.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&t.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&t.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&t.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&t.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&t.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&t.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&t.push(this._refractionTexture),t}getActiveTextures(){const t=super.getActiveTextures();return this._diffuseTexture&&t.push(this._diffuseTexture),this._ambientTexture&&t.push(this._ambientTexture),this._opacityTexture&&t.push(this._opacityTexture),this._reflectionTexture&&t.push(this._reflectionTexture),this._emissiveTexture&&t.push(this._emissiveTexture),this._specularTexture&&t.push(this._specularTexture),this._bumpTexture&&t.push(this._bumpTexture),this._lightmapTexture&&t.push(this._lightmapTexture),this._refractionTexture&&t.push(this._refractionTexture),t}hasTexture(t){return!!super.hasTexture(t)||(this._diffuseTexture===t||(this._ambientTexture===t||(this._opacityTexture===t||(this._reflectionTexture===t||(this._emissiveTexture===t||(this._specularTexture===t||(this._bumpTexture===t||(this._lightmapTexture===t||this._refractionTexture===t))))))))}dispose(t,U){var y,I,r,Y,mt,X,P,G,M;U&&(null===(y=this._diffuseTexture)||void 0===y||y.dispose(),null===(I=this._ambientTexture)||void 0===I||I.dispose(),null===(r=this._opacityTexture)||void 0===r||r.dispose(),null===(Y=this._reflectionTexture)||void 0===Y||Y.dispose(),null===(mt=this._emissiveTexture)||void 0===mt||mt.dispose(),null===(X=this._specularTexture)||void 0===X||X.dispose(),null===(P=this._bumpTexture)||void 0===P||P.dispose(),null===(G=this._lightmapTexture)||void 0===G||G.dispose(),null===(M=this._refractionTexture)||void 0===M||M.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(t,U)}clone(t){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const I=b.b.Clone((()=>new S(t,this.St())),this,{cloneTexturesOnlyOnce:U});return I.name=t,I.id=t,this.EX.copyTo(I.EX),this._clonePlugins(I,y),I}static Parse(t,U,y){const I=b.b.Parse((()=>new S(t.name,U)),t,U,y);return t.EX&&I.EX.parse(t.EX,U,y),L.e._ParsePlugins(t,I,U,y),I}static get DiffuseTextureEnabled(){return w.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(t){w.d.DiffuseTextureEnabled=t}static get DetailTextureEnabled(){return w.d.DetailTextureEnabled}static set DetailTextureEnabled(t){w.d.DetailTextureEnabled=t}static get AmbientTextureEnabled(){return w.d.AmbientTextureEnabled}static set AmbientTextureEnabled(t){w.d.AmbientTextureEnabled=t}static get OpacityTextureEnabled(){return w.d.OpacityTextureEnabled}static set OpacityTextureEnabled(t){w.d.OpacityTextureEnabled=t}static get ReflectionTextureEnabled(){return w.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(t){w.d.ReflectionTextureEnabled=t}static get EmissiveTextureEnabled(){return w.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(t){w.d.EmissiveTextureEnabled=t}static get SpecularTextureEnabled(){return w.d.SpecularTextureEnabled}static set SpecularTextureEnabled(t){w.d.SpecularTextureEnabled=t}static get BumpTextureEnabled(){return w.d.BumpTextureEnabled}static set BumpTextureEnabled(t){w.d.BumpTextureEnabled=t}static get LightmapTextureEnabled(){return w.d.LightmapTextureEnabled}static set LightmapTextureEnabled(t){w.d.LightmapTextureEnabled=t}static get RefractionTextureEnabled(){return w.d.RefractionTextureEnabled}static set RefractionTextureEnabled(t){w.d.RefractionTextureEnabled=t}static get ColorGradingTextureEnabled(){return w.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(t){w.d.ColorGradingTextureEnabled=t}static get FresnelEnabled(){return w.d.FresnelEnabled}static set FresnelEnabled(t){w.d.FresnelEnabled=t}}S.ForceGLSL=!1,(0,I.b)([(0,r.B)("diffuseTexture")],S.prototype,"_diffuseTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"diffuseTexture",void 0),(0,I.b)([(0,r.B)("ambientTexture")],S.prototype,"_ambientTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"ambientTexture",void 0),(0,I.b)([(0,r.B)("opacityTexture")],S.prototype,"_opacityTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"opacityTexture",void 0),(0,I.b)([(0,r.B)("reflectionTexture")],S.prototype,"_reflectionTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"reflectionTexture",void 0),(0,I.b)([(0,r.B)("emissiveTexture")],S.prototype,"_emissiveTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"emissiveTexture",void 0),(0,I.b)([(0,r.B)("specularTexture")],S.prototype,"_specularTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"specularTexture",void 0),(0,I.b)([(0,r.B)("bumpTexture")],S.prototype,"_bumpTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"bumpTexture",void 0),(0,I.b)([(0,r.B)("lightmapTexture")],S.prototype,"_lightmapTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"lightmapTexture",void 0),(0,I.b)([(0,r.B)("refractionTexture")],S.prototype,"_refractionTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"refractionTexture",void 0),(0,I.b)([(0,r.k)("ambient")],S.prototype,"ambientColor",void 0),(0,I.b)([(0,r.k)("diffuse")],S.prototype,"diffuseColor",void 0),(0,I.b)([(0,r.k)("specular")],S.prototype,"specularColor",void 0),(0,I.b)([(0,r.k)("emissive")],S.prototype,"emissiveColor",void 0),(0,I.b)([(0,r.I)()],S.prototype,"specularPower",void 0),(0,I.b)([(0,r.I)("useAlphaFromDiffuseTexture")],S.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"useAlphaFromDiffuseTexture",void 0),(0,I.b)([(0,r.I)("useEmissiveAsIllumination")],S.prototype,"_useEmissiveAsIllumination",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useEmissiveAsIllumination",void 0),(0,I.b)([(0,r.I)("linkEmissiveWithDiffuse")],S.prototype,"_linkEmissiveWithDiffuse",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"linkEmissiveWithDiffuse",void 0),(0,I.b)([(0,r.I)("useSpecularOverAlpha")],S.prototype,"_useSpecularOverAlpha",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useSpecularOverAlpha",void 0),(0,I.b)([(0,r.I)("useReflectionOverAlpha")],S.prototype,"_useReflectionOverAlpha",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useReflectionOverAlpha",void 0),(0,I.b)([(0,r.I)("disableLighting")],S.prototype,"_disableLighting",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"disableLighting",void 0),(0,I.b)([(0,r.I)("useObjectSpaceNormalMap")],S.prototype,"_useObjectSpaceNormalMap",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useObjectSpaceNormalMap",void 0),(0,I.b)([(0,r.I)("useParallax")],S.prototype,"_useParallax",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallax",void 0),(0,I.b)([(0,r.I)("useParallaxOcclusion")],S.prototype,"_useParallaxOcclusion",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallaxOcclusion",void 0),(0,I.b)([(0,r.I)()],S.prototype,"parallaxScaleBias",void 0),(0,I.b)([(0,r.I)("roughness")],S.prototype,"_roughness",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"roughness",void 0),(0,I.b)([(0,r.I)()],S.prototype,"indexOfRefraction",void 0),(0,I.b)([(0,r.I)()],S.prototype,"invertRefractionY",void 0),(0,I.b)([(0,r.I)()],S.prototype,"alphaCutOff",void 0),(0,I.b)([(0,r.I)("useLightmapAsShadowmap")],S.prototype,"_useLightmapAsShadowmap",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useLightmapAsShadowmap",void 0),(0,I.b)([(0,r.q)("diffuseFresnelParameters")],S.prototype,"_diffuseFresnelParameters",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"diffuseFresnelParameters",void 0),(0,I.b)([(0,r.q)("opacityFresnelParameters")],S.prototype,"_opacityFresnelParameters",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],S.prototype,"opacityFresnelParameters",void 0),(0,I.b)([(0,r.q)("reflectionFresnelParameters")],S.prototype,"_reflectionFresnelParameters",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"reflectionFresnelParameters",void 0),(0,I.b)([(0,r.q)("refractionFresnelParameters")],S.prototype,"_refractionFresnelParameters",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"refractionFresnelParameters",void 0),(0,I.b)([(0,r.q)("emissiveFresnelParameters")],S.prototype,"_emissiveFresnelParameters",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"emissiveFresnelParameters",void 0),(0,I.b)([(0,r.I)("useReflectionFresnelFromSpecular")],S.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"useReflectionFresnelFromSpecular",void 0),(0,I.b)([(0,r.I)("useGlossinessFromSpecularMapAlpha")],S.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,I.b)([(0,r.I)("maxSimultaneousLights")],S.prototype,"_maxSimultaneousLights",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"maxSimultaneousLights",void 0),(0,I.b)([(0,r.I)("invertNormalMapX")],S.prototype,"_invertNormalMapX",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapX",void 0),(0,I.b)([(0,r.I)("invertNormalMapY")],S.prototype,"_invertNormalMapY",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapY",void 0),(0,I.b)([(0,r.I)("twoSidedLighting")],S.prototype,"_twoSidedLighting",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"twoSidedLighting",void 0),(0,I.b)([(0,r.I)("applyDecalMapAfterDetailMap")],S.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,I.b)([(0,r.d)("_markAllSubMeshesAsMiscDirty")],S.prototype,"applyDecalMapAfterDetailMap",void 0),(0,E.f)("BABYLON.StandardMaterial",S),mt.e.DefaultMaterialFactory=t=>new S("default material",t)}}]);