"use strict";(self["3gghkoft8x"]=self["3gghkoft8x"]||[]).push([[25],{12702:(y,S,I)=>{I.d(S,{b:()=>K});var V=I(12306),i=I(12637),A=I(12309),B=I(12698),d=I(12694),F=I(12705),J=I(12675);class u extends d.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class K extends F.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(y){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(y,"DetailMap",140,new u,S),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=i.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=y._dirtyCallbacks[1]}isReadyForSubMesh(y,S,I){return!this._isEnabled||!(y._areTexturesDirty&&S.texturesEnabled&&I.getCaps().standardDerivatives&&this._texture&&B.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(y,S){if(this._isEnabled){y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const I=S.getEngine();y._areTexturesDirty&&(I.getCaps().standardDerivatives&&this._texture&&B.e.DetailTextureEnabled&&this._isEnabled?((0,J.L)(this._texture,y,"DETAIL"),y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):y.DETAIL=!1)}else y.DETAIL=!1}bindForSubMesh(y,S){if(!this._isEnabled)return;const I=this._material.isFrozen;y.useUbo&&I&&y.isSync||this._texture&&B.e.DetailTextureEnabled&&(y.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,J.r)(this._texture,y,"detail")),S.texturesEnabled&&this._texture&&B.e.DetailTextureEnabled&&y.setTexture("detailSampler",this._texture)}hasTexture(y){return this._texture===y}getActiveTextures(y){this._texture&&y.push(this._texture)}getAnimatables(y){this._texture&&this._texture.animations&&this._texture.animations.length>0&&y.push(this._texture)}dispose(y){var S;y&&(null===(S=this._texture)||void 0===S||S.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(y){y.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,V.c)([(0,A.y)("detailTexture"),(0,A.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"texture",void 0),(0,V.c)([(0,A.E)()],K.prototype,"diffuseBlendLevel",void 0),(0,V.c)([(0,A.E)()],K.prototype,"roughnessBlendLevel",void 0),(0,V.c)([(0,A.E)()],K.prototype,"bumpLevel",void 0),(0,V.c)([(0,A.E)(),(0,A.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"normalBlendMethod",void 0),(0,V.c)([(0,A.E)(),(0,A.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"isEnabled",void 0)},12694:(y,S,I)=>{I.d(S,{e:()=>V});class V{constructor(y){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=y,y)for(const S in y)Object.prototype.hasOwnProperty.call(y,S)&&this._setDefaultValue(S)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||y,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const y of Object.keys(this))"_"!==y[0]&&this._keys.push(y);if(this._externalProperties)for(const y in this._externalProperties)-1===this._keys.indexOf(y)&&this._keys.push(y)}isEqual(y){if(this._keys.length!==y._keys.length)return!1;for(let S=0;S<this._keys.length;S++){const I=this._keys[S];if(this[I]!==y[I])return!1}return!0}cloneTo(y){this._keys.length!==y._keys.length&&(y._keys=this._keys.slice(0));for(let S=0;S<this._keys.length;S++){const I=this._keys[S];y[I]=this[I]}}reset(){for(const y of this._keys)this._setDefaultValue(y)}_setDefaultValue(y){var S,I,V,i;const A=(null===(S=this._externalProperties)||void 0===S||null===(I=S[y])||void 0===I?void 0:I.type)??typeof this[y],B=null===(V=this._externalProperties)||void 0===V||null===(i=V[y])||void 0===i?void 0:i.default;switch(A){case"number":this[y]=B??0;break;case"string":this[y]=B??"";break;default:this[y]=B??!1}}toString(){let y="";for(let S=0;S<this._keys.length;S++){const I=this._keys[S],V=this[I];switch(typeof V){case"number":case"string":y+="#define "+I+" "+V+"\n";break;default:V&&(y+="#define "+I+"\n")}}return y}}},12698:(y,S,I)=>{I.d(S,{e:()=>i});var V=I(12223);class i{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(y){this._DiffuseTextureEnabled!==y&&(this._DiffuseTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(y){this._BaseWeightTextureEnabled!==y&&(this._BaseWeightTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(y){this._BaseDiffuseRoughnessTextureEnabled!==y&&(this._BaseDiffuseRoughnessTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(y){this._DetailTextureEnabled!==y&&(this._DetailTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(y){this._DecalMapEnabled!==y&&(this._DecalMapEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(y){this._AmbientTextureEnabled!==y&&(this._AmbientTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(y){this._OpacityTextureEnabled!==y&&(this._OpacityTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(y){this._ReflectionTextureEnabled!==y&&(this._ReflectionTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(y){this._EmissiveTextureEnabled!==y&&(this._EmissiveTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(y){this._SpecularTextureEnabled!==y&&(this._SpecularTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(y){this._BumpTextureEnabled!==y&&(this._BumpTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(y){this._LightmapTextureEnabled!==y&&(this._LightmapTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(y){this._RefractionTextureEnabled!==y&&(this._RefractionTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(y){this._ColorGradingTextureEnabled!==y&&(this._ColorGradingTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(y){this._FresnelEnabled!==y&&(this._FresnelEnabled=y,V.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(y){this._ClearCoatTextureEnabled!==y&&(this._ClearCoatTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(y){this._ClearCoatBumpTextureEnabled!==y&&(this._ClearCoatBumpTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(y){this._ClearCoatTintTextureEnabled!==y&&(this._ClearCoatTintTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(y){this._SheenTextureEnabled!==y&&(this._SheenTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(y){this._AnisotropicTextureEnabled!==y&&(this._AnisotropicTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(y){this._ThicknessTextureEnabled!==y&&(this._ThicknessTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(y){this._RefractionIntensityTextureEnabled!==y&&(this._RefractionIntensityTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(y){this._TranslucencyIntensityTextureEnabled!==y&&(this._TranslucencyIntensityTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(y){this._TranslucencyColorTextureEnabled!==y&&(this._TranslucencyColorTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(y){this._IridescenceTextureEnabled!==y&&(this._IridescenceTextureEnabled=y,V.c.MarkAllMaterialsAsDirty(1))}}i._DiffuseTextureEnabled=!0,i._BaseWeightTextureEnabled=!0,i._BaseDiffuseRoughnessTextureEnabled=!0,i._DetailTextureEnabled=!0,i._DecalMapEnabled=!0,i._AmbientTextureEnabled=!0,i._OpacityTextureEnabled=!0,i._ReflectionTextureEnabled=!0,i._EmissiveTextureEnabled=!0,i._SpecularTextureEnabled=!0,i._BumpTextureEnabled=!0,i._LightmapTextureEnabled=!0,i._RefractionTextureEnabled=!0,i._ColorGradingTextureEnabled=!0,i._FresnelEnabled=!0,i._ClearCoatTextureEnabled=!0,i._ClearCoatBumpTextureEnabled=!0,i._ClearCoatTintTextureEnabled=!0,i._SheenTextureEnabled=!0,i._AnisotropicTextureEnabled=!0,i._ThicknessTextureEnabled=!0,i._RefractionIntensityTextureEnabled=!0,i._TranslucencyIntensityTextureEnabled=!0,i._TranslucencyColorTextureEnabled=!0,i._IridescenceTextureEnabled=!0},12713:(y,S,I)=>{I.d(S,{c:()=>A});var V,i=I(12321);!function(y){y[y.Zero=0]="Zero",y[y.One=1]="One",y[y.MaxViewZ=2]="MaxViewZ"}(V||(V={}));class A{static CreateConfiguration(y){return A._Configurations[y]={defines:{},previousWorldMatrices:{},previousViewProjection:i.Matrix.Zero(),currentViewProjection:i.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},A._Configurations[y]}static DeleteConfiguration(y){delete A._Configurations[y]}static GetConfiguration(y){return A._Configurations[y]}static AddUniformsAndSamplers(y,S){y.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(y,S){for(const I of S)if(I.wi)for(const S of I.wi)S._removeDrawWrapper(y)}static PrepareDefines(y,S,I){if(!I._arePrePassDirty)return;const V=A._Configurations[y];if(!V)return;I.PREPASS=!0,I.PREPASS_COLOR=!1,I.PREPASS_COLOR_INDEX=-1;let i=0;for(let B=0;B<A.GeometryTextureDescriptions.length;B++){const y=A.GeometryTextureDescriptions[B],S=y.define,d=y.defineIndex,F=V.defines[d];void 0!==F?(I[S]=!0,I[d]=F,i++):(I[S]=!1,delete I[d])}I.SCENE_MRT_COUNT=i,I.BONES_VELOCITY_ENABLED=S.useBones&&S.computeBonesUsingShaders&&S.skeleton&&!S.skeleton.isUsingTextureForMatrices&&-1===V.excludedSkinnedMesh.indexOf(S)}static Bind(y,S,I,V,i){const B=A._Configurations[y];if(!B)return;const d=I.Ey(),F=d.getEngine();if(B.reverseCulling&&F.setStateCullFaceType(d._mirroredCameraPosition?i.cullBackFaces:!i.cullBackFaces),(void 0!==B.defines.PREPASS_VELOCITY_INDEX||void 0!==B.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(B.previousWorldMatrices[I.uniqueId]||(B.previousWorldMatrices[I.uniqueId]=V.clone()),B.previousViewProjection||(B.previousViewProjection=d.getTransformMatrix().clone(),B.currentViewProjection=d.getTransformMatrix().clone()),B.currentViewProjection.updateFlag!==d.getTransformMatrix().updateFlag?(B.lastUpdateFrameId=F.frameId,B.previousViewProjection.A(B.currentViewProjection),B.currentViewProjection.A(d.getTransformMatrix())):B.lastUpdateFrameId!==F.frameId&&(B.lastUpdateFrameId=F.frameId,B.previousViewProjection.A(B.currentViewProjection)),S.setMatrix("previousWorld",B.previousWorldMatrices[I.uniqueId]),S.setMatrix("previousViewProjection",B.previousViewProjection),B.previousWorldMatrices[I.uniqueId]=V.clone(),I.useBones&&I.computeBonesUsingShaders&&I.skeleton)){const y=I.skeleton;if(!y.isUsingTextureForMatrices||-1===S.getUniformIndex("boneTextureWidth")){const V=y.getTransformMatrices(I);V&&(B.previousBones[I.uniqueId]||(B.previousBones[I.uniqueId]=V.slice()),S.setMatrices("mPreviousBones",B.previousBones[I.uniqueId]),B.previousBones[I.uniqueId].set(V))}}}}A.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],A._Configurations={}},12705:(y,S,I)=>{I.d(S,{e:()=>j});var V=I(12306),i=I(12309),A=I(12637),B=I(12185),d=I(12203),F=I(12240);const J=new RegExp("^([gimus]+)!");class u{constructor(y){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=y,this._scene=y.Ey(),this._engine=this._scene.getEngine()}_addPlugin(y){for(let V=0;V<this._plugins.length;++V)if(this._plugins[V].name===y.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!y.isCompatible(this._material.shaderLanguage))throw`The plugin "${y.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const S=y.getClassName();u._MaterialPluginClassToMainDefine[S]||(u._MaterialPluginClassToMainDefine[S]="MATERIALPLUGIN_"+ ++u._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(y,S)=>this._handlePluginEvent(y,S),this._plugins.push(y),this._plugins.sort(((y,S)=>y.priority-S.priority)),this._codeInjectionPoints={};const I={};I[u._MaterialPluginClassToMainDefine[S]]={type:"boolean",default:!0};for(const V of this._plugins)V.collectDefines(I),this._collectPointNames("vertex",V.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",V.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=I,!0}_activatePlugin(y){-1===this._activePlugins.indexOf(y)&&(this._activePlugins.push(y),this._activePlugins.sort(((y,S)=>y.priority-S.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),y.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(y),this._activePluginsForExtraEvents.sort(((y,S)=>y.priority-S.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(y){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===y)return this._plugins[S];return null}_handlePluginEventIsReadyForSubMesh(y){let S=!0;for(const I of this._activePlugins)S=S&&I.isReadyForSubMesh(y.defines,this._scene,this._engine,y.subMesh);y.isReadyForSubMesh=S}_handlePluginEventPrepareDefinesBeforeAttributes(y){for(const S of this._activePlugins)S.prepareDefinesBeforeAttributes(y.defines,this._scene,y.mesh)}_handlePluginEventPrepareDefines(y){for(const S of this._activePlugins)S.prepareDefines(y.defines,this._scene,y.mesh)}_handlePluginEventHardBindForSubMesh(y){for(const S of this._activePluginsForExtraEvents)S.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,y.subMesh)}_handlePluginEventBindForSubMesh(y){for(const S of this._activePlugins)S.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,y.subMesh)}_handlePluginEventHasRenderTargetTextures(y){let S=!1;for(const I of this._activePluginsForExtraEvents)if(S=I.hasRenderTargetTextures(),S)break;y.hasRenderTargetTextures=S}_handlePluginEventFillRenderTargetTextures(y){for(const S of this._activePluginsForExtraEvents)S.fillRenderTargetTextures(y.renderTargets)}_handlePluginEvent(y,S){switch(y){case 512:{const y=S;for(const S of this._activePlugins)S.getActiveTextures(y.activeTextures);break}case 256:{const y=S;for(const S of this._activePlugins)S.getAnimatables(y.animatables);break}case 1024:{const y=S;let I=!1;for(const S of this._activePlugins)if(I=S.hasTexture(y.texture),I)break;y.hasTexture=I;break}case 2:{const y=S;for(const S of this._plugins)S.dispose(y.forceDisposeTextures);break}case 4:S.defineNames=this._defineNamesFromPlugins;break;case 128:{const y=S;for(const S of this._activePlugins)y.fallbackRank=S.addFallbacks(y.defines,y.fallbacks,y.fallbackRank),S.getAttributes(y.attributes,this._scene,y.mesh);this._uniformList.length>0&&y.uniforms.push(...this._uniformList),this._samplerList.length>0&&y.samplers.push(...this._samplerList),this._uboList.length>0&&y.uniformBuffersNames.push(...this._uboList),y.customCode=this._injectCustomCode(y,y.customCode);break}case 8:{const y=S;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const I=1===this._material.shaderLanguage;for(const S of this._plugins){const V=S.getUniforms(this._material.shaderLanguage);if(V){if(V.ubo)for(const S of V.ubo){if(S.size&&S.type){const V=S.arraySize??0;if(y.ubo.addUniform(S.name,S.size,V),I){let y;switch(S.type){case"mat4":y="mat4x4f";break;case"float":y="f32";break;default:y=`${S.type}f`}this._uboDeclaration+=V>0?`uniform ${S.name}: array<${y}, ${V}>;\n`:`uniform ${S.name}: ${y};\n`}else this._uboDeclaration+=`${S.type} ${S.name}${V>0?`[${V}]`:""};\n`}this._uniformList.push(S.name)}V.vertex&&(this._vertexDeclaration+=V.vertex+"\n"),V.fragment&&(this._fragmentDeclaration+=V.fragment+"\n")}S.getSamplers(this._samplerList),S.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(y,S){if(S)for(const I in S)this._codeInjectionPoints[y]||(this._codeInjectionPoints[y]={}),this._codeInjectionPoints[y][I]=!0}_injectCustomCode(y,S){return(I,V)=>{var i;S&&(V=S(I,V)),this._uboDeclaration&&(V=V.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(V=V.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(V=V.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const A=null===(i=this._codeInjectionPoints)||void 0===i?void 0:i[I];if(!A)return V;let B=null;for(let S in A){let i="";for(const V of this._activePlugins){var u;let A=null===(u=V.getCustomCode(I,this._material.shaderLanguage))||void 0===u?void 0:u[S];if(A){if(V.resolveIncludes){if(null===B){const S=0;B={defines:[],indexParameters:y.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:F.b.GetShadersRepository(S),includesShadersStore:F.b.GetIncludesShadersStore(S),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,si:this._engine.si,processCodeAfterIncludes:void 0}}B.isFragment="fragment"===I,(0,d.k)(A,B,(y=>A=y))}i+=A+"\n"}}if(i.length>0)if("!"===S.charAt(0)){S=S.substring(1);let y="g";if("!"===S.charAt(0))y="",S=S.substring(1);else{const I=J.exec(S);I&&I.length>=2&&(y=I[1],S=S.substring(y.length+1))}y.indexOf("g")<0&&(y+="g");const I=V,A=new RegExp(S,y);let B=A.exec(I);for(;null!==B;){let y=i;for(let S=0;S<B.length;++S)y=y.replace("$"+S,B[S]);V=V.replace(B[0],y),B=A.exec(I)}}else{const y="#define "+S;V=V.replace(y,"\n"+i+"\n"+y)}}return V}}}u._MaterialPluginClassToMainDefine={},u._MaterialPluginCounter=0,B.e.OnEnginesDisposedObservable.add((()=>{L()}));const K=[];let G=!1,p=null;function L(){K.length=0,G=!1,A.d.OnEventObservable.remove(p),p=null}var T=I(12352),l=I(12282);class j{isCompatible(y){return 0===y}_enable(y){y&&this._pluginManager._activatePlugin(this)}constructor(y,S,I,V){let i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=y,this.name=S,this.priority=I,this.resolveIncludes=B,y.pluginManager||(y.pluginManager=new u(y),y.zi.add((()=>{y.pluginManager=void 0}))),this._pluginDefineNames=V,this._pluginManager=y.pluginManager,i&&this._pluginManager._addPlugin(this),A&&this._enable(!0),this.markAllDefinesAsDirty=y._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(y,S,I,V){return!0}hardBindForSubMesh(y,S,I,V){}bindForSubMesh(y,S,I,V){}dispose(y){}getCustomCode(y){return null}collectDefines(y){if(this._pluginDefineNames)for(const S of Object.keys(this._pluginDefineNames)){if("_"===S[0])continue;const I=typeof this._pluginDefineNames[S];y[S]={type:"number"===I?"number":"string"===I?"string":"boolean"===I?"boolean":"object",default:this._pluginDefineNames[S]}}}prepareDefinesBeforeAttributes(y,S,I){}prepareDefines(y,S,I){}hasTexture(y){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(y){}getActiveTextures(y){}getAnimatables(y){}addFallbacks(y,S,I){return I}getSamplers(y){}getAttributes(y,S,I){}getUniformBuffersNames(y){}getUniforms(){return{}}copyTo(y){T.d.Clone((()=>y),this)}serialize(){return T.d.Serialize(this)}parse(y,S,I){T.d.Parse((()=>this),y,S,I)}}(0,V.c)([(0,i.E)()],j.prototype,"name",void 0),(0,V.c)([(0,i.E)()],j.prototype,"priority",void 0),(0,V.c)([(0,i.E)()],j.prototype,"resolveIncludes",void 0),(0,V.c)([(0,i.E)()],j.prototype,"registerForExtraEvents",void 0),(0,l.e)("BABYLON.MaterialPluginBase",j)},12691:(y,S,I)=>{I.d(S,{c:()=>V});class V{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(y){y.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(y){}bindForSubMesh(y,S,I,V,i){if(S.prePassRenderer&&S.prePassRenderer.enabled&&S.prePassRenderer.currentRTisSceneRT&&(-1!==S.prePassRenderer.getIndex(2)||-1!==S.prePassRenderer.getIndex(11))){this.previousWorldMatrices[I.uniqueId]||(this.previousWorldMatrices[I.uniqueId]=V.clone()),this.previousViewProjection||(this.previousViewProjection=S.getTransformMatrix().clone(),this.currentViewProjection=S.getTransformMatrix().clone());const i=S.getEngine();this.currentViewProjection.updateFlag!==S.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=i.frameId,this.previousViewProjection.A(this.currentViewProjection),this.currentViewProjection.A(S.getTransformMatrix())):this._lastUpdateFrameId!==i.frameId&&(this._lastUpdateFrameId=i.frameId,this.previousViewProjection.A(this.currentViewProjection)),y.setMatrix("previousWorld",this.previousWorldMatrices[I.uniqueId]),y.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[I.uniqueId]=V.clone()}}}},12686:(y,S,I)=>{I.d(S,{CS:()=>E});var V=I(12306),i=I(12309),A=I(12412),B=I(12556),d=I(12362),F=I(12390),J=I(12691),u=I(12562),K=I(12637),G=I(12694),p=I(12631),L=I(12304),T=I(12282),l=I(12698),j=I(12625),s=I(12702),O=I(12683),f=I(12675),my=I(12352),C=I(12713);const D={effect:null,subMesh:null};class o extends G.e{constructor(y){super(y),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(y){const S=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const I of S)this[I]=I===y}}class E extends p.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(y){this._attachImageProcessingConfiguration(y),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(y){y!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=y||this.Ey().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(y){this.imageProcessingConfiguration.colorCurvesEnabled=y}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(y){this.imageProcessingConfiguration.colorGradingEnabled=y}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(y){this._imageProcessingConfiguration.toneMappingEnabled=y}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(y){this._imageProcessingConfiguration.exposure=y}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(y){this._imageProcessingConfiguration.contrast=y}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(y){this._imageProcessingConfiguration.colorGradingTexture=y}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(y){this._imageProcessingConfiguration.colorCurves=y}get canRenderToMRT(){return!0}constructor(y,S){super(y,S,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||E.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new d.DS(0,0,0),this.diffuseColor=new d.DS(1,1,1),this.specularColor=new d.DS(1,1,1),this.emissiveColor=new d.DS(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new A.f(16),this._globalAmbientColor=new d.DS(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new s.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new J.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),E.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),E.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(E.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(E.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"CS"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===K.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Fd&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==K.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Fd||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(y,S){let V=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const i=S._drawWrapper;if(i.effect&&this.isFrozen&&i._wasPreviouslyReady&&i._wasPreviouslyUsingInstances===V)return!0;S.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),S.materialDefines=new o(this._eventInfo.defineNames));const A=this.Ey(),B=S.materialDefines;if(this._isReadyForSubMesh(S))return!0;const d=A.getEngine();B._needNormals=(0,f.J)(A,y,B,!0,this._maxSimultaneousLights,this._disableLighting),(0,f.Q)(A,B);const K=this.needAlphaBlendingForMesh(y)&&this.Ey().useOrderIndependentTransparency;if((0,f.U)(A,B,this.canRenderToMRT&&!K),(0,f.R)(A,B,K),C.c.PrepareDefines(d.currentRenderPassId,y,B),B._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,B._needUVs=!1;for(let y=1;y<=6;++y)B["MAINUV"+y]=!1;if(A.texturesEnabled){if(B.DIFFUSEDIRECTUV=0,B.BUMPDIRECTUV=0,B.AMBIENTDIRECTUV=0,B.OPACITYDIRECTUV=0,B.EMISSIVEDIRECTUV=0,B.SPECULARDIRECTUV=0,B.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&E.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._diffuseTexture,B,"DIFFUSE")}else B.DIFFUSE=!1;if(this._ambientTexture&&E.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._ambientTexture,B,"AMBIENT")}else B.AMBIENT=!1;if(this._opacityTexture&&E.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._opacityTexture,B,"OPACITY"),B.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else B.OPACITY=!1;if(this._reflectionTexture&&E.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(B._needNormals=!0,B.REFLECTION=!0,B.ROUGHNESS=this._roughness>0,B.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,B.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===L.e.INVCUBIC_MODE,B.REFLECTIONMAP_3D=this._reflectionTexture.isCube,B.REFLECTIONMAP_OPPOSITEZ=B.REFLECTIONMAP_3D&&this.Ey().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,B.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case L.e.EXPLICIT_MODE:B.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case L.e.PLANAR_MODE:B.setReflectionMode("REFLECTIONMAP_PLANAR");break;case L.e.PROJECTION_MODE:B.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case L.e.SKYBOX_MODE:B.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case L.e.SPHERICAL_MODE:B.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case L.e.EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case L.e.FIXED_EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case L.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:B.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case L.e.CUBIC_MODE:case L.e.INVCUBIC_MODE:default:B.setReflectionMode("REFLECTIONMAP_CUBIC")}B.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else B.REFLECTION=!1,B.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&E.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._emissiveTexture,B,"EMISSIVE")}else B.EMISSIVE=!1;if(this._lightmapTexture&&E.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._lightmapTexture,B,"LIGHTMAP"),B.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,B.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else B.LIGHTMAP=!1;if(this._specularTexture&&E.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,f.L)(this._specularTexture,B,"SPECULAR"),B.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else B.SPECULAR=!1;if(A.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&E.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,f.L)(this._bumpTexture,B,"BUMP"),B.PARALLAX=this._useParallax,B.PARALLAX_RHS=A.useRightHandedSystem,B.PARALLAXOCCLUSION=this._useParallaxOcclusion,B.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else B.BUMP=!1,B.PARALLAX=!1,B.PARALLAX_RHS=!1,B.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&E.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;B._needUVs=!0,B.REFRACTION=!0,B.REFRACTIONMAP_3D=this._refractionTexture.isCube,B.RGBDREFRACTION=this._refractionTexture.isRGBD,B.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else B.REFRACTION=!1;B.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else B.DIFFUSE=!1,B.AMBIENT=!1,B.OPACITY=!1,B.REFLECTION=!1,B.EMISSIVE=!1,B.LIGHTMAP=!1,B.BUMP=!1,B.REFRACTION=!1;B.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),B.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,B.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,B.SPECULAROVERALPHA=this._useSpecularOverAlpha,B.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,B.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,B.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(y)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._eventInfo.subMesh=S,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(B._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(B),B.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,B.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(B._areFresnelDirty&&(E.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(B.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,B.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,B.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,B.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,B.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,B.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,B._needNormals=!0,B.FRESNEL=!0):B.FRESNEL=!1),B.AREALIGHTUSED)for(let I=0;I<y.lightSources.length;I++)if(!y.lightSources[I]._isReady())return!1;(0,f.M)(y,A,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(y),B,this._applyDecalMapAfterDetailMap),(0,f.I)(A,d,this,B,V,null,S.getRenderingMesh().hasThinInstances),this._eventInfo.defines=B,this._eventInfo.mesh=y,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,f.H)(y,B,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let G=!1;if(B.isDirty){const V=B._areLightsDisposed;B.markAsProcessed();const i=new j.e;B.REFLECTION&&i.addFallback(0,"REFLECTION"),B.SPECULAR&&i.addFallback(0,"SPECULAR"),B.BUMP&&i.addFallback(0,"BUMP"),B.PARALLAX&&i.addFallback(1,"PARALLAX"),B.PARALLAX_RHS&&i.addFallback(1,"PARALLAX_RHS"),B.PARALLAXOCCLUSION&&i.addFallback(0,"PARALLAXOCCLUSION"),B.SPECULAROVERALPHA&&i.addFallback(0,"SPECULAROVERALPHA"),B.FOG&&i.addFallback(1,"FOG"),B.POINTSIZE&&i.addFallback(0,"POINTSIZE"),B.LOGARITHMICDEPTH&&i.addFallback(0,"LOGARITHMICDEPTH"),(0,f.u)(B,i,this._maxSimultaneousLights),B.SPECULARTERM&&i.addFallback(0,"SPECULARTERM"),B.DIFFUSEFRESNEL&&i.addFallback(1,"DIFFUSEFRESNEL"),B.OPACITYFRESNEL&&i.addFallback(2,"OPACITYFRESNEL"),B.REFLECTIONFRESNEL&&i.addFallback(3,"REFLECTIONFRESNEL"),B.EMISSIVEFRESNEL&&i.addFallback(4,"EMISSIVEFRESNEL"),B.FRESNEL&&i.addFallback(4,"FRESNEL"),B.MULTIVIEW&&i.addFallback(0,"MULTIVIEW");const K=[F.e.PositionKind];B.NORMAL&&K.push(F.e.NormalKind),B.TANGENT&&K.push(F.e.TangentKind);for(let y=1;y<=6;++y)B["UV"+y]&&K.push(`uv${1===y?"":y}`);B.VERTEXCOLOR&&K.push(F.e.ColorKind),(0,f.z)(K,y,B,i),(0,f.C)(K,B),(0,f.F)(K,y,B),(0,f.y)(K,y,B);let p="default";const L=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],T=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],l=["Material","Scene","Mesh"],s={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:B.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=i,this._eventInfo.fallbackRank=0,this._eventInfo.defines=B,this._eventInfo.uniforms=L,this._eventInfo.attributes=K,this._eventInfo.samplers=T,this._eventInfo.uniformBuffersNames=l,this._eventInfo.customCode=void 0,this._eventInfo.mesh=y,this._eventInfo.indexParameters=s,this._callbackPluginEventGeneric(128,this._eventInfo),C.c.AddUniformsAndSamplers(L,T),J.c.AddUniforms(L),J.c.AddSamplers(T),u.d&&(u.d.PrepareUniforms(L,B),u.d.PrepareSamplers(T,B)),(0,f.X)({uniformsNames:L,uniformBuffersNames:l,samplers:T,defines:B,maxSimultaneousLights:this._maxSimultaneousLights}),(0,O.e)(L);const my={};this.customShaderNameResolve&&(p=this.customShaderNameResolve(p,L,l,T,B,K,my));const o=B.toString(),E=S.effect;let z=A.getEngine().createEffect(p,{attributes:K,uniformsNames:L,uniformBuffersNames:l,samplers:T,defines:o,fallbacks:i,onCompiled:this.onCompiled,onError:this.onError,indexParameters:s,processFinalCode:my.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:B.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([I.e(41),I.e(64)]).then(I.bind(I,14882)),Promise.all([I.e(39),I.e(65)]).then(I.bind(I,15007))]):await Promise.all([Promise.all([I.e(34),I.e(67)]).then(I.bind(I,15082)),Promise.all([I.e(33),I.e(68)]).then(I.bind(I,15242))]),this._shadersLoaded=!0}},d);if(this._eventInfo.customCode=void 0,z)if(this._onEffectCreatedObservable&&(D.effect=z,D.subMesh=S,this._onEffectCreatedObservable.notifyObservers(D)),this.allowShaderHotSwapping&&E&&!z.isReady()){if(z=E,B.markAsUnprocessed(),G=this.isFrozen,V)return B._areLightsDisposed=!0,!1}else A.resetCachedMaterial(),S.setEffect(z,B,this._materialContext)}return!(!S.effect||!S.effect.isReady())&&(B._renderId=A.getRenderId(),i._wasPreviouslyReady=!G,i._wasPreviouslyUsingInstances=V,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const y=this._uniformBuffer;y.addUniform("diffuseLeftColor",4),y.addUniform("diffuseRightColor",4),y.addUniform("opacityParts",4),y.addUniform("reflectionLeftColor",4),y.addUniform("reflectionRightColor",4),y.addUniform("refractionLeftColor",4),y.addUniform("refractionRightColor",4),y.addUniform("emissiveLeftColor",4),y.addUniform("emissiveRightColor",4),y.addUniform("vDiffuseInfos",2),y.addUniform("vAmbientInfos",2),y.addUniform("vOpacityInfos",2),y.addUniform("vReflectionInfos",2),y.addUniform("vReflectionPosition",3),y.addUniform("vReflectionSize",3),y.addUniform("vEmissiveInfos",2),y.addUniform("vLightmapInfos",2),y.addUniform("vSpecularInfos",2),y.addUniform("vBumpInfos",3),y.addUniform("diffuseMatrix",16),y.addUniform("ambientMatrix",16),y.addUniform("opacityMatrix",16),y.addUniform("reflectionMatrix",16),y.addUniform("emissiveMatrix",16),y.addUniform("lightmapMatrix",16),y.addUniform("specularMatrix",16),y.addUniform("bumpMatrix",16),y.addUniform("vTangentSpaceParams",2),y.addUniform("pointSize",1),y.addUniform("alphaCutOff",1),y.addUniform("refractionMatrix",16),y.addUniform("vRefractionInfos",4),y.addUniform("vRefractionPosition",3),y.addUniform("vRefractionSize",3),y.addUniform("vSpecularColor",4),y.addUniform("vEmissiveColor",3),y.addUniform("vDiffuseColor",4),y.addUniform("vAmbientColor",3),y.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(y,S,I){const V=this.Ey(),i=I.materialDefines;if(!i)return;const A=I.effect;if(!A)return;this._activeEffect=A,S.getMeshUniformBuffer().bindToEffect(A,"Mesh"),S.transferToEffect(y),this._uniformBuffer.bindToEffect(A,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,V,S,y,this.isFrozen),C.c.Bind(V.getEngine().currentRenderPassId,this._activeEffect,S,y,this);const F=V.activeCamera;F?this._uniformBuffer.updateFloat4("cameraInfo",F.Ld,F.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=I,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),i.OBJECTSPACE_NORMALMAP&&(y.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const J=this._mustRebind(V,A,I,S.visibility);(0,f.e)(S,A);const u=this._uniformBuffer;if(J){if(this.bindViewProjection(A),!u.useUbo||!this.isFrozen||!u.isSync||I._drawWrapper._forceRebindOnNextCall){if(E.FresnelEnabled&&i.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(u.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),u.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&u.updateColor4("opacityParts",new d.DS(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(u.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),u.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(u.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),u.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(u.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),u.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),V.texturesEnabled){if(this._diffuseTexture&&E.DiffuseTextureEnabled&&(u.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,f.r)(this._diffuseTexture,u,"diffuse")),this._ambientTexture&&E.AmbientTextureEnabled&&(u.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,f.r)(this._ambientTexture,u,"ambient")),this._opacityTexture&&E.OpacityTextureEnabled&&(u.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,f.r)(this._opacityTexture,u,"opacity")),this._hasAlphaChannel()&&u.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&E.ReflectionTextureEnabled){if(u.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),u.jd("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const y=this._reflectionTexture;u.updateVector3("vReflectionPosition",y.boundingBoxPosition),u.updateVector3("vReflectionSize",y.boundingBoxSize)}}else u.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&E.EmissiveTextureEnabled&&(u.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,f.r)(this._emissiveTexture,u,"emissive")),this._lightmapTexture&&E.LightmapTextureEnabled&&(u.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,f.r)(this._lightmapTexture,u,"lightmap")),this._specularTexture&&E.SpecularTextureEnabled&&(u.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,f.r)(this._specularTexture,u,"specular")),this._bumpTexture&&V.getEngine().getCaps().standardDerivatives&&E.BumpTextureEnabled&&(u.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,f.r)(this._bumpTexture,u,"bump"),V._mirroredCameraPosition?u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&E.RefractionTextureEnabled){let y=1;if(this._refractionTexture.isCube||(u.jd("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(y=this._refractionTexture.depth)),u.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,y,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const y=this._refractionTexture;u.updateVector3("vRefractionPosition",y.boundingBoxPosition),u.updateVector3("vRefractionSize",y.boundingBoxSize)}}}this.pointsCloud&&u.updateFloat("pointSize",this.pointSize),u.updateColor4("vSpecularColor",this.specularColor,this.specularPower),u.updateColor3("vEmissiveColor",E.EmissiveTextureEnabled?this.emissiveColor:d.DS.BlackReadOnly),u.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),V.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),u.updateColor3("vAmbientColor",this._globalAmbientColor)}V.texturesEnabled&&(this._diffuseTexture&&E.DiffuseTextureEnabled&&A.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&E.AmbientTextureEnabled&&A.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&E.OpacityTextureEnabled&&A.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&E.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?A.setTexture("reflectionCubeSampler",this._reflectionTexture):A.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&E.EmissiveTextureEnabled&&A.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&E.LightmapTextureEnabled&&A.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&E.SpecularTextureEnabled&&A.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&V.getEngine().getCaps().standardDerivatives&&E.BumpTextureEnabled&&A.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&E.RefractionTextureEnabled&&(this._refractionTexture.isCube?A.setTexture("refractionCubeSampler",this._refractionTexture):A.setTexture("refraction2DSampler",this._refractionTexture))),this.Ey().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(S)&&this.Ey().depthPeelingRenderer.bind(A),this._eventInfo.subMesh=I,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,O.f)(A,this,V),this.bindEyePosition(A)}else V.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(J||!this.isFrozen){var K;if(V.lightsEnabled&&!this._disableLighting&&(0,f.g)(V,S,A,i,this._maxSimultaneousLights),(V.fogEnabled&&S.applyFog&&V.fogMode!==B.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||S.receiveShadows||i.PREPASS)&&this.bindView(A),(0,f.f)(V,S,A),i.NUM_MORPH_INFLUENCERS&&(0,f.l)(S,A),i.BAKED_VERTEX_ANIMATION_TEXTURE)null===(K=S.bakedVertexAnimationManager)||void 0===K||K.bind(A,i.INSTANCES);this.useLogarithmicDepth&&(0,f.k)(i,A,V),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(S,this._activeEffect,I),u.update()}getAnimatables(){const y=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&y.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&y.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&y.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&y.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&y.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&y.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&y.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&y.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&y.push(this._refractionTexture),y}getActiveTextures(){const y=super.getActiveTextures();return this._diffuseTexture&&y.push(this._diffuseTexture),this._ambientTexture&&y.push(this._ambientTexture),this._opacityTexture&&y.push(this._opacityTexture),this._reflectionTexture&&y.push(this._reflectionTexture),this._emissiveTexture&&y.push(this._emissiveTexture),this._specularTexture&&y.push(this._specularTexture),this._bumpTexture&&y.push(this._bumpTexture),this._lightmapTexture&&y.push(this._lightmapTexture),this._refractionTexture&&y.push(this._refractionTexture),y}hasTexture(y){return!!super.hasTexture(y)||(this._diffuseTexture===y||(this._ambientTexture===y||(this._opacityTexture===y||(this._reflectionTexture===y||(this._emissiveTexture===y||(this._specularTexture===y||(this._bumpTexture===y||(this._lightmapTexture===y||this._refractionTexture===y))))))))}dispose(y,S){var I,V,i,A,B,d,F,J,u;S&&(null===(I=this._diffuseTexture)||void 0===I||I.dispose(),null===(V=this._ambientTexture)||void 0===V||V.dispose(),null===(i=this._opacityTexture)||void 0===i||i.dispose(),null===(A=this._reflectionTexture)||void 0===A||A.dispose(),null===(B=this._emissiveTexture)||void 0===B||B.dispose(),null===(d=this._specularTexture)||void 0===d||d.dispose(),null===(F=this._bumpTexture)||void 0===F||F.dispose(),null===(J=this._lightmapTexture)||void 0===J||J.dispose(),null===(u=this._refractionTexture)||void 0===u||u.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(y,S)}clone(y){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const V=my.d.Clone((()=>new E(y,this.Ey())),this,{cloneTexturesOnlyOnce:S});return V.name=y,V.id=y,this.gi.copyTo(V.gi),this._clonePlugins(V,I),V}static Parse(y,S,I){const V=my.d.Parse((()=>new E(y.name,S)),y,S,I);return y.gi&&V.gi.parse(y.gi,S,I),K.d._ParsePlugins(y,V,S,I),V}static get DiffuseTextureEnabled(){return l.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(y){l.e.DiffuseTextureEnabled=y}static get DetailTextureEnabled(){return l.e.DetailTextureEnabled}static set DetailTextureEnabled(y){l.e.DetailTextureEnabled=y}static get AmbientTextureEnabled(){return l.e.AmbientTextureEnabled}static set AmbientTextureEnabled(y){l.e.AmbientTextureEnabled=y}static get OpacityTextureEnabled(){return l.e.OpacityTextureEnabled}static set OpacityTextureEnabled(y){l.e.OpacityTextureEnabled=y}static get ReflectionTextureEnabled(){return l.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(y){l.e.ReflectionTextureEnabled=y}static get EmissiveTextureEnabled(){return l.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(y){l.e.EmissiveTextureEnabled=y}static get SpecularTextureEnabled(){return l.e.SpecularTextureEnabled}static set SpecularTextureEnabled(y){l.e.SpecularTextureEnabled=y}static get BumpTextureEnabled(){return l.e.BumpTextureEnabled}static set BumpTextureEnabled(y){l.e.BumpTextureEnabled=y}static get LightmapTextureEnabled(){return l.e.LightmapTextureEnabled}static set LightmapTextureEnabled(y){l.e.LightmapTextureEnabled=y}static get RefractionTextureEnabled(){return l.e.RefractionTextureEnabled}static set RefractionTextureEnabled(y){l.e.RefractionTextureEnabled=y}static get ColorGradingTextureEnabled(){return l.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(y){l.e.ColorGradingTextureEnabled=y}static get FresnelEnabled(){return l.e.FresnelEnabled}static set FresnelEnabled(y){l.e.FresnelEnabled=y}}E.ForceGLSL=!1,(0,V.c)([(0,i.y)("diffuseTexture")],E.prototype,"_diffuseTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],E.prototype,"diffuseTexture",void 0),(0,V.c)([(0,i.y)("ambientTexture")],E.prototype,"_ambientTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"ambientTexture",void 0),(0,V.c)([(0,i.y)("opacityTexture")],E.prototype,"_opacityTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],E.prototype,"opacityTexture",void 0),(0,V.c)([(0,i.y)("reflectionTexture")],E.prototype,"_reflectionTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"reflectionTexture",void 0),(0,V.c)([(0,i.y)("emissiveTexture")],E.prototype,"_emissiveTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"emissiveTexture",void 0),(0,V.c)([(0,i.y)("specularTexture")],E.prototype,"_specularTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"specularTexture",void 0),(0,V.c)([(0,i.y)("bumpTexture")],E.prototype,"_bumpTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"bumpTexture",void 0),(0,V.c)([(0,i.y)("lightmapTexture")],E.prototype,"_lightmapTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"lightmapTexture",void 0),(0,V.c)([(0,i.y)("refractionTexture")],E.prototype,"_refractionTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"refractionTexture",void 0),(0,V.c)([(0,i.h)("ambient")],E.prototype,"ambientColor",void 0),(0,V.c)([(0,i.h)("diffuse")],E.prototype,"diffuseColor",void 0),(0,V.c)([(0,i.h)("specular")],E.prototype,"specularColor",void 0),(0,V.c)([(0,i.h)("emissive")],E.prototype,"emissiveColor",void 0),(0,V.c)([(0,i.E)()],E.prototype,"specularPower",void 0),(0,V.c)([(0,i.E)("useAlphaFromDiffuseTexture")],E.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],E.prototype,"useAlphaFromDiffuseTexture",void 0),(0,V.c)([(0,i.E)("useEmissiveAsIllumination")],E.prototype,"_useEmissiveAsIllumination",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useEmissiveAsIllumination",void 0),(0,V.c)([(0,i.E)("linkEmissiveWithDiffuse")],E.prototype,"_linkEmissiveWithDiffuse",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"linkEmissiveWithDiffuse",void 0),(0,V.c)([(0,i.E)("useSpecularOverAlpha")],E.prototype,"_useSpecularOverAlpha",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useSpecularOverAlpha",void 0),(0,V.c)([(0,i.E)("useReflectionOverAlpha")],E.prototype,"_useReflectionOverAlpha",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useReflectionOverAlpha",void 0),(0,V.c)([(0,i.E)("disableLighting")],E.prototype,"_disableLighting",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsLightsDirty")],E.prototype,"disableLighting",void 0),(0,V.c)([(0,i.E)("useObjectSpaceNormalMap")],E.prototype,"_useObjectSpaceNormalMap",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useObjectSpaceNormalMap",void 0),(0,V.c)([(0,i.E)("useParallax")],E.prototype,"_useParallax",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useParallax",void 0),(0,V.c)([(0,i.E)("useParallaxOcclusion")],E.prototype,"_useParallaxOcclusion",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useParallaxOcclusion",void 0),(0,V.c)([(0,i.E)()],E.prototype,"parallaxScaleBias",void 0),(0,V.c)([(0,i.E)("roughness")],E.prototype,"_roughness",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"roughness",void 0),(0,V.c)([(0,i.E)()],E.prototype,"indexOfRefraction",void 0),(0,V.c)([(0,i.E)()],E.prototype,"invertRefractionY",void 0),(0,V.c)([(0,i.E)()],E.prototype,"alphaCutOff",void 0),(0,V.c)([(0,i.E)("useLightmapAsShadowmap")],E.prototype,"_useLightmapAsShadowmap",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useLightmapAsShadowmap",void 0),(0,V.c)([(0,i.j)("diffuseFresnelParameters")],E.prototype,"_diffuseFresnelParameters",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelDirty")],E.prototype,"diffuseFresnelParameters",void 0),(0,V.c)([(0,i.j)("opacityFresnelParameters")],E.prototype,"_opacityFresnelParameters",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],E.prototype,"opacityFresnelParameters",void 0),(0,V.c)([(0,i.j)("reflectionFresnelParameters")],E.prototype,"_reflectionFresnelParameters",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelDirty")],E.prototype,"reflectionFresnelParameters",void 0),(0,V.c)([(0,i.j)("refractionFresnelParameters")],E.prototype,"_refractionFresnelParameters",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelDirty")],E.prototype,"refractionFresnelParameters",void 0),(0,V.c)([(0,i.j)("emissiveFresnelParameters")],E.prototype,"_emissiveFresnelParameters",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelDirty")],E.prototype,"emissiveFresnelParameters",void 0),(0,V.c)([(0,i.E)("useReflectionFresnelFromSpecular")],E.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsFresnelDirty")],E.prototype,"useReflectionFresnelFromSpecular",void 0),(0,V.c)([(0,i.E)("useGlossinessFromSpecularMapAlpha")],E.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,V.c)([(0,i.E)("maxSimultaneousLights")],E.prototype,"_maxSimultaneousLights",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsLightsDirty")],E.prototype,"maxSimultaneousLights",void 0),(0,V.c)([(0,i.E)("invertNormalMapX")],E.prototype,"_invertNormalMapX",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"invertNormalMapX",void 0),(0,V.c)([(0,i.E)("invertNormalMapY")],E.prototype,"_invertNormalMapY",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"invertNormalMapY",void 0),(0,V.c)([(0,i.E)("twoSidedLighting")],E.prototype,"_twoSidedLighting",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"twoSidedLighting",void 0),(0,V.c)([(0,i.E)("applyDecalMapAfterDetailMap")],E.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,V.c)([(0,i.c)("_markAllSubMeshesAsMiscDirty")],E.prototype,"applyDecalMapAfterDetailMap",void 0),(0,T.e)("BABYLON.StandardMaterial",E),B.e.DefaultMaterialFactory=y=>new E("default material",y)}}]);