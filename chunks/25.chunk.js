"use strict";(self.xeuzlpp225k=self.xeuzlpp225k||[]).push([[25],{11672:(k,Q,i)=>{i.d(Q,{c:()=>G});var Z=i(11280),U=i(11615),C=i(11289),B=i(11669),o=i(11666),m=i(11678),O=i(11652);class J extends o.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class G extends m.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(k){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(k,"DetailMap",140,new J,Q),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=U.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=k._dirtyCallbacks[1]}isReadyForSubMesh(k,Q,i){return!this._isEnabled||!(k._areTexturesDirty&&Q.texturesEnabled&&i.getCaps().standardDerivatives&&this._texture&&B.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(k,Q){if(this._isEnabled){k.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const i=Q.getEngine();k._areTexturesDirty&&(i.getCaps().standardDerivatives&&this._texture&&B.d.DetailTextureEnabled&&this._isEnabled?((0,O.O)(this._texture,k,"DETAIL"),k.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):k.DETAIL=!1)}else k.DETAIL=!1}bindForSubMesh(k,Q){if(!this._isEnabled)return;const i=this._material.isFrozen;k.useUbo&&i&&k.isSync||this._texture&&B.d.DetailTextureEnabled&&(k.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,O.m)(this._texture,k,"detail")),Q.texturesEnabled&&this._texture&&B.d.DetailTextureEnabled&&k.setTexture("detailSampler",this._texture)}hasTexture(k){return this._texture===k}getActiveTextures(k){this._texture&&k.push(this._texture)}getAnimatables(k){this._texture&&this._texture.animations&&this._texture.animations.length>0&&k.push(this._texture)}dispose(k){var Q;k&&(null===(Q=this._texture)||void 0===Q||Q.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(k){k.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Z.c)([(0,C.E)("detailTexture"),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"texture",void 0),(0,Z.c)([(0,C.L)()],G.prototype,"diffuseBlendLevel",void 0),(0,Z.c)([(0,C.L)()],G.prototype,"roughnessBlendLevel",void 0),(0,Z.c)([(0,C.L)()],G.prototype,"bumpLevel",void 0),(0,Z.c)([(0,C.L)(),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"normalBlendMethod",void 0),(0,Z.c)([(0,C.L)(),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"isEnabled",void 0)},11666:(k,Q,i)=>{i.d(Q,{b:()=>Z});class Z{constructor(k){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=k,k)for(const Q in k)Object.prototype.hasOwnProperty.call(k,Q)&&this._setDefaultValue(Q)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||k,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const k of Object.keys(this))"_"!==k[0]&&this._keys.push(k);if(this._externalProperties)for(const k in this._externalProperties)-1===this._keys.indexOf(k)&&this._keys.push(k)}isEqual(k){if(this._keys.length!==k._keys.length)return!1;for(let Q=0;Q<this._keys.length;Q++){const i=this._keys[Q];if(this[i]!==k[i])return!1}return!0}cloneTo(k){this._keys.length!==k._keys.length&&(k._keys=this._keys.slice(0));for(let Q=0;Q<this._keys.length;Q++){const i=this._keys[Q];k[i]=this[i]}}reset(){for(const k of this._keys)this._setDefaultValue(k)}_setDefaultValue(k){var Q,i,Z,U;const C=(null===(Q=this._externalProperties)||void 0===Q||null===(i=Q[k])||void 0===i?void 0:i.type)??typeof this[k],B=null===(Z=this._externalProperties)||void 0===Z||null===(U=Z[k])||void 0===U?void 0:U.default;switch(C){case"number":this[k]=B??0;break;case"string":this[k]=B??"";break;default:this[k]=B??!1}}toString(){let k="";for(let Q=0;Q<this._keys.length;Q++){const i=this._keys[Q],Z=this[i];switch(typeof Z){case"number":case"string":k+="#define "+i+" "+Z+"\n";break;default:Z&&(k+="#define "+i+"\n")}}return k}}},11669:(k,Q,i)=>{i.d(Q,{d:()=>U});var Z=i(11195);class U{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(k){this._DiffuseTextureEnabled!==k&&(this._DiffuseTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(k){this._BaseWeightTextureEnabled!==k&&(this._BaseWeightTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(k){this._BaseDiffuseRoughnessTextureEnabled!==k&&(this._BaseDiffuseRoughnessTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(k){this._DetailTextureEnabled!==k&&(this._DetailTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(k){this._DecalMapEnabled!==k&&(this._DecalMapEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(k){this._AmbientTextureEnabled!==k&&(this._AmbientTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(k){this._OpacityTextureEnabled!==k&&(this._OpacityTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(k){this._ReflectionTextureEnabled!==k&&(this._ReflectionTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(k){this._EmissiveTextureEnabled!==k&&(this._EmissiveTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(k){this._SpecularTextureEnabled!==k&&(this._SpecularTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(k){this._BumpTextureEnabled!==k&&(this._BumpTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(k){this._LightmapTextureEnabled!==k&&(this._LightmapTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(k){this._RefractionTextureEnabled!==k&&(this._RefractionTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(k){this._ColorGradingTextureEnabled!==k&&(this._ColorGradingTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(k){this._FresnelEnabled!==k&&(this._FresnelEnabled=k,Z.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(k){this._ClearCoatTextureEnabled!==k&&(this._ClearCoatTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(k){this._ClearCoatBumpTextureEnabled!==k&&(this._ClearCoatBumpTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(k){this._ClearCoatTintTextureEnabled!==k&&(this._ClearCoatTintTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(k){this._SheenTextureEnabled!==k&&(this._SheenTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(k){this._AnisotropicTextureEnabled!==k&&(this._AnisotropicTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(k){this._ThicknessTextureEnabled!==k&&(this._ThicknessTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(k){this._RefractionIntensityTextureEnabled!==k&&(this._RefractionIntensityTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(k){this._TranslucencyIntensityTextureEnabled!==k&&(this._TranslucencyIntensityTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(k){this._TranslucencyColorTextureEnabled!==k&&(this._TranslucencyColorTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(k){this._IridescenceTextureEnabled!==k&&(this._IridescenceTextureEnabled=k,Z.b.MarkAllMaterialsAsDirty(1))}}U._DiffuseTextureEnabled=!0,U._BaseWeightTextureEnabled=!0,U._BaseDiffuseRoughnessTextureEnabled=!0,U._DetailTextureEnabled=!0,U._DecalMapEnabled=!0,U._AmbientTextureEnabled=!0,U._OpacityTextureEnabled=!0,U._ReflectionTextureEnabled=!0,U._EmissiveTextureEnabled=!0,U._SpecularTextureEnabled=!0,U._BumpTextureEnabled=!0,U._LightmapTextureEnabled=!0,U._RefractionTextureEnabled=!0,U._ColorGradingTextureEnabled=!0,U._FresnelEnabled=!0,U._ClearCoatTextureEnabled=!0,U._ClearCoatBumpTextureEnabled=!0,U._ClearCoatTintTextureEnabled=!0,U._SheenTextureEnabled=!0,U._AnisotropicTextureEnabled=!0,U._ThicknessTextureEnabled=!0,U._RefractionIntensityTextureEnabled=!0,U._TranslucencyIntensityTextureEnabled=!0,U._TranslucencyColorTextureEnabled=!0,U._IridescenceTextureEnabled=!0},11687:(k,Q,i)=>{i.d(Q,{b:()=>C});var Z,U=i(11298);!function(k){k[k.Zero=0]="Zero",k[k.One=1]="One",k[k.MaxViewZ=2]="MaxViewZ"}(Z||(Z={}));class C{static CreateConfiguration(k){return C._Configurations[k]={defines:{},previousWorldMatrices:{},previousViewProjection:U.Matrix.Zero(),currentViewProjection:U.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},C._Configurations[k]}static DeleteConfiguration(k){delete C._Configurations[k]}static GetConfiguration(k){return C._Configurations[k]}static AddUniformsAndSamplers(k,Q){k.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(k,Q){for(const i of Q)if(i.io)for(const Q of i.io)Q._removeDrawWrapper(k)}static PrepareDefines(k,Q,i){if(!i._arePrePassDirty)return;const Z=C._Configurations[k];if(!Z)return;i.PREPASS=!0,i.PREPASS_COLOR=!1,i.PREPASS_COLOR_INDEX=-1;let U=0;for(let B=0;B<C.GeometryTextureDescriptions.length;B++){const k=C.GeometryTextureDescriptions[B],Q=k.define,o=k.defineIndex,m=Z.defines[o];void 0!==m?(i[Q]=!0,i[o]=m,U++):(i[Q]=!1,delete i[o])}i.SCENE_MRT_COUNT=U,i.BONES_VELOCITY_ENABLED=Q.useBones&&Q.computeBonesUsingShaders&&Q.skeleton&&!Q.skeleton.isUsingTextureForMatrices&&-1===Z.excludedSkinnedMesh.indexOf(Q)}static Bind(k,Q,i,Z,U){const B=C._Configurations[k];if(!B)return;const o=i.sk(),m=o.getEngine();if(B.reverseCulling&&m.setStateCullFaceType(o._mirroredCameraPosition?U.cullBackFaces:!U.cullBackFaces),(void 0!==B.defines.PREPASS_VELOCITY_INDEX||void 0!==B.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(B.previousWorldMatrices[i.uniqueId]||(B.previousWorldMatrices[i.uniqueId]=Z.clone()),B.previousViewProjection||(B.previousViewProjection=o.getTransformMatrix().clone(),B.currentViewProjection=o.getTransformMatrix().clone()),B.currentViewProjection.updateFlag!==o.getTransformMatrix().updateFlag?(B.lastUpdateFrameId=m.frameId,B.previousViewProjection.B(B.currentViewProjection),B.currentViewProjection.B(o.getTransformMatrix())):B.lastUpdateFrameId!==m.frameId&&(B.lastUpdateFrameId=m.frameId,B.previousViewProjection.B(B.currentViewProjection)),Q.setMatrix("previousWorld",B.previousWorldMatrices[i.uniqueId]),Q.setMatrix("previousViewProjection",B.previousViewProjection),B.previousWorldMatrices[i.uniqueId]=Z.clone(),i.useBones&&i.computeBonesUsingShaders&&i.skeleton)){const k=i.skeleton;if(!k.isUsingTextureForMatrices||-1===Q.getUniformIndex("boneTextureWidth")){const Z=k.getTransformMatrices(i);Z&&(B.previousBones[i.uniqueId]||(B.previousBones[i.uniqueId]=Z.slice()),Q.setMatrices("mPreviousBones",B.previousBones[i.uniqueId]),B.previousBones[i.uniqueId].set(Z))}}}}C.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],C._Configurations={}},11678:(k,Q,i)=>{i.d(Q,{d:()=>l});var Z=i(11280),U=i(11289),C=i(11615),B=i(11157),o=i(11183),m=i(11210);const O=new RegExp("^([gimus]+)!");class J{constructor(k){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=k,this._scene=k.sk(),this._engine=this._scene.getEngine()}_addPlugin(k){for(let Z=0;Z<this._plugins.length;++Z)if(this._plugins[Z].name===k.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!k.isCompatible(this._material.shaderLanguage))throw`The plugin "${k.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const Q=k.getClassName();J._MaterialPluginClassToMainDefine[Q]||(J._MaterialPluginClassToMainDefine[Q]="MATERIALPLUGIN_"+ ++J._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(k,Q)=>this._handlePluginEvent(k,Q),this._plugins.push(k),this._plugins.sort(((k,Q)=>k.priority-Q.priority)),this._codeInjectionPoints={};const i={};i[J._MaterialPluginClassToMainDefine[Q]]={type:"boolean",default:!0};for(const Z of this._plugins)Z.collectDefines(i),this._collectPointNames("vertex",Z.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Z.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=i,!0}_activatePlugin(k){-1===this._activePlugins.indexOf(k)&&(this._activePlugins.push(k),this._activePlugins.sort(((k,Q)=>k.priority-Q.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),k.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(k),this._activePluginsForExtraEvents.sort(((k,Q)=>k.priority-Q.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(k){for(let Q=0;Q<this._plugins.length;++Q)if(this._plugins[Q].name===k)return this._plugins[Q];return null}_handlePluginEventIsReadyForSubMesh(k){let Q=!0;for(const i of this._activePlugins)Q=Q&&i.isReadyForSubMesh(k.defines,this._scene,this._engine,k.subMesh);k.isReadyForSubMesh=Q}_handlePluginEventPrepareDefinesBeforeAttributes(k){for(const Q of this._activePlugins)Q.prepareDefinesBeforeAttributes(k.defines,this._scene,k.mesh)}_handlePluginEventPrepareDefines(k){for(const Q of this._activePlugins)Q.prepareDefines(k.defines,this._scene,k.mesh)}_handlePluginEventHardBindForSubMesh(k){for(const Q of this._activePluginsForExtraEvents)Q.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,k.subMesh)}_handlePluginEventBindForSubMesh(k){for(const Q of this._activePlugins)Q.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,k.subMesh)}_handlePluginEventHasRenderTargetTextures(k){let Q=!1;for(const i of this._activePluginsForExtraEvents)if(Q=i.hasRenderTargetTextures(),Q)break;k.hasRenderTargetTextures=Q}_handlePluginEventFillRenderTargetTextures(k){for(const Q of this._activePluginsForExtraEvents)Q.fillRenderTargetTextures(k.renderTargets)}_handlePluginEvent(k,Q){switch(k){case 512:{const k=Q;for(const Q of this._activePlugins)Q.getActiveTextures(k.activeTextures);break}case 256:{const k=Q;for(const Q of this._activePlugins)Q.getAnimatables(k.animatables);break}case 1024:{const k=Q;let i=!1;for(const Q of this._activePlugins)if(i=Q.hasTexture(k.texture),i)break;k.hasTexture=i;break}case 2:{const k=Q;for(const Q of this._plugins)Q.dispose(k.forceDisposeTextures);break}case 4:Q.defineNames=this._defineNamesFromPlugins;break;case 128:{const k=Q;for(const Q of this._activePlugins)k.fallbackRank=Q.addFallbacks(k.defines,k.fallbacks,k.fallbackRank),Q.getAttributes(k.attributes,this._scene,k.mesh);this._uniformList.length>0&&k.uniforms.push(...this._uniformList),this._samplerList.length>0&&k.samplers.push(...this._samplerList),this._uboList.length>0&&k.uniformBuffersNames.push(...this._uboList),k.customCode=this._injectCustomCode(k,k.customCode);break}case 8:{const k=Q;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const i=1===this._material.shaderLanguage;for(const Q of this._plugins){const Z=Q.getUniforms(this._material.shaderLanguage);if(Z){if(Z.ubo)for(const Q of Z.ubo){if(Q.size&&Q.type){const Z=Q.arraySize??0;if(k.ubo.addUniform(Q.name,Q.size,Z),i){let k;switch(Q.type){case"mat4":k="mat4x4f";break;case"float":k="f32";break;default:k=`${Q.type}f`}this._uboDeclaration+=Z>0?`uniform ${Q.name}: array<${k}, ${Z}>;\n`:`uniform ${Q.name}: ${k};\n`}else this._uboDeclaration+=`${Q.type} ${Q.name}${Z>0?`[${Z}]`:""};\n`}this._uniformList.push(Q.name)}Z.vertex&&(this._vertexDeclaration+=Z.vertex+"\n"),Z.fragment&&(this._fragmentDeclaration+=Z.fragment+"\n")}Q.getSamplers(this._samplerList),Q.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(k,Q){if(Q)for(const i in Q)this._codeInjectionPoints[k]||(this._codeInjectionPoints[k]={}),this._codeInjectionPoints[k][i]=!0}_injectCustomCode(k,Q){return(i,Z)=>{var U;Q&&(Z=Q(i,Z)),this._uboDeclaration&&(Z=Z.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Z=Z.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Z=Z.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const C=null===(U=this._codeInjectionPoints)||void 0===U?void 0:U[i];if(!C)return Z;let B=null;for(let Q in C){let U="";for(const Z of this._activePlugins){var J;let C=null===(J=Z.getCustomCode(i,this._material.shaderLanguage))||void 0===J?void 0:J[Q];if(C){if(Z.resolveIncludes){if(null===B){const Q=0;B={defines:[],indexParameters:k.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:m.d.GetShadersRepository(Q),includesShadersStore:m.d.GetIncludesShadersStore(Q),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}B.isFragment="fragment"===i,(0,o.l)(C,B,(k=>C=k))}U+=C+"\n"}}if(U.length>0)if("!"===Q.charAt(0)){Q=Q.substring(1);let k="g";if("!"===Q.charAt(0))k="",Q=Q.substring(1);else{const i=O.exec(Q);i&&i.length>=2&&(k=i[1],Q=Q.substring(k.length+1))}k.indexOf("g")<0&&(k+="g");const i=Z,C=new RegExp(Q,k);let B=C.exec(i);for(;null!==B;){let k=U;for(let Q=0;Q<B.length;++Q)k=k.replace("$"+Q,B[Q]);Z=Z.replace(B[0],k),B=C.exec(i)}}else{const k="#define "+Q;Z=Z.replace(k,"\n"+U+"\n"+k)}}return Z}}}J._MaterialPluginClassToMainDefine={},J._MaterialPluginCounter=0,B.b.OnEnginesDisposedObservable.add((()=>{F()}));const G=[];let H=!1,e=null;function F(){G.length=0,H=!1,C.c.OnEventObservable.remove(e),e=null}var z=i(11334),E=i(11253);class l{isCompatible(k){return 0===k}_enable(k){k&&this._pluginManager._activatePlugin(this)}constructor(k,Q,i,Z){let U=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=k,this.name=Q,this.priority=i,this.resolveIncludes=B,k.pluginManager||(k.pluginManager=new J(k),k.gi.add((()=>{k.pluginManager=void 0}))),this._pluginDefineNames=Z,this._pluginManager=k.pluginManager,U&&this._pluginManager._addPlugin(this),C&&this._enable(!0),this.markAllDefinesAsDirty=k._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(k,Q,i,Z){return!0}hardBindForSubMesh(k,Q,i,Z){}bindForSubMesh(k,Q,i,Z){}dispose(k){}getCustomCode(k){return null}collectDefines(k){if(this._pluginDefineNames)for(const Q of Object.keys(this._pluginDefineNames)){if("_"===Q[0])continue;const i=typeof this._pluginDefineNames[Q];k[Q]={type:"number"===i?"number":"string"===i?"string":"boolean"===i?"boolean":"object",default:this._pluginDefineNames[Q]}}}prepareDefinesBeforeAttributes(k,Q,i){}prepareDefines(k,Q,i){}hasTexture(k){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(k){}getActiveTextures(k){}getAnimatables(k){}addFallbacks(k,Q,i){return i}getSamplers(k){}getAttributes(k,Q,i){}getUniformBuffersNames(k){}getUniforms(){return{}}copyTo(k){z.d.Clone((()=>k),this)}serialize(){return z.d.Serialize(this)}parse(k,Q,i){z.d.Parse((()=>this),k,Q,i)}}(0,Z.c)([(0,U.L)()],l.prototype,"name",void 0),(0,Z.c)([(0,U.L)()],l.prototype,"priority",void 0),(0,Z.c)([(0,U.L)()],l.prototype,"resolveIncludes",void 0),(0,Z.c)([(0,U.L)()],l.prototype,"registerForExtraEvents",void 0),(0,E.e)("BABYLON.MaterialPluginBase",l)},11661:(k,Q,i)=>{i.d(Q,{c:()=>Z});class Z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(k){k.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(k){}bindForSubMesh(k,Q,i,Z,U){if(Q.prePassRenderer&&Q.prePassRenderer.enabled&&Q.prePassRenderer.currentRTisSceneRT&&(-1!==Q.prePassRenderer.getIndex(2)||-1!==Q.prePassRenderer.getIndex(11))){this.previousWorldMatrices[i.uniqueId]||(this.previousWorldMatrices[i.uniqueId]=Z.clone()),this.previousViewProjection||(this.previousViewProjection=Q.getTransformMatrix().clone(),this.currentViewProjection=Q.getTransformMatrix().clone());const U=Q.getEngine();this.currentViewProjection.updateFlag!==Q.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=U.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(Q.getTransformMatrix())):this._lastUpdateFrameId!==U.frameId&&(this._lastUpdateFrameId=U.frameId,this.previousViewProjection.B(this.currentViewProjection)),k.setMatrix("previousWorld",this.previousWorldMatrices[i.uniqueId]),k.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[i.uniqueId]=Z.clone()}}}},11659:(k,Q,i)=>{i.d(Q,{hQ:()=>u});var Z=i(11280),U=i(11289),C=i(11396),B=i(11538),o=i(11348),m=i(11378),O=i(11661),J=i(11541),G=i(11615),H=i(11666),e=i(11607),F=i(11273),z=i(11253),E=i(11669),l=i(11603),h=i(11672),c=i(11657),f=i(11652),Y=i(11334),y=i(11687);const L={effect:null,subMesh:null};class s extends H.b{constructor(k){super(k),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(k){const Q=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const i of Q)this[i]=i===k}}class u extends e.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(k){this._attachImageProcessingConfiguration(k),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(k){k!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=k||this.sk().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(k){this.imageProcessingConfiguration.colorCurvesEnabled=k}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(k){this.imageProcessingConfiguration.colorGradingEnabled=k}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(k){this._imageProcessingConfiguration.toneMappingEnabled=k}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(k){this._imageProcessingConfiguration.exposure=k}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(k){this._imageProcessingConfiguration.contrast=k}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(k){this._imageProcessingConfiguration.colorGradingTexture=k}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(k){this._imageProcessingConfiguration.colorCurves=k}get canRenderToMRT(){return!0}constructor(k,Q){super(k,Q,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||u.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new o.cQ(0,0,0),this.diffuseColor=new o.cQ(1,1,1),this.specularColor=new o.cQ(1,1,1),this.emissiveColor=new o.cQ(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new C.f(16),this._globalAmbientColor=new o.cQ(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new h.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new O.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"hQ"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===G.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Uo&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==G.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Uo||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(k,Q){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const U=Q._drawWrapper;if(U.effect&&this.isFrozen&&U._wasPreviouslyReady&&U._wasPreviouslyUsingInstances===Z)return!0;Q.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),Q.materialDefines=new s(this._eventInfo.defineNames));const C=this.sk(),B=Q.materialDefines;if(this._isReadyForSubMesh(Q))return!0;const o=C.getEngine();B._needNormals=(0,f.L)(C,k,B,!0,this._maxSimultaneousLights,this._disableLighting),(0,f.T)(C,B);const G=this.needAlphaBlendingForMesh(k)&&this.sk().useOrderIndependentTransparency;if((0,f.Y)(C,B,this.canRenderToMRT&&!G),(0,f.X)(C,B,G),y.b.PrepareDefines(o.currentRenderPassId,k,B),B._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,B._needUVs=!1;for(let k=1;k<=6;++k)B["MAINUV"+k]=!1;if(C.texturesEnabled){if(B.DIFFUSEDIRECTUV=0,B.BUMPDIRECTUV=0,B.AMBIENTDIRECTUV=0,B.OPACITYDIRECTUV=0,B.EMISSIVEDIRECTUV=0,B.SPECULARDIRECTUV=0,B.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&u.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._diffuseTexture,B,"DIFFUSE")}else B.DIFFUSE=!1;if(this._ambientTexture&&u.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._ambientTexture,B,"AMBIENT")}else B.AMBIENT=!1;if(this._opacityTexture&&u.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._opacityTexture,B,"OPACITY"),B.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else B.OPACITY=!1;if(this._reflectionTexture&&u.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(B._needNormals=!0,B.REFLECTION=!0,B.ROUGHNESS=this._roughness>0,B.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,B.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===F.c.INVCUBIC_MODE,B.REFLECTIONMAP_3D=this._reflectionTexture.isCube,B.REFLECTIONMAP_OPPOSITEZ=B.REFLECTIONMAP_3D&&this.sk().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,B.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case F.c.EXPLICIT_MODE:B.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case F.c.PLANAR_MODE:B.setReflectionMode("REFLECTIONMAP_PLANAR");break;case F.c.PROJECTION_MODE:B.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case F.c.SKYBOX_MODE:B.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case F.c.SPHERICAL_MODE:B.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case F.c.EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case F.c.FIXED_EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case F.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:B.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case F.c.CUBIC_MODE:case F.c.INVCUBIC_MODE:default:B.setReflectionMode("REFLECTIONMAP_CUBIC")}B.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else B.REFLECTION=!1,B.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&u.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._emissiveTexture,B,"EMISSIVE")}else B.EMISSIVE=!1;if(this._lightmapTexture&&u.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._lightmapTexture,B,"LIGHTMAP"),B.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,B.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else B.LIGHTMAP=!1;if(this._specularTexture&&u.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,f.O)(this._specularTexture,B,"SPECULAR"),B.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else B.SPECULAR=!1;if(C.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&u.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,f.O)(this._bumpTexture,B,"BUMP"),B.PARALLAX=this._useParallax,B.PARALLAX_RHS=C.useRightHandedSystem,B.PARALLAXOCCLUSION=this._useParallaxOcclusion,B.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else B.BUMP=!1,B.PARALLAX=!1,B.PARALLAX_RHS=!1,B.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&u.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;B._needUVs=!0,B.REFRACTION=!0,B.REFRACTIONMAP_3D=this._refractionTexture.isCube,B.RGBDREFRACTION=this._refractionTexture.isRGBD,B.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else B.REFRACTION=!1;B.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else B.DIFFUSE=!1,B.AMBIENT=!1,B.OPACITY=!1,B.REFLECTION=!1,B.EMISSIVE=!1,B.LIGHTMAP=!1,B.BUMP=!1,B.REFRACTION=!1;B.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),B.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,B.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,B.SPECULAROVERALPHA=this._useSpecularOverAlpha,B.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,B.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,B.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(k)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._eventInfo.subMesh=Q,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(B._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(B),B.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,B.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(B._areFresnelDirty&&(u.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(B.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,B.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,B.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,B.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,B.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,B.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,B._needNormals=!0,B.FRESNEL=!0):B.FRESNEL=!1),B.AREALIGHTUSED)for(let i=0;i<k.lightSources.length;i++)if(!k.lightSources[i]._isReady())return!1;(0,f.S)(k,C,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(k),B,this._applyDecalMapAfterDetailMap),(0,f.K)(C,o,this,B,Z,null,Q.getRenderingMesh().hasThinInstances),this._eventInfo.defines=B,this._eventInfo.mesh=k,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,f.H)(k,B,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let H=!1;if(B.isDirty){const Z=B._areLightsDisposed;B.markAsProcessed();const U=new l.e;B.REFLECTION&&U.addFallback(0,"REFLECTION"),B.SPECULAR&&U.addFallback(0,"SPECULAR"),B.BUMP&&U.addFallback(0,"BUMP"),B.PARALLAX&&U.addFallback(1,"PARALLAX"),B.PARALLAX_RHS&&U.addFallback(1,"PARALLAX_RHS"),B.PARALLAXOCCLUSION&&U.addFallback(0,"PARALLAXOCCLUSION"),B.SPECULAROVERALPHA&&U.addFallback(0,"SPECULAROVERALPHA"),B.FOG&&U.addFallback(1,"FOG"),B.POINTSIZE&&U.addFallback(0,"POINTSIZE"),B.LOGARITHMICDEPTH&&U.addFallback(0,"LOGARITHMICDEPTH"),(0,f.o)(B,U,this._maxSimultaneousLights),B.SPECULARTERM&&U.addFallback(0,"SPECULARTERM"),B.DIFFUSEFRESNEL&&U.addFallback(1,"DIFFUSEFRESNEL"),B.OPACITYFRESNEL&&U.addFallback(2,"OPACITYFRESNEL"),B.REFLECTIONFRESNEL&&U.addFallback(3,"REFLECTIONFRESNEL"),B.EMISSIVEFRESNEL&&U.addFallback(4,"EMISSIVEFRESNEL"),B.FRESNEL&&U.addFallback(4,"FRESNEL"),B.MULTIVIEW&&U.addFallback(0,"MULTIVIEW");const G=[m.h.PositionKind];B.NORMAL&&G.push(m.h.NormalKind),B.TANGENT&&G.push(m.h.TangentKind);for(let k=1;k<=6;++k)B["UV"+k]&&G.push(`uv${1===k?"":k}`);B.VERTEXCOLOR&&G.push(m.h.ColorKind),(0,f.w)(G,k,B,U),(0,f.z)(G,B),(0,f.D)(G,k,B),(0,f.s)(G,k,B);let e="default";const F=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],z=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],E=["Material","Scene","Mesh"],h={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:B.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=U,this._eventInfo.fallbackRank=0,this._eventInfo.defines=B,this._eventInfo.uniforms=F,this._eventInfo.attributes=G,this._eventInfo.samplers=z,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=k,this._eventInfo.indexParameters=h,this._callbackPluginEventGeneric(128,this._eventInfo),y.b.AddUniformsAndSamplers(F,z),O.c.AddUniforms(F),O.c.AddSamplers(z),J.b&&(J.b.PrepareUniforms(F,B),J.b.PrepareSamplers(z,B)),(0,f.$)({uniformsNames:F,uniformBuffersNames:E,samplers:z,defines:B,maxSimultaneousLights:this._maxSimultaneousLights}),(0,c.c)(F);const Y={};this.customShaderNameResolve&&(e=this.customShaderNameResolve(e,F,E,z,B,G,Y));const s=B.toString(),u=Q.effect;let a=C.getEngine().createEffect(e,{attributes:G,uniformsNames:F,uniformBuffersNames:E,samplers:z,defines:s,fallbacks:U,onCompiled:this.onCompiled,onError:this.onError,indexParameters:h,processFinalCode:Y.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:B.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([i.e(41),i.e(64)]).then(i.bind(i,13918)),Promise.all([i.e(39),i.e(65)]).then(i.bind(i,14056))]):await Promise.all([Promise.all([i.e(34),i.e(67)]).then(i.bind(i,14124)),Promise.all([i.e(33),i.e(68)]).then(i.bind(i,14255))]),this._shadersLoaded=!0}},o);if(this._eventInfo.customCode=void 0,a)if(this._onEffectCreatedObservable&&(L.effect=a,L.subMesh=Q,this._onEffectCreatedObservable.notifyObservers(L)),this.allowShaderHotSwapping&&u&&!a.isReady()){if(a=u,B.markAsUnprocessed(),H=this.isFrozen,Z)return B._areLightsDisposed=!0,!1}else C.resetCachedMaterial(),Q.setEffect(a,B,this._materialContext)}return!(!Q.effect||!Q.effect.isReady())&&(B._renderId=C.getRenderId(),U._wasPreviouslyReady=!H,U._wasPreviouslyUsingInstances=Z,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const k=this._uniformBuffer;k.addUniform("diffuseLeftColor",4),k.addUniform("diffuseRightColor",4),k.addUniform("opacityParts",4),k.addUniform("reflectionLeftColor",4),k.addUniform("reflectionRightColor",4),k.addUniform("refractionLeftColor",4),k.addUniform("refractionRightColor",4),k.addUniform("emissiveLeftColor",4),k.addUniform("emissiveRightColor",4),k.addUniform("vDiffuseInfos",2),k.addUniform("vAmbientInfos",2),k.addUniform("vOpacityInfos",2),k.addUniform("vReflectionInfos",2),k.addUniform("vReflectionPosition",3),k.addUniform("vReflectionSize",3),k.addUniform("vEmissiveInfos",2),k.addUniform("vLightmapInfos",2),k.addUniform("vSpecularInfos",2),k.addUniform("vBumpInfos",3),k.addUniform("diffuseMatrix",16),k.addUniform("ambientMatrix",16),k.addUniform("opacityMatrix",16),k.addUniform("reflectionMatrix",16),k.addUniform("emissiveMatrix",16),k.addUniform("lightmapMatrix",16),k.addUniform("specularMatrix",16),k.addUniform("bumpMatrix",16),k.addUniform("vTangentSpaceParams",2),k.addUniform("pointSize",1),k.addUniform("alphaCutOff",1),k.addUniform("refractionMatrix",16),k.addUniform("vRefractionInfos",4),k.addUniform("vRefractionPosition",3),k.addUniform("vRefractionSize",3),k.addUniform("vSpecularColor",4),k.addUniform("vEmissiveColor",3),k.addUniform("vDiffuseColor",4),k.addUniform("vAmbientColor",3),k.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(k,Q,i){const Z=this.sk(),U=i.materialDefines;if(!U)return;const C=i.effect;if(!C)return;this._activeEffect=C,Q.getMeshUniformBuffer().bindToEffect(C,"Mesh"),Q.transferToEffect(k),this._uniformBuffer.bindToEffect(C,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Z,Q,k,this.isFrozen),y.b.Bind(Z.getEngine().currentRenderPassId,this._activeEffect,Q,k,this);const m=Z.activeCamera;m?this._uniformBuffer.updateFloat4("cameraInfo",m.Co,m.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=i,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),U.OBJECTSPACE_NORMALMAP&&(k.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const O=this._mustRebind(Z,C,i,Q.visibility);(0,f.c)(Q,C);const J=this._uniformBuffer;if(O){if(this.bindViewProjection(C),!J.useUbo||!this.isFrozen||!J.isSync||i._drawWrapper._forceRebindOnNextCall){if(u.FresnelEnabled&&U.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(J.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),J.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&J.updateColor4("opacityParts",new o.cQ(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(J.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),J.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(J.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),J.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(J.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),J.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Z.texturesEnabled){if(this._diffuseTexture&&u.DiffuseTextureEnabled&&(J.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,f.m)(this._diffuseTexture,J,"diffuse")),this._ambientTexture&&u.AmbientTextureEnabled&&(J.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,f.m)(this._ambientTexture,J,"ambient")),this._opacityTexture&&u.OpacityTextureEnabled&&(J.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,f.m)(this._opacityTexture,J,"opacity")),this._hasAlphaChannel()&&J.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&u.ReflectionTextureEnabled){if(J.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),J.Bo("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const k=this._reflectionTexture;J.updateVector3("vReflectionPosition",k.boundingBoxPosition),J.updateVector3("vReflectionSize",k.boundingBoxSize)}}else J.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&u.EmissiveTextureEnabled&&(J.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,f.m)(this._emissiveTexture,J,"emissive")),this._lightmapTexture&&u.LightmapTextureEnabled&&(J.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,f.m)(this._lightmapTexture,J,"lightmap")),this._specularTexture&&u.SpecularTextureEnabled&&(J.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,f.m)(this._specularTexture,J,"specular")),this._bumpTexture&&Z.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&(J.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,f.m)(this._bumpTexture,J,"bump"),Z._mirroredCameraPosition?J.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):J.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&u.RefractionTextureEnabled){let k=1;if(this._refractionTexture.isCube||(J.Bo("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(k=this._refractionTexture.depth)),J.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,k,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const k=this._refractionTexture;J.updateVector3("vRefractionPosition",k.boundingBoxPosition),J.updateVector3("vRefractionSize",k.boundingBoxSize)}}}this.pointsCloud&&J.updateFloat("pointSize",this.pointSize),J.updateColor4("vSpecularColor",this.specularColor,this.specularPower),J.updateColor3("vEmissiveColor",u.EmissiveTextureEnabled?this.emissiveColor:o.cQ.BlackReadOnly),J.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Z.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),J.updateColor3("vAmbientColor",this._globalAmbientColor)}Z.texturesEnabled&&(this._diffuseTexture&&u.DiffuseTextureEnabled&&C.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&u.AmbientTextureEnabled&&C.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&u.OpacityTextureEnabled&&C.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&u.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?C.setTexture("reflectionCubeSampler",this._reflectionTexture):C.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&u.EmissiveTextureEnabled&&C.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&u.LightmapTextureEnabled&&C.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&u.SpecularTextureEnabled&&C.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Z.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&C.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&u.RefractionTextureEnabled&&(this._refractionTexture.isCube?C.setTexture("refractionCubeSampler",this._refractionTexture):C.setTexture("refraction2DSampler",this._refractionTexture))),this.sk().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(Q)&&this.sk().depthPeelingRenderer.bind(C),this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,c.g)(C,this,Z),this.bindEyePosition(C)}else Z.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(O||!this.isFrozen){var G;if(Z.lightsEnabled&&!this._disableLighting&&(0,f.h)(Z,Q,C,U,this._maxSimultaneousLights),(Z.fogEnabled&&Q.applyFog&&Z.fogMode!==B.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||Q.receiveShadows||U.PREPASS)&&this.bindView(C),(0,f.e)(Z,Q,C),U.NUM_MORPH_INFLUENCERS&&(0,f.k)(Q,C),U.BAKED_VERTEX_ANIMATION_TEXTURE)null===(G=Q.bakedVertexAnimationManager)||void 0===G||G.bind(C,U.INSTANCES);this.useLogarithmicDepth&&(0,f.j)(U,C,Z),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(Q,this._activeEffect,i),J.update()}getAnimatables(){const k=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&k.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&k.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&k.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&k.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&k.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&k.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&k.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&k.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&k.push(this._refractionTexture),k}getActiveTextures(){const k=super.getActiveTextures();return this._diffuseTexture&&k.push(this._diffuseTexture),this._ambientTexture&&k.push(this._ambientTexture),this._opacityTexture&&k.push(this._opacityTexture),this._reflectionTexture&&k.push(this._reflectionTexture),this._emissiveTexture&&k.push(this._emissiveTexture),this._specularTexture&&k.push(this._specularTexture),this._bumpTexture&&k.push(this._bumpTexture),this._lightmapTexture&&k.push(this._lightmapTexture),this._refractionTexture&&k.push(this._refractionTexture),k}hasTexture(k){return!!super.hasTexture(k)||(this._diffuseTexture===k||(this._ambientTexture===k||(this._opacityTexture===k||(this._reflectionTexture===k||(this._emissiveTexture===k||(this._specularTexture===k||(this._bumpTexture===k||(this._lightmapTexture===k||this._refractionTexture===k))))))))}dispose(k,Q){var i,Z,U,C,B,o,m,O,J;Q&&(null===(i=this._diffuseTexture)||void 0===i||i.dispose(),null===(Z=this._ambientTexture)||void 0===Z||Z.dispose(),null===(U=this._opacityTexture)||void 0===U||U.dispose(),null===(C=this._reflectionTexture)||void 0===C||C.dispose(),null===(B=this._emissiveTexture)||void 0===B||B.dispose(),null===(o=this._specularTexture)||void 0===o||o.dispose(),null===(m=this._bumpTexture)||void 0===m||m.dispose(),null===(O=this._lightmapTexture)||void 0===O||O.dispose(),null===(J=this._refractionTexture)||void 0===J||J.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(k,Q)}clone(k){let Q=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Z=Y.d.Clone((()=>new u(k,this.sk())),this,{cloneTexturesOnlyOnce:Q});return Z.name=k,Z.id=k,this.stencil.copyTo(Z.stencil),this._clonePlugins(Z,i),Z}static Parse(k,Q,i){const Z=Y.d.Parse((()=>new u(k.name,Q)),k,Q,i);return k.stencil&&Z.stencil.parse(k.stencil,Q,i),G.c._ParsePlugins(k,Z,Q,i),Z}static get DiffuseTextureEnabled(){return E.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(k){E.d.DiffuseTextureEnabled=k}static get DetailTextureEnabled(){return E.d.DetailTextureEnabled}static set DetailTextureEnabled(k){E.d.DetailTextureEnabled=k}static get AmbientTextureEnabled(){return E.d.AmbientTextureEnabled}static set AmbientTextureEnabled(k){E.d.AmbientTextureEnabled=k}static get OpacityTextureEnabled(){return E.d.OpacityTextureEnabled}static set OpacityTextureEnabled(k){E.d.OpacityTextureEnabled=k}static get ReflectionTextureEnabled(){return E.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(k){E.d.ReflectionTextureEnabled=k}static get EmissiveTextureEnabled(){return E.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(k){E.d.EmissiveTextureEnabled=k}static get SpecularTextureEnabled(){return E.d.SpecularTextureEnabled}static set SpecularTextureEnabled(k){E.d.SpecularTextureEnabled=k}static get BumpTextureEnabled(){return E.d.BumpTextureEnabled}static set BumpTextureEnabled(k){E.d.BumpTextureEnabled=k}static get LightmapTextureEnabled(){return E.d.LightmapTextureEnabled}static set LightmapTextureEnabled(k){E.d.LightmapTextureEnabled=k}static get RefractionTextureEnabled(){return E.d.RefractionTextureEnabled}static set RefractionTextureEnabled(k){E.d.RefractionTextureEnabled=k}static get ColorGradingTextureEnabled(){return E.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(k){E.d.ColorGradingTextureEnabled=k}static get FresnelEnabled(){return E.d.FresnelEnabled}static set FresnelEnabled(k){E.d.FresnelEnabled=k}}u.ForceGLSL=!1,(0,Z.c)([(0,U.E)("diffuseTexture")],u.prototype,"_diffuseTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"diffuseTexture",void 0),(0,Z.c)([(0,U.E)("ambientTexture")],u.prototype,"_ambientTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"ambientTexture",void 0),(0,Z.c)([(0,U.E)("opacityTexture")],u.prototype,"_opacityTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"opacityTexture",void 0),(0,Z.c)([(0,U.E)("reflectionTexture")],u.prototype,"_reflectionTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"reflectionTexture",void 0),(0,Z.c)([(0,U.E)("emissiveTexture")],u.prototype,"_emissiveTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"emissiveTexture",void 0),(0,Z.c)([(0,U.E)("specularTexture")],u.prototype,"_specularTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"specularTexture",void 0),(0,Z.c)([(0,U.E)("bumpTexture")],u.prototype,"_bumpTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"bumpTexture",void 0),(0,Z.c)([(0,U.E)("lightmapTexture")],u.prototype,"_lightmapTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"lightmapTexture",void 0),(0,Z.c)([(0,U.E)("refractionTexture")],u.prototype,"_refractionTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"refractionTexture",void 0),(0,Z.c)([(0,U.k)("ambient")],u.prototype,"ambientColor",void 0),(0,Z.c)([(0,U.k)("diffuse")],u.prototype,"diffuseColor",void 0),(0,Z.c)([(0,U.k)("specular")],u.prototype,"specularColor",void 0),(0,Z.c)([(0,U.k)("emissive")],u.prototype,"emissiveColor",void 0),(0,Z.c)([(0,U.L)()],u.prototype,"specularPower",void 0),(0,Z.c)([(0,U.L)("useAlphaFromDiffuseTexture")],u.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Z.c)([(0,U.L)("useEmissiveAsIllumination")],u.prototype,"_useEmissiveAsIllumination",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useEmissiveAsIllumination",void 0),(0,Z.c)([(0,U.L)("linkEmissiveWithDiffuse")],u.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"linkEmissiveWithDiffuse",void 0),(0,Z.c)([(0,U.L)("useSpecularOverAlpha")],u.prototype,"_useSpecularOverAlpha",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useSpecularOverAlpha",void 0),(0,Z.c)([(0,U.L)("useReflectionOverAlpha")],u.prototype,"_useReflectionOverAlpha",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useReflectionOverAlpha",void 0),(0,Z.c)([(0,U.L)("disableLighting")],u.prototype,"_disableLighting",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsLightsDirty")],u.prototype,"disableLighting",void 0),(0,Z.c)([(0,U.L)("useObjectSpaceNormalMap")],u.prototype,"_useObjectSpaceNormalMap",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useObjectSpaceNormalMap",void 0),(0,Z.c)([(0,U.L)("useParallax")],u.prototype,"_useParallax",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallax",void 0),(0,Z.c)([(0,U.L)("useParallaxOcclusion")],u.prototype,"_useParallaxOcclusion",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallaxOcclusion",void 0),(0,Z.c)([(0,U.L)()],u.prototype,"parallaxScaleBias",void 0),(0,Z.c)([(0,U.L)("roughness")],u.prototype,"_roughness",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"roughness",void 0),(0,Z.c)([(0,U.L)()],u.prototype,"indexOfRefraction",void 0),(0,Z.c)([(0,U.L)()],u.prototype,"invertRefractionY",void 0),(0,Z.c)([(0,U.L)()],u.prototype,"alphaCutOff",void 0),(0,Z.c)([(0,U.L)("useLightmapAsShadowmap")],u.prototype,"_useLightmapAsShadowmap",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useLightmapAsShadowmap",void 0),(0,Z.c)([(0,U.n)("diffuseFresnelParameters")],u.prototype,"_diffuseFresnelParameters",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"diffuseFresnelParameters",void 0),(0,Z.c)([(0,U.n)("opacityFresnelParameters")],u.prototype,"_opacityFresnelParameters",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],u.prototype,"opacityFresnelParameters",void 0),(0,Z.c)([(0,U.n)("reflectionFresnelParameters")],u.prototype,"_reflectionFresnelParameters",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"reflectionFresnelParameters",void 0),(0,Z.c)([(0,U.n)("refractionFresnelParameters")],u.prototype,"_refractionFresnelParameters",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"refractionFresnelParameters",void 0),(0,Z.c)([(0,U.n)("emissiveFresnelParameters")],u.prototype,"_emissiveFresnelParameters",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"emissiveFresnelParameters",void 0),(0,Z.c)([(0,U.L)("useReflectionFresnelFromSpecular")],u.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Z.c)([(0,U.L)("useGlossinessFromSpecularMapAlpha")],u.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Z.c)([(0,U.L)("maxSimultaneousLights")],u.prototype,"_maxSimultaneousLights",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsLightsDirty")],u.prototype,"maxSimultaneousLights",void 0),(0,Z.c)([(0,U.L)("invertNormalMapX")],u.prototype,"_invertNormalMapX",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapX",void 0),(0,Z.c)([(0,U.L)("invertNormalMapY")],u.prototype,"_invertNormalMapY",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapY",void 0),(0,Z.c)([(0,U.L)("twoSidedLighting")],u.prototype,"_twoSidedLighting",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"twoSidedLighting",void 0),(0,Z.c)([(0,U.L)("applyDecalMapAfterDetailMap")],u.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Z.c)([(0,U.e)("_markAllSubMeshesAsMiscDirty")],u.prototype,"applyDecalMapAfterDetailMap",void 0),(0,z.e)("BABYLON.StandardMaterial",u),B.b.DefaultMaterialFactory=k=>new u("default material",k)}}]);