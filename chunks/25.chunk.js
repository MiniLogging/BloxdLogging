"use strict";(self.u4k1rqylno=self.u4k1rqylno||[]).push([[25],{12111:(e,E,H)=>{H.d(E,{d:()=>i});var N=H(11717),u=H(12047),z=H(11723),P=H(12108),M=H(12103),D=H(12117),A=H(12080);class C extends M.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class i extends D.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(e){let E=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(e,"DetailMap",140,new C,E),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=u.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=e._dirtyCallbacks[1]}isReadyForSubMesh(e,E,H){return!this._isEnabled||!(e._areTexturesDirty&&E.texturesEnabled&&H.getCaps().standardDerivatives&&this._texture&&P.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(e,E){if(this._isEnabled){e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const H=E.getEngine();e._areTexturesDirty&&(H.getCaps().standardDerivatives&&this._texture&&P.e.DetailTextureEnabled&&this._isEnabled?((0,A.Q)(this._texture,e,"DETAIL"),e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):e.DETAIL=!1)}else e.DETAIL=!1}bindForSubMesh(e,E){if(!this._isEnabled)return;const H=this._material.isFrozen;e.useUbo&&H&&e.isSync||this._texture&&P.e.DetailTextureEnabled&&(e.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,A.r)(this._texture,e,"detail")),E.texturesEnabled&&this._texture&&P.e.DetailTextureEnabled&&e.setTexture("detailSampler",this._texture)}hasTexture(e){return this._texture===e}getActiveTextures(e){this._texture&&e.push(this._texture)}getAnimatables(e){this._texture&&this._texture.animations&&this._texture.animations.length>0&&e.push(this._texture)}dispose(e){var E;e&&(null===(E=this._texture)||void 0===E||E.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(e){e.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,N.e)([(0,z.H)("detailTexture"),(0,z.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"texture",void 0),(0,N.e)([(0,z.S)()],i.prototype,"diffuseBlendLevel",void 0),(0,N.e)([(0,z.S)()],i.prototype,"roughnessBlendLevel",void 0),(0,N.e)([(0,z.S)()],i.prototype,"bumpLevel",void 0),(0,N.e)([(0,z.S)(),(0,z.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"normalBlendMethod",void 0),(0,N.e)([(0,z.S)(),(0,z.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"isEnabled",void 0)},12103:(e,E,H)=>{H.d(E,{b:()=>N});class N{constructor(e){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=e,e)for(const E in e)Object.prototype.hasOwnProperty.call(e,E)&&this._setDefaultValue(E)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||e,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const e of Object.keys(this))"_"!==e[0]&&this._keys.push(e);if(this._externalProperties)for(const e in this._externalProperties)-1===this._keys.indexOf(e)&&this._keys.push(e)}isEqual(e){if(this._keys.length!==e._keys.length)return!1;for(let E=0;E<this._keys.length;E++){const H=this._keys[E];if(this[H]!==e[H])return!1}return!0}cloneTo(e){this._keys.length!==e._keys.length&&(e._keys=this._keys.slice(0));for(let E=0;E<this._keys.length;E++){const H=this._keys[E];e[H]=this[H]}}reset(){for(const e of this._keys)this._setDefaultValue(e)}_setDefaultValue(e){var E,H,N,u;const z=(null===(E=this._externalProperties)||void 0===E||null===(H=E[e])||void 0===H?void 0:H.type)??typeof this[e],P=null===(N=this._externalProperties)||void 0===N||null===(u=N[e])||void 0===u?void 0:u.default;switch(z){case"number":this[e]=P??0;break;case"string":this[e]=P??"";break;default:this[e]=P??!1}}toString(){let e="";for(let E=0;E<this._keys.length;E++){const H=this._keys[E],N=this[H];switch(typeof N){case"number":case"string":e+="#define "+H+" "+N+"\n";break;default:N&&(e+="#define "+H+"\n")}}return e}}},12108:(e,E,H)=>{H.d(E,{e:()=>u});var N=H(11618);class u{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){this._DiffuseTextureEnabled!==e&&(this._DiffuseTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(e){this._BaseWeightTextureEnabled!==e&&(this._BaseWeightTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(e){this._BaseDiffuseRoughnessTextureEnabled!==e&&(this._BaseDiffuseRoughnessTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(e){this._DetailTextureEnabled!==e&&(this._DetailTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(e){this._DecalMapEnabled!==e&&(this._DecalMapEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(e){this._AmbientTextureEnabled!==e&&(this._AmbientTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(e){this._OpacityTextureEnabled!==e&&(this._OpacityTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){this._ReflectionTextureEnabled!==e&&(this._ReflectionTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){this._EmissiveTextureEnabled!==e&&(this._EmissiveTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(e){this._SpecularTextureEnabled!==e&&(this._SpecularTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(e){this._BumpTextureEnabled!==e&&(this._BumpTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(e){this._LightmapTextureEnabled!==e&&(this._LightmapTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(e){this._RefractionTextureEnabled!==e&&(this._RefractionTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){this._ColorGradingTextureEnabled!==e&&(this._ColorGradingTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(e){this._FresnelEnabled!==e&&(this._FresnelEnabled=e,N.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(e){this._ClearCoatTextureEnabled!==e&&(this._ClearCoatTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(e){this._ClearCoatBumpTextureEnabled!==e&&(this._ClearCoatBumpTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(e){this._ClearCoatTintTextureEnabled!==e&&(this._ClearCoatTintTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(e){this._SheenTextureEnabled!==e&&(this._SheenTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(e){this._AnisotropicTextureEnabled!==e&&(this._AnisotropicTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(e){this._ThicknessTextureEnabled!==e&&(this._ThicknessTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(e){this._RefractionIntensityTextureEnabled!==e&&(this._RefractionIntensityTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(e){this._TranslucencyIntensityTextureEnabled!==e&&(this._TranslucencyIntensityTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(e){this._TranslucencyColorTextureEnabled!==e&&(this._TranslucencyColorTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(e){this._IridescenceTextureEnabled!==e&&(this._IridescenceTextureEnabled=e,N.c.MarkAllMaterialsAsDirty(1))}}u._DiffuseTextureEnabled=!0,u._BaseWeightTextureEnabled=!0,u._BaseDiffuseRoughnessTextureEnabled=!0,u._DetailTextureEnabled=!0,u._DecalMapEnabled=!0,u._AmbientTextureEnabled=!0,u._OpacityTextureEnabled=!0,u._ReflectionTextureEnabled=!0,u._EmissiveTextureEnabled=!0,u._SpecularTextureEnabled=!0,u._BumpTextureEnabled=!0,u._LightmapTextureEnabled=!0,u._RefractionTextureEnabled=!0,u._ColorGradingTextureEnabled=!0,u._FresnelEnabled=!0,u._ClearCoatTextureEnabled=!0,u._ClearCoatBumpTextureEnabled=!0,u._ClearCoatTintTextureEnabled=!0,u._SheenTextureEnabled=!0,u._AnisotropicTextureEnabled=!0,u._ThicknessTextureEnabled=!0,u._RefractionIntensityTextureEnabled=!0,u._TranslucencyIntensityTextureEnabled=!0,u._TranslucencyColorTextureEnabled=!0,u._IridescenceTextureEnabled=!0},12124:(e,E,H)=>{H.d(E,{c:()=>z});var N,u=H(11738);!function(e){e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.MaxViewZ=2]="MaxViewZ"}(N||(N={}));class z{static CreateConfiguration(e){return z._Configurations[e]={defines:{},previousWorldMatrices:{},previousViewProjection:u.Matrix.Zero(),currentViewProjection:u.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},z._Configurations[e]}static DeleteConfiguration(e){delete z._Configurations[e]}static GetConfiguration(e){return z._Configurations[e]}static AddUniformsAndSamplers(e,E){e.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(e,E){for(const H of E)if(H.NM)for(const E of H.NM)E._removeDrawWrapper(e)}static PrepareDefines(e,E,H){if(!H._arePrePassDirty)return;const N=z._Configurations[e];if(!N)return;H.PREPASS=!0,H.PREPASS_COLOR=!1,H.PREPASS_COLOR_INDEX=-1;let u=0;for(let P=0;P<z.GeometryTextureDescriptions.length;P++){const e=z.GeometryTextureDescriptions[P],E=e.define,M=e.defineIndex,D=N.defines[M];void 0!==D?(H[E]=!0,H[M]=D,u++):(H[E]=!1,delete H[M])}H.SCENE_MRT_COUNT=u,H.BONES_VELOCITY_ENABLED=E.useBones&&E.computeBonesUsingShaders&&E.skeleton&&!E.skeleton.isUsingTextureForMatrices&&-1===N.excludedSkinnedMesh.indexOf(E)}static Bind(e,E,H,N,u){const P=z._Configurations[e];if(!P)return;const M=H.fe(),D=M.getEngine();if(P.reverseCulling&&D.setStateCullFaceType(M._mirroredCameraPosition?u.cullBackFaces:!u.cullBackFaces),(void 0!==P.defines.PREPASS_VELOCITY_INDEX||void 0!==P.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(P.previousWorldMatrices[H.uniqueId]||(P.previousWorldMatrices[H.uniqueId]=N.clone()),P.previousViewProjection||(P.previousViewProjection=M.getTransformMatrix().clone(),P.currentViewProjection=M.getTransformMatrix().clone()),P.currentViewProjection.updateFlag!==M.getTransformMatrix().updateFlag?(P.lastUpdateFrameId=D.frameId,P.previousViewProjection.P(P.currentViewProjection),P.currentViewProjection.P(M.getTransformMatrix())):P.lastUpdateFrameId!==D.frameId&&(P.lastUpdateFrameId=D.frameId,P.previousViewProjection.P(P.currentViewProjection)),E.setMatrix("previousWorld",P.previousWorldMatrices[H.uniqueId]),E.setMatrix("previousViewProjection",P.previousViewProjection),P.previousWorldMatrices[H.uniqueId]=N.clone(),H.useBones&&H.computeBonesUsingShaders&&H.skeleton)){const e=H.skeleton;if(!e.isUsingTextureForMatrices||-1===E.getUniformIndex("boneTextureWidth")){const N=e.getTransformMatrices(H);N&&(P.previousBones[H.uniqueId]||(P.previousBones[H.uniqueId]=N.slice()),E.setMatrices("mPreviousBones",P.previousBones[H.uniqueId]),P.previousBones[H.uniqueId].set(N))}}}}z.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],z._Configurations={}},12117:(e,E,H)=>{H.d(E,{b:()=>S});var N=H(11717),u=H(11723),z=H(12047),P=H(11579),M=H(11600),D=H(11633);const A=new RegExp("^([gimus]+)!");class C{constructor(e){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=e,this._scene=e.fe(),this._engine=this._scene.getEngine()}_addPlugin(e){for(let N=0;N<this._plugins.length;++N)if(this._plugins[N].name===e.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!e.isCompatible(this._material.shaderLanguage))throw`The plugin "${e.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const E=e.getClassName();C._MaterialPluginClassToMainDefine[E]||(C._MaterialPluginClassToMainDefine[E]="MATERIALPLUGIN_"+ ++C._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(e,E)=>this._handlePluginEvent(e,E),this._plugins.push(e),this._plugins.sort(((e,E)=>e.priority-E.priority)),this._codeInjectionPoints={};const H={};H[C._MaterialPluginClassToMainDefine[E]]={type:"boolean",default:!0};for(const N of this._plugins)N.collectDefines(H),this._collectPointNames("vertex",N.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",N.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=H,!0}_activatePlugin(e){-1===this._activePlugins.indexOf(e)&&(this._activePlugins.push(e),this._activePlugins.sort(((e,E)=>e.priority-E.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),e.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(e),this._activePluginsForExtraEvents.sort(((e,E)=>e.priority-E.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(e){for(let E=0;E<this._plugins.length;++E)if(this._plugins[E].name===e)return this._plugins[E];return null}_handlePluginEventIsReadyForSubMesh(e){let E=!0;for(const H of this._activePlugins)E=E&&H.isReadyForSubMesh(e.defines,this._scene,this._engine,e.subMesh);e.isReadyForSubMesh=E}_handlePluginEventPrepareDefinesBeforeAttributes(e){for(const E of this._activePlugins)E.prepareDefinesBeforeAttributes(e.defines,this._scene,e.mesh)}_handlePluginEventPrepareDefines(e){for(const E of this._activePlugins)E.prepareDefines(e.defines,this._scene,e.mesh)}_handlePluginEventHardBindForSubMesh(e){for(const E of this._activePluginsForExtraEvents)E.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventBindForSubMesh(e){for(const E of this._activePlugins)E.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventHasRenderTargetTextures(e){let E=!1;for(const H of this._activePluginsForExtraEvents)if(E=H.hasRenderTargetTextures(),E)break;e.hasRenderTargetTextures=E}_handlePluginEventFillRenderTargetTextures(e){for(const E of this._activePluginsForExtraEvents)E.fillRenderTargetTextures(e.renderTargets)}_handlePluginEvent(e,E){switch(e){case 512:{const e=E;for(const E of this._activePlugins)E.getActiveTextures(e.activeTextures);break}case 256:{const e=E;for(const E of this._activePlugins)E.getAnimatables(e.animatables);break}case 1024:{const e=E;let H=!1;for(const E of this._activePlugins)if(H=E.hasTexture(e.texture),H)break;e.hasTexture=H;break}case 2:{const e=E;for(const E of this._plugins)E.dispose(e.forceDisposeTextures);break}case 4:E.defineNames=this._defineNamesFromPlugins;break;case 128:{const e=E;for(const E of this._activePlugins)e.fallbackRank=E.addFallbacks(e.defines,e.fallbacks,e.fallbackRank),E.getAttributes(e.attributes,this._scene,e.mesh);this._uniformList.length>0&&e.uniforms.push(...this._uniformList),this._samplerList.length>0&&e.samplers.push(...this._samplerList),this._uboList.length>0&&e.uniformBuffersNames.push(...this._uboList),e.customCode=this._injectCustomCode(e,e.customCode);break}case 8:{const e=E;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const H=1===this._material.shaderLanguage;for(const E of this._plugins){const N=E.getUniforms(this._material.shaderLanguage);if(N){if(N.ubo)for(const E of N.ubo){if(E.size&&E.type){const N=E.arraySize??0;if(e.ubo.addUniform(E.name,E.size,N),H){let e;switch(E.type){case"mat4":e="mat4x4f";break;case"float":e="f32";break;default:e=`${E.type}f`}this._uboDeclaration+=N>0?`uniform ${E.name}: array<${e}, ${N}>;\n`:`uniform ${E.name}: ${e};\n`}else this._uboDeclaration+=`${E.type} ${E.name}${N>0?`[${N}]`:""};\n`}this._uniformList.push(E.name)}N.vertex&&(this._vertexDeclaration+=N.vertex+"\n"),N.fragment&&(this._fragmentDeclaration+=N.fragment+"\n")}E.getSamplers(this._samplerList),E.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(e,E){if(E)for(const H in E)this._codeInjectionPoints[e]||(this._codeInjectionPoints[e]={}),this._codeInjectionPoints[e][H]=!0}_injectCustomCode(e,E){return(H,N)=>{var u;E&&(N=E(H,N)),this._uboDeclaration&&(N=N.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(N=N.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(N=N.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const z=null===(u=this._codeInjectionPoints)||void 0===u?void 0:u[H];if(!z)return N;let P=null;for(let E in z){let u="";for(const N of this._activePlugins){var C;let z=null===(C=N.getCustomCode(H,this._material.shaderLanguage))||void 0===C?void 0:C[E];if(z){if(N.resolveIncludes){if(null===P){const E=0;P={defines:[],indexParameters:e.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:D.d.GetShadersRepository(E),includesShadersStore:D.d.GetIncludesShadersStore(E),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,IP:this._engine.IP,processCodeAfterIncludes:void 0}}P.isFragment="fragment"===H,(0,M.i)(z,P,(e=>z=e))}u+=z+"\n"}}if(u.length>0)if("!"===E.charAt(0)){E=E.substring(1);let e="g";if("!"===E.charAt(0))e="",E=E.substring(1);else{const H=A.exec(E);H&&H.length>=2&&(e=H[1],E=E.substring(e.length+1))}e.indexOf("g")<0&&(e+="g");const H=N,z=new RegExp(E,e);let P=z.exec(H);for(;null!==P;){let e=u;for(let E=0;E<P.length;++E)e=e.replace("$"+E,P[E]);N=N.replace(P[0],e),P=z.exec(H)}}else{const e="#define "+E;N=N.replace(e,"\n"+u+"\n"+e)}}return N}}}C._MaterialPluginClassToMainDefine={},C._MaterialPluginCounter=0,P.d.OnEnginesDisposedObservable.add((()=>{j()}));const i=[];let V=!1,U=null;function j(){i.length=0,V=!1,z.e.OnEventObservable.remove(U),U=null}var F=H(11776),h=H(11690);class S{isCompatible(e){return 0===e}_enable(e){e&&this._pluginManager._activatePlugin(this)}constructor(e,E,H,N){let u=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],P=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=e,this.name=E,this.priority=H,this.resolveIncludes=P,e.pluginManager||(e.pluginManager=new C(e),e.cP.add((()=>{e.pluginManager=void 0}))),this._pluginDefineNames=N,this._pluginManager=e.pluginManager,u&&this._pluginManager._addPlugin(this),z&&this._enable(!0),this.markAllDefinesAsDirty=e._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(e,E,H,N){return!0}hardBindForSubMesh(e,E,H,N){}bindForSubMesh(e,E,H,N){}dispose(e){}getCustomCode(e){return null}collectDefines(e){if(this._pluginDefineNames)for(const E of Object.keys(this._pluginDefineNames)){if("_"===E[0])continue;const H=typeof this._pluginDefineNames[E];e[E]={type:"number"===H?"number":"string"===H?"string":"boolean"===H?"boolean":"object",default:this._pluginDefineNames[E]}}}prepareDefinesBeforeAttributes(e,E,H){}prepareDefines(e,E,H){}hasTexture(e){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(e){}getActiveTextures(e){}getAnimatables(e){}addFallbacks(e,E,H){return H}getSamplers(e){}getAttributes(e,E,H){}getUniformBuffersNames(e){}getUniforms(){return{}}copyTo(e){F.d.Clone((()=>e),this)}serialize(){return F.d.Serialize(this)}parse(e,E,H){F.d.Parse((()=>this),e,E,H)}}(0,N.e)([(0,u.S)()],S.prototype,"name",void 0),(0,N.e)([(0,u.S)()],S.prototype,"priority",void 0),(0,N.e)([(0,u.S)()],S.prototype,"resolveIncludes",void 0),(0,N.e)([(0,u.S)()],S.prototype,"registerForExtraEvents",void 0),(0,h.g)("BABYLON.MaterialPluginBase",S)},12098:(e,E,H)=>{H.d(E,{e:()=>N});class N{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(e){e.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(e){}bindForSubMesh(e,E,H,N,u){if(E.prePassRenderer&&E.prePassRenderer.enabled&&E.prePassRenderer.currentRTisSceneRT&&(-1!==E.prePassRenderer.getIndex(2)||-1!==E.prePassRenderer.getIndex(11))){this.previousWorldMatrices[H.uniqueId]||(this.previousWorldMatrices[H.uniqueId]=N.clone()),this.previousViewProjection||(this.previousViewProjection=E.getTransformMatrix().clone(),this.currentViewProjection=E.getTransformMatrix().clone());const u=E.getEngine();this.currentViewProjection.updateFlag!==E.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=u.frameId,this.previousViewProjection.P(this.currentViewProjection),this.currentViewProjection.P(E.getTransformMatrix())):this._lastUpdateFrameId!==u.frameId&&(this._lastUpdateFrameId=u.frameId,this.previousViewProjection.P(this.currentViewProjection)),e.setMatrix("previousWorld",this.previousWorldMatrices[H.uniqueId]),e.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[H.uniqueId]=N.clone()}}}},12094:(e,E,H)=>{H.d(E,{SE:()=>s});var N=H(11717),u=H(11723),z=H(11831),P=H(11967),M=H(11789),D=H(11818),A=H(12098),C=H(11970),i=H(12047),V=H(12103),U=H(12045),j=H(11712),F=H(11690),h=H(12108),S=H(12042),X=H(12111),a=H(12085),W=H(12080),r=H(11776),Y=H(12124);const f={effect:null,subMesh:null};class w extends V.b{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(e){const E=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const H of E)this[H]=H===e}}class s extends U.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=e||this.fe().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}constructor(e,E){super(e,E,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||s.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new M.XE(0,0,0),this.diffuseColor=new M.XE(1,1,1),this.specularColor=new M.XE(1,1,1),this.emissiveColor=new M.XE(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new z.f(16),this._globalAmbientColor=new M.XE(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new X.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new A.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"SE"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===i.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.zM&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==i.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.zM||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,E){let N=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const u=E._drawWrapper;if(u.effect&&this.isFrozen&&u._wasPreviouslyReady&&u._wasPreviouslyUsingInstances===N)return!0;E.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),E.materialDefines=new w(this._eventInfo.defineNames));const z=this.fe(),P=E.materialDefines;if(this._isReadyForSubMesh(E))return!0;const M=z.getEngine();P._needNormals=(0,W.P)(z,e,P,!0,this._maxSimultaneousLights,this._disableLighting),(0,W.X)(z,P);const i=this.needAlphaBlendingForMesh(e)&&this.fe().useOrderIndependentTransparency;if((0,W.bb)(z,P,this.canRenderToMRT&&!i),(0,W._)(z,P,i),Y.c.PrepareDefines(M.currentRenderPassId,e,P),P._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,P._needUVs=!1;for(let e=1;e<=6;++e)P["MAINUV"+e]=!1;if(z.texturesEnabled){if(P.DIFFUSEDIRECTUV=0,P.BUMPDIRECTUV=0,P.AMBIENTDIRECTUV=0,P.OPACITYDIRECTUV=0,P.EMISSIVEDIRECTUV=0,P.SPECULARDIRECTUV=0,P.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&s.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._diffuseTexture,P,"DIFFUSE")}else P.DIFFUSE=!1;if(this._ambientTexture&&s.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._ambientTexture,P,"AMBIENT")}else P.AMBIENT=!1;if(this._opacityTexture&&s.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._opacityTexture,P,"OPACITY"),P.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else P.OPACITY=!1;if(this._reflectionTexture&&s.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(P._needNormals=!0,P.REFLECTION=!0,P.ROUGHNESS=this._roughness>0,P.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,P.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===j.b.INVCUBIC_MODE,P.REFLECTIONMAP_3D=this._reflectionTexture.isCube,P.REFLECTIONMAP_OPPOSITEZ=P.REFLECTIONMAP_3D&&this.fe().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,P.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case j.b.EXPLICIT_MODE:P.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case j.b.PLANAR_MODE:P.setReflectionMode("REFLECTIONMAP_PLANAR");break;case j.b.PROJECTION_MODE:P.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case j.b.SKYBOX_MODE:P.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case j.b.SPHERICAL_MODE:P.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case j.b.EQUIRECTANGULAR_MODE:P.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case j.b.FIXED_EQUIRECTANGULAR_MODE:P.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case j.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:P.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case j.b.CUBIC_MODE:case j.b.INVCUBIC_MODE:default:P.setReflectionMode("REFLECTIONMAP_CUBIC")}P.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else P.REFLECTION=!1,P.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&s.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._emissiveTexture,P,"EMISSIVE")}else P.EMISSIVE=!1;if(this._lightmapTexture&&s.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._lightmapTexture,P,"LIGHTMAP"),P.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,P.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else P.LIGHTMAP=!1;if(this._specularTexture&&s.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,W.Q)(this._specularTexture,P,"SPECULAR"),P.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else P.SPECULAR=!1;if(z.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&s.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,W.Q)(this._bumpTexture,P,"BUMP"),P.PARALLAX=this._useParallax,P.PARALLAX_RHS=z.useRightHandedSystem,P.PARALLAXOCCLUSION=this._useParallaxOcclusion,P.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else P.BUMP=!1,P.PARALLAX=!1,P.PARALLAX_RHS=!1,P.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&s.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;P._needUVs=!0,P.REFRACTION=!0,P.REFRACTIONMAP_3D=this._refractionTexture.isCube,P.RGBDREFRACTION=this._refractionTexture.isRGBD,P.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else P.REFRACTION=!1;P.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else P.DIFFUSE=!1,P.AMBIENT=!1,P.OPACITY=!1,P.REFLECTION=!1,P.EMISSIVE=!1,P.LIGHTMAP=!1,P.BUMP=!1,P.REFRACTION=!1;P.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),P.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,P.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,P.SPECULAROVERALPHA=this._useSpecularOverAlpha,P.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,P.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,P.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=P,this._eventInfo.subMesh=E,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(P._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(P),P.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,P.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(P._areFresnelDirty&&(s.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(P.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,P.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,P.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,P.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,P.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,P.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,P._needNormals=!0,P.FRESNEL=!0):P.FRESNEL=!1),P.AREALIGHTUSED)for(let H=0;H<e.lightSources.length;H++)if(!e.lightSources[H]._isReady())return!1;(0,W.U)(e,z,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),P,this._applyDecalMapAfterDetailMap),(0,W.N)(z,M,this,P,N,null,E.getRenderingMesh().hasThinInstances),this._eventInfo.defines=P,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,W.K)(e,P,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let V=!1;if(P.isDirty){const N=P._areLightsDisposed;P.markAsProcessed();const u=new S.d;P.REFLECTION&&u.addFallback(0,"REFLECTION"),P.SPECULAR&&u.addFallback(0,"SPECULAR"),P.BUMP&&u.addFallback(0,"BUMP"),P.PARALLAX&&u.addFallback(1,"PARALLAX"),P.PARALLAX_RHS&&u.addFallback(1,"PARALLAX_RHS"),P.PARALLAXOCCLUSION&&u.addFallback(0,"PARALLAXOCCLUSION"),P.SPECULAROVERALPHA&&u.addFallback(0,"SPECULAROVERALPHA"),P.FOG&&u.addFallback(1,"FOG"),P.POINTSIZE&&u.addFallback(0,"POINTSIZE"),P.LOGARITHMICDEPTH&&u.addFallback(0,"LOGARITHMICDEPTH"),(0,W.s)(P,u,this._maxSimultaneousLights),P.SPECULARTERM&&u.addFallback(0,"SPECULARTERM"),P.DIFFUSEFRESNEL&&u.addFallback(1,"DIFFUSEFRESNEL"),P.OPACITYFRESNEL&&u.addFallback(2,"OPACITYFRESNEL"),P.REFLECTIONFRESNEL&&u.addFallback(3,"REFLECTIONFRESNEL"),P.EMISSIVEFRESNEL&&u.addFallback(4,"EMISSIVEFRESNEL"),P.FRESNEL&&u.addFallback(4,"FRESNEL"),P.MULTIVIEW&&u.addFallback(0,"MULTIVIEW");const i=[D.g.PositionKind];P.NORMAL&&i.push(D.g.NormalKind),P.TANGENT&&i.push(D.g.TangentKind);for(let e=1;e<=6;++e)P["UV"+e]&&i.push(`uv${1===e?"":e}`);P.VERTEXCOLOR&&i.push(D.g.ColorKind),(0,W.y)(i,e,P,u),(0,W.z)(i,P),(0,W.C)(i,e,P),(0,W.u)(i,e,P);let U="default";const j=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],F=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],h=["Material","Scene","Mesh"],X={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:P.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=u,this._eventInfo.fallbackRank=0,this._eventInfo.defines=P,this._eventInfo.uniforms=j,this._eventInfo.attributes=i,this._eventInfo.samplers=F,this._eventInfo.uniformBuffersNames=h,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=X,this._callbackPluginEventGeneric(128,this._eventInfo),Y.c.AddUniformsAndSamplers(j,F),A.e.AddUniforms(j),A.e.AddSamplers(F),C.b&&(C.b.PrepareUniforms(j,P),C.b.PrepareSamplers(F,P)),(0,W.db)({uniformsNames:j,uniformBuffersNames:h,samplers:F,defines:P,maxSimultaneousLights:this._maxSimultaneousLights}),(0,a.d)(j);const r={};this.customShaderNameResolve&&(U=this.customShaderNameResolve(U,j,h,F,P,i,r));const w=P.toString(),s=E.effect;let p=z.getEngine().createEffect(U,{attributes:i,uniformsNames:j,uniformBuffersNames:h,samplers:F,defines:w,fallbacks:u,onCompiled:this.onCompiled,onError:this.onError,indexParameters:X,processFinalCode:r.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:P.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([H.e(41),H.e(64)]).then(H.bind(H,14239)),Promise.all([H.e(39),H.e(65)]).then(H.bind(H,14390))]):await Promise.all([Promise.all([H.e(34),H.e(67)]).then(H.bind(H,14468)),Promise.all([H.e(33),H.e(68)]).then(H.bind(H,14624))]),this._shadersLoaded=!0}},M);if(this._eventInfo.customCode=void 0,p)if(this._onEffectCreatedObservable&&(f.effect=p,f.subMesh=E,this._onEffectCreatedObservable.notifyObservers(f)),this.allowShaderHotSwapping&&s&&!p.isReady()){if(p=s,P.markAsUnprocessed(),V=this.isFrozen,N)return P._areLightsDisposed=!0,!1}else z.resetCachedMaterial(),E.setEffect(p,P,this._materialContext)}return!(!E.effect||!E.effect.isReady())&&(P._renderId=z.getRenderId(),u._wasPreviouslyReady=!V,u._wasPreviouslyUsingInstances=N,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(e,E,H){const N=this.fe(),u=H.materialDefines;if(!u)return;const z=H.effect;if(!z)return;this._activeEffect=z,E.getMeshUniformBuffer().bindToEffect(z,"Mesh"),E.transferToEffect(e),this._uniformBuffer.bindToEffect(z,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,N,E,e,this.isFrozen),Y.c.Bind(N.getEngine().currentRenderPassId,this._activeEffect,E,e,this);const D=N.activeCamera;D?this._uniformBuffer.updateFloat4("cameraInfo",D.PM,D.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=H,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),u.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const A=this._mustRebind(N,z,H,E.visibility);(0,W.c)(E,z);const C=this._uniformBuffer;if(A){if(this.bindViewProjection(z),!C.useUbo||!this.isFrozen||!C.isSync||H._drawWrapper._forceRebindOnNextCall){if(s.FresnelEnabled&&u.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(C.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),C.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&C.updateColor4("opacityParts",new M.XE(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(C.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),C.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(C.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),C.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(C.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),C.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),N.texturesEnabled){if(this._diffuseTexture&&s.DiffuseTextureEnabled&&(C.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,W.r)(this._diffuseTexture,C,"diffuse")),this._ambientTexture&&s.AmbientTextureEnabled&&(C.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,W.r)(this._ambientTexture,C,"ambient")),this._opacityTexture&&s.OpacityTextureEnabled&&(C.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,W.r)(this._opacityTexture,C,"opacity")),this._hasAlphaChannel()&&C.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&s.ReflectionTextureEnabled){if(C.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),C.MM("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const e=this._reflectionTexture;C.updateVector3("vReflectionPosition",e.boundingBoxPosition),C.updateVector3("vReflectionSize",e.boundingBoxSize)}}else C.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&s.EmissiveTextureEnabled&&(C.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,W.r)(this._emissiveTexture,C,"emissive")),this._lightmapTexture&&s.LightmapTextureEnabled&&(C.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,W.r)(this._lightmapTexture,C,"lightmap")),this._specularTexture&&s.SpecularTextureEnabled&&(C.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,W.r)(this._specularTexture,C,"specular")),this._bumpTexture&&N.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&(C.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,W.r)(this._bumpTexture,C,"bump"),N._mirroredCameraPosition?C.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):C.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&s.RefractionTextureEnabled){let e=1;if(this._refractionTexture.isCube||(C.MM("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),C.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;C.updateVector3("vRefractionPosition",e.boundingBoxPosition),C.updateVector3("vRefractionSize",e.boundingBoxSize)}}}this.pointsCloud&&C.updateFloat("pointSize",this.pointSize),C.updateColor4("vSpecularColor",this.specularColor,this.specularPower),C.updateColor3("vEmissiveColor",s.EmissiveTextureEnabled?this.emissiveColor:M.XE.BlackReadOnly),C.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),N.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),C.updateColor3("vAmbientColor",this._globalAmbientColor)}N.texturesEnabled&&(this._diffuseTexture&&s.DiffuseTextureEnabled&&z.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&s.AmbientTextureEnabled&&z.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&s.OpacityTextureEnabled&&z.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&s.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?z.setTexture("reflectionCubeSampler",this._reflectionTexture):z.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&s.EmissiveTextureEnabled&&z.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&s.LightmapTextureEnabled&&z.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&s.SpecularTextureEnabled&&z.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&N.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&z.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&s.RefractionTextureEnabled&&(this._refractionTexture.isCube?z.setTexture("refractionCubeSampler",this._refractionTexture):z.setTexture("refraction2DSampler",this._refractionTexture))),this.fe().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(E)&&this.fe().depthPeelingRenderer.bind(z),this._eventInfo.subMesh=H,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,a.f)(z,this,N),this.bindEyePosition(z)}else N.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(A||!this.isFrozen){var i;if(N.lightsEnabled&&!this._disableLighting&&(0,W.h)(N,E,z,u,this._maxSimultaneousLights),(N.fogEnabled&&E.applyFog&&N.fogMode!==P.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||E.receiveShadows||u.PREPASS)&&this.bindView(z),(0,W.d)(N,E,z),u.NUM_MORPH_INFLUENCERS&&(0,W.m)(E,z),u.BAKED_VERTEX_ANIMATION_TEXTURE)null===(i=E.bakedVertexAnimationManager)||void 0===i||i.bind(z,u.INSTANCES);this.useLogarithmicDepth&&(0,W.j)(u,z,N),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(E,this._activeEffect,H),C.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||(this._diffuseTexture===e||(this._ambientTexture===e||(this._opacityTexture===e||(this._reflectionTexture===e||(this._emissiveTexture===e||(this._specularTexture===e||(this._bumpTexture===e||(this._lightmapTexture===e||this._refractionTexture===e))))))))}dispose(e,E){var H,N,u,z,P,M,D,A,C;E&&(null===(H=this._diffuseTexture)||void 0===H||H.dispose(),null===(N=this._ambientTexture)||void 0===N||N.dispose(),null===(u=this._opacityTexture)||void 0===u||u.dispose(),null===(z=this._reflectionTexture)||void 0===z||z.dispose(),null===(P=this._emissiveTexture)||void 0===P||P.dispose(),null===(M=this._specularTexture)||void 0===M||M.dispose(),null===(D=this._bumpTexture)||void 0===D||D.dispose(),null===(A=this._lightmapTexture)||void 0===A||A.dispose(),null===(C=this._refractionTexture)||void 0===C||C.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,E)}clone(e){let E=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const N=r.d.Clone((()=>new s(e,this.fe())),this,{cloneTexturesOnlyOnce:E});return N.name=e,N.id=e,this.nP.copyTo(N.nP),this._clonePlugins(N,H),N}static Parse(e,E,H){const N=r.d.Parse((()=>new s(e.name,E)),e,E,H);return e.nP&&N.nP.parse(e.nP,E,H),i.e._ParsePlugins(e,N,E,H),N}static get DiffuseTextureEnabled(){return h.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){h.e.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return h.e.DetailTextureEnabled}static set DetailTextureEnabled(e){h.e.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return h.e.AmbientTextureEnabled}static set AmbientTextureEnabled(e){h.e.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return h.e.OpacityTextureEnabled}static set OpacityTextureEnabled(e){h.e.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return h.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){h.e.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return h.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){h.e.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return h.e.SpecularTextureEnabled}static set SpecularTextureEnabled(e){h.e.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return h.e.BumpTextureEnabled}static set BumpTextureEnabled(e){h.e.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return h.e.LightmapTextureEnabled}static set LightmapTextureEnabled(e){h.e.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return h.e.RefractionTextureEnabled}static set RefractionTextureEnabled(e){h.e.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return h.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){h.e.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return h.e.FresnelEnabled}static set FresnelEnabled(e){h.e.FresnelEnabled=e}}s.ForceGLSL=!1,(0,N.e)([(0,u.H)("diffuseTexture")],s.prototype,"_diffuseTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"diffuseTexture",void 0),(0,N.e)([(0,u.H)("ambientTexture")],s.prototype,"_ambientTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"ambientTexture",void 0),(0,N.e)([(0,u.H)("opacityTexture")],s.prototype,"_opacityTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"opacityTexture",void 0),(0,N.e)([(0,u.H)("reflectionTexture")],s.prototype,"_reflectionTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"reflectionTexture",void 0),(0,N.e)([(0,u.H)("emissiveTexture")],s.prototype,"_emissiveTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"emissiveTexture",void 0),(0,N.e)([(0,u.H)("specularTexture")],s.prototype,"_specularTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"specularTexture",void 0),(0,N.e)([(0,u.H)("bumpTexture")],s.prototype,"_bumpTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"bumpTexture",void 0),(0,N.e)([(0,u.H)("lightmapTexture")],s.prototype,"_lightmapTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"lightmapTexture",void 0),(0,N.e)([(0,u.H)("refractionTexture")],s.prototype,"_refractionTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"refractionTexture",void 0),(0,N.e)([(0,u.n)("ambient")],s.prototype,"ambientColor",void 0),(0,N.e)([(0,u.n)("diffuse")],s.prototype,"diffuseColor",void 0),(0,N.e)([(0,u.n)("specular")],s.prototype,"specularColor",void 0),(0,N.e)([(0,u.n)("emissive")],s.prototype,"emissiveColor",void 0),(0,N.e)([(0,u.S)()],s.prototype,"specularPower",void 0),(0,N.e)([(0,u.S)("useAlphaFromDiffuseTexture")],s.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"useAlphaFromDiffuseTexture",void 0),(0,N.e)([(0,u.S)("useEmissiveAsIllumination")],s.prototype,"_useEmissiveAsIllumination",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useEmissiveAsIllumination",void 0),(0,N.e)([(0,u.S)("linkEmissiveWithDiffuse")],s.prototype,"_linkEmissiveWithDiffuse",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"linkEmissiveWithDiffuse",void 0),(0,N.e)([(0,u.S)("useSpecularOverAlpha")],s.prototype,"_useSpecularOverAlpha",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useSpecularOverAlpha",void 0),(0,N.e)([(0,u.S)("useReflectionOverAlpha")],s.prototype,"_useReflectionOverAlpha",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useReflectionOverAlpha",void 0),(0,N.e)([(0,u.S)("disableLighting")],s.prototype,"_disableLighting",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsLightsDirty")],s.prototype,"disableLighting",void 0),(0,N.e)([(0,u.S)("useObjectSpaceNormalMap")],s.prototype,"_useObjectSpaceNormalMap",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useObjectSpaceNormalMap",void 0),(0,N.e)([(0,u.S)("useParallax")],s.prototype,"_useParallax",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallax",void 0),(0,N.e)([(0,u.S)("useParallaxOcclusion")],s.prototype,"_useParallaxOcclusion",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallaxOcclusion",void 0),(0,N.e)([(0,u.S)()],s.prototype,"parallaxScaleBias",void 0),(0,N.e)([(0,u.S)("roughness")],s.prototype,"_roughness",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"roughness",void 0),(0,N.e)([(0,u.S)()],s.prototype,"indexOfRefraction",void 0),(0,N.e)([(0,u.S)()],s.prototype,"invertRefractionY",void 0),(0,N.e)([(0,u.S)()],s.prototype,"alphaCutOff",void 0),(0,N.e)([(0,u.S)("useLightmapAsShadowmap")],s.prototype,"_useLightmapAsShadowmap",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useLightmapAsShadowmap",void 0),(0,N.e)([(0,u.s)("diffuseFresnelParameters")],s.prototype,"_diffuseFresnelParameters",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"diffuseFresnelParameters",void 0),(0,N.e)([(0,u.s)("opacityFresnelParameters")],s.prototype,"_opacityFresnelParameters",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],s.prototype,"opacityFresnelParameters",void 0),(0,N.e)([(0,u.s)("reflectionFresnelParameters")],s.prototype,"_reflectionFresnelParameters",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"reflectionFresnelParameters",void 0),(0,N.e)([(0,u.s)("refractionFresnelParameters")],s.prototype,"_refractionFresnelParameters",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"refractionFresnelParameters",void 0),(0,N.e)([(0,u.s)("emissiveFresnelParameters")],s.prototype,"_emissiveFresnelParameters",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"emissiveFresnelParameters",void 0),(0,N.e)([(0,u.S)("useReflectionFresnelFromSpecular")],s.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"useReflectionFresnelFromSpecular",void 0),(0,N.e)([(0,u.S)("useGlossinessFromSpecularMapAlpha")],s.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,N.e)([(0,u.S)("maxSimultaneousLights")],s.prototype,"_maxSimultaneousLights",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsLightsDirty")],s.prototype,"maxSimultaneousLights",void 0),(0,N.e)([(0,u.S)("invertNormalMapX")],s.prototype,"_invertNormalMapX",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapX",void 0),(0,N.e)([(0,u.S)("invertNormalMapY")],s.prototype,"_invertNormalMapY",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapY",void 0),(0,N.e)([(0,u.S)("twoSidedLighting")],s.prototype,"_twoSidedLighting",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"twoSidedLighting",void 0),(0,N.e)([(0,u.S)("applyDecalMapAfterDetailMap")],s.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,N.e)([(0,u.d)("_markAllSubMeshesAsMiscDirty")],s.prototype,"applyDecalMapAfterDetailMap",void 0),(0,F.g)("BABYLON.StandardMaterial",s),P.c.DefaultMaterialFactory=e=>new s("default material",e)}}]);