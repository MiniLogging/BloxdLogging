"use strict";(self.ipz2em9uj1g=self.ipz2em9uj1g||[]).push([[25],{12936:(r,O,W)=>{W.d(O,{b:()=>v});var q=W(12579),Q=W(12878),C=W(12583),T=W(12928),h=W(12925),J=W(12943),mr=W(12915);class d extends h.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class v extends J.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(r){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(r,"DetailMap",140,new d,O),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=Q.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=r._dirtyCallbacks[1]}isReadyForSubMesh(r,O,W){return!this._isEnabled||!(r._areTexturesDirty&&O.texturesEnabled&&W.getCaps().standardDerivatives&&this._texture&&T.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(r,O){if(this._isEnabled){r.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const W=O.getEngine();r._areTexturesDirty&&(W.getCaps().standardDerivatives&&this._texture&&T.c.DetailTextureEnabled&&this._isEnabled?((0,mr.U)(this._texture,r,"DETAIL"),r.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):r.DETAIL=!1)}else r.DETAIL=!1}bindForSubMesh(r,O){if(!this._isEnabled)return;const W=this._material.isFrozen;r.useUbo&&W&&r.isSync||this._texture&&T.c.DetailTextureEnabled&&(r.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,mr.v)(this._texture,r,"detail")),O.texturesEnabled&&this._texture&&T.c.DetailTextureEnabled&&r.setTexture("detailSampler",this._texture)}hasTexture(r){return this._texture===r}getActiveTextures(r){this._texture&&r.push(this._texture)}getAnimatables(r){this._texture&&this._texture.animations&&this._texture.animations.length>0&&r.push(this._texture)}dispose(r){var O;r&&(null===(O=this._texture)||void 0===O||O.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(r){r.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,q.b)([(0,C.x)("detailTexture"),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"texture",void 0),(0,q.b)([(0,C.G)()],v.prototype,"diffuseBlendLevel",void 0),(0,q.b)([(0,C.G)()],v.prototype,"roughnessBlendLevel",void 0),(0,q.b)([(0,C.G)()],v.prototype,"bumpLevel",void 0),(0,q.b)([(0,C.G)(),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"normalBlendMethod",void 0),(0,q.b)([(0,C.G)(),(0,C.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"isEnabled",void 0)},12925:(r,O,W)=>{W.d(O,{c:()=>q});class q{constructor(r){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=r,r)for(const O in r)Object.prototype.hasOwnProperty.call(r,O)&&this._setDefaultValue(O)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||r,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const r of Object.keys(this))"_"!==r[0]&&this._keys.push(r);if(this._externalProperties)for(const r in this._externalProperties)-1===this._keys.indexOf(r)&&this._keys.push(r)}isEqual(r){if(this._keys.length!==r._keys.length)return!1;for(let O=0;O<this._keys.length;O++){const W=this._keys[O];if(this[W]!==r[W])return!1}return!0}cloneTo(r){this._keys.length!==r._keys.length&&(r._keys=this._keys.slice(0));for(let O=0;O<this._keys.length;O++){const W=this._keys[O];r[W]=this[W]}}reset(){for(const r of this._keys)this._setDefaultValue(r)}_setDefaultValue(r){var O,W,q,Q;const C=(null===(O=this._externalProperties)||void 0===O||null===(W=O[r])||void 0===W?void 0:W.type)??typeof this[r],T=null===(q=this._externalProperties)||void 0===q||null===(Q=q[r])||void 0===Q?void 0:Q.default;switch(C){case"number":this[r]=T??0;break;case"string":this[r]=T??"";break;default:this[r]=T??!1}}toString(){let r="";for(let O=0;O<this._keys.length;O++){const W=this._keys[O],q=this[W];switch(typeof q){case"number":case"string":r+="#define "+W+" "+q+"\n";break;default:q&&(r+="#define "+W+"\n")}}return r}}},12928:(r,O,W)=>{W.d(O,{c:()=>Q});var q=W(12511);class Q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(r){this._DiffuseTextureEnabled!==r&&(this._DiffuseTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(r){this._BaseWeightTextureEnabled!==r&&(this._BaseWeightTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(r){this._BaseDiffuseRoughnessTextureEnabled!==r&&(this._BaseDiffuseRoughnessTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(r){this._DetailTextureEnabled!==r&&(this._DetailTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(r){this._DecalMapEnabled!==r&&(this._DecalMapEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(r){this._AmbientTextureEnabled!==r&&(this._AmbientTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(r){this._OpacityTextureEnabled!==r&&(this._OpacityTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(r){this._ReflectionTextureEnabled!==r&&(this._ReflectionTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(r){this._EmissiveTextureEnabled!==r&&(this._EmissiveTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(r){this._SpecularTextureEnabled!==r&&(this._SpecularTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(r){this._BumpTextureEnabled!==r&&(this._BumpTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(r){this._LightmapTextureEnabled!==r&&(this._LightmapTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(r){this._RefractionTextureEnabled!==r&&(this._RefractionTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(r){this._ColorGradingTextureEnabled!==r&&(this._ColorGradingTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(r){this._FresnelEnabled!==r&&(this._FresnelEnabled=r,q.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(r){this._ClearCoatTextureEnabled!==r&&(this._ClearCoatTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(r){this._ClearCoatBumpTextureEnabled!==r&&(this._ClearCoatBumpTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(r){this._ClearCoatTintTextureEnabled!==r&&(this._ClearCoatTintTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(r){this._SheenTextureEnabled!==r&&(this._SheenTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(r){this._AnisotropicTextureEnabled!==r&&(this._AnisotropicTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(r){this._ThicknessTextureEnabled!==r&&(this._ThicknessTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(r){this._RefractionIntensityTextureEnabled!==r&&(this._RefractionIntensityTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(r){this._TranslucencyIntensityTextureEnabled!==r&&(this._TranslucencyIntensityTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(r){this._TranslucencyColorTextureEnabled!==r&&(this._TranslucencyColorTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(r){this._IridescenceTextureEnabled!==r&&(this._IridescenceTextureEnabled=r,q.c.MarkAllMaterialsAsDirty(1))}}Q._DiffuseTextureEnabled=!0,Q._BaseWeightTextureEnabled=!0,Q._BaseDiffuseRoughnessTextureEnabled=!0,Q._DetailTextureEnabled=!0,Q._DecalMapEnabled=!0,Q._AmbientTextureEnabled=!0,Q._OpacityTextureEnabled=!0,Q._ReflectionTextureEnabled=!0,Q._EmissiveTextureEnabled=!0,Q._SpecularTextureEnabled=!0,Q._BumpTextureEnabled=!0,Q._LightmapTextureEnabled=!0,Q._RefractionTextureEnabled=!0,Q._ColorGradingTextureEnabled=!0,Q._FresnelEnabled=!0,Q._ClearCoatTextureEnabled=!0,Q._ClearCoatBumpTextureEnabled=!0,Q._ClearCoatTintTextureEnabled=!0,Q._SheenTextureEnabled=!0,Q._AnisotropicTextureEnabled=!0,Q._ThicknessTextureEnabled=!0,Q._RefractionIntensityTextureEnabled=!0,Q._TranslucencyIntensityTextureEnabled=!0,Q._TranslucencyColorTextureEnabled=!0,Q._IridescenceTextureEnabled=!0},12951:(r,O,W)=>{W.d(O,{e:()=>C});var q,Q=W(12591);!function(r){r[r.Zero=0]="Zero",r[r.One=1]="One",r[r.MaxViewZ=2]="MaxViewZ"}(q||(q={}));class C{static CreateConfiguration(r){return C._Configurations[r]={defines:{},previousWorldMatrices:{},previousViewProjection:Q.Matrix.Zero(),currentViewProjection:Q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},C._Configurations[r]}static DeleteConfiguration(r){delete C._Configurations[r]}static GetConfiguration(r){return C._Configurations[r]}static AddUniformsAndSamplers(r,O){r.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(r,O){for(const W of O)if(W.eh)for(const O of W.eh)O._removeDrawWrapper(r)}static PrepareDefines(r,O,W){if(!W._arePrePassDirty)return;const q=C._Configurations[r];if(!q)return;W.PREPASS=!0,W.PREPASS_COLOR=!1,W.PREPASS_COLOR_INDEX=-1;let Q=0;for(let T=0;T<C.GeometryTextureDescriptions.length;T++){const r=C.GeometryTextureDescriptions[T],O=r.define,h=r.defineIndex,J=q.defines[h];void 0!==J?(W[O]=!0,W[h]=J,Q++):(W[O]=!1,delete W[h])}W.SCENE_MRT_COUNT=Q,W.BONES_VELOCITY_ENABLED=O.useBones&&O.computeBonesUsingShaders&&O.skeleton&&!O.skeleton.isUsingTextureForMatrices&&-1===q.excludedSkinnedMesh.indexOf(O)}static Bind(r,O,W,q,Q){const T=C._Configurations[r];if(!T)return;const h=W.Dr(),J=h.getEngine();if(T.reverseCulling&&J.setStateCullFaceType(h._mirroredCameraPosition?Q.cullBackFaces:!Q.cullBackFaces),(void 0!==T.defines.PREPASS_VELOCITY_INDEX||void 0!==T.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(T.previousWorldMatrices[W.uniqueId]||(T.previousWorldMatrices[W.uniqueId]=q.clone()),T.previousViewProjection||(T.previousViewProjection=h.getTransformMatrix().clone(),T.currentViewProjection=h.getTransformMatrix().clone()),T.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(T.lastUpdateFrameId=J.frameId,T.previousViewProjection.C(T.currentViewProjection),T.currentViewProjection.C(h.getTransformMatrix())):T.lastUpdateFrameId!==J.frameId&&(T.lastUpdateFrameId=J.frameId,T.previousViewProjection.C(T.currentViewProjection)),O.setMatrix("previousWorld",T.previousWorldMatrices[W.uniqueId]),O.setMatrix("previousViewProjection",T.previousViewProjection),T.previousWorldMatrices[W.uniqueId]=q.clone(),W.useBones&&W.computeBonesUsingShaders&&W.skeleton)){const r=W.skeleton;if(!r.isUsingTextureForMatrices||-1===O.getUniformIndex("boneTextureWidth")){const q=r.getTransformMatrices(W);q&&(T.previousBones[W.uniqueId]||(T.previousBones[W.uniqueId]=q.slice()),O.setMatrices("mPreviousBones",T.previousBones[W.uniqueId]),T.previousBones[W.uniqueId].set(q))}}}}C.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],C._Configurations={}},12943:(r,O,W)=>{W.d(O,{e:()=>e});var q=W(12579),Q=W(12583),C=W(12878),T=W(12484),h=W(12501),J=W(12524);const mr=new RegExp("^([gimus]+)!");class d{constructor(r){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=r,this._scene=r.Dr(),this._engine=this._scene.getEngine()}_addPlugin(r){for(let q=0;q<this._plugins.length;++q)if(this._plugins[q].name===r.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!r.isCompatible(this._material.shaderLanguage))throw`The plugin "${r.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const O=r.getClassName();d._MaterialPluginClassToMainDefine[O]||(d._MaterialPluginClassToMainDefine[O]="MATERIALPLUGIN_"+ ++d._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(r,O)=>this._handlePluginEvent(r,O),this._plugins.push(r),this._plugins.sort(((r,O)=>r.priority-O.priority)),this._codeInjectionPoints={};const W={};W[d._MaterialPluginClassToMainDefine[O]]={type:"boolean",default:!0};for(const q of this._plugins)q.collectDefines(W),this._collectPointNames("vertex",q.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",q.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=W,!0}_activatePlugin(r){-1===this._activePlugins.indexOf(r)&&(this._activePlugins.push(r),this._activePlugins.sort(((r,O)=>r.priority-O.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),r.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(r),this._activePluginsForExtraEvents.sort(((r,O)=>r.priority-O.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(r){for(let O=0;O<this._plugins.length;++O)if(this._plugins[O].name===r)return this._plugins[O];return null}_handlePluginEventIsReadyForSubMesh(r){let O=!0;for(const W of this._activePlugins)O=O&&W.isReadyForSubMesh(r.defines,this._scene,this._engine,r.subMesh);r.isReadyForSubMesh=O}_handlePluginEventPrepareDefinesBeforeAttributes(r){for(const O of this._activePlugins)O.prepareDefinesBeforeAttributes(r.defines,this._scene,r.mesh)}_handlePluginEventPrepareDefines(r){for(const O of this._activePlugins)O.prepareDefines(r.defines,this._scene,r.mesh)}_handlePluginEventHardBindForSubMesh(r){for(const O of this._activePluginsForExtraEvents)O.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,r.subMesh)}_handlePluginEventBindForSubMesh(r){for(const O of this._activePlugins)O.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,r.subMesh)}_handlePluginEventHasRenderTargetTextures(r){let O=!1;for(const W of this._activePluginsForExtraEvents)if(O=W.hasRenderTargetTextures(),O)break;r.hasRenderTargetTextures=O}_handlePluginEventFillRenderTargetTextures(r){for(const O of this._activePluginsForExtraEvents)O.fillRenderTargetTextures(r.renderTargets)}_handlePluginEvent(r,O){switch(r){case 512:{const r=O;for(const O of this._activePlugins)O.getActiveTextures(r.activeTextures);break}case 256:{const r=O;for(const O of this._activePlugins)O.getAnimatables(r.animatables);break}case 1024:{const r=O;let W=!1;for(const O of this._activePlugins)if(W=O.hasTexture(r.texture),W)break;r.hasTexture=W;break}case 2:{const r=O;for(const O of this._plugins)O.dispose(r.forceDisposeTextures);break}case 4:O.defineNames=this._defineNamesFromPlugins;break;case 128:{const r=O;for(const O of this._activePlugins)r.fallbackRank=O.addFallbacks(r.defines,r.fallbacks,r.fallbackRank),O.getAttributes(r.attributes,this._scene,r.mesh);this._uniformList.length>0&&r.uniforms.push(...this._uniformList),this._samplerList.length>0&&r.samplers.push(...this._samplerList),this._uboList.length>0&&r.uniformBuffersNames.push(...this._uboList),r.customCode=this._injectCustomCode(r,r.customCode);break}case 8:{const r=O;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const W=1===this._material.shaderLanguage;for(const O of this._plugins){const q=O.getUniforms(this._material.shaderLanguage);if(q){if(q.ubo)for(const O of q.ubo){if(O.size&&O.type){const q=O.arraySize??0;if(r.ubo.addUniform(O.name,O.size,q),W){let r;switch(O.type){case"mat4":r="mat4x4f";break;case"float":r="f32";break;default:r=`${O.type}f`}this._uboDeclaration+=q>0?`uniform ${O.name}: array<${r}, ${q}>;\n`:`uniform ${O.name}: ${r};\n`}else this._uboDeclaration+=`${O.type} ${O.name}${q>0?`[${q}]`:""};\n`}this._uniformList.push(O.name)}q.vertex&&(this._vertexDeclaration+=q.vertex+"\n"),q.fragment&&(this._fragmentDeclaration+=q.fragment+"\n")}O.getSamplers(this._samplerList),O.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(r,O){if(O)for(const W in O)this._codeInjectionPoints[r]||(this._codeInjectionPoints[r]={}),this._codeInjectionPoints[r][W]=!0}_injectCustomCode(r,O){return(W,q)=>{var Q;O&&(q=O(W,q)),this._uboDeclaration&&(q=q.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(q=q.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(q=q.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const C=null===(Q=this._codeInjectionPoints)||void 0===Q?void 0:Q[W];if(!C)return q;let T=null;for(let O in C){let Q="";for(const q of this._activePlugins){var d;let C=null===(d=q.getCustomCode(W,this._material.shaderLanguage))||void 0===d?void 0:d[O];if(C){if(q.resolveIncludes){if(null===T){const O=0;T={defines:[],indexParameters:r.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:J.c.GetShadersRepository(O),includesShadersStore:J.c.GetIncludesShadersStore(O),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,mh:this._engine.mh,processCodeAfterIncludes:void 0}}T.isFragment="fragment"===W,(0,h.i)(C,T,(r=>C=r))}Q+=C+"\n"}}if(Q.length>0)if("!"===O.charAt(0)){O=O.substring(1);let r="g";if("!"===O.charAt(0))r="",O=O.substring(1);else{const W=mr.exec(O);W&&W.length>=2&&(r=W[1],O=O.substring(r.length+1))}r.indexOf("g")<0&&(r+="g");const W=q,C=new RegExp(O,r);let T=C.exec(W);for(;null!==T;){let r=Q;for(let O=0;O<T.length;++O)r=r.replace("$"+O,T[O]);q=q.replace(T[0],r),T=C.exec(W)}}else{const r="#define "+O;q=q.replace(r,"\n"+Q+"\n"+r)}}return q}}}d._MaterialPluginClassToMainDefine={},d._MaterialPluginCounter=0,T.d.OnEnginesDisposedObservable.add((()=>{U()}));const v=[];let g=!1,K=null;function U(){v.length=0,g=!1,C.d.OnEventObservable.remove(K),K=null}var P=W(12617),b=W(12560);class e{isCompatible(r){return 0===r}_enable(r){r&&this._pluginManager._activatePlugin(this)}constructor(r,O,W,q){let Q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],T=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=r,this.name=O,this.priority=W,this.resolveIncludes=T,r.pluginManager||(r.pluginManager=new d(r),r.mJ.add((()=>{r.pluginManager=void 0}))),this._pluginDefineNames=q,this._pluginManager=r.pluginManager,Q&&this._pluginManager._addPlugin(this),C&&this._enable(!0),this.markAllDefinesAsDirty=r._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(r,O,W,q){return!0}hardBindForSubMesh(r,O,W,q){}bindForSubMesh(r,O,W,q){}dispose(r){}getCustomCode(r){return null}collectDefines(r){if(this._pluginDefineNames)for(const O of Object.keys(this._pluginDefineNames)){if("_"===O[0])continue;const W=typeof this._pluginDefineNames[O];r[O]={type:"number"===W?"number":"string"===W?"string":"boolean"===W?"boolean":"object",default:this._pluginDefineNames[O]}}}prepareDefinesBeforeAttributes(r,O,W){}prepareDefines(r,O,W){}hasTexture(r){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(r){}getActiveTextures(r){}getAnimatables(r){}addFallbacks(r,O,W){return W}getSamplers(r){}getAttributes(r,O,W){}getUniformBuffersNames(r){}getUniforms(){return{}}copyTo(r){P.b.Clone((()=>r),this)}serialize(){return P.b.Serialize(this)}parse(r,O,W){P.b.Parse((()=>this),r,O,W)}}(0,q.b)([(0,Q.G)()],e.prototype,"name",void 0),(0,q.b)([(0,Q.G)()],e.prototype,"priority",void 0),(0,q.b)([(0,Q.G)()],e.prototype,"resolveIncludes",void 0),(0,q.b)([(0,Q.G)()],e.prototype,"registerForExtraEvents",void 0),(0,b.e)("BABYLON.MaterialPluginBase",e)},12923:(r,O,W)=>{W.d(O,{c:()=>q});class q{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(r){r.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(r){}bindForSubMesh(r,O,W,q,Q){if(O.prePassRenderer&&O.prePassRenderer.enabled&&O.prePassRenderer.currentRTisSceneRT&&(-1!==O.prePassRenderer.getIndex(2)||-1!==O.prePassRenderer.getIndex(11))){this.previousWorldMatrices[W.uniqueId]||(this.previousWorldMatrices[W.uniqueId]=q.clone()),this.previousViewProjection||(this.previousViewProjection=O.getTransformMatrix().clone(),this.currentViewProjection=O.getTransformMatrix().clone());const Q=O.getEngine();this.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=Q.frameId,this.previousViewProjection.C(this.currentViewProjection),this.currentViewProjection.C(O.getTransformMatrix())):this._lastUpdateFrameId!==Q.frameId&&(this._lastUpdateFrameId=Q.frameId,this.previousViewProjection.C(this.currentViewProjection)),r.setMatrix("previousWorld",this.previousWorldMatrices[W.uniqueId]),r.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[W.uniqueId]=q.clone()}}}},12919:(r,O,W)=>{W.d(O,{XO:()=>p});var q=W(12579),Q=W(12583),C=W(12677),T=W(12802),h=W(12631),J=W(12660),mr=W(12923),d=W(12804),v=W(12878),g=W(12925),K=W(12872),U=W(12575),P=W(12560),b=W(12928),e=W(12868),Y=W(12936),G=W(12917),X=W(12915),S=W(12617),o=W(12951);const N={effect:null,subMesh:null};class D extends g.c{constructor(r){super(r),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(r){const O=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const W of O)this[W]=W===r}}class p extends K.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(r){this._attachImageProcessingConfiguration(r),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(r){r!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=r||this.Dr().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(r){this.imageProcessingConfiguration.colorCurvesEnabled=r}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(r){this.imageProcessingConfiguration.colorGradingEnabled=r}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(r){this._imageProcessingConfiguration.toneMappingEnabled=r}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(r){this._imageProcessingConfiguration.exposure=r}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(r){this._imageProcessingConfiguration.contrast=r}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(r){this._imageProcessingConfiguration.colorGradingTexture=r}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(r){this._imageProcessingConfiguration.colorCurves=r}get canRenderToMRT(){return!0}constructor(r,O){super(r,O,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||p.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new h.SO(0,0,0),this.diffuseColor=new h.SO(1,1,1),this.specularColor=new h.SO(1,1,1),this.emissiveColor=new h.SO(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new C.f(16),this._globalAmbientColor=new h.SO(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Y.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new mr.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"XO"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===v.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Gh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==v.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Gh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(r,O){let q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const Q=O._drawWrapper;if(Q.effect&&this.isFrozen&&Q._wasPreviouslyReady&&Q._wasPreviouslyUsingInstances===q)return!0;O.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),O.materialDefines=new D(this._eventInfo.defineNames));const C=this.Dr(),T=O.materialDefines;if(this._isReadyForSubMesh(O))return!0;const h=C.getEngine();T._needNormals=(0,X.R)(C,r,T,!0,this._maxSimultaneousLights,this._disableLighting),(0,X._)(C,T);const v=this.needAlphaBlendingForMesh(r)&&this.Dr().useOrderIndependentTransparency;if((0,X.cb)(C,T,this.canRenderToMRT&&!v),(0,X.bb)(C,T,v),o.e.PrepareDefines(h.currentRenderPassId,r,T),T._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,T._needUVs=!1;for(let r=1;r<=6;++r)T["MAINUV"+r]=!1;if(C.texturesEnabled){if(T.DIFFUSEDIRECTUV=0,T.BUMPDIRECTUV=0,T.AMBIENTDIRECTUV=0,T.OPACITYDIRECTUV=0,T.EMISSIVEDIRECTUV=0,T.SPECULARDIRECTUV=0,T.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&p.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._diffuseTexture,T,"DIFFUSE")}else T.DIFFUSE=!1;if(this._ambientTexture&&p.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._ambientTexture,T,"AMBIENT")}else T.AMBIENT=!1;if(this._opacityTexture&&p.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._opacityTexture,T,"OPACITY"),T.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else T.OPACITY=!1;if(this._reflectionTexture&&p.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(T._needNormals=!0,T.REFLECTION=!0,T.ROUGHNESS=this._roughness>0,T.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,T.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===U.e.INVCUBIC_MODE,T.REFLECTIONMAP_3D=this._reflectionTexture.isCube,T.REFLECTIONMAP_OPPOSITEZ=T.REFLECTIONMAP_3D&&this.Dr().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,T.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case U.e.EXPLICIT_MODE:T.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case U.e.PLANAR_MODE:T.setReflectionMode("REFLECTIONMAP_PLANAR");break;case U.e.PROJECTION_MODE:T.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case U.e.SKYBOX_MODE:T.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case U.e.SPHERICAL_MODE:T.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case U.e.EQUIRECTANGULAR_MODE:T.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case U.e.FIXED_EQUIRECTANGULAR_MODE:T.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case U.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:T.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case U.e.CUBIC_MODE:case U.e.INVCUBIC_MODE:default:T.setReflectionMode("REFLECTIONMAP_CUBIC")}T.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else T.REFLECTION=!1,T.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&p.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._emissiveTexture,T,"EMISSIVE")}else T.EMISSIVE=!1;if(this._lightmapTexture&&p.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._lightmapTexture,T,"LIGHTMAP"),T.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,T.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else T.LIGHTMAP=!1;if(this._specularTexture&&p.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,X.U)(this._specularTexture,T,"SPECULAR"),T.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else T.SPECULAR=!1;if(C.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&p.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,X.U)(this._bumpTexture,T,"BUMP"),T.PARALLAX=this._useParallax,T.PARALLAX_RHS=C.useRightHandedSystem,T.PARALLAXOCCLUSION=this._useParallaxOcclusion,T.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else T.BUMP=!1,T.PARALLAX=!1,T.PARALLAX_RHS=!1,T.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&p.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;T._needUVs=!0,T.REFRACTION=!0,T.REFRACTIONMAP_3D=this._refractionTexture.isCube,T.RGBDREFRACTION=this._refractionTexture.isRGBD,T.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else T.REFRACTION=!1;T.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else T.DIFFUSE=!1,T.AMBIENT=!1,T.OPACITY=!1,T.REFLECTION=!1,T.EMISSIVE=!1,T.LIGHTMAP=!1,T.BUMP=!1,T.REFRACTION=!1;T.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),T.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,T.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,T.SPECULAROVERALPHA=this._useSpecularOverAlpha,T.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,T.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,T.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(r)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=T,this._eventInfo.subMesh=O,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(T._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(T),T.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,T.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(T._areFresnelDirty&&(p.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(T.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,T.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,T.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,T.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,T.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,T.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,T._needNormals=!0,T.FRESNEL=!0):T.FRESNEL=!1),T.AREALIGHTUSED)for(let W=0;W<r.lightSources.length;W++)if(!r.lightSources[W]._isReady())return!1;(0,X.X)(r,C,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(r),T,this._applyDecalMapAfterDetailMap),(0,X.P)(C,h,this,T,q,null,O.getRenderingMesh().hasThinInstances),this._eventInfo.defines=T,this._eventInfo.mesh=r,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,X.L)(r,T,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let g=!1;if(T.isDirty){const q=T._areLightsDisposed;T.markAsProcessed();const Q=new e.c;T.REFLECTION&&Q.addFallback(0,"REFLECTION"),T.SPECULAR&&Q.addFallback(0,"SPECULAR"),T.BUMP&&Q.addFallback(0,"BUMP"),T.PARALLAX&&Q.addFallback(1,"PARALLAX"),T.PARALLAX_RHS&&Q.addFallback(1,"PARALLAX_RHS"),T.PARALLAXOCCLUSION&&Q.addFallback(0,"PARALLAXOCCLUSION"),T.SPECULAROVERALPHA&&Q.addFallback(0,"SPECULAROVERALPHA"),T.FOG&&Q.addFallback(1,"FOG"),T.POINTSIZE&&Q.addFallback(0,"POINTSIZE"),T.LOGARITHMICDEPTH&&Q.addFallback(0,"LOGARITHMICDEPTH"),(0,X.z)(T,Q,this._maxSimultaneousLights),T.SPECULARTERM&&Q.addFallback(0,"SPECULARTERM"),T.DIFFUSEFRESNEL&&Q.addFallback(1,"DIFFUSEFRESNEL"),T.OPACITYFRESNEL&&Q.addFallback(2,"OPACITYFRESNEL"),T.REFLECTIONFRESNEL&&Q.addFallback(3,"REFLECTIONFRESNEL"),T.EMISSIVEFRESNEL&&Q.addFallback(4,"EMISSIVEFRESNEL"),T.FRESNEL&&Q.addFallback(4,"FRESNEL"),T.MULTIVIEW&&Q.addFallback(0,"MULTIVIEW");const v=[J.i.PositionKind];T.NORMAL&&v.push(J.i.NormalKind),T.TANGENT&&v.push(J.i.TangentKind);for(let r=1;r<=6;++r)T["UV"+r]&&v.push(`uv${1===r?"":r}`);T.VERTEXCOLOR&&v.push(J.i.ColorKind),(0,X.D)(v,r,T,Q),(0,X.E)(v,T),(0,X.I)(v,r,T),(0,X.A)(v,r,T);let K="default";const U=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],P=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],b=["Material","Scene","Mesh"],Y={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:T.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=Q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=T,this._eventInfo.uniforms=U,this._eventInfo.attributes=v,this._eventInfo.samplers=P,this._eventInfo.uniformBuffersNames=b,this._eventInfo.customCode=void 0,this._eventInfo.mesh=r,this._eventInfo.indexParameters=Y,this._callbackPluginEventGeneric(128,this._eventInfo),o.e.AddUniformsAndSamplers(U,P),mr.c.AddUniforms(U),mr.c.AddSamplers(P),d.e&&(d.e.PrepareUniforms(U,T),d.e.PrepareSamplers(P,T)),(0,X.eb)({uniformsNames:U,uniformBuffersNames:b,samplers:P,defines:T,maxSimultaneousLights:this._maxSimultaneousLights}),(0,G.c)(U);const S={};this.customShaderNameResolve&&(K=this.customShaderNameResolve(K,U,b,P,T,v,S));const D=T.toString(),p=O.effect;let z=C.getEngine().createEffect(K,{attributes:v,uniformsNames:U,uniformBuffersNames:b,samplers:P,defines:D,fallbacks:Q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Y,processFinalCode:S.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:T.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([W.e(41),W.e(64)]).then(W.bind(W,15191)),Promise.all([W.e(39),W.e(65)]).then(W.bind(W,15352))]):await Promise.all([Promise.all([W.e(34),W.e(67)]).then(W.bind(W,15434)),Promise.all([W.e(33),W.e(68)]).then(W.bind(W,15583))]),this._shadersLoaded=!0}},h);if(this._eventInfo.customCode=void 0,z)if(this._onEffectCreatedObservable&&(N.effect=z,N.subMesh=O,this._onEffectCreatedObservable.notifyObservers(N)),this.allowShaderHotSwapping&&p&&!z.isReady()){if(z=p,T.markAsUnprocessed(),g=this.isFrozen,q)return T._areLightsDisposed=!0,!1}else C.resetCachedMaterial(),O.setEffect(z,T,this._materialContext)}return!(!O.effect||!O.effect.isReady())&&(T._renderId=C.getRenderId(),Q._wasPreviouslyReady=!g,Q._wasPreviouslyUsingInstances=q,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const r=this._uniformBuffer;r.addUniform("diffuseLeftColor",4),r.addUniform("diffuseRightColor",4),r.addUniform("opacityParts",4),r.addUniform("reflectionLeftColor",4),r.addUniform("reflectionRightColor",4),r.addUniform("refractionLeftColor",4),r.addUniform("refractionRightColor",4),r.addUniform("emissiveLeftColor",4),r.addUniform("emissiveRightColor",4),r.addUniform("vDiffuseInfos",2),r.addUniform("vAmbientInfos",2),r.addUniform("vOpacityInfos",2),r.addUniform("vReflectionInfos",2),r.addUniform("vReflectionPosition",3),r.addUniform("vReflectionSize",3),r.addUniform("vEmissiveInfos",2),r.addUniform("vLightmapInfos",2),r.addUniform("vSpecularInfos",2),r.addUniform("vBumpInfos",3),r.addUniform("diffuseMatrix",16),r.addUniform("ambientMatrix",16),r.addUniform("opacityMatrix",16),r.addUniform("reflectionMatrix",16),r.addUniform("emissiveMatrix",16),r.addUniform("lightmapMatrix",16),r.addUniform("specularMatrix",16),r.addUniform("bumpMatrix",16),r.addUniform("vTangentSpaceParams",2),r.addUniform("pointSize",1),r.addUniform("alphaCutOff",1),r.addUniform("refractionMatrix",16),r.addUniform("vRefractionInfos",4),r.addUniform("vRefractionPosition",3),r.addUniform("vRefractionSize",3),r.addUniform("vSpecularColor",4),r.addUniform("vEmissiveColor",3),r.addUniform("vDiffuseColor",4),r.addUniform("vAmbientColor",3),r.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(r,O,W){const q=this.Dr(),Q=W.materialDefines;if(!Q)return;const C=W.effect;if(!C)return;this._activeEffect=C,O.getMeshUniformBuffer().bindToEffect(C,"Mesh"),O.transferToEffect(r),this._uniformBuffer.bindToEffect(C,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,q,O,r,this.isFrozen),o.e.Bind(q.getEngine().currentRenderPassId,this._activeEffect,O,r,this);const J=q.activeCamera;J?this._uniformBuffer.updateFloat4("cameraInfo",J.Xh,J.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=W,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),Q.OBJECTSPACE_NORMALMAP&&(r.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const mr=this._mustRebind(q,C,W,O.visibility);(0,X.e)(O,C);const d=this._uniformBuffer;if(mr){if(this.bindViewProjection(C),!d.useUbo||!this.isFrozen||!d.isSync||W._drawWrapper._forceRebindOnNextCall){if(p.FresnelEnabled&&Q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(d.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),d.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&d.updateColor4("opacityParts",new h.SO(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(d.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),d.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(d.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),d.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(d.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),d.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),q.texturesEnabled){if(this._diffuseTexture&&p.DiffuseTextureEnabled&&(d.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,X.v)(this._diffuseTexture,d,"diffuse")),this._ambientTexture&&p.AmbientTextureEnabled&&(d.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,X.v)(this._ambientTexture,d,"ambient")),this._opacityTexture&&p.OpacityTextureEnabled&&(d.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,X.v)(this._opacityTexture,d,"opacity")),this._hasAlphaChannel()&&d.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&p.ReflectionTextureEnabled){if(d.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),d.Sh("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const r=this._reflectionTexture;d.updateVector3("vReflectionPosition",r.boundingBoxPosition),d.updateVector3("vReflectionSize",r.boundingBoxSize)}}else d.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&p.EmissiveTextureEnabled&&(d.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,X.v)(this._emissiveTexture,d,"emissive")),this._lightmapTexture&&p.LightmapTextureEnabled&&(d.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,X.v)(this._lightmapTexture,d,"lightmap")),this._specularTexture&&p.SpecularTextureEnabled&&(d.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,X.v)(this._specularTexture,d,"specular")),this._bumpTexture&&q.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&(d.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,X.v)(this._bumpTexture,d,"bump"),q._mirroredCameraPosition?d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&p.RefractionTextureEnabled){let r=1;if(this._refractionTexture.isCube||(d.Sh("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(r=this._refractionTexture.depth)),d.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,r,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const r=this._refractionTexture;d.updateVector3("vRefractionPosition",r.boundingBoxPosition),d.updateVector3("vRefractionSize",r.boundingBoxSize)}}}this.pointsCloud&&d.updateFloat("pointSize",this.pointSize),d.updateColor4("vSpecularColor",this.specularColor,this.specularPower),d.updateColor3("vEmissiveColor",p.EmissiveTextureEnabled?this.emissiveColor:h.SO.BlackReadOnly),d.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),q.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),d.updateColor3("vAmbientColor",this._globalAmbientColor)}q.texturesEnabled&&(this._diffuseTexture&&p.DiffuseTextureEnabled&&C.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&p.AmbientTextureEnabled&&C.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&p.OpacityTextureEnabled&&C.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&p.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?C.setTexture("reflectionCubeSampler",this._reflectionTexture):C.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&p.EmissiveTextureEnabled&&C.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&p.LightmapTextureEnabled&&C.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&p.SpecularTextureEnabled&&C.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&q.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&C.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&p.RefractionTextureEnabled&&(this._refractionTexture.isCube?C.setTexture("refractionCubeSampler",this._refractionTexture):C.setTexture("refraction2DSampler",this._refractionTexture))),this.Dr().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(O)&&this.Dr().depthPeelingRenderer.bind(C),this._eventInfo.subMesh=W,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,G.f)(C,this,q),this.bindEyePosition(C)}else q.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(mr||!this.isFrozen){var v;if(q.lightsEnabled&&!this._disableLighting&&(0,X.k)(q,O,C,Q,this._maxSimultaneousLights),(q.fogEnabled&&O.applyFog&&q.fogMode!==T.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||O.receiveShadows||Q.PREPASS)&&this.bindView(C),(0,X.h)(q,O,C),Q.NUM_MORPH_INFLUENCERS&&(0,X.n)(O,C),Q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(v=O.bakedVertexAnimationManager)||void 0===v||v.bind(C,Q.INSTANCES);this.useLogarithmicDepth&&(0,X.l)(Q,C,q),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(O,this._activeEffect,W),d.update()}getAnimatables(){const r=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&r.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&r.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&r.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&r.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&r.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&r.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&r.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&r.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&r.push(this._refractionTexture),r}getActiveTextures(){const r=super.getActiveTextures();return this._diffuseTexture&&r.push(this._diffuseTexture),this._ambientTexture&&r.push(this._ambientTexture),this._opacityTexture&&r.push(this._opacityTexture),this._reflectionTexture&&r.push(this._reflectionTexture),this._emissiveTexture&&r.push(this._emissiveTexture),this._specularTexture&&r.push(this._specularTexture),this._bumpTexture&&r.push(this._bumpTexture),this._lightmapTexture&&r.push(this._lightmapTexture),this._refractionTexture&&r.push(this._refractionTexture),r}hasTexture(r){return!!super.hasTexture(r)||(this._diffuseTexture===r||(this._ambientTexture===r||(this._opacityTexture===r||(this._reflectionTexture===r||(this._emissiveTexture===r||(this._specularTexture===r||(this._bumpTexture===r||(this._lightmapTexture===r||this._refractionTexture===r))))))))}dispose(r,O){var W,q,Q,C,T,h,J,mr,d;O&&(null===(W=this._diffuseTexture)||void 0===W||W.dispose(),null===(q=this._ambientTexture)||void 0===q||q.dispose(),null===(Q=this._opacityTexture)||void 0===Q||Q.dispose(),null===(C=this._reflectionTexture)||void 0===C||C.dispose(),null===(T=this._emissiveTexture)||void 0===T||T.dispose(),null===(h=this._specularTexture)||void 0===h||h.dispose(),null===(J=this._bumpTexture)||void 0===J||J.dispose(),null===(mr=this._lightmapTexture)||void 0===mr||mr.dispose(),null===(d=this._refractionTexture)||void 0===d||d.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(r,O)}clone(r){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],W=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const q=S.b.Clone((()=>new p(r,this.Dr())),this,{cloneTexturesOnlyOnce:O});return q.name=r,q.id=r,this.dh.copyTo(q.dh),this._clonePlugins(q,W),q}static Parse(r,O,W){const q=S.b.Parse((()=>new p(r.name,O)),r,O,W);return r.dh&&q.dh.parse(r.dh,O,W),v.d._ParsePlugins(r,q,O,W),q}static get DiffuseTextureEnabled(){return b.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(r){b.c.DiffuseTextureEnabled=r}static get DetailTextureEnabled(){return b.c.DetailTextureEnabled}static set DetailTextureEnabled(r){b.c.DetailTextureEnabled=r}static get AmbientTextureEnabled(){return b.c.AmbientTextureEnabled}static set AmbientTextureEnabled(r){b.c.AmbientTextureEnabled=r}static get OpacityTextureEnabled(){return b.c.OpacityTextureEnabled}static set OpacityTextureEnabled(r){b.c.OpacityTextureEnabled=r}static get ReflectionTextureEnabled(){return b.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(r){b.c.ReflectionTextureEnabled=r}static get EmissiveTextureEnabled(){return b.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(r){b.c.EmissiveTextureEnabled=r}static get SpecularTextureEnabled(){return b.c.SpecularTextureEnabled}static set SpecularTextureEnabled(r){b.c.SpecularTextureEnabled=r}static get BumpTextureEnabled(){return b.c.BumpTextureEnabled}static set BumpTextureEnabled(r){b.c.BumpTextureEnabled=r}static get LightmapTextureEnabled(){return b.c.LightmapTextureEnabled}static set LightmapTextureEnabled(r){b.c.LightmapTextureEnabled=r}static get RefractionTextureEnabled(){return b.c.RefractionTextureEnabled}static set RefractionTextureEnabled(r){b.c.RefractionTextureEnabled=r}static get ColorGradingTextureEnabled(){return b.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(r){b.c.ColorGradingTextureEnabled=r}static get FresnelEnabled(){return b.c.FresnelEnabled}static set FresnelEnabled(r){b.c.FresnelEnabled=r}}p.ForceGLSL=!1,(0,q.b)([(0,Q.x)("diffuseTexture")],p.prototype,"_diffuseTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"diffuseTexture",void 0),(0,q.b)([(0,Q.x)("ambientTexture")],p.prototype,"_ambientTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"ambientTexture",void 0),(0,q.b)([(0,Q.x)("opacityTexture")],p.prototype,"_opacityTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"opacityTexture",void 0),(0,q.b)([(0,Q.x)("reflectionTexture")],p.prototype,"_reflectionTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"reflectionTexture",void 0),(0,q.b)([(0,Q.x)("emissiveTexture")],p.prototype,"_emissiveTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"emissiveTexture",void 0),(0,q.b)([(0,Q.x)("specularTexture")],p.prototype,"_specularTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"specularTexture",void 0),(0,q.b)([(0,Q.x)("bumpTexture")],p.prototype,"_bumpTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"bumpTexture",void 0),(0,q.b)([(0,Q.x)("lightmapTexture")],p.prototype,"_lightmapTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"lightmapTexture",void 0),(0,q.b)([(0,Q.x)("refractionTexture")],p.prototype,"_refractionTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"refractionTexture",void 0),(0,q.b)([(0,Q.j)("ambient")],p.prototype,"ambientColor",void 0),(0,q.b)([(0,Q.j)("diffuse")],p.prototype,"diffuseColor",void 0),(0,q.b)([(0,Q.j)("specular")],p.prototype,"specularColor",void 0),(0,q.b)([(0,Q.j)("emissive")],p.prototype,"emissiveColor",void 0),(0,q.b)([(0,Q.G)()],p.prototype,"specularPower",void 0),(0,q.b)([(0,Q.G)("useAlphaFromDiffuseTexture")],p.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"useAlphaFromDiffuseTexture",void 0),(0,q.b)([(0,Q.G)("useEmissiveAsIllumination")],p.prototype,"_useEmissiveAsIllumination",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useEmissiveAsIllumination",void 0),(0,q.b)([(0,Q.G)("linkEmissiveWithDiffuse")],p.prototype,"_linkEmissiveWithDiffuse",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"linkEmissiveWithDiffuse",void 0),(0,q.b)([(0,Q.G)("useSpecularOverAlpha")],p.prototype,"_useSpecularOverAlpha",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useSpecularOverAlpha",void 0),(0,q.b)([(0,Q.G)("useReflectionOverAlpha")],p.prototype,"_useReflectionOverAlpha",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useReflectionOverAlpha",void 0),(0,q.b)([(0,Q.G)("disableLighting")],p.prototype,"_disableLighting",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsLightsDirty")],p.prototype,"disableLighting",void 0),(0,q.b)([(0,Q.G)("useObjectSpaceNormalMap")],p.prototype,"_useObjectSpaceNormalMap",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useObjectSpaceNormalMap",void 0),(0,q.b)([(0,Q.G)("useParallax")],p.prototype,"_useParallax",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallax",void 0),(0,q.b)([(0,Q.G)("useParallaxOcclusion")],p.prototype,"_useParallaxOcclusion",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallaxOcclusion",void 0),(0,q.b)([(0,Q.G)()],p.prototype,"parallaxScaleBias",void 0),(0,q.b)([(0,Q.G)("roughness")],p.prototype,"_roughness",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"roughness",void 0),(0,q.b)([(0,Q.G)()],p.prototype,"indexOfRefraction",void 0),(0,q.b)([(0,Q.G)()],p.prototype,"invertRefractionY",void 0),(0,q.b)([(0,Q.G)()],p.prototype,"alphaCutOff",void 0),(0,q.b)([(0,Q.G)("useLightmapAsShadowmap")],p.prototype,"_useLightmapAsShadowmap",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useLightmapAsShadowmap",void 0),(0,q.b)([(0,Q.l)("diffuseFresnelParameters")],p.prototype,"_diffuseFresnelParameters",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"diffuseFresnelParameters",void 0),(0,q.b)([(0,Q.l)("opacityFresnelParameters")],p.prototype,"_opacityFresnelParameters",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],p.prototype,"opacityFresnelParameters",void 0),(0,q.b)([(0,Q.l)("reflectionFresnelParameters")],p.prototype,"_reflectionFresnelParameters",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"reflectionFresnelParameters",void 0),(0,q.b)([(0,Q.l)("refractionFresnelParameters")],p.prototype,"_refractionFresnelParameters",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"refractionFresnelParameters",void 0),(0,q.b)([(0,Q.l)("emissiveFresnelParameters")],p.prototype,"_emissiveFresnelParameters",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"emissiveFresnelParameters",void 0),(0,q.b)([(0,Q.G)("useReflectionFresnelFromSpecular")],p.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"useReflectionFresnelFromSpecular",void 0),(0,q.b)([(0,Q.G)("useGlossinessFromSpecularMapAlpha")],p.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,q.b)([(0,Q.G)("maxSimultaneousLights")],p.prototype,"_maxSimultaneousLights",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsLightsDirty")],p.prototype,"maxSimultaneousLights",void 0),(0,q.b)([(0,Q.G)("invertNormalMapX")],p.prototype,"_invertNormalMapX",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapX",void 0),(0,q.b)([(0,Q.G)("invertNormalMapY")],p.prototype,"_invertNormalMapY",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapY",void 0),(0,q.b)([(0,Q.G)("twoSidedLighting")],p.prototype,"_twoSidedLighting",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"twoSidedLighting",void 0),(0,q.b)([(0,Q.G)("applyDecalMapAfterDetailMap")],p.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,q.b)([(0,Q.e)("_markAllSubMeshesAsMiscDirty")],p.prototype,"applyDecalMapAfterDetailMap",void 0),(0,P.e)("BABYLON.StandardMaterial",p),T.e.DefaultMaterialFactory=r=>new p("default material",r)}}]);