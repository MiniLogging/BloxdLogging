"use strict";(self["6xhfpmwgjr5"]=self["6xhfpmwgjr5"]||[]).push([[25],{12792:(P,a,R)=>{R.d(a,{d:()=>l});var S=R(12401),A=R(12726),Z=R(12408),p=R(12783),j=R(12778),U=R(12798),Q=R(12757);class h extends j.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class l extends U.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(P){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(P,"DetailMap",140,new h,a),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=A.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=P._dirtyCallbacks[1]}isReadyForSubMesh(P,a,R){return!this._isEnabled||!(P._areTexturesDirty&&a.texturesEnabled&&R.getCaps().standardDerivatives&&this._texture&&p.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(P,a){if(this._isEnabled){P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const R=a.getEngine();P._areTexturesDirty&&(R.getCaps().standardDerivatives&&this._texture&&p.c.DetailTextureEnabled&&this._isEnabled?((0,Q.V)(this._texture,P,"DETAIL"),P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):P.DETAIL=!1)}else P.DETAIL=!1}bindForSubMesh(P,a){if(!this._isEnabled)return;const R=this._material.isFrozen;P.useUbo&&R&&P.isSync||this._texture&&p.c.DetailTextureEnabled&&(P.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,Q.v)(this._texture,P,"detail")),a.texturesEnabled&&this._texture&&p.c.DetailTextureEnabled&&P.setTexture("detailSampler",this._texture)}hasTexture(P){return this._texture===P}getActiveTextures(P){this._texture&&P.push(this._texture)}getAnimatables(P){this._texture&&this._texture.animations&&this._texture.animations.length>0&&P.push(this._texture)}dispose(P){var a;P&&(null===(a=this._texture)||void 0===a||a.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(P){P.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,S.d)([(0,Z.s)("detailTexture"),(0,Z.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"texture",void 0),(0,S.d)([(0,Z.x)()],l.prototype,"diffuseBlendLevel",void 0),(0,S.d)([(0,Z.x)()],l.prototype,"roughnessBlendLevel",void 0),(0,S.d)([(0,Z.x)()],l.prototype,"bumpLevel",void 0),(0,S.d)([(0,Z.x)(),(0,Z.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"normalBlendMethod",void 0),(0,S.d)([(0,Z.x)(),(0,Z.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"isEnabled",void 0)},12778:(P,a,R)=>{R.d(a,{d:()=>S});class S{constructor(P){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=P,P)for(const a in P)Object.prototype.hasOwnProperty.call(P,a)&&this._setDefaultValue(a)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||P,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const P of Object.keys(this))"_"!==P[0]&&this._keys.push(P);if(this._externalProperties)for(const P in this._externalProperties)-1===this._keys.indexOf(P)&&this._keys.push(P)}isEqual(P){if(this._keys.length!==P._keys.length)return!1;for(let a=0;a<this._keys.length;a++){const R=this._keys[a];if(this[R]!==P[R])return!1}return!0}cloneTo(P){this._keys.length!==P._keys.length&&(P._keys=this._keys.slice(0));for(let a=0;a<this._keys.length;a++){const R=this._keys[a];P[R]=this[R]}}reset(){for(const P of this._keys)this._setDefaultValue(P)}_setDefaultValue(P){var a,R,S,A;const Z=(null===(a=this._externalProperties)||void 0===a||null===(R=a[P])||void 0===R?void 0:R.type)??typeof this[P],p=null===(S=this._externalProperties)||void 0===S||null===(A=S[P])||void 0===A?void 0:A.default;switch(Z){case"number":this[P]=p??0;break;case"string":this[P]=p??"";break;default:this[P]=p??!1}}toString(){let P="";for(let a=0;a<this._keys.length;a++){const R=this._keys[a],S=this[R];switch(typeof S){case"number":case"string":P+="#define "+R+" "+S+"\n";break;default:S&&(P+="#define "+R+"\n")}}return P}}},12783:(P,a,R)=>{R.d(a,{c:()=>A});var S=R(12323);class A{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){this._DiffuseTextureEnabled!==P&&(this._DiffuseTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(P){this._BaseWeightTextureEnabled!==P&&(this._BaseWeightTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(P){this._BaseDiffuseRoughnessTextureEnabled!==P&&(this._BaseDiffuseRoughnessTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(P){this._DetailTextureEnabled!==P&&(this._DetailTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(P){this._DecalMapEnabled!==P&&(this._DecalMapEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(P){this._AmbientTextureEnabled!==P&&(this._AmbientTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(P){this._OpacityTextureEnabled!==P&&(this._OpacityTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){this._ReflectionTextureEnabled!==P&&(this._ReflectionTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){this._EmissiveTextureEnabled!==P&&(this._EmissiveTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(P){this._SpecularTextureEnabled!==P&&(this._SpecularTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(P){this._BumpTextureEnabled!==P&&(this._BumpTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(P){this._LightmapTextureEnabled!==P&&(this._LightmapTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(P){this._RefractionTextureEnabled!==P&&(this._RefractionTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){this._ColorGradingTextureEnabled!==P&&(this._ColorGradingTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(P){this._FresnelEnabled!==P&&(this._FresnelEnabled=P,S.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(P){this._ClearCoatTextureEnabled!==P&&(this._ClearCoatTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(P){this._ClearCoatBumpTextureEnabled!==P&&(this._ClearCoatBumpTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(P){this._ClearCoatTintTextureEnabled!==P&&(this._ClearCoatTintTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(P){this._SheenTextureEnabled!==P&&(this._SheenTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(P){this._AnisotropicTextureEnabled!==P&&(this._AnisotropicTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(P){this._ThicknessTextureEnabled!==P&&(this._ThicknessTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(P){this._RefractionIntensityTextureEnabled!==P&&(this._RefractionIntensityTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(P){this._TranslucencyIntensityTextureEnabled!==P&&(this._TranslucencyIntensityTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(P){this._TranslucencyColorTextureEnabled!==P&&(this._TranslucencyColorTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(P){this._IridescenceTextureEnabled!==P&&(this._IridescenceTextureEnabled=P,S.e.MarkAllMaterialsAsDirty(1))}}A._DiffuseTextureEnabled=!0,A._BaseWeightTextureEnabled=!0,A._BaseDiffuseRoughnessTextureEnabled=!0,A._DetailTextureEnabled=!0,A._DecalMapEnabled=!0,A._AmbientTextureEnabled=!0,A._OpacityTextureEnabled=!0,A._ReflectionTextureEnabled=!0,A._EmissiveTextureEnabled=!0,A._SpecularTextureEnabled=!0,A._BumpTextureEnabled=!0,A._LightmapTextureEnabled=!0,A._RefractionTextureEnabled=!0,A._ColorGradingTextureEnabled=!0,A._FresnelEnabled=!0,A._ClearCoatTextureEnabled=!0,A._ClearCoatBumpTextureEnabled=!0,A._ClearCoatTintTextureEnabled=!0,A._SheenTextureEnabled=!0,A._AnisotropicTextureEnabled=!0,A._ThicknessTextureEnabled=!0,A._RefractionIntensityTextureEnabled=!0,A._TranslucencyIntensityTextureEnabled=!0,A._TranslucencyColorTextureEnabled=!0,A._IridescenceTextureEnabled=!0},12800:(P,a,R)=>{R.d(a,{e:()=>Z});var S,A=R(12415);!function(P){P[P.Zero=0]="Zero",P[P.One=1]="One",P[P.MaxViewZ=2]="MaxViewZ"}(S||(S={}));class Z{static CreateConfiguration(P){return Z._Configurations[P]={defines:{},previousWorldMatrices:{},previousViewProjection:A.Matrix.Zero(),currentViewProjection:A.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},Z._Configurations[P]}static DeleteConfiguration(P){delete Z._Configurations[P]}static GetConfiguration(P){return Z._Configurations[P]}static AddUniformsAndSamplers(P,a){P.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(P,a){for(const R of a)if(R.Zj)for(const a of R.Zj)a._removeDrawWrapper(P)}static PrepareDefines(P,a,R){if(!R._arePrePassDirty)return;const S=Z._Configurations[P];if(!S)return;R.PREPASS=!0,R.PREPASS_COLOR=!1,R.PREPASS_COLOR_INDEX=-1;let A=0;for(let p=0;p<Z.GeometryTextureDescriptions.length;p++){const P=Z.GeometryTextureDescriptions[p],a=P.define,j=P.defineIndex,U=S.defines[j];void 0!==U?(R[a]=!0,R[j]=U,A++):(R[a]=!1,delete R[j])}R.SCENE_MRT_COUNT=A,R.BONES_VELOCITY_ENABLED=a.useBones&&a.computeBonesUsingShaders&&a.skeleton&&!a.skeleton.isUsingTextureForMatrices&&-1===S.excludedSkinnedMesh.indexOf(a)}static Bind(P,a,R,S,A){const p=Z._Configurations[P];if(!p)return;const j=R.GP(),U=j.getEngine();if(p.reverseCulling&&U.setStateCullFaceType(j._mirroredCameraPosition?A.cullBackFaces:!A.cullBackFaces),(void 0!==p.defines.PREPASS_VELOCITY_INDEX||void 0!==p.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(p.previousWorldMatrices[R.uniqueId]||(p.previousWorldMatrices[R.uniqueId]=S.clone()),p.previousViewProjection||(p.previousViewProjection=j.getTransformMatrix().clone(),p.currentViewProjection=j.getTransformMatrix().clone()),p.currentViewProjection.updateFlag!==j.getTransformMatrix().updateFlag?(p.lastUpdateFrameId=U.frameId,p.previousViewProjection.A(p.currentViewProjection),p.currentViewProjection.A(j.getTransformMatrix())):p.lastUpdateFrameId!==U.frameId&&(p.lastUpdateFrameId=U.frameId,p.previousViewProjection.A(p.currentViewProjection)),a.setMatrix("previousWorld",p.previousWorldMatrices[R.uniqueId]),a.setMatrix("previousViewProjection",p.previousViewProjection),p.previousWorldMatrices[R.uniqueId]=S.clone(),R.useBones&&R.computeBonesUsingShaders&&R.skeleton)){const P=R.skeleton;if(!P.isUsingTextureForMatrices||-1===a.getUniformIndex("boneTextureWidth")){const S=P.getTransformMatrices(R);S&&(p.previousBones[R.uniqueId]||(p.previousBones[R.uniqueId]=S.slice()),a.setMatrices("mPreviousBones",p.previousBones[R.uniqueId]),p.previousBones[R.uniqueId].set(S))}}}}Z.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],Z._Configurations={}},12798:(P,a,R)=>{R.d(a,{d:()=>t});var S=R(12401),A=R(12408),Z=R(12726),p=R(12277),j=R(12307),U=R(12336);const Q=new RegExp("^([gimus]+)!");class h{constructor(P){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=P,this._scene=P.GP(),this._engine=this._scene.getEngine()}_addPlugin(P){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===P.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!P.isCompatible(this._material.shaderLanguage))throw`The plugin "${P.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const a=P.getClassName();h._MaterialPluginClassToMainDefine[a]||(h._MaterialPluginClassToMainDefine[a]="MATERIALPLUGIN_"+ ++h._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(P,a)=>this._handlePluginEvent(P,a),this._plugins.push(P),this._plugins.sort(((P,a)=>P.priority-a.priority)),this._codeInjectionPoints={};const R={};R[h._MaterialPluginClassToMainDefine[a]]={type:"boolean",default:!0};for(const S of this._plugins)S.collectDefines(R),this._collectPointNames("vertex",S.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",S.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=R,!0}_activatePlugin(P){-1===this._activePlugins.indexOf(P)&&(this._activePlugins.push(P),this._activePlugins.sort(((P,a)=>P.priority-a.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),P.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(P),this._activePluginsForExtraEvents.sort(((P,a)=>P.priority-a.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(P){for(let a=0;a<this._plugins.length;++a)if(this._plugins[a].name===P)return this._plugins[a];return null}_handlePluginEventIsReadyForSubMesh(P){let a=!0;for(const R of this._activePlugins)a=a&&R.isReadyForSubMesh(P.defines,this._scene,this._engine,P.subMesh);P.isReadyForSubMesh=a}_handlePluginEventPrepareDefinesBeforeAttributes(P){for(const a of this._activePlugins)a.prepareDefinesBeforeAttributes(P.defines,this._scene,P.mesh)}_handlePluginEventPrepareDefines(P){for(const a of this._activePlugins)a.prepareDefines(P.defines,this._scene,P.mesh)}_handlePluginEventHardBindForSubMesh(P){for(const a of this._activePluginsForExtraEvents)a.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventBindForSubMesh(P){for(const a of this._activePlugins)a.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventHasRenderTargetTextures(P){let a=!1;for(const R of this._activePluginsForExtraEvents)if(a=R.hasRenderTargetTextures(),a)break;P.hasRenderTargetTextures=a}_handlePluginEventFillRenderTargetTextures(P){for(const a of this._activePluginsForExtraEvents)a.fillRenderTargetTextures(P.renderTargets)}_handlePluginEvent(P,a){switch(P){case 512:{const P=a;for(const a of this._activePlugins)a.getActiveTextures(P.activeTextures);break}case 256:{const P=a;for(const a of this._activePlugins)a.getAnimatables(P.animatables);break}case 1024:{const P=a;let R=!1;for(const a of this._activePlugins)if(R=a.hasTexture(P.texture),R)break;P.hasTexture=R;break}case 2:{const P=a;for(const a of this._plugins)a.dispose(P.forceDisposeTextures);break}case 4:a.defineNames=this._defineNamesFromPlugins;break;case 128:{const P=a;for(const a of this._activePlugins)P.fallbackRank=a.addFallbacks(P.defines,P.fallbacks,P.fallbackRank),a.getAttributes(P.attributes,this._scene,P.mesh);this._uniformList.length>0&&P.uniforms.push(...this._uniformList),this._samplerList.length>0&&P.samplers.push(...this._samplerList),this._uboList.length>0&&P.uniformBuffersNames.push(...this._uboList),P.customCode=this._injectCustomCode(P,P.customCode);break}case 8:{const P=a;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const R=1===this._material.shaderLanguage;for(const a of this._plugins){const S=a.getUniforms(this._material.shaderLanguage);if(S){if(S.ubo)for(const a of S.ubo){if(a.size&&a.type){const S=a.arraySize??0;if(P.ubo.addUniform(a.name,a.size,S),R){let P;switch(a.type){case"mat4":P="mat4x4f";break;case"float":P="f32";break;default:P=`${a.type}f`}this._uboDeclaration+=S>0?`uniform ${a.name}: array<${P}, ${S}>;\n`:`uniform ${a.name}: ${P};\n`}else this._uboDeclaration+=`${a.type} ${a.name}${S>0?`[${S}]`:""};\n`}this._uniformList.push(a.name)}S.vertex&&(this._vertexDeclaration+=S.vertex+"\n"),S.fragment&&(this._fragmentDeclaration+=S.fragment+"\n")}a.getSamplers(this._samplerList),a.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(P,a){if(a)for(const R in a)this._codeInjectionPoints[P]||(this._codeInjectionPoints[P]={}),this._codeInjectionPoints[P][R]=!0}_injectCustomCode(P,a){return(R,S)=>{var A;a&&(S=a(R,S)),this._uboDeclaration&&(S=S.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(S=S.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(S=S.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const Z=null===(A=this._codeInjectionPoints)||void 0===A?void 0:A[R];if(!Z)return S;let p=null;for(let a in Z){let A="";for(const S of this._activePlugins){var h;let Z=null===(h=S.getCustomCode(R,this._material.shaderLanguage))||void 0===h?void 0:h[a];if(Z){if(S.resolveIncludes){if(null===p){const a=0;p={defines:[],indexParameters:P.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:U.c.GetShadersRepository(a),includesShadersStore:U.c.GetIncludesShadersStore(a),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Cp:this._engine.Cp,processCodeAfterIncludes:void 0}}p.isFragment="fragment"===R,(0,j.h)(Z,p,(P=>Z=P))}A+=Z+"\n"}}if(A.length>0)if("!"===a.charAt(0)){a=a.substring(1);let P="g";if("!"===a.charAt(0))P="",a=a.substring(1);else{const R=Q.exec(a);R&&R.length>=2&&(P=R[1],a=a.substring(P.length+1))}P.indexOf("g")<0&&(P+="g");const R=S,Z=new RegExp(a,P);let p=Z.exec(R);for(;null!==p;){let P=A;for(let a=0;a<p.length;++a)P=P.replace("$"+a,p[a]);S=S.replace(p[0],P),p=Z.exec(R)}}else{const P="#define "+a;S=S.replace(P,"\n"+A+"\n"+P)}}return S}}}h._MaterialPluginClassToMainDefine={},h._MaterialPluginCounter=0,p.e.OnEnginesDisposedObservable.add((()=>{O()}));const l=[];let V=!1,f=null;function O(){l.length=0,V=!1,Z.e.OnEventObservable.remove(f),f=null}var q=R(12447),y=R(12376);class t{isCompatible(P){return 0===P}_enable(P){P&&this._pluginManager._activatePlugin(this)}constructor(P,a,R,S){let A=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],p=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=P,this.name=a,this.priority=R,this.resolveIncludes=p,P.pluginManager||(P.pluginManager=new h(P),P.Fp.add((()=>{P.pluginManager=void 0}))),this._pluginDefineNames=S,this._pluginManager=P.pluginManager,A&&this._pluginManager._addPlugin(this),Z&&this._enable(!0),this.markAllDefinesAsDirty=P._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(P,a,R,S){return!0}hardBindForSubMesh(P,a,R,S){}bindForSubMesh(P,a,R,S){}dispose(P){}getCustomCode(P){return null}collectDefines(P){if(this._pluginDefineNames)for(const a of Object.keys(this._pluginDefineNames)){if("_"===a[0])continue;const R=typeof this._pluginDefineNames[a];P[a]={type:"number"===R?"number":"string"===R?"string":"boolean"===R?"boolean":"object",default:this._pluginDefineNames[a]}}}prepareDefinesBeforeAttributes(P,a,R){}prepareDefines(P,a,R){}hasTexture(P){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(P){}getActiveTextures(P){}getAnimatables(P){}addFallbacks(P,a,R){return R}getSamplers(P){}getAttributes(P,a,R){}getUniformBuffersNames(P){}getUniforms(){return{}}copyTo(P){q.e.Clone((()=>P),this)}serialize(){return q.e.Serialize(this)}parse(P,a,R){q.e.Parse((()=>this),P,a,R)}}(0,S.d)([(0,A.x)()],t.prototype,"name",void 0),(0,S.d)([(0,A.x)()],t.prototype,"priority",void 0),(0,S.d)([(0,A.x)()],t.prototype,"resolveIncludes",void 0),(0,S.d)([(0,A.x)()],t.prototype,"registerForExtraEvents",void 0),(0,y.d)("BABYLON.MaterialPluginBase",t)},12769:(P,a,R)=>{R.d(a,{d:()=>S});class S{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(P){P.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(P){}bindForSubMesh(P,a,R,S,A){if(a.prePassRenderer&&a.prePassRenderer.enabled&&a.prePassRenderer.currentRTisSceneRT&&(-1!==a.prePassRenderer.getIndex(2)||-1!==a.prePassRenderer.getIndex(11))){this.previousWorldMatrices[R.uniqueId]||(this.previousWorldMatrices[R.uniqueId]=S.clone()),this.previousViewProjection||(this.previousViewProjection=a.getTransformMatrix().clone(),this.currentViewProjection=a.getTransformMatrix().clone());const A=a.getEngine();this.currentViewProjection.updateFlag!==a.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=A.frameId,this.previousViewProjection.A(this.currentViewProjection),this.currentViewProjection.A(a.getTransformMatrix())):this._lastUpdateFrameId!==A.frameId&&(this._lastUpdateFrameId=A.frameId,this.previousViewProjection.A(this.currentViewProjection)),P.setMatrix("previousWorld",this.previousWorldMatrices[R.uniqueId]),P.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[R.uniqueId]=S.clone()}}}},12764:(P,a,R)=>{R.d(a,{ta:()=>mP});var S=R(12401),A=R(12408),Z=R(12515),p=R(12636),j=R(12456),U=R(12489),Q=R(12769),h=R(12643),l=R(12726),V=R(12778),f=R(12720),O=R(12399),q=R(12376),y=R(12783),t=R(12712),W=R(12792),k=R(12760),x=R(12757),s=R(12447),d=R(12800);const G={effect:null,subMesh:null};class H extends V.d{constructor(P){super(P),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(P){const a=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const R of a)this[R]=R===P}}class mP extends f.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(P){this._attachImageProcessingConfiguration(P),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(P){P!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=P||this.GP().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(P){this.imageProcessingConfiguration.colorCurvesEnabled=P}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(P){this.imageProcessingConfiguration.colorGradingEnabled=P}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(P){this._imageProcessingConfiguration.toneMappingEnabled=P}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(P){this._imageProcessingConfiguration.exposure=P}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(P){this._imageProcessingConfiguration.contrast=P}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(P){this._imageProcessingConfiguration.colorGradingTexture=P}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(P){this._imageProcessingConfiguration.colorCurves=P}get canRenderToMRT(){return!0}constructor(P,a){super(P,a,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||mP.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new j.Wa(0,0,0),this.diffuseColor=new j.Wa(1,1,1),this.specularColor=new j.Wa(1,1,1),this.emissiveColor=new j.Wa(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new Z.g(16),this._globalAmbientColor=new j.Wa(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new W.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new Q.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),mP.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),mP.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(mP.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(mP.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"ta"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===l.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.jj&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==l.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.jj||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(P,a){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const A=a._drawWrapper;if(A.effect&&this.isFrozen&&A._wasPreviouslyReady&&A._wasPreviouslyUsingInstances===S)return!0;a.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),a.materialDefines=new H(this._eventInfo.defineNames));const Z=this.GP(),p=a.materialDefines;if(this._isReadyForSubMesh(a))return!0;const j=Z.getEngine();p._needNormals=(0,x.R)(Z,P,p,!0,this._maxSimultaneousLights,this._disableLighting),(0,x.Z)(Z,p);const l=this.needAlphaBlendingForMesh(P)&&this.GP().useOrderIndependentTransparency;if((0,x.bb)(Z,p,this.canRenderToMRT&&!l),(0,x._)(Z,p,l),d.e.PrepareDefines(j.currentRenderPassId,P,p),p._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,p._needUVs=!1;for(let P=1;P<=6;++P)p["MAINUV"+P]=!1;if(Z.texturesEnabled){if(p.DIFFUSEDIRECTUV=0,p.BUMPDIRECTUV=0,p.AMBIENTDIRECTUV=0,p.OPACITYDIRECTUV=0,p.EMISSIVEDIRECTUV=0,p.SPECULARDIRECTUV=0,p.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&mP.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._diffuseTexture,p,"DIFFUSE")}else p.DIFFUSE=!1;if(this._ambientTexture&&mP.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._ambientTexture,p,"AMBIENT")}else p.AMBIENT=!1;if(this._opacityTexture&&mP.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._opacityTexture,p,"OPACITY"),p.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else p.OPACITY=!1;if(this._reflectionTexture&&mP.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(p._needNormals=!0,p.REFLECTION=!0,p.ROUGHNESS=this._roughness>0,p.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,p.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===O.e.INVCUBIC_MODE,p.REFLECTIONMAP_3D=this._reflectionTexture.isCube,p.REFLECTIONMAP_OPPOSITEZ=p.REFLECTIONMAP_3D&&this.GP().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,p.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case O.e.EXPLICIT_MODE:p.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case O.e.PLANAR_MODE:p.setReflectionMode("REFLECTIONMAP_PLANAR");break;case O.e.PROJECTION_MODE:p.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case O.e.SKYBOX_MODE:p.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case O.e.SPHERICAL_MODE:p.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case O.e.EQUIRECTANGULAR_MODE:p.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case O.e.FIXED_EQUIRECTANGULAR_MODE:p.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case O.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:p.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case O.e.CUBIC_MODE:case O.e.INVCUBIC_MODE:default:p.setReflectionMode("REFLECTIONMAP_CUBIC")}p.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else p.REFLECTION=!1,p.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&mP.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._emissiveTexture,p,"EMISSIVE")}else p.EMISSIVE=!1;if(this._lightmapTexture&&mP.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._lightmapTexture,p,"LIGHTMAP"),p.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,p.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else p.LIGHTMAP=!1;if(this._specularTexture&&mP.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,x.V)(this._specularTexture,p,"SPECULAR"),p.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else p.SPECULAR=!1;if(Z.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&mP.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,x.V)(this._bumpTexture,p,"BUMP"),p.PARALLAX=this._useParallax,p.PARALLAX_RHS=Z.useRightHandedSystem,p.PARALLAXOCCLUSION=this._useParallaxOcclusion,p.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else p.BUMP=!1,p.PARALLAX=!1,p.PARALLAX_RHS=!1,p.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&mP.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;p._needUVs=!0,p.REFRACTION=!0,p.REFRACTIONMAP_3D=this._refractionTexture.isCube,p.RGBDREFRACTION=this._refractionTexture.isRGBD,p.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else p.REFRACTION=!1;p.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else p.DIFFUSE=!1,p.AMBIENT=!1,p.OPACITY=!1,p.REFLECTION=!1,p.EMISSIVE=!1,p.LIGHTMAP=!1,p.BUMP=!1,p.REFRACTION=!1;p.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),p.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,p.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,p.SPECULAROVERALPHA=this._useSpecularOverAlpha,p.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,p.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,p.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(P)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=p,this._eventInfo.subMesh=a,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(p._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(p),p.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,p.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(p._areFresnelDirty&&(mP.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(p.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,p.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,p.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,p.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,p.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,p.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,p._needNormals=!0,p.FRESNEL=!0):p.FRESNEL=!1),p.AREALIGHTUSED)for(let R=0;R<P.lightSources.length;R++)if(!P.lightSources[R]._isReady())return!1;(0,x.X)(P,Z,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(P),p,this._applyDecalMapAfterDetailMap),(0,x.N)(Z,j,this,p,S,null,a.getRenderingMesh().hasThinInstances),this._eventInfo.defines=p,this._eventInfo.mesh=P,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,x.M)(P,p,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let V=!1;if(p.isDirty){const S=p._areLightsDisposed;p.markAsProcessed();const A=new t.d;p.REFLECTION&&A.addFallback(0,"REFLECTION"),p.SPECULAR&&A.addFallback(0,"SPECULAR"),p.BUMP&&A.addFallback(0,"BUMP"),p.PARALLAX&&A.addFallback(1,"PARALLAX"),p.PARALLAX_RHS&&A.addFallback(1,"PARALLAX_RHS"),p.PARALLAXOCCLUSION&&A.addFallback(0,"PARALLAXOCCLUSION"),p.SPECULAROVERALPHA&&A.addFallback(0,"SPECULAROVERALPHA"),p.FOG&&A.addFallback(1,"FOG"),p.POINTSIZE&&A.addFallback(0,"POINTSIZE"),p.LOGARITHMICDEPTH&&A.addFallback(0,"LOGARITHMICDEPTH"),(0,x.x)(p,A,this._maxSimultaneousLights),p.SPECULARTERM&&A.addFallback(0,"SPECULARTERM"),p.DIFFUSEFRESNEL&&A.addFallback(1,"DIFFUSEFRESNEL"),p.OPACITYFRESNEL&&A.addFallback(2,"OPACITYFRESNEL"),p.REFLECTIONFRESNEL&&A.addFallback(3,"REFLECTIONFRESNEL"),p.EMISSIVEFRESNEL&&A.addFallback(4,"EMISSIVEFRESNEL"),p.FRESNEL&&A.addFallback(4,"FRESNEL"),p.MULTIVIEW&&A.addFallback(0,"MULTIVIEW");const l=[U.i.PositionKind];p.NORMAL&&l.push(U.i.NormalKind),p.TANGENT&&l.push(U.i.TangentKind);for(let P=1;P<=6;++P)p["UV"+P]&&l.push(`uv${1===P?"":P}`);p.VERTEXCOLOR&&l.push(U.i.ColorKind),(0,x.B)(l,P,p,A),(0,x.C)(l,p),(0,x.E)(l,P,p),(0,x.y)(l,P,p);let f="default";const O=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],q=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],y=["Material","Scene","Mesh"],W={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:p.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=A,this._eventInfo.fallbackRank=0,this._eventInfo.defines=p,this._eventInfo.uniforms=O,this._eventInfo.attributes=l,this._eventInfo.samplers=q,this._eventInfo.uniformBuffersNames=y,this._eventInfo.customCode=void 0,this._eventInfo.mesh=P,this._eventInfo.indexParameters=W,this._callbackPluginEventGeneric(128,this._eventInfo),d.e.AddUniformsAndSamplers(O,q),Q.d.AddUniforms(O),Q.d.AddSamplers(q),h.d&&(h.d.PrepareUniforms(O,p),h.d.PrepareSamplers(q,p)),(0,x.cb)({uniformsNames:O,uniformBuffersNames:y,samplers:q,defines:p,maxSimultaneousLights:this._maxSimultaneousLights}),(0,k.c)(O);const s={};this.customShaderNameResolve&&(f=this.customShaderNameResolve(f,O,y,q,p,l,s));const H=p.toString(),mP=a.effect;let N=Z.getEngine().createEffect(f,{attributes:l,uniformsNames:O,uniformBuffersNames:y,samplers:q,defines:H,fallbacks:A,onCompiled:this.onCompiled,onError:this.onError,indexParameters:W,processFinalCode:s.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:p.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([R.e(41),R.e(64)]).then(R.bind(R,15818)),Promise.all([R.e(39),R.e(65)]).then(R.bind(R,15957))]):await Promise.all([Promise.all([R.e(34),R.e(67)]).then(R.bind(R,16034)),Promise.all([R.e(33),R.e(68)]).then(R.bind(R,16196))]),this._shadersLoaded=!0}},j);if(this._eventInfo.customCode=void 0,N)if(this._onEffectCreatedObservable&&(G.effect=N,G.subMesh=a,this._onEffectCreatedObservable.notifyObservers(G)),this.allowShaderHotSwapping&&mP&&!N.isReady()){if(N=mP,p.markAsUnprocessed(),V=this.isFrozen,S)return p._areLightsDisposed=!0,!1}else Z.resetCachedMaterial(),a.setEffect(N,p,this._materialContext)}return!(!a.effect||!a.effect.isReady())&&(p._renderId=Z.getRenderId(),A._wasPreviouslyReady=!V,A._wasPreviouslyUsingInstances=S,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const P=this._uniformBuffer;P.addUniform("diffuseLeftColor",4),P.addUniform("diffuseRightColor",4),P.addUniform("opacityParts",4),P.addUniform("reflectionLeftColor",4),P.addUniform("reflectionRightColor",4),P.addUniform("refractionLeftColor",4),P.addUniform("refractionRightColor",4),P.addUniform("emissiveLeftColor",4),P.addUniform("emissiveRightColor",4),P.addUniform("vDiffuseInfos",2),P.addUniform("vAmbientInfos",2),P.addUniform("vOpacityInfos",2),P.addUniform("vReflectionInfos",2),P.addUniform("vReflectionPosition",3),P.addUniform("vReflectionSize",3),P.addUniform("vEmissiveInfos",2),P.addUniform("vLightmapInfos",2),P.addUniform("vSpecularInfos",2),P.addUniform("vBumpInfos",3),P.addUniform("diffuseMatrix",16),P.addUniform("ambientMatrix",16),P.addUniform("opacityMatrix",16),P.addUniform("reflectionMatrix",16),P.addUniform("emissiveMatrix",16),P.addUniform("lightmapMatrix",16),P.addUniform("specularMatrix",16),P.addUniform("bumpMatrix",16),P.addUniform("vTangentSpaceParams",2),P.addUniform("pointSize",1),P.addUniform("alphaCutOff",1),P.addUniform("refractionMatrix",16),P.addUniform("vRefractionInfos",4),P.addUniform("vRefractionPosition",3),P.addUniform("vRefractionSize",3),P.addUniform("vSpecularColor",4),P.addUniform("vEmissiveColor",3),P.addUniform("vDiffuseColor",4),P.addUniform("vAmbientColor",3),P.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(P,a,R){const S=this.GP(),A=R.materialDefines;if(!A)return;const Z=R.effect;if(!Z)return;this._activeEffect=Z,a.getMeshUniformBuffer().bindToEffect(Z,"Mesh"),a.transferToEffect(P),this._uniformBuffer.bindToEffect(Z,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,S,a,P,this.isFrozen),d.e.Bind(S.getEngine().currentRenderPassId,this._activeEffect,a,P,this);const U=S.activeCamera;U?this._uniformBuffer.updateFloat4("cameraInfo",U.Uj,U.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=R,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),A.OBJECTSPACE_NORMALMAP&&(P.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const Q=this._mustRebind(S,Z,R,a.visibility);(0,x.d)(a,Z);const h=this._uniformBuffer;if(Q){if(this.bindViewProjection(Z),!h.useUbo||!this.isFrozen||!h.isSync||R._drawWrapper._forceRebindOnNextCall){if(mP.FresnelEnabled&&A.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new j.Wa(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),S.texturesEnabled){if(this._diffuseTexture&&mP.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,x.v)(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&mP.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,x.v)(this._ambientTexture,h,"ambient")),this._opacityTexture&&mP.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,x.v)(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&mP.ReflectionTextureEnabled){if(h.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),h.Qj("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const P=this._reflectionTexture;h.updateVector3("vReflectionPosition",P.boundingBoxPosition),h.updateVector3("vReflectionSize",P.boundingBoxSize)}}else h.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&mP.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,x.v)(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&mP.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,x.v)(this._lightmapTexture,h,"lightmap")),this._specularTexture&&mP.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,x.v)(this._specularTexture,h,"specular")),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&mP.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,x.v)(this._bumpTexture,h,"bump"),S._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&mP.RefractionTextureEnabled){let P=1;if(this._refractionTexture.isCube||(h.Qj("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(P=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,P,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const P=this._refractionTexture;h.updateVector3("vRefractionPosition",P.boundingBoxPosition),h.updateVector3("vRefractionSize",P.boundingBoxSize)}}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",mP.EmissiveTextureEnabled?this.emissiveColor:j.Wa.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),S.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}S.texturesEnabled&&(this._diffuseTexture&&mP.DiffuseTextureEnabled&&Z.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&mP.AmbientTextureEnabled&&Z.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&mP.OpacityTextureEnabled&&Z.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&mP.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?Z.setTexture("reflectionCubeSampler",this._reflectionTexture):Z.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&mP.EmissiveTextureEnabled&&Z.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&mP.LightmapTextureEnabled&&Z.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&mP.SpecularTextureEnabled&&Z.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&mP.BumpTextureEnabled&&Z.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&mP.RefractionTextureEnabled&&(this._refractionTexture.isCube?Z.setTexture("refractionCubeSampler",this._refractionTexture):Z.setTexture("refraction2DSampler",this._refractionTexture))),this.GP().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(a)&&this.GP().depthPeelingRenderer.bind(Z),this._eventInfo.subMesh=R,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,k.f)(Z,this,S),this.bindEyePosition(Z)}else S.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(Q||!this.isFrozen){var l;if(S.lightsEnabled&&!this._disableLighting&&(0,x.j)(S,a,Z,A,this._maxSimultaneousLights),(S.fogEnabled&&a.applyFog&&S.fogMode!==p.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||a.receiveShadows||A.PREPASS)&&this.bindView(Z),(0,x.h)(S,a,Z),A.NUM_MORPH_INFLUENCERS&&(0,x.q)(a,Z),A.BAKED_VERTEX_ANIMATION_TEXTURE)null===(l=a.bakedVertexAnimationManager)||void 0===l||l.bind(Z,A.INSTANCES);this.useLogarithmicDepth&&(0,x.m)(A,Z,S),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(a,this._activeEffect,R),h.update()}getAnimatables(){const P=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&P.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&P.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&P.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&P.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&P.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&P.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&P.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&P.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&P.push(this._refractionTexture),P}getActiveTextures(){const P=super.getActiveTextures();return this._diffuseTexture&&P.push(this._diffuseTexture),this._ambientTexture&&P.push(this._ambientTexture),this._opacityTexture&&P.push(this._opacityTexture),this._reflectionTexture&&P.push(this._reflectionTexture),this._emissiveTexture&&P.push(this._emissiveTexture),this._specularTexture&&P.push(this._specularTexture),this._bumpTexture&&P.push(this._bumpTexture),this._lightmapTexture&&P.push(this._lightmapTexture),this._refractionTexture&&P.push(this._refractionTexture),P}hasTexture(P){return!!super.hasTexture(P)||(this._diffuseTexture===P||(this._ambientTexture===P||(this._opacityTexture===P||(this._reflectionTexture===P||(this._emissiveTexture===P||(this._specularTexture===P||(this._bumpTexture===P||(this._lightmapTexture===P||this._refractionTexture===P))))))))}dispose(P,a){var R,S,A,Z,p,j,U,Q,h;a&&(null===(R=this._diffuseTexture)||void 0===R||R.dispose(),null===(S=this._ambientTexture)||void 0===S||S.dispose(),null===(A=this._opacityTexture)||void 0===A||A.dispose(),null===(Z=this._reflectionTexture)||void 0===Z||Z.dispose(),null===(p=this._emissiveTexture)||void 0===p||p.dispose(),null===(j=this._specularTexture)||void 0===j||j.dispose(),null===(U=this._bumpTexture)||void 0===U||U.dispose(),null===(Q=this._lightmapTexture)||void 0===Q||Q.dispose(),null===(h=this._refractionTexture)||void 0===h||h.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(P,a)}clone(P){let a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],R=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const S=s.e.Clone((()=>new mP(P,this.GP())),this,{cloneTexturesOnlyOnce:a});return S.name=P,S.id=P,this.gp.copyTo(S.gp),this._clonePlugins(S,R),S}static Parse(P,a,R){const S=s.e.Parse((()=>new mP(P.name,a)),P,a,R);return P.gp&&S.gp.parse(P.gp,a,R),l.e._ParsePlugins(P,S,a,R),S}static get DiffuseTextureEnabled(){return y.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){y.c.DiffuseTextureEnabled=P}static get DetailTextureEnabled(){return y.c.DetailTextureEnabled}static set DetailTextureEnabled(P){y.c.DetailTextureEnabled=P}static get AmbientTextureEnabled(){return y.c.AmbientTextureEnabled}static set AmbientTextureEnabled(P){y.c.AmbientTextureEnabled=P}static get OpacityTextureEnabled(){return y.c.OpacityTextureEnabled}static set OpacityTextureEnabled(P){y.c.OpacityTextureEnabled=P}static get ReflectionTextureEnabled(){return y.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){y.c.ReflectionTextureEnabled=P}static get EmissiveTextureEnabled(){return y.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){y.c.EmissiveTextureEnabled=P}static get SpecularTextureEnabled(){return y.c.SpecularTextureEnabled}static set SpecularTextureEnabled(P){y.c.SpecularTextureEnabled=P}static get BumpTextureEnabled(){return y.c.BumpTextureEnabled}static set BumpTextureEnabled(P){y.c.BumpTextureEnabled=P}static get LightmapTextureEnabled(){return y.c.LightmapTextureEnabled}static set LightmapTextureEnabled(P){y.c.LightmapTextureEnabled=P}static get RefractionTextureEnabled(){return y.c.RefractionTextureEnabled}static set RefractionTextureEnabled(P){y.c.RefractionTextureEnabled=P}static get ColorGradingTextureEnabled(){return y.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){y.c.ColorGradingTextureEnabled=P}static get FresnelEnabled(){return y.c.FresnelEnabled}static set FresnelEnabled(P){y.c.FresnelEnabled=P}}mP.ForceGLSL=!1,(0,S.d)([(0,A.s)("diffuseTexture")],mP.prototype,"_diffuseTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],mP.prototype,"diffuseTexture",void 0),(0,S.d)([(0,A.s)("ambientTexture")],mP.prototype,"_ambientTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"ambientTexture",void 0),(0,S.d)([(0,A.s)("opacityTexture")],mP.prototype,"_opacityTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],mP.prototype,"opacityTexture",void 0),(0,S.d)([(0,A.s)("reflectionTexture")],mP.prototype,"_reflectionTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"reflectionTexture",void 0),(0,S.d)([(0,A.s)("emissiveTexture")],mP.prototype,"_emissiveTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"emissiveTexture",void 0),(0,S.d)([(0,A.s)("specularTexture")],mP.prototype,"_specularTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"specularTexture",void 0),(0,S.d)([(0,A.s)("bumpTexture")],mP.prototype,"_bumpTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"bumpTexture",void 0),(0,S.d)([(0,A.s)("lightmapTexture")],mP.prototype,"_lightmapTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"lightmapTexture",void 0),(0,S.d)([(0,A.s)("refractionTexture")],mP.prototype,"_refractionTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"refractionTexture",void 0),(0,S.d)([(0,A.h)("ambient")],mP.prototype,"ambientColor",void 0),(0,S.d)([(0,A.h)("diffuse")],mP.prototype,"diffuseColor",void 0),(0,S.d)([(0,A.h)("specular")],mP.prototype,"specularColor",void 0),(0,S.d)([(0,A.h)("emissive")],mP.prototype,"emissiveColor",void 0),(0,S.d)([(0,A.x)()],mP.prototype,"specularPower",void 0),(0,S.d)([(0,A.x)("useAlphaFromDiffuseTexture")],mP.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],mP.prototype,"useAlphaFromDiffuseTexture",void 0),(0,S.d)([(0,A.x)("useEmissiveAsIllumination")],mP.prototype,"_useEmissiveAsIllumination",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useEmissiveAsIllumination",void 0),(0,S.d)([(0,A.x)("linkEmissiveWithDiffuse")],mP.prototype,"_linkEmissiveWithDiffuse",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"linkEmissiveWithDiffuse",void 0),(0,S.d)([(0,A.x)("useSpecularOverAlpha")],mP.prototype,"_useSpecularOverAlpha",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useSpecularOverAlpha",void 0),(0,S.d)([(0,A.x)("useReflectionOverAlpha")],mP.prototype,"_useReflectionOverAlpha",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useReflectionOverAlpha",void 0),(0,S.d)([(0,A.x)("disableLighting")],mP.prototype,"_disableLighting",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsLightsDirty")],mP.prototype,"disableLighting",void 0),(0,S.d)([(0,A.x)("useObjectSpaceNormalMap")],mP.prototype,"_useObjectSpaceNormalMap",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useObjectSpaceNormalMap",void 0),(0,S.d)([(0,A.x)("useParallax")],mP.prototype,"_useParallax",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useParallax",void 0),(0,S.d)([(0,A.x)("useParallaxOcclusion")],mP.prototype,"_useParallaxOcclusion",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useParallaxOcclusion",void 0),(0,S.d)([(0,A.x)()],mP.prototype,"parallaxScaleBias",void 0),(0,S.d)([(0,A.x)("roughness")],mP.prototype,"_roughness",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"roughness",void 0),(0,S.d)([(0,A.x)()],mP.prototype,"indexOfRefraction",void 0),(0,S.d)([(0,A.x)()],mP.prototype,"invertRefractionY",void 0),(0,S.d)([(0,A.x)()],mP.prototype,"alphaCutOff",void 0),(0,S.d)([(0,A.x)("useLightmapAsShadowmap")],mP.prototype,"_useLightmapAsShadowmap",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useLightmapAsShadowmap",void 0),(0,S.d)([(0,A.k)("diffuseFresnelParameters")],mP.prototype,"_diffuseFresnelParameters",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],mP.prototype,"diffuseFresnelParameters",void 0),(0,S.d)([(0,A.k)("opacityFresnelParameters")],mP.prototype,"_opacityFresnelParameters",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],mP.prototype,"opacityFresnelParameters",void 0),(0,S.d)([(0,A.k)("reflectionFresnelParameters")],mP.prototype,"_reflectionFresnelParameters",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],mP.prototype,"reflectionFresnelParameters",void 0),(0,S.d)([(0,A.k)("refractionFresnelParameters")],mP.prototype,"_refractionFresnelParameters",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],mP.prototype,"refractionFresnelParameters",void 0),(0,S.d)([(0,A.k)("emissiveFresnelParameters")],mP.prototype,"_emissiveFresnelParameters",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],mP.prototype,"emissiveFresnelParameters",void 0),(0,S.d)([(0,A.x)("useReflectionFresnelFromSpecular")],mP.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],mP.prototype,"useReflectionFresnelFromSpecular",void 0),(0,S.d)([(0,A.x)("useGlossinessFromSpecularMapAlpha")],mP.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,S.d)([(0,A.x)("maxSimultaneousLights")],mP.prototype,"_maxSimultaneousLights",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsLightsDirty")],mP.prototype,"maxSimultaneousLights",void 0),(0,S.d)([(0,A.x)("invertNormalMapX")],mP.prototype,"_invertNormalMapX",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"invertNormalMapX",void 0),(0,S.d)([(0,A.x)("invertNormalMapY")],mP.prototype,"_invertNormalMapY",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"invertNormalMapY",void 0),(0,S.d)([(0,A.x)("twoSidedLighting")],mP.prototype,"_twoSidedLighting",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],mP.prototype,"twoSidedLighting",void 0),(0,S.d)([(0,A.x)("applyDecalMapAfterDetailMap")],mP.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,S.d)([(0,A.b)("_markAllSubMeshesAsMiscDirty")],mP.prototype,"applyDecalMapAfterDetailMap",void 0),(0,q.d)("BABYLON.StandardMaterial",mP),p.b.DefaultMaterialFactory=P=>new mP("default material",P)}}]);