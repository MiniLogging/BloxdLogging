"use strict";(self["3b8bnhi4gzj"]=self["3b8bnhi4gzj"]||[]).push([[25],{12123:(Z,h,V)=>{V.d(h,{b:()=>N});var v=V(11720),A=V(12062),H=V(11723),K=V(12121),d=V(12115),a=V(12131),n=V(12096);class x extends d.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class N extends a.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(Z){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(Z,"DetailMap",140,new x,h),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=A.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=Z._dirtyCallbacks[1]}isReadyForSubMesh(Z,h,V){return!this._isEnabled||!(Z._areTexturesDirty&&h.texturesEnabled&&V.getCaps().standardDerivatives&&this._texture&&K.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(Z,h){if(this._isEnabled){Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const V=h.getEngine();Z._areTexturesDirty&&(V.getCaps().standardDerivatives&&this._texture&&K.e.DetailTextureEnabled&&this._isEnabled?((0,n.Q)(this._texture,Z,"DETAIL"),Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):Z.DETAIL=!1)}else Z.DETAIL=!1}bindForSubMesh(Z,h){if(!this._isEnabled)return;const V=this._material.isFrozen;Z.useUbo&&V&&Z.isSync||this._texture&&K.e.DetailTextureEnabled&&(Z.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,n.s)(this._texture,Z,"detail")),h.texturesEnabled&&this._texture&&K.e.DetailTextureEnabled&&Z.setTexture("detailSampler",this._texture)}hasTexture(Z){return this._texture===Z}getActiveTextures(Z){this._texture&&Z.push(this._texture)}getAnimatables(Z){this._texture&&this._texture.animations&&this._texture.animations.length>0&&Z.push(this._texture)}dispose(Z){var h;Z&&(null===(h=this._texture)||void 0===h||h.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(Z){Z.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,v.b)([(0,H.z)("detailTexture"),(0,H.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"texture",void 0),(0,v.b)([(0,H.I)()],N.prototype,"diffuseBlendLevel",void 0),(0,v.b)([(0,H.I)()],N.prototype,"roughnessBlendLevel",void 0),(0,v.b)([(0,H.I)()],N.prototype,"bumpLevel",void 0),(0,v.b)([(0,H.I)(),(0,H.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"normalBlendMethod",void 0),(0,v.b)([(0,H.I)(),(0,H.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"isEnabled",void 0)},12115:(Z,h,V)=>{V.d(h,{b:()=>v});class v{constructor(Z){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=Z,Z)for(const h in Z)Object.prototype.hasOwnProperty.call(Z,h)&&this._setDefaultValue(h)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||Z,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const Z of Object.keys(this))"_"!==Z[0]&&this._keys.push(Z);if(this._externalProperties)for(const Z in this._externalProperties)-1===this._keys.indexOf(Z)&&this._keys.push(Z)}isEqual(Z){if(this._keys.length!==Z._keys.length)return!1;for(let h=0;h<this._keys.length;h++){const V=this._keys[h];if(this[V]!==Z[V])return!1}return!0}cloneTo(Z){this._keys.length!==Z._keys.length&&(Z._keys=this._keys.slice(0));for(let h=0;h<this._keys.length;h++){const V=this._keys[h];Z[V]=this[V]}}reset(){for(const Z of this._keys)this._setDefaultValue(Z)}_setDefaultValue(Z){var h,V,v,A;const H=(null===(h=this._externalProperties)||void 0===h||null===(V=h[Z])||void 0===V?void 0:V.type)??typeof this[Z],K=null===(v=this._externalProperties)||void 0===v||null===(A=v[Z])||void 0===A?void 0:A.default;switch(H){case"number":this[Z]=K??0;break;case"string":this[Z]=K??"";break;default:this[Z]=K??!1}}toString(){let Z="";for(let h=0;h<this._keys.length;h++){const V=this._keys[h],v=this[V];switch(typeof v){case"number":case"string":Z+="#define "+V+" "+v+"\n";break;default:v&&(Z+="#define "+V+"\n")}}return Z}}},12121:(Z,h,V)=>{V.d(h,{e:()=>A});var v=V(11635);class A{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){this._DiffuseTextureEnabled!==Z&&(this._DiffuseTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(Z){this._BaseWeightTextureEnabled!==Z&&(this._BaseWeightTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(Z){this._BaseDiffuseRoughnessTextureEnabled!==Z&&(this._BaseDiffuseRoughnessTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(Z){this._DetailTextureEnabled!==Z&&(this._DetailTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(Z){this._DecalMapEnabled!==Z&&(this._DecalMapEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(Z){this._AmbientTextureEnabled!==Z&&(this._AmbientTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(Z){this._OpacityTextureEnabled!==Z&&(this._OpacityTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){this._ReflectionTextureEnabled!==Z&&(this._ReflectionTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){this._EmissiveTextureEnabled!==Z&&(this._EmissiveTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(Z){this._SpecularTextureEnabled!==Z&&(this._SpecularTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(Z){this._BumpTextureEnabled!==Z&&(this._BumpTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(Z){this._LightmapTextureEnabled!==Z&&(this._LightmapTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(Z){this._RefractionTextureEnabled!==Z&&(this._RefractionTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){this._ColorGradingTextureEnabled!==Z&&(this._ColorGradingTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(Z){this._FresnelEnabled!==Z&&(this._FresnelEnabled=Z,v.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(Z){this._ClearCoatTextureEnabled!==Z&&(this._ClearCoatTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(Z){this._ClearCoatBumpTextureEnabled!==Z&&(this._ClearCoatBumpTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(Z){this._ClearCoatTintTextureEnabled!==Z&&(this._ClearCoatTintTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(Z){this._SheenTextureEnabled!==Z&&(this._SheenTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(Z){this._AnisotropicTextureEnabled!==Z&&(this._AnisotropicTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(Z){this._ThicknessTextureEnabled!==Z&&(this._ThicknessTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(Z){this._RefractionIntensityTextureEnabled!==Z&&(this._RefractionIntensityTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(Z){this._TranslucencyIntensityTextureEnabled!==Z&&(this._TranslucencyIntensityTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(Z){this._TranslucencyColorTextureEnabled!==Z&&(this._TranslucencyColorTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(Z){this._IridescenceTextureEnabled!==Z&&(this._IridescenceTextureEnabled=Z,v.d.MarkAllMaterialsAsDirty(1))}}A._DiffuseTextureEnabled=!0,A._BaseWeightTextureEnabled=!0,A._BaseDiffuseRoughnessTextureEnabled=!0,A._DetailTextureEnabled=!0,A._DecalMapEnabled=!0,A._AmbientTextureEnabled=!0,A._OpacityTextureEnabled=!0,A._ReflectionTextureEnabled=!0,A._EmissiveTextureEnabled=!0,A._SpecularTextureEnabled=!0,A._BumpTextureEnabled=!0,A._LightmapTextureEnabled=!0,A._RefractionTextureEnabled=!0,A._ColorGradingTextureEnabled=!0,A._FresnelEnabled=!0,A._ClearCoatTextureEnabled=!0,A._ClearCoatBumpTextureEnabled=!0,A._ClearCoatTintTextureEnabled=!0,A._SheenTextureEnabled=!0,A._AnisotropicTextureEnabled=!0,A._ThicknessTextureEnabled=!0,A._RefractionIntensityTextureEnabled=!0,A._TranslucencyIntensityTextureEnabled=!0,A._TranslucencyColorTextureEnabled=!0,A._IridescenceTextureEnabled=!0},12139:(Z,h,V)=>{V.d(h,{d:()=>H});var v,A=V(11729);!function(Z){Z[Z.Zero=0]="Zero",Z[Z.One=1]="One",Z[Z.MaxViewZ=2]="MaxViewZ"}(v||(v={}));class H{static CreateConfiguration(Z){return H._Configurations[Z]={defines:{},previousWorldMatrices:{},previousViewProjection:A.Matrix.Zero(),currentViewProjection:A.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},H._Configurations[Z]}static DeleteConfiguration(Z){delete H._Configurations[Z]}static GetConfiguration(Z){return H._Configurations[Z]}static AddUniformsAndSamplers(Z,h){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(Z,h){for(const V of h)if(V.zh)for(const h of V.zh)h._removeDrawWrapper(Z)}static PrepareDefines(Z,h,V){if(!V._arePrePassDirty)return;const v=H._Configurations[Z];if(!v)return;V.PREPASS=!0,V.PREPASS_COLOR=!1,V.PREPASS_COLOR_INDEX=-1;let A=0;for(let K=0;K<H.GeometryTextureDescriptions.length;K++){const Z=H.GeometryTextureDescriptions[K],h=Z.define,d=Z.defineIndex,a=v.defines[d];void 0!==a?(V[h]=!0,V[d]=a,A++):(V[h]=!1,delete V[d])}V.SCENE_MRT_COUNT=A,V.BONES_VELOCITY_ENABLED=h.useBones&&h.computeBonesUsingShaders&&h.skeleton&&!h.skeleton.isUsingTextureForMatrices&&-1===v.excludedSkinnedMesh.indexOf(h)}static Bind(Z,h,V,v,A){const K=H._Configurations[Z];if(!K)return;const d=V.CZ(),a=d.getEngine();if(K.reverseCulling&&a.setStateCullFaceType(d._mirroredCameraPosition?A.cullBackFaces:!A.cullBackFaces),(void 0!==K.defines.PREPASS_VELOCITY_INDEX||void 0!==K.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(K.previousWorldMatrices[V.uniqueId]||(K.previousWorldMatrices[V.uniqueId]=v.clone()),K.previousViewProjection||(K.previousViewProjection=d.getTransformMatrix().clone(),K.currentViewProjection=d.getTransformMatrix().clone()),K.currentViewProjection.updateFlag!==d.getTransformMatrix().updateFlag?(K.lastUpdateFrameId=a.frameId,K.previousViewProjection.v(K.currentViewProjection),K.currentViewProjection.v(d.getTransformMatrix())):K.lastUpdateFrameId!==a.frameId&&(K.lastUpdateFrameId=a.frameId,K.previousViewProjection.v(K.currentViewProjection)),h.setMatrix("previousWorld",K.previousWorldMatrices[V.uniqueId]),h.setMatrix("previousViewProjection",K.previousViewProjection),K.previousWorldMatrices[V.uniqueId]=v.clone(),V.useBones&&V.computeBonesUsingShaders&&V.skeleton)){const Z=V.skeleton;if(!Z.isUsingTextureForMatrices||-1===h.getUniformIndex("boneTextureWidth")){const v=Z.getTransformMatrices(V);v&&(K.previousBones[V.uniqueId]||(K.previousBones[V.uniqueId]=v.slice()),h.setMatrices("mPreviousBones",K.previousBones[V.uniqueId]),K.previousBones[V.uniqueId].set(v))}}}}H.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],H._Configurations={}},12131:(Z,h,V)=>{V.d(h,{d:()=>o});var v=V(11720),A=V(11723),H=V(12062),K=V(11599),d=V(11615),a=V(11647);const n=new RegExp("^([gimus]+)!");class x{constructor(Z){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=Z,this._scene=Z.CZ(),this._engine=this._scene.getEngine()}_addPlugin(Z){for(let v=0;v<this._plugins.length;++v)if(this._plugins[v].name===Z.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!Z.isCompatible(this._material.shaderLanguage))throw`The plugin "${Z.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const h=Z.getClassName();x._MaterialPluginClassToMainDefine[h]||(x._MaterialPluginClassToMainDefine[h]="MATERIALPLUGIN_"+ ++x._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(Z,h)=>this._handlePluginEvent(Z,h),this._plugins.push(Z),this._plugins.sort(((Z,h)=>Z.priority-h.priority)),this._codeInjectionPoints={};const V={};V[x._MaterialPluginClassToMainDefine[h]]={type:"boolean",default:!0};for(const v of this._plugins)v.collectDefines(V),this._collectPointNames("vertex",v.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",v.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=V,!0}_activatePlugin(Z){-1===this._activePlugins.indexOf(Z)&&(this._activePlugins.push(Z),this._activePlugins.sort(((Z,h)=>Z.priority-h.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),Z.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(Z),this._activePluginsForExtraEvents.sort(((Z,h)=>Z.priority-h.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(Z){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===Z)return this._plugins[h];return null}_handlePluginEventIsReadyForSubMesh(Z){let h=!0;for(const V of this._activePlugins)h=h&&V.isReadyForSubMesh(Z.defines,this._scene,this._engine,Z.subMesh);Z.isReadyForSubMesh=h}_handlePluginEventPrepareDefinesBeforeAttributes(Z){for(const h of this._activePlugins)h.prepareDefinesBeforeAttributes(Z.defines,this._scene,Z.mesh)}_handlePluginEventPrepareDefines(Z){for(const h of this._activePlugins)h.prepareDefines(Z.defines,this._scene,Z.mesh)}_handlePluginEventHardBindForSubMesh(Z){for(const h of this._activePluginsForExtraEvents)h.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventBindForSubMesh(Z){for(const h of this._activePlugins)h.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventHasRenderTargetTextures(Z){let h=!1;for(const V of this._activePluginsForExtraEvents)if(h=V.hasRenderTargetTextures(),h)break;Z.hasRenderTargetTextures=h}_handlePluginEventFillRenderTargetTextures(Z){for(const h of this._activePluginsForExtraEvents)h.fillRenderTargetTextures(Z.renderTargets)}_handlePluginEvent(Z,h){switch(Z){case 512:{const Z=h;for(const h of this._activePlugins)h.getActiveTextures(Z.activeTextures);break}case 256:{const Z=h;for(const h of this._activePlugins)h.getAnimatables(Z.animatables);break}case 1024:{const Z=h;let V=!1;for(const h of this._activePlugins)if(V=h.hasTexture(Z.texture),V)break;Z.hasTexture=V;break}case 2:{const Z=h;for(const h of this._plugins)h.dispose(Z.forceDisposeTextures);break}case 4:h.defineNames=this._defineNamesFromPlugins;break;case 128:{const Z=h;for(const h of this._activePlugins)Z.fallbackRank=h.addFallbacks(Z.defines,Z.fallbacks,Z.fallbackRank),h.getAttributes(Z.attributes,this._scene,Z.mesh);this._uniformList.length>0&&Z.uniforms.push(...this._uniformList),this._samplerList.length>0&&Z.samplers.push(...this._samplerList),this._uboList.length>0&&Z.uniformBuffersNames.push(...this._uboList),Z.customCode=this._injectCustomCode(Z,Z.customCode);break}case 8:{const Z=h;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const V=1===this._material.shaderLanguage;for(const h of this._plugins){const v=h.getUniforms(this._material.shaderLanguage);if(v){if(v.ubo)for(const h of v.ubo){if(h.size&&h.type){const v=h.arraySize??0;if(Z.ubo.addUniform(h.name,h.size,v),V){let Z;switch(h.type){case"mat4":Z="mat4x4f";break;case"float":Z="f32";break;default:Z=`${h.type}f`}this._uboDeclaration+=v>0?`uniform ${h.name}: array<${Z}, ${v}>;\n`:`uniform ${h.name}: ${Z};\n`}else this._uboDeclaration+=`${h.type} ${h.name}${v>0?`[${v}]`:""};\n`}this._uniformList.push(h.name)}v.vertex&&(this._vertexDeclaration+=v.vertex+"\n"),v.fragment&&(this._fragmentDeclaration+=v.fragment+"\n")}h.getSamplers(this._samplerList),h.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(Z,h){if(h)for(const V in h)this._codeInjectionPoints[Z]||(this._codeInjectionPoints[Z]={}),this._codeInjectionPoints[Z][V]=!0}_injectCustomCode(Z,h){return(V,v)=>{var A;h&&(v=h(V,v)),this._uboDeclaration&&(v=v.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(v=v.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(v=v.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const H=null===(A=this._codeInjectionPoints)||void 0===A?void 0:A[V];if(!H)return v;let K=null;for(let h in H){let A="";for(const v of this._activePlugins){var x;let H=null===(x=v.getCustomCode(V,this._material.shaderLanguage))||void 0===x?void 0:x[h];if(H){if(v.resolveIncludes){if(null===K){const h=0;K={defines:[],indexParameters:Z.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:a.c.GetShadersRepository(h),includesShadersStore:a.c.GetIncludesShadersStore(h),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}K.isFragment="fragment"===V,(0,d.h)(H,K,(Z=>H=Z))}A+=H+"\n"}}if(A.length>0)if("!"===h.charAt(0)){h=h.substring(1);let Z="g";if("!"===h.charAt(0))Z="",h=h.substring(1);else{const V=n.exec(h);V&&V.length>=2&&(Z=V[1],h=h.substring(Z.length+1))}Z.indexOf("g")<0&&(Z+="g");const V=v,H=new RegExp(h,Z);let K=H.exec(V);for(;null!==K;){let Z=A;for(let h=0;h<K.length;++h)Z=Z.replace("$"+h,K[h]);v=v.replace(K[0],Z),K=H.exec(V)}}else{const Z="#define "+h;v=v.replace(Z,"\n"+A+"\n"+Z)}}return v}}}x._MaterialPluginClassToMainDefine={},x._MaterialPluginCounter=0,K.b.OnEnginesDisposedObservable.add((()=>{u()}));const N=[];let D=!1,k=null;function u(){N.length=0,D=!1,H.b.OnEventObservable.remove(k),k=null}var F=V(11769),b=V(11691);class o{isCompatible(Z){return 0===Z}_enable(Z){Z&&this._pluginManager._activatePlugin(this)}constructor(Z,h,V,v){let A=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],H=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=Z,this.name=h,this.priority=V,this.resolveIncludes=K,Z.pluginManager||(Z.pluginManager=new x(Z),Z.jh.add((()=>{Z.pluginManager=void 0}))),this._pluginDefineNames=v,this._pluginManager=Z.pluginManager,A&&this._pluginManager._addPlugin(this),H&&this._enable(!0),this.markAllDefinesAsDirty=Z._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(Z,h,V,v){return!0}hardBindForSubMesh(Z,h,V,v){}bindForSubMesh(Z,h,V,v){}dispose(Z){}getCustomCode(Z){return null}collectDefines(Z){if(this._pluginDefineNames)for(const h of Object.keys(this._pluginDefineNames)){if("_"===h[0])continue;const V=typeof this._pluginDefineNames[h];Z[h]={type:"number"===V?"number":"string"===V?"string":"boolean"===V?"boolean":"object",default:this._pluginDefineNames[h]}}}prepareDefinesBeforeAttributes(Z,h,V){}prepareDefines(Z,h,V){}hasTexture(Z){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(Z){}getActiveTextures(Z){}getAnimatables(Z){}addFallbacks(Z,h,V){return V}getSamplers(Z){}getAttributes(Z,h,V){}getUniformBuffersNames(Z){}getUniforms(){return{}}copyTo(Z){F.b.Clone((()=>Z),this)}serialize(){return F.b.Serialize(this)}parse(Z,h,V){F.b.Parse((()=>this),Z,h,V)}}(0,v.b)([(0,A.I)()],o.prototype,"name",void 0),(0,v.b)([(0,A.I)()],o.prototype,"priority",void 0),(0,v.b)([(0,A.I)()],o.prototype,"resolveIncludes",void 0),(0,v.b)([(0,A.I)()],o.prototype,"registerForExtraEvents",void 0),(0,b.i)("BABYLON.MaterialPluginBase",o)},12106:(Z,h,V)=>{V.d(h,{c:()=>v});class v{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(Z){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(Z){}bindForSubMesh(Z,h,V,v,A){if(h.prePassRenderer&&h.prePassRenderer.enabled&&h.prePassRenderer.currentRTisSceneRT&&(-1!==h.prePassRenderer.getIndex(2)||-1!==h.prePassRenderer.getIndex(11))){this.previousWorldMatrices[V.uniqueId]||(this.previousWorldMatrices[V.uniqueId]=v.clone()),this.previousViewProjection||(this.previousViewProjection=h.getTransformMatrix().clone(),this.currentViewProjection=h.getTransformMatrix().clone());const A=h.getEngine();this.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=A.frameId,this.previousViewProjection.v(this.currentViewProjection),this.currentViewProjection.v(h.getTransformMatrix())):this._lastUpdateFrameId!==A.frameId&&(this._lastUpdateFrameId=A.frameId,this.previousViewProjection.v(this.currentViewProjection)),Z.setMatrix("previousWorld",this.previousWorldMatrices[V.uniqueId]),Z.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[V.uniqueId]=v.clone()}}}},12102:(Z,h,V)=>{V.d(h,{gh:()=>B});var v=V(11720),A=V(11723),H=V(11833),K=V(11983),d=V(11781),a=V(11805),n=V(12106),x=V(11989),N=V(12062),D=V(12115),k=V(12053),u=V(11713),F=V(11691),b=V(12121),o=V(12050),q=V(12123),X=V(12099),E=V(12096),j=V(11769),P=V(12139);const C={effect:null,subMesh:null};class l extends D.b{constructor(Z){super(Z),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(Z){const h=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const V of h)this[V]=V===Z}}class B extends k.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(Z){this._attachImageProcessingConfiguration(Z),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(Z){Z!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=Z||this.CZ().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(Z){this.imageProcessingConfiguration.colorCurvesEnabled=Z}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(Z){this.imageProcessingConfiguration.colorGradingEnabled=Z}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(Z){this._imageProcessingConfiguration.toneMappingEnabled=Z}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(Z){this._imageProcessingConfiguration.exposure=Z}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(Z){this._imageProcessingConfiguration.contrast=Z}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(Z){this._imageProcessingConfiguration.colorGradingTexture=Z}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(Z){this._imageProcessingConfiguration.colorCurves=Z}get canRenderToMRT(){return!0}constructor(Z,h){super(Z,h,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||B.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new d.Ih(0,0,0),this.diffuseColor=new d.Ih(1,1,1),this.specularColor=new d.Ih(1,1,1),this.emissiveColor=new d.Ih(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new H.h(16),this._globalAmbientColor=new d.Ih(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new q.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new n.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),B.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),B.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(B.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(B.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"gh"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===N.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Uh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==N.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Uh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(Z,h){let v=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const A=h._drawWrapper;if(A.effect&&this.isFrozen&&A._wasPreviouslyReady&&A._wasPreviouslyUsingInstances===v)return!0;h.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),h.materialDefines=new l(this._eventInfo.defineNames));const H=this.CZ(),K=h.materialDefines;if(this._isReadyForSubMesh(h))return!0;const d=H.getEngine();K._needNormals=(0,E.O)(H,Z,K,!0,this._maxSimultaneousLights,this._disableLighting),(0,E.U)(H,K);const N=this.needAlphaBlendingForMesh(Z)&&this.CZ().useOrderIndependentTransparency;if((0,E.Z)(H,K,this.canRenderToMRT&&!N),(0,E.X)(H,K,N),P.d.PrepareDefines(d.currentRenderPassId,Z,K),K._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,K._needUVs=!1;for(let Z=1;Z<=6;++Z)K["MAINUV"+Z]=!1;if(H.texturesEnabled){if(K.DIFFUSEDIRECTUV=0,K.BUMPDIRECTUV=0,K.AMBIENTDIRECTUV=0,K.OPACITYDIRECTUV=0,K.EMISSIVEDIRECTUV=0,K.SPECULARDIRECTUV=0,K.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&B.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._diffuseTexture,K,"DIFFUSE")}else K.DIFFUSE=!1;if(this._ambientTexture&&B.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._ambientTexture,K,"AMBIENT")}else K.AMBIENT=!1;if(this._opacityTexture&&B.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._opacityTexture,K,"OPACITY"),K.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else K.OPACITY=!1;if(this._reflectionTexture&&B.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(K._needNormals=!0,K.REFLECTION=!0,K.ROUGHNESS=this._roughness>0,K.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,K.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===u.e.INVCUBIC_MODE,K.REFLECTIONMAP_3D=this._reflectionTexture.isCube,K.REFLECTIONMAP_OPPOSITEZ=K.REFLECTIONMAP_3D&&this.CZ().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,K.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case u.e.EXPLICIT_MODE:K.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case u.e.PLANAR_MODE:K.setReflectionMode("REFLECTIONMAP_PLANAR");break;case u.e.PROJECTION_MODE:K.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case u.e.SKYBOX_MODE:K.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case u.e.SPHERICAL_MODE:K.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case u.e.EQUIRECTANGULAR_MODE:K.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case u.e.FIXED_EQUIRECTANGULAR_MODE:K.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case u.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:K.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case u.e.CUBIC_MODE:case u.e.INVCUBIC_MODE:default:K.setReflectionMode("REFLECTIONMAP_CUBIC")}K.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else K.REFLECTION=!1,K.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&B.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._emissiveTexture,K,"EMISSIVE")}else K.EMISSIVE=!1;if(this._lightmapTexture&&B.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._lightmapTexture,K,"LIGHTMAP"),K.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,K.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else K.LIGHTMAP=!1;if(this._specularTexture&&B.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,E.Q)(this._specularTexture,K,"SPECULAR"),K.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else K.SPECULAR=!1;if(H.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&B.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,E.Q)(this._bumpTexture,K,"BUMP"),K.PARALLAX=this._useParallax,K.PARALLAX_RHS=H.useRightHandedSystem,K.PARALLAXOCCLUSION=this._useParallaxOcclusion,K.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else K.BUMP=!1,K.PARALLAX=!1,K.PARALLAX_RHS=!1,K.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&B.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;K._needUVs=!0,K.REFRACTION=!0,K.REFRACTIONMAP_3D=this._refractionTexture.isCube,K.RGBDREFRACTION=this._refractionTexture.isRGBD,K.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else K.REFRACTION=!1;K.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else K.DIFFUSE=!1,K.AMBIENT=!1,K.OPACITY=!1,K.REFLECTION=!1,K.EMISSIVE=!1,K.LIGHTMAP=!1,K.BUMP=!1,K.REFRACTION=!1;K.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),K.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,K.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,K.SPECULAROVERALPHA=this._useSpecularOverAlpha,K.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,K.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,K.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(Z)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=K,this._eventInfo.subMesh=h,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(K._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(K),K.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,K.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(K._areFresnelDirty&&(B.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(K.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,K.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,K.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,K.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,K.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,K.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,K._needNormals=!0,K.FRESNEL=!0):K.FRESNEL=!1),K.AREALIGHTUSED)for(let V=0;V<Z.lightSources.length;V++)if(!Z.lightSources[V]._isReady())return!1;(0,E.T)(Z,H,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(Z),K,this._applyDecalMapAfterDetailMap),(0,E.K)(H,d,this,K,v,null,h.getRenderingMesh().hasThinInstances),this._eventInfo.defines=K,this._eventInfo.mesh=Z,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,E.I)(Z,K,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let D=!1;if(K.isDirty){const v=K._areLightsDisposed;K.markAsProcessed();const A=new o.c;K.REFLECTION&&A.addFallback(0,"REFLECTION"),K.SPECULAR&&A.addFallback(0,"SPECULAR"),K.BUMP&&A.addFallback(0,"BUMP"),K.PARALLAX&&A.addFallback(1,"PARALLAX"),K.PARALLAX_RHS&&A.addFallback(1,"PARALLAX_RHS"),K.PARALLAXOCCLUSION&&A.addFallback(0,"PARALLAXOCCLUSION"),K.SPECULAROVERALPHA&&A.addFallback(0,"SPECULAROVERALPHA"),K.FOG&&A.addFallback(1,"FOG"),K.POINTSIZE&&A.addFallback(0,"POINTSIZE"),K.LOGARITHMICDEPTH&&A.addFallback(0,"LOGARITHMICDEPTH"),(0,E.u)(K,A,this._maxSimultaneousLights),K.SPECULARTERM&&A.addFallback(0,"SPECULARTERM"),K.DIFFUSEFRESNEL&&A.addFallback(1,"DIFFUSEFRESNEL"),K.OPACITYFRESNEL&&A.addFallback(2,"OPACITYFRESNEL"),K.REFLECTIONFRESNEL&&A.addFallback(3,"REFLECTIONFRESNEL"),K.EMISSIVEFRESNEL&&A.addFallback(4,"EMISSIVEFRESNEL"),K.FRESNEL&&A.addFallback(4,"FRESNEL"),K.MULTIVIEW&&A.addFallback(0,"MULTIVIEW");const N=[a.f.PositionKind];K.NORMAL&&N.push(a.f.NormalKind),K.TANGENT&&N.push(a.f.TangentKind);for(let Z=1;Z<=6;++Z)K["UV"+Z]&&N.push(`uv${1===Z?"":Z}`);K.VERTEXCOLOR&&N.push(a.f.ColorKind),(0,E.z)(N,Z,K,A),(0,E.C)(N,K),(0,E.E)(N,Z,K),(0,E.y)(N,Z,K);let k="default";const u=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],F=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],b=["Material","Scene","Mesh"],q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:K.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=A,this._eventInfo.fallbackRank=0,this._eventInfo.defines=K,this._eventInfo.uniforms=u,this._eventInfo.attributes=N,this._eventInfo.samplers=F,this._eventInfo.uniformBuffersNames=b,this._eventInfo.customCode=void 0,this._eventInfo.mesh=Z,this._eventInfo.indexParameters=q,this._callbackPluginEventGeneric(128,this._eventInfo),P.d.AddUniformsAndSamplers(u,F),n.c.AddUniforms(u),n.c.AddSamplers(F),x.c&&(x.c.PrepareUniforms(u,K),x.c.PrepareSamplers(F,K)),(0,E.bb)({uniformsNames:u,uniformBuffersNames:b,samplers:F,defines:K,maxSimultaneousLights:this._maxSimultaneousLights}),(0,X.c)(u);const j={};this.customShaderNameResolve&&(k=this.customShaderNameResolve(k,u,b,F,K,N,j));const l=K.toString(),B=h.effect;let S=H.getEngine().createEffect(k,{attributes:N,uniformsNames:u,uniformBuffersNames:b,samplers:F,defines:l,fallbacks:A,onCompiled:this.onCompiled,onError:this.onError,indexParameters:q,processFinalCode:j.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:K.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([V.e(41),V.e(64)]).then(V.bind(V,14343)),Promise.all([V.e(39),V.e(65)]).then(V.bind(V,14485))]):await Promise.all([Promise.all([V.e(34),V.e(67)]).then(V.bind(V,14576)),Promise.all([V.e(33),V.e(68)]).then(V.bind(V,14722))]),this._shadersLoaded=!0}},d);if(this._eventInfo.customCode=void 0,S)if(this._onEffectCreatedObservable&&(C.effect=S,C.subMesh=h,this._onEffectCreatedObservable.notifyObservers(C)),this.allowShaderHotSwapping&&B&&!S.isReady()){if(S=B,K.markAsUnprocessed(),D=this.isFrozen,v)return K._areLightsDisposed=!0,!1}else H.resetCachedMaterial(),h.setEffect(S,K,this._materialContext)}return!(!h.effect||!h.effect.isReady())&&(K._renderId=H.getRenderId(),A._wasPreviouslyReady=!D,A._wasPreviouslyUsingInstances=v,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const Z=this._uniformBuffer;Z.addUniform("diffuseLeftColor",4),Z.addUniform("diffuseRightColor",4),Z.addUniform("opacityParts",4),Z.addUniform("reflectionLeftColor",4),Z.addUniform("reflectionRightColor",4),Z.addUniform("refractionLeftColor",4),Z.addUniform("refractionRightColor",4),Z.addUniform("emissiveLeftColor",4),Z.addUniform("emissiveRightColor",4),Z.addUniform("vDiffuseInfos",2),Z.addUniform("vAmbientInfos",2),Z.addUniform("vOpacityInfos",2),Z.addUniform("vReflectionInfos",2),Z.addUniform("vReflectionPosition",3),Z.addUniform("vReflectionSize",3),Z.addUniform("vEmissiveInfos",2),Z.addUniform("vLightmapInfos",2),Z.addUniform("vSpecularInfos",2),Z.addUniform("vBumpInfos",3),Z.addUniform("diffuseMatrix",16),Z.addUniform("ambientMatrix",16),Z.addUniform("opacityMatrix",16),Z.addUniform("reflectionMatrix",16),Z.addUniform("emissiveMatrix",16),Z.addUniform("lightmapMatrix",16),Z.addUniform("specularMatrix",16),Z.addUniform("bumpMatrix",16),Z.addUniform("vTangentSpaceParams",2),Z.addUniform("pointSize",1),Z.addUniform("alphaCutOff",1),Z.addUniform("refractionMatrix",16),Z.addUniform("vRefractionInfos",4),Z.addUniform("vRefractionPosition",3),Z.addUniform("vRefractionSize",3),Z.addUniform("vSpecularColor",4),Z.addUniform("vEmissiveColor",3),Z.addUniform("vDiffuseColor",4),Z.addUniform("vAmbientColor",3),Z.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(Z,h,V){const v=this.CZ(),A=V.materialDefines;if(!A)return;const H=V.effect;if(!H)return;this._activeEffect=H,h.getMeshUniformBuffer().bindToEffect(H,"Mesh"),h.transferToEffect(Z),this._uniformBuffer.bindToEffect(H,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,v,h,Z,this.isFrozen),P.d.Bind(v.getEngine().currentRenderPassId,this._activeEffect,h,Z,this);const a=v.activeCamera;a?this._uniformBuffer.updateFloat4("cameraInfo",a.Rh,a.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=V,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),A.OBJECTSPACE_NORMALMAP&&(Z.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const n=this._mustRebind(v,H,V,h.visibility);(0,E.c)(h,H);const x=this._uniformBuffer;if(n){if(this.bindViewProjection(H),!x.useUbo||!this.isFrozen||!x.isSync||V._drawWrapper._forceRebindOnNextCall){if(B.FresnelEnabled&&A.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(x.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),x.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&x.updateColor4("opacityParts",new d.Ih(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(x.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),x.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(x.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),x.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(x.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),x.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),v.texturesEnabled){if(this._diffuseTexture&&B.DiffuseTextureEnabled&&(x.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,E.s)(this._diffuseTexture,x,"diffuse")),this._ambientTexture&&B.AmbientTextureEnabled&&(x.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,E.s)(this._ambientTexture,x,"ambient")),this._opacityTexture&&B.OpacityTextureEnabled&&(x.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,E.s)(this._opacityTexture,x,"opacity")),this._hasAlphaChannel()&&x.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&B.ReflectionTextureEnabled){if(x.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),x.wh("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const Z=this._reflectionTexture;x.updateVector3("vReflectionPosition",Z.boundingBoxPosition),x.updateVector3("vReflectionSize",Z.boundingBoxSize)}}else x.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&B.EmissiveTextureEnabled&&(x.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,E.s)(this._emissiveTexture,x,"emissive")),this._lightmapTexture&&B.LightmapTextureEnabled&&(x.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,E.s)(this._lightmapTexture,x,"lightmap")),this._specularTexture&&B.SpecularTextureEnabled&&(x.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,E.s)(this._specularTexture,x,"specular")),this._bumpTexture&&v.getEngine().getCaps().standardDerivatives&&B.BumpTextureEnabled&&(x.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,E.s)(this._bumpTexture,x,"bump"),v._mirroredCameraPosition?x.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):x.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&B.RefractionTextureEnabled){let Z=1;if(this._refractionTexture.isCube||(x.wh("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(Z=this._refractionTexture.depth)),x.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,Z,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const Z=this._refractionTexture;x.updateVector3("vRefractionPosition",Z.boundingBoxPosition),x.updateVector3("vRefractionSize",Z.boundingBoxSize)}}}this.pointsCloud&&x.updateFloat("pointSize",this.pointSize),x.updateColor4("vSpecularColor",this.specularColor,this.specularPower),x.updateColor3("vEmissiveColor",B.EmissiveTextureEnabled?this.emissiveColor:d.Ih.BlackReadOnly),x.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),v.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),x.updateColor3("vAmbientColor",this._globalAmbientColor)}v.texturesEnabled&&(this._diffuseTexture&&B.DiffuseTextureEnabled&&H.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&B.AmbientTextureEnabled&&H.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&B.OpacityTextureEnabled&&H.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&B.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?H.setTexture("reflectionCubeSampler",this._reflectionTexture):H.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&B.EmissiveTextureEnabled&&H.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&B.LightmapTextureEnabled&&H.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&B.SpecularTextureEnabled&&H.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&v.getEngine().getCaps().standardDerivatives&&B.BumpTextureEnabled&&H.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&B.RefractionTextureEnabled&&(this._refractionTexture.isCube?H.setTexture("refractionCubeSampler",this._refractionTexture):H.setTexture("refraction2DSampler",this._refractionTexture))),this.CZ().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(h)&&this.CZ().depthPeelingRenderer.bind(H),this._eventInfo.subMesh=V,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,X.e)(H,this,v),this.bindEyePosition(H)}else v.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(n||!this.isFrozen){var N;if(v.lightsEnabled&&!this._disableLighting&&(0,E.g)(v,h,H,A,this._maxSimultaneousLights),(v.fogEnabled&&h.applyFog&&v.fogMode!==K.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||h.receiveShadows||A.PREPASS)&&this.bindView(H),(0,E.d)(v,h,H),A.NUM_MORPH_INFLUENCERS&&(0,E.n)(h,H),A.BAKED_VERTEX_ANIMATION_TEXTURE)null===(N=h.bakedVertexAnimationManager)||void 0===N||N.bind(H,A.INSTANCES);this.useLogarithmicDepth&&(0,E.k)(A,H,v),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(h,this._activeEffect,V),x.update()}getAnimatables(){const Z=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&Z.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&Z.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&Z.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&Z.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&Z.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&Z.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&Z.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&Z.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&Z.push(this._refractionTexture),Z}getActiveTextures(){const Z=super.getActiveTextures();return this._diffuseTexture&&Z.push(this._diffuseTexture),this._ambientTexture&&Z.push(this._ambientTexture),this._opacityTexture&&Z.push(this._opacityTexture),this._reflectionTexture&&Z.push(this._reflectionTexture),this._emissiveTexture&&Z.push(this._emissiveTexture),this._specularTexture&&Z.push(this._specularTexture),this._bumpTexture&&Z.push(this._bumpTexture),this._lightmapTexture&&Z.push(this._lightmapTexture),this._refractionTexture&&Z.push(this._refractionTexture),Z}hasTexture(Z){return!!super.hasTexture(Z)||(this._diffuseTexture===Z||(this._ambientTexture===Z||(this._opacityTexture===Z||(this._reflectionTexture===Z||(this._emissiveTexture===Z||(this._specularTexture===Z||(this._bumpTexture===Z||(this._lightmapTexture===Z||this._refractionTexture===Z))))))))}dispose(Z,h){var V,v,A,H,K,d,a,n,x;h&&(null===(V=this._diffuseTexture)||void 0===V||V.dispose(),null===(v=this._ambientTexture)||void 0===v||v.dispose(),null===(A=this._opacityTexture)||void 0===A||A.dispose(),null===(H=this._reflectionTexture)||void 0===H||H.dispose(),null===(K=this._emissiveTexture)||void 0===K||K.dispose(),null===(d=this._specularTexture)||void 0===d||d.dispose(),null===(a=this._bumpTexture)||void 0===a||a.dispose(),null===(n=this._lightmapTexture)||void 0===n||n.dispose(),null===(x=this._refractionTexture)||void 0===x||x.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(Z,h)}clone(Z){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const v=j.b.Clone((()=>new B(Z,this.CZ())),this,{cloneTexturesOnlyOnce:h});return v.name=Z,v.id=Z,this.stencil.copyTo(v.stencil),this._clonePlugins(v,V),v}static Parse(Z,h,V){const v=j.b.Parse((()=>new B(Z.name,h)),Z,h,V);return Z.stencil&&v.stencil.parse(Z.stencil,h,V),N.b._ParsePlugins(Z,v,h,V),v}static get DiffuseTextureEnabled(){return b.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){b.e.DiffuseTextureEnabled=Z}static get DetailTextureEnabled(){return b.e.DetailTextureEnabled}static set DetailTextureEnabled(Z){b.e.DetailTextureEnabled=Z}static get AmbientTextureEnabled(){return b.e.AmbientTextureEnabled}static set AmbientTextureEnabled(Z){b.e.AmbientTextureEnabled=Z}static get OpacityTextureEnabled(){return b.e.OpacityTextureEnabled}static set OpacityTextureEnabled(Z){b.e.OpacityTextureEnabled=Z}static get ReflectionTextureEnabled(){return b.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){b.e.ReflectionTextureEnabled=Z}static get EmissiveTextureEnabled(){return b.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){b.e.EmissiveTextureEnabled=Z}static get SpecularTextureEnabled(){return b.e.SpecularTextureEnabled}static set SpecularTextureEnabled(Z){b.e.SpecularTextureEnabled=Z}static get BumpTextureEnabled(){return b.e.BumpTextureEnabled}static set BumpTextureEnabled(Z){b.e.BumpTextureEnabled=Z}static get LightmapTextureEnabled(){return b.e.LightmapTextureEnabled}static set LightmapTextureEnabled(Z){b.e.LightmapTextureEnabled=Z}static get RefractionTextureEnabled(){return b.e.RefractionTextureEnabled}static set RefractionTextureEnabled(Z){b.e.RefractionTextureEnabled=Z}static get ColorGradingTextureEnabled(){return b.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){b.e.ColorGradingTextureEnabled=Z}static get FresnelEnabled(){return b.e.FresnelEnabled}static set FresnelEnabled(Z){b.e.FresnelEnabled=Z}}B.ForceGLSL=!1,(0,v.b)([(0,A.z)("diffuseTexture")],B.prototype,"_diffuseTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"diffuseTexture",void 0),(0,v.b)([(0,A.z)("ambientTexture")],B.prototype,"_ambientTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"ambientTexture",void 0),(0,v.b)([(0,A.z)("opacityTexture")],B.prototype,"_opacityTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"opacityTexture",void 0),(0,v.b)([(0,A.z)("reflectionTexture")],B.prototype,"_reflectionTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"reflectionTexture",void 0),(0,v.b)([(0,A.z)("emissiveTexture")],B.prototype,"_emissiveTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"emissiveTexture",void 0),(0,v.b)([(0,A.z)("specularTexture")],B.prototype,"_specularTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"specularTexture",void 0),(0,v.b)([(0,A.z)("bumpTexture")],B.prototype,"_bumpTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"bumpTexture",void 0),(0,v.b)([(0,A.z)("lightmapTexture")],B.prototype,"_lightmapTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"lightmapTexture",void 0),(0,v.b)([(0,A.z)("refractionTexture")],B.prototype,"_refractionTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"refractionTexture",void 0),(0,v.b)([(0,A.j)("ambient")],B.prototype,"ambientColor",void 0),(0,v.b)([(0,A.j)("diffuse")],B.prototype,"diffuseColor",void 0),(0,v.b)([(0,A.j)("specular")],B.prototype,"specularColor",void 0),(0,v.b)([(0,A.j)("emissive")],B.prototype,"emissiveColor",void 0),(0,v.b)([(0,A.I)()],B.prototype,"specularPower",void 0),(0,v.b)([(0,A.I)("useAlphaFromDiffuseTexture")],B.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],B.prototype,"useAlphaFromDiffuseTexture",void 0),(0,v.b)([(0,A.I)("useEmissiveAsIllumination")],B.prototype,"_useEmissiveAsIllumination",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useEmissiveAsIllumination",void 0),(0,v.b)([(0,A.I)("linkEmissiveWithDiffuse")],B.prototype,"_linkEmissiveWithDiffuse",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"linkEmissiveWithDiffuse",void 0),(0,v.b)([(0,A.I)("useSpecularOverAlpha")],B.prototype,"_useSpecularOverAlpha",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useSpecularOverAlpha",void 0),(0,v.b)([(0,A.I)("useReflectionOverAlpha")],B.prototype,"_useReflectionOverAlpha",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useReflectionOverAlpha",void 0),(0,v.b)([(0,A.I)("disableLighting")],B.prototype,"_disableLighting",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsLightsDirty")],B.prototype,"disableLighting",void 0),(0,v.b)([(0,A.I)("useObjectSpaceNormalMap")],B.prototype,"_useObjectSpaceNormalMap",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useObjectSpaceNormalMap",void 0),(0,v.b)([(0,A.I)("useParallax")],B.prototype,"_useParallax",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useParallax",void 0),(0,v.b)([(0,A.I)("useParallaxOcclusion")],B.prototype,"_useParallaxOcclusion",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useParallaxOcclusion",void 0),(0,v.b)([(0,A.I)()],B.prototype,"parallaxScaleBias",void 0),(0,v.b)([(0,A.I)("roughness")],B.prototype,"_roughness",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"roughness",void 0),(0,v.b)([(0,A.I)()],B.prototype,"indexOfRefraction",void 0),(0,v.b)([(0,A.I)()],B.prototype,"invertRefractionY",void 0),(0,v.b)([(0,A.I)()],B.prototype,"alphaCutOff",void 0),(0,v.b)([(0,A.I)("useLightmapAsShadowmap")],B.prototype,"_useLightmapAsShadowmap",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useLightmapAsShadowmap",void 0),(0,v.b)([(0,A.m)("diffuseFresnelParameters")],B.prototype,"_diffuseFresnelParameters",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],B.prototype,"diffuseFresnelParameters",void 0),(0,v.b)([(0,A.m)("opacityFresnelParameters")],B.prototype,"_opacityFresnelParameters",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],B.prototype,"opacityFresnelParameters",void 0),(0,v.b)([(0,A.m)("reflectionFresnelParameters")],B.prototype,"_reflectionFresnelParameters",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],B.prototype,"reflectionFresnelParameters",void 0),(0,v.b)([(0,A.m)("refractionFresnelParameters")],B.prototype,"_refractionFresnelParameters",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],B.prototype,"refractionFresnelParameters",void 0),(0,v.b)([(0,A.m)("emissiveFresnelParameters")],B.prototype,"_emissiveFresnelParameters",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],B.prototype,"emissiveFresnelParameters",void 0),(0,v.b)([(0,A.I)("useReflectionFresnelFromSpecular")],B.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsFresnelDirty")],B.prototype,"useReflectionFresnelFromSpecular",void 0),(0,v.b)([(0,A.I)("useGlossinessFromSpecularMapAlpha")],B.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,v.b)([(0,A.I)("maxSimultaneousLights")],B.prototype,"_maxSimultaneousLights",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsLightsDirty")],B.prototype,"maxSimultaneousLights",void 0),(0,v.b)([(0,A.I)("invertNormalMapX")],B.prototype,"_invertNormalMapX",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"invertNormalMapX",void 0),(0,v.b)([(0,A.I)("invertNormalMapY")],B.prototype,"_invertNormalMapY",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"invertNormalMapY",void 0),(0,v.b)([(0,A.I)("twoSidedLighting")],B.prototype,"_twoSidedLighting",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsTexturesDirty")],B.prototype,"twoSidedLighting",void 0),(0,v.b)([(0,A.I)("applyDecalMapAfterDetailMap")],B.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,v.b)([(0,A.b)("_markAllSubMeshesAsMiscDirty")],B.prototype,"applyDecalMapAfterDetailMap",void 0),(0,F.i)("BABYLON.StandardMaterial",B),K.e.DefaultMaterialFactory=Z=>new B("default material",Z)}}]);