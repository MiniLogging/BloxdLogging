"use strict";(self.uw9p3pwwsje=self.uw9p3pwwsje||[]).push([[25],{13228:(D,h,o)=>{o.d(h,{e:()=>K});var H=o(12812),g=o(13151),j=o(12815),M=o(13221),R=o(13213),t=o(13233),S=o(13189);class k extends R.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class K extends t.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(D){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(D,"DetailMap",140,new k,h),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=g.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=D._dirtyCallbacks[1]}isReadyForSubMesh(D,h,o){return!this._isEnabled||!(D._areTexturesDirty&&h.texturesEnabled&&o.getCaps().standardDerivatives&&this._texture&&M.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(D,h){if(this._isEnabled){D.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const o=h.getEngine();D._areTexturesDirty&&(o.getCaps().standardDerivatives&&this._texture&&M.d.DetailTextureEnabled&&this._isEnabled?((0,S.P)(this._texture,D,"DETAIL"),D.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):D.DETAIL=!1)}else D.DETAIL=!1}bindForSubMesh(D,h){if(!this._isEnabled)return;const o=this._material.isFrozen;D.useUbo&&o&&D.isSync||this._texture&&M.d.DetailTextureEnabled&&(D.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,S.p)(this._texture,D,"detail")),h.texturesEnabled&&this._texture&&M.d.DetailTextureEnabled&&D.setTexture("detailSampler",this._texture)}hasTexture(D){return this._texture===D}getActiveTextures(D){this._texture&&D.push(this._texture)}getAnimatables(D){this._texture&&this._texture.animations&&this._texture.animations.length>0&&D.push(this._texture)}dispose(D){var h;D&&(null===(h=this._texture)||void 0===h||h.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(D){D.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,H.c)([(0,j.C)("detailTexture"),(0,j.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"texture",void 0),(0,H.c)([(0,j.I)()],K.prototype,"diffuseBlendLevel",void 0),(0,H.c)([(0,j.I)()],K.prototype,"roughnessBlendLevel",void 0),(0,H.c)([(0,j.I)()],K.prototype,"bumpLevel",void 0),(0,H.c)([(0,j.I)(),(0,j.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"normalBlendMethod",void 0),(0,H.c)([(0,j.I)(),(0,j.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"isEnabled",void 0)},13213:(D,h,o)=>{o.d(h,{e:()=>H});class H{constructor(D){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=D,D)for(const h in D)Object.prototype.hasOwnProperty.call(D,h)&&this._setDefaultValue(h)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||D,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const D of Object.keys(this))"_"!==D[0]&&this._keys.push(D);if(this._externalProperties)for(const D in this._externalProperties)-1===this._keys.indexOf(D)&&this._keys.push(D)}isEqual(D){if(this._keys.length!==D._keys.length)return!1;for(let h=0;h<this._keys.length;h++){const o=this._keys[h];if(this[o]!==D[o])return!1}return!0}cloneTo(D){this._keys.length!==D._keys.length&&(D._keys=this._keys.slice(0));for(let h=0;h<this._keys.length;h++){const o=this._keys[h];D[o]=this[o]}}reset(){for(const D of this._keys)this._setDefaultValue(D)}_setDefaultValue(D){var h,o,H,g;const j=(null===(h=this._externalProperties)||void 0===h||null===(o=h[D])||void 0===o?void 0:o.type)??typeof this[D],M=null===(H=this._externalProperties)||void 0===H||null===(g=H[D])||void 0===g?void 0:g.default;switch(j){case"number":this[D]=M??0;break;case"string":this[D]=M??"";break;default:this[D]=M??!1}}toString(){let D="";for(let h=0;h<this._keys.length;h++){const o=this._keys[h],H=this[o];switch(typeof H){case"number":case"string":D+="#define "+o+" "+H+"\n";break;default:H&&(D+="#define "+o+"\n")}}return D}}},13221:(D,h,o)=>{o.d(h,{d:()=>g});var H=o(12731);class g{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(D){this._DiffuseTextureEnabled!==D&&(this._DiffuseTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(D){this._BaseWeightTextureEnabled!==D&&(this._BaseWeightTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(D){this._BaseDiffuseRoughnessTextureEnabled!==D&&(this._BaseDiffuseRoughnessTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(D){this._DetailTextureEnabled!==D&&(this._DetailTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(D){this._DecalMapEnabled!==D&&(this._DecalMapEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(D){this._AmbientTextureEnabled!==D&&(this._AmbientTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(D){this._OpacityTextureEnabled!==D&&(this._OpacityTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(D){this._ReflectionTextureEnabled!==D&&(this._ReflectionTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(D){this._EmissiveTextureEnabled!==D&&(this._EmissiveTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(D){this._SpecularTextureEnabled!==D&&(this._SpecularTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(D){this._BumpTextureEnabled!==D&&(this._BumpTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(D){this._LightmapTextureEnabled!==D&&(this._LightmapTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(D){this._RefractionTextureEnabled!==D&&(this._RefractionTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(D){this._ColorGradingTextureEnabled!==D&&(this._ColorGradingTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(D){this._FresnelEnabled!==D&&(this._FresnelEnabled=D,H.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(D){this._ClearCoatTextureEnabled!==D&&(this._ClearCoatTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(D){this._ClearCoatBumpTextureEnabled!==D&&(this._ClearCoatBumpTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(D){this._ClearCoatTintTextureEnabled!==D&&(this._ClearCoatTintTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(D){this._SheenTextureEnabled!==D&&(this._SheenTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(D){this._AnisotropicTextureEnabled!==D&&(this._AnisotropicTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(D){this._ThicknessTextureEnabled!==D&&(this._ThicknessTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(D){this._RefractionIntensityTextureEnabled!==D&&(this._RefractionIntensityTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(D){this._TranslucencyIntensityTextureEnabled!==D&&(this._TranslucencyIntensityTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(D){this._TranslucencyColorTextureEnabled!==D&&(this._TranslucencyColorTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(D){this._IridescenceTextureEnabled!==D&&(this._IridescenceTextureEnabled=D,H.e.MarkAllMaterialsAsDirty(1))}}g._DiffuseTextureEnabled=!0,g._BaseWeightTextureEnabled=!0,g._BaseDiffuseRoughnessTextureEnabled=!0,g._DetailTextureEnabled=!0,g._DecalMapEnabled=!0,g._AmbientTextureEnabled=!0,g._OpacityTextureEnabled=!0,g._ReflectionTextureEnabled=!0,g._EmissiveTextureEnabled=!0,g._SpecularTextureEnabled=!0,g._BumpTextureEnabled=!0,g._LightmapTextureEnabled=!0,g._RefractionTextureEnabled=!0,g._ColorGradingTextureEnabled=!0,g._FresnelEnabled=!0,g._ClearCoatTextureEnabled=!0,g._ClearCoatBumpTextureEnabled=!0,g._ClearCoatTintTextureEnabled=!0,g._SheenTextureEnabled=!0,g._AnisotropicTextureEnabled=!0,g._ThicknessTextureEnabled=!0,g._RefractionIntensityTextureEnabled=!0,g._TranslucencyIntensityTextureEnabled=!0,g._TranslucencyColorTextureEnabled=!0,g._IridescenceTextureEnabled=!0},13242:(D,h,o)=>{o.d(h,{c:()=>j});var H,g=o(12831);!function(D){D[D.Zero=0]="Zero",D[D.One=1]="One",D[D.MaxViewZ=2]="MaxViewZ"}(H||(H={}));class j{static CreateConfiguration(D){return j._Configurations[D]={defines:{},previousWorldMatrices:{},previousViewProjection:g.Matrix.Zero(),currentViewProjection:g.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},j._Configurations[D]}static DeleteConfiguration(D){delete j._Configurations[D]}static GetConfiguration(D){return j._Configurations[D]}static AddUniformsAndSamplers(D,h){D.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(D,h){for(const o of h)if(o.nh)for(const h of o.nh)h._removeDrawWrapper(D)}static PrepareDefines(D,h,o){if(!o._arePrePassDirty)return;const H=j._Configurations[D];if(!H)return;o.PREPASS=!0,o.PREPASS_COLOR=!1,o.PREPASS_COLOR_INDEX=-1;let g=0;for(let M=0;M<j.GeometryTextureDescriptions.length;M++){const D=j.GeometryTextureDescriptions[M],h=D.define,R=D.defineIndex,t=H.defines[R];void 0!==t?(o[h]=!0,o[R]=t,g++):(o[h]=!1,delete o[R])}o.SCENE_MRT_COUNT=g,o.BONES_VELOCITY_ENABLED=h.useBones&&h.computeBonesUsingShaders&&h.skeleton&&!h.skeleton.isUsingTextureForMatrices&&-1===H.excludedSkinnedMesh.indexOf(h)}static Bind(D,h,o,H,g){const M=j._Configurations[D];if(!M)return;const R=o.GD(),t=R.getEngine();if(M.reverseCulling&&t.setStateCullFaceType(R._mirroredCameraPosition?g.cullBackFaces:!g.cullBackFaces),(void 0!==M.defines.PREPASS_VELOCITY_INDEX||void 0!==M.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(M.previousWorldMatrices[o.uniqueId]||(M.previousWorldMatrices[o.uniqueId]=H.clone()),M.previousViewProjection||(M.previousViewProjection=R.getTransformMatrix().clone(),M.currentViewProjection=R.getTransformMatrix().clone()),M.currentViewProjection.updateFlag!==R.getTransformMatrix().updateFlag?(M.lastUpdateFrameId=t.frameId,M.previousViewProjection.M(M.currentViewProjection),M.currentViewProjection.M(R.getTransformMatrix())):M.lastUpdateFrameId!==t.frameId&&(M.lastUpdateFrameId=t.frameId,M.previousViewProjection.M(M.currentViewProjection)),h.setMatrix("previousWorld",M.previousWorldMatrices[o.uniqueId]),h.setMatrix("previousViewProjection",M.previousViewProjection),M.previousWorldMatrices[o.uniqueId]=H.clone(),o.useBones&&o.computeBonesUsingShaders&&o.skeleton)){const D=o.skeleton;if(!D.isUsingTextureForMatrices||-1===h.getUniformIndex("boneTextureWidth")){const H=D.getTransformMatrices(o);H&&(M.previousBones[o.uniqueId]||(M.previousBones[o.uniqueId]=H.slice()),h.setMatrices("mPreviousBones",M.previousBones[o.uniqueId]),M.previousBones[o.uniqueId].set(H))}}}}j.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],j._Configurations={}},13233:(D,h,o)=>{o.d(h,{c:()=>U});var H=o(12812),g=o(12815),j=o(13151),M=o(12683),R=o(12709),t=o(12741);const S=new RegExp("^([gimus]+)!");class k{constructor(D){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=D,this._scene=D.GD(),this._engine=this._scene.getEngine()}_addPlugin(D){for(let H=0;H<this._plugins.length;++H)if(this._plugins[H].name===D.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!D.isCompatible(this._material.shaderLanguage))throw`The plugin "${D.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const h=D.getClassName();k._MaterialPluginClassToMainDefine[h]||(k._MaterialPluginClassToMainDefine[h]="MATERIALPLUGIN_"+ ++k._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(D,h)=>this._handlePluginEvent(D,h),this._plugins.push(D),this._plugins.sort(((D,h)=>D.priority-h.priority)),this._codeInjectionPoints={};const o={};o[k._MaterialPluginClassToMainDefine[h]]={type:"boolean",default:!0};for(const H of this._plugins)H.collectDefines(o),this._collectPointNames("vertex",H.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",H.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=o,!0}_activatePlugin(D){-1===this._activePlugins.indexOf(D)&&(this._activePlugins.push(D),this._activePlugins.sort(((D,h)=>D.priority-h.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),D.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(D),this._activePluginsForExtraEvents.sort(((D,h)=>D.priority-h.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(D){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===D)return this._plugins[h];return null}_handlePluginEventIsReadyForSubMesh(D){let h=!0;for(const o of this._activePlugins)h=h&&o.isReadyForSubMesh(D.defines,this._scene,this._engine,D.subMesh);D.isReadyForSubMesh=h}_handlePluginEventPrepareDefinesBeforeAttributes(D){for(const h of this._activePlugins)h.prepareDefinesBeforeAttributes(D.defines,this._scene,D.mesh)}_handlePluginEventPrepareDefines(D){for(const h of this._activePlugins)h.prepareDefines(D.defines,this._scene,D.mesh)}_handlePluginEventHardBindForSubMesh(D){for(const h of this._activePluginsForExtraEvents)h.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,D.subMesh)}_handlePluginEventBindForSubMesh(D){for(const h of this._activePlugins)h.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,D.subMesh)}_handlePluginEventHasRenderTargetTextures(D){let h=!1;for(const o of this._activePluginsForExtraEvents)if(h=o.hasRenderTargetTextures(),h)break;D.hasRenderTargetTextures=h}_handlePluginEventFillRenderTargetTextures(D){for(const h of this._activePluginsForExtraEvents)h.fillRenderTargetTextures(D.renderTargets)}_handlePluginEvent(D,h){switch(D){case 512:{const D=h;for(const h of this._activePlugins)h.getActiveTextures(D.activeTextures);break}case 256:{const D=h;for(const h of this._activePlugins)h.getAnimatables(D.animatables);break}case 1024:{const D=h;let o=!1;for(const h of this._activePlugins)if(o=h.hasTexture(D.texture),o)break;D.hasTexture=o;break}case 2:{const D=h;for(const h of this._plugins)h.dispose(D.forceDisposeTextures);break}case 4:h.defineNames=this._defineNamesFromPlugins;break;case 128:{const D=h;for(const h of this._activePlugins)D.fallbackRank=h.addFallbacks(D.defines,D.fallbacks,D.fallbackRank),h.getAttributes(D.attributes,this._scene,D.mesh);this._uniformList.length>0&&D.uniforms.push(...this._uniformList),this._samplerList.length>0&&D.samplers.push(...this._samplerList),this._uboList.length>0&&D.uniformBuffersNames.push(...this._uboList),D.customCode=this._injectCustomCode(D,D.customCode);break}case 8:{const D=h;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const o=1===this._material.shaderLanguage;for(const h of this._plugins){const H=h.getUniforms(this._material.shaderLanguage);if(H){if(H.ubo)for(const h of H.ubo){if(h.size&&h.type){const H=h.arraySize??0;if(D.ubo.addUniform(h.name,h.size,H),o){let D;switch(h.type){case"mat4":D="mat4x4f";break;case"float":D="f32";break;default:D=`${h.type}f`}this._uboDeclaration+=H>0?`uniform ${h.name}: array<${D}, ${H}>;\n`:`uniform ${h.name}: ${D};\n`}else this._uboDeclaration+=`${h.type} ${h.name}${H>0?`[${H}]`:""};\n`}this._uniformList.push(h.name)}H.vertex&&(this._vertexDeclaration+=H.vertex+"\n"),H.fragment&&(this._fragmentDeclaration+=H.fragment+"\n")}h.getSamplers(this._samplerList),h.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(D,h){if(h)for(const o in h)this._codeInjectionPoints[D]||(this._codeInjectionPoints[D]={}),this._codeInjectionPoints[D][o]=!0}_injectCustomCode(D,h){return(o,H)=>{var g;h&&(H=h(o,H)),this._uboDeclaration&&(H=H.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(H=H.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(H=H.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const j=null===(g=this._codeInjectionPoints)||void 0===g?void 0:g[o];if(!j)return H;let M=null;for(let h in j){let g="";for(const H of this._activePlugins){var k;let j=null===(k=H.getCustomCode(o,this._material.shaderLanguage))||void 0===k?void 0:k[h];if(j){if(H.resolveIncludes){if(null===M){const h=0;M={defines:[],indexParameters:D.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:t.d.GetShadersRepository(h),includesShadersStore:t.d.GetIncludesShadersStore(h),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Bh:this._engine.Bh,processCodeAfterIncludes:void 0}}M.isFragment="fragment"===o,(0,R.k)(j,M,(D=>j=D))}g+=j+"\n"}}if(g.length>0)if("!"===h.charAt(0)){h=h.substring(1);let D="g";if("!"===h.charAt(0))D="",h=h.substring(1);else{const o=S.exec(h);o&&o.length>=2&&(D=o[1],h=h.substring(D.length+1))}D.indexOf("g")<0&&(D+="g");const o=H,j=new RegExp(h,D);let M=j.exec(o);for(;null!==M;){let D=g;for(let h=0;h<M.length;++h)D=D.replace("$"+h,M[h]);H=H.replace(M[0],D),M=j.exec(o)}}else{const D="#define "+h;H=H.replace(D,"\n"+g+"\n"+D)}}return H}}}k._MaterialPluginClassToMainDefine={},k._MaterialPluginCounter=0,M.d.OnEnginesDisposedObservable.add((()=>{r()}));const K=[];let Q=!1,v=null;function r(){K.length=0,Q=!1,j.c.OnEventObservable.remove(v),v=null}var B=o(12860),s=o(12793);class U{isCompatible(D){return 0===D}_enable(D){D&&this._pluginManager._activatePlugin(this)}constructor(D,h,o,H){let g=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],j=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=D,this.name=h,this.priority=o,this.resolveIncludes=M,D.pluginManager||(D.pluginManager=new k(D),D.Jh.add((()=>{D.pluginManager=void 0}))),this._pluginDefineNames=H,this._pluginManager=D.pluginManager,g&&this._pluginManager._addPlugin(this),j&&this._enable(!0),this.markAllDefinesAsDirty=D._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(D,h,o,H){return!0}hardBindForSubMesh(D,h,o,H){}bindForSubMesh(D,h,o,H){}dispose(D){}getCustomCode(D){return null}collectDefines(D){if(this._pluginDefineNames)for(const h of Object.keys(this._pluginDefineNames)){if("_"===h[0])continue;const o=typeof this._pluginDefineNames[h];D[h]={type:"number"===o?"number":"string"===o?"string":"boolean"===o?"boolean":"object",default:this._pluginDefineNames[h]}}}prepareDefinesBeforeAttributes(D,h,o){}prepareDefines(D,h,o){}hasTexture(D){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(D){}getActiveTextures(D){}getAnimatables(D){}addFallbacks(D,h,o){return o}getSamplers(D){}getAttributes(D,h,o){}getUniformBuffersNames(D){}getUniforms(){return{}}copyTo(D){B.d.Clone((()=>D),this)}serialize(){return B.d.Serialize(this)}parse(D,h,o){B.d.Parse((()=>this),D,h,o)}}(0,H.c)([(0,g.I)()],U.prototype,"name",void 0),(0,H.c)([(0,g.I)()],U.prototype,"priority",void 0),(0,H.c)([(0,g.I)()],U.prototype,"resolveIncludes",void 0),(0,H.c)([(0,g.I)()],U.prototype,"registerForExtraEvents",void 0),(0,s.g)("BABYLON.MaterialPluginBase",U)},13209:(D,h,o)=>{o.d(h,{e:()=>H});class H{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(D){D.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(D){}bindForSubMesh(D,h,o,H,g){if(h.prePassRenderer&&h.prePassRenderer.enabled&&h.prePassRenderer.currentRTisSceneRT&&(-1!==h.prePassRenderer.getIndex(2)||-1!==h.prePassRenderer.getIndex(11))){this.previousWorldMatrices[o.uniqueId]||(this.previousWorldMatrices[o.uniqueId]=H.clone()),this.previousViewProjection||(this.previousViewProjection=h.getTransformMatrix().clone(),this.currentViewProjection=h.getTransformMatrix().clone());const g=h.getEngine();this.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=g.frameId,this.previousViewProjection.M(this.currentViewProjection),this.currentViewProjection.M(h.getTransformMatrix())):this._lastUpdateFrameId!==g.frameId&&(this._lastUpdateFrameId=g.frameId,this.previousViewProjection.M(this.currentViewProjection)),D.setMatrix("previousWorld",this.previousWorldMatrices[o.uniqueId]),D.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[o.uniqueId]=H.clone()}}}},13205:(D,h,o)=>{o.d(h,{Zh:()=>J});var H=o(12812),g=o(12815),j=o(12915),M=o(13065),R=o(12870),t=o(12894),S=o(13209),k=o(13070),K=o(13151),Q=o(13213),v=o(13148),r=o(12807),B=o(12793),s=o(13221),U=o(13139),q=o(13228),c=o(13198),y=o(13189),b=o(12860),i=o(13242);const G={effect:null,subMesh:null};class N extends Q.e{constructor(D){super(D),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(D){const h=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const o of h)this[o]=o===D}}class J extends v.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(D){this._attachImageProcessingConfiguration(D),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(D){D!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=D||this.GD().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(D){this.imageProcessingConfiguration.colorCurvesEnabled=D}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(D){this.imageProcessingConfiguration.colorGradingEnabled=D}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(D){this._imageProcessingConfiguration.toneMappingEnabled=D}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(D){this._imageProcessingConfiguration.exposure=D}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(D){this._imageProcessingConfiguration.contrast=D}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(D){this._imageProcessingConfiguration.colorGradingTexture=D}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(D){this._imageProcessingConfiguration.colorCurves=D}get canRenderToMRT(){return!0}constructor(D,h){super(D,h,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||J.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new R.mo(0,0,0),this.diffuseColor=new R.mo(1,1,1),this.specularColor=new R.mo(1,1,1),this.emissiveColor=new R.mo(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new j.d(16),this._globalAmbientColor=new R.mo(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new q.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new S.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),J.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),J.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(J.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(J.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Zh"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===K.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Yh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==K.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Yh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(D,h){let H=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const g=h._drawWrapper;if(g.effect&&this.isFrozen&&g._wasPreviouslyReady&&g._wasPreviouslyUsingInstances===H)return!0;h.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),h.materialDefines=new N(this._eventInfo.defineNames));const j=this.GD(),M=h.materialDefines;if(this._isReadyForSubMesh(h))return!0;const R=j.getEngine();M._needNormals=(0,y.O)(j,D,M,!0,this._maxSimultaneousLights,this._disableLighting),(0,y.R)(j,M);const K=this.needAlphaBlendingForMesh(D)&&this.GD().useOrderIndependentTransparency;if((0,y.Y)(j,M,this.canRenderToMRT&&!K),(0,y.V)(j,M,K),i.c.PrepareDefines(R.currentRenderPassId,D,M),M._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,M._needUVs=!1;for(let D=1;D<=6;++D)M["MAINUV"+D]=!1;if(j.texturesEnabled){if(M.DIFFUSEDIRECTUV=0,M.BUMPDIRECTUV=0,M.AMBIENTDIRECTUV=0,M.OPACITYDIRECTUV=0,M.EMISSIVEDIRECTUV=0,M.SPECULARDIRECTUV=0,M.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&J.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._diffuseTexture,M,"DIFFUSE")}else M.DIFFUSE=!1;if(this._ambientTexture&&J.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._ambientTexture,M,"AMBIENT")}else M.AMBIENT=!1;if(this._opacityTexture&&J.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._opacityTexture,M,"OPACITY"),M.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else M.OPACITY=!1;if(this._reflectionTexture&&J.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(M._needNormals=!0,M.REFLECTION=!0,M.ROUGHNESS=this._roughness>0,M.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,M.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===r.b.INVCUBIC_MODE,M.REFLECTIONMAP_3D=this._reflectionTexture.isCube,M.REFLECTIONMAP_OPPOSITEZ=M.REFLECTIONMAP_3D&&this.GD().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,M.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case r.b.EXPLICIT_MODE:M.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case r.b.PLANAR_MODE:M.setReflectionMode("REFLECTIONMAP_PLANAR");break;case r.b.PROJECTION_MODE:M.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case r.b.SKYBOX_MODE:M.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case r.b.SPHERICAL_MODE:M.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case r.b.EQUIRECTANGULAR_MODE:M.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case r.b.FIXED_EQUIRECTANGULAR_MODE:M.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case r.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:M.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case r.b.CUBIC_MODE:case r.b.INVCUBIC_MODE:default:M.setReflectionMode("REFLECTIONMAP_CUBIC")}M.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else M.REFLECTION=!1,M.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&J.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._emissiveTexture,M,"EMISSIVE")}else M.EMISSIVE=!1;if(this._lightmapTexture&&J.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._lightmapTexture,M,"LIGHTMAP"),M.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,M.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else M.LIGHTMAP=!1;if(this._specularTexture&&J.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,y.P)(this._specularTexture,M,"SPECULAR"),M.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else M.SPECULAR=!1;if(j.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&J.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,y.P)(this._bumpTexture,M,"BUMP"),M.PARALLAX=this._useParallax,M.PARALLAX_RHS=j.useRightHandedSystem,M.PARALLAXOCCLUSION=this._useParallaxOcclusion,M.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else M.BUMP=!1,M.PARALLAX=!1,M.PARALLAX_RHS=!1,M.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&J.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;M._needUVs=!0,M.REFRACTION=!0,M.REFRACTIONMAP_3D=this._refractionTexture.isCube,M.RGBDREFRACTION=this._refractionTexture.isRGBD,M.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else M.REFRACTION=!1;M.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else M.DIFFUSE=!1,M.AMBIENT=!1,M.OPACITY=!1,M.REFLECTION=!1,M.EMISSIVE=!1,M.LIGHTMAP=!1,M.BUMP=!1,M.REFRACTION=!1;M.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),M.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,M.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,M.SPECULAROVERALPHA=this._useSpecularOverAlpha,M.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,M.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,M.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(D)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=M,this._eventInfo.subMesh=h,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(M._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(M),M.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,M.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(M._areFresnelDirty&&(J.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(M.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,M.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,M.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,M.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,M.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,M.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,M._needNormals=!0,M.FRESNEL=!0):M.FRESNEL=!1),M.AREALIGHTUSED)for(let o=0;o<D.lightSources.length;o++)if(!D.lightSources[o]._isReady())return!1;(0,y.Q)(D,j,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(D),M,this._applyDecalMapAfterDetailMap),(0,y.K)(j,R,this,M,H,null,h.getRenderingMesh().hasThinInstances),this._eventInfo.defines=M,this._eventInfo.mesh=D,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,y.G)(D,M,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let Q=!1;if(M.isDirty){const H=M._areLightsDisposed;M.markAsProcessed();const g=new U.c;M.REFLECTION&&g.addFallback(0,"REFLECTION"),M.SPECULAR&&g.addFallback(0,"SPECULAR"),M.BUMP&&g.addFallback(0,"BUMP"),M.PARALLAX&&g.addFallback(1,"PARALLAX"),M.PARALLAX_RHS&&g.addFallback(1,"PARALLAX_RHS"),M.PARALLAXOCCLUSION&&g.addFallback(0,"PARALLAXOCCLUSION"),M.SPECULAROVERALPHA&&g.addFallback(0,"SPECULAROVERALPHA"),M.FOG&&g.addFallback(1,"FOG"),M.POINTSIZE&&g.addFallback(0,"POINTSIZE"),M.LOGARITHMICDEPTH&&g.addFallback(0,"LOGARITHMICDEPTH"),(0,y.q)(M,g,this._maxSimultaneousLights),M.SPECULARTERM&&g.addFallback(0,"SPECULARTERM"),M.DIFFUSEFRESNEL&&g.addFallback(1,"DIFFUSEFRESNEL"),M.OPACITYFRESNEL&&g.addFallback(2,"OPACITYFRESNEL"),M.REFLECTIONFRESNEL&&g.addFallback(3,"REFLECTIONFRESNEL"),M.EMISSIVEFRESNEL&&g.addFallback(4,"EMISSIVEFRESNEL"),M.FRESNEL&&g.addFallback(4,"FRESNEL"),M.MULTIVIEW&&g.addFallback(0,"MULTIVIEW");const K=[t.f.PositionKind];M.NORMAL&&K.push(t.f.NormalKind),M.TANGENT&&K.push(t.f.TangentKind);for(let D=1;D<=6;++D)M["UV"+D]&&K.push(`uv${1===D?"":D}`);M.VERTEXCOLOR&&K.push(t.f.ColorKind),(0,y.v)(K,D,M,g),(0,y.z)(K,M),(0,y.B)(K,D,M),(0,y.r)(K,D,M);let v="default";const r=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],B=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],s=["Material","Scene","Mesh"],q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:M.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=g,this._eventInfo.fallbackRank=0,this._eventInfo.defines=M,this._eventInfo.uniforms=r,this._eventInfo.attributes=K,this._eventInfo.samplers=B,this._eventInfo.uniformBuffersNames=s,this._eventInfo.customCode=void 0,this._eventInfo.mesh=D,this._eventInfo.indexParameters=q,this._callbackPluginEventGeneric(128,this._eventInfo),i.c.AddUniformsAndSamplers(r,B),S.e.AddUniforms(r),S.e.AddSamplers(B),k.c&&(k.c.PrepareUniforms(r,M),k.c.PrepareSamplers(B,M)),(0,y._)({uniformsNames:r,uniformBuffersNames:s,samplers:B,defines:M,maxSimultaneousLights:this._maxSimultaneousLights}),(0,c.e)(r);const b={};this.customShaderNameResolve&&(v=this.customShaderNameResolve(v,r,s,B,M,K,b));const N=M.toString(),J=h.effect;let O=j.getEngine().createEffect(v,{attributes:K,uniformsNames:r,uniformBuffersNames:s,samplers:B,defines:N,fallbacks:g,onCompiled:this.onCompiled,onError:this.onError,indexParameters:q,processFinalCode:b.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:M.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([o.e(41),o.e(64)]).then(o.bind(o,15253)),Promise.all([o.e(39),o.e(65)]).then(o.bind(o,15403))]):await Promise.all([Promise.all([o.e(34),o.e(67)]).then(o.bind(o,15484)),Promise.all([o.e(33),o.e(68)]).then(o.bind(o,15618))]),this._shadersLoaded=!0}},R);if(this._eventInfo.customCode=void 0,O)if(this._onEffectCreatedObservable&&(G.effect=O,G.subMesh=h,this._onEffectCreatedObservable.notifyObservers(G)),this.allowShaderHotSwapping&&J&&!O.isReady()){if(O=J,M.markAsUnprocessed(),Q=this.isFrozen,H)return M._areLightsDisposed=!0,!1}else j.resetCachedMaterial(),h.setEffect(O,M,this._materialContext)}return!(!h.effect||!h.effect.isReady())&&(M._renderId=j.getRenderId(),g._wasPreviouslyReady=!Q,g._wasPreviouslyUsingInstances=H,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const D=this._uniformBuffer;D.addUniform("diffuseLeftColor",4),D.addUniform("diffuseRightColor",4),D.addUniform("opacityParts",4),D.addUniform("reflectionLeftColor",4),D.addUniform("reflectionRightColor",4),D.addUniform("refractionLeftColor",4),D.addUniform("refractionRightColor",4),D.addUniform("emissiveLeftColor",4),D.addUniform("emissiveRightColor",4),D.addUniform("vDiffuseInfos",2),D.addUniform("vAmbientInfos",2),D.addUniform("vOpacityInfos",2),D.addUniform("vReflectionInfos",2),D.addUniform("vReflectionPosition",3),D.addUniform("vReflectionSize",3),D.addUniform("vEmissiveInfos",2),D.addUniform("vLightmapInfos",2),D.addUniform("vSpecularInfos",2),D.addUniform("vBumpInfos",3),D.addUniform("diffuseMatrix",16),D.addUniform("ambientMatrix",16),D.addUniform("opacityMatrix",16),D.addUniform("reflectionMatrix",16),D.addUniform("emissiveMatrix",16),D.addUniform("lightmapMatrix",16),D.addUniform("specularMatrix",16),D.addUniform("bumpMatrix",16),D.addUniform("vTangentSpaceParams",2),D.addUniform("pointSize",1),D.addUniform("alphaCutOff",1),D.addUniform("refractionMatrix",16),D.addUniform("vRefractionInfos",4),D.addUniform("vRefractionPosition",3),D.addUniform("vRefractionSize",3),D.addUniform("vSpecularColor",4),D.addUniform("vEmissiveColor",3),D.addUniform("vDiffuseColor",4),D.addUniform("vAmbientColor",3),D.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(D,h,o){const H=this.GD(),g=o.materialDefines;if(!g)return;const j=o.effect;if(!j)return;this._activeEffect=j,h.getMeshUniformBuffer().bindToEffect(j,"Mesh"),h.transferToEffect(D),this._uniformBuffer.bindToEffect(j,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,H,h,D,this.isFrozen),i.c.Bind(H.getEngine().currentRenderPassId,this._activeEffect,h,D,this);const t=H.activeCamera;t?this._uniformBuffer.updateFloat4("cameraInfo",t.Xh,t.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=o,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),g.OBJECTSPACE_NORMALMAP&&(D.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const S=this._mustRebind(H,j,o,h.visibility);(0,y.b)(h,j);const k=this._uniformBuffer;if(S){if(this.bindViewProjection(j),!k.useUbo||!this.isFrozen||!k.isSync||o._drawWrapper._forceRebindOnNextCall){if(J.FresnelEnabled&&g.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(k.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),k.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&k.updateColor4("opacityParts",new R.mo(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(k.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),k.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(k.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),k.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(k.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),k.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),H.texturesEnabled){if(this._diffuseTexture&&J.DiffuseTextureEnabled&&(k.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,y.p)(this._diffuseTexture,k,"diffuse")),this._ambientTexture&&J.AmbientTextureEnabled&&(k.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,y.p)(this._ambientTexture,k,"ambient")),this._opacityTexture&&J.OpacityTextureEnabled&&(k.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,y.p)(this._opacityTexture,k,"opacity")),this._hasAlphaChannel()&&k.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&J.ReflectionTextureEnabled){if(k.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),k.Wh("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const D=this._reflectionTexture;k.updateVector3("vReflectionPosition",D.boundingBoxPosition),k.updateVector3("vReflectionSize",D.boundingBoxSize)}}else k.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&J.EmissiveTextureEnabled&&(k.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,y.p)(this._emissiveTexture,k,"emissive")),this._lightmapTexture&&J.LightmapTextureEnabled&&(k.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,y.p)(this._lightmapTexture,k,"lightmap")),this._specularTexture&&J.SpecularTextureEnabled&&(k.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,y.p)(this._specularTexture,k,"specular")),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&J.BumpTextureEnabled&&(k.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,y.p)(this._bumpTexture,k,"bump"),H._mirroredCameraPosition?k.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):k.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&J.RefractionTextureEnabled){let D=1;if(this._refractionTexture.isCube||(k.Wh("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(D=this._refractionTexture.depth)),k.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,D,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const D=this._refractionTexture;k.updateVector3("vRefractionPosition",D.boundingBoxPosition),k.updateVector3("vRefractionSize",D.boundingBoxSize)}}}this.pointsCloud&&k.updateFloat("pointSize",this.pointSize),k.updateColor4("vSpecularColor",this.specularColor,this.specularPower),k.updateColor3("vEmissiveColor",J.EmissiveTextureEnabled?this.emissiveColor:R.mo.BlackReadOnly),k.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),H.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),k.updateColor3("vAmbientColor",this._globalAmbientColor)}H.texturesEnabled&&(this._diffuseTexture&&J.DiffuseTextureEnabled&&j.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&J.AmbientTextureEnabled&&j.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&J.OpacityTextureEnabled&&j.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&J.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?j.setTexture("reflectionCubeSampler",this._reflectionTexture):j.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&J.EmissiveTextureEnabled&&j.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&J.LightmapTextureEnabled&&j.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&J.SpecularTextureEnabled&&j.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&J.BumpTextureEnabled&&j.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&J.RefractionTextureEnabled&&(this._refractionTexture.isCube?j.setTexture("refractionCubeSampler",this._refractionTexture):j.setTexture("refraction2DSampler",this._refractionTexture))),this.GD().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(h)&&this.GD().depthPeelingRenderer.bind(j),this._eventInfo.subMesh=o,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,c.g)(j,this,H),this.bindEyePosition(j)}else H.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(S||!this.isFrozen){var K;if(H.lightsEnabled&&!this._disableLighting&&(0,y.h)(H,h,j,g,this._maxSimultaneousLights),(H.fogEnabled&&h.applyFog&&H.fogMode!==M.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||h.receiveShadows||g.PREPASS)&&this.bindView(j),(0,y.d)(H,h,j),g.NUM_MORPH_INFLUENCERS&&(0,y.k)(h,j),g.BAKED_VERTEX_ANIMATION_TEXTURE)null===(K=h.bakedVertexAnimationManager)||void 0===K||K.bind(j,g.INSTANCES);this.useLogarithmicDepth&&(0,y.j)(g,j,H),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(h,this._activeEffect,o),k.update()}getAnimatables(){const D=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&D.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&D.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&D.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&D.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&D.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&D.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&D.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&D.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&D.push(this._refractionTexture),D}getActiveTextures(){const D=super.getActiveTextures();return this._diffuseTexture&&D.push(this._diffuseTexture),this._ambientTexture&&D.push(this._ambientTexture),this._opacityTexture&&D.push(this._opacityTexture),this._reflectionTexture&&D.push(this._reflectionTexture),this._emissiveTexture&&D.push(this._emissiveTexture),this._specularTexture&&D.push(this._specularTexture),this._bumpTexture&&D.push(this._bumpTexture),this._lightmapTexture&&D.push(this._lightmapTexture),this._refractionTexture&&D.push(this._refractionTexture),D}hasTexture(D){return!!super.hasTexture(D)||(this._diffuseTexture===D||(this._ambientTexture===D||(this._opacityTexture===D||(this._reflectionTexture===D||(this._emissiveTexture===D||(this._specularTexture===D||(this._bumpTexture===D||(this._lightmapTexture===D||this._refractionTexture===D))))))))}dispose(D,h){var o,H,g,j,M,R,t,S,k;h&&(null===(o=this._diffuseTexture)||void 0===o||o.dispose(),null===(H=this._ambientTexture)||void 0===H||H.dispose(),null===(g=this._opacityTexture)||void 0===g||g.dispose(),null===(j=this._reflectionTexture)||void 0===j||j.dispose(),null===(M=this._emissiveTexture)||void 0===M||M.dispose(),null===(R=this._specularTexture)||void 0===R||R.dispose(),null===(t=this._bumpTexture)||void 0===t||t.dispose(),null===(S=this._lightmapTexture)||void 0===S||S.dispose(),null===(k=this._refractionTexture)||void 0===k||k.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(D,h)}clone(D){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const H=b.d.Clone((()=>new J(D,this.GD())),this,{cloneTexturesOnlyOnce:h});return H.name=D,H.id=D,this.Oh.copyTo(H.Oh),this._clonePlugins(H,o),H}static Parse(D,h,o){const H=b.d.Parse((()=>new J(D.name,h)),D,h,o);return D.Oh&&H.Oh.parse(D.Oh,h,o),K.c._ParsePlugins(D,H,h,o),H}static get DiffuseTextureEnabled(){return s.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(D){s.d.DiffuseTextureEnabled=D}static get DetailTextureEnabled(){return s.d.DetailTextureEnabled}static set DetailTextureEnabled(D){s.d.DetailTextureEnabled=D}static get AmbientTextureEnabled(){return s.d.AmbientTextureEnabled}static set AmbientTextureEnabled(D){s.d.AmbientTextureEnabled=D}static get OpacityTextureEnabled(){return s.d.OpacityTextureEnabled}static set OpacityTextureEnabled(D){s.d.OpacityTextureEnabled=D}static get ReflectionTextureEnabled(){return s.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(D){s.d.ReflectionTextureEnabled=D}static get EmissiveTextureEnabled(){return s.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(D){s.d.EmissiveTextureEnabled=D}static get SpecularTextureEnabled(){return s.d.SpecularTextureEnabled}static set SpecularTextureEnabled(D){s.d.SpecularTextureEnabled=D}static get BumpTextureEnabled(){return s.d.BumpTextureEnabled}static set BumpTextureEnabled(D){s.d.BumpTextureEnabled=D}static get LightmapTextureEnabled(){return s.d.LightmapTextureEnabled}static set LightmapTextureEnabled(D){s.d.LightmapTextureEnabled=D}static get RefractionTextureEnabled(){return s.d.RefractionTextureEnabled}static set RefractionTextureEnabled(D){s.d.RefractionTextureEnabled=D}static get ColorGradingTextureEnabled(){return s.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(D){s.d.ColorGradingTextureEnabled=D}static get FresnelEnabled(){return s.d.FresnelEnabled}static set FresnelEnabled(D){s.d.FresnelEnabled=D}}J.ForceGLSL=!1,(0,H.c)([(0,g.C)("diffuseTexture")],J.prototype,"_diffuseTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],J.prototype,"diffuseTexture",void 0),(0,H.c)([(0,g.C)("ambientTexture")],J.prototype,"_ambientTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"ambientTexture",void 0),(0,H.c)([(0,g.C)("opacityTexture")],J.prototype,"_opacityTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],J.prototype,"opacityTexture",void 0),(0,H.c)([(0,g.C)("reflectionTexture")],J.prototype,"_reflectionTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"reflectionTexture",void 0),(0,H.c)([(0,g.C)("emissiveTexture")],J.prototype,"_emissiveTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"emissiveTexture",void 0),(0,H.c)([(0,g.C)("specularTexture")],J.prototype,"_specularTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"specularTexture",void 0),(0,H.c)([(0,g.C)("bumpTexture")],J.prototype,"_bumpTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"bumpTexture",void 0),(0,H.c)([(0,g.C)("lightmapTexture")],J.prototype,"_lightmapTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"lightmapTexture",void 0),(0,H.c)([(0,g.C)("refractionTexture")],J.prototype,"_refractionTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"refractionTexture",void 0),(0,H.c)([(0,g.j)("ambient")],J.prototype,"ambientColor",void 0),(0,H.c)([(0,g.j)("diffuse")],J.prototype,"diffuseColor",void 0),(0,H.c)([(0,g.j)("specular")],J.prototype,"specularColor",void 0),(0,H.c)([(0,g.j)("emissive")],J.prototype,"emissiveColor",void 0),(0,H.c)([(0,g.I)()],J.prototype,"specularPower",void 0),(0,H.c)([(0,g.I)("useAlphaFromDiffuseTexture")],J.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],J.prototype,"useAlphaFromDiffuseTexture",void 0),(0,H.c)([(0,g.I)("useEmissiveAsIllumination")],J.prototype,"_useEmissiveAsIllumination",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useEmissiveAsIllumination",void 0),(0,H.c)([(0,g.I)("linkEmissiveWithDiffuse")],J.prototype,"_linkEmissiveWithDiffuse",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"linkEmissiveWithDiffuse",void 0),(0,H.c)([(0,g.I)("useSpecularOverAlpha")],J.prototype,"_useSpecularOverAlpha",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useSpecularOverAlpha",void 0),(0,H.c)([(0,g.I)("useReflectionOverAlpha")],J.prototype,"_useReflectionOverAlpha",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useReflectionOverAlpha",void 0),(0,H.c)([(0,g.I)("uh")],J.prototype,"_disableLighting",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsLightsDirty")],J.prototype,"uh",void 0),(0,H.c)([(0,g.I)("useObjectSpaceNormalMap")],J.prototype,"_useObjectSpaceNormalMap",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useObjectSpaceNormalMap",void 0),(0,H.c)([(0,g.I)("useParallax")],J.prototype,"_useParallax",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useParallax",void 0),(0,H.c)([(0,g.I)("useParallaxOcclusion")],J.prototype,"_useParallaxOcclusion",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useParallaxOcclusion",void 0),(0,H.c)([(0,g.I)()],J.prototype,"parallaxScaleBias",void 0),(0,H.c)([(0,g.I)("roughness")],J.prototype,"_roughness",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"roughness",void 0),(0,H.c)([(0,g.I)()],J.prototype,"indexOfRefraction",void 0),(0,H.c)([(0,g.I)()],J.prototype,"invertRefractionY",void 0),(0,H.c)([(0,g.I)()],J.prototype,"alphaCutOff",void 0),(0,H.c)([(0,g.I)("useLightmapAsShadowmap")],J.prototype,"_useLightmapAsShadowmap",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useLightmapAsShadowmap",void 0),(0,H.c)([(0,g.m)("diffuseFresnelParameters")],J.prototype,"_diffuseFresnelParameters",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],J.prototype,"diffuseFresnelParameters",void 0),(0,H.c)([(0,g.m)("opacityFresnelParameters")],J.prototype,"_opacityFresnelParameters",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],J.prototype,"opacityFresnelParameters",void 0),(0,H.c)([(0,g.m)("reflectionFresnelParameters")],J.prototype,"_reflectionFresnelParameters",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],J.prototype,"reflectionFresnelParameters",void 0),(0,H.c)([(0,g.m)("refractionFresnelParameters")],J.prototype,"_refractionFresnelParameters",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],J.prototype,"refractionFresnelParameters",void 0),(0,H.c)([(0,g.m)("emissiveFresnelParameters")],J.prototype,"_emissiveFresnelParameters",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],J.prototype,"emissiveFresnelParameters",void 0),(0,H.c)([(0,g.I)("useReflectionFresnelFromSpecular")],J.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],J.prototype,"useReflectionFresnelFromSpecular",void 0),(0,H.c)([(0,g.I)("useGlossinessFromSpecularMapAlpha")],J.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,H.c)([(0,g.I)("maxSimultaneousLights")],J.prototype,"_maxSimultaneousLights",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsLightsDirty")],J.prototype,"maxSimultaneousLights",void 0),(0,H.c)([(0,g.I)("invertNormalMapX")],J.prototype,"_invertNormalMapX",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"invertNormalMapX",void 0),(0,H.c)([(0,g.I)("invertNormalMapY")],J.prototype,"_invertNormalMapY",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"invertNormalMapY",void 0),(0,H.c)([(0,g.I)("twoSidedLighting")],J.prototype,"_twoSidedLighting",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],J.prototype,"twoSidedLighting",void 0),(0,H.c)([(0,g.I)("applyDecalMapAfterDetailMap")],J.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,H.c)([(0,g.b)("_markAllSubMeshesAsMiscDirty")],J.prototype,"applyDecalMapAfterDetailMap",void 0),(0,B.g)("BABYLON.StandardMaterial",J),M.b.DefaultMaterialFactory=D=>new J("default material",D)}}]);