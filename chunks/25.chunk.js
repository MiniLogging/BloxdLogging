"use strict";(self.hmihoa2fs98=self.hmihoa2fs98||[]).push([[25],{12072:(b,d,P)=>{P.d(d,{d:()=>Y});var G=P(11663),W=P(11999),i=P(11670),q=P(12067),C=P(12063),J=P(12080),L=P(12045);class x extends C.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class Y extends J.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(b){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(b,"DetailMap",140,new x,d),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=W.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=b._dirtyCallbacks[1]}isReadyForSubMesh(b,d,P){return!this._isEnabled||!(b._areTexturesDirty&&d.texturesEnabled&&P.getCaps().standardDerivatives&&this._texture&&q.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(b,d){if(this._isEnabled){b.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const P=d.getEngine();b._areTexturesDirty&&(P.getCaps().standardDerivatives&&this._texture&&q.d.DetailTextureEnabled&&this._isEnabled?((0,L.F)(this._texture,b,"DETAIL"),b.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):b.DETAIL=!1)}else b.DETAIL=!1}bindForSubMesh(b,d){if(!this._isEnabled)return;const P=this._material.isFrozen;b.useUbo&&P&&b.isSync||this._texture&&q.d.DetailTextureEnabled&&(b.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,L.h)(this._texture,b,"detail")),d.texturesEnabled&&this._texture&&q.d.DetailTextureEnabled&&b.setTexture("detailSampler",this._texture)}hasTexture(b){return this._texture===b}getActiveTextures(b){this._texture&&b.push(this._texture)}getAnimatables(b){this._texture&&this._texture.animations&&this._texture.animations.length>0&&b.push(this._texture)}dispose(b){var d;b&&(null===(d=this._texture)||void 0===d||d.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(b){b.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,G.d)([(0,i.B)("detailTexture"),(0,i.e)("_markAllSubMeshesAsTexturesDirty")],Y.prototype,"texture",void 0),(0,G.d)([(0,i.G)()],Y.prototype,"diffuseBlendLevel",void 0),(0,G.d)([(0,i.G)()],Y.prototype,"roughnessBlendLevel",void 0),(0,G.d)([(0,i.G)()],Y.prototype,"bumpLevel",void 0),(0,G.d)([(0,i.G)(),(0,i.e)("_markAllSubMeshesAsTexturesDirty")],Y.prototype,"normalBlendMethod",void 0),(0,G.d)([(0,i.G)(),(0,i.e)("_markAllSubMeshesAsTexturesDirty")],Y.prototype,"isEnabled",void 0)},12063:(b,d,P)=>{P.d(d,{b:()=>G});class G{constructor(b){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=b,b)for(const d in b)Object.prototype.hasOwnProperty.call(b,d)&&this._setDefaultValue(d)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||b,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const b of Object.keys(this))"_"!==b[0]&&this._keys.push(b);if(this._externalProperties)for(const b in this._externalProperties)-1===this._keys.indexOf(b)&&this._keys.push(b)}isEqual(b){if(this._keys.length!==b._keys.length)return!1;for(let d=0;d<this._keys.length;d++){const P=this._keys[d];if(this[P]!==b[P])return!1}return!0}cloneTo(b){this._keys.length!==b._keys.length&&(b._keys=this._keys.slice(0));for(let d=0;d<this._keys.length;d++){const P=this._keys[d];b[P]=this[P]}}reset(){for(const b of this._keys)this._setDefaultValue(b)}_setDefaultValue(b){var d,P,G,W;const i=(null===(d=this._externalProperties)||void 0===d||null===(P=d[b])||void 0===P?void 0:P.type)??typeof this[b],q=null===(G=this._externalProperties)||void 0===G||null===(W=G[b])||void 0===W?void 0:W.default;switch(i){case"number":this[b]=q??0;break;case"string":this[b]=q??"";break;default:this[b]=q??!1}}toString(){let b="";for(let d=0;d<this._keys.length;d++){const P=this._keys[d],G=this[P];switch(typeof G){case"number":case"string":b+="#define "+P+" "+G+"\n";break;default:G&&(b+="#define "+P+"\n")}}return b}}},12067:(b,d,P)=>{P.d(d,{d:()=>W});var G=P(11574);class W{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(b){this._DiffuseTextureEnabled!==b&&(this._DiffuseTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(b){this._BaseWeightTextureEnabled!==b&&(this._BaseWeightTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(b){this._BaseDiffuseRoughnessTextureEnabled!==b&&(this._BaseDiffuseRoughnessTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(b){this._DetailTextureEnabled!==b&&(this._DetailTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(b){this._DecalMapEnabled!==b&&(this._DecalMapEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(b){this._AmbientTextureEnabled!==b&&(this._AmbientTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(b){this._OpacityTextureEnabled!==b&&(this._OpacityTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(b){this._ReflectionTextureEnabled!==b&&(this._ReflectionTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(b){this._EmissiveTextureEnabled!==b&&(this._EmissiveTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(b){this._SpecularTextureEnabled!==b&&(this._SpecularTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(b){this._BumpTextureEnabled!==b&&(this._BumpTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(b){this._LightmapTextureEnabled!==b&&(this._LightmapTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(b){this._RefractionTextureEnabled!==b&&(this._RefractionTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(b){this._ColorGradingTextureEnabled!==b&&(this._ColorGradingTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(b){this._FresnelEnabled!==b&&(this._FresnelEnabled=b,G.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(b){this._ClearCoatTextureEnabled!==b&&(this._ClearCoatTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(b){this._ClearCoatBumpTextureEnabled!==b&&(this._ClearCoatBumpTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(b){this._ClearCoatTintTextureEnabled!==b&&(this._ClearCoatTintTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(b){this._SheenTextureEnabled!==b&&(this._SheenTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(b){this._AnisotropicTextureEnabled!==b&&(this._AnisotropicTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(b){this._ThicknessTextureEnabled!==b&&(this._ThicknessTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(b){this._RefractionIntensityTextureEnabled!==b&&(this._RefractionIntensityTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(b){this._TranslucencyIntensityTextureEnabled!==b&&(this._TranslucencyIntensityTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(b){this._TranslucencyColorTextureEnabled!==b&&(this._TranslucencyColorTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(b){this._IridescenceTextureEnabled!==b&&(this._IridescenceTextureEnabled=b,G.e.MarkAllMaterialsAsDirty(1))}}W._DiffuseTextureEnabled=!0,W._BaseWeightTextureEnabled=!0,W._BaseDiffuseRoughnessTextureEnabled=!0,W._DetailTextureEnabled=!0,W._DecalMapEnabled=!0,W._AmbientTextureEnabled=!0,W._OpacityTextureEnabled=!0,W._ReflectionTextureEnabled=!0,W._EmissiveTextureEnabled=!0,W._SpecularTextureEnabled=!0,W._BumpTextureEnabled=!0,W._LightmapTextureEnabled=!0,W._RefractionTextureEnabled=!0,W._ColorGradingTextureEnabled=!0,W._FresnelEnabled=!0,W._ClearCoatTextureEnabled=!0,W._ClearCoatBumpTextureEnabled=!0,W._ClearCoatTintTextureEnabled=!0,W._SheenTextureEnabled=!0,W._AnisotropicTextureEnabled=!0,W._ThicknessTextureEnabled=!0,W._RefractionIntensityTextureEnabled=!0,W._TranslucencyIntensityTextureEnabled=!0,W._TranslucencyColorTextureEnabled=!0,W._IridescenceTextureEnabled=!0},12087:(b,d,P)=>{P.d(d,{d:()=>i});var G,W=P(11681);!function(b){b[b.Zero=0]="Zero",b[b.One=1]="One",b[b.MaxViewZ=2]="MaxViewZ"}(G||(G={}));class i{static CreateConfiguration(b){return i._Configurations[b]={defines:{},previousWorldMatrices:{},previousViewProjection:W.Matrix.Zero(),currentViewProjection:W.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},i._Configurations[b]}static DeleteConfiguration(b){delete i._Configurations[b]}static GetConfiguration(b){return i._Configurations[b]}static AddUniformsAndSamplers(b,d){b.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(b,d){for(const P of d)if(P.ld)for(const d of P.ld)d._removeDrawWrapper(b)}static PrepareDefines(b,d,P){if(!P._arePrePassDirty)return;const G=i._Configurations[b];if(!G)return;P.PREPASS=!0,P.PREPASS_COLOR=!1,P.PREPASS_COLOR_INDEX=-1;let W=0;for(let q=0;q<i.GeometryTextureDescriptions.length;q++){const b=i.GeometryTextureDescriptions[q],d=b.define,C=b.defineIndex,J=G.defines[C];void 0!==J?(P[d]=!0,P[C]=J,W++):(P[d]=!1,delete P[C])}P.SCENE_MRT_COUNT=W,P.BONES_VELOCITY_ENABLED=d.useBones&&d.computeBonesUsingShaders&&d.skeleton&&!d.skeleton.isUsingTextureForMatrices&&-1===G.excludedSkinnedMesh.indexOf(d)}static Bind(b,d,P,G,W){const q=i._Configurations[b];if(!q)return;const C=P.Xb(),J=C.getEngine();if(q.reverseCulling&&J.setStateCullFaceType(C._mirroredCameraPosition?W.cullBackFaces:!W.cullBackFaces),(void 0!==q.defines.PREPASS_VELOCITY_INDEX||void 0!==q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(q.previousWorldMatrices[P.uniqueId]||(q.previousWorldMatrices[P.uniqueId]=G.clone()),q.previousViewProjection||(q.previousViewProjection=C.getTransformMatrix().clone(),q.currentViewProjection=C.getTransformMatrix().clone()),q.currentViewProjection.updateFlag!==C.getTransformMatrix().updateFlag?(q.lastUpdateFrameId=J.frameId,q.previousViewProjection.q(q.currentViewProjection),q.currentViewProjection.q(C.getTransformMatrix())):q.lastUpdateFrameId!==J.frameId&&(q.lastUpdateFrameId=J.frameId,q.previousViewProjection.q(q.currentViewProjection)),d.setMatrix("previousWorld",q.previousWorldMatrices[P.uniqueId]),d.setMatrix("previousViewProjection",q.previousViewProjection),q.previousWorldMatrices[P.uniqueId]=G.clone(),P.useBones&&P.computeBonesUsingShaders&&P.skeleton)){const b=P.skeleton;if(!b.isUsingTextureForMatrices||-1===d.getUniformIndex("boneTextureWidth")){const G=b.getTransformMatrices(P);G&&(q.previousBones[P.uniqueId]||(q.previousBones[P.uniqueId]=G.slice()),d.setMatrices("mPreviousBones",q.previousBones[P.uniqueId]),q.previousBones[P.uniqueId].set(G))}}}}i.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],i._Configurations={}},12080:(b,d,P)=>{P.d(d,{b:()=>B});var G=P(11663),W=P(11670),i=P(11999),q=P(11535),C=P(11556),J=P(11591);const L=new RegExp("^([gimus]+)!");class x{constructor(b){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=b,this._scene=b.Xb(),this._engine=this._scene.getEngine()}_addPlugin(b){for(let G=0;G<this._plugins.length;++G)if(this._plugins[G].name===b.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!b.isCompatible(this._material.shaderLanguage))throw`The plugin "${b.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const d=b.getClassName();x._MaterialPluginClassToMainDefine[d]||(x._MaterialPluginClassToMainDefine[d]="MATERIALPLUGIN_"+ ++x._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(b,d)=>this._handlePluginEvent(b,d),this._plugins.push(b),this._plugins.sort(((b,d)=>b.priority-d.priority)),this._codeInjectionPoints={};const P={};P[x._MaterialPluginClassToMainDefine[d]]={type:"boolean",default:!0};for(const G of this._plugins)G.collectDefines(P),this._collectPointNames("vertex",G.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",G.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=P,!0}_activatePlugin(b){-1===this._activePlugins.indexOf(b)&&(this._activePlugins.push(b),this._activePlugins.sort(((b,d)=>b.priority-d.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),b.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(b),this._activePluginsForExtraEvents.sort(((b,d)=>b.priority-d.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(b){for(let d=0;d<this._plugins.length;++d)if(this._plugins[d].name===b)return this._plugins[d];return null}_handlePluginEventIsReadyForSubMesh(b){let d=!0;for(const P of this._activePlugins)d=d&&P.isReadyForSubMesh(b.defines,this._scene,this._engine,b.subMesh);b.isReadyForSubMesh=d}_handlePluginEventPrepareDefinesBeforeAttributes(b){for(const d of this._activePlugins)d.prepareDefinesBeforeAttributes(b.defines,this._scene,b.mesh)}_handlePluginEventPrepareDefines(b){for(const d of this._activePlugins)d.prepareDefines(b.defines,this._scene,b.mesh)}_handlePluginEventHardBindForSubMesh(b){for(const d of this._activePluginsForExtraEvents)d.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,b.subMesh)}_handlePluginEventBindForSubMesh(b){for(const d of this._activePlugins)d.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,b.subMesh)}_handlePluginEventHasRenderTargetTextures(b){let d=!1;for(const P of this._activePluginsForExtraEvents)if(d=P.hasRenderTargetTextures(),d)break;b.hasRenderTargetTextures=d}_handlePluginEventFillRenderTargetTextures(b){for(const d of this._activePluginsForExtraEvents)d.fillRenderTargetTextures(b.renderTargets)}_handlePluginEvent(b,d){switch(b){case 512:{const b=d;for(const d of this._activePlugins)d.getActiveTextures(b.activeTextures);break}case 256:{const b=d;for(const d of this._activePlugins)d.getAnimatables(b.animatables);break}case 1024:{const b=d;let P=!1;for(const d of this._activePlugins)if(P=d.hasTexture(b.texture),P)break;b.hasTexture=P;break}case 2:{const b=d;for(const d of this._plugins)d.dispose(b.forceDisposeTextures);break}case 4:d.defineNames=this._defineNamesFromPlugins;break;case 128:{const b=d;for(const d of this._activePlugins)b.fallbackRank=d.addFallbacks(b.defines,b.fallbacks,b.fallbackRank),d.getAttributes(b.attributes,this._scene,b.mesh);this._uniformList.length>0&&b.uniforms.push(...this._uniformList),this._samplerList.length>0&&b.samplers.push(...this._samplerList),this._uboList.length>0&&b.uniformBuffersNames.push(...this._uboList),b.customCode=this._injectCustomCode(b,b.customCode);break}case 8:{const b=d;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const P=1===this._material.shaderLanguage;for(const d of this._plugins){const G=d.getUniforms(this._material.shaderLanguage);if(G){if(G.ubo)for(const d of G.ubo){if(d.size&&d.type){const G=d.arraySize??0;if(b.ubo.addUniform(d.name,d.size,G),P){let b;switch(d.type){case"mat4":b="mat4x4f";break;case"float":b="f32";break;default:b=`${d.type}f`}this._uboDeclaration+=G>0?`uniform ${d.name}: array<${b}, ${G}>;\n`:`uniform ${d.name}: ${b};\n`}else this._uboDeclaration+=`${d.type} ${d.name}${G>0?`[${G}]`:""};\n`}this._uniformList.push(d.name)}G.vertex&&(this._vertexDeclaration+=G.vertex+"\n"),G.fragment&&(this._fragmentDeclaration+=G.fragment+"\n")}d.getSamplers(this._samplerList),d.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(b,d){if(d)for(const P in d)this._codeInjectionPoints[b]||(this._codeInjectionPoints[b]={}),this._codeInjectionPoints[b][P]=!0}_injectCustomCode(b,d){return(P,G)=>{var W;d&&(G=d(P,G)),this._uboDeclaration&&(G=G.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(G=G.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(G=G.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const i=null===(W=this._codeInjectionPoints)||void 0===W?void 0:W[P];if(!i)return G;let q=null;for(let d in i){let W="";for(const G of this._activePlugins){var x;let i=null===(x=G.getCustomCode(P,this._material.shaderLanguage))||void 0===x?void 0:x[d];if(i){if(G.resolveIncludes){if(null===q){const d=0;q={defines:[],indexParameters:b.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:J.c.GetShadersRepository(d),includesShadersStore:J.c.GetIncludesShadersStore(d),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}q.isFragment="fragment"===P,(0,C.i)(i,q,(b=>i=b))}W+=i+"\n"}}if(W.length>0)if("!"===d.charAt(0)){d=d.substring(1);let b="g";if("!"===d.charAt(0))b="",d=d.substring(1);else{const P=L.exec(d);P&&P.length>=2&&(b=P[1],d=d.substring(b.length+1))}b.indexOf("g")<0&&(b+="g");const P=G,i=new RegExp(d,b);let q=i.exec(P);for(;null!==q;){let b=W;for(let d=0;d<q.length;++d)b=b.replace("$"+d,q[d]);G=G.replace(q[0],b),q=i.exec(P)}}else{const b="#define "+d;G=G.replace(b,"\n"+W+"\n"+b)}}return G}}}x._MaterialPluginClassToMainDefine={},x._MaterialPluginCounter=0,q.e.OnEnginesDisposedObservable.add((()=>{w()}));const Y=[];let s=!1,E=null;function w(){Y.length=0,s=!1,i.e.OnEventObservable.remove(E),E=null}var t=P(11716),r=P(11639);class B{isCompatible(b){return 0===b}_enable(b){b&&this._pluginManager._activatePlugin(this)}constructor(b,d,P,G){let W=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=b,this.name=d,this.priority=P,this.resolveIncludes=q,b.pluginManager||(b.pluginManager=new x(b),b.Zd.add((()=>{b.pluginManager=void 0}))),this._pluginDefineNames=G,this._pluginManager=b.pluginManager,W&&this._pluginManager._addPlugin(this),i&&this._enable(!0),this.markAllDefinesAsDirty=b._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(b,d,P,G){return!0}hardBindForSubMesh(b,d,P,G){}bindForSubMesh(b,d,P,G){}dispose(b){}getCustomCode(b){return null}collectDefines(b){if(this._pluginDefineNames)for(const d of Object.keys(this._pluginDefineNames)){if("_"===d[0])continue;const P=typeof this._pluginDefineNames[d];b[d]={type:"number"===P?"number":"string"===P?"string":"boolean"===P?"boolean":"object",default:this._pluginDefineNames[d]}}}prepareDefinesBeforeAttributes(b,d,P){}prepareDefines(b,d,P){}hasTexture(b){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(b){}getActiveTextures(b){}getAnimatables(b){}addFallbacks(b,d,P){return P}getSamplers(b){}getAttributes(b,d,P){}getUniformBuffersNames(b){}getUniforms(){return{}}copyTo(b){t.c.Clone((()=>b),this)}serialize(){return t.c.Serialize(this)}parse(b,d,P){t.c.Parse((()=>this),b,d,P)}}(0,G.d)([(0,W.G)()],B.prototype,"name",void 0),(0,G.d)([(0,W.G)()],B.prototype,"priority",void 0),(0,G.d)([(0,W.G)()],B.prototype,"resolveIncludes",void 0),(0,G.d)([(0,W.G)()],B.prototype,"registerForExtraEvents",void 0),(0,r.f)("BABYLON.MaterialPluginBase",B)},12060:(b,d,P)=>{P.d(d,{e:()=>G});class G{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(b){b.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(b){}bindForSubMesh(b,d,P,G,W){if(d.prePassRenderer&&d.prePassRenderer.enabled&&d.prePassRenderer.currentRTisSceneRT&&(-1!==d.prePassRenderer.getIndex(2)||-1!==d.prePassRenderer.getIndex(11))){this.previousWorldMatrices[P.uniqueId]||(this.previousWorldMatrices[P.uniqueId]=G.clone()),this.previousViewProjection||(this.previousViewProjection=d.getTransformMatrix().clone(),this.currentViewProjection=d.getTransformMatrix().clone());const W=d.getEngine();this.currentViewProjection.updateFlag!==d.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=W.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(d.getTransformMatrix())):this._lastUpdateFrameId!==W.frameId&&(this._lastUpdateFrameId=W.frameId,this.previousViewProjection.q(this.currentViewProjection)),b.setMatrix("previousWorld",this.previousWorldMatrices[P.uniqueId]),b.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[P.uniqueId]=G.clone()}}}},12056:(b,d,P)=>{P.d(d,{Sd:()=>u});var G=P(11663),W=P(11670),i=P(11781),q=P(11909),C=P(11725),J=P(11752),L=P(12060),x=P(11918),Y=P(11999),s=P(12063),E=P(11990),w=P(11658),t=P(11639),r=P(12067),B=P(11984),n=P(12072),Z=P(12049),o=P(12045),A=P(11716),f=P(12087);const g={effect:null,subMesh:null};class X extends s.b{constructor(b){super(b),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(b){const d=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const P of d)this[P]=P===b}}class u extends E.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(b){this._attachImageProcessingConfiguration(b),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(b){b!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=b||this.Xb().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(b){this.imageProcessingConfiguration.colorCurvesEnabled=b}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(b){this.imageProcessingConfiguration.colorGradingEnabled=b}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(b){this._imageProcessingConfiguration.toneMappingEnabled=b}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(b){this._imageProcessingConfiguration.exposure=b}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(b){this._imageProcessingConfiguration.contrast=b}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(b){this._imageProcessingConfiguration.colorGradingTexture=b}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(b){this._imageProcessingConfiguration.colorCurves=b}get canRenderToMRT(){return!0}constructor(b,d){super(b,d,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||u.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new C.Nd(0,0,0),this.diffuseColor=new C.Nd(1,1,1),this.specularColor=new C.Nd(1,1,1),this.emissiveColor=new C.Nd(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new i.d(16),this._globalAmbientColor=new C.Nd(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new n.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new L.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Sd"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===Y.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ad&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==Y.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ad||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(b,d){let G=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const W=d._drawWrapper;if(W.effect&&this.isFrozen&&W._wasPreviouslyReady&&W._wasPreviouslyUsingInstances===G)return!0;d.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),d.materialDefines=new X(this._eventInfo.defineNames));const i=this.Xb(),q=d.materialDefines;if(this._isReadyForSubMesh(d))return!0;const C=i.getEngine();q._needNormals=(0,o.D)(i,b,q,!0,this._maxSimultaneousLights,this._disableLighting),(0,o.L)(i,q);const Y=this.needAlphaBlendingForMesh(b)&&this.Xb().useOrderIndependentTransparency;if((0,o.P)(i,q,this.canRenderToMRT&&!Y),(0,o.N)(i,q,Y),f.d.PrepareDefines(C.currentRenderPassId,b,q),q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,q._needUVs=!1;for(let b=1;b<=6;++b)q["MAINUV"+b]=!1;if(i.texturesEnabled){if(q.DIFFUSEDIRECTUV=0,q.BUMPDIRECTUV=0,q.AMBIENTDIRECTUV=0,q.OPACITYDIRECTUV=0,q.EMISSIVEDIRECTUV=0,q.SPECULARDIRECTUV=0,q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&u.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._diffuseTexture,q,"DIFFUSE")}else q.DIFFUSE=!1;if(this._ambientTexture&&u.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._ambientTexture,q,"AMBIENT")}else q.AMBIENT=!1;if(this._opacityTexture&&u.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._opacityTexture,q,"OPACITY"),q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else q.OPACITY=!1;if(this._reflectionTexture&&u.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(q._needNormals=!0,q.REFLECTION=!0,q.ROUGHNESS=this._roughness>0,q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===w.d.INVCUBIC_MODE,q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,q.REFLECTIONMAP_OPPOSITEZ=q.REFLECTIONMAP_3D&&this.Xb().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case w.d.EXPLICIT_MODE:q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case w.d.PLANAR_MODE:q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case w.d.PROJECTION_MODE:q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case w.d.SKYBOX_MODE:q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case w.d.SPHERICAL_MODE:q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case w.d.EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case w.d.FIXED_EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case w.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case w.d.CUBIC_MODE:case w.d.INVCUBIC_MODE:default:q.setReflectionMode("REFLECTIONMAP_CUBIC")}q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else q.REFLECTION=!1,q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&u.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._emissiveTexture,q,"EMISSIVE")}else q.EMISSIVE=!1;if(this._lightmapTexture&&u.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._lightmapTexture,q,"LIGHTMAP"),q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else q.LIGHTMAP=!1;if(this._specularTexture&&u.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,o.F)(this._specularTexture,q,"SPECULAR"),q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else q.SPECULAR=!1;if(i.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&u.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,o.F)(this._bumpTexture,q,"BUMP"),q.PARALLAX=this._useParallax,q.PARALLAX_RHS=i.useRightHandedSystem,q.PARALLAXOCCLUSION=this._useParallaxOcclusion,q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else q.BUMP=!1,q.PARALLAX=!1,q.PARALLAX_RHS=!1,q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&u.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;q._needUVs=!0,q.REFRACTION=!0,q.REFRACTIONMAP_3D=this._refractionTexture.isCube,q.RGBDREFRACTION=this._refractionTexture.isRGBD,q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else q.REFRACTION=!1;q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else q.DIFFUSE=!1,q.AMBIENT=!1,q.OPACITY=!1,q.REFLECTION=!1,q.EMISSIVE=!1,q.LIGHTMAP=!1,q.BUMP=!1,q.REFRACTION=!1;q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,q.SPECULAROVERALPHA=this._useSpecularOverAlpha,q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(b)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=q,this._eventInfo.subMesh=d,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(q),q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(q._areFresnelDirty&&(u.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,q._needNormals=!0,q.FRESNEL=!0):q.FRESNEL=!1),q.AREALIGHTUSED)for(let P=0;P<b.lightSources.length;P++)if(!b.lightSources[P]._isReady())return!1;(0,o.J)(b,i,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(b),q,this._applyDecalMapAfterDetailMap),(0,o.C)(i,C,this,q,G,null,d.getRenderingMesh().hasThinInstances),this._eventInfo.defines=q,this._eventInfo.mesh=b,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,o.z)(b,q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let s=!1;if(q.isDirty){const G=q._areLightsDisposed;q.markAsProcessed();const W=new B.d;q.REFLECTION&&W.addFallback(0,"REFLECTION"),q.SPECULAR&&W.addFallback(0,"SPECULAR"),q.BUMP&&W.addFallback(0,"BUMP"),q.PARALLAX&&W.addFallback(1,"PARALLAX"),q.PARALLAX_RHS&&W.addFallback(1,"PARALLAX_RHS"),q.PARALLAXOCCLUSION&&W.addFallback(0,"PARALLAXOCCLUSION"),q.SPECULAROVERALPHA&&W.addFallback(0,"SPECULAROVERALPHA"),q.FOG&&W.addFallback(1,"FOG"),q.POINTSIZE&&W.addFallback(0,"POINTSIZE"),q.LOGARITHMICDEPTH&&W.addFallback(0,"LOGARITHMICDEPTH"),(0,o.j)(q,W,this._maxSimultaneousLights),q.SPECULARTERM&&W.addFallback(0,"SPECULARTERM"),q.DIFFUSEFRESNEL&&W.addFallback(1,"DIFFUSEFRESNEL"),q.OPACITYFRESNEL&&W.addFallback(2,"OPACITYFRESNEL"),q.REFLECTIONFRESNEL&&W.addFallback(3,"REFLECTIONFRESNEL"),q.EMISSIVEFRESNEL&&W.addFallback(4,"EMISSIVEFRESNEL"),q.FRESNEL&&W.addFallback(4,"FRESNEL"),q.MULTIVIEW&&W.addFallback(0,"MULTIVIEW");const Y=[J.c.PositionKind];q.NORMAL&&Y.push(J.c.NormalKind),q.TANGENT&&Y.push(J.c.TangentKind);for(let b=1;b<=6;++b)q["UV"+b]&&Y.push(`uv${1===b?"":b}`);q.VERTEXCOLOR&&Y.push(J.c.ColorKind),(0,o.p)(Y,b,q,W),(0,o.t)(Y,q),(0,o.v)(Y,b,q),(0,o.l)(Y,b,q);let E="default";const w=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],t=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],r=["Material","Scene","Mesh"],n={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=W,this._eventInfo.fallbackRank=0,this._eventInfo.defines=q,this._eventInfo.uniforms=w,this._eventInfo.attributes=Y,this._eventInfo.samplers=t,this._eventInfo.uniformBuffersNames=r,this._eventInfo.customCode=void 0,this._eventInfo.mesh=b,this._eventInfo.indexParameters=n,this._callbackPluginEventGeneric(128,this._eventInfo),f.d.AddUniformsAndSamplers(w,t),L.e.AddUniforms(w),L.e.AddSamplers(t),x.d&&(x.d.PrepareUniforms(w,q),x.d.PrepareSamplers(t,q)),(0,o.R)({uniformsNames:w,uniformBuffersNames:r,samplers:t,defines:q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,Z.c)(w);const A={};this.customShaderNameResolve&&(E=this.customShaderNameResolve(E,w,r,t,q,Y,A));const X=q.toString(),u=d.effect;let M=i.getEngine().createEffect(E,{attributes:Y,uniformsNames:w,uniformBuffersNames:r,samplers:t,defines:X,fallbacks:W,onCompiled:this.onCompiled,onError:this.onError,indexParameters:n,processFinalCode:A.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([P.e(41),P.e(64)]).then(P.bind(P,14206)),Promise.all([P.e(39),P.e(65)]).then(P.bind(P,14358))]):await Promise.all([Promise.all([P.e(34),P.e(67)]).then(P.bind(P,14448)),Promise.all([P.e(33),P.e(68)]).then(P.bind(P,14600))]),this._shadersLoaded=!0}},C);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(g.effect=M,g.subMesh=d,this._onEffectCreatedObservable.notifyObservers(g)),this.allowShaderHotSwapping&&u&&!M.isReady()){if(M=u,q.markAsUnprocessed(),s=this.isFrozen,G)return q._areLightsDisposed=!0,!1}else i.resetCachedMaterial(),d.setEffect(M,q,this._materialContext)}return!(!d.effect||!d.effect.isReady())&&(q._renderId=i.getRenderId(),W._wasPreviouslyReady=!s,W._wasPreviouslyUsingInstances=G,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const b=this._uniformBuffer;b.addUniform("diffuseLeftColor",4),b.addUniform("diffuseRightColor",4),b.addUniform("opacityParts",4),b.addUniform("reflectionLeftColor",4),b.addUniform("reflectionRightColor",4),b.addUniform("refractionLeftColor",4),b.addUniform("refractionRightColor",4),b.addUniform("emissiveLeftColor",4),b.addUniform("emissiveRightColor",4),b.addUniform("vDiffuseInfos",2),b.addUniform("vAmbientInfos",2),b.addUniform("vOpacityInfos",2),b.addUniform("vReflectionInfos",2),b.addUniform("vReflectionPosition",3),b.addUniform("vReflectionSize",3),b.addUniform("vEmissiveInfos",2),b.addUniform("vLightmapInfos",2),b.addUniform("vSpecularInfos",2),b.addUniform("vBumpInfos",3),b.addUniform("diffuseMatrix",16),b.addUniform("ambientMatrix",16),b.addUniform("opacityMatrix",16),b.addUniform("reflectionMatrix",16),b.addUniform("emissiveMatrix",16),b.addUniform("lightmapMatrix",16),b.addUniform("specularMatrix",16),b.addUniform("bumpMatrix",16),b.addUniform("vTangentSpaceParams",2),b.addUniform("pointSize",1),b.addUniform("alphaCutOff",1),b.addUniform("refractionMatrix",16),b.addUniform("vRefractionInfos",4),b.addUniform("vRefractionPosition",3),b.addUniform("vRefractionSize",3),b.addUniform("vSpecularColor",4),b.addUniform("vEmissiveColor",3),b.addUniform("vDiffuseColor",4),b.addUniform("vAmbientColor",3),b.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(b,d,P){const G=this.Xb(),W=P.materialDefines;if(!W)return;const i=P.effect;if(!i)return;this._activeEffect=i,d.getMeshUniformBuffer().bindToEffect(i,"Mesh"),d.transferToEffect(b),this._uniformBuffer.bindToEffect(i,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,G,d,b,this.isFrozen),f.d.Bind(G.getEngine().currentRenderPassId,this._activeEffect,d,b,this);const J=G.activeCamera;J?this._uniformBuffer.updateFloat4("cameraInfo",J.Vd,J.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=P,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),W.OBJECTSPACE_NORMALMAP&&(b.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const L=this._mustRebind(G,i,P,d.visibility);(0,o.b)(d,i);const x=this._uniformBuffer;if(L){if(this.bindViewProjection(i),!x.useUbo||!this.isFrozen||!x.isSync||P._drawWrapper._forceRebindOnNextCall){if(u.FresnelEnabled&&W.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(x.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),x.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&x.updateColor4("opacityParts",new C.Nd(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(x.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),x.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(x.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),x.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(x.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),x.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),G.texturesEnabled){if(this._diffuseTexture&&u.DiffuseTextureEnabled&&(x.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,o.h)(this._diffuseTexture,x,"diffuse")),this._ambientTexture&&u.AmbientTextureEnabled&&(x.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,o.h)(this._ambientTexture,x,"ambient")),this._opacityTexture&&u.OpacityTextureEnabled&&(x.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,o.h)(this._opacityTexture,x,"opacity")),this._hasAlphaChannel()&&x.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&u.ReflectionTextureEnabled){if(x.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),x.yd("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const b=this._reflectionTexture;x.updateVector3("vReflectionPosition",b.boundingBoxPosition),x.updateVector3("vReflectionSize",b.boundingBoxSize)}}else x.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&u.EmissiveTextureEnabled&&(x.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,o.h)(this._emissiveTexture,x,"emissive")),this._lightmapTexture&&u.LightmapTextureEnabled&&(x.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,o.h)(this._lightmapTexture,x,"lightmap")),this._specularTexture&&u.SpecularTextureEnabled&&(x.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,o.h)(this._specularTexture,x,"specular")),this._bumpTexture&&G.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&(x.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,o.h)(this._bumpTexture,x,"bump"),G._mirroredCameraPosition?x.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):x.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&u.RefractionTextureEnabled){let b=1;if(this._refractionTexture.isCube||(x.yd("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(b=this._refractionTexture.depth)),x.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,b,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const b=this._refractionTexture;x.updateVector3("vRefractionPosition",b.boundingBoxPosition),x.updateVector3("vRefractionSize",b.boundingBoxSize)}}}this.pointsCloud&&x.updateFloat("pointSize",this.pointSize),x.updateColor4("vSpecularColor",this.specularColor,this.specularPower),x.updateColor3("vEmissiveColor",u.EmissiveTextureEnabled?this.emissiveColor:C.Nd.BlackReadOnly),x.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),G.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),x.updateColor3("vAmbientColor",this._globalAmbientColor)}G.texturesEnabled&&(this._diffuseTexture&&u.DiffuseTextureEnabled&&i.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&u.AmbientTextureEnabled&&i.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&u.OpacityTextureEnabled&&i.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&u.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?i.setTexture("reflectionCubeSampler",this._reflectionTexture):i.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&u.EmissiveTextureEnabled&&i.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&u.LightmapTextureEnabled&&i.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&u.SpecularTextureEnabled&&i.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&G.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&i.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&u.RefractionTextureEnabled&&(this._refractionTexture.isCube?i.setTexture("refractionCubeSampler",this._refractionTexture):i.setTexture("refraction2DSampler",this._refractionTexture))),this.Xb().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(d)&&this.Xb().depthPeelingRenderer.bind(i),this._eventInfo.subMesh=P,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,Z.f)(i,this,G),this.bindEyePosition(i)}else G.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(L||!this.isFrozen){var Y;if(G.lightsEnabled&&!this._disableLighting&&(0,o.d)(G,d,i,W,this._maxSimultaneousLights),(G.fogEnabled&&d.applyFog&&G.fogMode!==q.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||d.receiveShadows||W.PREPASS)&&this.bindView(i),(0,o.c)(G,d,i),W.NUM_MORPH_INFLUENCERS&&(0,o.f)(d,i),W.BAKED_VERTEX_ANIMATION_TEXTURE)null===(Y=d.bakedVertexAnimationManager)||void 0===Y||Y.bind(i,W.INSTANCES);this.useLogarithmicDepth&&(0,o.e)(W,i,G),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(d,this._activeEffect,P),x.update()}getAnimatables(){const b=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&b.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&b.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&b.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&b.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&b.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&b.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&b.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&b.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&b.push(this._refractionTexture),b}getActiveTextures(){const b=super.getActiveTextures();return this._diffuseTexture&&b.push(this._diffuseTexture),this._ambientTexture&&b.push(this._ambientTexture),this._opacityTexture&&b.push(this._opacityTexture),this._reflectionTexture&&b.push(this._reflectionTexture),this._emissiveTexture&&b.push(this._emissiveTexture),this._specularTexture&&b.push(this._specularTexture),this._bumpTexture&&b.push(this._bumpTexture),this._lightmapTexture&&b.push(this._lightmapTexture),this._refractionTexture&&b.push(this._refractionTexture),b}hasTexture(b){return!!super.hasTexture(b)||(this._diffuseTexture===b||(this._ambientTexture===b||(this._opacityTexture===b||(this._reflectionTexture===b||(this._emissiveTexture===b||(this._specularTexture===b||(this._bumpTexture===b||(this._lightmapTexture===b||this._refractionTexture===b))))))))}dispose(b,d){var P,G,W,i,q,C,J,L,x;d&&(null===(P=this._diffuseTexture)||void 0===P||P.dispose(),null===(G=this._ambientTexture)||void 0===G||G.dispose(),null===(W=this._opacityTexture)||void 0===W||W.dispose(),null===(i=this._reflectionTexture)||void 0===i||i.dispose(),null===(q=this._emissiveTexture)||void 0===q||q.dispose(),null===(C=this._specularTexture)||void 0===C||C.dispose(),null===(J=this._bumpTexture)||void 0===J||J.dispose(),null===(L=this._lightmapTexture)||void 0===L||L.dispose(),null===(x=this._refractionTexture)||void 0===x||x.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(b,d)}clone(b){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const G=A.c.Clone((()=>new u(b,this.Xb())),this,{cloneTexturesOnlyOnce:d});return G.name=b,G.id=b,this.stencil.copyTo(G.stencil),this._clonePlugins(G,P),G}static Parse(b,d,P){const G=A.c.Parse((()=>new u(b.name,d)),b,d,P);return b.stencil&&G.stencil.parse(b.stencil,d,P),Y.e._ParsePlugins(b,G,d,P),G}static get DiffuseTextureEnabled(){return r.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(b){r.d.DiffuseTextureEnabled=b}static get DetailTextureEnabled(){return r.d.DetailTextureEnabled}static set DetailTextureEnabled(b){r.d.DetailTextureEnabled=b}static get AmbientTextureEnabled(){return r.d.AmbientTextureEnabled}static set AmbientTextureEnabled(b){r.d.AmbientTextureEnabled=b}static get OpacityTextureEnabled(){return r.d.OpacityTextureEnabled}static set OpacityTextureEnabled(b){r.d.OpacityTextureEnabled=b}static get ReflectionTextureEnabled(){return r.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(b){r.d.ReflectionTextureEnabled=b}static get EmissiveTextureEnabled(){return r.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(b){r.d.EmissiveTextureEnabled=b}static get SpecularTextureEnabled(){return r.d.SpecularTextureEnabled}static set SpecularTextureEnabled(b){r.d.SpecularTextureEnabled=b}static get BumpTextureEnabled(){return r.d.BumpTextureEnabled}static set BumpTextureEnabled(b){r.d.BumpTextureEnabled=b}static get LightmapTextureEnabled(){return r.d.LightmapTextureEnabled}static set LightmapTextureEnabled(b){r.d.LightmapTextureEnabled=b}static get RefractionTextureEnabled(){return r.d.RefractionTextureEnabled}static set RefractionTextureEnabled(b){r.d.RefractionTextureEnabled=b}static get ColorGradingTextureEnabled(){return r.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(b){r.d.ColorGradingTextureEnabled=b}static get FresnelEnabled(){return r.d.FresnelEnabled}static set FresnelEnabled(b){r.d.FresnelEnabled=b}}u.ForceGLSL=!1,(0,G.d)([(0,W.B)("diffuseTexture")],u.prototype,"_diffuseTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"diffuseTexture",void 0),(0,G.d)([(0,W.B)("ambientTexture")],u.prototype,"_ambientTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"ambientTexture",void 0),(0,G.d)([(0,W.B)("opacityTexture")],u.prototype,"_opacityTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"opacityTexture",void 0),(0,G.d)([(0,W.B)("reflectionTexture")],u.prototype,"_reflectionTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"reflectionTexture",void 0),(0,G.d)([(0,W.B)("emissiveTexture")],u.prototype,"_emissiveTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"emissiveTexture",void 0),(0,G.d)([(0,W.B)("specularTexture")],u.prototype,"_specularTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"specularTexture",void 0),(0,G.d)([(0,W.B)("bumpTexture")],u.prototype,"_bumpTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"bumpTexture",void 0),(0,G.d)([(0,W.B)("lightmapTexture")],u.prototype,"_lightmapTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"lightmapTexture",void 0),(0,G.d)([(0,W.B)("refractionTexture")],u.prototype,"_refractionTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"refractionTexture",void 0),(0,G.d)([(0,W.n)("ambient")],u.prototype,"ambientColor",void 0),(0,G.d)([(0,W.n)("diffuse")],u.prototype,"diffuseColor",void 0),(0,G.d)([(0,W.n)("specular")],u.prototype,"specularColor",void 0),(0,G.d)([(0,W.n)("emissive")],u.prototype,"emissiveColor",void 0),(0,G.d)([(0,W.G)()],u.prototype,"specularPower",void 0),(0,G.d)([(0,W.G)("useAlphaFromDiffuseTexture")],u.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"useAlphaFromDiffuseTexture",void 0),(0,G.d)([(0,W.G)("useEmissiveAsIllumination")],u.prototype,"_useEmissiveAsIllumination",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useEmissiveAsIllumination",void 0),(0,G.d)([(0,W.G)("linkEmissiveWithDiffuse")],u.prototype,"_linkEmissiveWithDiffuse",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"linkEmissiveWithDiffuse",void 0),(0,G.d)([(0,W.G)("useSpecularOverAlpha")],u.prototype,"_useSpecularOverAlpha",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useSpecularOverAlpha",void 0),(0,G.d)([(0,W.G)("useReflectionOverAlpha")],u.prototype,"_useReflectionOverAlpha",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useReflectionOverAlpha",void 0),(0,G.d)([(0,W.G)("disableLighting")],u.prototype,"_disableLighting",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsLightsDirty")],u.prototype,"disableLighting",void 0),(0,G.d)([(0,W.G)("useObjectSpaceNormalMap")],u.prototype,"_useObjectSpaceNormalMap",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useObjectSpaceNormalMap",void 0),(0,G.d)([(0,W.G)("useParallax")],u.prototype,"_useParallax",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallax",void 0),(0,G.d)([(0,W.G)("useParallaxOcclusion")],u.prototype,"_useParallaxOcclusion",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallaxOcclusion",void 0),(0,G.d)([(0,W.G)()],u.prototype,"parallaxScaleBias",void 0),(0,G.d)([(0,W.G)("roughness")],u.prototype,"_roughness",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"roughness",void 0),(0,G.d)([(0,W.G)()],u.prototype,"indexOfRefraction",void 0),(0,G.d)([(0,W.G)()],u.prototype,"invertRefractionY",void 0),(0,G.d)([(0,W.G)()],u.prototype,"alphaCutOff",void 0),(0,G.d)([(0,W.G)("useLightmapAsShadowmap")],u.prototype,"_useLightmapAsShadowmap",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useLightmapAsShadowmap",void 0),(0,G.d)([(0,W.q)("diffuseFresnelParameters")],u.prototype,"_diffuseFresnelParameters",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"diffuseFresnelParameters",void 0),(0,G.d)([(0,W.q)("opacityFresnelParameters")],u.prototype,"_opacityFresnelParameters",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],u.prototype,"opacityFresnelParameters",void 0),(0,G.d)([(0,W.q)("reflectionFresnelParameters")],u.prototype,"_reflectionFresnelParameters",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"reflectionFresnelParameters",void 0),(0,G.d)([(0,W.q)("refractionFresnelParameters")],u.prototype,"_refractionFresnelParameters",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"refractionFresnelParameters",void 0),(0,G.d)([(0,W.q)("emissiveFresnelParameters")],u.prototype,"_emissiveFresnelParameters",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"emissiveFresnelParameters",void 0),(0,G.d)([(0,W.G)("useReflectionFresnelFromSpecular")],u.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"useReflectionFresnelFromSpecular",void 0),(0,G.d)([(0,W.G)("useGlossinessFromSpecularMapAlpha")],u.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,G.d)([(0,W.G)("maxSimultaneousLights")],u.prototype,"_maxSimultaneousLights",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsLightsDirty")],u.prototype,"maxSimultaneousLights",void 0),(0,G.d)([(0,W.G)("invertNormalMapX")],u.prototype,"_invertNormalMapX",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapX",void 0),(0,G.d)([(0,W.G)("invertNormalMapY")],u.prototype,"_invertNormalMapY",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapY",void 0),(0,G.d)([(0,W.G)("twoSidedLighting")],u.prototype,"_twoSidedLighting",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"twoSidedLighting",void 0),(0,G.d)([(0,W.G)("applyDecalMapAfterDetailMap")],u.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,G.d)([(0,W.e)("_markAllSubMeshesAsMiscDirty")],u.prototype,"applyDecalMapAfterDetailMap",void 0),(0,t.f)("BABYLON.StandardMaterial",u),q.e.DefaultMaterialFactory=b=>new u("default material",b)}}]);