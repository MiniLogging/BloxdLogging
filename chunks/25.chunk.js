"use strict";(self.isj1uwvwrek=self.isj1uwvwrek||[]).push([[25],{13373:(I,x,L)=>{L.d(x,{e:()=>Q});var F=L(12969),X=L(13299),G=L(12971),Y=L(13367),p=L(13365),B=L(13377),l=L(13336);class W extends p.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class Q extends B.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(I){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(I,"DetailMap",140,new W,x),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=X.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=I._dirtyCallbacks[1]}isReadyForSubMesh(I,x,L){return!this._isEnabled||!(I._areTexturesDirty&&x.texturesEnabled&&L.getCaps().standardDerivatives&&this._texture&&Y.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(I,x){if(this._isEnabled){I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const L=x.getEngine();I._areTexturesDirty&&(L.getCaps().standardDerivatives&&this._texture&&Y.b.DetailTextureEnabled&&this._isEnabled?((0,l.S)(this._texture,I,"DETAIL"),I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):I.DETAIL=!1)}else I.DETAIL=!1}bindForSubMesh(I,x){if(!this._isEnabled)return;const L=this._material.isFrozen;I.useUbo&&L&&I.isSync||this._texture&&Y.b.DetailTextureEnabled&&(I.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,l.m)(this._texture,I,"detail")),x.texturesEnabled&&this._texture&&Y.b.DetailTextureEnabled&&I.setTexture("detailSampler",this._texture)}hasTexture(I){return this._texture===I}getActiveTextures(I){this._texture&&I.push(this._texture)}getAnimatables(I){this._texture&&this._texture.animations&&this._texture.animations.length>0&&I.push(this._texture)}dispose(I){var x;I&&(null===(x=this._texture)||void 0===x||x.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(I){I.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,F.d)([(0,G.C)("detailTexture"),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"texture",void 0),(0,F.d)([(0,G.K)()],Q.prototype,"diffuseBlendLevel",void 0),(0,F.d)([(0,G.K)()],Q.prototype,"roughnessBlendLevel",void 0),(0,F.d)([(0,G.K)()],Q.prototype,"bumpLevel",void 0),(0,F.d)([(0,G.K)(),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"normalBlendMethod",void 0),(0,F.d)([(0,G.K)(),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"isEnabled",void 0)},13365:(I,x,L)=>{L.d(x,{b:()=>F});class F{constructor(I){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=I,I)for(const x in I)Object.prototype.hasOwnProperty.call(I,x)&&this._setDefaultValue(x)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||I,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const I of Object.keys(this))"_"!==I[0]&&this._keys.push(I);if(this._externalProperties)for(const I in this._externalProperties)-1===this._keys.indexOf(I)&&this._keys.push(I)}isEqual(I){if(this._keys.length!==I._keys.length)return!1;for(let x=0;x<this._keys.length;x++){const L=this._keys[x];if(this[L]!==I[L])return!1}return!0}cloneTo(I){this._keys.length!==I._keys.length&&(I._keys=this._keys.slice(0));for(let x=0;x<this._keys.length;x++){const L=this._keys[x];I[L]=this[L]}}reset(){for(const I of this._keys)this._setDefaultValue(I)}_setDefaultValue(I){var x,L,F,X;const G=(null===(x=this._externalProperties)||void 0===x||null===(L=x[I])||void 0===L?void 0:L.type)??typeof this[I],Y=null===(F=this._externalProperties)||void 0===F||null===(X=F[I])||void 0===X?void 0:X.default;switch(G){case"number":this[I]=Y??0;break;case"string":this[I]=Y??"";break;default:this[I]=Y??!1}}toString(){let I="";for(let x=0;x<this._keys.length;x++){const L=this._keys[x],F=this[L];switch(typeof F){case"number":case"string":I+="#define "+L+" "+F+"\n";break;default:F&&(I+="#define "+L+"\n")}}return I}}},13367:(I,x,L)=>{L.d(x,{b:()=>X});var F=L(12872);class X{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){this._DiffuseTextureEnabled!==I&&(this._DiffuseTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(I){this._BaseWeightTextureEnabled!==I&&(this._BaseWeightTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(I){this._BaseDiffuseRoughnessTextureEnabled!==I&&(this._BaseDiffuseRoughnessTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(I){this._DetailTextureEnabled!==I&&(this._DetailTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(I){this._DecalMapEnabled!==I&&(this._DecalMapEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(I){this._AmbientTextureEnabled!==I&&(this._AmbientTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(I){this._OpacityTextureEnabled!==I&&(this._OpacityTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){this._ReflectionTextureEnabled!==I&&(this._ReflectionTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){this._EmissiveTextureEnabled!==I&&(this._EmissiveTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(I){this._SpecularTextureEnabled!==I&&(this._SpecularTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(I){this._BumpTextureEnabled!==I&&(this._BumpTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(I){this._LightmapTextureEnabled!==I&&(this._LightmapTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(I){this._RefractionTextureEnabled!==I&&(this._RefractionTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){this._ColorGradingTextureEnabled!==I&&(this._ColorGradingTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(I){this._FresnelEnabled!==I&&(this._FresnelEnabled=I,F.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(I){this._ClearCoatTextureEnabled!==I&&(this._ClearCoatTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(I){this._ClearCoatBumpTextureEnabled!==I&&(this._ClearCoatBumpTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(I){this._ClearCoatTintTextureEnabled!==I&&(this._ClearCoatTintTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(I){this._SheenTextureEnabled!==I&&(this._SheenTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(I){this._AnisotropicTextureEnabled!==I&&(this._AnisotropicTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(I){this._ThicknessTextureEnabled!==I&&(this._ThicknessTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(I){this._RefractionIntensityTextureEnabled!==I&&(this._RefractionIntensityTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(I){this._TranslucencyIntensityTextureEnabled!==I&&(this._TranslucencyIntensityTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(I){this._TranslucencyColorTextureEnabled!==I&&(this._TranslucencyColorTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(I){this._IridescenceTextureEnabled!==I&&(this._IridescenceTextureEnabled=I,F.d.MarkAllMaterialsAsDirty(1))}}X._DiffuseTextureEnabled=!0,X._BaseWeightTextureEnabled=!0,X._BaseDiffuseRoughnessTextureEnabled=!0,X._DetailTextureEnabled=!0,X._DecalMapEnabled=!0,X._AmbientTextureEnabled=!0,X._OpacityTextureEnabled=!0,X._ReflectionTextureEnabled=!0,X._EmissiveTextureEnabled=!0,X._SpecularTextureEnabled=!0,X._BumpTextureEnabled=!0,X._LightmapTextureEnabled=!0,X._RefractionTextureEnabled=!0,X._ColorGradingTextureEnabled=!0,X._FresnelEnabled=!0,X._ClearCoatTextureEnabled=!0,X._ClearCoatBumpTextureEnabled=!0,X._ClearCoatTintTextureEnabled=!0,X._SheenTextureEnabled=!0,X._AnisotropicTextureEnabled=!0,X._ThicknessTextureEnabled=!0,X._RefractionIntensityTextureEnabled=!0,X._TranslucencyIntensityTextureEnabled=!0,X._TranslucencyColorTextureEnabled=!0,X._IridescenceTextureEnabled=!0},13383:(I,x,L)=>{L.d(x,{d:()=>G});var F,X=L(12983);!function(I){I[I.Zero=0]="Zero",I[I.One=1]="One",I[I.MaxViewZ=2]="MaxViewZ"}(F||(F={}));class G{static CreateConfiguration(I){return G._Configurations[I]={defines:{},previousWorldMatrices:{},previousViewProjection:X.Matrix.Zero(),currentViewProjection:X.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},G._Configurations[I]}static DeleteConfiguration(I){delete G._Configurations[I]}static GetConfiguration(I){return G._Configurations[I]}static AddUniformsAndSamplers(I,x){I.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(I,x){for(const L of x)if(L.jp)for(const x of L.jp)x._removeDrawWrapper(I)}static PrepareDefines(I,x,L){if(!L._arePrePassDirty)return;const F=G._Configurations[I];if(!F)return;L.PREPASS=!0,L.PREPASS_COLOR=!1,L.PREPASS_COLOR_INDEX=-1;let X=0;for(let Y=0;Y<G.GeometryTextureDescriptions.length;Y++){const I=G.GeometryTextureDescriptions[Y],x=I.define,p=I.defineIndex,B=F.defines[p];void 0!==B?(L[x]=!0,L[p]=B,X++):(L[x]=!1,delete L[p])}L.SCENE_MRT_COUNT=X,L.BONES_VELOCITY_ENABLED=x.useBones&&x.computeBonesUsingShaders&&x.skeleton&&!x.skeleton.isUsingTextureForMatrices&&-1===F.excludedSkinnedMesh.indexOf(x)}static Bind(I,x,L,F,X){const Y=G._Configurations[I];if(!Y)return;const p=L.tI(),B=p.getEngine();if(Y.reverseCulling&&B.setStateCullFaceType(p._mirroredCameraPosition?X.cullBackFaces:!X.cullBackFaces),(void 0!==Y.defines.PREPASS_VELOCITY_INDEX||void 0!==Y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Y.previousWorldMatrices[L.uniqueId]||(Y.previousWorldMatrices[L.uniqueId]=F.clone()),Y.previousViewProjection||(Y.previousViewProjection=p.getTransformMatrix().clone(),Y.currentViewProjection=p.getTransformMatrix().clone()),Y.currentViewProjection.updateFlag!==p.getTransformMatrix().updateFlag?(Y.lastUpdateFrameId=B.frameId,Y.previousViewProjection.X(Y.currentViewProjection),Y.currentViewProjection.X(p.getTransformMatrix())):Y.lastUpdateFrameId!==B.frameId&&(Y.lastUpdateFrameId=B.frameId,Y.previousViewProjection.X(Y.currentViewProjection)),x.setMatrix("previousWorld",Y.previousWorldMatrices[L.uniqueId]),x.setMatrix("previousViewProjection",Y.previousViewProjection),Y.previousWorldMatrices[L.uniqueId]=F.clone(),L.useBones&&L.computeBonesUsingShaders&&L.skeleton)){const I=L.skeleton;if(!I.isUsingTextureForMatrices||-1===x.getUniformIndex("boneTextureWidth")){const F=I.getTransformMatrices(L);F&&(Y.previousBones[L.uniqueId]||(Y.previousBones[L.uniqueId]=F.slice()),x.setMatrices("mPreviousBones",Y.previousBones[L.uniqueId]),Y.previousBones[L.uniqueId].set(F))}}}}G.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],G._Configurations={}},13377:(I,x,L)=>{L.d(x,{d:()=>s});var F=L(12969),X=L(12971),G=L(13299),Y=L(12840),p=L(12855),B=L(12885);const l=new RegExp("^([gimus]+)!");class W{constructor(I){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=I,this._scene=I.tI(),this._engine=this._scene.getEngine()}_addPlugin(I){for(let F=0;F<this._plugins.length;++F)if(this._plugins[F].name===I.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!I.isCompatible(this._material.shaderLanguage))throw`The plugin "${I.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const x=I.getClassName();W._MaterialPluginClassToMainDefine[x]||(W._MaterialPluginClassToMainDefine[x]="MATERIALPLUGIN_"+ ++W._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(I,x)=>this._handlePluginEvent(I,x),this._plugins.push(I),this._plugins.sort(((I,x)=>I.priority-x.priority)),this._codeInjectionPoints={};const L={};L[W._MaterialPluginClassToMainDefine[x]]={type:"boolean",default:!0};for(const F of this._plugins)F.collectDefines(L),this._collectPointNames("vertex",F.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",F.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=L,!0}_activatePlugin(I){-1===this._activePlugins.indexOf(I)&&(this._activePlugins.push(I),this._activePlugins.sort(((I,x)=>I.priority-x.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),I.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(I),this._activePluginsForExtraEvents.sort(((I,x)=>I.priority-x.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(I){for(let x=0;x<this._plugins.length;++x)if(this._plugins[x].name===I)return this._plugins[x];return null}_handlePluginEventIsReadyForSubMesh(I){let x=!0;for(const L of this._activePlugins)x=x&&L.isReadyForSubMesh(I.defines,this._scene,this._engine,I.subMesh);I.isReadyForSubMesh=x}_handlePluginEventPrepareDefinesBeforeAttributes(I){for(const x of this._activePlugins)x.prepareDefinesBeforeAttributes(I.defines,this._scene,I.mesh)}_handlePluginEventPrepareDefines(I){for(const x of this._activePlugins)x.prepareDefines(I.defines,this._scene,I.mesh)}_handlePluginEventHardBindForSubMesh(I){for(const x of this._activePluginsForExtraEvents)x.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventBindForSubMesh(I){for(const x of this._activePlugins)x.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventHasRenderTargetTextures(I){let x=!1;for(const L of this._activePluginsForExtraEvents)if(x=L.hasRenderTargetTextures(),x)break;I.hasRenderTargetTextures=x}_handlePluginEventFillRenderTargetTextures(I){for(const x of this._activePluginsForExtraEvents)x.fillRenderTargetTextures(I.renderTargets)}_handlePluginEvent(I,x){switch(I){case 512:{const I=x;for(const x of this._activePlugins)x.getActiveTextures(I.activeTextures);break}case 256:{const I=x;for(const x of this._activePlugins)x.getAnimatables(I.animatables);break}case 1024:{const I=x;let L=!1;for(const x of this._activePlugins)if(L=x.hasTexture(I.texture),L)break;I.hasTexture=L;break}case 2:{const I=x;for(const x of this._plugins)x.dispose(I.forceDisposeTextures);break}case 4:x.defineNames=this._defineNamesFromPlugins;break;case 128:{const I=x;for(const x of this._activePlugins)I.fallbackRank=x.addFallbacks(I.defines,I.fallbacks,I.fallbackRank),x.getAttributes(I.attributes,this._scene,I.mesh);this._uniformList.length>0&&I.uniforms.push(...this._uniformList),this._samplerList.length>0&&I.samplers.push(...this._samplerList),this._uboList.length>0&&I.uniformBuffersNames.push(...this._uboList),I.customCode=this._injectCustomCode(I,I.customCode);break}case 8:{const I=x;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const L=1===this._material.shaderLanguage;for(const x of this._plugins){const F=x.getUniforms(this._material.shaderLanguage);if(F){if(F.ubo)for(const x of F.ubo){if(x.size&&x.type){const F=x.arraySize??0;if(I.ubo.addUniform(x.name,x.size,F),L){let I;switch(x.type){case"mat4":I="mat4x4f";break;case"float":I="f32";break;default:I=`${x.type}f`}this._uboDeclaration+=F>0?`uniform ${x.name}: array<${I}, ${F}>;\n`:`uniform ${x.name}: ${I};\n`}else this._uboDeclaration+=`${x.type} ${x.name}${F>0?`[${F}]`:""};\n`}this._uniformList.push(x.name)}F.vertex&&(this._vertexDeclaration+=F.vertex+"\n"),F.fragment&&(this._fragmentDeclaration+=F.fragment+"\n")}x.getSamplers(this._samplerList),x.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(I,x){if(x)for(const L in x)this._codeInjectionPoints[I]||(this._codeInjectionPoints[I]={}),this._codeInjectionPoints[I][L]=!0}_injectCustomCode(I,x){return(L,F)=>{var X;x&&(F=x(L,F)),this._uboDeclaration&&(F=F.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(F=F.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(F=F.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const G=null===(X=this._codeInjectionPoints)||void 0===X?void 0:X[L];if(!G)return F;let Y=null;for(let x in G){let X="";for(const F of this._activePlugins){var W;let G=null===(W=F.getCustomCode(L,this._material.shaderLanguage))||void 0===W?void 0:W[x];if(G){if(F.resolveIncludes){if(null===Y){const x=0;Y={defines:[],indexParameters:I.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:B.d.GetShadersRepository(x),includesShadersStore:B.d.GetIncludesShadersStore(x),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,dp:this._engine.dp,processCodeAfterIncludes:void 0}}Y.isFragment="fragment"===L,(0,p.k)(G,Y,(I=>G=I))}X+=G+"\n"}}if(X.length>0)if("!"===x.charAt(0)){x=x.substring(1);let I="g";if("!"===x.charAt(0))I="",x=x.substring(1);else{const L=l.exec(x);L&&L.length>=2&&(I=L[1],x=x.substring(I.length+1))}I.indexOf("g")<0&&(I+="g");const L=F,G=new RegExp(x,I);let Y=G.exec(L);for(;null!==Y;){let I=X;for(let x=0;x<Y.length;++x)I=I.replace("$"+x,Y[x]);F=F.replace(Y[0],I),Y=G.exec(L)}}else{const I="#define "+x;F=F.replace(I,"\n"+X+"\n"+I)}}return F}}}W._MaterialPluginClassToMainDefine={},W._MaterialPluginCounter=0,Y.e.OnEnginesDisposedObservable.add((()=>{v()}));const Q=[];let e=!1,g=null;function v(){Q.length=0,e=!1,G.e.OnEventObservable.remove(g),g=null}var z=L(13012),H=L(12938);class s{isCompatible(I){return 0===I}_enable(I){I&&this._pluginManager._activatePlugin(this)}constructor(I,x,L,F){let X=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=I,this.name=x,this.priority=L,this.resolveIncludes=Y,I.pluginManager||(I.pluginManager=new W(I),I.cp.add((()=>{I.pluginManager=void 0}))),this._pluginDefineNames=F,this._pluginManager=I.pluginManager,X&&this._pluginManager._addPlugin(this),G&&this._enable(!0),this.markAllDefinesAsDirty=I._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(I,x,L,F){return!0}hardBindForSubMesh(I,x,L,F){}bindForSubMesh(I,x,L,F){}dispose(I){}getCustomCode(I){return null}collectDefines(I){if(this._pluginDefineNames)for(const x of Object.keys(this._pluginDefineNames)){if("_"===x[0])continue;const L=typeof this._pluginDefineNames[x];I[x]={type:"number"===L?"number":"string"===L?"string":"boolean"===L?"boolean":"object",default:this._pluginDefineNames[x]}}}prepareDefinesBeforeAttributes(I,x,L){}prepareDefines(I,x,L){}hasTexture(I){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(I){}getActiveTextures(I){}getAnimatables(I){}addFallbacks(I,x,L){return L}getSamplers(I){}getAttributes(I,x,L){}getUniformBuffersNames(I){}getUniforms(){return{}}copyTo(I){z.c.Clone((()=>I),this)}serialize(){return z.c.Serialize(this)}parse(I,x,L){z.c.Parse((()=>this),I,x,L)}}(0,F.d)([(0,X.K)()],s.prototype,"name",void 0),(0,F.d)([(0,X.K)()],s.prototype,"priority",void 0),(0,F.d)([(0,X.K)()],s.prototype,"resolveIncludes",void 0),(0,F.d)([(0,X.K)()],s.prototype,"registerForExtraEvents",void 0),(0,H.d)("BABYLON.MaterialPluginBase",s)},13356:(I,x,L)=>{L.d(x,{b:()=>F});class F{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(I){I.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(I){}bindForSubMesh(I,x,L,F,X){if(x.prePassRenderer&&x.prePassRenderer.enabled&&x.prePassRenderer.currentRTisSceneRT&&(-1!==x.prePassRenderer.getIndex(2)||-1!==x.prePassRenderer.getIndex(11))){this.previousWorldMatrices[L.uniqueId]||(this.previousWorldMatrices[L.uniqueId]=F.clone()),this.previousViewProjection||(this.previousViewProjection=x.getTransformMatrix().clone(),this.currentViewProjection=x.getTransformMatrix().clone());const X=x.getEngine();this.currentViewProjection.updateFlag!==x.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.X(this.currentViewProjection),this.currentViewProjection.X(x.getTransformMatrix())):this._lastUpdateFrameId!==X.frameId&&(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.X(this.currentViewProjection)),I.setMatrix("previousWorld",this.previousWorldMatrices[L.uniqueId]),I.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[L.uniqueId]=F.clone()}}}},13349:(I,x,L)=>{L.d(x,{yx:()=>R});var F=L(12969),X=L(12971),G=L(13076),Y=L(13218),p=L(13020),B=L(13048),l=L(13356),W=L(13220),Q=L(13299),e=L(13365),g=L(13295),v=L(12965),z=L(12938),H=L(13367),s=L(13293),U=L(13373),q=L(13340),y=L(13336),T=L(13012),Z=L(13383);const t={effect:null,subMesh:null};class f extends e.b{constructor(I){super(I),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(I){const x=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const L of x)this[L]=L===I}}class R extends g.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(I){this._attachImageProcessingConfiguration(I),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(I){I!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=I||this.tI().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(I){this.imageProcessingConfiguration.colorCurvesEnabled=I}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(I){this.imageProcessingConfiguration.colorGradingEnabled=I}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(I){this._imageProcessingConfiguration.toneMappingEnabled=I}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(I){this._imageProcessingConfiguration.exposure=I}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(I){this._imageProcessingConfiguration.contrast=I}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(I){this._imageProcessingConfiguration.colorGradingTexture=I}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(I){this._imageProcessingConfiguration.colorCurves=I}get canRenderToMRT(){return!0}constructor(I,x){super(I,x,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||R.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new p.Tx(0,0,0),this.diffuseColor=new p.Tx(1,1,1),this.specularColor=new p.Tx(1,1,1),this.emissiveColor=new p.Tx(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new G.e(16),this._globalAmbientColor=new p.Tx(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new U.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new l.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),R.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),R.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(R.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(R.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"yx"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===Q.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.bp&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==Q.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.bp||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(I,x){let F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const X=x._drawWrapper;if(X.effect&&this.isFrozen&&X._wasPreviouslyReady&&X._wasPreviouslyUsingInstances===F)return!0;x.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),x.materialDefines=new f(this._eventInfo.defineNames));const G=this.tI(),Y=x.materialDefines;if(this._isReadyForSubMesh(x))return!0;const p=G.getEngine();Y._needNormals=(0,y.Q)(G,I,Y,!0,this._maxSimultaneousLights,this._disableLighting),(0,y.Y)(G,Y);const Q=this.needAlphaBlendingForMesh(I)&&this.tI().useOrderIndependentTransparency;if((0,y.bb)(G,Y,this.canRenderToMRT&&!Q),(0,y.$)(G,Y,Q),Z.d.PrepareDefines(p.currentRenderPassId,I,Y),Y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Y._needUVs=!1;for(let I=1;I<=6;++I)Y["MAINUV"+I]=!1;if(G.texturesEnabled){if(Y.DIFFUSEDIRECTUV=0,Y.BUMPDIRECTUV=0,Y.AMBIENTDIRECTUV=0,Y.OPACITYDIRECTUV=0,Y.EMISSIVEDIRECTUV=0,Y.SPECULARDIRECTUV=0,Y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&R.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._diffuseTexture,Y,"DIFFUSE")}else Y.DIFFUSE=!1;if(this._ambientTexture&&R.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._ambientTexture,Y,"AMBIENT")}else Y.AMBIENT=!1;if(this._opacityTexture&&R.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._opacityTexture,Y,"OPACITY"),Y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Y.OPACITY=!1;if(this._reflectionTexture&&R.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Y._needNormals=!0,Y.REFLECTION=!0,Y.ROUGHNESS=this._roughness>0,Y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===v.d.INVCUBIC_MODE,Y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Y.REFLECTIONMAP_OPPOSITEZ=Y.REFLECTIONMAP_3D&&this.tI().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case v.d.EXPLICIT_MODE:Y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case v.d.PLANAR_MODE:Y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case v.d.PROJECTION_MODE:Y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case v.d.SKYBOX_MODE:Y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case v.d.SPHERICAL_MODE:Y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case v.d.EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case v.d.FIXED_EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case v.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case v.d.CUBIC_MODE:case v.d.INVCUBIC_MODE:default:Y.setReflectionMode("REFLECTIONMAP_CUBIC")}Y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Y.REFLECTION=!1,Y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&R.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._emissiveTexture,Y,"EMISSIVE")}else Y.EMISSIVE=!1;if(this._lightmapTexture&&R.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._lightmapTexture,Y,"LIGHTMAP"),Y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Y.LIGHTMAP=!1;if(this._specularTexture&&R.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,y.S)(this._specularTexture,Y,"SPECULAR"),Y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Y.SPECULAR=!1;if(G.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&R.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,y.S)(this._bumpTexture,Y,"BUMP"),Y.PARALLAX=this._useParallax,Y.PARALLAX_RHS=G.useRightHandedSystem,Y.PARALLAXOCCLUSION=this._useParallaxOcclusion,Y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Y.BUMP=!1,Y.PARALLAX=!1,Y.PARALLAX_RHS=!1,Y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&R.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Y._needUVs=!0,Y.REFRACTION=!0,Y.REFRACTIONMAP_3D=this._refractionTexture.isCube,Y.RGBDREFRACTION=this._refractionTexture.isRGBD,Y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Y.REFRACTION=!1;Y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Y.DIFFUSE=!1,Y.AMBIENT=!1,Y.OPACITY=!1,Y.REFLECTION=!1,Y.EMISSIVE=!1,Y.LIGHTMAP=!1,Y.BUMP=!1,Y.REFRACTION=!1;Y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Y.SPECULAROVERALPHA=this._useSpecularOverAlpha,Y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(I)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Y,this._eventInfo.subMesh=x,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Y),Y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Y._areFresnelDirty&&(R.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Y._needNormals=!0,Y.FRESNEL=!0):Y.FRESNEL=!1),Y.AREALIGHTUSED)for(let L=0;L<I.lightSources.length;L++)if(!I.lightSources[L]._isReady())return!1;(0,y.V)(I,G,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(I),Y,this._applyDecalMapAfterDetailMap),(0,y.N)(G,p,this,Y,F,null,x.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Y,this._eventInfo.mesh=I,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,y.K)(I,Y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let e=!1;if(Y.isDirty){const F=Y._areLightsDisposed;Y.markAsProcessed();const X=new s.e;Y.REFLECTION&&X.addFallback(0,"REFLECTION"),Y.SPECULAR&&X.addFallback(0,"SPECULAR"),Y.BUMP&&X.addFallback(0,"BUMP"),Y.PARALLAX&&X.addFallback(1,"PARALLAX"),Y.PARALLAX_RHS&&X.addFallback(1,"PARALLAX_RHS"),Y.PARALLAXOCCLUSION&&X.addFallback(0,"PARALLAXOCCLUSION"),Y.SPECULAROVERALPHA&&X.addFallback(0,"SPECULAROVERALPHA"),Y.FOG&&X.addFallback(1,"FOG"),Y.POINTSIZE&&X.addFallback(0,"POINTSIZE"),Y.LOGARITHMICDEPTH&&X.addFallback(0,"LOGARITHMICDEPTH"),(0,y.p)(Y,X,this._maxSimultaneousLights),Y.SPECULARTERM&&X.addFallback(0,"SPECULARTERM"),Y.DIFFUSEFRESNEL&&X.addFallback(1,"DIFFUSEFRESNEL"),Y.OPACITYFRESNEL&&X.addFallback(2,"OPACITYFRESNEL"),Y.REFLECTIONFRESNEL&&X.addFallback(3,"REFLECTIONFRESNEL"),Y.EMISSIVEFRESNEL&&X.addFallback(4,"EMISSIVEFRESNEL"),Y.FRESNEL&&X.addFallback(4,"FRESNEL"),Y.MULTIVIEW&&X.addFallback(0,"MULTIVIEW");const Q=[B.g.PositionKind];Y.NORMAL&&Q.push(B.g.NormalKind),Y.TANGENT&&Q.push(B.g.TangentKind);for(let I=1;I<=6;++I)Y["UV"+I]&&Q.push(`uv${1===I?"":I}`);Y.VERTEXCOLOR&&Q.push(B.g.ColorKind),(0,y.w)(Q,I,Y,X),(0,y.A)(Q,Y),(0,y.D)(Q,I,Y),(0,y.t)(Q,I,Y);let g="default";const v=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],z=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],H=["Material","Scene","Mesh"],U={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=X,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Y,this._eventInfo.uniforms=v,this._eventInfo.attributes=Q,this._eventInfo.samplers=z,this._eventInfo.uniformBuffersNames=H,this._eventInfo.customCode=void 0,this._eventInfo.mesh=I,this._eventInfo.indexParameters=U,this._callbackPluginEventGeneric(128,this._eventInfo),Z.d.AddUniformsAndSamplers(v,z),l.b.AddUniforms(v),l.b.AddSamplers(z),W.d&&(W.d.PrepareUniforms(v,Y),W.d.PrepareSamplers(z,Y)),(0,y.cb)({uniformsNames:v,uniformBuffersNames:H,samplers:z,defines:Y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,q.d)(v);const T={};this.customShaderNameResolve&&(g=this.customShaderNameResolve(g,v,H,z,Y,Q,T));const f=Y.toString(),R=x.effect;let n=G.getEngine().createEffect(g,{attributes:Q,uniformsNames:v,uniformBuffersNames:H,samplers:z,defines:f,fallbacks:X,onCompiled:this.onCompiled,onError:this.onError,indexParameters:U,processFinalCode:T.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([L.e(41),L.e(64)]).then(L.bind(L,15455)),Promise.all([L.e(39),L.e(65)]).then(L.bind(L,15577))]):await Promise.all([Promise.all([L.e(34),L.e(67)]).then(L.bind(L,15656)),Promise.all([L.e(33),L.e(68)]).then(L.bind(L,15812))]),this._shadersLoaded=!0}},p);if(this._eventInfo.customCode=void 0,n)if(this._onEffectCreatedObservable&&(t.effect=n,t.subMesh=x,this._onEffectCreatedObservable.notifyObservers(t)),this.allowShaderHotSwapping&&R&&!n.isReady()){if(n=R,Y.markAsUnprocessed(),e=this.isFrozen,F)return Y._areLightsDisposed=!0,!1}else G.resetCachedMaterial(),x.setEffect(n,Y,this._materialContext)}return!(!x.effect||!x.effect.isReady())&&(Y._renderId=G.getRenderId(),X._wasPreviouslyReady=!e,X._wasPreviouslyUsingInstances=F,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const I=this._uniformBuffer;I.addUniform("diffuseLeftColor",4),I.addUniform("diffuseRightColor",4),I.addUniform("opacityParts",4),I.addUniform("reflectionLeftColor",4),I.addUniform("reflectionRightColor",4),I.addUniform("refractionLeftColor",4),I.addUniform("refractionRightColor",4),I.addUniform("emissiveLeftColor",4),I.addUniform("emissiveRightColor",4),I.addUniform("vDiffuseInfos",2),I.addUniform("vAmbientInfos",2),I.addUniform("vOpacityInfos",2),I.addUniform("vReflectionInfos",2),I.addUniform("vReflectionPosition",3),I.addUniform("vReflectionSize",3),I.addUniform("vEmissiveInfos",2),I.addUniform("vLightmapInfos",2),I.addUniform("vSpecularInfos",2),I.addUniform("vBumpInfos",3),I.addUniform("diffuseMatrix",16),I.addUniform("ambientMatrix",16),I.addUniform("opacityMatrix",16),I.addUniform("reflectionMatrix",16),I.addUniform("emissiveMatrix",16),I.addUniform("lightmapMatrix",16),I.addUniform("specularMatrix",16),I.addUniform("bumpMatrix",16),I.addUniform("vTangentSpaceParams",2),I.addUniform("pointSize",1),I.addUniform("alphaCutOff",1),I.addUniform("refractionMatrix",16),I.addUniform("vRefractionInfos",4),I.addUniform("vRefractionPosition",3),I.addUniform("vRefractionSize",3),I.addUniform("vSpecularColor",4),I.addUniform("vEmissiveColor",3),I.addUniform("vDiffuseColor",4),I.addUniform("vAmbientColor",3),I.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(I,x,L){const F=this.tI(),X=L.materialDefines;if(!X)return;const G=L.effect;if(!G)return;this._activeEffect=G,x.getMeshUniformBuffer().bindToEffect(G,"Mesh"),x.transferToEffect(I),this._uniformBuffer.bindToEffect(G,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,F,x,I,this.isFrozen),Z.d.Bind(F.getEngine().currentRenderPassId,this._activeEffect,x,I,this);const B=F.activeCamera;B?this._uniformBuffer.updateFloat4("cameraInfo",B.IB,B.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=L,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),X.OBJECTSPACE_NORMALMAP&&(I.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const l=this._mustRebind(F,G,L,x.visibility);(0,y.c)(x,G);const W=this._uniformBuffer;if(l){if(this.bindViewProjection(G),!W.useUbo||!this.isFrozen||!W.isSync||L._drawWrapper._forceRebindOnNextCall){if(R.FresnelEnabled&&X.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(W.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),W.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&W.updateColor4("opacityParts",new p.Tx(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(W.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),W.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(W.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),W.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(W.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),W.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),F.texturesEnabled){if(this._diffuseTexture&&R.DiffuseTextureEnabled&&(W.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,y.m)(this._diffuseTexture,W,"diffuse")),this._ambientTexture&&R.AmbientTextureEnabled&&(W.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,y.m)(this._ambientTexture,W,"ambient")),this._opacityTexture&&R.OpacityTextureEnabled&&(W.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,y.m)(this._opacityTexture,W,"opacity")),this._hasAlphaChannel()&&W.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&R.ReflectionTextureEnabled){if(W.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),W.xB("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const I=this._reflectionTexture;W.updateVector3("vReflectionPosition",I.boundingBoxPosition),W.updateVector3("vReflectionSize",I.boundingBoxSize)}}else W.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&R.EmissiveTextureEnabled&&(W.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,y.m)(this._emissiveTexture,W,"emissive")),this._lightmapTexture&&R.LightmapTextureEnabled&&(W.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,y.m)(this._lightmapTexture,W,"lightmap")),this._specularTexture&&R.SpecularTextureEnabled&&(W.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,y.m)(this._specularTexture,W,"specular")),this._bumpTexture&&F.getEngine().getCaps().standardDerivatives&&R.BumpTextureEnabled&&(W.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,y.m)(this._bumpTexture,W,"bump"),F._mirroredCameraPosition?W.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):W.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&R.RefractionTextureEnabled){let I=1;if(this._refractionTexture.isCube||(W.xB("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(I=this._refractionTexture.depth)),W.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,I,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const I=this._refractionTexture;W.updateVector3("vRefractionPosition",I.boundingBoxPosition),W.updateVector3("vRefractionSize",I.boundingBoxSize)}}}this.pointsCloud&&W.updateFloat("pointSize",this.pointSize),W.updateColor4("vSpecularColor",this.specularColor,this.specularPower),W.updateColor3("vEmissiveColor",R.EmissiveTextureEnabled?this.emissiveColor:p.Tx.BlackReadOnly),W.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),F.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),W.updateColor3("vAmbientColor",this._globalAmbientColor)}F.texturesEnabled&&(this._diffuseTexture&&R.DiffuseTextureEnabled&&G.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&R.AmbientTextureEnabled&&G.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&R.OpacityTextureEnabled&&G.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&R.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?G.setTexture("reflectionCubeSampler",this._reflectionTexture):G.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&R.EmissiveTextureEnabled&&G.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&R.LightmapTextureEnabled&&G.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&R.SpecularTextureEnabled&&G.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&F.getEngine().getCaps().standardDerivatives&&R.BumpTextureEnabled&&G.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&R.RefractionTextureEnabled&&(this._refractionTexture.isCube?G.setTexture("refractionCubeSampler",this._refractionTexture):G.setTexture("refraction2DSampler",this._refractionTexture))),this.tI().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(x)&&this.tI().depthPeelingRenderer.bind(G),this._eventInfo.subMesh=L,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,q.e)(G,this,F),this.bindEyePosition(G)}else F.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(l||!this.isFrozen){var Q;if(F.lightsEnabled&&!this._disableLighting&&(0,y.f)(F,x,G,X,this._maxSimultaneousLights),(F.fogEnabled&&x.applyFog&&F.fogMode!==Y.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||x.receiveShadows||X.PREPASS)&&this.bindView(G),(0,y.e)(F,x,G),X.NUM_MORPH_INFLUENCERS&&(0,y.i)(x,G),X.BAKED_VERTEX_ANIMATION_TEXTURE)null===(Q=x.bakedVertexAnimationManager)||void 0===Q||Q.bind(G,X.INSTANCES);this.useLogarithmicDepth&&(0,y.g)(X,G,F),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(x,this._activeEffect,L),W.update()}getAnimatables(){const I=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&I.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&I.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&I.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&I.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&I.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&I.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&I.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&I.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&I.push(this._refractionTexture),I}getActiveTextures(){const I=super.getActiveTextures();return this._diffuseTexture&&I.push(this._diffuseTexture),this._ambientTexture&&I.push(this._ambientTexture),this._opacityTexture&&I.push(this._opacityTexture),this._reflectionTexture&&I.push(this._reflectionTexture),this._emissiveTexture&&I.push(this._emissiveTexture),this._specularTexture&&I.push(this._specularTexture),this._bumpTexture&&I.push(this._bumpTexture),this._lightmapTexture&&I.push(this._lightmapTexture),this._refractionTexture&&I.push(this._refractionTexture),I}hasTexture(I){return!!super.hasTexture(I)||(this._diffuseTexture===I||(this._ambientTexture===I||(this._opacityTexture===I||(this._reflectionTexture===I||(this._emissiveTexture===I||(this._specularTexture===I||(this._bumpTexture===I||(this._lightmapTexture===I||this._refractionTexture===I))))))))}dispose(I,x){var L,F,X,G,Y,p,B,l,W;x&&(null===(L=this._diffuseTexture)||void 0===L||L.dispose(),null===(F=this._ambientTexture)||void 0===F||F.dispose(),null===(X=this._opacityTexture)||void 0===X||X.dispose(),null===(G=this._reflectionTexture)||void 0===G||G.dispose(),null===(Y=this._emissiveTexture)||void 0===Y||Y.dispose(),null===(p=this._specularTexture)||void 0===p||p.dispose(),null===(B=this._bumpTexture)||void 0===B||B.dispose(),null===(l=this._lightmapTexture)||void 0===l||l.dispose(),null===(W=this._refractionTexture)||void 0===W||W.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(I,x)}clone(I){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const F=T.c.Clone((()=>new R(I,this.tI())),this,{cloneTexturesOnlyOnce:x});return F.name=I,F.id=I,this.op.copyTo(F.op),this._clonePlugins(F,L),F}static Parse(I,x,L){const F=T.c.Parse((()=>new R(I.name,x)),I,x,L);return I.op&&F.op.parse(I.op,x,L),Q.e._ParsePlugins(I,F,x,L),F}static get DiffuseTextureEnabled(){return H.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){H.b.DiffuseTextureEnabled=I}static get DetailTextureEnabled(){return H.b.DetailTextureEnabled}static set DetailTextureEnabled(I){H.b.DetailTextureEnabled=I}static get AmbientTextureEnabled(){return H.b.AmbientTextureEnabled}static set AmbientTextureEnabled(I){H.b.AmbientTextureEnabled=I}static get OpacityTextureEnabled(){return H.b.OpacityTextureEnabled}static set OpacityTextureEnabled(I){H.b.OpacityTextureEnabled=I}static get ReflectionTextureEnabled(){return H.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){H.b.ReflectionTextureEnabled=I}static get EmissiveTextureEnabled(){return H.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){H.b.EmissiveTextureEnabled=I}static get SpecularTextureEnabled(){return H.b.SpecularTextureEnabled}static set SpecularTextureEnabled(I){H.b.SpecularTextureEnabled=I}static get BumpTextureEnabled(){return H.b.BumpTextureEnabled}static set BumpTextureEnabled(I){H.b.BumpTextureEnabled=I}static get LightmapTextureEnabled(){return H.b.LightmapTextureEnabled}static set LightmapTextureEnabled(I){H.b.LightmapTextureEnabled=I}static get RefractionTextureEnabled(){return H.b.RefractionTextureEnabled}static set RefractionTextureEnabled(I){H.b.RefractionTextureEnabled=I}static get ColorGradingTextureEnabled(){return H.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){H.b.ColorGradingTextureEnabled=I}static get FresnelEnabled(){return H.b.FresnelEnabled}static set FresnelEnabled(I){H.b.FresnelEnabled=I}}R.ForceGLSL=!1,(0,F.d)([(0,X.C)("diffuseTexture")],R.prototype,"_diffuseTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],R.prototype,"diffuseTexture",void 0),(0,F.d)([(0,X.C)("ambientTexture")],R.prototype,"_ambientTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"ambientTexture",void 0),(0,F.d)([(0,X.C)("opacityTexture")],R.prototype,"_opacityTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],R.prototype,"opacityTexture",void 0),(0,F.d)([(0,X.C)("reflectionTexture")],R.prototype,"_reflectionTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"reflectionTexture",void 0),(0,F.d)([(0,X.C)("emissiveTexture")],R.prototype,"_emissiveTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"emissiveTexture",void 0),(0,F.d)([(0,X.C)("specularTexture")],R.prototype,"_specularTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"specularTexture",void 0),(0,F.d)([(0,X.C)("bumpTexture")],R.prototype,"_bumpTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"bumpTexture",void 0),(0,F.d)([(0,X.C)("lightmapTexture")],R.prototype,"_lightmapTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"lightmapTexture",void 0),(0,F.d)([(0,X.C)("refractionTexture")],R.prototype,"_refractionTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"refractionTexture",void 0),(0,F.d)([(0,X.j)("ambient")],R.prototype,"ambientColor",void 0),(0,F.d)([(0,X.j)("diffuse")],R.prototype,"diffuseColor",void 0),(0,F.d)([(0,X.j)("specular")],R.prototype,"specularColor",void 0),(0,F.d)([(0,X.j)("emissive")],R.prototype,"emissiveColor",void 0),(0,F.d)([(0,X.K)()],R.prototype,"specularPower",void 0),(0,F.d)([(0,X.K)("useAlphaFromDiffuseTexture")],R.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],R.prototype,"useAlphaFromDiffuseTexture",void 0),(0,F.d)([(0,X.K)("useEmissiveAsIllumination")],R.prototype,"_useEmissiveAsIllumination",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useEmissiveAsIllumination",void 0),(0,F.d)([(0,X.K)("linkEmissiveWithDiffuse")],R.prototype,"_linkEmissiveWithDiffuse",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"linkEmissiveWithDiffuse",void 0),(0,F.d)([(0,X.K)("useSpecularOverAlpha")],R.prototype,"_useSpecularOverAlpha",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useSpecularOverAlpha",void 0),(0,F.d)([(0,X.K)("useReflectionOverAlpha")],R.prototype,"_useReflectionOverAlpha",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useReflectionOverAlpha",void 0),(0,F.d)([(0,X.K)("Zx")],R.prototype,"_disableLighting",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsLightsDirty")],R.prototype,"Zx",void 0),(0,F.d)([(0,X.K)("useObjectSpaceNormalMap")],R.prototype,"_useObjectSpaceNormalMap",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useObjectSpaceNormalMap",void 0),(0,F.d)([(0,X.K)("useParallax")],R.prototype,"_useParallax",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useParallax",void 0),(0,F.d)([(0,X.K)("useParallaxOcclusion")],R.prototype,"_useParallaxOcclusion",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useParallaxOcclusion",void 0),(0,F.d)([(0,X.K)()],R.prototype,"parallaxScaleBias",void 0),(0,F.d)([(0,X.K)("roughness")],R.prototype,"_roughness",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"roughness",void 0),(0,F.d)([(0,X.K)()],R.prototype,"indexOfRefraction",void 0),(0,F.d)([(0,X.K)()],R.prototype,"invertRefractionY",void 0),(0,F.d)([(0,X.K)()],R.prototype,"alphaCutOff",void 0),(0,F.d)([(0,X.K)("useLightmapAsShadowmap")],R.prototype,"_useLightmapAsShadowmap",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useLightmapAsShadowmap",void 0),(0,F.d)([(0,X.n)("diffuseFresnelParameters")],R.prototype,"_diffuseFresnelParameters",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelDirty")],R.prototype,"diffuseFresnelParameters",void 0),(0,F.d)([(0,X.n)("opacityFresnelParameters")],R.prototype,"_opacityFresnelParameters",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],R.prototype,"opacityFresnelParameters",void 0),(0,F.d)([(0,X.n)("reflectionFresnelParameters")],R.prototype,"_reflectionFresnelParameters",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelDirty")],R.prototype,"reflectionFresnelParameters",void 0),(0,F.d)([(0,X.n)("refractionFresnelParameters")],R.prototype,"_refractionFresnelParameters",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelDirty")],R.prototype,"refractionFresnelParameters",void 0),(0,F.d)([(0,X.n)("emissiveFresnelParameters")],R.prototype,"_emissiveFresnelParameters",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelDirty")],R.prototype,"emissiveFresnelParameters",void 0),(0,F.d)([(0,X.K)("useReflectionFresnelFromSpecular")],R.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsFresnelDirty")],R.prototype,"useReflectionFresnelFromSpecular",void 0),(0,F.d)([(0,X.K)("useGlossinessFromSpecularMapAlpha")],R.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,F.d)([(0,X.K)("maxSimultaneousLights")],R.prototype,"_maxSimultaneousLights",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsLightsDirty")],R.prototype,"maxSimultaneousLights",void 0),(0,F.d)([(0,X.K)("invertNormalMapX")],R.prototype,"_invertNormalMapX",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"invertNormalMapX",void 0),(0,F.d)([(0,X.K)("invertNormalMapY")],R.prototype,"_invertNormalMapY",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"invertNormalMapY",void 0),(0,F.d)([(0,X.K)("twoSidedLighting")],R.prototype,"_twoSidedLighting",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"twoSidedLighting",void 0),(0,F.d)([(0,X.K)("applyDecalMapAfterDetailMap")],R.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,F.d)([(0,X.d)("_markAllSubMeshesAsMiscDirty")],R.prototype,"applyDecalMapAfterDetailMap",void 0),(0,z.d)("BABYLON.StandardMaterial",R),Y.b.DefaultMaterialFactory=I=>new R("default material",I)}}]);