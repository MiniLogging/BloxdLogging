"use strict";(self.wj3aziuz228=self.wj3aziuz228||[]).push([[25],{12861:(u,R,I)=>{I.d(R,{e:()=>S});var B=I(12466),U=I(12796),K=I(12472),C=I(12853),D=I(12851),s=I(12865),t=I(12831);class G extends D.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class S extends s.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(u){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(u,"DetailMap",140,new G,R),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=U.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=u._dirtyCallbacks[1]}isReadyForSubMesh(u,R,I){return!this._isEnabled||!(u._areTexturesDirty&&R.texturesEnabled&&I.getCaps().standardDerivatives&&this._texture&&C.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(u,R){if(this._isEnabled){u.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const I=R.getEngine();u._areTexturesDirty&&(I.getCaps().standardDerivatives&&this._texture&&C.b.DetailTextureEnabled&&this._isEnabled?((0,t.P)(this._texture,u,"DETAIL"),u.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):u.DETAIL=!1)}else u.DETAIL=!1}bindForSubMesh(u,R){if(!this._isEnabled)return;const I=this._material.isFrozen;u.useUbo&&I&&u.isSync||this._texture&&C.b.DetailTextureEnabled&&(u.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,t.o)(this._texture,u,"detail")),R.texturesEnabled&&this._texture&&C.b.DetailTextureEnabled&&u.setTexture("detailSampler",this._texture)}hasTexture(u){return this._texture===u}getActiveTextures(u){this._texture&&u.push(this._texture)}getAnimatables(u){this._texture&&this._texture.animations&&this._texture.animations.length>0&&u.push(this._texture)}dispose(u){var R;u&&(null===(R=this._texture)||void 0===R||R.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(u){u.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,B.c)([(0,K.J)("detailTexture"),(0,K.e)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"texture",void 0),(0,B.c)([(0,K.S)()],S.prototype,"diffuseBlendLevel",void 0),(0,B.c)([(0,K.S)()],S.prototype,"roughnessBlendLevel",void 0),(0,B.c)([(0,K.S)()],S.prototype,"bumpLevel",void 0),(0,B.c)([(0,K.S)(),(0,K.e)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"normalBlendMethod",void 0),(0,B.c)([(0,K.S)(),(0,K.e)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"isEnabled",void 0)},12851:(u,R,I)=>{I.d(R,{d:()=>B});class B{constructor(u){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=u,u)for(const R in u)Object.prototype.hasOwnProperty.call(u,R)&&this._setDefaultValue(R)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let u=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||u,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const u of Object.keys(this))"_"!==u[0]&&this._keys.push(u);if(this._externalProperties)for(const u in this._externalProperties)-1===this._keys.indexOf(u)&&this._keys.push(u)}isEqual(u){if(this._keys.length!==u._keys.length)return!1;for(let R=0;R<this._keys.length;R++){const I=this._keys[R];if(this[I]!==u[I])return!1}return!0}cloneTo(u){this._keys.length!==u._keys.length&&(u._keys=this._keys.slice(0));for(let R=0;R<this._keys.length;R++){const I=this._keys[R];u[I]=this[I]}}reset(){for(const u of this._keys)this._setDefaultValue(u)}_setDefaultValue(u){var R,I,B,U;const K=(null===(R=this._externalProperties)||void 0===R||null===(I=R[u])||void 0===I?void 0:I.type)??typeof this[u],C=null===(B=this._externalProperties)||void 0===B||null===(U=B[u])||void 0===U?void 0:U.default;switch(K){case"number":this[u]=C??0;break;case"string":this[u]=C??"";break;default:this[u]=C??!1}}toString(){let u="";for(let R=0;R<this._keys.length;R++){const I=this._keys[R],B=this[I];switch(typeof B){case"number":case"string":u+="#define "+I+" "+B+"\n";break;default:B&&(u+="#define "+I+"\n")}}return u}}},12853:(u,R,I)=>{I.d(R,{b:()=>U});var B=I(12377);class U{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(u){this._DiffuseTextureEnabled!==u&&(this._DiffuseTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(u){this._BaseWeightTextureEnabled!==u&&(this._BaseWeightTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(u){this._BaseDiffuseRoughnessTextureEnabled!==u&&(this._BaseDiffuseRoughnessTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(u){this._DetailTextureEnabled!==u&&(this._DetailTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(u){this._DecalMapEnabled!==u&&(this._DecalMapEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(u){this._AmbientTextureEnabled!==u&&(this._AmbientTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(u){this._OpacityTextureEnabled!==u&&(this._OpacityTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(u){this._ReflectionTextureEnabled!==u&&(this._ReflectionTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(u){this._EmissiveTextureEnabled!==u&&(this._EmissiveTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(u){this._SpecularTextureEnabled!==u&&(this._SpecularTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(u){this._BumpTextureEnabled!==u&&(this._BumpTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(u){this._LightmapTextureEnabled!==u&&(this._LightmapTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(u){this._RefractionTextureEnabled!==u&&(this._RefractionTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(u){this._ColorGradingTextureEnabled!==u&&(this._ColorGradingTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(u){this._FresnelEnabled!==u&&(this._FresnelEnabled=u,B.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(u){this._ClearCoatTextureEnabled!==u&&(this._ClearCoatTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(u){this._ClearCoatBumpTextureEnabled!==u&&(this._ClearCoatBumpTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(u){this._ClearCoatTintTextureEnabled!==u&&(this._ClearCoatTintTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(u){this._SheenTextureEnabled!==u&&(this._SheenTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(u){this._AnisotropicTextureEnabled!==u&&(this._AnisotropicTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(u){this._ThicknessTextureEnabled!==u&&(this._ThicknessTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(u){this._RefractionIntensityTextureEnabled!==u&&(this._RefractionIntensityTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(u){this._TranslucencyIntensityTextureEnabled!==u&&(this._TranslucencyIntensityTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(u){this._TranslucencyColorTextureEnabled!==u&&(this._TranslucencyColorTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(u){this._IridescenceTextureEnabled!==u&&(this._IridescenceTextureEnabled=u,B.d.MarkAllMaterialsAsDirty(1))}}U._DiffuseTextureEnabled=!0,U._BaseWeightTextureEnabled=!0,U._BaseDiffuseRoughnessTextureEnabled=!0,U._DetailTextureEnabled=!0,U._DecalMapEnabled=!0,U._AmbientTextureEnabled=!0,U._OpacityTextureEnabled=!0,U._ReflectionTextureEnabled=!0,U._EmissiveTextureEnabled=!0,U._SpecularTextureEnabled=!0,U._BumpTextureEnabled=!0,U._LightmapTextureEnabled=!0,U._RefractionTextureEnabled=!0,U._ColorGradingTextureEnabled=!0,U._FresnelEnabled=!0,U._ClearCoatTextureEnabled=!0,U._ClearCoatBumpTextureEnabled=!0,U._ClearCoatTintTextureEnabled=!0,U._SheenTextureEnabled=!0,U._AnisotropicTextureEnabled=!0,U._ThicknessTextureEnabled=!0,U._RefractionIntensityTextureEnabled=!0,U._TranslucencyIntensityTextureEnabled=!0,U._TranslucencyColorTextureEnabled=!0,U._IridescenceTextureEnabled=!0},12872:(u,R,I)=>{I.d(R,{b:()=>K});var B,U=I(12481);!function(u){u[u.Zero=0]="Zero",u[u.One=1]="One",u[u.MaxViewZ=2]="MaxViewZ"}(B||(B={}));class K{static CreateConfiguration(u){return K._Configurations[u]={defines:{},previousWorldMatrices:{},previousViewProjection:U.Matrix.Zero(),currentViewProjection:U.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},K._Configurations[u]}static DeleteConfiguration(u){delete K._Configurations[u]}static GetConfiguration(u){return K._Configurations[u]}static AddUniformsAndSamplers(u,R){u.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(u,R){for(const I of R)if(I.DD)for(const R of I.DD)R._removeDrawWrapper(u)}static PrepareDefines(u,R,I){if(!I._arePrePassDirty)return;const B=K._Configurations[u];if(!B)return;I.PREPASS=!0,I.PREPASS_COLOR=!1,I.PREPASS_COLOR_INDEX=-1;let U=0;for(let C=0;C<K.GeometryTextureDescriptions.length;C++){const u=K.GeometryTextureDescriptions[C],R=u.define,D=u.defineIndex,s=B.defines[D];void 0!==s?(I[R]=!0,I[D]=s,U++):(I[R]=!1,delete I[D])}I.SCENE_MRT_COUNT=U,I.BONES_VELOCITY_ENABLED=R.useBones&&R.computeBonesUsingShaders&&R.skeleton&&!R.skeleton.isUsingTextureForMatrices&&-1===B.excludedSkinnedMesh.indexOf(R)}static Bind(u,R,I,B,U){const C=K._Configurations[u];if(!C)return;const D=I.eu(),s=D.getEngine();if(C.reverseCulling&&s.setStateCullFaceType(D._mirroredCameraPosition?U.cullBackFaces:!U.cullBackFaces),(void 0!==C.defines.PREPASS_VELOCITY_INDEX||void 0!==C.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(C.previousWorldMatrices[I.uniqueId]||(C.previousWorldMatrices[I.uniqueId]=B.clone()),C.previousViewProjection||(C.previousViewProjection=D.getTransformMatrix().clone(),C.currentViewProjection=D.getTransformMatrix().clone()),C.currentViewProjection.updateFlag!==D.getTransformMatrix().updateFlag?(C.lastUpdateFrameId=s.frameId,C.previousViewProjection.B(C.currentViewProjection),C.currentViewProjection.B(D.getTransformMatrix())):C.lastUpdateFrameId!==s.frameId&&(C.lastUpdateFrameId=s.frameId,C.previousViewProjection.B(C.currentViewProjection)),R.setMatrix("previousWorld",C.previousWorldMatrices[I.uniqueId]),R.setMatrix("previousViewProjection",C.previousViewProjection),C.previousWorldMatrices[I.uniqueId]=B.clone(),I.useBones&&I.computeBonesUsingShaders&&I.skeleton)){const u=I.skeleton;if(!u.isUsingTextureForMatrices||-1===R.getUniformIndex("boneTextureWidth")){const B=u.getTransformMatrices(I);B&&(C.previousBones[I.uniqueId]||(C.previousBones[I.uniqueId]=B.slice()),R.setMatrices("mPreviousBones",C.previousBones[I.uniqueId]),C.previousBones[I.uniqueId].set(B))}}}}K.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],K._Configurations={}},12865:(u,R,I)=>{I.d(R,{c:()=>z});var B=I(12466),U=I(12472),K=I(12796),C=I(12346),D=I(12362),s=I(12389);const t=new RegExp("^([gimus]+)!");class G{constructor(u){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=u,this._scene=u.eu(),this._engine=this._scene.getEngine()}_addPlugin(u){for(let B=0;B<this._plugins.length;++B)if(this._plugins[B].name===u.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!u.isCompatible(this._material.shaderLanguage))throw`The plugin "${u.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const R=u.getClassName();G._MaterialPluginClassToMainDefine[R]||(G._MaterialPluginClassToMainDefine[R]="MATERIALPLUGIN_"+ ++G._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(u,R)=>this._handlePluginEvent(u,R),this._plugins.push(u),this._plugins.sort(((u,R)=>u.priority-R.priority)),this._codeInjectionPoints={};const I={};I[G._MaterialPluginClassToMainDefine[R]]={type:"boolean",default:!0};for(const B of this._plugins)B.collectDefines(I),this._collectPointNames("vertex",B.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",B.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=I,!0}_activatePlugin(u){-1===this._activePlugins.indexOf(u)&&(this._activePlugins.push(u),this._activePlugins.sort(((u,R)=>u.priority-R.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),u.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(u),this._activePluginsForExtraEvents.sort(((u,R)=>u.priority-R.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(u){for(let R=0;R<this._plugins.length;++R)if(this._plugins[R].name===u)return this._plugins[R];return null}_handlePluginEventIsReadyForSubMesh(u){let R=!0;for(const I of this._activePlugins)R=R&&I.isReadyForSubMesh(u.defines,this._scene,this._engine,u.subMesh);u.isReadyForSubMesh=R}_handlePluginEventPrepareDefinesBeforeAttributes(u){for(const R of this._activePlugins)R.prepareDefinesBeforeAttributes(u.defines,this._scene,u.mesh)}_handlePluginEventPrepareDefines(u){for(const R of this._activePlugins)R.prepareDefines(u.defines,this._scene,u.mesh)}_handlePluginEventHardBindForSubMesh(u){for(const R of this._activePluginsForExtraEvents)R.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,u.subMesh)}_handlePluginEventBindForSubMesh(u){for(const R of this._activePlugins)R.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,u.subMesh)}_handlePluginEventHasRenderTargetTextures(u){let R=!1;for(const I of this._activePluginsForExtraEvents)if(R=I.hasRenderTargetTextures(),R)break;u.hasRenderTargetTextures=R}_handlePluginEventFillRenderTargetTextures(u){for(const R of this._activePluginsForExtraEvents)R.fillRenderTargetTextures(u.renderTargets)}_handlePluginEvent(u,R){switch(u){case 512:{const u=R;for(const R of this._activePlugins)R.getActiveTextures(u.activeTextures);break}case 256:{const u=R;for(const R of this._activePlugins)R.getAnimatables(u.animatables);break}case 1024:{const u=R;let I=!1;for(const R of this._activePlugins)if(I=R.hasTexture(u.texture),I)break;u.hasTexture=I;break}case 2:{const u=R;for(const R of this._plugins)R.dispose(u.forceDisposeTextures);break}case 4:R.defineNames=this._defineNamesFromPlugins;break;case 128:{const u=R;for(const R of this._activePlugins)u.fallbackRank=R.addFallbacks(u.defines,u.fallbacks,u.fallbackRank),R.getAttributes(u.attributes,this._scene,u.mesh);this._uniformList.length>0&&u.uniforms.push(...this._uniformList),this._samplerList.length>0&&u.samplers.push(...this._samplerList),this._uboList.length>0&&u.uniformBuffersNames.push(...this._uboList),u.customCode=this._injectCustomCode(u,u.customCode);break}case 8:{const u=R;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const I=1===this._material.shaderLanguage;for(const R of this._plugins){const B=R.getUniforms(this._material.shaderLanguage);if(B){if(B.ubo)for(const R of B.ubo){if(R.size&&R.type){const B=R.arraySize??0;if(u.ubo.addUniform(R.name,R.size,B),I){let u;switch(R.type){case"mat4":u="mat4x4f";break;case"float":u="f32";break;default:u=`${R.type}f`}this._uboDeclaration+=B>0?`uniform ${R.name}: array<${u}, ${B}>;\n`:`uniform ${R.name}: ${u};\n`}else this._uboDeclaration+=`${R.type} ${R.name}${B>0?`[${B}]`:""};\n`}this._uniformList.push(R.name)}B.vertex&&(this._vertexDeclaration+=B.vertex+"\n"),B.fragment&&(this._fragmentDeclaration+=B.fragment+"\n")}R.getSamplers(this._samplerList),R.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(u,R){if(R)for(const I in R)this._codeInjectionPoints[u]||(this._codeInjectionPoints[u]={}),this._codeInjectionPoints[u][I]=!0}_injectCustomCode(u,R){return(I,B)=>{var U;R&&(B=R(I,B)),this._uboDeclaration&&(B=B.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(B=B.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(B=B.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const K=null===(U=this._codeInjectionPoints)||void 0===U?void 0:U[I];if(!K)return B;let C=null;for(let R in K){let U="";for(const B of this._activePlugins){var G;let K=null===(G=B.getCustomCode(I,this._material.shaderLanguage))||void 0===G?void 0:G[R];if(K){if(B.resolveIncludes){if(null===C){const R=0;C={defines:[],indexParameters:u.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:s.d.GetShadersRepository(R),includesShadersStore:s.d.GetIncludesShadersStore(R),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,FC:this._engine.FC,processCodeAfterIncludes:void 0}}C.isFragment="fragment"===I,(0,D.j)(K,C,(u=>K=u))}U+=K+"\n"}}if(U.length>0)if("!"===R.charAt(0)){R=R.substring(1);let u="g";if("!"===R.charAt(0))u="",R=R.substring(1);else{const I=t.exec(R);I&&I.length>=2&&(u=I[1],R=R.substring(u.length+1))}u.indexOf("g")<0&&(u+="g");const I=B,K=new RegExp(R,u);let C=K.exec(I);for(;null!==C;){let u=U;for(let R=0;R<C.length;++R)u=u.replace("$"+R,C[R]);B=B.replace(C[0],u),C=K.exec(I)}}else{const u="#define "+R;B=B.replace(u,"\n"+U+"\n"+u)}}return B}}}G._MaterialPluginClassToMainDefine={},G._MaterialPluginCounter=0,C.e.OnEnginesDisposedObservable.add((()=>{P()}));const S=[];let b=!1,r=null;function P(){S.length=0,b=!1,K.c.OnEventObservable.remove(r),r=null}var X=I(12507),E=I(12433);class z{isCompatible(u){return 0===u}_enable(u){u&&this._pluginManager._activatePlugin(this)}constructor(u,R,I,B){let U=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],K=arguments.length>5&&void 0!==arguments[5]&&arguments[5],C=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=u,this.name=R,this.priority=I,this.resolveIncludes=C,u.pluginManager||(u.pluginManager=new G(u),u.uD.add((()=>{u.pluginManager=void 0}))),this._pluginDefineNames=B,this._pluginManager=u.pluginManager,U&&this._pluginManager._addPlugin(this),K&&this._enable(!0),this.markAllDefinesAsDirty=u._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(u,R,I,B){return!0}hardBindForSubMesh(u,R,I,B){}bindForSubMesh(u,R,I,B){}dispose(u){}getCustomCode(u){return null}collectDefines(u){if(this._pluginDefineNames)for(const R of Object.keys(this._pluginDefineNames)){if("_"===R[0])continue;const I=typeof this._pluginDefineNames[R];u[R]={type:"number"===I?"number":"string"===I?"string":"boolean"===I?"boolean":"object",default:this._pluginDefineNames[R]}}}prepareDefinesBeforeAttributes(u,R,I){}prepareDefines(u,R,I){}hasTexture(u){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(u){}getActiveTextures(u){}getAnimatables(u){}addFallbacks(u,R,I){return I}getSamplers(u){}getAttributes(u,R,I){}getUniformBuffersNames(u){}getUniforms(){return{}}copyTo(u){X.e.Clone((()=>u),this)}serialize(){return X.e.Serialize(this)}parse(u,R,I){X.e.Parse((()=>this),u,R,I)}}(0,B.c)([(0,U.S)()],z.prototype,"name",void 0),(0,B.c)([(0,U.S)()],z.prototype,"priority",void 0),(0,B.c)([(0,U.S)()],z.prototype,"resolveIncludes",void 0),(0,B.c)([(0,U.S)()],z.prototype,"registerForExtraEvents",void 0),(0,E.e)("BABYLON.MaterialPluginBase",z)},12849:(u,R,I)=>{I.d(R,{d:()=>B});class B{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(u){u.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(u){}bindForSubMesh(u,R,I,B,U){if(R.prePassRenderer&&R.prePassRenderer.enabled&&R.prePassRenderer.currentRTisSceneRT&&(-1!==R.prePassRenderer.getIndex(2)||-1!==R.prePassRenderer.getIndex(11))){this.previousWorldMatrices[I.uniqueId]||(this.previousWorldMatrices[I.uniqueId]=B.clone()),this.previousViewProjection||(this.previousViewProjection=R.getTransformMatrix().clone(),this.currentViewProjection=R.getTransformMatrix().clone());const U=R.getEngine();this.currentViewProjection.updateFlag!==R.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=U.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(R.getTransformMatrix())):this._lastUpdateFrameId!==U.frameId&&(this._lastUpdateFrameId=U.frameId,this.previousViewProjection.B(this.currentViewProjection)),u.setMatrix("previousWorld",this.previousWorldMatrices[I.uniqueId]),u.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[I.uniqueId]=B.clone()}}}},12846:(u,R,I)=>{I.d(R,{zR:()=>M});var B=I(12466),U=I(12472),K=I(12570),C=I(12703),D=I(12518),s=I(12549),t=I(12849),G=I(12709),S=I(12796),b=I(12851),r=I(12787),P=I(12460),X=I(12433),E=I(12853),z=I(12782),f=I(12861),T=I(12840),Q=I(12831),V=I(12507),q=I(12872);const e={effect:null,subMesh:null};class Y extends b.d{constructor(u){super(u),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(u){const R=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const I of R)this[I]=I===u}}class M extends r.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(u){this._attachImageProcessingConfiguration(u),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(u){u!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=u||this.eu().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(u){this.imageProcessingConfiguration.colorCurvesEnabled=u}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(u){this.imageProcessingConfiguration.colorGradingEnabled=u}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(u){this._imageProcessingConfiguration.toneMappingEnabled=u}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(u){this._imageProcessingConfiguration.exposure=u}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(u){this._imageProcessingConfiguration.contrast=u}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(u){this._imageProcessingConfiguration.colorGradingTexture=u}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(u){this._imageProcessingConfiguration.colorCurves=u}get canRenderToMRT(){return!0}constructor(u,R){super(u,R,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||M.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new D.fR(0,0,0),this.diffuseColor=new D.fR(1,1,1),this.specularColor=new D.fR(1,1,1),this.emissiveColor=new D.fR(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new K.f(16),this._globalAmbientColor=new D.fR(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new f.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new t.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"zR"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===S.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.tD&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==S.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.tD||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(u,R){let B=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const U=R._drawWrapper;if(U.effect&&this.isFrozen&&U._wasPreviouslyReady&&U._wasPreviouslyUsingInstances===B)return!0;R.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),R.materialDefines=new Y(this._eventInfo.defineNames));const K=this.eu(),C=R.materialDefines;if(this._isReadyForSubMesh(R))return!0;const D=K.getEngine();C._needNormals=(0,Q.M)(K,u,C,!0,this._maxSimultaneousLights,this._disableLighting),(0,Q.S)(K,C);const S=this.needAlphaBlendingForMesh(u)&&this.eu().useOrderIndependentTransparency;if((0,Q.Z)(K,C,this.canRenderToMRT&&!S),(0,Q.W)(K,C,S),q.b.PrepareDefines(D.currentRenderPassId,u,C),C._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,C._needUVs=!1;for(let u=1;u<=6;++u)C["MAINUV"+u]=!1;if(K.texturesEnabled){if(C.DIFFUSEDIRECTUV=0,C.BUMPDIRECTUV=0,C.AMBIENTDIRECTUV=0,C.OPACITYDIRECTUV=0,C.EMISSIVEDIRECTUV=0,C.SPECULARDIRECTUV=0,C.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&M.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._diffuseTexture,C,"DIFFUSE")}else C.DIFFUSE=!1;if(this._ambientTexture&&M.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._ambientTexture,C,"AMBIENT")}else C.AMBIENT=!1;if(this._opacityTexture&&M.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._opacityTexture,C,"OPACITY"),C.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else C.OPACITY=!1;if(this._reflectionTexture&&M.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(C._needNormals=!0,C.REFLECTION=!0,C.ROUGHNESS=this._roughness>0,C.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,C.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===P.b.INVCUBIC_MODE,C.REFLECTIONMAP_3D=this._reflectionTexture.isCube,C.REFLECTIONMAP_OPPOSITEZ=C.REFLECTIONMAP_3D&&this.eu().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,C.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case P.b.EXPLICIT_MODE:C.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case P.b.PLANAR_MODE:C.setReflectionMode("REFLECTIONMAP_PLANAR");break;case P.b.PROJECTION_MODE:C.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case P.b.SKYBOX_MODE:C.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case P.b.SPHERICAL_MODE:C.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case P.b.EQUIRECTANGULAR_MODE:C.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case P.b.FIXED_EQUIRECTANGULAR_MODE:C.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case P.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:C.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case P.b.CUBIC_MODE:case P.b.INVCUBIC_MODE:default:C.setReflectionMode("REFLECTIONMAP_CUBIC")}C.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else C.REFLECTION=!1,C.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&M.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._emissiveTexture,C,"EMISSIVE")}else C.EMISSIVE=!1;if(this._lightmapTexture&&M.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._lightmapTexture,C,"LIGHTMAP"),C.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,C.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else C.LIGHTMAP=!1;if(this._specularTexture&&M.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Q.P)(this._specularTexture,C,"SPECULAR"),C.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else C.SPECULAR=!1;if(K.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&M.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Q.P)(this._bumpTexture,C,"BUMP"),C.PARALLAX=this._useParallax,C.PARALLAX_RHS=K.useRightHandedSystem,C.PARALLAXOCCLUSION=this._useParallaxOcclusion,C.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else C.BUMP=!1,C.PARALLAX=!1,C.PARALLAX_RHS=!1,C.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&M.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;C._needUVs=!0,C.REFRACTION=!0,C.REFRACTIONMAP_3D=this._refractionTexture.isCube,C.RGBDREFRACTION=this._refractionTexture.isRGBD,C.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else C.REFRACTION=!1;C.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else C.DIFFUSE=!1,C.AMBIENT=!1,C.OPACITY=!1,C.REFLECTION=!1,C.EMISSIVE=!1,C.LIGHTMAP=!1,C.BUMP=!1,C.REFRACTION=!1;C.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),C.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,C.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,C.SPECULAROVERALPHA=this._useSpecularOverAlpha,C.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,C.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,C.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(u)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=C,this._eventInfo.subMesh=R,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(C._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(C),C.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,C.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(C._areFresnelDirty&&(M.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(C.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,C.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,C.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,C.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,C.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,C.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,C._needNormals=!0,C.FRESNEL=!0):C.FRESNEL=!1),C.AREALIGHTUSED)for(let I=0;I<u.lightSources.length;I++)if(!u.lightSources[I]._isReady())return!1;(0,Q.Q)(u,K,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(u),C,this._applyDecalMapAfterDetailMap),(0,Q.I)(K,D,this,C,B,null,R.getRenderingMesh().hasThinInstances),this._eventInfo.defines=C,this._eventInfo.mesh=u,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Q.G)(u,C,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let b=!1;if(C.isDirty){const B=C._areLightsDisposed;C.markAsProcessed();const U=new z.e;C.REFLECTION&&U.addFallback(0,"REFLECTION"),C.SPECULAR&&U.addFallback(0,"SPECULAR"),C.BUMP&&U.addFallback(0,"BUMP"),C.PARALLAX&&U.addFallback(1,"PARALLAX"),C.PARALLAX_RHS&&U.addFallback(1,"PARALLAX_RHS"),C.PARALLAXOCCLUSION&&U.addFallback(0,"PARALLAXOCCLUSION"),C.SPECULAROVERALPHA&&U.addFallback(0,"SPECULAROVERALPHA"),C.FOG&&U.addFallback(1,"FOG"),C.POINTSIZE&&U.addFallback(0,"POINTSIZE"),C.LOGARITHMICDEPTH&&U.addFallback(0,"LOGARITHMICDEPTH"),(0,Q.q)(C,U,this._maxSimultaneousLights),C.SPECULARTERM&&U.addFallback(0,"SPECULARTERM"),C.DIFFUSEFRESNEL&&U.addFallback(1,"DIFFUSEFRESNEL"),C.OPACITYFRESNEL&&U.addFallback(2,"OPACITYFRESNEL"),C.REFLECTIONFRESNEL&&U.addFallback(3,"REFLECTIONFRESNEL"),C.EMISSIVEFRESNEL&&U.addFallback(4,"EMISSIVEFRESNEL"),C.FRESNEL&&U.addFallback(4,"FRESNEL"),C.MULTIVIEW&&U.addFallback(0,"MULTIVIEW");const S=[s.i.PositionKind];C.NORMAL&&S.push(s.i.NormalKind),C.TANGENT&&S.push(s.i.TangentKind);for(let u=1;u<=6;++u)C["UV"+u]&&S.push(`uv${1===u?"":u}`);C.VERTEXCOLOR&&S.push(s.i.ColorKind),(0,Q.s)(S,u,C,U),(0,Q.w)(S,C),(0,Q.y)(S,u,C),(0,Q.r)(S,u,C);let r="default";const P=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],X=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],E=["Material","Scene","Mesh"],f={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:C.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=U,this._eventInfo.fallbackRank=0,this._eventInfo.defines=C,this._eventInfo.uniforms=P,this._eventInfo.attributes=S,this._eventInfo.samplers=X,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=u,this._eventInfo.indexParameters=f,this._callbackPluginEventGeneric(128,this._eventInfo),q.b.AddUniformsAndSamplers(P,X),t.d.AddUniforms(P),t.d.AddSamplers(X),G.e&&(G.e.PrepareUniforms(P,C),G.e.PrepareSamplers(X,C)),(0,Q.ab)({uniformsNames:P,uniformBuffersNames:E,samplers:X,defines:C,maxSimultaneousLights:this._maxSimultaneousLights}),(0,T.e)(P);const V={};this.customShaderNameResolve&&(r=this.customShaderNameResolve(r,P,E,X,C,S,V));const Y=C.toString(),M=R.effect;let o=K.getEngine().createEffect(r,{attributes:S,uniformsNames:P,uniformBuffersNames:E,samplers:X,defines:Y,fallbacks:U,onCompiled:this.onCompiled,onError:this.onError,indexParameters:f,processFinalCode:V.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:C.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([I.e(41),I.e(64)]).then(I.bind(I,15020)),Promise.all([I.e(39),I.e(65)]).then(I.bind(I,15163))]):await Promise.all([Promise.all([I.e(34),I.e(67)]).then(I.bind(I,15244)),Promise.all([I.e(33),I.e(68)]).then(I.bind(I,15390))]),this._shadersLoaded=!0}},D);if(this._eventInfo.customCode=void 0,o)if(this._onEffectCreatedObservable&&(e.effect=o,e.subMesh=R,this._onEffectCreatedObservable.notifyObservers(e)),this.allowShaderHotSwapping&&M&&!o.isReady()){if(o=M,C.markAsUnprocessed(),b=this.isFrozen,B)return C._areLightsDisposed=!0,!1}else K.resetCachedMaterial(),R.setEffect(o,C,this._materialContext)}return!(!R.effect||!R.effect.isReady())&&(C._renderId=K.getRenderId(),U._wasPreviouslyReady=!b,U._wasPreviouslyUsingInstances=B,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const u=this._uniformBuffer;u.addUniform("diffuseLeftColor",4),u.addUniform("diffuseRightColor",4),u.addUniform("opacityParts",4),u.addUniform("reflectionLeftColor",4),u.addUniform("reflectionRightColor",4),u.addUniform("refractionLeftColor",4),u.addUniform("refractionRightColor",4),u.addUniform("emissiveLeftColor",4),u.addUniform("emissiveRightColor",4),u.addUniform("vDiffuseInfos",2),u.addUniform("vAmbientInfos",2),u.addUniform("vOpacityInfos",2),u.addUniform("vReflectionInfos",2),u.addUniform("vReflectionPosition",3),u.addUniform("vReflectionSize",3),u.addUniform("vEmissiveInfos",2),u.addUniform("vLightmapInfos",2),u.addUniform("vSpecularInfos",2),u.addUniform("vBumpInfos",3),u.addUniform("diffuseMatrix",16),u.addUniform("ambientMatrix",16),u.addUniform("opacityMatrix",16),u.addUniform("reflectionMatrix",16),u.addUniform("emissiveMatrix",16),u.addUniform("lightmapMatrix",16),u.addUniform("specularMatrix",16),u.addUniform("bumpMatrix",16),u.addUniform("vTangentSpaceParams",2),u.addUniform("pointSize",1),u.addUniform("alphaCutOff",1),u.addUniform("refractionMatrix",16),u.addUniform("vRefractionInfos",4),u.addUniform("vRefractionPosition",3),u.addUniform("vRefractionSize",3),u.addUniform("vSpecularColor",4),u.addUniform("vEmissiveColor",3),u.addUniform("vDiffuseColor",4),u.addUniform("vAmbientColor",3),u.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(u,R,I){const B=this.eu(),U=I.materialDefines;if(!U)return;const K=I.effect;if(!K)return;this._activeEffect=K,R.getMeshUniformBuffer().bindToEffect(K,"Mesh"),R.transferToEffect(u),this._uniformBuffer.bindToEffect(K,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,B,R,u,this.isFrozen),q.b.Bind(B.getEngine().currentRenderPassId,this._activeEffect,R,u,this);const s=B.activeCamera;s?this._uniformBuffer.updateFloat4("cameraInfo",s.GD,s.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=I,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),U.OBJECTSPACE_NORMALMAP&&(u.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const t=this._mustRebind(B,K,I,R.visibility);(0,Q.b)(R,K);const G=this._uniformBuffer;if(t){if(this.bindViewProjection(K),!G.useUbo||!this.isFrozen||!G.isSync||I._drawWrapper._forceRebindOnNextCall){if(M.FresnelEnabled&&U.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(G.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),G.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&G.updateColor4("opacityParts",new D.fR(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(G.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),G.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(G.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),G.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(G.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),G.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),B.texturesEnabled){if(this._diffuseTexture&&M.DiffuseTextureEnabled&&(G.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Q.o)(this._diffuseTexture,G,"diffuse")),this._ambientTexture&&M.AmbientTextureEnabled&&(G.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Q.o)(this._ambientTexture,G,"ambient")),this._opacityTexture&&M.OpacityTextureEnabled&&(G.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Q.o)(this._opacityTexture,G,"opacity")),this._hasAlphaChannel()&&G.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&M.ReflectionTextureEnabled){if(G.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),G.SD("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const u=this._reflectionTexture;G.updateVector3("vReflectionPosition",u.boundingBoxPosition),G.updateVector3("vReflectionSize",u.boundingBoxSize)}}else G.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&M.EmissiveTextureEnabled&&(G.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Q.o)(this._emissiveTexture,G,"emissive")),this._lightmapTexture&&M.LightmapTextureEnabled&&(G.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Q.o)(this._lightmapTexture,G,"lightmap")),this._specularTexture&&M.SpecularTextureEnabled&&(G.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Q.o)(this._specularTexture,G,"specular")),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&(G.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Q.o)(this._bumpTexture,G,"bump"),B._mirroredCameraPosition?G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&M.RefractionTextureEnabled){let u=1;if(this._refractionTexture.isCube||(G.SD("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(u=this._refractionTexture.depth)),G.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,u,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const u=this._refractionTexture;G.updateVector3("vRefractionPosition",u.boundingBoxPosition),G.updateVector3("vRefractionSize",u.boundingBoxSize)}}}this.pointsCloud&&G.updateFloat("pointSize",this.pointSize),G.updateColor4("vSpecularColor",this.specularColor,this.specularPower),G.updateColor3("vEmissiveColor",M.EmissiveTextureEnabled?this.emissiveColor:D.fR.BlackReadOnly),G.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),B.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),G.updateColor3("vAmbientColor",this._globalAmbientColor)}B.texturesEnabled&&(this._diffuseTexture&&M.DiffuseTextureEnabled&&K.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&M.AmbientTextureEnabled&&K.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&M.OpacityTextureEnabled&&K.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&M.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?K.setTexture("reflectionCubeSampler",this._reflectionTexture):K.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&M.EmissiveTextureEnabled&&K.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&M.LightmapTextureEnabled&&K.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&M.SpecularTextureEnabled&&K.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&K.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&M.RefractionTextureEnabled&&(this._refractionTexture.isCube?K.setTexture("refractionCubeSampler",this._refractionTexture):K.setTexture("refraction2DSampler",this._refractionTexture))),this.eu().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(R)&&this.eu().depthPeelingRenderer.bind(K),this._eventInfo.subMesh=I,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,T.g)(K,this,B),this.bindEyePosition(K)}else B.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(t||!this.isFrozen){var S;if(B.lightsEnabled&&!this._disableLighting&&(0,Q.f)(B,R,K,U,this._maxSimultaneousLights),(B.fogEnabled&&R.applyFog&&B.fogMode!==C.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||R.receiveShadows||U.PREPASS)&&this.bindView(K),(0,Q.d)(B,R,K),U.NUM_MORPH_INFLUENCERS&&(0,Q.l)(R,K),U.BAKED_VERTEX_ANIMATION_TEXTURE)null===(S=R.bakedVertexAnimationManager)||void 0===S||S.bind(K,U.INSTANCES);this.useLogarithmicDepth&&(0,Q.j)(U,K,B),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(R,this._activeEffect,I),G.update()}getAnimatables(){const u=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&u.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&u.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&u.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&u.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&u.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&u.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&u.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&u.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&u.push(this._refractionTexture),u}getActiveTextures(){const u=super.getActiveTextures();return this._diffuseTexture&&u.push(this._diffuseTexture),this._ambientTexture&&u.push(this._ambientTexture),this._opacityTexture&&u.push(this._opacityTexture),this._reflectionTexture&&u.push(this._reflectionTexture),this._emissiveTexture&&u.push(this._emissiveTexture),this._specularTexture&&u.push(this._specularTexture),this._bumpTexture&&u.push(this._bumpTexture),this._lightmapTexture&&u.push(this._lightmapTexture),this._refractionTexture&&u.push(this._refractionTexture),u}hasTexture(u){return!!super.hasTexture(u)||(this._diffuseTexture===u||(this._ambientTexture===u||(this._opacityTexture===u||(this._reflectionTexture===u||(this._emissiveTexture===u||(this._specularTexture===u||(this._bumpTexture===u||(this._lightmapTexture===u||this._refractionTexture===u))))))))}dispose(u,R){var I,B,U,K,C,D,s,t,G;R&&(null===(I=this._diffuseTexture)||void 0===I||I.dispose(),null===(B=this._ambientTexture)||void 0===B||B.dispose(),null===(U=this._opacityTexture)||void 0===U||U.dispose(),null===(K=this._reflectionTexture)||void 0===K||K.dispose(),null===(C=this._emissiveTexture)||void 0===C||C.dispose(),null===(D=this._specularTexture)||void 0===D||D.dispose(),null===(s=this._bumpTexture)||void 0===s||s.dispose(),null===(t=this._lightmapTexture)||void 0===t||t.dispose(),null===(G=this._refractionTexture)||void 0===G||G.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(u,R)}clone(u){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],I=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const B=V.e.Clone((()=>new M(u,this.eu())),this,{cloneTexturesOnlyOnce:R});return B.name=u,B.id=u,this.RD.copyTo(B.RD),this._clonePlugins(B,I),B}static Parse(u,R,I){const B=V.e.Parse((()=>new M(u.name,R)),u,R,I);return u.RD&&B.RD.parse(u.RD,R,I),S.c._ParsePlugins(u,B,R,I),B}static get DiffuseTextureEnabled(){return E.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(u){E.b.DiffuseTextureEnabled=u}static get DetailTextureEnabled(){return E.b.DetailTextureEnabled}static set DetailTextureEnabled(u){E.b.DetailTextureEnabled=u}static get AmbientTextureEnabled(){return E.b.AmbientTextureEnabled}static set AmbientTextureEnabled(u){E.b.AmbientTextureEnabled=u}static get OpacityTextureEnabled(){return E.b.OpacityTextureEnabled}static set OpacityTextureEnabled(u){E.b.OpacityTextureEnabled=u}static get ReflectionTextureEnabled(){return E.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(u){E.b.ReflectionTextureEnabled=u}static get EmissiveTextureEnabled(){return E.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(u){E.b.EmissiveTextureEnabled=u}static get SpecularTextureEnabled(){return E.b.SpecularTextureEnabled}static set SpecularTextureEnabled(u){E.b.SpecularTextureEnabled=u}static get BumpTextureEnabled(){return E.b.BumpTextureEnabled}static set BumpTextureEnabled(u){E.b.BumpTextureEnabled=u}static get LightmapTextureEnabled(){return E.b.LightmapTextureEnabled}static set LightmapTextureEnabled(u){E.b.LightmapTextureEnabled=u}static get RefractionTextureEnabled(){return E.b.RefractionTextureEnabled}static set RefractionTextureEnabled(u){E.b.RefractionTextureEnabled=u}static get ColorGradingTextureEnabled(){return E.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(u){E.b.ColorGradingTextureEnabled=u}static get FresnelEnabled(){return E.b.FresnelEnabled}static set FresnelEnabled(u){E.b.FresnelEnabled=u}}M.ForceGLSL=!1,(0,B.c)([(0,U.J)("diffuseTexture")],M.prototype,"_diffuseTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"diffuseTexture",void 0),(0,B.c)([(0,U.J)("ambientTexture")],M.prototype,"_ambientTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"ambientTexture",void 0),(0,B.c)([(0,U.J)("opacityTexture")],M.prototype,"_opacityTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"opacityTexture",void 0),(0,B.c)([(0,U.J)("reflectionTexture")],M.prototype,"_reflectionTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"reflectionTexture",void 0),(0,B.c)([(0,U.J)("emissiveTexture")],M.prototype,"_emissiveTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"emissiveTexture",void 0),(0,B.c)([(0,U.J)("specularTexture")],M.prototype,"_specularTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"specularTexture",void 0),(0,B.c)([(0,U.J)("bumpTexture")],M.prototype,"_bumpTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"bumpTexture",void 0),(0,B.c)([(0,U.J)("lightmapTexture")],M.prototype,"_lightmapTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"lightmapTexture",void 0),(0,B.c)([(0,U.J)("refractionTexture")],M.prototype,"_refractionTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"refractionTexture",void 0),(0,B.c)([(0,U.p)("ambient")],M.prototype,"ambientColor",void 0),(0,B.c)([(0,U.p)("diffuse")],M.prototype,"diffuseColor",void 0),(0,B.c)([(0,U.p)("specular")],M.prototype,"specularColor",void 0),(0,B.c)([(0,U.p)("emissive")],M.prototype,"emissiveColor",void 0),(0,B.c)([(0,U.S)()],M.prototype,"specularPower",void 0),(0,B.c)([(0,U.S)("useAlphaFromDiffuseTexture")],M.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"useAlphaFromDiffuseTexture",void 0),(0,B.c)([(0,U.S)("useEmissiveAsIllumination")],M.prototype,"_useEmissiveAsIllumination",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useEmissiveAsIllumination",void 0),(0,B.c)([(0,U.S)("linkEmissiveWithDiffuse")],M.prototype,"_linkEmissiveWithDiffuse",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"linkEmissiveWithDiffuse",void 0),(0,B.c)([(0,U.S)("useSpecularOverAlpha")],M.prototype,"_useSpecularOverAlpha",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useSpecularOverAlpha",void 0),(0,B.c)([(0,U.S)("useReflectionOverAlpha")],M.prototype,"_useReflectionOverAlpha",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useReflectionOverAlpha",void 0),(0,B.c)([(0,U.S)("disableLighting")],M.prototype,"_disableLighting",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsLightsDirty")],M.prototype,"disableLighting",void 0),(0,B.c)([(0,U.S)("useObjectSpaceNormalMap")],M.prototype,"_useObjectSpaceNormalMap",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useObjectSpaceNormalMap",void 0),(0,B.c)([(0,U.S)("useParallax")],M.prototype,"_useParallax",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallax",void 0),(0,B.c)([(0,U.S)("useParallaxOcclusion")],M.prototype,"_useParallaxOcclusion",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallaxOcclusion",void 0),(0,B.c)([(0,U.S)()],M.prototype,"parallaxScaleBias",void 0),(0,B.c)([(0,U.S)("roughness")],M.prototype,"_roughness",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"roughness",void 0),(0,B.c)([(0,U.S)()],M.prototype,"indexOfRefraction",void 0),(0,B.c)([(0,U.S)()],M.prototype,"invertRefractionY",void 0),(0,B.c)([(0,U.S)()],M.prototype,"alphaCutOff",void 0),(0,B.c)([(0,U.S)("useLightmapAsShadowmap")],M.prototype,"_useLightmapAsShadowmap",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useLightmapAsShadowmap",void 0),(0,B.c)([(0,U.u)("diffuseFresnelParameters")],M.prototype,"_diffuseFresnelParameters",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"diffuseFresnelParameters",void 0),(0,B.c)([(0,U.u)("opacityFresnelParameters")],M.prototype,"_opacityFresnelParameters",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],M.prototype,"opacityFresnelParameters",void 0),(0,B.c)([(0,U.u)("reflectionFresnelParameters")],M.prototype,"_reflectionFresnelParameters",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"reflectionFresnelParameters",void 0),(0,B.c)([(0,U.u)("refractionFresnelParameters")],M.prototype,"_refractionFresnelParameters",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"refractionFresnelParameters",void 0),(0,B.c)([(0,U.u)("emissiveFresnelParameters")],M.prototype,"_emissiveFresnelParameters",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"emissiveFresnelParameters",void 0),(0,B.c)([(0,U.S)("useReflectionFresnelFromSpecular")],M.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"useReflectionFresnelFromSpecular",void 0),(0,B.c)([(0,U.S)("useGlossinessFromSpecularMapAlpha")],M.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,B.c)([(0,U.S)("maxSimultaneousLights")],M.prototype,"_maxSimultaneousLights",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsLightsDirty")],M.prototype,"maxSimultaneousLights",void 0),(0,B.c)([(0,U.S)("invertNormalMapX")],M.prototype,"_invertNormalMapX",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapX",void 0),(0,B.c)([(0,U.S)("invertNormalMapY")],M.prototype,"_invertNormalMapY",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapY",void 0),(0,B.c)([(0,U.S)("twoSidedLighting")],M.prototype,"_twoSidedLighting",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"twoSidedLighting",void 0),(0,B.c)([(0,U.S)("applyDecalMapAfterDetailMap")],M.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,B.c)([(0,U.e)("_markAllSubMeshesAsMiscDirty")],M.prototype,"applyDecalMapAfterDetailMap",void 0),(0,X.e)("BABYLON.StandardMaterial",M),C.c.DefaultMaterialFactory=u=>new M("default material",u)}}]);