"use strict";(self.ufnpnb83drd=self.ufnpnb83drd||[]).push([[25],{12731:(E,U,g)=>{g.d(U,{e:()=>P});var N=g(12320),L=g(12656),D=g(12322),S=g(12726),u=g(12721),s=g(12733),C=g(12693);class B extends u.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class P extends s.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(E){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(E,"DetailMap",140,new B,U),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=L.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=E._dirtyCallbacks[1]}isReadyForSubMesh(E,U,g){return!this._isEnabled||!(E._areTexturesDirty&&U.texturesEnabled&&g.getCaps().standardDerivatives&&this._texture&&S.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(E,U){if(this._isEnabled){E.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const g=U.getEngine();E._areTexturesDirty&&(g.getCaps().standardDerivatives&&this._texture&&S.e.DetailTextureEnabled&&this._isEnabled?((0,C.O)(this._texture,E,"DETAIL"),E.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):E.DETAIL=!1)}else E.DETAIL=!1}bindForSubMesh(E,U){if(!this._isEnabled)return;const g=this._material.isFrozen;E.useUbo&&g&&E.isSync||this._texture&&S.e.DetailTextureEnabled&&(E.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,C.t)(this._texture,E,"detail")),U.texturesEnabled&&this._texture&&S.e.DetailTextureEnabled&&E.setTexture("detailSampler",this._texture)}hasTexture(E){return this._texture===E}getActiveTextures(E){this._texture&&E.push(this._texture)}getAnimatables(E){this._texture&&this._texture.animations&&this._texture.animations.length>0&&E.push(this._texture)}dispose(E){var U;E&&(null===(U=this._texture)||void 0===U||U.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(E){E.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,N.e)([(0,D.y)("detailTexture"),(0,D.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"texture",void 0),(0,N.e)([(0,D.E)()],P.prototype,"diffuseBlendLevel",void 0),(0,N.e)([(0,D.E)()],P.prototype,"roughnessBlendLevel",void 0),(0,N.e)([(0,D.E)()],P.prototype,"bumpLevel",void 0),(0,N.e)([(0,D.E)(),(0,D.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"normalBlendMethod",void 0),(0,N.e)([(0,D.E)(),(0,D.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"isEnabled",void 0)},12721:(E,U,g)=>{g.d(U,{e:()=>N});class N{constructor(E){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=E,E)for(const U in E)Object.prototype.hasOwnProperty.call(E,U)&&this._setDefaultValue(U)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let E=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||E,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const E of Object.keys(this))"_"!==E[0]&&this._keys.push(E);if(this._externalProperties)for(const E in this._externalProperties)-1===this._keys.indexOf(E)&&this._keys.push(E)}isEqual(E){if(this._keys.length!==E._keys.length)return!1;for(let U=0;U<this._keys.length;U++){const g=this._keys[U];if(this[g]!==E[g])return!1}return!0}cloneTo(E){this._keys.length!==E._keys.length&&(E._keys=this._keys.slice(0));for(let U=0;U<this._keys.length;U++){const g=this._keys[U];E[g]=this[g]}}reset(){for(const E of this._keys)this._setDefaultValue(E)}_setDefaultValue(E){var U,g,N,L;const D=(null===(U=this._externalProperties)||void 0===U||null===(g=U[E])||void 0===g?void 0:g.type)??typeof this[E],S=null===(N=this._externalProperties)||void 0===N||null===(L=N[E])||void 0===L?void 0:L.default;switch(D){case"number":this[E]=S??0;break;case"string":this[E]=S??"";break;default:this[E]=S??!1}}toString(){let E="";for(let U=0;U<this._keys.length;U++){const g=this._keys[U],N=this[g];switch(typeof N){case"number":case"string":E+="#define "+g+" "+N+"\n";break;default:N&&(E+="#define "+g+"\n")}}return E}}},12726:(E,U,g)=>{g.d(U,{e:()=>L});var N=g(12243);class L{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(E){this._DiffuseTextureEnabled!==E&&(this._DiffuseTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(E){this._BaseWeightTextureEnabled!==E&&(this._BaseWeightTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(E){this._BaseDiffuseRoughnessTextureEnabled!==E&&(this._BaseDiffuseRoughnessTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(E){this._DetailTextureEnabled!==E&&(this._DetailTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(E){this._DecalMapEnabled!==E&&(this._DecalMapEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(E){this._AmbientTextureEnabled!==E&&(this._AmbientTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(E){this._OpacityTextureEnabled!==E&&(this._OpacityTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(E){this._ReflectionTextureEnabled!==E&&(this._ReflectionTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(E){this._EmissiveTextureEnabled!==E&&(this._EmissiveTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(E){this._SpecularTextureEnabled!==E&&(this._SpecularTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(E){this._BumpTextureEnabled!==E&&(this._BumpTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(E){this._LightmapTextureEnabled!==E&&(this._LightmapTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(E){this._RefractionTextureEnabled!==E&&(this._RefractionTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(E){this._ColorGradingTextureEnabled!==E&&(this._ColorGradingTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(E){this._FresnelEnabled!==E&&(this._FresnelEnabled=E,N.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(E){this._ClearCoatTextureEnabled!==E&&(this._ClearCoatTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(E){this._ClearCoatBumpTextureEnabled!==E&&(this._ClearCoatBumpTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(E){this._ClearCoatTintTextureEnabled!==E&&(this._ClearCoatTintTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(E){this._SheenTextureEnabled!==E&&(this._SheenTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(E){this._AnisotropicTextureEnabled!==E&&(this._AnisotropicTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(E){this._ThicknessTextureEnabled!==E&&(this._ThicknessTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(E){this._RefractionIntensityTextureEnabled!==E&&(this._RefractionIntensityTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(E){this._TranslucencyIntensityTextureEnabled!==E&&(this._TranslucencyIntensityTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(E){this._TranslucencyColorTextureEnabled!==E&&(this._TranslucencyColorTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(E){this._IridescenceTextureEnabled!==E&&(this._IridescenceTextureEnabled=E,N.b.MarkAllMaterialsAsDirty(1))}}L._DiffuseTextureEnabled=!0,L._BaseWeightTextureEnabled=!0,L._BaseDiffuseRoughnessTextureEnabled=!0,L._DetailTextureEnabled=!0,L._DecalMapEnabled=!0,L._AmbientTextureEnabled=!0,L._OpacityTextureEnabled=!0,L._ReflectionTextureEnabled=!0,L._EmissiveTextureEnabled=!0,L._SpecularTextureEnabled=!0,L._BumpTextureEnabled=!0,L._LightmapTextureEnabled=!0,L._RefractionTextureEnabled=!0,L._ColorGradingTextureEnabled=!0,L._FresnelEnabled=!0,L._ClearCoatTextureEnabled=!0,L._ClearCoatBumpTextureEnabled=!0,L._ClearCoatTintTextureEnabled=!0,L._SheenTextureEnabled=!0,L._AnisotropicTextureEnabled=!0,L._ThicknessTextureEnabled=!0,L._RefractionIntensityTextureEnabled=!0,L._TranslucencyIntensityTextureEnabled=!0,L._TranslucencyColorTextureEnabled=!0,L._IridescenceTextureEnabled=!0},12736:(E,U,g)=>{g.d(U,{b:()=>D});var N,L=g(12334);!function(E){E[E.Zero=0]="Zero",E[E.One=1]="One",E[E.MaxViewZ=2]="MaxViewZ"}(N||(N={}));class D{static CreateConfiguration(E){return D._Configurations[E]={defines:{},previousWorldMatrices:{},previousViewProjection:L.Matrix.Zero(),currentViewProjection:L.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},D._Configurations[E]}static DeleteConfiguration(E){delete D._Configurations[E]}static GetConfiguration(E){return D._Configurations[E]}static AddUniformsAndSamplers(E,U){E.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(E,U){for(const g of U)if(g.Wg)for(const U of g.Wg)U._removeDrawWrapper(E)}static PrepareDefines(E,U,g){if(!g._arePrePassDirty)return;const N=D._Configurations[E];if(!N)return;g.PREPASS=!0,g.PREPASS_COLOR=!1,g.PREPASS_COLOR_INDEX=-1;let L=0;for(let S=0;S<D.GeometryTextureDescriptions.length;S++){const E=D.GeometryTextureDescriptions[S],U=E.define,u=E.defineIndex,s=N.defines[u];void 0!==s?(g[U]=!0,g[u]=s,L++):(g[U]=!1,delete g[u])}g.SCENE_MRT_COUNT=L,g.BONES_VELOCITY_ENABLED=U.useBones&&U.computeBonesUsingShaders&&U.skeleton&&!U.skeleton.isUsingTextureForMatrices&&-1===N.excludedSkinnedMesh.indexOf(U)}static Bind(E,U,g,N,L){const S=D._Configurations[E];if(!S)return;const u=g.tE(),s=u.getEngine();if(S.reverseCulling&&s.setStateCullFaceType(u._mirroredCameraPosition?L.cullBackFaces:!L.cullBackFaces),(void 0!==S.defines.PREPASS_VELOCITY_INDEX||void 0!==S.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(S.previousWorldMatrices[g.uniqueId]||(S.previousWorldMatrices[g.uniqueId]=N.clone()),S.previousViewProjection||(S.previousViewProjection=u.getTransformMatrix().clone(),S.currentViewProjection=u.getTransformMatrix().clone()),S.currentViewProjection.updateFlag!==u.getTransformMatrix().updateFlag?(S.lastUpdateFrameId=s.frameId,S.previousViewProjection.D(S.currentViewProjection),S.currentViewProjection.D(u.getTransformMatrix())):S.lastUpdateFrameId!==s.frameId&&(S.lastUpdateFrameId=s.frameId,S.previousViewProjection.D(S.currentViewProjection)),U.setMatrix("previousWorld",S.previousWorldMatrices[g.uniqueId]),U.setMatrix("previousViewProjection",S.previousViewProjection),S.previousWorldMatrices[g.uniqueId]=N.clone(),g.useBones&&g.computeBonesUsingShaders&&g.skeleton)){const E=g.skeleton;if(!E.isUsingTextureForMatrices||-1===U.getUniformIndex("boneTextureWidth")){const N=E.getTransformMatrices(g);N&&(S.previousBones[g.uniqueId]||(S.previousBones[g.uniqueId]=N.slice()),U.setMatrices("mPreviousBones",S.previousBones[g.uniqueId]),S.previousBones[g.uniqueId].set(N))}}}}D.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],D._Configurations={}},12733:(E,U,g)=>{g.d(U,{d:()=>h});var N=g(12320),L=g(12322),D=g(12656),S=g(12205),u=g(12226),s=g(12250);const C=new RegExp("^([gimus]+)!");class B{constructor(E){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=E,this._scene=E.tE(),this._engine=this._scene.getEngine()}_addPlugin(E){for(let N=0;N<this._plugins.length;++N)if(this._plugins[N].name===E.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!E.isCompatible(this._material.shaderLanguage))throw`The plugin "${E.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const U=E.getClassName();B._MaterialPluginClassToMainDefine[U]||(B._MaterialPluginClassToMainDefine[U]="MATERIALPLUGIN_"+ ++B._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(E,U)=>this._handlePluginEvent(E,U),this._plugins.push(E),this._plugins.sort(((E,U)=>E.priority-U.priority)),this._codeInjectionPoints={};const g={};g[B._MaterialPluginClassToMainDefine[U]]={type:"boolean",default:!0};for(const N of this._plugins)N.collectDefines(g),this._collectPointNames("vertex",N.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",N.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=g,!0}_activatePlugin(E){-1===this._activePlugins.indexOf(E)&&(this._activePlugins.push(E),this._activePlugins.sort(((E,U)=>E.priority-U.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),E.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(E),this._activePluginsForExtraEvents.sort(((E,U)=>E.priority-U.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(E){for(let U=0;U<this._plugins.length;++U)if(this._plugins[U].name===E)return this._plugins[U];return null}_handlePluginEventIsReadyForSubMesh(E){let U=!0;for(const g of this._activePlugins)U=U&&g.isReadyForSubMesh(E.defines,this._scene,this._engine,E.subMesh);E.isReadyForSubMesh=U}_handlePluginEventPrepareDefinesBeforeAttributes(E){for(const U of this._activePlugins)U.prepareDefinesBeforeAttributes(E.defines,this._scene,E.mesh)}_handlePluginEventPrepareDefines(E){for(const U of this._activePlugins)U.prepareDefines(E.defines,this._scene,E.mesh)}_handlePluginEventHardBindForSubMesh(E){for(const U of this._activePluginsForExtraEvents)U.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,E.subMesh)}_handlePluginEventBindForSubMesh(E){for(const U of this._activePlugins)U.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,E.subMesh)}_handlePluginEventHasRenderTargetTextures(E){let U=!1;for(const g of this._activePluginsForExtraEvents)if(U=g.hasRenderTargetTextures(),U)break;E.hasRenderTargetTextures=U}_handlePluginEventFillRenderTargetTextures(E){for(const U of this._activePluginsForExtraEvents)U.fillRenderTargetTextures(E.renderTargets)}_handlePluginEvent(E,U){switch(E){case 512:{const E=U;for(const U of this._activePlugins)U.getActiveTextures(E.activeTextures);break}case 256:{const E=U;for(const U of this._activePlugins)U.getAnimatables(E.animatables);break}case 1024:{const E=U;let g=!1;for(const U of this._activePlugins)if(g=U.hasTexture(E.texture),g)break;E.hasTexture=g;break}case 2:{const E=U;for(const U of this._plugins)U.dispose(E.forceDisposeTextures);break}case 4:U.defineNames=this._defineNamesFromPlugins;break;case 128:{const E=U;for(const U of this._activePlugins)E.fallbackRank=U.addFallbacks(E.defines,E.fallbacks,E.fallbackRank),U.getAttributes(E.attributes,this._scene,E.mesh);this._uniformList.length>0&&E.uniforms.push(...this._uniformList),this._samplerList.length>0&&E.samplers.push(...this._samplerList),this._uboList.length>0&&E.uniformBuffersNames.push(...this._uboList),E.customCode=this._injectCustomCode(E,E.customCode);break}case 8:{const E=U;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const g=1===this._material.shaderLanguage;for(const U of this._plugins){const N=U.getUniforms(this._material.shaderLanguage);if(N){if(N.ubo)for(const U of N.ubo){if(U.size&&U.type){const N=U.arraySize??0;if(E.ubo.addUniform(U.name,U.size,N),g){let E;switch(U.type){case"mat4":E="mat4x4f";break;case"float":E="f32";break;default:E=`${U.type}f`}this._uboDeclaration+=N>0?`uniform ${U.name}: array<${E}, ${N}>;\n`:`uniform ${U.name}: ${E};\n`}else this._uboDeclaration+=`${U.type} ${U.name}${N>0?`[${N}]`:""};\n`}this._uniformList.push(U.name)}N.vertex&&(this._vertexDeclaration+=N.vertex+"\n"),N.fragment&&(this._fragmentDeclaration+=N.fragment+"\n")}U.getSamplers(this._samplerList),U.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(E,U){if(U)for(const g in U)this._codeInjectionPoints[E]||(this._codeInjectionPoints[E]={}),this._codeInjectionPoints[E][g]=!0}_injectCustomCode(E,U){return(g,N)=>{var L;U&&(N=U(g,N)),this._uboDeclaration&&(N=N.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(N=N.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(N=N.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const D=null===(L=this._codeInjectionPoints)||void 0===L?void 0:L[g];if(!D)return N;let S=null;for(let U in D){let L="";for(const N of this._activePlugins){var B;let D=null===(B=N.getCustomCode(g,this._material.shaderLanguage))||void 0===B?void 0:B[U];if(D){if(N.resolveIncludes){if(null===S){const U=0;S={defines:[],indexParameters:E.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:s.e.GetShadersRepository(U),includesShadersStore:s.e.GetIncludesShadersStore(U),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Fg:this._engine.Fg,processCodeAfterIncludes:void 0}}S.isFragment="fragment"===g,(0,u.g)(D,S,(E=>D=E))}L+=D+"\n"}}if(L.length>0)if("!"===U.charAt(0)){U=U.substring(1);let E="g";if("!"===U.charAt(0))E="",U=U.substring(1);else{const g=C.exec(U);g&&g.length>=2&&(E=g[1],U=U.substring(E.length+1))}E.indexOf("g")<0&&(E+="g");const g=N,D=new RegExp(U,E);let S=D.exec(g);for(;null!==S;){let E=L;for(let U=0;U<S.length;++U)E=E.replace("$"+U,S[U]);N=N.replace(S[0],E),S=D.exec(g)}}else{const E="#define "+U;N=N.replace(E,"\n"+L+"\n"+E)}}return N}}}B._MaterialPluginClassToMainDefine={},B._MaterialPluginCounter=0,S.b.OnEnginesDisposedObservable.add((()=>{d()}));const P=[];let F=!1,f=null;function d(){P.length=0,F=!1,D.b.OnEventObservable.remove(f),f=null}var I=g(12367),y=g(12292);class h{isCompatible(E){return 0===E}_enable(E){E&&this._pluginManager._activatePlugin(this)}constructor(E,U,g,N){let L=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=E,this.name=U,this.priority=g,this.resolveIncludes=S,E.pluginManager||(E.pluginManager=new B(E),E.hg.add((()=>{E.pluginManager=void 0}))),this._pluginDefineNames=N,this._pluginManager=E.pluginManager,L&&this._pluginManager._addPlugin(this),D&&this._enable(!0),this.markAllDefinesAsDirty=E._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(E,U,g,N){return!0}hardBindForSubMesh(E,U,g,N){}bindForSubMesh(E,U,g,N){}dispose(E){}getCustomCode(E){return null}collectDefines(E){if(this._pluginDefineNames)for(const U of Object.keys(this._pluginDefineNames)){if("_"===U[0])continue;const g=typeof this._pluginDefineNames[U];E[U]={type:"number"===g?"number":"string"===g?"string":"boolean"===g?"boolean":"object",default:this._pluginDefineNames[U]}}}prepareDefinesBeforeAttributes(E,U,g){}prepareDefines(E,U,g){}hasTexture(E){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(E){}getActiveTextures(E){}getAnimatables(E){}addFallbacks(E,U,g){return g}getSamplers(E){}getAttributes(E,U,g){}getUniformBuffersNames(E){}getUniforms(){return{}}copyTo(E){I.b.Clone((()=>E),this)}serialize(){return I.b.Serialize(this)}parse(E,U,g){I.b.Parse((()=>this),E,U,g)}}(0,N.e)([(0,L.E)()],h.prototype,"name",void 0),(0,N.e)([(0,L.E)()],h.prototype,"priority",void 0),(0,N.e)([(0,L.E)()],h.prototype,"resolveIncludes",void 0),(0,N.e)([(0,L.E)()],h.prototype,"registerForExtraEvents",void 0),(0,y.f)("BABYLON.MaterialPluginBase",h)},12715:(E,U,g)=>{g.d(U,{b:()=>N});class N{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(E){E.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(E){}bindForSubMesh(E,U,g,N,L){if(U.prePassRenderer&&U.prePassRenderer.enabled&&U.prePassRenderer.currentRTisSceneRT&&(-1!==U.prePassRenderer.getIndex(2)||-1!==U.prePassRenderer.getIndex(11))){this.previousWorldMatrices[g.uniqueId]||(this.previousWorldMatrices[g.uniqueId]=N.clone()),this.previousViewProjection||(this.previousViewProjection=U.getTransformMatrix().clone(),this.currentViewProjection=U.getTransformMatrix().clone());const L=U.getEngine();this.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.D(this.currentViewProjection),this.currentViewProjection.D(U.getTransformMatrix())):this._lastUpdateFrameId!==L.frameId&&(this._lastUpdateFrameId=L.frameId,this.previousViewProjection.D(this.currentViewProjection)),E.setMatrix("previousWorld",this.previousWorldMatrices[g.uniqueId]),E.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[g.uniqueId]=N.clone()}}}},12707:(E,U,g)=>{g.d(U,{hU:()=>b});var N=g(12320),L=g(12322),D=g(12422),S=g(12573),u=g(12379),s=g(12407),C=g(12715),B=g(12580),P=g(12656),F=g(12721),f=g(12652),d=g(12311),I=g(12292),y=g(12726),h=g(12646),V=g(12731),e=g(12699),x=g(12693),l=g(12367),Y=g(12736);const t={effect:null,subMesh:null};class G extends F.e{constructor(E){super(E),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(E){const U=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const g of U)this[g]=g===E}}class b extends f.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(E){this._attachImageProcessingConfiguration(E),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(E){E!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=E||this.tE().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(E){this.imageProcessingConfiguration.colorCurvesEnabled=E}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(E){this.imageProcessingConfiguration.colorGradingEnabled=E}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(E){this._imageProcessingConfiguration.toneMappingEnabled=E}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(E){this._imageProcessingConfiguration.exposure=E}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(E){this._imageProcessingConfiguration.contrast=E}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(E){this._imageProcessingConfiguration.colorGradingTexture=E}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(E){this._imageProcessingConfiguration.colorCurves=E}get canRenderToMRT(){return!0}constructor(E,U){super(E,U,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||b.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new u.VU(0,0,0),this.diffuseColor=new u.VU(1,1,1),this.specularColor=new u.VU(1,1,1),this.emissiveColor=new u.VU(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new D.e(16),this._globalAmbientColor=new u.VU(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new V.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new C.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),b.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),b.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(b.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(b.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"hU"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===P.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Qg&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==P.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Qg||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(E,U){let N=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const L=U._drawWrapper;if(L.effect&&this.isFrozen&&L._wasPreviouslyReady&&L._wasPreviouslyUsingInstances===N)return!0;U.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),U.materialDefines=new G(this._eventInfo.defineNames));const D=this.tE(),S=U.materialDefines;if(this._isReadyForSubMesh(U))return!0;const u=D.getEngine();S._needNormals=(0,x.M)(D,E,S,!0,this._maxSimultaneousLights,this._disableLighting),(0,x.T)(D,S);const P=this.needAlphaBlendingForMesh(E)&&this.tE().useOrderIndependentTransparency;if((0,x._)(D,S,this.canRenderToMRT&&!P),(0,x.W)(D,S,P),Y.b.PrepareDefines(u.currentRenderPassId,E,S),S._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,S._needUVs=!1;for(let E=1;E<=6;++E)S["MAINUV"+E]=!1;if(D.texturesEnabled){if(S.DIFFUSEDIRECTUV=0,S.BUMPDIRECTUV=0,S.AMBIENTDIRECTUV=0,S.OPACITYDIRECTUV=0,S.EMISSIVEDIRECTUV=0,S.SPECULARDIRECTUV=0,S.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&b.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._diffuseTexture,S,"DIFFUSE")}else S.DIFFUSE=!1;if(this._ambientTexture&&b.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._ambientTexture,S,"AMBIENT")}else S.AMBIENT=!1;if(this._opacityTexture&&b.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._opacityTexture,S,"OPACITY"),S.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else S.OPACITY=!1;if(this._reflectionTexture&&b.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(S._needNormals=!0,S.REFLECTION=!0,S.ROUGHNESS=this._roughness>0,S.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,S.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===d.c.INVCUBIC_MODE,S.REFLECTIONMAP_3D=this._reflectionTexture.isCube,S.REFLECTIONMAP_OPPOSITEZ=S.REFLECTIONMAP_3D&&this.tE().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,S.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case d.c.EXPLICIT_MODE:S.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case d.c.PLANAR_MODE:S.setReflectionMode("REFLECTIONMAP_PLANAR");break;case d.c.PROJECTION_MODE:S.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case d.c.SKYBOX_MODE:S.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case d.c.SPHERICAL_MODE:S.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case d.c.EQUIRECTANGULAR_MODE:S.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case d.c.FIXED_EQUIRECTANGULAR_MODE:S.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case d.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:S.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case d.c.CUBIC_MODE:case d.c.INVCUBIC_MODE:default:S.setReflectionMode("REFLECTIONMAP_CUBIC")}S.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else S.REFLECTION=!1,S.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&b.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._emissiveTexture,S,"EMISSIVE")}else S.EMISSIVE=!1;if(this._lightmapTexture&&b.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._lightmapTexture,S,"LIGHTMAP"),S.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,S.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else S.LIGHTMAP=!1;if(this._specularTexture&&b.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,x.O)(this._specularTexture,S,"SPECULAR"),S.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else S.SPECULAR=!1;if(D.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&b.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,x.O)(this._bumpTexture,S,"BUMP"),S.PARALLAX=this._useParallax,S.PARALLAX_RHS=D.useRightHandedSystem,S.PARALLAXOCCLUSION=this._useParallaxOcclusion,S.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else S.BUMP=!1,S.PARALLAX=!1,S.PARALLAX_RHS=!1,S.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&b.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;S._needUVs=!0,S.REFRACTION=!0,S.REFRACTIONMAP_3D=this._refractionTexture.isCube,S.RGBDREFRACTION=this._refractionTexture.isRGBD,S.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else S.REFRACTION=!1;S.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else S.DIFFUSE=!1,S.AMBIENT=!1,S.OPACITY=!1,S.REFLECTION=!1,S.EMISSIVE=!1,S.LIGHTMAP=!1,S.BUMP=!1,S.REFRACTION=!1;S.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),S.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,S.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,S.SPECULAROVERALPHA=this._useSpecularOverAlpha,S.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,S.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,S.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(E)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=S,this._eventInfo.subMesh=U,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(S._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(S),S.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,S.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(S._areFresnelDirty&&(b.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(S.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,S.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,S.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,S.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,S.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,S.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,S._needNormals=!0,S.FRESNEL=!0):S.FRESNEL=!1),S.AREALIGHTUSED)for(let g=0;g<E.lightSources.length;g++)if(!E.lightSources[g]._isReady())return!1;(0,x.Q)(E,D,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(E),S,this._applyDecalMapAfterDetailMap),(0,x.K)(D,u,this,S,N,null,U.getRenderingMesh().hasThinInstances),this._eventInfo.defines=S,this._eventInfo.mesh=E,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,x.G)(E,S,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let F=!1;if(S.isDirty){const N=S._areLightsDisposed;S.markAsProcessed();const L=new h.b;S.REFLECTION&&L.addFallback(0,"REFLECTION"),S.SPECULAR&&L.addFallback(0,"SPECULAR"),S.BUMP&&L.addFallback(0,"BUMP"),S.PARALLAX&&L.addFallback(1,"PARALLAX"),S.PARALLAX_RHS&&L.addFallback(1,"PARALLAX_RHS"),S.PARALLAXOCCLUSION&&L.addFallback(0,"PARALLAXOCCLUSION"),S.SPECULAROVERALPHA&&L.addFallback(0,"SPECULAROVERALPHA"),S.FOG&&L.addFallback(1,"FOG"),S.POINTSIZE&&L.addFallback(0,"POINTSIZE"),S.LOGARITHMICDEPTH&&L.addFallback(0,"LOGARITHMICDEPTH"),(0,x.x)(S,L,this._maxSimultaneousLights),S.SPECULARTERM&&L.addFallback(0,"SPECULARTERM"),S.DIFFUSEFRESNEL&&L.addFallback(1,"DIFFUSEFRESNEL"),S.OPACITYFRESNEL&&L.addFallback(2,"OPACITYFRESNEL"),S.REFLECTIONFRESNEL&&L.addFallback(3,"REFLECTIONFRESNEL"),S.EMISSIVEFRESNEL&&L.addFallback(4,"EMISSIVEFRESNEL"),S.FRESNEL&&L.addFallback(4,"FRESNEL"),S.MULTIVIEW&&L.addFallback(0,"MULTIVIEW");const P=[s.f.PositionKind];S.NORMAL&&P.push(s.f.NormalKind),S.TANGENT&&P.push(s.f.TangentKind);for(let E=1;E<=6;++E)S["UV"+E]&&P.push(`uv${1===E?"":E}`);S.VERTEXCOLOR&&P.push(s.f.ColorKind),(0,x.z)(P,E,S,L),(0,x.B)(P,S),(0,x.D)(P,E,S),(0,x.y)(P,E,S);let f="default";const d=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],I=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],y=["Material","Scene","Mesh"],V={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:S.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=L,this._eventInfo.fallbackRank=0,this._eventInfo.defines=S,this._eventInfo.uniforms=d,this._eventInfo.attributes=P,this._eventInfo.samplers=I,this._eventInfo.uniformBuffersNames=y,this._eventInfo.customCode=void 0,this._eventInfo.mesh=E,this._eventInfo.indexParameters=V,this._callbackPluginEventGeneric(128,this._eventInfo),Y.b.AddUniformsAndSamplers(d,I),C.b.AddUniforms(d),C.b.AddSamplers(I),B.b&&(B.b.PrepareUniforms(d,S),B.b.PrepareSamplers(I,S)),(0,x.ab)({uniformsNames:d,uniformBuffersNames:y,samplers:I,defines:S,maxSimultaneousLights:this._maxSimultaneousLights}),(0,e.d)(d);const l={};this.customShaderNameResolve&&(f=this.customShaderNameResolve(f,d,y,I,S,P,l));const G=S.toString(),b=U.effect;let T=D.getEngine().createEffect(f,{attributes:P,uniformsNames:d,uniformBuffersNames:y,samplers:I,defines:G,fallbacks:L,onCompiled:this.onCompiled,onError:this.onError,indexParameters:V,processFinalCode:l.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:S.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([g.e(41),g.e(64)]).then(g.bind(g,14933)),Promise.all([g.e(39),g.e(65)]).then(g.bind(g,15049))]):await Promise.all([Promise.all([g.e(34),g.e(67)]).then(g.bind(g,15146)),Promise.all([g.e(33),g.e(68)]).then(g.bind(g,15311))]),this._shadersLoaded=!0}},u);if(this._eventInfo.customCode=void 0,T)if(this._onEffectCreatedObservable&&(t.effect=T,t.subMesh=U,this._onEffectCreatedObservable.notifyObservers(t)),this.allowShaderHotSwapping&&b&&!T.isReady()){if(T=b,S.markAsUnprocessed(),F=this.isFrozen,N)return S._areLightsDisposed=!0,!1}else D.resetCachedMaterial(),U.setEffect(T,S,this._materialContext)}return!(!U.effect||!U.effect.isReady())&&(S._renderId=D.getRenderId(),L._wasPreviouslyReady=!F,L._wasPreviouslyUsingInstances=N,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const E=this._uniformBuffer;E.addUniform("diffuseLeftColor",4),E.addUniform("diffuseRightColor",4),E.addUniform("opacityParts",4),E.addUniform("reflectionLeftColor",4),E.addUniform("reflectionRightColor",4),E.addUniform("refractionLeftColor",4),E.addUniform("refractionRightColor",4),E.addUniform("emissiveLeftColor",4),E.addUniform("emissiveRightColor",4),E.addUniform("vDiffuseInfos",2),E.addUniform("vAmbientInfos",2),E.addUniform("vOpacityInfos",2),E.addUniform("vReflectionInfos",2),E.addUniform("vReflectionPosition",3),E.addUniform("vReflectionSize",3),E.addUniform("vEmissiveInfos",2),E.addUniform("vLightmapInfos",2),E.addUniform("vSpecularInfos",2),E.addUniform("vBumpInfos",3),E.addUniform("diffuseMatrix",16),E.addUniform("ambientMatrix",16),E.addUniform("opacityMatrix",16),E.addUniform("reflectionMatrix",16),E.addUniform("emissiveMatrix",16),E.addUniform("lightmapMatrix",16),E.addUniform("specularMatrix",16),E.addUniform("bumpMatrix",16),E.addUniform("vTangentSpaceParams",2),E.addUniform("pointSize",1),E.addUniform("alphaCutOff",1),E.addUniform("refractionMatrix",16),E.addUniform("vRefractionInfos",4),E.addUniform("vRefractionPosition",3),E.addUniform("vRefractionSize",3),E.addUniform("vSpecularColor",4),E.addUniform("vEmissiveColor",3),E.addUniform("vDiffuseColor",4),E.addUniform("vAmbientColor",3),E.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(E,U,g){const N=this.tE(),L=g.materialDefines;if(!L)return;const D=g.effect;if(!D)return;this._activeEffect=D,U.getMeshUniformBuffer().bindToEffect(D,"Mesh"),U.transferToEffect(E),this._uniformBuffer.bindToEffect(D,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,N,U,E,this.isFrozen),Y.b.Bind(N.getEngine().currentRenderPassId,this._activeEffect,U,E,this);const s=N.activeCamera;s?this._uniformBuffer.updateFloat4("cameraInfo",s.kg,s.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=g,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),L.OBJECTSPACE_NORMALMAP&&(E.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const C=this._mustRebind(N,D,g,U.visibility);(0,x.e)(U,D);const B=this._uniformBuffer;if(C){if(this.bindViewProjection(D),!B.useUbo||!this.isFrozen||!B.isSync||g._drawWrapper._forceRebindOnNextCall){if(b.FresnelEnabled&&L.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(B.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),B.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&B.updateColor4("opacityParts",new u.VU(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(B.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),B.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(B.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),B.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(B.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),B.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),N.texturesEnabled){if(this._diffuseTexture&&b.DiffuseTextureEnabled&&(B.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,x.t)(this._diffuseTexture,B,"diffuse")),this._ambientTexture&&b.AmbientTextureEnabled&&(B.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,x.t)(this._ambientTexture,B,"ambient")),this._opacityTexture&&b.OpacityTextureEnabled&&(B.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,x.t)(this._opacityTexture,B,"opacity")),this._hasAlphaChannel()&&B.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&b.ReflectionTextureEnabled){if(B.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),B.zg("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const E=this._reflectionTexture;B.updateVector3("vReflectionPosition",E.boundingBoxPosition),B.updateVector3("vReflectionSize",E.boundingBoxSize)}}else B.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&b.EmissiveTextureEnabled&&(B.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,x.t)(this._emissiveTexture,B,"emissive")),this._lightmapTexture&&b.LightmapTextureEnabled&&(B.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,x.t)(this._lightmapTexture,B,"lightmap")),this._specularTexture&&b.SpecularTextureEnabled&&(B.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,x.t)(this._specularTexture,B,"specular")),this._bumpTexture&&N.getEngine().getCaps().standardDerivatives&&b.BumpTextureEnabled&&(B.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,x.t)(this._bumpTexture,B,"bump"),N._mirroredCameraPosition?B.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):B.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&b.RefractionTextureEnabled){let E=1;if(this._refractionTexture.isCube||(B.zg("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(E=this._refractionTexture.depth)),B.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,E,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const E=this._refractionTexture;B.updateVector3("vRefractionPosition",E.boundingBoxPosition),B.updateVector3("vRefractionSize",E.boundingBoxSize)}}}this.pointsCloud&&B.updateFloat("pointSize",this.pointSize),B.updateColor4("vSpecularColor",this.specularColor,this.specularPower),B.updateColor3("vEmissiveColor",b.EmissiveTextureEnabled?this.emissiveColor:u.VU.BlackReadOnly),B.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),N.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),B.updateColor3("vAmbientColor",this._globalAmbientColor)}N.texturesEnabled&&(this._diffuseTexture&&b.DiffuseTextureEnabled&&D.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&b.AmbientTextureEnabled&&D.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&b.OpacityTextureEnabled&&D.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&b.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?D.setTexture("reflectionCubeSampler",this._reflectionTexture):D.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&b.EmissiveTextureEnabled&&D.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&b.LightmapTextureEnabled&&D.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&b.SpecularTextureEnabled&&D.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&N.getEngine().getCaps().standardDerivatives&&b.BumpTextureEnabled&&D.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&b.RefractionTextureEnabled&&(this._refractionTexture.isCube?D.setTexture("refractionCubeSampler",this._refractionTexture):D.setTexture("refraction2DSampler",this._refractionTexture))),this.tE().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(U)&&this.tE().depthPeelingRenderer.bind(D),this._eventInfo.subMesh=g,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,e.e)(D,this,N),this.bindEyePosition(D)}else N.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(C||!this.isFrozen){var P;if(N.lightsEnabled&&!this._disableLighting&&(0,x.j)(N,U,D,L,this._maxSimultaneousLights),(N.fogEnabled&&U.applyFog&&N.fogMode!==S.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||U.receiveShadows||L.PREPASS)&&this.bindView(D),(0,x.f)(N,U,D),L.NUM_MORPH_INFLUENCERS&&(0,x.o)(U,D),L.BAKED_VERTEX_ANIMATION_TEXTURE)null===(P=U.bakedVertexAnimationManager)||void 0===P||P.bind(D,L.INSTANCES);this.useLogarithmicDepth&&(0,x.k)(L,D,N),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(U,this._activeEffect,g),B.update()}getAnimatables(){const E=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&E.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&E.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&E.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&E.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&E.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&E.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&E.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&E.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&E.push(this._refractionTexture),E}getActiveTextures(){const E=super.getActiveTextures();return this._diffuseTexture&&E.push(this._diffuseTexture),this._ambientTexture&&E.push(this._ambientTexture),this._opacityTexture&&E.push(this._opacityTexture),this._reflectionTexture&&E.push(this._reflectionTexture),this._emissiveTexture&&E.push(this._emissiveTexture),this._specularTexture&&E.push(this._specularTexture),this._bumpTexture&&E.push(this._bumpTexture),this._lightmapTexture&&E.push(this._lightmapTexture),this._refractionTexture&&E.push(this._refractionTexture),E}hasTexture(E){return!!super.hasTexture(E)||(this._diffuseTexture===E||(this._ambientTexture===E||(this._opacityTexture===E||(this._reflectionTexture===E||(this._emissiveTexture===E||(this._specularTexture===E||(this._bumpTexture===E||(this._lightmapTexture===E||this._refractionTexture===E))))))))}dispose(E,U){var g,N,L,D,S,u,s,C,B;U&&(null===(g=this._diffuseTexture)||void 0===g||g.dispose(),null===(N=this._ambientTexture)||void 0===N||N.dispose(),null===(L=this._opacityTexture)||void 0===L||L.dispose(),null===(D=this._reflectionTexture)||void 0===D||D.dispose(),null===(S=this._emissiveTexture)||void 0===S||S.dispose(),null===(u=this._specularTexture)||void 0===u||u.dispose(),null===(s=this._bumpTexture)||void 0===s||s.dispose(),null===(C=this._lightmapTexture)||void 0===C||C.dispose(),null===(B=this._refractionTexture)||void 0===B||B.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(E,U)}clone(E){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const N=l.b.Clone((()=>new b(E,this.tE())),this,{cloneTexturesOnlyOnce:U});return N.name=E,N.id=E,this.Vg.copyTo(N.Vg),this._clonePlugins(N,g),N}static Parse(E,U,g){const N=l.b.Parse((()=>new b(E.name,U)),E,U,g);return E.Vg&&N.Vg.parse(E.Vg,U,g),P.b._ParsePlugins(E,N,U,g),N}static get DiffuseTextureEnabled(){return y.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(E){y.e.DiffuseTextureEnabled=E}static get DetailTextureEnabled(){return y.e.DetailTextureEnabled}static set DetailTextureEnabled(E){y.e.DetailTextureEnabled=E}static get AmbientTextureEnabled(){return y.e.AmbientTextureEnabled}static set AmbientTextureEnabled(E){y.e.AmbientTextureEnabled=E}static get OpacityTextureEnabled(){return y.e.OpacityTextureEnabled}static set OpacityTextureEnabled(E){y.e.OpacityTextureEnabled=E}static get ReflectionTextureEnabled(){return y.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(E){y.e.ReflectionTextureEnabled=E}static get EmissiveTextureEnabled(){return y.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(E){y.e.EmissiveTextureEnabled=E}static get SpecularTextureEnabled(){return y.e.SpecularTextureEnabled}static set SpecularTextureEnabled(E){y.e.SpecularTextureEnabled=E}static get BumpTextureEnabled(){return y.e.BumpTextureEnabled}static set BumpTextureEnabled(E){y.e.BumpTextureEnabled=E}static get LightmapTextureEnabled(){return y.e.LightmapTextureEnabled}static set LightmapTextureEnabled(E){y.e.LightmapTextureEnabled=E}static get RefractionTextureEnabled(){return y.e.RefractionTextureEnabled}static set RefractionTextureEnabled(E){y.e.RefractionTextureEnabled=E}static get ColorGradingTextureEnabled(){return y.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(E){y.e.ColorGradingTextureEnabled=E}static get FresnelEnabled(){return y.e.FresnelEnabled}static set FresnelEnabled(E){y.e.FresnelEnabled=E}}b.ForceGLSL=!1,(0,N.e)([(0,L.y)("diffuseTexture")],b.prototype,"_diffuseTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"diffuseTexture",void 0),(0,N.e)([(0,L.y)("ambientTexture")],b.prototype,"_ambientTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"ambientTexture",void 0),(0,N.e)([(0,L.y)("opacityTexture")],b.prototype,"_opacityTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"opacityTexture",void 0),(0,N.e)([(0,L.y)("reflectionTexture")],b.prototype,"_reflectionTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"reflectionTexture",void 0),(0,N.e)([(0,L.y)("emissiveTexture")],b.prototype,"_emissiveTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"emissiveTexture",void 0),(0,N.e)([(0,L.y)("specularTexture")],b.prototype,"_specularTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"specularTexture",void 0),(0,N.e)([(0,L.y)("bumpTexture")],b.prototype,"_bumpTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"bumpTexture",void 0),(0,N.e)([(0,L.y)("lightmapTexture")],b.prototype,"_lightmapTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"lightmapTexture",void 0),(0,N.e)([(0,L.y)("refractionTexture")],b.prototype,"_refractionTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"refractionTexture",void 0),(0,N.e)([(0,L.k)("ambient")],b.prototype,"ambientColor",void 0),(0,N.e)([(0,L.k)("diffuse")],b.prototype,"diffuseColor",void 0),(0,N.e)([(0,L.k)("specular")],b.prototype,"specularColor",void 0),(0,N.e)([(0,L.k)("emissive")],b.prototype,"emissiveColor",void 0),(0,N.e)([(0,L.E)()],b.prototype,"specularPower",void 0),(0,N.e)([(0,L.E)("useAlphaFromDiffuseTexture")],b.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"useAlphaFromDiffuseTexture",void 0),(0,N.e)([(0,L.E)("useEmissiveAsIllumination")],b.prototype,"_useEmissiveAsIllumination",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useEmissiveAsIllumination",void 0),(0,N.e)([(0,L.E)("linkEmissiveWithDiffuse")],b.prototype,"_linkEmissiveWithDiffuse",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"linkEmissiveWithDiffuse",void 0),(0,N.e)([(0,L.E)("useSpecularOverAlpha")],b.prototype,"_useSpecularOverAlpha",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useSpecularOverAlpha",void 0),(0,N.e)([(0,L.E)("useReflectionOverAlpha")],b.prototype,"_useReflectionOverAlpha",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useReflectionOverAlpha",void 0),(0,N.e)([(0,L.E)("disableLighting")],b.prototype,"_disableLighting",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsLightsDirty")],b.prototype,"disableLighting",void 0),(0,N.e)([(0,L.E)("useObjectSpaceNormalMap")],b.prototype,"_useObjectSpaceNormalMap",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useObjectSpaceNormalMap",void 0),(0,N.e)([(0,L.E)("useParallax")],b.prototype,"_useParallax",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useParallax",void 0),(0,N.e)([(0,L.E)("useParallaxOcclusion")],b.prototype,"_useParallaxOcclusion",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useParallaxOcclusion",void 0),(0,N.e)([(0,L.E)()],b.prototype,"parallaxScaleBias",void 0),(0,N.e)([(0,L.E)("roughness")],b.prototype,"_roughness",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"roughness",void 0),(0,N.e)([(0,L.E)()],b.prototype,"indexOfRefraction",void 0),(0,N.e)([(0,L.E)()],b.prototype,"invertRefractionY",void 0),(0,N.e)([(0,L.E)()],b.prototype,"alphaCutOff",void 0),(0,N.e)([(0,L.E)("useLightmapAsShadowmap")],b.prototype,"_useLightmapAsShadowmap",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useLightmapAsShadowmap",void 0),(0,N.e)([(0,L.p)("diffuseFresnelParameters")],b.prototype,"_diffuseFresnelParameters",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"diffuseFresnelParameters",void 0),(0,N.e)([(0,L.p)("opacityFresnelParameters")],b.prototype,"_opacityFresnelParameters",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],b.prototype,"opacityFresnelParameters",void 0),(0,N.e)([(0,L.p)("reflectionFresnelParameters")],b.prototype,"_reflectionFresnelParameters",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"reflectionFresnelParameters",void 0),(0,N.e)([(0,L.p)("refractionFresnelParameters")],b.prototype,"_refractionFresnelParameters",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"refractionFresnelParameters",void 0),(0,N.e)([(0,L.p)("emissiveFresnelParameters")],b.prototype,"_emissiveFresnelParameters",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"emissiveFresnelParameters",void 0),(0,N.e)([(0,L.E)("useReflectionFresnelFromSpecular")],b.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"useReflectionFresnelFromSpecular",void 0),(0,N.e)([(0,L.E)("useGlossinessFromSpecularMapAlpha")],b.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,N.e)([(0,L.E)("maxSimultaneousLights")],b.prototype,"_maxSimultaneousLights",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsLightsDirty")],b.prototype,"maxSimultaneousLights",void 0),(0,N.e)([(0,L.E)("invertNormalMapX")],b.prototype,"_invertNormalMapX",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"invertNormalMapX",void 0),(0,N.e)([(0,L.E)("invertNormalMapY")],b.prototype,"_invertNormalMapY",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"invertNormalMapY",void 0),(0,N.e)([(0,L.E)("twoSidedLighting")],b.prototype,"_twoSidedLighting",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"twoSidedLighting",void 0),(0,N.e)([(0,L.E)("applyDecalMapAfterDetailMap")],b.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,N.e)([(0,L.d)("_markAllSubMeshesAsMiscDirty")],b.prototype,"applyDecalMapAfterDetailMap",void 0),(0,I.f)("BABYLON.StandardMaterial",b),S.c.DefaultMaterialFactory=E=>new b("default material",E)}}]);