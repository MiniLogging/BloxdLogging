"use strict";(self.dwifukwnts=self.dwifukwnts||[]).push([[25],{11997:(U,X,b)=>{b.d(X,{b:()=>R});var F=b(11576),E=b(11928),w=b(11583),Q=b(11994),z=b(11987),q=b(12006),p=b(11969);class S extends z.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class R extends q.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(U){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(U,"DetailMap",140,new S,X),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=E.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=U._dirtyCallbacks[1]}isReadyForSubMesh(U,X,b){return!this._isEnabled||!(U._areTexturesDirty&&X.texturesEnabled&&b.getCaps().standardDerivatives&&this._texture&&Q.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(U,X){if(this._isEnabled){U.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const b=X.getEngine();U._areTexturesDirty&&(b.getCaps().standardDerivatives&&this._texture&&Q.b.DetailTextureEnabled&&this._isEnabled?((0,p.S)(this._texture,U,"DETAIL"),U.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):U.DETAIL=!1)}else U.DETAIL=!1}bindForSubMesh(U,X){if(!this._isEnabled)return;const b=this._material.isFrozen;U.useUbo&&b&&U.isSync||this._texture&&Q.b.DetailTextureEnabled&&(U.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,p.u)(this._texture,U,"detail")),X.texturesEnabled&&this._texture&&Q.b.DetailTextureEnabled&&U.setTexture("detailSampler",this._texture)}hasTexture(U){return this._texture===U}getActiveTextures(U){this._texture&&U.push(this._texture)}getAnimatables(U){this._texture&&this._texture.animations&&this._texture.animations.length>0&&U.push(this._texture)}dispose(U){var X;U&&(null===(X=this._texture)||void 0===X||X.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(U){U.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,F.c)([(0,w.A)("detailTexture"),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"texture",void 0),(0,F.c)([(0,w.J)()],R.prototype,"diffuseBlendLevel",void 0),(0,F.c)([(0,w.J)()],R.prototype,"roughnessBlendLevel",void 0),(0,F.c)([(0,w.J)()],R.prototype,"bumpLevel",void 0),(0,F.c)([(0,w.J)(),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"normalBlendMethod",void 0),(0,F.c)([(0,w.J)(),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"isEnabled",void 0)},11987:(U,X,b)=>{b.d(X,{b:()=>F});class F{constructor(U){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=U,U)for(const X in U)Object.prototype.hasOwnProperty.call(U,X)&&this._setDefaultValue(X)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||U,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const U of Object.keys(this))"_"!==U[0]&&this._keys.push(U);if(this._externalProperties)for(const U in this._externalProperties)-1===this._keys.indexOf(U)&&this._keys.push(U)}isEqual(U){if(this._keys.length!==U._keys.length)return!1;for(let X=0;X<this._keys.length;X++){const b=this._keys[X];if(this[b]!==U[b])return!1}return!0}cloneTo(U){this._keys.length!==U._keys.length&&(U._keys=this._keys.slice(0));for(let X=0;X<this._keys.length;X++){const b=this._keys[X];U[b]=this[b]}}reset(){for(const U of this._keys)this._setDefaultValue(U)}_setDefaultValue(U){var X,b,F,E;const w=(null===(X=this._externalProperties)||void 0===X||null===(b=X[U])||void 0===b?void 0:b.type)??typeof this[U],Q=null===(F=this._externalProperties)||void 0===F||null===(E=F[U])||void 0===E?void 0:E.default;switch(w){case"number":this[U]=Q??0;break;case"string":this[U]=Q??"";break;default:this[U]=Q??!1}}toString(){let U="";for(let X=0;X<this._keys.length;X++){const b=this._keys[X],F=this[b];switch(typeof F){case"number":case"string":U+="#define "+b+" "+F+"\n";break;default:F&&(U+="#define "+b+"\n")}}return U}}},11994:(U,X,b)=>{b.d(X,{b:()=>E});var F=b(11487);class E{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(U){this._DiffuseTextureEnabled!==U&&(this._DiffuseTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(U){this._BaseWeightTextureEnabled!==U&&(this._BaseWeightTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(U){this._BaseDiffuseRoughnessTextureEnabled!==U&&(this._BaseDiffuseRoughnessTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(U){this._DetailTextureEnabled!==U&&(this._DetailTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(U){this._DecalMapEnabled!==U&&(this._DecalMapEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(U){this._AmbientTextureEnabled!==U&&(this._AmbientTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(U){this._OpacityTextureEnabled!==U&&(this._OpacityTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(U){this._ReflectionTextureEnabled!==U&&(this._ReflectionTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(U){this._EmissiveTextureEnabled!==U&&(this._EmissiveTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(U){this._SpecularTextureEnabled!==U&&(this._SpecularTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(U){this._BumpTextureEnabled!==U&&(this._BumpTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(U){this._LightmapTextureEnabled!==U&&(this._LightmapTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(U){this._RefractionTextureEnabled!==U&&(this._RefractionTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(U){this._ColorGradingTextureEnabled!==U&&(this._ColorGradingTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(U){this._FresnelEnabled!==U&&(this._FresnelEnabled=U,F.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(U){this._ClearCoatTextureEnabled!==U&&(this._ClearCoatTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(U){this._ClearCoatBumpTextureEnabled!==U&&(this._ClearCoatBumpTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(U){this._ClearCoatTintTextureEnabled!==U&&(this._ClearCoatTintTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(U){this._SheenTextureEnabled!==U&&(this._SheenTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(U){this._AnisotropicTextureEnabled!==U&&(this._AnisotropicTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(U){this._ThicknessTextureEnabled!==U&&(this._ThicknessTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(U){this._RefractionIntensityTextureEnabled!==U&&(this._RefractionIntensityTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(U){this._TranslucencyIntensityTextureEnabled!==U&&(this._TranslucencyIntensityTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(U){this._TranslucencyColorTextureEnabled!==U&&(this._TranslucencyColorTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(U){this._IridescenceTextureEnabled!==U&&(this._IridescenceTextureEnabled=U,F.e.MarkAllMaterialsAsDirty(1))}}E._DiffuseTextureEnabled=!0,E._BaseWeightTextureEnabled=!0,E._BaseDiffuseRoughnessTextureEnabled=!0,E._DetailTextureEnabled=!0,E._DecalMapEnabled=!0,E._AmbientTextureEnabled=!0,E._OpacityTextureEnabled=!0,E._ReflectionTextureEnabled=!0,E._EmissiveTextureEnabled=!0,E._SpecularTextureEnabled=!0,E._BumpTextureEnabled=!0,E._LightmapTextureEnabled=!0,E._RefractionTextureEnabled=!0,E._ColorGradingTextureEnabled=!0,E._FresnelEnabled=!0,E._ClearCoatTextureEnabled=!0,E._ClearCoatBumpTextureEnabled=!0,E._ClearCoatTintTextureEnabled=!0,E._SheenTextureEnabled=!0,E._AnisotropicTextureEnabled=!0,E._ThicknessTextureEnabled=!0,E._RefractionIntensityTextureEnabled=!0,E._TranslucencyIntensityTextureEnabled=!0,E._TranslucencyColorTextureEnabled=!0,E._IridescenceTextureEnabled=!0},12015:(U,X,b)=>{b.d(X,{e:()=>w});var F,E=b(11593);!function(U){U[U.Zero=0]="Zero",U[U.One=1]="One",U[U.MaxViewZ=2]="MaxViewZ"}(F||(F={}));class w{static CreateConfiguration(U){return w._Configurations[U]={defines:{},previousWorldMatrices:{},previousViewProjection:E.Matrix.Zero(),currentViewProjection:E.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},w._Configurations[U]}static DeleteConfiguration(U){delete w._Configurations[U]}static GetConfiguration(U){return w._Configurations[U]}static AddUniformsAndSamplers(U,X){U.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(U,X){for(const b of X)if(b.ab)for(const X of b.ab)X._removeDrawWrapper(U)}static PrepareDefines(U,X,b){if(!b._arePrePassDirty)return;const F=w._Configurations[U];if(!F)return;b.PREPASS=!0,b.PREPASS_COLOR=!1,b.PREPASS_COLOR_INDEX=-1;let E=0;for(let Q=0;Q<w.GeometryTextureDescriptions.length;Q++){const U=w.GeometryTextureDescriptions[Q],X=U.define,z=U.defineIndex,q=F.defines[z];void 0!==q?(b[X]=!0,b[z]=q,E++):(b[X]=!1,delete b[z])}b.SCENE_MRT_COUNT=E,b.BONES_VELOCITY_ENABLED=X.useBones&&X.computeBonesUsingShaders&&X.skeleton&&!X.skeleton.isUsingTextureForMatrices&&-1===F.excludedSkinnedMesh.indexOf(X)}static Bind(U,X,b,F,E){const Q=w._Configurations[U];if(!Q)return;const z=b.fU(),q=z.getEngine();if(Q.reverseCulling&&q.setStateCullFaceType(z._mirroredCameraPosition?E.cullBackFaces:!E.cullBackFaces),(void 0!==Q.defines.PREPASS_VELOCITY_INDEX||void 0!==Q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Q.previousWorldMatrices[b.uniqueId]||(Q.previousWorldMatrices[b.uniqueId]=F.clone()),Q.previousViewProjection||(Q.previousViewProjection=z.getTransformMatrix().clone(),Q.currentViewProjection=z.getTransformMatrix().clone()),Q.currentViewProjection.updateFlag!==z.getTransformMatrix().updateFlag?(Q.lastUpdateFrameId=q.frameId,Q.previousViewProjection.q(Q.currentViewProjection),Q.currentViewProjection.q(z.getTransformMatrix())):Q.lastUpdateFrameId!==q.frameId&&(Q.lastUpdateFrameId=q.frameId,Q.previousViewProjection.q(Q.currentViewProjection)),X.setMatrix("previousWorld",Q.previousWorldMatrices[b.uniqueId]),X.setMatrix("previousViewProjection",Q.previousViewProjection),Q.previousWorldMatrices[b.uniqueId]=F.clone(),b.useBones&&b.computeBonesUsingShaders&&b.skeleton)){const U=b.skeleton;if(!U.isUsingTextureForMatrices||-1===X.getUniformIndex("boneTextureWidth")){const F=U.getTransformMatrices(b);F&&(Q.previousBones[b.uniqueId]||(Q.previousBones[b.uniqueId]=F.slice()),X.setMatrices("mPreviousBones",Q.previousBones[b.uniqueId]),Q.previousBones[b.uniqueId].set(F))}}}}w.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],w._Configurations={}},12006:(U,X,b)=>{b.d(X,{c:()=>I});var F=b(11576),E=b(11583),w=b(11928),Q=b(11442),z=b(11469),q=b(11499);const p=new RegExp("^([gimus]+)!");class S{constructor(U){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=U,this._scene=U.fU(),this._engine=this._scene.getEngine()}_addPlugin(U){for(let F=0;F<this._plugins.length;++F)if(this._plugins[F].name===U.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!U.isCompatible(this._material.shaderLanguage))throw`The plugin "${U.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const X=U.getClassName();S._MaterialPluginClassToMainDefine[X]||(S._MaterialPluginClassToMainDefine[X]="MATERIALPLUGIN_"+ ++S._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(U,X)=>this._handlePluginEvent(U,X),this._plugins.push(U),this._plugins.sort(((U,X)=>U.priority-X.priority)),this._codeInjectionPoints={};const b={};b[S._MaterialPluginClassToMainDefine[X]]={type:"boolean",default:!0};for(const F of this._plugins)F.collectDefines(b),this._collectPointNames("vertex",F.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",F.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=b,!0}_activatePlugin(U){-1===this._activePlugins.indexOf(U)&&(this._activePlugins.push(U),this._activePlugins.sort(((U,X)=>U.priority-X.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),U.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(U),this._activePluginsForExtraEvents.sort(((U,X)=>U.priority-X.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(U){for(let X=0;X<this._plugins.length;++X)if(this._plugins[X].name===U)return this._plugins[X];return null}_handlePluginEventIsReadyForSubMesh(U){let X=!0;for(const b of this._activePlugins)X=X&&b.isReadyForSubMesh(U.defines,this._scene,this._engine,U.subMesh);U.isReadyForSubMesh=X}_handlePluginEventPrepareDefinesBeforeAttributes(U){for(const X of this._activePlugins)X.prepareDefinesBeforeAttributes(U.defines,this._scene,U.mesh)}_handlePluginEventPrepareDefines(U){for(const X of this._activePlugins)X.prepareDefines(U.defines,this._scene,U.mesh)}_handlePluginEventHardBindForSubMesh(U){for(const X of this._activePluginsForExtraEvents)X.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,U.subMesh)}_handlePluginEventBindForSubMesh(U){for(const X of this._activePlugins)X.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,U.subMesh)}_handlePluginEventHasRenderTargetTextures(U){let X=!1;for(const b of this._activePluginsForExtraEvents)if(X=b.hasRenderTargetTextures(),X)break;U.hasRenderTargetTextures=X}_handlePluginEventFillRenderTargetTextures(U){for(const X of this._activePluginsForExtraEvents)X.fillRenderTargetTextures(U.renderTargets)}_handlePluginEvent(U,X){switch(U){case 512:{const U=X;for(const X of this._activePlugins)X.getActiveTextures(U.activeTextures);break}case 256:{const U=X;for(const X of this._activePlugins)X.getAnimatables(U.animatables);break}case 1024:{const U=X;let b=!1;for(const X of this._activePlugins)if(b=X.hasTexture(U.texture),b)break;U.hasTexture=b;break}case 2:{const U=X;for(const X of this._plugins)X.dispose(U.forceDisposeTextures);break}case 4:X.defineNames=this._defineNamesFromPlugins;break;case 128:{const U=X;for(const X of this._activePlugins)U.fallbackRank=X.addFallbacks(U.defines,U.fallbacks,U.fallbackRank),X.getAttributes(U.attributes,this._scene,U.mesh);this._uniformList.length>0&&U.uniforms.push(...this._uniformList),this._samplerList.length>0&&U.samplers.push(...this._samplerList),this._uboList.length>0&&U.uniformBuffersNames.push(...this._uboList),U.customCode=this._injectCustomCode(U,U.customCode);break}case 8:{const U=X;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const b=1===this._material.shaderLanguage;for(const X of this._plugins){const F=X.getUniforms(this._material.shaderLanguage);if(F){if(F.ubo)for(const X of F.ubo){if(X.size&&X.type){const F=X.arraySize??0;if(U.ubo.addUniform(X.name,X.size,F),b){let U;switch(X.type){case"mat4":U="mat4x4f";break;case"float":U="f32";break;default:U=`${X.type}f`}this._uboDeclaration+=F>0?`uniform ${X.name}: array<${U}, ${F}>;\n`:`uniform ${X.name}: ${U};\n`}else this._uboDeclaration+=`${X.type} ${X.name}${F>0?`[${F}]`:""};\n`}this._uniformList.push(X.name)}F.vertex&&(this._vertexDeclaration+=F.vertex+"\n"),F.fragment&&(this._fragmentDeclaration+=F.fragment+"\n")}X.getSamplers(this._samplerList),X.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(U,X){if(X)for(const b in X)this._codeInjectionPoints[U]||(this._codeInjectionPoints[U]={}),this._codeInjectionPoints[U][b]=!0}_injectCustomCode(U,X){return(b,F)=>{var E;X&&(F=X(b,F)),this._uboDeclaration&&(F=F.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(F=F.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(F=F.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const w=null===(E=this._codeInjectionPoints)||void 0===E?void 0:E[b];if(!w)return F;let Q=null;for(let X in w){let E="";for(const F of this._activePlugins){var S;let w=null===(S=F.getCustomCode(b,this._material.shaderLanguage))||void 0===S?void 0:S[X];if(w){if(F.resolveIncludes){if(null===Q){const X=0;Q={defines:[],indexParameters:U.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:q.c.GetShadersRepository(X),includesShadersStore:q.c.GetIncludesShadersStore(X),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}Q.isFragment="fragment"===b,(0,z.j)(w,Q,(U=>w=U))}E+=w+"\n"}}if(E.length>0)if("!"===X.charAt(0)){X=X.substring(1);let U="g";if("!"===X.charAt(0))U="",X=X.substring(1);else{const b=p.exec(X);b&&b.length>=2&&(U=b[1],X=X.substring(U.length+1))}U.indexOf("g")<0&&(U+="g");const b=F,w=new RegExp(X,U);let Q=w.exec(b);for(;null!==Q;){let U=E;for(let X=0;X<Q.length;++X)U=U.replace("$"+X,Q[X]);F=F.replace(Q[0],U),Q=w.exec(b)}}else{const U="#define "+X;F=F.replace(U,"\n"+E+"\n"+U)}}return F}}}S._MaterialPluginClassToMainDefine={},S._MaterialPluginCounter=0,Q.c.OnEnginesDisposedObservable.add((()=>{J()}));const R=[];let n=!1,a=null;function J(){R.length=0,n=!1,w.e.OnEventObservable.remove(a),a=null}var m=b(11623),x=b(11551);class I{isCompatible(U){return 0===U}_enable(U){U&&this._pluginManager._activatePlugin(this)}constructor(U,X,b,F){let E=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=U,this.name=X,this.priority=b,this.resolveIncludes=Q,U.pluginManager||(U.pluginManager=new S(U),U.wb.add((()=>{U.pluginManager=void 0}))),this._pluginDefineNames=F,this._pluginManager=U.pluginManager,E&&this._pluginManager._addPlugin(this),w&&this._enable(!0),this.markAllDefinesAsDirty=U._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(U,X,b,F){return!0}hardBindForSubMesh(U,X,b,F){}bindForSubMesh(U,X,b,F){}dispose(U){}getCustomCode(U){return null}collectDefines(U){if(this._pluginDefineNames)for(const X of Object.keys(this._pluginDefineNames)){if("_"===X[0])continue;const b=typeof this._pluginDefineNames[X];U[X]={type:"number"===b?"number":"string"===b?"string":"boolean"===b?"boolean":"object",default:this._pluginDefineNames[X]}}}prepareDefinesBeforeAttributes(U,X,b){}prepareDefines(U,X,b){}hasTexture(U){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(U){}getActiveTextures(U){}getAnimatables(U){}addFallbacks(U,X,b){return b}getSamplers(U){}getAttributes(U,X,b){}getUniformBuffersNames(U){}getUniforms(){return{}}copyTo(U){m.d.Clone((()=>U),this)}serialize(){return m.d.Serialize(this)}parse(U,X,b){m.d.Parse((()=>this),U,X,b)}}(0,F.c)([(0,E.J)()],I.prototype,"name",void 0),(0,F.c)([(0,E.J)()],I.prototype,"priority",void 0),(0,F.c)([(0,E.J)()],I.prototype,"resolveIncludes",void 0),(0,F.c)([(0,E.J)()],I.prototype,"registerForExtraEvents",void 0),(0,x.f)("BABYLON.MaterialPluginBase",I)},11983:(U,X,b)=>{b.d(X,{e:()=>F});class F{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(U){U.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(U){}bindForSubMesh(U,X,b,F,E){if(X.prePassRenderer&&X.prePassRenderer.enabled&&X.prePassRenderer.currentRTisSceneRT&&(-1!==X.prePassRenderer.getIndex(2)||-1!==X.prePassRenderer.getIndex(11))){this.previousWorldMatrices[b.uniqueId]||(this.previousWorldMatrices[b.uniqueId]=F.clone()),this.previousViewProjection||(this.previousViewProjection=X.getTransformMatrix().clone(),this.currentViewProjection=X.getTransformMatrix().clone());const E=X.getEngine();this.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(X.getTransformMatrix())):this._lastUpdateFrameId!==E.frameId&&(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.q(this.currentViewProjection)),U.setMatrix("previousWorld",this.previousWorldMatrices[b.uniqueId]),U.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[b.uniqueId]=F.clone()}}}},11975:(U,X,b)=>{b.d(X,{OX:()=>e});var F=b(11576),E=b(11583),w=b(11679),Q=b(11833),z=b(11636),q=b(11664),p=b(11983),S=b(11840),R=b(11928),n=b(11987),a=b(11922),J=b(11570),m=b(11551),x=b(11994),I=b(11916),O=b(11997),N=b(11972),u=b(11969),i=b(11623),P=b(12015);const f={effect:null,subMesh:null};class j extends n.b{constructor(U){super(U),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(U){const X=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const b of X)this[b]=b===U}}class e extends a.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(U){this._attachImageProcessingConfiguration(U),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(U){U!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=U||this.fU().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(U){this.imageProcessingConfiguration.colorCurvesEnabled=U}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(U){this.imageProcessingConfiguration.colorGradingEnabled=U}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(U){this._imageProcessingConfiguration.toneMappingEnabled=U}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(U){this._imageProcessingConfiguration.exposure=U}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(U){this._imageProcessingConfiguration.contrast=U}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(U){this._imageProcessingConfiguration.colorGradingTexture=U}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(U){this._imageProcessingConfiguration.colorCurves=U}get canRenderToMRT(){return!0}constructor(U,X){super(U,X,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||e.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new z.NX(0,0,0),this.diffuseColor=new z.NX(1,1,1),this.specularColor=new z.NX(1,1,1),this.emissiveColor=new z.NX(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new w.d(16),this._globalAmbientColor=new z.NX(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new O.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new p.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),e.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),e.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(e.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(e.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"OX"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===R.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.mb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==R.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.mb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(U,X){let F=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const E=X._drawWrapper;if(E.effect&&this.isFrozen&&E._wasPreviouslyReady&&E._wasPreviouslyUsingInstances===F)return!0;X.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),X.materialDefines=new j(this._eventInfo.defineNames));const w=this.fU(),Q=X.materialDefines;if(this._isReadyForSubMesh(X))return!0;const z=w.getEngine();Q._needNormals=(0,u.P)(w,U,Q,!0,this._maxSimultaneousLights,this._disableLighting),(0,u.V)(w,Q);const R=this.needAlphaBlendingForMesh(U)&&this.fU().useOrderIndependentTransparency;if((0,u._)(w,Q,this.canRenderToMRT&&!R),(0,u.X)(w,Q,R),P.e.PrepareDefines(z.currentRenderPassId,U,Q),Q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Q._needUVs=!1;for(let U=1;U<=6;++U)Q["MAINUV"+U]=!1;if(w.texturesEnabled){if(Q.DIFFUSEDIRECTUV=0,Q.BUMPDIRECTUV=0,Q.AMBIENTDIRECTUV=0,Q.OPACITYDIRECTUV=0,Q.EMISSIVEDIRECTUV=0,Q.SPECULARDIRECTUV=0,Q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&e.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._diffuseTexture,Q,"DIFFUSE")}else Q.DIFFUSE=!1;if(this._ambientTexture&&e.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._ambientTexture,Q,"AMBIENT")}else Q.AMBIENT=!1;if(this._opacityTexture&&e.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._opacityTexture,Q,"OPACITY"),Q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Q.OPACITY=!1;if(this._reflectionTexture&&e.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Q._needNormals=!0,Q.REFLECTION=!0,Q.ROUGHNESS=this._roughness>0,Q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===J.c.INVCUBIC_MODE,Q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Q.REFLECTIONMAP_OPPOSITEZ=Q.REFLECTIONMAP_3D&&this.fU().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case J.c.EXPLICIT_MODE:Q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case J.c.PLANAR_MODE:Q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case J.c.PROJECTION_MODE:Q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case J.c.SKYBOX_MODE:Q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case J.c.SPHERICAL_MODE:Q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case J.c.EQUIRECTANGULAR_MODE:Q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case J.c.FIXED_EQUIRECTANGULAR_MODE:Q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case J.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case J.c.CUBIC_MODE:case J.c.INVCUBIC_MODE:default:Q.setReflectionMode("REFLECTIONMAP_CUBIC")}Q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Q.REFLECTION=!1,Q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&e.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._emissiveTexture,Q,"EMISSIVE")}else Q.EMISSIVE=!1;if(this._lightmapTexture&&e.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._lightmapTexture,Q,"LIGHTMAP"),Q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Q.LIGHTMAP=!1;if(this._specularTexture&&e.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,u.S)(this._specularTexture,Q,"SPECULAR"),Q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Q.SPECULAR=!1;if(w.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&e.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,u.S)(this._bumpTexture,Q,"BUMP"),Q.PARALLAX=this._useParallax,Q.PARALLAX_RHS=w.useRightHandedSystem,Q.PARALLAXOCCLUSION=this._useParallaxOcclusion,Q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Q.BUMP=!1,Q.PARALLAX=!1,Q.PARALLAX_RHS=!1,Q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&e.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Q._needUVs=!0,Q.REFRACTION=!0,Q.REFRACTIONMAP_3D=this._refractionTexture.isCube,Q.RGBDREFRACTION=this._refractionTexture.isRGBD,Q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Q.REFRACTION=!1;Q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Q.DIFFUSE=!1,Q.AMBIENT=!1,Q.OPACITY=!1,Q.REFLECTION=!1,Q.EMISSIVE=!1,Q.LIGHTMAP=!1,Q.BUMP=!1,Q.REFRACTION=!1;Q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Q.SPECULAROVERALPHA=this._useSpecularOverAlpha,Q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(U)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Q,this._eventInfo.subMesh=X,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Q),Q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Q._areFresnelDirty&&(e.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Q._needNormals=!0,Q.FRESNEL=!0):Q.FRESNEL=!1),Q.AREALIGHTUSED)for(let b=0;b<U.lightSources.length;b++)if(!U.lightSources[b]._isReady())return!1;(0,u.T)(U,w,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(U),Q,this._applyDecalMapAfterDetailMap),(0,u.O)(w,z,this,Q,F,null,X.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Q,this._eventInfo.mesh=U,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,u.N)(U,Q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let n=!1;if(Q.isDirty){const F=Q._areLightsDisposed;Q.markAsProcessed();const E=new I.d;Q.REFLECTION&&E.addFallback(0,"REFLECTION"),Q.SPECULAR&&E.addFallback(0,"SPECULAR"),Q.BUMP&&E.addFallback(0,"BUMP"),Q.PARALLAX&&E.addFallback(1,"PARALLAX"),Q.PARALLAX_RHS&&E.addFallback(1,"PARALLAX_RHS"),Q.PARALLAXOCCLUSION&&E.addFallback(0,"PARALLAXOCCLUSION"),Q.SPECULAROVERALPHA&&E.addFallback(0,"SPECULAROVERALPHA"),Q.FOG&&E.addFallback(1,"FOG"),Q.POINTSIZE&&E.addFallback(0,"POINTSIZE"),Q.LOGARITHMICDEPTH&&E.addFallback(0,"LOGARITHMICDEPTH"),(0,u.w)(Q,E,this._maxSimultaneousLights),Q.SPECULARTERM&&E.addFallback(0,"SPECULARTERM"),Q.DIFFUSEFRESNEL&&E.addFallback(1,"DIFFUSEFRESNEL"),Q.OPACITYFRESNEL&&E.addFallback(2,"OPACITYFRESNEL"),Q.REFLECTIONFRESNEL&&E.addFallback(3,"REFLECTIONFRESNEL"),Q.EMISSIVEFRESNEL&&E.addFallback(4,"EMISSIVEFRESNEL"),Q.FRESNEL&&E.addFallback(4,"FRESNEL"),Q.MULTIVIEW&&E.addFallback(0,"MULTIVIEW");const R=[q.h.PositionKind];Q.NORMAL&&R.push(q.h.NormalKind),Q.TANGENT&&R.push(q.h.TangentKind);for(let U=1;U<=6;++U)Q["UV"+U]&&R.push(`uv${1===U?"":U}`);Q.VERTEXCOLOR&&R.push(q.h.ColorKind),(0,u.E)(R,U,Q,E),(0,u.F)(R,Q),(0,u.J)(R,U,Q),(0,u.A)(R,U,Q);let a="default";const J=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],m=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],x=["Material","Scene","Mesh"],O={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=E,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Q,this._eventInfo.uniforms=J,this._eventInfo.attributes=R,this._eventInfo.samplers=m,this._eventInfo.uniformBuffersNames=x,this._eventInfo.customCode=void 0,this._eventInfo.mesh=U,this._eventInfo.indexParameters=O,this._callbackPluginEventGeneric(128,this._eventInfo),P.e.AddUniformsAndSamplers(J,m),p.e.AddUniforms(J),p.e.AddSamplers(m),S.d&&(S.d.PrepareUniforms(J,Q),S.d.PrepareSamplers(m,Q)),(0,u.$)({uniformsNames:J,uniformBuffersNames:x,samplers:m,defines:Q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,N.b)(J);const i={};this.customShaderNameResolve&&(a=this.customShaderNameResolve(a,J,x,m,Q,R,i));const j=Q.toString(),e=X.effect;let l=w.getEngine().createEffect(a,{attributes:R,uniformsNames:J,uniformBuffersNames:x,samplers:m,defines:j,fallbacks:E,onCompiled:this.onCompiled,onError:this.onError,indexParameters:O,processFinalCode:i.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([b.e(41),b.e(64)]).then(b.bind(b,14136)),Promise.all([b.e(39),b.e(65)]).then(b.bind(b,14301))]):await Promise.all([Promise.all([b.e(34),b.e(67)]).then(b.bind(b,14379)),Promise.all([b.e(33),b.e(68)]).then(b.bind(b,14561))]),this._shadersLoaded=!0}},z);if(this._eventInfo.customCode=void 0,l)if(this._onEffectCreatedObservable&&(f.effect=l,f.subMesh=X,this._onEffectCreatedObservable.notifyObservers(f)),this.allowShaderHotSwapping&&e&&!l.isReady()){if(l=e,Q.markAsUnprocessed(),n=this.isFrozen,F)return Q._areLightsDisposed=!0,!1}else w.resetCachedMaterial(),X.setEffect(l,Q,this._materialContext)}return!(!X.effect||!X.effect.isReady())&&(Q._renderId=w.getRenderId(),E._wasPreviouslyReady=!n,E._wasPreviouslyUsingInstances=F,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const U=this._uniformBuffer;U.addUniform("diffuseLeftColor",4),U.addUniform("diffuseRightColor",4),U.addUniform("opacityParts",4),U.addUniform("reflectionLeftColor",4),U.addUniform("reflectionRightColor",4),U.addUniform("refractionLeftColor",4),U.addUniform("refractionRightColor",4),U.addUniform("emissiveLeftColor",4),U.addUniform("emissiveRightColor",4),U.addUniform("vDiffuseInfos",2),U.addUniform("vAmbientInfos",2),U.addUniform("vOpacityInfos",2),U.addUniform("vReflectionInfos",2),U.addUniform("vReflectionPosition",3),U.addUniform("vReflectionSize",3),U.addUniform("vEmissiveInfos",2),U.addUniform("vLightmapInfos",2),U.addUniform("vSpecularInfos",2),U.addUniform("vBumpInfos",3),U.addUniform("diffuseMatrix",16),U.addUniform("ambientMatrix",16),U.addUniform("opacityMatrix",16),U.addUniform("reflectionMatrix",16),U.addUniform("emissiveMatrix",16),U.addUniform("lightmapMatrix",16),U.addUniform("specularMatrix",16),U.addUniform("bumpMatrix",16),U.addUniform("vTangentSpaceParams",2),U.addUniform("pointSize",1),U.addUniform("alphaCutOff",1),U.addUniform("refractionMatrix",16),U.addUniform("vRefractionInfos",4),U.addUniform("vRefractionPosition",3),U.addUniform("vRefractionSize",3),U.addUniform("vSpecularColor",4),U.addUniform("vEmissiveColor",3),U.addUniform("vDiffuseColor",4),U.addUniform("vAmbientColor",3),U.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(U,X,b){const F=this.fU(),E=b.materialDefines;if(!E)return;const w=b.effect;if(!w)return;this._activeEffect=w,X.getMeshUniformBuffer().bindToEffect(w,"Mesh"),X.transferToEffect(U),this._uniformBuffer.bindToEffect(w,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,F,X,U,this.isFrozen),P.e.Bind(F.getEngine().currentRenderPassId,this._activeEffect,X,U,this);const q=F.activeCamera;q?this._uniformBuffer.updateFloat4("cameraInfo",q.xb,q.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=b,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),E.OBJECTSPACE_NORMALMAP&&(U.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const p=this._mustRebind(F,w,b,X.visibility);(0,u.e)(X,w);const S=this._uniformBuffer;if(p){if(this.bindViewProjection(w),!S.useUbo||!this.isFrozen||!S.isSync||b._drawWrapper._forceRebindOnNextCall){if(e.FresnelEnabled&&E.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(S.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),S.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&S.updateColor4("opacityParts",new z.NX(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(S.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),S.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(S.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),S.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(S.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),S.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),F.texturesEnabled){if(this._diffuseTexture&&e.DiffuseTextureEnabled&&(S.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,u.u)(this._diffuseTexture,S,"diffuse")),this._ambientTexture&&e.AmbientTextureEnabled&&(S.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,u.u)(this._ambientTexture,S,"ambient")),this._opacityTexture&&e.OpacityTextureEnabled&&(S.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,u.u)(this._opacityTexture,S,"opacity")),this._hasAlphaChannel()&&S.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&e.ReflectionTextureEnabled){if(S.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),S.Ib("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const U=this._reflectionTexture;S.updateVector3("vReflectionPosition",U.boundingBoxPosition),S.updateVector3("vReflectionSize",U.boundingBoxSize)}}else S.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&e.EmissiveTextureEnabled&&(S.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,u.u)(this._emissiveTexture,S,"emissive")),this._lightmapTexture&&e.LightmapTextureEnabled&&(S.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,u.u)(this._lightmapTexture,S,"lightmap")),this._specularTexture&&e.SpecularTextureEnabled&&(S.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,u.u)(this._specularTexture,S,"specular")),this._bumpTexture&&F.getEngine().getCaps().standardDerivatives&&e.BumpTextureEnabled&&(S.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,u.u)(this._bumpTexture,S,"bump"),F._mirroredCameraPosition?S.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):S.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&e.RefractionTextureEnabled){let U=1;if(this._refractionTexture.isCube||(S.Ib("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(U=this._refractionTexture.depth)),S.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,U,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const U=this._refractionTexture;S.updateVector3("vRefractionPosition",U.boundingBoxPosition),S.updateVector3("vRefractionSize",U.boundingBoxSize)}}}this.pointsCloud&&S.updateFloat("pointSize",this.pointSize),S.updateColor4("vSpecularColor",this.specularColor,this.specularPower),S.updateColor3("vEmissiveColor",e.EmissiveTextureEnabled?this.emissiveColor:z.NX.BlackReadOnly),S.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),F.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),S.updateColor3("vAmbientColor",this._globalAmbientColor)}F.texturesEnabled&&(this._diffuseTexture&&e.DiffuseTextureEnabled&&w.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&e.AmbientTextureEnabled&&w.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&e.OpacityTextureEnabled&&w.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&e.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?w.setTexture("reflectionCubeSampler",this._reflectionTexture):w.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&e.EmissiveTextureEnabled&&w.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&e.LightmapTextureEnabled&&w.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&e.SpecularTextureEnabled&&w.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&F.getEngine().getCaps().standardDerivatives&&e.BumpTextureEnabled&&w.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&e.RefractionTextureEnabled&&(this._refractionTexture.isCube?w.setTexture("refractionCubeSampler",this._refractionTexture):w.setTexture("refraction2DSampler",this._refractionTexture))),this.fU().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(X)&&this.fU().depthPeelingRenderer.bind(w),this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,N.d)(w,this,F),this.bindEyePosition(w)}else F.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(p||!this.isFrozen){var R;if(F.lightsEnabled&&!this._disableLighting&&(0,u.k)(F,X,w,E,this._maxSimultaneousLights),(F.fogEnabled&&X.applyFog&&F.fogMode!==Q.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||X.receiveShadows||E.PREPASS)&&this.bindView(w),(0,u.g)(F,X,w),E.NUM_MORPH_INFLUENCERS&&(0,u.o)(X,w),E.BAKED_VERTEX_ANIMATION_TEXTURE)null===(R=X.bakedVertexAnimationManager)||void 0===R||R.bind(w,E.INSTANCES);this.useLogarithmicDepth&&(0,u.l)(E,w,F),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(X,this._activeEffect,b),S.update()}getAnimatables(){const U=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&U.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&U.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&U.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&U.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&U.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&U.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&U.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&U.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&U.push(this._refractionTexture),U}getActiveTextures(){const U=super.getActiveTextures();return this._diffuseTexture&&U.push(this._diffuseTexture),this._ambientTexture&&U.push(this._ambientTexture),this._opacityTexture&&U.push(this._opacityTexture),this._reflectionTexture&&U.push(this._reflectionTexture),this._emissiveTexture&&U.push(this._emissiveTexture),this._specularTexture&&U.push(this._specularTexture),this._bumpTexture&&U.push(this._bumpTexture),this._lightmapTexture&&U.push(this._lightmapTexture),this._refractionTexture&&U.push(this._refractionTexture),U}hasTexture(U){return!!super.hasTexture(U)||(this._diffuseTexture===U||(this._ambientTexture===U||(this._opacityTexture===U||(this._reflectionTexture===U||(this._emissiveTexture===U||(this._specularTexture===U||(this._bumpTexture===U||(this._lightmapTexture===U||this._refractionTexture===U))))))))}dispose(U,X){var b,F,E,w,Q,z,q,p,S;X&&(null===(b=this._diffuseTexture)||void 0===b||b.dispose(),null===(F=this._ambientTexture)||void 0===F||F.dispose(),null===(E=this._opacityTexture)||void 0===E||E.dispose(),null===(w=this._reflectionTexture)||void 0===w||w.dispose(),null===(Q=this._emissiveTexture)||void 0===Q||Q.dispose(),null===(z=this._specularTexture)||void 0===z||z.dispose(),null===(q=this._bumpTexture)||void 0===q||q.dispose(),null===(p=this._lightmapTexture)||void 0===p||p.dispose(),null===(S=this._refractionTexture)||void 0===S||S.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(U,X)}clone(U){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const F=i.d.Clone((()=>new e(U,this.fU())),this,{cloneTexturesOnlyOnce:X});return F.name=U,F.id=U,this.stencil.copyTo(F.stencil),this._clonePlugins(F,b),F}static Parse(U,X,b){const F=i.d.Parse((()=>new e(U.name,X)),U,X,b);return U.stencil&&F.stencil.parse(U.stencil,X,b),R.e._ParsePlugins(U,F,X,b),F}static get DiffuseTextureEnabled(){return x.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(U){x.b.DiffuseTextureEnabled=U}static get DetailTextureEnabled(){return x.b.DetailTextureEnabled}static set DetailTextureEnabled(U){x.b.DetailTextureEnabled=U}static get AmbientTextureEnabled(){return x.b.AmbientTextureEnabled}static set AmbientTextureEnabled(U){x.b.AmbientTextureEnabled=U}static get OpacityTextureEnabled(){return x.b.OpacityTextureEnabled}static set OpacityTextureEnabled(U){x.b.OpacityTextureEnabled=U}static get ReflectionTextureEnabled(){return x.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(U){x.b.ReflectionTextureEnabled=U}static get EmissiveTextureEnabled(){return x.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(U){x.b.EmissiveTextureEnabled=U}static get SpecularTextureEnabled(){return x.b.SpecularTextureEnabled}static set SpecularTextureEnabled(U){x.b.SpecularTextureEnabled=U}static get BumpTextureEnabled(){return x.b.BumpTextureEnabled}static set BumpTextureEnabled(U){x.b.BumpTextureEnabled=U}static get LightmapTextureEnabled(){return x.b.LightmapTextureEnabled}static set LightmapTextureEnabled(U){x.b.LightmapTextureEnabled=U}static get RefractionTextureEnabled(){return x.b.RefractionTextureEnabled}static set RefractionTextureEnabled(U){x.b.RefractionTextureEnabled=U}static get ColorGradingTextureEnabled(){return x.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(U){x.b.ColorGradingTextureEnabled=U}static get FresnelEnabled(){return x.b.FresnelEnabled}static set FresnelEnabled(U){x.b.FresnelEnabled=U}}e.ForceGLSL=!1,(0,F.c)([(0,E.A)("diffuseTexture")],e.prototype,"_diffuseTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"diffuseTexture",void 0),(0,F.c)([(0,E.A)("ambientTexture")],e.prototype,"_ambientTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"ambientTexture",void 0),(0,F.c)([(0,E.A)("opacityTexture")],e.prototype,"_opacityTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"opacityTexture",void 0),(0,F.c)([(0,E.A)("reflectionTexture")],e.prototype,"_reflectionTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"reflectionTexture",void 0),(0,F.c)([(0,E.A)("emissiveTexture")],e.prototype,"_emissiveTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"emissiveTexture",void 0),(0,F.c)([(0,E.A)("specularTexture")],e.prototype,"_specularTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"specularTexture",void 0),(0,F.c)([(0,E.A)("bumpTexture")],e.prototype,"_bumpTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"bumpTexture",void 0),(0,F.c)([(0,E.A)("lightmapTexture")],e.prototype,"_lightmapTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"lightmapTexture",void 0),(0,F.c)([(0,E.A)("refractionTexture")],e.prototype,"_refractionTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"refractionTexture",void 0),(0,F.c)([(0,E.h)("ambient")],e.prototype,"ambientColor",void 0),(0,F.c)([(0,E.h)("diffuse")],e.prototype,"diffuseColor",void 0),(0,F.c)([(0,E.h)("specular")],e.prototype,"specularColor",void 0),(0,F.c)([(0,E.h)("emissive")],e.prototype,"emissiveColor",void 0),(0,F.c)([(0,E.J)()],e.prototype,"specularPower",void 0),(0,F.c)([(0,E.J)("useAlphaFromDiffuseTexture")],e.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],e.prototype,"useAlphaFromDiffuseTexture",void 0),(0,F.c)([(0,E.J)("useEmissiveAsIllumination")],e.prototype,"_useEmissiveAsIllumination",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useEmissiveAsIllumination",void 0),(0,F.c)([(0,E.J)("linkEmissiveWithDiffuse")],e.prototype,"_linkEmissiveWithDiffuse",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"linkEmissiveWithDiffuse",void 0),(0,F.c)([(0,E.J)("useSpecularOverAlpha")],e.prototype,"_useSpecularOverAlpha",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useSpecularOverAlpha",void 0),(0,F.c)([(0,E.J)("useReflectionOverAlpha")],e.prototype,"_useReflectionOverAlpha",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useReflectionOverAlpha",void 0),(0,F.c)([(0,E.J)("disableLighting")],e.prototype,"_disableLighting",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsLightsDirty")],e.prototype,"disableLighting",void 0),(0,F.c)([(0,E.J)("useObjectSpaceNormalMap")],e.prototype,"_useObjectSpaceNormalMap",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useObjectSpaceNormalMap",void 0),(0,F.c)([(0,E.J)("useParallax")],e.prototype,"_useParallax",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useParallax",void 0),(0,F.c)([(0,E.J)("useParallaxOcclusion")],e.prototype,"_useParallaxOcclusion",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useParallaxOcclusion",void 0),(0,F.c)([(0,E.J)()],e.prototype,"parallaxScaleBias",void 0),(0,F.c)([(0,E.J)("roughness")],e.prototype,"_roughness",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"roughness",void 0),(0,F.c)([(0,E.J)()],e.prototype,"indexOfRefraction",void 0),(0,F.c)([(0,E.J)()],e.prototype,"invertRefractionY",void 0),(0,F.c)([(0,E.J)()],e.prototype,"alphaCutOff",void 0),(0,F.c)([(0,E.J)("useLightmapAsShadowmap")],e.prototype,"_useLightmapAsShadowmap",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useLightmapAsShadowmap",void 0),(0,F.c)([(0,E.l)("diffuseFresnelParameters")],e.prototype,"_diffuseFresnelParameters",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"diffuseFresnelParameters",void 0),(0,F.c)([(0,E.l)("opacityFresnelParameters")],e.prototype,"_opacityFresnelParameters",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],e.prototype,"opacityFresnelParameters",void 0),(0,F.c)([(0,E.l)("reflectionFresnelParameters")],e.prototype,"_reflectionFresnelParameters",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"reflectionFresnelParameters",void 0),(0,F.c)([(0,E.l)("refractionFresnelParameters")],e.prototype,"_refractionFresnelParameters",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"refractionFresnelParameters",void 0),(0,F.c)([(0,E.l)("emissiveFresnelParameters")],e.prototype,"_emissiveFresnelParameters",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"emissiveFresnelParameters",void 0),(0,F.c)([(0,E.J)("useReflectionFresnelFromSpecular")],e.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsFresnelDirty")],e.prototype,"useReflectionFresnelFromSpecular",void 0),(0,F.c)([(0,E.J)("useGlossinessFromSpecularMapAlpha")],e.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,F.c)([(0,E.J)("maxSimultaneousLights")],e.prototype,"_maxSimultaneousLights",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsLightsDirty")],e.prototype,"maxSimultaneousLights",void 0),(0,F.c)([(0,E.J)("invertNormalMapX")],e.prototype,"_invertNormalMapX",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"invertNormalMapX",void 0),(0,F.c)([(0,E.J)("invertNormalMapY")],e.prototype,"_invertNormalMapY",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"invertNormalMapY",void 0),(0,F.c)([(0,E.J)("twoSidedLighting")],e.prototype,"_twoSidedLighting",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"twoSidedLighting",void 0),(0,F.c)([(0,E.J)("applyDecalMapAfterDetailMap")],e.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,F.c)([(0,E.b)("_markAllSubMeshesAsMiscDirty")],e.prototype,"applyDecalMapAfterDetailMap",void 0),(0,m.f)("BABYLON.StandardMaterial",e),Q.c.DefaultMaterialFactory=U=>new e("default material",U)}}]);