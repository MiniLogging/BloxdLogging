"use strict";(self.vfdo5lmva5i=self.vfdo5lmva5i||[]).push([[25],{12100:(w,o,H)=>{H.d(o,{d:()=>y});var h=H(11697),E=H(12033),e=H(11702),D=H(12098),t=H(12091),X=H(12106),L=H(12072);class A extends t.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class y extends X.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(w){let o=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(w,"DetailMap",140,new A,o),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=E.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=w._dirtyCallbacks[1]}isReadyForSubMesh(w,o,H){return!this._isEnabled||!(w._areTexturesDirty&&o.texturesEnabled&&H.getCaps().standardDerivatives&&this._texture&&D.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(w,o){if(this._isEnabled){w.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const H=o.getEngine();w._areTexturesDirty&&(H.getCaps().standardDerivatives&&this._texture&&D.e.DetailTextureEnabled&&this._isEnabled?((0,L.O)(this._texture,w,"DETAIL"),w.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):w.DETAIL=!1)}else w.DETAIL=!1}bindForSubMesh(w,o){if(!this._isEnabled)return;const H=this._material.isFrozen;w.useUbo&&H&&w.isSync||this._texture&&D.e.DetailTextureEnabled&&(w.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,L.q)(this._texture,w,"detail")),o.texturesEnabled&&this._texture&&D.e.DetailTextureEnabled&&w.setTexture("detailSampler",this._texture)}hasTexture(w){return this._texture===w}getActiveTextures(w){this._texture&&w.push(this._texture)}getAnimatables(w){this._texture&&this._texture.animations&&this._texture.animations.length>0&&w.push(this._texture)}dispose(w){var o;w&&(null===(o=this._texture)||void 0===o||o.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(w){w.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,h.b)([(0,e.w)("detailTexture"),(0,e.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"texture",void 0),(0,h.b)([(0,e.B)()],y.prototype,"diffuseBlendLevel",void 0),(0,h.b)([(0,e.B)()],y.prototype,"roughnessBlendLevel",void 0),(0,h.b)([(0,e.B)()],y.prototype,"bumpLevel",void 0),(0,h.b)([(0,e.B)(),(0,e.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"normalBlendMethod",void 0),(0,h.b)([(0,e.B)(),(0,e.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"isEnabled",void 0)},12091:(w,o,H)=>{H.d(o,{d:()=>h});class h{constructor(w){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=w,w)for(const o in w)Object.prototype.hasOwnProperty.call(w,o)&&this._setDefaultValue(o)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let w=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||w,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const w of Object.keys(this))"_"!==w[0]&&this._keys.push(w);if(this._externalProperties)for(const w in this._externalProperties)-1===this._keys.indexOf(w)&&this._keys.push(w)}isEqual(w){if(this._keys.length!==w._keys.length)return!1;for(let o=0;o<this._keys.length;o++){const H=this._keys[o];if(this[H]!==w[H])return!1}return!0}cloneTo(w){this._keys.length!==w._keys.length&&(w._keys=this._keys.slice(0));for(let o=0;o<this._keys.length;o++){const H=this._keys[o];w[H]=this[H]}}reset(){for(const w of this._keys)this._setDefaultValue(w)}_setDefaultValue(w){var o,H,h,E;const e=(null===(o=this._externalProperties)||void 0===o||null===(H=o[w])||void 0===H?void 0:H.type)??typeof this[w],D=null===(h=this._externalProperties)||void 0===h||null===(E=h[w])||void 0===E?void 0:E.default;switch(e){case"number":this[w]=D??0;break;case"string":this[w]=D??"";break;default:this[w]=D??!1}}toString(){let w="";for(let o=0;o<this._keys.length;o++){const H=this._keys[o],h=this[H];switch(typeof h){case"number":case"string":w+="#define "+H+" "+h+"\n";break;default:h&&(w+="#define "+H+"\n")}}return w}}},12098:(w,o,H)=>{H.d(o,{e:()=>E});var h=H(11615);class E{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(w){this._DiffuseTextureEnabled!==w&&(this._DiffuseTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(w){this._BaseWeightTextureEnabled!==w&&(this._BaseWeightTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(w){this._BaseDiffuseRoughnessTextureEnabled!==w&&(this._BaseDiffuseRoughnessTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(w){this._DetailTextureEnabled!==w&&(this._DetailTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(w){this._DecalMapEnabled!==w&&(this._DecalMapEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(w){this._AmbientTextureEnabled!==w&&(this._AmbientTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(w){this._OpacityTextureEnabled!==w&&(this._OpacityTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(w){this._ReflectionTextureEnabled!==w&&(this._ReflectionTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(w){this._EmissiveTextureEnabled!==w&&(this._EmissiveTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(w){this._SpecularTextureEnabled!==w&&(this._SpecularTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(w){this._BumpTextureEnabled!==w&&(this._BumpTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(w){this._LightmapTextureEnabled!==w&&(this._LightmapTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(w){this._RefractionTextureEnabled!==w&&(this._RefractionTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(w){this._ColorGradingTextureEnabled!==w&&(this._ColorGradingTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(w){this._FresnelEnabled!==w&&(this._FresnelEnabled=w,h.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(w){this._ClearCoatTextureEnabled!==w&&(this._ClearCoatTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(w){this._ClearCoatBumpTextureEnabled!==w&&(this._ClearCoatBumpTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(w){this._ClearCoatTintTextureEnabled!==w&&(this._ClearCoatTintTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(w){this._SheenTextureEnabled!==w&&(this._SheenTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(w){this._AnisotropicTextureEnabled!==w&&(this._AnisotropicTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(w){this._ThicknessTextureEnabled!==w&&(this._ThicknessTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(w){this._RefractionIntensityTextureEnabled!==w&&(this._RefractionIntensityTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(w){this._TranslucencyIntensityTextureEnabled!==w&&(this._TranslucencyIntensityTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(w){this._TranslucencyColorTextureEnabled!==w&&(this._TranslucencyColorTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(w){this._IridescenceTextureEnabled!==w&&(this._IridescenceTextureEnabled=w,h.c.MarkAllMaterialsAsDirty(1))}}E._DiffuseTextureEnabled=!0,E._BaseWeightTextureEnabled=!0,E._BaseDiffuseRoughnessTextureEnabled=!0,E._DetailTextureEnabled=!0,E._DecalMapEnabled=!0,E._AmbientTextureEnabled=!0,E._OpacityTextureEnabled=!0,E._ReflectionTextureEnabled=!0,E._EmissiveTextureEnabled=!0,E._SpecularTextureEnabled=!0,E._BumpTextureEnabled=!0,E._LightmapTextureEnabled=!0,E._RefractionTextureEnabled=!0,E._ColorGradingTextureEnabled=!0,E._FresnelEnabled=!0,E._ClearCoatTextureEnabled=!0,E._ClearCoatBumpTextureEnabled=!0,E._ClearCoatTintTextureEnabled=!0,E._SheenTextureEnabled=!0,E._AnisotropicTextureEnabled=!0,E._ThicknessTextureEnabled=!0,E._RefractionIntensityTextureEnabled=!0,E._TranslucencyIntensityTextureEnabled=!0,E._TranslucencyColorTextureEnabled=!0,E._IridescenceTextureEnabled=!0},12113:(w,o,H)=>{H.d(o,{b:()=>e});var h,E=H(11720);!function(w){w[w.Zero=0]="Zero",w[w.One=1]="One",w[w.MaxViewZ=2]="MaxViewZ"}(h||(h={}));class e{static CreateConfiguration(w){return e._Configurations[w]={defines:{},previousWorldMatrices:{},previousViewProjection:E.Matrix.Zero(),currentViewProjection:E.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},e._Configurations[w]}static DeleteConfiguration(w){delete e._Configurations[w]}static GetConfiguration(w){return e._Configurations[w]}static AddUniformsAndSamplers(w,o){w.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(w,o){for(const H of o)if(H.Le)for(const o of H.Le)o._removeDrawWrapper(w)}static PrepareDefines(w,o,H){if(!H._arePrePassDirty)return;const h=e._Configurations[w];if(!h)return;H.PREPASS=!0,H.PREPASS_COLOR=!1,H.PREPASS_COLOR_INDEX=-1;let E=0;for(let D=0;D<e.GeometryTextureDescriptions.length;D++){const w=e.GeometryTextureDescriptions[D],o=w.define,t=w.defineIndex,X=h.defines[t];void 0!==X?(H[o]=!0,H[t]=X,E++):(H[o]=!1,delete H[t])}H.SCENE_MRT_COUNT=E,H.BONES_VELOCITY_ENABLED=o.useBones&&o.computeBonesUsingShaders&&o.skeleton&&!o.skeleton.isUsingTextureForMatrices&&-1===h.excludedSkinnedMesh.indexOf(o)}static Bind(w,o,H,h,E){const D=e._Configurations[w];if(!D)return;const t=H.Ow(),X=t.getEngine();if(D.reverseCulling&&X.setStateCullFaceType(t._mirroredCameraPosition?E.cullBackFaces:!E.cullBackFaces),(void 0!==D.defines.PREPASS_VELOCITY_INDEX||void 0!==D.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(D.previousWorldMatrices[H.uniqueId]||(D.previousWorldMatrices[H.uniqueId]=h.clone()),D.previousViewProjection||(D.previousViewProjection=t.getTransformMatrix().clone(),D.currentViewProjection=t.getTransformMatrix().clone()),D.currentViewProjection.updateFlag!==t.getTransformMatrix().updateFlag?(D.lastUpdateFrameId=X.frameId,D.previousViewProjection.t(D.currentViewProjection),D.currentViewProjection.t(t.getTransformMatrix())):D.lastUpdateFrameId!==X.frameId&&(D.lastUpdateFrameId=X.frameId,D.previousViewProjection.t(D.currentViewProjection)),o.setMatrix("previousWorld",D.previousWorldMatrices[H.uniqueId]),o.setMatrix("previousViewProjection",D.previousViewProjection),D.previousWorldMatrices[H.uniqueId]=h.clone(),H.useBones&&H.computeBonesUsingShaders&&H.skeleton)){const w=H.skeleton;if(!w.isUsingTextureForMatrices||-1===o.getUniformIndex("boneTextureWidth")){const h=w.getTransformMatrices(H);h&&(D.previousBones[H.uniqueId]||(D.previousBones[H.uniqueId]=h.slice()),o.setMatrices("mPreviousBones",D.previousBones[H.uniqueId]),D.previousBones[H.uniqueId].set(h))}}}}e.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],e._Configurations={}},12106:(w,o,H)=>{H.d(o,{c:()=>s});var h=H(11697),E=H(11702),e=H(12033),D=H(11571),t=H(11595),X=H(11625);const L=new RegExp("^([gimus]+)!");class A{constructor(w){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=w,this._scene=w.Ow(),this._engine=this._scene.getEngine()}_addPlugin(w){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===w.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!w.isCompatible(this._material.shaderLanguage))throw`The plugin "${w.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const o=w.getClassName();A._MaterialPluginClassToMainDefine[o]||(A._MaterialPluginClassToMainDefine[o]="MATERIALPLUGIN_"+ ++A._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(w,o)=>this._handlePluginEvent(w,o),this._plugins.push(w),this._plugins.sort(((w,o)=>w.priority-o.priority)),this._codeInjectionPoints={};const H={};H[A._MaterialPluginClassToMainDefine[o]]={type:"boolean",default:!0};for(const h of this._plugins)h.collectDefines(H),this._collectPointNames("vertex",h.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",h.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=H,!0}_activatePlugin(w){-1===this._activePlugins.indexOf(w)&&(this._activePlugins.push(w),this._activePlugins.sort(((w,o)=>w.priority-o.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),w.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(w),this._activePluginsForExtraEvents.sort(((w,o)=>w.priority-o.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(w){for(let o=0;o<this._plugins.length;++o)if(this._plugins[o].name===w)return this._plugins[o];return null}_handlePluginEventIsReadyForSubMesh(w){let o=!0;for(const H of this._activePlugins)o=o&&H.isReadyForSubMesh(w.defines,this._scene,this._engine,w.subMesh);w.isReadyForSubMesh=o}_handlePluginEventPrepareDefinesBeforeAttributes(w){for(const o of this._activePlugins)o.prepareDefinesBeforeAttributes(w.defines,this._scene,w.mesh)}_handlePluginEventPrepareDefines(w){for(const o of this._activePlugins)o.prepareDefines(w.defines,this._scene,w.mesh)}_handlePluginEventHardBindForSubMesh(w){for(const o of this._activePluginsForExtraEvents)o.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,w.subMesh)}_handlePluginEventBindForSubMesh(w){for(const o of this._activePlugins)o.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,w.subMesh)}_handlePluginEventHasRenderTargetTextures(w){let o=!1;for(const H of this._activePluginsForExtraEvents)if(o=H.hasRenderTargetTextures(),o)break;w.hasRenderTargetTextures=o}_handlePluginEventFillRenderTargetTextures(w){for(const o of this._activePluginsForExtraEvents)o.fillRenderTargetTextures(w.renderTargets)}_handlePluginEvent(w,o){switch(w){case 512:{const w=o;for(const o of this._activePlugins)o.getActiveTextures(w.activeTextures);break}case 256:{const w=o;for(const o of this._activePlugins)o.getAnimatables(w.animatables);break}case 1024:{const w=o;let H=!1;for(const o of this._activePlugins)if(H=o.hasTexture(w.texture),H)break;w.hasTexture=H;break}case 2:{const w=o;for(const o of this._plugins)o.dispose(w.forceDisposeTextures);break}case 4:o.defineNames=this._defineNamesFromPlugins;break;case 128:{const w=o;for(const o of this._activePlugins)w.fallbackRank=o.addFallbacks(w.defines,w.fallbacks,w.fallbackRank),o.getAttributes(w.attributes,this._scene,w.mesh);this._uniformList.length>0&&w.uniforms.push(...this._uniformList),this._samplerList.length>0&&w.samplers.push(...this._samplerList),this._uboList.length>0&&w.uniformBuffersNames.push(...this._uboList),w.customCode=this._injectCustomCode(w,w.customCode);break}case 8:{const w=o;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const H=1===this._material.shaderLanguage;for(const o of this._plugins){const h=o.getUniforms(this._material.shaderLanguage);if(h){if(h.ubo)for(const o of h.ubo){if(o.size&&o.type){const h=o.arraySize??0;if(w.ubo.addUniform(o.name,o.size,h),H){let w;switch(o.type){case"mat4":w="mat4x4f";break;case"float":w="f32";break;default:w=`${o.type}f`}this._uboDeclaration+=h>0?`uniform ${o.name}: array<${w}, ${h}>;\n`:`uniform ${o.name}: ${w};\n`}else this._uboDeclaration+=`${o.type} ${o.name}${h>0?`[${h}]`:""};\n`}this._uniformList.push(o.name)}h.vertex&&(this._vertexDeclaration+=h.vertex+"\n"),h.fragment&&(this._fragmentDeclaration+=h.fragment+"\n")}o.getSamplers(this._samplerList),o.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(w,o){if(o)for(const H in o)this._codeInjectionPoints[w]||(this._codeInjectionPoints[w]={}),this._codeInjectionPoints[w][H]=!0}_injectCustomCode(w,o){return(H,h)=>{var E;o&&(h=o(H,h)),this._uboDeclaration&&(h=h.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(h=h.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(h=h.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const e=null===(E=this._codeInjectionPoints)||void 0===E?void 0:E[H];if(!e)return h;let D=null;for(let o in e){let E="";for(const h of this._activePlugins){var A;let e=null===(A=h.getCustomCode(H,this._material.shaderLanguage))||void 0===A?void 0:A[o];if(e){if(h.resolveIncludes){if(null===D){const o=0;D={defines:[],indexParameters:w.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:X.d.GetShadersRepository(o),includesShadersStore:X.d.GetIncludesShadersStore(o),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}D.isFragment="fragment"===H,(0,t.i)(e,D,(w=>e=w))}E+=e+"\n"}}if(E.length>0)if("!"===o.charAt(0)){o=o.substring(1);let w="g";if("!"===o.charAt(0))w="",o=o.substring(1);else{const H=L.exec(o);H&&H.length>=2&&(w=H[1],o=o.substring(w.length+1))}w.indexOf("g")<0&&(w+="g");const H=h,e=new RegExp(o,w);let D=e.exec(H);for(;null!==D;){let w=E;for(let o=0;o<D.length;++o)w=w.replace("$"+o,D[o]);h=h.replace(D[0],w),D=e.exec(H)}}else{const w="#define "+o;h=h.replace(w,"\n"+E+"\n"+w)}}return h}}}A._MaterialPluginClassToMainDefine={},A._MaterialPluginCounter=0,D.e.OnEnginesDisposedObservable.add((()=>{Q()}));const y=[];let z=!1,C=null;function Q(){y.length=0,z=!1,e.e.OnEventObservable.remove(C),C=null}var M=H(11745),i=H(11666);class s{isCompatible(w){return 0===w}_enable(w){w&&this._pluginManager._activatePlugin(this)}constructor(w,o,H,h){let E=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],e=arguments.length>5&&void 0!==arguments[5]&&arguments[5],D=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=w,this.name=o,this.priority=H,this.resolveIncludes=D,w.pluginManager||(w.pluginManager=new A(w),w.me.add((()=>{w.pluginManager=void 0}))),this._pluginDefineNames=h,this._pluginManager=w.pluginManager,E&&this._pluginManager._addPlugin(this),e&&this._enable(!0),this.markAllDefinesAsDirty=w._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(w,o,H,h){return!0}hardBindForSubMesh(w,o,H,h){}bindForSubMesh(w,o,H,h){}dispose(w){}getCustomCode(w){return null}collectDefines(w){if(this._pluginDefineNames)for(const o of Object.keys(this._pluginDefineNames)){if("_"===o[0])continue;const H=typeof this._pluginDefineNames[o];w[o]={type:"number"===H?"number":"string"===H?"string":"boolean"===H?"boolean":"object",default:this._pluginDefineNames[o]}}}prepareDefinesBeforeAttributes(w,o,H){}prepareDefines(w,o,H){}hasTexture(w){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(w){}getActiveTextures(w){}getAnimatables(w){}addFallbacks(w,o,H){return H}getSamplers(w){}getAttributes(w,o,H){}getUniformBuffersNames(w){}getUniforms(){return{}}copyTo(w){M.e.Clone((()=>w),this)}serialize(){return M.e.Serialize(this)}parse(w,o,H){M.e.Parse((()=>this),w,o,H)}}(0,h.b)([(0,E.B)()],s.prototype,"name",void 0),(0,h.b)([(0,E.B)()],s.prototype,"priority",void 0),(0,h.b)([(0,E.B)()],s.prototype,"resolveIncludes",void 0),(0,h.b)([(0,E.B)()],s.prototype,"registerForExtraEvents",void 0),(0,i.g)("BABYLON.MaterialPluginBase",s)},12089:(w,o,H)=>{H.d(o,{e:()=>h});class h{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(w){w.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(w){}bindForSubMesh(w,o,H,h,E){if(o.prePassRenderer&&o.prePassRenderer.enabled&&o.prePassRenderer.currentRTisSceneRT&&(-1!==o.prePassRenderer.getIndex(2)||-1!==o.prePassRenderer.getIndex(11))){this.previousWorldMatrices[H.uniqueId]||(this.previousWorldMatrices[H.uniqueId]=h.clone()),this.previousViewProjection||(this.previousViewProjection=o.getTransformMatrix().clone(),this.currentViewProjection=o.getTransformMatrix().clone());const E=o.getEngine();this.currentViewProjection.updateFlag!==o.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.t(this.currentViewProjection),this.currentViewProjection.t(o.getTransformMatrix())):this._lastUpdateFrameId!==E.frameId&&(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.t(this.currentViewProjection)),w.setMatrix("previousWorld",this.previousWorldMatrices[H.uniqueId]),w.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[H.uniqueId]=h.clone()}}}},12081:(w,o,H)=>{H.d(o,{ro:()=>S});var h=H(11697),E=H(11702),e=H(11807),D=H(11957),t=H(11757),X=H(11780),L=H(12089),A=H(11964),y=H(12033),z=H(12091),C=H(12027),Q=H(11690),M=H(11666),i=H(12098),s=H(12022),V=H(12100),r=H(12077),k=H(12072),P=H(11745),l=H(12113);const O={effect:null,subMesh:null};class T extends z.d{constructor(w){super(w),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(w){const o=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const H of o)this[H]=H===w}}class S extends C.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(w){this._attachImageProcessingConfiguration(w),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(w){w!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=w||this.Ow().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(w){this.imageProcessingConfiguration.colorCurvesEnabled=w}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(w){this.imageProcessingConfiguration.colorGradingEnabled=w}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(w){this._imageProcessingConfiguration.toneMappingEnabled=w}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(w){this._imageProcessingConfiguration.exposure=w}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(w){this._imageProcessingConfiguration.contrast=w}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(w){this._imageProcessingConfiguration.colorGradingTexture=w}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(w){this._imageProcessingConfiguration.colorCurves=w}get canRenderToMRT(){return!0}constructor(w,o){super(w,o,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||S.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new t.ko(0,0,0),this.diffuseColor=new t.ko(1,1,1),this.specularColor=new t.ko(1,1,1),this.emissiveColor=new t.ko(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new e.f(16),this._globalAmbientColor=new t.ko(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new V.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new L.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"ro"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===y.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ze&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==y.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ze||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(w,o){let h=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const E=o._drawWrapper;if(E.effect&&this.isFrozen&&E._wasPreviouslyReady&&E._wasPreviouslyUsingInstances===h)return!0;o.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),o.materialDefines=new T(this._eventInfo.defineNames));const e=this.Ow(),D=o.materialDefines;if(this._isReadyForSubMesh(o))return!0;const t=e.getEngine();D._needNormals=(0,k.M)(e,w,D,!0,this._maxSimultaneousLights,this._disableLighting),(0,k.Q)(e,D);const y=this.needAlphaBlendingForMesh(w)&&this.Ow().useOrderIndependentTransparency;if((0,k.W)(e,D,this.canRenderToMRT&&!y),(0,k.T)(e,D,y),l.b.PrepareDefines(t.currentRenderPassId,w,D),D._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,D._needUVs=!1;for(let w=1;w<=6;++w)D["MAINUV"+w]=!1;if(e.texturesEnabled){if(D.DIFFUSEDIRECTUV=0,D.BUMPDIRECTUV=0,D.AMBIENTDIRECTUV=0,D.OPACITYDIRECTUV=0,D.EMISSIVEDIRECTUV=0,D.SPECULARDIRECTUV=0,D.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&S.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._diffuseTexture,D,"DIFFUSE")}else D.DIFFUSE=!1;if(this._ambientTexture&&S.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._ambientTexture,D,"AMBIENT")}else D.AMBIENT=!1;if(this._opacityTexture&&S.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._opacityTexture,D,"OPACITY"),D.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else D.OPACITY=!1;if(this._reflectionTexture&&S.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(D._needNormals=!0,D.REFLECTION=!0,D.ROUGHNESS=this._roughness>0,D.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,D.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Q.d.INVCUBIC_MODE,D.REFLECTIONMAP_3D=this._reflectionTexture.isCube,D.REFLECTIONMAP_OPPOSITEZ=D.REFLECTIONMAP_3D&&this.Ow().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,D.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Q.d.EXPLICIT_MODE:D.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Q.d.PLANAR_MODE:D.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Q.d.PROJECTION_MODE:D.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Q.d.SKYBOX_MODE:D.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Q.d.SPHERICAL_MODE:D.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Q.d.EQUIRECTANGULAR_MODE:D.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Q.d.FIXED_EQUIRECTANGULAR_MODE:D.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Q.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:D.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Q.d.CUBIC_MODE:case Q.d.INVCUBIC_MODE:default:D.setReflectionMode("REFLECTIONMAP_CUBIC")}D.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else D.REFLECTION=!1,D.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&S.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._emissiveTexture,D,"EMISSIVE")}else D.EMISSIVE=!1;if(this._lightmapTexture&&S.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._lightmapTexture,D,"LIGHTMAP"),D.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,D.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else D.LIGHTMAP=!1;if(this._specularTexture&&S.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,k.O)(this._specularTexture,D,"SPECULAR"),D.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else D.SPECULAR=!1;if(e.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&S.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,k.O)(this._bumpTexture,D,"BUMP"),D.PARALLAX=this._useParallax,D.PARALLAX_RHS=e.useRightHandedSystem,D.PARALLAXOCCLUSION=this._useParallaxOcclusion,D.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else D.BUMP=!1,D.PARALLAX=!1,D.PARALLAX_RHS=!1,D.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&S.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;D._needUVs=!0,D.REFRACTION=!0,D.REFRACTIONMAP_3D=this._refractionTexture.isCube,D.RGBDREFRACTION=this._refractionTexture.isRGBD,D.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else D.REFRACTION=!1;D.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else D.DIFFUSE=!1,D.AMBIENT=!1,D.OPACITY=!1,D.REFLECTION=!1,D.EMISSIVE=!1,D.LIGHTMAP=!1,D.BUMP=!1,D.REFRACTION=!1;D.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),D.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,D.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,D.SPECULAROVERALPHA=this._useSpecularOverAlpha,D.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,D.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,D.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(w)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=D,this._eventInfo.subMesh=o,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(D._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(D),D.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,D.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(D._areFresnelDirty&&(S.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(D.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,D.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,D.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,D.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,D.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,D.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,D._needNormals=!0,D.FRESNEL=!0):D.FRESNEL=!1),D.AREALIGHTUSED)for(let H=0;H<w.lightSources.length;H++)if(!w.lightSources[H]._isReady())return!1;(0,k.P)(w,e,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(w),D,this._applyDecalMapAfterDetailMap),(0,k.L)(e,t,this,D,h,null,o.getRenderingMesh().hasThinInstances),this._eventInfo.defines=D,this._eventInfo.mesh=w,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,k.I)(w,D,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let z=!1;if(D.isDirty){const h=D._areLightsDisposed;D.markAsProcessed();const E=new s.e;D.REFLECTION&&E.addFallback(0,"REFLECTION"),D.SPECULAR&&E.addFallback(0,"SPECULAR"),D.BUMP&&E.addFallback(0,"BUMP"),D.PARALLAX&&E.addFallback(1,"PARALLAX"),D.PARALLAX_RHS&&E.addFallback(1,"PARALLAX_RHS"),D.PARALLAXOCCLUSION&&E.addFallback(0,"PARALLAXOCCLUSION"),D.SPECULAROVERALPHA&&E.addFallback(0,"SPECULAROVERALPHA"),D.FOG&&E.addFallback(1,"FOG"),D.POINTSIZE&&E.addFallback(0,"POINTSIZE"),D.LOGARITHMICDEPTH&&E.addFallback(0,"LOGARITHMICDEPTH"),(0,k.u)(D,E,this._maxSimultaneousLights),D.SPECULARTERM&&E.addFallback(0,"SPECULARTERM"),D.DIFFUSEFRESNEL&&E.addFallback(1,"DIFFUSEFRESNEL"),D.OPACITYFRESNEL&&E.addFallback(2,"OPACITYFRESNEL"),D.REFLECTIONFRESNEL&&E.addFallback(3,"REFLECTIONFRESNEL"),D.EMISSIVEFRESNEL&&E.addFallback(4,"EMISSIVEFRESNEL"),D.FRESNEL&&E.addFallback(4,"FRESNEL"),D.MULTIVIEW&&E.addFallback(0,"MULTIVIEW");const y=[X.e.PositionKind];D.NORMAL&&y.push(X.e.NormalKind),D.TANGENT&&y.push(X.e.TangentKind);for(let w=1;w<=6;++w)D["UV"+w]&&y.push(`uv${1===w?"":w}`);D.VERTEXCOLOR&&y.push(X.e.ColorKind),(0,k.y)(y,w,D,E),(0,k.z)(y,D),(0,k.C)(y,w,D),(0,k.v)(y,w,D);let C="default";const Q=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],M=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],i=["Material","Scene","Mesh"],V={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:D.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=E,this._eventInfo.fallbackRank=0,this._eventInfo.defines=D,this._eventInfo.uniforms=Q,this._eventInfo.attributes=y,this._eventInfo.samplers=M,this._eventInfo.uniformBuffersNames=i,this._eventInfo.customCode=void 0,this._eventInfo.mesh=w,this._eventInfo.indexParameters=V,this._callbackPluginEventGeneric(128,this._eventInfo),l.b.AddUniformsAndSamplers(Q,M),L.e.AddUniforms(Q),L.e.AddSamplers(M),A.c&&(A.c.PrepareUniforms(Q,D),A.c.PrepareSamplers(M,D)),(0,k.Z)({uniformsNames:Q,uniformBuffersNames:i,samplers:M,defines:D,maxSimultaneousLights:this._maxSimultaneousLights}),(0,r.c)(Q);const P={};this.customShaderNameResolve&&(C=this.customShaderNameResolve(C,Q,i,M,D,y,P));const T=D.toString(),S=o.effect;let c=e.getEngine().createEffect(C,{attributes:y,uniformsNames:Q,uniformBuffersNames:i,samplers:M,defines:T,fallbacks:E,onCompiled:this.onCompiled,onError:this.onError,indexParameters:V,processFinalCode:P.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:D.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([H.e(41),H.e(64)]).then(H.bind(H,14353)),Promise.all([H.e(39),H.e(65)]).then(H.bind(H,14505))]):await Promise.all([Promise.all([H.e(34),H.e(67)]).then(H.bind(H,14588)),Promise.all([H.e(33),H.e(68)]).then(H.bind(H,14750))]),this._shadersLoaded=!0}},t);if(this._eventInfo.customCode=void 0,c)if(this._onEffectCreatedObservable&&(O.effect=c,O.subMesh=o,this._onEffectCreatedObservable.notifyObservers(O)),this.allowShaderHotSwapping&&S&&!c.isReady()){if(c=S,D.markAsUnprocessed(),z=this.isFrozen,h)return D._areLightsDisposed=!0,!1}else e.resetCachedMaterial(),o.setEffect(c,D,this._materialContext)}return!(!o.effect||!o.effect.isReady())&&(D._renderId=e.getRenderId(),E._wasPreviouslyReady=!z,E._wasPreviouslyUsingInstances=h,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const w=this._uniformBuffer;w.addUniform("diffuseLeftColor",4),w.addUniform("diffuseRightColor",4),w.addUniform("opacityParts",4),w.addUniform("reflectionLeftColor",4),w.addUniform("reflectionRightColor",4),w.addUniform("refractionLeftColor",4),w.addUniform("refractionRightColor",4),w.addUniform("emissiveLeftColor",4),w.addUniform("emissiveRightColor",4),w.addUniform("vDiffuseInfos",2),w.addUniform("vAmbientInfos",2),w.addUniform("vOpacityInfos",2),w.addUniform("vReflectionInfos",2),w.addUniform("vReflectionPosition",3),w.addUniform("vReflectionSize",3),w.addUniform("vEmissiveInfos",2),w.addUniform("vLightmapInfos",2),w.addUniform("vSpecularInfos",2),w.addUniform("vBumpInfos",3),w.addUniform("diffuseMatrix",16),w.addUniform("ambientMatrix",16),w.addUniform("opacityMatrix",16),w.addUniform("reflectionMatrix",16),w.addUniform("emissiveMatrix",16),w.addUniform("lightmapMatrix",16),w.addUniform("specularMatrix",16),w.addUniform("bumpMatrix",16),w.addUniform("vTangentSpaceParams",2),w.addUniform("pointSize",1),w.addUniform("alphaCutOff",1),w.addUniform("refractionMatrix",16),w.addUniform("vRefractionInfos",4),w.addUniform("vRefractionPosition",3),w.addUniform("vRefractionSize",3),w.addUniform("vSpecularColor",4),w.addUniform("vEmissiveColor",3),w.addUniform("vDiffuseColor",4),w.addUniform("vAmbientColor",3),w.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(w,o,H){const h=this.Ow(),E=H.materialDefines;if(!E)return;const e=H.effect;if(!e)return;this._activeEffect=e,o.getMeshUniformBuffer().bindToEffect(e,"Mesh"),o.transferToEffect(w),this._uniformBuffer.bindToEffect(e,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,h,o,w,this.isFrozen),l.b.Bind(h.getEngine().currentRenderPassId,this._activeEffect,o,w,this);const X=h.activeCamera;X?this._uniformBuffer.updateFloat4("cameraInfo",X.Qe,X.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=H,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),E.OBJECTSPACE_NORMALMAP&&(w.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const L=this._mustRebind(h,e,H,o.visibility);(0,k.e)(o,e);const A=this._uniformBuffer;if(L){if(this.bindViewProjection(e),!A.useUbo||!this.isFrozen||!A.isSync||H._drawWrapper._forceRebindOnNextCall){if(S.FresnelEnabled&&E.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(A.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),A.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&A.updateColor4("opacityParts",new t.ko(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(A.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),A.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(A.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),A.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(A.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),A.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),h.texturesEnabled){if(this._diffuseTexture&&S.DiffuseTextureEnabled&&(A.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,k.q)(this._diffuseTexture,A,"diffuse")),this._ambientTexture&&S.AmbientTextureEnabled&&(A.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,k.q)(this._ambientTexture,A,"ambient")),this._opacityTexture&&S.OpacityTextureEnabled&&(A.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,k.q)(this._opacityTexture,A,"opacity")),this._hasAlphaChannel()&&A.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&S.ReflectionTextureEnabled){if(A.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),A.ie("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const w=this._reflectionTexture;A.updateVector3("vReflectionPosition",w.boundingBoxPosition),A.updateVector3("vReflectionSize",w.boundingBoxSize)}}else A.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&S.EmissiveTextureEnabled&&(A.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,k.q)(this._emissiveTexture,A,"emissive")),this._lightmapTexture&&S.LightmapTextureEnabled&&(A.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,k.q)(this._lightmapTexture,A,"lightmap")),this._specularTexture&&S.SpecularTextureEnabled&&(A.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,k.q)(this._specularTexture,A,"specular")),this._bumpTexture&&h.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&(A.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,k.q)(this._bumpTexture,A,"bump"),h._mirroredCameraPosition?A.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):A.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&S.RefractionTextureEnabled){let w=1;if(this._refractionTexture.isCube||(A.ie("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(w=this._refractionTexture.depth)),A.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,w,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const w=this._refractionTexture;A.updateVector3("vRefractionPosition",w.boundingBoxPosition),A.updateVector3("vRefractionSize",w.boundingBoxSize)}}}this.pointsCloud&&A.updateFloat("pointSize",this.pointSize),A.updateColor4("vSpecularColor",this.specularColor,this.specularPower),A.updateColor3("vEmissiveColor",S.EmissiveTextureEnabled?this.emissiveColor:t.ko.BlackReadOnly),A.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),h.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),A.updateColor3("vAmbientColor",this._globalAmbientColor)}h.texturesEnabled&&(this._diffuseTexture&&S.DiffuseTextureEnabled&&e.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&S.AmbientTextureEnabled&&e.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&S.OpacityTextureEnabled&&e.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&S.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?e.setTexture("reflectionCubeSampler",this._reflectionTexture):e.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&S.EmissiveTextureEnabled&&e.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&S.LightmapTextureEnabled&&e.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&S.SpecularTextureEnabled&&e.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&h.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&e.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&S.RefractionTextureEnabled&&(this._refractionTexture.isCube?e.setTexture("refractionCubeSampler",this._refractionTexture):e.setTexture("refraction2DSampler",this._refractionTexture))),this.Ow().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(o)&&this.Ow().depthPeelingRenderer.bind(e),this._eventInfo.subMesh=H,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,r.e)(e,this,h),this.bindEyePosition(e)}else h.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(L||!this.isFrozen){var y;if(h.lightsEnabled&&!this._disableLighting&&(0,k.g)(h,o,e,E,this._maxSimultaneousLights),(h.fogEnabled&&o.applyFog&&h.fogMode!==D.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||o.receiveShadows||E.PREPASS)&&this.bindView(e),(0,k.f)(h,o,e),E.NUM_MORPH_INFLUENCERS&&(0,k.k)(o,e),E.BAKED_VERTEX_ANIMATION_TEXTURE)null===(y=o.bakedVertexAnimationManager)||void 0===y||y.bind(e,E.INSTANCES);this.useLogarithmicDepth&&(0,k.h)(E,e,h),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(o,this._activeEffect,H),A.update()}getAnimatables(){const w=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&w.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&w.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&w.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&w.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&w.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&w.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&w.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&w.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&w.push(this._refractionTexture),w}getActiveTextures(){const w=super.getActiveTextures();return this._diffuseTexture&&w.push(this._diffuseTexture),this._ambientTexture&&w.push(this._ambientTexture),this._opacityTexture&&w.push(this._opacityTexture),this._reflectionTexture&&w.push(this._reflectionTexture),this._emissiveTexture&&w.push(this._emissiveTexture),this._specularTexture&&w.push(this._specularTexture),this._bumpTexture&&w.push(this._bumpTexture),this._lightmapTexture&&w.push(this._lightmapTexture),this._refractionTexture&&w.push(this._refractionTexture),w}hasTexture(w){return!!super.hasTexture(w)||(this._diffuseTexture===w||(this._ambientTexture===w||(this._opacityTexture===w||(this._reflectionTexture===w||(this._emissiveTexture===w||(this._specularTexture===w||(this._bumpTexture===w||(this._lightmapTexture===w||this._refractionTexture===w))))))))}dispose(w,o){var H,h,E,e,D,t,X,L,A;o&&(null===(H=this._diffuseTexture)||void 0===H||H.dispose(),null===(h=this._ambientTexture)||void 0===h||h.dispose(),null===(E=this._opacityTexture)||void 0===E||E.dispose(),null===(e=this._reflectionTexture)||void 0===e||e.dispose(),null===(D=this._emissiveTexture)||void 0===D||D.dispose(),null===(t=this._specularTexture)||void 0===t||t.dispose(),null===(X=this._bumpTexture)||void 0===X||X.dispose(),null===(L=this._lightmapTexture)||void 0===L||L.dispose(),null===(A=this._refractionTexture)||void 0===A||A.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(w,o)}clone(w){let o=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const h=P.e.Clone((()=>new S(w,this.Ow())),this,{cloneTexturesOnlyOnce:o});return h.name=w,h.id=w,this.stencil.copyTo(h.stencil),this._clonePlugins(h,H),h}static Parse(w,o,H){const h=P.e.Parse((()=>new S(w.name,o)),w,o,H);return w.stencil&&h.stencil.parse(w.stencil,o,H),y.e._ParsePlugins(w,h,o,H),h}static get DiffuseTextureEnabled(){return i.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(w){i.e.DiffuseTextureEnabled=w}static get DetailTextureEnabled(){return i.e.DetailTextureEnabled}static set DetailTextureEnabled(w){i.e.DetailTextureEnabled=w}static get AmbientTextureEnabled(){return i.e.AmbientTextureEnabled}static set AmbientTextureEnabled(w){i.e.AmbientTextureEnabled=w}static get OpacityTextureEnabled(){return i.e.OpacityTextureEnabled}static set OpacityTextureEnabled(w){i.e.OpacityTextureEnabled=w}static get ReflectionTextureEnabled(){return i.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(w){i.e.ReflectionTextureEnabled=w}static get EmissiveTextureEnabled(){return i.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(w){i.e.EmissiveTextureEnabled=w}static get SpecularTextureEnabled(){return i.e.SpecularTextureEnabled}static set SpecularTextureEnabled(w){i.e.SpecularTextureEnabled=w}static get BumpTextureEnabled(){return i.e.BumpTextureEnabled}static set BumpTextureEnabled(w){i.e.BumpTextureEnabled=w}static get LightmapTextureEnabled(){return i.e.LightmapTextureEnabled}static set LightmapTextureEnabled(w){i.e.LightmapTextureEnabled=w}static get RefractionTextureEnabled(){return i.e.RefractionTextureEnabled}static set RefractionTextureEnabled(w){i.e.RefractionTextureEnabled=w}static get ColorGradingTextureEnabled(){return i.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(w){i.e.ColorGradingTextureEnabled=w}static get FresnelEnabled(){return i.e.FresnelEnabled}static set FresnelEnabled(w){i.e.FresnelEnabled=w}}S.ForceGLSL=!1,(0,h.b)([(0,E.w)("diffuseTexture")],S.prototype,"_diffuseTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"diffuseTexture",void 0),(0,h.b)([(0,E.w)("ambientTexture")],S.prototype,"_ambientTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"ambientTexture",void 0),(0,h.b)([(0,E.w)("opacityTexture")],S.prototype,"_opacityTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"opacityTexture",void 0),(0,h.b)([(0,E.w)("reflectionTexture")],S.prototype,"_reflectionTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"reflectionTexture",void 0),(0,h.b)([(0,E.w)("emissiveTexture")],S.prototype,"_emissiveTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"emissiveTexture",void 0),(0,h.b)([(0,E.w)("specularTexture")],S.prototype,"_specularTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"specularTexture",void 0),(0,h.b)([(0,E.w)("bumpTexture")],S.prototype,"_bumpTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"bumpTexture",void 0),(0,h.b)([(0,E.w)("lightmapTexture")],S.prototype,"_lightmapTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"lightmapTexture",void 0),(0,h.b)([(0,E.w)("refractionTexture")],S.prototype,"_refractionTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"refractionTexture",void 0),(0,h.b)([(0,E.h)("ambient")],S.prototype,"ambientColor",void 0),(0,h.b)([(0,E.h)("diffuse")],S.prototype,"diffuseColor",void 0),(0,h.b)([(0,E.h)("specular")],S.prototype,"specularColor",void 0),(0,h.b)([(0,E.h)("emissive")],S.prototype,"emissiveColor",void 0),(0,h.b)([(0,E.B)()],S.prototype,"specularPower",void 0),(0,h.b)([(0,E.B)("useAlphaFromDiffuseTexture")],S.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"useAlphaFromDiffuseTexture",void 0),(0,h.b)([(0,E.B)("useEmissiveAsIllumination")],S.prototype,"_useEmissiveAsIllumination",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useEmissiveAsIllumination",void 0),(0,h.b)([(0,E.B)("linkEmissiveWithDiffuse")],S.prototype,"_linkEmissiveWithDiffuse",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"linkEmissiveWithDiffuse",void 0),(0,h.b)([(0,E.B)("useSpecularOverAlpha")],S.prototype,"_useSpecularOverAlpha",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useSpecularOverAlpha",void 0),(0,h.b)([(0,E.B)("useReflectionOverAlpha")],S.prototype,"_useReflectionOverAlpha",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useReflectionOverAlpha",void 0),(0,h.b)([(0,E.B)("disableLighting")],S.prototype,"_disableLighting",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"disableLighting",void 0),(0,h.b)([(0,E.B)("useObjectSpaceNormalMap")],S.prototype,"_useObjectSpaceNormalMap",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useObjectSpaceNormalMap",void 0),(0,h.b)([(0,E.B)("useParallax")],S.prototype,"_useParallax",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallax",void 0),(0,h.b)([(0,E.B)("useParallaxOcclusion")],S.prototype,"_useParallaxOcclusion",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallaxOcclusion",void 0),(0,h.b)([(0,E.B)()],S.prototype,"parallaxScaleBias",void 0),(0,h.b)([(0,E.B)("roughness")],S.prototype,"_roughness",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"roughness",void 0),(0,h.b)([(0,E.B)()],S.prototype,"indexOfRefraction",void 0),(0,h.b)([(0,E.B)()],S.prototype,"invertRefractionY",void 0),(0,h.b)([(0,E.B)()],S.prototype,"alphaCutOff",void 0),(0,h.b)([(0,E.B)("useLightmapAsShadowmap")],S.prototype,"_useLightmapAsShadowmap",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useLightmapAsShadowmap",void 0),(0,h.b)([(0,E.k)("diffuseFresnelParameters")],S.prototype,"_diffuseFresnelParameters",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"diffuseFresnelParameters",void 0),(0,h.b)([(0,E.k)("opacityFresnelParameters")],S.prototype,"_opacityFresnelParameters",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],S.prototype,"opacityFresnelParameters",void 0),(0,h.b)([(0,E.k)("reflectionFresnelParameters")],S.prototype,"_reflectionFresnelParameters",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"reflectionFresnelParameters",void 0),(0,h.b)([(0,E.k)("refractionFresnelParameters")],S.prototype,"_refractionFresnelParameters",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"refractionFresnelParameters",void 0),(0,h.b)([(0,E.k)("emissiveFresnelParameters")],S.prototype,"_emissiveFresnelParameters",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"emissiveFresnelParameters",void 0),(0,h.b)([(0,E.B)("useReflectionFresnelFromSpecular")],S.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"useReflectionFresnelFromSpecular",void 0),(0,h.b)([(0,E.B)("useGlossinessFromSpecularMapAlpha")],S.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,h.b)([(0,E.B)("maxSimultaneousLights")],S.prototype,"_maxSimultaneousLights",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"maxSimultaneousLights",void 0),(0,h.b)([(0,E.B)("invertNormalMapX")],S.prototype,"_invertNormalMapX",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapX",void 0),(0,h.b)([(0,E.B)("invertNormalMapY")],S.prototype,"_invertNormalMapY",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapY",void 0),(0,h.b)([(0,E.B)("twoSidedLighting")],S.prototype,"_twoSidedLighting",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"twoSidedLighting",void 0),(0,h.b)([(0,E.B)("applyDecalMapAfterDetailMap")],S.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,h.b)([(0,E.d)("_markAllSubMeshesAsMiscDirty")],S.prototype,"applyDecalMapAfterDetailMap",void 0),(0,M.g)("BABYLON.StandardMaterial",S),D.e.DefaultMaterialFactory=w=>new S("default material",w)}}]);