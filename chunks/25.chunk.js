"use strict";(self.b15p7b72fr8=self.b15p7b72fr8||[]).push([[25],{13013:(s,k,h)=>{h.d(k,{d:()=>S});var A=h(12570),g=h(12916),ms=h(12579),i=h(13005),K=h(13001),H=h(13019),O=h(12968);class c extends K.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class S extends H.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(s){let k=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(s,"DetailMap",140,new c,k),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=g.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=s._dirtyCallbacks[1]}isReadyForSubMesh(s,k,h){return!this._isEnabled||!(s._areTexturesDirty&&k.texturesEnabled&&h.getCaps().standardDerivatives&&this._texture&&i.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(s,k){if(this._isEnabled){s.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const h=k.getEngine();s._areTexturesDirty&&(h.getCaps().standardDerivatives&&this._texture&&i.b.DetailTextureEnabled&&this._isEnabled?((0,O.L)(this._texture,s,"DETAIL"),s.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):s.DETAIL=!1)}else s.DETAIL=!1}bindForSubMesh(s,k){if(!this._isEnabled)return;const h=this._material.isFrozen;s.useUbo&&h&&s.isSync||this._texture&&i.b.DetailTextureEnabled&&(s.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,O.q)(this._texture,s,"detail")),k.texturesEnabled&&this._texture&&i.b.DetailTextureEnabled&&s.setTexture("detailSampler",this._texture)}hasTexture(s){return this._texture===s}getActiveTextures(s){this._texture&&s.push(this._texture)}getAnimatables(s){this._texture&&this._texture.animations&&this._texture.animations.length>0&&s.push(this._texture)}dispose(s){var k;s&&(null===(k=this._texture)||void 0===k||k.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(s){s.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,A.e)([(0,ms.E)("detailTexture"),(0,ms.b)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"texture",void 0),(0,A.e)([(0,ms.J)()],S.prototype,"diffuseBlendLevel",void 0),(0,A.e)([(0,ms.J)()],S.prototype,"roughnessBlendLevel",void 0),(0,A.e)([(0,ms.J)()],S.prototype,"bumpLevel",void 0),(0,A.e)([(0,ms.J)(),(0,ms.b)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"normalBlendMethod",void 0),(0,A.e)([(0,ms.J)(),(0,ms.b)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"isEnabled",void 0)},13001:(s,k,h)=>{h.d(k,{d:()=>A});class A{constructor(s){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=s,s)for(const k in s)Object.prototype.hasOwnProperty.call(s,k)&&this._setDefaultValue(k)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let s=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||s,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const s of Object.keys(this))"_"!==s[0]&&this._keys.push(s);if(this._externalProperties)for(const s in this._externalProperties)-1===this._keys.indexOf(s)&&this._keys.push(s)}isEqual(s){if(this._keys.length!==s._keys.length)return!1;for(let k=0;k<this._keys.length;k++){const h=this._keys[k];if(this[h]!==s[h])return!1}return!0}cloneTo(s){this._keys.length!==s._keys.length&&(s._keys=this._keys.slice(0));for(let k=0;k<this._keys.length;k++){const h=this._keys[k];s[h]=this[h]}}reset(){for(const s of this._keys)this._setDefaultValue(s)}_setDefaultValue(s){var k,h,A,g;const ms=(null===(k=this._externalProperties)||void 0===k||null===(h=k[s])||void 0===h?void 0:h.type)??typeof this[s],i=null===(A=this._externalProperties)||void 0===A||null===(g=A[s])||void 0===g?void 0:g.default;switch(ms){case"number":this[s]=i??0;break;case"string":this[s]=i??"";break;default:this[s]=i??!1}}toString(){let s="";for(let k=0;k<this._keys.length;k++){const h=this._keys[k],A=this[h];switch(typeof A){case"number":case"string":s+="#define "+h+" "+A+"\n";break;default:A&&(s+="#define "+h+"\n")}}return s}}},13005:(s,k,h)=>{h.d(k,{b:()=>g});var A=h(12481);class g{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(s){this._DiffuseTextureEnabled!==s&&(this._DiffuseTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(s){this._BaseWeightTextureEnabled!==s&&(this._BaseWeightTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(s){this._BaseDiffuseRoughnessTextureEnabled!==s&&(this._BaseDiffuseRoughnessTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(s){this._DetailTextureEnabled!==s&&(this._DetailTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(s){this._DecalMapEnabled!==s&&(this._DecalMapEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(s){this._AmbientTextureEnabled!==s&&(this._AmbientTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(s){this._OpacityTextureEnabled!==s&&(this._OpacityTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(s){this._ReflectionTextureEnabled!==s&&(this._ReflectionTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(s){this._EmissiveTextureEnabled!==s&&(this._EmissiveTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(s){this._SpecularTextureEnabled!==s&&(this._SpecularTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(s){this._BumpTextureEnabled!==s&&(this._BumpTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(s){this._LightmapTextureEnabled!==s&&(this._LightmapTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(s){this._RefractionTextureEnabled!==s&&(this._RefractionTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(s){this._ColorGradingTextureEnabled!==s&&(this._ColorGradingTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(s){this._FresnelEnabled!==s&&(this._FresnelEnabled=s,A.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(s){this._ClearCoatTextureEnabled!==s&&(this._ClearCoatTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(s){this._ClearCoatBumpTextureEnabled!==s&&(this._ClearCoatBumpTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(s){this._ClearCoatTintTextureEnabled!==s&&(this._ClearCoatTintTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(s){this._SheenTextureEnabled!==s&&(this._SheenTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(s){this._AnisotropicTextureEnabled!==s&&(this._AnisotropicTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(s){this._ThicknessTextureEnabled!==s&&(this._ThicknessTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(s){this._RefractionIntensityTextureEnabled!==s&&(this._RefractionIntensityTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(s){this._TranslucencyIntensityTextureEnabled!==s&&(this._TranslucencyIntensityTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(s){this._TranslucencyColorTextureEnabled!==s&&(this._TranslucencyColorTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(s){this._IridescenceTextureEnabled!==s&&(this._IridescenceTextureEnabled=s,A.e.MarkAllMaterialsAsDirty(1))}}g._DiffuseTextureEnabled=!0,g._BaseWeightTextureEnabled=!0,g._BaseDiffuseRoughnessTextureEnabled=!0,g._DetailTextureEnabled=!0,g._DecalMapEnabled=!0,g._AmbientTextureEnabled=!0,g._OpacityTextureEnabled=!0,g._ReflectionTextureEnabled=!0,g._EmissiveTextureEnabled=!0,g._SpecularTextureEnabled=!0,g._BumpTextureEnabled=!0,g._LightmapTextureEnabled=!0,g._RefractionTextureEnabled=!0,g._ColorGradingTextureEnabled=!0,g._FresnelEnabled=!0,g._ClearCoatTextureEnabled=!0,g._ClearCoatBumpTextureEnabled=!0,g._ClearCoatTintTextureEnabled=!0,g._SheenTextureEnabled=!0,g._AnisotropicTextureEnabled=!0,g._ThicknessTextureEnabled=!0,g._RefractionIntensityTextureEnabled=!0,g._TranslucencyIntensityTextureEnabled=!0,g._TranslucencyColorTextureEnabled=!0,g._IridescenceTextureEnabled=!0},13025:(s,k,h)=>{h.d(k,{c:()=>ms});var A,g=h(12590);!function(s){s[s.Zero=0]="Zero",s[s.One=1]="One",s[s.MaxViewZ=2]="MaxViewZ"}(A||(A={}));class ms{static CreateConfiguration(s){return ms._Configurations[s]={defines:{},previousWorldMatrices:{},previousViewProjection:g.Matrix.Zero(),currentViewProjection:g.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},ms._Configurations[s]}static DeleteConfiguration(s){delete ms._Configurations[s]}static GetConfiguration(s){return ms._Configurations[s]}static AddUniformsAndSamplers(s,k){s.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(s,k){for(const h of k)if(h.Lh)for(const k of h.Lh)k._removeDrawWrapper(s)}static PrepareDefines(s,k,h){if(!h._arePrePassDirty)return;const A=ms._Configurations[s];if(!A)return;h.PREPASS=!0,h.PREPASS_COLOR=!1,h.PREPASS_COLOR_INDEX=-1;let g=0;for(let i=0;i<ms.GeometryTextureDescriptions.length;i++){const s=ms.GeometryTextureDescriptions[i],k=s.define,K=s.defineIndex,H=A.defines[K];void 0!==H?(h[k]=!0,h[K]=H,g++):(h[k]=!1,delete h[K])}h.SCENE_MRT_COUNT=g,h.BONES_VELOCITY_ENABLED=k.useBones&&k.computeBonesUsingShaders&&k.skeleton&&!k.skeleton.isUsingTextureForMatrices&&-1===A.excludedSkinnedMesh.indexOf(k)}static Bind(s,k,h,A,g){const i=ms._Configurations[s];if(!i)return;const K=h.Is(),H=K.getEngine();if(i.reverseCulling&&H.setStateCullFaceType(K._mirroredCameraPosition?g.cullBackFaces:!g.cullBackFaces),(void 0!==i.defines.PREPASS_VELOCITY_INDEX||void 0!==i.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(i.previousWorldMatrices[h.uniqueId]||(i.previousWorldMatrices[h.uniqueId]=A.clone()),i.previousViewProjection||(i.previousViewProjection=K.getTransformMatrix().clone(),i.currentViewProjection=K.getTransformMatrix().clone()),i.currentViewProjection.updateFlag!==K.getTransformMatrix().updateFlag?(i.lastUpdateFrameId=H.frameId,i.previousViewProjection.H(i.currentViewProjection),i.currentViewProjection.H(K.getTransformMatrix())):i.lastUpdateFrameId!==H.frameId&&(i.lastUpdateFrameId=H.frameId,i.previousViewProjection.H(i.currentViewProjection)),k.setMatrix("previousWorld",i.previousWorldMatrices[h.uniqueId]),k.setMatrix("previousViewProjection",i.previousViewProjection),i.previousWorldMatrices[h.uniqueId]=A.clone(),h.useBones&&h.computeBonesUsingShaders&&h.skeleton)){const s=h.skeleton;if(!s.isUsingTextureForMatrices||-1===k.getUniformIndex("boneTextureWidth")){const A=s.getTransformMatrices(h);A&&(i.previousBones[h.uniqueId]||(i.previousBones[h.uniqueId]=A.slice()),k.setMatrices("mPreviousBones",i.previousBones[h.uniqueId]),i.previousBones[h.uniqueId].set(A))}}}}ms.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],ms._Configurations={}},13019:(s,k,h)=>{h.d(k,{b:()=>P});var A=h(12570),g=h(12579),ms=h(12916),i=h(12445),K=h(12461),H=h(12493);const O=new RegExp("^([gimus]+)!");class c{constructor(s){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=s,this._scene=s.Is(),this._engine=this._scene.getEngine()}_addPlugin(s){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===s.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!s.isCompatible(this._material.shaderLanguage))throw`The plugin "${s.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const k=s.getClassName();c._MaterialPluginClassToMainDefine[k]||(c._MaterialPluginClassToMainDefine[k]="MATERIALPLUGIN_"+ ++c._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(s,k)=>this._handlePluginEvent(s,k),this._plugins.push(s),this._plugins.sort(((s,k)=>s.priority-k.priority)),this._codeInjectionPoints={};const h={};h[c._MaterialPluginClassToMainDefine[k]]={type:"boolean",default:!0};for(const A of this._plugins)A.collectDefines(h),this._collectPointNames("vertex",A.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",A.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=h,!0}_activatePlugin(s){-1===this._activePlugins.indexOf(s)&&(this._activePlugins.push(s),this._activePlugins.sort(((s,k)=>s.priority-k.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),s.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(s),this._activePluginsForExtraEvents.sort(((s,k)=>s.priority-k.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(s){for(let k=0;k<this._plugins.length;++k)if(this._plugins[k].name===s)return this._plugins[k];return null}_handlePluginEventIsReadyForSubMesh(s){let k=!0;for(const h of this._activePlugins)k=k&&h.isReadyForSubMesh(s.defines,this._scene,this._engine,s.subMesh);s.isReadyForSubMesh=k}_handlePluginEventPrepareDefinesBeforeAttributes(s){for(const k of this._activePlugins)k.prepareDefinesBeforeAttributes(s.defines,this._scene,s.mesh)}_handlePluginEventPrepareDefines(s){for(const k of this._activePlugins)k.prepareDefines(s.defines,this._scene,s.mesh)}_handlePluginEventHardBindForSubMesh(s){for(const k of this._activePluginsForExtraEvents)k.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,s.subMesh)}_handlePluginEventBindForSubMesh(s){for(const k of this._activePlugins)k.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,s.subMesh)}_handlePluginEventHasRenderTargetTextures(s){let k=!1;for(const h of this._activePluginsForExtraEvents)if(k=h.hasRenderTargetTextures(),k)break;s.hasRenderTargetTextures=k}_handlePluginEventFillRenderTargetTextures(s){for(const k of this._activePluginsForExtraEvents)k.fillRenderTargetTextures(s.renderTargets)}_handlePluginEvent(s,k){switch(s){case 512:{const s=k;for(const k of this._activePlugins)k.getActiveTextures(s.activeTextures);break}case 256:{const s=k;for(const k of this._activePlugins)k.getAnimatables(s.animatables);break}case 1024:{const s=k;let h=!1;for(const k of this._activePlugins)if(h=k.hasTexture(s.texture),h)break;s.hasTexture=h;break}case 2:{const s=k;for(const k of this._plugins)k.dispose(s.forceDisposeTextures);break}case 4:k.defineNames=this._defineNamesFromPlugins;break;case 128:{const s=k;for(const k of this._activePlugins)s.fallbackRank=k.addFallbacks(s.defines,s.fallbacks,s.fallbackRank),k.getAttributes(s.attributes,this._scene,s.mesh);this._uniformList.length>0&&s.uniforms.push(...this._uniformList),this._samplerList.length>0&&s.samplers.push(...this._samplerList),this._uboList.length>0&&s.uniformBuffersNames.push(...this._uboList),s.customCode=this._injectCustomCode(s,s.customCode);break}case 8:{const s=k;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const h=1===this._material.shaderLanguage;for(const k of this._plugins){const A=k.getUniforms(this._material.shaderLanguage);if(A){if(A.ubo)for(const k of A.ubo){if(k.size&&k.type){const A=k.arraySize??0;if(s.ubo.addUniform(k.name,k.size,A),h){let s;switch(k.type){case"mat4":s="mat4x4f";break;case"float":s="f32";break;default:s=`${k.type}f`}this._uboDeclaration+=A>0?`uniform ${k.name}: array<${s}, ${A}>;\n`:`uniform ${k.name}: ${s};\n`}else this._uboDeclaration+=`${k.type} ${k.name}${A>0?`[${A}]`:""};\n`}this._uniformList.push(k.name)}A.vertex&&(this._vertexDeclaration+=A.vertex+"\n"),A.fragment&&(this._fragmentDeclaration+=A.fragment+"\n")}k.getSamplers(this._samplerList),k.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(s,k){if(k)for(const h in k)this._codeInjectionPoints[s]||(this._codeInjectionPoints[s]={}),this._codeInjectionPoints[s][h]=!0}_injectCustomCode(s,k){return(h,A)=>{var g;k&&(A=k(h,A)),this._uboDeclaration&&(A=A.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(A=A.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(A=A.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const ms=null===(g=this._codeInjectionPoints)||void 0===g?void 0:g[h];if(!ms)return A;let i=null;for(let k in ms){let g="";for(const A of this._activePlugins){var c;let ms=null===(c=A.getCustomCode(h,this._material.shaderLanguage))||void 0===c?void 0:c[k];if(ms){if(A.resolveIncludes){if(null===i){const k=0;i={defines:[],indexParameters:s.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:H.e.GetShadersRepository(k),includesShadersStore:H.e.GetIncludesShadersStore(k),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,rh:this._engine.rh,processCodeAfterIncludes:void 0}}i.isFragment="fragment"===h,(0,K.i)(ms,i,(s=>ms=s))}g+=ms+"\n"}}if(g.length>0)if("!"===k.charAt(0)){k=k.substring(1);let s="g";if("!"===k.charAt(0))s="",k=k.substring(1);else{const h=O.exec(k);h&&h.length>=2&&(s=h[1],k=k.substring(s.length+1))}s.indexOf("g")<0&&(s+="g");const h=A,ms=new RegExp(k,s);let i=ms.exec(h);for(;null!==i;){let s=g;for(let k=0;k<i.length;++k)s=s.replace("$"+k,i[k]);A=A.replace(i[0],s),i=ms.exec(h)}}else{const s="#define "+k;A=A.replace(s,"\n"+g+"\n"+s)}}return A}}}c._MaterialPluginClassToMainDefine={},c._MaterialPluginCounter=0,i.b.OnEnginesDisposedObservable.add((()=>{d()}));const S=[];let a=!1,r=null;function d(){S.length=0,a=!1,ms.b.OnEventObservable.remove(r),r=null}var E=h(12623),j=h(12543);class P{isCompatible(s){return 0===s}_enable(s){s&&this._pluginManager._activatePlugin(this)}constructor(s,k,h,A){let g=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],ms=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=s,this.name=k,this.priority=h,this.resolveIncludes=i,s.pluginManager||(s.pluginManager=new c(s),s.Dh.add((()=>{s.pluginManager=void 0}))),this._pluginDefineNames=A,this._pluginManager=s.pluginManager,g&&this._pluginManager._addPlugin(this),ms&&this._enable(!0),this.markAllDefinesAsDirty=s._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(s,k,h,A){return!0}hardBindForSubMesh(s,k,h,A){}bindForSubMesh(s,k,h,A){}dispose(s){}getCustomCode(s){return null}collectDefines(s){if(this._pluginDefineNames)for(const k of Object.keys(this._pluginDefineNames)){if("_"===k[0])continue;const h=typeof this._pluginDefineNames[k];s[k]={type:"number"===h?"number":"string"===h?"string":"boolean"===h?"boolean":"object",default:this._pluginDefineNames[k]}}}prepareDefinesBeforeAttributes(s,k,h){}prepareDefines(s,k,h){}hasTexture(s){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(s){}getActiveTextures(s){}getAnimatables(s){}addFallbacks(s,k,h){return h}getSamplers(s){}getAttributes(s,k,h){}getUniformBuffersNames(s){}getUniforms(){return{}}copyTo(s){E.e.Clone((()=>s),this)}serialize(){return E.e.Serialize(this)}parse(s,k,h){E.e.Parse((()=>this),s,k,h)}}(0,A.e)([(0,g.J)()],P.prototype,"name",void 0),(0,A.e)([(0,g.J)()],P.prototype,"priority",void 0),(0,A.e)([(0,g.J)()],P.prototype,"resolveIncludes",void 0),(0,A.e)([(0,g.J)()],P.prototype,"registerForExtraEvents",void 0),(0,j.f)("BABYLON.MaterialPluginBase",P)},12992:(s,k,h)=>{h.d(k,{d:()=>A});class A{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(s){s.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(s){}bindForSubMesh(s,k,h,A,g){if(k.prePassRenderer&&k.prePassRenderer.enabled&&k.prePassRenderer.currentRTisSceneRT&&(-1!==k.prePassRenderer.getIndex(2)||-1!==k.prePassRenderer.getIndex(11))){this.previousWorldMatrices[h.uniqueId]||(this.previousWorldMatrices[h.uniqueId]=A.clone()),this.previousViewProjection||(this.previousViewProjection=k.getTransformMatrix().clone(),this.currentViewProjection=k.getTransformMatrix().clone());const g=k.getEngine();this.currentViewProjection.updateFlag!==k.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=g.frameId,this.previousViewProjection.H(this.currentViewProjection),this.currentViewProjection.H(k.getTransformMatrix())):this._lastUpdateFrameId!==g.frameId&&(this._lastUpdateFrameId=g.frameId,this.previousViewProjection.H(this.currentViewProjection)),s.setMatrix("previousWorld",this.previousWorldMatrices[h.uniqueId]),s.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[h.uniqueId]=A.clone()}}}},12984:(s,k,h)=>{h.d(k,{wk:()=>p});var A=h(12570),g=h(12579),ms=h(12688),i=h(12836),K=h(12636),H=h(12664),O=h(12992),c=h(12844),S=h(12916),a=h(13001),r=h(12911),d=h(12567),E=h(12543),j=h(13005),P=h(12904),R=h(13013),D=h(12976),w=h(12968),B=h(12623),u=h(13025);const G={effect:null,subMesh:null};class Q extends a.d{constructor(s){super(s),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(s){const k=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const h of k)this[h]=h===s}}class p extends r.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(s){this._attachImageProcessingConfiguration(s),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(s){s!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=s||this.Is().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(s){this.imageProcessingConfiguration.colorCurvesEnabled=s}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(s){this.imageProcessingConfiguration.colorGradingEnabled=s}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(s){this._imageProcessingConfiguration.toneMappingEnabled=s}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(s){this._imageProcessingConfiguration.exposure=s}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(s){this._imageProcessingConfiguration.contrast=s}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(s){this._imageProcessingConfiguration.colorGradingTexture=s}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(s){this._imageProcessingConfiguration.colorCurves=s}get canRenderToMRT(){return!0}constructor(s,k){super(s,k,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||p.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new K.Bk(0,0,0),this.diffuseColor=new K.Bk(1,1,1),this.specularColor=new K.Bk(1,1,1),this.emissiveColor=new K.Bk(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new ms.h(16),this._globalAmbientColor=new K.Bk(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new R.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new O.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"wk"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===S.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Wh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==S.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Wh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(s,k){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const g=k._drawWrapper;if(g.effect&&this.isFrozen&&g._wasPreviouslyReady&&g._wasPreviouslyUsingInstances===A)return!0;k.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),k.materialDefines=new Q(this._eventInfo.defineNames));const ms=this.Is(),i=k.materialDefines;if(this._isReadyForSubMesh(k))return!0;const K=ms.getEngine();i._needNormals=(0,w.K)(ms,s,i,!0,this._maxSimultaneousLights,this._disableLighting),(0,w.T)(ms,i);const S=this.needAlphaBlendingForMesh(s)&&this.Is().useOrderIndependentTransparency;if((0,w.Y)(ms,i,this.canRenderToMRT&&!S),(0,w.V)(ms,i,S),u.c.PrepareDefines(K.currentRenderPassId,s,i),i._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,i._needUVs=!1;for(let s=1;s<=6;++s)i["MAINUV"+s]=!1;if(ms.texturesEnabled){if(i.DIFFUSEDIRECTUV=0,i.BUMPDIRECTUV=0,i.AMBIENTDIRECTUV=0,i.OPACITYDIRECTUV=0,i.EMISSIVEDIRECTUV=0,i.SPECULARDIRECTUV=0,i.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&p.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._diffuseTexture,i,"DIFFUSE")}else i.DIFFUSE=!1;if(this._ambientTexture&&p.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._ambientTexture,i,"AMBIENT")}else i.AMBIENT=!1;if(this._opacityTexture&&p.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._opacityTexture,i,"OPACITY"),i.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else i.OPACITY=!1;if(this._reflectionTexture&&p.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(i._needNormals=!0,i.REFLECTION=!0,i.ROUGHNESS=this._roughness>0,i.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,i.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===d.b.INVCUBIC_MODE,i.REFLECTIONMAP_3D=this._reflectionTexture.isCube,i.REFLECTIONMAP_OPPOSITEZ=i.REFLECTIONMAP_3D&&this.Is().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,i.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case d.b.EXPLICIT_MODE:i.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case d.b.PLANAR_MODE:i.setReflectionMode("REFLECTIONMAP_PLANAR");break;case d.b.PROJECTION_MODE:i.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case d.b.SKYBOX_MODE:i.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case d.b.SPHERICAL_MODE:i.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case d.b.EQUIRECTANGULAR_MODE:i.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case d.b.FIXED_EQUIRECTANGULAR_MODE:i.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case d.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:i.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case d.b.CUBIC_MODE:case d.b.INVCUBIC_MODE:default:i.setReflectionMode("REFLECTIONMAP_CUBIC")}i.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else i.REFLECTION=!1,i.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&p.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._emissiveTexture,i,"EMISSIVE")}else i.EMISSIVE=!1;if(this._lightmapTexture&&p.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._lightmapTexture,i,"LIGHTMAP"),i.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,i.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else i.LIGHTMAP=!1;if(this._specularTexture&&p.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,w.L)(this._specularTexture,i,"SPECULAR"),i.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else i.SPECULAR=!1;if(ms.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&p.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,w.L)(this._bumpTexture,i,"BUMP"),i.PARALLAX=this._useParallax,i.PARALLAX_RHS=ms.useRightHandedSystem,i.PARALLAXOCCLUSION=this._useParallaxOcclusion,i.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else i.BUMP=!1,i.PARALLAX=!1,i.PARALLAX_RHS=!1,i.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&p.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;i._needUVs=!0,i.REFRACTION=!0,i.REFRACTIONMAP_3D=this._refractionTexture.isCube,i.RGBDREFRACTION=this._refractionTexture.isRGBD,i.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else i.REFRACTION=!1;i.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else i.DIFFUSE=!1,i.AMBIENT=!1,i.OPACITY=!1,i.REFLECTION=!1,i.EMISSIVE=!1,i.LIGHTMAP=!1,i.BUMP=!1,i.REFRACTION=!1;i.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),i.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,i.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,i.SPECULAROVERALPHA=this._useSpecularOverAlpha,i.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,i.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,i.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(s)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=i,this._eventInfo.subMesh=k,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(i._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(i),i.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,i.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(i._areFresnelDirty&&(p.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(i.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,i.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,i.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,i.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,i.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,i.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,i._needNormals=!0,i.FRESNEL=!0):i.FRESNEL=!1),i.AREALIGHTUSED)for(let h=0;h<s.lightSources.length;h++)if(!s.lightSources[h]._isReady())return!1;(0,w.P)(s,ms,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(s),i,this._applyDecalMapAfterDetailMap),(0,w.I)(ms,K,this,i,A,null,k.getRenderingMesh().hasThinInstances),this._eventInfo.defines=i,this._eventInfo.mesh=s,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,w.E)(s,i,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let a=!1;if(i.isDirty){const A=i._areLightsDisposed;i.markAsProcessed();const g=new P.e;i.REFLECTION&&g.addFallback(0,"REFLECTION"),i.SPECULAR&&g.addFallback(0,"SPECULAR"),i.BUMP&&g.addFallback(0,"BUMP"),i.PARALLAX&&g.addFallback(1,"PARALLAX"),i.PARALLAX_RHS&&g.addFallback(1,"PARALLAX_RHS"),i.PARALLAXOCCLUSION&&g.addFallback(0,"PARALLAXOCCLUSION"),i.SPECULAROVERALPHA&&g.addFallback(0,"SPECULAROVERALPHA"),i.FOG&&g.addFallback(1,"FOG"),i.POINTSIZE&&g.addFallback(0,"POINTSIZE"),i.LOGARITHMICDEPTH&&g.addFallback(0,"LOGARITHMICDEPTH"),(0,w.u)(i,g,this._maxSimultaneousLights),i.SPECULARTERM&&g.addFallback(0,"SPECULARTERM"),i.DIFFUSEFRESNEL&&g.addFallback(1,"DIFFUSEFRESNEL"),i.OPACITYFRESNEL&&g.addFallback(2,"OPACITYFRESNEL"),i.REFLECTIONFRESNEL&&g.addFallback(3,"REFLECTIONFRESNEL"),i.EMISSIVEFRESNEL&&g.addFallback(4,"EMISSIVEFRESNEL"),i.FRESNEL&&g.addFallback(4,"FRESNEL"),i.MULTIVIEW&&g.addFallback(0,"MULTIVIEW");const S=[H.e.PositionKind];i.NORMAL&&S.push(H.e.NormalKind),i.TANGENT&&S.push(H.e.TangentKind);for(let s=1;s<=6;++s)i["UV"+s]&&S.push(`uv${1===s?"":s}`);i.VERTEXCOLOR&&S.push(H.e.ColorKind),(0,w.z)(S,s,i,g),(0,w.A)(S,i),(0,w.B)(S,s,i),(0,w.w)(S,s,i);let r="default";const d=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],E=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],j=["Material","Scene","Mesh"],R={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:i.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=g,this._eventInfo.fallbackRank=0,this._eventInfo.defines=i,this._eventInfo.uniforms=d,this._eventInfo.attributes=S,this._eventInfo.samplers=E,this._eventInfo.uniformBuffersNames=j,this._eventInfo.customCode=void 0,this._eventInfo.mesh=s,this._eventInfo.indexParameters=R,this._callbackPluginEventGeneric(128,this._eventInfo),u.c.AddUniformsAndSamplers(d,E),O.d.AddUniforms(d),O.d.AddSamplers(E),c.b&&(c.b.PrepareUniforms(d,i),c.b.PrepareSamplers(E,i)),(0,w.Z)({uniformsNames:d,uniformBuffersNames:j,samplers:E,defines:i,maxSimultaneousLights:this._maxSimultaneousLights}),(0,D.c)(d);const B={};this.customShaderNameResolve&&(r=this.customShaderNameResolve(r,d,j,E,i,S,B));const Q=i.toString(),p=k.effect;let I=ms.getEngine().createEffect(r,{attributes:S,uniformsNames:d,uniformBuffersNames:j,samplers:E,defines:Q,fallbacks:g,onCompiled:this.onCompiled,onError:this.onError,indexParameters:R,processFinalCode:B.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:i.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([h.e(41),h.e(64)]).then(h.bind(h,15168)),Promise.all([h.e(39),h.e(65)]).then(h.bind(h,15305))]):await Promise.all([Promise.all([h.e(34),h.e(67)]).then(h.bind(h,15388)),Promise.all([h.e(33),h.e(68)]).then(h.bind(h,15554))]),this._shadersLoaded=!0}},K);if(this._eventInfo.customCode=void 0,I)if(this._onEffectCreatedObservable&&(G.effect=I,G.subMesh=k,this._onEffectCreatedObservable.notifyObservers(G)),this.allowShaderHotSwapping&&p&&!I.isReady()){if(I=p,i.markAsUnprocessed(),a=this.isFrozen,A)return i._areLightsDisposed=!0,!1}else ms.resetCachedMaterial(),k.setEffect(I,i,this._materialContext)}return!(!k.effect||!k.effect.isReady())&&(i._renderId=ms.getRenderId(),g._wasPreviouslyReady=!a,g._wasPreviouslyUsingInstances=A,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const s=this._uniformBuffer;s.addUniform("diffuseLeftColor",4),s.addUniform("diffuseRightColor",4),s.addUniform("opacityParts",4),s.addUniform("reflectionLeftColor",4),s.addUniform("reflectionRightColor",4),s.addUniform("refractionLeftColor",4),s.addUniform("refractionRightColor",4),s.addUniform("emissiveLeftColor",4),s.addUniform("emissiveRightColor",4),s.addUniform("vDiffuseInfos",2),s.addUniform("vAmbientInfos",2),s.addUniform("vOpacityInfos",2),s.addUniform("vReflectionInfos",2),s.addUniform("vReflectionPosition",3),s.addUniform("vReflectionSize",3),s.addUniform("vEmissiveInfos",2),s.addUniform("vLightmapInfos",2),s.addUniform("vSpecularInfos",2),s.addUniform("vBumpInfos",3),s.addUniform("diffuseMatrix",16),s.addUniform("ambientMatrix",16),s.addUniform("opacityMatrix",16),s.addUniform("reflectionMatrix",16),s.addUniform("emissiveMatrix",16),s.addUniform("lightmapMatrix",16),s.addUniform("specularMatrix",16),s.addUniform("bumpMatrix",16),s.addUniform("vTangentSpaceParams",2),s.addUniform("pointSize",1),s.addUniform("alphaCutOff",1),s.addUniform("refractionMatrix",16),s.addUniform("vRefractionInfos",4),s.addUniform("vRefractionPosition",3),s.addUniform("vRefractionSize",3),s.addUniform("vSpecularColor",4),s.addUniform("vEmissiveColor",3),s.addUniform("vDiffuseColor",4),s.addUniform("vAmbientColor",3),s.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(s,k,h){const A=this.Is(),g=h.materialDefines;if(!g)return;const ms=h.effect;if(!ms)return;this._activeEffect=ms,k.getMeshUniformBuffer().bindToEffect(ms,"Mesh"),k.transferToEffect(s),this._uniformBuffer.bindToEffect(ms,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,A,k,s,this.isFrozen),u.c.Bind(A.getEngine().currentRenderPassId,this._activeEffect,k,s,this);const H=A.activeCamera;H?this._uniformBuffer.updateFloat4("cameraInfo",H.Jh,H.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=h,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),g.OBJECTSPACE_NORMALMAP&&(s.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const O=this._mustRebind(A,ms,h,k.visibility);(0,w.c)(k,ms);const c=this._uniformBuffer;if(O){if(this.bindViewProjection(ms),!c.useUbo||!this.isFrozen||!c.isSync||h._drawWrapper._forceRebindOnNextCall){if(p.FresnelEnabled&&g.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(c.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),c.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&c.updateColor4("opacityParts",new K.Bk(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(c.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),c.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(c.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),c.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(c.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),c.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),A.texturesEnabled){if(this._diffuseTexture&&p.DiffuseTextureEnabled&&(c.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,w.q)(this._diffuseTexture,c,"diffuse")),this._ambientTexture&&p.AmbientTextureEnabled&&(c.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,w.q)(this._ambientTexture,c,"ambient")),this._opacityTexture&&p.OpacityTextureEnabled&&(c.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,w.q)(this._opacityTexture,c,"opacity")),this._hasAlphaChannel()&&c.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&p.ReflectionTextureEnabled){if(c.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),c.Fh("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const s=this._reflectionTexture;c.updateVector3("vReflectionPosition",s.boundingBoxPosition),c.updateVector3("vReflectionSize",s.boundingBoxSize)}}else c.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&p.EmissiveTextureEnabled&&(c.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,w.q)(this._emissiveTexture,c,"emissive")),this._lightmapTexture&&p.LightmapTextureEnabled&&(c.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,w.q)(this._lightmapTexture,c,"lightmap")),this._specularTexture&&p.SpecularTextureEnabled&&(c.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,w.q)(this._specularTexture,c,"specular")),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&(c.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,w.q)(this._bumpTexture,c,"bump"),A._mirroredCameraPosition?c.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):c.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&p.RefractionTextureEnabled){let s=1;if(this._refractionTexture.isCube||(c.Fh("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(s=this._refractionTexture.depth)),c.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,s,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const s=this._refractionTexture;c.updateVector3("vRefractionPosition",s.boundingBoxPosition),c.updateVector3("vRefractionSize",s.boundingBoxSize)}}}this.pointsCloud&&c.updateFloat("pointSize",this.pointSize),c.updateColor4("vSpecularColor",this.specularColor,this.specularPower),c.updateColor3("vEmissiveColor",p.EmissiveTextureEnabled?this.emissiveColor:K.Bk.BlackReadOnly),c.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),A.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),c.updateColor3("vAmbientColor",this._globalAmbientColor)}A.texturesEnabled&&(this._diffuseTexture&&p.DiffuseTextureEnabled&&ms.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&p.AmbientTextureEnabled&&ms.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&p.OpacityTextureEnabled&&ms.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&p.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?ms.setTexture("reflectionCubeSampler",this._reflectionTexture):ms.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&p.EmissiveTextureEnabled&&ms.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&p.LightmapTextureEnabled&&ms.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&p.SpecularTextureEnabled&&ms.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&ms.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&p.RefractionTextureEnabled&&(this._refractionTexture.isCube?ms.setTexture("refractionCubeSampler",this._refractionTexture):ms.setTexture("refraction2DSampler",this._refractionTexture))),this.Is().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(k)&&this.Is().depthPeelingRenderer.bind(ms),this._eventInfo.subMesh=h,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,D.d)(ms,this,A),this.bindEyePosition(ms)}else A.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(O||!this.isFrozen){var S;if(A.lightsEnabled&&!this._disableLighting&&(0,w.i)(A,k,ms,g,this._maxSimultaneousLights),(A.fogEnabled&&k.applyFog&&A.fogMode!==i.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||k.receiveShadows||g.PREPASS)&&this.bindView(ms),(0,w.f)(A,k,ms),g.NUM_MORPH_INFLUENCERS&&(0,w.m)(k,ms),g.BAKED_VERTEX_ANIMATION_TEXTURE)null===(S=k.bakedVertexAnimationManager)||void 0===S||S.bind(ms,g.INSTANCES);this.useLogarithmicDepth&&(0,w.j)(g,ms,A),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(k,this._activeEffect,h),c.update()}getAnimatables(){const s=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&s.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&s.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&s.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&s.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&s.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&s.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&s.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&s.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&s.push(this._refractionTexture),s}getActiveTextures(){const s=super.getActiveTextures();return this._diffuseTexture&&s.push(this._diffuseTexture),this._ambientTexture&&s.push(this._ambientTexture),this._opacityTexture&&s.push(this._opacityTexture),this._reflectionTexture&&s.push(this._reflectionTexture),this._emissiveTexture&&s.push(this._emissiveTexture),this._specularTexture&&s.push(this._specularTexture),this._bumpTexture&&s.push(this._bumpTexture),this._lightmapTexture&&s.push(this._lightmapTexture),this._refractionTexture&&s.push(this._refractionTexture),s}hasTexture(s){return!!super.hasTexture(s)||(this._diffuseTexture===s||(this._ambientTexture===s||(this._opacityTexture===s||(this._reflectionTexture===s||(this._emissiveTexture===s||(this._specularTexture===s||(this._bumpTexture===s||(this._lightmapTexture===s||this._refractionTexture===s))))))))}dispose(s,k){var h,A,g,ms,i,K,H,O,c;k&&(null===(h=this._diffuseTexture)||void 0===h||h.dispose(),null===(A=this._ambientTexture)||void 0===A||A.dispose(),null===(g=this._opacityTexture)||void 0===g||g.dispose(),null===(ms=this._reflectionTexture)||void 0===ms||ms.dispose(),null===(i=this._emissiveTexture)||void 0===i||i.dispose(),null===(K=this._specularTexture)||void 0===K||K.dispose(),null===(H=this._bumpTexture)||void 0===H||H.dispose(),null===(O=this._lightmapTexture)||void 0===O||O.dispose(),null===(c=this._refractionTexture)||void 0===c||c.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(s,k)}clone(s){let k=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const A=B.e.Clone((()=>new p(s,this.Is())),this,{cloneTexturesOnlyOnce:k});return A.name=s,A.id=s,this.Bh.copyTo(A.Bh),this._clonePlugins(A,h),A}static Parse(s,k,h){const A=B.e.Parse((()=>new p(s.name,k)),s,k,h);return s.Bh&&A.Bh.parse(s.Bh,k,h),S.b._ParsePlugins(s,A,k,h),A}static get DiffuseTextureEnabled(){return j.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(s){j.b.DiffuseTextureEnabled=s}static get DetailTextureEnabled(){return j.b.DetailTextureEnabled}static set DetailTextureEnabled(s){j.b.DetailTextureEnabled=s}static get AmbientTextureEnabled(){return j.b.AmbientTextureEnabled}static set AmbientTextureEnabled(s){j.b.AmbientTextureEnabled=s}static get OpacityTextureEnabled(){return j.b.OpacityTextureEnabled}static set OpacityTextureEnabled(s){j.b.OpacityTextureEnabled=s}static get ReflectionTextureEnabled(){return j.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(s){j.b.ReflectionTextureEnabled=s}static get EmissiveTextureEnabled(){return j.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(s){j.b.EmissiveTextureEnabled=s}static get SpecularTextureEnabled(){return j.b.SpecularTextureEnabled}static set SpecularTextureEnabled(s){j.b.SpecularTextureEnabled=s}static get BumpTextureEnabled(){return j.b.BumpTextureEnabled}static set BumpTextureEnabled(s){j.b.BumpTextureEnabled=s}static get LightmapTextureEnabled(){return j.b.LightmapTextureEnabled}static set LightmapTextureEnabled(s){j.b.LightmapTextureEnabled=s}static get RefractionTextureEnabled(){return j.b.RefractionTextureEnabled}static set RefractionTextureEnabled(s){j.b.RefractionTextureEnabled=s}static get ColorGradingTextureEnabled(){return j.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(s){j.b.ColorGradingTextureEnabled=s}static get FresnelEnabled(){return j.b.FresnelEnabled}static set FresnelEnabled(s){j.b.FresnelEnabled=s}}p.ForceGLSL=!1,(0,A.e)([(0,g.E)("diffuseTexture")],p.prototype,"_diffuseTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"diffuseTexture",void 0),(0,A.e)([(0,g.E)("ambientTexture")],p.prototype,"_ambientTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"ambientTexture",void 0),(0,A.e)([(0,g.E)("opacityTexture")],p.prototype,"_opacityTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"opacityTexture",void 0),(0,A.e)([(0,g.E)("reflectionTexture")],p.prototype,"_reflectionTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"reflectionTexture",void 0),(0,A.e)([(0,g.E)("emissiveTexture")],p.prototype,"_emissiveTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"emissiveTexture",void 0),(0,A.e)([(0,g.E)("specularTexture")],p.prototype,"_specularTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"specularTexture",void 0),(0,A.e)([(0,g.E)("bumpTexture")],p.prototype,"_bumpTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"bumpTexture",void 0),(0,A.e)([(0,g.E)("lightmapTexture")],p.prototype,"_lightmapTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"lightmapTexture",void 0),(0,A.e)([(0,g.E)("refractionTexture")],p.prototype,"_refractionTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"refractionTexture",void 0),(0,A.e)([(0,g.j)("ambient")],p.prototype,"ambientColor",void 0),(0,A.e)([(0,g.j)("diffuse")],p.prototype,"diffuseColor",void 0),(0,A.e)([(0,g.j)("specular")],p.prototype,"specularColor",void 0),(0,A.e)([(0,g.j)("emissive")],p.prototype,"emissiveColor",void 0),(0,A.e)([(0,g.J)()],p.prototype,"specularPower",void 0),(0,A.e)([(0,g.J)("useAlphaFromDiffuseTexture")],p.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"useAlphaFromDiffuseTexture",void 0),(0,A.e)([(0,g.J)("useEmissiveAsIllumination")],p.prototype,"_useEmissiveAsIllumination",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useEmissiveAsIllumination",void 0),(0,A.e)([(0,g.J)("linkEmissiveWithDiffuse")],p.prototype,"_linkEmissiveWithDiffuse",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"linkEmissiveWithDiffuse",void 0),(0,A.e)([(0,g.J)("useSpecularOverAlpha")],p.prototype,"_useSpecularOverAlpha",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useSpecularOverAlpha",void 0),(0,A.e)([(0,g.J)("useReflectionOverAlpha")],p.prototype,"_useReflectionOverAlpha",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useReflectionOverAlpha",void 0),(0,A.e)([(0,g.J)("disableLighting")],p.prototype,"_disableLighting",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsLightsDirty")],p.prototype,"disableLighting",void 0),(0,A.e)([(0,g.J)("useObjectSpaceNormalMap")],p.prototype,"_useObjectSpaceNormalMap",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useObjectSpaceNormalMap",void 0),(0,A.e)([(0,g.J)("useParallax")],p.prototype,"_useParallax",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallax",void 0),(0,A.e)([(0,g.J)("useParallaxOcclusion")],p.prototype,"_useParallaxOcclusion",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallaxOcclusion",void 0),(0,A.e)([(0,g.J)()],p.prototype,"parallaxScaleBias",void 0),(0,A.e)([(0,g.J)("roughness")],p.prototype,"_roughness",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"roughness",void 0),(0,A.e)([(0,g.J)()],p.prototype,"indexOfRefraction",void 0),(0,A.e)([(0,g.J)()],p.prototype,"invertRefractionY",void 0),(0,A.e)([(0,g.J)()],p.prototype,"alphaCutOff",void 0),(0,A.e)([(0,g.J)("useLightmapAsShadowmap")],p.prototype,"_useLightmapAsShadowmap",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useLightmapAsShadowmap",void 0),(0,A.e)([(0,g.q)("diffuseFresnelParameters")],p.prototype,"_diffuseFresnelParameters",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"diffuseFresnelParameters",void 0),(0,A.e)([(0,g.q)("opacityFresnelParameters")],p.prototype,"_opacityFresnelParameters",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],p.prototype,"opacityFresnelParameters",void 0),(0,A.e)([(0,g.q)("reflectionFresnelParameters")],p.prototype,"_reflectionFresnelParameters",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"reflectionFresnelParameters",void 0),(0,A.e)([(0,g.q)("refractionFresnelParameters")],p.prototype,"_refractionFresnelParameters",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"refractionFresnelParameters",void 0),(0,A.e)([(0,g.q)("emissiveFresnelParameters")],p.prototype,"_emissiveFresnelParameters",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"emissiveFresnelParameters",void 0),(0,A.e)([(0,g.J)("useReflectionFresnelFromSpecular")],p.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"useReflectionFresnelFromSpecular",void 0),(0,A.e)([(0,g.J)("useGlossinessFromSpecularMapAlpha")],p.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,A.e)([(0,g.J)("maxSimultaneousLights")],p.prototype,"_maxSimultaneousLights",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsLightsDirty")],p.prototype,"maxSimultaneousLights",void 0),(0,A.e)([(0,g.J)("invertNormalMapX")],p.prototype,"_invertNormalMapX",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapX",void 0),(0,A.e)([(0,g.J)("invertNormalMapY")],p.prototype,"_invertNormalMapY",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapY",void 0),(0,A.e)([(0,g.J)("twoSidedLighting")],p.prototype,"_twoSidedLighting",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"twoSidedLighting",void 0),(0,A.e)([(0,g.J)("applyDecalMapAfterDetailMap")],p.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,A.e)([(0,g.b)("_markAllSubMeshesAsMiscDirty")],p.prototype,"applyDecalMapAfterDetailMap",void 0),(0,E.f)("BABYLON.StandardMaterial",p),i.d.DefaultMaterialFactory=s=>new p("default material",s)}}]);