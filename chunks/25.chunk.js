"use strict";(self.kdlk57exiqh=self.kdlk57exiqh||[]).push([[25],{12605:(i,x,e)=>{e.d(x,{b:()=>A});var j=e(12234),E=e(12539),a=e(12236),Y=e(12599),J=e(12591),u=e(12613),b=e(12571);class g extends J.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class A extends u.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(i){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(i,"DetailMap",140,new g,x),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=E.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=i._dirtyCallbacks[1]}isReadyForSubMesh(i,x,e){return!this._isEnabled||!(i._areTexturesDirty&&x.texturesEnabled&&e.getCaps().standardDerivatives&&this._texture&&Y.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(i,x){if(this._isEnabled){i.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const e=x.getEngine();i._areTexturesDirty&&(e.getCaps().standardDerivatives&&this._texture&&Y.b.DetailTextureEnabled&&this._isEnabled?((0,b.J)(this._texture,i,"DETAIL"),i.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):i.DETAIL=!1)}else i.DETAIL=!1}bindForSubMesh(i,x){if(!this._isEnabled)return;const e=this._material.isFrozen;i.useUbo&&e&&i.isSync||this._texture&&Y.b.DetailTextureEnabled&&(i.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,b.q)(this._texture,i,"detail")),x.texturesEnabled&&this._texture&&Y.b.DetailTextureEnabled&&i.setTexture("detailSampler",this._texture)}hasTexture(i){return this._texture===i}getActiveTextures(i){this._texture&&i.push(this._texture)}getAnimatables(i){this._texture&&this._texture.animations&&this._texture.animations.length>0&&i.push(this._texture)}dispose(i){var x;i&&(null===(x=this._texture)||void 0===x||x.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(i){i.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,j.e)([(0,a.D)("detailTexture"),(0,a.d)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"texture",void 0),(0,j.e)([(0,a.O)()],A.prototype,"diffuseBlendLevel",void 0),(0,j.e)([(0,a.O)()],A.prototype,"roughnessBlendLevel",void 0),(0,j.e)([(0,a.O)()],A.prototype,"bumpLevel",void 0),(0,j.e)([(0,a.O)(),(0,a.d)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"normalBlendMethod",void 0),(0,j.e)([(0,a.O)(),(0,a.d)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"isEnabled",void 0)},12591:(i,x,e)=>{e.d(x,{e:()=>j});class j{constructor(i){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=i,i)for(const x in i)Object.prototype.hasOwnProperty.call(i,x)&&this._setDefaultValue(x)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let i=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||i,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const i of Object.keys(this))"_"!==i[0]&&this._keys.push(i);if(this._externalProperties)for(const i in this._externalProperties)-1===this._keys.indexOf(i)&&this._keys.push(i)}isEqual(i){if(this._keys.length!==i._keys.length)return!1;for(let x=0;x<this._keys.length;x++){const e=this._keys[x];if(this[e]!==i[e])return!1}return!0}cloneTo(i){this._keys.length!==i._keys.length&&(i._keys=this._keys.slice(0));for(let x=0;x<this._keys.length;x++){const e=this._keys[x];i[e]=this[e]}}reset(){for(const i of this._keys)this._setDefaultValue(i)}_setDefaultValue(i){var x,e,j,E;const a=(null===(x=this._externalProperties)||void 0===x||null===(e=x[i])||void 0===e?void 0:e.type)??typeof this[i],Y=null===(j=this._externalProperties)||void 0===j||null===(E=j[i])||void 0===E?void 0:E.default;switch(a){case"number":this[i]=Y??0;break;case"string":this[i]=Y??"";break;default:this[i]=Y??!1}}toString(){let i="";for(let x=0;x<this._keys.length;x++){const e=this._keys[x],j=this[e];switch(typeof j){case"number":case"string":i+="#define "+e+" "+j+"\n";break;default:j&&(i+="#define "+e+"\n")}}return i}}},12599:(i,x,e)=>{e.d(x,{b:()=>E});var j=e(12150);class E{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(i){this._DiffuseTextureEnabled!==i&&(this._DiffuseTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(i){this._BaseWeightTextureEnabled!==i&&(this._BaseWeightTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(i){this._BaseDiffuseRoughnessTextureEnabled!==i&&(this._BaseDiffuseRoughnessTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(i){this._DetailTextureEnabled!==i&&(this._DetailTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(i){this._DecalMapEnabled!==i&&(this._DecalMapEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(i){this._AmbientTextureEnabled!==i&&(this._AmbientTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(i){this._OpacityTextureEnabled!==i&&(this._OpacityTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(i){this._ReflectionTextureEnabled!==i&&(this._ReflectionTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(i){this._EmissiveTextureEnabled!==i&&(this._EmissiveTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(i){this._SpecularTextureEnabled!==i&&(this._SpecularTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(i){this._BumpTextureEnabled!==i&&(this._BumpTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(i){this._LightmapTextureEnabled!==i&&(this._LightmapTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(i){this._RefractionTextureEnabled!==i&&(this._RefractionTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(i){this._ColorGradingTextureEnabled!==i&&(this._ColorGradingTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(i){this._FresnelEnabled!==i&&(this._FresnelEnabled=i,j.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(i){this._ClearCoatTextureEnabled!==i&&(this._ClearCoatTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(i){this._ClearCoatBumpTextureEnabled!==i&&(this._ClearCoatBumpTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(i){this._ClearCoatTintTextureEnabled!==i&&(this._ClearCoatTintTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(i){this._SheenTextureEnabled!==i&&(this._SheenTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(i){this._AnisotropicTextureEnabled!==i&&(this._AnisotropicTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(i){this._ThicknessTextureEnabled!==i&&(this._ThicknessTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(i){this._RefractionIntensityTextureEnabled!==i&&(this._RefractionIntensityTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(i){this._TranslucencyIntensityTextureEnabled!==i&&(this._TranslucencyIntensityTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(i){this._TranslucencyColorTextureEnabled!==i&&(this._TranslucencyColorTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(i){this._IridescenceTextureEnabled!==i&&(this._IridescenceTextureEnabled=i,j.c.MarkAllMaterialsAsDirty(1))}}E._DiffuseTextureEnabled=!0,E._BaseWeightTextureEnabled=!0,E._BaseDiffuseRoughnessTextureEnabled=!0,E._DetailTextureEnabled=!0,E._DecalMapEnabled=!0,E._AmbientTextureEnabled=!0,E._OpacityTextureEnabled=!0,E._ReflectionTextureEnabled=!0,E._EmissiveTextureEnabled=!0,E._SpecularTextureEnabled=!0,E._BumpTextureEnabled=!0,E._LightmapTextureEnabled=!0,E._RefractionTextureEnabled=!0,E._ColorGradingTextureEnabled=!0,E._FresnelEnabled=!0,E._ClearCoatTextureEnabled=!0,E._ClearCoatBumpTextureEnabled=!0,E._ClearCoatTintTextureEnabled=!0,E._SheenTextureEnabled=!0,E._AnisotropicTextureEnabled=!0,E._ThicknessTextureEnabled=!0,E._RefractionIntensityTextureEnabled=!0,E._TranslucencyIntensityTextureEnabled=!0,E._TranslucencyColorTextureEnabled=!0,E._IridescenceTextureEnabled=!0},12621:(i,x,e)=>{e.d(x,{c:()=>a});var j,E=e(12250);!function(i){i[i.Zero=0]="Zero",i[i.One=1]="One",i[i.MaxViewZ=2]="MaxViewZ"}(j||(j={}));class a{static CreateConfiguration(i){return a._Configurations[i]={defines:{},previousWorldMatrices:{},previousViewProjection:E.Matrix.Zero(),currentViewProjection:E.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},a._Configurations[i]}static DeleteConfiguration(i){delete a._Configurations[i]}static GetConfiguration(i){return a._Configurations[i]}static AddUniformsAndSamplers(i,x){i.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(i,x){for(const e of x)if(e.ne)for(const x of e.ne)x._removeDrawWrapper(i)}static PrepareDefines(i,x,e){if(!e._arePrePassDirty)return;const j=a._Configurations[i];if(!j)return;e.PREPASS=!0,e.PREPASS_COLOR=!1,e.PREPASS_COLOR_INDEX=-1;let E=0;for(let Y=0;Y<a.GeometryTextureDescriptions.length;Y++){const i=a.GeometryTextureDescriptions[Y],x=i.define,J=i.defineIndex,u=j.defines[J];void 0!==u?(e[x]=!0,e[J]=u,E++):(e[x]=!1,delete e[J])}e.SCENE_MRT_COUNT=E,e.BONES_VELOCITY_ENABLED=x.useBones&&x.computeBonesUsingShaders&&x.skeleton&&!x.skeleton.isUsingTextureForMatrices&&-1===j.excludedSkinnedMesh.indexOf(x)}static Bind(i,x,e,j,E){const Y=a._Configurations[i];if(!Y)return;const J=e.wi(),u=J.getEngine();if(Y.reverseCulling&&u.setStateCullFaceType(J._mirroredCameraPosition?E.cullBackFaces:!E.cullBackFaces),(void 0!==Y.defines.PREPASS_VELOCITY_INDEX||void 0!==Y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Y.previousWorldMatrices[e.uniqueId]||(Y.previousWorldMatrices[e.uniqueId]=j.clone()),Y.previousViewProjection||(Y.previousViewProjection=J.getTransformMatrix().clone(),Y.currentViewProjection=J.getTransformMatrix().clone()),Y.currentViewProjection.updateFlag!==J.getTransformMatrix().updateFlag?(Y.lastUpdateFrameId=u.frameId,Y.previousViewProjection.A(Y.currentViewProjection),Y.currentViewProjection.A(J.getTransformMatrix())):Y.lastUpdateFrameId!==u.frameId&&(Y.lastUpdateFrameId=u.frameId,Y.previousViewProjection.A(Y.currentViewProjection)),x.setMatrix("previousWorld",Y.previousWorldMatrices[e.uniqueId]),x.setMatrix("previousViewProjection",Y.previousViewProjection),Y.previousWorldMatrices[e.uniqueId]=j.clone(),e.useBones&&e.computeBonesUsingShaders&&e.skeleton)){const i=e.skeleton;if(!i.isUsingTextureForMatrices||-1===x.getUniformIndex("boneTextureWidth")){const j=i.getTransformMatrices(e);j&&(Y.previousBones[e.uniqueId]||(Y.previousBones[e.uniqueId]=j.slice()),x.setMatrices("mPreviousBones",Y.previousBones[e.uniqueId]),Y.previousBones[e.uniqueId].set(j))}}}}a.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],a._Configurations={}},12613:(i,x,e)=>{e.d(x,{e:()=>T});var j=e(12234),E=e(12236),a=e(12539),Y=e(12108),J=e(12132),u=e(12162);const b=new RegExp("^([gimus]+)!");class g{constructor(i){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=i,this._scene=i.wi(),this._engine=this._scene.getEngine()}_addPlugin(i){for(let j=0;j<this._plugins.length;++j)if(this._plugins[j].name===i.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!i.isCompatible(this._material.shaderLanguage))throw`The plugin "${i.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const x=i.getClassName();g._MaterialPluginClassToMainDefine[x]||(g._MaterialPluginClassToMainDefine[x]="MATERIALPLUGIN_"+ ++g._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(i,x)=>this._handlePluginEvent(i,x),this._plugins.push(i),this._plugins.sort(((i,x)=>i.priority-x.priority)),this._codeInjectionPoints={};const e={};e[g._MaterialPluginClassToMainDefine[x]]={type:"boolean",default:!0};for(const j of this._plugins)j.collectDefines(e),this._collectPointNames("vertex",j.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",j.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=e,!0}_activatePlugin(i){-1===this._activePlugins.indexOf(i)&&(this._activePlugins.push(i),this._activePlugins.sort(((i,x)=>i.priority-x.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),i.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(i),this._activePluginsForExtraEvents.sort(((i,x)=>i.priority-x.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(i){for(let x=0;x<this._plugins.length;++x)if(this._plugins[x].name===i)return this._plugins[x];return null}_handlePluginEventIsReadyForSubMesh(i){let x=!0;for(const e of this._activePlugins)x=x&&e.isReadyForSubMesh(i.defines,this._scene,this._engine,i.subMesh);i.isReadyForSubMesh=x}_handlePluginEventPrepareDefinesBeforeAttributes(i){for(const x of this._activePlugins)x.prepareDefinesBeforeAttributes(i.defines,this._scene,i.mesh)}_handlePluginEventPrepareDefines(i){for(const x of this._activePlugins)x.prepareDefines(i.defines,this._scene,i.mesh)}_handlePluginEventHardBindForSubMesh(i){for(const x of this._activePluginsForExtraEvents)x.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,i.subMesh)}_handlePluginEventBindForSubMesh(i){for(const x of this._activePlugins)x.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,i.subMesh)}_handlePluginEventHasRenderTargetTextures(i){let x=!1;for(const e of this._activePluginsForExtraEvents)if(x=e.hasRenderTargetTextures(),x)break;i.hasRenderTargetTextures=x}_handlePluginEventFillRenderTargetTextures(i){for(const x of this._activePluginsForExtraEvents)x.fillRenderTargetTextures(i.renderTargets)}_handlePluginEvent(i,x){switch(i){case 512:{const i=x;for(const x of this._activePlugins)x.getActiveTextures(i.activeTextures);break}case 256:{const i=x;for(const x of this._activePlugins)x.getAnimatables(i.animatables);break}case 1024:{const i=x;let e=!1;for(const x of this._activePlugins)if(e=x.hasTexture(i.texture),e)break;i.hasTexture=e;break}case 2:{const i=x;for(const x of this._plugins)x.dispose(i.forceDisposeTextures);break}case 4:x.defineNames=this._defineNamesFromPlugins;break;case 128:{const i=x;for(const x of this._activePlugins)i.fallbackRank=x.addFallbacks(i.defines,i.fallbacks,i.fallbackRank),x.getAttributes(i.attributes,this._scene,i.mesh);this._uniformList.length>0&&i.uniforms.push(...this._uniformList),this._samplerList.length>0&&i.samplers.push(...this._samplerList),this._uboList.length>0&&i.uniformBuffersNames.push(...this._uboList),i.customCode=this._injectCustomCode(i,i.customCode);break}case 8:{const i=x;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const e=1===this._material.shaderLanguage;for(const x of this._plugins){const j=x.getUniforms(this._material.shaderLanguage);if(j){if(j.ubo)for(const x of j.ubo){if(x.size&&x.type){const j=x.arraySize??0;if(i.ubo.addUniform(x.name,x.size,j),e){let i;switch(x.type){case"mat4":i="mat4x4f";break;case"float":i="f32";break;default:i=`${x.type}f`}this._uboDeclaration+=j>0?`uniform ${x.name}: array<${i}, ${j}>;\n`:`uniform ${x.name}: ${i};\n`}else this._uboDeclaration+=`${x.type} ${x.name}${j>0?`[${j}]`:""};\n`}this._uniformList.push(x.name)}j.vertex&&(this._vertexDeclaration+=j.vertex+"\n"),j.fragment&&(this._fragmentDeclaration+=j.fragment+"\n")}x.getSamplers(this._samplerList),x.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(i,x){if(x)for(const e in x)this._codeInjectionPoints[i]||(this._codeInjectionPoints[i]={}),this._codeInjectionPoints[i][e]=!0}_injectCustomCode(i,x){return(e,j)=>{var E;x&&(j=x(e,j)),this._uboDeclaration&&(j=j.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(j=j.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(j=j.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const a=null===(E=this._codeInjectionPoints)||void 0===E?void 0:E[e];if(!a)return j;let Y=null;for(let x in a){let E="";for(const j of this._activePlugins){var g;let a=null===(g=j.getCustomCode(e,this._material.shaderLanguage))||void 0===g?void 0:g[x];if(a){if(j.resolveIncludes){if(null===Y){const x=0;Y={defines:[],indexParameters:i.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:u.c.GetShadersRepository(x),includesShadersStore:u.c.GetIncludesShadersStore(x),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,ue:this._engine.ue,processCodeAfterIncludes:void 0}}Y.isFragment="fragment"===e,(0,J.e)(a,Y,(i=>a=i))}E+=a+"\n"}}if(E.length>0)if("!"===x.charAt(0)){x=x.substring(1);let i="g";if("!"===x.charAt(0))i="",x=x.substring(1);else{const e=b.exec(x);e&&e.length>=2&&(i=e[1],x=x.substring(i.length+1))}i.indexOf("g")<0&&(i+="g");const e=j,a=new RegExp(x,i);let Y=a.exec(e);for(;null!==Y;){let i=E;for(let x=0;x<Y.length;++x)i=i.replace("$"+x,Y[x]);j=j.replace(Y[0],i),Y=a.exec(e)}}else{const i="#define "+x;j=j.replace(i,"\n"+E+"\n"+i)}}return j}}}g._MaterialPluginClassToMainDefine={},g._MaterialPluginCounter=0,Y.e.OnEnginesDisposedObservable.add((()=>{o()}));const A=[];let K=!1,L=null;function o(){A.length=0,K=!1,a.e.OnEventObservable.remove(L),L=null}var M=e(12278),z=e(12204);class T{isCompatible(i){return 0===i}_enable(i){i&&this._pluginManager._activatePlugin(this)}constructor(i,x,e,j){let E=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=i,this.name=x,this.priority=e,this.resolveIncludes=Y,i.pluginManager||(i.pluginManager=new g(i),i.te.add((()=>{i.pluginManager=void 0}))),this._pluginDefineNames=j,this._pluginManager=i.pluginManager,E&&this._pluginManager._addPlugin(this),a&&this._enable(!0),this.markAllDefinesAsDirty=i._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(i,x,e,j){return!0}hardBindForSubMesh(i,x,e,j){}bindForSubMesh(i,x,e,j){}dispose(i){}getCustomCode(i){return null}collectDefines(i){if(this._pluginDefineNames)for(const x of Object.keys(this._pluginDefineNames)){if("_"===x[0])continue;const e=typeof this._pluginDefineNames[x];i[x]={type:"number"===e?"number":"string"===e?"string":"boolean"===e?"boolean":"object",default:this._pluginDefineNames[x]}}}prepareDefinesBeforeAttributes(i,x,e){}prepareDefines(i,x,e){}hasTexture(i){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(i){}getActiveTextures(i){}getAnimatables(i){}addFallbacks(i,x,e){return e}getSamplers(i){}getAttributes(i,x,e){}getUniformBuffersNames(i){}getUniforms(){return{}}copyTo(i){M.b.Clone((()=>i),this)}serialize(){return M.b.Serialize(this)}parse(i,x,e){M.b.Parse((()=>this),i,x,e)}}(0,j.e)([(0,E.O)()],T.prototype,"name",void 0),(0,j.e)([(0,E.O)()],T.prototype,"priority",void 0),(0,j.e)([(0,E.O)()],T.prototype,"resolveIncludes",void 0),(0,j.e)([(0,E.O)()],T.prototype,"registerForExtraEvents",void 0),(0,z.f)("BABYLON.MaterialPluginBase",T)},12587:(i,x,e)=>{e.d(x,{b:()=>j});class j{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(i){i.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(i){}bindForSubMesh(i,x,e,j,E){if(x.prePassRenderer&&x.prePassRenderer.enabled&&x.prePassRenderer.currentRTisSceneRT&&(-1!==x.prePassRenderer.getIndex(2)||-1!==x.prePassRenderer.getIndex(11))){this.previousWorldMatrices[e.uniqueId]||(this.previousWorldMatrices[e.uniqueId]=j.clone()),this.previousViewProjection||(this.previousViewProjection=x.getTransformMatrix().clone(),this.currentViewProjection=x.getTransformMatrix().clone());const E=x.getEngine();this.currentViewProjection.updateFlag!==x.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.A(this.currentViewProjection),this.currentViewProjection.A(x.getTransformMatrix())):this._lastUpdateFrameId!==E.frameId&&(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.A(this.currentViewProjection)),i.setMatrix("previousWorld",this.previousWorldMatrices[e.uniqueId]),i.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[e.uniqueId]=j.clone()}}}},12583:(i,x,e)=>{e.d(x,{oJ:()=>l});var j=e(12234),E=e(12236),a=e(12334),Y=e(12452),J=e(12286),u=e(12314),b=e(12587),g=e(12454),A=e(12539),K=e(12591),L=e(12537),o=e(12227),M=e(12204),z=e(12599),T=e(12530),Q=e(12605),t=e(12580),V=e(12571),S=e(12278),f=e(12621);const w={effect:null,subMesh:null};class O extends K.e{constructor(i){super(i),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(i){const x=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const e of x)this[e]=e===i}}class l extends L.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(i){this._attachImageProcessingConfiguration(i),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(i){i!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=i||this.wi().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(i){this.imageProcessingConfiguration.colorCurvesEnabled=i}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(i){this.imageProcessingConfiguration.colorGradingEnabled=i}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(i){this._imageProcessingConfiguration.toneMappingEnabled=i}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(i){this._imageProcessingConfiguration.exposure=i}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(i){this._imageProcessingConfiguration.contrast=i}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(i){this._imageProcessingConfiguration.colorGradingTexture=i}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(i){this._imageProcessingConfiguration.colorCurves=i}get canRenderToMRT(){return!0}constructor(i,x){super(i,x,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||l.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new J.MJ(0,0,0),this.diffuseColor=new J.MJ(1,1,1),this.specularColor=new J.MJ(1,1,1),this.emissiveColor=new J.MJ(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new a.e(16),this._globalAmbientColor=new J.MJ(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Q.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new b.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"oJ"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===A.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.He&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==A.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.He||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(i,x){let j=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const E=x._drawWrapper;if(E.effect&&this.isFrozen&&E._wasPreviouslyReady&&E._wasPreviouslyUsingInstances===j)return!0;x.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),x.materialDefines=new O(this._eventInfo.defineNames));const a=this.wi(),Y=x.materialDefines;if(this._isReadyForSubMesh(x))return!0;const J=a.getEngine();Y._needNormals=(0,V.H)(a,i,Y,!0,this._maxSimultaneousLights,this._disableLighting),(0,V.P)(a,Y);const A=this.needAlphaBlendingForMesh(i)&&this.wi().useOrderIndependentTransparency;if((0,V.V)(a,Y,this.canRenderToMRT&&!A),(0,V.S)(a,Y,A),f.c.PrepareDefines(J.currentRenderPassId,i,Y),Y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Y._needUVs=!1;for(let i=1;i<=6;++i)Y["MAINUV"+i]=!1;if(a.texturesEnabled){if(Y.DIFFUSEDIRECTUV=0,Y.BUMPDIRECTUV=0,Y.AMBIENTDIRECTUV=0,Y.OPACITYDIRECTUV=0,Y.EMISSIVEDIRECTUV=0,Y.SPECULARDIRECTUV=0,Y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&l.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._diffuseTexture,Y,"DIFFUSE")}else Y.DIFFUSE=!1;if(this._ambientTexture&&l.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._ambientTexture,Y,"AMBIENT")}else Y.AMBIENT=!1;if(this._opacityTexture&&l.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._opacityTexture,Y,"OPACITY"),Y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Y.OPACITY=!1;if(this._reflectionTexture&&l.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Y._needNormals=!0,Y.REFLECTION=!0,Y.ROUGHNESS=this._roughness>0,Y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===o.d.INVCUBIC_MODE,Y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Y.REFLECTIONMAP_OPPOSITEZ=Y.REFLECTIONMAP_3D&&this.wi().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case o.d.EXPLICIT_MODE:Y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case o.d.PLANAR_MODE:Y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case o.d.PROJECTION_MODE:Y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case o.d.SKYBOX_MODE:Y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case o.d.SPHERICAL_MODE:Y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case o.d.EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case o.d.FIXED_EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case o.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case o.d.CUBIC_MODE:case o.d.INVCUBIC_MODE:default:Y.setReflectionMode("REFLECTIONMAP_CUBIC")}Y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Y.REFLECTION=!1,Y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&l.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._emissiveTexture,Y,"EMISSIVE")}else Y.EMISSIVE=!1;if(this._lightmapTexture&&l.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._lightmapTexture,Y,"LIGHTMAP"),Y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Y.LIGHTMAP=!1;if(this._specularTexture&&l.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,V.J)(this._specularTexture,Y,"SPECULAR"),Y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Y.SPECULAR=!1;if(a.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&l.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,V.J)(this._bumpTexture,Y,"BUMP"),Y.PARALLAX=this._useParallax,Y.PARALLAX_RHS=a.useRightHandedSystem,Y.PARALLAXOCCLUSION=this._useParallaxOcclusion,Y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Y.BUMP=!1,Y.PARALLAX=!1,Y.PARALLAX_RHS=!1,Y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&l.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Y._needUVs=!0,Y.REFRACTION=!0,Y.REFRACTIONMAP_3D=this._refractionTexture.isCube,Y.RGBDREFRACTION=this._refractionTexture.isRGBD,Y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Y.REFRACTION=!1;Y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Y.DIFFUSE=!1,Y.AMBIENT=!1,Y.OPACITY=!1,Y.REFLECTION=!1,Y.EMISSIVE=!1,Y.LIGHTMAP=!1,Y.BUMP=!1,Y.REFRACTION=!1;Y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Y.SPECULAROVERALPHA=this._useSpecularOverAlpha,Y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(i)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Y,this._eventInfo.subMesh=x,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Y),Y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Y._areFresnelDirty&&(l.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Y._needNormals=!0,Y.FRESNEL=!0):Y.FRESNEL=!1),Y.AREALIGHTUSED)for(let e=0;e<i.lightSources.length;e++)if(!i.lightSources[e]._isReady())return!1;(0,V.M)(i,a,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(i),Y,this._applyDecalMapAfterDetailMap),(0,V.G)(a,J,this,Y,j,null,x.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Y,this._eventInfo.mesh=i,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,V.E)(i,Y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let K=!1;if(Y.isDirty){const j=Y._areLightsDisposed;Y.markAsProcessed();const E=new T.b;Y.REFLECTION&&E.addFallback(0,"REFLECTION"),Y.SPECULAR&&E.addFallback(0,"SPECULAR"),Y.BUMP&&E.addFallback(0,"BUMP"),Y.PARALLAX&&E.addFallback(1,"PARALLAX"),Y.PARALLAX_RHS&&E.addFallback(1,"PARALLAX_RHS"),Y.PARALLAXOCCLUSION&&E.addFallback(0,"PARALLAXOCCLUSION"),Y.SPECULAROVERALPHA&&E.addFallback(0,"SPECULAROVERALPHA"),Y.FOG&&E.addFallback(1,"FOG"),Y.POINTSIZE&&E.addFallback(0,"POINTSIZE"),Y.LOGARITHMICDEPTH&&E.addFallback(0,"LOGARITHMICDEPTH"),(0,V.r)(Y,E,this._maxSimultaneousLights),Y.SPECULARTERM&&E.addFallback(0,"SPECULARTERM"),Y.DIFFUSEFRESNEL&&E.addFallback(1,"DIFFUSEFRESNEL"),Y.OPACITYFRESNEL&&E.addFallback(2,"OPACITYFRESNEL"),Y.REFLECTIONFRESNEL&&E.addFallback(3,"REFLECTIONFRESNEL"),Y.EMISSIVEFRESNEL&&E.addFallback(4,"EMISSIVEFRESNEL"),Y.FRESNEL&&E.addFallback(4,"FRESNEL"),Y.MULTIVIEW&&E.addFallback(0,"MULTIVIEW");const A=[u.f.PositionKind];Y.NORMAL&&A.push(u.f.NormalKind),Y.TANGENT&&A.push(u.f.TangentKind);for(let i=1;i<=6;++i)Y["UV"+i]&&A.push(`uv${1===i?"":i}`);Y.VERTEXCOLOR&&A.push(u.f.ColorKind),(0,V.u)(A,i,Y,E),(0,V.y)(A,Y),(0,V.B)(A,i,Y),(0,V.s)(A,i,Y);let L="default";const o=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],M=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],z=["Material","Scene","Mesh"],Q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=E,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Y,this._eventInfo.uniforms=o,this._eventInfo.attributes=A,this._eventInfo.samplers=M,this._eventInfo.uniformBuffersNames=z,this._eventInfo.customCode=void 0,this._eventInfo.mesh=i,this._eventInfo.indexParameters=Q,this._callbackPluginEventGeneric(128,this._eventInfo),f.c.AddUniformsAndSamplers(o,M),b.b.AddUniforms(o),b.b.AddSamplers(M),g.c&&(g.c.PrepareUniforms(o,Y),g.c.PrepareSamplers(M,Y)),(0,V.X)({uniformsNames:o,uniformBuffersNames:z,samplers:M,defines:Y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,t.b)(o);const S={};this.customShaderNameResolve&&(L=this.customShaderNameResolve(L,o,z,M,Y,A,S));const O=Y.toString(),l=x.effect;let Z=a.getEngine().createEffect(L,{attributes:A,uniformsNames:o,uniformBuffersNames:z,samplers:M,defines:O,fallbacks:E,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Q,processFinalCode:S.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([e.e(41),e.e(64)]).then(e.bind(e,14716)),Promise.all([e.e(39),e.e(65)]).then(e.bind(e,14857))]):await Promise.all([Promise.all([e.e(34),e.e(67)]).then(e.bind(e,14928)),Promise.all([e.e(33),e.e(68)]).then(e.bind(e,15088))]),this._shadersLoaded=!0}},J);if(this._eventInfo.customCode=void 0,Z)if(this._onEffectCreatedObservable&&(w.effect=Z,w.subMesh=x,this._onEffectCreatedObservable.notifyObservers(w)),this.allowShaderHotSwapping&&l&&!Z.isReady()){if(Z=l,Y.markAsUnprocessed(),K=this.isFrozen,j)return Y._areLightsDisposed=!0,!1}else a.resetCachedMaterial(),x.setEffect(Z,Y,this._materialContext)}return!(!x.effect||!x.effect.isReady())&&(Y._renderId=a.getRenderId(),E._wasPreviouslyReady=!K,E._wasPreviouslyUsingInstances=j,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const i=this._uniformBuffer;i.addUniform("diffuseLeftColor",4),i.addUniform("diffuseRightColor",4),i.addUniform("opacityParts",4),i.addUniform("reflectionLeftColor",4),i.addUniform("reflectionRightColor",4),i.addUniform("refractionLeftColor",4),i.addUniform("refractionRightColor",4),i.addUniform("emissiveLeftColor",4),i.addUniform("emissiveRightColor",4),i.addUniform("vDiffuseInfos",2),i.addUniform("vAmbientInfos",2),i.addUniform("vOpacityInfos",2),i.addUniform("vReflectionInfos",2),i.addUniform("vReflectionPosition",3),i.addUniform("vReflectionSize",3),i.addUniform("vEmissiveInfos",2),i.addUniform("vLightmapInfos",2),i.addUniform("vSpecularInfos",2),i.addUniform("vBumpInfos",3),i.addUniform("diffuseMatrix",16),i.addUniform("ambientMatrix",16),i.addUniform("opacityMatrix",16),i.addUniform("reflectionMatrix",16),i.addUniform("emissiveMatrix",16),i.addUniform("lightmapMatrix",16),i.addUniform("specularMatrix",16),i.addUniform("bumpMatrix",16),i.addUniform("vTangentSpaceParams",2),i.addUniform("pointSize",1),i.addUniform("alphaCutOff",1),i.addUniform("refractionMatrix",16),i.addUniform("vRefractionInfos",4),i.addUniform("vRefractionPosition",3),i.addUniform("vRefractionSize",3),i.addUniform("vSpecularColor",4),i.addUniform("vEmissiveColor",3),i.addUniform("vDiffuseColor",4),i.addUniform("vAmbientColor",3),i.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(i,x,e){const j=this.wi(),E=e.materialDefines;if(!E)return;const a=e.effect;if(!a)return;this._activeEffect=a,x.getMeshUniformBuffer().bindToEffect(a,"Mesh"),x.transferToEffect(i),this._uniformBuffer.bindToEffect(a,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,j,x,i,this.isFrozen),f.c.Bind(j.getEngine().currentRenderPassId,this._activeEffect,x,i,this);const u=j.activeCamera;u?this._uniformBuffer.updateFloat4("cameraInfo",u.De,u.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=e,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),E.OBJECTSPACE_NORMALMAP&&(i.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const b=this._mustRebind(j,a,e,x.visibility);(0,V.b)(x,a);const g=this._uniformBuffer;if(b){if(this.bindViewProjection(a),!g.useUbo||!this.isFrozen||!g.isSync||e._drawWrapper._forceRebindOnNextCall){if(l.FresnelEnabled&&E.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(g.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),g.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&g.updateColor4("opacityParts",new J.MJ(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(g.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),g.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(g.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),g.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(g.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),g.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),j.texturesEnabled){if(this._diffuseTexture&&l.DiffuseTextureEnabled&&(g.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,V.q)(this._diffuseTexture,g,"diffuse")),this._ambientTexture&&l.AmbientTextureEnabled&&(g.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,V.q)(this._ambientTexture,g,"ambient")),this._opacityTexture&&l.OpacityTextureEnabled&&(g.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,V.q)(this._opacityTexture,g,"opacity")),this._hasAlphaChannel()&&g.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&l.ReflectionTextureEnabled){if(g.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),g.he("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const i=this._reflectionTexture;g.updateVector3("vReflectionPosition",i.boundingBoxPosition),g.updateVector3("vReflectionSize",i.boundingBoxSize)}}else g.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&l.EmissiveTextureEnabled&&(g.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,V.q)(this._emissiveTexture,g,"emissive")),this._lightmapTexture&&l.LightmapTextureEnabled&&(g.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,V.q)(this._lightmapTexture,g,"lightmap")),this._specularTexture&&l.SpecularTextureEnabled&&(g.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,V.q)(this._specularTexture,g,"specular")),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&(g.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,V.q)(this._bumpTexture,g,"bump"),j._mirroredCameraPosition?g.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):g.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&l.RefractionTextureEnabled){let i=1;if(this._refractionTexture.isCube||(g.he("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(i=this._refractionTexture.depth)),g.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,i,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const i=this._refractionTexture;g.updateVector3("vRefractionPosition",i.boundingBoxPosition),g.updateVector3("vRefractionSize",i.boundingBoxSize)}}}this.pointsCloud&&g.updateFloat("pointSize",this.pointSize),g.updateColor4("vSpecularColor",this.specularColor,this.specularPower),g.updateColor3("vEmissiveColor",l.EmissiveTextureEnabled?this.emissiveColor:J.MJ.BlackReadOnly),g.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),j.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),g.updateColor3("vAmbientColor",this._globalAmbientColor)}j.texturesEnabled&&(this._diffuseTexture&&l.DiffuseTextureEnabled&&a.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&l.AmbientTextureEnabled&&a.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&l.OpacityTextureEnabled&&a.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&l.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?a.setTexture("reflectionCubeSampler",this._reflectionTexture):a.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&l.EmissiveTextureEnabled&&a.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&l.LightmapTextureEnabled&&a.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&l.SpecularTextureEnabled&&a.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&a.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&l.RefractionTextureEnabled&&(this._refractionTexture.isCube?a.setTexture("refractionCubeSampler",this._refractionTexture):a.setTexture("refraction2DSampler",this._refractionTexture))),this.wi().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(x)&&this.wi().depthPeelingRenderer.bind(a),this._eventInfo.subMesh=e,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,t.d)(a,this,j),this.bindEyePosition(a)}else j.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(b||!this.isFrozen){var A;if(j.lightsEnabled&&!this._disableLighting&&(0,V.h)(j,x,a,E,this._maxSimultaneousLights),(j.fogEnabled&&x.applyFog&&j.fogMode!==Y.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||x.receiveShadows||E.PREPASS)&&this.bindView(a),(0,V.d)(j,x,a),E.NUM_MORPH_INFLUENCERS&&(0,V.m)(x,a),E.BAKED_VERTEX_ANIMATION_TEXTURE)null===(A=x.bakedVertexAnimationManager)||void 0===A||A.bind(a,E.INSTANCES);this.useLogarithmicDepth&&(0,V.j)(E,a,j),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(x,this._activeEffect,e),g.update()}getAnimatables(){const i=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&i.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&i.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&i.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&i.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&i.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&i.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&i.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&i.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&i.push(this._refractionTexture),i}getActiveTextures(){const i=super.getActiveTextures();return this._diffuseTexture&&i.push(this._diffuseTexture),this._ambientTexture&&i.push(this._ambientTexture),this._opacityTexture&&i.push(this._opacityTexture),this._reflectionTexture&&i.push(this._reflectionTexture),this._emissiveTexture&&i.push(this._emissiveTexture),this._specularTexture&&i.push(this._specularTexture),this._bumpTexture&&i.push(this._bumpTexture),this._lightmapTexture&&i.push(this._lightmapTexture),this._refractionTexture&&i.push(this._refractionTexture),i}hasTexture(i){return!!super.hasTexture(i)||(this._diffuseTexture===i||(this._ambientTexture===i||(this._opacityTexture===i||(this._reflectionTexture===i||(this._emissiveTexture===i||(this._specularTexture===i||(this._bumpTexture===i||(this._lightmapTexture===i||this._refractionTexture===i))))))))}dispose(i,x){var e,j,E,a,Y,J,u,b,g;x&&(null===(e=this._diffuseTexture)||void 0===e||e.dispose(),null===(j=this._ambientTexture)||void 0===j||j.dispose(),null===(E=this._opacityTexture)||void 0===E||E.dispose(),null===(a=this._reflectionTexture)||void 0===a||a.dispose(),null===(Y=this._emissiveTexture)||void 0===Y||Y.dispose(),null===(J=this._specularTexture)||void 0===J||J.dispose(),null===(u=this._bumpTexture)||void 0===u||u.dispose(),null===(b=this._lightmapTexture)||void 0===b||b.dispose(),null===(g=this._refractionTexture)||void 0===g||g.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(i,x)}clone(i){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const j=S.b.Clone((()=>new l(i,this.wi())),this,{cloneTexturesOnlyOnce:x});return j.name=i,j.id=i,this.Ve.copyTo(j.Ve),this._clonePlugins(j,e),j}static Parse(i,x,e){const j=S.b.Parse((()=>new l(i.name,x)),i,x,e);return i.Ve&&j.Ve.parse(i.Ve,x,e),A.e._ParsePlugins(i,j,x,e),j}static get DiffuseTextureEnabled(){return z.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(i){z.b.DiffuseTextureEnabled=i}static get DetailTextureEnabled(){return z.b.DetailTextureEnabled}static set DetailTextureEnabled(i){z.b.DetailTextureEnabled=i}static get AmbientTextureEnabled(){return z.b.AmbientTextureEnabled}static set AmbientTextureEnabled(i){z.b.AmbientTextureEnabled=i}static get OpacityTextureEnabled(){return z.b.OpacityTextureEnabled}static set OpacityTextureEnabled(i){z.b.OpacityTextureEnabled=i}static get ReflectionTextureEnabled(){return z.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(i){z.b.ReflectionTextureEnabled=i}static get EmissiveTextureEnabled(){return z.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(i){z.b.EmissiveTextureEnabled=i}static get SpecularTextureEnabled(){return z.b.SpecularTextureEnabled}static set SpecularTextureEnabled(i){z.b.SpecularTextureEnabled=i}static get BumpTextureEnabled(){return z.b.BumpTextureEnabled}static set BumpTextureEnabled(i){z.b.BumpTextureEnabled=i}static get LightmapTextureEnabled(){return z.b.LightmapTextureEnabled}static set LightmapTextureEnabled(i){z.b.LightmapTextureEnabled=i}static get RefractionTextureEnabled(){return z.b.RefractionTextureEnabled}static set RefractionTextureEnabled(i){z.b.RefractionTextureEnabled=i}static get ColorGradingTextureEnabled(){return z.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(i){z.b.ColorGradingTextureEnabled=i}static get FresnelEnabled(){return z.b.FresnelEnabled}static set FresnelEnabled(i){z.b.FresnelEnabled=i}}l.ForceGLSL=!1,(0,j.e)([(0,E.D)("diffuseTexture")],l.prototype,"_diffuseTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"diffuseTexture",void 0),(0,j.e)([(0,E.D)("ambientTexture")],l.prototype,"_ambientTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"ambientTexture",void 0),(0,j.e)([(0,E.D)("opacityTexture")],l.prototype,"_opacityTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"opacityTexture",void 0),(0,j.e)([(0,E.D)("reflectionTexture")],l.prototype,"_reflectionTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"reflectionTexture",void 0),(0,j.e)([(0,E.D)("emissiveTexture")],l.prototype,"_emissiveTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"emissiveTexture",void 0),(0,j.e)([(0,E.D)("specularTexture")],l.prototype,"_specularTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"specularTexture",void 0),(0,j.e)([(0,E.D)("bumpTexture")],l.prototype,"_bumpTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"bumpTexture",void 0),(0,j.e)([(0,E.D)("lightmapTexture")],l.prototype,"_lightmapTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"lightmapTexture",void 0),(0,j.e)([(0,E.D)("refractionTexture")],l.prototype,"_refractionTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"refractionTexture",void 0),(0,j.e)([(0,E.j)("ambient")],l.prototype,"ambientColor",void 0),(0,j.e)([(0,E.j)("diffuse")],l.prototype,"diffuseColor",void 0),(0,j.e)([(0,E.j)("specular")],l.prototype,"specularColor",void 0),(0,j.e)([(0,E.j)("emissive")],l.prototype,"emissiveColor",void 0),(0,j.e)([(0,E.O)()],l.prototype,"specularPower",void 0),(0,j.e)([(0,E.O)("useAlphaFromDiffuseTexture")],l.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,E.O)("useEmissiveAsIllumination")],l.prototype,"_useEmissiveAsIllumination",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useEmissiveAsIllumination",void 0),(0,j.e)([(0,E.O)("linkEmissiveWithDiffuse")],l.prototype,"_linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,E.O)("useSpecularOverAlpha")],l.prototype,"_useSpecularOverAlpha",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useSpecularOverAlpha",void 0),(0,j.e)([(0,E.O)("useReflectionOverAlpha")],l.prototype,"_useReflectionOverAlpha",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useReflectionOverAlpha",void 0),(0,j.e)([(0,E.O)("disableLighting")],l.prototype,"_disableLighting",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsLightsDirty")],l.prototype,"disableLighting",void 0),(0,j.e)([(0,E.O)("useObjectSpaceNormalMap")],l.prototype,"_useObjectSpaceNormalMap",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useObjectSpaceNormalMap",void 0),(0,j.e)([(0,E.O)("useParallax")],l.prototype,"_useParallax",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallax",void 0),(0,j.e)([(0,E.O)("useParallaxOcclusion")],l.prototype,"_useParallaxOcclusion",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallaxOcclusion",void 0),(0,j.e)([(0,E.O)()],l.prototype,"parallaxScaleBias",void 0),(0,j.e)([(0,E.O)("roughness")],l.prototype,"_roughness",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"roughness",void 0),(0,j.e)([(0,E.O)()],l.prototype,"indexOfRefraction",void 0),(0,j.e)([(0,E.O)()],l.prototype,"invertRefractionY",void 0),(0,j.e)([(0,E.O)()],l.prototype,"alphaCutOff",void 0),(0,j.e)([(0,E.O)("useLightmapAsShadowmap")],l.prototype,"_useLightmapAsShadowmap",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useLightmapAsShadowmap",void 0),(0,j.e)([(0,E.o)("diffuseFresnelParameters")],l.prototype,"_diffuseFresnelParameters",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"diffuseFresnelParameters",void 0),(0,j.e)([(0,E.o)("opacityFresnelParameters")],l.prototype,"_opacityFresnelParameters",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],l.prototype,"opacityFresnelParameters",void 0),(0,j.e)([(0,E.o)("reflectionFresnelParameters")],l.prototype,"_reflectionFresnelParameters",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"reflectionFresnelParameters",void 0),(0,j.e)([(0,E.o)("refractionFresnelParameters")],l.prototype,"_refractionFresnelParameters",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"refractionFresnelParameters",void 0),(0,j.e)([(0,E.o)("emissiveFresnelParameters")],l.prototype,"_emissiveFresnelParameters",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"emissiveFresnelParameters",void 0),(0,j.e)([(0,E.O)("useReflectionFresnelFromSpecular")],l.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,E.O)("useGlossinessFromSpecularMapAlpha")],l.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,E.O)("maxSimultaneousLights")],l.prototype,"_maxSimultaneousLights",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsLightsDirty")],l.prototype,"maxSimultaneousLights",void 0),(0,j.e)([(0,E.O)("invertNormalMapX")],l.prototype,"_invertNormalMapX",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapX",void 0),(0,j.e)([(0,E.O)("invertNormalMapY")],l.prototype,"_invertNormalMapY",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapY",void 0),(0,j.e)([(0,E.O)("twoSidedLighting")],l.prototype,"_twoSidedLighting",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"twoSidedLighting",void 0),(0,j.e)([(0,E.O)("applyDecalMapAfterDetailMap")],l.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,j.e)([(0,E.d)("_markAllSubMeshesAsMiscDirty")],l.prototype,"applyDecalMapAfterDetailMap",void 0),(0,M.f)("BABYLON.StandardMaterial",l),Y.d.DefaultMaterialFactory=i=>new l("default material",i)}}]);