"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11604:(Z,x,F)=>{F.d(x,{e:()=>c});var u=F(11159),G=F(11523),f=F(11165),Y=F(11595),j=F(11592),d=F(11607),t=F(11570);class o extends j.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class c extends d.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(Z){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(Z,"DetailMap",140,new o,x),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=G.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=Z._dirtyCallbacks[1]}isReadyForSubMesh(Z,x,F){return!this._isEnabled||!(Z._areTexturesDirty&&x.texturesEnabled&&F.getCaps().standardDerivatives&&this._texture&&Y.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(Z,x){if(this._isEnabled){Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const F=x.getEngine();Z._areTexturesDirty&&(F.getCaps().standardDerivatives&&this._texture&&Y.e.DetailTextureEnabled&&this._isEnabled?((0,t.W)(this._texture,Z,"DETAIL"),Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):Z.DETAIL=!1)}else Z.DETAIL=!1}bindForSubMesh(Z,x){if(!this._isEnabled)return;const F=this._material.isFrozen;Z.useUbo&&F&&Z.isSync||this._texture&&Y.e.DetailTextureEnabled&&(Z.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,t.q)(this._texture,Z,"detail")),x.texturesEnabled&&this._texture&&Y.e.DetailTextureEnabled&&Z.setTexture("detailSampler",this._texture)}hasTexture(Z){return this._texture===Z}getActiveTextures(Z){this._texture&&Z.push(this._texture)}getAnimatables(Z){this._texture&&this._texture.animations&&this._texture.animations.length>0&&Z.push(this._texture)}dispose(Z){var x;Z&&(null===(x=this._texture)||void 0===x||x.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(Z){Z.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,u.d)([(0,f.z)("detailTexture"),(0,f.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"texture",void 0),(0,u.d)([(0,f.H)()],c.prototype,"diffuseBlendLevel",void 0),(0,u.d)([(0,f.H)()],c.prototype,"roughnessBlendLevel",void 0),(0,u.d)([(0,f.H)()],c.prototype,"bumpLevel",void 0),(0,u.d)([(0,f.H)(),(0,f.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"normalBlendMethod",void 0),(0,u.d)([(0,f.H)(),(0,f.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"isEnabled",void 0)},11592:(Z,x,F)=>{F.d(x,{b:()=>u});class u{constructor(Z){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=Z,Z)for(const x in Z)Object.prototype.hasOwnProperty.call(Z,x)&&this._setDefaultValue(x)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||Z,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const Z of Object.keys(this))"_"!==Z[0]&&this._keys.push(Z);if(this._externalProperties)for(const Z in this._externalProperties)-1===this._keys.indexOf(Z)&&this._keys.push(Z)}isEqual(Z){if(this._keys.length!==Z._keys.length)return!1;for(let x=0;x<this._keys.length;x++){const F=this._keys[x];if(this[F]!==Z[F])return!1}return!0}cloneTo(Z){this._keys.length!==Z._keys.length&&(Z._keys=this._keys.slice(0));for(let x=0;x<this._keys.length;x++){const F=this._keys[x];Z[F]=this[F]}}reset(){for(const Z of this._keys)this._setDefaultValue(Z)}_setDefaultValue(Z){var x,F,u,G;const f=(null===(x=this._externalProperties)||void 0===x||null===(F=x[Z])||void 0===F?void 0:F.type)??typeof this[Z],Y=null===(u=this._externalProperties)||void 0===u||null===(G=u[Z])||void 0===G?void 0:G.default;switch(f){case"number":this[Z]=Y??0;break;case"string":this[Z]=Y??"";break;default:this[Z]=Y??!1}}toString(){let Z="";for(let x=0;x<this._keys.length;x++){const F=this._keys[x],u=this[F];switch(typeof u){case"number":case"string":Z+="#define "+F+" "+u+"\n";break;default:u&&(Z+="#define "+F+"\n")}}return Z}}},11595:(Z,x,F)=>{F.d(x,{e:()=>G});var u=F(11081);class G{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){this._DiffuseTextureEnabled!==Z&&(this._DiffuseTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(Z){this._BaseWeightTextureEnabled!==Z&&(this._BaseWeightTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(Z){this._BaseDiffuseRoughnessTextureEnabled!==Z&&(this._BaseDiffuseRoughnessTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(Z){this._DetailTextureEnabled!==Z&&(this._DetailTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(Z){this._DecalMapEnabled!==Z&&(this._DecalMapEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(Z){this._AmbientTextureEnabled!==Z&&(this._AmbientTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(Z){this._OpacityTextureEnabled!==Z&&(this._OpacityTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){this._ReflectionTextureEnabled!==Z&&(this._ReflectionTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){this._EmissiveTextureEnabled!==Z&&(this._EmissiveTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(Z){this._SpecularTextureEnabled!==Z&&(this._SpecularTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(Z){this._BumpTextureEnabled!==Z&&(this._BumpTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(Z){this._LightmapTextureEnabled!==Z&&(this._LightmapTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(Z){this._RefractionTextureEnabled!==Z&&(this._RefractionTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){this._ColorGradingTextureEnabled!==Z&&(this._ColorGradingTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(Z){this._FresnelEnabled!==Z&&(this._FresnelEnabled=Z,u.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(Z){this._ClearCoatTextureEnabled!==Z&&(this._ClearCoatTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(Z){this._ClearCoatBumpTextureEnabled!==Z&&(this._ClearCoatBumpTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(Z){this._ClearCoatTintTextureEnabled!==Z&&(this._ClearCoatTintTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(Z){this._SheenTextureEnabled!==Z&&(this._SheenTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(Z){this._AnisotropicTextureEnabled!==Z&&(this._AnisotropicTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(Z){this._ThicknessTextureEnabled!==Z&&(this._ThicknessTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(Z){this._RefractionIntensityTextureEnabled!==Z&&(this._RefractionIntensityTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(Z){this._TranslucencyIntensityTextureEnabled!==Z&&(this._TranslucencyIntensityTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(Z){this._TranslucencyColorTextureEnabled!==Z&&(this._TranslucencyColorTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(Z){this._IridescenceTextureEnabled!==Z&&(this._IridescenceTextureEnabled=Z,u.d.MarkAllMaterialsAsDirty(1))}}G._DiffuseTextureEnabled=!0,G._BaseWeightTextureEnabled=!0,G._BaseDiffuseRoughnessTextureEnabled=!0,G._DetailTextureEnabled=!0,G._DecalMapEnabled=!0,G._AmbientTextureEnabled=!0,G._OpacityTextureEnabled=!0,G._ReflectionTextureEnabled=!0,G._EmissiveTextureEnabled=!0,G._SpecularTextureEnabled=!0,G._BumpTextureEnabled=!0,G._LightmapTextureEnabled=!0,G._RefractionTextureEnabled=!0,G._ColorGradingTextureEnabled=!0,G._FresnelEnabled=!0,G._ClearCoatTextureEnabled=!0,G._ClearCoatBumpTextureEnabled=!0,G._ClearCoatTintTextureEnabled=!0,G._SheenTextureEnabled=!0,G._AnisotropicTextureEnabled=!0,G._ThicknessTextureEnabled=!0,G._RefractionIntensityTextureEnabled=!0,G._TranslucencyIntensityTextureEnabled=!0,G._TranslucencyColorTextureEnabled=!0,G._IridescenceTextureEnabled=!0},11615:(Z,x,F)=>{F.d(x,{c:()=>f});var u,G=F(11179);!function(Z){Z[Z.Zero=0]="Zero",Z[Z.One=1]="One",Z[Z.MaxViewZ=2]="MaxViewZ"}(u||(u={}));class f{static CreateConfiguration(Z){return f._Configurations[Z]={defines:{},previousWorldMatrices:{},previousViewProjection:G.Matrix.Zero(),currentViewProjection:G.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},f._Configurations[Z]}static DeleteConfiguration(Z){delete f._Configurations[Z]}static GetConfiguration(Z){return f._Configurations[Z]}static AddUniformsAndSamplers(Z,x){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(Z,x){for(const F of x)if(F.bf)for(const x of F.bf)x._removeDrawWrapper(Z)}static PrepareDefines(Z,x,F){if(!F._arePrePassDirty)return;const u=f._Configurations[Z];if(!u)return;F.PREPASS=!0,F.PREPASS_COLOR=!1,F.PREPASS_COLOR_INDEX=-1;let G=0;for(let Y=0;Y<f.GeometryTextureDescriptions.length;Y++){const Z=f.GeometryTextureDescriptions[Y],x=Z.define,j=Z.defineIndex,d=u.defines[j];void 0!==d?(F[x]=!0,F[j]=d,G++):(F[x]=!1,delete F[j])}F.SCENE_MRT_COUNT=G,F.BONES_VELOCITY_ENABLED=x.useBones&&x.computeBonesUsingShaders&&x.skeleton&&!x.skeleton.isUsingTextureForMatrices&&-1===u.excludedSkinnedMesh.indexOf(x)}static Bind(Z,x,F,u,G){const Y=f._Configurations[Z];if(!Y)return;const j=F.KZ(),d=j.getEngine();if(Y.reverseCulling&&d.setStateCullFaceType(j._mirroredCameraPosition?G.cullBackFaces:!G.cullBackFaces),(void 0!==Y.defines.PREPASS_VELOCITY_INDEX||void 0!==Y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Y.previousWorldMatrices[F.uniqueId]||(Y.previousWorldMatrices[F.uniqueId]=u.clone()),Y.previousViewProjection||(Y.previousViewProjection=j.getTransformMatrix().clone(),Y.currentViewProjection=j.getTransformMatrix().clone()),Y.currentViewProjection.updateFlag!==j.getTransformMatrix().updateFlag?(Y.lastUpdateFrameId=d.frameId,Y.previousViewProjection.G(Y.currentViewProjection),Y.currentViewProjection.G(j.getTransformMatrix())):Y.lastUpdateFrameId!==d.frameId&&(Y.lastUpdateFrameId=d.frameId,Y.previousViewProjection.G(Y.currentViewProjection)),x.setMatrix("previousWorld",Y.previousWorldMatrices[F.uniqueId]),x.setMatrix("previousViewProjection",Y.previousViewProjection),Y.previousWorldMatrices[F.uniqueId]=u.clone(),F.useBones&&F.computeBonesUsingShaders&&F.skeleton)){const Z=F.skeleton;if(!Z.isUsingTextureForMatrices||-1===x.getUniformIndex("boneTextureWidth")){const u=Z.getTransformMatrices(F);u&&(Y.previousBones[F.uniqueId]||(Y.previousBones[F.uniqueId]=u.slice()),x.setMatrices("mPreviousBones",Y.previousBones[F.uniqueId]),Y.previousBones[F.uniqueId].set(u))}}}}f.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],f._Configurations={}},11607:(Z,x,F)=>{F.d(x,{b:()=>M});var u=F(11159),G=F(11165),f=F(11523),Y=F(11037),j=F(11063),d=F(11091);const t=new RegExp("^([gimus]+)!");class o{constructor(Z){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=Z,this._scene=Z.KZ(),this._engine=this._scene.getEngine()}_addPlugin(Z){for(let u=0;u<this._plugins.length;++u)if(this._plugins[u].name===Z.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!Z.isCompatible(this._material.shaderLanguage))throw`The plugin "${Z.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const x=Z.getClassName();o._MaterialPluginClassToMainDefine[x]||(o._MaterialPluginClassToMainDefine[x]="MATERIALPLUGIN_"+ ++o._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(Z,x)=>this._handlePluginEvent(Z,x),this._plugins.push(Z),this._plugins.sort(((Z,x)=>Z.priority-x.priority)),this._codeInjectionPoints={};const F={};F[o._MaterialPluginClassToMainDefine[x]]={type:"boolean",default:!0};for(const u of this._plugins)u.collectDefines(F),this._collectPointNames("vertex",u.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",u.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=F,!0}_activatePlugin(Z){-1===this._activePlugins.indexOf(Z)&&(this._activePlugins.push(Z),this._activePlugins.sort(((Z,x)=>Z.priority-x.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),Z.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(Z),this._activePluginsForExtraEvents.sort(((Z,x)=>Z.priority-x.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(Z){for(let x=0;x<this._plugins.length;++x)if(this._plugins[x].name===Z)return this._plugins[x];return null}_handlePluginEventIsReadyForSubMesh(Z){let x=!0;for(const F of this._activePlugins)x=x&&F.isReadyForSubMesh(Z.defines,this._scene,this._engine,Z.subMesh);Z.isReadyForSubMesh=x}_handlePluginEventPrepareDefinesBeforeAttributes(Z){for(const x of this._activePlugins)x.prepareDefinesBeforeAttributes(Z.defines,this._scene,Z.mesh)}_handlePluginEventPrepareDefines(Z){for(const x of this._activePlugins)x.prepareDefines(Z.defines,this._scene,Z.mesh)}_handlePluginEventHardBindForSubMesh(Z){for(const x of this._activePluginsForExtraEvents)x.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventBindForSubMesh(Z){for(const x of this._activePlugins)x.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventHasRenderTargetTextures(Z){let x=!1;for(const F of this._activePluginsForExtraEvents)if(x=F.hasRenderTargetTextures(),x)break;Z.hasRenderTargetTextures=x}_handlePluginEventFillRenderTargetTextures(Z){for(const x of this._activePluginsForExtraEvents)x.fillRenderTargetTextures(Z.renderTargets)}_handlePluginEvent(Z,x){switch(Z){case 512:{const Z=x;for(const x of this._activePlugins)x.getActiveTextures(Z.activeTextures);break}case 256:{const Z=x;for(const x of this._activePlugins)x.getAnimatables(Z.animatables);break}case 1024:{const Z=x;let F=!1;for(const x of this._activePlugins)if(F=x.hasTexture(Z.texture),F)break;Z.hasTexture=F;break}case 2:{const Z=x;for(const x of this._plugins)x.dispose(Z.forceDisposeTextures);break}case 4:x.defineNames=this._defineNamesFromPlugins;break;case 128:{const Z=x;for(const x of this._activePlugins)Z.fallbackRank=x.addFallbacks(Z.defines,Z.fallbacks,Z.fallbackRank),x.getAttributes(Z.attributes,this._scene,Z.mesh);this._uniformList.length>0&&Z.uniforms.push(...this._uniformList),this._samplerList.length>0&&Z.samplers.push(...this._samplerList),this._uboList.length>0&&Z.uniformBuffersNames.push(...this._uboList),Z.customCode=this._injectCustomCode(Z,Z.customCode);break}case 8:{const Z=x;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const F=1===this._material.shaderLanguage;for(const x of this._plugins){const u=x.getUniforms(this._material.shaderLanguage);if(u){if(u.ubo)for(const x of u.ubo){if(x.size&&x.type){const u=x.arraySize??0;if(Z.ubo.addUniform(x.name,x.size,u),F){let Z;switch(x.type){case"mat4":Z="mat4x4f";break;case"float":Z="f32";break;default:Z=`${x.type}f`}this._uboDeclaration+=u>0?`uniform ${x.name}: array<${Z}, ${u}>;\n`:`uniform ${x.name}: ${Z};\n`}else this._uboDeclaration+=`${x.type} ${x.name}${u>0?`[${u}]`:""};\n`}this._uniformList.push(x.name)}u.vertex&&(this._vertexDeclaration+=u.vertex+"\n"),u.fragment&&(this._fragmentDeclaration+=u.fragment+"\n")}x.getSamplers(this._samplerList),x.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(Z,x){if(x)for(const F in x)this._codeInjectionPoints[Z]||(this._codeInjectionPoints[Z]={}),this._codeInjectionPoints[Z][F]=!0}_injectCustomCode(Z,x){return(F,u)=>{var G;x&&(u=x(F,u)),this._uboDeclaration&&(u=u.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(u=u.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(u=u.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const f=null===(G=this._codeInjectionPoints)||void 0===G?void 0:G[F];if(!f)return u;let Y=null;for(let x in f){let G="";for(const u of this._activePlugins){var o;let f=null===(o=u.getCustomCode(F,this._material.shaderLanguage))||void 0===o?void 0:o[x];if(f){if(u.resolveIncludes){if(null===Y){const x=0;Y={defines:[],indexParameters:Z.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:d.d.GetShadersRepository(x),includesShadersStore:d.d.GetIncludesShadersStore(x),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}Y.isFragment="fragment"===F,(0,j.k)(f,Y,(Z=>f=Z))}G+=f+"\n"}}if(G.length>0)if("!"===x.charAt(0)){x=x.substring(1);let Z="g";if("!"===x.charAt(0))Z="",x=x.substring(1);else{const F=t.exec(x);F&&F.length>=2&&(Z=F[1],x=x.substring(Z.length+1))}Z.indexOf("g")<0&&(Z+="g");const F=u,f=new RegExp(x,Z);let Y=f.exec(F);for(;null!==Y;){let Z=G;for(let x=0;x<Y.length;++x)Z=Z.replace("$"+x,Y[x]);u=u.replace(Y[0],Z),Y=f.exec(F)}}else{const Z="#define "+x;u=u.replace(Z,"\n"+G+"\n"+Z)}}return u}}}o._MaterialPluginClassToMainDefine={},o._MaterialPluginCounter=0,Y.c.OnEnginesDisposedObservable.add((()=>{p()}));const c=[];let s=!1,J=null;function p(){c.length=0,s=!1,f.e.OnEventObservable.remove(J),J=null}var U=F(11213),k=F(11136);class M{isCompatible(Z){return 0===Z}_enable(Z){Z&&this._pluginManager._activatePlugin(this)}constructor(Z,x,F,u){let G=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],f=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=Z,this.name=x,this.priority=F,this.resolveIncludes=Y,Z.pluginManager||(Z.pluginManager=new o(Z),Z.Uf.add((()=>{Z.pluginManager=void 0}))),this._pluginDefineNames=u,this._pluginManager=Z.pluginManager,G&&this._pluginManager._addPlugin(this),f&&this._enable(!0),this.markAllDefinesAsDirty=Z._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(Z,x,F,u){return!0}hardBindForSubMesh(Z,x,F,u){}bindForSubMesh(Z,x,F,u){}dispose(Z){}getCustomCode(Z){return null}collectDefines(Z){if(this._pluginDefineNames)for(const x of Object.keys(this._pluginDefineNames)){if("_"===x[0])continue;const F=typeof this._pluginDefineNames[x];Z[x]={type:"number"===F?"number":"string"===F?"string":"boolean"===F?"boolean":"object",default:this._pluginDefineNames[x]}}}prepareDefinesBeforeAttributes(Z,x,F){}prepareDefines(Z,x,F){}hasTexture(Z){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(Z){}getActiveTextures(Z){}getAnimatables(Z){}addFallbacks(Z,x,F){return F}getSamplers(Z){}getAttributes(Z,x,F){}getUniformBuffersNames(Z){}getUniforms(){return{}}copyTo(Z){U.c.Clone((()=>Z),this)}serialize(){return U.c.Serialize(this)}parse(Z,x,F){U.c.Parse((()=>this),Z,x,F)}}(0,u.d)([(0,G.H)()],M.prototype,"name",void 0),(0,u.d)([(0,G.H)()],M.prototype,"priority",void 0),(0,u.d)([(0,G.H)()],M.prototype,"resolveIncludes",void 0),(0,u.d)([(0,G.H)()],M.prototype,"registerForExtraEvents",void 0),(0,k.g)("BABYLON.MaterialPluginBase",M)},11587:(Z,x,F)=>{F.d(x,{d:()=>u});class u{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(Z){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(Z){}bindForSubMesh(Z,x,F,u,G){if(x.prePassRenderer&&x.prePassRenderer.enabled&&x.prePassRenderer.currentRTisSceneRT&&(-1!==x.prePassRenderer.getIndex(2)||-1!==x.prePassRenderer.getIndex(11))){this.previousWorldMatrices[F.uniqueId]||(this.previousWorldMatrices[F.uniqueId]=u.clone()),this.previousViewProjection||(this.previousViewProjection=x.getTransformMatrix().clone(),this.currentViewProjection=x.getTransformMatrix().clone());const G=x.getEngine();this.currentViewProjection.updateFlag!==x.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=G.frameId,this.previousViewProjection.G(this.currentViewProjection),this.currentViewProjection.G(x.getTransformMatrix())):this._lastUpdateFrameId!==G.frameId&&(this._lastUpdateFrameId=G.frameId,this.previousViewProjection.G(this.currentViewProjection)),Z.setMatrix("previousWorld",this.previousWorldMatrices[F.uniqueId]),Z.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[F.uniqueId]=u.clone()}}}},11580:(Z,x,F)=>{F.d(x,{Cx:()=>q});var u=F(11159),G=F(11165),f=F(11285),Y=F(11447),j=F(11230),d=F(11265),t=F(11587),o=F(11450),c=F(11523),s=F(11592),J=F(11520),p=F(11157),U=F(11136),k=F(11595),M=F(11512),m=F(11604),C=F(11572),L=F(11570),H=F(11213),S=F(11615);const K={effect:null,subMesh:null};class y extends s.b{constructor(Z){super(Z),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(Z){const x=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const F of x)this[F]=F===Z}}class q extends J.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(Z){this._attachImageProcessingConfiguration(Z),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(Z){Z!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=Z||this.KZ().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(Z){this.imageProcessingConfiguration.colorCurvesEnabled=Z}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(Z){this.imageProcessingConfiguration.colorGradingEnabled=Z}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(Z){this._imageProcessingConfiguration.toneMappingEnabled=Z}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(Z){this._imageProcessingConfiguration.exposure=Z}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(Z){this._imageProcessingConfiguration.contrast=Z}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(Z){this._imageProcessingConfiguration.colorGradingTexture=Z}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(Z){this._imageProcessingConfiguration.colorCurves=Z}get canRenderToMRT(){return!0}constructor(Z,x){super(Z,x,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||q.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new j.Lx(0,0,0),this.diffuseColor=new j.Lx(1,1,1),this.specularColor=new j.Lx(1,1,1),this.emissiveColor=new j.Lx(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new f.d(16),this._globalAmbientColor=new j.Lx(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new m.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new t.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),q.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),q.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(q.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(q.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Cx"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===c.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Af&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==c.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Af||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(Z,x){let u=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const G=x._drawWrapper;if(G.effect&&this.isFrozen&&G._wasPreviouslyReady&&G._wasPreviouslyUsingInstances===u)return!0;x.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),x.materialDefines=new y(this._eventInfo.defineNames));const f=this.KZ(),Y=x.materialDefines;if(this._isReadyForSubMesh(x))return!0;const j=f.getEngine();Y._needNormals=(0,L.S)(f,Z,Y,!0,this._maxSimultaneousLights,this._disableLighting),(0,L.ab)(f,Y);const c=this.needAlphaBlendingForMesh(Z)&&this.KZ().useOrderIndependentTransparency;if((0,L.gb)(f,Y,this.canRenderToMRT&&!c),(0,L.eb)(f,Y,c),S.c.PrepareDefines(j.currentRenderPassId,Z,Y),Y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Y._needUVs=!1;for(let Z=1;Z<=6;++Z)Y["MAINUV"+Z]=!1;if(f.texturesEnabled){if(Y.DIFFUSEDIRECTUV=0,Y.BUMPDIRECTUV=0,Y.AMBIENTDIRECTUV=0,Y.OPACITYDIRECTUV=0,Y.EMISSIVEDIRECTUV=0,Y.SPECULARDIRECTUV=0,Y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&q.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._diffuseTexture,Y,"DIFFUSE")}else Y.DIFFUSE=!1;if(this._ambientTexture&&q.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._ambientTexture,Y,"AMBIENT")}else Y.AMBIENT=!1;if(this._opacityTexture&&q.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._opacityTexture,Y,"OPACITY"),Y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Y.OPACITY=!1;if(this._reflectionTexture&&q.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Y._needNormals=!0,Y.REFLECTION=!0,Y.ROUGHNESS=this._roughness>0,Y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===p.c.INVCUBIC_MODE,Y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Y.REFLECTIONMAP_OPPOSITEZ=Y.REFLECTIONMAP_3D&&this.KZ().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case p.c.EXPLICIT_MODE:Y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case p.c.PLANAR_MODE:Y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case p.c.PROJECTION_MODE:Y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case p.c.SKYBOX_MODE:Y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case p.c.SPHERICAL_MODE:Y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case p.c.EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case p.c.FIXED_EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case p.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case p.c.CUBIC_MODE:case p.c.INVCUBIC_MODE:default:Y.setReflectionMode("REFLECTIONMAP_CUBIC")}Y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Y.REFLECTION=!1,Y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&q.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._emissiveTexture,Y,"EMISSIVE")}else Y.EMISSIVE=!1;if(this._lightmapTexture&&q.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._lightmapTexture,Y,"LIGHTMAP"),Y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Y.LIGHTMAP=!1;if(this._specularTexture&&q.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,L.W)(this._specularTexture,Y,"SPECULAR"),Y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Y.SPECULAR=!1;if(f.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&q.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,L.W)(this._bumpTexture,Y,"BUMP"),Y.PARALLAX=this._useParallax,Y.PARALLAX_RHS=f.useRightHandedSystem,Y.PARALLAXOCCLUSION=this._useParallaxOcclusion,Y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Y.BUMP=!1,Y.PARALLAX=!1,Y.PARALLAX_RHS=!1,Y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&q.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Y._needUVs=!0,Y.REFRACTION=!0,Y.REFRACTIONMAP_3D=this._refractionTexture.isCube,Y.RGBDREFRACTION=this._refractionTexture.isRGBD,Y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Y.REFRACTION=!1;Y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Y.DIFFUSE=!1,Y.AMBIENT=!1,Y.OPACITY=!1,Y.REFLECTION=!1,Y.EMISSIVE=!1,Y.LIGHTMAP=!1,Y.BUMP=!1,Y.REFRACTION=!1;Y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Y.SPECULAROVERALPHA=this._useSpecularOverAlpha,Y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(Z)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Y,this._eventInfo.subMesh=x,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Y),Y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Y._areFresnelDirty&&(q.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Y._needNormals=!0,Y.FRESNEL=!0):Y.FRESNEL=!1),Y.AREALIGHTUSED)for(let F=0;F<Z.lightSources.length;F++)if(!Z.lightSources[F]._isReady())return!1;(0,L.Y)(Z,f,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(Z),Y,this._applyDecalMapAfterDetailMap),(0,L.O)(f,j,this,Y,u,null,x.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Y,this._eventInfo.mesh=Z,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,L.K)(Z,Y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let s=!1;if(Y.isDirty){const u=Y._areLightsDisposed;Y.markAsProcessed();const G=new M.d;Y.REFLECTION&&G.addFallback(0,"REFLECTION"),Y.SPECULAR&&G.addFallback(0,"SPECULAR"),Y.BUMP&&G.addFallback(0,"BUMP"),Y.PARALLAX&&G.addFallback(1,"PARALLAX"),Y.PARALLAX_RHS&&G.addFallback(1,"PARALLAX_RHS"),Y.PARALLAXOCCLUSION&&G.addFallback(0,"PARALLAXOCCLUSION"),Y.SPECULAROVERALPHA&&G.addFallback(0,"SPECULAROVERALPHA"),Y.FOG&&G.addFallback(1,"FOG"),Y.POINTSIZE&&G.addFallback(0,"POINTSIZE"),Y.LOGARITHMICDEPTH&&G.addFallback(0,"LOGARITHMICDEPTH"),(0,L.u)(Y,G,this._maxSimultaneousLights),Y.SPECULARTERM&&G.addFallback(0,"SPECULARTERM"),Y.DIFFUSEFRESNEL&&G.addFallback(1,"DIFFUSEFRESNEL"),Y.OPACITYFRESNEL&&G.addFallback(2,"OPACITYFRESNEL"),Y.REFLECTIONFRESNEL&&G.addFallback(3,"REFLECTIONFRESNEL"),Y.EMISSIVEFRESNEL&&G.addFallback(4,"EMISSIVEFRESNEL"),Y.FRESNEL&&G.addFallback(4,"FRESNEL"),Y.MULTIVIEW&&G.addFallback(0,"MULTIVIEW");const c=[d.f.PositionKind];Y.NORMAL&&c.push(d.f.NormalKind),Y.TANGENT&&c.push(d.f.TangentKind);for(let Z=1;Z<=6;++Z)Y["UV"+Z]&&c.push(`uv${1===Z?"":Z}`);Y.VERTEXCOLOR&&c.push(d.f.ColorKind),(0,L.A)(c,Z,Y,G),(0,L.D)(c,Y),(0,L.F)(c,Z,Y),(0,L.y)(c,Z,Y);let J="default";const p=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],U=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],k=["Material","Scene","Mesh"],m={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=G,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Y,this._eventInfo.uniforms=p,this._eventInfo.attributes=c,this._eventInfo.samplers=U,this._eventInfo.uniformBuffersNames=k,this._eventInfo.customCode=void 0,this._eventInfo.mesh=Z,this._eventInfo.indexParameters=m,this._callbackPluginEventGeneric(128,this._eventInfo),S.c.AddUniformsAndSamplers(p,U),t.d.AddUniforms(p),t.d.AddSamplers(U),o.d&&(o.d.PrepareUniforms(p,Y),o.d.PrepareSamplers(U,Y)),(0,L.hb)({uniformsNames:p,uniformBuffersNames:k,samplers:U,defines:Y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,C.b)(p);const H={};this.customShaderNameResolve&&(J=this.customShaderNameResolve(J,p,k,U,Y,c,H));const y=Y.toString(),q=x.effect;let R=f.getEngine().createEffect(J,{attributes:c,uniformsNames:p,uniformBuffersNames:k,samplers:U,defines:y,fallbacks:G,onCompiled:this.onCompiled,onError:this.onError,indexParameters:m,processFinalCode:H.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([F.e(41),F.e(64)]).then(F.bind(F,13812)),Promise.all([F.e(39),F.e(65)]).then(F.bind(F,13947))]):await Promise.all([Promise.all([F.e(34),F.e(67)]).then(F.bind(F,14022)),Promise.all([F.e(33),F.e(68)]).then(F.bind(F,14185))]),this._shadersLoaded=!0}},j);if(this._eventInfo.customCode=void 0,R)if(this._onEffectCreatedObservable&&(K.effect=R,K.subMesh=x,this._onEffectCreatedObservable.notifyObservers(K)),this.allowShaderHotSwapping&&q&&!R.isReady()){if(R=q,Y.markAsUnprocessed(),s=this.isFrozen,u)return Y._areLightsDisposed=!0,!1}else f.resetCachedMaterial(),x.setEffect(R,Y,this._materialContext)}return!(!x.effect||!x.effect.isReady())&&(Y._renderId=f.getRenderId(),G._wasPreviouslyReady=!s,G._wasPreviouslyUsingInstances=u,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const Z=this._uniformBuffer;Z.addUniform("diffuseLeftColor",4),Z.addUniform("diffuseRightColor",4),Z.addUniform("opacityParts",4),Z.addUniform("reflectionLeftColor",4),Z.addUniform("reflectionRightColor",4),Z.addUniform("refractionLeftColor",4),Z.addUniform("refractionRightColor",4),Z.addUniform("emissiveLeftColor",4),Z.addUniform("emissiveRightColor",4),Z.addUniform("vDiffuseInfos",2),Z.addUniform("vAmbientInfos",2),Z.addUniform("vOpacityInfos",2),Z.addUniform("vReflectionInfos",2),Z.addUniform("vReflectionPosition",3),Z.addUniform("vReflectionSize",3),Z.addUniform("vEmissiveInfos",2),Z.addUniform("vLightmapInfos",2),Z.addUniform("vSpecularInfos",2),Z.addUniform("vBumpInfos",3),Z.addUniform("diffuseMatrix",16),Z.addUniform("ambientMatrix",16),Z.addUniform("opacityMatrix",16),Z.addUniform("reflectionMatrix",16),Z.addUniform("emissiveMatrix",16),Z.addUniform("lightmapMatrix",16),Z.addUniform("specularMatrix",16),Z.addUniform("bumpMatrix",16),Z.addUniform("vTangentSpaceParams",2),Z.addUniform("pointSize",1),Z.addUniform("alphaCutOff",1),Z.addUniform("refractionMatrix",16),Z.addUniform("vRefractionInfos",4),Z.addUniform("vRefractionPosition",3),Z.addUniform("vRefractionSize",3),Z.addUniform("vSpecularColor",4),Z.addUniform("vEmissiveColor",3),Z.addUniform("vDiffuseColor",4),Z.addUniform("vAmbientColor",3),Z.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(Z,x,F){const u=this.KZ(),G=F.materialDefines;if(!G)return;const f=F.effect;if(!f)return;this._activeEffect=f,x.getMeshUniformBuffer().bindToEffect(f,"Mesh"),x.transferToEffect(Z),this._uniformBuffer.bindToEffect(f,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,u,x,Z,this.isFrozen),S.c.Bind(u.getEngine().currentRenderPassId,this._activeEffect,x,Z,this);const d=u.activeCamera;d?this._uniformBuffer.updateFloat4("cameraInfo",d.hf,d.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=F,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),G.OBJECTSPACE_NORMALMAP&&(Z.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const t=this._mustRebind(u,f,F,x.visibility);(0,L.e)(x,f);const o=this._uniformBuffer;if(t){if(this.bindViewProjection(f),!o.useUbo||!this.isFrozen||!o.isSync||F._drawWrapper._forceRebindOnNextCall){if(q.FresnelEnabled&&G.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(o.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),o.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&o.updateColor4("opacityParts",new j.Lx(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(o.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),o.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(o.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),o.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(o.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),o.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),u.texturesEnabled){if(this._diffuseTexture&&q.DiffuseTextureEnabled&&(o.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,L.q)(this._diffuseTexture,o,"diffuse")),this._ambientTexture&&q.AmbientTextureEnabled&&(o.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,L.q)(this._ambientTexture,o,"ambient")),this._opacityTexture&&q.OpacityTextureEnabled&&(o.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,L.q)(this._opacityTexture,o,"opacity")),this._hasAlphaChannel()&&o.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&q.ReflectionTextureEnabled){if(o.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),o.Xf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const Z=this._reflectionTexture;o.updateVector3("vReflectionPosition",Z.boundingBoxPosition),o.updateVector3("vReflectionSize",Z.boundingBoxSize)}}else o.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&q.EmissiveTextureEnabled&&(o.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,L.q)(this._emissiveTexture,o,"emissive")),this._lightmapTexture&&q.LightmapTextureEnabled&&(o.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,L.q)(this._lightmapTexture,o,"lightmap")),this._specularTexture&&q.SpecularTextureEnabled&&(o.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,L.q)(this._specularTexture,o,"specular")),this._bumpTexture&&u.getEngine().getCaps().standardDerivatives&&q.BumpTextureEnabled&&(o.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,L.q)(this._bumpTexture,o,"bump"),u._mirroredCameraPosition?o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&q.RefractionTextureEnabled){let Z=1;if(this._refractionTexture.isCube||(o.Xf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(Z=this._refractionTexture.depth)),o.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,Z,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const Z=this._refractionTexture;o.updateVector3("vRefractionPosition",Z.boundingBoxPosition),o.updateVector3("vRefractionSize",Z.boundingBoxSize)}}}this.pointsCloud&&o.updateFloat("pointSize",this.pointSize),o.updateColor4("vSpecularColor",this.specularColor,this.specularPower),o.updateColor3("vEmissiveColor",q.EmissiveTextureEnabled?this.emissiveColor:j.Lx.BlackReadOnly),o.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),u.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),o.updateColor3("vAmbientColor",this._globalAmbientColor)}u.texturesEnabled&&(this._diffuseTexture&&q.DiffuseTextureEnabled&&f.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&q.AmbientTextureEnabled&&f.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&q.OpacityTextureEnabled&&f.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&q.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?f.setTexture("reflectionCubeSampler",this._reflectionTexture):f.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&q.EmissiveTextureEnabled&&f.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&q.LightmapTextureEnabled&&f.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&q.SpecularTextureEnabled&&f.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&u.getEngine().getCaps().standardDerivatives&&q.BumpTextureEnabled&&f.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&q.RefractionTextureEnabled&&(this._refractionTexture.isCube?f.setTexture("refractionCubeSampler",this._refractionTexture):f.setTexture("refraction2DSampler",this._refractionTexture))),this.KZ().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(x)&&this.KZ().depthPeelingRenderer.bind(f),this._eventInfo.subMesh=F,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,C.f)(f,this,u),this.bindEyePosition(f)}else u.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(t||!this.isFrozen){var c;if(u.lightsEnabled&&!this._disableLighting&&(0,L.h)(u,x,f,G,this._maxSimultaneousLights),(u.fogEnabled&&x.applyFog&&u.fogMode!==Y.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||x.receiveShadows||G.PREPASS)&&this.bindView(f),(0,L.f)(u,x,f),G.NUM_MORPH_INFLUENCERS&&(0,L.m)(x,f),G.BAKED_VERTEX_ANIMATION_TEXTURE)null===(c=x.bakedVertexAnimationManager)||void 0===c||c.bind(f,G.INSTANCES);this.useLogarithmicDepth&&(0,L.l)(G,f,u),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(x,this._activeEffect,F),o.update()}getAnimatables(){const Z=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&Z.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&Z.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&Z.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&Z.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&Z.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&Z.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&Z.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&Z.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&Z.push(this._refractionTexture),Z}getActiveTextures(){const Z=super.getActiveTextures();return this._diffuseTexture&&Z.push(this._diffuseTexture),this._ambientTexture&&Z.push(this._ambientTexture),this._opacityTexture&&Z.push(this._opacityTexture),this._reflectionTexture&&Z.push(this._reflectionTexture),this._emissiveTexture&&Z.push(this._emissiveTexture),this._specularTexture&&Z.push(this._specularTexture),this._bumpTexture&&Z.push(this._bumpTexture),this._lightmapTexture&&Z.push(this._lightmapTexture),this._refractionTexture&&Z.push(this._refractionTexture),Z}hasTexture(Z){return!!super.hasTexture(Z)||(this._diffuseTexture===Z||(this._ambientTexture===Z||(this._opacityTexture===Z||(this._reflectionTexture===Z||(this._emissiveTexture===Z||(this._specularTexture===Z||(this._bumpTexture===Z||(this._lightmapTexture===Z||this._refractionTexture===Z))))))))}dispose(Z,x){var F,u,G,f,Y,j,d,t,o;x&&(null===(F=this._diffuseTexture)||void 0===F||F.dispose(),null===(u=this._ambientTexture)||void 0===u||u.dispose(),null===(G=this._opacityTexture)||void 0===G||G.dispose(),null===(f=this._reflectionTexture)||void 0===f||f.dispose(),null===(Y=this._emissiveTexture)||void 0===Y||Y.dispose(),null===(j=this._specularTexture)||void 0===j||j.dispose(),null===(d=this._bumpTexture)||void 0===d||d.dispose(),null===(t=this._lightmapTexture)||void 0===t||t.dispose(),null===(o=this._refractionTexture)||void 0===o||o.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(Z,x)}clone(Z){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const u=H.c.Clone((()=>new q(Z,this.KZ())),this,{cloneTexturesOnlyOnce:x});return u.name=Z,u.id=Z,this.stencil.copyTo(u.stencil),this._clonePlugins(u,F),u}static Parse(Z,x,F){const u=H.c.Parse((()=>new q(Z.name,x)),Z,x,F);return Z.stencil&&u.stencil.parse(Z.stencil,x,F),c.e._ParsePlugins(Z,u,x,F),u}static get DiffuseTextureEnabled(){return k.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){k.e.DiffuseTextureEnabled=Z}static get DetailTextureEnabled(){return k.e.DetailTextureEnabled}static set DetailTextureEnabled(Z){k.e.DetailTextureEnabled=Z}static get AmbientTextureEnabled(){return k.e.AmbientTextureEnabled}static set AmbientTextureEnabled(Z){k.e.AmbientTextureEnabled=Z}static get OpacityTextureEnabled(){return k.e.OpacityTextureEnabled}static set OpacityTextureEnabled(Z){k.e.OpacityTextureEnabled=Z}static get ReflectionTextureEnabled(){return k.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){k.e.ReflectionTextureEnabled=Z}static get EmissiveTextureEnabled(){return k.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){k.e.EmissiveTextureEnabled=Z}static get SpecularTextureEnabled(){return k.e.SpecularTextureEnabled}static set SpecularTextureEnabled(Z){k.e.SpecularTextureEnabled=Z}static get BumpTextureEnabled(){return k.e.BumpTextureEnabled}static set BumpTextureEnabled(Z){k.e.BumpTextureEnabled=Z}static get LightmapTextureEnabled(){return k.e.LightmapTextureEnabled}static set LightmapTextureEnabled(Z){k.e.LightmapTextureEnabled=Z}static get RefractionTextureEnabled(){return k.e.RefractionTextureEnabled}static set RefractionTextureEnabled(Z){k.e.RefractionTextureEnabled=Z}static get ColorGradingTextureEnabled(){return k.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){k.e.ColorGradingTextureEnabled=Z}static get FresnelEnabled(){return k.e.FresnelEnabled}static set FresnelEnabled(Z){k.e.FresnelEnabled=Z}}q.ForceGLSL=!1,(0,u.d)([(0,G.z)("diffuseTexture")],q.prototype,"_diffuseTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],q.prototype,"diffuseTexture",void 0),(0,u.d)([(0,G.z)("ambientTexture")],q.prototype,"_ambientTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"ambientTexture",void 0),(0,u.d)([(0,G.z)("opacityTexture")],q.prototype,"_opacityTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],q.prototype,"opacityTexture",void 0),(0,u.d)([(0,G.z)("reflectionTexture")],q.prototype,"_reflectionTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"reflectionTexture",void 0),(0,u.d)([(0,G.z)("emissiveTexture")],q.prototype,"_emissiveTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"emissiveTexture",void 0),(0,u.d)([(0,G.z)("specularTexture")],q.prototype,"_specularTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"specularTexture",void 0),(0,u.d)([(0,G.z)("bumpTexture")],q.prototype,"_bumpTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"bumpTexture",void 0),(0,u.d)([(0,G.z)("lightmapTexture")],q.prototype,"_lightmapTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"lightmapTexture",void 0),(0,u.d)([(0,G.z)("refractionTexture")],q.prototype,"_refractionTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"refractionTexture",void 0),(0,u.d)([(0,G.g)("ambient")],q.prototype,"ambientColor",void 0),(0,u.d)([(0,G.g)("diffuse")],q.prototype,"diffuseColor",void 0),(0,u.d)([(0,G.g)("specular")],q.prototype,"specularColor",void 0),(0,u.d)([(0,G.g)("emissive")],q.prototype,"emissiveColor",void 0),(0,u.d)([(0,G.H)()],q.prototype,"specularPower",void 0),(0,u.d)([(0,G.H)("useAlphaFromDiffuseTexture")],q.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],q.prototype,"useAlphaFromDiffuseTexture",void 0),(0,u.d)([(0,G.H)("useEmissiveAsIllumination")],q.prototype,"_useEmissiveAsIllumination",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useEmissiveAsIllumination",void 0),(0,u.d)([(0,G.H)("linkEmissiveWithDiffuse")],q.prototype,"_linkEmissiveWithDiffuse",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"linkEmissiveWithDiffuse",void 0),(0,u.d)([(0,G.H)("useSpecularOverAlpha")],q.prototype,"_useSpecularOverAlpha",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useSpecularOverAlpha",void 0),(0,u.d)([(0,G.H)("useReflectionOverAlpha")],q.prototype,"_useReflectionOverAlpha",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useReflectionOverAlpha",void 0),(0,u.d)([(0,G.H)("disableLighting")],q.prototype,"_disableLighting",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsLightsDirty")],q.prototype,"disableLighting",void 0),(0,u.d)([(0,G.H)("useObjectSpaceNormalMap")],q.prototype,"_useObjectSpaceNormalMap",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useObjectSpaceNormalMap",void 0),(0,u.d)([(0,G.H)("useParallax")],q.prototype,"_useParallax",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useParallax",void 0),(0,u.d)([(0,G.H)("useParallaxOcclusion")],q.prototype,"_useParallaxOcclusion",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useParallaxOcclusion",void 0),(0,u.d)([(0,G.H)()],q.prototype,"parallaxScaleBias",void 0),(0,u.d)([(0,G.H)("roughness")],q.prototype,"_roughness",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"roughness",void 0),(0,u.d)([(0,G.H)()],q.prototype,"indexOfRefraction",void 0),(0,u.d)([(0,G.H)()],q.prototype,"invertRefractionY",void 0),(0,u.d)([(0,G.H)()],q.prototype,"alphaCutOff",void 0),(0,u.d)([(0,G.H)("useLightmapAsShadowmap")],q.prototype,"_useLightmapAsShadowmap",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useLightmapAsShadowmap",void 0),(0,u.d)([(0,G.n)("diffuseFresnelParameters")],q.prototype,"_diffuseFresnelParameters",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelDirty")],q.prototype,"diffuseFresnelParameters",void 0),(0,u.d)([(0,G.n)("opacityFresnelParameters")],q.prototype,"_opacityFresnelParameters",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],q.prototype,"opacityFresnelParameters",void 0),(0,u.d)([(0,G.n)("reflectionFresnelParameters")],q.prototype,"_reflectionFresnelParameters",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelDirty")],q.prototype,"reflectionFresnelParameters",void 0),(0,u.d)([(0,G.n)("refractionFresnelParameters")],q.prototype,"_refractionFresnelParameters",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelDirty")],q.prototype,"refractionFresnelParameters",void 0),(0,u.d)([(0,G.n)("emissiveFresnelParameters")],q.prototype,"_emissiveFresnelParameters",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelDirty")],q.prototype,"emissiveFresnelParameters",void 0),(0,u.d)([(0,G.H)("useReflectionFresnelFromSpecular")],q.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsFresnelDirty")],q.prototype,"useReflectionFresnelFromSpecular",void 0),(0,u.d)([(0,G.H)("useGlossinessFromSpecularMapAlpha")],q.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,u.d)([(0,G.H)("maxSimultaneousLights")],q.prototype,"_maxSimultaneousLights",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsLightsDirty")],q.prototype,"maxSimultaneousLights",void 0),(0,u.d)([(0,G.H)("invertNormalMapX")],q.prototype,"_invertNormalMapX",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"invertNormalMapX",void 0),(0,u.d)([(0,G.H)("invertNormalMapY")],q.prototype,"_invertNormalMapY",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"invertNormalMapY",void 0),(0,u.d)([(0,G.H)("twoSidedLighting")],q.prototype,"_twoSidedLighting",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"twoSidedLighting",void 0),(0,u.d)([(0,G.H)("applyDecalMapAfterDetailMap")],q.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,u.d)([(0,G.b)("_markAllSubMeshesAsMiscDirty")],q.prototype,"applyDecalMapAfterDetailMap",void 0),(0,U.g)("BABYLON.StandardMaterial",q),Y.d.DefaultMaterialFactory=Z=>new q("default material",Z)}}]);