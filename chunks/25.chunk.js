"use strict";(self.rvold1i0ywi=self.rvold1i0ywi||[]).push([[25],{11683:(F,b,Q)=>{Q.d(b,{c:()=>K});var C=Q(11293),z=Q(11607),t=Q(11296),g=Q(11675),W=Q(11673),Z=Q(11690),q=Q(11650);class G extends W.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class K extends Z.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(F){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(F,"DetailMap",140,new G,b),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=z.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=F._dirtyCallbacks[1]}isReadyForSubMesh(F,b,Q){return!this._isEnabled||!(F._areTexturesDirty&&b.texturesEnabled&&Q.getCaps().standardDerivatives&&this._texture&&g.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(F,b){if(this._isEnabled){F.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const Q=b.getEngine();F._areTexturesDirty&&(Q.getCaps().standardDerivatives&&this._texture&&g.e.DetailTextureEnabled&&this._isEnabled?((0,q.T)(this._texture,F,"DETAIL"),F.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):F.DETAIL=!1)}else F.DETAIL=!1}bindForSubMesh(F,b){if(!this._isEnabled)return;const Q=this._material.isFrozen;F.useUbo&&Q&&F.isSync||this._texture&&g.e.DetailTextureEnabled&&(F.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,q.r)(this._texture,F,"detail")),b.texturesEnabled&&this._texture&&g.e.DetailTextureEnabled&&F.setTexture("detailSampler",this._texture)}hasTexture(F){return this._texture===F}getActiveTextures(F){this._texture&&F.push(this._texture)}getAnimatables(F){this._texture&&this._texture.animations&&this._texture.animations.length>0&&F.push(this._texture)}dispose(F){var b;F&&(null===(b=this._texture)||void 0===b||b.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(F){F.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,C.b)([(0,t.w)("detailTexture"),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"texture",void 0),(0,C.b)([(0,t.A)()],K.prototype,"diffuseBlendLevel",void 0),(0,C.b)([(0,t.A)()],K.prototype,"roughnessBlendLevel",void 0),(0,C.b)([(0,t.A)()],K.prototype,"bumpLevel",void 0),(0,C.b)([(0,t.A)(),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"normalBlendMethod",void 0),(0,C.b)([(0,t.A)(),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"isEnabled",void 0)},11673:(F,b,Q)=>{Q.d(b,{d:()=>C});class C{constructor(F){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=F,F)for(const b in F)Object.prototype.hasOwnProperty.call(F,b)&&this._setDefaultValue(b)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||F,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const F of Object.keys(this))"_"!==F[0]&&this._keys.push(F);if(this._externalProperties)for(const F in this._externalProperties)-1===this._keys.indexOf(F)&&this._keys.push(F)}isEqual(F){if(this._keys.length!==F._keys.length)return!1;for(let b=0;b<this._keys.length;b++){const Q=this._keys[b];if(this[Q]!==F[Q])return!1}return!0}cloneTo(F){this._keys.length!==F._keys.length&&(F._keys=this._keys.slice(0));for(let b=0;b<this._keys.length;b++){const Q=this._keys[b];F[Q]=this[Q]}}reset(){for(const F of this._keys)this._setDefaultValue(F)}_setDefaultValue(F){var b,Q,C,z;const t=(null===(b=this._externalProperties)||void 0===b||null===(Q=b[F])||void 0===Q?void 0:Q.type)??typeof this[F],g=null===(C=this._externalProperties)||void 0===C||null===(z=C[F])||void 0===z?void 0:z.default;switch(t){case"number":this[F]=g??0;break;case"string":this[F]=g??"";break;default:this[F]=g??!1}}toString(){let F="";for(let b=0;b<this._keys.length;b++){const Q=this._keys[b],C=this[Q];switch(typeof C){case"number":case"string":F+="#define "+Q+" "+C+"\n";break;default:C&&(F+="#define "+Q+"\n")}}return F}}},11675:(F,b,Q)=>{Q.d(b,{e:()=>z});var C=Q(11203);class z{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(F){this._DiffuseTextureEnabled!==F&&(this._DiffuseTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(F){this._BaseWeightTextureEnabled!==F&&(this._BaseWeightTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(F){this._BaseDiffuseRoughnessTextureEnabled!==F&&(this._BaseDiffuseRoughnessTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(F){this._DetailTextureEnabled!==F&&(this._DetailTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(F){this._DecalMapEnabled!==F&&(this._DecalMapEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(F){this._AmbientTextureEnabled!==F&&(this._AmbientTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(F){this._OpacityTextureEnabled!==F&&(this._OpacityTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(F){this._ReflectionTextureEnabled!==F&&(this._ReflectionTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(F){this._EmissiveTextureEnabled!==F&&(this._EmissiveTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(F){this._SpecularTextureEnabled!==F&&(this._SpecularTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(F){this._BumpTextureEnabled!==F&&(this._BumpTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(F){this._LightmapTextureEnabled!==F&&(this._LightmapTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(F){this._RefractionTextureEnabled!==F&&(this._RefractionTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(F){this._ColorGradingTextureEnabled!==F&&(this._ColorGradingTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(F){this._FresnelEnabled!==F&&(this._FresnelEnabled=F,C.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(F){this._ClearCoatTextureEnabled!==F&&(this._ClearCoatTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(F){this._ClearCoatBumpTextureEnabled!==F&&(this._ClearCoatBumpTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(F){this._ClearCoatTintTextureEnabled!==F&&(this._ClearCoatTintTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(F){this._SheenTextureEnabled!==F&&(this._SheenTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(F){this._AnisotropicTextureEnabled!==F&&(this._AnisotropicTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(F){this._ThicknessTextureEnabled!==F&&(this._ThicknessTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(F){this._RefractionIntensityTextureEnabled!==F&&(this._RefractionIntensityTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(F){this._TranslucencyIntensityTextureEnabled!==F&&(this._TranslucencyIntensityTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(F){this._TranslucencyColorTextureEnabled!==F&&(this._TranslucencyColorTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(F){this._IridescenceTextureEnabled!==F&&(this._IridescenceTextureEnabled=F,C.d.MarkAllMaterialsAsDirty(1))}}z._DiffuseTextureEnabled=!0,z._BaseWeightTextureEnabled=!0,z._BaseDiffuseRoughnessTextureEnabled=!0,z._DetailTextureEnabled=!0,z._DecalMapEnabled=!0,z._AmbientTextureEnabled=!0,z._OpacityTextureEnabled=!0,z._ReflectionTextureEnabled=!0,z._EmissiveTextureEnabled=!0,z._SpecularTextureEnabled=!0,z._BumpTextureEnabled=!0,z._LightmapTextureEnabled=!0,z._RefractionTextureEnabled=!0,z._ColorGradingTextureEnabled=!0,z._FresnelEnabled=!0,z._ClearCoatTextureEnabled=!0,z._ClearCoatBumpTextureEnabled=!0,z._ClearCoatTintTextureEnabled=!0,z._SheenTextureEnabled=!0,z._AnisotropicTextureEnabled=!0,z._ThicknessTextureEnabled=!0,z._RefractionIntensityTextureEnabled=!0,z._TranslucencyIntensityTextureEnabled=!0,z._TranslucencyColorTextureEnabled=!0,z._IridescenceTextureEnabled=!0},11694:(F,b,Q)=>{Q.d(b,{b:()=>t});var C,z=Q(11309);!function(F){F[F.Zero=0]="Zero",F[F.One=1]="One",F[F.MaxViewZ=2]="MaxViewZ"}(C||(C={}));class t{static CreateConfiguration(F){return t._Configurations[F]={defines:{},previousWorldMatrices:{},previousViewProjection:z.Matrix.Zero(),currentViewProjection:z.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},t._Configurations[F]}static DeleteConfiguration(F){delete t._Configurations[F]}static GetConfiguration(F){return t._Configurations[F]}static AddUniformsAndSamplers(F,b){F.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(F,b){for(const Q of b)if(Q.Xb)for(const b of Q.Xb)b._removeDrawWrapper(F)}static PrepareDefines(F,b,Q){if(!Q._arePrePassDirty)return;const C=t._Configurations[F];if(!C)return;Q.PREPASS=!0,Q.PREPASS_COLOR=!1,Q.PREPASS_COLOR_INDEX=-1;let z=0;for(let g=0;g<t.GeometryTextureDescriptions.length;g++){const F=t.GeometryTextureDescriptions[g],b=F.define,W=F.defineIndex,Z=C.defines[W];void 0!==Z?(Q[b]=!0,Q[W]=Z,z++):(Q[b]=!1,delete Q[W])}Q.SCENE_MRT_COUNT=z,Q.BONES_VELOCITY_ENABLED=b.useBones&&b.computeBonesUsingShaders&&b.skeleton&&!b.skeleton.isUsingTextureForMatrices&&-1===C.excludedSkinnedMesh.indexOf(b)}static Bind(F,b,Q,C,z){const g=t._Configurations[F];if(!g)return;const W=Q.RF(),Z=W.getEngine();if(g.reverseCulling&&Z.setStateCullFaceType(W._mirroredCameraPosition?z.cullBackFaces:!z.cullBackFaces),(void 0!==g.defines.PREPASS_VELOCITY_INDEX||void 0!==g.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(g.previousWorldMatrices[Q.uniqueId]||(g.previousWorldMatrices[Q.uniqueId]=C.clone()),g.previousViewProjection||(g.previousViewProjection=W.getTransformMatrix().clone(),g.currentViewProjection=W.getTransformMatrix().clone()),g.currentViewProjection.updateFlag!==W.getTransformMatrix().updateFlag?(g.lastUpdateFrameId=Z.frameId,g.previousViewProjection.W(g.currentViewProjection),g.currentViewProjection.W(W.getTransformMatrix())):g.lastUpdateFrameId!==Z.frameId&&(g.lastUpdateFrameId=Z.frameId,g.previousViewProjection.W(g.currentViewProjection)),b.setMatrix("previousWorld",g.previousWorldMatrices[Q.uniqueId]),b.setMatrix("previousViewProjection",g.previousViewProjection),g.previousWorldMatrices[Q.uniqueId]=C.clone(),Q.useBones&&Q.computeBonesUsingShaders&&Q.skeleton)){const F=Q.skeleton;if(!F.isUsingTextureForMatrices||-1===b.getUniformIndex("boneTextureWidth")){const C=F.getTransformMatrices(Q);C&&(g.previousBones[Q.uniqueId]||(g.previousBones[Q.uniqueId]=C.slice()),b.setMatrices("mPreviousBones",g.previousBones[Q.uniqueId]),g.previousBones[Q.uniqueId].set(C))}}}}t.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],t._Configurations={}},11690:(F,b,Q)=>{Q.d(b,{e:()=>X});var C=Q(11293),z=Q(11296),t=Q(11607),g=Q(11161),W=Q(11182),Z=Q(11219);const q=new RegExp("^([gimus]+)!");class G{constructor(F){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=F,this._scene=F.RF(),this._engine=this._scene.getEngine()}_addPlugin(F){for(let C=0;C<this._plugins.length;++C)if(this._plugins[C].name===F.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!F.isCompatible(this._material.shaderLanguage))throw`The plugin "${F.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const b=F.getClassName();G._MaterialPluginClassToMainDefine[b]||(G._MaterialPluginClassToMainDefine[b]="MATERIALPLUGIN_"+ ++G._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(F,b)=>this._handlePluginEvent(F,b),this._plugins.push(F),this._plugins.sort(((F,b)=>F.priority-b.priority)),this._codeInjectionPoints={};const Q={};Q[G._MaterialPluginClassToMainDefine[b]]={type:"boolean",default:!0};for(const C of this._plugins)C.collectDefines(Q),this._collectPointNames("vertex",C.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",C.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=Q,!0}_activatePlugin(F){-1===this._activePlugins.indexOf(F)&&(this._activePlugins.push(F),this._activePlugins.sort(((F,b)=>F.priority-b.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),F.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(F),this._activePluginsForExtraEvents.sort(((F,b)=>F.priority-b.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(F){for(let b=0;b<this._plugins.length;++b)if(this._plugins[b].name===F)return this._plugins[b];return null}_handlePluginEventIsReadyForSubMesh(F){let b=!0;for(const Q of this._activePlugins)b=b&&Q.isReadyForSubMesh(F.defines,this._scene,this._engine,F.subMesh);F.isReadyForSubMesh=b}_handlePluginEventPrepareDefinesBeforeAttributes(F){for(const b of this._activePlugins)b.prepareDefinesBeforeAttributes(F.defines,this._scene,F.mesh)}_handlePluginEventPrepareDefines(F){for(const b of this._activePlugins)b.prepareDefines(F.defines,this._scene,F.mesh)}_handlePluginEventHardBindForSubMesh(F){for(const b of this._activePluginsForExtraEvents)b.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,F.subMesh)}_handlePluginEventBindForSubMesh(F){for(const b of this._activePlugins)b.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,F.subMesh)}_handlePluginEventHasRenderTargetTextures(F){let b=!1;for(const Q of this._activePluginsForExtraEvents)if(b=Q.hasRenderTargetTextures(),b)break;F.hasRenderTargetTextures=b}_handlePluginEventFillRenderTargetTextures(F){for(const b of this._activePluginsForExtraEvents)b.fillRenderTargetTextures(F.renderTargets)}_handlePluginEvent(F,b){switch(F){case 512:{const F=b;for(const b of this._activePlugins)b.getActiveTextures(F.activeTextures);break}case 256:{const F=b;for(const b of this._activePlugins)b.getAnimatables(F.animatables);break}case 1024:{const F=b;let Q=!1;for(const b of this._activePlugins)if(Q=b.hasTexture(F.texture),Q)break;F.hasTexture=Q;break}case 2:{const F=b;for(const b of this._plugins)b.dispose(F.forceDisposeTextures);break}case 4:b.defineNames=this._defineNamesFromPlugins;break;case 128:{const F=b;for(const b of this._activePlugins)F.fallbackRank=b.addFallbacks(F.defines,F.fallbacks,F.fallbackRank),b.getAttributes(F.attributes,this._scene,F.mesh);this._uniformList.length>0&&F.uniforms.push(...this._uniformList),this._samplerList.length>0&&F.samplers.push(...this._samplerList),this._uboList.length>0&&F.uniformBuffersNames.push(...this._uboList),F.customCode=this._injectCustomCode(F,F.customCode);break}case 8:{const F=b;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const Q=1===this._material.shaderLanguage;for(const b of this._plugins){const C=b.getUniforms(this._material.shaderLanguage);if(C){if(C.ubo)for(const b of C.ubo){if(b.size&&b.type){const C=b.arraySize??0;if(F.ubo.addUniform(b.name,b.size,C),Q){let F;switch(b.type){case"mat4":F="mat4x4f";break;case"float":F="f32";break;default:F=`${b.type}f`}this._uboDeclaration+=C>0?`uniform ${b.name}: array<${F}, ${C}>;\n`:`uniform ${b.name}: ${F};\n`}else this._uboDeclaration+=`${b.type} ${b.name}${C>0?`[${C}]`:""};\n`}this._uniformList.push(b.name)}C.vertex&&(this._vertexDeclaration+=C.vertex+"\n"),C.fragment&&(this._fragmentDeclaration+=C.fragment+"\n")}b.getSamplers(this._samplerList),b.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(F,b){if(b)for(const Q in b)this._codeInjectionPoints[F]||(this._codeInjectionPoints[F]={}),this._codeInjectionPoints[F][Q]=!0}_injectCustomCode(F,b){return(Q,C)=>{var z;b&&(C=b(Q,C)),this._uboDeclaration&&(C=C.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(C=C.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(C=C.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const t=null===(z=this._codeInjectionPoints)||void 0===z?void 0:z[Q];if(!t)return C;let g=null;for(let b in t){let z="";for(const C of this._activePlugins){var G;let t=null===(G=C.getCustomCode(Q,this._material.shaderLanguage))||void 0===G?void 0:G[b];if(t){if(C.resolveIncludes){if(null===g){const b=0;g={defines:[],indexParameters:F.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:Z.e.GetShadersRepository(b),includesShadersStore:Z.e.GetIncludesShadersStore(b),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}g.isFragment="fragment"===Q,(0,W.j)(t,g,(F=>t=F))}z+=t+"\n"}}if(z.length>0)if("!"===b.charAt(0)){b=b.substring(1);let F="g";if("!"===b.charAt(0))F="",b=b.substring(1);else{const Q=q.exec(b);Q&&Q.length>=2&&(F=Q[1],b=b.substring(F.length+1))}F.indexOf("g")<0&&(F+="g");const Q=C,t=new RegExp(b,F);let g=t.exec(Q);for(;null!==g;){let F=z;for(let b=0;b<g.length;++b)F=F.replace("$"+b,g[b]);C=C.replace(g[0],F),g=t.exec(Q)}}else{const F="#define "+b;C=C.replace(F,"\n"+z+"\n"+F)}}return C}}}G._MaterialPluginClassToMainDefine={},G._MaterialPluginCounter=0,g.d.OnEnginesDisposedObservable.add((()=>{y()}));const K=[];let e=!1,N=null;function y(){K.length=0,e=!1,t.c.OnEventObservable.remove(N),N=null}var E=Q(11349),c=Q(11265);class X{isCompatible(F){return 0===F}_enable(F){F&&this._pluginManager._activatePlugin(this)}constructor(F,b,Q,C){let z=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=F,this.name=b,this.priority=Q,this.resolveIncludes=g,F.pluginManager||(F.pluginManager=new G(F),F.Kb.add((()=>{F.pluginManager=void 0}))),this._pluginDefineNames=C,this._pluginManager=F.pluginManager,z&&this._pluginManager._addPlugin(this),t&&this._enable(!0),this.markAllDefinesAsDirty=F._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(F,b,Q,C){return!0}hardBindForSubMesh(F,b,Q,C){}bindForSubMesh(F,b,Q,C){}dispose(F){}getCustomCode(F){return null}collectDefines(F){if(this._pluginDefineNames)for(const b of Object.keys(this._pluginDefineNames)){if("_"===b[0])continue;const Q=typeof this._pluginDefineNames[b];F[b]={type:"number"===Q?"number":"string"===Q?"string":"boolean"===Q?"boolean":"object",default:this._pluginDefineNames[b]}}}prepareDefinesBeforeAttributes(F,b,Q){}prepareDefines(F,b,Q){}hasTexture(F){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(F){}getActiveTextures(F){}getAnimatables(F){}addFallbacks(F,b,Q){return Q}getSamplers(F){}getAttributes(F,b,Q){}getUniformBuffersNames(F){}getUniforms(){return{}}copyTo(F){E.e.Clone((()=>F),this)}serialize(){return E.e.Serialize(this)}parse(F,b,Q){E.e.Parse((()=>this),F,b,Q)}}(0,C.b)([(0,z.A)()],X.prototype,"name",void 0),(0,C.b)([(0,z.A)()],X.prototype,"priority",void 0),(0,C.b)([(0,z.A)()],X.prototype,"resolveIncludes",void 0),(0,C.b)([(0,z.A)()],X.prototype,"registerForExtraEvents",void 0),(0,c.g)("BABYLON.MaterialPluginBase",X)},11671:(F,b,Q)=>{Q.d(b,{b:()=>C});class C{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(F){F.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(F){}bindForSubMesh(F,b,Q,C,z){if(b.prePassRenderer&&b.prePassRenderer.enabled&&b.prePassRenderer.currentRTisSceneRT&&(-1!==b.prePassRenderer.getIndex(2)||-1!==b.prePassRenderer.getIndex(11))){this.previousWorldMatrices[Q.uniqueId]||(this.previousWorldMatrices[Q.uniqueId]=C.clone()),this.previousViewProjection||(this.previousViewProjection=b.getTransformMatrix().clone(),this.currentViewProjection=b.getTransformMatrix().clone());const z=b.getEngine();this.currentViewProjection.updateFlag!==b.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=z.frameId,this.previousViewProjection.W(this.currentViewProjection),this.currentViewProjection.W(b.getTransformMatrix())):this._lastUpdateFrameId!==z.frameId&&(this._lastUpdateFrameId=z.frameId,this.previousViewProjection.W(this.currentViewProjection)),F.setMatrix("previousWorld",this.previousWorldMatrices[Q.uniqueId]),F.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[Q.uniqueId]=C.clone()}}}},11662:(F,b,Q)=>{Q.d(b,{qQ:()=>D});var C=Q(11293),z=Q(11296),t=Q(11395),g=Q(11537),W=Q(11359),Z=Q(11372),q=Q(11671),G=Q(11541),K=Q(11607),e=Q(11673),N=Q(11602),y=Q(11287),E=Q(11265),c=Q(11675),X=Q(11600),L=Q(11683),i=Q(11655),f=Q(11650),k=Q(11349),m=Q(11694);const R={effect:null,subMesh:null};class p extends e.d{constructor(F){super(F),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(F){const b=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const Q of b)this[Q]=Q===F}}class D extends N.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(F){this._attachImageProcessingConfiguration(F),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(F){F!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=F||this.RF().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(F){this.imageProcessingConfiguration.colorCurvesEnabled=F}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(F){this.imageProcessingConfiguration.colorGradingEnabled=F}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(F){this._imageProcessingConfiguration.toneMappingEnabled=F}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(F){this._imageProcessingConfiguration.exposure=F}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(F){this._imageProcessingConfiguration.contrast=F}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(F){this._imageProcessingConfiguration.colorGradingTexture=F}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(F){this._imageProcessingConfiguration.colorCurves=F}get canRenderToMRT(){return!0}constructor(F,b){super(F,b,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||D.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new W.GQ(0,0,0),this.diffuseColor=new W.GQ(1,1,1),this.specularColor=new W.GQ(1,1,1),this.emissiveColor=new W.GQ(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new t.d(16),this._globalAmbientColor=new W.GQ(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new L.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new q.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"qQ"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===K.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ib&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==K.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ib||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(F,b){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const z=b._drawWrapper;if(z.effect&&this.isFrozen&&z._wasPreviouslyReady&&z._wasPreviouslyUsingInstances===C)return!0;b.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),b.materialDefines=new p(this._eventInfo.defineNames));const t=this.RF(),g=b.materialDefines;if(this._isReadyForSubMesh(b))return!0;const W=t.getEngine();g._needNormals=(0,f.S)(t,F,g,!0,this._maxSimultaneousLights,this._disableLighting),(0,f.Y)(t,g);const K=this.needAlphaBlendingForMesh(F)&&this.RF().useOrderIndependentTransparency;if((0,f.cb)(t,g,this.canRenderToMRT&&!K),(0,f._)(t,g,K),m.b.PrepareDefines(W.currentRenderPassId,F,g),g._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,g._needUVs=!1;for(let F=1;F<=6;++F)g["MAINUV"+F]=!1;if(t.texturesEnabled){if(g.DIFFUSEDIRECTUV=0,g.BUMPDIRECTUV=0,g.AMBIENTDIRECTUV=0,g.OPACITYDIRECTUV=0,g.EMISSIVEDIRECTUV=0,g.SPECULARDIRECTUV=0,g.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&D.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._diffuseTexture,g,"DIFFUSE")}else g.DIFFUSE=!1;if(this._ambientTexture&&D.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._ambientTexture,g,"AMBIENT")}else g.AMBIENT=!1;if(this._opacityTexture&&D.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._opacityTexture,g,"OPACITY"),g.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else g.OPACITY=!1;if(this._reflectionTexture&&D.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(g._needNormals=!0,g.REFLECTION=!0,g.ROUGHNESS=this._roughness>0,g.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,g.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===y.b.INVCUBIC_MODE,g.REFLECTIONMAP_3D=this._reflectionTexture.isCube,g.REFLECTIONMAP_OPPOSITEZ=g.REFLECTIONMAP_3D&&this.RF().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,g.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case y.b.EXPLICIT_MODE:g.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case y.b.PLANAR_MODE:g.setReflectionMode("REFLECTIONMAP_PLANAR");break;case y.b.PROJECTION_MODE:g.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case y.b.SKYBOX_MODE:g.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case y.b.SPHERICAL_MODE:g.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case y.b.EQUIRECTANGULAR_MODE:g.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case y.b.FIXED_EQUIRECTANGULAR_MODE:g.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case y.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:g.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case y.b.CUBIC_MODE:case y.b.INVCUBIC_MODE:default:g.setReflectionMode("REFLECTIONMAP_CUBIC")}g.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else g.REFLECTION=!1,g.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&D.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._emissiveTexture,g,"EMISSIVE")}else g.EMISSIVE=!1;if(this._lightmapTexture&&D.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._lightmapTexture,g,"LIGHTMAP"),g.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,g.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else g.LIGHTMAP=!1;if(this._specularTexture&&D.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,f.T)(this._specularTexture,g,"SPECULAR"),g.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else g.SPECULAR=!1;if(t.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&D.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,f.T)(this._bumpTexture,g,"BUMP"),g.PARALLAX=this._useParallax,g.PARALLAX_RHS=t.useRightHandedSystem,g.PARALLAXOCCLUSION=this._useParallaxOcclusion,g.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else g.BUMP=!1,g.PARALLAX=!1,g.PARALLAX_RHS=!1,g.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&D.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;g._needUVs=!0,g.REFRACTION=!0,g.REFRACTIONMAP_3D=this._refractionTexture.isCube,g.RGBDREFRACTION=this._refractionTexture.isRGBD,g.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else g.REFRACTION=!1;g.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else g.DIFFUSE=!1,g.AMBIENT=!1,g.OPACITY=!1,g.REFLECTION=!1,g.EMISSIVE=!1,g.LIGHTMAP=!1,g.BUMP=!1,g.REFRACTION=!1;g.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),g.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,g.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,g.SPECULAROVERALPHA=this._useSpecularOverAlpha,g.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,g.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,g.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(F)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=g,this._eventInfo.subMesh=b,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(g._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(g),g.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,g.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(g._areFresnelDirty&&(D.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(g.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,g.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,g.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,g.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,g.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,g.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,g._needNormals=!0,g.FRESNEL=!0):g.FRESNEL=!1),g.AREALIGHTUSED)for(let Q=0;Q<F.lightSources.length;Q++)if(!F.lightSources[Q]._isReady())return!1;(0,f.U)(F,t,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(F),g,this._applyDecalMapAfterDetailMap),(0,f.P)(t,W,this,g,C,null,b.getRenderingMesh().hasThinInstances),this._eventInfo.defines=g,this._eventInfo.mesh=F,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,f.L)(F,g,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let e=!1;if(g.isDirty){const C=g._areLightsDisposed;g.markAsProcessed();const z=new X.c;g.REFLECTION&&z.addFallback(0,"REFLECTION"),g.SPECULAR&&z.addFallback(0,"SPECULAR"),g.BUMP&&z.addFallback(0,"BUMP"),g.PARALLAX&&z.addFallback(1,"PARALLAX"),g.PARALLAX_RHS&&z.addFallback(1,"PARALLAX_RHS"),g.PARALLAXOCCLUSION&&z.addFallback(0,"PARALLAXOCCLUSION"),g.SPECULAROVERALPHA&&z.addFallback(0,"SPECULAROVERALPHA"),g.FOG&&z.addFallback(1,"FOG"),g.POINTSIZE&&z.addFallback(0,"POINTSIZE"),g.LOGARITHMICDEPTH&&z.addFallback(0,"LOGARITHMICDEPTH"),(0,f.v)(g,z,this._maxSimultaneousLights),g.SPECULARTERM&&z.addFallback(0,"SPECULARTERM"),g.DIFFUSEFRESNEL&&z.addFallback(1,"DIFFUSEFRESNEL"),g.OPACITYFRESNEL&&z.addFallback(2,"OPACITYFRESNEL"),g.REFLECTIONFRESNEL&&z.addFallback(3,"REFLECTIONFRESNEL"),g.EMISSIVEFRESNEL&&z.addFallback(4,"EMISSIVEFRESNEL"),g.FRESNEL&&z.addFallback(4,"FRESNEL"),g.MULTIVIEW&&z.addFallback(0,"MULTIVIEW");const K=[Z.e.PositionKind];g.NORMAL&&K.push(Z.e.NormalKind),g.TANGENT&&K.push(Z.e.TangentKind);for(let F=1;F<=6;++F)g["UV"+F]&&K.push(`uv${1===F?"":F}`);g.VERTEXCOLOR&&K.push(Z.e.ColorKind),(0,f.z)(K,F,g,z),(0,f.C)(K,g),(0,f.F)(K,F,g),(0,f.y)(K,F,g);let N="default";const y=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],E=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],c=["Material","Scene","Mesh"],L={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:g.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=z,this._eventInfo.fallbackRank=0,this._eventInfo.defines=g,this._eventInfo.uniforms=y,this._eventInfo.attributes=K,this._eventInfo.samplers=E,this._eventInfo.uniformBuffersNames=c,this._eventInfo.customCode=void 0,this._eventInfo.mesh=F,this._eventInfo.indexParameters=L,this._callbackPluginEventGeneric(128,this._eventInfo),m.b.AddUniformsAndSamplers(y,E),q.b.AddUniforms(y),q.b.AddSamplers(E),G.c&&(G.c.PrepareUniforms(y,g),G.c.PrepareSamplers(E,g)),(0,f.fb)({uniformsNames:y,uniformBuffersNames:c,samplers:E,defines:g,maxSimultaneousLights:this._maxSimultaneousLights}),(0,i.b)(y);const k={};this.customShaderNameResolve&&(N=this.customShaderNameResolve(N,y,c,E,g,K,k));const p=g.toString(),D=b.effect;let P=t.getEngine().createEffect(N,{attributes:K,uniformsNames:y,uniformBuffersNames:c,samplers:E,defines:p,fallbacks:z,onCompiled:this.onCompiled,onError:this.onError,indexParameters:L,processFinalCode:k.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:g.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([Q.e(41),Q.e(64)]).then(Q.bind(Q,13793)),Promise.all([Q.e(39),Q.e(65)]).then(Q.bind(Q,13949))]):await Promise.all([Promise.all([Q.e(34),Q.e(67)]).then(Q.bind(Q,14046)),Promise.all([Q.e(33),Q.e(68)]).then(Q.bind(Q,14194))]),this._shadersLoaded=!0}},W);if(this._eventInfo.customCode=void 0,P)if(this._onEffectCreatedObservable&&(R.effect=P,R.subMesh=b,this._onEffectCreatedObservable.notifyObservers(R)),this.allowShaderHotSwapping&&D&&!P.isReady()){if(P=D,g.markAsUnprocessed(),e=this.isFrozen,C)return g._areLightsDisposed=!0,!1}else t.resetCachedMaterial(),b.setEffect(P,g,this._materialContext)}return!(!b.effect||!b.effect.isReady())&&(g._renderId=t.getRenderId(),z._wasPreviouslyReady=!e,z._wasPreviouslyUsingInstances=C,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const F=this._uniformBuffer;F.addUniform("diffuseLeftColor",4),F.addUniform("diffuseRightColor",4),F.addUniform("opacityParts",4),F.addUniform("reflectionLeftColor",4),F.addUniform("reflectionRightColor",4),F.addUniform("refractionLeftColor",4),F.addUniform("refractionRightColor",4),F.addUniform("emissiveLeftColor",4),F.addUniform("emissiveRightColor",4),F.addUniform("vDiffuseInfos",2),F.addUniform("vAmbientInfos",2),F.addUniform("vOpacityInfos",2),F.addUniform("vReflectionInfos",2),F.addUniform("vReflectionPosition",3),F.addUniform("vReflectionSize",3),F.addUniform("vEmissiveInfos",2),F.addUniform("vLightmapInfos",2),F.addUniform("vSpecularInfos",2),F.addUniform("vBumpInfos",3),F.addUniform("diffuseMatrix",16),F.addUniform("ambientMatrix",16),F.addUniform("opacityMatrix",16),F.addUniform("reflectionMatrix",16),F.addUniform("emissiveMatrix",16),F.addUniform("lightmapMatrix",16),F.addUniform("specularMatrix",16),F.addUniform("bumpMatrix",16),F.addUniform("vTangentSpaceParams",2),F.addUniform("pointSize",1),F.addUniform("alphaCutOff",1),F.addUniform("refractionMatrix",16),F.addUniform("vRefractionInfos",4),F.addUniform("vRefractionPosition",3),F.addUniform("vRefractionSize",3),F.addUniform("vSpecularColor",4),F.addUniform("vEmissiveColor",3),F.addUniform("vDiffuseColor",4),F.addUniform("vAmbientColor",3),F.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(F,b,Q){const C=this.RF(),z=Q.materialDefines;if(!z)return;const t=Q.effect;if(!t)return;this._activeEffect=t,b.getMeshUniformBuffer().bindToEffect(t,"Mesh"),b.transferToEffect(F),this._uniformBuffer.bindToEffect(t,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,C,b,F,this.isFrozen),m.b.Bind(C.getEngine().currentRenderPassId,this._activeEffect,b,F,this);const Z=C.activeCamera;Z?this._uniformBuffer.updateFloat4("cameraInfo",Z.kb,Z.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=Q,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),z.OBJECTSPACE_NORMALMAP&&(F.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const q=this._mustRebind(C,t,Q,b.visibility);(0,f.e)(b,t);const G=this._uniformBuffer;if(q){if(this.bindViewProjection(t),!G.useUbo||!this.isFrozen||!G.isSync||Q._drawWrapper._forceRebindOnNextCall){if(D.FresnelEnabled&&z.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(G.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),G.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&G.updateColor4("opacityParts",new W.GQ(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(G.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),G.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(G.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),G.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(G.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),G.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),C.texturesEnabled){if(this._diffuseTexture&&D.DiffuseTextureEnabled&&(G.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,f.r)(this._diffuseTexture,G,"diffuse")),this._ambientTexture&&D.AmbientTextureEnabled&&(G.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,f.r)(this._ambientTexture,G,"ambient")),this._opacityTexture&&D.OpacityTextureEnabled&&(G.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,f.r)(this._opacityTexture,G,"opacity")),this._hasAlphaChannel()&&G.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&D.ReflectionTextureEnabled){if(G.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),G.mb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const F=this._reflectionTexture;G.updateVector3("vReflectionPosition",F.boundingBoxPosition),G.updateVector3("vReflectionSize",F.boundingBoxSize)}}else G.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&D.EmissiveTextureEnabled&&(G.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,f.r)(this._emissiveTexture,G,"emissive")),this._lightmapTexture&&D.LightmapTextureEnabled&&(G.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,f.r)(this._lightmapTexture,G,"lightmap")),this._specularTexture&&D.SpecularTextureEnabled&&(G.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,f.r)(this._specularTexture,G,"specular")),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&(G.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,f.r)(this._bumpTexture,G,"bump"),C._mirroredCameraPosition?G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&D.RefractionTextureEnabled){let F=1;if(this._refractionTexture.isCube||(G.mb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(F=this._refractionTexture.depth)),G.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,F,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const F=this._refractionTexture;G.updateVector3("vRefractionPosition",F.boundingBoxPosition),G.updateVector3("vRefractionSize",F.boundingBoxSize)}}}this.pointsCloud&&G.updateFloat("pointSize",this.pointSize),G.updateColor4("vSpecularColor",this.specularColor,this.specularPower),G.updateColor3("vEmissiveColor",D.EmissiveTextureEnabled?this.emissiveColor:W.GQ.BlackReadOnly),G.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),C.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),G.updateColor3("vAmbientColor",this._globalAmbientColor)}C.texturesEnabled&&(this._diffuseTexture&&D.DiffuseTextureEnabled&&t.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&D.AmbientTextureEnabled&&t.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&D.OpacityTextureEnabled&&t.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&D.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?t.setTexture("reflectionCubeSampler",this._reflectionTexture):t.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&D.EmissiveTextureEnabled&&t.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&D.LightmapTextureEnabled&&t.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&D.SpecularTextureEnabled&&t.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&t.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&D.RefractionTextureEnabled&&(this._refractionTexture.isCube?t.setTexture("refractionCubeSampler",this._refractionTexture):t.setTexture("refraction2DSampler",this._refractionTexture))),this.RF().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(b)&&this.RF().depthPeelingRenderer.bind(t),this._eventInfo.subMesh=Q,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,i.e)(t,this,C),this.bindEyePosition(t)}else C.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(q||!this.isFrozen){var K;if(C.lightsEnabled&&!this._disableLighting&&(0,f.j)(C,b,t,z,this._maxSimultaneousLights),(C.fogEnabled&&b.applyFog&&C.fogMode!==g.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||b.receiveShadows||z.PREPASS)&&this.bindView(t),(0,f.h)(C,b,t),z.NUM_MORPH_INFLUENCERS&&(0,f.l)(b,t),z.BAKED_VERTEX_ANIMATION_TEXTURE)null===(K=b.bakedVertexAnimationManager)||void 0===K||K.bind(t,z.INSTANCES);this.useLogarithmicDepth&&(0,f.k)(z,t,C),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(b,this._activeEffect,Q),G.update()}getAnimatables(){const F=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&F.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&F.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&F.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&F.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&F.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&F.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&F.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&F.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&F.push(this._refractionTexture),F}getActiveTextures(){const F=super.getActiveTextures();return this._diffuseTexture&&F.push(this._diffuseTexture),this._ambientTexture&&F.push(this._ambientTexture),this._opacityTexture&&F.push(this._opacityTexture),this._reflectionTexture&&F.push(this._reflectionTexture),this._emissiveTexture&&F.push(this._emissiveTexture),this._specularTexture&&F.push(this._specularTexture),this._bumpTexture&&F.push(this._bumpTexture),this._lightmapTexture&&F.push(this._lightmapTexture),this._refractionTexture&&F.push(this._refractionTexture),F}hasTexture(F){return!!super.hasTexture(F)||(this._diffuseTexture===F||(this._ambientTexture===F||(this._opacityTexture===F||(this._reflectionTexture===F||(this._emissiveTexture===F||(this._specularTexture===F||(this._bumpTexture===F||(this._lightmapTexture===F||this._refractionTexture===F))))))))}dispose(F,b){var Q,C,z,t,g,W,Z,q,G;b&&(null===(Q=this._diffuseTexture)||void 0===Q||Q.dispose(),null===(C=this._ambientTexture)||void 0===C||C.dispose(),null===(z=this._opacityTexture)||void 0===z||z.dispose(),null===(t=this._reflectionTexture)||void 0===t||t.dispose(),null===(g=this._emissiveTexture)||void 0===g||g.dispose(),null===(W=this._specularTexture)||void 0===W||W.dispose(),null===(Z=this._bumpTexture)||void 0===Z||Z.dispose(),null===(q=this._lightmapTexture)||void 0===q||q.dispose(),null===(G=this._refractionTexture)||void 0===G||G.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(F,b)}clone(F){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const C=k.e.Clone((()=>new D(F,this.RF())),this,{cloneTexturesOnlyOnce:b});return C.name=F,C.id=F,this.stencil.copyTo(C.stencil),this._clonePlugins(C,Q),C}static Parse(F,b,Q){const C=k.e.Parse((()=>new D(F.name,b)),F,b,Q);return F.stencil&&C.stencil.parse(F.stencil,b,Q),K.c._ParsePlugins(F,C,b,Q),C}static get DiffuseTextureEnabled(){return c.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(F){c.e.DiffuseTextureEnabled=F}static get DetailTextureEnabled(){return c.e.DetailTextureEnabled}static set DetailTextureEnabled(F){c.e.DetailTextureEnabled=F}static get AmbientTextureEnabled(){return c.e.AmbientTextureEnabled}static set AmbientTextureEnabled(F){c.e.AmbientTextureEnabled=F}static get OpacityTextureEnabled(){return c.e.OpacityTextureEnabled}static set OpacityTextureEnabled(F){c.e.OpacityTextureEnabled=F}static get ReflectionTextureEnabled(){return c.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(F){c.e.ReflectionTextureEnabled=F}static get EmissiveTextureEnabled(){return c.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(F){c.e.EmissiveTextureEnabled=F}static get SpecularTextureEnabled(){return c.e.SpecularTextureEnabled}static set SpecularTextureEnabled(F){c.e.SpecularTextureEnabled=F}static get BumpTextureEnabled(){return c.e.BumpTextureEnabled}static set BumpTextureEnabled(F){c.e.BumpTextureEnabled=F}static get LightmapTextureEnabled(){return c.e.LightmapTextureEnabled}static set LightmapTextureEnabled(F){c.e.LightmapTextureEnabled=F}static get RefractionTextureEnabled(){return c.e.RefractionTextureEnabled}static set RefractionTextureEnabled(F){c.e.RefractionTextureEnabled=F}static get ColorGradingTextureEnabled(){return c.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(F){c.e.ColorGradingTextureEnabled=F}static get FresnelEnabled(){return c.e.FresnelEnabled}static set FresnelEnabled(F){c.e.FresnelEnabled=F}}D.ForceGLSL=!1,(0,C.b)([(0,z.w)("diffuseTexture")],D.prototype,"_diffuseTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"diffuseTexture",void 0),(0,C.b)([(0,z.w)("ambientTexture")],D.prototype,"_ambientTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"ambientTexture",void 0),(0,C.b)([(0,z.w)("opacityTexture")],D.prototype,"_opacityTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"opacityTexture",void 0),(0,C.b)([(0,z.w)("reflectionTexture")],D.prototype,"_reflectionTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"reflectionTexture",void 0),(0,C.b)([(0,z.w)("emissiveTexture")],D.prototype,"_emissiveTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"emissiveTexture",void 0),(0,C.b)([(0,z.w)("specularTexture")],D.prototype,"_specularTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"specularTexture",void 0),(0,C.b)([(0,z.w)("bumpTexture")],D.prototype,"_bumpTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"bumpTexture",void 0),(0,C.b)([(0,z.w)("lightmapTexture")],D.prototype,"_lightmapTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"lightmapTexture",void 0),(0,C.b)([(0,z.w)("refractionTexture")],D.prototype,"_refractionTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"refractionTexture",void 0),(0,C.b)([(0,z.i)("ambient")],D.prototype,"ambientColor",void 0),(0,C.b)([(0,z.i)("diffuse")],D.prototype,"diffuseColor",void 0),(0,C.b)([(0,z.i)("specular")],D.prototype,"specularColor",void 0),(0,C.b)([(0,z.i)("emissive")],D.prototype,"emissiveColor",void 0),(0,C.b)([(0,z.A)()],D.prototype,"specularPower",void 0),(0,C.b)([(0,z.A)("useAlphaFromDiffuseTexture")],D.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,z.A)("useEmissiveAsIllumination")],D.prototype,"_useEmissiveAsIllumination",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useEmissiveAsIllumination",void 0),(0,C.b)([(0,z.A)("linkEmissiveWithDiffuse")],D.prototype,"_linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,z.A)("useSpecularOverAlpha")],D.prototype,"_useSpecularOverAlpha",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useSpecularOverAlpha",void 0),(0,C.b)([(0,z.A)("useReflectionOverAlpha")],D.prototype,"_useReflectionOverAlpha",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useReflectionOverAlpha",void 0),(0,C.b)([(0,z.A)("disableLighting")],D.prototype,"_disableLighting",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsLightsDirty")],D.prototype,"disableLighting",void 0),(0,C.b)([(0,z.A)("useObjectSpaceNormalMap")],D.prototype,"_useObjectSpaceNormalMap",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useObjectSpaceNormalMap",void 0),(0,C.b)([(0,z.A)("useParallax")],D.prototype,"_useParallax",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallax",void 0),(0,C.b)([(0,z.A)("useParallaxOcclusion")],D.prototype,"_useParallaxOcclusion",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallaxOcclusion",void 0),(0,C.b)([(0,z.A)()],D.prototype,"parallaxScaleBias",void 0),(0,C.b)([(0,z.A)("roughness")],D.prototype,"_roughness",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"roughness",void 0),(0,C.b)([(0,z.A)()],D.prototype,"indexOfRefraction",void 0),(0,C.b)([(0,z.A)()],D.prototype,"invertRefractionY",void 0),(0,C.b)([(0,z.A)()],D.prototype,"alphaCutOff",void 0),(0,C.b)([(0,z.A)("useLightmapAsShadowmap")],D.prototype,"_useLightmapAsShadowmap",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useLightmapAsShadowmap",void 0),(0,C.b)([(0,z.m)("diffuseFresnelParameters")],D.prototype,"_diffuseFresnelParameters",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"diffuseFresnelParameters",void 0),(0,C.b)([(0,z.m)("opacityFresnelParameters")],D.prototype,"_opacityFresnelParameters",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],D.prototype,"opacityFresnelParameters",void 0),(0,C.b)([(0,z.m)("reflectionFresnelParameters")],D.prototype,"_reflectionFresnelParameters",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"reflectionFresnelParameters",void 0),(0,C.b)([(0,z.m)("refractionFresnelParameters")],D.prototype,"_refractionFresnelParameters",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"refractionFresnelParameters",void 0),(0,C.b)([(0,z.m)("emissiveFresnelParameters")],D.prototype,"_emissiveFresnelParameters",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"emissiveFresnelParameters",void 0),(0,C.b)([(0,z.A)("useReflectionFresnelFromSpecular")],D.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,z.A)("useGlossinessFromSpecularMapAlpha")],D.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,z.A)("maxSimultaneousLights")],D.prototype,"_maxSimultaneousLights",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsLightsDirty")],D.prototype,"maxSimultaneousLights",void 0),(0,C.b)([(0,z.A)("invertNormalMapX")],D.prototype,"_invertNormalMapX",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapX",void 0),(0,C.b)([(0,z.A)("invertNormalMapY")],D.prototype,"_invertNormalMapY",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapY",void 0),(0,C.b)([(0,z.A)("twoSidedLighting")],D.prototype,"_twoSidedLighting",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"twoSidedLighting",void 0),(0,C.b)([(0,z.A)("applyDecalMapAfterDetailMap")],D.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,C.b)([(0,z.b)("_markAllSubMeshesAsMiscDirty")],D.prototype,"applyDecalMapAfterDetailMap",void 0),(0,E.g)("BABYLON.StandardMaterial",D),g.c.DefaultMaterialFactory=F=>new D("default material",F)}}]);