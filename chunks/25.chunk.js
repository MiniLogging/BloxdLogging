"use strict";(self["9s4i8ue3jq"]=self["9s4i8ue3jq"]||[]).push([[25],{13187:(a,c,o)=>{o.d(c,{b:()=>j});var s=o(12798),q=o(13127),t=o(12800),i=o(13179),p=o(13173),G=o(13193),T=o(13155);class C extends p.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class j extends G.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(a){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(a,"DetailMap",140,new C,c),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=q.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=a._dirtyCallbacks[1]}isReadyForSubMesh(a,c,o){return!this._isEnabled||!(a._areTexturesDirty&&c.texturesEnabled&&o.getCaps().standardDerivatives&&this._texture&&i.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(a,c){if(this._isEnabled){a.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const o=c.getEngine();a._areTexturesDirty&&(o.getCaps().standardDerivatives&&this._texture&&i.b.DetailTextureEnabled&&this._isEnabled?((0,T.Y)(this._texture,a,"DETAIL"),a.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):a.DETAIL=!1)}else a.DETAIL=!1}bindForSubMesh(a,c){if(!this._isEnabled)return;const o=this._material.isFrozen;a.useUbo&&o&&a.isSync||this._texture&&i.b.DetailTextureEnabled&&(a.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,T.y)(this._texture,a,"detail")),c.texturesEnabled&&this._texture&&i.b.DetailTextureEnabled&&a.setTexture("detailSampler",this._texture)}hasTexture(a){return this._texture===a}getActiveTextures(a){this._texture&&a.push(this._texture)}getAnimatables(a){this._texture&&this._texture.animations&&this._texture.animations.length>0&&a.push(this._texture)}dispose(a){var c;a&&(null===(c=this._texture)||void 0===c||c.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(a){a.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,s.d)([(0,t.v)("detailTexture"),(0,t.d)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"texture",void 0),(0,s.d)([(0,t.E)()],j.prototype,"diffuseBlendLevel",void 0),(0,s.d)([(0,t.E)()],j.prototype,"roughnessBlendLevel",void 0),(0,s.d)([(0,t.E)()],j.prototype,"bumpLevel",void 0),(0,s.d)([(0,t.E)(),(0,t.d)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"normalBlendMethod",void 0),(0,s.d)([(0,t.E)(),(0,t.d)("_markAllSubMeshesAsTexturesDirty")],j.prototype,"isEnabled",void 0)},13173:(a,c,o)=>{o.d(c,{b:()=>s});class s{constructor(a){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=a,a)for(const c in a)Object.prototype.hasOwnProperty.call(a,c)&&this._setDefaultValue(c)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||a,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const a of Object.keys(this))"_"!==a[0]&&this._keys.push(a);if(this._externalProperties)for(const a in this._externalProperties)-1===this._keys.indexOf(a)&&this._keys.push(a)}isEqual(a){if(this._keys.length!==a._keys.length)return!1;for(let c=0;c<this._keys.length;c++){const o=this._keys[c];if(this[o]!==a[o])return!1}return!0}cloneTo(a){this._keys.length!==a._keys.length&&(a._keys=this._keys.slice(0));for(let c=0;c<this._keys.length;c++){const o=this._keys[c];a[o]=this[o]}}reset(){for(const a of this._keys)this._setDefaultValue(a)}_setDefaultValue(a){var c,o,s,q;const t=(null===(c=this._externalProperties)||void 0===c||null===(o=c[a])||void 0===o?void 0:o.type)??typeof this[a],i=null===(s=this._externalProperties)||void 0===s||null===(q=s[a])||void 0===q?void 0:q.default;switch(t){case"number":this[a]=i??0;break;case"string":this[a]=i??"";break;default:this[a]=i??!1}}toString(){let a="";for(let c=0;c<this._keys.length;c++){const o=this._keys[c],s=this[o];switch(typeof s){case"number":case"string":a+="#define "+o+" "+s+"\n";break;default:s&&(a+="#define "+o+"\n")}}return a}}},13179:(a,c,o)=>{o.d(c,{b:()=>q});var s=o(12721);class q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(a){this._DiffuseTextureEnabled!==a&&(this._DiffuseTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(a){this._BaseWeightTextureEnabled!==a&&(this._BaseWeightTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(a){this._BaseDiffuseRoughnessTextureEnabled!==a&&(this._BaseDiffuseRoughnessTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(a){this._DetailTextureEnabled!==a&&(this._DetailTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(a){this._DecalMapEnabled!==a&&(this._DecalMapEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(a){this._AmbientTextureEnabled!==a&&(this._AmbientTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(a){this._OpacityTextureEnabled!==a&&(this._OpacityTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(a){this._ReflectionTextureEnabled!==a&&(this._ReflectionTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(a){this._EmissiveTextureEnabled!==a&&(this._EmissiveTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(a){this._SpecularTextureEnabled!==a&&(this._SpecularTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(a){this._BumpTextureEnabled!==a&&(this._BumpTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(a){this._LightmapTextureEnabled!==a&&(this._LightmapTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(a){this._RefractionTextureEnabled!==a&&(this._RefractionTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(a){this._ColorGradingTextureEnabled!==a&&(this._ColorGradingTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(a){this._FresnelEnabled!==a&&(this._FresnelEnabled=a,s.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(a){this._ClearCoatTextureEnabled!==a&&(this._ClearCoatTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(a){this._ClearCoatBumpTextureEnabled!==a&&(this._ClearCoatBumpTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(a){this._ClearCoatTintTextureEnabled!==a&&(this._ClearCoatTintTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(a){this._SheenTextureEnabled!==a&&(this._SheenTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(a){this._AnisotropicTextureEnabled!==a&&(this._AnisotropicTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(a){this._ThicknessTextureEnabled!==a&&(this._ThicknessTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(a){this._RefractionIntensityTextureEnabled!==a&&(this._RefractionIntensityTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(a){this._TranslucencyIntensityTextureEnabled!==a&&(this._TranslucencyIntensityTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(a){this._TranslucencyColorTextureEnabled!==a&&(this._TranslucencyColorTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(a){this._IridescenceTextureEnabled!==a&&(this._IridescenceTextureEnabled=a,s.b.MarkAllMaterialsAsDirty(1))}}q._DiffuseTextureEnabled=!0,q._BaseWeightTextureEnabled=!0,q._BaseDiffuseRoughnessTextureEnabled=!0,q._DetailTextureEnabled=!0,q._DecalMapEnabled=!0,q._AmbientTextureEnabled=!0,q._OpacityTextureEnabled=!0,q._ReflectionTextureEnabled=!0,q._EmissiveTextureEnabled=!0,q._SpecularTextureEnabled=!0,q._BumpTextureEnabled=!0,q._LightmapTextureEnabled=!0,q._RefractionTextureEnabled=!0,q._ColorGradingTextureEnabled=!0,q._FresnelEnabled=!0,q._ClearCoatTextureEnabled=!0,q._ClearCoatBumpTextureEnabled=!0,q._ClearCoatTintTextureEnabled=!0,q._SheenTextureEnabled=!0,q._AnisotropicTextureEnabled=!0,q._ThicknessTextureEnabled=!0,q._RefractionIntensityTextureEnabled=!0,q._TranslucencyIntensityTextureEnabled=!0,q._TranslucencyColorTextureEnabled=!0,q._IridescenceTextureEnabled=!0},13202:(a,c,o)=>{o.d(c,{e:()=>t});var s,q=o(12810);!function(a){a[a.Zero=0]="Zero",a[a.One=1]="One",a[a.MaxViewZ=2]="MaxViewZ"}(s||(s={}));class t{static CreateConfiguration(a){return t._Configurations[a]={defines:{},previousWorldMatrices:{},previousViewProjection:q.Matrix.Zero(),currentViewProjection:q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},t._Configurations[a]}static DeleteConfiguration(a){delete t._Configurations[a]}static GetConfiguration(a){return t._Configurations[a]}static AddUniformsAndSamplers(a,c){a.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(a,c){for(const o of c)if(o.wc)for(const c of o.wc)c._removeDrawWrapper(a)}static PrepareDefines(a,c,o){if(!o._arePrePassDirty)return;const s=t._Configurations[a];if(!s)return;o.PREPASS=!0,o.PREPASS_COLOR=!1,o.PREPASS_COLOR_INDEX=-1;let q=0;for(let i=0;i<t.GeometryTextureDescriptions.length;i++){const a=t.GeometryTextureDescriptions[i],c=a.define,p=a.defineIndex,G=s.defines[p];void 0!==G?(o[c]=!0,o[p]=G,q++):(o[c]=!1,delete o[p])}o.SCENE_MRT_COUNT=q,o.BONES_VELOCITY_ENABLED=c.useBones&&c.computeBonesUsingShaders&&c.skeleton&&!c.skeleton.isUsingTextureForMatrices&&-1===s.excludedSkinnedMesh.indexOf(c)}static Bind(a,c,o,s,q){const i=t._Configurations[a];if(!i)return;const p=o.Za(),G=p.getEngine();if(i.reverseCulling&&G.setStateCullFaceType(p._mirroredCameraPosition?q.cullBackFaces:!q.cullBackFaces),(void 0!==i.defines.PREPASS_VELOCITY_INDEX||void 0!==i.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(i.previousWorldMatrices[o.uniqueId]||(i.previousWorldMatrices[o.uniqueId]=s.clone()),i.previousViewProjection||(i.previousViewProjection=p.getTransformMatrix().clone(),i.currentViewProjection=p.getTransformMatrix().clone()),i.currentViewProjection.updateFlag!==p.getTransformMatrix().updateFlag?(i.lastUpdateFrameId=G.frameId,i.previousViewProjection.G(i.currentViewProjection),i.currentViewProjection.G(p.getTransformMatrix())):i.lastUpdateFrameId!==G.frameId&&(i.lastUpdateFrameId=G.frameId,i.previousViewProjection.G(i.currentViewProjection)),c.setMatrix("previousWorld",i.previousWorldMatrices[o.uniqueId]),c.setMatrix("previousViewProjection",i.previousViewProjection),i.previousWorldMatrices[o.uniqueId]=s.clone(),o.useBones&&o.computeBonesUsingShaders&&o.skeleton)){const a=o.skeleton;if(!a.isUsingTextureForMatrices||-1===c.getUniformIndex("boneTextureWidth")){const s=a.getTransformMatrices(o);s&&(i.previousBones[o.uniqueId]||(i.previousBones[o.uniqueId]=s.slice()),c.setMatrices("mPreviousBones",i.previousBones[o.uniqueId]),i.previousBones[o.uniqueId].set(s))}}}}t.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],t._Configurations={}},13193:(a,c,o)=>{o.d(c,{b:()=>y});var s=o(12798),q=o(12800),t=o(13127),i=o(12680),p=o(12704),G=o(12732);const T=new RegExp("^([gimus]+)!");class C{constructor(a){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=a,this._scene=a.Za(),this._engine=this._scene.getEngine()}_addPlugin(a){for(let s=0;s<this._plugins.length;++s)if(this._plugins[s].name===a.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!a.isCompatible(this._material.shaderLanguage))throw`The plugin "${a.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const c=a.getClassName();C._MaterialPluginClassToMainDefine[c]||(C._MaterialPluginClassToMainDefine[c]="MATERIALPLUGIN_"+ ++C._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(a,c)=>this._handlePluginEvent(a,c),this._plugins.push(a),this._plugins.sort(((a,c)=>a.priority-c.priority)),this._codeInjectionPoints={};const o={};o[C._MaterialPluginClassToMainDefine[c]]={type:"boolean",default:!0};for(const s of this._plugins)s.collectDefines(o),this._collectPointNames("vertex",s.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",s.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=o,!0}_activatePlugin(a){-1===this._activePlugins.indexOf(a)&&(this._activePlugins.push(a),this._activePlugins.sort(((a,c)=>a.priority-c.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),a.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(a),this._activePluginsForExtraEvents.sort(((a,c)=>a.priority-c.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(a){for(let c=0;c<this._plugins.length;++c)if(this._plugins[c].name===a)return this._plugins[c];return null}_handlePluginEventIsReadyForSubMesh(a){let c=!0;for(const o of this._activePlugins)c=c&&o.isReadyForSubMesh(a.defines,this._scene,this._engine,a.subMesh);a.isReadyForSubMesh=c}_handlePluginEventPrepareDefinesBeforeAttributes(a){for(const c of this._activePlugins)c.prepareDefinesBeforeAttributes(a.defines,this._scene,a.mesh)}_handlePluginEventPrepareDefines(a){for(const c of this._activePlugins)c.prepareDefines(a.defines,this._scene,a.mesh)}_handlePluginEventHardBindForSubMesh(a){for(const c of this._activePluginsForExtraEvents)c.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,a.subMesh)}_handlePluginEventBindForSubMesh(a){for(const c of this._activePlugins)c.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,a.subMesh)}_handlePluginEventHasRenderTargetTextures(a){let c=!1;for(const o of this._activePluginsForExtraEvents)if(c=o.hasRenderTargetTextures(),c)break;a.hasRenderTargetTextures=c}_handlePluginEventFillRenderTargetTextures(a){for(const c of this._activePluginsForExtraEvents)c.fillRenderTargetTextures(a.renderTargets)}_handlePluginEvent(a,c){switch(a){case 512:{const a=c;for(const c of this._activePlugins)c.getActiveTextures(a.activeTextures);break}case 256:{const a=c;for(const c of this._activePlugins)c.getAnimatables(a.animatables);break}case 1024:{const a=c;let o=!1;for(const c of this._activePlugins)if(o=c.hasTexture(a.texture),o)break;a.hasTexture=o;break}case 2:{const a=c;for(const c of this._plugins)c.dispose(a.forceDisposeTextures);break}case 4:c.defineNames=this._defineNamesFromPlugins;break;case 128:{const a=c;for(const c of this._activePlugins)a.fallbackRank=c.addFallbacks(a.defines,a.fallbacks,a.fallbackRank),c.getAttributes(a.attributes,this._scene,a.mesh);this._uniformList.length>0&&a.uniforms.push(...this._uniformList),this._samplerList.length>0&&a.samplers.push(...this._samplerList),this._uboList.length>0&&a.uniformBuffersNames.push(...this._uboList),a.customCode=this._injectCustomCode(a,a.customCode);break}case 8:{const a=c;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const o=1===this._material.shaderLanguage;for(const c of this._plugins){const s=c.getUniforms(this._material.shaderLanguage);if(s){if(s.ubo)for(const c of s.ubo){if(c.size&&c.type){const s=c.arraySize??0;if(a.ubo.addUniform(c.name,c.size,s),o){let a;switch(c.type){case"mat4":a="mat4x4f";break;case"float":a="f32";break;default:a=`${c.type}f`}this._uboDeclaration+=s>0?`uniform ${c.name}: array<${a}, ${s}>;\n`:`uniform ${c.name}: ${a};\n`}else this._uboDeclaration+=`${c.type} ${c.name}${s>0?`[${s}]`:""};\n`}this._uniformList.push(c.name)}s.vertex&&(this._vertexDeclaration+=s.vertex+"\n"),s.fragment&&(this._fragmentDeclaration+=s.fragment+"\n")}c.getSamplers(this._samplerList),c.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(a,c){if(c)for(const o in c)this._codeInjectionPoints[a]||(this._codeInjectionPoints[a]={}),this._codeInjectionPoints[a][o]=!0}_injectCustomCode(a,c){return(o,s)=>{var q;c&&(s=c(o,s)),this._uboDeclaration&&(s=s.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(s=s.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(s=s.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const t=null===(q=this._codeInjectionPoints)||void 0===q?void 0:q[o];if(!t)return s;let i=null;for(let c in t){let q="";for(const s of this._activePlugins){var C;let t=null===(C=s.getCustomCode(o,this._material.shaderLanguage))||void 0===C?void 0:C[c];if(t){if(s.resolveIncludes){if(null===i){const c=0;i={defines:[],indexParameters:a.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:G.c.GetShadersRepository(c),includesShadersStore:G.c.GetIncludesShadersStore(c),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,o:this._engine.o,processCodeAfterIncludes:void 0}}i.isFragment="fragment"===o,(0,p.l)(t,i,(a=>t=a))}q+=t+"\n"}}if(q.length>0)if("!"===c.charAt(0)){c=c.substring(1);let a="g";if("!"===c.charAt(0))a="",c=c.substring(1);else{const o=T.exec(c);o&&o.length>=2&&(a=o[1],c=c.substring(a.length+1))}a.indexOf("g")<0&&(a+="g");const o=s,t=new RegExp(c,a);let i=t.exec(o);for(;null!==i;){let a=q;for(let c=0;c<i.length;++c)a=a.replace("$"+c,i[c]);s=s.replace(i[0],a),i=t.exec(o)}}else{const a="#define "+c;s=s.replace(a,"\n"+q+"\n"+a)}}return s}}}C._MaterialPluginClassToMainDefine={},C._MaterialPluginCounter=0,i.b.OnEnginesDisposedObservable.add((()=>{g()}));const j=[];let L=!1,e=null;function g(){j.length=0,L=!1,t.b.OnEventObservable.remove(e),e=null}var M=o(12845),N=o(12776);class y{isCompatible(a){return 0===a}_enable(a){a&&this._pluginManager._activatePlugin(this)}constructor(a,c,o,s){let q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=a,this.name=c,this.priority=o,this.resolveIncludes=i,a.pluginManager||(a.pluginManager=new C(a),a.gc.add((()=>{a.pluginManager=void 0}))),this._pluginDefineNames=s,this._pluginManager=a.pluginManager,q&&this._pluginManager._addPlugin(this),t&&this._enable(!0),this.markAllDefinesAsDirty=a._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(a,c,o,s){return!0}hardBindForSubMesh(a,c,o,s){}bindForSubMesh(a,c,o,s){}dispose(a){}getCustomCode(a){return null}collectDefines(a){if(this._pluginDefineNames)for(const c of Object.keys(this._pluginDefineNames)){if("_"===c[0])continue;const o=typeof this._pluginDefineNames[c];a[c]={type:"number"===o?"number":"string"===o?"string":"boolean"===o?"boolean":"object",default:this._pluginDefineNames[c]}}}prepareDefinesBeforeAttributes(a,c,o){}prepareDefines(a,c,o){}hasTexture(a){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(a){}getActiveTextures(a){}getAnimatables(a){}addFallbacks(a,c,o){return o}getSamplers(a){}getAttributes(a,c,o){}getUniformBuffersNames(a){}getUniforms(){return{}}copyTo(a){M.d.Clone((()=>a),this)}serialize(){return M.d.Serialize(this)}parse(a,c,o){M.d.Parse((()=>this),a,c,o)}}(0,s.d)([(0,q.E)()],y.prototype,"name",void 0),(0,s.d)([(0,q.E)()],y.prototype,"priority",void 0),(0,s.d)([(0,q.E)()],y.prototype,"resolveIncludes",void 0),(0,s.d)([(0,q.E)()],y.prototype,"registerForExtraEvents",void 0),(0,N.d)("BABYLON.MaterialPluginBase",y)},13170:(a,c,o)=>{o.d(c,{c:()=>s});class s{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(a){a.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(a){}bindForSubMesh(a,c,o,s,q){if(c.prePassRenderer&&c.prePassRenderer.enabled&&c.prePassRenderer.currentRTisSceneRT&&(-1!==c.prePassRenderer.getIndex(2)||-1!==c.prePassRenderer.getIndex(11))){this.previousWorldMatrices[o.uniqueId]||(this.previousWorldMatrices[o.uniqueId]=s.clone()),this.previousViewProjection||(this.previousViewProjection=c.getTransformMatrix().clone(),this.currentViewProjection=c.getTransformMatrix().clone());const q=c.getEngine();this.currentViewProjection.updateFlag!==c.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.G(this.currentViewProjection),this.currentViewProjection.G(c.getTransformMatrix())):this._lastUpdateFrameId!==q.frameId&&(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.G(this.currentViewProjection)),a.setMatrix("previousWorld",this.previousWorldMatrices[o.uniqueId]),a.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[o.uniqueId]=s.clone()}}}},13166:(a,c,o)=>{o.d(c,{co:()=>U});var s=o(12798),q=o(12800),t=o(12901),i=o(13045),p=o(12858),G=o(12882),T=o(13170),C=o(13050),j=o(13127),L=o(13173),e=o(13123),g=o(12796),M=o(12776),N=o(13179),y=o(13118),k=o(13187),n=o(13164),f=o(13155),J=o(12845),w=o(13202);const Z={effect:null,subMesh:null};class h extends L.b{constructor(a){super(a),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(a){const c=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const o of c)this[o]=o===a}}class U extends e.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(a){this._attachImageProcessingConfiguration(a),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(a){a!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=a||this.Za().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(a){this.imageProcessingConfiguration.colorCurvesEnabled=a}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(a){this.imageProcessingConfiguration.colorGradingEnabled=a}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(a){this._imageProcessingConfiguration.toneMappingEnabled=a}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(a){this._imageProcessingConfiguration.exposure=a}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(a){this._imageProcessingConfiguration.contrast=a}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(a){this._imageProcessingConfiguration.colorGradingTexture=a}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(a){this._imageProcessingConfiguration.colorCurves=a}get canRenderToMRT(){return!0}constructor(a,c){super(a,c,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||U.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new p.oo(0,0,0),this.diffuseColor=new p.oo(1,1,1),this.specularColor=new p.oo(1,1,1),this.emissiveColor=new p.oo(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new t.d(16),this._globalAmbientColor=new p.oo(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new k.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new T.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),U.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),U.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(U.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(U.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"co"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===j.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Uc&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==j.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Uc||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(a,c){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const q=c._drawWrapper;if(q.effect&&this.isFrozen&&q._wasPreviouslyReady&&q._wasPreviouslyUsingInstances===s)return!0;c.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),c.materialDefines=new h(this._eventInfo.defineNames));const t=this.Za(),i=c.materialDefines;if(this._isReadyForSubMesh(c))return!0;const p=t.getEngine();i._needNormals=(0,f.U)(t,a,i,!0,this._maxSimultaneousLights,this._disableLighting),(0,f.bb)(t,i);const j=this.needAlphaBlendingForMesh(a)&&this.Za().useOrderIndependentTransparency;if((0,f.gb)(t,i,this.canRenderToMRT&&!j),(0,f.eb)(t,i,j),w.e.PrepareDefines(p.currentRenderPassId,a,i),i._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,i._needUVs=!1;for(let a=1;a<=6;++a)i["MAINUV"+a]=!1;if(t.texturesEnabled){if(i.DIFFUSEDIRECTUV=0,i.BUMPDIRECTUV=0,i.AMBIENTDIRECTUV=0,i.OPACITYDIRECTUV=0,i.EMISSIVEDIRECTUV=0,i.SPECULARDIRECTUV=0,i.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&U.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._diffuseTexture,i,"DIFFUSE")}else i.DIFFUSE=!1;if(this._ambientTexture&&U.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._ambientTexture,i,"AMBIENT")}else i.AMBIENT=!1;if(this._opacityTexture&&U.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._opacityTexture,i,"OPACITY"),i.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else i.OPACITY=!1;if(this._reflectionTexture&&U.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(i._needNormals=!0,i.REFLECTION=!0,i.ROUGHNESS=this._roughness>0,i.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,i.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===g.e.INVCUBIC_MODE,i.REFLECTIONMAP_3D=this._reflectionTexture.isCube,i.REFLECTIONMAP_OPPOSITEZ=i.REFLECTIONMAP_3D&&this.Za().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,i.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case g.e.EXPLICIT_MODE:i.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case g.e.PLANAR_MODE:i.setReflectionMode("REFLECTIONMAP_PLANAR");break;case g.e.PROJECTION_MODE:i.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case g.e.SKYBOX_MODE:i.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case g.e.SPHERICAL_MODE:i.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case g.e.EQUIRECTANGULAR_MODE:i.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case g.e.FIXED_EQUIRECTANGULAR_MODE:i.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case g.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:i.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case g.e.CUBIC_MODE:case g.e.INVCUBIC_MODE:default:i.setReflectionMode("REFLECTIONMAP_CUBIC")}i.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else i.REFLECTION=!1,i.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&U.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._emissiveTexture,i,"EMISSIVE")}else i.EMISSIVE=!1;if(this._lightmapTexture&&U.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._lightmapTexture,i,"LIGHTMAP"),i.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,i.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else i.LIGHTMAP=!1;if(this._specularTexture&&U.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,f.Y)(this._specularTexture,i,"SPECULAR"),i.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else i.SPECULAR=!1;if(t.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&U.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,f.Y)(this._bumpTexture,i,"BUMP"),i.PARALLAX=this._useParallax,i.PARALLAX_RHS=t.useRightHandedSystem,i.PARALLAXOCCLUSION=this._useParallaxOcclusion,i.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else i.BUMP=!1,i.PARALLAX=!1,i.PARALLAX_RHS=!1,i.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&U.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;i._needUVs=!0,i.REFRACTION=!0,i.REFRACTIONMAP_3D=this._refractionTexture.isCube,i.RGBDREFRACTION=this._refractionTexture.isRGBD,i.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else i.REFRACTION=!1;i.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else i.DIFFUSE=!1,i.AMBIENT=!1,i.OPACITY=!1,i.REFLECTION=!1,i.EMISSIVE=!1,i.LIGHTMAP=!1,i.BUMP=!1,i.REFRACTION=!1;i.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),i.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,i.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,i.SPECULAROVERALPHA=this._useSpecularOverAlpha,i.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,i.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,i.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(a)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=i,this._eventInfo.subMesh=c,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(i._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(i),i.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,i.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(i._areFresnelDirty&&(U.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(i.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,i.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,i.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,i.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,i.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,i.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,i._needNormals=!0,i.FRESNEL=!0):i.FRESNEL=!1),i.AREALIGHTUSED)for(let o=0;o<a.lightSources.length;o++)if(!a.lightSources[o]._isReady())return!1;(0,f.ab)(a,t,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(a),i,this._applyDecalMapAfterDetailMap),(0,f.S)(t,p,this,i,s,null,c.getRenderingMesh().hasThinInstances),this._eventInfo.defines=i,this._eventInfo.mesh=a,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,f.P)(a,i,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let L=!1;if(i.isDirty){const s=i._areLightsDisposed;i.markAsProcessed();const q=new y.e;i.REFLECTION&&q.addFallback(0,"REFLECTION"),i.SPECULAR&&q.addFallback(0,"SPECULAR"),i.BUMP&&q.addFallback(0,"BUMP"),i.PARALLAX&&q.addFallback(1,"PARALLAX"),i.PARALLAX_RHS&&q.addFallback(1,"PARALLAX_RHS"),i.PARALLAXOCCLUSION&&q.addFallback(0,"PARALLAXOCCLUSION"),i.SPECULAROVERALPHA&&q.addFallback(0,"SPECULAROVERALPHA"),i.FOG&&q.addFallback(1,"FOG"),i.POINTSIZE&&q.addFallback(0,"POINTSIZE"),i.LOGARITHMICDEPTH&&q.addFallback(0,"LOGARITHMICDEPTH"),(0,f.C)(i,q,this._maxSimultaneousLights),i.SPECULARTERM&&q.addFallback(0,"SPECULARTERM"),i.DIFFUSEFRESNEL&&q.addFallback(1,"DIFFUSEFRESNEL"),i.OPACITYFRESNEL&&q.addFallback(2,"OPACITYFRESNEL"),i.REFLECTIONFRESNEL&&q.addFallback(3,"REFLECTIONFRESNEL"),i.EMISSIVEFRESNEL&&q.addFallback(4,"EMISSIVEFRESNEL"),i.FRESNEL&&q.addFallback(4,"FRESNEL"),i.MULTIVIEW&&q.addFallback(0,"MULTIVIEW");const j=[G.g.PositionKind];i.NORMAL&&j.push(G.g.NormalKind),i.TANGENT&&j.push(G.g.TangentKind);for(let a=1;a<=6;++a)i["UV"+a]&&j.push(`uv${1===a?"":a}`);i.VERTEXCOLOR&&j.push(G.g.ColorKind),(0,f.F)(j,a,i,q),(0,f.J)(j,i),(0,f.K)(j,a,i),(0,f.E)(j,a,i);let e="default";const g=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],M=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],N=["Material","Scene","Mesh"],k={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:i.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=i,this._eventInfo.uniforms=g,this._eventInfo.attributes=j,this._eventInfo.samplers=M,this._eventInfo.uniformBuffersNames=N,this._eventInfo.customCode=void 0,this._eventInfo.mesh=a,this._eventInfo.indexParameters=k,this._callbackPluginEventGeneric(128,this._eventInfo),w.e.AddUniformsAndSamplers(g,M),T.c.AddUniforms(g),T.c.AddSamplers(M),C.e&&(C.e.PrepareUniforms(g,i),C.e.PrepareSamplers(M,i)),(0,f.kb)({uniformsNames:g,uniformBuffersNames:N,samplers:M,defines:i,maxSimultaneousLights:this._maxSimultaneousLights}),(0,n.e)(g);const J={};this.customShaderNameResolve&&(e=this.customShaderNameResolve(e,g,N,M,i,j,J));const h=i.toString(),U=c.effect;let S=t.getEngine().createEffect(e,{attributes:j,uniformsNames:g,uniformBuffersNames:N,samplers:M,defines:h,fallbacks:q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:k,processFinalCode:J.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:i.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([o.e(41),o.e(64)]).then(o.bind(o,15312)),Promise.all([o.e(39),o.e(65)]).then(o.bind(o,15465))]):await Promise.all([Promise.all([o.e(34),o.e(67)]).then(o.bind(o,15534)),Promise.all([o.e(33),o.e(68)]).then(o.bind(o,15706))]),this._shadersLoaded=!0}},p);if(this._eventInfo.customCode=void 0,S)if(this._onEffectCreatedObservable&&(Z.effect=S,Z.subMesh=c,this._onEffectCreatedObservable.notifyObservers(Z)),this.allowShaderHotSwapping&&U&&!S.isReady()){if(S=U,i.markAsUnprocessed(),L=this.isFrozen,s)return i._areLightsDisposed=!0,!1}else t.resetCachedMaterial(),c.setEffect(S,i,this._materialContext)}return!(!c.effect||!c.effect.isReady())&&(i._renderId=t.getRenderId(),q._wasPreviouslyReady=!L,q._wasPreviouslyUsingInstances=s,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const a=this._uniformBuffer;a.addUniform("diffuseLeftColor",4),a.addUniform("diffuseRightColor",4),a.addUniform("opacityParts",4),a.addUniform("reflectionLeftColor",4),a.addUniform("reflectionRightColor",4),a.addUniform("refractionLeftColor",4),a.addUniform("refractionRightColor",4),a.addUniform("emissiveLeftColor",4),a.addUniform("emissiveRightColor",4),a.addUniform("vDiffuseInfos",2),a.addUniform("vAmbientInfos",2),a.addUniform("vOpacityInfos",2),a.addUniform("vReflectionInfos",2),a.addUniform("vReflectionPosition",3),a.addUniform("vReflectionSize",3),a.addUniform("vEmissiveInfos",2),a.addUniform("vLightmapInfos",2),a.addUniform("vSpecularInfos",2),a.addUniform("vBumpInfos",3),a.addUniform("diffuseMatrix",16),a.addUniform("ambientMatrix",16),a.addUniform("opacityMatrix",16),a.addUniform("reflectionMatrix",16),a.addUniform("emissiveMatrix",16),a.addUniform("lightmapMatrix",16),a.addUniform("specularMatrix",16),a.addUniform("bumpMatrix",16),a.addUniform("vTangentSpaceParams",2),a.addUniform("pointSize",1),a.addUniform("alphaCutOff",1),a.addUniform("refractionMatrix",16),a.addUniform("vRefractionInfos",4),a.addUniform("vRefractionPosition",3),a.addUniform("vRefractionSize",3),a.addUniform("vSpecularColor",4),a.addUniform("vEmissiveColor",3),a.addUniform("vDiffuseColor",4),a.addUniform("vAmbientColor",3),a.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(a,c,o){const s=this.Za(),q=o.materialDefines;if(!q)return;const t=o.effect;if(!t)return;this._activeEffect=t,c.getMeshUniformBuffer().bindToEffect(t,"Mesh"),c.transferToEffect(a),this._uniformBuffer.bindToEffect(t,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,s,c,a,this.isFrozen),w.e.Bind(s.getEngine().currentRenderPassId,this._activeEffect,c,a,this);const G=s.activeCamera;G?this._uniformBuffer.updateFloat4("cameraInfo",G.rc,G.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=o,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),q.OBJECTSPACE_NORMALMAP&&(a.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const T=this._mustRebind(s,t,o,c.visibility);(0,f.e)(c,t);const C=this._uniformBuffer;if(T){if(this.bindViewProjection(t),!C.useUbo||!this.isFrozen||!C.isSync||o._drawWrapper._forceRebindOnNextCall){if(U.FresnelEnabled&&q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(C.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),C.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&C.updateColor4("opacityParts",new p.oo(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(C.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),C.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(C.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),C.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(C.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),C.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),s.texturesEnabled){if(this._diffuseTexture&&U.DiffuseTextureEnabled&&(C.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,f.y)(this._diffuseTexture,C,"diffuse")),this._ambientTexture&&U.AmbientTextureEnabled&&(C.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,f.y)(this._ambientTexture,C,"ambient")),this._opacityTexture&&U.OpacityTextureEnabled&&(C.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,f.y)(this._opacityTexture,C,"opacity")),this._hasAlphaChannel()&&C.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&U.ReflectionTextureEnabled){if(C.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),C.xc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const a=this._reflectionTexture;C.updateVector3("vReflectionPosition",a.boundingBoxPosition),C.updateVector3("vReflectionSize",a.boundingBoxSize)}}else C.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&U.EmissiveTextureEnabled&&(C.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,f.y)(this._emissiveTexture,C,"emissive")),this._lightmapTexture&&U.LightmapTextureEnabled&&(C.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,f.y)(this._lightmapTexture,C,"lightmap")),this._specularTexture&&U.SpecularTextureEnabled&&(C.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,f.y)(this._specularTexture,C,"specular")),this._bumpTexture&&s.getEngine().getCaps().standardDerivatives&&U.BumpTextureEnabled&&(C.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,f.y)(this._bumpTexture,C,"bump"),s._mirroredCameraPosition?C.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):C.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&U.RefractionTextureEnabled){let a=1;if(this._refractionTexture.isCube||(C.xc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(a=this._refractionTexture.depth)),C.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,a,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const a=this._refractionTexture;C.updateVector3("vRefractionPosition",a.boundingBoxPosition),C.updateVector3("vRefractionSize",a.boundingBoxSize)}}}this.pointsCloud&&C.updateFloat("pointSize",this.pointSize),C.updateColor4("vSpecularColor",this.specularColor,this.specularPower),C.updateColor3("vEmissiveColor",U.EmissiveTextureEnabled?this.emissiveColor:p.oo.BlackReadOnly),C.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),s.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),C.updateColor3("vAmbientColor",this._globalAmbientColor)}s.texturesEnabled&&(this._diffuseTexture&&U.DiffuseTextureEnabled&&t.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&U.AmbientTextureEnabled&&t.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&U.OpacityTextureEnabled&&t.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&U.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?t.setTexture("reflectionCubeSampler",this._reflectionTexture):t.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&U.EmissiveTextureEnabled&&t.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&U.LightmapTextureEnabled&&t.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&U.SpecularTextureEnabled&&t.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&s.getEngine().getCaps().standardDerivatives&&U.BumpTextureEnabled&&t.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&U.RefractionTextureEnabled&&(this._refractionTexture.isCube?t.setTexture("refractionCubeSampler",this._refractionTexture):t.setTexture("refraction2DSampler",this._refractionTexture))),this.Za().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(c)&&this.Za().depthPeelingRenderer.bind(t),this._eventInfo.subMesh=o,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,n.i)(t,this,s),this.bindEyePosition(t)}else s.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(T||!this.isFrozen){var j;if(s.lightsEnabled&&!this._disableLighting&&(0,f.l)(s,c,t,q,this._maxSimultaneousLights),(s.fogEnabled&&c.applyFog&&s.fogMode!==i.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||c.receiveShadows||q.PREPASS)&&this.bindView(t),(0,f.h)(s,c,t),q.NUM_MORPH_INFLUENCERS&&(0,f.r)(c,t),q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(j=c.bakedVertexAnimationManager)||void 0===j||j.bind(t,q.INSTANCES);this.useLogarithmicDepth&&(0,f.n)(q,t,s),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(c,this._activeEffect,o),C.update()}getAnimatables(){const a=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&a.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&a.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&a.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&a.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&a.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&a.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&a.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&a.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&a.push(this._refractionTexture),a}getActiveTextures(){const a=super.getActiveTextures();return this._diffuseTexture&&a.push(this._diffuseTexture),this._ambientTexture&&a.push(this._ambientTexture),this._opacityTexture&&a.push(this._opacityTexture),this._reflectionTexture&&a.push(this._reflectionTexture),this._emissiveTexture&&a.push(this._emissiveTexture),this._specularTexture&&a.push(this._specularTexture),this._bumpTexture&&a.push(this._bumpTexture),this._lightmapTexture&&a.push(this._lightmapTexture),this._refractionTexture&&a.push(this._refractionTexture),a}hasTexture(a){return!!super.hasTexture(a)||(this._diffuseTexture===a||(this._ambientTexture===a||(this._opacityTexture===a||(this._reflectionTexture===a||(this._emissiveTexture===a||(this._specularTexture===a||(this._bumpTexture===a||(this._lightmapTexture===a||this._refractionTexture===a))))))))}dispose(a,c){var o,s,q,t,i,p,G,T,C;c&&(null===(o=this._diffuseTexture)||void 0===o||o.dispose(),null===(s=this._ambientTexture)||void 0===s||s.dispose(),null===(q=this._opacityTexture)||void 0===q||q.dispose(),null===(t=this._reflectionTexture)||void 0===t||t.dispose(),null===(i=this._emissiveTexture)||void 0===i||i.dispose(),null===(p=this._specularTexture)||void 0===p||p.dispose(),null===(G=this._bumpTexture)||void 0===G||G.dispose(),null===(T=this._lightmapTexture)||void 0===T||T.dispose(),null===(C=this._refractionTexture)||void 0===C||C.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(a,c)}clone(a){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const s=J.d.Clone((()=>new U(a,this.Za())),this,{cloneTexturesOnlyOnce:c});return s.name=a,s.id=a,this.Nc.copyTo(s.Nc),this._clonePlugins(s,o),s}static Parse(a,c,o){const s=J.d.Parse((()=>new U(a.name,c)),a,c,o);return a.Nc&&s.Nc.parse(a.Nc,c,o),j.b._ParsePlugins(a,s,c,o),s}static get DiffuseTextureEnabled(){return N.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(a){N.b.DiffuseTextureEnabled=a}static get DetailTextureEnabled(){return N.b.DetailTextureEnabled}static set DetailTextureEnabled(a){N.b.DetailTextureEnabled=a}static get AmbientTextureEnabled(){return N.b.AmbientTextureEnabled}static set AmbientTextureEnabled(a){N.b.AmbientTextureEnabled=a}static get OpacityTextureEnabled(){return N.b.OpacityTextureEnabled}static set OpacityTextureEnabled(a){N.b.OpacityTextureEnabled=a}static get ReflectionTextureEnabled(){return N.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(a){N.b.ReflectionTextureEnabled=a}static get EmissiveTextureEnabled(){return N.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(a){N.b.EmissiveTextureEnabled=a}static get SpecularTextureEnabled(){return N.b.SpecularTextureEnabled}static set SpecularTextureEnabled(a){N.b.SpecularTextureEnabled=a}static get BumpTextureEnabled(){return N.b.BumpTextureEnabled}static set BumpTextureEnabled(a){N.b.BumpTextureEnabled=a}static get LightmapTextureEnabled(){return N.b.LightmapTextureEnabled}static set LightmapTextureEnabled(a){N.b.LightmapTextureEnabled=a}static get RefractionTextureEnabled(){return N.b.RefractionTextureEnabled}static set RefractionTextureEnabled(a){N.b.RefractionTextureEnabled=a}static get ColorGradingTextureEnabled(){return N.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(a){N.b.ColorGradingTextureEnabled=a}static get FresnelEnabled(){return N.b.FresnelEnabled}static set FresnelEnabled(a){N.b.FresnelEnabled=a}}U.ForceGLSL=!1,(0,s.d)([(0,q.v)("diffuseTexture")],U.prototype,"_diffuseTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],U.prototype,"diffuseTexture",void 0),(0,s.d)([(0,q.v)("ambientTexture")],U.prototype,"_ambientTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"ambientTexture",void 0),(0,s.d)([(0,q.v)("opacityTexture")],U.prototype,"_opacityTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],U.prototype,"opacityTexture",void 0),(0,s.d)([(0,q.v)("reflectionTexture")],U.prototype,"_reflectionTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"reflectionTexture",void 0),(0,s.d)([(0,q.v)("emissiveTexture")],U.prototype,"_emissiveTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"emissiveTexture",void 0),(0,s.d)([(0,q.v)("specularTexture")],U.prototype,"_specularTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"specularTexture",void 0),(0,s.d)([(0,q.v)("bumpTexture")],U.prototype,"_bumpTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"bumpTexture",void 0),(0,s.d)([(0,q.v)("lightmapTexture")],U.prototype,"_lightmapTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"lightmapTexture",void 0),(0,s.d)([(0,q.v)("refractionTexture")],U.prototype,"_refractionTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"refractionTexture",void 0),(0,s.d)([(0,q.j)("ambient")],U.prototype,"ambientColor",void 0),(0,s.d)([(0,q.j)("diffuse")],U.prototype,"diffuseColor",void 0),(0,s.d)([(0,q.j)("specular")],U.prototype,"specularColor",void 0),(0,s.d)([(0,q.j)("emissive")],U.prototype,"emissiveColor",void 0),(0,s.d)([(0,q.E)()],U.prototype,"specularPower",void 0),(0,s.d)([(0,q.E)("useAlphaFromDiffuseTexture")],U.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],U.prototype,"useAlphaFromDiffuseTexture",void 0),(0,s.d)([(0,q.E)("useEmissiveAsIllumination")],U.prototype,"_useEmissiveAsIllumination",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useEmissiveAsIllumination",void 0),(0,s.d)([(0,q.E)("linkEmissiveWithDiffuse")],U.prototype,"_linkEmissiveWithDiffuse",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"linkEmissiveWithDiffuse",void 0),(0,s.d)([(0,q.E)("useSpecularOverAlpha")],U.prototype,"_useSpecularOverAlpha",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useSpecularOverAlpha",void 0),(0,s.d)([(0,q.E)("useReflectionOverAlpha")],U.prototype,"_useReflectionOverAlpha",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useReflectionOverAlpha",void 0),(0,s.d)([(0,q.E)("so")],U.prototype,"_disableLighting",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsLightsDirty")],U.prototype,"so",void 0),(0,s.d)([(0,q.E)("useObjectSpaceNormalMap")],U.prototype,"_useObjectSpaceNormalMap",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useObjectSpaceNormalMap",void 0),(0,s.d)([(0,q.E)("useParallax")],U.prototype,"_useParallax",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useParallax",void 0),(0,s.d)([(0,q.E)("useParallaxOcclusion")],U.prototype,"_useParallaxOcclusion",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useParallaxOcclusion",void 0),(0,s.d)([(0,q.E)()],U.prototype,"parallaxScaleBias",void 0),(0,s.d)([(0,q.E)("roughness")],U.prototype,"_roughness",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"roughness",void 0),(0,s.d)([(0,q.E)()],U.prototype,"indexOfRefraction",void 0),(0,s.d)([(0,q.E)()],U.prototype,"invertRefractionY",void 0),(0,s.d)([(0,q.E)()],U.prototype,"alphaCutOff",void 0),(0,s.d)([(0,q.E)("useLightmapAsShadowmap")],U.prototype,"_useLightmapAsShadowmap",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useLightmapAsShadowmap",void 0),(0,s.d)([(0,q.p)("diffuseFresnelParameters")],U.prototype,"_diffuseFresnelParameters",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],U.prototype,"diffuseFresnelParameters",void 0),(0,s.d)([(0,q.p)("opacityFresnelParameters")],U.prototype,"_opacityFresnelParameters",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],U.prototype,"opacityFresnelParameters",void 0),(0,s.d)([(0,q.p)("reflectionFresnelParameters")],U.prototype,"_reflectionFresnelParameters",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],U.prototype,"reflectionFresnelParameters",void 0),(0,s.d)([(0,q.p)("refractionFresnelParameters")],U.prototype,"_refractionFresnelParameters",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],U.prototype,"refractionFresnelParameters",void 0),(0,s.d)([(0,q.p)("emissiveFresnelParameters")],U.prototype,"_emissiveFresnelParameters",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],U.prototype,"emissiveFresnelParameters",void 0),(0,s.d)([(0,q.E)("useReflectionFresnelFromSpecular")],U.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],U.prototype,"useReflectionFresnelFromSpecular",void 0),(0,s.d)([(0,q.E)("useGlossinessFromSpecularMapAlpha")],U.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,s.d)([(0,q.E)("maxSimultaneousLights")],U.prototype,"_maxSimultaneousLights",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsLightsDirty")],U.prototype,"maxSimultaneousLights",void 0),(0,s.d)([(0,q.E)("invertNormalMapX")],U.prototype,"_invertNormalMapX",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"invertNormalMapX",void 0),(0,s.d)([(0,q.E)("invertNormalMapY")],U.prototype,"_invertNormalMapY",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"invertNormalMapY",void 0),(0,s.d)([(0,q.E)("twoSidedLighting")],U.prototype,"_twoSidedLighting",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],U.prototype,"twoSidedLighting",void 0),(0,s.d)([(0,q.E)("applyDecalMapAfterDetailMap")],U.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,s.d)([(0,q.d)("_markAllSubMeshesAsMiscDirty")],U.prototype,"applyDecalMapAfterDetailMap",void 0),(0,M.d)("BABYLON.StandardMaterial",U),i.e.DefaultMaterialFactory=a=>new U("default material",a)}}]);