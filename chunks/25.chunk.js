"use strict";(self.zy41qorie9=self.zy41qorie9||[]).push([[25],{12826:(Z,l,C)=>{C.d(l,{b:()=>E});var B=C(12428),x=C(12769),b=C(12432),K=C(12823),f=C(12820),W=C(12831),J=C(12800);class d extends f.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class E extends W.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(Z){let l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(Z,"DetailMap",140,new d,l),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=x.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=Z._dirtyCallbacks[1]}isReadyForSubMesh(Z,l,C){return!this._isEnabled||!(Z._areTexturesDirty&&l.texturesEnabled&&C.getCaps().standardDerivatives&&this._texture&&K.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(Z,l){if(this._isEnabled){Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const C=l.getEngine();Z._areTexturesDirty&&(C.getCaps().standardDerivatives&&this._texture&&K.d.DetailTextureEnabled&&this._isEnabled?((0,J.X)(this._texture,Z,"DETAIL"),Z.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):Z.DETAIL=!1)}else Z.DETAIL=!1}bindForSubMesh(Z,l){if(!this._isEnabled)return;const C=this._material.isFrozen;Z.useUbo&&C&&Z.isSync||this._texture&&K.d.DetailTextureEnabled&&(Z.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,J.t)(this._texture,Z,"detail")),l.texturesEnabled&&this._texture&&K.d.DetailTextureEnabled&&Z.setTexture("detailSampler",this._texture)}hasTexture(Z){return this._texture===Z}getActiveTextures(Z){this._texture&&Z.push(this._texture)}getAnimatables(Z){this._texture&&this._texture.animations&&this._texture.animations.length>0&&Z.push(this._texture)}dispose(Z){var l;Z&&(null===(l=this._texture)||void 0===l||l.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(Z){Z.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,B.b)([(0,b.K)("detailTexture"),(0,b.d)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"texture",void 0),(0,B.b)([(0,b.R)()],E.prototype,"diffuseBlendLevel",void 0),(0,B.b)([(0,b.R)()],E.prototype,"roughnessBlendLevel",void 0),(0,B.b)([(0,b.R)()],E.prototype,"bumpLevel",void 0),(0,B.b)([(0,b.R)(),(0,b.d)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"normalBlendMethod",void 0),(0,B.b)([(0,b.R)(),(0,b.d)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"isEnabled",void 0)},12820:(Z,l,C)=>{C.d(l,{c:()=>B});class B{constructor(Z){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=Z,Z)for(const l in Z)Object.prototype.hasOwnProperty.call(Z,l)&&this._setDefaultValue(l)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let Z=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||Z,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const Z of Object.keys(this))"_"!==Z[0]&&this._keys.push(Z);if(this._externalProperties)for(const Z in this._externalProperties)-1===this._keys.indexOf(Z)&&this._keys.push(Z)}isEqual(Z){if(this._keys.length!==Z._keys.length)return!1;for(let l=0;l<this._keys.length;l++){const C=this._keys[l];if(this[C]!==Z[C])return!1}return!0}cloneTo(Z){this._keys.length!==Z._keys.length&&(Z._keys=this._keys.slice(0));for(let l=0;l<this._keys.length;l++){const C=this._keys[l];Z[C]=this[C]}}reset(){for(const Z of this._keys)this._setDefaultValue(Z)}_setDefaultValue(Z){var l,C,B,x;const b=(null===(l=this._externalProperties)||void 0===l||null===(C=l[Z])||void 0===C?void 0:C.type)??typeof this[Z],K=null===(B=this._externalProperties)||void 0===B||null===(x=B[Z])||void 0===x?void 0:x.default;switch(b){case"number":this[Z]=K??0;break;case"string":this[Z]=K??"";break;default:this[Z]=K??!1}}toString(){let Z="";for(let l=0;l<this._keys.length;l++){const C=this._keys[l],B=this[C];switch(typeof B){case"number":case"string":Z+="#define "+C+" "+B+"\n";break;default:B&&(Z+="#define "+C+"\n")}}return Z}}},12823:(Z,l,C)=>{C.d(l,{d:()=>x});var B=C(12346);class x{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){this._DiffuseTextureEnabled!==Z&&(this._DiffuseTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(Z){this._BaseWeightTextureEnabled!==Z&&(this._BaseWeightTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(Z){this._BaseDiffuseRoughnessTextureEnabled!==Z&&(this._BaseDiffuseRoughnessTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(Z){this._DetailTextureEnabled!==Z&&(this._DetailTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(Z){this._DecalMapEnabled!==Z&&(this._DecalMapEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(Z){this._AmbientTextureEnabled!==Z&&(this._AmbientTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(Z){this._OpacityTextureEnabled!==Z&&(this._OpacityTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){this._ReflectionTextureEnabled!==Z&&(this._ReflectionTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){this._EmissiveTextureEnabled!==Z&&(this._EmissiveTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(Z){this._SpecularTextureEnabled!==Z&&(this._SpecularTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(Z){this._BumpTextureEnabled!==Z&&(this._BumpTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(Z){this._LightmapTextureEnabled!==Z&&(this._LightmapTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(Z){this._RefractionTextureEnabled!==Z&&(this._RefractionTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){this._ColorGradingTextureEnabled!==Z&&(this._ColorGradingTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(Z){this._FresnelEnabled!==Z&&(this._FresnelEnabled=Z,B.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(Z){this._ClearCoatTextureEnabled!==Z&&(this._ClearCoatTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(Z){this._ClearCoatBumpTextureEnabled!==Z&&(this._ClearCoatBumpTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(Z){this._ClearCoatTintTextureEnabled!==Z&&(this._ClearCoatTintTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(Z){this._SheenTextureEnabled!==Z&&(this._SheenTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(Z){this._AnisotropicTextureEnabled!==Z&&(this._AnisotropicTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(Z){this._ThicknessTextureEnabled!==Z&&(this._ThicknessTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(Z){this._RefractionIntensityTextureEnabled!==Z&&(this._RefractionIntensityTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(Z){this._TranslucencyIntensityTextureEnabled!==Z&&(this._TranslucencyIntensityTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(Z){this._TranslucencyColorTextureEnabled!==Z&&(this._TranslucencyColorTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(Z){this._IridescenceTextureEnabled!==Z&&(this._IridescenceTextureEnabled=Z,B.d.MarkAllMaterialsAsDirty(1))}}x._DiffuseTextureEnabled=!0,x._BaseWeightTextureEnabled=!0,x._BaseDiffuseRoughnessTextureEnabled=!0,x._DetailTextureEnabled=!0,x._DecalMapEnabled=!0,x._AmbientTextureEnabled=!0,x._OpacityTextureEnabled=!0,x._ReflectionTextureEnabled=!0,x._EmissiveTextureEnabled=!0,x._SpecularTextureEnabled=!0,x._BumpTextureEnabled=!0,x._LightmapTextureEnabled=!0,x._RefractionTextureEnabled=!0,x._ColorGradingTextureEnabled=!0,x._FresnelEnabled=!0,x._ClearCoatTextureEnabled=!0,x._ClearCoatBumpTextureEnabled=!0,x._ClearCoatTintTextureEnabled=!0,x._SheenTextureEnabled=!0,x._AnisotropicTextureEnabled=!0,x._ThicknessTextureEnabled=!0,x._RefractionIntensityTextureEnabled=!0,x._TranslucencyIntensityTextureEnabled=!0,x._TranslucencyColorTextureEnabled=!0,x._IridescenceTextureEnabled=!0},12835:(Z,l,C)=>{C.d(l,{e:()=>b});var B,x=C(12442);!function(Z){Z[Z.Zero=0]="Zero",Z[Z.One=1]="One",Z[Z.MaxViewZ=2]="MaxViewZ"}(B||(B={}));class b{static CreateConfiguration(Z){return b._Configurations[Z]={defines:{},previousWorldMatrices:{},previousViewProjection:x.Matrix.Zero(),currentViewProjection:x.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},b._Configurations[Z]}static DeleteConfiguration(Z){delete b._Configurations[Z]}static GetConfiguration(Z){return b._Configurations[Z]}static AddUniformsAndSamplers(Z,l){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(Z,l){for(const C of l)if(C.zb)for(const l of C.zb)l._removeDrawWrapper(Z)}static PrepareDefines(Z,l,C){if(!C._arePrePassDirty)return;const B=b._Configurations[Z];if(!B)return;C.PREPASS=!0,C.PREPASS_COLOR=!1,C.PREPASS_COLOR_INDEX=-1;let x=0;for(let K=0;K<b.GeometryTextureDescriptions.length;K++){const Z=b.GeometryTextureDescriptions[K],l=Z.define,f=Z.defineIndex,W=B.defines[f];void 0!==W?(C[l]=!0,C[f]=W,x++):(C[l]=!1,delete C[f])}C.SCENE_MRT_COUNT=x,C.BONES_VELOCITY_ENABLED=l.useBones&&l.computeBonesUsingShaders&&l.skeleton&&!l.skeleton.isUsingTextureForMatrices&&-1===B.excludedSkinnedMesh.indexOf(l)}static Bind(Z,l,C,B,x){const K=b._Configurations[Z];if(!K)return;const f=C.cZ(),W=f.getEngine();if(K.reverseCulling&&W.setStateCullFaceType(f._mirroredCameraPosition?x.cullBackFaces:!x.cullBackFaces),(void 0!==K.defines.PREPASS_VELOCITY_INDEX||void 0!==K.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(K.previousWorldMatrices[C.uniqueId]||(K.previousWorldMatrices[C.uniqueId]=B.clone()),K.previousViewProjection||(K.previousViewProjection=f.getTransformMatrix().clone(),K.currentViewProjection=f.getTransformMatrix().clone()),K.currentViewProjection.updateFlag!==f.getTransformMatrix().updateFlag?(K.lastUpdateFrameId=W.frameId,K.previousViewProjection.B(K.currentViewProjection),K.currentViewProjection.B(f.getTransformMatrix())):K.lastUpdateFrameId!==W.frameId&&(K.lastUpdateFrameId=W.frameId,K.previousViewProjection.B(K.currentViewProjection)),l.setMatrix("previousWorld",K.previousWorldMatrices[C.uniqueId]),l.setMatrix("previousViewProjection",K.previousViewProjection),K.previousWorldMatrices[C.uniqueId]=B.clone(),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const Z=C.skeleton;if(!Z.isUsingTextureForMatrices||-1===l.getUniformIndex("boneTextureWidth")){const B=Z.getTransformMatrices(C);B&&(K.previousBones[C.uniqueId]||(K.previousBones[C.uniqueId]=B.slice()),l.setMatrices("mPreviousBones",K.previousBones[C.uniqueId]),K.previousBones[C.uniqueId].set(B))}}}}b.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],b._Configurations={}},12831:(Z,l,C)=>{C.d(l,{b:()=>P});var B=C(12428),x=C(12432),b=C(12769),K=C(12295),f=C(12325),W=C(12356);const J=new RegExp("^([gimus]+)!");class d{constructor(Z){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=Z,this._scene=Z.cZ(),this._engine=this._scene.getEngine()}_addPlugin(Z){for(let B=0;B<this._plugins.length;++B)if(this._plugins[B].name===Z.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!Z.isCompatible(this._material.shaderLanguage))throw`The plugin "${Z.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const l=Z.getClassName();d._MaterialPluginClassToMainDefine[l]||(d._MaterialPluginClassToMainDefine[l]="MATERIALPLUGIN_"+ ++d._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(Z,l)=>this._handlePluginEvent(Z,l),this._plugins.push(Z),this._plugins.sort(((Z,l)=>Z.priority-l.priority)),this._codeInjectionPoints={};const C={};C[d._MaterialPluginClassToMainDefine[l]]={type:"boolean",default:!0};for(const B of this._plugins)B.collectDefines(C),this._collectPointNames("vertex",B.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",B.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=C,!0}_activatePlugin(Z){-1===this._activePlugins.indexOf(Z)&&(this._activePlugins.push(Z),this._activePlugins.sort(((Z,l)=>Z.priority-l.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),Z.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(Z),this._activePluginsForExtraEvents.sort(((Z,l)=>Z.priority-l.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(Z){for(let l=0;l<this._plugins.length;++l)if(this._plugins[l].name===Z)return this._plugins[l];return null}_handlePluginEventIsReadyForSubMesh(Z){let l=!0;for(const C of this._activePlugins)l=l&&C.isReadyForSubMesh(Z.defines,this._scene,this._engine,Z.subMesh);Z.isReadyForSubMesh=l}_handlePluginEventPrepareDefinesBeforeAttributes(Z){for(const l of this._activePlugins)l.prepareDefinesBeforeAttributes(Z.defines,this._scene,Z.mesh)}_handlePluginEventPrepareDefines(Z){for(const l of this._activePlugins)l.prepareDefines(Z.defines,this._scene,Z.mesh)}_handlePluginEventHardBindForSubMesh(Z){for(const l of this._activePluginsForExtraEvents)l.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventBindForSubMesh(Z){for(const l of this._activePlugins)l.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Z.subMesh)}_handlePluginEventHasRenderTargetTextures(Z){let l=!1;for(const C of this._activePluginsForExtraEvents)if(l=C.hasRenderTargetTextures(),l)break;Z.hasRenderTargetTextures=l}_handlePluginEventFillRenderTargetTextures(Z){for(const l of this._activePluginsForExtraEvents)l.fillRenderTargetTextures(Z.renderTargets)}_handlePluginEvent(Z,l){switch(Z){case 512:{const Z=l;for(const l of this._activePlugins)l.getActiveTextures(Z.activeTextures);break}case 256:{const Z=l;for(const l of this._activePlugins)l.getAnimatables(Z.animatables);break}case 1024:{const Z=l;let C=!1;for(const l of this._activePlugins)if(C=l.hasTexture(Z.texture),C)break;Z.hasTexture=C;break}case 2:{const Z=l;for(const l of this._plugins)l.dispose(Z.forceDisposeTextures);break}case 4:l.defineNames=this._defineNamesFromPlugins;break;case 128:{const Z=l;for(const l of this._activePlugins)Z.fallbackRank=l.addFallbacks(Z.defines,Z.fallbacks,Z.fallbackRank),l.getAttributes(Z.attributes,this._scene,Z.mesh);this._uniformList.length>0&&Z.uniforms.push(...this._uniformList),this._samplerList.length>0&&Z.samplers.push(...this._samplerList),this._uboList.length>0&&Z.uniformBuffersNames.push(...this._uboList),Z.customCode=this._injectCustomCode(Z,Z.customCode);break}case 8:{const Z=l;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const C=1===this._material.shaderLanguage;for(const l of this._plugins){const B=l.getUniforms(this._material.shaderLanguage);if(B){if(B.ubo)for(const l of B.ubo){if(l.size&&l.type){const B=l.arraySize??0;if(Z.ubo.addUniform(l.name,l.size,B),C){let Z;switch(l.type){case"mat4":Z="mat4x4f";break;case"float":Z="f32";break;default:Z=`${l.type}f`}this._uboDeclaration+=B>0?`uniform ${l.name}: array<${Z}, ${B}>;\n`:`uniform ${l.name}: ${Z};\n`}else this._uboDeclaration+=`${l.type} ${l.name}${B>0?`[${B}]`:""};\n`}this._uniformList.push(l.name)}B.vertex&&(this._vertexDeclaration+=B.vertex+"\n"),B.fragment&&(this._fragmentDeclaration+=B.fragment+"\n")}l.getSamplers(this._samplerList),l.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(Z,l){if(l)for(const C in l)this._codeInjectionPoints[Z]||(this._codeInjectionPoints[Z]={}),this._codeInjectionPoints[Z][C]=!0}_injectCustomCode(Z,l){return(C,B)=>{var x;l&&(B=l(C,B)),this._uboDeclaration&&(B=B.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(B=B.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(B=B.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const b=null===(x=this._codeInjectionPoints)||void 0===x?void 0:x[C];if(!b)return B;let K=null;for(let l in b){let x="";for(const B of this._activePlugins){var d;let b=null===(d=B.getCustomCode(C,this._material.shaderLanguage))||void 0===d?void 0:d[l];if(b){if(B.resolveIncludes){if(null===K){const l=0;K={defines:[],indexParameters:Z.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:W.b.GetShadersRepository(l),includesShadersStore:W.b.GetIncludesShadersStore(l),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,lb:this._engine.lb,processCodeAfterIncludes:void 0}}K.isFragment="fragment"===C,(0,f.i)(b,K,(Z=>b=Z))}x+=b+"\n"}}if(x.length>0)if("!"===l.charAt(0)){l=l.substring(1);let Z="g";if("!"===l.charAt(0))Z="",l=l.substring(1);else{const C=J.exec(l);C&&C.length>=2&&(Z=C[1],l=l.substring(Z.length+1))}Z.indexOf("g")<0&&(Z+="g");const C=B,b=new RegExp(l,Z);let K=b.exec(C);for(;null!==K;){let Z=x;for(let l=0;l<K.length;++l)Z=Z.replace("$"+l,K[l]);B=B.replace(K[0],Z),K=b.exec(C)}}else{const Z="#define "+l;B=B.replace(Z,"\n"+x+"\n"+Z)}}return B}}}d._MaterialPluginClassToMainDefine={},d._MaterialPluginCounter=0,K.b.OnEnginesDisposedObservable.add((()=>{q()}));const E=[];let G=!1,a=null;function q(){E.length=0,G=!1,b.b.OnEventObservable.remove(a),a=null}var z=C(12478),Y=C(12400);class P{isCompatible(Z){return 0===Z}_enable(Z){Z&&this._pluginManager._activatePlugin(this)}constructor(Z,l,C,B){let x=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],b=arguments.length>5&&void 0!==arguments[5]&&arguments[5],K=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=Z,this.name=l,this.priority=C,this.resolveIncludes=K,Z.pluginManager||(Z.pluginManager=new d(Z),Z.xb.add((()=>{Z.pluginManager=void 0}))),this._pluginDefineNames=B,this._pluginManager=Z.pluginManager,x&&this._pluginManager._addPlugin(this),b&&this._enable(!0),this.markAllDefinesAsDirty=Z._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(Z,l,C,B){return!0}hardBindForSubMesh(Z,l,C,B){}bindForSubMesh(Z,l,C,B){}dispose(Z){}getCustomCode(Z){return null}collectDefines(Z){if(this._pluginDefineNames)for(const l of Object.keys(this._pluginDefineNames)){if("_"===l[0])continue;const C=typeof this._pluginDefineNames[l];Z[l]={type:"number"===C?"number":"string"===C?"string":"boolean"===C?"boolean":"object",default:this._pluginDefineNames[l]}}}prepareDefinesBeforeAttributes(Z,l,C){}prepareDefines(Z,l,C){}hasTexture(Z){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(Z){}getActiveTextures(Z){}getAnimatables(Z){}addFallbacks(Z,l,C){return C}getSamplers(Z){}getAttributes(Z,l,C){}getUniformBuffersNames(Z){}getUniforms(){return{}}copyTo(Z){z.b.Clone((()=>Z),this)}serialize(){return z.b.Serialize(this)}parse(Z,l,C){z.b.Parse((()=>this),Z,l,C)}}(0,B.b)([(0,x.R)()],P.prototype,"name",void 0),(0,B.b)([(0,x.R)()],P.prototype,"priority",void 0),(0,B.b)([(0,x.R)()],P.prototype,"resolveIncludes",void 0),(0,B.b)([(0,x.R)()],P.prototype,"registerForExtraEvents",void 0),(0,Y.c)("BABYLON.MaterialPluginBase",P)},12816:(Z,l,C)=>{C.d(l,{e:()=>B});class B{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(Z){Z.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(Z){}bindForSubMesh(Z,l,C,B,x){if(l.prePassRenderer&&l.prePassRenderer.enabled&&l.prePassRenderer.currentRTisSceneRT&&(-1!==l.prePassRenderer.getIndex(2)||-1!==l.prePassRenderer.getIndex(11))){this.previousWorldMatrices[C.uniqueId]||(this.previousWorldMatrices[C.uniqueId]=B.clone()),this.previousViewProjection||(this.previousViewProjection=l.getTransformMatrix().clone(),this.currentViewProjection=l.getTransformMatrix().clone());const x=l.getEngine();this.currentViewProjection.updateFlag!==l.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=x.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(l.getTransformMatrix())):this._lastUpdateFrameId!==x.frameId&&(this._lastUpdateFrameId=x.frameId,this.previousViewProjection.B(this.currentViewProjection)),Z.setMatrix("previousWorld",this.previousWorldMatrices[C.uniqueId]),Z.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[C.uniqueId]=B.clone()}}}},12811:(Z,l,C)=>{C.d(l,{Pl:()=>t});var B=C(12428),x=C(12432),b=C(12561),K=C(12704),f=C(12494),W=C(12530),J=C(12816),d=C(12713),E=C(12769),G=C(12820),a=C(12760),q=C(12423),z=C(12400),Y=C(12823),P=C(12758),S=C(12826),i=C(12804),s=C(12800),F=C(12478),n=C(12835);const c={effect:null,subMesh:null};class U extends G.c{constructor(Z){super(Z),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(Z){const l=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const C of l)this[C]=C===Z}}class t extends a.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(Z){this._attachImageProcessingConfiguration(Z),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(Z){Z!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=Z||this.cZ().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(Z){this.imageProcessingConfiguration.colorCurvesEnabled=Z}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(Z){this.imageProcessingConfiguration.colorGradingEnabled=Z}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(Z){this._imageProcessingConfiguration.toneMappingEnabled=Z}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(Z){this._imageProcessingConfiguration.exposure=Z}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(Z){this._imageProcessingConfiguration.contrast=Z}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(Z){this._imageProcessingConfiguration.colorGradingTexture=Z}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(Z){this._imageProcessingConfiguration.colorCurves=Z}get canRenderToMRT(){return!0}constructor(Z,l){super(Z,l,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||t.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new f.Sl(0,0,0),this.diffuseColor=new f.Sl(1,1,1),this.specularColor=new f.Sl(1,1,1),this.emissiveColor=new f.Sl(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new b.g(16),this._globalAmbientColor=new f.Sl(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new S.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new J.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),t.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),t.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(t.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(t.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Pl"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===E.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Pb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==E.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Pb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(Z,l){let B=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const x=l._drawWrapper;if(x.effect&&this.isFrozen&&x._wasPreviouslyReady&&x._wasPreviouslyUsingInstances===B)return!0;l.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),l.materialDefines=new U(this._eventInfo.defineNames));const b=this.cZ(),K=l.materialDefines;if(this._isReadyForSubMesh(l))return!0;const f=b.getEngine();K._needNormals=(0,s.T)(b,Z,K,!0,this._maxSimultaneousLights,this._disableLighting),(0,s.$)(b,K);const E=this.needAlphaBlendingForMesh(Z)&&this.cZ().useOrderIndependentTransparency;if((0,s.eb)(b,K,this.canRenderToMRT&&!E),(0,s.cb)(b,K,E),n.e.PrepareDefines(f.currentRenderPassId,Z,K),K._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,K._needUVs=!1;for(let Z=1;Z<=6;++Z)K["MAINUV"+Z]=!1;if(b.texturesEnabled){if(K.DIFFUSEDIRECTUV=0,K.BUMPDIRECTUV=0,K.AMBIENTDIRECTUV=0,K.OPACITYDIRECTUV=0,K.EMISSIVEDIRECTUV=0,K.SPECULARDIRECTUV=0,K.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&t.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._diffuseTexture,K,"DIFFUSE")}else K.DIFFUSE=!1;if(this._ambientTexture&&t.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._ambientTexture,K,"AMBIENT")}else K.AMBIENT=!1;if(this._opacityTexture&&t.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._opacityTexture,K,"OPACITY"),K.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else K.OPACITY=!1;if(this._reflectionTexture&&t.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(K._needNormals=!0,K.REFLECTION=!0,K.ROUGHNESS=this._roughness>0,K.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,K.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===q.c.INVCUBIC_MODE,K.REFLECTIONMAP_3D=this._reflectionTexture.isCube,K.REFLECTIONMAP_OPPOSITEZ=K.REFLECTIONMAP_3D&&this.cZ().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,K.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case q.c.EXPLICIT_MODE:K.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case q.c.PLANAR_MODE:K.setReflectionMode("REFLECTIONMAP_PLANAR");break;case q.c.PROJECTION_MODE:K.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case q.c.SKYBOX_MODE:K.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case q.c.SPHERICAL_MODE:K.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case q.c.EQUIRECTANGULAR_MODE:K.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case q.c.FIXED_EQUIRECTANGULAR_MODE:K.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case q.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:K.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case q.c.CUBIC_MODE:case q.c.INVCUBIC_MODE:default:K.setReflectionMode("REFLECTIONMAP_CUBIC")}K.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else K.REFLECTION=!1,K.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&t.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._emissiveTexture,K,"EMISSIVE")}else K.EMISSIVE=!1;if(this._lightmapTexture&&t.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._lightmapTexture,K,"LIGHTMAP"),K.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,K.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else K.LIGHTMAP=!1;if(this._specularTexture&&t.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,s.X)(this._specularTexture,K,"SPECULAR"),K.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else K.SPECULAR=!1;if(b.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&t.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,s.X)(this._bumpTexture,K,"BUMP"),K.PARALLAX=this._useParallax,K.PARALLAX_RHS=b.useRightHandedSystem,K.PARALLAXOCCLUSION=this._useParallaxOcclusion,K.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else K.BUMP=!1,K.PARALLAX=!1,K.PARALLAX_RHS=!1,K.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&t.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;K._needUVs=!0,K.REFRACTION=!0,K.REFRACTIONMAP_3D=this._refractionTexture.isCube,K.RGBDREFRACTION=this._refractionTexture.isRGBD,K.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else K.REFRACTION=!1;K.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else K.DIFFUSE=!1,K.AMBIENT=!1,K.OPACITY=!1,K.REFLECTION=!1,K.EMISSIVE=!1,K.LIGHTMAP=!1,K.BUMP=!1,K.REFRACTION=!1;K.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),K.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,K.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,K.SPECULAROVERALPHA=this._useSpecularOverAlpha,K.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,K.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,K.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(Z)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=K,this._eventInfo.subMesh=l,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(K._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(K),K.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,K.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(K._areFresnelDirty&&(t.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(K.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,K.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,K.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,K.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,K.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,K.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,K._needNormals=!0,K.FRESNEL=!0):K.FRESNEL=!1),K.AREALIGHTUSED)for(let C=0;C<Z.lightSources.length;C++)if(!Z.lightSources[C]._isReady())return!1;(0,s.Y)(Z,b,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(Z),K,this._applyDecalMapAfterDetailMap),(0,s.S)(b,f,this,K,B,null,l.getRenderingMesh().hasThinInstances),this._eventInfo.defines=K,this._eventInfo.mesh=Z,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,s.O)(Z,K,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let G=!1;if(K.isDirty){const B=K._areLightsDisposed;K.markAsProcessed();const x=new P.d;K.REFLECTION&&x.addFallback(0,"REFLECTION"),K.SPECULAR&&x.addFallback(0,"SPECULAR"),K.BUMP&&x.addFallback(0,"BUMP"),K.PARALLAX&&x.addFallback(1,"PARALLAX"),K.PARALLAX_RHS&&x.addFallback(1,"PARALLAX_RHS"),K.PARALLAXOCCLUSION&&x.addFallback(0,"PARALLAXOCCLUSION"),K.SPECULAROVERALPHA&&x.addFallback(0,"SPECULAROVERALPHA"),K.FOG&&x.addFallback(1,"FOG"),K.POINTSIZE&&x.addFallback(0,"POINTSIZE"),K.LOGARITHMICDEPTH&&x.addFallback(0,"LOGARITHMICDEPTH"),(0,s.x)(K,x,this._maxSimultaneousLights),K.SPECULARTERM&&x.addFallback(0,"SPECULARTERM"),K.DIFFUSEFRESNEL&&x.addFallback(1,"DIFFUSEFRESNEL"),K.OPACITYFRESNEL&&x.addFallback(2,"OPACITYFRESNEL"),K.REFLECTIONFRESNEL&&x.addFallback(3,"REFLECTIONFRESNEL"),K.EMISSIVEFRESNEL&&x.addFallback(4,"EMISSIVEFRESNEL"),K.FRESNEL&&x.addFallback(4,"FRESNEL"),K.MULTIVIEW&&x.addFallback(0,"MULTIVIEW");const E=[W.h.PositionKind];K.NORMAL&&E.push(W.h.NormalKind),K.TANGENT&&E.push(W.h.TangentKind);for(let Z=1;Z<=6;++Z)K["UV"+Z]&&E.push(`uv${1===Z?"":Z}`);K.VERTEXCOLOR&&E.push(W.h.ColorKind),(0,s.C)(E,Z,K,x),(0,s.D)(E,K),(0,s.H)(E,Z,K),(0,s.y)(E,Z,K);let a="default";const q=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],z=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],Y=["Material","Scene","Mesh"],S={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:K.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=x,this._eventInfo.fallbackRank=0,this._eventInfo.defines=K,this._eventInfo.uniforms=q,this._eventInfo.attributes=E,this._eventInfo.samplers=z,this._eventInfo.uniformBuffersNames=Y,this._eventInfo.customCode=void 0,this._eventInfo.mesh=Z,this._eventInfo.indexParameters=S,this._callbackPluginEventGeneric(128,this._eventInfo),n.e.AddUniformsAndSamplers(q,z),J.e.AddUniforms(q),J.e.AddSamplers(z),d.d&&(d.d.PrepareUniforms(q,K),d.d.PrepareSamplers(z,K)),(0,s.fb)({uniformsNames:q,uniformBuffersNames:Y,samplers:z,defines:K,maxSimultaneousLights:this._maxSimultaneousLights}),(0,i.b)(q);const F={};this.customShaderNameResolve&&(a=this.customShaderNameResolve(a,q,Y,z,K,E,F));const U=K.toString(),t=l.effect;let r=b.getEngine().createEffect(a,{attributes:E,uniformsNames:q,uniformBuffersNames:Y,samplers:z,defines:U,fallbacks:x,onCompiled:this.onCompiled,onError:this.onError,indexParameters:S,processFinalCode:F.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:K.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([C.e(41),C.e(64)]).then(C.bind(C,14678)),Promise.all([C.e(39),C.e(65)]).then(C.bind(C,14849))]):await Promise.all([Promise.all([C.e(34),C.e(67)]).then(C.bind(C,14940)),Promise.all([C.e(33),C.e(68)]).then(C.bind(C,15074))]),this._shadersLoaded=!0}},f);if(this._eventInfo.customCode=void 0,r)if(this._onEffectCreatedObservable&&(c.effect=r,c.subMesh=l,this._onEffectCreatedObservable.notifyObservers(c)),this.allowShaderHotSwapping&&t&&!r.isReady()){if(r=t,K.markAsUnprocessed(),G=this.isFrozen,B)return K._areLightsDisposed=!0,!1}else b.resetCachedMaterial(),l.setEffect(r,K,this._materialContext)}return!(!l.effect||!l.effect.isReady())&&(K._renderId=b.getRenderId(),x._wasPreviouslyReady=!G,x._wasPreviouslyUsingInstances=B,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const Z=this._uniformBuffer;Z.addUniform("diffuseLeftColor",4),Z.addUniform("diffuseRightColor",4),Z.addUniform("opacityParts",4),Z.addUniform("reflectionLeftColor",4),Z.addUniform("reflectionRightColor",4),Z.addUniform("refractionLeftColor",4),Z.addUniform("refractionRightColor",4),Z.addUniform("emissiveLeftColor",4),Z.addUniform("emissiveRightColor",4),Z.addUniform("vDiffuseInfos",2),Z.addUniform("vAmbientInfos",2),Z.addUniform("vOpacityInfos",2),Z.addUniform("vReflectionInfos",2),Z.addUniform("vReflectionPosition",3),Z.addUniform("vReflectionSize",3),Z.addUniform("vEmissiveInfos",2),Z.addUniform("vLightmapInfos",2),Z.addUniform("vSpecularInfos",2),Z.addUniform("vBumpInfos",3),Z.addUniform("diffuseMatrix",16),Z.addUniform("ambientMatrix",16),Z.addUniform("opacityMatrix",16),Z.addUniform("reflectionMatrix",16),Z.addUniform("emissiveMatrix",16),Z.addUniform("lightmapMatrix",16),Z.addUniform("specularMatrix",16),Z.addUniform("bumpMatrix",16),Z.addUniform("vTangentSpaceParams",2),Z.addUniform("pointSize",1),Z.addUniform("alphaCutOff",1),Z.addUniform("refractionMatrix",16),Z.addUniform("vRefractionInfos",4),Z.addUniform("vRefractionPosition",3),Z.addUniform("vRefractionSize",3),Z.addUniform("vSpecularColor",4),Z.addUniform("vEmissiveColor",3),Z.addUniform("vDiffuseColor",4),Z.addUniform("vAmbientColor",3),Z.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(Z,l,C){const B=this.cZ(),x=C.materialDefines;if(!x)return;const b=C.effect;if(!b)return;this._activeEffect=b,l.getMeshUniformBuffer().bindToEffect(b,"Mesh"),l.transferToEffect(Z),this._uniformBuffer.bindToEffect(b,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,B,l,Z,this.isFrozen),n.e.Bind(B.getEngine().currentRenderPassId,this._activeEffect,l,Z,this);const W=B.activeCamera;W?this._uniformBuffer.updateFloat4("cameraInfo",W.ib,W.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=C,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),x.OBJECTSPACE_NORMALMAP&&(Z.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const J=this._mustRebind(B,b,C,l.visibility);(0,s.b)(l,b);const d=this._uniformBuffer;if(J){if(this.bindViewProjection(b),!d.useUbo||!this.isFrozen||!d.isSync||C._drawWrapper._forceRebindOnNextCall){if(t.FresnelEnabled&&x.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(d.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),d.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&d.updateColor4("opacityParts",new f.Sl(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(d.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),d.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(d.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),d.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(d.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),d.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),B.texturesEnabled){if(this._diffuseTexture&&t.DiffuseTextureEnabled&&(d.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,s.t)(this._diffuseTexture,d,"diffuse")),this._ambientTexture&&t.AmbientTextureEnabled&&(d.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,s.t)(this._ambientTexture,d,"ambient")),this._opacityTexture&&t.OpacityTextureEnabled&&(d.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,s.t)(this._opacityTexture,d,"opacity")),this._hasAlphaChannel()&&d.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&t.ReflectionTextureEnabled){if(d.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),d.sb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const Z=this._reflectionTexture;d.updateVector3("vReflectionPosition",Z.boundingBoxPosition),d.updateVector3("vReflectionSize",Z.boundingBoxSize)}}else d.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&t.EmissiveTextureEnabled&&(d.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,s.t)(this._emissiveTexture,d,"emissive")),this._lightmapTexture&&t.LightmapTextureEnabled&&(d.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,s.t)(this._lightmapTexture,d,"lightmap")),this._specularTexture&&t.SpecularTextureEnabled&&(d.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,s.t)(this._specularTexture,d,"specular")),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&t.BumpTextureEnabled&&(d.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,s.t)(this._bumpTexture,d,"bump"),B._mirroredCameraPosition?d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&t.RefractionTextureEnabled){let Z=1;if(this._refractionTexture.isCube||(d.sb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(Z=this._refractionTexture.depth)),d.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,Z,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const Z=this._refractionTexture;d.updateVector3("vRefractionPosition",Z.boundingBoxPosition),d.updateVector3("vRefractionSize",Z.boundingBoxSize)}}}this.pointsCloud&&d.updateFloat("pointSize",this.pointSize),d.updateColor4("vSpecularColor",this.specularColor,this.specularPower),d.updateColor3("vEmissiveColor",t.EmissiveTextureEnabled?this.emissiveColor:f.Sl.BlackReadOnly),d.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),B.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),d.updateColor3("vAmbientColor",this._globalAmbientColor)}B.texturesEnabled&&(this._diffuseTexture&&t.DiffuseTextureEnabled&&b.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&t.AmbientTextureEnabled&&b.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&t.OpacityTextureEnabled&&b.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&t.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?b.setTexture("reflectionCubeSampler",this._reflectionTexture):b.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&t.EmissiveTextureEnabled&&b.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&t.LightmapTextureEnabled&&b.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&t.SpecularTextureEnabled&&b.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&t.BumpTextureEnabled&&b.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&t.RefractionTextureEnabled&&(this._refractionTexture.isCube?b.setTexture("refractionCubeSampler",this._refractionTexture):b.setTexture("refraction2DSampler",this._refractionTexture))),this.cZ().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(l)&&this.cZ().depthPeelingRenderer.bind(b),this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,i.d)(b,this,B),this.bindEyePosition(b)}else B.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(J||!this.isFrozen){var E;if(B.lightsEnabled&&!this._disableLighting&&(0,s.g)(B,l,b,x,this._maxSimultaneousLights),(B.fogEnabled&&l.applyFog&&B.fogMode!==K.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||l.receiveShadows||x.PREPASS)&&this.bindView(b),(0,s.f)(B,l,b),x.NUM_MORPH_INFLUENCERS&&(0,s.n)(l,b),x.BAKED_VERTEX_ANIMATION_TEXTURE)null===(E=l.bakedVertexAnimationManager)||void 0===E||E.bind(b,x.INSTANCES);this.useLogarithmicDepth&&(0,s.j)(x,b,B),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(l,this._activeEffect,C),d.update()}getAnimatables(){const Z=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&Z.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&Z.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&Z.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&Z.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&Z.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&Z.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&Z.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&Z.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&Z.push(this._refractionTexture),Z}getActiveTextures(){const Z=super.getActiveTextures();return this._diffuseTexture&&Z.push(this._diffuseTexture),this._ambientTexture&&Z.push(this._ambientTexture),this._opacityTexture&&Z.push(this._opacityTexture),this._reflectionTexture&&Z.push(this._reflectionTexture),this._emissiveTexture&&Z.push(this._emissiveTexture),this._specularTexture&&Z.push(this._specularTexture),this._bumpTexture&&Z.push(this._bumpTexture),this._lightmapTexture&&Z.push(this._lightmapTexture),this._refractionTexture&&Z.push(this._refractionTexture),Z}hasTexture(Z){return!!super.hasTexture(Z)||(this._diffuseTexture===Z||(this._ambientTexture===Z||(this._opacityTexture===Z||(this._reflectionTexture===Z||(this._emissiveTexture===Z||(this._specularTexture===Z||(this._bumpTexture===Z||(this._lightmapTexture===Z||this._refractionTexture===Z))))))))}dispose(Z,l){var C,B,x,b,K,f,W,J,d;l&&(null===(C=this._diffuseTexture)||void 0===C||C.dispose(),null===(B=this._ambientTexture)||void 0===B||B.dispose(),null===(x=this._opacityTexture)||void 0===x||x.dispose(),null===(b=this._reflectionTexture)||void 0===b||b.dispose(),null===(K=this._emissiveTexture)||void 0===K||K.dispose(),null===(f=this._specularTexture)||void 0===f||f.dispose(),null===(W=this._bumpTexture)||void 0===W||W.dispose(),null===(J=this._lightmapTexture)||void 0===J||J.dispose(),null===(d=this._refractionTexture)||void 0===d||d.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(Z,l)}clone(Z){let l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const B=F.b.Clone((()=>new t(Z,this.cZ())),this,{cloneTexturesOnlyOnce:l});return B.name=Z,B.id=Z,this.bb.copyTo(B.bb),this._clonePlugins(B,C),B}static Parse(Z,l,C){const B=F.b.Parse((()=>new t(Z.name,l)),Z,l,C);return Z.bb&&B.bb.parse(Z.bb,l,C),E.b._ParsePlugins(Z,B,l,C),B}static get DiffuseTextureEnabled(){return Y.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(Z){Y.d.DiffuseTextureEnabled=Z}static get DetailTextureEnabled(){return Y.d.DetailTextureEnabled}static set DetailTextureEnabled(Z){Y.d.DetailTextureEnabled=Z}static get AmbientTextureEnabled(){return Y.d.AmbientTextureEnabled}static set AmbientTextureEnabled(Z){Y.d.AmbientTextureEnabled=Z}static get OpacityTextureEnabled(){return Y.d.OpacityTextureEnabled}static set OpacityTextureEnabled(Z){Y.d.OpacityTextureEnabled=Z}static get ReflectionTextureEnabled(){return Y.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(Z){Y.d.ReflectionTextureEnabled=Z}static get EmissiveTextureEnabled(){return Y.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(Z){Y.d.EmissiveTextureEnabled=Z}static get SpecularTextureEnabled(){return Y.d.SpecularTextureEnabled}static set SpecularTextureEnabled(Z){Y.d.SpecularTextureEnabled=Z}static get BumpTextureEnabled(){return Y.d.BumpTextureEnabled}static set BumpTextureEnabled(Z){Y.d.BumpTextureEnabled=Z}static get LightmapTextureEnabled(){return Y.d.LightmapTextureEnabled}static set LightmapTextureEnabled(Z){Y.d.LightmapTextureEnabled=Z}static get RefractionTextureEnabled(){return Y.d.RefractionTextureEnabled}static set RefractionTextureEnabled(Z){Y.d.RefractionTextureEnabled=Z}static get ColorGradingTextureEnabled(){return Y.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Z){Y.d.ColorGradingTextureEnabled=Z}static get FresnelEnabled(){return Y.d.FresnelEnabled}static set FresnelEnabled(Z){Y.d.FresnelEnabled=Z}}t.ForceGLSL=!1,(0,B.b)([(0,x.K)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"diffuseTexture",void 0),(0,B.b)([(0,x.K)("ambientTexture")],t.prototype,"_ambientTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"ambientTexture",void 0),(0,B.b)([(0,x.K)("opacityTexture")],t.prototype,"_opacityTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"opacityTexture",void 0),(0,B.b)([(0,x.K)("reflectionTexture")],t.prototype,"_reflectionTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"reflectionTexture",void 0),(0,B.b)([(0,x.K)("emissiveTexture")],t.prototype,"_emissiveTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"emissiveTexture",void 0),(0,B.b)([(0,x.K)("specularTexture")],t.prototype,"_specularTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"specularTexture",void 0),(0,B.b)([(0,x.K)("bumpTexture")],t.prototype,"_bumpTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture",void 0),(0,B.b)([(0,x.K)("lightmapTexture")],t.prototype,"_lightmapTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"lightmapTexture",void 0),(0,B.b)([(0,x.K)("refractionTexture")],t.prototype,"_refractionTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"refractionTexture",void 0),(0,B.b)([(0,x.k)("ambient")],t.prototype,"ambientColor",void 0),(0,B.b)([(0,x.k)("diffuse")],t.prototype,"diffuseColor",void 0),(0,B.b)([(0,x.k)("specular")],t.prototype,"specularColor",void 0),(0,B.b)([(0,x.k)("emissive")],t.prototype,"emissiveColor",void 0),(0,B.b)([(0,x.R)()],t.prototype,"specularPower",void 0),(0,B.b)([(0,x.R)("useAlphaFromDiffuseTexture")],t.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"useAlphaFromDiffuseTexture",void 0),(0,B.b)([(0,x.R)("useEmissiveAsIllumination")],t.prototype,"_useEmissiveAsIllumination",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useEmissiveAsIllumination",void 0),(0,B.b)([(0,x.R)("linkEmissiveWithDiffuse")],t.prototype,"_linkEmissiveWithDiffuse",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"linkEmissiveWithDiffuse",void 0),(0,B.b)([(0,x.R)("useSpecularOverAlpha")],t.prototype,"_useSpecularOverAlpha",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useSpecularOverAlpha",void 0),(0,B.b)([(0,x.R)("useReflectionOverAlpha")],t.prototype,"_useReflectionOverAlpha",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useReflectionOverAlpha",void 0),(0,B.b)([(0,x.R)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,B.b)([(0,x.R)("useObjectSpaceNormalMap")],t.prototype,"_useObjectSpaceNormalMap",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useObjectSpaceNormalMap",void 0),(0,B.b)([(0,x.R)("useParallax")],t.prototype,"_useParallax",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useParallax",void 0),(0,B.b)([(0,x.R)("useParallaxOcclusion")],t.prototype,"_useParallaxOcclusion",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useParallaxOcclusion",void 0),(0,B.b)([(0,x.R)()],t.prototype,"parallaxScaleBias",void 0),(0,B.b)([(0,x.R)("roughness")],t.prototype,"_roughness",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"roughness",void 0),(0,B.b)([(0,x.R)()],t.prototype,"indexOfRefraction",void 0),(0,B.b)([(0,x.R)()],t.prototype,"invertRefractionY",void 0),(0,B.b)([(0,x.R)()],t.prototype,"alphaCutOff",void 0),(0,B.b)([(0,x.R)("useLightmapAsShadowmap")],t.prototype,"_useLightmapAsShadowmap",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useLightmapAsShadowmap",void 0),(0,B.b)([(0,x.q)("diffuseFresnelParameters")],t.prototype,"_diffuseFresnelParameters",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"diffuseFresnelParameters",void 0),(0,B.b)([(0,x.q)("opacityFresnelParameters")],t.prototype,"_opacityFresnelParameters",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],t.prototype,"opacityFresnelParameters",void 0),(0,B.b)([(0,x.q)("reflectionFresnelParameters")],t.prototype,"_reflectionFresnelParameters",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"reflectionFresnelParameters",void 0),(0,B.b)([(0,x.q)("refractionFresnelParameters")],t.prototype,"_refractionFresnelParameters",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"refractionFresnelParameters",void 0),(0,B.b)([(0,x.q)("emissiveFresnelParameters")],t.prototype,"_emissiveFresnelParameters",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"emissiveFresnelParameters",void 0),(0,B.b)([(0,x.R)("useReflectionFresnelFromSpecular")],t.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"useReflectionFresnelFromSpecular",void 0),(0,B.b)([(0,x.R)("useGlossinessFromSpecularMapAlpha")],t.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,B.b)([(0,x.R)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),(0,B.b)([(0,x.R)("invertNormalMapX")],t.prototype,"_invertNormalMapX",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"invertNormalMapX",void 0),(0,B.b)([(0,x.R)("invertNormalMapY")],t.prototype,"_invertNormalMapY",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"invertNormalMapY",void 0),(0,B.b)([(0,x.R)("twoSidedLighting")],t.prototype,"_twoSidedLighting",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"twoSidedLighting",void 0),(0,B.b)([(0,x.R)("applyDecalMapAfterDetailMap")],t.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,B.b)([(0,x.d)("_markAllSubMeshesAsMiscDirty")],t.prototype,"applyDecalMapAfterDetailMap",void 0),(0,z.c)("BABYLON.StandardMaterial",t),K.e.DefaultMaterialFactory=Z=>new t("default material",Z)}}]);