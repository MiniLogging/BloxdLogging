"use strict";(self.c2c3ycupenc=self.c2c3ycupenc||[]).push([[25],{12071:(c,r,D)=>{D.d(r,{d:()=>E});var W=D(11664),B=D(12010),t=D(11669),u=D(12063),a=D(12061),H=D(12076),x=D(12048);class M extends a.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class E extends H.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(c){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(c,"DetailMap",140,new M,r),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=B.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=c._dirtyCallbacks[1]}isReadyForSubMesh(c,r,D){return!this._isEnabled||!(c._areTexturesDirty&&r.texturesEnabled&&D.getCaps().standardDerivatives&&this._texture&&u.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(c,r){if(this._isEnabled){c.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const D=r.getEngine();c._areTexturesDirty&&(D.getCaps().standardDerivatives&&this._texture&&u.e.DetailTextureEnabled&&this._isEnabled?((0,x.N)(this._texture,c,"DETAIL"),c.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):c.DETAIL=!1)}else c.DETAIL=!1}bindForSubMesh(c,r){if(!this._isEnabled)return;const D=this._material.isFrozen;c.useUbo&&D&&c.isSync||this._texture&&u.e.DetailTextureEnabled&&(c.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,x.p)(this._texture,c,"detail")),r.texturesEnabled&&this._texture&&u.e.DetailTextureEnabled&&c.setTexture("detailSampler",this._texture)}hasTexture(c){return this._texture===c}getActiveTextures(c){this._texture&&c.push(this._texture)}getAnimatables(c){this._texture&&this._texture.animations&&this._texture.animations.length>0&&c.push(this._texture)}dispose(c){var r;c&&(null===(r=this._texture)||void 0===r||r.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(c){c.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,W.e)([(0,t.F)("detailTexture"),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"texture",void 0),(0,W.e)([(0,t.K)()],E.prototype,"diffuseBlendLevel",void 0),(0,W.e)([(0,t.K)()],E.prototype,"roughnessBlendLevel",void 0),(0,W.e)([(0,t.K)()],E.prototype,"bumpLevel",void 0),(0,W.e)([(0,t.K)(),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"normalBlendMethod",void 0),(0,W.e)([(0,t.K)(),(0,t.b)("_markAllSubMeshesAsTexturesDirty")],E.prototype,"isEnabled",void 0)},12061:(c,r,D)=>{D.d(r,{c:()=>W});class W{constructor(c){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=c,c)for(const r in c)Object.prototype.hasOwnProperty.call(c,r)&&this._setDefaultValue(r)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let c=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||c,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const c of Object.keys(this))"_"!==c[0]&&this._keys.push(c);if(this._externalProperties)for(const c in this._externalProperties)-1===this._keys.indexOf(c)&&this._keys.push(c)}isEqual(c){if(this._keys.length!==c._keys.length)return!1;for(let r=0;r<this._keys.length;r++){const D=this._keys[r];if(this[D]!==c[D])return!1}return!0}cloneTo(c){this._keys.length!==c._keys.length&&(c._keys=this._keys.slice(0));for(let r=0;r<this._keys.length;r++){const D=this._keys[r];c[D]=this[D]}}reset(){for(const c of this._keys)this._setDefaultValue(c)}_setDefaultValue(c){var r,D,W,B;const t=(null===(r=this._externalProperties)||void 0===r||null===(D=r[c])||void 0===D?void 0:D.type)??typeof this[c],u=null===(W=this._externalProperties)||void 0===W||null===(B=W[c])||void 0===B?void 0:B.default;switch(t){case"number":this[c]=u??0;break;case"string":this[c]=u??"";break;default:this[c]=u??!1}}toString(){let c="";for(let r=0;r<this._keys.length;r++){const D=this._keys[r],W=this[D];switch(typeof W){case"number":case"string":c+="#define "+D+" "+W+"\n";break;default:W&&(c+="#define "+D+"\n")}}return c}}},12063:(c,r,D)=>{D.d(r,{e:()=>B});var W=D(11584);class B{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(c){this._DiffuseTextureEnabled!==c&&(this._DiffuseTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(c){this._BaseWeightTextureEnabled!==c&&(this._BaseWeightTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(c){this._BaseDiffuseRoughnessTextureEnabled!==c&&(this._BaseDiffuseRoughnessTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(c){this._DetailTextureEnabled!==c&&(this._DetailTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(c){this._DecalMapEnabled!==c&&(this._DecalMapEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(c){this._AmbientTextureEnabled!==c&&(this._AmbientTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(c){this._OpacityTextureEnabled!==c&&(this._OpacityTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(c){this._ReflectionTextureEnabled!==c&&(this._ReflectionTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(c){this._EmissiveTextureEnabled!==c&&(this._EmissiveTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(c){this._SpecularTextureEnabled!==c&&(this._SpecularTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(c){this._BumpTextureEnabled!==c&&(this._BumpTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(c){this._LightmapTextureEnabled!==c&&(this._LightmapTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(c){this._RefractionTextureEnabled!==c&&(this._RefractionTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(c){this._ColorGradingTextureEnabled!==c&&(this._ColorGradingTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(c){this._FresnelEnabled!==c&&(this._FresnelEnabled=c,W.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(c){this._ClearCoatTextureEnabled!==c&&(this._ClearCoatTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(c){this._ClearCoatBumpTextureEnabled!==c&&(this._ClearCoatBumpTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(c){this._ClearCoatTintTextureEnabled!==c&&(this._ClearCoatTintTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(c){this._SheenTextureEnabled!==c&&(this._SheenTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(c){this._AnisotropicTextureEnabled!==c&&(this._AnisotropicTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(c){this._ThicknessTextureEnabled!==c&&(this._ThicknessTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(c){this._RefractionIntensityTextureEnabled!==c&&(this._RefractionIntensityTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(c){this._TranslucencyIntensityTextureEnabled!==c&&(this._TranslucencyIntensityTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(c){this._TranslucencyColorTextureEnabled!==c&&(this._TranslucencyColorTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(c){this._IridescenceTextureEnabled!==c&&(this._IridescenceTextureEnabled=c,W.b.MarkAllMaterialsAsDirty(1))}}B._DiffuseTextureEnabled=!0,B._BaseWeightTextureEnabled=!0,B._BaseDiffuseRoughnessTextureEnabled=!0,B._DetailTextureEnabled=!0,B._DecalMapEnabled=!0,B._AmbientTextureEnabled=!0,B._OpacityTextureEnabled=!0,B._ReflectionTextureEnabled=!0,B._EmissiveTextureEnabled=!0,B._SpecularTextureEnabled=!0,B._BumpTextureEnabled=!0,B._LightmapTextureEnabled=!0,B._RefractionTextureEnabled=!0,B._ColorGradingTextureEnabled=!0,B._FresnelEnabled=!0,B._ClearCoatTextureEnabled=!0,B._ClearCoatBumpTextureEnabled=!0,B._ClearCoatTintTextureEnabled=!0,B._SheenTextureEnabled=!0,B._AnisotropicTextureEnabled=!0,B._ThicknessTextureEnabled=!0,B._RefractionIntensityTextureEnabled=!0,B._TranslucencyIntensityTextureEnabled=!0,B._TranslucencyColorTextureEnabled=!0,B._IridescenceTextureEnabled=!0},12079:(c,r,D)=>{D.d(r,{e:()=>t});var W,B=D(11683);!function(c){c[c.Zero=0]="Zero",c[c.One=1]="One",c[c.MaxViewZ=2]="MaxViewZ"}(W||(W={}));class t{static CreateConfiguration(c){return t._Configurations[c]={defines:{},previousWorldMatrices:{},previousViewProjection:B.Matrix.Zero(),currentViewProjection:B.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},t._Configurations[c]}static DeleteConfiguration(c){delete t._Configurations[c]}static GetConfiguration(c){return t._Configurations[c]}static AddUniformsAndSamplers(c,r){c.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(c,r){for(const D of r)if(D.xa)for(const r of D.xa)r._removeDrawWrapper(c)}static PrepareDefines(c,r,D){if(!D._arePrePassDirty)return;const W=t._Configurations[c];if(!W)return;D.PREPASS=!0,D.PREPASS_COLOR=!1,D.PREPASS_COLOR_INDEX=-1;let B=0;for(let u=0;u<t.GeometryTextureDescriptions.length;u++){const c=t.GeometryTextureDescriptions[u],r=c.define,a=c.defineIndex,H=W.defines[a];void 0!==H?(D[r]=!0,D[a]=H,B++):(D[r]=!1,delete D[a])}D.SCENE_MRT_COUNT=B,D.BONES_VELOCITY_ENABLED=r.useBones&&r.computeBonesUsingShaders&&r.skeleton&&!r.skeleton.isUsingTextureForMatrices&&-1===W.excludedSkinnedMesh.indexOf(r)}static Bind(c,r,D,W,B){const u=t._Configurations[c];if(!u)return;const a=D.yc(),H=a.getEngine();if(u.reverseCulling&&H.setStateCullFaceType(a._mirroredCameraPosition?B.cullBackFaces:!B.cullBackFaces),(void 0!==u.defines.PREPASS_VELOCITY_INDEX||void 0!==u.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(u.previousWorldMatrices[D.uniqueId]||(u.previousWorldMatrices[D.uniqueId]=W.clone()),u.previousViewProjection||(u.previousViewProjection=a.getTransformMatrix().clone(),u.currentViewProjection=a.getTransformMatrix().clone()),u.currentViewProjection.updateFlag!==a.getTransformMatrix().updateFlag?(u.lastUpdateFrameId=H.frameId,u.previousViewProjection.t(u.currentViewProjection),u.currentViewProjection.t(a.getTransformMatrix())):u.lastUpdateFrameId!==H.frameId&&(u.lastUpdateFrameId=H.frameId,u.previousViewProjection.t(u.currentViewProjection)),r.setMatrix("previousWorld",u.previousWorldMatrices[D.uniqueId]),r.setMatrix("previousViewProjection",u.previousViewProjection),u.previousWorldMatrices[D.uniqueId]=W.clone(),D.useBones&&D.computeBonesUsingShaders&&D.skeleton)){const c=D.skeleton;if(!c.isUsingTextureForMatrices||-1===r.getUniformIndex("boneTextureWidth")){const W=c.getTransformMatrices(D);W&&(u.previousBones[D.uniqueId]||(u.previousBones[D.uniqueId]=W.slice()),r.setMatrices("mPreviousBones",u.previousBones[D.uniqueId]),u.previousBones[D.uniqueId].set(W))}}}}t.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],t._Configurations={}},12076:(c,r,D)=>{D.d(r,{c:()=>Z});var W=D(11664),B=D(11669),t=D(12010),u=D(11538),a=D(11564),H=D(11595);const x=new RegExp("^([gimus]+)!");class M{constructor(c){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=c,this._scene=c.yc(),this._engine=this._scene.getEngine()}_addPlugin(c){for(let W=0;W<this._plugins.length;++W)if(this._plugins[W].name===c.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!c.isCompatible(this._material.shaderLanguage))throw`The plugin "${c.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const r=c.getClassName();M._MaterialPluginClassToMainDefine[r]||(M._MaterialPluginClassToMainDefine[r]="MATERIALPLUGIN_"+ ++M._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(c,r)=>this._handlePluginEvent(c,r),this._plugins.push(c),this._plugins.sort(((c,r)=>c.priority-r.priority)),this._codeInjectionPoints={};const D={};D[M._MaterialPluginClassToMainDefine[r]]={type:"boolean",default:!0};for(const W of this._plugins)W.collectDefines(D),this._collectPointNames("vertex",W.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",W.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=D,!0}_activatePlugin(c){-1===this._activePlugins.indexOf(c)&&(this._activePlugins.push(c),this._activePlugins.sort(((c,r)=>c.priority-r.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),c.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(c),this._activePluginsForExtraEvents.sort(((c,r)=>c.priority-r.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(c){for(let r=0;r<this._plugins.length;++r)if(this._plugins[r].name===c)return this._plugins[r];return null}_handlePluginEventIsReadyForSubMesh(c){let r=!0;for(const D of this._activePlugins)r=r&&D.isReadyForSubMesh(c.defines,this._scene,this._engine,c.subMesh);c.isReadyForSubMesh=r}_handlePluginEventPrepareDefinesBeforeAttributes(c){for(const r of this._activePlugins)r.prepareDefinesBeforeAttributes(c.defines,this._scene,c.mesh)}_handlePluginEventPrepareDefines(c){for(const r of this._activePlugins)r.prepareDefines(c.defines,this._scene,c.mesh)}_handlePluginEventHardBindForSubMesh(c){for(const r of this._activePluginsForExtraEvents)r.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,c.subMesh)}_handlePluginEventBindForSubMesh(c){for(const r of this._activePlugins)r.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,c.subMesh)}_handlePluginEventHasRenderTargetTextures(c){let r=!1;for(const D of this._activePluginsForExtraEvents)if(r=D.hasRenderTargetTextures(),r)break;c.hasRenderTargetTextures=r}_handlePluginEventFillRenderTargetTextures(c){for(const r of this._activePluginsForExtraEvents)r.fillRenderTargetTextures(c.renderTargets)}_handlePluginEvent(c,r){switch(c){case 512:{const c=r;for(const r of this._activePlugins)r.getActiveTextures(c.activeTextures);break}case 256:{const c=r;for(const r of this._activePlugins)r.getAnimatables(c.animatables);break}case 1024:{const c=r;let D=!1;for(const r of this._activePlugins)if(D=r.hasTexture(c.texture),D)break;c.hasTexture=D;break}case 2:{const c=r;for(const r of this._plugins)r.dispose(c.forceDisposeTextures);break}case 4:r.defineNames=this._defineNamesFromPlugins;break;case 128:{const c=r;for(const r of this._activePlugins)c.fallbackRank=r.addFallbacks(c.defines,c.fallbacks,c.fallbackRank),r.getAttributes(c.attributes,this._scene,c.mesh);this._uniformList.length>0&&c.uniforms.push(...this._uniformList),this._samplerList.length>0&&c.samplers.push(...this._samplerList),this._uboList.length>0&&c.uniformBuffersNames.push(...this._uboList),c.customCode=this._injectCustomCode(c,c.customCode);break}case 8:{const c=r;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const D=1===this._material.shaderLanguage;for(const r of this._plugins){const W=r.getUniforms(this._material.shaderLanguage);if(W){if(W.ubo)for(const r of W.ubo){if(r.size&&r.type){const W=r.arraySize??0;if(c.ubo.addUniform(r.name,r.size,W),D){let c;switch(r.type){case"mat4":c="mat4x4f";break;case"float":c="f32";break;default:c=`${r.type}f`}this._uboDeclaration+=W>0?`uniform ${r.name}: array<${c}, ${W}>;\n`:`uniform ${r.name}: ${c};\n`}else this._uboDeclaration+=`${r.type} ${r.name}${W>0?`[${W}]`:""};\n`}this._uniformList.push(r.name)}W.vertex&&(this._vertexDeclaration+=W.vertex+"\n"),W.fragment&&(this._fragmentDeclaration+=W.fragment+"\n")}r.getSamplers(this._samplerList),r.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(c,r){if(r)for(const D in r)this._codeInjectionPoints[c]||(this._codeInjectionPoints[c]={}),this._codeInjectionPoints[c][D]=!0}_injectCustomCode(c,r){return(D,W)=>{var B;r&&(W=r(D,W)),this._uboDeclaration&&(W=W.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(W=W.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(W=W.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const t=null===(B=this._codeInjectionPoints)||void 0===B?void 0:B[D];if(!t)return W;let u=null;for(let r in t){let B="";for(const W of this._activePlugins){var M;let t=null===(M=W.getCustomCode(D,this._material.shaderLanguage))||void 0===M?void 0:M[r];if(t){if(W.resolveIncludes){if(null===u){const r=0;u={defines:[],indexParameters:c.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:H.d.GetShadersRepository(r),includesShadersStore:H.d.GetIncludesShadersStore(r),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}u.isFragment="fragment"===D,(0,a.h)(t,u,(c=>t=c))}B+=t+"\n"}}if(B.length>0)if("!"===r.charAt(0)){r=r.substring(1);let c="g";if("!"===r.charAt(0))c="",r=r.substring(1);else{const D=x.exec(r);D&&D.length>=2&&(c=D[1],r=r.substring(c.length+1))}c.indexOf("g")<0&&(c+="g");const D=W,t=new RegExp(r,c);let u=t.exec(D);for(;null!==u;){let c=B;for(let r=0;r<u.length;++r)c=c.replace("$"+r,u[r]);W=W.replace(u[0],c),u=t.exec(D)}}else{const c="#define "+r;W=W.replace(c,"\n"+B+"\n"+c)}}return W}}}M._MaterialPluginClassToMainDefine={},M._MaterialPluginCounter=0,u.c.OnEnginesDisposedObservable.add((()=>{v()}));const E=[];let m=!1,Y=null;function v(){E.length=0,m=!1,t.c.OnEventObservable.remove(Y),Y=null}var k=D(11717),w=D(11637);class Z{isCompatible(c){return 0===c}_enable(c){c&&this._pluginManager._activatePlugin(this)}constructor(c,r,D,W){let B=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=c,this.name=r,this.priority=D,this.resolveIncludes=u,c.pluginManager||(c.pluginManager=new M(c),c.Wa.add((()=>{c.pluginManager=void 0}))),this._pluginDefineNames=W,this._pluginManager=c.pluginManager,B&&this._pluginManager._addPlugin(this),t&&this._enable(!0),this.markAllDefinesAsDirty=c._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(c,r,D,W){return!0}hardBindForSubMesh(c,r,D,W){}bindForSubMesh(c,r,D,W){}dispose(c){}getCustomCode(c){return null}collectDefines(c){if(this._pluginDefineNames)for(const r of Object.keys(this._pluginDefineNames)){if("_"===r[0])continue;const D=typeof this._pluginDefineNames[r];c[r]={type:"number"===D?"number":"string"===D?"string":"boolean"===D?"boolean":"object",default:this._pluginDefineNames[r]}}}prepareDefinesBeforeAttributes(c,r,D){}prepareDefines(c,r,D){}hasTexture(c){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(c){}getActiveTextures(c){}getAnimatables(c){}addFallbacks(c,r,D){return D}getSamplers(c){}getAttributes(c,r,D){}getUniformBuffersNames(c){}getUniforms(){return{}}copyTo(c){k.d.Clone((()=>c),this)}serialize(){return k.d.Serialize(this)}parse(c,r,D){k.d.Parse((()=>this),c,r,D)}}(0,W.e)([(0,B.K)()],Z.prototype,"name",void 0),(0,W.e)([(0,B.K)()],Z.prototype,"priority",void 0),(0,W.e)([(0,B.K)()],Z.prototype,"resolveIncludes",void 0),(0,W.e)([(0,B.K)()],Z.prototype,"registerForExtraEvents",void 0),(0,w.e)("BABYLON.MaterialPluginBase",Z)},12057:(c,r,D)=>{D.d(r,{d:()=>W});class W{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(c){c.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(c){}bindForSubMesh(c,r,D,W,B){if(r.prePassRenderer&&r.prePassRenderer.enabled&&r.prePassRenderer.currentRTisSceneRT&&(-1!==r.prePassRenderer.getIndex(2)||-1!==r.prePassRenderer.getIndex(11))){this.previousWorldMatrices[D.uniqueId]||(this.previousWorldMatrices[D.uniqueId]=W.clone()),this.previousViewProjection||(this.previousViewProjection=r.getTransformMatrix().clone(),this.currentViewProjection=r.getTransformMatrix().clone());const B=r.getEngine();this.currentViewProjection.updateFlag!==r.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=B.frameId,this.previousViewProjection.t(this.currentViewProjection),this.currentViewProjection.t(r.getTransformMatrix())):this._lastUpdateFrameId!==B.frameId&&(this._lastUpdateFrameId=B.frameId,this.previousViewProjection.t(this.currentViewProjection)),c.setMatrix("previousWorld",this.previousWorldMatrices[D.uniqueId]),c.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[D.uniqueId]=W.clone()}}}},12055:(c,r,D)=>{D.d(r,{jr:()=>N});var W=D(11664),B=D(11669),t=D(11766),u=D(11924),a=D(11722),H=D(11750),x=D(12057),M=D(11931),E=D(12010),m=D(12061),Y=D(12008),v=D(11656),k=D(11637),w=D(12063),Z=D(12003),J=D(12071),q=D(12050),j=D(12048),X=D(11717),e=D(12079);const y={effect:null,subMesh:null};class U extends m.c{constructor(c){super(c),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(c){const r=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const D of r)this[D]=D===c}}class N extends Y.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(c){this._attachImageProcessingConfiguration(c),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(c){c!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=c||this.yc().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(c){this.imageProcessingConfiguration.colorCurvesEnabled=c}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(c){this.imageProcessingConfiguration.colorGradingEnabled=c}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(c){this._imageProcessingConfiguration.toneMappingEnabled=c}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(c){this._imageProcessingConfiguration.exposure=c}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(c){this._imageProcessingConfiguration.contrast=c}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(c){this._imageProcessingConfiguration.colorGradingTexture=c}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(c){this._imageProcessingConfiguration.colorCurves=c}get canRenderToMRT(){return!0}constructor(c,r){super(c,r,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||N.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new a.Xr(0,0,0),this.diffuseColor=new a.Xr(1,1,1),this.specularColor=new a.Xr(1,1,1),this.emissiveColor=new a.Xr(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new t.e(16),this._globalAmbientColor=new a.Xr(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new J.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new x.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),N.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),N.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(N.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(N.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"jr"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===E.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Ea&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==E.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Ea||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(c,r){let W=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const B=r._drawWrapper;if(B.effect&&this.isFrozen&&B._wasPreviouslyReady&&B._wasPreviouslyUsingInstances===W)return!0;r.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),r.materialDefines=new U(this._eventInfo.defineNames));const t=this.yc(),u=r.materialDefines;if(this._isReadyForSubMesh(r))return!0;const a=t.getEngine();u._needNormals=(0,j.M)(t,c,u,!0,this._maxSimultaneousLights,this._disableLighting),(0,j.Q)(t,u);const E=this.needAlphaBlendingForMesh(c)&&this.yc().useOrderIndependentTransparency;if((0,j.T)(t,u,this.canRenderToMRT&&!E),(0,j.R)(t,u,E),e.e.PrepareDefines(a.currentRenderPassId,c,u),u._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,u._needUVs=!1;for(let c=1;c<=6;++c)u["MAINUV"+c]=!1;if(t.texturesEnabled){if(u.DIFFUSEDIRECTUV=0,u.BUMPDIRECTUV=0,u.AMBIENTDIRECTUV=0,u.OPACITYDIRECTUV=0,u.EMISSIVEDIRECTUV=0,u.SPECULARDIRECTUV=0,u.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&N.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._diffuseTexture,u,"DIFFUSE")}else u.DIFFUSE=!1;if(this._ambientTexture&&N.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._ambientTexture,u,"AMBIENT")}else u.AMBIENT=!1;if(this._opacityTexture&&N.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._opacityTexture,u,"OPACITY"),u.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else u.OPACITY=!1;if(this._reflectionTexture&&N.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(u._needNormals=!0,u.REFLECTION=!0,u.ROUGHNESS=this._roughness>0,u.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,u.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===v.b.INVCUBIC_MODE,u.REFLECTIONMAP_3D=this._reflectionTexture.isCube,u.REFLECTIONMAP_OPPOSITEZ=u.REFLECTIONMAP_3D&&this.yc().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,u.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case v.b.EXPLICIT_MODE:u.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case v.b.PLANAR_MODE:u.setReflectionMode("REFLECTIONMAP_PLANAR");break;case v.b.PROJECTION_MODE:u.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case v.b.SKYBOX_MODE:u.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case v.b.SPHERICAL_MODE:u.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case v.b.EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case v.b.FIXED_EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case v.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:u.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case v.b.CUBIC_MODE:case v.b.INVCUBIC_MODE:default:u.setReflectionMode("REFLECTIONMAP_CUBIC")}u.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else u.REFLECTION=!1,u.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&N.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._emissiveTexture,u,"EMISSIVE")}else u.EMISSIVE=!1;if(this._lightmapTexture&&N.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._lightmapTexture,u,"LIGHTMAP"),u.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,u.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else u.LIGHTMAP=!1;if(this._specularTexture&&N.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,j.N)(this._specularTexture,u,"SPECULAR"),u.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else u.SPECULAR=!1;if(t.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&N.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,j.N)(this._bumpTexture,u,"BUMP"),u.PARALLAX=this._useParallax,u.PARALLAX_RHS=t.useRightHandedSystem,u.PARALLAXOCCLUSION=this._useParallaxOcclusion,u.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else u.BUMP=!1,u.PARALLAX=!1,u.PARALLAX_RHS=!1,u.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&N.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;u._needUVs=!0,u.REFRACTION=!0,u.REFRACTIONMAP_3D=this._refractionTexture.isCube,u.RGBDREFRACTION=this._refractionTexture.isRGBD,u.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else u.REFRACTION=!1;u.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else u.DIFFUSE=!1,u.AMBIENT=!1,u.OPACITY=!1,u.REFLECTION=!1,u.EMISSIVE=!1,u.LIGHTMAP=!1,u.BUMP=!1,u.REFRACTION=!1;u.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),u.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,u.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,u.SPECULAROVERALPHA=this._useSpecularOverAlpha,u.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,u.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,u.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(c)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=u,this._eventInfo.subMesh=r,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(u._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(u),u.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,u.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(u._areFresnelDirty&&(N.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(u.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,u.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,u.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,u.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,u.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,u.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,u._needNormals=!0,u.FRESNEL=!0):u.FRESNEL=!1),u.AREALIGHTUSED)for(let D=0;D<c.lightSources.length;D++)if(!c.lightSources[D]._isReady())return!1;(0,j.O)(c,t,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(c),u,this._applyDecalMapAfterDetailMap),(0,j.L)(t,a,this,u,W,null,r.getRenderingMesh().hasThinInstances),this._eventInfo.defines=u,this._eventInfo.mesh=c,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,j.K)(c,u,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let m=!1;if(u.isDirty){const W=u._areLightsDisposed;u.markAsProcessed();const B=new Z.c;u.REFLECTION&&B.addFallback(0,"REFLECTION"),u.SPECULAR&&B.addFallback(0,"SPECULAR"),u.BUMP&&B.addFallback(0,"BUMP"),u.PARALLAX&&B.addFallback(1,"PARALLAX"),u.PARALLAX_RHS&&B.addFallback(1,"PARALLAX_RHS"),u.PARALLAXOCCLUSION&&B.addFallback(0,"PARALLAXOCCLUSION"),u.SPECULAROVERALPHA&&B.addFallback(0,"SPECULAROVERALPHA"),u.FOG&&B.addFallback(1,"FOG"),u.POINTSIZE&&B.addFallback(0,"POINTSIZE"),u.LOGARITHMICDEPTH&&B.addFallback(0,"LOGARITHMICDEPTH"),(0,j.r)(u,B,this._maxSimultaneousLights),u.SPECULARTERM&&B.addFallback(0,"SPECULARTERM"),u.DIFFUSEFRESNEL&&B.addFallback(1,"DIFFUSEFRESNEL"),u.OPACITYFRESNEL&&B.addFallback(2,"OPACITYFRESNEL"),u.REFLECTIONFRESNEL&&B.addFallback(3,"REFLECTIONFRESNEL"),u.EMISSIVEFRESNEL&&B.addFallback(4,"EMISSIVEFRESNEL"),u.FRESNEL&&B.addFallback(4,"FRESNEL"),u.MULTIVIEW&&B.addFallback(0,"MULTIVIEW");const E=[H.d.PositionKind];u.NORMAL&&E.push(H.d.NormalKind),u.TANGENT&&E.push(H.d.TangentKind);for(let c=1;c<=6;++c)u["UV"+c]&&E.push(`uv${1===c?"":c}`);u.VERTEXCOLOR&&E.push(H.d.ColorKind),(0,j.v)(E,c,u,B),(0,j.z)(E,u),(0,j.C)(E,c,u),(0,j.t)(E,c,u);let Y="default";const v=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],k=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],w=["Material","Scene","Mesh"],J={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:u.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=B,this._eventInfo.fallbackRank=0,this._eventInfo.defines=u,this._eventInfo.uniforms=v,this._eventInfo.attributes=E,this._eventInfo.samplers=k,this._eventInfo.uniformBuffersNames=w,this._eventInfo.customCode=void 0,this._eventInfo.mesh=c,this._eventInfo.indexParameters=J,this._callbackPluginEventGeneric(128,this._eventInfo),e.e.AddUniformsAndSamplers(v,k),x.d.AddUniforms(v),x.d.AddSamplers(k),M.e&&(M.e.PrepareUniforms(v,u),M.e.PrepareSamplers(k,u)),(0,j.U)({uniformsNames:v,uniformBuffersNames:w,samplers:k,defines:u,maxSimultaneousLights:this._maxSimultaneousLights}),(0,q.c)(v);const X={};this.customShaderNameResolve&&(Y=this.customShaderNameResolve(Y,v,w,k,u,E,X));const U=u.toString(),N=r.effect;let g=t.getEngine().createEffect(Y,{attributes:E,uniformsNames:v,uniformBuffersNames:w,samplers:k,defines:U,fallbacks:B,onCompiled:this.onCompiled,onError:this.onError,indexParameters:J,processFinalCode:X.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:u.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([D.e(41),D.e(64)]).then(D.bind(D,14225)),Promise.all([D.e(39),D.e(65)]).then(D.bind(D,14384))]):await Promise.all([Promise.all([D.e(34),D.e(67)]).then(D.bind(D,14475)),Promise.all([D.e(33),D.e(68)]).then(D.bind(D,14618))]),this._shadersLoaded=!0}},a);if(this._eventInfo.customCode=void 0,g)if(this._onEffectCreatedObservable&&(y.effect=g,y.subMesh=r,this._onEffectCreatedObservable.notifyObservers(y)),this.allowShaderHotSwapping&&N&&!g.isReady()){if(g=N,u.markAsUnprocessed(),m=this.isFrozen,W)return u._areLightsDisposed=!0,!1}else t.resetCachedMaterial(),r.setEffect(g,u,this._materialContext)}return!(!r.effect||!r.effect.isReady())&&(u._renderId=t.getRenderId(),B._wasPreviouslyReady=!m,B._wasPreviouslyUsingInstances=W,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const c=this._uniformBuffer;c.addUniform("diffuseLeftColor",4),c.addUniform("diffuseRightColor",4),c.addUniform("opacityParts",4),c.addUniform("reflectionLeftColor",4),c.addUniform("reflectionRightColor",4),c.addUniform("refractionLeftColor",4),c.addUniform("refractionRightColor",4),c.addUniform("emissiveLeftColor",4),c.addUniform("emissiveRightColor",4),c.addUniform("vDiffuseInfos",2),c.addUniform("vAmbientInfos",2),c.addUniform("vOpacityInfos",2),c.addUniform("vReflectionInfos",2),c.addUniform("vReflectionPosition",3),c.addUniform("vReflectionSize",3),c.addUniform("vEmissiveInfos",2),c.addUniform("vLightmapInfos",2),c.addUniform("vSpecularInfos",2),c.addUniform("vBumpInfos",3),c.addUniform("diffuseMatrix",16),c.addUniform("ambientMatrix",16),c.addUniform("opacityMatrix",16),c.addUniform("reflectionMatrix",16),c.addUniform("emissiveMatrix",16),c.addUniform("lightmapMatrix",16),c.addUniform("specularMatrix",16),c.addUniform("bumpMatrix",16),c.addUniform("vTangentSpaceParams",2),c.addUniform("pointSize",1),c.addUniform("alphaCutOff",1),c.addUniform("refractionMatrix",16),c.addUniform("vRefractionInfos",4),c.addUniform("vRefractionPosition",3),c.addUniform("vRefractionSize",3),c.addUniform("vSpecularColor",4),c.addUniform("vEmissiveColor",3),c.addUniform("vDiffuseColor",4),c.addUniform("vAmbientColor",3),c.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(c,r,D){const W=this.yc(),B=D.materialDefines;if(!B)return;const t=D.effect;if(!t)return;this._activeEffect=t,r.getMeshUniformBuffer().bindToEffect(t,"Mesh"),r.transferToEffect(c),this._uniformBuffer.bindToEffect(t,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,W,r,c,this.isFrozen),e.e.Bind(W.getEngine().currentRenderPassId,this._activeEffect,r,c,this);const H=W.activeCamera;H?this._uniformBuffer.updateFloat4("cameraInfo",H.ma,H.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=D,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),B.OBJECTSPACE_NORMALMAP&&(c.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const x=this._mustRebind(W,t,D,r.visibility);(0,j.b)(r,t);const M=this._uniformBuffer;if(x){if(this.bindViewProjection(t),!M.useUbo||!this.isFrozen||!M.isSync||D._drawWrapper._forceRebindOnNextCall){if(N.FresnelEnabled&&B.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(M.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),M.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&M.updateColor4("opacityParts",new a.Xr(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(M.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),M.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(M.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),M.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(M.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),M.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),W.texturesEnabled){if(this._diffuseTexture&&N.DiffuseTextureEnabled&&(M.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,j.p)(this._diffuseTexture,M,"diffuse")),this._ambientTexture&&N.AmbientTextureEnabled&&(M.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,j.p)(this._ambientTexture,M,"ambient")),this._opacityTexture&&N.OpacityTextureEnabled&&(M.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,j.p)(this._opacityTexture,M,"opacity")),this._hasAlphaChannel()&&M.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&N.ReflectionTextureEnabled){if(M.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),M.Ya("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const c=this._reflectionTexture;M.updateVector3("vReflectionPosition",c.boundingBoxPosition),M.updateVector3("vReflectionSize",c.boundingBoxSize)}}else M.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&N.EmissiveTextureEnabled&&(M.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,j.p)(this._emissiveTexture,M,"emissive")),this._lightmapTexture&&N.LightmapTextureEnabled&&(M.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,j.p)(this._lightmapTexture,M,"lightmap")),this._specularTexture&&N.SpecularTextureEnabled&&(M.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,j.p)(this._specularTexture,M,"specular")),this._bumpTexture&&W.getEngine().getCaps().standardDerivatives&&N.BumpTextureEnabled&&(M.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,j.p)(this._bumpTexture,M,"bump"),W._mirroredCameraPosition?M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):M.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&N.RefractionTextureEnabled){let c=1;if(this._refractionTexture.isCube||(M.Ya("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(c=this._refractionTexture.depth)),M.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,c,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const c=this._refractionTexture;M.updateVector3("vRefractionPosition",c.boundingBoxPosition),M.updateVector3("vRefractionSize",c.boundingBoxSize)}}}this.pointsCloud&&M.updateFloat("pointSize",this.pointSize),M.updateColor4("vSpecularColor",this.specularColor,this.specularPower),M.updateColor3("vEmissiveColor",N.EmissiveTextureEnabled?this.emissiveColor:a.Xr.BlackReadOnly),M.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),W.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),M.updateColor3("vAmbientColor",this._globalAmbientColor)}W.texturesEnabled&&(this._diffuseTexture&&N.DiffuseTextureEnabled&&t.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&N.AmbientTextureEnabled&&t.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&N.OpacityTextureEnabled&&t.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&N.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?t.setTexture("reflectionCubeSampler",this._reflectionTexture):t.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&N.EmissiveTextureEnabled&&t.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&N.LightmapTextureEnabled&&t.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&N.SpecularTextureEnabled&&t.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&W.getEngine().getCaps().standardDerivatives&&N.BumpTextureEnabled&&t.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&N.RefractionTextureEnabled&&(this._refractionTexture.isCube?t.setTexture("refractionCubeSampler",this._refractionTexture):t.setTexture("refraction2DSampler",this._refractionTexture))),this.yc().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(r)&&this.yc().depthPeelingRenderer.bind(t),this._eventInfo.subMesh=D,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,q.d)(t,this,W),this.bindEyePosition(t)}else W.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(x||!this.isFrozen){var E;if(W.lightsEnabled&&!this._disableLighting&&(0,j.i)(W,r,t,B,this._maxSimultaneousLights),(W.fogEnabled&&r.applyFog&&W.fogMode!==u.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||r.receiveShadows||B.PREPASS)&&this.bindView(t),(0,j.f)(W,r,t),B.NUM_MORPH_INFLUENCERS&&(0,j.n)(r,t),B.BAKED_VERTEX_ANIMATION_TEXTURE)null===(E=r.bakedVertexAnimationManager)||void 0===E||E.bind(t,B.INSTANCES);this.useLogarithmicDepth&&(0,j.m)(B,t,W),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(r,this._activeEffect,D),M.update()}getAnimatables(){const c=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&c.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&c.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&c.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&c.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&c.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&c.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&c.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&c.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&c.push(this._refractionTexture),c}getActiveTextures(){const c=super.getActiveTextures();return this._diffuseTexture&&c.push(this._diffuseTexture),this._ambientTexture&&c.push(this._ambientTexture),this._opacityTexture&&c.push(this._opacityTexture),this._reflectionTexture&&c.push(this._reflectionTexture),this._emissiveTexture&&c.push(this._emissiveTexture),this._specularTexture&&c.push(this._specularTexture),this._bumpTexture&&c.push(this._bumpTexture),this._lightmapTexture&&c.push(this._lightmapTexture),this._refractionTexture&&c.push(this._refractionTexture),c}hasTexture(c){return!!super.hasTexture(c)||(this._diffuseTexture===c||(this._ambientTexture===c||(this._opacityTexture===c||(this._reflectionTexture===c||(this._emissiveTexture===c||(this._specularTexture===c||(this._bumpTexture===c||(this._lightmapTexture===c||this._refractionTexture===c))))))))}dispose(c,r){var D,W,B,t,u,a,H,x,M;r&&(null===(D=this._diffuseTexture)||void 0===D||D.dispose(),null===(W=this._ambientTexture)||void 0===W||W.dispose(),null===(B=this._opacityTexture)||void 0===B||B.dispose(),null===(t=this._reflectionTexture)||void 0===t||t.dispose(),null===(u=this._emissiveTexture)||void 0===u||u.dispose(),null===(a=this._specularTexture)||void 0===a||a.dispose(),null===(H=this._bumpTexture)||void 0===H||H.dispose(),null===(x=this._lightmapTexture)||void 0===x||x.dispose(),null===(M=this._refractionTexture)||void 0===M||M.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(c,r)}clone(c){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const W=X.d.Clone((()=>new N(c,this.yc())),this,{cloneTexturesOnlyOnce:r});return W.name=c,W.id=c,this.stencil.copyTo(W.stencil),this._clonePlugins(W,D),W}static Parse(c,r,D){const W=X.d.Parse((()=>new N(c.name,r)),c,r,D);return c.stencil&&W.stencil.parse(c.stencil,r,D),E.c._ParsePlugins(c,W,r,D),W}static get DiffuseTextureEnabled(){return w.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(c){w.e.DiffuseTextureEnabled=c}static get DetailTextureEnabled(){return w.e.DetailTextureEnabled}static set DetailTextureEnabled(c){w.e.DetailTextureEnabled=c}static get AmbientTextureEnabled(){return w.e.AmbientTextureEnabled}static set AmbientTextureEnabled(c){w.e.AmbientTextureEnabled=c}static get OpacityTextureEnabled(){return w.e.OpacityTextureEnabled}static set OpacityTextureEnabled(c){w.e.OpacityTextureEnabled=c}static get ReflectionTextureEnabled(){return w.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(c){w.e.ReflectionTextureEnabled=c}static get EmissiveTextureEnabled(){return w.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(c){w.e.EmissiveTextureEnabled=c}static get SpecularTextureEnabled(){return w.e.SpecularTextureEnabled}static set SpecularTextureEnabled(c){w.e.SpecularTextureEnabled=c}static get BumpTextureEnabled(){return w.e.BumpTextureEnabled}static set BumpTextureEnabled(c){w.e.BumpTextureEnabled=c}static get LightmapTextureEnabled(){return w.e.LightmapTextureEnabled}static set LightmapTextureEnabled(c){w.e.LightmapTextureEnabled=c}static get RefractionTextureEnabled(){return w.e.RefractionTextureEnabled}static set RefractionTextureEnabled(c){w.e.RefractionTextureEnabled=c}static get ColorGradingTextureEnabled(){return w.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(c){w.e.ColorGradingTextureEnabled=c}static get FresnelEnabled(){return w.e.FresnelEnabled}static set FresnelEnabled(c){w.e.FresnelEnabled=c}}N.ForceGLSL=!1,(0,W.e)([(0,B.F)("diffuseTexture")],N.prototype,"_diffuseTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],N.prototype,"diffuseTexture",void 0),(0,W.e)([(0,B.F)("ambientTexture")],N.prototype,"_ambientTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"ambientTexture",void 0),(0,W.e)([(0,B.F)("opacityTexture")],N.prototype,"_opacityTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],N.prototype,"opacityTexture",void 0),(0,W.e)([(0,B.F)("reflectionTexture")],N.prototype,"_reflectionTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"reflectionTexture",void 0),(0,W.e)([(0,B.F)("emissiveTexture")],N.prototype,"_emissiveTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"emissiveTexture",void 0),(0,W.e)([(0,B.F)("specularTexture")],N.prototype,"_specularTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"specularTexture",void 0),(0,W.e)([(0,B.F)("bumpTexture")],N.prototype,"_bumpTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"bumpTexture",void 0),(0,W.e)([(0,B.F)("lightmapTexture")],N.prototype,"_lightmapTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"lightmapTexture",void 0),(0,W.e)([(0,B.F)("refractionTexture")],N.prototype,"_refractionTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"refractionTexture",void 0),(0,W.e)([(0,B.i)("ambient")],N.prototype,"ambientColor",void 0),(0,W.e)([(0,B.i)("diffuse")],N.prototype,"diffuseColor",void 0),(0,W.e)([(0,B.i)("specular")],N.prototype,"specularColor",void 0),(0,W.e)([(0,B.i)("emissive")],N.prototype,"emissiveColor",void 0),(0,W.e)([(0,B.K)()],N.prototype,"specularPower",void 0),(0,W.e)([(0,B.K)("useAlphaFromDiffuseTexture")],N.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],N.prototype,"useAlphaFromDiffuseTexture",void 0),(0,W.e)([(0,B.K)("useEmissiveAsIllumination")],N.prototype,"_useEmissiveAsIllumination",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useEmissiveAsIllumination",void 0),(0,W.e)([(0,B.K)("linkEmissiveWithDiffuse")],N.prototype,"_linkEmissiveWithDiffuse",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"linkEmissiveWithDiffuse",void 0),(0,W.e)([(0,B.K)("useSpecularOverAlpha")],N.prototype,"_useSpecularOverAlpha",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useSpecularOverAlpha",void 0),(0,W.e)([(0,B.K)("useReflectionOverAlpha")],N.prototype,"_useReflectionOverAlpha",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useReflectionOverAlpha",void 0),(0,W.e)([(0,B.K)("disableLighting")],N.prototype,"_disableLighting",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsLightsDirty")],N.prototype,"disableLighting",void 0),(0,W.e)([(0,B.K)("useObjectSpaceNormalMap")],N.prototype,"_useObjectSpaceNormalMap",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useObjectSpaceNormalMap",void 0),(0,W.e)([(0,B.K)("useParallax")],N.prototype,"_useParallax",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useParallax",void 0),(0,W.e)([(0,B.K)("useParallaxOcclusion")],N.prototype,"_useParallaxOcclusion",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useParallaxOcclusion",void 0),(0,W.e)([(0,B.K)()],N.prototype,"parallaxScaleBias",void 0),(0,W.e)([(0,B.K)("roughness")],N.prototype,"_roughness",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"roughness",void 0),(0,W.e)([(0,B.K)()],N.prototype,"indexOfRefraction",void 0),(0,W.e)([(0,B.K)()],N.prototype,"invertRefractionY",void 0),(0,W.e)([(0,B.K)()],N.prototype,"alphaCutOff",void 0),(0,W.e)([(0,B.K)("useLightmapAsShadowmap")],N.prototype,"_useLightmapAsShadowmap",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useLightmapAsShadowmap",void 0),(0,W.e)([(0,B.p)("diffuseFresnelParameters")],N.prototype,"_diffuseFresnelParameters",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],N.prototype,"diffuseFresnelParameters",void 0),(0,W.e)([(0,B.p)("opacityFresnelParameters")],N.prototype,"_opacityFresnelParameters",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],N.prototype,"opacityFresnelParameters",void 0),(0,W.e)([(0,B.p)("reflectionFresnelParameters")],N.prototype,"_reflectionFresnelParameters",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],N.prototype,"reflectionFresnelParameters",void 0),(0,W.e)([(0,B.p)("refractionFresnelParameters")],N.prototype,"_refractionFresnelParameters",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],N.prototype,"refractionFresnelParameters",void 0),(0,W.e)([(0,B.p)("emissiveFresnelParameters")],N.prototype,"_emissiveFresnelParameters",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],N.prototype,"emissiveFresnelParameters",void 0),(0,W.e)([(0,B.K)("useReflectionFresnelFromSpecular")],N.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],N.prototype,"useReflectionFresnelFromSpecular",void 0),(0,W.e)([(0,B.K)("useGlossinessFromSpecularMapAlpha")],N.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,W.e)([(0,B.K)("maxSimultaneousLights")],N.prototype,"_maxSimultaneousLights",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsLightsDirty")],N.prototype,"maxSimultaneousLights",void 0),(0,W.e)([(0,B.K)("invertNormalMapX")],N.prototype,"_invertNormalMapX",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"invertNormalMapX",void 0),(0,W.e)([(0,B.K)("invertNormalMapY")],N.prototype,"_invertNormalMapY",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"invertNormalMapY",void 0),(0,W.e)([(0,B.K)("twoSidedLighting")],N.prototype,"_twoSidedLighting",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],N.prototype,"twoSidedLighting",void 0),(0,W.e)([(0,B.K)("applyDecalMapAfterDetailMap")],N.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,W.e)([(0,B.b)("_markAllSubMeshesAsMiscDirty")],N.prototype,"applyDecalMapAfterDetailMap",void 0),(0,k.e)("BABYLON.StandardMaterial",N),u.b.DefaultMaterialFactory=c=>new N("default material",c)}}]);