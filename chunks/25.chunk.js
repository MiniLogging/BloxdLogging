"use strict";(self.irtrrknfyfo=self.irtrrknfyfo||[]).push([[25],{11783:(B,E,v)=>{v.d(E,{c:()=>y});var z=v(11366),o=v(11706),q=v(11372),c=v(11777),S=v(11772),x=v(11789),D=v(11749);class h extends S.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class y extends x.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(B){let E=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(B,"DetailMap",140,new h,E),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=o.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=B._dirtyCallbacks[1]}isReadyForSubMesh(B,E,v){return!this._isEnabled||!(B._areTexturesDirty&&E.texturesEnabled&&v.getCaps().standardDerivatives&&this._texture&&c.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(B,E){if(this._isEnabled){B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const v=E.getEngine();B._areTexturesDirty&&(v.getCaps().standardDerivatives&&this._texture&&c.b.DetailTextureEnabled&&this._isEnabled?((0,D.T)(this._texture,B,"DETAIL"),B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):B.DETAIL=!1)}else B.DETAIL=!1}bindForSubMesh(B,E){if(!this._isEnabled)return;const v=this._material.isFrozen;B.useUbo&&v&&B.isSync||this._texture&&c.b.DetailTextureEnabled&&(B.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,D.q)(this._texture,B,"detail")),E.texturesEnabled&&this._texture&&c.b.DetailTextureEnabled&&B.setTexture("detailSampler",this._texture)}hasTexture(B){return this._texture===B}getActiveTextures(B){this._texture&&B.push(this._texture)}getAnimatables(B){this._texture&&this._texture.animations&&this._texture.animations.length>0&&B.push(this._texture)}dispose(B){var E;B&&(null===(E=this._texture)||void 0===E||E.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(B){B.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,z.c)([(0,q.E)("detailTexture"),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"texture",void 0),(0,z.c)([(0,q.K)()],y.prototype,"diffuseBlendLevel",void 0),(0,z.c)([(0,q.K)()],y.prototype,"roughnessBlendLevel",void 0),(0,z.c)([(0,q.K)()],y.prototype,"bumpLevel",void 0),(0,z.c)([(0,q.K)(),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"normalBlendMethod",void 0),(0,z.c)([(0,q.K)(),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"isEnabled",void 0)},11772:(B,E,v)=>{v.d(E,{c:()=>z});class z{constructor(B){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=B,B)for(const E in B)Object.prototype.hasOwnProperty.call(B,E)&&this._setDefaultValue(E)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||B,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const B of Object.keys(this))"_"!==B[0]&&this._keys.push(B);if(this._externalProperties)for(const B in this._externalProperties)-1===this._keys.indexOf(B)&&this._keys.push(B)}isEqual(B){if(this._keys.length!==B._keys.length)return!1;for(let E=0;E<this._keys.length;E++){const v=this._keys[E];if(this[v]!==B[v])return!1}return!0}cloneTo(B){this._keys.length!==B._keys.length&&(B._keys=this._keys.slice(0));for(let E=0;E<this._keys.length;E++){const v=this._keys[E];B[v]=this[v]}}reset(){for(const B of this._keys)this._setDefaultValue(B)}_setDefaultValue(B){var E,v,z,o;const q=(null===(E=this._externalProperties)||void 0===E||null===(v=E[B])||void 0===v?void 0:v.type)??typeof this[B],c=null===(z=this._externalProperties)||void 0===z||null===(o=z[B])||void 0===o?void 0:o.default;switch(q){case"number":this[B]=c??0;break;case"string":this[B]=c??"";break;default:this[B]=c??!1}}toString(){let B="";for(let E=0;E<this._keys.length;E++){const v=this._keys[E],z=this[v];switch(typeof z){case"number":case"string":B+="#define "+v+" "+z+"\n";break;default:z&&(B+="#define "+v+"\n")}}return B}}},11777:(B,E,v)=>{v.d(E,{b:()=>o});var z=v(11282);class o{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){this._DiffuseTextureEnabled!==B&&(this._DiffuseTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(B){this._BaseWeightTextureEnabled!==B&&(this._BaseWeightTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(B){this._BaseDiffuseRoughnessTextureEnabled!==B&&(this._BaseDiffuseRoughnessTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(B){this._DetailTextureEnabled!==B&&(this._DetailTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(B){this._DecalMapEnabled!==B&&(this._DecalMapEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(B){this._AmbientTextureEnabled!==B&&(this._AmbientTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(B){this._OpacityTextureEnabled!==B&&(this._OpacityTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){this._ReflectionTextureEnabled!==B&&(this._ReflectionTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){this._EmissiveTextureEnabled!==B&&(this._EmissiveTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(B){this._SpecularTextureEnabled!==B&&(this._SpecularTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(B){this._BumpTextureEnabled!==B&&(this._BumpTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(B){this._LightmapTextureEnabled!==B&&(this._LightmapTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(B){this._RefractionTextureEnabled!==B&&(this._RefractionTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){this._ColorGradingTextureEnabled!==B&&(this._ColorGradingTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(B){this._FresnelEnabled!==B&&(this._FresnelEnabled=B,z.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(B){this._ClearCoatTextureEnabled!==B&&(this._ClearCoatTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(B){this._ClearCoatBumpTextureEnabled!==B&&(this._ClearCoatBumpTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(B){this._ClearCoatTintTextureEnabled!==B&&(this._ClearCoatTintTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(B){this._SheenTextureEnabled!==B&&(this._SheenTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(B){this._AnisotropicTextureEnabled!==B&&(this._AnisotropicTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(B){this._ThicknessTextureEnabled!==B&&(this._ThicknessTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(B){this._RefractionIntensityTextureEnabled!==B&&(this._RefractionIntensityTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(B){this._TranslucencyIntensityTextureEnabled!==B&&(this._TranslucencyIntensityTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(B){this._TranslucencyColorTextureEnabled!==B&&(this._TranslucencyColorTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(B){this._IridescenceTextureEnabled!==B&&(this._IridescenceTextureEnabled=B,z.b.MarkAllMaterialsAsDirty(1))}}o._DiffuseTextureEnabled=!0,o._BaseWeightTextureEnabled=!0,o._BaseDiffuseRoughnessTextureEnabled=!0,o._DetailTextureEnabled=!0,o._DecalMapEnabled=!0,o._AmbientTextureEnabled=!0,o._OpacityTextureEnabled=!0,o._ReflectionTextureEnabled=!0,o._EmissiveTextureEnabled=!0,o._SpecularTextureEnabled=!0,o._BumpTextureEnabled=!0,o._LightmapTextureEnabled=!0,o._RefractionTextureEnabled=!0,o._ColorGradingTextureEnabled=!0,o._FresnelEnabled=!0,o._ClearCoatTextureEnabled=!0,o._ClearCoatBumpTextureEnabled=!0,o._ClearCoatTintTextureEnabled=!0,o._SheenTextureEnabled=!0,o._AnisotropicTextureEnabled=!0,o._ThicknessTextureEnabled=!0,o._RefractionIntensityTextureEnabled=!0,o._TranslucencyIntensityTextureEnabled=!0,o._TranslucencyColorTextureEnabled=!0,o._IridescenceTextureEnabled=!0},11798:(B,E,v)=>{v.d(E,{d:()=>q});var z,o=v(11380);!function(B){B[B.Zero=0]="Zero",B[B.One=1]="One",B[B.MaxViewZ=2]="MaxViewZ"}(z||(z={}));class q{static CreateConfiguration(B){return q._Configurations[B]={defines:{},previousWorldMatrices:{},previousViewProjection:o.Matrix.Zero(),currentViewProjection:o.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},q._Configurations[B]}static DeleteConfiguration(B){delete q._Configurations[B]}static GetConfiguration(B){return q._Configurations[B]}static AddUniformsAndSamplers(B,E){B.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(B,E){for(const v of E)if(v.qc)for(const E of v.qc)E._removeDrawWrapper(B)}static PrepareDefines(B,E,v){if(!v._arePrePassDirty)return;const z=q._Configurations[B];if(!z)return;v.PREPASS=!0,v.PREPASS_COLOR=!1,v.PREPASS_COLOR_INDEX=-1;let o=0;for(let c=0;c<q.GeometryTextureDescriptions.length;c++){const B=q.GeometryTextureDescriptions[c],E=B.define,S=B.defineIndex,x=z.defines[S];void 0!==x?(v[E]=!0,v[S]=x,o++):(v[E]=!1,delete v[S])}v.SCENE_MRT_COUNT=o,v.BONES_VELOCITY_ENABLED=E.useBones&&E.computeBonesUsingShaders&&E.skeleton&&!E.skeleton.isUsingTextureForMatrices&&-1===z.excludedSkinnedMesh.indexOf(E)}static Bind(B,E,v,z,o){const c=q._Configurations[B];if(!c)return;const S=v.rB(),x=S.getEngine();if(c.reverseCulling&&x.setStateCullFaceType(S._mirroredCameraPosition?o.cullBackFaces:!o.cullBackFaces),(void 0!==c.defines.PREPASS_VELOCITY_INDEX||void 0!==c.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(c.previousWorldMatrices[v.uniqueId]||(c.previousWorldMatrices[v.uniqueId]=z.clone()),c.previousViewProjection||(c.previousViewProjection=S.getTransformMatrix().clone(),c.currentViewProjection=S.getTransformMatrix().clone()),c.currentViewProjection.updateFlag!==S.getTransformMatrix().updateFlag?(c.lastUpdateFrameId=x.frameId,c.previousViewProjection.S(c.currentViewProjection),c.currentViewProjection.S(S.getTransformMatrix())):c.lastUpdateFrameId!==x.frameId&&(c.lastUpdateFrameId=x.frameId,c.previousViewProjection.S(c.currentViewProjection)),E.setMatrix("previousWorld",c.previousWorldMatrices[v.uniqueId]),E.setMatrix("previousViewProjection",c.previousViewProjection),c.previousWorldMatrices[v.uniqueId]=z.clone(),v.useBones&&v.computeBonesUsingShaders&&v.skeleton)){const B=v.skeleton;if(!B.isUsingTextureForMatrices||-1===E.getUniformIndex("boneTextureWidth")){const z=B.getTransformMatrices(v);z&&(c.previousBones[v.uniqueId]||(c.previousBones[v.uniqueId]=z.slice()),E.setMatrices("mPreviousBones",c.previousBones[v.uniqueId]),c.previousBones[v.uniqueId].set(z))}}}}q.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],q._Configurations={}},11789:(B,E,v)=>{v.d(E,{c:()=>m});var z=v(11366),o=v(11372),q=v(11706),c=v(11242),S=v(11266),x=v(11291);const D=new RegExp("^([gimus]+)!");class h{constructor(B){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=B,this._scene=B.rB(),this._engine=this._scene.getEngine()}_addPlugin(B){for(let z=0;z<this._plugins.length;++z)if(this._plugins[z].name===B.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!B.isCompatible(this._material.shaderLanguage))throw`The plugin "${B.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const E=B.getClassName();h._MaterialPluginClassToMainDefine[E]||(h._MaterialPluginClassToMainDefine[E]="MATERIALPLUGIN_"+ ++h._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(B,E)=>this._handlePluginEvent(B,E),this._plugins.push(B),this._plugins.sort(((B,E)=>B.priority-E.priority)),this._codeInjectionPoints={};const v={};v[h._MaterialPluginClassToMainDefine[E]]={type:"boolean",default:!0};for(const z of this._plugins)z.collectDefines(v),this._collectPointNames("vertex",z.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",z.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=v,!0}_activatePlugin(B){-1===this._activePlugins.indexOf(B)&&(this._activePlugins.push(B),this._activePlugins.sort(((B,E)=>B.priority-E.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),B.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(B),this._activePluginsForExtraEvents.sort(((B,E)=>B.priority-E.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(B){for(let E=0;E<this._plugins.length;++E)if(this._plugins[E].name===B)return this._plugins[E];return null}_handlePluginEventIsReadyForSubMesh(B){let E=!0;for(const v of this._activePlugins)E=E&&v.isReadyForSubMesh(B.defines,this._scene,this._engine,B.subMesh);B.isReadyForSubMesh=E}_handlePluginEventPrepareDefinesBeforeAttributes(B){for(const E of this._activePlugins)E.prepareDefinesBeforeAttributes(B.defines,this._scene,B.mesh)}_handlePluginEventPrepareDefines(B){for(const E of this._activePlugins)E.prepareDefines(B.defines,this._scene,B.mesh)}_handlePluginEventHardBindForSubMesh(B){for(const E of this._activePluginsForExtraEvents)E.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventBindForSubMesh(B){for(const E of this._activePlugins)E.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventHasRenderTargetTextures(B){let E=!1;for(const v of this._activePluginsForExtraEvents)if(E=v.hasRenderTargetTextures(),E)break;B.hasRenderTargetTextures=E}_handlePluginEventFillRenderTargetTextures(B){for(const E of this._activePluginsForExtraEvents)E.fillRenderTargetTextures(B.renderTargets)}_handlePluginEvent(B,E){switch(B){case 512:{const B=E;for(const E of this._activePlugins)E.getActiveTextures(B.activeTextures);break}case 256:{const B=E;for(const E of this._activePlugins)E.getAnimatables(B.animatables);break}case 1024:{const B=E;let v=!1;for(const E of this._activePlugins)if(v=E.hasTexture(B.texture),v)break;B.hasTexture=v;break}case 2:{const B=E;for(const E of this._plugins)E.dispose(B.forceDisposeTextures);break}case 4:E.defineNames=this._defineNamesFromPlugins;break;case 128:{const B=E;for(const E of this._activePlugins)B.fallbackRank=E.addFallbacks(B.defines,B.fallbacks,B.fallbackRank),E.getAttributes(B.attributes,this._scene,B.mesh);this._uniformList.length>0&&B.uniforms.push(...this._uniformList),this._samplerList.length>0&&B.samplers.push(...this._samplerList),this._uboList.length>0&&B.uniformBuffersNames.push(...this._uboList),B.customCode=this._injectCustomCode(B,B.customCode);break}case 8:{const B=E;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const v=1===this._material.shaderLanguage;for(const E of this._plugins){const z=E.getUniforms(this._material.shaderLanguage);if(z){if(z.ubo)for(const E of z.ubo){if(E.size&&E.type){const z=E.arraySize??0;if(B.ubo.addUniform(E.name,E.size,z),v){let B;switch(E.type){case"mat4":B="mat4x4f";break;case"float":B="f32";break;default:B=`${E.type}f`}this._uboDeclaration+=z>0?`uniform ${E.name}: array<${B}, ${z}>;\n`:`uniform ${E.name}: ${B};\n`}else this._uboDeclaration+=`${E.type} ${E.name}${z>0?`[${z}]`:""};\n`}this._uniformList.push(E.name)}z.vertex&&(this._vertexDeclaration+=z.vertex+"\n"),z.fragment&&(this._fragmentDeclaration+=z.fragment+"\n")}E.getSamplers(this._samplerList),E.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(B,E){if(E)for(const v in E)this._codeInjectionPoints[B]||(this._codeInjectionPoints[B]={}),this._codeInjectionPoints[B][v]=!0}_injectCustomCode(B,E){return(v,z)=>{var o;E&&(z=E(v,z)),this._uboDeclaration&&(z=z.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(z=z.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(z=z.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const q=null===(o=this._codeInjectionPoints)||void 0===o?void 0:o[v];if(!q)return z;let c=null;for(let E in q){let o="";for(const z of this._activePlugins){var h;let q=null===(h=z.getCustomCode(v,this._material.shaderLanguage))||void 0===h?void 0:h[E];if(q){if(z.resolveIncludes){if(null===c){const E=0;c={defines:[],indexParameters:B.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:x.c.GetShadersRepository(E),includesShadersStore:x.c.GetIncludesShadersStore(E),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}c.isFragment="fragment"===v,(0,S.l)(q,c,(B=>q=B))}o+=q+"\n"}}if(o.length>0)if("!"===E.charAt(0)){E=E.substring(1);let B="g";if("!"===E.charAt(0))B="",E=E.substring(1);else{const v=D.exec(E);v&&v.length>=2&&(B=v[1],E=E.substring(B.length+1))}B.indexOf("g")<0&&(B+="g");const v=z,q=new RegExp(E,B);let c=q.exec(v);for(;null!==c;){let B=o;for(let E=0;E<c.length;++E)B=B.replace("$"+E,c[E]);z=z.replace(c[0],B),c=q.exec(v)}}else{const B="#define "+E;z=z.replace(B,"\n"+o+"\n"+B)}}return z}}}h._MaterialPluginClassToMainDefine={},h._MaterialPluginCounter=0,c.b.OnEnginesDisposedObservable.add((()=>{G()}));const y=[];let Q=!1,P=null;function G(){y.length=0,Q=!1,q.c.OnEventObservable.remove(P),P=null}var Y=v(11409),a=v(11345);class m{isCompatible(B){return 0===B}_enable(B){B&&this._pluginManager._activatePlugin(this)}constructor(B,E,v,z){let o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=B,this.name=E,this.priority=v,this.resolveIncludes=c,B.pluginManager||(B.pluginManager=new h(B),B.eq.add((()=>{B.pluginManager=void 0}))),this._pluginDefineNames=z,this._pluginManager=B.pluginManager,o&&this._pluginManager._addPlugin(this),q&&this._enable(!0),this.markAllDefinesAsDirty=B._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(B,E,v,z){return!0}hardBindForSubMesh(B,E,v,z){}bindForSubMesh(B,E,v,z){}dispose(B){}getCustomCode(B){return null}collectDefines(B){if(this._pluginDefineNames)for(const E of Object.keys(this._pluginDefineNames)){if("_"===E[0])continue;const v=typeof this._pluginDefineNames[E];B[E]={type:"number"===v?"number":"string"===v?"string":"boolean"===v?"boolean":"object",default:this._pluginDefineNames[E]}}}prepareDefinesBeforeAttributes(B,E,v){}prepareDefines(B,E,v){}hasTexture(B){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(B){}getActiveTextures(B){}getAnimatables(B){}addFallbacks(B,E,v){return v}getSamplers(B){}getAttributes(B,E,v){}getUniformBuffersNames(B){}getUniforms(){return{}}copyTo(B){Y.b.Clone((()=>B),this)}serialize(){return Y.b.Serialize(this)}parse(B,E,v){Y.b.Parse((()=>this),B,E,v)}}(0,z.c)([(0,o.K)()],m.prototype,"name",void 0),(0,z.c)([(0,o.K)()],m.prototype,"priority",void 0),(0,z.c)([(0,o.K)()],m.prototype,"resolveIncludes",void 0),(0,z.c)([(0,o.K)()],m.prototype,"registerForExtraEvents",void 0),(0,a.f)("BABYLON.MaterialPluginBase",m)},11764:(B,E,v)=>{v.d(E,{c:()=>z});class z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(B){B.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(B){}bindForSubMesh(B,E,v,z,o){if(E.prePassRenderer&&E.prePassRenderer.enabled&&E.prePassRenderer.currentRTisSceneRT&&(-1!==E.prePassRenderer.getIndex(2)||-1!==E.prePassRenderer.getIndex(11))){this.previousWorldMatrices[v.uniqueId]||(this.previousWorldMatrices[v.uniqueId]=z.clone()),this.previousViewProjection||(this.previousViewProjection=E.getTransformMatrix().clone(),this.currentViewProjection=E.getTransformMatrix().clone());const o=E.getEngine();this.currentViewProjection.updateFlag!==E.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=o.frameId,this.previousViewProjection.S(this.currentViewProjection),this.currentViewProjection.S(E.getTransformMatrix())):this._lastUpdateFrameId!==o.frameId&&(this._lastUpdateFrameId=o.frameId,this.previousViewProjection.S(this.currentViewProjection)),B.setMatrix("previousWorld",this.previousWorldMatrices[v.uniqueId]),B.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[v.uniqueId]=z.clone()}}}},11756:(B,E,v)=>{v.d(E,{mE:()=>u});var z=v(11366),o=v(11372),q=v(11460),c=v(11601),S=v(11417),x=v(11442),D=v(11764),h=v(11605),y=v(11706),Q=v(11772),P=v(11697),G=v(11361),Y=v(11345),a=v(11777),m=v(11688),g=v(11783),V=v(11752),T=v(11749),N=v(11409),X=v(11798);const r={effect:null,subMesh:null};class i extends Q.c{constructor(B){super(B),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(B){const E=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const v of E)this[v]=v===B}}class u extends P.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(B){this._attachImageProcessingConfiguration(B),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(B){B!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=B||this.rB().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(B){this.imageProcessingConfiguration.colorCurvesEnabled=B}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(B){this.imageProcessingConfiguration.colorGradingEnabled=B}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(B){this._imageProcessingConfiguration.toneMappingEnabled=B}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(B){this._imageProcessingConfiguration.exposure=B}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(B){this._imageProcessingConfiguration.contrast=B}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(B){this._imageProcessingConfiguration.colorGradingTexture=B}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(B){this._imageProcessingConfiguration.colorCurves=B}get canRenderToMRT(){return!0}constructor(B,E){super(B,E,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||u.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new S.gE(0,0,0),this.diffuseColor=new S.gE(1,1,1),this.specularColor=new S.gE(1,1,1),this.emissiveColor=new S.gE(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new q.c(16),this._globalAmbientColor=new S.gE(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new g.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new D.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(u.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(u.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"mE"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===y.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Sc&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==y.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Sc||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(B,E){let z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const o=E._drawWrapper;if(o.effect&&this.isFrozen&&o._wasPreviouslyReady&&o._wasPreviouslyUsingInstances===z)return!0;E.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),E.materialDefines=new i(this._eventInfo.defineNames));const q=this.rB(),c=E.materialDefines;if(this._isReadyForSubMesh(E))return!0;const S=q.getEngine();c._needNormals=(0,T.P)(q,B,c,!0,this._maxSimultaneousLights,this._disableLighting),(0,T.Z)(q,c);const y=this.needAlphaBlendingForMesh(B)&&this.rB().useOrderIndependentTransparency;if((0,T.cb)(q,c,this.canRenderToMRT&&!y),(0,T.bb)(q,c,y),X.d.PrepareDefines(S.currentRenderPassId,B,c),c._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,c._needUVs=!1;for(let B=1;B<=6;++B)c["MAINUV"+B]=!1;if(q.texturesEnabled){if(c.DIFFUSEDIRECTUV=0,c.BUMPDIRECTUV=0,c.AMBIENTDIRECTUV=0,c.OPACITYDIRECTUV=0,c.EMISSIVEDIRECTUV=0,c.SPECULARDIRECTUV=0,c.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&u.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._diffuseTexture,c,"DIFFUSE")}else c.DIFFUSE=!1;if(this._ambientTexture&&u.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._ambientTexture,c,"AMBIENT")}else c.AMBIENT=!1;if(this._opacityTexture&&u.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._opacityTexture,c,"OPACITY"),c.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else c.OPACITY=!1;if(this._reflectionTexture&&u.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(c._needNormals=!0,c.REFLECTION=!0,c.ROUGHNESS=this._roughness>0,c.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,c.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===G.b.INVCUBIC_MODE,c.REFLECTIONMAP_3D=this._reflectionTexture.isCube,c.REFLECTIONMAP_OPPOSITEZ=c.REFLECTIONMAP_3D&&this.rB().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,c.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case G.b.EXPLICIT_MODE:c.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case G.b.PLANAR_MODE:c.setReflectionMode("REFLECTIONMAP_PLANAR");break;case G.b.PROJECTION_MODE:c.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case G.b.SKYBOX_MODE:c.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case G.b.SPHERICAL_MODE:c.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case G.b.EQUIRECTANGULAR_MODE:c.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case G.b.FIXED_EQUIRECTANGULAR_MODE:c.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case G.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:c.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case G.b.CUBIC_MODE:case G.b.INVCUBIC_MODE:default:c.setReflectionMode("REFLECTIONMAP_CUBIC")}c.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else c.REFLECTION=!1,c.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&u.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._emissiveTexture,c,"EMISSIVE")}else c.EMISSIVE=!1;if(this._lightmapTexture&&u.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._lightmapTexture,c,"LIGHTMAP"),c.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,c.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else c.LIGHTMAP=!1;if(this._specularTexture&&u.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,T.T)(this._specularTexture,c,"SPECULAR"),c.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else c.SPECULAR=!1;if(q.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&u.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,T.T)(this._bumpTexture,c,"BUMP"),c.PARALLAX=this._useParallax,c.PARALLAX_RHS=q.useRightHandedSystem,c.PARALLAXOCCLUSION=this._useParallaxOcclusion,c.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else c.BUMP=!1,c.PARALLAX=!1,c.PARALLAX_RHS=!1,c.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&u.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;c._needUVs=!0,c.REFRACTION=!0,c.REFRACTIONMAP_3D=this._refractionTexture.isCube,c.RGBDREFRACTION=this._refractionTexture.isRGBD,c.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else c.REFRACTION=!1;c.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else c.DIFFUSE=!1,c.AMBIENT=!1,c.OPACITY=!1,c.REFLECTION=!1,c.EMISSIVE=!1,c.LIGHTMAP=!1,c.BUMP=!1,c.REFRACTION=!1;c.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),c.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,c.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,c.SPECULAROVERALPHA=this._useSpecularOverAlpha,c.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,c.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,c.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(B)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=c,this._eventInfo.subMesh=E,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(c._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(c),c.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,c.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(c._areFresnelDirty&&(u.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(c.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,c.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,c.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,c.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,c.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,c.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,c._needNormals=!0,c.FRESNEL=!0):c.FRESNEL=!1),c.AREALIGHTUSED)for(let v=0;v<B.lightSources.length;v++)if(!B.lightSources[v]._isReady())return!1;(0,T.W)(B,q,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(B),c,this._applyDecalMapAfterDetailMap),(0,T.L)(q,S,this,c,z,null,E.getRenderingMesh().hasThinInstances),this._eventInfo.defines=c,this._eventInfo.mesh=B,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,T.K)(B,c,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let Q=!1;if(c.isDirty){const z=c._areLightsDisposed;c.markAsProcessed();const o=new m.c;c.REFLECTION&&o.addFallback(0,"REFLECTION"),c.SPECULAR&&o.addFallback(0,"SPECULAR"),c.BUMP&&o.addFallback(0,"BUMP"),c.PARALLAX&&o.addFallback(1,"PARALLAX"),c.PARALLAX_RHS&&o.addFallback(1,"PARALLAX_RHS"),c.PARALLAXOCCLUSION&&o.addFallback(0,"PARALLAXOCCLUSION"),c.SPECULAROVERALPHA&&o.addFallback(0,"SPECULAROVERALPHA"),c.FOG&&o.addFallback(1,"FOG"),c.POINTSIZE&&o.addFallback(0,"POINTSIZE"),c.LOGARITHMICDEPTH&&o.addFallback(0,"LOGARITHMICDEPTH"),(0,T.u)(c,o,this._maxSimultaneousLights),c.SPECULARTERM&&o.addFallback(0,"SPECULARTERM"),c.DIFFUSEFRESNEL&&o.addFallback(1,"DIFFUSEFRESNEL"),c.OPACITYFRESNEL&&o.addFallback(2,"OPACITYFRESNEL"),c.REFLECTIONFRESNEL&&o.addFallback(3,"REFLECTIONFRESNEL"),c.EMISSIVEFRESNEL&&o.addFallback(4,"EMISSIVEFRESNEL"),c.FRESNEL&&o.addFallback(4,"FRESNEL"),c.MULTIVIEW&&o.addFallback(0,"MULTIVIEW");const y=[x.e.PositionKind];c.NORMAL&&y.push(x.e.NormalKind),c.TANGENT&&y.push(x.e.TangentKind);for(let B=1;B<=6;++B)c["UV"+B]&&y.push(`uv${1===B?"":B}`);c.VERTEXCOLOR&&y.push(x.e.ColorKind),(0,T.y)(y,B,c,o),(0,T.C)(y,c),(0,T.E)(y,B,c),(0,T.v)(y,B,c);let P="default";const G=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],Y=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],a=["Material","Scene","Mesh"],g={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:c.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=o,this._eventInfo.fallbackRank=0,this._eventInfo.defines=c,this._eventInfo.uniforms=G,this._eventInfo.attributes=y,this._eventInfo.samplers=Y,this._eventInfo.uniformBuffersNames=a,this._eventInfo.customCode=void 0,this._eventInfo.mesh=B,this._eventInfo.indexParameters=g,this._callbackPluginEventGeneric(128,this._eventInfo),X.d.AddUniformsAndSamplers(G,Y),D.c.AddUniforms(G),D.c.AddSamplers(Y),h.d&&(h.d.PrepareUniforms(G,c),h.d.PrepareSamplers(Y,c)),(0,T.eb)({uniformsNames:G,uniformBuffersNames:a,samplers:Y,defines:c,maxSimultaneousLights:this._maxSimultaneousLights}),(0,V.d)(G);const N={};this.customShaderNameResolve&&(P=this.customShaderNameResolve(P,G,a,Y,c,y,N));const i=c.toString(),u=E.effect;let I=q.getEngine().createEffect(P,{attributes:y,uniformsNames:G,uniformBuffersNames:a,samplers:Y,defines:i,fallbacks:o,onCompiled:this.onCompiled,onError:this.onError,indexParameters:g,processFinalCode:N.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:c.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([v.e(41),v.e(64)]).then(v.bind(v,13899)),Promise.all([v.e(39),v.e(65)]).then(v.bind(v,14032))]):await Promise.all([Promise.all([v.e(34),v.e(67)]).then(v.bind(v,14124)),Promise.all([v.e(33),v.e(68)]).then(v.bind(v,14279))]),this._shadersLoaded=!0}},S);if(this._eventInfo.customCode=void 0,I)if(this._onEffectCreatedObservable&&(r.effect=I,r.subMesh=E,this._onEffectCreatedObservable.notifyObservers(r)),this.allowShaderHotSwapping&&u&&!I.isReady()){if(I=u,c.markAsUnprocessed(),Q=this.isFrozen,z)return c._areLightsDisposed=!0,!1}else q.resetCachedMaterial(),E.setEffect(I,c,this._materialContext)}return!(!E.effect||!E.effect.isReady())&&(c._renderId=q.getRenderId(),o._wasPreviouslyReady=!Q,o._wasPreviouslyUsingInstances=z,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const B=this._uniformBuffer;B.addUniform("diffuseLeftColor",4),B.addUniform("diffuseRightColor",4),B.addUniform("opacityParts",4),B.addUniform("reflectionLeftColor",4),B.addUniform("reflectionRightColor",4),B.addUniform("refractionLeftColor",4),B.addUniform("refractionRightColor",4),B.addUniform("emissiveLeftColor",4),B.addUniform("emissiveRightColor",4),B.addUniform("vDiffuseInfos",2),B.addUniform("vAmbientInfos",2),B.addUniform("vOpacityInfos",2),B.addUniform("vReflectionInfos",2),B.addUniform("vReflectionPosition",3),B.addUniform("vReflectionSize",3),B.addUniform("vEmissiveInfos",2),B.addUniform("vLightmapInfos",2),B.addUniform("vSpecularInfos",2),B.addUniform("vBumpInfos",3),B.addUniform("diffuseMatrix",16),B.addUniform("ambientMatrix",16),B.addUniform("opacityMatrix",16),B.addUniform("reflectionMatrix",16),B.addUniform("emissiveMatrix",16),B.addUniform("lightmapMatrix",16),B.addUniform("specularMatrix",16),B.addUniform("bumpMatrix",16),B.addUniform("vTangentSpaceParams",2),B.addUniform("pointSize",1),B.addUniform("alphaCutOff",1),B.addUniform("refractionMatrix",16),B.addUniform("vRefractionInfos",4),B.addUniform("vRefractionPosition",3),B.addUniform("vRefractionSize",3),B.addUniform("vSpecularColor",4),B.addUniform("vEmissiveColor",3),B.addUniform("vDiffuseColor",4),B.addUniform("vAmbientColor",3),B.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(B,E,v){const z=this.rB(),o=v.materialDefines;if(!o)return;const q=v.effect;if(!q)return;this._activeEffect=q,E.getMeshUniformBuffer().bindToEffect(q,"Mesh"),E.transferToEffect(B),this._uniformBuffer.bindToEffect(q,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,z,E,B,this.isFrozen),X.d.Bind(z.getEngine().currentRenderPassId,this._activeEffect,E,B,this);const x=z.activeCamera;x?this._uniformBuffer.updateFloat4("cameraInfo",x.xc,x.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=v,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),o.OBJECTSPACE_NORMALMAP&&(B.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const D=this._mustRebind(z,q,v,E.visibility);(0,T.e)(E,q);const h=this._uniformBuffer;if(D){if(this.bindViewProjection(q),!h.useUbo||!this.isFrozen||!h.isSync||v._drawWrapper._forceRebindOnNextCall){if(u.FresnelEnabled&&o.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new S.gE(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),z.texturesEnabled){if(this._diffuseTexture&&u.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,T.q)(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&u.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,T.q)(this._ambientTexture,h,"ambient")),this._opacityTexture&&u.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,T.q)(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&u.ReflectionTextureEnabled){if(h.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),h.hc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const B=this._reflectionTexture;h.updateVector3("vReflectionPosition",B.boundingBoxPosition),h.updateVector3("vReflectionSize",B.boundingBoxSize)}}else h.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&u.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,T.q)(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&u.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,T.q)(this._lightmapTexture,h,"lightmap")),this._specularTexture&&u.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,T.q)(this._specularTexture,h,"specular")),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,T.q)(this._bumpTexture,h,"bump"),z._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&u.RefractionTextureEnabled){let B=1;if(this._refractionTexture.isCube||(h.hc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(B=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,B,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const B=this._refractionTexture;h.updateVector3("vRefractionPosition",B.boundingBoxPosition),h.updateVector3("vRefractionSize",B.boundingBoxSize)}}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",u.EmissiveTextureEnabled?this.emissiveColor:S.gE.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),z.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}z.texturesEnabled&&(this._diffuseTexture&&u.DiffuseTextureEnabled&&q.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&u.AmbientTextureEnabled&&q.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&u.OpacityTextureEnabled&&q.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&u.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?q.setTexture("reflectionCubeSampler",this._reflectionTexture):q.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&u.EmissiveTextureEnabled&&q.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&u.LightmapTextureEnabled&&q.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&u.SpecularTextureEnabled&&q.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&u.BumpTextureEnabled&&q.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&u.RefractionTextureEnabled&&(this._refractionTexture.isCube?q.setTexture("refractionCubeSampler",this._refractionTexture):q.setTexture("refraction2DSampler",this._refractionTexture))),this.rB().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(E)&&this.rB().depthPeelingRenderer.bind(q),this._eventInfo.subMesh=v,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,V.f)(q,this,z),this.bindEyePosition(q)}else z.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(D||!this.isFrozen){var y;if(z.lightsEnabled&&!this._disableLighting&&(0,T.j)(z,E,q,o,this._maxSimultaneousLights),(z.fogEnabled&&E.applyFog&&z.fogMode!==c.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||E.receiveShadows||o.PREPASS)&&this.bindView(q),(0,T.g)(z,E,q),o.NUM_MORPH_INFLUENCERS&&(0,T.m)(E,q),o.BAKED_VERTEX_ANIMATION_TEXTURE)null===(y=E.bakedVertexAnimationManager)||void 0===y||y.bind(q,o.INSTANCES);this.useLogarithmicDepth&&(0,T.k)(o,q,z),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(E,this._activeEffect,v),h.update()}getAnimatables(){const B=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&B.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&B.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&B.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&B.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&B.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&B.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&B.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&B.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&B.push(this._refractionTexture),B}getActiveTextures(){const B=super.getActiveTextures();return this._diffuseTexture&&B.push(this._diffuseTexture),this._ambientTexture&&B.push(this._ambientTexture),this._opacityTexture&&B.push(this._opacityTexture),this._reflectionTexture&&B.push(this._reflectionTexture),this._emissiveTexture&&B.push(this._emissiveTexture),this._specularTexture&&B.push(this._specularTexture),this._bumpTexture&&B.push(this._bumpTexture),this._lightmapTexture&&B.push(this._lightmapTexture),this._refractionTexture&&B.push(this._refractionTexture),B}hasTexture(B){return!!super.hasTexture(B)||(this._diffuseTexture===B||(this._ambientTexture===B||(this._opacityTexture===B||(this._reflectionTexture===B||(this._emissiveTexture===B||(this._specularTexture===B||(this._bumpTexture===B||(this._lightmapTexture===B||this._refractionTexture===B))))))))}dispose(B,E){var v,z,o,q,c,S,x,D,h;E&&(null===(v=this._diffuseTexture)||void 0===v||v.dispose(),null===(z=this._ambientTexture)||void 0===z||z.dispose(),null===(o=this._opacityTexture)||void 0===o||o.dispose(),null===(q=this._reflectionTexture)||void 0===q||q.dispose(),null===(c=this._emissiveTexture)||void 0===c||c.dispose(),null===(S=this._specularTexture)||void 0===S||S.dispose(),null===(x=this._bumpTexture)||void 0===x||x.dispose(),null===(D=this._lightmapTexture)||void 0===D||D.dispose(),null===(h=this._refractionTexture)||void 0===h||h.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(B,E)}clone(B){let E=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const z=N.b.Clone((()=>new u(B,this.rB())),this,{cloneTexturesOnlyOnce:E});return z.name=B,z.id=B,this.stencil.copyTo(z.stencil),this._clonePlugins(z,v),z}static Parse(B,E,v){const z=N.b.Parse((()=>new u(B.name,E)),B,E,v);return B.stencil&&z.stencil.parse(B.stencil,E,v),y.c._ParsePlugins(B,z,E,v),z}static get DiffuseTextureEnabled(){return a.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){a.b.DiffuseTextureEnabled=B}static get DetailTextureEnabled(){return a.b.DetailTextureEnabled}static set DetailTextureEnabled(B){a.b.DetailTextureEnabled=B}static get AmbientTextureEnabled(){return a.b.AmbientTextureEnabled}static set AmbientTextureEnabled(B){a.b.AmbientTextureEnabled=B}static get OpacityTextureEnabled(){return a.b.OpacityTextureEnabled}static set OpacityTextureEnabled(B){a.b.OpacityTextureEnabled=B}static get ReflectionTextureEnabled(){return a.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){a.b.ReflectionTextureEnabled=B}static get EmissiveTextureEnabled(){return a.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){a.b.EmissiveTextureEnabled=B}static get SpecularTextureEnabled(){return a.b.SpecularTextureEnabled}static set SpecularTextureEnabled(B){a.b.SpecularTextureEnabled=B}static get BumpTextureEnabled(){return a.b.BumpTextureEnabled}static set BumpTextureEnabled(B){a.b.BumpTextureEnabled=B}static get LightmapTextureEnabled(){return a.b.LightmapTextureEnabled}static set LightmapTextureEnabled(B){a.b.LightmapTextureEnabled=B}static get RefractionTextureEnabled(){return a.b.RefractionTextureEnabled}static set RefractionTextureEnabled(B){a.b.RefractionTextureEnabled=B}static get ColorGradingTextureEnabled(){return a.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){a.b.ColorGradingTextureEnabled=B}static get FresnelEnabled(){return a.b.FresnelEnabled}static set FresnelEnabled(B){a.b.FresnelEnabled=B}}u.ForceGLSL=!1,(0,z.c)([(0,o.E)("diffuseTexture")],u.prototype,"_diffuseTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"diffuseTexture",void 0),(0,z.c)([(0,o.E)("ambientTexture")],u.prototype,"_ambientTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"ambientTexture",void 0),(0,z.c)([(0,o.E)("opacityTexture")],u.prototype,"_opacityTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"opacityTexture",void 0),(0,z.c)([(0,o.E)("reflectionTexture")],u.prototype,"_reflectionTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"reflectionTexture",void 0),(0,z.c)([(0,o.E)("emissiveTexture")],u.prototype,"_emissiveTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"emissiveTexture",void 0),(0,z.c)([(0,o.E)("specularTexture")],u.prototype,"_specularTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"specularTexture",void 0),(0,z.c)([(0,o.E)("bumpTexture")],u.prototype,"_bumpTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"bumpTexture",void 0),(0,z.c)([(0,o.E)("lightmapTexture")],u.prototype,"_lightmapTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"lightmapTexture",void 0),(0,z.c)([(0,o.E)("refractionTexture")],u.prototype,"_refractionTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"refractionTexture",void 0),(0,z.c)([(0,o.m)("ambient")],u.prototype,"ambientColor",void 0),(0,z.c)([(0,o.m)("diffuse")],u.prototype,"diffuseColor",void 0),(0,z.c)([(0,o.m)("specular")],u.prototype,"specularColor",void 0),(0,z.c)([(0,o.m)("emissive")],u.prototype,"emissiveColor",void 0),(0,z.c)([(0,o.K)()],u.prototype,"specularPower",void 0),(0,z.c)([(0,o.K)("useAlphaFromDiffuseTexture")],u.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],u.prototype,"useAlphaFromDiffuseTexture",void 0),(0,z.c)([(0,o.K)("useEmissiveAsIllumination")],u.prototype,"_useEmissiveAsIllumination",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useEmissiveAsIllumination",void 0),(0,z.c)([(0,o.K)("linkEmissiveWithDiffuse")],u.prototype,"_linkEmissiveWithDiffuse",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"linkEmissiveWithDiffuse",void 0),(0,z.c)([(0,o.K)("useSpecularOverAlpha")],u.prototype,"_useSpecularOverAlpha",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useSpecularOverAlpha",void 0),(0,z.c)([(0,o.K)("useReflectionOverAlpha")],u.prototype,"_useReflectionOverAlpha",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useReflectionOverAlpha",void 0),(0,z.c)([(0,o.K)("disableLighting")],u.prototype,"_disableLighting",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsLightsDirty")],u.prototype,"disableLighting",void 0),(0,z.c)([(0,o.K)("useObjectSpaceNormalMap")],u.prototype,"_useObjectSpaceNormalMap",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useObjectSpaceNormalMap",void 0),(0,z.c)([(0,o.K)("useParallax")],u.prototype,"_useParallax",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallax",void 0),(0,z.c)([(0,o.K)("useParallaxOcclusion")],u.prototype,"_useParallaxOcclusion",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useParallaxOcclusion",void 0),(0,z.c)([(0,o.K)()],u.prototype,"parallaxScaleBias",void 0),(0,z.c)([(0,o.K)("roughness")],u.prototype,"_roughness",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"roughness",void 0),(0,z.c)([(0,o.K)()],u.prototype,"indexOfRefraction",void 0),(0,z.c)([(0,o.K)()],u.prototype,"invertRefractionY",void 0),(0,z.c)([(0,o.K)()],u.prototype,"alphaCutOff",void 0),(0,z.c)([(0,o.K)("useLightmapAsShadowmap")],u.prototype,"_useLightmapAsShadowmap",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useLightmapAsShadowmap",void 0),(0,z.c)([(0,o.o)("diffuseFresnelParameters")],u.prototype,"_diffuseFresnelParameters",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"diffuseFresnelParameters",void 0),(0,z.c)([(0,o.o)("opacityFresnelParameters")],u.prototype,"_opacityFresnelParameters",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],u.prototype,"opacityFresnelParameters",void 0),(0,z.c)([(0,o.o)("reflectionFresnelParameters")],u.prototype,"_reflectionFresnelParameters",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"reflectionFresnelParameters",void 0),(0,z.c)([(0,o.o)("refractionFresnelParameters")],u.prototype,"_refractionFresnelParameters",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"refractionFresnelParameters",void 0),(0,z.c)([(0,o.o)("emissiveFresnelParameters")],u.prototype,"_emissiveFresnelParameters",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"emissiveFresnelParameters",void 0),(0,z.c)([(0,o.K)("useReflectionFresnelFromSpecular")],u.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsFresnelDirty")],u.prototype,"useReflectionFresnelFromSpecular",void 0),(0,z.c)([(0,o.K)("useGlossinessFromSpecularMapAlpha")],u.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,z.c)([(0,o.K)("maxSimultaneousLights")],u.prototype,"_maxSimultaneousLights",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsLightsDirty")],u.prototype,"maxSimultaneousLights",void 0),(0,z.c)([(0,o.K)("invertNormalMapX")],u.prototype,"_invertNormalMapX",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapX",void 0),(0,z.c)([(0,o.K)("invertNormalMapY")],u.prototype,"_invertNormalMapY",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"invertNormalMapY",void 0),(0,z.c)([(0,o.K)("twoSidedLighting")],u.prototype,"_twoSidedLighting",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"twoSidedLighting",void 0),(0,z.c)([(0,o.K)("applyDecalMapAfterDetailMap")],u.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,z.c)([(0,o.c)("_markAllSubMeshesAsMiscDirty")],u.prototype,"applyDecalMapAfterDetailMap",void 0),(0,Y.f)("BABYLON.StandardMaterial",u),c.c.DefaultMaterialFactory=B=>new u("default material",B)}}]);