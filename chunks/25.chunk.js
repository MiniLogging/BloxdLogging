"use strict";(self.fyqbdzs5tyo=self.fyqbdzs5tyo||[]).push([[25],{11642:(V,I,A)=>{A.d(I,{d:()=>P});var B=A(11213),F=A(11561),E=A(11222),Y=A(11633),H=A(11628),c=A(11646),b=A(11597);class X extends H.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class P extends c.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(V){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(V,"DetailMap",140,new X,I),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=F.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=V._dirtyCallbacks[1]}isReadyForSubMesh(V,I,A){return!this._isEnabled||!(V._areTexturesDirty&&I.texturesEnabled&&A.getCaps().standardDerivatives&&this._texture&&Y.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(V,I){if(this._isEnabled){V.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const A=I.getEngine();V._areTexturesDirty&&(A.getCaps().standardDerivatives&&this._texture&&Y.d.DetailTextureEnabled&&this._isEnabled?((0,b.M)(this._texture,V,"DETAIL"),V.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):V.DETAIL=!1)}else V.DETAIL=!1}bindForSubMesh(V,I){if(!this._isEnabled)return;const A=this._material.isFrozen;V.useUbo&&A&&V.isSync||this._texture&&Y.d.DetailTextureEnabled&&(V.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,b.t)(this._texture,V,"detail")),I.texturesEnabled&&this._texture&&Y.d.DetailTextureEnabled&&V.setTexture("detailSampler",this._texture)}hasTexture(V){return this._texture===V}getActiveTextures(V){this._texture&&V.push(this._texture)}getAnimatables(V){this._texture&&this._texture.animations&&this._texture.animations.length>0&&V.push(this._texture)}dispose(V){var I;V&&(null===(I=this._texture)||void 0===I||I.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(V){V.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,B.b)([(0,E.u)("detailTexture"),(0,E.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"texture",void 0),(0,B.b)([(0,E.A)()],P.prototype,"diffuseBlendLevel",void 0),(0,B.b)([(0,E.A)()],P.prototype,"roughnessBlendLevel",void 0),(0,B.b)([(0,E.A)()],P.prototype,"bumpLevel",void 0),(0,B.b)([(0,E.A)(),(0,E.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"normalBlendMethod",void 0),(0,B.b)([(0,E.A)(),(0,E.d)("_markAllSubMeshesAsTexturesDirty")],P.prototype,"isEnabled",void 0)},11628:(V,I,A)=>{A.d(I,{c:()=>B});class B{constructor(V){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=V,V)for(const I in V)Object.prototype.hasOwnProperty.call(V,I)&&this._setDefaultValue(I)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let V=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||V,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const V of Object.keys(this))"_"!==V[0]&&this._keys.push(V);if(this._externalProperties)for(const V in this._externalProperties)-1===this._keys.indexOf(V)&&this._keys.push(V)}isEqual(V){if(this._keys.length!==V._keys.length)return!1;for(let I=0;I<this._keys.length;I++){const A=this._keys[I];if(this[A]!==V[A])return!1}return!0}cloneTo(V){this._keys.length!==V._keys.length&&(V._keys=this._keys.slice(0));for(let I=0;I<this._keys.length;I++){const A=this._keys[I];V[A]=this[A]}}reset(){for(const V of this._keys)this._setDefaultValue(V)}_setDefaultValue(V){var I,A,B,F;const E=(null===(I=this._externalProperties)||void 0===I||null===(A=I[V])||void 0===A?void 0:A.type)??typeof this[V],Y=null===(B=this._externalProperties)||void 0===B||null===(F=B[V])||void 0===F?void 0:F.default;switch(E){case"number":this[V]=Y??0;break;case"string":this[V]=Y??"";break;default:this[V]=Y??!1}}toString(){let V="";for(let I=0;I<this._keys.length;I++){const A=this._keys[I],B=this[A];switch(typeof B){case"number":case"string":V+="#define "+A+" "+B+"\n";break;default:B&&(V+="#define "+A+"\n")}}return V}}},11633:(V,I,A)=>{A.d(I,{d:()=>F});var B=A(11137);class F{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(V){this._DiffuseTextureEnabled!==V&&(this._DiffuseTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(V){this._BaseWeightTextureEnabled!==V&&(this._BaseWeightTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(V){this._BaseDiffuseRoughnessTextureEnabled!==V&&(this._BaseDiffuseRoughnessTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(V){this._DetailTextureEnabled!==V&&(this._DetailTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(V){this._DecalMapEnabled!==V&&(this._DecalMapEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(V){this._AmbientTextureEnabled!==V&&(this._AmbientTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(V){this._OpacityTextureEnabled!==V&&(this._OpacityTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(V){this._ReflectionTextureEnabled!==V&&(this._ReflectionTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(V){this._EmissiveTextureEnabled!==V&&(this._EmissiveTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(V){this._SpecularTextureEnabled!==V&&(this._SpecularTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(V){this._BumpTextureEnabled!==V&&(this._BumpTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(V){this._LightmapTextureEnabled!==V&&(this._LightmapTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(V){this._RefractionTextureEnabled!==V&&(this._RefractionTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(V){this._ColorGradingTextureEnabled!==V&&(this._ColorGradingTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(V){this._FresnelEnabled!==V&&(this._FresnelEnabled=V,B.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(V){this._ClearCoatTextureEnabled!==V&&(this._ClearCoatTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(V){this._ClearCoatBumpTextureEnabled!==V&&(this._ClearCoatBumpTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(V){this._ClearCoatTintTextureEnabled!==V&&(this._ClearCoatTintTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(V){this._SheenTextureEnabled!==V&&(this._SheenTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(V){this._AnisotropicTextureEnabled!==V&&(this._AnisotropicTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(V){this._ThicknessTextureEnabled!==V&&(this._ThicknessTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(V){this._RefractionIntensityTextureEnabled!==V&&(this._RefractionIntensityTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(V){this._TranslucencyIntensityTextureEnabled!==V&&(this._TranslucencyIntensityTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(V){this._TranslucencyColorTextureEnabled!==V&&(this._TranslucencyColorTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(V){this._IridescenceTextureEnabled!==V&&(this._IridescenceTextureEnabled=V,B.e.MarkAllMaterialsAsDirty(1))}}F._DiffuseTextureEnabled=!0,F._BaseWeightTextureEnabled=!0,F._BaseDiffuseRoughnessTextureEnabled=!0,F._DetailTextureEnabled=!0,F._DecalMapEnabled=!0,F._AmbientTextureEnabled=!0,F._OpacityTextureEnabled=!0,F._ReflectionTextureEnabled=!0,F._EmissiveTextureEnabled=!0,F._SpecularTextureEnabled=!0,F._BumpTextureEnabled=!0,F._LightmapTextureEnabled=!0,F._RefractionTextureEnabled=!0,F._ColorGradingTextureEnabled=!0,F._FresnelEnabled=!0,F._ClearCoatTextureEnabled=!0,F._ClearCoatBumpTextureEnabled=!0,F._ClearCoatTintTextureEnabled=!0,F._SheenTextureEnabled=!0,F._AnisotropicTextureEnabled=!0,F._ThicknessTextureEnabled=!0,F._RefractionIntensityTextureEnabled=!0,F._TranslucencyIntensityTextureEnabled=!0,F._TranslucencyColorTextureEnabled=!0,F._IridescenceTextureEnabled=!0},11650:(V,I,A)=>{A.d(I,{b:()=>E});var B,F=A(11231);!function(V){V[V.Zero=0]="Zero",V[V.One=1]="One",V[V.MaxViewZ=2]="MaxViewZ"}(B||(B={}));class E{static CreateConfiguration(V){return E._Configurations[V]={defines:{},previousWorldMatrices:{},previousViewProjection:F.Matrix.Zero(),currentViewProjection:F.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},E._Configurations[V]}static DeleteConfiguration(V){delete E._Configurations[V]}static GetConfiguration(V){return E._Configurations[V]}static AddUniformsAndSamplers(V,I){V.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(V,I){for(const A of I)if(A.IH)for(const I of A.IH)I._removeDrawWrapper(V)}static PrepareDefines(V,I,A){if(!A._arePrePassDirty)return;const B=E._Configurations[V];if(!B)return;A.PREPASS=!0,A.PREPASS_COLOR=!1,A.PREPASS_COLOR_INDEX=-1;let F=0;for(let Y=0;Y<E.GeometryTextureDescriptions.length;Y++){const V=E.GeometryTextureDescriptions[Y],I=V.define,H=V.defineIndex,c=B.defines[H];void 0!==c?(A[I]=!0,A[H]=c,F++):(A[I]=!1,delete A[H])}A.SCENE_MRT_COUNT=F,A.BONES_VELOCITY_ENABLED=I.useBones&&I.computeBonesUsingShaders&&I.skeleton&&!I.skeleton.isUsingTextureForMatrices&&-1===B.excludedSkinnedMesh.indexOf(I)}static Bind(V,I,A,B,F){const Y=E._Configurations[V];if(!Y)return;const H=A.sV(),c=H.getEngine();if(Y.reverseCulling&&c.setStateCullFaceType(H._mirroredCameraPosition?F.cullBackFaces:!F.cullBackFaces),(void 0!==Y.defines.PREPASS_VELOCITY_INDEX||void 0!==Y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Y.previousWorldMatrices[A.uniqueId]||(Y.previousWorldMatrices[A.uniqueId]=B.clone()),Y.previousViewProjection||(Y.previousViewProjection=H.getTransformMatrix().clone(),Y.currentViewProjection=H.getTransformMatrix().clone()),Y.currentViewProjection.updateFlag!==H.getTransformMatrix().updateFlag?(Y.lastUpdateFrameId=c.frameId,Y.previousViewProjection.B(Y.currentViewProjection),Y.currentViewProjection.B(H.getTransformMatrix())):Y.lastUpdateFrameId!==c.frameId&&(Y.lastUpdateFrameId=c.frameId,Y.previousViewProjection.B(Y.currentViewProjection)),I.setMatrix("previousWorld",Y.previousWorldMatrices[A.uniqueId]),I.setMatrix("previousViewProjection",Y.previousViewProjection),Y.previousWorldMatrices[A.uniqueId]=B.clone(),A.useBones&&A.computeBonesUsingShaders&&A.skeleton)){const V=A.skeleton;if(!V.isUsingTextureForMatrices||-1===I.getUniformIndex("boneTextureWidth")){const B=V.getTransformMatrices(A);B&&(Y.previousBones[A.uniqueId]||(Y.previousBones[A.uniqueId]=B.slice()),I.setMatrices("mPreviousBones",Y.previousBones[A.uniqueId]),Y.previousBones[A.uniqueId].set(B))}}}}E.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],E._Configurations={}},11646:(V,I,A)=>{A.d(I,{d:()=>W});var B=A(11213),F=A(11222),E=A(11561),Y=A(11097),H=A(11122),c=A(11152);const b=new RegExp("^([gimus]+)!");class X{constructor(V){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=V,this._scene=V.sV(),this._engine=this._scene.getEngine()}_addPlugin(V){for(let B=0;B<this._plugins.length;++B)if(this._plugins[B].name===V.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!V.isCompatible(this._material.shaderLanguage))throw`The plugin "${V.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const I=V.getClassName();X._MaterialPluginClassToMainDefine[I]||(X._MaterialPluginClassToMainDefine[I]="MATERIALPLUGIN_"+ ++X._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(V,I)=>this._handlePluginEvent(V,I),this._plugins.push(V),this._plugins.sort(((V,I)=>V.priority-I.priority)),this._codeInjectionPoints={};const A={};A[X._MaterialPluginClassToMainDefine[I]]={type:"boolean",default:!0};for(const B of this._plugins)B.collectDefines(A),this._collectPointNames("vertex",B.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",B.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=A,!0}_activatePlugin(V){-1===this._activePlugins.indexOf(V)&&(this._activePlugins.push(V),this._activePlugins.sort(((V,I)=>V.priority-I.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),V.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(V),this._activePluginsForExtraEvents.sort(((V,I)=>V.priority-I.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(V){for(let I=0;I<this._plugins.length;++I)if(this._plugins[I].name===V)return this._plugins[I];return null}_handlePluginEventIsReadyForSubMesh(V){let I=!0;for(const A of this._activePlugins)I=I&&A.isReadyForSubMesh(V.defines,this._scene,this._engine,V.subMesh);V.isReadyForSubMesh=I}_handlePluginEventPrepareDefinesBeforeAttributes(V){for(const I of this._activePlugins)I.prepareDefinesBeforeAttributes(V.defines,this._scene,V.mesh)}_handlePluginEventPrepareDefines(V){for(const I of this._activePlugins)I.prepareDefines(V.defines,this._scene,V.mesh)}_handlePluginEventHardBindForSubMesh(V){for(const I of this._activePluginsForExtraEvents)I.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,V.subMesh)}_handlePluginEventBindForSubMesh(V){for(const I of this._activePlugins)I.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,V.subMesh)}_handlePluginEventHasRenderTargetTextures(V){let I=!1;for(const A of this._activePluginsForExtraEvents)if(I=A.hasRenderTargetTextures(),I)break;V.hasRenderTargetTextures=I}_handlePluginEventFillRenderTargetTextures(V){for(const I of this._activePluginsForExtraEvents)I.fillRenderTargetTextures(V.renderTargets)}_handlePluginEvent(V,I){switch(V){case 512:{const V=I;for(const I of this._activePlugins)I.getActiveTextures(V.activeTextures);break}case 256:{const V=I;for(const I of this._activePlugins)I.getAnimatables(V.animatables);break}case 1024:{const V=I;let A=!1;for(const I of this._activePlugins)if(A=I.hasTexture(V.texture),A)break;V.hasTexture=A;break}case 2:{const V=I;for(const I of this._plugins)I.dispose(V.forceDisposeTextures);break}case 4:I.defineNames=this._defineNamesFromPlugins;break;case 128:{const V=I;for(const I of this._activePlugins)V.fallbackRank=I.addFallbacks(V.defines,V.fallbacks,V.fallbackRank),I.getAttributes(V.attributes,this._scene,V.mesh);this._uniformList.length>0&&V.uniforms.push(...this._uniformList),this._samplerList.length>0&&V.samplers.push(...this._samplerList),this._uboList.length>0&&V.uniformBuffersNames.push(...this._uboList),V.customCode=this._injectCustomCode(V,V.customCode);break}case 8:{const V=I;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const A=1===this._material.shaderLanguage;for(const I of this._plugins){const B=I.getUniforms(this._material.shaderLanguage);if(B){if(B.ubo)for(const I of B.ubo){if(I.size&&I.type){const B=I.arraySize??0;if(V.ubo.addUniform(I.name,I.size,B),A){let V;switch(I.type){case"mat4":V="mat4x4f";break;case"float":V="f32";break;default:V=`${I.type}f`}this._uboDeclaration+=B>0?`uniform ${I.name}: array<${V}, ${B}>;\n`:`uniform ${I.name}: ${V};\n`}else this._uboDeclaration+=`${I.type} ${I.name}${B>0?`[${B}]`:""};\n`}this._uniformList.push(I.name)}B.vertex&&(this._vertexDeclaration+=B.vertex+"\n"),B.fragment&&(this._fragmentDeclaration+=B.fragment+"\n")}I.getSamplers(this._samplerList),I.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(V,I){if(I)for(const A in I)this._codeInjectionPoints[V]||(this._codeInjectionPoints[V]={}),this._codeInjectionPoints[V][A]=!0}_injectCustomCode(V,I){return(A,B)=>{var F;I&&(B=I(A,B)),this._uboDeclaration&&(B=B.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(B=B.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(B=B.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const E=null===(F=this._codeInjectionPoints)||void 0===F?void 0:F[A];if(!E)return B;let Y=null;for(let I in E){let F="";for(const B of this._activePlugins){var X;let E=null===(X=B.getCustomCode(A,this._material.shaderLanguage))||void 0===X?void 0:X[I];if(E){if(B.resolveIncludes){if(null===Y){const I=0;Y={defines:[],indexParameters:V.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:c.e.GetShadersRepository(I),includesShadersStore:c.e.GetIncludesShadersStore(I),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}Y.isFragment="fragment"===A,(0,H.k)(E,Y,(V=>E=V))}F+=E+"\n"}}if(F.length>0)if("!"===I.charAt(0)){I=I.substring(1);let V="g";if("!"===I.charAt(0))V="",I=I.substring(1);else{const A=b.exec(I);A&&A.length>=2&&(V=A[1],I=I.substring(V.length+1))}V.indexOf("g")<0&&(V+="g");const A=B,E=new RegExp(I,V);let Y=E.exec(A);for(;null!==Y;){let V=F;for(let I=0;I<Y.length;++I)V=V.replace("$"+I,Y[I]);B=B.replace(Y[0],V),Y=E.exec(A)}}else{const V="#define "+I;B=B.replace(V,"\n"+F+"\n"+V)}}return B}}}X._MaterialPluginClassToMainDefine={},X._MaterialPluginCounter=0,Y.e.OnEnginesDisposedObservable.add((()=>{w()}));const P=[];let J=!1,G=null;function w(){P.length=0,J=!1,E.c.OnEventObservable.remove(G),G=null}var t=A(11265),u=A(11189);class W{isCompatible(V){return 0===V}_enable(V){V&&this._pluginManager._activatePlugin(this)}constructor(V,I,A,B){let F=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=V,this.name=I,this.priority=A,this.resolveIncludes=Y,V.pluginManager||(V.pluginManager=new X(V),V.aY.add((()=>{V.pluginManager=void 0}))),this._pluginDefineNames=B,this._pluginManager=V.pluginManager,F&&this._pluginManager._addPlugin(this),E&&this._enable(!0),this.markAllDefinesAsDirty=V._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(V,I,A,B){return!0}hardBindForSubMesh(V,I,A,B){}bindForSubMesh(V,I,A,B){}dispose(V){}getCustomCode(V){return null}collectDefines(V){if(this._pluginDefineNames)for(const I of Object.keys(this._pluginDefineNames)){if("_"===I[0])continue;const A=typeof this._pluginDefineNames[I];V[I]={type:"number"===A?"number":"string"===A?"string":"boolean"===A?"boolean":"object",default:this._pluginDefineNames[I]}}}prepareDefinesBeforeAttributes(V,I,A){}prepareDefines(V,I,A){}hasTexture(V){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(V){}getActiveTextures(V){}getAnimatables(V){}addFallbacks(V,I,A){return A}getSamplers(V){}getAttributes(V,I,A){}getUniformBuffersNames(V){}getUniforms(){return{}}copyTo(V){t.b.Clone((()=>V),this)}serialize(){return t.b.Serialize(this)}parse(V,I,A){t.b.Parse((()=>this),V,I,A)}}(0,B.b)([(0,F.A)()],W.prototype,"name",void 0),(0,B.b)([(0,F.A)()],W.prototype,"priority",void 0),(0,B.b)([(0,F.A)()],W.prototype,"resolveIncludes",void 0),(0,B.b)([(0,F.A)()],W.prototype,"registerForExtraEvents",void 0),(0,u.e)("BABYLON.MaterialPluginBase",W)},11622:(V,I,A)=>{A.d(I,{c:()=>B});class B{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(V){V.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(V){}bindForSubMesh(V,I,A,B,F){if(I.prePassRenderer&&I.prePassRenderer.enabled&&I.prePassRenderer.currentRTisSceneRT&&(-1!==I.prePassRenderer.getIndex(2)||-1!==I.prePassRenderer.getIndex(11))){this.previousWorldMatrices[A.uniqueId]||(this.previousWorldMatrices[A.uniqueId]=B.clone()),this.previousViewProjection||(this.previousViewProjection=I.getTransformMatrix().clone(),this.currentViewProjection=I.getTransformMatrix().clone());const F=I.getEngine();this.currentViewProjection.updateFlag!==I.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=F.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(I.getTransformMatrix())):this._lastUpdateFrameId!==F.frameId&&(this._lastUpdateFrameId=F.frameId,this.previousViewProjection.B(this.currentViewProjection)),V.setMatrix("previousWorld",this.previousWorldMatrices[A.uniqueId]),V.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[A.uniqueId]=B.clone()}}}},11614:(V,I,A)=>{A.d(I,{gI:()=>S});var B=A(11213),F=A(11222),E=A(11323),Y=A(11473),H=A(11276),c=A(11300),b=A(11622),X=A(11478),P=A(11561),J=A(11628),G=A(11553),w=A(11207),t=A(11189),u=A(11633),W=A(11546),g=A(11642),o=A(11605),L=A(11597),z=A(11265),m=A(11650);const s={effect:null,subMesh:null};class e extends J.c{constructor(V){super(V),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(V){const I=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const A of I)this[A]=A===V}}class S extends G.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(V){this._attachImageProcessingConfiguration(V),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(V){V!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=V||this.sV().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(V){this.imageProcessingConfiguration.colorCurvesEnabled=V}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(V){this.imageProcessingConfiguration.colorGradingEnabled=V}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(V){this._imageProcessingConfiguration.toneMappingEnabled=V}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(V){this._imageProcessingConfiguration.exposure=V}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(V){this._imageProcessingConfiguration.contrast=V}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(V){this._imageProcessingConfiguration.colorGradingTexture=V}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(V){this._imageProcessingConfiguration.colorCurves=V}get canRenderToMRT(){return!0}constructor(V,I){super(V,I,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||S.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new H.oI(0,0,0),this.diffuseColor=new H.oI(1,1,1),this.specularColor=new H.oI(1,1,1),this.emissiveColor=new H.oI(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new E.e(16),this._globalAmbientColor=new H.oI(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new g.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new b.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(S.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(S.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"gI"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===P.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.BH&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==P.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.BH||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(V,I){let B=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const F=I._drawWrapper;if(F.effect&&this.isFrozen&&F._wasPreviouslyReady&&F._wasPreviouslyUsingInstances===B)return!0;I.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),I.materialDefines=new e(this._eventInfo.defineNames));const E=this.sV(),Y=I.materialDefines;if(this._isReadyForSubMesh(I))return!0;const H=E.getEngine();Y._needNormals=(0,L.J)(E,V,Y,!0,this._maxSimultaneousLights,this._disableLighting),(0,L.R)(E,Y);const P=this.needAlphaBlendingForMesh(V)&&this.sV().useOrderIndependentTransparency;if((0,L.W)(E,Y,this.canRenderToMRT&&!P),(0,L.S)(E,Y,P),m.b.PrepareDefines(H.currentRenderPassId,V,Y),Y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Y._needUVs=!1;for(let V=1;V<=6;++V)Y["MAINUV"+V]=!1;if(E.texturesEnabled){if(Y.DIFFUSEDIRECTUV=0,Y.BUMPDIRECTUV=0,Y.AMBIENTDIRECTUV=0,Y.OPACITYDIRECTUV=0,Y.EMISSIVEDIRECTUV=0,Y.SPECULARDIRECTUV=0,Y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&S.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._diffuseTexture,Y,"DIFFUSE")}else Y.DIFFUSE=!1;if(this._ambientTexture&&S.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._ambientTexture,Y,"AMBIENT")}else Y.AMBIENT=!1;if(this._opacityTexture&&S.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._opacityTexture,Y,"OPACITY"),Y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Y.OPACITY=!1;if(this._reflectionTexture&&S.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Y._needNormals=!0,Y.REFLECTION=!0,Y.ROUGHNESS=this._roughness>0,Y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===w.e.INVCUBIC_MODE,Y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Y.REFLECTIONMAP_OPPOSITEZ=Y.REFLECTIONMAP_3D&&this.sV().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case w.e.EXPLICIT_MODE:Y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case w.e.PLANAR_MODE:Y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case w.e.PROJECTION_MODE:Y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case w.e.SKYBOX_MODE:Y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case w.e.SPHERICAL_MODE:Y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case w.e.EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case w.e.FIXED_EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case w.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case w.e.CUBIC_MODE:case w.e.INVCUBIC_MODE:default:Y.setReflectionMode("REFLECTIONMAP_CUBIC")}Y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Y.REFLECTION=!1,Y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&S.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._emissiveTexture,Y,"EMISSIVE")}else Y.EMISSIVE=!1;if(this._lightmapTexture&&S.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._lightmapTexture,Y,"LIGHTMAP"),Y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Y.LIGHTMAP=!1;if(this._specularTexture&&S.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,L.M)(this._specularTexture,Y,"SPECULAR"),Y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Y.SPECULAR=!1;if(E.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&S.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,L.M)(this._bumpTexture,Y,"BUMP"),Y.PARALLAX=this._useParallax,Y.PARALLAX_RHS=E.useRightHandedSystem,Y.PARALLAXOCCLUSION=this._useParallaxOcclusion,Y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Y.BUMP=!1,Y.PARALLAX=!1,Y.PARALLAX_RHS=!1,Y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&S.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Y._needUVs=!0,Y.REFRACTION=!0,Y.REFRACTIONMAP_3D=this._refractionTexture.isCube,Y.RGBDREFRACTION=this._refractionTexture.isRGBD,Y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Y.REFRACTION=!1;Y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Y.DIFFUSE=!1,Y.AMBIENT=!1,Y.OPACITY=!1,Y.REFLECTION=!1,Y.EMISSIVE=!1,Y.LIGHTMAP=!1,Y.BUMP=!1,Y.REFRACTION=!1;Y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Y.SPECULAROVERALPHA=this._useSpecularOverAlpha,Y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(V)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Y,this._eventInfo.subMesh=I,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Y),Y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Y._areFresnelDirty&&(S.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Y._needNormals=!0,Y.FRESNEL=!0):Y.FRESNEL=!1),Y.AREALIGHTUSED)for(let A=0;A<V.lightSources.length;A++)if(!V.lightSources[A]._isReady())return!1;(0,L.Q)(V,E,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(V),Y,this._applyDecalMapAfterDetailMap),(0,L.H)(E,H,this,Y,B,null,I.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Y,this._eventInfo.mesh=V,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,L.E)(V,Y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let J=!1;if(Y.isDirty){const B=Y._areLightsDisposed;Y.markAsProcessed();const F=new W.c;Y.REFLECTION&&F.addFallback(0,"REFLECTION"),Y.SPECULAR&&F.addFallback(0,"SPECULAR"),Y.BUMP&&F.addFallback(0,"BUMP"),Y.PARALLAX&&F.addFallback(1,"PARALLAX"),Y.PARALLAX_RHS&&F.addFallback(1,"PARALLAX_RHS"),Y.PARALLAXOCCLUSION&&F.addFallback(0,"PARALLAXOCCLUSION"),Y.SPECULAROVERALPHA&&F.addFallback(0,"SPECULAROVERALPHA"),Y.FOG&&F.addFallback(1,"FOG"),Y.POINTSIZE&&F.addFallback(0,"POINTSIZE"),Y.LOGARITHMICDEPTH&&F.addFallback(0,"LOGARITHMICDEPTH"),(0,L.u)(Y,F,this._maxSimultaneousLights),Y.SPECULARTERM&&F.addFallback(0,"SPECULARTERM"),Y.DIFFUSEFRESNEL&&F.addFallback(1,"DIFFUSEFRESNEL"),Y.OPACITYFRESNEL&&F.addFallback(2,"OPACITYFRESNEL"),Y.REFLECTIONFRESNEL&&F.addFallback(3,"REFLECTIONFRESNEL"),Y.EMISSIVEFRESNEL&&F.addFallback(4,"EMISSIVEFRESNEL"),Y.FRESNEL&&F.addFallback(4,"FRESNEL"),Y.MULTIVIEW&&F.addFallback(0,"MULTIVIEW");const P=[c.g.PositionKind];Y.NORMAL&&P.push(c.g.NormalKind),Y.TANGENT&&P.push(c.g.TangentKind);for(let V=1;V<=6;++V)Y["UV"+V]&&P.push(`uv${1===V?"":V}`);Y.VERTEXCOLOR&&P.push(c.g.ColorKind),(0,L.x)(P,V,Y,F),(0,L.y)(P,Y),(0,L.z)(P,V,Y),(0,L.w)(P,V,Y);let G="default";const w=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],t=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],u=["Material","Scene","Mesh"],g={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=F,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Y,this._eventInfo.uniforms=w,this._eventInfo.attributes=P,this._eventInfo.samplers=t,this._eventInfo.uniformBuffersNames=u,this._eventInfo.customCode=void 0,this._eventInfo.mesh=V,this._eventInfo.indexParameters=g,this._callbackPluginEventGeneric(128,this._eventInfo),m.b.AddUniformsAndSamplers(w,t),b.c.AddUniforms(w),b.c.AddSamplers(t),X.e&&(X.e.PrepareUniforms(w,Y),X.e.PrepareSamplers(t,Y)),(0,L._)({uniformsNames:w,uniformBuffersNames:u,samplers:t,defines:Y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,o.d)(w);const z={};this.customShaderNameResolve&&(G=this.customShaderNameResolve(G,w,u,t,Y,P,z));const e=Y.toString(),S=I.effect;let Q=E.getEngine().createEffect(G,{attributes:P,uniformsNames:w,uniformBuffersNames:u,samplers:t,defines:e,fallbacks:F,onCompiled:this.onCompiled,onError:this.onError,indexParameters:g,processFinalCode:z.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([A.e(41),A.e(64)]).then(A.bind(A,13745)),Promise.all([A.e(39),A.e(65)]).then(A.bind(A,13884))]):await Promise.all([Promise.all([A.e(34),A.e(67)]).then(A.bind(A,13947)),Promise.all([A.e(33),A.e(68)]).then(A.bind(A,14094))]),this._shadersLoaded=!0}},H);if(this._eventInfo.customCode=void 0,Q)if(this._onEffectCreatedObservable&&(s.effect=Q,s.subMesh=I,this._onEffectCreatedObservable.notifyObservers(s)),this.allowShaderHotSwapping&&S&&!Q.isReady()){if(Q=S,Y.markAsUnprocessed(),J=this.isFrozen,B)return Y._areLightsDisposed=!0,!1}else E.resetCachedMaterial(),I.setEffect(Q,Y,this._materialContext)}return!(!I.effect||!I.effect.isReady())&&(Y._renderId=E.getRenderId(),F._wasPreviouslyReady=!J,F._wasPreviouslyUsingInstances=B,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const V=this._uniformBuffer;V.addUniform("diffuseLeftColor",4),V.addUniform("diffuseRightColor",4),V.addUniform("opacityParts",4),V.addUniform("reflectionLeftColor",4),V.addUniform("reflectionRightColor",4),V.addUniform("refractionLeftColor",4),V.addUniform("refractionRightColor",4),V.addUniform("emissiveLeftColor",4),V.addUniform("emissiveRightColor",4),V.addUniform("vDiffuseInfos",2),V.addUniform("vAmbientInfos",2),V.addUniform("vOpacityInfos",2),V.addUniform("vReflectionInfos",2),V.addUniform("vReflectionPosition",3),V.addUniform("vReflectionSize",3),V.addUniform("vEmissiveInfos",2),V.addUniform("vLightmapInfos",2),V.addUniform("vSpecularInfos",2),V.addUniform("vBumpInfos",3),V.addUniform("diffuseMatrix",16),V.addUniform("ambientMatrix",16),V.addUniform("opacityMatrix",16),V.addUniform("reflectionMatrix",16),V.addUniform("emissiveMatrix",16),V.addUniform("lightmapMatrix",16),V.addUniform("specularMatrix",16),V.addUniform("bumpMatrix",16),V.addUniform("vTangentSpaceParams",2),V.addUniform("pointSize",1),V.addUniform("alphaCutOff",1),V.addUniform("refractionMatrix",16),V.addUniform("vRefractionInfos",4),V.addUniform("vRefractionPosition",3),V.addUniform("vRefractionSize",3),V.addUniform("vSpecularColor",4),V.addUniform("vEmissiveColor",3),V.addUniform("vDiffuseColor",4),V.addUniform("vAmbientColor",3),V.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(V,I,A){const B=this.sV(),F=A.materialDefines;if(!F)return;const E=A.effect;if(!E)return;this._activeEffect=E,I.getMeshUniformBuffer().bindToEffect(E,"Mesh"),I.transferToEffect(V),this._uniformBuffer.bindToEffect(E,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,B,I,V,this.isFrozen),m.b.Bind(B.getEngine().currentRenderPassId,this._activeEffect,I,V,this);const c=B.activeCamera;c?this._uniformBuffer.updateFloat4("cameraInfo",c.FH,c.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=A,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),F.OBJECTSPACE_NORMALMAP&&(V.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const b=this._mustRebind(B,E,A,I.visibility);(0,L.c)(I,E);const X=this._uniformBuffer;if(b){if(this.bindViewProjection(E),!X.useUbo||!this.isFrozen||!X.isSync||A._drawWrapper._forceRebindOnNextCall){if(S.FresnelEnabled&&F.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(X.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),X.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&X.updateColor4("opacityParts",new H.oI(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(X.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),X.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(X.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),X.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(X.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),X.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),B.texturesEnabled){if(this._diffuseTexture&&S.DiffuseTextureEnabled&&(X.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,L.t)(this._diffuseTexture,X,"diffuse")),this._ambientTexture&&S.AmbientTextureEnabled&&(X.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,L.t)(this._ambientTexture,X,"ambient")),this._opacityTexture&&S.OpacityTextureEnabled&&(X.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,L.t)(this._opacityTexture,X,"opacity")),this._hasAlphaChannel()&&X.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&S.ReflectionTextureEnabled){if(X.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),X.EH("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const V=this._reflectionTexture;X.updateVector3("vReflectionPosition",V.boundingBoxPosition),X.updateVector3("vReflectionSize",V.boundingBoxSize)}}else X.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&S.EmissiveTextureEnabled&&(X.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,L.t)(this._emissiveTexture,X,"emissive")),this._lightmapTexture&&S.LightmapTextureEnabled&&(X.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,L.t)(this._lightmapTexture,X,"lightmap")),this._specularTexture&&S.SpecularTextureEnabled&&(X.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,L.t)(this._specularTexture,X,"specular")),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&(X.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,L.t)(this._bumpTexture,X,"bump"),B._mirroredCameraPosition?X.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):X.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&S.RefractionTextureEnabled){let V=1;if(this._refractionTexture.isCube||(X.EH("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(V=this._refractionTexture.depth)),X.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,V,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const V=this._refractionTexture;X.updateVector3("vRefractionPosition",V.boundingBoxPosition),X.updateVector3("vRefractionSize",V.boundingBoxSize)}}}this.pointsCloud&&X.updateFloat("pointSize",this.pointSize),X.updateColor4("vSpecularColor",this.specularColor,this.specularPower),X.updateColor3("vEmissiveColor",S.EmissiveTextureEnabled?this.emissiveColor:H.oI.BlackReadOnly),X.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),B.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),X.updateColor3("vAmbientColor",this._globalAmbientColor)}B.texturesEnabled&&(this._diffuseTexture&&S.DiffuseTextureEnabled&&E.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&S.AmbientTextureEnabled&&E.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&S.OpacityTextureEnabled&&E.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&S.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?E.setTexture("reflectionCubeSampler",this._reflectionTexture):E.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&S.EmissiveTextureEnabled&&E.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&S.LightmapTextureEnabled&&E.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&S.SpecularTextureEnabled&&E.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&B.getEngine().getCaps().standardDerivatives&&S.BumpTextureEnabled&&E.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&S.RefractionTextureEnabled&&(this._refractionTexture.isCube?E.setTexture("refractionCubeSampler",this._refractionTexture):E.setTexture("refraction2DSampler",this._refractionTexture))),this.sV().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(I)&&this.sV().depthPeelingRenderer.bind(E),this._eventInfo.subMesh=A,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,o.h)(E,this,B),this.bindEyePosition(E)}else B.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(b||!this.isFrozen){var P;if(B.lightsEnabled&&!this._disableLighting&&(0,L.h)(B,I,E,F,this._maxSimultaneousLights),(B.fogEnabled&&I.applyFog&&B.fogMode!==Y.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||I.receiveShadows||F.PREPASS)&&this.bindView(E),(0,L.d)(B,I,E),F.NUM_MORPH_INFLUENCERS&&(0,L.o)(I,E),F.BAKED_VERTEX_ANIMATION_TEXTURE)null===(P=I.bakedVertexAnimationManager)||void 0===P||P.bind(E,F.INSTANCES);this.useLogarithmicDepth&&(0,L.l)(F,E,B),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(I,this._activeEffect,A),X.update()}getAnimatables(){const V=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&V.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&V.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&V.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&V.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&V.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&V.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&V.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&V.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&V.push(this._refractionTexture),V}getActiveTextures(){const V=super.getActiveTextures();return this._diffuseTexture&&V.push(this._diffuseTexture),this._ambientTexture&&V.push(this._ambientTexture),this._opacityTexture&&V.push(this._opacityTexture),this._reflectionTexture&&V.push(this._reflectionTexture),this._emissiveTexture&&V.push(this._emissiveTexture),this._specularTexture&&V.push(this._specularTexture),this._bumpTexture&&V.push(this._bumpTexture),this._lightmapTexture&&V.push(this._lightmapTexture),this._refractionTexture&&V.push(this._refractionTexture),V}hasTexture(V){return!!super.hasTexture(V)||(this._diffuseTexture===V||(this._ambientTexture===V||(this._opacityTexture===V||(this._reflectionTexture===V||(this._emissiveTexture===V||(this._specularTexture===V||(this._bumpTexture===V||(this._lightmapTexture===V||this._refractionTexture===V))))))))}dispose(V,I){var A,B,F,E,Y,H,c,b,X;I&&(null===(A=this._diffuseTexture)||void 0===A||A.dispose(),null===(B=this._ambientTexture)||void 0===B||B.dispose(),null===(F=this._opacityTexture)||void 0===F||F.dispose(),null===(E=this._reflectionTexture)||void 0===E||E.dispose(),null===(Y=this._emissiveTexture)||void 0===Y||Y.dispose(),null===(H=this._specularTexture)||void 0===H||H.dispose(),null===(c=this._bumpTexture)||void 0===c||c.dispose(),null===(b=this._lightmapTexture)||void 0===b||b.dispose(),null===(X=this._refractionTexture)||void 0===X||X.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(V,I)}clone(V){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const B=z.b.Clone((()=>new S(V,this.sV())),this,{cloneTexturesOnlyOnce:I});return B.name=V,B.id=V,this.stencil.copyTo(B.stencil),this._clonePlugins(B,A),B}static Parse(V,I,A){const B=z.b.Parse((()=>new S(V.name,I)),V,I,A);return V.stencil&&B.stencil.parse(V.stencil,I,A),P.c._ParsePlugins(V,B,I,A),B}static get DiffuseTextureEnabled(){return u.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(V){u.d.DiffuseTextureEnabled=V}static get DetailTextureEnabled(){return u.d.DetailTextureEnabled}static set DetailTextureEnabled(V){u.d.DetailTextureEnabled=V}static get AmbientTextureEnabled(){return u.d.AmbientTextureEnabled}static set AmbientTextureEnabled(V){u.d.AmbientTextureEnabled=V}static get OpacityTextureEnabled(){return u.d.OpacityTextureEnabled}static set OpacityTextureEnabled(V){u.d.OpacityTextureEnabled=V}static get ReflectionTextureEnabled(){return u.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(V){u.d.ReflectionTextureEnabled=V}static get EmissiveTextureEnabled(){return u.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(V){u.d.EmissiveTextureEnabled=V}static get SpecularTextureEnabled(){return u.d.SpecularTextureEnabled}static set SpecularTextureEnabled(V){u.d.SpecularTextureEnabled=V}static get BumpTextureEnabled(){return u.d.BumpTextureEnabled}static set BumpTextureEnabled(V){u.d.BumpTextureEnabled=V}static get LightmapTextureEnabled(){return u.d.LightmapTextureEnabled}static set LightmapTextureEnabled(V){u.d.LightmapTextureEnabled=V}static get RefractionTextureEnabled(){return u.d.RefractionTextureEnabled}static set RefractionTextureEnabled(V){u.d.RefractionTextureEnabled=V}static get ColorGradingTextureEnabled(){return u.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(V){u.d.ColorGradingTextureEnabled=V}static get FresnelEnabled(){return u.d.FresnelEnabled}static set FresnelEnabled(V){u.d.FresnelEnabled=V}}S.ForceGLSL=!1,(0,B.b)([(0,F.u)("diffuseTexture")],S.prototype,"_diffuseTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"diffuseTexture",void 0),(0,B.b)([(0,F.u)("ambientTexture")],S.prototype,"_ambientTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"ambientTexture",void 0),(0,B.b)([(0,F.u)("opacityTexture")],S.prototype,"_opacityTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"opacityTexture",void 0),(0,B.b)([(0,F.u)("reflectionTexture")],S.prototype,"_reflectionTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"reflectionTexture",void 0),(0,B.b)([(0,F.u)("emissiveTexture")],S.prototype,"_emissiveTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"emissiveTexture",void 0),(0,B.b)([(0,F.u)("specularTexture")],S.prototype,"_specularTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"specularTexture",void 0),(0,B.b)([(0,F.u)("bumpTexture")],S.prototype,"_bumpTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"bumpTexture",void 0),(0,B.b)([(0,F.u)("lightmapTexture")],S.prototype,"_lightmapTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"lightmapTexture",void 0),(0,B.b)([(0,F.u)("refractionTexture")],S.prototype,"_refractionTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"refractionTexture",void 0),(0,B.b)([(0,F.j)("ambient")],S.prototype,"ambientColor",void 0),(0,B.b)([(0,F.j)("diffuse")],S.prototype,"diffuseColor",void 0),(0,B.b)([(0,F.j)("specular")],S.prototype,"specularColor",void 0),(0,B.b)([(0,F.j)("emissive")],S.prototype,"emissiveColor",void 0),(0,B.b)([(0,F.A)()],S.prototype,"specularPower",void 0),(0,B.b)([(0,F.A)("useAlphaFromDiffuseTexture")],S.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],S.prototype,"useAlphaFromDiffuseTexture",void 0),(0,B.b)([(0,F.A)("useEmissiveAsIllumination")],S.prototype,"_useEmissiveAsIllumination",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useEmissiveAsIllumination",void 0),(0,B.b)([(0,F.A)("linkEmissiveWithDiffuse")],S.prototype,"_linkEmissiveWithDiffuse",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"linkEmissiveWithDiffuse",void 0),(0,B.b)([(0,F.A)("useSpecularOverAlpha")],S.prototype,"_useSpecularOverAlpha",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useSpecularOverAlpha",void 0),(0,B.b)([(0,F.A)("useReflectionOverAlpha")],S.prototype,"_useReflectionOverAlpha",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useReflectionOverAlpha",void 0),(0,B.b)([(0,F.A)("disableLighting")],S.prototype,"_disableLighting",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"disableLighting",void 0),(0,B.b)([(0,F.A)("useObjectSpaceNormalMap")],S.prototype,"_useObjectSpaceNormalMap",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useObjectSpaceNormalMap",void 0),(0,B.b)([(0,F.A)("useParallax")],S.prototype,"_useParallax",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallax",void 0),(0,B.b)([(0,F.A)("useParallaxOcclusion")],S.prototype,"_useParallaxOcclusion",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useParallaxOcclusion",void 0),(0,B.b)([(0,F.A)()],S.prototype,"parallaxScaleBias",void 0),(0,B.b)([(0,F.A)("roughness")],S.prototype,"_roughness",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"roughness",void 0),(0,B.b)([(0,F.A)()],S.prototype,"indexOfRefraction",void 0),(0,B.b)([(0,F.A)()],S.prototype,"invertRefractionY",void 0),(0,B.b)([(0,F.A)()],S.prototype,"alphaCutOff",void 0),(0,B.b)([(0,F.A)("useLightmapAsShadowmap")],S.prototype,"_useLightmapAsShadowmap",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useLightmapAsShadowmap",void 0),(0,B.b)([(0,F.m)("diffuseFresnelParameters")],S.prototype,"_diffuseFresnelParameters",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"diffuseFresnelParameters",void 0),(0,B.b)([(0,F.m)("opacityFresnelParameters")],S.prototype,"_opacityFresnelParameters",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],S.prototype,"opacityFresnelParameters",void 0),(0,B.b)([(0,F.m)("reflectionFresnelParameters")],S.prototype,"_reflectionFresnelParameters",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"reflectionFresnelParameters",void 0),(0,B.b)([(0,F.m)("refractionFresnelParameters")],S.prototype,"_refractionFresnelParameters",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"refractionFresnelParameters",void 0),(0,B.b)([(0,F.m)("emissiveFresnelParameters")],S.prototype,"_emissiveFresnelParameters",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"emissiveFresnelParameters",void 0),(0,B.b)([(0,F.A)("useReflectionFresnelFromSpecular")],S.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsFresnelDirty")],S.prototype,"useReflectionFresnelFromSpecular",void 0),(0,B.b)([(0,F.A)("useGlossinessFromSpecularMapAlpha")],S.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,B.b)([(0,F.A)("maxSimultaneousLights")],S.prototype,"_maxSimultaneousLights",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsLightsDirty")],S.prototype,"maxSimultaneousLights",void 0),(0,B.b)([(0,F.A)("invertNormalMapX")],S.prototype,"_invertNormalMapX",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapX",void 0),(0,B.b)([(0,F.A)("invertNormalMapY")],S.prototype,"_invertNormalMapY",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"invertNormalMapY",void 0),(0,B.b)([(0,F.A)("twoSidedLighting")],S.prototype,"_twoSidedLighting",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"twoSidedLighting",void 0),(0,B.b)([(0,F.A)("applyDecalMapAfterDetailMap")],S.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,B.b)([(0,F.d)("_markAllSubMeshesAsMiscDirty")],S.prototype,"applyDecalMapAfterDetailMap",void 0),(0,t.e)("BABYLON.StandardMaterial",S),Y.b.DefaultMaterialFactory=V=>new S("default material",V)}}]);