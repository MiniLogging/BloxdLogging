"use strict";(self.ra6kpa9z1sg=self.ra6kpa9z1sg||[]).push([[25],{13179:(p,b,M)=>{M.d(b,{b:()=>x});var h=M(12757),Q=M(13097),mp=M(12764),y=M(13175),P=M(13170),w=M(13183),t=M(13143);class z extends P.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class x extends w.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(p){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(p,"DetailMap",140,new z,b),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=Q.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=p._dirtyCallbacks[1]}isReadyForSubMesh(p,b,M){return!this._isEnabled||!(p._areTexturesDirty&&b.texturesEnabled&&M.getCaps().standardDerivatives&&this._texture&&y.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(p,b){if(this._isEnabled){p.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const M=b.getEngine();p._areTexturesDirty&&(M.getCaps().standardDerivatives&&this._texture&&y.b.DetailTextureEnabled&&this._isEnabled?((0,t.U)(this._texture,p,"DETAIL"),p.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):p.DETAIL=!1)}else p.DETAIL=!1}bindForSubMesh(p,b){if(!this._isEnabled)return;const M=this._material.isFrozen;p.useUbo&&M&&p.isSync||this._texture&&y.b.DetailTextureEnabled&&(p.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,t.y)(this._texture,p,"detail")),b.texturesEnabled&&this._texture&&y.b.DetailTextureEnabled&&p.setTexture("detailSampler",this._texture)}hasTexture(p){return this._texture===p}getActiveTextures(p){this._texture&&p.push(this._texture)}getAnimatables(p){this._texture&&this._texture.animations&&this._texture.animations.length>0&&p.push(this._texture)}dispose(p){var b;p&&(null===(b=this._texture)||void 0===b||b.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(p){p.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,h.e)([(0,mp.E)("detailTexture"),(0,mp.d)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"texture",void 0),(0,h.e)([(0,mp.N)()],x.prototype,"diffuseBlendLevel",void 0),(0,h.e)([(0,mp.N)()],x.prototype,"roughnessBlendLevel",void 0),(0,h.e)([(0,mp.N)()],x.prototype,"bumpLevel",void 0),(0,h.e)([(0,mp.N)(),(0,mp.d)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"normalBlendMethod",void 0),(0,h.e)([(0,mp.N)(),(0,mp.d)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"isEnabled",void 0)},13170:(p,b,M)=>{M.d(b,{d:()=>h});class h{constructor(p){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=p,p)for(const b in p)Object.prototype.hasOwnProperty.call(p,b)&&this._setDefaultValue(b)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let p=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||p,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const p of Object.keys(this))"_"!==p[0]&&this._keys.push(p);if(this._externalProperties)for(const p in this._externalProperties)-1===this._keys.indexOf(p)&&this._keys.push(p)}isEqual(p){if(this._keys.length!==p._keys.length)return!1;for(let b=0;b<this._keys.length;b++){const M=this._keys[b];if(this[M]!==p[M])return!1}return!0}cloneTo(p){this._keys.length!==p._keys.length&&(p._keys=this._keys.slice(0));for(let b=0;b<this._keys.length;b++){const M=this._keys[b];p[M]=this[M]}}reset(){for(const p of this._keys)this._setDefaultValue(p)}_setDefaultValue(p){var b,M,h,Q;const mp=(null===(b=this._externalProperties)||void 0===b||null===(M=b[p])||void 0===M?void 0:M.type)??typeof this[p],y=null===(h=this._externalProperties)||void 0===h||null===(Q=h[p])||void 0===Q?void 0:Q.default;switch(mp){case"number":this[p]=y??0;break;case"string":this[p]=y??"";break;default:this[p]=y??!1}}toString(){let p="";for(let b=0;b<this._keys.length;b++){const M=this._keys[b],h=this[M];switch(typeof h){case"number":case"string":p+="#define "+M+" "+h+"\n";break;default:h&&(p+="#define "+M+"\n")}}return p}}},13175:(p,b,M)=>{M.d(b,{b:()=>Q});var h=M(12682);class Q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(p){this._DiffuseTextureEnabled!==p&&(this._DiffuseTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(p){this._BaseWeightTextureEnabled!==p&&(this._BaseWeightTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(p){this._BaseDiffuseRoughnessTextureEnabled!==p&&(this._BaseDiffuseRoughnessTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(p){this._DetailTextureEnabled!==p&&(this._DetailTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(p){this._DecalMapEnabled!==p&&(this._DecalMapEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(p){this._AmbientTextureEnabled!==p&&(this._AmbientTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(p){this._OpacityTextureEnabled!==p&&(this._OpacityTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(p){this._ReflectionTextureEnabled!==p&&(this._ReflectionTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(p){this._EmissiveTextureEnabled!==p&&(this._EmissiveTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(p){this._SpecularTextureEnabled!==p&&(this._SpecularTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(p){this._BumpTextureEnabled!==p&&(this._BumpTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(p){this._LightmapTextureEnabled!==p&&(this._LightmapTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(p){this._RefractionTextureEnabled!==p&&(this._RefractionTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(p){this._ColorGradingTextureEnabled!==p&&(this._ColorGradingTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(p){this._FresnelEnabled!==p&&(this._FresnelEnabled=p,h.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(p){this._ClearCoatTextureEnabled!==p&&(this._ClearCoatTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(p){this._ClearCoatBumpTextureEnabled!==p&&(this._ClearCoatBumpTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(p){this._ClearCoatTintTextureEnabled!==p&&(this._ClearCoatTintTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(p){this._SheenTextureEnabled!==p&&(this._SheenTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(p){this._AnisotropicTextureEnabled!==p&&(this._AnisotropicTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(p){this._ThicknessTextureEnabled!==p&&(this._ThicknessTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(p){this._RefractionIntensityTextureEnabled!==p&&(this._RefractionIntensityTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(p){this._TranslucencyIntensityTextureEnabled!==p&&(this._TranslucencyIntensityTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(p){this._TranslucencyColorTextureEnabled!==p&&(this._TranslucencyColorTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(p){this._IridescenceTextureEnabled!==p&&(this._IridescenceTextureEnabled=p,h.b.MarkAllMaterialsAsDirty(1))}}Q._DiffuseTextureEnabled=!0,Q._BaseWeightTextureEnabled=!0,Q._BaseDiffuseRoughnessTextureEnabled=!0,Q._DetailTextureEnabled=!0,Q._DecalMapEnabled=!0,Q._AmbientTextureEnabled=!0,Q._OpacityTextureEnabled=!0,Q._ReflectionTextureEnabled=!0,Q._EmissiveTextureEnabled=!0,Q._SpecularTextureEnabled=!0,Q._BumpTextureEnabled=!0,Q._LightmapTextureEnabled=!0,Q._RefractionTextureEnabled=!0,Q._ColorGradingTextureEnabled=!0,Q._FresnelEnabled=!0,Q._ClearCoatTextureEnabled=!0,Q._ClearCoatBumpTextureEnabled=!0,Q._ClearCoatTintTextureEnabled=!0,Q._SheenTextureEnabled=!0,Q._AnisotropicTextureEnabled=!0,Q._ThicknessTextureEnabled=!0,Q._RefractionIntensityTextureEnabled=!0,Q._TranslucencyIntensityTextureEnabled=!0,Q._TranslucencyColorTextureEnabled=!0,Q._IridescenceTextureEnabled=!0},13192:(p,b,M)=>{M.d(b,{d:()=>mp});var h,Q=M(12777);!function(p){p[p.Zero=0]="Zero",p[p.One=1]="One",p[p.MaxViewZ=2]="MaxViewZ"}(h||(h={}));class mp{static CreateConfiguration(p){return mp._Configurations[p]={defines:{},previousWorldMatrices:{},previousViewProjection:Q.Matrix.Zero(),currentViewProjection:Q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},mp._Configurations[p]}static DeleteConfiguration(p){delete mp._Configurations[p]}static GetConfiguration(p){return mp._Configurations[p]}static AddUniformsAndSamplers(p,b){p.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(p,b){for(const M of b)if(M.Lb)for(const b of M.Lb)b._removeDrawWrapper(p)}static PrepareDefines(p,b,M){if(!M._arePrePassDirty)return;const h=mp._Configurations[p];if(!h)return;M.PREPASS=!0,M.PREPASS_COLOR=!1,M.PREPASS_COLOR_INDEX=-1;let Q=0;for(let y=0;y<mp.GeometryTextureDescriptions.length;y++){const p=mp.GeometryTextureDescriptions[y],b=p.define,P=p.defineIndex,w=h.defines[P];void 0!==w?(M[b]=!0,M[P]=w,Q++):(M[b]=!1,delete M[P])}M.SCENE_MRT_COUNT=Q,M.BONES_VELOCITY_ENABLED=b.useBones&&b.computeBonesUsingShaders&&b.skeleton&&!b.skeleton.isUsingTextureForMatrices&&-1===h.excludedSkinnedMesh.indexOf(b)}static Bind(p,b,M,h,Q){const y=mp._Configurations[p];if(!y)return;const P=M.upp(),w=P.getEngine();if(y.reverseCulling&&w.setStateCullFaceType(P._mirroredCameraPosition?Q.cullBackFaces:!Q.cullBackFaces),(void 0!==y.defines.PREPASS_VELOCITY_INDEX||void 0!==y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(y.previousWorldMatrices[M.uniqueId]||(y.previousWorldMatrices[M.uniqueId]=h.clone()),y.previousViewProjection||(y.previousViewProjection=P.getTransformMatrix().clone(),y.currentViewProjection=P.getTransformMatrix().clone()),y.currentViewProjection.updateFlag!==P.getTransformMatrix().updateFlag?(y.lastUpdateFrameId=w.frameId,y.previousViewProjection.mp(y.currentViewProjection),y.currentViewProjection.mp(P.getTransformMatrix())):y.lastUpdateFrameId!==w.frameId&&(y.lastUpdateFrameId=w.frameId,y.previousViewProjection.mp(y.currentViewProjection)),b.setMatrix("previousWorld",y.previousWorldMatrices[M.uniqueId]),b.setMatrix("previousViewProjection",y.previousViewProjection),y.previousWorldMatrices[M.uniqueId]=h.clone(),M.useBones&&M.computeBonesUsingShaders&&M.skeleton)){const p=M.skeleton;if(!p.isUsingTextureForMatrices||-1===b.getUniformIndex("boneTextureWidth")){const h=p.getTransformMatrices(M);h&&(y.previousBones[M.uniqueId]||(y.previousBones[M.uniqueId]=h.slice()),b.setMatrices("mPreviousBones",y.previousBones[M.uniqueId]),y.previousBones[M.uniqueId].set(h))}}}}mp.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],mp._Configurations={}},13183:(p,b,M)=>{M.d(b,{e:()=>f});var h=M(12757),Q=M(12764),mp=M(13097),y=M(12652),P=M(12673),w=M(12695);const t=new RegExp("^([gimus]+)!");class z{constructor(p){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=p,this._scene=p.upp(),this._engine=this._scene.getEngine()}_addPlugin(p){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===p.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!p.isCompatible(this._material.shaderLanguage))throw`The plugin "${p.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const b=p.getClassName();z._MaterialPluginClassToMainDefine[b]||(z._MaterialPluginClassToMainDefine[b]="MATERIALPLUGIN_"+ ++z._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(p,b)=>this._handlePluginEvent(p,b),this._plugins.push(p),this._plugins.sort(((p,b)=>p.priority-b.priority)),this._codeInjectionPoints={};const M={};M[z._MaterialPluginClassToMainDefine[b]]={type:"boolean",default:!0};for(const h of this._plugins)h.collectDefines(M),this._collectPointNames("vertex",h.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",h.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=M,!0}_activatePlugin(p){-1===this._activePlugins.indexOf(p)&&(this._activePlugins.push(p),this._activePlugins.sort(((p,b)=>p.priority-b.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),p.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(p),this._activePluginsForExtraEvents.sort(((p,b)=>p.priority-b.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(p){for(let b=0;b<this._plugins.length;++b)if(this._plugins[b].name===p)return this._plugins[b];return null}_handlePluginEventIsReadyForSubMesh(p){let b=!0;for(const M of this._activePlugins)b=b&&M.isReadyForSubMesh(p.defines,this._scene,this._engine,p.subMesh);p.isReadyForSubMesh=b}_handlePluginEventPrepareDefinesBeforeAttributes(p){for(const b of this._activePlugins)b.prepareDefinesBeforeAttributes(p.defines,this._scene,p.mesh)}_handlePluginEventPrepareDefines(p){for(const b of this._activePlugins)b.prepareDefines(p.defines,this._scene,p.mesh)}_handlePluginEventHardBindForSubMesh(p){for(const b of this._activePluginsForExtraEvents)b.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,p.subMesh)}_handlePluginEventBindForSubMesh(p){for(const b of this._activePlugins)b.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,p.subMesh)}_handlePluginEventHasRenderTargetTextures(p){let b=!1;for(const M of this._activePluginsForExtraEvents)if(b=M.hasRenderTargetTextures(),b)break;p.hasRenderTargetTextures=b}_handlePluginEventFillRenderTargetTextures(p){for(const b of this._activePluginsForExtraEvents)b.fillRenderTargetTextures(p.renderTargets)}_handlePluginEvent(p,b){switch(p){case 512:{const p=b;for(const b of this._activePlugins)b.getActiveTextures(p.activeTextures);break}case 256:{const p=b;for(const b of this._activePlugins)b.getAnimatables(p.animatables);break}case 1024:{const p=b;let M=!1;for(const b of this._activePlugins)if(M=b.hasTexture(p.texture),M)break;p.hasTexture=M;break}case 2:{const p=b;for(const b of this._plugins)b.dispose(p.forceDisposeTextures);break}case 4:b.defineNames=this._defineNamesFromPlugins;break;case 128:{const p=b;for(const b of this._activePlugins)p.fallbackRank=b.addFallbacks(p.defines,p.fallbacks,p.fallbackRank),b.getAttributes(p.attributes,this._scene,p.mesh);this._uniformList.length>0&&p.uniforms.push(...this._uniformList),this._samplerList.length>0&&p.samplers.push(...this._samplerList),this._uboList.length>0&&p.uniformBuffersNames.push(...this._uboList),p.customCode=this._injectCustomCode(p,p.customCode);break}case 8:{const p=b;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const M=1===this._material.shaderLanguage;for(const b of this._plugins){const h=b.getUniforms(this._material.shaderLanguage);if(h){if(h.ubo)for(const b of h.ubo){if(b.size&&b.type){const h=b.arraySize??0;if(p.ubo.addUniform(b.name,b.size,h),M){let p;switch(b.type){case"mat4":p="mat4x4f";break;case"float":p="f32";break;default:p=`${b.type}f`}this._uboDeclaration+=h>0?`uniform ${b.name}: array<${p}, ${h}>;\n`:`uniform ${b.name}: ${p};\n`}else this._uboDeclaration+=`${b.type} ${b.name}${h>0?`[${h}]`:""};\n`}this._uniformList.push(b.name)}h.vertex&&(this._vertexDeclaration+=h.vertex+"\n"),h.fragment&&(this._fragmentDeclaration+=h.fragment+"\n")}b.getSamplers(this._samplerList),b.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(p,b){if(b)for(const M in b)this._codeInjectionPoints[p]||(this._codeInjectionPoints[p]={}),this._codeInjectionPoints[p][M]=!0}_injectCustomCode(p,b){return(M,h)=>{var Q;b&&(h=b(M,h)),this._uboDeclaration&&(h=h.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(h=h.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(h=h.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const mp=null===(Q=this._codeInjectionPoints)||void 0===Q?void 0:Q[M];if(!mp)return h;let y=null;for(let b in mp){let Q="";for(const h of this._activePlugins){var z;let mp=null===(z=h.getCustomCode(M,this._material.shaderLanguage))||void 0===z?void 0:z[b];if(mp){if(h.resolveIncludes){if(null===y){const b=0;y={defines:[],indexParameters:p.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:w.d.GetShadersRepository(b),includesShadersStore:w.d.GetIncludesShadersStore(b),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,zb:this._engine.zb,processCodeAfterIncludes:void 0}}y.isFragment="fragment"===M,(0,P.h)(mp,y,(p=>mp=p))}Q+=mp+"\n"}}if(Q.length>0)if("!"===b.charAt(0)){b=b.substring(1);let p="g";if("!"===b.charAt(0))p="",b=b.substring(1);else{const M=t.exec(b);M&&M.length>=2&&(p=M[1],b=b.substring(p.length+1))}p.indexOf("g")<0&&(p+="g");const M=h,mp=new RegExp(b,p);let y=mp.exec(M);for(;null!==y;){let p=Q;for(let b=0;b<y.length;++b)p=p.replace("$"+b,y[b]);h=h.replace(y[0],p),y=mp.exec(M)}}else{const p="#define "+b;h=h.replace(p,"\n"+Q+"\n"+p)}}return h}}}z._MaterialPluginClassToMainDefine={},z._MaterialPluginCounter=0,y.c.OnEnginesDisposedObservable.add((()=>{c()}));const x=[];let S=!1,X=null;function c(){x.length=0,S=!1,mp.b.OnEventObservable.remove(X),X=null}var J=M(12812),g=M(12730);class f{isCompatible(p){return 0===p}_enable(p){p&&this._pluginManager._activatePlugin(this)}constructor(p,b,M,h){let Q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],mp=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=p,this.name=b,this.priority=M,this.resolveIncludes=y,p.pluginManager||(p.pluginManager=new z(p),p.Xb.add((()=>{p.pluginManager=void 0}))),this._pluginDefineNames=h,this._pluginManager=p.pluginManager,Q&&this._pluginManager._addPlugin(this),mp&&this._enable(!0),this.markAllDefinesAsDirty=p._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(p,b,M,h){return!0}hardBindForSubMesh(p,b,M,h){}bindForSubMesh(p,b,M,h){}dispose(p){}getCustomCode(p){return null}collectDefines(p){if(this._pluginDefineNames)for(const b of Object.keys(this._pluginDefineNames)){if("_"===b[0])continue;const M=typeof this._pluginDefineNames[b];p[b]={type:"number"===M?"number":"string"===M?"string":"boolean"===M?"boolean":"object",default:this._pluginDefineNames[b]}}}prepareDefinesBeforeAttributes(p,b,M){}prepareDefines(p,b,M){}hasTexture(p){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(p){}getActiveTextures(p){}getAnimatables(p){}addFallbacks(p,b,M){return M}getSamplers(p){}getAttributes(p,b,M){}getUniformBuffersNames(p){}getUniforms(){return{}}copyTo(p){J.e.Clone((()=>p),this)}serialize(){return J.e.Serialize(this)}parse(p,b,M){J.e.Parse((()=>this),p,b,M)}}(0,h.e)([(0,Q.N)()],f.prototype,"name",void 0),(0,h.e)([(0,Q.N)()],f.prototype,"priority",void 0),(0,h.e)([(0,Q.N)()],f.prototype,"resolveIncludes",void 0),(0,h.e)([(0,Q.N)()],f.prototype,"registerForExtraEvents",void 0),(0,g.c)("BABYLON.MaterialPluginBase",f)},13164:(p,b,M)=>{M.d(b,{c:()=>h});class h{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(p){p.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(p){}bindForSubMesh(p,b,M,h,Q){if(b.prePassRenderer&&b.prePassRenderer.enabled&&b.prePassRenderer.currentRTisSceneRT&&(-1!==b.prePassRenderer.getIndex(2)||-1!==b.prePassRenderer.getIndex(11))){this.previousWorldMatrices[M.uniqueId]||(this.previousWorldMatrices[M.uniqueId]=h.clone()),this.previousViewProjection||(this.previousViewProjection=b.getTransformMatrix().clone(),this.currentViewProjection=b.getTransformMatrix().clone());const Q=b.getEngine();this.currentViewProjection.updateFlag!==b.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=Q.frameId,this.previousViewProjection.mp(this.currentViewProjection),this.currentViewProjection.mp(b.getTransformMatrix())):this._lastUpdateFrameId!==Q.frameId&&(this._lastUpdateFrameId=Q.frameId,this.previousViewProjection.mp(this.currentViewProjection)),p.setMatrix("previousWorld",this.previousWorldMatrices[M.uniqueId]),p.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[M.uniqueId]=h.clone()}}}},13156:(p,b,M)=>{M.d(b,{PM:()=>d});var h=M(12757),Q=M(12764),mp=M(12867),y=M(13013),P=M(12820),w=M(12847),t=M(13164),z=M(13021),x=M(13097),S=M(13170),X=M(13094),c=M(12753),J=M(12730),g=M(13175),f=M(13087),Y=M(13179),a=M(13147),o=M(13143),l=M(12812),L=M(13192);const u={effect:null,subMesh:null};class e extends S.d{constructor(p){super(p),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(p){const b=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const M of b)this[M]=M===p}}class d extends X.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(p){this._attachImageProcessingConfiguration(p),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(p){p!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=p||this.upp().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(p){this.imageProcessingConfiguration.colorCurvesEnabled=p}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(p){this.imageProcessingConfiguration.colorGradingEnabled=p}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(p){this._imageProcessingConfiguration.toneMappingEnabled=p}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(p){this._imageProcessingConfiguration.exposure=p}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(p){this._imageProcessingConfiguration.contrast=p}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(p){this._imageProcessingConfiguration.colorGradingTexture=p}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(p){this._imageProcessingConfiguration.colorCurves=p}get canRenderToMRT(){return!0}constructor(p,b){super(p,b,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||d.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new P.wM(0,0,0),this.diffuseColor=new P.wM(1,1,1),this.specularColor=new P.wM(1,1,1),this.emissiveColor=new P.wM(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new mp.d(16),this._globalAmbientColor=new P.wM(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Y.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new t.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),d.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),d.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(d.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(d.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"PM"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===x.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.lb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==x.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.lb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(p,b){let h=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const Q=b._drawWrapper;if(Q.effect&&this.isFrozen&&Q._wasPreviouslyReady&&Q._wasPreviouslyUsingInstances===h)return!0;b.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),b.materialDefines=new e(this._eventInfo.defineNames));const mp=this.upp(),y=b.materialDefines;if(this._isReadyForSubMesh(b))return!0;const P=mp.getEngine();y._needNormals=(0,o.Q)(mp,p,y,!0,this._maxSimultaneousLights,this._disableLighting),(0,o._)(mp,y);const x=this.needAlphaBlendingForMesh(p)&&this.upp().useOrderIndependentTransparency;if((0,o.gb)(mp,y,this.canRenderToMRT&&!x),(0,o.cb)(mp,y,x),L.d.PrepareDefines(P.currentRenderPassId,p,y),y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,y._needUVs=!1;for(let p=1;p<=6;++p)y["MAINUV"+p]=!1;if(mp.texturesEnabled){if(y.DIFFUSEDIRECTUV=0,y.BUMPDIRECTUV=0,y.AMBIENTDIRECTUV=0,y.OPACITYDIRECTUV=0,y.EMISSIVEDIRECTUV=0,y.SPECULARDIRECTUV=0,y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&d.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._diffuseTexture,y,"DIFFUSE")}else y.DIFFUSE=!1;if(this._ambientTexture&&d.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._ambientTexture,y,"AMBIENT")}else y.AMBIENT=!1;if(this._opacityTexture&&d.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._opacityTexture,y,"OPACITY"),y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else y.OPACITY=!1;if(this._reflectionTexture&&d.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(y._needNormals=!0,y.REFLECTION=!0,y.ROUGHNESS=this._roughness>0,y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===c.c.INVCUBIC_MODE,y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,y.REFLECTIONMAP_OPPOSITEZ=y.REFLECTIONMAP_3D&&this.upp().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case c.c.EXPLICIT_MODE:y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case c.c.PLANAR_MODE:y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case c.c.PROJECTION_MODE:y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case c.c.SKYBOX_MODE:y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case c.c.SPHERICAL_MODE:y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case c.c.EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case c.c.FIXED_EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case c.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case c.c.CUBIC_MODE:case c.c.INVCUBIC_MODE:default:y.setReflectionMode("REFLECTIONMAP_CUBIC")}y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else y.REFLECTION=!1,y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&d.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._emissiveTexture,y,"EMISSIVE")}else y.EMISSIVE=!1;if(this._lightmapTexture&&d.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._lightmapTexture,y,"LIGHTMAP"),y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else y.LIGHTMAP=!1;if(this._specularTexture&&d.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,o.U)(this._specularTexture,y,"SPECULAR"),y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else y.SPECULAR=!1;if(mp.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&d.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,o.U)(this._bumpTexture,y,"BUMP"),y.PARALLAX=this._useParallax,y.PARALLAX_RHS=mp.useRightHandedSystem,y.PARALLAXOCCLUSION=this._useParallaxOcclusion,y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else y.BUMP=!1,y.PARALLAX=!1,y.PARALLAX_RHS=!1,y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&d.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;y._needUVs=!0,y.REFRACTION=!0,y.REFRACTIONMAP_3D=this._refractionTexture.isCube,y.RGBDREFRACTION=this._refractionTexture.isRGBD,y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else y.REFRACTION=!1;y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else y.DIFFUSE=!1,y.AMBIENT=!1,y.OPACITY=!1,y.REFLECTION=!1,y.EMISSIVE=!1,y.LIGHTMAP=!1,y.BUMP=!1,y.REFRACTION=!1;y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,y.SPECULAROVERALPHA=this._useSpecularOverAlpha,y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(p)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=y,this._eventInfo.subMesh=b,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(y),y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(y._areFresnelDirty&&(d.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,y._needNormals=!0,y.FRESNEL=!0):y.FRESNEL=!1),y.AREALIGHTUSED)for(let M=0;M<p.lightSources.length;M++)if(!p.lightSources[M]._isReady())return!1;(0,o.W)(p,mp,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(p),y,this._applyDecalMapAfterDetailMap),(0,o.P)(mp,P,this,y,h,null,b.getRenderingMesh().hasThinInstances),this._eventInfo.defines=y,this._eventInfo.mesh=p,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,o.O)(p,y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let S=!1;if(y.isDirty){const h=y._areLightsDisposed;y.markAsProcessed();const Q=new f.d;y.REFLECTION&&Q.addFallback(0,"REFLECTION"),y.SPECULAR&&Q.addFallback(0,"SPECULAR"),y.BUMP&&Q.addFallback(0,"BUMP"),y.PARALLAX&&Q.addFallback(1,"PARALLAX"),y.PARALLAX_RHS&&Q.addFallback(1,"PARALLAX_RHS"),y.PARALLAXOCCLUSION&&Q.addFallback(0,"PARALLAXOCCLUSION"),y.SPECULAROVERALPHA&&Q.addFallback(0,"SPECULAROVERALPHA"),y.FOG&&Q.addFallback(1,"FOG"),y.POINTSIZE&&Q.addFallback(0,"POINTSIZE"),y.LOGARITHMICDEPTH&&Q.addFallback(0,"LOGARITHMICDEPTH"),(0,o.B)(y,Q,this._maxSimultaneousLights),y.SPECULARTERM&&Q.addFallback(0,"SPECULARTERM"),y.DIFFUSEFRESNEL&&Q.addFallback(1,"DIFFUSEFRESNEL"),y.OPACITYFRESNEL&&Q.addFallback(2,"OPACITYFRESNEL"),y.REFLECTIONFRESNEL&&Q.addFallback(3,"REFLECTIONFRESNEL"),y.EMISSIVEFRESNEL&&Q.addFallback(4,"EMISSIVEFRESNEL"),y.FRESNEL&&Q.addFallback(4,"FRESNEL"),y.MULTIVIEW&&Q.addFallback(0,"MULTIVIEW");const x=[w.f.PositionKind];y.NORMAL&&x.push(w.f.NormalKind),y.TANGENT&&x.push(w.f.TangentKind);for(let p=1;p<=6;++p)y["UV"+p]&&x.push(`uv${1===p?"":p}`);y.VERTEXCOLOR&&x.push(w.f.ColorKind),(0,o.F)(x,p,y,Q),(0,o.H)(x,y),(0,o.L)(x,p,y),(0,o.E)(x,p,y);let X="default";const c=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],J=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],g=["Material","Scene","Mesh"],Y={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=Q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=y,this._eventInfo.uniforms=c,this._eventInfo.attributes=x,this._eventInfo.samplers=J,this._eventInfo.uniformBuffersNames=g,this._eventInfo.customCode=void 0,this._eventInfo.mesh=p,this._eventInfo.indexParameters=Y,this._callbackPluginEventGeneric(128,this._eventInfo),L.d.AddUniformsAndSamplers(c,J),t.c.AddUniforms(c),t.c.AddSamplers(J),z.c&&(z.c.PrepareUniforms(c,y),z.c.PrepareSamplers(J,y)),(0,o.ib)({uniformsNames:c,uniformBuffersNames:g,samplers:J,defines:y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,a.e)(c);const l={};this.customShaderNameResolve&&(X=this.customShaderNameResolve(X,c,g,J,y,x,l));const e=y.toString(),d=b.effect;let I=mp.getEngine().createEffect(X,{attributes:x,uniformsNames:c,uniformBuffersNames:g,samplers:J,defines:e,fallbacks:Q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Y,processFinalCode:l.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([M.e(41),M.e(64)]).then(M.bind(M,15329)),Promise.all([M.e(39),M.e(65)]).then(M.bind(M,15484))]):await Promise.all([Promise.all([M.e(34),M.e(67)]).then(M.bind(M,15566)),Promise.all([M.e(33),M.e(68)]).then(M.bind(M,15710))]),this._shadersLoaded=!0}},P);if(this._eventInfo.customCode=void 0,I)if(this._onEffectCreatedObservable&&(u.effect=I,u.subMesh=b,this._onEffectCreatedObservable.notifyObservers(u)),this.allowShaderHotSwapping&&d&&!I.isReady()){if(I=d,y.markAsUnprocessed(),S=this.isFrozen,h)return y._areLightsDisposed=!0,!1}else mp.resetCachedMaterial(),b.setEffect(I,y,this._materialContext)}return!(!b.effect||!b.effect.isReady())&&(y._renderId=mp.getRenderId(),Q._wasPreviouslyReady=!S,Q._wasPreviouslyUsingInstances=h,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const p=this._uniformBuffer;p.addUniform("diffuseLeftColor",4),p.addUniform("diffuseRightColor",4),p.addUniform("opacityParts",4),p.addUniform("reflectionLeftColor",4),p.addUniform("reflectionRightColor",4),p.addUniform("refractionLeftColor",4),p.addUniform("refractionRightColor",4),p.addUniform("emissiveLeftColor",4),p.addUniform("emissiveRightColor",4),p.addUniform("vDiffuseInfos",2),p.addUniform("vAmbientInfos",2),p.addUniform("vOpacityInfos",2),p.addUniform("vReflectionInfos",2),p.addUniform("vReflectionPosition",3),p.addUniform("vReflectionSize",3),p.addUniform("vEmissiveInfos",2),p.addUniform("vLightmapInfos",2),p.addUniform("vSpecularInfos",2),p.addUniform("vBumpInfos",3),p.addUniform("diffuseMatrix",16),p.addUniform("ambientMatrix",16),p.addUniform("opacityMatrix",16),p.addUniform("reflectionMatrix",16),p.addUniform("emissiveMatrix",16),p.addUniform("lightmapMatrix",16),p.addUniform("specularMatrix",16),p.addUniform("bumpMatrix",16),p.addUniform("vTangentSpaceParams",2),p.addUniform("pointSize",1),p.addUniform("alphaCutOff",1),p.addUniform("refractionMatrix",16),p.addUniform("vRefractionInfos",4),p.addUniform("vRefractionPosition",3),p.addUniform("vRefractionSize",3),p.addUniform("vSpecularColor",4),p.addUniform("vEmissiveColor",3),p.addUniform("vDiffuseColor",4),p.addUniform("vAmbientColor",3),p.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(p,b,M){const h=this.upp(),Q=M.materialDefines;if(!Q)return;const mp=M.effect;if(!mp)return;this._activeEffect=mp,b.getMeshUniformBuffer().bindToEffect(mp,"Mesh"),b.transferToEffect(p),this._uniformBuffer.bindToEffect(mp,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,h,b,p,this.isFrozen),L.d.Bind(h.getEngine().currentRenderPassId,this._activeEffect,b,p,this);const w=h.activeCamera;w?this._uniformBuffer.updateFloat4("cameraInfo",w.Ib,w.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=M,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),Q.OBJECTSPACE_NORMALMAP&&(p.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const t=this._mustRebind(h,mp,M,b.visibility);(0,o.d)(b,mp);const z=this._uniformBuffer;if(t){if(this.bindViewProjection(mp),!z.useUbo||!this.isFrozen||!z.isSync||M._drawWrapper._forceRebindOnNextCall){if(d.FresnelEnabled&&Q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(z.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),z.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&z.updateColor4("opacityParts",new P.wM(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(z.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),z.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(z.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),z.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(z.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),z.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),h.texturesEnabled){if(this._diffuseTexture&&d.DiffuseTextureEnabled&&(z.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,o.y)(this._diffuseTexture,z,"diffuse")),this._ambientTexture&&d.AmbientTextureEnabled&&(z.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,o.y)(this._ambientTexture,z,"ambient")),this._opacityTexture&&d.OpacityTextureEnabled&&(z.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,o.y)(this._opacityTexture,z,"opacity")),this._hasAlphaChannel()&&z.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&d.ReflectionTextureEnabled){if(z.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),z.Gb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const p=this._reflectionTexture;z.updateVector3("vReflectionPosition",p.boundingBoxPosition),z.updateVector3("vReflectionSize",p.boundingBoxSize)}}else z.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&d.EmissiveTextureEnabled&&(z.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,o.y)(this._emissiveTexture,z,"emissive")),this._lightmapTexture&&d.LightmapTextureEnabled&&(z.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,o.y)(this._lightmapTexture,z,"lightmap")),this._specularTexture&&d.SpecularTextureEnabled&&(z.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,o.y)(this._specularTexture,z,"specular")),this._bumpTexture&&h.getEngine().getCaps().standardDerivatives&&d.BumpTextureEnabled&&(z.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,o.y)(this._bumpTexture,z,"bump"),h._mirroredCameraPosition?z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&d.RefractionTextureEnabled){let p=1;if(this._refractionTexture.isCube||(z.Gb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(p=this._refractionTexture.depth)),z.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,p,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const p=this._refractionTexture;z.updateVector3("vRefractionPosition",p.boundingBoxPosition),z.updateVector3("vRefractionSize",p.boundingBoxSize)}}}this.pointsCloud&&z.updateFloat("pointSize",this.pointSize),z.updateColor4("vSpecularColor",this.specularColor,this.specularPower),z.updateColor3("vEmissiveColor",d.EmissiveTextureEnabled?this.emissiveColor:P.wM.BlackReadOnly),z.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),h.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),z.updateColor3("vAmbientColor",this._globalAmbientColor)}h.texturesEnabled&&(this._diffuseTexture&&d.DiffuseTextureEnabled&&mp.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&d.AmbientTextureEnabled&&mp.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&d.OpacityTextureEnabled&&mp.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&d.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?mp.setTexture("reflectionCubeSampler",this._reflectionTexture):mp.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&d.EmissiveTextureEnabled&&mp.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&d.LightmapTextureEnabled&&mp.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&d.SpecularTextureEnabled&&mp.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&h.getEngine().getCaps().standardDerivatives&&d.BumpTextureEnabled&&mp.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&d.RefractionTextureEnabled&&(this._refractionTexture.isCube?mp.setTexture("refractionCubeSampler",this._refractionTexture):mp.setTexture("refraction2DSampler",this._refractionTexture))),this.upp().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(b)&&this.upp().depthPeelingRenderer.bind(mp),this._eventInfo.subMesh=M,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,a.i)(mp,this,h),this.bindEyePosition(mp)}else h.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(t||!this.isFrozen){var x;if(h.lightsEnabled&&!this._disableLighting&&(0,o.k)(h,b,mp,Q,this._maxSimultaneousLights),(h.fogEnabled&&b.applyFog&&h.fogMode!==y.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||b.receiveShadows||Q.PREPASS)&&this.bindView(mp),(0,o.g)(h,b,mp),Q.NUM_MORPH_INFLUENCERS&&(0,o.r)(b,mp),Q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(x=b.bakedVertexAnimationManager)||void 0===x||x.bind(mp,Q.INSTANCES);this.useLogarithmicDepth&&(0,o.n)(Q,mp,h),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(b,this._activeEffect,M),z.update()}getAnimatables(){const p=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&p.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&p.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&p.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&p.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&p.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&p.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&p.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&p.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&p.push(this._refractionTexture),p}getActiveTextures(){const p=super.getActiveTextures();return this._diffuseTexture&&p.push(this._diffuseTexture),this._ambientTexture&&p.push(this._ambientTexture),this._opacityTexture&&p.push(this._opacityTexture),this._reflectionTexture&&p.push(this._reflectionTexture),this._emissiveTexture&&p.push(this._emissiveTexture),this._specularTexture&&p.push(this._specularTexture),this._bumpTexture&&p.push(this._bumpTexture),this._lightmapTexture&&p.push(this._lightmapTexture),this._refractionTexture&&p.push(this._refractionTexture),p}hasTexture(p){return!!super.hasTexture(p)||(this._diffuseTexture===p||(this._ambientTexture===p||(this._opacityTexture===p||(this._reflectionTexture===p||(this._emissiveTexture===p||(this._specularTexture===p||(this._bumpTexture===p||(this._lightmapTexture===p||this._refractionTexture===p))))))))}dispose(p,b){var M,h,Q,mp,y,P,w,t,z;b&&(null===(M=this._diffuseTexture)||void 0===M||M.dispose(),null===(h=this._ambientTexture)||void 0===h||h.dispose(),null===(Q=this._opacityTexture)||void 0===Q||Q.dispose(),null===(mp=this._reflectionTexture)||void 0===mp||mp.dispose(),null===(y=this._emissiveTexture)||void 0===y||y.dispose(),null===(P=this._specularTexture)||void 0===P||P.dispose(),null===(w=this._bumpTexture)||void 0===w||w.dispose(),null===(t=this._lightmapTexture)||void 0===t||t.dispose(),null===(z=this._refractionTexture)||void 0===z||z.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(p,b)}clone(p){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const h=l.e.Clone((()=>new d(p,this.upp())),this,{cloneTexturesOnlyOnce:b});return h.name=p,h.id=p,this.cb.copyTo(h.cb),this._clonePlugins(h,M),h}static Parse(p,b,M){const h=l.e.Parse((()=>new d(p.name,b)),p,b,M);return p.cb&&h.cb.parse(p.cb,b,M),x.b._ParsePlugins(p,h,b,M),h}static get DiffuseTextureEnabled(){return g.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(p){g.b.DiffuseTextureEnabled=p}static get DetailTextureEnabled(){return g.b.DetailTextureEnabled}static set DetailTextureEnabled(p){g.b.DetailTextureEnabled=p}static get AmbientTextureEnabled(){return g.b.AmbientTextureEnabled}static set AmbientTextureEnabled(p){g.b.AmbientTextureEnabled=p}static get OpacityTextureEnabled(){return g.b.OpacityTextureEnabled}static set OpacityTextureEnabled(p){g.b.OpacityTextureEnabled=p}static get ReflectionTextureEnabled(){return g.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(p){g.b.ReflectionTextureEnabled=p}static get EmissiveTextureEnabled(){return g.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(p){g.b.EmissiveTextureEnabled=p}static get SpecularTextureEnabled(){return g.b.SpecularTextureEnabled}static set SpecularTextureEnabled(p){g.b.SpecularTextureEnabled=p}static get BumpTextureEnabled(){return g.b.BumpTextureEnabled}static set BumpTextureEnabled(p){g.b.BumpTextureEnabled=p}static get LightmapTextureEnabled(){return g.b.LightmapTextureEnabled}static set LightmapTextureEnabled(p){g.b.LightmapTextureEnabled=p}static get RefractionTextureEnabled(){return g.b.RefractionTextureEnabled}static set RefractionTextureEnabled(p){g.b.RefractionTextureEnabled=p}static get ColorGradingTextureEnabled(){return g.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(p){g.b.ColorGradingTextureEnabled=p}static get FresnelEnabled(){return g.b.FresnelEnabled}static set FresnelEnabled(p){g.b.FresnelEnabled=p}}d.ForceGLSL=!1,(0,h.e)([(0,Q.E)("diffuseTexture")],d.prototype,"_diffuseTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"diffuseTexture",void 0),(0,h.e)([(0,Q.E)("ambientTexture")],d.prototype,"_ambientTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"ambientTexture",void 0),(0,h.e)([(0,Q.E)("opacityTexture")],d.prototype,"_opacityTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"opacityTexture",void 0),(0,h.e)([(0,Q.E)("reflectionTexture")],d.prototype,"_reflectionTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"reflectionTexture",void 0),(0,h.e)([(0,Q.E)("emissiveTexture")],d.prototype,"_emissiveTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"emissiveTexture",void 0),(0,h.e)([(0,Q.E)("specularTexture")],d.prototype,"_specularTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"specularTexture",void 0),(0,h.e)([(0,Q.E)("bumpTexture")],d.prototype,"_bumpTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"bumpTexture",void 0),(0,h.e)([(0,Q.E)("lightmapTexture")],d.prototype,"_lightmapTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"lightmapTexture",void 0),(0,h.e)([(0,Q.E)("refractionTexture")],d.prototype,"_refractionTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"refractionTexture",void 0),(0,h.e)([(0,Q.k)("ambient")],d.prototype,"ambientColor",void 0),(0,h.e)([(0,Q.k)("diffuse")],d.prototype,"diffuseColor",void 0),(0,h.e)([(0,Q.k)("specular")],d.prototype,"specularColor",void 0),(0,h.e)([(0,Q.k)("emissive")],d.prototype,"emissiveColor",void 0),(0,h.e)([(0,Q.N)()],d.prototype,"specularPower",void 0),(0,h.e)([(0,Q.N)("useAlphaFromDiffuseTexture")],d.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"useAlphaFromDiffuseTexture",void 0),(0,h.e)([(0,Q.N)("useEmissiveAsIllumination")],d.prototype,"_useEmissiveAsIllumination",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useEmissiveAsIllumination",void 0),(0,h.e)([(0,Q.N)("linkEmissiveWithDiffuse")],d.prototype,"_linkEmissiveWithDiffuse",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"linkEmissiveWithDiffuse",void 0),(0,h.e)([(0,Q.N)("useSpecularOverAlpha")],d.prototype,"_useSpecularOverAlpha",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useSpecularOverAlpha",void 0),(0,h.e)([(0,Q.N)("useReflectionOverAlpha")],d.prototype,"_useReflectionOverAlpha",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useReflectionOverAlpha",void 0),(0,h.e)([(0,Q.N)("disableLighting")],d.prototype,"_disableLighting",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsLightsDirty")],d.prototype,"disableLighting",void 0),(0,h.e)([(0,Q.N)("useObjectSpaceNormalMap")],d.prototype,"_useObjectSpaceNormalMap",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useObjectSpaceNormalMap",void 0),(0,h.e)([(0,Q.N)("useParallax")],d.prototype,"_useParallax",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useParallax",void 0),(0,h.e)([(0,Q.N)("useParallaxOcclusion")],d.prototype,"_useParallaxOcclusion",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useParallaxOcclusion",void 0),(0,h.e)([(0,Q.N)()],d.prototype,"parallaxScaleBias",void 0),(0,h.e)([(0,Q.N)("roughness")],d.prototype,"_roughness",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"roughness",void 0),(0,h.e)([(0,Q.N)()],d.prototype,"indexOfRefraction",void 0),(0,h.e)([(0,Q.N)()],d.prototype,"invertRefractionY",void 0),(0,h.e)([(0,Q.N)()],d.prototype,"alphaCutOff",void 0),(0,h.e)([(0,Q.N)("useLightmapAsShadowmap")],d.prototype,"_useLightmapAsShadowmap",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useLightmapAsShadowmap",void 0),(0,h.e)([(0,Q.q)("diffuseFresnelParameters")],d.prototype,"_diffuseFresnelParameters",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"diffuseFresnelParameters",void 0),(0,h.e)([(0,Q.q)("opacityFresnelParameters")],d.prototype,"_opacityFresnelParameters",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],d.prototype,"opacityFresnelParameters",void 0),(0,h.e)([(0,Q.q)("reflectionFresnelParameters")],d.prototype,"_reflectionFresnelParameters",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"reflectionFresnelParameters",void 0),(0,h.e)([(0,Q.q)("refractionFresnelParameters")],d.prototype,"_refractionFresnelParameters",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"refractionFresnelParameters",void 0),(0,h.e)([(0,Q.q)("emissiveFresnelParameters")],d.prototype,"_emissiveFresnelParameters",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"emissiveFresnelParameters",void 0),(0,h.e)([(0,Q.N)("useReflectionFresnelFromSpecular")],d.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"useReflectionFresnelFromSpecular",void 0),(0,h.e)([(0,Q.N)("useGlossinessFromSpecularMapAlpha")],d.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,h.e)([(0,Q.N)("maxSimultaneousLights")],d.prototype,"_maxSimultaneousLights",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsLightsDirty")],d.prototype,"maxSimultaneousLights",void 0),(0,h.e)([(0,Q.N)("invertNormalMapX")],d.prototype,"_invertNormalMapX",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"invertNormalMapX",void 0),(0,h.e)([(0,Q.N)("invertNormalMapY")],d.prototype,"_invertNormalMapY",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"invertNormalMapY",void 0),(0,h.e)([(0,Q.N)("twoSidedLighting")],d.prototype,"_twoSidedLighting",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"twoSidedLighting",void 0),(0,h.e)([(0,Q.N)("applyDecalMapAfterDetailMap")],d.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,h.e)([(0,Q.d)("_markAllSubMeshesAsMiscDirty")],d.prototype,"applyDecalMapAfterDetailMap",void 0),(0,J.c)("BABYLON.StandardMaterial",d),y.b.DefaultMaterialFactory=p=>new d("default material",p)}}]);