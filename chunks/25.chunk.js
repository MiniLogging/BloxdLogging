"use strict";(self.n4ygn1cq9vg=self.n4ygn1cq9vg||[]).push([[25],{12806:(e,d,v)=>{v.d(d,{e:()=>k});var P=v(12403),p=v(12734),L=v(12409),B=v(12800),X=v(12795),z=v(12811),W=v(12767);class V extends X.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class k extends z.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(e){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(e,"DetailMap",140,new V,d),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=p.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=e._dirtyCallbacks[1]}isReadyForSubMesh(e,d,v){return!this._isEnabled||!(e._areTexturesDirty&&d.texturesEnabled&&v.getCaps().standardDerivatives&&this._texture&&B.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(e,d){if(this._isEnabled){e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const v=d.getEngine();e._areTexturesDirty&&(v.getCaps().standardDerivatives&&this._texture&&B.d.DetailTextureEnabled&&this._isEnabled?((0,W.T)(this._texture,e,"DETAIL"),e.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):e.DETAIL=!1)}else e.DETAIL=!1}bindForSubMesh(e,d){if(!this._isEnabled)return;const v=this._material.isFrozen;e.useUbo&&v&&e.isSync||this._texture&&B.d.DetailTextureEnabled&&(e.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,W.r)(this._texture,e,"detail")),d.texturesEnabled&&this._texture&&B.d.DetailTextureEnabled&&e.setTexture("detailSampler",this._texture)}hasTexture(e){return this._texture===e}getActiveTextures(e){this._texture&&e.push(this._texture)}getAnimatables(e){this._texture&&this._texture.animations&&this._texture.animations.length>0&&e.push(this._texture)}dispose(e){var d;e&&(null===(d=this._texture)||void 0===d||d.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(e){e.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,P.e)([(0,L.C)("detailTexture"),(0,L.d)("_markAllSubMeshesAsTexturesDirty")],k.prototype,"texture",void 0),(0,P.e)([(0,L.M)()],k.prototype,"diffuseBlendLevel",void 0),(0,P.e)([(0,L.M)()],k.prototype,"roughnessBlendLevel",void 0),(0,P.e)([(0,L.M)()],k.prototype,"bumpLevel",void 0),(0,P.e)([(0,L.M)(),(0,L.d)("_markAllSubMeshesAsTexturesDirty")],k.prototype,"normalBlendMethod",void 0),(0,P.e)([(0,L.M)(),(0,L.d)("_markAllSubMeshesAsTexturesDirty")],k.prototype,"isEnabled",void 0)},12795:(e,d,v)=>{v.d(d,{d:()=>P});class P{constructor(e){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=e,e)for(const d in e)Object.prototype.hasOwnProperty.call(e,d)&&this._setDefaultValue(d)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||e,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const e of Object.keys(this))"_"!==e[0]&&this._keys.push(e);if(this._externalProperties)for(const e in this._externalProperties)-1===this._keys.indexOf(e)&&this._keys.push(e)}isEqual(e){if(this._keys.length!==e._keys.length)return!1;for(let d=0;d<this._keys.length;d++){const v=this._keys[d];if(this[v]!==e[v])return!1}return!0}cloneTo(e){this._keys.length!==e._keys.length&&(e._keys=this._keys.slice(0));for(let d=0;d<this._keys.length;d++){const v=this._keys[d];e[v]=this[v]}}reset(){for(const e of this._keys)this._setDefaultValue(e)}_setDefaultValue(e){var d,v,P,p;const L=(null===(d=this._externalProperties)||void 0===d||null===(v=d[e])||void 0===v?void 0:v.type)??typeof this[e],B=null===(P=this._externalProperties)||void 0===P||null===(p=P[e])||void 0===p?void 0:p.default;switch(L){case"number":this[e]=B??0;break;case"string":this[e]=B??"";break;default:this[e]=B??!1}}toString(){let e="";for(let d=0;d<this._keys.length;d++){const v=this._keys[d],P=this[v];switch(typeof P){case"number":case"string":e+="#define "+v+" "+P+"\n";break;default:P&&(e+="#define "+v+"\n")}}return e}}},12800:(e,d,v)=>{v.d(d,{d:()=>p});var P=v(12319);class p{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){this._DiffuseTextureEnabled!==e&&(this._DiffuseTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(e){this._BaseWeightTextureEnabled!==e&&(this._BaseWeightTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(e){this._BaseDiffuseRoughnessTextureEnabled!==e&&(this._BaseDiffuseRoughnessTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(e){this._DetailTextureEnabled!==e&&(this._DetailTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(e){this._DecalMapEnabled!==e&&(this._DecalMapEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(e){this._AmbientTextureEnabled!==e&&(this._AmbientTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(e){this._OpacityTextureEnabled!==e&&(this._OpacityTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){this._ReflectionTextureEnabled!==e&&(this._ReflectionTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){this._EmissiveTextureEnabled!==e&&(this._EmissiveTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(e){this._SpecularTextureEnabled!==e&&(this._SpecularTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(e){this._BumpTextureEnabled!==e&&(this._BumpTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(e){this._LightmapTextureEnabled!==e&&(this._LightmapTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(e){this._RefractionTextureEnabled!==e&&(this._RefractionTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){this._ColorGradingTextureEnabled!==e&&(this._ColorGradingTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(e){this._FresnelEnabled!==e&&(this._FresnelEnabled=e,P.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(e){this._ClearCoatTextureEnabled!==e&&(this._ClearCoatTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(e){this._ClearCoatBumpTextureEnabled!==e&&(this._ClearCoatBumpTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(e){this._ClearCoatTintTextureEnabled!==e&&(this._ClearCoatTintTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(e){this._SheenTextureEnabled!==e&&(this._SheenTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(e){this._AnisotropicTextureEnabled!==e&&(this._AnisotropicTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(e){this._ThicknessTextureEnabled!==e&&(this._ThicknessTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(e){this._RefractionIntensityTextureEnabled!==e&&(this._RefractionIntensityTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(e){this._TranslucencyIntensityTextureEnabled!==e&&(this._TranslucencyIntensityTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(e){this._TranslucencyColorTextureEnabled!==e&&(this._TranslucencyColorTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(e){this._IridescenceTextureEnabled!==e&&(this._IridescenceTextureEnabled=e,P.b.MarkAllMaterialsAsDirty(1))}}p._DiffuseTextureEnabled=!0,p._BaseWeightTextureEnabled=!0,p._BaseDiffuseRoughnessTextureEnabled=!0,p._DetailTextureEnabled=!0,p._DecalMapEnabled=!0,p._AmbientTextureEnabled=!0,p._OpacityTextureEnabled=!0,p._ReflectionTextureEnabled=!0,p._EmissiveTextureEnabled=!0,p._SpecularTextureEnabled=!0,p._BumpTextureEnabled=!0,p._LightmapTextureEnabled=!0,p._RefractionTextureEnabled=!0,p._ColorGradingTextureEnabled=!0,p._FresnelEnabled=!0,p._ClearCoatTextureEnabled=!0,p._ClearCoatBumpTextureEnabled=!0,p._ClearCoatTintTextureEnabled=!0,p._SheenTextureEnabled=!0,p._AnisotropicTextureEnabled=!0,p._ThicknessTextureEnabled=!0,p._RefractionIntensityTextureEnabled=!0,p._TranslucencyIntensityTextureEnabled=!0,p._TranslucencyColorTextureEnabled=!0,p._IridescenceTextureEnabled=!0},12815:(e,d,v)=>{v.d(d,{b:()=>L});var P,p=v(12420);!function(e){e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.MaxViewZ=2]="MaxViewZ"}(P||(P={}));class L{static CreateConfiguration(e){return L._Configurations[e]={defines:{},previousWorldMatrices:{},previousViewProjection:p.Matrix.Zero(),currentViewProjection:p.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},L._Configurations[e]}static DeleteConfiguration(e){delete L._Configurations[e]}static GetConfiguration(e){return L._Configurations[e]}static AddUniformsAndSamplers(e,d){e.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(e,d){for(const v of d)if(v.Qd)for(const d of v.Qd)d._removeDrawWrapper(e)}static PrepareDefines(e,d,v){if(!v._arePrePassDirty)return;const P=L._Configurations[e];if(!P)return;v.PREPASS=!0,v.PREPASS_COLOR=!1,v.PREPASS_COLOR_INDEX=-1;let p=0;for(let B=0;B<L.GeometryTextureDescriptions.length;B++){const e=L.GeometryTextureDescriptions[B],d=e.define,X=e.defineIndex,z=P.defines[X];void 0!==z?(v[d]=!0,v[X]=z,p++):(v[d]=!1,delete v[X])}v.SCENE_MRT_COUNT=p,v.BONES_VELOCITY_ENABLED=d.useBones&&d.computeBonesUsingShaders&&d.skeleton&&!d.skeleton.isUsingTextureForMatrices&&-1===P.excludedSkinnedMesh.indexOf(d)}static Bind(e,d,v,P,p){const B=L._Configurations[e];if(!B)return;const X=v.Ae(),z=X.getEngine();if(B.reverseCulling&&z.setStateCullFaceType(X._mirroredCameraPosition?p.cullBackFaces:!p.cullBackFaces),(void 0!==B.defines.PREPASS_VELOCITY_INDEX||void 0!==B.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(B.previousWorldMatrices[v.uniqueId]||(B.previousWorldMatrices[v.uniqueId]=P.clone()),B.previousViewProjection||(B.previousViewProjection=X.getTransformMatrix().clone(),B.currentViewProjection=X.getTransformMatrix().clone()),B.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(B.lastUpdateFrameId=z.frameId,B.previousViewProjection.L(B.currentViewProjection),B.currentViewProjection.L(X.getTransformMatrix())):B.lastUpdateFrameId!==z.frameId&&(B.lastUpdateFrameId=z.frameId,B.previousViewProjection.L(B.currentViewProjection)),d.setMatrix("previousWorld",B.previousWorldMatrices[v.uniqueId]),d.setMatrix("previousViewProjection",B.previousViewProjection),B.previousWorldMatrices[v.uniqueId]=P.clone(),v.useBones&&v.computeBonesUsingShaders&&v.skeleton)){const e=v.skeleton;if(!e.isUsingTextureForMatrices||-1===d.getUniformIndex("boneTextureWidth")){const P=e.getTransformMatrices(v);P&&(B.previousBones[v.uniqueId]||(B.previousBones[v.uniqueId]=P.slice()),d.setMatrices("mPreviousBones",B.previousBones[v.uniqueId]),B.previousBones[v.uniqueId].set(P))}}}}L.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],L._Configurations={}},12811:(e,d,v)=>{v.d(d,{e:()=>D});var P=v(12403),p=v(12409),L=v(12734),B=v(12281),X=v(12303),z=v(12328);const W=new RegExp("^([gimus]+)!");class V{constructor(e){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=e,this._scene=e.Ae(),this._engine=this._scene.getEngine()}_addPlugin(e){for(let P=0;P<this._plugins.length;++P)if(this._plugins[P].name===e.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!e.isCompatible(this._material.shaderLanguage))throw`The plugin "${e.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const d=e.getClassName();V._MaterialPluginClassToMainDefine[d]||(V._MaterialPluginClassToMainDefine[d]="MATERIALPLUGIN_"+ ++V._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(e,d)=>this._handlePluginEvent(e,d),this._plugins.push(e),this._plugins.sort(((e,d)=>e.priority-d.priority)),this._codeInjectionPoints={};const v={};v[V._MaterialPluginClassToMainDefine[d]]={type:"boolean",default:!0};for(const P of this._plugins)P.collectDefines(v),this._collectPointNames("vertex",P.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",P.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=v,!0}_activatePlugin(e){-1===this._activePlugins.indexOf(e)&&(this._activePlugins.push(e),this._activePlugins.sort(((e,d)=>e.priority-d.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),e.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(e),this._activePluginsForExtraEvents.sort(((e,d)=>e.priority-d.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(e){for(let d=0;d<this._plugins.length;++d)if(this._plugins[d].name===e)return this._plugins[d];return null}_handlePluginEventIsReadyForSubMesh(e){let d=!0;for(const v of this._activePlugins)d=d&&v.isReadyForSubMesh(e.defines,this._scene,this._engine,e.subMesh);e.isReadyForSubMesh=d}_handlePluginEventPrepareDefinesBeforeAttributes(e){for(const d of this._activePlugins)d.prepareDefinesBeforeAttributes(e.defines,this._scene,e.mesh)}_handlePluginEventPrepareDefines(e){for(const d of this._activePlugins)d.prepareDefines(e.defines,this._scene,e.mesh)}_handlePluginEventHardBindForSubMesh(e){for(const d of this._activePluginsForExtraEvents)d.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventBindForSubMesh(e){for(const d of this._activePlugins)d.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,e.subMesh)}_handlePluginEventHasRenderTargetTextures(e){let d=!1;for(const v of this._activePluginsForExtraEvents)if(d=v.hasRenderTargetTextures(),d)break;e.hasRenderTargetTextures=d}_handlePluginEventFillRenderTargetTextures(e){for(const d of this._activePluginsForExtraEvents)d.fillRenderTargetTextures(e.renderTargets)}_handlePluginEvent(e,d){switch(e){case 512:{const e=d;for(const d of this._activePlugins)d.getActiveTextures(e.activeTextures);break}case 256:{const e=d;for(const d of this._activePlugins)d.getAnimatables(e.animatables);break}case 1024:{const e=d;let v=!1;for(const d of this._activePlugins)if(v=d.hasTexture(e.texture),v)break;e.hasTexture=v;break}case 2:{const e=d;for(const d of this._plugins)d.dispose(e.forceDisposeTextures);break}case 4:d.defineNames=this._defineNamesFromPlugins;break;case 128:{const e=d;for(const d of this._activePlugins)e.fallbackRank=d.addFallbacks(e.defines,e.fallbacks,e.fallbackRank),d.getAttributes(e.attributes,this._scene,e.mesh);this._uniformList.length>0&&e.uniforms.push(...this._uniformList),this._samplerList.length>0&&e.samplers.push(...this._samplerList),this._uboList.length>0&&e.uniformBuffersNames.push(...this._uboList),e.customCode=this._injectCustomCode(e,e.customCode);break}case 8:{const e=d;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const v=1===this._material.shaderLanguage;for(const d of this._plugins){const P=d.getUniforms(this._material.shaderLanguage);if(P){if(P.ubo)for(const d of P.ubo){if(d.size&&d.type){const P=d.arraySize??0;if(e.ubo.addUniform(d.name,d.size,P),v){let e;switch(d.type){case"mat4":e="mat4x4f";break;case"float":e="f32";break;default:e=`${d.type}f`}this._uboDeclaration+=P>0?`uniform ${d.name}: array<${e}, ${P}>;\n`:`uniform ${d.name}: ${e};\n`}else this._uboDeclaration+=`${d.type} ${d.name}${P>0?`[${P}]`:""};\n`}this._uniformList.push(d.name)}P.vertex&&(this._vertexDeclaration+=P.vertex+"\n"),P.fragment&&(this._fragmentDeclaration+=P.fragment+"\n")}d.getSamplers(this._samplerList),d.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(e,d){if(d)for(const v in d)this._codeInjectionPoints[e]||(this._codeInjectionPoints[e]={}),this._codeInjectionPoints[e][v]=!0}_injectCustomCode(e,d){return(v,P)=>{var p;d&&(P=d(v,P)),this._uboDeclaration&&(P=P.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(P=P.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(P=P.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const L=null===(p=this._codeInjectionPoints)||void 0===p?void 0:p[v];if(!L)return P;let B=null;for(let d in L){let p="";for(const P of this._activePlugins){var V;let L=null===(V=P.getCustomCode(v,this._material.shaderLanguage))||void 0===V?void 0:V[d];if(L){if(P.resolveIncludes){if(null===B){const d=0;B={defines:[],indexParameters:e.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:z.d.GetShadersRepository(d),includesShadersStore:z.d.GetIncludesShadersStore(d),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Wd:this._engine.Wd,processCodeAfterIncludes:void 0}}B.isFragment="fragment"===v,(0,X.i)(L,B,(e=>L=e))}p+=L+"\n"}}if(p.length>0)if("!"===d.charAt(0)){d=d.substring(1);let e="g";if("!"===d.charAt(0))e="",d=d.substring(1);else{const v=W.exec(d);v&&v.length>=2&&(e=v[1],d=d.substring(e.length+1))}e.indexOf("g")<0&&(e+="g");const v=P,L=new RegExp(d,e);let B=L.exec(v);for(;null!==B;){let e=p;for(let d=0;d<B.length;++d)e=e.replace("$"+d,B[d]);P=P.replace(B[0],e),B=L.exec(v)}}else{const e="#define "+d;P=P.replace(e,"\n"+p+"\n"+e)}}return P}}}V._MaterialPluginClassToMainDefine={},V._MaterialPluginCounter=0,B.c.OnEnginesDisposedObservable.add((()=>{w()}));const k=[];let g=!1,F=null;function w(){k.length=0,g=!1,L.b.OnEventObservable.remove(F),F=null}var G=v(12453),U=v(12381);class D{isCompatible(e){return 0===e}_enable(e){e&&this._pluginManager._activatePlugin(this)}constructor(e,d,v,P){let p=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],B=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=e,this.name=d,this.priority=v,this.resolveIncludes=B,e.pluginManager||(e.pluginManager=new V(e),e.Fd.add((()=>{e.pluginManager=void 0}))),this._pluginDefineNames=P,this._pluginManager=e.pluginManager,p&&this._pluginManager._addPlugin(this),L&&this._enable(!0),this.markAllDefinesAsDirty=e._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(e,d,v,P){return!0}hardBindForSubMesh(e,d,v,P){}bindForSubMesh(e,d,v,P){}dispose(e){}getCustomCode(e){return null}collectDefines(e){if(this._pluginDefineNames)for(const d of Object.keys(this._pluginDefineNames)){if("_"===d[0])continue;const v=typeof this._pluginDefineNames[d];e[d]={type:"number"===v?"number":"string"===v?"string":"boolean"===v?"boolean":"object",default:this._pluginDefineNames[d]}}}prepareDefinesBeforeAttributes(e,d,v){}prepareDefines(e,d,v){}hasTexture(e){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(e){}getActiveTextures(e){}getAnimatables(e){}addFallbacks(e,d,v){return v}getSamplers(e){}getAttributes(e,d,v){}getUniformBuffersNames(e){}getUniforms(){return{}}copyTo(e){G.c.Clone((()=>e),this)}serialize(){return G.c.Serialize(this)}parse(e,d,v){G.c.Parse((()=>this),e,d,v)}}(0,P.e)([(0,p.M)()],D.prototype,"name",void 0),(0,P.e)([(0,p.M)()],D.prototype,"priority",void 0),(0,P.e)([(0,p.M)()],D.prototype,"resolveIncludes",void 0),(0,P.e)([(0,p.M)()],D.prototype,"registerForExtraEvents",void 0),(0,U.h)("BABYLON.MaterialPluginBase",D)},12791:(e,d,v)=>{v.d(d,{d:()=>P});class P{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(e){e.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(e){}bindForSubMesh(e,d,v,P,p){if(d.prePassRenderer&&d.prePassRenderer.enabled&&d.prePassRenderer.currentRTisSceneRT&&(-1!==d.prePassRenderer.getIndex(2)||-1!==d.prePassRenderer.getIndex(11))){this.previousWorldMatrices[v.uniqueId]||(this.previousWorldMatrices[v.uniqueId]=P.clone()),this.previousViewProjection||(this.previousViewProjection=d.getTransformMatrix().clone(),this.currentViewProjection=d.getTransformMatrix().clone());const p=d.getEngine();this.currentViewProjection.updateFlag!==d.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=p.frameId,this.previousViewProjection.L(this.currentViewProjection),this.currentViewProjection.L(d.getTransformMatrix())):this._lastUpdateFrameId!==p.frameId&&(this._lastUpdateFrameId=p.frameId,this.previousViewProjection.L(this.currentViewProjection)),e.setMatrix("previousWorld",this.previousWorldMatrices[v.uniqueId]),e.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[v.uniqueId]=P.clone()}}}},12782:(e,d,v)=>{v.d(d,{Sd:()=>i});var P=v(12403),p=v(12409),L=v(12512),B=v(12653),X=v(12463),z=v(12490),W=v(12791),V=v(12659),k=v(12734),g=v(12795),F=v(12731),w=v(12399),G=v(12381),U=v(12800),D=v(12722),C=v(12806),q=v(12775),h=v(12767),l=v(12453),n=v(12815);const A={effect:null,subMesh:null};class x extends g.d{constructor(e){super(e),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(e){const d=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const v of d)this[v]=v===e}}class i extends F.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(e){this._attachImageProcessingConfiguration(e),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(e){e!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=e||this.Ae().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(e){this.imageProcessingConfiguration.colorCurvesEnabled=e}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(e){this.imageProcessingConfiguration.colorGradingEnabled=e}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(e){this._imageProcessingConfiguration.toneMappingEnabled=e}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(e){this._imageProcessingConfiguration.exposure=e}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(e){this._imageProcessingConfiguration.contrast=e}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(e){this._imageProcessingConfiguration.colorGradingTexture=e}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(e){this._imageProcessingConfiguration.colorCurves=e}get canRenderToMRT(){return!0}constructor(e,d){super(e,d,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||i.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new X.Kd(0,0,0),this.diffuseColor=new X.Kd(1,1,1),this.specularColor=new X.Kd(1,1,1),this.emissiveColor=new X.Kd(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new L.d(16),this._globalAmbientColor=new X.Kd(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new C.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new W.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),i.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),i.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(i.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(i.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Sd"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===k.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Hd&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==k.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Hd||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,d){let P=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const p=d._drawWrapper;if(p.effect&&this.isFrozen&&p._wasPreviouslyReady&&p._wasPreviouslyUsingInstances===P)return!0;d.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),d.materialDefines=new x(this._eventInfo.defineNames));const L=this.Ae(),B=d.materialDefines;if(this._isReadyForSubMesh(d))return!0;const X=L.getEngine();B._needNormals=(0,h.S)(L,e,B,!0,this._maxSimultaneousLights,this._disableLighting),(0,h.Z)(L,B);const k=this.needAlphaBlendingForMesh(e)&&this.Ae().useOrderIndependentTransparency;if((0,h.bb)(L,B,this.canRenderToMRT&&!k),(0,h.ab)(L,B,k),n.b.PrepareDefines(X.currentRenderPassId,e,B),B._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,B._needUVs=!1;for(let e=1;e<=6;++e)B["MAINUV"+e]=!1;if(L.texturesEnabled){if(B.DIFFUSEDIRECTUV=0,B.BUMPDIRECTUV=0,B.AMBIENTDIRECTUV=0,B.OPACITYDIRECTUV=0,B.EMISSIVEDIRECTUV=0,B.SPECULARDIRECTUV=0,B.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&i.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._diffuseTexture,B,"DIFFUSE")}else B.DIFFUSE=!1;if(this._ambientTexture&&i.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._ambientTexture,B,"AMBIENT")}else B.AMBIENT=!1;if(this._opacityTexture&&i.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._opacityTexture,B,"OPACITY"),B.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else B.OPACITY=!1;if(this._reflectionTexture&&i.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(B._needNormals=!0,B.REFLECTION=!0,B.ROUGHNESS=this._roughness>0,B.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,B.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===w.e.INVCUBIC_MODE,B.REFLECTIONMAP_3D=this._reflectionTexture.isCube,B.REFLECTIONMAP_OPPOSITEZ=B.REFLECTIONMAP_3D&&this.Ae().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,B.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case w.e.EXPLICIT_MODE:B.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case w.e.PLANAR_MODE:B.setReflectionMode("REFLECTIONMAP_PLANAR");break;case w.e.PROJECTION_MODE:B.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case w.e.SKYBOX_MODE:B.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case w.e.SPHERICAL_MODE:B.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case w.e.EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case w.e.FIXED_EQUIRECTANGULAR_MODE:B.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case w.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:B.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case w.e.CUBIC_MODE:case w.e.INVCUBIC_MODE:default:B.setReflectionMode("REFLECTIONMAP_CUBIC")}B.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else B.REFLECTION=!1,B.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&i.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._emissiveTexture,B,"EMISSIVE")}else B.EMISSIVE=!1;if(this._lightmapTexture&&i.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._lightmapTexture,B,"LIGHTMAP"),B.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,B.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else B.LIGHTMAP=!1;if(this._specularTexture&&i.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._specularTexture,B,"SPECULAR"),B.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else B.SPECULAR=!1;if(L.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&i.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,h.T)(this._bumpTexture,B,"BUMP"),B.PARALLAX=this._useParallax,B.PARALLAX_RHS=L.useRightHandedSystem,B.PARALLAXOCCLUSION=this._useParallaxOcclusion,B.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else B.BUMP=!1,B.PARALLAX=!1,B.PARALLAX_RHS=!1,B.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&i.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;B._needUVs=!0,B.REFRACTION=!0,B.REFRACTIONMAP_3D=this._refractionTexture.isCube,B.RGBDREFRACTION=this._refractionTexture.isRGBD,B.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else B.REFRACTION=!1;B.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else B.DIFFUSE=!1,B.AMBIENT=!1,B.OPACITY=!1,B.REFLECTION=!1,B.EMISSIVE=!1,B.LIGHTMAP=!1,B.BUMP=!1,B.REFRACTION=!1;B.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),B.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,B.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,B.SPECULAROVERALPHA=this._useSpecularOverAlpha,B.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,B.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,B.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=B,this._eventInfo.subMesh=d,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(B._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(B),B.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,B.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(B._areFresnelDirty&&(i.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(B.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,B.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,B.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,B.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,B.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,B.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,B._needNormals=!0,B.FRESNEL=!0):B.FRESNEL=!1),B.AREALIGHTUSED)for(let v=0;v<e.lightSources.length;v++)if(!e.lightSources[v]._isReady())return!1;(0,h.V)(e,L,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),B,this._applyDecalMapAfterDetailMap),(0,h.P)(L,X,this,B,P,null,d.getRenderingMesh().hasThinInstances),this._eventInfo.defines=B,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,h.M)(e,B,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let g=!1;if(B.isDirty){const P=B._areLightsDisposed;B.markAsProcessed();const p=new D.d;B.REFLECTION&&p.addFallback(0,"REFLECTION"),B.SPECULAR&&p.addFallback(0,"SPECULAR"),B.BUMP&&p.addFallback(0,"BUMP"),B.PARALLAX&&p.addFallback(1,"PARALLAX"),B.PARALLAX_RHS&&p.addFallback(1,"PARALLAX_RHS"),B.PARALLAXOCCLUSION&&p.addFallback(0,"PARALLAXOCCLUSION"),B.SPECULAROVERALPHA&&p.addFallback(0,"SPECULAROVERALPHA"),B.FOG&&p.addFallback(1,"FOG"),B.POINTSIZE&&p.addFallback(0,"POINTSIZE"),B.LOGARITHMICDEPTH&&p.addFallback(0,"LOGARITHMICDEPTH"),(0,h.v)(B,p,this._maxSimultaneousLights),B.SPECULARTERM&&p.addFallback(0,"SPECULARTERM"),B.DIFFUSEFRESNEL&&p.addFallback(1,"DIFFUSEFRESNEL"),B.OPACITYFRESNEL&&p.addFallback(2,"OPACITYFRESNEL"),B.REFLECTIONFRESNEL&&p.addFallback(3,"REFLECTIONFRESNEL"),B.EMISSIVEFRESNEL&&p.addFallback(4,"EMISSIVEFRESNEL"),B.FRESNEL&&p.addFallback(4,"FRESNEL"),B.MULTIVIEW&&p.addFallback(0,"MULTIVIEW");const k=[z.i.PositionKind];B.NORMAL&&k.push(z.i.NormalKind),B.TANGENT&&k.push(z.i.TangentKind);for(let e=1;e<=6;++e)B["UV"+e]&&k.push(`uv${1===e?"":e}`);B.VERTEXCOLOR&&k.push(z.i.ColorKind),(0,h.B)(k,e,B,p),(0,h.F)(k,B),(0,h.J)(k,e,B),(0,h.z)(k,e,B);let F="default";const w=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],G=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],U=["Material","Scene","Mesh"],C={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:B.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=p,this._eventInfo.fallbackRank=0,this._eventInfo.defines=B,this._eventInfo.uniforms=w,this._eventInfo.attributes=k,this._eventInfo.samplers=G,this._eventInfo.uniformBuffersNames=U,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=C,this._callbackPluginEventGeneric(128,this._eventInfo),n.b.AddUniformsAndSamplers(w,G),W.d.AddUniforms(w),W.d.AddSamplers(G),V.e&&(V.e.PrepareUniforms(w,B),V.e.PrepareSamplers(G,B)),(0,h.fb)({uniformsNames:w,uniformBuffersNames:U,samplers:G,defines:B,maxSimultaneousLights:this._maxSimultaneousLights}),(0,q.c)(w);const l={};this.customShaderNameResolve&&(F=this.customShaderNameResolve(F,w,U,G,B,k,l));const x=B.toString(),i=d.effect;let me=L.getEngine().createEffect(F,{attributes:k,uniformsNames:w,uniformBuffersNames:U,samplers:G,defines:x,fallbacks:p,onCompiled:this.onCompiled,onError:this.onError,indexParameters:C,processFinalCode:l.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:B.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([v.e(41),v.e(64)]).then(v.bind(v,14981)),Promise.all([v.e(39),v.e(65)]).then(v.bind(v,15128))]):await Promise.all([Promise.all([v.e(34),v.e(67)]).then(v.bind(v,15206)),Promise.all([v.e(33),v.e(68)]).then(v.bind(v,15364))]),this._shadersLoaded=!0}},X);if(this._eventInfo.customCode=void 0,me)if(this._onEffectCreatedObservable&&(A.effect=me,A.subMesh=d,this._onEffectCreatedObservable.notifyObservers(A)),this.allowShaderHotSwapping&&i&&!me.isReady()){if(me=i,B.markAsUnprocessed(),g=this.isFrozen,P)return B._areLightsDisposed=!0,!1}else L.resetCachedMaterial(),d.setEffect(me,B,this._materialContext)}return!(!d.effect||!d.effect.isReady())&&(B._renderId=L.getRenderId(),p._wasPreviouslyReady=!g,p._wasPreviouslyUsingInstances=P,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vReflectionInfos",2),e.addUniform("vReflectionPosition",3),e.addUniform("vReflectionSize",3),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("reflectionMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(e,d,v){const P=this.Ae(),p=v.materialDefines;if(!p)return;const L=v.effect;if(!L)return;this._activeEffect=L,d.getMeshUniformBuffer().bindToEffect(L,"Mesh"),d.transferToEffect(e),this._uniformBuffer.bindToEffect(L,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,P,d,e,this.isFrozen),n.b.Bind(P.getEngine().currentRenderPassId,this._activeEffect,d,e,this);const z=P.activeCamera;z?this._uniformBuffer.updateFloat4("cameraInfo",z.td,z.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=v,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),p.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const W=this._mustRebind(P,L,v,d.visibility);(0,h.b)(d,L);const V=this._uniformBuffer;if(W){if(this.bindViewProjection(L),!V.useUbo||!this.isFrozen||!V.isSync||v._drawWrapper._forceRebindOnNextCall){if(i.FresnelEnabled&&p.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(V.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),V.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&V.updateColor4("opacityParts",new X.Kd(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(V.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),V.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(V.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),V.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(V.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),V.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),P.texturesEnabled){if(this._diffuseTexture&&i.DiffuseTextureEnabled&&(V.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,h.r)(this._diffuseTexture,V,"diffuse")),this._ambientTexture&&i.AmbientTextureEnabled&&(V.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,h.r)(this._ambientTexture,V,"ambient")),this._opacityTexture&&i.OpacityTextureEnabled&&(V.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,h.r)(this._opacityTexture,V,"opacity")),this._hasAlphaChannel()&&V.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&i.ReflectionTextureEnabled){if(V.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),V.bd("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const e=this._reflectionTexture;V.updateVector3("vReflectionPosition",e.boundingBoxPosition),V.updateVector3("vReflectionSize",e.boundingBoxSize)}}else V.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&i.EmissiveTextureEnabled&&(V.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,h.r)(this._emissiveTexture,V,"emissive")),this._lightmapTexture&&i.LightmapTextureEnabled&&(V.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,h.r)(this._lightmapTexture,V,"lightmap")),this._specularTexture&&i.SpecularTextureEnabled&&(V.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,h.r)(this._specularTexture,V,"specular")),this._bumpTexture&&P.getEngine().getCaps().standardDerivatives&&i.BumpTextureEnabled&&(V.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,h.r)(this._bumpTexture,V,"bump"),P._mirroredCameraPosition?V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&i.RefractionTextureEnabled){let e=1;if(this._refractionTexture.isCube||(V.bd("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),V.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;V.updateVector3("vRefractionPosition",e.boundingBoxPosition),V.updateVector3("vRefractionSize",e.boundingBoxSize)}}}this.pointsCloud&&V.updateFloat("pointSize",this.pointSize),V.updateColor4("vSpecularColor",this.specularColor,this.specularPower),V.updateColor3("vEmissiveColor",i.EmissiveTextureEnabled?this.emissiveColor:X.Kd.BlackReadOnly),V.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),P.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),V.updateColor3("vAmbientColor",this._globalAmbientColor)}P.texturesEnabled&&(this._diffuseTexture&&i.DiffuseTextureEnabled&&L.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&i.AmbientTextureEnabled&&L.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&i.OpacityTextureEnabled&&L.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&i.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?L.setTexture("reflectionCubeSampler",this._reflectionTexture):L.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&i.EmissiveTextureEnabled&&L.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&i.LightmapTextureEnabled&&L.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&i.SpecularTextureEnabled&&L.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&P.getEngine().getCaps().standardDerivatives&&i.BumpTextureEnabled&&L.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&i.RefractionTextureEnabled&&(this._refractionTexture.isCube?L.setTexture("refractionCubeSampler",this._refractionTexture):L.setTexture("refraction2DSampler",this._refractionTexture))),this.Ae().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(d)&&this.Ae().depthPeelingRenderer.bind(L),this._eventInfo.subMesh=v,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,q.d)(L,this,P),this.bindEyePosition(L)}else P.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(W||!this.isFrozen){var k;if(P.lightsEnabled&&!this._disableLighting&&(0,h.g)(P,d,L,p,this._maxSimultaneousLights),(P.fogEnabled&&d.applyFog&&P.fogMode!==B.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||d.receiveShadows||p.PREPASS)&&this.bindView(L),(0,h.e)(P,d,L),p.NUM_MORPH_INFLUENCERS&&(0,h.m)(d,L),p.BAKED_VERTEX_ANIMATION_TEXTURE)null===(k=d.bakedVertexAnimationManager)||void 0===k||k.bind(L,p.INSTANCES);this.useLogarithmicDepth&&(0,h.i)(p,L,P),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(d,this._activeEffect,v),V.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||(this._diffuseTexture===e||(this._ambientTexture===e||(this._opacityTexture===e||(this._reflectionTexture===e||(this._emissiveTexture===e||(this._specularTexture===e||(this._bumpTexture===e||(this._lightmapTexture===e||this._refractionTexture===e))))))))}dispose(e,d){var v,P,p,L,B,X,z,W,V;d&&(null===(v=this._diffuseTexture)||void 0===v||v.dispose(),null===(P=this._ambientTexture)||void 0===P||P.dispose(),null===(p=this._opacityTexture)||void 0===p||p.dispose(),null===(L=this._reflectionTexture)||void 0===L||L.dispose(),null===(B=this._emissiveTexture)||void 0===B||B.dispose(),null===(X=this._specularTexture)||void 0===X||X.dispose(),null===(z=this._bumpTexture)||void 0===z||z.dispose(),null===(W=this._lightmapTexture)||void 0===W||W.dispose(),null===(V=this._refractionTexture)||void 0===V||V.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,d)}clone(e){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],v=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const P=l.c.Clone((()=>new i(e,this.Ae())),this,{cloneTexturesOnlyOnce:d});return P.name=e,P.id=e,this.hd.copyTo(P.hd),this._clonePlugins(P,v),P}static Parse(e,d,v){const P=l.c.Parse((()=>new i(e.name,d)),e,d,v);return e.hd&&P.hd.parse(e.hd,d,v),k.b._ParsePlugins(e,P,d,v),P}static get DiffuseTextureEnabled(){return U.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){U.d.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return U.d.DetailTextureEnabled}static set DetailTextureEnabled(e){U.d.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return U.d.AmbientTextureEnabled}static set AmbientTextureEnabled(e){U.d.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return U.d.OpacityTextureEnabled}static set OpacityTextureEnabled(e){U.d.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return U.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){U.d.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return U.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){U.d.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return U.d.SpecularTextureEnabled}static set SpecularTextureEnabled(e){U.d.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return U.d.BumpTextureEnabled}static set BumpTextureEnabled(e){U.d.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return U.d.LightmapTextureEnabled}static set LightmapTextureEnabled(e){U.d.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return U.d.RefractionTextureEnabled}static set RefractionTextureEnabled(e){U.d.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return U.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){U.d.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return U.d.FresnelEnabled}static set FresnelEnabled(e){U.d.FresnelEnabled=e}}i.ForceGLSL=!1,(0,P.e)([(0,p.C)("diffuseTexture")],i.prototype,"_diffuseTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"diffuseTexture",void 0),(0,P.e)([(0,p.C)("ambientTexture")],i.prototype,"_ambientTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"ambientTexture",void 0),(0,P.e)([(0,p.C)("opacityTexture")],i.prototype,"_opacityTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"opacityTexture",void 0),(0,P.e)([(0,p.C)("reflectionTexture")],i.prototype,"_reflectionTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"reflectionTexture",void 0),(0,P.e)([(0,p.C)("emissiveTexture")],i.prototype,"_emissiveTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"emissiveTexture",void 0),(0,P.e)([(0,p.C)("specularTexture")],i.prototype,"_specularTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"specularTexture",void 0),(0,P.e)([(0,p.C)("bumpTexture")],i.prototype,"_bumpTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"bumpTexture",void 0),(0,P.e)([(0,p.C)("lightmapTexture")],i.prototype,"_lightmapTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"lightmapTexture",void 0),(0,P.e)([(0,p.C)("refractionTexture")],i.prototype,"_refractionTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"refractionTexture",void 0),(0,P.e)([(0,p.l)("ambient")],i.prototype,"ambientColor",void 0),(0,P.e)([(0,p.l)("diffuse")],i.prototype,"diffuseColor",void 0),(0,P.e)([(0,p.l)("specular")],i.prototype,"specularColor",void 0),(0,P.e)([(0,p.l)("emissive")],i.prototype,"emissiveColor",void 0),(0,P.e)([(0,p.M)()],i.prototype,"specularPower",void 0),(0,P.e)([(0,p.M)("useAlphaFromDiffuseTexture")],i.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"useAlphaFromDiffuseTexture",void 0),(0,P.e)([(0,p.M)("useEmissiveAsIllumination")],i.prototype,"_useEmissiveAsIllumination",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useEmissiveAsIllumination",void 0),(0,P.e)([(0,p.M)("linkEmissiveWithDiffuse")],i.prototype,"_linkEmissiveWithDiffuse",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"linkEmissiveWithDiffuse",void 0),(0,P.e)([(0,p.M)("useSpecularOverAlpha")],i.prototype,"_useSpecularOverAlpha",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useSpecularOverAlpha",void 0),(0,P.e)([(0,p.M)("useReflectionOverAlpha")],i.prototype,"_useReflectionOverAlpha",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useReflectionOverAlpha",void 0),(0,P.e)([(0,p.M)("disableLighting")],i.prototype,"_disableLighting",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsLightsDirty")],i.prototype,"disableLighting",void 0),(0,P.e)([(0,p.M)("useObjectSpaceNormalMap")],i.prototype,"_useObjectSpaceNormalMap",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useObjectSpaceNormalMap",void 0),(0,P.e)([(0,p.M)("useParallax")],i.prototype,"_useParallax",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useParallax",void 0),(0,P.e)([(0,p.M)("useParallaxOcclusion")],i.prototype,"_useParallaxOcclusion",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useParallaxOcclusion",void 0),(0,P.e)([(0,p.M)()],i.prototype,"parallaxScaleBias",void 0),(0,P.e)([(0,p.M)("roughness")],i.prototype,"_roughness",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"roughness",void 0),(0,P.e)([(0,p.M)()],i.prototype,"indexOfRefraction",void 0),(0,P.e)([(0,p.M)()],i.prototype,"invertRefractionY",void 0),(0,P.e)([(0,p.M)()],i.prototype,"alphaCutOff",void 0),(0,P.e)([(0,p.M)("useLightmapAsShadowmap")],i.prototype,"_useLightmapAsShadowmap",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useLightmapAsShadowmap",void 0),(0,P.e)([(0,p.s)("diffuseFresnelParameters")],i.prototype,"_diffuseFresnelParameters",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"diffuseFresnelParameters",void 0),(0,P.e)([(0,p.s)("opacityFresnelParameters")],i.prototype,"_opacityFresnelParameters",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],i.prototype,"opacityFresnelParameters",void 0),(0,P.e)([(0,p.s)("reflectionFresnelParameters")],i.prototype,"_reflectionFresnelParameters",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"reflectionFresnelParameters",void 0),(0,P.e)([(0,p.s)("refractionFresnelParameters")],i.prototype,"_refractionFresnelParameters",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"refractionFresnelParameters",void 0),(0,P.e)([(0,p.s)("emissiveFresnelParameters")],i.prototype,"_emissiveFresnelParameters",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"emissiveFresnelParameters",void 0),(0,P.e)([(0,p.M)("useReflectionFresnelFromSpecular")],i.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"useReflectionFresnelFromSpecular",void 0),(0,P.e)([(0,p.M)("useGlossinessFromSpecularMapAlpha")],i.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,P.e)([(0,p.M)("maxSimultaneousLights")],i.prototype,"_maxSimultaneousLights",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsLightsDirty")],i.prototype,"maxSimultaneousLights",void 0),(0,P.e)([(0,p.M)("invertNormalMapX")],i.prototype,"_invertNormalMapX",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"invertNormalMapX",void 0),(0,P.e)([(0,p.M)("invertNormalMapY")],i.prototype,"_invertNormalMapY",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"invertNormalMapY",void 0),(0,P.e)([(0,p.M)("twoSidedLighting")],i.prototype,"_twoSidedLighting",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"twoSidedLighting",void 0),(0,P.e)([(0,p.M)("applyDecalMapAfterDetailMap")],i.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,P.e)([(0,p.d)("_markAllSubMeshesAsMiscDirty")],i.prototype,"applyDecalMapAfterDetailMap",void 0),(0,G.h)("BABYLON.StandardMaterial",i),B.d.DefaultMaterialFactory=e=>new i("default material",e)}}]);