"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11591:(P,f,Y)=>{Y.d(f,{e:()=>y});var C=Y(11165),q=Y(11524),m=Y(11170),L=Y(11586),o=Y(11583),w=Y(11598),d=Y(11555);class R extends o.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class y extends w.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(P){let f=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(P,"DetailMap",140,new R,f),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=q.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=P._dirtyCallbacks[1]}isReadyForSubMesh(P,f,Y){return!this._isEnabled||!(P._areTexturesDirty&&f.texturesEnabled&&Y.getCaps().standardDerivatives&&this._texture&&L.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(P,f){if(this._isEnabled){P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const Y=f.getEngine();P._areTexturesDirty&&(Y.getCaps().standardDerivatives&&this._texture&&L.d.DetailTextureEnabled&&this._isEnabled?((0,d.O)(this._texture,P,"DETAIL"),P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):P.DETAIL=!1)}else P.DETAIL=!1}bindForSubMesh(P,f){if(!this._isEnabled)return;const Y=this._material.isFrozen;P.useUbo&&Y&&P.isSync||this._texture&&L.d.DetailTextureEnabled&&(P.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,d.q)(this._texture,P,"detail")),f.texturesEnabled&&this._texture&&L.d.DetailTextureEnabled&&P.setTexture("detailSampler",this._texture)}hasTexture(P){return this._texture===P}getActiveTextures(P){this._texture&&P.push(this._texture)}getAnimatables(P){this._texture&&this._texture.animations&&this._texture.animations.length>0&&P.push(this._texture)}dispose(P){var f;P&&(null===(f=this._texture)||void 0===f||f.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(P){P.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,C.b)([(0,m.x)("detailTexture"),(0,m.e)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"texture",void 0),(0,C.b)([(0,m.F)()],y.prototype,"diffuseBlendLevel",void 0),(0,C.b)([(0,m.F)()],y.prototype,"roughnessBlendLevel",void 0),(0,C.b)([(0,m.F)()],y.prototype,"bumpLevel",void 0),(0,C.b)([(0,m.F)(),(0,m.e)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"normalBlendMethod",void 0),(0,C.b)([(0,m.F)(),(0,m.e)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"isEnabled",void 0)},11583:(P,f,Y)=>{Y.d(f,{c:()=>C});class C{constructor(P){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=P,P)for(const f in P)Object.prototype.hasOwnProperty.call(P,f)&&this._setDefaultValue(f)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||P,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const P of Object.keys(this))"_"!==P[0]&&this._keys.push(P);if(this._externalProperties)for(const P in this._externalProperties)-1===this._keys.indexOf(P)&&this._keys.push(P)}isEqual(P){if(this._keys.length!==P._keys.length)return!1;for(let f=0;f<this._keys.length;f++){const Y=this._keys[f];if(this[Y]!==P[Y])return!1}return!0}cloneTo(P){this._keys.length!==P._keys.length&&(P._keys=this._keys.slice(0));for(let f=0;f<this._keys.length;f++){const Y=this._keys[f];P[Y]=this[Y]}}reset(){for(const P of this._keys)this._setDefaultValue(P)}_setDefaultValue(P){var f,Y,C,q;const m=(null===(f=this._externalProperties)||void 0===f||null===(Y=f[P])||void 0===Y?void 0:Y.type)??typeof this[P],L=null===(C=this._externalProperties)||void 0===C||null===(q=C[P])||void 0===q?void 0:q.default;switch(m){case"number":this[P]=L??0;break;case"string":this[P]=L??"";break;default:this[P]=L??!1}}toString(){let P="";for(let f=0;f<this._keys.length;f++){const Y=this._keys[f],C=this[Y];switch(typeof C){case"number":case"string":P+="#define "+Y+" "+C+"\n";break;default:C&&(P+="#define "+Y+"\n")}}return P}}},11586:(P,f,Y)=>{Y.d(f,{d:()=>q});var C=Y(11089);class q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){this._DiffuseTextureEnabled!==P&&(this._DiffuseTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(P){this._BaseWeightTextureEnabled!==P&&(this._BaseWeightTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(P){this._BaseDiffuseRoughnessTextureEnabled!==P&&(this._BaseDiffuseRoughnessTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(P){this._DetailTextureEnabled!==P&&(this._DetailTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(P){this._DecalMapEnabled!==P&&(this._DecalMapEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(P){this._AmbientTextureEnabled!==P&&(this._AmbientTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(P){this._OpacityTextureEnabled!==P&&(this._OpacityTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){this._ReflectionTextureEnabled!==P&&(this._ReflectionTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){this._EmissiveTextureEnabled!==P&&(this._EmissiveTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(P){this._SpecularTextureEnabled!==P&&(this._SpecularTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(P){this._BumpTextureEnabled!==P&&(this._BumpTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(P){this._LightmapTextureEnabled!==P&&(this._LightmapTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(P){this._RefractionTextureEnabled!==P&&(this._RefractionTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){this._ColorGradingTextureEnabled!==P&&(this._ColorGradingTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(P){this._FresnelEnabled!==P&&(this._FresnelEnabled=P,C.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(P){this._ClearCoatTextureEnabled!==P&&(this._ClearCoatTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(P){this._ClearCoatBumpTextureEnabled!==P&&(this._ClearCoatBumpTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(P){this._ClearCoatTintTextureEnabled!==P&&(this._ClearCoatTintTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(P){this._SheenTextureEnabled!==P&&(this._SheenTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(P){this._AnisotropicTextureEnabled!==P&&(this._AnisotropicTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(P){this._ThicknessTextureEnabled!==P&&(this._ThicknessTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(P){this._RefractionIntensityTextureEnabled!==P&&(this._RefractionIntensityTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(P){this._TranslucencyIntensityTextureEnabled!==P&&(this._TranslucencyIntensityTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(P){this._TranslucencyColorTextureEnabled!==P&&(this._TranslucencyColorTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(P){this._IridescenceTextureEnabled!==P&&(this._IridescenceTextureEnabled=P,C.c.MarkAllMaterialsAsDirty(1))}}q._DiffuseTextureEnabled=!0,q._BaseWeightTextureEnabled=!0,q._BaseDiffuseRoughnessTextureEnabled=!0,q._DetailTextureEnabled=!0,q._DecalMapEnabled=!0,q._AmbientTextureEnabled=!0,q._OpacityTextureEnabled=!0,q._ReflectionTextureEnabled=!0,q._EmissiveTextureEnabled=!0,q._SpecularTextureEnabled=!0,q._BumpTextureEnabled=!0,q._LightmapTextureEnabled=!0,q._RefractionTextureEnabled=!0,q._ColorGradingTextureEnabled=!0,q._FresnelEnabled=!0,q._ClearCoatTextureEnabled=!0,q._ClearCoatBumpTextureEnabled=!0,q._ClearCoatTintTextureEnabled=!0,q._SheenTextureEnabled=!0,q._AnisotropicTextureEnabled=!0,q._ThicknessTextureEnabled=!0,q._RefractionIntensityTextureEnabled=!0,q._TranslucencyIntensityTextureEnabled=!0,q._TranslucencyColorTextureEnabled=!0,q._IridescenceTextureEnabled=!0},11605:(P,f,Y)=>{Y.d(f,{b:()=>m});var C,q=Y(11179);!function(P){P[P.Zero=0]="Zero",P[P.One=1]="One",P[P.MaxViewZ=2]="MaxViewZ"}(C||(C={}));class m{static CreateConfiguration(P){return m._Configurations[P]={defines:{},previousWorldMatrices:{},previousViewProjection:q.Matrix.Zero(),currentViewProjection:q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},m._Configurations[P]}static DeleteConfiguration(P){delete m._Configurations[P]}static GetConfiguration(P){return m._Configurations[P]}static AddUniformsAndSamplers(P,f){P.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(P,f){for(const Y of f)if(Y.Jf)for(const f of Y.Jf)f._removeDrawWrapper(P)}static PrepareDefines(P,f,Y){if(!Y._arePrePassDirty)return;const C=m._Configurations[P];if(!C)return;Y.PREPASS=!0,Y.PREPASS_COLOR=!1,Y.PREPASS_COLOR_INDEX=-1;let q=0;for(let L=0;L<m.GeometryTextureDescriptions.length;L++){const P=m.GeometryTextureDescriptions[L],f=P.define,o=P.defineIndex,w=C.defines[o];void 0!==w?(Y[f]=!0,Y[o]=w,q++):(Y[f]=!1,delete Y[o])}Y.SCENE_MRT_COUNT=q,Y.BONES_VELOCITY_ENABLED=f.useBones&&f.computeBonesUsingShaders&&f.skeleton&&!f.skeleton.isUsingTextureForMatrices&&-1===C.excludedSkinnedMesh.indexOf(f)}static Bind(P,f,Y,C,q){const L=m._Configurations[P];if(!L)return;const o=Y.vP(),w=o.getEngine();if(L.reverseCulling&&w.setStateCullFaceType(o._mirroredCameraPosition?q.cullBackFaces:!q.cullBackFaces),(void 0!==L.defines.PREPASS_VELOCITY_INDEX||void 0!==L.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(L.previousWorldMatrices[Y.uniqueId]||(L.previousWorldMatrices[Y.uniqueId]=C.clone()),L.previousViewProjection||(L.previousViewProjection=o.getTransformMatrix().clone(),L.currentViewProjection=o.getTransformMatrix().clone()),L.currentViewProjection.updateFlag!==o.getTransformMatrix().updateFlag?(L.lastUpdateFrameId=w.frameId,L.previousViewProjection.q(L.currentViewProjection),L.currentViewProjection.q(o.getTransformMatrix())):L.lastUpdateFrameId!==w.frameId&&(L.lastUpdateFrameId=w.frameId,L.previousViewProjection.q(L.currentViewProjection)),f.setMatrix("previousWorld",L.previousWorldMatrices[Y.uniqueId]),f.setMatrix("previousViewProjection",L.previousViewProjection),L.previousWorldMatrices[Y.uniqueId]=C.clone(),Y.useBones&&Y.computeBonesUsingShaders&&Y.skeleton)){const P=Y.skeleton;if(!P.isUsingTextureForMatrices||-1===f.getUniformIndex("boneTextureWidth")){const C=P.getTransformMatrices(Y);C&&(L.previousBones[Y.uniqueId]||(L.previousBones[Y.uniqueId]=C.slice()),f.setMatrices("mPreviousBones",L.previousBones[Y.uniqueId]),L.previousBones[Y.uniqueId].set(C))}}}}m.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],m._Configurations={}},11598:(P,f,Y)=>{Y.d(f,{b:()=>K});var C=Y(11165),q=Y(11170),m=Y(11524),L=Y(11052),o=Y(11078),w=Y(11101);const d=new RegExp("^([gimus]+)!");class R{constructor(P){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=P,this._scene=P.vP(),this._engine=this._scene.getEngine()}_addPlugin(P){for(let C=0;C<this._plugins.length;++C)if(this._plugins[C].name===P.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!P.isCompatible(this._material.shaderLanguage))throw`The plugin "${P.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const f=P.getClassName();R._MaterialPluginClassToMainDefine[f]||(R._MaterialPluginClassToMainDefine[f]="MATERIALPLUGIN_"+ ++R._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(P,f)=>this._handlePluginEvent(P,f),this._plugins.push(P),this._plugins.sort(((P,f)=>P.priority-f.priority)),this._codeInjectionPoints={};const Y={};Y[R._MaterialPluginClassToMainDefine[f]]={type:"boolean",default:!0};for(const C of this._plugins)C.collectDefines(Y),this._collectPointNames("vertex",C.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",C.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=Y,!0}_activatePlugin(P){-1===this._activePlugins.indexOf(P)&&(this._activePlugins.push(P),this._activePlugins.sort(((P,f)=>P.priority-f.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),P.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(P),this._activePluginsForExtraEvents.sort(((P,f)=>P.priority-f.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(P){for(let f=0;f<this._plugins.length;++f)if(this._plugins[f].name===P)return this._plugins[f];return null}_handlePluginEventIsReadyForSubMesh(P){let f=!0;for(const Y of this._activePlugins)f=f&&Y.isReadyForSubMesh(P.defines,this._scene,this._engine,P.subMesh);P.isReadyForSubMesh=f}_handlePluginEventPrepareDefinesBeforeAttributes(P){for(const f of this._activePlugins)f.prepareDefinesBeforeAttributes(P.defines,this._scene,P.mesh)}_handlePluginEventPrepareDefines(P){for(const f of this._activePlugins)f.prepareDefines(P.defines,this._scene,P.mesh)}_handlePluginEventHardBindForSubMesh(P){for(const f of this._activePluginsForExtraEvents)f.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventBindForSubMesh(P){for(const f of this._activePlugins)f.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventHasRenderTargetTextures(P){let f=!1;for(const Y of this._activePluginsForExtraEvents)if(f=Y.hasRenderTargetTextures(),f)break;P.hasRenderTargetTextures=f}_handlePluginEventFillRenderTargetTextures(P){for(const f of this._activePluginsForExtraEvents)f.fillRenderTargetTextures(P.renderTargets)}_handlePluginEvent(P,f){switch(P){case 512:{const P=f;for(const f of this._activePlugins)f.getActiveTextures(P.activeTextures);break}case 256:{const P=f;for(const f of this._activePlugins)f.getAnimatables(P.animatables);break}case 1024:{const P=f;let Y=!1;for(const f of this._activePlugins)if(Y=f.hasTexture(P.texture),Y)break;P.hasTexture=Y;break}case 2:{const P=f;for(const f of this._plugins)f.dispose(P.forceDisposeTextures);break}case 4:f.defineNames=this._defineNamesFromPlugins;break;case 128:{const P=f;for(const f of this._activePlugins)P.fallbackRank=f.addFallbacks(P.defines,P.fallbacks,P.fallbackRank),f.getAttributes(P.attributes,this._scene,P.mesh);this._uniformList.length>0&&P.uniforms.push(...this._uniformList),this._samplerList.length>0&&P.samplers.push(...this._samplerList),this._uboList.length>0&&P.uniformBuffersNames.push(...this._uboList),P.customCode=this._injectCustomCode(P,P.customCode);break}case 8:{const P=f;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const Y=1===this._material.shaderLanguage;for(const f of this._plugins){const C=f.getUniforms(this._material.shaderLanguage);if(C){if(C.ubo)for(const f of C.ubo){if(f.size&&f.type){const C=f.arraySize??0;if(P.ubo.addUniform(f.name,f.size,C),Y){let P;switch(f.type){case"mat4":P="mat4x4f";break;case"float":P="f32";break;default:P=`${f.type}f`}this._uboDeclaration+=C>0?`uniform ${f.name}: array<${P}, ${C}>;\n`:`uniform ${f.name}: ${P};\n`}else this._uboDeclaration+=`${f.type} ${f.name}${C>0?`[${C}]`:""};\n`}this._uniformList.push(f.name)}C.vertex&&(this._vertexDeclaration+=C.vertex+"\n"),C.fragment&&(this._fragmentDeclaration+=C.fragment+"\n")}f.getSamplers(this._samplerList),f.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(P,f){if(f)for(const Y in f)this._codeInjectionPoints[P]||(this._codeInjectionPoints[P]={}),this._codeInjectionPoints[P][Y]=!0}_injectCustomCode(P,f){return(Y,C)=>{var q;f&&(C=f(Y,C)),this._uboDeclaration&&(C=C.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(C=C.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(C=C.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const m=null===(q=this._codeInjectionPoints)||void 0===q?void 0:q[Y];if(!m)return C;let L=null;for(let f in m){let q="";for(const C of this._activePlugins){var R;let m=null===(R=C.getCustomCode(Y,this._material.shaderLanguage))||void 0===R?void 0:R[f];if(m){if(C.resolveIncludes){if(null===L){const f=0;L={defines:[],indexParameters:P.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:w.e.GetShadersRepository(f),includesShadersStore:w.e.GetIncludesShadersStore(f),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}L.isFragment="fragment"===Y,(0,o.k)(m,L,(P=>m=P))}q+=m+"\n"}}if(q.length>0)if("!"===f.charAt(0)){f=f.substring(1);let P="g";if("!"===f.charAt(0))P="",f=f.substring(1);else{const Y=d.exec(f);Y&&Y.length>=2&&(P=Y[1],f=f.substring(P.length+1))}P.indexOf("g")<0&&(P+="g");const Y=C,m=new RegExp(f,P);let L=m.exec(Y);for(;null!==L;){let P=q;for(let f=0;f<L.length;++f)P=P.replace("$"+f,L[f]);C=C.replace(L[0],P),L=m.exec(Y)}}else{const P="#define "+f;C=C.replace(P,"\n"+q+"\n"+P)}}return C}}}R._MaterialPluginClassToMainDefine={},R._MaterialPluginCounter=0,L.e.OnEnginesDisposedObservable.add((()=>{u()}));const y=[];let r=!1,i=null;function u(){y.length=0,r=!1,m.d.OnEventObservable.remove(i),i=null}var g=Y(11216),S=Y(11134);class K{isCompatible(P){return 0===P}_enable(P){P&&this._pluginManager._activatePlugin(this)}constructor(P,f,Y,C){let q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],m=arguments.length>5&&void 0!==arguments[5]&&arguments[5],L=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=P,this.name=f,this.priority=Y,this.resolveIncludes=L,P.pluginManager||(P.pluginManager=new R(P),P.vf.add((()=>{P.pluginManager=void 0}))),this._pluginDefineNames=C,this._pluginManager=P.pluginManager,q&&this._pluginManager._addPlugin(this),m&&this._enable(!0),this.markAllDefinesAsDirty=P._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(P,f,Y,C){return!0}hardBindForSubMesh(P,f,Y,C){}bindForSubMesh(P,f,Y,C){}dispose(P){}getCustomCode(P){return null}collectDefines(P){if(this._pluginDefineNames)for(const f of Object.keys(this._pluginDefineNames)){if("_"===f[0])continue;const Y=typeof this._pluginDefineNames[f];P[f]={type:"number"===Y?"number":"string"===Y?"string":"boolean"===Y?"boolean":"object",default:this._pluginDefineNames[f]}}}prepareDefinesBeforeAttributes(P,f,Y){}prepareDefines(P,f,Y){}hasTexture(P){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(P){}getActiveTextures(P){}getAnimatables(P){}addFallbacks(P,f,Y){return Y}getSamplers(P){}getAttributes(P,f,Y){}getUniformBuffersNames(P){}getUniforms(){return{}}copyTo(P){g.e.Clone((()=>P),this)}serialize(){return g.e.Serialize(this)}parse(P,f,Y){g.e.Parse((()=>this),P,f,Y)}}(0,C.b)([(0,q.F)()],K.prototype,"name",void 0),(0,C.b)([(0,q.F)()],K.prototype,"priority",void 0),(0,C.b)([(0,q.F)()],K.prototype,"resolveIncludes",void 0),(0,C.b)([(0,q.F)()],K.prototype,"registerForExtraEvents",void 0),(0,S.d)("BABYLON.MaterialPluginBase",K)},11577:(P,f,Y)=>{Y.d(f,{b:()=>C});class C{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(P){P.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(P){}bindForSubMesh(P,f,Y,C,q){if(f.prePassRenderer&&f.prePassRenderer.enabled&&f.prePassRenderer.currentRTisSceneRT&&(-1!==f.prePassRenderer.getIndex(2)||-1!==f.prePassRenderer.getIndex(11))){this.previousWorldMatrices[Y.uniqueId]||(this.previousWorldMatrices[Y.uniqueId]=C.clone()),this.previousViewProjection||(this.previousViewProjection=f.getTransformMatrix().clone(),this.currentViewProjection=f.getTransformMatrix().clone());const q=f.getEngine();this.currentViewProjection.updateFlag!==f.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(f.getTransformMatrix())):this._lastUpdateFrameId!==q.frameId&&(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.q(this.currentViewProjection)),P.setMatrix("previousWorld",this.previousWorldMatrices[Y.uniqueId]),P.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[Y.uniqueId]=C.clone()}}}},11569:(P,f,Y)=>{Y.d(f,{Uf:()=>T});var C=Y(11165),q=Y(11170),m=Y(11280),L=Y(11429),o=Y(11228),w=Y(11255),d=Y(11577),R=Y(11438),y=Y(11524),r=Y(11583),i=Y(11520),u=Y(11160),g=Y(11134),S=Y(11586),K=Y(11511),M=Y(11591),V=Y(11561),O=Y(11555),n=Y(11216),l=Y(11605);const v={effect:null,subMesh:null};class c extends r.c{constructor(P){super(P),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(P){const f=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const Y of f)this[Y]=Y===P}}class T extends i.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(P){this._attachImageProcessingConfiguration(P),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(P){P!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=P||this.vP().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(P){this.imageProcessingConfiguration.colorCurvesEnabled=P}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(P){this.imageProcessingConfiguration.colorGradingEnabled=P}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(P){this._imageProcessingConfiguration.toneMappingEnabled=P}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(P){this._imageProcessingConfiguration.exposure=P}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(P){this._imageProcessingConfiguration.contrast=P}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(P){this._imageProcessingConfiguration.colorGradingTexture=P}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(P){this._imageProcessingConfiguration.colorCurves=P}get canRenderToMRT(){return!0}constructor(P,f){super(P,f,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||T.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new o.Df(0,0,0),this.diffuseColor=new o.Df(1,1,1),this.specularColor=new o.Df(1,1,1),this.emissiveColor=new o.Df(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new m.f(16),this._globalAmbientColor=new o.Df(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new M.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new d.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),T.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),T.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(T.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(T.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Uf"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===y.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Gf&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==y.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Gf||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(P,f){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const q=f._drawWrapper;if(q.effect&&this.isFrozen&&q._wasPreviouslyReady&&q._wasPreviouslyUsingInstances===C)return!0;f.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),f.materialDefines=new c(this._eventInfo.defineNames));const m=this.vP(),L=f.materialDefines;if(this._isReadyForSubMesh(f))return!0;const o=m.getEngine();L._needNormals=(0,O.N)(m,P,L,!0,this._maxSimultaneousLights,this._disableLighting),(0,O.T)(m,L);const y=this.needAlphaBlendingForMesh(P)&&this.vP().useOrderIndependentTransparency;if((0,O.Z)(m,L,this.canRenderToMRT&&!y),(0,O.V)(m,L,y),l.b.PrepareDefines(o.currentRenderPassId,P,L),L._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,L._needUVs=!1;for(let P=1;P<=6;++P)L["MAINUV"+P]=!1;if(m.texturesEnabled){if(L.DIFFUSEDIRECTUV=0,L.BUMPDIRECTUV=0,L.AMBIENTDIRECTUV=0,L.OPACITYDIRECTUV=0,L.EMISSIVEDIRECTUV=0,L.SPECULARDIRECTUV=0,L.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&T.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._diffuseTexture,L,"DIFFUSE")}else L.DIFFUSE=!1;if(this._ambientTexture&&T.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._ambientTexture,L,"AMBIENT")}else L.AMBIENT=!1;if(this._opacityTexture&&T.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._opacityTexture,L,"OPACITY"),L.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else L.OPACITY=!1;if(this._reflectionTexture&&T.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(L._needNormals=!0,L.REFLECTION=!0,L.ROUGHNESS=this._roughness>0,L.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,L.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===u.c.INVCUBIC_MODE,L.REFLECTIONMAP_3D=this._reflectionTexture.isCube,L.REFLECTIONMAP_OPPOSITEZ=L.REFLECTIONMAP_3D&&this.vP().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,L.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case u.c.EXPLICIT_MODE:L.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case u.c.PLANAR_MODE:L.setReflectionMode("REFLECTIONMAP_PLANAR");break;case u.c.PROJECTION_MODE:L.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case u.c.SKYBOX_MODE:L.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case u.c.SPHERICAL_MODE:L.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case u.c.EQUIRECTANGULAR_MODE:L.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case u.c.FIXED_EQUIRECTANGULAR_MODE:L.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case u.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:L.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case u.c.CUBIC_MODE:case u.c.INVCUBIC_MODE:default:L.setReflectionMode("REFLECTIONMAP_CUBIC")}L.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else L.REFLECTION=!1,L.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&T.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._emissiveTexture,L,"EMISSIVE")}else L.EMISSIVE=!1;if(this._lightmapTexture&&T.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._lightmapTexture,L,"LIGHTMAP"),L.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,L.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else L.LIGHTMAP=!1;if(this._specularTexture&&T.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,O.O)(this._specularTexture,L,"SPECULAR"),L.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else L.SPECULAR=!1;if(m.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&T.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,O.O)(this._bumpTexture,L,"BUMP"),L.PARALLAX=this._useParallax,L.PARALLAX_RHS=m.useRightHandedSystem,L.PARALLAXOCCLUSION=this._useParallaxOcclusion,L.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else L.BUMP=!1,L.PARALLAX=!1,L.PARALLAX_RHS=!1,L.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&T.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;L._needUVs=!0,L.REFRACTION=!0,L.REFRACTIONMAP_3D=this._refractionTexture.isCube,L.RGBDREFRACTION=this._refractionTexture.isRGBD,L.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else L.REFRACTION=!1;L.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else L.DIFFUSE=!1,L.AMBIENT=!1,L.OPACITY=!1,L.REFLECTION=!1,L.EMISSIVE=!1,L.LIGHTMAP=!1,L.BUMP=!1,L.REFRACTION=!1;L.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),L.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,L.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,L.SPECULAROVERALPHA=this._useSpecularOverAlpha,L.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,L.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,L.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(P)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=L,this._eventInfo.subMesh=f,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(L._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(L),L.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,L.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(L._areFresnelDirty&&(T.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(L.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,L.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,L.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,L.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,L.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,L.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,L._needNormals=!0,L.FRESNEL=!0):L.FRESNEL=!1),L.AREALIGHTUSED)for(let Y=0;Y<P.lightSources.length;Y++)if(!P.lightSources[Y]._isReady())return!1;(0,O.S)(P,m,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(P),L,this._applyDecalMapAfterDetailMap),(0,O.J)(m,o,this,L,C,null,f.getRenderingMesh().hasThinInstances),this._eventInfo.defines=L,this._eventInfo.mesh=P,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,O.G)(P,L,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let r=!1;if(L.isDirty){const C=L._areLightsDisposed;L.markAsProcessed();const q=new K.d;L.REFLECTION&&q.addFallback(0,"REFLECTION"),L.SPECULAR&&q.addFallback(0,"SPECULAR"),L.BUMP&&q.addFallback(0,"BUMP"),L.PARALLAX&&q.addFallback(1,"PARALLAX"),L.PARALLAX_RHS&&q.addFallback(1,"PARALLAX_RHS"),L.PARALLAXOCCLUSION&&q.addFallback(0,"PARALLAXOCCLUSION"),L.SPECULAROVERALPHA&&q.addFallback(0,"SPECULAROVERALPHA"),L.FOG&&q.addFallback(1,"FOG"),L.POINTSIZE&&q.addFallback(0,"POINTSIZE"),L.LOGARITHMICDEPTH&&q.addFallback(0,"LOGARITHMICDEPTH"),(0,O.u)(L,q,this._maxSimultaneousLights),L.SPECULARTERM&&q.addFallback(0,"SPECULARTERM"),L.DIFFUSEFRESNEL&&q.addFallback(1,"DIFFUSEFRESNEL"),L.OPACITYFRESNEL&&q.addFallback(2,"OPACITYFRESNEL"),L.REFLECTIONFRESNEL&&q.addFallback(3,"REFLECTIONFRESNEL"),L.EMISSIVEFRESNEL&&q.addFallback(4,"EMISSIVEFRESNEL"),L.FRESNEL&&q.addFallback(4,"FRESNEL"),L.MULTIVIEW&&q.addFallback(0,"MULTIVIEW");const y=[w.d.PositionKind];L.NORMAL&&y.push(w.d.NormalKind),L.TANGENT&&y.push(w.d.TangentKind);for(let P=1;P<=6;++P)L["UV"+P]&&y.push(`uv${1===P?"":P}`);L.VERTEXCOLOR&&y.push(w.d.ColorKind),(0,O.A)(y,P,L,q),(0,O.D)(y,L),(0,O.E)(y,P,L),(0,O.y)(y,P,L);let i="default";const u=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],g=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],S=["Material","Scene","Mesh"],M={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:L.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=L,this._eventInfo.uniforms=u,this._eventInfo.attributes=y,this._eventInfo.samplers=g,this._eventInfo.uniformBuffersNames=S,this._eventInfo.customCode=void 0,this._eventInfo.mesh=P,this._eventInfo.indexParameters=M,this._callbackPluginEventGeneric(128,this._eventInfo),l.b.AddUniformsAndSamplers(u,g),d.b.AddUniforms(u),d.b.AddSamplers(g),R.d&&(R.d.PrepareUniforms(u,L),R.d.PrepareSamplers(g,L)),(0,O.bb)({uniformsNames:u,uniformBuffersNames:S,samplers:g,defines:L,maxSimultaneousLights:this._maxSimultaneousLights}),(0,V.d)(u);const n={};this.customShaderNameResolve&&(i=this.customShaderNameResolve(i,u,S,g,L,y,n));const c=L.toString(),T=f.effect;let U=m.getEngine().createEffect(i,{attributes:y,uniformsNames:u,uniformBuffersNames:S,samplers:g,defines:c,fallbacks:q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:M,processFinalCode:n.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:L.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([Y.e(41),Y.e(64)]).then(Y.bind(Y,13763)),Promise.all([Y.e(39),Y.e(65)]).then(Y.bind(Y,13899))]):await Promise.all([Promise.all([Y.e(34),Y.e(67)]).then(Y.bind(Y,13980)),Promise.all([Y.e(33),Y.e(68)]).then(Y.bind(Y,14118))]),this._shadersLoaded=!0}},o);if(this._eventInfo.customCode=void 0,U)if(this._onEffectCreatedObservable&&(v.effect=U,v.subMesh=f,this._onEffectCreatedObservable.notifyObservers(v)),this.allowShaderHotSwapping&&T&&!U.isReady()){if(U=T,L.markAsUnprocessed(),r=this.isFrozen,C)return L._areLightsDisposed=!0,!1}else m.resetCachedMaterial(),f.setEffect(U,L,this._materialContext)}return!(!f.effect||!f.effect.isReady())&&(L._renderId=m.getRenderId(),q._wasPreviouslyReady=!r,q._wasPreviouslyUsingInstances=C,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const P=this._uniformBuffer;P.addUniform("diffuseLeftColor",4),P.addUniform("diffuseRightColor",4),P.addUniform("opacityParts",4),P.addUniform("reflectionLeftColor",4),P.addUniform("reflectionRightColor",4),P.addUniform("refractionLeftColor",4),P.addUniform("refractionRightColor",4),P.addUniform("emissiveLeftColor",4),P.addUniform("emissiveRightColor",4),P.addUniform("vDiffuseInfos",2),P.addUniform("vAmbientInfos",2),P.addUniform("vOpacityInfos",2),P.addUniform("vReflectionInfos",2),P.addUniform("vReflectionPosition",3),P.addUniform("vReflectionSize",3),P.addUniform("vEmissiveInfos",2),P.addUniform("vLightmapInfos",2),P.addUniform("vSpecularInfos",2),P.addUniform("vBumpInfos",3),P.addUniform("diffuseMatrix",16),P.addUniform("ambientMatrix",16),P.addUniform("opacityMatrix",16),P.addUniform("reflectionMatrix",16),P.addUniform("emissiveMatrix",16),P.addUniform("lightmapMatrix",16),P.addUniform("specularMatrix",16),P.addUniform("bumpMatrix",16),P.addUniform("vTangentSpaceParams",2),P.addUniform("pointSize",1),P.addUniform("alphaCutOff",1),P.addUniform("refractionMatrix",16),P.addUniform("vRefractionInfos",4),P.addUniform("vRefractionPosition",3),P.addUniform("vRefractionSize",3),P.addUniform("vSpecularColor",4),P.addUniform("vEmissiveColor",3),P.addUniform("vDiffuseColor",4),P.addUniform("vAmbientColor",3),P.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(P,f,Y){const C=this.vP(),q=Y.materialDefines;if(!q)return;const m=Y.effect;if(!m)return;this._activeEffect=m,f.getMeshUniformBuffer().bindToEffect(m,"Mesh"),f.transferToEffect(P),this._uniformBuffer.bindToEffect(m,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,C,f,P,this.isFrozen),l.b.Bind(C.getEngine().currentRenderPassId,this._activeEffect,f,P,this);const w=C.activeCamera;w?this._uniformBuffer.updateFloat4("cameraInfo",w.zf,w.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=Y,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),q.OBJECTSPACE_NORMALMAP&&(P.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const d=this._mustRebind(C,m,Y,f.visibility);(0,O.c)(f,m);const R=this._uniformBuffer;if(d){if(this.bindViewProjection(m),!R.useUbo||!this.isFrozen||!R.isSync||Y._drawWrapper._forceRebindOnNextCall){if(T.FresnelEnabled&&q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(R.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),R.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&R.updateColor4("opacityParts",new o.Df(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(R.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),R.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(R.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),R.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(R.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),R.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),C.texturesEnabled){if(this._diffuseTexture&&T.DiffuseTextureEnabled&&(R.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,O.q)(this._diffuseTexture,R,"diffuse")),this._ambientTexture&&T.AmbientTextureEnabled&&(R.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,O.q)(this._ambientTexture,R,"ambient")),this._opacityTexture&&T.OpacityTextureEnabled&&(R.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,O.q)(this._opacityTexture,R,"opacity")),this._hasAlphaChannel()&&R.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&T.ReflectionTextureEnabled){if(R.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),R.bf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const P=this._reflectionTexture;R.updateVector3("vReflectionPosition",P.boundingBoxPosition),R.updateVector3("vReflectionSize",P.boundingBoxSize)}}else R.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&T.EmissiveTextureEnabled&&(R.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,O.q)(this._emissiveTexture,R,"emissive")),this._lightmapTexture&&T.LightmapTextureEnabled&&(R.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,O.q)(this._lightmapTexture,R,"lightmap")),this._specularTexture&&T.SpecularTextureEnabled&&(R.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,O.q)(this._specularTexture,R,"specular")),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&T.BumpTextureEnabled&&(R.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,O.q)(this._bumpTexture,R,"bump"),C._mirroredCameraPosition?R.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):R.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&T.RefractionTextureEnabled){let P=1;if(this._refractionTexture.isCube||(R.bf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(P=this._refractionTexture.depth)),R.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,P,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const P=this._refractionTexture;R.updateVector3("vRefractionPosition",P.boundingBoxPosition),R.updateVector3("vRefractionSize",P.boundingBoxSize)}}}this.pointsCloud&&R.updateFloat("pointSize",this.pointSize),R.updateColor4("vSpecularColor",this.specularColor,this.specularPower),R.updateColor3("vEmissiveColor",T.EmissiveTextureEnabled?this.emissiveColor:o.Df.BlackReadOnly),R.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),C.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),R.updateColor3("vAmbientColor",this._globalAmbientColor)}C.texturesEnabled&&(this._diffuseTexture&&T.DiffuseTextureEnabled&&m.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&T.AmbientTextureEnabled&&m.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&T.OpacityTextureEnabled&&m.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&T.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?m.setTexture("reflectionCubeSampler",this._reflectionTexture):m.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&T.EmissiveTextureEnabled&&m.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&T.LightmapTextureEnabled&&m.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&T.SpecularTextureEnabled&&m.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&T.BumpTextureEnabled&&m.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&T.RefractionTextureEnabled&&(this._refractionTexture.isCube?m.setTexture("refractionCubeSampler",this._refractionTexture):m.setTexture("refraction2DSampler",this._refractionTexture))),this.vP().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(f)&&this.vP().depthPeelingRenderer.bind(m),this._eventInfo.subMesh=Y,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,V.f)(m,this,C),this.bindEyePosition(m)}else C.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(d||!this.isFrozen){var y;if(C.lightsEnabled&&!this._disableLighting&&(0,O.f)(C,f,m,q,this._maxSimultaneousLights),(C.fogEnabled&&f.applyFog&&C.fogMode!==L.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||f.receiveShadows||q.PREPASS)&&this.bindView(m),(0,O.d)(C,f,m),q.NUM_MORPH_INFLUENCERS&&(0,O.k)(f,m),q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(y=f.bakedVertexAnimationManager)||void 0===y||y.bind(m,q.INSTANCES);this.useLogarithmicDepth&&(0,O.i)(q,m,C),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(f,this._activeEffect,Y),R.update()}getAnimatables(){const P=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&P.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&P.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&P.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&P.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&P.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&P.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&P.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&P.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&P.push(this._refractionTexture),P}getActiveTextures(){const P=super.getActiveTextures();return this._diffuseTexture&&P.push(this._diffuseTexture),this._ambientTexture&&P.push(this._ambientTexture),this._opacityTexture&&P.push(this._opacityTexture),this._reflectionTexture&&P.push(this._reflectionTexture),this._emissiveTexture&&P.push(this._emissiveTexture),this._specularTexture&&P.push(this._specularTexture),this._bumpTexture&&P.push(this._bumpTexture),this._lightmapTexture&&P.push(this._lightmapTexture),this._refractionTexture&&P.push(this._refractionTexture),P}hasTexture(P){return!!super.hasTexture(P)||(this._diffuseTexture===P||(this._ambientTexture===P||(this._opacityTexture===P||(this._reflectionTexture===P||(this._emissiveTexture===P||(this._specularTexture===P||(this._bumpTexture===P||(this._lightmapTexture===P||this._refractionTexture===P))))))))}dispose(P,f){var Y,C,q,m,L,o,w,d,R;f&&(null===(Y=this._diffuseTexture)||void 0===Y||Y.dispose(),null===(C=this._ambientTexture)||void 0===C||C.dispose(),null===(q=this._opacityTexture)||void 0===q||q.dispose(),null===(m=this._reflectionTexture)||void 0===m||m.dispose(),null===(L=this._emissiveTexture)||void 0===L||L.dispose(),null===(o=this._specularTexture)||void 0===o||o.dispose(),null===(w=this._bumpTexture)||void 0===w||w.dispose(),null===(d=this._lightmapTexture)||void 0===d||d.dispose(),null===(R=this._refractionTexture)||void 0===R||R.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(P,f)}clone(P){let f=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const C=n.e.Clone((()=>new T(P,this.vP())),this,{cloneTexturesOnlyOnce:f});return C.name=P,C.id=P,this.stencil.copyTo(C.stencil),this._clonePlugins(C,Y),C}static Parse(P,f,Y){const C=n.e.Parse((()=>new T(P.name,f)),P,f,Y);return P.stencil&&C.stencil.parse(P.stencil,f,Y),y.d._ParsePlugins(P,C,f,Y),C}static get DiffuseTextureEnabled(){return S.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){S.d.DiffuseTextureEnabled=P}static get DetailTextureEnabled(){return S.d.DetailTextureEnabled}static set DetailTextureEnabled(P){S.d.DetailTextureEnabled=P}static get AmbientTextureEnabled(){return S.d.AmbientTextureEnabled}static set AmbientTextureEnabled(P){S.d.AmbientTextureEnabled=P}static get OpacityTextureEnabled(){return S.d.OpacityTextureEnabled}static set OpacityTextureEnabled(P){S.d.OpacityTextureEnabled=P}static get ReflectionTextureEnabled(){return S.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){S.d.ReflectionTextureEnabled=P}static get EmissiveTextureEnabled(){return S.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){S.d.EmissiveTextureEnabled=P}static get SpecularTextureEnabled(){return S.d.SpecularTextureEnabled}static set SpecularTextureEnabled(P){S.d.SpecularTextureEnabled=P}static get BumpTextureEnabled(){return S.d.BumpTextureEnabled}static set BumpTextureEnabled(P){S.d.BumpTextureEnabled=P}static get LightmapTextureEnabled(){return S.d.LightmapTextureEnabled}static set LightmapTextureEnabled(P){S.d.LightmapTextureEnabled=P}static get RefractionTextureEnabled(){return S.d.RefractionTextureEnabled}static set RefractionTextureEnabled(P){S.d.RefractionTextureEnabled=P}static get ColorGradingTextureEnabled(){return S.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){S.d.ColorGradingTextureEnabled=P}static get FresnelEnabled(){return S.d.FresnelEnabled}static set FresnelEnabled(P){S.d.FresnelEnabled=P}}T.ForceGLSL=!1,(0,C.b)([(0,q.x)("diffuseTexture")],T.prototype,"_diffuseTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"diffuseTexture",void 0),(0,C.b)([(0,q.x)("ambientTexture")],T.prototype,"_ambientTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"ambientTexture",void 0),(0,C.b)([(0,q.x)("opacityTexture")],T.prototype,"_opacityTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"opacityTexture",void 0),(0,C.b)([(0,q.x)("reflectionTexture")],T.prototype,"_reflectionTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"reflectionTexture",void 0),(0,C.b)([(0,q.x)("emissiveTexture")],T.prototype,"_emissiveTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"emissiveTexture",void 0),(0,C.b)([(0,q.x)("specularTexture")],T.prototype,"_specularTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"specularTexture",void 0),(0,C.b)([(0,q.x)("bumpTexture")],T.prototype,"_bumpTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"bumpTexture",void 0),(0,C.b)([(0,q.x)("lightmapTexture")],T.prototype,"_lightmapTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"lightmapTexture",void 0),(0,C.b)([(0,q.x)("refractionTexture")],T.prototype,"_refractionTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"refractionTexture",void 0),(0,C.b)([(0,q.i)("ambient")],T.prototype,"ambientColor",void 0),(0,C.b)([(0,q.i)("diffuse")],T.prototype,"diffuseColor",void 0),(0,C.b)([(0,q.i)("specular")],T.prototype,"specularColor",void 0),(0,C.b)([(0,q.i)("emissive")],T.prototype,"emissiveColor",void 0),(0,C.b)([(0,q.F)()],T.prototype,"specularPower",void 0),(0,C.b)([(0,q.F)("useAlphaFromDiffuseTexture")],T.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,q.F)("useEmissiveAsIllumination")],T.prototype,"_useEmissiveAsIllumination",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useEmissiveAsIllumination",void 0),(0,C.b)([(0,q.F)("linkEmissiveWithDiffuse")],T.prototype,"_linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,q.F)("useSpecularOverAlpha")],T.prototype,"_useSpecularOverAlpha",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useSpecularOverAlpha",void 0),(0,C.b)([(0,q.F)("useReflectionOverAlpha")],T.prototype,"_useReflectionOverAlpha",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useReflectionOverAlpha",void 0),(0,C.b)([(0,q.F)("disableLighting")],T.prototype,"_disableLighting",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],T.prototype,"disableLighting",void 0),(0,C.b)([(0,q.F)("useObjectSpaceNormalMap")],T.prototype,"_useObjectSpaceNormalMap",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useObjectSpaceNormalMap",void 0),(0,C.b)([(0,q.F)("useParallax")],T.prototype,"_useParallax",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useParallax",void 0),(0,C.b)([(0,q.F)("useParallaxOcclusion")],T.prototype,"_useParallaxOcclusion",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useParallaxOcclusion",void 0),(0,C.b)([(0,q.F)()],T.prototype,"parallaxScaleBias",void 0),(0,C.b)([(0,q.F)("roughness")],T.prototype,"_roughness",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"roughness",void 0),(0,C.b)([(0,q.F)()],T.prototype,"indexOfRefraction",void 0),(0,C.b)([(0,q.F)()],T.prototype,"invertRefractionY",void 0),(0,C.b)([(0,q.F)()],T.prototype,"alphaCutOff",void 0),(0,C.b)([(0,q.F)("useLightmapAsShadowmap")],T.prototype,"_useLightmapAsShadowmap",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useLightmapAsShadowmap",void 0),(0,C.b)([(0,q.n)("diffuseFresnelParameters")],T.prototype,"_diffuseFresnelParameters",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"diffuseFresnelParameters",void 0),(0,C.b)([(0,q.n)("opacityFresnelParameters")],T.prototype,"_opacityFresnelParameters",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],T.prototype,"opacityFresnelParameters",void 0),(0,C.b)([(0,q.n)("reflectionFresnelParameters")],T.prototype,"_reflectionFresnelParameters",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"reflectionFresnelParameters",void 0),(0,C.b)([(0,q.n)("refractionFresnelParameters")],T.prototype,"_refractionFresnelParameters",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"refractionFresnelParameters",void 0),(0,C.b)([(0,q.n)("emissiveFresnelParameters")],T.prototype,"_emissiveFresnelParameters",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"emissiveFresnelParameters",void 0),(0,C.b)([(0,q.F)("useReflectionFresnelFromSpecular")],T.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,q.F)("useGlossinessFromSpecularMapAlpha")],T.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,q.F)("maxSimultaneousLights")],T.prototype,"_maxSimultaneousLights",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],T.prototype,"maxSimultaneousLights",void 0),(0,C.b)([(0,q.F)("invertNormalMapX")],T.prototype,"_invertNormalMapX",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"invertNormalMapX",void 0),(0,C.b)([(0,q.F)("invertNormalMapY")],T.prototype,"_invertNormalMapY",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"invertNormalMapY",void 0),(0,C.b)([(0,q.F)("twoSidedLighting")],T.prototype,"_twoSidedLighting",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"twoSidedLighting",void 0),(0,C.b)([(0,q.F)("applyDecalMapAfterDetailMap")],T.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,C.b)([(0,q.e)("_markAllSubMeshesAsMiscDirty")],T.prototype,"applyDecalMapAfterDetailMap",void 0),(0,g.d)("BABYLON.StandardMaterial",T),L.e.DefaultMaterialFactory=P=>new T("default material",P)}}]);