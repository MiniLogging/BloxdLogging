"use strict";(self.gpkvekif0vo=self.gpkvekif0vo||[]).push([[25],{12798:(a,O,i)=>{i.d(O,{e:()=>e});var H=i(12375),b=i(12730),G=i(12384),q=i(12790),Q=i(12783),k=i(12802),I=i(12771);class P extends Q.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class e extends k.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(a){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(a,"DetailMap",140,new P,O),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=b.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=a._dirtyCallbacks[1]}isReadyForSubMesh(a,O,i){return!this._isEnabled||!(a._areTexturesDirty&&O.texturesEnabled&&i.getCaps().standardDerivatives&&this._texture&&q.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(a,O){if(this._isEnabled){a.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const i=O.getEngine();a._areTexturesDirty&&(i.getCaps().standardDerivatives&&this._texture&&q.b.DetailTextureEnabled&&this._isEnabled?((0,I.Q)(this._texture,a,"DETAIL"),a.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):a.DETAIL=!1)}else a.DETAIL=!1}bindForSubMesh(a,O){if(!this._isEnabled)return;const i=this._material.isFrozen;a.useUbo&&i&&a.isSync||this._texture&&q.b.DetailTextureEnabled&&(a.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,I.o)(this._texture,a,"detail")),O.texturesEnabled&&this._texture&&q.b.DetailTextureEnabled&&a.setTexture("detailSampler",this._texture)}hasTexture(a){return this._texture===a}getActiveTextures(a){this._texture&&a.push(this._texture)}getAnimatables(a){this._texture&&this._texture.animations&&this._texture.animations.length>0&&a.push(this._texture)}dispose(a){var O;a&&(null===(O=this._texture)||void 0===O||O.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(a){a.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,H.c)([(0,G.z)("detailTexture"),(0,G.c)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"texture",void 0),(0,H.c)([(0,G.G)()],e.prototype,"diffuseBlendLevel",void 0),(0,H.c)([(0,G.G)()],e.prototype,"roughnessBlendLevel",void 0),(0,H.c)([(0,G.G)()],e.prototype,"bumpLevel",void 0),(0,H.c)([(0,G.G)(),(0,G.c)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"normalBlendMethod",void 0),(0,H.c)([(0,G.G)(),(0,G.c)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"isEnabled",void 0)},12783:(a,O,i)=>{i.d(O,{d:()=>H});class H{constructor(a){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=a,a)for(const O in a)Object.prototype.hasOwnProperty.call(a,O)&&this._setDefaultValue(O)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let a=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||a,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const a of Object.keys(this))"_"!==a[0]&&this._keys.push(a);if(this._externalProperties)for(const a in this._externalProperties)-1===this._keys.indexOf(a)&&this._keys.push(a)}isEqual(a){if(this._keys.length!==a._keys.length)return!1;for(let O=0;O<this._keys.length;O++){const i=this._keys[O];if(this[i]!==a[i])return!1}return!0}cloneTo(a){this._keys.length!==a._keys.length&&(a._keys=this._keys.slice(0));for(let O=0;O<this._keys.length;O++){const i=this._keys[O];a[i]=this[i]}}reset(){for(const a of this._keys)this._setDefaultValue(a)}_setDefaultValue(a){var O,i,H,b;const G=(null===(O=this._externalProperties)||void 0===O||null===(i=O[a])||void 0===i?void 0:i.type)??typeof this[a],q=null===(H=this._externalProperties)||void 0===H||null===(b=H[a])||void 0===b?void 0:b.default;switch(G){case"number":this[a]=q??0;break;case"string":this[a]=q??"";break;default:this[a]=q??!1}}toString(){let a="";for(let O=0;O<this._keys.length;O++){const i=this._keys[O],H=this[i];switch(typeof H){case"number":case"string":a+="#define "+i+" "+H+"\n";break;default:H&&(a+="#define "+i+"\n")}}return a}}},12790:(a,O,i)=>{i.d(O,{b:()=>b});var H=i(12273);class b{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(a){this._DiffuseTextureEnabled!==a&&(this._DiffuseTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(a){this._BaseWeightTextureEnabled!==a&&(this._BaseWeightTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(a){this._BaseDiffuseRoughnessTextureEnabled!==a&&(this._BaseDiffuseRoughnessTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(a){this._DetailTextureEnabled!==a&&(this._DetailTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(a){this._DecalMapEnabled!==a&&(this._DecalMapEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(a){this._AmbientTextureEnabled!==a&&(this._AmbientTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(a){this._OpacityTextureEnabled!==a&&(this._OpacityTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(a){this._ReflectionTextureEnabled!==a&&(this._ReflectionTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(a){this._EmissiveTextureEnabled!==a&&(this._EmissiveTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(a){this._SpecularTextureEnabled!==a&&(this._SpecularTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(a){this._BumpTextureEnabled!==a&&(this._BumpTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(a){this._LightmapTextureEnabled!==a&&(this._LightmapTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(a){this._RefractionTextureEnabled!==a&&(this._RefractionTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(a){this._ColorGradingTextureEnabled!==a&&(this._ColorGradingTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(a){this._FresnelEnabled!==a&&(this._FresnelEnabled=a,H.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(a){this._ClearCoatTextureEnabled!==a&&(this._ClearCoatTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(a){this._ClearCoatBumpTextureEnabled!==a&&(this._ClearCoatBumpTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(a){this._ClearCoatTintTextureEnabled!==a&&(this._ClearCoatTintTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(a){this._SheenTextureEnabled!==a&&(this._SheenTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(a){this._AnisotropicTextureEnabled!==a&&(this._AnisotropicTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(a){this._ThicknessTextureEnabled!==a&&(this._ThicknessTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(a){this._RefractionIntensityTextureEnabled!==a&&(this._RefractionIntensityTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(a){this._TranslucencyIntensityTextureEnabled!==a&&(this._TranslucencyIntensityTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(a){this._TranslucencyColorTextureEnabled!==a&&(this._TranslucencyColorTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(a){this._IridescenceTextureEnabled!==a&&(this._IridescenceTextureEnabled=a,H.c.MarkAllMaterialsAsDirty(1))}}b._DiffuseTextureEnabled=!0,b._BaseWeightTextureEnabled=!0,b._BaseDiffuseRoughnessTextureEnabled=!0,b._DetailTextureEnabled=!0,b._DecalMapEnabled=!0,b._AmbientTextureEnabled=!0,b._OpacityTextureEnabled=!0,b._ReflectionTextureEnabled=!0,b._EmissiveTextureEnabled=!0,b._SpecularTextureEnabled=!0,b._BumpTextureEnabled=!0,b._LightmapTextureEnabled=!0,b._RefractionTextureEnabled=!0,b._ColorGradingTextureEnabled=!0,b._FresnelEnabled=!0,b._ClearCoatTextureEnabled=!0,b._ClearCoatBumpTextureEnabled=!0,b._ClearCoatTintTextureEnabled=!0,b._SheenTextureEnabled=!0,b._AnisotropicTextureEnabled=!0,b._ThicknessTextureEnabled=!0,b._RefractionIntensityTextureEnabled=!0,b._TranslucencyIntensityTextureEnabled=!0,b._TranslucencyColorTextureEnabled=!0,b._IridescenceTextureEnabled=!0},12806:(a,O,i)=>{i.d(O,{d:()=>G});var H,b=i(12395);!function(a){a[a.Zero=0]="Zero",a[a.One=1]="One",a[a.MaxViewZ=2]="MaxViewZ"}(H||(H={}));class G{static CreateConfiguration(a){return G._Configurations[a]={defines:{},previousWorldMatrices:{},previousViewProjection:b.Matrix.Zero(),currentViewProjection:b.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},G._Configurations[a]}static DeleteConfiguration(a){delete G._Configurations[a]}static GetConfiguration(a){return G._Configurations[a]}static AddUniformsAndSamplers(a,O){a.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(a,O){for(const i of O)if(i.Mb)for(const O of i.Mb)O._removeDrawWrapper(a)}static PrepareDefines(a,O,i){if(!i._arePrePassDirty)return;const H=G._Configurations[a];if(!H)return;i.PREPASS=!0,i.PREPASS_COLOR=!1,i.PREPASS_COLOR_INDEX=-1;let b=0;for(let q=0;q<G.GeometryTextureDescriptions.length;q++){const a=G.GeometryTextureDescriptions[q],O=a.define,Q=a.defineIndex,k=H.defines[Q];void 0!==k?(i[O]=!0,i[Q]=k,b++):(i[O]=!1,delete i[Q])}i.SCENE_MRT_COUNT=b,i.BONES_VELOCITY_ENABLED=O.useBones&&O.computeBonesUsingShaders&&O.skeleton&&!O.skeleton.isUsingTextureForMatrices&&-1===H.excludedSkinnedMesh.indexOf(O)}static Bind(a,O,i,H,b){const q=G._Configurations[a];if(!q)return;const Q=i.Ua(),k=Q.getEngine();if(q.reverseCulling&&k.setStateCullFaceType(Q._mirroredCameraPosition?b.cullBackFaces:!b.cullBackFaces),(void 0!==q.defines.PREPASS_VELOCITY_INDEX||void 0!==q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(q.previousWorldMatrices[i.uniqueId]||(q.previousWorldMatrices[i.uniqueId]=H.clone()),q.previousViewProjection||(q.previousViewProjection=Q.getTransformMatrix().clone(),q.currentViewProjection=Q.getTransformMatrix().clone()),q.currentViewProjection.updateFlag!==Q.getTransformMatrix().updateFlag?(q.lastUpdateFrameId=k.frameId,q.previousViewProjection.q(q.currentViewProjection),q.currentViewProjection.q(Q.getTransformMatrix())):q.lastUpdateFrameId!==k.frameId&&(q.lastUpdateFrameId=k.frameId,q.previousViewProjection.q(q.currentViewProjection)),O.setMatrix("previousWorld",q.previousWorldMatrices[i.uniqueId]),O.setMatrix("previousViewProjection",q.previousViewProjection),q.previousWorldMatrices[i.uniqueId]=H.clone(),i.useBones&&i.computeBonesUsingShaders&&i.skeleton)){const a=i.skeleton;if(!a.isUsingTextureForMatrices||-1===O.getUniformIndex("boneTextureWidth")){const H=a.getTransformMatrices(i);H&&(q.previousBones[i.uniqueId]||(q.previousBones[i.uniqueId]=H.slice()),O.setMatrices("mPreviousBones",q.previousBones[i.uniqueId]),q.previousBones[i.uniqueId].set(H))}}}}G.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],G._Configurations={}},12802:(a,O,i)=>{i.d(O,{b:()=>J});var H=i(12375),b=i(12384),G=i(12730),q=i(12236),Q=i(12256),k=i(12287);const I=new RegExp("^([gimus]+)!");class P{constructor(a){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=a,this._scene=a.Ua(),this._engine=this._scene.getEngine()}_addPlugin(a){for(let H=0;H<this._plugins.length;++H)if(this._plugins[H].name===a.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!a.isCompatible(this._material.shaderLanguage))throw`The plugin "${a.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const O=a.getClassName();P._MaterialPluginClassToMainDefine[O]||(P._MaterialPluginClassToMainDefine[O]="MATERIALPLUGIN_"+ ++P._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(a,O)=>this._handlePluginEvent(a,O),this._plugins.push(a),this._plugins.sort(((a,O)=>a.priority-O.priority)),this._codeInjectionPoints={};const i={};i[P._MaterialPluginClassToMainDefine[O]]={type:"boolean",default:!0};for(const H of this._plugins)H.collectDefines(i),this._collectPointNames("vertex",H.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",H.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=i,!0}_activatePlugin(a){-1===this._activePlugins.indexOf(a)&&(this._activePlugins.push(a),this._activePlugins.sort(((a,O)=>a.priority-O.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),a.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(a),this._activePluginsForExtraEvents.sort(((a,O)=>a.priority-O.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(a){for(let O=0;O<this._plugins.length;++O)if(this._plugins[O].name===a)return this._plugins[O];return null}_handlePluginEventIsReadyForSubMesh(a){let O=!0;for(const i of this._activePlugins)O=O&&i.isReadyForSubMesh(a.defines,this._scene,this._engine,a.subMesh);a.isReadyForSubMesh=O}_handlePluginEventPrepareDefinesBeforeAttributes(a){for(const O of this._activePlugins)O.prepareDefinesBeforeAttributes(a.defines,this._scene,a.mesh)}_handlePluginEventPrepareDefines(a){for(const O of this._activePlugins)O.prepareDefines(a.defines,this._scene,a.mesh)}_handlePluginEventHardBindForSubMesh(a){for(const O of this._activePluginsForExtraEvents)O.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,a.subMesh)}_handlePluginEventBindForSubMesh(a){for(const O of this._activePlugins)O.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,a.subMesh)}_handlePluginEventHasRenderTargetTextures(a){let O=!1;for(const i of this._activePluginsForExtraEvents)if(O=i.hasRenderTargetTextures(),O)break;a.hasRenderTargetTextures=O}_handlePluginEventFillRenderTargetTextures(a){for(const O of this._activePluginsForExtraEvents)O.fillRenderTargetTextures(a.renderTargets)}_handlePluginEvent(a,O){switch(a){case 512:{const a=O;for(const O of this._activePlugins)O.getActiveTextures(a.activeTextures);break}case 256:{const a=O;for(const O of this._activePlugins)O.getAnimatables(a.animatables);break}case 1024:{const a=O;let i=!1;for(const O of this._activePlugins)if(i=O.hasTexture(a.texture),i)break;a.hasTexture=i;break}case 2:{const a=O;for(const O of this._plugins)O.dispose(a.forceDisposeTextures);break}case 4:O.defineNames=this._defineNamesFromPlugins;break;case 128:{const a=O;for(const O of this._activePlugins)a.fallbackRank=O.addFallbacks(a.defines,a.fallbacks,a.fallbackRank),O.getAttributes(a.attributes,this._scene,a.mesh);this._uniformList.length>0&&a.uniforms.push(...this._uniformList),this._samplerList.length>0&&a.samplers.push(...this._samplerList),this._uboList.length>0&&a.uniformBuffersNames.push(...this._uboList),a.customCode=this._injectCustomCode(a,a.customCode);break}case 8:{const a=O;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const i=1===this._material.shaderLanguage;for(const O of this._plugins){const H=O.getUniforms(this._material.shaderLanguage);if(H){if(H.ubo)for(const O of H.ubo){if(O.size&&O.type){const H=O.arraySize??0;if(a.ubo.addUniform(O.name,O.size,H),i){let a;switch(O.type){case"mat4":a="mat4x4f";break;case"float":a="f32";break;default:a=`${O.type}f`}this._uboDeclaration+=H>0?`uniform ${O.name}: array<${a}, ${H}>;\n`:`uniform ${O.name}: ${a};\n`}else this._uboDeclaration+=`${O.type} ${O.name}${H>0?`[${H}]`:""};\n`}this._uniformList.push(O.name)}H.vertex&&(this._vertexDeclaration+=H.vertex+"\n"),H.fragment&&(this._fragmentDeclaration+=H.fragment+"\n")}O.getSamplers(this._samplerList),O.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(a,O){if(O)for(const i in O)this._codeInjectionPoints[a]||(this._codeInjectionPoints[a]={}),this._codeInjectionPoints[a][i]=!0}_injectCustomCode(a,O){return(i,H)=>{var b;O&&(H=O(i,H)),this._uboDeclaration&&(H=H.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(H=H.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(H=H.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const G=null===(b=this._codeInjectionPoints)||void 0===b?void 0:b[i];if(!G)return H;let q=null;for(let O in G){let b="";for(const H of this._activePlugins){var P;let G=null===(P=H.getCustomCode(i,this._material.shaderLanguage))||void 0===P?void 0:P[O];if(G){if(H.resolveIncludes){if(null===q){const O=0;q={defines:[],indexParameters:a.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:k.c.GetShadersRepository(O),includesShadersStore:k.c.GetIncludesShadersStore(O),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,qb:this._engine.qb,processCodeAfterIncludes:void 0}}q.isFragment="fragment"===i,(0,Q.h)(G,q,(a=>G=a))}b+=G+"\n"}}if(b.length>0)if("!"===O.charAt(0)){O=O.substring(1);let a="g";if("!"===O.charAt(0))a="",O=O.substring(1);else{const i=I.exec(O);i&&i.length>=2&&(a=i[1],O=O.substring(a.length+1))}a.indexOf("g")<0&&(a+="g");const i=H,G=new RegExp(O,a);let q=G.exec(i);for(;null!==q;){let a=b;for(let O=0;O<q.length;++O)a=a.replace("$"+O,q[O]);H=H.replace(q[0],a),q=G.exec(i)}}else{const a="#define "+O;H=H.replace(a,"\n"+b+"\n"+a)}}return H}}}P._MaterialPluginClassToMainDefine={},P._MaterialPluginCounter=0,q.b.OnEnginesDisposedObservable.add((()=>{Z()}));const e=[];let h=!1,j=null;function Z(){e.length=0,h=!1,G.b.OnEventObservable.remove(j),j=null}var F=i(12427),r=i(12346);class J{isCompatible(a){return 0===a}_enable(a){a&&this._pluginManager._activatePlugin(this)}constructor(a,O,i,H){let b=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=a,this.name=O,this.priority=i,this.resolveIncludes=q,a.pluginManager||(a.pluginManager=new P(a),a.Pb.add((()=>{a.pluginManager=void 0}))),this._pluginDefineNames=H,this._pluginManager=a.pluginManager,b&&this._pluginManager._addPlugin(this),G&&this._enable(!0),this.markAllDefinesAsDirty=a._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(a,O,i,H){return!0}hardBindForSubMesh(a,O,i,H){}bindForSubMesh(a,O,i,H){}dispose(a){}getCustomCode(a){return null}collectDefines(a){if(this._pluginDefineNames)for(const O of Object.keys(this._pluginDefineNames)){if("_"===O[0])continue;const i=typeof this._pluginDefineNames[O];a[O]={type:"number"===i?"number":"string"===i?"string":"boolean"===i?"boolean":"object",default:this._pluginDefineNames[O]}}}prepareDefinesBeforeAttributes(a,O,i){}prepareDefines(a,O,i){}hasTexture(a){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(a){}getActiveTextures(a){}getAnimatables(a){}addFallbacks(a,O,i){return i}getSamplers(a){}getAttributes(a,O,i){}getUniformBuffersNames(a){}getUniforms(){return{}}copyTo(a){F.d.Clone((()=>a),this)}serialize(){return F.d.Serialize(this)}parse(a,O,i){F.d.Parse((()=>this),a,O,i)}}(0,H.c)([(0,b.G)()],J.prototype,"name",void 0),(0,H.c)([(0,b.G)()],J.prototype,"priority",void 0),(0,H.c)([(0,b.G)()],J.prototype,"resolveIncludes",void 0),(0,H.c)([(0,b.G)()],J.prototype,"registerForExtraEvents",void 0),(0,r.h)("BABYLON.MaterialPluginBase",J)},12780:(a,O,i)=>{i.d(O,{b:()=>H});class H{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(a){a.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(a){}bindForSubMesh(a,O,i,H,b){if(O.prePassRenderer&&O.prePassRenderer.enabled&&O.prePassRenderer.currentRTisSceneRT&&(-1!==O.prePassRenderer.getIndex(2)||-1!==O.prePassRenderer.getIndex(11))){this.previousWorldMatrices[i.uniqueId]||(this.previousWorldMatrices[i.uniqueId]=H.clone()),this.previousViewProjection||(this.previousViewProjection=O.getTransformMatrix().clone(),this.currentViewProjection=O.getTransformMatrix().clone());const b=O.getEngine();this.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=b.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(O.getTransformMatrix())):this._lastUpdateFrameId!==b.frameId&&(this._lastUpdateFrameId=b.frameId,this.previousViewProjection.q(this.currentViewProjection)),a.setMatrix("previousWorld",this.previousWorldMatrices[i.uniqueId]),a.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[i.uniqueId]=H.clone()}}}},12777:(a,O,i)=>{i.d(O,{JO:()=>w});var H=i(12375),b=i(12384),G=i(12492),q=i(12648),Q=i(12436),k=i(12470),I=i(12780),P=i(12654),e=i(12730),h=i(12783),j=i(12726),Z=i(12370),F=i(12346),r=i(12790),J=i(12722),ma=i(12798),M=i(12773),C=i(12771),n=i(12427),D=i(12806);const U={effect:null,subMesh:null};class y extends h.d{constructor(a){super(a),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(a){const O=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const i of O)this[i]=i===a}}class w extends j.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(a){this._attachImageProcessingConfiguration(a),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(a){a!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=a||this.Ua().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(a){this.imageProcessingConfiguration.colorCurvesEnabled=a}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(a){this.imageProcessingConfiguration.colorGradingEnabled=a}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(a){this._imageProcessingConfiguration.toneMappingEnabled=a}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(a){this._imageProcessingConfiguration.exposure=a}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(a){this._imageProcessingConfiguration.contrast=a}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(a){this._imageProcessingConfiguration.colorGradingTexture=a}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(a){this._imageProcessingConfiguration.colorCurves=a}get canRenderToMRT(){return!0}constructor(a,O){super(a,O,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||w.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new Q.mi(0,0,0),this.diffuseColor=new Q.mi(1,1,1),this.specularColor=new Q.mi(1,1,1),this.emissiveColor=new Q.mi(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new G.f(16),this._globalAmbientColor=new Q.mi(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new ma.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new I.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),w.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),w.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(w.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(w.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"JO"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===e.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.nb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==e.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.nb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(a,O){let H=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const b=O._drawWrapper;if(b.effect&&this.isFrozen&&b._wasPreviouslyReady&&b._wasPreviouslyUsingInstances===H)return!0;O.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),O.materialDefines=new y(this._eventInfo.defineNames));const G=this.Ua(),q=O.materialDefines;if(this._isReadyForSubMesh(O))return!0;const Q=G.getEngine();q._needNormals=(0,C.N)(G,a,q,!0,this._maxSimultaneousLights,this._disableLighting),(0,C.S)(G,q);const e=this.needAlphaBlendingForMesh(a)&&this.Ua().useOrderIndependentTransparency;if((0,C.V)(G,q,this.canRenderToMRT&&!e),(0,C.U)(G,q,e),D.d.PrepareDefines(Q.currentRenderPassId,a,q),q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,q._needUVs=!1;for(let a=1;a<=6;++a)q["MAINUV"+a]=!1;if(G.texturesEnabled){if(q.DIFFUSEDIRECTUV=0,q.BUMPDIRECTUV=0,q.AMBIENTDIRECTUV=0,q.OPACITYDIRECTUV=0,q.EMISSIVEDIRECTUV=0,q.SPECULARDIRECTUV=0,q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&w.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._diffuseTexture,q,"DIFFUSE")}else q.DIFFUSE=!1;if(this._ambientTexture&&w.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._ambientTexture,q,"AMBIENT")}else q.AMBIENT=!1;if(this._opacityTexture&&w.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._opacityTexture,q,"OPACITY"),q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else q.OPACITY=!1;if(this._reflectionTexture&&w.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(q._needNormals=!0,q.REFLECTION=!0,q.ROUGHNESS=this._roughness>0,q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Z.e.INVCUBIC_MODE,q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,q.REFLECTIONMAP_OPPOSITEZ=q.REFLECTIONMAP_3D&&this.Ua().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Z.e.EXPLICIT_MODE:q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Z.e.PLANAR_MODE:q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Z.e.PROJECTION_MODE:q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Z.e.SKYBOX_MODE:q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Z.e.SPHERICAL_MODE:q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Z.e.EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Z.e.FIXED_EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Z.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Z.e.CUBIC_MODE:case Z.e.INVCUBIC_MODE:default:q.setReflectionMode("REFLECTIONMAP_CUBIC")}q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else q.REFLECTION=!1,q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&w.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._emissiveTexture,q,"EMISSIVE")}else q.EMISSIVE=!1;if(this._lightmapTexture&&w.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._lightmapTexture,q,"LIGHTMAP"),q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else q.LIGHTMAP=!1;if(this._specularTexture&&w.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,C.Q)(this._specularTexture,q,"SPECULAR"),q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else q.SPECULAR=!1;if(G.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&w.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,C.Q)(this._bumpTexture,q,"BUMP"),q.PARALLAX=this._useParallax,q.PARALLAX_RHS=G.useRightHandedSystem,q.PARALLAXOCCLUSION=this._useParallaxOcclusion,q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else q.BUMP=!1,q.PARALLAX=!1,q.PARALLAX_RHS=!1,q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&w.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;q._needUVs=!0,q.REFRACTION=!0,q.REFRACTIONMAP_3D=this._refractionTexture.isCube,q.RGBDREFRACTION=this._refractionTexture.isRGBD,q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else q.REFRACTION=!1;q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else q.DIFFUSE=!1,q.AMBIENT=!1,q.OPACITY=!1,q.REFLECTION=!1,q.EMISSIVE=!1,q.LIGHTMAP=!1,q.BUMP=!1,q.REFRACTION=!1;q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,q.SPECULAROVERALPHA=this._useSpecularOverAlpha,q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(a)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=q,this._eventInfo.subMesh=O,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(q),q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(q._areFresnelDirty&&(w.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,q._needNormals=!0,q.FRESNEL=!0):q.FRESNEL=!1),q.AREALIGHTUSED)for(let i=0;i<a.lightSources.length;i++)if(!a.lightSources[i]._isReady())return!1;(0,C.R)(a,G,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(a),q,this._applyDecalMapAfterDetailMap),(0,C.L)(G,Q,this,q,H,null,O.getRenderingMesh().hasThinInstances),this._eventInfo.defines=q,this._eventInfo.mesh=a,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,C.H)(a,q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let h=!1;if(q.isDirty){const H=q._areLightsDisposed;q.markAsProcessed();const b=new J.c;q.REFLECTION&&b.addFallback(0,"REFLECTION"),q.SPECULAR&&b.addFallback(0,"SPECULAR"),q.BUMP&&b.addFallback(0,"BUMP"),q.PARALLAX&&b.addFallback(1,"PARALLAX"),q.PARALLAX_RHS&&b.addFallback(1,"PARALLAX_RHS"),q.PARALLAXOCCLUSION&&b.addFallback(0,"PARALLAXOCCLUSION"),q.SPECULAROVERALPHA&&b.addFallback(0,"SPECULAROVERALPHA"),q.FOG&&b.addFallback(1,"FOG"),q.POINTSIZE&&b.addFallback(0,"POINTSIZE"),q.LOGARITHMICDEPTH&&b.addFallback(0,"LOGARITHMICDEPTH"),(0,C.s)(q,b,this._maxSimultaneousLights),q.SPECULARTERM&&b.addFallback(0,"SPECULARTERM"),q.DIFFUSEFRESNEL&&b.addFallback(1,"DIFFUSEFRESNEL"),q.OPACITYFRESNEL&&b.addFallback(2,"OPACITYFRESNEL"),q.REFLECTIONFRESNEL&&b.addFallback(3,"REFLECTIONFRESNEL"),q.EMISSIVEFRESNEL&&b.addFallback(4,"EMISSIVEFRESNEL"),q.FRESNEL&&b.addFallback(4,"FRESNEL"),q.MULTIVIEW&&b.addFallback(0,"MULTIVIEW");const e=[k.c.PositionKind];q.NORMAL&&e.push(k.c.NormalKind),q.TANGENT&&e.push(k.c.TangentKind);for(let a=1;a<=6;++a)q["UV"+a]&&e.push(`uv${1===a?"":a}`);q.VERTEXCOLOR&&e.push(k.c.ColorKind),(0,C.w)(e,a,q,b),(0,C.x)(e,q),(0,C.A)(e,a,q),(0,C.v)(e,a,q);let j="default";const Z=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],F=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],r=["Material","Scene","Mesh"],ma={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=b,this._eventInfo.fallbackRank=0,this._eventInfo.defines=q,this._eventInfo.uniforms=Z,this._eventInfo.attributes=e,this._eventInfo.samplers=F,this._eventInfo.uniformBuffersNames=r,this._eventInfo.customCode=void 0,this._eventInfo.mesh=a,this._eventInfo.indexParameters=ma,this._callbackPluginEventGeneric(128,this._eventInfo),D.d.AddUniformsAndSamplers(Z,F),I.b.AddUniforms(Z),I.b.AddSamplers(F),P.b&&(P.b.PrepareUniforms(Z,q),P.b.PrepareSamplers(F,q)),(0,C.W)({uniformsNames:Z,uniformBuffersNames:r,samplers:F,defines:q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,M.d)(Z);const n={};this.customShaderNameResolve&&(j=this.customShaderNameResolve(j,Z,r,F,q,e,n));const y=q.toString(),w=O.effect;let K=G.getEngine().createEffect(j,{attributes:e,uniformsNames:Z,uniformBuffersNames:r,samplers:F,defines:y,fallbacks:b,onCompiled:this.onCompiled,onError:this.onError,indexParameters:ma,processFinalCode:n.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([i.e(41),i.e(64)]).then(i.bind(i,14960)),Promise.all([i.e(39),i.e(65)]).then(i.bind(i,15099))]):await Promise.all([Promise.all([i.e(34),i.e(67)]).then(i.bind(i,15173)),Promise.all([i.e(33),i.e(68)]).then(i.bind(i,15352))]),this._shadersLoaded=!0}},Q);if(this._eventInfo.customCode=void 0,K)if(this._onEffectCreatedObservable&&(U.effect=K,U.subMesh=O,this._onEffectCreatedObservable.notifyObservers(U)),this.allowShaderHotSwapping&&w&&!K.isReady()){if(K=w,q.markAsUnprocessed(),h=this.isFrozen,H)return q._areLightsDisposed=!0,!1}else G.resetCachedMaterial(),O.setEffect(K,q,this._materialContext)}return!(!O.effect||!O.effect.isReady())&&(q._renderId=G.getRenderId(),b._wasPreviouslyReady=!h,b._wasPreviouslyUsingInstances=H,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const a=this._uniformBuffer;a.addUniform("diffuseLeftColor",4),a.addUniform("diffuseRightColor",4),a.addUniform("opacityParts",4),a.addUniform("reflectionLeftColor",4),a.addUniform("reflectionRightColor",4),a.addUniform("refractionLeftColor",4),a.addUniform("refractionRightColor",4),a.addUniform("emissiveLeftColor",4),a.addUniform("emissiveRightColor",4),a.addUniform("vDiffuseInfos",2),a.addUniform("vAmbientInfos",2),a.addUniform("vOpacityInfos",2),a.addUniform("vReflectionInfos",2),a.addUniform("vReflectionPosition",3),a.addUniform("vReflectionSize",3),a.addUniform("vEmissiveInfos",2),a.addUniform("vLightmapInfos",2),a.addUniform("vSpecularInfos",2),a.addUniform("vBumpInfos",3),a.addUniform("diffuseMatrix",16),a.addUniform("ambientMatrix",16),a.addUniform("opacityMatrix",16),a.addUniform("reflectionMatrix",16),a.addUniform("emissiveMatrix",16),a.addUniform("lightmapMatrix",16),a.addUniform("specularMatrix",16),a.addUniform("bumpMatrix",16),a.addUniform("vTangentSpaceParams",2),a.addUniform("pointSize",1),a.addUniform("alphaCutOff",1),a.addUniform("refractionMatrix",16),a.addUniform("vRefractionInfos",4),a.addUniform("vRefractionPosition",3),a.addUniform("vRefractionSize",3),a.addUniform("vSpecularColor",4),a.addUniform("vEmissiveColor",3),a.addUniform("vDiffuseColor",4),a.addUniform("vAmbientColor",3),a.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(a,O,i){const H=this.Ua(),b=i.materialDefines;if(!b)return;const G=i.effect;if(!G)return;this._activeEffect=G,O.getMeshUniformBuffer().bindToEffect(G,"Mesh"),O.transferToEffect(a),this._uniformBuffer.bindToEffect(G,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,H,O,a,this.isFrozen),D.d.Bind(H.getEngine().currentRenderPassId,this._activeEffect,O,a,this);const k=H.activeCamera;k?this._uniformBuffer.updateFloat4("cameraInfo",k.Db,k.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=i,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),b.OBJECTSPACE_NORMALMAP&&(a.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const I=this._mustRebind(H,G,i,O.visibility);(0,C.b)(O,G);const P=this._uniformBuffer;if(I){if(this.bindViewProjection(G),!P.useUbo||!this.isFrozen||!P.isSync||i._drawWrapper._forceRebindOnNextCall){if(w.FresnelEnabled&&b.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(P.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),P.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&P.updateColor4("opacityParts",new Q.mi(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(P.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),P.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(P.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),P.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(P.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),P.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),H.texturesEnabled){if(this._diffuseTexture&&w.DiffuseTextureEnabled&&(P.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,C.o)(this._diffuseTexture,P,"diffuse")),this._ambientTexture&&w.AmbientTextureEnabled&&(P.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,C.o)(this._ambientTexture,P,"ambient")),this._opacityTexture&&w.OpacityTextureEnabled&&(P.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,C.o)(this._opacityTexture,P,"opacity")),this._hasAlphaChannel()&&P.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&w.ReflectionTextureEnabled){if(P.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),P.Ub("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const a=this._reflectionTexture;P.updateVector3("vReflectionPosition",a.boundingBoxPosition),P.updateVector3("vReflectionSize",a.boundingBoxSize)}}else P.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&w.EmissiveTextureEnabled&&(P.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,C.o)(this._emissiveTexture,P,"emissive")),this._lightmapTexture&&w.LightmapTextureEnabled&&(P.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,C.o)(this._lightmapTexture,P,"lightmap")),this._specularTexture&&w.SpecularTextureEnabled&&(P.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,C.o)(this._specularTexture,P,"specular")),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&w.BumpTextureEnabled&&(P.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,C.o)(this._bumpTexture,P,"bump"),H._mirroredCameraPosition?P.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):P.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&w.RefractionTextureEnabled){let a=1;if(this._refractionTexture.isCube||(P.Ub("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(a=this._refractionTexture.depth)),P.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,a,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const a=this._refractionTexture;P.updateVector3("vRefractionPosition",a.boundingBoxPosition),P.updateVector3("vRefractionSize",a.boundingBoxSize)}}}this.pointsCloud&&P.updateFloat("pointSize",this.pointSize),P.updateColor4("vSpecularColor",this.specularColor,this.specularPower),P.updateColor3("vEmissiveColor",w.EmissiveTextureEnabled?this.emissiveColor:Q.mi.BlackReadOnly),P.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),H.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),P.updateColor3("vAmbientColor",this._globalAmbientColor)}H.texturesEnabled&&(this._diffuseTexture&&w.DiffuseTextureEnabled&&G.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&w.AmbientTextureEnabled&&G.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&w.OpacityTextureEnabled&&G.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&w.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?G.setTexture("reflectionCubeSampler",this._reflectionTexture):G.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&w.EmissiveTextureEnabled&&G.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&w.LightmapTextureEnabled&&G.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&w.SpecularTextureEnabled&&G.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&w.BumpTextureEnabled&&G.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&w.RefractionTextureEnabled&&(this._refractionTexture.isCube?G.setTexture("refractionCubeSampler",this._refractionTexture):G.setTexture("refraction2DSampler",this._refractionTexture))),this.Ua().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(O)&&this.Ua().depthPeelingRenderer.bind(G),this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,M.f)(G,this,H),this.bindEyePosition(G)}else H.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(I||!this.isFrozen){var e;if(H.lightsEnabled&&!this._disableLighting&&(0,C.g)(H,O,G,b,this._maxSimultaneousLights),(H.fogEnabled&&O.applyFog&&H.fogMode!==q.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||O.receiveShadows||b.PREPASS)&&this.bindView(G),(0,C.d)(H,O,G),b.NUM_MORPH_INFLUENCERS&&(0,C.j)(O,G),b.BAKED_VERTEX_ANIMATION_TEXTURE)null===(e=O.bakedVertexAnimationManager)||void 0===e||e.bind(G,b.INSTANCES);this.useLogarithmicDepth&&(0,C.h)(b,G,H),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(O,this._activeEffect,i),P.update()}getAnimatables(){const a=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&a.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&a.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&a.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&a.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&a.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&a.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&a.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&a.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&a.push(this._refractionTexture),a}getActiveTextures(){const a=super.getActiveTextures();return this._diffuseTexture&&a.push(this._diffuseTexture),this._ambientTexture&&a.push(this._ambientTexture),this._opacityTexture&&a.push(this._opacityTexture),this._reflectionTexture&&a.push(this._reflectionTexture),this._emissiveTexture&&a.push(this._emissiveTexture),this._specularTexture&&a.push(this._specularTexture),this._bumpTexture&&a.push(this._bumpTexture),this._lightmapTexture&&a.push(this._lightmapTexture),this._refractionTexture&&a.push(this._refractionTexture),a}hasTexture(a){return!!super.hasTexture(a)||(this._diffuseTexture===a||(this._ambientTexture===a||(this._opacityTexture===a||(this._reflectionTexture===a||(this._emissiveTexture===a||(this._specularTexture===a||(this._bumpTexture===a||(this._lightmapTexture===a||this._refractionTexture===a))))))))}dispose(a,O){var i,H,b,G,q,Q,k,I,P;O&&(null===(i=this._diffuseTexture)||void 0===i||i.dispose(),null===(H=this._ambientTexture)||void 0===H||H.dispose(),null===(b=this._opacityTexture)||void 0===b||b.dispose(),null===(G=this._reflectionTexture)||void 0===G||G.dispose(),null===(q=this._emissiveTexture)||void 0===q||q.dispose(),null===(Q=this._specularTexture)||void 0===Q||Q.dispose(),null===(k=this._bumpTexture)||void 0===k||k.dispose(),null===(I=this._lightmapTexture)||void 0===I||I.dispose(),null===(P=this._refractionTexture)||void 0===P||P.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(a,O)}clone(a){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const H=n.d.Clone((()=>new w(a,this.Ua())),this,{cloneTexturesOnlyOnce:O});return H.name=a,H.id=a,this.hb.copyTo(H.hb),this._clonePlugins(H,i),H}static Parse(a,O,i){const H=n.d.Parse((()=>new w(a.name,O)),a,O,i);return a.hb&&H.hb.parse(a.hb,O,i),e.b._ParsePlugins(a,H,O,i),H}static get DiffuseTextureEnabled(){return r.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(a){r.b.DiffuseTextureEnabled=a}static get DetailTextureEnabled(){return r.b.DetailTextureEnabled}static set DetailTextureEnabled(a){r.b.DetailTextureEnabled=a}static get AmbientTextureEnabled(){return r.b.AmbientTextureEnabled}static set AmbientTextureEnabled(a){r.b.AmbientTextureEnabled=a}static get OpacityTextureEnabled(){return r.b.OpacityTextureEnabled}static set OpacityTextureEnabled(a){r.b.OpacityTextureEnabled=a}static get ReflectionTextureEnabled(){return r.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(a){r.b.ReflectionTextureEnabled=a}static get EmissiveTextureEnabled(){return r.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(a){r.b.EmissiveTextureEnabled=a}static get SpecularTextureEnabled(){return r.b.SpecularTextureEnabled}static set SpecularTextureEnabled(a){r.b.SpecularTextureEnabled=a}static get BumpTextureEnabled(){return r.b.BumpTextureEnabled}static set BumpTextureEnabled(a){r.b.BumpTextureEnabled=a}static get LightmapTextureEnabled(){return r.b.LightmapTextureEnabled}static set LightmapTextureEnabled(a){r.b.LightmapTextureEnabled=a}static get RefractionTextureEnabled(){return r.b.RefractionTextureEnabled}static set RefractionTextureEnabled(a){r.b.RefractionTextureEnabled=a}static get ColorGradingTextureEnabled(){return r.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(a){r.b.ColorGradingTextureEnabled=a}static get FresnelEnabled(){return r.b.FresnelEnabled}static set FresnelEnabled(a){r.b.FresnelEnabled=a}}w.ForceGLSL=!1,(0,H.c)([(0,b.z)("diffuseTexture")],w.prototype,"_diffuseTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],w.prototype,"diffuseTexture",void 0),(0,H.c)([(0,b.z)("ambientTexture")],w.prototype,"_ambientTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"ambientTexture",void 0),(0,H.c)([(0,b.z)("opacityTexture")],w.prototype,"_opacityTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],w.prototype,"opacityTexture",void 0),(0,H.c)([(0,b.z)("reflectionTexture")],w.prototype,"_reflectionTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"reflectionTexture",void 0),(0,H.c)([(0,b.z)("emissiveTexture")],w.prototype,"_emissiveTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"emissiveTexture",void 0),(0,H.c)([(0,b.z)("specularTexture")],w.prototype,"_specularTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"specularTexture",void 0),(0,H.c)([(0,b.z)("bumpTexture")],w.prototype,"_bumpTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"bumpTexture",void 0),(0,H.c)([(0,b.z)("lightmapTexture")],w.prototype,"_lightmapTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"lightmapTexture",void 0),(0,H.c)([(0,b.z)("refractionTexture")],w.prototype,"_refractionTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"refractionTexture",void 0),(0,H.c)([(0,b.k)("ambient")],w.prototype,"ambientColor",void 0),(0,H.c)([(0,b.k)("diffuse")],w.prototype,"diffuseColor",void 0),(0,H.c)([(0,b.k)("specular")],w.prototype,"specularColor",void 0),(0,H.c)([(0,b.k)("emissive")],w.prototype,"emissiveColor",void 0),(0,H.c)([(0,b.G)()],w.prototype,"specularPower",void 0),(0,H.c)([(0,b.G)("useAlphaFromDiffuseTexture")],w.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],w.prototype,"useAlphaFromDiffuseTexture",void 0),(0,H.c)([(0,b.G)("useEmissiveAsIllumination")],w.prototype,"_useEmissiveAsIllumination",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useEmissiveAsIllumination",void 0),(0,H.c)([(0,b.G)("linkEmissiveWithDiffuse")],w.prototype,"_linkEmissiveWithDiffuse",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"linkEmissiveWithDiffuse",void 0),(0,H.c)([(0,b.G)("useSpecularOverAlpha")],w.prototype,"_useSpecularOverAlpha",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useSpecularOverAlpha",void 0),(0,H.c)([(0,b.G)("useReflectionOverAlpha")],w.prototype,"_useReflectionOverAlpha",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useReflectionOverAlpha",void 0),(0,H.c)([(0,b.G)("disableLighting")],w.prototype,"_disableLighting",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsLightsDirty")],w.prototype,"disableLighting",void 0),(0,H.c)([(0,b.G)("useObjectSpaceNormalMap")],w.prototype,"_useObjectSpaceNormalMap",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useObjectSpaceNormalMap",void 0),(0,H.c)([(0,b.G)("useParallax")],w.prototype,"_useParallax",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useParallax",void 0),(0,H.c)([(0,b.G)("useParallaxOcclusion")],w.prototype,"_useParallaxOcclusion",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useParallaxOcclusion",void 0),(0,H.c)([(0,b.G)()],w.prototype,"parallaxScaleBias",void 0),(0,H.c)([(0,b.G)("roughness")],w.prototype,"_roughness",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"roughness",void 0),(0,H.c)([(0,b.G)()],w.prototype,"indexOfRefraction",void 0),(0,H.c)([(0,b.G)()],w.prototype,"invertRefractionY",void 0),(0,H.c)([(0,b.G)()],w.prototype,"alphaCutOff",void 0),(0,H.c)([(0,b.G)("useLightmapAsShadowmap")],w.prototype,"_useLightmapAsShadowmap",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useLightmapAsShadowmap",void 0),(0,H.c)([(0,b.o)("diffuseFresnelParameters")],w.prototype,"_diffuseFresnelParameters",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelDirty")],w.prototype,"diffuseFresnelParameters",void 0),(0,H.c)([(0,b.o)("opacityFresnelParameters")],w.prototype,"_opacityFresnelParameters",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],w.prototype,"opacityFresnelParameters",void 0),(0,H.c)([(0,b.o)("reflectionFresnelParameters")],w.prototype,"_reflectionFresnelParameters",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelDirty")],w.prototype,"reflectionFresnelParameters",void 0),(0,H.c)([(0,b.o)("refractionFresnelParameters")],w.prototype,"_refractionFresnelParameters",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelDirty")],w.prototype,"refractionFresnelParameters",void 0),(0,H.c)([(0,b.o)("emissiveFresnelParameters")],w.prototype,"_emissiveFresnelParameters",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelDirty")],w.prototype,"emissiveFresnelParameters",void 0),(0,H.c)([(0,b.G)("useReflectionFresnelFromSpecular")],w.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsFresnelDirty")],w.prototype,"useReflectionFresnelFromSpecular",void 0),(0,H.c)([(0,b.G)("useGlossinessFromSpecularMapAlpha")],w.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,H.c)([(0,b.G)("maxSimultaneousLights")],w.prototype,"_maxSimultaneousLights",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsLightsDirty")],w.prototype,"maxSimultaneousLights",void 0),(0,H.c)([(0,b.G)("invertNormalMapX")],w.prototype,"_invertNormalMapX",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"invertNormalMapX",void 0),(0,H.c)([(0,b.G)("invertNormalMapY")],w.prototype,"_invertNormalMapY",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"invertNormalMapY",void 0),(0,H.c)([(0,b.G)("twoSidedLighting")],w.prototype,"_twoSidedLighting",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsTexturesDirty")],w.prototype,"twoSidedLighting",void 0),(0,H.c)([(0,b.G)("applyDecalMapAfterDetailMap")],w.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,H.c)([(0,b.c)("_markAllSubMeshesAsMiscDirty")],w.prototype,"applyDecalMapAfterDetailMap",void 0),(0,F.h)("BABYLON.StandardMaterial",w),q.c.DefaultMaterialFactory=a=>new w("default material",a)}}]);