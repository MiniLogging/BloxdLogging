"use strict";(self["2fwzcez286e"]=self["2fwzcez286e"]||[]).push([[25],{13374:(B,u,F)=>{F.d(u,{d:()=>Q});var Z=F(12971),V=F(13299),p=F(12973),G=F(13371),R=F(13364),e=F(13377),s=F(13349);class Y extends R.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class Q extends e.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(B){let u=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(B,"DetailMap",140,new Y,u),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=V.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=B._dirtyCallbacks[1]}isReadyForSubMesh(B,u,F){return!this._isEnabled||!(B._areTexturesDirty&&u.texturesEnabled&&F.getCaps().standardDerivatives&&this._texture&&G.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(B,u){if(this._isEnabled){B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const F=u.getEngine();B._areTexturesDirty&&(F.getCaps().standardDerivatives&&this._texture&&G.b.DetailTextureEnabled&&this._isEnabled?((0,s.M)(this._texture,B,"DETAIL"),B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):B.DETAIL=!1)}else B.DETAIL=!1}bindForSubMesh(B,u){if(!this._isEnabled)return;const F=this._material.isFrozen;B.useUbo&&F&&B.isSync||this._texture&&G.b.DetailTextureEnabled&&(B.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,s.p)(this._texture,B,"detail")),u.texturesEnabled&&this._texture&&G.b.DetailTextureEnabled&&B.setTexture("detailSampler",this._texture)}hasTexture(B){return this._texture===B}getActiveTextures(B){this._texture&&B.push(this._texture)}getAnimatables(B){this._texture&&this._texture.animations&&this._texture.animations.length>0&&B.push(this._texture)}dispose(B){var u;B&&(null===(u=this._texture)||void 0===u||u.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(B){B.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Z.d)([(0,p.E)("detailTexture"),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"texture",void 0),(0,Z.d)([(0,p.L)()],Q.prototype,"diffuseBlendLevel",void 0),(0,Z.d)([(0,p.L)()],Q.prototype,"roughnessBlendLevel",void 0),(0,Z.d)([(0,p.L)()],Q.prototype,"bumpLevel",void 0),(0,Z.d)([(0,p.L)(),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"normalBlendMethod",void 0),(0,Z.d)([(0,p.L)(),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"isEnabled",void 0)},13364:(B,u,F)=>{F.d(u,{b:()=>Z});class Z{constructor(B){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=B,B)for(const u in B)Object.prototype.hasOwnProperty.call(B,u)&&this._setDefaultValue(u)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||B,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const B of Object.keys(this))"_"!==B[0]&&this._keys.push(B);if(this._externalProperties)for(const B in this._externalProperties)-1===this._keys.indexOf(B)&&this._keys.push(B)}isEqual(B){if(this._keys.length!==B._keys.length)return!1;for(let u=0;u<this._keys.length;u++){const F=this._keys[u];if(this[F]!==B[F])return!1}return!0}cloneTo(B){this._keys.length!==B._keys.length&&(B._keys=this._keys.slice(0));for(let u=0;u<this._keys.length;u++){const F=this._keys[u];B[F]=this[F]}}reset(){for(const B of this._keys)this._setDefaultValue(B)}_setDefaultValue(B){var u,F,Z,V;const p=(null===(u=this._externalProperties)||void 0===u||null===(F=u[B])||void 0===F?void 0:F.type)??typeof this[B],G=null===(Z=this._externalProperties)||void 0===Z||null===(V=Z[B])||void 0===V?void 0:V.default;switch(p){case"number":this[B]=G??0;break;case"string":this[B]=G??"";break;default:this[B]=G??!1}}toString(){let B="";for(let u=0;u<this._keys.length;u++){const F=this._keys[u],Z=this[F];switch(typeof Z){case"number":case"string":B+="#define "+F+" "+Z+"\n";break;default:Z&&(B+="#define "+F+"\n")}}return B}}},13371:(B,u,F)=>{F.d(u,{b:()=>V});var Z=F(12888);class V{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){this._DiffuseTextureEnabled!==B&&(this._DiffuseTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(B){this._BaseWeightTextureEnabled!==B&&(this._BaseWeightTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(B){this._BaseDiffuseRoughnessTextureEnabled!==B&&(this._BaseDiffuseRoughnessTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(B){this._DetailTextureEnabled!==B&&(this._DetailTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(B){this._DecalMapEnabled!==B&&(this._DecalMapEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(B){this._AmbientTextureEnabled!==B&&(this._AmbientTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(B){this._OpacityTextureEnabled!==B&&(this._OpacityTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){this._ReflectionTextureEnabled!==B&&(this._ReflectionTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){this._EmissiveTextureEnabled!==B&&(this._EmissiveTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(B){this._SpecularTextureEnabled!==B&&(this._SpecularTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(B){this._BumpTextureEnabled!==B&&(this._BumpTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(B){this._LightmapTextureEnabled!==B&&(this._LightmapTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(B){this._RefractionTextureEnabled!==B&&(this._RefractionTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){this._ColorGradingTextureEnabled!==B&&(this._ColorGradingTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(B){this._FresnelEnabled!==B&&(this._FresnelEnabled=B,Z.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(B){this._ClearCoatTextureEnabled!==B&&(this._ClearCoatTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(B){this._ClearCoatBumpTextureEnabled!==B&&(this._ClearCoatBumpTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(B){this._ClearCoatTintTextureEnabled!==B&&(this._ClearCoatTintTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(B){this._SheenTextureEnabled!==B&&(this._SheenTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(B){this._AnisotropicTextureEnabled!==B&&(this._AnisotropicTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(B){this._ThicknessTextureEnabled!==B&&(this._ThicknessTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(B){this._RefractionIntensityTextureEnabled!==B&&(this._RefractionIntensityTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(B){this._TranslucencyIntensityTextureEnabled!==B&&(this._TranslucencyIntensityTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(B){this._TranslucencyColorTextureEnabled!==B&&(this._TranslucencyColorTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(B){this._IridescenceTextureEnabled!==B&&(this._IridescenceTextureEnabled=B,Z.c.MarkAllMaterialsAsDirty(1))}}V._DiffuseTextureEnabled=!0,V._BaseWeightTextureEnabled=!0,V._BaseDiffuseRoughnessTextureEnabled=!0,V._DetailTextureEnabled=!0,V._DecalMapEnabled=!0,V._AmbientTextureEnabled=!0,V._OpacityTextureEnabled=!0,V._ReflectionTextureEnabled=!0,V._EmissiveTextureEnabled=!0,V._SpecularTextureEnabled=!0,V._BumpTextureEnabled=!0,V._LightmapTextureEnabled=!0,V._RefractionTextureEnabled=!0,V._ColorGradingTextureEnabled=!0,V._FresnelEnabled=!0,V._ClearCoatTextureEnabled=!0,V._ClearCoatBumpTextureEnabled=!0,V._ClearCoatTintTextureEnabled=!0,V._SheenTextureEnabled=!0,V._AnisotropicTextureEnabled=!0,V._ThicknessTextureEnabled=!0,V._RefractionIntensityTextureEnabled=!0,V._TranslucencyIntensityTextureEnabled=!0,V._TranslucencyColorTextureEnabled=!0,V._IridescenceTextureEnabled=!0},13379:(B,u,F)=>{F.d(u,{b:()=>p});var Z,V=F(12979);!function(B){B[B.Zero=0]="Zero",B[B.One=1]="One",B[B.MaxViewZ=2]="MaxViewZ"}(Z||(Z={}));class p{static CreateConfiguration(B){return p._Configurations[B]={defines:{},previousWorldMatrices:{},previousViewProjection:V.Matrix.Zero(),currentViewProjection:V.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},p._Configurations[B]}static DeleteConfiguration(B){delete p._Configurations[B]}static GetConfiguration(B){return p._Configurations[B]}static AddUniformsAndSamplers(B,u){B.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(B,u){for(const F of u)if(F.vR)for(const u of F.vR)u._removeDrawWrapper(B)}static PrepareDefines(B,u,F){if(!F._arePrePassDirty)return;const Z=p._Configurations[B];if(!Z)return;F.PREPASS=!0,F.PREPASS_COLOR=!1,F.PREPASS_COLOR_INDEX=-1;let V=0;for(let G=0;G<p.GeometryTextureDescriptions.length;G++){const B=p.GeometryTextureDescriptions[G],u=B.define,R=B.defineIndex,e=Z.defines[R];void 0!==e?(F[u]=!0,F[R]=e,V++):(F[u]=!1,delete F[R])}F.SCENE_MRT_COUNT=V,F.BONES_VELOCITY_ENABLED=u.useBones&&u.computeBonesUsingShaders&&u.skeleton&&!u.skeleton.isUsingTextureForMatrices&&-1===Z.excludedSkinnedMesh.indexOf(u)}static Bind(B,u,F,Z,V){const G=p._Configurations[B];if(!G)return;const R=F.yB(),e=R.getEngine();if(G.reverseCulling&&e.setStateCullFaceType(R._mirroredCameraPosition?V.cullBackFaces:!V.cullBackFaces),(void 0!==G.defines.PREPASS_VELOCITY_INDEX||void 0!==G.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(G.previousWorldMatrices[F.uniqueId]||(G.previousWorldMatrices[F.uniqueId]=Z.clone()),G.previousViewProjection||(G.previousViewProjection=R.getTransformMatrix().clone(),G.currentViewProjection=R.getTransformMatrix().clone()),G.currentViewProjection.updateFlag!==R.getTransformMatrix().updateFlag?(G.lastUpdateFrameId=e.frameId,G.previousViewProjection.Z(G.currentViewProjection),G.currentViewProjection.Z(R.getTransformMatrix())):G.lastUpdateFrameId!==e.frameId&&(G.lastUpdateFrameId=e.frameId,G.previousViewProjection.Z(G.currentViewProjection)),u.setMatrix("previousWorld",G.previousWorldMatrices[F.uniqueId]),u.setMatrix("previousViewProjection",G.previousViewProjection),G.previousWorldMatrices[F.uniqueId]=Z.clone(),F.useBones&&F.computeBonesUsingShaders&&F.skeleton)){const B=F.skeleton;if(!B.isUsingTextureForMatrices||-1===u.getUniformIndex("boneTextureWidth")){const Z=B.getTransformMatrices(F);Z&&(G.previousBones[F.uniqueId]||(G.previousBones[F.uniqueId]=Z.slice()),u.setMatrices("mPreviousBones",G.previousBones[F.uniqueId]),G.previousBones[F.uniqueId].set(Z))}}}}p.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],p._Configurations={}},13377:(B,u,F)=>{F.d(u,{b:()=>W});var Z=F(12971),V=F(12973),p=F(13299),G=F(12855),R=F(12874),e=F(12897);const s=new RegExp("^([gimus]+)!");class Y{constructor(B){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=B,this._scene=B.yB(),this._engine=this._scene.getEngine()}_addPlugin(B){for(let Z=0;Z<this._plugins.length;++Z)if(this._plugins[Z].name===B.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!B.isCompatible(this._material.shaderLanguage))throw`The plugin "${B.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const u=B.getClassName();Y._MaterialPluginClassToMainDefine[u]||(Y._MaterialPluginClassToMainDefine[u]="MATERIALPLUGIN_"+ ++Y._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(B,u)=>this._handlePluginEvent(B,u),this._plugins.push(B),this._plugins.sort(((B,u)=>B.priority-u.priority)),this._codeInjectionPoints={};const F={};F[Y._MaterialPluginClassToMainDefine[u]]={type:"boolean",default:!0};for(const Z of this._plugins)Z.collectDefines(F),this._collectPointNames("vertex",Z.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Z.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=F,!0}_activatePlugin(B){-1===this._activePlugins.indexOf(B)&&(this._activePlugins.push(B),this._activePlugins.sort(((B,u)=>B.priority-u.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),B.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(B),this._activePluginsForExtraEvents.sort(((B,u)=>B.priority-u.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(B){for(let u=0;u<this._plugins.length;++u)if(this._plugins[u].name===B)return this._plugins[u];return null}_handlePluginEventIsReadyForSubMesh(B){let u=!0;for(const F of this._activePlugins)u=u&&F.isReadyForSubMesh(B.defines,this._scene,this._engine,B.subMesh);B.isReadyForSubMesh=u}_handlePluginEventPrepareDefinesBeforeAttributes(B){for(const u of this._activePlugins)u.prepareDefinesBeforeAttributes(B.defines,this._scene,B.mesh)}_handlePluginEventPrepareDefines(B){for(const u of this._activePlugins)u.prepareDefines(B.defines,this._scene,B.mesh)}_handlePluginEventHardBindForSubMesh(B){for(const u of this._activePluginsForExtraEvents)u.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventBindForSubMesh(B){for(const u of this._activePlugins)u.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventHasRenderTargetTextures(B){let u=!1;for(const F of this._activePluginsForExtraEvents)if(u=F.hasRenderTargetTextures(),u)break;B.hasRenderTargetTextures=u}_handlePluginEventFillRenderTargetTextures(B){for(const u of this._activePluginsForExtraEvents)u.fillRenderTargetTextures(B.renderTargets)}_handlePluginEvent(B,u){switch(B){case 512:{const B=u;for(const u of this._activePlugins)u.getActiveTextures(B.activeTextures);break}case 256:{const B=u;for(const u of this._activePlugins)u.getAnimatables(B.animatables);break}case 1024:{const B=u;let F=!1;for(const u of this._activePlugins)if(F=u.hasTexture(B.texture),F)break;B.hasTexture=F;break}case 2:{const B=u;for(const u of this._plugins)u.dispose(B.forceDisposeTextures);break}case 4:u.defineNames=this._defineNamesFromPlugins;break;case 128:{const B=u;for(const u of this._activePlugins)B.fallbackRank=u.addFallbacks(B.defines,B.fallbacks,B.fallbackRank),u.getAttributes(B.attributes,this._scene,B.mesh);this._uniformList.length>0&&B.uniforms.push(...this._uniformList),this._samplerList.length>0&&B.samplers.push(...this._samplerList),this._uboList.length>0&&B.uniformBuffersNames.push(...this._uboList),B.customCode=this._injectCustomCode(B,B.customCode);break}case 8:{const B=u;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const F=1===this._material.shaderLanguage;for(const u of this._plugins){const Z=u.getUniforms(this._material.shaderLanguage);if(Z){if(Z.ubo)for(const u of Z.ubo){if(u.size&&u.type){const Z=u.arraySize??0;if(B.ubo.addUniform(u.name,u.size,Z),F){let B;switch(u.type){case"mat4":B="mat4x4f";break;case"float":B="f32";break;default:B=`${u.type}f`}this._uboDeclaration+=Z>0?`uniform ${u.name}: array<${B}, ${Z}>;\n`:`uniform ${u.name}: ${B};\n`}else this._uboDeclaration+=`${u.type} ${u.name}${Z>0?`[${Z}]`:""};\n`}this._uniformList.push(u.name)}Z.vertex&&(this._vertexDeclaration+=Z.vertex+"\n"),Z.fragment&&(this._fragmentDeclaration+=Z.fragment+"\n")}u.getSamplers(this._samplerList),u.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(B,u){if(u)for(const F in u)this._codeInjectionPoints[B]||(this._codeInjectionPoints[B]={}),this._codeInjectionPoints[B][F]=!0}_injectCustomCode(B,u){return(F,Z)=>{var V;u&&(Z=u(F,Z)),this._uboDeclaration&&(Z=Z.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Z=Z.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Z=Z.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const p=null===(V=this._codeInjectionPoints)||void 0===V?void 0:V[F];if(!p)return Z;let G=null;for(let u in p){let V="";for(const Z of this._activePlugins){var Y;let p=null===(Y=Z.getCustomCode(F,this._material.shaderLanguage))||void 0===Y?void 0:Y[u];if(p){if(Z.resolveIncludes){if(null===G){const u=0;G={defines:[],indexParameters:B.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:e.c.GetShadersRepository(u),includesShadersStore:e.c.GetIncludesShadersStore(u),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,o:this._engine.o,processCodeAfterIncludes:void 0}}G.isFragment="fragment"===F,(0,R.k)(p,G,(B=>p=B))}V+=p+"\n"}}if(V.length>0)if("!"===u.charAt(0)){u=u.substring(1);let B="g";if("!"===u.charAt(0))B="",u=u.substring(1);else{const F=s.exec(u);F&&F.length>=2&&(B=F[1],u=u.substring(B.length+1))}B.indexOf("g")<0&&(B+="g");const F=Z,p=new RegExp(u,B);let G=p.exec(F);for(;null!==G;){let B=V;for(let u=0;u<G.length;++u)B=B.replace("$"+u,G[u]);Z=Z.replace(G[0],B),G=p.exec(F)}}else{const B="#define "+u;Z=Z.replace(B,"\n"+V+"\n"+B)}}return Z}}}Y._MaterialPluginClassToMainDefine={},Y._MaterialPluginCounter=0,G.b.OnEnginesDisposedObservable.add((()=>{D()}));const Q=[];let t=!1,v=null;function D(){Q.length=0,t=!1,p.c.OnEventObservable.remove(v),v=null}var L=F(13014),q=F(12949);class W{isCompatible(B){return 0===B}_enable(B){B&&this._pluginManager._activatePlugin(this)}constructor(B,u,F,Z){let V=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=B,this.name=u,this.priority=F,this.resolveIncludes=G,B.pluginManager||(B.pluginManager=new Y(B),B.GR.add((()=>{B.pluginManager=void 0}))),this._pluginDefineNames=Z,this._pluginManager=B.pluginManager,V&&this._pluginManager._addPlugin(this),p&&this._enable(!0),this.markAllDefinesAsDirty=B._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(B,u,F,Z){return!0}hardBindForSubMesh(B,u,F,Z){}bindForSubMesh(B,u,F,Z){}dispose(B){}getCustomCode(B){return null}collectDefines(B){if(this._pluginDefineNames)for(const u of Object.keys(this._pluginDefineNames)){if("_"===u[0])continue;const F=typeof this._pluginDefineNames[u];B[u]={type:"number"===F?"number":"string"===F?"string":"boolean"===F?"boolean":"object",default:this._pluginDefineNames[u]}}}prepareDefinesBeforeAttributes(B,u,F){}prepareDefines(B,u,F){}hasTexture(B){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(B){}getActiveTextures(B){}getAnimatables(B){}addFallbacks(B,u,F){return F}getSamplers(B){}getAttributes(B,u,F){}getUniformBuffersNames(B){}getUniforms(){return{}}copyTo(B){L.c.Clone((()=>B),this)}serialize(){return L.c.Serialize(this)}parse(B,u,F){L.c.Parse((()=>this),B,u,F)}}(0,Z.d)([(0,V.L)()],W.prototype,"name",void 0),(0,Z.d)([(0,V.L)()],W.prototype,"priority",void 0),(0,Z.d)([(0,V.L)()],W.prototype,"resolveIncludes",void 0),(0,Z.d)([(0,V.L)()],W.prototype,"registerForExtraEvents",void 0),(0,q.f)("BABYLON.MaterialPluginBase",W)},13362:(B,u,F)=>{F.d(u,{b:()=>Z});class Z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(B){B.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(B){}bindForSubMesh(B,u,F,Z,V){if(u.prePassRenderer&&u.prePassRenderer.enabled&&u.prePassRenderer.currentRTisSceneRT&&(-1!==u.prePassRenderer.getIndex(2)||-1!==u.prePassRenderer.getIndex(11))){this.previousWorldMatrices[F.uniqueId]||(this.previousWorldMatrices[F.uniqueId]=Z.clone()),this.previousViewProjection||(this.previousViewProjection=u.getTransformMatrix().clone(),this.currentViewProjection=u.getTransformMatrix().clone());const V=u.getEngine();this.currentViewProjection.updateFlag!==u.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=V.frameId,this.previousViewProjection.Z(this.currentViewProjection),this.currentViewProjection.Z(u.getTransformMatrix())):this._lastUpdateFrameId!==V.frameId&&(this._lastUpdateFrameId=V.frameId,this.previousViewProjection.Z(this.currentViewProjection)),B.setMatrix("previousWorld",this.previousWorldMatrices[F.uniqueId]),B.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[F.uniqueId]=Z.clone()}}}},13359:(B,u,F)=>{F.d(u,{Wu:()=>g});var Z=F(12971),V=F(12973),p=F(13072),G=F(13221),R=F(13023),e=F(13047),s=F(13362),Y=F(13225),Q=F(13299),t=F(13364),v=F(13296),D=F(12969),L=F(12949),q=F(13371),W=F(13291),X=F(13374),f=F(13352),C=F(13349),x=F(13014),U=F(13379);const y={effect:null,subMesh:null};class O extends t.b{constructor(B){super(B),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(B){const u=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const F of u)this[F]=F===B}}class g extends v.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(B){this._attachImageProcessingConfiguration(B),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(B){B!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=B||this.yB().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(B){this.imageProcessingConfiguration.colorCurvesEnabled=B}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(B){this.imageProcessingConfiguration.colorGradingEnabled=B}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(B){this._imageProcessingConfiguration.toneMappingEnabled=B}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(B){this._imageProcessingConfiguration.exposure=B}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(B){this._imageProcessingConfiguration.contrast=B}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(B){this._imageProcessingConfiguration.colorGradingTexture=B}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(B){this._imageProcessingConfiguration.colorCurves=B}get canRenderToMRT(){return!0}constructor(B,u){super(B,u,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||g.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new R.Xu(0,0,0),this.diffuseColor=new R.Xu(1,1,1),this.specularColor=new R.Xu(1,1,1),this.emissiveColor=new R.Xu(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new p.h(16),this._globalAmbientColor=new R.Xu(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new X.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new s.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),g.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),g.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(g.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(g.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Wu"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===Q.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.LR&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==Q.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.LR||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(B,u){let Z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const V=u._drawWrapper;if(V.effect&&this.isFrozen&&V._wasPreviouslyReady&&V._wasPreviouslyUsingInstances===Z)return!0;u.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),u.materialDefines=new O(this._eventInfo.defineNames));const p=this.yB(),G=u.materialDefines;if(this._isReadyForSubMesh(u))return!0;const R=p.getEngine();G._needNormals=(0,C.K)(p,B,G,!0,this._maxSimultaneousLights,this._disableLighting),(0,C.Q)(p,G);const Q=this.needAlphaBlendingForMesh(B)&&this.yB().useOrderIndependentTransparency;if((0,C.V)(p,G,this.canRenderToMRT&&!Q),(0,C.S)(p,G,Q),U.b.PrepareDefines(R.currentRenderPassId,B,G),G._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,G._needUVs=!1;for(let B=1;B<=6;++B)G["MAINUV"+B]=!1;if(p.texturesEnabled){if(G.DIFFUSEDIRECTUV=0,G.BUMPDIRECTUV=0,G.AMBIENTDIRECTUV=0,G.OPACITYDIRECTUV=0,G.EMISSIVEDIRECTUV=0,G.SPECULARDIRECTUV=0,G.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&g.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._diffuseTexture,G,"DIFFUSE")}else G.DIFFUSE=!1;if(this._ambientTexture&&g.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._ambientTexture,G,"AMBIENT")}else G.AMBIENT=!1;if(this._opacityTexture&&g.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._opacityTexture,G,"OPACITY"),G.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else G.OPACITY=!1;if(this._reflectionTexture&&g.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(G._needNormals=!0,G.REFLECTION=!0,G.ROUGHNESS=this._roughness>0,G.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,G.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===D.d.INVCUBIC_MODE,G.REFLECTIONMAP_3D=this._reflectionTexture.isCube,G.REFLECTIONMAP_OPPOSITEZ=G.REFLECTIONMAP_3D&&this.yB().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,G.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case D.d.EXPLICIT_MODE:G.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case D.d.PLANAR_MODE:G.setReflectionMode("REFLECTIONMAP_PLANAR");break;case D.d.PROJECTION_MODE:G.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case D.d.SKYBOX_MODE:G.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case D.d.SPHERICAL_MODE:G.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case D.d.EQUIRECTANGULAR_MODE:G.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case D.d.FIXED_EQUIRECTANGULAR_MODE:G.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case D.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:G.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case D.d.CUBIC_MODE:case D.d.INVCUBIC_MODE:default:G.setReflectionMode("REFLECTIONMAP_CUBIC")}G.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else G.REFLECTION=!1,G.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&g.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._emissiveTexture,G,"EMISSIVE")}else G.EMISSIVE=!1;if(this._lightmapTexture&&g.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._lightmapTexture,G,"LIGHTMAP"),G.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,G.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else G.LIGHTMAP=!1;if(this._specularTexture&&g.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,C.M)(this._specularTexture,G,"SPECULAR"),G.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else G.SPECULAR=!1;if(p.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&g.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,C.M)(this._bumpTexture,G,"BUMP"),G.PARALLAX=this._useParallax,G.PARALLAX_RHS=p.useRightHandedSystem,G.PARALLAXOCCLUSION=this._useParallaxOcclusion,G.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else G.BUMP=!1,G.PARALLAX=!1,G.PARALLAX_RHS=!1,G.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&g.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;G._needUVs=!0,G.REFRACTION=!0,G.REFRACTIONMAP_3D=this._refractionTexture.isCube,G.RGBDREFRACTION=this._refractionTexture.isRGBD,G.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else G.REFRACTION=!1;G.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else G.DIFFUSE=!1,G.AMBIENT=!1,G.OPACITY=!1,G.REFLECTION=!1,G.EMISSIVE=!1,G.LIGHTMAP=!1,G.BUMP=!1,G.REFRACTION=!1;G.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),G.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,G.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,G.SPECULAROVERALPHA=this._useSpecularOverAlpha,G.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,G.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,G.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(B)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=G,this._eventInfo.subMesh=u,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(G._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(G),G.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,G.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(G._areFresnelDirty&&(g.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(G.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,G.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,G.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,G.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,G.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,G.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,G._needNormals=!0,G.FRESNEL=!0):G.FRESNEL=!1),G.AREALIGHTUSED)for(let F=0;F<B.lightSources.length;F++)if(!B.lightSources[F]._isReady())return!1;(0,C.O)(B,p,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(B),G,this._applyDecalMapAfterDetailMap),(0,C.G)(p,R,this,G,Z,null,u.getRenderingMesh().hasThinInstances),this._eventInfo.defines=G,this._eventInfo.mesh=B,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,C.F)(B,G,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let t=!1;if(G.isDirty){const Z=G._areLightsDisposed;G.markAsProcessed();const V=new W.c;G.REFLECTION&&V.addFallback(0,"REFLECTION"),G.SPECULAR&&V.addFallback(0,"SPECULAR"),G.BUMP&&V.addFallback(0,"BUMP"),G.PARALLAX&&V.addFallback(1,"PARALLAX"),G.PARALLAX_RHS&&V.addFallback(1,"PARALLAX_RHS"),G.PARALLAXOCCLUSION&&V.addFallback(0,"PARALLAXOCCLUSION"),G.SPECULAROVERALPHA&&V.addFallback(0,"SPECULAROVERALPHA"),G.FOG&&V.addFallback(1,"FOG"),G.POINTSIZE&&V.addFallback(0,"POINTSIZE"),G.LOGARITHMICDEPTH&&V.addFallback(0,"LOGARITHMICDEPTH"),(0,C.t)(G,V,this._maxSimultaneousLights),G.SPECULARTERM&&V.addFallback(0,"SPECULARTERM"),G.DIFFUSEFRESNEL&&V.addFallback(1,"DIFFUSEFRESNEL"),G.OPACITYFRESNEL&&V.addFallback(2,"OPACITYFRESNEL"),G.REFLECTIONFRESNEL&&V.addFallback(3,"REFLECTIONFRESNEL"),G.EMISSIVEFRESNEL&&V.addFallback(4,"EMISSIVEFRESNEL"),G.FRESNEL&&V.addFallback(4,"FRESNEL"),G.MULTIVIEW&&V.addFallback(0,"MULTIVIEW");const Q=[e.f.PositionKind];G.NORMAL&&Q.push(e.f.NormalKind),G.TANGENT&&Q.push(e.f.TangentKind);for(let B=1;B<=6;++B)G["UV"+B]&&Q.push(`uv${1===B?"":B}`);G.VERTEXCOLOR&&Q.push(e.f.ColorKind),(0,C.y)(Q,B,G,V),(0,C.z)(Q,G),(0,C.A)(Q,B,G),(0,C.x)(Q,B,G);let v="default";const D=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],L=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],q=["Material","Scene","Mesh"],X={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:G.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=V,this._eventInfo.fallbackRank=0,this._eventInfo.defines=G,this._eventInfo.uniforms=D,this._eventInfo.attributes=Q,this._eventInfo.samplers=L,this._eventInfo.uniformBuffersNames=q,this._eventInfo.customCode=void 0,this._eventInfo.mesh=B,this._eventInfo.indexParameters=X,this._callbackPluginEventGeneric(128,this._eventInfo),U.b.AddUniformsAndSamplers(D,L),s.b.AddUniforms(D),s.b.AddSamplers(L),Y.d&&(Y.d.PrepareUniforms(D,G),Y.d.PrepareSamplers(L,G)),(0,C.Y)({uniformsNames:D,uniformBuffersNames:q,samplers:L,defines:G,maxSimultaneousLights:this._maxSimultaneousLights}),(0,f.c)(D);const x={};this.customShaderNameResolve&&(v=this.customShaderNameResolve(v,D,q,L,G,Q,x));const O=G.toString(),g=u.effect;let J=p.getEngine().createEffect(v,{attributes:Q,uniformsNames:D,uniformBuffersNames:q,samplers:L,defines:O,fallbacks:V,onCompiled:this.onCompiled,onError:this.onError,indexParameters:X,processFinalCode:x.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:G.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([F.e(41),F.e(64)]).then(F.bind(F,15579)),Promise.all([F.e(39),F.e(65)]).then(F.bind(F,15716))]):await Promise.all([Promise.all([F.e(34),F.e(67)]).then(F.bind(F,15804)),Promise.all([F.e(33),F.e(68)]).then(F.bind(F,15953))]),this._shadersLoaded=!0}},R);if(this._eventInfo.customCode=void 0,J)if(this._onEffectCreatedObservable&&(y.effect=J,y.subMesh=u,this._onEffectCreatedObservable.notifyObservers(y)),this.allowShaderHotSwapping&&g&&!J.isReady()){if(J=g,G.markAsUnprocessed(),t=this.isFrozen,Z)return G._areLightsDisposed=!0,!1}else p.resetCachedMaterial(),u.setEffect(J,G,this._materialContext)}return!(!u.effect||!u.effect.isReady())&&(G._renderId=p.getRenderId(),V._wasPreviouslyReady=!t,V._wasPreviouslyUsingInstances=Z,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const B=this._uniformBuffer;B.addUniform("diffuseLeftColor",4),B.addUniform("diffuseRightColor",4),B.addUniform("opacityParts",4),B.addUniform("reflectionLeftColor",4),B.addUniform("reflectionRightColor",4),B.addUniform("refractionLeftColor",4),B.addUniform("refractionRightColor",4),B.addUniform("emissiveLeftColor",4),B.addUniform("emissiveRightColor",4),B.addUniform("vDiffuseInfos",2),B.addUniform("vAmbientInfos",2),B.addUniform("vOpacityInfos",2),B.addUniform("vReflectionInfos",2),B.addUniform("vReflectionPosition",3),B.addUniform("vReflectionSize",3),B.addUniform("vEmissiveInfos",2),B.addUniform("vLightmapInfos",2),B.addUniform("vSpecularInfos",2),B.addUniform("vBumpInfos",3),B.addUniform("diffuseMatrix",16),B.addUniform("ambientMatrix",16),B.addUniform("opacityMatrix",16),B.addUniform("reflectionMatrix",16),B.addUniform("emissiveMatrix",16),B.addUniform("lightmapMatrix",16),B.addUniform("specularMatrix",16),B.addUniform("bumpMatrix",16),B.addUniform("vTangentSpaceParams",2),B.addUniform("pointSize",1),B.addUniform("alphaCutOff",1),B.addUniform("refractionMatrix",16),B.addUniform("vRefractionInfos",4),B.addUniform("vRefractionPosition",3),B.addUniform("vRefractionSize",3),B.addUniform("vSpecularColor",4),B.addUniform("vEmissiveColor",3),B.addUniform("vDiffuseColor",4),B.addUniform("vAmbientColor",3),B.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(B,u,F){const Z=this.yB(),V=F.materialDefines;if(!V)return;const p=F.effect;if(!p)return;this._activeEffect=p,u.getMeshUniformBuffer().bindToEffect(p,"Mesh"),u.transferToEffect(B),this._uniformBuffer.bindToEffect(p,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Z,u,B,this.isFrozen),U.b.Bind(Z.getEngine().currentRenderPassId,this._activeEffect,u,B,this);const e=Z.activeCamera;e?this._uniformBuffer.updateFloat4("cameraInfo",e.qR,e.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=F,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),V.OBJECTSPACE_NORMALMAP&&(B.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const s=this._mustRebind(Z,p,F,u.visibility);(0,C.c)(u,p);const Y=this._uniformBuffer;if(s){if(this.bindViewProjection(p),!Y.useUbo||!this.isFrozen||!Y.isSync||F._drawWrapper._forceRebindOnNextCall){if(g.FresnelEnabled&&V.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(Y.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),Y.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&Y.updateColor4("opacityParts",new R.Xu(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(Y.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),Y.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(Y.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),Y.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(Y.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),Y.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Z.texturesEnabled){if(this._diffuseTexture&&g.DiffuseTextureEnabled&&(Y.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,C.p)(this._diffuseTexture,Y,"diffuse")),this._ambientTexture&&g.AmbientTextureEnabled&&(Y.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,C.p)(this._ambientTexture,Y,"ambient")),this._opacityTexture&&g.OpacityTextureEnabled&&(Y.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,C.p)(this._opacityTexture,Y,"opacity")),this._hasAlphaChannel()&&Y.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&g.ReflectionTextureEnabled){if(Y.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),Y.WR("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const B=this._reflectionTexture;Y.updateVector3("vReflectionPosition",B.boundingBoxPosition),Y.updateVector3("vReflectionSize",B.boundingBoxSize)}}else Y.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&g.EmissiveTextureEnabled&&(Y.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,C.p)(this._emissiveTexture,Y,"emissive")),this._lightmapTexture&&g.LightmapTextureEnabled&&(Y.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,C.p)(this._lightmapTexture,Y,"lightmap")),this._specularTexture&&g.SpecularTextureEnabled&&(Y.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,C.p)(this._specularTexture,Y,"specular")),this._bumpTexture&&Z.getEngine().getCaps().standardDerivatives&&g.BumpTextureEnabled&&(Y.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,C.p)(this._bumpTexture,Y,"bump"),Z._mirroredCameraPosition?Y.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):Y.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&g.RefractionTextureEnabled){let B=1;if(this._refractionTexture.isCube||(Y.WR("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(B=this._refractionTexture.depth)),Y.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,B,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const B=this._refractionTexture;Y.updateVector3("vRefractionPosition",B.boundingBoxPosition),Y.updateVector3("vRefractionSize",B.boundingBoxSize)}}}this.pointsCloud&&Y.updateFloat("pointSize",this.pointSize),Y.updateColor4("vSpecularColor",this.specularColor,this.specularPower),Y.updateColor3("vEmissiveColor",g.EmissiveTextureEnabled?this.emissiveColor:R.Xu.BlackReadOnly),Y.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Z.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),Y.updateColor3("vAmbientColor",this._globalAmbientColor)}Z.texturesEnabled&&(this._diffuseTexture&&g.DiffuseTextureEnabled&&p.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&g.AmbientTextureEnabled&&p.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&g.OpacityTextureEnabled&&p.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&g.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?p.setTexture("reflectionCubeSampler",this._reflectionTexture):p.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&g.EmissiveTextureEnabled&&p.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&g.LightmapTextureEnabled&&p.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&g.SpecularTextureEnabled&&p.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Z.getEngine().getCaps().standardDerivatives&&g.BumpTextureEnabled&&p.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&g.RefractionTextureEnabled&&(this._refractionTexture.isCube?p.setTexture("refractionCubeSampler",this._refractionTexture):p.setTexture("refraction2DSampler",this._refractionTexture))),this.yB().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(u)&&this.yB().depthPeelingRenderer.bind(p),this._eventInfo.subMesh=F,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,f.g)(p,this,Z),this.bindEyePosition(p)}else Z.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(s||!this.isFrozen){var Q;if(Z.lightsEnabled&&!this._disableLighting&&(0,C.g)(Z,u,p,V,this._maxSimultaneousLights),(Z.fogEnabled&&u.applyFog&&Z.fogMode!==G.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||u.receiveShadows||V.PREPASS)&&this.bindView(p),(0,C.d)(Z,u,p),V.NUM_MORPH_INFLUENCERS&&(0,C.i)(u,p),V.BAKED_VERTEX_ANIMATION_TEXTURE)null===(Q=u.bakedVertexAnimationManager)||void 0===Q||Q.bind(p,V.INSTANCES);this.useLogarithmicDepth&&(0,C.h)(V,p,Z),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(u,this._activeEffect,F),Y.update()}getAnimatables(){const B=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&B.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&B.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&B.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&B.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&B.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&B.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&B.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&B.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&B.push(this._refractionTexture),B}getActiveTextures(){const B=super.getActiveTextures();return this._diffuseTexture&&B.push(this._diffuseTexture),this._ambientTexture&&B.push(this._ambientTexture),this._opacityTexture&&B.push(this._opacityTexture),this._reflectionTexture&&B.push(this._reflectionTexture),this._emissiveTexture&&B.push(this._emissiveTexture),this._specularTexture&&B.push(this._specularTexture),this._bumpTexture&&B.push(this._bumpTexture),this._lightmapTexture&&B.push(this._lightmapTexture),this._refractionTexture&&B.push(this._refractionTexture),B}hasTexture(B){return!!super.hasTexture(B)||(this._diffuseTexture===B||(this._ambientTexture===B||(this._opacityTexture===B||(this._reflectionTexture===B||(this._emissiveTexture===B||(this._specularTexture===B||(this._bumpTexture===B||(this._lightmapTexture===B||this._refractionTexture===B))))))))}dispose(B,u){var F,Z,V,p,G,R,e,s,Y;u&&(null===(F=this._diffuseTexture)||void 0===F||F.dispose(),null===(Z=this._ambientTexture)||void 0===Z||Z.dispose(),null===(V=this._opacityTexture)||void 0===V||V.dispose(),null===(p=this._reflectionTexture)||void 0===p||p.dispose(),null===(G=this._emissiveTexture)||void 0===G||G.dispose(),null===(R=this._specularTexture)||void 0===R||R.dispose(),null===(e=this._bumpTexture)||void 0===e||e.dispose(),null===(s=this._lightmapTexture)||void 0===s||s.dispose(),null===(Y=this._refractionTexture)||void 0===Y||Y.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(B,u)}clone(B){let u=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],F=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Z=x.c.Clone((()=>new g(B,this.yB())),this,{cloneTexturesOnlyOnce:u});return Z.name=B,Z.id=B,this.RR.copyTo(Z.RR),this._clonePlugins(Z,F),Z}static Parse(B,u,F){const Z=x.c.Parse((()=>new g(B.name,u)),B,u,F);return B.RR&&Z.RR.parse(B.RR,u,F),Q.c._ParsePlugins(B,Z,u,F),Z}static get DiffuseTextureEnabled(){return q.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){q.b.DiffuseTextureEnabled=B}static get DetailTextureEnabled(){return q.b.DetailTextureEnabled}static set DetailTextureEnabled(B){q.b.DetailTextureEnabled=B}static get AmbientTextureEnabled(){return q.b.AmbientTextureEnabled}static set AmbientTextureEnabled(B){q.b.AmbientTextureEnabled=B}static get OpacityTextureEnabled(){return q.b.OpacityTextureEnabled}static set OpacityTextureEnabled(B){q.b.OpacityTextureEnabled=B}static get ReflectionTextureEnabled(){return q.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){q.b.ReflectionTextureEnabled=B}static get EmissiveTextureEnabled(){return q.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){q.b.EmissiveTextureEnabled=B}static get SpecularTextureEnabled(){return q.b.SpecularTextureEnabled}static set SpecularTextureEnabled(B){q.b.SpecularTextureEnabled=B}static get BumpTextureEnabled(){return q.b.BumpTextureEnabled}static set BumpTextureEnabled(B){q.b.BumpTextureEnabled=B}static get LightmapTextureEnabled(){return q.b.LightmapTextureEnabled}static set LightmapTextureEnabled(B){q.b.LightmapTextureEnabled=B}static get RefractionTextureEnabled(){return q.b.RefractionTextureEnabled}static set RefractionTextureEnabled(B){q.b.RefractionTextureEnabled=B}static get ColorGradingTextureEnabled(){return q.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){q.b.ColorGradingTextureEnabled=B}static get FresnelEnabled(){return q.b.FresnelEnabled}static set FresnelEnabled(B){q.b.FresnelEnabled=B}}g.ForceGLSL=!1,(0,Z.d)([(0,V.E)("diffuseTexture")],g.prototype,"_diffuseTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],g.prototype,"diffuseTexture",void 0),(0,Z.d)([(0,V.E)("ambientTexture")],g.prototype,"_ambientTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"ambientTexture",void 0),(0,Z.d)([(0,V.E)("opacityTexture")],g.prototype,"_opacityTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],g.prototype,"opacityTexture",void 0),(0,Z.d)([(0,V.E)("reflectionTexture")],g.prototype,"_reflectionTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"reflectionTexture",void 0),(0,Z.d)([(0,V.E)("emissiveTexture")],g.prototype,"_emissiveTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"emissiveTexture",void 0),(0,Z.d)([(0,V.E)("specularTexture")],g.prototype,"_specularTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"specularTexture",void 0),(0,Z.d)([(0,V.E)("bumpTexture")],g.prototype,"_bumpTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"bumpTexture",void 0),(0,Z.d)([(0,V.E)("lightmapTexture")],g.prototype,"_lightmapTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"lightmapTexture",void 0),(0,Z.d)([(0,V.E)("refractionTexture")],g.prototype,"_refractionTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"refractionTexture",void 0),(0,Z.d)([(0,V.l)("ambient")],g.prototype,"ambientColor",void 0),(0,Z.d)([(0,V.l)("diffuse")],g.prototype,"diffuseColor",void 0),(0,Z.d)([(0,V.l)("specular")],g.prototype,"specularColor",void 0),(0,Z.d)([(0,V.l)("emissive")],g.prototype,"emissiveColor",void 0),(0,Z.d)([(0,V.L)()],g.prototype,"specularPower",void 0),(0,Z.d)([(0,V.L)("useAlphaFromDiffuseTexture")],g.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],g.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Z.d)([(0,V.L)("useEmissiveAsIllumination")],g.prototype,"_useEmissiveAsIllumination",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useEmissiveAsIllumination",void 0),(0,Z.d)([(0,V.L)("linkEmissiveWithDiffuse")],g.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"linkEmissiveWithDiffuse",void 0),(0,Z.d)([(0,V.L)("useSpecularOverAlpha")],g.prototype,"_useSpecularOverAlpha",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useSpecularOverAlpha",void 0),(0,Z.d)([(0,V.L)("useReflectionOverAlpha")],g.prototype,"_useReflectionOverAlpha",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useReflectionOverAlpha",void 0),(0,Z.d)([(0,V.L)("disableLighting")],g.prototype,"_disableLighting",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsLightsDirty")],g.prototype,"disableLighting",void 0),(0,Z.d)([(0,V.L)("useObjectSpaceNormalMap")],g.prototype,"_useObjectSpaceNormalMap",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useObjectSpaceNormalMap",void 0),(0,Z.d)([(0,V.L)("useParallax")],g.prototype,"_useParallax",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useParallax",void 0),(0,Z.d)([(0,V.L)("useParallaxOcclusion")],g.prototype,"_useParallaxOcclusion",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useParallaxOcclusion",void 0),(0,Z.d)([(0,V.L)()],g.prototype,"parallaxScaleBias",void 0),(0,Z.d)([(0,V.L)("roughness")],g.prototype,"_roughness",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"roughness",void 0),(0,Z.d)([(0,V.L)()],g.prototype,"indexOfRefraction",void 0),(0,Z.d)([(0,V.L)()],g.prototype,"invertRefractionY",void 0),(0,Z.d)([(0,V.L)()],g.prototype,"alphaCutOff",void 0),(0,Z.d)([(0,V.L)("useLightmapAsShadowmap")],g.prototype,"_useLightmapAsShadowmap",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useLightmapAsShadowmap",void 0),(0,Z.d)([(0,V.p)("diffuseFresnelParameters")],g.prototype,"_diffuseFresnelParameters",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelDirty")],g.prototype,"diffuseFresnelParameters",void 0),(0,Z.d)([(0,V.p)("opacityFresnelParameters")],g.prototype,"_opacityFresnelParameters",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],g.prototype,"opacityFresnelParameters",void 0),(0,Z.d)([(0,V.p)("reflectionFresnelParameters")],g.prototype,"_reflectionFresnelParameters",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelDirty")],g.prototype,"reflectionFresnelParameters",void 0),(0,Z.d)([(0,V.p)("refractionFresnelParameters")],g.prototype,"_refractionFresnelParameters",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelDirty")],g.prototype,"refractionFresnelParameters",void 0),(0,Z.d)([(0,V.p)("emissiveFresnelParameters")],g.prototype,"_emissiveFresnelParameters",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelDirty")],g.prototype,"emissiveFresnelParameters",void 0),(0,Z.d)([(0,V.L)("useReflectionFresnelFromSpecular")],g.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsFresnelDirty")],g.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Z.d)([(0,V.L)("useGlossinessFromSpecularMapAlpha")],g.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Z.d)([(0,V.L)("maxSimultaneousLights")],g.prototype,"_maxSimultaneousLights",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsLightsDirty")],g.prototype,"maxSimultaneousLights",void 0),(0,Z.d)([(0,V.L)("invertNormalMapX")],g.prototype,"_invertNormalMapX",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"invertNormalMapX",void 0),(0,Z.d)([(0,V.L)("invertNormalMapY")],g.prototype,"_invertNormalMapY",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"invertNormalMapY",void 0),(0,Z.d)([(0,V.L)("twoSidedLighting")],g.prototype,"_twoSidedLighting",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"twoSidedLighting",void 0),(0,Z.d)([(0,V.L)("applyDecalMapAfterDetailMap")],g.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Z.d)([(0,V.e)("_markAllSubMeshesAsMiscDirty")],g.prototype,"applyDecalMapAfterDetailMap",void 0),(0,L.f)("BABYLON.StandardMaterial",g),G.e.DefaultMaterialFactory=B=>new g("default material",B)}}]);