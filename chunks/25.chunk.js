"use strict";(self.wx5iyvo7rvn=self.wx5iyvo7rvn||[]).push([[25],{11509:(P,e,n)=>{n.d(e,{d:()=>q});var H=n(11121),S=n(11438),p=n(11125),k=n(11505),m=n(11499),t=n(11511),C=n(11473);class R extends m.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class q extends t.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(P){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(P,"DetailMap",140,new R,e),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=S.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=P._dirtyCallbacks[1]}isReadyForSubMesh(P,e,n){return!this._isEnabled||!(P._areTexturesDirty&&e.texturesEnabled&&n.getCaps().standardDerivatives&&this._texture&&k.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(P,e){if(this._isEnabled){P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const n=e.getEngine();P._areTexturesDirty&&(n.getCaps().standardDerivatives&&this._texture&&k.b.DetailTextureEnabled&&this._isEnabled?((0,C.P)(this._texture,P,"DETAIL"),P.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):P.DETAIL=!1)}else P.DETAIL=!1}bindForSubMesh(P,e){if(!this._isEnabled)return;const n=this._material.isFrozen;P.useUbo&&n&&P.isSync||this._texture&&k.b.DetailTextureEnabled&&(P.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,C.r)(this._texture,P,"detail")),e.texturesEnabled&&this._texture&&k.b.DetailTextureEnabled&&P.setTexture("detailSampler",this._texture)}hasTexture(P){return this._texture===P}getActiveTextures(P){this._texture&&P.push(this._texture)}getAnimatables(P){this._texture&&this._texture.animations&&this._texture.animations.length>0&&P.push(this._texture)}dispose(P){var e;P&&(null===(e=this._texture)||void 0===e||e.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(P){P.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,H.b)([(0,p.D)("detailTexture"),(0,p.d)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"texture",void 0),(0,H.b)([(0,p.M)()],q.prototype,"diffuseBlendLevel",void 0),(0,H.b)([(0,p.M)()],q.prototype,"roughnessBlendLevel",void 0),(0,H.b)([(0,p.M)()],q.prototype,"bumpLevel",void 0),(0,H.b)([(0,p.M)(),(0,p.d)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"normalBlendMethod",void 0),(0,H.b)([(0,p.M)(),(0,p.d)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"isEnabled",void 0)},11499:(P,e,n)=>{n.d(e,{c:()=>H});class H{constructor(P){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=P,P)for(const e in P)Object.prototype.hasOwnProperty.call(P,e)&&this._setDefaultValue(e)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let P=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||P,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const P of Object.keys(this))"_"!==P[0]&&this._keys.push(P);if(this._externalProperties)for(const P in this._externalProperties)-1===this._keys.indexOf(P)&&this._keys.push(P)}isEqual(P){if(this._keys.length!==P._keys.length)return!1;for(let e=0;e<this._keys.length;e++){const n=this._keys[e];if(this[n]!==P[n])return!1}return!0}cloneTo(P){this._keys.length!==P._keys.length&&(P._keys=this._keys.slice(0));for(let e=0;e<this._keys.length;e++){const n=this._keys[e];P[n]=this[n]}}reset(){for(const P of this._keys)this._setDefaultValue(P)}_setDefaultValue(P){var e,n,H,S;const p=(null===(e=this._externalProperties)||void 0===e||null===(n=e[P])||void 0===n?void 0:n.type)??typeof this[P],k=null===(H=this._externalProperties)||void 0===H||null===(S=H[P])||void 0===S?void 0:S.default;switch(p){case"number":this[P]=k??0;break;case"string":this[P]=k??"";break;default:this[P]=k??!1}}toString(){let P="";for(let e=0;e<this._keys.length;e++){const n=this._keys[e],H=this[n];switch(typeof H){case"number":case"string":P+="#define "+n+" "+H+"\n";break;default:H&&(P+="#define "+n+"\n")}}return P}}},11505:(P,e,n)=>{n.d(e,{b:()=>S});var H=n(11051);class S{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){this._DiffuseTextureEnabled!==P&&(this._DiffuseTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(P){this._BaseWeightTextureEnabled!==P&&(this._BaseWeightTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(P){this._BaseDiffuseRoughnessTextureEnabled!==P&&(this._BaseDiffuseRoughnessTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(P){this._DetailTextureEnabled!==P&&(this._DetailTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(P){this._DecalMapEnabled!==P&&(this._DecalMapEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(P){this._AmbientTextureEnabled!==P&&(this._AmbientTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(P){this._OpacityTextureEnabled!==P&&(this._OpacityTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){this._ReflectionTextureEnabled!==P&&(this._ReflectionTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){this._EmissiveTextureEnabled!==P&&(this._EmissiveTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(P){this._SpecularTextureEnabled!==P&&(this._SpecularTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(P){this._BumpTextureEnabled!==P&&(this._BumpTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(P){this._LightmapTextureEnabled!==P&&(this._LightmapTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(P){this._RefractionTextureEnabled!==P&&(this._RefractionTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){this._ColorGradingTextureEnabled!==P&&(this._ColorGradingTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(P){this._FresnelEnabled!==P&&(this._FresnelEnabled=P,H.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(P){this._ClearCoatTextureEnabled!==P&&(this._ClearCoatTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(P){this._ClearCoatBumpTextureEnabled!==P&&(this._ClearCoatBumpTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(P){this._ClearCoatTintTextureEnabled!==P&&(this._ClearCoatTintTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(P){this._SheenTextureEnabled!==P&&(this._SheenTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(P){this._AnisotropicTextureEnabled!==P&&(this._AnisotropicTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(P){this._ThicknessTextureEnabled!==P&&(this._ThicknessTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(P){this._RefractionIntensityTextureEnabled!==P&&(this._RefractionIntensityTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(P){this._TranslucencyIntensityTextureEnabled!==P&&(this._TranslucencyIntensityTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(P){this._TranslucencyColorTextureEnabled!==P&&(this._TranslucencyColorTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(P){this._IridescenceTextureEnabled!==P&&(this._IridescenceTextureEnabled=P,H.b.MarkAllMaterialsAsDirty(1))}}S._DiffuseTextureEnabled=!0,S._BaseWeightTextureEnabled=!0,S._BaseDiffuseRoughnessTextureEnabled=!0,S._DetailTextureEnabled=!0,S._DecalMapEnabled=!0,S._AmbientTextureEnabled=!0,S._OpacityTextureEnabled=!0,S._ReflectionTextureEnabled=!0,S._EmissiveTextureEnabled=!0,S._SpecularTextureEnabled=!0,S._BumpTextureEnabled=!0,S._LightmapTextureEnabled=!0,S._RefractionTextureEnabled=!0,S._ColorGradingTextureEnabled=!0,S._FresnelEnabled=!0,S._ClearCoatTextureEnabled=!0,S._ClearCoatBumpTextureEnabled=!0,S._ClearCoatTintTextureEnabled=!0,S._SheenTextureEnabled=!0,S._AnisotropicTextureEnabled=!0,S._ThicknessTextureEnabled=!0,S._RefractionIntensityTextureEnabled=!0,S._TranslucencyIntensityTextureEnabled=!0,S._TranslucencyColorTextureEnabled=!0,S._IridescenceTextureEnabled=!0},11516:(P,e,n)=>{n.d(e,{e:()=>p});var H,S=n(11133);!function(P){P[P.Zero=0]="Zero",P[P.One=1]="One",P[P.MaxViewZ=2]="MaxViewZ"}(H||(H={}));class p{static CreateConfiguration(P){return p._Configurations[P]={defines:{},previousWorldMatrices:{},previousViewProjection:S.Matrix.Zero(),currentViewProjection:S.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},p._Configurations[P]}static DeleteConfiguration(P){delete p._Configurations[P]}static GetConfiguration(P){return p._Configurations[P]}static AddUniformsAndSamplers(P,e){P.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(P,e){for(const n of e)if(n.ye)for(const e of n.ye)e._removeDrawWrapper(P)}static PrepareDefines(P,e,n){if(!n._arePrePassDirty)return;const H=p._Configurations[P];if(!H)return;n.PREPASS=!0,n.PREPASS_COLOR=!1,n.PREPASS_COLOR_INDEX=-1;let S=0;for(let k=0;k<p.GeometryTextureDescriptions.length;k++){const P=p.GeometryTextureDescriptions[k],e=P.define,m=P.defineIndex,t=H.defines[m];void 0!==t?(n[e]=!0,n[m]=t,S++):(n[e]=!1,delete n[m])}n.SCENE_MRT_COUNT=S,n.BONES_VELOCITY_ENABLED=e.useBones&&e.computeBonesUsingShaders&&e.skeleton&&!e.skeleton.isUsingTextureForMatrices&&-1===H.excludedSkinnedMesh.indexOf(e)}static Bind(P,e,n,H,S){const k=p._Configurations[P];if(!k)return;const m=n.BP(),t=m.getEngine();if(k.reverseCulling&&t.setStateCullFaceType(m._mirroredCameraPosition?S.cullBackFaces:!S.cullBackFaces),(void 0!==k.defines.PREPASS_VELOCITY_INDEX||void 0!==k.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(k.previousWorldMatrices[n.uniqueId]||(k.previousWorldMatrices[n.uniqueId]=H.clone()),k.previousViewProjection||(k.previousViewProjection=m.getTransformMatrix().clone(),k.currentViewProjection=m.getTransformMatrix().clone()),k.currentViewProjection.updateFlag!==m.getTransformMatrix().updateFlag?(k.lastUpdateFrameId=t.frameId,k.previousViewProjection.p(k.currentViewProjection),k.currentViewProjection.p(m.getTransformMatrix())):k.lastUpdateFrameId!==t.frameId&&(k.lastUpdateFrameId=t.frameId,k.previousViewProjection.p(k.currentViewProjection)),e.setMatrix("previousWorld",k.previousWorldMatrices[n.uniqueId]),e.setMatrix("previousViewProjection",k.previousViewProjection),k.previousWorldMatrices[n.uniqueId]=H.clone(),n.useBones&&n.computeBonesUsingShaders&&n.skeleton)){const P=n.skeleton;if(!P.isUsingTextureForMatrices||-1===e.getUniformIndex("boneTextureWidth")){const H=P.getTransformMatrices(n);H&&(k.previousBones[n.uniqueId]||(k.previousBones[n.uniqueId]=H.slice()),e.setMatrices("mPreviousBones",k.previousBones[n.uniqueId]),k.previousBones[n.uniqueId].set(H))}}}}p.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],p._Configurations={}},11511:(P,e,n)=>{n.d(e,{c:()=>w});var H=n(11121),S=n(11125),p=n(11438),k=n(11017),m=n(11041),t=n(11058);const C=new RegExp("^([gimus]+)!");class R{constructor(P){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=P,this._scene=P.BP(),this._engine=this._scene.getEngine()}_addPlugin(P){for(let H=0;H<this._plugins.length;++H)if(this._plugins[H].name===P.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!P.isCompatible(this._material.shaderLanguage))throw`The plugin "${P.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const e=P.getClassName();R._MaterialPluginClassToMainDefine[e]||(R._MaterialPluginClassToMainDefine[e]="MATERIALPLUGIN_"+ ++R._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(P,e)=>this._handlePluginEvent(P,e),this._plugins.push(P),this._plugins.sort(((P,e)=>P.priority-e.priority)),this._codeInjectionPoints={};const n={};n[R._MaterialPluginClassToMainDefine[e]]={type:"boolean",default:!0};for(const H of this._plugins)H.collectDefines(n),this._collectPointNames("vertex",H.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",H.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=n,!0}_activatePlugin(P){-1===this._activePlugins.indexOf(P)&&(this._activePlugins.push(P),this._activePlugins.sort(((P,e)=>P.priority-e.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),P.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(P),this._activePluginsForExtraEvents.sort(((P,e)=>P.priority-e.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(P){for(let e=0;e<this._plugins.length;++e)if(this._plugins[e].name===P)return this._plugins[e];return null}_handlePluginEventIsReadyForSubMesh(P){let e=!0;for(const n of this._activePlugins)e=e&&n.isReadyForSubMesh(P.defines,this._scene,this._engine,P.subMesh);P.isReadyForSubMesh=e}_handlePluginEventPrepareDefinesBeforeAttributes(P){for(const e of this._activePlugins)e.prepareDefinesBeforeAttributes(P.defines,this._scene,P.mesh)}_handlePluginEventPrepareDefines(P){for(const e of this._activePlugins)e.prepareDefines(P.defines,this._scene,P.mesh)}_handlePluginEventHardBindForSubMesh(P){for(const e of this._activePluginsForExtraEvents)e.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventBindForSubMesh(P){for(const e of this._activePlugins)e.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,P.subMesh)}_handlePluginEventHasRenderTargetTextures(P){let e=!1;for(const n of this._activePluginsForExtraEvents)if(e=n.hasRenderTargetTextures(),e)break;P.hasRenderTargetTextures=e}_handlePluginEventFillRenderTargetTextures(P){for(const e of this._activePluginsForExtraEvents)e.fillRenderTargetTextures(P.renderTargets)}_handlePluginEvent(P,e){switch(P){case 512:{const P=e;for(const e of this._activePlugins)e.getActiveTextures(P.activeTextures);break}case 256:{const P=e;for(const e of this._activePlugins)e.getAnimatables(P.animatables);break}case 1024:{const P=e;let n=!1;for(const e of this._activePlugins)if(n=e.hasTexture(P.texture),n)break;P.hasTexture=n;break}case 2:{const P=e;for(const e of this._plugins)e.dispose(P.forceDisposeTextures);break}case 4:e.defineNames=this._defineNamesFromPlugins;break;case 128:{const P=e;for(const e of this._activePlugins)P.fallbackRank=e.addFallbacks(P.defines,P.fallbacks,P.fallbackRank),e.getAttributes(P.attributes,this._scene,P.mesh);this._uniformList.length>0&&P.uniforms.push(...this._uniformList),this._samplerList.length>0&&P.samplers.push(...this._samplerList),this._uboList.length>0&&P.uniformBuffersNames.push(...this._uboList),P.customCode=this._injectCustomCode(P,P.customCode);break}case 8:{const P=e;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const n=1===this._material.shaderLanguage;for(const e of this._plugins){const H=e.getUniforms(this._material.shaderLanguage);if(H){if(H.ubo)for(const e of H.ubo){if(e.size&&e.type){const H=e.arraySize??0;if(P.ubo.addUniform(e.name,e.size,H),n){let P;switch(e.type){case"mat4":P="mat4x4f";break;case"float":P="f32";break;default:P=`${e.type}f`}this._uboDeclaration+=H>0?`uniform ${e.name}: array<${P}, ${H}>;\n`:`uniform ${e.name}: ${P};\n`}else this._uboDeclaration+=`${e.type} ${e.name}${H>0?`[${H}]`:""};\n`}this._uniformList.push(e.name)}H.vertex&&(this._vertexDeclaration+=H.vertex+"\n"),H.fragment&&(this._fragmentDeclaration+=H.fragment+"\n")}e.getSamplers(this._samplerList),e.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(P,e){if(e)for(const n in e)this._codeInjectionPoints[P]||(this._codeInjectionPoints[P]={}),this._codeInjectionPoints[P][n]=!0}_injectCustomCode(P,e){return(n,H)=>{var S;e&&(H=e(n,H)),this._uboDeclaration&&(H=H.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(H=H.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(H=H.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const p=null===(S=this._codeInjectionPoints)||void 0===S?void 0:S[n];if(!p)return H;let k=null;for(let e in p){let S="";for(const H of this._activePlugins){var R;let p=null===(R=H.getCustomCode(n,this._material.shaderLanguage))||void 0===R?void 0:R[e];if(p){if(H.resolveIncludes){if(null===k){const e=0;k={defines:[],indexParameters:P.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:t.d.GetShadersRepository(e),includesShadersStore:t.d.GetIncludesShadersStore(e),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}k.isFragment="fragment"===n,(0,m.j)(p,k,(P=>p=P))}S+=p+"\n"}}if(S.length>0)if("!"===e.charAt(0)){e=e.substring(1);let P="g";if("!"===e.charAt(0))P="",e=e.substring(1);else{const n=C.exec(e);n&&n.length>=2&&(P=n[1],e=e.substring(P.length+1))}P.indexOf("g")<0&&(P+="g");const n=H,p=new RegExp(e,P);let k=p.exec(n);for(;null!==k;){let P=S;for(let e=0;e<k.length;++e)P=P.replace("$"+e,k[e]);H=H.replace(k[0],P),k=p.exec(n)}}else{const P="#define "+e;H=H.replace(P,"\n"+S+"\n"+P)}}return H}}}R._MaterialPluginClassToMainDefine={},R._MaterialPluginCounter=0,k.d.OnEnginesDisposedObservable.add((()=>{Y()}));const q=[];let A=!1,F=null;function Y(){q.length=0,A=!1,p.c.OnEventObservable.remove(F),F=null}var j=n(11170),z=n(11096);class w{isCompatible(P){return 0===P}_enable(P){P&&this._pluginManager._activatePlugin(this)}constructor(P,e,n,H){let S=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=P,this.name=e,this.priority=n,this.resolveIncludes=k,P.pluginManager||(P.pluginManager=new R(P),P.ie.add((()=>{P.pluginManager=void 0}))),this._pluginDefineNames=H,this._pluginManager=P.pluginManager,S&&this._pluginManager._addPlugin(this),p&&this._enable(!0),this.markAllDefinesAsDirty=P._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(P,e,n,H){return!0}hardBindForSubMesh(P,e,n,H){}bindForSubMesh(P,e,n,H){}dispose(P){}getCustomCode(P){return null}collectDefines(P){if(this._pluginDefineNames)for(const e of Object.keys(this._pluginDefineNames)){if("_"===e[0])continue;const n=typeof this._pluginDefineNames[e];P[e]={type:"number"===n?"number":"string"===n?"string":"boolean"===n?"boolean":"object",default:this._pluginDefineNames[e]}}}prepareDefinesBeforeAttributes(P,e,n){}prepareDefines(P,e,n){}hasTexture(P){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(P){}getActiveTextures(P){}getAnimatables(P){}addFallbacks(P,e,n){return n}getSamplers(P){}getAttributes(P,e,n){}getUniformBuffersNames(P){}getUniforms(){return{}}copyTo(P){j.c.Clone((()=>P),this)}serialize(){return j.c.Serialize(this)}parse(P,e,n){j.c.Parse((()=>this),P,e,n)}}(0,H.b)([(0,S.M)()],w.prototype,"name",void 0),(0,H.b)([(0,S.M)()],w.prototype,"priority",void 0),(0,H.b)([(0,S.M)()],w.prototype,"resolveIncludes",void 0),(0,H.b)([(0,S.M)()],w.prototype,"registerForExtraEvents",void 0),(0,z.h)("BABYLON.MaterialPluginBase",w)},11495:(P,e,n)=>{n.d(e,{e:()=>H});class H{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(P){P.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(P){}bindForSubMesh(P,e,n,H,S){if(e.prePassRenderer&&e.prePassRenderer.enabled&&e.prePassRenderer.currentRTisSceneRT&&(-1!==e.prePassRenderer.getIndex(2)||-1!==e.prePassRenderer.getIndex(11))){this.previousWorldMatrices[n.uniqueId]||(this.previousWorldMatrices[n.uniqueId]=H.clone()),this.previousViewProjection||(this.previousViewProjection=e.getTransformMatrix().clone(),this.currentViewProjection=e.getTransformMatrix().clone());const S=e.getEngine();this.currentViewProjection.updateFlag!==e.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=S.frameId,this.previousViewProjection.p(this.currentViewProjection),this.currentViewProjection.p(e.getTransformMatrix())):this._lastUpdateFrameId!==S.frameId&&(this._lastUpdateFrameId=S.frameId,this.previousViewProjection.p(this.currentViewProjection)),P.setMatrix("previousWorld",this.previousWorldMatrices[n.uniqueId]),P.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[n.uniqueId]=H.clone()}}}},11490:(P,e,n)=>{n.d(e,{de:()=>b});var H=n(11121),S=n(11125),p=n(11239),k=n(11379),m=n(11183),t=n(11213),C=n(11495),R=n(11388),q=n(11438),A=n(11499),F=n(11430),Y=n(11119),j=n(11096),z=n(11505),w=n(11427),J=n(11509),I=n(11481),O=n(11473),V=n(11170),i=n(11516);const B={effect:null,subMesh:null};class l extends A.c{constructor(P){super(P),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(P){const e=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const n of e)this[n]=n===P}}class b extends F.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(P){this._attachImageProcessingConfiguration(P),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(P){P!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=P||this.BP().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(P){this.imageProcessingConfiguration.colorCurvesEnabled=P}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(P){this.imageProcessingConfiguration.colorGradingEnabled=P}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(P){this._imageProcessingConfiguration.toneMappingEnabled=P}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(P){this._imageProcessingConfiguration.exposure=P}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(P){this._imageProcessingConfiguration.contrast=P}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(P){this._imageProcessingConfiguration.colorGradingTexture=P}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(P){this._imageProcessingConfiguration.colorCurves=P}get canRenderToMRT(){return!0}constructor(P,e){super(P,e,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||b.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new m.Ne(0,0,0),this.diffuseColor=new m.Ne(1,1,1),this.specularColor=new m.Ne(1,1,1),this.emissiveColor=new m.Ne(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new p.f(16),this._globalAmbientColor=new m.Ne(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new J.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new C.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),b.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),b.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(b.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(b.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"de"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===q.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.We&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==q.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.We||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(P,e){let H=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const S=e._drawWrapper;if(S.effect&&this.isFrozen&&S._wasPreviouslyReady&&S._wasPreviouslyUsingInstances===H)return!0;e.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),e.materialDefines=new l(this._eventInfo.defineNames));const p=this.BP(),k=e.materialDefines;if(this._isReadyForSubMesh(e))return!0;const m=p.getEngine();k._needNormals=(0,O.M)(p,P,k,!0,this._maxSimultaneousLights,this._disableLighting),(0,O.U)(p,k);const q=this.needAlphaBlendingForMesh(P)&&this.BP().useOrderIndependentTransparency;if((0,O.X)(p,k,this.canRenderToMRT&&!q),(0,O.W)(p,k,q),i.e.PrepareDefines(m.currentRenderPassId,P,k),k._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,k._needUVs=!1;for(let P=1;P<=6;++P)k["MAINUV"+P]=!1;if(p.texturesEnabled){if(k.DIFFUSEDIRECTUV=0,k.BUMPDIRECTUV=0,k.AMBIENTDIRECTUV=0,k.OPACITYDIRECTUV=0,k.EMISSIVEDIRECTUV=0,k.SPECULARDIRECTUV=0,k.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&b.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._diffuseTexture,k,"DIFFUSE")}else k.DIFFUSE=!1;if(this._ambientTexture&&b.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._ambientTexture,k,"AMBIENT")}else k.AMBIENT=!1;if(this._opacityTexture&&b.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._opacityTexture,k,"OPACITY"),k.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else k.OPACITY=!1;if(this._reflectionTexture&&b.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(k._needNormals=!0,k.REFLECTION=!0,k.ROUGHNESS=this._roughness>0,k.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,k.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Y.e.INVCUBIC_MODE,k.REFLECTIONMAP_3D=this._reflectionTexture.isCube,k.REFLECTIONMAP_OPPOSITEZ=k.REFLECTIONMAP_3D&&this.BP().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,k.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Y.e.EXPLICIT_MODE:k.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Y.e.PLANAR_MODE:k.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Y.e.PROJECTION_MODE:k.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Y.e.SKYBOX_MODE:k.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Y.e.SPHERICAL_MODE:k.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Y.e.EQUIRECTANGULAR_MODE:k.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Y.e.FIXED_EQUIRECTANGULAR_MODE:k.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Y.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:k.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Y.e.CUBIC_MODE:case Y.e.INVCUBIC_MODE:default:k.setReflectionMode("REFLECTIONMAP_CUBIC")}k.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else k.REFLECTION=!1,k.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&b.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._emissiveTexture,k,"EMISSIVE")}else k.EMISSIVE=!1;if(this._lightmapTexture&&b.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._lightmapTexture,k,"LIGHTMAP"),k.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,k.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else k.LIGHTMAP=!1;if(this._specularTexture&&b.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,O.P)(this._specularTexture,k,"SPECULAR"),k.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else k.SPECULAR=!1;if(p.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&b.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,O.P)(this._bumpTexture,k,"BUMP"),k.PARALLAX=this._useParallax,k.PARALLAX_RHS=p.useRightHandedSystem,k.PARALLAXOCCLUSION=this._useParallaxOcclusion,k.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else k.BUMP=!1,k.PARALLAX=!1,k.PARALLAX_RHS=!1,k.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&b.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;k._needUVs=!0,k.REFRACTION=!0,k.REFRACTIONMAP_3D=this._refractionTexture.isCube,k.RGBDREFRACTION=this._refractionTexture.isRGBD,k.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else k.REFRACTION=!1;k.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else k.DIFFUSE=!1,k.AMBIENT=!1,k.OPACITY=!1,k.REFLECTION=!1,k.EMISSIVE=!1,k.LIGHTMAP=!1,k.BUMP=!1,k.REFRACTION=!1;k.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),k.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,k.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,k.SPECULAROVERALPHA=this._useSpecularOverAlpha,k.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,k.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,k.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(P)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=k,this._eventInfo.subMesh=e,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(k._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(k),k.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,k.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(k._areFresnelDirty&&(b.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(k.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,k.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,k.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,k.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,k.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,k.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,k._needNormals=!0,k.FRESNEL=!0):k.FRESNEL=!1),k.AREALIGHTUSED)for(let n=0;n<P.lightSources.length;n++)if(!P.lightSources[n]._isReady())return!1;(0,O.Q)(P,p,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(P),k,this._applyDecalMapAfterDetailMap),(0,O.K)(p,m,this,k,H,null,e.getRenderingMesh().hasThinInstances),this._eventInfo.defines=k,this._eventInfo.mesh=P,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,O.I)(P,k,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let A=!1;if(k.isDirty){const H=k._areLightsDisposed;k.markAsProcessed();const S=new w.d;k.REFLECTION&&S.addFallback(0,"REFLECTION"),k.SPECULAR&&S.addFallback(0,"SPECULAR"),k.BUMP&&S.addFallback(0,"BUMP"),k.PARALLAX&&S.addFallback(1,"PARALLAX"),k.PARALLAX_RHS&&S.addFallback(1,"PARALLAX_RHS"),k.PARALLAXOCCLUSION&&S.addFallback(0,"PARALLAXOCCLUSION"),k.SPECULAROVERALPHA&&S.addFallback(0,"SPECULAROVERALPHA"),k.FOG&&S.addFallback(1,"FOG"),k.POINTSIZE&&S.addFallback(0,"POINTSIZE"),k.LOGARITHMICDEPTH&&S.addFallback(0,"LOGARITHMICDEPTH"),(0,O.t)(k,S,this._maxSimultaneousLights),k.SPECULARTERM&&S.addFallback(0,"SPECULARTERM"),k.DIFFUSEFRESNEL&&S.addFallback(1,"DIFFUSEFRESNEL"),k.OPACITYFRESNEL&&S.addFallback(2,"OPACITYFRESNEL"),k.REFLECTIONFRESNEL&&S.addFallback(3,"REFLECTIONFRESNEL"),k.EMISSIVEFRESNEL&&S.addFallback(4,"EMISSIVEFRESNEL"),k.FRESNEL&&S.addFallback(4,"FRESNEL"),k.MULTIVIEW&&S.addFallback(0,"MULTIVIEW");const q=[t.g.PositionKind];k.NORMAL&&q.push(t.g.NormalKind),k.TANGENT&&q.push(t.g.TangentKind);for(let P=1;P<=6;++P)k["UV"+P]&&q.push(`uv${1===P?"":P}`);k.VERTEXCOLOR&&q.push(t.g.ColorKind),(0,O.A)(q,P,k,S),(0,O.D)(q,k),(0,O.G)(q,P,k),(0,O.x)(q,P,k);let F="default";const Y=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],j=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],z=["Material","Scene","Mesh"],J={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:k.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=S,this._eventInfo.fallbackRank=0,this._eventInfo.defines=k,this._eventInfo.uniforms=Y,this._eventInfo.attributes=q,this._eventInfo.samplers=j,this._eventInfo.uniformBuffersNames=z,this._eventInfo.customCode=void 0,this._eventInfo.mesh=P,this._eventInfo.indexParameters=J,this._callbackPluginEventGeneric(128,this._eventInfo),i.e.AddUniformsAndSamplers(Y,j),C.e.AddUniforms(Y),C.e.AddSamplers(j),R.e&&(R.e.PrepareUniforms(Y,k),R.e.PrepareSamplers(j,k)),(0,O.$)({uniformsNames:Y,uniformBuffersNames:z,samplers:j,defines:k,maxSimultaneousLights:this._maxSimultaneousLights}),(0,I.e)(Y);const V={};this.customShaderNameResolve&&(F=this.customShaderNameResolve(F,Y,z,j,k,q,V));const l=k.toString(),b=e.effect;let T=p.getEngine().createEffect(F,{attributes:q,uniformsNames:Y,uniformBuffersNames:z,samplers:j,defines:l,fallbacks:S,onCompiled:this.onCompiled,onError:this.onError,indexParameters:J,processFinalCode:V.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:k.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([n.e(41),n.e(64)]).then(n.bind(n,13631)),Promise.all([n.e(39),n.e(65)]).then(n.bind(n,13781))]):await Promise.all([Promise.all([n.e(34),n.e(67)]).then(n.bind(n,13869)),Promise.all([n.e(33),n.e(68)]).then(n.bind(n,14015))]),this._shadersLoaded=!0}},m);if(this._eventInfo.customCode=void 0,T)if(this._onEffectCreatedObservable&&(B.effect=T,B.subMesh=e,this._onEffectCreatedObservable.notifyObservers(B)),this.allowShaderHotSwapping&&b&&!T.isReady()){if(T=b,k.markAsUnprocessed(),A=this.isFrozen,H)return k._areLightsDisposed=!0,!1}else p.resetCachedMaterial(),e.setEffect(T,k,this._materialContext)}return!(!e.effect||!e.effect.isReady())&&(k._renderId=p.getRenderId(),S._wasPreviouslyReady=!A,S._wasPreviouslyUsingInstances=H,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const P=this._uniformBuffer;P.addUniform("diffuseLeftColor",4),P.addUniform("diffuseRightColor",4),P.addUniform("opacityParts",4),P.addUniform("reflectionLeftColor",4),P.addUniform("reflectionRightColor",4),P.addUniform("refractionLeftColor",4),P.addUniform("refractionRightColor",4),P.addUniform("emissiveLeftColor",4),P.addUniform("emissiveRightColor",4),P.addUniform("vDiffuseInfos",2),P.addUniform("vAmbientInfos",2),P.addUniform("vOpacityInfos",2),P.addUniform("vReflectionInfos",2),P.addUniform("vReflectionPosition",3),P.addUniform("vReflectionSize",3),P.addUniform("vEmissiveInfos",2),P.addUniform("vLightmapInfos",2),P.addUniform("vSpecularInfos",2),P.addUniform("vBumpInfos",3),P.addUniform("diffuseMatrix",16),P.addUniform("ambientMatrix",16),P.addUniform("opacityMatrix",16),P.addUniform("reflectionMatrix",16),P.addUniform("emissiveMatrix",16),P.addUniform("lightmapMatrix",16),P.addUniform("specularMatrix",16),P.addUniform("bumpMatrix",16),P.addUniform("vTangentSpaceParams",2),P.addUniform("pointSize",1),P.addUniform("alphaCutOff",1),P.addUniform("refractionMatrix",16),P.addUniform("vRefractionInfos",4),P.addUniform("vRefractionPosition",3),P.addUniform("vRefractionSize",3),P.addUniform("vSpecularColor",4),P.addUniform("vEmissiveColor",3),P.addUniform("vDiffuseColor",4),P.addUniform("vAmbientColor",3),P.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(P,e,n){const H=this.BP(),S=n.materialDefines;if(!S)return;const p=n.effect;if(!p)return;this._activeEffect=p,e.getMeshUniformBuffer().bindToEffect(p,"Mesh"),e.transferToEffect(P),this._uniformBuffer.bindToEffect(p,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,H,e,P,this.isFrozen),i.e.Bind(H.getEngine().currentRenderPassId,this._activeEffect,e,P,this);const t=H.activeCamera;t?this._uniformBuffer.updateFloat4("cameraInfo",t.Le,t.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=n,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),S.OBJECTSPACE_NORMALMAP&&(P.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const C=this._mustRebind(H,p,n,e.visibility);(0,O.c)(e,p);const R=this._uniformBuffer;if(C){if(this.bindViewProjection(p),!R.useUbo||!this.isFrozen||!R.isSync||n._drawWrapper._forceRebindOnNextCall){if(b.FresnelEnabled&&S.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(R.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),R.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&R.updateColor4("opacityParts",new m.Ne(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(R.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),R.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(R.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),R.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(R.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),R.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),H.texturesEnabled){if(this._diffuseTexture&&b.DiffuseTextureEnabled&&(R.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,O.r)(this._diffuseTexture,R,"diffuse")),this._ambientTexture&&b.AmbientTextureEnabled&&(R.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,O.r)(this._ambientTexture,R,"ambient")),this._opacityTexture&&b.OpacityTextureEnabled&&(R.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,O.r)(this._opacityTexture,R,"opacity")),this._hasAlphaChannel()&&R.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&b.ReflectionTextureEnabled){if(R.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),R.he("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const P=this._reflectionTexture;R.updateVector3("vReflectionPosition",P.boundingBoxPosition),R.updateVector3("vReflectionSize",P.boundingBoxSize)}}else R.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&b.EmissiveTextureEnabled&&(R.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,O.r)(this._emissiveTexture,R,"emissive")),this._lightmapTexture&&b.LightmapTextureEnabled&&(R.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,O.r)(this._lightmapTexture,R,"lightmap")),this._specularTexture&&b.SpecularTextureEnabled&&(R.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,O.r)(this._specularTexture,R,"specular")),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&b.BumpTextureEnabled&&(R.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,O.r)(this._bumpTexture,R,"bump"),H._mirroredCameraPosition?R.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):R.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&b.RefractionTextureEnabled){let P=1;if(this._refractionTexture.isCube||(R.he("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(P=this._refractionTexture.depth)),R.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,P,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const P=this._refractionTexture;R.updateVector3("vRefractionPosition",P.boundingBoxPosition),R.updateVector3("vRefractionSize",P.boundingBoxSize)}}}this.pointsCloud&&R.updateFloat("pointSize",this.pointSize),R.updateColor4("vSpecularColor",this.specularColor,this.specularPower),R.updateColor3("vEmissiveColor",b.EmissiveTextureEnabled?this.emissiveColor:m.Ne.BlackReadOnly),R.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),H.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),R.updateColor3("vAmbientColor",this._globalAmbientColor)}H.texturesEnabled&&(this._diffuseTexture&&b.DiffuseTextureEnabled&&p.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&b.AmbientTextureEnabled&&p.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&b.OpacityTextureEnabled&&p.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&b.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?p.setTexture("reflectionCubeSampler",this._reflectionTexture):p.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&b.EmissiveTextureEnabled&&p.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&b.LightmapTextureEnabled&&p.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&b.SpecularTextureEnabled&&p.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&H.getEngine().getCaps().standardDerivatives&&b.BumpTextureEnabled&&p.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&b.RefractionTextureEnabled&&(this._refractionTexture.isCube?p.setTexture("refractionCubeSampler",this._refractionTexture):p.setTexture("refraction2DSampler",this._refractionTexture))),this.BP().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(e)&&this.BP().depthPeelingRenderer.bind(p),this._eventInfo.subMesh=n,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,I.g)(p,this,H),this.bindEyePosition(p)}else H.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(C||!this.isFrozen){var q;if(H.lightsEnabled&&!this._disableLighting&&(0,O.h)(H,e,p,S,this._maxSimultaneousLights),(H.fogEnabled&&e.applyFog&&H.fogMode!==k.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||e.receiveShadows||S.PREPASS)&&this.bindView(p),(0,O.g)(H,e,p),S.NUM_MORPH_INFLUENCERS&&(0,O.m)(e,p),S.BAKED_VERTEX_ANIMATION_TEXTURE)null===(q=e.bakedVertexAnimationManager)||void 0===q||q.bind(p,S.INSTANCES);this.useLogarithmicDepth&&(0,O.i)(S,p,H),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(e,this._activeEffect,n),R.update()}getAnimatables(){const P=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&P.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&P.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&P.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&P.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&P.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&P.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&P.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&P.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&P.push(this._refractionTexture),P}getActiveTextures(){const P=super.getActiveTextures();return this._diffuseTexture&&P.push(this._diffuseTexture),this._ambientTexture&&P.push(this._ambientTexture),this._opacityTexture&&P.push(this._opacityTexture),this._reflectionTexture&&P.push(this._reflectionTexture),this._emissiveTexture&&P.push(this._emissiveTexture),this._specularTexture&&P.push(this._specularTexture),this._bumpTexture&&P.push(this._bumpTexture),this._lightmapTexture&&P.push(this._lightmapTexture),this._refractionTexture&&P.push(this._refractionTexture),P}hasTexture(P){return!!super.hasTexture(P)||(this._diffuseTexture===P||(this._ambientTexture===P||(this._opacityTexture===P||(this._reflectionTexture===P||(this._emissiveTexture===P||(this._specularTexture===P||(this._bumpTexture===P||(this._lightmapTexture===P||this._refractionTexture===P))))))))}dispose(P,e){var n,H,S,p,k,m,t,C,R;e&&(null===(n=this._diffuseTexture)||void 0===n||n.dispose(),null===(H=this._ambientTexture)||void 0===H||H.dispose(),null===(S=this._opacityTexture)||void 0===S||S.dispose(),null===(p=this._reflectionTexture)||void 0===p||p.dispose(),null===(k=this._emissiveTexture)||void 0===k||k.dispose(),null===(m=this._specularTexture)||void 0===m||m.dispose(),null===(t=this._bumpTexture)||void 0===t||t.dispose(),null===(C=this._lightmapTexture)||void 0===C||C.dispose(),null===(R=this._refractionTexture)||void 0===R||R.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(P,e)}clone(P){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const H=V.c.Clone((()=>new b(P,this.BP())),this,{cloneTexturesOnlyOnce:e});return H.name=P,H.id=P,this.stencil.copyTo(H.stencil),this._clonePlugins(H,n),H}static Parse(P,e,n){const H=V.c.Parse((()=>new b(P.name,e)),P,e,n);return P.stencil&&H.stencil.parse(P.stencil,e,n),q.c._ParsePlugins(P,H,e,n),H}static get DiffuseTextureEnabled(){return z.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(P){z.b.DiffuseTextureEnabled=P}static get DetailTextureEnabled(){return z.b.DetailTextureEnabled}static set DetailTextureEnabled(P){z.b.DetailTextureEnabled=P}static get AmbientTextureEnabled(){return z.b.AmbientTextureEnabled}static set AmbientTextureEnabled(P){z.b.AmbientTextureEnabled=P}static get OpacityTextureEnabled(){return z.b.OpacityTextureEnabled}static set OpacityTextureEnabled(P){z.b.OpacityTextureEnabled=P}static get ReflectionTextureEnabled(){return z.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(P){z.b.ReflectionTextureEnabled=P}static get EmissiveTextureEnabled(){return z.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(P){z.b.EmissiveTextureEnabled=P}static get SpecularTextureEnabled(){return z.b.SpecularTextureEnabled}static set SpecularTextureEnabled(P){z.b.SpecularTextureEnabled=P}static get BumpTextureEnabled(){return z.b.BumpTextureEnabled}static set BumpTextureEnabled(P){z.b.BumpTextureEnabled=P}static get LightmapTextureEnabled(){return z.b.LightmapTextureEnabled}static set LightmapTextureEnabled(P){z.b.LightmapTextureEnabled=P}static get RefractionTextureEnabled(){return z.b.RefractionTextureEnabled}static set RefractionTextureEnabled(P){z.b.RefractionTextureEnabled=P}static get ColorGradingTextureEnabled(){return z.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(P){z.b.ColorGradingTextureEnabled=P}static get FresnelEnabled(){return z.b.FresnelEnabled}static set FresnelEnabled(P){z.b.FresnelEnabled=P}}b.ForceGLSL=!1,(0,H.b)([(0,S.D)("diffuseTexture")],b.prototype,"_diffuseTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"diffuseTexture",void 0),(0,H.b)([(0,S.D)("ambientTexture")],b.prototype,"_ambientTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"ambientTexture",void 0),(0,H.b)([(0,S.D)("opacityTexture")],b.prototype,"_opacityTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"opacityTexture",void 0),(0,H.b)([(0,S.D)("reflectionTexture")],b.prototype,"_reflectionTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"reflectionTexture",void 0),(0,H.b)([(0,S.D)("emissiveTexture")],b.prototype,"_emissiveTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"emissiveTexture",void 0),(0,H.b)([(0,S.D)("specularTexture")],b.prototype,"_specularTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"specularTexture",void 0),(0,H.b)([(0,S.D)("bumpTexture")],b.prototype,"_bumpTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"bumpTexture",void 0),(0,H.b)([(0,S.D)("lightmapTexture")],b.prototype,"_lightmapTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"lightmapTexture",void 0),(0,H.b)([(0,S.D)("refractionTexture")],b.prototype,"_refractionTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"refractionTexture",void 0),(0,H.b)([(0,S.j)("ambient")],b.prototype,"ambientColor",void 0),(0,H.b)([(0,S.j)("diffuse")],b.prototype,"diffuseColor",void 0),(0,H.b)([(0,S.j)("specular")],b.prototype,"specularColor",void 0),(0,H.b)([(0,S.j)("emissive")],b.prototype,"emissiveColor",void 0),(0,H.b)([(0,S.M)()],b.prototype,"specularPower",void 0),(0,H.b)([(0,S.M)("useAlphaFromDiffuseTexture")],b.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],b.prototype,"useAlphaFromDiffuseTexture",void 0),(0,H.b)([(0,S.M)("useEmissiveAsIllumination")],b.prototype,"_useEmissiveAsIllumination",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useEmissiveAsIllumination",void 0),(0,H.b)([(0,S.M)("linkEmissiveWithDiffuse")],b.prototype,"_linkEmissiveWithDiffuse",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"linkEmissiveWithDiffuse",void 0),(0,H.b)([(0,S.M)("useSpecularOverAlpha")],b.prototype,"_useSpecularOverAlpha",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useSpecularOverAlpha",void 0),(0,H.b)([(0,S.M)("useReflectionOverAlpha")],b.prototype,"_useReflectionOverAlpha",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useReflectionOverAlpha",void 0),(0,H.b)([(0,S.M)("disableLighting")],b.prototype,"_disableLighting",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsLightsDirty")],b.prototype,"disableLighting",void 0),(0,H.b)([(0,S.M)("useObjectSpaceNormalMap")],b.prototype,"_useObjectSpaceNormalMap",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useObjectSpaceNormalMap",void 0),(0,H.b)([(0,S.M)("useParallax")],b.prototype,"_useParallax",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useParallax",void 0),(0,H.b)([(0,S.M)("useParallaxOcclusion")],b.prototype,"_useParallaxOcclusion",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useParallaxOcclusion",void 0),(0,H.b)([(0,S.M)()],b.prototype,"parallaxScaleBias",void 0),(0,H.b)([(0,S.M)("roughness")],b.prototype,"_roughness",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"roughness",void 0),(0,H.b)([(0,S.M)()],b.prototype,"indexOfRefraction",void 0),(0,H.b)([(0,S.M)()],b.prototype,"invertRefractionY",void 0),(0,H.b)([(0,S.M)()],b.prototype,"alphaCutOff",void 0),(0,H.b)([(0,S.M)("useLightmapAsShadowmap")],b.prototype,"_useLightmapAsShadowmap",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useLightmapAsShadowmap",void 0),(0,H.b)([(0,S.q)("diffuseFresnelParameters")],b.prototype,"_diffuseFresnelParameters",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"diffuseFresnelParameters",void 0),(0,H.b)([(0,S.q)("opacityFresnelParameters")],b.prototype,"_opacityFresnelParameters",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],b.prototype,"opacityFresnelParameters",void 0),(0,H.b)([(0,S.q)("reflectionFresnelParameters")],b.prototype,"_reflectionFresnelParameters",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"reflectionFresnelParameters",void 0),(0,H.b)([(0,S.q)("refractionFresnelParameters")],b.prototype,"_refractionFresnelParameters",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"refractionFresnelParameters",void 0),(0,H.b)([(0,S.q)("emissiveFresnelParameters")],b.prototype,"_emissiveFresnelParameters",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"emissiveFresnelParameters",void 0),(0,H.b)([(0,S.M)("useReflectionFresnelFromSpecular")],b.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsFresnelDirty")],b.prototype,"useReflectionFresnelFromSpecular",void 0),(0,H.b)([(0,S.M)("useGlossinessFromSpecularMapAlpha")],b.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,H.b)([(0,S.M)("maxSimultaneousLights")],b.prototype,"_maxSimultaneousLights",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsLightsDirty")],b.prototype,"maxSimultaneousLights",void 0),(0,H.b)([(0,S.M)("invertNormalMapX")],b.prototype,"_invertNormalMapX",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"invertNormalMapX",void 0),(0,H.b)([(0,S.M)("invertNormalMapY")],b.prototype,"_invertNormalMapY",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"invertNormalMapY",void 0),(0,H.b)([(0,S.M)("twoSidedLighting")],b.prototype,"_twoSidedLighting",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsTexturesDirty")],b.prototype,"twoSidedLighting",void 0),(0,H.b)([(0,S.M)("applyDecalMapAfterDetailMap")],b.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,H.b)([(0,S.d)("_markAllSubMeshesAsMiscDirty")],b.prototype,"applyDecalMapAfterDetailMap",void 0),(0,j.h)("BABYLON.StandardMaterial",b),k.d.DefaultMaterialFactory=P=>new b("default material",P)}}]);