"use strict";(self.zcqpiao938m=self.zcqpiao938m||[]).push([[25],{12227:(C,U,K)=>{K.d(U,{c:()=>p});var m=K(11810),O=K(12158),X=K(11818),A=K(12218),e=K(12216),t=K(12232),z=K(12198);class j extends e.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class p extends t.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(C){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(C,"DetailMap",140,new j,U),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=O.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=C._dirtyCallbacks[1]}isReadyForSubMesh(C,U,K){return!this._isEnabled||!(C._areTexturesDirty&&U.texturesEnabled&&K.getCaps().standardDerivatives&&this._texture&&A.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(C,U){if(this._isEnabled){C.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const K=U.getEngine();C._areTexturesDirty&&(K.getCaps().standardDerivatives&&this._texture&&A.d.DetailTextureEnabled&&this._isEnabled?((0,z.M)(this._texture,C,"DETAIL"),C.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):C.DETAIL=!1)}else C.DETAIL=!1}bindForSubMesh(C,U){if(!this._isEnabled)return;const K=this._material.isFrozen;C.useUbo&&K&&C.isSync||this._texture&&A.d.DetailTextureEnabled&&(C.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,z.v)(this._texture,C,"detail")),U.texturesEnabled&&this._texture&&A.d.DetailTextureEnabled&&C.setTexture("detailSampler",this._texture)}hasTexture(C){return this._texture===C}getActiveTextures(C){this._texture&&C.push(this._texture)}getAnimatables(C){this._texture&&this._texture.animations&&this._texture.animations.length>0&&C.push(this._texture)}dispose(C){var U;C&&(null===(U=this._texture)||void 0===U||U.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(C){C.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,m.d)([(0,X.D)("detailTexture"),(0,X.d)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"texture",void 0),(0,m.d)([(0,X.O)()],p.prototype,"diffuseBlendLevel",void 0),(0,m.d)([(0,X.O)()],p.prototype,"roughnessBlendLevel",void 0),(0,m.d)([(0,X.O)()],p.prototype,"bumpLevel",void 0),(0,m.d)([(0,X.O)(),(0,X.d)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"normalBlendMethod",void 0),(0,m.d)([(0,X.O)(),(0,X.d)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"isEnabled",void 0)},12216:(C,U,K)=>{K.d(U,{e:()=>m});class m{constructor(C){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=C,C)for(const U in C)Object.prototype.hasOwnProperty.call(C,U)&&this._setDefaultValue(U)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let C=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||C,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const C of Object.keys(this))"_"!==C[0]&&this._keys.push(C);if(this._externalProperties)for(const C in this._externalProperties)-1===this._keys.indexOf(C)&&this._keys.push(C)}isEqual(C){if(this._keys.length!==C._keys.length)return!1;for(let U=0;U<this._keys.length;U++){const K=this._keys[U];if(this[K]!==C[K])return!1}return!0}cloneTo(C){this._keys.length!==C._keys.length&&(C._keys=this._keys.slice(0));for(let U=0;U<this._keys.length;U++){const K=this._keys[U];C[K]=this[K]}}reset(){for(const C of this._keys)this._setDefaultValue(C)}_setDefaultValue(C){var U,K,m,O;const X=(null===(U=this._externalProperties)||void 0===U||null===(K=U[C])||void 0===K?void 0:K.type)??typeof this[C],A=null===(m=this._externalProperties)||void 0===m||null===(O=m[C])||void 0===O?void 0:O.default;switch(X){case"number":this[C]=A??0;break;case"string":this[C]=A??"";break;default:this[C]=A??!1}}toString(){let C="";for(let U=0;U<this._keys.length;U++){const K=this._keys[U],m=this[K];switch(typeof m){case"number":case"string":C+="#define "+K+" "+m+"\n";break;default:m&&(C+="#define "+K+"\n")}}return C}}},12218:(C,U,K)=>{K.d(U,{d:()=>O});var m=K(11735);class O{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(C){this._DiffuseTextureEnabled!==C&&(this._DiffuseTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(C){this._BaseWeightTextureEnabled!==C&&(this._BaseWeightTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(C){this._BaseDiffuseRoughnessTextureEnabled!==C&&(this._BaseDiffuseRoughnessTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(C){this._DetailTextureEnabled!==C&&(this._DetailTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(C){this._DecalMapEnabled!==C&&(this._DecalMapEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(C){this._AmbientTextureEnabled!==C&&(this._AmbientTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(C){this._OpacityTextureEnabled!==C&&(this._OpacityTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(C){this._ReflectionTextureEnabled!==C&&(this._ReflectionTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(C){this._EmissiveTextureEnabled!==C&&(this._EmissiveTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(C){this._SpecularTextureEnabled!==C&&(this._SpecularTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(C){this._BumpTextureEnabled!==C&&(this._BumpTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(C){this._LightmapTextureEnabled!==C&&(this._LightmapTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(C){this._RefractionTextureEnabled!==C&&(this._RefractionTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(C){this._ColorGradingTextureEnabled!==C&&(this._ColorGradingTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(C){this._FresnelEnabled!==C&&(this._FresnelEnabled=C,m.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(C){this._ClearCoatTextureEnabled!==C&&(this._ClearCoatTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(C){this._ClearCoatBumpTextureEnabled!==C&&(this._ClearCoatBumpTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(C){this._ClearCoatTintTextureEnabled!==C&&(this._ClearCoatTintTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(C){this._SheenTextureEnabled!==C&&(this._SheenTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(C){this._AnisotropicTextureEnabled!==C&&(this._AnisotropicTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(C){this._ThicknessTextureEnabled!==C&&(this._ThicknessTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(C){this._RefractionIntensityTextureEnabled!==C&&(this._RefractionIntensityTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(C){this._TranslucencyIntensityTextureEnabled!==C&&(this._TranslucencyIntensityTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(C){this._TranslucencyColorTextureEnabled!==C&&(this._TranslucencyColorTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(C){this._IridescenceTextureEnabled!==C&&(this._IridescenceTextureEnabled=C,m.b.MarkAllMaterialsAsDirty(1))}}O._DiffuseTextureEnabled=!0,O._BaseWeightTextureEnabled=!0,O._BaseDiffuseRoughnessTextureEnabled=!0,O._DetailTextureEnabled=!0,O._DecalMapEnabled=!0,O._AmbientTextureEnabled=!0,O._OpacityTextureEnabled=!0,O._ReflectionTextureEnabled=!0,O._EmissiveTextureEnabled=!0,O._SpecularTextureEnabled=!0,O._BumpTextureEnabled=!0,O._LightmapTextureEnabled=!0,O._RefractionTextureEnabled=!0,O._ColorGradingTextureEnabled=!0,O._FresnelEnabled=!0,O._ClearCoatTextureEnabled=!0,O._ClearCoatBumpTextureEnabled=!0,O._ClearCoatTintTextureEnabled=!0,O._SheenTextureEnabled=!0,O._AnisotropicTextureEnabled=!0,O._ThicknessTextureEnabled=!0,O._RefractionIntensityTextureEnabled=!0,O._TranslucencyIntensityTextureEnabled=!0,O._TranslucencyColorTextureEnabled=!0,O._IridescenceTextureEnabled=!0},12235:(C,U,K)=>{K.d(U,{c:()=>X});var m,O=K(11827);!function(C){C[C.Zero=0]="Zero",C[C.One=1]="One",C[C.MaxViewZ=2]="MaxViewZ"}(m||(m={}));class X{static CreateConfiguration(C){return X._Configurations[C]={defines:{},previousWorldMatrices:{},previousViewProjection:O.Matrix.Zero(),currentViewProjection:O.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},X._Configurations[C]}static DeleteConfiguration(C){delete X._Configurations[C]}static GetConfiguration(C){return X._Configurations[C]}static AddUniformsAndSamplers(C,U){C.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(C,U){for(const K of U)if(K.me)for(const U of K.me)U._removeDrawWrapper(C)}static PrepareDefines(C,U,K){if(!K._arePrePassDirty)return;const m=X._Configurations[C];if(!m)return;K.PREPASS=!0,K.PREPASS_COLOR=!1,K.PREPASS_COLOR_INDEX=-1;let O=0;for(let A=0;A<X.GeometryTextureDescriptions.length;A++){const C=X.GeometryTextureDescriptions[A],U=C.define,e=C.defineIndex,t=m.defines[e];void 0!==t?(K[U]=!0,K[e]=t,O++):(K[U]=!1,delete K[e])}K.SCENE_MRT_COUNT=O,K.BONES_VELOCITY_ENABLED=U.useBones&&U.computeBonesUsingShaders&&U.skeleton&&!U.skeleton.isUsingTextureForMatrices&&-1===m.excludedSkinnedMesh.indexOf(U)}static Bind(C,U,K,m,O){const A=X._Configurations[C];if(!A)return;const e=K.dC(),t=e.getEngine();if(A.reverseCulling&&t.setStateCullFaceType(e._mirroredCameraPosition?O.cullBackFaces:!O.cullBackFaces),(void 0!==A.defines.PREPASS_VELOCITY_INDEX||void 0!==A.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(A.previousWorldMatrices[K.uniqueId]||(A.previousWorldMatrices[K.uniqueId]=m.clone()),A.previousViewProjection||(A.previousViewProjection=e.getTransformMatrix().clone(),A.currentViewProjection=e.getTransformMatrix().clone()),A.currentViewProjection.updateFlag!==e.getTransformMatrix().updateFlag?(A.lastUpdateFrameId=t.frameId,A.previousViewProjection.m(A.currentViewProjection),A.currentViewProjection.m(e.getTransformMatrix())):A.lastUpdateFrameId!==t.frameId&&(A.lastUpdateFrameId=t.frameId,A.previousViewProjection.m(A.currentViewProjection)),U.setMatrix("previousWorld",A.previousWorldMatrices[K.uniqueId]),U.setMatrix("previousViewProjection",A.previousViewProjection),A.previousWorldMatrices[K.uniqueId]=m.clone(),K.useBones&&K.computeBonesUsingShaders&&K.skeleton)){const C=K.skeleton;if(!C.isUsingTextureForMatrices||-1===U.getUniformIndex("boneTextureWidth")){const m=C.getTransformMatrices(K);m&&(A.previousBones[K.uniqueId]||(A.previousBones[K.uniqueId]=m.slice()),U.setMatrices("mPreviousBones",A.previousBones[K.uniqueId]),A.previousBones[K.uniqueId].set(m))}}}}X.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],X._Configurations={}},12232:(C,U,K)=>{K.d(U,{b:()=>V});var m=K(11810),O=K(11818),X=K(12158),A=K(11703),e=K(11724),t=K(11747);const z=new RegExp("^([gimus]+)!");class j{constructor(C){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=C,this._scene=C.dC(),this._engine=this._scene.getEngine()}_addPlugin(C){for(let m=0;m<this._plugins.length;++m)if(this._plugins[m].name===C.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!C.isCompatible(this._material.shaderLanguage))throw`The plugin "${C.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const U=C.getClassName();j._MaterialPluginClassToMainDefine[U]||(j._MaterialPluginClassToMainDefine[U]="MATERIALPLUGIN_"+ ++j._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(C,U)=>this._handlePluginEvent(C,U),this._plugins.push(C),this._plugins.sort(((C,U)=>C.priority-U.priority)),this._codeInjectionPoints={};const K={};K[j._MaterialPluginClassToMainDefine[U]]={type:"boolean",default:!0};for(const m of this._plugins)m.collectDefines(K),this._collectPointNames("vertex",m.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",m.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=K,!0}_activatePlugin(C){-1===this._activePlugins.indexOf(C)&&(this._activePlugins.push(C),this._activePlugins.sort(((C,U)=>C.priority-U.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),C.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(C),this._activePluginsForExtraEvents.sort(((C,U)=>C.priority-U.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(C){for(let U=0;U<this._plugins.length;++U)if(this._plugins[U].name===C)return this._plugins[U];return null}_handlePluginEventIsReadyForSubMesh(C){let U=!0;for(const K of this._activePlugins)U=U&&K.isReadyForSubMesh(C.defines,this._scene,this._engine,C.subMesh);C.isReadyForSubMesh=U}_handlePluginEventPrepareDefinesBeforeAttributes(C){for(const U of this._activePlugins)U.prepareDefinesBeforeAttributes(C.defines,this._scene,C.mesh)}_handlePluginEventPrepareDefines(C){for(const U of this._activePlugins)U.prepareDefines(C.defines,this._scene,C.mesh)}_handlePluginEventHardBindForSubMesh(C){for(const U of this._activePluginsForExtraEvents)U.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,C.subMesh)}_handlePluginEventBindForSubMesh(C){for(const U of this._activePlugins)U.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,C.subMesh)}_handlePluginEventHasRenderTargetTextures(C){let U=!1;for(const K of this._activePluginsForExtraEvents)if(U=K.hasRenderTargetTextures(),U)break;C.hasRenderTargetTextures=U}_handlePluginEventFillRenderTargetTextures(C){for(const U of this._activePluginsForExtraEvents)U.fillRenderTargetTextures(C.renderTargets)}_handlePluginEvent(C,U){switch(C){case 512:{const C=U;for(const U of this._activePlugins)U.getActiveTextures(C.activeTextures);break}case 256:{const C=U;for(const U of this._activePlugins)U.getAnimatables(C.animatables);break}case 1024:{const C=U;let K=!1;for(const U of this._activePlugins)if(K=U.hasTexture(C.texture),K)break;C.hasTexture=K;break}case 2:{const C=U;for(const U of this._plugins)U.dispose(C.forceDisposeTextures);break}case 4:U.defineNames=this._defineNamesFromPlugins;break;case 128:{const C=U;for(const U of this._activePlugins)C.fallbackRank=U.addFallbacks(C.defines,C.fallbacks,C.fallbackRank),U.getAttributes(C.attributes,this._scene,C.mesh);this._uniformList.length>0&&C.uniforms.push(...this._uniformList),this._samplerList.length>0&&C.samplers.push(...this._samplerList),this._uboList.length>0&&C.uniformBuffersNames.push(...this._uboList),C.customCode=this._injectCustomCode(C,C.customCode);break}case 8:{const C=U;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const K=1===this._material.shaderLanguage;for(const U of this._plugins){const m=U.getUniforms(this._material.shaderLanguage);if(m){if(m.ubo)for(const U of m.ubo){if(U.size&&U.type){const m=U.arraySize??0;if(C.ubo.addUniform(U.name,U.size,m),K){let C;switch(U.type){case"mat4":C="mat4x4f";break;case"float":C="f32";break;default:C=`${U.type}f`}this._uboDeclaration+=m>0?`uniform ${U.name}: array<${C}, ${m}>;\n`:`uniform ${U.name}: ${C};\n`}else this._uboDeclaration+=`${U.type} ${U.name}${m>0?`[${m}]`:""};\n`}this._uniformList.push(U.name)}m.vertex&&(this._vertexDeclaration+=m.vertex+"\n"),m.fragment&&(this._fragmentDeclaration+=m.fragment+"\n")}U.getSamplers(this._samplerList),U.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(C,U){if(U)for(const K in U)this._codeInjectionPoints[C]||(this._codeInjectionPoints[C]={}),this._codeInjectionPoints[C][K]=!0}_injectCustomCode(C,U){return(K,m)=>{var O;U&&(m=U(K,m)),this._uboDeclaration&&(m=m.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(m=m.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(m=m.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const X=null===(O=this._codeInjectionPoints)||void 0===O?void 0:O[K];if(!X)return m;let A=null;for(let U in X){let O="";for(const m of this._activePlugins){var j;let X=null===(j=m.getCustomCode(K,this._material.shaderLanguage))||void 0===j?void 0:j[U];if(X){if(m.resolveIncludes){if(null===A){const U=0;A={defines:[],indexParameters:C.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:t.d.GetShadersRepository(U),includesShadersStore:t.d.GetIncludesShadersStore(U),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}A.isFragment="fragment"===K,(0,e.i)(X,A,(C=>X=C))}O+=X+"\n"}}if(O.length>0)if("!"===U.charAt(0)){U=U.substring(1);let C="g";if("!"===U.charAt(0))C="",U=U.substring(1);else{const K=z.exec(U);K&&K.length>=2&&(C=K[1],U=U.substring(C.length+1))}C.indexOf("g")<0&&(C+="g");const K=m,X=new RegExp(U,C);let A=X.exec(K);for(;null!==A;){let C=O;for(let U=0;U<A.length;++U)C=C.replace("$"+U,A[U]);m=m.replace(A[0],C),A=X.exec(K)}}else{const C="#define "+U;m=m.replace(C,"\n"+O+"\n"+C)}}return m}}}j._MaterialPluginClassToMainDefine={},j._MaterialPluginCounter=0,A.c.OnEnginesDisposedObservable.add((()=>{b()}));const p=[];let E=!1,u=null;function b(){p.length=0,E=!1,X.e.OnEventObservable.remove(u),u=null}var v=K(11863),Q=K(11789);class V{isCompatible(C){return 0===C}_enable(C){C&&this._pluginManager._activatePlugin(this)}constructor(C,U,K,m){let O=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],X=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=C,this.name=U,this.priority=K,this.resolveIncludes=A,C.pluginManager||(C.pluginManager=new j(C),C.RA.add((()=>{C.pluginManager=void 0}))),this._pluginDefineNames=m,this._pluginManager=C.pluginManager,O&&this._pluginManager._addPlugin(this),X&&this._enable(!0),this.markAllDefinesAsDirty=C._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(C,U,K,m){return!0}hardBindForSubMesh(C,U,K,m){}bindForSubMesh(C,U,K,m){}dispose(C){}getCustomCode(C){return null}collectDefines(C){if(this._pluginDefineNames)for(const U of Object.keys(this._pluginDefineNames)){if("_"===U[0])continue;const K=typeof this._pluginDefineNames[U];C[U]={type:"number"===K?"number":"string"===K?"string":"boolean"===K?"boolean":"object",default:this._pluginDefineNames[U]}}}prepareDefinesBeforeAttributes(C,U,K){}prepareDefines(C,U,K){}hasTexture(C){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(C){}getActiveTextures(C){}getAnimatables(C){}addFallbacks(C,U,K){return K}getSamplers(C){}getAttributes(C,U,K){}getUniformBuffersNames(C){}getUniforms(){return{}}copyTo(C){v.c.Clone((()=>C),this)}serialize(){return v.c.Serialize(this)}parse(C,U,K){v.c.Parse((()=>this),C,U,K)}}(0,m.d)([(0,O.O)()],V.prototype,"name",void 0),(0,m.d)([(0,O.O)()],V.prototype,"priority",void 0),(0,m.d)([(0,O.O)()],V.prototype,"resolveIncludes",void 0),(0,m.d)([(0,O.O)()],V.prototype,"registerForExtraEvents",void 0),(0,Q.h)("BABYLON.MaterialPluginBase",V)},12208:(C,U,K)=>{K.d(U,{c:()=>m});class m{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(C){C.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(C){}bindForSubMesh(C,U,K,m,O){if(U.prePassRenderer&&U.prePassRenderer.enabled&&U.prePassRenderer.currentRTisSceneRT&&(-1!==U.prePassRenderer.getIndex(2)||-1!==U.prePassRenderer.getIndex(11))){this.previousWorldMatrices[K.uniqueId]||(this.previousWorldMatrices[K.uniqueId]=m.clone()),this.previousViewProjection||(this.previousViewProjection=U.getTransformMatrix().clone(),this.currentViewProjection=U.getTransformMatrix().clone());const O=U.getEngine();this.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=O.frameId,this.previousViewProjection.m(this.currentViewProjection),this.currentViewProjection.m(U.getTransformMatrix())):this._lastUpdateFrameId!==O.frameId&&(this._lastUpdateFrameId=O.frameId,this.previousViewProjection.m(this.currentViewProjection)),C.setMatrix("previousWorld",this.previousWorldMatrices[K.uniqueId]),C.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[K.uniqueId]=m.clone()}}}},12205:(C,U,K)=>{K.d(U,{VU:()=>y});var m=K(11810),O=K(11818),X=K(11930),A=K(12078),e=K(11879),t=K(11905),z=K(12208),j=K(12084),p=K(12158),E=K(12216),u=K(12150),b=K(11808),v=K(11789),Q=K(12218),V=K(12148),f=K(12227),F=K(12200),Z=K(12198),P=K(11863),H=K(12235);const d={effect:null,subMesh:null};class T extends E.e{constructor(C){super(C),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(C){const U=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const K of U)this[K]=K===C}}class y extends u.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(C){this._attachImageProcessingConfiguration(C),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(C){C!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=C||this.dC().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(C){this.imageProcessingConfiguration.colorCurvesEnabled=C}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(C){this.imageProcessingConfiguration.colorGradingEnabled=C}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(C){this._imageProcessingConfiguration.toneMappingEnabled=C}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(C){this._imageProcessingConfiguration.exposure=C}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(C){this._imageProcessingConfiguration.contrast=C}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(C){this._imageProcessingConfiguration.colorGradingTexture=C}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(C){this._imageProcessingConfiguration.colorCurves=C}get canRenderToMRT(){return!0}constructor(C,U){super(C,U,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||y.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new e.fU(0,0,0),this.diffuseColor=new e.fU(1,1,1),this.specularColor=new e.fU(1,1,1),this.emissiveColor=new e.fU(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new X.d(16),this._globalAmbientColor=new e.fU(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new f.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new z.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),y.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),y.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(y.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(y.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"VU"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===p.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Xe&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==p.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Xe||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(C,U){let m=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const O=U._drawWrapper;if(O.effect&&this.isFrozen&&O._wasPreviouslyReady&&O._wasPreviouslyUsingInstances===m)return!0;U.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),U.materialDefines=new T(this._eventInfo.defineNames));const X=this.dC(),A=U.materialDefines;if(this._isReadyForSubMesh(U))return!0;const e=X.getEngine();A._needNormals=(0,Z.L)(X,C,A,!0,this._maxSimultaneousLights,this._disableLighting),(0,Z.R)(X,A);const p=this.needAlphaBlendingForMesh(C)&&this.dC().useOrderIndependentTransparency;if((0,Z.T)(X,A,this.canRenderToMRT&&!p),(0,Z.S)(X,A,p),H.c.PrepareDefines(e.currentRenderPassId,C,A),A._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,A._needUVs=!1;for(let C=1;C<=6;++C)A["MAINUV"+C]=!1;if(X.texturesEnabled){if(A.DIFFUSEDIRECTUV=0,A.BUMPDIRECTUV=0,A.AMBIENTDIRECTUV=0,A.OPACITYDIRECTUV=0,A.EMISSIVEDIRECTUV=0,A.SPECULARDIRECTUV=0,A.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&y.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._diffuseTexture,A,"DIFFUSE")}else A.DIFFUSE=!1;if(this._ambientTexture&&y.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._ambientTexture,A,"AMBIENT")}else A.AMBIENT=!1;if(this._opacityTexture&&y.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._opacityTexture,A,"OPACITY"),A.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else A.OPACITY=!1;if(this._reflectionTexture&&y.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(A._needNormals=!0,A.REFLECTION=!0,A.ROUGHNESS=this._roughness>0,A.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,A.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===b.b.INVCUBIC_MODE,A.REFLECTIONMAP_3D=this._reflectionTexture.isCube,A.REFLECTIONMAP_OPPOSITEZ=A.REFLECTIONMAP_3D&&this.dC().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,A.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case b.b.EXPLICIT_MODE:A.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case b.b.PLANAR_MODE:A.setReflectionMode("REFLECTIONMAP_PLANAR");break;case b.b.PROJECTION_MODE:A.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case b.b.SKYBOX_MODE:A.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case b.b.SPHERICAL_MODE:A.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case b.b.EQUIRECTANGULAR_MODE:A.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case b.b.FIXED_EQUIRECTANGULAR_MODE:A.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case b.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:A.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case b.b.CUBIC_MODE:case b.b.INVCUBIC_MODE:default:A.setReflectionMode("REFLECTIONMAP_CUBIC")}A.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else A.REFLECTION=!1,A.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&y.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._emissiveTexture,A,"EMISSIVE")}else A.EMISSIVE=!1;if(this._lightmapTexture&&y.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._lightmapTexture,A,"LIGHTMAP"),A.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,A.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else A.LIGHTMAP=!1;if(this._specularTexture&&y.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Z.M)(this._specularTexture,A,"SPECULAR"),A.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else A.SPECULAR=!1;if(X.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&y.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Z.M)(this._bumpTexture,A,"BUMP"),A.PARALLAX=this._useParallax,A.PARALLAX_RHS=X.useRightHandedSystem,A.PARALLAXOCCLUSION=this._useParallaxOcclusion,A.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else A.BUMP=!1,A.PARALLAX=!1,A.PARALLAX_RHS=!1,A.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&y.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;A._needUVs=!0,A.REFRACTION=!0,A.REFRACTIONMAP_3D=this._refractionTexture.isCube,A.RGBDREFRACTION=this._refractionTexture.isRGBD,A.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else A.REFRACTION=!1;A.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else A.DIFFUSE=!1,A.AMBIENT=!1,A.OPACITY=!1,A.REFLECTION=!1,A.EMISSIVE=!1,A.LIGHTMAP=!1,A.BUMP=!1,A.REFRACTION=!1;A.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),A.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,A.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,A.SPECULAROVERALPHA=this._useSpecularOverAlpha,A.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,A.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,A.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(C)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=A,this._eventInfo.subMesh=U,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(A._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(A),A.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,A.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(A._areFresnelDirty&&(y.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(A.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,A.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,A.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,A.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,A.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,A.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,A._needNormals=!0,A.FRESNEL=!0):A.FRESNEL=!1),A.AREALIGHTUSED)for(let K=0;K<C.lightSources.length;K++)if(!C.lightSources[K]._isReady())return!1;(0,Z.O)(C,X,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(C),A,this._applyDecalMapAfterDetailMap),(0,Z.J)(X,e,this,A,m,null,U.getRenderingMesh().hasThinInstances),this._eventInfo.defines=A,this._eventInfo.mesh=C,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Z.H)(C,A,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let E=!1;if(A.isDirty){const m=A._areLightsDisposed;A.markAsProcessed();const O=new V.d;A.REFLECTION&&O.addFallback(0,"REFLECTION"),A.SPECULAR&&O.addFallback(0,"SPECULAR"),A.BUMP&&O.addFallback(0,"BUMP"),A.PARALLAX&&O.addFallback(1,"PARALLAX"),A.PARALLAX_RHS&&O.addFallback(1,"PARALLAX_RHS"),A.PARALLAXOCCLUSION&&O.addFallback(0,"PARALLAXOCCLUSION"),A.SPECULAROVERALPHA&&O.addFallback(0,"SPECULAROVERALPHA"),A.FOG&&O.addFallback(1,"FOG"),A.POINTSIZE&&O.addFallback(0,"POINTSIZE"),A.LOGARITHMICDEPTH&&O.addFallback(0,"LOGARITHMICDEPTH"),(0,Z.w)(A,O,this._maxSimultaneousLights),A.SPECULARTERM&&O.addFallback(0,"SPECULARTERM"),A.DIFFUSEFRESNEL&&O.addFallback(1,"DIFFUSEFRESNEL"),A.OPACITYFRESNEL&&O.addFallback(2,"OPACITYFRESNEL"),A.REFLECTIONFRESNEL&&O.addFallback(3,"REFLECTIONFRESNEL"),A.EMISSIVEFRESNEL&&O.addFallback(4,"EMISSIVEFRESNEL"),A.FRESNEL&&O.addFallback(4,"FRESNEL"),A.MULTIVIEW&&O.addFallback(0,"MULTIVIEW");const p=[t.d.PositionKind];A.NORMAL&&p.push(t.d.NormalKind),A.TANGENT&&p.push(t.d.TangentKind);for(let C=1;C<=6;++C)A["UV"+C]&&p.push(`uv${1===C?"":C}`);A.VERTEXCOLOR&&p.push(t.d.ColorKind),(0,Z.z)(p,C,A,O),(0,Z.A)(p,A),(0,Z.C)(p,C,A),(0,Z.y)(p,C,A);let u="default";const b=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],v=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],Q=["Material","Scene","Mesh"],f={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:A.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=O,this._eventInfo.fallbackRank=0,this._eventInfo.defines=A,this._eventInfo.uniforms=b,this._eventInfo.attributes=p,this._eventInfo.samplers=v,this._eventInfo.uniformBuffersNames=Q,this._eventInfo.customCode=void 0,this._eventInfo.mesh=C,this._eventInfo.indexParameters=f,this._callbackPluginEventGeneric(128,this._eventInfo),H.c.AddUniformsAndSamplers(b,v),z.c.AddUniforms(b),z.c.AddSamplers(v),j.c&&(j.c.PrepareUniforms(b,A),j.c.PrepareSamplers(v,A)),(0,Z.V)({uniformsNames:b,uniformBuffersNames:Q,samplers:v,defines:A,maxSimultaneousLights:this._maxSimultaneousLights}),(0,F.d)(b);const P={};this.customShaderNameResolve&&(u=this.customShaderNameResolve(u,b,Q,v,A,p,P));const T=A.toString(),y=U.effect;let a=X.getEngine().createEffect(u,{attributes:p,uniformsNames:b,uniformBuffersNames:Q,samplers:v,defines:T,fallbacks:O,onCompiled:this.onCompiled,onError:this.onError,indexParameters:f,processFinalCode:P.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:A.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([K.e(41),K.e(64)]).then(K.bind(K,14348)),Promise.all([K.e(39),K.e(65)]).then(K.bind(K,14491))]):await Promise.all([Promise.all([K.e(34),K.e(67)]).then(K.bind(K,14581)),Promise.all([K.e(33),K.e(68)]).then(K.bind(K,14746))]),this._shadersLoaded=!0}},e);if(this._eventInfo.customCode=void 0,a)if(this._onEffectCreatedObservable&&(d.effect=a,d.subMesh=U,this._onEffectCreatedObservable.notifyObservers(d)),this.allowShaderHotSwapping&&y&&!a.isReady()){if(a=y,A.markAsUnprocessed(),E=this.isFrozen,m)return A._areLightsDisposed=!0,!1}else X.resetCachedMaterial(),U.setEffect(a,A,this._materialContext)}return!(!U.effect||!U.effect.isReady())&&(A._renderId=X.getRenderId(),O._wasPreviouslyReady=!E,O._wasPreviouslyUsingInstances=m,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const C=this._uniformBuffer;C.addUniform("diffuseLeftColor",4),C.addUniform("diffuseRightColor",4),C.addUniform("opacityParts",4),C.addUniform("reflectionLeftColor",4),C.addUniform("reflectionRightColor",4),C.addUniform("refractionLeftColor",4),C.addUniform("refractionRightColor",4),C.addUniform("emissiveLeftColor",4),C.addUniform("emissiveRightColor",4),C.addUniform("vDiffuseInfos",2),C.addUniform("vAmbientInfos",2),C.addUniform("vOpacityInfos",2),C.addUniform("vReflectionInfos",2),C.addUniform("vReflectionPosition",3),C.addUniform("vReflectionSize",3),C.addUniform("vEmissiveInfos",2),C.addUniform("vLightmapInfos",2),C.addUniform("vSpecularInfos",2),C.addUniform("vBumpInfos",3),C.addUniform("diffuseMatrix",16),C.addUniform("ambientMatrix",16),C.addUniform("opacityMatrix",16),C.addUniform("reflectionMatrix",16),C.addUniform("emissiveMatrix",16),C.addUniform("lightmapMatrix",16),C.addUniform("specularMatrix",16),C.addUniform("bumpMatrix",16),C.addUniform("vTangentSpaceParams",2),C.addUniform("pointSize",1),C.addUniform("alphaCutOff",1),C.addUniform("refractionMatrix",16),C.addUniform("vRefractionInfos",4),C.addUniform("vRefractionPosition",3),C.addUniform("vRefractionSize",3),C.addUniform("vSpecularColor",4),C.addUniform("vEmissiveColor",3),C.addUniform("vDiffuseColor",4),C.addUniform("vAmbientColor",3),C.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(C,U,K){const m=this.dC(),O=K.materialDefines;if(!O)return;const X=K.effect;if(!X)return;this._activeEffect=X,U.getMeshUniformBuffer().bindToEffect(X,"Mesh"),U.transferToEffect(C),this._uniformBuffer.bindToEffect(X,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,m,U,C,this.isFrozen),H.c.Bind(m.getEngine().currentRenderPassId,this._activeEffect,U,C,this);const t=m.activeCamera;t?this._uniformBuffer.updateFloat4("cameraInfo",t.Ae,t.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=K,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),O.OBJECTSPACE_NORMALMAP&&(C.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const z=this._mustRebind(m,X,K,U.visibility);(0,Z.b)(U,X);const j=this._uniformBuffer;if(z){if(this.bindViewProjection(X),!j.useUbo||!this.isFrozen||!j.isSync||K._drawWrapper._forceRebindOnNextCall){if(y.FresnelEnabled&&O.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(j.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),j.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&j.updateColor4("opacityParts",new e.fU(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(j.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),j.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(j.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),j.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(j.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),j.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),m.texturesEnabled){if(this._diffuseTexture&&y.DiffuseTextureEnabled&&(j.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Z.v)(this._diffuseTexture,j,"diffuse")),this._ambientTexture&&y.AmbientTextureEnabled&&(j.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Z.v)(this._ambientTexture,j,"ambient")),this._opacityTexture&&y.OpacityTextureEnabled&&(j.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Z.v)(this._opacityTexture,j,"opacity")),this._hasAlphaChannel()&&j.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&y.ReflectionTextureEnabled){if(j.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),j.ee("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const C=this._reflectionTexture;j.updateVector3("vReflectionPosition",C.boundingBoxPosition),j.updateVector3("vReflectionSize",C.boundingBoxSize)}}else j.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&y.EmissiveTextureEnabled&&(j.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Z.v)(this._emissiveTexture,j,"emissive")),this._lightmapTexture&&y.LightmapTextureEnabled&&(j.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Z.v)(this._lightmapTexture,j,"lightmap")),this._specularTexture&&y.SpecularTextureEnabled&&(j.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Z.v)(this._specularTexture,j,"specular")),this._bumpTexture&&m.getEngine().getCaps().standardDerivatives&&y.BumpTextureEnabled&&(j.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Z.v)(this._bumpTexture,j,"bump"),m._mirroredCameraPosition?j.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):j.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&y.RefractionTextureEnabled){let C=1;if(this._refractionTexture.isCube||(j.ee("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(C=this._refractionTexture.depth)),j.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,C,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const C=this._refractionTexture;j.updateVector3("vRefractionPosition",C.boundingBoxPosition),j.updateVector3("vRefractionSize",C.boundingBoxSize)}}}this.pointsCloud&&j.updateFloat("pointSize",this.pointSize),j.updateColor4("vSpecularColor",this.specularColor,this.specularPower),j.updateColor3("vEmissiveColor",y.EmissiveTextureEnabled?this.emissiveColor:e.fU.BlackReadOnly),j.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),m.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),j.updateColor3("vAmbientColor",this._globalAmbientColor)}m.texturesEnabled&&(this._diffuseTexture&&y.DiffuseTextureEnabled&&X.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&y.AmbientTextureEnabled&&X.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&y.OpacityTextureEnabled&&X.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&y.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?X.setTexture("reflectionCubeSampler",this._reflectionTexture):X.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&y.EmissiveTextureEnabled&&X.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&y.LightmapTextureEnabled&&X.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&y.SpecularTextureEnabled&&X.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&m.getEngine().getCaps().standardDerivatives&&y.BumpTextureEnabled&&X.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&y.RefractionTextureEnabled&&(this._refractionTexture.isCube?X.setTexture("refractionCubeSampler",this._refractionTexture):X.setTexture("refraction2DSampler",this._refractionTexture))),this.dC().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(U)&&this.dC().depthPeelingRenderer.bind(X),this._eventInfo.subMesh=K,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,F.f)(X,this,m),this.bindEyePosition(X)}else m.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(z||!this.isFrozen){var p;if(m.lightsEnabled&&!this._disableLighting&&(0,Z.g)(m,U,X,O,this._maxSimultaneousLights),(m.fogEnabled&&U.applyFog&&m.fogMode!==A.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||U.receiveShadows||O.PREPASS)&&this.bindView(X),(0,Z.f)(m,U,X),O.NUM_MORPH_INFLUENCERS&&(0,Z.n)(U,X),O.BAKED_VERTEX_ANIMATION_TEXTURE)null===(p=U.bakedVertexAnimationManager)||void 0===p||p.bind(X,O.INSTANCES);this.useLogarithmicDepth&&(0,Z.k)(O,X,m),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(U,this._activeEffect,K),j.update()}getAnimatables(){const C=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&C.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&C.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&C.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&C.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&C.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&C.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&C.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&C.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&C.push(this._refractionTexture),C}getActiveTextures(){const C=super.getActiveTextures();return this._diffuseTexture&&C.push(this._diffuseTexture),this._ambientTexture&&C.push(this._ambientTexture),this._opacityTexture&&C.push(this._opacityTexture),this._reflectionTexture&&C.push(this._reflectionTexture),this._emissiveTexture&&C.push(this._emissiveTexture),this._specularTexture&&C.push(this._specularTexture),this._bumpTexture&&C.push(this._bumpTexture),this._lightmapTexture&&C.push(this._lightmapTexture),this._refractionTexture&&C.push(this._refractionTexture),C}hasTexture(C){return!!super.hasTexture(C)||(this._diffuseTexture===C||(this._ambientTexture===C||(this._opacityTexture===C||(this._reflectionTexture===C||(this._emissiveTexture===C||(this._specularTexture===C||(this._bumpTexture===C||(this._lightmapTexture===C||this._refractionTexture===C))))))))}dispose(C,U){var K,m,O,X,A,e,t,z,j;U&&(null===(K=this._diffuseTexture)||void 0===K||K.dispose(),null===(m=this._ambientTexture)||void 0===m||m.dispose(),null===(O=this._opacityTexture)||void 0===O||O.dispose(),null===(X=this._reflectionTexture)||void 0===X||X.dispose(),null===(A=this._emissiveTexture)||void 0===A||A.dispose(),null===(e=this._specularTexture)||void 0===e||e.dispose(),null===(t=this._bumpTexture)||void 0===t||t.dispose(),null===(z=this._lightmapTexture)||void 0===z||z.dispose(),null===(j=this._refractionTexture)||void 0===j||j.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(C,U)}clone(C){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],K=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const m=P.c.Clone((()=>new y(C,this.dC())),this,{cloneTexturesOnlyOnce:U});return m.name=C,m.id=C,this.stencil.copyTo(m.stencil),this._clonePlugins(m,K),m}static Parse(C,U,K){const m=P.c.Parse((()=>new y(C.name,U)),C,U,K);return C.stencil&&m.stencil.parse(C.stencil,U,K),p.e._ParsePlugins(C,m,U,K),m}static get DiffuseTextureEnabled(){return Q.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(C){Q.d.DiffuseTextureEnabled=C}static get DetailTextureEnabled(){return Q.d.DetailTextureEnabled}static set DetailTextureEnabled(C){Q.d.DetailTextureEnabled=C}static get AmbientTextureEnabled(){return Q.d.AmbientTextureEnabled}static set AmbientTextureEnabled(C){Q.d.AmbientTextureEnabled=C}static get OpacityTextureEnabled(){return Q.d.OpacityTextureEnabled}static set OpacityTextureEnabled(C){Q.d.OpacityTextureEnabled=C}static get ReflectionTextureEnabled(){return Q.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(C){Q.d.ReflectionTextureEnabled=C}static get EmissiveTextureEnabled(){return Q.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(C){Q.d.EmissiveTextureEnabled=C}static get SpecularTextureEnabled(){return Q.d.SpecularTextureEnabled}static set SpecularTextureEnabled(C){Q.d.SpecularTextureEnabled=C}static get BumpTextureEnabled(){return Q.d.BumpTextureEnabled}static set BumpTextureEnabled(C){Q.d.BumpTextureEnabled=C}static get LightmapTextureEnabled(){return Q.d.LightmapTextureEnabled}static set LightmapTextureEnabled(C){Q.d.LightmapTextureEnabled=C}static get RefractionTextureEnabled(){return Q.d.RefractionTextureEnabled}static set RefractionTextureEnabled(C){Q.d.RefractionTextureEnabled=C}static get ColorGradingTextureEnabled(){return Q.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(C){Q.d.ColorGradingTextureEnabled=C}static get FresnelEnabled(){return Q.d.FresnelEnabled}static set FresnelEnabled(C){Q.d.FresnelEnabled=C}}y.ForceGLSL=!1,(0,m.d)([(0,O.D)("diffuseTexture")],y.prototype,"_diffuseTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"diffuseTexture",void 0),(0,m.d)([(0,O.D)("ambientTexture")],y.prototype,"_ambientTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"ambientTexture",void 0),(0,m.d)([(0,O.D)("opacityTexture")],y.prototype,"_opacityTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"opacityTexture",void 0),(0,m.d)([(0,O.D)("reflectionTexture")],y.prototype,"_reflectionTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"reflectionTexture",void 0),(0,m.d)([(0,O.D)("emissiveTexture")],y.prototype,"_emissiveTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"emissiveTexture",void 0),(0,m.d)([(0,O.D)("specularTexture")],y.prototype,"_specularTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"specularTexture",void 0),(0,m.d)([(0,O.D)("bumpTexture")],y.prototype,"_bumpTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"bumpTexture",void 0),(0,m.d)([(0,O.D)("lightmapTexture")],y.prototype,"_lightmapTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"lightmapTexture",void 0),(0,m.d)([(0,O.D)("refractionTexture")],y.prototype,"_refractionTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"refractionTexture",void 0),(0,m.d)([(0,O.o)("ambient")],y.prototype,"ambientColor",void 0),(0,m.d)([(0,O.o)("diffuse")],y.prototype,"diffuseColor",void 0),(0,m.d)([(0,O.o)("specular")],y.prototype,"specularColor",void 0),(0,m.d)([(0,O.o)("emissive")],y.prototype,"emissiveColor",void 0),(0,m.d)([(0,O.O)()],y.prototype,"specularPower",void 0),(0,m.d)([(0,O.O)("useAlphaFromDiffuseTexture")],y.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"useAlphaFromDiffuseTexture",void 0),(0,m.d)([(0,O.O)("useEmissiveAsIllumination")],y.prototype,"_useEmissiveAsIllumination",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useEmissiveAsIllumination",void 0),(0,m.d)([(0,O.O)("linkEmissiveWithDiffuse")],y.prototype,"_linkEmissiveWithDiffuse",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"linkEmissiveWithDiffuse",void 0),(0,m.d)([(0,O.O)("useSpecularOverAlpha")],y.prototype,"_useSpecularOverAlpha",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useSpecularOverAlpha",void 0),(0,m.d)([(0,O.O)("useReflectionOverAlpha")],y.prototype,"_useReflectionOverAlpha",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useReflectionOverAlpha",void 0),(0,m.d)([(0,O.O)("disableLighting")],y.prototype,"_disableLighting",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsLightsDirty")],y.prototype,"disableLighting",void 0),(0,m.d)([(0,O.O)("useObjectSpaceNormalMap")],y.prototype,"_useObjectSpaceNormalMap",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useObjectSpaceNormalMap",void 0),(0,m.d)([(0,O.O)("useParallax")],y.prototype,"_useParallax",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useParallax",void 0),(0,m.d)([(0,O.O)("useParallaxOcclusion")],y.prototype,"_useParallaxOcclusion",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useParallaxOcclusion",void 0),(0,m.d)([(0,O.O)()],y.prototype,"parallaxScaleBias",void 0),(0,m.d)([(0,O.O)("roughness")],y.prototype,"_roughness",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"roughness",void 0),(0,m.d)([(0,O.O)()],y.prototype,"indexOfRefraction",void 0),(0,m.d)([(0,O.O)()],y.prototype,"invertRefractionY",void 0),(0,m.d)([(0,O.O)()],y.prototype,"alphaCutOff",void 0),(0,m.d)([(0,O.O)("useLightmapAsShadowmap")],y.prototype,"_useLightmapAsShadowmap",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useLightmapAsShadowmap",void 0),(0,m.d)([(0,O.t)("diffuseFresnelParameters")],y.prototype,"_diffuseFresnelParameters",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"diffuseFresnelParameters",void 0),(0,m.d)([(0,O.t)("opacityFresnelParameters")],y.prototype,"_opacityFresnelParameters",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],y.prototype,"opacityFresnelParameters",void 0),(0,m.d)([(0,O.t)("reflectionFresnelParameters")],y.prototype,"_reflectionFresnelParameters",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"reflectionFresnelParameters",void 0),(0,m.d)([(0,O.t)("refractionFresnelParameters")],y.prototype,"_refractionFresnelParameters",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"refractionFresnelParameters",void 0),(0,m.d)([(0,O.t)("emissiveFresnelParameters")],y.prototype,"_emissiveFresnelParameters",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"emissiveFresnelParameters",void 0),(0,m.d)([(0,O.O)("useReflectionFresnelFromSpecular")],y.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"useReflectionFresnelFromSpecular",void 0),(0,m.d)([(0,O.O)("useGlossinessFromSpecularMapAlpha")],y.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,m.d)([(0,O.O)("maxSimultaneousLights")],y.prototype,"_maxSimultaneousLights",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsLightsDirty")],y.prototype,"maxSimultaneousLights",void 0),(0,m.d)([(0,O.O)("invertNormalMapX")],y.prototype,"_invertNormalMapX",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"invertNormalMapX",void 0),(0,m.d)([(0,O.O)("invertNormalMapY")],y.prototype,"_invertNormalMapY",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"invertNormalMapY",void 0),(0,m.d)([(0,O.O)("twoSidedLighting")],y.prototype,"_twoSidedLighting",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"twoSidedLighting",void 0),(0,m.d)([(0,O.O)("applyDecalMapAfterDetailMap")],y.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,m.d)([(0,O.d)("_markAllSubMeshesAsMiscDirty")],y.prototype,"applyDecalMapAfterDetailMap",void 0),(0,v.h)("BABYLON.StandardMaterial",y),A.b.DefaultMaterialFactory=C=>new y("default material",C)}}]);