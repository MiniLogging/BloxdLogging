"use strict";(self.hbnkweqmycf=self.hbnkweqmycf||[]).push([[25],{12003:(F,P,f)=>{f.d(P,{d:()=>u});var c=f(11619),N=f(11937),q=f(11628),H=f(12001),A=f(11994),o=f(12011),j=f(11973);class i extends A.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class u extends o.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(F){let P=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(F,"DetailMap",140,new i,P),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=N.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=F._dirtyCallbacks[1]}isReadyForSubMesh(F,P,f){return!this._isEnabled||!(F._areTexturesDirty&&P.texturesEnabled&&f.getCaps().standardDerivatives&&this._texture&&H.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(F,P){if(this._isEnabled){F.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const f=P.getEngine();F._areTexturesDirty&&(f.getCaps().standardDerivatives&&this._texture&&H.c.DetailTextureEnabled&&this._isEnabled?((0,j.Y)(this._texture,F,"DETAIL"),F.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):F.DETAIL=!1)}else F.DETAIL=!1}bindForSubMesh(F,P){if(!this._isEnabled)return;const f=this._material.isFrozen;F.useUbo&&f&&F.isSync||this._texture&&H.c.DetailTextureEnabled&&(F.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,j.v)(this._texture,F,"detail")),P.texturesEnabled&&this._texture&&H.c.DetailTextureEnabled&&F.setTexture("detailSampler",this._texture)}hasTexture(F){return this._texture===F}getActiveTextures(F){this._texture&&F.push(this._texture)}getAnimatables(F){this._texture&&this._texture.animations&&this._texture.animations.length>0&&F.push(this._texture)}dispose(F){var P;F&&(null===(P=this._texture)||void 0===P||P.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(F){F.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,c.e)([(0,q.B)("detailTexture"),(0,q.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"texture",void 0),(0,c.e)([(0,q.L)()],u.prototype,"diffuseBlendLevel",void 0),(0,c.e)([(0,q.L)()],u.prototype,"roughnessBlendLevel",void 0),(0,c.e)([(0,q.L)()],u.prototype,"bumpLevel",void 0),(0,c.e)([(0,q.L)(),(0,q.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"normalBlendMethod",void 0),(0,c.e)([(0,q.L)(),(0,q.e)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"isEnabled",void 0)},11994:(F,P,f)=>{f.d(P,{c:()=>c});class c{constructor(F){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=F,F)for(const P in F)Object.prototype.hasOwnProperty.call(F,P)&&this._setDefaultValue(P)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let F=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||F,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const F of Object.keys(this))"_"!==F[0]&&this._keys.push(F);if(this._externalProperties)for(const F in this._externalProperties)-1===this._keys.indexOf(F)&&this._keys.push(F)}isEqual(F){if(this._keys.length!==F._keys.length)return!1;for(let P=0;P<this._keys.length;P++){const f=this._keys[P];if(this[f]!==F[f])return!1}return!0}cloneTo(F){this._keys.length!==F._keys.length&&(F._keys=this._keys.slice(0));for(let P=0;P<this._keys.length;P++){const f=this._keys[P];F[f]=this[f]}}reset(){for(const F of this._keys)this._setDefaultValue(F)}_setDefaultValue(F){var P,f,c,N;const q=(null===(P=this._externalProperties)||void 0===P||null===(f=P[F])||void 0===f?void 0:f.type)??typeof this[F],H=null===(c=this._externalProperties)||void 0===c||null===(N=c[F])||void 0===N?void 0:N.default;switch(q){case"number":this[F]=H??0;break;case"string":this[F]=H??"";break;default:this[F]=H??!1}}toString(){let F="";for(let P=0;P<this._keys.length;P++){const f=this._keys[P],c=this[f];switch(typeof c){case"number":case"string":F+="#define "+f+" "+c+"\n";break;default:c&&(F+="#define "+f+"\n")}}return F}}},12001:(F,P,f)=>{f.d(P,{c:()=>N});var c=f(11541);class N{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(F){this._DiffuseTextureEnabled!==F&&(this._DiffuseTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(F){this._BaseWeightTextureEnabled!==F&&(this._BaseWeightTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(F){this._BaseDiffuseRoughnessTextureEnabled!==F&&(this._BaseDiffuseRoughnessTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(F){this._DetailTextureEnabled!==F&&(this._DetailTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(F){this._DecalMapEnabled!==F&&(this._DecalMapEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(F){this._AmbientTextureEnabled!==F&&(this._AmbientTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(F){this._OpacityTextureEnabled!==F&&(this._OpacityTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(F){this._ReflectionTextureEnabled!==F&&(this._ReflectionTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(F){this._EmissiveTextureEnabled!==F&&(this._EmissiveTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(F){this._SpecularTextureEnabled!==F&&(this._SpecularTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(F){this._BumpTextureEnabled!==F&&(this._BumpTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(F){this._LightmapTextureEnabled!==F&&(this._LightmapTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(F){this._RefractionTextureEnabled!==F&&(this._RefractionTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(F){this._ColorGradingTextureEnabled!==F&&(this._ColorGradingTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(F){this._FresnelEnabled!==F&&(this._FresnelEnabled=F,c.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(F){this._ClearCoatTextureEnabled!==F&&(this._ClearCoatTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(F){this._ClearCoatBumpTextureEnabled!==F&&(this._ClearCoatBumpTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(F){this._ClearCoatTintTextureEnabled!==F&&(this._ClearCoatTintTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(F){this._SheenTextureEnabled!==F&&(this._SheenTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(F){this._AnisotropicTextureEnabled!==F&&(this._AnisotropicTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(F){this._ThicknessTextureEnabled!==F&&(this._ThicknessTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(F){this._RefractionIntensityTextureEnabled!==F&&(this._RefractionIntensityTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(F){this._TranslucencyIntensityTextureEnabled!==F&&(this._TranslucencyIntensityTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(F){this._TranslucencyColorTextureEnabled!==F&&(this._TranslucencyColorTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(F){this._IridescenceTextureEnabled!==F&&(this._IridescenceTextureEnabled=F,c.b.MarkAllMaterialsAsDirty(1))}}N._DiffuseTextureEnabled=!0,N._BaseWeightTextureEnabled=!0,N._BaseDiffuseRoughnessTextureEnabled=!0,N._DetailTextureEnabled=!0,N._DecalMapEnabled=!0,N._AmbientTextureEnabled=!0,N._OpacityTextureEnabled=!0,N._ReflectionTextureEnabled=!0,N._EmissiveTextureEnabled=!0,N._SpecularTextureEnabled=!0,N._BumpTextureEnabled=!0,N._LightmapTextureEnabled=!0,N._RefractionTextureEnabled=!0,N._ColorGradingTextureEnabled=!0,N._FresnelEnabled=!0,N._ClearCoatTextureEnabled=!0,N._ClearCoatBumpTextureEnabled=!0,N._ClearCoatTintTextureEnabled=!0,N._SheenTextureEnabled=!0,N._AnisotropicTextureEnabled=!0,N._ThicknessTextureEnabled=!0,N._RefractionIntensityTextureEnabled=!0,N._TranslucencyIntensityTextureEnabled=!0,N._TranslucencyColorTextureEnabled=!0,N._IridescenceTextureEnabled=!0},12013:(F,P,f)=>{f.d(P,{c:()=>q});var c,N=f(11639);!function(F){F[F.Zero=0]="Zero",F[F.One=1]="One",F[F.MaxViewZ=2]="MaxViewZ"}(c||(c={}));class q{static CreateConfiguration(F){return q._Configurations[F]={defines:{},previousWorldMatrices:{},previousViewProjection:N.Matrix.Zero(),currentViewProjection:N.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},q._Configurations[F]}static DeleteConfiguration(F){delete q._Configurations[F]}static GetConfiguration(F){return q._Configurations[F]}static AddUniformsAndSamplers(F,P){F.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(F,P){for(const f of P)if(f.nf)for(const P of f.nf)P._removeDrawWrapper(F)}static PrepareDefines(F,P,f){if(!f._arePrePassDirty)return;const c=q._Configurations[F];if(!c)return;f.PREPASS=!0,f.PREPASS_COLOR=!1,f.PREPASS_COLOR_INDEX=-1;let N=0;for(let H=0;H<q.GeometryTextureDescriptions.length;H++){const F=q.GeometryTextureDescriptions[H],P=F.define,A=F.defineIndex,o=c.defines[A];void 0!==o?(f[P]=!0,f[A]=o,N++):(f[P]=!1,delete f[A])}f.SCENE_MRT_COUNT=N,f.BONES_VELOCITY_ENABLED=P.useBones&&P.computeBonesUsingShaders&&P.skeleton&&!P.skeleton.isUsingTextureForMatrices&&-1===c.excludedSkinnedMesh.indexOf(P)}static Bind(F,P,f,c,N){const H=q._Configurations[F];if(!H)return;const A=f.OF(),o=A.getEngine();if(H.reverseCulling&&o.setStateCullFaceType(A._mirroredCameraPosition?N.cullBackFaces:!N.cullBackFaces),(void 0!==H.defines.PREPASS_VELOCITY_INDEX||void 0!==H.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(H.previousWorldMatrices[f.uniqueId]||(H.previousWorldMatrices[f.uniqueId]=c.clone()),H.previousViewProjection||(H.previousViewProjection=A.getTransformMatrix().clone(),H.currentViewProjection=A.getTransformMatrix().clone()),H.currentViewProjection.updateFlag!==A.getTransformMatrix().updateFlag?(H.lastUpdateFrameId=o.frameId,H.previousViewProjection.q(H.currentViewProjection),H.currentViewProjection.q(A.getTransformMatrix())):H.lastUpdateFrameId!==o.frameId&&(H.lastUpdateFrameId=o.frameId,H.previousViewProjection.q(H.currentViewProjection)),P.setMatrix("previousWorld",H.previousWorldMatrices[f.uniqueId]),P.setMatrix("previousViewProjection",H.previousViewProjection),H.previousWorldMatrices[f.uniqueId]=c.clone(),f.useBones&&f.computeBonesUsingShaders&&f.skeleton)){const F=f.skeleton;if(!F.isUsingTextureForMatrices||-1===P.getUniformIndex("boneTextureWidth")){const c=F.getTransformMatrices(f);c&&(H.previousBones[f.uniqueId]||(H.previousBones[f.uniqueId]=c.slice()),P.setMatrices("mPreviousBones",H.previousBones[f.uniqueId]),H.previousBones[f.uniqueId].set(c))}}}}q.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],q._Configurations={}},12011:(F,P,f)=>{f.d(P,{b:()=>J});var c=f(11619),N=f(11628),q=f(11937),H=f(11501),A=f(11530),o=f(11548);const j=new RegExp("^([gimus]+)!");class i{constructor(F){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=F,this._scene=F.OF(),this._engine=this._scene.getEngine()}_addPlugin(F){for(let c=0;c<this._plugins.length;++c)if(this._plugins[c].name===F.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!F.isCompatible(this._material.shaderLanguage))throw`The plugin "${F.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const P=F.getClassName();i._MaterialPluginClassToMainDefine[P]||(i._MaterialPluginClassToMainDefine[P]="MATERIALPLUGIN_"+ ++i._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(F,P)=>this._handlePluginEvent(F,P),this._plugins.push(F),this._plugins.sort(((F,P)=>F.priority-P.priority)),this._codeInjectionPoints={};const f={};f[i._MaterialPluginClassToMainDefine[P]]={type:"boolean",default:!0};for(const c of this._plugins)c.collectDefines(f),this._collectPointNames("vertex",c.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",c.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=f,!0}_activatePlugin(F){-1===this._activePlugins.indexOf(F)&&(this._activePlugins.push(F),this._activePlugins.sort(((F,P)=>F.priority-P.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),F.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(F),this._activePluginsForExtraEvents.sort(((F,P)=>F.priority-P.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(F){for(let P=0;P<this._plugins.length;++P)if(this._plugins[P].name===F)return this._plugins[P];return null}_handlePluginEventIsReadyForSubMesh(F){let P=!0;for(const f of this._activePlugins)P=P&&f.isReadyForSubMesh(F.defines,this._scene,this._engine,F.subMesh);F.isReadyForSubMesh=P}_handlePluginEventPrepareDefinesBeforeAttributes(F){for(const P of this._activePlugins)P.prepareDefinesBeforeAttributes(F.defines,this._scene,F.mesh)}_handlePluginEventPrepareDefines(F){for(const P of this._activePlugins)P.prepareDefines(F.defines,this._scene,F.mesh)}_handlePluginEventHardBindForSubMesh(F){for(const P of this._activePluginsForExtraEvents)P.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,F.subMesh)}_handlePluginEventBindForSubMesh(F){for(const P of this._activePlugins)P.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,F.subMesh)}_handlePluginEventHasRenderTargetTextures(F){let P=!1;for(const f of this._activePluginsForExtraEvents)if(P=f.hasRenderTargetTextures(),P)break;F.hasRenderTargetTextures=P}_handlePluginEventFillRenderTargetTextures(F){for(const P of this._activePluginsForExtraEvents)P.fillRenderTargetTextures(F.renderTargets)}_handlePluginEvent(F,P){switch(F){case 512:{const F=P;for(const P of this._activePlugins)P.getActiveTextures(F.activeTextures);break}case 256:{const F=P;for(const P of this._activePlugins)P.getAnimatables(F.animatables);break}case 1024:{const F=P;let f=!1;for(const P of this._activePlugins)if(f=P.hasTexture(F.texture),f)break;F.hasTexture=f;break}case 2:{const F=P;for(const P of this._plugins)P.dispose(F.forceDisposeTextures);break}case 4:P.defineNames=this._defineNamesFromPlugins;break;case 128:{const F=P;for(const P of this._activePlugins)F.fallbackRank=P.addFallbacks(F.defines,F.fallbacks,F.fallbackRank),P.getAttributes(F.attributes,this._scene,F.mesh);this._uniformList.length>0&&F.uniforms.push(...this._uniformList),this._samplerList.length>0&&F.samplers.push(...this._samplerList),this._uboList.length>0&&F.uniformBuffersNames.push(...this._uboList),F.customCode=this._injectCustomCode(F,F.customCode);break}case 8:{const F=P;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const f=1===this._material.shaderLanguage;for(const P of this._plugins){const c=P.getUniforms(this._material.shaderLanguage);if(c){if(c.ubo)for(const P of c.ubo){if(P.size&&P.type){const c=P.arraySize??0;if(F.ubo.addUniform(P.name,P.size,c),f){let F;switch(P.type){case"mat4":F="mat4x4f";break;case"float":F="f32";break;default:F=`${P.type}f`}this._uboDeclaration+=c>0?`uniform ${P.name}: array<${F}, ${c}>;\n`:`uniform ${P.name}: ${F};\n`}else this._uboDeclaration+=`${P.type} ${P.name}${c>0?`[${c}]`:""};\n`}this._uniformList.push(P.name)}c.vertex&&(this._vertexDeclaration+=c.vertex+"\n"),c.fragment&&(this._fragmentDeclaration+=c.fragment+"\n")}P.getSamplers(this._samplerList),P.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(F,P){if(P)for(const f in P)this._codeInjectionPoints[F]||(this._codeInjectionPoints[F]={}),this._codeInjectionPoints[F][f]=!0}_injectCustomCode(F,P){return(f,c)=>{var N;P&&(c=P(f,c)),this._uboDeclaration&&(c=c.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(c=c.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(c=c.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const q=null===(N=this._codeInjectionPoints)||void 0===N?void 0:N[f];if(!q)return c;let H=null;for(let P in q){let N="";for(const c of this._activePlugins){var i;let q=null===(i=c.getCustomCode(f,this._material.shaderLanguage))||void 0===i?void 0:i[P];if(q){if(c.resolveIncludes){if(null===H){const P=0;H={defines:[],indexParameters:F.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:o.c.GetShadersRepository(P),includesShadersStore:o.c.GetIncludesShadersStore(P),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}H.isFragment="fragment"===f,(0,A.g)(q,H,(F=>q=F))}N+=q+"\n"}}if(N.length>0)if("!"===P.charAt(0)){P=P.substring(1);let F="g";if("!"===P.charAt(0))F="",P=P.substring(1);else{const f=j.exec(P);f&&f.length>=2&&(F=f[1],P=P.substring(F.length+1))}F.indexOf("g")<0&&(F+="g");const f=c,q=new RegExp(P,F);let H=q.exec(f);for(;null!==H;){let F=N;for(let P=0;P<H.length;++P)F=F.replace("$"+P,H[P]);c=c.replace(H[0],F),H=q.exec(f)}}else{const F="#define "+P;c=c.replace(F,"\n"+N+"\n"+F)}}return c}}}i._MaterialPluginClassToMainDefine={},i._MaterialPluginCounter=0,H.b.OnEnginesDisposedObservable.add((()=>{t()}));const u=[];let T=!1,Y=null;function t(){u.length=0,T=!1,q.d.OnEventObservable.remove(Y),Y=null}var C=f(11677),L=f(11587);class J{isCompatible(F){return 0===F}_enable(F){F&&this._pluginManager._activatePlugin(this)}constructor(F,P,f,c){let N=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],H=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=F,this.name=P,this.priority=f,this.resolveIncludes=H,F.pluginManager||(F.pluginManager=new i(F),F.Mf.add((()=>{F.pluginManager=void 0}))),this._pluginDefineNames=c,this._pluginManager=F.pluginManager,N&&this._pluginManager._addPlugin(this),q&&this._enable(!0),this.markAllDefinesAsDirty=F._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(F,P,f,c){return!0}hardBindForSubMesh(F,P,f,c){}bindForSubMesh(F,P,f,c){}dispose(F){}getCustomCode(F){return null}collectDefines(F){if(this._pluginDefineNames)for(const P of Object.keys(this._pluginDefineNames)){if("_"===P[0])continue;const f=typeof this._pluginDefineNames[P];F[P]={type:"number"===f?"number":"string"===f?"string":"boolean"===f?"boolean":"object",default:this._pluginDefineNames[P]}}}prepareDefinesBeforeAttributes(F,P,f){}prepareDefines(F,P,f){}hasTexture(F){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(F){}getActiveTextures(F){}getAnimatables(F){}addFallbacks(F,P,f){return f}getSamplers(F){}getAttributes(F,P,f){}getUniformBuffersNames(F){}getUniforms(){return{}}copyTo(F){C.e.Clone((()=>F),this)}serialize(){return C.e.Serialize(this)}parse(F,P,f){C.e.Parse((()=>this),F,P,f)}}(0,c.e)([(0,N.L)()],J.prototype,"name",void 0),(0,c.e)([(0,N.L)()],J.prototype,"priority",void 0),(0,c.e)([(0,N.L)()],J.prototype,"resolveIncludes",void 0),(0,c.e)([(0,N.L)()],J.prototype,"registerForExtraEvents",void 0),(0,L.f)("BABYLON.MaterialPluginBase",J)},11988:(F,P,f)=>{f.d(P,{b:()=>c});class c{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(F){F.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(F){}bindForSubMesh(F,P,f,c,N){if(P.prePassRenderer&&P.prePassRenderer.enabled&&P.prePassRenderer.currentRTisSceneRT&&(-1!==P.prePassRenderer.getIndex(2)||-1!==P.prePassRenderer.getIndex(11))){this.previousWorldMatrices[f.uniqueId]||(this.previousWorldMatrices[f.uniqueId]=c.clone()),this.previousViewProjection||(this.previousViewProjection=P.getTransformMatrix().clone(),this.currentViewProjection=P.getTransformMatrix().clone());const N=P.getEngine();this.currentViewProjection.updateFlag!==P.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=N.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(P.getTransformMatrix())):this._lastUpdateFrameId!==N.frameId&&(this._lastUpdateFrameId=N.frameId,this.previousViewProjection.q(this.currentViewProjection)),F.setMatrix("previousWorld",this.previousWorldMatrices[f.uniqueId]),F.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[f.uniqueId]=c.clone()}}}},11980:(F,P,f)=>{f.d(P,{JP:()=>M});var c=f(11619),N=f(11628),q=f(11723),H=f(11845),A=f(11690),o=f(11706),j=f(11988),i=f(11851),u=f(11937),T=f(11994),Y=f(11931),t=f(11612),C=f(11587),L=f(12001),J=f(11926),B=f(12003),z=f(11976),Z=f(11973),R=f(11677),y=f(12013);const O={effect:null,subMesh:null};class d extends T.c{constructor(F){super(F),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(F){const P=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const f of P)this[f]=f===F}}class M extends Y.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(F){this._attachImageProcessingConfiguration(F),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(F){F!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=F||this.OF().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(F){this.imageProcessingConfiguration.colorCurvesEnabled=F}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(F){this.imageProcessingConfiguration.colorGradingEnabled=F}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(F){this._imageProcessingConfiguration.toneMappingEnabled=F}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(F){this._imageProcessingConfiguration.exposure=F}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(F){this._imageProcessingConfiguration.contrast=F}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(F){this._imageProcessingConfiguration.colorGradingTexture=F}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(F){this._imageProcessingConfiguration.colorCurves=F}get canRenderToMRT(){return!0}constructor(F,P){super(F,P,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||M.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new A.BP(0,0,0),this.diffuseColor=new A.BP(1,1,1),this.specularColor=new A.BP(1,1,1),this.emissiveColor=new A.BP(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new q.d(16),this._globalAmbientColor=new A.BP(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new B.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new j.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"JP"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===u.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ef&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==u.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ef||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(F,P){let c=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const N=P._drawWrapper;if(N.effect&&this.isFrozen&&N._wasPreviouslyReady&&N._wasPreviouslyUsingInstances===c)return!0;P.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),P.materialDefines=new d(this._eventInfo.defineNames));const q=this.OF(),H=P.materialDefines;if(this._isReadyForSubMesh(P))return!0;const A=q.getEngine();H._needNormals=(0,Z.W)(q,F,H,!0,this._maxSimultaneousLights,this._disableLighting),(0,Z.$)(q,H);const u=this.needAlphaBlendingForMesh(F)&&this.OF().useOrderIndependentTransparency;if((0,Z.cb)(q,H,this.canRenderToMRT&&!u),(0,Z.ab)(q,H,u),y.c.PrepareDefines(A.currentRenderPassId,F,H),H._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,H._needUVs=!1;for(let F=1;F<=6;++F)H["MAINUV"+F]=!1;if(q.texturesEnabled){if(H.DIFFUSEDIRECTUV=0,H.BUMPDIRECTUV=0,H.AMBIENTDIRECTUV=0,H.OPACITYDIRECTUV=0,H.EMISSIVEDIRECTUV=0,H.SPECULARDIRECTUV=0,H.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&M.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._diffuseTexture,H,"DIFFUSE")}else H.DIFFUSE=!1;if(this._ambientTexture&&M.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._ambientTexture,H,"AMBIENT")}else H.AMBIENT=!1;if(this._opacityTexture&&M.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._opacityTexture,H,"OPACITY"),H.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else H.OPACITY=!1;if(this._reflectionTexture&&M.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(H._needNormals=!0,H.REFLECTION=!0,H.ROUGHNESS=this._roughness>0,H.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,H.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===t.e.INVCUBIC_MODE,H.REFLECTIONMAP_3D=this._reflectionTexture.isCube,H.REFLECTIONMAP_OPPOSITEZ=H.REFLECTIONMAP_3D&&this.OF().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,H.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case t.e.EXPLICIT_MODE:H.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case t.e.PLANAR_MODE:H.setReflectionMode("REFLECTIONMAP_PLANAR");break;case t.e.PROJECTION_MODE:H.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case t.e.SKYBOX_MODE:H.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case t.e.SPHERICAL_MODE:H.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case t.e.EQUIRECTANGULAR_MODE:H.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case t.e.FIXED_EQUIRECTANGULAR_MODE:H.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case t.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:H.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case t.e.CUBIC_MODE:case t.e.INVCUBIC_MODE:default:H.setReflectionMode("REFLECTIONMAP_CUBIC")}H.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else H.REFLECTION=!1,H.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&M.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._emissiveTexture,H,"EMISSIVE")}else H.EMISSIVE=!1;if(this._lightmapTexture&&M.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._lightmapTexture,H,"LIGHTMAP"),H.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,H.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else H.LIGHTMAP=!1;if(this._specularTexture&&M.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Z.Y)(this._specularTexture,H,"SPECULAR"),H.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else H.SPECULAR=!1;if(q.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&M.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Z.Y)(this._bumpTexture,H,"BUMP"),H.PARALLAX=this._useParallax,H.PARALLAX_RHS=q.useRightHandedSystem,H.PARALLAXOCCLUSION=this._useParallaxOcclusion,H.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else H.BUMP=!1,H.PARALLAX=!1,H.PARALLAX_RHS=!1,H.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&M.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;H._needUVs=!0,H.REFRACTION=!0,H.REFRACTIONMAP_3D=this._refractionTexture.isCube,H.RGBDREFRACTION=this._refractionTexture.isRGBD,H.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else H.REFRACTION=!1;H.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else H.DIFFUSE=!1,H.AMBIENT=!1,H.OPACITY=!1,H.REFLECTION=!1,H.EMISSIVE=!1,H.LIGHTMAP=!1,H.BUMP=!1,H.REFRACTION=!1;H.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),H.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,H.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,H.SPECULAROVERALPHA=this._useSpecularOverAlpha,H.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,H.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,H.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(F)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=H,this._eventInfo.subMesh=P,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(H._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(H),H.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,H.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(H._areFresnelDirty&&(M.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(H.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,H.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,H.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,H.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,H.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,H.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,H._needNormals=!0,H.FRESNEL=!0):H.FRESNEL=!1),H.AREALIGHTUSED)for(let f=0;f<F.lightSources.length;f++)if(!F.lightSources[f]._isReady())return!1;(0,Z.Z)(F,q,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(F),H,this._applyDecalMapAfterDetailMap),(0,Z.S)(q,A,this,H,c,null,P.getRenderingMesh().hasThinInstances),this._eventInfo.defines=H,this._eventInfo.mesh=F,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Z.P)(F,H,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let T=!1;if(H.isDirty){const c=H._areLightsDisposed;H.markAsProcessed();const N=new J.c;H.REFLECTION&&N.addFallback(0,"REFLECTION"),H.SPECULAR&&N.addFallback(0,"SPECULAR"),H.BUMP&&N.addFallback(0,"BUMP"),H.PARALLAX&&N.addFallback(1,"PARALLAX"),H.PARALLAX_RHS&&N.addFallback(1,"PARALLAX_RHS"),H.PARALLAXOCCLUSION&&N.addFallback(0,"PARALLAXOCCLUSION"),H.SPECULAROVERALPHA&&N.addFallback(0,"SPECULAROVERALPHA"),H.FOG&&N.addFallback(1,"FOG"),H.POINTSIZE&&N.addFallback(0,"POINTSIZE"),H.LOGARITHMICDEPTH&&N.addFallback(0,"LOGARITHMICDEPTH"),(0,Z.z)(H,N,this._maxSimultaneousLights),H.SPECULARTERM&&N.addFallback(0,"SPECULARTERM"),H.DIFFUSEFRESNEL&&N.addFallback(1,"DIFFUSEFRESNEL"),H.OPACITYFRESNEL&&N.addFallback(2,"OPACITYFRESNEL"),H.REFLECTIONFRESNEL&&N.addFallback(3,"REFLECTIONFRESNEL"),H.EMISSIVEFRESNEL&&N.addFallback(4,"EMISSIVEFRESNEL"),H.FRESNEL&&N.addFallback(4,"FRESNEL"),H.MULTIVIEW&&N.addFallback(0,"MULTIVIEW");const u=[o.f.PositionKind];H.NORMAL&&u.push(o.f.NormalKind),H.TANGENT&&u.push(o.f.TangentKind);for(let F=1;F<=6;++F)H["UV"+F]&&u.push(`uv${1===F?"":F}`);H.VERTEXCOLOR&&u.push(o.f.ColorKind),(0,Z.F)(u,F,H,N),(0,Z.J)(u,H),(0,Z.M)(u,F,H),(0,Z.D)(u,F,H);let Y="default";const t=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],C=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],L=["Material","Scene","Mesh"],B={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:H.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=N,this._eventInfo.fallbackRank=0,this._eventInfo.defines=H,this._eventInfo.uniforms=t,this._eventInfo.attributes=u,this._eventInfo.samplers=C,this._eventInfo.uniformBuffersNames=L,this._eventInfo.customCode=void 0,this._eventInfo.mesh=F,this._eventInfo.indexParameters=B,this._callbackPluginEventGeneric(128,this._eventInfo),y.c.AddUniformsAndSamplers(t,C),j.b.AddUniforms(t),j.b.AddSamplers(C),i.b&&(i.b.PrepareUniforms(t,H),i.b.PrepareSamplers(C,H)),(0,Z.eb)({uniformsNames:t,uniformBuffersNames:L,samplers:C,defines:H,maxSimultaneousLights:this._maxSimultaneousLights}),(0,z.c)(t);const R={};this.customShaderNameResolve&&(Y=this.customShaderNameResolve(Y,t,L,C,H,u,R));const d=H.toString(),M=P.effect;let V=q.getEngine().createEffect(Y,{attributes:u,uniformsNames:t,uniformBuffersNames:L,samplers:C,defines:d,fallbacks:N,onCompiled:this.onCompiled,onError:this.onError,indexParameters:B,processFinalCode:R.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:H.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([f.e(41),f.e(64)]).then(f.bind(f,14150)),Promise.all([f.e(39),f.e(65)]).then(f.bind(f,14297))]):await Promise.all([Promise.all([f.e(34),f.e(67)]).then(f.bind(f,14381)),Promise.all([f.e(33),f.e(68)]).then(f.bind(f,14550))]),this._shadersLoaded=!0}},A);if(this._eventInfo.customCode=void 0,V)if(this._onEffectCreatedObservable&&(O.effect=V,O.subMesh=P,this._onEffectCreatedObservable.notifyObservers(O)),this.allowShaderHotSwapping&&M&&!V.isReady()){if(V=M,H.markAsUnprocessed(),T=this.isFrozen,c)return H._areLightsDisposed=!0,!1}else q.resetCachedMaterial(),P.setEffect(V,H,this._materialContext)}return!(!P.effect||!P.effect.isReady())&&(H._renderId=q.getRenderId(),N._wasPreviouslyReady=!T,N._wasPreviouslyUsingInstances=c,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const F=this._uniformBuffer;F.addUniform("diffuseLeftColor",4),F.addUniform("diffuseRightColor",4),F.addUniform("opacityParts",4),F.addUniform("reflectionLeftColor",4),F.addUniform("reflectionRightColor",4),F.addUniform("refractionLeftColor",4),F.addUniform("refractionRightColor",4),F.addUniform("emissiveLeftColor",4),F.addUniform("emissiveRightColor",4),F.addUniform("vDiffuseInfos",2),F.addUniform("vAmbientInfos",2),F.addUniform("vOpacityInfos",2),F.addUniform("vReflectionInfos",2),F.addUniform("vReflectionPosition",3),F.addUniform("vReflectionSize",3),F.addUniform("vEmissiveInfos",2),F.addUniform("vLightmapInfos",2),F.addUniform("vSpecularInfos",2),F.addUniform("vBumpInfos",3),F.addUniform("diffuseMatrix",16),F.addUniform("ambientMatrix",16),F.addUniform("opacityMatrix",16),F.addUniform("reflectionMatrix",16),F.addUniform("emissiveMatrix",16),F.addUniform("lightmapMatrix",16),F.addUniform("specularMatrix",16),F.addUniform("bumpMatrix",16),F.addUniform("vTangentSpaceParams",2),F.addUniform("pointSize",1),F.addUniform("alphaCutOff",1),F.addUniform("refractionMatrix",16),F.addUniform("vRefractionInfos",4),F.addUniform("vRefractionPosition",3),F.addUniform("vRefractionSize",3),F.addUniform("vSpecularColor",4),F.addUniform("vEmissiveColor",3),F.addUniform("vDiffuseColor",4),F.addUniform("vAmbientColor",3),F.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(F,P,f){const c=this.OF(),N=f.materialDefines;if(!N)return;const q=f.effect;if(!q)return;this._activeEffect=q,P.getMeshUniformBuffer().bindToEffect(q,"Mesh"),P.transferToEffect(F),this._uniformBuffer.bindToEffect(q,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,c,P,F,this.isFrozen),y.c.Bind(c.getEngine().currentRenderPassId,this._activeEffect,P,F,this);const o=c.activeCamera;o?this._uniformBuffer.updateFloat4("cameraInfo",o.Wf,o.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=f,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),N.OBJECTSPACE_NORMALMAP&&(F.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const j=this._mustRebind(c,q,f,P.visibility);(0,Z.c)(P,q);const i=this._uniformBuffer;if(j){if(this.bindViewProjection(q),!i.useUbo||!this.isFrozen||!i.isSync||f._drawWrapper._forceRebindOnNextCall){if(M.FresnelEnabled&&N.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(i.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),i.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&i.updateColor4("opacityParts",new A.BP(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(i.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),i.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(i.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),i.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(i.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),i.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),c.texturesEnabled){if(this._diffuseTexture&&M.DiffuseTextureEnabled&&(i.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Z.v)(this._diffuseTexture,i,"diffuse")),this._ambientTexture&&M.AmbientTextureEnabled&&(i.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Z.v)(this._ambientTexture,i,"ambient")),this._opacityTexture&&M.OpacityTextureEnabled&&(i.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Z.v)(this._opacityTexture,i,"opacity")),this._hasAlphaChannel()&&i.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&M.ReflectionTextureEnabled){if(i.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),i.sf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const F=this._reflectionTexture;i.updateVector3("vReflectionPosition",F.boundingBoxPosition),i.updateVector3("vReflectionSize",F.boundingBoxSize)}}else i.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&M.EmissiveTextureEnabled&&(i.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Z.v)(this._emissiveTexture,i,"emissive")),this._lightmapTexture&&M.LightmapTextureEnabled&&(i.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Z.v)(this._lightmapTexture,i,"lightmap")),this._specularTexture&&M.SpecularTextureEnabled&&(i.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Z.v)(this._specularTexture,i,"specular")),this._bumpTexture&&c.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&(i.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Z.v)(this._bumpTexture,i,"bump"),c._mirroredCameraPosition?i.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):i.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&M.RefractionTextureEnabled){let F=1;if(this._refractionTexture.isCube||(i.sf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(F=this._refractionTexture.depth)),i.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,F,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const F=this._refractionTexture;i.updateVector3("vRefractionPosition",F.boundingBoxPosition),i.updateVector3("vRefractionSize",F.boundingBoxSize)}}}this.pointsCloud&&i.updateFloat("pointSize",this.pointSize),i.updateColor4("vSpecularColor",this.specularColor,this.specularPower),i.updateColor3("vEmissiveColor",M.EmissiveTextureEnabled?this.emissiveColor:A.BP.BlackReadOnly),i.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),c.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),i.updateColor3("vAmbientColor",this._globalAmbientColor)}c.texturesEnabled&&(this._diffuseTexture&&M.DiffuseTextureEnabled&&q.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&M.AmbientTextureEnabled&&q.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&M.OpacityTextureEnabled&&q.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&M.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?q.setTexture("reflectionCubeSampler",this._reflectionTexture):q.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&M.EmissiveTextureEnabled&&q.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&M.LightmapTextureEnabled&&q.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&M.SpecularTextureEnabled&&q.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&c.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&q.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&M.RefractionTextureEnabled&&(this._refractionTexture.isCube?q.setTexture("refractionCubeSampler",this._refractionTexture):q.setTexture("refraction2DSampler",this._refractionTexture))),this.OF().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(P)&&this.OF().depthPeelingRenderer.bind(q),this._eventInfo.subMesh=f,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,z.d)(q,this,c),this.bindEyePosition(q)}else c.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(j||!this.isFrozen){var u;if(c.lightsEnabled&&!this._disableLighting&&(0,Z.j)(c,P,q,N,this._maxSimultaneousLights),(c.fogEnabled&&P.applyFog&&c.fogMode!==H.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||P.receiveShadows||N.PREPASS)&&this.bindView(q),(0,Z.f)(c,P,q),N.NUM_MORPH_INFLUENCERS&&(0,Z.o)(P,q),N.BAKED_VERTEX_ANIMATION_TEXTURE)null===(u=P.bakedVertexAnimationManager)||void 0===u||u.bind(q,N.INSTANCES);this.useLogarithmicDepth&&(0,Z.n)(N,q,c),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(P,this._activeEffect,f),i.update()}getAnimatables(){const F=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&F.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&F.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&F.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&F.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&F.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&F.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&F.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&F.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&F.push(this._refractionTexture),F}getActiveTextures(){const F=super.getActiveTextures();return this._diffuseTexture&&F.push(this._diffuseTexture),this._ambientTexture&&F.push(this._ambientTexture),this._opacityTexture&&F.push(this._opacityTexture),this._reflectionTexture&&F.push(this._reflectionTexture),this._emissiveTexture&&F.push(this._emissiveTexture),this._specularTexture&&F.push(this._specularTexture),this._bumpTexture&&F.push(this._bumpTexture),this._lightmapTexture&&F.push(this._lightmapTexture),this._refractionTexture&&F.push(this._refractionTexture),F}hasTexture(F){return!!super.hasTexture(F)||(this._diffuseTexture===F||(this._ambientTexture===F||(this._opacityTexture===F||(this._reflectionTexture===F||(this._emissiveTexture===F||(this._specularTexture===F||(this._bumpTexture===F||(this._lightmapTexture===F||this._refractionTexture===F))))))))}dispose(F,P){var f,c,N,q,H,A,o,j,i;P&&(null===(f=this._diffuseTexture)||void 0===f||f.dispose(),null===(c=this._ambientTexture)||void 0===c||c.dispose(),null===(N=this._opacityTexture)||void 0===N||N.dispose(),null===(q=this._reflectionTexture)||void 0===q||q.dispose(),null===(H=this._emissiveTexture)||void 0===H||H.dispose(),null===(A=this._specularTexture)||void 0===A||A.dispose(),null===(o=this._bumpTexture)||void 0===o||o.dispose(),null===(j=this._lightmapTexture)||void 0===j||j.dispose(),null===(i=this._refractionTexture)||void 0===i||i.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(F,P)}clone(F){let P=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const c=R.e.Clone((()=>new M(F,this.OF())),this,{cloneTexturesOnlyOnce:P});return c.name=F,c.id=F,this.stencil.copyTo(c.stencil),this._clonePlugins(c,f),c}static Parse(F,P,f){const c=R.e.Parse((()=>new M(F.name,P)),F,P,f);return F.stencil&&c.stencil.parse(F.stencil,P,f),u.d._ParsePlugins(F,c,P,f),c}static get DiffuseTextureEnabled(){return L.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(F){L.c.DiffuseTextureEnabled=F}static get DetailTextureEnabled(){return L.c.DetailTextureEnabled}static set DetailTextureEnabled(F){L.c.DetailTextureEnabled=F}static get AmbientTextureEnabled(){return L.c.AmbientTextureEnabled}static set AmbientTextureEnabled(F){L.c.AmbientTextureEnabled=F}static get OpacityTextureEnabled(){return L.c.OpacityTextureEnabled}static set OpacityTextureEnabled(F){L.c.OpacityTextureEnabled=F}static get ReflectionTextureEnabled(){return L.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(F){L.c.ReflectionTextureEnabled=F}static get EmissiveTextureEnabled(){return L.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(F){L.c.EmissiveTextureEnabled=F}static get SpecularTextureEnabled(){return L.c.SpecularTextureEnabled}static set SpecularTextureEnabled(F){L.c.SpecularTextureEnabled=F}static get BumpTextureEnabled(){return L.c.BumpTextureEnabled}static set BumpTextureEnabled(F){L.c.BumpTextureEnabled=F}static get LightmapTextureEnabled(){return L.c.LightmapTextureEnabled}static set LightmapTextureEnabled(F){L.c.LightmapTextureEnabled=F}static get RefractionTextureEnabled(){return L.c.RefractionTextureEnabled}static set RefractionTextureEnabled(F){L.c.RefractionTextureEnabled=F}static get ColorGradingTextureEnabled(){return L.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(F){L.c.ColorGradingTextureEnabled=F}static get FresnelEnabled(){return L.c.FresnelEnabled}static set FresnelEnabled(F){L.c.FresnelEnabled=F}}M.ForceGLSL=!1,(0,c.e)([(0,N.B)("diffuseTexture")],M.prototype,"_diffuseTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"diffuseTexture",void 0),(0,c.e)([(0,N.B)("ambientTexture")],M.prototype,"_ambientTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"ambientTexture",void 0),(0,c.e)([(0,N.B)("opacityTexture")],M.prototype,"_opacityTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"opacityTexture",void 0),(0,c.e)([(0,N.B)("reflectionTexture")],M.prototype,"_reflectionTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"reflectionTexture",void 0),(0,c.e)([(0,N.B)("emissiveTexture")],M.prototype,"_emissiveTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"emissiveTexture",void 0),(0,c.e)([(0,N.B)("specularTexture")],M.prototype,"_specularTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"specularTexture",void 0),(0,c.e)([(0,N.B)("bumpTexture")],M.prototype,"_bumpTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"bumpTexture",void 0),(0,c.e)([(0,N.B)("lightmapTexture")],M.prototype,"_lightmapTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"lightmapTexture",void 0),(0,c.e)([(0,N.B)("refractionTexture")],M.prototype,"_refractionTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"refractionTexture",void 0),(0,c.e)([(0,N.j)("ambient")],M.prototype,"ambientColor",void 0),(0,c.e)([(0,N.j)("diffuse")],M.prototype,"diffuseColor",void 0),(0,c.e)([(0,N.j)("specular")],M.prototype,"specularColor",void 0),(0,c.e)([(0,N.j)("emissive")],M.prototype,"emissiveColor",void 0),(0,c.e)([(0,N.L)()],M.prototype,"specularPower",void 0),(0,c.e)([(0,N.L)("useAlphaFromDiffuseTexture")],M.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"useAlphaFromDiffuseTexture",void 0),(0,c.e)([(0,N.L)("useEmissiveAsIllumination")],M.prototype,"_useEmissiveAsIllumination",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useEmissiveAsIllumination",void 0),(0,c.e)([(0,N.L)("linkEmissiveWithDiffuse")],M.prototype,"_linkEmissiveWithDiffuse",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"linkEmissiveWithDiffuse",void 0),(0,c.e)([(0,N.L)("useSpecularOverAlpha")],M.prototype,"_useSpecularOverAlpha",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useSpecularOverAlpha",void 0),(0,c.e)([(0,N.L)("useReflectionOverAlpha")],M.prototype,"_useReflectionOverAlpha",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useReflectionOverAlpha",void 0),(0,c.e)([(0,N.L)("disableLighting")],M.prototype,"_disableLighting",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsLightsDirty")],M.prototype,"disableLighting",void 0),(0,c.e)([(0,N.L)("useObjectSpaceNormalMap")],M.prototype,"_useObjectSpaceNormalMap",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useObjectSpaceNormalMap",void 0),(0,c.e)([(0,N.L)("useParallax")],M.prototype,"_useParallax",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallax",void 0),(0,c.e)([(0,N.L)("useParallaxOcclusion")],M.prototype,"_useParallaxOcclusion",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallaxOcclusion",void 0),(0,c.e)([(0,N.L)()],M.prototype,"parallaxScaleBias",void 0),(0,c.e)([(0,N.L)("roughness")],M.prototype,"_roughness",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"roughness",void 0),(0,c.e)([(0,N.L)()],M.prototype,"indexOfRefraction",void 0),(0,c.e)([(0,N.L)()],M.prototype,"invertRefractionY",void 0),(0,c.e)([(0,N.L)()],M.prototype,"alphaCutOff",void 0),(0,c.e)([(0,N.L)("useLightmapAsShadowmap")],M.prototype,"_useLightmapAsShadowmap",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useLightmapAsShadowmap",void 0),(0,c.e)([(0,N.o)("diffuseFresnelParameters")],M.prototype,"_diffuseFresnelParameters",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"diffuseFresnelParameters",void 0),(0,c.e)([(0,N.o)("opacityFresnelParameters")],M.prototype,"_opacityFresnelParameters",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],M.prototype,"opacityFresnelParameters",void 0),(0,c.e)([(0,N.o)("reflectionFresnelParameters")],M.prototype,"_reflectionFresnelParameters",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"reflectionFresnelParameters",void 0),(0,c.e)([(0,N.o)("refractionFresnelParameters")],M.prototype,"_refractionFresnelParameters",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"refractionFresnelParameters",void 0),(0,c.e)([(0,N.o)("emissiveFresnelParameters")],M.prototype,"_emissiveFresnelParameters",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"emissiveFresnelParameters",void 0),(0,c.e)([(0,N.L)("useReflectionFresnelFromSpecular")],M.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"useReflectionFresnelFromSpecular",void 0),(0,c.e)([(0,N.L)("useGlossinessFromSpecularMapAlpha")],M.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,c.e)([(0,N.L)("maxSimultaneousLights")],M.prototype,"_maxSimultaneousLights",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsLightsDirty")],M.prototype,"maxSimultaneousLights",void 0),(0,c.e)([(0,N.L)("invertNormalMapX")],M.prototype,"_invertNormalMapX",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapX",void 0),(0,c.e)([(0,N.L)("invertNormalMapY")],M.prototype,"_invertNormalMapY",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapY",void 0),(0,c.e)([(0,N.L)("twoSidedLighting")],M.prototype,"_twoSidedLighting",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"twoSidedLighting",void 0),(0,c.e)([(0,N.L)("applyDecalMapAfterDetailMap")],M.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,c.e)([(0,N.e)("_markAllSubMeshesAsMiscDirty")],M.prototype,"applyDecalMapAfterDetailMap",void 0),(0,C.f)("BABYLON.StandardMaterial",M),H.e.DefaultMaterialFactory=F=>new M("default material",F)}}]);