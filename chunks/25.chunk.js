"use strict";(self["1xyrlsr8vb9"]=self["1xyrlsr8vb9"]||[]).push([[25],{12624:(I,O,C)=>{C.d(O,{d:()=>Q});var j=C(12250),K=C(12568),i=C(12257),y=C(12616),S=C(12612),U=C(12628),p=C(12596);class N extends S.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class Q extends U.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(I){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(I,"DetailMap",140,new N,O),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=K.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=I._dirtyCallbacks[1]}isReadyForSubMesh(I,O,C){return!this._isEnabled||!(I._areTexturesDirty&&O.texturesEnabled&&C.getCaps().standardDerivatives&&this._texture&&y.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(I,O){if(this._isEnabled){I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const C=O.getEngine();I._areTexturesDirty&&(C.getCaps().standardDerivatives&&this._texture&&y.d.DetailTextureEnabled&&this._isEnabled?((0,p.cb)(this._texture,I,"DETAIL"),I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):I.DETAIL=!1)}else I.DETAIL=!1}bindForSubMesh(I,O){if(!this._isEnabled)return;const C=this._material.isFrozen;I.useUbo&&C&&I.isSync||this._texture&&y.d.DetailTextureEnabled&&(I.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,p.A)(this._texture,I,"detail")),O.texturesEnabled&&this._texture&&y.d.DetailTextureEnabled&&I.setTexture("detailSampler",this._texture)}hasTexture(I){return this._texture===I}getActiveTextures(I){this._texture&&I.push(this._texture)}getAnimatables(I){this._texture&&this._texture.animations&&this._texture.animations.length>0&&I.push(this._texture)}dispose(I){var O;I&&(null===(O=this._texture)||void 0===O||O.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(I){I.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,j.e)([(0,i.v)("detailTexture"),(0,i.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"texture",void 0),(0,j.e)([(0,i.E)()],Q.prototype,"diffuseBlendLevel",void 0),(0,j.e)([(0,i.E)()],Q.prototype,"roughnessBlendLevel",void 0),(0,j.e)([(0,i.E)()],Q.prototype,"bumpLevel",void 0),(0,j.e)([(0,i.E)(),(0,i.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"normalBlendMethod",void 0),(0,j.e)([(0,i.E)(),(0,i.d)("_markAllSubMeshesAsTexturesDirty")],Q.prototype,"isEnabled",void 0)},12612:(I,O,C)=>{C.d(O,{e:()=>j});class j{constructor(I){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=I,I)for(const O in I)Object.prototype.hasOwnProperty.call(I,O)&&this._setDefaultValue(O)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||I,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const I of Object.keys(this))"_"!==I[0]&&this._keys.push(I);if(this._externalProperties)for(const I in this._externalProperties)-1===this._keys.indexOf(I)&&this._keys.push(I)}isEqual(I){if(this._keys.length!==I._keys.length)return!1;for(let O=0;O<this._keys.length;O++){const C=this._keys[O];if(this[C]!==I[C])return!1}return!0}cloneTo(I){this._keys.length!==I._keys.length&&(I._keys=this._keys.slice(0));for(let O=0;O<this._keys.length;O++){const C=this._keys[O];I[C]=this[C]}}reset(){for(const I of this._keys)this._setDefaultValue(I)}_setDefaultValue(I){var O,C,j,K;const i=(null===(O=this._externalProperties)||void 0===O||null===(C=O[I])||void 0===C?void 0:C.type)??typeof this[I],y=null===(j=this._externalProperties)||void 0===j||null===(K=j[I])||void 0===K?void 0:K.default;switch(i){case"number":this[I]=y??0;break;case"string":this[I]=y??"";break;default:this[I]=y??!1}}toString(){let I="";for(let O=0;O<this._keys.length;O++){const C=this._keys[O],j=this[C];switch(typeof j){case"number":case"string":I+="#define "+C+" "+j+"\n";break;default:j&&(I+="#define "+C+"\n")}}return I}}},12616:(I,O,C)=>{C.d(O,{d:()=>K});var j=C(12167);class K{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){this._DiffuseTextureEnabled!==I&&(this._DiffuseTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(I){this._BaseWeightTextureEnabled!==I&&(this._BaseWeightTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(I){this._BaseDiffuseRoughnessTextureEnabled!==I&&(this._BaseDiffuseRoughnessTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(I){this._DetailTextureEnabled!==I&&(this._DetailTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(I){this._DecalMapEnabled!==I&&(this._DecalMapEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(I){this._AmbientTextureEnabled!==I&&(this._AmbientTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(I){this._OpacityTextureEnabled!==I&&(this._OpacityTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){this._ReflectionTextureEnabled!==I&&(this._ReflectionTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){this._EmissiveTextureEnabled!==I&&(this._EmissiveTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(I){this._SpecularTextureEnabled!==I&&(this._SpecularTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(I){this._BumpTextureEnabled!==I&&(this._BumpTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(I){this._LightmapTextureEnabled!==I&&(this._LightmapTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(I){this._RefractionTextureEnabled!==I&&(this._RefractionTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){this._ColorGradingTextureEnabled!==I&&(this._ColorGradingTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(I){this._FresnelEnabled!==I&&(this._FresnelEnabled=I,j.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(I){this._ClearCoatTextureEnabled!==I&&(this._ClearCoatTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(I){this._ClearCoatBumpTextureEnabled!==I&&(this._ClearCoatBumpTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(I){this._ClearCoatTintTextureEnabled!==I&&(this._ClearCoatTintTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(I){this._SheenTextureEnabled!==I&&(this._SheenTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(I){this._AnisotropicTextureEnabled!==I&&(this._AnisotropicTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(I){this._ThicknessTextureEnabled!==I&&(this._ThicknessTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(I){this._RefractionIntensityTextureEnabled!==I&&(this._RefractionIntensityTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(I){this._TranslucencyIntensityTextureEnabled!==I&&(this._TranslucencyIntensityTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(I){this._TranslucencyColorTextureEnabled!==I&&(this._TranslucencyColorTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(I){this._IridescenceTextureEnabled!==I&&(this._IridescenceTextureEnabled=I,j.b.MarkAllMaterialsAsDirty(1))}}K._DiffuseTextureEnabled=!0,K._BaseWeightTextureEnabled=!0,K._BaseDiffuseRoughnessTextureEnabled=!0,K._DetailTextureEnabled=!0,K._DecalMapEnabled=!0,K._AmbientTextureEnabled=!0,K._OpacityTextureEnabled=!0,K._ReflectionTextureEnabled=!0,K._EmissiveTextureEnabled=!0,K._SpecularTextureEnabled=!0,K._BumpTextureEnabled=!0,K._LightmapTextureEnabled=!0,K._RefractionTextureEnabled=!0,K._ColorGradingTextureEnabled=!0,K._FresnelEnabled=!0,K._ClearCoatTextureEnabled=!0,K._ClearCoatBumpTextureEnabled=!0,K._ClearCoatTintTextureEnabled=!0,K._SheenTextureEnabled=!0,K._AnisotropicTextureEnabled=!0,K._ThicknessTextureEnabled=!0,K._RefractionIntensityTextureEnabled=!0,K._TranslucencyIntensityTextureEnabled=!0,K._TranslucencyColorTextureEnabled=!0,K._IridescenceTextureEnabled=!0},12633:(I,O,C)=>{C.d(O,{d:()=>i});var j,K=C(12272);!function(I){I[I.Zero=0]="Zero",I[I.One=1]="One",I[I.MaxViewZ=2]="MaxViewZ"}(j||(j={}));class i{static CreateConfiguration(I){return i._Configurations[I]={defines:{},previousWorldMatrices:{},previousViewProjection:K.Matrix.Zero(),currentViewProjection:K.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},i._Configurations[I]}static DeleteConfiguration(I){delete i._Configurations[I]}static GetConfiguration(I){return i._Configurations[I]}static AddUniformsAndSamplers(I,O){I.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(I,O){for(const C of O)if(C.ZS)for(const O of C.ZS)O._removeDrawWrapper(I)}static PrepareDefines(I,O,C){if(!C._arePrePassDirty)return;const j=i._Configurations[I];if(!j)return;C.PREPASS=!0,C.PREPASS_COLOR=!1,C.PREPASS_COLOR_INDEX=-1;let K=0;for(let y=0;y<i.GeometryTextureDescriptions.length;y++){const I=i.GeometryTextureDescriptions[y],O=I.define,S=I.defineIndex,U=j.defines[S];void 0!==U?(C[O]=!0,C[S]=U,K++):(C[O]=!1,delete C[S])}C.SCENE_MRT_COUNT=K,C.BONES_VELOCITY_ENABLED=O.useBones&&O.computeBonesUsingShaders&&O.skeleton&&!O.skeleton.isUsingTextureForMatrices&&-1===j.excludedSkinnedMesh.indexOf(O)}static Bind(I,O,C,j,K){const y=i._Configurations[I];if(!y)return;const S=C.nI(),U=S.getEngine();if(y.reverseCulling&&U.setStateCullFaceType(S._mirroredCameraPosition?K.cullBackFaces:!K.cullBackFaces),(void 0!==y.defines.PREPASS_VELOCITY_INDEX||void 0!==y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(y.previousWorldMatrices[C.uniqueId]||(y.previousWorldMatrices[C.uniqueId]=j.clone()),y.previousViewProjection||(y.previousViewProjection=S.getTransformMatrix().clone(),y.currentViewProjection=S.getTransformMatrix().clone()),y.currentViewProjection.updateFlag!==S.getTransformMatrix().updateFlag?(y.lastUpdateFrameId=U.frameId,y.previousViewProjection.K(y.currentViewProjection),y.currentViewProjection.K(S.getTransformMatrix())):y.lastUpdateFrameId!==U.frameId&&(y.lastUpdateFrameId=U.frameId,y.previousViewProjection.K(y.currentViewProjection)),O.setMatrix("previousWorld",y.previousWorldMatrices[C.uniqueId]),O.setMatrix("previousViewProjection",y.previousViewProjection),y.previousWorldMatrices[C.uniqueId]=j.clone(),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const I=C.skeleton;if(!I.isUsingTextureForMatrices||-1===O.getUniformIndex("boneTextureWidth")){const j=I.getTransformMatrices(C);j&&(y.previousBones[C.uniqueId]||(y.previousBones[C.uniqueId]=j.slice()),O.setMatrices("mPreviousBones",y.previousBones[C.uniqueId]),y.previousBones[C.uniqueId].set(j))}}}}i.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],i._Configurations={}},12628:(I,O,C)=>{C.d(O,{b:()=>h});var j=C(12250),K=C(12257),i=C(12568),y=C(12132),S=C(12158),U=C(12179);const p=new RegExp("^([gimus]+)!");class N{constructor(I){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=I,this._scene=I.nI(),this._engine=this._scene.getEngine()}_addPlugin(I){for(let j=0;j<this._plugins.length;++j)if(this._plugins[j].name===I.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!I.isCompatible(this._material.shaderLanguage))throw`The plugin "${I.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const O=I.getClassName();N._MaterialPluginClassToMainDefine[O]||(N._MaterialPluginClassToMainDefine[O]="MATERIALPLUGIN_"+ ++N._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(I,O)=>this._handlePluginEvent(I,O),this._plugins.push(I),this._plugins.sort(((I,O)=>I.priority-O.priority)),this._codeInjectionPoints={};const C={};C[N._MaterialPluginClassToMainDefine[O]]={type:"boolean",default:!0};for(const j of this._plugins)j.collectDefines(C),this._collectPointNames("vertex",j.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",j.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=C,!0}_activatePlugin(I){-1===this._activePlugins.indexOf(I)&&(this._activePlugins.push(I),this._activePlugins.sort(((I,O)=>I.priority-O.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),I.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(I),this._activePluginsForExtraEvents.sort(((I,O)=>I.priority-O.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(I){for(let O=0;O<this._plugins.length;++O)if(this._plugins[O].name===I)return this._plugins[O];return null}_handlePluginEventIsReadyForSubMesh(I){let O=!0;for(const C of this._activePlugins)O=O&&C.isReadyForSubMesh(I.defines,this._scene,this._engine,I.subMesh);I.isReadyForSubMesh=O}_handlePluginEventPrepareDefinesBeforeAttributes(I){for(const O of this._activePlugins)O.prepareDefinesBeforeAttributes(I.defines,this._scene,I.mesh)}_handlePluginEventPrepareDefines(I){for(const O of this._activePlugins)O.prepareDefines(I.defines,this._scene,I.mesh)}_handlePluginEventHardBindForSubMesh(I){for(const O of this._activePluginsForExtraEvents)O.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventBindForSubMesh(I){for(const O of this._activePlugins)O.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventHasRenderTargetTextures(I){let O=!1;for(const C of this._activePluginsForExtraEvents)if(O=C.hasRenderTargetTextures(),O)break;I.hasRenderTargetTextures=O}_handlePluginEventFillRenderTargetTextures(I){for(const O of this._activePluginsForExtraEvents)O.fillRenderTargetTextures(I.renderTargets)}_handlePluginEvent(I,O){switch(I){case 512:{const I=O;for(const O of this._activePlugins)O.getActiveTextures(I.activeTextures);break}case 256:{const I=O;for(const O of this._activePlugins)O.getAnimatables(I.animatables);break}case 1024:{const I=O;let C=!1;for(const O of this._activePlugins)if(C=O.hasTexture(I.texture),C)break;I.hasTexture=C;break}case 2:{const I=O;for(const O of this._plugins)O.dispose(I.forceDisposeTextures);break}case 4:O.defineNames=this._defineNamesFromPlugins;break;case 128:{const I=O;for(const O of this._activePlugins)I.fallbackRank=O.addFallbacks(I.defines,I.fallbacks,I.fallbackRank),O.getAttributes(I.attributes,this._scene,I.mesh);this._uniformList.length>0&&I.uniforms.push(...this._uniformList),this._samplerList.length>0&&I.samplers.push(...this._samplerList),this._uboList.length>0&&I.uniformBuffersNames.push(...this._uboList),I.customCode=this._injectCustomCode(I,I.customCode);break}case 8:{const I=O;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const C=1===this._material.shaderLanguage;for(const O of this._plugins){const j=O.getUniforms(this._material.shaderLanguage);if(j){if(j.ubo)for(const O of j.ubo){if(O.size&&O.type){const j=O.arraySize??0;if(I.ubo.addUniform(O.name,O.size,j),C){let I;switch(O.type){case"mat4":I="mat4x4f";break;case"float":I="f32";break;default:I=`${O.type}f`}this._uboDeclaration+=j>0?`uniform ${O.name}: array<${I}, ${j}>;\n`:`uniform ${O.name}: ${I};\n`}else this._uboDeclaration+=`${O.type} ${O.name}${j>0?`[${j}]`:""};\n`}this._uniformList.push(O.name)}j.vertex&&(this._vertexDeclaration+=j.vertex+"\n"),j.fragment&&(this._fragmentDeclaration+=j.fragment+"\n")}O.getSamplers(this._samplerList),O.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(I,O){if(O)for(const C in O)this._codeInjectionPoints[I]||(this._codeInjectionPoints[I]={}),this._codeInjectionPoints[I][C]=!0}_injectCustomCode(I,O){return(C,j)=>{var K;O&&(j=O(C,j)),this._uboDeclaration&&(j=j.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(j=j.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(j=j.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const i=null===(K=this._codeInjectionPoints)||void 0===K?void 0:K[C];if(!i)return j;let y=null;for(let O in i){let K="";for(const j of this._activePlugins){var N;let i=null===(N=j.getCustomCode(C,this._material.shaderLanguage))||void 0===N?void 0:N[O];if(i){if(j.resolveIncludes){if(null===y){const O=0;y={defines:[],indexParameters:I.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:U.b.GetShadersRepository(O),includesShadersStore:U.b.GetIncludesShadersStore(O),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,jS:this._engine.jS,processCodeAfterIncludes:void 0}}y.isFragment="fragment"===C,(0,S.h)(i,y,(I=>i=I))}K+=i+"\n"}}if(K.length>0)if("!"===O.charAt(0)){O=O.substring(1);let I="g";if("!"===O.charAt(0))I="",O=O.substring(1);else{const C=p.exec(O);C&&C.length>=2&&(I=C[1],O=O.substring(I.length+1))}I.indexOf("g")<0&&(I+="g");const C=j,i=new RegExp(O,I);let y=i.exec(C);for(;null!==y;){let I=K;for(let O=0;O<y.length;++O)I=I.replace("$"+O,y[O]);j=j.replace(y[0],I),y=i.exec(C)}}else{const I="#define "+O;j=j.replace(I,"\n"+K+"\n"+I)}}return j}}}N._MaterialPluginClassToMainDefine={},N._MaterialPluginCounter=0,y.e.OnEnginesDisposedObservable.add((()=>{q()}));const Q=[];let s=!1,Z=null;function q(){Q.length=0,s=!1,i.e.OnEventObservable.remove(Z),Z=null}var mI=C(12296),E=C(12226);class h{isCompatible(I){return 0===I}_enable(I){I&&this._pluginManager._activatePlugin(this)}constructor(I,O,C,j){let K=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=I,this.name=O,this.priority=C,this.resolveIncludes=y,I.pluginManager||(I.pluginManager=new N(I),I.yS.add((()=>{I.pluginManager=void 0}))),this._pluginDefineNames=j,this._pluginManager=I.pluginManager,K&&this._pluginManager._addPlugin(this),i&&this._enable(!0),this.markAllDefinesAsDirty=I._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(I,O,C,j){return!0}hardBindForSubMesh(I,O,C,j){}bindForSubMesh(I,O,C,j){}dispose(I){}getCustomCode(I){return null}collectDefines(I){if(this._pluginDefineNames)for(const O of Object.keys(this._pluginDefineNames)){if("_"===O[0])continue;const C=typeof this._pluginDefineNames[O];I[O]={type:"number"===C?"number":"string"===C?"string":"boolean"===C?"boolean":"object",default:this._pluginDefineNames[O]}}}prepareDefinesBeforeAttributes(I,O,C){}prepareDefines(I,O,C){}hasTexture(I){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(I){}getActiveTextures(I){}getAnimatables(I){}addFallbacks(I,O,C){return C}getSamplers(I){}getAttributes(I,O,C){}getUniformBuffersNames(I){}getUniforms(){return{}}copyTo(I){mI.e.Clone((()=>I),this)}serialize(){return mI.e.Serialize(this)}parse(I,O,C){mI.e.Parse((()=>this),I,O,C)}}(0,j.e)([(0,K.E)()],h.prototype,"name",void 0),(0,j.e)([(0,K.E)()],h.prototype,"priority",void 0),(0,j.e)([(0,K.E)()],h.prototype,"resolveIncludes",void 0),(0,j.e)([(0,K.E)()],h.prototype,"registerForExtraEvents",void 0),(0,E.e)("BABYLON.MaterialPluginBase",h)},12607:(I,O,C)=>{C.d(O,{b:()=>j});class j{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(I){I.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(I){}bindForSubMesh(I,O,C,j,K){if(O.prePassRenderer&&O.prePassRenderer.enabled&&O.prePassRenderer.currentRTisSceneRT&&(-1!==O.prePassRenderer.getIndex(2)||-1!==O.prePassRenderer.getIndex(11))){this.previousWorldMatrices[C.uniqueId]||(this.previousWorldMatrices[C.uniqueId]=j.clone()),this.previousViewProjection||(this.previousViewProjection=O.getTransformMatrix().clone(),this.currentViewProjection=O.getTransformMatrix().clone());const K=O.getEngine();this.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=K.frameId,this.previousViewProjection.K(this.currentViewProjection),this.currentViewProjection.K(O.getTransformMatrix())):this._lastUpdateFrameId!==K.frameId&&(this._lastUpdateFrameId=K.frameId,this.previousViewProjection.K(this.currentViewProjection)),I.setMatrix("previousWorld",this.previousWorldMatrices[C.uniqueId]),I.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[C.uniqueId]=j.clone()}}}},12604:(I,O,C)=>{C.d(O,{rO:()=>T});var j=C(12250),K=C(12257),i=C(12354),y=C(12487),S=C(12307),U=C(12329),p=C(12607),N=C(12490),Q=C(12568),s=C(12612),Z=C(12565),q=C(12245),mI=C(12226),E=C(12616),h=C(12556),r=C(12624),W=C(12599),Y=C(12596),o=C(12296),c=C(12633);const n={effect:null,subMesh:null};class X extends s.e{constructor(I){super(I),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(I){const O=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const C of O)this[C]=C===I}}class T extends Z.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(I){this._attachImageProcessingConfiguration(I),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(I){I!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=I||this.nI().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(I){this.imageProcessingConfiguration.colorCurvesEnabled=I}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(I){this.imageProcessingConfiguration.colorGradingEnabled=I}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(I){this._imageProcessingConfiguration.toneMappingEnabled=I}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(I){this._imageProcessingConfiguration.exposure=I}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(I){this._imageProcessingConfiguration.contrast=I}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(I){this._imageProcessingConfiguration.colorGradingTexture=I}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(I){this._imageProcessingConfiguration.colorCurves=I}get canRenderToMRT(){return!0}constructor(I,O){super(I,O,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||T.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new S.WO(0,0,0),this.diffuseColor=new S.WO(1,1,1),this.specularColor=new S.WO(1,1,1),this.emissiveColor=new S.WO(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new i.e(16),this._globalAmbientColor=new S.WO(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new r.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new p.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),T.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),T.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(T.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(T.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"rO"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===Q.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.mU&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==Q.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.mU||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(I,O){let j=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const K=O._drawWrapper;if(K.effect&&this.isFrozen&&K._wasPreviouslyReady&&K._wasPreviouslyUsingInstances===j)return!0;O.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),O.materialDefines=new X(this._eventInfo.defineNames));const i=this.nI(),y=O.materialDefines;if(this._isReadyForSubMesh(O))return!0;const S=i.getEngine();y._needNormals=(0,Y._)(i,I,y,!0,this._maxSimultaneousLights,this._disableLighting),(0,Y.ib)(i,y);const Q=this.needAlphaBlendingForMesh(I)&&this.nI().useOrderIndependentTransparency;if((0,Y.ob)(i,y,this.canRenderToMRT&&!Q),(0,Y.mb)(i,y,Q),c.d.PrepareDefines(S.currentRenderPassId,I,y),y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,y._needUVs=!1;for(let I=1;I<=6;++I)y["MAINUV"+I]=!1;if(i.texturesEnabled){if(y.DIFFUSEDIRECTUV=0,y.BUMPDIRECTUV=0,y.AMBIENTDIRECTUV=0,y.OPACITYDIRECTUV=0,y.EMISSIVEDIRECTUV=0,y.SPECULARDIRECTUV=0,y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&T.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._diffuseTexture,y,"DIFFUSE")}else y.DIFFUSE=!1;if(this._ambientTexture&&T.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._ambientTexture,y,"AMBIENT")}else y.AMBIENT=!1;if(this._opacityTexture&&T.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._opacityTexture,y,"OPACITY"),y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else y.OPACITY=!1;if(this._reflectionTexture&&T.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(y._needNormals=!0,y.REFLECTION=!0,y.ROUGHNESS=this._roughness>0,y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===q.e.INVCUBIC_MODE,y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,y.REFLECTIONMAP_OPPOSITEZ=y.REFLECTIONMAP_3D&&this.nI().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case q.e.EXPLICIT_MODE:y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case q.e.PLANAR_MODE:y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case q.e.PROJECTION_MODE:y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case q.e.SKYBOX_MODE:y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case q.e.SPHERICAL_MODE:y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case q.e.EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case q.e.FIXED_EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case q.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case q.e.CUBIC_MODE:case q.e.INVCUBIC_MODE:default:y.setReflectionMode("REFLECTIONMAP_CUBIC")}y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else y.REFLECTION=!1,y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&T.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._emissiveTexture,y,"EMISSIVE")}else y.EMISSIVE=!1;if(this._lightmapTexture&&T.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._lightmapTexture,y,"LIGHTMAP"),y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else y.LIGHTMAP=!1;if(this._specularTexture&&T.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,Y.cb)(this._specularTexture,y,"SPECULAR"),y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else y.SPECULAR=!1;if(i.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&T.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,Y.cb)(this._bumpTexture,y,"BUMP"),y.PARALLAX=this._useParallax,y.PARALLAX_RHS=i.useRightHandedSystem,y.PARALLAXOCCLUSION=this._useParallaxOcclusion,y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else y.BUMP=!1,y.PARALLAX=!1,y.PARALLAX_RHS=!1,y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&T.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;y._needUVs=!0,y.REFRACTION=!0,y.REFRACTIONMAP_3D=this._refractionTexture.isCube,y.RGBDREFRACTION=this._refractionTexture.isRGBD,y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else y.REFRACTION=!1;y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else y.DIFFUSE=!1,y.AMBIENT=!1,y.OPACITY=!1,y.REFLECTION=!1,y.EMISSIVE=!1,y.LIGHTMAP=!1,y.BUMP=!1,y.REFRACTION=!1;y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,y.SPECULAROVERALPHA=this._useSpecularOverAlpha,y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(I)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=y,this._eventInfo.subMesh=O,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(y),y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(y._areFresnelDirty&&(T.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,y._needNormals=!0,y.FRESNEL=!0):y.FRESNEL=!1),y.AREALIGHTUSED)for(let C=0;C<I.lightSources.length;C++)if(!I.lightSources[C]._isReady())return!1;(0,Y.gb)(I,i,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(I),y,this._applyDecalMapAfterDetailMap),(0,Y.Y)(i,S,this,y,j,null,O.getRenderingMesh().hasThinInstances),this._eventInfo.defines=y,this._eventInfo.mesh=I,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,Y.U)(I,y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let s=!1;if(y.isDirty){const j=y._areLightsDisposed;y.markAsProcessed();const K=new h.e;y.REFLECTION&&K.addFallback(0,"REFLECTION"),y.SPECULAR&&K.addFallback(0,"SPECULAR"),y.BUMP&&K.addFallback(0,"BUMP"),y.PARALLAX&&K.addFallback(1,"PARALLAX"),y.PARALLAX_RHS&&K.addFallback(1,"PARALLAX_RHS"),y.PARALLAXOCCLUSION&&K.addFallback(0,"PARALLAXOCCLUSION"),y.SPECULAROVERALPHA&&K.addFallback(0,"SPECULAROVERALPHA"),y.FOG&&K.addFallback(1,"FOG"),y.POINTSIZE&&K.addFallback(0,"POINTSIZE"),y.LOGARITHMICDEPTH&&K.addFallback(0,"LOGARITHMICDEPTH"),(0,Y.E)(y,K,this._maxSimultaneousLights),y.SPECULARTERM&&K.addFallback(0,"SPECULARTERM"),y.DIFFUSEFRESNEL&&K.addFallback(1,"DIFFUSEFRESNEL"),y.OPACITYFRESNEL&&K.addFallback(2,"OPACITYFRESNEL"),y.REFLECTIONFRESNEL&&K.addFallback(3,"REFLECTIONFRESNEL"),y.EMISSIVEFRESNEL&&K.addFallback(4,"EMISSIVEFRESNEL"),y.FRESNEL&&K.addFallback(4,"FRESNEL"),y.MULTIVIEW&&K.addFallback(0,"MULTIVIEW");const Q=[U.e.PositionKind];y.NORMAL&&Q.push(U.e.NormalKind),y.TANGENT&&Q.push(U.e.TangentKind);for(let I=1;I<=6;++I)y["UV"+I]&&Q.push(`uv${1===I?"":I}`);y.VERTEXCOLOR&&Q.push(U.e.ColorKind),(0,Y.I)(Q,I,y,K),(0,Y.K)(Q,y),(0,Y.N)(Q,I,y),(0,Y.G)(Q,I,y);let Z="default";const q=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],mI=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],E=["Material","Scene","Mesh"],r={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=K,this._eventInfo.fallbackRank=0,this._eventInfo.defines=y,this._eventInfo.uniforms=q,this._eventInfo.attributes=Q,this._eventInfo.samplers=mI,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=I,this._eventInfo.indexParameters=r,this._callbackPluginEventGeneric(128,this._eventInfo),c.d.AddUniformsAndSamplers(q,mI),p.b.AddUniforms(q),p.b.AddSamplers(mI),N.e&&(N.e.PrepareUniforms(q,y),N.e.PrepareSamplers(mI,y)),(0,Y.qb)({uniformsNames:q,uniformBuffersNames:E,samplers:mI,defines:y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,W.d)(q);const o={};this.customShaderNameResolve&&(Z=this.customShaderNameResolve(Z,q,E,mI,y,Q,o));const X=y.toString(),T=O.effect;let H=i.getEngine().createEffect(Z,{attributes:Q,uniformsNames:q,uniformBuffersNames:E,samplers:mI,defines:X,fallbacks:K,onCompiled:this.onCompiled,onError:this.onError,indexParameters:r,processFinalCode:o.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([C.e(41),C.e(64)]).then(C.bind(C,14734)),Promise.all([C.e(39),C.e(65)]).then(C.bind(C,14871))]):await Promise.all([Promise.all([C.e(34),C.e(67)]).then(C.bind(C,14958)),Promise.all([C.e(33),C.e(68)]).then(C.bind(C,15092))]),this._shadersLoaded=!0}},S);if(this._eventInfo.customCode=void 0,H)if(this._onEffectCreatedObservable&&(n.effect=H,n.subMesh=O,this._onEffectCreatedObservable.notifyObservers(n)),this.allowShaderHotSwapping&&T&&!H.isReady()){if(H=T,y.markAsUnprocessed(),s=this.isFrozen,j)return y._areLightsDisposed=!0,!1}else i.resetCachedMaterial(),O.setEffect(H,y,this._materialContext)}return!(!O.effect||!O.effect.isReady())&&(y._renderId=i.getRenderId(),K._wasPreviouslyReady=!s,K._wasPreviouslyUsingInstances=j,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const I=this._uniformBuffer;I.addUniform("diffuseLeftColor",4),I.addUniform("diffuseRightColor",4),I.addUniform("opacityParts",4),I.addUniform("reflectionLeftColor",4),I.addUniform("reflectionRightColor",4),I.addUniform("refractionLeftColor",4),I.addUniform("refractionRightColor",4),I.addUniform("emissiveLeftColor",4),I.addUniform("emissiveRightColor",4),I.addUniform("vDiffuseInfos",2),I.addUniform("vAmbientInfos",2),I.addUniform("vOpacityInfos",2),I.addUniform("vReflectionInfos",2),I.addUniform("vReflectionPosition",3),I.addUniform("vReflectionSize",3),I.addUniform("vEmissiveInfos",2),I.addUniform("vLightmapInfos",2),I.addUniform("vSpecularInfos",2),I.addUniform("vBumpInfos",3),I.addUniform("diffuseMatrix",16),I.addUniform("ambientMatrix",16),I.addUniform("opacityMatrix",16),I.addUniform("reflectionMatrix",16),I.addUniform("emissiveMatrix",16),I.addUniform("lightmapMatrix",16),I.addUniform("specularMatrix",16),I.addUniform("bumpMatrix",16),I.addUniform("vTangentSpaceParams",2),I.addUniform("pointSize",1),I.addUniform("alphaCutOff",1),I.addUniform("refractionMatrix",16),I.addUniform("vRefractionInfos",4),I.addUniform("vRefractionPosition",3),I.addUniform("vRefractionSize",3),I.addUniform("vSpecularColor",4),I.addUniform("vEmissiveColor",3),I.addUniform("vDiffuseColor",4),I.addUniform("vAmbientColor",3),I.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(I,O,C){const j=this.nI(),K=C.materialDefines;if(!K)return;const i=C.effect;if(!i)return;this._activeEffect=i,O.getMeshUniformBuffer().bindToEffect(i,"Mesh"),O.transferToEffect(I),this._uniformBuffer.bindToEffect(i,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,j,O,I,this.isFrozen),c.d.Bind(j.getEngine().currentRenderPassId,this._activeEffect,O,I,this);const U=j.activeCamera;U?this._uniformBuffer.updateFloat4("cameraInfo",U.ES,U.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=C,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),K.OBJECTSPACE_NORMALMAP&&(I.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const p=this._mustRebind(j,i,C,O.visibility);(0,Y.d)(O,i);const N=this._uniformBuffer;if(p){if(this.bindViewProjection(i),!N.useUbo||!this.isFrozen||!N.isSync||C._drawWrapper._forceRebindOnNextCall){if(T.FresnelEnabled&&K.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(N.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),N.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&N.updateColor4("opacityParts",new S.WO(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(N.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),N.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(N.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),N.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(N.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),N.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),j.texturesEnabled){if(this._diffuseTexture&&T.DiffuseTextureEnabled&&(N.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,Y.A)(this._diffuseTexture,N,"diffuse")),this._ambientTexture&&T.AmbientTextureEnabled&&(N.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,Y.A)(this._ambientTexture,N,"ambient")),this._opacityTexture&&T.OpacityTextureEnabled&&(N.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,Y.A)(this._opacityTexture,N,"opacity")),this._hasAlphaChannel()&&N.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&T.ReflectionTextureEnabled){if(N.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),N.hS("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const I=this._reflectionTexture;N.updateVector3("vReflectionPosition",I.boundingBoxPosition),N.updateVector3("vReflectionSize",I.boundingBoxSize)}}else N.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&T.EmissiveTextureEnabled&&(N.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,Y.A)(this._emissiveTexture,N,"emissive")),this._lightmapTexture&&T.LightmapTextureEnabled&&(N.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,Y.A)(this._lightmapTexture,N,"lightmap")),this._specularTexture&&T.SpecularTextureEnabled&&(N.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,Y.A)(this._specularTexture,N,"specular")),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&T.BumpTextureEnabled&&(N.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,Y.A)(this._bumpTexture,N,"bump"),j._mirroredCameraPosition?N.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):N.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&T.RefractionTextureEnabled){let I=1;if(this._refractionTexture.isCube||(N.hS("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(I=this._refractionTexture.depth)),N.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,I,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const I=this._refractionTexture;N.updateVector3("vRefractionPosition",I.boundingBoxPosition),N.updateVector3("vRefractionSize",I.boundingBoxSize)}}}this.pointsCloud&&N.updateFloat("pointSize",this.pointSize),N.updateColor4("vSpecularColor",this.specularColor,this.specularPower),N.updateColor3("vEmissiveColor",T.EmissiveTextureEnabled?this.emissiveColor:S.WO.BlackReadOnly),N.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),j.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),N.updateColor3("vAmbientColor",this._globalAmbientColor)}j.texturesEnabled&&(this._diffuseTexture&&T.DiffuseTextureEnabled&&i.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&T.AmbientTextureEnabled&&i.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&T.OpacityTextureEnabled&&i.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&T.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?i.setTexture("reflectionCubeSampler",this._reflectionTexture):i.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&T.EmissiveTextureEnabled&&i.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&T.LightmapTextureEnabled&&i.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&T.SpecularTextureEnabled&&i.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&T.BumpTextureEnabled&&i.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&T.RefractionTextureEnabled&&(this._refractionTexture.isCube?i.setTexture("refractionCubeSampler",this._refractionTexture):i.setTexture("refraction2DSampler",this._refractionTexture))),this.nI().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(O)&&this.nI().depthPeelingRenderer.bind(i),this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,W.g)(i,this,j),this.bindEyePosition(i)}else j.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(p||!this.isFrozen){var Q;if(j.lightsEnabled&&!this._disableLighting&&(0,Y.l)(j,O,i,K,this._maxSimultaneousLights),(j.fogEnabled&&O.applyFog&&j.fogMode!==y.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||O.receiveShadows||K.PREPASS)&&this.bindView(i),(0,Y.h)(j,O,i),K.NUM_MORPH_INFLUENCERS&&(0,Y.s)(O,i),K.BAKED_VERTEX_ANIMATION_TEXTURE)null===(Q=O.bakedVertexAnimationManager)||void 0===Q||Q.bind(i,K.INSTANCES);this.useLogarithmicDepth&&(0,Y.o)(K,i,j),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(O,this._activeEffect,C),N.update()}getAnimatables(){const I=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&I.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&I.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&I.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&I.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&I.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&I.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&I.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&I.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&I.push(this._refractionTexture),I}getActiveTextures(){const I=super.getActiveTextures();return this._diffuseTexture&&I.push(this._diffuseTexture),this._ambientTexture&&I.push(this._ambientTexture),this._opacityTexture&&I.push(this._opacityTexture),this._reflectionTexture&&I.push(this._reflectionTexture),this._emissiveTexture&&I.push(this._emissiveTexture),this._specularTexture&&I.push(this._specularTexture),this._bumpTexture&&I.push(this._bumpTexture),this._lightmapTexture&&I.push(this._lightmapTexture),this._refractionTexture&&I.push(this._refractionTexture),I}hasTexture(I){return!!super.hasTexture(I)||(this._diffuseTexture===I||(this._ambientTexture===I||(this._opacityTexture===I||(this._reflectionTexture===I||(this._emissiveTexture===I||(this._specularTexture===I||(this._bumpTexture===I||(this._lightmapTexture===I||this._refractionTexture===I))))))))}dispose(I,O){var C,j,K,i,y,S,U,p,N;O&&(null===(C=this._diffuseTexture)||void 0===C||C.dispose(),null===(j=this._ambientTexture)||void 0===j||j.dispose(),null===(K=this._opacityTexture)||void 0===K||K.dispose(),null===(i=this._reflectionTexture)||void 0===i||i.dispose(),null===(y=this._emissiveTexture)||void 0===y||y.dispose(),null===(S=this._specularTexture)||void 0===S||S.dispose(),null===(U=this._bumpTexture)||void 0===U||U.dispose(),null===(p=this._lightmapTexture)||void 0===p||p.dispose(),null===(N=this._refractionTexture)||void 0===N||N.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(I,O)}clone(I){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const j=o.e.Clone((()=>new T(I,this.nI())),this,{cloneTexturesOnlyOnce:O});return j.name=I,j.id=I,this.SS.copyTo(j.SS),this._clonePlugins(j,C),j}static Parse(I,O,C){const j=o.e.Parse((()=>new T(I.name,O)),I,O,C);return I.SS&&j.SS.parse(I.SS,O,C),Q.e._ParsePlugins(I,j,O,C),j}static get DiffuseTextureEnabled(){return E.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){E.d.DiffuseTextureEnabled=I}static get DetailTextureEnabled(){return E.d.DetailTextureEnabled}static set DetailTextureEnabled(I){E.d.DetailTextureEnabled=I}static get AmbientTextureEnabled(){return E.d.AmbientTextureEnabled}static set AmbientTextureEnabled(I){E.d.AmbientTextureEnabled=I}static get OpacityTextureEnabled(){return E.d.OpacityTextureEnabled}static set OpacityTextureEnabled(I){E.d.OpacityTextureEnabled=I}static get ReflectionTextureEnabled(){return E.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){E.d.ReflectionTextureEnabled=I}static get EmissiveTextureEnabled(){return E.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){E.d.EmissiveTextureEnabled=I}static get SpecularTextureEnabled(){return E.d.SpecularTextureEnabled}static set SpecularTextureEnabled(I){E.d.SpecularTextureEnabled=I}static get BumpTextureEnabled(){return E.d.BumpTextureEnabled}static set BumpTextureEnabled(I){E.d.BumpTextureEnabled=I}static get LightmapTextureEnabled(){return E.d.LightmapTextureEnabled}static set LightmapTextureEnabled(I){E.d.LightmapTextureEnabled=I}static get RefractionTextureEnabled(){return E.d.RefractionTextureEnabled}static set RefractionTextureEnabled(I){E.d.RefractionTextureEnabled=I}static get ColorGradingTextureEnabled(){return E.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){E.d.ColorGradingTextureEnabled=I}static get FresnelEnabled(){return E.d.FresnelEnabled}static set FresnelEnabled(I){E.d.FresnelEnabled=I}}T.ForceGLSL=!1,(0,j.e)([(0,K.v)("diffuseTexture")],T.prototype,"_diffuseTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"diffuseTexture",void 0),(0,j.e)([(0,K.v)("ambientTexture")],T.prototype,"_ambientTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"ambientTexture",void 0),(0,j.e)([(0,K.v)("opacityTexture")],T.prototype,"_opacityTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"opacityTexture",void 0),(0,j.e)([(0,K.v)("reflectionTexture")],T.prototype,"_reflectionTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"reflectionTexture",void 0),(0,j.e)([(0,K.v)("emissiveTexture")],T.prototype,"_emissiveTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"emissiveTexture",void 0),(0,j.e)([(0,K.v)("specularTexture")],T.prototype,"_specularTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"specularTexture",void 0),(0,j.e)([(0,K.v)("bumpTexture")],T.prototype,"_bumpTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"bumpTexture",void 0),(0,j.e)([(0,K.v)("lightmapTexture")],T.prototype,"_lightmapTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"lightmapTexture",void 0),(0,j.e)([(0,K.v)("refractionTexture")],T.prototype,"_refractionTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"refractionTexture",void 0),(0,j.e)([(0,K.k)("ambient")],T.prototype,"ambientColor",void 0),(0,j.e)([(0,K.k)("diffuse")],T.prototype,"diffuseColor",void 0),(0,j.e)([(0,K.k)("specular")],T.prototype,"specularColor",void 0),(0,j.e)([(0,K.k)("emissive")],T.prototype,"emissiveColor",void 0),(0,j.e)([(0,K.E)()],T.prototype,"specularPower",void 0),(0,j.e)([(0,K.E)("useAlphaFromDiffuseTexture")],T.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],T.prototype,"useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,K.E)("useEmissiveAsIllumination")],T.prototype,"_useEmissiveAsIllumination",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useEmissiveAsIllumination",void 0),(0,j.e)([(0,K.E)("linkEmissiveWithDiffuse")],T.prototype,"_linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,K.E)("useSpecularOverAlpha")],T.prototype,"_useSpecularOverAlpha",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useSpecularOverAlpha",void 0),(0,j.e)([(0,K.E)("useReflectionOverAlpha")],T.prototype,"_useReflectionOverAlpha",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useReflectionOverAlpha",void 0),(0,j.e)([(0,K.E)("disableLighting")],T.prototype,"_disableLighting",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsLightsDirty")],T.prototype,"disableLighting",void 0),(0,j.e)([(0,K.E)("useObjectSpaceNormalMap")],T.prototype,"_useObjectSpaceNormalMap",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useObjectSpaceNormalMap",void 0),(0,j.e)([(0,K.E)("useParallax")],T.prototype,"_useParallax",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useParallax",void 0),(0,j.e)([(0,K.E)("useParallaxOcclusion")],T.prototype,"_useParallaxOcclusion",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useParallaxOcclusion",void 0),(0,j.e)([(0,K.E)()],T.prototype,"parallaxScaleBias",void 0),(0,j.e)([(0,K.E)("roughness")],T.prototype,"_roughness",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"roughness",void 0),(0,j.e)([(0,K.E)()],T.prototype,"indexOfRefraction",void 0),(0,j.e)([(0,K.E)()],T.prototype,"invertRefractionY",void 0),(0,j.e)([(0,K.E)()],T.prototype,"alphaCutOff",void 0),(0,j.e)([(0,K.E)("useLightmapAsShadowmap")],T.prototype,"_useLightmapAsShadowmap",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useLightmapAsShadowmap",void 0),(0,j.e)([(0,K.m)("diffuseFresnelParameters")],T.prototype,"_diffuseFresnelParameters",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"diffuseFresnelParameters",void 0),(0,j.e)([(0,K.m)("opacityFresnelParameters")],T.prototype,"_opacityFresnelParameters",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],T.prototype,"opacityFresnelParameters",void 0),(0,j.e)([(0,K.m)("reflectionFresnelParameters")],T.prototype,"_reflectionFresnelParameters",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"reflectionFresnelParameters",void 0),(0,j.e)([(0,K.m)("refractionFresnelParameters")],T.prototype,"_refractionFresnelParameters",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"refractionFresnelParameters",void 0),(0,j.e)([(0,K.m)("emissiveFresnelParameters")],T.prototype,"_emissiveFresnelParameters",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"emissiveFresnelParameters",void 0),(0,j.e)([(0,K.E)("useReflectionFresnelFromSpecular")],T.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsFresnelDirty")],T.prototype,"useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,K.E)("useGlossinessFromSpecularMapAlpha")],T.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,K.E)("maxSimultaneousLights")],T.prototype,"_maxSimultaneousLights",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsLightsDirty")],T.prototype,"maxSimultaneousLights",void 0),(0,j.e)([(0,K.E)("invertNormalMapX")],T.prototype,"_invertNormalMapX",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"invertNormalMapX",void 0),(0,j.e)([(0,K.E)("invertNormalMapY")],T.prototype,"_invertNormalMapY",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"invertNormalMapY",void 0),(0,j.e)([(0,K.E)("twoSidedLighting")],T.prototype,"_twoSidedLighting",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"twoSidedLighting",void 0),(0,j.e)([(0,K.E)("applyDecalMapAfterDetailMap")],T.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,j.e)([(0,K.d)("_markAllSubMeshesAsMiscDirty")],T.prototype,"applyDecalMapAfterDetailMap",void 0),(0,mI.e)("BABYLON.StandardMaterial",T),y.b.DefaultMaterialFactory=I=>new T("default material",I)}}]);