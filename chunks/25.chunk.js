"use strict";(self.fwuvyyymhp8=self.fwuvyyymhp8||[]).push([[25],{12740:(N,U,V)=>{V.d(U,{d:()=>p});var A=V(12367),t=V(12672),n=V(12369),q=V(12736),i=V(12732),z=V(12743),S=V(12713);class E extends i.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class p extends z.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(N){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(N,"DetailMap",140,new E,U),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=t.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=N._dirtyCallbacks[1]}isReadyForSubMesh(N,U,V){return!this._isEnabled||!(N._areTexturesDirty&&U.texturesEnabled&&V.getCaps().standardDerivatives&&this._texture&&q.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(N,U){if(this._isEnabled){N.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const V=U.getEngine();N._areTexturesDirty&&(V.getCaps().standardDerivatives&&this._texture&&q.c.DetailTextureEnabled&&this._isEnabled?((0,S.T)(this._texture,N,"DETAIL"),N.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):N.DETAIL=!1)}else N.DETAIL=!1}bindForSubMesh(N,U){if(!this._isEnabled)return;const V=this._material.isFrozen;N.useUbo&&V&&N.isSync||this._texture&&q.c.DetailTextureEnabled&&(N.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,S.s)(this._texture,N,"detail")),U.texturesEnabled&&this._texture&&q.c.DetailTextureEnabled&&N.setTexture("detailSampler",this._texture)}hasTexture(N){return this._texture===N}getActiveTextures(N){this._texture&&N.push(this._texture)}getAnimatables(N){this._texture&&this._texture.animations&&this._texture.animations.length>0&&N.push(this._texture)}dispose(N){var U;N&&(null===(U=this._texture)||void 0===U||U.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(N){N.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,A.b)([(0,n.D)("detailTexture"),(0,n.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"texture",void 0),(0,A.b)([(0,n.N)()],p.prototype,"diffuseBlendLevel",void 0),(0,A.b)([(0,n.N)()],p.prototype,"roughnessBlendLevel",void 0),(0,A.b)([(0,n.N)()],p.prototype,"bumpLevel",void 0),(0,A.b)([(0,n.N)(),(0,n.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"normalBlendMethod",void 0),(0,A.b)([(0,n.N)(),(0,n.e)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"isEnabled",void 0)},12732:(N,U,V)=>{V.d(U,{e:()=>A});class A{constructor(N){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=N,N)for(const U in N)Object.prototype.hasOwnProperty.call(N,U)&&this._setDefaultValue(U)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let N=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||N,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const N of Object.keys(this))"_"!==N[0]&&this._keys.push(N);if(this._externalProperties)for(const N in this._externalProperties)-1===this._keys.indexOf(N)&&this._keys.push(N)}isEqual(N){if(this._keys.length!==N._keys.length)return!1;for(let U=0;U<this._keys.length;U++){const V=this._keys[U];if(this[V]!==N[V])return!1}return!0}cloneTo(N){this._keys.length!==N._keys.length&&(N._keys=this._keys.slice(0));for(let U=0;U<this._keys.length;U++){const V=this._keys[U];N[V]=this[V]}}reset(){for(const N of this._keys)this._setDefaultValue(N)}_setDefaultValue(N){var U,V,A,t;const n=(null===(U=this._externalProperties)||void 0===U||null===(V=U[N])||void 0===V?void 0:V.type)??typeof this[N],q=null===(A=this._externalProperties)||void 0===A||null===(t=A[N])||void 0===t?void 0:t.default;switch(n){case"number":this[N]=q??0;break;case"string":this[N]=q??"";break;default:this[N]=q??!1}}toString(){let N="";for(let U=0;U<this._keys.length;U++){const V=this._keys[U],A=this[V];switch(typeof A){case"number":case"string":N+="#define "+V+" "+A+"\n";break;default:A&&(N+="#define "+V+"\n")}}return N}}},12736:(N,U,V)=>{V.d(U,{c:()=>t});var A=V(12272);class t{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(N){this._DiffuseTextureEnabled!==N&&(this._DiffuseTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(N){this._BaseWeightTextureEnabled!==N&&(this._BaseWeightTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(N){this._BaseDiffuseRoughnessTextureEnabled!==N&&(this._BaseDiffuseRoughnessTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(N){this._DetailTextureEnabled!==N&&(this._DetailTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(N){this._DecalMapEnabled!==N&&(this._DecalMapEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(N){this._AmbientTextureEnabled!==N&&(this._AmbientTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(N){this._OpacityTextureEnabled!==N&&(this._OpacityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(N){this._ReflectionTextureEnabled!==N&&(this._ReflectionTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(N){this._EmissiveTextureEnabled!==N&&(this._EmissiveTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(N){this._SpecularTextureEnabled!==N&&(this._SpecularTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(N){this._BumpTextureEnabled!==N&&(this._BumpTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(N){this._LightmapTextureEnabled!==N&&(this._LightmapTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(N){this._RefractionTextureEnabled!==N&&(this._RefractionTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(N){this._ColorGradingTextureEnabled!==N&&(this._ColorGradingTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(N){this._FresnelEnabled!==N&&(this._FresnelEnabled=N,A.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(N){this._ClearCoatTextureEnabled!==N&&(this._ClearCoatTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(N){this._ClearCoatBumpTextureEnabled!==N&&(this._ClearCoatBumpTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(N){this._ClearCoatTintTextureEnabled!==N&&(this._ClearCoatTintTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(N){this._SheenTextureEnabled!==N&&(this._SheenTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(N){this._AnisotropicTextureEnabled!==N&&(this._AnisotropicTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(N){this._ThicknessTextureEnabled!==N&&(this._ThicknessTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(N){this._RefractionIntensityTextureEnabled!==N&&(this._RefractionIntensityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(N){this._TranslucencyIntensityTextureEnabled!==N&&(this._TranslucencyIntensityTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(N){this._TranslucencyColorTextureEnabled!==N&&(this._TranslucencyColorTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(N){this._IridescenceTextureEnabled!==N&&(this._IridescenceTextureEnabled=N,A.c.MarkAllMaterialsAsDirty(1))}}t._DiffuseTextureEnabled=!0,t._BaseWeightTextureEnabled=!0,t._BaseDiffuseRoughnessTextureEnabled=!0,t._DetailTextureEnabled=!0,t._DecalMapEnabled=!0,t._AmbientTextureEnabled=!0,t._OpacityTextureEnabled=!0,t._ReflectionTextureEnabled=!0,t._EmissiveTextureEnabled=!0,t._SpecularTextureEnabled=!0,t._BumpTextureEnabled=!0,t._LightmapTextureEnabled=!0,t._RefractionTextureEnabled=!0,t._ColorGradingTextureEnabled=!0,t._FresnelEnabled=!0,t._ClearCoatTextureEnabled=!0,t._ClearCoatBumpTextureEnabled=!0,t._ClearCoatTintTextureEnabled=!0,t._SheenTextureEnabled=!0,t._AnisotropicTextureEnabled=!0,t._ThicknessTextureEnabled=!0,t._RefractionIntensityTextureEnabled=!0,t._TranslucencyIntensityTextureEnabled=!0,t._TranslucencyColorTextureEnabled=!0,t._IridescenceTextureEnabled=!0},12749:(N,U,V)=>{V.d(U,{d:()=>n});var A,t=V(12383);!function(N){N[N.Zero=0]="Zero",N[N.One=1]="One",N[N.MaxViewZ=2]="MaxViewZ"}(A||(A={}));class n{static CreateConfiguration(N){return n._Configurations[N]={defines:{},previousWorldMatrices:{},previousViewProjection:t.Matrix.Zero(),currentViewProjection:t.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},n._Configurations[N]}static DeleteConfiguration(N){delete n._Configurations[N]}static GetConfiguration(N){return n._Configurations[N]}static AddUniformsAndSamplers(N,U){N.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(N,U){for(const V of U)if(V.Ei)for(const U of V.Ei)U._removeDrawWrapper(N)}static PrepareDefines(N,U,V){if(!V._arePrePassDirty)return;const A=n._Configurations[N];if(!A)return;V.PREPASS=!0,V.PREPASS_COLOR=!1,V.PREPASS_COLOR_INDEX=-1;let t=0;for(let q=0;q<n.GeometryTextureDescriptions.length;q++){const N=n.GeometryTextureDescriptions[q],U=N.define,i=N.defineIndex,z=A.defines[i];void 0!==z?(V[U]=!0,V[i]=z,t++):(V[U]=!1,delete V[i])}V.SCENE_MRT_COUNT=t,V.BONES_VELOCITY_ENABLED=U.useBones&&U.computeBonesUsingShaders&&U.skeleton&&!U.skeleton.isUsingTextureForMatrices&&-1===A.excludedSkinnedMesh.indexOf(U)}static Bind(N,U,V,A,t){const q=n._Configurations[N];if(!q)return;const i=V.YN(),z=i.getEngine();if(q.reverseCulling&&z.setStateCullFaceType(i._mirroredCameraPosition?t.cullBackFaces:!t.cullBackFaces),(void 0!==q.defines.PREPASS_VELOCITY_INDEX||void 0!==q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(q.previousWorldMatrices[V.uniqueId]||(q.previousWorldMatrices[V.uniqueId]=A.clone()),q.previousViewProjection||(q.previousViewProjection=i.getTransformMatrix().clone(),q.currentViewProjection=i.getTransformMatrix().clone()),q.currentViewProjection.updateFlag!==i.getTransformMatrix().updateFlag?(q.lastUpdateFrameId=z.frameId,q.previousViewProjection.A(q.currentViewProjection),q.currentViewProjection.A(i.getTransformMatrix())):q.lastUpdateFrameId!==z.frameId&&(q.lastUpdateFrameId=z.frameId,q.previousViewProjection.A(q.currentViewProjection)),U.setMatrix("previousWorld",q.previousWorldMatrices[V.uniqueId]),U.setMatrix("previousViewProjection",q.previousViewProjection),q.previousWorldMatrices[V.uniqueId]=A.clone(),V.useBones&&V.computeBonesUsingShaders&&V.skeleton)){const N=V.skeleton;if(!N.isUsingTextureForMatrices||-1===U.getUniformIndex("boneTextureWidth")){const A=N.getTransformMatrices(V);A&&(q.previousBones[V.uniqueId]||(q.previousBones[V.uniqueId]=A.slice()),U.setMatrices("mPreviousBones",q.previousBones[V.uniqueId]),q.previousBones[V.uniqueId].set(A))}}}}n.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],n._Configurations={}},12743:(N,U,V)=>{V.d(U,{e:()=>d});var A=V(12367),t=V(12369),n=V(12672),q=V(12223),i=V(12251),z=V(12288);const S=new RegExp("^([gimus]+)!");class E{constructor(N){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=N,this._scene=N.YN(),this._engine=this._scene.getEngine()}_addPlugin(N){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===N.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!N.isCompatible(this._material.shaderLanguage))throw`The plugin "${N.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const U=N.getClassName();E._MaterialPluginClassToMainDefine[U]||(E._MaterialPluginClassToMainDefine[U]="MATERIALPLUGIN_"+ ++E._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(N,U)=>this._handlePluginEvent(N,U),this._plugins.push(N),this._plugins.sort(((N,U)=>N.priority-U.priority)),this._codeInjectionPoints={};const V={};V[E._MaterialPluginClassToMainDefine[U]]={type:"boolean",default:!0};for(const A of this._plugins)A.collectDefines(V),this._collectPointNames("vertex",A.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",A.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=V,!0}_activatePlugin(N){-1===this._activePlugins.indexOf(N)&&(this._activePlugins.push(N),this._activePlugins.sort(((N,U)=>N.priority-U.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),N.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(N),this._activePluginsForExtraEvents.sort(((N,U)=>N.priority-U.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(N){for(let U=0;U<this._plugins.length;++U)if(this._plugins[U].name===N)return this._plugins[U];return null}_handlePluginEventIsReadyForSubMesh(N){let U=!0;for(const V of this._activePlugins)U=U&&V.isReadyForSubMesh(N.defines,this._scene,this._engine,N.subMesh);N.isReadyForSubMesh=U}_handlePluginEventPrepareDefinesBeforeAttributes(N){for(const U of this._activePlugins)U.prepareDefinesBeforeAttributes(N.defines,this._scene,N.mesh)}_handlePluginEventPrepareDefines(N){for(const U of this._activePlugins)U.prepareDefines(N.defines,this._scene,N.mesh)}_handlePluginEventHardBindForSubMesh(N){for(const U of this._activePluginsForExtraEvents)U.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,N.subMesh)}_handlePluginEventBindForSubMesh(N){for(const U of this._activePlugins)U.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,N.subMesh)}_handlePluginEventHasRenderTargetTextures(N){let U=!1;for(const V of this._activePluginsForExtraEvents)if(U=V.hasRenderTargetTextures(),U)break;N.hasRenderTargetTextures=U}_handlePluginEventFillRenderTargetTextures(N){for(const U of this._activePluginsForExtraEvents)U.fillRenderTargetTextures(N.renderTargets)}_handlePluginEvent(N,U){switch(N){case 512:{const N=U;for(const U of this._activePlugins)U.getActiveTextures(N.activeTextures);break}case 256:{const N=U;for(const U of this._activePlugins)U.getAnimatables(N.animatables);break}case 1024:{const N=U;let V=!1;for(const U of this._activePlugins)if(V=U.hasTexture(N.texture),V)break;N.hasTexture=V;break}case 2:{const N=U;for(const U of this._plugins)U.dispose(N.forceDisposeTextures);break}case 4:U.defineNames=this._defineNamesFromPlugins;break;case 128:{const N=U;for(const U of this._activePlugins)N.fallbackRank=U.addFallbacks(N.defines,N.fallbacks,N.fallbackRank),U.getAttributes(N.attributes,this._scene,N.mesh);this._uniformList.length>0&&N.uniforms.push(...this._uniformList),this._samplerList.length>0&&N.samplers.push(...this._samplerList),this._uboList.length>0&&N.uniformBuffersNames.push(...this._uboList),N.customCode=this._injectCustomCode(N,N.customCode);break}case 8:{const N=U;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const V=1===this._material.shaderLanguage;for(const U of this._plugins){const A=U.getUniforms(this._material.shaderLanguage);if(A){if(A.ubo)for(const U of A.ubo){if(U.size&&U.type){const A=U.arraySize??0;if(N.ubo.addUniform(U.name,U.size,A),V){let N;switch(U.type){case"mat4":N="mat4x4f";break;case"float":N="f32";break;default:N=`${U.type}f`}this._uboDeclaration+=A>0?`uniform ${U.name}: array<${N}, ${A}>;\n`:`uniform ${U.name}: ${N};\n`}else this._uboDeclaration+=`${U.type} ${U.name}${A>0?`[${A}]`:""};\n`}this._uniformList.push(U.name)}A.vertex&&(this._vertexDeclaration+=A.vertex+"\n"),A.fragment&&(this._fragmentDeclaration+=A.fragment+"\n")}U.getSamplers(this._samplerList),U.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(N,U){if(U)for(const V in U)this._codeInjectionPoints[N]||(this._codeInjectionPoints[N]={}),this._codeInjectionPoints[N][V]=!0}_injectCustomCode(N,U){return(V,A)=>{var t;U&&(A=U(V,A)),this._uboDeclaration&&(A=A.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(A=A.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(A=A.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const n=null===(t=this._codeInjectionPoints)||void 0===t?void 0:t[V];if(!n)return A;let q=null;for(let U in n){let t="";for(const A of this._activePlugins){var E;let n=null===(E=A.getCustomCode(V,this._material.shaderLanguage))||void 0===E?void 0:E[U];if(n){if(A.resolveIncludes){if(null===q){const U=0;q={defines:[],indexParameters:N.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:z.b.GetShadersRepository(U),includesShadersStore:z.b.GetIncludesShadersStore(U),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,ln:this._engine.ln,processCodeAfterIncludes:void 0}}q.isFragment="fragment"===V,(0,i.m)(n,q,(N=>n=N))}t+=n+"\n"}}if(t.length>0)if("!"===U.charAt(0)){U=U.substring(1);let N="g";if("!"===U.charAt(0))N="",U=U.substring(1);else{const V=S.exec(U);V&&V.length>=2&&(N=V[1],U=U.substring(N.length+1))}N.indexOf("g")<0&&(N+="g");const V=A,n=new RegExp(U,N);let q=n.exec(V);for(;null!==q;){let N=t;for(let U=0;U<q.length;++U)N=N.replace("$"+U,q[U]);A=A.replace(q[0],N),q=n.exec(V)}}else{const N="#define "+U;A=A.replace(N,"\n"+t+"\n"+N)}}return A}}}E._MaterialPluginClassToMainDefine={},E._MaterialPluginCounter=0,q.e.OnEnginesDisposedObservable.add((()=>{C()}));const p=[];let k=!1,B=null;function C(){p.length=0,k=!1,n.d.OnEventObservable.remove(B),B=null}var x=V(12413),J=V(12344);class d{isCompatible(N){return 0===N}_enable(N){N&&this._pluginManager._activatePlugin(this)}constructor(N,U,V,A){let t=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],n=arguments.length>5&&void 0!==arguments[5]&&arguments[5],q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=N,this.name=U,this.priority=V,this.resolveIncludes=q,N.pluginManager||(N.pluginManager=new E(N),N.Ai.add((()=>{N.pluginManager=void 0}))),this._pluginDefineNames=A,this._pluginManager=N.pluginManager,t&&this._pluginManager._addPlugin(this),n&&this._enable(!0),this.markAllDefinesAsDirty=N._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(N,U,V,A){return!0}hardBindForSubMesh(N,U,V,A){}bindForSubMesh(N,U,V,A){}dispose(N){}getCustomCode(N){return null}collectDefines(N){if(this._pluginDefineNames)for(const U of Object.keys(this._pluginDefineNames)){if("_"===U[0])continue;const V=typeof this._pluginDefineNames[U];N[U]={type:"number"===V?"number":"string"===V?"string":"boolean"===V?"boolean":"object",default:this._pluginDefineNames[U]}}}prepareDefinesBeforeAttributes(N,U,V){}prepareDefines(N,U,V){}hasTexture(N){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(N){}getActiveTextures(N){}getAnimatables(N){}addFallbacks(N,U,V){return V}getSamplers(N){}getAttributes(N,U,V){}getUniformBuffersNames(N){}getUniforms(){return{}}copyTo(N){x.d.Clone((()=>N),this)}serialize(){return x.d.Serialize(this)}parse(N,U,V){x.d.Parse((()=>this),N,U,V)}}(0,A.b)([(0,t.N)()],d.prototype,"name",void 0),(0,A.b)([(0,t.N)()],d.prototype,"priority",void 0),(0,A.b)([(0,t.N)()],d.prototype,"resolveIncludes",void 0),(0,A.b)([(0,t.N)()],d.prototype,"registerForExtraEvents",void 0),(0,J.e)("BABYLON.MaterialPluginBase",d)},12727:(N,U,V)=>{V.d(U,{b:()=>A});class A{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(N){N.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(N){}bindForSubMesh(N,U,V,A,t){if(U.prePassRenderer&&U.prePassRenderer.enabled&&U.prePassRenderer.currentRTisSceneRT&&(-1!==U.prePassRenderer.getIndex(2)||-1!==U.prePassRenderer.getIndex(11))){this.previousWorldMatrices[V.uniqueId]||(this.previousWorldMatrices[V.uniqueId]=A.clone()),this.previousViewProjection||(this.previousViewProjection=U.getTransformMatrix().clone(),this.currentViewProjection=U.getTransformMatrix().clone());const t=U.getEngine();this.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.A(this.currentViewProjection),this.currentViewProjection.A(U.getTransformMatrix())):this._lastUpdateFrameId!==t.frameId&&(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.A(this.currentViewProjection)),N.setMatrix("previousWorld",this.previousWorldMatrices[V.uniqueId]),N.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[V.uniqueId]=A.clone()}}}},12725:(N,U,V)=>{V.d(U,{dU:()=>s});var A=V(12367),t=V(12369),n=V(12481),q=V(12601),i=V(12426),z=V(12453),S=V(12727),E=V(12604),p=V(12672),k=V(12732),B=V(12667),C=V(12364),x=V(12344),J=V(12736),d=V(12662),r=V(12740),v=V(12717),h=V(12713),c=V(12413),H=V(12749);const Y={effect:null,subMesh:null};class W extends k.e{constructor(N){super(N),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(N){const U=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const V of U)this[V]=V===N}}class s extends B.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(N){this._attachImageProcessingConfiguration(N),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(N){N!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=N||this.YN().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(N){this.imageProcessingConfiguration.colorCurvesEnabled=N}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(N){this.imageProcessingConfiguration.colorGradingEnabled=N}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(N){this._imageProcessingConfiguration.toneMappingEnabled=N}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(N){this._imageProcessingConfiguration.exposure=N}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(N){this._imageProcessingConfiguration.contrast=N}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(N){this._imageProcessingConfiguration.colorGradingTexture=N}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(N){this._imageProcessingConfiguration.colorCurves=N}get canRenderToMRT(){return!0}constructor(N,U){super(N,U,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||s.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new i.rU(0,0,0),this.diffuseColor=new i.rU(1,1,1),this.specularColor=new i.rU(1,1,1),this.emissiveColor=new i.rU(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new n.h(16),this._globalAmbientColor=new i.rU(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new r.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new S.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"dU"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===p.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ki&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==p.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ki||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(N,U){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const t=U._drawWrapper;if(t.effect&&this.isFrozen&&t._wasPreviouslyReady&&t._wasPreviouslyUsingInstances===A)return!0;U.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),U.materialDefines=new W(this._eventInfo.defineNames));const n=this.YN(),q=U.materialDefines;if(this._isReadyForSubMesh(U))return!0;const i=n.getEngine();q._needNormals=(0,h.R)(n,N,q,!0,this._maxSimultaneousLights,this._disableLighting),(0,h.W)(n,q);const p=this.needAlphaBlendingForMesh(N)&&this.YN().useOrderIndependentTransparency;if((0,h.ab)(n,q,this.canRenderToMRT&&!p),(0,h._)(n,q,p),H.d.PrepareDefines(i.currentRenderPassId,N,q),q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,q._needUVs=!1;for(let N=1;N<=6;++N)q["MAINUV"+N]=!1;if(n.texturesEnabled){if(q.DIFFUSEDIRECTUV=0,q.BUMPDIRECTUV=0,q.AMBIENTDIRECTUV=0,q.OPACITYDIRECTUV=0,q.EMISSIVEDIRECTUV=0,q.SPECULARDIRECTUV=0,q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&s.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._diffuseTexture,q,"DIFFUSE")}else q.DIFFUSE=!1;if(this._ambientTexture&&s.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._ambientTexture,q,"AMBIENT")}else q.AMBIENT=!1;if(this._opacityTexture&&s.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._opacityTexture,q,"OPACITY"),q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else q.OPACITY=!1;if(this._reflectionTexture&&s.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(q._needNormals=!0,q.REFLECTION=!0,q.ROUGHNESS=this._roughness>0,q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===C.e.INVCUBIC_MODE,q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,q.REFLECTIONMAP_OPPOSITEZ=q.REFLECTIONMAP_3D&&this.YN().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case C.e.EXPLICIT_MODE:q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case C.e.PLANAR_MODE:q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case C.e.PROJECTION_MODE:q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case C.e.SKYBOX_MODE:q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case C.e.SPHERICAL_MODE:q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case C.e.EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case C.e.FIXED_EQUIRECTANGULAR_MODE:q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case C.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case C.e.CUBIC_MODE:case C.e.INVCUBIC_MODE:default:q.setReflectionMode("REFLECTIONMAP_CUBIC")}q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else q.REFLECTION=!1,q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&s.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._emissiveTexture,q,"EMISSIVE")}else q.EMISSIVE=!1;if(this._lightmapTexture&&s.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._lightmapTexture,q,"LIGHTMAP"),q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else q.LIGHTMAP=!1;if(this._specularTexture&&s.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,h.T)(this._specularTexture,q,"SPECULAR"),q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else q.SPECULAR=!1;if(n.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&s.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,h.T)(this._bumpTexture,q,"BUMP"),q.PARALLAX=this._useParallax,q.PARALLAX_RHS=n.useRightHandedSystem,q.PARALLAXOCCLUSION=this._useParallaxOcclusion,q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else q.BUMP=!1,q.PARALLAX=!1,q.PARALLAX_RHS=!1,q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&s.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;q._needUVs=!0,q.REFRACTION=!0,q.REFRACTIONMAP_3D=this._refractionTexture.isCube,q.RGBDREFRACTION=this._refractionTexture.isRGBD,q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else q.REFRACTION=!1;q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else q.DIFFUSE=!1,q.AMBIENT=!1,q.OPACITY=!1,q.REFLECTION=!1,q.EMISSIVE=!1,q.LIGHTMAP=!1,q.BUMP=!1,q.REFRACTION=!1;q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,q.SPECULAROVERALPHA=this._useSpecularOverAlpha,q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(N)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=q,this._eventInfo.subMesh=U,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(q),q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(q._areFresnelDirty&&(s.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,q._needNormals=!0,q.FRESNEL=!0):q.FRESNEL=!1),q.AREALIGHTUSED)for(let V=0;V<N.lightSources.length;V++)if(!N.lightSources[V]._isReady())return!1;(0,h.U)(N,n,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(N),q,this._applyDecalMapAfterDetailMap),(0,h.N)(n,i,this,q,A,null,U.getRenderingMesh().hasThinInstances),this._eventInfo.defines=q,this._eventInfo.mesh=N,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,h.L)(N,q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let k=!1;if(q.isDirty){const A=q._areLightsDisposed;q.markAsProcessed();const t=new d.e;q.REFLECTION&&t.addFallback(0,"REFLECTION"),q.SPECULAR&&t.addFallback(0,"SPECULAR"),q.BUMP&&t.addFallback(0,"BUMP"),q.PARALLAX&&t.addFallback(1,"PARALLAX"),q.PARALLAX_RHS&&t.addFallback(1,"PARALLAX_RHS"),q.PARALLAXOCCLUSION&&t.addFallback(0,"PARALLAXOCCLUSION"),q.SPECULAROVERALPHA&&t.addFallback(0,"SPECULAROVERALPHA"),q.FOG&&t.addFallback(1,"FOG"),q.POINTSIZE&&t.addFallback(0,"POINTSIZE"),q.LOGARITHMICDEPTH&&t.addFallback(0,"LOGARITHMICDEPTH"),(0,h.w)(q,t,this._maxSimultaneousLights),q.SPECULARTERM&&t.addFallback(0,"SPECULARTERM"),q.DIFFUSEFRESNEL&&t.addFallback(1,"DIFFUSEFRESNEL"),q.OPACITYFRESNEL&&t.addFallback(2,"OPACITYFRESNEL"),q.REFLECTIONFRESNEL&&t.addFallback(3,"REFLECTIONFRESNEL"),q.EMISSIVEFRESNEL&&t.addFallback(4,"EMISSIVEFRESNEL"),q.FRESNEL&&t.addFallback(4,"FRESNEL"),q.MULTIVIEW&&t.addFallback(0,"MULTIVIEW");const p=[z.f.PositionKind];q.NORMAL&&p.push(z.f.NormalKind),q.TANGENT&&p.push(z.f.TangentKind);for(let N=1;N<=6;++N)q["UV"+N]&&p.push(`uv${1===N?"":N}`);q.VERTEXCOLOR&&p.push(z.f.ColorKind),(0,h.y)(p,N,q,t),(0,h.C)(p,q),(0,h.E)(p,N,q),(0,h.x)(p,N,q);let B="default";const C=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],x=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],J=["Material","Scene","Mesh"],r={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=t,this._eventInfo.fallbackRank=0,this._eventInfo.defines=q,this._eventInfo.uniforms=C,this._eventInfo.attributes=p,this._eventInfo.samplers=x,this._eventInfo.uniformBuffersNames=J,this._eventInfo.customCode=void 0,this._eventInfo.mesh=N,this._eventInfo.indexParameters=r,this._callbackPluginEventGeneric(128,this._eventInfo),H.d.AddUniformsAndSamplers(C,x),S.b.AddUniforms(C),S.b.AddSamplers(x),E.d&&(E.d.PrepareUniforms(C,q),E.d.PrepareSamplers(x,q)),(0,h.bb)({uniformsNames:C,uniformBuffersNames:J,samplers:x,defines:q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,v.b)(C);const c={};this.customShaderNameResolve&&(B=this.customShaderNameResolve(B,C,J,x,q,p,c));const W=q.toString(),s=U.effect;let M=n.getEngine().createEffect(B,{attributes:p,uniformsNames:C,uniformBuffersNames:J,samplers:x,defines:W,fallbacks:t,onCompiled:this.onCompiled,onError:this.onError,indexParameters:r,processFinalCode:c.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([V.e(41),V.e(64)]).then(V.bind(V,14902)),Promise.all([V.e(39),V.e(65)]).then(V.bind(V,15044))]):await Promise.all([Promise.all([V.e(34),V.e(67)]).then(V.bind(V,15133)),Promise.all([V.e(33),V.e(68)]).then(V.bind(V,15309))]),this._shadersLoaded=!0}},i);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(Y.effect=M,Y.subMesh=U,this._onEffectCreatedObservable.notifyObservers(Y)),this.allowShaderHotSwapping&&s&&!M.isReady()){if(M=s,q.markAsUnprocessed(),k=this.isFrozen,A)return q._areLightsDisposed=!0,!1}else n.resetCachedMaterial(),U.setEffect(M,q,this._materialContext)}return!(!U.effect||!U.effect.isReady())&&(q._renderId=n.getRenderId(),t._wasPreviouslyReady=!k,t._wasPreviouslyUsingInstances=A,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const N=this._uniformBuffer;N.addUniform("diffuseLeftColor",4),N.addUniform("diffuseRightColor",4),N.addUniform("opacityParts",4),N.addUniform("reflectionLeftColor",4),N.addUniform("reflectionRightColor",4),N.addUniform("refractionLeftColor",4),N.addUniform("refractionRightColor",4),N.addUniform("emissiveLeftColor",4),N.addUniform("emissiveRightColor",4),N.addUniform("vDiffuseInfos",2),N.addUniform("vAmbientInfos",2),N.addUniform("vOpacityInfos",2),N.addUniform("vReflectionInfos",2),N.addUniform("vReflectionPosition",3),N.addUniform("vReflectionSize",3),N.addUniform("vEmissiveInfos",2),N.addUniform("vLightmapInfos",2),N.addUniform("vSpecularInfos",2),N.addUniform("vBumpInfos",3),N.addUniform("diffuseMatrix",16),N.addUniform("ambientMatrix",16),N.addUniform("opacityMatrix",16),N.addUniform("reflectionMatrix",16),N.addUniform("emissiveMatrix",16),N.addUniform("lightmapMatrix",16),N.addUniform("specularMatrix",16),N.addUniform("bumpMatrix",16),N.addUniform("vTangentSpaceParams",2),N.addUniform("pointSize",1),N.addUniform("alphaCutOff",1),N.addUniform("refractionMatrix",16),N.addUniform("vRefractionInfos",4),N.addUniform("vRefractionPosition",3),N.addUniform("vRefractionSize",3),N.addUniform("vSpecularColor",4),N.addUniform("vEmissiveColor",3),N.addUniform("vDiffuseColor",4),N.addUniform("vAmbientColor",3),N.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(N,U,V){const A=this.YN(),t=V.materialDefines;if(!t)return;const n=V.effect;if(!n)return;this._activeEffect=n,U.getMeshUniformBuffer().bindToEffect(n,"Mesh"),U.transferToEffect(N),this._uniformBuffer.bindToEffect(n,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,A,U,N,this.isFrozen),H.d.Bind(A.getEngine().currentRenderPassId,this._activeEffect,U,N,this);const z=A.activeCamera;z?this._uniformBuffer.updateFloat4("cameraInfo",z.Bi,z.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=V,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),t.OBJECTSPACE_NORMALMAP&&(N.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const S=this._mustRebind(A,n,V,U.visibility);(0,h.b)(U,n);const E=this._uniformBuffer;if(S){if(this.bindViewProjection(n),!E.useUbo||!this.isFrozen||!E.isSync||V._drawWrapper._forceRebindOnNextCall){if(s.FresnelEnabled&&t.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(E.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),E.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&E.updateColor4("opacityParts",new i.rU(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(E.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),E.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(E.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),E.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(E.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),E.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),A.texturesEnabled){if(this._diffuseTexture&&s.DiffuseTextureEnabled&&(E.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,h.s)(this._diffuseTexture,E,"diffuse")),this._ambientTexture&&s.AmbientTextureEnabled&&(E.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,h.s)(this._ambientTexture,E,"ambient")),this._opacityTexture&&s.OpacityTextureEnabled&&(E.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,h.s)(this._opacityTexture,E,"opacity")),this._hasAlphaChannel()&&E.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&s.ReflectionTextureEnabled){if(E.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),E.Ci("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const N=this._reflectionTexture;E.updateVector3("vReflectionPosition",N.boundingBoxPosition),E.updateVector3("vReflectionSize",N.boundingBoxSize)}}else E.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&s.EmissiveTextureEnabled&&(E.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,h.s)(this._emissiveTexture,E,"emissive")),this._lightmapTexture&&s.LightmapTextureEnabled&&(E.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,h.s)(this._lightmapTexture,E,"lightmap")),this._specularTexture&&s.SpecularTextureEnabled&&(E.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,h.s)(this._specularTexture,E,"specular")),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&(E.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,h.s)(this._bumpTexture,E,"bump"),A._mirroredCameraPosition?E.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):E.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&s.RefractionTextureEnabled){let N=1;if(this._refractionTexture.isCube||(E.Ci("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(N=this._refractionTexture.depth)),E.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,N,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const N=this._refractionTexture;E.updateVector3("vRefractionPosition",N.boundingBoxPosition),E.updateVector3("vRefractionSize",N.boundingBoxSize)}}}this.pointsCloud&&E.updateFloat("pointSize",this.pointSize),E.updateColor4("vSpecularColor",this.specularColor,this.specularPower),E.updateColor3("vEmissiveColor",s.EmissiveTextureEnabled?this.emissiveColor:i.rU.BlackReadOnly),E.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),A.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),E.updateColor3("vAmbientColor",this._globalAmbientColor)}A.texturesEnabled&&(this._diffuseTexture&&s.DiffuseTextureEnabled&&n.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&s.AmbientTextureEnabled&&n.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&s.OpacityTextureEnabled&&n.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&s.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?n.setTexture("reflectionCubeSampler",this._reflectionTexture):n.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&s.EmissiveTextureEnabled&&n.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&s.LightmapTextureEnabled&&n.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&s.SpecularTextureEnabled&&n.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&n.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&s.RefractionTextureEnabled&&(this._refractionTexture.isCube?n.setTexture("refractionCubeSampler",this._refractionTexture):n.setTexture("refraction2DSampler",this._refractionTexture))),this.YN().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(U)&&this.YN().depthPeelingRenderer.bind(n),this._eventInfo.subMesh=V,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,v.d)(n,this,A),this.bindEyePosition(n)}else A.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(S||!this.isFrozen){var p;if(A.lightsEnabled&&!this._disableLighting&&(0,h.g)(A,U,n,t,this._maxSimultaneousLights),(A.fogEnabled&&U.applyFog&&A.fogMode!==q.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||U.receiveShadows||t.PREPASS)&&this.bindView(n),(0,h.f)(A,U,n),t.NUM_MORPH_INFLUENCERS&&(0,h.n)(U,n),t.BAKED_VERTEX_ANIMATION_TEXTURE)null===(p=U.bakedVertexAnimationManager)||void 0===p||p.bind(n,t.INSTANCES);this.useLogarithmicDepth&&(0,h.k)(t,n,A),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(U,this._activeEffect,V),E.update()}getAnimatables(){const N=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&N.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&N.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&N.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&N.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&N.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&N.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&N.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&N.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&N.push(this._refractionTexture),N}getActiveTextures(){const N=super.getActiveTextures();return this._diffuseTexture&&N.push(this._diffuseTexture),this._ambientTexture&&N.push(this._ambientTexture),this._opacityTexture&&N.push(this._opacityTexture),this._reflectionTexture&&N.push(this._reflectionTexture),this._emissiveTexture&&N.push(this._emissiveTexture),this._specularTexture&&N.push(this._specularTexture),this._bumpTexture&&N.push(this._bumpTexture),this._lightmapTexture&&N.push(this._lightmapTexture),this._refractionTexture&&N.push(this._refractionTexture),N}hasTexture(N){return!!super.hasTexture(N)||(this._diffuseTexture===N||(this._ambientTexture===N||(this._opacityTexture===N||(this._reflectionTexture===N||(this._emissiveTexture===N||(this._specularTexture===N||(this._bumpTexture===N||(this._lightmapTexture===N||this._refractionTexture===N))))))))}dispose(N,U){var V,A,t,n,q,i,z,S,E;U&&(null===(V=this._diffuseTexture)||void 0===V||V.dispose(),null===(A=this._ambientTexture)||void 0===A||A.dispose(),null===(t=this._opacityTexture)||void 0===t||t.dispose(),null===(n=this._reflectionTexture)||void 0===n||n.dispose(),null===(q=this._emissiveTexture)||void 0===q||q.dispose(),null===(i=this._specularTexture)||void 0===i||i.dispose(),null===(z=this._bumpTexture)||void 0===z||z.dispose(),null===(S=this._lightmapTexture)||void 0===S||S.dispose(),null===(E=this._refractionTexture)||void 0===E||E.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(N,U)}clone(N){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],V=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const A=c.d.Clone((()=>new s(N,this.YN())),this,{cloneTexturesOnlyOnce:U});return A.name=N,A.id=N,this.ti.copyTo(A.ti),this._clonePlugins(A,V),A}static Parse(N,U,V){const A=c.d.Parse((()=>new s(N.name,U)),N,U,V);return N.ti&&A.ti.parse(N.ti,U,V),p.d._ParsePlugins(N,A,U,V),A}static get DiffuseTextureEnabled(){return J.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(N){J.c.DiffuseTextureEnabled=N}static get DetailTextureEnabled(){return J.c.DetailTextureEnabled}static set DetailTextureEnabled(N){J.c.DetailTextureEnabled=N}static get AmbientTextureEnabled(){return J.c.AmbientTextureEnabled}static set AmbientTextureEnabled(N){J.c.AmbientTextureEnabled=N}static get OpacityTextureEnabled(){return J.c.OpacityTextureEnabled}static set OpacityTextureEnabled(N){J.c.OpacityTextureEnabled=N}static get ReflectionTextureEnabled(){return J.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(N){J.c.ReflectionTextureEnabled=N}static get EmissiveTextureEnabled(){return J.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(N){J.c.EmissiveTextureEnabled=N}static get SpecularTextureEnabled(){return J.c.SpecularTextureEnabled}static set SpecularTextureEnabled(N){J.c.SpecularTextureEnabled=N}static get BumpTextureEnabled(){return J.c.BumpTextureEnabled}static set BumpTextureEnabled(N){J.c.BumpTextureEnabled=N}static get LightmapTextureEnabled(){return J.c.LightmapTextureEnabled}static set LightmapTextureEnabled(N){J.c.LightmapTextureEnabled=N}static get RefractionTextureEnabled(){return J.c.RefractionTextureEnabled}static set RefractionTextureEnabled(N){J.c.RefractionTextureEnabled=N}static get ColorGradingTextureEnabled(){return J.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(N){J.c.ColorGradingTextureEnabled=N}static get FresnelEnabled(){return J.c.FresnelEnabled}static set FresnelEnabled(N){J.c.FresnelEnabled=N}}s.ForceGLSL=!1,(0,A.b)([(0,t.D)("diffuseTexture")],s.prototype,"_diffuseTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"diffuseTexture",void 0),(0,A.b)([(0,t.D)("ambientTexture")],s.prototype,"_ambientTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"ambientTexture",void 0),(0,A.b)([(0,t.D)("opacityTexture")],s.prototype,"_opacityTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"opacityTexture",void 0),(0,A.b)([(0,t.D)("reflectionTexture")],s.prototype,"_reflectionTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"reflectionTexture",void 0),(0,A.b)([(0,t.D)("emissiveTexture")],s.prototype,"_emissiveTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"emissiveTexture",void 0),(0,A.b)([(0,t.D)("specularTexture")],s.prototype,"_specularTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"specularTexture",void 0),(0,A.b)([(0,t.D)("bumpTexture")],s.prototype,"_bumpTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"bumpTexture",void 0),(0,A.b)([(0,t.D)("lightmapTexture")],s.prototype,"_lightmapTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"lightmapTexture",void 0),(0,A.b)([(0,t.D)("refractionTexture")],s.prototype,"_refractionTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"refractionTexture",void 0),(0,A.b)([(0,t.j)("ambient")],s.prototype,"ambientColor",void 0),(0,A.b)([(0,t.j)("diffuse")],s.prototype,"diffuseColor",void 0),(0,A.b)([(0,t.j)("specular")],s.prototype,"specularColor",void 0),(0,A.b)([(0,t.j)("emissive")],s.prototype,"emissiveColor",void 0),(0,A.b)([(0,t.N)()],s.prototype,"specularPower",void 0),(0,A.b)([(0,t.N)("useAlphaFromDiffuseTexture")],s.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,t.N)("useEmissiveAsIllumination")],s.prototype,"_useEmissiveAsIllumination",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useEmissiveAsIllumination",void 0),(0,A.b)([(0,t.N)("linkEmissiveWithDiffuse")],s.prototype,"_linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,t.N)("useSpecularOverAlpha")],s.prototype,"_useSpecularOverAlpha",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useSpecularOverAlpha",void 0),(0,A.b)([(0,t.N)("useReflectionOverAlpha")],s.prototype,"_useReflectionOverAlpha",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useReflectionOverAlpha",void 0),(0,A.b)([(0,t.N)("disableLighting")],s.prototype,"_disableLighting",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsLightsDirty")],s.prototype,"disableLighting",void 0),(0,A.b)([(0,t.N)("useObjectSpaceNormalMap")],s.prototype,"_useObjectSpaceNormalMap",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useObjectSpaceNormalMap",void 0),(0,A.b)([(0,t.N)("useParallax")],s.prototype,"_useParallax",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallax",void 0),(0,A.b)([(0,t.N)("useParallaxOcclusion")],s.prototype,"_useParallaxOcclusion",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallaxOcclusion",void 0),(0,A.b)([(0,t.N)()],s.prototype,"parallaxScaleBias",void 0),(0,A.b)([(0,t.N)("roughness")],s.prototype,"_roughness",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"roughness",void 0),(0,A.b)([(0,t.N)()],s.prototype,"indexOfRefraction",void 0),(0,A.b)([(0,t.N)()],s.prototype,"invertRefractionY",void 0),(0,A.b)([(0,t.N)()],s.prototype,"alphaCutOff",void 0),(0,A.b)([(0,t.N)("useLightmapAsShadowmap")],s.prototype,"_useLightmapAsShadowmap",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useLightmapAsShadowmap",void 0),(0,A.b)([(0,t.r)("diffuseFresnelParameters")],s.prototype,"_diffuseFresnelParameters",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"diffuseFresnelParameters",void 0),(0,A.b)([(0,t.r)("opacityFresnelParameters")],s.prototype,"_opacityFresnelParameters",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],s.prototype,"opacityFresnelParameters",void 0),(0,A.b)([(0,t.r)("reflectionFresnelParameters")],s.prototype,"_reflectionFresnelParameters",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"reflectionFresnelParameters",void 0),(0,A.b)([(0,t.r)("refractionFresnelParameters")],s.prototype,"_refractionFresnelParameters",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"refractionFresnelParameters",void 0),(0,A.b)([(0,t.r)("emissiveFresnelParameters")],s.prototype,"_emissiveFresnelParameters",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"emissiveFresnelParameters",void 0),(0,A.b)([(0,t.N)("useReflectionFresnelFromSpecular")],s.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,t.N)("useGlossinessFromSpecularMapAlpha")],s.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,t.N)("maxSimultaneousLights")],s.prototype,"_maxSimultaneousLights",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsLightsDirty")],s.prototype,"maxSimultaneousLights",void 0),(0,A.b)([(0,t.N)("invertNormalMapX")],s.prototype,"_invertNormalMapX",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapX",void 0),(0,A.b)([(0,t.N)("invertNormalMapY")],s.prototype,"_invertNormalMapY",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapY",void 0),(0,A.b)([(0,t.N)("twoSidedLighting")],s.prototype,"_twoSidedLighting",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"twoSidedLighting",void 0),(0,A.b)([(0,t.N)("applyDecalMapAfterDetailMap")],s.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,A.b)([(0,t.e)("_markAllSubMeshesAsMiscDirty")],s.prototype,"applyDecalMapAfterDetailMap",void 0),(0,x.e)("BABYLON.StandardMaterial",s),q.e.DefaultMaterialFactory=N=>new s("default material",N)}}]);