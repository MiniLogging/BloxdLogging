"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11528:(h,V,i)=>{i.d(V,{e:()=>v});var S=i(11123),l=i(11459),Y=i(11127),g=i(11526),q=i(11520),B=i(11532),J=i(11501);class I extends q.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class v extends B.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(h){let V=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(h,"DetailMap",140,new I,V),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=l.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=h._dirtyCallbacks[1]}isReadyForSubMesh(h,V,i){return!this._isEnabled||!(h._areTexturesDirty&&V.texturesEnabled&&i.getCaps().standardDerivatives&&this._texture&&g.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(h,V){if(this._isEnabled){h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const i=V.getEngine();h._areTexturesDirty&&(i.getCaps().standardDerivatives&&this._texture&&g.d.DetailTextureEnabled&&this._isEnabled?((0,J.N)(this._texture,h,"DETAIL"),h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):h.DETAIL=!1)}else h.DETAIL=!1}bindForSubMesh(h,V){if(!this._isEnabled)return;const i=this._material.isFrozen;h.useUbo&&i&&h.isSync||this._texture&&g.d.DetailTextureEnabled&&(h.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,J.s)(this._texture,h,"detail")),V.texturesEnabled&&this._texture&&g.d.DetailTextureEnabled&&h.setTexture("detailSampler",this._texture)}hasTexture(h){return this._texture===h}getActiveTextures(h){this._texture&&h.push(this._texture)}getAnimatables(h){this._texture&&this._texture.animations&&this._texture.animations.length>0&&h.push(this._texture)}dispose(h){var V;h&&(null===(V=this._texture)||void 0===V||V.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(h){h.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,S.b)([(0,Y.v)("detailTexture"),(0,Y.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"texture",void 0),(0,S.b)([(0,Y.E)()],v.prototype,"diffuseBlendLevel",void 0),(0,S.b)([(0,Y.E)()],v.prototype,"roughnessBlendLevel",void 0),(0,S.b)([(0,Y.E)()],v.prototype,"bumpLevel",void 0),(0,S.b)([(0,Y.E)(),(0,Y.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"normalBlendMethod",void 0),(0,S.b)([(0,Y.E)(),(0,Y.e)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"isEnabled",void 0)},11520:(h,V,i)=>{i.d(V,{d:()=>S});class S{constructor(h){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=h,h)for(const V in h)Object.prototype.hasOwnProperty.call(h,V)&&this._setDefaultValue(V)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||h,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const h of Object.keys(this))"_"!==h[0]&&this._keys.push(h);if(this._externalProperties)for(const h in this._externalProperties)-1===this._keys.indexOf(h)&&this._keys.push(h)}isEqual(h){if(this._keys.length!==h._keys.length)return!1;for(let V=0;V<this._keys.length;V++){const i=this._keys[V];if(this[i]!==h[i])return!1}return!0}cloneTo(h){this._keys.length!==h._keys.length&&(h._keys=this._keys.slice(0));for(let V=0;V<this._keys.length;V++){const i=this._keys[V];h[i]=this[i]}}reset(){for(const h of this._keys)this._setDefaultValue(h)}_setDefaultValue(h){var V,i,S,l;const Y=(null===(V=this._externalProperties)||void 0===V||null===(i=V[h])||void 0===i?void 0:i.type)??typeof this[h],g=null===(S=this._externalProperties)||void 0===S||null===(l=S[h])||void 0===l?void 0:l.default;switch(Y){case"number":this[h]=g??0;break;case"string":this[h]=g??"";break;default:this[h]=g??!1}}toString(){let h="";for(let V=0;V<this._keys.length;V++){const i=this._keys[V],S=this[i];switch(typeof S){case"number":case"string":h+="#define "+i+" "+S+"\n";break;default:S&&(h+="#define "+i+"\n")}}return h}}},11526:(h,V,i)=>{i.d(V,{d:()=>l});var S=i(11028);class l{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){this._DiffuseTextureEnabled!==h&&(this._DiffuseTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(h){this._BaseWeightTextureEnabled!==h&&(this._BaseWeightTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(h){this._BaseDiffuseRoughnessTextureEnabled!==h&&(this._BaseDiffuseRoughnessTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(h){this._DetailTextureEnabled!==h&&(this._DetailTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(h){this._DecalMapEnabled!==h&&(this._DecalMapEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(h){this._AmbientTextureEnabled!==h&&(this._AmbientTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(h){this._OpacityTextureEnabled!==h&&(this._OpacityTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){this._ReflectionTextureEnabled!==h&&(this._ReflectionTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){this._EmissiveTextureEnabled!==h&&(this._EmissiveTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(h){this._SpecularTextureEnabled!==h&&(this._SpecularTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(h){this._BumpTextureEnabled!==h&&(this._BumpTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(h){this._LightmapTextureEnabled!==h&&(this._LightmapTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(h){this._RefractionTextureEnabled!==h&&(this._RefractionTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){this._ColorGradingTextureEnabled!==h&&(this._ColorGradingTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(h){this._FresnelEnabled!==h&&(this._FresnelEnabled=h,S.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(h){this._ClearCoatTextureEnabled!==h&&(this._ClearCoatTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(h){this._ClearCoatBumpTextureEnabled!==h&&(this._ClearCoatBumpTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(h){this._ClearCoatTintTextureEnabled!==h&&(this._ClearCoatTintTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(h){this._SheenTextureEnabled!==h&&(this._SheenTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(h){this._AnisotropicTextureEnabled!==h&&(this._AnisotropicTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(h){this._ThicknessTextureEnabled!==h&&(this._ThicknessTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(h){this._RefractionIntensityTextureEnabled!==h&&(this._RefractionIntensityTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(h){this._TranslucencyIntensityTextureEnabled!==h&&(this._TranslucencyIntensityTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(h){this._TranslucencyColorTextureEnabled!==h&&(this._TranslucencyColorTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(h){this._IridescenceTextureEnabled!==h&&(this._IridescenceTextureEnabled=h,S.b.MarkAllMaterialsAsDirty(1))}}l._DiffuseTextureEnabled=!0,l._BaseWeightTextureEnabled=!0,l._BaseDiffuseRoughnessTextureEnabled=!0,l._DetailTextureEnabled=!0,l._DecalMapEnabled=!0,l._AmbientTextureEnabled=!0,l._OpacityTextureEnabled=!0,l._ReflectionTextureEnabled=!0,l._EmissiveTextureEnabled=!0,l._SpecularTextureEnabled=!0,l._BumpTextureEnabled=!0,l._LightmapTextureEnabled=!0,l._RefractionTextureEnabled=!0,l._ColorGradingTextureEnabled=!0,l._FresnelEnabled=!0,l._ClearCoatTextureEnabled=!0,l._ClearCoatBumpTextureEnabled=!0,l._ClearCoatTintTextureEnabled=!0,l._SheenTextureEnabled=!0,l._AnisotropicTextureEnabled=!0,l._ThicknessTextureEnabled=!0,l._RefractionIntensityTextureEnabled=!0,l._TranslucencyIntensityTextureEnabled=!0,l._TranslucencyColorTextureEnabled=!0,l._IridescenceTextureEnabled=!0},11541:(h,V,i)=>{i.d(V,{b:()=>Y});var S,l=i(11138);!function(h){h[h.Zero=0]="Zero",h[h.One=1]="One",h[h.MaxViewZ=2]="MaxViewZ"}(S||(S={}));class Y{static CreateConfiguration(h){return Y._Configurations[h]={defines:{},previousWorldMatrices:{},previousViewProjection:l.Matrix.Zero(),currentViewProjection:l.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},Y._Configurations[h]}static DeleteConfiguration(h){delete Y._Configurations[h]}static GetConfiguration(h){return Y._Configurations[h]}static AddUniformsAndSamplers(h,V){h.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(h,V){for(const i of V)if(i.Gg)for(const V of i.Gg)V._removeDrawWrapper(h)}static PrepareDefines(h,V,i){if(!i._arePrePassDirty)return;const S=Y._Configurations[h];if(!S)return;i.PREPASS=!0,i.PREPASS_COLOR=!1,i.PREPASS_COLOR_INDEX=-1;let l=0;for(let g=0;g<Y.GeometryTextureDescriptions.length;g++){const h=Y.GeometryTextureDescriptions[g],V=h.define,q=h.defineIndex,B=S.defines[q];void 0!==B?(i[V]=!0,i[q]=B,l++):(i[V]=!1,delete i[q])}i.SCENE_MRT_COUNT=l,i.BONES_VELOCITY_ENABLED=V.useBones&&V.computeBonesUsingShaders&&V.skeleton&&!V.skeleton.isUsingTextureForMatrices&&-1===S.excludedSkinnedMesh.indexOf(V)}static Bind(h,V,i,S,l){const g=Y._Configurations[h];if(!g)return;const q=i.Mh(),B=q.getEngine();if(g.reverseCulling&&B.setStateCullFaceType(q._mirroredCameraPosition?l.cullBackFaces:!l.cullBackFaces),(void 0!==g.defines.PREPASS_VELOCITY_INDEX||void 0!==g.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(g.previousWorldMatrices[i.uniqueId]||(g.previousWorldMatrices[i.uniqueId]=S.clone()),g.previousViewProjection||(g.previousViewProjection=q.getTransformMatrix().clone(),g.currentViewProjection=q.getTransformMatrix().clone()),g.currentViewProjection.updateFlag!==q.getTransformMatrix().updateFlag?(g.lastUpdateFrameId=B.frameId,g.previousViewProjection.l(g.currentViewProjection),g.currentViewProjection.l(q.getTransformMatrix())):g.lastUpdateFrameId!==B.frameId&&(g.lastUpdateFrameId=B.frameId,g.previousViewProjection.l(g.currentViewProjection)),V.setMatrix("previousWorld",g.previousWorldMatrices[i.uniqueId]),V.setMatrix("previousViewProjection",g.previousViewProjection),g.previousWorldMatrices[i.uniqueId]=S.clone(),i.useBones&&i.computeBonesUsingShaders&&i.skeleton)){const h=i.skeleton;if(!h.isUsingTextureForMatrices||-1===V.getUniformIndex("boneTextureWidth")){const S=h.getTransformMatrices(i);S&&(g.previousBones[i.uniqueId]||(g.previousBones[i.uniqueId]=S.slice()),V.setMatrices("mPreviousBones",g.previousBones[i.uniqueId]),g.previousBones[i.uniqueId].set(S))}}}}Y.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],Y._Configurations={}},11532:(h,V,i)=>{i.d(V,{b:()=>c});var S=i(11123),l=i(11127),Y=i(11459),g=i(10988),q=i(11015),B=i(11042);const J=new RegExp("^([gimus]+)!");class I{constructor(h){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=h,this._scene=h.Mh(),this._engine=this._scene.getEngine()}_addPlugin(h){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===h.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!h.isCompatible(this._material.shaderLanguage))throw`The plugin "${h.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const V=h.getClassName();I._MaterialPluginClassToMainDefine[V]||(I._MaterialPluginClassToMainDefine[V]="MATERIALPLUGIN_"+ ++I._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(h,V)=>this._handlePluginEvent(h,V),this._plugins.push(h),this._plugins.sort(((h,V)=>h.priority-V.priority)),this._codeInjectionPoints={};const i={};i[I._MaterialPluginClassToMainDefine[V]]={type:"boolean",default:!0};for(const S of this._plugins)S.collectDefines(i),this._collectPointNames("vertex",S.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",S.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=i,!0}_activatePlugin(h){-1===this._activePlugins.indexOf(h)&&(this._activePlugins.push(h),this._activePlugins.sort(((h,V)=>h.priority-V.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),h.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(h),this._activePluginsForExtraEvents.sort(((h,V)=>h.priority-V.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(h){for(let V=0;V<this._plugins.length;++V)if(this._plugins[V].name===h)return this._plugins[V];return null}_handlePluginEventIsReadyForSubMesh(h){let V=!0;for(const i of this._activePlugins)V=V&&i.isReadyForSubMesh(h.defines,this._scene,this._engine,h.subMesh);h.isReadyForSubMesh=V}_handlePluginEventPrepareDefinesBeforeAttributes(h){for(const V of this._activePlugins)V.prepareDefinesBeforeAttributes(h.defines,this._scene,h.mesh)}_handlePluginEventPrepareDefines(h){for(const V of this._activePlugins)V.prepareDefines(h.defines,this._scene,h.mesh)}_handlePluginEventHardBindForSubMesh(h){for(const V of this._activePluginsForExtraEvents)V.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventBindForSubMesh(h){for(const V of this._activePlugins)V.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventHasRenderTargetTextures(h){let V=!1;for(const i of this._activePluginsForExtraEvents)if(V=i.hasRenderTargetTextures(),V)break;h.hasRenderTargetTextures=V}_handlePluginEventFillRenderTargetTextures(h){for(const V of this._activePluginsForExtraEvents)V.fillRenderTargetTextures(h.renderTargets)}_handlePluginEvent(h,V){switch(h){case 512:{const h=V;for(const V of this._activePlugins)V.getActiveTextures(h.activeTextures);break}case 256:{const h=V;for(const V of this._activePlugins)V.getAnimatables(h.animatables);break}case 1024:{const h=V;let i=!1;for(const V of this._activePlugins)if(i=V.hasTexture(h.texture),i)break;h.hasTexture=i;break}case 2:{const h=V;for(const V of this._plugins)V.dispose(h.forceDisposeTextures);break}case 4:V.defineNames=this._defineNamesFromPlugins;break;case 128:{const h=V;for(const V of this._activePlugins)h.fallbackRank=V.addFallbacks(h.defines,h.fallbacks,h.fallbackRank),V.getAttributes(h.attributes,this._scene,h.mesh);this._uniformList.length>0&&h.uniforms.push(...this._uniformList),this._samplerList.length>0&&h.samplers.push(...this._samplerList),this._uboList.length>0&&h.uniformBuffersNames.push(...this._uboList),h.customCode=this._injectCustomCode(h,h.customCode);break}case 8:{const h=V;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const i=1===this._material.shaderLanguage;for(const V of this._plugins){const S=V.getUniforms(this._material.shaderLanguage);if(S){if(S.ubo)for(const V of S.ubo){if(V.size&&V.type){const S=V.arraySize??0;if(h.ubo.addUniform(V.name,V.size,S),i){let h;switch(V.type){case"mat4":h="mat4x4f";break;case"float":h="f32";break;default:h=`${V.type}f`}this._uboDeclaration+=S>0?`uniform ${V.name}: array<${h}, ${S}>;\n`:`uniform ${V.name}: ${h};\n`}else this._uboDeclaration+=`${V.type} ${V.name}${S>0?`[${S}]`:""};\n`}this._uniformList.push(V.name)}S.vertex&&(this._vertexDeclaration+=S.vertex+"\n"),S.fragment&&(this._fragmentDeclaration+=S.fragment+"\n")}V.getSamplers(this._samplerList),V.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(h,V){if(V)for(const i in V)this._codeInjectionPoints[h]||(this._codeInjectionPoints[h]={}),this._codeInjectionPoints[h][i]=!0}_injectCustomCode(h,V){return(i,S)=>{var l;V&&(S=V(i,S)),this._uboDeclaration&&(S=S.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(S=S.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(S=S.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const Y=null===(l=this._codeInjectionPoints)||void 0===l?void 0:l[i];if(!Y)return S;let g=null;for(let V in Y){let l="";for(const S of this._activePlugins){var I;let Y=null===(I=S.getCustomCode(i,this._material.shaderLanguage))||void 0===I?void 0:I[V];if(Y){if(S.resolveIncludes){if(null===g){const V=0;g={defines:[],indexParameters:h.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:B.d.GetShadersRepository(V),includesShadersStore:B.d.GetIncludesShadersStore(V),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}g.isFragment="fragment"===i,(0,q.f)(Y,g,(h=>Y=h))}l+=Y+"\n"}}if(l.length>0)if("!"===V.charAt(0)){V=V.substring(1);let h="g";if("!"===V.charAt(0))h="",V=V.substring(1);else{const i=J.exec(V);i&&i.length>=2&&(h=i[1],V=V.substring(h.length+1))}h.indexOf("g")<0&&(h+="g");const i=S,Y=new RegExp(V,h);let g=Y.exec(i);for(;null!==g;){let h=l;for(let V=0;V<g.length;++V)h=h.replace("$"+V,g[V]);S=S.replace(g[0],h),g=Y.exec(i)}}else{const h="#define "+V;S=S.replace(h,"\n"+l+"\n"+h)}}return S}}}I._MaterialPluginClassToMainDefine={},I._MaterialPluginCounter=0,g.d.OnEnginesDisposedObservable.add((()=>{T()}));const v=[];let s=!1,t=null;function T(){v.length=0,s=!1,Y.e.OnEventObservable.remove(t),t=null}var e=i(11179),n=i(11091);class c{isCompatible(h){return 0===h}_enable(h){h&&this._pluginManager._activatePlugin(this)}constructor(h,V,i,S){let l=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],Y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=h,this.name=V,this.priority=i,this.resolveIncludes=g,h.pluginManager||(h.pluginManager=new I(h),h.Ig.add((()=>{h.pluginManager=void 0}))),this._pluginDefineNames=S,this._pluginManager=h.pluginManager,l&&this._pluginManager._addPlugin(this),Y&&this._enable(!0),this.markAllDefinesAsDirty=h._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(h,V,i,S){return!0}hardBindForSubMesh(h,V,i,S){}bindForSubMesh(h,V,i,S){}dispose(h){}getCustomCode(h){return null}collectDefines(h){if(this._pluginDefineNames)for(const V of Object.keys(this._pluginDefineNames)){if("_"===V[0])continue;const i=typeof this._pluginDefineNames[V];h[V]={type:"number"===i?"number":"string"===i?"string":"boolean"===i?"boolean":"object",default:this._pluginDefineNames[V]}}}prepareDefinesBeforeAttributes(h,V,i){}prepareDefines(h,V,i){}hasTexture(h){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(h){}getActiveTextures(h){}getAnimatables(h){}addFallbacks(h,V,i){return i}getSamplers(h){}getAttributes(h,V,i){}getUniformBuffersNames(h){}getUniforms(){return{}}copyTo(h){e.d.Clone((()=>h),this)}serialize(){return e.d.Serialize(this)}parse(h,V,i){e.d.Parse((()=>this),h,V,i)}}(0,S.b)([(0,l.E)()],c.prototype,"name",void 0),(0,S.b)([(0,l.E)()],c.prototype,"priority",void 0),(0,S.b)([(0,l.E)()],c.prototype,"resolveIncludes",void 0),(0,S.b)([(0,l.E)()],c.prototype,"registerForExtraEvents",void 0),(0,n.f)("BABYLON.MaterialPluginBase",c)},11516:(h,V,i)=>{i.d(V,{b:()=>S});class S{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(h){h.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(h){}bindForSubMesh(h,V,i,S,l){if(V.prePassRenderer&&V.prePassRenderer.enabled&&V.prePassRenderer.currentRTisSceneRT&&(-1!==V.prePassRenderer.getIndex(2)||-1!==V.prePassRenderer.getIndex(11))){this.previousWorldMatrices[i.uniqueId]||(this.previousWorldMatrices[i.uniqueId]=S.clone()),this.previousViewProjection||(this.previousViewProjection=V.getTransformMatrix().clone(),this.currentViewProjection=V.getTransformMatrix().clone());const l=V.getEngine();this.currentViewProjection.updateFlag!==V.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=l.frameId,this.previousViewProjection.l(this.currentViewProjection),this.currentViewProjection.l(V.getTransformMatrix())):this._lastUpdateFrameId!==l.frameId&&(this._lastUpdateFrameId=l.frameId,this.previousViewProjection.l(this.currentViewProjection)),h.setMatrix("previousWorld",this.previousWorldMatrices[i.uniqueId]),h.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[i.uniqueId]=S.clone()}}}},11509:(h,V,i)=>{i.d(V,{PV:()=>o});var S=i(11123),l=i(11127),Y=i(11242),g=i(11382),q=i(11189),B=i(11220),J=i(11516),I=i(11389),v=i(11459),s=i(11520),t=i(11453),T=i(11117),e=i(11091),n=i(11526),c=i(11450),f=i(11528),P=i(11504),L=i(11501),U=i(11179),X=i(11541);const D={effect:null,subMesh:null};class O extends s.d{constructor(h){super(h),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(h){const V=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const i of V)this[i]=i===h}}class o extends t.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(h){this._attachImageProcessingConfiguration(h),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(h){h!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=h||this.Mh().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(h){this.imageProcessingConfiguration.colorCurvesEnabled=h}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(h){this.imageProcessingConfiguration.colorGradingEnabled=h}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(h){this._imageProcessingConfiguration.toneMappingEnabled=h}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(h){this._imageProcessingConfiguration.exposure=h}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(h){this._imageProcessingConfiguration.contrast=h}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(h){this._imageProcessingConfiguration.colorGradingTexture=h}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(h){this._imageProcessingConfiguration.colorCurves=h}get canRenderToMRT(){return!0}constructor(h,V){super(h,V,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||o.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new q.LV(0,0,0),this.diffuseColor=new q.LV(1,1,1),this.specularColor=new q.LV(1,1,1),this.emissiveColor=new q.LV(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new Y.d(16),this._globalAmbientColor=new q.LV(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new f.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new J.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),o.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),o.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(o.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(o.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"PV"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===v.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Rg&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==v.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Rg||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(h,V){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const l=V._drawWrapper;if(l.effect&&this.isFrozen&&l._wasPreviouslyReady&&l._wasPreviouslyUsingInstances===S)return!0;V.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),V.materialDefines=new O(this._eventInfo.defineNames));const Y=this.Mh(),g=V.materialDefines;if(this._isReadyForSubMesh(V))return!0;const q=Y.getEngine();g._needNormals=(0,L.J)(Y,h,g,!0,this._maxSimultaneousLights,this._disableLighting),(0,L.S)(Y,g);const v=this.needAlphaBlendingForMesh(h)&&this.Mh().useOrderIndependentTransparency;if((0,L.W)(Y,g,this.canRenderToMRT&&!v),(0,L.V)(Y,g,v),X.b.PrepareDefines(q.currentRenderPassId,h,g),g._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,g._needUVs=!1;for(let h=1;h<=6;++h)g["MAINUV"+h]=!1;if(Y.texturesEnabled){if(g.DIFFUSEDIRECTUV=0,g.BUMPDIRECTUV=0,g.AMBIENTDIRECTUV=0,g.OPACITYDIRECTUV=0,g.EMISSIVEDIRECTUV=0,g.SPECULARDIRECTUV=0,g.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&o.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._diffuseTexture,g,"DIFFUSE")}else g.DIFFUSE=!1;if(this._ambientTexture&&o.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._ambientTexture,g,"AMBIENT")}else g.AMBIENT=!1;if(this._opacityTexture&&o.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._opacityTexture,g,"OPACITY"),g.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else g.OPACITY=!1;if(this._reflectionTexture&&o.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(g._needNormals=!0,g.REFLECTION=!0,g.ROUGHNESS=this._roughness>0,g.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,g.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===T.d.INVCUBIC_MODE,g.REFLECTIONMAP_3D=this._reflectionTexture.isCube,g.REFLECTIONMAP_OPPOSITEZ=g.REFLECTIONMAP_3D&&this.Mh().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,g.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case T.d.EXPLICIT_MODE:g.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case T.d.PLANAR_MODE:g.setReflectionMode("REFLECTIONMAP_PLANAR");break;case T.d.PROJECTION_MODE:g.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case T.d.SKYBOX_MODE:g.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case T.d.SPHERICAL_MODE:g.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case T.d.EQUIRECTANGULAR_MODE:g.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case T.d.FIXED_EQUIRECTANGULAR_MODE:g.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case T.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:g.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case T.d.CUBIC_MODE:case T.d.INVCUBIC_MODE:default:g.setReflectionMode("REFLECTIONMAP_CUBIC")}g.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else g.REFLECTION=!1,g.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&o.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._emissiveTexture,g,"EMISSIVE")}else g.EMISSIVE=!1;if(this._lightmapTexture&&o.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._lightmapTexture,g,"LIGHTMAP"),g.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,g.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else g.LIGHTMAP=!1;if(this._specularTexture&&o.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,L.N)(this._specularTexture,g,"SPECULAR"),g.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else g.SPECULAR=!1;if(Y.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&o.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,L.N)(this._bumpTexture,g,"BUMP"),g.PARALLAX=this._useParallax,g.PARALLAX_RHS=Y.useRightHandedSystem,g.PARALLAXOCCLUSION=this._useParallaxOcclusion,g.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else g.BUMP=!1,g.PARALLAX=!1,g.PARALLAX_RHS=!1,g.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&o.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;g._needUVs=!0,g.REFRACTION=!0,g.REFRACTIONMAP_3D=this._refractionTexture.isCube,g.RGBDREFRACTION=this._refractionTexture.isRGBD,g.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else g.REFRACTION=!1;g.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else g.DIFFUSE=!1,g.AMBIENT=!1,g.OPACITY=!1,g.REFLECTION=!1,g.EMISSIVE=!1,g.LIGHTMAP=!1,g.BUMP=!1,g.REFRACTION=!1;g.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),g.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,g.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,g.SPECULAROVERALPHA=this._useSpecularOverAlpha,g.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,g.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,g.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(h)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=g,this._eventInfo.subMesh=V,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(g._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(g),g.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,g.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(g._areFresnelDirty&&(o.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(g.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,g.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,g.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,g.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,g.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,g.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,g._needNormals=!0,g.FRESNEL=!0):g.FRESNEL=!1),g.AREALIGHTUSED)for(let i=0;i<h.lightSources.length;i++)if(!h.lightSources[i]._isReady())return!1;(0,L.P)(h,Y,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(h),g,this._applyDecalMapAfterDetailMap),(0,L.I)(Y,q,this,g,S,null,V.getRenderingMesh().hasThinInstances),this._eventInfo.defines=g,this._eventInfo.mesh=h,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,L.E)(h,g,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let s=!1;if(g.isDirty){const S=g._areLightsDisposed;g.markAsProcessed();const l=new c.d;g.REFLECTION&&l.addFallback(0,"REFLECTION"),g.SPECULAR&&l.addFallback(0,"SPECULAR"),g.BUMP&&l.addFallback(0,"BUMP"),g.PARALLAX&&l.addFallback(1,"PARALLAX"),g.PARALLAX_RHS&&l.addFallback(1,"PARALLAX_RHS"),g.PARALLAXOCCLUSION&&l.addFallback(0,"PARALLAXOCCLUSION"),g.SPECULAROVERALPHA&&l.addFallback(0,"SPECULAROVERALPHA"),g.FOG&&l.addFallback(1,"FOG"),g.POINTSIZE&&l.addFallback(0,"POINTSIZE"),g.LOGARITHMICDEPTH&&l.addFallback(0,"LOGARITHMICDEPTH"),(0,L.u)(g,l,this._maxSimultaneousLights),g.SPECULARTERM&&l.addFallback(0,"SPECULARTERM"),g.DIFFUSEFRESNEL&&l.addFallback(1,"DIFFUSEFRESNEL"),g.OPACITYFRESNEL&&l.addFallback(2,"OPACITYFRESNEL"),g.REFLECTIONFRESNEL&&l.addFallback(3,"REFLECTIONFRESNEL"),g.EMISSIVEFRESNEL&&l.addFallback(4,"EMISSIVEFRESNEL"),g.FRESNEL&&l.addFallback(4,"FRESNEL"),g.MULTIVIEW&&l.addFallback(0,"MULTIVIEW");const v=[B.h.PositionKind];g.NORMAL&&v.push(B.h.NormalKind),g.TANGENT&&v.push(B.h.TangentKind);for(let h=1;h<=6;++h)g["UV"+h]&&v.push(`uv${1===h?"":h}`);g.VERTEXCOLOR&&v.push(B.h.ColorKind),(0,L.A)(v,h,g,l),(0,L.B)(v,g),(0,L.C)(v,h,g),(0,L.y)(v,h,g);let t="default";const T=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],e=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],n=["Material","Scene","Mesh"],f={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:g.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=l,this._eventInfo.fallbackRank=0,this._eventInfo.defines=g,this._eventInfo.uniforms=T,this._eventInfo.attributes=v,this._eventInfo.samplers=e,this._eventInfo.uniformBuffersNames=n,this._eventInfo.customCode=void 0,this._eventInfo.mesh=h,this._eventInfo.indexParameters=f,this._callbackPluginEventGeneric(128,this._eventInfo),X.b.AddUniformsAndSamplers(T,e),J.b.AddUniforms(T),J.b.AddSamplers(e),I.b&&(I.b.PrepareUniforms(T,g),I.b.PrepareSamplers(e,g)),(0,L._)({uniformsNames:T,uniformBuffersNames:n,samplers:e,defines:g,maxSimultaneousLights:this._maxSimultaneousLights}),(0,P.d)(T);const U={};this.customShaderNameResolve&&(t=this.customShaderNameResolve(t,T,n,e,g,v,U));const O=g.toString(),o=V.effect;let M=Y.getEngine().createEffect(t,{attributes:v,uniformsNames:T,uniformBuffersNames:n,samplers:e,defines:O,fallbacks:l,onCompiled:this.onCompiled,onError:this.onError,indexParameters:f,processFinalCode:U.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:g.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([i.e(41),i.e(64)]).then(i.bind(i,13639)),Promise.all([i.e(39),i.e(65)]).then(i.bind(i,13812))]):await Promise.all([Promise.all([i.e(34),i.e(67)]).then(i.bind(i,13904)),Promise.all([i.e(33),i.e(68)]).then(i.bind(i,14060))]),this._shadersLoaded=!0}},q);if(this._eventInfo.customCode=void 0,M)if(this._onEffectCreatedObservable&&(D.effect=M,D.subMesh=V,this._onEffectCreatedObservable.notifyObservers(D)),this.allowShaderHotSwapping&&o&&!M.isReady()){if(M=o,g.markAsUnprocessed(),s=this.isFrozen,S)return g._areLightsDisposed=!0,!1}else Y.resetCachedMaterial(),V.setEffect(M,g,this._materialContext)}return!(!V.effect||!V.effect.isReady())&&(g._renderId=Y.getRenderId(),l._wasPreviouslyReady=!s,l._wasPreviouslyUsingInstances=S,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const h=this._uniformBuffer;h.addUniform("diffuseLeftColor",4),h.addUniform("diffuseRightColor",4),h.addUniform("opacityParts",4),h.addUniform("reflectionLeftColor",4),h.addUniform("reflectionRightColor",4),h.addUniform("refractionLeftColor",4),h.addUniform("refractionRightColor",4),h.addUniform("emissiveLeftColor",4),h.addUniform("emissiveRightColor",4),h.addUniform("vDiffuseInfos",2),h.addUniform("vAmbientInfos",2),h.addUniform("vOpacityInfos",2),h.addUniform("vReflectionInfos",2),h.addUniform("vReflectionPosition",3),h.addUniform("vReflectionSize",3),h.addUniform("vEmissiveInfos",2),h.addUniform("vLightmapInfos",2),h.addUniform("vSpecularInfos",2),h.addUniform("vBumpInfos",3),h.addUniform("diffuseMatrix",16),h.addUniform("ambientMatrix",16),h.addUniform("opacityMatrix",16),h.addUniform("reflectionMatrix",16),h.addUniform("emissiveMatrix",16),h.addUniform("lightmapMatrix",16),h.addUniform("specularMatrix",16),h.addUniform("bumpMatrix",16),h.addUniform("vTangentSpaceParams",2),h.addUniform("pointSize",1),h.addUniform("alphaCutOff",1),h.addUniform("refractionMatrix",16),h.addUniform("vRefractionInfos",4),h.addUniform("vRefractionPosition",3),h.addUniform("vRefractionSize",3),h.addUniform("vSpecularColor",4),h.addUniform("vEmissiveColor",3),h.addUniform("vDiffuseColor",4),h.addUniform("vAmbientColor",3),h.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(h,V,i){const S=this.Mh(),l=i.materialDefines;if(!l)return;const Y=i.effect;if(!Y)return;this._activeEffect=Y,V.getMeshUniformBuffer().bindToEffect(Y,"Mesh"),V.transferToEffect(h),this._uniformBuffer.bindToEffect(Y,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,S,V,h,this.isFrozen),X.b.Bind(S.getEngine().currentRenderPassId,this._activeEffect,V,h,this);const B=S.activeCamera;B?this._uniformBuffer.updateFloat4("cameraInfo",B.Zg,B.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=i,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),l.OBJECTSPACE_NORMALMAP&&(h.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const J=this._mustRebind(S,Y,i,V.visibility);(0,L.b)(V,Y);const I=this._uniformBuffer;if(J){if(this.bindViewProjection(Y),!I.useUbo||!this.isFrozen||!I.isSync||i._drawWrapper._forceRebindOnNextCall){if(o.FresnelEnabled&&l.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(I.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),I.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&I.updateColor4("opacityParts",new q.LV(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(I.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),I.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(I.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),I.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(I.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),I.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),S.texturesEnabled){if(this._diffuseTexture&&o.DiffuseTextureEnabled&&(I.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,L.s)(this._diffuseTexture,I,"diffuse")),this._ambientTexture&&o.AmbientTextureEnabled&&(I.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,L.s)(this._ambientTexture,I,"ambient")),this._opacityTexture&&o.OpacityTextureEnabled&&(I.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,L.s)(this._opacityTexture,I,"opacity")),this._hasAlphaChannel()&&I.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&o.ReflectionTextureEnabled){if(I.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),I.xg("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const h=this._reflectionTexture;I.updateVector3("vReflectionPosition",h.boundingBoxPosition),I.updateVector3("vReflectionSize",h.boundingBoxSize)}}else I.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&o.EmissiveTextureEnabled&&(I.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,L.s)(this._emissiveTexture,I,"emissive")),this._lightmapTexture&&o.LightmapTextureEnabled&&(I.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,L.s)(this._lightmapTexture,I,"lightmap")),this._specularTexture&&o.SpecularTextureEnabled&&(I.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,L.s)(this._specularTexture,I,"specular")),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&o.BumpTextureEnabled&&(I.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,L.s)(this._bumpTexture,I,"bump"),S._mirroredCameraPosition?I.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):I.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&o.RefractionTextureEnabled){let h=1;if(this._refractionTexture.isCube||(I.xg("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(h=this._refractionTexture.depth)),I.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,h,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const h=this._refractionTexture;I.updateVector3("vRefractionPosition",h.boundingBoxPosition),I.updateVector3("vRefractionSize",h.boundingBoxSize)}}}this.pointsCloud&&I.updateFloat("pointSize",this.pointSize),I.updateColor4("vSpecularColor",this.specularColor,this.specularPower),I.updateColor3("vEmissiveColor",o.EmissiveTextureEnabled?this.emissiveColor:q.LV.BlackReadOnly),I.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),S.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),I.updateColor3("vAmbientColor",this._globalAmbientColor)}S.texturesEnabled&&(this._diffuseTexture&&o.DiffuseTextureEnabled&&Y.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&o.AmbientTextureEnabled&&Y.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&o.OpacityTextureEnabled&&Y.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&o.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?Y.setTexture("reflectionCubeSampler",this._reflectionTexture):Y.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&o.EmissiveTextureEnabled&&Y.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&o.LightmapTextureEnabled&&Y.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&o.SpecularTextureEnabled&&Y.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&o.BumpTextureEnabled&&Y.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&o.RefractionTextureEnabled&&(this._refractionTexture.isCube?Y.setTexture("refractionCubeSampler",this._refractionTexture):Y.setTexture("refraction2DSampler",this._refractionTexture))),this.Mh().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(V)&&this.Mh().depthPeelingRenderer.bind(Y),this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,P.g)(Y,this,S),this.bindEyePosition(Y)}else S.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(J||!this.isFrozen){var v;if(S.lightsEnabled&&!this._disableLighting&&(0,L.g)(S,V,Y,l,this._maxSimultaneousLights),(S.fogEnabled&&V.applyFog&&S.fogMode!==g.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||V.receiveShadows||l.PREPASS)&&this.bindView(Y),(0,L.e)(S,V,Y),l.NUM_MORPH_INFLUENCERS&&(0,L.n)(V,Y),l.BAKED_VERTEX_ANIMATION_TEXTURE)null===(v=V.bakedVertexAnimationManager)||void 0===v||v.bind(Y,l.INSTANCES);this.useLogarithmicDepth&&(0,L.j)(l,Y,S),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(V,this._activeEffect,i),I.update()}getAnimatables(){const h=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&h.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&h.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&h.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&h.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&h.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&h.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&h.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&h.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&h.push(this._refractionTexture),h}getActiveTextures(){const h=super.getActiveTextures();return this._diffuseTexture&&h.push(this._diffuseTexture),this._ambientTexture&&h.push(this._ambientTexture),this._opacityTexture&&h.push(this._opacityTexture),this._reflectionTexture&&h.push(this._reflectionTexture),this._emissiveTexture&&h.push(this._emissiveTexture),this._specularTexture&&h.push(this._specularTexture),this._bumpTexture&&h.push(this._bumpTexture),this._lightmapTexture&&h.push(this._lightmapTexture),this._refractionTexture&&h.push(this._refractionTexture),h}hasTexture(h){return!!super.hasTexture(h)||(this._diffuseTexture===h||(this._ambientTexture===h||(this._opacityTexture===h||(this._reflectionTexture===h||(this._emissiveTexture===h||(this._specularTexture===h||(this._bumpTexture===h||(this._lightmapTexture===h||this._refractionTexture===h))))))))}dispose(h,V){var i,S,l,Y,g,q,B,J,I;V&&(null===(i=this._diffuseTexture)||void 0===i||i.dispose(),null===(S=this._ambientTexture)||void 0===S||S.dispose(),null===(l=this._opacityTexture)||void 0===l||l.dispose(),null===(Y=this._reflectionTexture)||void 0===Y||Y.dispose(),null===(g=this._emissiveTexture)||void 0===g||g.dispose(),null===(q=this._specularTexture)||void 0===q||q.dispose(),null===(B=this._bumpTexture)||void 0===B||B.dispose(),null===(J=this._lightmapTexture)||void 0===J||J.dispose(),null===(I=this._refractionTexture)||void 0===I||I.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(h,V)}clone(h){let V=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const S=U.d.Clone((()=>new o(h,this.Mh())),this,{cloneTexturesOnlyOnce:V});return S.name=h,S.id=h,this.stencil.copyTo(S.stencil),this._clonePlugins(S,i),S}static Parse(h,V,i){const S=U.d.Parse((()=>new o(h.name,V)),h,V,i);return h.stencil&&S.stencil.parse(h.stencil,V,i),v.e._ParsePlugins(h,S,V,i),S}static get DiffuseTextureEnabled(){return n.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){n.d.DiffuseTextureEnabled=h}static get DetailTextureEnabled(){return n.d.DetailTextureEnabled}static set DetailTextureEnabled(h){n.d.DetailTextureEnabled=h}static get AmbientTextureEnabled(){return n.d.AmbientTextureEnabled}static set AmbientTextureEnabled(h){n.d.AmbientTextureEnabled=h}static get OpacityTextureEnabled(){return n.d.OpacityTextureEnabled}static set OpacityTextureEnabled(h){n.d.OpacityTextureEnabled=h}static get ReflectionTextureEnabled(){return n.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){n.d.ReflectionTextureEnabled=h}static get EmissiveTextureEnabled(){return n.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){n.d.EmissiveTextureEnabled=h}static get SpecularTextureEnabled(){return n.d.SpecularTextureEnabled}static set SpecularTextureEnabled(h){n.d.SpecularTextureEnabled=h}static get BumpTextureEnabled(){return n.d.BumpTextureEnabled}static set BumpTextureEnabled(h){n.d.BumpTextureEnabled=h}static get LightmapTextureEnabled(){return n.d.LightmapTextureEnabled}static set LightmapTextureEnabled(h){n.d.LightmapTextureEnabled=h}static get RefractionTextureEnabled(){return n.d.RefractionTextureEnabled}static set RefractionTextureEnabled(h){n.d.RefractionTextureEnabled=h}static get ColorGradingTextureEnabled(){return n.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){n.d.ColorGradingTextureEnabled=h}static get FresnelEnabled(){return n.d.FresnelEnabled}static set FresnelEnabled(h){n.d.FresnelEnabled=h}}o.ForceGLSL=!1,(0,S.b)([(0,l.v)("diffuseTexture")],o.prototype,"_diffuseTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],o.prototype,"diffuseTexture",void 0),(0,S.b)([(0,l.v)("ambientTexture")],o.prototype,"_ambientTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"ambientTexture",void 0),(0,S.b)([(0,l.v)("opacityTexture")],o.prototype,"_opacityTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],o.prototype,"opacityTexture",void 0),(0,S.b)([(0,l.v)("reflectionTexture")],o.prototype,"_reflectionTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"reflectionTexture",void 0),(0,S.b)([(0,l.v)("emissiveTexture")],o.prototype,"_emissiveTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"emissiveTexture",void 0),(0,S.b)([(0,l.v)("specularTexture")],o.prototype,"_specularTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"specularTexture",void 0),(0,S.b)([(0,l.v)("bumpTexture")],o.prototype,"_bumpTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"bumpTexture",void 0),(0,S.b)([(0,l.v)("lightmapTexture")],o.prototype,"_lightmapTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"lightmapTexture",void 0),(0,S.b)([(0,l.v)("refractionTexture")],o.prototype,"_refractionTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"refractionTexture",void 0),(0,S.b)([(0,l.i)("ambient")],o.prototype,"ambientColor",void 0),(0,S.b)([(0,l.i)("diffuse")],o.prototype,"diffuseColor",void 0),(0,S.b)([(0,l.i)("specular")],o.prototype,"specularColor",void 0),(0,S.b)([(0,l.i)("emissive")],o.prototype,"emissiveColor",void 0),(0,S.b)([(0,l.E)()],o.prototype,"specularPower",void 0),(0,S.b)([(0,l.E)("useAlphaFromDiffuseTexture")],o.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],o.prototype,"useAlphaFromDiffuseTexture",void 0),(0,S.b)([(0,l.E)("useEmissiveAsIllumination")],o.prototype,"_useEmissiveAsIllumination",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useEmissiveAsIllumination",void 0),(0,S.b)([(0,l.E)("linkEmissiveWithDiffuse")],o.prototype,"_linkEmissiveWithDiffuse",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"linkEmissiveWithDiffuse",void 0),(0,S.b)([(0,l.E)("useSpecularOverAlpha")],o.prototype,"_useSpecularOverAlpha",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useSpecularOverAlpha",void 0),(0,S.b)([(0,l.E)("useReflectionOverAlpha")],o.prototype,"_useReflectionOverAlpha",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useReflectionOverAlpha",void 0),(0,S.b)([(0,l.E)("disableLighting")],o.prototype,"_disableLighting",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsLightsDirty")],o.prototype,"disableLighting",void 0),(0,S.b)([(0,l.E)("useObjectSpaceNormalMap")],o.prototype,"_useObjectSpaceNormalMap",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useObjectSpaceNormalMap",void 0),(0,S.b)([(0,l.E)("useParallax")],o.prototype,"_useParallax",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useParallax",void 0),(0,S.b)([(0,l.E)("useParallaxOcclusion")],o.prototype,"_useParallaxOcclusion",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useParallaxOcclusion",void 0),(0,S.b)([(0,l.E)()],o.prototype,"parallaxScaleBias",void 0),(0,S.b)([(0,l.E)("roughness")],o.prototype,"_roughness",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"roughness",void 0),(0,S.b)([(0,l.E)()],o.prototype,"indexOfRefraction",void 0),(0,S.b)([(0,l.E)()],o.prototype,"invertRefractionY",void 0),(0,S.b)([(0,l.E)()],o.prototype,"alphaCutOff",void 0),(0,S.b)([(0,l.E)("useLightmapAsShadowmap")],o.prototype,"_useLightmapAsShadowmap",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useLightmapAsShadowmap",void 0),(0,S.b)([(0,l.k)("diffuseFresnelParameters")],o.prototype,"_diffuseFresnelParameters",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelDirty")],o.prototype,"diffuseFresnelParameters",void 0),(0,S.b)([(0,l.k)("opacityFresnelParameters")],o.prototype,"_opacityFresnelParameters",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],o.prototype,"opacityFresnelParameters",void 0),(0,S.b)([(0,l.k)("reflectionFresnelParameters")],o.prototype,"_reflectionFresnelParameters",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelDirty")],o.prototype,"reflectionFresnelParameters",void 0),(0,S.b)([(0,l.k)("refractionFresnelParameters")],o.prototype,"_refractionFresnelParameters",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelDirty")],o.prototype,"refractionFresnelParameters",void 0),(0,S.b)([(0,l.k)("emissiveFresnelParameters")],o.prototype,"_emissiveFresnelParameters",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelDirty")],o.prototype,"emissiveFresnelParameters",void 0),(0,S.b)([(0,l.E)("useReflectionFresnelFromSpecular")],o.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsFresnelDirty")],o.prototype,"useReflectionFresnelFromSpecular",void 0),(0,S.b)([(0,l.E)("useGlossinessFromSpecularMapAlpha")],o.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,S.b)([(0,l.E)("maxSimultaneousLights")],o.prototype,"_maxSimultaneousLights",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsLightsDirty")],o.prototype,"maxSimultaneousLights",void 0),(0,S.b)([(0,l.E)("invertNormalMapX")],o.prototype,"_invertNormalMapX",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"invertNormalMapX",void 0),(0,S.b)([(0,l.E)("invertNormalMapY")],o.prototype,"_invertNormalMapY",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"invertNormalMapY",void 0),(0,S.b)([(0,l.E)("twoSidedLighting")],o.prototype,"_twoSidedLighting",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsTexturesDirty")],o.prototype,"twoSidedLighting",void 0),(0,S.b)([(0,l.E)("applyDecalMapAfterDetailMap")],o.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,S.b)([(0,l.e)("_markAllSubMeshesAsMiscDirty")],o.prototype,"applyDecalMapAfterDetailMap",void 0),(0,e.f)("BABYLON.StandardMaterial",o),g.d.DefaultMaterialFactory=h=>new o("default material",h)}}]);