"use strict";(self.r00gjvkwa6=self.r00gjvkwa6||[]).push([[25],{11701:(H,O,S)=>{S.d(O,{d:()=>h});var t=S(11287),q=S(11624),p=S(11289),G=S(11696),U=S(11689),V=S(11704),w=S(11669);class o extends U.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class h extends V.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(H){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(H,"DetailMap",140,new o,O),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=q.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=H._dirtyCallbacks[1]}isReadyForSubMesh(H,O,S){return!this._isEnabled||!(H._areTexturesDirty&&O.texturesEnabled&&S.getCaps().standardDerivatives&&this._texture&&G.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(H,O){if(this._isEnabled){H.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const S=O.getEngine();H._areTexturesDirty&&(S.getCaps().standardDerivatives&&this._texture&&G.b.DetailTextureEnabled&&this._isEnabled?((0,w.P)(this._texture,H,"DETAIL"),H.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):H.DETAIL=!1)}else H.DETAIL=!1}bindForSubMesh(H,O){if(!this._isEnabled)return;const S=this._material.isFrozen;H.useUbo&&S&&H.isSync||this._texture&&G.b.DetailTextureEnabled&&(H.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,w.o)(this._texture,H,"detail")),O.texturesEnabled&&this._texture&&G.b.DetailTextureEnabled&&H.setTexture("detailSampler",this._texture)}hasTexture(H){return this._texture===H}getActiveTextures(H){this._texture&&H.push(this._texture)}getAnimatables(H){this._texture&&this._texture.animations&&this._texture.animations.length>0&&H.push(this._texture)}dispose(H){var O;H&&(null===(O=this._texture)||void 0===O||O.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(H){H.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,t.d)([(0,p.A)("detailTexture"),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"texture",void 0),(0,t.d)([(0,p.J)()],h.prototype,"diffuseBlendLevel",void 0),(0,t.d)([(0,p.J)()],h.prototype,"roughnessBlendLevel",void 0),(0,t.d)([(0,p.J)()],h.prototype,"bumpLevel",void 0),(0,t.d)([(0,p.J)(),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"normalBlendMethod",void 0),(0,t.d)([(0,p.J)(),(0,p.e)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"isEnabled",void 0)},11689:(H,O,S)=>{S.d(O,{d:()=>t});class t{constructor(H){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=H,H)for(const O in H)Object.prototype.hasOwnProperty.call(H,O)&&this._setDefaultValue(O)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let H=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||H,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const H of Object.keys(this))"_"!==H[0]&&this._keys.push(H);if(this._externalProperties)for(const H in this._externalProperties)-1===this._keys.indexOf(H)&&this._keys.push(H)}isEqual(H){if(this._keys.length!==H._keys.length)return!1;for(let O=0;O<this._keys.length;O++){const S=this._keys[O];if(this[S]!==H[S])return!1}return!0}cloneTo(H){this._keys.length!==H._keys.length&&(H._keys=this._keys.slice(0));for(let O=0;O<this._keys.length;O++){const S=this._keys[O];H[S]=this[S]}}reset(){for(const H of this._keys)this._setDefaultValue(H)}_setDefaultValue(H){var O,S,t,q;const p=(null===(O=this._externalProperties)||void 0===O||null===(S=O[H])||void 0===S?void 0:S.type)??typeof this[H],G=null===(t=this._externalProperties)||void 0===t||null===(q=t[H])||void 0===q?void 0:q.default;switch(p){case"number":this[H]=G??0;break;case"string":this[H]=G??"";break;default:this[H]=G??!1}}toString(){let H="";for(let O=0;O<this._keys.length;O++){const S=this._keys[O],t=this[S];switch(typeof t){case"number":case"string":H+="#define "+S+" "+t+"\n";break;default:t&&(H+="#define "+S+"\n")}}return H}}},11696:(H,O,S)=>{S.d(O,{b:()=>q});var t=S(11213);class q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(H){this._DiffuseTextureEnabled!==H&&(this._DiffuseTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(H){this._BaseWeightTextureEnabled!==H&&(this._BaseWeightTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(H){this._BaseDiffuseRoughnessTextureEnabled!==H&&(this._BaseDiffuseRoughnessTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(H){this._DetailTextureEnabled!==H&&(this._DetailTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(H){this._DecalMapEnabled!==H&&(this._DecalMapEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(H){this._AmbientTextureEnabled!==H&&(this._AmbientTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(H){this._OpacityTextureEnabled!==H&&(this._OpacityTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(H){this._ReflectionTextureEnabled!==H&&(this._ReflectionTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(H){this._EmissiveTextureEnabled!==H&&(this._EmissiveTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(H){this._SpecularTextureEnabled!==H&&(this._SpecularTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(H){this._BumpTextureEnabled!==H&&(this._BumpTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(H){this._LightmapTextureEnabled!==H&&(this._LightmapTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(H){this._RefractionTextureEnabled!==H&&(this._RefractionTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(H){this._ColorGradingTextureEnabled!==H&&(this._ColorGradingTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(H){this._FresnelEnabled!==H&&(this._FresnelEnabled=H,t.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(H){this._ClearCoatTextureEnabled!==H&&(this._ClearCoatTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(H){this._ClearCoatBumpTextureEnabled!==H&&(this._ClearCoatBumpTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(H){this._ClearCoatTintTextureEnabled!==H&&(this._ClearCoatTintTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(H){this._SheenTextureEnabled!==H&&(this._SheenTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(H){this._AnisotropicTextureEnabled!==H&&(this._AnisotropicTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(H){this._ThicknessTextureEnabled!==H&&(this._ThicknessTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(H){this._RefractionIntensityTextureEnabled!==H&&(this._RefractionIntensityTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(H){this._TranslucencyIntensityTextureEnabled!==H&&(this._TranslucencyIntensityTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(H){this._TranslucencyColorTextureEnabled!==H&&(this._TranslucencyColorTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(H){this._IridescenceTextureEnabled!==H&&(this._IridescenceTextureEnabled=H,t.b.MarkAllMaterialsAsDirty(1))}}q._DiffuseTextureEnabled=!0,q._BaseWeightTextureEnabled=!0,q._BaseDiffuseRoughnessTextureEnabled=!0,q._DetailTextureEnabled=!0,q._DecalMapEnabled=!0,q._AmbientTextureEnabled=!0,q._OpacityTextureEnabled=!0,q._ReflectionTextureEnabled=!0,q._EmissiveTextureEnabled=!0,q._SpecularTextureEnabled=!0,q._BumpTextureEnabled=!0,q._LightmapTextureEnabled=!0,q._RefractionTextureEnabled=!0,q._ColorGradingTextureEnabled=!0,q._FresnelEnabled=!0,q._ClearCoatTextureEnabled=!0,q._ClearCoatBumpTextureEnabled=!0,q._ClearCoatTintTextureEnabled=!0,q._SheenTextureEnabled=!0,q._AnisotropicTextureEnabled=!0,q._ThicknessTextureEnabled=!0,q._RefractionIntensityTextureEnabled=!0,q._TranslucencyIntensityTextureEnabled=!0,q._TranslucencyColorTextureEnabled=!0,q._IridescenceTextureEnabled=!0},11709:(H,O,S)=>{S.d(O,{b:()=>p});var t,q=S(11301);!function(H){H[H.Zero=0]="Zero",H[H.One=1]="One",H[H.MaxViewZ=2]="MaxViewZ"}(t||(t={}));class p{static CreateConfiguration(H){return p._Configurations[H]={defines:{},previousWorldMatrices:{},previousViewProjection:q.Matrix.Zero(),currentViewProjection:q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},p._Configurations[H]}static DeleteConfiguration(H){delete p._Configurations[H]}static GetConfiguration(H){return p._Configurations[H]}static AddUniformsAndSamplers(H,O){H.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(H,O){for(const S of O)if(S.qU)for(const O of S.qU)O._removeDrawWrapper(H)}static PrepareDefines(H,O,S){if(!S._arePrePassDirty)return;const t=p._Configurations[H];if(!t)return;S.PREPASS=!0,S.PREPASS_COLOR=!1,S.PREPASS_COLOR_INDEX=-1;let q=0;for(let G=0;G<p.GeometryTextureDescriptions.length;G++){const H=p.GeometryTextureDescriptions[G],O=H.define,U=H.defineIndex,V=t.defines[U];void 0!==V?(S[O]=!0,S[U]=V,q++):(S[O]=!1,delete S[U])}S.SCENE_MRT_COUNT=q,S.BONES_VELOCITY_ENABLED=O.useBones&&O.computeBonesUsingShaders&&O.skeleton&&!O.skeleton.isUsingTextureForMatrices&&-1===t.excludedSkinnedMesh.indexOf(O)}static Bind(H,O,S,t,q){const G=p._Configurations[H];if(!G)return;const U=S.YH(),V=U.getEngine();if(G.reverseCulling&&V.setStateCullFaceType(U._mirroredCameraPosition?q.cullBackFaces:!q.cullBackFaces),(void 0!==G.defines.PREPASS_VELOCITY_INDEX||void 0!==G.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(G.previousWorldMatrices[S.uniqueId]||(G.previousWorldMatrices[S.uniqueId]=t.clone()),G.previousViewProjection||(G.previousViewProjection=U.getTransformMatrix().clone(),G.currentViewProjection=U.getTransformMatrix().clone()),G.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(G.lastUpdateFrameId=V.frameId,G.previousViewProjection.t(G.currentViewProjection),G.currentViewProjection.t(U.getTransformMatrix())):G.lastUpdateFrameId!==V.frameId&&(G.lastUpdateFrameId=V.frameId,G.previousViewProjection.t(G.currentViewProjection)),O.setMatrix("previousWorld",G.previousWorldMatrices[S.uniqueId]),O.setMatrix("previousViewProjection",G.previousViewProjection),G.previousWorldMatrices[S.uniqueId]=t.clone(),S.useBones&&S.computeBonesUsingShaders&&S.skeleton)){const H=S.skeleton;if(!H.isUsingTextureForMatrices||-1===O.getUniformIndex("boneTextureWidth")){const t=H.getTransformMatrices(S);t&&(G.previousBones[S.uniqueId]||(G.previousBones[S.uniqueId]=t.slice()),O.setMatrices("mPreviousBones",G.previousBones[S.uniqueId]),G.previousBones[S.uniqueId].set(t))}}}}p.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],p._Configurations={}},11704:(H,O,S)=>{S.d(O,{d:()=>y});var t=S(11287),q=S(11289),p=S(11624),G=S(11180),U=S(11194),V=S(11223);const w=new RegExp("^([gimus]+)!");class o{constructor(H){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=H,this._scene=H.YH(),this._engine=this._scene.getEngine()}_addPlugin(H){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===H.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!H.isCompatible(this._material.shaderLanguage))throw`The plugin "${H.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const O=H.getClassName();o._MaterialPluginClassToMainDefine[O]||(o._MaterialPluginClassToMainDefine[O]="MATERIALPLUGIN_"+ ++o._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(H,O)=>this._handlePluginEvent(H,O),this._plugins.push(H),this._plugins.sort(((H,O)=>H.priority-O.priority)),this._codeInjectionPoints={};const S={};S[o._MaterialPluginClassToMainDefine[O]]={type:"boolean",default:!0};for(const t of this._plugins)t.collectDefines(S),this._collectPointNames("vertex",t.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",t.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=S,!0}_activatePlugin(H){-1===this._activePlugins.indexOf(H)&&(this._activePlugins.push(H),this._activePlugins.sort(((H,O)=>H.priority-O.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),H.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(H),this._activePluginsForExtraEvents.sort(((H,O)=>H.priority-O.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(H){for(let O=0;O<this._plugins.length;++O)if(this._plugins[O].name===H)return this._plugins[O];return null}_handlePluginEventIsReadyForSubMesh(H){let O=!0;for(const S of this._activePlugins)O=O&&S.isReadyForSubMesh(H.defines,this._scene,this._engine,H.subMesh);H.isReadyForSubMesh=O}_handlePluginEventPrepareDefinesBeforeAttributes(H){for(const O of this._activePlugins)O.prepareDefinesBeforeAttributes(H.defines,this._scene,H.mesh)}_handlePluginEventPrepareDefines(H){for(const O of this._activePlugins)O.prepareDefines(H.defines,this._scene,H.mesh)}_handlePluginEventHardBindForSubMesh(H){for(const O of this._activePluginsForExtraEvents)O.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,H.subMesh)}_handlePluginEventBindForSubMesh(H){for(const O of this._activePlugins)O.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,H.subMesh)}_handlePluginEventHasRenderTargetTextures(H){let O=!1;for(const S of this._activePluginsForExtraEvents)if(O=S.hasRenderTargetTextures(),O)break;H.hasRenderTargetTextures=O}_handlePluginEventFillRenderTargetTextures(H){for(const O of this._activePluginsForExtraEvents)O.fillRenderTargetTextures(H.renderTargets)}_handlePluginEvent(H,O){switch(H){case 512:{const H=O;for(const O of this._activePlugins)O.getActiveTextures(H.activeTextures);break}case 256:{const H=O;for(const O of this._activePlugins)O.getAnimatables(H.animatables);break}case 1024:{const H=O;let S=!1;for(const O of this._activePlugins)if(S=O.hasTexture(H.texture),S)break;H.hasTexture=S;break}case 2:{const H=O;for(const O of this._plugins)O.dispose(H.forceDisposeTextures);break}case 4:O.defineNames=this._defineNamesFromPlugins;break;case 128:{const H=O;for(const O of this._activePlugins)H.fallbackRank=O.addFallbacks(H.defines,H.fallbacks,H.fallbackRank),O.getAttributes(H.attributes,this._scene,H.mesh);this._uniformList.length>0&&H.uniforms.push(...this._uniformList),this._samplerList.length>0&&H.samplers.push(...this._samplerList),this._uboList.length>0&&H.uniformBuffersNames.push(...this._uboList),H.customCode=this._injectCustomCode(H,H.customCode);break}case 8:{const H=O;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const S=1===this._material.shaderLanguage;for(const O of this._plugins){const t=O.getUniforms(this._material.shaderLanguage);if(t){if(t.ubo)for(const O of t.ubo){if(O.size&&O.type){const t=O.arraySize??0;if(H.ubo.addUniform(O.name,O.size,t),S){let H;switch(O.type){case"mat4":H="mat4x4f";break;case"float":H="f32";break;default:H=`${O.type}f`}this._uboDeclaration+=t>0?`uniform ${O.name}: array<${H}, ${t}>;\n`:`uniform ${O.name}: ${H};\n`}else this._uboDeclaration+=`${O.type} ${O.name}${t>0?`[${t}]`:""};\n`}this._uniformList.push(O.name)}t.vertex&&(this._vertexDeclaration+=t.vertex+"\n"),t.fragment&&(this._fragmentDeclaration+=t.fragment+"\n")}O.getSamplers(this._samplerList),O.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(H,O){if(O)for(const S in O)this._codeInjectionPoints[H]||(this._codeInjectionPoints[H]={}),this._codeInjectionPoints[H][S]=!0}_injectCustomCode(H,O){return(S,t)=>{var q;O&&(t=O(S,t)),this._uboDeclaration&&(t=t.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(t=t.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(t=t.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const p=null===(q=this._codeInjectionPoints)||void 0===q?void 0:q[S];if(!p)return t;let G=null;for(let O in p){let q="";for(const t of this._activePlugins){var o;let p=null===(o=t.getCustomCode(S,this._material.shaderLanguage))||void 0===o?void 0:o[O];if(p){if(t.resolveIncludes){if(null===G){const O=0;G={defines:[],indexParameters:H.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:V.d.GetShadersRepository(O),includesShadersStore:V.d.GetIncludesShadersStore(O),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}G.isFragment="fragment"===S,(0,U.i)(p,G,(H=>p=H))}q+=p+"\n"}}if(q.length>0)if("!"===O.charAt(0)){O=O.substring(1);let H="g";if("!"===O.charAt(0))H="",O=O.substring(1);else{const S=w.exec(O);S&&S.length>=2&&(H=S[1],O=O.substring(H.length+1))}H.indexOf("g")<0&&(H+="g");const S=t,p=new RegExp(O,H);let G=p.exec(S);for(;null!==G;){let H=q;for(let O=0;O<G.length;++O)H=H.replace("$"+O,G[O]);t=t.replace(G[0],H),G=p.exec(S)}}else{const H="#define "+O;t=t.replace(H,"\n"+q+"\n"+H)}}return t}}}o._MaterialPluginClassToMainDefine={},o._MaterialPluginCounter=0,G.c.OnEnginesDisposedObservable.add((()=>{e()}));const h=[];let a=!1,j=null;function e(){h.length=0,a=!1,p.e.OnEventObservable.remove(j),j=null}var X=S(11338),E=S(11262);class y{isCompatible(H){return 0===H}_enable(H){H&&this._pluginManager._activatePlugin(this)}constructor(H,O,S,t){let q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],p=arguments.length>5&&void 0!==arguments[5]&&arguments[5],G=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=H,this.name=O,this.priority=S,this.resolveIncludes=G,H.pluginManager||(H.pluginManager=new o(H),H.up.add((()=>{H.pluginManager=void 0}))),this._pluginDefineNames=t,this._pluginManager=H.pluginManager,q&&this._pluginManager._addPlugin(this),p&&this._enable(!0),this.markAllDefinesAsDirty=H._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(H,O,S,t){return!0}hardBindForSubMesh(H,O,S,t){}bindForSubMesh(H,O,S,t){}dispose(H){}getCustomCode(H){return null}collectDefines(H){if(this._pluginDefineNames)for(const O of Object.keys(this._pluginDefineNames)){if("_"===O[0])continue;const S=typeof this._pluginDefineNames[O];H[O]={type:"number"===S?"number":"string"===S?"string":"boolean"===S?"boolean":"object",default:this._pluginDefineNames[O]}}}prepareDefinesBeforeAttributes(H,O,S){}prepareDefines(H,O,S){}hasTexture(H){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(H){}getActiveTextures(H){}getAnimatables(H){}addFallbacks(H,O,S){return S}getSamplers(H){}getAttributes(H,O,S){}getUniformBuffersNames(H){}getUniforms(){return{}}copyTo(H){X.e.Clone((()=>H),this)}serialize(){return X.e.Serialize(this)}parse(H,O,S){X.e.Parse((()=>this),H,O,S)}}(0,t.d)([(0,q.J)()],y.prototype,"name",void 0),(0,t.d)([(0,q.J)()],y.prototype,"priority",void 0),(0,t.d)([(0,q.J)()],y.prototype,"resolveIncludes",void 0),(0,t.d)([(0,q.J)()],y.prototype,"registerForExtraEvents",void 0),(0,E.g)("BABYLON.MaterialPluginBase",y)},11684:(H,O,S)=>{S.d(O,{d:()=>t});class t{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(H){H.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(H){}bindForSubMesh(H,O,S,t,q){if(O.prePassRenderer&&O.prePassRenderer.enabled&&O.prePassRenderer.currentRTisSceneRT&&(-1!==O.prePassRenderer.getIndex(2)||-1!==O.prePassRenderer.getIndex(11))){this.previousWorldMatrices[S.uniqueId]||(this.previousWorldMatrices[S.uniqueId]=t.clone()),this.previousViewProjection||(this.previousViewProjection=O.getTransformMatrix().clone(),this.currentViewProjection=O.getTransformMatrix().clone());const q=O.getEngine();this.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.t(this.currentViewProjection),this.currentViewProjection.t(O.getTransformMatrix())):this._lastUpdateFrameId!==q.frameId&&(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.t(this.currentViewProjection)),H.setMatrix("previousWorld",this.previousWorldMatrices[S.uniqueId]),H.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[S.uniqueId]=t.clone()}}}},11675:(H,O,S)=>{S.d(O,{yO:()=>d});var t=S(11287),q=S(11289),p=S(11398),G=S(11541),U=S(11355),V=S(11378),w=S(11684),o=S(11549),h=S(11624),a=S(11689),j=S(11615),e=S(11279),X=S(11262),E=S(11696),y=S(11609),T=S(11701),K=S(11671),b=S(11669),D=S(11338),F=S(11709);const Y={effect:null,subMesh:null};class l extends a.d{constructor(H){super(H),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(H){const O=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const S of O)this[S]=S===H}}class d extends j.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(H){this._attachImageProcessingConfiguration(H),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(H){H!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=H||this.YH().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(H){this.imageProcessingConfiguration.colorCurvesEnabled=H}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(H){this.imageProcessingConfiguration.colorGradingEnabled=H}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(H){this._imageProcessingConfiguration.toneMappingEnabled=H}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(H){this._imageProcessingConfiguration.exposure=H}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(H){this._imageProcessingConfiguration.contrast=H}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(H){this._imageProcessingConfiguration.colorGradingTexture=H}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(H){this._imageProcessingConfiguration.colorCurves=H}get canRenderToMRT(){return!0}constructor(H,O){super(H,O,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||d.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new U.TO(0,0,0),this.diffuseColor=new U.TO(1,1,1),this.specularColor=new U.TO(1,1,1),this.emissiveColor=new U.TO(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new p.i(16),this._globalAmbientColor=new U.TO(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new T.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new w.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),d.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),d.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(d.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(d.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"yO"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===h.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.GU&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==h.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.GU||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(H,O){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const q=O._drawWrapper;if(q.effect&&this.isFrozen&&q._wasPreviouslyReady&&q._wasPreviouslyUsingInstances===t)return!0;O.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),O.materialDefines=new l(this._eventInfo.defineNames));const p=this.YH(),G=O.materialDefines;if(this._isReadyForSubMesh(O))return!0;const U=p.getEngine();G._needNormals=(0,b.O)(p,H,G,!0,this._maxSimultaneousLights,this._disableLighting),(0,b.S)(p,G);const h=this.needAlphaBlendingForMesh(H)&&this.YH().useOrderIndependentTransparency;if((0,b.X)(p,G,this.canRenderToMRT&&!h),(0,b.W)(p,G,h),F.b.PrepareDefines(U.currentRenderPassId,H,G),G._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,G._needUVs=!1;for(let H=1;H<=6;++H)G["MAINUV"+H]=!1;if(p.texturesEnabled){if(G.DIFFUSEDIRECTUV=0,G.BUMPDIRECTUV=0,G.AMBIENTDIRECTUV=0,G.OPACITYDIRECTUV=0,G.EMISSIVEDIRECTUV=0,G.SPECULARDIRECTUV=0,G.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&d.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._diffuseTexture,G,"DIFFUSE")}else G.DIFFUSE=!1;if(this._ambientTexture&&d.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._ambientTexture,G,"AMBIENT")}else G.AMBIENT=!1;if(this._opacityTexture&&d.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._opacityTexture,G,"OPACITY"),G.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else G.OPACITY=!1;if(this._reflectionTexture&&d.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(G._needNormals=!0,G.REFLECTION=!0,G.ROUGHNESS=this._roughness>0,G.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,G.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===e.b.INVCUBIC_MODE,G.REFLECTIONMAP_3D=this._reflectionTexture.isCube,G.REFLECTIONMAP_OPPOSITEZ=G.REFLECTIONMAP_3D&&this.YH().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,G.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case e.b.EXPLICIT_MODE:G.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case e.b.PLANAR_MODE:G.setReflectionMode("REFLECTIONMAP_PLANAR");break;case e.b.PROJECTION_MODE:G.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case e.b.SKYBOX_MODE:G.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case e.b.SPHERICAL_MODE:G.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case e.b.EQUIRECTANGULAR_MODE:G.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case e.b.FIXED_EQUIRECTANGULAR_MODE:G.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case e.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:G.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case e.b.CUBIC_MODE:case e.b.INVCUBIC_MODE:default:G.setReflectionMode("REFLECTIONMAP_CUBIC")}G.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else G.REFLECTION=!1,G.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&d.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._emissiveTexture,G,"EMISSIVE")}else G.EMISSIVE=!1;if(this._lightmapTexture&&d.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._lightmapTexture,G,"LIGHTMAP"),G.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,G.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else G.LIGHTMAP=!1;if(this._specularTexture&&d.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,b.P)(this._specularTexture,G,"SPECULAR"),G.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else G.SPECULAR=!1;if(p.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&d.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,b.P)(this._bumpTexture,G,"BUMP"),G.PARALLAX=this._useParallax,G.PARALLAX_RHS=p.useRightHandedSystem,G.PARALLAXOCCLUSION=this._useParallaxOcclusion,G.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else G.BUMP=!1,G.PARALLAX=!1,G.PARALLAX_RHS=!1,G.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&d.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;G._needUVs=!0,G.REFRACTION=!0,G.REFRACTIONMAP_3D=this._refractionTexture.isCube,G.RGBDREFRACTION=this._refractionTexture.isRGBD,G.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else G.REFRACTION=!1;G.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else G.DIFFUSE=!1,G.AMBIENT=!1,G.OPACITY=!1,G.REFLECTION=!1,G.EMISSIVE=!1,G.LIGHTMAP=!1,G.BUMP=!1,G.REFRACTION=!1;G.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),G.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,G.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,G.SPECULAROVERALPHA=this._useSpecularOverAlpha,G.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,G.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,G.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(H)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=G,this._eventInfo.subMesh=O,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(G._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(G),G.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,G.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(G._areFresnelDirty&&(d.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(G.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,G.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,G.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,G.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,G.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,G.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,G._needNormals=!0,G.FRESNEL=!0):G.FRESNEL=!1),G.AREALIGHTUSED)for(let S=0;S<H.lightSources.length;S++)if(!H.lightSources[S]._isReady())return!1;(0,b.Q)(H,p,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(H),G,this._applyDecalMapAfterDetailMap),(0,b.K)(p,U,this,G,t,null,O.getRenderingMesh().hasThinInstances),this._eventInfo.defines=G,this._eventInfo.mesh=H,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,b.H)(H,G,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let a=!1;if(G.isDirty){const t=G._areLightsDisposed;G.markAsProcessed();const q=new y.c;G.REFLECTION&&q.addFallback(0,"REFLECTION"),G.SPECULAR&&q.addFallback(0,"SPECULAR"),G.BUMP&&q.addFallback(0,"BUMP"),G.PARALLAX&&q.addFallback(1,"PARALLAX"),G.PARALLAX_RHS&&q.addFallback(1,"PARALLAX_RHS"),G.PARALLAXOCCLUSION&&q.addFallback(0,"PARALLAXOCCLUSION"),G.SPECULAROVERALPHA&&q.addFallback(0,"SPECULAROVERALPHA"),G.FOG&&q.addFallback(1,"FOG"),G.POINTSIZE&&q.addFallback(0,"POINTSIZE"),G.LOGARITHMICDEPTH&&q.addFallback(0,"LOGARITHMICDEPTH"),(0,b.r)(G,q,this._maxSimultaneousLights),G.SPECULARTERM&&q.addFallback(0,"SPECULARTERM"),G.DIFFUSEFRESNEL&&q.addFallback(1,"DIFFUSEFRESNEL"),G.OPACITYFRESNEL&&q.addFallback(2,"OPACITYFRESNEL"),G.REFLECTIONFRESNEL&&q.addFallback(3,"REFLECTIONFRESNEL"),G.EMISSIVEFRESNEL&&q.addFallback(4,"EMISSIVEFRESNEL"),G.FRESNEL&&q.addFallback(4,"FRESNEL"),G.MULTIVIEW&&q.addFallback(0,"MULTIVIEW");const h=[V.h.PositionKind];G.NORMAL&&h.push(V.h.NormalKind),G.TANGENT&&h.push(V.h.TangentKind);for(let H=1;H<=6;++H)G["UV"+H]&&h.push(`uv${1===H?"":H}`);G.VERTEXCOLOR&&h.push(V.h.ColorKind),(0,b.w)(h,H,G,q),(0,b.y)(h,G),(0,b.C)(h,H,G),(0,b.u)(h,H,G);let j="default";const e=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],X=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],E=["Material","Scene","Mesh"],T={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:G.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=G,this._eventInfo.uniforms=e,this._eventInfo.attributes=h,this._eventInfo.samplers=X,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=H,this._eventInfo.indexParameters=T,this._callbackPluginEventGeneric(128,this._eventInfo),F.b.AddUniformsAndSamplers(e,X),w.d.AddUniforms(e),w.d.AddSamplers(X),o.b&&(o.b.PrepareUniforms(e,G),o.b.PrepareSamplers(X,G)),(0,b.Y)({uniformsNames:e,uniformBuffersNames:E,samplers:X,defines:G,maxSimultaneousLights:this._maxSimultaneousLights}),(0,K.d)(e);const D={};this.customShaderNameResolve&&(j=this.customShaderNameResolve(j,e,E,X,G,h,D));const l=G.toString(),d=O.effect;let v=p.getEngine().createEffect(j,{attributes:h,uniformsNames:e,uniformBuffersNames:E,samplers:X,defines:l,fallbacks:q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:T,processFinalCode:D.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:G.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([S.e(41),S.e(64)]).then(S.bind(S,13862)),Promise.all([S.e(39),S.e(65)]).then(S.bind(S,14008))]):await Promise.all([Promise.all([S.e(34),S.e(67)]).then(S.bind(S,14075)),Promise.all([S.e(33),S.e(68)]).then(S.bind(S,14236))]),this._shadersLoaded=!0}},U);if(this._eventInfo.customCode=void 0,v)if(this._onEffectCreatedObservable&&(Y.effect=v,Y.subMesh=O,this._onEffectCreatedObservable.notifyObservers(Y)),this.allowShaderHotSwapping&&d&&!v.isReady()){if(v=d,G.markAsUnprocessed(),a=this.isFrozen,t)return G._areLightsDisposed=!0,!1}else p.resetCachedMaterial(),O.setEffect(v,G,this._materialContext)}return!(!O.effect||!O.effect.isReady())&&(G._renderId=p.getRenderId(),q._wasPreviouslyReady=!a,q._wasPreviouslyUsingInstances=t,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const H=this._uniformBuffer;H.addUniform("diffuseLeftColor",4),H.addUniform("diffuseRightColor",4),H.addUniform("opacityParts",4),H.addUniform("reflectionLeftColor",4),H.addUniform("reflectionRightColor",4),H.addUniform("refractionLeftColor",4),H.addUniform("refractionRightColor",4),H.addUniform("emissiveLeftColor",4),H.addUniform("emissiveRightColor",4),H.addUniform("vDiffuseInfos",2),H.addUniform("vAmbientInfos",2),H.addUniform("vOpacityInfos",2),H.addUniform("vReflectionInfos",2),H.addUniform("vReflectionPosition",3),H.addUniform("vReflectionSize",3),H.addUniform("vEmissiveInfos",2),H.addUniform("vLightmapInfos",2),H.addUniform("vSpecularInfos",2),H.addUniform("vBumpInfos",3),H.addUniform("diffuseMatrix",16),H.addUniform("ambientMatrix",16),H.addUniform("opacityMatrix",16),H.addUniform("reflectionMatrix",16),H.addUniform("emissiveMatrix",16),H.addUniform("lightmapMatrix",16),H.addUniform("specularMatrix",16),H.addUniform("bumpMatrix",16),H.addUniform("vTangentSpaceParams",2),H.addUniform("pointSize",1),H.addUniform("alphaCutOff",1),H.addUniform("refractionMatrix",16),H.addUniform("vRefractionInfos",4),H.addUniform("vRefractionPosition",3),H.addUniform("vRefractionSize",3),H.addUniform("vSpecularColor",4),H.addUniform("vEmissiveColor",3),H.addUniform("vDiffuseColor",4),H.addUniform("vAmbientColor",3),H.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(H,O,S){const t=this.YH(),q=S.materialDefines;if(!q)return;const p=S.effect;if(!p)return;this._activeEffect=p,O.getMeshUniformBuffer().bindToEffect(p,"Mesh"),O.transferToEffect(H),this._uniformBuffer.bindToEffect(p,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,t,O,H,this.isFrozen),F.b.Bind(t.getEngine().currentRenderPassId,this._activeEffect,O,H,this);const V=t.activeCamera;V?this._uniformBuffer.updateFloat4("cameraInfo",V.UU,V.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=S,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),q.OBJECTSPACE_NORMALMAP&&(H.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const w=this._mustRebind(t,p,S,O.visibility);(0,b.c)(O,p);const o=this._uniformBuffer;if(w){if(this.bindViewProjection(p),!o.useUbo||!this.isFrozen||!o.isSync||S._drawWrapper._forceRebindOnNextCall){if(d.FresnelEnabled&&q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(o.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),o.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&o.updateColor4("opacityParts",new U.TO(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(o.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),o.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(o.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),o.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(o.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),o.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),t.texturesEnabled){if(this._diffuseTexture&&d.DiffuseTextureEnabled&&(o.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,b.o)(this._diffuseTexture,o,"diffuse")),this._ambientTexture&&d.AmbientTextureEnabled&&(o.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,b.o)(this._ambientTexture,o,"ambient")),this._opacityTexture&&d.OpacityTextureEnabled&&(o.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,b.o)(this._opacityTexture,o,"opacity")),this._hasAlphaChannel()&&o.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&d.ReflectionTextureEnabled){if(o.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),o.VU("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const H=this._reflectionTexture;o.updateVector3("vReflectionPosition",H.boundingBoxPosition),o.updateVector3("vReflectionSize",H.boundingBoxSize)}}else o.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&d.EmissiveTextureEnabled&&(o.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,b.o)(this._emissiveTexture,o,"emissive")),this._lightmapTexture&&d.LightmapTextureEnabled&&(o.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,b.o)(this._lightmapTexture,o,"lightmap")),this._specularTexture&&d.SpecularTextureEnabled&&(o.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,b.o)(this._specularTexture,o,"specular")),this._bumpTexture&&t.getEngine().getCaps().standardDerivatives&&d.BumpTextureEnabled&&(o.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,b.o)(this._bumpTexture,o,"bump"),t._mirroredCameraPosition?o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):o.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&d.RefractionTextureEnabled){let H=1;if(this._refractionTexture.isCube||(o.VU("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(H=this._refractionTexture.depth)),o.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,H,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const H=this._refractionTexture;o.updateVector3("vRefractionPosition",H.boundingBoxPosition),o.updateVector3("vRefractionSize",H.boundingBoxSize)}}}this.pointsCloud&&o.updateFloat("pointSize",this.pointSize),o.updateColor4("vSpecularColor",this.specularColor,this.specularPower),o.updateColor3("vEmissiveColor",d.EmissiveTextureEnabled?this.emissiveColor:U.TO.BlackReadOnly),o.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),t.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),o.updateColor3("vAmbientColor",this._globalAmbientColor)}t.texturesEnabled&&(this._diffuseTexture&&d.DiffuseTextureEnabled&&p.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&d.AmbientTextureEnabled&&p.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&d.OpacityTextureEnabled&&p.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&d.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?p.setTexture("reflectionCubeSampler",this._reflectionTexture):p.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&d.EmissiveTextureEnabled&&p.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&d.LightmapTextureEnabled&&p.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&d.SpecularTextureEnabled&&p.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&t.getEngine().getCaps().standardDerivatives&&d.BumpTextureEnabled&&p.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&d.RefractionTextureEnabled&&(this._refractionTexture.isCube?p.setTexture("refractionCubeSampler",this._refractionTexture):p.setTexture("refraction2DSampler",this._refractionTexture))),this.YH().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(O)&&this.YH().depthPeelingRenderer.bind(p),this._eventInfo.subMesh=S,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,K.g)(p,this,t),this.bindEyePosition(p)}else t.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(w||!this.isFrozen){var h;if(t.lightsEnabled&&!this._disableLighting&&(0,b.g)(t,O,p,q,this._maxSimultaneousLights),(t.fogEnabled&&O.applyFog&&t.fogMode!==G.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||O.receiveShadows||q.PREPASS)&&this.bindView(p),(0,b.f)(t,O,p),q.NUM_MORPH_INFLUENCERS&&(0,b.l)(O,p),q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(h=O.bakedVertexAnimationManager)||void 0===h||h.bind(p,q.INSTANCES);this.useLogarithmicDepth&&(0,b.h)(q,p,t),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(O,this._activeEffect,S),o.update()}getAnimatables(){const H=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&H.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&H.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&H.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&H.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&H.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&H.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&H.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&H.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&H.push(this._refractionTexture),H}getActiveTextures(){const H=super.getActiveTextures();return this._diffuseTexture&&H.push(this._diffuseTexture),this._ambientTexture&&H.push(this._ambientTexture),this._opacityTexture&&H.push(this._opacityTexture),this._reflectionTexture&&H.push(this._reflectionTexture),this._emissiveTexture&&H.push(this._emissiveTexture),this._specularTexture&&H.push(this._specularTexture),this._bumpTexture&&H.push(this._bumpTexture),this._lightmapTexture&&H.push(this._lightmapTexture),this._refractionTexture&&H.push(this._refractionTexture),H}hasTexture(H){return!!super.hasTexture(H)||(this._diffuseTexture===H||(this._ambientTexture===H||(this._opacityTexture===H||(this._reflectionTexture===H||(this._emissiveTexture===H||(this._specularTexture===H||(this._bumpTexture===H||(this._lightmapTexture===H||this._refractionTexture===H))))))))}dispose(H,O){var S,t,q,p,G,U,V,w,o;O&&(null===(S=this._diffuseTexture)||void 0===S||S.dispose(),null===(t=this._ambientTexture)||void 0===t||t.dispose(),null===(q=this._opacityTexture)||void 0===q||q.dispose(),null===(p=this._reflectionTexture)||void 0===p||p.dispose(),null===(G=this._emissiveTexture)||void 0===G||G.dispose(),null===(U=this._specularTexture)||void 0===U||U.dispose(),null===(V=this._bumpTexture)||void 0===V||V.dispose(),null===(w=this._lightmapTexture)||void 0===w||w.dispose(),null===(o=this._refractionTexture)||void 0===o||o.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(H,O)}clone(H){let O=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],S=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const t=D.e.Clone((()=>new d(H,this.YH())),this,{cloneTexturesOnlyOnce:O});return t.name=H,t.id=H,this.stencil.copyTo(t.stencil),this._clonePlugins(t,S),t}static Parse(H,O,S){const t=D.e.Parse((()=>new d(H.name,O)),H,O,S);return H.stencil&&t.stencil.parse(H.stencil,O,S),h.e._ParsePlugins(H,t,O,S),t}static get DiffuseTextureEnabled(){return E.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(H){E.b.DiffuseTextureEnabled=H}static get DetailTextureEnabled(){return E.b.DetailTextureEnabled}static set DetailTextureEnabled(H){E.b.DetailTextureEnabled=H}static get AmbientTextureEnabled(){return E.b.AmbientTextureEnabled}static set AmbientTextureEnabled(H){E.b.AmbientTextureEnabled=H}static get OpacityTextureEnabled(){return E.b.OpacityTextureEnabled}static set OpacityTextureEnabled(H){E.b.OpacityTextureEnabled=H}static get ReflectionTextureEnabled(){return E.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(H){E.b.ReflectionTextureEnabled=H}static get EmissiveTextureEnabled(){return E.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(H){E.b.EmissiveTextureEnabled=H}static get SpecularTextureEnabled(){return E.b.SpecularTextureEnabled}static set SpecularTextureEnabled(H){E.b.SpecularTextureEnabled=H}static get BumpTextureEnabled(){return E.b.BumpTextureEnabled}static set BumpTextureEnabled(H){E.b.BumpTextureEnabled=H}static get LightmapTextureEnabled(){return E.b.LightmapTextureEnabled}static set LightmapTextureEnabled(H){E.b.LightmapTextureEnabled=H}static get RefractionTextureEnabled(){return E.b.RefractionTextureEnabled}static set RefractionTextureEnabled(H){E.b.RefractionTextureEnabled=H}static get ColorGradingTextureEnabled(){return E.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(H){E.b.ColorGradingTextureEnabled=H}static get FresnelEnabled(){return E.b.FresnelEnabled}static set FresnelEnabled(H){E.b.FresnelEnabled=H}}d.ForceGLSL=!1,(0,t.d)([(0,q.A)("diffuseTexture")],d.prototype,"_diffuseTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"diffuseTexture",void 0),(0,t.d)([(0,q.A)("ambientTexture")],d.prototype,"_ambientTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"ambientTexture",void 0),(0,t.d)([(0,q.A)("opacityTexture")],d.prototype,"_opacityTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"opacityTexture",void 0),(0,t.d)([(0,q.A)("reflectionTexture")],d.prototype,"_reflectionTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"reflectionTexture",void 0),(0,t.d)([(0,q.A)("emissiveTexture")],d.prototype,"_emissiveTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"emissiveTexture",void 0),(0,t.d)([(0,q.A)("specularTexture")],d.prototype,"_specularTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"specularTexture",void 0),(0,t.d)([(0,q.A)("bumpTexture")],d.prototype,"_bumpTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"bumpTexture",void 0),(0,t.d)([(0,q.A)("lightmapTexture")],d.prototype,"_lightmapTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"lightmapTexture",void 0),(0,t.d)([(0,q.A)("refractionTexture")],d.prototype,"_refractionTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"refractionTexture",void 0),(0,t.d)([(0,q.j)("ambient")],d.prototype,"ambientColor",void 0),(0,t.d)([(0,q.j)("diffuse")],d.prototype,"diffuseColor",void 0),(0,t.d)([(0,q.j)("specular")],d.prototype,"specularColor",void 0),(0,t.d)([(0,q.j)("emissive")],d.prototype,"emissiveColor",void 0),(0,t.d)([(0,q.J)()],d.prototype,"specularPower",void 0),(0,t.d)([(0,q.J)("useAlphaFromDiffuseTexture")],d.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],d.prototype,"useAlphaFromDiffuseTexture",void 0),(0,t.d)([(0,q.J)("useEmissiveAsIllumination")],d.prototype,"_useEmissiveAsIllumination",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useEmissiveAsIllumination",void 0),(0,t.d)([(0,q.J)("linkEmissiveWithDiffuse")],d.prototype,"_linkEmissiveWithDiffuse",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"linkEmissiveWithDiffuse",void 0),(0,t.d)([(0,q.J)("useSpecularOverAlpha")],d.prototype,"_useSpecularOverAlpha",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useSpecularOverAlpha",void 0),(0,t.d)([(0,q.J)("useReflectionOverAlpha")],d.prototype,"_useReflectionOverAlpha",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useReflectionOverAlpha",void 0),(0,t.d)([(0,q.J)("disableLighting")],d.prototype,"_disableLighting",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],d.prototype,"disableLighting",void 0),(0,t.d)([(0,q.J)("useObjectSpaceNormalMap")],d.prototype,"_useObjectSpaceNormalMap",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useObjectSpaceNormalMap",void 0),(0,t.d)([(0,q.J)("useParallax")],d.prototype,"_useParallax",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useParallax",void 0),(0,t.d)([(0,q.J)("useParallaxOcclusion")],d.prototype,"_useParallaxOcclusion",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useParallaxOcclusion",void 0),(0,t.d)([(0,q.J)()],d.prototype,"parallaxScaleBias",void 0),(0,t.d)([(0,q.J)("roughness")],d.prototype,"_roughness",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"roughness",void 0),(0,t.d)([(0,q.J)()],d.prototype,"indexOfRefraction",void 0),(0,t.d)([(0,q.J)()],d.prototype,"invertRefractionY",void 0),(0,t.d)([(0,q.J)()],d.prototype,"alphaCutOff",void 0),(0,t.d)([(0,q.J)("useLightmapAsShadowmap")],d.prototype,"_useLightmapAsShadowmap",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useLightmapAsShadowmap",void 0),(0,t.d)([(0,q.m)("diffuseFresnelParameters")],d.prototype,"_diffuseFresnelParameters",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"diffuseFresnelParameters",void 0),(0,t.d)([(0,q.m)("opacityFresnelParameters")],d.prototype,"_opacityFresnelParameters",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],d.prototype,"opacityFresnelParameters",void 0),(0,t.d)([(0,q.m)("reflectionFresnelParameters")],d.prototype,"_reflectionFresnelParameters",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"reflectionFresnelParameters",void 0),(0,t.d)([(0,q.m)("refractionFresnelParameters")],d.prototype,"_refractionFresnelParameters",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"refractionFresnelParameters",void 0),(0,t.d)([(0,q.m)("emissiveFresnelParameters")],d.prototype,"_emissiveFresnelParameters",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"emissiveFresnelParameters",void 0),(0,t.d)([(0,q.J)("useReflectionFresnelFromSpecular")],d.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],d.prototype,"useReflectionFresnelFromSpecular",void 0),(0,t.d)([(0,q.J)("useGlossinessFromSpecularMapAlpha")],d.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,t.d)([(0,q.J)("maxSimultaneousLights")],d.prototype,"_maxSimultaneousLights",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],d.prototype,"maxSimultaneousLights",void 0),(0,t.d)([(0,q.J)("invertNormalMapX")],d.prototype,"_invertNormalMapX",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"invertNormalMapX",void 0),(0,t.d)([(0,q.J)("invertNormalMapY")],d.prototype,"_invertNormalMapY",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"invertNormalMapY",void 0),(0,t.d)([(0,q.J)("twoSidedLighting")],d.prototype,"_twoSidedLighting",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],d.prototype,"twoSidedLighting",void 0),(0,t.d)([(0,q.J)("applyDecalMapAfterDetailMap")],d.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,t.d)([(0,q.e)("_markAllSubMeshesAsMiscDirty")],d.prototype,"applyDecalMapAfterDetailMap",void 0),(0,X.g)("BABYLON.StandardMaterial",d),G.e.DefaultMaterialFactory=H=>new d("default material",H)}}]);