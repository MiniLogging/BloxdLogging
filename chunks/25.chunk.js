"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11593:(B,I,C)=>{C.d(I,{e:()=>R});var M=C(11180),x=C(11516),y=C(11186),f=C(11589),L=C(11586),e=C(11601),g=C(11559);class N extends L.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class R extends e.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(B){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(B,"DetailMap",140,new N,I),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=x.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=B._dirtyCallbacks[1]}isReadyForSubMesh(B,I,C){return!this._isEnabled||!(B._areTexturesDirty&&I.texturesEnabled&&C.getCaps().standardDerivatives&&this._texture&&f.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(B,I){if(this._isEnabled){B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const C=I.getEngine();B._areTexturesDirty&&(C.getCaps().standardDerivatives&&this._texture&&f.b.DetailTextureEnabled&&this._isEnabled?((0,g.N)(this._texture,B,"DETAIL"),B.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):B.DETAIL=!1)}else B.DETAIL=!1}bindForSubMesh(B,I){if(!this._isEnabled)return;const C=this._material.isFrozen;B.useUbo&&C&&B.isSync||this._texture&&f.b.DetailTextureEnabled&&(B.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,g.o)(this._texture,B,"detail")),I.texturesEnabled&&this._texture&&f.b.DetailTextureEnabled&&B.setTexture("detailSampler",this._texture)}hasTexture(B){return this._texture===B}getActiveTextures(B){this._texture&&B.push(this._texture)}getAnimatables(B){this._texture&&this._texture.animations&&this._texture.animations.length>0&&B.push(this._texture)}dispose(B){var I;B&&(null===(I=this._texture)||void 0===I||I.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(B){B.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,M.e)([(0,y.B)("detailTexture"),(0,y.c)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"texture",void 0),(0,M.e)([(0,y.K)()],R.prototype,"diffuseBlendLevel",void 0),(0,M.e)([(0,y.K)()],R.prototype,"roughnessBlendLevel",void 0),(0,M.e)([(0,y.K)()],R.prototype,"bumpLevel",void 0),(0,M.e)([(0,y.K)(),(0,y.c)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"normalBlendMethod",void 0),(0,M.e)([(0,y.K)(),(0,y.c)("_markAllSubMeshesAsTexturesDirty")],R.prototype,"isEnabled",void 0)},11586:(B,I,C)=>{C.d(I,{b:()=>M});class M{constructor(B){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=B,B)for(const I in B)Object.prototype.hasOwnProperty.call(B,I)&&this._setDefaultValue(I)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let B=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||B,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const B of Object.keys(this))"_"!==B[0]&&this._keys.push(B);if(this._externalProperties)for(const B in this._externalProperties)-1===this._keys.indexOf(B)&&this._keys.push(B)}isEqual(B){if(this._keys.length!==B._keys.length)return!1;for(let I=0;I<this._keys.length;I++){const C=this._keys[I];if(this[C]!==B[C])return!1}return!0}cloneTo(B){this._keys.length!==B._keys.length&&(B._keys=this._keys.slice(0));for(let I=0;I<this._keys.length;I++){const C=this._keys[I];B[C]=this[C]}}reset(){for(const B of this._keys)this._setDefaultValue(B)}_setDefaultValue(B){var I,C,M,x;const y=(null===(I=this._externalProperties)||void 0===I||null===(C=I[B])||void 0===C?void 0:C.type)??typeof this[B],f=null===(M=this._externalProperties)||void 0===M||null===(x=M[B])||void 0===x?void 0:x.default;switch(y){case"number":this[B]=f??0;break;case"string":this[B]=f??"";break;default:this[B]=f??!1}}toString(){let B="";for(let I=0;I<this._keys.length;I++){const C=this._keys[I],M=this[C];switch(typeof M){case"number":case"string":B+="#define "+C+" "+M+"\n";break;default:M&&(B+="#define "+C+"\n")}}return B}}},11589:(B,I,C)=>{C.d(I,{b:()=>x});var M=C(11096);class x{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){this._DiffuseTextureEnabled!==B&&(this._DiffuseTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(B){this._BaseWeightTextureEnabled!==B&&(this._BaseWeightTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(B){this._BaseDiffuseRoughnessTextureEnabled!==B&&(this._BaseDiffuseRoughnessTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(B){this._DetailTextureEnabled!==B&&(this._DetailTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(B){this._DecalMapEnabled!==B&&(this._DecalMapEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(B){this._AmbientTextureEnabled!==B&&(this._AmbientTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(B){this._OpacityTextureEnabled!==B&&(this._OpacityTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){this._ReflectionTextureEnabled!==B&&(this._ReflectionTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){this._EmissiveTextureEnabled!==B&&(this._EmissiveTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(B){this._SpecularTextureEnabled!==B&&(this._SpecularTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(B){this._BumpTextureEnabled!==B&&(this._BumpTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(B){this._LightmapTextureEnabled!==B&&(this._LightmapTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(B){this._RefractionTextureEnabled!==B&&(this._RefractionTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){this._ColorGradingTextureEnabled!==B&&(this._ColorGradingTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(B){this._FresnelEnabled!==B&&(this._FresnelEnabled=B,M.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(B){this._ClearCoatTextureEnabled!==B&&(this._ClearCoatTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(B){this._ClearCoatBumpTextureEnabled!==B&&(this._ClearCoatBumpTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(B){this._ClearCoatTintTextureEnabled!==B&&(this._ClearCoatTintTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(B){this._SheenTextureEnabled!==B&&(this._SheenTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(B){this._AnisotropicTextureEnabled!==B&&(this._AnisotropicTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(B){this._ThicknessTextureEnabled!==B&&(this._ThicknessTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(B){this._RefractionIntensityTextureEnabled!==B&&(this._RefractionIntensityTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(B){this._TranslucencyIntensityTextureEnabled!==B&&(this._TranslucencyIntensityTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(B){this._TranslucencyColorTextureEnabled!==B&&(this._TranslucencyColorTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(B){this._IridescenceTextureEnabled!==B&&(this._IridescenceTextureEnabled=B,M.e.MarkAllMaterialsAsDirty(1))}}x._DiffuseTextureEnabled=!0,x._BaseWeightTextureEnabled=!0,x._BaseDiffuseRoughnessTextureEnabled=!0,x._DetailTextureEnabled=!0,x._DecalMapEnabled=!0,x._AmbientTextureEnabled=!0,x._OpacityTextureEnabled=!0,x._ReflectionTextureEnabled=!0,x._EmissiveTextureEnabled=!0,x._SpecularTextureEnabled=!0,x._BumpTextureEnabled=!0,x._LightmapTextureEnabled=!0,x._RefractionTextureEnabled=!0,x._ColorGradingTextureEnabled=!0,x._FresnelEnabled=!0,x._ClearCoatTextureEnabled=!0,x._ClearCoatBumpTextureEnabled=!0,x._ClearCoatTintTextureEnabled=!0,x._SheenTextureEnabled=!0,x._AnisotropicTextureEnabled=!0,x._ThicknessTextureEnabled=!0,x._RefractionIntensityTextureEnabled=!0,x._TranslucencyIntensityTextureEnabled=!0,x._TranslucencyColorTextureEnabled=!0,x._IridescenceTextureEnabled=!0},11609:(B,I,C)=>{C.d(I,{e:()=>y});var M,x=C(11194);!function(B){B[B.Zero=0]="Zero",B[B.One=1]="One",B[B.MaxViewZ=2]="MaxViewZ"}(M||(M={}));class y{static CreateConfiguration(B){return y._Configurations[B]={defines:{},previousWorldMatrices:{},previousViewProjection:x.Matrix.Zero(),currentViewProjection:x.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},y._Configurations[B]}static DeleteConfiguration(B){delete y._Configurations[B]}static GetConfiguration(B){return y._Configurations[B]}static AddUniformsAndSamplers(B,I){B.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(B,I){for(const C of I)if(C.cf)for(const I of C.cf)I._removeDrawWrapper(B)}static PrepareDefines(B,I,C){if(!C._arePrePassDirty)return;const M=y._Configurations[B];if(!M)return;C.PREPASS=!0,C.PREPASS_COLOR=!1,C.PREPASS_COLOR_INDEX=-1;let x=0;for(let f=0;f<y.GeometryTextureDescriptions.length;f++){const B=y.GeometryTextureDescriptions[f],I=B.define,L=B.defineIndex,e=M.defines[L];void 0!==e?(C[I]=!0,C[L]=e,x++):(C[I]=!1,delete C[L])}C.SCENE_MRT_COUNT=x,C.BONES_VELOCITY_ENABLED=I.useBones&&I.computeBonesUsingShaders&&I.skeleton&&!I.skeleton.isUsingTextureForMatrices&&-1===M.excludedSkinnedMesh.indexOf(I)}static Bind(B,I,C,M,x){const f=y._Configurations[B];if(!f)return;const L=C.rB(),e=L.getEngine();if(f.reverseCulling&&e.setStateCullFaceType(L._mirroredCameraPosition?x.cullBackFaces:!x.cullBackFaces),(void 0!==f.defines.PREPASS_VELOCITY_INDEX||void 0!==f.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(f.previousWorldMatrices[C.uniqueId]||(f.previousWorldMatrices[C.uniqueId]=M.clone()),f.previousViewProjection||(f.previousViewProjection=L.getTransformMatrix().clone(),f.currentViewProjection=L.getTransformMatrix().clone()),f.currentViewProjection.updateFlag!==L.getTransformMatrix().updateFlag?(f.lastUpdateFrameId=e.frameId,f.previousViewProjection.M(f.currentViewProjection),f.currentViewProjection.M(L.getTransformMatrix())):f.lastUpdateFrameId!==e.frameId&&(f.lastUpdateFrameId=e.frameId,f.previousViewProjection.M(f.currentViewProjection)),I.setMatrix("previousWorld",f.previousWorldMatrices[C.uniqueId]),I.setMatrix("previousViewProjection",f.previousViewProjection),f.previousWorldMatrices[C.uniqueId]=M.clone(),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const B=C.skeleton;if(!B.isUsingTextureForMatrices||-1===I.getUniformIndex("boneTextureWidth")){const M=B.getTransformMatrices(C);M&&(f.previousBones[C.uniqueId]||(f.previousBones[C.uniqueId]=M.slice()),I.setMatrices("mPreviousBones",f.previousBones[C.uniqueId]),f.previousBones[C.uniqueId].set(M))}}}}y.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],y._Configurations={}},11601:(B,I,C)=>{C.d(I,{b:()=>o});var M=C(11180),x=C(11186),y=C(11516),f=C(11056),L=C(11074),e=C(11110);const g=new RegExp("^([gimus]+)!");class N{constructor(B){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=B,this._scene=B.rB(),this._engine=this._scene.getEngine()}_addPlugin(B){for(let M=0;M<this._plugins.length;++M)if(this._plugins[M].name===B.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!B.isCompatible(this._material.shaderLanguage))throw`The plugin "${B.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const I=B.getClassName();N._MaterialPluginClassToMainDefine[I]||(N._MaterialPluginClassToMainDefine[I]="MATERIALPLUGIN_"+ ++N._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(B,I)=>this._handlePluginEvent(B,I),this._plugins.push(B),this._plugins.sort(((B,I)=>B.priority-I.priority)),this._codeInjectionPoints={};const C={};C[N._MaterialPluginClassToMainDefine[I]]={type:"boolean",default:!0};for(const M of this._plugins)M.collectDefines(C),this._collectPointNames("vertex",M.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",M.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=C,!0}_activatePlugin(B){-1===this._activePlugins.indexOf(B)&&(this._activePlugins.push(B),this._activePlugins.sort(((B,I)=>B.priority-I.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),B.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(B),this._activePluginsForExtraEvents.sort(((B,I)=>B.priority-I.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(B){for(let I=0;I<this._plugins.length;++I)if(this._plugins[I].name===B)return this._plugins[I];return null}_handlePluginEventIsReadyForSubMesh(B){let I=!0;for(const C of this._activePlugins)I=I&&C.isReadyForSubMesh(B.defines,this._scene,this._engine,B.subMesh);B.isReadyForSubMesh=I}_handlePluginEventPrepareDefinesBeforeAttributes(B){for(const I of this._activePlugins)I.prepareDefinesBeforeAttributes(B.defines,this._scene,B.mesh)}_handlePluginEventPrepareDefines(B){for(const I of this._activePlugins)I.prepareDefines(B.defines,this._scene,B.mesh)}_handlePluginEventHardBindForSubMesh(B){for(const I of this._activePluginsForExtraEvents)I.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventBindForSubMesh(B){for(const I of this._activePlugins)I.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,B.subMesh)}_handlePluginEventHasRenderTargetTextures(B){let I=!1;for(const C of this._activePluginsForExtraEvents)if(I=C.hasRenderTargetTextures(),I)break;B.hasRenderTargetTextures=I}_handlePluginEventFillRenderTargetTextures(B){for(const I of this._activePluginsForExtraEvents)I.fillRenderTargetTextures(B.renderTargets)}_handlePluginEvent(B,I){switch(B){case 512:{const B=I;for(const I of this._activePlugins)I.getActiveTextures(B.activeTextures);break}case 256:{const B=I;for(const I of this._activePlugins)I.getAnimatables(B.animatables);break}case 1024:{const B=I;let C=!1;for(const I of this._activePlugins)if(C=I.hasTexture(B.texture),C)break;B.hasTexture=C;break}case 2:{const B=I;for(const I of this._plugins)I.dispose(B.forceDisposeTextures);break}case 4:I.defineNames=this._defineNamesFromPlugins;break;case 128:{const B=I;for(const I of this._activePlugins)B.fallbackRank=I.addFallbacks(B.defines,B.fallbacks,B.fallbackRank),I.getAttributes(B.attributes,this._scene,B.mesh);this._uniformList.length>0&&B.uniforms.push(...this._uniformList),this._samplerList.length>0&&B.samplers.push(...this._samplerList),this._uboList.length>0&&B.uniformBuffersNames.push(...this._uboList),B.customCode=this._injectCustomCode(B,B.customCode);break}case 8:{const B=I;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const C=1===this._material.shaderLanguage;for(const I of this._plugins){const M=I.getUniforms(this._material.shaderLanguage);if(M){if(M.ubo)for(const I of M.ubo){if(I.size&&I.type){const M=I.arraySize??0;if(B.ubo.addUniform(I.name,I.size,M),C){let B;switch(I.type){case"mat4":B="mat4x4f";break;case"float":B="f32";break;default:B=`${I.type}f`}this._uboDeclaration+=M>0?`uniform ${I.name}: array<${B}, ${M}>;\n`:`uniform ${I.name}: ${B};\n`}else this._uboDeclaration+=`${I.type} ${I.name}${M>0?`[${M}]`:""};\n`}this._uniformList.push(I.name)}M.vertex&&(this._vertexDeclaration+=M.vertex+"\n"),M.fragment&&(this._fragmentDeclaration+=M.fragment+"\n")}I.getSamplers(this._samplerList),I.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(B,I){if(I)for(const C in I)this._codeInjectionPoints[B]||(this._codeInjectionPoints[B]={}),this._codeInjectionPoints[B][C]=!0}_injectCustomCode(B,I){return(C,M)=>{var x;I&&(M=I(C,M)),this._uboDeclaration&&(M=M.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(M=M.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(M=M.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const y=null===(x=this._codeInjectionPoints)||void 0===x?void 0:x[C];if(!y)return M;let f=null;for(let I in y){let x="";for(const M of this._activePlugins){var N;let y=null===(N=M.getCustomCode(C,this._material.shaderLanguage))||void 0===N?void 0:N[I];if(y){if(M.resolveIncludes){if(null===f){const I=0;f={defines:[],indexParameters:B.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:e.d.GetShadersRepository(I),includesShadersStore:e.d.GetIncludesShadersStore(I),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}f.isFragment="fragment"===C,(0,L.m)(y,f,(B=>y=B))}x+=y+"\n"}}if(x.length>0)if("!"===I.charAt(0)){I=I.substring(1);let B="g";if("!"===I.charAt(0))B="",I=I.substring(1);else{const C=g.exec(I);C&&C.length>=2&&(B=C[1],I=I.substring(B.length+1))}B.indexOf("g")<0&&(B+="g");const C=M,y=new RegExp(I,B);let f=y.exec(C);for(;null!==f;){let B=x;for(let I=0;I<f.length;++I)B=B.replace("$"+I,f[I]);M=M.replace(f[0],B),f=y.exec(C)}}else{const B="#define "+I;M=M.replace(B,"\n"+x+"\n"+B)}}return M}}}N._MaterialPluginClassToMainDefine={},N._MaterialPluginCounter=0,f.c.OnEnginesDisposedObservable.add((()=>{k()}));const R=[];let H=!1,F=null;function k(){R.length=0,H=!1,y.c.OnEventObservable.remove(F),F=null}var q=C(11226),S=C(11149);class o{isCompatible(B){return 0===B}_enable(B){B&&this._pluginManager._activatePlugin(this)}constructor(B,I,C,M){let x=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=B,this.name=I,this.priority=C,this.resolveIncludes=f,B.pluginManager||(B.pluginManager=new N(B),B.If.add((()=>{B.pluginManager=void 0}))),this._pluginDefineNames=M,this._pluginManager=B.pluginManager,x&&this._pluginManager._addPlugin(this),y&&this._enable(!0),this.markAllDefinesAsDirty=B._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(B,I,C,M){return!0}hardBindForSubMesh(B,I,C,M){}bindForSubMesh(B,I,C,M){}dispose(B){}getCustomCode(B){return null}collectDefines(B){if(this._pluginDefineNames)for(const I of Object.keys(this._pluginDefineNames)){if("_"===I[0])continue;const C=typeof this._pluginDefineNames[I];B[I]={type:"number"===C?"number":"string"===C?"string":"boolean"===C?"boolean":"object",default:this._pluginDefineNames[I]}}}prepareDefinesBeforeAttributes(B,I,C){}prepareDefines(B,I,C){}hasTexture(B){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(B){}getActiveTextures(B){}getAnimatables(B){}addFallbacks(B,I,C){return C}getSamplers(B){}getAttributes(B,I,C){}getUniformBuffersNames(B){}getUniforms(){return{}}copyTo(B){q.d.Clone((()=>B),this)}serialize(){return q.d.Serialize(this)}parse(B,I,C){q.d.Parse((()=>this),B,I,C)}}(0,M.e)([(0,x.K)()],o.prototype,"name",void 0),(0,M.e)([(0,x.K)()],o.prototype,"priority",void 0),(0,M.e)([(0,x.K)()],o.prototype,"resolveIncludes",void 0),(0,M.e)([(0,x.K)()],o.prototype,"registerForExtraEvents",void 0),(0,S.h)("BABYLON.MaterialPluginBase",o)},11582:(B,I,C)=>{C.d(I,{b:()=>M});class M{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(B){B.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(B){}bindForSubMesh(B,I,C,M,x){if(I.prePassRenderer&&I.prePassRenderer.enabled&&I.prePassRenderer.currentRTisSceneRT&&(-1!==I.prePassRenderer.getIndex(2)||-1!==I.prePassRenderer.getIndex(11))){this.previousWorldMatrices[C.uniqueId]||(this.previousWorldMatrices[C.uniqueId]=M.clone()),this.previousViewProjection||(this.previousViewProjection=I.getTransformMatrix().clone(),this.currentViewProjection=I.getTransformMatrix().clone());const x=I.getEngine();this.currentViewProjection.updateFlag!==I.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=x.frameId,this.previousViewProjection.M(this.currentViewProjection),this.currentViewProjection.M(I.getTransformMatrix())):this._lastUpdateFrameId!==x.frameId&&(this._lastUpdateFrameId=x.frameId,this.previousViewProjection.M(this.currentViewProjection)),B.setMatrix("previousWorld",this.previousWorldMatrices[C.uniqueId]),B.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[C.uniqueId]=M.clone()}}}},11573:(B,I,C)=>{C.d(I,{qI:()=>D});var M=C(11180),x=C(11186),y=C(11291),f=C(11440),L=C(11239),e=C(11270),g=C(11582),N=C(11445),R=C(11516),H=C(11586),F=C(11513),k=C(11171),q=C(11149),S=C(11589),o=C(11509),U=C(11593),G=C(11565),V=C(11559),c=C(11226),t=C(11609);const r={effect:null,subMesh:null};class A extends H.b{constructor(B){super(B),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(B){const I=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const C of I)this[C]=C===B}}class D extends F.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(B){this._attachImageProcessingConfiguration(B),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(B){B!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=B||this.rB().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(B){this.imageProcessingConfiguration.colorCurvesEnabled=B}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(B){this.imageProcessingConfiguration.colorGradingEnabled=B}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(B){this._imageProcessingConfiguration.toneMappingEnabled=B}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(B){this._imageProcessingConfiguration.exposure=B}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(B){this._imageProcessingConfiguration.contrast=B}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(B){this._imageProcessingConfiguration.colorGradingTexture=B}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(B){this._imageProcessingConfiguration.colorCurves=B}get canRenderToMRT(){return!0}constructor(B,I){super(B,I,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||D.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new L.SI(0,0,0),this.diffuseColor=new L.SI(1,1,1),this.specularColor=new L.SI(1,1,1),this.emissiveColor=new L.SI(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new y.f(16),this._globalAmbientColor=new L.SI(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new U.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new g.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"qI"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===R.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.if&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==R.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.if||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(B,I){let M=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const x=I._drawWrapper;if(x.effect&&this.isFrozen&&x._wasPreviouslyReady&&x._wasPreviouslyUsingInstances===M)return!0;I.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),I.materialDefines=new A(this._eventInfo.defineNames));const y=this.rB(),f=I.materialDefines;if(this._isReadyForSubMesh(I))return!0;const L=y.getEngine();f._needNormals=(0,V.L)(y,B,f,!0,this._maxSimultaneousLights,this._disableLighting),(0,V.T)(y,f);const R=this.needAlphaBlendingForMesh(B)&&this.rB().useOrderIndependentTransparency;if((0,V.X)(y,f,this.canRenderToMRT&&!R),(0,V.W)(y,f,R),t.e.PrepareDefines(L.currentRenderPassId,B,f),f._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,f._needUVs=!1;for(let B=1;B<=6;++B)f["MAINUV"+B]=!1;if(y.texturesEnabled){if(f.DIFFUSEDIRECTUV=0,f.BUMPDIRECTUV=0,f.AMBIENTDIRECTUV=0,f.OPACITYDIRECTUV=0,f.EMISSIVEDIRECTUV=0,f.SPECULARDIRECTUV=0,f.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&D.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._diffuseTexture,f,"DIFFUSE")}else f.DIFFUSE=!1;if(this._ambientTexture&&D.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._ambientTexture,f,"AMBIENT")}else f.AMBIENT=!1;if(this._opacityTexture&&D.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._opacityTexture,f,"OPACITY"),f.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else f.OPACITY=!1;if(this._reflectionTexture&&D.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(f._needNormals=!0,f.REFLECTION=!0,f.ROUGHNESS=this._roughness>0,f.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,f.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===k.c.INVCUBIC_MODE,f.REFLECTIONMAP_3D=this._reflectionTexture.isCube,f.REFLECTIONMAP_OPPOSITEZ=f.REFLECTIONMAP_3D&&this.rB().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,f.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case k.c.EXPLICIT_MODE:f.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case k.c.PLANAR_MODE:f.setReflectionMode("REFLECTIONMAP_PLANAR");break;case k.c.PROJECTION_MODE:f.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case k.c.SKYBOX_MODE:f.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case k.c.SPHERICAL_MODE:f.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case k.c.EQUIRECTANGULAR_MODE:f.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case k.c.FIXED_EQUIRECTANGULAR_MODE:f.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case k.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:f.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case k.c.CUBIC_MODE:case k.c.INVCUBIC_MODE:default:f.setReflectionMode("REFLECTIONMAP_CUBIC")}f.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else f.REFLECTION=!1,f.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&D.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._emissiveTexture,f,"EMISSIVE")}else f.EMISSIVE=!1;if(this._lightmapTexture&&D.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._lightmapTexture,f,"LIGHTMAP"),f.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,f.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else f.LIGHTMAP=!1;if(this._specularTexture&&D.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,V.N)(this._specularTexture,f,"SPECULAR"),f.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else f.SPECULAR=!1;if(y.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&D.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,V.N)(this._bumpTexture,f,"BUMP"),f.PARALLAX=this._useParallax,f.PARALLAX_RHS=y.useRightHandedSystem,f.PARALLAXOCCLUSION=this._useParallaxOcclusion,f.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else f.BUMP=!1,f.PARALLAX=!1,f.PARALLAX_RHS=!1,f.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&D.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;f._needUVs=!0,f.REFRACTION=!0,f.REFRACTIONMAP_3D=this._refractionTexture.isCube,f.RGBDREFRACTION=this._refractionTexture.isRGBD,f.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else f.REFRACTION=!1;f.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else f.DIFFUSE=!1,f.AMBIENT=!1,f.OPACITY=!1,f.REFLECTION=!1,f.EMISSIVE=!1,f.LIGHTMAP=!1,f.BUMP=!1,f.REFRACTION=!1;f.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),f.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,f.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,f.SPECULAROVERALPHA=this._useSpecularOverAlpha,f.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,f.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,f.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(B)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=f,this._eventInfo.subMesh=I,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(f._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(f),f.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,f.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(f._areFresnelDirty&&(D.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(f.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,f.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,f.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,f.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,f.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,f.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,f._needNormals=!0,f.FRESNEL=!0):f.FRESNEL=!1),f.AREALIGHTUSED)for(let C=0;C<B.lightSources.length;C++)if(!B.lightSources[C]._isReady())return!1;(0,V.P)(B,y,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(B),f,this._applyDecalMapAfterDetailMap),(0,V.J)(y,L,this,f,M,null,I.getRenderingMesh().hasThinInstances),this._eventInfo.defines=f,this._eventInfo.mesh=B,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,V.F)(B,f,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let H=!1;if(f.isDirty){const M=f._areLightsDisposed;f.markAsProcessed();const x=new o.b;f.REFLECTION&&x.addFallback(0,"REFLECTION"),f.SPECULAR&&x.addFallback(0,"SPECULAR"),f.BUMP&&x.addFallback(0,"BUMP"),f.PARALLAX&&x.addFallback(1,"PARALLAX"),f.PARALLAX_RHS&&x.addFallback(1,"PARALLAX_RHS"),f.PARALLAXOCCLUSION&&x.addFallback(0,"PARALLAXOCCLUSION"),f.SPECULAROVERALPHA&&x.addFallback(0,"SPECULAROVERALPHA"),f.FOG&&x.addFallback(1,"FOG"),f.POINTSIZE&&x.addFallback(0,"POINTSIZE"),f.LOGARITHMICDEPTH&&x.addFallback(0,"LOGARITHMICDEPTH"),(0,V.p)(f,x,this._maxSimultaneousLights),f.SPECULARTERM&&x.addFallback(0,"SPECULARTERM"),f.DIFFUSEFRESNEL&&x.addFallback(1,"DIFFUSEFRESNEL"),f.OPACITYFRESNEL&&x.addFallback(2,"OPACITYFRESNEL"),f.REFLECTIONFRESNEL&&x.addFallback(3,"REFLECTIONFRESNEL"),f.EMISSIVEFRESNEL&&x.addFallback(4,"EMISSIVEFRESNEL"),f.FRESNEL&&x.addFallback(4,"FRESNEL"),f.MULTIVIEW&&x.addFallback(0,"MULTIVIEW");const R=[e.g.PositionKind];f.NORMAL&&R.push(e.g.NormalKind),f.TANGENT&&R.push(e.g.TangentKind);for(let B=1;B<=6;++B)f["UV"+B]&&R.push(`uv${1===B?"":B}`);f.VERTEXCOLOR&&R.push(e.g.ColorKind),(0,V.v)(R,B,f,x),(0,V.x)(R,f),(0,V.y)(R,B,f),(0,V.r)(R,B,f);let F="default";const k=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],q=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],S=["Material","Scene","Mesh"],U={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:f.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=x,this._eventInfo.fallbackRank=0,this._eventInfo.defines=f,this._eventInfo.uniforms=k,this._eventInfo.attributes=R,this._eventInfo.samplers=q,this._eventInfo.uniformBuffersNames=S,this._eventInfo.customCode=void 0,this._eventInfo.mesh=B,this._eventInfo.indexParameters=U,this._callbackPluginEventGeneric(128,this._eventInfo),t.e.AddUniformsAndSamplers(k,q),g.b.AddUniforms(k),g.b.AddSamplers(q),N.c&&(N.c.PrepareUniforms(k,f),N.c.PrepareSamplers(q,f)),(0,V._)({uniformsNames:k,uniformBuffersNames:S,samplers:q,defines:f,maxSimultaneousLights:this._maxSimultaneousLights}),(0,G.e)(k);const c={};this.customShaderNameResolve&&(F=this.customShaderNameResolve(F,k,S,q,f,R,c));const A=f.toString(),D=I.effect;let J=y.getEngine().createEffect(F,{attributes:R,uniformsNames:k,uniformBuffersNames:S,samplers:q,defines:A,fallbacks:x,onCompiled:this.onCompiled,onError:this.onError,indexParameters:U,processFinalCode:c.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:f.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([C.e(41),C.e(64)]).then(C.bind(C,13731)),Promise.all([C.e(39),C.e(65)]).then(C.bind(C,13854))]):await Promise.all([Promise.all([C.e(34),C.e(67)]).then(C.bind(C,13928)),Promise.all([C.e(33),C.e(68)]).then(C.bind(C,14091))]),this._shadersLoaded=!0}},L);if(this._eventInfo.customCode=void 0,J)if(this._onEffectCreatedObservable&&(r.effect=J,r.subMesh=I,this._onEffectCreatedObservable.notifyObservers(r)),this.allowShaderHotSwapping&&D&&!J.isReady()){if(J=D,f.markAsUnprocessed(),H=this.isFrozen,M)return f._areLightsDisposed=!0,!1}else y.resetCachedMaterial(),I.setEffect(J,f,this._materialContext)}return!(!I.effect||!I.effect.isReady())&&(f._renderId=y.getRenderId(),x._wasPreviouslyReady=!H,x._wasPreviouslyUsingInstances=M,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const B=this._uniformBuffer;B.addUniform("diffuseLeftColor",4),B.addUniform("diffuseRightColor",4),B.addUniform("opacityParts",4),B.addUniform("reflectionLeftColor",4),B.addUniform("reflectionRightColor",4),B.addUniform("refractionLeftColor",4),B.addUniform("refractionRightColor",4),B.addUniform("emissiveLeftColor",4),B.addUniform("emissiveRightColor",4),B.addUniform("vDiffuseInfos",2),B.addUniform("vAmbientInfos",2),B.addUniform("vOpacityInfos",2),B.addUniform("vReflectionInfos",2),B.addUniform("vReflectionPosition",3),B.addUniform("vReflectionSize",3),B.addUniform("vEmissiveInfos",2),B.addUniform("vLightmapInfos",2),B.addUniform("vSpecularInfos",2),B.addUniform("vBumpInfos",3),B.addUniform("diffuseMatrix",16),B.addUniform("ambientMatrix",16),B.addUniform("opacityMatrix",16),B.addUniform("reflectionMatrix",16),B.addUniform("emissiveMatrix",16),B.addUniform("lightmapMatrix",16),B.addUniform("specularMatrix",16),B.addUniform("bumpMatrix",16),B.addUniform("vTangentSpaceParams",2),B.addUniform("pointSize",1),B.addUniform("alphaCutOff",1),B.addUniform("refractionMatrix",16),B.addUniform("vRefractionInfos",4),B.addUniform("vRefractionPosition",3),B.addUniform("vRefractionSize",3),B.addUniform("vSpecularColor",4),B.addUniform("vEmissiveColor",3),B.addUniform("vDiffuseColor",4),B.addUniform("vAmbientColor",3),B.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(B,I,C){const M=this.rB(),x=C.materialDefines;if(!x)return;const y=C.effect;if(!y)return;this._activeEffect=y,I.getMeshUniformBuffer().bindToEffect(y,"Mesh"),I.transferToEffect(B),this._uniformBuffer.bindToEffect(y,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,M,I,B,this.isFrozen),t.e.Bind(M.getEngine().currentRenderPassId,this._activeEffect,I,B,this);const e=M.activeCamera;e?this._uniformBuffer.updateFloat4("cameraInfo",e.uf,e.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=C,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),x.OBJECTSPACE_NORMALMAP&&(B.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const g=this._mustRebind(M,y,C,I.visibility);(0,V.d)(I,y);const N=this._uniformBuffer;if(g){if(this.bindViewProjection(y),!N.useUbo||!this.isFrozen||!N.isSync||C._drawWrapper._forceRebindOnNextCall){if(D.FresnelEnabled&&x.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(N.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),N.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&N.updateColor4("opacityParts",new L.SI(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(N.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),N.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(N.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),N.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(N.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),N.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),M.texturesEnabled){if(this._diffuseTexture&&D.DiffuseTextureEnabled&&(N.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,V.o)(this._diffuseTexture,N,"diffuse")),this._ambientTexture&&D.AmbientTextureEnabled&&(N.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,V.o)(this._ambientTexture,N,"ambient")),this._opacityTexture&&D.OpacityTextureEnabled&&(N.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,V.o)(this._opacityTexture,N,"opacity")),this._hasAlphaChannel()&&N.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&D.ReflectionTextureEnabled){if(N.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),N.pf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const B=this._reflectionTexture;N.updateVector3("vReflectionPosition",B.boundingBoxPosition),N.updateVector3("vReflectionSize",B.boundingBoxSize)}}else N.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&D.EmissiveTextureEnabled&&(N.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,V.o)(this._emissiveTexture,N,"emissive")),this._lightmapTexture&&D.LightmapTextureEnabled&&(N.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,V.o)(this._lightmapTexture,N,"lightmap")),this._specularTexture&&D.SpecularTextureEnabled&&(N.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,V.o)(this._specularTexture,N,"specular")),this._bumpTexture&&M.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&(N.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,V.o)(this._bumpTexture,N,"bump"),M._mirroredCameraPosition?N.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):N.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&D.RefractionTextureEnabled){let B=1;if(this._refractionTexture.isCube||(N.pf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(B=this._refractionTexture.depth)),N.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,B,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const B=this._refractionTexture;N.updateVector3("vRefractionPosition",B.boundingBoxPosition),N.updateVector3("vRefractionSize",B.boundingBoxSize)}}}this.pointsCloud&&N.updateFloat("pointSize",this.pointSize),N.updateColor4("vSpecularColor",this.specularColor,this.specularPower),N.updateColor3("vEmissiveColor",D.EmissiveTextureEnabled?this.emissiveColor:L.SI.BlackReadOnly),N.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),M.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),N.updateColor3("vAmbientColor",this._globalAmbientColor)}M.texturesEnabled&&(this._diffuseTexture&&D.DiffuseTextureEnabled&&y.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&D.AmbientTextureEnabled&&y.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&D.OpacityTextureEnabled&&y.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&D.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?y.setTexture("reflectionCubeSampler",this._reflectionTexture):y.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&D.EmissiveTextureEnabled&&y.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&D.LightmapTextureEnabled&&y.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&D.SpecularTextureEnabled&&y.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&M.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&y.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&D.RefractionTextureEnabled&&(this._refractionTexture.isCube?y.setTexture("refractionCubeSampler",this._refractionTexture):y.setTexture("refraction2DSampler",this._refractionTexture))),this.rB().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(I)&&this.rB().depthPeelingRenderer.bind(y),this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,G.f)(y,this,M),this.bindEyePosition(y)}else M.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(g||!this.isFrozen){var R;if(M.lightsEnabled&&!this._disableLighting&&(0,V.g)(M,I,y,x,this._maxSimultaneousLights),(M.fogEnabled&&I.applyFog&&M.fogMode!==f.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||I.receiveShadows||x.PREPASS)&&this.bindView(y),(0,V.e)(M,I,y),x.NUM_MORPH_INFLUENCERS&&(0,V.i)(I,y),x.BAKED_VERTEX_ANIMATION_TEXTURE)null===(R=I.bakedVertexAnimationManager)||void 0===R||R.bind(y,x.INSTANCES);this.useLogarithmicDepth&&(0,V.h)(x,y,M),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(I,this._activeEffect,C),N.update()}getAnimatables(){const B=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&B.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&B.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&B.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&B.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&B.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&B.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&B.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&B.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&B.push(this._refractionTexture),B}getActiveTextures(){const B=super.getActiveTextures();return this._diffuseTexture&&B.push(this._diffuseTexture),this._ambientTexture&&B.push(this._ambientTexture),this._opacityTexture&&B.push(this._opacityTexture),this._reflectionTexture&&B.push(this._reflectionTexture),this._emissiveTexture&&B.push(this._emissiveTexture),this._specularTexture&&B.push(this._specularTexture),this._bumpTexture&&B.push(this._bumpTexture),this._lightmapTexture&&B.push(this._lightmapTexture),this._refractionTexture&&B.push(this._refractionTexture),B}hasTexture(B){return!!super.hasTexture(B)||(this._diffuseTexture===B||(this._ambientTexture===B||(this._opacityTexture===B||(this._reflectionTexture===B||(this._emissiveTexture===B||(this._specularTexture===B||(this._bumpTexture===B||(this._lightmapTexture===B||this._refractionTexture===B))))))))}dispose(B,I){var C,M,x,y,f,L,e,g,N;I&&(null===(C=this._diffuseTexture)||void 0===C||C.dispose(),null===(M=this._ambientTexture)||void 0===M||M.dispose(),null===(x=this._opacityTexture)||void 0===x||x.dispose(),null===(y=this._reflectionTexture)||void 0===y||y.dispose(),null===(f=this._emissiveTexture)||void 0===f||f.dispose(),null===(L=this._specularTexture)||void 0===L||L.dispose(),null===(e=this._bumpTexture)||void 0===e||e.dispose(),null===(g=this._lightmapTexture)||void 0===g||g.dispose(),null===(N=this._refractionTexture)||void 0===N||N.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(B,I)}clone(B){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const M=c.d.Clone((()=>new D(B,this.rB())),this,{cloneTexturesOnlyOnce:I});return M.name=B,M.id=B,this.stencil.copyTo(M.stencil),this._clonePlugins(M,C),M}static Parse(B,I,C){const M=c.d.Parse((()=>new D(B.name,I)),B,I,C);return B.stencil&&M.stencil.parse(B.stencil,I,C),R.c._ParsePlugins(B,M,I,C),M}static get DiffuseTextureEnabled(){return S.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(B){S.b.DiffuseTextureEnabled=B}static get DetailTextureEnabled(){return S.b.DetailTextureEnabled}static set DetailTextureEnabled(B){S.b.DetailTextureEnabled=B}static get AmbientTextureEnabled(){return S.b.AmbientTextureEnabled}static set AmbientTextureEnabled(B){S.b.AmbientTextureEnabled=B}static get OpacityTextureEnabled(){return S.b.OpacityTextureEnabled}static set OpacityTextureEnabled(B){S.b.OpacityTextureEnabled=B}static get ReflectionTextureEnabled(){return S.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(B){S.b.ReflectionTextureEnabled=B}static get EmissiveTextureEnabled(){return S.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(B){S.b.EmissiveTextureEnabled=B}static get SpecularTextureEnabled(){return S.b.SpecularTextureEnabled}static set SpecularTextureEnabled(B){S.b.SpecularTextureEnabled=B}static get BumpTextureEnabled(){return S.b.BumpTextureEnabled}static set BumpTextureEnabled(B){S.b.BumpTextureEnabled=B}static get LightmapTextureEnabled(){return S.b.LightmapTextureEnabled}static set LightmapTextureEnabled(B){S.b.LightmapTextureEnabled=B}static get RefractionTextureEnabled(){return S.b.RefractionTextureEnabled}static set RefractionTextureEnabled(B){S.b.RefractionTextureEnabled=B}static get ColorGradingTextureEnabled(){return S.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(B){S.b.ColorGradingTextureEnabled=B}static get FresnelEnabled(){return S.b.FresnelEnabled}static set FresnelEnabled(B){S.b.FresnelEnabled=B}}D.ForceGLSL=!1,(0,M.e)([(0,x.B)("diffuseTexture")],D.prototype,"_diffuseTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"diffuseTexture",void 0),(0,M.e)([(0,x.B)("ambientTexture")],D.prototype,"_ambientTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"ambientTexture",void 0),(0,M.e)([(0,x.B)("opacityTexture")],D.prototype,"_opacityTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"opacityTexture",void 0),(0,M.e)([(0,x.B)("reflectionTexture")],D.prototype,"_reflectionTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"reflectionTexture",void 0),(0,M.e)([(0,x.B)("emissiveTexture")],D.prototype,"_emissiveTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"emissiveTexture",void 0),(0,M.e)([(0,x.B)("specularTexture")],D.prototype,"_specularTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"specularTexture",void 0),(0,M.e)([(0,x.B)("bumpTexture")],D.prototype,"_bumpTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"bumpTexture",void 0),(0,M.e)([(0,x.B)("lightmapTexture")],D.prototype,"_lightmapTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"lightmapTexture",void 0),(0,M.e)([(0,x.B)("refractionTexture")],D.prototype,"_refractionTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"refractionTexture",void 0),(0,M.e)([(0,x.m)("ambient")],D.prototype,"ambientColor",void 0),(0,M.e)([(0,x.m)("diffuse")],D.prototype,"diffuseColor",void 0),(0,M.e)([(0,x.m)("specular")],D.prototype,"specularColor",void 0),(0,M.e)([(0,x.m)("emissive")],D.prototype,"emissiveColor",void 0),(0,M.e)([(0,x.K)()],D.prototype,"specularPower",void 0),(0,M.e)([(0,x.K)("useAlphaFromDiffuseTexture")],D.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"useAlphaFromDiffuseTexture",void 0),(0,M.e)([(0,x.K)("useEmissiveAsIllumination")],D.prototype,"_useEmissiveAsIllumination",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useEmissiveAsIllumination",void 0),(0,M.e)([(0,x.K)("linkEmissiveWithDiffuse")],D.prototype,"_linkEmissiveWithDiffuse",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"linkEmissiveWithDiffuse",void 0),(0,M.e)([(0,x.K)("useSpecularOverAlpha")],D.prototype,"_useSpecularOverAlpha",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useSpecularOverAlpha",void 0),(0,M.e)([(0,x.K)("useReflectionOverAlpha")],D.prototype,"_useReflectionOverAlpha",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useReflectionOverAlpha",void 0),(0,M.e)([(0,x.K)("disableLighting")],D.prototype,"_disableLighting",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsLightsDirty")],D.prototype,"disableLighting",void 0),(0,M.e)([(0,x.K)("useObjectSpaceNormalMap")],D.prototype,"_useObjectSpaceNormalMap",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useObjectSpaceNormalMap",void 0),(0,M.e)([(0,x.K)("useParallax")],D.prototype,"_useParallax",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallax",void 0),(0,M.e)([(0,x.K)("useParallaxOcclusion")],D.prototype,"_useParallaxOcclusion",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallaxOcclusion",void 0),(0,M.e)([(0,x.K)()],D.prototype,"parallaxScaleBias",void 0),(0,M.e)([(0,x.K)("roughness")],D.prototype,"_roughness",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"roughness",void 0),(0,M.e)([(0,x.K)()],D.prototype,"indexOfRefraction",void 0),(0,M.e)([(0,x.K)()],D.prototype,"invertRefractionY",void 0),(0,M.e)([(0,x.K)()],D.prototype,"alphaCutOff",void 0),(0,M.e)([(0,x.K)("useLightmapAsShadowmap")],D.prototype,"_useLightmapAsShadowmap",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useLightmapAsShadowmap",void 0),(0,M.e)([(0,x.r)("diffuseFresnelParameters")],D.prototype,"_diffuseFresnelParameters",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"diffuseFresnelParameters",void 0),(0,M.e)([(0,x.r)("opacityFresnelParameters")],D.prototype,"_opacityFresnelParameters",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],D.prototype,"opacityFresnelParameters",void 0),(0,M.e)([(0,x.r)("reflectionFresnelParameters")],D.prototype,"_reflectionFresnelParameters",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"reflectionFresnelParameters",void 0),(0,M.e)([(0,x.r)("refractionFresnelParameters")],D.prototype,"_refractionFresnelParameters",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"refractionFresnelParameters",void 0),(0,M.e)([(0,x.r)("emissiveFresnelParameters")],D.prototype,"_emissiveFresnelParameters",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"emissiveFresnelParameters",void 0),(0,M.e)([(0,x.K)("useReflectionFresnelFromSpecular")],D.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"useReflectionFresnelFromSpecular",void 0),(0,M.e)([(0,x.K)("useGlossinessFromSpecularMapAlpha")],D.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,M.e)([(0,x.K)("maxSimultaneousLights")],D.prototype,"_maxSimultaneousLights",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsLightsDirty")],D.prototype,"maxSimultaneousLights",void 0),(0,M.e)([(0,x.K)("invertNormalMapX")],D.prototype,"_invertNormalMapX",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapX",void 0),(0,M.e)([(0,x.K)("invertNormalMapY")],D.prototype,"_invertNormalMapY",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapY",void 0),(0,M.e)([(0,x.K)("twoSidedLighting")],D.prototype,"_twoSidedLighting",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"twoSidedLighting",void 0),(0,M.e)([(0,x.K)("applyDecalMapAfterDetailMap")],D.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,M.e)([(0,x.c)("_markAllSubMeshesAsMiscDirty")],D.prototype,"applyDecalMapAfterDetailMap",void 0),(0,q.h)("BABYLON.StandardMaterial",D),f.b.DefaultMaterialFactory=B=>new D("default material",B)}}]);