"use strict";(self.lfntwv94xlc=self.lfntwv94xlc||[]).push([[25],{11697:(m,S,h)=>{h.d(S,{d:()=>I});var l=h(11327),M=h(11629),O=h(11336),u=h(11691),b=h(11682),q=h(11700),Y=h(11663);class V extends b.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class I extends q.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(m){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(m,"DetailMap",140,new V,S),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=M.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=m._dirtyCallbacks[1]}isReadyForSubMesh(m,S,h){return!this._isEnabled||!(m._areTexturesDirty&&S.texturesEnabled&&h.getCaps().standardDerivatives&&this._texture&&u.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(m,S){if(this._isEnabled){m.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const h=S.getEngine();m._areTexturesDirty&&(h.getCaps().standardDerivatives&&this._texture&&u.b.DetailTextureEnabled&&this._isEnabled?((0,Y.V)(this._texture,m,"DETAIL"),m.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):m.DETAIL=!1)}else m.DETAIL=!1}bindForSubMesh(m,S){if(!this._isEnabled)return;const h=this._material.isFrozen;m.useUbo&&h&&m.isSync||this._texture&&u.b.DetailTextureEnabled&&(m.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,Y.r)(this._texture,m,"detail")),S.texturesEnabled&&this._texture&&u.b.DetailTextureEnabled&&m.setTexture("detailSampler",this._texture)}hasTexture(m){return this._texture===m}getActiveTextures(m){this._texture&&m.push(this._texture)}getAnimatables(m){this._texture&&this._texture.animations&&this._texture.animations.length>0&&m.push(this._texture)}dispose(m){var S;m&&(null===(S=this._texture)||void 0===S||S.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(m){m.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,l.d)([(0,O.w)("detailTexture"),(0,O.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"texture",void 0),(0,l.d)([(0,O.F)()],I.prototype,"diffuseBlendLevel",void 0),(0,l.d)([(0,O.F)()],I.prototype,"roughnessBlendLevel",void 0),(0,l.d)([(0,O.F)()],I.prototype,"bumpLevel",void 0),(0,l.d)([(0,O.F)(),(0,O.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"normalBlendMethod",void 0),(0,l.d)([(0,O.F)(),(0,O.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"isEnabled",void 0)},11682:(m,S,h)=>{h.d(S,{b:()=>l});class l{constructor(m){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=m,m)for(const S in m)Object.prototype.hasOwnProperty.call(m,S)&&this._setDefaultValue(S)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let m=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||m,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const m of Object.keys(this))"_"!==m[0]&&this._keys.push(m);if(this._externalProperties)for(const m in this._externalProperties)-1===this._keys.indexOf(m)&&this._keys.push(m)}isEqual(m){if(this._keys.length!==m._keys.length)return!1;for(let S=0;S<this._keys.length;S++){const h=this._keys[S];if(this[h]!==m[h])return!1}return!0}cloneTo(m){this._keys.length!==m._keys.length&&(m._keys=this._keys.slice(0));for(let S=0;S<this._keys.length;S++){const h=this._keys[S];m[h]=this[h]}}reset(){for(const m of this._keys)this._setDefaultValue(m)}_setDefaultValue(m){var S,h,l,M;const O=(null===(S=this._externalProperties)||void 0===S||null===(h=S[m])||void 0===h?void 0:h.type)??typeof this[m],u=null===(l=this._externalProperties)||void 0===l||null===(M=l[m])||void 0===M?void 0:M.default;switch(O){case"number":this[m]=u??0;break;case"string":this[m]=u??"";break;default:this[m]=u??!1}}toString(){let m="";for(let S=0;S<this._keys.length;S++){const h=this._keys[S],l=this[h];switch(typeof l){case"number":case"string":m+="#define "+h+" "+l+"\n";break;default:l&&(m+="#define "+h+"\n")}}return m}}},11691:(m,S,h)=>{h.d(S,{b:()=>M});var l=h(11229);class M{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(m){this._DiffuseTextureEnabled!==m&&(this._DiffuseTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(m){this._BaseWeightTextureEnabled!==m&&(this._BaseWeightTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(m){this._BaseDiffuseRoughnessTextureEnabled!==m&&(this._BaseDiffuseRoughnessTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(m){this._DetailTextureEnabled!==m&&(this._DetailTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(m){this._DecalMapEnabled!==m&&(this._DecalMapEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(m){this._AmbientTextureEnabled!==m&&(this._AmbientTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(m){this._OpacityTextureEnabled!==m&&(this._OpacityTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(m){this._ReflectionTextureEnabled!==m&&(this._ReflectionTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(m){this._EmissiveTextureEnabled!==m&&(this._EmissiveTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(m){this._SpecularTextureEnabled!==m&&(this._SpecularTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(m){this._BumpTextureEnabled!==m&&(this._BumpTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(m){this._LightmapTextureEnabled!==m&&(this._LightmapTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(m){this._RefractionTextureEnabled!==m&&(this._RefractionTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(m){this._ColorGradingTextureEnabled!==m&&(this._ColorGradingTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(m){this._FresnelEnabled!==m&&(this._FresnelEnabled=m,l.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(m){this._ClearCoatTextureEnabled!==m&&(this._ClearCoatTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(m){this._ClearCoatBumpTextureEnabled!==m&&(this._ClearCoatBumpTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(m){this._ClearCoatTintTextureEnabled!==m&&(this._ClearCoatTintTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(m){this._SheenTextureEnabled!==m&&(this._SheenTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(m){this._AnisotropicTextureEnabled!==m&&(this._AnisotropicTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(m){this._ThicknessTextureEnabled!==m&&(this._ThicknessTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(m){this._RefractionIntensityTextureEnabled!==m&&(this._RefractionIntensityTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(m){this._TranslucencyIntensityTextureEnabled!==m&&(this._TranslucencyIntensityTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(m){this._TranslucencyColorTextureEnabled!==m&&(this._TranslucencyColorTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(m){this._IridescenceTextureEnabled!==m&&(this._IridescenceTextureEnabled=m,l.b.MarkAllMaterialsAsDirty(1))}}M._DiffuseTextureEnabled=!0,M._BaseWeightTextureEnabled=!0,M._BaseDiffuseRoughnessTextureEnabled=!0,M._DetailTextureEnabled=!0,M._DecalMapEnabled=!0,M._AmbientTextureEnabled=!0,M._OpacityTextureEnabled=!0,M._ReflectionTextureEnabled=!0,M._EmissiveTextureEnabled=!0,M._SpecularTextureEnabled=!0,M._BumpTextureEnabled=!0,M._LightmapTextureEnabled=!0,M._RefractionTextureEnabled=!0,M._ColorGradingTextureEnabled=!0,M._FresnelEnabled=!0,M._ClearCoatTextureEnabled=!0,M._ClearCoatBumpTextureEnabled=!0,M._ClearCoatTintTextureEnabled=!0,M._SheenTextureEnabled=!0,M._AnisotropicTextureEnabled=!0,M._ThicknessTextureEnabled=!0,M._RefractionIntensityTextureEnabled=!0,M._TranslucencyIntensityTextureEnabled=!0,M._TranslucencyColorTextureEnabled=!0,M._IridescenceTextureEnabled=!0},11708:(m,S,h)=>{h.d(S,{b:()=>O});var l,M=h(11347);!function(m){m[m.Zero=0]="Zero",m[m.One=1]="One",m[m.MaxViewZ=2]="MaxViewZ"}(l||(l={}));class O{static CreateConfiguration(m){return O._Configurations[m]={defines:{},previousWorldMatrices:{},previousViewProjection:M.Matrix.Zero(),currentViewProjection:M.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},O._Configurations[m]}static DeleteConfiguration(m){delete O._Configurations[m]}static GetConfiguration(m){return O._Configurations[m]}static AddUniformsAndSamplers(m,S){m.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(m,S){for(const h of S)if(h.CM)for(const S of h.CM)S._removeDrawWrapper(m)}static PrepareDefines(m,S,h){if(!h._arePrePassDirty)return;const l=O._Configurations[m];if(!l)return;h.PREPASS=!0,h.PREPASS_COLOR=!1,h.PREPASS_COLOR_INDEX=-1;let M=0;for(let u=0;u<O.GeometryTextureDescriptions.length;u++){const m=O.GeometryTextureDescriptions[u],S=m.define,b=m.defineIndex,q=l.defines[b];void 0!==q?(h[S]=!0,h[b]=q,M++):(h[S]=!1,delete h[b])}h.SCENE_MRT_COUNT=M,h.BONES_VELOCITY_ENABLED=S.useBones&&S.computeBonesUsingShaders&&S.skeleton&&!S.skeleton.isUsingTextureForMatrices&&-1===l.excludedSkinnedMesh.indexOf(S)}static Bind(m,S,h,l,M){const u=O._Configurations[m];if(!u)return;const b=h.sm(),q=b.getEngine();if(u.reverseCulling&&q.setStateCullFaceType(b._mirroredCameraPosition?M.cullBackFaces:!M.cullBackFaces),(void 0!==u.defines.PREPASS_VELOCITY_INDEX||void 0!==u.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(u.previousWorldMatrices[h.uniqueId]||(u.previousWorldMatrices[h.uniqueId]=l.clone()),u.previousViewProjection||(u.previousViewProjection=b.getTransformMatrix().clone(),u.currentViewProjection=b.getTransformMatrix().clone()),u.currentViewProjection.updateFlag!==b.getTransformMatrix().updateFlag?(u.lastUpdateFrameId=q.frameId,u.previousViewProjection.l(u.currentViewProjection),u.currentViewProjection.l(b.getTransformMatrix())):u.lastUpdateFrameId!==q.frameId&&(u.lastUpdateFrameId=q.frameId,u.previousViewProjection.l(u.currentViewProjection)),S.setMatrix("previousWorld",u.previousWorldMatrices[h.uniqueId]),S.setMatrix("previousViewProjection",u.previousViewProjection),u.previousWorldMatrices[h.uniqueId]=l.clone(),h.useBones&&h.computeBonesUsingShaders&&h.skeleton)){const m=h.skeleton;if(!m.isUsingTextureForMatrices||-1===S.getUniformIndex("boneTextureWidth")){const l=m.getTransformMatrices(h);l&&(u.previousBones[h.uniqueId]||(u.previousBones[h.uniqueId]=l.slice()),S.setMatrices("mPreviousBones",u.previousBones[h.uniqueId]),u.previousBones[h.uniqueId].set(l))}}}}O.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],O._Configurations={}},11700:(m,S,h)=>{h.d(S,{d:()=>n});var l=h(11327),M=h(11336),O=h(11629),u=h(11196),b=h(11221),q=h(11242);const Y=new RegExp("^([gimus]+)!");class V{constructor(m){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=m,this._scene=m.sm(),this._engine=this._scene.getEngine()}_addPlugin(m){for(let l=0;l<this._plugins.length;++l)if(this._plugins[l].name===m.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!m.isCompatible(this._material.shaderLanguage))throw`The plugin "${m.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const S=m.getClassName();V._MaterialPluginClassToMainDefine[S]||(V._MaterialPluginClassToMainDefine[S]="MATERIALPLUGIN_"+ ++V._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(m,S)=>this._handlePluginEvent(m,S),this._plugins.push(m),this._plugins.sort(((m,S)=>m.priority-S.priority)),this._codeInjectionPoints={};const h={};h[V._MaterialPluginClassToMainDefine[S]]={type:"boolean",default:!0};for(const l of this._plugins)l.collectDefines(h),this._collectPointNames("vertex",l.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",l.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=h,!0}_activatePlugin(m){-1===this._activePlugins.indexOf(m)&&(this._activePlugins.push(m),this._activePlugins.sort(((m,S)=>m.priority-S.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),m.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(m),this._activePluginsForExtraEvents.sort(((m,S)=>m.priority-S.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(m){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===m)return this._plugins[S];return null}_handlePluginEventIsReadyForSubMesh(m){let S=!0;for(const h of this._activePlugins)S=S&&h.isReadyForSubMesh(m.defines,this._scene,this._engine,m.subMesh);m.isReadyForSubMesh=S}_handlePluginEventPrepareDefinesBeforeAttributes(m){for(const S of this._activePlugins)S.prepareDefinesBeforeAttributes(m.defines,this._scene,m.mesh)}_handlePluginEventPrepareDefines(m){for(const S of this._activePlugins)S.prepareDefines(m.defines,this._scene,m.mesh)}_handlePluginEventHardBindForSubMesh(m){for(const S of this._activePluginsForExtraEvents)S.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,m.subMesh)}_handlePluginEventBindForSubMesh(m){for(const S of this._activePlugins)S.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,m.subMesh)}_handlePluginEventHasRenderTargetTextures(m){let S=!1;for(const h of this._activePluginsForExtraEvents)if(S=h.hasRenderTargetTextures(),S)break;m.hasRenderTargetTextures=S}_handlePluginEventFillRenderTargetTextures(m){for(const S of this._activePluginsForExtraEvents)S.fillRenderTargetTextures(m.renderTargets)}_handlePluginEvent(m,S){switch(m){case 512:{const m=S;for(const S of this._activePlugins)S.getActiveTextures(m.activeTextures);break}case 256:{const m=S;for(const S of this._activePlugins)S.getAnimatables(m.animatables);break}case 1024:{const m=S;let h=!1;for(const S of this._activePlugins)if(h=S.hasTexture(m.texture),h)break;m.hasTexture=h;break}case 2:{const m=S;for(const S of this._plugins)S.dispose(m.forceDisposeTextures);break}case 4:S.defineNames=this._defineNamesFromPlugins;break;case 128:{const m=S;for(const S of this._activePlugins)m.fallbackRank=S.addFallbacks(m.defines,m.fallbacks,m.fallbackRank),S.getAttributes(m.attributes,this._scene,m.mesh);this._uniformList.length>0&&m.uniforms.push(...this._uniformList),this._samplerList.length>0&&m.samplers.push(...this._samplerList),this._uboList.length>0&&m.uniformBuffersNames.push(...this._uboList),m.customCode=this._injectCustomCode(m,m.customCode);break}case 8:{const m=S;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const h=1===this._material.shaderLanguage;for(const S of this._plugins){const l=S.getUniforms(this._material.shaderLanguage);if(l){if(l.ubo)for(const S of l.ubo){if(S.size&&S.type){const l=S.arraySize??0;if(m.ubo.addUniform(S.name,S.size,l),h){let m;switch(S.type){case"mat4":m="mat4x4f";break;case"float":m="f32";break;default:m=`${S.type}f`}this._uboDeclaration+=l>0?`uniform ${S.name}: array<${m}, ${l}>;\n`:`uniform ${S.name}: ${m};\n`}else this._uboDeclaration+=`${S.type} ${S.name}${l>0?`[${l}]`:""};\n`}this._uniformList.push(S.name)}l.vertex&&(this._vertexDeclaration+=l.vertex+"\n"),l.fragment&&(this._fragmentDeclaration+=l.fragment+"\n")}S.getSamplers(this._samplerList),S.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(m,S){if(S)for(const h in S)this._codeInjectionPoints[m]||(this._codeInjectionPoints[m]={}),this._codeInjectionPoints[m][h]=!0}_injectCustomCode(m,S){return(h,l)=>{var M;S&&(l=S(h,l)),this._uboDeclaration&&(l=l.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(l=l.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(l=l.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const O=null===(M=this._codeInjectionPoints)||void 0===M?void 0:M[h];if(!O)return l;let u=null;for(let S in O){let M="";for(const l of this._activePlugins){var V;let O=null===(V=l.getCustomCode(h,this._material.shaderLanguage))||void 0===V?void 0:V[S];if(O){if(l.resolveIncludes){if(null===u){const S=0;u={defines:[],indexParameters:m.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:q.b.GetShadersRepository(S),includesShadersStore:q.b.GetIncludesShadersStore(S),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}u.isFragment="fragment"===h,(0,b.i)(O,u,(m=>O=m))}M+=O+"\n"}}if(M.length>0)if("!"===S.charAt(0)){S=S.substring(1);let m="g";if("!"===S.charAt(0))m="",S=S.substring(1);else{const h=Y.exec(S);h&&h.length>=2&&(m=h[1],S=S.substring(m.length+1))}m.indexOf("g")<0&&(m+="g");const h=l,O=new RegExp(S,m);let u=O.exec(h);for(;null!==u;){let m=M;for(let S=0;S<u.length;++S)m=m.replace("$"+S,u[S]);l=l.replace(u[0],m),u=O.exec(h)}}else{const m="#define "+S;l=l.replace(m,"\n"+M+"\n"+m)}}return l}}}V._MaterialPluginClassToMainDefine={},V._MaterialPluginCounter=0,u.d.OnEnginesDisposedObservable.add((()=>{B()}));const I=[];let Z=!1,C=null;function B(){I.length=0,Z=!1,O.e.OnEventObservable.remove(C),C=null}var D=h(11377),E=h(11293);class n{isCompatible(m){return 0===m}_enable(m){m&&this._pluginManager._activatePlugin(this)}constructor(m,S,h,l){let M=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=m,this.name=S,this.priority=h,this.resolveIncludes=u,m.pluginManager||(m.pluginManager=new V(m),m.Jh.add((()=>{m.pluginManager=void 0}))),this._pluginDefineNames=l,this._pluginManager=m.pluginManager,M&&this._pluginManager._addPlugin(this),O&&this._enable(!0),this.markAllDefinesAsDirty=m._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(m,S,h,l){return!0}hardBindForSubMesh(m,S,h,l){}bindForSubMesh(m,S,h,l){}dispose(m){}getCustomCode(m){return null}collectDefines(m){if(this._pluginDefineNames)for(const S of Object.keys(this._pluginDefineNames)){if("_"===S[0])continue;const h=typeof this._pluginDefineNames[S];m[S]={type:"number"===h?"number":"string"===h?"string":"boolean"===h?"boolean":"object",default:this._pluginDefineNames[S]}}}prepareDefinesBeforeAttributes(m,S,h){}prepareDefines(m,S,h){}hasTexture(m){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(m){}getActiveTextures(m){}getAnimatables(m){}addFallbacks(m,S,h){return h}getSamplers(m){}getAttributes(m,S,h){}getUniformBuffersNames(m){}getUniforms(){return{}}copyTo(m){D.e.Clone((()=>m),this)}serialize(){return D.e.Serialize(this)}parse(m,S,h){D.e.Parse((()=>this),m,S,h)}}(0,l.d)([(0,M.F)()],n.prototype,"name",void 0),(0,l.d)([(0,M.F)()],n.prototype,"priority",void 0),(0,l.d)([(0,M.F)()],n.prototype,"resolveIncludes",void 0),(0,l.d)([(0,M.F)()],n.prototype,"registerForExtraEvents",void 0),(0,E.e)("BABYLON.MaterialPluginBase",n)},11679:(m,S,h)=>{h.d(S,{e:()=>l});class l{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(m){m.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(m){}bindForSubMesh(m,S,h,l,M){if(S.prePassRenderer&&S.prePassRenderer.enabled&&S.prePassRenderer.currentRTisSceneRT&&(-1!==S.prePassRenderer.getIndex(2)||-1!==S.prePassRenderer.getIndex(11))){this.previousWorldMatrices[h.uniqueId]||(this.previousWorldMatrices[h.uniqueId]=l.clone()),this.previousViewProjection||(this.previousViewProjection=S.getTransformMatrix().clone(),this.currentViewProjection=S.getTransformMatrix().clone());const M=S.getEngine();this.currentViewProjection.updateFlag!==S.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=M.frameId,this.previousViewProjection.l(this.currentViewProjection),this.currentViewProjection.l(S.getTransformMatrix())):this._lastUpdateFrameId!==M.frameId&&(this._lastUpdateFrameId=M.frameId,this.previousViewProjection.l(this.currentViewProjection)),m.setMatrix("previousWorld",this.previousWorldMatrices[h.uniqueId]),m.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[h.uniqueId]=l.clone()}}}},11674:(m,S,h)=>{h.d(S,{HS:()=>v});var l=h(11327),M=h(11336),O=h(11434),u=h(11567),b=h(11387),q=h(11410),Y=h(11679),V=h(11570),I=h(11629),Z=h(11682),C=h(11625),B=h(11321),D=h(11293),E=h(11691),n=h(11617),L=h(11697),U=h(11668),H=h(11663),R=h(11377),y=h(11708);const o={effect:null,subMesh:null};class s extends Z.b{constructor(m){super(m),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(m){const S=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const h of S)this[h]=h===m}}class v extends C.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(m){this._attachImageProcessingConfiguration(m),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(m){m!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=m||this.sm().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(m){this.imageProcessingConfiguration.colorCurvesEnabled=m}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(m){this.imageProcessingConfiguration.colorGradingEnabled=m}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(m){this._imageProcessingConfiguration.toneMappingEnabled=m}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(m){this._imageProcessingConfiguration.exposure=m}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(m){this._imageProcessingConfiguration.contrast=m}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(m){this._imageProcessingConfiguration.colorGradingTexture=m}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(m){this._imageProcessingConfiguration.colorCurves=m}get canRenderToMRT(){return!0}constructor(m,S){super(m,S,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||v.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new b.RS(0,0,0),this.diffuseColor=new b.RS(1,1,1),this.specularColor=new b.RS(1,1,1),this.emissiveColor=new b.RS(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new O.g(16),this._globalAmbientColor=new b.RS(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new L.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new Y.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"HS"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===I.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Sb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==I.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Sb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(m,S){let l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const M=S._drawWrapper;if(M.effect&&this.isFrozen&&M._wasPreviouslyReady&&M._wasPreviouslyUsingInstances===l)return!0;S.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),S.materialDefines=new s(this._eventInfo.defineNames));const O=this.sm(),u=S.materialDefines;if(this._isReadyForSubMesh(S))return!0;const b=O.getEngine();u._needNormals=(0,H.T)(O,m,u,!0,this._maxSimultaneousLights,this._disableLighting),(0,H.$)(O,u);const I=this.needAlphaBlendingForMesh(m)&&this.sm().useOrderIndependentTransparency;if((0,H.gb)(O,u,this.canRenderToMRT&&!I),(0,H.db)(O,u,I),y.b.PrepareDefines(b.currentRenderPassId,m,u),u._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,u._needUVs=!1;for(let m=1;m<=6;++m)u["MAINUV"+m]=!1;if(O.texturesEnabled){if(u.DIFFUSEDIRECTUV=0,u.BUMPDIRECTUV=0,u.AMBIENTDIRECTUV=0,u.OPACITYDIRECTUV=0,u.EMISSIVEDIRECTUV=0,u.SPECULARDIRECTUV=0,u.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&v.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._diffuseTexture,u,"DIFFUSE")}else u.DIFFUSE=!1;if(this._ambientTexture&&v.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._ambientTexture,u,"AMBIENT")}else u.AMBIENT=!1;if(this._opacityTexture&&v.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._opacityTexture,u,"OPACITY"),u.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else u.OPACITY=!1;if(this._reflectionTexture&&v.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(u._needNormals=!0,u.REFLECTION=!0,u.ROUGHNESS=this._roughness>0,u.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,u.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===B.e.INVCUBIC_MODE,u.REFLECTIONMAP_3D=this._reflectionTexture.isCube,u.REFLECTIONMAP_OPPOSITEZ=u.REFLECTIONMAP_3D&&this.sm().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,u.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case B.e.EXPLICIT_MODE:u.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case B.e.PLANAR_MODE:u.setReflectionMode("REFLECTIONMAP_PLANAR");break;case B.e.PROJECTION_MODE:u.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case B.e.SKYBOX_MODE:u.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case B.e.SPHERICAL_MODE:u.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case B.e.EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case B.e.FIXED_EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case B.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:u.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case B.e.CUBIC_MODE:case B.e.INVCUBIC_MODE:default:u.setReflectionMode("REFLECTIONMAP_CUBIC")}u.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else u.REFLECTION=!1,u.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&v.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._emissiveTexture,u,"EMISSIVE")}else u.EMISSIVE=!1;if(this._lightmapTexture&&v.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._lightmapTexture,u,"LIGHTMAP"),u.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,u.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else u.LIGHTMAP=!1;if(this._specularTexture&&v.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,H.V)(this._specularTexture,u,"SPECULAR"),u.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else u.SPECULAR=!1;if(O.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&v.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,H.V)(this._bumpTexture,u,"BUMP"),u.PARALLAX=this._useParallax,u.PARALLAX_RHS=O.useRightHandedSystem,u.PARALLAXOCCLUSION=this._useParallaxOcclusion,u.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else u.BUMP=!1,u.PARALLAX=!1,u.PARALLAX_RHS=!1,u.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&v.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;u._needUVs=!0,u.REFRACTION=!0,u.REFRACTIONMAP_3D=this._refractionTexture.isCube,u.RGBDREFRACTION=this._refractionTexture.isRGBD,u.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else u.REFRACTION=!1;u.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else u.DIFFUSE=!1,u.AMBIENT=!1,u.OPACITY=!1,u.REFLECTION=!1,u.EMISSIVE=!1,u.LIGHTMAP=!1,u.BUMP=!1,u.REFRACTION=!1;u.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),u.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,u.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,u.SPECULAROVERALPHA=this._useSpecularOverAlpha,u.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,u.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,u.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(m)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=u,this._eventInfo.subMesh=S,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(u._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(u),u.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,u.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(u._areFresnelDirty&&(v.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(u.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,u.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,u.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,u.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,u.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,u.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,u._needNormals=!0,u.FRESNEL=!0):u.FRESNEL=!1),u.AREALIGHTUSED)for(let h=0;h<m.lightSources.length;h++)if(!m.lightSources[h]._isReady())return!1;(0,H.X)(m,O,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(m),u,this._applyDecalMapAfterDetailMap),(0,H.R)(O,b,this,u,l,null,S.getRenderingMesh().hasThinInstances),this._eventInfo.defines=u,this._eventInfo.mesh=m,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,H.N)(m,u,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let Z=!1;if(u.isDirty){const l=u._areLightsDisposed;u.markAsProcessed();const M=new n.e;u.REFLECTION&&M.addFallback(0,"REFLECTION"),u.SPECULAR&&M.addFallback(0,"SPECULAR"),u.BUMP&&M.addFallback(0,"BUMP"),u.PARALLAX&&M.addFallback(1,"PARALLAX"),u.PARALLAX_RHS&&M.addFallback(1,"PARALLAX_RHS"),u.PARALLAXOCCLUSION&&M.addFallback(0,"PARALLAXOCCLUSION"),u.SPECULAROVERALPHA&&M.addFallback(0,"SPECULAROVERALPHA"),u.FOG&&M.addFallback(1,"FOG"),u.POINTSIZE&&M.addFallback(0,"POINTSIZE"),u.LOGARITHMICDEPTH&&M.addFallback(0,"LOGARITHMICDEPTH"),(0,H.s)(u,M,this._maxSimultaneousLights),u.SPECULARTERM&&M.addFallback(0,"SPECULARTERM"),u.DIFFUSEFRESNEL&&M.addFallback(1,"DIFFUSEFRESNEL"),u.OPACITYFRESNEL&&M.addFallback(2,"OPACITYFRESNEL"),u.REFLECTIONFRESNEL&&M.addFallback(3,"REFLECTIONFRESNEL"),u.EMISSIVEFRESNEL&&M.addFallback(4,"EMISSIVEFRESNEL"),u.FRESNEL&&M.addFallback(4,"FRESNEL"),u.MULTIVIEW&&M.addFallback(0,"MULTIVIEW");const I=[q.f.PositionKind];u.NORMAL&&I.push(q.f.NormalKind),u.TANGENT&&I.push(q.f.TangentKind);for(let m=1;m<=6;++m)u["UV"+m]&&I.push(`uv${1===m?"":m}`);u.VERTEXCOLOR&&I.push(q.f.ColorKind),(0,H.z)(I,m,u,M),(0,H.C)(I,u),(0,H.G)(I,m,u),(0,H.w)(I,m,u);let C="default";const B=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],D=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],E=["Material","Scene","Mesh"],L={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:u.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=M,this._eventInfo.fallbackRank=0,this._eventInfo.defines=u,this._eventInfo.uniforms=B,this._eventInfo.attributes=I,this._eventInfo.samplers=D,this._eventInfo.uniformBuffersNames=E,this._eventInfo.customCode=void 0,this._eventInfo.mesh=m,this._eventInfo.indexParameters=L,this._callbackPluginEventGeneric(128,this._eventInfo),y.b.AddUniformsAndSamplers(B,D),Y.e.AddUniforms(B),Y.e.AddSamplers(D),V.e&&(V.e.PrepareUniforms(B,u),V.e.PrepareSamplers(D,u)),(0,H.jb)({uniformsNames:B,uniformBuffersNames:E,samplers:D,defines:u,maxSimultaneousLights:this._maxSimultaneousLights}),(0,U.e)(B);const R={};this.customShaderNameResolve&&(C=this.customShaderNameResolve(C,B,E,D,u,I,R));const s=u.toString(),v=S.effect;let T=O.getEngine().createEffect(C,{attributes:I,uniformsNames:B,uniformBuffersNames:E,samplers:D,defines:s,fallbacks:M,onCompiled:this.onCompiled,onError:this.onError,indexParameters:L,processFinalCode:R.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:u.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([h.e(41),h.e(64)]).then(h.bind(h,13939)),Promise.all([h.e(39),h.e(65)]).then(h.bind(h,14080))]):await Promise.all([Promise.all([h.e(34),h.e(67)]).then(h.bind(h,14154)),Promise.all([h.e(33),h.e(68)]).then(h.bind(h,14316))]),this._shadersLoaded=!0}},b);if(this._eventInfo.customCode=void 0,T)if(this._onEffectCreatedObservable&&(o.effect=T,o.subMesh=S,this._onEffectCreatedObservable.notifyObservers(o)),this.allowShaderHotSwapping&&v&&!T.isReady()){if(T=v,u.markAsUnprocessed(),Z=this.isFrozen,l)return u._areLightsDisposed=!0,!1}else O.resetCachedMaterial(),S.setEffect(T,u,this._materialContext)}return!(!S.effect||!S.effect.isReady())&&(u._renderId=O.getRenderId(),M._wasPreviouslyReady=!Z,M._wasPreviouslyUsingInstances=l,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const m=this._uniformBuffer;m.addUniform("diffuseLeftColor",4),m.addUniform("diffuseRightColor",4),m.addUniform("opacityParts",4),m.addUniform("reflectionLeftColor",4),m.addUniform("reflectionRightColor",4),m.addUniform("refractionLeftColor",4),m.addUniform("refractionRightColor",4),m.addUniform("emissiveLeftColor",4),m.addUniform("emissiveRightColor",4),m.addUniform("vDiffuseInfos",2),m.addUniform("vAmbientInfos",2),m.addUniform("vOpacityInfos",2),m.addUniform("vReflectionInfos",2),m.addUniform("vReflectionPosition",3),m.addUniform("vReflectionSize",3),m.addUniform("vEmissiveInfos",2),m.addUniform("vLightmapInfos",2),m.addUniform("vSpecularInfos",2),m.addUniform("vBumpInfos",3),m.addUniform("diffuseMatrix",16),m.addUniform("ambientMatrix",16),m.addUniform("opacityMatrix",16),m.addUniform("reflectionMatrix",16),m.addUniform("emissiveMatrix",16),m.addUniform("lightmapMatrix",16),m.addUniform("specularMatrix",16),m.addUniform("bumpMatrix",16),m.addUniform("vTangentSpaceParams",2),m.addUniform("pointSize",1),m.addUniform("alphaCutOff",1),m.addUniform("refractionMatrix",16),m.addUniform("vRefractionInfos",4),m.addUniform("vRefractionPosition",3),m.addUniform("vRefractionSize",3),m.addUniform("vSpecularColor",4),m.addUniform("vEmissiveColor",3),m.addUniform("vDiffuseColor",4),m.addUniform("vAmbientColor",3),m.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(m,S,h){const l=this.sm(),M=h.materialDefines;if(!M)return;const O=h.effect;if(!O)return;this._activeEffect=O,S.getMeshUniformBuffer().bindToEffect(O,"Mesh"),S.transferToEffect(m),this._uniformBuffer.bindToEffect(O,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,l,S,m,this.isFrozen),y.b.Bind(l.getEngine().currentRenderPassId,this._activeEffect,S,m,this);const q=l.activeCamera;q?this._uniformBuffer.updateFloat4("cameraInfo",q.hb,q.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=h,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),M.OBJECTSPACE_NORMALMAP&&(m.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const Y=this._mustRebind(l,O,h,S.visibility);(0,H.c)(S,O);const V=this._uniformBuffer;if(Y){if(this.bindViewProjection(O),!V.useUbo||!this.isFrozen||!V.isSync||h._drawWrapper._forceRebindOnNextCall){if(v.FresnelEnabled&&M.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(V.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),V.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&V.updateColor4("opacityParts",new b.RS(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(V.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),V.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(V.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),V.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(V.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),V.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),l.texturesEnabled){if(this._diffuseTexture&&v.DiffuseTextureEnabled&&(V.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,H.r)(this._diffuseTexture,V,"diffuse")),this._ambientTexture&&v.AmbientTextureEnabled&&(V.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,H.r)(this._ambientTexture,V,"ambient")),this._opacityTexture&&v.OpacityTextureEnabled&&(V.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,H.r)(this._opacityTexture,V,"opacity")),this._hasAlphaChannel()&&V.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&v.ReflectionTextureEnabled){if(V.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),V.lb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const m=this._reflectionTexture;V.updateVector3("vReflectionPosition",m.boundingBoxPosition),V.updateVector3("vReflectionSize",m.boundingBoxSize)}}else V.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&v.EmissiveTextureEnabled&&(V.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,H.r)(this._emissiveTexture,V,"emissive")),this._lightmapTexture&&v.LightmapTextureEnabled&&(V.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,H.r)(this._lightmapTexture,V,"lightmap")),this._specularTexture&&v.SpecularTextureEnabled&&(V.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,H.r)(this._specularTexture,V,"specular")),this._bumpTexture&&l.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&(V.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,H.r)(this._bumpTexture,V,"bump"),l._mirroredCameraPosition?V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&v.RefractionTextureEnabled){let m=1;if(this._refractionTexture.isCube||(V.lb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(m=this._refractionTexture.depth)),V.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,m,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const m=this._refractionTexture;V.updateVector3("vRefractionPosition",m.boundingBoxPosition),V.updateVector3("vRefractionSize",m.boundingBoxSize)}}}this.pointsCloud&&V.updateFloat("pointSize",this.pointSize),V.updateColor4("vSpecularColor",this.specularColor,this.specularPower),V.updateColor3("vEmissiveColor",v.EmissiveTextureEnabled?this.emissiveColor:b.RS.BlackReadOnly),V.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),l.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),V.updateColor3("vAmbientColor",this._globalAmbientColor)}l.texturesEnabled&&(this._diffuseTexture&&v.DiffuseTextureEnabled&&O.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&v.AmbientTextureEnabled&&O.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&v.OpacityTextureEnabled&&O.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&v.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?O.setTexture("reflectionCubeSampler",this._reflectionTexture):O.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&v.EmissiveTextureEnabled&&O.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&v.LightmapTextureEnabled&&O.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&v.SpecularTextureEnabled&&O.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&l.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&O.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&v.RefractionTextureEnabled&&(this._refractionTexture.isCube?O.setTexture("refractionCubeSampler",this._refractionTexture):O.setTexture("refraction2DSampler",this._refractionTexture))),this.sm().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(S)&&this.sm().depthPeelingRenderer.bind(O),this._eventInfo.subMesh=h,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,U.g)(O,this,l),this.bindEyePosition(O)}else l.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(Y||!this.isFrozen){var I;if(l.lightsEnabled&&!this._disableLighting&&(0,H.i)(l,S,O,M,this._maxSimultaneousLights),(l.fogEnabled&&S.applyFog&&l.fogMode!==u.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||S.receiveShadows||M.PREPASS)&&this.bindView(O),(0,H.g)(l,S,O),M.NUM_MORPH_INFLUENCERS&&(0,H.n)(S,O),M.BAKED_VERTEX_ANIMATION_TEXTURE)null===(I=S.bakedVertexAnimationManager)||void 0===I||I.bind(O,M.INSTANCES);this.useLogarithmicDepth&&(0,H.j)(M,O,l),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(S,this._activeEffect,h),V.update()}getAnimatables(){const m=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&m.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&m.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&m.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&m.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&m.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&m.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&m.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&m.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&m.push(this._refractionTexture),m}getActiveTextures(){const m=super.getActiveTextures();return this._diffuseTexture&&m.push(this._diffuseTexture),this._ambientTexture&&m.push(this._ambientTexture),this._opacityTexture&&m.push(this._opacityTexture),this._reflectionTexture&&m.push(this._reflectionTexture),this._emissiveTexture&&m.push(this._emissiveTexture),this._specularTexture&&m.push(this._specularTexture),this._bumpTexture&&m.push(this._bumpTexture),this._lightmapTexture&&m.push(this._lightmapTexture),this._refractionTexture&&m.push(this._refractionTexture),m}hasTexture(m){return!!super.hasTexture(m)||(this._diffuseTexture===m||(this._ambientTexture===m||(this._opacityTexture===m||(this._reflectionTexture===m||(this._emissiveTexture===m||(this._specularTexture===m||(this._bumpTexture===m||(this._lightmapTexture===m||this._refractionTexture===m))))))))}dispose(m,S){var h,l,M,O,u,b,q,Y,V;S&&(null===(h=this._diffuseTexture)||void 0===h||h.dispose(),null===(l=this._ambientTexture)||void 0===l||l.dispose(),null===(M=this._opacityTexture)||void 0===M||M.dispose(),null===(O=this._reflectionTexture)||void 0===O||O.dispose(),null===(u=this._emissiveTexture)||void 0===u||u.dispose(),null===(b=this._specularTexture)||void 0===b||b.dispose(),null===(q=this._bumpTexture)||void 0===q||q.dispose(),null===(Y=this._lightmapTexture)||void 0===Y||Y.dispose(),null===(V=this._refractionTexture)||void 0===V||V.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(m,S)}clone(m){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const l=R.e.Clone((()=>new v(m,this.sm())),this,{cloneTexturesOnlyOnce:S});return l.name=m,l.id=m,this.stencil.copyTo(l.stencil),this._clonePlugins(l,h),l}static Parse(m,S,h){const l=R.e.Parse((()=>new v(m.name,S)),m,S,h);return m.stencil&&l.stencil.parse(m.stencil,S,h),I.e._ParsePlugins(m,l,S,h),l}static get DiffuseTextureEnabled(){return E.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(m){E.b.DiffuseTextureEnabled=m}static get DetailTextureEnabled(){return E.b.DetailTextureEnabled}static set DetailTextureEnabled(m){E.b.DetailTextureEnabled=m}static get AmbientTextureEnabled(){return E.b.AmbientTextureEnabled}static set AmbientTextureEnabled(m){E.b.AmbientTextureEnabled=m}static get OpacityTextureEnabled(){return E.b.OpacityTextureEnabled}static set OpacityTextureEnabled(m){E.b.OpacityTextureEnabled=m}static get ReflectionTextureEnabled(){return E.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(m){E.b.ReflectionTextureEnabled=m}static get EmissiveTextureEnabled(){return E.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(m){E.b.EmissiveTextureEnabled=m}static get SpecularTextureEnabled(){return E.b.SpecularTextureEnabled}static set SpecularTextureEnabled(m){E.b.SpecularTextureEnabled=m}static get BumpTextureEnabled(){return E.b.BumpTextureEnabled}static set BumpTextureEnabled(m){E.b.BumpTextureEnabled=m}static get LightmapTextureEnabled(){return E.b.LightmapTextureEnabled}static set LightmapTextureEnabled(m){E.b.LightmapTextureEnabled=m}static get RefractionTextureEnabled(){return E.b.RefractionTextureEnabled}static set RefractionTextureEnabled(m){E.b.RefractionTextureEnabled=m}static get ColorGradingTextureEnabled(){return E.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(m){E.b.ColorGradingTextureEnabled=m}static get FresnelEnabled(){return E.b.FresnelEnabled}static set FresnelEnabled(m){E.b.FresnelEnabled=m}}v.ForceGLSL=!1,(0,l.d)([(0,M.w)("diffuseTexture")],v.prototype,"_diffuseTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"diffuseTexture",void 0),(0,l.d)([(0,M.w)("ambientTexture")],v.prototype,"_ambientTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"ambientTexture",void 0),(0,l.d)([(0,M.w)("opacityTexture")],v.prototype,"_opacityTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"opacityTexture",void 0),(0,l.d)([(0,M.w)("reflectionTexture")],v.prototype,"_reflectionTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"reflectionTexture",void 0),(0,l.d)([(0,M.w)("emissiveTexture")],v.prototype,"_emissiveTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"emissiveTexture",void 0),(0,l.d)([(0,M.w)("specularTexture")],v.prototype,"_specularTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"specularTexture",void 0),(0,l.d)([(0,M.w)("bumpTexture")],v.prototype,"_bumpTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"bumpTexture",void 0),(0,l.d)([(0,M.w)("lightmapTexture")],v.prototype,"_lightmapTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"lightmapTexture",void 0),(0,l.d)([(0,M.w)("refractionTexture")],v.prototype,"_refractionTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"refractionTexture",void 0),(0,l.d)([(0,M.k)("ambient")],v.prototype,"ambientColor",void 0),(0,l.d)([(0,M.k)("diffuse")],v.prototype,"diffuseColor",void 0),(0,l.d)([(0,M.k)("specular")],v.prototype,"specularColor",void 0),(0,l.d)([(0,M.k)("emissive")],v.prototype,"emissiveColor",void 0),(0,l.d)([(0,M.F)()],v.prototype,"specularPower",void 0),(0,l.d)([(0,M.F)("useAlphaFromDiffuseTexture")],v.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"useAlphaFromDiffuseTexture",void 0),(0,l.d)([(0,M.F)("useEmissiveAsIllumination")],v.prototype,"_useEmissiveAsIllumination",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useEmissiveAsIllumination",void 0),(0,l.d)([(0,M.F)("linkEmissiveWithDiffuse")],v.prototype,"_linkEmissiveWithDiffuse",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"linkEmissiveWithDiffuse",void 0),(0,l.d)([(0,M.F)("useSpecularOverAlpha")],v.prototype,"_useSpecularOverAlpha",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useSpecularOverAlpha",void 0),(0,l.d)([(0,M.F)("useReflectionOverAlpha")],v.prototype,"_useReflectionOverAlpha",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useReflectionOverAlpha",void 0),(0,l.d)([(0,M.F)("disableLighting")],v.prototype,"_disableLighting",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsLightsDirty")],v.prototype,"disableLighting",void 0),(0,l.d)([(0,M.F)("useObjectSpaceNormalMap")],v.prototype,"_useObjectSpaceNormalMap",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useObjectSpaceNormalMap",void 0),(0,l.d)([(0,M.F)("useParallax")],v.prototype,"_useParallax",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallax",void 0),(0,l.d)([(0,M.F)("useParallaxOcclusion")],v.prototype,"_useParallaxOcclusion",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallaxOcclusion",void 0),(0,l.d)([(0,M.F)()],v.prototype,"parallaxScaleBias",void 0),(0,l.d)([(0,M.F)("roughness")],v.prototype,"_roughness",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"roughness",void 0),(0,l.d)([(0,M.F)()],v.prototype,"indexOfRefraction",void 0),(0,l.d)([(0,M.F)()],v.prototype,"invertRefractionY",void 0),(0,l.d)([(0,M.F)()],v.prototype,"alphaCutOff",void 0),(0,l.d)([(0,M.F)("useLightmapAsShadowmap")],v.prototype,"_useLightmapAsShadowmap",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useLightmapAsShadowmap",void 0),(0,l.d)([(0,M.n)("diffuseFresnelParameters")],v.prototype,"_diffuseFresnelParameters",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"diffuseFresnelParameters",void 0),(0,l.d)([(0,M.n)("opacityFresnelParameters")],v.prototype,"_opacityFresnelParameters",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],v.prototype,"opacityFresnelParameters",void 0),(0,l.d)([(0,M.n)("reflectionFresnelParameters")],v.prototype,"_reflectionFresnelParameters",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"reflectionFresnelParameters",void 0),(0,l.d)([(0,M.n)("refractionFresnelParameters")],v.prototype,"_refractionFresnelParameters",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"refractionFresnelParameters",void 0),(0,l.d)([(0,M.n)("emissiveFresnelParameters")],v.prototype,"_emissiveFresnelParameters",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"emissiveFresnelParameters",void 0),(0,l.d)([(0,M.F)("useReflectionFresnelFromSpecular")],v.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"useReflectionFresnelFromSpecular",void 0),(0,l.d)([(0,M.F)("useGlossinessFromSpecularMapAlpha")],v.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,l.d)([(0,M.F)("maxSimultaneousLights")],v.prototype,"_maxSimultaneousLights",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsLightsDirty")],v.prototype,"maxSimultaneousLights",void 0),(0,l.d)([(0,M.F)("invertNormalMapX")],v.prototype,"_invertNormalMapX",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapX",void 0),(0,l.d)([(0,M.F)("invertNormalMapY")],v.prototype,"_invertNormalMapY",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapY",void 0),(0,l.d)([(0,M.F)("twoSidedLighting")],v.prototype,"_twoSidedLighting",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"twoSidedLighting",void 0),(0,l.d)([(0,M.F)("applyDecalMapAfterDetailMap")],v.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,l.d)([(0,M.c)("_markAllSubMeshesAsMiscDirty")],v.prototype,"applyDecalMapAfterDetailMap",void 0),(0,D.e)("BABYLON.StandardMaterial",v),u.c.DefaultMaterialFactory=m=>new v("default material",m)}}]);