"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11528:(g,w,q)=>{q.d(w,{b:()=>m});var R=q(11161),o=q(11469),r=q(11170),S=q(11523),i=q(11520),T=q(11537),z=q(11499);class t extends i.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class m extends T.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(g){let w=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(g,"DetailMap",140,new t,w),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=o.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=g._dirtyCallbacks[1]}isReadyForSubMesh(g,w,q){return!this._isEnabled||!(g._areTexturesDirty&&w.texturesEnabled&&q.getCaps().standardDerivatives&&this._texture&&S.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(g,w){if(this._isEnabled){g.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const q=w.getEngine();g._areTexturesDirty&&(q.getCaps().standardDerivatives&&this._texture&&S.e.DetailTextureEnabled&&this._isEnabled?((0,z.M)(this._texture,g,"DETAIL"),g.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):g.DETAIL=!1)}else g.DETAIL=!1}bindForSubMesh(g,w){if(!this._isEnabled)return;const q=this._material.isFrozen;g.useUbo&&q&&g.isSync||this._texture&&S.e.DetailTextureEnabled&&(g.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,z.s)(this._texture,g,"detail")),w.texturesEnabled&&this._texture&&S.e.DetailTextureEnabled&&g.setTexture("detailSampler",this._texture)}hasTexture(g){return this._texture===g}getActiveTextures(g){this._texture&&g.push(this._texture)}getAnimatables(g){this._texture&&this._texture.animations&&this._texture.animations.length>0&&g.push(this._texture)}dispose(g){var w;g&&(null===(w=this._texture)||void 0===w||w.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(g){g.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,R.e)([(0,r.C)("detailTexture"),(0,r.d)("_markAllSubMeshesAsTexturesDirty")],m.prototype,"texture",void 0),(0,R.e)([(0,r.K)()],m.prototype,"diffuseBlendLevel",void 0),(0,R.e)([(0,r.K)()],m.prototype,"roughnessBlendLevel",void 0),(0,R.e)([(0,r.K)()],m.prototype,"bumpLevel",void 0),(0,R.e)([(0,r.K)(),(0,r.d)("_markAllSubMeshesAsTexturesDirty")],m.prototype,"normalBlendMethod",void 0),(0,R.e)([(0,r.K)(),(0,r.d)("_markAllSubMeshesAsTexturesDirty")],m.prototype,"isEnabled",void 0)},11520:(g,w,q)=>{q.d(w,{e:()=>R});class R{constructor(g){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=g,g)for(const w in g)Object.prototype.hasOwnProperty.call(g,w)&&this._setDefaultValue(w)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let g=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||g,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const g of Object.keys(this))"_"!==g[0]&&this._keys.push(g);if(this._externalProperties)for(const g in this._externalProperties)-1===this._keys.indexOf(g)&&this._keys.push(g)}isEqual(g){if(this._keys.length!==g._keys.length)return!1;for(let w=0;w<this._keys.length;w++){const q=this._keys[w];if(this[q]!==g[q])return!1}return!0}cloneTo(g){this._keys.length!==g._keys.length&&(g._keys=this._keys.slice(0));for(let w=0;w<this._keys.length;w++){const q=this._keys[w];g[q]=this[q]}}reset(){for(const g of this._keys)this._setDefaultValue(g)}_setDefaultValue(g){var w,q,R,o;const r=(null===(w=this._externalProperties)||void 0===w||null===(q=w[g])||void 0===q?void 0:q.type)??typeof this[g],S=null===(R=this._externalProperties)||void 0===R||null===(o=R[g])||void 0===o?void 0:o.default;switch(r){case"number":this[g]=S??0;break;case"string":this[g]=S??"";break;default:this[g]=S??!1}}toString(){let g="";for(let w=0;w<this._keys.length;w++){const q=this._keys[w],R=this[q];switch(typeof R){case"number":case"string":g+="#define "+q+" "+R+"\n";break;default:R&&(g+="#define "+q+"\n")}}return g}}},11523:(g,w,q)=>{q.d(w,{e:()=>o});var R=q(11074);class o{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(g){this._DiffuseTextureEnabled!==g&&(this._DiffuseTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(g){this._BaseWeightTextureEnabled!==g&&(this._BaseWeightTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(g){this._BaseDiffuseRoughnessTextureEnabled!==g&&(this._BaseDiffuseRoughnessTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(g){this._DetailTextureEnabled!==g&&(this._DetailTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(g){this._DecalMapEnabled!==g&&(this._DecalMapEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(g){this._AmbientTextureEnabled!==g&&(this._AmbientTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(g){this._OpacityTextureEnabled!==g&&(this._OpacityTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(g){this._ReflectionTextureEnabled!==g&&(this._ReflectionTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(g){this._EmissiveTextureEnabled!==g&&(this._EmissiveTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(g){this._SpecularTextureEnabled!==g&&(this._SpecularTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(g){this._BumpTextureEnabled!==g&&(this._BumpTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(g){this._LightmapTextureEnabled!==g&&(this._LightmapTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(g){this._RefractionTextureEnabled!==g&&(this._RefractionTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(g){this._ColorGradingTextureEnabled!==g&&(this._ColorGradingTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(g){this._FresnelEnabled!==g&&(this._FresnelEnabled=g,R.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(g){this._ClearCoatTextureEnabled!==g&&(this._ClearCoatTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(g){this._ClearCoatBumpTextureEnabled!==g&&(this._ClearCoatBumpTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(g){this._ClearCoatTintTextureEnabled!==g&&(this._ClearCoatTintTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(g){this._SheenTextureEnabled!==g&&(this._SheenTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(g){this._AnisotropicTextureEnabled!==g&&(this._AnisotropicTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(g){this._ThicknessTextureEnabled!==g&&(this._ThicknessTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(g){this._RefractionIntensityTextureEnabled!==g&&(this._RefractionIntensityTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(g){this._TranslucencyIntensityTextureEnabled!==g&&(this._TranslucencyIntensityTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(g){this._TranslucencyColorTextureEnabled!==g&&(this._TranslucencyColorTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(g){this._IridescenceTextureEnabled!==g&&(this._IridescenceTextureEnabled=g,R.b.MarkAllMaterialsAsDirty(1))}}o._DiffuseTextureEnabled=!0,o._BaseWeightTextureEnabled=!0,o._BaseDiffuseRoughnessTextureEnabled=!0,o._DetailTextureEnabled=!0,o._DecalMapEnabled=!0,o._AmbientTextureEnabled=!0,o._OpacityTextureEnabled=!0,o._ReflectionTextureEnabled=!0,o._EmissiveTextureEnabled=!0,o._SpecularTextureEnabled=!0,o._BumpTextureEnabled=!0,o._LightmapTextureEnabled=!0,o._RefractionTextureEnabled=!0,o._ColorGradingTextureEnabled=!0,o._FresnelEnabled=!0,o._ClearCoatTextureEnabled=!0,o._ClearCoatBumpTextureEnabled=!0,o._ClearCoatTintTextureEnabled=!0,o._SheenTextureEnabled=!0,o._AnisotropicTextureEnabled=!0,o._ThicknessTextureEnabled=!0,o._RefractionIntensityTextureEnabled=!0,o._TranslucencyIntensityTextureEnabled=!0,o._TranslucencyColorTextureEnabled=!0,o._IridescenceTextureEnabled=!0},11539:(g,w,q)=>{q.d(w,{e:()=>r});var R,o=q(11180);!function(g){g[g.Zero=0]="Zero",g[g.One=1]="One",g[g.MaxViewZ=2]="MaxViewZ"}(R||(R={}));class r{static CreateConfiguration(g){return r._Configurations[g]={defines:{},previousWorldMatrices:{},previousViewProjection:o.Matrix.Zero(),currentViewProjection:o.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},r._Configurations[g]}static DeleteConfiguration(g){delete r._Configurations[g]}static GetConfiguration(g){return r._Configurations[g]}static AddUniformsAndSamplers(g,w){g.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(g,w){for(const q of w)if(q.wi)for(const w of q.wi)w._removeDrawWrapper(g)}static PrepareDefines(g,w,q){if(!q._arePrePassDirty)return;const R=r._Configurations[g];if(!R)return;q.PREPASS=!0,q.PREPASS_COLOR=!1,q.PREPASS_COLOR_INDEX=-1;let o=0;for(let S=0;S<r.GeometryTextureDescriptions.length;S++){const g=r.GeometryTextureDescriptions[S],w=g.define,i=g.defineIndex,T=R.defines[i];void 0!==T?(q[w]=!0,q[i]=T,o++):(q[w]=!1,delete q[i])}q.SCENE_MRT_COUNT=o,q.BONES_VELOCITY_ENABLED=w.useBones&&w.computeBonesUsingShaders&&w.skeleton&&!w.skeleton.isUsingTextureForMatrices&&-1===R.excludedSkinnedMesh.indexOf(w)}static Bind(g,w,q,R,o){const S=r._Configurations[g];if(!S)return;const i=q.Ng(),T=i.getEngine();if(S.reverseCulling&&T.setStateCullFaceType(i._mirroredCameraPosition?o.cullBackFaces:!o.cullBackFaces),(void 0!==S.defines.PREPASS_VELOCITY_INDEX||void 0!==S.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(S.previousWorldMatrices[q.uniqueId]||(S.previousWorldMatrices[q.uniqueId]=R.clone()),S.previousViewProjection||(S.previousViewProjection=i.getTransformMatrix().clone(),S.currentViewProjection=i.getTransformMatrix().clone()),S.currentViewProjection.updateFlag!==i.getTransformMatrix().updateFlag?(S.lastUpdateFrameId=T.frameId,S.previousViewProjection.T(S.currentViewProjection),S.currentViewProjection.T(i.getTransformMatrix())):S.lastUpdateFrameId!==T.frameId&&(S.lastUpdateFrameId=T.frameId,S.previousViewProjection.T(S.currentViewProjection)),w.setMatrix("previousWorld",S.previousWorldMatrices[q.uniqueId]),w.setMatrix("previousViewProjection",S.previousViewProjection),S.previousWorldMatrices[q.uniqueId]=R.clone(),q.useBones&&q.computeBonesUsingShaders&&q.skeleton)){const g=q.skeleton;if(!g.isUsingTextureForMatrices||-1===w.getUniformIndex("boneTextureWidth")){const R=g.getTransformMatrices(q);R&&(S.previousBones[q.uniqueId]||(S.previousBones[q.uniqueId]=R.slice()),w.setMatrices("mPreviousBones",S.previousBones[q.uniqueId]),S.previousBones[q.uniqueId].set(R))}}}}r.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],r._Configurations={}},11537:(g,w,q)=>{q.d(w,{e:()=>J});var R=q(11161),o=q(11170),r=q(11469),S=q(11034),i=q(11062),T=q(11081);const z=new RegExp("^([gimus]+)!");class t{constructor(g){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=g,this._scene=g.Ng(),this._engine=this._scene.getEngine()}_addPlugin(g){for(let R=0;R<this._plugins.length;++R)if(this._plugins[R].name===g.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!g.isCompatible(this._material.shaderLanguage))throw`The plugin "${g.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const w=g.getClassName();t._MaterialPluginClassToMainDefine[w]||(t._MaterialPluginClassToMainDefine[w]="MATERIALPLUGIN_"+ ++t._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(g,w)=>this._handlePluginEvent(g,w),this._plugins.push(g),this._plugins.sort(((g,w)=>g.priority-w.priority)),this._codeInjectionPoints={};const q={};q[t._MaterialPluginClassToMainDefine[w]]={type:"boolean",default:!0};for(const R of this._plugins)R.collectDefines(q),this._collectPointNames("vertex",R.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",R.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=q,!0}_activatePlugin(g){-1===this._activePlugins.indexOf(g)&&(this._activePlugins.push(g),this._activePlugins.sort(((g,w)=>g.priority-w.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),g.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(g),this._activePluginsForExtraEvents.sort(((g,w)=>g.priority-w.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(g){for(let w=0;w<this._plugins.length;++w)if(this._plugins[w].name===g)return this._plugins[w];return null}_handlePluginEventIsReadyForSubMesh(g){let w=!0;for(const q of this._activePlugins)w=w&&q.isReadyForSubMesh(g.defines,this._scene,this._engine,g.subMesh);g.isReadyForSubMesh=w}_handlePluginEventPrepareDefinesBeforeAttributes(g){for(const w of this._activePlugins)w.prepareDefinesBeforeAttributes(g.defines,this._scene,g.mesh)}_handlePluginEventPrepareDefines(g){for(const w of this._activePlugins)w.prepareDefines(g.defines,this._scene,g.mesh)}_handlePluginEventHardBindForSubMesh(g){for(const w of this._activePluginsForExtraEvents)w.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,g.subMesh)}_handlePluginEventBindForSubMesh(g){for(const w of this._activePlugins)w.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,g.subMesh)}_handlePluginEventHasRenderTargetTextures(g){let w=!1;for(const q of this._activePluginsForExtraEvents)if(w=q.hasRenderTargetTextures(),w)break;g.hasRenderTargetTextures=w}_handlePluginEventFillRenderTargetTextures(g){for(const w of this._activePluginsForExtraEvents)w.fillRenderTargetTextures(g.renderTargets)}_handlePluginEvent(g,w){switch(g){case 512:{const g=w;for(const w of this._activePlugins)w.getActiveTextures(g.activeTextures);break}case 256:{const g=w;for(const w of this._activePlugins)w.getAnimatables(g.animatables);break}case 1024:{const g=w;let q=!1;for(const w of this._activePlugins)if(q=w.hasTexture(g.texture),q)break;g.hasTexture=q;break}case 2:{const g=w;for(const w of this._plugins)w.dispose(g.forceDisposeTextures);break}case 4:w.defineNames=this._defineNamesFromPlugins;break;case 128:{const g=w;for(const w of this._activePlugins)g.fallbackRank=w.addFallbacks(g.defines,g.fallbacks,g.fallbackRank),w.getAttributes(g.attributes,this._scene,g.mesh);this._uniformList.length>0&&g.uniforms.push(...this._uniformList),this._samplerList.length>0&&g.samplers.push(...this._samplerList),this._uboList.length>0&&g.uniformBuffersNames.push(...this._uboList),g.customCode=this._injectCustomCode(g,g.customCode);break}case 8:{const g=w;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const q=1===this._material.shaderLanguage;for(const w of this._plugins){const R=w.getUniforms(this._material.shaderLanguage);if(R){if(R.ubo)for(const w of R.ubo){if(w.size&&w.type){const R=w.arraySize??0;if(g.ubo.addUniform(w.name,w.size,R),q){let g;switch(w.type){case"mat4":g="mat4x4f";break;case"float":g="f32";break;default:g=`${w.type}f`}this._uboDeclaration+=R>0?`uniform ${w.name}: array<${g}, ${R}>;\n`:`uniform ${w.name}: ${g};\n`}else this._uboDeclaration+=`${w.type} ${w.name}${R>0?`[${R}]`:""};\n`}this._uniformList.push(w.name)}R.vertex&&(this._vertexDeclaration+=R.vertex+"\n"),R.fragment&&(this._fragmentDeclaration+=R.fragment+"\n")}w.getSamplers(this._samplerList),w.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(g,w){if(w)for(const q in w)this._codeInjectionPoints[g]||(this._codeInjectionPoints[g]={}),this._codeInjectionPoints[g][q]=!0}_injectCustomCode(g,w){return(q,R)=>{var o;w&&(R=w(q,R)),this._uboDeclaration&&(R=R.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(R=R.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(R=R.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const r=null===(o=this._codeInjectionPoints)||void 0===o?void 0:o[q];if(!r)return R;let S=null;for(let w in r){let o="";for(const R of this._activePlugins){var t;let r=null===(t=R.getCustomCode(q,this._material.shaderLanguage))||void 0===t?void 0:t[w];if(r){if(R.resolveIncludes){if(null===S){const w=0;S={defines:[],indexParameters:g.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:T.d.GetShadersRepository(w),includesShadersStore:T.d.GetIncludesShadersStore(w),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}S.isFragment="fragment"===q,(0,i.j)(r,S,(g=>r=g))}o+=r+"\n"}}if(o.length>0)if("!"===w.charAt(0)){w=w.substring(1);let g="g";if("!"===w.charAt(0))g="",w=w.substring(1);else{const q=z.exec(w);q&&q.length>=2&&(g=q[1],w=w.substring(g.length+1))}g.indexOf("g")<0&&(g+="g");const q=R,r=new RegExp(w,g);let S=r.exec(q);for(;null!==S;){let g=o;for(let w=0;w<S.length;++w)g=g.replace("$"+w,S[w]);R=R.replace(S[0],g),S=r.exec(q)}}else{const g="#define "+w;R=R.replace(g,"\n"+o+"\n"+g)}}return R}}}t._MaterialPluginClassToMainDefine={},t._MaterialPluginCounter=0,S.c.OnEnginesDisposedObservable.add((()=>{L()}));const m=[];let e=!1,y=null;function L(){m.length=0,e=!1,r.e.OnEventObservable.remove(y),y=null}var A=q(11218),l=q(11128);class J{isCompatible(g){return 0===g}_enable(g){g&&this._pluginManager._activatePlugin(this)}constructor(g,w,q,R){let o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=arguments.length>5&&void 0!==arguments[5]&&arguments[5],S=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=g,this.name=w,this.priority=q,this.resolveIncludes=S,g.pluginManager||(g.pluginManager=new t(g),g.WS.add((()=>{g.pluginManager=void 0}))),this._pluginDefineNames=R,this._pluginManager=g.pluginManager,o&&this._pluginManager._addPlugin(this),r&&this._enable(!0),this.markAllDefinesAsDirty=g._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(g,w,q,R){return!0}hardBindForSubMesh(g,w,q,R){}bindForSubMesh(g,w,q,R){}dispose(g){}getCustomCode(g){return null}collectDefines(g){if(this._pluginDefineNames)for(const w of Object.keys(this._pluginDefineNames)){if("_"===w[0])continue;const q=typeof this._pluginDefineNames[w];g[w]={type:"number"===q?"number":"string"===q?"string":"boolean"===q?"boolean":"object",default:this._pluginDefineNames[w]}}}prepareDefinesBeforeAttributes(g,w,q){}prepareDefines(g,w,q){}hasTexture(g){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(g){}getActiveTextures(g){}getAnimatables(g){}addFallbacks(g,w,q){return q}getSamplers(g){}getAttributes(g,w,q){}getUniformBuffersNames(g){}getUniforms(){return{}}copyTo(g){A.c.Clone((()=>g),this)}serialize(){return A.c.Serialize(this)}parse(g,w,q){A.c.Parse((()=>this),g,w,q)}}(0,R.e)([(0,o.K)()],J.prototype,"name",void 0),(0,R.e)([(0,o.K)()],J.prototype,"priority",void 0),(0,R.e)([(0,o.K)()],J.prototype,"resolveIncludes",void 0),(0,R.e)([(0,o.K)()],J.prototype,"registerForExtraEvents",void 0),(0,l.g)("BABYLON.MaterialPluginBase",J)},11513:(g,w,q)=>{q.d(w,{b:()=>R});class R{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(g){g.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(g){}bindForSubMesh(g,w,q,R,o){if(w.prePassRenderer&&w.prePassRenderer.enabled&&w.prePassRenderer.currentRTisSceneRT&&(-1!==w.prePassRenderer.getIndex(2)||-1!==w.prePassRenderer.getIndex(11))){this.previousWorldMatrices[q.uniqueId]||(this.previousWorldMatrices[q.uniqueId]=R.clone()),this.previousViewProjection||(this.previousViewProjection=w.getTransformMatrix().clone(),this.currentViewProjection=w.getTransformMatrix().clone());const o=w.getEngine();this.currentViewProjection.updateFlag!==w.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=o.frameId,this.previousViewProjection.T(this.currentViewProjection),this.currentViewProjection.T(w.getTransformMatrix())):this._lastUpdateFrameId!==o.frameId&&(this._lastUpdateFrameId=o.frameId,this.previousViewProjection.T(this.currentViewProjection)),g.setMatrix("previousWorld",this.previousWorldMatrices[q.uniqueId]),g.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[q.uniqueId]=R.clone()}}}},11508:(g,w,q)=>{q.d(w,{lw:()=>H});var R=q(11161),o=q(11170),r=q(11270),S=q(11395),i=q(11235),T=q(11250),z=q(11513),t=q(11397),m=q(11469),e=q(11520),y=q(11466),L=q(11152),A=q(11128),l=q(11523),J=q(11462),x=q(11528),G=q(11506),d=q(11499),D=q(11218),U=q(11539);const N={effect:null,subMesh:null};class a extends e.e{constructor(g){super(g),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(g){const w=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const q of w)this[q]=q===g}}class H extends y.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(g){this._attachImageProcessingConfiguration(g),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(g){g!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=g||this.Ng().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(g){this.imageProcessingConfiguration.colorCurvesEnabled=g}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(g){this.imageProcessingConfiguration.colorGradingEnabled=g}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(g){this._imageProcessingConfiguration.toneMappingEnabled=g}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(g){this._imageProcessingConfiguration.exposure=g}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(g){this._imageProcessingConfiguration.contrast=g}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(g){this._imageProcessingConfiguration.colorGradingTexture=g}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(g){this._imageProcessingConfiguration.colorCurves=g}get canRenderToMRT(){return!0}constructor(g,w){super(g,w,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||H.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new i.Jw(0,0,0),this.diffuseColor=new i.Jw(1,1,1),this.specularColor=new i.Jw(1,1,1),this.emissiveColor=new i.Jw(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new r.e(16),this._globalAmbientColor=new i.Jw(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new x.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new z.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),H.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),H.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(H.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(H.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"lw"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===m.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.oi&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==m.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.oi||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(g,w){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const o=w._drawWrapper;if(o.effect&&this.isFrozen&&o._wasPreviouslyReady&&o._wasPreviouslyUsingInstances===R)return!0;w.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),w.materialDefines=new a(this._eventInfo.defineNames));const r=this.Ng(),S=w.materialDefines;if(this._isReadyForSubMesh(w))return!0;const i=r.getEngine();S._needNormals=(0,d.L)(r,g,S,!0,this._maxSimultaneousLights,this._disableLighting),(0,d.R)(r,S);const m=this.needAlphaBlendingForMesh(g)&&this.Ng().useOrderIndependentTransparency;if((0,d.Y)(r,S,this.canRenderToMRT&&!m),(0,d.U)(r,S,m),U.e.PrepareDefines(i.currentRenderPassId,g,S),S._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,S._needUVs=!1;for(let g=1;g<=6;++g)S["MAINUV"+g]=!1;if(r.texturesEnabled){if(S.DIFFUSEDIRECTUV=0,S.BUMPDIRECTUV=0,S.AMBIENTDIRECTUV=0,S.OPACITYDIRECTUV=0,S.EMISSIVEDIRECTUV=0,S.SPECULARDIRECTUV=0,S.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&H.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._diffuseTexture,S,"DIFFUSE")}else S.DIFFUSE=!1;if(this._ambientTexture&&H.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._ambientTexture,S,"AMBIENT")}else S.AMBIENT=!1;if(this._opacityTexture&&H.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._opacityTexture,S,"OPACITY"),S.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else S.OPACITY=!1;if(this._reflectionTexture&&H.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(S._needNormals=!0,S.REFLECTION=!0,S.ROUGHNESS=this._roughness>0,S.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,S.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===L.e.INVCUBIC_MODE,S.REFLECTIONMAP_3D=this._reflectionTexture.isCube,S.REFLECTIONMAP_OPPOSITEZ=S.REFLECTIONMAP_3D&&this.Ng().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,S.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case L.e.EXPLICIT_MODE:S.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case L.e.PLANAR_MODE:S.setReflectionMode("REFLECTIONMAP_PLANAR");break;case L.e.PROJECTION_MODE:S.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case L.e.SKYBOX_MODE:S.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case L.e.SPHERICAL_MODE:S.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case L.e.EQUIRECTANGULAR_MODE:S.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case L.e.FIXED_EQUIRECTANGULAR_MODE:S.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case L.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:S.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case L.e.CUBIC_MODE:case L.e.INVCUBIC_MODE:default:S.setReflectionMode("REFLECTIONMAP_CUBIC")}S.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else S.REFLECTION=!1,S.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&H.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._emissiveTexture,S,"EMISSIVE")}else S.EMISSIVE=!1;if(this._lightmapTexture&&H.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._lightmapTexture,S,"LIGHTMAP"),S.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,S.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else S.LIGHTMAP=!1;if(this._specularTexture&&H.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,d.M)(this._specularTexture,S,"SPECULAR"),S.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else S.SPECULAR=!1;if(r.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&H.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,d.M)(this._bumpTexture,S,"BUMP"),S.PARALLAX=this._useParallax,S.PARALLAX_RHS=r.useRightHandedSystem,S.PARALLAXOCCLUSION=this._useParallaxOcclusion,S.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else S.BUMP=!1,S.PARALLAX=!1,S.PARALLAX_RHS=!1,S.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&H.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;S._needUVs=!0,S.REFRACTION=!0,S.REFRACTIONMAP_3D=this._refractionTexture.isCube,S.RGBDREFRACTION=this._refractionTexture.isRGBD,S.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else S.REFRACTION=!1;S.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else S.DIFFUSE=!1,S.AMBIENT=!1,S.OPACITY=!1,S.REFLECTION=!1,S.EMISSIVE=!1,S.LIGHTMAP=!1,S.BUMP=!1,S.REFRACTION=!1;S.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),S.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,S.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,S.SPECULAROVERALPHA=this._useSpecularOverAlpha,S.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,S.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,S.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(g)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=S,this._eventInfo.subMesh=w,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(S._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(S),S.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,S.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(S._areFresnelDirty&&(H.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(S.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,S.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,S.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,S.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,S.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,S.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,S._needNormals=!0,S.FRESNEL=!0):S.FRESNEL=!1),S.AREALIGHTUSED)for(let q=0;q<g.lightSources.length;q++)if(!g.lightSources[q]._isReady())return!1;(0,d.P)(g,r,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(g),S,this._applyDecalMapAfterDetailMap),(0,d.K)(r,i,this,S,R,null,w.getRenderingMesh().hasThinInstances),this._eventInfo.defines=S,this._eventInfo.mesh=g,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,d.I)(g,S,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let e=!1;if(S.isDirty){const R=S._areLightsDisposed;S.markAsProcessed();const o=new J.e;S.REFLECTION&&o.addFallback(0,"REFLECTION"),S.SPECULAR&&o.addFallback(0,"SPECULAR"),S.BUMP&&o.addFallback(0,"BUMP"),S.PARALLAX&&o.addFallback(1,"PARALLAX"),S.PARALLAX_RHS&&o.addFallback(1,"PARALLAX_RHS"),S.PARALLAXOCCLUSION&&o.addFallback(0,"PARALLAXOCCLUSION"),S.SPECULAROVERALPHA&&o.addFallback(0,"SPECULAROVERALPHA"),S.FOG&&o.addFallback(1,"FOG"),S.POINTSIZE&&o.addFallback(0,"POINTSIZE"),S.LOGARITHMICDEPTH&&o.addFallback(0,"LOGARITHMICDEPTH"),(0,d.v)(S,o,this._maxSimultaneousLights),S.SPECULARTERM&&o.addFallback(0,"SPECULARTERM"),S.DIFFUSEFRESNEL&&o.addFallback(1,"DIFFUSEFRESNEL"),S.OPACITYFRESNEL&&o.addFallback(2,"OPACITYFRESNEL"),S.REFLECTIONFRESNEL&&o.addFallback(3,"REFLECTIONFRESNEL"),S.EMISSIVEFRESNEL&&o.addFallback(4,"EMISSIVEFRESNEL"),S.FRESNEL&&o.addFallback(4,"FRESNEL"),S.MULTIVIEW&&o.addFallback(0,"MULTIVIEW");const m=[T.h.PositionKind];S.NORMAL&&m.push(T.h.NormalKind),S.TANGENT&&m.push(T.h.TangentKind);for(let g=1;g<=6;++g)S["UV"+g]&&m.push(`uv${1===g?"":g}`);S.VERTEXCOLOR&&m.push(T.h.ColorKind),(0,d.z)(m,g,S,o),(0,d.C)(m,S),(0,d.F)(m,g,S),(0,d.y)(m,g,S);let y="default";const L=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],A=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],l=["Material","Scene","Mesh"],x={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:S.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=o,this._eventInfo.fallbackRank=0,this._eventInfo.defines=S,this._eventInfo.uniforms=L,this._eventInfo.attributes=m,this._eventInfo.samplers=A,this._eventInfo.uniformBuffersNames=l,this._eventInfo.customCode=void 0,this._eventInfo.mesh=g,this._eventInfo.indexParameters=x,this._callbackPluginEventGeneric(128,this._eventInfo),U.e.AddUniformsAndSamplers(L,A),z.b.AddUniforms(L),z.b.AddSamplers(A),t.c&&(t.c.PrepareUniforms(L,S),t.c.PrepareSamplers(A,S)),(0,d.$)({uniformsNames:L,uniformBuffersNames:l,samplers:A,defines:S,maxSimultaneousLights:this._maxSimultaneousLights}),(0,G.c)(L);const D={};this.customShaderNameResolve&&(y=this.customShaderNameResolve(y,L,l,A,S,m,D));const a=S.toString(),H=w.effect;let C=r.getEngine().createEffect(y,{attributes:m,uniformsNames:L,uniformBuffersNames:l,samplers:A,defines:a,fallbacks:o,onCompiled:this.onCompiled,onError:this.onError,indexParameters:x,processFinalCode:D.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:S.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([q.e(41),q.e(64)]).then(q.bind(q,13675)),Promise.all([q.e(39),q.e(65)]).then(q.bind(q,13810))]):await Promise.all([Promise.all([q.e(34),q.e(67)]).then(q.bind(q,13882)),Promise.all([q.e(33),q.e(68)]).then(q.bind(q,14034))]),this._shadersLoaded=!0}},i);if(this._eventInfo.customCode=void 0,C)if(this._onEffectCreatedObservable&&(N.effect=C,N.subMesh=w,this._onEffectCreatedObservable.notifyObservers(N)),this.allowShaderHotSwapping&&H&&!C.isReady()){if(C=H,S.markAsUnprocessed(),e=this.isFrozen,R)return S._areLightsDisposed=!0,!1}else r.resetCachedMaterial(),w.setEffect(C,S,this._materialContext)}return!(!w.effect||!w.effect.isReady())&&(S._renderId=r.getRenderId(),o._wasPreviouslyReady=!e,o._wasPreviouslyUsingInstances=R,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const g=this._uniformBuffer;g.addUniform("diffuseLeftColor",4),g.addUniform("diffuseRightColor",4),g.addUniform("opacityParts",4),g.addUniform("reflectionLeftColor",4),g.addUniform("reflectionRightColor",4),g.addUniform("refractionLeftColor",4),g.addUniform("refractionRightColor",4),g.addUniform("emissiveLeftColor",4),g.addUniform("emissiveRightColor",4),g.addUniform("vDiffuseInfos",2),g.addUniform("vAmbientInfos",2),g.addUniform("vOpacityInfos",2),g.addUniform("vReflectionInfos",2),g.addUniform("vReflectionPosition",3),g.addUniform("vReflectionSize",3),g.addUniform("vEmissiveInfos",2),g.addUniform("vLightmapInfos",2),g.addUniform("vSpecularInfos",2),g.addUniform("vBumpInfos",3),g.addUniform("diffuseMatrix",16),g.addUniform("ambientMatrix",16),g.addUniform("opacityMatrix",16),g.addUniform("reflectionMatrix",16),g.addUniform("emissiveMatrix",16),g.addUniform("lightmapMatrix",16),g.addUniform("specularMatrix",16),g.addUniform("bumpMatrix",16),g.addUniform("vTangentSpaceParams",2),g.addUniform("pointSize",1),g.addUniform("alphaCutOff",1),g.addUniform("refractionMatrix",16),g.addUniform("vRefractionInfos",4),g.addUniform("vRefractionPosition",3),g.addUniform("vRefractionSize",3),g.addUniform("vSpecularColor",4),g.addUniform("vEmissiveColor",3),g.addUniform("vDiffuseColor",4),g.addUniform("vAmbientColor",3),g.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(g,w,q){const R=this.Ng(),o=q.materialDefines;if(!o)return;const r=q.effect;if(!r)return;this._activeEffect=r,w.getMeshUniformBuffer().bindToEffect(r,"Mesh"),w.transferToEffect(g),this._uniformBuffer.bindToEffect(r,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,R,w,g,this.isFrozen),U.e.Bind(R.getEngine().currentRenderPassId,this._activeEffect,w,g,this);const T=R.activeCamera;T?this._uniformBuffer.updateFloat4("cameraInfo",T.ri,T.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=q,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),o.OBJECTSPACE_NORMALMAP&&(g.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const z=this._mustRebind(R,r,q,w.visibility);(0,d.c)(w,r);const t=this._uniformBuffer;if(z){if(this.bindViewProjection(r),!t.useUbo||!this.isFrozen||!t.isSync||q._drawWrapper._forceRebindOnNextCall){if(H.FresnelEnabled&&o.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(t.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),t.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&t.updateColor4("opacityParts",new i.Jw(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(t.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),t.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(t.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),t.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(t.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),t.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),R.texturesEnabled){if(this._diffuseTexture&&H.DiffuseTextureEnabled&&(t.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,d.s)(this._diffuseTexture,t,"diffuse")),this._ambientTexture&&H.AmbientTextureEnabled&&(t.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,d.s)(this._ambientTexture,t,"ambient")),this._opacityTexture&&H.OpacityTextureEnabled&&(t.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,d.s)(this._opacityTexture,t,"opacity")),this._hasAlphaChannel()&&t.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&H.ReflectionTextureEnabled){if(t.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),t.Si("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const g=this._reflectionTexture;t.updateVector3("vReflectionPosition",g.boundingBoxPosition),t.updateVector3("vReflectionSize",g.boundingBoxSize)}}else t.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&H.EmissiveTextureEnabled&&(t.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,d.s)(this._emissiveTexture,t,"emissive")),this._lightmapTexture&&H.LightmapTextureEnabled&&(t.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,d.s)(this._lightmapTexture,t,"lightmap")),this._specularTexture&&H.SpecularTextureEnabled&&(t.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,d.s)(this._specularTexture,t,"specular")),this._bumpTexture&&R.getEngine().getCaps().standardDerivatives&&H.BumpTextureEnabled&&(t.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,d.s)(this._bumpTexture,t,"bump"),R._mirroredCameraPosition?t.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):t.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&H.RefractionTextureEnabled){let g=1;if(this._refractionTexture.isCube||(t.Si("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(g=this._refractionTexture.depth)),t.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,g,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const g=this._refractionTexture;t.updateVector3("vRefractionPosition",g.boundingBoxPosition),t.updateVector3("vRefractionSize",g.boundingBoxSize)}}}this.pointsCloud&&t.updateFloat("pointSize",this.pointSize),t.updateColor4("vSpecularColor",this.specularColor,this.specularPower),t.updateColor3("vEmissiveColor",H.EmissiveTextureEnabled?this.emissiveColor:i.Jw.BlackReadOnly),t.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),R.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),t.updateColor3("vAmbientColor",this._globalAmbientColor)}R.texturesEnabled&&(this._diffuseTexture&&H.DiffuseTextureEnabled&&r.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&H.AmbientTextureEnabled&&r.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&H.OpacityTextureEnabled&&r.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&H.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?r.setTexture("reflectionCubeSampler",this._reflectionTexture):r.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&H.EmissiveTextureEnabled&&r.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&H.LightmapTextureEnabled&&r.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&H.SpecularTextureEnabled&&r.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&R.getEngine().getCaps().standardDerivatives&&H.BumpTextureEnabled&&r.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&H.RefractionTextureEnabled&&(this._refractionTexture.isCube?r.setTexture("refractionCubeSampler",this._refractionTexture):r.setTexture("refraction2DSampler",this._refractionTexture))),this.Ng().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(w)&&this.Ng().depthPeelingRenderer.bind(r),this._eventInfo.subMesh=q,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,G.d)(r,this,R),this.bindEyePosition(r)}else R.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(z||!this.isFrozen){var m;if(R.lightsEnabled&&!this._disableLighting&&(0,d.h)(R,w,r,o,this._maxSimultaneousLights),(R.fogEnabled&&w.applyFog&&R.fogMode!==S.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||w.receiveShadows||o.PREPASS)&&this.bindView(r),(0,d.e)(R,w,r),o.NUM_MORPH_INFLUENCERS&&(0,d.n)(w,r),o.BAKED_VERTEX_ANIMATION_TEXTURE)null===(m=w.bakedVertexAnimationManager)||void 0===m||m.bind(r,o.INSTANCES);this.useLogarithmicDepth&&(0,d.j)(o,r,R),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(w,this._activeEffect,q),t.update()}getAnimatables(){const g=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&g.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&g.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&g.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&g.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&g.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&g.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&g.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&g.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&g.push(this._refractionTexture),g}getActiveTextures(){const g=super.getActiveTextures();return this._diffuseTexture&&g.push(this._diffuseTexture),this._ambientTexture&&g.push(this._ambientTexture),this._opacityTexture&&g.push(this._opacityTexture),this._reflectionTexture&&g.push(this._reflectionTexture),this._emissiveTexture&&g.push(this._emissiveTexture),this._specularTexture&&g.push(this._specularTexture),this._bumpTexture&&g.push(this._bumpTexture),this._lightmapTexture&&g.push(this._lightmapTexture),this._refractionTexture&&g.push(this._refractionTexture),g}hasTexture(g){return!!super.hasTexture(g)||(this._diffuseTexture===g||(this._ambientTexture===g||(this._opacityTexture===g||(this._reflectionTexture===g||(this._emissiveTexture===g||(this._specularTexture===g||(this._bumpTexture===g||(this._lightmapTexture===g||this._refractionTexture===g))))))))}dispose(g,w){var q,R,o,r,S,i,T,z,t;w&&(null===(q=this._diffuseTexture)||void 0===q||q.dispose(),null===(R=this._ambientTexture)||void 0===R||R.dispose(),null===(o=this._opacityTexture)||void 0===o||o.dispose(),null===(r=this._reflectionTexture)||void 0===r||r.dispose(),null===(S=this._emissiveTexture)||void 0===S||S.dispose(),null===(i=this._specularTexture)||void 0===i||i.dispose(),null===(T=this._bumpTexture)||void 0===T||T.dispose(),null===(z=this._lightmapTexture)||void 0===z||z.dispose(),null===(t=this._refractionTexture)||void 0===t||t.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(g,w)}clone(g){let w=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],q=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const R=D.c.Clone((()=>new H(g,this.Ng())),this,{cloneTexturesOnlyOnce:w});return R.name=g,R.id=g,this.stencil.copyTo(R.stencil),this._clonePlugins(R,q),R}static Parse(g,w,q){const R=D.c.Parse((()=>new H(g.name,w)),g,w,q);return g.stencil&&R.stencil.parse(g.stencil,w,q),m.e._ParsePlugins(g,R,w,q),R}static get DiffuseTextureEnabled(){return l.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(g){l.e.DiffuseTextureEnabled=g}static get DetailTextureEnabled(){return l.e.DetailTextureEnabled}static set DetailTextureEnabled(g){l.e.DetailTextureEnabled=g}static get AmbientTextureEnabled(){return l.e.AmbientTextureEnabled}static set AmbientTextureEnabled(g){l.e.AmbientTextureEnabled=g}static get OpacityTextureEnabled(){return l.e.OpacityTextureEnabled}static set OpacityTextureEnabled(g){l.e.OpacityTextureEnabled=g}static get ReflectionTextureEnabled(){return l.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(g){l.e.ReflectionTextureEnabled=g}static get EmissiveTextureEnabled(){return l.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(g){l.e.EmissiveTextureEnabled=g}static get SpecularTextureEnabled(){return l.e.SpecularTextureEnabled}static set SpecularTextureEnabled(g){l.e.SpecularTextureEnabled=g}static get BumpTextureEnabled(){return l.e.BumpTextureEnabled}static set BumpTextureEnabled(g){l.e.BumpTextureEnabled=g}static get LightmapTextureEnabled(){return l.e.LightmapTextureEnabled}static set LightmapTextureEnabled(g){l.e.LightmapTextureEnabled=g}static get RefractionTextureEnabled(){return l.e.RefractionTextureEnabled}static set RefractionTextureEnabled(g){l.e.RefractionTextureEnabled=g}static get ColorGradingTextureEnabled(){return l.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(g){l.e.ColorGradingTextureEnabled=g}static get FresnelEnabled(){return l.e.FresnelEnabled}static set FresnelEnabled(g){l.e.FresnelEnabled=g}}H.ForceGLSL=!1,(0,R.e)([(0,o.C)("diffuseTexture")],H.prototype,"_diffuseTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],H.prototype,"diffuseTexture",void 0),(0,R.e)([(0,o.C)("ambientTexture")],H.prototype,"_ambientTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"ambientTexture",void 0),(0,R.e)([(0,o.C)("opacityTexture")],H.prototype,"_opacityTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],H.prototype,"opacityTexture",void 0),(0,R.e)([(0,o.C)("reflectionTexture")],H.prototype,"_reflectionTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"reflectionTexture",void 0),(0,R.e)([(0,o.C)("emissiveTexture")],H.prototype,"_emissiveTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"emissiveTexture",void 0),(0,R.e)([(0,o.C)("specularTexture")],H.prototype,"_specularTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"specularTexture",void 0),(0,R.e)([(0,o.C)("bumpTexture")],H.prototype,"_bumpTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"bumpTexture",void 0),(0,R.e)([(0,o.C)("lightmapTexture")],H.prototype,"_lightmapTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"lightmapTexture",void 0),(0,R.e)([(0,o.C)("refractionTexture")],H.prototype,"_refractionTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"refractionTexture",void 0),(0,R.e)([(0,o.j)("ambient")],H.prototype,"ambientColor",void 0),(0,R.e)([(0,o.j)("diffuse")],H.prototype,"diffuseColor",void 0),(0,R.e)([(0,o.j)("specular")],H.prototype,"specularColor",void 0),(0,R.e)([(0,o.j)("emissive")],H.prototype,"emissiveColor",void 0),(0,R.e)([(0,o.K)()],H.prototype,"specularPower",void 0),(0,R.e)([(0,o.K)("useAlphaFromDiffuseTexture")],H.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],H.prototype,"useAlphaFromDiffuseTexture",void 0),(0,R.e)([(0,o.K)("useEmissiveAsIllumination")],H.prototype,"_useEmissiveAsIllumination",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useEmissiveAsIllumination",void 0),(0,R.e)([(0,o.K)("linkEmissiveWithDiffuse")],H.prototype,"_linkEmissiveWithDiffuse",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"linkEmissiveWithDiffuse",void 0),(0,R.e)([(0,o.K)("useSpecularOverAlpha")],H.prototype,"_useSpecularOverAlpha",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useSpecularOverAlpha",void 0),(0,R.e)([(0,o.K)("useReflectionOverAlpha")],H.prototype,"_useReflectionOverAlpha",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useReflectionOverAlpha",void 0),(0,R.e)([(0,o.K)("disableLighting")],H.prototype,"_disableLighting",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsLightsDirty")],H.prototype,"disableLighting",void 0),(0,R.e)([(0,o.K)("useObjectSpaceNormalMap")],H.prototype,"_useObjectSpaceNormalMap",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useObjectSpaceNormalMap",void 0),(0,R.e)([(0,o.K)("useParallax")],H.prototype,"_useParallax",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useParallax",void 0),(0,R.e)([(0,o.K)("useParallaxOcclusion")],H.prototype,"_useParallaxOcclusion",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useParallaxOcclusion",void 0),(0,R.e)([(0,o.K)()],H.prototype,"parallaxScaleBias",void 0),(0,R.e)([(0,o.K)("roughness")],H.prototype,"_roughness",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"roughness",void 0),(0,R.e)([(0,o.K)()],H.prototype,"indexOfRefraction",void 0),(0,R.e)([(0,o.K)()],H.prototype,"invertRefractionY",void 0),(0,R.e)([(0,o.K)()],H.prototype,"alphaCutOff",void 0),(0,R.e)([(0,o.K)("useLightmapAsShadowmap")],H.prototype,"_useLightmapAsShadowmap",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useLightmapAsShadowmap",void 0),(0,R.e)([(0,o.q)("diffuseFresnelParameters")],H.prototype,"_diffuseFresnelParameters",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelDirty")],H.prototype,"diffuseFresnelParameters",void 0),(0,R.e)([(0,o.q)("opacityFresnelParameters")],H.prototype,"_opacityFresnelParameters",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],H.prototype,"opacityFresnelParameters",void 0),(0,R.e)([(0,o.q)("reflectionFresnelParameters")],H.prototype,"_reflectionFresnelParameters",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelDirty")],H.prototype,"reflectionFresnelParameters",void 0),(0,R.e)([(0,o.q)("refractionFresnelParameters")],H.prototype,"_refractionFresnelParameters",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelDirty")],H.prototype,"refractionFresnelParameters",void 0),(0,R.e)([(0,o.q)("emissiveFresnelParameters")],H.prototype,"_emissiveFresnelParameters",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelDirty")],H.prototype,"emissiveFresnelParameters",void 0),(0,R.e)([(0,o.K)("useReflectionFresnelFromSpecular")],H.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsFresnelDirty")],H.prototype,"useReflectionFresnelFromSpecular",void 0),(0,R.e)([(0,o.K)("useGlossinessFromSpecularMapAlpha")],H.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,R.e)([(0,o.K)("maxSimultaneousLights")],H.prototype,"_maxSimultaneousLights",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsLightsDirty")],H.prototype,"maxSimultaneousLights",void 0),(0,R.e)([(0,o.K)("invertNormalMapX")],H.prototype,"_invertNormalMapX",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"invertNormalMapX",void 0),(0,R.e)([(0,o.K)("invertNormalMapY")],H.prototype,"_invertNormalMapY",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"invertNormalMapY",void 0),(0,R.e)([(0,o.K)("twoSidedLighting")],H.prototype,"_twoSidedLighting",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsTexturesDirty")],H.prototype,"twoSidedLighting",void 0),(0,R.e)([(0,o.K)("applyDecalMapAfterDetailMap")],H.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,R.e)([(0,o.d)("_markAllSubMeshesAsMiscDirty")],H.prototype,"applyDecalMapAfterDetailMap",void 0),(0,A.g)("BABYLON.StandardMaterial",H),S.c.DefaultMaterialFactory=g=>new H("default material",g)}}]);