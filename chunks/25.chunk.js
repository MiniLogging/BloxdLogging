"use strict";(self.z22hkk7o33f=self.z22hkk7o33f||[]).push([[25],{13250:(U,G,C)=>{C.d(G,{b:()=>T});var L=C(12876),X=C(13178),l=C(12884),t=C(13244),E=C(13238),K=C(13252),P=C(13217);class O extends E.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class T extends K.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(U){let G=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(U,"DetailMap",140,new O,G),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=X.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=U._dirtyCallbacks[1]}isReadyForSubMesh(U,G,C){return!this._isEnabled||!(U._areTexturesDirty&&G.texturesEnabled&&C.getCaps().standardDerivatives&&this._texture&&t.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(U,G){if(this._isEnabled){U.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const C=G.getEngine();U._areTexturesDirty&&(C.getCaps().standardDerivatives&&this._texture&&t.c.DetailTextureEnabled&&this._isEnabled?((0,P._)(this._texture,U,"DETAIL"),U.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):U.DETAIL=!1)}else U.DETAIL=!1}bindForSubMesh(U,G){if(!this._isEnabled)return;const C=this._material.isFrozen;U.useUbo&&C&&U.isSync||this._texture&&t.c.DetailTextureEnabled&&(U.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,P.v)(this._texture,U,"detail")),G.texturesEnabled&&this._texture&&t.c.DetailTextureEnabled&&U.setTexture("detailSampler",this._texture)}hasTexture(U){return this._texture===U}getActiveTextures(U){this._texture&&U.push(this._texture)}getAnimatables(U){this._texture&&this._texture.animations&&this._texture.animations.length>0&&U.push(this._texture)}dispose(U){var G;U&&(null===(G=this._texture)||void 0===G||G.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(U){U.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,L.d)([(0,l.z)("detailTexture"),(0,l.b)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"texture",void 0),(0,L.d)([(0,l.H)()],T.prototype,"diffuseBlendLevel",void 0),(0,L.d)([(0,l.H)()],T.prototype,"roughnessBlendLevel",void 0),(0,L.d)([(0,l.H)()],T.prototype,"bumpLevel",void 0),(0,L.d)([(0,l.H)(),(0,l.b)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"normalBlendMethod",void 0),(0,L.d)([(0,l.H)(),(0,l.b)("_markAllSubMeshesAsTexturesDirty")],T.prototype,"isEnabled",void 0)},13238:(U,G,C)=>{C.d(G,{c:()=>L});class L{constructor(U){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=U,U)for(const G in U)Object.prototype.hasOwnProperty.call(U,G)&&this._setDefaultValue(G)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let U=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||U,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const U of Object.keys(this))"_"!==U[0]&&this._keys.push(U);if(this._externalProperties)for(const U in this._externalProperties)-1===this._keys.indexOf(U)&&this._keys.push(U)}isEqual(U){if(this._keys.length!==U._keys.length)return!1;for(let G=0;G<this._keys.length;G++){const C=this._keys[G];if(this[C]!==U[C])return!1}return!0}cloneTo(U){this._keys.length!==U._keys.length&&(U._keys=this._keys.slice(0));for(let G=0;G<this._keys.length;G++){const C=this._keys[G];U[C]=this[C]}}reset(){for(const U of this._keys)this._setDefaultValue(U)}_setDefaultValue(U){var G,C,L,X,l;const t=null!==(G=null===(C=this._externalProperties)||void 0===C||null===(L=C[U])||void 0===L?void 0:L.type)&&void 0!==G?G:typeof this[U],E=null===(X=this._externalProperties)||void 0===X||null===(l=X[U])||void 0===l?void 0:l.default;switch(t){case"number":this[U]=null!==E&&void 0!==E?E:0;break;case"string":this[U]=null!==E&&void 0!==E?E:"";break;default:this[U]=null!==E&&void 0!==E&&E}}toString(){let U="";for(let G=0;G<this._keys.length;G++){const C=this._keys[G],L=this[C];switch(typeof L){case"number":case"string":U+="#define "+C+" "+L+"\n";break;default:L&&(U+="#define "+C+"\n")}}return U}}},13244:(U,G,C)=>{C.d(G,{c:()=>X});var L=C(12800);class X{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(U){this._DiffuseTextureEnabled!==U&&(this._DiffuseTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(U){this._BaseWeightTextureEnabled!==U&&(this._BaseWeightTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(U){this._BaseDiffuseRoughnessTextureEnabled!==U&&(this._BaseDiffuseRoughnessTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(U){this._DetailTextureEnabled!==U&&(this._DetailTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(U){this._DecalMapEnabled!==U&&(this._DecalMapEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(U){this._AmbientTextureEnabled!==U&&(this._AmbientTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(U){this._OpacityTextureEnabled!==U&&(this._OpacityTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(U){this._ReflectionTextureEnabled!==U&&(this._ReflectionTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(U){this._EmissiveTextureEnabled!==U&&(this._EmissiveTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(U){this._SpecularTextureEnabled!==U&&(this._SpecularTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(U){this._BumpTextureEnabled!==U&&(this._BumpTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(U){this._LightmapTextureEnabled!==U&&(this._LightmapTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(U){this._RefractionTextureEnabled!==U&&(this._RefractionTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(U){this._ColorGradingTextureEnabled!==U&&(this._ColorGradingTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(U){this._FresnelEnabled!==U&&(this._FresnelEnabled=U,L.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(U){this._ClearCoatTextureEnabled!==U&&(this._ClearCoatTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(U){this._ClearCoatBumpTextureEnabled!==U&&(this._ClearCoatBumpTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(U){this._ClearCoatTintTextureEnabled!==U&&(this._ClearCoatTintTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(U){this._SheenTextureEnabled!==U&&(this._SheenTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(U){this._AnisotropicTextureEnabled!==U&&(this._AnisotropicTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(U){this._ThicknessTextureEnabled!==U&&(this._ThicknessTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(U){this._RefractionIntensityTextureEnabled!==U&&(this._RefractionIntensityTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(U){this._TranslucencyIntensityTextureEnabled!==U&&(this._TranslucencyIntensityTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(U){this._TranslucencyColorTextureEnabled!==U&&(this._TranslucencyColorTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(U){this._IridescenceTextureEnabled!==U&&(this._IridescenceTextureEnabled=U,L.b.MarkAllMaterialsAsDirty(1))}}X._DiffuseTextureEnabled=!0,X._BaseWeightTextureEnabled=!0,X._BaseDiffuseRoughnessTextureEnabled=!0,X._DetailTextureEnabled=!0,X._DecalMapEnabled=!0,X._AmbientTextureEnabled=!0,X._OpacityTextureEnabled=!0,X._ReflectionTextureEnabled=!0,X._EmissiveTextureEnabled=!0,X._SpecularTextureEnabled=!0,X._BumpTextureEnabled=!0,X._LightmapTextureEnabled=!0,X._RefractionTextureEnabled=!0,X._ColorGradingTextureEnabled=!0,X._FresnelEnabled=!0,X._ClearCoatTextureEnabled=!0,X._ClearCoatBumpTextureEnabled=!0,X._ClearCoatTintTextureEnabled=!0,X._SheenTextureEnabled=!0,X._AnisotropicTextureEnabled=!0,X._ThicknessTextureEnabled=!0,X._RefractionIntensityTextureEnabled=!0,X._TranslucencyIntensityTextureEnabled=!0,X._TranslucencyColorTextureEnabled=!0,X._IridescenceTextureEnabled=!0},13257:(U,G,C)=>{C.d(G,{e:()=>l});var L,X=C(12896);!function(U){U[U.Zero=0]="Zero",U[U.One=1]="One",U[U.MaxViewZ=2]="MaxViewZ"}(L||(L={}));class l{static CreateConfiguration(U){return l._Configurations[U]={defines:{},previousWorldMatrices:{},previousViewProjection:X.Matrix.Zero(),currentViewProjection:X.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},l._Configurations[U]}static DeleteConfiguration(U){delete l._Configurations[U]}static GetConfiguration(U){return l._Configurations[U]}static AddUniformsAndSamplers(U,G){U.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(U,G){for(const C of G)if(C.zE)for(const G of C.zE)G._removeDrawWrapper(U)}static PrepareDefines(U,G,C){if(!C._arePrePassDirty)return;const L=l._Configurations[U];if(!L)return;C.PREPASS=!0,C.PREPASS_COLOR=!1,C.PREPASS_COLOR_INDEX=-1;let X=0;for(let t=0;t<l.GeometryTextureDescriptions.length;t++){const U=l.GeometryTextureDescriptions[t],G=U.define,E=U.defineIndex,K=L.defines[E];void 0!==K?(C[G]=!0,C[E]=K,X++):(C[G]=!1,delete C[E])}C.SCENE_MRT_COUNT=X,C.BONES_VELOCITY_ENABLED=G.useBones&&G.computeBonesUsingShaders&&G.skeleton&&!G.skeleton.isUsingTextureForMatrices&&-1===L.excludedSkinnedMesh.indexOf(G)}static Bind(U,G,C,L,X){const t=l._Configurations[U];if(!t)return;const E=C.wU(),K=E.getEngine();if(t.reverseCulling&&K.setStateCullFaceType(E._mirroredCameraPosition?X.cullBackFaces:!X.cullBackFaces),(void 0!==t.defines.PREPASS_VELOCITY_INDEX||void 0!==t.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(t.previousWorldMatrices[C.uniqueId]||(t.previousWorldMatrices[C.uniqueId]=L.clone()),t.previousViewProjection||(t.previousViewProjection=E.getTransformMatrix().clone(),t.currentViewProjection=E.getTransformMatrix().clone()),t.currentViewProjection.updateFlag!==E.getTransformMatrix().updateFlag?(t.lastUpdateFrameId=K.frameId,t.previousViewProjection.L(t.currentViewProjection),t.currentViewProjection.L(E.getTransformMatrix())):t.lastUpdateFrameId!==K.frameId&&(t.lastUpdateFrameId=K.frameId,t.previousViewProjection.L(t.currentViewProjection)),G.setMatrix("previousWorld",t.previousWorldMatrices[C.uniqueId]),G.setMatrix("previousViewProjection",t.previousViewProjection),t.previousWorldMatrices[C.uniqueId]=L.clone(),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const U=C.skeleton;if(!U.isUsingTextureForMatrices||-1===G.getUniformIndex("boneTextureWidth")){const L=U.getTransformMatrices(C);L&&(t.previousBones[C.uniqueId]||(t.previousBones[C.uniqueId]=L.slice()),G.setMatrices("mPreviousBones",t.previousBones[C.uniqueId]),t.previousBones[C.uniqueId].set(L))}}}}l.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],l._Configurations={}},13252:(U,G,C)=>{C.d(G,{e:()=>H});var L=C(12876),X=C(12884),l=C(13178),t=C(12763),E=C(12786),K=C(12808);const P=new RegExp("^([gimus]+)!");class O{constructor(U){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=U,this._scene=U.wU(),this._engine=this._scene.getEngine()}_addPlugin(U){for(let L=0;L<this._plugins.length;++L)if(this._plugins[L].name===U.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!U.isCompatible(this._material.shaderLanguage))throw'The plugin "'.concat(U.name,'" can\'t be added to the material "').concat(this._material.name,'" because the plugin is not compatible with the shader language of the material.');const G=U.getClassName();O._MaterialPluginClassToMainDefine[G]||(O._MaterialPluginClassToMainDefine[G]="MATERIALPLUGIN_"+ ++O._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(U,G)=>this._handlePluginEvent(U,G),this._plugins.push(U),this._plugins.sort(((U,G)=>U.priority-G.priority)),this._codeInjectionPoints={};const C={};C[O._MaterialPluginClassToMainDefine[G]]={type:"boolean",default:!0};for(const L of this._plugins)L.collectDefines(C),this._collectPointNames("vertex",L.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",L.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=C,!0}_activatePlugin(U){-1===this._activePlugins.indexOf(U)&&(this._activePlugins.push(U),this._activePlugins.sort(((U,G)=>U.priority-G.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),U.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(U),this._activePluginsForExtraEvents.sort(((U,G)=>U.priority-G.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(U){for(let G=0;G<this._plugins.length;++G)if(this._plugins[G].name===U)return this._plugins[G];return null}_handlePluginEventIsReadyForSubMesh(U){let G=!0;for(const C of this._activePlugins)G=G&&C.isReadyForSubMesh(U.defines,this._scene,this._engine,U.subMesh);U.isReadyForSubMesh=G}_handlePluginEventPrepareDefinesBeforeAttributes(U){for(const G of this._activePlugins)G.prepareDefinesBeforeAttributes(U.defines,this._scene,U.mesh)}_handlePluginEventPrepareDefines(U){for(const G of this._activePlugins)G.prepareDefines(U.defines,this._scene,U.mesh)}_handlePluginEventHardBindForSubMesh(U){for(const G of this._activePluginsForExtraEvents)G.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,U.subMesh)}_handlePluginEventBindForSubMesh(U){for(const G of this._activePlugins)G.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,U.subMesh)}_handlePluginEventHasRenderTargetTextures(U){let G=!1;for(const C of this._activePluginsForExtraEvents)if(G=C.hasRenderTargetTextures(),G)break;U.hasRenderTargetTextures=G}_handlePluginEventFillRenderTargetTextures(U){for(const G of this._activePluginsForExtraEvents)G.fillRenderTargetTextures(U.renderTargets)}_handlePluginEvent(U,G){switch(U){case 512:{const U=G;for(const G of this._activePlugins)G.getActiveTextures(U.activeTextures);break}case 256:{const U=G;for(const G of this._activePlugins)G.getAnimatables(U.animatables);break}case 1024:{const U=G;let C=!1;for(const G of this._activePlugins)if(C=G.hasTexture(U.texture),C)break;U.hasTexture=C;break}case 2:{const U=G;for(const G of this._plugins)G.dispose(U.forceDisposeTextures);break}case 4:G.defineNames=this._defineNamesFromPlugins;break;case 128:{const U=G;for(const G of this._activePlugins)U.fallbackRank=G.addFallbacks(U.defines,U.fallbacks,U.fallbackRank),G.getAttributes(U.attributes,this._scene,U.mesh);this._uniformList.length>0&&U.uniforms.push(...this._uniformList),this._samplerList.length>0&&U.samplers.push(...this._samplerList),this._uboList.length>0&&U.uniformBuffersNames.push(...this._uboList),U.customCode=this._injectCustomCode(U,U.customCode);break}case 8:{const U=G;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const L=1===this._material.shaderLanguage;for(const G of this._plugins){const X=G.getUniforms(this._material.shaderLanguage);if(X){if(X.ubo)for(const G of X.ubo){if(G.size&&G.type){var C;const X=null!==(C=G.arraySize)&&void 0!==C?C:0;if(U.ubo.addUniform(G.name,G.size,X),L){let U;switch(G.type){case"mat4":U="mat4x4f";break;case"float":U="f32";break;default:U="".concat(G.type,"f")}this._uboDeclaration+=X>0?"uniform ".concat(G.name,": array<").concat(U,", ").concat(X,">;\n"):"uniform ".concat(G.name,": ").concat(U,";\n")}else this._uboDeclaration+="".concat(G.type," ").concat(G.name).concat(X>0?"[".concat(X,"]"):"",";\n")}this._uniformList.push(G.name)}X.vertex&&(this._vertexDeclaration+=X.vertex+"\n"),X.fragment&&(this._fragmentDeclaration+=X.fragment+"\n")}G.getSamplers(this._samplerList),G.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(U,G){if(G)for(const C in G)this._codeInjectionPoints[U]||(this._codeInjectionPoints[U]={}),this._codeInjectionPoints[U][C]=!0}_injectCustomCode(U,G){return(C,L)=>{var X;G&&(L=G(C,L)),this._uboDeclaration&&(L=L.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(L=L.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(L=L.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const l=null===(X=this._codeInjectionPoints)||void 0===X?void 0:X[C];if(!l)return L;let t=null;for(let G in l){let X="";for(const L of this._activePlugins){var O;let l=null===(O=L.getCustomCode(C,this._material.shaderLanguage))||void 0===O?void 0:O[G];if(l){if(L.resolveIncludes){if(null===t){const G=0;t={defines:[],indexParameters:U.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:K.d.GetShadersRepository(G),includesShadersStore:K.d.GetIncludesShadersStore(G),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,gt:this._engine.gt,processCodeAfterIncludes:void 0}}t.isFragment="fragment"===C,(0,E.m)(l,t,(U=>l=U))}X+=l+"\n"}}if(X.length>0)if("!"===G.charAt(0)){G=G.substring(1);let U="g";if("!"===G.charAt(0))U="",G=G.substring(1);else{const C=P.exec(G);C&&C.length>=2&&(U=C[1],G=G.substring(U.length+1))}U.indexOf("g")<0&&(U+="g");const C=L,l=new RegExp(G,U);let t=l.exec(C);for(;null!==t;){let U=X;for(let G=0;G<t.length;++G)U=U.replace("$"+G,t[G]);L=L.replace(t[0],U),t=l.exec(C)}}else{const U="#define "+G;L=L.replace(U,"\n"+X+"\n"+U)}}return L}}}O._MaterialPluginClassToMainDefine={},O._MaterialPluginCounter=0,t.d.OnEnginesDisposedObservable.add((()=>{V()}));const T=[];let D=!1,y=null;function V(){T.length=0,D=!1,l.c.OnEventObservable.remove(y),y=null}var p=C(12928),I=C(12850);class H{isCompatible(U){return 0===U}_enable(U){U&&this._pluginManager._activatePlugin(this)}constructor(U,G,C,L){let X=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],t=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=U,this.name=G,this.priority=C,this.resolveIncludes=t,U.pluginManager||(U.pluginManager=new O(U),U.aE.add((()=>{U.pluginManager=void 0}))),this._pluginDefineNames=L,this._pluginManager=U.pluginManager,X&&this._pluginManager._addPlugin(this),l&&this._enable(!0),this.markAllDefinesAsDirty=U._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(U,G,C,L){return!0}hardBindForSubMesh(U,G,C,L){}bindForSubMesh(U,G,C,L){}dispose(U){}getCustomCode(U){return null}collectDefines(U){if(this._pluginDefineNames)for(const G of Object.keys(this._pluginDefineNames)){if("_"===G[0])continue;const C=typeof this._pluginDefineNames[G];U[G]={type:"number"===C?"number":"string"===C?"string":"boolean"===C?"boolean":"object",default:this._pluginDefineNames[G]}}}prepareDefinesBeforeAttributes(U,G,C){}prepareDefines(U,G,C){}hasTexture(U){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(U){}getActiveTextures(U){}getAnimatables(U){}addFallbacks(U,G,C){return C}getSamplers(U){}getAttributes(U,G,C){}getUniformBuffersNames(U){}getUniforms(){return{}}copyTo(U){p.c.Clone((()=>U),this)}serialize(){return p.c.Serialize(this)}parse(U,G,C){p.c.Parse((()=>this),U,G,C)}}(0,L.d)([(0,X.H)()],H.prototype,"name",void 0),(0,L.d)([(0,X.H)()],H.prototype,"priority",void 0),(0,L.d)([(0,X.H)()],H.prototype,"resolveIncludes",void 0),(0,L.d)([(0,X.H)()],H.prototype,"registerForExtraEvents",void 0),(0,I.e)("BABYLON.MaterialPluginBase",H)},13233:(U,G,C)=>{C.d(G,{e:()=>L});class L{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(U){U.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(U){}bindForSubMesh(U,G,C,L,X){if(G.prePassRenderer&&G.prePassRenderer.enabled&&G.prePassRenderer.currentRTisSceneRT&&(-1!==G.prePassRenderer.getIndex(2)||-1!==G.prePassRenderer.getIndex(11))){this.previousWorldMatrices[C.uniqueId]||(this.previousWorldMatrices[C.uniqueId]=L.clone()),this.previousViewProjection||(this.previousViewProjection=G.getTransformMatrix().clone(),this.currentViewProjection=G.getTransformMatrix().clone());const X=G.getEngine();this.currentViewProjection.updateFlag!==G.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.L(this.currentViewProjection),this.currentViewProjection.L(G.getTransformMatrix())):this._lastUpdateFrameId!==X.frameId&&(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.L(this.currentViewProjection)),U.setMatrix("previousWorld",this.previousWorldMatrices[C.uniqueId]),U.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[C.uniqueId]=L.clone()}}}},13228:(U,G,C)=>{C.d(G,{xG:()=>v});var L=C(12876),X=C(12884),l=C(12982),t=C(13097),E=C(12934),K=C(12957),P=C(13233),O=C(13103),T=C(13178),D=C(13238),y=C(13175),V=C(12873),p=C(12850),I=C(13244),H=C(13170),x=C(13250),h=C(13224),N=C(13217),b=C(12928),o=C(13257);const w={effect:null,subMesh:null};class S extends D.c{constructor(U){super(U),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(U){const G=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const C of G)this[C]=C===U}}class v extends y.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(U){this._attachImageProcessingConfiguration(U),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(U){U!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=U||this.wU().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(U){this.imageProcessingConfiguration.colorCurvesEnabled=U}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(U){this.imageProcessingConfiguration.colorGradingEnabled=U}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(U){this._imageProcessingConfiguration.toneMappingEnabled=U}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(U){this._imageProcessingConfiguration.exposure=U}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(U){this._imageProcessingConfiguration.contrast=U}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(U){this._imageProcessingConfiguration.colorGradingTexture=U}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(U){this._imageProcessingConfiguration.colorCurves=U}get canRenderToMRT(){return!0}constructor(U,G){super(U,G,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||v.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new E.hG(0,0,0),this.diffuseColor=new E.hG(1,1,1),this.specularColor=new E.hG(1,1,1),this.emissiveColor=new E.hG(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new l.f(16),this._globalAmbientColor=new E.hG(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new x.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new P.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"xG"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===T.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.jE&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==T.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.jE||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(U,G){let L=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const X=G._drawWrapper;if(X.effect&&this.isFrozen&&X._wasPreviouslyReady&&X._wasPreviouslyUsingInstances===L)return!0;G.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),G.materialDefines=new S(this._eventInfo.defineNames));const l=this.wU(),t=G.materialDefines;if(this._isReadyForSubMesh(G))return!0;const E=l.getEngine();t._needNormals=(0,N.X)(l,U,t,!0,this._maxSimultaneousLights,this._disableLighting),(0,N.bb)(l,t);const T=this.needAlphaBlendingForMesh(U)&&this.wU().useOrderIndependentTransparency;if((0,N.hb)(l,t,this.canRenderToMRT&&!T),(0,N.eb)(l,t,T),o.e.PrepareDefines(E.currentRenderPassId,U,t),t._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,t._needUVs=!1;for(let U=1;U<=6;++U)t["MAINUV"+U]=!1;if(l.texturesEnabled){if(t.DIFFUSEDIRECTUV=0,t.BUMPDIRECTUV=0,t.AMBIENTDIRECTUV=0,t.OPACITYDIRECTUV=0,t.EMISSIVEDIRECTUV=0,t.SPECULARDIRECTUV=0,t.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&v.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._diffuseTexture,t,"DIFFUSE")}else t.DIFFUSE=!1;if(this._ambientTexture&&v.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._ambientTexture,t,"AMBIENT")}else t.AMBIENT=!1;if(this._opacityTexture&&v.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._opacityTexture,t,"OPACITY"),t.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else t.OPACITY=!1;if(this._reflectionTexture&&v.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(t._needNormals=!0,t.REFLECTION=!0,t.ROUGHNESS=this._roughness>0,t.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,t.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===V.c.INVCUBIC_MODE,t.REFLECTIONMAP_3D=this._reflectionTexture.isCube,t.REFLECTIONMAP_OPPOSITEZ=t.REFLECTIONMAP_3D&&this.wU().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,t.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case V.c.EXPLICIT_MODE:t.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case V.c.PLANAR_MODE:t.setReflectionMode("REFLECTIONMAP_PLANAR");break;case V.c.PROJECTION_MODE:t.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case V.c.SKYBOX_MODE:t.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case V.c.SPHERICAL_MODE:t.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case V.c.EQUIRECTANGULAR_MODE:t.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case V.c.FIXED_EQUIRECTANGULAR_MODE:t.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case V.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:t.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case V.c.CUBIC_MODE:case V.c.INVCUBIC_MODE:default:t.setReflectionMode("REFLECTIONMAP_CUBIC")}t.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else t.REFLECTION=!1,t.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&v.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._emissiveTexture,t,"EMISSIVE")}else t.EMISSIVE=!1;if(this._lightmapTexture&&v.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._lightmapTexture,t,"LIGHTMAP"),t.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,t.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else t.LIGHTMAP=!1;if(this._specularTexture&&v.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,N._)(this._specularTexture,t,"SPECULAR"),t.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else t.SPECULAR=!1;if(l.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&v.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,N._)(this._bumpTexture,t,"BUMP"),t.PARALLAX=this._useParallax,t.PARALLAX_RHS=l.useRightHandedSystem,t.PARALLAXOCCLUSION=this._useParallaxOcclusion,t.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else t.BUMP=!1,t.PARALLAX=!1,t.PARALLAX_RHS=!1,t.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&v.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;t._needUVs=!0,t.REFRACTION=!0,t.REFRACTIONMAP_3D=this._refractionTexture.isCube,t.RGBDREFRACTION=this._refractionTexture.isRGBD,t.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else t.REFRACTION=!1;t.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else t.DIFFUSE=!1,t.AMBIENT=!1,t.OPACITY=!1,t.REFLECTION=!1,t.EMISSIVE=!1,t.LIGHTMAP=!1,t.BUMP=!1,t.REFRACTION=!1;t.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),t.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,t.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,t.SPECULAROVERALPHA=this._useSpecularOverAlpha,t.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,t.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,t.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(U)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=t,this._eventInfo.subMesh=G,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(t._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(t),t.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,t.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(t._areFresnelDirty&&(v.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(t.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,t.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,t.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,t.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,t.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,t.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,t._needNormals=!0,t.FRESNEL=!0):t.FRESNEL=!1),t.AREALIGHTUSED)for(let C=0;C<U.lightSources.length;C++)if(!U.lightSources[C]._isReady())return!1;(0,N.ab)(U,l,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(U),t,this._applyDecalMapAfterDetailMap),(0,N.U)(l,E,this,t,L,null,G.getRenderingMesh().hasThinInstances),this._eventInfo.defines=t,this._eventInfo.mesh=U,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,N.R)(U,t,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let D=!1;if(t.isDirty){const L=t._areLightsDisposed;t.markAsProcessed();const X=new H.d;t.REFLECTION&&X.addFallback(0,"REFLECTION"),t.SPECULAR&&X.addFallback(0,"SPECULAR"),t.BUMP&&X.addFallback(0,"BUMP"),t.PARALLAX&&X.addFallback(1,"PARALLAX"),t.PARALLAX_RHS&&X.addFallback(1,"PARALLAX_RHS"),t.PARALLAXOCCLUSION&&X.addFallback(0,"PARALLAXOCCLUSION"),t.SPECULAROVERALPHA&&X.addFallback(0,"SPECULAROVERALPHA"),t.FOG&&X.addFallback(1,"FOG"),t.POINTSIZE&&X.addFallback(0,"POINTSIZE"),t.LOGARITHMICDEPTH&&X.addFallback(0,"LOGARITHMICDEPTH"),(0,N.x)(t,X,this._maxSimultaneousLights),t.SPECULARTERM&&X.addFallback(0,"SPECULARTERM"),t.DIFFUSEFRESNEL&&X.addFallback(1,"DIFFUSEFRESNEL"),t.OPACITYFRESNEL&&X.addFallback(2,"OPACITYFRESNEL"),t.REFLECTIONFRESNEL&&X.addFallback(3,"REFLECTIONFRESNEL"),t.EMISSIVEFRESNEL&&X.addFallback(4,"EMISSIVEFRESNEL"),t.FRESNEL&&X.addFallback(4,"FRESNEL"),t.MULTIVIEW&&X.addFallback(0,"MULTIVIEW");const T=[K.e.PositionKind];t.NORMAL&&T.push(K.e.NormalKind),t.TANGENT&&T.push(K.e.TangentKind);for(let U=1;U<=6;++U)t["UV"+U]&&T.push("uv".concat(1===U?"":U));t.VERTEXCOLOR&&T.push(K.e.ColorKind),(0,N.F)(T,U,t,X),(0,N.G)(T,t),(0,N.K)(T,U,t),(0,N.B)(T,U,t);let y="default";const V=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],p=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],I=["Material","Scene","Mesh"],x={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:t.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=X,this._eventInfo.fallbackRank=0,this._eventInfo.defines=t,this._eventInfo.uniforms=V,this._eventInfo.attributes=T,this._eventInfo.samplers=p,this._eventInfo.uniformBuffersNames=I,this._eventInfo.customCode=void 0,this._eventInfo.mesh=U,this._eventInfo.indexParameters=x,this._callbackPluginEventGeneric(128,this._eventInfo),o.e.AddUniformsAndSamplers(V,p),P.e.AddUniforms(V),P.e.AddSamplers(p),O.d&&(O.d.PrepareUniforms(V,t),O.d.PrepareSamplers(p,t)),(0,N.kb)({uniformsNames:V,uniformBuffersNames:I,samplers:p,defines:t,maxSimultaneousLights:this._maxSimultaneousLights}),(0,h.b)(V);const b={};this.customShaderNameResolve&&(y=this.customShaderNameResolve(y,V,I,p,t,T,b));const S=t.toString(),v=G.effect;let u=l.getEngine().createEffect(y,{attributes:T,uniformsNames:V,uniformBuffersNames:I,samplers:p,defines:S,fallbacks:X,onCompiled:this.onCompiled,onError:this.onError,indexParameters:x,processFinalCode:b.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:t.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([C.e(41),C.e(64)]).then(C.bind(C,15014)),Promise.all([C.e(39),C.e(65)]).then(C.bind(C,15148))]):await Promise.all([Promise.all([C.e(34),C.e(67)]).then(C.bind(C,15220)),Promise.all([C.e(33),C.e(68)]).then(C.bind(C,15367))]),this._shadersLoaded=!0}},E);if(this._eventInfo.customCode=void 0,u)if(this._onEffectCreatedObservable&&(w.effect=u,w.subMesh=G,this._onEffectCreatedObservable.notifyObservers(w)),this.allowShaderHotSwapping&&v&&!u.isReady()){if(u=v,t.markAsUnprocessed(),D=this.isFrozen,L)return t._areLightsDisposed=!0,!1}else l.resetCachedMaterial(),G.setEffect(u,t,this._materialContext)}return!(!G.effect||!G.effect.isReady())&&(t._renderId=l.getRenderId(),X._wasPreviouslyReady=!D,X._wasPreviouslyUsingInstances=L,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const U=this._uniformBuffer;U.addUniform("diffuseLeftColor",4),U.addUniform("diffuseRightColor",4),U.addUniform("opacityParts",4),U.addUniform("reflectionLeftColor",4),U.addUniform("reflectionRightColor",4),U.addUniform("refractionLeftColor",4),U.addUniform("refractionRightColor",4),U.addUniform("emissiveLeftColor",4),U.addUniform("emissiveRightColor",4),U.addUniform("vDiffuseInfos",2),U.addUniform("vAmbientInfos",2),U.addUniform("vOpacityInfos",2),U.addUniform("vReflectionInfos",2),U.addUniform("vReflectionPosition",3),U.addUniform("vReflectionSize",3),U.addUniform("vEmissiveInfos",2),U.addUniform("vLightmapInfos",2),U.addUniform("vSpecularInfos",2),U.addUniform("vBumpInfos",3),U.addUniform("diffuseMatrix",16),U.addUniform("ambientMatrix",16),U.addUniform("opacityMatrix",16),U.addUniform("reflectionMatrix",16),U.addUniform("emissiveMatrix",16),U.addUniform("lightmapMatrix",16),U.addUniform("specularMatrix",16),U.addUniform("bumpMatrix",16),U.addUniform("vTangentSpaceParams",2),U.addUniform("pointSize",1),U.addUniform("alphaCutOff",1),U.addUniform("refractionMatrix",16),U.addUniform("vRefractionInfos",4),U.addUniform("vRefractionPosition",3),U.addUniform("vRefractionSize",3),U.addUniform("vSpecularColor",4),U.addUniform("vEmissiveColor",3),U.addUniform("vDiffuseColor",4),U.addUniform("vAmbientColor",3),U.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(U,G,C){const L=this.wU(),X=C.materialDefines;if(!X)return;const l=C.effect;if(!l)return;this._activeEffect=l,G.getMeshUniformBuffer().bindToEffect(l,"Mesh"),G.transferToEffect(U),this._uniformBuffer.bindToEffect(l,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,L,G,U,this.isFrozen),o.e.Bind(L.getEngine().currentRenderPassId,this._activeEffect,G,U,this);const K=L.activeCamera;K?this._uniformBuffer.updateFloat4("cameraInfo",K.AE,K.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=C,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),X.OBJECTSPACE_NORMALMAP&&(U.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const P=this._mustRebind(L,l,C,G.visibility);(0,N.e)(G,l);const O=this._uniformBuffer;if(P){if(this.bindViewProjection(l),!O.useUbo||!this.isFrozen||!O.isSync||C._drawWrapper._forceRebindOnNextCall){if(v.FresnelEnabled&&X.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(O.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),O.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&O.updateColor4("opacityParts",new E.hG(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(O.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),O.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(O.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),O.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(O.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),O.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),L.texturesEnabled){if(this._diffuseTexture&&v.DiffuseTextureEnabled&&(O.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,N.v)(this._diffuseTexture,O,"diffuse")),this._ambientTexture&&v.AmbientTextureEnabled&&(O.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,N.v)(this._ambientTexture,O,"ambient")),this._opacityTexture&&v.OpacityTextureEnabled&&(O.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,N.v)(this._opacityTexture,O,"opacity")),this._hasAlphaChannel()&&O.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&v.ReflectionTextureEnabled){if(O.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),O.YE("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const U=this._reflectionTexture;O.updateVector3("vReflectionPosition",U.boundingBoxPosition),O.updateVector3("vReflectionSize",U.boundingBoxSize)}}else O.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&v.EmissiveTextureEnabled&&(O.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,N.v)(this._emissiveTexture,O,"emissive")),this._lightmapTexture&&v.LightmapTextureEnabled&&(O.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,N.v)(this._lightmapTexture,O,"lightmap")),this._specularTexture&&v.SpecularTextureEnabled&&(O.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,N.v)(this._specularTexture,O,"specular")),this._bumpTexture&&L.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&(O.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,N.v)(this._bumpTexture,O,"bump"),L._mirroredCameraPosition?O.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):O.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&v.RefractionTextureEnabled){let U=1;if(this._refractionTexture.isCube||(O.YE("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(U=this._refractionTexture.depth)),O.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,U,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const U=this._refractionTexture;O.updateVector3("vRefractionPosition",U.boundingBoxPosition),O.updateVector3("vRefractionSize",U.boundingBoxSize)}}}this.pointsCloud&&O.updateFloat("pointSize",this.pointSize),O.updateColor4("vSpecularColor",this.specularColor,this.specularPower),O.updateColor3("vEmissiveColor",v.EmissiveTextureEnabled?this.emissiveColor:E.hG.BlackReadOnly),O.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),L.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),O.updateColor3("vAmbientColor",this._globalAmbientColor)}L.texturesEnabled&&(this._diffuseTexture&&v.DiffuseTextureEnabled&&l.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&v.AmbientTextureEnabled&&l.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&v.OpacityTextureEnabled&&l.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&v.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?l.setTexture("reflectionCubeSampler",this._reflectionTexture):l.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&v.EmissiveTextureEnabled&&l.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&v.LightmapTextureEnabled&&l.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&v.SpecularTextureEnabled&&l.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&L.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&l.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&v.RefractionTextureEnabled&&(this._refractionTexture.isCube?l.setTexture("refractionCubeSampler",this._refractionTexture):l.setTexture("refraction2DSampler",this._refractionTexture))),this.wU().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(G)&&this.wU().depthPeelingRenderer.bind(l),this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,h.e)(l,this,L),this.bindEyePosition(l)}else L.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(P||!this.isFrozen){var T;if(L.lightsEnabled&&!this._disableLighting&&(0,N.k)(L,G,l,X,this._maxSimultaneousLights),(L.fogEnabled&&G.applyFog&&L.fogMode!==t.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||G.receiveShadows||X.PREPASS)&&this.bindView(l),(0,N.h)(L,G,l),X.NUM_MORPH_INFLUENCERS&&(0,N.o)(G,l),X.BAKED_VERTEX_ANIMATION_TEXTURE)null===(T=G.bakedVertexAnimationManager)||void 0===T||T.bind(l,X.INSTANCES);this.useLogarithmicDepth&&(0,N.m)(X,l,L),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(G,this._activeEffect,C),O.update()}getAnimatables(){const U=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&U.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&U.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&U.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&U.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&U.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&U.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&U.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&U.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&U.push(this._refractionTexture),U}getActiveTextures(){const U=super.getActiveTextures();return this._diffuseTexture&&U.push(this._diffuseTexture),this._ambientTexture&&U.push(this._ambientTexture),this._opacityTexture&&U.push(this._opacityTexture),this._reflectionTexture&&U.push(this._reflectionTexture),this._emissiveTexture&&U.push(this._emissiveTexture),this._specularTexture&&U.push(this._specularTexture),this._bumpTexture&&U.push(this._bumpTexture),this._lightmapTexture&&U.push(this._lightmapTexture),this._refractionTexture&&U.push(this._refractionTexture),U}hasTexture(U){return!!super.hasTexture(U)||(this._diffuseTexture===U||(this._ambientTexture===U||(this._opacityTexture===U||(this._reflectionTexture===U||(this._emissiveTexture===U||(this._specularTexture===U||(this._bumpTexture===U||(this._lightmapTexture===U||this._refractionTexture===U))))))))}dispose(U,G){var C,L,X,l,t,E,K,P,O;G&&(null===(C=this._diffuseTexture)||void 0===C||C.dispose(),null===(L=this._ambientTexture)||void 0===L||L.dispose(),null===(X=this._opacityTexture)||void 0===X||X.dispose(),null===(l=this._reflectionTexture)||void 0===l||l.dispose(),null===(t=this._emissiveTexture)||void 0===t||t.dispose(),null===(E=this._specularTexture)||void 0===E||E.dispose(),null===(K=this._bumpTexture)||void 0===K||K.dispose(),null===(P=this._lightmapTexture)||void 0===P||P.dispose(),null===(O=this._refractionTexture)||void 0===O||O.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(U,G)}clone(U){let G=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const L=b.c.Clone((()=>new v(U,this.wU())),this,{cloneTexturesOnlyOnce:G});return L.name=U,L.id=U,this.kE.copyTo(L.kE),this._clonePlugins(L,C),L}static Parse(U,G,C){const L=b.c.Parse((()=>new v(U.name,G)),U,G,C);return U.kE&&L.kE.parse(U.kE,G,C),T.c._ParsePlugins(U,L,G,C),L}static get DiffuseTextureEnabled(){return I.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(U){I.c.DiffuseTextureEnabled=U}static get DetailTextureEnabled(){return I.c.DetailTextureEnabled}static set DetailTextureEnabled(U){I.c.DetailTextureEnabled=U}static get AmbientTextureEnabled(){return I.c.AmbientTextureEnabled}static set AmbientTextureEnabled(U){I.c.AmbientTextureEnabled=U}static get OpacityTextureEnabled(){return I.c.OpacityTextureEnabled}static set OpacityTextureEnabled(U){I.c.OpacityTextureEnabled=U}static get ReflectionTextureEnabled(){return I.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(U){I.c.ReflectionTextureEnabled=U}static get EmissiveTextureEnabled(){return I.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(U){I.c.EmissiveTextureEnabled=U}static get SpecularTextureEnabled(){return I.c.SpecularTextureEnabled}static set SpecularTextureEnabled(U){I.c.SpecularTextureEnabled=U}static get BumpTextureEnabled(){return I.c.BumpTextureEnabled}static set BumpTextureEnabled(U){I.c.BumpTextureEnabled=U}static get LightmapTextureEnabled(){return I.c.LightmapTextureEnabled}static set LightmapTextureEnabled(U){I.c.LightmapTextureEnabled=U}static get RefractionTextureEnabled(){return I.c.RefractionTextureEnabled}static set RefractionTextureEnabled(U){I.c.RefractionTextureEnabled=U}static get ColorGradingTextureEnabled(){return I.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(U){I.c.ColorGradingTextureEnabled=U}static get FresnelEnabled(){return I.c.FresnelEnabled}static set FresnelEnabled(U){I.c.FresnelEnabled=U}}v.ForceGLSL=!1,(0,L.d)([(0,X.z)("diffuseTexture")],v.prototype,"_diffuseTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"diffuseTexture",void 0),(0,L.d)([(0,X.z)("ambientTexture")],v.prototype,"_ambientTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"ambientTexture",void 0),(0,L.d)([(0,X.z)("opacityTexture")],v.prototype,"_opacityTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"opacityTexture",void 0),(0,L.d)([(0,X.z)("reflectionTexture")],v.prototype,"_reflectionTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"reflectionTexture",void 0),(0,L.d)([(0,X.z)("emissiveTexture")],v.prototype,"_emissiveTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"emissiveTexture",void 0),(0,L.d)([(0,X.z)("specularTexture")],v.prototype,"_specularTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"specularTexture",void 0),(0,L.d)([(0,X.z)("bumpTexture")],v.prototype,"_bumpTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"bumpTexture",void 0),(0,L.d)([(0,X.z)("lightmapTexture")],v.prototype,"_lightmapTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"lightmapTexture",void 0),(0,L.d)([(0,X.z)("refractionTexture")],v.prototype,"_refractionTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"refractionTexture",void 0),(0,L.d)([(0,X.i)("ambient")],v.prototype,"ambientColor",void 0),(0,L.d)([(0,X.i)("diffuse")],v.prototype,"diffuseColor",void 0),(0,L.d)([(0,X.i)("specular")],v.prototype,"specularColor",void 0),(0,L.d)([(0,X.i)("emissive")],v.prototype,"emissiveColor",void 0),(0,L.d)([(0,X.H)()],v.prototype,"specularPower",void 0),(0,L.d)([(0,X.H)("useAlphaFromDiffuseTexture")],v.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"useAlphaFromDiffuseTexture",void 0),(0,L.d)([(0,X.H)("useEmissiveAsIllumination")],v.prototype,"_useEmissiveAsIllumination",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useEmissiveAsIllumination",void 0),(0,L.d)([(0,X.H)("linkEmissiveWithDiffuse")],v.prototype,"_linkEmissiveWithDiffuse",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"linkEmissiveWithDiffuse",void 0),(0,L.d)([(0,X.H)("useSpecularOverAlpha")],v.prototype,"_useSpecularOverAlpha",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useSpecularOverAlpha",void 0),(0,L.d)([(0,X.H)("useReflectionOverAlpha")],v.prototype,"_useReflectionOverAlpha",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useReflectionOverAlpha",void 0),(0,L.d)([(0,X.H)("disableLighting")],v.prototype,"_disableLighting",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsLightsDirty")],v.prototype,"disableLighting",void 0),(0,L.d)([(0,X.H)("useObjectSpaceNormalMap")],v.prototype,"_useObjectSpaceNormalMap",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useObjectSpaceNormalMap",void 0),(0,L.d)([(0,X.H)("useParallax")],v.prototype,"_useParallax",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallax",void 0),(0,L.d)([(0,X.H)("useParallaxOcclusion")],v.prototype,"_useParallaxOcclusion",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallaxOcclusion",void 0),(0,L.d)([(0,X.H)()],v.prototype,"parallaxScaleBias",void 0),(0,L.d)([(0,X.H)("roughness")],v.prototype,"_roughness",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"roughness",void 0),(0,L.d)([(0,X.H)()],v.prototype,"indexOfRefraction",void 0),(0,L.d)([(0,X.H)()],v.prototype,"invertRefractionY",void 0),(0,L.d)([(0,X.H)()],v.prototype,"alphaCutOff",void 0),(0,L.d)([(0,X.H)("useLightmapAsShadowmap")],v.prototype,"_useLightmapAsShadowmap",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useLightmapAsShadowmap",void 0),(0,L.d)([(0,X.o)("diffuseFresnelParameters")],v.prototype,"_diffuseFresnelParameters",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"diffuseFresnelParameters",void 0),(0,L.d)([(0,X.o)("opacityFresnelParameters")],v.prototype,"_opacityFresnelParameters",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],v.prototype,"opacityFresnelParameters",void 0),(0,L.d)([(0,X.o)("reflectionFresnelParameters")],v.prototype,"_reflectionFresnelParameters",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"reflectionFresnelParameters",void 0),(0,L.d)([(0,X.o)("refractionFresnelParameters")],v.prototype,"_refractionFresnelParameters",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"refractionFresnelParameters",void 0),(0,L.d)([(0,X.o)("emissiveFresnelParameters")],v.prototype,"_emissiveFresnelParameters",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"emissiveFresnelParameters",void 0),(0,L.d)([(0,X.H)("useReflectionFresnelFromSpecular")],v.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"useReflectionFresnelFromSpecular",void 0),(0,L.d)([(0,X.H)("useGlossinessFromSpecularMapAlpha")],v.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,L.d)([(0,X.H)("maxSimultaneousLights")],v.prototype,"_maxSimultaneousLights",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsLightsDirty")],v.prototype,"maxSimultaneousLights",void 0),(0,L.d)([(0,X.H)("invertNormalMapX")],v.prototype,"_invertNormalMapX",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapX",void 0),(0,L.d)([(0,X.H)("invertNormalMapY")],v.prototype,"_invertNormalMapY",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapY",void 0),(0,L.d)([(0,X.H)("twoSidedLighting")],v.prototype,"_twoSidedLighting",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"twoSidedLighting",void 0),(0,L.d)([(0,X.H)("applyDecalMapAfterDetailMap")],v.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,L.d)([(0,X.b)("_markAllSubMeshesAsMiscDirty")],v.prototype,"applyDecalMapAfterDetailMap",void 0),(0,p.e)("BABYLON.StandardMaterial",v),t.e.DefaultMaterialFactory=U=>new v("default material",U)}}]);