"use strict";(self.n52dyox90qa=self.n52dyox90qa||[]).push([[25],{12203:(E,t,z)=>{z.d(t,{d:()=>h});var A=z(11792),X=z(12121),R=z(11801),u=z(12198),p=z(12190),C=z(12205),Z=z(12162);class H extends p.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class h extends C.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(E){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(E,"DetailMap",140,new H,t),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=X.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=E._dirtyCallbacks[1]}isReadyForSubMesh(E,t,z){return!this._isEnabled||!(E._areTexturesDirty&&t.texturesEnabled&&z.getCaps().standardDerivatives&&this._texture&&u.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(E,t){if(this._isEnabled){E.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const z=t.getEngine();E._areTexturesDirty&&(z.getCaps().standardDerivatives&&this._texture&&u.d.DetailTextureEnabled&&this._isEnabled?((0,Z.T)(this._texture,E,"DETAIL"),E.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):E.DETAIL=!1)}else E.DETAIL=!1}bindForSubMesh(E,t){if(!this._isEnabled)return;const z=this._material.isFrozen;E.useUbo&&z&&E.isSync||this._texture&&u.d.DetailTextureEnabled&&(E.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,Z.v)(this._texture,E,"detail")),t.texturesEnabled&&this._texture&&u.d.DetailTextureEnabled&&E.setTexture("detailSampler",this._texture)}hasTexture(E){return this._texture===E}getActiveTextures(E){this._texture&&E.push(this._texture)}getAnimatables(E){this._texture&&this._texture.animations&&this._texture.animations.length>0&&E.push(this._texture)}dispose(E){var t;E&&(null===(t=this._texture)||void 0===t||t.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(E){E.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,A.b)([(0,R.B)("detailTexture"),(0,R.c)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"texture",void 0),(0,A.b)([(0,R.K)()],h.prototype,"diffuseBlendLevel",void 0),(0,A.b)([(0,R.K)()],h.prototype,"roughnessBlendLevel",void 0),(0,A.b)([(0,R.K)()],h.prototype,"bumpLevel",void 0),(0,A.b)([(0,R.K)(),(0,R.c)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"normalBlendMethod",void 0),(0,A.b)([(0,R.K)(),(0,R.c)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"isEnabled",void 0)},12190:(E,t,z)=>{z.d(t,{e:()=>A});class A{constructor(E){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=E,E)for(const t in E)Object.prototype.hasOwnProperty.call(E,t)&&this._setDefaultValue(t)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let E=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||E,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const E of Object.keys(this))"_"!==E[0]&&this._keys.push(E);if(this._externalProperties)for(const E in this._externalProperties)-1===this._keys.indexOf(E)&&this._keys.push(E)}isEqual(E){if(this._keys.length!==E._keys.length)return!1;for(let t=0;t<this._keys.length;t++){const z=this._keys[t];if(this[z]!==E[z])return!1}return!0}cloneTo(E){this._keys.length!==E._keys.length&&(E._keys=this._keys.slice(0));for(let t=0;t<this._keys.length;t++){const z=this._keys[t];E[z]=this[z]}}reset(){for(const E of this._keys)this._setDefaultValue(E)}_setDefaultValue(E){var t,z,A,X;const R=(null===(t=this._externalProperties)||void 0===t||null===(z=t[E])||void 0===z?void 0:z.type)??typeof this[E],u=null===(A=this._externalProperties)||void 0===A||null===(X=A[E])||void 0===X?void 0:X.default;switch(R){case"number":this[E]=u??0;break;case"string":this[E]=u??"";break;default:this[E]=u??!1}}toString(){let E="";for(let t=0;t<this._keys.length;t++){const z=this._keys[t],A=this[z];switch(typeof A){case"number":case"string":E+="#define "+z+" "+A+"\n";break;default:A&&(E+="#define "+z+"\n")}}return E}}},12198:(E,t,z)=>{z.d(t,{d:()=>X});var A=z(11712);class X{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(E){this._DiffuseTextureEnabled!==E&&(this._DiffuseTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(E){this._BaseWeightTextureEnabled!==E&&(this._BaseWeightTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(E){this._BaseDiffuseRoughnessTextureEnabled!==E&&(this._BaseDiffuseRoughnessTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(E){this._DetailTextureEnabled!==E&&(this._DetailTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(E){this._DecalMapEnabled!==E&&(this._DecalMapEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(E){this._AmbientTextureEnabled!==E&&(this._AmbientTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(E){this._OpacityTextureEnabled!==E&&(this._OpacityTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(E){this._ReflectionTextureEnabled!==E&&(this._ReflectionTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(E){this._EmissiveTextureEnabled!==E&&(this._EmissiveTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(E){this._SpecularTextureEnabled!==E&&(this._SpecularTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(E){this._BumpTextureEnabled!==E&&(this._BumpTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(E){this._LightmapTextureEnabled!==E&&(this._LightmapTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(E){this._RefractionTextureEnabled!==E&&(this._RefractionTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(E){this._ColorGradingTextureEnabled!==E&&(this._ColorGradingTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(E){this._FresnelEnabled!==E&&(this._FresnelEnabled=E,A.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(E){this._ClearCoatTextureEnabled!==E&&(this._ClearCoatTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(E){this._ClearCoatBumpTextureEnabled!==E&&(this._ClearCoatBumpTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(E){this._ClearCoatTintTextureEnabled!==E&&(this._ClearCoatTintTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(E){this._SheenTextureEnabled!==E&&(this._SheenTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(E){this._AnisotropicTextureEnabled!==E&&(this._AnisotropicTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(E){this._ThicknessTextureEnabled!==E&&(this._ThicknessTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(E){this._RefractionIntensityTextureEnabled!==E&&(this._RefractionIntensityTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(E){this._TranslucencyIntensityTextureEnabled!==E&&(this._TranslucencyIntensityTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(E){this._TranslucencyColorTextureEnabled!==E&&(this._TranslucencyColorTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(E){this._IridescenceTextureEnabled!==E&&(this._IridescenceTextureEnabled=E,A.b.MarkAllMaterialsAsDirty(1))}}X._DiffuseTextureEnabled=!0,X._BaseWeightTextureEnabled=!0,X._BaseDiffuseRoughnessTextureEnabled=!0,X._DetailTextureEnabled=!0,X._DecalMapEnabled=!0,X._AmbientTextureEnabled=!0,X._OpacityTextureEnabled=!0,X._ReflectionTextureEnabled=!0,X._EmissiveTextureEnabled=!0,X._SpecularTextureEnabled=!0,X._BumpTextureEnabled=!0,X._LightmapTextureEnabled=!0,X._RefractionTextureEnabled=!0,X._ColorGradingTextureEnabled=!0,X._FresnelEnabled=!0,X._ClearCoatTextureEnabled=!0,X._ClearCoatBumpTextureEnabled=!0,X._ClearCoatTintTextureEnabled=!0,X._SheenTextureEnabled=!0,X._AnisotropicTextureEnabled=!0,X._ThicknessTextureEnabled=!0,X._RefractionIntensityTextureEnabled=!0,X._TranslucencyIntensityTextureEnabled=!0,X._TranslucencyColorTextureEnabled=!0,X._IridescenceTextureEnabled=!0},12213:(E,t,z)=>{z.d(t,{e:()=>R});var A,X=z(11812);!function(E){E[E.Zero=0]="Zero",E[E.One=1]="One",E[E.MaxViewZ=2]="MaxViewZ"}(A||(A={}));class R{static CreateConfiguration(E){return R._Configurations[E]={defines:{},previousWorldMatrices:{},previousViewProjection:X.Matrix.Zero(),currentViewProjection:X.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},R._Configurations[E]}static DeleteConfiguration(E){delete R._Configurations[E]}static GetConfiguration(E){return R._Configurations[E]}static AddUniformsAndSamplers(E,t){E.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(E,t){for(const z of t)if(z.Rp)for(const t of z.Rp)t._removeDrawWrapper(E)}static PrepareDefines(E,t,z){if(!z._arePrePassDirty)return;const A=R._Configurations[E];if(!A)return;z.PREPASS=!0,z.PREPASS_COLOR=!1,z.PREPASS_COLOR_INDEX=-1;let X=0;for(let u=0;u<R.GeometryTextureDescriptions.length;u++){const E=R.GeometryTextureDescriptions[u],t=E.define,p=E.defineIndex,C=A.defines[p];void 0!==C?(z[t]=!0,z[p]=C,X++):(z[t]=!1,delete z[p])}z.SCENE_MRT_COUNT=X,z.BONES_VELOCITY_ENABLED=t.useBones&&t.computeBonesUsingShaders&&t.skeleton&&!t.skeleton.isUsingTextureForMatrices&&-1===A.excludedSkinnedMesh.indexOf(t)}static Bind(E,t,z,A,X){const u=R._Configurations[E];if(!u)return;const p=z.lE(),C=p.getEngine();if(u.reverseCulling&&C.setStateCullFaceType(p._mirroredCameraPosition?X.cullBackFaces:!X.cullBackFaces),(void 0!==u.defines.PREPASS_VELOCITY_INDEX||void 0!==u.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(u.previousWorldMatrices[z.uniqueId]||(u.previousWorldMatrices[z.uniqueId]=A.clone()),u.previousViewProjection||(u.previousViewProjection=p.getTransformMatrix().clone(),u.currentViewProjection=p.getTransformMatrix().clone()),u.currentViewProjection.updateFlag!==p.getTransformMatrix().updateFlag?(u.lastUpdateFrameId=C.frameId,u.previousViewProjection.R(u.currentViewProjection),u.currentViewProjection.R(p.getTransformMatrix())):u.lastUpdateFrameId!==C.frameId&&(u.lastUpdateFrameId=C.frameId,u.previousViewProjection.R(u.currentViewProjection)),t.setMatrix("previousWorld",u.previousWorldMatrices[z.uniqueId]),t.setMatrix("previousViewProjection",u.previousViewProjection),u.previousWorldMatrices[z.uniqueId]=A.clone(),z.useBones&&z.computeBonesUsingShaders&&z.skeleton)){const E=z.skeleton;if(!E.isUsingTextureForMatrices||-1===t.getUniformIndex("boneTextureWidth")){const A=E.getTransformMatrices(z);A&&(u.previousBones[z.uniqueId]||(u.previousBones[z.uniqueId]=A.slice()),t.setMatrices("mPreviousBones",u.previousBones[z.uniqueId]),u.previousBones[z.uniqueId].set(A))}}}}R.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],R._Configurations={}},12205:(E,t,z)=>{z.d(t,{c:()=>L});var A=z(11792),X=z(11801),R=z(12121),u=z(11667),p=z(11695),C=z(11726);const Z=new RegExp("^([gimus]+)!");class H{constructor(E){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=E,this._scene=E.lE(),this._engine=this._scene.getEngine()}_addPlugin(E){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===E.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!E.isCompatible(this._material.shaderLanguage))throw`The plugin "${E.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const t=E.getClassName();H._MaterialPluginClassToMainDefine[t]||(H._MaterialPluginClassToMainDefine[t]="MATERIALPLUGIN_"+ ++H._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(E,t)=>this._handlePluginEvent(E,t),this._plugins.push(E),this._plugins.sort(((E,t)=>E.priority-t.priority)),this._codeInjectionPoints={};const z={};z[H._MaterialPluginClassToMainDefine[t]]={type:"boolean",default:!0};for(const A of this._plugins)A.collectDefines(z),this._collectPointNames("vertex",A.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",A.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=z,!0}_activatePlugin(E){-1===this._activePlugins.indexOf(E)&&(this._activePlugins.push(E),this._activePlugins.sort(((E,t)=>E.priority-t.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),E.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(E),this._activePluginsForExtraEvents.sort(((E,t)=>E.priority-t.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(E){for(let t=0;t<this._plugins.length;++t)if(this._plugins[t].name===E)return this._plugins[t];return null}_handlePluginEventIsReadyForSubMesh(E){let t=!0;for(const z of this._activePlugins)t=t&&z.isReadyForSubMesh(E.defines,this._scene,this._engine,E.subMesh);E.isReadyForSubMesh=t}_handlePluginEventPrepareDefinesBeforeAttributes(E){for(const t of this._activePlugins)t.prepareDefinesBeforeAttributes(E.defines,this._scene,E.mesh)}_handlePluginEventPrepareDefines(E){for(const t of this._activePlugins)t.prepareDefines(E.defines,this._scene,E.mesh)}_handlePluginEventHardBindForSubMesh(E){for(const t of this._activePluginsForExtraEvents)t.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,E.subMesh)}_handlePluginEventBindForSubMesh(E){for(const t of this._activePlugins)t.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,E.subMesh)}_handlePluginEventHasRenderTargetTextures(E){let t=!1;for(const z of this._activePluginsForExtraEvents)if(t=z.hasRenderTargetTextures(),t)break;E.hasRenderTargetTextures=t}_handlePluginEventFillRenderTargetTextures(E){for(const t of this._activePluginsForExtraEvents)t.fillRenderTargetTextures(E.renderTargets)}_handlePluginEvent(E,t){switch(E){case 512:{const E=t;for(const t of this._activePlugins)t.getActiveTextures(E.activeTextures);break}case 256:{const E=t;for(const t of this._activePlugins)t.getAnimatables(E.animatables);break}case 1024:{const E=t;let z=!1;for(const t of this._activePlugins)if(z=t.hasTexture(E.texture),z)break;E.hasTexture=z;break}case 2:{const E=t;for(const t of this._plugins)t.dispose(E.forceDisposeTextures);break}case 4:t.defineNames=this._defineNamesFromPlugins;break;case 128:{const E=t;for(const t of this._activePlugins)E.fallbackRank=t.addFallbacks(E.defines,E.fallbacks,E.fallbackRank),t.getAttributes(E.attributes,this._scene,E.mesh);this._uniformList.length>0&&E.uniforms.push(...this._uniformList),this._samplerList.length>0&&E.samplers.push(...this._samplerList),this._uboList.length>0&&E.uniformBuffersNames.push(...this._uboList),E.customCode=this._injectCustomCode(E,E.customCode);break}case 8:{const E=t;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const z=1===this._material.shaderLanguage;for(const t of this._plugins){const A=t.getUniforms(this._material.shaderLanguage);if(A){if(A.ubo)for(const t of A.ubo){if(t.size&&t.type){const A=t.arraySize??0;if(E.ubo.addUniform(t.name,t.size,A),z){let E;switch(t.type){case"mat4":E="mat4x4f";break;case"float":E="f32";break;default:E=`${t.type}f`}this._uboDeclaration+=A>0?`uniform ${t.name}: array<${E}, ${A}>;\n`:`uniform ${t.name}: ${E};\n`}else this._uboDeclaration+=`${t.type} ${t.name}${A>0?`[${A}]`:""};\n`}this._uniformList.push(t.name)}A.vertex&&(this._vertexDeclaration+=A.vertex+"\n"),A.fragment&&(this._fragmentDeclaration+=A.fragment+"\n")}t.getSamplers(this._samplerList),t.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(E,t){if(t)for(const z in t)this._codeInjectionPoints[E]||(this._codeInjectionPoints[E]={}),this._codeInjectionPoints[E][z]=!0}_injectCustomCode(E,t){return(z,A)=>{var X;t&&(A=t(z,A)),this._uboDeclaration&&(A=A.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(A=A.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(A=A.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const R=null===(X=this._codeInjectionPoints)||void 0===X?void 0:X[z];if(!R)return A;let u=null;for(let t in R){let X="";for(const A of this._activePlugins){var H;let R=null===(H=A.getCustomCode(z,this._material.shaderLanguage))||void 0===H?void 0:H[t];if(R){if(A.resolveIncludes){if(null===u){const t=0;u={defines:[],indexParameters:E.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:C.d.GetShadersRepository(t),includesShadersStore:C.d.GetIncludesShadersStore(t),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}u.isFragment="fragment"===z,(0,p.g)(R,u,(E=>R=E))}X+=R+"\n"}}if(X.length>0)if("!"===t.charAt(0)){t=t.substring(1);let E="g";if("!"===t.charAt(0))E="",t=t.substring(1);else{const z=Z.exec(t);z&&z.length>=2&&(E=z[1],t=t.substring(E.length+1))}E.indexOf("g")<0&&(E+="g");const z=A,R=new RegExp(t,E);let u=R.exec(z);for(;null!==u;){let E=X;for(let t=0;t<u.length;++t)E=E.replace("$"+t,u[t]);A=A.replace(u[0],E),u=R.exec(z)}}else{const E="#define "+t;A=A.replace(E,"\n"+X+"\n"+E)}}return A}}}H._MaterialPluginClassToMainDefine={},H._MaterialPluginCounter=0,u.d.OnEnginesDisposedObservable.add((()=>{O()}));const h=[];let d=!1,y=null;function O(){h.length=0,d=!1,R.b.OnEventObservable.remove(y),y=null}var c=z(11849),a=z(11766);class L{isCompatible(E){return 0===E}_enable(E){E&&this._pluginManager._activatePlugin(this)}constructor(E,t,z,A){let X=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],R=arguments.length>5&&void 0!==arguments[5]&&arguments[5],u=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=E,this.name=t,this.priority=z,this.resolveIncludes=u,E.pluginManager||(E.pluginManager=new H(E),E.IX.add((()=>{E.pluginManager=void 0}))),this._pluginDefineNames=A,this._pluginManager=E.pluginManager,X&&this._pluginManager._addPlugin(this),R&&this._enable(!0),this.markAllDefinesAsDirty=E._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(E,t,z,A){return!0}hardBindForSubMesh(E,t,z,A){}bindForSubMesh(E,t,z,A){}dispose(E){}getCustomCode(E){return null}collectDefines(E){if(this._pluginDefineNames)for(const t of Object.keys(this._pluginDefineNames)){if("_"===t[0])continue;const z=typeof this._pluginDefineNames[t];E[t]={type:"number"===z?"number":"string"===z?"string":"boolean"===z?"boolean":"object",default:this._pluginDefineNames[t]}}}prepareDefinesBeforeAttributes(E,t,z){}prepareDefines(E,t,z){}hasTexture(E){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(E){}getActiveTextures(E){}getAnimatables(E){}addFallbacks(E,t,z){return z}getSamplers(E){}getAttributes(E,t,z){}getUniformBuffersNames(E){}getUniforms(){return{}}copyTo(E){c.b.Clone((()=>E),this)}serialize(){return c.b.Serialize(this)}parse(E,t,z){c.b.Parse((()=>this),E,t,z)}}(0,A.b)([(0,X.K)()],L.prototype,"name",void 0),(0,A.b)([(0,X.K)()],L.prototype,"priority",void 0),(0,A.b)([(0,X.K)()],L.prototype,"resolveIncludes",void 0),(0,A.b)([(0,X.K)()],L.prototype,"registerForExtraEvents",void 0),(0,a.f)("BABYLON.MaterialPluginBase",L)},12182:(E,t,z)=>{z.d(t,{c:()=>A});class A{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(E){E.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(E){}bindForSubMesh(E,t,z,A,X){if(t.prePassRenderer&&t.prePassRenderer.enabled&&t.prePassRenderer.currentRTisSceneRT&&(-1!==t.prePassRenderer.getIndex(2)||-1!==t.prePassRenderer.getIndex(11))){this.previousWorldMatrices[z.uniqueId]||(this.previousWorldMatrices[z.uniqueId]=A.clone()),this.previousViewProjection||(this.previousViewProjection=t.getTransformMatrix().clone(),this.currentViewProjection=t.getTransformMatrix().clone());const X=t.getEngine();this.currentViewProjection.updateFlag!==t.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.R(this.currentViewProjection),this.currentViewProjection.R(t.getTransformMatrix())):this._lastUpdateFrameId!==X.frameId&&(this._lastUpdateFrameId=X.frameId,this.previousViewProjection.R(this.currentViewProjection)),E.setMatrix("previousWorld",this.previousWorldMatrices[z.uniqueId]),E.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[z.uniqueId]=A.clone()}}}},12175:(E,t,z)=>{z.d(t,{et:()=>f});var A=z(11792),X=z(11801),R=z(11920),u=z(12051),p=z(11856),C=z(11894),Z=z(12182),H=z(12056),h=z(12121),d=z(12190),y=z(12116),O=z(11790),c=z(11766),a=z(12198),L=z(12110),mE=z(12203),W=z(12168),I=z(12162),e=z(11849),D=z(12213);const S={effect:null,subMesh:null};class l extends d.e{constructor(E){super(E),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(E){const t=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const z of t)this[z]=z===E}}class f extends y.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(E){this._attachImageProcessingConfiguration(E),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(E){E!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=E||this.lE().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(E){this.imageProcessingConfiguration.colorCurvesEnabled=E}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(E){this.imageProcessingConfiguration.colorGradingEnabled=E}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(E){this._imageProcessingConfiguration.toneMappingEnabled=E}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(E){this._imageProcessingConfiguration.exposure=E}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(E){this._imageProcessingConfiguration.contrast=E}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(E){this._imageProcessingConfiguration.colorGradingTexture=E}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(E){this._imageProcessingConfiguration.colorCurves=E}get canRenderToMRT(){return!0}constructor(E,t){super(E,t,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||f.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new p.Dt(0,0,0),this.diffuseColor=new p.Dt(1,1,1),this.specularColor=new p.Dt(1,1,1),this.emissiveColor=new p.Dt(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new R.i(16),this._globalAmbientColor=new p.Dt(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new mE.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new Z.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"et"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===h.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.pp&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==h.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.pp||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(E,t){let A=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const X=t._drawWrapper;if(X.effect&&this.isFrozen&&X._wasPreviouslyReady&&X._wasPreviouslyUsingInstances===A)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new l(this._eventInfo.defineNames));const R=this.lE(),u=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const p=R.getEngine();u._needNormals=(0,I.Q)(R,E,u,!0,this._maxSimultaneousLights,this._disableLighting),(0,I.Z)(R,u);const h=this.needAlphaBlendingForMesh(E)&&this.lE().useOrderIndependentTransparency;if((0,I.db)(R,u,this.canRenderToMRT&&!h),(0,I.bb)(R,u,h),D.e.PrepareDefines(p.currentRenderPassId,E,u),u._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,u._needUVs=!1;for(let E=1;E<=6;++E)u["MAINUV"+E]=!1;if(R.texturesEnabled){if(u.DIFFUSEDIRECTUV=0,u.BUMPDIRECTUV=0,u.AMBIENTDIRECTUV=0,u.OPACITYDIRECTUV=0,u.EMISSIVEDIRECTUV=0,u.SPECULARDIRECTUV=0,u.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&f.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._diffuseTexture,u,"DIFFUSE")}else u.DIFFUSE=!1;if(this._ambientTexture&&f.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._ambientTexture,u,"AMBIENT")}else u.AMBIENT=!1;if(this._opacityTexture&&f.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._opacityTexture,u,"OPACITY"),u.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else u.OPACITY=!1;if(this._reflectionTexture&&f.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(u._needNormals=!0,u.REFLECTION=!0,u.ROUGHNESS=this._roughness>0,u.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,u.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===O.d.INVCUBIC_MODE,u.REFLECTIONMAP_3D=this._reflectionTexture.isCube,u.REFLECTIONMAP_OPPOSITEZ=u.REFLECTIONMAP_3D&&this.lE().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,u.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case O.d.EXPLICIT_MODE:u.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case O.d.PLANAR_MODE:u.setReflectionMode("REFLECTIONMAP_PLANAR");break;case O.d.PROJECTION_MODE:u.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case O.d.SKYBOX_MODE:u.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case O.d.SPHERICAL_MODE:u.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case O.d.EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case O.d.FIXED_EQUIRECTANGULAR_MODE:u.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case O.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:u.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case O.d.CUBIC_MODE:case O.d.INVCUBIC_MODE:default:u.setReflectionMode("REFLECTIONMAP_CUBIC")}u.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else u.REFLECTION=!1,u.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&f.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._emissiveTexture,u,"EMISSIVE")}else u.EMISSIVE=!1;if(this._lightmapTexture&&f.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._lightmapTexture,u,"LIGHTMAP"),u.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,u.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else u.LIGHTMAP=!1;if(this._specularTexture&&f.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,I.T)(this._specularTexture,u,"SPECULAR"),u.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else u.SPECULAR=!1;if(R.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&f.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,I.T)(this._bumpTexture,u,"BUMP"),u.PARALLAX=this._useParallax,u.PARALLAX_RHS=R.useRightHandedSystem,u.PARALLAXOCCLUSION=this._useParallaxOcclusion,u.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else u.BUMP=!1,u.PARALLAX=!1,u.PARALLAX_RHS=!1,u.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&f.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;u._needUVs=!0,u.REFRACTION=!0,u.REFRACTIONMAP_3D=this._refractionTexture.isCube,u.RGBDREFRACTION=this._refractionTexture.isRGBD,u.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else u.REFRACTION=!1;u.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else u.DIFFUSE=!1,u.AMBIENT=!1,u.OPACITY=!1,u.REFLECTION=!1,u.EMISSIVE=!1,u.LIGHTMAP=!1,u.BUMP=!1,u.REFRACTION=!1;u.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),u.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,u.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,u.SPECULAROVERALPHA=this._useSpecularOverAlpha,u.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,u.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,u.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(E)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=u,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(u._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(u),u.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,u.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(u._areFresnelDirty&&(f.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(u.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,u.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,u.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,u.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,u.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,u.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,u._needNormals=!0,u.FRESNEL=!0):u.FRESNEL=!1),u.AREALIGHTUSED)for(let z=0;z<E.lightSources.length;z++)if(!E.lightSources[z]._isReady())return!1;(0,I.V)(E,R,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(E),u,this._applyDecalMapAfterDetailMap),(0,I.M)(R,p,this,u,A,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=u,this._eventInfo.mesh=E,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,I.I)(E,u,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let d=!1;if(u.isDirty){const A=u._areLightsDisposed;u.markAsProcessed();const X=new L.d;u.REFLECTION&&X.addFallback(0,"REFLECTION"),u.SPECULAR&&X.addFallback(0,"SPECULAR"),u.BUMP&&X.addFallback(0,"BUMP"),u.PARALLAX&&X.addFallback(1,"PARALLAX"),u.PARALLAX_RHS&&X.addFallback(1,"PARALLAX_RHS"),u.PARALLAXOCCLUSION&&X.addFallback(0,"PARALLAXOCCLUSION"),u.SPECULAROVERALPHA&&X.addFallback(0,"SPECULAROVERALPHA"),u.FOG&&X.addFallback(1,"FOG"),u.POINTSIZE&&X.addFallback(0,"POINTSIZE"),u.LOGARITHMICDEPTH&&X.addFallback(0,"LOGARITHMICDEPTH"),(0,I.y)(u,X,this._maxSimultaneousLights),u.SPECULARTERM&&X.addFallback(0,"SPECULARTERM"),u.DIFFUSEFRESNEL&&X.addFallback(1,"DIFFUSEFRESNEL"),u.OPACITYFRESNEL&&X.addFallback(2,"OPACITYFRESNEL"),u.REFLECTIONFRESNEL&&X.addFallback(3,"REFLECTIONFRESNEL"),u.EMISSIVEFRESNEL&&X.addFallback(4,"EMISSIVEFRESNEL"),u.FRESNEL&&X.addFallback(4,"FRESNEL"),u.MULTIVIEW&&X.addFallback(0,"MULTIVIEW");const h=[C.f.PositionKind];u.NORMAL&&h.push(C.f.NormalKind),u.TANGENT&&h.push(C.f.TangentKind);for(let E=1;E<=6;++E)u["UV"+E]&&h.push(`uv${1===E?"":E}`);u.VERTEXCOLOR&&h.push(C.f.ColorKind),(0,I.B)(h,E,u,X),(0,I.C)(h,u),(0,I.D)(h,E,u),(0,I.A)(h,E,u);let y="default";const O=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],c=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],a=["Material","Scene","Mesh"],mE={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:u.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=X,this._eventInfo.fallbackRank=0,this._eventInfo.defines=u,this._eventInfo.uniforms=O,this._eventInfo.attributes=h,this._eventInfo.samplers=c,this._eventInfo.uniformBuffersNames=a,this._eventInfo.customCode=void 0,this._eventInfo.mesh=E,this._eventInfo.indexParameters=mE,this._callbackPluginEventGeneric(128,this._eventInfo),D.e.AddUniformsAndSamplers(O,c),Z.c.AddUniforms(O),Z.c.AddSamplers(c),H.c&&(H.c.PrepareUniforms(O,u),H.c.PrepareSamplers(c,u)),(0,I.gb)({uniformsNames:O,uniformBuffersNames:a,samplers:c,defines:u,maxSimultaneousLights:this._maxSimultaneousLights}),(0,W.d)(O);const e={};this.customShaderNameResolve&&(y=this.customShaderNameResolve(y,O,a,c,u,h,e));const l=u.toString(),f=t.effect;let K=R.getEngine().createEffect(y,{attributes:h,uniformsNames:O,uniformBuffersNames:a,samplers:c,defines:l,fallbacks:X,onCompiled:this.onCompiled,onError:this.onError,indexParameters:mE,processFinalCode:e.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:u.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([z.e(41),z.e(64)]).then(z.bind(z,14318)),Promise.all([z.e(39),z.e(65)]).then(z.bind(z,14444))]):await Promise.all([Promise.all([z.e(34),z.e(67)]).then(z.bind(z,14527)),Promise.all([z.e(33),z.e(68)]).then(z.bind(z,14673))]),this._shadersLoaded=!0}},p);if(this._eventInfo.customCode=void 0,K)if(this._onEffectCreatedObservable&&(S.effect=K,S.subMesh=t,this._onEffectCreatedObservable.notifyObservers(S)),this.allowShaderHotSwapping&&f&&!K.isReady()){if(K=f,u.markAsUnprocessed(),d=this.isFrozen,A)return u._areLightsDisposed=!0,!1}else R.resetCachedMaterial(),t.setEffect(K,u,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(u._renderId=R.getRenderId(),X._wasPreviouslyReady=!d,X._wasPreviouslyUsingInstances=A,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const E=this._uniformBuffer;E.addUniform("diffuseLeftColor",4),E.addUniform("diffuseRightColor",4),E.addUniform("opacityParts",4),E.addUniform("reflectionLeftColor",4),E.addUniform("reflectionRightColor",4),E.addUniform("refractionLeftColor",4),E.addUniform("refractionRightColor",4),E.addUniform("emissiveLeftColor",4),E.addUniform("emissiveRightColor",4),E.addUniform("vDiffuseInfos",2),E.addUniform("vAmbientInfos",2),E.addUniform("vOpacityInfos",2),E.addUniform("vReflectionInfos",2),E.addUniform("vReflectionPosition",3),E.addUniform("vReflectionSize",3),E.addUniform("vEmissiveInfos",2),E.addUniform("vLightmapInfos",2),E.addUniform("vSpecularInfos",2),E.addUniform("vBumpInfos",3),E.addUniform("diffuseMatrix",16),E.addUniform("ambientMatrix",16),E.addUniform("opacityMatrix",16),E.addUniform("reflectionMatrix",16),E.addUniform("emissiveMatrix",16),E.addUniform("lightmapMatrix",16),E.addUniform("specularMatrix",16),E.addUniform("bumpMatrix",16),E.addUniform("vTangentSpaceParams",2),E.addUniform("pointSize",1),E.addUniform("alphaCutOff",1),E.addUniform("refractionMatrix",16),E.addUniform("vRefractionInfos",4),E.addUniform("vRefractionPosition",3),E.addUniform("vRefractionSize",3),E.addUniform("vSpecularColor",4),E.addUniform("vEmissiveColor",3),E.addUniform("vDiffuseColor",4),E.addUniform("vAmbientColor",3),E.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(E,t,z){const A=this.lE(),X=z.materialDefines;if(!X)return;const R=z.effect;if(!R)return;this._activeEffect=R,t.getMeshUniformBuffer().bindToEffect(R,"Mesh"),t.transferToEffect(E),this._uniformBuffer.bindToEffect(R,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,A,t,E,this.isFrozen),D.e.Bind(A.getEngine().currentRenderPassId,this._activeEffect,t,E,this);const C=A.activeCamera;C?this._uniformBuffer.updateFloat4("cameraInfo",C.Cp,C.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=z,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),X.OBJECTSPACE_NORMALMAP&&(E.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const Z=this._mustRebind(A,R,z,t.visibility);(0,I.e)(t,R);const H=this._uniformBuffer;if(Z){if(this.bindViewProjection(R),!H.useUbo||!this.isFrozen||!H.isSync||z._drawWrapper._forceRebindOnNextCall){if(f.FresnelEnabled&&X.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(H.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),H.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&H.updateColor4("opacityParts",new p.Dt(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(H.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),H.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(H.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),H.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(H.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),H.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),A.texturesEnabled){if(this._diffuseTexture&&f.DiffuseTextureEnabled&&(H.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,I.v)(this._diffuseTexture,H,"diffuse")),this._ambientTexture&&f.AmbientTextureEnabled&&(H.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,I.v)(this._ambientTexture,H,"ambient")),this._opacityTexture&&f.OpacityTextureEnabled&&(H.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,I.v)(this._opacityTexture,H,"opacity")),this._hasAlphaChannel()&&H.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&f.ReflectionTextureEnabled){if(H.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),H.Zp("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const E=this._reflectionTexture;H.updateVector3("vReflectionPosition",E.boundingBoxPosition),H.updateVector3("vReflectionSize",E.boundingBoxSize)}}else H.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&f.EmissiveTextureEnabled&&(H.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,I.v)(this._emissiveTexture,H,"emissive")),this._lightmapTexture&&f.LightmapTextureEnabled&&(H.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,I.v)(this._lightmapTexture,H,"lightmap")),this._specularTexture&&f.SpecularTextureEnabled&&(H.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,I.v)(this._specularTexture,H,"specular")),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&(H.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,I.v)(this._bumpTexture,H,"bump"),A._mirroredCameraPosition?H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&f.RefractionTextureEnabled){let E=1;if(this._refractionTexture.isCube||(H.Zp("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(E=this._refractionTexture.depth)),H.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,E,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const E=this._refractionTexture;H.updateVector3("vRefractionPosition",E.boundingBoxPosition),H.updateVector3("vRefractionSize",E.boundingBoxSize)}}}this.pointsCloud&&H.updateFloat("pointSize",this.pointSize),H.updateColor4("vSpecularColor",this.specularColor,this.specularPower),H.updateColor3("vEmissiveColor",f.EmissiveTextureEnabled?this.emissiveColor:p.Dt.BlackReadOnly),H.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),A.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),H.updateColor3("vAmbientColor",this._globalAmbientColor)}A.texturesEnabled&&(this._diffuseTexture&&f.DiffuseTextureEnabled&&R.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&f.AmbientTextureEnabled&&R.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&f.OpacityTextureEnabled&&R.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&f.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?R.setTexture("reflectionCubeSampler",this._reflectionTexture):R.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&f.EmissiveTextureEnabled&&R.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&f.LightmapTextureEnabled&&R.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&f.SpecularTextureEnabled&&R.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&A.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&R.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&f.RefractionTextureEnabled&&(this._refractionTexture.isCube?R.setTexture("refractionCubeSampler",this._refractionTexture):R.setTexture("refraction2DSampler",this._refractionTexture))),this.lE().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(t)&&this.lE().depthPeelingRenderer.bind(R),this._eventInfo.subMesh=z,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,W.g)(R,this,A),this.bindEyePosition(R)}else A.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(Z||!this.isFrozen){var h;if(A.lightsEnabled&&!this._disableLighting&&(0,I.l)(A,t,R,X,this._maxSimultaneousLights),(A.fogEnabled&&t.applyFog&&A.fogMode!==u.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||t.receiveShadows||X.PREPASS)&&this.bindView(R),(0,I.i)(A,t,R),X.NUM_MORPH_INFLUENCERS&&(0,I.r)(t,R),X.BAKED_VERTEX_ANIMATION_TEXTURE)null===(h=t.bakedVertexAnimationManager)||void 0===h||h.bind(R,X.INSTANCES);this.useLogarithmicDepth&&(0,I.o)(X,R,A),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(t,this._activeEffect,z),H.update()}getAnimatables(){const E=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&E.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&E.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&E.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&E.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&E.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&E.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&E.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&E.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&E.push(this._refractionTexture),E}getActiveTextures(){const E=super.getActiveTextures();return this._diffuseTexture&&E.push(this._diffuseTexture),this._ambientTexture&&E.push(this._ambientTexture),this._opacityTexture&&E.push(this._opacityTexture),this._reflectionTexture&&E.push(this._reflectionTexture),this._emissiveTexture&&E.push(this._emissiveTexture),this._specularTexture&&E.push(this._specularTexture),this._bumpTexture&&E.push(this._bumpTexture),this._lightmapTexture&&E.push(this._lightmapTexture),this._refractionTexture&&E.push(this._refractionTexture),E}hasTexture(E){return!!super.hasTexture(E)||(this._diffuseTexture===E||(this._ambientTexture===E||(this._opacityTexture===E||(this._reflectionTexture===E||(this._emissiveTexture===E||(this._specularTexture===E||(this._bumpTexture===E||(this._lightmapTexture===E||this._refractionTexture===E))))))))}dispose(E,t){var z,A,X,R,u,p,C,Z,H;t&&(null===(z=this._diffuseTexture)||void 0===z||z.dispose(),null===(A=this._ambientTexture)||void 0===A||A.dispose(),null===(X=this._opacityTexture)||void 0===X||X.dispose(),null===(R=this._reflectionTexture)||void 0===R||R.dispose(),null===(u=this._emissiveTexture)||void 0===u||u.dispose(),null===(p=this._specularTexture)||void 0===p||p.dispose(),null===(C=this._bumpTexture)||void 0===C||C.dispose(),null===(Z=this._lightmapTexture)||void 0===Z||Z.dispose(),null===(H=this._refractionTexture)||void 0===H||H.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(E,t)}clone(E){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],z=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const A=e.b.Clone((()=>new f(E,this.lE())),this,{cloneTexturesOnlyOnce:t});return A.name=E,A.id=E,this.stencil.copyTo(A.stencil),this._clonePlugins(A,z),A}static Parse(E,t,z){const A=e.b.Parse((()=>new f(E.name,t)),E,t,z);return E.stencil&&A.stencil.parse(E.stencil,t,z),h.b._ParsePlugins(E,A,t,z),A}static get DiffuseTextureEnabled(){return a.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(E){a.d.DiffuseTextureEnabled=E}static get DetailTextureEnabled(){return a.d.DetailTextureEnabled}static set DetailTextureEnabled(E){a.d.DetailTextureEnabled=E}static get AmbientTextureEnabled(){return a.d.AmbientTextureEnabled}static set AmbientTextureEnabled(E){a.d.AmbientTextureEnabled=E}static get OpacityTextureEnabled(){return a.d.OpacityTextureEnabled}static set OpacityTextureEnabled(E){a.d.OpacityTextureEnabled=E}static get ReflectionTextureEnabled(){return a.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(E){a.d.ReflectionTextureEnabled=E}static get EmissiveTextureEnabled(){return a.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(E){a.d.EmissiveTextureEnabled=E}static get SpecularTextureEnabled(){return a.d.SpecularTextureEnabled}static set SpecularTextureEnabled(E){a.d.SpecularTextureEnabled=E}static get BumpTextureEnabled(){return a.d.BumpTextureEnabled}static set BumpTextureEnabled(E){a.d.BumpTextureEnabled=E}static get LightmapTextureEnabled(){return a.d.LightmapTextureEnabled}static set LightmapTextureEnabled(E){a.d.LightmapTextureEnabled=E}static get RefractionTextureEnabled(){return a.d.RefractionTextureEnabled}static set RefractionTextureEnabled(E){a.d.RefractionTextureEnabled=E}static get ColorGradingTextureEnabled(){return a.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(E){a.d.ColorGradingTextureEnabled=E}static get FresnelEnabled(){return a.d.FresnelEnabled}static set FresnelEnabled(E){a.d.FresnelEnabled=E}}f.ForceGLSL=!1,(0,A.b)([(0,X.B)("diffuseTexture")],f.prototype,"_diffuseTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"diffuseTexture",void 0),(0,A.b)([(0,X.B)("ambientTexture")],f.prototype,"_ambientTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"ambientTexture",void 0),(0,A.b)([(0,X.B)("opacityTexture")],f.prototype,"_opacityTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"opacityTexture",void 0),(0,A.b)([(0,X.B)("reflectionTexture")],f.prototype,"_reflectionTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"reflectionTexture",void 0),(0,A.b)([(0,X.B)("emissiveTexture")],f.prototype,"_emissiveTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"emissiveTexture",void 0),(0,A.b)([(0,X.B)("specularTexture")],f.prototype,"_specularTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"specularTexture",void 0),(0,A.b)([(0,X.B)("bumpTexture")],f.prototype,"_bumpTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"bumpTexture",void 0),(0,A.b)([(0,X.B)("lightmapTexture")],f.prototype,"_lightmapTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"lightmapTexture",void 0),(0,A.b)([(0,X.B)("refractionTexture")],f.prototype,"_refractionTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"refractionTexture",void 0),(0,A.b)([(0,X.j)("ambient")],f.prototype,"ambientColor",void 0),(0,A.b)([(0,X.j)("diffuse")],f.prototype,"diffuseColor",void 0),(0,A.b)([(0,X.j)("specular")],f.prototype,"specularColor",void 0),(0,A.b)([(0,X.j)("emissive")],f.prototype,"emissiveColor",void 0),(0,A.b)([(0,X.K)()],f.prototype,"specularPower",void 0),(0,A.b)([(0,X.K)("useAlphaFromDiffuseTexture")],f.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"useAlphaFromDiffuseTexture",void 0),(0,A.b)([(0,X.K)("useEmissiveAsIllumination")],f.prototype,"_useEmissiveAsIllumination",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useEmissiveAsIllumination",void 0),(0,A.b)([(0,X.K)("linkEmissiveWithDiffuse")],f.prototype,"_linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"linkEmissiveWithDiffuse",void 0),(0,A.b)([(0,X.K)("useSpecularOverAlpha")],f.prototype,"_useSpecularOverAlpha",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useSpecularOverAlpha",void 0),(0,A.b)([(0,X.K)("useReflectionOverAlpha")],f.prototype,"_useReflectionOverAlpha",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useReflectionOverAlpha",void 0),(0,A.b)([(0,X.K)("disableLighting")],f.prototype,"_disableLighting",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsLightsDirty")],f.prototype,"disableLighting",void 0),(0,A.b)([(0,X.K)("useObjectSpaceNormalMap")],f.prototype,"_useObjectSpaceNormalMap",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useObjectSpaceNormalMap",void 0),(0,A.b)([(0,X.K)("useParallax")],f.prototype,"_useParallax",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallax",void 0),(0,A.b)([(0,X.K)("useParallaxOcclusion")],f.prototype,"_useParallaxOcclusion",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallaxOcclusion",void 0),(0,A.b)([(0,X.K)()],f.prototype,"parallaxScaleBias",void 0),(0,A.b)([(0,X.K)("roughness")],f.prototype,"_roughness",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"roughness",void 0),(0,A.b)([(0,X.K)()],f.prototype,"indexOfRefraction",void 0),(0,A.b)([(0,X.K)()],f.prototype,"invertRefractionY",void 0),(0,A.b)([(0,X.K)()],f.prototype,"alphaCutOff",void 0),(0,A.b)([(0,X.K)("useLightmapAsShadowmap")],f.prototype,"_useLightmapAsShadowmap",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useLightmapAsShadowmap",void 0),(0,A.b)([(0,X.o)("diffuseFresnelParameters")],f.prototype,"_diffuseFresnelParameters",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"diffuseFresnelParameters",void 0),(0,A.b)([(0,X.o)("opacityFresnelParameters")],f.prototype,"_opacityFresnelParameters",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],f.prototype,"opacityFresnelParameters",void 0),(0,A.b)([(0,X.o)("reflectionFresnelParameters")],f.prototype,"_reflectionFresnelParameters",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"reflectionFresnelParameters",void 0),(0,A.b)([(0,X.o)("refractionFresnelParameters")],f.prototype,"_refractionFresnelParameters",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"refractionFresnelParameters",void 0),(0,A.b)([(0,X.o)("emissiveFresnelParameters")],f.prototype,"_emissiveFresnelParameters",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"emissiveFresnelParameters",void 0),(0,A.b)([(0,X.K)("useReflectionFresnelFromSpecular")],f.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"useReflectionFresnelFromSpecular",void 0),(0,A.b)([(0,X.K)("useGlossinessFromSpecularMapAlpha")],f.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,A.b)([(0,X.K)("maxSimultaneousLights")],f.prototype,"_maxSimultaneousLights",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsLightsDirty")],f.prototype,"maxSimultaneousLights",void 0),(0,A.b)([(0,X.K)("invertNormalMapX")],f.prototype,"_invertNormalMapX",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapX",void 0),(0,A.b)([(0,X.K)("invertNormalMapY")],f.prototype,"_invertNormalMapY",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapY",void 0),(0,A.b)([(0,X.K)("twoSidedLighting")],f.prototype,"_twoSidedLighting",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"twoSidedLighting",void 0),(0,A.b)([(0,X.K)("applyDecalMapAfterDetailMap")],f.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,A.b)([(0,X.c)("_markAllSubMeshesAsMiscDirty")],f.prototype,"applyDecalMapAfterDetailMap",void 0),(0,c.f)("BABYLON.StandardMaterial",f),u.c.DefaultMaterialFactory=E=>new f("default material",E)}}]);