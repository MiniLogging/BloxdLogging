"use strict";(self.zjjkhojdx1=self.zjjkhojdx1||[]).push([[25],{11629:(k,h,o)=>{o.d(h,{d:()=>K});var x=o(11227),I=o(11551),q=o(11233),Y=o(11620),J=o(11617),G=o(11631),l=o(11593);class A extends J.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class K extends G.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(k){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(k,"DetailMap",140,new A,h),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=I.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=k._dirtyCallbacks[1]}isReadyForSubMesh(k,h,o){return!this._isEnabled||!(k._areTexturesDirty&&h.texturesEnabled&&o.getCaps().standardDerivatives&&this._texture&&Y.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(k,h){if(this._isEnabled){k.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const o=h.getEngine();k._areTexturesDirty&&(o.getCaps().standardDerivatives&&this._texture&&Y.e.DetailTextureEnabled&&this._isEnabled?((0,l.O)(this._texture,k,"DETAIL"),k.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):k.DETAIL=!1)}else k.DETAIL=!1}bindForSubMesh(k,h){if(!this._isEnabled)return;const o=this._material.isFrozen;k.useUbo&&o&&k.isSync||this._texture&&Y.e.DetailTextureEnabled&&(k.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,l.m)(this._texture,k,"detail")),h.texturesEnabled&&this._texture&&Y.e.DetailTextureEnabled&&k.setTexture("detailSampler",this._texture)}hasTexture(k){return this._texture===k}getActiveTextures(k){this._texture&&k.push(this._texture)}getAnimatables(k){this._texture&&this._texture.animations&&this._texture.animations.length>0&&k.push(this._texture)}dispose(k){var h;k&&(null===(h=this._texture)||void 0===h||h.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(k){k.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,x.d)([(0,q.z)("detailTexture"),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"texture",void 0),(0,x.d)([(0,q.E)()],K.prototype,"diffuseBlendLevel",void 0),(0,x.d)([(0,q.E)()],K.prototype,"roughnessBlendLevel",void 0),(0,x.d)([(0,q.E)()],K.prototype,"bumpLevel",void 0),(0,x.d)([(0,q.E)(),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"normalBlendMethod",void 0),(0,x.d)([(0,q.E)(),(0,q.c)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"isEnabled",void 0)},11617:(k,h,o)=>{o.d(h,{e:()=>x});class x{constructor(k){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=k,k)for(const h in k)Object.prototype.hasOwnProperty.call(k,h)&&this._setDefaultValue(h)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let k=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||k,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const k of Object.keys(this))"_"!==k[0]&&this._keys.push(k);if(this._externalProperties)for(const k in this._externalProperties)-1===this._keys.indexOf(k)&&this._keys.push(k)}isEqual(k){if(this._keys.length!==k._keys.length)return!1;for(let h=0;h<this._keys.length;h++){const o=this._keys[h];if(this[o]!==k[o])return!1}return!0}cloneTo(k){this._keys.length!==k._keys.length&&(k._keys=this._keys.slice(0));for(let h=0;h<this._keys.length;h++){const o=this._keys[h];k[o]=this[o]}}reset(){for(const k of this._keys)this._setDefaultValue(k)}_setDefaultValue(k){var h,o,x,I;const q=(null===(h=this._externalProperties)||void 0===h||null===(o=h[k])||void 0===o?void 0:o.type)??typeof this[k],Y=null===(x=this._externalProperties)||void 0===x||null===(I=x[k])||void 0===I?void 0:I.default;switch(q){case"number":this[k]=Y??0;break;case"string":this[k]=Y??"";break;default:this[k]=Y??!1}}toString(){let k="";for(let h=0;h<this._keys.length;h++){const o=this._keys[h],x=this[o];switch(typeof x){case"number":case"string":k+="#define "+o+" "+x+"\n";break;default:x&&(k+="#define "+o+"\n")}}return k}}},11620:(k,h,o)=>{o.d(h,{e:()=>I});var x=o(11151);class I{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(k){this._DiffuseTextureEnabled!==k&&(this._DiffuseTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(k){this._BaseWeightTextureEnabled!==k&&(this._BaseWeightTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(k){this._BaseDiffuseRoughnessTextureEnabled!==k&&(this._BaseDiffuseRoughnessTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(k){this._DetailTextureEnabled!==k&&(this._DetailTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(k){this._DecalMapEnabled!==k&&(this._DecalMapEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(k){this._AmbientTextureEnabled!==k&&(this._AmbientTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(k){this._OpacityTextureEnabled!==k&&(this._OpacityTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(k){this._ReflectionTextureEnabled!==k&&(this._ReflectionTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(k){this._EmissiveTextureEnabled!==k&&(this._EmissiveTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(k){this._SpecularTextureEnabled!==k&&(this._SpecularTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(k){this._BumpTextureEnabled!==k&&(this._BumpTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(k){this._LightmapTextureEnabled!==k&&(this._LightmapTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(k){this._RefractionTextureEnabled!==k&&(this._RefractionTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(k){this._ColorGradingTextureEnabled!==k&&(this._ColorGradingTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(k){this._FresnelEnabled!==k&&(this._FresnelEnabled=k,x.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(k){this._ClearCoatTextureEnabled!==k&&(this._ClearCoatTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(k){this._ClearCoatBumpTextureEnabled!==k&&(this._ClearCoatBumpTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(k){this._ClearCoatTintTextureEnabled!==k&&(this._ClearCoatTintTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(k){this._SheenTextureEnabled!==k&&(this._SheenTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(k){this._AnisotropicTextureEnabled!==k&&(this._AnisotropicTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(k){this._ThicknessTextureEnabled!==k&&(this._ThicknessTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(k){this._RefractionIntensityTextureEnabled!==k&&(this._RefractionIntensityTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(k){this._TranslucencyIntensityTextureEnabled!==k&&(this._TranslucencyIntensityTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(k){this._TranslucencyColorTextureEnabled!==k&&(this._TranslucencyColorTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(k){this._IridescenceTextureEnabled!==k&&(this._IridescenceTextureEnabled=k,x.e.MarkAllMaterialsAsDirty(1))}}I._DiffuseTextureEnabled=!0,I._BaseWeightTextureEnabled=!0,I._BaseDiffuseRoughnessTextureEnabled=!0,I._DetailTextureEnabled=!0,I._DecalMapEnabled=!0,I._AmbientTextureEnabled=!0,I._OpacityTextureEnabled=!0,I._ReflectionTextureEnabled=!0,I._EmissiveTextureEnabled=!0,I._SpecularTextureEnabled=!0,I._BumpTextureEnabled=!0,I._LightmapTextureEnabled=!0,I._RefractionTextureEnabled=!0,I._ColorGradingTextureEnabled=!0,I._FresnelEnabled=!0,I._ClearCoatTextureEnabled=!0,I._ClearCoatBumpTextureEnabled=!0,I._ClearCoatTintTextureEnabled=!0,I._SheenTextureEnabled=!0,I._AnisotropicTextureEnabled=!0,I._ThicknessTextureEnabled=!0,I._RefractionIntensityTextureEnabled=!0,I._TranslucencyIntensityTextureEnabled=!0,I._TranslucencyColorTextureEnabled=!0,I._IridescenceTextureEnabled=!0},11638:(k,h,o)=>{o.d(h,{e:()=>q});var x,I=o(11239);!function(k){k[k.Zero=0]="Zero",k[k.One=1]="One",k[k.MaxViewZ=2]="MaxViewZ"}(x||(x={}));class q{static CreateConfiguration(k){return q._Configurations[k]={defines:{},previousWorldMatrices:{},previousViewProjection:I.Matrix.Zero(),currentViewProjection:I.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},q._Configurations[k]}static DeleteConfiguration(k){delete q._Configurations[k]}static GetConfiguration(k){return q._Configurations[k]}static AddUniformsAndSamplers(k,h){k.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(k,h){for(const o of h)if(o.Oh)for(const h of o.Oh)h._removeDrawWrapper(k)}static PrepareDefines(k,h,o){if(!o._arePrePassDirty)return;const x=q._Configurations[k];if(!x)return;o.PREPASS=!0,o.PREPASS_COLOR=!1,o.PREPASS_COLOR_INDEX=-1;let I=0;for(let Y=0;Y<q.GeometryTextureDescriptions.length;Y++){const k=q.GeometryTextureDescriptions[Y],h=k.define,J=k.defineIndex,G=x.defines[J];void 0!==G?(o[h]=!0,o[J]=G,I++):(o[h]=!1,delete o[J])}o.SCENE_MRT_COUNT=I,o.BONES_VELOCITY_ENABLED=h.useBones&&h.computeBonesUsingShaders&&h.skeleton&&!h.skeleton.isUsingTextureForMatrices&&-1===x.excludedSkinnedMesh.indexOf(h)}static Bind(k,h,o,x,I){const Y=q._Configurations[k];if(!Y)return;const J=o.ik(),G=J.getEngine();if(Y.reverseCulling&&G.setStateCullFaceType(J._mirroredCameraPosition?I.cullBackFaces:!I.cullBackFaces),(void 0!==Y.defines.PREPASS_VELOCITY_INDEX||void 0!==Y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Y.previousWorldMatrices[o.uniqueId]||(Y.previousWorldMatrices[o.uniqueId]=x.clone()),Y.previousViewProjection||(Y.previousViewProjection=J.getTransformMatrix().clone(),Y.currentViewProjection=J.getTransformMatrix().clone()),Y.currentViewProjection.updateFlag!==J.getTransformMatrix().updateFlag?(Y.lastUpdateFrameId=G.frameId,Y.previousViewProjection.Y(Y.currentViewProjection),Y.currentViewProjection.Y(J.getTransformMatrix())):Y.lastUpdateFrameId!==G.frameId&&(Y.lastUpdateFrameId=G.frameId,Y.previousViewProjection.Y(Y.currentViewProjection)),h.setMatrix("previousWorld",Y.previousWorldMatrices[o.uniqueId]),h.setMatrix("previousViewProjection",Y.previousViewProjection),Y.previousWorldMatrices[o.uniqueId]=x.clone(),o.useBones&&o.computeBonesUsingShaders&&o.skeleton)){const k=o.skeleton;if(!k.isUsingTextureForMatrices||-1===h.getUniformIndex("boneTextureWidth")){const x=k.getTransformMatrices(o);x&&(Y.previousBones[o.uniqueId]||(Y.previousBones[o.uniqueId]=x.slice()),h.setMatrices("mPreviousBones",Y.previousBones[o.uniqueId]),Y.previousBones[o.uniqueId].set(x))}}}}q.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],q._Configurations={}},11631:(k,h,o)=>{o.d(h,{c:()=>f});var x=o(11227),I=o(11233),q=o(11551),Y=o(11120),J=o(11141),G=o(11160);const l=new RegExp("^([gimus]+)!");class A{constructor(k){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=k,this._scene=k.ik(),this._engine=this._scene.getEngine()}_addPlugin(k){for(let x=0;x<this._plugins.length;++x)if(this._plugins[x].name===k.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!k.isCompatible(this._material.shaderLanguage))throw`The plugin "${k.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const h=k.getClassName();A._MaterialPluginClassToMainDefine[h]||(A._MaterialPluginClassToMainDefine[h]="MATERIALPLUGIN_"+ ++A._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(k,h)=>this._handlePluginEvent(k,h),this._plugins.push(k),this._plugins.sort(((k,h)=>k.priority-h.priority)),this._codeInjectionPoints={};const o={};o[A._MaterialPluginClassToMainDefine[h]]={type:"boolean",default:!0};for(const x of this._plugins)x.collectDefines(o),this._collectPointNames("vertex",x.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",x.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=o,!0}_activatePlugin(k){-1===this._activePlugins.indexOf(k)&&(this._activePlugins.push(k),this._activePlugins.sort(((k,h)=>k.priority-h.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),k.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(k),this._activePluginsForExtraEvents.sort(((k,h)=>k.priority-h.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(k){for(let h=0;h<this._plugins.length;++h)if(this._plugins[h].name===k)return this._plugins[h];return null}_handlePluginEventIsReadyForSubMesh(k){let h=!0;for(const o of this._activePlugins)h=h&&o.isReadyForSubMesh(k.defines,this._scene,this._engine,k.subMesh);k.isReadyForSubMesh=h}_handlePluginEventPrepareDefinesBeforeAttributes(k){for(const h of this._activePlugins)h.prepareDefinesBeforeAttributes(k.defines,this._scene,k.mesh)}_handlePluginEventPrepareDefines(k){for(const h of this._activePlugins)h.prepareDefines(k.defines,this._scene,k.mesh)}_handlePluginEventHardBindForSubMesh(k){for(const h of this._activePluginsForExtraEvents)h.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,k.subMesh)}_handlePluginEventBindForSubMesh(k){for(const h of this._activePlugins)h.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,k.subMesh)}_handlePluginEventHasRenderTargetTextures(k){let h=!1;for(const o of this._activePluginsForExtraEvents)if(h=o.hasRenderTargetTextures(),h)break;k.hasRenderTargetTextures=h}_handlePluginEventFillRenderTargetTextures(k){for(const h of this._activePluginsForExtraEvents)h.fillRenderTargetTextures(k.renderTargets)}_handlePluginEvent(k,h){switch(k){case 512:{const k=h;for(const h of this._activePlugins)h.getActiveTextures(k.activeTextures);break}case 256:{const k=h;for(const h of this._activePlugins)h.getAnimatables(k.animatables);break}case 1024:{const k=h;let o=!1;for(const h of this._activePlugins)if(o=h.hasTexture(k.texture),o)break;k.hasTexture=o;break}case 2:{const k=h;for(const h of this._plugins)h.dispose(k.forceDisposeTextures);break}case 4:h.defineNames=this._defineNamesFromPlugins;break;case 128:{const k=h;for(const h of this._activePlugins)k.fallbackRank=h.addFallbacks(k.defines,k.fallbacks,k.fallbackRank),h.getAttributes(k.attributes,this._scene,k.mesh);this._uniformList.length>0&&k.uniforms.push(...this._uniformList),this._samplerList.length>0&&k.samplers.push(...this._samplerList),this._uboList.length>0&&k.uniformBuffersNames.push(...this._uboList),k.customCode=this._injectCustomCode(k,k.customCode);break}case 8:{const k=h;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const o=1===this._material.shaderLanguage;for(const h of this._plugins){const x=h.getUniforms(this._material.shaderLanguage);if(x){if(x.ubo)for(const h of x.ubo){if(h.size&&h.type){const x=h.arraySize??0;if(k.ubo.addUniform(h.name,h.size,x),o){let k;switch(h.type){case"mat4":k="mat4x4f";break;case"float":k="f32";break;default:k=`${h.type}f`}this._uboDeclaration+=x>0?`uniform ${h.name}: array<${k}, ${x}>;\n`:`uniform ${h.name}: ${k};\n`}else this._uboDeclaration+=`${h.type} ${h.name}${x>0?`[${x}]`:""};\n`}this._uniformList.push(h.name)}x.vertex&&(this._vertexDeclaration+=x.vertex+"\n"),x.fragment&&(this._fragmentDeclaration+=x.fragment+"\n")}h.getSamplers(this._samplerList),h.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(k,h){if(h)for(const o in h)this._codeInjectionPoints[k]||(this._codeInjectionPoints[k]={}),this._codeInjectionPoints[k][o]=!0}_injectCustomCode(k,h){return(o,x)=>{var I;h&&(x=h(o,x)),this._uboDeclaration&&(x=x.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(x=x.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(x=x.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const q=null===(I=this._codeInjectionPoints)||void 0===I?void 0:I[o];if(!q)return x;let Y=null;for(let h in q){let I="";for(const x of this._activePlugins){var A;let q=null===(A=x.getCustomCode(o,this._material.shaderLanguage))||void 0===A?void 0:A[h];if(q){if(x.resolveIncludes){if(null===Y){const h=0;Y={defines:[],indexParameters:k.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:G.b.GetShadersRepository(h),includesShadersStore:G.b.GetIncludesShadersStore(h),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}Y.isFragment="fragment"===o,(0,J.i)(q,Y,(k=>q=k))}I+=q+"\n"}}if(I.length>0)if("!"===h.charAt(0)){h=h.substring(1);let k="g";if("!"===h.charAt(0))k="",h=h.substring(1);else{const o=l.exec(h);o&&o.length>=2&&(k=o[1],h=h.substring(k.length+1))}k.indexOf("g")<0&&(k+="g");const o=x,q=new RegExp(h,k);let Y=q.exec(o);for(;null!==Y;){let k=I;for(let h=0;h<Y.length;++h)k=k.replace("$"+h,Y[h]);x=x.replace(Y[0],k),Y=q.exec(o)}}else{const k="#define "+h;x=x.replace(k,"\n"+I+"\n"+k)}}return x}}}A._MaterialPluginClassToMainDefine={},A._MaterialPluginCounter=0,Y.b.OnEnginesDisposedObservable.add((()=>{X()}));const K=[];let a=!1,N=null;function X(){K.length=0,a=!1,q.e.OnEventObservable.remove(N),N=null}var c=o(11271),W=o(11199);class f{isCompatible(k){return 0===k}_enable(k){k&&this._pluginManager._activatePlugin(this)}constructor(k,h,o,x){let I=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=k,this.name=h,this.priority=o,this.resolveIncludes=Y,k.pluginManager||(k.pluginManager=new A(k),k.sh.add((()=>{k.pluginManager=void 0}))),this._pluginDefineNames=x,this._pluginManager=k.pluginManager,I&&this._pluginManager._addPlugin(this),q&&this._enable(!0),this.markAllDefinesAsDirty=k._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(k,h,o,x){return!0}hardBindForSubMesh(k,h,o,x){}bindForSubMesh(k,h,o,x){}dispose(k){}getCustomCode(k){return null}collectDefines(k){if(this._pluginDefineNames)for(const h of Object.keys(this._pluginDefineNames)){if("_"===h[0])continue;const o=typeof this._pluginDefineNames[h];k[h]={type:"number"===o?"number":"string"===o?"string":"boolean"===o?"boolean":"object",default:this._pluginDefineNames[h]}}}prepareDefinesBeforeAttributes(k,h,o){}prepareDefines(k,h,o){}hasTexture(k){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(k){}getActiveTextures(k){}getAnimatables(k){}addFallbacks(k,h,o){return o}getSamplers(k){}getAttributes(k,h,o){}getUniformBuffersNames(k){}getUniforms(){return{}}copyTo(k){c.c.Clone((()=>k),this)}serialize(){return c.c.Serialize(this)}parse(k,h,o){c.c.Parse((()=>this),k,h,o)}}(0,x.d)([(0,I.E)()],f.prototype,"name",void 0),(0,x.d)([(0,I.E)()],f.prototype,"priority",void 0),(0,x.d)([(0,I.E)()],f.prototype,"resolveIncludes",void 0),(0,x.d)([(0,I.E)()],f.prototype,"registerForExtraEvents",void 0),(0,W.g)("BABYLON.MaterialPluginBase",f)},11612:(k,h,o)=>{o.d(h,{c:()=>x});class x{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(k){k.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(k){}bindForSubMesh(k,h,o,x,I){if(h.prePassRenderer&&h.prePassRenderer.enabled&&h.prePassRenderer.currentRTisSceneRT&&(-1!==h.prePassRenderer.getIndex(2)||-1!==h.prePassRenderer.getIndex(11))){this.previousWorldMatrices[o.uniqueId]||(this.previousWorldMatrices[o.uniqueId]=x.clone()),this.previousViewProjection||(this.previousViewProjection=h.getTransformMatrix().clone(),this.currentViewProjection=h.getTransformMatrix().clone());const I=h.getEngine();this.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=I.frameId,this.previousViewProjection.Y(this.currentViewProjection),this.currentViewProjection.Y(h.getTransformMatrix())):this._lastUpdateFrameId!==I.frameId&&(this._lastUpdateFrameId=I.frameId,this.previousViewProjection.Y(this.currentViewProjection)),k.setMatrix("previousWorld",this.previousWorldMatrices[o.uniqueId]),k.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[o.uniqueId]=x.clone()}}}},11610:(k,h,o)=>{o.d(h,{Rh:()=>F});var x=o(11227),I=o(11233),q=o(11330),Y=o(11472),J=o(11281),G=o(11308),l=o(11612),A=o(11479),K=o(11551),a=o(11617),N=o(11544),X=o(11223),c=o(11199),W=o(11620),f=o(11537),M=o(11629),T=o(11602),j=o(11593),d=o(11271),b=o(11638);const V={effect:null,subMesh:null};class i extends a.e{constructor(k){super(k),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(k){const h=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const o of h)this[o]=o===k}}class F extends N.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(k){this._attachImageProcessingConfiguration(k),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(k){k!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=k||this.ik().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(k){this.imageProcessingConfiguration.colorCurvesEnabled=k}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(k){this.imageProcessingConfiguration.colorGradingEnabled=k}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(k){this._imageProcessingConfiguration.toneMappingEnabled=k}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(k){this._imageProcessingConfiguration.exposure=k}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(k){this._imageProcessingConfiguration.contrast=k}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(k){this._imageProcessingConfiguration.colorGradingTexture=k}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(k){this._imageProcessingConfiguration.colorCurves=k}get canRenderToMRT(){return!0}constructor(k,h){super(k,h,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||F.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new J.Zh(0,0,0),this.diffuseColor=new J.Zh(1,1,1),this.specularColor=new J.Zh(1,1,1),this.emissiveColor=new J.Zh(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new q.g(16),this._globalAmbientColor=new J.Zh(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new M.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new l.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),F.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),F.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(F.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(F.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Rh"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===K.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Sh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==K.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Sh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(k,h){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const I=h._drawWrapper;if(I.effect&&this.isFrozen&&I._wasPreviouslyReady&&I._wasPreviouslyUsingInstances===x)return!0;h.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),h.materialDefines=new i(this._eventInfo.defineNames));const q=this.ik(),Y=h.materialDefines;if(this._isReadyForSubMesh(h))return!0;const J=q.getEngine();Y._needNormals=(0,j.L)(q,k,Y,!0,this._maxSimultaneousLights,this._disableLighting),(0,j.Q)(q,Y);const K=this.needAlphaBlendingForMesh(k)&&this.ik().useOrderIndependentTransparency;if((0,j.W)(q,Y,this.canRenderToMRT&&!K),(0,j.U)(q,Y,K),b.e.PrepareDefines(J.currentRenderPassId,k,Y),Y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Y._needUVs=!1;for(let k=1;k<=6;++k)Y["MAINUV"+k]=!1;if(q.texturesEnabled){if(Y.DIFFUSEDIRECTUV=0,Y.BUMPDIRECTUV=0,Y.AMBIENTDIRECTUV=0,Y.OPACITYDIRECTUV=0,Y.EMISSIVEDIRECTUV=0,Y.SPECULARDIRECTUV=0,Y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&F.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._diffuseTexture,Y,"DIFFUSE")}else Y.DIFFUSE=!1;if(this._ambientTexture&&F.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._ambientTexture,Y,"AMBIENT")}else Y.AMBIENT=!1;if(this._opacityTexture&&F.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._opacityTexture,Y,"OPACITY"),Y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Y.OPACITY=!1;if(this._reflectionTexture&&F.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Y._needNormals=!0,Y.REFLECTION=!0,Y.ROUGHNESS=this._roughness>0,Y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===X.b.INVCUBIC_MODE,Y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Y.REFLECTIONMAP_OPPOSITEZ=Y.REFLECTIONMAP_3D&&this.ik().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case X.b.EXPLICIT_MODE:Y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case X.b.PLANAR_MODE:Y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case X.b.PROJECTION_MODE:Y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case X.b.SKYBOX_MODE:Y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case X.b.SPHERICAL_MODE:Y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case X.b.EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case X.b.FIXED_EQUIRECTANGULAR_MODE:Y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case X.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case X.b.CUBIC_MODE:case X.b.INVCUBIC_MODE:default:Y.setReflectionMode("REFLECTIONMAP_CUBIC")}Y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Y.REFLECTION=!1,Y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&F.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._emissiveTexture,Y,"EMISSIVE")}else Y.EMISSIVE=!1;if(this._lightmapTexture&&F.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._lightmapTexture,Y,"LIGHTMAP"),Y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Y.LIGHTMAP=!1;if(this._specularTexture&&F.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,j.O)(this._specularTexture,Y,"SPECULAR"),Y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Y.SPECULAR=!1;if(q.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&F.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,j.O)(this._bumpTexture,Y,"BUMP"),Y.PARALLAX=this._useParallax,Y.PARALLAX_RHS=q.useRightHandedSystem,Y.PARALLAXOCCLUSION=this._useParallaxOcclusion,Y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Y.BUMP=!1,Y.PARALLAX=!1,Y.PARALLAX_RHS=!1,Y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&F.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Y._needUVs=!0,Y.REFRACTION=!0,Y.REFRACTIONMAP_3D=this._refractionTexture.isCube,Y.RGBDREFRACTION=this._refractionTexture.isRGBD,Y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Y.REFRACTION=!1;Y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Y.DIFFUSE=!1,Y.AMBIENT=!1,Y.OPACITY=!1,Y.REFLECTION=!1,Y.EMISSIVE=!1,Y.LIGHTMAP=!1,Y.BUMP=!1,Y.REFRACTION=!1;Y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Y.SPECULAROVERALPHA=this._useSpecularOverAlpha,Y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(k)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Y,this._eventInfo.subMesh=h,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Y),Y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Y._areFresnelDirty&&(F.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Y._needNormals=!0,Y.FRESNEL=!0):Y.FRESNEL=!1),Y.AREALIGHTUSED)for(let o=0;o<k.lightSources.length;o++)if(!k.lightSources[o]._isReady())return!1;(0,j.P)(k,q,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(k),Y,this._applyDecalMapAfterDetailMap),(0,j.K)(q,J,this,Y,x,null,h.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Y,this._eventInfo.mesh=k,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,j.H)(k,Y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let a=!1;if(Y.isDirty){const x=Y._areLightsDisposed;Y.markAsProcessed();const I=new f.b;Y.REFLECTION&&I.addFallback(0,"REFLECTION"),Y.SPECULAR&&I.addFallback(0,"SPECULAR"),Y.BUMP&&I.addFallback(0,"BUMP"),Y.PARALLAX&&I.addFallback(1,"PARALLAX"),Y.PARALLAX_RHS&&I.addFallback(1,"PARALLAX_RHS"),Y.PARALLAXOCCLUSION&&I.addFallback(0,"PARALLAXOCCLUSION"),Y.SPECULAROVERALPHA&&I.addFallback(0,"SPECULAROVERALPHA"),Y.FOG&&I.addFallback(1,"FOG"),Y.POINTSIZE&&I.addFallback(0,"POINTSIZE"),Y.LOGARITHMICDEPTH&&I.addFallback(0,"LOGARITHMICDEPTH"),(0,j.p)(Y,I,this._maxSimultaneousLights),Y.SPECULARTERM&&I.addFallback(0,"SPECULARTERM"),Y.DIFFUSEFRESNEL&&I.addFallback(1,"DIFFUSEFRESNEL"),Y.OPACITYFRESNEL&&I.addFallback(2,"OPACITYFRESNEL"),Y.REFLECTIONFRESNEL&&I.addFallback(3,"REFLECTIONFRESNEL"),Y.EMISSIVEFRESNEL&&I.addFallback(4,"EMISSIVEFRESNEL"),Y.FRESNEL&&I.addFallback(4,"FRESNEL"),Y.MULTIVIEW&&I.addFallback(0,"MULTIVIEW");const K=[G.g.PositionKind];Y.NORMAL&&K.push(G.g.NormalKind),Y.TANGENT&&K.push(G.g.TangentKind);for(let k=1;k<=6;++k)Y["UV"+k]&&K.push(`uv${1===k?"":k}`);Y.VERTEXCOLOR&&K.push(G.g.ColorKind),(0,j.v)(K,k,Y,I),(0,j.z)(K,Y),(0,j.D)(K,k,Y),(0,j.t)(K,k,Y);let N="default";const X=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],c=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],W=["Material","Scene","Mesh"],M={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=I,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Y,this._eventInfo.uniforms=X,this._eventInfo.attributes=K,this._eventInfo.samplers=c,this._eventInfo.uniformBuffersNames=W,this._eventInfo.customCode=void 0,this._eventInfo.mesh=k,this._eventInfo.indexParameters=M,this._callbackPluginEventGeneric(128,this._eventInfo),b.e.AddUniformsAndSamplers(X,c),l.c.AddUniforms(X),l.c.AddSamplers(c),A.c&&(A.c.PrepareUniforms(X,Y),A.c.PrepareSamplers(c,Y)),(0,j.Z)({uniformsNames:X,uniformBuffersNames:W,samplers:c,defines:Y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,T.c)(X);const d={};this.customShaderNameResolve&&(N=this.customShaderNameResolve(N,X,W,c,Y,K,d));const i=Y.toString(),F=h.effect;let R=q.getEngine().createEffect(N,{attributes:K,uniformsNames:X,uniformBuffersNames:W,samplers:c,defines:i,fallbacks:I,onCompiled:this.onCompiled,onError:this.onError,indexParameters:M,processFinalCode:d.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([o.e(41),o.e(64)]).then(o.bind(o,13774)),Promise.all([o.e(39),o.e(65)]).then(o.bind(o,13922))]):await Promise.all([Promise.all([o.e(34),o.e(67)]).then(o.bind(o,14006)),Promise.all([o.e(33),o.e(68)]).then(o.bind(o,14133))]),this._shadersLoaded=!0}},J);if(this._eventInfo.customCode=void 0,R)if(this._onEffectCreatedObservable&&(V.effect=R,V.subMesh=h,this._onEffectCreatedObservable.notifyObservers(V)),this.allowShaderHotSwapping&&F&&!R.isReady()){if(R=F,Y.markAsUnprocessed(),a=this.isFrozen,x)return Y._areLightsDisposed=!0,!1}else q.resetCachedMaterial(),h.setEffect(R,Y,this._materialContext)}return!(!h.effect||!h.effect.isReady())&&(Y._renderId=q.getRenderId(),I._wasPreviouslyReady=!a,I._wasPreviouslyUsingInstances=x,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const k=this._uniformBuffer;k.addUniform("diffuseLeftColor",4),k.addUniform("diffuseRightColor",4),k.addUniform("opacityParts",4),k.addUniform("reflectionLeftColor",4),k.addUniform("reflectionRightColor",4),k.addUniform("refractionLeftColor",4),k.addUniform("refractionRightColor",4),k.addUniform("emissiveLeftColor",4),k.addUniform("emissiveRightColor",4),k.addUniform("vDiffuseInfos",2),k.addUniform("vAmbientInfos",2),k.addUniform("vOpacityInfos",2),k.addUniform("vReflectionInfos",2),k.addUniform("vReflectionPosition",3),k.addUniform("vReflectionSize",3),k.addUniform("vEmissiveInfos",2),k.addUniform("vLightmapInfos",2),k.addUniform("vSpecularInfos",2),k.addUniform("vBumpInfos",3),k.addUniform("diffuseMatrix",16),k.addUniform("ambientMatrix",16),k.addUniform("opacityMatrix",16),k.addUniform("reflectionMatrix",16),k.addUniform("emissiveMatrix",16),k.addUniform("lightmapMatrix",16),k.addUniform("specularMatrix",16),k.addUniform("bumpMatrix",16),k.addUniform("vTangentSpaceParams",2),k.addUniform("pointSize",1),k.addUniform("alphaCutOff",1),k.addUniform("refractionMatrix",16),k.addUniform("vRefractionInfos",4),k.addUniform("vRefractionPosition",3),k.addUniform("vRefractionSize",3),k.addUniform("vSpecularColor",4),k.addUniform("vEmissiveColor",3),k.addUniform("vDiffuseColor",4),k.addUniform("vAmbientColor",3),k.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(k,h,o){const x=this.ik(),I=o.materialDefines;if(!I)return;const q=o.effect;if(!q)return;this._activeEffect=q,h.getMeshUniformBuffer().bindToEffect(q,"Mesh"),h.transferToEffect(k),this._uniformBuffer.bindToEffect(q,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,x,h,k,this.isFrozen),b.e.Bind(x.getEngine().currentRenderPassId,this._activeEffect,h,k,this);const G=x.activeCamera;G?this._uniformBuffer.updateFloat4("cameraInfo",G.nx,G.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=o,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),I.OBJECTSPACE_NORMALMAP&&(k.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const l=this._mustRebind(x,q,o,h.visibility);(0,j.e)(h,q);const A=this._uniformBuffer;if(l){if(this.bindViewProjection(q),!A.useUbo||!this.isFrozen||!A.isSync||o._drawWrapper._forceRebindOnNextCall){if(F.FresnelEnabled&&I.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(A.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),A.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&A.updateColor4("opacityParts",new J.Zh(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(A.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),A.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(A.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),A.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(A.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),A.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),x.texturesEnabled){if(this._diffuseTexture&&F.DiffuseTextureEnabled&&(A.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,j.m)(this._diffuseTexture,A,"diffuse")),this._ambientTexture&&F.AmbientTextureEnabled&&(A.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,j.m)(this._ambientTexture,A,"ambient")),this._opacityTexture&&F.OpacityTextureEnabled&&(A.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,j.m)(this._opacityTexture,A,"opacity")),this._hasAlphaChannel()&&A.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&F.ReflectionTextureEnabled){if(A.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),A.qq("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const k=this._reflectionTexture;A.updateVector3("vReflectionPosition",k.boundingBoxPosition),A.updateVector3("vReflectionSize",k.boundingBoxSize)}}else A.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&F.EmissiveTextureEnabled&&(A.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,j.m)(this._emissiveTexture,A,"emissive")),this._lightmapTexture&&F.LightmapTextureEnabled&&(A.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,j.m)(this._lightmapTexture,A,"lightmap")),this._specularTexture&&F.SpecularTextureEnabled&&(A.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,j.m)(this._specularTexture,A,"specular")),this._bumpTexture&&x.getEngine().getCaps().standardDerivatives&&F.BumpTextureEnabled&&(A.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,j.m)(this._bumpTexture,A,"bump"),x._mirroredCameraPosition?A.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):A.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&F.RefractionTextureEnabled){let k=1;if(this._refractionTexture.isCube||(A.qq("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(k=this._refractionTexture.depth)),A.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,k,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const k=this._refractionTexture;A.updateVector3("vRefractionPosition",k.boundingBoxPosition),A.updateVector3("vRefractionSize",k.boundingBoxSize)}}}this.pointsCloud&&A.updateFloat("pointSize",this.pointSize),A.updateColor4("vSpecularColor",this.specularColor,this.specularPower),A.updateColor3("vEmissiveColor",F.EmissiveTextureEnabled?this.emissiveColor:J.Zh.BlackReadOnly),A.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),x.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),A.updateColor3("vAmbientColor",this._globalAmbientColor)}x.texturesEnabled&&(this._diffuseTexture&&F.DiffuseTextureEnabled&&q.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&F.AmbientTextureEnabled&&q.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&F.OpacityTextureEnabled&&q.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&F.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?q.setTexture("reflectionCubeSampler",this._reflectionTexture):q.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&F.EmissiveTextureEnabled&&q.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&F.LightmapTextureEnabled&&q.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&F.SpecularTextureEnabled&&q.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&x.getEngine().getCaps().standardDerivatives&&F.BumpTextureEnabled&&q.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&F.RefractionTextureEnabled&&(this._refractionTexture.isCube?q.setTexture("refractionCubeSampler",this._refractionTexture):q.setTexture("refraction2DSampler",this._refractionTexture))),this.ik().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(h)&&this.ik().depthPeelingRenderer.bind(q),this._eventInfo.subMesh=o,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,T.g)(q,this,x),this.bindEyePosition(q)}else x.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(l||!this.isFrozen){var K;if(x.lightsEnabled&&!this._disableLighting&&(0,j.i)(x,h,q,I,this._maxSimultaneousLights),(x.fogEnabled&&h.applyFog&&x.fogMode!==Y.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||h.receiveShadows||I.PREPASS)&&this.bindView(q),(0,j.f)(x,h,q),I.NUM_MORPH_INFLUENCERS&&(0,j.k)(h,q),I.BAKED_VERTEX_ANIMATION_TEXTURE)null===(K=h.bakedVertexAnimationManager)||void 0===K||K.bind(q,I.INSTANCES);this.useLogarithmicDepth&&(0,j.j)(I,q,x),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(h,this._activeEffect,o),A.update()}getAnimatables(){const k=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&k.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&k.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&k.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&k.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&k.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&k.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&k.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&k.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&k.push(this._refractionTexture),k}getActiveTextures(){const k=super.getActiveTextures();return this._diffuseTexture&&k.push(this._diffuseTexture),this._ambientTexture&&k.push(this._ambientTexture),this._opacityTexture&&k.push(this._opacityTexture),this._reflectionTexture&&k.push(this._reflectionTexture),this._emissiveTexture&&k.push(this._emissiveTexture),this._specularTexture&&k.push(this._specularTexture),this._bumpTexture&&k.push(this._bumpTexture),this._lightmapTexture&&k.push(this._lightmapTexture),this._refractionTexture&&k.push(this._refractionTexture),k}hasTexture(k){return!!super.hasTexture(k)||(this._diffuseTexture===k||(this._ambientTexture===k||(this._opacityTexture===k||(this._reflectionTexture===k||(this._emissiveTexture===k||(this._specularTexture===k||(this._bumpTexture===k||(this._lightmapTexture===k||this._refractionTexture===k))))))))}dispose(k,h){var o,x,I,q,Y,J,G,l,A;h&&(null===(o=this._diffuseTexture)||void 0===o||o.dispose(),null===(x=this._ambientTexture)||void 0===x||x.dispose(),null===(I=this._opacityTexture)||void 0===I||I.dispose(),null===(q=this._reflectionTexture)||void 0===q||q.dispose(),null===(Y=this._emissiveTexture)||void 0===Y||Y.dispose(),null===(J=this._specularTexture)||void 0===J||J.dispose(),null===(G=this._bumpTexture)||void 0===G||G.dispose(),null===(l=this._lightmapTexture)||void 0===l||l.dispose(),null===(A=this._refractionTexture)||void 0===A||A.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(k,h)}clone(k){let h=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const x=d.c.Clone((()=>new F(k,this.ik())),this,{cloneTexturesOnlyOnce:h});return x.name=k,x.id=k,this.stencil.copyTo(x.stencil),this._clonePlugins(x,o),x}static Parse(k,h,o){const x=d.c.Parse((()=>new F(k.name,h)),k,h,o);return k.stencil&&x.stencil.parse(k.stencil,h,o),K.e._ParsePlugins(k,x,h,o),x}static get DiffuseTextureEnabled(){return W.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(k){W.e.DiffuseTextureEnabled=k}static get DetailTextureEnabled(){return W.e.DetailTextureEnabled}static set DetailTextureEnabled(k){W.e.DetailTextureEnabled=k}static get AmbientTextureEnabled(){return W.e.AmbientTextureEnabled}static set AmbientTextureEnabled(k){W.e.AmbientTextureEnabled=k}static get OpacityTextureEnabled(){return W.e.OpacityTextureEnabled}static set OpacityTextureEnabled(k){W.e.OpacityTextureEnabled=k}static get ReflectionTextureEnabled(){return W.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(k){W.e.ReflectionTextureEnabled=k}static get EmissiveTextureEnabled(){return W.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(k){W.e.EmissiveTextureEnabled=k}static get SpecularTextureEnabled(){return W.e.SpecularTextureEnabled}static set SpecularTextureEnabled(k){W.e.SpecularTextureEnabled=k}static get BumpTextureEnabled(){return W.e.BumpTextureEnabled}static set BumpTextureEnabled(k){W.e.BumpTextureEnabled=k}static get LightmapTextureEnabled(){return W.e.LightmapTextureEnabled}static set LightmapTextureEnabled(k){W.e.LightmapTextureEnabled=k}static get RefractionTextureEnabled(){return W.e.RefractionTextureEnabled}static set RefractionTextureEnabled(k){W.e.RefractionTextureEnabled=k}static get ColorGradingTextureEnabled(){return W.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(k){W.e.ColorGradingTextureEnabled=k}static get FresnelEnabled(){return W.e.FresnelEnabled}static set FresnelEnabled(k){W.e.FresnelEnabled=k}}F.ForceGLSL=!1,(0,x.d)([(0,I.z)("diffuseTexture")],F.prototype,"_diffuseTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],F.prototype,"diffuseTexture",void 0),(0,x.d)([(0,I.z)("ambientTexture")],F.prototype,"_ambientTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"ambientTexture",void 0),(0,x.d)([(0,I.z)("opacityTexture")],F.prototype,"_opacityTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],F.prototype,"opacityTexture",void 0),(0,x.d)([(0,I.z)("reflectionTexture")],F.prototype,"_reflectionTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"reflectionTexture",void 0),(0,x.d)([(0,I.z)("emissiveTexture")],F.prototype,"_emissiveTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"emissiveTexture",void 0),(0,x.d)([(0,I.z)("specularTexture")],F.prototype,"_specularTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"specularTexture",void 0),(0,x.d)([(0,I.z)("bumpTexture")],F.prototype,"_bumpTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"bumpTexture",void 0),(0,x.d)([(0,I.z)("lightmapTexture")],F.prototype,"_lightmapTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"lightmapTexture",void 0),(0,x.d)([(0,I.z)("refractionTexture")],F.prototype,"_refractionTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"refractionTexture",void 0),(0,x.d)([(0,I.i)("ambient")],F.prototype,"ambientColor",void 0),(0,x.d)([(0,I.i)("diffuse")],F.prototype,"diffuseColor",void 0),(0,x.d)([(0,I.i)("specular")],F.prototype,"specularColor",void 0),(0,x.d)([(0,I.i)("emissive")],F.prototype,"emissiveColor",void 0),(0,x.d)([(0,I.E)()],F.prototype,"specularPower",void 0),(0,x.d)([(0,I.E)("useAlphaFromDiffuseTexture")],F.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],F.prototype,"useAlphaFromDiffuseTexture",void 0),(0,x.d)([(0,I.E)("useEmissiveAsIllumination")],F.prototype,"_useEmissiveAsIllumination",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useEmissiveAsIllumination",void 0),(0,x.d)([(0,I.E)("linkEmissiveWithDiffuse")],F.prototype,"_linkEmissiveWithDiffuse",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"linkEmissiveWithDiffuse",void 0),(0,x.d)([(0,I.E)("useSpecularOverAlpha")],F.prototype,"_useSpecularOverAlpha",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useSpecularOverAlpha",void 0),(0,x.d)([(0,I.E)("useReflectionOverAlpha")],F.prototype,"_useReflectionOverAlpha",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useReflectionOverAlpha",void 0),(0,x.d)([(0,I.E)("disableLighting")],F.prototype,"_disableLighting",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsLightsDirty")],F.prototype,"disableLighting",void 0),(0,x.d)([(0,I.E)("useObjectSpaceNormalMap")],F.prototype,"_useObjectSpaceNormalMap",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useObjectSpaceNormalMap",void 0),(0,x.d)([(0,I.E)("useParallax")],F.prototype,"_useParallax",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useParallax",void 0),(0,x.d)([(0,I.E)("useParallaxOcclusion")],F.prototype,"_useParallaxOcclusion",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useParallaxOcclusion",void 0),(0,x.d)([(0,I.E)()],F.prototype,"parallaxScaleBias",void 0),(0,x.d)([(0,I.E)("roughness")],F.prototype,"_roughness",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"roughness",void 0),(0,x.d)([(0,I.E)()],F.prototype,"indexOfRefraction",void 0),(0,x.d)([(0,I.E)()],F.prototype,"invertRefractionY",void 0),(0,x.d)([(0,I.E)()],F.prototype,"alphaCutOff",void 0),(0,x.d)([(0,I.E)("useLightmapAsShadowmap")],F.prototype,"_useLightmapAsShadowmap",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useLightmapAsShadowmap",void 0),(0,x.d)([(0,I.n)("diffuseFresnelParameters")],F.prototype,"_diffuseFresnelParameters",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelDirty")],F.prototype,"diffuseFresnelParameters",void 0),(0,x.d)([(0,I.n)("opacityFresnelParameters")],F.prototype,"_opacityFresnelParameters",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],F.prototype,"opacityFresnelParameters",void 0),(0,x.d)([(0,I.n)("reflectionFresnelParameters")],F.prototype,"_reflectionFresnelParameters",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelDirty")],F.prototype,"reflectionFresnelParameters",void 0),(0,x.d)([(0,I.n)("refractionFresnelParameters")],F.prototype,"_refractionFresnelParameters",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelDirty")],F.prototype,"refractionFresnelParameters",void 0),(0,x.d)([(0,I.n)("emissiveFresnelParameters")],F.prototype,"_emissiveFresnelParameters",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelDirty")],F.prototype,"emissiveFresnelParameters",void 0),(0,x.d)([(0,I.E)("useReflectionFresnelFromSpecular")],F.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsFresnelDirty")],F.prototype,"useReflectionFresnelFromSpecular",void 0),(0,x.d)([(0,I.E)("useGlossinessFromSpecularMapAlpha")],F.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,x.d)([(0,I.E)("maxSimultaneousLights")],F.prototype,"_maxSimultaneousLights",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsLightsDirty")],F.prototype,"maxSimultaneousLights",void 0),(0,x.d)([(0,I.E)("invertNormalMapX")],F.prototype,"_invertNormalMapX",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"invertNormalMapX",void 0),(0,x.d)([(0,I.E)("invertNormalMapY")],F.prototype,"_invertNormalMapY",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"invertNormalMapY",void 0),(0,x.d)([(0,I.E)("twoSidedLighting")],F.prototype,"_twoSidedLighting",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"twoSidedLighting",void 0),(0,x.d)([(0,I.E)("applyDecalMapAfterDetailMap")],F.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,x.d)([(0,I.c)("_markAllSubMeshesAsMiscDirty")],F.prototype,"applyDecalMapAfterDetailMap",void 0),(0,c.g)("BABYLON.StandardMaterial",F),Y.e.DefaultMaterialFactory=k=>new F("default material",k)}}]);