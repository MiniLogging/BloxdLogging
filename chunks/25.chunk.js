"use strict";(self.jr1pmf6bwuf=self.jr1pmf6bwuf||[]).push([[25],{13274:(Y,c,h)=>{h.d(c,{e:()=>q});var C=h(12853),E=h(13193),N=h(12859),Q=h(13271),b=h(13265),H=h(13278),w=h(13240);class W extends b.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class q extends H.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(Y){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(Y,"DetailMap",140,new W,c),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=E.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=Y._dirtyCallbacks[1]}isReadyForSubMesh(Y,c,h){return!this._isEnabled||!(Y._areTexturesDirty&&c.texturesEnabled&&h.getCaps().standardDerivatives&&this._texture&&Q.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(Y,c){if(this._isEnabled){Y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const h=c.getEngine();Y._areTexturesDirty&&(h.getCaps().standardDerivatives&&this._texture&&Q.d.DetailTextureEnabled&&this._isEnabled?((0,w.Y)(this._texture,Y,"DETAIL"),Y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):Y.DETAIL=!1)}else Y.DETAIL=!1}bindForSubMesh(Y,c){if(!this._isEnabled)return;const h=this._material.isFrozen;Y.useUbo&&h&&Y.isSync||this._texture&&Q.d.DetailTextureEnabled&&(Y.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,w.w)(this._texture,Y,"detail")),c.texturesEnabled&&this._texture&&Q.d.DetailTextureEnabled&&Y.setTexture("detailSampler",this._texture)}hasTexture(Y){return this._texture===Y}getActiveTextures(Y){this._texture&&Y.push(this._texture)}getAnimatables(Y){this._texture&&this._texture.animations&&this._texture.animations.length>0&&Y.push(this._texture)}dispose(Y){var c;Y&&(null===(c=this._texture)||void 0===c||c.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(Y){Y.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,C.b)([(0,N.G)("detailTexture"),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"texture",void 0),(0,C.b)([(0,N.N)()],q.prototype,"diffuseBlendLevel",void 0),(0,C.b)([(0,N.N)()],q.prototype,"roughnessBlendLevel",void 0),(0,C.b)([(0,N.N)()],q.prototype,"bumpLevel",void 0),(0,C.b)([(0,N.N)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"normalBlendMethod",void 0),(0,C.b)([(0,N.N)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],q.prototype,"isEnabled",void 0)},13265:(Y,c,h)=>{h.d(c,{b:()=>C});class C{constructor(Y){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=Y,Y)for(const c in Y)Object.prototype.hasOwnProperty.call(Y,c)&&this._setDefaultValue(c)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let Y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||Y,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const Y of Object.keys(this))"_"!==Y[0]&&this._keys.push(Y);if(this._externalProperties)for(const Y in this._externalProperties)-1===this._keys.indexOf(Y)&&this._keys.push(Y)}isEqual(Y){if(this._keys.length!==Y._keys.length)return!1;for(let c=0;c<this._keys.length;c++){const h=this._keys[c];if(this[h]!==Y[h])return!1}return!0}cloneTo(Y){this._keys.length!==Y._keys.length&&(Y._keys=this._keys.slice(0));for(let c=0;c<this._keys.length;c++){const h=this._keys[c];Y[h]=this[h]}}reset(){for(const Y of this._keys)this._setDefaultValue(Y)}_setDefaultValue(Y){var c,h,C,E;const N=(null===(c=this._externalProperties)||void 0===c||null===(h=c[Y])||void 0===h?void 0:h.type)??typeof this[Y],Q=null===(C=this._externalProperties)||void 0===C||null===(E=C[Y])||void 0===E?void 0:E.default;switch(N){case"number":this[Y]=Q??0;break;case"string":this[Y]=Q??"";break;default:this[Y]=Q??!1}}toString(){let Y="";for(let c=0;c<this._keys.length;c++){const h=this._keys[c],C=this[h];switch(typeof C){case"number":case"string":Y+="#define "+h+" "+C+"\n";break;default:C&&(Y+="#define "+h+"\n")}}return Y}}},13271:(Y,c,h)=>{h.d(c,{d:()=>E});var C=h(12761);class E{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(Y){this._DiffuseTextureEnabled!==Y&&(this._DiffuseTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(Y){this._BaseWeightTextureEnabled!==Y&&(this._BaseWeightTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(Y){this._BaseDiffuseRoughnessTextureEnabled!==Y&&(this._BaseDiffuseRoughnessTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(Y){this._DetailTextureEnabled!==Y&&(this._DetailTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(Y){this._DecalMapEnabled!==Y&&(this._DecalMapEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(Y){this._AmbientTextureEnabled!==Y&&(this._AmbientTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(Y){this._OpacityTextureEnabled!==Y&&(this._OpacityTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(Y){this._ReflectionTextureEnabled!==Y&&(this._ReflectionTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(Y){this._EmissiveTextureEnabled!==Y&&(this._EmissiveTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(Y){this._SpecularTextureEnabled!==Y&&(this._SpecularTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(Y){this._BumpTextureEnabled!==Y&&(this._BumpTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(Y){this._LightmapTextureEnabled!==Y&&(this._LightmapTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(Y){this._RefractionTextureEnabled!==Y&&(this._RefractionTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Y){this._ColorGradingTextureEnabled!==Y&&(this._ColorGradingTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(Y){this._FresnelEnabled!==Y&&(this._FresnelEnabled=Y,C.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(Y){this._ClearCoatTextureEnabled!==Y&&(this._ClearCoatTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(Y){this._ClearCoatBumpTextureEnabled!==Y&&(this._ClearCoatBumpTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(Y){this._ClearCoatTintTextureEnabled!==Y&&(this._ClearCoatTintTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(Y){this._SheenTextureEnabled!==Y&&(this._SheenTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(Y){this._AnisotropicTextureEnabled!==Y&&(this._AnisotropicTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(Y){this._ThicknessTextureEnabled!==Y&&(this._ThicknessTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(Y){this._RefractionIntensityTextureEnabled!==Y&&(this._RefractionIntensityTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(Y){this._TranslucencyIntensityTextureEnabled!==Y&&(this._TranslucencyIntensityTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(Y){this._TranslucencyColorTextureEnabled!==Y&&(this._TranslucencyColorTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(Y){this._IridescenceTextureEnabled!==Y&&(this._IridescenceTextureEnabled=Y,C.c.MarkAllMaterialsAsDirty(1))}}E._DiffuseTextureEnabled=!0,E._BaseWeightTextureEnabled=!0,E._BaseDiffuseRoughnessTextureEnabled=!0,E._DetailTextureEnabled=!0,E._DecalMapEnabled=!0,E._AmbientTextureEnabled=!0,E._OpacityTextureEnabled=!0,E._ReflectionTextureEnabled=!0,E._EmissiveTextureEnabled=!0,E._SpecularTextureEnabled=!0,E._BumpTextureEnabled=!0,E._LightmapTextureEnabled=!0,E._RefractionTextureEnabled=!0,E._ColorGradingTextureEnabled=!0,E._FresnelEnabled=!0,E._ClearCoatTextureEnabled=!0,E._ClearCoatBumpTextureEnabled=!0,E._ClearCoatTintTextureEnabled=!0,E._SheenTextureEnabled=!0,E._AnisotropicTextureEnabled=!0,E._ThicknessTextureEnabled=!0,E._RefractionIntensityTextureEnabled=!0,E._TranslucencyIntensityTextureEnabled=!0,E._TranslucencyColorTextureEnabled=!0,E._IridescenceTextureEnabled=!0},13281:(Y,c,h)=>{h.d(c,{e:()=>N});var C,E=h(12869);!function(Y){Y[Y.Zero=0]="Zero",Y[Y.One=1]="One",Y[Y.MaxViewZ=2]="MaxViewZ"}(C||(C={}));class N{static CreateConfiguration(Y){return N._Configurations[Y]={defines:{},previousWorldMatrices:{},previousViewProjection:E.Matrix.Zero(),currentViewProjection:E.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},N._Configurations[Y]}static DeleteConfiguration(Y){delete N._Configurations[Y]}static GetConfiguration(Y){return N._Configurations[Y]}static AddUniformsAndSamplers(Y,c){Y.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(Y,c){for(const h of c)if(h.rc)for(const c of h.rc)c._removeDrawWrapper(Y)}static PrepareDefines(Y,c,h){if(!h._arePrePassDirty)return;const C=N._Configurations[Y];if(!C)return;h.PREPASS=!0,h.PREPASS_COLOR=!1,h.PREPASS_COLOR_INDEX=-1;let E=0;for(let Q=0;Q<N.GeometryTextureDescriptions.length;Q++){const Y=N.GeometryTextureDescriptions[Q],c=Y.define,b=Y.defineIndex,H=C.defines[b];void 0!==H?(h[c]=!0,h[b]=H,E++):(h[c]=!1,delete h[b])}h.SCENE_MRT_COUNT=E,h.BONES_VELOCITY_ENABLED=c.useBones&&c.computeBonesUsingShaders&&c.skeleton&&!c.skeleton.isUsingTextureForMatrices&&-1===C.excludedSkinnedMesh.indexOf(c)}static Bind(Y,c,h,C,E){const Q=N._Configurations[Y];if(!Q)return;const b=h.ZY(),H=b.getEngine();if(Q.reverseCulling&&H.setStateCullFaceType(b._mirroredCameraPosition?E.cullBackFaces:!E.cullBackFaces),(void 0!==Q.defines.PREPASS_VELOCITY_INDEX||void 0!==Q.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(Q.previousWorldMatrices[h.uniqueId]||(Q.previousWorldMatrices[h.uniqueId]=C.clone()),Q.previousViewProjection||(Q.previousViewProjection=b.getTransformMatrix().clone(),Q.currentViewProjection=b.getTransformMatrix().clone()),Q.currentViewProjection.updateFlag!==b.getTransformMatrix().updateFlag?(Q.lastUpdateFrameId=H.frameId,Q.previousViewProjection.N(Q.currentViewProjection),Q.currentViewProjection.N(b.getTransformMatrix())):Q.lastUpdateFrameId!==H.frameId&&(Q.lastUpdateFrameId=H.frameId,Q.previousViewProjection.N(Q.currentViewProjection)),c.setMatrix("previousWorld",Q.previousWorldMatrices[h.uniqueId]),c.setMatrix("previousViewProjection",Q.previousViewProjection),Q.previousWorldMatrices[h.uniqueId]=C.clone(),h.useBones&&h.computeBonesUsingShaders&&h.skeleton)){const Y=h.skeleton;if(!Y.isUsingTextureForMatrices||-1===c.getUniformIndex("boneTextureWidth")){const C=Y.getTransformMatrices(h);C&&(Q.previousBones[h.uniqueId]||(Q.previousBones[h.uniqueId]=C.slice()),c.setMatrices("mPreviousBones",Q.previousBones[h.uniqueId]),Q.previousBones[h.uniqueId].set(C))}}}}N.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],N._Configurations={}},13278:(Y,c,h)=>{h.d(c,{e:()=>d});var C=h(12853),E=h(12859),N=h(13193),Q=h(12722),b=h(12746),H=h(12779);const w=new RegExp("^([gimus]+)!");class W{constructor(Y){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=Y,this._scene=Y.ZY(),this._engine=this._scene.getEngine()}_addPlugin(Y){for(let C=0;C<this._plugins.length;++C)if(this._plugins[C].name===Y.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!Y.isCompatible(this._material.shaderLanguage))throw`The plugin "${Y.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const c=Y.getClassName();W._MaterialPluginClassToMainDefine[c]||(W._MaterialPluginClassToMainDefine[c]="MATERIALPLUGIN_"+ ++W._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(Y,c)=>this._handlePluginEvent(Y,c),this._plugins.push(Y),this._plugins.sort(((Y,c)=>Y.priority-c.priority)),this._codeInjectionPoints={};const h={};h[W._MaterialPluginClassToMainDefine[c]]={type:"boolean",default:!0};for(const C of this._plugins)C.collectDefines(h),this._collectPointNames("vertex",C.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",C.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=h,!0}_activatePlugin(Y){-1===this._activePlugins.indexOf(Y)&&(this._activePlugins.push(Y),this._activePlugins.sort(((Y,c)=>Y.priority-c.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),Y.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(Y),this._activePluginsForExtraEvents.sort(((Y,c)=>Y.priority-c.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(Y){for(let c=0;c<this._plugins.length;++c)if(this._plugins[c].name===Y)return this._plugins[c];return null}_handlePluginEventIsReadyForSubMesh(Y){let c=!0;for(const h of this._activePlugins)c=c&&h.isReadyForSubMesh(Y.defines,this._scene,this._engine,Y.subMesh);Y.isReadyForSubMesh=c}_handlePluginEventPrepareDefinesBeforeAttributes(Y){for(const c of this._activePlugins)c.prepareDefinesBeforeAttributes(Y.defines,this._scene,Y.mesh)}_handlePluginEventPrepareDefines(Y){for(const c of this._activePlugins)c.prepareDefines(Y.defines,this._scene,Y.mesh)}_handlePluginEventHardBindForSubMesh(Y){for(const c of this._activePluginsForExtraEvents)c.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Y.subMesh)}_handlePluginEventBindForSubMesh(Y){for(const c of this._activePlugins)c.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Y.subMesh)}_handlePluginEventHasRenderTargetTextures(Y){let c=!1;for(const h of this._activePluginsForExtraEvents)if(c=h.hasRenderTargetTextures(),c)break;Y.hasRenderTargetTextures=c}_handlePluginEventFillRenderTargetTextures(Y){for(const c of this._activePluginsForExtraEvents)c.fillRenderTargetTextures(Y.renderTargets)}_handlePluginEvent(Y,c){switch(Y){case 512:{const Y=c;for(const c of this._activePlugins)c.getActiveTextures(Y.activeTextures);break}case 256:{const Y=c;for(const c of this._activePlugins)c.getAnimatables(Y.animatables);break}case 1024:{const Y=c;let h=!1;for(const c of this._activePlugins)if(h=c.hasTexture(Y.texture),h)break;Y.hasTexture=h;break}case 2:{const Y=c;for(const c of this._plugins)c.dispose(Y.forceDisposeTextures);break}case 4:c.defineNames=this._defineNamesFromPlugins;break;case 128:{const Y=c;for(const c of this._activePlugins)Y.fallbackRank=c.addFallbacks(Y.defines,Y.fallbacks,Y.fallbackRank),c.getAttributes(Y.attributes,this._scene,Y.mesh);this._uniformList.length>0&&Y.uniforms.push(...this._uniformList),this._samplerList.length>0&&Y.samplers.push(...this._samplerList),this._uboList.length>0&&Y.uniformBuffersNames.push(...this._uboList),Y.customCode=this._injectCustomCode(Y,Y.customCode);break}case 8:{const Y=c;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const h=1===this._material.shaderLanguage;for(const c of this._plugins){const C=c.getUniforms(this._material.shaderLanguage);if(C){if(C.ubo)for(const c of C.ubo){if(c.size&&c.type){const C=c.arraySize??0;if(Y.ubo.addUniform(c.name,c.size,C),h){let Y;switch(c.type){case"mat4":Y="mat4x4f";break;case"float":Y="f32";break;default:Y=`${c.type}f`}this._uboDeclaration+=C>0?`uniform ${c.name}: array<${Y}, ${C}>;\n`:`uniform ${c.name}: ${Y};\n`}else this._uboDeclaration+=`${c.type} ${c.name}${C>0?`[${C}]`:""};\n`}this._uniformList.push(c.name)}C.vertex&&(this._vertexDeclaration+=C.vertex+"\n"),C.fragment&&(this._fragmentDeclaration+=C.fragment+"\n")}c.getSamplers(this._samplerList),c.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(Y,c){if(c)for(const h in c)this._codeInjectionPoints[Y]||(this._codeInjectionPoints[Y]={}),this._codeInjectionPoints[Y][h]=!0}_injectCustomCode(Y,c){return(h,C)=>{var E;c&&(C=c(h,C)),this._uboDeclaration&&(C=C.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(C=C.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(C=C.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const N=null===(E=this._codeInjectionPoints)||void 0===E?void 0:E[h];if(!N)return C;let Q=null;for(let c in N){let E="";for(const C of this._activePlugins){var W;let N=null===(W=C.getCustomCode(h,this._material.shaderLanguage))||void 0===W?void 0:W[c];if(N){if(C.resolveIncludes){if(null===Q){const c=0;Q={defines:[],indexParameters:Y.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:H.b.GetShadersRepository(c),includesShadersStore:H.b.GetIncludesShadersStore(c),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,o:this._engine.o,processCodeAfterIncludes:void 0}}Q.isFragment="fragment"===h,(0,b.i)(N,Q,(Y=>N=Y))}E+=N+"\n"}}if(E.length>0)if("!"===c.charAt(0)){c=c.substring(1);let Y="g";if("!"===c.charAt(0))Y="",c=c.substring(1);else{const h=w.exec(c);h&&h.length>=2&&(Y=h[1],c=c.substring(Y.length+1))}Y.indexOf("g")<0&&(Y+="g");const h=C,N=new RegExp(c,Y);let Q=N.exec(h);for(;null!==Q;){let Y=E;for(let c=0;c<Q.length;++c)Y=Y.replace("$"+c,Q[c]);C=C.replace(Q[0],Y),Q=N.exec(h)}}else{const Y="#define "+c;C=C.replace(Y,"\n"+E+"\n"+Y)}}return C}}}W._MaterialPluginClassToMainDefine={},W._MaterialPluginCounter=0,Q.d.OnEnginesDisposedObservable.add((()=>{p()}));const q=[];let k=!1,M=null;function p(){q.length=0,k=!1,N.d.OnEventObservable.remove(M),M=null}var P=h(12906),y=h(12825);class d{isCompatible(Y){return 0===Y}_enable(Y){Y&&this._pluginManager._activatePlugin(this)}constructor(Y,c,h,C){let E=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],Q=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=Y,this.name=c,this.priority=h,this.resolveIncludes=Q,Y.pluginManager||(Y.pluginManager=new W(Y),Y.Mc.add((()=>{Y.pluginManager=void 0}))),this._pluginDefineNames=C,this._pluginManager=Y.pluginManager,E&&this._pluginManager._addPlugin(this),N&&this._enable(!0),this.markAllDefinesAsDirty=Y._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(Y,c,h,C){return!0}hardBindForSubMesh(Y,c,h,C){}bindForSubMesh(Y,c,h,C){}dispose(Y){}getCustomCode(Y){return null}collectDefines(Y){if(this._pluginDefineNames)for(const c of Object.keys(this._pluginDefineNames)){if("_"===c[0])continue;const h=typeof this._pluginDefineNames[c];Y[c]={type:"number"===h?"number":"string"===h?"string":"boolean"===h?"boolean":"object",default:this._pluginDefineNames[c]}}}prepareDefinesBeforeAttributes(Y,c,h){}prepareDefines(Y,c,h){}hasTexture(Y){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(Y){}getActiveTextures(Y){}getAnimatables(Y){}addFallbacks(Y,c,h){return h}getSamplers(Y){}getAttributes(Y,c,h){}getUniformBuffersNames(Y){}getUniforms(){return{}}copyTo(Y){P.d.Clone((()=>Y),this)}serialize(){return P.d.Serialize(this)}parse(Y,c,h){P.d.Parse((()=>this),Y,c,h)}}(0,C.b)([(0,E.N)()],d.prototype,"name",void 0),(0,C.b)([(0,E.N)()],d.prototype,"priority",void 0),(0,C.b)([(0,E.N)()],d.prototype,"resolveIncludes",void 0),(0,C.b)([(0,E.N)()],d.prototype,"registerForExtraEvents",void 0),(0,y.e)("BABYLON.MaterialPluginBase",d)},13257:(Y,c,h)=>{h.d(c,{c:()=>C});class C{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(Y){Y.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(Y){}bindForSubMesh(Y,c,h,C,E){if(c.prePassRenderer&&c.prePassRenderer.enabled&&c.prePassRenderer.currentRTisSceneRT&&(-1!==c.prePassRenderer.getIndex(2)||-1!==c.prePassRenderer.getIndex(11))){this.previousWorldMatrices[h.uniqueId]||(this.previousWorldMatrices[h.uniqueId]=C.clone()),this.previousViewProjection||(this.previousViewProjection=c.getTransformMatrix().clone(),this.currentViewProjection=c.getTransformMatrix().clone());const E=c.getEngine();this.currentViewProjection.updateFlag!==c.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.N(this.currentViewProjection),this.currentViewProjection.N(c.getTransformMatrix())):this._lastUpdateFrameId!==E.frameId&&(this._lastUpdateFrameId=E.frameId,this.previousViewProjection.N(this.currentViewProjection)),Y.setMatrix("previousWorld",this.previousWorldMatrices[h.uniqueId]),Y.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[h.uniqueId]=C.clone()}}}},13254:(Y,c,h)=>{h.d(c,{kh:()=>G});var C=h(12853),E=h(12859),N=h(12975),Q=h(13110),b=h(12920),H=h(12951),w=h(13257),W=h(13113),q=h(13193),k=h(13265),M=h(13189),p=h(12848),P=h(12825),y=h(13271),d=h(13182),D=h(13274),T=h(13245),e=h(13240),r=h(12906),X=h(13281);const Z={effect:null,subMesh:null};class a extends k.b{constructor(Y){super(Y),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(Y){const c=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const h of c)this[h]=h===Y}}class G extends M.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(Y){this._attachImageProcessingConfiguration(Y),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(Y){Y!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=Y||this.ZY().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(Y){this.imageProcessingConfiguration.colorCurvesEnabled=Y}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(Y){this.imageProcessingConfiguration.colorGradingEnabled=Y}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(Y){this._imageProcessingConfiguration.toneMappingEnabled=Y}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(Y){this._imageProcessingConfiguration.exposure=Y}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(Y){this._imageProcessingConfiguration.contrast=Y}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(Y){this._imageProcessingConfiguration.colorGradingTexture=Y}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(Y){this._imageProcessingConfiguration.colorCurves=Y}get canRenderToMRT(){return!0}constructor(Y,c){super(Y,c,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||G.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new b.ph(0,0,0),this.diffuseColor=new b.ph(1,1,1),this.specularColor=new b.ph(1,1,1),this.emissiveColor=new b.ph(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new N.h(16),this._globalAmbientColor=new b.ph(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new D.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new w.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),G.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),G.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(G.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(G.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"kh"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===q.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Zc&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==q.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Zc||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(Y,c){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const E=c._drawWrapper;if(E.effect&&this.isFrozen&&E._wasPreviouslyReady&&E._wasPreviouslyUsingInstances===C)return!0;c.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),c.materialDefines=new a(this._eventInfo.defineNames));const N=this.ZY(),Q=c.materialDefines;if(this._isReadyForSubMesh(c))return!0;const b=N.getEngine();Q._needNormals=(0,e.U)(N,Y,Q,!0,this._maxSimultaneousLights,this._disableLighting),(0,e.cb)(N,Q);const q=this.needAlphaBlendingForMesh(Y)&&this.ZY().useOrderIndependentTransparency;if((0,e.hb)(N,Q,this.canRenderToMRT&&!q),(0,e.fb)(N,Q,q),X.e.PrepareDefines(b.currentRenderPassId,Y,Q),Q._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,Q._needUVs=!1;for(let Y=1;Y<=6;++Y)Q["MAINUV"+Y]=!1;if(N.texturesEnabled){if(Q.DIFFUSEDIRECTUV=0,Q.BUMPDIRECTUV=0,Q.AMBIENTDIRECTUV=0,Q.OPACITYDIRECTUV=0,Q.EMISSIVEDIRECTUV=0,Q.SPECULARDIRECTUV=0,Q.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&G.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._diffuseTexture,Q,"DIFFUSE")}else Q.DIFFUSE=!1;if(this._ambientTexture&&G.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._ambientTexture,Q,"AMBIENT")}else Q.AMBIENT=!1;if(this._opacityTexture&&G.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._opacityTexture,Q,"OPACITY"),Q.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else Q.OPACITY=!1;if(this._reflectionTexture&&G.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(Q._needNormals=!0,Q.REFLECTION=!0,Q.ROUGHNESS=this._roughness>0,Q.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,Q.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===p.d.INVCUBIC_MODE,Q.REFLECTIONMAP_3D=this._reflectionTexture.isCube,Q.REFLECTIONMAP_OPPOSITEZ=Q.REFLECTIONMAP_3D&&this.ZY().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,Q.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case p.d.EXPLICIT_MODE:Q.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case p.d.PLANAR_MODE:Q.setReflectionMode("REFLECTIONMAP_PLANAR");break;case p.d.PROJECTION_MODE:Q.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case p.d.SKYBOX_MODE:Q.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case p.d.SPHERICAL_MODE:Q.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case p.d.EQUIRECTANGULAR_MODE:Q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case p.d.FIXED_EQUIRECTANGULAR_MODE:Q.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case p.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:Q.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case p.d.CUBIC_MODE:case p.d.INVCUBIC_MODE:default:Q.setReflectionMode("REFLECTIONMAP_CUBIC")}Q.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else Q.REFLECTION=!1,Q.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&G.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._emissiveTexture,Q,"EMISSIVE")}else Q.EMISSIVE=!1;if(this._lightmapTexture&&G.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._lightmapTexture,Q,"LIGHTMAP"),Q.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,Q.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else Q.LIGHTMAP=!1;if(this._specularTexture&&G.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,e.Y)(this._specularTexture,Q,"SPECULAR"),Q.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else Q.SPECULAR=!1;if(N.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&G.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,e.Y)(this._bumpTexture,Q,"BUMP"),Q.PARALLAX=this._useParallax,Q.PARALLAX_RHS=N.useRightHandedSystem,Q.PARALLAXOCCLUSION=this._useParallaxOcclusion,Q.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else Q.BUMP=!1,Q.PARALLAX=!1,Q.PARALLAX_RHS=!1,Q.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&G.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;Q._needUVs=!0,Q.REFRACTION=!0,Q.REFRACTIONMAP_3D=this._refractionTexture.isCube,Q.RGBDREFRACTION=this._refractionTexture.isRGBD,Q.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else Q.REFRACTION=!1;Q.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else Q.DIFFUSE=!1,Q.AMBIENT=!1,Q.OPACITY=!1,Q.REFLECTION=!1,Q.EMISSIVE=!1,Q.LIGHTMAP=!1,Q.BUMP=!1,Q.REFRACTION=!1;Q.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),Q.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,Q.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,Q.SPECULAROVERALPHA=this._useSpecularOverAlpha,Q.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,Q.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,Q.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(Y)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=Q,this._eventInfo.subMesh=c,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(Q._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(Q),Q.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,Q.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(Q._areFresnelDirty&&(G.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(Q.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,Q.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,Q.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,Q.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,Q.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,Q.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,Q._needNormals=!0,Q.FRESNEL=!0):Q.FRESNEL=!1),Q.AREALIGHTUSED)for(let h=0;h<Y.lightSources.length;h++)if(!Y.lightSources[h]._isReady())return!1;(0,e.$)(Y,N,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(Y),Q,this._applyDecalMapAfterDetailMap),(0,e.R)(N,b,this,Q,C,null,c.getRenderingMesh().hasThinInstances),this._eventInfo.defines=Q,this._eventInfo.mesh=Y,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,e.Q)(Y,Q,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let k=!1;if(Q.isDirty){const C=Q._areLightsDisposed;Q.markAsProcessed();const E=new d.c;Q.REFLECTION&&E.addFallback(0,"REFLECTION"),Q.SPECULAR&&E.addFallback(0,"SPECULAR"),Q.BUMP&&E.addFallback(0,"BUMP"),Q.PARALLAX&&E.addFallback(1,"PARALLAX"),Q.PARALLAX_RHS&&E.addFallback(1,"PARALLAX_RHS"),Q.PARALLAXOCCLUSION&&E.addFallback(0,"PARALLAXOCCLUSION"),Q.SPECULAROVERALPHA&&E.addFallback(0,"SPECULAROVERALPHA"),Q.FOG&&E.addFallback(1,"FOG"),Q.POINTSIZE&&E.addFallback(0,"POINTSIZE"),Q.LOGARITHMICDEPTH&&E.addFallback(0,"LOGARITHMICDEPTH"),(0,e.A)(Q,E,this._maxSimultaneousLights),Q.SPECULARTERM&&E.addFallback(0,"SPECULARTERM"),Q.DIFFUSEFRESNEL&&E.addFallback(1,"DIFFUSEFRESNEL"),Q.OPACITYFRESNEL&&E.addFallback(2,"OPACITYFRESNEL"),Q.REFLECTIONFRESNEL&&E.addFallback(3,"REFLECTIONFRESNEL"),Q.EMISSIVEFRESNEL&&E.addFallback(4,"EMISSIVEFRESNEL"),Q.FRESNEL&&E.addFallback(4,"FRESNEL"),Q.MULTIVIEW&&E.addFallback(0,"MULTIVIEW");const q=[H.f.PositionKind];Q.NORMAL&&q.push(H.f.NormalKind),Q.TANGENT&&q.push(H.f.TangentKind);for(let Y=1;Y<=6;++Y)Q["UV"+Y]&&q.push(`uv${1===Y?"":Y}`);Q.VERTEXCOLOR&&q.push(H.f.ColorKind),(0,e.F)(q,Y,Q,E),(0,e.G)(q,Q),(0,e.J)(q,Y,Q),(0,e.B)(q,Y,Q);let M="default";const p=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],P=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],y=["Material","Scene","Mesh"],D={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:Q.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=E,this._eventInfo.fallbackRank=0,this._eventInfo.defines=Q,this._eventInfo.uniforms=p,this._eventInfo.attributes=q,this._eventInfo.samplers=P,this._eventInfo.uniformBuffersNames=y,this._eventInfo.customCode=void 0,this._eventInfo.mesh=Y,this._eventInfo.indexParameters=D,this._callbackPluginEventGeneric(128,this._eventInfo),X.e.AddUniformsAndSamplers(p,P),w.c.AddUniforms(p),w.c.AddSamplers(P),W.c&&(W.c.PrepareUniforms(p,Q),W.c.PrepareSamplers(P,Q)),(0,e.lb)({uniformsNames:p,uniformBuffersNames:y,samplers:P,defines:Q,maxSimultaneousLights:this._maxSimultaneousLights}),(0,T.b)(p);const r={};this.customShaderNameResolve&&(M=this.customShaderNameResolve(M,p,y,P,Q,q,r));const a=Q.toString(),G=c.effect;let K=N.getEngine().createEffect(M,{attributes:q,uniformsNames:p,uniformBuffersNames:y,samplers:P,defines:a,fallbacks:E,onCompiled:this.onCompiled,onError:this.onError,indexParameters:D,processFinalCode:r.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:Q.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([h.e(41),h.e(64)]).then(h.bind(h,15516)),Promise.all([h.e(39),h.e(65)]).then(h.bind(h,15650))]):await Promise.all([Promise.all([h.e(34),h.e(67)]).then(h.bind(h,15741)),Promise.all([h.e(33),h.e(68)]).then(h.bind(h,15903))]),this._shadersLoaded=!0}},b);if(this._eventInfo.customCode=void 0,K)if(this._onEffectCreatedObservable&&(Z.effect=K,Z.subMesh=c,this._onEffectCreatedObservable.notifyObservers(Z)),this.allowShaderHotSwapping&&G&&!K.isReady()){if(K=G,Q.markAsUnprocessed(),k=this.isFrozen,C)return Q._areLightsDisposed=!0,!1}else N.resetCachedMaterial(),c.setEffect(K,Q,this._materialContext)}return!(!c.effect||!c.effect.isReady())&&(Q._renderId=N.getRenderId(),E._wasPreviouslyReady=!k,E._wasPreviouslyUsingInstances=C,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const Y=this._uniformBuffer;Y.addUniform("diffuseLeftColor",4),Y.addUniform("diffuseRightColor",4),Y.addUniform("opacityParts",4),Y.addUniform("reflectionLeftColor",4),Y.addUniform("reflectionRightColor",4),Y.addUniform("refractionLeftColor",4),Y.addUniform("refractionRightColor",4),Y.addUniform("emissiveLeftColor",4),Y.addUniform("emissiveRightColor",4),Y.addUniform("vDiffuseInfos",2),Y.addUniform("vAmbientInfos",2),Y.addUniform("vOpacityInfos",2),Y.addUniform("vReflectionInfos",2),Y.addUniform("vReflectionPosition",3),Y.addUniform("vReflectionSize",3),Y.addUniform("vEmissiveInfos",2),Y.addUniform("vLightmapInfos",2),Y.addUniform("vSpecularInfos",2),Y.addUniform("vBumpInfos",3),Y.addUniform("diffuseMatrix",16),Y.addUniform("ambientMatrix",16),Y.addUniform("opacityMatrix",16),Y.addUniform("reflectionMatrix",16),Y.addUniform("emissiveMatrix",16),Y.addUniform("lightmapMatrix",16),Y.addUniform("specularMatrix",16),Y.addUniform("bumpMatrix",16),Y.addUniform("vTangentSpaceParams",2),Y.addUniform("pointSize",1),Y.addUniform("alphaCutOff",1),Y.addUniform("refractionMatrix",16),Y.addUniform("vRefractionInfos",4),Y.addUniform("vRefractionPosition",3),Y.addUniform("vRefractionSize",3),Y.addUniform("vSpecularColor",4),Y.addUniform("vEmissiveColor",3),Y.addUniform("vDiffuseColor",4),Y.addUniform("vAmbientColor",3),Y.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(Y,c,h){const C=this.ZY(),E=h.materialDefines;if(!E)return;const N=h.effect;if(!N)return;this._activeEffect=N,c.getMeshUniformBuffer().bindToEffect(N,"Mesh"),c.transferToEffect(Y),this._uniformBuffer.bindToEffect(N,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,C,c,Y,this.isFrozen),X.e.Bind(C.getEngine().currentRenderPassId,this._activeEffect,c,Y,this);const H=C.activeCamera;H?this._uniformBuffer.updateFloat4("cameraInfo",H.ac,H.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=h,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),E.OBJECTSPACE_NORMALMAP&&(Y.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const w=this._mustRebind(C,N,h,c.visibility);(0,e.e)(c,N);const W=this._uniformBuffer;if(w){if(this.bindViewProjection(N),!W.useUbo||!this.isFrozen||!W.isSync||h._drawWrapper._forceRebindOnNextCall){if(G.FresnelEnabled&&E.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(W.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),W.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&W.updateColor4("opacityParts",new b.ph(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(W.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),W.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(W.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),W.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(W.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),W.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),C.texturesEnabled){if(this._diffuseTexture&&G.DiffuseTextureEnabled&&(W.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,e.w)(this._diffuseTexture,W,"diffuse")),this._ambientTexture&&G.AmbientTextureEnabled&&(W.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,e.w)(this._ambientTexture,W,"ambient")),this._opacityTexture&&G.OpacityTextureEnabled&&(W.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,e.w)(this._opacityTexture,W,"opacity")),this._hasAlphaChannel()&&W.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&G.ReflectionTextureEnabled){if(W.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),W.Gc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const Y=this._reflectionTexture;W.updateVector3("vReflectionPosition",Y.boundingBoxPosition),W.updateVector3("vReflectionSize",Y.boundingBoxSize)}}else W.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&G.EmissiveTextureEnabled&&(W.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,e.w)(this._emissiveTexture,W,"emissive")),this._lightmapTexture&&G.LightmapTextureEnabled&&(W.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,e.w)(this._lightmapTexture,W,"lightmap")),this._specularTexture&&G.SpecularTextureEnabled&&(W.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,e.w)(this._specularTexture,W,"specular")),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&G.BumpTextureEnabled&&(W.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,e.w)(this._bumpTexture,W,"bump"),C._mirroredCameraPosition?W.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):W.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&G.RefractionTextureEnabled){let Y=1;if(this._refractionTexture.isCube||(W.Gc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(Y=this._refractionTexture.depth)),W.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,Y,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const Y=this._refractionTexture;W.updateVector3("vRefractionPosition",Y.boundingBoxPosition),W.updateVector3("vRefractionSize",Y.boundingBoxSize)}}}this.pointsCloud&&W.updateFloat("pointSize",this.pointSize),W.updateColor4("vSpecularColor",this.specularColor,this.specularPower),W.updateColor3("vEmissiveColor",G.EmissiveTextureEnabled?this.emissiveColor:b.ph.BlackReadOnly),W.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),C.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),W.updateColor3("vAmbientColor",this._globalAmbientColor)}C.texturesEnabled&&(this._diffuseTexture&&G.DiffuseTextureEnabled&&N.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&G.AmbientTextureEnabled&&N.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&G.OpacityTextureEnabled&&N.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&G.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?N.setTexture("reflectionCubeSampler",this._reflectionTexture):N.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&G.EmissiveTextureEnabled&&N.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&G.LightmapTextureEnabled&&N.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&G.SpecularTextureEnabled&&N.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&C.getEngine().getCaps().standardDerivatives&&G.BumpTextureEnabled&&N.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&G.RefractionTextureEnabled&&(this._refractionTexture.isCube?N.setTexture("refractionCubeSampler",this._refractionTexture):N.setTexture("refraction2DSampler",this._refractionTexture))),this.ZY().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(c)&&this.ZY().depthPeelingRenderer.bind(N),this._eventInfo.subMesh=h,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,T.c)(N,this,C),this.bindEyePosition(N)}else C.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(w||!this.isFrozen){var q;if(C.lightsEnabled&&!this._disableLighting&&(0,e.j)(C,c,N,E,this._maxSimultaneousLights),(C.fogEnabled&&c.applyFog&&C.fogMode!==Q.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||c.receiveShadows||E.PREPASS)&&this.bindView(N),(0,e.f)(C,c,N),E.NUM_MORPH_INFLUENCERS&&(0,e.q)(c,N),E.BAKED_VERTEX_ANIMATION_TEXTURE)null===(q=c.bakedVertexAnimationManager)||void 0===q||q.bind(N,E.INSTANCES);this.useLogarithmicDepth&&(0,e.n)(E,N,C),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(c,this._activeEffect,h),W.update()}getAnimatables(){const Y=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&Y.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&Y.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&Y.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&Y.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&Y.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&Y.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&Y.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&Y.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&Y.push(this._refractionTexture),Y}getActiveTextures(){const Y=super.getActiveTextures();return this._diffuseTexture&&Y.push(this._diffuseTexture),this._ambientTexture&&Y.push(this._ambientTexture),this._opacityTexture&&Y.push(this._opacityTexture),this._reflectionTexture&&Y.push(this._reflectionTexture),this._emissiveTexture&&Y.push(this._emissiveTexture),this._specularTexture&&Y.push(this._specularTexture),this._bumpTexture&&Y.push(this._bumpTexture),this._lightmapTexture&&Y.push(this._lightmapTexture),this._refractionTexture&&Y.push(this._refractionTexture),Y}hasTexture(Y){return!!super.hasTexture(Y)||(this._diffuseTexture===Y||(this._ambientTexture===Y||(this._opacityTexture===Y||(this._reflectionTexture===Y||(this._emissiveTexture===Y||(this._specularTexture===Y||(this._bumpTexture===Y||(this._lightmapTexture===Y||this._refractionTexture===Y))))))))}dispose(Y,c){var h,C,E,N,Q,b,H,w,W;c&&(null===(h=this._diffuseTexture)||void 0===h||h.dispose(),null===(C=this._ambientTexture)||void 0===C||C.dispose(),null===(E=this._opacityTexture)||void 0===E||E.dispose(),null===(N=this._reflectionTexture)||void 0===N||N.dispose(),null===(Q=this._emissiveTexture)||void 0===Q||Q.dispose(),null===(b=this._specularTexture)||void 0===b||b.dispose(),null===(H=this._bumpTexture)||void 0===H||H.dispose(),null===(w=this._lightmapTexture)||void 0===w||w.dispose(),null===(W=this._refractionTexture)||void 0===W||W.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(Y,c)}clone(Y){let c=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const C=r.d.Clone((()=>new G(Y,this.ZY())),this,{cloneTexturesOnlyOnce:c});return C.name=Y,C.id=Y,this.Pc.copyTo(C.Pc),this._clonePlugins(C,h),C}static Parse(Y,c,h){const C=r.d.Parse((()=>new G(Y.name,c)),Y,c,h);return Y.Pc&&C.Pc.parse(Y.Pc,c,h),q.d._ParsePlugins(Y,C,c,h),C}static get DiffuseTextureEnabled(){return y.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(Y){y.d.DiffuseTextureEnabled=Y}static get DetailTextureEnabled(){return y.d.DetailTextureEnabled}static set DetailTextureEnabled(Y){y.d.DetailTextureEnabled=Y}static get AmbientTextureEnabled(){return y.d.AmbientTextureEnabled}static set AmbientTextureEnabled(Y){y.d.AmbientTextureEnabled=Y}static get OpacityTextureEnabled(){return y.d.OpacityTextureEnabled}static set OpacityTextureEnabled(Y){y.d.OpacityTextureEnabled=Y}static get ReflectionTextureEnabled(){return y.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(Y){y.d.ReflectionTextureEnabled=Y}static get EmissiveTextureEnabled(){return y.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(Y){y.d.EmissiveTextureEnabled=Y}static get SpecularTextureEnabled(){return y.d.SpecularTextureEnabled}static set SpecularTextureEnabled(Y){y.d.SpecularTextureEnabled=Y}static get BumpTextureEnabled(){return y.d.BumpTextureEnabled}static set BumpTextureEnabled(Y){y.d.BumpTextureEnabled=Y}static get LightmapTextureEnabled(){return y.d.LightmapTextureEnabled}static set LightmapTextureEnabled(Y){y.d.LightmapTextureEnabled=Y}static get RefractionTextureEnabled(){return y.d.RefractionTextureEnabled}static set RefractionTextureEnabled(Y){y.d.RefractionTextureEnabled=Y}static get ColorGradingTextureEnabled(){return y.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Y){y.d.ColorGradingTextureEnabled=Y}static get FresnelEnabled(){return y.d.FresnelEnabled}static set FresnelEnabled(Y){y.d.FresnelEnabled=Y}}G.ForceGLSL=!1,(0,C.b)([(0,E.G)("diffuseTexture")],G.prototype,"_diffuseTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],G.prototype,"diffuseTexture",void 0),(0,C.b)([(0,E.G)("ambientTexture")],G.prototype,"_ambientTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"ambientTexture",void 0),(0,C.b)([(0,E.G)("opacityTexture")],G.prototype,"_opacityTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],G.prototype,"opacityTexture",void 0),(0,C.b)([(0,E.G)("reflectionTexture")],G.prototype,"_reflectionTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"reflectionTexture",void 0),(0,C.b)([(0,E.G)("emissiveTexture")],G.prototype,"_emissiveTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"emissiveTexture",void 0),(0,C.b)([(0,E.G)("specularTexture")],G.prototype,"_specularTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"specularTexture",void 0),(0,C.b)([(0,E.G)("bumpTexture")],G.prototype,"_bumpTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"bumpTexture",void 0),(0,C.b)([(0,E.G)("lightmapTexture")],G.prototype,"_lightmapTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"lightmapTexture",void 0),(0,C.b)([(0,E.G)("refractionTexture")],G.prototype,"_refractionTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"refractionTexture",void 0),(0,C.b)([(0,E.k)("ambient")],G.prototype,"ambientColor",void 0),(0,C.b)([(0,E.k)("diffuse")],G.prototype,"diffuseColor",void 0),(0,C.b)([(0,E.k)("specular")],G.prototype,"specularColor",void 0),(0,C.b)([(0,E.k)("emissive")],G.prototype,"emissiveColor",void 0),(0,C.b)([(0,E.N)()],G.prototype,"specularPower",void 0),(0,C.b)([(0,E.N)("useAlphaFromDiffuseTexture")],G.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],G.prototype,"useAlphaFromDiffuseTexture",void 0),(0,C.b)([(0,E.N)("useEmissiveAsIllumination")],G.prototype,"_useEmissiveAsIllumination",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useEmissiveAsIllumination",void 0),(0,C.b)([(0,E.N)("linkEmissiveWithDiffuse")],G.prototype,"_linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"linkEmissiveWithDiffuse",void 0),(0,C.b)([(0,E.N)("useSpecularOverAlpha")],G.prototype,"_useSpecularOverAlpha",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useSpecularOverAlpha",void 0),(0,C.b)([(0,E.N)("useReflectionOverAlpha")],G.prototype,"_useReflectionOverAlpha",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useReflectionOverAlpha",void 0),(0,C.b)([(0,E.N)("disableLighting")],G.prototype,"_disableLighting",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsLightsDirty")],G.prototype,"disableLighting",void 0),(0,C.b)([(0,E.N)("useObjectSpaceNormalMap")],G.prototype,"_useObjectSpaceNormalMap",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useObjectSpaceNormalMap",void 0),(0,C.b)([(0,E.N)("useParallax")],G.prototype,"_useParallax",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useParallax",void 0),(0,C.b)([(0,E.N)("useParallaxOcclusion")],G.prototype,"_useParallaxOcclusion",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useParallaxOcclusion",void 0),(0,C.b)([(0,E.N)()],G.prototype,"parallaxScaleBias",void 0),(0,C.b)([(0,E.N)("roughness")],G.prototype,"_roughness",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"roughness",void 0),(0,C.b)([(0,E.N)()],G.prototype,"indexOfRefraction",void 0),(0,C.b)([(0,E.N)()],G.prototype,"invertRefractionY",void 0),(0,C.b)([(0,E.N)()],G.prototype,"alphaCutOff",void 0),(0,C.b)([(0,E.N)("useLightmapAsShadowmap")],G.prototype,"_useLightmapAsShadowmap",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useLightmapAsShadowmap",void 0),(0,C.b)([(0,E.s)("diffuseFresnelParameters")],G.prototype,"_diffuseFresnelParameters",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelDirty")],G.prototype,"diffuseFresnelParameters",void 0),(0,C.b)([(0,E.s)("opacityFresnelParameters")],G.prototype,"_opacityFresnelParameters",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],G.prototype,"opacityFresnelParameters",void 0),(0,C.b)([(0,E.s)("reflectionFresnelParameters")],G.prototype,"_reflectionFresnelParameters",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelDirty")],G.prototype,"reflectionFresnelParameters",void 0),(0,C.b)([(0,E.s)("refractionFresnelParameters")],G.prototype,"_refractionFresnelParameters",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelDirty")],G.prototype,"refractionFresnelParameters",void 0),(0,C.b)([(0,E.s)("emissiveFresnelParameters")],G.prototype,"_emissiveFresnelParameters",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelDirty")],G.prototype,"emissiveFresnelParameters",void 0),(0,C.b)([(0,E.N)("useReflectionFresnelFromSpecular")],G.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsFresnelDirty")],G.prototype,"useReflectionFresnelFromSpecular",void 0),(0,C.b)([(0,E.N)("useGlossinessFromSpecularMapAlpha")],G.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,C.b)([(0,E.N)("maxSimultaneousLights")],G.prototype,"_maxSimultaneousLights",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsLightsDirty")],G.prototype,"maxSimultaneousLights",void 0),(0,C.b)([(0,E.N)("invertNormalMapX")],G.prototype,"_invertNormalMapX",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"invertNormalMapX",void 0),(0,C.b)([(0,E.N)("invertNormalMapY")],G.prototype,"_invertNormalMapY",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"invertNormalMapY",void 0),(0,C.b)([(0,E.N)("twoSidedLighting")],G.prototype,"_twoSidedLighting",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsTexturesDirty")],G.prototype,"twoSidedLighting",void 0),(0,C.b)([(0,E.N)("applyDecalMapAfterDetailMap")],G.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,C.b)([(0,E.c)("_markAllSubMeshesAsMiscDirty")],G.prototype,"applyDecalMapAfterDetailMap",void 0),(0,P.e)("BABYLON.StandardMaterial",G),Q.e.DefaultMaterialFactory=Y=>new G("default material",Y)}}]);