"use strict";(self.g111kvdsqxc=self.g111kvdsqxc||[]).push([[25],{11680:(K,H,M)=>{M.d(H,{e:()=>z});var q=M(11274),w=M(11605),u=M(11280),y=M(11675),h=M(11673),W=M(11684),I=M(11651);class f extends h.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class z extends W.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(K){let H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(K,"DetailMap",140,new f,H),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=w.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=K._dirtyCallbacks[1]}isReadyForSubMesh(K,H,M){return!this._isEnabled||!(K._areTexturesDirty&&H.texturesEnabled&&M.getCaps().standardDerivatives&&this._texture&&y.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(K,H){if(this._isEnabled){K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const M=H.getEngine();K._areTexturesDirty&&(M.getCaps().standardDerivatives&&this._texture&&y.d.DetailTextureEnabled&&this._isEnabled?((0,I.N)(this._texture,K,"DETAIL"),K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):K.DETAIL=!1)}else K.DETAIL=!1}bindForSubMesh(K,H){if(!this._isEnabled)return;const M=this._material.isFrozen;K.useUbo&&M&&K.isSync||this._texture&&y.d.DetailTextureEnabled&&(K.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,I.s)(this._texture,K,"detail")),H.texturesEnabled&&this._texture&&y.d.DetailTextureEnabled&&K.setTexture("detailSampler",this._texture)}hasTexture(K){return this._texture===K}getActiveTextures(K){this._texture&&K.push(this._texture)}getAnimatables(K){this._texture&&this._texture.animations&&this._texture.animations.length>0&&K.push(this._texture)}dispose(K){var H;K&&(null===(H=this._texture)||void 0===H||H.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(K){K.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,q.e)([(0,u.z)("detailTexture"),(0,u.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"texture",void 0),(0,q.e)([(0,u.J)()],z.prototype,"diffuseBlendLevel",void 0),(0,q.e)([(0,u.J)()],z.prototype,"roughnessBlendLevel",void 0),(0,q.e)([(0,u.J)()],z.prototype,"bumpLevel",void 0),(0,q.e)([(0,u.J)(),(0,u.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"normalBlendMethod",void 0),(0,q.e)([(0,u.J)(),(0,u.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"isEnabled",void 0)},11673:(K,H,M)=>{M.d(H,{d:()=>q});class q{constructor(K){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=K,K)for(const H in K)Object.prototype.hasOwnProperty.call(K,H)&&this._setDefaultValue(H)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||K,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const K of Object.keys(this))"_"!==K[0]&&this._keys.push(K);if(this._externalProperties)for(const K in this._externalProperties)-1===this._keys.indexOf(K)&&this._keys.push(K)}isEqual(K){if(this._keys.length!==K._keys.length)return!1;for(let H=0;H<this._keys.length;H++){const M=this._keys[H];if(this[M]!==K[M])return!1}return!0}cloneTo(K){this._keys.length!==K._keys.length&&(K._keys=this._keys.slice(0));for(let H=0;H<this._keys.length;H++){const M=this._keys[H];K[M]=this[M]}}reset(){for(const K of this._keys)this._setDefaultValue(K)}_setDefaultValue(K){var H,M,q,w;const u=(null===(H=this._externalProperties)||void 0===H||null===(M=H[K])||void 0===M?void 0:M.type)??typeof this[K],y=null===(q=this._externalProperties)||void 0===q||null===(w=q[K])||void 0===w?void 0:w.default;switch(u){case"number":this[K]=y??0;break;case"string":this[K]=y??"";break;default:this[K]=y??!1}}toString(){let K="";for(let H=0;H<this._keys.length;H++){const M=this._keys[H],q=this[M];switch(typeof q){case"number":case"string":K+="#define "+M+" "+q+"\n";break;default:q&&(K+="#define "+M+"\n")}}return K}}},11675:(K,H,M)=>{M.d(H,{d:()=>w});var q=M(11180);class w{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){this._DiffuseTextureEnabled!==K&&(this._DiffuseTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(K){this._BaseWeightTextureEnabled!==K&&(this._BaseWeightTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(K){this._BaseDiffuseRoughnessTextureEnabled!==K&&(this._BaseDiffuseRoughnessTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(K){this._DetailTextureEnabled!==K&&(this._DetailTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(K){this._DecalMapEnabled!==K&&(this._DecalMapEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(K){this._AmbientTextureEnabled!==K&&(this._AmbientTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(K){this._OpacityTextureEnabled!==K&&(this._OpacityTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){this._ReflectionTextureEnabled!==K&&(this._ReflectionTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){this._EmissiveTextureEnabled!==K&&(this._EmissiveTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(K){this._SpecularTextureEnabled!==K&&(this._SpecularTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(K){this._BumpTextureEnabled!==K&&(this._BumpTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(K){this._LightmapTextureEnabled!==K&&(this._LightmapTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(K){this._RefractionTextureEnabled!==K&&(this._RefractionTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){this._ColorGradingTextureEnabled!==K&&(this._ColorGradingTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(K){this._FresnelEnabled!==K&&(this._FresnelEnabled=K,q.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(K){this._ClearCoatTextureEnabled!==K&&(this._ClearCoatTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(K){this._ClearCoatBumpTextureEnabled!==K&&(this._ClearCoatBumpTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(K){this._ClearCoatTintTextureEnabled!==K&&(this._ClearCoatTintTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(K){this._SheenTextureEnabled!==K&&(this._SheenTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(K){this._AnisotropicTextureEnabled!==K&&(this._AnisotropicTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(K){this._ThicknessTextureEnabled!==K&&(this._ThicknessTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(K){this._RefractionIntensityTextureEnabled!==K&&(this._RefractionIntensityTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(K){this._TranslucencyIntensityTextureEnabled!==K&&(this._TranslucencyIntensityTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(K){this._TranslucencyColorTextureEnabled!==K&&(this._TranslucencyColorTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(K){this._IridescenceTextureEnabled!==K&&(this._IridescenceTextureEnabled=K,q.b.MarkAllMaterialsAsDirty(1))}}w._DiffuseTextureEnabled=!0,w._BaseWeightTextureEnabled=!0,w._BaseDiffuseRoughnessTextureEnabled=!0,w._DetailTextureEnabled=!0,w._DecalMapEnabled=!0,w._AmbientTextureEnabled=!0,w._OpacityTextureEnabled=!0,w._ReflectionTextureEnabled=!0,w._EmissiveTextureEnabled=!0,w._SpecularTextureEnabled=!0,w._BumpTextureEnabled=!0,w._LightmapTextureEnabled=!0,w._RefractionTextureEnabled=!0,w._ColorGradingTextureEnabled=!0,w._FresnelEnabled=!0,w._ClearCoatTextureEnabled=!0,w._ClearCoatBumpTextureEnabled=!0,w._ClearCoatTintTextureEnabled=!0,w._SheenTextureEnabled=!0,w._AnisotropicTextureEnabled=!0,w._ThicknessTextureEnabled=!0,w._RefractionIntensityTextureEnabled=!0,w._TranslucencyIntensityTextureEnabled=!0,w._TranslucencyColorTextureEnabled=!0,w._IridescenceTextureEnabled=!0},11690:(K,H,M)=>{M.d(H,{b:()=>u});var q,w=M(11290);!function(K){K[K.Zero=0]="Zero",K[K.One=1]="One",K[K.MaxViewZ=2]="MaxViewZ"}(q||(q={}));class u{static CreateConfiguration(K){return u._Configurations[K]={defines:{},previousWorldMatrices:{},previousViewProjection:w.Matrix.Zero(),currentViewProjection:w.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},u._Configurations[K]}static DeleteConfiguration(K){delete u._Configurations[K]}static GetConfiguration(K){return u._Configurations[K]}static AddUniformsAndSamplers(K,H){K.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(K,H){for(const M of H)if(M.yh)for(const H of M.yh)H._removeDrawWrapper(K)}static PrepareDefines(K,H,M){if(!M._arePrePassDirty)return;const q=u._Configurations[K];if(!q)return;M.PREPASS=!0,M.PREPASS_COLOR=!1,M.PREPASS_COLOR_INDEX=-1;let w=0;for(let y=0;y<u.GeometryTextureDescriptions.length;y++){const K=u.GeometryTextureDescriptions[y],H=K.define,h=K.defineIndex,W=q.defines[h];void 0!==W?(M[H]=!0,M[h]=W,w++):(M[H]=!1,delete M[h])}M.SCENE_MRT_COUNT=w,M.BONES_VELOCITY_ENABLED=H.useBones&&H.computeBonesUsingShaders&&H.skeleton&&!H.skeleton.isUsingTextureForMatrices&&-1===q.excludedSkinnedMesh.indexOf(H)}static Bind(K,H,M,q,w){const y=u._Configurations[K];if(!y)return;const h=M.sK(),W=h.getEngine();if(y.reverseCulling&&W.setStateCullFaceType(h._mirroredCameraPosition?w.cullBackFaces:!w.cullBackFaces),(void 0!==y.defines.PREPASS_VELOCITY_INDEX||void 0!==y.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(y.previousWorldMatrices[M.uniqueId]||(y.previousWorldMatrices[M.uniqueId]=q.clone()),y.previousViewProjection||(y.previousViewProjection=h.getTransformMatrix().clone(),y.currentViewProjection=h.getTransformMatrix().clone()),y.currentViewProjection.updateFlag!==h.getTransformMatrix().updateFlag?(y.lastUpdateFrameId=W.frameId,y.previousViewProjection.q(y.currentViewProjection),y.currentViewProjection.q(h.getTransformMatrix())):y.lastUpdateFrameId!==W.frameId&&(y.lastUpdateFrameId=W.frameId,y.previousViewProjection.q(y.currentViewProjection)),H.setMatrix("previousWorld",y.previousWorldMatrices[M.uniqueId]),H.setMatrix("previousViewProjection",y.previousViewProjection),y.previousWorldMatrices[M.uniqueId]=q.clone(),M.useBones&&M.computeBonesUsingShaders&&M.skeleton)){const K=M.skeleton;if(!K.isUsingTextureForMatrices||-1===H.getUniformIndex("boneTextureWidth")){const q=K.getTransformMatrices(M);q&&(y.previousBones[M.uniqueId]||(y.previousBones[M.uniqueId]=q.slice()),H.setMatrices("mPreviousBones",y.previousBones[M.uniqueId]),y.previousBones[M.uniqueId].set(q))}}}}u.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],u._Configurations={}},11684:(K,H,M)=>{M.d(H,{b:()=>S});var q=M(11274),w=M(11280),u=M(11605),y=M(11143),h=M(11169),W=M(11193);const I=new RegExp("^([gimus]+)!");class f{constructor(K){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=K,this._scene=K.sK(),this._engine=this._scene.getEngine()}_addPlugin(K){for(let q=0;q<this._plugins.length;++q)if(this._plugins[q].name===K.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!K.isCompatible(this._material.shaderLanguage))throw`The plugin "${K.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const H=K.getClassName();f._MaterialPluginClassToMainDefine[H]||(f._MaterialPluginClassToMainDefine[H]="MATERIALPLUGIN_"+ ++f._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(K,H)=>this._handlePluginEvent(K,H),this._plugins.push(K),this._plugins.sort(((K,H)=>K.priority-H.priority)),this._codeInjectionPoints={};const M={};M[f._MaterialPluginClassToMainDefine[H]]={type:"boolean",default:!0};for(const q of this._plugins)q.collectDefines(M),this._collectPointNames("vertex",q.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",q.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=M,!0}_activatePlugin(K){-1===this._activePlugins.indexOf(K)&&(this._activePlugins.push(K),this._activePlugins.sort(((K,H)=>K.priority-H.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),K.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(K),this._activePluginsForExtraEvents.sort(((K,H)=>K.priority-H.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(K){for(let H=0;H<this._plugins.length;++H)if(this._plugins[H].name===K)return this._plugins[H];return null}_handlePluginEventIsReadyForSubMesh(K){let H=!0;for(const M of this._activePlugins)H=H&&M.isReadyForSubMesh(K.defines,this._scene,this._engine,K.subMesh);K.isReadyForSubMesh=H}_handlePluginEventPrepareDefinesBeforeAttributes(K){for(const H of this._activePlugins)H.prepareDefinesBeforeAttributes(K.defines,this._scene,K.mesh)}_handlePluginEventPrepareDefines(K){for(const H of this._activePlugins)H.prepareDefines(K.defines,this._scene,K.mesh)}_handlePluginEventHardBindForSubMesh(K){for(const H of this._activePluginsForExtraEvents)H.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventBindForSubMesh(K){for(const H of this._activePlugins)H.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventHasRenderTargetTextures(K){let H=!1;for(const M of this._activePluginsForExtraEvents)if(H=M.hasRenderTargetTextures(),H)break;K.hasRenderTargetTextures=H}_handlePluginEventFillRenderTargetTextures(K){for(const H of this._activePluginsForExtraEvents)H.fillRenderTargetTextures(K.renderTargets)}_handlePluginEvent(K,H){switch(K){case 512:{const K=H;for(const H of this._activePlugins)H.getActiveTextures(K.activeTextures);break}case 256:{const K=H;for(const H of this._activePlugins)H.getAnimatables(K.animatables);break}case 1024:{const K=H;let M=!1;for(const H of this._activePlugins)if(M=H.hasTexture(K.texture),M)break;K.hasTexture=M;break}case 2:{const K=H;for(const H of this._plugins)H.dispose(K.forceDisposeTextures);break}case 4:H.defineNames=this._defineNamesFromPlugins;break;case 128:{const K=H;for(const H of this._activePlugins)K.fallbackRank=H.addFallbacks(K.defines,K.fallbacks,K.fallbackRank),H.getAttributes(K.attributes,this._scene,K.mesh);this._uniformList.length>0&&K.uniforms.push(...this._uniformList),this._samplerList.length>0&&K.samplers.push(...this._samplerList),this._uboList.length>0&&K.uniformBuffersNames.push(...this._uboList),K.customCode=this._injectCustomCode(K,K.customCode);break}case 8:{const K=H;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const M=1===this._material.shaderLanguage;for(const H of this._plugins){const q=H.getUniforms(this._material.shaderLanguage);if(q){if(q.ubo)for(const H of q.ubo){if(H.size&&H.type){const q=H.arraySize??0;if(K.ubo.addUniform(H.name,H.size,q),M){let K;switch(H.type){case"mat4":K="mat4x4f";break;case"float":K="f32";break;default:K=`${H.type}f`}this._uboDeclaration+=q>0?`uniform ${H.name}: array<${K}, ${q}>;\n`:`uniform ${H.name}: ${K};\n`}else this._uboDeclaration+=`${H.type} ${H.name}${q>0?`[${q}]`:""};\n`}this._uniformList.push(H.name)}q.vertex&&(this._vertexDeclaration+=q.vertex+"\n"),q.fragment&&(this._fragmentDeclaration+=q.fragment+"\n")}H.getSamplers(this._samplerList),H.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(K,H){if(H)for(const M in H)this._codeInjectionPoints[K]||(this._codeInjectionPoints[K]={}),this._codeInjectionPoints[K][M]=!0}_injectCustomCode(K,H){return(M,q)=>{var w;H&&(q=H(M,q)),this._uboDeclaration&&(q=q.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(q=q.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(q=q.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const u=null===(w=this._codeInjectionPoints)||void 0===w?void 0:w[M];if(!u)return q;let y=null;for(let H in u){let w="";for(const q of this._activePlugins){var f;let u=null===(f=q.getCustomCode(M,this._material.shaderLanguage))||void 0===f?void 0:f[H];if(u){if(q.resolveIncludes){if(null===y){const H=0;y={defines:[],indexParameters:K.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:W.d.GetShadersRepository(H),includesShadersStore:W.d.GetIncludesShadersStore(H),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}y.isFragment="fragment"===M,(0,h.g)(u,y,(K=>u=K))}w+=u+"\n"}}if(w.length>0)if("!"===H.charAt(0)){H=H.substring(1);let K="g";if("!"===H.charAt(0))K="",H=H.substring(1);else{const M=I.exec(H);M&&M.length>=2&&(K=M[1],H=H.substring(K.length+1))}K.indexOf("g")<0&&(K+="g");const M=q,u=new RegExp(H,K);let y=u.exec(M);for(;null!==y;){let K=w;for(let H=0;H<y.length;++H)K=K.replace("$"+H,y[H]);q=q.replace(y[0],K),y=u.exec(M)}}else{const K="#define "+H;q=q.replace(K,"\n"+w+"\n"+K)}}return q}}}f._MaterialPluginClassToMainDefine={},f._MaterialPluginCounter=0,y.b.OnEnginesDisposedObservable.add((()=>{v()}));const z=[];let G=!1,a=null;function v(){z.length=0,G=!1,u.c.OnEventObservable.remove(a),a=null}var O=M(11325),L=M(11242);class S{isCompatible(K){return 0===K}_enable(K){K&&this._pluginManager._activatePlugin(this)}constructor(K,H,M,q){let w=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],u=arguments.length>5&&void 0!==arguments[5]&&arguments[5],y=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=K,this.name=H,this.priority=M,this.resolveIncludes=y,K.pluginManager||(K.pluginManager=new f(K),K.Hh.add((()=>{K.pluginManager=void 0}))),this._pluginDefineNames=q,this._pluginManager=K.pluginManager,w&&this._pluginManager._addPlugin(this),u&&this._enable(!0),this.markAllDefinesAsDirty=K._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(K,H,M,q){return!0}hardBindForSubMesh(K,H,M,q){}bindForSubMesh(K,H,M,q){}dispose(K){}getCustomCode(K){return null}collectDefines(K){if(this._pluginDefineNames)for(const H of Object.keys(this._pluginDefineNames)){if("_"===H[0])continue;const M=typeof this._pluginDefineNames[H];K[H]={type:"number"===M?"number":"string"===M?"string":"boolean"===M?"boolean":"object",default:this._pluginDefineNames[H]}}}prepareDefinesBeforeAttributes(K,H,M){}prepareDefines(K,H,M){}hasTexture(K){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(K){}getActiveTextures(K){}getAnimatables(K){}addFallbacks(K,H,M){return M}getSamplers(K){}getAttributes(K,H,M){}getUniformBuffersNames(K){}getUniforms(){return{}}copyTo(K){O.c.Clone((()=>K),this)}serialize(){return O.c.Serialize(this)}parse(K,H,M){O.c.Parse((()=>this),K,H,M)}}(0,q.e)([(0,w.J)()],S.prototype,"name",void 0),(0,q.e)([(0,w.J)()],S.prototype,"priority",void 0),(0,q.e)([(0,w.J)()],S.prototype,"resolveIncludes",void 0),(0,q.e)([(0,w.J)()],S.prototype,"registerForExtraEvents",void 0),(0,L.f)("BABYLON.MaterialPluginBase",S)},11668:(K,H,M)=>{M.d(H,{b:()=>q});class q{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(K){K.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(K){}bindForSubMesh(K,H,M,q,w){if(H.prePassRenderer&&H.prePassRenderer.enabled&&H.prePassRenderer.currentRTisSceneRT&&(-1!==H.prePassRenderer.getIndex(2)||-1!==H.prePassRenderer.getIndex(11))){this.previousWorldMatrices[M.uniqueId]||(this.previousWorldMatrices[M.uniqueId]=q.clone()),this.previousViewProjection||(this.previousViewProjection=H.getTransformMatrix().clone(),this.currentViewProjection=H.getTransformMatrix().clone());const w=H.getEngine();this.currentViewProjection.updateFlag!==H.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=w.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(H.getTransformMatrix())):this._lastUpdateFrameId!==w.frameId&&(this._lastUpdateFrameId=w.frameId,this.previousViewProjection.q(this.currentViewProjection)),K.setMatrix("previousWorld",this.previousWorldMatrices[M.uniqueId]),K.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[M.uniqueId]=q.clone()}}}},11659:(K,H,M)=>{M.d(H,{BH:()=>D});var q=M(11274),w=M(11280),u=M(11388),y=M(11522),h=M(11329),W=M(11366),I=M(11668),f=M(11531),z=M(11605),G=M(11673),a=M(11597),v=M(11267),O=M(11242),L=M(11675),S=M(11589),B=M(11680),C=M(11656),i=M(11651),Z=M(11325),E=M(11690);const l={effect:null,subMesh:null};class s extends G.d{constructor(K){super(K),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(K){const H=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const M of H)this[M]=M===K}}class D extends a.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(K){this._attachImageProcessingConfiguration(K),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(K){K!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=K||this.sK().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(K){this.imageProcessingConfiguration.colorCurvesEnabled=K}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(K){this.imageProcessingConfiguration.colorGradingEnabled=K}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(K){this._imageProcessingConfiguration.toneMappingEnabled=K}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(K){this._imageProcessingConfiguration.exposure=K}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(K){this._imageProcessingConfiguration.contrast=K}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(K){this._imageProcessingConfiguration.colorGradingTexture=K}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(K){this._imageProcessingConfiguration.colorCurves=K}get canRenderToMRT(){return!0}constructor(K,H){super(K,H,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||D.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new h.CH(0,0,0),this.diffuseColor=new h.CH(1,1,1),this.specularColor=new h.CH(1,1,1),this.emissiveColor=new h.CH(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new u.e(16),this._globalAmbientColor=new h.CH(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new B.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new I.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(D.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(D.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"BH"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===z.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Wh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==z.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Wh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(K,H){let q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const w=H._drawWrapper;if(w.effect&&this.isFrozen&&w._wasPreviouslyReady&&w._wasPreviouslyUsingInstances===q)return!0;H.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),H.materialDefines=new s(this._eventInfo.defineNames));const u=this.sK(),y=H.materialDefines;if(this._isReadyForSubMesh(H))return!0;const h=u.getEngine();y._needNormals=(0,i.K)(u,K,y,!0,this._maxSimultaneousLights,this._disableLighting),(0,i.R)(u,y);const z=this.needAlphaBlendingForMesh(K)&&this.sK().useOrderIndependentTransparency;if((0,i.T)(u,y,this.canRenderToMRT&&!z),(0,i.S)(u,y,z),E.b.PrepareDefines(h.currentRenderPassId,K,y),y._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,y._needUVs=!1;for(let K=1;K<=6;++K)y["MAINUV"+K]=!1;if(u.texturesEnabled){if(y.DIFFUSEDIRECTUV=0,y.BUMPDIRECTUV=0,y.AMBIENTDIRECTUV=0,y.OPACITYDIRECTUV=0,y.EMISSIVEDIRECTUV=0,y.SPECULARDIRECTUV=0,y.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&D.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._diffuseTexture,y,"DIFFUSE")}else y.DIFFUSE=!1;if(this._ambientTexture&&D.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._ambientTexture,y,"AMBIENT")}else y.AMBIENT=!1;if(this._opacityTexture&&D.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._opacityTexture,y,"OPACITY"),y.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else y.OPACITY=!1;if(this._reflectionTexture&&D.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(y._needNormals=!0,y.REFLECTION=!0,y.ROUGHNESS=this._roughness>0,y.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,y.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===v.b.INVCUBIC_MODE,y.REFLECTIONMAP_3D=this._reflectionTexture.isCube,y.REFLECTIONMAP_OPPOSITEZ=y.REFLECTIONMAP_3D&&this.sK().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,y.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case v.b.EXPLICIT_MODE:y.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case v.b.PLANAR_MODE:y.setReflectionMode("REFLECTIONMAP_PLANAR");break;case v.b.PROJECTION_MODE:y.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case v.b.SKYBOX_MODE:y.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case v.b.SPHERICAL_MODE:y.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case v.b.EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case v.b.FIXED_EQUIRECTANGULAR_MODE:y.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case v.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:y.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case v.b.CUBIC_MODE:case v.b.INVCUBIC_MODE:default:y.setReflectionMode("REFLECTIONMAP_CUBIC")}y.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else y.REFLECTION=!1,y.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&D.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._emissiveTexture,y,"EMISSIVE")}else y.EMISSIVE=!1;if(this._lightmapTexture&&D.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._lightmapTexture,y,"LIGHTMAP"),y.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,y.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else y.LIGHTMAP=!1;if(this._specularTexture&&D.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,i.N)(this._specularTexture,y,"SPECULAR"),y.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else y.SPECULAR=!1;if(u.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&D.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,i.N)(this._bumpTexture,y,"BUMP"),y.PARALLAX=this._useParallax,y.PARALLAX_RHS=u.useRightHandedSystem,y.PARALLAXOCCLUSION=this._useParallaxOcclusion,y.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else y.BUMP=!1,y.PARALLAX=!1,y.PARALLAX_RHS=!1,y.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&D.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;y._needUVs=!0,y.REFRACTION=!0,y.REFRACTIONMAP_3D=this._refractionTexture.isCube,y.RGBDREFRACTION=this._refractionTexture.isRGBD,y.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else y.REFRACTION=!1;y.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else y.DIFFUSE=!1,y.AMBIENT=!1,y.OPACITY=!1,y.REFLECTION=!1,y.EMISSIVE=!1,y.LIGHTMAP=!1,y.BUMP=!1,y.REFRACTION=!1;y.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),y.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,y.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,y.SPECULAROVERALPHA=this._useSpecularOverAlpha,y.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,y.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,y.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(K)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=y,this._eventInfo.subMesh=H,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(y._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(y),y.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,y.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(y._areFresnelDirty&&(D.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(y.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,y.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,y.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,y.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,y.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,y.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,y._needNormals=!0,y.FRESNEL=!0):y.FRESNEL=!1),y.AREALIGHTUSED)for(let M=0;M<K.lightSources.length;M++)if(!K.lightSources[M]._isReady())return!1;(0,i.P)(K,u,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(K),y,this._applyDecalMapAfterDetailMap),(0,i.J)(u,h,this,y,q,null,H.getRenderingMesh().hasThinInstances),this._eventInfo.defines=y,this._eventInfo.mesh=K,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,i.H)(K,y,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let G=!1;if(y.isDirty){const q=y._areLightsDisposed;y.markAsProcessed();const w=new S.e;y.REFLECTION&&w.addFallback(0,"REFLECTION"),y.SPECULAR&&w.addFallback(0,"SPECULAR"),y.BUMP&&w.addFallback(0,"BUMP"),y.PARALLAX&&w.addFallback(1,"PARALLAX"),y.PARALLAX_RHS&&w.addFallback(1,"PARALLAX_RHS"),y.PARALLAXOCCLUSION&&w.addFallback(0,"PARALLAXOCCLUSION"),y.SPECULAROVERALPHA&&w.addFallback(0,"SPECULAROVERALPHA"),y.FOG&&w.addFallback(1,"FOG"),y.POINTSIZE&&w.addFallback(0,"POINTSIZE"),y.LOGARITHMICDEPTH&&w.addFallback(0,"LOGARITHMICDEPTH"),(0,i.t)(y,w,this._maxSimultaneousLights),y.SPECULARTERM&&w.addFallback(0,"SPECULARTERM"),y.DIFFUSEFRESNEL&&w.addFallback(1,"DIFFUSEFRESNEL"),y.OPACITYFRESNEL&&w.addFallback(2,"OPACITYFRESNEL"),y.REFLECTIONFRESNEL&&w.addFallback(3,"REFLECTIONFRESNEL"),y.EMISSIVEFRESNEL&&w.addFallback(4,"EMISSIVEFRESNEL"),y.FRESNEL&&w.addFallback(4,"FRESNEL"),y.MULTIVIEW&&w.addFallback(0,"MULTIVIEW");const z=[W.d.PositionKind];y.NORMAL&&z.push(W.d.NormalKind),y.TANGENT&&z.push(W.d.TangentKind);for(let K=1;K<=6;++K)y["UV"+K]&&z.push(`uv${1===K?"":K}`);y.VERTEXCOLOR&&z.push(W.d.ColorKind),(0,i.x)(z,K,y,w),(0,i.y)(z,y),(0,i.A)(z,K,y),(0,i.u)(z,K,y);let a="default";const v=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],O=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],L=["Material","Scene","Mesh"],B={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:y.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=w,this._eventInfo.fallbackRank=0,this._eventInfo.defines=y,this._eventInfo.uniforms=v,this._eventInfo.attributes=z,this._eventInfo.samplers=O,this._eventInfo.uniformBuffersNames=L,this._eventInfo.customCode=void 0,this._eventInfo.mesh=K,this._eventInfo.indexParameters=B,this._callbackPluginEventGeneric(128,this._eventInfo),E.b.AddUniformsAndSamplers(v,O),I.b.AddUniforms(v),I.b.AddSamplers(O),f.b&&(f.b.PrepareUniforms(v,y),f.b.PrepareSamplers(O,y)),(0,i.X)({uniformsNames:v,uniformBuffersNames:L,samplers:O,defines:y,maxSimultaneousLights:this._maxSimultaneousLights}),(0,C.e)(v);const Z={};this.customShaderNameResolve&&(a=this.customShaderNameResolve(a,v,L,O,y,z,Z));const s=y.toString(),D=H.effect;let V=u.getEngine().createEffect(a,{attributes:z,uniformsNames:v,uniformBuffersNames:L,samplers:O,defines:s,fallbacks:w,onCompiled:this.onCompiled,onError:this.onError,indexParameters:B,processFinalCode:Z.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:y.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([M.e(41),M.e(64)]).then(M.bind(M,13824)),Promise.all([M.e(39),M.e(65)]).then(M.bind(M,13956))]):await Promise.all([Promise.all([M.e(34),M.e(67)]).then(M.bind(M,14037)),Promise.all([M.e(33),M.e(68)]).then(M.bind(M,14183))]),this._shadersLoaded=!0}},h);if(this._eventInfo.customCode=void 0,V)if(this._onEffectCreatedObservable&&(l.effect=V,l.subMesh=H,this._onEffectCreatedObservable.notifyObservers(l)),this.allowShaderHotSwapping&&D&&!V.isReady()){if(V=D,y.markAsUnprocessed(),G=this.isFrozen,q)return y._areLightsDisposed=!0,!1}else u.resetCachedMaterial(),H.setEffect(V,y,this._materialContext)}return!(!H.effect||!H.effect.isReady())&&(y._renderId=u.getRenderId(),w._wasPreviouslyReady=!G,w._wasPreviouslyUsingInstances=q,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const K=this._uniformBuffer;K.addUniform("diffuseLeftColor",4),K.addUniform("diffuseRightColor",4),K.addUniform("opacityParts",4),K.addUniform("reflectionLeftColor",4),K.addUniform("reflectionRightColor",4),K.addUniform("refractionLeftColor",4),K.addUniform("refractionRightColor",4),K.addUniform("emissiveLeftColor",4),K.addUniform("emissiveRightColor",4),K.addUniform("vDiffuseInfos",2),K.addUniform("vAmbientInfos",2),K.addUniform("vOpacityInfos",2),K.addUniform("vReflectionInfos",2),K.addUniform("vReflectionPosition",3),K.addUniform("vReflectionSize",3),K.addUniform("vEmissiveInfos",2),K.addUniform("vLightmapInfos",2),K.addUniform("vSpecularInfos",2),K.addUniform("vBumpInfos",3),K.addUniform("diffuseMatrix",16),K.addUniform("ambientMatrix",16),K.addUniform("opacityMatrix",16),K.addUniform("reflectionMatrix",16),K.addUniform("emissiveMatrix",16),K.addUniform("lightmapMatrix",16),K.addUniform("specularMatrix",16),K.addUniform("bumpMatrix",16),K.addUniform("vTangentSpaceParams",2),K.addUniform("pointSize",1),K.addUniform("alphaCutOff",1),K.addUniform("refractionMatrix",16),K.addUniform("vRefractionInfos",4),K.addUniform("vRefractionPosition",3),K.addUniform("vRefractionSize",3),K.addUniform("vSpecularColor",4),K.addUniform("vEmissiveColor",3),K.addUniform("vDiffuseColor",4),K.addUniform("vAmbientColor",3),K.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(K,H,M){const q=this.sK(),w=M.materialDefines;if(!w)return;const u=M.effect;if(!u)return;this._activeEffect=u,H.getMeshUniformBuffer().bindToEffect(u,"Mesh"),H.transferToEffect(K),this._uniformBuffer.bindToEffect(u,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,q,H,K,this.isFrozen),E.b.Bind(q.getEngine().currentRenderPassId,this._activeEffect,H,K,this);const W=q.activeCamera;W?this._uniformBuffer.updateFloat4("cameraInfo",W.Ih,W.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=M,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),w.OBJECTSPACE_NORMALMAP&&(K.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const I=this._mustRebind(q,u,M,H.visibility);(0,i.e)(H,u);const f=this._uniformBuffer;if(I){if(this.bindViewProjection(u),!f.useUbo||!this.isFrozen||!f.isSync||M._drawWrapper._forceRebindOnNextCall){if(D.FresnelEnabled&&w.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(f.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),f.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&f.updateColor4("opacityParts",new h.CH(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(f.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),f.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(f.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),f.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(f.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),f.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),q.texturesEnabled){if(this._diffuseTexture&&D.DiffuseTextureEnabled&&(f.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,i.s)(this._diffuseTexture,f,"diffuse")),this._ambientTexture&&D.AmbientTextureEnabled&&(f.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,i.s)(this._ambientTexture,f,"ambient")),this._opacityTexture&&D.OpacityTextureEnabled&&(f.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,i.s)(this._opacityTexture,f,"opacity")),this._hasAlphaChannel()&&f.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&D.ReflectionTextureEnabled){if(f.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),f.fh("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const K=this._reflectionTexture;f.updateVector3("vReflectionPosition",K.boundingBoxPosition),f.updateVector3("vReflectionSize",K.boundingBoxSize)}}else f.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&D.EmissiveTextureEnabled&&(f.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,i.s)(this._emissiveTexture,f,"emissive")),this._lightmapTexture&&D.LightmapTextureEnabled&&(f.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,i.s)(this._lightmapTexture,f,"lightmap")),this._specularTexture&&D.SpecularTextureEnabled&&(f.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,i.s)(this._specularTexture,f,"specular")),this._bumpTexture&&q.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&(f.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,i.s)(this._bumpTexture,f,"bump"),q._mirroredCameraPosition?f.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):f.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&D.RefractionTextureEnabled){let K=1;if(this._refractionTexture.isCube||(f.fh("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(K=this._refractionTexture.depth)),f.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,K,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const K=this._refractionTexture;f.updateVector3("vRefractionPosition",K.boundingBoxPosition),f.updateVector3("vRefractionSize",K.boundingBoxSize)}}}this.pointsCloud&&f.updateFloat("pointSize",this.pointSize),f.updateColor4("vSpecularColor",this.specularColor,this.specularPower),f.updateColor3("vEmissiveColor",D.EmissiveTextureEnabled?this.emissiveColor:h.CH.BlackReadOnly),f.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),q.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),f.updateColor3("vAmbientColor",this._globalAmbientColor)}q.texturesEnabled&&(this._diffuseTexture&&D.DiffuseTextureEnabled&&u.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&D.AmbientTextureEnabled&&u.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&D.OpacityTextureEnabled&&u.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&D.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?u.setTexture("reflectionCubeSampler",this._reflectionTexture):u.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&D.EmissiveTextureEnabled&&u.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&D.LightmapTextureEnabled&&u.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&D.SpecularTextureEnabled&&u.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&q.getEngine().getCaps().standardDerivatives&&D.BumpTextureEnabled&&u.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&D.RefractionTextureEnabled&&(this._refractionTexture.isCube?u.setTexture("refractionCubeSampler",this._refractionTexture):u.setTexture("refraction2DSampler",this._refractionTexture))),this.sK().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(H)&&this.sK().depthPeelingRenderer.bind(u),this._eventInfo.subMesh=M,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,C.g)(u,this,q),this.bindEyePosition(u)}else q.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(I||!this.isFrozen){var z;if(q.lightsEnabled&&!this._disableLighting&&(0,i.h)(q,H,u,w,this._maxSimultaneousLights),(q.fogEnabled&&H.applyFog&&q.fogMode!==y.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||H.receiveShadows||w.PREPASS)&&this.bindView(u),(0,i.g)(q,H,u),w.NUM_MORPH_INFLUENCERS&&(0,i.o)(H,u),w.BAKED_VERTEX_ANIMATION_TEXTURE)null===(z=H.bakedVertexAnimationManager)||void 0===z||z.bind(u,w.INSTANCES);this.useLogarithmicDepth&&(0,i.l)(w,u,q),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(H,this._activeEffect,M),f.update()}getAnimatables(){const K=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&K.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&K.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&K.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&K.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&K.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&K.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&K.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&K.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&K.push(this._refractionTexture),K}getActiveTextures(){const K=super.getActiveTextures();return this._diffuseTexture&&K.push(this._diffuseTexture),this._ambientTexture&&K.push(this._ambientTexture),this._opacityTexture&&K.push(this._opacityTexture),this._reflectionTexture&&K.push(this._reflectionTexture),this._emissiveTexture&&K.push(this._emissiveTexture),this._specularTexture&&K.push(this._specularTexture),this._bumpTexture&&K.push(this._bumpTexture),this._lightmapTexture&&K.push(this._lightmapTexture),this._refractionTexture&&K.push(this._refractionTexture),K}hasTexture(K){return!!super.hasTexture(K)||(this._diffuseTexture===K||(this._ambientTexture===K||(this._opacityTexture===K||(this._reflectionTexture===K||(this._emissiveTexture===K||(this._specularTexture===K||(this._bumpTexture===K||(this._lightmapTexture===K||this._refractionTexture===K))))))))}dispose(K,H){var M,q,w,u,y,h,W,I,f;H&&(null===(M=this._diffuseTexture)||void 0===M||M.dispose(),null===(q=this._ambientTexture)||void 0===q||q.dispose(),null===(w=this._opacityTexture)||void 0===w||w.dispose(),null===(u=this._reflectionTexture)||void 0===u||u.dispose(),null===(y=this._emissiveTexture)||void 0===y||y.dispose(),null===(h=this._specularTexture)||void 0===h||h.dispose(),null===(W=this._bumpTexture)||void 0===W||W.dispose(),null===(I=this._lightmapTexture)||void 0===I||I.dispose(),null===(f=this._refractionTexture)||void 0===f||f.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(K,H)}clone(K){let H=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],M=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const q=Z.c.Clone((()=>new D(K,this.sK())),this,{cloneTexturesOnlyOnce:H});return q.name=K,q.id=K,this.stencil.copyTo(q.stencil),this._clonePlugins(q,M),q}static Parse(K,H,M){const q=Z.c.Parse((()=>new D(K.name,H)),K,H,M);return K.stencil&&q.stencil.parse(K.stencil,H,M),z.c._ParsePlugins(K,q,H,M),q}static get DiffuseTextureEnabled(){return L.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){L.d.DiffuseTextureEnabled=K}static get DetailTextureEnabled(){return L.d.DetailTextureEnabled}static set DetailTextureEnabled(K){L.d.DetailTextureEnabled=K}static get AmbientTextureEnabled(){return L.d.AmbientTextureEnabled}static set AmbientTextureEnabled(K){L.d.AmbientTextureEnabled=K}static get OpacityTextureEnabled(){return L.d.OpacityTextureEnabled}static set OpacityTextureEnabled(K){L.d.OpacityTextureEnabled=K}static get ReflectionTextureEnabled(){return L.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){L.d.ReflectionTextureEnabled=K}static get EmissiveTextureEnabled(){return L.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){L.d.EmissiveTextureEnabled=K}static get SpecularTextureEnabled(){return L.d.SpecularTextureEnabled}static set SpecularTextureEnabled(K){L.d.SpecularTextureEnabled=K}static get BumpTextureEnabled(){return L.d.BumpTextureEnabled}static set BumpTextureEnabled(K){L.d.BumpTextureEnabled=K}static get LightmapTextureEnabled(){return L.d.LightmapTextureEnabled}static set LightmapTextureEnabled(K){L.d.LightmapTextureEnabled=K}static get RefractionTextureEnabled(){return L.d.RefractionTextureEnabled}static set RefractionTextureEnabled(K){L.d.RefractionTextureEnabled=K}static get ColorGradingTextureEnabled(){return L.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){L.d.ColorGradingTextureEnabled=K}static get FresnelEnabled(){return L.d.FresnelEnabled}static set FresnelEnabled(K){L.d.FresnelEnabled=K}}D.ForceGLSL=!1,(0,q.e)([(0,w.z)("diffuseTexture")],D.prototype,"_diffuseTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"diffuseTexture",void 0),(0,q.e)([(0,w.z)("ambientTexture")],D.prototype,"_ambientTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"ambientTexture",void 0),(0,q.e)([(0,w.z)("opacityTexture")],D.prototype,"_opacityTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"opacityTexture",void 0),(0,q.e)([(0,w.z)("reflectionTexture")],D.prototype,"_reflectionTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"reflectionTexture",void 0),(0,q.e)([(0,w.z)("emissiveTexture")],D.prototype,"_emissiveTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"emissiveTexture",void 0),(0,q.e)([(0,w.z)("specularTexture")],D.prototype,"_specularTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"specularTexture",void 0),(0,q.e)([(0,w.z)("bumpTexture")],D.prototype,"_bumpTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"bumpTexture",void 0),(0,q.e)([(0,w.z)("lightmapTexture")],D.prototype,"_lightmapTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"lightmapTexture",void 0),(0,q.e)([(0,w.z)("refractionTexture")],D.prototype,"_refractionTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"refractionTexture",void 0),(0,q.e)([(0,w.j)("ambient")],D.prototype,"ambientColor",void 0),(0,q.e)([(0,w.j)("diffuse")],D.prototype,"diffuseColor",void 0),(0,q.e)([(0,w.j)("specular")],D.prototype,"specularColor",void 0),(0,q.e)([(0,w.j)("emissive")],D.prototype,"emissiveColor",void 0),(0,q.e)([(0,w.J)()],D.prototype,"specularPower",void 0),(0,q.e)([(0,w.J)("useAlphaFromDiffuseTexture")],D.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],D.prototype,"useAlphaFromDiffuseTexture",void 0),(0,q.e)([(0,w.J)("useEmissiveAsIllumination")],D.prototype,"_useEmissiveAsIllumination",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useEmissiveAsIllumination",void 0),(0,q.e)([(0,w.J)("linkEmissiveWithDiffuse")],D.prototype,"_linkEmissiveWithDiffuse",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"linkEmissiveWithDiffuse",void 0),(0,q.e)([(0,w.J)("useSpecularOverAlpha")],D.prototype,"_useSpecularOverAlpha",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useSpecularOverAlpha",void 0),(0,q.e)([(0,w.J)("useReflectionOverAlpha")],D.prototype,"_useReflectionOverAlpha",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useReflectionOverAlpha",void 0),(0,q.e)([(0,w.J)("disableLighting")],D.prototype,"_disableLighting",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsLightsDirty")],D.prototype,"disableLighting",void 0),(0,q.e)([(0,w.J)("useObjectSpaceNormalMap")],D.prototype,"_useObjectSpaceNormalMap",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useObjectSpaceNormalMap",void 0),(0,q.e)([(0,w.J)("useParallax")],D.prototype,"_useParallax",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallax",void 0),(0,q.e)([(0,w.J)("useParallaxOcclusion")],D.prototype,"_useParallaxOcclusion",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useParallaxOcclusion",void 0),(0,q.e)([(0,w.J)()],D.prototype,"parallaxScaleBias",void 0),(0,q.e)([(0,w.J)("roughness")],D.prototype,"_roughness",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"roughness",void 0),(0,q.e)([(0,w.J)()],D.prototype,"indexOfRefraction",void 0),(0,q.e)([(0,w.J)()],D.prototype,"invertRefractionY",void 0),(0,q.e)([(0,w.J)()],D.prototype,"alphaCutOff",void 0),(0,q.e)([(0,w.J)("useLightmapAsShadowmap")],D.prototype,"_useLightmapAsShadowmap",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useLightmapAsShadowmap",void 0),(0,q.e)([(0,w.p)("diffuseFresnelParameters")],D.prototype,"_diffuseFresnelParameters",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"diffuseFresnelParameters",void 0),(0,q.e)([(0,w.p)("opacityFresnelParameters")],D.prototype,"_opacityFresnelParameters",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],D.prototype,"opacityFresnelParameters",void 0),(0,q.e)([(0,w.p)("reflectionFresnelParameters")],D.prototype,"_reflectionFresnelParameters",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"reflectionFresnelParameters",void 0),(0,q.e)([(0,w.p)("refractionFresnelParameters")],D.prototype,"_refractionFresnelParameters",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"refractionFresnelParameters",void 0),(0,q.e)([(0,w.p)("emissiveFresnelParameters")],D.prototype,"_emissiveFresnelParameters",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"emissiveFresnelParameters",void 0),(0,q.e)([(0,w.J)("useReflectionFresnelFromSpecular")],D.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsFresnelDirty")],D.prototype,"useReflectionFresnelFromSpecular",void 0),(0,q.e)([(0,w.J)("useGlossinessFromSpecularMapAlpha")],D.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,q.e)([(0,w.J)("maxSimultaneousLights")],D.prototype,"_maxSimultaneousLights",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsLightsDirty")],D.prototype,"maxSimultaneousLights",void 0),(0,q.e)([(0,w.J)("invertNormalMapX")],D.prototype,"_invertNormalMapX",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapX",void 0),(0,q.e)([(0,w.J)("invertNormalMapY")],D.prototype,"_invertNormalMapY",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"invertNormalMapY",void 0),(0,q.e)([(0,w.J)("twoSidedLighting")],D.prototype,"_twoSidedLighting",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"twoSidedLighting",void 0),(0,q.e)([(0,w.J)("applyDecalMapAfterDetailMap")],D.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,q.e)([(0,w.c)("_markAllSubMeshesAsMiscDirty")],D.prototype,"applyDecalMapAfterDetailMap",void 0),(0,O.f)("BABYLON.StandardMaterial",D),y.b.DefaultMaterialFactory=K=>new D("default material",K)}}]);