"use strict";(self.ex92n20nlz8=self.ex92n20nlz8||[]).push([[25],{12978:(I,g,b)=>{b.d(g,{c:()=>D});var e=b(12577),c=b(12901),z=b(12584),M=b(12970),J=b(12966),o=b(12980),n=b(12943);class G extends J.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class D extends o.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(I){let g=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(I,"DetailMap",140,new G,g),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=c.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=I._dirtyCallbacks[1]}isReadyForSubMesh(I,g,b){return!this._isEnabled||!(I._areTexturesDirty&&g.texturesEnabled&&b.getCaps().standardDerivatives&&this._texture&&M.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(I,g){if(this._isEnabled){I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const b=g.getEngine();I._areTexturesDirty&&(b.getCaps().standardDerivatives&&this._texture&&M.d.DetailTextureEnabled&&this._isEnabled?((0,n.T)(this._texture,I,"DETAIL"),I.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):I.DETAIL=!1)}else I.DETAIL=!1}bindForSubMesh(I,g){if(!this._isEnabled)return;const b=this._material.isFrozen;I.useUbo&&b&&I.isSync||this._texture&&M.d.DetailTextureEnabled&&(I.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,n.u)(this._texture,I,"detail")),g.texturesEnabled&&this._texture&&M.d.DetailTextureEnabled&&I.setTexture("detailSampler",this._texture)}hasTexture(I){return this._texture===I}getActiveTextures(I){this._texture&&I.push(this._texture)}getAnimatables(I){this._texture&&this._texture.animations&&this._texture.animations.length>0&&I.push(this._texture)}dispose(I){var g;I&&(null===(g=this._texture)||void 0===g||g.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(I){I.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,e.d)([(0,z.v)("detailTexture"),(0,z.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"texture",void 0),(0,e.d)([(0,z.E)()],D.prototype,"diffuseBlendLevel",void 0),(0,e.d)([(0,z.E)()],D.prototype,"roughnessBlendLevel",void 0),(0,e.d)([(0,z.E)()],D.prototype,"bumpLevel",void 0),(0,e.d)([(0,z.E)(),(0,z.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"normalBlendMethod",void 0),(0,e.d)([(0,z.E)(),(0,z.c)("_markAllSubMeshesAsTexturesDirty")],D.prototype,"isEnabled",void 0)},12966:(I,g,b)=>{b.d(g,{e:()=>e});class e{constructor(I){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=I,I)for(const g in I)Object.prototype.hasOwnProperty.call(I,g)&&this._setDefaultValue(g)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let I=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||I,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const I of Object.keys(this))"_"!==I[0]&&this._keys.push(I);if(this._externalProperties)for(const I in this._externalProperties)-1===this._keys.indexOf(I)&&this._keys.push(I)}isEqual(I){if(this._keys.length!==I._keys.length)return!1;for(let g=0;g<this._keys.length;g++){const b=this._keys[g];if(this[b]!==I[b])return!1}return!0}cloneTo(I){this._keys.length!==I._keys.length&&(I._keys=this._keys.slice(0));for(let g=0;g<this._keys.length;g++){const b=this._keys[g];I[b]=this[b]}}reset(){for(const I of this._keys)this._setDefaultValue(I)}_setDefaultValue(I){var g,b,e,c;const z=(null===(g=this._externalProperties)||void 0===g||null===(b=g[I])||void 0===b?void 0:b.type)??typeof this[I],M=null===(e=this._externalProperties)||void 0===e||null===(c=e[I])||void 0===c?void 0:c.default;switch(z){case"number":this[I]=M??0;break;case"string":this[I]=M??"";break;default:this[I]=M??!1}}toString(){let I="";for(let g=0;g<this._keys.length;g++){const b=this._keys[g],e=this[b];switch(typeof e){case"number":case"string":I+="#define "+b+" "+e+"\n";break;default:e&&(I+="#define "+b+"\n")}}return I}}},12970:(I,g,b)=>{b.d(g,{d:()=>c});var e=b(12497);class c{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){this._DiffuseTextureEnabled!==I&&(this._DiffuseTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(I){this._BaseWeightTextureEnabled!==I&&(this._BaseWeightTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(I){this._BaseDiffuseRoughnessTextureEnabled!==I&&(this._BaseDiffuseRoughnessTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(I){this._DetailTextureEnabled!==I&&(this._DetailTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(I){this._DecalMapEnabled!==I&&(this._DecalMapEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(I){this._AmbientTextureEnabled!==I&&(this._AmbientTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(I){this._OpacityTextureEnabled!==I&&(this._OpacityTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){this._ReflectionTextureEnabled!==I&&(this._ReflectionTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){this._EmissiveTextureEnabled!==I&&(this._EmissiveTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(I){this._SpecularTextureEnabled!==I&&(this._SpecularTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(I){this._BumpTextureEnabled!==I&&(this._BumpTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(I){this._LightmapTextureEnabled!==I&&(this._LightmapTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(I){this._RefractionTextureEnabled!==I&&(this._RefractionTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){this._ColorGradingTextureEnabled!==I&&(this._ColorGradingTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(I){this._FresnelEnabled!==I&&(this._FresnelEnabled=I,e.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(I){this._ClearCoatTextureEnabled!==I&&(this._ClearCoatTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(I){this._ClearCoatBumpTextureEnabled!==I&&(this._ClearCoatBumpTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(I){this._ClearCoatTintTextureEnabled!==I&&(this._ClearCoatTintTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(I){this._SheenTextureEnabled!==I&&(this._SheenTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(I){this._AnisotropicTextureEnabled!==I&&(this._AnisotropicTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(I){this._ThicknessTextureEnabled!==I&&(this._ThicknessTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(I){this._RefractionIntensityTextureEnabled!==I&&(this._RefractionIntensityTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(I){this._TranslucencyIntensityTextureEnabled!==I&&(this._TranslucencyIntensityTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(I){this._TranslucencyColorTextureEnabled!==I&&(this._TranslucencyColorTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(I){this._IridescenceTextureEnabled!==I&&(this._IridescenceTextureEnabled=I,e.c.MarkAllMaterialsAsDirty(1))}}c._DiffuseTextureEnabled=!0,c._BaseWeightTextureEnabled=!0,c._BaseDiffuseRoughnessTextureEnabled=!0,c._DetailTextureEnabled=!0,c._DecalMapEnabled=!0,c._AmbientTextureEnabled=!0,c._OpacityTextureEnabled=!0,c._ReflectionTextureEnabled=!0,c._EmissiveTextureEnabled=!0,c._SpecularTextureEnabled=!0,c._BumpTextureEnabled=!0,c._LightmapTextureEnabled=!0,c._RefractionTextureEnabled=!0,c._ColorGradingTextureEnabled=!0,c._FresnelEnabled=!0,c._ClearCoatTextureEnabled=!0,c._ClearCoatBumpTextureEnabled=!0,c._ClearCoatTintTextureEnabled=!0,c._SheenTextureEnabled=!0,c._AnisotropicTextureEnabled=!0,c._ThicknessTextureEnabled=!0,c._RefractionIntensityTextureEnabled=!0,c._TranslucencyIntensityTextureEnabled=!0,c._TranslucencyColorTextureEnabled=!0,c._IridescenceTextureEnabled=!0},12985:(I,g,b)=>{b.d(g,{c:()=>z});var e,c=b(12590);!function(I){I[I.Zero=0]="Zero",I[I.One=1]="One",I[I.MaxViewZ=2]="MaxViewZ"}(e||(e={}));class z{static CreateConfiguration(I){return z._Configurations[I]={defines:{},previousWorldMatrices:{},previousViewProjection:c.Matrix.Zero(),currentViewProjection:c.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},z._Configurations[I]}static DeleteConfiguration(I){delete z._Configurations[I]}static GetConfiguration(I){return z._Configurations[I]}static AddUniformsAndSamplers(I,g){I.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(I,g){for(const b of g)if(b.Ib)for(const g of b.Ib)g._removeDrawWrapper(I)}static PrepareDefines(I,g,b){if(!b._arePrePassDirty)return;const e=z._Configurations[I];if(!e)return;b.PREPASS=!0,b.PREPASS_COLOR=!1,b.PREPASS_COLOR_INDEX=-1;let c=0;for(let M=0;M<z.GeometryTextureDescriptions.length;M++){const I=z.GeometryTextureDescriptions[M],g=I.define,J=I.defineIndex,o=e.defines[J];void 0!==o?(b[g]=!0,b[J]=o,c++):(b[g]=!1,delete b[J])}b.SCENE_MRT_COUNT=c,b.BONES_VELOCITY_ENABLED=g.useBones&&g.computeBonesUsingShaders&&g.skeleton&&!g.skeleton.isUsingTextureForMatrices&&-1===e.excludedSkinnedMesh.indexOf(g)}static Bind(I,g,b,e,c){const M=z._Configurations[I];if(!M)return;const J=b.EI(),o=J.getEngine();if(M.reverseCulling&&o.setStateCullFaceType(J._mirroredCameraPosition?c.cullBackFaces:!c.cullBackFaces),(void 0!==M.defines.PREPASS_VELOCITY_INDEX||void 0!==M.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(M.previousWorldMatrices[b.uniqueId]||(M.previousWorldMatrices[b.uniqueId]=e.clone()),M.previousViewProjection||(M.previousViewProjection=J.getTransformMatrix().clone(),M.currentViewProjection=J.getTransformMatrix().clone()),M.currentViewProjection.updateFlag!==J.getTransformMatrix().updateFlag?(M.lastUpdateFrameId=o.frameId,M.previousViewProjection.G(M.currentViewProjection),M.currentViewProjection.G(J.getTransformMatrix())):M.lastUpdateFrameId!==o.frameId&&(M.lastUpdateFrameId=o.frameId,M.previousViewProjection.G(M.currentViewProjection)),g.setMatrix("previousWorld",M.previousWorldMatrices[b.uniqueId]),g.setMatrix("previousViewProjection",M.previousViewProjection),M.previousWorldMatrices[b.uniqueId]=e.clone(),b.useBones&&b.computeBonesUsingShaders&&b.skeleton)){const I=b.skeleton;if(!I.isUsingTextureForMatrices||-1===g.getUniformIndex("boneTextureWidth")){const e=I.getTransformMatrices(b);e&&(M.previousBones[b.uniqueId]||(M.previousBones[b.uniqueId]=e.slice()),g.setMatrices("mPreviousBones",M.previousBones[b.uniqueId]),M.previousBones[b.uniqueId].set(e))}}}}z.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],z._Configurations={}},12980:(I,g,b)=>{b.d(g,{b:()=>f});var e=b(12577),c=b(12584),z=b(12901),M=b(12449),J=b(12474),o=b(12509);const n=new RegExp("^([gimus]+)!");class G{constructor(I){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=I,this._scene=I.EI(),this._engine=this._scene.getEngine()}_addPlugin(I){for(let e=0;e<this._plugins.length;++e)if(this._plugins[e].name===I.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!I.isCompatible(this._material.shaderLanguage))throw`The plugin "${I.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const g=I.getClassName();G._MaterialPluginClassToMainDefine[g]||(G._MaterialPluginClassToMainDefine[g]="MATERIALPLUGIN_"+ ++G._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(I,g)=>this._handlePluginEvent(I,g),this._plugins.push(I),this._plugins.sort(((I,g)=>I.priority-g.priority)),this._codeInjectionPoints={};const b={};b[G._MaterialPluginClassToMainDefine[g]]={type:"boolean",default:!0};for(const e of this._plugins)e.collectDefines(b),this._collectPointNames("vertex",e.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",e.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=b,!0}_activatePlugin(I){-1===this._activePlugins.indexOf(I)&&(this._activePlugins.push(I),this._activePlugins.sort(((I,g)=>I.priority-g.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),I.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(I),this._activePluginsForExtraEvents.sort(((I,g)=>I.priority-g.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(I){for(let g=0;g<this._plugins.length;++g)if(this._plugins[g].name===I)return this._plugins[g];return null}_handlePluginEventIsReadyForSubMesh(I){let g=!0;for(const b of this._activePlugins)g=g&&b.isReadyForSubMesh(I.defines,this._scene,this._engine,I.subMesh);I.isReadyForSubMesh=g}_handlePluginEventPrepareDefinesBeforeAttributes(I){for(const g of this._activePlugins)g.prepareDefinesBeforeAttributes(I.defines,this._scene,I.mesh)}_handlePluginEventPrepareDefines(I){for(const g of this._activePlugins)g.prepareDefines(I.defines,this._scene,I.mesh)}_handlePluginEventHardBindForSubMesh(I){for(const g of this._activePluginsForExtraEvents)g.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventBindForSubMesh(I){for(const g of this._activePlugins)g.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,I.subMesh)}_handlePluginEventHasRenderTargetTextures(I){let g=!1;for(const b of this._activePluginsForExtraEvents)if(g=b.hasRenderTargetTextures(),g)break;I.hasRenderTargetTextures=g}_handlePluginEventFillRenderTargetTextures(I){for(const g of this._activePluginsForExtraEvents)g.fillRenderTargetTextures(I.renderTargets)}_handlePluginEvent(I,g){switch(I){case 512:{const I=g;for(const g of this._activePlugins)g.getActiveTextures(I.activeTextures);break}case 256:{const I=g;for(const g of this._activePlugins)g.getAnimatables(I.animatables);break}case 1024:{const I=g;let b=!1;for(const g of this._activePlugins)if(b=g.hasTexture(I.texture),b)break;I.hasTexture=b;break}case 2:{const I=g;for(const g of this._plugins)g.dispose(I.forceDisposeTextures);break}case 4:g.defineNames=this._defineNamesFromPlugins;break;case 128:{const I=g;for(const g of this._activePlugins)I.fallbackRank=g.addFallbacks(I.defines,I.fallbacks,I.fallbackRank),g.getAttributes(I.attributes,this._scene,I.mesh);this._uniformList.length>0&&I.uniforms.push(...this._uniformList),this._samplerList.length>0&&I.samplers.push(...this._samplerList),this._uboList.length>0&&I.uniformBuffersNames.push(...this._uboList),I.customCode=this._injectCustomCode(I,I.customCode);break}case 8:{const I=g;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const b=1===this._material.shaderLanguage;for(const g of this._plugins){const e=g.getUniforms(this._material.shaderLanguage);if(e){if(e.ubo)for(const g of e.ubo){if(g.size&&g.type){const e=g.arraySize??0;if(I.ubo.addUniform(g.name,g.size,e),b){let I;switch(g.type){case"mat4":I="mat4x4f";break;case"float":I="f32";break;default:I=`${g.type}f`}this._uboDeclaration+=e>0?`uniform ${g.name}: array<${I}, ${e}>;\n`:`uniform ${g.name}: ${I};\n`}else this._uboDeclaration+=`${g.type} ${g.name}${e>0?`[${e}]`:""};\n`}this._uniformList.push(g.name)}e.vertex&&(this._vertexDeclaration+=e.vertex+"\n"),e.fragment&&(this._fragmentDeclaration+=e.fragment+"\n")}g.getSamplers(this._samplerList),g.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(I,g){if(g)for(const b in g)this._codeInjectionPoints[I]||(this._codeInjectionPoints[I]={}),this._codeInjectionPoints[I][b]=!0}_injectCustomCode(I,g){return(b,e)=>{var c;g&&(e=g(b,e)),this._uboDeclaration&&(e=e.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(e=e.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(e=e.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const z=null===(c=this._codeInjectionPoints)||void 0===c?void 0:c[b];if(!z)return e;let M=null;for(let g in z){let c="";for(const e of this._activePlugins){var G;let z=null===(G=e.getCustomCode(b,this._material.shaderLanguage))||void 0===G?void 0:G[g];if(z){if(e.resolveIncludes){if(null===M){const g=0;M={defines:[],indexParameters:I.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:o.c.GetShadersRepository(g),includesShadersStore:o.c.GetIncludesShadersStore(g),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Fg:this._engine.Fg,processCodeAfterIncludes:void 0}}M.isFragment="fragment"===b,(0,J.h)(z,M,(I=>z=I))}c+=z+"\n"}}if(c.length>0)if("!"===g.charAt(0)){g=g.substring(1);let I="g";if("!"===g.charAt(0))I="",g=g.substring(1);else{const b=n.exec(g);b&&b.length>=2&&(I=b[1],g=g.substring(I.length+1))}I.indexOf("g")<0&&(I+="g");const b=e,z=new RegExp(g,I);let M=z.exec(b);for(;null!==M;){let I=c;for(let g=0;g<M.length;++g)I=I.replace("$"+g,M[g]);e=e.replace(M[0],I),M=z.exec(b)}}else{const I="#define "+g;e=e.replace(I,"\n"+c+"\n"+I)}}return e}}}G._MaterialPluginClassToMainDefine={},G._MaterialPluginCounter=0,M.b.OnEnginesDisposedObservable.add((()=>{Z()}));const D=[];let p=!1,x=null;function Z(){D.length=0,p=!1,z.b.OnEventObservable.remove(x),x=null}var k=b(12622),S=b(12558);class f{isCompatible(I){return 0===I}_enable(I){I&&this._pluginManager._activatePlugin(this)}constructor(I,g,b,e){let c=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],M=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=I,this.name=g,this.priority=b,this.resolveIncludes=M,I.pluginManager||(I.pluginManager=new G(I),I.Og.add((()=>{I.pluginManager=void 0}))),this._pluginDefineNames=e,this._pluginManager=I.pluginManager,c&&this._pluginManager._addPlugin(this),z&&this._enable(!0),this.markAllDefinesAsDirty=I._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(I,g,b,e){return!0}hardBindForSubMesh(I,g,b,e){}bindForSubMesh(I,g,b,e){}dispose(I){}getCustomCode(I){return null}collectDefines(I){if(this._pluginDefineNames)for(const g of Object.keys(this._pluginDefineNames)){if("_"===g[0])continue;const b=typeof this._pluginDefineNames[g];I[g]={type:"number"===b?"number":"string"===b?"string":"boolean"===b?"boolean":"object",default:this._pluginDefineNames[g]}}}prepareDefinesBeforeAttributes(I,g,b){}prepareDefines(I,g,b){}hasTexture(I){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(I){}getActiveTextures(I){}getAnimatables(I){}addFallbacks(I,g,b){return b}getSamplers(I){}getAttributes(I,g,b){}getUniformBuffersNames(I){}getUniforms(){return{}}copyTo(I){k.b.Clone((()=>I),this)}serialize(){return k.b.Serialize(this)}parse(I,g,b){k.b.Parse((()=>this),I,g,b)}}(0,e.d)([(0,c.E)()],f.prototype,"name",void 0),(0,e.d)([(0,c.E)()],f.prototype,"priority",void 0),(0,e.d)([(0,c.E)()],f.prototype,"resolveIncludes",void 0),(0,e.d)([(0,c.E)()],f.prototype,"registerForExtraEvents",void 0),(0,S.g)("BABYLON.MaterialPluginBase",f)},12963:(I,g,b)=>{b.d(g,{e:()=>e});class e{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(I){I.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(I){}bindForSubMesh(I,g,b,e,c){if(g.prePassRenderer&&g.prePassRenderer.enabled&&g.prePassRenderer.currentRTisSceneRT&&(-1!==g.prePassRenderer.getIndex(2)||-1!==g.prePassRenderer.getIndex(11))){this.previousWorldMatrices[b.uniqueId]||(this.previousWorldMatrices[b.uniqueId]=e.clone()),this.previousViewProjection||(this.previousViewProjection=g.getTransformMatrix().clone(),this.currentViewProjection=g.getTransformMatrix().clone());const c=g.getEngine();this.currentViewProjection.updateFlag!==g.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=c.frameId,this.previousViewProjection.G(this.currentViewProjection),this.currentViewProjection.G(g.getTransformMatrix())):this._lastUpdateFrameId!==c.frameId&&(this._lastUpdateFrameId=c.frameId,this.previousViewProjection.G(this.currentViewProjection)),I.setMatrix("previousWorld",this.previousWorldMatrices[b.uniqueId]),I.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[b.uniqueId]=e.clone()}}}},12954:(I,g,b)=>{b.d(g,{Rg:()=>s});var e=b(12577),c=b(12584),z=b(12682),M=b(12814),J=b(12637),o=b(12659),n=b(12963),G=b(12823),D=b(12901),p=b(12966),x=b(12899),Z=b(12572),k=b(12558),S=b(12970),f=b(12892),V=b(12978),a=b(12952),v=b(12943),X=b(12622),R=b(12985);const E={effect:null,subMesh:null};class mI extends p.e{constructor(I){super(I),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(I){const g=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const b of g)this[b]=b===I}}class s extends x.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(I){this._attachImageProcessingConfiguration(I),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(I){I!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=I||this.EI().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(I){this.imageProcessingConfiguration.colorCurvesEnabled=I}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(I){this.imageProcessingConfiguration.colorGradingEnabled=I}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(I){this._imageProcessingConfiguration.toneMappingEnabled=I}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(I){this._imageProcessingConfiguration.exposure=I}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(I){this._imageProcessingConfiguration.contrast=I}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(I){this._imageProcessingConfiguration.colorGradingTexture=I}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(I){this._imageProcessingConfiguration.colorCurves=I}get canRenderToMRT(){return!0}constructor(I,g){super(I,g,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||s.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new J.Eg(0,0,0),this.diffuseColor=new J.Eg(1,1,1),this.specularColor=new J.Eg(1,1,1),this.emissiveColor=new J.Eg(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new z.i(16),this._globalAmbientColor=new J.Eg(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new V.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new n.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(s.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(s.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Rg"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===D.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.eb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==D.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.eb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(I,g){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const c=g._drawWrapper;if(c.effect&&this.isFrozen&&c._wasPreviouslyReady&&c._wasPreviouslyUsingInstances===e)return!0;g.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),g.materialDefines=new mI(this._eventInfo.defineNames));const z=this.EI(),M=g.materialDefines;if(this._isReadyForSubMesh(g))return!0;const J=z.getEngine();M._needNormals=(0,v.R)(z,I,M,!0,this._maxSimultaneousLights,this._disableLighting),(0,v.W)(z,M);const D=this.needAlphaBlendingForMesh(I)&&this.EI().useOrderIndependentTransparency;if((0,v.Z)(z,M,this.canRenderToMRT&&!D),(0,v.Y)(z,M,D),R.c.PrepareDefines(J.currentRenderPassId,I,M),M._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,M._needUVs=!1;for(let I=1;I<=6;++I)M["MAINUV"+I]=!1;if(z.texturesEnabled){if(M.DIFFUSEDIRECTUV=0,M.BUMPDIRECTUV=0,M.AMBIENTDIRECTUV=0,M.OPACITYDIRECTUV=0,M.EMISSIVEDIRECTUV=0,M.SPECULARDIRECTUV=0,M.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&s.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._diffuseTexture,M,"DIFFUSE")}else M.DIFFUSE=!1;if(this._ambientTexture&&s.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._ambientTexture,M,"AMBIENT")}else M.AMBIENT=!1;if(this._opacityTexture&&s.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._opacityTexture,M,"OPACITY"),M.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else M.OPACITY=!1;if(this._reflectionTexture&&s.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(M._needNormals=!0,M.REFLECTION=!0,M.ROUGHNESS=this._roughness>0,M.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,M.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Z.b.INVCUBIC_MODE,M.REFLECTIONMAP_3D=this._reflectionTexture.isCube,M.REFLECTIONMAP_OPPOSITEZ=M.REFLECTIONMAP_3D&&this.EI().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,M.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Z.b.EXPLICIT_MODE:M.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Z.b.PLANAR_MODE:M.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Z.b.PROJECTION_MODE:M.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Z.b.SKYBOX_MODE:M.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Z.b.SPHERICAL_MODE:M.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Z.b.EQUIRECTANGULAR_MODE:M.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Z.b.FIXED_EQUIRECTANGULAR_MODE:M.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Z.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:M.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Z.b.CUBIC_MODE:case Z.b.INVCUBIC_MODE:default:M.setReflectionMode("REFLECTIONMAP_CUBIC")}M.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else M.REFLECTION=!1,M.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&s.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._emissiveTexture,M,"EMISSIVE")}else M.EMISSIVE=!1;if(this._lightmapTexture&&s.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._lightmapTexture,M,"LIGHTMAP"),M.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,M.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else M.LIGHTMAP=!1;if(this._specularTexture&&s.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,v.T)(this._specularTexture,M,"SPECULAR"),M.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else M.SPECULAR=!1;if(z.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&s.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,v.T)(this._bumpTexture,M,"BUMP"),M.PARALLAX=this._useParallax,M.PARALLAX_RHS=z.useRightHandedSystem,M.PARALLAXOCCLUSION=this._useParallaxOcclusion,M.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else M.BUMP=!1,M.PARALLAX=!1,M.PARALLAX_RHS=!1,M.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&s.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;M._needUVs=!0,M.REFRACTION=!0,M.REFRACTIONMAP_3D=this._refractionTexture.isCube,M.RGBDREFRACTION=this._refractionTexture.isRGBD,M.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else M.REFRACTION=!1;M.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else M.DIFFUSE=!1,M.AMBIENT=!1,M.OPACITY=!1,M.REFLECTION=!1,M.EMISSIVE=!1,M.LIGHTMAP=!1,M.BUMP=!1,M.REFRACTION=!1;M.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),M.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,M.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,M.SPECULAROVERALPHA=this._useSpecularOverAlpha,M.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,M.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,M.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(I)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=M,this._eventInfo.subMesh=g,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(M._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(M),M.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,M.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(M._areFresnelDirty&&(s.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(M.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,M.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,M.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,M.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,M.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,M.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,M._needNormals=!0,M.FRESNEL=!0):M.FRESNEL=!1),M.AREALIGHTUSED)for(let b=0;b<I.lightSources.length;b++)if(!I.lightSources[b]._isReady())return!1;(0,v.V)(I,z,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(I),M,this._applyDecalMapAfterDetailMap),(0,v.N)(z,J,this,M,e,null,g.getRenderingMesh().hasThinInstances),this._eventInfo.defines=M,this._eventInfo.mesh=I,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,v.J)(I,M,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let p=!1;if(M.isDirty){const e=M._areLightsDisposed;M.markAsProcessed();const c=new f.e;M.REFLECTION&&c.addFallback(0,"REFLECTION"),M.SPECULAR&&c.addFallback(0,"SPECULAR"),M.BUMP&&c.addFallback(0,"BUMP"),M.PARALLAX&&c.addFallback(1,"PARALLAX"),M.PARALLAX_RHS&&c.addFallback(1,"PARALLAX_RHS"),M.PARALLAXOCCLUSION&&c.addFallback(0,"PARALLAXOCCLUSION"),M.SPECULAROVERALPHA&&c.addFallback(0,"SPECULAROVERALPHA"),M.FOG&&c.addFallback(1,"FOG"),M.POINTSIZE&&c.addFallback(0,"POINTSIZE"),M.LOGARITHMICDEPTH&&c.addFallback(0,"LOGARITHMICDEPTH"),(0,v.x)(M,c,this._maxSimultaneousLights),M.SPECULARTERM&&c.addFallback(0,"SPECULARTERM"),M.DIFFUSEFRESNEL&&c.addFallback(1,"DIFFUSEFRESNEL"),M.OPACITYFRESNEL&&c.addFallback(2,"OPACITYFRESNEL"),M.REFLECTIONFRESNEL&&c.addFallback(3,"REFLECTIONFRESNEL"),M.EMISSIVEFRESNEL&&c.addFallback(4,"EMISSIVEFRESNEL"),M.FRESNEL&&c.addFallback(4,"FRESNEL"),M.MULTIVIEW&&c.addFallback(0,"MULTIVIEW");const D=[o.f.PositionKind];M.NORMAL&&D.push(o.f.NormalKind),M.TANGENT&&D.push(o.f.TangentKind);for(let I=1;I<=6;++I)M["UV"+I]&&D.push(`uv${1===I?"":I}`);M.VERTEXCOLOR&&D.push(o.f.ColorKind),(0,v.A)(D,I,M,c),(0,v.B)(D,M),(0,v.F)(D,I,M),(0,v.y)(D,I,M);let x="default";const Z=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],k=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],S=["Material","Scene","Mesh"],V={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:M.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=c,this._eventInfo.fallbackRank=0,this._eventInfo.defines=M,this._eventInfo.uniforms=Z,this._eventInfo.attributes=D,this._eventInfo.samplers=k,this._eventInfo.uniformBuffersNames=S,this._eventInfo.customCode=void 0,this._eventInfo.mesh=I,this._eventInfo.indexParameters=V,this._callbackPluginEventGeneric(128,this._eventInfo),R.c.AddUniformsAndSamplers(Z,k),n.e.AddUniforms(Z),n.e.AddSamplers(k),G.e&&(G.e.PrepareUniforms(Z,M),G.e.PrepareSamplers(k,M)),(0,v._)({uniformsNames:Z,uniformBuffersNames:S,samplers:k,defines:M,maxSimultaneousLights:this._maxSimultaneousLights}),(0,a.b)(Z);const X={};this.customShaderNameResolve&&(x=this.customShaderNameResolve(x,Z,S,k,M,D,X));const mI=M.toString(),s=g.effect;let F=z.getEngine().createEffect(x,{attributes:D,uniformsNames:Z,uniformBuffersNames:S,samplers:k,defines:mI,fallbacks:c,onCompiled:this.onCompiled,onError:this.onError,indexParameters:V,processFinalCode:X.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:M.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([b.e(41),b.e(64)]).then(b.bind(b,15109)),Promise.all([b.e(39),b.e(65)]).then(b.bind(b,15252))]):await Promise.all([Promise.all([b.e(34),b.e(67)]).then(b.bind(b,15324)),Promise.all([b.e(33),b.e(68)]).then(b.bind(b,15472))]),this._shadersLoaded=!0}},J);if(this._eventInfo.customCode=void 0,F)if(this._onEffectCreatedObservable&&(E.effect=F,E.subMesh=g,this._onEffectCreatedObservable.notifyObservers(E)),this.allowShaderHotSwapping&&s&&!F.isReady()){if(F=s,M.markAsUnprocessed(),p=this.isFrozen,e)return M._areLightsDisposed=!0,!1}else z.resetCachedMaterial(),g.setEffect(F,M,this._materialContext)}return!(!g.effect||!g.effect.isReady())&&(M._renderId=z.getRenderId(),c._wasPreviouslyReady=!p,c._wasPreviouslyUsingInstances=e,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const I=this._uniformBuffer;I.addUniform("diffuseLeftColor",4),I.addUniform("diffuseRightColor",4),I.addUniform("opacityParts",4),I.addUniform("reflectionLeftColor",4),I.addUniform("reflectionRightColor",4),I.addUniform("refractionLeftColor",4),I.addUniform("refractionRightColor",4),I.addUniform("emissiveLeftColor",4),I.addUniform("emissiveRightColor",4),I.addUniform("vDiffuseInfos",2),I.addUniform("vAmbientInfos",2),I.addUniform("vOpacityInfos",2),I.addUniform("vReflectionInfos",2),I.addUniform("vReflectionPosition",3),I.addUniform("vReflectionSize",3),I.addUniform("vEmissiveInfos",2),I.addUniform("vLightmapInfos",2),I.addUniform("vSpecularInfos",2),I.addUniform("vBumpInfos",3),I.addUniform("diffuseMatrix",16),I.addUniform("ambientMatrix",16),I.addUniform("opacityMatrix",16),I.addUniform("reflectionMatrix",16),I.addUniform("emissiveMatrix",16),I.addUniform("lightmapMatrix",16),I.addUniform("specularMatrix",16),I.addUniform("bumpMatrix",16),I.addUniform("vTangentSpaceParams",2),I.addUniform("pointSize",1),I.addUniform("alphaCutOff",1),I.addUniform("refractionMatrix",16),I.addUniform("vRefractionInfos",4),I.addUniform("vRefractionPosition",3),I.addUniform("vRefractionSize",3),I.addUniform("vSpecularColor",4),I.addUniform("vEmissiveColor",3),I.addUniform("vDiffuseColor",4),I.addUniform("vAmbientColor",3),I.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(I,g,b){const e=this.EI(),c=b.materialDefines;if(!c)return;const z=b.effect;if(!z)return;this._activeEffect=z,g.getMeshUniformBuffer().bindToEffect(z,"Mesh"),g.transferToEffect(I),this._uniformBuffer.bindToEffect(z,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,e,g,I,this.isFrozen),R.c.Bind(e.getEngine().currentRenderPassId,this._activeEffect,g,I,this);const o=e.activeCamera;o?this._uniformBuffer.updateFloat4("cameraInfo",o.cb,o.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=b,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),c.OBJECTSPACE_NORMALMAP&&(I.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const n=this._mustRebind(e,z,b,g.visibility);(0,v.b)(g,z);const G=this._uniformBuffer;if(n){if(this.bindViewProjection(z),!G.useUbo||!this.isFrozen||!G.isSync||b._drawWrapper._forceRebindOnNextCall){if(s.FresnelEnabled&&c.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(G.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),G.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&G.updateColor4("opacityParts",new J.Eg(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(G.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),G.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(G.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),G.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(G.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),G.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),e.texturesEnabled){if(this._diffuseTexture&&s.DiffuseTextureEnabled&&(G.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,v.u)(this._diffuseTexture,G,"diffuse")),this._ambientTexture&&s.AmbientTextureEnabled&&(G.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,v.u)(this._ambientTexture,G,"ambient")),this._opacityTexture&&s.OpacityTextureEnabled&&(G.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,v.u)(this._opacityTexture,G,"opacity")),this._hasAlphaChannel()&&G.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&s.ReflectionTextureEnabled){if(G.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),G.zb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const I=this._reflectionTexture;G.updateVector3("vReflectionPosition",I.boundingBoxPosition),G.updateVector3("vReflectionSize",I.boundingBoxSize)}}else G.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&s.EmissiveTextureEnabled&&(G.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,v.u)(this._emissiveTexture,G,"emissive")),this._lightmapTexture&&s.LightmapTextureEnabled&&(G.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,v.u)(this._lightmapTexture,G,"lightmap")),this._specularTexture&&s.SpecularTextureEnabled&&(G.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,v.u)(this._specularTexture,G,"specular")),this._bumpTexture&&e.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&(G.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,v.u)(this._bumpTexture,G,"bump"),e._mirroredCameraPosition?G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):G.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&s.RefractionTextureEnabled){let I=1;if(this._refractionTexture.isCube||(G.zb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(I=this._refractionTexture.depth)),G.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,I,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const I=this._refractionTexture;G.updateVector3("vRefractionPosition",I.boundingBoxPosition),G.updateVector3("vRefractionSize",I.boundingBoxSize)}}}this.pointsCloud&&G.updateFloat("pointSize",this.pointSize),G.updateColor4("vSpecularColor",this.specularColor,this.specularPower),G.updateColor3("vEmissiveColor",s.EmissiveTextureEnabled?this.emissiveColor:J.Eg.BlackReadOnly),G.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),e.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),G.updateColor3("vAmbientColor",this._globalAmbientColor)}e.texturesEnabled&&(this._diffuseTexture&&s.DiffuseTextureEnabled&&z.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&s.AmbientTextureEnabled&&z.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&s.OpacityTextureEnabled&&z.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&s.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?z.setTexture("reflectionCubeSampler",this._reflectionTexture):z.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&s.EmissiveTextureEnabled&&z.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&s.LightmapTextureEnabled&&z.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&s.SpecularTextureEnabled&&z.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&e.getEngine().getCaps().standardDerivatives&&s.BumpTextureEnabled&&z.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&s.RefractionTextureEnabled&&(this._refractionTexture.isCube?z.setTexture("refractionCubeSampler",this._refractionTexture):z.setTexture("refraction2DSampler",this._refractionTexture))),this.EI().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(g)&&this.EI().depthPeelingRenderer.bind(z),this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,a.f)(z,this,e),this.bindEyePosition(z)}else e.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(n||!this.isFrozen){var D;if(e.lightsEnabled&&!this._disableLighting&&(0,v.g)(e,g,z,c,this._maxSimultaneousLights),(e.fogEnabled&&g.applyFog&&e.fogMode!==M.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||g.receiveShadows||c.PREPASS)&&this.bindView(z),(0,v.d)(e,g,z),c.NUM_MORPH_INFLUENCERS&&(0,v.n)(g,z),c.BAKED_VERTEX_ANIMATION_TEXTURE)null===(D=g.bakedVertexAnimationManager)||void 0===D||D.bind(z,c.INSTANCES);this.useLogarithmicDepth&&(0,v.j)(c,z,e),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(g,this._activeEffect,b),G.update()}getAnimatables(){const I=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&I.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&I.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&I.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&I.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&I.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&I.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&I.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&I.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&I.push(this._refractionTexture),I}getActiveTextures(){const I=super.getActiveTextures();return this._diffuseTexture&&I.push(this._diffuseTexture),this._ambientTexture&&I.push(this._ambientTexture),this._opacityTexture&&I.push(this._opacityTexture),this._reflectionTexture&&I.push(this._reflectionTexture),this._emissiveTexture&&I.push(this._emissiveTexture),this._specularTexture&&I.push(this._specularTexture),this._bumpTexture&&I.push(this._bumpTexture),this._lightmapTexture&&I.push(this._lightmapTexture),this._refractionTexture&&I.push(this._refractionTexture),I}hasTexture(I){return!!super.hasTexture(I)||(this._diffuseTexture===I||(this._ambientTexture===I||(this._opacityTexture===I||(this._reflectionTexture===I||(this._emissiveTexture===I||(this._specularTexture===I||(this._bumpTexture===I||(this._lightmapTexture===I||this._refractionTexture===I))))))))}dispose(I,g){var b,e,c,z,M,J,o,n,G;g&&(null===(b=this._diffuseTexture)||void 0===b||b.dispose(),null===(e=this._ambientTexture)||void 0===e||e.dispose(),null===(c=this._opacityTexture)||void 0===c||c.dispose(),null===(z=this._reflectionTexture)||void 0===z||z.dispose(),null===(M=this._emissiveTexture)||void 0===M||M.dispose(),null===(J=this._specularTexture)||void 0===J||J.dispose(),null===(o=this._bumpTexture)||void 0===o||o.dispose(),null===(n=this._lightmapTexture)||void 0===n||n.dispose(),null===(G=this._refractionTexture)||void 0===G||G.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(I,g)}clone(I){let g=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const e=X.b.Clone((()=>new s(I,this.EI())),this,{cloneTexturesOnlyOnce:g});return e.name=I,e.id=I,this.ig.copyTo(e.ig),this._clonePlugins(e,b),e}static Parse(I,g,b){const e=X.b.Parse((()=>new s(I.name,g)),I,g,b);return I.ig&&e.ig.parse(I.ig,g,b),D.b._ParsePlugins(I,e,g,b),e}static get DiffuseTextureEnabled(){return S.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(I){S.d.DiffuseTextureEnabled=I}static get DetailTextureEnabled(){return S.d.DetailTextureEnabled}static set DetailTextureEnabled(I){S.d.DetailTextureEnabled=I}static get AmbientTextureEnabled(){return S.d.AmbientTextureEnabled}static set AmbientTextureEnabled(I){S.d.AmbientTextureEnabled=I}static get OpacityTextureEnabled(){return S.d.OpacityTextureEnabled}static set OpacityTextureEnabled(I){S.d.OpacityTextureEnabled=I}static get ReflectionTextureEnabled(){return S.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(I){S.d.ReflectionTextureEnabled=I}static get EmissiveTextureEnabled(){return S.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(I){S.d.EmissiveTextureEnabled=I}static get SpecularTextureEnabled(){return S.d.SpecularTextureEnabled}static set SpecularTextureEnabled(I){S.d.SpecularTextureEnabled=I}static get BumpTextureEnabled(){return S.d.BumpTextureEnabled}static set BumpTextureEnabled(I){S.d.BumpTextureEnabled=I}static get LightmapTextureEnabled(){return S.d.LightmapTextureEnabled}static set LightmapTextureEnabled(I){S.d.LightmapTextureEnabled=I}static get RefractionTextureEnabled(){return S.d.RefractionTextureEnabled}static set RefractionTextureEnabled(I){S.d.RefractionTextureEnabled=I}static get ColorGradingTextureEnabled(){return S.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(I){S.d.ColorGradingTextureEnabled=I}static get FresnelEnabled(){return S.d.FresnelEnabled}static set FresnelEnabled(I){S.d.FresnelEnabled=I}}s.ForceGLSL=!1,(0,e.d)([(0,c.v)("diffuseTexture")],s.prototype,"_diffuseTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"diffuseTexture",void 0),(0,e.d)([(0,c.v)("ambientTexture")],s.prototype,"_ambientTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"ambientTexture",void 0),(0,e.d)([(0,c.v)("opacityTexture")],s.prototype,"_opacityTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"opacityTexture",void 0),(0,e.d)([(0,c.v)("reflectionTexture")],s.prototype,"_reflectionTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"reflectionTexture",void 0),(0,e.d)([(0,c.v)("emissiveTexture")],s.prototype,"_emissiveTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"emissiveTexture",void 0),(0,e.d)([(0,c.v)("specularTexture")],s.prototype,"_specularTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"specularTexture",void 0),(0,e.d)([(0,c.v)("bumpTexture")],s.prototype,"_bumpTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"bumpTexture",void 0),(0,e.d)([(0,c.v)("lightmapTexture")],s.prototype,"_lightmapTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"lightmapTexture",void 0),(0,e.d)([(0,c.v)("refractionTexture")],s.prototype,"_refractionTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"refractionTexture",void 0),(0,e.d)([(0,c.k)("ambient")],s.prototype,"ambientColor",void 0),(0,e.d)([(0,c.k)("diffuse")],s.prototype,"diffuseColor",void 0),(0,e.d)([(0,c.k)("specular")],s.prototype,"specularColor",void 0),(0,e.d)([(0,c.k)("emissive")],s.prototype,"emissiveColor",void 0),(0,e.d)([(0,c.E)()],s.prototype,"specularPower",void 0),(0,e.d)([(0,c.E)("useAlphaFromDiffuseTexture")],s.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],s.prototype,"useAlphaFromDiffuseTexture",void 0),(0,e.d)([(0,c.E)("useEmissiveAsIllumination")],s.prototype,"_useEmissiveAsIllumination",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useEmissiveAsIllumination",void 0),(0,e.d)([(0,c.E)("linkEmissiveWithDiffuse")],s.prototype,"_linkEmissiveWithDiffuse",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"linkEmissiveWithDiffuse",void 0),(0,e.d)([(0,c.E)("useSpecularOverAlpha")],s.prototype,"_useSpecularOverAlpha",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useSpecularOverAlpha",void 0),(0,e.d)([(0,c.E)("useReflectionOverAlpha")],s.prototype,"_useReflectionOverAlpha",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useReflectionOverAlpha",void 0),(0,e.d)([(0,c.E)("disableLighting")],s.prototype,"_disableLighting",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsLightsDirty")],s.prototype,"disableLighting",void 0),(0,e.d)([(0,c.E)("useObjectSpaceNormalMap")],s.prototype,"_useObjectSpaceNormalMap",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useObjectSpaceNormalMap",void 0),(0,e.d)([(0,c.E)("useParallax")],s.prototype,"_useParallax",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallax",void 0),(0,e.d)([(0,c.E)("useParallaxOcclusion")],s.prototype,"_useParallaxOcclusion",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useParallaxOcclusion",void 0),(0,e.d)([(0,c.E)()],s.prototype,"parallaxScaleBias",void 0),(0,e.d)([(0,c.E)("roughness")],s.prototype,"_roughness",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"roughness",void 0),(0,e.d)([(0,c.E)()],s.prototype,"indexOfRefraction",void 0),(0,e.d)([(0,c.E)()],s.prototype,"invertRefractionY",void 0),(0,e.d)([(0,c.E)()],s.prototype,"alphaCutOff",void 0),(0,e.d)([(0,c.E)("useLightmapAsShadowmap")],s.prototype,"_useLightmapAsShadowmap",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useLightmapAsShadowmap",void 0),(0,e.d)([(0,c.n)("diffuseFresnelParameters")],s.prototype,"_diffuseFresnelParameters",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"diffuseFresnelParameters",void 0),(0,e.d)([(0,c.n)("opacityFresnelParameters")],s.prototype,"_opacityFresnelParameters",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],s.prototype,"opacityFresnelParameters",void 0),(0,e.d)([(0,c.n)("reflectionFresnelParameters")],s.prototype,"_reflectionFresnelParameters",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"reflectionFresnelParameters",void 0),(0,e.d)([(0,c.n)("refractionFresnelParameters")],s.prototype,"_refractionFresnelParameters",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"refractionFresnelParameters",void 0),(0,e.d)([(0,c.n)("emissiveFresnelParameters")],s.prototype,"_emissiveFresnelParameters",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"emissiveFresnelParameters",void 0),(0,e.d)([(0,c.E)("useReflectionFresnelFromSpecular")],s.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsFresnelDirty")],s.prototype,"useReflectionFresnelFromSpecular",void 0),(0,e.d)([(0,c.E)("useGlossinessFromSpecularMapAlpha")],s.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,e.d)([(0,c.E)("maxSimultaneousLights")],s.prototype,"_maxSimultaneousLights",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsLightsDirty")],s.prototype,"maxSimultaneousLights",void 0),(0,e.d)([(0,c.E)("invertNormalMapX")],s.prototype,"_invertNormalMapX",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapX",void 0),(0,e.d)([(0,c.E)("invertNormalMapY")],s.prototype,"_invertNormalMapY",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"invertNormalMapY",void 0),(0,e.d)([(0,c.E)("twoSidedLighting")],s.prototype,"_twoSidedLighting",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsTexturesDirty")],s.prototype,"twoSidedLighting",void 0),(0,e.d)([(0,c.E)("applyDecalMapAfterDetailMap")],s.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,e.d)([(0,c.c)("_markAllSubMeshesAsMiscDirty")],s.prototype,"applyDecalMapAfterDetailMap",void 0),(0,k.g)("BABYLON.StandardMaterial",s),M.c.DefaultMaterialFactory=I=>new s("default material",I)}}]);