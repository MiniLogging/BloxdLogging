"use strict";(self.wy695la1oic=self.wy695la1oic||[]).push([[25],{11772:(S,v,D)=>{D.d(v,{e:()=>A});var z=D(11358),e=D(11699),N=D(11364),m=D(11766),B=D(11757),g=D(11776),E=D(11736);class h extends B.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class A extends g.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(S){let v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(S,"DetailMap",140,new h,v),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=e.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=S._dirtyCallbacks[1]}isReadyForSubMesh(S,v,D){return!this._isEnabled||!(S._areTexturesDirty&&v.texturesEnabled&&D.getCaps().standardDerivatives&&this._texture&&m.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(S,v){if(this._isEnabled){S.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const D=v.getEngine();S._areTexturesDirty&&(D.getCaps().standardDerivatives&&this._texture&&m.d.DetailTextureEnabled&&this._isEnabled?((0,E.Q)(this._texture,S,"DETAIL"),S.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):S.DETAIL=!1)}else S.DETAIL=!1}bindForSubMesh(S,v){if(!this._isEnabled)return;const D=this._material.isFrozen;S.useUbo&&D&&S.isSync||this._texture&&m.d.DetailTextureEnabled&&(S.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,E.s)(this._texture,S,"detail")),v.texturesEnabled&&this._texture&&m.d.DetailTextureEnabled&&S.setTexture("detailSampler",this._texture)}hasTexture(S){return this._texture===S}getActiveTextures(S){this._texture&&S.push(this._texture)}getAnimatables(S){this._texture&&this._texture.animations&&this._texture.animations.length>0&&S.push(this._texture)}dispose(S){var v;S&&(null===(v=this._texture)||void 0===v||v.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(S){S.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,z.b)([(0,N.D)("detailTexture"),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"texture",void 0),(0,z.b)([(0,N.L)()],A.prototype,"diffuseBlendLevel",void 0),(0,z.b)([(0,N.L)()],A.prototype,"roughnessBlendLevel",void 0),(0,z.b)([(0,N.L)()],A.prototype,"bumpLevel",void 0),(0,z.b)([(0,N.L)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"normalBlendMethod",void 0),(0,z.b)([(0,N.L)(),(0,N.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"isEnabled",void 0)},11757:(S,v,D)=>{D.d(v,{c:()=>z});class z{constructor(S){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=S,S)for(const v in S)Object.prototype.hasOwnProperty.call(S,v)&&this._setDefaultValue(v)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let S=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||S,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const S of Object.keys(this))"_"!==S[0]&&this._keys.push(S);if(this._externalProperties)for(const S in this._externalProperties)-1===this._keys.indexOf(S)&&this._keys.push(S)}isEqual(S){if(this._keys.length!==S._keys.length)return!1;for(let v=0;v<this._keys.length;v++){const D=this._keys[v];if(this[D]!==S[D])return!1}return!0}cloneTo(S){this._keys.length!==S._keys.length&&(S._keys=this._keys.slice(0));for(let v=0;v<this._keys.length;v++){const D=this._keys[v];S[D]=this[D]}}reset(){for(const S of this._keys)this._setDefaultValue(S)}_setDefaultValue(S){var v,D,z,e;const N=(null===(v=this._externalProperties)||void 0===v||null===(D=v[S])||void 0===D?void 0:D.type)??typeof this[S],m=null===(z=this._externalProperties)||void 0===z||null===(e=z[S])||void 0===e?void 0:e.default;switch(N){case"number":this[S]=m??0;break;case"string":this[S]=m??"";break;default:this[S]=m??!1}}toString(){let S="";for(let v=0;v<this._keys.length;v++){const D=this._keys[v],z=this[D];switch(typeof z){case"number":case"string":S+="#define "+D+" "+z+"\n";break;default:z&&(S+="#define "+D+"\n")}}return S}}},11766:(S,v,D)=>{D.d(v,{d:()=>e});var z=D(11269);class e{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(S){this._DiffuseTextureEnabled!==S&&(this._DiffuseTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(S){this._BaseWeightTextureEnabled!==S&&(this._BaseWeightTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(S){this._BaseDiffuseRoughnessTextureEnabled!==S&&(this._BaseDiffuseRoughnessTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(S){this._DetailTextureEnabled!==S&&(this._DetailTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(S){this._DecalMapEnabled!==S&&(this._DecalMapEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(S){this._AmbientTextureEnabled!==S&&(this._AmbientTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(S){this._OpacityTextureEnabled!==S&&(this._OpacityTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(S){this._ReflectionTextureEnabled!==S&&(this._ReflectionTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(S){this._EmissiveTextureEnabled!==S&&(this._EmissiveTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(S){this._SpecularTextureEnabled!==S&&(this._SpecularTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(S){this._BumpTextureEnabled!==S&&(this._BumpTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(S){this._LightmapTextureEnabled!==S&&(this._LightmapTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(S){this._RefractionTextureEnabled!==S&&(this._RefractionTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(S){this._ColorGradingTextureEnabled!==S&&(this._ColorGradingTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(S){this._FresnelEnabled!==S&&(this._FresnelEnabled=S,z.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(S){this._ClearCoatTextureEnabled!==S&&(this._ClearCoatTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(S){this._ClearCoatBumpTextureEnabled!==S&&(this._ClearCoatBumpTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(S){this._ClearCoatTintTextureEnabled!==S&&(this._ClearCoatTintTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(S){this._SheenTextureEnabled!==S&&(this._SheenTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(S){this._AnisotropicTextureEnabled!==S&&(this._AnisotropicTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(S){this._ThicknessTextureEnabled!==S&&(this._ThicknessTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(S){this._RefractionIntensityTextureEnabled!==S&&(this._RefractionIntensityTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(S){this._TranslucencyIntensityTextureEnabled!==S&&(this._TranslucencyIntensityTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(S){this._TranslucencyColorTextureEnabled!==S&&(this._TranslucencyColorTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(S){this._IridescenceTextureEnabled!==S&&(this._IridescenceTextureEnabled=S,z.d.MarkAllMaterialsAsDirty(1))}}e._DiffuseTextureEnabled=!0,e._BaseWeightTextureEnabled=!0,e._BaseDiffuseRoughnessTextureEnabled=!0,e._DetailTextureEnabled=!0,e._DecalMapEnabled=!0,e._AmbientTextureEnabled=!0,e._OpacityTextureEnabled=!0,e._ReflectionTextureEnabled=!0,e._EmissiveTextureEnabled=!0,e._SpecularTextureEnabled=!0,e._BumpTextureEnabled=!0,e._LightmapTextureEnabled=!0,e._RefractionTextureEnabled=!0,e._ColorGradingTextureEnabled=!0,e._FresnelEnabled=!0,e._ClearCoatTextureEnabled=!0,e._ClearCoatBumpTextureEnabled=!0,e._ClearCoatTintTextureEnabled=!0,e._SheenTextureEnabled=!0,e._AnisotropicTextureEnabled=!0,e._ThicknessTextureEnabled=!0,e._RefractionIntensityTextureEnabled=!0,e._TranslucencyIntensityTextureEnabled=!0,e._TranslucencyColorTextureEnabled=!0,e._IridescenceTextureEnabled=!0},11783:(S,v,D)=>{D.d(v,{c:()=>N});var z,e=D(11371);!function(S){S[S.Zero=0]="Zero",S[S.One=1]="One",S[S.MaxViewZ=2]="MaxViewZ"}(z||(z={}));class N{static CreateConfiguration(S){return N._Configurations[S]={defines:{},previousWorldMatrices:{},previousViewProjection:e.Matrix.Zero(),currentViewProjection:e.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},N._Configurations[S]}static DeleteConfiguration(S){delete N._Configurations[S]}static GetConfiguration(S){return N._Configurations[S]}static AddUniformsAndSamplers(S,v){S.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(S,v){for(const D of v)if(D.he)for(const v of D.he)v._removeDrawWrapper(S)}static PrepareDefines(S,v,D){if(!D._arePrePassDirty)return;const z=N._Configurations[S];if(!z)return;D.PREPASS=!0,D.PREPASS_COLOR=!1,D.PREPASS_COLOR_INDEX=-1;let e=0;for(let m=0;m<N.GeometryTextureDescriptions.length;m++){const S=N.GeometryTextureDescriptions[m],v=S.define,B=S.defineIndex,g=z.defines[B];void 0!==g?(D[v]=!0,D[B]=g,e++):(D[v]=!1,delete D[B])}D.SCENE_MRT_COUNT=e,D.BONES_VELOCITY_ENABLED=v.useBones&&v.computeBonesUsingShaders&&v.skeleton&&!v.skeleton.isUsingTextureForMatrices&&-1===z.excludedSkinnedMesh.indexOf(v)}static Bind(S,v,D,z,e){const m=N._Configurations[S];if(!m)return;const B=D.xS(),g=B.getEngine();if(m.reverseCulling&&g.setStateCullFaceType(B._mirroredCameraPosition?e.cullBackFaces:!e.cullBackFaces),(void 0!==m.defines.PREPASS_VELOCITY_INDEX||void 0!==m.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(m.previousWorldMatrices[D.uniqueId]||(m.previousWorldMatrices[D.uniqueId]=z.clone()),m.previousViewProjection||(m.previousViewProjection=B.getTransformMatrix().clone(),m.currentViewProjection=B.getTransformMatrix().clone()),m.currentViewProjection.updateFlag!==B.getTransformMatrix().updateFlag?(m.lastUpdateFrameId=g.frameId,m.previousViewProjection.N(m.currentViewProjection),m.currentViewProjection.N(B.getTransformMatrix())):m.lastUpdateFrameId!==g.frameId&&(m.lastUpdateFrameId=g.frameId,m.previousViewProjection.N(m.currentViewProjection)),v.setMatrix("previousWorld",m.previousWorldMatrices[D.uniqueId]),v.setMatrix("previousViewProjection",m.previousViewProjection),m.previousWorldMatrices[D.uniqueId]=z.clone(),D.useBones&&D.computeBonesUsingShaders&&D.skeleton)){const S=D.skeleton;if(!S.isUsingTextureForMatrices||-1===v.getUniformIndex("boneTextureWidth")){const z=S.getTransformMatrices(D);z&&(m.previousBones[D.uniqueId]||(m.previousBones[D.uniqueId]=z.slice()),v.setMatrices("mPreviousBones",m.previousBones[D.uniqueId]),m.previousBones[D.uniqueId].set(z))}}}}N.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],N._Configurations={}},11776:(S,v,D)=>{D.d(v,{b:()=>K});var z=D(11358),e=D(11364),N=D(11699),m=D(11222),B=D(11251),g=D(11280);const E=new RegExp("^([gimus]+)!");class h{constructor(S){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=S,this._scene=S.xS(),this._engine=this._scene.getEngine()}_addPlugin(S){for(let z=0;z<this._plugins.length;++z)if(this._plugins[z].name===S.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!S.isCompatible(this._material.shaderLanguage))throw`The plugin "${S.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const v=S.getClassName();h._MaterialPluginClassToMainDefine[v]||(h._MaterialPluginClassToMainDefine[v]="MATERIALPLUGIN_"+ ++h._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(S,v)=>this._handlePluginEvent(S,v),this._plugins.push(S),this._plugins.sort(((S,v)=>S.priority-v.priority)),this._codeInjectionPoints={};const D={};D[h._MaterialPluginClassToMainDefine[v]]={type:"boolean",default:!0};for(const z of this._plugins)z.collectDefines(D),this._collectPointNames("vertex",z.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",z.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=D,!0}_activatePlugin(S){-1===this._activePlugins.indexOf(S)&&(this._activePlugins.push(S),this._activePlugins.sort(((S,v)=>S.priority-v.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),S.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(S),this._activePluginsForExtraEvents.sort(((S,v)=>S.priority-v.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(S){for(let v=0;v<this._plugins.length;++v)if(this._plugins[v].name===S)return this._plugins[v];return null}_handlePluginEventIsReadyForSubMesh(S){let v=!0;for(const D of this._activePlugins)v=v&&D.isReadyForSubMesh(S.defines,this._scene,this._engine,S.subMesh);S.isReadyForSubMesh=v}_handlePluginEventPrepareDefinesBeforeAttributes(S){for(const v of this._activePlugins)v.prepareDefinesBeforeAttributes(S.defines,this._scene,S.mesh)}_handlePluginEventPrepareDefines(S){for(const v of this._activePlugins)v.prepareDefines(S.defines,this._scene,S.mesh)}_handlePluginEventHardBindForSubMesh(S){for(const v of this._activePluginsForExtraEvents)v.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,S.subMesh)}_handlePluginEventBindForSubMesh(S){for(const v of this._activePlugins)v.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,S.subMesh)}_handlePluginEventHasRenderTargetTextures(S){let v=!1;for(const D of this._activePluginsForExtraEvents)if(v=D.hasRenderTargetTextures(),v)break;S.hasRenderTargetTextures=v}_handlePluginEventFillRenderTargetTextures(S){for(const v of this._activePluginsForExtraEvents)v.fillRenderTargetTextures(S.renderTargets)}_handlePluginEvent(S,v){switch(S){case 512:{const S=v;for(const v of this._activePlugins)v.getActiveTextures(S.activeTextures);break}case 256:{const S=v;for(const v of this._activePlugins)v.getAnimatables(S.animatables);break}case 1024:{const S=v;let D=!1;for(const v of this._activePlugins)if(D=v.hasTexture(S.texture),D)break;S.hasTexture=D;break}case 2:{const S=v;for(const v of this._plugins)v.dispose(S.forceDisposeTextures);break}case 4:v.defineNames=this._defineNamesFromPlugins;break;case 128:{const S=v;for(const v of this._activePlugins)S.fallbackRank=v.addFallbacks(S.defines,S.fallbacks,S.fallbackRank),v.getAttributes(S.attributes,this._scene,S.mesh);this._uniformList.length>0&&S.uniforms.push(...this._uniformList),this._samplerList.length>0&&S.samplers.push(...this._samplerList),this._uboList.length>0&&S.uniformBuffersNames.push(...this._uboList),S.customCode=this._injectCustomCode(S,S.customCode);break}case 8:{const S=v;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const D=1===this._material.shaderLanguage;for(const v of this._plugins){const z=v.getUniforms(this._material.shaderLanguage);if(z){if(z.ubo)for(const v of z.ubo){if(v.size&&v.type){const z=v.arraySize??0;if(S.ubo.addUniform(v.name,v.size,z),D){let S;switch(v.type){case"mat4":S="mat4x4f";break;case"float":S="f32";break;default:S=`${v.type}f`}this._uboDeclaration+=z>0?`uniform ${v.name}: array<${S}, ${z}>;\n`:`uniform ${v.name}: ${S};\n`}else this._uboDeclaration+=`${v.type} ${v.name}${z>0?`[${z}]`:""};\n`}this._uniformList.push(v.name)}z.vertex&&(this._vertexDeclaration+=z.vertex+"\n"),z.fragment&&(this._fragmentDeclaration+=z.fragment+"\n")}v.getSamplers(this._samplerList),v.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(S,v){if(v)for(const D in v)this._codeInjectionPoints[S]||(this._codeInjectionPoints[S]={}),this._codeInjectionPoints[S][D]=!0}_injectCustomCode(S,v){return(D,z)=>{var e;v&&(z=v(D,z)),this._uboDeclaration&&(z=z.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(z=z.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(z=z.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const N=null===(e=this._codeInjectionPoints)||void 0===e?void 0:e[D];if(!N)return z;let m=null;for(let v in N){let e="";for(const z of this._activePlugins){var h;let N=null===(h=z.getCustomCode(D,this._material.shaderLanguage))||void 0===h?void 0:h[v];if(N){if(z.resolveIncludes){if(null===m){const v=0;m={defines:[],indexParameters:S.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:g.b.GetShadersRepository(v),includesShadersStore:g.b.GetIncludesShadersStore(v),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}m.isFragment="fragment"===D,(0,B.e)(N,m,(S=>N=S))}e+=N+"\n"}}if(e.length>0)if("!"===v.charAt(0)){v=v.substring(1);let S="g";if("!"===v.charAt(0))S="",v=v.substring(1);else{const D=E.exec(v);D&&D.length>=2&&(S=D[1],v=v.substring(S.length+1))}S.indexOf("g")<0&&(S+="g");const D=z,N=new RegExp(v,S);let m=N.exec(D);for(;null!==m;){let S=e;for(let v=0;v<m.length;++v)S=S.replace("$"+v,m[v]);z=z.replace(m[0],S),m=N.exec(D)}}else{const S="#define "+v;z=z.replace(S,"\n"+e+"\n"+S)}}return z}}}h._MaterialPluginClassToMainDefine={},h._MaterialPluginCounter=0,m.c.OnEnginesDisposedObservable.add((()=>{R()}));const A=[];let w=!1,n=null;function R(){A.length=0,w=!1,N.d.OnEventObservable.remove(n),n=null}var O=D(11415),I=D(11329);class K{isCompatible(S){return 0===S}_enable(S){S&&this._pluginManager._activatePlugin(this)}constructor(S,v,D,z){let e=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],N=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=S,this.name=v,this.priority=D,this.resolveIncludes=m,S.pluginManager||(S.pluginManager=new h(S),S.Se.add((()=>{S.pluginManager=void 0}))),this._pluginDefineNames=z,this._pluginManager=S.pluginManager,e&&this._pluginManager._addPlugin(this),N&&this._enable(!0),this.markAllDefinesAsDirty=S._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(S,v,D,z){return!0}hardBindForSubMesh(S,v,D,z){}bindForSubMesh(S,v,D,z){}dispose(S){}getCustomCode(S){return null}collectDefines(S){if(this._pluginDefineNames)for(const v of Object.keys(this._pluginDefineNames)){if("_"===v[0])continue;const D=typeof this._pluginDefineNames[v];S[v]={type:"number"===D?"number":"string"===D?"string":"boolean"===D?"boolean":"object",default:this._pluginDefineNames[v]}}}prepareDefinesBeforeAttributes(S,v,D){}prepareDefines(S,v,D){}hasTexture(S){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(S){}getActiveTextures(S){}getAnimatables(S){}addFallbacks(S,v,D){return D}getSamplers(S){}getAttributes(S,v,D){}getUniformBuffersNames(S){}getUniforms(){return{}}copyTo(S){O.b.Clone((()=>S),this)}serialize(){return O.b.Serialize(this)}parse(S,v,D){O.b.Parse((()=>this),S,v,D)}}(0,z.b)([(0,e.L)()],K.prototype,"name",void 0),(0,z.b)([(0,e.L)()],K.prototype,"priority",void 0),(0,z.b)([(0,e.L)()],K.prototype,"resolveIncludes",void 0),(0,z.b)([(0,e.L)()],K.prototype,"registerForExtraEvents",void 0),(0,I.f)("BABYLON.MaterialPluginBase",K)},11750:(S,v,D)=>{D.d(v,{b:()=>z});class z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(S){S.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(S){}bindForSubMesh(S,v,D,z,e){if(v.prePassRenderer&&v.prePassRenderer.enabled&&v.prePassRenderer.currentRTisSceneRT&&(-1!==v.prePassRenderer.getIndex(2)||-1!==v.prePassRenderer.getIndex(11))){this.previousWorldMatrices[D.uniqueId]||(this.previousWorldMatrices[D.uniqueId]=z.clone()),this.previousViewProjection||(this.previousViewProjection=v.getTransformMatrix().clone(),this.currentViewProjection=v.getTransformMatrix().clone());const e=v.getEngine();this.currentViewProjection.updateFlag!==v.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=e.frameId,this.previousViewProjection.N(this.currentViewProjection),this.currentViewProjection.N(v.getTransformMatrix())):this._lastUpdateFrameId!==e.frameId&&(this._lastUpdateFrameId=e.frameId,this.previousViewProjection.N(this.currentViewProjection)),S.setMatrix("previousWorld",this.previousWorldMatrices[D.uniqueId]),S.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[D.uniqueId]=z.clone()}}}},11746:(S,v,D)=>{D.d(v,{Kv:()=>p});var z=D(11358),e=D(11364),N=D(11483),m=D(11619),B=D(11425),g=D(11452),E=D(11750),h=D(11625),A=D(11699),w=D(11757),n=D(11692),R=D(11350),O=D(11329),I=D(11766),K=D(11687),q=D(11772),u=D(11738),s=D(11736),r=D(11415),d=D(11783);const x={effect:null,subMesh:null};class W extends w.c{constructor(S){super(S),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(S){const v=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const D of v)this[D]=D===S}}class p extends n.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(S){this._attachImageProcessingConfiguration(S),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(S){S!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=S||this.xS().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(S){this.imageProcessingConfiguration.colorCurvesEnabled=S}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(S){this.imageProcessingConfiguration.colorGradingEnabled=S}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(S){this._imageProcessingConfiguration.toneMappingEnabled=S}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(S){this._imageProcessingConfiguration.exposure=S}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(S){this._imageProcessingConfiguration.contrast=S}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(S){this._imageProcessingConfiguration.colorGradingTexture=S}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(S){this._imageProcessingConfiguration.colorCurves=S}get canRenderToMRT(){return!0}constructor(S,v){super(S,v,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||p.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new B.qv(0,0,0),this.diffuseColor=new B.qv(1,1,1),this.specularColor=new B.qv(1,1,1),this.emissiveColor=new B.qv(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new N.f(16),this._globalAmbientColor=new B.qv(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new q.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new E.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(p.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(p.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Kv"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===A.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.de&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==A.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.de||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(S,v){let z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const e=v._drawWrapper;if(e.effect&&this.isFrozen&&e._wasPreviouslyReady&&e._wasPreviouslyUsingInstances===z)return!0;v.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),v.materialDefines=new W(this._eventInfo.defineNames));const N=this.xS(),m=v.materialDefines;if(this._isReadyForSubMesh(v))return!0;const B=N.getEngine();m._needNormals=(0,s.N)(N,S,m,!0,this._maxSimultaneousLights,this._disableLighting),(0,s.U)(N,m);const A=this.needAlphaBlendingForMesh(S)&&this.xS().useOrderIndependentTransparency;if((0,s.Y)(N,m,this.canRenderToMRT&&!A),(0,s.X)(N,m,A),d.c.PrepareDefines(B.currentRenderPassId,S,m),m._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,m._needUVs=!1;for(let S=1;S<=6;++S)m["MAINUV"+S]=!1;if(N.texturesEnabled){if(m.DIFFUSEDIRECTUV=0,m.BUMPDIRECTUV=0,m.AMBIENTDIRECTUV=0,m.OPACITYDIRECTUV=0,m.EMISSIVEDIRECTUV=0,m.SPECULARDIRECTUV=0,m.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&p.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._diffuseTexture,m,"DIFFUSE")}else m.DIFFUSE=!1;if(this._ambientTexture&&p.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._ambientTexture,m,"AMBIENT")}else m.AMBIENT=!1;if(this._opacityTexture&&p.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._opacityTexture,m,"OPACITY"),m.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else m.OPACITY=!1;if(this._reflectionTexture&&p.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(m._needNormals=!0,m.REFLECTION=!0,m.ROUGHNESS=this._roughness>0,m.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,m.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===R.d.INVCUBIC_MODE,m.REFLECTIONMAP_3D=this._reflectionTexture.isCube,m.REFLECTIONMAP_OPPOSITEZ=m.REFLECTIONMAP_3D&&this.xS().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,m.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case R.d.EXPLICIT_MODE:m.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case R.d.PLANAR_MODE:m.setReflectionMode("REFLECTIONMAP_PLANAR");break;case R.d.PROJECTION_MODE:m.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case R.d.SKYBOX_MODE:m.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case R.d.SPHERICAL_MODE:m.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case R.d.EQUIRECTANGULAR_MODE:m.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case R.d.FIXED_EQUIRECTANGULAR_MODE:m.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case R.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:m.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case R.d.CUBIC_MODE:case R.d.INVCUBIC_MODE:default:m.setReflectionMode("REFLECTIONMAP_CUBIC")}m.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else m.REFLECTION=!1,m.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&p.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._emissiveTexture,m,"EMISSIVE")}else m.EMISSIVE=!1;if(this._lightmapTexture&&p.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._lightmapTexture,m,"LIGHTMAP"),m.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,m.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else m.LIGHTMAP=!1;if(this._specularTexture&&p.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,s.Q)(this._specularTexture,m,"SPECULAR"),m.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else m.SPECULAR=!1;if(N.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&p.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,s.Q)(this._bumpTexture,m,"BUMP"),m.PARALLAX=this._useParallax,m.PARALLAX_RHS=N.useRightHandedSystem,m.PARALLAXOCCLUSION=this._useParallaxOcclusion,m.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else m.BUMP=!1,m.PARALLAX=!1,m.PARALLAX_RHS=!1,m.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&p.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;m._needUVs=!0,m.REFRACTION=!0,m.REFRACTIONMAP_3D=this._refractionTexture.isCube,m.RGBDREFRACTION=this._refractionTexture.isRGBD,m.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else m.REFRACTION=!1;m.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else m.DIFFUSE=!1,m.AMBIENT=!1,m.OPACITY=!1,m.REFLECTION=!1,m.EMISSIVE=!1,m.LIGHTMAP=!1,m.BUMP=!1,m.REFRACTION=!1;m.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),m.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,m.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,m.SPECULAROVERALPHA=this._useSpecularOverAlpha,m.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,m.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,m.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(S)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=m,this._eventInfo.subMesh=v,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(m._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(m),m.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,m.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(m._areFresnelDirty&&(p.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(m.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,m.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,m.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,m.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,m.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,m.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,m._needNormals=!0,m.FRESNEL=!0):m.FRESNEL=!1),m.AREALIGHTUSED)for(let D=0;D<S.lightSources.length;D++)if(!S.lightSources[D]._isReady())return!1;(0,s.S)(S,N,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(S),m,this._applyDecalMapAfterDetailMap),(0,s.L)(N,B,this,m,z,null,v.getRenderingMesh().hasThinInstances),this._eventInfo.defines=m,this._eventInfo.mesh=S,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,s.J)(S,m,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let w=!1;if(m.isDirty){const z=m._areLightsDisposed;m.markAsProcessed();const e=new K.d;m.REFLECTION&&e.addFallback(0,"REFLECTION"),m.SPECULAR&&e.addFallback(0,"SPECULAR"),m.BUMP&&e.addFallback(0,"BUMP"),m.PARALLAX&&e.addFallback(1,"PARALLAX"),m.PARALLAX_RHS&&e.addFallback(1,"PARALLAX_RHS"),m.PARALLAXOCCLUSION&&e.addFallback(0,"PARALLAXOCCLUSION"),m.SPECULAROVERALPHA&&e.addFallback(0,"SPECULAROVERALPHA"),m.FOG&&e.addFallback(1,"FOG"),m.POINTSIZE&&e.addFallback(0,"POINTSIZE"),m.LOGARITHMICDEPTH&&e.addFallback(0,"LOGARITHMICDEPTH"),(0,s.w)(m,e,this._maxSimultaneousLights),m.SPECULARTERM&&e.addFallback(0,"SPECULARTERM"),m.DIFFUSEFRESNEL&&e.addFallback(1,"DIFFUSEFRESNEL"),m.OPACITYFRESNEL&&e.addFallback(2,"OPACITYFRESNEL"),m.REFLECTIONFRESNEL&&e.addFallback(3,"REFLECTIONFRESNEL"),m.EMISSIVEFRESNEL&&e.addFallback(4,"EMISSIVEFRESNEL"),m.FRESNEL&&e.addFallback(4,"FRESNEL"),m.MULTIVIEW&&e.addFallback(0,"MULTIVIEW");const A=[g.d.PositionKind];m.NORMAL&&A.push(g.d.NormalKind),m.TANGENT&&A.push(g.d.TangentKind);for(let S=1;S<=6;++S)m["UV"+S]&&A.push(`uv${1===S?"":S}`);m.VERTEXCOLOR&&A.push(g.d.ColorKind),(0,s.B)(A,S,m,e),(0,s.D)(A,m),(0,s.G)(A,S,m),(0,s.z)(A,S,m);let n="default";const R=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],O=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],I=["Material","Scene","Mesh"],q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:m.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=e,this._eventInfo.fallbackRank=0,this._eventInfo.defines=m,this._eventInfo.uniforms=R,this._eventInfo.attributes=A,this._eventInfo.samplers=O,this._eventInfo.uniformBuffersNames=I,this._eventInfo.customCode=void 0,this._eventInfo.mesh=S,this._eventInfo.indexParameters=q,this._callbackPluginEventGeneric(128,this._eventInfo),d.c.AddUniformsAndSamplers(R,O),E.b.AddUniforms(R),E.b.AddSamplers(O),h.d&&(h.d.PrepareUniforms(R,m),h.d.PrepareSamplers(O,m)),(0,s.$)({uniformsNames:R,uniformBuffersNames:I,samplers:O,defines:m,maxSimultaneousLights:this._maxSimultaneousLights}),(0,u.d)(R);const r={};this.customShaderNameResolve&&(n=this.customShaderNameResolve(n,R,I,O,m,A,r));const W=m.toString(),p=v.effect;let b=N.getEngine().createEffect(n,{attributes:A,uniformsNames:R,uniformBuffersNames:I,samplers:O,defines:W,fallbacks:e,onCompiled:this.onCompiled,onError:this.onError,indexParameters:q,processFinalCode:r.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:m.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([D.e(41),D.e(64)]).then(D.bind(D,13950)),Promise.all([D.e(39),D.e(65)]).then(D.bind(D,14096))]):await Promise.all([Promise.all([D.e(34),D.e(67)]).then(D.bind(D,14180)),Promise.all([D.e(33),D.e(68)]).then(D.bind(D,14336))]),this._shadersLoaded=!0}},B);if(this._eventInfo.customCode=void 0,b)if(this._onEffectCreatedObservable&&(x.effect=b,x.subMesh=v,this._onEffectCreatedObservable.notifyObservers(x)),this.allowShaderHotSwapping&&p&&!b.isReady()){if(b=p,m.markAsUnprocessed(),w=this.isFrozen,z)return m._areLightsDisposed=!0,!1}else N.resetCachedMaterial(),v.setEffect(b,m,this._materialContext)}return!(!v.effect||!v.effect.isReady())&&(m._renderId=N.getRenderId(),e._wasPreviouslyReady=!w,e._wasPreviouslyUsingInstances=z,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const S=this._uniformBuffer;S.addUniform("diffuseLeftColor",4),S.addUniform("diffuseRightColor",4),S.addUniform("opacityParts",4),S.addUniform("reflectionLeftColor",4),S.addUniform("reflectionRightColor",4),S.addUniform("refractionLeftColor",4),S.addUniform("refractionRightColor",4),S.addUniform("emissiveLeftColor",4),S.addUniform("emissiveRightColor",4),S.addUniform("vDiffuseInfos",2),S.addUniform("vAmbientInfos",2),S.addUniform("vOpacityInfos",2),S.addUniform("vReflectionInfos",2),S.addUniform("vReflectionPosition",3),S.addUniform("vReflectionSize",3),S.addUniform("vEmissiveInfos",2),S.addUniform("vLightmapInfos",2),S.addUniform("vSpecularInfos",2),S.addUniform("vBumpInfos",3),S.addUniform("diffuseMatrix",16),S.addUniform("ambientMatrix",16),S.addUniform("opacityMatrix",16),S.addUniform("reflectionMatrix",16),S.addUniform("emissiveMatrix",16),S.addUniform("lightmapMatrix",16),S.addUniform("specularMatrix",16),S.addUniform("bumpMatrix",16),S.addUniform("vTangentSpaceParams",2),S.addUniform("pointSize",1),S.addUniform("alphaCutOff",1),S.addUniform("refractionMatrix",16),S.addUniform("vRefractionInfos",4),S.addUniform("vRefractionPosition",3),S.addUniform("vRefractionSize",3),S.addUniform("vSpecularColor",4),S.addUniform("vEmissiveColor",3),S.addUniform("vDiffuseColor",4),S.addUniform("vAmbientColor",3),S.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(S,v,D){const z=this.xS(),e=D.materialDefines;if(!e)return;const N=D.effect;if(!N)return;this._activeEffect=N,v.getMeshUniformBuffer().bindToEffect(N,"Mesh"),v.transferToEffect(S),this._uniformBuffer.bindToEffect(N,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,z,v,S,this.isFrozen),d.c.Bind(z.getEngine().currentRenderPassId,this._activeEffect,v,S,this);const g=z.activeCamera;g?this._uniformBuffer.updateFloat4("cameraInfo",g.xe,g.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=D,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),e.OBJECTSPACE_NORMALMAP&&(S.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const E=this._mustRebind(z,N,D,v.visibility);(0,s.e)(v,N);const h=this._uniformBuffer;if(E){if(this.bindViewProjection(N),!h.useUbo||!this.isFrozen||!h.isSync||D._drawWrapper._forceRebindOnNextCall){if(p.FresnelEnabled&&e.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new B.qv(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),z.texturesEnabled){if(this._diffuseTexture&&p.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,s.s)(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&p.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,s.s)(this._ambientTexture,h,"ambient")),this._opacityTexture&&p.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,s.s)(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&p.ReflectionTextureEnabled){if(h.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),h.pe("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const S=this._reflectionTexture;h.updateVector3("vReflectionPosition",S.boundingBoxPosition),h.updateVector3("vReflectionSize",S.boundingBoxSize)}}else h.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&p.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,s.s)(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&p.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,s.s)(this._lightmapTexture,h,"lightmap")),this._specularTexture&&p.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,s.s)(this._specularTexture,h,"specular")),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,s.s)(this._bumpTexture,h,"bump"),z._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&p.RefractionTextureEnabled){let S=1;if(this._refractionTexture.isCube||(h.pe("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(S=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,S,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const S=this._refractionTexture;h.updateVector3("vRefractionPosition",S.boundingBoxPosition),h.updateVector3("vRefractionSize",S.boundingBoxSize)}}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",p.EmissiveTextureEnabled?this.emissiveColor:B.qv.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),z.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}z.texturesEnabled&&(this._diffuseTexture&&p.DiffuseTextureEnabled&&N.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&p.AmbientTextureEnabled&&N.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&p.OpacityTextureEnabled&&N.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&p.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?N.setTexture("reflectionCubeSampler",this._reflectionTexture):N.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&p.EmissiveTextureEnabled&&N.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&p.LightmapTextureEnabled&&N.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&p.SpecularTextureEnabled&&N.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&p.BumpTextureEnabled&&N.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&p.RefractionTextureEnabled&&(this._refractionTexture.isCube?N.setTexture("refractionCubeSampler",this._refractionTexture):N.setTexture("refraction2DSampler",this._refractionTexture))),this.xS().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(v)&&this.xS().depthPeelingRenderer.bind(N),this._eventInfo.subMesh=D,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,u.e)(N,this,z),this.bindEyePosition(N)}else z.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(E||!this.isFrozen){var A;if(z.lightsEnabled&&!this._disableLighting&&(0,s.k)(z,v,N,e,this._maxSimultaneousLights),(z.fogEnabled&&v.applyFog&&z.fogMode!==m.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||v.receiveShadows||e.PREPASS)&&this.bindView(N),(0,s.h)(z,v,N),e.NUM_MORPH_INFLUENCERS&&(0,s.p)(v,N),e.BAKED_VERTEX_ANIMATION_TEXTURE)null===(A=v.bakedVertexAnimationManager)||void 0===A||A.bind(N,e.INSTANCES);this.useLogarithmicDepth&&(0,s.m)(e,N,z),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(v,this._activeEffect,D),h.update()}getAnimatables(){const S=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&S.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&S.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&S.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&S.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&S.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&S.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&S.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&S.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&S.push(this._refractionTexture),S}getActiveTextures(){const S=super.getActiveTextures();return this._diffuseTexture&&S.push(this._diffuseTexture),this._ambientTexture&&S.push(this._ambientTexture),this._opacityTexture&&S.push(this._opacityTexture),this._reflectionTexture&&S.push(this._reflectionTexture),this._emissiveTexture&&S.push(this._emissiveTexture),this._specularTexture&&S.push(this._specularTexture),this._bumpTexture&&S.push(this._bumpTexture),this._lightmapTexture&&S.push(this._lightmapTexture),this._refractionTexture&&S.push(this._refractionTexture),S}hasTexture(S){return!!super.hasTexture(S)||(this._diffuseTexture===S||(this._ambientTexture===S||(this._opacityTexture===S||(this._reflectionTexture===S||(this._emissiveTexture===S||(this._specularTexture===S||(this._bumpTexture===S||(this._lightmapTexture===S||this._refractionTexture===S))))))))}dispose(S,v){var D,z,e,N,m,B,g,E,h;v&&(null===(D=this._diffuseTexture)||void 0===D||D.dispose(),null===(z=this._ambientTexture)||void 0===z||z.dispose(),null===(e=this._opacityTexture)||void 0===e||e.dispose(),null===(N=this._reflectionTexture)||void 0===N||N.dispose(),null===(m=this._emissiveTexture)||void 0===m||m.dispose(),null===(B=this._specularTexture)||void 0===B||B.dispose(),null===(g=this._bumpTexture)||void 0===g||g.dispose(),null===(E=this._lightmapTexture)||void 0===E||E.dispose(),null===(h=this._refractionTexture)||void 0===h||h.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(S,v)}clone(S){let v=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],D=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const z=r.b.Clone((()=>new p(S,this.xS())),this,{cloneTexturesOnlyOnce:v});return z.name=S,z.id=S,this.stencil.copyTo(z.stencil),this._clonePlugins(z,D),z}static Parse(S,v,D){const z=r.b.Parse((()=>new p(S.name,v)),S,v,D);return S.stencil&&z.stencil.parse(S.stencil,v,D),A.d._ParsePlugins(S,z,v,D),z}static get DiffuseTextureEnabled(){return I.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(S){I.d.DiffuseTextureEnabled=S}static get DetailTextureEnabled(){return I.d.DetailTextureEnabled}static set DetailTextureEnabled(S){I.d.DetailTextureEnabled=S}static get AmbientTextureEnabled(){return I.d.AmbientTextureEnabled}static set AmbientTextureEnabled(S){I.d.AmbientTextureEnabled=S}static get OpacityTextureEnabled(){return I.d.OpacityTextureEnabled}static set OpacityTextureEnabled(S){I.d.OpacityTextureEnabled=S}static get ReflectionTextureEnabled(){return I.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(S){I.d.ReflectionTextureEnabled=S}static get EmissiveTextureEnabled(){return I.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(S){I.d.EmissiveTextureEnabled=S}static get SpecularTextureEnabled(){return I.d.SpecularTextureEnabled}static set SpecularTextureEnabled(S){I.d.SpecularTextureEnabled=S}static get BumpTextureEnabled(){return I.d.BumpTextureEnabled}static set BumpTextureEnabled(S){I.d.BumpTextureEnabled=S}static get LightmapTextureEnabled(){return I.d.LightmapTextureEnabled}static set LightmapTextureEnabled(S){I.d.LightmapTextureEnabled=S}static get RefractionTextureEnabled(){return I.d.RefractionTextureEnabled}static set RefractionTextureEnabled(S){I.d.RefractionTextureEnabled=S}static get ColorGradingTextureEnabled(){return I.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(S){I.d.ColorGradingTextureEnabled=S}static get FresnelEnabled(){return I.d.FresnelEnabled}static set FresnelEnabled(S){I.d.FresnelEnabled=S}}p.ForceGLSL=!1,(0,z.b)([(0,e.D)("diffuseTexture")],p.prototype,"_diffuseTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"diffuseTexture",void 0),(0,z.b)([(0,e.D)("ambientTexture")],p.prototype,"_ambientTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"ambientTexture",void 0),(0,z.b)([(0,e.D)("opacityTexture")],p.prototype,"_opacityTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"opacityTexture",void 0),(0,z.b)([(0,e.D)("reflectionTexture")],p.prototype,"_reflectionTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"reflectionTexture",void 0),(0,z.b)([(0,e.D)("emissiveTexture")],p.prototype,"_emissiveTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"emissiveTexture",void 0),(0,z.b)([(0,e.D)("specularTexture")],p.prototype,"_specularTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"specularTexture",void 0),(0,z.b)([(0,e.D)("bumpTexture")],p.prototype,"_bumpTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"bumpTexture",void 0),(0,z.b)([(0,e.D)("lightmapTexture")],p.prototype,"_lightmapTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"lightmapTexture",void 0),(0,z.b)([(0,e.D)("refractionTexture")],p.prototype,"_refractionTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"refractionTexture",void 0),(0,z.b)([(0,e.k)("ambient")],p.prototype,"ambientColor",void 0),(0,z.b)([(0,e.k)("diffuse")],p.prototype,"diffuseColor",void 0),(0,z.b)([(0,e.k)("specular")],p.prototype,"specularColor",void 0),(0,z.b)([(0,e.k)("emissive")],p.prototype,"emissiveColor",void 0),(0,z.b)([(0,e.L)()],p.prototype,"specularPower",void 0),(0,z.b)([(0,e.L)("useAlphaFromDiffuseTexture")],p.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],p.prototype,"useAlphaFromDiffuseTexture",void 0),(0,z.b)([(0,e.L)("useEmissiveAsIllumination")],p.prototype,"_useEmissiveAsIllumination",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useEmissiveAsIllumination",void 0),(0,z.b)([(0,e.L)("linkEmissiveWithDiffuse")],p.prototype,"_linkEmissiveWithDiffuse",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"linkEmissiveWithDiffuse",void 0),(0,z.b)([(0,e.L)("useSpecularOverAlpha")],p.prototype,"_useSpecularOverAlpha",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useSpecularOverAlpha",void 0),(0,z.b)([(0,e.L)("useReflectionOverAlpha")],p.prototype,"_useReflectionOverAlpha",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useReflectionOverAlpha",void 0),(0,z.b)([(0,e.L)("disableLighting")],p.prototype,"_disableLighting",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsLightsDirty")],p.prototype,"disableLighting",void 0),(0,z.b)([(0,e.L)("useObjectSpaceNormalMap")],p.prototype,"_useObjectSpaceNormalMap",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useObjectSpaceNormalMap",void 0),(0,z.b)([(0,e.L)("useParallax")],p.prototype,"_useParallax",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallax",void 0),(0,z.b)([(0,e.L)("useParallaxOcclusion")],p.prototype,"_useParallaxOcclusion",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useParallaxOcclusion",void 0),(0,z.b)([(0,e.L)()],p.prototype,"parallaxScaleBias",void 0),(0,z.b)([(0,e.L)("roughness")],p.prototype,"_roughness",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"roughness",void 0),(0,z.b)([(0,e.L)()],p.prototype,"indexOfRefraction",void 0),(0,z.b)([(0,e.L)()],p.prototype,"invertRefractionY",void 0),(0,z.b)([(0,e.L)()],p.prototype,"alphaCutOff",void 0),(0,z.b)([(0,e.L)("useLightmapAsShadowmap")],p.prototype,"_useLightmapAsShadowmap",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useLightmapAsShadowmap",void 0),(0,z.b)([(0,e.q)("diffuseFresnelParameters")],p.prototype,"_diffuseFresnelParameters",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"diffuseFresnelParameters",void 0),(0,z.b)([(0,e.q)("opacityFresnelParameters")],p.prototype,"_opacityFresnelParameters",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],p.prototype,"opacityFresnelParameters",void 0),(0,z.b)([(0,e.q)("reflectionFresnelParameters")],p.prototype,"_reflectionFresnelParameters",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"reflectionFresnelParameters",void 0),(0,z.b)([(0,e.q)("refractionFresnelParameters")],p.prototype,"_refractionFresnelParameters",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"refractionFresnelParameters",void 0),(0,z.b)([(0,e.q)("emissiveFresnelParameters")],p.prototype,"_emissiveFresnelParameters",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"emissiveFresnelParameters",void 0),(0,z.b)([(0,e.L)("useReflectionFresnelFromSpecular")],p.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsFresnelDirty")],p.prototype,"useReflectionFresnelFromSpecular",void 0),(0,z.b)([(0,e.L)("useGlossinessFromSpecularMapAlpha")],p.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,z.b)([(0,e.L)("maxSimultaneousLights")],p.prototype,"_maxSimultaneousLights",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsLightsDirty")],p.prototype,"maxSimultaneousLights",void 0),(0,z.b)([(0,e.L)("invertNormalMapX")],p.prototype,"_invertNormalMapX",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapX",void 0),(0,z.b)([(0,e.L)("invertNormalMapY")],p.prototype,"_invertNormalMapY",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"invertNormalMapY",void 0),(0,z.b)([(0,e.L)("twoSidedLighting")],p.prototype,"_twoSidedLighting",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsTexturesDirty")],p.prototype,"twoSidedLighting",void 0),(0,z.b)([(0,e.L)("applyDecalMapAfterDetailMap")],p.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,z.b)([(0,e.c)("_markAllSubMeshesAsMiscDirty")],p.prototype,"applyDecalMapAfterDetailMap",void 0),(0,O.f)("BABYLON.StandardMaterial",p),m.d.DefaultMaterialFactory=S=>new p("default material",S)}}]);