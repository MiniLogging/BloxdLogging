"use strict";(self.k9ivgwsw3f=self.k9ivgwsw3f||[]).push([[25],{13216:(Y,b,C)=>{C.d(b,{c:()=>F});var R=C(12818),q=C(13143),A=C(12821),E=C(13212),B=C(13207),g=C(13220),r=C(13181);class O extends B.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class F extends g.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(Y){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(Y,"DetailMap",140,new O,b),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=q.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=Y._dirtyCallbacks[1]}isReadyForSubMesh(Y,b,C){return!this._isEnabled||!(Y._areTexturesDirty&&b.texturesEnabled&&C.getCaps().standardDerivatives&&this._texture&&E.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(Y,b){if(this._isEnabled){Y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const C=b.getEngine();Y._areTexturesDirty&&(C.getCaps().standardDerivatives&&this._texture&&E.b.DetailTextureEnabled&&this._isEnabled?((0,r.N)(this._texture,Y,"DETAIL"),Y.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):Y.DETAIL=!1)}else Y.DETAIL=!1}bindForSubMesh(Y,b){if(!this._isEnabled)return;const C=this._material.isFrozen;Y.useUbo&&C&&Y.isSync||this._texture&&E.b.DetailTextureEnabled&&(Y.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,r.v)(this._texture,Y,"detail")),b.texturesEnabled&&this._texture&&E.b.DetailTextureEnabled&&Y.setTexture("detailSampler",this._texture)}hasTexture(Y){return this._texture===Y}getActiveTextures(Y){this._texture&&Y.push(this._texture)}getAnimatables(Y){this._texture&&this._texture.animations&&this._texture.animations.length>0&&Y.push(this._texture)}dispose(Y){var b;Y&&(null===(b=this._texture)||void 0===b||b.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(Y){Y.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,R.c)([(0,A.E)("detailTexture"),(0,A.d)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"texture",void 0),(0,R.c)([(0,A.K)()],F.prototype,"diffuseBlendLevel",void 0),(0,R.c)([(0,A.K)()],F.prototype,"roughnessBlendLevel",void 0),(0,R.c)([(0,A.K)()],F.prototype,"bumpLevel",void 0),(0,R.c)([(0,A.K)(),(0,A.d)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"normalBlendMethod",void 0),(0,R.c)([(0,A.K)(),(0,A.d)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"isEnabled",void 0)},13207:(Y,b,C)=>{C.d(b,{b:()=>R});class R{constructor(Y){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=Y,Y)for(const b in Y)Object.prototype.hasOwnProperty.call(Y,b)&&this._setDefaultValue(b)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let Y=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||Y,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const Y of Object.keys(this))"_"!==Y[0]&&this._keys.push(Y);if(this._externalProperties)for(const Y in this._externalProperties)-1===this._keys.indexOf(Y)&&this._keys.push(Y)}isEqual(Y){if(this._keys.length!==Y._keys.length)return!1;for(let b=0;b<this._keys.length;b++){const C=this._keys[b];if(this[C]!==Y[C])return!1}return!0}cloneTo(Y){this._keys.length!==Y._keys.length&&(Y._keys=this._keys.slice(0));for(let b=0;b<this._keys.length;b++){const C=this._keys[b];Y[C]=this[C]}}reset(){for(const Y of this._keys)this._setDefaultValue(Y)}_setDefaultValue(Y){var b,C,R,q;const A=(null===(b=this._externalProperties)||void 0===b||null===(C=b[Y])||void 0===C?void 0:C.type)??typeof this[Y],E=null===(R=this._externalProperties)||void 0===R||null===(q=R[Y])||void 0===q?void 0:q.default;switch(A){case"number":this[Y]=E??0;break;case"string":this[Y]=E??"";break;default:this[Y]=E??!1}}toString(){let Y="";for(let b=0;b<this._keys.length;b++){const C=this._keys[b],R=this[C];switch(typeof R){case"number":case"string":Y+="#define "+C+" "+R+"\n";break;default:R&&(Y+="#define "+C+"\n")}}return Y}}},13212:(Y,b,C)=>{C.d(b,{b:()=>q});var R=C(12733);class q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(Y){this._DiffuseTextureEnabled!==Y&&(this._DiffuseTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(Y){this._BaseWeightTextureEnabled!==Y&&(this._BaseWeightTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(Y){this._BaseDiffuseRoughnessTextureEnabled!==Y&&(this._BaseDiffuseRoughnessTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(Y){this._DetailTextureEnabled!==Y&&(this._DetailTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(Y){this._DecalMapEnabled!==Y&&(this._DecalMapEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(Y){this._AmbientTextureEnabled!==Y&&(this._AmbientTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(Y){this._OpacityTextureEnabled!==Y&&(this._OpacityTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(Y){this._ReflectionTextureEnabled!==Y&&(this._ReflectionTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(Y){this._EmissiveTextureEnabled!==Y&&(this._EmissiveTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(Y){this._SpecularTextureEnabled!==Y&&(this._SpecularTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(Y){this._BumpTextureEnabled!==Y&&(this._BumpTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(Y){this._LightmapTextureEnabled!==Y&&(this._LightmapTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(Y){this._RefractionTextureEnabled!==Y&&(this._RefractionTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Y){this._ColorGradingTextureEnabled!==Y&&(this._ColorGradingTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(Y){this._FresnelEnabled!==Y&&(this._FresnelEnabled=Y,R.b.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(Y){this._ClearCoatTextureEnabled!==Y&&(this._ClearCoatTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(Y){this._ClearCoatBumpTextureEnabled!==Y&&(this._ClearCoatBumpTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(Y){this._ClearCoatTintTextureEnabled!==Y&&(this._ClearCoatTintTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(Y){this._SheenTextureEnabled!==Y&&(this._SheenTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(Y){this._AnisotropicTextureEnabled!==Y&&(this._AnisotropicTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(Y){this._ThicknessTextureEnabled!==Y&&(this._ThicknessTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(Y){this._RefractionIntensityTextureEnabled!==Y&&(this._RefractionIntensityTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(Y){this._TranslucencyIntensityTextureEnabled!==Y&&(this._TranslucencyIntensityTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(Y){this._TranslucencyColorTextureEnabled!==Y&&(this._TranslucencyColorTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(Y){this._IridescenceTextureEnabled!==Y&&(this._IridescenceTextureEnabled=Y,R.b.MarkAllMaterialsAsDirty(1))}}q._DiffuseTextureEnabled=!0,q._BaseWeightTextureEnabled=!0,q._BaseDiffuseRoughnessTextureEnabled=!0,q._DetailTextureEnabled=!0,q._DecalMapEnabled=!0,q._AmbientTextureEnabled=!0,q._OpacityTextureEnabled=!0,q._ReflectionTextureEnabled=!0,q._EmissiveTextureEnabled=!0,q._SpecularTextureEnabled=!0,q._BumpTextureEnabled=!0,q._LightmapTextureEnabled=!0,q._RefractionTextureEnabled=!0,q._ColorGradingTextureEnabled=!0,q._FresnelEnabled=!0,q._ClearCoatTextureEnabled=!0,q._ClearCoatBumpTextureEnabled=!0,q._ClearCoatTintTextureEnabled=!0,q._SheenTextureEnabled=!0,q._AnisotropicTextureEnabled=!0,q._ThicknessTextureEnabled=!0,q._RefractionIntensityTextureEnabled=!0,q._TranslucencyIntensityTextureEnabled=!0,q._TranslucencyColorTextureEnabled=!0,q._IridescenceTextureEnabled=!0},13222:(Y,b,C)=>{C.d(b,{d:()=>A});var R,q=C(12831);!function(Y){Y[Y.Zero=0]="Zero",Y[Y.One=1]="One",Y[Y.MaxViewZ=2]="MaxViewZ"}(R||(R={}));class A{static CreateConfiguration(Y){return A._Configurations[Y]={defines:{},previousWorldMatrices:{},previousViewProjection:q.Matrix.Zero(),currentViewProjection:q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},A._Configurations[Y]}static DeleteConfiguration(Y){delete A._Configurations[Y]}static GetConfiguration(Y){return A._Configurations[Y]}static AddUniformsAndSamplers(Y,b){Y.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(Y,b){for(const C of b)if(C.ub)for(const b of C.ub)b._removeDrawWrapper(Y)}static PrepareDefines(Y,b,C){if(!C._arePrePassDirty)return;const R=A._Configurations[Y];if(!R)return;C.PREPASS=!0,C.PREPASS_COLOR=!1,C.PREPASS_COLOR_INDEX=-1;let q=0;for(let E=0;E<A.GeometryTextureDescriptions.length;E++){const Y=A.GeometryTextureDescriptions[E],b=Y.define,B=Y.defineIndex,g=R.defines[B];void 0!==g?(C[b]=!0,C[B]=g,q++):(C[b]=!1,delete C[B])}C.SCENE_MRT_COUNT=q,C.BONES_VELOCITY_ENABLED=b.useBones&&b.computeBonesUsingShaders&&b.skeleton&&!b.skeleton.isUsingTextureForMatrices&&-1===R.excludedSkinnedMesh.indexOf(b)}static Bind(Y,b,C,R,q){const E=A._Configurations[Y];if(!E)return;const B=C.uY(),g=B.getEngine();if(E.reverseCulling&&g.setStateCullFaceType(B._mirroredCameraPosition?q.cullBackFaces:!q.cullBackFaces),(void 0!==E.defines.PREPASS_VELOCITY_INDEX||void 0!==E.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(E.previousWorldMatrices[C.uniqueId]||(E.previousWorldMatrices[C.uniqueId]=R.clone()),E.previousViewProjection||(E.previousViewProjection=B.getTransformMatrix().clone(),E.currentViewProjection=B.getTransformMatrix().clone()),E.currentViewProjection.updateFlag!==B.getTransformMatrix().updateFlag?(E.lastUpdateFrameId=g.frameId,E.previousViewProjection.q(E.currentViewProjection),E.currentViewProjection.q(B.getTransformMatrix())):E.lastUpdateFrameId!==g.frameId&&(E.lastUpdateFrameId=g.frameId,E.previousViewProjection.q(E.currentViewProjection)),b.setMatrix("previousWorld",E.previousWorldMatrices[C.uniqueId]),b.setMatrix("previousViewProjection",E.previousViewProjection),E.previousWorldMatrices[C.uniqueId]=R.clone(),C.useBones&&C.computeBonesUsingShaders&&C.skeleton)){const Y=C.skeleton;if(!Y.isUsingTextureForMatrices||-1===b.getUniformIndex("boneTextureWidth")){const R=Y.getTransformMatrices(C);R&&(E.previousBones[C.uniqueId]||(E.previousBones[C.uniqueId]=R.slice()),b.setMatrices("mPreviousBones",E.previousBones[C.uniqueId]),E.previousBones[C.uniqueId].set(R))}}}}A.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],A._Configurations={}},13220:(Y,b,C)=>{C.d(b,{c:()=>w});var R=C(12818),q=C(12821),A=C(13143),E=C(12702),B=C(12722),g=C(12747);const r=new RegExp("^([gimus]+)!");class O{constructor(Y){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=Y,this._scene=Y.uY(),this._engine=this._scene.getEngine()}_addPlugin(Y){for(let R=0;R<this._plugins.length;++R)if(this._plugins[R].name===Y.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!Y.isCompatible(this._material.shaderLanguage))throw`The plugin "${Y.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const b=Y.getClassName();O._MaterialPluginClassToMainDefine[b]||(O._MaterialPluginClassToMainDefine[b]="MATERIALPLUGIN_"+ ++O._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(Y,b)=>this._handlePluginEvent(Y,b),this._plugins.push(Y),this._plugins.sort(((Y,b)=>Y.priority-b.priority)),this._codeInjectionPoints={};const C={};C[O._MaterialPluginClassToMainDefine[b]]={type:"boolean",default:!0};for(const R of this._plugins)R.collectDefines(C),this._collectPointNames("vertex",R.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",R.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=C,!0}_activatePlugin(Y){-1===this._activePlugins.indexOf(Y)&&(this._activePlugins.push(Y),this._activePlugins.sort(((Y,b)=>Y.priority-b.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),Y.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(Y),this._activePluginsForExtraEvents.sort(((Y,b)=>Y.priority-b.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(Y){for(let b=0;b<this._plugins.length;++b)if(this._plugins[b].name===Y)return this._plugins[b];return null}_handlePluginEventIsReadyForSubMesh(Y){let b=!0;for(const C of this._activePlugins)b=b&&C.isReadyForSubMesh(Y.defines,this._scene,this._engine,Y.subMesh);Y.isReadyForSubMesh=b}_handlePluginEventPrepareDefinesBeforeAttributes(Y){for(const b of this._activePlugins)b.prepareDefinesBeforeAttributes(Y.defines,this._scene,Y.mesh)}_handlePluginEventPrepareDefines(Y){for(const b of this._activePlugins)b.prepareDefines(Y.defines,this._scene,Y.mesh)}_handlePluginEventHardBindForSubMesh(Y){for(const b of this._activePluginsForExtraEvents)b.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Y.subMesh)}_handlePluginEventBindForSubMesh(Y){for(const b of this._activePlugins)b.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,Y.subMesh)}_handlePluginEventHasRenderTargetTextures(Y){let b=!1;for(const C of this._activePluginsForExtraEvents)if(b=C.hasRenderTargetTextures(),b)break;Y.hasRenderTargetTextures=b}_handlePluginEventFillRenderTargetTextures(Y){for(const b of this._activePluginsForExtraEvents)b.fillRenderTargetTextures(Y.renderTargets)}_handlePluginEvent(Y,b){switch(Y){case 512:{const Y=b;for(const b of this._activePlugins)b.getActiveTextures(Y.activeTextures);break}case 256:{const Y=b;for(const b of this._activePlugins)b.getAnimatables(Y.animatables);break}case 1024:{const Y=b;let C=!1;for(const b of this._activePlugins)if(C=b.hasTexture(Y.texture),C)break;Y.hasTexture=C;break}case 2:{const Y=b;for(const b of this._plugins)b.dispose(Y.forceDisposeTextures);break}case 4:b.defineNames=this._defineNamesFromPlugins;break;case 128:{const Y=b;for(const b of this._activePlugins)Y.fallbackRank=b.addFallbacks(Y.defines,Y.fallbacks,Y.fallbackRank),b.getAttributes(Y.attributes,this._scene,Y.mesh);this._uniformList.length>0&&Y.uniforms.push(...this._uniformList),this._samplerList.length>0&&Y.samplers.push(...this._samplerList),this._uboList.length>0&&Y.uniformBuffersNames.push(...this._uboList),Y.customCode=this._injectCustomCode(Y,Y.customCode);break}case 8:{const Y=b;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const C=1===this._material.shaderLanguage;for(const b of this._plugins){const R=b.getUniforms(this._material.shaderLanguage);if(R){if(R.ubo)for(const b of R.ubo){if(b.size&&b.type){const R=b.arraySize??0;if(Y.ubo.addUniform(b.name,b.size,R),C){let Y;switch(b.type){case"mat4":Y="mat4x4f";break;case"float":Y="f32";break;default:Y=`${b.type}f`}this._uboDeclaration+=R>0?`uniform ${b.name}: array<${Y}, ${R}>;\n`:`uniform ${b.name}: ${Y};\n`}else this._uboDeclaration+=`${b.type} ${b.name}${R>0?`[${R}]`:""};\n`}this._uniformList.push(b.name)}R.vertex&&(this._vertexDeclaration+=R.vertex+"\n"),R.fragment&&(this._fragmentDeclaration+=R.fragment+"\n")}b.getSamplers(this._samplerList),b.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(Y,b){if(b)for(const C in b)this._codeInjectionPoints[Y]||(this._codeInjectionPoints[Y]={}),this._codeInjectionPoints[Y][C]=!0}_injectCustomCode(Y,b){return(C,R)=>{var q;b&&(R=b(C,R)),this._uboDeclaration&&(R=R.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(R=R.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(R=R.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const A=null===(q=this._codeInjectionPoints)||void 0===q?void 0:q[C];if(!A)return R;let E=null;for(let b in A){let q="";for(const R of this._activePlugins){var O;let A=null===(O=R.getCustomCode(C,this._material.shaderLanguage))||void 0===O?void 0:O[b];if(A){if(R.resolveIncludes){if(null===E){const b=0;E={defines:[],indexParameters:Y.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:g.b.GetShadersRepository(b),includesShadersStore:g.b.GetIncludesShadersStore(b),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,o:this._engine.o,processCodeAfterIncludes:void 0}}E.isFragment="fragment"===C,(0,B.j)(A,E,(Y=>A=Y))}q+=A+"\n"}}if(q.length>0)if("!"===b.charAt(0)){b=b.substring(1);let Y="g";if("!"===b.charAt(0))Y="",b=b.substring(1);else{const C=r.exec(b);C&&C.length>=2&&(Y=C[1],b=b.substring(Y.length+1))}Y.indexOf("g")<0&&(Y+="g");const C=R,A=new RegExp(b,Y);let E=A.exec(C);for(;null!==E;){let Y=q;for(let b=0;b<E.length;++b)Y=Y.replace("$"+b,E[b]);R=R.replace(E[0],Y),E=A.exec(C)}}else{const Y="#define "+b;R=R.replace(Y,"\n"+q+"\n"+Y)}}return R}}}O._MaterialPluginClassToMainDefine={},O._MaterialPluginCounter=0,E.d.OnEnginesDisposedObservable.add((()=>{n()}));const F=[];let y=!1,S=null;function n(){F.length=0,y=!1,A.e.OnEventObservable.remove(S),S=null}var t=C(12870),I=C(12790);class w{isCompatible(Y){return 0===Y}_enable(Y){Y&&this._pluginManager._activatePlugin(this)}constructor(Y,b,C,R){let q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],A=arguments.length>5&&void 0!==arguments[5]&&arguments[5],E=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=Y,this.name=b,this.priority=C,this.resolveIncludes=E,Y.pluginManager||(Y.pluginManager=new O(Y),Y.Sb.add((()=>{Y.pluginManager=void 0}))),this._pluginDefineNames=R,this._pluginManager=Y.pluginManager,q&&this._pluginManager._addPlugin(this),A&&this._enable(!0),this.markAllDefinesAsDirty=Y._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(Y,b,C,R){return!0}hardBindForSubMesh(Y,b,C,R){}bindForSubMesh(Y,b,C,R){}dispose(Y){}getCustomCode(Y){return null}collectDefines(Y){if(this._pluginDefineNames)for(const b of Object.keys(this._pluginDefineNames)){if("_"===b[0])continue;const C=typeof this._pluginDefineNames[b];Y[b]={type:"number"===C?"number":"string"===C?"string":"boolean"===C?"boolean":"object",default:this._pluginDefineNames[b]}}}prepareDefinesBeforeAttributes(Y,b,C){}prepareDefines(Y,b,C){}hasTexture(Y){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(Y){}getActiveTextures(Y){}getAnimatables(Y){}addFallbacks(Y,b,C){return C}getSamplers(Y){}getAttributes(Y,b,C){}getUniformBuffersNames(Y){}getUniforms(){return{}}copyTo(Y){t.e.Clone((()=>Y),this)}serialize(){return t.e.Serialize(this)}parse(Y,b,C){t.e.Parse((()=>this),Y,b,C)}}(0,R.c)([(0,q.K)()],w.prototype,"name",void 0),(0,R.c)([(0,q.K)()],w.prototype,"priority",void 0),(0,R.c)([(0,q.K)()],w.prototype,"resolveIncludes",void 0),(0,R.c)([(0,q.K)()],w.prototype,"registerForExtraEvents",void 0),(0,I.g)("BABYLON.MaterialPluginBase",w)},13202:(Y,b,C)=>{C.d(b,{b:()=>R});class R{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(Y){Y.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(Y){}bindForSubMesh(Y,b,C,R,q){if(b.prePassRenderer&&b.prePassRenderer.enabled&&b.prePassRenderer.currentRTisSceneRT&&(-1!==b.prePassRenderer.getIndex(2)||-1!==b.prePassRenderer.getIndex(11))){this.previousWorldMatrices[C.uniqueId]||(this.previousWorldMatrices[C.uniqueId]=R.clone()),this.previousViewProjection||(this.previousViewProjection=b.getTransformMatrix().clone(),this.currentViewProjection=b.getTransformMatrix().clone());const q=b.getEngine();this.currentViewProjection.updateFlag!==b.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.q(this.currentViewProjection),this.currentViewProjection.q(b.getTransformMatrix())):this._lastUpdateFrameId!==q.frameId&&(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.q(this.currentViewProjection)),Y.setMatrix("previousWorld",this.previousWorldMatrices[C.uniqueId]),Y.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[C.uniqueId]=R.clone()}}}},13196:(Y,b,C)=>{C.d(b,{gC:()=>l});var R=C(12818),q=C(12821),A=C(12919),E=C(13077),B=C(12880),g=C(12903),r=C(13202),O=C(13081),F=C(13143),y=C(13207),S=C(13137),n=C(12814),t=C(12790),I=C(13212),w=C(13128),Q=C(13216),N=C(13187),p=C(13181),mY=C(12870),L=C(13222);const u={effect:null,subMesh:null};class c extends y.b{constructor(Y){super(Y),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(Y){const b=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const C of b)this[C]=C===Y}}class l extends S.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(Y){this._attachImageProcessingConfiguration(Y),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(Y){Y!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=Y||this.uY().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(Y){this.imageProcessingConfiguration.colorCurvesEnabled=Y}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(Y){this.imageProcessingConfiguration.colorGradingEnabled=Y}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(Y){this._imageProcessingConfiguration.toneMappingEnabled=Y}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(Y){this._imageProcessingConfiguration.exposure=Y}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(Y){this._imageProcessingConfiguration.contrast=Y}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(Y){this._imageProcessingConfiguration.colorGradingTexture=Y}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(Y){this._imageProcessingConfiguration.colorCurves=Y}get canRenderToMRT(){return!0}constructor(Y,b){super(Y,b,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||l.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new B.rC(0,0,0),this.diffuseColor=new B.rC(1,1,1),this.specularColor=new B.rC(1,1,1),this.emissiveColor=new B.rC(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new A.h(16),this._globalAmbientColor=new B.rC(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Q.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new r.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"gC"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===F.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.lb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==F.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.lb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(Y,b){let R=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const q=b._drawWrapper;if(q.effect&&this.isFrozen&&q._wasPreviouslyReady&&q._wasPreviouslyUsingInstances===R)return!0;b.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),b.materialDefines=new c(this._eventInfo.defineNames));const A=this.uY(),E=b.materialDefines;if(this._isReadyForSubMesh(b))return!0;const B=A.getEngine();E._needNormals=(0,p.L)(A,Y,E,!0,this._maxSimultaneousLights,this._disableLighting),(0,p.P)(A,E);const F=this.needAlphaBlendingForMesh(Y)&&this.uY().useOrderIndependentTransparency;if((0,p.U)(A,E,this.canRenderToMRT&&!F),(0,p.R)(A,E,F),L.d.PrepareDefines(B.currentRenderPassId,Y,E),E._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,E._needUVs=!1;for(let Y=1;Y<=6;++Y)E["MAINUV"+Y]=!1;if(A.texturesEnabled){if(E.DIFFUSEDIRECTUV=0,E.BUMPDIRECTUV=0,E.AMBIENTDIRECTUV=0,E.OPACITYDIRECTUV=0,E.EMISSIVEDIRECTUV=0,E.SPECULARDIRECTUV=0,E.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&l.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._diffuseTexture,E,"DIFFUSE")}else E.DIFFUSE=!1;if(this._ambientTexture&&l.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._ambientTexture,E,"AMBIENT")}else E.AMBIENT=!1;if(this._opacityTexture&&l.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._opacityTexture,E,"OPACITY"),E.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else E.OPACITY=!1;if(this._reflectionTexture&&l.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(E._needNormals=!0,E.REFLECTION=!0,E.ROUGHNESS=this._roughness>0,E.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,E.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===n.b.INVCUBIC_MODE,E.REFLECTIONMAP_3D=this._reflectionTexture.isCube,E.REFLECTIONMAP_OPPOSITEZ=E.REFLECTIONMAP_3D&&this.uY().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,E.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case n.b.EXPLICIT_MODE:E.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case n.b.PLANAR_MODE:E.setReflectionMode("REFLECTIONMAP_PLANAR");break;case n.b.PROJECTION_MODE:E.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case n.b.SKYBOX_MODE:E.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case n.b.SPHERICAL_MODE:E.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case n.b.EQUIRECTANGULAR_MODE:E.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case n.b.FIXED_EQUIRECTANGULAR_MODE:E.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case n.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:E.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case n.b.CUBIC_MODE:case n.b.INVCUBIC_MODE:default:E.setReflectionMode("REFLECTIONMAP_CUBIC")}E.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else E.REFLECTION=!1,E.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&l.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._emissiveTexture,E,"EMISSIVE")}else E.EMISSIVE=!1;if(this._lightmapTexture&&l.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._lightmapTexture,E,"LIGHTMAP"),E.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,E.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else E.LIGHTMAP=!1;if(this._specularTexture&&l.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,p.N)(this._specularTexture,E,"SPECULAR"),E.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else E.SPECULAR=!1;if(A.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&l.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,p.N)(this._bumpTexture,E,"BUMP"),E.PARALLAX=this._useParallax,E.PARALLAX_RHS=A.useRightHandedSystem,E.PARALLAXOCCLUSION=this._useParallaxOcclusion,E.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else E.BUMP=!1,E.PARALLAX=!1,E.PARALLAX_RHS=!1,E.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&l.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;E._needUVs=!0,E.REFRACTION=!0,E.REFRACTIONMAP_3D=this._refractionTexture.isCube,E.RGBDREFRACTION=this._refractionTexture.isRGBD,E.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else E.REFRACTION=!1;E.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else E.DIFFUSE=!1,E.AMBIENT=!1,E.OPACITY=!1,E.REFLECTION=!1,E.EMISSIVE=!1,E.LIGHTMAP=!1,E.BUMP=!1,E.REFRACTION=!1;E.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),E.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,E.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,E.SPECULAROVERALPHA=this._useSpecularOverAlpha,E.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,E.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,E.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(Y)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=E,this._eventInfo.subMesh=b,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(E._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(E),E.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,E.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(E._areFresnelDirty&&(l.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(E.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,E.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,E.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,E.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,E.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,E.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,E._needNormals=!0,E.FRESNEL=!0):E.FRESNEL=!1),E.AREALIGHTUSED)for(let C=0;C<Y.lightSources.length;C++)if(!Y.lightSources[C]._isReady())return!1;(0,p.O)(Y,A,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(Y),E,this._applyDecalMapAfterDetailMap),(0,p.K)(A,B,this,E,R,null,b.getRenderingMesh().hasThinInstances),this._eventInfo.defines=E,this._eventInfo.mesh=Y,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,p.I)(Y,E,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let y=!1;if(E.isDirty){const R=E._areLightsDisposed;E.markAsProcessed();const q=new w.b;E.REFLECTION&&q.addFallback(0,"REFLECTION"),E.SPECULAR&&q.addFallback(0,"SPECULAR"),E.BUMP&&q.addFallback(0,"BUMP"),E.PARALLAX&&q.addFallback(1,"PARALLAX"),E.PARALLAX_RHS&&q.addFallback(1,"PARALLAX_RHS"),E.PARALLAXOCCLUSION&&q.addFallback(0,"PARALLAXOCCLUSION"),E.SPECULAROVERALPHA&&q.addFallback(0,"SPECULAROVERALPHA"),E.FOG&&q.addFallback(1,"FOG"),E.POINTSIZE&&q.addFallback(0,"POINTSIZE"),E.LOGARITHMICDEPTH&&q.addFallback(0,"LOGARITHMICDEPTH"),(0,p.x)(E,q,this._maxSimultaneousLights),E.SPECULARTERM&&q.addFallback(0,"SPECULARTERM"),E.DIFFUSEFRESNEL&&q.addFallback(1,"DIFFUSEFRESNEL"),E.OPACITYFRESNEL&&q.addFallback(2,"OPACITYFRESNEL"),E.REFLECTIONFRESNEL&&q.addFallback(3,"REFLECTIONFRESNEL"),E.EMISSIVEFRESNEL&&q.addFallback(4,"EMISSIVEFRESNEL"),E.FRESNEL&&q.addFallback(4,"FRESNEL"),E.MULTIVIEW&&q.addFallback(0,"MULTIVIEW");const F=[g.e.PositionKind];E.NORMAL&&F.push(g.e.NormalKind),E.TANGENT&&F.push(g.e.TangentKind);for(let Y=1;Y<=6;++Y)E["UV"+Y]&&F.push(`uv${1===Y?"":Y}`);E.VERTEXCOLOR&&F.push(g.e.ColorKind),(0,p.A)(F,Y,E,q),(0,p.B)(F,E),(0,p.E)(F,Y,E),(0,p.y)(F,Y,E);let S="default";const n=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],t=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],I=["Material","Scene","Mesh"],Q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:E.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=E,this._eventInfo.uniforms=n,this._eventInfo.attributes=F,this._eventInfo.samplers=t,this._eventInfo.uniformBuffersNames=I,this._eventInfo.customCode=void 0,this._eventInfo.mesh=Y,this._eventInfo.indexParameters=Q,this._callbackPluginEventGeneric(128,this._eventInfo),L.d.AddUniformsAndSamplers(n,t),r.b.AddUniforms(n),r.b.AddSamplers(t),O.d&&(O.d.PrepareUniforms(n,E),O.d.PrepareSamplers(t,E)),(0,p.V)({uniformsNames:n,uniformBuffersNames:I,samplers:t,defines:E,maxSimultaneousLights:this._maxSimultaneousLights}),(0,N.c)(n);const mY={};this.customShaderNameResolve&&(S=this.customShaderNameResolve(S,n,I,t,E,F,mY));const c=E.toString(),l=b.effect;let X=A.getEngine().createEffect(S,{attributes:F,uniformsNames:n,uniformBuffersNames:I,samplers:t,defines:c,fallbacks:q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Q,processFinalCode:mY.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:E.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([C.e(41),C.e(64)]).then(C.bind(C,15464)),Promise.all([C.e(39),C.e(65)]).then(C.bind(C,15600))]):await Promise.all([Promise.all([C.e(34),C.e(67)]).then(C.bind(C,15664)),Promise.all([C.e(33),C.e(68)]).then(C.bind(C,15815))]),this._shadersLoaded=!0}},B);if(this._eventInfo.customCode=void 0,X)if(this._onEffectCreatedObservable&&(u.effect=X,u.subMesh=b,this._onEffectCreatedObservable.notifyObservers(u)),this.allowShaderHotSwapping&&l&&!X.isReady()){if(X=l,E.markAsUnprocessed(),y=this.isFrozen,R)return E._areLightsDisposed=!0,!1}else A.resetCachedMaterial(),b.setEffect(X,E,this._materialContext)}return!(!b.effect||!b.effect.isReady())&&(E._renderId=A.getRenderId(),q._wasPreviouslyReady=!y,q._wasPreviouslyUsingInstances=R,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const Y=this._uniformBuffer;Y.addUniform("diffuseLeftColor",4),Y.addUniform("diffuseRightColor",4),Y.addUniform("opacityParts",4),Y.addUniform("reflectionLeftColor",4),Y.addUniform("reflectionRightColor",4),Y.addUniform("refractionLeftColor",4),Y.addUniform("refractionRightColor",4),Y.addUniform("emissiveLeftColor",4),Y.addUniform("emissiveRightColor",4),Y.addUniform("vDiffuseInfos",2),Y.addUniform("vAmbientInfos",2),Y.addUniform("vOpacityInfos",2),Y.addUniform("vReflectionInfos",2),Y.addUniform("vReflectionPosition",3),Y.addUniform("vReflectionSize",3),Y.addUniform("vEmissiveInfos",2),Y.addUniform("vLightmapInfos",2),Y.addUniform("vSpecularInfos",2),Y.addUniform("vBumpInfos",3),Y.addUniform("diffuseMatrix",16),Y.addUniform("ambientMatrix",16),Y.addUniform("opacityMatrix",16),Y.addUniform("reflectionMatrix",16),Y.addUniform("emissiveMatrix",16),Y.addUniform("lightmapMatrix",16),Y.addUniform("specularMatrix",16),Y.addUniform("bumpMatrix",16),Y.addUniform("vTangentSpaceParams",2),Y.addUniform("pointSize",1),Y.addUniform("alphaCutOff",1),Y.addUniform("refractionMatrix",16),Y.addUniform("vRefractionInfos",4),Y.addUniform("vRefractionPosition",3),Y.addUniform("vRefractionSize",3),Y.addUniform("vSpecularColor",4),Y.addUniform("vEmissiveColor",3),Y.addUniform("vDiffuseColor",4),Y.addUniform("vAmbientColor",3),Y.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(Y,b,C){const R=this.uY(),q=C.materialDefines;if(!q)return;const A=C.effect;if(!A)return;this._activeEffect=A,b.getMeshUniformBuffer().bindToEffect(A,"Mesh"),b.transferToEffect(Y),this._uniformBuffer.bindToEffect(A,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,R,b,Y,this.isFrozen),L.d.Bind(R.getEngine().currentRenderPassId,this._activeEffect,b,Y,this);const g=R.activeCamera;g?this._uniformBuffer.updateFloat4("cameraInfo",g.Xb,g.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=C,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),q.OBJECTSPACE_NORMALMAP&&(Y.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const r=this._mustRebind(R,A,C,b.visibility);(0,p.e)(b,A);const O=this._uniformBuffer;if(r){if(this.bindViewProjection(A),!O.useUbo||!this.isFrozen||!O.isSync||C._drawWrapper._forceRebindOnNextCall){if(l.FresnelEnabled&&q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(O.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),O.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&O.updateColor4("opacityParts",new B.rC(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(O.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),O.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(O.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),O.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(O.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),O.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),R.texturesEnabled){if(this._diffuseTexture&&l.DiffuseTextureEnabled&&(O.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,p.v)(this._diffuseTexture,O,"diffuse")),this._ambientTexture&&l.AmbientTextureEnabled&&(O.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,p.v)(this._ambientTexture,O,"ambient")),this._opacityTexture&&l.OpacityTextureEnabled&&(O.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,p.v)(this._opacityTexture,O,"opacity")),this._hasAlphaChannel()&&O.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&l.ReflectionTextureEnabled){if(O.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),O.jb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const Y=this._reflectionTexture;O.updateVector3("vReflectionPosition",Y.boundingBoxPosition),O.updateVector3("vReflectionSize",Y.boundingBoxSize)}}else O.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&l.EmissiveTextureEnabled&&(O.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,p.v)(this._emissiveTexture,O,"emissive")),this._lightmapTexture&&l.LightmapTextureEnabled&&(O.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,p.v)(this._lightmapTexture,O,"lightmap")),this._specularTexture&&l.SpecularTextureEnabled&&(O.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,p.v)(this._specularTexture,O,"specular")),this._bumpTexture&&R.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&(O.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,p.v)(this._bumpTexture,O,"bump"),R._mirroredCameraPosition?O.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):O.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&l.RefractionTextureEnabled){let Y=1;if(this._refractionTexture.isCube||(O.jb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(Y=this._refractionTexture.depth)),O.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,Y,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const Y=this._refractionTexture;O.updateVector3("vRefractionPosition",Y.boundingBoxPosition),O.updateVector3("vRefractionSize",Y.boundingBoxSize)}}}this.pointsCloud&&O.updateFloat("pointSize",this.pointSize),O.updateColor4("vSpecularColor",this.specularColor,this.specularPower),O.updateColor3("vEmissiveColor",l.EmissiveTextureEnabled?this.emissiveColor:B.rC.BlackReadOnly),O.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),R.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),O.updateColor3("vAmbientColor",this._globalAmbientColor)}R.texturesEnabled&&(this._diffuseTexture&&l.DiffuseTextureEnabled&&A.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&l.AmbientTextureEnabled&&A.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&l.OpacityTextureEnabled&&A.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&l.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?A.setTexture("reflectionCubeSampler",this._reflectionTexture):A.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&l.EmissiveTextureEnabled&&A.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&l.LightmapTextureEnabled&&A.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&l.SpecularTextureEnabled&&A.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&R.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&A.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&l.RefractionTextureEnabled&&(this._refractionTexture.isCube?A.setTexture("refractionCubeSampler",this._refractionTexture):A.setTexture("refraction2DSampler",this._refractionTexture))),this.uY().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(b)&&this.uY().depthPeelingRenderer.bind(A),this._eventInfo.subMesh=C,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,N.g)(A,this,R),this.bindEyePosition(A)}else R.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(r||!this.isFrozen){var F;if(R.lightsEnabled&&!this._disableLighting&&(0,p.j)(R,b,A,q,this._maxSimultaneousLights),(R.fogEnabled&&b.applyFog&&R.fogMode!==E.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||b.receiveShadows||q.PREPASS)&&this.bindView(A),(0,p.h)(R,b,A),q.NUM_MORPH_INFLUENCERS&&(0,p.o)(b,A),q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(F=b.bakedVertexAnimationManager)||void 0===F||F.bind(A,q.INSTANCES);this.useLogarithmicDepth&&(0,p.n)(q,A,R),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(b,this._activeEffect,C),O.update()}getAnimatables(){const Y=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&Y.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&Y.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&Y.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&Y.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&Y.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&Y.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&Y.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&Y.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&Y.push(this._refractionTexture),Y}getActiveTextures(){const Y=super.getActiveTextures();return this._diffuseTexture&&Y.push(this._diffuseTexture),this._ambientTexture&&Y.push(this._ambientTexture),this._opacityTexture&&Y.push(this._opacityTexture),this._reflectionTexture&&Y.push(this._reflectionTexture),this._emissiveTexture&&Y.push(this._emissiveTexture),this._specularTexture&&Y.push(this._specularTexture),this._bumpTexture&&Y.push(this._bumpTexture),this._lightmapTexture&&Y.push(this._lightmapTexture),this._refractionTexture&&Y.push(this._refractionTexture),Y}hasTexture(Y){return!!super.hasTexture(Y)||(this._diffuseTexture===Y||(this._ambientTexture===Y||(this._opacityTexture===Y||(this._reflectionTexture===Y||(this._emissiveTexture===Y||(this._specularTexture===Y||(this._bumpTexture===Y||(this._lightmapTexture===Y||this._refractionTexture===Y))))))))}dispose(Y,b){var C,R,q,A,E,B,g,r,O;b&&(null===(C=this._diffuseTexture)||void 0===C||C.dispose(),null===(R=this._ambientTexture)||void 0===R||R.dispose(),null===(q=this._opacityTexture)||void 0===q||q.dispose(),null===(A=this._reflectionTexture)||void 0===A||A.dispose(),null===(E=this._emissiveTexture)||void 0===E||E.dispose(),null===(B=this._specularTexture)||void 0===B||B.dispose(),null===(g=this._bumpTexture)||void 0===g||g.dispose(),null===(r=this._lightmapTexture)||void 0===r||r.dispose(),null===(O=this._refractionTexture)||void 0===O||O.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(Y,b)}clone(Y){let b=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const R=mY.e.Clone((()=>new l(Y,this.uY())),this,{cloneTexturesOnlyOnce:b});return R.name=Y,R.id=Y,this.nb.copyTo(R.nb),this._clonePlugins(R,C),R}static Parse(Y,b,C){const R=mY.e.Parse((()=>new l(Y.name,b)),Y,b,C);return Y.nb&&R.nb.parse(Y.nb,b,C),F.e._ParsePlugins(Y,R,b,C),R}static get DiffuseTextureEnabled(){return I.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(Y){I.b.DiffuseTextureEnabled=Y}static get DetailTextureEnabled(){return I.b.DetailTextureEnabled}static set DetailTextureEnabled(Y){I.b.DetailTextureEnabled=Y}static get AmbientTextureEnabled(){return I.b.AmbientTextureEnabled}static set AmbientTextureEnabled(Y){I.b.AmbientTextureEnabled=Y}static get OpacityTextureEnabled(){return I.b.OpacityTextureEnabled}static set OpacityTextureEnabled(Y){I.b.OpacityTextureEnabled=Y}static get ReflectionTextureEnabled(){return I.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(Y){I.b.ReflectionTextureEnabled=Y}static get EmissiveTextureEnabled(){return I.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(Y){I.b.EmissiveTextureEnabled=Y}static get SpecularTextureEnabled(){return I.b.SpecularTextureEnabled}static set SpecularTextureEnabled(Y){I.b.SpecularTextureEnabled=Y}static get BumpTextureEnabled(){return I.b.BumpTextureEnabled}static set BumpTextureEnabled(Y){I.b.BumpTextureEnabled=Y}static get LightmapTextureEnabled(){return I.b.LightmapTextureEnabled}static set LightmapTextureEnabled(Y){I.b.LightmapTextureEnabled=Y}static get RefractionTextureEnabled(){return I.b.RefractionTextureEnabled}static set RefractionTextureEnabled(Y){I.b.RefractionTextureEnabled=Y}static get ColorGradingTextureEnabled(){return I.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(Y){I.b.ColorGradingTextureEnabled=Y}static get FresnelEnabled(){return I.b.FresnelEnabled}static set FresnelEnabled(Y){I.b.FresnelEnabled=Y}}l.ForceGLSL=!1,(0,R.c)([(0,q.E)("diffuseTexture")],l.prototype,"_diffuseTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"diffuseTexture",void 0),(0,R.c)([(0,q.E)("ambientTexture")],l.prototype,"_ambientTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"ambientTexture",void 0),(0,R.c)([(0,q.E)("opacityTexture")],l.prototype,"_opacityTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"opacityTexture",void 0),(0,R.c)([(0,q.E)("reflectionTexture")],l.prototype,"_reflectionTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"reflectionTexture",void 0),(0,R.c)([(0,q.E)("emissiveTexture")],l.prototype,"_emissiveTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"emissiveTexture",void 0),(0,R.c)([(0,q.E)("specularTexture")],l.prototype,"_specularTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"specularTexture",void 0),(0,R.c)([(0,q.E)("bumpTexture")],l.prototype,"_bumpTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"bumpTexture",void 0),(0,R.c)([(0,q.E)("lightmapTexture")],l.prototype,"_lightmapTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"lightmapTexture",void 0),(0,R.c)([(0,q.E)("refractionTexture")],l.prototype,"_refractionTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"refractionTexture",void 0),(0,R.c)([(0,q.m)("ambient")],l.prototype,"ambientColor",void 0),(0,R.c)([(0,q.m)("diffuse")],l.prototype,"diffuseColor",void 0),(0,R.c)([(0,q.m)("specular")],l.prototype,"specularColor",void 0),(0,R.c)([(0,q.m)("emissive")],l.prototype,"emissiveColor",void 0),(0,R.c)([(0,q.K)()],l.prototype,"specularPower",void 0),(0,R.c)([(0,q.K)("useAlphaFromDiffuseTexture")],l.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"useAlphaFromDiffuseTexture",void 0),(0,R.c)([(0,q.K)("useEmissiveAsIllumination")],l.prototype,"_useEmissiveAsIllumination",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useEmissiveAsIllumination",void 0),(0,R.c)([(0,q.K)("linkEmissiveWithDiffuse")],l.prototype,"_linkEmissiveWithDiffuse",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"linkEmissiveWithDiffuse",void 0),(0,R.c)([(0,q.K)("useSpecularOverAlpha")],l.prototype,"_useSpecularOverAlpha",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useSpecularOverAlpha",void 0),(0,R.c)([(0,q.K)("useReflectionOverAlpha")],l.prototype,"_useReflectionOverAlpha",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useReflectionOverAlpha",void 0),(0,R.c)([(0,q.K)("disableLighting")],l.prototype,"_disableLighting",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsLightsDirty")],l.prototype,"disableLighting",void 0),(0,R.c)([(0,q.K)("useObjectSpaceNormalMap")],l.prototype,"_useObjectSpaceNormalMap",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useObjectSpaceNormalMap",void 0),(0,R.c)([(0,q.K)("useParallax")],l.prototype,"_useParallax",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallax",void 0),(0,R.c)([(0,q.K)("useParallaxOcclusion")],l.prototype,"_useParallaxOcclusion",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallaxOcclusion",void 0),(0,R.c)([(0,q.K)()],l.prototype,"parallaxScaleBias",void 0),(0,R.c)([(0,q.K)("roughness")],l.prototype,"_roughness",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"roughness",void 0),(0,R.c)([(0,q.K)()],l.prototype,"indexOfRefraction",void 0),(0,R.c)([(0,q.K)()],l.prototype,"invertRefractionY",void 0),(0,R.c)([(0,q.K)()],l.prototype,"alphaCutOff",void 0),(0,R.c)([(0,q.K)("useLightmapAsShadowmap")],l.prototype,"_useLightmapAsShadowmap",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useLightmapAsShadowmap",void 0),(0,R.c)([(0,q.u)("diffuseFresnelParameters")],l.prototype,"_diffuseFresnelParameters",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"diffuseFresnelParameters",void 0),(0,R.c)([(0,q.u)("opacityFresnelParameters")],l.prototype,"_opacityFresnelParameters",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],l.prototype,"opacityFresnelParameters",void 0),(0,R.c)([(0,q.u)("reflectionFresnelParameters")],l.prototype,"_reflectionFresnelParameters",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"reflectionFresnelParameters",void 0),(0,R.c)([(0,q.u)("refractionFresnelParameters")],l.prototype,"_refractionFresnelParameters",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"refractionFresnelParameters",void 0),(0,R.c)([(0,q.u)("emissiveFresnelParameters")],l.prototype,"_emissiveFresnelParameters",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"emissiveFresnelParameters",void 0),(0,R.c)([(0,q.K)("useReflectionFresnelFromSpecular")],l.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"useReflectionFresnelFromSpecular",void 0),(0,R.c)([(0,q.K)("useGlossinessFromSpecularMapAlpha")],l.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,R.c)([(0,q.K)("maxSimultaneousLights")],l.prototype,"_maxSimultaneousLights",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsLightsDirty")],l.prototype,"maxSimultaneousLights",void 0),(0,R.c)([(0,q.K)("invertNormalMapX")],l.prototype,"_invertNormalMapX",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapX",void 0),(0,R.c)([(0,q.K)("invertNormalMapY")],l.prototype,"_invertNormalMapY",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapY",void 0),(0,R.c)([(0,q.K)("twoSidedLighting")],l.prototype,"_twoSidedLighting",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"twoSidedLighting",void 0),(0,R.c)([(0,q.K)("applyDecalMapAfterDetailMap")],l.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,R.c)([(0,q.d)("_markAllSubMeshesAsMiscDirty")],l.prototype,"applyDecalMapAfterDetailMap",void 0),(0,t.g)("BABYLON.StandardMaterial",l),E.b.DefaultMaterialFactory=Y=>new l("default material",Y)}}]);