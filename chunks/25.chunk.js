"use strict";(self.yg1iw12lizp=self.yg1iw12lizp||[]).push([[25],{12992:(L,U,x)=>{x.d(U,{b:()=>h});var mL=x(12571),p=x(12915),G=x(12574),F=x(12985),a=x(12979),o=x(13001),A=x(12961);class r extends a.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class h extends o.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(L){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(L,"DetailMap",140,new r,U),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=p.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=L._dirtyCallbacks[1]}isReadyForSubMesh(L,U,x){return!this._isEnabled||!(L._areTexturesDirty&&U.texturesEnabled&&x.getCaps().standardDerivatives&&this._texture&&F.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(L,U){if(this._isEnabled){L.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const x=U.getEngine();L._areTexturesDirty&&(x.getCaps().standardDerivatives&&this._texture&&F.c.DetailTextureEnabled&&this._isEnabled?((0,A.P)(this._texture,L,"DETAIL"),L.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):L.DETAIL=!1)}else L.DETAIL=!1}bindForSubMesh(L,U){if(!this._isEnabled)return;const x=this._material.isFrozen;L.useUbo&&x&&L.isSync||this._texture&&F.c.DetailTextureEnabled&&(L.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,A.r)(this._texture,L,"detail")),U.texturesEnabled&&this._texture&&F.c.DetailTextureEnabled&&L.setTexture("detailSampler",this._texture)}hasTexture(L){return this._texture===L}getActiveTextures(L){this._texture&&L.push(this._texture)}getAnimatables(L){this._texture&&this._texture.animations&&this._texture.animations.length>0&&L.push(this._texture)}dispose(L){var U;L&&(null===(U=this._texture)||void 0===U||U.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(L){L.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,mL.d)([(0,G.J)("detailTexture"),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"texture",void 0),(0,mL.d)([(0,G.R)()],h.prototype,"diffuseBlendLevel",void 0),(0,mL.d)([(0,G.R)()],h.prototype,"roughnessBlendLevel",void 0),(0,mL.d)([(0,G.R)()],h.prototype,"bumpLevel",void 0),(0,mL.d)([(0,G.R)(),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"normalBlendMethod",void 0),(0,mL.d)([(0,G.R)(),(0,G.d)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"isEnabled",void 0)},12979:(L,U,x)=>{x.d(U,{c:()=>mL});class mL{constructor(L){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=L,L)for(const U in L)Object.prototype.hasOwnProperty.call(L,U)&&this._setDefaultValue(U)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let L=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||L,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const L of Object.keys(this))"_"!==L[0]&&this._keys.push(L);if(this._externalProperties)for(const L in this._externalProperties)-1===this._keys.indexOf(L)&&this._keys.push(L)}isEqual(L){if(this._keys.length!==L._keys.length)return!1;for(let U=0;U<this._keys.length;U++){const x=this._keys[U];if(this[x]!==L[x])return!1}return!0}cloneTo(L){this._keys.length!==L._keys.length&&(L._keys=this._keys.slice(0));for(let U=0;U<this._keys.length;U++){const x=this._keys[U];L[x]=this[x]}}reset(){for(const L of this._keys)this._setDefaultValue(L)}_setDefaultValue(L){var U,x,mL,p;const G=(null===(U=this._externalProperties)||void 0===U||null===(x=U[L])||void 0===x?void 0:x.type)??typeof this[L],F=null===(mL=this._externalProperties)||void 0===mL||null===(p=mL[L])||void 0===p?void 0:p.default;switch(G){case"number":this[L]=F??0;break;case"string":this[L]=F??"";break;default:this[L]=F??!1}}toString(){let L="";for(let U=0;U<this._keys.length;U++){const x=this._keys[U],mL=this[x];switch(typeof mL){case"number":case"string":L+="#define "+x+" "+mL+"\n";break;default:mL&&(L+="#define "+x+"\n")}}return L}}},12985:(L,U,x)=>{x.d(U,{c:()=>p});var mL=x(12479);class p{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(L){this._DiffuseTextureEnabled!==L&&(this._DiffuseTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(L){this._BaseWeightTextureEnabled!==L&&(this._BaseWeightTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(L){this._BaseDiffuseRoughnessTextureEnabled!==L&&(this._BaseDiffuseRoughnessTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(L){this._DetailTextureEnabled!==L&&(this._DetailTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(L){this._DecalMapEnabled!==L&&(this._DecalMapEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(L){this._AmbientTextureEnabled!==L&&(this._AmbientTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(L){this._OpacityTextureEnabled!==L&&(this._OpacityTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(L){this._ReflectionTextureEnabled!==L&&(this._ReflectionTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(L){this._EmissiveTextureEnabled!==L&&(this._EmissiveTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(L){this._SpecularTextureEnabled!==L&&(this._SpecularTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(L){this._BumpTextureEnabled!==L&&(this._BumpTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(L){this._LightmapTextureEnabled!==L&&(this._LightmapTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(L){this._RefractionTextureEnabled!==L&&(this._RefractionTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(L){this._ColorGradingTextureEnabled!==L&&(this._ColorGradingTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(L){this._FresnelEnabled!==L&&(this._FresnelEnabled=L,mL.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(L){this._ClearCoatTextureEnabled!==L&&(this._ClearCoatTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(L){this._ClearCoatBumpTextureEnabled!==L&&(this._ClearCoatBumpTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(L){this._ClearCoatTintTextureEnabled!==L&&(this._ClearCoatTintTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(L){this._SheenTextureEnabled!==L&&(this._SheenTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(L){this._AnisotropicTextureEnabled!==L&&(this._AnisotropicTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(L){this._ThicknessTextureEnabled!==L&&(this._ThicknessTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(L){this._RefractionIntensityTextureEnabled!==L&&(this._RefractionIntensityTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(L){this._TranslucencyIntensityTextureEnabled!==L&&(this._TranslucencyIntensityTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(L){this._TranslucencyColorTextureEnabled!==L&&(this._TranslucencyColorTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(L){this._IridescenceTextureEnabled!==L&&(this._IridescenceTextureEnabled=L,mL.e.MarkAllMaterialsAsDirty(1))}}p._DiffuseTextureEnabled=!0,p._BaseWeightTextureEnabled=!0,p._BaseDiffuseRoughnessTextureEnabled=!0,p._DetailTextureEnabled=!0,p._DecalMapEnabled=!0,p._AmbientTextureEnabled=!0,p._OpacityTextureEnabled=!0,p._ReflectionTextureEnabled=!0,p._EmissiveTextureEnabled=!0,p._SpecularTextureEnabled=!0,p._BumpTextureEnabled=!0,p._LightmapTextureEnabled=!0,p._RefractionTextureEnabled=!0,p._ColorGradingTextureEnabled=!0,p._FresnelEnabled=!0,p._ClearCoatTextureEnabled=!0,p._ClearCoatBumpTextureEnabled=!0,p._ClearCoatTintTextureEnabled=!0,p._SheenTextureEnabled=!0,p._AnisotropicTextureEnabled=!0,p._ThicknessTextureEnabled=!0,p._RefractionIntensityTextureEnabled=!0,p._TranslucencyIntensityTextureEnabled=!0,p._TranslucencyColorTextureEnabled=!0,p._IridescenceTextureEnabled=!0},13008:(L,U,x)=>{x.d(U,{b:()=>G});var mL,p=x(12589);!function(L){L[L.Zero=0]="Zero",L[L.One=1]="One",L[L.MaxViewZ=2]="MaxViewZ"}(mL||(mL={}));class G{static CreateConfiguration(L){return G._Configurations[L]={defines:{},previousWorldMatrices:{},previousViewProjection:p.Matrix.Zero(),currentViewProjection:p.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},G._Configurations[L]}static DeleteConfiguration(L){delete G._Configurations[L]}static GetConfiguration(L){return G._Configurations[L]}static AddUniformsAndSamplers(L,U){L.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(L,U){for(const x of U)if(x.Sa)for(const U of x.Sa)U._removeDrawWrapper(L)}static PrepareDefines(L,U,x){if(!x._arePrePassDirty)return;const mL=G._Configurations[L];if(!mL)return;x.PREPASS=!0,x.PREPASS_COLOR=!1,x.PREPASS_COLOR_INDEX=-1;let p=0;for(let F=0;F<G.GeometryTextureDescriptions.length;F++){const L=G.GeometryTextureDescriptions[F],U=L.define,a=L.defineIndex,o=mL.defines[a];void 0!==o?(x[U]=!0,x[a]=o,p++):(x[U]=!1,delete x[a])}x.SCENE_MRT_COUNT=p,x.BONES_VELOCITY_ENABLED=U.useBones&&U.computeBonesUsingShaders&&U.skeleton&&!U.skeleton.isUsingTextureForMatrices&&-1===mL.excludedSkinnedMesh.indexOf(U)}static Bind(L,U,x,mL,p){const F=G._Configurations[L];if(!F)return;const a=x.PL(),o=a.getEngine();if(F.reverseCulling&&o.setStateCullFaceType(a._mirroredCameraPosition?p.cullBackFaces:!p.cullBackFaces),(void 0!==F.defines.PREPASS_VELOCITY_INDEX||void 0!==F.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(F.previousWorldMatrices[x.uniqueId]||(F.previousWorldMatrices[x.uniqueId]=mL.clone()),F.previousViewProjection||(F.previousViewProjection=a.getTransformMatrix().clone(),F.currentViewProjection=a.getTransformMatrix().clone()),F.currentViewProjection.updateFlag!==a.getTransformMatrix().updateFlag?(F.lastUpdateFrameId=o.frameId,F.previousViewProjection.p(F.currentViewProjection),F.currentViewProjection.p(a.getTransformMatrix())):F.lastUpdateFrameId!==o.frameId&&(F.lastUpdateFrameId=o.frameId,F.previousViewProjection.p(F.currentViewProjection)),U.setMatrix("previousWorld",F.previousWorldMatrices[x.uniqueId]),U.setMatrix("previousViewProjection",F.previousViewProjection),F.previousWorldMatrices[x.uniqueId]=mL.clone(),x.useBones&&x.computeBonesUsingShaders&&x.skeleton)){const L=x.skeleton;if(!L.isUsingTextureForMatrices||-1===U.getUniformIndex("boneTextureWidth")){const mL=L.getTransformMatrices(x);mL&&(F.previousBones[x.uniqueId]||(F.previousBones[x.uniqueId]=mL.slice()),U.setMatrices("mPreviousBones",F.previousBones[x.uniqueId]),F.previousBones[x.uniqueId].set(mL))}}}}G.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],G._Configurations={}},13001:(L,U,x)=>{x.d(U,{d:()=>H});var mL=x(12571),p=x(12574),G=x(12915),F=x(12440),a=x(12464),o=x(12496);const A=new RegExp("^([gimus]+)!");class r{constructor(L){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=L,this._scene=L.PL(),this._engine=this._scene.getEngine()}_addPlugin(L){for(let mL=0;mL<this._plugins.length;++mL)if(this._plugins[mL].name===L.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!L.isCompatible(this._material.shaderLanguage))throw`The plugin "${L.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const U=L.getClassName();r._MaterialPluginClassToMainDefine[U]||(r._MaterialPluginClassToMainDefine[U]="MATERIALPLUGIN_"+ ++r._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(L,U)=>this._handlePluginEvent(L,U),this._plugins.push(L),this._plugins.sort(((L,U)=>L.priority-U.priority)),this._codeInjectionPoints={};const x={};x[r._MaterialPluginClassToMainDefine[U]]={type:"boolean",default:!0};for(const mL of this._plugins)mL.collectDefines(x),this._collectPointNames("vertex",mL.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",mL.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=x,!0}_activatePlugin(L){-1===this._activePlugins.indexOf(L)&&(this._activePlugins.push(L),this._activePlugins.sort(((L,U)=>L.priority-U.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),L.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(L),this._activePluginsForExtraEvents.sort(((L,U)=>L.priority-U.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(L){for(let U=0;U<this._plugins.length;++U)if(this._plugins[U].name===L)return this._plugins[U];return null}_handlePluginEventIsReadyForSubMesh(L){let U=!0;for(const x of this._activePlugins)U=U&&x.isReadyForSubMesh(L.defines,this._scene,this._engine,L.subMesh);L.isReadyForSubMesh=U}_handlePluginEventPrepareDefinesBeforeAttributes(L){for(const U of this._activePlugins)U.prepareDefinesBeforeAttributes(L.defines,this._scene,L.mesh)}_handlePluginEventPrepareDefines(L){for(const U of this._activePlugins)U.prepareDefines(L.defines,this._scene,L.mesh)}_handlePluginEventHardBindForSubMesh(L){for(const U of this._activePluginsForExtraEvents)U.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,L.subMesh)}_handlePluginEventBindForSubMesh(L){for(const U of this._activePlugins)U.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,L.subMesh)}_handlePluginEventHasRenderTargetTextures(L){let U=!1;for(const x of this._activePluginsForExtraEvents)if(U=x.hasRenderTargetTextures(),U)break;L.hasRenderTargetTextures=U}_handlePluginEventFillRenderTargetTextures(L){for(const U of this._activePluginsForExtraEvents)U.fillRenderTargetTextures(L.renderTargets)}_handlePluginEvent(L,U){switch(L){case 512:{const L=U;for(const U of this._activePlugins)U.getActiveTextures(L.activeTextures);break}case 256:{const L=U;for(const U of this._activePlugins)U.getAnimatables(L.animatables);break}case 1024:{const L=U;let x=!1;for(const U of this._activePlugins)if(x=U.hasTexture(L.texture),x)break;L.hasTexture=x;break}case 2:{const L=U;for(const U of this._plugins)U.dispose(L.forceDisposeTextures);break}case 4:U.defineNames=this._defineNamesFromPlugins;break;case 128:{const L=U;for(const U of this._activePlugins)L.fallbackRank=U.addFallbacks(L.defines,L.fallbacks,L.fallbackRank),U.getAttributes(L.attributes,this._scene,L.mesh);this._uniformList.length>0&&L.uniforms.push(...this._uniformList),this._samplerList.length>0&&L.samplers.push(...this._samplerList),this._uboList.length>0&&L.uniformBuffersNames.push(...this._uboList),L.customCode=this._injectCustomCode(L,L.customCode);break}case 8:{const L=U;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const x=1===this._material.shaderLanguage;for(const U of this._plugins){const mL=U.getUniforms(this._material.shaderLanguage);if(mL){if(mL.ubo)for(const U of mL.ubo){if(U.size&&U.type){const mL=U.arraySize??0;if(L.ubo.addUniform(U.name,U.size,mL),x){let L;switch(U.type){case"mat4":L="mat4x4f";break;case"float":L="f32";break;default:L=`${U.type}f`}this._uboDeclaration+=mL>0?`uniform ${U.name}: array<${L}, ${mL}>;\n`:`uniform ${U.name}: ${L};\n`}else this._uboDeclaration+=`${U.type} ${U.name}${mL>0?`[${mL}]`:""};\n`}this._uniformList.push(U.name)}mL.vertex&&(this._vertexDeclaration+=mL.vertex+"\n"),mL.fragment&&(this._fragmentDeclaration+=mL.fragment+"\n")}U.getSamplers(this._samplerList),U.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(L,U){if(U)for(const x in U)this._codeInjectionPoints[L]||(this._codeInjectionPoints[L]={}),this._codeInjectionPoints[L][x]=!0}_injectCustomCode(L,U){return(x,mL)=>{var p;U&&(mL=U(x,mL)),this._uboDeclaration&&(mL=mL.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(mL=mL.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(mL=mL.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const G=null===(p=this._codeInjectionPoints)||void 0===p?void 0:p[x];if(!G)return mL;let F=null;for(let U in G){let p="";for(const mL of this._activePlugins){var r;let G=null===(r=mL.getCustomCode(x,this._material.shaderLanguage))||void 0===r?void 0:r[U];if(G){if(mL.resolveIncludes){if(null===F){const U=0;F={defines:[],indexParameters:L.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:o.d.GetShadersRepository(U),includesShadersStore:o.d.GetIncludesShadersStore(U),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Ga:this._engine.Ga,processCodeAfterIncludes:void 0}}F.isFragment="fragment"===x,(0,a.k)(G,F,(L=>G=L))}p+=G+"\n"}}if(p.length>0)if("!"===U.charAt(0)){U=U.substring(1);let L="g";if("!"===U.charAt(0))L="",U=U.substring(1);else{const x=A.exec(U);x&&x.length>=2&&(L=x[1],U=U.substring(L.length+1))}L.indexOf("g")<0&&(L+="g");const x=mL,G=new RegExp(U,L);let F=G.exec(x);for(;null!==F;){let L=p;for(let U=0;U<F.length;++U)L=L.replace("$"+U,F[U]);mL=mL.replace(F[0],L),F=G.exec(x)}}else{const L="#define "+U;mL=mL.replace(L,"\n"+p+"\n"+L)}}return mL}}}r._MaterialPluginClassToMainDefine={},r._MaterialPluginCounter=0,F.c.OnEnginesDisposedObservable.add((()=>{Y()}));const h=[];let b=!1,E=null;function Y(){h.length=0,b=!1,G.c.OnEventObservable.remove(E),E=null}var S=x(12625),V=x(12547);class H{isCompatible(L){return 0===L}_enable(L){L&&this._pluginManager._activatePlugin(this)}constructor(L,U,x,mL){let p=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],G=arguments.length>5&&void 0!==arguments[5]&&arguments[5],F=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=L,this.name=U,this.priority=x,this.resolveIncludes=F,L.pluginManager||(L.pluginManager=new r(L),L.oa.add((()=>{L.pluginManager=void 0}))),this._pluginDefineNames=mL,this._pluginManager=L.pluginManager,p&&this._pluginManager._addPlugin(this),G&&this._enable(!0),this.markAllDefinesAsDirty=L._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(L,U,x,mL){return!0}hardBindForSubMesh(L,U,x,mL){}bindForSubMesh(L,U,x,mL){}dispose(L){}getCustomCode(L){return null}collectDefines(L){if(this._pluginDefineNames)for(const U of Object.keys(this._pluginDefineNames)){if("_"===U[0])continue;const x=typeof this._pluginDefineNames[U];L[U]={type:"number"===x?"number":"string"===x?"string":"boolean"===x?"boolean":"object",default:this._pluginDefineNames[U]}}}prepareDefinesBeforeAttributes(L,U,x){}prepareDefines(L,U,x){}hasTexture(L){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(L){}getActiveTextures(L){}getAnimatables(L){}addFallbacks(L,U,x){return x}getSamplers(L){}getAttributes(L,U,x){}getUniformBuffersNames(L){}getUniforms(){return{}}copyTo(L){S.e.Clone((()=>L),this)}serialize(){return S.e.Serialize(this)}parse(L,U,x){S.e.Parse((()=>this),L,U,x)}}(0,mL.d)([(0,p.R)()],H.prototype,"name",void 0),(0,mL.d)([(0,p.R)()],H.prototype,"priority",void 0),(0,mL.d)([(0,p.R)()],H.prototype,"resolveIncludes",void 0),(0,mL.d)([(0,p.R)()],H.prototype,"registerForExtraEvents",void 0),(0,V.d)("BABYLON.MaterialPluginBase",H)},12970:(L,U,x)=>{x.d(U,{d:()=>mL});class mL{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(L){L.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(L){}bindForSubMesh(L,U,x,mL,p){if(U.prePassRenderer&&U.prePassRenderer.enabled&&U.prePassRenderer.currentRTisSceneRT&&(-1!==U.prePassRenderer.getIndex(2)||-1!==U.prePassRenderer.getIndex(11))){this.previousWorldMatrices[x.uniqueId]||(this.previousWorldMatrices[x.uniqueId]=mL.clone()),this.previousViewProjection||(this.previousViewProjection=U.getTransformMatrix().clone(),this.currentViewProjection=U.getTransformMatrix().clone());const p=U.getEngine();this.currentViewProjection.updateFlag!==U.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=p.frameId,this.previousViewProjection.p(this.currentViewProjection),this.currentViewProjection.p(U.getTransformMatrix())):this._lastUpdateFrameId!==p.frameId&&(this._lastUpdateFrameId=p.frameId,this.previousViewProjection.p(this.currentViewProjection)),L.setMatrix("previousWorld",this.previousWorldMatrices[x.uniqueId]),L.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[x.uniqueId]=mL.clone()}}}},12968:(L,U,x)=>{x.d(U,{HU:()=>K});var mL=x(12571),p=x(12574),G=x(12684),F=x(12820),a=x(12637),o=x(12666),A=x(12970),r=x(12822),h=x(12915),b=x(12979),E=x(12909),Y=x(12565),S=x(12547),V=x(12985),H=x(12906),Q=x(12992),q=x(12966),f=x(12961),v=x(12625),D=x(13008);const P={effect:null,subMesh:null};class d extends b.c{constructor(L){super(L),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(L){const U=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const x of U)this[x]=x===L}}class K extends E.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(L){this._attachImageProcessingConfiguration(L),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(L){L!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=L||this.PL().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(L){this.imageProcessingConfiguration.colorCurvesEnabled=L}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(L){this.imageProcessingConfiguration.colorGradingEnabled=L}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(L){this._imageProcessingConfiguration.toneMappingEnabled=L}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(L){this._imageProcessingConfiguration.exposure=L}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(L){this._imageProcessingConfiguration.contrast=L}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(L){this._imageProcessingConfiguration.colorGradingTexture=L}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(L){this._imageProcessingConfiguration.colorCurves=L}get canRenderToMRT(){return!0}constructor(L,U){super(L,U,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||K.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new a.QU(0,0,0),this.diffuseColor=new a.QU(1,1,1),this.specularColor=new a.QU(1,1,1),this.emissiveColor=new a.QU(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new G.h(16),this._globalAmbientColor=new a.QU(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new Q.b(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new A.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),K.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),K.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(K.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(K.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"HU"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===h.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Ha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==h.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Ha||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(L,U){let mL=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const p=U._drawWrapper;if(p.effect&&this.isFrozen&&p._wasPreviouslyReady&&p._wasPreviouslyUsingInstances===mL)return!0;U.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),U.materialDefines=new d(this._eventInfo.defineNames));const G=this.PL(),F=U.materialDefines;if(this._isReadyForSubMesh(U))return!0;const a=G.getEngine();F._needNormals=(0,f.M)(G,L,F,!0,this._maxSimultaneousLights,this._disableLighting),(0,f.T)(G,F);const h=this.needAlphaBlendingForMesh(L)&&this.PL().useOrderIndependentTransparency;if((0,f._)(G,F,this.canRenderToMRT&&!h),(0,f.X)(G,F,h),D.b.PrepareDefines(a.currentRenderPassId,L,F),F._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,F._needUVs=!1;for(let L=1;L<=6;++L)F["MAINUV"+L]=!1;if(G.texturesEnabled){if(F.DIFFUSEDIRECTUV=0,F.BUMPDIRECTUV=0,F.AMBIENTDIRECTUV=0,F.OPACITYDIRECTUV=0,F.EMISSIVEDIRECTUV=0,F.SPECULARDIRECTUV=0,F.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&K.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._diffuseTexture,F,"DIFFUSE")}else F.DIFFUSE=!1;if(this._ambientTexture&&K.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._ambientTexture,F,"AMBIENT")}else F.AMBIENT=!1;if(this._opacityTexture&&K.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._opacityTexture,F,"OPACITY"),F.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else F.OPACITY=!1;if(this._reflectionTexture&&K.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(F._needNormals=!0,F.REFLECTION=!0,F.ROUGHNESS=this._roughness>0,F.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,F.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Y.e.INVCUBIC_MODE,F.REFLECTIONMAP_3D=this._reflectionTexture.isCube,F.REFLECTIONMAP_OPPOSITEZ=F.REFLECTIONMAP_3D&&this.PL().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,F.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Y.e.EXPLICIT_MODE:F.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Y.e.PLANAR_MODE:F.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Y.e.PROJECTION_MODE:F.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Y.e.SKYBOX_MODE:F.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Y.e.SPHERICAL_MODE:F.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Y.e.EQUIRECTANGULAR_MODE:F.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Y.e.FIXED_EQUIRECTANGULAR_MODE:F.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Y.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:F.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Y.e.CUBIC_MODE:case Y.e.INVCUBIC_MODE:default:F.setReflectionMode("REFLECTIONMAP_CUBIC")}F.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else F.REFLECTION=!1,F.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&K.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._emissiveTexture,F,"EMISSIVE")}else F.EMISSIVE=!1;if(this._lightmapTexture&&K.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._lightmapTexture,F,"LIGHTMAP"),F.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,F.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else F.LIGHTMAP=!1;if(this._specularTexture&&K.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,f.P)(this._specularTexture,F,"SPECULAR"),F.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else F.SPECULAR=!1;if(G.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&K.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,f.P)(this._bumpTexture,F,"BUMP"),F.PARALLAX=this._useParallax,F.PARALLAX_RHS=G.useRightHandedSystem,F.PARALLAXOCCLUSION=this._useParallaxOcclusion,F.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else F.BUMP=!1,F.PARALLAX=!1,F.PARALLAX_RHS=!1,F.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&K.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;F._needUVs=!0,F.REFRACTION=!0,F.REFRACTIONMAP_3D=this._refractionTexture.isCube,F.RGBDREFRACTION=this._refractionTexture.isRGBD,F.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else F.REFRACTION=!1;F.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else F.DIFFUSE=!1,F.AMBIENT=!1,F.OPACITY=!1,F.REFLECTION=!1,F.EMISSIVE=!1,F.LIGHTMAP=!1,F.BUMP=!1,F.REFRACTION=!1;F.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),F.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,F.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,F.SPECULAROVERALPHA=this._useSpecularOverAlpha,F.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,F.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,F.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(L)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=F,this._eventInfo.subMesh=U,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(F._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(F),F.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,F.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(F._areFresnelDirty&&(K.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(F.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,F.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,F.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,F.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,F.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,F.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,F._needNormals=!0,F.FRESNEL=!0):F.FRESNEL=!1),F.AREALIGHTUSED)for(let x=0;x<L.lightSources.length;x++)if(!L.lightSources[x]._isReady())return!1;(0,f.S)(L,G,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(L),F,this._applyDecalMapAfterDetailMap),(0,f.I)(G,a,this,F,mL,null,U.getRenderingMesh().hasThinInstances),this._eventInfo.defines=F,this._eventInfo.mesh=L,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,f.E)(L,F,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let b=!1;if(F.isDirty){const mL=F._areLightsDisposed;F.markAsProcessed();const p=new H.b;F.REFLECTION&&p.addFallback(0,"REFLECTION"),F.SPECULAR&&p.addFallback(0,"SPECULAR"),F.BUMP&&p.addFallback(0,"BUMP"),F.PARALLAX&&p.addFallback(1,"PARALLAX"),F.PARALLAX_RHS&&p.addFallback(1,"PARALLAX_RHS"),F.PARALLAXOCCLUSION&&p.addFallback(0,"PARALLAXOCCLUSION"),F.SPECULAROVERALPHA&&p.addFallback(0,"SPECULAROVERALPHA"),F.FOG&&p.addFallback(1,"FOG"),F.POINTSIZE&&p.addFallback(0,"POINTSIZE"),F.LOGARITHMICDEPTH&&p.addFallback(0,"LOGARITHMICDEPTH"),(0,f.s)(F,p,this._maxSimultaneousLights),F.SPECULARTERM&&p.addFallback(0,"SPECULARTERM"),F.DIFFUSEFRESNEL&&p.addFallback(1,"DIFFUSEFRESNEL"),F.OPACITYFRESNEL&&p.addFallback(2,"OPACITYFRESNEL"),F.REFLECTIONFRESNEL&&p.addFallback(3,"REFLECTIONFRESNEL"),F.EMISSIVEFRESNEL&&p.addFallback(4,"EMISSIVEFRESNEL"),F.FRESNEL&&p.addFallback(4,"FRESNEL"),F.MULTIVIEW&&p.addFallback(0,"MULTIVIEW");const h=[o.h.PositionKind];F.NORMAL&&h.push(o.h.NormalKind),F.TANGENT&&h.push(o.h.TangentKind);for(let L=1;L<=6;++L)F["UV"+L]&&h.push(`uv${1===L?"":L}`);F.VERTEXCOLOR&&h.push(o.h.ColorKind),(0,f.v)(h,L,F,p),(0,f.z)(h,F),(0,f.B)(h,L,F),(0,f.t)(h,L,F);let E="default";const Y=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],S=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],V=["Material","Scene","Mesh"],Q={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:F.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=p,this._eventInfo.fallbackRank=0,this._eventInfo.defines=F,this._eventInfo.uniforms=Y,this._eventInfo.attributes=h,this._eventInfo.samplers=S,this._eventInfo.uniformBuffersNames=V,this._eventInfo.customCode=void 0,this._eventInfo.mesh=L,this._eventInfo.indexParameters=Q,this._callbackPluginEventGeneric(128,this._eventInfo),D.b.AddUniformsAndSamplers(Y,S),A.d.AddUniforms(Y),A.d.AddSamplers(S),r.d&&(r.d.PrepareUniforms(Y,F),r.d.PrepareSamplers(S,F)),(0,f.cb)({uniformsNames:Y,uniformBuffersNames:V,samplers:S,defines:F,maxSimultaneousLights:this._maxSimultaneousLights}),(0,q.e)(Y);const v={};this.customShaderNameResolve&&(E=this.customShaderNameResolve(E,Y,V,S,F,h,v));const d=F.toString(),K=U.effect;let l=G.getEngine().createEffect(E,{attributes:h,uniformsNames:Y,uniformBuffersNames:V,samplers:S,defines:d,fallbacks:p,onCompiled:this.onCompiled,onError:this.onError,indexParameters:Q,processFinalCode:v.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:F.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([x.e(41),x.e(64)]).then(x.bind(x,15167)),Promise.all([x.e(39),x.e(65)]).then(x.bind(x,15324))]):await Promise.all([Promise.all([x.e(34),x.e(67)]).then(x.bind(x,15409)),Promise.all([x.e(33),x.e(68)]).then(x.bind(x,15566))]),this._shadersLoaded=!0}},a);if(this._eventInfo.customCode=void 0,l)if(this._onEffectCreatedObservable&&(P.effect=l,P.subMesh=U,this._onEffectCreatedObservable.notifyObservers(P)),this.allowShaderHotSwapping&&K&&!l.isReady()){if(l=K,F.markAsUnprocessed(),b=this.isFrozen,mL)return F._areLightsDisposed=!0,!1}else G.resetCachedMaterial(),U.setEffect(l,F,this._materialContext)}return!(!U.effect||!U.effect.isReady())&&(F._renderId=G.getRenderId(),p._wasPreviouslyReady=!b,p._wasPreviouslyUsingInstances=mL,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const L=this._uniformBuffer;L.addUniform("diffuseLeftColor",4),L.addUniform("diffuseRightColor",4),L.addUniform("opacityParts",4),L.addUniform("reflectionLeftColor",4),L.addUniform("reflectionRightColor",4),L.addUniform("refractionLeftColor",4),L.addUniform("refractionRightColor",4),L.addUniform("emissiveLeftColor",4),L.addUniform("emissiveRightColor",4),L.addUniform("vDiffuseInfos",2),L.addUniform("vAmbientInfos",2),L.addUniform("vOpacityInfos",2),L.addUniform("vReflectionInfos",2),L.addUniform("vReflectionPosition",3),L.addUniform("vReflectionSize",3),L.addUniform("vEmissiveInfos",2),L.addUniform("vLightmapInfos",2),L.addUniform("vSpecularInfos",2),L.addUniform("vBumpInfos",3),L.addUniform("diffuseMatrix",16),L.addUniform("ambientMatrix",16),L.addUniform("opacityMatrix",16),L.addUniform("reflectionMatrix",16),L.addUniform("emissiveMatrix",16),L.addUniform("lightmapMatrix",16),L.addUniform("specularMatrix",16),L.addUniform("bumpMatrix",16),L.addUniform("vTangentSpaceParams",2),L.addUniform("pointSize",1),L.addUniform("alphaCutOff",1),L.addUniform("refractionMatrix",16),L.addUniform("vRefractionInfos",4),L.addUniform("vRefractionPosition",3),L.addUniform("vRefractionSize",3),L.addUniform("vSpecularColor",4),L.addUniform("vEmissiveColor",3),L.addUniform("vDiffuseColor",4),L.addUniform("vAmbientColor",3),L.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(L,U,x){const mL=this.PL(),p=x.materialDefines;if(!p)return;const G=x.effect;if(!G)return;this._activeEffect=G,U.getMeshUniformBuffer().bindToEffect(G,"Mesh"),U.transferToEffect(L),this._uniformBuffer.bindToEffect(G,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,mL,U,L,this.isFrozen),D.b.Bind(mL.getEngine().currentRenderPassId,this._activeEffect,U,L,this);const o=mL.activeCamera;o?this._uniformBuffer.updateFloat4("cameraInfo",o.Qa,o.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=x,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),p.OBJECTSPACE_NORMALMAP&&(L.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const A=this._mustRebind(mL,G,x,U.visibility);(0,f.b)(U,G);const r=this._uniformBuffer;if(A){if(this.bindViewProjection(G),!r.useUbo||!this.isFrozen||!r.isSync||x._drawWrapper._forceRebindOnNextCall){if(K.FresnelEnabled&&p.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(r.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),r.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&r.updateColor4("opacityParts",new a.QU(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(r.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),r.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(r.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),r.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(r.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),r.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),mL.texturesEnabled){if(this._diffuseTexture&&K.DiffuseTextureEnabled&&(r.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,f.r)(this._diffuseTexture,r,"diffuse")),this._ambientTexture&&K.AmbientTextureEnabled&&(r.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,f.r)(this._ambientTexture,r,"ambient")),this._opacityTexture&&K.OpacityTextureEnabled&&(r.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,f.r)(this._opacityTexture,r,"opacity")),this._hasAlphaChannel()&&r.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&K.ReflectionTextureEnabled){if(r.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),r.qa("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const L=this._reflectionTexture;r.updateVector3("vReflectionPosition",L.boundingBoxPosition),r.updateVector3("vReflectionSize",L.boundingBoxSize)}}else r.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&K.EmissiveTextureEnabled&&(r.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,f.r)(this._emissiveTexture,r,"emissive")),this._lightmapTexture&&K.LightmapTextureEnabled&&(r.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,f.r)(this._lightmapTexture,r,"lightmap")),this._specularTexture&&K.SpecularTextureEnabled&&(r.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,f.r)(this._specularTexture,r,"specular")),this._bumpTexture&&mL.getEngine().getCaps().standardDerivatives&&K.BumpTextureEnabled&&(r.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,f.r)(this._bumpTexture,r,"bump"),mL._mirroredCameraPosition?r.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):r.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&K.RefractionTextureEnabled){let L=1;if(this._refractionTexture.isCube||(r.qa("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(L=this._refractionTexture.depth)),r.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,L,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const L=this._refractionTexture;r.updateVector3("vRefractionPosition",L.boundingBoxPosition),r.updateVector3("vRefractionSize",L.boundingBoxSize)}}}this.pointsCloud&&r.updateFloat("pointSize",this.pointSize),r.updateColor4("vSpecularColor",this.specularColor,this.specularPower),r.updateColor3("vEmissiveColor",K.EmissiveTextureEnabled?this.emissiveColor:a.QU.BlackReadOnly),r.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),mL.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),r.updateColor3("vAmbientColor",this._globalAmbientColor)}mL.texturesEnabled&&(this._diffuseTexture&&K.DiffuseTextureEnabled&&G.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&K.AmbientTextureEnabled&&G.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&K.OpacityTextureEnabled&&G.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&K.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?G.setTexture("reflectionCubeSampler",this._reflectionTexture):G.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&K.EmissiveTextureEnabled&&G.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&K.LightmapTextureEnabled&&G.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&K.SpecularTextureEnabled&&G.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&mL.getEngine().getCaps().standardDerivatives&&K.BumpTextureEnabled&&G.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&K.RefractionTextureEnabled&&(this._refractionTexture.isCube?G.setTexture("refractionCubeSampler",this._refractionTexture):G.setTexture("refraction2DSampler",this._refractionTexture))),this.PL().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(U)&&this.PL().depthPeelingRenderer.bind(G),this._eventInfo.subMesh=x,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,q.i)(G,this,mL),this.bindEyePosition(G)}else mL.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(A||!this.isFrozen){var h;if(mL.lightsEnabled&&!this._disableLighting&&(0,f.i)(mL,U,G,p,this._maxSimultaneousLights),(mL.fogEnabled&&U.applyFog&&mL.fogMode!==F.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||U.receiveShadows||p.PREPASS)&&this.bindView(G),(0,f.f)(mL,U,G),p.NUM_MORPH_INFLUENCERS&&(0,f.m)(U,G),p.BAKED_VERTEX_ANIMATION_TEXTURE)null===(h=U.bakedVertexAnimationManager)||void 0===h||h.bind(G,p.INSTANCES);this.useLogarithmicDepth&&(0,f.l)(p,G,mL),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(U,this._activeEffect,x),r.update()}getAnimatables(){const L=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&L.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&L.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&L.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&L.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&L.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&L.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&L.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&L.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&L.push(this._refractionTexture),L}getActiveTextures(){const L=super.getActiveTextures();return this._diffuseTexture&&L.push(this._diffuseTexture),this._ambientTexture&&L.push(this._ambientTexture),this._opacityTexture&&L.push(this._opacityTexture),this._reflectionTexture&&L.push(this._reflectionTexture),this._emissiveTexture&&L.push(this._emissiveTexture),this._specularTexture&&L.push(this._specularTexture),this._bumpTexture&&L.push(this._bumpTexture),this._lightmapTexture&&L.push(this._lightmapTexture),this._refractionTexture&&L.push(this._refractionTexture),L}hasTexture(L){return!!super.hasTexture(L)||(this._diffuseTexture===L||(this._ambientTexture===L||(this._opacityTexture===L||(this._reflectionTexture===L||(this._emissiveTexture===L||(this._specularTexture===L||(this._bumpTexture===L||(this._lightmapTexture===L||this._refractionTexture===L))))))))}dispose(L,U){var x,mL,p,G,F,a,o,A,r;U&&(null===(x=this._diffuseTexture)||void 0===x||x.dispose(),null===(mL=this._ambientTexture)||void 0===mL||mL.dispose(),null===(p=this._opacityTexture)||void 0===p||p.dispose(),null===(G=this._reflectionTexture)||void 0===G||G.dispose(),null===(F=this._emissiveTexture)||void 0===F||F.dispose(),null===(a=this._specularTexture)||void 0===a||a.dispose(),null===(o=this._bumpTexture)||void 0===o||o.dispose(),null===(A=this._lightmapTexture)||void 0===A||A.dispose(),null===(r=this._refractionTexture)||void 0===r||r.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(L,U)}clone(L){let U=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],x=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const mL=v.e.Clone((()=>new K(L,this.PL())),this,{cloneTexturesOnlyOnce:U});return mL.name=L,mL.id=L,this.Aa.copyTo(mL.Aa),this._clonePlugins(mL,x),mL}static Parse(L,U,x){const mL=v.e.Parse((()=>new K(L.name,U)),L,U,x);return L.Aa&&mL.Aa.parse(L.Aa,U,x),h.c._ParsePlugins(L,mL,U,x),mL}static get DiffuseTextureEnabled(){return V.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(L){V.c.DiffuseTextureEnabled=L}static get DetailTextureEnabled(){return V.c.DetailTextureEnabled}static set DetailTextureEnabled(L){V.c.DetailTextureEnabled=L}static get AmbientTextureEnabled(){return V.c.AmbientTextureEnabled}static set AmbientTextureEnabled(L){V.c.AmbientTextureEnabled=L}static get OpacityTextureEnabled(){return V.c.OpacityTextureEnabled}static set OpacityTextureEnabled(L){V.c.OpacityTextureEnabled=L}static get ReflectionTextureEnabled(){return V.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(L){V.c.ReflectionTextureEnabled=L}static get EmissiveTextureEnabled(){return V.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(L){V.c.EmissiveTextureEnabled=L}static get SpecularTextureEnabled(){return V.c.SpecularTextureEnabled}static set SpecularTextureEnabled(L){V.c.SpecularTextureEnabled=L}static get BumpTextureEnabled(){return V.c.BumpTextureEnabled}static set BumpTextureEnabled(L){V.c.BumpTextureEnabled=L}static get LightmapTextureEnabled(){return V.c.LightmapTextureEnabled}static set LightmapTextureEnabled(L){V.c.LightmapTextureEnabled=L}static get RefractionTextureEnabled(){return V.c.RefractionTextureEnabled}static set RefractionTextureEnabled(L){V.c.RefractionTextureEnabled=L}static get ColorGradingTextureEnabled(){return V.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(L){V.c.ColorGradingTextureEnabled=L}static get FresnelEnabled(){return V.c.FresnelEnabled}static set FresnelEnabled(L){V.c.FresnelEnabled=L}}K.ForceGLSL=!1,(0,mL.d)([(0,p.J)("diffuseTexture")],K.prototype,"_diffuseTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],K.prototype,"diffuseTexture",void 0),(0,mL.d)([(0,p.J)("ambientTexture")],K.prototype,"_ambientTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"ambientTexture",void 0),(0,mL.d)([(0,p.J)("opacityTexture")],K.prototype,"_opacityTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],K.prototype,"opacityTexture",void 0),(0,mL.d)([(0,p.J)("reflectionTexture")],K.prototype,"_reflectionTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"reflectionTexture",void 0),(0,mL.d)([(0,p.J)("emissiveTexture")],K.prototype,"_emissiveTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"emissiveTexture",void 0),(0,mL.d)([(0,p.J)("specularTexture")],K.prototype,"_specularTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"specularTexture",void 0),(0,mL.d)([(0,p.J)("bumpTexture")],K.prototype,"_bumpTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"bumpTexture",void 0),(0,mL.d)([(0,p.J)("lightmapTexture")],K.prototype,"_lightmapTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"lightmapTexture",void 0),(0,mL.d)([(0,p.J)("refractionTexture")],K.prototype,"_refractionTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"refractionTexture",void 0),(0,mL.d)([(0,p.m)("ambient")],K.prototype,"ambientColor",void 0),(0,mL.d)([(0,p.m)("diffuse")],K.prototype,"diffuseColor",void 0),(0,mL.d)([(0,p.m)("specular")],K.prototype,"specularColor",void 0),(0,mL.d)([(0,p.m)("emissive")],K.prototype,"emissiveColor",void 0),(0,mL.d)([(0,p.R)()],K.prototype,"specularPower",void 0),(0,mL.d)([(0,p.R)("useAlphaFromDiffuseTexture")],K.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],K.prototype,"useAlphaFromDiffuseTexture",void 0),(0,mL.d)([(0,p.R)("useEmissiveAsIllumination")],K.prototype,"_useEmissiveAsIllumination",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useEmissiveAsIllumination",void 0),(0,mL.d)([(0,p.R)("linkEmissiveWithDiffuse")],K.prototype,"_linkEmissiveWithDiffuse",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"linkEmissiveWithDiffuse",void 0),(0,mL.d)([(0,p.R)("useSpecularOverAlpha")],K.prototype,"_useSpecularOverAlpha",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useSpecularOverAlpha",void 0),(0,mL.d)([(0,p.R)("useReflectionOverAlpha")],K.prototype,"_useReflectionOverAlpha",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useReflectionOverAlpha",void 0),(0,mL.d)([(0,p.R)("disableLighting")],K.prototype,"_disableLighting",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsLightsDirty")],K.prototype,"disableLighting",void 0),(0,mL.d)([(0,p.R)("useObjectSpaceNormalMap")],K.prototype,"_useObjectSpaceNormalMap",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useObjectSpaceNormalMap",void 0),(0,mL.d)([(0,p.R)("useParallax")],K.prototype,"_useParallax",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useParallax",void 0),(0,mL.d)([(0,p.R)("useParallaxOcclusion")],K.prototype,"_useParallaxOcclusion",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useParallaxOcclusion",void 0),(0,mL.d)([(0,p.R)()],K.prototype,"parallaxScaleBias",void 0),(0,mL.d)([(0,p.R)("roughness")],K.prototype,"_roughness",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"roughness",void 0),(0,mL.d)([(0,p.R)()],K.prototype,"indexOfRefraction",void 0),(0,mL.d)([(0,p.R)()],K.prototype,"invertRefractionY",void 0),(0,mL.d)([(0,p.R)()],K.prototype,"alphaCutOff",void 0),(0,mL.d)([(0,p.R)("useLightmapAsShadowmap")],K.prototype,"_useLightmapAsShadowmap",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useLightmapAsShadowmap",void 0),(0,mL.d)([(0,p.t)("diffuseFresnelParameters")],K.prototype,"_diffuseFresnelParameters",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],K.prototype,"diffuseFresnelParameters",void 0),(0,mL.d)([(0,p.t)("opacityFresnelParameters")],K.prototype,"_opacityFresnelParameters",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],K.prototype,"opacityFresnelParameters",void 0),(0,mL.d)([(0,p.t)("reflectionFresnelParameters")],K.prototype,"_reflectionFresnelParameters",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],K.prototype,"reflectionFresnelParameters",void 0),(0,mL.d)([(0,p.t)("refractionFresnelParameters")],K.prototype,"_refractionFresnelParameters",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],K.prototype,"refractionFresnelParameters",void 0),(0,mL.d)([(0,p.t)("emissiveFresnelParameters")],K.prototype,"_emissiveFresnelParameters",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],K.prototype,"emissiveFresnelParameters",void 0),(0,mL.d)([(0,p.R)("useReflectionFresnelFromSpecular")],K.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsFresnelDirty")],K.prototype,"useReflectionFresnelFromSpecular",void 0),(0,mL.d)([(0,p.R)("useGlossinessFromSpecularMapAlpha")],K.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,mL.d)([(0,p.R)("maxSimultaneousLights")],K.prototype,"_maxSimultaneousLights",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsLightsDirty")],K.prototype,"maxSimultaneousLights",void 0),(0,mL.d)([(0,p.R)("invertNormalMapX")],K.prototype,"_invertNormalMapX",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"invertNormalMapX",void 0),(0,mL.d)([(0,p.R)("invertNormalMapY")],K.prototype,"_invertNormalMapY",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"invertNormalMapY",void 0),(0,mL.d)([(0,p.R)("twoSidedLighting")],K.prototype,"_twoSidedLighting",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsTexturesDirty")],K.prototype,"twoSidedLighting",void 0),(0,mL.d)([(0,p.R)("applyDecalMapAfterDetailMap")],K.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,mL.d)([(0,p.d)("_markAllSubMeshesAsMiscDirty")],K.prototype,"applyDecalMapAfterDetailMap",void 0),(0,S.d)("BABYLON.StandardMaterial",K),F.e.DefaultMaterialFactory=L=>new K("default material",L)}}]);