"use strict";(self["9jl1vn4ei5r"]=self["9jl1vn4ei5r"]||[]).push([[25],{12199:(M,p,b)=>{b.d(p,{d:()=>F});var Q=b(11784),q=b(12129),B=b(11788),k=b(12190),u=b(12186),T=b(12207),O=b(12167);class H extends u.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class F extends T.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(M){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(M,"DetailMap",140,new H,p),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=q.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=M._dirtyCallbacks[1]}isReadyForSubMesh(M,p,b){return!this._isEnabled||!(M._areTexturesDirty&&p.texturesEnabled&&b.getCaps().standardDerivatives&&this._texture&&k.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(M,p){if(this._isEnabled){M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const b=p.getEngine();M._areTexturesDirty&&(b.getCaps().standardDerivatives&&this._texture&&k.c.DetailTextureEnabled&&this._isEnabled?((0,O.D)(this._texture,M,"DETAIL"),M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):M.DETAIL=!1)}else M.DETAIL=!1}bindForSubMesh(M,p){if(!this._isEnabled)return;const b=this._material.isFrozen;M.useUbo&&b&&M.isSync||this._texture&&k.c.DetailTextureEnabled&&(M.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,O.m)(this._texture,M,"detail")),p.texturesEnabled&&this._texture&&k.c.DetailTextureEnabled&&M.setTexture("detailSampler",this._texture)}hasTexture(M){return this._texture===M}getActiveTextures(M){this._texture&&M.push(this._texture)}getAnimatables(M){this._texture&&this._texture.animations&&this._texture.animations.length>0&&M.push(this._texture)}dispose(M){var p;M&&(null===(p=this._texture)||void 0===p||p.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(M){M.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Q.c)([(0,B.J)("detailTexture"),(0,B.e)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"texture",void 0),(0,Q.c)([(0,B.R)()],F.prototype,"diffuseBlendLevel",void 0),(0,Q.c)([(0,B.R)()],F.prototype,"roughnessBlendLevel",void 0),(0,Q.c)([(0,B.R)()],F.prototype,"bumpLevel",void 0),(0,Q.c)([(0,B.R)(),(0,B.e)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"normalBlendMethod",void 0),(0,Q.c)([(0,B.R)(),(0,B.e)("_markAllSubMeshesAsTexturesDirty")],F.prototype,"isEnabled",void 0)},12186:(M,p,b)=>{b.d(p,{e:()=>Q});class Q{constructor(M){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=M,M)for(const p in M)Object.prototype.hasOwnProperty.call(M,p)&&this._setDefaultValue(p)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||M,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const M of Object.keys(this))"_"!==M[0]&&this._keys.push(M);if(this._externalProperties)for(const M in this._externalProperties)-1===this._keys.indexOf(M)&&this._keys.push(M)}isEqual(M){if(this._keys.length!==M._keys.length)return!1;for(let p=0;p<this._keys.length;p++){const b=this._keys[p];if(this[b]!==M[b])return!1}return!0}cloneTo(M){this._keys.length!==M._keys.length&&(M._keys=this._keys.slice(0));for(let p=0;p<this._keys.length;p++){const b=this._keys[p];M[b]=this[b]}}reset(){for(const M of this._keys)this._setDefaultValue(M)}_setDefaultValue(M){var p,b,Q,q;const B=(null===(p=this._externalProperties)||void 0===p||null===(b=p[M])||void 0===b?void 0:b.type)??typeof this[M],k=null===(Q=this._externalProperties)||void 0===Q||null===(q=Q[M])||void 0===q?void 0:q.default;switch(B){case"number":this[M]=k??0;break;case"string":this[M]=k??"";break;default:this[M]=k??!1}}toString(){let M="";for(let p=0;p<this._keys.length;p++){const b=this._keys[p],Q=this[b];switch(typeof Q){case"number":case"string":M+="#define "+b+" "+Q+"\n";break;default:Q&&(M+="#define "+b+"\n")}}return M}}},12190:(M,p,b)=>{b.d(p,{c:()=>q});var Q=b(11700);class q{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){this._DiffuseTextureEnabled!==M&&(this._DiffuseTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(M){this._BaseWeightTextureEnabled!==M&&(this._BaseWeightTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(M){this._BaseDiffuseRoughnessTextureEnabled!==M&&(this._BaseDiffuseRoughnessTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(M){this._DetailTextureEnabled!==M&&(this._DetailTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(M){this._DecalMapEnabled!==M&&(this._DecalMapEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(M){this._AmbientTextureEnabled!==M&&(this._AmbientTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(M){this._OpacityTextureEnabled!==M&&(this._OpacityTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){this._ReflectionTextureEnabled!==M&&(this._ReflectionTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){this._EmissiveTextureEnabled!==M&&(this._EmissiveTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(M){this._SpecularTextureEnabled!==M&&(this._SpecularTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(M){this._BumpTextureEnabled!==M&&(this._BumpTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(M){this._LightmapTextureEnabled!==M&&(this._LightmapTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(M){this._RefractionTextureEnabled!==M&&(this._RefractionTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){this._ColorGradingTextureEnabled!==M&&(this._ColorGradingTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(M){this._FresnelEnabled!==M&&(this._FresnelEnabled=M,Q.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(M){this._ClearCoatTextureEnabled!==M&&(this._ClearCoatTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(M){this._ClearCoatBumpTextureEnabled!==M&&(this._ClearCoatBumpTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(M){this._ClearCoatTintTextureEnabled!==M&&(this._ClearCoatTintTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(M){this._SheenTextureEnabled!==M&&(this._SheenTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(M){this._AnisotropicTextureEnabled!==M&&(this._AnisotropicTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(M){this._ThicknessTextureEnabled!==M&&(this._ThicknessTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(M){this._RefractionIntensityTextureEnabled!==M&&(this._RefractionIntensityTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(M){this._TranslucencyIntensityTextureEnabled!==M&&(this._TranslucencyIntensityTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(M){this._TranslucencyColorTextureEnabled!==M&&(this._TranslucencyColorTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(M){this._IridescenceTextureEnabled!==M&&(this._IridescenceTextureEnabled=M,Q.c.MarkAllMaterialsAsDirty(1))}}q._DiffuseTextureEnabled=!0,q._BaseWeightTextureEnabled=!0,q._BaseDiffuseRoughnessTextureEnabled=!0,q._DetailTextureEnabled=!0,q._DecalMapEnabled=!0,q._AmbientTextureEnabled=!0,q._OpacityTextureEnabled=!0,q._ReflectionTextureEnabled=!0,q._EmissiveTextureEnabled=!0,q._SpecularTextureEnabled=!0,q._BumpTextureEnabled=!0,q._LightmapTextureEnabled=!0,q._RefractionTextureEnabled=!0,q._ColorGradingTextureEnabled=!0,q._FresnelEnabled=!0,q._ClearCoatTextureEnabled=!0,q._ClearCoatBumpTextureEnabled=!0,q._ClearCoatTintTextureEnabled=!0,q._SheenTextureEnabled=!0,q._AnisotropicTextureEnabled=!0,q._ThicknessTextureEnabled=!0,q._RefractionIntensityTextureEnabled=!0,q._TranslucencyIntensityTextureEnabled=!0,q._TranslucencyColorTextureEnabled=!0,q._IridescenceTextureEnabled=!0},12214:(M,p,b)=>{b.d(p,{b:()=>B});var Q,q=b(11796);!function(M){M[M.Zero=0]="Zero",M[M.One=1]="One",M[M.MaxViewZ=2]="MaxViewZ"}(Q||(Q={}));class B{static CreateConfiguration(M){return B._Configurations[M]={defines:{},previousWorldMatrices:{},previousViewProjection:q.Matrix.Zero(),currentViewProjection:q.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},B._Configurations[M]}static DeleteConfiguration(M){delete B._Configurations[M]}static GetConfiguration(M){return B._Configurations[M]}static AddUniformsAndSamplers(M,p){M.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(M,p){for(const b of p)if(b.Tb)for(const p of b.Tb)p._removeDrawWrapper(M)}static PrepareDefines(M,p,b){if(!b._arePrePassDirty)return;const Q=B._Configurations[M];if(!Q)return;b.PREPASS=!0,b.PREPASS_COLOR=!1,b.PREPASS_COLOR_INDEX=-1;let q=0;for(let k=0;k<B.GeometryTextureDescriptions.length;k++){const M=B.GeometryTextureDescriptions[k],p=M.define,u=M.defineIndex,T=Q.defines[u];void 0!==T?(b[p]=!0,b[u]=T,q++):(b[p]=!1,delete b[u])}b.SCENE_MRT_COUNT=q,b.BONES_VELOCITY_ENABLED=p.useBones&&p.computeBonesUsingShaders&&p.skeleton&&!p.skeleton.isUsingTextureForMatrices&&-1===Q.excludedSkinnedMesh.indexOf(p)}static Bind(M,p,b,Q,q){const k=B._Configurations[M];if(!k)return;const u=b.RM(),T=u.getEngine();if(k.reverseCulling&&T.setStateCullFaceType(u._mirroredCameraPosition?q.cullBackFaces:!q.cullBackFaces),(void 0!==k.defines.PREPASS_VELOCITY_INDEX||void 0!==k.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(k.previousWorldMatrices[b.uniqueId]||(k.previousWorldMatrices[b.uniqueId]=Q.clone()),k.previousViewProjection||(k.previousViewProjection=u.getTransformMatrix().clone(),k.currentViewProjection=u.getTransformMatrix().clone()),k.currentViewProjection.updateFlag!==u.getTransformMatrix().updateFlag?(k.lastUpdateFrameId=T.frameId,k.previousViewProjection.B(k.currentViewProjection),k.currentViewProjection.B(u.getTransformMatrix())):k.lastUpdateFrameId!==T.frameId&&(k.lastUpdateFrameId=T.frameId,k.previousViewProjection.B(k.currentViewProjection)),p.setMatrix("previousWorld",k.previousWorldMatrices[b.uniqueId]),p.setMatrix("previousViewProjection",k.previousViewProjection),k.previousWorldMatrices[b.uniqueId]=Q.clone(),b.useBones&&b.computeBonesUsingShaders&&b.skeleton)){const M=b.skeleton;if(!M.isUsingTextureForMatrices||-1===p.getUniformIndex("boneTextureWidth")){const Q=M.getTransformMatrices(b);Q&&(k.previousBones[b.uniqueId]||(k.previousBones[b.uniqueId]=Q.slice()),p.setMatrices("mPreviousBones",k.previousBones[b.uniqueId]),k.previousBones[b.uniqueId].set(Q))}}}}B.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],B._Configurations={}},12207:(M,p,b)=>{b.d(p,{c:()=>K});var Q=b(11784),q=b(11788),B=b(12129),k=b(11664),u=b(11681),T=b(11709);const O=new RegExp("^([gimus]+)!");class H{constructor(M){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=M,this._scene=M.RM(),this._engine=this._scene.getEngine()}_addPlugin(M){for(let Q=0;Q<this._plugins.length;++Q)if(this._plugins[Q].name===M.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!M.isCompatible(this._material.shaderLanguage))throw`The plugin "${M.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const p=M.getClassName();H._MaterialPluginClassToMainDefine[p]||(H._MaterialPluginClassToMainDefine[p]="MATERIALPLUGIN_"+ ++H._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(M,p)=>this._handlePluginEvent(M,p),this._plugins.push(M),this._plugins.sort(((M,p)=>M.priority-p.priority)),this._codeInjectionPoints={};const b={};b[H._MaterialPluginClassToMainDefine[p]]={type:"boolean",default:!0};for(const Q of this._plugins)Q.collectDefines(b),this._collectPointNames("vertex",Q.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Q.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=b,!0}_activatePlugin(M){-1===this._activePlugins.indexOf(M)&&(this._activePlugins.push(M),this._activePlugins.sort(((M,p)=>M.priority-p.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),M.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(M),this._activePluginsForExtraEvents.sort(((M,p)=>M.priority-p.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(M){for(let p=0;p<this._plugins.length;++p)if(this._plugins[p].name===M)return this._plugins[p];return null}_handlePluginEventIsReadyForSubMesh(M){let p=!0;for(const b of this._activePlugins)p=p&&b.isReadyForSubMesh(M.defines,this._scene,this._engine,M.subMesh);M.isReadyForSubMesh=p}_handlePluginEventPrepareDefinesBeforeAttributes(M){for(const p of this._activePlugins)p.prepareDefinesBeforeAttributes(M.defines,this._scene,M.mesh)}_handlePluginEventPrepareDefines(M){for(const p of this._activePlugins)p.prepareDefines(M.defines,this._scene,M.mesh)}_handlePluginEventHardBindForSubMesh(M){for(const p of this._activePluginsForExtraEvents)p.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventBindForSubMesh(M){for(const p of this._activePlugins)p.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventHasRenderTargetTextures(M){let p=!1;for(const b of this._activePluginsForExtraEvents)if(p=b.hasRenderTargetTextures(),p)break;M.hasRenderTargetTextures=p}_handlePluginEventFillRenderTargetTextures(M){for(const p of this._activePluginsForExtraEvents)p.fillRenderTargetTextures(M.renderTargets)}_handlePluginEvent(M,p){switch(M){case 512:{const M=p;for(const p of this._activePlugins)p.getActiveTextures(M.activeTextures);break}case 256:{const M=p;for(const p of this._activePlugins)p.getAnimatables(M.animatables);break}case 1024:{const M=p;let b=!1;for(const p of this._activePlugins)if(b=p.hasTexture(M.texture),b)break;M.hasTexture=b;break}case 2:{const M=p;for(const p of this._plugins)p.dispose(M.forceDisposeTextures);break}case 4:p.defineNames=this._defineNamesFromPlugins;break;case 128:{const M=p;for(const p of this._activePlugins)M.fallbackRank=p.addFallbacks(M.defines,M.fallbacks,M.fallbackRank),p.getAttributes(M.attributes,this._scene,M.mesh);this._uniformList.length>0&&M.uniforms.push(...this._uniformList),this._samplerList.length>0&&M.samplers.push(...this._samplerList),this._uboList.length>0&&M.uniformBuffersNames.push(...this._uboList),M.customCode=this._injectCustomCode(M,M.customCode);break}case 8:{const M=p;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const b=1===this._material.shaderLanguage;for(const p of this._plugins){const Q=p.getUniforms(this._material.shaderLanguage);if(Q){if(Q.ubo)for(const p of Q.ubo){if(p.size&&p.type){const Q=p.arraySize??0;if(M.ubo.addUniform(p.name,p.size,Q),b){let M;switch(p.type){case"mat4":M="mat4x4f";break;case"float":M="f32";break;default:M=`${p.type}f`}this._uboDeclaration+=Q>0?`uniform ${p.name}: array<${M}, ${Q}>;\n`:`uniform ${p.name}: ${M};\n`}else this._uboDeclaration+=`${p.type} ${p.name}${Q>0?`[${Q}]`:""};\n`}this._uniformList.push(p.name)}Q.vertex&&(this._vertexDeclaration+=Q.vertex+"\n"),Q.fragment&&(this._fragmentDeclaration+=Q.fragment+"\n")}p.getSamplers(this._samplerList),p.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(M,p){if(p)for(const b in p)this._codeInjectionPoints[M]||(this._codeInjectionPoints[M]={}),this._codeInjectionPoints[M][b]=!0}_injectCustomCode(M,p){return(b,Q)=>{var q;p&&(Q=p(b,Q)),this._uboDeclaration&&(Q=Q.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Q=Q.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Q=Q.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const B=null===(q=this._codeInjectionPoints)||void 0===q?void 0:q[b];if(!B)return Q;let k=null;for(let p in B){let q="";for(const Q of this._activePlugins){var H;let B=null===(H=Q.getCustomCode(b,this._material.shaderLanguage))||void 0===H?void 0:H[p];if(B){if(Q.resolveIncludes){if(null===k){const p=0;k={defines:[],indexParameters:M.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:T.d.GetShadersRepository(p),includesShadersStore:T.d.GetIncludesShadersStore(p),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}k.isFragment="fragment"===b,(0,u.h)(B,k,(M=>B=M))}q+=B+"\n"}}if(q.length>0)if("!"===p.charAt(0)){p=p.substring(1);let M="g";if("!"===p.charAt(0))M="",p=p.substring(1);else{const b=O.exec(p);b&&b.length>=2&&(M=b[1],p=p.substring(M.length+1))}M.indexOf("g")<0&&(M+="g");const b=Q,B=new RegExp(p,M);let k=B.exec(b);for(;null!==k;){let M=q;for(let p=0;p<k.length;++p)M=M.replace("$"+p,k[p]);Q=Q.replace(k[0],M),k=B.exec(b)}}else{const M="#define "+p;Q=Q.replace(M,"\n"+q+"\n"+M)}}return Q}}}H._MaterialPluginClassToMainDefine={},H._MaterialPluginCounter=0,k.c.OnEnginesDisposedObservable.add((()=>{i()}));const F=[];let o=!1,W=null;function i(){F.length=0,o=!1,B.e.OnEventObservable.remove(W),W=null}var A=b(11823),j=b(11757);class K{isCompatible(M){return 0===M}_enable(M){M&&this._pluginManager._activatePlugin(this)}constructor(M,p,b,Q){let q=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],B=arguments.length>5&&void 0!==arguments[5]&&arguments[5],k=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=M,this.name=p,this.priority=b,this.resolveIncludes=k,M.pluginManager||(M.pluginManager=new H(M),M.bb.add((()=>{M.pluginManager=void 0}))),this._pluginDefineNames=Q,this._pluginManager=M.pluginManager,q&&this._pluginManager._addPlugin(this),B&&this._enable(!0),this.markAllDefinesAsDirty=M._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(M,p,b,Q){return!0}hardBindForSubMesh(M,p,b,Q){}bindForSubMesh(M,p,b,Q){}dispose(M){}getCustomCode(M){return null}collectDefines(M){if(this._pluginDefineNames)for(const p of Object.keys(this._pluginDefineNames)){if("_"===p[0])continue;const b=typeof this._pluginDefineNames[p];M[p]={type:"number"===b?"number":"string"===b?"string":"boolean"===b?"boolean":"object",default:this._pluginDefineNames[p]}}}prepareDefinesBeforeAttributes(M,p,b){}prepareDefines(M,p,b){}hasTexture(M){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(M){}getActiveTextures(M){}getAnimatables(M){}addFallbacks(M,p,b){return b}getSamplers(M){}getAttributes(M,p,b){}getUniformBuffersNames(M){}getUniforms(){return{}}copyTo(M){A.b.Clone((()=>M),this)}serialize(){return A.b.Serialize(this)}parse(M,p,b){A.b.Parse((()=>this),M,p,b)}}(0,Q.c)([(0,q.R)()],K.prototype,"name",void 0),(0,Q.c)([(0,q.R)()],K.prototype,"priority",void 0),(0,Q.c)([(0,q.R)()],K.prototype,"resolveIncludes",void 0),(0,Q.c)([(0,q.R)()],K.prototype,"registerForExtraEvents",void 0),(0,j.g)("BABYLON.MaterialPluginBase",K)},12178:(M,p,b)=>{b.d(p,{e:()=>Q});class Q{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(M){M.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(M){}bindForSubMesh(M,p,b,Q,q){if(p.prePassRenderer&&p.prePassRenderer.enabled&&p.prePassRenderer.currentRTisSceneRT&&(-1!==p.prePassRenderer.getIndex(2)||-1!==p.prePassRenderer.getIndex(11))){this.previousWorldMatrices[b.uniqueId]||(this.previousWorldMatrices[b.uniqueId]=Q.clone()),this.previousViewProjection||(this.previousViewProjection=p.getTransformMatrix().clone(),this.currentViewProjection=p.getTransformMatrix().clone());const q=p.getEngine();this.currentViewProjection.updateFlag!==p.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.B(this.currentViewProjection),this.currentViewProjection.B(p.getTransformMatrix())):this._lastUpdateFrameId!==q.frameId&&(this._lastUpdateFrameId=q.frameId,this.previousViewProjection.B(this.currentViewProjection)),M.setMatrix("previousWorld",this.previousWorldMatrices[b.uniqueId]),M.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[b.uniqueId]=Q.clone()}}}},12175:(M,p,b)=>{b.d(p,{Dp:()=>x});var Q=b(11784),q=b(11788),B=b(11874),k=b(12033),u=b(11833),T=b(11857),O=b(12178),H=b(12038),F=b(12129),o=b(12186),W=b(12122),i=b(11780),A=b(11757),j=b(12190),K=b(12116),D=b(12199),a=b(12173),s=b(12167),S=b(11823),f=b(12214);const R={effect:null,subMesh:null};class y extends o.e{constructor(M){super(M),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(M){const p=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const b of p)this[b]=b===M}}class x extends W.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(M){this._attachImageProcessingConfiguration(M),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(M){M!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=M||this.RM().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(M){this.imageProcessingConfiguration.colorCurvesEnabled=M}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(M){this.imageProcessingConfiguration.colorGradingEnabled=M}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(M){this._imageProcessingConfiguration.toneMappingEnabled=M}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(M){this._imageProcessingConfiguration.exposure=M}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(M){this._imageProcessingConfiguration.contrast=M}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(M){this._imageProcessingConfiguration.colorGradingTexture=M}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(M){this._imageProcessingConfiguration.colorCurves=M}get canRenderToMRT(){return!0}constructor(M,p){super(M,p,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||x.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new u.ap(0,0,0),this.diffuseColor=new u.ap(1,1,1),this.specularColor=new u.ap(1,1,1),this.emissiveColor=new u.ap(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new B.f(16),this._globalAmbientColor=new u.ap(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new D.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new O.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),x.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),x.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(x.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(x.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Dp"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===F.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Hb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==F.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Hb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(M,p){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const q=p._drawWrapper;if(q.effect&&this.isFrozen&&q._wasPreviouslyReady&&q._wasPreviouslyUsingInstances===Q)return!0;p.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),p.materialDefines=new y(this._eventInfo.defineNames));const B=this.RM(),k=p.materialDefines;if(this._isReadyForSubMesh(p))return!0;const u=B.getEngine();k._needNormals=(0,s.C)(B,M,k,!0,this._maxSimultaneousLights,this._disableLighting),(0,s.J)(B,k);const F=this.needAlphaBlendingForMesh(M)&&this.RM().useOrderIndependentTransparency;if((0,s.M)(B,k,this.canRenderToMRT&&!F),(0,s.L)(B,k,F),f.b.PrepareDefines(u.currentRenderPassId,M,k),k._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,k._needUVs=!1;for(let M=1;M<=6;++M)k["MAINUV"+M]=!1;if(B.texturesEnabled){if(k.DIFFUSEDIRECTUV=0,k.BUMPDIRECTUV=0,k.AMBIENTDIRECTUV=0,k.OPACITYDIRECTUV=0,k.EMISSIVEDIRECTUV=0,k.SPECULARDIRECTUV=0,k.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&x.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._diffuseTexture,k,"DIFFUSE")}else k.DIFFUSE=!1;if(this._ambientTexture&&x.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._ambientTexture,k,"AMBIENT")}else k.AMBIENT=!1;if(this._opacityTexture&&x.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._opacityTexture,k,"OPACITY"),k.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else k.OPACITY=!1;if(this._reflectionTexture&&x.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(k._needNormals=!0,k.REFLECTION=!0,k.ROUGHNESS=this._roughness>0,k.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,k.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===i.b.INVCUBIC_MODE,k.REFLECTIONMAP_3D=this._reflectionTexture.isCube,k.REFLECTIONMAP_OPPOSITEZ=k.REFLECTIONMAP_3D&&this.RM().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,k.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case i.b.EXPLICIT_MODE:k.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case i.b.PLANAR_MODE:k.setReflectionMode("REFLECTIONMAP_PLANAR");break;case i.b.PROJECTION_MODE:k.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case i.b.SKYBOX_MODE:k.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case i.b.SPHERICAL_MODE:k.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case i.b.EQUIRECTANGULAR_MODE:k.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case i.b.FIXED_EQUIRECTANGULAR_MODE:k.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case i.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:k.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case i.b.CUBIC_MODE:case i.b.INVCUBIC_MODE:default:k.setReflectionMode("REFLECTIONMAP_CUBIC")}k.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else k.REFLECTION=!1,k.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&x.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._emissiveTexture,k,"EMISSIVE")}else k.EMISSIVE=!1;if(this._lightmapTexture&&x.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._lightmapTexture,k,"LIGHTMAP"),k.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,k.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else k.LIGHTMAP=!1;if(this._specularTexture&&x.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,s.D)(this._specularTexture,k,"SPECULAR"),k.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else k.SPECULAR=!1;if(B.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&x.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,s.D)(this._bumpTexture,k,"BUMP"),k.PARALLAX=this._useParallax,k.PARALLAX_RHS=B.useRightHandedSystem,k.PARALLAXOCCLUSION=this._useParallaxOcclusion,k.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else k.BUMP=!1,k.PARALLAX=!1,k.PARALLAX_RHS=!1,k.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&x.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;k._needUVs=!0,k.REFRACTION=!0,k.REFRACTIONMAP_3D=this._refractionTexture.isCube,k.RGBDREFRACTION=this._refractionTexture.isRGBD,k.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else k.REFRACTION=!1;k.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else k.DIFFUSE=!1,k.AMBIENT=!1,k.OPACITY=!1,k.REFLECTION=!1,k.EMISSIVE=!1,k.LIGHTMAP=!1,k.BUMP=!1,k.REFRACTION=!1;k.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),k.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,k.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,k.SPECULAROVERALPHA=this._useSpecularOverAlpha,k.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,k.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,k.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(M)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=k,this._eventInfo.subMesh=p,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(k._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(k),k.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,k.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(k._areFresnelDirty&&(x.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(k.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,k.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,k.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,k.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,k.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,k.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,k._needNormals=!0,k.FRESNEL=!0):k.FRESNEL=!1),k.AREALIGHTUSED)for(let b=0;b<M.lightSources.length;b++)if(!M.lightSources[b]._isReady())return!1;(0,s.G)(M,B,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(M),k,this._applyDecalMapAfterDetailMap),(0,s.B)(B,u,this,k,Q,null,p.getRenderingMesh().hasThinInstances),this._eventInfo.defines=k,this._eventInfo.mesh=M,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,s.A)(M,k,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let o=!1;if(k.isDirty){const Q=k._areLightsDisposed;k.markAsProcessed();const q=new K.c;k.REFLECTION&&q.addFallback(0,"REFLECTION"),k.SPECULAR&&q.addFallback(0,"SPECULAR"),k.BUMP&&q.addFallback(0,"BUMP"),k.PARALLAX&&q.addFallback(1,"PARALLAX"),k.PARALLAX_RHS&&q.addFallback(1,"PARALLAX_RHS"),k.PARALLAXOCCLUSION&&q.addFallback(0,"PARALLAXOCCLUSION"),k.SPECULAROVERALPHA&&q.addFallback(0,"SPECULAROVERALPHA"),k.FOG&&q.addFallback(1,"FOG"),k.POINTSIZE&&q.addFallback(0,"POINTSIZE"),k.LOGARITHMICDEPTH&&q.addFallback(0,"LOGARITHMICDEPTH"),(0,s.n)(k,q,this._maxSimultaneousLights),k.SPECULARTERM&&q.addFallback(0,"SPECULARTERM"),k.DIFFUSEFRESNEL&&q.addFallback(1,"DIFFUSEFRESNEL"),k.OPACITYFRESNEL&&q.addFallback(2,"OPACITYFRESNEL"),k.REFLECTIONFRESNEL&&q.addFallback(3,"REFLECTIONFRESNEL"),k.EMISSIVEFRESNEL&&q.addFallback(4,"EMISSIVEFRESNEL"),k.FRESNEL&&q.addFallback(4,"FRESNEL"),k.MULTIVIEW&&q.addFallback(0,"MULTIVIEW");const F=[T.f.PositionKind];k.NORMAL&&F.push(T.f.NormalKind),k.TANGENT&&F.push(T.f.TangentKind);for(let M=1;M<=6;++M)k["UV"+M]&&F.push(`uv${1===M?"":M}`);k.VERTEXCOLOR&&F.push(T.f.ColorKind),(0,s.r)(F,M,k,q),(0,s.v)(F,k),(0,s.w)(F,M,k),(0,s.p)(F,M,k);let W="default";const i=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],A=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],j=["Material","Scene","Mesh"],D={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:k.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=q,this._eventInfo.fallbackRank=0,this._eventInfo.defines=k,this._eventInfo.uniforms=i,this._eventInfo.attributes=F,this._eventInfo.samplers=A,this._eventInfo.uniformBuffersNames=j,this._eventInfo.customCode=void 0,this._eventInfo.mesh=M,this._eventInfo.indexParameters=D,this._callbackPluginEventGeneric(128,this._eventInfo),f.b.AddUniformsAndSamplers(i,A),O.e.AddUniforms(i),O.e.AddSamplers(A),H.d&&(H.d.PrepareUniforms(i,k),H.d.PrepareSamplers(A,k)),(0,s.Q)({uniformsNames:i,uniformBuffersNames:j,samplers:A,defines:k,maxSimultaneousLights:this._maxSimultaneousLights}),(0,a.d)(i);const S={};this.customShaderNameResolve&&(W=this.customShaderNameResolve(W,i,j,A,k,F,S));const y=k.toString(),x=p.effect;let P=B.getEngine().createEffect(W,{attributes:F,uniformsNames:i,uniformBuffersNames:j,samplers:A,defines:y,fallbacks:q,onCompiled:this.onCompiled,onError:this.onError,indexParameters:D,processFinalCode:S.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:k.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([b.e(41),b.e(64)]).then(b.bind(b,14272)),Promise.all([b.e(39),b.e(65)]).then(b.bind(b,14424))]):await Promise.all([Promise.all([b.e(34),b.e(67)]).then(b.bind(b,14515)),Promise.all([b.e(33),b.e(68)]).then(b.bind(b,14673))]),this._shadersLoaded=!0}},u);if(this._eventInfo.customCode=void 0,P)if(this._onEffectCreatedObservable&&(R.effect=P,R.subMesh=p,this._onEffectCreatedObservable.notifyObservers(R)),this.allowShaderHotSwapping&&x&&!P.isReady()){if(P=x,k.markAsUnprocessed(),o=this.isFrozen,Q)return k._areLightsDisposed=!0,!1}else B.resetCachedMaterial(),p.setEffect(P,k,this._materialContext)}return!(!p.effect||!p.effect.isReady())&&(k._renderId=B.getRenderId(),q._wasPreviouslyReady=!o,q._wasPreviouslyUsingInstances=Q,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const M=this._uniformBuffer;M.addUniform("diffuseLeftColor",4),M.addUniform("diffuseRightColor",4),M.addUniform("opacityParts",4),M.addUniform("reflectionLeftColor",4),M.addUniform("reflectionRightColor",4),M.addUniform("refractionLeftColor",4),M.addUniform("refractionRightColor",4),M.addUniform("emissiveLeftColor",4),M.addUniform("emissiveRightColor",4),M.addUniform("vDiffuseInfos",2),M.addUniform("vAmbientInfos",2),M.addUniform("vOpacityInfos",2),M.addUniform("vReflectionInfos",2),M.addUniform("vReflectionPosition",3),M.addUniform("vReflectionSize",3),M.addUniform("vEmissiveInfos",2),M.addUniform("vLightmapInfos",2),M.addUniform("vSpecularInfos",2),M.addUniform("vBumpInfos",3),M.addUniform("diffuseMatrix",16),M.addUniform("ambientMatrix",16),M.addUniform("opacityMatrix",16),M.addUniform("reflectionMatrix",16),M.addUniform("emissiveMatrix",16),M.addUniform("lightmapMatrix",16),M.addUniform("specularMatrix",16),M.addUniform("bumpMatrix",16),M.addUniform("vTangentSpaceParams",2),M.addUniform("pointSize",1),M.addUniform("alphaCutOff",1),M.addUniform("refractionMatrix",16),M.addUniform("vRefractionInfos",4),M.addUniform("vRefractionPosition",3),M.addUniform("vRefractionSize",3),M.addUniform("vSpecularColor",4),M.addUniform("vEmissiveColor",3),M.addUniform("vDiffuseColor",4),M.addUniform("vAmbientColor",3),M.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(M,p,b){const Q=this.RM(),q=b.materialDefines;if(!q)return;const B=b.effect;if(!B)return;this._activeEffect=B,p.getMeshUniformBuffer().bindToEffect(B,"Mesh"),p.transferToEffect(M),this._uniformBuffer.bindToEffect(B,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Q,p,M,this.isFrozen),f.b.Bind(Q.getEngine().currentRenderPassId,this._activeEffect,p,M,this);const T=Q.activeCamera;T?this._uniformBuffer.updateFloat4("cameraInfo",T.Fb,T.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=b,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),q.OBJECTSPACE_NORMALMAP&&(M.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const O=this._mustRebind(Q,B,b,p.visibility);(0,s.b)(p,B);const H=this._uniformBuffer;if(O){if(this.bindViewProjection(B),!H.useUbo||!this.isFrozen||!H.isSync||b._drawWrapper._forceRebindOnNextCall){if(x.FresnelEnabled&&q.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(H.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),H.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&H.updateColor4("opacityParts",new u.ap(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(H.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),H.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(H.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),H.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(H.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),H.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Q.texturesEnabled){if(this._diffuseTexture&&x.DiffuseTextureEnabled&&(H.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,s.m)(this._diffuseTexture,H,"diffuse")),this._ambientTexture&&x.AmbientTextureEnabled&&(H.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,s.m)(this._ambientTexture,H,"ambient")),this._opacityTexture&&x.OpacityTextureEnabled&&(H.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,s.m)(this._opacityTexture,H,"opacity")),this._hasAlphaChannel()&&H.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&x.ReflectionTextureEnabled){if(H.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),H.ob("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const M=this._reflectionTexture;H.updateVector3("vReflectionPosition",M.boundingBoxPosition),H.updateVector3("vReflectionSize",M.boundingBoxSize)}}else H.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&x.EmissiveTextureEnabled&&(H.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,s.m)(this._emissiveTexture,H,"emissive")),this._lightmapTexture&&x.LightmapTextureEnabled&&(H.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,s.m)(this._lightmapTexture,H,"lightmap")),this._specularTexture&&x.SpecularTextureEnabled&&(H.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,s.m)(this._specularTexture,H,"specular")),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&x.BumpTextureEnabled&&(H.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,s.m)(this._bumpTexture,H,"bump"),Q._mirroredCameraPosition?H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):H.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&x.RefractionTextureEnabled){let M=1;if(this._refractionTexture.isCube||(H.ob("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(M=this._refractionTexture.depth)),H.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,M,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const M=this._refractionTexture;H.updateVector3("vRefractionPosition",M.boundingBoxPosition),H.updateVector3("vRefractionSize",M.boundingBoxSize)}}}this.pointsCloud&&H.updateFloat("pointSize",this.pointSize),H.updateColor4("vSpecularColor",this.specularColor,this.specularPower),H.updateColor3("vEmissiveColor",x.EmissiveTextureEnabled?this.emissiveColor:u.ap.BlackReadOnly),H.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Q.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),H.updateColor3("vAmbientColor",this._globalAmbientColor)}Q.texturesEnabled&&(this._diffuseTexture&&x.DiffuseTextureEnabled&&B.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&x.AmbientTextureEnabled&&B.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&x.OpacityTextureEnabled&&B.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&x.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?B.setTexture("reflectionCubeSampler",this._reflectionTexture):B.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&x.EmissiveTextureEnabled&&B.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&x.LightmapTextureEnabled&&B.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&x.SpecularTextureEnabled&&B.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&x.BumpTextureEnabled&&B.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&x.RefractionTextureEnabled&&(this._refractionTexture.isCube?B.setTexture("refractionCubeSampler",this._refractionTexture):B.setTexture("refraction2DSampler",this._refractionTexture))),this.RM().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(p)&&this.RM().depthPeelingRenderer.bind(B),this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,a.e)(B,this,Q),this.bindEyePosition(B)}else Q.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(O||!this.isFrozen){var F;if(Q.lightsEnabled&&!this._disableLighting&&(0,s.d)(Q,p,B,q,this._maxSimultaneousLights),(Q.fogEnabled&&p.applyFog&&Q.fogMode!==k.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||p.receiveShadows||q.PREPASS)&&this.bindView(B),(0,s.c)(Q,p,B),q.NUM_MORPH_INFLUENCERS&&(0,s.g)(p,B),q.BAKED_VERTEX_ANIMATION_TEXTURE)null===(F=p.bakedVertexAnimationManager)||void 0===F||F.bind(B,q.INSTANCES);this.useLogarithmicDepth&&(0,s.e)(q,B,Q),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(p,this._activeEffect,b),H.update()}getAnimatables(){const M=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&M.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&M.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&M.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&M.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&M.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&M.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&M.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&M.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&M.push(this._refractionTexture),M}getActiveTextures(){const M=super.getActiveTextures();return this._diffuseTexture&&M.push(this._diffuseTexture),this._ambientTexture&&M.push(this._ambientTexture),this._opacityTexture&&M.push(this._opacityTexture),this._reflectionTexture&&M.push(this._reflectionTexture),this._emissiveTexture&&M.push(this._emissiveTexture),this._specularTexture&&M.push(this._specularTexture),this._bumpTexture&&M.push(this._bumpTexture),this._lightmapTexture&&M.push(this._lightmapTexture),this._refractionTexture&&M.push(this._refractionTexture),M}hasTexture(M){return!!super.hasTexture(M)||(this._diffuseTexture===M||(this._ambientTexture===M||(this._opacityTexture===M||(this._reflectionTexture===M||(this._emissiveTexture===M||(this._specularTexture===M||(this._bumpTexture===M||(this._lightmapTexture===M||this._refractionTexture===M))))))))}dispose(M,p){var b,Q,q,B,k,u,T,O,H;p&&(null===(b=this._diffuseTexture)||void 0===b||b.dispose(),null===(Q=this._ambientTexture)||void 0===Q||Q.dispose(),null===(q=this._opacityTexture)||void 0===q||q.dispose(),null===(B=this._reflectionTexture)||void 0===B||B.dispose(),null===(k=this._emissiveTexture)||void 0===k||k.dispose(),null===(u=this._specularTexture)||void 0===u||u.dispose(),null===(T=this._bumpTexture)||void 0===T||T.dispose(),null===(O=this._lightmapTexture)||void 0===O||O.dispose(),null===(H=this._refractionTexture)||void 0===H||H.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(M,p)}clone(M){let p=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Q=S.b.Clone((()=>new x(M,this.RM())),this,{cloneTexturesOnlyOnce:p});return Q.name=M,Q.id=M,this.stencil.copyTo(Q.stencil),this._clonePlugins(Q,b),Q}static Parse(M,p,b){const Q=S.b.Parse((()=>new x(M.name,p)),M,p,b);return M.stencil&&Q.stencil.parse(M.stencil,p,b),F.e._ParsePlugins(M,Q,p,b),Q}static get DiffuseTextureEnabled(){return j.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){j.c.DiffuseTextureEnabled=M}static get DetailTextureEnabled(){return j.c.DetailTextureEnabled}static set DetailTextureEnabled(M){j.c.DetailTextureEnabled=M}static get AmbientTextureEnabled(){return j.c.AmbientTextureEnabled}static set AmbientTextureEnabled(M){j.c.AmbientTextureEnabled=M}static get OpacityTextureEnabled(){return j.c.OpacityTextureEnabled}static set OpacityTextureEnabled(M){j.c.OpacityTextureEnabled=M}static get ReflectionTextureEnabled(){return j.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){j.c.ReflectionTextureEnabled=M}static get EmissiveTextureEnabled(){return j.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){j.c.EmissiveTextureEnabled=M}static get SpecularTextureEnabled(){return j.c.SpecularTextureEnabled}static set SpecularTextureEnabled(M){j.c.SpecularTextureEnabled=M}static get BumpTextureEnabled(){return j.c.BumpTextureEnabled}static set BumpTextureEnabled(M){j.c.BumpTextureEnabled=M}static get LightmapTextureEnabled(){return j.c.LightmapTextureEnabled}static set LightmapTextureEnabled(M){j.c.LightmapTextureEnabled=M}static get RefractionTextureEnabled(){return j.c.RefractionTextureEnabled}static set RefractionTextureEnabled(M){j.c.RefractionTextureEnabled=M}static get ColorGradingTextureEnabled(){return j.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){j.c.ColorGradingTextureEnabled=M}static get FresnelEnabled(){return j.c.FresnelEnabled}static set FresnelEnabled(M){j.c.FresnelEnabled=M}}x.ForceGLSL=!1,(0,Q.c)([(0,q.J)("diffuseTexture")],x.prototype,"_diffuseTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],x.prototype,"diffuseTexture",void 0),(0,Q.c)([(0,q.J)("ambientTexture")],x.prototype,"_ambientTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"ambientTexture",void 0),(0,Q.c)([(0,q.J)("opacityTexture")],x.prototype,"_opacityTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],x.prototype,"opacityTexture",void 0),(0,Q.c)([(0,q.J)("reflectionTexture")],x.prototype,"_reflectionTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"reflectionTexture",void 0),(0,Q.c)([(0,q.J)("emissiveTexture")],x.prototype,"_emissiveTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"emissiveTexture",void 0),(0,Q.c)([(0,q.J)("specularTexture")],x.prototype,"_specularTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"specularTexture",void 0),(0,Q.c)([(0,q.J)("bumpTexture")],x.prototype,"_bumpTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"bumpTexture",void 0),(0,Q.c)([(0,q.J)("lightmapTexture")],x.prototype,"_lightmapTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"lightmapTexture",void 0),(0,Q.c)([(0,q.J)("refractionTexture")],x.prototype,"_refractionTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"refractionTexture",void 0),(0,Q.c)([(0,q.o)("ambient")],x.prototype,"ambientColor",void 0),(0,Q.c)([(0,q.o)("diffuse")],x.prototype,"diffuseColor",void 0),(0,Q.c)([(0,q.o)("specular")],x.prototype,"specularColor",void 0),(0,Q.c)([(0,q.o)("emissive")],x.prototype,"emissiveColor",void 0),(0,Q.c)([(0,q.R)()],x.prototype,"specularPower",void 0),(0,Q.c)([(0,q.R)("useAlphaFromDiffuseTexture")],x.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],x.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Q.c)([(0,q.R)("useEmissiveAsIllumination")],x.prototype,"_useEmissiveAsIllumination",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useEmissiveAsIllumination",void 0),(0,Q.c)([(0,q.R)("linkEmissiveWithDiffuse")],x.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"linkEmissiveWithDiffuse",void 0),(0,Q.c)([(0,q.R)("useSpecularOverAlpha")],x.prototype,"_useSpecularOverAlpha",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useSpecularOverAlpha",void 0),(0,Q.c)([(0,q.R)("useReflectionOverAlpha")],x.prototype,"_useReflectionOverAlpha",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useReflectionOverAlpha",void 0),(0,Q.c)([(0,q.R)("disableLighting")],x.prototype,"_disableLighting",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],x.prototype,"disableLighting",void 0),(0,Q.c)([(0,q.R)("useObjectSpaceNormalMap")],x.prototype,"_useObjectSpaceNormalMap",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useObjectSpaceNormalMap",void 0),(0,Q.c)([(0,q.R)("useParallax")],x.prototype,"_useParallax",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useParallax",void 0),(0,Q.c)([(0,q.R)("useParallaxOcclusion")],x.prototype,"_useParallaxOcclusion",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useParallaxOcclusion",void 0),(0,Q.c)([(0,q.R)()],x.prototype,"parallaxScaleBias",void 0),(0,Q.c)([(0,q.R)("roughness")],x.prototype,"_roughness",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"roughness",void 0),(0,Q.c)([(0,q.R)()],x.prototype,"indexOfRefraction",void 0),(0,Q.c)([(0,q.R)()],x.prototype,"invertRefractionY",void 0),(0,Q.c)([(0,q.R)()],x.prototype,"alphaCutOff",void 0),(0,Q.c)([(0,q.R)("useLightmapAsShadowmap")],x.prototype,"_useLightmapAsShadowmap",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useLightmapAsShadowmap",void 0),(0,Q.c)([(0,q.v)("diffuseFresnelParameters")],x.prototype,"_diffuseFresnelParameters",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],x.prototype,"diffuseFresnelParameters",void 0),(0,Q.c)([(0,q.v)("opacityFresnelParameters")],x.prototype,"_opacityFresnelParameters",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],x.prototype,"opacityFresnelParameters",void 0),(0,Q.c)([(0,q.v)("reflectionFresnelParameters")],x.prototype,"_reflectionFresnelParameters",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],x.prototype,"reflectionFresnelParameters",void 0),(0,Q.c)([(0,q.v)("refractionFresnelParameters")],x.prototype,"_refractionFresnelParameters",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],x.prototype,"refractionFresnelParameters",void 0),(0,Q.c)([(0,q.v)("emissiveFresnelParameters")],x.prototype,"_emissiveFresnelParameters",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],x.prototype,"emissiveFresnelParameters",void 0),(0,Q.c)([(0,q.R)("useReflectionFresnelFromSpecular")],x.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsFresnelDirty")],x.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Q.c)([(0,q.R)("useGlossinessFromSpecularMapAlpha")],x.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Q.c)([(0,q.R)("maxSimultaneousLights")],x.prototype,"_maxSimultaneousLights",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsLightsDirty")],x.prototype,"maxSimultaneousLights",void 0),(0,Q.c)([(0,q.R)("invertNormalMapX")],x.prototype,"_invertNormalMapX",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"invertNormalMapX",void 0),(0,Q.c)([(0,q.R)("invertNormalMapY")],x.prototype,"_invertNormalMapY",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"invertNormalMapY",void 0),(0,Q.c)([(0,q.R)("twoSidedLighting")],x.prototype,"_twoSidedLighting",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsTexturesDirty")],x.prototype,"twoSidedLighting",void 0),(0,Q.c)([(0,q.R)("applyDecalMapAfterDetailMap")],x.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Q.c)([(0,q.e)("_markAllSubMeshesAsMiscDirty")],x.prototype,"applyDecalMapAfterDetailMap",void 0),(0,A.g)("BABYLON.StandardMaterial",x),k.e.DefaultMaterialFactory=M=>new x("default material",M)}}]);