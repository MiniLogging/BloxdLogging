"use strict";(self.a14qw1h7fq=self.a14qw1h7fq||[]).push([[25],{11574:(R,J,B)=>{B.d(J,{c:()=>l});var Q=B(11167),h=B(11504),y=B(11176),N=B(11568),r=B(11559),q=B(11579),e=B(11539);class D extends r.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class l extends q.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(R){let J=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(R,"DetailMap",140,new D,J),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=h.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=R._dirtyCallbacks[1]}isReadyForSubMesh(R,J,B){return!this._isEnabled||!(R._areTexturesDirty&&J.texturesEnabled&&B.getCaps().standardDerivatives&&this._texture&&N.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(R,J){if(this._isEnabled){R.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const B=J.getEngine();R._areTexturesDirty&&(B.getCaps().standardDerivatives&&this._texture&&N.c.DetailTextureEnabled&&this._isEnabled?((0,e.O)(this._texture,R,"DETAIL"),R.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):R.DETAIL=!1)}else R.DETAIL=!1}bindForSubMesh(R,J){if(!this._isEnabled)return;const B=this._material.isFrozen;R.useUbo&&B&&R.isSync||this._texture&&N.c.DetailTextureEnabled&&(R.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,e.r)(this._texture,R,"detail")),J.texturesEnabled&&this._texture&&N.c.DetailTextureEnabled&&R.setTexture("detailSampler",this._texture)}hasTexture(R){return this._texture===R}getActiveTextures(R){this._texture&&R.push(this._texture)}getAnimatables(R){this._texture&&this._texture.animations&&this._texture.animations.length>0&&R.push(this._texture)}dispose(R){var J;R&&(null===(J=this._texture)||void 0===J||J.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(R){R.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Q.e)([(0,y.D)("detailTexture"),(0,y.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"texture",void 0),(0,Q.e)([(0,y.N)()],l.prototype,"diffuseBlendLevel",void 0),(0,Q.e)([(0,y.N)()],l.prototype,"roughnessBlendLevel",void 0),(0,Q.e)([(0,y.N)()],l.prototype,"bumpLevel",void 0),(0,Q.e)([(0,y.N)(),(0,y.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"normalBlendMethod",void 0),(0,Q.e)([(0,y.N)(),(0,y.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"isEnabled",void 0)},11559:(R,J,B)=>{B.d(J,{e:()=>Q});class Q{constructor(R){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=R,R)for(const J in R)Object.prototype.hasOwnProperty.call(R,J)&&this._setDefaultValue(J)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||R,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const R of Object.keys(this))"_"!==R[0]&&this._keys.push(R);if(this._externalProperties)for(const R in this._externalProperties)-1===this._keys.indexOf(R)&&this._keys.push(R)}isEqual(R){if(this._keys.length!==R._keys.length)return!1;for(let J=0;J<this._keys.length;J++){const B=this._keys[J];if(this[B]!==R[B])return!1}return!0}cloneTo(R){this._keys.length!==R._keys.length&&(R._keys=this._keys.slice(0));for(let J=0;J<this._keys.length;J++){const B=this._keys[J];R[B]=this[B]}}reset(){for(const R of this._keys)this._setDefaultValue(R)}_setDefaultValue(R){var J,B,Q,h;const y=(null===(J=this._externalProperties)||void 0===J||null===(B=J[R])||void 0===B?void 0:B.type)??typeof this[R],N=null===(Q=this._externalProperties)||void 0===Q||null===(h=Q[R])||void 0===h?void 0:h.default;switch(y){case"number":this[R]=N??0;break;case"string":this[R]=N??"";break;default:this[R]=N??!1}}toString(){let R="";for(let J=0;J<this._keys.length;J++){const B=this._keys[J],Q=this[B];switch(typeof Q){case"number":case"string":R+="#define "+B+" "+Q+"\n";break;default:Q&&(R+="#define "+B+"\n")}}return R}}},11568:(R,J,B)=>{B.d(J,{c:()=>h});var Q=B(11094);class h{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(R){this._DiffuseTextureEnabled!==R&&(this._DiffuseTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(R){this._BaseWeightTextureEnabled!==R&&(this._BaseWeightTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(R){this._BaseDiffuseRoughnessTextureEnabled!==R&&(this._BaseDiffuseRoughnessTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(R){this._DetailTextureEnabled!==R&&(this._DetailTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(R){this._DecalMapEnabled!==R&&(this._DecalMapEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(R){this._AmbientTextureEnabled!==R&&(this._AmbientTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(R){this._OpacityTextureEnabled!==R&&(this._OpacityTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(R){this._ReflectionTextureEnabled!==R&&(this._ReflectionTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(R){this._EmissiveTextureEnabled!==R&&(this._EmissiveTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(R){this._SpecularTextureEnabled!==R&&(this._SpecularTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(R){this._BumpTextureEnabled!==R&&(this._BumpTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(R){this._LightmapTextureEnabled!==R&&(this._LightmapTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(R){this._RefractionTextureEnabled!==R&&(this._RefractionTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(R){this._ColorGradingTextureEnabled!==R&&(this._ColorGradingTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(R){this._FresnelEnabled!==R&&(this._FresnelEnabled=R,Q.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(R){this._ClearCoatTextureEnabled!==R&&(this._ClearCoatTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(R){this._ClearCoatBumpTextureEnabled!==R&&(this._ClearCoatBumpTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(R){this._ClearCoatTintTextureEnabled!==R&&(this._ClearCoatTintTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(R){this._SheenTextureEnabled!==R&&(this._SheenTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(R){this._AnisotropicTextureEnabled!==R&&(this._AnisotropicTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(R){this._ThicknessTextureEnabled!==R&&(this._ThicknessTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(R){this._RefractionIntensityTextureEnabled!==R&&(this._RefractionIntensityTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(R){this._TranslucencyIntensityTextureEnabled!==R&&(this._TranslucencyIntensityTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(R){this._TranslucencyColorTextureEnabled!==R&&(this._TranslucencyColorTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(R){this._IridescenceTextureEnabled!==R&&(this._IridescenceTextureEnabled=R,Q.c.MarkAllMaterialsAsDirty(1))}}h._DiffuseTextureEnabled=!0,h._BaseWeightTextureEnabled=!0,h._BaseDiffuseRoughnessTextureEnabled=!0,h._DetailTextureEnabled=!0,h._DecalMapEnabled=!0,h._AmbientTextureEnabled=!0,h._OpacityTextureEnabled=!0,h._ReflectionTextureEnabled=!0,h._EmissiveTextureEnabled=!0,h._SpecularTextureEnabled=!0,h._BumpTextureEnabled=!0,h._LightmapTextureEnabled=!0,h._RefractionTextureEnabled=!0,h._ColorGradingTextureEnabled=!0,h._FresnelEnabled=!0,h._ClearCoatTextureEnabled=!0,h._ClearCoatBumpTextureEnabled=!0,h._ClearCoatTintTextureEnabled=!0,h._SheenTextureEnabled=!0,h._AnisotropicTextureEnabled=!0,h._ThicknessTextureEnabled=!0,h._RefractionIntensityTextureEnabled=!0,h._TranslucencyIntensityTextureEnabled=!0,h._TranslucencyColorTextureEnabled=!0,h._IridescenceTextureEnabled=!0},11586:(R,J,B)=>{B.d(J,{d:()=>y});var Q,h=B(11186);!function(R){R[R.Zero=0]="Zero",R[R.One=1]="One",R[R.MaxViewZ=2]="MaxViewZ"}(Q||(Q={}));class y{static CreateConfiguration(R){return y._Configurations[R]={defines:{},previousWorldMatrices:{},previousViewProjection:h.Matrix.Zero(),currentViewProjection:h.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},y._Configurations[R]}static DeleteConfiguration(R){delete y._Configurations[R]}static GetConfiguration(R){return y._Configurations[R]}static AddUniformsAndSamplers(R,J){R.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(R,J){for(const B of J)if(B.Fh)for(const J of B.Fh)J._removeDrawWrapper(R)}static PrepareDefines(R,J,B){if(!B._arePrePassDirty)return;const Q=y._Configurations[R];if(!Q)return;B.PREPASS=!0,B.PREPASS_COLOR=!1,B.PREPASS_COLOR_INDEX=-1;let h=0;for(let N=0;N<y.GeometryTextureDescriptions.length;N++){const R=y.GeometryTextureDescriptions[N],J=R.define,r=R.defineIndex,q=Q.defines[r];void 0!==q?(B[J]=!0,B[r]=q,h++):(B[J]=!1,delete B[r])}B.SCENE_MRT_COUNT=h,B.BONES_VELOCITY_ENABLED=J.useBones&&J.computeBonesUsingShaders&&J.skeleton&&!J.skeleton.isUsingTextureForMatrices&&-1===Q.excludedSkinnedMesh.indexOf(J)}static Bind(R,J,B,Q,h){const N=y._Configurations[R];if(!N)return;const r=B.IR(),q=r.getEngine();if(N.reverseCulling&&q.setStateCullFaceType(r._mirroredCameraPosition?h.cullBackFaces:!h.cullBackFaces),(void 0!==N.defines.PREPASS_VELOCITY_INDEX||void 0!==N.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(N.previousWorldMatrices[B.uniqueId]||(N.previousWorldMatrices[B.uniqueId]=Q.clone()),N.previousViewProjection||(N.previousViewProjection=r.getTransformMatrix().clone(),N.currentViewProjection=r.getTransformMatrix().clone()),N.currentViewProjection.updateFlag!==r.getTransformMatrix().updateFlag?(N.lastUpdateFrameId=q.frameId,N.previousViewProjection.h(N.currentViewProjection),N.currentViewProjection.h(r.getTransformMatrix())):N.lastUpdateFrameId!==q.frameId&&(N.lastUpdateFrameId=q.frameId,N.previousViewProjection.h(N.currentViewProjection)),J.setMatrix("previousWorld",N.previousWorldMatrices[B.uniqueId]),J.setMatrix("previousViewProjection",N.previousViewProjection),N.previousWorldMatrices[B.uniqueId]=Q.clone(),B.useBones&&B.computeBonesUsingShaders&&B.skeleton)){const R=B.skeleton;if(!R.isUsingTextureForMatrices||-1===J.getUniformIndex("boneTextureWidth")){const Q=R.getTransformMatrices(B);Q&&(N.previousBones[B.uniqueId]||(N.previousBones[B.uniqueId]=Q.slice()),J.setMatrices("mPreviousBones",N.previousBones[B.uniqueId]),N.previousBones[B.uniqueId].set(Q))}}}}y.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],y._Configurations={}},11579:(R,J,B)=>{B.d(J,{d:()=>u});var Q=B(11167),h=B(11176),y=B(11504),N=B(11065),r=B(11081),q=B(11107);const e=new RegExp("^([gimus]+)!");class D{constructor(R){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=R,this._scene=R.IR(),this._engine=this._scene.getEngine()}_addPlugin(R){for(let Q=0;Q<this._plugins.length;++Q)if(this._plugins[Q].name===R.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!R.isCompatible(this._material.shaderLanguage))throw`The plugin "${R.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const J=R.getClassName();D._MaterialPluginClassToMainDefine[J]||(D._MaterialPluginClassToMainDefine[J]="MATERIALPLUGIN_"+ ++D._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(R,J)=>this._handlePluginEvent(R,J),this._plugins.push(R),this._plugins.sort(((R,J)=>R.priority-J.priority)),this._codeInjectionPoints={};const B={};B[D._MaterialPluginClassToMainDefine[J]]={type:"boolean",default:!0};for(const Q of this._plugins)Q.collectDefines(B),this._collectPointNames("vertex",Q.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Q.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=B,!0}_activatePlugin(R){-1===this._activePlugins.indexOf(R)&&(this._activePlugins.push(R),this._activePlugins.sort(((R,J)=>R.priority-J.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),R.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(R),this._activePluginsForExtraEvents.sort(((R,J)=>R.priority-J.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(R){for(let J=0;J<this._plugins.length;++J)if(this._plugins[J].name===R)return this._plugins[J];return null}_handlePluginEventIsReadyForSubMesh(R){let J=!0;for(const B of this._activePlugins)J=J&&B.isReadyForSubMesh(R.defines,this._scene,this._engine,R.subMesh);R.isReadyForSubMesh=J}_handlePluginEventPrepareDefinesBeforeAttributes(R){for(const J of this._activePlugins)J.prepareDefinesBeforeAttributes(R.defines,this._scene,R.mesh)}_handlePluginEventPrepareDefines(R){for(const J of this._activePlugins)J.prepareDefines(R.defines,this._scene,R.mesh)}_handlePluginEventHardBindForSubMesh(R){for(const J of this._activePluginsForExtraEvents)J.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,R.subMesh)}_handlePluginEventBindForSubMesh(R){for(const J of this._activePlugins)J.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,R.subMesh)}_handlePluginEventHasRenderTargetTextures(R){let J=!1;for(const B of this._activePluginsForExtraEvents)if(J=B.hasRenderTargetTextures(),J)break;R.hasRenderTargetTextures=J}_handlePluginEventFillRenderTargetTextures(R){for(const J of this._activePluginsForExtraEvents)J.fillRenderTargetTextures(R.renderTargets)}_handlePluginEvent(R,J){switch(R){case 512:{const R=J;for(const J of this._activePlugins)J.getActiveTextures(R.activeTextures);break}case 256:{const R=J;for(const J of this._activePlugins)J.getAnimatables(R.animatables);break}case 1024:{const R=J;let B=!1;for(const J of this._activePlugins)if(B=J.hasTexture(R.texture),B)break;R.hasTexture=B;break}case 2:{const R=J;for(const J of this._plugins)J.dispose(R.forceDisposeTextures);break}case 4:J.defineNames=this._defineNamesFromPlugins;break;case 128:{const R=J;for(const J of this._activePlugins)R.fallbackRank=J.addFallbacks(R.defines,R.fallbacks,R.fallbackRank),J.getAttributes(R.attributes,this._scene,R.mesh);this._uniformList.length>0&&R.uniforms.push(...this._uniformList),this._samplerList.length>0&&R.samplers.push(...this._samplerList),this._uboList.length>0&&R.uniformBuffersNames.push(...this._uboList),R.customCode=this._injectCustomCode(R,R.customCode);break}case 8:{const R=J;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const B=1===this._material.shaderLanguage;for(const J of this._plugins){const Q=J.getUniforms(this._material.shaderLanguage);if(Q){if(Q.ubo)for(const J of Q.ubo){if(J.size&&J.type){const Q=J.arraySize??0;if(R.ubo.addUniform(J.name,J.size,Q),B){let R;switch(J.type){case"mat4":R="mat4x4f";break;case"float":R="f32";break;default:R=`${J.type}f`}this._uboDeclaration+=Q>0?`uniform ${J.name}: array<${R}, ${Q}>;\n`:`uniform ${J.name}: ${R};\n`}else this._uboDeclaration+=`${J.type} ${J.name}${Q>0?`[${Q}]`:""};\n`}this._uniformList.push(J.name)}Q.vertex&&(this._vertexDeclaration+=Q.vertex+"\n"),Q.fragment&&(this._fragmentDeclaration+=Q.fragment+"\n")}J.getSamplers(this._samplerList),J.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(R,J){if(J)for(const B in J)this._codeInjectionPoints[R]||(this._codeInjectionPoints[R]={}),this._codeInjectionPoints[R][B]=!0}_injectCustomCode(R,J){return(B,Q)=>{var h;J&&(Q=J(B,Q)),this._uboDeclaration&&(Q=Q.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Q=Q.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Q=Q.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const y=null===(h=this._codeInjectionPoints)||void 0===h?void 0:h[B];if(!y)return Q;let N=null;for(let J in y){let h="";for(const Q of this._activePlugins){var D;let y=null===(D=Q.getCustomCode(B,this._material.shaderLanguage))||void 0===D?void 0:D[J];if(y){if(Q.resolveIncludes){if(null===N){const J=0;N={defines:[],indexParameters:R.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:q.c.GetShadersRepository(J),includesShadersStore:q.c.GetIncludesShadersStore(J),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}N.isFragment="fragment"===B,(0,r.f)(y,N,(R=>y=R))}h+=y+"\n"}}if(h.length>0)if("!"===J.charAt(0)){J=J.substring(1);let R="g";if("!"===J.charAt(0))R="",J=J.substring(1);else{const B=e.exec(J);B&&B.length>=2&&(R=B[1],J=J.substring(R.length+1))}R.indexOf("g")<0&&(R+="g");const B=Q,y=new RegExp(J,R);let N=y.exec(B);for(;null!==N;){let R=h;for(let J=0;J<N.length;++J)R=R.replace("$"+J,N[J]);Q=Q.replace(N[0],R),N=y.exec(B)}}else{const R="#define "+J;Q=Q.replace(R,"\n"+h+"\n"+R)}}return Q}}}D._MaterialPluginClassToMainDefine={},D._MaterialPluginCounter=0,N.e.OnEnginesDisposedObservable.add((()=>{n()}));const l=[];let E=!1,O=null;function n(){l.length=0,E=!1,y.b.OnEventObservable.remove(O),O=null}var P=B(11217),A=B(11142);class u{isCompatible(R){return 0===R}_enable(R){R&&this._pluginManager._activatePlugin(this)}constructor(R,J,B,Q){let h=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],y=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=R,this.name=J,this.priority=B,this.resolveIncludes=N,R.pluginManager||(R.pluginManager=new D(R),R.eh.add((()=>{R.pluginManager=void 0}))),this._pluginDefineNames=Q,this._pluginManager=R.pluginManager,h&&this._pluginManager._addPlugin(this),y&&this._enable(!0),this.markAllDefinesAsDirty=R._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(R,J,B,Q){return!0}hardBindForSubMesh(R,J,B,Q){}bindForSubMesh(R,J,B,Q){}dispose(R){}getCustomCode(R){return null}collectDefines(R){if(this._pluginDefineNames)for(const J of Object.keys(this._pluginDefineNames)){if("_"===J[0])continue;const B=typeof this._pluginDefineNames[J];R[J]={type:"number"===B?"number":"string"===B?"string":"boolean"===B?"boolean":"object",default:this._pluginDefineNames[J]}}}prepareDefinesBeforeAttributes(R,J,B){}prepareDefines(R,J,B){}hasTexture(R){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(R){}getActiveTextures(R){}getAnimatables(R){}addFallbacks(R,J,B){return B}getSamplers(R){}getAttributes(R,J,B){}getUniformBuffersNames(R){}getUniforms(){return{}}copyTo(R){P.c.Clone((()=>R),this)}serialize(){return P.c.Serialize(this)}parse(R,J,B){P.c.Parse((()=>this),R,J,B)}}(0,Q.e)([(0,h.N)()],u.prototype,"name",void 0),(0,Q.e)([(0,h.N)()],u.prototype,"priority",void 0),(0,Q.e)([(0,h.N)()],u.prototype,"resolveIncludes",void 0),(0,Q.e)([(0,h.N)()],u.prototype,"registerForExtraEvents",void 0),(0,A.h)("BABYLON.MaterialPluginBase",u)},11555:(R,J,B)=>{B.d(J,{c:()=>Q});class Q{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(R){R.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(R){}bindForSubMesh(R,J,B,Q,h){if(J.prePassRenderer&&J.prePassRenderer.enabled&&J.prePassRenderer.currentRTisSceneRT&&(-1!==J.prePassRenderer.getIndex(2)||-1!==J.prePassRenderer.getIndex(11))){this.previousWorldMatrices[B.uniqueId]||(this.previousWorldMatrices[B.uniqueId]=Q.clone()),this.previousViewProjection||(this.previousViewProjection=J.getTransformMatrix().clone(),this.currentViewProjection=J.getTransformMatrix().clone());const h=J.getEngine();this.currentViewProjection.updateFlag!==J.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=h.frameId,this.previousViewProjection.h(this.currentViewProjection),this.currentViewProjection.h(J.getTransformMatrix())):this._lastUpdateFrameId!==h.frameId&&(this._lastUpdateFrameId=h.frameId,this.previousViewProjection.h(this.currentViewProjection)),R.setMatrix("previousWorld",this.previousWorldMatrices[B.uniqueId]),R.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[B.uniqueId]=Q.clone()}}}},11551:(R,J,B)=>{B.d(J,{uJ:()=>M});var Q=B(11167),h=B(11176),y=B(11283),N=B(11419),r=B(11224),q=B(11262),e=B(11555),D=B(11428),l=B(11504),E=B(11559),O=B(11495),n=B(11161),P=B(11142),A=B(11568),u=B(11489),S=B(11574),f=B(11547),a=B(11539),s=B(11217),x=B(11586);const I={effect:null,subMesh:null};class V extends E.e{constructor(R){super(R),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(R){const J=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const B of J)this[B]=B===R}}class M extends O.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(R){this._attachImageProcessingConfiguration(R),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(R){R!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=R||this.IR().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(R){this.imageProcessingConfiguration.colorCurvesEnabled=R}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(R){this.imageProcessingConfiguration.colorGradingEnabled=R}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(R){this._imageProcessingConfiguration.toneMappingEnabled=R}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(R){this._imageProcessingConfiguration.exposure=R}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(R){this._imageProcessingConfiguration.contrast=R}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(R){this._imageProcessingConfiguration.colorGradingTexture=R}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(R){this._imageProcessingConfiguration.colorCurves=R}get canRenderToMRT(){return!0}constructor(R,J){super(R,J,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||M.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new r.SJ(0,0,0),this.diffuseColor=new r.SJ(1,1,1),this.specularColor=new r.SJ(1,1,1),this.emissiveColor=new r.SJ(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new y.e(16),this._globalAmbientColor=new r.SJ(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new S.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new e.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(M.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(M.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"uJ"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===l.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.bh&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==l.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.bh||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(R,J){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const h=J._drawWrapper;if(h.effect&&this.isFrozen&&h._wasPreviouslyReady&&h._wasPreviouslyUsingInstances===Q)return!0;J.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),J.materialDefines=new V(this._eventInfo.defineNames));const y=this.IR(),N=J.materialDefines;if(this._isReadyForSubMesh(J))return!0;const r=y.getEngine();N._needNormals=(0,a.N)(y,R,N,!0,this._maxSimultaneousLights,this._disableLighting),(0,a.U)(y,N);const l=this.needAlphaBlendingForMesh(R)&&this.IR().useOrderIndependentTransparency;if((0,a.$)(y,N,this.canRenderToMRT&&!l),(0,a.Y)(y,N,l),x.d.PrepareDefines(r.currentRenderPassId,R,N),N._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,N._needUVs=!1;for(let R=1;R<=6;++R)N["MAINUV"+R]=!1;if(y.texturesEnabled){if(N.DIFFUSEDIRECTUV=0,N.BUMPDIRECTUV=0,N.AMBIENTDIRECTUV=0,N.OPACITYDIRECTUV=0,N.EMISSIVEDIRECTUV=0,N.SPECULARDIRECTUV=0,N.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&M.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._diffuseTexture,N,"DIFFUSE")}else N.DIFFUSE=!1;if(this._ambientTexture&&M.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._ambientTexture,N,"AMBIENT")}else N.AMBIENT=!1;if(this._opacityTexture&&M.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._opacityTexture,N,"OPACITY"),N.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else N.OPACITY=!1;if(this._reflectionTexture&&M.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(N._needNormals=!0,N.REFLECTION=!0,N.ROUGHNESS=this._roughness>0,N.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,N.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===n.d.INVCUBIC_MODE,N.REFLECTIONMAP_3D=this._reflectionTexture.isCube,N.REFLECTIONMAP_OPPOSITEZ=N.REFLECTIONMAP_3D&&this.IR().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,N.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case n.d.EXPLICIT_MODE:N.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case n.d.PLANAR_MODE:N.setReflectionMode("REFLECTIONMAP_PLANAR");break;case n.d.PROJECTION_MODE:N.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case n.d.SKYBOX_MODE:N.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case n.d.SPHERICAL_MODE:N.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case n.d.EQUIRECTANGULAR_MODE:N.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case n.d.FIXED_EQUIRECTANGULAR_MODE:N.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case n.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:N.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case n.d.CUBIC_MODE:case n.d.INVCUBIC_MODE:default:N.setReflectionMode("REFLECTIONMAP_CUBIC")}N.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else N.REFLECTION=!1,N.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&M.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._emissiveTexture,N,"EMISSIVE")}else N.EMISSIVE=!1;if(this._lightmapTexture&&M.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._lightmapTexture,N,"LIGHTMAP"),N.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,N.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else N.LIGHTMAP=!1;if(this._specularTexture&&M.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,a.O)(this._specularTexture,N,"SPECULAR"),N.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else N.SPECULAR=!1;if(y.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&M.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,a.O)(this._bumpTexture,N,"BUMP"),N.PARALLAX=this._useParallax,N.PARALLAX_RHS=y.useRightHandedSystem,N.PARALLAXOCCLUSION=this._useParallaxOcclusion,N.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else N.BUMP=!1,N.PARALLAX=!1,N.PARALLAX_RHS=!1,N.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&M.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;N._needUVs=!0,N.REFRACTION=!0,N.REFRACTIONMAP_3D=this._refractionTexture.isCube,N.RGBDREFRACTION=this._refractionTexture.isRGBD,N.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else N.REFRACTION=!1;N.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else N.DIFFUSE=!1,N.AMBIENT=!1,N.OPACITY=!1,N.REFLECTION=!1,N.EMISSIVE=!1,N.LIGHTMAP=!1,N.BUMP=!1,N.REFRACTION=!1;N.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),N.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,N.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,N.SPECULAROVERALPHA=this._useSpecularOverAlpha,N.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,N.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,N.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(R)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=N,this._eventInfo.subMesh=J,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(N._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(N),N.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,N.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(N._areFresnelDirty&&(M.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(N.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,N.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,N.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,N.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,N.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,N.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,N._needNormals=!0,N.FRESNEL=!0):N.FRESNEL=!1),N.AREALIGHTUSED)for(let B=0;B<R.lightSources.length;B++)if(!R.lightSources[B]._isReady())return!1;(0,a.Q)(R,y,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(R),N,this._applyDecalMapAfterDetailMap),(0,a.L)(y,r,this,N,Q,null,J.getRenderingMesh().hasThinInstances),this._eventInfo.defines=N,this._eventInfo.mesh=R,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,a.J)(R,N,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let E=!1;if(N.isDirty){const Q=N._areLightsDisposed;N.markAsProcessed();const h=new u.c;N.REFLECTION&&h.addFallback(0,"REFLECTION"),N.SPECULAR&&h.addFallback(0,"SPECULAR"),N.BUMP&&h.addFallback(0,"BUMP"),N.PARALLAX&&h.addFallback(1,"PARALLAX"),N.PARALLAX_RHS&&h.addFallback(1,"PARALLAX_RHS"),N.PARALLAXOCCLUSION&&h.addFallback(0,"PARALLAXOCCLUSION"),N.SPECULAROVERALPHA&&h.addFallback(0,"SPECULAROVERALPHA"),N.FOG&&h.addFallback(1,"FOG"),N.POINTSIZE&&h.addFallback(0,"POINTSIZE"),N.LOGARITHMICDEPTH&&h.addFallback(0,"LOGARITHMICDEPTH"),(0,a.s)(N,h,this._maxSimultaneousLights),N.SPECULARTERM&&h.addFallback(0,"SPECULARTERM"),N.DIFFUSEFRESNEL&&h.addFallback(1,"DIFFUSEFRESNEL"),N.OPACITYFRESNEL&&h.addFallback(2,"OPACITYFRESNEL"),N.REFLECTIONFRESNEL&&h.addFallback(3,"REFLECTIONFRESNEL"),N.EMISSIVEFRESNEL&&h.addFallback(4,"EMISSIVEFRESNEL"),N.FRESNEL&&h.addFallback(4,"FRESNEL"),N.MULTIVIEW&&h.addFallback(0,"MULTIVIEW");const l=[q.h.PositionKind];N.NORMAL&&l.push(q.h.NormalKind),N.TANGENT&&l.push(q.h.TangentKind);for(let R=1;R<=6;++R)N["UV"+R]&&l.push(`uv${1===R?"":R}`);N.VERTEXCOLOR&&l.push(q.h.ColorKind),(0,a.w)(l,R,N,h),(0,a.A)(l,N),(0,a.D)(l,R,N),(0,a.u)(l,R,N);let O="default";const n=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],P=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],A=["Material","Scene","Mesh"],S={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:N.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=h,this._eventInfo.fallbackRank=0,this._eventInfo.defines=N,this._eventInfo.uniforms=n,this._eventInfo.attributes=l,this._eventInfo.samplers=P,this._eventInfo.uniformBuffersNames=A,this._eventInfo.customCode=void 0,this._eventInfo.mesh=R,this._eventInfo.indexParameters=S,this._callbackPluginEventGeneric(128,this._eventInfo),x.d.AddUniformsAndSamplers(n,P),e.c.AddUniforms(n),e.c.AddSamplers(P),D.e&&(D.e.PrepareUniforms(n,N),D.e.PrepareSamplers(P,N)),(0,a.cb)({uniformsNames:n,uniformBuffersNames:A,samplers:P,defines:N,maxSimultaneousLights:this._maxSimultaneousLights}),(0,f.e)(n);const s={};this.customShaderNameResolve&&(O=this.customShaderNameResolve(O,n,A,P,N,l,s));const V=N.toString(),M=J.effect;let H=y.getEngine().createEffect(O,{attributes:l,uniformsNames:n,uniformBuffersNames:A,samplers:P,defines:V,fallbacks:h,onCompiled:this.onCompiled,onError:this.onError,indexParameters:S,processFinalCode:s.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:N.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([B.e(41),B.e(64)]).then(B.bind(B,13751)),Promise.all([B.e(39),B.e(65)]).then(B.bind(B,13890))]):await Promise.all([Promise.all([B.e(34),B.e(67)]).then(B.bind(B,13958)),Promise.all([B.e(33),B.e(68)]).then(B.bind(B,14109))]),this._shadersLoaded=!0}},r);if(this._eventInfo.customCode=void 0,H)if(this._onEffectCreatedObservable&&(I.effect=H,I.subMesh=J,this._onEffectCreatedObservable.notifyObservers(I)),this.allowShaderHotSwapping&&M&&!H.isReady()){if(H=M,N.markAsUnprocessed(),E=this.isFrozen,Q)return N._areLightsDisposed=!0,!1}else y.resetCachedMaterial(),J.setEffect(H,N,this._materialContext)}return!(!J.effect||!J.effect.isReady())&&(N._renderId=y.getRenderId(),h._wasPreviouslyReady=!E,h._wasPreviouslyUsingInstances=Q,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const R=this._uniformBuffer;R.addUniform("diffuseLeftColor",4),R.addUniform("diffuseRightColor",4),R.addUniform("opacityParts",4),R.addUniform("reflectionLeftColor",4),R.addUniform("reflectionRightColor",4),R.addUniform("refractionLeftColor",4),R.addUniform("refractionRightColor",4),R.addUniform("emissiveLeftColor",4),R.addUniform("emissiveRightColor",4),R.addUniform("vDiffuseInfos",2),R.addUniform("vAmbientInfos",2),R.addUniform("vOpacityInfos",2),R.addUniform("vReflectionInfos",2),R.addUniform("vReflectionPosition",3),R.addUniform("vReflectionSize",3),R.addUniform("vEmissiveInfos",2),R.addUniform("vLightmapInfos",2),R.addUniform("vSpecularInfos",2),R.addUniform("vBumpInfos",3),R.addUniform("diffuseMatrix",16),R.addUniform("ambientMatrix",16),R.addUniform("opacityMatrix",16),R.addUniform("reflectionMatrix",16),R.addUniform("emissiveMatrix",16),R.addUniform("lightmapMatrix",16),R.addUniform("specularMatrix",16),R.addUniform("bumpMatrix",16),R.addUniform("vTangentSpaceParams",2),R.addUniform("pointSize",1),R.addUniform("alphaCutOff",1),R.addUniform("refractionMatrix",16),R.addUniform("vRefractionInfos",4),R.addUniform("vRefractionPosition",3),R.addUniform("vRefractionSize",3),R.addUniform("vSpecularColor",4),R.addUniform("vEmissiveColor",3),R.addUniform("vDiffuseColor",4),R.addUniform("vAmbientColor",3),R.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(R,J,B){const Q=this.IR(),h=B.materialDefines;if(!h)return;const y=B.effect;if(!y)return;this._activeEffect=y,J.getMeshUniformBuffer().bindToEffect(y,"Mesh"),J.transferToEffect(R),this._uniformBuffer.bindToEffect(y,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Q,J,R,this.isFrozen),x.d.Bind(Q.getEngine().currentRenderPassId,this._activeEffect,J,R,this);const q=Q.activeCamera;q?this._uniformBuffer.updateFloat4("cameraInfo",q.mh,q.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=B,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),h.OBJECTSPACE_NORMALMAP&&(R.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const e=this._mustRebind(Q,y,B,J.visibility);(0,a.c)(J,y);const D=this._uniformBuffer;if(e){if(this.bindViewProjection(y),!D.useUbo||!this.isFrozen||!D.isSync||B._drawWrapper._forceRebindOnNextCall){if(M.FresnelEnabled&&h.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(D.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),D.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&D.updateColor4("opacityParts",new r.SJ(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(D.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),D.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(D.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),D.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(D.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),D.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Q.texturesEnabled){if(this._diffuseTexture&&M.DiffuseTextureEnabled&&(D.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,a.r)(this._diffuseTexture,D,"diffuse")),this._ambientTexture&&M.AmbientTextureEnabled&&(D.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,a.r)(this._ambientTexture,D,"ambient")),this._opacityTexture&&M.OpacityTextureEnabled&&(D.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,a.r)(this._opacityTexture,D,"opacity")),this._hasAlphaChannel()&&D.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&M.ReflectionTextureEnabled){if(D.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),D.th("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const R=this._reflectionTexture;D.updateVector3("vReflectionPosition",R.boundingBoxPosition),D.updateVector3("vReflectionSize",R.boundingBoxSize)}}else D.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&M.EmissiveTextureEnabled&&(D.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,a.r)(this._emissiveTexture,D,"emissive")),this._lightmapTexture&&M.LightmapTextureEnabled&&(D.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,a.r)(this._lightmapTexture,D,"lightmap")),this._specularTexture&&M.SpecularTextureEnabled&&(D.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,a.r)(this._specularTexture,D,"specular")),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&(D.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,a.r)(this._bumpTexture,D,"bump"),Q._mirroredCameraPosition?D.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):D.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&M.RefractionTextureEnabled){let R=1;if(this._refractionTexture.isCube||(D.th("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(R=this._refractionTexture.depth)),D.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,R,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const R=this._refractionTexture;D.updateVector3("vRefractionPosition",R.boundingBoxPosition),D.updateVector3("vRefractionSize",R.boundingBoxSize)}}}this.pointsCloud&&D.updateFloat("pointSize",this.pointSize),D.updateColor4("vSpecularColor",this.specularColor,this.specularPower),D.updateColor3("vEmissiveColor",M.EmissiveTextureEnabled?this.emissiveColor:r.SJ.BlackReadOnly),D.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Q.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),D.updateColor3("vAmbientColor",this._globalAmbientColor)}Q.texturesEnabled&&(this._diffuseTexture&&M.DiffuseTextureEnabled&&y.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&M.AmbientTextureEnabled&&y.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&M.OpacityTextureEnabled&&y.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&M.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?y.setTexture("reflectionCubeSampler",this._reflectionTexture):y.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&M.EmissiveTextureEnabled&&y.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&M.LightmapTextureEnabled&&y.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&M.SpecularTextureEnabled&&y.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&M.BumpTextureEnabled&&y.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&M.RefractionTextureEnabled&&(this._refractionTexture.isCube?y.setTexture("refractionCubeSampler",this._refractionTexture):y.setTexture("refraction2DSampler",this._refractionTexture))),this.IR().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(J)&&this.IR().depthPeelingRenderer.bind(y),this._eventInfo.subMesh=B,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,f.g)(y,this,Q),this.bindEyePosition(y)}else Q.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(e||!this.isFrozen){var l;if(Q.lightsEnabled&&!this._disableLighting&&(0,a.f)(Q,J,y,h,this._maxSimultaneousLights),(Q.fogEnabled&&J.applyFog&&Q.fogMode!==N.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||J.receiveShadows||h.PREPASS)&&this.bindView(y),(0,a.d)(Q,J,y),h.NUM_MORPH_INFLUENCERS&&(0,a.m)(J,y),h.BAKED_VERTEX_ANIMATION_TEXTURE)null===(l=J.bakedVertexAnimationManager)||void 0===l||l.bind(y,h.INSTANCES);this.useLogarithmicDepth&&(0,a.i)(h,y,Q),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(J,this._activeEffect,B),D.update()}getAnimatables(){const R=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&R.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&R.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&R.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&R.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&R.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&R.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&R.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&R.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&R.push(this._refractionTexture),R}getActiveTextures(){const R=super.getActiveTextures();return this._diffuseTexture&&R.push(this._diffuseTexture),this._ambientTexture&&R.push(this._ambientTexture),this._opacityTexture&&R.push(this._opacityTexture),this._reflectionTexture&&R.push(this._reflectionTexture),this._emissiveTexture&&R.push(this._emissiveTexture),this._specularTexture&&R.push(this._specularTexture),this._bumpTexture&&R.push(this._bumpTexture),this._lightmapTexture&&R.push(this._lightmapTexture),this._refractionTexture&&R.push(this._refractionTexture),R}hasTexture(R){return!!super.hasTexture(R)||(this._diffuseTexture===R||(this._ambientTexture===R||(this._opacityTexture===R||(this._reflectionTexture===R||(this._emissiveTexture===R||(this._specularTexture===R||(this._bumpTexture===R||(this._lightmapTexture===R||this._refractionTexture===R))))))))}dispose(R,J){var B,Q,h,y,N,r,q,e,D;J&&(null===(B=this._diffuseTexture)||void 0===B||B.dispose(),null===(Q=this._ambientTexture)||void 0===Q||Q.dispose(),null===(h=this._opacityTexture)||void 0===h||h.dispose(),null===(y=this._reflectionTexture)||void 0===y||y.dispose(),null===(N=this._emissiveTexture)||void 0===N||N.dispose(),null===(r=this._specularTexture)||void 0===r||r.dispose(),null===(q=this._bumpTexture)||void 0===q||q.dispose(),null===(e=this._lightmapTexture)||void 0===e||e.dispose(),null===(D=this._refractionTexture)||void 0===D||D.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(R,J)}clone(R){let J=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Q=s.c.Clone((()=>new M(R,this.IR())),this,{cloneTexturesOnlyOnce:J});return Q.name=R,Q.id=R,this.stencil.copyTo(Q.stencil),this._clonePlugins(Q,B),Q}static Parse(R,J,B){const Q=s.c.Parse((()=>new M(R.name,J)),R,J,B);return R.stencil&&Q.stencil.parse(R.stencil,J,B),l.b._ParsePlugins(R,Q,J,B),Q}static get DiffuseTextureEnabled(){return A.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(R){A.c.DiffuseTextureEnabled=R}static get DetailTextureEnabled(){return A.c.DetailTextureEnabled}static set DetailTextureEnabled(R){A.c.DetailTextureEnabled=R}static get AmbientTextureEnabled(){return A.c.AmbientTextureEnabled}static set AmbientTextureEnabled(R){A.c.AmbientTextureEnabled=R}static get OpacityTextureEnabled(){return A.c.OpacityTextureEnabled}static set OpacityTextureEnabled(R){A.c.OpacityTextureEnabled=R}static get ReflectionTextureEnabled(){return A.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(R){A.c.ReflectionTextureEnabled=R}static get EmissiveTextureEnabled(){return A.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(R){A.c.EmissiveTextureEnabled=R}static get SpecularTextureEnabled(){return A.c.SpecularTextureEnabled}static set SpecularTextureEnabled(R){A.c.SpecularTextureEnabled=R}static get BumpTextureEnabled(){return A.c.BumpTextureEnabled}static set BumpTextureEnabled(R){A.c.BumpTextureEnabled=R}static get LightmapTextureEnabled(){return A.c.LightmapTextureEnabled}static set LightmapTextureEnabled(R){A.c.LightmapTextureEnabled=R}static get RefractionTextureEnabled(){return A.c.RefractionTextureEnabled}static set RefractionTextureEnabled(R){A.c.RefractionTextureEnabled=R}static get ColorGradingTextureEnabled(){return A.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(R){A.c.ColorGradingTextureEnabled=R}static get FresnelEnabled(){return A.c.FresnelEnabled}static set FresnelEnabled(R){A.c.FresnelEnabled=R}}M.ForceGLSL=!1,(0,Q.e)([(0,h.D)("diffuseTexture")],M.prototype,"_diffuseTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"diffuseTexture",void 0),(0,Q.e)([(0,h.D)("ambientTexture")],M.prototype,"_ambientTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"ambientTexture",void 0),(0,Q.e)([(0,h.D)("opacityTexture")],M.prototype,"_opacityTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"opacityTexture",void 0),(0,Q.e)([(0,h.D)("reflectionTexture")],M.prototype,"_reflectionTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"reflectionTexture",void 0),(0,Q.e)([(0,h.D)("emissiveTexture")],M.prototype,"_emissiveTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"emissiveTexture",void 0),(0,Q.e)([(0,h.D)("specularTexture")],M.prototype,"_specularTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"specularTexture",void 0),(0,Q.e)([(0,h.D)("bumpTexture")],M.prototype,"_bumpTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"bumpTexture",void 0),(0,Q.e)([(0,h.D)("lightmapTexture")],M.prototype,"_lightmapTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"lightmapTexture",void 0),(0,Q.e)([(0,h.D)("refractionTexture")],M.prototype,"_refractionTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"refractionTexture",void 0),(0,Q.e)([(0,h.j)("ambient")],M.prototype,"ambientColor",void 0),(0,Q.e)([(0,h.j)("diffuse")],M.prototype,"diffuseColor",void 0),(0,Q.e)([(0,h.j)("specular")],M.prototype,"specularColor",void 0),(0,Q.e)([(0,h.j)("emissive")],M.prototype,"emissiveColor",void 0),(0,Q.e)([(0,h.N)()],M.prototype,"specularPower",void 0),(0,Q.e)([(0,h.N)("useAlphaFromDiffuseTexture")],M.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],M.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Q.e)([(0,h.N)("useEmissiveAsIllumination")],M.prototype,"_useEmissiveAsIllumination",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useEmissiveAsIllumination",void 0),(0,Q.e)([(0,h.N)("linkEmissiveWithDiffuse")],M.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"linkEmissiveWithDiffuse",void 0),(0,Q.e)([(0,h.N)("useSpecularOverAlpha")],M.prototype,"_useSpecularOverAlpha",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useSpecularOverAlpha",void 0),(0,Q.e)([(0,h.N)("useReflectionOverAlpha")],M.prototype,"_useReflectionOverAlpha",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useReflectionOverAlpha",void 0),(0,Q.e)([(0,h.N)("disableLighting")],M.prototype,"_disableLighting",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsLightsDirty")],M.prototype,"disableLighting",void 0),(0,Q.e)([(0,h.N)("useObjectSpaceNormalMap")],M.prototype,"_useObjectSpaceNormalMap",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useObjectSpaceNormalMap",void 0),(0,Q.e)([(0,h.N)("useParallax")],M.prototype,"_useParallax",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallax",void 0),(0,Q.e)([(0,h.N)("useParallaxOcclusion")],M.prototype,"_useParallaxOcclusion",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useParallaxOcclusion",void 0),(0,Q.e)([(0,h.N)()],M.prototype,"parallaxScaleBias",void 0),(0,Q.e)([(0,h.N)("roughness")],M.prototype,"_roughness",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"roughness",void 0),(0,Q.e)([(0,h.N)()],M.prototype,"indexOfRefraction",void 0),(0,Q.e)([(0,h.N)()],M.prototype,"invertRefractionY",void 0),(0,Q.e)([(0,h.N)()],M.prototype,"alphaCutOff",void 0),(0,Q.e)([(0,h.N)("useLightmapAsShadowmap")],M.prototype,"_useLightmapAsShadowmap",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useLightmapAsShadowmap",void 0),(0,Q.e)([(0,h.n)("diffuseFresnelParameters")],M.prototype,"_diffuseFresnelParameters",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"diffuseFresnelParameters",void 0),(0,Q.e)([(0,h.n)("opacityFresnelParameters")],M.prototype,"_opacityFresnelParameters",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],M.prototype,"opacityFresnelParameters",void 0),(0,Q.e)([(0,h.n)("reflectionFresnelParameters")],M.prototype,"_reflectionFresnelParameters",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"reflectionFresnelParameters",void 0),(0,Q.e)([(0,h.n)("refractionFresnelParameters")],M.prototype,"_refractionFresnelParameters",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"refractionFresnelParameters",void 0),(0,Q.e)([(0,h.n)("emissiveFresnelParameters")],M.prototype,"_emissiveFresnelParameters",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"emissiveFresnelParameters",void 0),(0,Q.e)([(0,h.N)("useReflectionFresnelFromSpecular")],M.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsFresnelDirty")],M.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Q.e)([(0,h.N)("useGlossinessFromSpecularMapAlpha")],M.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Q.e)([(0,h.N)("maxSimultaneousLights")],M.prototype,"_maxSimultaneousLights",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsLightsDirty")],M.prototype,"maxSimultaneousLights",void 0),(0,Q.e)([(0,h.N)("invertNormalMapX")],M.prototype,"_invertNormalMapX",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapX",void 0),(0,Q.e)([(0,h.N)("invertNormalMapY")],M.prototype,"_invertNormalMapY",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"invertNormalMapY",void 0),(0,Q.e)([(0,h.N)("twoSidedLighting")],M.prototype,"_twoSidedLighting",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsTexturesDirty")],M.prototype,"twoSidedLighting",void 0),(0,Q.e)([(0,h.N)("applyDecalMapAfterDetailMap")],M.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Q.e)([(0,h.b)("_markAllSubMeshesAsMiscDirty")],M.prototype,"applyDecalMapAfterDetailMap",void 0),(0,P.h)("BABYLON.StandardMaterial",M),N.d.DefaultMaterialFactory=R=>new M("default material",R)}}]);