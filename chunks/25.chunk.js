"use strict";(self.hwpa2z1pqte=self.hwpa2z1pqte||[]).push([[25],{13261:(h,R,l)=>{l.d(R,{d:()=>c});var j=l(12882),a=l(13179),D=l(12887),U=l(13254),F=l(13247),w=l(13266),mh=l(13219);class u extends F.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class c extends w.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(h){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(h,"DetailMap",140,new u,R),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=a.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=h._dirtyCallbacks[1]}isReadyForSubMesh(h,R,l){return!this._isEnabled||!(h._areTexturesDirty&&R.texturesEnabled&&l.getCaps().standardDerivatives&&this._texture&&U.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(h,R){if(this._isEnabled){h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const l=R.getEngine();h._areTexturesDirty&&(l.getCaps().standardDerivatives&&this._texture&&U.b.DetailTextureEnabled&&this._isEnabled?((0,mh.R)(this._texture,h,"DETAIL"),h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):h.DETAIL=!1)}else h.DETAIL=!1}bindForSubMesh(h,R){if(!this._isEnabled)return;const l=this._material.isFrozen;h.useUbo&&l&&h.isSync||this._texture&&U.b.DetailTextureEnabled&&(h.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,mh.t)(this._texture,h,"detail")),R.texturesEnabled&&this._texture&&U.b.DetailTextureEnabled&&h.setTexture("detailSampler",this._texture)}hasTexture(h){return this._texture===h}getActiveTextures(h){this._texture&&h.push(this._texture)}getAnimatables(h){this._texture&&this._texture.animations&&this._texture.animations.length>0&&h.push(this._texture)}dispose(h){var R;h&&(null===(R=this._texture)||void 0===R||R.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(h){h.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,j.e)([(0,D.x)("detailTexture"),(0,D.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"texture",void 0),(0,j.e)([(0,D.G)()],c.prototype,"diffuseBlendLevel",void 0),(0,j.e)([(0,D.G)()],c.prototype,"roughnessBlendLevel",void 0),(0,j.e)([(0,D.G)()],c.prototype,"bumpLevel",void 0),(0,j.e)([(0,D.G)(),(0,D.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"normalBlendMethod",void 0),(0,j.e)([(0,D.G)(),(0,D.b)("_markAllSubMeshesAsTexturesDirty")],c.prototype,"isEnabled",void 0)},13247:(h,R,l)=>{l.d(R,{c:()=>j});class j{constructor(h){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=h,h)for(const R in h)Object.prototype.hasOwnProperty.call(h,R)&&this._setDefaultValue(R)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||h,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const h of Object.keys(this))"_"!==h[0]&&this._keys.push(h);if(this._externalProperties)for(const h in this._externalProperties)-1===this._keys.indexOf(h)&&this._keys.push(h)}isEqual(h){if(this._keys.length!==h._keys.length)return!1;for(let R=0;R<this._keys.length;R++){const l=this._keys[R];if(this[l]!==h[l])return!1}return!0}cloneTo(h){this._keys.length!==h._keys.length&&(h._keys=this._keys.slice(0));for(let R=0;R<this._keys.length;R++){const l=this._keys[R];h[l]=this[l]}}reset(){for(const h of this._keys)this._setDefaultValue(h)}_setDefaultValue(h){var R,l,j,a;const D=(null===(R=this._externalProperties)||void 0===R||null===(l=R[h])||void 0===l?void 0:l.type)??typeof this[h],U=null===(j=this._externalProperties)||void 0===j||null===(a=j[h])||void 0===a?void 0:a.default;switch(D){case"number":this[h]=U??0;break;case"string":this[h]=U??"";break;default:this[h]=U??!1}}toString(){let h="";for(let R=0;R<this._keys.length;R++){const l=this._keys[R],j=this[l];switch(typeof j){case"number":case"string":h+="#define "+l+" "+j+"\n";break;default:j&&(h+="#define "+l+"\n")}}return h}}},13254:(h,R,l)=>{l.d(R,{b:()=>a});var j=l(12797);class a{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){this._DiffuseTextureEnabled!==h&&(this._DiffuseTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(h){this._BaseWeightTextureEnabled!==h&&(this._BaseWeightTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(h){this._BaseDiffuseRoughnessTextureEnabled!==h&&(this._BaseDiffuseRoughnessTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(h){this._DetailTextureEnabled!==h&&(this._DetailTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(h){this._DecalMapEnabled!==h&&(this._DecalMapEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(h){this._AmbientTextureEnabled!==h&&(this._AmbientTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(h){this._OpacityTextureEnabled!==h&&(this._OpacityTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){this._ReflectionTextureEnabled!==h&&(this._ReflectionTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){this._EmissiveTextureEnabled!==h&&(this._EmissiveTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(h){this._SpecularTextureEnabled!==h&&(this._SpecularTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(h){this._BumpTextureEnabled!==h&&(this._BumpTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(h){this._LightmapTextureEnabled!==h&&(this._LightmapTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(h){this._RefractionTextureEnabled!==h&&(this._RefractionTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){this._ColorGradingTextureEnabled!==h&&(this._ColorGradingTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(h){this._FresnelEnabled!==h&&(this._FresnelEnabled=h,j.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(h){this._ClearCoatTextureEnabled!==h&&(this._ClearCoatTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(h){this._ClearCoatBumpTextureEnabled!==h&&(this._ClearCoatBumpTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(h){this._ClearCoatTintTextureEnabled!==h&&(this._ClearCoatTintTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(h){this._SheenTextureEnabled!==h&&(this._SheenTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(h){this._AnisotropicTextureEnabled!==h&&(this._AnisotropicTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(h){this._ThicknessTextureEnabled!==h&&(this._ThicknessTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(h){this._RefractionIntensityTextureEnabled!==h&&(this._RefractionIntensityTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(h){this._TranslucencyIntensityTextureEnabled!==h&&(this._TranslucencyIntensityTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(h){this._TranslucencyColorTextureEnabled!==h&&(this._TranslucencyColorTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(h){this._IridescenceTextureEnabled!==h&&(this._IridescenceTextureEnabled=h,j.c.MarkAllMaterialsAsDirty(1))}}a._DiffuseTextureEnabled=!0,a._BaseWeightTextureEnabled=!0,a._BaseDiffuseRoughnessTextureEnabled=!0,a._DetailTextureEnabled=!0,a._DecalMapEnabled=!0,a._AmbientTextureEnabled=!0,a._OpacityTextureEnabled=!0,a._ReflectionTextureEnabled=!0,a._EmissiveTextureEnabled=!0,a._SpecularTextureEnabled=!0,a._BumpTextureEnabled=!0,a._LightmapTextureEnabled=!0,a._RefractionTextureEnabled=!0,a._ColorGradingTextureEnabled=!0,a._FresnelEnabled=!0,a._ClearCoatTextureEnabled=!0,a._ClearCoatBumpTextureEnabled=!0,a._ClearCoatTintTextureEnabled=!0,a._SheenTextureEnabled=!0,a._AnisotropicTextureEnabled=!0,a._ThicknessTextureEnabled=!0,a._RefractionIntensityTextureEnabled=!0,a._TranslucencyIntensityTextureEnabled=!0,a._TranslucencyColorTextureEnabled=!0,a._IridescenceTextureEnabled=!0},13272:(h,R,l)=>{l.d(R,{b:()=>D});var j,a=l(12900);!function(h){h[h.Zero=0]="Zero",h[h.One=1]="One",h[h.MaxViewZ=2]="MaxViewZ"}(j||(j={}));class D{static CreateConfiguration(h){return D._Configurations[h]={defines:{},previousWorldMatrices:{},previousViewProjection:a.Matrix.Zero(),currentViewProjection:a.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},D._Configurations[h]}static DeleteConfiguration(h){delete D._Configurations[h]}static GetConfiguration(h){return D._Configurations[h]}static AddUniformsAndSamplers(h,R){h.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(h,R){for(const l of R)if(l.YF)for(const R of l.YF)R._removeDrawWrapper(h)}static PrepareDefines(h,R,l){if(!l._arePrePassDirty)return;const j=D._Configurations[h];if(!j)return;l.PREPASS=!0,l.PREPASS_COLOR=!1,l.PREPASS_COLOR_INDEX=-1;let a=0;for(let U=0;U<D.GeometryTextureDescriptions.length;U++){const h=D.GeometryTextureDescriptions[U],R=h.define,F=h.defineIndex,w=j.defines[F];void 0!==w?(l[R]=!0,l[F]=w,a++):(l[R]=!1,delete l[F])}l.SCENE_MRT_COUNT=a,l.BONES_VELOCITY_ENABLED=R.useBones&&R.computeBonesUsingShaders&&R.skeleton&&!R.skeleton.isUsingTextureForMatrices&&-1===j.excludedSkinnedMesh.indexOf(R)}static Bind(h,R,l,j,a){const U=D._Configurations[h];if(!U)return;const F=l.yh(),w=F.getEngine();if(U.reverseCulling&&w.setStateCullFaceType(F._mirroredCameraPosition?a.cullBackFaces:!a.cullBackFaces),(void 0!==U.defines.PREPASS_VELOCITY_INDEX||void 0!==U.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(U.previousWorldMatrices[l.uniqueId]||(U.previousWorldMatrices[l.uniqueId]=j.clone()),U.previousViewProjection||(U.previousViewProjection=F.getTransformMatrix().clone(),U.currentViewProjection=F.getTransformMatrix().clone()),U.currentViewProjection.updateFlag!==F.getTransformMatrix().updateFlag?(U.lastUpdateFrameId=w.frameId,U.previousViewProjection.D(U.currentViewProjection),U.currentViewProjection.D(F.getTransformMatrix())):U.lastUpdateFrameId!==w.frameId&&(U.lastUpdateFrameId=w.frameId,U.previousViewProjection.D(U.currentViewProjection)),R.setMatrix("previousWorld",U.previousWorldMatrices[l.uniqueId]),R.setMatrix("previousViewProjection",U.previousViewProjection),U.previousWorldMatrices[l.uniqueId]=j.clone(),l.useBones&&l.computeBonesUsingShaders&&l.skeleton)){const h=l.skeleton;if(!h.isUsingTextureForMatrices||-1===R.getUniformIndex("boneTextureWidth")){const j=h.getTransformMatrices(l);j&&(U.previousBones[l.uniqueId]||(U.previousBones[l.uniqueId]=j.slice()),R.setMatrices("mPreviousBones",U.previousBones[l.uniqueId]),U.previousBones[l.uniqueId].set(j))}}}}D.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],D._Configurations={}},13266:(h,R,l)=>{l.d(R,{b:()=>t});var j=l(12882),a=l(12887),D=l(13179),U=l(12749),F=l(12781),w=l(12808);const mh=new RegExp("^([gimus]+)!");class u{constructor(h){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=h,this._scene=h.yh(),this._engine=this._scene.getEngine()}_addPlugin(h){for(let j=0;j<this._plugins.length;++j)if(this._plugins[j].name===h.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!h.isCompatible(this._material.shaderLanguage))throw`The plugin "${h.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const R=h.getClassName();u._MaterialPluginClassToMainDefine[R]||(u._MaterialPluginClassToMainDefine[R]="MATERIALPLUGIN_"+ ++u._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(h,R)=>this._handlePluginEvent(h,R),this._plugins.push(h),this._plugins.sort(((h,R)=>h.priority-R.priority)),this._codeInjectionPoints={};const l={};l[u._MaterialPluginClassToMainDefine[R]]={type:"boolean",default:!0};for(const j of this._plugins)j.collectDefines(l),this._collectPointNames("vertex",j.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",j.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=l,!0}_activatePlugin(h){-1===this._activePlugins.indexOf(h)&&(this._activePlugins.push(h),this._activePlugins.sort(((h,R)=>h.priority-R.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),h.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(h),this._activePluginsForExtraEvents.sort(((h,R)=>h.priority-R.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(h){for(let R=0;R<this._plugins.length;++R)if(this._plugins[R].name===h)return this._plugins[R];return null}_handlePluginEventIsReadyForSubMesh(h){let R=!0;for(const l of this._activePlugins)R=R&&l.isReadyForSubMesh(h.defines,this._scene,this._engine,h.subMesh);h.isReadyForSubMesh=R}_handlePluginEventPrepareDefinesBeforeAttributes(h){for(const R of this._activePlugins)R.prepareDefinesBeforeAttributes(h.defines,this._scene,h.mesh)}_handlePluginEventPrepareDefines(h){for(const R of this._activePlugins)R.prepareDefines(h.defines,this._scene,h.mesh)}_handlePluginEventHardBindForSubMesh(h){for(const R of this._activePluginsForExtraEvents)R.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventBindForSubMesh(h){for(const R of this._activePlugins)R.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventHasRenderTargetTextures(h){let R=!1;for(const l of this._activePluginsForExtraEvents)if(R=l.hasRenderTargetTextures(),R)break;h.hasRenderTargetTextures=R}_handlePluginEventFillRenderTargetTextures(h){for(const R of this._activePluginsForExtraEvents)R.fillRenderTargetTextures(h.renderTargets)}_handlePluginEvent(h,R){switch(h){case 512:{const h=R;for(const R of this._activePlugins)R.getActiveTextures(h.activeTextures);break}case 256:{const h=R;for(const R of this._activePlugins)R.getAnimatables(h.animatables);break}case 1024:{const h=R;let l=!1;for(const R of this._activePlugins)if(l=R.hasTexture(h.texture),l)break;h.hasTexture=l;break}case 2:{const h=R;for(const R of this._plugins)R.dispose(h.forceDisposeTextures);break}case 4:R.defineNames=this._defineNamesFromPlugins;break;case 128:{const h=R;for(const R of this._activePlugins)h.fallbackRank=R.addFallbacks(h.defines,h.fallbacks,h.fallbackRank),R.getAttributes(h.attributes,this._scene,h.mesh);this._uniformList.length>0&&h.uniforms.push(...this._uniformList),this._samplerList.length>0&&h.samplers.push(...this._samplerList),this._uboList.length>0&&h.uniformBuffersNames.push(...this._uboList),h.customCode=this._injectCustomCode(h,h.customCode);break}case 8:{const h=R;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const l=1===this._material.shaderLanguage;for(const R of this._plugins){const j=R.getUniforms(this._material.shaderLanguage);if(j){if(j.ubo)for(const R of j.ubo){if(R.size&&R.type){const j=R.arraySize??0;if(h.ubo.addUniform(R.name,R.size,j),l){let h;switch(R.type){case"mat4":h="mat4x4f";break;case"float":h="f32";break;default:h=`${R.type}f`}this._uboDeclaration+=j>0?`uniform ${R.name}: array<${h}, ${j}>;\n`:`uniform ${R.name}: ${h};\n`}else this._uboDeclaration+=`${R.type} ${R.name}${j>0?`[${j}]`:""};\n`}this._uniformList.push(R.name)}j.vertex&&(this._vertexDeclaration+=j.vertex+"\n"),j.fragment&&(this._fragmentDeclaration+=j.fragment+"\n")}R.getSamplers(this._samplerList),R.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(h,R){if(R)for(const l in R)this._codeInjectionPoints[h]||(this._codeInjectionPoints[h]={}),this._codeInjectionPoints[h][l]=!0}_injectCustomCode(h,R){return(l,j)=>{var a;R&&(j=R(l,j)),this._uboDeclaration&&(j=j.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(j=j.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(j=j.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const D=null===(a=this._codeInjectionPoints)||void 0===a?void 0:a[l];if(!D)return j;let U=null;for(let R in D){let a="";for(const j of this._activePlugins){var u;let D=null===(u=j.getCustomCode(l,this._material.shaderLanguage))||void 0===u?void 0:u[R];if(D){if(j.resolveIncludes){if(null===U){const R=0;U={defines:[],indexParameters:h.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:w.d.GetShadersRepository(R),includesShadersStore:w.d.GetIncludesShadersStore(R),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,UF:this._engine.UF,processCodeAfterIncludes:void 0}}U.isFragment="fragment"===l,(0,F.k)(D,U,(h=>D=h))}a+=D+"\n"}}if(a.length>0)if("!"===R.charAt(0)){R=R.substring(1);let h="g";if("!"===R.charAt(0))h="",R=R.substring(1);else{const l=mh.exec(R);l&&l.length>=2&&(h=l[1],R=R.substring(h.length+1))}h.indexOf("g")<0&&(h+="g");const l=j,D=new RegExp(R,h);let U=D.exec(l);for(;null!==U;){let h=a;for(let R=0;R<U.length;++R)h=h.replace("$"+R,U[R]);j=j.replace(U[0],h),U=D.exec(l)}}else{const h="#define "+R;j=j.replace(h,"\n"+a+"\n"+h)}}return j}}}u._MaterialPluginClassToMainDefine={},u._MaterialPluginCounter=0,U.b.OnEnginesDisposedObservable.add((()=>{Q()}));const c=[];let J=!1,q=null;function Q(){c.length=0,J=!1,D.e.OnEventObservable.remove(q),q=null}var Y=l(12942),s=l(12852);class t{isCompatible(h){return 0===h}_enable(h){h&&this._pluginManager._activatePlugin(this)}constructor(h,R,l,j){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],D=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=h,this.name=R,this.priority=l,this.resolveIncludes=U,h.pluginManager||(h.pluginManager=new u(h),h.mw.add((()=>{h.pluginManager=void 0}))),this._pluginDefineNames=j,this._pluginManager=h.pluginManager,a&&this._pluginManager._addPlugin(this),D&&this._enable(!0),this.markAllDefinesAsDirty=h._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(h,R,l,j){return!0}hardBindForSubMesh(h,R,l,j){}bindForSubMesh(h,R,l,j){}dispose(h){}getCustomCode(h){return null}collectDefines(h){if(this._pluginDefineNames)for(const R of Object.keys(this._pluginDefineNames)){if("_"===R[0])continue;const l=typeof this._pluginDefineNames[R];h[R]={type:"number"===l?"number":"string"===l?"string":"boolean"===l?"boolean":"object",default:this._pluginDefineNames[R]}}}prepareDefinesBeforeAttributes(h,R,l){}prepareDefines(h,R,l){}hasTexture(h){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(h){}getActiveTextures(h){}getAnimatables(h){}addFallbacks(h,R,l){return l}getSamplers(h){}getAttributes(h,R,l){}getUniformBuffersNames(h){}getUniforms(){return{}}copyTo(h){Y.c.Clone((()=>h),this)}serialize(){return Y.c.Serialize(this)}parse(h,R,l){Y.c.Parse((()=>this),h,R,l)}}(0,j.e)([(0,a.G)()],t.prototype,"name",void 0),(0,j.e)([(0,a.G)()],t.prototype,"priority",void 0),(0,j.e)([(0,a.G)()],t.prototype,"resolveIncludes",void 0),(0,j.e)([(0,a.G)()],t.prototype,"registerForExtraEvents",void 0),(0,s.f)("BABYLON.MaterialPluginBase",t)},13244:(h,R,l)=>{l.d(R,{e:()=>j});class j{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(h){h.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(h){}bindForSubMesh(h,R,l,j,a){if(R.prePassRenderer&&R.prePassRenderer.enabled&&R.prePassRenderer.currentRTisSceneRT&&(-1!==R.prePassRenderer.getIndex(2)||-1!==R.prePassRenderer.getIndex(11))){this.previousWorldMatrices[l.uniqueId]||(this.previousWorldMatrices[l.uniqueId]=j.clone()),this.previousViewProjection||(this.previousViewProjection=R.getTransformMatrix().clone(),this.currentViewProjection=R.getTransformMatrix().clone());const a=R.getEngine();this.currentViewProjection.updateFlag!==R.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=a.frameId,this.previousViewProjection.D(this.currentViewProjection),this.currentViewProjection.D(R.getTransformMatrix())):this._lastUpdateFrameId!==a.frameId&&(this._lastUpdateFrameId=a.frameId,this.previousViewProjection.D(this.currentViewProjection)),h.setMatrix("previousWorld",this.previousWorldMatrices[l.uniqueId]),h.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[l.uniqueId]=j.clone()}}}},13235:(h,R,l)=>{l.d(R,{ER:()=>y});var j=l(12882),a=l(12887),D=l(12995),U=l(13126),F=l(12952),w=l(12984),mh=l(13244),u=l(13128),c=l(13179),J=l(13247),q=l(13177),Q=l(12874),Y=l(12852),s=l(13254),t=l(13175),f=l(13261),T=l(13226),E=l(13219),x=l(12942),G=l(13272);const p={effect:null,subMesh:null};class O extends J.c{constructor(h){super(h),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(h){const R=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const l of R)this[l]=l===h}}class y extends q.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(h){this._attachImageProcessingConfiguration(h),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(h){h!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=h||this.yh().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(h){this.imageProcessingConfiguration.colorCurvesEnabled=h}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(h){this.imageProcessingConfiguration.colorGradingEnabled=h}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(h){this._imageProcessingConfiguration.toneMappingEnabled=h}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(h){this._imageProcessingConfiguration.exposure=h}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(h){this._imageProcessingConfiguration.contrast=h}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(h){this._imageProcessingConfiguration.colorGradingTexture=h}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(h){this._imageProcessingConfiguration.colorCurves=h}get canRenderToMRT(){return!0}constructor(h,R){super(h,R,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||y.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new F.xR(0,0,0),this.diffuseColor=new F.xR(1,1,1),this.specularColor=new F.xR(1,1,1),this.emissiveColor=new F.xR(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new D.g(16),this._globalAmbientColor=new F.xR(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new f.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new mh.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),y.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),y.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(y.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(y.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"ER"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===c.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.tF&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==c.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.tF||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(h,R){let j=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const a=R._drawWrapper;if(a.effect&&this.isFrozen&&a._wasPreviouslyReady&&a._wasPreviouslyUsingInstances===j)return!0;R.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),R.materialDefines=new O(this._eventInfo.defineNames));const D=this.yh(),U=R.materialDefines;if(this._isReadyForSubMesh(R))return!0;const F=D.getEngine();U._needNormals=(0,E.P)(D,h,U,!0,this._maxSimultaneousLights,this._disableLighting),(0,E.X)(D,U);const c=this.needAlphaBlendingForMesh(h)&&this.yh().useOrderIndependentTransparency;if((0,E.bb)(D,U,this.canRenderToMRT&&!c),(0,E.Z)(D,U,c),G.b.PrepareDefines(F.currentRenderPassId,h,U),U._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,U._needUVs=!1;for(let h=1;h<=6;++h)U["MAINUV"+h]=!1;if(D.texturesEnabled){if(U.DIFFUSEDIRECTUV=0,U.BUMPDIRECTUV=0,U.AMBIENTDIRECTUV=0,U.OPACITYDIRECTUV=0,U.EMISSIVEDIRECTUV=0,U.SPECULARDIRECTUV=0,U.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&y.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._diffuseTexture,U,"DIFFUSE")}else U.DIFFUSE=!1;if(this._ambientTexture&&y.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._ambientTexture,U,"AMBIENT")}else U.AMBIENT=!1;if(this._opacityTexture&&y.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._opacityTexture,U,"OPACITY"),U.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else U.OPACITY=!1;if(this._reflectionTexture&&y.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(U._needNormals=!0,U.REFLECTION=!0,U.ROUGHNESS=this._roughness>0,U.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,U.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===Q.b.INVCUBIC_MODE,U.REFLECTIONMAP_3D=this._reflectionTexture.isCube,U.REFLECTIONMAP_OPPOSITEZ=U.REFLECTIONMAP_3D&&this.yh().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,U.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case Q.b.EXPLICIT_MODE:U.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case Q.b.PLANAR_MODE:U.setReflectionMode("REFLECTIONMAP_PLANAR");break;case Q.b.PROJECTION_MODE:U.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case Q.b.SKYBOX_MODE:U.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case Q.b.SPHERICAL_MODE:U.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case Q.b.EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case Q.b.FIXED_EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case Q.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:U.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case Q.b.CUBIC_MODE:case Q.b.INVCUBIC_MODE:default:U.setReflectionMode("REFLECTIONMAP_CUBIC")}U.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else U.REFLECTION=!1,U.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&y.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._emissiveTexture,U,"EMISSIVE")}else U.EMISSIVE=!1;if(this._lightmapTexture&&y.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._lightmapTexture,U,"LIGHTMAP"),U.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,U.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else U.LIGHTMAP=!1;if(this._specularTexture&&y.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,E.R)(this._specularTexture,U,"SPECULAR"),U.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else U.SPECULAR=!1;if(D.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&y.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,E.R)(this._bumpTexture,U,"BUMP"),U.PARALLAX=this._useParallax,U.PARALLAX_RHS=D.useRightHandedSystem,U.PARALLAXOCCLUSION=this._useParallaxOcclusion,U.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else U.BUMP=!1,U.PARALLAX=!1,U.PARALLAX_RHS=!1,U.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&y.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;U._needUVs=!0,U.REFRACTION=!0,U.REFRACTIONMAP_3D=this._refractionTexture.isCube,U.RGBDREFRACTION=this._refractionTexture.isRGBD,U.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else U.REFRACTION=!1;U.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else U.DIFFUSE=!1,U.AMBIENT=!1,U.OPACITY=!1,U.REFLECTION=!1,U.EMISSIVE=!1,U.LIGHTMAP=!1,U.BUMP=!1,U.REFRACTION=!1;U.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),U.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,U.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,U.SPECULAROVERALPHA=this._useSpecularOverAlpha,U.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,U.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,U.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(h)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=U,this._eventInfo.subMesh=R,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(U._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(U),U.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,U.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(U._areFresnelDirty&&(y.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(U.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,U.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,U.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,U.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,U.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,U.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,U._needNormals=!0,U.FRESNEL=!0):U.FRESNEL=!1),U.AREALIGHTUSED)for(let l=0;l<h.lightSources.length;l++)if(!h.lightSources[l]._isReady())return!1;(0,E.U)(h,D,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(h),U,this._applyDecalMapAfterDetailMap),(0,E.L)(D,F,this,U,j,null,R.getRenderingMesh().hasThinInstances),this._eventInfo.defines=U,this._eventInfo.mesh=h,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,E.K)(h,U,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let J=!1;if(U.isDirty){const j=U._areLightsDisposed;U.markAsProcessed();const a=new t.d;U.REFLECTION&&a.addFallback(0,"REFLECTION"),U.SPECULAR&&a.addFallback(0,"SPECULAR"),U.BUMP&&a.addFallback(0,"BUMP"),U.PARALLAX&&a.addFallback(1,"PARALLAX"),U.PARALLAX_RHS&&a.addFallback(1,"PARALLAX_RHS"),U.PARALLAXOCCLUSION&&a.addFallback(0,"PARALLAXOCCLUSION"),U.SPECULAROVERALPHA&&a.addFallback(0,"SPECULAROVERALPHA"),U.FOG&&a.addFallback(1,"FOG"),U.POINTSIZE&&a.addFallback(0,"POINTSIZE"),U.LOGARITHMICDEPTH&&a.addFallback(0,"LOGARITHMICDEPTH"),(0,E.x)(U,a,this._maxSimultaneousLights),U.SPECULARTERM&&a.addFallback(0,"SPECULARTERM"),U.DIFFUSEFRESNEL&&a.addFallback(1,"DIFFUSEFRESNEL"),U.OPACITYFRESNEL&&a.addFallback(2,"OPACITYFRESNEL"),U.REFLECTIONFRESNEL&&a.addFallback(3,"REFLECTIONFRESNEL"),U.EMISSIVEFRESNEL&&a.addFallback(4,"EMISSIVEFRESNEL"),U.FRESNEL&&a.addFallback(4,"FRESNEL"),U.MULTIVIEW&&a.addFallback(0,"MULTIVIEW");const c=[w.g.PositionKind];U.NORMAL&&c.push(w.g.NormalKind),U.TANGENT&&c.push(w.g.TangentKind);for(let h=1;h<=6;++h)U["UV"+h]&&c.push(`uv${1===h?"":h}`);U.VERTEXCOLOR&&c.push(w.g.ColorKind),(0,E.A)(c,h,U,a),(0,E.B)(c,U),(0,E.F)(c,h,U),(0,E.z)(c,h,U);let q="default";const Q=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],Y=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],s=["Material","Scene","Mesh"],f={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:U.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=a,this._eventInfo.fallbackRank=0,this._eventInfo.defines=U,this._eventInfo.uniforms=Q,this._eventInfo.attributes=c,this._eventInfo.samplers=Y,this._eventInfo.uniformBuffersNames=s,this._eventInfo.customCode=void 0,this._eventInfo.mesh=h,this._eventInfo.indexParameters=f,this._callbackPluginEventGeneric(128,this._eventInfo),G.b.AddUniformsAndSamplers(Q,Y),mh.e.AddUniforms(Q),mh.e.AddSamplers(Y),u.e&&(u.e.PrepareUniforms(Q,U),u.e.PrepareSamplers(Y,U)),(0,E.db)({uniformsNames:Q,uniformBuffersNames:s,samplers:Y,defines:U,maxSimultaneousLights:this._maxSimultaneousLights}),(0,T.d)(Q);const x={};this.customShaderNameResolve&&(q=this.customShaderNameResolve(q,Q,s,Y,U,c,x));const O=U.toString(),y=R.effect;let v=D.getEngine().createEffect(q,{attributes:c,uniformsNames:Q,uniformBuffersNames:s,samplers:Y,defines:O,fallbacks:a,onCompiled:this.onCompiled,onError:this.onError,indexParameters:f,processFinalCode:x.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:U.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([l.e(41),l.e(64)]).then(l.bind(l,15481)),Promise.all([l.e(39),l.e(65)]).then(l.bind(l,15625))]):await Promise.all([Promise.all([l.e(34),l.e(67)]).then(l.bind(l,15703)),Promise.all([l.e(33),l.e(68)]).then(l.bind(l,15868))]),this._shadersLoaded=!0}},F);if(this._eventInfo.customCode=void 0,v)if(this._onEffectCreatedObservable&&(p.effect=v,p.subMesh=R,this._onEffectCreatedObservable.notifyObservers(p)),this.allowShaderHotSwapping&&y&&!v.isReady()){if(v=y,U.markAsUnprocessed(),J=this.isFrozen,j)return U._areLightsDisposed=!0,!1}else D.resetCachedMaterial(),R.setEffect(v,U,this._materialContext)}return!(!R.effect||!R.effect.isReady())&&(U._renderId=D.getRenderId(),a._wasPreviouslyReady=!J,a._wasPreviouslyUsingInstances=j,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const h=this._uniformBuffer;h.addUniform("diffuseLeftColor",4),h.addUniform("diffuseRightColor",4),h.addUniform("opacityParts",4),h.addUniform("reflectionLeftColor",4),h.addUniform("reflectionRightColor",4),h.addUniform("refractionLeftColor",4),h.addUniform("refractionRightColor",4),h.addUniform("emissiveLeftColor",4),h.addUniform("emissiveRightColor",4),h.addUniform("vDiffuseInfos",2),h.addUniform("vAmbientInfos",2),h.addUniform("vOpacityInfos",2),h.addUniform("vReflectionInfos",2),h.addUniform("vReflectionPosition",3),h.addUniform("vReflectionSize",3),h.addUniform("vEmissiveInfos",2),h.addUniform("vLightmapInfos",2),h.addUniform("vSpecularInfos",2),h.addUniform("vBumpInfos",3),h.addUniform("diffuseMatrix",16),h.addUniform("ambientMatrix",16),h.addUniform("opacityMatrix",16),h.addUniform("reflectionMatrix",16),h.addUniform("emissiveMatrix",16),h.addUniform("lightmapMatrix",16),h.addUniform("specularMatrix",16),h.addUniform("bumpMatrix",16),h.addUniform("vTangentSpaceParams",2),h.addUniform("pointSize",1),h.addUniform("alphaCutOff",1),h.addUniform("refractionMatrix",16),h.addUniform("vRefractionInfos",4),h.addUniform("vRefractionPosition",3),h.addUniform("vRefractionSize",3),h.addUniform("vSpecularColor",4),h.addUniform("vEmissiveColor",3),h.addUniform("vDiffuseColor",4),h.addUniform("vAmbientColor",3),h.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(h,R,l){const j=this.yh(),a=l.materialDefines;if(!a)return;const D=l.effect;if(!D)return;this._activeEffect=D,R.getMeshUniformBuffer().bindToEffect(D,"Mesh"),R.transferToEffect(h),this._uniformBuffer.bindToEffect(D,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,j,R,h,this.isFrozen),G.b.Bind(j.getEngine().currentRenderPassId,this._activeEffect,R,h,this);const w=j.activeCamera;w?this._uniformBuffer.updateFloat4("cameraInfo",w.fF,w.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=l,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),a.OBJECTSPACE_NORMALMAP&&(h.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const mh=this._mustRebind(j,D,l,R.visibility);(0,E.d)(R,D);const u=this._uniformBuffer;if(mh){if(this.bindViewProjection(D),!u.useUbo||!this.isFrozen||!u.isSync||l._drawWrapper._forceRebindOnNextCall){if(y.FresnelEnabled&&a.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(u.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),u.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&u.updateColor4("opacityParts",new F.xR(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(u.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),u.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(u.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),u.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(u.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),u.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),j.texturesEnabled){if(this._diffuseTexture&&y.DiffuseTextureEnabled&&(u.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,E.t)(this._diffuseTexture,u,"diffuse")),this._ambientTexture&&y.AmbientTextureEnabled&&(u.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,E.t)(this._ambientTexture,u,"ambient")),this._opacityTexture&&y.OpacityTextureEnabled&&(u.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,E.t)(this._opacityTexture,u,"opacity")),this._hasAlphaChannel()&&u.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&y.ReflectionTextureEnabled){if(u.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),u.TF("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const h=this._reflectionTexture;u.updateVector3("vReflectionPosition",h.boundingBoxPosition),u.updateVector3("vReflectionSize",h.boundingBoxSize)}}else u.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&y.EmissiveTextureEnabled&&(u.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,E.t)(this._emissiveTexture,u,"emissive")),this._lightmapTexture&&y.LightmapTextureEnabled&&(u.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,E.t)(this._lightmapTexture,u,"lightmap")),this._specularTexture&&y.SpecularTextureEnabled&&(u.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,E.t)(this._specularTexture,u,"specular")),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&y.BumpTextureEnabled&&(u.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,E.t)(this._bumpTexture,u,"bump"),j._mirroredCameraPosition?u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&y.RefractionTextureEnabled){let h=1;if(this._refractionTexture.isCube||(u.TF("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(h=this._refractionTexture.depth)),u.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,h,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const h=this._refractionTexture;u.updateVector3("vRefractionPosition",h.boundingBoxPosition),u.updateVector3("vRefractionSize",h.boundingBoxSize)}}}this.pointsCloud&&u.updateFloat("pointSize",this.pointSize),u.updateColor4("vSpecularColor",this.specularColor,this.specularPower),u.updateColor3("vEmissiveColor",y.EmissiveTextureEnabled?this.emissiveColor:F.xR.BlackReadOnly),u.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),j.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),u.updateColor3("vAmbientColor",this._globalAmbientColor)}j.texturesEnabled&&(this._diffuseTexture&&y.DiffuseTextureEnabled&&D.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&y.AmbientTextureEnabled&&D.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&y.OpacityTextureEnabled&&D.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&y.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?D.setTexture("reflectionCubeSampler",this._reflectionTexture):D.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&y.EmissiveTextureEnabled&&D.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&y.LightmapTextureEnabled&&D.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&y.SpecularTextureEnabled&&D.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&j.getEngine().getCaps().standardDerivatives&&y.BumpTextureEnabled&&D.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&y.RefractionTextureEnabled&&(this._refractionTexture.isCube?D.setTexture("refractionCubeSampler",this._refractionTexture):D.setTexture("refraction2DSampler",this._refractionTexture))),this.yh().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(R)&&this.yh().depthPeelingRenderer.bind(D),this._eventInfo.subMesh=l,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,T.f)(D,this,j),this.bindEyePosition(D)}else j.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(mh||!this.isFrozen){var c;if(j.lightsEnabled&&!this._disableLighting&&(0,E.k)(j,R,D,a,this._maxSimultaneousLights),(j.fogEnabled&&R.applyFog&&j.fogMode!==U.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||R.receiveShadows||a.PREPASS)&&this.bindView(D),(0,E.g)(j,R,D),a.NUM_MORPH_INFLUENCERS&&(0,E.p)(R,D),a.BAKED_VERTEX_ANIMATION_TEXTURE)null===(c=R.bakedVertexAnimationManager)||void 0===c||c.bind(D,a.INSTANCES);this.useLogarithmicDepth&&(0,E.m)(a,D,j),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(R,this._activeEffect,l),u.update()}getAnimatables(){const h=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&h.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&h.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&h.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&h.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&h.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&h.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&h.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&h.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&h.push(this._refractionTexture),h}getActiveTextures(){const h=super.getActiveTextures();return this._diffuseTexture&&h.push(this._diffuseTexture),this._ambientTexture&&h.push(this._ambientTexture),this._opacityTexture&&h.push(this._opacityTexture),this._reflectionTexture&&h.push(this._reflectionTexture),this._emissiveTexture&&h.push(this._emissiveTexture),this._specularTexture&&h.push(this._specularTexture),this._bumpTexture&&h.push(this._bumpTexture),this._lightmapTexture&&h.push(this._lightmapTexture),this._refractionTexture&&h.push(this._refractionTexture),h}hasTexture(h){return!!super.hasTexture(h)||(this._diffuseTexture===h||(this._ambientTexture===h||(this._opacityTexture===h||(this._reflectionTexture===h||(this._emissiveTexture===h||(this._specularTexture===h||(this._bumpTexture===h||(this._lightmapTexture===h||this._refractionTexture===h))))))))}dispose(h,R){var l,j,a,D,U,F,w,mh,u;R&&(null===(l=this._diffuseTexture)||void 0===l||l.dispose(),null===(j=this._ambientTexture)||void 0===j||j.dispose(),null===(a=this._opacityTexture)||void 0===a||a.dispose(),null===(D=this._reflectionTexture)||void 0===D||D.dispose(),null===(U=this._emissiveTexture)||void 0===U||U.dispose(),null===(F=this._specularTexture)||void 0===F||F.dispose(),null===(w=this._bumpTexture)||void 0===w||w.dispose(),null===(mh=this._lightmapTexture)||void 0===mh||mh.dispose(),null===(u=this._refractionTexture)||void 0===u||u.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(h,R)}clone(h){let R=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const j=x.c.Clone((()=>new y(h,this.yh())),this,{cloneTexturesOnlyOnce:R});return j.name=h,j.id=h,this.uF.copyTo(j.uF),this._clonePlugins(j,l),j}static Parse(h,R,l){const j=x.c.Parse((()=>new y(h.name,R)),h,R,l);return h.uF&&j.uF.parse(h.uF,R,l),c.e._ParsePlugins(h,j,R,l),j}static get DiffuseTextureEnabled(){return s.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){s.b.DiffuseTextureEnabled=h}static get DetailTextureEnabled(){return s.b.DetailTextureEnabled}static set DetailTextureEnabled(h){s.b.DetailTextureEnabled=h}static get AmbientTextureEnabled(){return s.b.AmbientTextureEnabled}static set AmbientTextureEnabled(h){s.b.AmbientTextureEnabled=h}static get OpacityTextureEnabled(){return s.b.OpacityTextureEnabled}static set OpacityTextureEnabled(h){s.b.OpacityTextureEnabled=h}static get ReflectionTextureEnabled(){return s.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){s.b.ReflectionTextureEnabled=h}static get EmissiveTextureEnabled(){return s.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){s.b.EmissiveTextureEnabled=h}static get SpecularTextureEnabled(){return s.b.SpecularTextureEnabled}static set SpecularTextureEnabled(h){s.b.SpecularTextureEnabled=h}static get BumpTextureEnabled(){return s.b.BumpTextureEnabled}static set BumpTextureEnabled(h){s.b.BumpTextureEnabled=h}static get LightmapTextureEnabled(){return s.b.LightmapTextureEnabled}static set LightmapTextureEnabled(h){s.b.LightmapTextureEnabled=h}static get RefractionTextureEnabled(){return s.b.RefractionTextureEnabled}static set RefractionTextureEnabled(h){s.b.RefractionTextureEnabled=h}static get ColorGradingTextureEnabled(){return s.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){s.b.ColorGradingTextureEnabled=h}static get FresnelEnabled(){return s.b.FresnelEnabled}static set FresnelEnabled(h){s.b.FresnelEnabled=h}}y.ForceGLSL=!1,(0,j.e)([(0,a.x)("diffuseTexture")],y.prototype,"_diffuseTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"diffuseTexture",void 0),(0,j.e)([(0,a.x)("ambientTexture")],y.prototype,"_ambientTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"ambientTexture",void 0),(0,j.e)([(0,a.x)("opacityTexture")],y.prototype,"_opacityTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"opacityTexture",void 0),(0,j.e)([(0,a.x)("reflectionTexture")],y.prototype,"_reflectionTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"reflectionTexture",void 0),(0,j.e)([(0,a.x)("emissiveTexture")],y.prototype,"_emissiveTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"emissiveTexture",void 0),(0,j.e)([(0,a.x)("specularTexture")],y.prototype,"_specularTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"specularTexture",void 0),(0,j.e)([(0,a.x)("bumpTexture")],y.prototype,"_bumpTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"bumpTexture",void 0),(0,j.e)([(0,a.x)("lightmapTexture")],y.prototype,"_lightmapTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"lightmapTexture",void 0),(0,j.e)([(0,a.x)("refractionTexture")],y.prototype,"_refractionTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"refractionTexture",void 0),(0,j.e)([(0,a.i)("ambient")],y.prototype,"ambientColor",void 0),(0,j.e)([(0,a.i)("diffuse")],y.prototype,"diffuseColor",void 0),(0,j.e)([(0,a.i)("specular")],y.prototype,"specularColor",void 0),(0,j.e)([(0,a.i)("emissive")],y.prototype,"emissiveColor",void 0),(0,j.e)([(0,a.G)()],y.prototype,"specularPower",void 0),(0,j.e)([(0,a.G)("useAlphaFromDiffuseTexture")],y.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],y.prototype,"useAlphaFromDiffuseTexture",void 0),(0,j.e)([(0,a.G)("useEmissiveAsIllumination")],y.prototype,"_useEmissiveAsIllumination",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useEmissiveAsIllumination",void 0),(0,j.e)([(0,a.G)("linkEmissiveWithDiffuse")],y.prototype,"_linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"linkEmissiveWithDiffuse",void 0),(0,j.e)([(0,a.G)("useSpecularOverAlpha")],y.prototype,"_useSpecularOverAlpha",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useSpecularOverAlpha",void 0),(0,j.e)([(0,a.G)("useReflectionOverAlpha")],y.prototype,"_useReflectionOverAlpha",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useReflectionOverAlpha",void 0),(0,j.e)([(0,a.G)("disableLighting")],y.prototype,"_disableLighting",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsLightsDirty")],y.prototype,"disableLighting",void 0),(0,j.e)([(0,a.G)("useObjectSpaceNormalMap")],y.prototype,"_useObjectSpaceNormalMap",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useObjectSpaceNormalMap",void 0),(0,j.e)([(0,a.G)("useParallax")],y.prototype,"_useParallax",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useParallax",void 0),(0,j.e)([(0,a.G)("useParallaxOcclusion")],y.prototype,"_useParallaxOcclusion",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useParallaxOcclusion",void 0),(0,j.e)([(0,a.G)()],y.prototype,"parallaxScaleBias",void 0),(0,j.e)([(0,a.G)("roughness")],y.prototype,"_roughness",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"roughness",void 0),(0,j.e)([(0,a.G)()],y.prototype,"indexOfRefraction",void 0),(0,j.e)([(0,a.G)()],y.prototype,"invertRefractionY",void 0),(0,j.e)([(0,a.G)()],y.prototype,"alphaCutOff",void 0),(0,j.e)([(0,a.G)("useLightmapAsShadowmap")],y.prototype,"_useLightmapAsShadowmap",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useLightmapAsShadowmap",void 0),(0,j.e)([(0,a.k)("diffuseFresnelParameters")],y.prototype,"_diffuseFresnelParameters",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"diffuseFresnelParameters",void 0),(0,j.e)([(0,a.k)("opacityFresnelParameters")],y.prototype,"_opacityFresnelParameters",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],y.prototype,"opacityFresnelParameters",void 0),(0,j.e)([(0,a.k)("reflectionFresnelParameters")],y.prototype,"_reflectionFresnelParameters",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"reflectionFresnelParameters",void 0),(0,j.e)([(0,a.k)("refractionFresnelParameters")],y.prototype,"_refractionFresnelParameters",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"refractionFresnelParameters",void 0),(0,j.e)([(0,a.k)("emissiveFresnelParameters")],y.prototype,"_emissiveFresnelParameters",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"emissiveFresnelParameters",void 0),(0,j.e)([(0,a.G)("useReflectionFresnelFromSpecular")],y.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsFresnelDirty")],y.prototype,"useReflectionFresnelFromSpecular",void 0),(0,j.e)([(0,a.G)("useGlossinessFromSpecularMapAlpha")],y.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,j.e)([(0,a.G)("maxSimultaneousLights")],y.prototype,"_maxSimultaneousLights",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsLightsDirty")],y.prototype,"maxSimultaneousLights",void 0),(0,j.e)([(0,a.G)("invertNormalMapX")],y.prototype,"_invertNormalMapX",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"invertNormalMapX",void 0),(0,j.e)([(0,a.G)("invertNormalMapY")],y.prototype,"_invertNormalMapY",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"invertNormalMapY",void 0),(0,j.e)([(0,a.G)("twoSidedLighting")],y.prototype,"_twoSidedLighting",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsTexturesDirty")],y.prototype,"twoSidedLighting",void 0),(0,j.e)([(0,a.G)("applyDecalMapAfterDetailMap")],y.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,j.e)([(0,a.b)("_markAllSubMeshesAsMiscDirty")],y.prototype,"applyDecalMapAfterDetailMap",void 0),(0,Y.f)("BABYLON.StandardMaterial",y),U.e.DefaultMaterialFactory=h=>new y("default material",h)}}]);