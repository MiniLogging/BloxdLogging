"use strict";(self.pp3k1ov3ibi=self.pp3k1ov3ibi||[]).push([[25],{12772:(M,Z,P)=>{P.d(Z,{c:()=>O});var x=P(12351),c=P(12680),w=P(12359),v=P(12766),G=P(12759),mM=P(12775),K=P(12731);class d extends G.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class O extends mM.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(M){let Z=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(M,"DetailMap",140,new d,Z),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=c.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=M._dirtyCallbacks[1]}isReadyForSubMesh(M,Z,P){return!this._isEnabled||!(M._areTexturesDirty&&Z.texturesEnabled&&P.getCaps().standardDerivatives&&this._texture&&v.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(M,Z){if(this._isEnabled){M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const P=Z.getEngine();M._areTexturesDirty&&(P.getCaps().standardDerivatives&&this._texture&&v.e.DetailTextureEnabled&&this._isEnabled?((0,K.L)(this._texture,M,"DETAIL"),M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):M.DETAIL=!1)}else M.DETAIL=!1}bindForSubMesh(M,Z){if(!this._isEnabled)return;const P=this._material.isFrozen;M.useUbo&&P&&M.isSync||this._texture&&v.e.DetailTextureEnabled&&(M.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,K.u)(this._texture,M,"detail")),Z.texturesEnabled&&this._texture&&v.e.DetailTextureEnabled&&M.setTexture("detailSampler",this._texture)}hasTexture(M){return this._texture===M}getActiveTextures(M){this._texture&&M.push(this._texture)}getAnimatables(M){this._texture&&this._texture.animations&&this._texture.animations.length>0&&M.push(this._texture)}dispose(M){var Z;M&&(null===(Z=this._texture)||void 0===Z||Z.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(M){M.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,x.c)([(0,w.A)("detailTexture"),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"texture",void 0),(0,x.c)([(0,w.H)()],O.prototype,"diffuseBlendLevel",void 0),(0,x.c)([(0,w.H)()],O.prototype,"roughnessBlendLevel",void 0),(0,x.c)([(0,w.H)()],O.prototype,"bumpLevel",void 0),(0,x.c)([(0,w.H)(),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"normalBlendMethod",void 0),(0,x.c)([(0,w.H)(),(0,w.b)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"isEnabled",void 0)},12759:(M,Z,P)=>{P.d(Z,{e:()=>x});class x{constructor(M){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=M,M)for(const Z in M)Object.prototype.hasOwnProperty.call(M,Z)&&this._setDefaultValue(Z)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||M,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const M of Object.keys(this))"_"!==M[0]&&this._keys.push(M);if(this._externalProperties)for(const M in this._externalProperties)-1===this._keys.indexOf(M)&&this._keys.push(M)}isEqual(M){if(this._keys.length!==M._keys.length)return!1;for(let Z=0;Z<this._keys.length;Z++){const P=this._keys[Z];if(this[P]!==M[P])return!1}return!0}cloneTo(M){this._keys.length!==M._keys.length&&(M._keys=this._keys.slice(0));for(let Z=0;Z<this._keys.length;Z++){const P=this._keys[Z];M[P]=this[P]}}reset(){for(const M of this._keys)this._setDefaultValue(M)}_setDefaultValue(M){var Z,P,x,c;const w=(null===(Z=this._externalProperties)||void 0===Z||null===(P=Z[M])||void 0===P?void 0:P.type)??typeof this[M],v=null===(x=this._externalProperties)||void 0===x||null===(c=x[M])||void 0===c?void 0:c.default;switch(w){case"number":this[M]=v??0;break;case"string":this[M]=v??"";break;default:this[M]=v??!1}}toString(){let M="";for(let Z=0;Z<this._keys.length;Z++){const P=this._keys[Z],x=this[P];switch(typeof x){case"number":case"string":M+="#define "+P+" "+x+"\n";break;default:x&&(M+="#define "+P+"\n")}}return M}}},12766:(M,Z,P)=>{P.d(Z,{e:()=>c});var x=P(12260);class c{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){this._DiffuseTextureEnabled!==M&&(this._DiffuseTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(M){this._BaseWeightTextureEnabled!==M&&(this._BaseWeightTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(M){this._BaseDiffuseRoughnessTextureEnabled!==M&&(this._BaseDiffuseRoughnessTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(M){this._DetailTextureEnabled!==M&&(this._DetailTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(M){this._DecalMapEnabled!==M&&(this._DecalMapEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(M){this._AmbientTextureEnabled!==M&&(this._AmbientTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(M){this._OpacityTextureEnabled!==M&&(this._OpacityTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){this._ReflectionTextureEnabled!==M&&(this._ReflectionTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){this._EmissiveTextureEnabled!==M&&(this._EmissiveTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(M){this._SpecularTextureEnabled!==M&&(this._SpecularTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(M){this._BumpTextureEnabled!==M&&(this._BumpTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(M){this._LightmapTextureEnabled!==M&&(this._LightmapTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(M){this._RefractionTextureEnabled!==M&&(this._RefractionTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){this._ColorGradingTextureEnabled!==M&&(this._ColorGradingTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(M){this._FresnelEnabled!==M&&(this._FresnelEnabled=M,x.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(M){this._ClearCoatTextureEnabled!==M&&(this._ClearCoatTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(M){this._ClearCoatBumpTextureEnabled!==M&&(this._ClearCoatBumpTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(M){this._ClearCoatTintTextureEnabled!==M&&(this._ClearCoatTintTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(M){this._SheenTextureEnabled!==M&&(this._SheenTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(M){this._AnisotropicTextureEnabled!==M&&(this._AnisotropicTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(M){this._ThicknessTextureEnabled!==M&&(this._ThicknessTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(M){this._RefractionIntensityTextureEnabled!==M&&(this._RefractionIntensityTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(M){this._TranslucencyIntensityTextureEnabled!==M&&(this._TranslucencyIntensityTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(M){this._TranslucencyColorTextureEnabled!==M&&(this._TranslucencyColorTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(M){this._IridescenceTextureEnabled!==M&&(this._IridescenceTextureEnabled=M,x.e.MarkAllMaterialsAsDirty(1))}}c._DiffuseTextureEnabled=!0,c._BaseWeightTextureEnabled=!0,c._BaseDiffuseRoughnessTextureEnabled=!0,c._DetailTextureEnabled=!0,c._DecalMapEnabled=!0,c._AmbientTextureEnabled=!0,c._OpacityTextureEnabled=!0,c._ReflectionTextureEnabled=!0,c._EmissiveTextureEnabled=!0,c._SpecularTextureEnabled=!0,c._BumpTextureEnabled=!0,c._LightmapTextureEnabled=!0,c._RefractionTextureEnabled=!0,c._ColorGradingTextureEnabled=!0,c._FresnelEnabled=!0,c._ClearCoatTextureEnabled=!0,c._ClearCoatBumpTextureEnabled=!0,c._ClearCoatTintTextureEnabled=!0,c._SheenTextureEnabled=!0,c._AnisotropicTextureEnabled=!0,c._ThicknessTextureEnabled=!0,c._RefractionIntensityTextureEnabled=!0,c._TranslucencyIntensityTextureEnabled=!0,c._TranslucencyColorTextureEnabled=!0,c._IridescenceTextureEnabled=!0},12778:(M,Z,P)=>{P.d(Z,{b:()=>w});var x,c=P(12373);!function(M){M[M.Zero=0]="Zero",M[M.One=1]="One",M[M.MaxViewZ=2]="MaxViewZ"}(x||(x={}));class w{static CreateConfiguration(M){return w._Configurations[M]={defines:{},previousWorldMatrices:{},previousViewProjection:c.Matrix.Zero(),currentViewProjection:c.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},w._Configurations[M]}static DeleteConfiguration(M){delete w._Configurations[M]}static GetConfiguration(M){return w._Configurations[M]}static AddUniformsAndSamplers(M,Z){M.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(M,Z){for(const P of Z)if(P.Uc)for(const Z of P.Uc)Z._removeDrawWrapper(M)}static PrepareDefines(M,Z,P){if(!P._arePrePassDirty)return;const x=w._Configurations[M];if(!x)return;P.PREPASS=!0,P.PREPASS_COLOR=!1,P.PREPASS_COLOR_INDEX=-1;let c=0;for(let v=0;v<w.GeometryTextureDescriptions.length;v++){const M=w.GeometryTextureDescriptions[v],Z=M.define,G=M.defineIndex,mM=x.defines[G];void 0!==mM?(P[Z]=!0,P[G]=mM,c++):(P[Z]=!1,delete P[G])}P.SCENE_MRT_COUNT=c,P.BONES_VELOCITY_ENABLED=Z.useBones&&Z.computeBonesUsingShaders&&Z.skeleton&&!Z.skeleton.isUsingTextureForMatrices&&-1===x.excludedSkinnedMesh.indexOf(Z)}static Bind(M,Z,P,x,c){const v=w._Configurations[M];if(!v)return;const G=P.DM(),mM=G.getEngine();if(v.reverseCulling&&mM.setStateCullFaceType(G._mirroredCameraPosition?c.cullBackFaces:!c.cullBackFaces),(void 0!==v.defines.PREPASS_VELOCITY_INDEX||void 0!==v.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(v.previousWorldMatrices[P.uniqueId]||(v.previousWorldMatrices[P.uniqueId]=x.clone()),v.previousViewProjection||(v.previousViewProjection=G.getTransformMatrix().clone(),v.currentViewProjection=G.getTransformMatrix().clone()),v.currentViewProjection.updateFlag!==G.getTransformMatrix().updateFlag?(v.lastUpdateFrameId=mM.frameId,v.previousViewProjection.v(v.currentViewProjection),v.currentViewProjection.v(G.getTransformMatrix())):v.lastUpdateFrameId!==mM.frameId&&(v.lastUpdateFrameId=mM.frameId,v.previousViewProjection.v(v.currentViewProjection)),Z.setMatrix("previousWorld",v.previousWorldMatrices[P.uniqueId]),Z.setMatrix("previousViewProjection",v.previousViewProjection),v.previousWorldMatrices[P.uniqueId]=x.clone(),P.useBones&&P.computeBonesUsingShaders&&P.skeleton)){const M=P.skeleton;if(!M.isUsingTextureForMatrices||-1===Z.getUniformIndex("boneTextureWidth")){const x=M.getTransformMatrices(P);x&&(v.previousBones[P.uniqueId]||(v.previousBones[P.uniqueId]=x.slice()),Z.setMatrices("mPreviousBones",v.previousBones[P.uniqueId]),v.previousBones[P.uniqueId].set(x))}}}}w.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],w._Configurations={}},12775:(M,Z,P)=>{P.d(Z,{b:()=>L});var x=P(12351),c=P(12359),w=P(12680),v=P(12225),G=P(12249),mM=P(12271);const K=new RegExp("^([gimus]+)!");class d{constructor(M){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=M,this._scene=M.DM(),this._engine=this._scene.getEngine()}_addPlugin(M){for(let x=0;x<this._plugins.length;++x)if(this._plugins[x].name===M.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!M.isCompatible(this._material.shaderLanguage))throw`The plugin "${M.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const Z=M.getClassName();d._MaterialPluginClassToMainDefine[Z]||(d._MaterialPluginClassToMainDefine[Z]="MATERIALPLUGIN_"+ ++d._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(M,Z)=>this._handlePluginEvent(M,Z),this._plugins.push(M),this._plugins.sort(((M,Z)=>M.priority-Z.priority)),this._codeInjectionPoints={};const P={};P[d._MaterialPluginClassToMainDefine[Z]]={type:"boolean",default:!0};for(const x of this._plugins)x.collectDefines(P),this._collectPointNames("vertex",x.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",x.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=P,!0}_activatePlugin(M){-1===this._activePlugins.indexOf(M)&&(this._activePlugins.push(M),this._activePlugins.sort(((M,Z)=>M.priority-Z.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),M.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(M),this._activePluginsForExtraEvents.sort(((M,Z)=>M.priority-Z.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(M){for(let Z=0;Z<this._plugins.length;++Z)if(this._plugins[Z].name===M)return this._plugins[Z];return null}_handlePluginEventIsReadyForSubMesh(M){let Z=!0;for(const P of this._activePlugins)Z=Z&&P.isReadyForSubMesh(M.defines,this._scene,this._engine,M.subMesh);M.isReadyForSubMesh=Z}_handlePluginEventPrepareDefinesBeforeAttributes(M){for(const Z of this._activePlugins)Z.prepareDefinesBeforeAttributes(M.defines,this._scene,M.mesh)}_handlePluginEventPrepareDefines(M){for(const Z of this._activePlugins)Z.prepareDefines(M.defines,this._scene,M.mesh)}_handlePluginEventHardBindForSubMesh(M){for(const Z of this._activePluginsForExtraEvents)Z.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventBindForSubMesh(M){for(const Z of this._activePlugins)Z.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventHasRenderTargetTextures(M){let Z=!1;for(const P of this._activePluginsForExtraEvents)if(Z=P.hasRenderTargetTextures(),Z)break;M.hasRenderTargetTextures=Z}_handlePluginEventFillRenderTargetTextures(M){for(const Z of this._activePluginsForExtraEvents)Z.fillRenderTargetTextures(M.renderTargets)}_handlePluginEvent(M,Z){switch(M){case 512:{const M=Z;for(const Z of this._activePlugins)Z.getActiveTextures(M.activeTextures);break}case 256:{const M=Z;for(const Z of this._activePlugins)Z.getAnimatables(M.animatables);break}case 1024:{const M=Z;let P=!1;for(const Z of this._activePlugins)if(P=Z.hasTexture(M.texture),P)break;M.hasTexture=P;break}case 2:{const M=Z;for(const Z of this._plugins)Z.dispose(M.forceDisposeTextures);break}case 4:Z.defineNames=this._defineNamesFromPlugins;break;case 128:{const M=Z;for(const Z of this._activePlugins)M.fallbackRank=Z.addFallbacks(M.defines,M.fallbacks,M.fallbackRank),Z.getAttributes(M.attributes,this._scene,M.mesh);this._uniformList.length>0&&M.uniforms.push(...this._uniformList),this._samplerList.length>0&&M.samplers.push(...this._samplerList),this._uboList.length>0&&M.uniformBuffersNames.push(...this._uboList),M.customCode=this._injectCustomCode(M,M.customCode);break}case 8:{const M=Z;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const P=1===this._material.shaderLanguage;for(const Z of this._plugins){const x=Z.getUniforms(this._material.shaderLanguage);if(x){if(x.ubo)for(const Z of x.ubo){if(Z.size&&Z.type){const x=Z.arraySize??0;if(M.ubo.addUniform(Z.name,Z.size,x),P){let M;switch(Z.type){case"mat4":M="mat4x4f";break;case"float":M="f32";break;default:M=`${Z.type}f`}this._uboDeclaration+=x>0?`uniform ${Z.name}: array<${M}, ${x}>;\n`:`uniform ${Z.name}: ${M};\n`}else this._uboDeclaration+=`${Z.type} ${Z.name}${x>0?`[${x}]`:""};\n`}this._uniformList.push(Z.name)}x.vertex&&(this._vertexDeclaration+=x.vertex+"\n"),x.fragment&&(this._fragmentDeclaration+=x.fragment+"\n")}Z.getSamplers(this._samplerList),Z.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(M,Z){if(Z)for(const P in Z)this._codeInjectionPoints[M]||(this._codeInjectionPoints[M]={}),this._codeInjectionPoints[M][P]=!0}_injectCustomCode(M,Z){return(P,x)=>{var c;Z&&(x=Z(P,x)),this._uboDeclaration&&(x=x.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(x=x.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(x=x.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const w=null===(c=this._codeInjectionPoints)||void 0===c?void 0:c[P];if(!w)return x;let v=null;for(let Z in w){let c="";for(const x of this._activePlugins){var d;let w=null===(d=x.getCustomCode(P,this._material.shaderLanguage))||void 0===d?void 0:d[Z];if(w){if(x.resolveIncludes){if(null===v){const Z=0;v={defines:[],indexParameters:M.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:mM.c.GetShadersRepository(Z),includesShadersStore:mM.c.GetIncludesShadersStore(Z),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,cc:this._engine.cc,processCodeAfterIncludes:void 0}}v.isFragment="fragment"===P,(0,G.k)(w,v,(M=>w=M))}c+=w+"\n"}}if(c.length>0)if("!"===Z.charAt(0)){Z=Z.substring(1);let M="g";if("!"===Z.charAt(0))M="",Z=Z.substring(1);else{const P=K.exec(Z);P&&P.length>=2&&(M=P[1],Z=Z.substring(M.length+1))}M.indexOf("g")<0&&(M+="g");const P=x,w=new RegExp(Z,M);let v=w.exec(P);for(;null!==v;){let M=c;for(let Z=0;Z<v.length;++Z)M=M.replace("$"+Z,v[Z]);x=x.replace(v[0],M),v=w.exec(P)}}else{const M="#define "+Z;x=x.replace(M,"\n"+c+"\n"+M)}}return x}}}d._MaterialPluginClassToMainDefine={},d._MaterialPluginCounter=0,v.b.OnEnginesDisposedObservable.add((()=>{B()}));const O=[];let H=!1,j=null;function B(){O.length=0,H=!1,w.d.OnEventObservable.remove(j),j=null}var U=P(12394),n=P(12317);class L{isCompatible(M){return 0===M}_enable(M){M&&this._pluginManager._activatePlugin(this)}constructor(M,Z,P,x){let c=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],w=arguments.length>5&&void 0!==arguments[5]&&arguments[5],v=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=M,this.name=Z,this.priority=P,this.resolveIncludes=v,M.pluginManager||(M.pluginManager=new d(M),M.Gc.add((()=>{M.pluginManager=void 0}))),this._pluginDefineNames=x,this._pluginManager=M.pluginManager,c&&this._pluginManager._addPlugin(this),w&&this._enable(!0),this.markAllDefinesAsDirty=M._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(M,Z,P,x){return!0}hardBindForSubMesh(M,Z,P,x){}bindForSubMesh(M,Z,P,x){}dispose(M){}getCustomCode(M){return null}collectDefines(M){if(this._pluginDefineNames)for(const Z of Object.keys(this._pluginDefineNames)){if("_"===Z[0])continue;const P=typeof this._pluginDefineNames[Z];M[Z]={type:"number"===P?"number":"string"===P?"string":"boolean"===P?"boolean":"object",default:this._pluginDefineNames[Z]}}}prepareDefinesBeforeAttributes(M,Z,P){}prepareDefines(M,Z,P){}hasTexture(M){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(M){}getActiveTextures(M){}getAnimatables(M){}addFallbacks(M,Z,P){return P}getSamplers(M){}getAttributes(M,Z,P){}getUniformBuffersNames(M){}getUniforms(){return{}}copyTo(M){U.b.Clone((()=>M),this)}serialize(){return U.b.Serialize(this)}parse(M,Z,P){U.b.Parse((()=>this),M,Z,P)}}(0,x.c)([(0,c.H)()],L.prototype,"name",void 0),(0,x.c)([(0,c.H)()],L.prototype,"priority",void 0),(0,x.c)([(0,c.H)()],L.prototype,"resolveIncludes",void 0),(0,x.c)([(0,c.H)()],L.prototype,"registerForExtraEvents",void 0),(0,n.g)("BABYLON.MaterialPluginBase",L)},12751:(M,Z,P)=>{P.d(Z,{c:()=>x});class x{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(M){M.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(M){}bindForSubMesh(M,Z,P,x,c){if(Z.prePassRenderer&&Z.prePassRenderer.enabled&&Z.prePassRenderer.currentRTisSceneRT&&(-1!==Z.prePassRenderer.getIndex(2)||-1!==Z.prePassRenderer.getIndex(11))){this.previousWorldMatrices[P.uniqueId]||(this.previousWorldMatrices[P.uniqueId]=x.clone()),this.previousViewProjection||(this.previousViewProjection=Z.getTransformMatrix().clone(),this.currentViewProjection=Z.getTransformMatrix().clone());const c=Z.getEngine();this.currentViewProjection.updateFlag!==Z.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=c.frameId,this.previousViewProjection.v(this.currentViewProjection),this.currentViewProjection.v(Z.getTransformMatrix())):this._lastUpdateFrameId!==c.frameId&&(this._lastUpdateFrameId=c.frameId,this.previousViewProjection.v(this.currentViewProjection)),M.setMatrix("previousWorld",this.previousWorldMatrices[P.uniqueId]),M.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[P.uniqueId]=x.clone()}}}},12743:(M,Z,P)=>{P.d(Z,{LZ:()=>h});var x=P(12351),c=P(12359),w=P(12457),v=P(12596),G=P(12406),mM=P(12430),K=P(12751),d=P(12605),O=P(12680),H=P(12759),j=P(12675),B=P(12344),U=P(12317),n=P(12766),L=P(12672),u=P(12772),N=P(12735),J=P(12731),t=P(12394),F=P(12778);const D={effect:null,subMesh:null};class l extends H.e{constructor(M){super(M),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(M){const Z=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const P of Z)this[P]=P===M}}class h extends j.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(M){this._attachImageProcessingConfiguration(M),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(M){M!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=M||this.DM().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(M){this.imageProcessingConfiguration.colorCurvesEnabled=M}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(M){this.imageProcessingConfiguration.colorGradingEnabled=M}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(M){this._imageProcessingConfiguration.toneMappingEnabled=M}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(M){this._imageProcessingConfiguration.exposure=M}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(M){this._imageProcessingConfiguration.contrast=M}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(M){this._imageProcessingConfiguration.colorGradingTexture=M}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(M){this._imageProcessingConfiguration.colorCurves=M}get canRenderToMRT(){return!0}constructor(M,Z){super(M,Z,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||h.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new G.uZ(0,0,0),this.diffuseColor=new G.uZ(1,1,1),this.specularColor=new G.uZ(1,1,1),this.emissiveColor=new G.uZ(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new w.g(16),this._globalAmbientColor=new G.uZ(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new u.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new K.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),h.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),h.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(h.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(h.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"LZ"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===O.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Lc&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==O.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Lc||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(M,Z){let x=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const c=Z._drawWrapper;if(c.effect&&this.isFrozen&&c._wasPreviouslyReady&&c._wasPreviouslyUsingInstances===x)return!0;Z.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),Z.materialDefines=new l(this._eventInfo.defineNames));const w=this.DM(),v=Z.materialDefines;if(this._isReadyForSubMesh(Z))return!0;const G=w.getEngine();v._needNormals=(0,J.K)(w,M,v,!0,this._maxSimultaneousLights,this._disableLighting),(0,J.T)(w,v);const O=this.needAlphaBlendingForMesh(M)&&this.DM().useOrderIndependentTransparency;if((0,J.Z)(w,v,this.canRenderToMRT&&!O),(0,J.V)(w,v,O),F.b.PrepareDefines(G.currentRenderPassId,M,v),v._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,v._needUVs=!1;for(let M=1;M<=6;++M)v["MAINUV"+M]=!1;if(w.texturesEnabled){if(v.DIFFUSEDIRECTUV=0,v.BUMPDIRECTUV=0,v.AMBIENTDIRECTUV=0,v.OPACITYDIRECTUV=0,v.EMISSIVEDIRECTUV=0,v.SPECULARDIRECTUV=0,v.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&h.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._diffuseTexture,v,"DIFFUSE")}else v.DIFFUSE=!1;if(this._ambientTexture&&h.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._ambientTexture,v,"AMBIENT")}else v.AMBIENT=!1;if(this._opacityTexture&&h.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._opacityTexture,v,"OPACITY"),v.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else v.OPACITY=!1;if(this._reflectionTexture&&h.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(v._needNormals=!0,v.REFLECTION=!0,v.ROUGHNESS=this._roughness>0,v.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,v.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===B.e.INVCUBIC_MODE,v.REFLECTIONMAP_3D=this._reflectionTexture.isCube,v.REFLECTIONMAP_OPPOSITEZ=v.REFLECTIONMAP_3D&&this.DM().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,v.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case B.e.EXPLICIT_MODE:v.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case B.e.PLANAR_MODE:v.setReflectionMode("REFLECTIONMAP_PLANAR");break;case B.e.PROJECTION_MODE:v.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case B.e.SKYBOX_MODE:v.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case B.e.SPHERICAL_MODE:v.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case B.e.EQUIRECTANGULAR_MODE:v.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case B.e.FIXED_EQUIRECTANGULAR_MODE:v.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case B.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:v.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case B.e.CUBIC_MODE:case B.e.INVCUBIC_MODE:default:v.setReflectionMode("REFLECTIONMAP_CUBIC")}v.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else v.REFLECTION=!1,v.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&h.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._emissiveTexture,v,"EMISSIVE")}else v.EMISSIVE=!1;if(this._lightmapTexture&&h.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._lightmapTexture,v,"LIGHTMAP"),v.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,v.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else v.LIGHTMAP=!1;if(this._specularTexture&&h.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,J.L)(this._specularTexture,v,"SPECULAR"),v.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else v.SPECULAR=!1;if(w.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&h.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,J.L)(this._bumpTexture,v,"BUMP"),v.PARALLAX=this._useParallax,v.PARALLAX_RHS=w.useRightHandedSystem,v.PARALLAXOCCLUSION=this._useParallaxOcclusion,v.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else v.BUMP=!1,v.PARALLAX=!1,v.PARALLAX_RHS=!1,v.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&h.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;v._needUVs=!0,v.REFRACTION=!0,v.REFRACTIONMAP_3D=this._refractionTexture.isCube,v.RGBDREFRACTION=this._refractionTexture.isRGBD,v.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else v.REFRACTION=!1;v.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else v.DIFFUSE=!1,v.AMBIENT=!1,v.OPACITY=!1,v.REFLECTION=!1,v.EMISSIVE=!1,v.LIGHTMAP=!1,v.BUMP=!1,v.REFRACTION=!1;v.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),v.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,v.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,v.SPECULAROVERALPHA=this._useSpecularOverAlpha,v.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,v.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,v.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(M)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=v,this._eventInfo.subMesh=Z,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(v._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(v),v.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,v.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(v._areFresnelDirty&&(h.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(v.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,v.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,v.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,v.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,v.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,v.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,v._needNormals=!0,v.FRESNEL=!0):v.FRESNEL=!1),v.AREALIGHTUSED)for(let P=0;P<M.lightSources.length;P++)if(!M.lightSources[P]._isReady())return!1;(0,J.P)(M,w,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(M),v,this._applyDecalMapAfterDetailMap),(0,J.I)(w,G,this,v,x,null,Z.getRenderingMesh().hasThinInstances),this._eventInfo.defines=v,this._eventInfo.mesh=M,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,J.H)(M,v,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let H=!1;if(v.isDirty){const x=v._areLightsDisposed;v.markAsProcessed();const c=new L.e;v.REFLECTION&&c.addFallback(0,"REFLECTION"),v.SPECULAR&&c.addFallback(0,"SPECULAR"),v.BUMP&&c.addFallback(0,"BUMP"),v.PARALLAX&&c.addFallback(1,"PARALLAX"),v.PARALLAX_RHS&&c.addFallback(1,"PARALLAX_RHS"),v.PARALLAXOCCLUSION&&c.addFallback(0,"PARALLAXOCCLUSION"),v.SPECULAROVERALPHA&&c.addFallback(0,"SPECULAROVERALPHA"),v.FOG&&c.addFallback(1,"FOG"),v.POINTSIZE&&c.addFallback(0,"POINTSIZE"),v.LOGARITHMICDEPTH&&c.addFallback(0,"LOGARITHMICDEPTH"),(0,J.w)(v,c,this._maxSimultaneousLights),v.SPECULARTERM&&c.addFallback(0,"SPECULARTERM"),v.DIFFUSEFRESNEL&&c.addFallback(1,"DIFFUSEFRESNEL"),v.OPACITYFRESNEL&&c.addFallback(2,"OPACITYFRESNEL"),v.REFLECTIONFRESNEL&&c.addFallback(3,"REFLECTIONFRESNEL"),v.EMISSIVEFRESNEL&&c.addFallback(4,"EMISSIVEFRESNEL"),v.FRESNEL&&c.addFallback(4,"FRESNEL"),v.MULTIVIEW&&c.addFallback(0,"MULTIVIEW");const O=[mM.g.PositionKind];v.NORMAL&&O.push(mM.g.NormalKind),v.TANGENT&&O.push(mM.g.TangentKind);for(let M=1;M<=6;++M)v["UV"+M]&&O.push(`uv${1===M?"":M}`);v.VERTEXCOLOR&&O.push(mM.g.ColorKind),(0,J.A)(O,M,v,c),(0,J.C)(O,v),(0,J.E)(O,M,v),(0,J.y)(O,M,v);let j="default";const B=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],U=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],n=["Material","Scene","Mesh"],u={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:v.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=c,this._eventInfo.fallbackRank=0,this._eventInfo.defines=v,this._eventInfo.uniforms=B,this._eventInfo.attributes=O,this._eventInfo.samplers=U,this._eventInfo.uniformBuffersNames=n,this._eventInfo.customCode=void 0,this._eventInfo.mesh=M,this._eventInfo.indexParameters=u,this._callbackPluginEventGeneric(128,this._eventInfo),F.b.AddUniformsAndSamplers(B,U),K.c.AddUniforms(B),K.c.AddSamplers(U),d.c&&(d.c.PrepareUniforms(B,v),d.c.PrepareSamplers(U,v)),(0,J.ab)({uniformsNames:B,uniformBuffersNames:n,samplers:U,defines:v,maxSimultaneousLights:this._maxSimultaneousLights}),(0,N.e)(B);const t={};this.customShaderNameResolve&&(j=this.customShaderNameResolve(j,B,n,U,v,O,t));const l=v.toString(),h=Z.effect;let Q=w.getEngine().createEffect(j,{attributes:O,uniformsNames:B,uniformBuffersNames:n,samplers:U,defines:l,fallbacks:c,onCompiled:this.onCompiled,onError:this.onError,indexParameters:u,processFinalCode:t.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:v.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([P.e(41),P.e(64)]).then(P.bind(P,14948)),Promise.all([P.e(39),P.e(65)]).then(P.bind(P,15095))]):await Promise.all([Promise.all([P.e(34),P.e(67)]).then(P.bind(P,15171)),Promise.all([P.e(33),P.e(68)]).then(P.bind(P,15330))]),this._shadersLoaded=!0}},G);if(this._eventInfo.customCode=void 0,Q)if(this._onEffectCreatedObservable&&(D.effect=Q,D.subMesh=Z,this._onEffectCreatedObservable.notifyObservers(D)),this.allowShaderHotSwapping&&h&&!Q.isReady()){if(Q=h,v.markAsUnprocessed(),H=this.isFrozen,x)return v._areLightsDisposed=!0,!1}else w.resetCachedMaterial(),Z.setEffect(Q,v,this._materialContext)}return!(!Z.effect||!Z.effect.isReady())&&(v._renderId=w.getRenderId(),c._wasPreviouslyReady=!H,c._wasPreviouslyUsingInstances=x,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const M=this._uniformBuffer;M.addUniform("diffuseLeftColor",4),M.addUniform("diffuseRightColor",4),M.addUniform("opacityParts",4),M.addUniform("reflectionLeftColor",4),M.addUniform("reflectionRightColor",4),M.addUniform("refractionLeftColor",4),M.addUniform("refractionRightColor",4),M.addUniform("emissiveLeftColor",4),M.addUniform("emissiveRightColor",4),M.addUniform("vDiffuseInfos",2),M.addUniform("vAmbientInfos",2),M.addUniform("vOpacityInfos",2),M.addUniform("vReflectionInfos",2),M.addUniform("vReflectionPosition",3),M.addUniform("vReflectionSize",3),M.addUniform("vEmissiveInfos",2),M.addUniform("vLightmapInfos",2),M.addUniform("vSpecularInfos",2),M.addUniform("vBumpInfos",3),M.addUniform("diffuseMatrix",16),M.addUniform("ambientMatrix",16),M.addUniform("opacityMatrix",16),M.addUniform("reflectionMatrix",16),M.addUniform("emissiveMatrix",16),M.addUniform("lightmapMatrix",16),M.addUniform("specularMatrix",16),M.addUniform("bumpMatrix",16),M.addUniform("vTangentSpaceParams",2),M.addUniform("pointSize",1),M.addUniform("alphaCutOff",1),M.addUniform("refractionMatrix",16),M.addUniform("vRefractionInfos",4),M.addUniform("vRefractionPosition",3),M.addUniform("vRefractionSize",3),M.addUniform("vSpecularColor",4),M.addUniform("vEmissiveColor",3),M.addUniform("vDiffuseColor",4),M.addUniform("vAmbientColor",3),M.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(M,Z,P){const x=this.DM(),c=P.materialDefines;if(!c)return;const w=P.effect;if(!w)return;this._activeEffect=w,Z.getMeshUniformBuffer().bindToEffect(w,"Mesh"),Z.transferToEffect(M),this._uniformBuffer.bindToEffect(w,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,x,Z,M,this.isFrozen),F.b.Bind(x.getEngine().currentRenderPassId,this._activeEffect,Z,M,this);const mM=x.activeCamera;mM?this._uniformBuffer.updateFloat4("cameraInfo",mM.uc,mM.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=P,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),c.OBJECTSPACE_NORMALMAP&&(M.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const K=this._mustRebind(x,w,P,Z.visibility);(0,J.e)(Z,w);const d=this._uniformBuffer;if(K){if(this.bindViewProjection(w),!d.useUbo||!this.isFrozen||!d.isSync||P._drawWrapper._forceRebindOnNextCall){if(h.FresnelEnabled&&c.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(d.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),d.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&d.updateColor4("opacityParts",new G.uZ(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(d.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),d.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(d.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),d.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(d.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),d.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),x.texturesEnabled){if(this._diffuseTexture&&h.DiffuseTextureEnabled&&(d.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,J.u)(this._diffuseTexture,d,"diffuse")),this._ambientTexture&&h.AmbientTextureEnabled&&(d.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,J.u)(this._ambientTexture,d,"ambient")),this._opacityTexture&&h.OpacityTextureEnabled&&(d.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,J.u)(this._opacityTexture,d,"opacity")),this._hasAlphaChannel()&&d.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&h.ReflectionTextureEnabled){if(d.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),d.Nc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const M=this._reflectionTexture;d.updateVector3("vReflectionPosition",M.boundingBoxPosition),d.updateVector3("vReflectionSize",M.boundingBoxSize)}}else d.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&h.EmissiveTextureEnabled&&(d.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,J.u)(this._emissiveTexture,d,"emissive")),this._lightmapTexture&&h.LightmapTextureEnabled&&(d.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,J.u)(this._lightmapTexture,d,"lightmap")),this._specularTexture&&h.SpecularTextureEnabled&&(d.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,J.u)(this._specularTexture,d,"specular")),this._bumpTexture&&x.getEngine().getCaps().standardDerivatives&&h.BumpTextureEnabled&&(d.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,J.u)(this._bumpTexture,d,"bump"),x._mirroredCameraPosition?d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):d.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&h.RefractionTextureEnabled){let M=1;if(this._refractionTexture.isCube||(d.Nc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(M=this._refractionTexture.depth)),d.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,M,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const M=this._refractionTexture;d.updateVector3("vRefractionPosition",M.boundingBoxPosition),d.updateVector3("vRefractionSize",M.boundingBoxSize)}}}this.pointsCloud&&d.updateFloat("pointSize",this.pointSize),d.updateColor4("vSpecularColor",this.specularColor,this.specularPower),d.updateColor3("vEmissiveColor",h.EmissiveTextureEnabled?this.emissiveColor:G.uZ.BlackReadOnly),d.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),x.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),d.updateColor3("vAmbientColor",this._globalAmbientColor)}x.texturesEnabled&&(this._diffuseTexture&&h.DiffuseTextureEnabled&&w.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&h.AmbientTextureEnabled&&w.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&h.OpacityTextureEnabled&&w.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&h.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?w.setTexture("reflectionCubeSampler",this._reflectionTexture):w.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&h.EmissiveTextureEnabled&&w.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&h.LightmapTextureEnabled&&w.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&h.SpecularTextureEnabled&&w.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&x.getEngine().getCaps().standardDerivatives&&h.BumpTextureEnabled&&w.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&h.RefractionTextureEnabled&&(this._refractionTexture.isCube?w.setTexture("refractionCubeSampler",this._refractionTexture):w.setTexture("refraction2DSampler",this._refractionTexture))),this.DM().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(Z)&&this.DM().depthPeelingRenderer.bind(w),this._eventInfo.subMesh=P,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,N.f)(w,this,x),this.bindEyePosition(w)}else x.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(K||!this.isFrozen){var O;if(x.lightsEnabled&&!this._disableLighting&&(0,J.k)(x,Z,w,c,this._maxSimultaneousLights),(x.fogEnabled&&Z.applyFog&&x.fogMode!==v.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||Z.receiveShadows||c.PREPASS)&&this.bindView(w),(0,J.g)(x,Z,w),c.NUM_MORPH_INFLUENCERS&&(0,J.q)(Z,w),c.BAKED_VERTEX_ANIMATION_TEXTURE)null===(O=Z.bakedVertexAnimationManager)||void 0===O||O.bind(w,c.INSTANCES);this.useLogarithmicDepth&&(0,J.m)(c,w,x),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(Z,this._activeEffect,P),d.update()}getAnimatables(){const M=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&M.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&M.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&M.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&M.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&M.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&M.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&M.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&M.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&M.push(this._refractionTexture),M}getActiveTextures(){const M=super.getActiveTextures();return this._diffuseTexture&&M.push(this._diffuseTexture),this._ambientTexture&&M.push(this._ambientTexture),this._opacityTexture&&M.push(this._opacityTexture),this._reflectionTexture&&M.push(this._reflectionTexture),this._emissiveTexture&&M.push(this._emissiveTexture),this._specularTexture&&M.push(this._specularTexture),this._bumpTexture&&M.push(this._bumpTexture),this._lightmapTexture&&M.push(this._lightmapTexture),this._refractionTexture&&M.push(this._refractionTexture),M}hasTexture(M){return!!super.hasTexture(M)||(this._diffuseTexture===M||(this._ambientTexture===M||(this._opacityTexture===M||(this._reflectionTexture===M||(this._emissiveTexture===M||(this._specularTexture===M||(this._bumpTexture===M||(this._lightmapTexture===M||this._refractionTexture===M))))))))}dispose(M,Z){var P,x,c,w,v,G,mM,K,d;Z&&(null===(P=this._diffuseTexture)||void 0===P||P.dispose(),null===(x=this._ambientTexture)||void 0===x||x.dispose(),null===(c=this._opacityTexture)||void 0===c||c.dispose(),null===(w=this._reflectionTexture)||void 0===w||w.dispose(),null===(v=this._emissiveTexture)||void 0===v||v.dispose(),null===(G=this._specularTexture)||void 0===G||G.dispose(),null===(mM=this._bumpTexture)||void 0===mM||mM.dispose(),null===(K=this._lightmapTexture)||void 0===K||K.dispose(),null===(d=this._refractionTexture)||void 0===d||d.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(M,Z)}clone(M){let Z=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const x=t.b.Clone((()=>new h(M,this.DM())),this,{cloneTexturesOnlyOnce:Z});return x.name=M,x.id=M,this.Kc.copyTo(x.Kc),this._clonePlugins(x,P),x}static Parse(M,Z,P){const x=t.b.Parse((()=>new h(M.name,Z)),M,Z,P);return M.Kc&&x.Kc.parse(M.Kc,Z,P),O.d._ParsePlugins(M,x,Z,P),x}static get DiffuseTextureEnabled(){return n.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){n.e.DiffuseTextureEnabled=M}static get DetailTextureEnabled(){return n.e.DetailTextureEnabled}static set DetailTextureEnabled(M){n.e.DetailTextureEnabled=M}static get AmbientTextureEnabled(){return n.e.AmbientTextureEnabled}static set AmbientTextureEnabled(M){n.e.AmbientTextureEnabled=M}static get OpacityTextureEnabled(){return n.e.OpacityTextureEnabled}static set OpacityTextureEnabled(M){n.e.OpacityTextureEnabled=M}static get ReflectionTextureEnabled(){return n.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){n.e.ReflectionTextureEnabled=M}static get EmissiveTextureEnabled(){return n.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){n.e.EmissiveTextureEnabled=M}static get SpecularTextureEnabled(){return n.e.SpecularTextureEnabled}static set SpecularTextureEnabled(M){n.e.SpecularTextureEnabled=M}static get BumpTextureEnabled(){return n.e.BumpTextureEnabled}static set BumpTextureEnabled(M){n.e.BumpTextureEnabled=M}static get LightmapTextureEnabled(){return n.e.LightmapTextureEnabled}static set LightmapTextureEnabled(M){n.e.LightmapTextureEnabled=M}static get RefractionTextureEnabled(){return n.e.RefractionTextureEnabled}static set RefractionTextureEnabled(M){n.e.RefractionTextureEnabled=M}static get ColorGradingTextureEnabled(){return n.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){n.e.ColorGradingTextureEnabled=M}static get FresnelEnabled(){return n.e.FresnelEnabled}static set FresnelEnabled(M){n.e.FresnelEnabled=M}}h.ForceGLSL=!1,(0,x.c)([(0,c.A)("diffuseTexture")],h.prototype,"_diffuseTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],h.prototype,"diffuseTexture",void 0),(0,x.c)([(0,c.A)("ambientTexture")],h.prototype,"_ambientTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"ambientTexture",void 0),(0,x.c)([(0,c.A)("opacityTexture")],h.prototype,"_opacityTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],h.prototype,"opacityTexture",void 0),(0,x.c)([(0,c.A)("reflectionTexture")],h.prototype,"_reflectionTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"reflectionTexture",void 0),(0,x.c)([(0,c.A)("emissiveTexture")],h.prototype,"_emissiveTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"emissiveTexture",void 0),(0,x.c)([(0,c.A)("specularTexture")],h.prototype,"_specularTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"specularTexture",void 0),(0,x.c)([(0,c.A)("bumpTexture")],h.prototype,"_bumpTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"bumpTexture",void 0),(0,x.c)([(0,c.A)("lightmapTexture")],h.prototype,"_lightmapTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"lightmapTexture",void 0),(0,x.c)([(0,c.A)("refractionTexture")],h.prototype,"_refractionTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"refractionTexture",void 0),(0,x.c)([(0,c.i)("ambient")],h.prototype,"ambientColor",void 0),(0,x.c)([(0,c.i)("diffuse")],h.prototype,"diffuseColor",void 0),(0,x.c)([(0,c.i)("specular")],h.prototype,"specularColor",void 0),(0,x.c)([(0,c.i)("emissive")],h.prototype,"emissiveColor",void 0),(0,x.c)([(0,c.H)()],h.prototype,"specularPower",void 0),(0,x.c)([(0,c.H)("useAlphaFromDiffuseTexture")],h.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],h.prototype,"useAlphaFromDiffuseTexture",void 0),(0,x.c)([(0,c.H)("useEmissiveAsIllumination")],h.prototype,"_useEmissiveAsIllumination",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useEmissiveAsIllumination",void 0),(0,x.c)([(0,c.H)("linkEmissiveWithDiffuse")],h.prototype,"_linkEmissiveWithDiffuse",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"linkEmissiveWithDiffuse",void 0),(0,x.c)([(0,c.H)("useSpecularOverAlpha")],h.prototype,"_useSpecularOverAlpha",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useSpecularOverAlpha",void 0),(0,x.c)([(0,c.H)("useReflectionOverAlpha")],h.prototype,"_useReflectionOverAlpha",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useReflectionOverAlpha",void 0),(0,x.c)([(0,c.H)("disableLighting")],h.prototype,"_disableLighting",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsLightsDirty")],h.prototype,"disableLighting",void 0),(0,x.c)([(0,c.H)("useObjectSpaceNormalMap")],h.prototype,"_useObjectSpaceNormalMap",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useObjectSpaceNormalMap",void 0),(0,x.c)([(0,c.H)("useParallax")],h.prototype,"_useParallax",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useParallax",void 0),(0,x.c)([(0,c.H)("useParallaxOcclusion")],h.prototype,"_useParallaxOcclusion",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useParallaxOcclusion",void 0),(0,x.c)([(0,c.H)()],h.prototype,"parallaxScaleBias",void 0),(0,x.c)([(0,c.H)("roughness")],h.prototype,"_roughness",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"roughness",void 0),(0,x.c)([(0,c.H)()],h.prototype,"indexOfRefraction",void 0),(0,x.c)([(0,c.H)()],h.prototype,"invertRefractionY",void 0),(0,x.c)([(0,c.H)()],h.prototype,"alphaCutOff",void 0),(0,x.c)([(0,c.H)("useLightmapAsShadowmap")],h.prototype,"_useLightmapAsShadowmap",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useLightmapAsShadowmap",void 0),(0,x.c)([(0,c.p)("diffuseFresnelParameters")],h.prototype,"_diffuseFresnelParameters",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelDirty")],h.prototype,"diffuseFresnelParameters",void 0),(0,x.c)([(0,c.p)("opacityFresnelParameters")],h.prototype,"_opacityFresnelParameters",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],h.prototype,"opacityFresnelParameters",void 0),(0,x.c)([(0,c.p)("reflectionFresnelParameters")],h.prototype,"_reflectionFresnelParameters",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelDirty")],h.prototype,"reflectionFresnelParameters",void 0),(0,x.c)([(0,c.p)("refractionFresnelParameters")],h.prototype,"_refractionFresnelParameters",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelDirty")],h.prototype,"refractionFresnelParameters",void 0),(0,x.c)([(0,c.p)("emissiveFresnelParameters")],h.prototype,"_emissiveFresnelParameters",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelDirty")],h.prototype,"emissiveFresnelParameters",void 0),(0,x.c)([(0,c.H)("useReflectionFresnelFromSpecular")],h.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsFresnelDirty")],h.prototype,"useReflectionFresnelFromSpecular",void 0),(0,x.c)([(0,c.H)("useGlossinessFromSpecularMapAlpha")],h.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,x.c)([(0,c.H)("maxSimultaneousLights")],h.prototype,"_maxSimultaneousLights",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsLightsDirty")],h.prototype,"maxSimultaneousLights",void 0),(0,x.c)([(0,c.H)("invertNormalMapX")],h.prototype,"_invertNormalMapX",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"invertNormalMapX",void 0),(0,x.c)([(0,c.H)("invertNormalMapY")],h.prototype,"_invertNormalMapY",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"invertNormalMapY",void 0),(0,x.c)([(0,c.H)("twoSidedLighting")],h.prototype,"_twoSidedLighting",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsTexturesDirty")],h.prototype,"twoSidedLighting",void 0),(0,x.c)([(0,c.H)("applyDecalMapAfterDetailMap")],h.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,x.c)([(0,c.b)("_markAllSubMeshesAsMiscDirty")],h.prototype,"applyDecalMapAfterDetailMap",void 0),(0,U.g)("BABYLON.StandardMaterial",h),v.e.DefaultMaterialFactory=M=>new h("default material",M)}}]);