"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[25],{11502:(q,S,b)=>{b.d(S,{d:()=>l});var z=b(11081),C=b(11423),v=b(11090),U=b(11500),g=b(11496),r=b(11507),I=b(11468);class V extends g.b{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class l extends r.c{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(q){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(q,"DetailMap",140,new V,S),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=C.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=q._dirtyCallbacks[1]}isReadyForSubMesh(q,S,b){return!this._isEnabled||!(q._areTexturesDirty&&S.texturesEnabled&&b.getCaps().standardDerivatives&&this._texture&&U.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(q,S){if(this._isEnabled){q.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const b=S.getEngine();q._areTexturesDirty&&(b.getCaps().standardDerivatives&&this._texture&&U.b.DetailTextureEnabled&&this._isEnabled?((0,I.Z)(this._texture,q,"DETAIL"),q.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):q.DETAIL=!1)}else q.DETAIL=!1}bindForSubMesh(q,S){if(!this._isEnabled)return;const b=this._material.isFrozen;q.useUbo&&b&&q.isSync||this._texture&&U.b.DetailTextureEnabled&&(q.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,I.u)(this._texture,q,"detail")),S.texturesEnabled&&this._texture&&U.b.DetailTextureEnabled&&q.setTexture("detailSampler",this._texture)}hasTexture(q){return this._texture===q}getActiveTextures(q){this._texture&&q.push(this._texture)}getAnimatables(q){this._texture&&this._texture.animations&&this._texture.animations.length>0&&q.push(this._texture)}dispose(q){var S;q&&(null===(S=this._texture)||void 0===S||S.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(q){q.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,z.e)([(0,v.x)("detailTexture"),(0,v.e)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"texture",void 0),(0,z.e)([(0,v.J)()],l.prototype,"diffuseBlendLevel",void 0),(0,z.e)([(0,v.J)()],l.prototype,"roughnessBlendLevel",void 0),(0,z.e)([(0,v.J)()],l.prototype,"bumpLevel",void 0),(0,z.e)([(0,v.J)(),(0,v.e)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"normalBlendMethod",void 0),(0,z.e)([(0,v.J)(),(0,v.e)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"isEnabled",void 0)},11496:(q,S,b)=>{b.d(S,{b:()=>z});class z{constructor(q){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=q,q)for(const S in q)Object.prototype.hasOwnProperty.call(q,S)&&this._setDefaultValue(S)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||q,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const q of Object.keys(this))"_"!==q[0]&&this._keys.push(q);if(this._externalProperties)for(const q in this._externalProperties)-1===this._keys.indexOf(q)&&this._keys.push(q)}isEqual(q){if(this._keys.length!==q._keys.length)return!1;for(let S=0;S<this._keys.length;S++){const b=this._keys[S];if(this[b]!==q[b])return!1}return!0}cloneTo(q){this._keys.length!==q._keys.length&&(q._keys=this._keys.slice(0));for(let S=0;S<this._keys.length;S++){const b=this._keys[S];q[b]=this[b]}}reset(){for(const q of this._keys)this._setDefaultValue(q)}_setDefaultValue(q){var S,b,z,C;const v=(null===(S=this._externalProperties)||void 0===S||null===(b=S[q])||void 0===b?void 0:b.type)??typeof this[q],U=null===(z=this._externalProperties)||void 0===z||null===(C=z[q])||void 0===C?void 0:C.default;switch(v){case"number":this[q]=U??0;break;case"string":this[q]=U??"";break;default:this[q]=U??!1}}toString(){let q="";for(let S=0;S<this._keys.length;S++){const b=this._keys[S],z=this[b];switch(typeof z){case"number":case"string":q+="#define "+b+" "+z+"\n";break;default:z&&(q+="#define "+b+"\n")}}return q}}},11500:(q,S,b)=>{b.d(S,{b:()=>C});var z=b(11006);class C{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(q){this._DiffuseTextureEnabled!==q&&(this._DiffuseTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(q){this._BaseWeightTextureEnabled!==q&&(this._BaseWeightTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(q){this._BaseDiffuseRoughnessTextureEnabled!==q&&(this._BaseDiffuseRoughnessTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(q){this._DetailTextureEnabled!==q&&(this._DetailTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(q){this._DecalMapEnabled!==q&&(this._DecalMapEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(q){this._AmbientTextureEnabled!==q&&(this._AmbientTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(q){this._OpacityTextureEnabled!==q&&(this._OpacityTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(q){this._ReflectionTextureEnabled!==q&&(this._ReflectionTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(q){this._EmissiveTextureEnabled!==q&&(this._EmissiveTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(q){this._SpecularTextureEnabled!==q&&(this._SpecularTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(q){this._BumpTextureEnabled!==q&&(this._BumpTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(q){this._LightmapTextureEnabled!==q&&(this._LightmapTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(q){this._RefractionTextureEnabled!==q&&(this._RefractionTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(q){this._ColorGradingTextureEnabled!==q&&(this._ColorGradingTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(q){this._FresnelEnabled!==q&&(this._FresnelEnabled=q,z.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(q){this._ClearCoatTextureEnabled!==q&&(this._ClearCoatTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(q){this._ClearCoatBumpTextureEnabled!==q&&(this._ClearCoatBumpTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(q){this._ClearCoatTintTextureEnabled!==q&&(this._ClearCoatTintTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(q){this._SheenTextureEnabled!==q&&(this._SheenTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(q){this._AnisotropicTextureEnabled!==q&&(this._AnisotropicTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(q){this._ThicknessTextureEnabled!==q&&(this._ThicknessTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(q){this._RefractionIntensityTextureEnabled!==q&&(this._RefractionIntensityTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(q){this._TranslucencyIntensityTextureEnabled!==q&&(this._TranslucencyIntensityTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(q){this._TranslucencyColorTextureEnabled!==q&&(this._TranslucencyColorTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(q){this._IridescenceTextureEnabled!==q&&(this._IridescenceTextureEnabled=q,z.c.MarkAllMaterialsAsDirty(1))}}C._DiffuseTextureEnabled=!0,C._BaseWeightTextureEnabled=!0,C._BaseDiffuseRoughnessTextureEnabled=!0,C._DetailTextureEnabled=!0,C._DecalMapEnabled=!0,C._AmbientTextureEnabled=!0,C._OpacityTextureEnabled=!0,C._ReflectionTextureEnabled=!0,C._EmissiveTextureEnabled=!0,C._SpecularTextureEnabled=!0,C._BumpTextureEnabled=!0,C._LightmapTextureEnabled=!0,C._RefractionTextureEnabled=!0,C._ColorGradingTextureEnabled=!0,C._FresnelEnabled=!0,C._ClearCoatTextureEnabled=!0,C._ClearCoatBumpTextureEnabled=!0,C._ClearCoatTintTextureEnabled=!0,C._SheenTextureEnabled=!0,C._AnisotropicTextureEnabled=!0,C._ThicknessTextureEnabled=!0,C._RefractionIntensityTextureEnabled=!0,C._TranslucencyIntensityTextureEnabled=!0,C._TranslucencyColorTextureEnabled=!0,C._IridescenceTextureEnabled=!0},11515:(q,S,b)=>{b.d(S,{e:()=>v});var z,C=b(11103);!function(q){q[q.Zero=0]="Zero",q[q.One=1]="One",q[q.MaxViewZ=2]="MaxViewZ"}(z||(z={}));class v{static CreateConfiguration(q){return v._Configurations[q]={defines:{},previousWorldMatrices:{},previousViewProjection:C.Matrix.Zero(),currentViewProjection:C.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},v._Configurations[q]}static DeleteConfiguration(q){delete v._Configurations[q]}static GetConfiguration(q){return v._Configurations[q]}static AddUniformsAndSamplers(q,S){q.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(q,S){for(const b of S)if(b.Gb)for(const S of b.Gb)S._removeDrawWrapper(q)}static PrepareDefines(q,S,b){if(!b._arePrePassDirty)return;const z=v._Configurations[q];if(!z)return;b.PREPASS=!0,b.PREPASS_COLOR=!1,b.PREPASS_COLOR_INDEX=-1;let C=0;for(let U=0;U<v.GeometryTextureDescriptions.length;U++){const q=v.GeometryTextureDescriptions[U],S=q.define,g=q.defineIndex,r=z.defines[g];void 0!==r?(b[S]=!0,b[g]=r,C++):(b[S]=!1,delete b[g])}b.SCENE_MRT_COUNT=C,b.BONES_VELOCITY_ENABLED=S.useBones&&S.computeBonesUsingShaders&&S.skeleton&&!S.skeleton.isUsingTextureForMatrices&&-1===z.excludedSkinnedMesh.indexOf(S)}static Bind(q,S,b,z,C){const U=v._Configurations[q];if(!U)return;const g=b.Tq(),r=g.getEngine();if(U.reverseCulling&&r.setStateCullFaceType(g._mirroredCameraPosition?C.cullBackFaces:!C.cullBackFaces),(void 0!==U.defines.PREPASS_VELOCITY_INDEX||void 0!==U.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(U.previousWorldMatrices[b.uniqueId]||(U.previousWorldMatrices[b.uniqueId]=z.clone()),U.previousViewProjection||(U.previousViewProjection=g.getTransformMatrix().clone(),U.currentViewProjection=g.getTransformMatrix().clone()),U.currentViewProjection.updateFlag!==g.getTransformMatrix().updateFlag?(U.lastUpdateFrameId=r.frameId,U.previousViewProjection.v(U.currentViewProjection),U.currentViewProjection.v(g.getTransformMatrix())):U.lastUpdateFrameId!==r.frameId&&(U.lastUpdateFrameId=r.frameId,U.previousViewProjection.v(U.currentViewProjection)),S.setMatrix("previousWorld",U.previousWorldMatrices[b.uniqueId]),S.setMatrix("previousViewProjection",U.previousViewProjection),U.previousWorldMatrices[b.uniqueId]=z.clone(),b.useBones&&b.computeBonesUsingShaders&&b.skeleton)){const q=b.skeleton;if(!q.isUsingTextureForMatrices||-1===S.getUniformIndex("boneTextureWidth")){const z=q.getTransformMatrices(b);z&&(U.previousBones[b.uniqueId]||(U.previousBones[b.uniqueId]=z.slice()),S.setMatrices("mPreviousBones",U.previousBones[b.uniqueId]),U.previousBones[b.uniqueId].set(z))}}}}v.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],v._Configurations={}},11507:(q,S,b)=>{b.d(S,{c:()=>Q});var z=b(11081),C=b(11090),v=b(11423),U=b(10975),g=b(10995),r=b(11017);const I=new RegExp("^([gimus]+)!");class V{constructor(q){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=q,this._scene=q.Tq(),this._engine=this._scene.getEngine()}_addPlugin(q){for(let z=0;z<this._plugins.length;++z)if(this._plugins[z].name===q.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!q.isCompatible(this._material.shaderLanguage))throw`The plugin "${q.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const S=q.getClassName();V._MaterialPluginClassToMainDefine[S]||(V._MaterialPluginClassToMainDefine[S]="MATERIALPLUGIN_"+ ++V._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(q,S)=>this._handlePluginEvent(q,S),this._plugins.push(q),this._plugins.sort(((q,S)=>q.priority-S.priority)),this._codeInjectionPoints={};const b={};b[V._MaterialPluginClassToMainDefine[S]]={type:"boolean",default:!0};for(const z of this._plugins)z.collectDefines(b),this._collectPointNames("vertex",z.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",z.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=b,!0}_activatePlugin(q){-1===this._activePlugins.indexOf(q)&&(this._activePlugins.push(q),this._activePlugins.sort(((q,S)=>q.priority-S.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),q.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(q),this._activePluginsForExtraEvents.sort(((q,S)=>q.priority-S.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(q){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===q)return this._plugins[S];return null}_handlePluginEventIsReadyForSubMesh(q){let S=!0;for(const b of this._activePlugins)S=S&&b.isReadyForSubMesh(q.defines,this._scene,this._engine,q.subMesh);q.isReadyForSubMesh=S}_handlePluginEventPrepareDefinesBeforeAttributes(q){for(const S of this._activePlugins)S.prepareDefinesBeforeAttributes(q.defines,this._scene,q.mesh)}_handlePluginEventPrepareDefines(q){for(const S of this._activePlugins)S.prepareDefines(q.defines,this._scene,q.mesh)}_handlePluginEventHardBindForSubMesh(q){for(const S of this._activePluginsForExtraEvents)S.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,q.subMesh)}_handlePluginEventBindForSubMesh(q){for(const S of this._activePlugins)S.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,q.subMesh)}_handlePluginEventHasRenderTargetTextures(q){let S=!1;for(const b of this._activePluginsForExtraEvents)if(S=b.hasRenderTargetTextures(),S)break;q.hasRenderTargetTextures=S}_handlePluginEventFillRenderTargetTextures(q){for(const S of this._activePluginsForExtraEvents)S.fillRenderTargetTextures(q.renderTargets)}_handlePluginEvent(q,S){switch(q){case 512:{const q=S;for(const S of this._activePlugins)S.getActiveTextures(q.activeTextures);break}case 256:{const q=S;for(const S of this._activePlugins)S.getAnimatables(q.animatables);break}case 1024:{const q=S;let b=!1;for(const S of this._activePlugins)if(b=S.hasTexture(q.texture),b)break;q.hasTexture=b;break}case 2:{const q=S;for(const S of this._plugins)S.dispose(q.forceDisposeTextures);break}case 4:S.defineNames=this._defineNamesFromPlugins;break;case 128:{const q=S;for(const S of this._activePlugins)q.fallbackRank=S.addFallbacks(q.defines,q.fallbacks,q.fallbackRank),S.getAttributes(q.attributes,this._scene,q.mesh);this._uniformList.length>0&&q.uniforms.push(...this._uniformList),this._samplerList.length>0&&q.samplers.push(...this._samplerList),this._uboList.length>0&&q.uniformBuffersNames.push(...this._uboList),q.customCode=this._injectCustomCode(q,q.customCode);break}case 8:{const q=S;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const b=1===this._material.shaderLanguage;for(const S of this._plugins){const z=S.getUniforms(this._material.shaderLanguage);if(z){if(z.ubo)for(const S of z.ubo){if(S.size&&S.type){const z=S.arraySize??0;if(q.ubo.addUniform(S.name,S.size,z),b){let q;switch(S.type){case"mat4":q="mat4x4f";break;case"float":q="f32";break;default:q=`${S.type}f`}this._uboDeclaration+=z>0?`uniform ${S.name}: array<${q}, ${z}>;\n`:`uniform ${S.name}: ${q};\n`}else this._uboDeclaration+=`${S.type} ${S.name}${z>0?`[${z}]`:""};\n`}this._uniformList.push(S.name)}z.vertex&&(this._vertexDeclaration+=z.vertex+"\n"),z.fragment&&(this._fragmentDeclaration+=z.fragment+"\n")}S.getSamplers(this._samplerList),S.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(q,S){if(S)for(const b in S)this._codeInjectionPoints[q]||(this._codeInjectionPoints[q]={}),this._codeInjectionPoints[q][b]=!0}_injectCustomCode(q,S){return(b,z)=>{var C;S&&(z=S(b,z)),this._uboDeclaration&&(z=z.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(z=z.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(z=z.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const v=null===(C=this._codeInjectionPoints)||void 0===C?void 0:C[b];if(!v)return z;let U=null;for(let S in v){let C="";for(const z of this._activePlugins){var V;let v=null===(V=z.getCustomCode(b,this._material.shaderLanguage))||void 0===V?void 0:V[S];if(v){if(z.resolveIncludes){if(null===U){const S=0;U={defines:[],indexParameters:q.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:r.d.GetShadersRepository(S),includesShadersStore:r.d.GetIncludesShadersStore(S),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}U.isFragment="fragment"===b,(0,g.g)(v,U,(q=>v=q))}C+=v+"\n"}}if(C.length>0)if("!"===S.charAt(0)){S=S.substring(1);let q="g";if("!"===S.charAt(0))q="",S=S.substring(1);else{const b=I.exec(S);b&&b.length>=2&&(q=b[1],S=S.substring(q.length+1))}q.indexOf("g")<0&&(q+="g");const b=z,v=new RegExp(S,q);let U=v.exec(b);for(;null!==U;){let q=C;for(let S=0;S<U.length;++S)q=q.replace("$"+S,U[S]);z=z.replace(U[0],q),U=v.exec(b)}}else{const q="#define "+S;z=z.replace(q,"\n"+C+"\n"+q)}}return z}}}V._MaterialPluginClassToMainDefine={},V._MaterialPluginCounter=0,U.b.OnEnginesDisposedObservable.add((()=>{G()}));const l=[];let y=!1,R=null;function G(){l.length=0,y=!1,v.c.OnEventObservable.remove(R),R=null}var Z=b(11137),H=b(11058);class Q{isCompatible(q){return 0===q}_enable(q){q&&this._pluginManager._activatePlugin(this)}constructor(q,S,b,z){let C=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],v=arguments.length>5&&void 0!==arguments[5]&&arguments[5],U=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=q,this.name=S,this.priority=b,this.resolveIncludes=U,q.pluginManager||(q.pluginManager=new V(q),q.gb.add((()=>{q.pluginManager=void 0}))),this._pluginDefineNames=z,this._pluginManager=q.pluginManager,C&&this._pluginManager._addPlugin(this),v&&this._enable(!0),this.markAllDefinesAsDirty=q._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(q,S,b,z){return!0}hardBindForSubMesh(q,S,b,z){}bindForSubMesh(q,S,b,z){}dispose(q){}getCustomCode(q){return null}collectDefines(q){if(this._pluginDefineNames)for(const S of Object.keys(this._pluginDefineNames)){if("_"===S[0])continue;const b=typeof this._pluginDefineNames[S];q[S]={type:"number"===b?"number":"string"===b?"string":"boolean"===b?"boolean":"object",default:this._pluginDefineNames[S]}}}prepareDefinesBeforeAttributes(q,S,b){}prepareDefines(q,S,b){}hasTexture(q){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(q){}getActiveTextures(q){}getAnimatables(q){}addFallbacks(q,S,b){return b}getSamplers(q){}getAttributes(q,S,b){}getUniformBuffersNames(q){}getUniforms(){return{}}copyTo(q){Z.b.Clone((()=>q),this)}serialize(){return Z.b.Serialize(this)}parse(q,S,b){Z.b.Parse((()=>this),q,S,b)}}(0,z.e)([(0,C.J)()],Q.prototype,"name",void 0),(0,z.e)([(0,C.J)()],Q.prototype,"priority",void 0),(0,z.e)([(0,C.J)()],Q.prototype,"resolveIncludes",void 0),(0,z.e)([(0,C.J)()],Q.prototype,"registerForExtraEvents",void 0),(0,H.f)("BABYLON.MaterialPluginBase",Q)},11488:(q,S,b)=>{b.d(S,{d:()=>z});class z{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(q){q.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(q){}bindForSubMesh(q,S,b,z,C){if(S.prePassRenderer&&S.prePassRenderer.enabled&&S.prePassRenderer.currentRTisSceneRT&&(-1!==S.prePassRenderer.getIndex(2)||-1!==S.prePassRenderer.getIndex(11))){this.previousWorldMatrices[b.uniqueId]||(this.previousWorldMatrices[b.uniqueId]=z.clone()),this.previousViewProjection||(this.previousViewProjection=S.getTransformMatrix().clone(),this.currentViewProjection=S.getTransformMatrix().clone());const C=S.getEngine();this.currentViewProjection.updateFlag!==S.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=C.frameId,this.previousViewProjection.v(this.currentViewProjection),this.currentViewProjection.v(S.getTransformMatrix())):this._lastUpdateFrameId!==C.frameId&&(this._lastUpdateFrameId=C.frameId,this.previousViewProjection.v(this.currentViewProjection)),q.setMatrix("previousWorld",this.previousWorldMatrices[b.uniqueId]),q.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[b.uniqueId]=z.clone()}}}},11485:(q,S,b)=>{b.d(S,{ZS:()=>t});var z=b(11081),C=b(11090),v=b(11200),U=b(11339),g=b(11150),r=b(11172),I=b(11488),V=b(11345),l=b(11423),y=b(11496),R=b(11416),G=b(11075),Z=b(11058),H=b(11500),Q=b(11412),k=b(11502),W=b(11476),N=b(11468),u=b(11137),X=b(11515);const T={effect:null,subMesh:null};class B extends y.b{constructor(q){super(q),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(q){const S=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const b of S)this[b]=b===q}}class t extends R.b{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(q){this._attachImageProcessingConfiguration(q),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(q){q!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=q||this.Tq().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(q){this.imageProcessingConfiguration.colorCurvesEnabled=q}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(q){this.imageProcessingConfiguration.colorGradingEnabled=q}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(q){this._imageProcessingConfiguration.toneMappingEnabled=q}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(q){this._imageProcessingConfiguration.exposure=q}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(q){this._imageProcessingConfiguration.contrast=q}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(q){this._imageProcessingConfiguration.colorGradingTexture=q}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(q){this._imageProcessingConfiguration.colorCurves=q}get canRenderToMRT(){return!0}constructor(q,S){super(q,S,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||t.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new g.HS(0,0,0),this.diffuseColor=new g.HS(1,1,1),this.specularColor=new g.HS(1,1,1),this.emissiveColor=new g.HS(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new v.g(16),this._globalAmbientColor=new g.HS(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new k.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new I.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),t.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),t.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(t.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(t.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"ZS"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===l.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Qb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==l.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Qb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(q,S){let z=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const C=S._drawWrapper;if(C.effect&&this.isFrozen&&C._wasPreviouslyReady&&C._wasPreviouslyUsingInstances===z)return!0;S.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),S.materialDefines=new B(this._eventInfo.defineNames));const v=this.Tq(),U=S.materialDefines;if(this._isReadyForSubMesh(S))return!0;const g=v.getEngine();U._needNormals=(0,N.X)(v,q,U,!0,this._maxSimultaneousLights,this._disableLighting),(0,N.db)(v,U);const l=this.needAlphaBlendingForMesh(q)&&this.Tq().useOrderIndependentTransparency;if((0,N.ib)(v,U,this.canRenderToMRT&&!l),(0,N.fb)(v,U,l),X.e.PrepareDefines(g.currentRenderPassId,q,U),U._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,U._needUVs=!1;for(let q=1;q<=6;++q)U["MAINUV"+q]=!1;if(v.texturesEnabled){if(U.DIFFUSEDIRECTUV=0,U.BUMPDIRECTUV=0,U.AMBIENTDIRECTUV=0,U.OPACITYDIRECTUV=0,U.EMISSIVEDIRECTUV=0,U.SPECULARDIRECTUV=0,U.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&t.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._diffuseTexture,U,"DIFFUSE")}else U.DIFFUSE=!1;if(this._ambientTexture&&t.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._ambientTexture,U,"AMBIENT")}else U.AMBIENT=!1;if(this._opacityTexture&&t.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._opacityTexture,U,"OPACITY"),U.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else U.OPACITY=!1;if(this._reflectionTexture&&t.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(U._needNormals=!0,U.REFLECTION=!0,U.ROUGHNESS=this._roughness>0,U.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,U.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===G.e.INVCUBIC_MODE,U.REFLECTIONMAP_3D=this._reflectionTexture.isCube,U.REFLECTIONMAP_OPPOSITEZ=U.REFLECTIONMAP_3D&&this.Tq().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,U.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case G.e.EXPLICIT_MODE:U.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case G.e.PLANAR_MODE:U.setReflectionMode("REFLECTIONMAP_PLANAR");break;case G.e.PROJECTION_MODE:U.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case G.e.SKYBOX_MODE:U.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case G.e.SPHERICAL_MODE:U.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case G.e.EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case G.e.FIXED_EQUIRECTANGULAR_MODE:U.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case G.e.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:U.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case G.e.CUBIC_MODE:case G.e.INVCUBIC_MODE:default:U.setReflectionMode("REFLECTIONMAP_CUBIC")}U.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else U.REFLECTION=!1,U.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&t.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._emissiveTexture,U,"EMISSIVE")}else U.EMISSIVE=!1;if(this._lightmapTexture&&t.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._lightmapTexture,U,"LIGHTMAP"),U.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,U.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else U.LIGHTMAP=!1;if(this._specularTexture&&t.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,N.Z)(this._specularTexture,U,"SPECULAR"),U.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else U.SPECULAR=!1;if(v.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&t.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,N.Z)(this._bumpTexture,U,"BUMP"),U.PARALLAX=this._useParallax,U.PARALLAX_RHS=v.useRightHandedSystem,U.PARALLAXOCCLUSION=this._useParallaxOcclusion,U.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else U.BUMP=!1,U.PARALLAX=!1,U.PARALLAX_RHS=!1,U.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&t.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;U._needUVs=!0,U.REFRACTION=!0,U.REFRACTIONMAP_3D=this._refractionTexture.isCube,U.RGBDREFRACTION=this._refractionTexture.isRGBD,U.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else U.REFRACTION=!1;U.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else U.DIFFUSE=!1,U.AMBIENT=!1,U.OPACITY=!1,U.REFLECTION=!1,U.EMISSIVE=!1,U.LIGHTMAP=!1,U.BUMP=!1,U.REFRACTION=!1;U.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),U.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,U.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,U.SPECULAROVERALPHA=this._useSpecularOverAlpha,U.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,U.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,U.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(q)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=U,this._eventInfo.subMesh=S,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(U._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(U),U.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,U.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(U._areFresnelDirty&&(t.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(U.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,U.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,U.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,U.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,U.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,U.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,U._needNormals=!0,U.FRESNEL=!0):U.FRESNEL=!1),U.AREALIGHTUSED)for(let b=0;b<q.lightSources.length;b++)if(!q.lightSources[b]._isReady())return!1;(0,N.ab)(q,v,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(q),U,this._applyDecalMapAfterDetailMap),(0,N.V)(v,g,this,U,z,null,S.getRenderingMesh().hasThinInstances),this._eventInfo.defines=U,this._eventInfo.mesh=q,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,N.S)(q,U,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let y=!1;if(U.isDirty){const z=U._areLightsDisposed;U.markAsProcessed();const C=new Q.b;U.REFLECTION&&C.addFallback(0,"REFLECTION"),U.SPECULAR&&C.addFallback(0,"SPECULAR"),U.BUMP&&C.addFallback(0,"BUMP"),U.PARALLAX&&C.addFallback(1,"PARALLAX"),U.PARALLAX_RHS&&C.addFallback(1,"PARALLAX_RHS"),U.PARALLAXOCCLUSION&&C.addFallback(0,"PARALLAXOCCLUSION"),U.SPECULAROVERALPHA&&C.addFallback(0,"SPECULAROVERALPHA"),U.FOG&&C.addFallback(1,"FOG"),U.POINTSIZE&&C.addFallback(0,"POINTSIZE"),U.LOGARITHMICDEPTH&&C.addFallback(0,"LOGARITHMICDEPTH"),(0,N.y)(U,C,this._maxSimultaneousLights),U.SPECULARTERM&&C.addFallback(0,"SPECULARTERM"),U.DIFFUSEFRESNEL&&C.addFallback(1,"DIFFUSEFRESNEL"),U.OPACITYFRESNEL&&C.addFallback(2,"OPACITYFRESNEL"),U.REFLECTIONFRESNEL&&C.addFallback(3,"REFLECTIONFRESNEL"),U.EMISSIVEFRESNEL&&C.addFallback(4,"EMISSIVEFRESNEL"),U.FRESNEL&&C.addFallback(4,"FRESNEL"),U.MULTIVIEW&&C.addFallback(0,"MULTIVIEW");const l=[r.f.PositionKind];U.NORMAL&&l.push(r.f.NormalKind),U.TANGENT&&l.push(r.f.TangentKind);for(let q=1;q<=6;++q)U["UV"+q]&&l.push(`uv${1===q?"":q}`);U.VERTEXCOLOR&&l.push(r.f.ColorKind),(0,N.E)(l,q,U,C),(0,N.I)(l,U),(0,N.M)(l,q,U),(0,N.A)(l,q,U);let R="default";const G=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],Z=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],H=["Material","Scene","Mesh"],k={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:U.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=C,this._eventInfo.fallbackRank=0,this._eventInfo.defines=U,this._eventInfo.uniforms=G,this._eventInfo.attributes=l,this._eventInfo.samplers=Z,this._eventInfo.uniformBuffersNames=H,this._eventInfo.customCode=void 0,this._eventInfo.mesh=q,this._eventInfo.indexParameters=k,this._callbackPluginEventGeneric(128,this._eventInfo),X.e.AddUniformsAndSamplers(G,Z),I.d.AddUniforms(G),I.d.AddSamplers(Z),V.b&&(V.b.PrepareUniforms(G,U),V.b.PrepareSamplers(Z,U)),(0,N.jb)({uniformsNames:G,uniformBuffersNames:H,samplers:Z,defines:U,maxSimultaneousLights:this._maxSimultaneousLights}),(0,W.d)(G);const u={};this.customShaderNameResolve&&(R=this.customShaderNameResolve(R,G,H,Z,U,l,u));const B=U.toString(),t=S.effect;let f=v.getEngine().createEffect(R,{attributes:l,uniformsNames:G,uniformBuffersNames:H,samplers:Z,defines:B,fallbacks:C,onCompiled:this.onCompiled,onError:this.onError,indexParameters:k,processFinalCode:u.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:U.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([b.e(41),b.e(64)]).then(b.bind(b,13677)),Promise.all([b.e(39),b.e(65)]).then(b.bind(b,13810))]):await Promise.all([Promise.all([b.e(34),b.e(67)]).then(b.bind(b,13896)),Promise.all([b.e(33),b.e(68)]).then(b.bind(b,14042))]),this._shadersLoaded=!0}},g);if(this._eventInfo.customCode=void 0,f)if(this._onEffectCreatedObservable&&(T.effect=f,T.subMesh=S,this._onEffectCreatedObservable.notifyObservers(T)),this.allowShaderHotSwapping&&t&&!f.isReady()){if(f=t,U.markAsUnprocessed(),y=this.isFrozen,z)return U._areLightsDisposed=!0,!1}else v.resetCachedMaterial(),S.setEffect(f,U,this._materialContext)}return!(!S.effect||!S.effect.isReady())&&(U._renderId=v.getRenderId(),C._wasPreviouslyReady=!y,C._wasPreviouslyUsingInstances=z,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const q=this._uniformBuffer;q.addUniform("diffuseLeftColor",4),q.addUniform("diffuseRightColor",4),q.addUniform("opacityParts",4),q.addUniform("reflectionLeftColor",4),q.addUniform("reflectionRightColor",4),q.addUniform("refractionLeftColor",4),q.addUniform("refractionRightColor",4),q.addUniform("emissiveLeftColor",4),q.addUniform("emissiveRightColor",4),q.addUniform("vDiffuseInfos",2),q.addUniform("vAmbientInfos",2),q.addUniform("vOpacityInfos",2),q.addUniform("vReflectionInfos",2),q.addUniform("vReflectionPosition",3),q.addUniform("vReflectionSize",3),q.addUniform("vEmissiveInfos",2),q.addUniform("vLightmapInfos",2),q.addUniform("vSpecularInfos",2),q.addUniform("vBumpInfos",3),q.addUniform("diffuseMatrix",16),q.addUniform("ambientMatrix",16),q.addUniform("opacityMatrix",16),q.addUniform("reflectionMatrix",16),q.addUniform("emissiveMatrix",16),q.addUniform("lightmapMatrix",16),q.addUniform("specularMatrix",16),q.addUniform("bumpMatrix",16),q.addUniform("vTangentSpaceParams",2),q.addUniform("pointSize",1),q.addUniform("alphaCutOff",1),q.addUniform("refractionMatrix",16),q.addUniform("vRefractionInfos",4),q.addUniform("vRefractionPosition",3),q.addUniform("vRefractionSize",3),q.addUniform("vSpecularColor",4),q.addUniform("vEmissiveColor",3),q.addUniform("vDiffuseColor",4),q.addUniform("vAmbientColor",3),q.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(q,S,b){const z=this.Tq(),C=b.materialDefines;if(!C)return;const v=b.effect;if(!v)return;this._activeEffect=v,S.getMeshUniformBuffer().bindToEffect(v,"Mesh"),S.transferToEffect(q),this._uniformBuffer.bindToEffect(v,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,z,S,q,this.isFrozen),X.e.Bind(z.getEngine().currentRenderPassId,this._activeEffect,S,q,this);const r=z.activeCamera;r?this._uniformBuffer.updateFloat4("cameraInfo",r.kb,r.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=b,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),C.OBJECTSPACE_NORMALMAP&&(q.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const I=this._mustRebind(z,v,b,S.visibility);(0,N.c)(S,v);const V=this._uniformBuffer;if(I){if(this.bindViewProjection(v),!V.useUbo||!this.isFrozen||!V.isSync||b._drawWrapper._forceRebindOnNextCall){if(t.FresnelEnabled&&C.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(V.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),V.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&V.updateColor4("opacityParts",new g.HS(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(V.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),V.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(V.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),V.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(V.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),V.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),z.texturesEnabled){if(this._diffuseTexture&&t.DiffuseTextureEnabled&&(V.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,N.u)(this._diffuseTexture,V,"diffuse")),this._ambientTexture&&t.AmbientTextureEnabled&&(V.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,N.u)(this._ambientTexture,V,"ambient")),this._opacityTexture&&t.OpacityTextureEnabled&&(V.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,N.u)(this._opacityTexture,V,"opacity")),this._hasAlphaChannel()&&V.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&t.ReflectionTextureEnabled){if(V.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),V.Wb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const q=this._reflectionTexture;V.updateVector3("vReflectionPosition",q.boundingBoxPosition),V.updateVector3("vReflectionSize",q.boundingBoxSize)}}else V.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&t.EmissiveTextureEnabled&&(V.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,N.u)(this._emissiveTexture,V,"emissive")),this._lightmapTexture&&t.LightmapTextureEnabled&&(V.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,N.u)(this._lightmapTexture,V,"lightmap")),this._specularTexture&&t.SpecularTextureEnabled&&(V.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,N.u)(this._specularTexture,V,"specular")),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&t.BumpTextureEnabled&&(V.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,N.u)(this._bumpTexture,V,"bump"),z._mirroredCameraPosition?V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):V.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&t.RefractionTextureEnabled){let q=1;if(this._refractionTexture.isCube||(V.Wb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(q=this._refractionTexture.depth)),V.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,q,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const q=this._refractionTexture;V.updateVector3("vRefractionPosition",q.boundingBoxPosition),V.updateVector3("vRefractionSize",q.boundingBoxSize)}}}this.pointsCloud&&V.updateFloat("pointSize",this.pointSize),V.updateColor4("vSpecularColor",this.specularColor,this.specularPower),V.updateColor3("vEmissiveColor",t.EmissiveTextureEnabled?this.emissiveColor:g.HS.BlackReadOnly),V.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),z.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),V.updateColor3("vAmbientColor",this._globalAmbientColor)}z.texturesEnabled&&(this._diffuseTexture&&t.DiffuseTextureEnabled&&v.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&t.AmbientTextureEnabled&&v.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&t.OpacityTextureEnabled&&v.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&t.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?v.setTexture("reflectionCubeSampler",this._reflectionTexture):v.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&t.EmissiveTextureEnabled&&v.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&t.LightmapTextureEnabled&&v.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&t.SpecularTextureEnabled&&v.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&z.getEngine().getCaps().standardDerivatives&&t.BumpTextureEnabled&&v.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&t.RefractionTextureEnabled&&(this._refractionTexture.isCube?v.setTexture("refractionCubeSampler",this._refractionTexture):v.setTexture("refraction2DSampler",this._refractionTexture))),this.Tq().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(S)&&this.Tq().depthPeelingRenderer.bind(v),this._eventInfo.subMesh=b,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,W.f)(v,this,z),this.bindEyePosition(v)}else z.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(I||!this.isFrozen){var l;if(z.lightsEnabled&&!this._disableLighting&&(0,N.h)(z,S,v,C,this._maxSimultaneousLights),(z.fogEnabled&&S.applyFog&&z.fogMode!==U.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||S.receiveShadows||C.PREPASS)&&this.bindView(v),(0,N.g)(z,S,v),C.NUM_MORPH_INFLUENCERS&&(0,N.o)(S,v),C.BAKED_VERTEX_ANIMATION_TEXTURE)null===(l=S.bakedVertexAnimationManager)||void 0===l||l.bind(v,C.INSTANCES);this.useLogarithmicDepth&&(0,N.l)(C,v,z),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(S,this._activeEffect,b),V.update()}getAnimatables(){const q=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&q.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&q.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&q.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&q.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&q.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&q.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&q.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&q.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&q.push(this._refractionTexture),q}getActiveTextures(){const q=super.getActiveTextures();return this._diffuseTexture&&q.push(this._diffuseTexture),this._ambientTexture&&q.push(this._ambientTexture),this._opacityTexture&&q.push(this._opacityTexture),this._reflectionTexture&&q.push(this._reflectionTexture),this._emissiveTexture&&q.push(this._emissiveTexture),this._specularTexture&&q.push(this._specularTexture),this._bumpTexture&&q.push(this._bumpTexture),this._lightmapTexture&&q.push(this._lightmapTexture),this._refractionTexture&&q.push(this._refractionTexture),q}hasTexture(q){return!!super.hasTexture(q)||(this._diffuseTexture===q||(this._ambientTexture===q||(this._opacityTexture===q||(this._reflectionTexture===q||(this._emissiveTexture===q||(this._specularTexture===q||(this._bumpTexture===q||(this._lightmapTexture===q||this._refractionTexture===q))))))))}dispose(q,S){var b,z,C,v,U,g,r,I,V;S&&(null===(b=this._diffuseTexture)||void 0===b||b.dispose(),null===(z=this._ambientTexture)||void 0===z||z.dispose(),null===(C=this._opacityTexture)||void 0===C||C.dispose(),null===(v=this._reflectionTexture)||void 0===v||v.dispose(),null===(U=this._emissiveTexture)||void 0===U||U.dispose(),null===(g=this._specularTexture)||void 0===g||g.dispose(),null===(r=this._bumpTexture)||void 0===r||r.dispose(),null===(I=this._lightmapTexture)||void 0===I||I.dispose(),null===(V=this._refractionTexture)||void 0===V||V.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(q,S)}clone(q){let S=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],b=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const z=u.b.Clone((()=>new t(q,this.Tq())),this,{cloneTexturesOnlyOnce:S});return z.name=q,z.id=q,this.stencil.copyTo(z.stencil),this._clonePlugins(z,b),z}static Parse(q,S,b){const z=u.b.Parse((()=>new t(q.name,S)),q,S,b);return q.stencil&&z.stencil.parse(q.stencil,S,b),l.c._ParsePlugins(q,z,S,b),z}static get DiffuseTextureEnabled(){return H.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(q){H.b.DiffuseTextureEnabled=q}static get DetailTextureEnabled(){return H.b.DetailTextureEnabled}static set DetailTextureEnabled(q){H.b.DetailTextureEnabled=q}static get AmbientTextureEnabled(){return H.b.AmbientTextureEnabled}static set AmbientTextureEnabled(q){H.b.AmbientTextureEnabled=q}static get OpacityTextureEnabled(){return H.b.OpacityTextureEnabled}static set OpacityTextureEnabled(q){H.b.OpacityTextureEnabled=q}static get ReflectionTextureEnabled(){return H.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(q){H.b.ReflectionTextureEnabled=q}static get EmissiveTextureEnabled(){return H.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(q){H.b.EmissiveTextureEnabled=q}static get SpecularTextureEnabled(){return H.b.SpecularTextureEnabled}static set SpecularTextureEnabled(q){H.b.SpecularTextureEnabled=q}static get BumpTextureEnabled(){return H.b.BumpTextureEnabled}static set BumpTextureEnabled(q){H.b.BumpTextureEnabled=q}static get LightmapTextureEnabled(){return H.b.LightmapTextureEnabled}static set LightmapTextureEnabled(q){H.b.LightmapTextureEnabled=q}static get RefractionTextureEnabled(){return H.b.RefractionTextureEnabled}static set RefractionTextureEnabled(q){H.b.RefractionTextureEnabled=q}static get ColorGradingTextureEnabled(){return H.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(q){H.b.ColorGradingTextureEnabled=q}static get FresnelEnabled(){return H.b.FresnelEnabled}static set FresnelEnabled(q){H.b.FresnelEnabled=q}}t.ForceGLSL=!1,(0,z.e)([(0,C.x)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"diffuseTexture",void 0),(0,z.e)([(0,C.x)("ambientTexture")],t.prototype,"_ambientTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"ambientTexture",void 0),(0,z.e)([(0,C.x)("opacityTexture")],t.prototype,"_opacityTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"opacityTexture",void 0),(0,z.e)([(0,C.x)("reflectionTexture")],t.prototype,"_reflectionTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"reflectionTexture",void 0),(0,z.e)([(0,C.x)("emissiveTexture")],t.prototype,"_emissiveTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"emissiveTexture",void 0),(0,z.e)([(0,C.x)("specularTexture")],t.prototype,"_specularTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"specularTexture",void 0),(0,z.e)([(0,C.x)("bumpTexture")],t.prototype,"_bumpTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture",void 0),(0,z.e)([(0,C.x)("lightmapTexture")],t.prototype,"_lightmapTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"lightmapTexture",void 0),(0,z.e)([(0,C.x)("refractionTexture")],t.prototype,"_refractionTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"refractionTexture",void 0),(0,z.e)([(0,C.m)("ambient")],t.prototype,"ambientColor",void 0),(0,z.e)([(0,C.m)("diffuse")],t.prototype,"diffuseColor",void 0),(0,z.e)([(0,C.m)("specular")],t.prototype,"specularColor",void 0),(0,z.e)([(0,C.m)("emissive")],t.prototype,"emissiveColor",void 0),(0,z.e)([(0,C.J)()],t.prototype,"specularPower",void 0),(0,z.e)([(0,C.J)("useAlphaFromDiffuseTexture")],t.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesAndMiscDirty")],t.prototype,"useAlphaFromDiffuseTexture",void 0),(0,z.e)([(0,C.J)("useEmissiveAsIllumination")],t.prototype,"_useEmissiveAsIllumination",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useEmissiveAsIllumination",void 0),(0,z.e)([(0,C.J)("linkEmissiveWithDiffuse")],t.prototype,"_linkEmissiveWithDiffuse",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"linkEmissiveWithDiffuse",void 0),(0,z.e)([(0,C.J)("useSpecularOverAlpha")],t.prototype,"_useSpecularOverAlpha",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useSpecularOverAlpha",void 0),(0,z.e)([(0,C.J)("useReflectionOverAlpha")],t.prototype,"_useReflectionOverAlpha",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useReflectionOverAlpha",void 0),(0,z.e)([(0,C.J)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,z.e)([(0,C.J)("useObjectSpaceNormalMap")],t.prototype,"_useObjectSpaceNormalMap",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useObjectSpaceNormalMap",void 0),(0,z.e)([(0,C.J)("useParallax")],t.prototype,"_useParallax",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useParallax",void 0),(0,z.e)([(0,C.J)("useParallaxOcclusion")],t.prototype,"_useParallaxOcclusion",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useParallaxOcclusion",void 0),(0,z.e)([(0,C.J)()],t.prototype,"parallaxScaleBias",void 0),(0,z.e)([(0,C.J)("roughness")],t.prototype,"_roughness",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"roughness",void 0),(0,z.e)([(0,C.J)()],t.prototype,"indexOfRefraction",void 0),(0,z.e)([(0,C.J)()],t.prototype,"invertRefractionY",void 0),(0,z.e)([(0,C.J)()],t.prototype,"alphaCutOff",void 0),(0,z.e)([(0,C.J)("useLightmapAsShadowmap")],t.prototype,"_useLightmapAsShadowmap",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useLightmapAsShadowmap",void 0),(0,z.e)([(0,C.r)("diffuseFresnelParameters")],t.prototype,"_diffuseFresnelParameters",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"diffuseFresnelParameters",void 0),(0,z.e)([(0,C.r)("opacityFresnelParameters")],t.prototype,"_opacityFresnelParameters",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelAndMiscDirty")],t.prototype,"opacityFresnelParameters",void 0),(0,z.e)([(0,C.r)("reflectionFresnelParameters")],t.prototype,"_reflectionFresnelParameters",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"reflectionFresnelParameters",void 0),(0,z.e)([(0,C.r)("refractionFresnelParameters")],t.prototype,"_refractionFresnelParameters",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"refractionFresnelParameters",void 0),(0,z.e)([(0,C.r)("emissiveFresnelParameters")],t.prototype,"_emissiveFresnelParameters",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"emissiveFresnelParameters",void 0),(0,z.e)([(0,C.J)("useReflectionFresnelFromSpecular")],t.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsFresnelDirty")],t.prototype,"useReflectionFresnelFromSpecular",void 0),(0,z.e)([(0,C.J)("useGlossinessFromSpecularMapAlpha")],t.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,z.e)([(0,C.J)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),(0,z.e)([(0,C.J)("invertNormalMapX")],t.prototype,"_invertNormalMapX",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"invertNormalMapX",void 0),(0,z.e)([(0,C.J)("invertNormalMapY")],t.prototype,"_invertNormalMapY",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"invertNormalMapY",void 0),(0,z.e)([(0,C.J)("twoSidedLighting")],t.prototype,"_twoSidedLighting",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"twoSidedLighting",void 0),(0,z.e)([(0,C.J)("applyDecalMapAfterDetailMap")],t.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,z.e)([(0,C.e)("_markAllSubMeshesAsMiscDirty")],t.prototype,"applyDecalMapAfterDetailMap",void 0),(0,Z.f)("BABYLON.StandardMaterial",t),U.c.DefaultMaterialFactory=q=>new t("default material",q)}}]);