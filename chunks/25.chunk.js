"use strict";(self.h66iwo8dvgq=self.h66iwo8dvgq||[]).push([[25],{12252:(b,X,P)=>{P.d(X,{d:()=>O});var Q=P(11822),S=P(12177),d=P(11825),N=P(12244),a=P(12240),u=P(12260),w=P(12221);class f extends a.d{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class O extends u.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(b){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(b,"DetailMap",140,new f,X),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=S.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=b._dirtyCallbacks[1]}isReadyForSubMesh(b,X,P){return!this._isEnabled||!(b._areTexturesDirty&&X.texturesEnabled&&P.getCaps().standardDerivatives&&this._texture&&N.b.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(b,X){if(this._isEnabled){b.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const P=X.getEngine();b._areTexturesDirty&&(P.getCaps().standardDerivatives&&this._texture&&N.b.DetailTextureEnabled&&this._isEnabled?((0,w.Y)(this._texture,b,"DETAIL"),b.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):b.DETAIL=!1)}else b.DETAIL=!1}bindForSubMesh(b,X){if(!this._isEnabled)return;const P=this._material.isFrozen;b.useUbo&&P&&b.isSync||this._texture&&N.b.DetailTextureEnabled&&(b.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,w.v)(this._texture,b,"detail")),X.texturesEnabled&&this._texture&&N.b.DetailTextureEnabled&&b.setTexture("detailSampler",this._texture)}hasTexture(b){return this._texture===b}getActiveTextures(b){this._texture&&b.push(this._texture)}getAnimatables(b){this._texture&&this._texture.animations&&this._texture.animations.length>0&&b.push(this._texture)}dispose(b){var X;b&&(null===(X=this._texture)||void 0===X||X.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(b){b.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Q.b)([(0,d.v)("detailTexture"),(0,d.c)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"texture",void 0),(0,Q.b)([(0,d.E)()],O.prototype,"diffuseBlendLevel",void 0),(0,Q.b)([(0,d.E)()],O.prototype,"roughnessBlendLevel",void 0),(0,Q.b)([(0,d.E)()],O.prototype,"bumpLevel",void 0),(0,Q.b)([(0,d.E)(),(0,d.c)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"normalBlendMethod",void 0),(0,Q.b)([(0,d.E)(),(0,d.c)("_markAllSubMeshesAsTexturesDirty")],O.prototype,"isEnabled",void 0)},12240:(b,X,P)=>{P.d(X,{d:()=>Q});class Q{constructor(b){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=b,b)for(const X in b)Object.prototype.hasOwnProperty.call(b,X)&&this._setDefaultValue(X)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let b=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||b,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const b of Object.keys(this))"_"!==b[0]&&this._keys.push(b);if(this._externalProperties)for(const b in this._externalProperties)-1===this._keys.indexOf(b)&&this._keys.push(b)}isEqual(b){if(this._keys.length!==b._keys.length)return!1;for(let X=0;X<this._keys.length;X++){const P=this._keys[X];if(this[P]!==b[P])return!1}return!0}cloneTo(b){this._keys.length!==b._keys.length&&(b._keys=this._keys.slice(0));for(let X=0;X<this._keys.length;X++){const P=this._keys[X];b[P]=this[P]}}reset(){for(const b of this._keys)this._setDefaultValue(b)}_setDefaultValue(b){var X,P,Q,S;const d=(null===(X=this._externalProperties)||void 0===X||null===(P=X[b])||void 0===P?void 0:P.type)??typeof this[b],N=null===(Q=this._externalProperties)||void 0===Q||null===(S=Q[b])||void 0===S?void 0:S.default;switch(d){case"number":this[b]=N??0;break;case"string":this[b]=N??"";break;default:this[b]=N??!1}}toString(){let b="";for(let X=0;X<this._keys.length;X++){const P=this._keys[X],Q=this[P];switch(typeof Q){case"number":case"string":b+="#define "+P+" "+Q+"\n";break;default:Q&&(b+="#define "+P+"\n")}}return b}}},12244:(b,X,P)=>{P.d(X,{b:()=>S});var Q=P(11760);class S{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(b){this._DiffuseTextureEnabled!==b&&(this._DiffuseTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(b){this._BaseWeightTextureEnabled!==b&&(this._BaseWeightTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(b){this._BaseDiffuseRoughnessTextureEnabled!==b&&(this._BaseDiffuseRoughnessTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(b){this._DetailTextureEnabled!==b&&(this._DetailTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(b){this._DecalMapEnabled!==b&&(this._DecalMapEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(b){this._AmbientTextureEnabled!==b&&(this._AmbientTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(b){this._OpacityTextureEnabled!==b&&(this._OpacityTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(b){this._ReflectionTextureEnabled!==b&&(this._ReflectionTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(b){this._EmissiveTextureEnabled!==b&&(this._EmissiveTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(b){this._SpecularTextureEnabled!==b&&(this._SpecularTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(b){this._BumpTextureEnabled!==b&&(this._BumpTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(b){this._LightmapTextureEnabled!==b&&(this._LightmapTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(b){this._RefractionTextureEnabled!==b&&(this._RefractionTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(b){this._ColorGradingTextureEnabled!==b&&(this._ColorGradingTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(b){this._FresnelEnabled!==b&&(this._FresnelEnabled=b,Q.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(b){this._ClearCoatTextureEnabled!==b&&(this._ClearCoatTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(b){this._ClearCoatBumpTextureEnabled!==b&&(this._ClearCoatBumpTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(b){this._ClearCoatTintTextureEnabled!==b&&(this._ClearCoatTintTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(b){this._SheenTextureEnabled!==b&&(this._SheenTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(b){this._AnisotropicTextureEnabled!==b&&(this._AnisotropicTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(b){this._ThicknessTextureEnabled!==b&&(this._ThicknessTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(b){this._RefractionIntensityTextureEnabled!==b&&(this._RefractionIntensityTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(b){this._TranslucencyIntensityTextureEnabled!==b&&(this._TranslucencyIntensityTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(b){this._TranslucencyColorTextureEnabled!==b&&(this._TranslucencyColorTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(b){this._IridescenceTextureEnabled!==b&&(this._IridescenceTextureEnabled=b,Q.c.MarkAllMaterialsAsDirty(1))}}S._DiffuseTextureEnabled=!0,S._BaseWeightTextureEnabled=!0,S._BaseDiffuseRoughnessTextureEnabled=!0,S._DetailTextureEnabled=!0,S._DecalMapEnabled=!0,S._AmbientTextureEnabled=!0,S._OpacityTextureEnabled=!0,S._ReflectionTextureEnabled=!0,S._EmissiveTextureEnabled=!0,S._SpecularTextureEnabled=!0,S._BumpTextureEnabled=!0,S._LightmapTextureEnabled=!0,S._RefractionTextureEnabled=!0,S._ColorGradingTextureEnabled=!0,S._FresnelEnabled=!0,S._ClearCoatTextureEnabled=!0,S._ClearCoatBumpTextureEnabled=!0,S._ClearCoatTintTextureEnabled=!0,S._SheenTextureEnabled=!0,S._AnisotropicTextureEnabled=!0,S._ThicknessTextureEnabled=!0,S._RefractionIntensityTextureEnabled=!0,S._TranslucencyIntensityTextureEnabled=!0,S._TranslucencyColorTextureEnabled=!0,S._IridescenceTextureEnabled=!0},12262:(b,X,P)=>{P.d(X,{b:()=>d});var Q,S=P(11834);!function(b){b[b.Zero=0]="Zero",b[b.One=1]="One",b[b.MaxViewZ=2]="MaxViewZ"}(Q||(Q={}));class d{static CreateConfiguration(b){return d._Configurations[b]={defines:{},previousWorldMatrices:{},previousViewProjection:S.Matrix.Zero(),currentViewProjection:S.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},d._Configurations[b]}static DeleteConfiguration(b){delete d._Configurations[b]}static GetConfiguration(b){return d._Configurations[b]}static AddUniformsAndSamplers(b,X){b.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(b,X){for(const P of X)if(P.hd)for(const X of P.hd)X._removeDrawWrapper(b)}static PrepareDefines(b,X,P){if(!P._arePrePassDirty)return;const Q=d._Configurations[b];if(!Q)return;P.PREPASS=!0,P.PREPASS_COLOR=!1,P.PREPASS_COLOR_INDEX=-1;let S=0;for(let N=0;N<d.GeometryTextureDescriptions.length;N++){const b=d.GeometryTextureDescriptions[N],X=b.define,a=b.defineIndex,u=Q.defines[a];void 0!==u?(P[X]=!0,P[a]=u,S++):(P[X]=!1,delete P[a])}P.SCENE_MRT_COUNT=S,P.BONES_VELOCITY_ENABLED=X.useBones&&X.computeBonesUsingShaders&&X.skeleton&&!X.skeleton.isUsingTextureForMatrices&&-1===Q.excludedSkinnedMesh.indexOf(X)}static Bind(b,X,P,Q,S){const N=d._Configurations[b];if(!N)return;const a=P.Ab(),u=a.getEngine();if(N.reverseCulling&&u.setStateCullFaceType(a._mirroredCameraPosition?S.cullBackFaces:!S.cullBackFaces),(void 0!==N.defines.PREPASS_VELOCITY_INDEX||void 0!==N.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(N.previousWorldMatrices[P.uniqueId]||(N.previousWorldMatrices[P.uniqueId]=Q.clone()),N.previousViewProjection||(N.previousViewProjection=a.getTransformMatrix().clone(),N.currentViewProjection=a.getTransformMatrix().clone()),N.currentViewProjection.updateFlag!==a.getTransformMatrix().updateFlag?(N.lastUpdateFrameId=u.frameId,N.previousViewProjection.N(N.currentViewProjection),N.currentViewProjection.N(a.getTransformMatrix())):N.lastUpdateFrameId!==u.frameId&&(N.lastUpdateFrameId=u.frameId,N.previousViewProjection.N(N.currentViewProjection)),X.setMatrix("previousWorld",N.previousWorldMatrices[P.uniqueId]),X.setMatrix("previousViewProjection",N.previousViewProjection),N.previousWorldMatrices[P.uniqueId]=Q.clone(),P.useBones&&P.computeBonesUsingShaders&&P.skeleton)){const b=P.skeleton;if(!b.isUsingTextureForMatrices||-1===X.getUniformIndex("boneTextureWidth")){const Q=b.getTransformMatrices(P);Q&&(N.previousBones[P.uniqueId]||(N.previousBones[P.uniqueId]=Q.slice()),X.setMatrices("mPreviousBones",N.previousBones[P.uniqueId]),N.previousBones[P.uniqueId].set(Q))}}}}d.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],d._Configurations={}},12260:(b,X,P)=>{P.d(X,{b:()=>B});var Q=P(11822),S=P(11825),d=P(12177),N=P(11732),a=P(11749),u=P(11765);const w=new RegExp("^([gimus]+)!");class f{constructor(b){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=b,this._scene=b.Ab(),this._engine=this._scene.getEngine()}_addPlugin(b){for(let Q=0;Q<this._plugins.length;++Q)if(this._plugins[Q].name===b.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!b.isCompatible(this._material.shaderLanguage))throw`The plugin "${b.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const X=b.getClassName();f._MaterialPluginClassToMainDefine[X]||(f._MaterialPluginClassToMainDefine[X]="MATERIALPLUGIN_"+ ++f._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(b,X)=>this._handlePluginEvent(b,X),this._plugins.push(b),this._plugins.sort(((b,X)=>b.priority-X.priority)),this._codeInjectionPoints={};const P={};P[f._MaterialPluginClassToMainDefine[X]]={type:"boolean",default:!0};for(const Q of this._plugins)Q.collectDefines(P),this._collectPointNames("vertex",Q.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Q.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=P,!0}_activatePlugin(b){-1===this._activePlugins.indexOf(b)&&(this._activePlugins.push(b),this._activePlugins.sort(((b,X)=>b.priority-X.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),b.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(b),this._activePluginsForExtraEvents.sort(((b,X)=>b.priority-X.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(b){for(let X=0;X<this._plugins.length;++X)if(this._plugins[X].name===b)return this._plugins[X];return null}_handlePluginEventIsReadyForSubMesh(b){let X=!0;for(const P of this._activePlugins)X=X&&P.isReadyForSubMesh(b.defines,this._scene,this._engine,b.subMesh);b.isReadyForSubMesh=X}_handlePluginEventPrepareDefinesBeforeAttributes(b){for(const X of this._activePlugins)X.prepareDefinesBeforeAttributes(b.defines,this._scene,b.mesh)}_handlePluginEventPrepareDefines(b){for(const X of this._activePlugins)X.prepareDefines(b.defines,this._scene,b.mesh)}_handlePluginEventHardBindForSubMesh(b){for(const X of this._activePluginsForExtraEvents)X.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,b.subMesh)}_handlePluginEventBindForSubMesh(b){for(const X of this._activePlugins)X.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,b.subMesh)}_handlePluginEventHasRenderTargetTextures(b){let X=!1;for(const P of this._activePluginsForExtraEvents)if(X=P.hasRenderTargetTextures(),X)break;b.hasRenderTargetTextures=X}_handlePluginEventFillRenderTargetTextures(b){for(const X of this._activePluginsForExtraEvents)X.fillRenderTargetTextures(b.renderTargets)}_handlePluginEvent(b,X){switch(b){case 512:{const b=X;for(const X of this._activePlugins)X.getActiveTextures(b.activeTextures);break}case 256:{const b=X;for(const X of this._activePlugins)X.getAnimatables(b.animatables);break}case 1024:{const b=X;let P=!1;for(const X of this._activePlugins)if(P=X.hasTexture(b.texture),P)break;b.hasTexture=P;break}case 2:{const b=X;for(const X of this._plugins)X.dispose(b.forceDisposeTextures);break}case 4:X.defineNames=this._defineNamesFromPlugins;break;case 128:{const b=X;for(const X of this._activePlugins)b.fallbackRank=X.addFallbacks(b.defines,b.fallbacks,b.fallbackRank),X.getAttributes(b.attributes,this._scene,b.mesh);this._uniformList.length>0&&b.uniforms.push(...this._uniformList),this._samplerList.length>0&&b.samplers.push(...this._samplerList),this._uboList.length>0&&b.uniformBuffersNames.push(...this._uboList),b.customCode=this._injectCustomCode(b,b.customCode);break}case 8:{const b=X;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const P=1===this._material.shaderLanguage;for(const X of this._plugins){const Q=X.getUniforms(this._material.shaderLanguage);if(Q){if(Q.ubo)for(const X of Q.ubo){if(X.size&&X.type){const Q=X.arraySize??0;if(b.ubo.addUniform(X.name,X.size,Q),P){let b;switch(X.type){case"mat4":b="mat4x4f";break;case"float":b="f32";break;default:b=`${X.type}f`}this._uboDeclaration+=Q>0?`uniform ${X.name}: array<${b}, ${Q}>;\n`:`uniform ${X.name}: ${b};\n`}else this._uboDeclaration+=`${X.type} ${X.name}${Q>0?`[${Q}]`:""};\n`}this._uniformList.push(X.name)}Q.vertex&&(this._vertexDeclaration+=Q.vertex+"\n"),Q.fragment&&(this._fragmentDeclaration+=Q.fragment+"\n")}X.getSamplers(this._samplerList),X.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(b,X){if(X)for(const P in X)this._codeInjectionPoints[b]||(this._codeInjectionPoints[b]={}),this._codeInjectionPoints[b][P]=!0}_injectCustomCode(b,X){return(P,Q)=>{var S;X&&(Q=X(P,Q)),this._uboDeclaration&&(Q=Q.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Q=Q.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Q=Q.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const d=null===(S=this._codeInjectionPoints)||void 0===S?void 0:S[P];if(!d)return Q;let N=null;for(let X in d){let S="";for(const Q of this._activePlugins){var f;let d=null===(f=Q.getCustomCode(P,this._material.shaderLanguage))||void 0===f?void 0:f[X];if(d){if(Q.resolveIncludes){if(null===N){const X=0;N={defines:[],indexParameters:b.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:u.c.GetShadersRepository(X),includesShadersStore:u.c.GetIncludesShadersStore(X),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}N.isFragment="fragment"===P,(0,a.h)(d,N,(b=>d=b))}S+=d+"\n"}}if(S.length>0)if("!"===X.charAt(0)){X=X.substring(1);let b="g";if("!"===X.charAt(0))b="",X=X.substring(1);else{const P=w.exec(X);P&&P.length>=2&&(b=P[1],X=X.substring(b.length+1))}b.indexOf("g")<0&&(b+="g");const P=Q,d=new RegExp(X,b);let N=d.exec(P);for(;null!==N;){let b=S;for(let X=0;X<N.length;++X)b=b.replace("$"+X,N[X]);Q=Q.replace(N[0],b),N=d.exec(P)}}else{const b="#define "+X;Q=Q.replace(b,"\n"+S+"\n"+b)}}return Q}}}f._MaterialPluginClassToMainDefine={},f._MaterialPluginCounter=0,N.e.OnEnginesDisposedObservable.add((()=>{D()}));const O=[];let e=!1,Y=null;function D(){O.length=0,e=!1,d.b.OnEventObservable.remove(Y),Y=null}var E=P(11862),t=P(11802);class B{isCompatible(b){return 0===b}_enable(b){b&&this._pluginManager._activatePlugin(this)}constructor(b,X,P,Q){let S=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],N=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=b,this.name=X,this.priority=P,this.resolveIncludes=N,b.pluginManager||(b.pluginManager=new f(b),b.Nd.add((()=>{b.pluginManager=void 0}))),this._pluginDefineNames=Q,this._pluginManager=b.pluginManager,S&&this._pluginManager._addPlugin(this),d&&this._enable(!0),this.markAllDefinesAsDirty=b._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(b,X,P,Q){return!0}hardBindForSubMesh(b,X,P,Q){}bindForSubMesh(b,X,P,Q){}dispose(b){}getCustomCode(b){return null}collectDefines(b){if(this._pluginDefineNames)for(const X of Object.keys(this._pluginDefineNames)){if("_"===X[0])continue;const P=typeof this._pluginDefineNames[X];b[X]={type:"number"===P?"number":"string"===P?"string":"boolean"===P?"boolean":"object",default:this._pluginDefineNames[X]}}}prepareDefinesBeforeAttributes(b,X,P){}prepareDefines(b,X,P){}hasTexture(b){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(b){}getActiveTextures(b){}getAnimatables(b){}addFallbacks(b,X,P){return P}getSamplers(b){}getAttributes(b,X,P){}getUniformBuffersNames(b){}getUniforms(){return{}}copyTo(b){E.b.Clone((()=>b),this)}serialize(){return E.b.Serialize(this)}parse(b,X,P){E.b.Parse((()=>this),b,X,P)}}(0,Q.b)([(0,S.E)()],B.prototype,"name",void 0),(0,Q.b)([(0,S.E)()],B.prototype,"priority",void 0),(0,Q.b)([(0,S.E)()],B.prototype,"resolveIncludes",void 0),(0,Q.b)([(0,S.E)()],B.prototype,"registerForExtraEvents",void 0),(0,t.h)("BABYLON.MaterialPluginBase",B)},12238:(b,X,P)=>{P.d(X,{d:()=>Q});class Q{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(b){b.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(b){}bindForSubMesh(b,X,P,Q,S){if(X.prePassRenderer&&X.prePassRenderer.enabled&&X.prePassRenderer.currentRTisSceneRT&&(-1!==X.prePassRenderer.getIndex(2)||-1!==X.prePassRenderer.getIndex(11))){this.previousWorldMatrices[P.uniqueId]||(this.previousWorldMatrices[P.uniqueId]=Q.clone()),this.previousViewProjection||(this.previousViewProjection=X.getTransformMatrix().clone(),this.currentViewProjection=X.getTransformMatrix().clone());const S=X.getEngine();this.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=S.frameId,this.previousViewProjection.N(this.currentViewProjection),this.currentViewProjection.N(X.getTransformMatrix())):this._lastUpdateFrameId!==S.frameId&&(this._lastUpdateFrameId=S.frameId,this.previousViewProjection.N(this.currentViewProjection)),b.setMatrix("previousWorld",this.previousWorldMatrices[P.uniqueId]),b.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[P.uniqueId]=Q.clone()}}}},12232:(b,X,P)=>{P.d(X,{nX:()=>A});var Q=P(11822),S=P(11825),d=P(11934),N=P(12093),a=P(11878),u=P(11912),w=P(12238),f=P(12102),O=P(12177),e=P(12240),Y=P(12169),D=P(11814),E=P(11802),t=P(12244),B=P(12163),W=P(12252),n=P(12229),y=P(12221),h=P(11862),L=P(12262);const Z={effect:null,subMesh:null};class v extends e.d{constructor(b){super(b),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(b){const X=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const P of X)this[P]=P===b}}class A extends Y.d{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(b){this._attachImageProcessingConfiguration(b),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(b){b!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=b||this.Ab().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(b){this.imageProcessingConfiguration.colorCurvesEnabled=b}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(b){this.imageProcessingConfiguration.colorGradingEnabled=b}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(b){this._imageProcessingConfiguration.toneMappingEnabled=b}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(b){this._imageProcessingConfiguration.exposure=b}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(b){this._imageProcessingConfiguration.contrast=b}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(b){this._imageProcessingConfiguration.colorGradingTexture=b}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(b){this._imageProcessingConfiguration.colorCurves=b}get canRenderToMRT(){return!0}constructor(b,X){super(b,X,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||A.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new a.yX(0,0,0),this.diffuseColor=new a.yX(1,1,1),this.specularColor=new a.yX(1,1,1),this.emissiveColor=new a.yX(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new d.h(16),this._globalAmbientColor=new a.yX(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new W.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new w.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),A.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),A.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(A.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(A.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"nX"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===O.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Ad&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==O.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Ad||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(b,X){let Q=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const S=X._drawWrapper;if(S.effect&&this.isFrozen&&S._wasPreviouslyReady&&S._wasPreviouslyUsingInstances===Q)return!0;X.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),X.materialDefines=new v(this._eventInfo.defineNames));const d=this.Ab(),N=X.materialDefines;if(this._isReadyForSubMesh(X))return!0;const a=d.getEngine();N._needNormals=(0,y.U)(d,b,N,!0,this._maxSimultaneousLights,this._disableLighting),(0,y.bb)(d,N);const O=this.needAlphaBlendingForMesh(b)&&this.Ab().useOrderIndependentTransparency;if((0,y.eb)(d,N,this.canRenderToMRT&&!O),(0,y.db)(d,N,O),L.b.PrepareDefines(a.currentRenderPassId,b,N),N._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,N._needUVs=!1;for(let b=1;b<=6;++b)N["MAINUV"+b]=!1;if(d.texturesEnabled){if(N.DIFFUSEDIRECTUV=0,N.BUMPDIRECTUV=0,N.AMBIENTDIRECTUV=0,N.OPACITYDIRECTUV=0,N.EMISSIVEDIRECTUV=0,N.SPECULARDIRECTUV=0,N.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&A.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._diffuseTexture,N,"DIFFUSE")}else N.DIFFUSE=!1;if(this._ambientTexture&&A.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._ambientTexture,N,"AMBIENT")}else N.AMBIENT=!1;if(this._opacityTexture&&A.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._opacityTexture,N,"OPACITY"),N.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else N.OPACITY=!1;if(this._reflectionTexture&&A.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(N._needNormals=!0,N.REFLECTION=!0,N.ROUGHNESS=this._roughness>0,N.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,N.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===D.d.INVCUBIC_MODE,N.REFLECTIONMAP_3D=this._reflectionTexture.isCube,N.REFLECTIONMAP_OPPOSITEZ=N.REFLECTIONMAP_3D&&this.Ab().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,N.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case D.d.EXPLICIT_MODE:N.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case D.d.PLANAR_MODE:N.setReflectionMode("REFLECTIONMAP_PLANAR");break;case D.d.PROJECTION_MODE:N.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case D.d.SKYBOX_MODE:N.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case D.d.SPHERICAL_MODE:N.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case D.d.EQUIRECTANGULAR_MODE:N.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case D.d.FIXED_EQUIRECTANGULAR_MODE:N.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case D.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:N.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case D.d.CUBIC_MODE:case D.d.INVCUBIC_MODE:default:N.setReflectionMode("REFLECTIONMAP_CUBIC")}N.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else N.REFLECTION=!1,N.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&A.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._emissiveTexture,N,"EMISSIVE")}else N.EMISSIVE=!1;if(this._lightmapTexture&&A.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._lightmapTexture,N,"LIGHTMAP"),N.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,N.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else N.LIGHTMAP=!1;if(this._specularTexture&&A.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,y.Y)(this._specularTexture,N,"SPECULAR"),N.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else N.SPECULAR=!1;if(d.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&A.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,y.Y)(this._bumpTexture,N,"BUMP"),N.PARALLAX=this._useParallax,N.PARALLAX_RHS=d.useRightHandedSystem,N.PARALLAXOCCLUSION=this._useParallaxOcclusion,N.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else N.BUMP=!1,N.PARALLAX=!1,N.PARALLAX_RHS=!1,N.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&A.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;N._needUVs=!0,N.REFRACTION=!0,N.REFRACTIONMAP_3D=this._refractionTexture.isCube,N.RGBDREFRACTION=this._refractionTexture.isRGBD,N.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else N.REFRACTION=!1;N.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else N.DIFFUSE=!1,N.AMBIENT=!1,N.OPACITY=!1,N.REFLECTION=!1,N.EMISSIVE=!1,N.LIGHTMAP=!1,N.BUMP=!1,N.REFRACTION=!1;N.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),N.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,N.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,N.SPECULAROVERALPHA=this._useSpecularOverAlpha,N.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,N.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,N.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(b)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=N,this._eventInfo.subMesh=X,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(N._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(N),N.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,N.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(N._areFresnelDirty&&(A.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(N.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,N.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,N.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,N.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,N.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,N.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,N._needNormals=!0,N.FRESNEL=!0):N.FRESNEL=!1),N.AREALIGHTUSED)for(let P=0;P<b.lightSources.length;P++)if(!b.lightSources[P]._isReady())return!1;(0,y.ab)(b,d,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(b),N,this._applyDecalMapAfterDetailMap),(0,y.S)(d,a,this,N,Q,null,X.getRenderingMesh().hasThinInstances),this._eventInfo.defines=N,this._eventInfo.mesh=b,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,y.O)(b,N,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let e=!1;if(N.isDirty){const Q=N._areLightsDisposed;N.markAsProcessed();const S=new B.c;N.REFLECTION&&S.addFallback(0,"REFLECTION"),N.SPECULAR&&S.addFallback(0,"SPECULAR"),N.BUMP&&S.addFallback(0,"BUMP"),N.PARALLAX&&S.addFallback(1,"PARALLAX"),N.PARALLAX_RHS&&S.addFallback(1,"PARALLAX_RHS"),N.PARALLAXOCCLUSION&&S.addFallback(0,"PARALLAXOCCLUSION"),N.SPECULAROVERALPHA&&S.addFallback(0,"SPECULAROVERALPHA"),N.FOG&&S.addFallback(1,"FOG"),N.POINTSIZE&&S.addFallback(0,"POINTSIZE"),N.LOGARITHMICDEPTH&&S.addFallback(0,"LOGARITHMICDEPTH"),(0,y.x)(N,S,this._maxSimultaneousLights),N.SPECULARTERM&&S.addFallback(0,"SPECULARTERM"),N.DIFFUSEFRESNEL&&S.addFallback(1,"DIFFUSEFRESNEL"),N.OPACITYFRESNEL&&S.addFallback(2,"OPACITYFRESNEL"),N.REFLECTIONFRESNEL&&S.addFallback(3,"REFLECTIONFRESNEL"),N.EMISSIVEFRESNEL&&S.addFallback(4,"EMISSIVEFRESNEL"),N.FRESNEL&&S.addFallback(4,"FRESNEL"),N.MULTIVIEW&&S.addFallback(0,"MULTIVIEW");const O=[u.g.PositionKind];N.NORMAL&&O.push(u.g.NormalKind),N.TANGENT&&O.push(u.g.TangentKind);for(let b=1;b<=6;++b)N["UV"+b]&&O.push(`uv${1===b?"":b}`);N.VERTEXCOLOR&&O.push(u.g.ColorKind),(0,y.D)(O,b,N,S),(0,y.G)(O,N),(0,y.H)(O,b,N),(0,y.B)(O,b,N);let Y="default";const D=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],E=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],t=["Material","Scene","Mesh"],W={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:N.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=S,this._eventInfo.fallbackRank=0,this._eventInfo.defines=N,this._eventInfo.uniforms=D,this._eventInfo.attributes=O,this._eventInfo.samplers=E,this._eventInfo.uniformBuffersNames=t,this._eventInfo.customCode=void 0,this._eventInfo.mesh=b,this._eventInfo.indexParameters=W,this._callbackPluginEventGeneric(128,this._eventInfo),L.b.AddUniformsAndSamplers(D,E),w.d.AddUniforms(D),w.d.AddSamplers(E),f.d&&(f.d.PrepareUniforms(D,N),f.d.PrepareSamplers(E,N)),(0,y.hb)({uniformsNames:D,uniformBuffersNames:t,samplers:E,defines:N,maxSimultaneousLights:this._maxSimultaneousLights}),(0,n.e)(D);const h={};this.customShaderNameResolve&&(Y=this.customShaderNameResolve(Y,D,t,E,N,O,h));const v=N.toString(),A=X.effect;let o=d.getEngine().createEffect(Y,{attributes:O,uniformsNames:D,uniformBuffersNames:t,samplers:E,defines:v,fallbacks:S,onCompiled:this.onCompiled,onError:this.onError,indexParameters:W,processFinalCode:h.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:N.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([P.e(41),P.e(64)]).then(P.bind(P,14483)),Promise.all([P.e(39),P.e(65)]).then(P.bind(P,14635))]):await Promise.all([Promise.all([P.e(34),P.e(67)]).then(P.bind(P,14722)),Promise.all([P.e(33),P.e(68)]).then(P.bind(P,14858))]),this._shadersLoaded=!0}},a);if(this._eventInfo.customCode=void 0,o)if(this._onEffectCreatedObservable&&(Z.effect=o,Z.subMesh=X,this._onEffectCreatedObservable.notifyObservers(Z)),this.allowShaderHotSwapping&&A&&!o.isReady()){if(o=A,N.markAsUnprocessed(),e=this.isFrozen,Q)return N._areLightsDisposed=!0,!1}else d.resetCachedMaterial(),X.setEffect(o,N,this._materialContext)}return!(!X.effect||!X.effect.isReady())&&(N._renderId=d.getRenderId(),S._wasPreviouslyReady=!e,S._wasPreviouslyUsingInstances=Q,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const b=this._uniformBuffer;b.addUniform("diffuseLeftColor",4),b.addUniform("diffuseRightColor",4),b.addUniform("opacityParts",4),b.addUniform("reflectionLeftColor",4),b.addUniform("reflectionRightColor",4),b.addUniform("refractionLeftColor",4),b.addUniform("refractionRightColor",4),b.addUniform("emissiveLeftColor",4),b.addUniform("emissiveRightColor",4),b.addUniform("vDiffuseInfos",2),b.addUniform("vAmbientInfos",2),b.addUniform("vOpacityInfos",2),b.addUniform("vReflectionInfos",2),b.addUniform("vReflectionPosition",3),b.addUniform("vReflectionSize",3),b.addUniform("vEmissiveInfos",2),b.addUniform("vLightmapInfos",2),b.addUniform("vSpecularInfos",2),b.addUniform("vBumpInfos",3),b.addUniform("diffuseMatrix",16),b.addUniform("ambientMatrix",16),b.addUniform("opacityMatrix",16),b.addUniform("reflectionMatrix",16),b.addUniform("emissiveMatrix",16),b.addUniform("lightmapMatrix",16),b.addUniform("specularMatrix",16),b.addUniform("bumpMatrix",16),b.addUniform("vTangentSpaceParams",2),b.addUniform("pointSize",1),b.addUniform("alphaCutOff",1),b.addUniform("refractionMatrix",16),b.addUniform("vRefractionInfos",4),b.addUniform("vRefractionPosition",3),b.addUniform("vRefractionSize",3),b.addUniform("vSpecularColor",4),b.addUniform("vEmissiveColor",3),b.addUniform("vDiffuseColor",4),b.addUniform("vAmbientColor",3),b.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(b,X,P){const Q=this.Ab(),S=P.materialDefines;if(!S)return;const d=P.effect;if(!d)return;this._activeEffect=d,X.getMeshUniformBuffer().bindToEffect(d,"Mesh"),X.transferToEffect(b),this._uniformBuffer.bindToEffect(d,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Q,X,b,this.isFrozen),L.b.Bind(Q.getEngine().currentRenderPassId,this._activeEffect,X,b,this);const u=Q.activeCamera;u?this._uniformBuffer.updateFloat4("cameraInfo",u.Vd,u.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=P,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),S.OBJECTSPACE_NORMALMAP&&(b.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const w=this._mustRebind(Q,d,P,X.visibility);(0,y.c)(X,d);const f=this._uniformBuffer;if(w){if(this.bindViewProjection(d),!f.useUbo||!this.isFrozen||!f.isSync||P._drawWrapper._forceRebindOnNextCall){if(A.FresnelEnabled&&S.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(f.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),f.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&f.updateColor4("opacityParts",new a.yX(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(f.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),f.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(f.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),f.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(f.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),f.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Q.texturesEnabled){if(this._diffuseTexture&&A.DiffuseTextureEnabled&&(f.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,y.v)(this._diffuseTexture,f,"diffuse")),this._ambientTexture&&A.AmbientTextureEnabled&&(f.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,y.v)(this._ambientTexture,f,"ambient")),this._opacityTexture&&A.OpacityTextureEnabled&&(f.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,y.v)(this._opacityTexture,f,"opacity")),this._hasAlphaChannel()&&f.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&A.ReflectionTextureEnabled){if(f.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),f.Cd("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const b=this._reflectionTexture;f.updateVector3("vReflectionPosition",b.boundingBoxPosition),f.updateVector3("vReflectionSize",b.boundingBoxSize)}}else f.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&A.EmissiveTextureEnabled&&(f.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,y.v)(this._emissiveTexture,f,"emissive")),this._lightmapTexture&&A.LightmapTextureEnabled&&(f.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,y.v)(this._lightmapTexture,f,"lightmap")),this._specularTexture&&A.SpecularTextureEnabled&&(f.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,y.v)(this._specularTexture,f,"specular")),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&A.BumpTextureEnabled&&(f.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,y.v)(this._bumpTexture,f,"bump"),Q._mirroredCameraPosition?f.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):f.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&A.RefractionTextureEnabled){let b=1;if(this._refractionTexture.isCube||(f.Cd("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(b=this._refractionTexture.depth)),f.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,b,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const b=this._refractionTexture;f.updateVector3("vRefractionPosition",b.boundingBoxPosition),f.updateVector3("vRefractionSize",b.boundingBoxSize)}}}this.pointsCloud&&f.updateFloat("pointSize",this.pointSize),f.updateColor4("vSpecularColor",this.specularColor,this.specularPower),f.updateColor3("vEmissiveColor",A.EmissiveTextureEnabled?this.emissiveColor:a.yX.BlackReadOnly),f.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Q.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),f.updateColor3("vAmbientColor",this._globalAmbientColor)}Q.texturesEnabled&&(this._diffuseTexture&&A.DiffuseTextureEnabled&&d.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&A.AmbientTextureEnabled&&d.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&A.OpacityTextureEnabled&&d.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&A.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?d.setTexture("reflectionCubeSampler",this._reflectionTexture):d.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&A.EmissiveTextureEnabled&&d.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&A.LightmapTextureEnabled&&d.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&A.SpecularTextureEnabled&&d.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Q.getEngine().getCaps().standardDerivatives&&A.BumpTextureEnabled&&d.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&A.RefractionTextureEnabled&&(this._refractionTexture.isCube?d.setTexture("refractionCubeSampler",this._refractionTexture):d.setTexture("refraction2DSampler",this._refractionTexture))),this.Ab().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(X)&&this.Ab().depthPeelingRenderer.bind(d),this._eventInfo.subMesh=P,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,n.i)(d,this,Q),this.bindEyePosition(d)}else Q.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(w||!this.isFrozen){var O;if(Q.lightsEnabled&&!this._disableLighting&&(0,y.j)(Q,X,d,S,this._maxSimultaneousLights),(Q.fogEnabled&&X.applyFog&&Q.fogMode!==N.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||X.receiveShadows||S.PREPASS)&&this.bindView(d),(0,y.g)(Q,X,d),S.NUM_MORPH_INFLUENCERS&&(0,y.o)(X,d),S.BAKED_VERTEX_ANIMATION_TEXTURE)null===(O=X.bakedVertexAnimationManager)||void 0===O||O.bind(d,S.INSTANCES);this.useLogarithmicDepth&&(0,y.k)(S,d,Q),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(X,this._activeEffect,P),f.update()}getAnimatables(){const b=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&b.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&b.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&b.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&b.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&b.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&b.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&b.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&b.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&b.push(this._refractionTexture),b}getActiveTextures(){const b=super.getActiveTextures();return this._diffuseTexture&&b.push(this._diffuseTexture),this._ambientTexture&&b.push(this._ambientTexture),this._opacityTexture&&b.push(this._opacityTexture),this._reflectionTexture&&b.push(this._reflectionTexture),this._emissiveTexture&&b.push(this._emissiveTexture),this._specularTexture&&b.push(this._specularTexture),this._bumpTexture&&b.push(this._bumpTexture),this._lightmapTexture&&b.push(this._lightmapTexture),this._refractionTexture&&b.push(this._refractionTexture),b}hasTexture(b){return!!super.hasTexture(b)||(this._diffuseTexture===b||(this._ambientTexture===b||(this._opacityTexture===b||(this._reflectionTexture===b||(this._emissiveTexture===b||(this._specularTexture===b||(this._bumpTexture===b||(this._lightmapTexture===b||this._refractionTexture===b))))))))}dispose(b,X){var P,Q,S,d,N,a,u,w,f;X&&(null===(P=this._diffuseTexture)||void 0===P||P.dispose(),null===(Q=this._ambientTexture)||void 0===Q||Q.dispose(),null===(S=this._opacityTexture)||void 0===S||S.dispose(),null===(d=this._reflectionTexture)||void 0===d||d.dispose(),null===(N=this._emissiveTexture)||void 0===N||N.dispose(),null===(a=this._specularTexture)||void 0===a||a.dispose(),null===(u=this._bumpTexture)||void 0===u||u.dispose(),null===(w=this._lightmapTexture)||void 0===w||w.dispose(),null===(f=this._refractionTexture)||void 0===f||f.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(b,X)}clone(b){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Q=h.b.Clone((()=>new A(b,this.Ab())),this,{cloneTexturesOnlyOnce:X});return Q.name=b,Q.id=b,this.stencil.copyTo(Q.stencil),this._clonePlugins(Q,P),Q}static Parse(b,X,P){const Q=h.b.Parse((()=>new A(b.name,X)),b,X,P);return b.stencil&&Q.stencil.parse(b.stencil,X,P),O.b._ParsePlugins(b,Q,X,P),Q}static get DiffuseTextureEnabled(){return t.b.DiffuseTextureEnabled}static set DiffuseTextureEnabled(b){t.b.DiffuseTextureEnabled=b}static get DetailTextureEnabled(){return t.b.DetailTextureEnabled}static set DetailTextureEnabled(b){t.b.DetailTextureEnabled=b}static get AmbientTextureEnabled(){return t.b.AmbientTextureEnabled}static set AmbientTextureEnabled(b){t.b.AmbientTextureEnabled=b}static get OpacityTextureEnabled(){return t.b.OpacityTextureEnabled}static set OpacityTextureEnabled(b){t.b.OpacityTextureEnabled=b}static get ReflectionTextureEnabled(){return t.b.ReflectionTextureEnabled}static set ReflectionTextureEnabled(b){t.b.ReflectionTextureEnabled=b}static get EmissiveTextureEnabled(){return t.b.EmissiveTextureEnabled}static set EmissiveTextureEnabled(b){t.b.EmissiveTextureEnabled=b}static get SpecularTextureEnabled(){return t.b.SpecularTextureEnabled}static set SpecularTextureEnabled(b){t.b.SpecularTextureEnabled=b}static get BumpTextureEnabled(){return t.b.BumpTextureEnabled}static set BumpTextureEnabled(b){t.b.BumpTextureEnabled=b}static get LightmapTextureEnabled(){return t.b.LightmapTextureEnabled}static set LightmapTextureEnabled(b){t.b.LightmapTextureEnabled=b}static get RefractionTextureEnabled(){return t.b.RefractionTextureEnabled}static set RefractionTextureEnabled(b){t.b.RefractionTextureEnabled=b}static get ColorGradingTextureEnabled(){return t.b.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(b){t.b.ColorGradingTextureEnabled=b}static get FresnelEnabled(){return t.b.FresnelEnabled}static set FresnelEnabled(b){t.b.FresnelEnabled=b}}A.ForceGLSL=!1,(0,Q.b)([(0,S.v)("diffuseTexture")],A.prototype,"_diffuseTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],A.prototype,"diffuseTexture",void 0),(0,Q.b)([(0,S.v)("ambientTexture")],A.prototype,"_ambientTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"ambientTexture",void 0),(0,Q.b)([(0,S.v)("opacityTexture")],A.prototype,"_opacityTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],A.prototype,"opacityTexture",void 0),(0,Q.b)([(0,S.v)("reflectionTexture")],A.prototype,"_reflectionTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"reflectionTexture",void 0),(0,Q.b)([(0,S.v)("emissiveTexture")],A.prototype,"_emissiveTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"emissiveTexture",void 0),(0,Q.b)([(0,S.v)("specularTexture")],A.prototype,"_specularTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"specularTexture",void 0),(0,Q.b)([(0,S.v)("bumpTexture")],A.prototype,"_bumpTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"bumpTexture",void 0),(0,Q.b)([(0,S.v)("lightmapTexture")],A.prototype,"_lightmapTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"lightmapTexture",void 0),(0,Q.b)([(0,S.v)("refractionTexture")],A.prototype,"_refractionTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"refractionTexture",void 0),(0,Q.b)([(0,S.j)("ambient")],A.prototype,"ambientColor",void 0),(0,Q.b)([(0,S.j)("diffuse")],A.prototype,"diffuseColor",void 0),(0,Q.b)([(0,S.j)("specular")],A.prototype,"specularColor",void 0),(0,Q.b)([(0,S.j)("emissive")],A.prototype,"emissiveColor",void 0),(0,Q.b)([(0,S.E)()],A.prototype,"specularPower",void 0),(0,Q.b)([(0,S.E)("useAlphaFromDiffuseTexture")],A.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],A.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Q.b)([(0,S.E)("useEmissiveAsIllumination")],A.prototype,"_useEmissiveAsIllumination",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useEmissiveAsIllumination",void 0),(0,Q.b)([(0,S.E)("linkEmissiveWithDiffuse")],A.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"linkEmissiveWithDiffuse",void 0),(0,Q.b)([(0,S.E)("useSpecularOverAlpha")],A.prototype,"_useSpecularOverAlpha",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useSpecularOverAlpha",void 0),(0,Q.b)([(0,S.E)("useReflectionOverAlpha")],A.prototype,"_useReflectionOverAlpha",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useReflectionOverAlpha",void 0),(0,Q.b)([(0,S.E)("disableLighting")],A.prototype,"_disableLighting",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsLightsDirty")],A.prototype,"disableLighting",void 0),(0,Q.b)([(0,S.E)("useObjectSpaceNormalMap")],A.prototype,"_useObjectSpaceNormalMap",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useObjectSpaceNormalMap",void 0),(0,Q.b)([(0,S.E)("useParallax")],A.prototype,"_useParallax",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useParallax",void 0),(0,Q.b)([(0,S.E)("useParallaxOcclusion")],A.prototype,"_useParallaxOcclusion",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useParallaxOcclusion",void 0),(0,Q.b)([(0,S.E)()],A.prototype,"parallaxScaleBias",void 0),(0,Q.b)([(0,S.E)("roughness")],A.prototype,"_roughness",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"roughness",void 0),(0,Q.b)([(0,S.E)()],A.prototype,"indexOfRefraction",void 0),(0,Q.b)([(0,S.E)()],A.prototype,"invertRefractionY",void 0),(0,Q.b)([(0,S.E)()],A.prototype,"alphaCutOff",void 0),(0,Q.b)([(0,S.E)("useLightmapAsShadowmap")],A.prototype,"_useLightmapAsShadowmap",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useLightmapAsShadowmap",void 0),(0,Q.b)([(0,S.l)("diffuseFresnelParameters")],A.prototype,"_diffuseFresnelParameters",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelDirty")],A.prototype,"diffuseFresnelParameters",void 0),(0,Q.b)([(0,S.l)("opacityFresnelParameters")],A.prototype,"_opacityFresnelParameters",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],A.prototype,"opacityFresnelParameters",void 0),(0,Q.b)([(0,S.l)("reflectionFresnelParameters")],A.prototype,"_reflectionFresnelParameters",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelDirty")],A.prototype,"reflectionFresnelParameters",void 0),(0,Q.b)([(0,S.l)("refractionFresnelParameters")],A.prototype,"_refractionFresnelParameters",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelDirty")],A.prototype,"refractionFresnelParameters",void 0),(0,Q.b)([(0,S.l)("emissiveFresnelParameters")],A.prototype,"_emissiveFresnelParameters",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelDirty")],A.prototype,"emissiveFresnelParameters",void 0),(0,Q.b)([(0,S.E)("useReflectionFresnelFromSpecular")],A.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsFresnelDirty")],A.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Q.b)([(0,S.E)("useGlossinessFromSpecularMapAlpha")],A.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Q.b)([(0,S.E)("maxSimultaneousLights")],A.prototype,"_maxSimultaneousLights",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsLightsDirty")],A.prototype,"maxSimultaneousLights",void 0),(0,Q.b)([(0,S.E)("invertNormalMapX")],A.prototype,"_invertNormalMapX",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"invertNormalMapX",void 0),(0,Q.b)([(0,S.E)("invertNormalMapY")],A.prototype,"_invertNormalMapY",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"invertNormalMapY",void 0),(0,Q.b)([(0,S.E)("twoSidedLighting")],A.prototype,"_twoSidedLighting",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsTexturesDirty")],A.prototype,"twoSidedLighting",void 0),(0,Q.b)([(0,S.E)("applyDecalMapAfterDetailMap")],A.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Q.b)([(0,S.c)("_markAllSubMeshesAsMiscDirty")],A.prototype,"applyDecalMapAfterDetailMap",void 0),(0,E.h)("BABYLON.StandardMaterial",A),N.e.DefaultMaterialFactory=b=>new A("default material",b)}}]);