"use strict";(self.qbp2s7qydk=self.qbp2s7qydk||[]).push([[25],{13363:(M,A,O)=>{O.d(A,{c:()=>e});var S=O(12958),z=O(13286),Q=O(12964),X=O(13357),c=O(13350),j=O(13367),B=O(13322);class g extends c.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class e extends j.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(M){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(M,"DetailMap",140,new g,A),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=z.b.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=M._dirtyCallbacks[1]}isReadyForSubMesh(M,A,O){return!this._isEnabled||!(M._areTexturesDirty&&A.texturesEnabled&&O.getCaps().standardDerivatives&&this._texture&&X.c.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(M,A){if(this._isEnabled){M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const O=A.getEngine();M._areTexturesDirty&&(O.getCaps().standardDerivatives&&this._texture&&X.c.DetailTextureEnabled&&this._isEnabled?((0,B.S)(this._texture,M,"DETAIL"),M.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):M.DETAIL=!1)}else M.DETAIL=!1}bindForSubMesh(M,A){if(!this._isEnabled)return;const O=this._material.isFrozen;M.useUbo&&O&&M.isSync||this._texture&&X.c.DetailTextureEnabled&&(M.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,B.s)(this._texture,M,"detail")),A.texturesEnabled&&this._texture&&X.c.DetailTextureEnabled&&M.setTexture("detailSampler",this._texture)}hasTexture(M){return this._texture===M}getActiveTextures(M){this._texture&&M.push(this._texture)}getAnimatables(M){this._texture&&this._texture.animations&&this._texture.animations.length>0&&M.push(this._texture)}dispose(M){var A;M&&(null===(A=this._texture)||void 0===A||A.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(M){M.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,S.d)([(0,Q.y)("detailTexture"),(0,Q.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"texture",void 0),(0,S.d)([(0,Q.H)()],e.prototype,"diffuseBlendLevel",void 0),(0,S.d)([(0,Q.H)()],e.prototype,"roughnessBlendLevel",void 0),(0,S.d)([(0,Q.H)()],e.prototype,"bumpLevel",void 0),(0,S.d)([(0,Q.H)(),(0,Q.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"normalBlendMethod",void 0),(0,S.d)([(0,Q.H)(),(0,Q.b)("_markAllSubMeshesAsTexturesDirty")],e.prototype,"isEnabled",void 0)},13350:(M,A,O)=>{O.d(A,{e:()=>S});class S{constructor(M){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=M,M)for(const A in M)Object.prototype.hasOwnProperty.call(M,A)&&this._setDefaultValue(A)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let M=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||M,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const M of Object.keys(this))"_"!==M[0]&&this._keys.push(M);if(this._externalProperties)for(const M in this._externalProperties)-1===this._keys.indexOf(M)&&this._keys.push(M)}isEqual(M){if(this._keys.length!==M._keys.length)return!1;for(let A=0;A<this._keys.length;A++){const O=this._keys[A];if(this[O]!==M[O])return!1}return!0}cloneTo(M){this._keys.length!==M._keys.length&&(M._keys=this._keys.slice(0));for(let A=0;A<this._keys.length;A++){const O=this._keys[A];M[O]=this[O]}}reset(){for(const M of this._keys)this._setDefaultValue(M)}_setDefaultValue(M){var A,O,S,z,Q;const X=null!==(A=null===(O=this._externalProperties)||void 0===O||null===(S=O[M])||void 0===S?void 0:S.type)&&void 0!==A?A:typeof this[M],c=null===(z=this._externalProperties)||void 0===z||null===(Q=z[M])||void 0===Q?void 0:Q.default;switch(X){case"number":this[M]=null!==c&&void 0!==c?c:0;break;case"string":this[M]=null!==c&&void 0!==c?c:"";break;default:this[M]=null!==c&&void 0!==c&&c}}toString(){let M="";for(let A=0;A<this._keys.length;A++){const O=this._keys[A],S=this[O];switch(typeof S){case"number":case"string":M+="#define "+O+" "+S+"\n";break;default:S&&(M+="#define "+O+"\n")}}return M}}},13357:(M,A,O)=>{O.d(A,{c:()=>z});var S=O(12852);class z{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){this._DiffuseTextureEnabled!==M&&(this._DiffuseTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(M){this._BaseWeightTextureEnabled!==M&&(this._BaseWeightTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(M){this._BaseDiffuseRoughnessTextureEnabled!==M&&(this._BaseDiffuseRoughnessTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(M){this._DetailTextureEnabled!==M&&(this._DetailTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(M){this._DecalMapEnabled!==M&&(this._DecalMapEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(M){this._AmbientTextureEnabled!==M&&(this._AmbientTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(M){this._OpacityTextureEnabled!==M&&(this._OpacityTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){this._ReflectionTextureEnabled!==M&&(this._ReflectionTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){this._EmissiveTextureEnabled!==M&&(this._EmissiveTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(M){this._SpecularTextureEnabled!==M&&(this._SpecularTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(M){this._BumpTextureEnabled!==M&&(this._BumpTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(M){this._LightmapTextureEnabled!==M&&(this._LightmapTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(M){this._RefractionTextureEnabled!==M&&(this._RefractionTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){this._ColorGradingTextureEnabled!==M&&(this._ColorGradingTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(M){this._FresnelEnabled!==M&&(this._FresnelEnabled=M,S.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(M){this._ClearCoatTextureEnabled!==M&&(this._ClearCoatTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(M){this._ClearCoatBumpTextureEnabled!==M&&(this._ClearCoatBumpTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(M){this._ClearCoatTintTextureEnabled!==M&&(this._ClearCoatTintTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(M){this._SheenTextureEnabled!==M&&(this._SheenTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(M){this._AnisotropicTextureEnabled!==M&&(this._AnisotropicTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(M){this._ThicknessTextureEnabled!==M&&(this._ThicknessTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(M){this._RefractionIntensityTextureEnabled!==M&&(this._RefractionIntensityTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(M){this._TranslucencyIntensityTextureEnabled!==M&&(this._TranslucencyIntensityTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(M){this._TranslucencyColorTextureEnabled!==M&&(this._TranslucencyColorTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(M){this._IridescenceTextureEnabled!==M&&(this._IridescenceTextureEnabled=M,S.e.MarkAllMaterialsAsDirty(1))}}z._DiffuseTextureEnabled=!0,z._BaseWeightTextureEnabled=!0,z._BaseDiffuseRoughnessTextureEnabled=!0,z._DetailTextureEnabled=!0,z._DecalMapEnabled=!0,z._AmbientTextureEnabled=!0,z._OpacityTextureEnabled=!0,z._ReflectionTextureEnabled=!0,z._EmissiveTextureEnabled=!0,z._SpecularTextureEnabled=!0,z._BumpTextureEnabled=!0,z._LightmapTextureEnabled=!0,z._RefractionTextureEnabled=!0,z._ColorGradingTextureEnabled=!0,z._FresnelEnabled=!0,z._ClearCoatTextureEnabled=!0,z._ClearCoatBumpTextureEnabled=!0,z._ClearCoatTintTextureEnabled=!0,z._SheenTextureEnabled=!0,z._AnisotropicTextureEnabled=!0,z._ThicknessTextureEnabled=!0,z._RefractionIntensityTextureEnabled=!0,z._TranslucencyIntensityTextureEnabled=!0,z._TranslucencyColorTextureEnabled=!0,z._IridescenceTextureEnabled=!0},13374:(M,A,O)=>{O.d(A,{d:()=>Q});var S,z=O(12970);!function(M){M[M.Zero=0]="Zero",M[M.One=1]="One",M[M.MaxViewZ=2]="MaxViewZ"}(S||(S={}));class Q{static CreateConfiguration(M){return Q._Configurations[M]={defines:{},previousWorldMatrices:{},previousViewProjection:z.Matrix.Zero(),currentViewProjection:z.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},Q._Configurations[M]}static DeleteConfiguration(M){delete Q._Configurations[M]}static GetConfiguration(M){return Q._Configurations[M]}static AddUniformsAndSamplers(M,A){M.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(M,A){for(const O of A)if(O.Bc)for(const A of O.Bc)A._removeDrawWrapper(M)}static PrepareDefines(M,A,O){if(!O._arePrePassDirty)return;const S=Q._Configurations[M];if(!S)return;O.PREPASS=!0,O.PREPASS_COLOR=!1,O.PREPASS_COLOR_INDEX=-1;let z=0;for(let X=0;X<Q.GeometryTextureDescriptions.length;X++){const M=Q.GeometryTextureDescriptions[X],A=M.define,c=M.defineIndex,j=S.defines[c];void 0!==j?(O[A]=!0,O[c]=j,z++):(O[A]=!1,delete O[c])}O.SCENE_MRT_COUNT=z,O.BONES_VELOCITY_ENABLED=A.useBones&&A.computeBonesUsingShaders&&A.skeleton&&!A.skeleton.isUsingTextureForMatrices&&-1===S.excludedSkinnedMesh.indexOf(A)}static Bind(M,A,O,S,z){const X=Q._Configurations[M];if(!X)return;const c=O.HM(),j=c.getEngine();if(X.reverseCulling&&j.setStateCullFaceType(c._mirroredCameraPosition?z.cullBackFaces:!z.cullBackFaces),(void 0!==X.defines.PREPASS_VELOCITY_INDEX||void 0!==X.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(X.previousWorldMatrices[O.uniqueId]||(X.previousWorldMatrices[O.uniqueId]=S.clone()),X.previousViewProjection||(X.previousViewProjection=c.getTransformMatrix().clone(),X.currentViewProjection=c.getTransformMatrix().clone()),X.currentViewProjection.updateFlag!==c.getTransformMatrix().updateFlag?(X.lastUpdateFrameId=j.frameId,X.previousViewProjection.S(X.currentViewProjection),X.currentViewProjection.S(c.getTransformMatrix())):X.lastUpdateFrameId!==j.frameId&&(X.lastUpdateFrameId=j.frameId,X.previousViewProjection.S(X.currentViewProjection)),A.setMatrix("previousWorld",X.previousWorldMatrices[O.uniqueId]),A.setMatrix("previousViewProjection",X.previousViewProjection),X.previousWorldMatrices[O.uniqueId]=S.clone(),O.useBones&&O.computeBonesUsingShaders&&O.skeleton)){const M=O.skeleton;if(!M.isUsingTextureForMatrices||-1===A.getUniformIndex("boneTextureWidth")){const S=M.getTransformMatrices(O);S&&(X.previousBones[O.uniqueId]||(X.previousBones[O.uniqueId]=S.slice()),A.setMatrices("mPreviousBones",X.previousBones[O.uniqueId]),X.previousBones[O.uniqueId].set(S))}}}}Q.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],Q._Configurations={}},13367:(M,A,O)=>{O.d(A,{d:()=>w});var S=O(12958),z=O(12964),Q=O(13286),X=O(12811),c=O(12836),j=O(12864);const B=new RegExp("^([gimus]+)!");class g{constructor(M){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=M,this._scene=M.HM(),this._engine=this._scene.getEngine()}_addPlugin(M){for(let S=0;S<this._plugins.length;++S)if(this._plugins[S].name===M.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!M.isCompatible(this._material.shaderLanguage))throw'The plugin "'.concat(M.name,'" can\'t be added to the material "').concat(this._material.name,'" because the plugin is not compatible with the shader language of the material.');const A=M.getClassName();g._MaterialPluginClassToMainDefine[A]||(g._MaterialPluginClassToMainDefine[A]="MATERIALPLUGIN_"+ ++g._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(M,A)=>this._handlePluginEvent(M,A),this._plugins.push(M),this._plugins.sort(((M,A)=>M.priority-A.priority)),this._codeInjectionPoints={};const O={};O[g._MaterialPluginClassToMainDefine[A]]={type:"boolean",default:!0};for(const S of this._plugins)S.collectDefines(O),this._collectPointNames("vertex",S.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",S.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=O,!0}_activatePlugin(M){-1===this._activePlugins.indexOf(M)&&(this._activePlugins.push(M),this._activePlugins.sort(((M,A)=>M.priority-A.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),M.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(M),this._activePluginsForExtraEvents.sort(((M,A)=>M.priority-A.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(M){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===M)return this._plugins[A];return null}_handlePluginEventIsReadyForSubMesh(M){let A=!0;for(const O of this._activePlugins)A=A&&O.isReadyForSubMesh(M.defines,this._scene,this._engine,M.subMesh);M.isReadyForSubMesh=A}_handlePluginEventPrepareDefinesBeforeAttributes(M){for(const A of this._activePlugins)A.prepareDefinesBeforeAttributes(M.defines,this._scene,M.mesh)}_handlePluginEventPrepareDefines(M){for(const A of this._activePlugins)A.prepareDefines(M.defines,this._scene,M.mesh)}_handlePluginEventHardBindForSubMesh(M){for(const A of this._activePluginsForExtraEvents)A.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventBindForSubMesh(M){for(const A of this._activePlugins)A.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,M.subMesh)}_handlePluginEventHasRenderTargetTextures(M){let A=!1;for(const O of this._activePluginsForExtraEvents)if(A=O.hasRenderTargetTextures(),A)break;M.hasRenderTargetTextures=A}_handlePluginEventFillRenderTargetTextures(M){for(const A of this._activePluginsForExtraEvents)A.fillRenderTargetTextures(M.renderTargets)}_handlePluginEvent(M,A){switch(M){case 512:{const M=A;for(const A of this._activePlugins)A.getActiveTextures(M.activeTextures);break}case 256:{const M=A;for(const A of this._activePlugins)A.getAnimatables(M.animatables);break}case 1024:{const M=A;let O=!1;for(const A of this._activePlugins)if(O=A.hasTexture(M.texture),O)break;M.hasTexture=O;break}case 2:{const M=A;for(const A of this._plugins)A.dispose(M.forceDisposeTextures);break}case 4:A.defineNames=this._defineNamesFromPlugins;break;case 128:{const M=A;for(const A of this._activePlugins)M.fallbackRank=A.addFallbacks(M.defines,M.fallbacks,M.fallbackRank),A.getAttributes(M.attributes,this._scene,M.mesh);this._uniformList.length>0&&M.uniforms.push(...this._uniformList),this._samplerList.length>0&&M.samplers.push(...this._samplerList),this._uboList.length>0&&M.uniformBuffersNames.push(...this._uboList),M.customCode=this._injectCustomCode(M,M.customCode);break}case 8:{const M=A;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const S=1===this._material.shaderLanguage;for(const A of this._plugins){const z=A.getUniforms(this._material.shaderLanguage);if(z){if(z.ubo)for(const A of z.ubo){if(A.size&&A.type){var O;const z=null!==(O=A.arraySize)&&void 0!==O?O:0;if(M.ubo.addUniform(A.name,A.size,z),S){let M;switch(A.type){case"mat4":M="mat4x4f";break;case"float":M="f32";break;default:M="".concat(A.type,"f")}this._uboDeclaration+=z>0?"uniform ".concat(A.name,": array<").concat(M,", ").concat(z,">;\n"):"uniform ".concat(A.name,": ").concat(M,";\n")}else this._uboDeclaration+="".concat(A.type," ").concat(A.name).concat(z>0?"[".concat(z,"]"):"",";\n")}this._uniformList.push(A.name)}z.vertex&&(this._vertexDeclaration+=z.vertex+"\n"),z.fragment&&(this._fragmentDeclaration+=z.fragment+"\n")}A.getSamplers(this._samplerList),A.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(M,A){if(A)for(const O in A)this._codeInjectionPoints[M]||(this._codeInjectionPoints[M]={}),this._codeInjectionPoints[M][O]=!0}_injectCustomCode(M,A){return(O,S)=>{var z;A&&(S=A(O,S)),this._uboDeclaration&&(S=S.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(S=S.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(S=S.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const Q=null===(z=this._codeInjectionPoints)||void 0===z?void 0:z[O];if(!Q)return S;let X=null;for(let A in Q){let z="";for(const S of this._activePlugins){var g;let Q=null===(g=S.getCustomCode(O,this._material.shaderLanguage))||void 0===g?void 0:g[A];if(Q){if(S.resolveIncludes){if(null===X){const A=0;X={defines:[],indexParameters:M.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:j.c.GetShadersRepository(A),includesShadersStore:j.c.GetIncludesShadersStore(A),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,QQ:this._engine.QQ,processCodeAfterIncludes:void 0}}X.isFragment="fragment"===O,(0,c.h)(Q,X,(M=>Q=M))}z+=Q+"\n"}}if(z.length>0)if("!"===A.charAt(0)){A=A.substring(1);let M="g";if("!"===A.charAt(0))M="",A=A.substring(1);else{const O=B.exec(A);O&&O.length>=2&&(M=O[1],A=A.substring(M.length+1))}M.indexOf("g")<0&&(M+="g");const O=S,Q=new RegExp(A,M);let X=Q.exec(O);for(;null!==X;){let M=z;for(let A=0;A<X.length;++A)M=M.replace("$"+A,X[A]);S=S.replace(X[0],M),X=Q.exec(O)}}else{const M="#define "+A;S=S.replace(M,"\n"+z+"\n"+M)}}return S}}}g._MaterialPluginClassToMainDefine={},g._MaterialPluginCounter=0,X.d.OnEnginesDisposedObservable.add((()=>{K()}));const e=[];let T=!1,J=null;function K(){e.length=0,T=!1,Q.b.OnEventObservable.remove(J),J=null}var G=O(12998),d=O(12919);class w{isCompatible(M){return 0===M}_enable(M){M&&this._pluginManager._activatePlugin(this)}constructor(M,A,O,S){let z=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],Q=arguments.length>5&&void 0!==arguments[5]&&arguments[5],X=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=M,this.name=A,this.priority=O,this.resolveIncludes=X,M.pluginManager||(M.pluginManager=new g(M),M.Ac.add((()=>{M.pluginManager=void 0}))),this._pluginDefineNames=S,this._pluginManager=M.pluginManager,z&&this._pluginManager._addPlugin(this),Q&&this._enable(!0),this.markAllDefinesAsDirty=M._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(M,A,O,S){return!0}hardBindForSubMesh(M,A,O,S){}bindForSubMesh(M,A,O,S){}dispose(M){}getCustomCode(M){return null}collectDefines(M){if(this._pluginDefineNames)for(const A of Object.keys(this._pluginDefineNames)){if("_"===A[0])continue;const O=typeof this._pluginDefineNames[A];M[A]={type:"number"===O?"number":"string"===O?"string":"boolean"===O?"boolean":"object",default:this._pluginDefineNames[A]}}}prepareDefinesBeforeAttributes(M,A,O){}prepareDefines(M,A,O){}hasTexture(M){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(M){}getActiveTextures(M){}getAnimatables(M){}addFallbacks(M,A,O){return O}getSamplers(M){}getAttributes(M,A,O){}getUniformBuffersNames(M){}getUniforms(){return{}}copyTo(M){G.e.Clone((()=>M),this)}serialize(){return G.e.Serialize(this)}parse(M,A,O){G.e.Parse((()=>this),M,A,O)}}(0,S.d)([(0,z.H)()],w.prototype,"name",void 0),(0,S.d)([(0,z.H)()],w.prototype,"priority",void 0),(0,S.d)([(0,z.H)()],w.prototype,"resolveIncludes",void 0),(0,S.d)([(0,z.H)()],w.prototype,"registerForExtraEvents",void 0),(0,d.g)("BABYLON.MaterialPluginBase",w)},13345:(M,A,O)=>{O.d(A,{e:()=>S});class S{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(M){M.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(M){}bindForSubMesh(M,A,O,S,z){if(A.prePassRenderer&&A.prePassRenderer.enabled&&A.prePassRenderer.currentRTisSceneRT&&(-1!==A.prePassRenderer.getIndex(2)||-1!==A.prePassRenderer.getIndex(11))){this.previousWorldMatrices[O.uniqueId]||(this.previousWorldMatrices[O.uniqueId]=S.clone()),this.previousViewProjection||(this.previousViewProjection=A.getTransformMatrix().clone(),this.currentViewProjection=A.getTransformMatrix().clone());const z=A.getEngine();this.currentViewProjection.updateFlag!==A.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=z.frameId,this.previousViewProjection.S(this.currentViewProjection),this.currentViewProjection.S(A.getTransformMatrix())):this._lastUpdateFrameId!==z.frameId&&(this._lastUpdateFrameId=z.frameId,this.previousViewProjection.S(this.currentViewProjection)),M.setMatrix("previousWorld",this.previousWorldMatrices[O.uniqueId]),M.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[O.uniqueId]=S.clone()}}}},13338:(M,A,O)=>{O.d(A,{IA:()=>f});var S=O(12958),z=O(12964),Q=O(13075),X=O(13214),c=O(13010),j=O(13043),B=O(13345),g=O(13217),e=O(13286),T=O(13350),J=O(13278),K=O(12949),G=O(12919),d=O(13357),w=O(13271),I=O(13363),b=O(13329),s=O(13322),Y=O(12998),E=O(13374);const H={effect:null,subMesh:null};class C extends T.e{constructor(M){super(M),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(M){const A=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const O of A)this[O]=O===M}}class f extends J.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(M){this._attachImageProcessingConfiguration(M),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(M){M!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=M||this.HM().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(M){this.imageProcessingConfiguration.colorCurvesEnabled=M}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(M){this.imageProcessingConfiguration.colorGradingEnabled=M}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(M){this._imageProcessingConfiguration.toneMappingEnabled=M}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(M){this._imageProcessingConfiguration.exposure=M}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(M){this._imageProcessingConfiguration.contrast=M}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(M){this._imageProcessingConfiguration.colorGradingTexture=M}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(M){this._imageProcessingConfiguration.colorCurves=M}get canRenderToMRT(){return!0}constructor(M,A){super(M,A,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||f.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new c.bA(0,0,0),this.diffuseColor=new c.bA(1,1,1),this.specularColor=new c.bA(1,1,1),this.emissiveColor=new c.bA(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new Q.f(16),this._globalAmbientColor=new c.bA(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new I.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new B.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(f.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(f.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"IA"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===e.b.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.ec&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==e.b.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.ec||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(M,A){let S=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const z=A._drawWrapper;if(z.effect&&this.isFrozen&&z._wasPreviouslyReady&&z._wasPreviouslyUsingInstances===S)return!0;A.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),A.materialDefines=new C(this._eventInfo.defineNames));const Q=this.HM(),X=A.materialDefines;if(this._isReadyForSubMesh(A))return!0;const c=Q.getEngine();X._needNormals=(0,s.P)(Q,M,X,!0,this._maxSimultaneousLights,this._disableLighting),(0,s.Z)(Q,X);const e=this.needAlphaBlendingForMesh(M)&&this.HM().useOrderIndependentTransparency;if((0,s.db)(Q,X,this.canRenderToMRT&&!e),(0,s.$)(Q,X,e),E.d.PrepareDefines(c.currentRenderPassId,M,X),X._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,X._needUVs=!1;for(let M=1;M<=6;++M)X["MAINUV"+M]=!1;if(Q.texturesEnabled){if(X.DIFFUSEDIRECTUV=0,X.BUMPDIRECTUV=0,X.AMBIENTDIRECTUV=0,X.OPACITYDIRECTUV=0,X.EMISSIVEDIRECTUV=0,X.SPECULARDIRECTUV=0,X.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&f.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._diffuseTexture,X,"DIFFUSE")}else X.DIFFUSE=!1;if(this._ambientTexture&&f.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._ambientTexture,X,"AMBIENT")}else X.AMBIENT=!1;if(this._opacityTexture&&f.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._opacityTexture,X,"OPACITY"),X.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else X.OPACITY=!1;if(this._reflectionTexture&&f.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(X._needNormals=!0,X.REFLECTION=!0,X.ROUGHNESS=this._roughness>0,X.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,X.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===K.c.INVCUBIC_MODE,X.REFLECTIONMAP_3D=this._reflectionTexture.isCube,X.REFLECTIONMAP_OPPOSITEZ=X.REFLECTIONMAP_3D&&this.HM().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,X.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case K.c.EXPLICIT_MODE:X.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case K.c.PLANAR_MODE:X.setReflectionMode("REFLECTIONMAP_PLANAR");break;case K.c.PROJECTION_MODE:X.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case K.c.SKYBOX_MODE:X.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case K.c.SPHERICAL_MODE:X.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case K.c.EQUIRECTANGULAR_MODE:X.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case K.c.FIXED_EQUIRECTANGULAR_MODE:X.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case K.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:X.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case K.c.CUBIC_MODE:case K.c.INVCUBIC_MODE:default:X.setReflectionMode("REFLECTIONMAP_CUBIC")}X.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else X.REFLECTION=!1,X.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&f.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._emissiveTexture,X,"EMISSIVE")}else X.EMISSIVE=!1;if(this._lightmapTexture&&f.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._lightmapTexture,X,"LIGHTMAP"),X.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,X.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else X.LIGHTMAP=!1;if(this._specularTexture&&f.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,s.S)(this._specularTexture,X,"SPECULAR"),X.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else X.SPECULAR=!1;if(Q.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&f.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,s.S)(this._bumpTexture,X,"BUMP"),X.PARALLAX=this._useParallax,X.PARALLAX_RHS=Q.useRightHandedSystem,X.PARALLAXOCCLUSION=this._useParallaxOcclusion,X.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else X.BUMP=!1,X.PARALLAX=!1,X.PARALLAX_RHS=!1,X.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&f.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;X._needUVs=!0,X.REFRACTION=!0,X.REFRACTIONMAP_3D=this._refractionTexture.isCube,X.RGBDREFRACTION=this._refractionTexture.isRGBD,X.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else X.REFRACTION=!1;X.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else X.DIFFUSE=!1,X.AMBIENT=!1,X.OPACITY=!1,X.REFLECTION=!1,X.EMISSIVE=!1,X.LIGHTMAP=!1,X.BUMP=!1,X.REFRACTION=!1;X.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),X.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,X.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,X.SPECULAROVERALPHA=this._useSpecularOverAlpha,X.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,X.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,X.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(M)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=X,this._eventInfo.subMesh=A,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(X._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(X),X.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,X.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(X._areFresnelDirty&&(f.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(X.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,X.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,X.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,X.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,X.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,X.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,X._needNormals=!0,X.FRESNEL=!0):X.FRESNEL=!1),X.AREALIGHTUSED)for(let O=0;O<M.lightSources.length;O++)if(!M.lightSources[O]._isReady())return!1;(0,s.W)(M,Q,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(M),X,this._applyDecalMapAfterDetailMap),(0,s.L)(Q,c,this,X,S,null,A.getRenderingMesh().hasThinInstances),this._eventInfo.defines=X,this._eventInfo.mesh=M,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,s.K)(M,X,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let T=!1;if(X.isDirty){const S=X._areLightsDisposed;X.markAsProcessed();const z=new w.b;X.REFLECTION&&z.addFallback(0,"REFLECTION"),X.SPECULAR&&z.addFallback(0,"SPECULAR"),X.BUMP&&z.addFallback(0,"BUMP"),X.PARALLAX&&z.addFallback(1,"PARALLAX"),X.PARALLAX_RHS&&z.addFallback(1,"PARALLAX_RHS"),X.PARALLAXOCCLUSION&&z.addFallback(0,"PARALLAXOCCLUSION"),X.SPECULAROVERALPHA&&z.addFallback(0,"SPECULAROVERALPHA"),X.FOG&&z.addFallback(1,"FOG"),X.POINTSIZE&&z.addFallback(0,"POINTSIZE"),X.LOGARITHMICDEPTH&&z.addFallback(0,"LOGARITHMICDEPTH"),(0,s.u)(X,z,this._maxSimultaneousLights),X.SPECULARTERM&&z.addFallback(0,"SPECULARTERM"),X.DIFFUSEFRESNEL&&z.addFallback(1,"DIFFUSEFRESNEL"),X.OPACITYFRESNEL&&z.addFallback(2,"OPACITYFRESNEL"),X.REFLECTIONFRESNEL&&z.addFallback(3,"REFLECTIONFRESNEL"),X.EMISSIVEFRESNEL&&z.addFallback(4,"EMISSIVEFRESNEL"),X.FRESNEL&&z.addFallback(4,"FRESNEL"),X.MULTIVIEW&&z.addFallback(0,"MULTIVIEW");const e=[j.c.PositionKind];X.NORMAL&&e.push(j.c.NormalKind),X.TANGENT&&e.push(j.c.TangentKind);for(let M=1;M<=6;++M)X["UV"+M]&&e.push("uv".concat(1===M?"":M));X.VERTEXCOLOR&&e.push(j.c.ColorKind),(0,s.A)(e,M,X,z),(0,s.E)(e,X),(0,s.F)(e,M,X),(0,s.x)(e,M,X);let J="default";const K=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],G=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],d=["Material","Scene","Mesh"],I={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:X.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=z,this._eventInfo.fallbackRank=0,this._eventInfo.defines=X,this._eventInfo.uniforms=K,this._eventInfo.attributes=e,this._eventInfo.samplers=G,this._eventInfo.uniformBuffersNames=d,this._eventInfo.customCode=void 0,this._eventInfo.mesh=M,this._eventInfo.indexParameters=I,this._callbackPluginEventGeneric(128,this._eventInfo),E.d.AddUniformsAndSamplers(K,G),B.e.AddUniforms(K),B.e.AddSamplers(G),g.b&&(g.b.PrepareUniforms(K,X),g.b.PrepareSamplers(G,X)),(0,s.hb)({uniformsNames:K,uniformBuffersNames:d,samplers:G,defines:X,maxSimultaneousLights:this._maxSimultaneousLights}),(0,b.b)(K);const Y={};this.customShaderNameResolve&&(J=this.customShaderNameResolve(J,K,d,G,X,e,Y));const C=X.toString(),f=A.effect;let D=Q.getEngine().createEffect(J,{attributes:e,uniformsNames:K,uniformBuffersNames:d,samplers:G,defines:C,fallbacks:z,onCompiled:this.onCompiled,onError:this.onError,indexParameters:I,processFinalCode:Y.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:X.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([O.e(41),O.e(64)]).then(O.bind(O,15189)),Promise.all([O.e(39),O.e(65)]).then(O.bind(O,15329))]):await Promise.all([Promise.all([O.e(34),O.e(67)]).then(O.bind(O,15400)),Promise.all([O.e(33),O.e(68)]).then(O.bind(O,15544))]),this._shadersLoaded=!0}},c);if(this._eventInfo.customCode=void 0,D)if(this._onEffectCreatedObservable&&(H.effect=D,H.subMesh=A,this._onEffectCreatedObservable.notifyObservers(H)),this.allowShaderHotSwapping&&f&&!D.isReady()){if(D=f,X.markAsUnprocessed(),T=this.isFrozen,S)return X._areLightsDisposed=!0,!1}else Q.resetCachedMaterial(),A.setEffect(D,X,this._materialContext)}return!(!A.effect||!A.effect.isReady())&&(X._renderId=Q.getRenderId(),z._wasPreviouslyReady=!T,z._wasPreviouslyUsingInstances=S,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const M=this._uniformBuffer;M.addUniform("diffuseLeftColor",4),M.addUniform("diffuseRightColor",4),M.addUniform("opacityParts",4),M.addUniform("reflectionLeftColor",4),M.addUniform("reflectionRightColor",4),M.addUniform("refractionLeftColor",4),M.addUniform("refractionRightColor",4),M.addUniform("emissiveLeftColor",4),M.addUniform("emissiveRightColor",4),M.addUniform("vDiffuseInfos",2),M.addUniform("vAmbientInfos",2),M.addUniform("vOpacityInfos",2),M.addUniform("vReflectionInfos",2),M.addUniform("vReflectionPosition",3),M.addUniform("vReflectionSize",3),M.addUniform("vEmissiveInfos",2),M.addUniform("vLightmapInfos",2),M.addUniform("vSpecularInfos",2),M.addUniform("vBumpInfos",3),M.addUniform("diffuseMatrix",16),M.addUniform("ambientMatrix",16),M.addUniform("opacityMatrix",16),M.addUniform("reflectionMatrix",16),M.addUniform("emissiveMatrix",16),M.addUniform("lightmapMatrix",16),M.addUniform("specularMatrix",16),M.addUniform("bumpMatrix",16),M.addUniform("vTangentSpaceParams",2),M.addUniform("pointSize",1),M.addUniform("alphaCutOff",1),M.addUniform("refractionMatrix",16),M.addUniform("vRefractionInfos",4),M.addUniform("vRefractionPosition",3),M.addUniform("vRefractionSize",3),M.addUniform("vSpecularColor",4),M.addUniform("vEmissiveColor",3),M.addUniform("vDiffuseColor",4),M.addUniform("vAmbientColor",3),M.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(M,A,O){const S=this.HM(),z=O.materialDefines;if(!z)return;const Q=O.effect;if(!Q)return;this._activeEffect=Q,A.getMeshUniformBuffer().bindToEffect(Q,"Mesh"),A.transferToEffect(M),this._uniformBuffer.bindToEffect(Q,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,S,A,M,this.isFrozen),E.d.Bind(S.getEngine().currentRenderPassId,this._activeEffect,A,M,this);const j=S.activeCamera;j?this._uniformBuffer.updateFloat4("cameraInfo",j.Tc,j.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=O,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),z.OBJECTSPACE_NORMALMAP&&(M.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const B=this._mustRebind(S,Q,O,A.visibility);(0,s.c)(A,Q);const g=this._uniformBuffer;if(B){if(this.bindViewProjection(Q),!g.useUbo||!this.isFrozen||!g.isSync||O._drawWrapper._forceRebindOnNextCall){if(f.FresnelEnabled&&z.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(g.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),g.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&g.updateColor4("opacityParts",new c.bA(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(g.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),g.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(g.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),g.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(g.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),g.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),S.texturesEnabled){if(this._diffuseTexture&&f.DiffuseTextureEnabled&&(g.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,s.s)(this._diffuseTexture,g,"diffuse")),this._ambientTexture&&f.AmbientTextureEnabled&&(g.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,s.s)(this._ambientTexture,g,"ambient")),this._opacityTexture&&f.OpacityTextureEnabled&&(g.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,s.s)(this._opacityTexture,g,"opacity")),this._hasAlphaChannel()&&g.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&f.ReflectionTextureEnabled){if(g.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),g.Kc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const M=this._reflectionTexture;g.updateVector3("vReflectionPosition",M.boundingBoxPosition),g.updateVector3("vReflectionSize",M.boundingBoxSize)}}else g.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&f.EmissiveTextureEnabled&&(g.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,s.s)(this._emissiveTexture,g,"emissive")),this._lightmapTexture&&f.LightmapTextureEnabled&&(g.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,s.s)(this._lightmapTexture,g,"lightmap")),this._specularTexture&&f.SpecularTextureEnabled&&(g.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,s.s)(this._specularTexture,g,"specular")),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&(g.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,s.s)(this._bumpTexture,g,"bump"),S._mirroredCameraPosition?g.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):g.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&f.RefractionTextureEnabled){let M=1;if(this._refractionTexture.isCube||(g.Kc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(M=this._refractionTexture.depth)),g.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,M,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const M=this._refractionTexture;g.updateVector3("vRefractionPosition",M.boundingBoxPosition),g.updateVector3("vRefractionSize",M.boundingBoxSize)}}}this.pointsCloud&&g.updateFloat("pointSize",this.pointSize),g.updateColor4("vSpecularColor",this.specularColor,this.specularPower),g.updateColor3("vEmissiveColor",f.EmissiveTextureEnabled?this.emissiveColor:c.bA.BlackReadOnly),g.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),S.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),g.updateColor3("vAmbientColor",this._globalAmbientColor)}S.texturesEnabled&&(this._diffuseTexture&&f.DiffuseTextureEnabled&&Q.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&f.AmbientTextureEnabled&&Q.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&f.OpacityTextureEnabled&&Q.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&f.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?Q.setTexture("reflectionCubeSampler",this._reflectionTexture):Q.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&f.EmissiveTextureEnabled&&Q.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&f.LightmapTextureEnabled&&Q.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&f.SpecularTextureEnabled&&Q.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&S.getEngine().getCaps().standardDerivatives&&f.BumpTextureEnabled&&Q.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&f.RefractionTextureEnabled&&(this._refractionTexture.isCube?Q.setTexture("refractionCubeSampler",this._refractionTexture):Q.setTexture("refraction2DSampler",this._refractionTexture))),this.HM().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(A)&&this.HM().depthPeelingRenderer.bind(Q),this._eventInfo.subMesh=O,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,b.d)(Q,this,S),this.bindEyePosition(Q)}else S.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(B||!this.isFrozen){var e;if(S.lightsEnabled&&!this._disableLighting&&(0,s.f)(S,A,Q,z,this._maxSimultaneousLights),(S.fogEnabled&&A.applyFog&&S.fogMode!==X.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||A.receiveShadows||z.PREPASS)&&this.bindView(Q),(0,s.d)(S,A,Q),z.NUM_MORPH_INFLUENCERS&&(0,s.k)(A,Q),z.BAKED_VERTEX_ANIMATION_TEXTURE)null===(e=A.bakedVertexAnimationManager)||void 0===e||e.bind(Q,z.INSTANCES);this.useLogarithmicDepth&&(0,s.g)(z,Q,S),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(A,this._activeEffect,O),g.update()}getAnimatables(){const M=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&M.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&M.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&M.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&M.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&M.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&M.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&M.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&M.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&M.push(this._refractionTexture),M}getActiveTextures(){const M=super.getActiveTextures();return this._diffuseTexture&&M.push(this._diffuseTexture),this._ambientTexture&&M.push(this._ambientTexture),this._opacityTexture&&M.push(this._opacityTexture),this._reflectionTexture&&M.push(this._reflectionTexture),this._emissiveTexture&&M.push(this._emissiveTexture),this._specularTexture&&M.push(this._specularTexture),this._bumpTexture&&M.push(this._bumpTexture),this._lightmapTexture&&M.push(this._lightmapTexture),this._refractionTexture&&M.push(this._refractionTexture),M}hasTexture(M){return!!super.hasTexture(M)||(this._diffuseTexture===M||(this._ambientTexture===M||(this._opacityTexture===M||(this._reflectionTexture===M||(this._emissiveTexture===M||(this._specularTexture===M||(this._bumpTexture===M||(this._lightmapTexture===M||this._refractionTexture===M))))))))}dispose(M,A){var O,S,z,Q,X,c,j,B,g;A&&(null===(O=this._diffuseTexture)||void 0===O||O.dispose(),null===(S=this._ambientTexture)||void 0===S||S.dispose(),null===(z=this._opacityTexture)||void 0===z||z.dispose(),null===(Q=this._reflectionTexture)||void 0===Q||Q.dispose(),null===(X=this._emissiveTexture)||void 0===X||X.dispose(),null===(c=this._specularTexture)||void 0===c||c.dispose(),null===(j=this._bumpTexture)||void 0===j||j.dispose(),null===(B=this._lightmapTexture)||void 0===B||B.dispose(),null===(g=this._refractionTexture)||void 0===g||g.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(M,A)}clone(M){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],O=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const S=Y.e.Clone((()=>new f(M,this.HM())),this,{cloneTexturesOnlyOnce:A});return S.name=M,S.id=M,this.Sc.copyTo(S.Sc),this._clonePlugins(S,O),S}static Parse(M,A,O){const S=Y.e.Parse((()=>new f(M.name,A)),M,A,O);return M.Sc&&S.Sc.parse(M.Sc,A,O),e.b._ParsePlugins(M,S,A,O),S}static get DiffuseTextureEnabled(){return d.c.DiffuseTextureEnabled}static set DiffuseTextureEnabled(M){d.c.DiffuseTextureEnabled=M}static get DetailTextureEnabled(){return d.c.DetailTextureEnabled}static set DetailTextureEnabled(M){d.c.DetailTextureEnabled=M}static get AmbientTextureEnabled(){return d.c.AmbientTextureEnabled}static set AmbientTextureEnabled(M){d.c.AmbientTextureEnabled=M}static get OpacityTextureEnabled(){return d.c.OpacityTextureEnabled}static set OpacityTextureEnabled(M){d.c.OpacityTextureEnabled=M}static get ReflectionTextureEnabled(){return d.c.ReflectionTextureEnabled}static set ReflectionTextureEnabled(M){d.c.ReflectionTextureEnabled=M}static get EmissiveTextureEnabled(){return d.c.EmissiveTextureEnabled}static set EmissiveTextureEnabled(M){d.c.EmissiveTextureEnabled=M}static get SpecularTextureEnabled(){return d.c.SpecularTextureEnabled}static set SpecularTextureEnabled(M){d.c.SpecularTextureEnabled=M}static get BumpTextureEnabled(){return d.c.BumpTextureEnabled}static set BumpTextureEnabled(M){d.c.BumpTextureEnabled=M}static get LightmapTextureEnabled(){return d.c.LightmapTextureEnabled}static set LightmapTextureEnabled(M){d.c.LightmapTextureEnabled=M}static get RefractionTextureEnabled(){return d.c.RefractionTextureEnabled}static set RefractionTextureEnabled(M){d.c.RefractionTextureEnabled=M}static get ColorGradingTextureEnabled(){return d.c.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(M){d.c.ColorGradingTextureEnabled=M}static get FresnelEnabled(){return d.c.FresnelEnabled}static set FresnelEnabled(M){d.c.FresnelEnabled=M}}f.ForceGLSL=!1,(0,S.d)([(0,z.y)("diffuseTexture")],f.prototype,"_diffuseTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"diffuseTexture",void 0),(0,S.d)([(0,z.y)("ambientTexture")],f.prototype,"_ambientTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"ambientTexture",void 0),(0,S.d)([(0,z.y)("opacityTexture")],f.prototype,"_opacityTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"opacityTexture",void 0),(0,S.d)([(0,z.y)("reflectionTexture")],f.prototype,"_reflectionTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"reflectionTexture",void 0),(0,S.d)([(0,z.y)("emissiveTexture")],f.prototype,"_emissiveTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"emissiveTexture",void 0),(0,S.d)([(0,z.y)("specularTexture")],f.prototype,"_specularTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"specularTexture",void 0),(0,S.d)([(0,z.y)("bumpTexture")],f.prototype,"_bumpTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"bumpTexture",void 0),(0,S.d)([(0,z.y)("lightmapTexture")],f.prototype,"_lightmapTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"lightmapTexture",void 0),(0,S.d)([(0,z.y)("refractionTexture")],f.prototype,"_refractionTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"refractionTexture",void 0),(0,S.d)([(0,z.f)("ambient")],f.prototype,"ambientColor",void 0),(0,S.d)([(0,z.f)("diffuse")],f.prototype,"diffuseColor",void 0),(0,S.d)([(0,z.f)("specular")],f.prototype,"specularColor",void 0),(0,S.d)([(0,z.f)("emissive")],f.prototype,"emissiveColor",void 0),(0,S.d)([(0,z.H)()],f.prototype,"specularPower",void 0),(0,S.d)([(0,z.H)("useAlphaFromDiffuseTexture")],f.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],f.prototype,"useAlphaFromDiffuseTexture",void 0),(0,S.d)([(0,z.H)("useEmissiveAsIllumination")],f.prototype,"_useEmissiveAsIllumination",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useEmissiveAsIllumination",void 0),(0,S.d)([(0,z.H)("linkEmissiveWithDiffuse")],f.prototype,"_linkEmissiveWithDiffuse",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"linkEmissiveWithDiffuse",void 0),(0,S.d)([(0,z.H)("useSpecularOverAlpha")],f.prototype,"_useSpecularOverAlpha",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useSpecularOverAlpha",void 0),(0,S.d)([(0,z.H)("useReflectionOverAlpha")],f.prototype,"_useReflectionOverAlpha",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useReflectionOverAlpha",void 0),(0,S.d)([(0,z.H)("disableLighting")],f.prototype,"_disableLighting",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsLightsDirty")],f.prototype,"disableLighting",void 0),(0,S.d)([(0,z.H)("useObjectSpaceNormalMap")],f.prototype,"_useObjectSpaceNormalMap",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useObjectSpaceNormalMap",void 0),(0,S.d)([(0,z.H)("useParallax")],f.prototype,"_useParallax",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallax",void 0),(0,S.d)([(0,z.H)("useParallaxOcclusion")],f.prototype,"_useParallaxOcclusion",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useParallaxOcclusion",void 0),(0,S.d)([(0,z.H)()],f.prototype,"parallaxScaleBias",void 0),(0,S.d)([(0,z.H)("roughness")],f.prototype,"_roughness",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"roughness",void 0),(0,S.d)([(0,z.H)()],f.prototype,"indexOfRefraction",void 0),(0,S.d)([(0,z.H)()],f.prototype,"invertRefractionY",void 0),(0,S.d)([(0,z.H)()],f.prototype,"alphaCutOff",void 0),(0,S.d)([(0,z.H)("useLightmapAsShadowmap")],f.prototype,"_useLightmapAsShadowmap",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useLightmapAsShadowmap",void 0),(0,S.d)([(0,z.l)("diffuseFresnelParameters")],f.prototype,"_diffuseFresnelParameters",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"diffuseFresnelParameters",void 0),(0,S.d)([(0,z.l)("opacityFresnelParameters")],f.prototype,"_opacityFresnelParameters",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],f.prototype,"opacityFresnelParameters",void 0),(0,S.d)([(0,z.l)("reflectionFresnelParameters")],f.prototype,"_reflectionFresnelParameters",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"reflectionFresnelParameters",void 0),(0,S.d)([(0,z.l)("refractionFresnelParameters")],f.prototype,"_refractionFresnelParameters",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"refractionFresnelParameters",void 0),(0,S.d)([(0,z.l)("emissiveFresnelParameters")],f.prototype,"_emissiveFresnelParameters",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"emissiveFresnelParameters",void 0),(0,S.d)([(0,z.H)("useReflectionFresnelFromSpecular")],f.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsFresnelDirty")],f.prototype,"useReflectionFresnelFromSpecular",void 0),(0,S.d)([(0,z.H)("useGlossinessFromSpecularMapAlpha")],f.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,S.d)([(0,z.H)("maxSimultaneousLights")],f.prototype,"_maxSimultaneousLights",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsLightsDirty")],f.prototype,"maxSimultaneousLights",void 0),(0,S.d)([(0,z.H)("invertNormalMapX")],f.prototype,"_invertNormalMapX",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapX",void 0),(0,S.d)([(0,z.H)("invertNormalMapY")],f.prototype,"_invertNormalMapY",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"invertNormalMapY",void 0),(0,S.d)([(0,z.H)("twoSidedLighting")],f.prototype,"_twoSidedLighting",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsTexturesDirty")],f.prototype,"twoSidedLighting",void 0),(0,S.d)([(0,z.H)("applyDecalMapAfterDetailMap")],f.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,S.d)([(0,z.b)("_markAllSubMeshesAsMiscDirty")],f.prototype,"applyDecalMapAfterDetailMap",void 0),(0,G.g)("BABYLON.StandardMaterial",f),X.b.DefaultMaterialFactory=M=>new f("default material",M)}}]);