"use strict";(self.qcdfysujsyf=self.qcdfysujsyf||[]).push([[25],{13099:(K,A,T)=>{T.d(A,{d:()=>Z});var G=T(12683),B=T(13016),L=T(12688),f=T(13090),O=T(13081),C=T(13101),Q=T(13056);class Y extends O.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class Z extends C.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(K){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(K,"DetailMap",140,new Y,A),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=B.e.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=K._dirtyCallbacks[1]}isReadyForSubMesh(K,A,T){return!this._isEnabled||!(K._areTexturesDirty&&A.texturesEnabled&&T.getCaps().standardDerivatives&&this._texture&&f.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(K,A){if(this._isEnabled){K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const T=A.getEngine();K._areTexturesDirty&&(T.getCaps().standardDerivatives&&this._texture&&f.e.DetailTextureEnabled&&this._isEnabled?((0,Q.Y)(this._texture,K,"DETAIL"),K.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):K.DETAIL=!1)}else K.DETAIL=!1}bindForSubMesh(K,A){if(!this._isEnabled)return;const T=this._material.isFrozen;K.useUbo&&T&&K.isSync||this._texture&&f.e.DetailTextureEnabled&&(K.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,Q.t)(this._texture,K,"detail")),A.texturesEnabled&&this._texture&&f.e.DetailTextureEnabled&&K.setTexture("detailSampler",this._texture)}hasTexture(K){return this._texture===K}getActiveTextures(K){this._texture&&K.push(this._texture)}getAnimatables(K){this._texture&&this._texture.animations&&this._texture.animations.length>0&&K.push(this._texture)}dispose(K){var A;K&&(null===(A=this._texture)||void 0===A||A.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(K){K.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,G.c)([(0,L.v)("detailTexture"),(0,L.b)("_markAllSubMeshesAsTexturesDirty")],Z.prototype,"texture",void 0),(0,G.c)([(0,L.B)()],Z.prototype,"diffuseBlendLevel",void 0),(0,G.c)([(0,L.B)()],Z.prototype,"roughnessBlendLevel",void 0),(0,G.c)([(0,L.B)()],Z.prototype,"bumpLevel",void 0),(0,G.c)([(0,L.B)(),(0,L.b)("_markAllSubMeshesAsTexturesDirty")],Z.prototype,"normalBlendMethod",void 0),(0,G.c)([(0,L.B)(),(0,L.b)("_markAllSubMeshesAsTexturesDirty")],Z.prototype,"isEnabled",void 0)},13081:(K,A,T)=>{T.d(A,{e:()=>G});class G{constructor(K){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=K,K)for(const A in K)Object.prototype.hasOwnProperty.call(K,A)&&this._setDefaultValue(A)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let K=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||K,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const K of Object.keys(this))"_"!==K[0]&&this._keys.push(K);if(this._externalProperties)for(const K in this._externalProperties)-1===this._keys.indexOf(K)&&this._keys.push(K)}isEqual(K){if(this._keys.length!==K._keys.length)return!1;for(let A=0;A<this._keys.length;A++){const T=this._keys[A];if(this[T]!==K[T])return!1}return!0}cloneTo(K){this._keys.length!==K._keys.length&&(K._keys=this._keys.slice(0));for(let A=0;A<this._keys.length;A++){const T=this._keys[A];K[T]=this[T]}}reset(){for(const K of this._keys)this._setDefaultValue(K)}_setDefaultValue(K){var A,T,G,B;const L=(null===(A=this._externalProperties)||void 0===A||null===(T=A[K])||void 0===T?void 0:T.type)??typeof this[K],f=null===(G=this._externalProperties)||void 0===G||null===(B=G[K])||void 0===B?void 0:B.default;switch(L){case"number":this[K]=f??0;break;case"string":this[K]=f??"";break;default:this[K]=f??!1}}toString(){let K="";for(let A=0;A<this._keys.length;A++){const T=this._keys[A],G=this[T];switch(typeof G){case"number":case"string":K+="#define "+T+" "+G+"\n";break;default:G&&(K+="#define "+T+"\n")}}return K}}},13090:(K,A,T)=>{T.d(A,{e:()=>B});var G=T(12604);class B{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){this._DiffuseTextureEnabled!==K&&(this._DiffuseTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(K){this._BaseWeightTextureEnabled!==K&&(this._BaseWeightTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(K){this._BaseDiffuseRoughnessTextureEnabled!==K&&(this._BaseDiffuseRoughnessTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(K){this._DetailTextureEnabled!==K&&(this._DetailTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(K){this._DecalMapEnabled!==K&&(this._DecalMapEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(K){this._AmbientTextureEnabled!==K&&(this._AmbientTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(K){this._OpacityTextureEnabled!==K&&(this._OpacityTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){this._ReflectionTextureEnabled!==K&&(this._ReflectionTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){this._EmissiveTextureEnabled!==K&&(this._EmissiveTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(K){this._SpecularTextureEnabled!==K&&(this._SpecularTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(K){this._BumpTextureEnabled!==K&&(this._BumpTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(K){this._LightmapTextureEnabled!==K&&(this._LightmapTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(K){this._RefractionTextureEnabled!==K&&(this._RefractionTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){this._ColorGradingTextureEnabled!==K&&(this._ColorGradingTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(K){this._FresnelEnabled!==K&&(this._FresnelEnabled=K,G.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(K){this._ClearCoatTextureEnabled!==K&&(this._ClearCoatTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(K){this._ClearCoatBumpTextureEnabled!==K&&(this._ClearCoatBumpTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(K){this._ClearCoatTintTextureEnabled!==K&&(this._ClearCoatTintTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(K){this._SheenTextureEnabled!==K&&(this._SheenTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(K){this._AnisotropicTextureEnabled!==K&&(this._AnisotropicTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(K){this._ThicknessTextureEnabled!==K&&(this._ThicknessTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(K){this._RefractionIntensityTextureEnabled!==K&&(this._RefractionIntensityTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(K){this._TranslucencyIntensityTextureEnabled!==K&&(this._TranslucencyIntensityTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(K){this._TranslucencyColorTextureEnabled!==K&&(this._TranslucencyColorTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(K){this._IridescenceTextureEnabled!==K&&(this._IridescenceTextureEnabled=K,G.c.MarkAllMaterialsAsDirty(1))}}B._DiffuseTextureEnabled=!0,B._BaseWeightTextureEnabled=!0,B._BaseDiffuseRoughnessTextureEnabled=!0,B._DetailTextureEnabled=!0,B._DecalMapEnabled=!0,B._AmbientTextureEnabled=!0,B._OpacityTextureEnabled=!0,B._ReflectionTextureEnabled=!0,B._EmissiveTextureEnabled=!0,B._SpecularTextureEnabled=!0,B._BumpTextureEnabled=!0,B._LightmapTextureEnabled=!0,B._RefractionTextureEnabled=!0,B._ColorGradingTextureEnabled=!0,B._FresnelEnabled=!0,B._ClearCoatTextureEnabled=!0,B._ClearCoatBumpTextureEnabled=!0,B._ClearCoatTintTextureEnabled=!0,B._SheenTextureEnabled=!0,B._AnisotropicTextureEnabled=!0,B._ThicknessTextureEnabled=!0,B._RefractionIntensityTextureEnabled=!0,B._TranslucencyIntensityTextureEnabled=!0,B._TranslucencyColorTextureEnabled=!0,B._IridescenceTextureEnabled=!0},13104:(K,A,T)=>{T.d(A,{c:()=>L});var G,B=T(12700);!function(K){K[K.Zero=0]="Zero",K[K.One=1]="One",K[K.MaxViewZ=2]="MaxViewZ"}(G||(G={}));class L{static CreateConfiguration(K){return L._Configurations[K]={defines:{},previousWorldMatrices:{},previousViewProjection:B.Matrix.Zero(),currentViewProjection:B.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},L._Configurations[K]}static DeleteConfiguration(K){delete L._Configurations[K]}static GetConfiguration(K){return L._Configurations[K]}static AddUniformsAndSamplers(K,A){K.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(K,A){for(const T of A)if(T.hf)for(const A of T.hf)A._removeDrawWrapper(K)}static PrepareDefines(K,A,T){if(!T._arePrePassDirty)return;const G=L._Configurations[K];if(!G)return;T.PREPASS=!0,T.PREPASS_COLOR=!1,T.PREPASS_COLOR_INDEX=-1;let B=0;for(let f=0;f<L.GeometryTextureDescriptions.length;f++){const K=L.GeometryTextureDescriptions[f],A=K.define,O=K.defineIndex,C=G.defines[O];void 0!==C?(T[A]=!0,T[O]=C,B++):(T[A]=!1,delete T[O])}T.SCENE_MRT_COUNT=B,T.BONES_VELOCITY_ENABLED=A.useBones&&A.computeBonesUsingShaders&&A.skeleton&&!A.skeleton.isUsingTextureForMatrices&&-1===G.excludedSkinnedMesh.indexOf(A)}static Bind(K,A,T,G,B){const f=L._Configurations[K];if(!f)return;const O=T.SK(),C=O.getEngine();if(f.reverseCulling&&C.setStateCullFaceType(O._mirroredCameraPosition?B.cullBackFaces:!B.cullBackFaces),(void 0!==f.defines.PREPASS_VELOCITY_INDEX||void 0!==f.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(f.previousWorldMatrices[T.uniqueId]||(f.previousWorldMatrices[T.uniqueId]=G.clone()),f.previousViewProjection||(f.previousViewProjection=O.getTransformMatrix().clone(),f.currentViewProjection=O.getTransformMatrix().clone()),f.currentViewProjection.updateFlag!==O.getTransformMatrix().updateFlag?(f.lastUpdateFrameId=C.frameId,f.previousViewProjection.G(f.currentViewProjection),f.currentViewProjection.G(O.getTransformMatrix())):f.lastUpdateFrameId!==C.frameId&&(f.lastUpdateFrameId=C.frameId,f.previousViewProjection.G(f.currentViewProjection)),A.setMatrix("previousWorld",f.previousWorldMatrices[T.uniqueId]),A.setMatrix("previousViewProjection",f.previousViewProjection),f.previousWorldMatrices[T.uniqueId]=G.clone(),T.useBones&&T.computeBonesUsingShaders&&T.skeleton)){const K=T.skeleton;if(!K.isUsingTextureForMatrices||-1===A.getUniformIndex("boneTextureWidth")){const G=K.getTransformMatrices(T);G&&(f.previousBones[T.uniqueId]||(f.previousBones[T.uniqueId]=G.slice()),A.setMatrices("mPreviousBones",f.previousBones[T.uniqueId]),f.previousBones[T.uniqueId].set(G))}}}}L.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],L._Configurations={}},13101:(K,A,T)=>{T.d(A,{b:()=>d});var G=T(12683),B=T(12688),L=T(13016),f=T(12565),O=T(12586),C=T(12618);const Q=new RegExp("^([gimus]+)!");class Y{constructor(K){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=K,this._scene=K.SK(),this._engine=this._scene.getEngine()}_addPlugin(K){for(let G=0;G<this._plugins.length;++G)if(this._plugins[G].name===K.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!K.isCompatible(this._material.shaderLanguage))throw`The plugin "${K.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const A=K.getClassName();Y._MaterialPluginClassToMainDefine[A]||(Y._MaterialPluginClassToMainDefine[A]="MATERIALPLUGIN_"+ ++Y._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(K,A)=>this._handlePluginEvent(K,A),this._plugins.push(K),this._plugins.sort(((K,A)=>K.priority-A.priority)),this._codeInjectionPoints={};const T={};T[Y._MaterialPluginClassToMainDefine[A]]={type:"boolean",default:!0};for(const G of this._plugins)G.collectDefines(T),this._collectPointNames("vertex",G.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",G.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=T,!0}_activatePlugin(K){-1===this._activePlugins.indexOf(K)&&(this._activePlugins.push(K),this._activePlugins.sort(((K,A)=>K.priority-A.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),K.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(K),this._activePluginsForExtraEvents.sort(((K,A)=>K.priority-A.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(K){for(let A=0;A<this._plugins.length;++A)if(this._plugins[A].name===K)return this._plugins[A];return null}_handlePluginEventIsReadyForSubMesh(K){let A=!0;for(const T of this._activePlugins)A=A&&T.isReadyForSubMesh(K.defines,this._scene,this._engine,K.subMesh);K.isReadyForSubMesh=A}_handlePluginEventPrepareDefinesBeforeAttributes(K){for(const A of this._activePlugins)A.prepareDefinesBeforeAttributes(K.defines,this._scene,K.mesh)}_handlePluginEventPrepareDefines(K){for(const A of this._activePlugins)A.prepareDefines(K.defines,this._scene,K.mesh)}_handlePluginEventHardBindForSubMesh(K){for(const A of this._activePluginsForExtraEvents)A.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventBindForSubMesh(K){for(const A of this._activePlugins)A.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,K.subMesh)}_handlePluginEventHasRenderTargetTextures(K){let A=!1;for(const T of this._activePluginsForExtraEvents)if(A=T.hasRenderTargetTextures(),A)break;K.hasRenderTargetTextures=A}_handlePluginEventFillRenderTargetTextures(K){for(const A of this._activePluginsForExtraEvents)A.fillRenderTargetTextures(K.renderTargets)}_handlePluginEvent(K,A){switch(K){case 512:{const K=A;for(const A of this._activePlugins)A.getActiveTextures(K.activeTextures);break}case 256:{const K=A;for(const A of this._activePlugins)A.getAnimatables(K.animatables);break}case 1024:{const K=A;let T=!1;for(const A of this._activePlugins)if(T=A.hasTexture(K.texture),T)break;K.hasTexture=T;break}case 2:{const K=A;for(const A of this._plugins)A.dispose(K.forceDisposeTextures);break}case 4:A.defineNames=this._defineNamesFromPlugins;break;case 128:{const K=A;for(const A of this._activePlugins)K.fallbackRank=A.addFallbacks(K.defines,K.fallbacks,K.fallbackRank),A.getAttributes(K.attributes,this._scene,K.mesh);this._uniformList.length>0&&K.uniforms.push(...this._uniformList),this._samplerList.length>0&&K.samplers.push(...this._samplerList),this._uboList.length>0&&K.uniformBuffersNames.push(...this._uboList),K.customCode=this._injectCustomCode(K,K.customCode);break}case 8:{const K=A;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const T=1===this._material.shaderLanguage;for(const A of this._plugins){const G=A.getUniforms(this._material.shaderLanguage);if(G){if(G.ubo)for(const A of G.ubo){if(A.size&&A.type){const G=A.arraySize??0;if(K.ubo.addUniform(A.name,A.size,G),T){let K;switch(A.type){case"mat4":K="mat4x4f";break;case"float":K="f32";break;default:K=`${A.type}f`}this._uboDeclaration+=G>0?`uniform ${A.name}: array<${K}, ${G}>;\n`:`uniform ${A.name}: ${K};\n`}else this._uboDeclaration+=`${A.type} ${A.name}${G>0?`[${G}]`:""};\n`}this._uniformList.push(A.name)}G.vertex&&(this._vertexDeclaration+=G.vertex+"\n"),G.fragment&&(this._fragmentDeclaration+=G.fragment+"\n")}A.getSamplers(this._samplerList),A.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(K,A){if(A)for(const T in A)this._codeInjectionPoints[K]||(this._codeInjectionPoints[K]={}),this._codeInjectionPoints[K][T]=!0}_injectCustomCode(K,A){return(T,G)=>{var B;A&&(G=A(T,G)),this._uboDeclaration&&(G=G.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(G=G.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(G=G.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const L=null===(B=this._codeInjectionPoints)||void 0===B?void 0:B[T];if(!L)return G;let f=null;for(let A in L){let B="";for(const G of this._activePlugins){var Y;let L=null===(Y=G.getCustomCode(T,this._material.shaderLanguage))||void 0===Y?void 0:Y[A];if(L){if(G.resolveIncludes){if(null===f){const A=0;f={defines:[],indexParameters:K.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:C.b.GetShadersRepository(A),includesShadersStore:C.b.GetIncludesShadersStore(A),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Zf:this._engine.Zf,processCodeAfterIncludes:void 0}}f.isFragment="fragment"===T,(0,O.h)(L,f,(K=>L=K))}B+=L+"\n"}}if(B.length>0)if("!"===A.charAt(0)){A=A.substring(1);let K="g";if("!"===A.charAt(0))K="",A=A.substring(1);else{const T=Q.exec(A);T&&T.length>=2&&(K=T[1],A=A.substring(K.length+1))}K.indexOf("g")<0&&(K+="g");const T=G,L=new RegExp(A,K);let f=L.exec(T);for(;null!==f;){let K=B;for(let A=0;A<f.length;++A)K=K.replace("$"+A,f[A]);G=G.replace(f[0],K),f=L.exec(T)}}else{const K="#define "+A;G=G.replace(K,"\n"+B+"\n"+K)}}return G}}}Y._MaterialPluginClassToMainDefine={},Y._MaterialPluginCounter=0,f.b.OnEnginesDisposedObservable.add((()=>{b()}));const Z=[];let x=!1,J=null;function b(){Z.length=0,x=!1,L.e.OnEventObservable.remove(J),J=null}var P=T(12733),F=T(12651);class d{isCompatible(K){return 0===K}_enable(K){K&&this._pluginManager._activatePlugin(this)}constructor(K,A,T,G){let B=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],L=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=K,this.name=A,this.priority=T,this.resolveIncludes=f,K.pluginManager||(K.pluginManager=new Y(K),K.Ff.add((()=>{K.pluginManager=void 0}))),this._pluginDefineNames=G,this._pluginManager=K.pluginManager,B&&this._pluginManager._addPlugin(this),L&&this._enable(!0),this.markAllDefinesAsDirty=K._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(K,A,T,G){return!0}hardBindForSubMesh(K,A,T,G){}bindForSubMesh(K,A,T,G){}dispose(K){}getCustomCode(K){return null}collectDefines(K){if(this._pluginDefineNames)for(const A of Object.keys(this._pluginDefineNames)){if("_"===A[0])continue;const T=typeof this._pluginDefineNames[A];K[A]={type:"number"===T?"number":"string"===T?"string":"boolean"===T?"boolean":"object",default:this._pluginDefineNames[A]}}}prepareDefinesBeforeAttributes(K,A,T){}prepareDefines(K,A,T){}hasTexture(K){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(K){}getActiveTextures(K){}getAnimatables(K){}addFallbacks(K,A,T){return T}getSamplers(K){}getAttributes(K,A,T){}getUniformBuffersNames(K){}getUniforms(){return{}}copyTo(K){P.c.Clone((()=>K),this)}serialize(){return P.c.Serialize(this)}parse(K,A,T){P.c.Parse((()=>this),K,A,T)}}(0,G.c)([(0,B.B)()],d.prototype,"name",void 0),(0,G.c)([(0,B.B)()],d.prototype,"priority",void 0),(0,G.c)([(0,B.B)()],d.prototype,"resolveIncludes",void 0),(0,G.c)([(0,B.B)()],d.prototype,"registerForExtraEvents",void 0),(0,F.c)("BABYLON.MaterialPluginBase",d)},13077:(K,A,T)=>{T.d(A,{b:()=>G});class G{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(K){K.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(K){}bindForSubMesh(K,A,T,G,B){if(A.prePassRenderer&&A.prePassRenderer.enabled&&A.prePassRenderer.currentRTisSceneRT&&(-1!==A.prePassRenderer.getIndex(2)||-1!==A.prePassRenderer.getIndex(11))){this.previousWorldMatrices[T.uniqueId]||(this.previousWorldMatrices[T.uniqueId]=G.clone()),this.previousViewProjection||(this.previousViewProjection=A.getTransformMatrix().clone(),this.currentViewProjection=A.getTransformMatrix().clone());const B=A.getEngine();this.currentViewProjection.updateFlag!==A.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=B.frameId,this.previousViewProjection.G(this.currentViewProjection),this.currentViewProjection.G(A.getTransformMatrix())):this._lastUpdateFrameId!==B.frameId&&(this._lastUpdateFrameId=B.frameId,this.previousViewProjection.G(this.currentViewProjection)),K.setMatrix("previousWorld",this.previousWorldMatrices[T.uniqueId]),K.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[T.uniqueId]=G.clone()}}}},13069:(K,A,T)=>{T.d(A,{NA:()=>l});var G=T(12683),B=T(12688),L=T(12786),f=T(12931),O=T(12743),C=T(12768),Q=T(13077),Y=T(12935),Z=T(13016),x=T(13081),J=T(13011),b=T(12674),P=T(12651),F=T(13090),d=T(13009),N=T(13099),D=T(13063),mK=T(13056),U=T(12733),z=T(13104);const g={effect:null,subMesh:null};class S extends x.e{constructor(K){super(K),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(K){const A=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const T of A)this[T]=T===K}}class l extends J.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(K){this._attachImageProcessingConfiguration(K),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(K){K!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=K||this.SK().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(K){this.imageProcessingConfiguration.colorCurvesEnabled=K}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(K){this.imageProcessingConfiguration.colorGradingEnabled=K}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(K){this._imageProcessingConfiguration.toneMappingEnabled=K}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(K){this._imageProcessingConfiguration.exposure=K}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(K){this._imageProcessingConfiguration.contrast=K}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(K){this._imageProcessingConfiguration.colorGradingTexture=K}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(K){this._imageProcessingConfiguration.colorCurves=K}get canRenderToMRT(){return!0}constructor(K,A){super(K,A,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||l.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new O.DA(0,0,0),this.diffuseColor=new O.DA(1,1,1),this.specularColor=new O.DA(1,1,1),this.emissiveColor=new O.DA(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new L.d(16),this._globalAmbientColor=new O.DA(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new N.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new Q.b,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(l.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(l.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"NA"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===Z.e.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.sf&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==Z.e.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.sf||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(K,A){let G=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const B=A._drawWrapper;if(B.effect&&this.isFrozen&&B._wasPreviouslyReady&&B._wasPreviouslyUsingInstances===G)return!0;A.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),A.materialDefines=new S(this._eventInfo.defineNames));const L=this.SK(),f=A.materialDefines;if(this._isReadyForSubMesh(A))return!0;const O=L.getEngine();f._needNormals=(0,mK.W)(L,K,f,!0,this._maxSimultaneousLights,this._disableLighting),(0,mK._)(L,f);const Z=this.needAlphaBlendingForMesh(K)&&this.SK().useOrderIndependentTransparency;if((0,mK.bb)(L,f,this.canRenderToMRT&&!Z),(0,mK.$)(L,f,Z),z.c.PrepareDefines(O.currentRenderPassId,K,f),f._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,f._needUVs=!1;for(let K=1;K<=6;++K)f["MAINUV"+K]=!1;if(L.texturesEnabled){if(f.DIFFUSEDIRECTUV=0,f.BUMPDIRECTUV=0,f.AMBIENTDIRECTUV=0,f.OPACITYDIRECTUV=0,f.EMISSIVEDIRECTUV=0,f.SPECULARDIRECTUV=0,f.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&l.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._diffuseTexture,f,"DIFFUSE")}else f.DIFFUSE=!1;if(this._ambientTexture&&l.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._ambientTexture,f,"AMBIENT")}else f.AMBIENT=!1;if(this._opacityTexture&&l.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._opacityTexture,f,"OPACITY"),f.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else f.OPACITY=!1;if(this._reflectionTexture&&l.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(f._needNormals=!0,f.REFLECTION=!0,f.ROUGHNESS=this._roughness>0,f.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,f.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===b.c.INVCUBIC_MODE,f.REFLECTIONMAP_3D=this._reflectionTexture.isCube,f.REFLECTIONMAP_OPPOSITEZ=f.REFLECTIONMAP_3D&&this.SK().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,f.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case b.c.EXPLICIT_MODE:f.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case b.c.PLANAR_MODE:f.setReflectionMode("REFLECTIONMAP_PLANAR");break;case b.c.PROJECTION_MODE:f.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case b.c.SKYBOX_MODE:f.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case b.c.SPHERICAL_MODE:f.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case b.c.EQUIRECTANGULAR_MODE:f.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case b.c.FIXED_EQUIRECTANGULAR_MODE:f.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case b.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:f.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case b.c.CUBIC_MODE:case b.c.INVCUBIC_MODE:default:f.setReflectionMode("REFLECTIONMAP_CUBIC")}f.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else f.REFLECTION=!1,f.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&l.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._emissiveTexture,f,"EMISSIVE")}else f.EMISSIVE=!1;if(this._lightmapTexture&&l.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._lightmapTexture,f,"LIGHTMAP"),f.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,f.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else f.LIGHTMAP=!1;if(this._specularTexture&&l.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,mK.Y)(this._specularTexture,f,"SPECULAR"),f.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else f.SPECULAR=!1;if(L.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&l.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,mK.Y)(this._bumpTexture,f,"BUMP"),f.PARALLAX=this._useParallax,f.PARALLAX_RHS=L.useRightHandedSystem,f.PARALLAXOCCLUSION=this._useParallaxOcclusion,f.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else f.BUMP=!1,f.PARALLAX=!1,f.PARALLAX_RHS=!1,f.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&l.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;f._needUVs=!0,f.REFRACTION=!0,f.REFRACTIONMAP_3D=this._refractionTexture.isCube,f.RGBDREFRACTION=this._refractionTexture.isRGBD,f.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else f.REFRACTION=!1;f.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else f.DIFFUSE=!1,f.AMBIENT=!1,f.OPACITY=!1,f.REFLECTION=!1,f.EMISSIVE=!1,f.LIGHTMAP=!1,f.BUMP=!1,f.REFRACTION=!1;f.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),f.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,f.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,f.SPECULAROVERALPHA=this._useSpecularOverAlpha,f.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,f.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,f.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(K)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=f,this._eventInfo.subMesh=A,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(f._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(f),f.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,f.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(f._areFresnelDirty&&(l.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(f.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,f.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,f.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,f.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,f.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,f.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,f._needNormals=!0,f.FRESNEL=!0):f.FRESNEL=!1),f.AREALIGHTUSED)for(let T=0;T<K.lightSources.length;T++)if(!K.lightSources[T]._isReady())return!1;(0,mK.Z)(K,L,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(K),f,this._applyDecalMapAfterDetailMap),(0,mK.T)(L,O,this,f,G,null,A.getRenderingMesh().hasThinInstances),this._eventInfo.defines=f,this._eventInfo.mesh=K,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,mK.P)(K,f,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let x=!1;if(f.isDirty){const G=f._areLightsDisposed;f.markAsProcessed();const B=new d.d;f.REFLECTION&&B.addFallback(0,"REFLECTION"),f.SPECULAR&&B.addFallback(0,"SPECULAR"),f.BUMP&&B.addFallback(0,"BUMP"),f.PARALLAX&&B.addFallback(1,"PARALLAX"),f.PARALLAX_RHS&&B.addFallback(1,"PARALLAX_RHS"),f.PARALLAXOCCLUSION&&B.addFallback(0,"PARALLAXOCCLUSION"),f.SPECULAROVERALPHA&&B.addFallback(0,"SPECULAROVERALPHA"),f.FOG&&B.addFallback(1,"FOG"),f.POINTSIZE&&B.addFallback(0,"POINTSIZE"),f.LOGARITHMICDEPTH&&B.addFallback(0,"LOGARITHMICDEPTH"),(0,mK.w)(f,B,this._maxSimultaneousLights),f.SPECULARTERM&&B.addFallback(0,"SPECULARTERM"),f.DIFFUSEFRESNEL&&B.addFallback(1,"DIFFUSEFRESNEL"),f.OPACITYFRESNEL&&B.addFallback(2,"OPACITYFRESNEL"),f.REFLECTIONFRESNEL&&B.addFallback(3,"REFLECTIONFRESNEL"),f.EMISSIVEFRESNEL&&B.addFallback(4,"EMISSIVEFRESNEL"),f.FRESNEL&&B.addFallback(4,"FRESNEL"),f.MULTIVIEW&&B.addFallback(0,"MULTIVIEW");const Z=[C.d.PositionKind];f.NORMAL&&Z.push(C.d.NormalKind),f.TANGENT&&Z.push(C.d.TangentKind);for(let K=1;K<=6;++K)f["UV"+K]&&Z.push(`uv${1===K?"":K}`);f.VERTEXCOLOR&&Z.push(C.d.ColorKind),(0,mK.z)(Z,K,f,B),(0,mK.D)(Z,f),(0,mK.H)(Z,K,f),(0,mK.x)(Z,K,f);let J="default";const b=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],P=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],F=["Material","Scene","Mesh"],N={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:f.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=B,this._eventInfo.fallbackRank=0,this._eventInfo.defines=f,this._eventInfo.uniforms=b,this._eventInfo.attributes=Z,this._eventInfo.samplers=P,this._eventInfo.uniformBuffersNames=F,this._eventInfo.customCode=void 0,this._eventInfo.mesh=K,this._eventInfo.indexParameters=N,this._callbackPluginEventGeneric(128,this._eventInfo),z.c.AddUniformsAndSamplers(b,P),Q.b.AddUniforms(b),Q.b.AddSamplers(P),Y.b&&(Y.b.PrepareUniforms(b,f),Y.b.PrepareSamplers(P,f)),(0,mK.cb)({uniformsNames:b,uniformBuffersNames:F,samplers:P,defines:f,maxSimultaneousLights:this._maxSimultaneousLights}),(0,D.e)(b);const U={};this.customShaderNameResolve&&(J=this.customShaderNameResolve(J,b,F,P,f,Z,U));const S=f.toString(),l=A.effect;let u=L.getEngine().createEffect(J,{attributes:Z,uniformsNames:b,uniformBuffersNames:F,samplers:P,defines:S,fallbacks:B,onCompiled:this.onCompiled,onError:this.onError,indexParameters:N,processFinalCode:U.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:f.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([T.e(41),T.e(64)]).then(T.bind(T,15238)),Promise.all([T.e(39),T.e(65)]).then(T.bind(T,15372))]):await Promise.all([Promise.all([T.e(34),T.e(67)]).then(T.bind(T,15447)),Promise.all([T.e(33),T.e(68)]).then(T.bind(T,15592))]),this._shadersLoaded=!0}},O);if(this._eventInfo.customCode=void 0,u)if(this._onEffectCreatedObservable&&(g.effect=u,g.subMesh=A,this._onEffectCreatedObservable.notifyObservers(g)),this.allowShaderHotSwapping&&l&&!u.isReady()){if(u=l,f.markAsUnprocessed(),x=this.isFrozen,G)return f._areLightsDisposed=!0,!1}else L.resetCachedMaterial(),A.setEffect(u,f,this._materialContext)}return!(!A.effect||!A.effect.isReady())&&(f._renderId=L.getRenderId(),B._wasPreviouslyReady=!x,B._wasPreviouslyUsingInstances=G,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const K=this._uniformBuffer;K.addUniform("diffuseLeftColor",4),K.addUniform("diffuseRightColor",4),K.addUniform("opacityParts",4),K.addUniform("reflectionLeftColor",4),K.addUniform("reflectionRightColor",4),K.addUniform("refractionLeftColor",4),K.addUniform("refractionRightColor",4),K.addUniform("emissiveLeftColor",4),K.addUniform("emissiveRightColor",4),K.addUniform("vDiffuseInfos",2),K.addUniform("vAmbientInfos",2),K.addUniform("vOpacityInfos",2),K.addUniform("vReflectionInfos",2),K.addUniform("vReflectionPosition",3),K.addUniform("vReflectionSize",3),K.addUniform("vEmissiveInfos",2),K.addUniform("vLightmapInfos",2),K.addUniform("vSpecularInfos",2),K.addUniform("vBumpInfos",3),K.addUniform("diffuseMatrix",16),K.addUniform("ambientMatrix",16),K.addUniform("opacityMatrix",16),K.addUniform("reflectionMatrix",16),K.addUniform("emissiveMatrix",16),K.addUniform("lightmapMatrix",16),K.addUniform("specularMatrix",16),K.addUniform("bumpMatrix",16),K.addUniform("vTangentSpaceParams",2),K.addUniform("pointSize",1),K.addUniform("alphaCutOff",1),K.addUniform("refractionMatrix",16),K.addUniform("vRefractionInfos",4),K.addUniform("vRefractionPosition",3),K.addUniform("vRefractionSize",3),K.addUniform("vSpecularColor",4),K.addUniform("vEmissiveColor",3),K.addUniform("vDiffuseColor",4),K.addUniform("vAmbientColor",3),K.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(K,A,T){const G=this.SK(),B=T.materialDefines;if(!B)return;const L=T.effect;if(!L)return;this._activeEffect=L,A.getMeshUniformBuffer().bindToEffect(L,"Mesh"),A.transferToEffect(K),this._uniformBuffer.bindToEffect(L,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,G,A,K,this.isFrozen),z.c.Bind(G.getEngine().currentRenderPassId,this._activeEffect,A,K,this);const C=G.activeCamera;C?this._uniformBuffer.updateFloat4("cameraInfo",C.If,C.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=T,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),B.OBJECTSPACE_NORMALMAP&&(K.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const Q=this._mustRebind(G,L,T,A.visibility);(0,mK.e)(A,L);const Y=this._uniformBuffer;if(Q){if(this.bindViewProjection(L),!Y.useUbo||!this.isFrozen||!Y.isSync||T._drawWrapper._forceRebindOnNextCall){if(l.FresnelEnabled&&B.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(Y.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),Y.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&Y.updateColor4("opacityParts",new O.DA(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(Y.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),Y.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(Y.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),Y.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(Y.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),Y.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),G.texturesEnabled){if(this._diffuseTexture&&l.DiffuseTextureEnabled&&(Y.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,mK.t)(this._diffuseTexture,Y,"diffuse")),this._ambientTexture&&l.AmbientTextureEnabled&&(Y.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,mK.t)(this._ambientTexture,Y,"ambient")),this._opacityTexture&&l.OpacityTextureEnabled&&(Y.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,mK.t)(this._opacityTexture,Y,"opacity")),this._hasAlphaChannel()&&Y.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&l.ReflectionTextureEnabled){if(Y.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),Y.Xf("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const K=this._reflectionTexture;Y.updateVector3("vReflectionPosition",K.boundingBoxPosition),Y.updateVector3("vReflectionSize",K.boundingBoxSize)}}else Y.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&l.EmissiveTextureEnabled&&(Y.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,mK.t)(this._emissiveTexture,Y,"emissive")),this._lightmapTexture&&l.LightmapTextureEnabled&&(Y.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,mK.t)(this._lightmapTexture,Y,"lightmap")),this._specularTexture&&l.SpecularTextureEnabled&&(Y.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,mK.t)(this._specularTexture,Y,"specular")),this._bumpTexture&&G.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&(Y.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,mK.t)(this._bumpTexture,Y,"bump"),G._mirroredCameraPosition?Y.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):Y.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&l.RefractionTextureEnabled){let K=1;if(this._refractionTexture.isCube||(Y.Xf("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(K=this._refractionTexture.depth)),Y.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,K,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const K=this._refractionTexture;Y.updateVector3("vRefractionPosition",K.boundingBoxPosition),Y.updateVector3("vRefractionSize",K.boundingBoxSize)}}}this.pointsCloud&&Y.updateFloat("pointSize",this.pointSize),Y.updateColor4("vSpecularColor",this.specularColor,this.specularPower),Y.updateColor3("vEmissiveColor",l.EmissiveTextureEnabled?this.emissiveColor:O.DA.BlackReadOnly),Y.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),G.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),Y.updateColor3("vAmbientColor",this._globalAmbientColor)}G.texturesEnabled&&(this._diffuseTexture&&l.DiffuseTextureEnabled&&L.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&l.AmbientTextureEnabled&&L.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&l.OpacityTextureEnabled&&L.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&l.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?L.setTexture("reflectionCubeSampler",this._reflectionTexture):L.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&l.EmissiveTextureEnabled&&L.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&l.LightmapTextureEnabled&&L.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&l.SpecularTextureEnabled&&L.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&G.getEngine().getCaps().standardDerivatives&&l.BumpTextureEnabled&&L.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&l.RefractionTextureEnabled&&(this._refractionTexture.isCube?L.setTexture("refractionCubeSampler",this._refractionTexture):L.setTexture("refraction2DSampler",this._refractionTexture))),this.SK().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(A)&&this.SK().depthPeelingRenderer.bind(L),this._eventInfo.subMesh=T,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,D.g)(L,this,G),this.bindEyePosition(L)}else G.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(Q||!this.isFrozen){var Z;if(G.lightsEnabled&&!this._disableLighting&&(0,mK.j)(G,A,L,B,this._maxSimultaneousLights),(G.fogEnabled&&A.applyFog&&G.fogMode!==f.c.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||A.receiveShadows||B.PREPASS)&&this.bindView(L),(0,mK.h)(G,A,L),B.NUM_MORPH_INFLUENCERS&&(0,mK.o)(A,L),B.BAKED_VERTEX_ANIMATION_TEXTURE)null===(Z=A.bakedVertexAnimationManager)||void 0===Z||Z.bind(L,B.INSTANCES);this.useLogarithmicDepth&&(0,mK.k)(B,L,G),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(A,this._activeEffect,T),Y.update()}getAnimatables(){const K=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&K.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&K.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&K.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&K.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&K.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&K.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&K.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&K.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&K.push(this._refractionTexture),K}getActiveTextures(){const K=super.getActiveTextures();return this._diffuseTexture&&K.push(this._diffuseTexture),this._ambientTexture&&K.push(this._ambientTexture),this._opacityTexture&&K.push(this._opacityTexture),this._reflectionTexture&&K.push(this._reflectionTexture),this._emissiveTexture&&K.push(this._emissiveTexture),this._specularTexture&&K.push(this._specularTexture),this._bumpTexture&&K.push(this._bumpTexture),this._lightmapTexture&&K.push(this._lightmapTexture),this._refractionTexture&&K.push(this._refractionTexture),K}hasTexture(K){return!!super.hasTexture(K)||(this._diffuseTexture===K||(this._ambientTexture===K||(this._opacityTexture===K||(this._reflectionTexture===K||(this._emissiveTexture===K||(this._specularTexture===K||(this._bumpTexture===K||(this._lightmapTexture===K||this._refractionTexture===K))))))))}dispose(K,A){var T,G,B,L,f,O,C,Q,Y;A&&(null===(T=this._diffuseTexture)||void 0===T||T.dispose(),null===(G=this._ambientTexture)||void 0===G||G.dispose(),null===(B=this._opacityTexture)||void 0===B||B.dispose(),null===(L=this._reflectionTexture)||void 0===L||L.dispose(),null===(f=this._emissiveTexture)||void 0===f||f.dispose(),null===(O=this._specularTexture)||void 0===O||O.dispose(),null===(C=this._bumpTexture)||void 0===C||C.dispose(),null===(Q=this._lightmapTexture)||void 0===Q||Q.dispose(),null===(Y=this._refractionTexture)||void 0===Y||Y.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(K,A)}clone(K){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const G=U.c.Clone((()=>new l(K,this.SK())),this,{cloneTexturesOnlyOnce:A});return G.name=K,G.id=K,this.df.copyTo(G.df),this._clonePlugins(G,T),G}static Parse(K,A,T){const G=U.c.Parse((()=>new l(K.name,A)),K,A,T);return K.df&&G.df.parse(K.df,A,T),Z.e._ParsePlugins(K,G,A,T),G}static get DiffuseTextureEnabled(){return F.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(K){F.e.DiffuseTextureEnabled=K}static get DetailTextureEnabled(){return F.e.DetailTextureEnabled}static set DetailTextureEnabled(K){F.e.DetailTextureEnabled=K}static get AmbientTextureEnabled(){return F.e.AmbientTextureEnabled}static set AmbientTextureEnabled(K){F.e.AmbientTextureEnabled=K}static get OpacityTextureEnabled(){return F.e.OpacityTextureEnabled}static set OpacityTextureEnabled(K){F.e.OpacityTextureEnabled=K}static get ReflectionTextureEnabled(){return F.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(K){F.e.ReflectionTextureEnabled=K}static get EmissiveTextureEnabled(){return F.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(K){F.e.EmissiveTextureEnabled=K}static get SpecularTextureEnabled(){return F.e.SpecularTextureEnabled}static set SpecularTextureEnabled(K){F.e.SpecularTextureEnabled=K}static get BumpTextureEnabled(){return F.e.BumpTextureEnabled}static set BumpTextureEnabled(K){F.e.BumpTextureEnabled=K}static get LightmapTextureEnabled(){return F.e.LightmapTextureEnabled}static set LightmapTextureEnabled(K){F.e.LightmapTextureEnabled=K}static get RefractionTextureEnabled(){return F.e.RefractionTextureEnabled}static set RefractionTextureEnabled(K){F.e.RefractionTextureEnabled=K}static get ColorGradingTextureEnabled(){return F.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(K){F.e.ColorGradingTextureEnabled=K}static get FresnelEnabled(){return F.e.FresnelEnabled}static set FresnelEnabled(K){F.e.FresnelEnabled=K}}l.ForceGLSL=!1,(0,G.c)([(0,B.v)("diffuseTexture")],l.prototype,"_diffuseTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"diffuseTexture",void 0),(0,G.c)([(0,B.v)("ambientTexture")],l.prototype,"_ambientTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"ambientTexture",void 0),(0,G.c)([(0,B.v)("opacityTexture")],l.prototype,"_opacityTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"opacityTexture",void 0),(0,G.c)([(0,B.v)("reflectionTexture")],l.prototype,"_reflectionTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"reflectionTexture",void 0),(0,G.c)([(0,B.v)("emissiveTexture")],l.prototype,"_emissiveTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"emissiveTexture",void 0),(0,G.c)([(0,B.v)("specularTexture")],l.prototype,"_specularTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"specularTexture",void 0),(0,G.c)([(0,B.v)("bumpTexture")],l.prototype,"_bumpTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"bumpTexture",void 0),(0,G.c)([(0,B.v)("lightmapTexture")],l.prototype,"_lightmapTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"lightmapTexture",void 0),(0,G.c)([(0,B.v)("refractionTexture")],l.prototype,"_refractionTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"refractionTexture",void 0),(0,G.c)([(0,B.j)("ambient")],l.prototype,"ambientColor",void 0),(0,G.c)([(0,B.j)("diffuse")],l.prototype,"diffuseColor",void 0),(0,G.c)([(0,B.j)("specular")],l.prototype,"specularColor",void 0),(0,G.c)([(0,B.j)("emissive")],l.prototype,"emissiveColor",void 0),(0,G.c)([(0,B.B)()],l.prototype,"specularPower",void 0),(0,G.c)([(0,B.B)("useAlphaFromDiffuseTexture")],l.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesAndMiscDirty")],l.prototype,"useAlphaFromDiffuseTexture",void 0),(0,G.c)([(0,B.B)("useEmissiveAsIllumination")],l.prototype,"_useEmissiveAsIllumination",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useEmissiveAsIllumination",void 0),(0,G.c)([(0,B.B)("linkEmissiveWithDiffuse")],l.prototype,"_linkEmissiveWithDiffuse",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"linkEmissiveWithDiffuse",void 0),(0,G.c)([(0,B.B)("useSpecularOverAlpha")],l.prototype,"_useSpecularOverAlpha",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useSpecularOverAlpha",void 0),(0,G.c)([(0,B.B)("useReflectionOverAlpha")],l.prototype,"_useReflectionOverAlpha",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useReflectionOverAlpha",void 0),(0,G.c)([(0,B.B)("disableLighting")],l.prototype,"_disableLighting",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsLightsDirty")],l.prototype,"disableLighting",void 0),(0,G.c)([(0,B.B)("useObjectSpaceNormalMap")],l.prototype,"_useObjectSpaceNormalMap",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useObjectSpaceNormalMap",void 0),(0,G.c)([(0,B.B)("useParallax")],l.prototype,"_useParallax",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallax",void 0),(0,G.c)([(0,B.B)("useParallaxOcclusion")],l.prototype,"_useParallaxOcclusion",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useParallaxOcclusion",void 0),(0,G.c)([(0,B.B)()],l.prototype,"parallaxScaleBias",void 0),(0,G.c)([(0,B.B)("roughness")],l.prototype,"_roughness",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"roughness",void 0),(0,G.c)([(0,B.B)()],l.prototype,"indexOfRefraction",void 0),(0,G.c)([(0,B.B)()],l.prototype,"invertRefractionY",void 0),(0,G.c)([(0,B.B)()],l.prototype,"alphaCutOff",void 0),(0,G.c)([(0,B.B)("useLightmapAsShadowmap")],l.prototype,"_useLightmapAsShadowmap",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useLightmapAsShadowmap",void 0),(0,G.c)([(0,B.l)("diffuseFresnelParameters")],l.prototype,"_diffuseFresnelParameters",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"diffuseFresnelParameters",void 0),(0,G.c)([(0,B.l)("opacityFresnelParameters")],l.prototype,"_opacityFresnelParameters",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelAndMiscDirty")],l.prototype,"opacityFresnelParameters",void 0),(0,G.c)([(0,B.l)("reflectionFresnelParameters")],l.prototype,"_reflectionFresnelParameters",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"reflectionFresnelParameters",void 0),(0,G.c)([(0,B.l)("refractionFresnelParameters")],l.prototype,"_refractionFresnelParameters",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"refractionFresnelParameters",void 0),(0,G.c)([(0,B.l)("emissiveFresnelParameters")],l.prototype,"_emissiveFresnelParameters",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"emissiveFresnelParameters",void 0),(0,G.c)([(0,B.B)("useReflectionFresnelFromSpecular")],l.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsFresnelDirty")],l.prototype,"useReflectionFresnelFromSpecular",void 0),(0,G.c)([(0,B.B)("useGlossinessFromSpecularMapAlpha")],l.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,G.c)([(0,B.B)("maxSimultaneousLights")],l.prototype,"_maxSimultaneousLights",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsLightsDirty")],l.prototype,"maxSimultaneousLights",void 0),(0,G.c)([(0,B.B)("invertNormalMapX")],l.prototype,"_invertNormalMapX",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapX",void 0),(0,G.c)([(0,B.B)("invertNormalMapY")],l.prototype,"_invertNormalMapY",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"invertNormalMapY",void 0),(0,G.c)([(0,B.B)("twoSidedLighting")],l.prototype,"_twoSidedLighting",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsTexturesDirty")],l.prototype,"twoSidedLighting",void 0),(0,G.c)([(0,B.B)("applyDecalMapAfterDetailMap")],l.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,G.c)([(0,B.b)("_markAllSubMeshesAsMiscDirty")],l.prototype,"applyDecalMapAfterDetailMap",void 0),(0,P.c)("BABYLON.StandardMaterial",l),f.c.DefaultMaterialFactory=K=>new l("default material",K)}}]);