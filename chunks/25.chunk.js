"use strict";(self["686i8587bmi"]=self["686i8587bmi"]||[]).push([[25],{13167:(h,d,T)=>{T.d(d,{d:()=>S});var Y=T(12750),y=T(13089),C=T(12757),n=T(13163),X=T(13155),F=T(13175),U=T(13124);class Z extends X.e{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class S extends F.e{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(h){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(h,"DetailMap",140,new Z,d),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=y.d.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=h._dirtyCallbacks[1]}isReadyForSubMesh(h,d,T){return!this._isEnabled||!(h._areTexturesDirty&&d.texturesEnabled&&T.getCaps().standardDerivatives&&this._texture&&n.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(h,d){if(this._isEnabled){h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const T=d.getEngine();h._areTexturesDirty&&(T.getCaps().standardDerivatives&&this._texture&&n.e.DetailTextureEnabled&&this._isEnabled?((0,U.P)(this._texture,h,"DETAIL"),h.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):h.DETAIL=!1)}else h.DETAIL=!1}bindForSubMesh(h,d){if(!this._isEnabled)return;const T=this._material.isFrozen;h.useUbo&&T&&h.isSync||this._texture&&n.e.DetailTextureEnabled&&(h.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,U.n)(this._texture,h,"detail")),d.texturesEnabled&&this._texture&&n.e.DetailTextureEnabled&&h.setTexture("detailSampler",this._texture)}hasTexture(h){return this._texture===h}getActiveTextures(h){this._texture&&h.push(this._texture)}getAnimatables(h){this._texture&&this._texture.animations&&this._texture.animations.length>0&&h.push(this._texture)}dispose(h){var d;h&&(null===(d=this._texture)||void 0===d||d.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(h){h.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,Y.c)([(0,C.z)("detailTexture"),(0,C.c)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"texture",void 0),(0,Y.c)([(0,C.E)()],S.prototype,"diffuseBlendLevel",void 0),(0,Y.c)([(0,C.E)()],S.prototype,"roughnessBlendLevel",void 0),(0,Y.c)([(0,C.E)()],S.prototype,"bumpLevel",void 0),(0,Y.c)([(0,C.E)(),(0,C.c)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"normalBlendMethod",void 0),(0,Y.c)([(0,C.E)(),(0,C.c)("_markAllSubMeshesAsTexturesDirty")],S.prototype,"isEnabled",void 0)},13155:(h,d,T)=>{T.d(d,{e:()=>Y});class Y{constructor(h){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=h,h)for(const d in h)Object.prototype.hasOwnProperty.call(h,d)&&this._setDefaultValue(d)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let h=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||h,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const h of Object.keys(this))"_"!==h[0]&&this._keys.push(h);if(this._externalProperties)for(const h in this._externalProperties)-1===this._keys.indexOf(h)&&this._keys.push(h)}isEqual(h){if(this._keys.length!==h._keys.length)return!1;for(let d=0;d<this._keys.length;d++){const T=this._keys[d];if(this[T]!==h[T])return!1}return!0}cloneTo(h){this._keys.length!==h._keys.length&&(h._keys=this._keys.slice(0));for(let d=0;d<this._keys.length;d++){const T=this._keys[d];h[T]=this[T]}}reset(){for(const h of this._keys)this._setDefaultValue(h)}_setDefaultValue(h){var d,T,Y,y;const C=(null===(d=this._externalProperties)||void 0===d||null===(T=d[h])||void 0===T?void 0:T.type)??typeof this[h],n=null===(Y=this._externalProperties)||void 0===Y||null===(y=Y[h])||void 0===y?void 0:y.default;switch(C){case"number":this[h]=n??0;break;case"string":this[h]=n??"";break;default:this[h]=n??!1}}toString(){let h="";for(let d=0;d<this._keys.length;d++){const T=this._keys[d],Y=this[T];switch(typeof Y){case"number":case"string":h+="#define "+T+" "+Y+"\n";break;default:Y&&(h+="#define "+T+"\n")}}return h}}},13163:(h,d,T)=>{T.d(d,{e:()=>y});var Y=T(12656);class y{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){this._DiffuseTextureEnabled!==h&&(this._DiffuseTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(h){this._BaseWeightTextureEnabled!==h&&(this._BaseWeightTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(h){this._BaseDiffuseRoughnessTextureEnabled!==h&&(this._BaseDiffuseRoughnessTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(h){this._DetailTextureEnabled!==h&&(this._DetailTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(h){this._DecalMapEnabled!==h&&(this._DecalMapEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(h){this._AmbientTextureEnabled!==h&&(this._AmbientTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(h){this._OpacityTextureEnabled!==h&&(this._OpacityTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){this._ReflectionTextureEnabled!==h&&(this._ReflectionTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){this._EmissiveTextureEnabled!==h&&(this._EmissiveTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(h){this._SpecularTextureEnabled!==h&&(this._SpecularTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(h){this._BumpTextureEnabled!==h&&(this._BumpTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(h){this._LightmapTextureEnabled!==h&&(this._LightmapTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(h){this._RefractionTextureEnabled!==h&&(this._RefractionTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){this._ColorGradingTextureEnabled!==h&&(this._ColorGradingTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(h){this._FresnelEnabled!==h&&(this._FresnelEnabled=h,Y.c.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(h){this._ClearCoatTextureEnabled!==h&&(this._ClearCoatTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(h){this._ClearCoatBumpTextureEnabled!==h&&(this._ClearCoatBumpTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(h){this._ClearCoatTintTextureEnabled!==h&&(this._ClearCoatTintTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(h){this._SheenTextureEnabled!==h&&(this._SheenTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(h){this._AnisotropicTextureEnabled!==h&&(this._AnisotropicTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(h){this._ThicknessTextureEnabled!==h&&(this._ThicknessTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(h){this._RefractionIntensityTextureEnabled!==h&&(this._RefractionIntensityTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(h){this._TranslucencyIntensityTextureEnabled!==h&&(this._TranslucencyIntensityTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(h){this._TranslucencyColorTextureEnabled!==h&&(this._TranslucencyColorTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(h){this._IridescenceTextureEnabled!==h&&(this._IridescenceTextureEnabled=h,Y.c.MarkAllMaterialsAsDirty(1))}}y._DiffuseTextureEnabled=!0,y._BaseWeightTextureEnabled=!0,y._BaseDiffuseRoughnessTextureEnabled=!0,y._DetailTextureEnabled=!0,y._DecalMapEnabled=!0,y._AmbientTextureEnabled=!0,y._OpacityTextureEnabled=!0,y._ReflectionTextureEnabled=!0,y._EmissiveTextureEnabled=!0,y._SpecularTextureEnabled=!0,y._BumpTextureEnabled=!0,y._LightmapTextureEnabled=!0,y._RefractionTextureEnabled=!0,y._ColorGradingTextureEnabled=!0,y._FresnelEnabled=!0,y._ClearCoatTextureEnabled=!0,y._ClearCoatBumpTextureEnabled=!0,y._ClearCoatTintTextureEnabled=!0,y._SheenTextureEnabled=!0,y._AnisotropicTextureEnabled=!0,y._ThicknessTextureEnabled=!0,y._RefractionIntensityTextureEnabled=!0,y._TranslucencyIntensityTextureEnabled=!0,y._TranslucencyColorTextureEnabled=!0,y._IridescenceTextureEnabled=!0},13180:(h,d,T)=>{T.d(d,{b:()=>C});var Y,y=T(12765);!function(h){h[h.Zero=0]="Zero",h[h.One=1]="One",h[h.MaxViewZ=2]="MaxViewZ"}(Y||(Y={}));class C{static CreateConfiguration(h){return C._Configurations[h]={defines:{},previousWorldMatrices:{},previousViewProjection:y.Matrix.Zero(),currentViewProjection:y.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},C._Configurations[h]}static DeleteConfiguration(h){delete C._Configurations[h]}static GetConfiguration(h){return C._Configurations[h]}static AddUniformsAndSamplers(h,d){h.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(h,d){for(const T of d)if(T.ld)for(const d of T.ld)d._removeDrawWrapper(h)}static PrepareDefines(h,d,T){if(!T._arePrePassDirty)return;const Y=C._Configurations[h];if(!Y)return;T.PREPASS=!0,T.PREPASS_COLOR=!1,T.PREPASS_COLOR_INDEX=-1;let y=0;for(let n=0;n<C.GeometryTextureDescriptions.length;n++){const h=C.GeometryTextureDescriptions[n],d=h.define,X=h.defineIndex,F=Y.defines[X];void 0!==F?(T[d]=!0,T[X]=F,y++):(T[d]=!1,delete T[X])}T.SCENE_MRT_COUNT=y,T.BONES_VELOCITY_ENABLED=d.useBones&&d.computeBonesUsingShaders&&d.skeleton&&!d.skeleton.isUsingTextureForMatrices&&-1===Y.excludedSkinnedMesh.indexOf(d)}static Bind(h,d,T,Y,y){const n=C._Configurations[h];if(!n)return;const X=T.Eh(),F=X.getEngine();if(n.reverseCulling&&F.setStateCullFaceType(X._mirroredCameraPosition?y.cullBackFaces:!y.cullBackFaces),(void 0!==n.defines.PREPASS_VELOCITY_INDEX||void 0!==n.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(n.previousWorldMatrices[T.uniqueId]||(n.previousWorldMatrices[T.uniqueId]=Y.clone()),n.previousViewProjection||(n.previousViewProjection=X.getTransformMatrix().clone(),n.currentViewProjection=X.getTransformMatrix().clone()),n.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(n.lastUpdateFrameId=F.frameId,n.previousViewProjection.C(n.currentViewProjection),n.currentViewProjection.C(X.getTransformMatrix())):n.lastUpdateFrameId!==F.frameId&&(n.lastUpdateFrameId=F.frameId,n.previousViewProjection.C(n.currentViewProjection)),d.setMatrix("previousWorld",n.previousWorldMatrices[T.uniqueId]),d.setMatrix("previousViewProjection",n.previousViewProjection),n.previousWorldMatrices[T.uniqueId]=Y.clone(),T.useBones&&T.computeBonesUsingShaders&&T.skeleton)){const h=T.skeleton;if(!h.isUsingTextureForMatrices||-1===d.getUniformIndex("boneTextureWidth")){const Y=h.getTransformMatrices(T);Y&&(n.previousBones[T.uniqueId]||(n.previousBones[T.uniqueId]=Y.slice()),d.setMatrices("mPreviousBones",n.previousBones[T.uniqueId]),n.previousBones[T.uniqueId].set(Y))}}}}C.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],C._Configurations={}},13175:(h,d,T)=>{T.d(d,{e:()=>W});var Y=T(12750),y=T(12757),C=T(13089),n=T(12625),X=T(12641),F=T(12663);const U=new RegExp("^([gimus]+)!");class Z{constructor(h){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=h,this._scene=h.Eh(),this._engine=this._scene.getEngine()}_addPlugin(h){for(let Y=0;Y<this._plugins.length;++Y)if(this._plugins[Y].name===h.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!h.isCompatible(this._material.shaderLanguage))throw`The plugin "${h.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const d=h.getClassName();Z._MaterialPluginClassToMainDefine[d]||(Z._MaterialPluginClassToMainDefine[d]="MATERIALPLUGIN_"+ ++Z._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(h,d)=>this._handlePluginEvent(h,d),this._plugins.push(h),this._plugins.sort(((h,d)=>h.priority-d.priority)),this._codeInjectionPoints={};const T={};T[Z._MaterialPluginClassToMainDefine[d]]={type:"boolean",default:!0};for(const Y of this._plugins)Y.collectDefines(T),this._collectPointNames("vertex",Y.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",Y.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=T,!0}_activatePlugin(h){-1===this._activePlugins.indexOf(h)&&(this._activePlugins.push(h),this._activePlugins.sort(((h,d)=>h.priority-d.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),h.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(h),this._activePluginsForExtraEvents.sort(((h,d)=>h.priority-d.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(h){for(let d=0;d<this._plugins.length;++d)if(this._plugins[d].name===h)return this._plugins[d];return null}_handlePluginEventIsReadyForSubMesh(h){let d=!0;for(const T of this._activePlugins)d=d&&T.isReadyForSubMesh(h.defines,this._scene,this._engine,h.subMesh);h.isReadyForSubMesh=d}_handlePluginEventPrepareDefinesBeforeAttributes(h){for(const d of this._activePlugins)d.prepareDefinesBeforeAttributes(h.defines,this._scene,h.mesh)}_handlePluginEventPrepareDefines(h){for(const d of this._activePlugins)d.prepareDefines(h.defines,this._scene,h.mesh)}_handlePluginEventHardBindForSubMesh(h){for(const d of this._activePluginsForExtraEvents)d.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventBindForSubMesh(h){for(const d of this._activePlugins)d.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,h.subMesh)}_handlePluginEventHasRenderTargetTextures(h){let d=!1;for(const T of this._activePluginsForExtraEvents)if(d=T.hasRenderTargetTextures(),d)break;h.hasRenderTargetTextures=d}_handlePluginEventFillRenderTargetTextures(h){for(const d of this._activePluginsForExtraEvents)d.fillRenderTargetTextures(h.renderTargets)}_handlePluginEvent(h,d){switch(h){case 512:{const h=d;for(const d of this._activePlugins)d.getActiveTextures(h.activeTextures);break}case 256:{const h=d;for(const d of this._activePlugins)d.getAnimatables(h.animatables);break}case 1024:{const h=d;let T=!1;for(const d of this._activePlugins)if(T=d.hasTexture(h.texture),T)break;h.hasTexture=T;break}case 2:{const h=d;for(const d of this._plugins)d.dispose(h.forceDisposeTextures);break}case 4:d.defineNames=this._defineNamesFromPlugins;break;case 128:{const h=d;for(const d of this._activePlugins)h.fallbackRank=d.addFallbacks(h.defines,h.fallbacks,h.fallbackRank),d.getAttributes(h.attributes,this._scene,h.mesh);this._uniformList.length>0&&h.uniforms.push(...this._uniformList),this._samplerList.length>0&&h.samplers.push(...this._samplerList),this._uboList.length>0&&h.uniformBuffersNames.push(...this._uboList),h.customCode=this._injectCustomCode(h,h.customCode);break}case 8:{const h=d;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const T=1===this._material.shaderLanguage;for(const d of this._plugins){const Y=d.getUniforms(this._material.shaderLanguage);if(Y){if(Y.ubo)for(const d of Y.ubo){if(d.size&&d.type){const Y=d.arraySize??0;if(h.ubo.addUniform(d.name,d.size,Y),T){let h;switch(d.type){case"mat4":h="mat4x4f";break;case"float":h="f32";break;default:h=`${d.type}f`}this._uboDeclaration+=Y>0?`uniform ${d.name}: array<${h}, ${Y}>;\n`:`uniform ${d.name}: ${h};\n`}else this._uboDeclaration+=`${d.type} ${d.name}${Y>0?`[${Y}]`:""};\n`}this._uniformList.push(d.name)}Y.vertex&&(this._vertexDeclaration+=Y.vertex+"\n"),Y.fragment&&(this._fragmentDeclaration+=Y.fragment+"\n")}d.getSamplers(this._samplerList),d.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(h,d){if(d)for(const T in d)this._codeInjectionPoints[h]||(this._codeInjectionPoints[h]={}),this._codeInjectionPoints[h][T]=!0}_injectCustomCode(h,d){return(T,Y)=>{var y;d&&(Y=d(T,Y)),this._uboDeclaration&&(Y=Y.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(Y=Y.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(Y=Y.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const C=null===(y=this._codeInjectionPoints)||void 0===y?void 0:y[T];if(!C)return Y;let n=null;for(let d in C){let y="";for(const Y of this._activePlugins){var Z;let C=null===(Z=Y.getCustomCode(T,this._material.shaderLanguage))||void 0===Z?void 0:Z[d];if(C){if(Y.resolveIncludes){if(null===n){const d=0;n={defines:[],indexParameters:h.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:F.e.GetShadersRepository(d),includesShadersStore:F.e.GetIncludesShadersStore(d),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Dd:this._engine.Dd,processCodeAfterIncludes:void 0}}n.isFragment="fragment"===T,(0,X.j)(C,n,(h=>C=h))}y+=C+"\n"}}if(y.length>0)if("!"===d.charAt(0)){d=d.substring(1);let h="g";if("!"===d.charAt(0))h="",d=d.substring(1);else{const T=U.exec(d);T&&T.length>=2&&(h=T[1],d=d.substring(h.length+1))}h.indexOf("g")<0&&(h+="g");const T=Y,C=new RegExp(d,h);let n=C.exec(T);for(;null!==n;){let h=y;for(let d=0;d<n.length;++d)h=h.replace("$"+d,n[d]);Y=Y.replace(n[0],h),n=C.exec(T)}}else{const h="#define "+d;Y=Y.replace(h,"\n"+y+"\n"+h)}}return Y}}}Z._MaterialPluginClassToMainDefine={},Z._MaterialPluginCounter=0,n.d.OnEnginesDisposedObservable.add((()=>{O()}));const S=[];let r=!1,c=null;function O(){S.length=0,r=!1,C.d.OnEventObservable.remove(c),c=null}var f=T(12801),J=T(12714);class W{isCompatible(h){return 0===h}_enable(h){h&&this._pluginManager._activatePlugin(this)}constructor(h,d,T,Y){let y=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],C=arguments.length>5&&void 0!==arguments[5]&&arguments[5],n=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=h,this.name=d,this.priority=T,this.resolveIncludes=n,h.pluginManager||(h.pluginManager=new Z(h),h.zd.add((()=>{h.pluginManager=void 0}))),this._pluginDefineNames=Y,this._pluginManager=h.pluginManager,y&&this._pluginManager._addPlugin(this),C&&this._enable(!0),this.markAllDefinesAsDirty=h._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(h,d,T,Y){return!0}hardBindForSubMesh(h,d,T,Y){}bindForSubMesh(h,d,T,Y){}dispose(h){}getCustomCode(h){return null}collectDefines(h){if(this._pluginDefineNames)for(const d of Object.keys(this._pluginDefineNames)){if("_"===d[0])continue;const T=typeof this._pluginDefineNames[d];h[d]={type:"number"===T?"number":"string"===T?"string":"boolean"===T?"boolean":"object",default:this._pluginDefineNames[d]}}}prepareDefinesBeforeAttributes(h,d,T){}prepareDefines(h,d,T){}hasTexture(h){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(h){}getActiveTextures(h){}getAnimatables(h){}addFallbacks(h,d,T){return T}getSamplers(h){}getAttributes(h,d,T){}getUniformBuffersNames(h){}getUniforms(){return{}}copyTo(h){f.e.Clone((()=>h),this)}serialize(){return f.e.Serialize(this)}parse(h,d,T){f.e.Parse((()=>this),h,d,T)}}(0,Y.c)([(0,y.E)()],W.prototype,"name",void 0),(0,Y.c)([(0,y.E)()],W.prototype,"priority",void 0),(0,Y.c)([(0,y.E)()],W.prototype,"resolveIncludes",void 0),(0,Y.c)([(0,y.E)()],W.prototype,"registerForExtraEvents",void 0),(0,J.e)("BABYLON.MaterialPluginBase",W)},13149:(h,d,T)=>{T.d(d,{d:()=>Y});class Y{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(h){h.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(h){}bindForSubMesh(h,d,T,Y,y){if(d.prePassRenderer&&d.prePassRenderer.enabled&&d.prePassRenderer.currentRTisSceneRT&&(-1!==d.prePassRenderer.getIndex(2)||-1!==d.prePassRenderer.getIndex(11))){this.previousWorldMatrices[T.uniqueId]||(this.previousWorldMatrices[T.uniqueId]=Y.clone()),this.previousViewProjection||(this.previousViewProjection=d.getTransformMatrix().clone(),this.currentViewProjection=d.getTransformMatrix().clone());const y=d.getEngine();this.currentViewProjection.updateFlag!==d.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=y.frameId,this.previousViewProjection.C(this.currentViewProjection),this.currentViewProjection.C(d.getTransformMatrix())):this._lastUpdateFrameId!==y.frameId&&(this._lastUpdateFrameId=y.frameId,this.previousViewProjection.C(this.currentViewProjection)),h.setMatrix("previousWorld",this.previousWorldMatrices[T.uniqueId]),h.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[T.uniqueId]=Y.clone()}}}},13140:(h,d,T)=>{T.d(d,{jd:()=>z});var Y=T(12750),y=T(12757),C=T(12858),n=T(12990),X=T(12812),F=T(12835),U=T(13149),Z=T(12999),S=T(13089),r=T(13155),c=T(13084),O=T(12741),f=T(12714),J=T(13163),W=T(13081),L=T(13167),D=T(13132),V=T(13124),i=T(12801),w=T(13180);const s={effect:null,subMesh:null};class E extends r.e{constructor(h){super(h),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(h){const d=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const T of d)this[T]=T===h}}class z extends c.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(h){this._attachImageProcessingConfiguration(h),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(h){h!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=h||this.Eh().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(h){this.imageProcessingConfiguration.colorCurvesEnabled=h}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(h){this.imageProcessingConfiguration.colorGradingEnabled=h}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(h){this._imageProcessingConfiguration.toneMappingEnabled=h}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(h){this._imageProcessingConfiguration.exposure=h}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(h){this._imageProcessingConfiguration.contrast=h}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(h){this._imageProcessingConfiguration.colorGradingTexture=h}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(h){this._imageProcessingConfiguration.colorCurves=h}get canRenderToMRT(){return!0}constructor(h,d){super(h,d,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||z.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new X.ed(0,0,0),this.diffuseColor=new X.ed(1,1,1),this.specularColor=new X.ed(1,1,1),this.emissiveColor=new X.ed(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new C.h(16),this._globalAmbientColor=new X.ed(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new L.d(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new U.d,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),z.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),z.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(z.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(z.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"jd"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===S.d.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.vd&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==S.d.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.vd||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(h,d){let Y=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const y=d._drawWrapper;if(y.effect&&this.isFrozen&&y._wasPreviouslyReady&&y._wasPreviouslyUsingInstances===Y)return!0;d.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),d.materialDefines=new E(this._eventInfo.defineNames));const C=this.Eh(),n=d.materialDefines;if(this._isReadyForSubMesh(d))return!0;const X=C.getEngine();n._needNormals=(0,V.L)(C,h,n,!0,this._maxSimultaneousLights,this._disableLighting),(0,V.T)(C,n);const S=this.needAlphaBlendingForMesh(h)&&this.Eh().useOrderIndependentTransparency;if((0,V.Y)(C,n,this.canRenderToMRT&&!S),(0,V.W)(C,n,S),w.b.PrepareDefines(X.currentRenderPassId,h,n),n._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,n._needUVs=!1;for(let h=1;h<=6;++h)n["MAINUV"+h]=!1;if(C.texturesEnabled){if(n.DIFFUSEDIRECTUV=0,n.BUMPDIRECTUV=0,n.AMBIENTDIRECTUV=0,n.OPACITYDIRECTUV=0,n.EMISSIVEDIRECTUV=0,n.SPECULARDIRECTUV=0,n.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&z.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._diffuseTexture,n,"DIFFUSE")}else n.DIFFUSE=!1;if(this._ambientTexture&&z.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._ambientTexture,n,"AMBIENT")}else n.AMBIENT=!1;if(this._opacityTexture&&z.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._opacityTexture,n,"OPACITY"),n.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else n.OPACITY=!1;if(this._reflectionTexture&&z.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(n._needNormals=!0,n.REFLECTION=!0,n.ROUGHNESS=this._roughness>0,n.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,n.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===O.c.INVCUBIC_MODE,n.REFLECTIONMAP_3D=this._reflectionTexture.isCube,n.REFLECTIONMAP_OPPOSITEZ=n.REFLECTIONMAP_3D&&this.Eh().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,n.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case O.c.EXPLICIT_MODE:n.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case O.c.PLANAR_MODE:n.setReflectionMode("REFLECTIONMAP_PLANAR");break;case O.c.PROJECTION_MODE:n.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case O.c.SKYBOX_MODE:n.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case O.c.SPHERICAL_MODE:n.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case O.c.EQUIRECTANGULAR_MODE:n.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case O.c.FIXED_EQUIRECTANGULAR_MODE:n.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case O.c.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:n.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case O.c.CUBIC_MODE:case O.c.INVCUBIC_MODE:default:n.setReflectionMode("REFLECTIONMAP_CUBIC")}n.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else n.REFLECTION=!1,n.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&z.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._emissiveTexture,n,"EMISSIVE")}else n.EMISSIVE=!1;if(this._lightmapTexture&&z.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._lightmapTexture,n,"LIGHTMAP"),n.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,n.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else n.LIGHTMAP=!1;if(this._specularTexture&&z.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,V.P)(this._specularTexture,n,"SPECULAR"),n.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else n.SPECULAR=!1;if(C.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&z.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,V.P)(this._bumpTexture,n,"BUMP"),n.PARALLAX=this._useParallax,n.PARALLAX_RHS=C.useRightHandedSystem,n.PARALLAXOCCLUSION=this._useParallaxOcclusion,n.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else n.BUMP=!1,n.PARALLAX=!1,n.PARALLAX_RHS=!1,n.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&z.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;n._needUVs=!0,n.REFRACTION=!0,n.REFRACTIONMAP_3D=this._refractionTexture.isCube,n.RGBDREFRACTION=this._refractionTexture.isRGBD,n.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else n.REFRACTION=!1;n.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else n.DIFFUSE=!1,n.AMBIENT=!1,n.OPACITY=!1,n.REFLECTION=!1,n.EMISSIVE=!1,n.LIGHTMAP=!1,n.BUMP=!1,n.REFRACTION=!1;n.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),n.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,n.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,n.SPECULAROVERALPHA=this._useSpecularOverAlpha,n.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,n.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,n.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(h)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=n,this._eventInfo.subMesh=d,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(n._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(n),n.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,n.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(n._areFresnelDirty&&(z.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(n.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,n.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,n.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,n.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,n.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,n.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,n._needNormals=!0,n.FRESNEL=!0):n.FRESNEL=!1),n.AREALIGHTUSED)for(let T=0;T<h.lightSources.length;T++)if(!h.lightSources[T]._isReady())return!1;(0,V.Q)(h,C,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(h),n,this._applyDecalMapAfterDetailMap),(0,V.K)(C,X,this,n,Y,null,d.getRenderingMesh().hasThinInstances),this._eventInfo.defines=n,this._eventInfo.mesh=h,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,V.G)(h,n,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let r=!1;if(n.isDirty){const Y=n._areLightsDisposed;n.markAsProcessed();const y=new W.b;n.REFLECTION&&y.addFallback(0,"REFLECTION"),n.SPECULAR&&y.addFallback(0,"SPECULAR"),n.BUMP&&y.addFallback(0,"BUMP"),n.PARALLAX&&y.addFallback(1,"PARALLAX"),n.PARALLAX_RHS&&y.addFallback(1,"PARALLAX_RHS"),n.PARALLAXOCCLUSION&&y.addFallback(0,"PARALLAXOCCLUSION"),n.SPECULAROVERALPHA&&y.addFallback(0,"SPECULAROVERALPHA"),n.FOG&&y.addFallback(1,"FOG"),n.POINTSIZE&&y.addFallback(0,"POINTSIZE"),n.LOGARITHMICDEPTH&&y.addFallback(0,"LOGARITHMICDEPTH"),(0,V.p)(n,y,this._maxSimultaneousLights),n.SPECULARTERM&&y.addFallback(0,"SPECULARTERM"),n.DIFFUSEFRESNEL&&y.addFallback(1,"DIFFUSEFRESNEL"),n.OPACITYFRESNEL&&y.addFallback(2,"OPACITYFRESNEL"),n.REFLECTIONFRESNEL&&y.addFallback(3,"REFLECTIONFRESNEL"),n.EMISSIVEFRESNEL&&y.addFallback(4,"EMISSIVEFRESNEL"),n.FRESNEL&&y.addFallback(4,"FRESNEL"),n.MULTIVIEW&&y.addFallback(0,"MULTIVIEW");const S=[F.g.PositionKind];n.NORMAL&&S.push(F.g.NormalKind),n.TANGENT&&S.push(F.g.TangentKind);for(let h=1;h<=6;++h)n["UV"+h]&&S.push(`uv${1===h?"":h}`);n.VERTEXCOLOR&&S.push(F.g.ColorKind),(0,V.t)(S,h,n,y),(0,V.w)(S,n),(0,V.A)(S,h,n),(0,V.s)(S,h,n);let c="default";const O=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],f=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],J=["Material","Scene","Mesh"],L={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:n.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=y,this._eventInfo.fallbackRank=0,this._eventInfo.defines=n,this._eventInfo.uniforms=O,this._eventInfo.attributes=S,this._eventInfo.samplers=f,this._eventInfo.uniformBuffersNames=J,this._eventInfo.customCode=void 0,this._eventInfo.mesh=h,this._eventInfo.indexParameters=L,this._callbackPluginEventGeneric(128,this._eventInfo),w.b.AddUniformsAndSamplers(O,f),U.d.AddUniforms(O),U.d.AddSamplers(f),Z.b&&(Z.b.PrepareUniforms(O,n),Z.b.PrepareSamplers(f,n)),(0,V.$)({uniformsNames:O,uniformBuffersNames:J,samplers:f,defines:n,maxSimultaneousLights:this._maxSimultaneousLights}),(0,D.d)(O);const i={};this.customShaderNameResolve&&(c=this.customShaderNameResolve(c,O,J,f,n,S,i));const E=n.toString(),z=d.effect;let x=C.getEngine().createEffect(c,{attributes:S,uniformsNames:O,uniformBuffersNames:J,samplers:f,defines:E,fallbacks:y,onCompiled:this.onCompiled,onError:this.onError,indexParameters:L,processFinalCode:i.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:n.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([T.e(41),T.e(64)]).then(T.bind(T,15342)),Promise.all([T.e(39),T.e(65)]).then(T.bind(T,15515))]):await Promise.all([Promise.all([T.e(34),T.e(67)]).then(T.bind(T,15603)),Promise.all([T.e(33),T.e(68)]).then(T.bind(T,15764))]),this._shadersLoaded=!0}},X);if(this._eventInfo.customCode=void 0,x)if(this._onEffectCreatedObservable&&(s.effect=x,s.subMesh=d,this._onEffectCreatedObservable.notifyObservers(s)),this.allowShaderHotSwapping&&z&&!x.isReady()){if(x=z,n.markAsUnprocessed(),r=this.isFrozen,Y)return n._areLightsDisposed=!0,!1}else C.resetCachedMaterial(),d.setEffect(x,n,this._materialContext)}return!(!d.effect||!d.effect.isReady())&&(n._renderId=C.getRenderId(),y._wasPreviouslyReady=!r,y._wasPreviouslyUsingInstances=Y,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const h=this._uniformBuffer;h.addUniform("diffuseLeftColor",4),h.addUniform("diffuseRightColor",4),h.addUniform("opacityParts",4),h.addUniform("reflectionLeftColor",4),h.addUniform("reflectionRightColor",4),h.addUniform("refractionLeftColor",4),h.addUniform("refractionRightColor",4),h.addUniform("emissiveLeftColor",4),h.addUniform("emissiveRightColor",4),h.addUniform("vDiffuseInfos",2),h.addUniform("vAmbientInfos",2),h.addUniform("vOpacityInfos",2),h.addUniform("vReflectionInfos",2),h.addUniform("vReflectionPosition",3),h.addUniform("vReflectionSize",3),h.addUniform("vEmissiveInfos",2),h.addUniform("vLightmapInfos",2),h.addUniform("vSpecularInfos",2),h.addUniform("vBumpInfos",3),h.addUniform("diffuseMatrix",16),h.addUniform("ambientMatrix",16),h.addUniform("opacityMatrix",16),h.addUniform("reflectionMatrix",16),h.addUniform("emissiveMatrix",16),h.addUniform("lightmapMatrix",16),h.addUniform("specularMatrix",16),h.addUniform("bumpMatrix",16),h.addUniform("vTangentSpaceParams",2),h.addUniform("pointSize",1),h.addUniform("alphaCutOff",1),h.addUniform("refractionMatrix",16),h.addUniform("vRefractionInfos",4),h.addUniform("vRefractionPosition",3),h.addUniform("vRefractionSize",3),h.addUniform("vSpecularColor",4),h.addUniform("vEmissiveColor",3),h.addUniform("vDiffuseColor",4),h.addUniform("vAmbientColor",3),h.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(h,d,T){const Y=this.Eh(),y=T.materialDefines;if(!y)return;const C=T.effect;if(!C)return;this._activeEffect=C,d.getMeshUniformBuffer().bindToEffect(C,"Mesh"),d.transferToEffect(h),this._uniformBuffer.bindToEffect(C,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,Y,d,h,this.isFrozen),w.b.Bind(Y.getEngine().currentRenderPassId,this._activeEffect,d,h,this);const F=Y.activeCamera;F?this._uniformBuffer.updateFloat4("cameraInfo",F.Gd,F.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=T,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),y.OBJECTSPACE_NORMALMAP&&(h.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const U=this._mustRebind(Y,C,T,d.visibility);(0,V.c)(d,C);const Z=this._uniformBuffer;if(U){if(this.bindViewProjection(C),!Z.useUbo||!this.isFrozen||!Z.isSync||T._drawWrapper._forceRebindOnNextCall){if(z.FresnelEnabled&&y.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(Z.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),Z.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&Z.updateColor4("opacityParts",new X.ed(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(Z.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),Z.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(Z.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),Z.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(Z.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),Z.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),Y.texturesEnabled){if(this._diffuseTexture&&z.DiffuseTextureEnabled&&(Z.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,V.n)(this._diffuseTexture,Z,"diffuse")),this._ambientTexture&&z.AmbientTextureEnabled&&(Z.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,V.n)(this._ambientTexture,Z,"ambient")),this._opacityTexture&&z.OpacityTextureEnabled&&(Z.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,V.n)(this._opacityTexture,Z,"opacity")),this._hasAlphaChannel()&&Z.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&z.ReflectionTextureEnabled){if(Z.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),Z.bd("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const h=this._reflectionTexture;Z.updateVector3("vReflectionPosition",h.boundingBoxPosition),Z.updateVector3("vReflectionSize",h.boundingBoxSize)}}else Z.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&z.EmissiveTextureEnabled&&(Z.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,V.n)(this._emissiveTexture,Z,"emissive")),this._lightmapTexture&&z.LightmapTextureEnabled&&(Z.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,V.n)(this._lightmapTexture,Z,"lightmap")),this._specularTexture&&z.SpecularTextureEnabled&&(Z.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,V.n)(this._specularTexture,Z,"specular")),this._bumpTexture&&Y.getEngine().getCaps().standardDerivatives&&z.BumpTextureEnabled&&(Z.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,V.n)(this._bumpTexture,Z,"bump"),Y._mirroredCameraPosition?Z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):Z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&z.RefractionTextureEnabled){let h=1;if(this._refractionTexture.isCube||(Z.bd("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(h=this._refractionTexture.depth)),Z.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,h,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const h=this._refractionTexture;Z.updateVector3("vRefractionPosition",h.boundingBoxPosition),Z.updateVector3("vRefractionSize",h.boundingBoxSize)}}}this.pointsCloud&&Z.updateFloat("pointSize",this.pointSize),Z.updateColor4("vSpecularColor",this.specularColor,this.specularPower),Z.updateColor3("vEmissiveColor",z.EmissiveTextureEnabled?this.emissiveColor:X.ed.BlackReadOnly),Z.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),Y.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),Z.updateColor3("vAmbientColor",this._globalAmbientColor)}Y.texturesEnabled&&(this._diffuseTexture&&z.DiffuseTextureEnabled&&C.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&z.AmbientTextureEnabled&&C.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&z.OpacityTextureEnabled&&C.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&z.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?C.setTexture("reflectionCubeSampler",this._reflectionTexture):C.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&z.EmissiveTextureEnabled&&C.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&z.LightmapTextureEnabled&&C.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&z.SpecularTextureEnabled&&C.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&Y.getEngine().getCaps().standardDerivatives&&z.BumpTextureEnabled&&C.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&z.RefractionTextureEnabled&&(this._refractionTexture.isCube?C.setTexture("refractionCubeSampler",this._refractionTexture):C.setTexture("refraction2DSampler",this._refractionTexture))),this.Eh().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(d)&&this.Eh().depthPeelingRenderer.bind(C),this._eventInfo.subMesh=T,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,D.e)(C,this,Y),this.bindEyePosition(C)}else Y.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(U||!this.isFrozen){var S;if(Y.lightsEnabled&&!this._disableLighting&&(0,V.f)(Y,d,C,y,this._maxSimultaneousLights),(Y.fogEnabled&&d.applyFog&&Y.fogMode!==n.d.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||d.receiveShadows||y.PREPASS)&&this.bindView(C),(0,V.e)(Y,d,C),y.NUM_MORPH_INFLUENCERS&&(0,V.k)(d,C),y.BAKED_VERTEX_ANIMATION_TEXTURE)null===(S=d.bakedVertexAnimationManager)||void 0===S||S.bind(C,y.INSTANCES);this.useLogarithmicDepth&&(0,V.i)(y,C,Y),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(d,this._activeEffect,T),Z.update()}getAnimatables(){const h=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&h.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&h.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&h.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&h.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&h.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&h.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&h.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&h.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&h.push(this._refractionTexture),h}getActiveTextures(){const h=super.getActiveTextures();return this._diffuseTexture&&h.push(this._diffuseTexture),this._ambientTexture&&h.push(this._ambientTexture),this._opacityTexture&&h.push(this._opacityTexture),this._reflectionTexture&&h.push(this._reflectionTexture),this._emissiveTexture&&h.push(this._emissiveTexture),this._specularTexture&&h.push(this._specularTexture),this._bumpTexture&&h.push(this._bumpTexture),this._lightmapTexture&&h.push(this._lightmapTexture),this._refractionTexture&&h.push(this._refractionTexture),h}hasTexture(h){return!!super.hasTexture(h)||(this._diffuseTexture===h||(this._ambientTexture===h||(this._opacityTexture===h||(this._reflectionTexture===h||(this._emissiveTexture===h||(this._specularTexture===h||(this._bumpTexture===h||(this._lightmapTexture===h||this._refractionTexture===h))))))))}dispose(h,d){var T,Y,y,C,n,X,F,U,Z;d&&(null===(T=this._diffuseTexture)||void 0===T||T.dispose(),null===(Y=this._ambientTexture)||void 0===Y||Y.dispose(),null===(y=this._opacityTexture)||void 0===y||y.dispose(),null===(C=this._reflectionTexture)||void 0===C||C.dispose(),null===(n=this._emissiveTexture)||void 0===n||n.dispose(),null===(X=this._specularTexture)||void 0===X||X.dispose(),null===(F=this._bumpTexture)||void 0===F||F.dispose(),null===(U=this._lightmapTexture)||void 0===U||U.dispose(),null===(Z=this._refractionTexture)||void 0===Z||Z.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(h,d)}clone(h){let d=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const Y=i.e.Clone((()=>new z(h,this.Eh())),this,{cloneTexturesOnlyOnce:d});return Y.name=h,Y.id=h,this.xd.copyTo(Y.xd),this._clonePlugins(Y,T),Y}static Parse(h,d,T){const Y=i.e.Parse((()=>new z(h.name,d)),h,d,T);return h.xd&&Y.xd.parse(h.xd,d,T),S.d._ParsePlugins(h,Y,d,T),Y}static get DiffuseTextureEnabled(){return J.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(h){J.e.DiffuseTextureEnabled=h}static get DetailTextureEnabled(){return J.e.DetailTextureEnabled}static set DetailTextureEnabled(h){J.e.DetailTextureEnabled=h}static get AmbientTextureEnabled(){return J.e.AmbientTextureEnabled}static set AmbientTextureEnabled(h){J.e.AmbientTextureEnabled=h}static get OpacityTextureEnabled(){return J.e.OpacityTextureEnabled}static set OpacityTextureEnabled(h){J.e.OpacityTextureEnabled=h}static get ReflectionTextureEnabled(){return J.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(h){J.e.ReflectionTextureEnabled=h}static get EmissiveTextureEnabled(){return J.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(h){J.e.EmissiveTextureEnabled=h}static get SpecularTextureEnabled(){return J.e.SpecularTextureEnabled}static set SpecularTextureEnabled(h){J.e.SpecularTextureEnabled=h}static get BumpTextureEnabled(){return J.e.BumpTextureEnabled}static set BumpTextureEnabled(h){J.e.BumpTextureEnabled=h}static get LightmapTextureEnabled(){return J.e.LightmapTextureEnabled}static set LightmapTextureEnabled(h){J.e.LightmapTextureEnabled=h}static get RefractionTextureEnabled(){return J.e.RefractionTextureEnabled}static set RefractionTextureEnabled(h){J.e.RefractionTextureEnabled=h}static get ColorGradingTextureEnabled(){return J.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(h){J.e.ColorGradingTextureEnabled=h}static get FresnelEnabled(){return J.e.FresnelEnabled}static set FresnelEnabled(h){J.e.FresnelEnabled=h}}z.ForceGLSL=!1,(0,Y.c)([(0,y.z)("diffuseTexture")],z.prototype,"_diffuseTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],z.prototype,"diffuseTexture",void 0),(0,Y.c)([(0,y.z)("ambientTexture")],z.prototype,"_ambientTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"ambientTexture",void 0),(0,Y.c)([(0,y.z)("opacityTexture")],z.prototype,"_opacityTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],z.prototype,"opacityTexture",void 0),(0,Y.c)([(0,y.z)("reflectionTexture")],z.prototype,"_reflectionTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"reflectionTexture",void 0),(0,Y.c)([(0,y.z)("emissiveTexture")],z.prototype,"_emissiveTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"emissiveTexture",void 0),(0,Y.c)([(0,y.z)("specularTexture")],z.prototype,"_specularTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"specularTexture",void 0),(0,Y.c)([(0,y.z)("bumpTexture")],z.prototype,"_bumpTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"bumpTexture",void 0),(0,Y.c)([(0,y.z)("lightmapTexture")],z.prototype,"_lightmapTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"lightmapTexture",void 0),(0,Y.c)([(0,y.z)("refractionTexture")],z.prototype,"_refractionTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"refractionTexture",void 0),(0,Y.c)([(0,y.l)("ambient")],z.prototype,"ambientColor",void 0),(0,Y.c)([(0,y.l)("diffuse")],z.prototype,"diffuseColor",void 0),(0,Y.c)([(0,y.l)("specular")],z.prototype,"specularColor",void 0),(0,Y.c)([(0,y.l)("emissive")],z.prototype,"emissiveColor",void 0),(0,Y.c)([(0,y.E)()],z.prototype,"specularPower",void 0),(0,Y.c)([(0,y.E)("useAlphaFromDiffuseTexture")],z.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],z.prototype,"useAlphaFromDiffuseTexture",void 0),(0,Y.c)([(0,y.E)("useEmissiveAsIllumination")],z.prototype,"_useEmissiveAsIllumination",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useEmissiveAsIllumination",void 0),(0,Y.c)([(0,y.E)("linkEmissiveWithDiffuse")],z.prototype,"_linkEmissiveWithDiffuse",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"linkEmissiveWithDiffuse",void 0),(0,Y.c)([(0,y.E)("useSpecularOverAlpha")],z.prototype,"_useSpecularOverAlpha",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useSpecularOverAlpha",void 0),(0,Y.c)([(0,y.E)("useReflectionOverAlpha")],z.prototype,"_useReflectionOverAlpha",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useReflectionOverAlpha",void 0),(0,Y.c)([(0,y.E)("disableLighting")],z.prototype,"_disableLighting",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsLightsDirty")],z.prototype,"disableLighting",void 0),(0,Y.c)([(0,y.E)("useObjectSpaceNormalMap")],z.prototype,"_useObjectSpaceNormalMap",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useObjectSpaceNormalMap",void 0),(0,Y.c)([(0,y.E)("useParallax")],z.prototype,"_useParallax",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useParallax",void 0),(0,Y.c)([(0,y.E)("useParallaxOcclusion")],z.prototype,"_useParallaxOcclusion",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useParallaxOcclusion",void 0),(0,Y.c)([(0,y.E)()],z.prototype,"parallaxScaleBias",void 0),(0,Y.c)([(0,y.E)("roughness")],z.prototype,"_roughness",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"roughness",void 0),(0,Y.c)([(0,y.E)()],z.prototype,"indexOfRefraction",void 0),(0,Y.c)([(0,y.E)()],z.prototype,"invertRefractionY",void 0),(0,Y.c)([(0,y.E)()],z.prototype,"alphaCutOff",void 0),(0,Y.c)([(0,y.E)("useLightmapAsShadowmap")],z.prototype,"_useLightmapAsShadowmap",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useLightmapAsShadowmap",void 0),(0,Y.c)([(0,y.p)("diffuseFresnelParameters")],z.prototype,"_diffuseFresnelParameters",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelDirty")],z.prototype,"diffuseFresnelParameters",void 0),(0,Y.c)([(0,y.p)("opacityFresnelParameters")],z.prototype,"_opacityFresnelParameters",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],z.prototype,"opacityFresnelParameters",void 0),(0,Y.c)([(0,y.p)("reflectionFresnelParameters")],z.prototype,"_reflectionFresnelParameters",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelDirty")],z.prototype,"reflectionFresnelParameters",void 0),(0,Y.c)([(0,y.p)("refractionFresnelParameters")],z.prototype,"_refractionFresnelParameters",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelDirty")],z.prototype,"refractionFresnelParameters",void 0),(0,Y.c)([(0,y.p)("emissiveFresnelParameters")],z.prototype,"_emissiveFresnelParameters",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelDirty")],z.prototype,"emissiveFresnelParameters",void 0),(0,Y.c)([(0,y.E)("useReflectionFresnelFromSpecular")],z.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsFresnelDirty")],z.prototype,"useReflectionFresnelFromSpecular",void 0),(0,Y.c)([(0,y.E)("useGlossinessFromSpecularMapAlpha")],z.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,Y.c)([(0,y.E)("maxSimultaneousLights")],z.prototype,"_maxSimultaneousLights",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsLightsDirty")],z.prototype,"maxSimultaneousLights",void 0),(0,Y.c)([(0,y.E)("invertNormalMapX")],z.prototype,"_invertNormalMapX",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"invertNormalMapX",void 0),(0,Y.c)([(0,y.E)("invertNormalMapY")],z.prototype,"_invertNormalMapY",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"invertNormalMapY",void 0),(0,Y.c)([(0,y.E)("twoSidedLighting")],z.prototype,"_twoSidedLighting",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsTexturesDirty")],z.prototype,"twoSidedLighting",void 0),(0,Y.c)([(0,y.E)("applyDecalMapAfterDetailMap")],z.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,Y.c)([(0,y.c)("_markAllSubMeshesAsMiscDirty")],z.prototype,"applyDecalMapAfterDetailMap",void 0),(0,f.e)("BABYLON.StandardMaterial",z),n.d.DefaultMaterialFactory=h=>new z("default material",h)}}]);