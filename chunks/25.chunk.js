"use strict";(self.vb3rpbgyozo=self.vb3rpbgyozo||[]).push([[25],{13146:(q,I,l)=>{l.d(I,{e:()=>r});var w=l(12735),t=l(13074),O=l(12740),c=l(13141),a=l(13139),F=l(13152),s=l(13109);class Z extends a.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class r extends F.b{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(q){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(q,"DetailMap",140,new Z,I),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=t.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=q._dirtyCallbacks[1]}isReadyForSubMesh(q,I,l){return!this._isEnabled||!(q._areTexturesDirty&&I.texturesEnabled&&l.getCaps().standardDerivatives&&this._texture&&c.d.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(q,I){if(this._isEnabled){q.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const l=I.getEngine();q._areTexturesDirty&&(l.getCaps().standardDerivatives&&this._texture&&c.d.DetailTextureEnabled&&this._isEnabled?((0,s.Y)(this._texture,q,"DETAIL"),q.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):q.DETAIL=!1)}else q.DETAIL=!1}bindForSubMesh(q,I){if(!this._isEnabled)return;const l=this._material.isFrozen;q.useUbo&&l&&q.isSync||this._texture&&c.d.DetailTextureEnabled&&(q.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,s.x)(this._texture,q,"detail")),I.texturesEnabled&&this._texture&&c.d.DetailTextureEnabled&&q.setTexture("detailSampler",this._texture)}hasTexture(q){return this._texture===q}getActiveTextures(q){this._texture&&q.push(this._texture)}getAnimatables(q){this._texture&&this._texture.animations&&this._texture.animations.length>0&&q.push(this._texture)}dispose(q){var I;q&&(null===(I=this._texture)||void 0===I||I.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(q){q.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,w.d)([(0,O.z)("detailTexture"),(0,O.d)("_markAllSubMeshesAsTexturesDirty")],r.prototype,"texture",void 0),(0,w.d)([(0,O.D)()],r.prototype,"diffuseBlendLevel",void 0),(0,w.d)([(0,O.D)()],r.prototype,"roughnessBlendLevel",void 0),(0,w.d)([(0,O.D)()],r.prototype,"bumpLevel",void 0),(0,w.d)([(0,O.D)(),(0,O.d)("_markAllSubMeshesAsTexturesDirty")],r.prototype,"normalBlendMethod",void 0),(0,w.d)([(0,O.D)(),(0,O.d)("_markAllSubMeshesAsTexturesDirty")],r.prototype,"isEnabled",void 0)},13139:(q,I,l)=>{l.d(I,{c:()=>w});class w{constructor(q){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=q,q)for(const I in q)Object.prototype.hasOwnProperty.call(q,I)&&this._setDefaultValue(I)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||q,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const q of Object.keys(this))"_"!==q[0]&&this._keys.push(q);if(this._externalProperties)for(const q in this._externalProperties)-1===this._keys.indexOf(q)&&this._keys.push(q)}isEqual(q){if(this._keys.length!==q._keys.length)return!1;for(let I=0;I<this._keys.length;I++){const l=this._keys[I];if(this[l]!==q[l])return!1}return!0}cloneTo(q){this._keys.length!==q._keys.length&&(q._keys=this._keys.slice(0));for(let I=0;I<this._keys.length;I++){const l=this._keys[I];q[l]=this[l]}}reset(){for(const q of this._keys)this._setDefaultValue(q)}_setDefaultValue(q){var I,l,w,t;const O=(null===(I=this._externalProperties)||void 0===I||null===(l=I[q])||void 0===l?void 0:l.type)??typeof this[q],c=null===(w=this._externalProperties)||void 0===w||null===(t=w[q])||void 0===t?void 0:t.default;switch(O){case"number":this[q]=c??0;break;case"string":this[q]=c??"";break;default:this[q]=c??!1}}toString(){let q="";for(let I=0;I<this._keys.length;I++){const l=this._keys[I],w=this[l];switch(typeof w){case"number":case"string":q+="#define "+l+" "+w+"\n";break;default:w&&(q+="#define "+l+"\n")}}return q}}},13141:(q,I,l)=>{l.d(I,{d:()=>t});var w=l(12656);class t{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(q){this._DiffuseTextureEnabled!==q&&(this._DiffuseTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(q){this._BaseWeightTextureEnabled!==q&&(this._BaseWeightTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(q){this._BaseDiffuseRoughnessTextureEnabled!==q&&(this._BaseDiffuseRoughnessTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(q){this._DetailTextureEnabled!==q&&(this._DetailTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(q){this._DecalMapEnabled!==q&&(this._DecalMapEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(q){this._AmbientTextureEnabled!==q&&(this._AmbientTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(q){this._OpacityTextureEnabled!==q&&(this._OpacityTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(q){this._ReflectionTextureEnabled!==q&&(this._ReflectionTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(q){this._EmissiveTextureEnabled!==q&&(this._EmissiveTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(q){this._SpecularTextureEnabled!==q&&(this._SpecularTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(q){this._BumpTextureEnabled!==q&&(this._BumpTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(q){this._LightmapTextureEnabled!==q&&(this._LightmapTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(q){this._RefractionTextureEnabled!==q&&(this._RefractionTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(q){this._ColorGradingTextureEnabled!==q&&(this._ColorGradingTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(q){this._FresnelEnabled!==q&&(this._FresnelEnabled=q,w.d.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(q){this._ClearCoatTextureEnabled!==q&&(this._ClearCoatTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(q){this._ClearCoatBumpTextureEnabled!==q&&(this._ClearCoatBumpTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(q){this._ClearCoatTintTextureEnabled!==q&&(this._ClearCoatTintTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(q){this._SheenTextureEnabled!==q&&(this._SheenTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(q){this._AnisotropicTextureEnabled!==q&&(this._AnisotropicTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(q){this._ThicknessTextureEnabled!==q&&(this._ThicknessTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(q){this._RefractionIntensityTextureEnabled!==q&&(this._RefractionIntensityTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(q){this._TranslucencyIntensityTextureEnabled!==q&&(this._TranslucencyIntensityTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(q){this._TranslucencyColorTextureEnabled!==q&&(this._TranslucencyColorTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(q){this._IridescenceTextureEnabled!==q&&(this._IridescenceTextureEnabled=q,w.d.MarkAllMaterialsAsDirty(1))}}t._DiffuseTextureEnabled=!0,t._BaseWeightTextureEnabled=!0,t._BaseDiffuseRoughnessTextureEnabled=!0,t._DetailTextureEnabled=!0,t._DecalMapEnabled=!0,t._AmbientTextureEnabled=!0,t._OpacityTextureEnabled=!0,t._ReflectionTextureEnabled=!0,t._EmissiveTextureEnabled=!0,t._SpecularTextureEnabled=!0,t._BumpTextureEnabled=!0,t._LightmapTextureEnabled=!0,t._RefractionTextureEnabled=!0,t._ColorGradingTextureEnabled=!0,t._FresnelEnabled=!0,t._ClearCoatTextureEnabled=!0,t._ClearCoatBumpTextureEnabled=!0,t._ClearCoatTintTextureEnabled=!0,t._SheenTextureEnabled=!0,t._AnisotropicTextureEnabled=!0,t._ThicknessTextureEnabled=!0,t._RefractionIntensityTextureEnabled=!0,t._TranslucencyIntensityTextureEnabled=!0,t._TranslucencyColorTextureEnabled=!0,t._IridescenceTextureEnabled=!0},13156:(q,I,l)=>{l.d(I,{b:()=>O});var w,t=l(12747);!function(q){q[q.Zero=0]="Zero",q[q.One=1]="One",q[q.MaxViewZ=2]="MaxViewZ"}(w||(w={}));class O{static CreateConfiguration(q){return O._Configurations[q]={defines:{},previousWorldMatrices:{},previousViewProjection:t.Matrix.Zero(),currentViewProjection:t.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},O._Configurations[q]}static DeleteConfiguration(q){delete O._Configurations[q]}static GetConfiguration(q){return O._Configurations[q]}static AddUniformsAndSamplers(q,I){q.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(q,I){for(const l of I)if(l.Tc)for(const I of l.Tc)I._removeDrawWrapper(q)}static PrepareDefines(q,I,l){if(!l._arePrePassDirty)return;const w=O._Configurations[q];if(!w)return;l.PREPASS=!0,l.PREPASS_COLOR=!1,l.PREPASS_COLOR_INDEX=-1;let t=0;for(let c=0;c<O.GeometryTextureDescriptions.length;c++){const q=O.GeometryTextureDescriptions[c],I=q.define,a=q.defineIndex,F=w.defines[a];void 0!==F?(l[I]=!0,l[a]=F,t++):(l[I]=!1,delete l[a])}l.SCENE_MRT_COUNT=t,l.BONES_VELOCITY_ENABLED=I.useBones&&I.computeBonesUsingShaders&&I.skeleton&&!I.skeleton.isUsingTextureForMatrices&&-1===w.excludedSkinnedMesh.indexOf(I)}static Bind(q,I,l,w,t){const c=O._Configurations[q];if(!c)return;const a=l.Wq(),F=a.getEngine();if(c.reverseCulling&&F.setStateCullFaceType(a._mirroredCameraPosition?t.cullBackFaces:!t.cullBackFaces),(void 0!==c.defines.PREPASS_VELOCITY_INDEX||void 0!==c.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(c.previousWorldMatrices[l.uniqueId]||(c.previousWorldMatrices[l.uniqueId]=w.clone()),c.previousViewProjection||(c.previousViewProjection=a.getTransformMatrix().clone(),c.currentViewProjection=a.getTransformMatrix().clone()),c.currentViewProjection.updateFlag!==a.getTransformMatrix().updateFlag?(c.lastUpdateFrameId=F.frameId,c.previousViewProjection.t(c.currentViewProjection),c.currentViewProjection.t(a.getTransformMatrix())):c.lastUpdateFrameId!==F.frameId&&(c.lastUpdateFrameId=F.frameId,c.previousViewProjection.t(c.currentViewProjection)),I.setMatrix("previousWorld",c.previousWorldMatrices[l.uniqueId]),I.setMatrix("previousViewProjection",c.previousViewProjection),c.previousWorldMatrices[l.uniqueId]=w.clone(),l.useBones&&l.computeBonesUsingShaders&&l.skeleton)){const q=l.skeleton;if(!q.isUsingTextureForMatrices||-1===I.getUniformIndex("boneTextureWidth")){const w=q.getTransformMatrices(l);w&&(c.previousBones[l.uniqueId]||(c.previousBones[l.uniqueId]=w.slice()),I.setMatrices("mPreviousBones",c.previousBones[l.uniqueId]),c.previousBones[l.uniqueId].set(w))}}}}O.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],O._Configurations={}},13152:(q,I,l)=>{l.d(I,{b:()=>U});var w=l(12735),t=l(12740),O=l(13074),c=l(12612),a=l(12634),F=l(12664);const s=new RegExp("^([gimus]+)!");class Z{constructor(q){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=q,this._scene=q.Wq(),this._engine=this._scene.getEngine()}_addPlugin(q){for(let w=0;w<this._plugins.length;++w)if(this._plugins[w].name===q.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!q.isCompatible(this._material.shaderLanguage))throw`The plugin "${q.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const I=q.getClassName();Z._MaterialPluginClassToMainDefine[I]||(Z._MaterialPluginClassToMainDefine[I]="MATERIALPLUGIN_"+ ++Z._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(q,I)=>this._handlePluginEvent(q,I),this._plugins.push(q),this._plugins.sort(((q,I)=>q.priority-I.priority)),this._codeInjectionPoints={};const l={};l[Z._MaterialPluginClassToMainDefine[I]]={type:"boolean",default:!0};for(const w of this._plugins)w.collectDefines(l),this._collectPointNames("vertex",w.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",w.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=l,!0}_activatePlugin(q){-1===this._activePlugins.indexOf(q)&&(this._activePlugins.push(q),this._activePlugins.sort(((q,I)=>q.priority-I.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),q.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(q),this._activePluginsForExtraEvents.sort(((q,I)=>q.priority-I.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(q){for(let I=0;I<this._plugins.length;++I)if(this._plugins[I].name===q)return this._plugins[I];return null}_handlePluginEventIsReadyForSubMesh(q){let I=!0;for(const l of this._activePlugins)I=I&&l.isReadyForSubMesh(q.defines,this._scene,this._engine,q.subMesh);q.isReadyForSubMesh=I}_handlePluginEventPrepareDefinesBeforeAttributes(q){for(const I of this._activePlugins)I.prepareDefinesBeforeAttributes(q.defines,this._scene,q.mesh)}_handlePluginEventPrepareDefines(q){for(const I of this._activePlugins)I.prepareDefines(q.defines,this._scene,q.mesh)}_handlePluginEventHardBindForSubMesh(q){for(const I of this._activePluginsForExtraEvents)I.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,q.subMesh)}_handlePluginEventBindForSubMesh(q){for(const I of this._activePlugins)I.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,q.subMesh)}_handlePluginEventHasRenderTargetTextures(q){let I=!1;for(const l of this._activePluginsForExtraEvents)if(I=l.hasRenderTargetTextures(),I)break;q.hasRenderTargetTextures=I}_handlePluginEventFillRenderTargetTextures(q){for(const I of this._activePluginsForExtraEvents)I.fillRenderTargetTextures(q.renderTargets)}_handlePluginEvent(q,I){switch(q){case 512:{const q=I;for(const I of this._activePlugins)I.getActiveTextures(q.activeTextures);break}case 256:{const q=I;for(const I of this._activePlugins)I.getAnimatables(q.animatables);break}case 1024:{const q=I;let l=!1;for(const I of this._activePlugins)if(l=I.hasTexture(q.texture),l)break;q.hasTexture=l;break}case 2:{const q=I;for(const I of this._plugins)I.dispose(q.forceDisposeTextures);break}case 4:I.defineNames=this._defineNamesFromPlugins;break;case 128:{const q=I;for(const I of this._activePlugins)q.fallbackRank=I.addFallbacks(q.defines,q.fallbacks,q.fallbackRank),I.getAttributes(q.attributes,this._scene,q.mesh);this._uniformList.length>0&&q.uniforms.push(...this._uniformList),this._samplerList.length>0&&q.samplers.push(...this._samplerList),this._uboList.length>0&&q.uniformBuffersNames.push(...this._uboList),q.customCode=this._injectCustomCode(q,q.customCode);break}case 8:{const q=I;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const l=1===this._material.shaderLanguage;for(const I of this._plugins){const w=I.getUniforms(this._material.shaderLanguage);if(w){if(w.ubo)for(const I of w.ubo){if(I.size&&I.type){const w=I.arraySize??0;if(q.ubo.addUniform(I.name,I.size,w),l){let q;switch(I.type){case"mat4":q="mat4x4f";break;case"float":q="f32";break;default:q=`${I.type}f`}this._uboDeclaration+=w>0?`uniform ${I.name}: array<${q}, ${w}>;\n`:`uniform ${I.name}: ${q};\n`}else this._uboDeclaration+=`${I.type} ${I.name}${w>0?`[${w}]`:""};\n`}this._uniformList.push(I.name)}w.vertex&&(this._vertexDeclaration+=w.vertex+"\n"),w.fragment&&(this._fragmentDeclaration+=w.fragment+"\n")}I.getSamplers(this._samplerList),I.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(q,I){if(I)for(const l in I)this._codeInjectionPoints[q]||(this._codeInjectionPoints[q]={}),this._codeInjectionPoints[q][l]=!0}_injectCustomCode(q,I){return(l,w)=>{var t;I&&(w=I(l,w)),this._uboDeclaration&&(w=w.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(w=w.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(w=w.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const O=null===(t=this._codeInjectionPoints)||void 0===t?void 0:t[l];if(!O)return w;let c=null;for(let I in O){let t="";for(const w of this._activePlugins){var Z;let O=null===(Z=w.getCustomCode(l,this._material.shaderLanguage))||void 0===Z?void 0:Z[I];if(O){if(w.resolveIncludes){if(null===c){const I=0;c={defines:[],indexParameters:q.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:F.e.GetShadersRepository(I),includesShadersStore:F.e.GetIncludesShadersStore(I),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,Ic:this._engine.Ic,processCodeAfterIncludes:void 0}}c.isFragment="fragment"===l,(0,a.e)(O,c,(q=>O=q))}t+=O+"\n"}}if(t.length>0)if("!"===I.charAt(0)){I=I.substring(1);let q="g";if("!"===I.charAt(0))q="",I=I.substring(1);else{const l=s.exec(I);l&&l.length>=2&&(q=l[1],I=I.substring(q.length+1))}q.indexOf("g")<0&&(q+="g");const l=w,O=new RegExp(I,q);let c=O.exec(l);for(;null!==c;){let q=t;for(let I=0;I<c.length;++I)q=q.replace("$"+I,c[I]);w=w.replace(c[0],q),c=O.exec(l)}}else{const q="#define "+I;w=w.replace(q,"\n"+t+"\n"+q)}}return w}}}Z._MaterialPluginClassToMainDefine={},Z._MaterialPluginCounter=0,c.e.OnEnginesDisposedObservable.add((()=>{d()}));const r=[];let x=!1,o=null;function d(){r.length=0,x=!1,O.c.OnEventObservable.remove(o),o=null}var T=l(12777),V=l(12711);class U{isCompatible(q){return 0===q}_enable(q){q&&this._pluginManager._activatePlugin(this)}constructor(q,I,l,w){let t=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],O=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=q,this.name=I,this.priority=l,this.resolveIncludes=c,q.pluginManager||(q.pluginManager=new Z(q),q.tc.add((()=>{q.pluginManager=void 0}))),this._pluginDefineNames=w,this._pluginManager=q.pluginManager,t&&this._pluginManager._addPlugin(this),O&&this._enable(!0),this.markAllDefinesAsDirty=q._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(q,I,l,w){return!0}hardBindForSubMesh(q,I,l,w){}bindForSubMesh(q,I,l,w){}dispose(q){}getCustomCode(q){return null}collectDefines(q){if(this._pluginDefineNames)for(const I of Object.keys(this._pluginDefineNames)){if("_"===I[0])continue;const l=typeof this._pluginDefineNames[I];q[I]={type:"number"===l?"number":"string"===l?"string":"boolean"===l?"boolean":"object",default:this._pluginDefineNames[I]}}}prepareDefinesBeforeAttributes(q,I,l){}prepareDefines(q,I,l){}hasTexture(q){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(q){}getActiveTextures(q){}getAnimatables(q){}addFallbacks(q,I,l){return l}getSamplers(q){}getAttributes(q,I,l){}getUniformBuffersNames(q){}getUniforms(){return{}}copyTo(q){T.c.Clone((()=>q),this)}serialize(){return T.c.Serialize(this)}parse(q,I,l){T.c.Parse((()=>this),q,I,l)}}(0,w.d)([(0,t.D)()],U.prototype,"name",void 0),(0,w.d)([(0,t.D)()],U.prototype,"priority",void 0),(0,w.d)([(0,t.D)()],U.prototype,"resolveIncludes",void 0),(0,w.d)([(0,t.D)()],U.prototype,"registerForExtraEvents",void 0),(0,V.e)("BABYLON.MaterialPluginBase",U)},13130:(q,I,l)=>{l.d(I,{c:()=>w});class w{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(q){q.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(q){}bindForSubMesh(q,I,l,w,t){if(I.prePassRenderer&&I.prePassRenderer.enabled&&I.prePassRenderer.currentRTisSceneRT&&(-1!==I.prePassRenderer.getIndex(2)||-1!==I.prePassRenderer.getIndex(11))){this.previousWorldMatrices[l.uniqueId]||(this.previousWorldMatrices[l.uniqueId]=w.clone()),this.previousViewProjection||(this.previousViewProjection=I.getTransformMatrix().clone(),this.currentViewProjection=I.getTransformMatrix().clone());const t=I.getEngine();this.currentViewProjection.updateFlag!==I.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.t(this.currentViewProjection),this.currentViewProjection.t(I.getTransformMatrix())):this._lastUpdateFrameId!==t.frameId&&(this._lastUpdateFrameId=t.frameId,this.previousViewProjection.t(this.currentViewProjection)),q.setMatrix("previousWorld",this.previousWorldMatrices[l.uniqueId]),q.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[l.uniqueId]=w.clone()}}}},13122:(q,I,l)=>{l.d(I,{UI:()=>i});var w=l(12735),t=l(12740),O=l(12839),c=l(12987),a=l(12789),F=l(12821),s=l(13130),Z=l(12990),r=l(13074),x=l(13139),o=l(13065),d=l(12733),T=l(12711),V=l(13141),U=l(13059),B=l(13146),v=l(13116),k=l(13109),C=l(12777),R=l(13156);const W={effect:null,subMesh:null};class e extends x.c{constructor(q){super(q),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(q){const I=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const l of I)this[l]=l===q}}class i extends o.c{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(q){this._attachImageProcessingConfiguration(q),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(q){q!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=q||this.Wq().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(q){this.imageProcessingConfiguration.colorCurvesEnabled=q}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(q){this.imageProcessingConfiguration.colorGradingEnabled=q}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(q){this._imageProcessingConfiguration.toneMappingEnabled=q}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(q){this._imageProcessingConfiguration.exposure=q}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(q){this._imageProcessingConfiguration.contrast=q}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(q){this._imageProcessingConfiguration.colorGradingTexture=q}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(q){this._imageProcessingConfiguration.colorCurves=q}get canRenderToMRT(){return!0}constructor(q,I){super(q,I,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||i.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new a.BI(0,0,0),this.diffuseColor=new a.BI(1,1,1),this.specularColor=new a.BI(1,1,1),this.emissiveColor=new a.BI(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new O.h(16),this._globalAmbientColor=new a.BI(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new B.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new s.c,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),i.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),i.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(i.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(i.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"UI"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===r.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.Bc&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==r.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.Bc||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(q,I){let w=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const t=I._drawWrapper;if(t.effect&&this.isFrozen&&t._wasPreviouslyReady&&t._wasPreviouslyUsingInstances===w)return!0;I.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),I.materialDefines=new e(this._eventInfo.defineNames));const O=this.Wq(),c=I.materialDefines;if(this._isReadyForSubMesh(I))return!0;const a=O.getEngine();c._needNormals=(0,k.X)(O,q,c,!0,this._maxSimultaneousLights,this._disableLighting),(0,k.cb)(O,c);const r=this.needAlphaBlendingForMesh(q)&&this.Wq().useOrderIndependentTransparency;if((0,k.jb)(O,c,this.canRenderToMRT&&!r),(0,k.fb)(O,c,r),R.b.PrepareDefines(a.currentRenderPassId,q,c),c._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,c._needUVs=!1;for(let q=1;q<=6;++q)c["MAINUV"+q]=!1;if(O.texturesEnabled){if(c.DIFFUSEDIRECTUV=0,c.BUMPDIRECTUV=0,c.AMBIENTDIRECTUV=0,c.OPACITYDIRECTUV=0,c.EMISSIVEDIRECTUV=0,c.SPECULARDIRECTUV=0,c.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&i.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._diffuseTexture,c,"DIFFUSE")}else c.DIFFUSE=!1;if(this._ambientTexture&&i.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._ambientTexture,c,"AMBIENT")}else c.AMBIENT=!1;if(this._opacityTexture&&i.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._opacityTexture,c,"OPACITY"),c.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else c.OPACITY=!1;if(this._reflectionTexture&&i.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(c._needNormals=!0,c.REFLECTION=!0,c.ROUGHNESS=this._roughness>0,c.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,c.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===d.d.INVCUBIC_MODE,c.REFLECTIONMAP_3D=this._reflectionTexture.isCube,c.REFLECTIONMAP_OPPOSITEZ=c.REFLECTIONMAP_3D&&this.Wq().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,c.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case d.d.EXPLICIT_MODE:c.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case d.d.PLANAR_MODE:c.setReflectionMode("REFLECTIONMAP_PLANAR");break;case d.d.PROJECTION_MODE:c.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case d.d.SKYBOX_MODE:c.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case d.d.SPHERICAL_MODE:c.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case d.d.EQUIRECTANGULAR_MODE:c.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case d.d.FIXED_EQUIRECTANGULAR_MODE:c.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case d.d.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:c.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case d.d.CUBIC_MODE:case d.d.INVCUBIC_MODE:default:c.setReflectionMode("REFLECTIONMAP_CUBIC")}c.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else c.REFLECTION=!1,c.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&i.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._emissiveTexture,c,"EMISSIVE")}else c.EMISSIVE=!1;if(this._lightmapTexture&&i.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._lightmapTexture,c,"LIGHTMAP"),c.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,c.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else c.LIGHTMAP=!1;if(this._specularTexture&&i.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,k.Y)(this._specularTexture,c,"SPECULAR"),c.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else c.SPECULAR=!1;if(O.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&i.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,k.Y)(this._bumpTexture,c,"BUMP"),c.PARALLAX=this._useParallax,c.PARALLAX_RHS=O.useRightHandedSystem,c.PARALLAXOCCLUSION=this._useParallaxOcclusion,c.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else c.BUMP=!1,c.PARALLAX=!1,c.PARALLAX_RHS=!1,c.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&i.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;c._needUVs=!0,c.REFRACTION=!0,c.REFRACTIONMAP_3D=this._refractionTexture.isCube,c.RGBDREFRACTION=this._refractionTexture.isRGBD,c.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else c.REFRACTION=!1;c.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else c.DIFFUSE=!1,c.AMBIENT=!1,c.OPACITY=!1,c.REFLECTION=!1,c.EMISSIVE=!1,c.LIGHTMAP=!1,c.BUMP=!1,c.REFRACTION=!1;c.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),c.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,c.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,c.SPECULAROVERALPHA=this._useSpecularOverAlpha,c.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,c.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,c.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(q)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=c,this._eventInfo.subMesh=I,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(c._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(c),c.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,c.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(c._areFresnelDirty&&(i.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(c.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,c.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,c.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,c.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,c.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,c.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,c._needNormals=!0,c.FRESNEL=!0):c.FRESNEL=!1),c.AREALIGHTUSED)for(let l=0;l<q.lightSources.length;l++)if(!q.lightSources[l]._isReady())return!1;(0,k._)(q,O,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(q),c,this._applyDecalMapAfterDetailMap),(0,k.T)(O,a,this,c,w,null,I.getRenderingMesh().hasThinInstances),this._eventInfo.defines=c,this._eventInfo.mesh=q,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,k.S)(q,c,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let x=!1;if(c.isDirty){const w=c._areLightsDisposed;c.markAsProcessed();const t=new U.b;c.REFLECTION&&t.addFallback(0,"REFLECTION"),c.SPECULAR&&t.addFallback(0,"SPECULAR"),c.BUMP&&t.addFallback(0,"BUMP"),c.PARALLAX&&t.addFallback(1,"PARALLAX"),c.PARALLAX_RHS&&t.addFallback(1,"PARALLAX_RHS"),c.PARALLAXOCCLUSION&&t.addFallback(0,"PARALLAXOCCLUSION"),c.SPECULAROVERALPHA&&t.addFallback(0,"SPECULAROVERALPHA"),c.FOG&&t.addFallback(1,"FOG"),c.POINTSIZE&&t.addFallback(0,"POINTSIZE"),c.LOGARITHMICDEPTH&&t.addFallback(0,"LOGARITHMICDEPTH"),(0,k.B)(c,t,this._maxSimultaneousLights),c.SPECULARTERM&&t.addFallback(0,"SPECULARTERM"),c.DIFFUSEFRESNEL&&t.addFallback(1,"DIFFUSEFRESNEL"),c.OPACITYFRESNEL&&t.addFallback(2,"OPACITYFRESNEL"),c.REFLECTIONFRESNEL&&t.addFallback(3,"REFLECTIONFRESNEL"),c.EMISSIVEFRESNEL&&t.addFallback(4,"EMISSIVEFRESNEL"),c.FRESNEL&&t.addFallback(4,"FRESNEL"),c.MULTIVIEW&&t.addFallback(0,"MULTIVIEW");const r=[F.c.PositionKind];c.NORMAL&&r.push(F.c.NormalKind),c.TANGENT&&r.push(F.c.TangentKind);for(let q=1;q<=6;++q)c["UV"+q]&&r.push(`uv${1===q?"":q}`);c.VERTEXCOLOR&&r.push(F.c.ColorKind),(0,k.G)(r,q,c,t),(0,k.I)(r,c),(0,k.L)(r,q,c),(0,k.E)(r,q,c);let o="default";const d=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],T=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],V=["Material","Scene","Mesh"],B={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:c.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=t,this._eventInfo.fallbackRank=0,this._eventInfo.defines=c,this._eventInfo.uniforms=d,this._eventInfo.attributes=r,this._eventInfo.samplers=T,this._eventInfo.uniformBuffersNames=V,this._eventInfo.customCode=void 0,this._eventInfo.mesh=q,this._eventInfo.indexParameters=B,this._callbackPluginEventGeneric(128,this._eventInfo),R.b.AddUniformsAndSamplers(d,T),s.c.AddUniforms(d),s.c.AddSamplers(T),Z.c&&(Z.c.PrepareUniforms(d,c),Z.c.PrepareSamplers(T,c)),(0,k.kb)({uniformsNames:d,uniformBuffersNames:V,samplers:T,defines:c,maxSimultaneousLights:this._maxSimultaneousLights}),(0,v.b)(d);const C={};this.customShaderNameResolve&&(o=this.customShaderNameResolve(o,d,V,T,c,r,C));const e=c.toString(),i=I.effect;let S=O.getEngine().createEffect(o,{attributes:r,uniformsNames:d,uniformBuffersNames:V,samplers:T,defines:e,fallbacks:t,onCompiled:this.onCompiled,onError:this.onError,indexParameters:B,processFinalCode:C.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:c.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([l.e(41),l.e(64)]).then(l.bind(l,15302)),Promise.all([l.e(39),l.e(65)]).then(l.bind(l,15458))]):await Promise.all([Promise.all([l.e(34),l.e(67)]).then(l.bind(l,15548)),Promise.all([l.e(33),l.e(68)]).then(l.bind(l,15701))]),this._shadersLoaded=!0}},a);if(this._eventInfo.customCode=void 0,S)if(this._onEffectCreatedObservable&&(W.effect=S,W.subMesh=I,this._onEffectCreatedObservable.notifyObservers(W)),this.allowShaderHotSwapping&&i&&!S.isReady()){if(S=i,c.markAsUnprocessed(),x=this.isFrozen,w)return c._areLightsDisposed=!0,!1}else O.resetCachedMaterial(),I.setEffect(S,c,this._materialContext)}return!(!I.effect||!I.effect.isReady())&&(c._renderId=O.getRenderId(),t._wasPreviouslyReady=!x,t._wasPreviouslyUsingInstances=w,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const q=this._uniformBuffer;q.addUniform("diffuseLeftColor",4),q.addUniform("diffuseRightColor",4),q.addUniform("opacityParts",4),q.addUniform("reflectionLeftColor",4),q.addUniform("reflectionRightColor",4),q.addUniform("refractionLeftColor",4),q.addUniform("refractionRightColor",4),q.addUniform("emissiveLeftColor",4),q.addUniform("emissiveRightColor",4),q.addUniform("vDiffuseInfos",2),q.addUniform("vAmbientInfos",2),q.addUniform("vOpacityInfos",2),q.addUniform("vReflectionInfos",2),q.addUniform("vReflectionPosition",3),q.addUniform("vReflectionSize",3),q.addUniform("vEmissiveInfos",2),q.addUniform("vLightmapInfos",2),q.addUniform("vSpecularInfos",2),q.addUniform("vBumpInfos",3),q.addUniform("diffuseMatrix",16),q.addUniform("ambientMatrix",16),q.addUniform("opacityMatrix",16),q.addUniform("reflectionMatrix",16),q.addUniform("emissiveMatrix",16),q.addUniform("lightmapMatrix",16),q.addUniform("specularMatrix",16),q.addUniform("bumpMatrix",16),q.addUniform("vTangentSpaceParams",2),q.addUniform("pointSize",1),q.addUniform("alphaCutOff",1),q.addUniform("refractionMatrix",16),q.addUniform("vRefractionInfos",4),q.addUniform("vRefractionPosition",3),q.addUniform("vRefractionSize",3),q.addUniform("vSpecularColor",4),q.addUniform("vEmissiveColor",3),q.addUniform("vDiffuseColor",4),q.addUniform("vAmbientColor",3),q.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(q,I,l){const w=this.Wq(),t=l.materialDefines;if(!t)return;const O=l.effect;if(!O)return;this._activeEffect=O,I.getMeshUniformBuffer().bindToEffect(O,"Mesh"),I.transferToEffect(q),this._uniformBuffer.bindToEffect(O,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,w,I,q,this.isFrozen),R.b.Bind(w.getEngine().currentRenderPassId,this._activeEffect,I,q,this);const F=w.activeCamera;F?this._uniformBuffer.updateFloat4("cameraInfo",F.vc,F.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=l,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),t.OBJECTSPACE_NORMALMAP&&(q.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const s=this._mustRebind(w,O,l,I.visibility);(0,k.c)(I,O);const Z=this._uniformBuffer;if(s){if(this.bindViewProjection(O),!Z.useUbo||!this.isFrozen||!Z.isSync||l._drawWrapper._forceRebindOnNextCall){if(i.FresnelEnabled&&t.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(Z.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),Z.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&Z.updateColor4("opacityParts",new a.BI(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(Z.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),Z.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(Z.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),Z.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(Z.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),Z.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),w.texturesEnabled){if(this._diffuseTexture&&i.DiffuseTextureEnabled&&(Z.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,k.x)(this._diffuseTexture,Z,"diffuse")),this._ambientTexture&&i.AmbientTextureEnabled&&(Z.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,k.x)(this._ambientTexture,Z,"ambient")),this._opacityTexture&&i.OpacityTextureEnabled&&(Z.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,k.x)(this._opacityTexture,Z,"opacity")),this._hasAlphaChannel()&&Z.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&i.ReflectionTextureEnabled){if(Z.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),Z.kc("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const q=this._reflectionTexture;Z.updateVector3("vReflectionPosition",q.boundingBoxPosition),Z.updateVector3("vReflectionSize",q.boundingBoxSize)}}else Z.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&i.EmissiveTextureEnabled&&(Z.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,k.x)(this._emissiveTexture,Z,"emissive")),this._lightmapTexture&&i.LightmapTextureEnabled&&(Z.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,k.x)(this._lightmapTexture,Z,"lightmap")),this._specularTexture&&i.SpecularTextureEnabled&&(Z.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,k.x)(this._specularTexture,Z,"specular")),this._bumpTexture&&w.getEngine().getCaps().standardDerivatives&&i.BumpTextureEnabled&&(Z.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,k.x)(this._bumpTexture,Z,"bump"),w._mirroredCameraPosition?Z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):Z.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&i.RefractionTextureEnabled){let q=1;if(this._refractionTexture.isCube||(Z.kc("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(q=this._refractionTexture.depth)),Z.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,q,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const q=this._refractionTexture;Z.updateVector3("vRefractionPosition",q.boundingBoxPosition),Z.updateVector3("vRefractionSize",q.boundingBoxSize)}}}this.pointsCloud&&Z.updateFloat("pointSize",this.pointSize),Z.updateColor4("vSpecularColor",this.specularColor,this.specularPower),Z.updateColor3("vEmissiveColor",i.EmissiveTextureEnabled?this.emissiveColor:a.BI.BlackReadOnly),Z.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),w.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),Z.updateColor3("vAmbientColor",this._globalAmbientColor)}w.texturesEnabled&&(this._diffuseTexture&&i.DiffuseTextureEnabled&&O.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&i.AmbientTextureEnabled&&O.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&i.OpacityTextureEnabled&&O.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&i.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?O.setTexture("reflectionCubeSampler",this._reflectionTexture):O.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&i.EmissiveTextureEnabled&&O.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&i.LightmapTextureEnabled&&O.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&i.SpecularTextureEnabled&&O.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&w.getEngine().getCaps().standardDerivatives&&i.BumpTextureEnabled&&O.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&i.RefractionTextureEnabled&&(this._refractionTexture.isCube?O.setTexture("refractionCubeSampler",this._refractionTexture):O.setTexture("refraction2DSampler",this._refractionTexture))),this.Wq().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(I)&&this.Wq().depthPeelingRenderer.bind(O),this._eventInfo.subMesh=l,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,v.c)(O,this,w),this.bindEyePosition(O)}else w.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(s||!this.isFrozen){var r;if(w.lightsEnabled&&!this._disableLighting&&(0,k.i)(w,I,O,t,this._maxSimultaneousLights),(w.fogEnabled&&I.applyFog&&w.fogMode!==c.e.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||I.receiveShadows||t.PREPASS)&&this.bindView(O),(0,k.f)(w,I,O),t.NUM_MORPH_INFLUENCERS&&(0,k.p)(I,O),t.BAKED_VERTEX_ANIMATION_TEXTURE)null===(r=I.bakedVertexAnimationManager)||void 0===r||r.bind(O,t.INSTANCES);this.useLogarithmicDepth&&(0,k.l)(t,O,w),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(I,this._activeEffect,l),Z.update()}getAnimatables(){const q=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&q.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&q.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&q.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&q.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&q.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&q.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&q.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&q.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&q.push(this._refractionTexture),q}getActiveTextures(){const q=super.getActiveTextures();return this._diffuseTexture&&q.push(this._diffuseTexture),this._ambientTexture&&q.push(this._ambientTexture),this._opacityTexture&&q.push(this._opacityTexture),this._reflectionTexture&&q.push(this._reflectionTexture),this._emissiveTexture&&q.push(this._emissiveTexture),this._specularTexture&&q.push(this._specularTexture),this._bumpTexture&&q.push(this._bumpTexture),this._lightmapTexture&&q.push(this._lightmapTexture),this._refractionTexture&&q.push(this._refractionTexture),q}hasTexture(q){return!!super.hasTexture(q)||(this._diffuseTexture===q||(this._ambientTexture===q||(this._opacityTexture===q||(this._reflectionTexture===q||(this._emissiveTexture===q||(this._specularTexture===q||(this._bumpTexture===q||(this._lightmapTexture===q||this._refractionTexture===q))))))))}dispose(q,I){var l,w,t,O,c,a,F,s,Z;I&&(null===(l=this._diffuseTexture)||void 0===l||l.dispose(),null===(w=this._ambientTexture)||void 0===w||w.dispose(),null===(t=this._opacityTexture)||void 0===t||t.dispose(),null===(O=this._reflectionTexture)||void 0===O||O.dispose(),null===(c=this._emissiveTexture)||void 0===c||c.dispose(),null===(a=this._specularTexture)||void 0===a||a.dispose(),null===(F=this._bumpTexture)||void 0===F||F.dispose(),null===(s=this._lightmapTexture)||void 0===s||s.dispose(),null===(Z=this._refractionTexture)||void 0===Z||Z.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(q,I)}clone(q){let I=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const w=C.c.Clone((()=>new i(q,this.Wq())),this,{cloneTexturesOnlyOnce:I});return w.name=q,w.id=q,this.cc.copyTo(w.cc),this._clonePlugins(w,l),w}static Parse(q,I,l){const w=C.c.Parse((()=>new i(q.name,I)),q,I,l);return q.cc&&w.cc.parse(q.cc,I,l),r.c._ParsePlugins(q,w,I,l),w}static get DiffuseTextureEnabled(){return V.d.DiffuseTextureEnabled}static set DiffuseTextureEnabled(q){V.d.DiffuseTextureEnabled=q}static get DetailTextureEnabled(){return V.d.DetailTextureEnabled}static set DetailTextureEnabled(q){V.d.DetailTextureEnabled=q}static get AmbientTextureEnabled(){return V.d.AmbientTextureEnabled}static set AmbientTextureEnabled(q){V.d.AmbientTextureEnabled=q}static get OpacityTextureEnabled(){return V.d.OpacityTextureEnabled}static set OpacityTextureEnabled(q){V.d.OpacityTextureEnabled=q}static get ReflectionTextureEnabled(){return V.d.ReflectionTextureEnabled}static set ReflectionTextureEnabled(q){V.d.ReflectionTextureEnabled=q}static get EmissiveTextureEnabled(){return V.d.EmissiveTextureEnabled}static set EmissiveTextureEnabled(q){V.d.EmissiveTextureEnabled=q}static get SpecularTextureEnabled(){return V.d.SpecularTextureEnabled}static set SpecularTextureEnabled(q){V.d.SpecularTextureEnabled=q}static get BumpTextureEnabled(){return V.d.BumpTextureEnabled}static set BumpTextureEnabled(q){V.d.BumpTextureEnabled=q}static get LightmapTextureEnabled(){return V.d.LightmapTextureEnabled}static set LightmapTextureEnabled(q){V.d.LightmapTextureEnabled=q}static get RefractionTextureEnabled(){return V.d.RefractionTextureEnabled}static set RefractionTextureEnabled(q){V.d.RefractionTextureEnabled=q}static get ColorGradingTextureEnabled(){return V.d.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(q){V.d.ColorGradingTextureEnabled=q}static get FresnelEnabled(){return V.d.FresnelEnabled}static set FresnelEnabled(q){V.d.FresnelEnabled=q}}i.ForceGLSL=!1,(0,w.d)([(0,t.z)("diffuseTexture")],i.prototype,"_diffuseTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"diffuseTexture",void 0),(0,w.d)([(0,t.z)("ambientTexture")],i.prototype,"_ambientTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"ambientTexture",void 0),(0,w.d)([(0,t.z)("opacityTexture")],i.prototype,"_opacityTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"opacityTexture",void 0),(0,w.d)([(0,t.z)("reflectionTexture")],i.prototype,"_reflectionTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"reflectionTexture",void 0),(0,w.d)([(0,t.z)("emissiveTexture")],i.prototype,"_emissiveTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"emissiveTexture",void 0),(0,w.d)([(0,t.z)("specularTexture")],i.prototype,"_specularTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"specularTexture",void 0),(0,w.d)([(0,t.z)("bumpTexture")],i.prototype,"_bumpTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"bumpTexture",void 0),(0,w.d)([(0,t.z)("lightmapTexture")],i.prototype,"_lightmapTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"lightmapTexture",void 0),(0,w.d)([(0,t.z)("refractionTexture")],i.prototype,"_refractionTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"refractionTexture",void 0),(0,w.d)([(0,t.k)("ambient")],i.prototype,"ambientColor",void 0),(0,w.d)([(0,t.k)("diffuse")],i.prototype,"diffuseColor",void 0),(0,w.d)([(0,t.k)("specular")],i.prototype,"specularColor",void 0),(0,w.d)([(0,t.k)("emissive")],i.prototype,"emissiveColor",void 0),(0,w.d)([(0,t.D)()],i.prototype,"specularPower",void 0),(0,w.d)([(0,t.D)("useAlphaFromDiffuseTexture")],i.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesAndMiscDirty")],i.prototype,"useAlphaFromDiffuseTexture",void 0),(0,w.d)([(0,t.D)("useEmissiveAsIllumination")],i.prototype,"_useEmissiveAsIllumination",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useEmissiveAsIllumination",void 0),(0,w.d)([(0,t.D)("linkEmissiveWithDiffuse")],i.prototype,"_linkEmissiveWithDiffuse",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"linkEmissiveWithDiffuse",void 0),(0,w.d)([(0,t.D)("useSpecularOverAlpha")],i.prototype,"_useSpecularOverAlpha",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useSpecularOverAlpha",void 0),(0,w.d)([(0,t.D)("useReflectionOverAlpha")],i.prototype,"_useReflectionOverAlpha",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useReflectionOverAlpha",void 0),(0,w.d)([(0,t.D)("disableLighting")],i.prototype,"_disableLighting",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsLightsDirty")],i.prototype,"disableLighting",void 0),(0,w.d)([(0,t.D)("useObjectSpaceNormalMap")],i.prototype,"_useObjectSpaceNormalMap",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useObjectSpaceNormalMap",void 0),(0,w.d)([(0,t.D)("useParallax")],i.prototype,"_useParallax",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useParallax",void 0),(0,w.d)([(0,t.D)("useParallaxOcclusion")],i.prototype,"_useParallaxOcclusion",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useParallaxOcclusion",void 0),(0,w.d)([(0,t.D)()],i.prototype,"parallaxScaleBias",void 0),(0,w.d)([(0,t.D)("roughness")],i.prototype,"_roughness",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"roughness",void 0),(0,w.d)([(0,t.D)()],i.prototype,"indexOfRefraction",void 0),(0,w.d)([(0,t.D)()],i.prototype,"invertRefractionY",void 0),(0,w.d)([(0,t.D)()],i.prototype,"alphaCutOff",void 0),(0,w.d)([(0,t.D)("useLightmapAsShadowmap")],i.prototype,"_useLightmapAsShadowmap",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useLightmapAsShadowmap",void 0),(0,w.d)([(0,t.p)("diffuseFresnelParameters")],i.prototype,"_diffuseFresnelParameters",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"diffuseFresnelParameters",void 0),(0,w.d)([(0,t.p)("opacityFresnelParameters")],i.prototype,"_opacityFresnelParameters",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelAndMiscDirty")],i.prototype,"opacityFresnelParameters",void 0),(0,w.d)([(0,t.p)("reflectionFresnelParameters")],i.prototype,"_reflectionFresnelParameters",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"reflectionFresnelParameters",void 0),(0,w.d)([(0,t.p)("refractionFresnelParameters")],i.prototype,"_refractionFresnelParameters",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"refractionFresnelParameters",void 0),(0,w.d)([(0,t.p)("emissiveFresnelParameters")],i.prototype,"_emissiveFresnelParameters",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"emissiveFresnelParameters",void 0),(0,w.d)([(0,t.D)("useReflectionFresnelFromSpecular")],i.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsFresnelDirty")],i.prototype,"useReflectionFresnelFromSpecular",void 0),(0,w.d)([(0,t.D)("useGlossinessFromSpecularMapAlpha")],i.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,w.d)([(0,t.D)("maxSimultaneousLights")],i.prototype,"_maxSimultaneousLights",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsLightsDirty")],i.prototype,"maxSimultaneousLights",void 0),(0,w.d)([(0,t.D)("invertNormalMapX")],i.prototype,"_invertNormalMapX",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"invertNormalMapX",void 0),(0,w.d)([(0,t.D)("invertNormalMapY")],i.prototype,"_invertNormalMapY",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"invertNormalMapY",void 0),(0,w.d)([(0,t.D)("twoSidedLighting")],i.prototype,"_twoSidedLighting",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsTexturesDirty")],i.prototype,"twoSidedLighting",void 0),(0,w.d)([(0,t.D)("applyDecalMapAfterDetailMap")],i.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,w.d)([(0,t.d)("_markAllSubMeshesAsMiscDirty")],i.prototype,"applyDecalMapAfterDetailMap",void 0),(0,T.e)("BABYLON.StandardMaterial",i),c.e.DefaultMaterialFactory=q=>new i("default material",q)}}]);