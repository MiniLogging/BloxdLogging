"use strict";(self.fkqm0epoq5=self.fkqm0epoq5||[]).push([[25],{12121:(D,l,G)=>{G.d(l,{e:()=>g});var V=G(11695),N=G(12052),M=G(11703),b=G(12114),X=G(12112),t=G(12123),R=G(12097);class n extends X.c{constructor(){super(...arguments),this.DETAIL=!1,this.DETAILDIRECTUV=0,this.DETAIL_NORMALBLENDMETHOD=0}}class g extends t.d{_markAllSubMeshesAsTexturesDirty(){this._enable(this._isEnabled),this._internalMarkAllSubMeshesAsTexturesDirty()}isCompatible(){return!0}constructor(D){let l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(D,"DetailMap",140,new n,l),this._texture=null,this.diffuseBlendLevel=1,this.roughnessBlendLevel=1,this.bumpLevel=1,this._normalBlendMethod=N.c.MATERIAL_NORMALBLENDMETHOD_WHITEOUT,this._isEnabled=!1,this.isEnabled=!1,this._internalMarkAllSubMeshesAsTexturesDirty=D._dirtyCallbacks[1]}isReadyForSubMesh(D,l,G){return!this._isEnabled||!(D._areTexturesDirty&&l.texturesEnabled&&G.getCaps().standardDerivatives&&this._texture&&b.e.DetailTextureEnabled&&!this._texture.isReady())}prepareDefines(D,l){if(this._isEnabled){D.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod;const G=l.getEngine();D._areTexturesDirty&&(G.getCaps().standardDerivatives&&this._texture&&b.e.DetailTextureEnabled&&this._isEnabled?((0,R.O)(this._texture,D,"DETAIL"),D.DETAIL_NORMALBLENDMETHOD=this._normalBlendMethod):D.DETAIL=!1)}else D.DETAIL=!1}bindForSubMesh(D,l){if(!this._isEnabled)return;const G=this._material.isFrozen;D.useUbo&&G&&D.isSync||this._texture&&b.e.DetailTextureEnabled&&(D.updateFloat4("vDetailInfos",this._texture.coordinatesIndex,this.diffuseBlendLevel,this.bumpLevel,this.roughnessBlendLevel),(0,R.q)(this._texture,D,"detail")),l.texturesEnabled&&this._texture&&b.e.DetailTextureEnabled&&D.setTexture("detailSampler",this._texture)}hasTexture(D){return this._texture===D}getActiveTextures(D){this._texture&&D.push(this._texture)}getAnimatables(D){this._texture&&this._texture.animations&&this._texture.animations.length>0&&D.push(this._texture)}dispose(D){var l;D&&(null===(l=this._texture)||void 0===l||l.dispose())}getClassName(){return"DetailMapConfiguration"}getSamplers(D){D.push("detailSampler")}getUniforms(){return{ubo:[{name:"vDetailInfos",size:4,type:"vec4"},{name:"detailMatrix",size:16,type:"mat4"}]}}}(0,V.b)([(0,M.B)("detailTexture"),(0,M.c)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"texture",void 0),(0,V.b)([(0,M.L)()],g.prototype,"diffuseBlendLevel",void 0),(0,V.b)([(0,M.L)()],g.prototype,"roughnessBlendLevel",void 0),(0,V.b)([(0,M.L)()],g.prototype,"bumpLevel",void 0),(0,V.b)([(0,M.L)(),(0,M.c)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"normalBlendMethod",void 0),(0,V.b)([(0,M.L)(),(0,M.c)("_markAllSubMeshesAsTexturesDirty")],g.prototype,"isEnabled",void 0)},12112:(D,l,G)=>{G.d(l,{c:()=>V});class V{constructor(D){if(this._keys=[],this._isDirty=!0,this._areLightsDirty=!0,this._areLightsDisposed=!1,this._areAttributesDirty=!0,this._areTexturesDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._normals=!1,this._uvs=!1,this._needNormals=!1,this._needUVs=!1,this._externalProperties=D,D)for(const l in D)Object.prototype.hasOwnProperty.call(D,l)&&this._setDefaultValue(l)}get isDirty(){return this._isDirty}markAsProcessed(){this._isDirty=!1,this._areAttributesDirty=!1,this._areTexturesDirty=!1,this._areFresnelDirty=!1,this._areLightsDirty=!1,this._areLightsDisposed=!1,this._areMiscDirty=!1,this._arePrePassDirty=!1,this._areImageProcessingDirty=!1}markAsUnprocessed(){this._isDirty=!0}markAllAsDirty(){this._areTexturesDirty=!0,this._areAttributesDirty=!0,this._areLightsDirty=!0,this._areFresnelDirty=!0,this._areMiscDirty=!0,this._arePrePassDirty=!0,this._areImageProcessingDirty=!0,this._isDirty=!0}markAsImageProcessingDirty(){this._areImageProcessingDirty=!0,this._isDirty=!0}markAsLightDirty(){let D=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this._areLightsDirty=!0,this._areLightsDisposed=this._areLightsDisposed||D,this._isDirty=!0}markAsAttributesDirty(){this._areAttributesDirty=!0,this._isDirty=!0}markAsTexturesDirty(){this._areTexturesDirty=!0,this._isDirty=!0}markAsFresnelDirty(){this._areFresnelDirty=!0,this._isDirty=!0}markAsMiscDirty(){this._areMiscDirty=!0,this._isDirty=!0}markAsPrePassDirty(){this._arePrePassDirty=!0,this._isDirty=!0}rebuild(){this._keys.length=0;for(const D of Object.keys(this))"_"!==D[0]&&this._keys.push(D);if(this._externalProperties)for(const D in this._externalProperties)-1===this._keys.indexOf(D)&&this._keys.push(D)}isEqual(D){if(this._keys.length!==D._keys.length)return!1;for(let l=0;l<this._keys.length;l++){const G=this._keys[l];if(this[G]!==D[G])return!1}return!0}cloneTo(D){this._keys.length!==D._keys.length&&(D._keys=this._keys.slice(0));for(let l=0;l<this._keys.length;l++){const G=this._keys[l];D[G]=this[G]}}reset(){for(const D of this._keys)this._setDefaultValue(D)}_setDefaultValue(D){var l,G,V,N;const M=(null===(l=this._externalProperties)||void 0===l||null===(G=l[D])||void 0===G?void 0:G.type)??typeof this[D],b=null===(V=this._externalProperties)||void 0===V||null===(N=V[D])||void 0===N?void 0:N.default;switch(M){case"number":this[D]=b??0;break;case"string":this[D]=b??"";break;default:this[D]=b??!1}}toString(){let D="";for(let l=0;l<this._keys.length;l++){const G=this._keys[l],V=this[G];switch(typeof V){case"number":case"string":D+="#define "+G+" "+V+"\n";break;default:V&&(D+="#define "+G+"\n")}}return D}}},12114:(D,l,G)=>{G.d(l,{e:()=>N});var V=G(11613);class N{static get DiffuseTextureEnabled(){return this._DiffuseTextureEnabled}static set DiffuseTextureEnabled(D){this._DiffuseTextureEnabled!==D&&(this._DiffuseTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get BaseWeightTextureEnabled(){return this._BaseWeightTextureEnabled}static set BaseWeightTextureEnabled(D){this._BaseWeightTextureEnabled!==D&&(this._BaseWeightTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get BaseDiffuseRoughnessTextureEnabled(){return this._BaseDiffuseRoughnessTextureEnabled}static set BaseDiffuseRoughnessTextureEnabled(D){this._BaseDiffuseRoughnessTextureEnabled!==D&&(this._BaseDiffuseRoughnessTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get DetailTextureEnabled(){return this._DetailTextureEnabled}static set DetailTextureEnabled(D){this._DetailTextureEnabled!==D&&(this._DetailTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get DecalMapEnabled(){return this._DecalMapEnabled}static set DecalMapEnabled(D){this._DecalMapEnabled!==D&&(this._DecalMapEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get AmbientTextureEnabled(){return this._AmbientTextureEnabled}static set AmbientTextureEnabled(D){this._AmbientTextureEnabled!==D&&(this._AmbientTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get OpacityTextureEnabled(){return this._OpacityTextureEnabled}static set OpacityTextureEnabled(D){this._OpacityTextureEnabled!==D&&(this._OpacityTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get ReflectionTextureEnabled(){return this._ReflectionTextureEnabled}static set ReflectionTextureEnabled(D){this._ReflectionTextureEnabled!==D&&(this._ReflectionTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get EmissiveTextureEnabled(){return this._EmissiveTextureEnabled}static set EmissiveTextureEnabled(D){this._EmissiveTextureEnabled!==D&&(this._EmissiveTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get SpecularTextureEnabled(){return this._SpecularTextureEnabled}static set SpecularTextureEnabled(D){this._SpecularTextureEnabled!==D&&(this._SpecularTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get BumpTextureEnabled(){return this._BumpTextureEnabled}static set BumpTextureEnabled(D){this._BumpTextureEnabled!==D&&(this._BumpTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get LightmapTextureEnabled(){return this._LightmapTextureEnabled}static set LightmapTextureEnabled(D){this._LightmapTextureEnabled!==D&&(this._LightmapTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get RefractionTextureEnabled(){return this._RefractionTextureEnabled}static set RefractionTextureEnabled(D){this._RefractionTextureEnabled!==D&&(this._RefractionTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get ColorGradingTextureEnabled(){return this._ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(D){this._ColorGradingTextureEnabled!==D&&(this._ColorGradingTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get FresnelEnabled(){return this._FresnelEnabled}static set FresnelEnabled(D){this._FresnelEnabled!==D&&(this._FresnelEnabled=D,V.e.MarkAllMaterialsAsDirty(4))}static get ClearCoatTextureEnabled(){return this._ClearCoatTextureEnabled}static set ClearCoatTextureEnabled(D){this._ClearCoatTextureEnabled!==D&&(this._ClearCoatTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatBumpTextureEnabled(){return this._ClearCoatBumpTextureEnabled}static set ClearCoatBumpTextureEnabled(D){this._ClearCoatBumpTextureEnabled!==D&&(this._ClearCoatBumpTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get ClearCoatTintTextureEnabled(){return this._ClearCoatTintTextureEnabled}static set ClearCoatTintTextureEnabled(D){this._ClearCoatTintTextureEnabled!==D&&(this._ClearCoatTintTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get SheenTextureEnabled(){return this._SheenTextureEnabled}static set SheenTextureEnabled(D){this._SheenTextureEnabled!==D&&(this._SheenTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get AnisotropicTextureEnabled(){return this._AnisotropicTextureEnabled}static set AnisotropicTextureEnabled(D){this._AnisotropicTextureEnabled!==D&&(this._AnisotropicTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get ThicknessTextureEnabled(){return this._ThicknessTextureEnabled}static set ThicknessTextureEnabled(D){this._ThicknessTextureEnabled!==D&&(this._ThicknessTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get RefractionIntensityTextureEnabled(){return this._ThicknessTextureEnabled}static set RefractionIntensityTextureEnabled(D){this._RefractionIntensityTextureEnabled!==D&&(this._RefractionIntensityTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyIntensityTextureEnabled(){return this._TranslucencyIntensityTextureEnabled}static set TranslucencyIntensityTextureEnabled(D){this._TranslucencyIntensityTextureEnabled!==D&&(this._TranslucencyIntensityTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get TranslucencyColorTextureEnabled(){return this._TranslucencyColorTextureEnabled}static set TranslucencyColorTextureEnabled(D){this._TranslucencyColorTextureEnabled!==D&&(this._TranslucencyColorTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}static get IridescenceTextureEnabled(){return this._IridescenceTextureEnabled}static set IridescenceTextureEnabled(D){this._IridescenceTextureEnabled!==D&&(this._IridescenceTextureEnabled=D,V.e.MarkAllMaterialsAsDirty(1))}}N._DiffuseTextureEnabled=!0,N._BaseWeightTextureEnabled=!0,N._BaseDiffuseRoughnessTextureEnabled=!0,N._DetailTextureEnabled=!0,N._DecalMapEnabled=!0,N._AmbientTextureEnabled=!0,N._OpacityTextureEnabled=!0,N._ReflectionTextureEnabled=!0,N._EmissiveTextureEnabled=!0,N._SpecularTextureEnabled=!0,N._BumpTextureEnabled=!0,N._LightmapTextureEnabled=!0,N._RefractionTextureEnabled=!0,N._ColorGradingTextureEnabled=!0,N._FresnelEnabled=!0,N._ClearCoatTextureEnabled=!0,N._ClearCoatBumpTextureEnabled=!0,N._ClearCoatTintTextureEnabled=!0,N._SheenTextureEnabled=!0,N._AnisotropicTextureEnabled=!0,N._ThicknessTextureEnabled=!0,N._RefractionIntensityTextureEnabled=!0,N._TranslucencyIntensityTextureEnabled=!0,N._TranslucencyColorTextureEnabled=!0,N._IridescenceTextureEnabled=!0},12127:(D,l,G)=>{G.d(l,{e:()=>M});var V,N=G(11710);!function(D){D[D.Zero=0]="Zero",D[D.One=1]="One",D[D.MaxViewZ=2]="MaxViewZ"}(V||(V={}));class M{static CreateConfiguration(D){return M._Configurations[D]={defines:{},previousWorldMatrices:{},previousViewProjection:N.Matrix.Zero(),currentViewProjection:N.Matrix.Zero(),previousBones:{},lastUpdateFrameId:-1,excludedSkinnedMesh:[],reverseCulling:!1},M._Configurations[D]}static DeleteConfiguration(D){delete M._Configurations[D]}static GetConfiguration(D){return M._Configurations[D]}static AddUniformsAndSamplers(D,l){D.push("previousWorld","previousViewProjection","mPreviousBones")}static MarkAsDirty(D,l){for(const G of l)if(G.nb)for(const l of G.nb)l._removeDrawWrapper(D)}static PrepareDefines(D,l,G){if(!G._arePrePassDirty)return;const V=M._Configurations[D];if(!V)return;G.PREPASS=!0,G.PREPASS_COLOR=!1,G.PREPASS_COLOR_INDEX=-1;let N=0;for(let b=0;b<M.GeometryTextureDescriptions.length;b++){const D=M.GeometryTextureDescriptions[b],l=D.define,X=D.defineIndex,t=V.defines[X];void 0!==t?(G[l]=!0,G[X]=t,N++):(G[l]=!1,delete G[X])}G.SCENE_MRT_COUNT=N,G.BONES_VELOCITY_ENABLED=l.useBones&&l.computeBonesUsingShaders&&l.skeleton&&!l.skeleton.isUsingTextureForMatrices&&-1===V.excludedSkinnedMesh.indexOf(l)}static Bind(D,l,G,V,N){const b=M._Configurations[D];if(!b)return;const X=G.uD(),t=X.getEngine();if(b.reverseCulling&&t.setStateCullFaceType(X._mirroredCameraPosition?N.cullBackFaces:!N.cullBackFaces),(void 0!==b.defines.PREPASS_VELOCITY_INDEX||void 0!==b.defines.PREPASS_VELOCITY_LINEAR_INDEX)&&(b.previousWorldMatrices[G.uniqueId]||(b.previousWorldMatrices[G.uniqueId]=V.clone()),b.previousViewProjection||(b.previousViewProjection=X.getTransformMatrix().clone(),b.currentViewProjection=X.getTransformMatrix().clone()),b.currentViewProjection.updateFlag!==X.getTransformMatrix().updateFlag?(b.lastUpdateFrameId=t.frameId,b.previousViewProjection.V(b.currentViewProjection),b.currentViewProjection.V(X.getTransformMatrix())):b.lastUpdateFrameId!==t.frameId&&(b.lastUpdateFrameId=t.frameId,b.previousViewProjection.V(b.currentViewProjection)),l.setMatrix("previousWorld",b.previousWorldMatrices[G.uniqueId]),l.setMatrix("previousViewProjection",b.previousViewProjection),b.previousWorldMatrices[G.uniqueId]=V.clone(),G.useBones&&G.computeBonesUsingShaders&&G.skeleton)){const D=G.skeleton;if(!D.isUsingTextureForMatrices||-1===l.getUniformIndex("boneTextureWidth")){const V=D.getTransformMatrices(G);V&&(b.previousBones[G.uniqueId]||(b.previousBones[G.uniqueId]=V.slice()),l.setMatrices("mPreviousBones",b.previousBones[G.uniqueId]),b.previousBones[G.uniqueId].set(V))}}}}M.GeometryTextureDescriptions=[{type:0,name:"Irradiance",clearType:0,define:"PREPASS_IRRADIANCE",defineIndex:"PREPASS_IRRADIANCE_INDEX"},{type:1,name:"WorldPosition",clearType:0,define:"PREPASS_POSITION",defineIndex:"PREPASS_POSITION_INDEX"},{type:2,name:"Velocity",clearType:0,define:"PREPASS_VELOCITY",defineIndex:"PREPASS_VELOCITY_INDEX"},{type:3,name:"Reflectivity",clearType:0,define:"PREPASS_REFLECTIVITY",defineIndex:"PREPASS_REFLECTIVITY_INDEX"},{type:5,name:"ViewDepth",clearType:2,define:"PREPASS_DEPTH",defineIndex:"PREPASS_DEPTH_INDEX"},{type:6,name:"ViewNormal",clearType:0,define:"PREPASS_NORMAL",defineIndex:"PREPASS_NORMAL_INDEX"},{type:7,name:"AlbedoSqrt",clearType:0,define:"PREPASS_ALBEDO_SQRT",defineIndex:"PREPASS_ALBEDO_SQRT_INDEX"},{type:8,name:"WorldNormal",clearType:0,define:"PREPASS_WORLD_NORMAL",defineIndex:"PREPASS_WORLD_NORMAL_INDEX"},{type:9,name:"LocalPosition",clearType:0,define:"PREPASS_LOCAL_POSITION",defineIndex:"PREPASS_LOCAL_POSITION_INDEX"},{type:10,name:"ScreenDepth",clearType:1,define:"PREPASS_SCREENSPACE_DEPTH",defineIndex:"PREPASS_SCREENSPACE_DEPTH_INDEX"},{type:11,name:"LinearVelocity",clearType:0,define:"PREPASS_VELOCITY_LINEAR",defineIndex:"PREPASS_VELOCITY_LINEAR_INDEX"},{type:12,name:"Albedo",clearType:0,define:"PREPASS_ALBEDO",defineIndex:"PREPASS_ALBEDO_INDEX"},{type:13,name:"NormalizedViewDepth",clearType:1,define:"PREPASS_NORMALIZED_VIEW_DEPTH",defineIndex:"PREPASS_NORMALIZED_VIEW_DEPTH_INDEX"}],M._Configurations={}},12123:(D,l,G)=>{G.d(l,{d:()=>H});var V=G(11695),N=G(11703),M=G(12052),b=G(11571),X=G(11595),t=G(11621);const R=new RegExp("^([gimus]+)!");class n{constructor(D){this._plugins=[],this._activePlugins=[],this._activePluginsForExtraEvents=[],this._material=D,this._scene=D.uD(),this._engine=this._scene.getEngine()}_addPlugin(D){for(let V=0;V<this._plugins.length;++V)if(this._plugins[V].name===D.name)return!1;if(this._material._uniformBufferLayoutBuilt&&(this._material.resetDrawCache(),this._material._createUniformBuffer()),!D.isCompatible(this._material.shaderLanguage))throw`The plugin "${D.name}" can't be added to the material "${this._material.name}" because the plugin is not compatible with the shader language of the material.`;const l=D.getClassName();n._MaterialPluginClassToMainDefine[l]||(n._MaterialPluginClassToMainDefine[l]="MATERIALPLUGIN_"+ ++n._MaterialPluginCounter),this._material._callbackPluginEventGeneric=(D,l)=>this._handlePluginEvent(D,l),this._plugins.push(D),this._plugins.sort(((D,l)=>D.priority-l.priority)),this._codeInjectionPoints={};const G={};G[n._MaterialPluginClassToMainDefine[l]]={type:"boolean",default:!0};for(const V of this._plugins)V.collectDefines(G),this._collectPointNames("vertex",V.getCustomCode("vertex",this._material.shaderLanguage)),this._collectPointNames("fragment",V.getCustomCode("fragment",this._material.shaderLanguage));return this._defineNamesFromPlugins=G,!0}_activatePlugin(D){-1===this._activePlugins.indexOf(D)&&(this._activePlugins.push(D),this._activePlugins.sort(((D,l)=>D.priority-l.priority)),this._material._callbackPluginEventIsReadyForSubMesh=this._handlePluginEventIsReadyForSubMesh.bind(this),this._material._callbackPluginEventPrepareDefinesBeforeAttributes=this._handlePluginEventPrepareDefinesBeforeAttributes.bind(this),this._material._callbackPluginEventPrepareDefines=this._handlePluginEventPrepareDefines.bind(this),this._material._callbackPluginEventBindForSubMesh=this._handlePluginEventBindForSubMesh.bind(this),D.registerForExtraEvents&&(this._activePluginsForExtraEvents.push(D),this._activePluginsForExtraEvents.sort(((D,l)=>D.priority-l.priority)),this._material._callbackPluginEventHasRenderTargetTextures=this._handlePluginEventHasRenderTargetTextures.bind(this),this._material._callbackPluginEventFillRenderTargetTextures=this._handlePluginEventFillRenderTargetTextures.bind(this),this._material._callbackPluginEventHardBindForSubMesh=this._handlePluginEventHardBindForSubMesh.bind(this)))}getPlugin(D){for(let l=0;l<this._plugins.length;++l)if(this._plugins[l].name===D)return this._plugins[l];return null}_handlePluginEventIsReadyForSubMesh(D){let l=!0;for(const G of this._activePlugins)l=l&&G.isReadyForSubMesh(D.defines,this._scene,this._engine,D.subMesh);D.isReadyForSubMesh=l}_handlePluginEventPrepareDefinesBeforeAttributes(D){for(const l of this._activePlugins)l.prepareDefinesBeforeAttributes(D.defines,this._scene,D.mesh)}_handlePluginEventPrepareDefines(D){for(const l of this._activePlugins)l.prepareDefines(D.defines,this._scene,D.mesh)}_handlePluginEventHardBindForSubMesh(D){for(const l of this._activePluginsForExtraEvents)l.hardBindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,D.subMesh)}_handlePluginEventBindForSubMesh(D){for(const l of this._activePlugins)l.bindForSubMesh(this._material._uniformBuffer,this._scene,this._engine,D.subMesh)}_handlePluginEventHasRenderTargetTextures(D){let l=!1;for(const G of this._activePluginsForExtraEvents)if(l=G.hasRenderTargetTextures(),l)break;D.hasRenderTargetTextures=l}_handlePluginEventFillRenderTargetTextures(D){for(const l of this._activePluginsForExtraEvents)l.fillRenderTargetTextures(D.renderTargets)}_handlePluginEvent(D,l){switch(D){case 512:{const D=l;for(const l of this._activePlugins)l.getActiveTextures(D.activeTextures);break}case 256:{const D=l;for(const l of this._activePlugins)l.getAnimatables(D.animatables);break}case 1024:{const D=l;let G=!1;for(const l of this._activePlugins)if(G=l.hasTexture(D.texture),G)break;D.hasTexture=G;break}case 2:{const D=l;for(const l of this._plugins)l.dispose(D.forceDisposeTextures);break}case 4:l.defineNames=this._defineNamesFromPlugins;break;case 128:{const D=l;for(const l of this._activePlugins)D.fallbackRank=l.addFallbacks(D.defines,D.fallbacks,D.fallbackRank),l.getAttributes(D.attributes,this._scene,D.mesh);this._uniformList.length>0&&D.uniforms.push(...this._uniformList),this._samplerList.length>0&&D.samplers.push(...this._samplerList),this._uboList.length>0&&D.uniformBuffersNames.push(...this._uboList),D.customCode=this._injectCustomCode(D,D.customCode);break}case 8:{const D=l;this._uboDeclaration="",this._vertexDeclaration="",this._fragmentDeclaration="",this._uniformList=[],this._samplerList=[],this._uboList=[];const G=1===this._material.shaderLanguage;for(const l of this._plugins){const V=l.getUniforms(this._material.shaderLanguage);if(V){if(V.ubo)for(const l of V.ubo){if(l.size&&l.type){const V=l.arraySize??0;if(D.ubo.addUniform(l.name,l.size,V),G){let D;switch(l.type){case"mat4":D="mat4x4f";break;case"float":D="f32";break;default:D=`${l.type}f`}this._uboDeclaration+=V>0?`uniform ${l.name}: array<${D}, ${V}>;\n`:`uniform ${l.name}: ${D};\n`}else this._uboDeclaration+=`${l.type} ${l.name}${V>0?`[${V}]`:""};\n`}this._uniformList.push(l.name)}V.vertex&&(this._vertexDeclaration+=V.vertex+"\n"),V.fragment&&(this._fragmentDeclaration+=V.fragment+"\n")}l.getSamplers(this._samplerList),l.getUniformBuffersNames(this._uboList)}break}}}_collectPointNames(D,l){if(l)for(const G in l)this._codeInjectionPoints[D]||(this._codeInjectionPoints[D]={}),this._codeInjectionPoints[D][G]=!0}_injectCustomCode(D,l){return(G,V)=>{var N;l&&(V=l(G,V)),this._uboDeclaration&&(V=V.replace("#define ADDITIONAL_UBO_DECLARATION",this._uboDeclaration)),this._vertexDeclaration&&(V=V.replace("#define ADDITIONAL_VERTEX_DECLARATION",this._vertexDeclaration)),this._fragmentDeclaration&&(V=V.replace("#define ADDITIONAL_FRAGMENT_DECLARATION",this._fragmentDeclaration));const M=null===(N=this._codeInjectionPoints)||void 0===N?void 0:N[G];if(!M)return V;let b=null;for(let l in M){let N="";for(const V of this._activePlugins){var n;let M=null===(n=V.getCustomCode(G,this._material.shaderLanguage))||void 0===n?void 0:n[l];if(M){if(V.resolveIncludes){if(null===b){const l=0;b={defines:[],indexParameters:D.indexParameters,isFragment:!1,shouldUseHighPrecisionShader:this._engine._shouldUseHighPrecisionShader,processor:void 0,supportsUniformBuffers:this._engine.supportsUniformBuffers,shadersRepository:t.b.GetShadersRepository(l),includesShadersStore:t.b.GetIncludesShadersStore(l),version:void 0,platformName:this._engine.shaderPlatformName,processingContext:void 0,isNDCHalfZRange:this._engine.isNDCHalfZRange,useReverseDepthBuffer:this._engine.useReverseDepthBuffer,processCodeAfterIncludes:void 0}}b.isFragment="fragment"===G,(0,X.i)(M,b,(D=>M=D))}N+=M+"\n"}}if(N.length>0)if("!"===l.charAt(0)){l=l.substring(1);let D="g";if("!"===l.charAt(0))D="",l=l.substring(1);else{const G=R.exec(l);G&&G.length>=2&&(D=G[1],l=l.substring(D.length+1))}D.indexOf("g")<0&&(D+="g");const G=V,M=new RegExp(l,D);let b=M.exec(G);for(;null!==b;){let D=N;for(let l=0;l<b.length;++l)D=D.replace("$"+l,b[l]);V=V.replace(b[0],D),b=M.exec(G)}}else{const D="#define "+l;V=V.replace(D,"\n"+N+"\n"+D)}}return V}}}n._MaterialPluginClassToMainDefine={},n._MaterialPluginCounter=0,b.d.OnEnginesDisposedObservable.add((()=>{K()}));const g=[];let j=!1,e=null;function K(){g.length=0,j=!1,M.c.OnEventObservable.remove(e),e=null}var F=G(11739),d=G(11667);class H{isCompatible(D){return 0===D}_enable(D){D&&this._pluginManager._activatePlugin(this)}constructor(D,l,G,V){let N=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],b=arguments.length>6&&void 0!==arguments[6]&&arguments[6];this.priority=500,this.resolveIncludes=!1,this.registerForExtraEvents=!1,this.doNotSerialize=!1,this._material=D,this.name=l,this.priority=G,this.resolveIncludes=b,D.pluginManager||(D.pluginManager=new n(D),D.Vb.add((()=>{D.pluginManager=void 0}))),this._pluginDefineNames=V,this._pluginManager=D.pluginManager,N&&this._pluginManager._addPlugin(this),M&&this._enable(!0),this.markAllDefinesAsDirty=D._dirtyCallbacks[127]}getClassName(){return"MaterialPluginBase"}isReadyForSubMesh(D,l,G,V){return!0}hardBindForSubMesh(D,l,G,V){}bindForSubMesh(D,l,G,V){}dispose(D){}getCustomCode(D){return null}collectDefines(D){if(this._pluginDefineNames)for(const l of Object.keys(this._pluginDefineNames)){if("_"===l[0])continue;const G=typeof this._pluginDefineNames[l];D[l]={type:"number"===G?"number":"string"===G?"string":"boolean"===G?"boolean":"object",default:this._pluginDefineNames[l]}}}prepareDefinesBeforeAttributes(D,l,G){}prepareDefines(D,l,G){}hasTexture(D){return!1}hasRenderTargetTextures(){return!1}fillRenderTargetTextures(D){}getActiveTextures(D){}getAnimatables(D){}addFallbacks(D,l,G){return G}getSamplers(D){}getAttributes(D,l,G){}getUniformBuffersNames(D){}getUniforms(){return{}}copyTo(D){F.c.Clone((()=>D),this)}serialize(){return F.c.Serialize(this)}parse(D,l,G){F.c.Parse((()=>this),D,l,G)}}(0,V.b)([(0,N.L)()],H.prototype,"name",void 0),(0,V.b)([(0,N.L)()],H.prototype,"priority",void 0),(0,V.b)([(0,N.L)()],H.prototype,"resolveIncludes",void 0),(0,V.b)([(0,N.L)()],H.prototype,"registerForExtraEvents",void 0),(0,d.c)("BABYLON.MaterialPluginBase",H)},12106:(D,l,G)=>{G.d(l,{e:()=>V});class V{constructor(){this.previousWorldMatrices={},this.previousBones={}}static AddUniforms(D){D.push("previousWorld","previousViewProjection","mPreviousBones")}static AddSamplers(D){}bindForSubMesh(D,l,G,V,N){if(l.prePassRenderer&&l.prePassRenderer.enabled&&l.prePassRenderer.currentRTisSceneRT&&(-1!==l.prePassRenderer.getIndex(2)||-1!==l.prePassRenderer.getIndex(11))){this.previousWorldMatrices[G.uniqueId]||(this.previousWorldMatrices[G.uniqueId]=V.clone()),this.previousViewProjection||(this.previousViewProjection=l.getTransformMatrix().clone(),this.currentViewProjection=l.getTransformMatrix().clone());const N=l.getEngine();this.currentViewProjection.updateFlag!==l.getTransformMatrix().updateFlag?(this._lastUpdateFrameId=N.frameId,this.previousViewProjection.V(this.currentViewProjection),this.currentViewProjection.V(l.getTransformMatrix())):this._lastUpdateFrameId!==N.frameId&&(this._lastUpdateFrameId=N.frameId,this.previousViewProjection.V(this.currentViewProjection)),D.setMatrix("previousWorld",this.previousWorldMatrices[G.uniqueId]),D.setMatrix("previousViewProjection",this.previousViewProjection),this.previousWorldMatrices[G.uniqueId]=V.clone()}}}},12102:(D,l,G)=>{G.d(l,{Hl:()=>I});var V=G(11695),N=G(11703),M=G(11811),b=G(11963),X=G(11755),t=G(11788),R=G(12106),n=G(11970),g=G(12052),j=G(12112),e=G(12045),K=G(11686),F=G(11667),d=G(12114),H=G(12038),h=G(12121),x=G(12100),r=G(12097),o=G(11739),L=G(12127);const u={effect:null,subMesh:null};class B extends j.c{constructor(D){super(D),this.MAINUV1=!1,this.MAINUV2=!1,this.MAINUV3=!1,this.MAINUV4=!1,this.MAINUV5=!1,this.MAINUV6=!1,this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.UV1=!1,this.UV2=!1,this.UV3=!1,this.UV4=!1,this.UV5=!1,this.UV6=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.IMAGEPROCESSING=!1,this.VIGNETTE=!1,this.VIGNETTEBLENDMODEMULTIPLY=!1,this.VIGNETTEBLENDMODEOPAQUE=!1,this.TONEMAPPING=0,this.CONTRAST=!1,this.COLORCURVES=!1,this.COLORGRADING=!1,this.COLORGRADING3D=!1,this.SAMPLER3DGREENDEPTH=!1,this.SAMPLER3DBGRMAP=!1,this.DITHER=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.EXPOSURE=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}setReflectionMode(D){const l=["REFLECTIONMAP_CUBIC","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_PLANAR","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED"];for(const G of l)this[G]=G===D}}class I extends e.e{get imageProcessingConfiguration(){return this._imageProcessingConfiguration}set imageProcessingConfiguration(D){this._attachImageProcessingConfiguration(D),this._markAllSubMeshesAsImageProcessingDirty()}_attachImageProcessingConfiguration(D){D!==this._imageProcessingConfiguration&&(this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),this._imageProcessingConfiguration=D||this.uD().imageProcessingConfiguration,this._imageProcessingConfiguration&&(this._imageProcessingObserver=this._imageProcessingConfiguration.onUpdateParameters.add((()=>{this._markAllSubMeshesAsImageProcessingDirty()}))))}get isPrePassCapable(){return!this.disableDepthWrite}get cameraColorCurvesEnabled(){return this.imageProcessingConfiguration.colorCurvesEnabled}set cameraColorCurvesEnabled(D){this.imageProcessingConfiguration.colorCurvesEnabled=D}get cameraColorGradingEnabled(){return this.imageProcessingConfiguration.colorGradingEnabled}set cameraColorGradingEnabled(D){this.imageProcessingConfiguration.colorGradingEnabled=D}get cameraToneMappingEnabled(){return this._imageProcessingConfiguration.toneMappingEnabled}set cameraToneMappingEnabled(D){this._imageProcessingConfiguration.toneMappingEnabled=D}get cameraExposure(){return this._imageProcessingConfiguration.exposure}set cameraExposure(D){this._imageProcessingConfiguration.exposure=D}get cameraContrast(){return this._imageProcessingConfiguration.contrast}set cameraContrast(D){this._imageProcessingConfiguration.contrast=D}get cameraColorGradingTexture(){return this._imageProcessingConfiguration.colorGradingTexture}set cameraColorGradingTexture(D){this._imageProcessingConfiguration.colorGradingTexture=D}get cameraColorCurves(){return this._imageProcessingConfiguration.colorCurves}set cameraColorCurves(D){this._imageProcessingConfiguration.colorCurves=D}get canRenderToMRT(){return!0}constructor(D,l){super(D,l,void 0,arguments.length>2&&void 0!==arguments[2]&&arguments[2]||I.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new X.hl(0,0,0),this.diffuseColor=new X.hl(1,1,1),this.specularColor=new X.hl(1,1,1),this.emissiveColor=new X.hl(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new M.f(16),this._globalAmbientColor=new X.hl(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new h.e(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new R.e,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),I.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),I.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(I.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(I.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"Hl"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===g.c.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.eb&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==g.c.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.eb||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(D,l){let V=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this._uniformBufferLayoutBuilt||this.buildUniformLayout();const N=l._drawWrapper;if(N.effect&&this.isFrozen&&N._wasPreviouslyReady&&N._wasPreviouslyUsingInstances===V)return!0;l.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),l.materialDefines=new B(this._eventInfo.defineNames));const M=this.uD(),b=l.materialDefines;if(this._isReadyForSubMesh(l))return!0;const X=M.getEngine();b._needNormals=(0,r.K)(M,D,b,!0,this._maxSimultaneousLights,this._disableLighting),(0,r.T)(M,b);const g=this.needAlphaBlendingForMesh(D)&&this.uD().useOrderIndependentTransparency;if((0,r.X)(M,b,this.canRenderToMRT&&!g),(0,r.W)(M,b,g),L.e.PrepareDefines(X.currentRenderPassId,D,b),b._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,b._needUVs=!1;for(let D=1;D<=6;++D)b["MAINUV"+D]=!1;if(M.texturesEnabled){if(b.DIFFUSEDIRECTUV=0,b.BUMPDIRECTUV=0,b.AMBIENTDIRECTUV=0,b.OPACITYDIRECTUV=0,b.EMISSIVEDIRECTUV=0,b.SPECULARDIRECTUV=0,b.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&I.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._diffuseTexture,b,"DIFFUSE")}else b.DIFFUSE=!1;if(this._ambientTexture&&I.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._ambientTexture,b,"AMBIENT")}else b.AMBIENT=!1;if(this._opacityTexture&&I.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._opacityTexture,b,"OPACITY"),b.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else b.OPACITY=!1;if(this._reflectionTexture&&I.ReflectionTextureEnabled){if(!this._reflectionTexture.isReadyOrNotBlocking())return!1;switch(b._needNormals=!0,b.REFLECTION=!0,b.ROUGHNESS=this._roughness>0,b.REFLECTIONOVERALPHA=this._useReflectionOverAlpha,b.INVERTCUBICMAP=this._reflectionTexture.coordinatesMode===K.b.INVCUBIC_MODE,b.REFLECTIONMAP_3D=this._reflectionTexture.isCube,b.REFLECTIONMAP_OPPOSITEZ=b.REFLECTIONMAP_3D&&this.uD().useRightHandedSystem?!this._reflectionTexture.invertZ:this._reflectionTexture.invertZ,b.RGBDREFLECTION=this._reflectionTexture.isRGBD,this._reflectionTexture.coordinatesMode){case K.b.EXPLICIT_MODE:b.setReflectionMode("REFLECTIONMAP_EXPLICIT");break;case K.b.PLANAR_MODE:b.setReflectionMode("REFLECTIONMAP_PLANAR");break;case K.b.PROJECTION_MODE:b.setReflectionMode("REFLECTIONMAP_PROJECTION");break;case K.b.SKYBOX_MODE:b.setReflectionMode("REFLECTIONMAP_SKYBOX");break;case K.b.SPHERICAL_MODE:b.setReflectionMode("REFLECTIONMAP_SPHERICAL");break;case K.b.EQUIRECTANGULAR_MODE:b.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR");break;case K.b.FIXED_EQUIRECTANGULAR_MODE:b.setReflectionMode("REFLECTIONMAP_EQUIRECTANGULAR_FIXED");break;case K.b.FIXED_EQUIRECTANGULAR_MIRRORED_MODE:b.setReflectionMode("REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED");break;case K.b.CUBIC_MODE:case K.b.INVCUBIC_MODE:default:b.setReflectionMode("REFLECTIONMAP_CUBIC")}b.USE_LOCAL_REFLECTIONMAP_CUBIC=!!this._reflectionTexture.boundingBoxSize}else b.REFLECTION=!1,b.REFLECTIONMAP_OPPOSITEZ=!1;if(this._emissiveTexture&&I.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._emissiveTexture,b,"EMISSIVE")}else b.EMISSIVE=!1;if(this._lightmapTexture&&I.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._lightmapTexture,b,"LIGHTMAP"),b.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,b.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else b.LIGHTMAP=!1;if(this._specularTexture&&I.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,r.O)(this._specularTexture,b,"SPECULAR"),b.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else b.SPECULAR=!1;if(M.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&I.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,r.O)(this._bumpTexture,b,"BUMP"),b.PARALLAX=this._useParallax,b.PARALLAX_RHS=M.useRightHandedSystem,b.PARALLAXOCCLUSION=this._useParallaxOcclusion,b.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else b.BUMP=!1,b.PARALLAX=!1,b.PARALLAX_RHS=!1,b.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&I.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;b._needUVs=!0,b.REFRACTION=!0,b.REFRACTIONMAP_3D=this._refractionTexture.isCube,b.RGBDREFRACTION=this._refractionTexture.isRGBD,b.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else b.REFRACTION=!1;b.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else b.DIFFUSE=!1,b.AMBIENT=!1,b.OPACITY=!1,b.REFLECTION=!1,b.EMISSIVE=!1,b.LIGHTMAP=!1,b.BUMP=!1,b.REFRACTION=!1;b.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),b.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,b.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,b.SPECULAROVERALPHA=this._useSpecularOverAlpha,b.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,b.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,b.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(D)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=b,this._eventInfo.subMesh=l,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(b._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(b),b.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,b.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(b._areFresnelDirty&&(I.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(b.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,b.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,b.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,b.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,b.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,b.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,b._needNormals=!0,b.FRESNEL=!0):b.FRESNEL=!1),b.AREALIGHTUSED)for(let G=0;G<D.lightSources.length;G++)if(!D.lightSources[G]._isReady())return!1;(0,r.R)(D,M,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(D),b,this._applyDecalMapAfterDetailMap),(0,r.J)(M,X,this,b,V,null,l.getRenderingMesh().hasThinInstances),this._eventInfo.defines=b,this._eventInfo.mesh=D,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,r.G)(D,b,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let j=!1;if(b.isDirty){const V=b._areLightsDisposed;b.markAsProcessed();const N=new H.d;b.REFLECTION&&N.addFallback(0,"REFLECTION"),b.SPECULAR&&N.addFallback(0,"SPECULAR"),b.BUMP&&N.addFallback(0,"BUMP"),b.PARALLAX&&N.addFallback(1,"PARALLAX"),b.PARALLAX_RHS&&N.addFallback(1,"PARALLAX_RHS"),b.PARALLAXOCCLUSION&&N.addFallback(0,"PARALLAXOCCLUSION"),b.SPECULAROVERALPHA&&N.addFallback(0,"SPECULAROVERALPHA"),b.FOG&&N.addFallback(1,"FOG"),b.POINTSIZE&&N.addFallback(0,"POINTSIZE"),b.LOGARITHMICDEPTH&&N.addFallback(0,"LOGARITHMICDEPTH"),(0,r.s)(b,N,this._maxSimultaneousLights),b.SPECULARTERM&&N.addFallback(0,"SPECULARTERM"),b.DIFFUSEFRESNEL&&N.addFallback(1,"DIFFUSEFRESNEL"),b.OPACITYFRESNEL&&N.addFallback(2,"OPACITYFRESNEL"),b.REFLECTIONFRESNEL&&N.addFallback(3,"REFLECTIONFRESNEL"),b.EMISSIVEFRESNEL&&N.addFallback(4,"EMISSIVEFRESNEL"),b.FRESNEL&&N.addFallback(4,"FRESNEL"),b.MULTIVIEW&&N.addFallback(0,"MULTIVIEW");const g=[t.e.PositionKind];b.NORMAL&&g.push(t.e.NormalKind),b.TANGENT&&g.push(t.e.TangentKind);for(let D=1;D<=6;++D)b["UV"+D]&&g.push(`uv${1===D?"":D}`);b.VERTEXCOLOR&&g.push(t.e.ColorKind),(0,r.x)(g,D,b,N),(0,r.y)(g,b),(0,r.B)(g,D,b),(0,r.t)(g,D,b);let e="default";const K=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vReflectionPosition","vReflectionSize","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],F=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"],d=["Material","Scene","Mesh"],h={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:b.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=N,this._eventInfo.fallbackRank=0,this._eventInfo.defines=b,this._eventInfo.uniforms=K,this._eventInfo.attributes=g,this._eventInfo.samplers=F,this._eventInfo.uniformBuffersNames=d,this._eventInfo.customCode=void 0,this._eventInfo.mesh=D,this._eventInfo.indexParameters=h,this._callbackPluginEventGeneric(128,this._eventInfo),L.e.AddUniformsAndSamplers(K,F),R.e.AddUniforms(K),R.e.AddSamplers(F),n.b&&(n.b.PrepareUniforms(K,b),n.b.PrepareSamplers(F,b)),(0,r.$)({uniformsNames:K,uniformBuffersNames:d,samplers:F,defines:b,maxSimultaneousLights:this._maxSimultaneousLights}),(0,x.d)(K);const o={};this.customShaderNameResolve&&(e=this.customShaderNameResolve(e,K,d,F,b,g,o));const B=b.toString(),I=l.effect;let W=M.getEngine().createEffect(e,{attributes:g,uniformsNames:K,uniformBuffersNames:d,samplers:F,defines:B,fallbacks:N,onCompiled:this.onCompiled,onError:this.onError,indexParameters:h,processFinalCode:o.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:b.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([G.e(41),G.e(64)]).then(G.bind(G,14233)),Promise.all([G.e(39),G.e(65)]).then(G.bind(G,14386))]):await Promise.all([Promise.all([G.e(34),G.e(67)]).then(G.bind(G,14444)),Promise.all([G.e(33),G.e(68)]).then(G.bind(G,14582))]),this._shadersLoaded=!0}},X);if(this._eventInfo.customCode=void 0,W)if(this._onEffectCreatedObservable&&(u.effect=W,u.subMesh=l,this._onEffectCreatedObservable.notifyObservers(u)),this.allowShaderHotSwapping&&I&&!W.isReady()){if(W=I,b.markAsUnprocessed(),j=this.isFrozen,V)return b._areLightsDisposed=!0,!1}else M.resetCachedMaterial(),l.setEffect(W,b,this._materialContext)}return!(!l.effect||!l.effect.isReady())&&(b._renderId=M.getRenderId(),N._wasPreviouslyReady=!j,N._wasPreviouslyUsingInstances=V,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const D=this._uniformBuffer;D.addUniform("diffuseLeftColor",4),D.addUniform("diffuseRightColor",4),D.addUniform("opacityParts",4),D.addUniform("reflectionLeftColor",4),D.addUniform("reflectionRightColor",4),D.addUniform("refractionLeftColor",4),D.addUniform("refractionRightColor",4),D.addUniform("emissiveLeftColor",4),D.addUniform("emissiveRightColor",4),D.addUniform("vDiffuseInfos",2),D.addUniform("vAmbientInfos",2),D.addUniform("vOpacityInfos",2),D.addUniform("vReflectionInfos",2),D.addUniform("vReflectionPosition",3),D.addUniform("vReflectionSize",3),D.addUniform("vEmissiveInfos",2),D.addUniform("vLightmapInfos",2),D.addUniform("vSpecularInfos",2),D.addUniform("vBumpInfos",3),D.addUniform("diffuseMatrix",16),D.addUniform("ambientMatrix",16),D.addUniform("opacityMatrix",16),D.addUniform("reflectionMatrix",16),D.addUniform("emissiveMatrix",16),D.addUniform("lightmapMatrix",16),D.addUniform("specularMatrix",16),D.addUniform("bumpMatrix",16),D.addUniform("vTangentSpaceParams",2),D.addUniform("pointSize",1),D.addUniform("alphaCutOff",1),D.addUniform("refractionMatrix",16),D.addUniform("vRefractionInfos",4),D.addUniform("vRefractionPosition",3),D.addUniform("vRefractionSize",3),D.addUniform("vSpecularColor",4),D.addUniform("vEmissiveColor",3),D.addUniform("vDiffuseColor",4),D.addUniform("vAmbientColor",3),D.addUniform("cameraInfo",4),super.buildUniformLayout()}bindForSubMesh(D,l,G){const V=this.uD(),N=G.materialDefines;if(!N)return;const M=G.effect;if(!M)return;this._activeEffect=M,l.getMeshUniformBuffer().bindToEffect(M,"Mesh"),l.transferToEffect(D),this._uniformBuffer.bindToEffect(M,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,V,l,D,this.isFrozen),L.e.Bind(V.getEngine().currentRenderPassId,this._activeEffect,l,D,this);const t=V.activeCamera;t?this._uniformBuffer.updateFloat4("cameraInfo",t.Kb,t.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=G,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),N.OBJECTSPACE_NORMALMAP&&(D.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const R=this._mustRebind(V,M,G,l.visibility);(0,r.d)(l,M);const n=this._uniformBuffer;if(R){if(this.bindViewProjection(M),!n.useUbo||!this.isFrozen||!n.isSync||G._drawWrapper._forceRebindOnNextCall){if(I.FresnelEnabled&&N.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(n.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),n.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&n.updateColor4("opacityParts",new X.hl(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(n.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),n.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(n.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),n.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(n.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),n.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),V.texturesEnabled){if(this._diffuseTexture&&I.DiffuseTextureEnabled&&(n.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,r.q)(this._diffuseTexture,n,"diffuse")),this._ambientTexture&&I.AmbientTextureEnabled&&(n.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,r.q)(this._ambientTexture,n,"ambient")),this._opacityTexture&&I.OpacityTextureEnabled&&(n.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,r.q)(this._opacityTexture,n,"opacity")),this._hasAlphaChannel()&&n.updateFloat("alphaCutOff",this.alphaCutOff),this._reflectionTexture&&I.ReflectionTextureEnabled){if(n.updateFloat2("vReflectionInfos",this._reflectionTexture.level,this.roughness),n.Hb("reflectionMatrix",this._reflectionTexture.getReflectionTextureMatrix()),this._reflectionTexture.boundingBoxSize){const D=this._reflectionTexture;n.updateVector3("vReflectionPosition",D.boundingBoxPosition),n.updateVector3("vReflectionSize",D.boundingBoxSize)}}else n.updateFloat2("vReflectionInfos",0,this.roughness);if(this._emissiveTexture&&I.EmissiveTextureEnabled&&(n.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,r.q)(this._emissiveTexture,n,"emissive")),this._lightmapTexture&&I.LightmapTextureEnabled&&(n.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,r.q)(this._lightmapTexture,n,"lightmap")),this._specularTexture&&I.SpecularTextureEnabled&&(n.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,r.q)(this._specularTexture,n,"specular")),this._bumpTexture&&V.getEngine().getCaps().standardDerivatives&&I.BumpTextureEnabled&&(n.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,r.q)(this._bumpTexture,n,"bump"),V._mirroredCameraPosition?n.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):n.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&I.RefractionTextureEnabled){let D=1;if(this._refractionTexture.isCube||(n.Hb("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(D=this._refractionTexture.depth)),n.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,D,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const D=this._refractionTexture;n.updateVector3("vRefractionPosition",D.boundingBoxPosition),n.updateVector3("vRefractionSize",D.boundingBoxSize)}}}this.pointsCloud&&n.updateFloat("pointSize",this.pointSize),n.updateColor4("vSpecularColor",this.specularColor,this.specularPower),n.updateColor3("vEmissiveColor",I.EmissiveTextureEnabled?this.emissiveColor:X.hl.BlackReadOnly),n.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),V.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),n.updateColor3("vAmbientColor",this._globalAmbientColor)}V.texturesEnabled&&(this._diffuseTexture&&I.DiffuseTextureEnabled&&M.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&I.AmbientTextureEnabled&&M.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&I.OpacityTextureEnabled&&M.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&I.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?M.setTexture("reflectionCubeSampler",this._reflectionTexture):M.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&I.EmissiveTextureEnabled&&M.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&I.LightmapTextureEnabled&&M.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&I.SpecularTextureEnabled&&M.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&V.getEngine().getCaps().standardDerivatives&&I.BumpTextureEnabled&&M.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&I.RefractionTextureEnabled&&(this._refractionTexture.isCube?M.setTexture("refractionCubeSampler",this._refractionTexture):M.setTexture("refraction2DSampler",this._refractionTexture))),this.uD().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(l)&&this.uD().depthPeelingRenderer.bind(M),this._eventInfo.subMesh=G,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,x.f)(M,this,V),this.bindEyePosition(M)}else V.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);if(R||!this.isFrozen){var g;if(V.lightsEnabled&&!this._disableLighting&&(0,r.i)(V,l,M,N,this._maxSimultaneousLights),(V.fogEnabled&&l.applyFog&&V.fogMode!==b.b.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||l.receiveShadows||N.PREPASS)&&this.bindView(M),(0,r.g)(V,l,M),N.NUM_MORPH_INFLUENCERS&&(0,r.k)(l,M),N.BAKED_VERTEX_ANIMATION_TEXTURE)null===(g=l.bakedVertexAnimationManager)||void 0===g||g.bind(M,N.INSTANCES);this.useLogarithmicDepth&&(0,r.j)(N,M,V),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)}this._afterBind(l,this._activeEffect,G),n.update()}getAnimatables(){const D=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&D.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&D.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&D.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&D.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&D.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&D.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&D.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&D.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&D.push(this._refractionTexture),D}getActiveTextures(){const D=super.getActiveTextures();return this._diffuseTexture&&D.push(this._diffuseTexture),this._ambientTexture&&D.push(this._ambientTexture),this._opacityTexture&&D.push(this._opacityTexture),this._reflectionTexture&&D.push(this._reflectionTexture),this._emissiveTexture&&D.push(this._emissiveTexture),this._specularTexture&&D.push(this._specularTexture),this._bumpTexture&&D.push(this._bumpTexture),this._lightmapTexture&&D.push(this._lightmapTexture),this._refractionTexture&&D.push(this._refractionTexture),D}hasTexture(D){return!!super.hasTexture(D)||(this._diffuseTexture===D||(this._ambientTexture===D||(this._opacityTexture===D||(this._reflectionTexture===D||(this._emissiveTexture===D||(this._specularTexture===D||(this._bumpTexture===D||(this._lightmapTexture===D||this._refractionTexture===D))))))))}dispose(D,l){var G,V,N,M,b,X,t,R,n;l&&(null===(G=this._diffuseTexture)||void 0===G||G.dispose(),null===(V=this._ambientTexture)||void 0===V||V.dispose(),null===(N=this._opacityTexture)||void 0===N||N.dispose(),null===(M=this._reflectionTexture)||void 0===M||M.dispose(),null===(b=this._emissiveTexture)||void 0===b||b.dispose(),null===(X=this._specularTexture)||void 0===X||X.dispose(),null===(t=this._bumpTexture)||void 0===t||t.dispose(),null===(R=this._lightmapTexture)||void 0===R||R.dispose(),null===(n=this._refractionTexture)||void 0===n||n.dispose());this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(D,l)}clone(D){let l=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],G=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const V=o.c.Clone((()=>new I(D,this.uD())),this,{cloneTexturesOnlyOnce:l});return V.name=D,V.id=D,this.stencil.copyTo(V.stencil),this._clonePlugins(V,G),V}static Parse(D,l,G){const V=o.c.Parse((()=>new I(D.name,l)),D,l,G);return D.stencil&&V.stencil.parse(D.stencil,l,G),g.c._ParsePlugins(D,V,l,G),V}static get DiffuseTextureEnabled(){return d.e.DiffuseTextureEnabled}static set DiffuseTextureEnabled(D){d.e.DiffuseTextureEnabled=D}static get DetailTextureEnabled(){return d.e.DetailTextureEnabled}static set DetailTextureEnabled(D){d.e.DetailTextureEnabled=D}static get AmbientTextureEnabled(){return d.e.AmbientTextureEnabled}static set AmbientTextureEnabled(D){d.e.AmbientTextureEnabled=D}static get OpacityTextureEnabled(){return d.e.OpacityTextureEnabled}static set OpacityTextureEnabled(D){d.e.OpacityTextureEnabled=D}static get ReflectionTextureEnabled(){return d.e.ReflectionTextureEnabled}static set ReflectionTextureEnabled(D){d.e.ReflectionTextureEnabled=D}static get EmissiveTextureEnabled(){return d.e.EmissiveTextureEnabled}static set EmissiveTextureEnabled(D){d.e.EmissiveTextureEnabled=D}static get SpecularTextureEnabled(){return d.e.SpecularTextureEnabled}static set SpecularTextureEnabled(D){d.e.SpecularTextureEnabled=D}static get BumpTextureEnabled(){return d.e.BumpTextureEnabled}static set BumpTextureEnabled(D){d.e.BumpTextureEnabled=D}static get LightmapTextureEnabled(){return d.e.LightmapTextureEnabled}static set LightmapTextureEnabled(D){d.e.LightmapTextureEnabled=D}static get RefractionTextureEnabled(){return d.e.RefractionTextureEnabled}static set RefractionTextureEnabled(D){d.e.RefractionTextureEnabled=D}static get ColorGradingTextureEnabled(){return d.e.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(D){d.e.ColorGradingTextureEnabled=D}static get FresnelEnabled(){return d.e.FresnelEnabled}static set FresnelEnabled(D){d.e.FresnelEnabled=D}}I.ForceGLSL=!1,(0,V.b)([(0,N.B)("diffuseTexture")],I.prototype,"_diffuseTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],I.prototype,"diffuseTexture",void 0),(0,V.b)([(0,N.B)("ambientTexture")],I.prototype,"_ambientTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"ambientTexture",void 0),(0,V.b)([(0,N.B)("opacityTexture")],I.prototype,"_opacityTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],I.prototype,"opacityTexture",void 0),(0,V.b)([(0,N.B)("reflectionTexture")],I.prototype,"_reflectionTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"reflectionTexture",void 0),(0,V.b)([(0,N.B)("emissiveTexture")],I.prototype,"_emissiveTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"emissiveTexture",void 0),(0,V.b)([(0,N.B)("specularTexture")],I.prototype,"_specularTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"specularTexture",void 0),(0,V.b)([(0,N.B)("bumpTexture")],I.prototype,"_bumpTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"bumpTexture",void 0),(0,V.b)([(0,N.B)("lightmapTexture")],I.prototype,"_lightmapTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"lightmapTexture",void 0),(0,V.b)([(0,N.B)("refractionTexture")],I.prototype,"_refractionTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"refractionTexture",void 0),(0,V.b)([(0,N.l)("ambient")],I.prototype,"ambientColor",void 0),(0,V.b)([(0,N.l)("diffuse")],I.prototype,"diffuseColor",void 0),(0,V.b)([(0,N.l)("specular")],I.prototype,"specularColor",void 0),(0,V.b)([(0,N.l)("emissive")],I.prototype,"emissiveColor",void 0),(0,V.b)([(0,N.L)()],I.prototype,"specularPower",void 0),(0,V.b)([(0,N.L)("useAlphaFromDiffuseTexture")],I.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesAndMiscDirty")],I.prototype,"useAlphaFromDiffuseTexture",void 0),(0,V.b)([(0,N.L)("useEmissiveAsIllumination")],I.prototype,"_useEmissiveAsIllumination",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useEmissiveAsIllumination",void 0),(0,V.b)([(0,N.L)("linkEmissiveWithDiffuse")],I.prototype,"_linkEmissiveWithDiffuse",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"linkEmissiveWithDiffuse",void 0),(0,V.b)([(0,N.L)("useSpecularOverAlpha")],I.prototype,"_useSpecularOverAlpha",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useSpecularOverAlpha",void 0),(0,V.b)([(0,N.L)("useReflectionOverAlpha")],I.prototype,"_useReflectionOverAlpha",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useReflectionOverAlpha",void 0),(0,V.b)([(0,N.L)("disableLighting")],I.prototype,"_disableLighting",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsLightsDirty")],I.prototype,"disableLighting",void 0),(0,V.b)([(0,N.L)("useObjectSpaceNormalMap")],I.prototype,"_useObjectSpaceNormalMap",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useObjectSpaceNormalMap",void 0),(0,V.b)([(0,N.L)("useParallax")],I.prototype,"_useParallax",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useParallax",void 0),(0,V.b)([(0,N.L)("useParallaxOcclusion")],I.prototype,"_useParallaxOcclusion",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useParallaxOcclusion",void 0),(0,V.b)([(0,N.L)()],I.prototype,"parallaxScaleBias",void 0),(0,V.b)([(0,N.L)("roughness")],I.prototype,"_roughness",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"roughness",void 0),(0,V.b)([(0,N.L)()],I.prototype,"indexOfRefraction",void 0),(0,V.b)([(0,N.L)()],I.prototype,"invertRefractionY",void 0),(0,V.b)([(0,N.L)()],I.prototype,"alphaCutOff",void 0),(0,V.b)([(0,N.L)("useLightmapAsShadowmap")],I.prototype,"_useLightmapAsShadowmap",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useLightmapAsShadowmap",void 0),(0,V.b)([(0,N.o)("diffuseFresnelParameters")],I.prototype,"_diffuseFresnelParameters",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelDirty")],I.prototype,"diffuseFresnelParameters",void 0),(0,V.b)([(0,N.o)("opacityFresnelParameters")],I.prototype,"_opacityFresnelParameters",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelAndMiscDirty")],I.prototype,"opacityFresnelParameters",void 0),(0,V.b)([(0,N.o)("reflectionFresnelParameters")],I.prototype,"_reflectionFresnelParameters",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelDirty")],I.prototype,"reflectionFresnelParameters",void 0),(0,V.b)([(0,N.o)("refractionFresnelParameters")],I.prototype,"_refractionFresnelParameters",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelDirty")],I.prototype,"refractionFresnelParameters",void 0),(0,V.b)([(0,N.o)("emissiveFresnelParameters")],I.prototype,"_emissiveFresnelParameters",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelDirty")],I.prototype,"emissiveFresnelParameters",void 0),(0,V.b)([(0,N.L)("useReflectionFresnelFromSpecular")],I.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsFresnelDirty")],I.prototype,"useReflectionFresnelFromSpecular",void 0),(0,V.b)([(0,N.L)("useGlossinessFromSpecularMapAlpha")],I.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,V.b)([(0,N.L)("maxSimultaneousLights")],I.prototype,"_maxSimultaneousLights",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsLightsDirty")],I.prototype,"maxSimultaneousLights",void 0),(0,V.b)([(0,N.L)("invertNormalMapX")],I.prototype,"_invertNormalMapX",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"invertNormalMapX",void 0),(0,V.b)([(0,N.L)("invertNormalMapY")],I.prototype,"_invertNormalMapY",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"invertNormalMapY",void 0),(0,V.b)([(0,N.L)("twoSidedLighting")],I.prototype,"_twoSidedLighting",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsTexturesDirty")],I.prototype,"twoSidedLighting",void 0),(0,V.b)([(0,N.L)("applyDecalMapAfterDetailMap")],I.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,V.b)([(0,N.c)("_markAllSubMeshesAsMiscDirty")],I.prototype,"applyDecalMapAfterDetailMap",void 0),(0,F.c)("BABYLON.StandardMaterial",I),b.b.DefaultMaterialFactory=D=>new I("default material",D)}}]);