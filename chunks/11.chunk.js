"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2487:(A,X,s)=>{s.r(X),s.d(X,{Dispose:()=>c,DumpData:()=>v,DumpDataAsync:()=>Y,DumpFramebuffer:()=>i,DumpTools:()=>M});var N=s(2318),f=s(456),E=s(696),g=s(503);let K,r=null;async function i(A,X,s,N){let f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",E=arguments.length>5?arguments[5]:void 0,g=arguments.length>6?arguments[6]:void 0;const K=await s.readPixels(0,0,A,X);v(A,X,new Uint8Array(K.buffer),N,f,E,!0,void 0,g)}async function Y(A,X,s){let N=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",f=arguments.length>4?arguments[4]:void 0,E=arguments.length>5&&void 0!==arguments[5]&&arguments[5],g=arguments.length>6&&void 0!==arguments[6]&&arguments[6],K=arguments.length>7?arguments[7]:void 0;return await new Promise((r=>{v(A,X,s,(A=>r(A)),N,f,E,g,K)}))}function v(A,X,i,Y){let v=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,d=arguments.length>6&&void 0!==arguments[6]&&arguments[6],Q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],w=arguments.length>8?arguments[8]:void 0;(async function(){return r||(r=new Promise(((A,X)=>{let f,E=null;const r={Pk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(s.bind(s,2333)).then((i=>{let{ThinEngine:Y}=i;const v=g.b.Instances.length;try{f=new OffscreenCanvas(100,100),E=new Y(f,!1,r)}catch(Q){var M;v<g.b.Instances.length&&(null===(M=g.b.Instances.pop())||void 0===M||M.dispose()),f=document.createElement("canvas"),E=new Y(f,!1,r)}g.b.Instances.pop(),g.b.OnEnginesDisposedObservable.add((A=>{E&&A!==E&&!E.u&&0===g.b.Instances.length&&c()})),E.getCaps().parallelShaderCompile=void 0;const d=new N.b(E);s.e(35).then(s.bind(s,13213)).then((s=>{let{passPixelShader:g}=s;if(!E)return void X("Engine is not defined");const r=new N.c({Ki:E,name:g.name,fragmentShader:g.shader,samplerNames:["textureSampler"]});K={canvas:f,Ki:E,renderer:d,wrapper:r},A(K)}))})).catch(X)}))),await r})().then((s=>{if(s.Ki.setSize(A,X,!0),i instanceof Float32Array){const A=new Uint8Array(i.length);let X=i.length;for(;X--;){const s=i[X];A[X]=Math.round(255*(0,E.c)(s))}i=A}const N=s.Ki.createRawTexture(i,A,X,5,!1,!d,1);s.renderer.setViewport(),s.renderer.applyEffectWrapper(s.wrapper),s.wrapper.effect._bindTexture("textureSampler",N),s.renderer.draw(),Q?f.d.ToBlob(s.canvas,(A=>{const X=new FileReader;X.onload=A=>{const X=A.target.result;Y&&Y(X)},X.readAsArrayBuffer(A)}),v,w):f.d.EncodeScreenshotCanvasData(s.canvas,Y,v,M,w),N.dispose()}))}function c(){var A;K?(K.wrapper.dispose(),K.renderer.dispose(),K.Ki.dispose()):null===(A=r)||void 0===A||A.then((A=>{A.wrapper.dispose(),A.renderer.dispose(),A.Ki.dispose()}));r=null,K=null}const M={DumpData:v,DumpDataAsync:Y,DumpFramebuffer:i,Dispose:c};f.d.DumpData=v,f.d.DumpDataAsync=Y,f.d.DumpFramebuffer=i}}]);