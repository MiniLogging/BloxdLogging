"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2664:(P,Q,O)=>{O.r(Q),O.d(Q,{Dispose:()=>G,DumpData:()=>L,DumpDataAsync:()=>C,DumpFramebuffer:()=>X,DumpTools:()=>A});var b=O(2489),F=O(545),g=O(778),m=O(598);let q,R=null;async function X(P,Q,O,b){let F=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",g=arguments.length>5?arguments[5]:void 0,m=arguments.length>6?arguments[6]:void 0;const q=await O.readPixels(0,0,P,Q);L(P,Q,new Uint8Array(q.buffer),b,F,g,!0,void 0,m)}async function C(P,Q,O){let b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",F=arguments.length>4?arguments[4]:void 0,g=arguments.length>5&&void 0!==arguments[5]&&arguments[5],m=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7?arguments[7]:void 0;return await new Promise((R=>{L(P,Q,O,(P=>R(P)),b,F,g,m,q)}))}function L(P,Q,X,C){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",A=arguments.length>5?arguments[5]:void 0,j=arguments.length>6&&void 0!==arguments[6]&&arguments[6],w=arguments.length>7&&void 0!==arguments[7]&&arguments[7],W=arguments.length>8?arguments[8]:void 0;(async function(){return R||(R=new Promise(((P,Q)=>{let F,g=null;const R={Tk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(O.bind(O,2513)).then((X=>{let{ThinEngine:C}=X;const L=m.c.Instances.length;try{F=new OffscreenCanvas(100,100),g=new C(F,!1,R)}catch(w){var A;L<m.c.Instances.length&&(null===(A=m.c.Instances.pop())||void 0===A||A.dispose()),F=document.createElement("canvas"),g=new C(F,!1,R)}m.c.Instances.pop(),m.c.OnEnginesDisposedObservable.add((P=>{g&&P!==g&&!g.u&&0===m.c.Instances.length&&G()})),g.getCaps().parallelShaderCompile=void 0;const j=new b.b(g);O.e(35).then(O.bind(O,13400)).then((O=>{let{passPixelShader:m}=O;if(!g)return void Q("Engine is not defined");const R=new b.e({Vj:g,name:m.name,fragmentShader:m.shader,samplerNames:["textureSampler"]});q={canvas:F,Vj:g,renderer:j,wrapper:R},P(q)}))})).catch(Q)}))),await R})().then((O=>{if(O.Vj.setSize(P,Q,!0),X instanceof Float32Array){const P=new Uint8Array(X.length);let Q=X.length;for(;Q--;){const O=X[Q];P[Q]=Math.round(255*(0,g.e)(O))}X=P}const b=O.Vj.createRawTexture(X,P,Q,5,!1,!j,1);O.renderer.setViewport(),O.renderer.applyEffectWrapper(O.wrapper),O.wrapper.effect._bindTexture("textureSampler",b),O.renderer.draw(),w?F.d.ToBlob(O.canvas,(P=>{const Q=new FileReader;Q.onload=P=>{const Q=P.target.result;C&&C(Q)},Q.readAsArrayBuffer(P)}),L,W):F.d.EncodeScreenshotCanvasData(O.canvas,C,L,A,W),b.dispose()}))}function G(){var P;q?(q.wrapper.dispose(),q.renderer.dispose(),q.Vj.dispose()):null===(P=R)||void 0===P||P.then((P=>{P.wrapper.dispose(),P.renderer.dispose(),P.Vj.dispose()}));R=null,q=null}const A={DumpData:L,DumpDataAsync:C,DumpFramebuffer:X,Dispose:G};F.d.DumpData=L,F.d.DumpDataAsync=C,F.d.DumpFramebuffer=X}}]);