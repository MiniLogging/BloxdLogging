"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2584:(u,F,z)=>{z.r(F),z.d(F,{Dispose:()=>E,DumpData:()=>W,DumpDataAsync:()=>j,DumpFramebuffer:()=>X,DumpTools:()=>L});var p=z(2435),b=z(528),R=z(749),c=z(575);let I,G=null;async function X(u,F,z,p){let b=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",R=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0;const I=await z.readPixels(0,0,u,F);W(u,F,new Uint8Array(I.buffer),p,b,R,!0,void 0,c)}async function j(u,F,z){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",b=arguments.length>4?arguments[4]:void 0,R=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]&&arguments[6],I=arguments.length>7?arguments[7]:void 0;return await new Promise((G=>{W(u,F,z,(u=>G(u)),p,b,R,c,I)}))}function W(u,F,X,j){let W=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",L=arguments.length>5?arguments[5]:void 0,k=arguments.length>6&&void 0!==arguments[6]&&arguments[6],N=arguments.length>7&&void 0!==arguments[7]&&arguments[7],Y=arguments.length>8?arguments[8]:void 0;(async function(){return G||(G=new Promise(((u,F)=>{let b,R=null;const G={yh:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(z.bind(z,2454)).then((X=>{let{ThinEngine:j}=X;const W=c.e.Instances.length;try{b=new OffscreenCanvas(100,100),R=new j(b,!1,G)}catch(N){var L;W<c.e.Instances.length&&(null===(L=c.e.Instances.pop())||void 0===L||L.dispose()),b=document.createElement("canvas"),R=new j(b,!1,G)}c.e.Instances.pop(),c.e.OnEnginesDisposedObservable.add((u=>{R&&u!==R&&!R.u&&0===c.e.Instances.length&&E()})),R.getCaps().parallelShaderCompile=void 0;const k=new p.e(R);z.e(35).then(z.bind(z,13516)).then((z=>{let{passPixelShader:c}=z;if(!R)return void F("Engine is not defined");const G=new p.g({Qj:R,name:c.name,fragmentShader:c.shader,samplerNames:["textureSampler"]});I={canvas:b,Qj:R,renderer:k,wrapper:G},u(I)}))})).catch(F)}))),await G})().then((z=>{if(z.Qj.setSize(u,F,!0),X instanceof Float32Array){const u=new Uint8Array(X.length);let F=X.length;for(;F--;){const z=X[F];u[F]=Math.round(255*(0,R.e)(z))}X=u}const p=z.Qj.createRawTexture(X,u,F,5,!1,!k,1);z.renderer.setViewport(),z.renderer.applyEffectWrapper(z.wrapper),z.wrapper.effect._bindTexture("textureSampler",p),z.renderer.draw(),N?b.e.ToBlob(z.canvas,(u=>{const F=new FileReader;F.onload=u=>{const F=u.target.result;j&&j(F)},F.readAsArrayBuffer(u)}),W,Y):b.e.EncodeScreenshotCanvasData(z.canvas,j,W,L,Y),p.dispose()}))}function E(){var u;I?(I.wrapper.dispose(),I.renderer.dispose(),I.Qj.dispose()):null===(u=G)||void 0===u||u.then((u=>{u.wrapper.dispose(),u.renderer.dispose(),u.Qj.dispose()}));G=null,I=null}const L={DumpData:W,DumpDataAsync:j,DumpFramebuffer:X,Dispose:E};b.e.DumpData=W,b.e.DumpDataAsync=j,b.e.DumpFramebuffer=X}}]);