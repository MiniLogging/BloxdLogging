"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11,12],{2477:(R,x,H)=>{var k;H.d(x,{b:()=>c}),function(R){R[R.PointerMove=0]="PointerMove",R[R.PointerDown=1]="PointerDown",R[R.PointerUp=2]="PointerUp"}(k||(k={}));class c{}c.DOM_DELTA_PIXEL=0,c.DOM_DELTA_LINE=1,c.DOM_DELTA_PAGE=2},2468:(R,x,H)=>{H.d(x,{e:()=>k,f:()=>t,i:()=>c});class k{}k.KEYDOWN=1,k.KEYUP=2;class c{constructor(R,x){this.type=R,this.event=x}}class t extends c{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(R){this.skipOnKeyboardObservable=R}constructor(R,x){super(R,x),this.type=R,this.event=x,this.skipOnKeyboardObservable=!1}}},2464:(R,x,H)=>{H.d(x,{e:()=>c,f:()=>A,j:()=>D});var k=H(661);class c{}c.POINTERDOWN=1,c.POINTERUP=2,c.POINTERMOVE=4,c.POINTERWHEEL=8,c.POINTERPICK=16,c.POINTERTAP=32,c.POINTERDOUBLETAP=64;class t{constructor(R,x){this.type=R,this.event=x}}class A extends t{constructor(R,x,H,c){super(R,x),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new k.k(H,c)}}class D extends t{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(R,x,H){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(R,x),this._pickInfo=H,this._inputManager=k}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2503:(R,x,H)=>{var k=H(2297),c=H(2319);c.e.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(c.e.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=k.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((R=>{this._texture._sphericalPolynomial=R,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(R){this._texture&&(this._texture._sphericalPolynomial=R)},enumerable:!0,configurable:!0})},2451:(R,x,H)=>{function k(R){R.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}H.d(x,{c:()=>k})},2456:(R,x,H)=>{H.d(x,{d:()=>t,e:()=>c});var k=H(2451);function c(R,x){x.EXPOSURE&&R.push("exposureLinear"),x.CONTRAST&&R.push("contrast"),x.COLORGRADING&&R.push("colorTransformSettings"),(x.VIGNETTE||x.DITHER)&&R.push("vInverseScreenSize"),x.VIGNETTE&&(R.push("vignetteSettings1"),R.push("vignetteSettings2")),x.COLORCURVES&&(0,k.c)(R),x.DITHER&&R.push("ditherIntensity")}function t(R,x){x.COLORGRADING&&R.push("txColorTransform")}},2449:(R,x,H)=>{H.d(x,{c:()=>I});var k=H(643),c=H(647),t=H(476),A=H(695),D=H(687),U=H(2451);class J{constructor(){this._dirty=!0,this._tempColor=new A.d(0,0,0,0),this._globalCurve=new A.d(0,0,0,0),this._highlightsCurve=new A.d(0,0,0,0),this._midtonesCurve=new A.d(0,0,0,0),this._shadowsCurve=new A.d(0,0,0,0),this._positiveCurve=new A.d(0,0,0,0),this._negativeCurve=new A.d(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(R){this._globalHue=R,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(R){this._globalDensity=R,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(R){this._globalSaturation=R,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(R){this._globalExposure=R,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(R){this._highlightsHue=R,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(R){this._highlightsDensity=R,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(R){this._highlightsSaturation=R,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(R){this._highlightsExposure=R,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(R){this._midtonesHue=R,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(R){this._midtonesDensity=R,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(R){this._midtonesSaturation=R,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(R){this._midtonesExposure=R,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(R){this._shadowsHue=R,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(R){this._shadowsDensity=R,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(R){this._shadowsSaturation=R,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(R){this._shadowsExposure=R,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(R,x){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";R._dirty&&(R._dirty=!1,R._getColorGradingDataToRef(R._globalHue,R._globalDensity,R._globalSaturation,R._globalExposure,R._globalCurve),R._getColorGradingDataToRef(R._highlightsHue,R._highlightsDensity,R._highlightsSaturation,R._highlightsExposure,R._tempColor),R._tempColor.multiplyToRef(R._globalCurve,R._highlightsCurve),R._getColorGradingDataToRef(R._midtonesHue,R._midtonesDensity,R._midtonesSaturation,R._midtonesExposure,R._tempColor),R._tempColor.multiplyToRef(R._globalCurve,R._midtonesCurve),R._getColorGradingDataToRef(R._shadowsHue,R._shadowsDensity,R._shadowsSaturation,R._shadowsExposure,R._tempColor),R._tempColor.multiplyToRef(R._globalCurve,R._shadowsCurve),R._highlightsCurve.subtractToRef(R._midtonesCurve,R._positiveCurve),R._midtonesCurve.subtractToRef(R._shadowsCurve,R._negativeCurve)),x&&(x.setFloat4(H,R._positiveCurve.r,R._positiveCurve.g,R._positiveCurve.b,R._positiveCurve.a),x.setFloat4(k,R._midtonesCurve.r,R._midtonesCurve.g,R._midtonesCurve.b,R._midtonesCurve.a),x.setFloat4(c,R._negativeCurve.r,R._negativeCurve.g,R._negativeCurve.b,R._negativeCurve.a))}_getColorGradingDataToRef(R,x,H,k,c){null!=R&&(R=J._Clamp(R,0,360),x=J._Clamp(x,-100,100),H=J._Clamp(H,-100,100),k=J._Clamp(k,-100,100),x=J._ApplyColorGradingSliderNonlinear(x),x*=.5,k=J._ApplyColorGradingSliderNonlinear(k),x<0&&(x*=-1,R=(R+180)%360),J._FromHSBToRef(R,x,50+.25*k,c),c.scaleToRef(2,c),c.a=1+.01*H)}static _ApplyColorGradingSliderNonlinear(R){R/=100;let x=Math.abs(R);return x=Math.pow(x,2),R<0&&(x*=-1),x*=100,x}static _FromHSBToRef(R,x,H,k){let c=J._Clamp(R,0,360);const t=J._Clamp(x/100,0,1),A=J._Clamp(H/100,0,1);if(0===t)k.r=A,k.g=A,k.b=A;else{c/=60;const R=Math.floor(c),x=c-R,H=A*(1-t),D=A*(1-t*x),U=A*(1-t*(1-x));switch(R){case 0:k.r=A,k.g=U,k.b=H;break;case 1:k.r=D,k.g=A,k.b=H;break;case 2:k.r=H,k.g=A,k.b=U;break;case 3:k.r=H,k.g=D,k.b=A;break;case 4:k.r=U,k.g=H,k.b=A;break;default:k.r=A,k.g=H,k.b=D}}k.a=1}static _Clamp(R,x,H){return Math.min(Math.max(R,x),H)}clone(){return D.d.Clone((()=>new J),this)}serialize(){return D.d.Serialize(this)}static Parse(R){return D.d.Parse((()=>new J),R,null,null)}}J.PrepareUniforms=U.c,(0,k.d)([(0,c.Q)()],J.prototype,"_globalHue",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_globalDensity",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_globalSaturation",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_globalExposure",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_highlightsHue",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_highlightsDensity",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_highlightsSaturation",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_highlightsExposure",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_midtonesHue",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_midtonesDensity",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_midtonesSaturation",void 0),(0,k.d)([(0,c.Q)()],J.prototype,"_midtonesExposure",void 0),D.d._ColorCurvesParser=J.Parse;var V=H(619),n=H(2456),g=H(610);class I{constructor(){this.colorCurves=new J,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=I.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new A.d(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=I.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.outputTextureWidth=0,this.outputTextureHeight=0,this.onUpdateParameters=new t.d}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(R){this._colorCurvesEnabled!==R&&(this._colorCurvesEnabled=R,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(R){this._colorGradingTexture!==R&&(this._colorGradingTexture=R,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(R){this._colorGradingEnabled!==R&&(this._colorGradingEnabled=R,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(R){this._colorGradingWithGreenDepth!==R&&(this._colorGradingWithGreenDepth=R,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(R){this._colorGradingBGR!==R&&(this._colorGradingBGR=R,this._updateParameters())}get exposure(){return this._exposure}set exposure(R){this._exposure!==R&&(this._exposure=R,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(R){this._toneMappingEnabled!==R&&(this._toneMappingEnabled=R,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(R){this._toneMappingType!==R&&(this._toneMappingType=R,this._updateParameters())}get contrast(){return this._contrast}set contrast(R){this._contrast!==R&&(this._contrast=R,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(R){this.vignetteCenterY=R}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(R){this.vignetteCenterX=R}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(R){this._vignetteBlendMode!==R&&(this._vignetteBlendMode=R,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(R){this._vignetteEnabled!==R&&(this._vignetteEnabled=R,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(R){this._ditheringEnabled!==R&&(this._ditheringEnabled=R,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(R){this._ditheringIntensity!==R&&(this._ditheringIntensity=R,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(R){this._skipFinalColorClamp!==R&&(this._skipFinalColorClamp=R,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(R){this._applyByPostProcess!==R&&(this._applyByPostProcess=R,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(R){this._isEnabled!==R&&(this._isEnabled=R,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(R){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return R.VIGNETTE=!1,R.TONEMAPPING=0,R.CONTRAST=!1,R.EXPOSURE=!1,R.COLORCURVES=!1,R.COLORGRADING=!1,R.COLORGRADING3D=!1,R.DITHER=!1,R.IMAGEPROCESSING=!1,R.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(R.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(R.VIGNETTE=this.vignetteEnabled,R.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===I._VIGNETTEMODE_MULTIPLY,R.VIGNETTEBLENDMODEOPAQUE=!R.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case I.TONEMAPPING_KHR_PBR_NEUTRAL:R.TONEMAPPING=3;break;case I.TONEMAPPING_ACES:R.TONEMAPPING=2;break;default:R.TONEMAPPING=1}else R.TONEMAPPING=0;R.CONTRAST=1!==this.contrast,R.EXPOSURE=1!==this.exposure,R.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,R.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,R.COLORGRADING?R.COLORGRADING3D=this.colorGradingTexture.is3D:R.COLORGRADING3D=!1,R.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,R.SAMPLER3DBGRMAP=this.colorGradingBGR,R.DITHER=this._ditheringEnabled,R.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,R.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,R.IMAGEPROCESSING=R.VIGNETTE||!!R.TONEMAPPING||R.CONTRAST||R.EXPOSURE||R.COLORCURVES||R.COLORGRADING||R.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(R,x){if(this._colorCurvesEnabled&&this.colorCurves&&J.Bind(this.colorCurves,R),this._vignetteEnabled||this._ditheringEnabled){const H=1/(this.outputTextureWidth||R.getEngine().getRenderWidth()),k=1/(this.outputTextureHeight||R.getEngine().getRenderHeight());if(R.setFloat2("vInverseScreenSize",H,k),this._ditheringEnabled&&R.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const c=null!=x?x:k/H;let t=Math.tan(.5*this.vignetteCameraFov),A=t*c;const D=Math.sqrt(A*t);A=(0,V.l)(A,D,this.vignetteStretch),t=(0,V.l)(t,D,this.vignetteStretch),R.setFloat4("vignetteSettings1",A,t,-A*this.vignetteCenterX,-t*this.vignetteCenterY);const U=-2*this.vignetteWeight;R.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,U)}}if(R.setFloat("exposureLinear",this.exposure),R.setFloat("contrast",this.contrast),this.colorGradingTexture){R.setTexture("txColorTransform",this.colorGradingTexture);const x=this.colorGradingTexture.getSize().height;R.setFloat4("colorTransformSettings",(x-1)/x,.5/x,x,this.colorGradingTexture.level)}}clone(){return D.d.Clone((()=>new I),this)}serialize(){return D.d.Serialize(this)}static Parse(R){const x=D.d.Parse((()=>new I),R,null,null);return void 0!==R.vignetteCentreX&&(x.vignetteCenterX=R.vignetteCentreX),void 0!==R.vignetteCentreY&&(x.vignetteCenterY=R.vignetteCentreY),x}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}I.TONEMAPPING_STANDARD=0,I.TONEMAPPING_ACES=1,I.TONEMAPPING_KHR_PBR_NEUTRAL=2,I.PrepareUniforms=n.e,I.PrepareSamplers=n.d,I._VIGNETTEMODE_MULTIPLY=0,I._VIGNETTEMODE_OPAQUE=1,(0,k.d)([(0,c.l)()],I.prototype,"colorCurves",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_colorCurvesEnabled",void 0),(0,k.d)([(0,c.F)("colorGradingTexture")],I.prototype,"_colorGradingTexture",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_colorGradingEnabled",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_colorGradingWithGreenDepth",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_colorGradingBGR",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_exposure",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_toneMappingEnabled",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_toneMappingType",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_contrast",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"vignetteStretch",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"vignetteCenterX",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"vignetteCenterY",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"vignetteWeight",void 0),(0,k.d)([(0,c.s)()],I.prototype,"vignetteColor",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"vignetteCameraFov",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_vignetteBlendMode",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_vignetteEnabled",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_ditheringEnabled",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_ditheringIntensity",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_skipFinalColorClamp",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_applyByPostProcess",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"_isEnabled",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"outputTextureWidth",void 0),(0,k.d)([(0,c.Q)()],I.prototype,"outputTextureHeight",void 0),D.d._ImageProcessingConfigurationParser=I.Parse,(0,g.h)("BABYLON.ImageProcessingConfiguration",I)},2498:(R,x,H)=>{H.r(x),H.d(x,{Dispose:()=>g,DumpData:()=>n,DumpDataAsync:()=>V,DumpFramebuffer:()=>J,DumpTools:()=>I});var k=H(2341),c=H(485),t=H(681),A=H(513);let D,U=null;async function J(R,x,H,k){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",t=arguments.length>5?arguments[5]:void 0,A=arguments.length>6?arguments[6]:void 0;const D=await H.readPixels(0,0,R,x);n(R,x,new Uint8Array(D.buffer),k,c,t,!0,void 0,A)}async function V(R,x,H){let k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",c=arguments.length>4?arguments[4]:void 0,t=arguments.length>5&&void 0!==arguments[5]&&arguments[5],A=arguments.length>6&&void 0!==arguments[6]&&arguments[6],D=arguments.length>7?arguments[7]:void 0;return await new Promise((U=>{n(R,x,H,(R=>U(R)),k,c,t,A,D)}))}function n(R,x,J,V){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",I=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],q=arguments.length>7&&void 0!==arguments[7]&&arguments[7],S=arguments.length>8?arguments[8]:void 0;(async function(){return U||(U=new Promise(((R,x)=>{let c,t=null;const U={Eg:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(H.bind(H,2355)).then((J=>{let{ThinEngine:V}=J;const n=A.c.Instances.length;try{c=new OffscreenCanvas(100,100),t=new V(c,!1,U)}catch(q){var I;n<A.c.Instances.length&&(null===(I=A.c.Instances.pop())||void 0===I||I.dispose()),c=document.createElement("canvas"),t=new V(c,!1,U)}A.c.Instances.pop(),A.c.OnEnginesDisposedObservable.add((R=>{t&&R!==t&&!t.u&&0===A.c.Instances.length&&g()})),t.getCaps().parallelShaderCompile=void 0;const i=new k.b(t);H.e(46).then(H.bind(H,13804)).then((H=>{let{passPixelShader:A}=H;if(!t)return void x("Engine is not defined");const U=new k.e({Wi:t,name:A.name,fragmentShader:A.shader,samplerNames:["textureSampler"]});D={canvas:c,Wi:t,renderer:i,wrapper:U},R(D)}))})).catch(x)}))),await U})().then((H=>{if(H.Wi.setSize(R,x,!0),J instanceof Float32Array){const R=new Uint8Array(J.length);let x=J.length;for(;x--;){const H=J[x];R[x]=Math.round(255*(0,t.Clamp)(H))}J=R}const k=H.Wi.createRawTexture(J,R,x,5,!1,!i,1);H.renderer.setViewport(),H.renderer.applyEffectWrapper(H.wrapper),H.wrapper.effect._bindTexture("textureSampler",k),H.renderer.draw(),q?c.e.ToBlob(H.canvas,(R=>{const x=new FileReader;x.onload=R=>{const x=R.target.result;V&&V(x)},x.readAsArrayBuffer(R)}),n,S):c.e.EncodeScreenshotCanvasData(H.canvas,V,n,I,S),k.dispose()}))}function g(){var R;D?(D.wrapper.dispose(),D.renderer.dispose(),D.Wi.dispose()):null===(R=U)||void 0===R||R.then((R=>{R.wrapper.dispose(),R.renderer.dispose(),R.Wi.dispose()}));U=null,D=null}const I={DumpData:n,DumpDataAsync:V,DumpFramebuffer:J,Dispose:g};c.e.DumpData=n,c.e.DumpDataAsync=V,c.e.DumpFramebuffer=J},2489:(R,x,H)=>{H.d(x,{d:()=>t});var k=H(2336),c=H(2306);class t{static ExpandRGBDTexture(R){const x=R._texture;if(!x||!R.isRGBD)return;const c=x.getEngine(),t=c.getCaps(),A=x.isReady;let D=!1;t.textureHalfFloatRender&&t.textureHalfFloatLinearFiltering?(D=!0,x.type=2):t.textureFloatRender&&t.textureFloatLinearFiltering&&(D=!0,x.type=1),D&&(x.isReady=!1,x._isRGBD=!1,x.invertY=!1);const U=async()=>{const t=c.isWebGPU,A=t?1:0;x.isReady=!1,t?await H.e(36).then(H.bind(H,13822)):await H.e(29).then(H.bind(H,13829));const D=new k.b("rgbdDecode","rgbdDecode",null,null,1,null,3,c,!1,void 0,x.type,void 0,null,!1,void 0,A);D.externalTextureSamplerBinding=!0;const U=c.createRenderTargetTexture(x.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:x.samplingMode,type:x.type,format:5});D.onEffectCreatedObservable.addOnce((H=>{H.executeWhenCompiled((()=>{D.onApply=R=>{R._bindTexture("textureSampler",x),R.setFloat2("scale",1,1)},R.va().postProcessManager.directRender([D],U,!0),c.restoreDefaultFramebuffer(),c._releaseTexture(x),D&&D.dispose(),U._swapAndDie(x),x.isReady=!0}))}))};D&&(A?U():R.onLoadObservable.addOnce(U))}static async EncodeTextureToRGBD(R,x){let k=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return x.getEngine().isWebGPU?await H.e(37).then(H.bind(H,13839)):await H.e(30).then(H.bind(H,13835)),await(0,c.b)("rgbdEncode",R,x,k,1,5)}}},2486:(R,x,H)=>{H.d(x,{e:()=>k});class k{static get UniqueId(){const R=this._UniqueIdCounter;return this._UniqueIdCounter++,R}}k._UniqueIdCounter=1},2484:(R,x,H)=>{H.d(x,{e:()=>k});class k{}k._IsPickingAvailable=!1},2445:(R,x,H)=>{H.d(x,{e:()=>RR});var k=H(485),c=H(500),t=H(476),A=H(654);class D{constructor(){this._count=0,this._data={}}p(R){this.clear(),R.forEach(((R,x)=>this.add(R,x)))}get(R){const x=this._data[R];if(void 0!==x)return x}getOrAddWithFactory(R,x){let H=this.get(R);return void 0!==H||(H=x(R),H&&this.add(R,H)),H}getOrAdd(R,x){const H=this.get(R);return void 0!==H?H:(this.add(R,x),x)}contains(R){return void 0!==this._data[R]}add(R,x){return void 0===this._data[R]&&(this._data[R]=x,++this._count,!0)}set(R,x){return void 0!==this._data[R]&&(this._data[R]=x,!0)}getAndRemove(R){const x=this.get(R);return void 0!==x?(delete this._data[R],--this._count,x):null}remove(R){return!!this.contains(R)&&(delete this._data[R],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(R){for(const x in this._data){R(x,this._data[x])}}first(R){for(const x in this._data){const H=R(x,this._data[x]);if(H)return H}return null}}var U=H(622),J=H(661),V=H(2449),n=H(825),g=H(821);class I{constructor(R,x,H,k,c,t){this.source=R,this.pointerX=x,this.pointerY=H,this.meshUnderPointer=k,this.sourceEvent=c,this.additionalData=t}static CreateNew(R,x,H){const k=R.va();return new I(R,k.pointerX,k.pointerY,k.meshUnderPointer||R,x,H)}static CreateNewFromSprite(R,x,H,k){return new I(R,x.pointerX,x.pointerY,x.meshUnderPointer,H,k)}static CreateNewFromScene(R,x){return new I(null,R.pointerX,R.pointerY,R.meshUnderPointer,x)}static CreateNewFromPrimitive(R,x,H,k){return new I(R,x.x,x.y,null,H,k)}}var i=H(2329),q=H(2332),S=H(856),L=H(487),b=H(513),C=H(502),F=H(2464);class d{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const R in d.Triggers)if(Object.prototype.hasOwnProperty.call(d.Triggers,R))return!0;return!1}static get HasPickTriggers(){for(const R in d.Triggers)if(Object.prototype.hasOwnProperty.call(d.Triggers,R)){const x=parseInt(R);if(x>=1&&x<=7)return!0}return!1}static HasSpecificTrigger(R){for(const x in d.Triggers)if(Object.prototype.hasOwnProperty.call(d.Triggers,x)){if(parseInt(x)===R)return!0}return!1}}d.Triggers={};var P,a,X,M,B,o,Z,y=H(2468);!function(R){R[R.Generic=0]="Generic",R[R.Keyboard=1]="Keyboard",R[R.Mouse=2]="Mouse",R[R.Touch=3]="Touch",R[R.DualShock=4]="DualShock",R[R.Xbox=5]="Xbox",R[R.Switch=6]="Switch",R[R.DualSense=7]="DualSense"}(P||(P={})),function(R){R[R.Horizontal=0]="Horizontal",R[R.Vertical=1]="Vertical",R[R.LeftClick=2]="LeftClick",R[R.MiddleClick=3]="MiddleClick",R[R.RightClick=4]="RightClick",R[R.BrowserBack=5]="BrowserBack",R[R.BrowserForward=6]="BrowserForward",R[R.MouseWheelX=7]="MouseWheelX",R[R.MouseWheelY=8]="MouseWheelY",R[R.MouseWheelZ=9]="MouseWheelZ",R[R.Move=12]="Move"}(a||(a={})),function(R){R[R.Horizontal=0]="Horizontal",R[R.Vertical=1]="Vertical",R[R.LeftClick=2]="LeftClick",R[R.MiddleClick=3]="MiddleClick",R[R.RightClick=4]="RightClick",R[R.BrowserBack=5]="BrowserBack",R[R.BrowserForward=6]="BrowserForward",R[R.MouseWheelX=7]="MouseWheelX",R[R.MouseWheelY=8]="MouseWheelY",R[R.MouseWheelZ=9]="MouseWheelZ",R[R.DeltaHorizontal=10]="DeltaHorizontal",R[R.DeltaVertical=11]="DeltaVertical"}(X||(X={})),function(R){R[R.Cross=0]="Cross",R[R.Circle=1]="Circle",R[R.Square=2]="Square",R[R.Triangle=3]="Triangle",R[R.L1=4]="L1",R[R.R1=5]="R1",R[R.L2=6]="L2",R[R.R2=7]="R2",R[R.Share=8]="Share",R[R.Options=9]="Options",R[R.L3=10]="L3",R[R.R3=11]="R3",R[R.DPadUp=12]="DPadUp",R[R.DPadDown=13]="DPadDown",R[R.DPadLeft=14]="DPadLeft",R[R.DPadRight=15]="DPadRight",R[R.Home=16]="Home",R[R.TouchPad=17]="TouchPad",R[R.LStickXAxis=18]="LStickXAxis",R[R.LStickYAxis=19]="LStickYAxis",R[R.RStickXAxis=20]="RStickXAxis",R[R.RStickYAxis=21]="RStickYAxis"}(M||(M={})),function(R){R[R.Cross=0]="Cross",R[R.Circle=1]="Circle",R[R.Square=2]="Square",R[R.Triangle=3]="Triangle",R[R.L1=4]="L1",R[R.R1=5]="R1",R[R.L2=6]="L2",R[R.R2=7]="R2",R[R.Create=8]="Create",R[R.Options=9]="Options",R[R.L3=10]="L3",R[R.R3=11]="R3",R[R.DPadUp=12]="DPadUp",R[R.DPadDown=13]="DPadDown",R[R.DPadLeft=14]="DPadLeft",R[R.DPadRight=15]="DPadRight",R[R.Home=16]="Home",R[R.TouchPad=17]="TouchPad",R[R.LStickXAxis=18]="LStickXAxis",R[R.LStickYAxis=19]="LStickYAxis",R[R.RStickXAxis=20]="RStickXAxis",R[R.RStickYAxis=21]="RStickYAxis"}(B||(B={})),function(R){R[R.A=0]="A",R[R.B=1]="B",R[R.X=2]="X",R[R.Y=3]="Y",R[R.LB=4]="LB",R[R.RB=5]="RB",R[R.LT=6]="LT",R[R.RT=7]="RT",R[R.Back=8]="Back",R[R.Start=9]="Start",R[R.LS=10]="LS",R[R.RS=11]="RS",R[R.DPadUp=12]="DPadUp",R[R.DPadDown=13]="DPadDown",R[R.DPadLeft=14]="DPadLeft",R[R.DPadRight=15]="DPadRight",R[R.Home=16]="Home",R[R.LStickXAxis=17]="LStickXAxis",R[R.LStickYAxis=18]="LStickYAxis",R[R.RStickXAxis=19]="RStickXAxis",R[R.RStickYAxis=20]="RStickYAxis"}(o||(o={})),function(R){R[R.B=0]="B",R[R.A=1]="A",R[R.Y=2]="Y",R[R.X=3]="X",R[R.L=4]="L",R[R.R=5]="R",R[R.ZL=6]="ZL",R[R.ZR=7]="ZR",R[R.Minus=8]="Minus",R[R.Plus=9]="Plus",R[R.LS=10]="LS",R[R.RS=11]="RS",R[R.DPadUp=12]="DPadUp",R[R.DPadDown=13]="DPadDown",R[R.DPadLeft=14]="DPadLeft",R[R.DPadRight=15]="DPadRight",R[R.Home=16]="Home",R[R.Capture=17]="Capture",R[R.LStickXAxis=18]="LStickXAxis",R[R.LStickYAxis=19]="LStickYAxis",R[R.RStickXAxis=20]="RStickXAxis",R[R.RStickYAxis=21]="RStickYAxis"}(Z||(Z={}));var s=H(2477);class E{static CreateDeviceEvent(R,x,H,k,c,t,A){switch(R){case P.Keyboard:return this._CreateKeyboardEvent(H,k,c,t);case P.Mouse:if(H===a.MouseWheelX||H===a.MouseWheelY||H===a.MouseWheelZ)return this._CreateWheelEvent(R,x,H,k,c,t);case P.Touch:return this._CreatePointerEvent(R,x,H,k,c,t,A);default:throw`Unable to generate event for device ${P[R]}`}}static _CreatePointerEvent(R,x,H,k,c,t,A){const D=this._CreateMouseEvent(R,x,H,k,c,t);R===P.Mouse?(D.deviceType=P.Mouse,D.pointerId=1,D.pointerType="mouse"):(D.deviceType=P.Touch,D.pointerId=A??x,D.pointerType="touch");let U=0;return U+=c.pollInput(R,x,a.LeftClick),U+=2*c.pollInput(R,x,a.RightClick),U+=4*c.pollInput(R,x,a.MiddleClick),D.buttons=U,H===a.Move?D.type="pointermove":H>=a.LeftClick&&H<=a.RightClick&&(D.type=1===k?"pointerdown":"pointerup",D.button=H-2),D}static _CreateWheelEvent(R,x,H,k,c,t){const A=this._CreateMouseEvent(R,x,H,k,c,t);switch(A.pointerId=1,A.type="wheel",A.deltaMode=s.b.DOM_DELTA_PIXEL,A.deltaX=0,A.deltaY=0,A.deltaZ=0,H){case a.MouseWheelX:A.deltaX=k;break;case a.MouseWheelY:A.deltaY=k;break;case a.MouseWheelZ:A.deltaZ=k}return A}static _CreateMouseEvent(R,x,H,k,c,t){const A=this._CreateEvent(t),D=c.pollInput(R,x,a.Horizontal),U=c.pollInput(R,x,a.Vertical);return t?(A.movementX=0,A.movementY=0,A.offsetX=A.movementX-t.getBoundingClientRect().x,A.offsetY=A.movementY-t.getBoundingClientRect().y):(A.movementX=c.pollInput(R,x,10),A.movementY=c.pollInput(R,x,11),A.offsetX=0,A.offsetY=0),this._CheckNonCharacterKeys(A,c),A.clientX=D,A.clientY=U,A.x=D,A.y=U,A.deviceType=R,A.deviceSlot=x,A.inputIndex=H,A}static _CreateKeyboardEvent(R,x,H,k){const c=this._CreateEvent(k);return this._CheckNonCharacterKeys(c,H),c.deviceType=P.Keyboard,c.deviceSlot=0,c.inputIndex=R,c.type=1===x?"keydown":"keyup",c.key=String.fromCharCode(R),c.keyCode=R,c}static _CheckNonCharacterKeys(R,x){const H=x.isDeviceAvailable(P.Keyboard),k=H&&1===x.pollInput(P.Keyboard,0,18),c=H&&1===x.pollInput(P.Keyboard,0,17),t=H&&(1===x.pollInput(P.Keyboard,0,91)||1===x.pollInput(P.Keyboard,0,92)||1===x.pollInput(P.Keyboard,0,93)),A=H&&1===x.pollInput(P.Keyboard,0,16);R.altKey=k,R.ctrlKey=c,R.metaKey=t,R.shiftKey=A}static _CreateEvent(R){const x={preventDefault:()=>{}};return x.target=R,x}}class w{constructor(R,x,H){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(R,x,((R,x,k,c)=>{const t=E.CreateDeviceEvent(R,x,k,c,this);H(R,x,t)})):this._createDummyNativeInput()}pollInput(R,x,H){return this._nativeInput.pollInput(R,x,H)}isDeviceAvailable(R){return R===P.Mouse||R===P.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const h=Object.keys(a).length/2;class f{constructor(R,x,H,c){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=k.e.IsSafari(),this._usingMacOs=(0,L.g)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=R=>{},this._keyboardUpEvent=R=>{},this._keyboardBlurEvent=R=>{},this._pointerMoveEvent=R=>{},this._pointerDownEvent=R=>{},this._pointerUpEvent=R=>{},this._pointerCancelEvent=R=>{},this._pointerCancelTouch=R=>{},this._pointerLeaveEvent=R=>{},this._pointerWheelEvent=R=>{},this._pointerBlurEvent=R=>{},this._pointerMacOsChromeOutEvent=R=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,L.g)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,L.g)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=R=>{},this._gamepadDisconnectedEvent=R=>{},this._eventPrefix=k.e.GetPointerPrefix(R),this._engine=R,this._onDeviceConnected=x,this._onDeviceDisconnected=H,this._onInputChanged=c,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOs&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(R,x,H){const c=this._inputs[R][x];if(!c)throw`Unable to find device ${P[R]}`;R>=P.DualShock&&R<=P.DualSense&&this._updateDevice(R,x,H);const t=c[H];if(void 0===t)throw`Unable to find input ${H} for device ${P[R]} in slot ${x}`;return H===a.Move&&k.e.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),t}isDeviceAvailable(R){return void 0!==this._inputs[R]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const R=null===this||void 0===this?void 0:this._engine.getInputElement();if(R&&(!this._eventsAttached||this._elementToAttachTo!==R)){if(this._disableEvents(),this._inputs)for(const R of this._inputs)if(R)for(const x in R){const H=R[+x];if(H)for(let R=0;R<H.length;R++)H[R]=0}this._elementToAttachTo=R,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOs&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const R=navigator.getGamepads();for(const x of R)x&&this._addGamePad(x)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(P.Mouse,0,0,0)}_addGamePad(R){const x=this._getGamepadDeviceType(R.id),H=R.index;this._gamepads=this._gamepads||new Array(R.index+1),this._registerDevice(x,H,R.buttons.length+R.axes.length),this._gamepads[H]=x}_addPointerDevice(R,x,H,k){this._pointerActive||(this._pointerActive=!0),this._registerDevice(R,x,h);const c=this._inputs[R][x];c[0]=H,c[1]=k}_registerDevice(R,x,H){if(void 0===x)throw`Unable to register device ${P[R]} to undefined slot.`;if(this._inputs[R]||(this._inputs[R]={}),!this._inputs[R][x]){const k=new Array(H);k.fill(0),this._inputs[R][x]=k,this._onDeviceConnected(R,x)}}_unregisterDevice(R,x){this._inputs[R][x]&&(delete this._inputs[R][x],this._onDeviceDisconnected(R,x))}_handleKeyActions(){this._keyboardDownEvent=R=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(P.Keyboard,0,255));const x=this._inputs[P.Keyboard][0];if(x){x[R.keyCode]=1;const H=R;H.inputIndex=R.keyCode,this._usingMacOs&&R.metaKey&&"Meta"!==R.key&&(this._metaKeys.includes(R.keyCode)||this._metaKeys.push(R.keyCode)),this._onInputChanged(P.Keyboard,0,H)}},this._keyboardUpEvent=R=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(P.Keyboard,0,255));const x=this._inputs[P.Keyboard][0];if(x){x[R.keyCode]=0;const H=R;if(H.inputIndex=R.keyCode,this._usingMacOs&&"Meta"===R.key&&this._metaKeys.length>0){for(const R of this._metaKeys){const H=E.CreateDeviceEvent(P.Keyboard,0,R,0,this,this._elementToAttachTo);x[R]=0,this._onInputChanged(P.Keyboard,0,H)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(P.Keyboard,0,H)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const R=this._inputs[P.Keyboard][0];for(let x=0;x<R.length;x++)if(0!==R[x]){R[x]=0;const H=E.CreateDeviceEvent(P.Keyboard,0,x,0,this,this._elementToAttachTo);this._onInputChanged(P.Keyboard,0,H)}this._usingMacOs&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,L.g)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let k=0;k<this._maxTouchPoints;k++)this._activeTouchIds[k]=-1;this._pointerMoveEvent=R=>{const x=this._getPointerType(R);let H=x===P.Mouse?0:this._activeTouchIds.indexOf(R.pointerId);if(x===P.Touch&&-1===H){const c=this._activeTouchIds.indexOf(-1);if(!(c>=0))return void k.e.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);H=c,this._activeTouchIds[c]=R.pointerId,this._onDeviceConnected(x,H)}this._inputs[x]||(this._inputs[x]={}),this._inputs[x][H]||this._addPointerDevice(x,H,R.clientX,R.clientY);const c=this._inputs[x][H];if(c){const k=R;k.inputIndex=a.Move,c[a.Horizontal]=R.clientX,c[a.Vertical]=R.clientY,x===P.Touch&&0===c[a.LeftClick]&&(c[a.LeftClick]=1),void 0===R.pointerId&&(R.pointerId=this._mouseId),this._onInputChanged(x,H,k),this._usingSafari||-1===R.button||(k.inputIndex=R.button+2,c[R.button+2]=c[R.button+2]?0:1,this._onInputChanged(x,H,k))}},this._pointerDownEvent=R=>{const x=this._getPointerType(R);let H=x===P.Mouse?0:R.pointerId;if(x===P.Touch){let x=this._activeTouchIds.indexOf(R.pointerId);if(-1===x&&(x=this._activeTouchIds.indexOf(-1)),!(x>=0))return void k.e.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);H=x,this._activeTouchIds[x]=R.pointerId}this._inputs[x]||(this._inputs[x]={}),this._inputs[x][H]?x===P.Touch&&this._onDeviceConnected(x,H):this._addPointerDevice(x,H,R.clientX,R.clientY);const c=this._inputs[x][H];if(c){const k=c[a.Horizontal],A=c[a.Vertical];if(x===P.Mouse){if(void 0===R.pointerId&&(R.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(t){}}else if(R.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(R.pointerId)}catch(t){}c[a.Horizontal]=R.clientX,c[a.Vertical]=R.clientY,c[R.button+2]=1;const D=R;D.inputIndex=R.button+2,this._onInputChanged(x,H,D),k===R.clientX&&A===R.clientY||(D.inputIndex=a.Move,this._onInputChanged(x,H,D))}},this._pointerUpEvent=R=>{var x;const H=this._getPointerType(R),k=H===P.Mouse?0:this._activeTouchIds.indexOf(R.pointerId);if(H===P.Touch){if(-1===k)return;this._activeTouchIds[k]=-1}const c=null===(x=this._inputs[H])||void 0===x?void 0:x[k];let t=R.button,A=c&&0!==c[t+2];if(!A&&this._isUsingFirefox&&this._usingMacOs&&c&&(t=2===t?0:2,A=0!==c[t+2]),A){var D,U,J,V;const x=c[a.Horizontal],A=c[a.Vertical];c[a.Horizontal]=R.clientX,c[a.Vertical]=R.clientY,c[t+2]=0;const n=R;void 0===R.pointerId&&(R.pointerId=this._mouseId),x===R.clientX&&A===R.clientY||(n.inputIndex=a.Move,this._onInputChanged(H,k,n)),n.inputIndex=t+2,H===P.Mouse&&this._mouseId>=0&&null!==(D=(U=this._elementToAttachTo).hasPointerCapture)&&void 0!==D&&D.call(U,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):R.pointerId&&null!==(J=(V=this._elementToAttachTo).hasPointerCapture)&&void 0!==J&&J.call(V,R.pointerId)&&this._elementToAttachTo.releasePointerCapture(R.pointerId),this._onInputChanged(H,k,n),H===P.Touch&&this._onDeviceDisconnected(H,k)}},this._pointerCancelTouch=R=>{var x,H;const k=this._activeTouchIds.indexOf(R);if(-1===k)return;null!==(x=(H=this._elementToAttachTo).hasPointerCapture)&&void 0!==x&&x.call(H,R)&&this._elementToAttachTo.releasePointerCapture(R),this._inputs[P.Touch][k][a.LeftClick]=0;const c=E.CreateDeviceEvent(P.Touch,k,a.LeftClick,0,this,this._elementToAttachTo,R);this._onInputChanged(P.Touch,k,c),this._activeTouchIds[k]=-1,this._onDeviceDisconnected(P.Touch,k)},this._pointerCancelEvent=R=>{if("mouse"===R.pointerType){var x,H;const R=this._inputs[P.Mouse][0];this._mouseId>=0&&null!==(x=(H=this._elementToAttachTo).hasPointerCapture)&&void 0!==x&&x.call(H,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let x=a.LeftClick;x<=a.BrowserForward;x++)if(1===R[x]){R[x]=0;const H=E.CreateDeviceEvent(P.Mouse,0,x,0,this,this._elementToAttachTo);this._onInputChanged(P.Mouse,0,H)}}else this._pointerCancelTouch(R.pointerId)},this._pointerLeaveEvent=R=>{"pen"===R.pointerType&&this._pointerCancelTouch(R.pointerId)},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let R=!1;const x=function(){};try{const H=Object.defineProperty({},"passive",{get:function(){R=!0}});this._elementToAttachTo.addEventListener("test",x,H),this._elementToAttachTo.removeEventListener("test",x,H)}catch(H){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(P.Mouse)){var R,x;const H=this._inputs[P.Mouse][0];this._mouseId>=0&&null!==(R=(x=this._elementToAttachTo).hasPointerCapture)&&void 0!==R&&R.call(x,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let R=a.LeftClick;R<=a.BrowserForward;R++)if(1===H[R]){H[R]=0;const x=E.CreateDeviceEvent(P.Mouse,0,R,0,this,this._elementToAttachTo);this._onInputChanged(P.Mouse,0,x)}}if(this.isDeviceAvailable(P.Touch)){const R=this._inputs[P.Touch];for(let x=0;x<this._activeTouchIds.length;x++){var H,k,c;const t=this._activeTouchIds[x];if(null!==(H=(k=this._elementToAttachTo).hasPointerCapture)&&void 0!==H&&H.call(k,t)&&this._elementToAttachTo.releasePointerCapture(t),-1!==t&&1===(null===(c=R[x])||void 0===c?void 0:c[a.LeftClick])){R[x][a.LeftClick]=0;const H=E.CreateDeviceEvent(P.Touch,x,a.LeftClick,0,this,this._elementToAttachTo,t);this._onInputChanged(P.Touch,x,H),this._activeTouchIds[x]=-1,this._onDeviceDisconnected(P.Touch,x)}}}},this._pointerWheelEvent=R=>{const x=P.Mouse;this._inputs[x]||(this._inputs[x]=[]),this._inputs[x][0]||(this._pointerActive=!0,this._registerDevice(x,0,h));const H=this._inputs[x][0];if(H){H[a.MouseWheelX]=R.deltaX||0,H[a.MouseWheelY]=R.deltaY||R.wheelDelta||0,H[a.MouseWheelZ]=R.deltaZ||0;const k=R;void 0===R.pointerId&&(R.pointerId=this._mouseId),0!==H[a.MouseWheelX]&&(k.inputIndex=a.MouseWheelX,this._onInputChanged(x,0,k)),0!==H[a.MouseWheelY]&&(k.inputIndex=a.MouseWheelY,this._onInputChanged(x,0,k)),0!==H[a.MouseWheelZ]&&(k.inputIndex=a.MouseWheelZ,this._onInputChanged(x,0,k))}},this._usingMacOs&&this._isUsingChromium&&(this._pointerMacOsChromeOutEvent=R=>{R.buttons>1&&this._pointerCancelEvent(R)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!R&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(P.Mouse)){const R=this._inputs[P.Mouse][0];R[a.MouseWheelX]=0,R[a.MouseWheelY]=0,R[a.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=R=>{this._addGamePad(R.gamepad)},this._gamepadDisconnectedEvent=R=>{if(this._gamepads){const x=this._getGamepadDeviceType(R.gamepad.id),H=R.gamepad.index;this._unregisterDevice(x,H),delete this._gamepads[H]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(R,x,H){const k=navigator.getGamepads()[x];if(k&&R===this._gamepads[x]){const c=this._inputs[R][x];H>=k.buttons.length?c[H]=k.axes[H-k.buttons.length].valueOf():c[H]=k.buttons[H].value}}_getGamepadDeviceType(R){return-1!==R.indexOf("054c")?-1!==R.indexOf("0ce6")?P.DualSense:P.DualShock:-1!==R.indexOf("Xbox One")||-1!==R.search("Xbox 360")||-1!==R.search("xinput")?P.Xbox:-1!==R.indexOf("057e")?P.Switch:P.Generic}_getPointerType(R){let x=P.Mouse;return("touch"===R.pointerType||"pen"===R.pointerType||R.touches)&&(x=P.Touch),x}}class N{constructor(R,x){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=x,this.deviceSlot=H,this.onInputChangedObservable=new t.d,this._deviceInputSystem=R}getInput(R){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,R)}}class W{constructor(R){this._registeredManagers=new Array,this._refCount=0,this.registerManager=R=>{for(let x=0;x<this._devices.length;x++){const H=this._devices[x];for(const k in H){const H=+k;R._addDevice(new N(this._deviceInputSystem,x,H))}}this._registeredManagers.push(R)},this.unregisterManager=R=>{const x=this._registeredManagers.indexOf(R);x>-1&&this._registeredManagers.splice(x,1)};const x=Object.keys(P).length/2;this._devices=new Array(x);const H=(R,x)=>{this._devices[R]||(this._devices[R]=new Array),this._devices[R][x]||(this._devices[R][x]=x);for(const H of this._registeredManagers){const k=new N(this._deviceInputSystem,R,x);H._addDevice(k)}},k=(R,x)=>{var H;null!==(H=this._devices[R])&&void 0!==H&&H[x]&&delete this._devices[R][x];for(const k of this._registeredManagers)k._removeDevice(R,x)},c=(R,x,H)=>{if(H)for(const k of this._registeredManagers)k._onInputChanged(R,x,H)};"undefined"!==typeof _native?this._deviceInputSystem=new w(H,k,c):this._deviceInputSystem=new f(R,H,k,c)}dispose(){this._deviceInputSystem.dispose()}}class K{getDeviceSource(R,x){if(void 0===x){if(void 0===this._firstDevice[R])return null;x=this._firstDevice[R]}return this._devices[R]&&void 0!==this._devices[R][x]?this._devices[R][x]:null}getDeviceSources(R){return this._devices[R]?this._devices[R].filter((R=>!!R)):[]}constructor(R){const x=Object.keys(P).length/2;this._devices=new Array(x),this._firstDevice=new Array(x),this._engine=R,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new W(R)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new t.d((R=>{for(const x of this._devices)if(x)for(const H of x)H&&this.onDeviceConnectedObservable.notifyObserver(R,H)})),this.onDeviceDisconnectedObservable=new t.d,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=R.Vi.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.Vi.remove(this._onDisposeObserver)}_addDevice(R){this._devices[R.deviceType]||(this._devices[R.deviceType]=[]),this._devices[R.deviceType][R.deviceSlot]||(this._devices[R.deviceType][R.deviceSlot]=R,this._updateFirstDevices(R.deviceType)),this.onDeviceConnectedObservable.notifyObservers(R)}_removeDevice(R,x){var H,k;const c=null===(H=this._devices[R])||void 0===H?void 0:H[x];this.onDeviceDisconnectedObservable.notifyObservers(c),null!==(k=this._devices[R])&&void 0!==k&&k[x]&&delete this._devices[R][x],this._updateFirstDevices(R)}_onInputChanged(R,x,H){var k,c;null===(k=this._devices[R])||void 0===k||null===(c=k[x])||void 0===c||c.onInputChangedObservable.notifyObservers(H)}_updateFirstDevices(R){switch(R){case P.Keyboard:case P.Mouse:this._firstDevice[R]=0;break;case P.Touch:case P.DualSense:case P.DualShock:case P.Xbox:case P.Switch:case P.Generic:{delete this._firstDevice[R];const x=this._devices[R];if(x)for(let H=0;H<x.length;H++)if(x[H]){this._firstDevice[R]=H;break}break}}}}var Q=H(2484);class G{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(R){this._singleClick=R}set doubleClick(R){this._doubleClick=R}set hasSwiped(R){this._hasSwiped=R}set ignore(R){this._ignore=R}}class T{constructor(R){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new J.k(0,0),this._previousStartingPointerPosition=new J.k(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=R||b.c.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(R){return this._meshUnderPointerId[R]||null}get unTranslatedPointer(){return new J.k(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(R){this._pointerX=R}get pointerY(){return this._pointerY}set pointerY(R){this._pointerY=R}_updatePointerPosition(R){const x=this._scene.getEngine().getInputElementClientRect();x&&(this._pointerX=R.clientX-x.left,this._pointerY=R.clientY-x.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(R,x){const H=this._scene,k=H.getEngine(),c=k.getInputElement();c&&(c.tabIndex=k.canvasTabIndex,H.doNotHandleCursors||(c.style.cursor=H.defaultCursor)),this._setCursorAndPointerOverMesh(R,x,H);for(const U of H._pointerMoveStage){var t;const H=!(null===(t=R=R||this._pickMove(x))||void 0===t||!t.pickedMesh);R=U.action(this._unTranslatedPointerX,this._unTranslatedPointerY,R,H,c)}const A=x.inputIndex>=a.MouseWheelX&&x.inputIndex<=a.MouseWheelZ?F.e.POINTERWHEEL:F.e.POINTERMOVE;let D;H.onPointerMove&&(R=R||this._pickMove(x),H.onPointerMove(x,R,A)),R?(D=new F.j(A,x,R),this._setRayOnPointerInfo(R,x)):(D=new F.j(A,x,null,this),this._movePointerInfo=D),H.onPointerObservable.hasObservers()&&H.onPointerObservable.notifyObservers(D,A)}_setRayOnPointerInfo(R,x){const H=this._scene;R&&Q.e._IsPickingAvailable&&(R.ray||(R.ray=H.createPickingRay(x.offsetX,x.offsetY,J.e.Identity(),H.activeCamera)))}_addCameraPointerObserver(R,x){return this._cameraObserverCount++,this._scene.onPointerObservable.add(R,x)}_removeCameraPointerObserver(R){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(R)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(R,x,H){const k=this._scene,c=new F.f(H,x,this._unTranslatedPointerX,this._unTranslatedPointerY);return R&&(c.originalPickingInfo=R,c.ray=R.ray,"xr-near"===x.pointerType&&R.originMesh&&(c.nearInteractionPickingInfo=R)),k.onPrePointerObservable.notifyObservers(c,H),!!c.skipOnPointerObservable}_pickMove(R){const x=this._scene,H=x.Xk(this._unTranslatedPointerX,this._unTranslatedPointerY,x.pointerMovePredicate,x.pointerMoveFastCheck,x.cameraToUseForPointers,x.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(H,R,x),H}_setCursorAndPointerOverMesh(R,x,H){const k=H.getEngine().getInputElement();if(null!==R&&void 0!==R&&R.pickedMesh){if(this.setPointerOverMesh(R.pickedMesh,x.pointerId,R,x),!H.doNotHandleCursors&&k&&this._pointerOverMesh){const R=this._pointerOverMesh._getActionManagerForTrigger();R&&R.hasPointerTriggers&&(k.style.cursor=R.hoverCursor||H.hoverCursor)}}else this.setPointerOverMesh(null,x.pointerId,R,x)}simulatePointerMove(R,x){const H=new PointerEvent("pointermove",x);H.inputIndex=a.Move,this._checkPrePointerObservable(R,H,F.e.POINTERMOVE)||this._processPointerMove(R,H)}simulatePointerDown(R,x){const H=new PointerEvent("pointerdown",x);H.inputIndex=H.button+2,this._checkPrePointerObservable(R,H,F.e.POINTERDOWN)||this._processPointerDown(R,H)}_processPointerDown(R,x){var H;const k=this._scene;if(null!==(H=R)&&void 0!==H&&H.pickedMesh){this._pickedDownMesh=R.pickedMesh;const H=R.pickedMesh._getActionManagerForTrigger();if(H){if(H.hasPickTriggers)switch(H.processTrigger(5,new I(R.pickedMesh,k.pointerX,k.pointerY,R.pickedMesh,x,R)),x.button){case 0:H.processTrigger(2,new I(R.pickedMesh,k.pointerX,k.pointerY,R.pickedMesh,x,R));break;case 1:H.processTrigger(4,new I(R.pickedMesh,k.pointerX,k.pointerY,R.pickedMesh,x,R));break;case 2:H.processTrigger(3,new I(R.pickedMesh,k.pointerX,k.pointerY,R.pickedMesh,x,R))}H.hasSpecificTrigger(8)&&window.setTimeout((()=>{const R=k.Xk(this._unTranslatedPointerX,this._unTranslatedPointerY,(R=>R.Mi&&R.isVisible&&R.isReady()&&R.actionManager&&R.actionManager.hasSpecificTrigger(8)&&R===this._pickedDownMesh),!1,k.cameraToUseForPointers);null!==R&&void 0!==R&&R.pickedMesh&&H&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>T.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,H.processTrigger(8,I.CreateNew(R.pickedMesh,x)))}),T.LongPressDelay)}}else for(const A of k._pointerDownStage)R=A.action(this._unTranslatedPointerX,this._unTranslatedPointerY,R,x,!1);let c;const t=F.e.POINTERDOWN;R?(k.onPointerDown&&k.onPointerDown(x,R,t),c=new F.j(t,x,R),this._setRayOnPointerInfo(R,x)):c=new F.j(t,x,null,this),k.onPointerObservable.hasObservers()&&k.onPointerObservable.notifyObservers(c,t)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(R,x,H){const k=new PointerEvent("pointerup",x);k.inputIndex=a.Move;const c=new G;H?c.doubleClick=!0:c.singleClick=!0,this._checkPrePointerObservable(R,k,F.e.POINTERUP)||this._processPointerUp(R,k,c)}_processPointerUp(R,x,H){var k;const c=this._scene;if(null!==(k=R)&&void 0!==k&&k.pickedMesh){if(this._pickedUpMesh=R.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(c.onPointerPick&&c.onPointerPick(x,R),H.singleClick&&!H.ignore&&c.onPointerObservable.observers.length>this._cameraObserverCount)){const H=F.e.POINTERPICK,k=new F.j(H,x,R);this._setRayOnPointerInfo(R,x),c.onPointerObservable.notifyObservers(k,H)}const k=R.pickedMesh._getActionManagerForTrigger();if(k&&!H.ignore){k.processTrigger(7,I.CreateNew(R.pickedMesh,x,R)),!H.hasSwiped&&H.singleClick&&k.processTrigger(1,I.CreateNew(R.pickedMesh,x,R));const c=R.pickedMesh._getActionManagerForTrigger(6);H.doubleClick&&c&&c.processTrigger(6,I.CreateNew(R.pickedMesh,x,R))}}else if(!H.ignore)for(const t of c._pointerUpStage)R=t.action(this._unTranslatedPointerX,this._unTranslatedPointerY,R,x,H.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const R=this._pickedDownMesh._getActionManagerForTrigger(16);R&&R.processTrigger(16,I.CreateNew(this._pickedDownMesh,x))}if(!H.ignore){const k=new F.j(F.e.POINTERUP,x,R);if(this._setRayOnPointerInfo(R,x),c.onPointerObservable.notifyObservers(k,F.e.POINTERUP),c.onPointerUp&&c.onPointerUp(x,R,F.e.POINTERUP),!H.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let k=0;if(H.singleClick?k=F.e.POINTERTAP:H.doubleClick&&(k=F.e.POINTERDOUBLETAP),k){const H=new F.j(k,x,R);c.onPointerObservable.hasObservers()&&c.onPointerObservable.hasSpecificMask(k)&&c.onPointerObservable.notifyObservers(H,k)}}}}isPointerCaptured(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[R]}attachControl(){let R=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],H=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const c=this._scene,t=c.getEngine();k||(k=t.getInputElement()),this._alreadyAttached&&this.Zi(),k&&(this._alreadyAttachedTo=k),this._deviceSourceManager=new K(t),this._initActionManager=R=>{if(!this._meshPickProceed){const x=c.skipPointerUpPicking||0===c._registeredActions&&!this._checkForPicking()&&!c.onPointerUp?null:c.Xk(this._unTranslatedPointerX,this._unTranslatedPointerY,c.pointerUpPredicate,c.pointerUpFastCheck,c.cameraToUseForPointers,c.pointerUpTrianglePredicate);this._currentPickResult=x,x&&(R=x.hit&&x.pickedMesh?x.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return R},this._delayedSimpleClick=(R,x,H)=>{if((Date.now()-this._previousStartingPointerTime>T.DoubleClickDelay&&!this._doubleClickOccured||R!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,x.singleClick=!0,x.ignore=!1,this._delayedClicks[R])){const x=this._delayedClicks[R].evt,H=F.e.POINTERTAP,k=new F.j(H,x,this._currentPickResult);c.onPointerObservable.hasObservers()&&c.onPointerObservable.hasSpecificMask(H)&&c.onPointerObservable.notifyObservers(k,H),this._delayedClicks[R]=null}},this._initClickEvent=(R,x,H,k)=>{const c=new G;this._currentPickResult=null;let t=null,A=R.hasSpecificMask(F.e.POINTERPICK)||x.hasSpecificMask(F.e.POINTERPICK)||R.hasSpecificMask(F.e.POINTERTAP)||x.hasSpecificMask(F.e.POINTERTAP)||R.hasSpecificMask(F.e.POINTERDOUBLETAP)||x.hasSpecificMask(F.e.POINTERDOUBLETAP);!A&&d&&(t=this._initActionManager(t,c),t&&(A=t.hasPickTriggers));let D=!1;if(A=A&&!this._isMultiTouchGesture,A){const A=H.button;if(c.hasSwiped=this._isPointerSwiping(),!c.hasSwiped){let V=!T.ExclusiveDoubleClickMode;if(V||(V=!R.hasSpecificMask(F.e.POINTERDOUBLETAP)&&!x.hasSpecificMask(F.e.POINTERDOUBLETAP),V&&!d.HasSpecificTrigger(6)&&(t=this._initActionManager(t,c),t&&(V=!t.hasSpecificTrigger(6)))),V)(Date.now()-this._previousStartingPointerTime>T.DoubleClickDelay||A!==this._previousButtonPressed)&&(c.singleClick=!0,k(c,this._currentPickResult),D=!0);else{const R={evt:H,clickInfo:c,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,A,c,k),T.DoubleClickDelay)};this._delayedClicks[A]=R}let n=R.hasSpecificMask(F.e.POINTERDOUBLETAP)||x.hasSpecificMask(F.e.POINTERDOUBLETAP);if(!n&&d.HasSpecificTrigger(6)&&(t=this._initActionManager(t,c),t&&(n=t.hasSpecificTrigger(6))),n)if(A===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<T.DoubleClickDelay&&!this._doubleClickOccured){if(c.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=A,T.ExclusiveDoubleClickMode){var U;if(this._delayedClicks[A])clearTimeout(null===(U=this._delayedClicks[A])||void 0===U?void 0:U.timeoutId),this._delayedClicks[A]=null;k(c,this._previousPickResult)}else k(c,this._currentPickResult);else{var J;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,c.doubleClick=!0,c.ignore=!1,T.ExclusiveDoubleClickMode&&this._delayedClicks[A])clearTimeout(null===(J=this._delayedClicks[A])||void 0===J?void 0:J.timeoutId),this._delayedClicks[A]=null;k(c,this._currentPickResult)}D=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=A}}D||k(c,this._currentPickResult)},this._onPointerMove=R=>{if(this._updatePointerPosition(R),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>T.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>T.DragMovementThreshold),t.isPointerLock&&t._verifyPointerLock(),this._checkPrePointerObservable(null,R,R.inputIndex>=a.MouseWheelX&&R.inputIndex<=a.MouseWheelZ?F.e.POINTERWHEEL:F.e.POINTERMOVE))return;if(!c.cameraToUseForPointers&&!c.activeCamera)return;if(c.Nl)return void this._processPointerMove(new g.c,R);c.pointerMovePredicate||(c.pointerMovePredicate=R=>R.Mi&&R.isVisible&&R.isReady()&&R.isEnabled()&&(R.enablePointerMoveEvents||c.constantlyUpdateMeshUnderPointer||null!==R._getActionManagerForTrigger())&&(!c.cameraToUseForPointers||0!==(c.cameraToUseForPointers.layerMask&R.layerMask)));const x=c._registeredActions>0||c.constantlyUpdateMeshUnderPointer?this._pickMove(R):null;this._processPointerMove(x,R)},this._onPointerDown=R=>{const x=this._activePointerIds.indexOf(-1);if(-1===x?this._activePointerIds.push(R.pointerId):this._activePointerIds[x]=R.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,T.ExclusiveDoubleClickMode)for(let k=0;k<this._delayedClicks.length;k++)if(this._delayedClicks[k])if(R.button===k){var H;clearTimeout(null===(H=this._delayedClicks[k])||void 0===H?void 0:H.timeoutId)}else{const R=this._delayedClicks[k].clickInfo;this._doubleClickOccured=!1,R.singleClick=!0,R.ignore=!1;const x=this._delayedClicks[k].evt,H=F.e.POINTERTAP,t=new F.j(H,x,this._currentPickResult);c.onPointerObservable.hasObservers()&&c.onPointerObservable.hasSpecificMask(H)&&c.onPointerObservable.notifyObservers(t,H),this._delayedClicks[k]=null}if(this._updatePointerPosition(R),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=R.button),c.preventDefaultOnPointerDown&&k&&(R.preventDefault(),k.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,R,F.e.POINTERDOWN))return;if(!c.cameraToUseForPointers&&!c.activeCamera)return;let t;this._pointerCaptures[R.pointerId]=!0,c.pointerDownPredicate||(c.pointerDownPredicate=R=>R.Mi&&R.isVisible&&R.isReady()&&R.isEnabled()&&(!c.cameraToUseForPointers||0!==(c.cameraToUseForPointers.layerMask&R.layerMask))),this._pickedDownMesh=null,t=c.skipPointerDownPicking||0===c._registeredActions&&!this._checkForPicking()&&!c.onPointerDown?new g.c:c.Xk(this._unTranslatedPointerX,this._unTranslatedPointerY,c.pointerDownPredicate,c.pointerDownFastCheck,c.cameraToUseForPointers,c.pointerDownTrianglePredicate),this._processPointerDown(t,R)},this._onPointerUp=R=>{const x=this._activePointerIds.indexOf(R.pointerId);-1!==x&&(this._activePointerIds[x]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(R),c.preventDefaultOnPointerUp&&k&&(R.preventDefault(),k.focus()),this._initClickEvent(c.onPrePointerObservable,c.onPointerObservable,R,((x,H)=>{if(c.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!x.ignore)){if(this._checkPrePointerObservable(null,R,F.e.POINTERUP))return this._swipeButtonPressed===R.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===R.buttons&&(this._pointerCaptures[R.pointerId]=!1));x.hasSwiped||(x.singleClick&&c.onPrePointerObservable.hasSpecificMask(F.e.POINTERTAP)&&this._checkPrePointerObservable(null,R,F.e.POINTERTAP)&&(this._skipPointerTap=!0),x.doubleClick&&c.onPrePointerObservable.hasSpecificMask(F.e.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,R,F.e.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[R.pointerId]?(0===R.buttons&&(this._pointerCaptures[R.pointerId]=!1),(c.cameraToUseForPointers||c.activeCamera)&&(c.pointerUpPredicate||(c.pointerUpPredicate=R=>R.Mi&&R.isVisible&&R.isReady()&&R.isEnabled()&&(!c.cameraToUseForPointers||0!==(c.cameraToUseForPointers.layerMask&R.layerMask))),!this._meshPickProceed&&(d&&d.HasTriggers||this._checkForPicking()||c.onPointerUp)&&this._initActionManager(null,x),H||(H=this._currentPickResult),this._processPointerUp(H,R,x),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===R.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===R.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=R=>{const x=y.e.KEYDOWN;if(c.onPreKeyboardObservable.hasObservers()){const H=new y.f(x,R);if(c.onPreKeyboardObservable.notifyObservers(H,x),H.skipOnKeyboardObservable)return}if(c.onKeyboardObservable.hasObservers()){const H=new y.i(x,R);c.onKeyboardObservable.notifyObservers(H,x)}c.actionManager&&c.actionManager.processTrigger(14,I.CreateNewFromScene(c,R))},this._onKeyUp=R=>{const x=y.e.KEYUP;if(c.onPreKeyboardObservable.hasObservers()){const H=new y.f(x,R);if(c.onPreKeyboardObservable.notifyObservers(H,x),H.skipOnKeyboardObservable)return}if(c.onKeyboardObservable.hasObservers()){const H=new y.i(x,R);c.onKeyboardObservable.notifyObservers(H,x)}c.actionManager&&c.actionManager.processTrigger(15,I.CreateNewFromScene(c,R))},this._deviceSourceManager.onDeviceConnectedObservable.add((k=>{k.deviceType===P.Mouse?k.onInputChangedObservable.add((c=>{this._originMouseEvent=c,c.inputIndex===a.LeftClick||c.inputIndex===a.MiddleClick||c.inputIndex===a.RightClick||c.inputIndex===a.BrowserBack||c.inputIndex===a.BrowserForward?x&&1===k.getInput(c.inputIndex)?this._onPointerDown(c):R&&0===k.getInput(c.inputIndex)&&this._onPointerUp(c):H&&(c.inputIndex===a.Move?this._onPointerMove(c):c.inputIndex!==a.MouseWheelX&&c.inputIndex!==a.MouseWheelY&&c.inputIndex!==a.MouseWheelZ||this._onPointerMove(c))})):k.deviceType===P.Touch?k.onInputChangedObservable.add((c=>{c.inputIndex===a.LeftClick&&(x&&1===k.getInput(c.inputIndex)?(this._onPointerDown(c),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):R&&0===k.getInput(c.inputIndex)&&(this._onPointerUp(c),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),H&&c.inputIndex===a.Move&&this._onPointerMove(c)})):k.deviceType===P.Keyboard&&k.onInputChangedObservable.add((R=>{"keydown"===R.type?this._onKeyDown(R):"keyup"===R.type&&this._onKeyUp(R)}))})),this._alreadyAttached=!0}Zi(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(R){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,H=arguments.length>2?arguments[2]:void 0,k=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[x]===R&&(!R||!R._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const c=this._meshUnderPointerId[x];let t;c&&(t=c._getActionManagerForTrigger(10),t&&t.processTrigger(10,new I(c,this._pointerX,this._pointerY,R,k,{pointerId:x}))),R?(this._meshUnderPointerId[x]=R,this._pointerOverMesh=R,t=R._getActionManagerForTrigger(9),t&&t.processTrigger(9,new I(R,this._pointerX,this._pointerY,R,k,{pointerId:x,pickResult:H}))):(delete this._meshUnderPointerId[x],this._pointerOverMesh=null),this._scene.onMeshUnderPointerUpdatedObservable.hasObservers()&&this._scene.onMeshUnderPointerUpdatedObservable.notifyObservers({mesh:R,pointerId:x})}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(R){this._pointerOverMesh===R&&(this._pointerOverMesh=null),this._pickedDownMesh===R&&(this._pickedDownMesh=null),this._pickedUpMesh===R&&(this._pickedUpMesh=null);for(const x in this._meshUnderPointerId)this._meshUnderPointerId[x]===R&&delete this._meshUnderPointerId[x]}}T.DragMovementThreshold=10,T.LongPressDelay=500,T.DoubleClickDelay=300,T.ExclusiveDoubleClickMode=!1;var v=H(2411),p=H(695),r=H(709),z=H(2486),j=H(517),m=H(845),O=H(672);class l{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Nl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var e,u=H(493),Y=H(610);!function(R){R[R.BackwardCompatible=0]="BackwardCompatible",R[R.Intermediate=1]="Intermediate",R[R.Aggressive=2]="Aggressive"}(e||(e={}));class RR{static DefaultMaterialFactory(R){throw(0,C.d)("eb")}static CollisionCoordinatorFactory(){throw(0,C.d)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(R){R!==this._clearColor&&(this._clearColor=R,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(R){if(R!==this._performancePriority){switch(this._performancePriority=R,R){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!1,this.Hl=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Nl=!0,this.Hl=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Nl=!0,this.Hl=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(R)}}set forceWireframe(R){this._forceWireframe!==R&&(this._forceWireframe=R,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(R){this._skipFrustumClipping!==R&&(this._skipFrustumClipping=R)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(R){this._forcePointsCloud!==R&&(this._forcePointsCloud=R,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(R){this._environmentTexture!==R&&(this._environmentTexture=R,this.onEnvironmentTextureChangedObservable.notifyObservers(R),this.markAllMaterialsAsDirty(1))}getNodes(){let R=[];R=R.concat(this.meshes),R=R.concat(this.lights),R=R.concat(this.cameras),R=R.concat(this.transformNodes);for(const x of this.skeletons)R=R.concat(x.bones);return R}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(R){this._animationPropertiesOverride=R}set onDispose(R){this._onDisposeObserver&&this.Vi.remove(this._onDisposeObserver),this._onDisposeObserver=this.Vi.add(R)}set beforeRender(R){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),R&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(R))}set afterRender(R){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),R&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(R))}set beforeCameraRender(R){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(R)}set afterCameraRender(R){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(R)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(R){this._pointerPickingConfiguration.pointerDownPredicate=R}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(R){this._pointerPickingConfiguration.pointerUpPredicate=R}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(R){this._pointerPickingConfiguration.pointerMovePredicate=R}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(R){this._pointerPickingConfiguration.pointerDownFastCheck=R}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(R){this._pointerPickingConfiguration.pointerUpFastCheck=R}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(R){this._pointerPickingConfiguration.pointerMoveFastCheck=R}get Nl(){return this._pointerPickingConfiguration.Nl}set Nl(R){this._pointerPickingConfiguration.Nl=R}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(R){this._pointerPickingConfiguration.skipPointerDownPicking=R}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(R){this._pointerPickingConfiguration.skipPointerUpPicking=R}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return T.DragMovementThreshold}static set DragMovementThreshold(R){T.DragMovementThreshold=R}static get LongPressDelay(){return T.LongPressDelay}static set LongPressDelay(R){T.LongPressDelay=R}static get DoubleClickDelay(){return T.DoubleClickDelay}static set DoubleClickDelay(R){T.DoubleClickDelay=R}static get ExclusiveDoubleClickMode(){return T.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(R){T.ExclusiveDoubleClickMode=R}bindEyePosition(R){var x;let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",k=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const c=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(null===(x=this.activeCamera)||void 0===x?void 0:x.globalPosition)??J.o.ZeroReadOnly,t=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return J.g.Vector4[0].set(c.x,c.y,c.z,t?-1:1),R&&(k?R.setFloat3(H,J.g.Vector4[0].x,J.g.Vector4[0].y,J.g.Vector4[0].z):R.setVector4(H,J.g.Vector4[0])),J.g.Vector4[0]}finalizeSceneUbo(){const R=this.getSceneUniformBuffer(),x=this.bindEyePosition(null);return R.updateFloat4("vEyePosition",x.x,x.y,x.z,x.w),R.update(),R}set useRightHandedSystem(R){this._useRightHandedSystem!==R&&(this._useRightHandedSystem=R,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(R){this._currentStepId=R}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(R){this._fogEnabled!==R&&(this._fogEnabled=R,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(R){this._fogMode!==R&&(this._fogMode=R,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(R){this._shadowsEnabled!==R&&(this._shadowsEnabled=R,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(R){this._lightsEnabled!==R&&(this._lightsEnabled=R,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(R){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),R&&(this._unObserveActiveCameras=(0,O.h)(R,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=R}get activeCamera(){return this._activeCamera}set activeCamera(R){R!==this._activeCamera&&(this._activeCamera=R,this.onActiveCameraChanged.notifyObservers(this))}get _hasDefaultMaterial(){return RR.DefaultMaterialFactory!==RR._OriginalDefaultMaterialFactory}get defaultMaterial(){return this.sl||(this.sl=RR.DefaultMaterialFactory(this)),this.sl}set defaultMaterial(R){this.sl=R}set texturesEnabled(R){this._texturesEnabled!==R&&(this._texturesEnabled=R,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(R){if(this._frameGraph)return this._frameGraph=R,void(R||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=R,R&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph,this.activeCamera=null)}set skeletonsEnabled(R){this._skeletonsEnabled!==R&&(this._skeletonsEnabled=R,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=RR.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const R of this._transientComponents)R.register();this._transientComponents.length=0}}o(R){this._components.push(R),this._transientComponents.push(R);const x=R;x.addFromContainer&&x.serialize&&this._serializableComponents.push(x)}_getComponent(R){for(const x of this._components)if(x.name===R)return x;return null}get uniqueId(){return this._uniqueId}constructor(R,x){this._inputManager=new T(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.Hl=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new p.d(.2,.2,.3,1),this.onClearColorChangedObservable=new t.d,this.ambientColor=new p.c(0,0,0),this.environmentIntensity=1,this.iblIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new t.d,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.Ei=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.qm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.Vi=new t.d,this._onDisposeObserver=null,this.onBeforeRenderObservable=new t.d,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new t.d,this.onAfterRenderCameraObservable=new t.d,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new t.d,this.onAfterAnimationsObservable=new t.d,this.onBeforeDrawPhaseObservable=new t.d,this.onAfterDrawPhaseObservable=new t.d,this.onReadyObservable=new t.d,this.onBeforeCameraRenderObservable=new t.d,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new t.d,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new t.d,this.onAfterActiveMeshesEvaluationObservable=new t.d,this.onBeforeParticlesRenderingObservable=new t.d,this.onAfterParticlesRenderingObservable=new t.d,this.onDataLoadedObservable=new t.d,this.onNewCameraAddedObservable=new t.d,this.onCameraRemovedObservable=new t.d,this.onNewLightAddedObservable=new t.d,this.onLightRemovedObservable=new t.d,this.onNewGeometryAddedObservable=new t.d,this.onGeometryRemovedObservable=new t.d,this.onNewTransformNodeAddedObservable=new t.d,this.onTransformNodeRemovedObservable=new t.d,this.onNewMeshAddedObservable=new t.d,this.onMeshRemovedObservable=new t.d,this.onNewSkeletonAddedObservable=new t.d,this.onSkeletonRemovedObservable=new t.d,this.onNewMaterialAddedObservable=new t.d,this.onNewMultiMaterialAddedObservable=new t.d,this.onMaterialRemovedObservable=new t.d,this.onMultiMaterialRemovedObservable=new t.d,this.onNewTextureAddedObservable=new t.d,this.onTextureRemovedObservable=new t.d,this.onBeforeRenderTargetsRenderObservable=new t.d,this.onAfterRenderTargetsRenderObservable=new t.d,this.onBeforeStepObservable=new t.d,this.onAfterStepObservable=new t.d,this.onActiveCameraChanged=new t.d,this.onActiveCamerasChanged=new t.d,this.onBeforeRenderingGroupObservable=new t.d,this.onAfterRenderingGroupObservable=new t.d,this.onMeshImportedObservable=new t.d,this.onAnimationFileImportedObservable=new t.d,this.onEnvironmentTextureChangedObservable=new t.d,this.onMeshUnderPointerUpdatedObservable=new t.d,this._registeredForLateAnimationBindings=new A.d(256),this._pointerPickingConfiguration=new l,this.onPrePointerObservable=new t.d,this.onPointerObservable=new t.d,this.onPreKeyboardObservable=new t.d,this.onKeyboardObservable=new t.d,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=RR.FOGMODE_NONE,this.fogColor=new p.c(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.frameGraphs=[],this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new J.o(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new A.d(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new v.e,this._activeIndices=new v.e,this._activeParticles=new v.e,this._activeBones=new v.e,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=[],this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new A.f(256),this._processedMaterials=new A.f(256),this._renderTargets=new A.d(256),this._materialsRenderTargets=new A.d(256),this._activeParticleSystems=new A.f(256),this._activeSkeletons=new A.d(32),this._softwareSkinnedMeshes=new A.d(32),this._activeAnimatables=new Array,this._transformMatrix=J.e.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=S.h.Create(),this._beforeClearStage=S.h.Create(),this._beforeRenderTargetClearStage=S.h.Create(),this._gatherRenderTargetsStage=S.h.Create(),this._gatherActiveCameraRenderTargetsStage=S.h.Create(),this._isReadyForMeshStage=S.h.Create(),this._beforeEvaluateActiveMeshStage=S.h.Create(),this._evaluateSubMeshStage=S.h.Create(),this._preActiveMeshStage=S.h.Create(),this._cameraDrawRenderTargetStage=S.h.Create(),this._beforeCameraDrawStage=S.h.Create(),this._beforeRenderTargetDrawStage=S.h.Create(),this._beforeRenderingGroupDrawStage=S.h.Create(),this._beforeRenderingMeshStage=S.h.Create(),this._afterRenderingMeshStage=S.h.Create(),this._afterRenderingGroupDrawStage=S.h.Create(),this._afterCameraDrawStage=S.h.Create(),this._afterCameraPostProcessStage=S.h.Create(),this._afterRenderTargetDrawStage=S.h.Create(),this._afterRenderTargetPostProcessStage=S.h.Create(),this._afterRenderStage=S.h.Create(),this._pointerMoveStage=S.h.Create(),this._pointerDownStage=S.h.Create(),this._pointerUpStage=S.h.Create(),this._geometriesByUniqueId=null,this._uniqueId=0,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._useCurrentFrameBuffer=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[],this._uniqueId=this.getUniqueId();const H={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...x};R=this._engine=R||b.c.LastCreatedEngine,H.virtual?R._virtualScenes.push(this):(b.c._LastCreatedScene=this,R.scenes.push(this)),this._uid=null,this._renderingManager=new q.c(this),i.e&&(this.postProcessManager=new i.e(this)),(0,L.j)()&&this.attachControl(),this._createUbo(),V.c&&(this._imageProcessingConfiguration=new V.c),this.setDefaultCandidateProviders(),H.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=H.useMaterialMeshMap,this.useClonedMeshMap=H.useClonedMeshMap,x&&x.virtual||R.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(R){return this._defaultSubMeshCandidates.data=R.Ii,this._defaultSubMeshCandidates.length=R.Ii.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=R=>this._getDefaultSubMeshCandidates(R),this.getIntersectingSubMeshCandidates=(R,x)=>this._getDefaultSubMeshCandidates(R),this.getCollidingSubMeshCandidates=(R,x)=>this._getDefaultSubMeshCandidates(R)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(R){this._inputManager.pointerX=R}get pointerY(){return this._inputManager.pointerY}set pointerY(R){this._inputManager.pointerY=R}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(R,x){let H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==x||this._cachedMaterial!==R||this._cachedVisibility!==H}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(R,x){return this._inputManager.simulatePointerMove(R,x),this}simulatePointerDown(R,x){return this._inputManager.simulatePointerDown(R,x),this}simulatePointerUp(R,x,H){return this._inputManager.simulatePointerUp(R,x,H),this}isPointerCaptured(){let R=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(R)}attachControl(){let R=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],H=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(R,x,H)}Zi(){this._inputManager.Zi()}isReady(){var R,x;let H,k=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const c=this.getEngine(),t=c.currentRenderPassId;c.currentRenderPassId=(null===(R=this.activeCamera)||void 0===R?void 0:R.renderPassId)??t;let A=!0;for(this._pendingData.length>0&&(A=!1),null===(x=this.prePassRenderer)||void 0===x||x.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&A&&(A=this.depthPeelingRenderer.isReady()),k&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),H=0;H<this.meshes.length;H++){const R=this.meshes[H];if(!R.Ii||0===R.Ii.length)continue;if(!R.isReady(!0)){A=!1;continue}const x=R.hasThinInstances||"InstancedMesh"===R.getClassName()||"InstancedLinesMesh"===R.getClassName()||c.getCaps().instancedArrays&&R.instances.length>0;for(const H of this._isReadyForMeshStage)H.action(R,x)||(A=!1);if(!k)continue;const t=R.material||this.defaultMaterial;if(t)if(t._storeEffectOnSubMeshes)for(const H of R.Ii){const R=H.Ha();R&&R.hasRenderTargetTextures&&null!=R.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(R)&&(this._processedMaterials.push(R),this._materialsRenderTargets.concatWithNoDuplicate(R.getRenderTargetTextures()))}else t.hasRenderTargetTextures&&null!=t.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(t)&&(this._processedMaterials.push(t),this._materialsRenderTargets.concatWithNoDuplicate(t.getRenderTargetTextures()))}if(k)for(H=0;H<this._materialsRenderTargets.length;++H){this._materialsRenderTargets.data[H].isReadyForRendering()||(A=!1)}for(H=0;H<this.geometries.length;H++){2===this.geometries[H].delayLoadState&&(A=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const D of this.activeCameras)D.isReady(!0)||(A=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(A=!1));for(const D of this.Ei)D.isReady()||(A=!1);if(this.layers)for(const D of this.layers)D.isReady()||(A=!1);if(this.effectLayers)for(const D of this.effectLayers)D.isLayerReady()||(A=!1);return c.areAllEffectsReady()||(A=!1),c.currentRenderPassId=t,A}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(R){this.onBeforeRenderObservable.add(R)}unregisterBeforeRender(R){this.onBeforeRenderObservable.removeCallback(R)}registerAfterRender(R){this.onAfterRenderObservable.add(R)}unregisterAfterRender(R){this.onAfterRenderObservable.removeCallback(R)}_executeOnceBeforeRender(R){const x=()=>{R(),setTimeout((()=>{this.unregisterBeforeRender(x)}))};this.registerBeforeRender(x)}executeOnceBeforeRender(R,x){void 0!==x?setTimeout((()=>{this._executeOnceBeforeRender(R)}),x):this._executeOnceBeforeRender(R)}addPendingData(R){this._pendingData.push(R)}removePendingData(R){const x=this.isLoading,H=this._pendingData.indexOf(R);-1!==H&&this._pendingData.splice(H,1),x&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(R),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(x)}async whenReadyAsync(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return await new Promise((x=>{this.executeWhenReady((()=>{x()}),R)}))}_checkIsReady(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(R)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(R)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=c.c.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(R,x,H,k){H||k||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===R.updateFlag&&this._projectionUpdateFlag===x.updateFlag||(this._viewUpdateFlag=R.updateFlag,this._projectionUpdateFlag=x.updateFlag,this._viewMatrix=R,this._projectionMatrix=x,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?r.b.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=r.b.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(H,k):this._sceneUbo.useUbo&&(this._sceneUbo.jj("viewProjection",this._transformMatrix),this._sceneUbo.jj("view",this._viewMatrix),this._sceneUbo.jj("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(R){const x=new n.d(this._engine,void 0,!1,R??"Yk");return x.addUniform("viewProjection",16),x.addUniform("view",16),x.addUniform("projection",16),x.addUniform("vEyePosition",4),x}setSceneUniformBuffer(R){this._sceneUbo=R,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return z.e.UniqueId}ij(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._blockEntityCollection&&(this.meshes.push(R),R._resyncLightSources(),R.parent||R._addToSceneRootNodes(),k.e.SetImmediate((()=>{this.onNewMeshAddedObservable.notifyObservers(R)})),x)){const x=R.getChildMeshes();for(const R of x)this.ij(R)}}kj(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const H=this.meshes.indexOf(R);if(-1!==H&&(this.meshes.splice(H,1),R.parent||R._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(R),this.onMeshRemovedObservable.notifyObservers(R),x){const x=R.getChildMeshes();for(const R of x)this.kj(R)}return H}addTransformNode(R){this._blockEntityCollection||R.va()===this&&-1!==R._indexInSceneTransformNodesArray||(R._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(R),R.parent||R._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(R))}removeTransformNode(R){const x=R._indexInSceneTransformNodesArray;if(-1!==x){if(x!==this.transformNodes.length-1){const R=this.transformNodes[this.transformNodes.length-1];this.transformNodes[x]=R,R._indexInSceneTransformNodesArray=x}R._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),R.parent||R._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(R),x}removeSkeleton(R){const x=this.skeletons.indexOf(R);return-1!==x&&(this.skeletons.splice(x,1),this.onSkeletonRemovedObservable.notifyObservers(R),this._executeActiveContainerCleanup(this._activeSkeletons)),x}removeMorphTargetManager(R){const x=this.morphTargetManagers.indexOf(R);return-1!==x&&this.morphTargetManagers.splice(x,1),x}removeLight(R){const x=this.lights.indexOf(R);if(-1!==x){for(const x of this.meshes)x._removeLightSource(R,!1);this.lights.splice(x,1),this.sortLightsByPriority(),R.parent||R._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(R),x}removeCamera(R){const x=this.cameras.indexOf(R);if(-1!==x&&(this.cameras.splice(x,1),R.parent||R._removeFromSceneRootNodes()),this.activeCameras){const x=this.activeCameras.indexOf(R);-1!==x&&this.activeCameras.splice(x,1)}return this.activeCamera===R&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(R),x}removeParticleSystem(R){const x=this.Ei.indexOf(R);return-1!==x&&(this.Ei.splice(x,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),x}removeAnimation(R){const x=this.animations.indexOf(R);return-1!==x&&this.animations.splice(x,1),x}stopAnimation(R,x,H){}removeAnimationGroup(R){const x=this.animationGroups.indexOf(R);return-1!==x&&this.animationGroups.splice(x,1),x}removeMultiMaterial(R){const x=this.multiMaterials.indexOf(R);return-1!==x&&this.multiMaterials.splice(x,1),this.onMultiMaterialRemovedObservable.notifyObservers(R),x}removeMaterial(R){const x=R._indexInSceneMaterialArray;if(-1!==x&&x<this.materials.length){if(x!==this.materials.length-1){const R=this.materials[this.materials.length-1];this.materials[x]=R,R._indexInSceneMaterialArray=x}R._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(R),x}removeActionManager(R){const x=this.actionManagers.indexOf(R);return-1!==x&&this.actionManagers.splice(x,1),x}removeTexture(R){const x=this.textures.indexOf(R);return-1!==x&&this.textures.splice(x,1),this.onTextureRemovedObservable.notifyObservers(R),x}addLight(R){if(!this._blockEntityCollection){this.lights.push(R),this.sortLightsByPriority(),R.parent||R._addToSceneRootNodes();for(const x of this.meshes)-1===x.lightSources.indexOf(R)&&(x.lightSources.push(R),x._resyncLightSources());k.e.SetImmediate((()=>{this.onNewLightAddedObservable.notifyObservers(R)}))}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(m.b.CompareLightsPriority)}addCamera(R){this._blockEntityCollection||(this.cameras.push(R),k.e.SetImmediate((()=>{this.onNewCameraAddedObservable.notifyObservers(R)})),R.parent||R._addToSceneRootNodes())}addSkeleton(R){this._blockEntityCollection||(this.skeletons.push(R),k.e.SetImmediate((()=>{this.onNewSkeletonAddedObservable.notifyObservers(R)})))}addParticleSystem(R){this._blockEntityCollection||this.Ei.push(R)}addAnimation(R){this._blockEntityCollection||this.animations.push(R)}addAnimationGroup(R){this._blockEntityCollection||this.animationGroups.push(R)}addMultiMaterial(R){this._blockEntityCollection||(this.multiMaterials.push(R),k.e.SetImmediate((()=>{this.onNewMultiMaterialAddedObservable.notifyObservers(R)})))}addMaterial(R){this._blockEntityCollection||R.va()===this&&-1!==R._indexInSceneMaterialArray||(R._indexInSceneMaterialArray=this.materials.length,this.materials.push(R),k.e.SetImmediate((()=>{this.onNewMaterialAddedObservable.notifyObservers(R)})))}addMorphTargetManager(R){this._blockEntityCollection||this.morphTargetManagers.push(R)}addGeometry(R){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[R.uniqueId]=this.geometries.length),this.geometries.push(R))}addActionManager(R){this.actionManagers.push(R)}addTexture(R){this._blockEntityCollection||(this.textures.push(R),this.onNewTextureAddedObservable.notifyObservers(R))}switchActiveCamera(R){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Zi(),this.activeCamera=R,x&&R.attachControl())}setActiveCameraById(R){const x=this.getCameraById(R);return x?(this.activeCamera=x,x):null}setActiveCameraByName(R){const x=this.getCameraByName(R);return x?(this.activeCamera=x,x):null}getAnimationGroupByName(R){for(let x=0;x<this.animationGroups.length;x++)if(this.animationGroups[x].name===R)return this.animationGroups[x];return null}_getMaterial(R,x){for(let H=0;H<this.materials.length;H++){const R=this.materials[H];if(x(R))return R}if(R)for(let H=0;H<this.multiMaterials.length;H++){const R=this.multiMaterials[H];if(x(R))return R}return null}getMaterialByUniqueID(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.getMaterialByUniqueId(R,x)}getMaterialByUniqueId(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.uniqueId===R))}getMaterialById(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.id===R))}getMaterialByName(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(x,(x=>x.name===R))}getLastMaterialById(R){let x=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let H=this.materials.length-1;H>=0;H--)if(this.materials[H].id===R)return this.materials[H];if(x)for(let H=this.multiMaterials.length-1;H>=0;H--)if(this.multiMaterials[H].id===R)return this.multiMaterials[H];return null}getTextureByUniqueId(R){for(let x=0;x<this.textures.length;x++)if(this.textures[x].uniqueId===R)return this.textures[x];return null}getTextureByName(R){for(let x=0;x<this.textures.length;x++)if(this.textures[x].name===R)return this.textures[x];return null}getCameraById(R){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].id===R)return this.cameras[x];return null}getCameraByUniqueId(R){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].uniqueId===R)return this.cameras[x];return null}getCameraByName(R){for(let x=0;x<this.cameras.length;x++)if(this.cameras[x].name===R)return this.cameras[x];return null}getBoneById(R){for(let x=0;x<this.skeletons.length;x++){const H=this.skeletons[x];for(let x=0;x<H.bones.length;x++)if(H.bones[x].id===R)return H.bones[x]}return null}getBoneByName(R){for(let x=0;x<this.skeletons.length;x++){const H=this.skeletons[x];for(let x=0;x<H.bones.length;x++)if(H.bones[x].name===R)return H.bones[x]}return null}getLightByName(R){for(let x=0;x<this.lights.length;x++)if(this.lights[x].name===R)return this.lights[x];return null}getLightById(R){for(let x=0;x<this.lights.length;x++)if(this.lights[x].id===R)return this.lights[x];return null}getLightByUniqueId(R){for(let x=0;x<this.lights.length;x++)if(this.lights[x].uniqueId===R)return this.lights[x];return null}getParticleSystemById(R){for(let x=0;x<this.Ei.length;x++)if(this.Ei[x].id===R)return this.Ei[x];return null}getGeometryById(R){for(let x=0;x<this.geometries.length;x++)if(this.geometries[x].id===R)return this.geometries[x];return null}_getGeometryByUniqueId(R){if(this._geometriesByUniqueId){const x=this._geometriesByUniqueId[R];if(void 0!==x)return this.geometries[x]}else for(let x=0;x<this.geometries.length;x++)if(this.geometries[x].uniqueId===R)return this.geometries[x];return null}getFrameGraphByName(R){for(let x=0;x<this.frameGraphs.length;x++)if(this.frameGraphs[x].name===R)return this.frameGraphs[x];return null}pushGeometry(R,x){return!(!x&&this._getGeometryByUniqueId(R.uniqueId))&&(this.addGeometry(R),k.e.SetImmediate((()=>{this.onNewGeometryAddedObservable.notifyObservers(R)})),!0)}removeGeometry(R){let x;if(this._geometriesByUniqueId){if(x=this._geometriesByUniqueId[R.uniqueId],void 0===x)return!1}else if(x=this.geometries.indexOf(R),x<0)return!1;if(x!==this.geometries.length-1){const R=this.geometries[this.geometries.length-1];R&&(this.geometries[x]=R,this._geometriesByUniqueId&&(this._geometriesByUniqueId[R.uniqueId]=x))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[R.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(R),!0}getGeometries(){return this.geometries}getMeshById(R){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].id===R)return this.meshes[x];return null}getMeshesById(R){return this.meshes.filter((function(x){return x.id===R}))}getTransformNodeById(R){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].id===R)return this.transformNodes[x];return null}getTransformNodeByUniqueId(R){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].uniqueId===R)return this.transformNodes[x];return null}getTransformNodesById(R){return this.transformNodes.filter((function(x){return x.id===R}))}getMeshByUniqueId(R){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].uniqueId===R)return this.meshes[x];return null}getLastMeshById(R){for(let x=this.meshes.length-1;x>=0;x--)if(this.meshes[x].id===R)return this.meshes[x];return null}getLastTransformNodeById(R){for(let x=this.transformNodes.length-1;x>=0;x--)if(this.transformNodes[x].id===R)return this.transformNodes[x];return null}getLastEntryById(R){let x;for(x=this.meshes.length-1;x>=0;x--)if(this.meshes[x].id===R)return this.meshes[x];for(x=this.transformNodes.length-1;x>=0;x--)if(this.transformNodes[x].id===R)return this.transformNodes[x];for(x=this.cameras.length-1;x>=0;x--)if(this.cameras[x].id===R)return this.cameras[x];for(x=this.lights.length-1;x>=0;x--)if(this.lights[x].id===R)return this.lights[x];return null}getNodeById(R){const x=this.getMeshById(R);if(x)return x;const H=this.getTransformNodeById(R);if(H)return H;const k=this.getLightById(R);if(k)return k;const c=this.getCameraById(R);if(c)return c;const t=this.getBoneById(R);return t||null}getNodeByName(R){const x=this.getMeshByName(R);if(x)return x;const H=this.getTransformNodeByName(R);if(H)return H;const k=this.getLightByName(R);if(k)return k;const c=this.getCameraByName(R);if(c)return c;const t=this.getBoneByName(R);return t||null}getMeshByName(R){for(let x=0;x<this.meshes.length;x++)if(this.meshes[x].name===R)return this.meshes[x];return null}getTransformNodeByName(R){for(let x=0;x<this.transformNodes.length;x++)if(this.transformNodes[x].name===R)return this.transformNodes[x];return null}getLastSkeletonById(R){for(let x=this.skeletons.length-1;x>=0;x--)if(this.skeletons[x].id===R)return this.skeletons[x];return null}getSkeletonByUniqueId(R){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].uniqueId===R)return this.skeletons[x];return null}getSkeletonById(R){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].id===R)return this.skeletons[x];return null}getSkeletonByName(R){for(let x=0;x<this.skeletons.length;x++)if(this.skeletons[x].name===R)return this.skeletons[x];return null}getMorphTargetManagerById(R){for(let x=0;x<this.morphTargetManagers.length;x++)if(this.morphTargetManagers[x].uniqueId===R)return this.morphTargetManagers[x];return null}getMorphTargetById(R){for(let x=0;x<this.morphTargetManagers.length;++x){const H=this.morphTargetManagers[x];for(let x=0;x<H.numTargets;++x){const k=H.getTarget(x);if(k.id===R)return k}}return null}getMorphTargetByName(R){for(let x=0;x<this.morphTargetManagers.length;++x){const H=this.morphTargetManagers[x];for(let x=0;x<H.numTargets;++x){const k=H.getTarget(x);if(k.name===R)return k}}return null}getPostProcessByName(R){for(let x=0;x<this.postProcesses.length;++x){const H=this.postProcesses[x];if(H.name===R)return H}return null}isActiveMesh(R){return-1!==this._activeMeshes.indexOf(R)}get uid(){return this._uid||(this._uid=k.e.RandomId()),this._uid}addExternalData(R,x){return this._externalData||(this._externalData=new D),this._externalData.add(R,x)}getExternalData(R){return this._externalData?this._externalData.get(R):null}getOrAddExternalDataWithFactory(R,x){return this._externalData||(this._externalData=new D),this._externalData.getOrAddWithFactory(R,x)}removeExternalData(R){return this._externalData.remove(R)}_evaluateSubMesh(R,x,H,k){if(k||R.isInFrustum(this._frustumPlanes)){for(const k of this._evaluateSubMeshStage)k.action(x,R);const H=R.Ha();null!==H&&void 0!==H&&(H.hasRenderTargetTextures&&null!=H.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(H)&&(this._processedMaterials.push(H),this._materialsRenderTargets.concatWithNoDuplicate(H.getRenderTargetTextures())),this._renderingManager.dispatch(R,x,H))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(R){this._preventFreeActiveMeshesAndRenderingGroups!==R&&(R&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=R)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let R=0;R<this.activeCameras.length;R++){const x=this.activeCameras[R];x&&x._activeMeshes&&x._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let R=0;R<this.textures.length;R++){const x=this.textures[R];x&&x.renderList&&x.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let R=arguments.length>0&&void 0!==arguments[0]&&arguments[0],x=arguments.length>1?arguments[1]:void 0,H=arguments.length>2?arguments[2]:void 0,k=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],c=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=c,this._skipEvaluateActiveMeshesCompletely=R,k)for(let R=0;R<this._activeMeshes.length;R++)this._activeMeshes.data[R]._freeze();x&&x()}else H&&H("No active camera found")})),this}unfreezeActiveMeshes(){for(let R=0;R<this.meshes.length;R++){const x=this.meshes[R];x._internalAbstractMeshDataInfo&&(x._internalAbstractMeshDataInfo._isActive=!1)}for(let R=0;R<this._activeMeshes.length;R++)this._activeMeshes.data[R]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(R){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>R.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var R;if(this._activeMeshes.length>0)null===(R=this.activeCamera)||void 0===R||R._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const R=this._activeMeshes.length;for(let x=0;x<R;x++){this._activeMeshes.data[x].Fi()}}if(this._activeParticleSystems){const R=this._activeParticleSystems.length;for(let x=0;x<R;x++)this._activeParticleSystems.data[x].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const k of this._beforeEvaluateActiveMeshStage)k.action();const x=this.getActiveMeshCandidates(),H=x.length;for(let k=0;k<H;k++){const R=x.data[k];let H=R._internalAbstractMeshDataInfo._currentLOD.get(this.activeCamera);if(H?H[1]=-1:(H=[R,-1],R._internalAbstractMeshDataInfo._currentLOD.set(this.activeCamera,H)),R.isBlocked)continue;if(this._totalVertices.addCount(R.getTotalVertices(),!1),!R.isReady()||!R.isEnabled()||R.ti.hasAZeroComponent)continue;R.Fi(),R.actionManager&&R.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(R);let c=this.customLODSelector?this.customLODSelector(R,this.activeCamera):R.getLOD(this.activeCamera);if(H[0]=c,H[1]=this._frameId,void 0!==c&&null!==c&&(c!==R&&0!==c.billboardMode&&c.Fi(),R._preActivate(),R.isVisible&&R.visibility>0&&0!==(R.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||R.li||R.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(R),this.activeCamera._activeMeshes.push(R),c!==R&&c._activate(this._renderId,!1);for(const x of this._preActiveMeshStage)x.action(R);R._activate(this._renderId,!1)&&(R.isAnInstance?R._internalAbstractMeshDataInfo._actAsRegularMesh&&(c=R):c._internalAbstractMeshDataInfo._onlyForInstances=!1,c._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(R,c)),R._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let R=0;R<this.Ei.length;R++){const x=this.Ei[R];if(!x.isStarted()||!x.j)continue;const H=x.j;H.position&&!H.isEnabled()||(this._activeParticleSystems.push(x),x.animate(),this._renderingManager.dispatchParticles(x))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(R){this._skeletonsEnabled&&R.skeleton&&(this._activeSkeletons.pushNoDuplicate(R.skeleton)&&(R.skeleton.prepare(),this._activeBones.addCount(R.skeleton.bones.length,!1)),R.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(R)&&this.frameGraph&&R.applySkeleton(R.skeleton))}_activeMesh(R,x){this._prepareSkeleton(x);let H=R.hasInstances||R.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||x.li;if(x&&x.Ii&&x.Ii.length>0){const k=this.getActiveSubMeshCandidates(x),c=k.length;H=H||1===c;for(let t=0;t<c;t++){const c=k.data[t];this._evaluateSubMesh(c,x,R,H)}}}updateTransformMatrix(R){const x=this.activeCamera;if(x)if(x._renderingMultiview){const H=x._rigCameras[0],k=x._rigCameras[1];this.setTransformMatrix(H.getViewMatrix(),H.getProjectionMatrix(R),k.getViewMatrix(),k.getProjectionMatrix(R))}else this.setTransformMatrix(x.getViewMatrix(),x.getProjectionMatrix(R))}_bindFrameBuffer(R){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._useCurrentFrameBuffer||(R&&R._multiviewTexture?R._multiviewTexture._bindFrameBuffer():R&&R.outputRenderTarget?R.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer()),x&&this._clearFrameBuffer(R)}_clearFrameBuffer(R){if(R&&R._multiviewTexture);else if(R&&R.outputRenderTarget&&!R._renderingMultiview){const x=R.outputRenderTarget;x.onClearObservable.hasObservers()?x.onClearObservable.notifyObservers(this._engine):x.skipInitialClear||R.isRightCamera||(this.Hl&&this._engine.clear(x.clearColor||this._clearColor,!x._cleared,!0,!0),x._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(R,x){var H;let c=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(R&&R._skipRendering)return;const t=this._engine;if(this._activeCamera=R,!this.activeCamera)throw new Error("Active camera not set");if(t.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&c){let x=!0;R._renderingMultiview&&R.outputRenderTarget&&(x=R.outputRenderTarget.skipInitialClear,this.Hl&&(this._defaultFrameBufferCleared=!1,R.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),R._renderingMultiview&&R.outputRenderTarget&&(R.outputRenderTarget.skipInitialClear=x)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let k=0;k<this._softwareSkinnedMeshes.length;k++){const R=this._softwareSkinnedMeshes.data[k];R.applySkeleton(R.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),R.customRenderTargets&&R.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(R.customRenderTargets),x&&x.customRenderTargets&&x.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(x.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const k of this._gatherActiveCameraRenderTargetsStage)k.action(this._renderTargets);let A=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){k.e.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let R=0;R<this._renderTargets.length;R++){const x=this._renderTargets.data[R];if(x._shouldRender()){this._renderId++;const R=x.activeCamera&&x.activeCamera!==this.activeCamera;x.render(R,this.dumpNextRenderTargets),A=!0}}k.e.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const R of this._cameraDrawRenderTargetStage)A=R.action(this.activeCamera)||A;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(H=R.outputRenderTarget)||void 0===H?void 0:H.renderPassId)??R.renderPassId??0,A&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||R._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const k of this._beforeCameraDrawStage)k.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),t.snapshotRendering&&1===t.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const k of this._afterCameraDrawStage)k.action(this.activeCamera);if(this.postProcessManager&&!R._multiviewTexture){const x=R.outputRenderTarget?R.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(R.isIntermediate,x)}for(const k of this._afterCameraPostProcessStage)k.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(R){let x=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===R.cameraRigMode||R._renderingMultiview)return R._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(R,void 0,x),void this.onAfterRenderCameraObservable.notifyObservers(R);if(R._useMultiviewToSingleView)this._renderMultiviewToSingleView(R);else{this.onBeforeCameraRenderObservable.notifyObservers(R);for(let x=0;x<R._rigCameras.length;x++)this._renderForCamera(R._rigCameras[x],R)}this._activeCamera=R,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(R)}_checkIntersections(){for(let R=0;R<this._meshesForIntersections.length;R++){const x=this._meshesForIntersections.data[R];if(x.actionManager)for(let R=0;x.actionManager&&R<x.actionManager.actions.length;R++){const H=x.actionManager.actions[R];if(12===H.trigger||13===H.trigger){const R=H.getTriggerParameter(),k=R.mesh?R.mesh:R,c=k.intersectsMesh(x,R.usePreciseIntersection),t=x._intersectionsInProgress.indexOf(k);c&&-1===t?12===H.trigger?(H._executeCurrent(I.CreateNew(x,void 0,k)),x._intersectionsInProgress.push(k)):13===H.trigger&&x._intersectionsInProgress.push(k):!c&&t>-1&&(13===H.trigger&&H._executeCurrent(I.CreateNew(x,void 0,k)),x.actionManager.hasSpecificTrigger(13,(R=>{const x=R.mesh?R.mesh:R;return k===x}))&&13!==H.trigger||x._intersectionsInProgress.splice(t,1))}}}}_advancePhysicsEngineStep(R){}_animate(R){}animate(){if(this._engine.isDeterministicLockStep()){let R=Math.max(RR.MinDeltaTime,Math.min(this._engine.getDeltaTime(),RR.MaxDeltaTime))+this._timeAccumulator;const x=this._engine.getTimeStep(),H=1e3/x/1e3;let k=0;const c=this._engine.getLockstepMaxSteps();let t=Math.floor(R/x);for(t=Math.min(t,c);R>0&&k<t;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=x*H,this._animate(x),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(x),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,k++,R-=x;this._timeAccumulator=R<0?0:R}else{const R=this.useConstantAnimationDeltaTime?16:Math.max(RR.MinDeltaTime,Math.min(this._engine.getDeltaTime(),RR.MaxDeltaTime));this._animationRatio=.06*R,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(R)}}_clear(){(this.autoClearDepthAndStencil||this.Hl)&&this._engine.clear(this._clearColor,this.Hl||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(R){var x;if(null===R||void 0===R||!R.outputRenderTarget||null!==R&&void 0!==R&&R.isRigCamera||(R.outputRenderTarget._cleared=!1),null!==R&&void 0!==R&&null!==(x=R.rigCameras)&&void 0!==x&&x.length)for(let H=0;H<R.rigCameras.length;++H){const x=R.rigCameras[H].outputRenderTarget;x&&(x._cleared=!1)}}resetDrawCache(R){if(this.meshes)for(const x of this.meshes)x.resetDrawCache(R)}_renderWithFrameGraph(){var R;let x=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),x)for(const c of this.cameras)if(c.update(),0!==c.cameraRigMode)for(let R=0;R<c._rigCameras.length;R++)c._rigCameras[R].update();this.onBeforeRenderObservable.notifyObservers(this);for(const c of this._beforeClearStage)c.action();const H=this.getActiveMeshCandidates(),k=H.length;for(let c=0;c<k;c++){const R=H.data[c];R.isBlocked||(this._totalVertices.addCount(R.getTotalVertices(),!1),R.isReady()&&R.isEnabled()&&!R.ti.hasAZeroComponent&&(R.Fi(),R.actionManager&&R.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(R)))}if(this.particlesEnabled)for(let c=0;c<this.Ei.length;c++){const R=this.Ei[c];if(!R.isStarted()||!R.j)continue;const x=R.j;x.position&&!x.isEnabled()||(this._activeParticleSystems.push(R),R.animate())}null===(R=this.frameGraph)||void 0===R||R.execute()}_renderRenderTarget(R,x){let H=arguments.length>2&&void 0!==arguments[2]&&arguments[2],k=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this._intermediateRendering=!0,R._shouldRender()){if(this._renderId++,this.activeCamera=x,!this.activeCamera)throw new Error("Active camera not set");this._engine.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),R.render(H,k)}this._intermediateRendering=!1}render(){var R;let x=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],H=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){if(this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(R=this.activeCameras)&&void 0!==R&&R.length)for(const R of this.activeCameras)this._checkCameraRenderTarget(R);this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),H||this.animate();for(const R of this._beforeCameraUpdateStage)R.action();if(x)if(this.activeCameras&&this.activeCameras.length>0)for(let R=0;R<this.activeCameras.length;R++){const x=this.activeCameras[R];if(x.update(),0!==x.cameraRigMode)for(let R=0;R<x._rigCameras.length;R++)x._rigCameras[R].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let R=0;R<this.activeCamera._rigCameras.length;R++)this.activeCamera._rigCameras[R].update();if(this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(x,H);else{var c;this.onBeforeRenderObservable.notifyObservers(this),this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const R=null!==(c=this.activeCameras)&&void 0!==c&&c.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){k.e.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0);for(let x=0;x<this.customRenderTargets.length;x++){const H=this.customRenderTargets[x],k=H.activeCamera||this.activeCamera;this._renderRenderTarget(H,k,R!==k,this.dumpNextRenderTargets)}k.e.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._renderId++}this._engine.currentRenderPassId=(null===R||void 0===R?void 0:R.renderPassId)??0,this.activeCamera=R,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const x of this._beforeClearStage)x.action();this._clearFrameBuffer(this.activeCamera);for(const x of this._gatherRenderTargetsStage)x.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let x=0;x<this.activeCameras.length;x++)this._processSubCameras(this.activeCameras[x],x>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const R of this._afterRenderStage)R.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let R=0;R<this._toBeDisposed.length;R++){const x=this._toBeDisposed[R];x&&x.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let R=0;R<this.materials.length;R++)this.materials[R].freeze()}unfreezeMaterials(){for(let R=0;R<this.materials.length;R++)this.materials[R].unfreeze()}dispose(){if(this.u)return;if(this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations){for(const R of this._activeAnimatables)R.onAnimationEndObservable.clear(),R.onAnimationEnd=null;this.stopAllAnimations()}this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const R=this._activeRequests.slice();for(const c of R)c.abort();this._activeRequests.length=0;try{this.Vi.notifyObservers(this)}catch(k){u.c.Error("An error occurred while calling onDisposeObservable!",k)}this.Zi();if(this._engine.getInputElement())for(let c=0;c<this.cameras.length;c++)this.cameras[c].Zi();this._disposeList(this.animationGroups),this._disposeList(this.lights),this.sl&&this.sl.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.meshes,(R=>R.dispose(!0))),this._disposeList(this.transformNodes,(R=>R.dispose(!0)));const x=this.cameras;this._disposeList(x),this._disposeList(this.Ei),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let H=this._engine.scenes.indexOf(this);if(H>-1&&this._engine.scenes.splice(H,1),b.c._LastCreatedScene===this){b.c._LastCreatedScene=null;let R=b.c.Instances.length-1;for(;R>=0;){const x=b.c.Instances[R];if(x.scenes.length>0){b.c._LastCreatedScene=x.scenes[this._engine.scenes.length-1];break}R--}}H=this._engine._virtualScenes.indexOf(this),H>-1&&this._engine._virtualScenes.splice(H,1),this._engine.wipeCaches(!0),this.Vi.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this.onEnvironmentTextureChangedObservable.clear(),this.onMeshUnderPointerUpdatedObservable.clear(),this._isDisposed=!0}_disposeList(R,x){const H=R.slice(0);x=x??(R=>R.dispose());for(const k of H)x(k);R.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let R=0;R<this.meshes.length;R++){const x=this.meshes[R].Ci;x&&x.clearCachedData()}}cleanCachedTextureBuffer(){for(const R of this.textures){R._buffer&&(R._buffer=null)}}getWorldExtends(R){const x=new J.o(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),H=new J.o(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);R=R||(()=>!0);const k=this.meshes.filter(R);for(const c of k){if(c.Fi(!0),!c.Ii||0===c.Ii.length||c.infiniteDistance)continue;const R=c.getBoundingInfo(),k=R.boundingBox.minimumWorld,t=R.boundingBox.maximumWorld;J.o.CheckExtends(k,x,H),J.o.CheckExtends(t,x,H)}return{min:x,max:H}}createPickingRay(R,x,H,k){throw(0,C.d)("Ray")}createPickingRayToRef(R,x,H,k,c){throw(0,C.d)("Ray")}createPickingRayInCameraSpace(R,x,H){throw(0,C.d)("Ray")}createPickingRayInCameraSpaceToRef(R,x,H,k){throw(0,C.d)("Ray")}Xk(R,x,H,k,c,t){const A=(0,C.d)("Ray",!0);return A&&u.c.Warn(A),new g.c}pickWithBoundingInfo(R,x,H,k,c){const t=(0,C.d)("Ray",!0);return t&&u.c.Warn(t),new g.c}pickWithRay(R,x,H,k){throw(0,C.d)("Ray")}multiPick(R,x,H,k,c){throw(0,C.d)("Ray")}multiPickWithRay(R,x,H){throw(0,C.d)("Ray")}setPointerOverMesh(R,x,H){this._inputManager.setPointerOverMesh(R,x,H)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const R of this.geometries)R._rebuild();for(const R of this.meshes)R._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const R of this._components)R.rebuild();for(const R of this.Ei)R.rebuild();if(this.spriteManagers)for(const R of this.spriteManagers)R.rebuild()}_rebuildTextures(){for(const R of this.textures)R._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(R,x,H){if(void 0===x)return R;const k=[];for(const c in R){const t=R[c];U.c&&U.c.MatchesQuery(t,x)&&(!H||H(t))&&k.push(t)}return k}getMeshesByTags(R,x){return this._getByTags(this.meshes,R,x)}getCamerasByTags(R,x){return this._getByTags(this.cameras,R,x)}getLightsByTags(R,x){return this._getByTags(this.lights,R,x)}getMaterialByTags(R,x){return this._getByTags(this.materials,R,x).concat(this._getByTags(this.multiMaterials,R,x))}getTransformNodesByTags(R,x){return this._getByTags(this.transformNodes,R,x)}setRenderingOrder(R){let x=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,H=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,k=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(R,x,H,k)}setRenderingAutoClearDepthStencil(R,x){let H=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],k=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(R,x,H,k)}getAutoClearDepthStencilSetup(R){return this._renderingManager.getAutoClearDepthStencilSetup(R)}_forceBlockMaterialDirtyMechanism(R){this._blockMaterialDirtyMechanism=R}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(R){this._blockMaterialDirtyMechanism!==R&&(this._blockMaterialDirtyMechanism=R,R||this.markAllMaterialsAsDirty(127))}markAllMaterialsAsDirty(R,x){if(!this._blockMaterialDirtyMechanism)for(const H of this.materials)x&&!x(H)||H._i(R)}_loadFile(R,x,H,k,c,t,A){const D=(0,j.s)(R,x,H,k?this.offlineProvider:void 0,c,t,A);return this._activeRequests.push(D),D.onCompleteObservable.add((R=>{this._activeRequests.splice(this._activeRequests.indexOf(R),1)})),D}async _loadFileAsync(R,x,H,k,c){return await new Promise(((t,A)=>{this._loadFile(R,(R=>{t(R)}),x,H,k,((R,x)=>{A(x)}),c)}))}_requestFile(R,x,H,k,c,t,A){const D=(0,j.z)(R,x,H,k?this.offlineProvider:void 0,c,t,A);return this._activeRequests.push(D),D.onCompleteObservable.add((R=>{this._activeRequests.splice(this._activeRequests.indexOf(R),1)})),D}async _requestFileAsync(R,x,H,k,c){return await new Promise(((t,A)=>{this._requestFile(R,(R=>{t(R)}),x,H,k,(R=>{A(R)}),c)}))}_readFile(R,x,H,k,c){const t=(0,j.x)(R,x,H,k,c);return this._activeRequests.push(t),t.onCompleteObservable.add((R=>{this._activeRequests.splice(this._activeRequests.indexOf(R),1)})),t}async _readFileAsync(R,x,H){return await new Promise(((k,c)=>{this._readFile(R,(R=>{k(R)}),x,H,(R=>{c(R)}))}))}getPerfCollector(){throw(0,C.d)("performanceViewerSceneExtension")}setActiveCameraByID(R){return this.setActiveCameraById(R)}getMaterialByID(R){return this.getMaterialById(R)}getLastMaterialByID(R){return this.getLastMaterialById(R)}getTextureByUniqueID(R){return this.getTextureByUniqueId(R)}getCameraByID(R){return this.getCameraById(R)}getCameraByUniqueID(R){return this.getCameraByUniqueId(R)}getBoneByID(R){return this.getBoneById(R)}getLightByID(R){return this.getLightById(R)}getLightByUniqueID(R){return this.getLightByUniqueId(R)}getParticleSystemByID(R){return this.getParticleSystemById(R)}getGeometryByID(R){return this.getGeometryById(R)}getMeshByID(R){return this.getMeshById(R)}getMeshByUniqueID(R){return this.getMeshByUniqueId(R)}getLastMeshByID(R){return this.getLastMeshById(R)}getMeshesByID(R){return this.getMeshesById(R)}getTransformNodeByID(R){return this.getTransformNodeById(R)}getTransformNodeByUniqueID(R){return this.getTransformNodeByUniqueId(R)}getTransformNodesByID(R){return this.getTransformNodesById(R)}getNodeByID(R){return this.getNodeById(R)}getLastEntryByID(R){return this.getLastEntryById(R)}getLastSkeletonByID(R){return this.getLastSkeletonById(R)}}RR.FOGMODE_NONE=0,RR.FOGMODE_EXP=1,RR.FOGMODE_EXP2=2,RR.FOGMODE_LINEAR=3,RR.MinDeltaTime=1,RR.MaxDeltaTime=1e3,RR._OriginalDefaultMaterialFactory=RR.DefaultMaterialFactory,(0,Y.h)("BABYLON.Scene",RR)}}]);