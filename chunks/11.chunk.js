"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11],{2554:(W,F,c)=>{c.r(F),c.d(F,{Dispose:()=>N,DumpData:()=>j,DumpDataAsync:()=>x,DumpFramebuffer:()=>s,DumpTools:()=>q});var T=c(2375),Y=c(514),Z=c(712),w=c(543);let A,u=null;async function s(W,F,c,T){let Y=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",Z=arguments.length>5?arguments[5]:void 0,w=arguments.length>6?arguments[6]:void 0;const A=await c.readPixels(0,0,W,F);j(W,F,new Uint8Array(A.buffer),T,Y,Z,!0,void 0,w)}async function x(W,F,c){let T=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",Y=arguments.length>4?arguments[4]:void 0,Z=arguments.length>5&&void 0!==arguments[5]&&arguments[5],w=arguments.length>6&&void 0!==arguments[6]&&arguments[6],A=arguments.length>7?arguments[7]:void 0;return await new Promise((u=>{j(W,F,c,(W=>u(W)),T,Y,Z,w,A)}))}function j(W,F,s,x){let j=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",q=arguments.length>5?arguments[5]:void 0,y=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],e=arguments.length>8?arguments[8]:void 0;(async function(){return u||(u=new Promise(((W,F)=>{let Y,Z=null;const u={Rk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(c.bind(c,2395)).then((s=>{let{ThinEngine:x}=s;const j=w.e.Instances.length;try{Y=new OffscreenCanvas(100,100),Z=new x(Y,!1,u)}catch(i){var q;j<w.e.Instances.length&&(null===(q=w.e.Instances.pop())||void 0===q||q.dispose()),Y=document.createElement("canvas"),Z=new x(Y,!1,u)}w.e.Instances.pop(),w.e.OnEnginesDisposedObservable.add((W=>{Z&&W!==Z&&!Z.u&&0===w.e.Instances.length&&N()})),Z.getCaps().parallelShaderCompile=void 0;const y=new T.e(Z);c.e(35).then(c.bind(c,13083)).then((c=>{let{passPixelShader:w}=c;if(!Z)return void F("Engine is not defined");const u=new T.h({Ki:Z,name:w.name,fragmentShader:w.shader,samplerNames:["textureSampler"]});A={canvas:Y,Ki:Z,renderer:y,wrapper:u},W(A)}))})).catch(F)}))),await u})().then((c=>{if(c.Ki.setSize(W,F,!0),s instanceof Float32Array){const W=new Uint8Array(s.length);let F=s.length;for(;F--;){const c=s[F];W[F]=Math.round(255*(0,Z.c)(c))}s=W}const T=c.Ki.createRawTexture(s,W,F,5,!1,!y,1);c.renderer.setViewport(),c.renderer.applyEffectWrapper(c.wrapper),c.wrapper.effect._bindTexture("textureSampler",T),c.renderer.draw(),i?Y.d.ToBlob(c.canvas,(W=>{const F=new FileReader;F.onload=W=>{const F=W.target.result;x&&x(F)},F.readAsArrayBuffer(W)}),j,e):Y.d.EncodeScreenshotCanvasData(c.canvas,x,j,q,e),T.dispose()}))}function N(){var W;A?(A.wrapper.dispose(),A.renderer.dispose(),A.Ki.dispose()):null===(W=u)||void 0===W||W.then((W=>{W.wrapper.dispose(),W.renderer.dispose(),W.Ki.dispose()}));u=null,A=null}const q={DumpData:j,DumpDataAsync:x,DumpFramebuffer:s,Dispose:N};Y.d.DumpData=j,Y.d.DumpDataAsync=x,Y.d.DumpFramebuffer=s}}]);