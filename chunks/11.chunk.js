"use strict";(self.webpackChunkbloxd=self.webpackChunkbloxd||[]).push([[11,12],{2550:(Q,X,C)=>{var l;C.d(X,{b:()=>h}),function(Q){Q[Q.PointerMove=0]="PointerMove",Q[Q.PointerDown=1]="PointerDown",Q[Q.PointerUp=2]="PointerUp"}(l||(l={}));class h{}h.DOM_DELTA_PIXEL=0,h.DOM_DELTA_LINE=1,h.DOM_DELTA_PAGE=2},2547:(Q,X,C)=>{C.d(X,{d:()=>l,f:()=>M,i:()=>h});class l{}l.KEYDOWN=1,l.KEYUP=2;class h{constructor(Q,X){this.type=Q,this.event=X}}class M extends h{get skipOnPointerObservable(){return this.skipOnKeyboardObservable}set skipOnPointerObservable(Q){this.skipOnKeyboardObservable=Q}constructor(Q,X){super(Q,X),this.type=Q,this.event=X,this.skipOnKeyboardObservable=!1}}},2545:(Q,X,C)=>{C.d(X,{b:()=>h,f:()=>f,i:()=>O});var l=C(668);class h{}h.POINTERDOWN=1,h.POINTERUP=2,h.POINTERMOVE=4,h.POINTERWHEEL=8,h.POINTERPICK=16,h.POINTERTAP=32,h.POINTERDOUBLETAP=64;class M{constructor(Q,X){this.type=Q,this.event=X}}class f extends M{constructor(Q,X,C,h){super(Q,X),this.ray=null,this.originalPickingInfo=null,this.skipOnPointerObservable=!1,this.localPosition=new l.h(C,h)}}class O extends M{get pickInfo(){return this._pickInfo||this._generatePickInfo(),this._pickInfo}constructor(Q,X,C){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(Q,X),this._pickInfo=C,this._inputManager=l}_generatePickInfo(){this._inputManager&&(this._pickInfo=this._inputManager._pickMove(this.event),this._inputManager._setRayOnPointerInfo(this._pickInfo,this.event),this._inputManager=null)}}},2583:(Q,X,C)=>{var l=C(2388),h=C(2404);h.d.prototype.forceSphericalPolynomialsRecompute=function(){this._texture&&(this._texture._sphericalPolynomial=null,this._texture._sphericalPolynomialPromise=null,this._texture._sphericalPolynomialComputed=!1)},Object.defineProperty(h.d.prototype,"sphericalPolynomial",{get:function(){if(this._texture){if(this._texture._sphericalPolynomial||this._texture._sphericalPolynomialComputed)return this._texture._sphericalPolynomial;if(this._texture.isReady)return this._texture._sphericalPolynomialPromise||(this._texture._sphericalPolynomialPromise=l.e.ConvertCubeMapTextureToSphericalPolynomial(this),null===this._texture._sphericalPolynomialPromise?this._texture._sphericalPolynomialComputed=!0:this._texture._sphericalPolynomialPromise.then((Q=>{this._texture._sphericalPolynomial=Q,this._texture._sphericalPolynomialComputed=!0}))),null}return null},set:function(Q){this._texture&&(this._texture._sphericalPolynomial=Q)},enumerable:!0,configurable:!0})},2537:(Q,X,C)=>{function l(Q){Q.push("vCameraColorCurveNeutral","vCameraColorCurvePositive","vCameraColorCurveNegative")}C.d(X,{d:()=>l})},2543:(Q,X,C)=>{C.d(X,{c:()=>M,g:()=>h});var l=C(2537);function h(Q,X){X.EXPOSURE&&Q.push("exposureLinear"),X.CONTRAST&&Q.push("contrast"),X.COLORGRADING&&Q.push("colorTransformSettings"),(X.VIGNETTE||X.DITHER)&&Q.push("vInverseScreenSize"),X.VIGNETTE&&(Q.push("vignetteSettings1"),Q.push("vignetteSettings2")),X.COLORCURVES&&(0,l.d)(Q),X.DITHER&&Q.push("ditherIntensity")}function M(Q,X){X.COLORGRADING&&Q.push("txColorTransform")}},2531:(Q,X,C)=>{C.d(X,{d:()=>i});var l=C(644),h=C(650),M=C(482),f=C(702),O=C(695),m=C(2537);class W{constructor(){this._dirty=!0,this._tempColor=new f.d(0,0,0,0),this._globalCurve=new f.d(0,0,0,0),this._highlightsCurve=new f.d(0,0,0,0),this._midtonesCurve=new f.d(0,0,0,0),this._shadowsCurve=new f.d(0,0,0,0),this._positiveCurve=new f.d(0,0,0,0),this._negativeCurve=new f.d(0,0,0,0),this._globalHue=30,this._globalDensity=0,this._globalSaturation=0,this._globalExposure=0,this._highlightsHue=30,this._highlightsDensity=0,this._highlightsSaturation=0,this._highlightsExposure=0,this._midtonesHue=30,this._midtonesDensity=0,this._midtonesSaturation=0,this._midtonesExposure=0,this._shadowsHue=30,this._shadowsDensity=0,this._shadowsSaturation=0,this._shadowsExposure=0}get globalHue(){return this._globalHue}set globalHue(Q){this._globalHue=Q,this._dirty=!0}get globalDensity(){return this._globalDensity}set globalDensity(Q){this._globalDensity=Q,this._dirty=!0}get globalSaturation(){return this._globalSaturation}set globalSaturation(Q){this._globalSaturation=Q,this._dirty=!0}get globalExposure(){return this._globalExposure}set globalExposure(Q){this._globalExposure=Q,this._dirty=!0}get highlightsHue(){return this._highlightsHue}set highlightsHue(Q){this._highlightsHue=Q,this._dirty=!0}get highlightsDensity(){return this._highlightsDensity}set highlightsDensity(Q){this._highlightsDensity=Q,this._dirty=!0}get highlightsSaturation(){return this._highlightsSaturation}set highlightsSaturation(Q){this._highlightsSaturation=Q,this._dirty=!0}get highlightsExposure(){return this._highlightsExposure}set highlightsExposure(Q){this._highlightsExposure=Q,this._dirty=!0}get midtonesHue(){return this._midtonesHue}set midtonesHue(Q){this._midtonesHue=Q,this._dirty=!0}get midtonesDensity(){return this._midtonesDensity}set midtonesDensity(Q){this._midtonesDensity=Q,this._dirty=!0}get midtonesSaturation(){return this._midtonesSaturation}set midtonesSaturation(Q){this._midtonesSaturation=Q,this._dirty=!0}get midtonesExposure(){return this._midtonesExposure}set midtonesExposure(Q){this._midtonesExposure=Q,this._dirty=!0}get shadowsHue(){return this._shadowsHue}set shadowsHue(Q){this._shadowsHue=Q,this._dirty=!0}get shadowsDensity(){return this._shadowsDensity}set shadowsDensity(Q){this._shadowsDensity=Q,this._dirty=!0}get shadowsSaturation(){return this._shadowsSaturation}set shadowsSaturation(Q){this._shadowsSaturation=Q,this._dirty=!0}get shadowsExposure(){return this._shadowsExposure}set shadowsExposure(Q){this._shadowsExposure=Q,this._dirty=!0}getClassName(){return"ColorCurves"}static Bind(Q,X){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"vCameraColorCurvePositive",l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"vCameraColorCurveNeutral",h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"vCameraColorCurveNegative";Q._dirty&&(Q._dirty=!1,Q._getColorGradingDataToRef(Q._globalHue,Q._globalDensity,Q._globalSaturation,Q._globalExposure,Q._globalCurve),Q._getColorGradingDataToRef(Q._highlightsHue,Q._highlightsDensity,Q._highlightsSaturation,Q._highlightsExposure,Q._tempColor),Q._tempColor.multiplyToRef(Q._globalCurve,Q._highlightsCurve),Q._getColorGradingDataToRef(Q._midtonesHue,Q._midtonesDensity,Q._midtonesSaturation,Q._midtonesExposure,Q._tempColor),Q._tempColor.multiplyToRef(Q._globalCurve,Q._midtonesCurve),Q._getColorGradingDataToRef(Q._shadowsHue,Q._shadowsDensity,Q._shadowsSaturation,Q._shadowsExposure,Q._tempColor),Q._tempColor.multiplyToRef(Q._globalCurve,Q._shadowsCurve),Q._highlightsCurve.subtractToRef(Q._midtonesCurve,Q._positiveCurve),Q._midtonesCurve.subtractToRef(Q._shadowsCurve,Q._negativeCurve)),X&&(X.setFloat4(C,Q._positiveCurve.r,Q._positiveCurve.g,Q._positiveCurve.b,Q._positiveCurve.a),X.setFloat4(l,Q._midtonesCurve.r,Q._midtonesCurve.g,Q._midtonesCurve.b,Q._midtonesCurve.a),X.setFloat4(h,Q._negativeCurve.r,Q._negativeCurve.g,Q._negativeCurve.b,Q._negativeCurve.a))}_getColorGradingDataToRef(Q,X,C,l,h){null!=Q&&(Q=W._Clamp(Q,0,360),X=W._Clamp(X,-100,100),C=W._Clamp(C,-100,100),l=W._Clamp(l,-100,100),X=W._ApplyColorGradingSliderNonlinear(X),X*=.5,l=W._ApplyColorGradingSliderNonlinear(l),X<0&&(X*=-1,Q=(Q+180)%360),W._FromHSBToRef(Q,X,50+.25*l,h),h.scaleToRef(2,h),h.a=1+.01*C)}static _ApplyColorGradingSliderNonlinear(Q){Q/=100;let X=Math.abs(Q);return X=Math.pow(X,2),Q<0&&(X*=-1),X*=100,X}static _FromHSBToRef(Q,X,C,l){let h=W._Clamp(Q,0,360);const M=W._Clamp(X/100,0,1),f=W._Clamp(C/100,0,1);if(0===M)l.r=f,l.g=f,l.b=f;else{h/=60;const Q=Math.floor(h),X=h-Q,C=f*(1-M),O=f*(1-M*X),m=f*(1-M*(1-X));switch(Q){case 0:l.r=f,l.g=m,l.b=C;break;case 1:l.r=O,l.g=f,l.b=C;break;case 2:l.r=C,l.g=f,l.b=m;break;case 3:l.r=C,l.g=O,l.b=f;break;case 4:l.r=m,l.g=C,l.b=f;break;default:l.r=f,l.g=C,l.b=O}}l.a=1}static _Clamp(Q,X,C){return Math.min(Math.max(Q,X),C)}clone(){return O.d.Clone((()=>new W),this)}serialize(){return O.d.Serialize(this)}static Parse(Q){return O.d.Parse((()=>new W),Q,null,null)}}W.PrepareUniforms=m.d,(0,l.c)([(0,h.N)()],W.prototype,"_globalHue",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_globalDensity",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_globalSaturation",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_globalExposure",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_highlightsHue",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_highlightsDensity",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_highlightsSaturation",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_highlightsExposure",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_midtonesHue",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_midtonesDensity",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_midtonesSaturation",void 0),(0,l.c)([(0,h.N)()],W.prototype,"_midtonesExposure",void 0),O.d._ColorCurvesParser=W.Parse;var U=C(631),L=C(2543),w=C(620);class i{constructor(){this.colorCurves=new W,this._colorCurvesEnabled=!1,this._colorGradingEnabled=!1,this._colorGradingWithGreenDepth=!0,this._colorGradingBGR=!0,this._exposure=1,this._toneMappingEnabled=!1,this._toneMappingType=i.TONEMAPPING_STANDARD,this._contrast=1,this.vignetteStretch=0,this.vignetteCenterX=0,this.vignetteCenterY=0,this.vignetteWeight=1.5,this.vignetteColor=new f.d(0,0,0,0),this.vignetteCameraFov=.5,this._vignetteBlendMode=i.VIGNETTEMODE_MULTIPLY,this._vignetteEnabled=!1,this._ditheringEnabled=!1,this._ditheringIntensity=1/255,this._skipFinalColorClamp=!1,this._applyByPostProcess=!1,this._isEnabled=!0,this.outputTextureWidth=0,this.outputTextureHeight=0,this.onUpdateParameters=new M.e}get colorCurvesEnabled(){return this._colorCurvesEnabled}set colorCurvesEnabled(Q){this._colorCurvesEnabled!==Q&&(this._colorCurvesEnabled=Q,this._updateParameters())}get colorGradingTexture(){return this._colorGradingTexture}set colorGradingTexture(Q){this._colorGradingTexture!==Q&&(this._colorGradingTexture=Q,this._updateParameters())}get colorGradingEnabled(){return this._colorGradingEnabled}set colorGradingEnabled(Q){this._colorGradingEnabled!==Q&&(this._colorGradingEnabled=Q,this._updateParameters())}get colorGradingWithGreenDepth(){return this._colorGradingWithGreenDepth}set colorGradingWithGreenDepth(Q){this._colorGradingWithGreenDepth!==Q&&(this._colorGradingWithGreenDepth=Q,this._updateParameters())}get colorGradingBGR(){return this._colorGradingBGR}set colorGradingBGR(Q){this._colorGradingBGR!==Q&&(this._colorGradingBGR=Q,this._updateParameters())}get exposure(){return this._exposure}set exposure(Q){this._exposure!==Q&&(this._exposure=Q,this._updateParameters())}get toneMappingEnabled(){return this._toneMappingEnabled}set toneMappingEnabled(Q){this._toneMappingEnabled!==Q&&(this._toneMappingEnabled=Q,this._updateParameters())}get toneMappingType(){return this._toneMappingType}set toneMappingType(Q){this._toneMappingType!==Q&&(this._toneMappingType=Q,this._updateParameters())}get contrast(){return this._contrast}set contrast(Q){this._contrast!==Q&&(this._contrast=Q,this._updateParameters())}get vignetteCentreY(){return this.vignetteCenterY}set vignetteCentreY(Q){this.vignetteCenterY=Q}get vignetteCentreX(){return this.vignetteCenterX}set vignetteCentreX(Q){this.vignetteCenterX=Q}get vignetteBlendMode(){return this._vignetteBlendMode}set vignetteBlendMode(Q){this._vignetteBlendMode!==Q&&(this._vignetteBlendMode=Q,this._updateParameters())}get vignetteEnabled(){return this._vignetteEnabled}set vignetteEnabled(Q){this._vignetteEnabled!==Q&&(this._vignetteEnabled=Q,this._updateParameters())}get ditheringEnabled(){return this._ditheringEnabled}set ditheringEnabled(Q){this._ditheringEnabled!==Q&&(this._ditheringEnabled=Q,this._updateParameters())}get ditheringIntensity(){return this._ditheringIntensity}set ditheringIntensity(Q){this._ditheringIntensity!==Q&&(this._ditheringIntensity=Q,this._updateParameters())}get skipFinalColorClamp(){return this._skipFinalColorClamp}set skipFinalColorClamp(Q){this._skipFinalColorClamp!==Q&&(this._skipFinalColorClamp=Q,this._updateParameters())}get applyByPostProcess(){return this._applyByPostProcess}set applyByPostProcess(Q){this._applyByPostProcess!==Q&&(this._applyByPostProcess=Q,this._updateParameters())}get isEnabled(){return this._isEnabled}set isEnabled(Q){this._isEnabled!==Q&&(this._isEnabled=Q,this._updateParameters())}_updateParameters(){this.onUpdateParameters.notifyObservers(this)}getClassName(){return"ImageProcessingConfiguration"}prepareDefines(Q){if((arguments.length>1&&void 0!==arguments[1]&&arguments[1])!==this.applyByPostProcess||!this._isEnabled)return Q.VIGNETTE=!1,Q.TONEMAPPING=0,Q.CONTRAST=!1,Q.EXPOSURE=!1,Q.COLORCURVES=!1,Q.COLORGRADING=!1,Q.COLORGRADING3D=!1,Q.DITHER=!1,Q.IMAGEPROCESSING=!1,Q.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,void(Q.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess&&this._isEnabled);if(Q.VIGNETTE=this.vignetteEnabled,Q.VIGNETTEBLENDMODEMULTIPLY=this.vignetteBlendMode===i._VIGNETTEMODE_MULTIPLY,Q.VIGNETTEBLENDMODEOPAQUE=!Q.VIGNETTEBLENDMODEMULTIPLY,this._toneMappingEnabled)switch(this._toneMappingType){case i.TONEMAPPING_KHR_PBR_NEUTRAL:Q.TONEMAPPING=3;break;case i.TONEMAPPING_ACES:Q.TONEMAPPING=2;break;default:Q.TONEMAPPING=1}else Q.TONEMAPPING=0;Q.CONTRAST=1!==this.contrast,Q.EXPOSURE=1!==this.exposure,Q.COLORCURVES=this.colorCurvesEnabled&&!!this.colorCurves,Q.COLORGRADING=this.colorGradingEnabled&&!!this.colorGradingTexture,Q.COLORGRADING?Q.COLORGRADING3D=this.colorGradingTexture.is3D:Q.COLORGRADING3D=!1,Q.SAMPLER3DGREENDEPTH=this.colorGradingWithGreenDepth,Q.SAMPLER3DBGRMAP=this.colorGradingBGR,Q.DITHER=this._ditheringEnabled,Q.IMAGEPROCESSINGPOSTPROCESS=this.applyByPostProcess,Q.SKIPFINALCOLORCLAMP=this.skipFinalColorClamp,Q.IMAGEPROCESSING=Q.VIGNETTE||!!Q.TONEMAPPING||Q.CONTRAST||Q.EXPOSURE||Q.COLORCURVES||Q.COLORGRADING||Q.DITHER}isReady(){return!this.colorGradingEnabled||!this.colorGradingTexture||this.colorGradingTexture.isReady()}bind(Q,X){if(this._colorCurvesEnabled&&this.colorCurves&&W.Bind(this.colorCurves,Q),this._vignetteEnabled||this._ditheringEnabled){const C=1/(this.outputTextureWidth||Q.getEngine().getRenderWidth()),l=1/(this.outputTextureHeight||Q.getEngine().getRenderHeight());if(Q.setFloat2("vInverseScreenSize",C,l),this._ditheringEnabled&&Q.setFloat("ditherIntensity",.5*this._ditheringIntensity),this._vignetteEnabled){const h=null!=X?X:l/C;let M=Math.tan(.5*this.vignetteCameraFov),f=M*h;const O=Math.sqrt(f*M);f=(0,U.n)(f,O,this.vignetteStretch),M=(0,U.n)(M,O,this.vignetteStretch),Q.setFloat4("vignetteSettings1",f,M,-f*this.vignetteCenterX,-M*this.vignetteCenterY);const m=-2*this.vignetteWeight;Q.setFloat4("vignetteSettings2",this.vignetteColor.r,this.vignetteColor.g,this.vignetteColor.b,m)}}if(Q.setFloat("exposureLinear",this.exposure),Q.setFloat("contrast",this.contrast),this.colorGradingTexture){Q.setTexture("txColorTransform",this.colorGradingTexture);const X=this.colorGradingTexture.getSize().height;Q.setFloat4("colorTransformSettings",(X-1)/X,.5/X,X,this.colorGradingTexture.level)}}clone(){return O.d.Clone((()=>new i),this)}serialize(){return O.d.Serialize(this)}static Parse(Q){const X=O.d.Parse((()=>new i),Q,null,null);return void 0!==Q.vignetteCentreX&&(X.vignetteCenterX=Q.vignetteCentreX),void 0!==Q.vignetteCentreY&&(X.vignetteCenterY=Q.vignetteCentreY),X}static get VIGNETTEMODE_MULTIPLY(){return this._VIGNETTEMODE_MULTIPLY}static get VIGNETTEMODE_OPAQUE(){return this._VIGNETTEMODE_OPAQUE}}i.TONEMAPPING_STANDARD=0,i.TONEMAPPING_ACES=1,i.TONEMAPPING_KHR_PBR_NEUTRAL=2,i.PrepareUniforms=L.g,i.PrepareSamplers=L.c,i._VIGNETTEMODE_MULTIPLY=0,i._VIGNETTEMODE_OPAQUE=1,(0,l.c)([(0,h.l)()],i.prototype,"colorCurves",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_colorCurvesEnabled",void 0),(0,l.c)([(0,h.G)("colorGradingTexture")],i.prototype,"_colorGradingTexture",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_colorGradingEnabled",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_colorGradingWithGreenDepth",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_colorGradingBGR",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_exposure",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_toneMappingEnabled",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_toneMappingType",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_contrast",void 0),(0,l.c)([(0,h.N)()],i.prototype,"vignetteStretch",void 0),(0,l.c)([(0,h.N)()],i.prototype,"vignetteCenterX",void 0),(0,l.c)([(0,h.N)()],i.prototype,"vignetteCenterY",void 0),(0,l.c)([(0,h.N)()],i.prototype,"vignetteWeight",void 0),(0,l.c)([(0,h.t)()],i.prototype,"vignetteColor",void 0),(0,l.c)([(0,h.N)()],i.prototype,"vignetteCameraFov",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_vignetteBlendMode",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_vignetteEnabled",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_ditheringEnabled",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_ditheringIntensity",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_skipFinalColorClamp",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_applyByPostProcess",void 0),(0,l.c)([(0,h.N)()],i.prototype,"_isEnabled",void 0),(0,l.c)([(0,h.N)()],i.prototype,"outputTextureWidth",void 0),(0,l.c)([(0,h.N)()],i.prototype,"outputTextureHeight",void 0),O.d._ImageProcessingConfigurationParser=i.Parse,(0,w.g)("BABYLON.ImageProcessingConfiguration",i)},2578:(Q,X,C)=>{C.r(X),C.d(X,{Dispose:()=>w,DumpData:()=>L,DumpDataAsync:()=>U,DumpFramebuffer:()=>W,DumpTools:()=>i});var l=C(2431),h=C(487),M=C(690),f=C(524);let O,m=null;async function W(Q,X,C,l){let h=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",M=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0;const O=await C.readPixels(0,0,Q,X);L(Q,X,new Uint8Array(O.buffer),l,h,M,!0,void 0,f)}async function U(Q,X,C){let l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"image/png",h=arguments.length>4?arguments[4]:void 0,M=arguments.length>5&&void 0!==arguments[5]&&arguments[5],f=arguments.length>6&&void 0!==arguments[6]&&arguments[6],O=arguments.length>7?arguments[7]:void 0;return await new Promise((m=>{L(Q,X,C,(Q=>m(Q)),l,h,M,f,O)}))}function L(Q,X,W,U){let L=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"image/png",i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],F=arguments.length>7&&void 0!==arguments[7]&&arguments[7],s=arguments.length>8?arguments[8]:void 0;(async function(){return m||(m=new Promise(((Q,X)=>{let h,M=null;const m={Lk:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(C.bind(C,2449)).then((W=>{let{ThinEngine:U}=W;const L=f.b.Instances.length;try{h=new OffscreenCanvas(100,100),M=new U(h,!1,m)}catch(F){var i;L<f.b.Instances.length&&(null===(i=f.b.Instances.pop())||void 0===i||i.dispose()),h=document.createElement("canvas"),M=new U(h,!1,m)}f.b.Instances.pop(),f.b.OnEnginesDisposedObservable.add((Q=>{M&&Q!==M&&!M.u&&0===f.b.Instances.length&&w()})),M.getCaps().parallelShaderCompile=void 0;const a=new l.e(M);C.e(46).then(C.bind(C,13675)).then((C=>{let{passPixelShader:f}=C;if(!M)return void X("Engine is not defined");const m=new l.h({Oj:M,name:f.name,fragmentShader:f.shader,samplerNames:["textureSampler"]});O={canvas:h,Oj:M,renderer:a,wrapper:m},Q(O)}))})).catch(X)}))),await m})().then((C=>{if(C.Oj.setSize(Q,X,!0),W instanceof Float32Array){const Q=new Uint8Array(W.length);let X=W.length;for(;X--;){const C=W[X];Q[X]=Math.round(255*(0,M.Clamp)(C))}W=Q}const l=C.Oj.createRawTexture(W,Q,X,5,!1,!a,1);C.renderer.setViewport(),C.renderer.applyEffectWrapper(C.wrapper),C.wrapper.effect._bindTexture("textureSampler",l),C.renderer.draw(),F?h.i.ToBlob(C.canvas,(Q=>{const X=new FileReader;X.onload=Q=>{const X=Q.target.result;U&&U(X)},X.readAsArrayBuffer(Q)}),L,s):h.i.EncodeScreenshotCanvasData(C.canvas,U,L,i,s),l.dispose()}))}function w(){var Q;O?(O.wrapper.dispose(),O.renderer.dispose(),O.Oj.dispose()):null===(Q=m)||void 0===Q||Q.then((Q=>{Q.wrapper.dispose(),Q.renderer.dispose(),Q.Oj.dispose()}));m=null,O=null}const i={DumpData:L,DumpDataAsync:U,DumpFramebuffer:W,Dispose:w};h.i.DumpData=L,h.i.DumpDataAsync=U,h.i.DumpFramebuffer=W},2573:(Q,X,C)=>{C.d(X,{d:()=>M});var l=C(2426),h=C(2394);class M{static ExpandRGBDTexture(Q){const X=Q._texture;if(!X||!Q.isRGBD)return;const h=X.getEngine(),M=h.getCaps(),f=X.isReady;let O=!1;M.textureHalfFloatRender&&M.textureHalfFloatLinearFiltering?(O=!0,X.type=2):M.textureFloatRender&&M.textureFloatLinearFiltering&&(O=!0,X.type=1),O&&(X.isReady=!1,X._isRGBD=!1,X.invertY=!1);const m=async()=>{const M=h.isWebGPU,f=M?1:0;X.isReady=!1,M?await C.e(36).then(C.bind(C,13690)):await C.e(29).then(C.bind(C,13698));const O=new l.e("rgbdDecode","rgbdDecode",null,null,1,null,3,h,!1,void 0,X.type,void 0,null,!1,void 0,f);O.externalTextureSamplerBinding=!0;const m=h.createRenderTargetTexture(X.width,{generateDepthBuffer:!1,generateMipMaps:!1,generateStencilBuffer:!1,samplingMode:X.samplingMode,type:X.type,format:5});O.onEffectCreatedObservable.addOnce((C=>{C.executeWhenCompiled((()=>{O.onApply=Q=>{Q._bindTexture("textureSampler",X),Q.setFloat2("scale",1,1)},Q.va().postProcessManager.directRender([O],m,!0),h.restoreDefaultFramebuffer(),h._releaseTexture(X),O&&O.dispose(),m._swapAndDie(X),X.isReady=!0}))}))};O&&(f?m():Q.onLoadObservable.addOnce(m))}static async EncodeTextureToRGBD(Q,X){let l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return X.getEngine().isWebGPU?await C.e(37).then(C.bind(C,13706)):await C.e(30).then(C.bind(C,13704)),await(0,h.c)("rgbdEncode",Q,X,l,1,5)}}},2564:(Q,X,C)=>{C.d(X,{b:()=>l});class l{static get UniqueId(){const Q=this._UniqueIdCounter;return this._UniqueIdCounter++,Q}}l._UniqueIdCounter=1},2555:(Q,X,C)=>{C.d(X,{d:()=>l});class l{}l._IsPickingAvailable=!1},2522:(Q,X,C)=>{C.d(X,{e:()=>QQ});var l=C(487),h=C(507),M=C(482),f=C(663);class O{constructor(){this._count=0,this._data={}}p(Q){this.clear(),Q.forEach(((Q,X)=>this.add(Q,X)))}get(Q){const X=this._data[Q];if(void 0!==X)return X}getOrAddWithFactory(Q,X){let C=this.get(Q);return void 0!==C||(C=X(Q),C&&this.add(Q,C)),C}getOrAdd(Q,X){const C=this.get(Q);return void 0!==C?C:(this.add(Q,X),X)}contains(Q){return void 0!==this._data[Q]}add(Q,X){return void 0===this._data[Q]&&(this._data[Q]=X,++this._count,!0)}set(Q,X){return void 0!==this._data[Q]&&(this._data[Q]=X,!0)}getAndRemove(Q){const X=this.get(Q);return void 0!==X?(delete this._data[Q],--this._count,X):null}remove(Q){return!!this.contains(Q)&&(delete this._data[Q],--this._count,!0)}clear(){this._data={},this._count=0}get count(){return this._count}forEach(Q){for(const X in this._data){Q(X,this._data[X])}}first(Q){for(const X in this._data){const C=Q(X,this._data[X]);if(C)return C}return null}}var m=C(633),W=C(668),U=C(2531),L=C(819),w=C(814);class i{constructor(Q,X,C,l,h,M){this.source=Q,this.pointerX=X,this.pointerY=C,this.meshUnderPointer=l,this.sourceEvent=h,this.additionalData=M}static CreateNew(Q,X,C){const l=Q.va();return new i(Q,l.pointerX,l.pointerY,l.meshUnderPointer||Q,X,C)}static CreateNewFromSprite(Q,X,C,l){return new i(Q,X.pointerX,X.pointerY,X.meshUnderPointer,C,l)}static CreateNewFromScene(Q,X){return new i(null,Q.pointerX,Q.pointerY,Q.meshUnderPointer,X)}static CreateNewFromPrimitive(Q,X,C,l){return new i(Q,X.x,X.y,null,C,l)}}var a=C(2418),F=C(2424),s=C(863),z=C(494),x=C(524),r=C(509),P=C(2545);class j{constructor(){this.hoverCursor="",this.actions=[],this.isRecursive=!1,this.disposeWhenUnowned=!0}static get HasTriggers(){for(const Q in j.Triggers)if(Object.prototype.hasOwnProperty.call(j.Triggers,Q))return!0;return!1}static get HasPickTriggers(){for(const Q in j.Triggers)if(Object.prototype.hasOwnProperty.call(j.Triggers,Q)){const X=parseInt(Q);if(X>=1&&X<=7)return!0}return!1}static HasSpecificTrigger(Q){for(const X in j.Triggers)if(Object.prototype.hasOwnProperty.call(j.Triggers,X)){if(parseInt(X)===Q)return!0}return!1}}j.Triggers={};var v,Z,g,S,e,k,R,H=C(2547);!function(Q){Q[Q.Generic=0]="Generic",Q[Q.Keyboard=1]="Keyboard",Q[Q.Mouse=2]="Mouse",Q[Q.Touch=3]="Touch",Q[Q.DualShock=4]="DualShock",Q[Q.Xbox=5]="Xbox",Q[Q.Switch=6]="Switch",Q[Q.DualSense=7]="DualSense"}(v||(v={})),function(Q){Q[Q.Horizontal=0]="Horizontal",Q[Q.Vertical=1]="Vertical",Q[Q.LeftClick=2]="LeftClick",Q[Q.MiddleClick=3]="MiddleClick",Q[Q.RightClick=4]="RightClick",Q[Q.BrowserBack=5]="BrowserBack",Q[Q.BrowserForward=6]="BrowserForward",Q[Q.MouseWheelX=7]="MouseWheelX",Q[Q.MouseWheelY=8]="MouseWheelY",Q[Q.MouseWheelZ=9]="MouseWheelZ",Q[Q.Move=12]="Move"}(Z||(Z={})),function(Q){Q[Q.Horizontal=0]="Horizontal",Q[Q.Vertical=1]="Vertical",Q[Q.LeftClick=2]="LeftClick",Q[Q.MiddleClick=3]="MiddleClick",Q[Q.RightClick=4]="RightClick",Q[Q.BrowserBack=5]="BrowserBack",Q[Q.BrowserForward=6]="BrowserForward",Q[Q.MouseWheelX=7]="MouseWheelX",Q[Q.MouseWheelY=8]="MouseWheelY",Q[Q.MouseWheelZ=9]="MouseWheelZ",Q[Q.DeltaHorizontal=10]="DeltaHorizontal",Q[Q.DeltaVertical=11]="DeltaVertical"}(g||(g={})),function(Q){Q[Q.Cross=0]="Cross",Q[Q.Circle=1]="Circle",Q[Q.Square=2]="Square",Q[Q.Triangle=3]="Triangle",Q[Q.L1=4]="L1",Q[Q.R1=5]="R1",Q[Q.L2=6]="L2",Q[Q.R2=7]="R2",Q[Q.Share=8]="Share",Q[Q.Options=9]="Options",Q[Q.L3=10]="L3",Q[Q.R3=11]="R3",Q[Q.DPadUp=12]="DPadUp",Q[Q.DPadDown=13]="DPadDown",Q[Q.DPadLeft=14]="DPadLeft",Q[Q.DPadRight=15]="DPadRight",Q[Q.Home=16]="Home",Q[Q.TouchPad=17]="TouchPad",Q[Q.LStickXAxis=18]="LStickXAxis",Q[Q.LStickYAxis=19]="LStickYAxis",Q[Q.RStickXAxis=20]="RStickXAxis",Q[Q.RStickYAxis=21]="RStickYAxis"}(S||(S={})),function(Q){Q[Q.Cross=0]="Cross",Q[Q.Circle=1]="Circle",Q[Q.Square=2]="Square",Q[Q.Triangle=3]="Triangle",Q[Q.L1=4]="L1",Q[Q.R1=5]="R1",Q[Q.L2=6]="L2",Q[Q.R2=7]="R2",Q[Q.Create=8]="Create",Q[Q.Options=9]="Options",Q[Q.L3=10]="L3",Q[Q.R3=11]="R3",Q[Q.DPadUp=12]="DPadUp",Q[Q.DPadDown=13]="DPadDown",Q[Q.DPadLeft=14]="DPadLeft",Q[Q.DPadRight=15]="DPadRight",Q[Q.Home=16]="Home",Q[Q.TouchPad=17]="TouchPad",Q[Q.LStickXAxis=18]="LStickXAxis",Q[Q.LStickYAxis=19]="LStickYAxis",Q[Q.RStickXAxis=20]="RStickXAxis",Q[Q.RStickYAxis=21]="RStickYAxis"}(e||(e={})),function(Q){Q[Q.A=0]="A",Q[Q.B=1]="B",Q[Q.X=2]="X",Q[Q.Y=3]="Y",Q[Q.LB=4]="LB",Q[Q.RB=5]="RB",Q[Q.LT=6]="LT",Q[Q.RT=7]="RT",Q[Q.Back=8]="Back",Q[Q.Start=9]="Start",Q[Q.LS=10]="LS",Q[Q.RS=11]="RS",Q[Q.DPadUp=12]="DPadUp",Q[Q.DPadDown=13]="DPadDown",Q[Q.DPadLeft=14]="DPadLeft",Q[Q.DPadRight=15]="DPadRight",Q[Q.Home=16]="Home",Q[Q.LStickXAxis=17]="LStickXAxis",Q[Q.LStickYAxis=18]="LStickYAxis",Q[Q.RStickXAxis=19]="RStickXAxis",Q[Q.RStickYAxis=20]="RStickYAxis"}(k||(k={})),function(Q){Q[Q.B=0]="B",Q[Q.A=1]="A",Q[Q.Y=2]="Y",Q[Q.X=3]="X",Q[Q.L=4]="L",Q[Q.R=5]="R",Q[Q.ZL=6]="ZL",Q[Q.ZR=7]="ZR",Q[Q.Minus=8]="Minus",Q[Q.Plus=9]="Plus",Q[Q.LS=10]="LS",Q[Q.RS=11]="RS",Q[Q.DPadUp=12]="DPadUp",Q[Q.DPadDown=13]="DPadDown",Q[Q.DPadLeft=14]="DPadLeft",Q[Q.DPadRight=15]="DPadRight",Q[Q.Home=16]="Home",Q[Q.Capture=17]="Capture",Q[Q.LStickXAxis=18]="LStickXAxis",Q[Q.LStickYAxis=19]="LStickYAxis",Q[Q.RStickXAxis=20]="RStickXAxis",Q[Q.RStickYAxis=21]="RStickYAxis"}(R||(R={}));var o=C(2550);class T{static CreateDeviceEvent(Q,X,C,l,h,M,f){switch(Q){case v.Keyboard:return this._CreateKeyboardEvent(C,l,h,M);case v.Mouse:if(C===Z.MouseWheelX||C===Z.MouseWheelY||C===Z.MouseWheelZ)return this._CreateWheelEvent(Q,X,C,l,h,M);case v.Touch:return this._CreatePointerEvent(Q,X,C,l,h,M,f);default:throw`Unable to generate event for device ${v[Q]}`}}static _CreatePointerEvent(Q,X,C,l,h,M,f){const O=this._CreateMouseEvent(Q,X,C,l,h,M);Q===v.Mouse?(O.deviceType=v.Mouse,O.pointerId=1,O.pointerType="mouse"):(O.deviceType=v.Touch,O.pointerId=f??X,O.pointerType="touch");let m=0;return m+=h.pollInput(Q,X,Z.LeftClick),m+=2*h.pollInput(Q,X,Z.RightClick),m+=4*h.pollInput(Q,X,Z.MiddleClick),O.buttons=m,C===Z.Move?O.type="pointermove":C>=Z.LeftClick&&C<=Z.RightClick&&(O.type=1===l?"pointerdown":"pointerup",O.button=C-2),O}static _CreateWheelEvent(Q,X,C,l,h,M){const f=this._CreateMouseEvent(Q,X,C,l,h,M);switch(f.pointerId=1,f.type="wheel",f.deltaMode=o.b.DOM_DELTA_PIXEL,f.deltaX=0,f.deltaY=0,f.deltaZ=0,C){case Z.MouseWheelX:f.deltaX=l;break;case Z.MouseWheelY:f.deltaY=l;break;case Z.MouseWheelZ:f.deltaZ=l}return f}static _CreateMouseEvent(Q,X,C,l,h,M){const f=this._CreateEvent(M),O=h.pollInput(Q,X,Z.Horizontal),m=h.pollInput(Q,X,Z.Vertical);return M?(f.movementX=0,f.movementY=0,f.offsetX=f.movementX-M.getBoundingClientRect().x,f.offsetY=f.movementY-M.getBoundingClientRect().y):(f.movementX=h.pollInput(Q,X,10),f.movementY=h.pollInput(Q,X,11),f.offsetX=0,f.offsetY=0),this._CheckNonCharacterKeys(f,h),f.clientX=O,f.clientY=m,f.x=O,f.y=m,f.deviceType=Q,f.deviceSlot=X,f.inputIndex=C,f}static _CreateKeyboardEvent(Q,X,C,l){const h=this._CreateEvent(l);return this._CheckNonCharacterKeys(h,C),h.deviceType=v.Keyboard,h.deviceSlot=0,h.inputIndex=Q,h.type=1===X?"keydown":"keyup",h.key=String.fromCharCode(Q),h.keyCode=Q,h}static _CheckNonCharacterKeys(Q,X){const C=X.isDeviceAvailable(v.Keyboard),l=C&&1===X.pollInput(v.Keyboard,0,18),h=C&&1===X.pollInput(v.Keyboard,0,17),M=C&&(1===X.pollInput(v.Keyboard,0,91)||1===X.pollInput(v.Keyboard,0,92)||1===X.pollInput(v.Keyboard,0,93)),f=C&&1===X.pollInput(v.Keyboard,0,16);Q.altKey=l,Q.ctrlKey=h,Q.metaKey=M,Q.shiftKey=f}static _CreateEvent(Q){const X={preventDefault:()=>{}};return X.target=Q,X}}class Y{constructor(Q,X,C){this._nativeInput=_native.DeviceInputSystem?new _native.DeviceInputSystem(Q,X,((Q,X,l,h)=>{const M=T.CreateDeviceEvent(Q,X,l,h,this);C(Q,X,M)})):this._createDummyNativeInput()}pollInput(Q,X,C){return this._nativeInput.pollInput(Q,X,C)}isDeviceAvailable(Q){return Q===v.Mouse||Q===v.Touch}dispose(){this._nativeInput.dispose()}_createDummyNativeInput(){return{pollInput:()=>0,isDeviceAvailable:()=>!1,dispose:()=>{}}}}const J=Object.keys(Z).length/2;class K{constructor(Q,X,C,h){this._inputs=[],this._keyboardActive=!1,this._pointerActive=!1,this._usingSafari=l.i.IsSafari(),this._usingMacOs=(0,z.i)()&&/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),this._keyboardDownEvent=Q=>{},this._keyboardUpEvent=Q=>{},this._keyboardBlurEvent=Q=>{},this._pointerMoveEvent=Q=>{},this._pointerDownEvent=Q=>{},this._pointerUpEvent=Q=>{},this._pointerCancelEvent=Q=>{},this._pointerCancelTouch=Q=>{},this._pointerLeaveEvent=Q=>{},this._pointerWheelEvent=Q=>{},this._pointerBlurEvent=Q=>{},this._pointerMacOsChromeOutEvent=Q=>{},this._eventsAttached=!1,this._mouseId=-1,this._isUsingFirefox=(0,z.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Firefox"),this._isUsingChromium=(0,z.i)()&&navigator.userAgent&&-1!==navigator.userAgent.indexOf("Chrome"),this._maxTouchPoints=0,this._pointerInputClearObserver=null,this._gamepadConnectedEvent=Q=>{},this._gamepadDisconnectedEvent=Q=>{},this._eventPrefix=l.i.GetPointerPrefix(Q),this._engine=Q,this._onDeviceConnected=X,this._onDeviceDisconnected=C,this._onInputChanged=h,this._mouseId=this._isUsingFirefox?0:1,this._enableEvents(),this._usingMacOs&&(this._metaKeys=[]),this._engine._onEngineViewChanged||(this._engine._onEngineViewChanged=()=>{this._enableEvents()})}pollInput(Q,X,C){const h=this._inputs[Q][X];if(!h)throw`Unable to find device ${v[Q]}`;Q>=v.DualShock&&Q<=v.DualSense&&this._updateDevice(Q,X,C);const M=h[C];if(void 0===M)throw`Unable to find input ${C} for device ${v[Q]} in slot ${X}`;return C===Z.Move&&l.i.Warn("Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data."),M}isDeviceAvailable(Q){return void 0!==this._inputs[Q]}dispose(){this._onDeviceConnected=()=>{},this._onDeviceDisconnected=()=>{},this._onInputChanged=()=>{},delete this._engine._onEngineViewChanged,this._elementToAttachTo&&this._disableEvents()}_enableEvents(){const Q=null===this||void 0===this?void 0:this._engine.getInputElement();if(Q&&(!this._eventsAttached||this._elementToAttachTo!==Q)){if(this._disableEvents(),this._inputs)for(const Q of this._inputs)if(Q)for(const X in Q){const C=Q[+X];if(C)for(let Q=0;Q<C.length;Q++)C[Q]=0}this._elementToAttachTo=Q,this._elementToAttachTo.tabIndex=-1!==this._elementToAttachTo.tabIndex?this._elementToAttachTo.tabIndex:this._engine.canvasTabIndex,this._handleKeyActions(),this._handlePointerActions(),this._handleGamepadActions(),this._eventsAttached=!0,this._checkForConnectedDevices()}}_disableEvents(){this._elementToAttachTo&&(this._elementToAttachTo.removeEventListener("blur",this._keyboardBlurEvent),this._elementToAttachTo.removeEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.removeEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.removeEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.removeEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.removeEventListener(this._wheelEventName,this._pointerWheelEvent),this._usingMacOs&&this._isUsingChromium&&this._elementToAttachTo.removeEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent),window.removeEventListener("gamepadconnected",this._gamepadConnectedEvent),window.removeEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)),this._pointerInputClearObserver&&this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver),this._eventsAttached=!1}_checkForConnectedDevices(){if(navigator.getGamepads){const Q=navigator.getGamepads();for(const X of Q)X&&this._addGamePad(X)}"function"===typeof matchMedia&&matchMedia("(pointer:fine)").matches&&this._addPointerDevice(v.Mouse,0,0,0)}_addGamePad(Q){const X=this._getGamepadDeviceType(Q.id),C=Q.index;this._gamepads=this._gamepads||new Array(Q.index+1),this._registerDevice(X,C,Q.buttons.length+Q.axes.length),this._gamepads[C]=X}_addPointerDevice(Q,X,C,l){this._pointerActive||(this._pointerActive=!0),this._registerDevice(Q,X,J);const h=this._inputs[Q][X];h[0]=C,h[1]=l}_registerDevice(Q,X,C){if(void 0===X)throw`Unable to register device ${v[Q]} to undefined slot.`;if(this._inputs[Q]||(this._inputs[Q]={}),!this._inputs[Q][X]){const l=new Array(C);l.fill(0),this._inputs[Q][X]=l,this._onDeviceConnected(Q,X)}}_unregisterDevice(Q,X){this._inputs[Q][X]&&(delete this._inputs[Q][X],this._onDeviceDisconnected(Q,X))}_handleKeyActions(){this._keyboardDownEvent=Q=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(v.Keyboard,0,255));const X=this._inputs[v.Keyboard][0];if(X){X[Q.keyCode]=1;const C=Q;C.inputIndex=Q.keyCode,this._usingMacOs&&Q.metaKey&&"Meta"!==Q.key&&(this._metaKeys.includes(Q.keyCode)||this._metaKeys.push(Q.keyCode)),this._onInputChanged(v.Keyboard,0,C)}},this._keyboardUpEvent=Q=>{this._keyboardActive||(this._keyboardActive=!0,this._registerDevice(v.Keyboard,0,255));const X=this._inputs[v.Keyboard][0];if(X){X[Q.keyCode]=0;const C=Q;if(C.inputIndex=Q.keyCode,this._usingMacOs&&"Meta"===Q.key&&this._metaKeys.length>0){for(const Q of this._metaKeys){const C=T.CreateDeviceEvent(v.Keyboard,0,Q,0,this,this._elementToAttachTo);X[Q]=0,this._onInputChanged(v.Keyboard,0,C)}this._metaKeys.splice(0,this._metaKeys.length)}this._onInputChanged(v.Keyboard,0,C)}},this._keyboardBlurEvent=()=>{if(this._keyboardActive){const Q=this._inputs[v.Keyboard][0];for(let X=0;X<Q.length;X++)if(0!==Q[X]){Q[X]=0;const C=T.CreateDeviceEvent(v.Keyboard,0,X,0,this,this._elementToAttachTo);this._onInputChanged(v.Keyboard,0,C)}this._usingMacOs&&this._metaKeys.splice(0,this._metaKeys.length)}},this._elementToAttachTo.addEventListener("keydown",this._keyboardDownEvent),this._elementToAttachTo.addEventListener("keyup",this._keyboardUpEvent),this._elementToAttachTo.addEventListener("blur",this._keyboardBlurEvent)}_handlePointerActions(){this._maxTouchPoints=(0,z.i)()&&navigator.maxTouchPoints||2,this._activeTouchIds||(this._activeTouchIds=new Array(this._maxTouchPoints));for(let l=0;l<this._maxTouchPoints;l++)this._activeTouchIds[l]=-1;this._pointerMoveEvent=Q=>{const X=this._getPointerType(Q);let C=X===v.Mouse?0:this._activeTouchIds.indexOf(Q.pointerId);if(X===v.Touch&&-1===C){const h=this._activeTouchIds.indexOf(-1);if(!(h>=0))return void l.i.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);C=h,this._activeTouchIds[h]=Q.pointerId,this._onDeviceConnected(X,C)}this._inputs[X]||(this._inputs[X]={}),this._inputs[X][C]||this._addPointerDevice(X,C,Q.clientX,Q.clientY);const h=this._inputs[X][C];if(h){const l=Q;l.inputIndex=Z.Move,h[Z.Horizontal]=Q.clientX,h[Z.Vertical]=Q.clientY,X===v.Touch&&0===h[Z.LeftClick]&&(h[Z.LeftClick]=1),void 0===Q.pointerId&&(Q.pointerId=this._mouseId),this._onInputChanged(X,C,l),this._usingSafari||-1===Q.button||(l.inputIndex=Q.button+2,h[Q.button+2]=h[Q.button+2]?0:1,this._onInputChanged(X,C,l))}},this._pointerDownEvent=Q=>{const X=this._getPointerType(Q);let C=X===v.Mouse?0:Q.pointerId;if(X===v.Touch){let X=this._activeTouchIds.indexOf(Q.pointerId);if(-1===X&&(X=this._activeTouchIds.indexOf(-1)),!(X>=0))return void l.i.Warn(`Max number of touches exceeded.  Ignoring touches in excess of ${this._maxTouchPoints}`);C=X,this._activeTouchIds[X]=Q.pointerId}this._inputs[X]||(this._inputs[X]={}),this._inputs[X][C]?X===v.Touch&&this._onDeviceConnected(X,C):this._addPointerDevice(X,C,Q.clientX,Q.clientY);const h=this._inputs[X][C];if(h){const l=h[Z.Horizontal],f=h[Z.Vertical];if(X===v.Mouse){if(void 0===Q.pointerId&&(Q.pointerId=this._mouseId),!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(this._mouseId)}catch(M){}}else if(Q.pointerId&&!document.pointerLockElement)try{this._elementToAttachTo.setPointerCapture(Q.pointerId)}catch(M){}h[Z.Horizontal]=Q.clientX,h[Z.Vertical]=Q.clientY,h[Q.button+2]=1;const O=Q;O.inputIndex=Q.button+2,this._onInputChanged(X,C,O),l===Q.clientX&&f===Q.clientY||(O.inputIndex=Z.Move,this._onInputChanged(X,C,O))}},this._pointerUpEvent=Q=>{var X;const C=this._getPointerType(Q),l=C===v.Mouse?0:this._activeTouchIds.indexOf(Q.pointerId);if(C===v.Touch){if(-1===l)return;this._activeTouchIds[l]=-1}const h=null===(X=this._inputs[C])||void 0===X?void 0:X[l];let M=Q.button,f=h&&0!==h[M+2];if(!f&&this._isUsingFirefox&&this._usingMacOs&&h&&(M=2===M?0:2,f=0!==h[M+2]),f){var O,m,W,U;const X=h[Z.Horizontal],f=h[Z.Vertical];h[Z.Horizontal]=Q.clientX,h[Z.Vertical]=Q.clientY,h[M+2]=0;const L=Q;void 0===Q.pointerId&&(Q.pointerId=this._mouseId),X===Q.clientX&&f===Q.clientY||(L.inputIndex=Z.Move,this._onInputChanged(C,l,L)),L.inputIndex=M+2,C===v.Mouse&&this._mouseId>=0&&null!==(O=(m=this._elementToAttachTo).hasPointerCapture)&&void 0!==O&&O.call(m,this._mouseId)?this._elementToAttachTo.releasePointerCapture(this._mouseId):Q.pointerId&&null!==(W=(U=this._elementToAttachTo).hasPointerCapture)&&void 0!==W&&W.call(U,Q.pointerId)&&this._elementToAttachTo.releasePointerCapture(Q.pointerId),this._onInputChanged(C,l,L),C===v.Touch&&this._onDeviceDisconnected(C,l)}},this._pointerCancelTouch=Q=>{var X,C;const l=this._activeTouchIds.indexOf(Q);if(-1===l)return;null!==(X=(C=this._elementToAttachTo).hasPointerCapture)&&void 0!==X&&X.call(C,Q)&&this._elementToAttachTo.releasePointerCapture(Q),this._inputs[v.Touch][l][Z.LeftClick]=0;const h=T.CreateDeviceEvent(v.Touch,l,Z.LeftClick,0,this,this._elementToAttachTo,Q);this._onInputChanged(v.Touch,l,h),this._activeTouchIds[l]=-1,this._onDeviceDisconnected(v.Touch,l)},this._pointerCancelEvent=Q=>{if("mouse"===Q.pointerType){var X,C;const Q=this._inputs[v.Mouse][0];this._mouseId>=0&&null!==(X=(C=this._elementToAttachTo).hasPointerCapture)&&void 0!==X&&X.call(C,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let X=Z.LeftClick;X<=Z.BrowserForward;X++)if(1===Q[X]){Q[X]=0;const C=T.CreateDeviceEvent(v.Mouse,0,X,0,this,this._elementToAttachTo);this._onInputChanged(v.Mouse,0,C)}}else this._pointerCancelTouch(Q.pointerId)},this._pointerLeaveEvent=Q=>{"pen"===Q.pointerType&&this._pointerCancelTouch(Q.pointerId)},this._wheelEventName="onwheel"in document.createElement("div")?"wheel":void 0!==document.onmousewheel?"mousewheel":"DOMMouseScroll";let Q=!1;const X=function(){};try{const C=Object.defineProperty({},"passive",{get:function(){Q=!0}});this._elementToAttachTo.addEventListener("test",X,C),this._elementToAttachTo.removeEventListener("test",X,C)}catch(C){}this._pointerBlurEvent=()=>{if(this.isDeviceAvailable(v.Mouse)){var Q,X;const C=this._inputs[v.Mouse][0];this._mouseId>=0&&null!==(Q=(X=this._elementToAttachTo).hasPointerCapture)&&void 0!==Q&&Q.call(X,this._mouseId)&&this._elementToAttachTo.releasePointerCapture(this._mouseId);for(let Q=Z.LeftClick;Q<=Z.BrowserForward;Q++)if(1===C[Q]){C[Q]=0;const X=T.CreateDeviceEvent(v.Mouse,0,Q,0,this,this._elementToAttachTo);this._onInputChanged(v.Mouse,0,X)}}if(this.isDeviceAvailable(v.Touch)){const Q=this._inputs[v.Touch];for(let X=0;X<this._activeTouchIds.length;X++){var C,l,h;const M=this._activeTouchIds[X];if(null!==(C=(l=this._elementToAttachTo).hasPointerCapture)&&void 0!==C&&C.call(l,M)&&this._elementToAttachTo.releasePointerCapture(M),-1!==M&&1===(null===(h=Q[X])||void 0===h?void 0:h[Z.LeftClick])){Q[X][Z.LeftClick]=0;const C=T.CreateDeviceEvent(v.Touch,X,Z.LeftClick,0,this,this._elementToAttachTo,M);this._onInputChanged(v.Touch,X,C),this._activeTouchIds[X]=-1,this._onDeviceDisconnected(v.Touch,X)}}}},this._pointerWheelEvent=Q=>{const X=v.Mouse;this._inputs[X]||(this._inputs[X]=[]),this._inputs[X][0]||(this._pointerActive=!0,this._registerDevice(X,0,J));const C=this._inputs[X][0];if(C){C[Z.MouseWheelX]=Q.deltaX||0,C[Z.MouseWheelY]=Q.deltaY||Q.wheelDelta||0,C[Z.MouseWheelZ]=Q.deltaZ||0;const l=Q;void 0===Q.pointerId&&(Q.pointerId=this._mouseId),0!==C[Z.MouseWheelX]&&(l.inputIndex=Z.MouseWheelX,this._onInputChanged(X,0,l)),0!==C[Z.MouseWheelY]&&(l.inputIndex=Z.MouseWheelY,this._onInputChanged(X,0,l)),0!==C[Z.MouseWheelZ]&&(l.inputIndex=Z.MouseWheelZ,this._onInputChanged(X,0,l))}},this._usingMacOs&&this._isUsingChromium&&(this._pointerMacOsChromeOutEvent=Q=>{Q.buttons>1&&this._pointerCancelEvent(Q)},this._elementToAttachTo.addEventListener("lostpointercapture",this._pointerMacOsChromeOutEvent)),this._elementToAttachTo.addEventListener(this._eventPrefix+"move",this._pointerMoveEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"down",this._pointerDownEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"up",this._pointerUpEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"cancel",this._pointerCancelEvent),this._elementToAttachTo.addEventListener(this._eventPrefix+"leave",this._pointerLeaveEvent),this._elementToAttachTo.addEventListener("blur",this._pointerBlurEvent),this._elementToAttachTo.addEventListener(this._wheelEventName,this._pointerWheelEvent,!!Q&&{passive:!1}),this._pointerInputClearObserver=this._engine.onEndFrameObservable.add((()=>{if(this.isDeviceAvailable(v.Mouse)){const Q=this._inputs[v.Mouse][0];Q[Z.MouseWheelX]=0,Q[Z.MouseWheelY]=0,Q[Z.MouseWheelZ]=0}}))}_handleGamepadActions(){this._gamepadConnectedEvent=Q=>{this._addGamePad(Q.gamepad)},this._gamepadDisconnectedEvent=Q=>{if(this._gamepads){const X=this._getGamepadDeviceType(Q.gamepad.id),C=Q.gamepad.index;this._unregisterDevice(X,C),delete this._gamepads[C]}},window.addEventListener("gamepadconnected",this._gamepadConnectedEvent),window.addEventListener("gamepaddisconnected",this._gamepadDisconnectedEvent)}_updateDevice(Q,X,C){const l=navigator.getGamepads()[X];if(l&&Q===this._gamepads[X]){const h=this._inputs[Q][X];C>=l.buttons.length?h[C]=l.axes[C-l.buttons.length].valueOf():h[C]=l.buttons[C].value}}_getGamepadDeviceType(Q){return-1!==Q.indexOf("054c")?-1!==Q.indexOf("0ce6")?v.DualSense:v.DualShock:-1!==Q.indexOf("Xbox One")||-1!==Q.search("Xbox 360")||-1!==Q.search("xinput")?v.Xbox:-1!==Q.indexOf("057e")?v.Switch:v.Generic}_getPointerType(Q){let X=v.Mouse;return("touch"===Q.pointerType||"pen"===Q.pointerType||Q.touches)&&(X=v.Touch),X}}class N{constructor(Q,X){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.deviceType=X,this.deviceSlot=C,this.onInputChangedObservable=new M.e,this._deviceInputSystem=Q}getInput(Q){return this._deviceInputSystem.pollInput(this.deviceType,this.deviceSlot,Q)}}class q{constructor(Q){this._registeredManagers=new Array,this._refCount=0,this.registerManager=Q=>{for(let X=0;X<this._devices.length;X++){const C=this._devices[X];for(const l in C){const C=+l;Q._addDevice(new N(this._deviceInputSystem,X,C))}}this._registeredManagers.push(Q)},this.unregisterManager=Q=>{const X=this._registeredManagers.indexOf(Q);X>-1&&this._registeredManagers.splice(X,1)};const X=Object.keys(v).length/2;this._devices=new Array(X);const C=(Q,X)=>{this._devices[Q]||(this._devices[Q]=new Array),this._devices[Q][X]||(this._devices[Q][X]=X);for(const C of this._registeredManagers){const l=new N(this._deviceInputSystem,Q,X);C._addDevice(l)}},l=(Q,X)=>{var C;null!==(C=this._devices[Q])&&void 0!==C&&C[X]&&delete this._devices[Q][X];for(const l of this._registeredManagers)l._removeDevice(Q,X)},h=(Q,X,C)=>{if(C)for(const l of this._registeredManagers)l._onInputChanged(Q,X,C)};"undefined"!==typeof _native?this._deviceInputSystem=new Y(C,l,h):this._deviceInputSystem=new K(Q,C,l,h)}dispose(){this._deviceInputSystem.dispose()}}class n{getDeviceSource(Q,X){if(void 0===X){if(void 0===this._firstDevice[Q])return null;X=this._firstDevice[Q]}return this._devices[Q]&&void 0!==this._devices[Q][X]?this._devices[Q][X]:null}getDeviceSources(Q){return this._devices[Q]?this._devices[Q].filter((Q=>!!Q)):[]}constructor(Q){const X=Object.keys(v).length/2;this._devices=new Array(X),this._firstDevice=new Array(X),this._engine=Q,this._engine._deviceSourceManager||(this._engine._deviceSourceManager=new q(Q)),this._engine._deviceSourceManager._refCount++,this.onDeviceConnectedObservable=new M.e((Q=>{for(const X of this._devices)if(X)for(const C of X)C&&this.onDeviceConnectedObservable.notifyObserver(Q,C)})),this.onDeviceDisconnectedObservable=new M.e,this._engine._deviceSourceManager.registerManager(this),this._onDisposeObserver=Q.bk.add((()=>{this.dispose()}))}dispose(){this.onDeviceConnectedObservable.clear(),this.onDeviceDisconnectedObservable.clear(),this._engine._deviceSourceManager&&(this._engine._deviceSourceManager.unregisterManager(this),--this._engine._deviceSourceManager._refCount<1&&(this._engine._deviceSourceManager.dispose(),delete this._engine._deviceSourceManager)),this._engine.bk.remove(this._onDisposeObserver)}_addDevice(Q){this._devices[Q.deviceType]||(this._devices[Q.deviceType]=[]),this._devices[Q.deviceType][Q.deviceSlot]||(this._devices[Q.deviceType][Q.deviceSlot]=Q,this._updateFirstDevices(Q.deviceType)),this.onDeviceConnectedObservable.notifyObservers(Q)}_removeDevice(Q,X){var C,l;const h=null===(C=this._devices[Q])||void 0===C?void 0:C[X];this.onDeviceDisconnectedObservable.notifyObservers(h),null!==(l=this._devices[Q])&&void 0!==l&&l[X]&&delete this._devices[Q][X],this._updateFirstDevices(Q)}_onInputChanged(Q,X,C){var l,h;null===(l=this._devices[Q])||void 0===l||null===(h=l[X])||void 0===h||h.onInputChangedObservable.notifyObservers(C)}_updateFirstDevices(Q){switch(Q){case v.Keyboard:case v.Mouse:this._firstDevice[Q]=0;break;case v.Touch:case v.DualSense:case v.DualShock:case v.Xbox:case v.Switch:case v.Generic:{delete this._firstDevice[Q];const X=this._devices[Q];if(X)for(let C=0;C<X.length;C++)if(X[C]){this._firstDevice[Q]=C;break}break}}}}var c=C(2555);class E{constructor(){this._singleClick=!1,this._doubleClick=!1,this._hasSwiped=!1,this._ignore=!1}get singleClick(){return this._singleClick}get doubleClick(){return this._doubleClick}get hasSwiped(){return this._hasSwiped}get ignore(){return this._ignore}set singleClick(Q){this._singleClick=Q}set doubleClick(Q){this._doubleClick=Q}set hasSwiped(Q){this._hasSwiped=Q}set ignore(Q){this._ignore=Q}}class B{constructor(Q){this._alreadyAttached=!1,this._meshPickProceed=!1,this._currentPickResult=null,this._previousPickResult=null,this._activePointerIds=new Array,this._activePointerIdsCount=0,this._doubleClickOccured=!1,this._isSwiping=!1,this._swipeButtonPressed=-1,this._skipPointerTap=!1,this._isMultiTouchGesture=!1,this._pointerX=0,this._pointerY=0,this._startingPointerPosition=new W.h(0,0),this._previousStartingPointerPosition=new W.h(0,0),this._startingPointerTime=0,this._previousStartingPointerTime=0,this._pointerCaptures={},this._meshUnderPointerId={},this._movePointerInfo=null,this._cameraObserverCount=0,this._delayedClicks=[null,null,null,null,null],this._deviceSourceManager=null,this._scene=Q||x.b.LastCreatedScene,this._scene}get meshUnderPointer(){return this._movePointerInfo&&(this._movePointerInfo._generatePickInfo(),this._movePointerInfo=null),this._pointerOverMesh}getMeshUnderPointerByPointerId(Q){return this._meshUnderPointerId[Q]||null}get unTranslatedPointer(){return new W.h(this._unTranslatedPointerX,this._unTranslatedPointerY)}get pointerX(){return this._pointerX}set pointerX(Q){this._pointerX=Q}get pointerY(){return this._pointerY}set pointerY(Q){this._pointerY=Q}_updatePointerPosition(Q){const X=this._scene.getEngine().getInputElementClientRect();X&&(this._pointerX=Q.clientX-X.left,this._pointerY=Q.clientY-X.top,this._unTranslatedPointerX=this._pointerX,this._unTranslatedPointerY=this._pointerY)}_processPointerMove(Q,X){const C=this._scene,l=C.getEngine(),h=l.getInputElement();h&&(h.tabIndex=l.canvasTabIndex,C.doNotHandleCursors||(h.style.cursor=C.defaultCursor)),this._setCursorAndPointerOverMesh(Q,X,C);for(const m of C._pointerMoveStage){var M;const C=!(null===(M=Q=Q||this._pickMove(X))||void 0===M||!M.pickedMesh);Q=m.action(this._unTranslatedPointerX,this._unTranslatedPointerY,Q,C,h)}const f=X.inputIndex>=Z.MouseWheelX&&X.inputIndex<=Z.MouseWheelZ?P.b.POINTERWHEEL:P.b.POINTERMOVE;let O;C.onPointerMove&&(Q=Q||this._pickMove(X),C.onPointerMove(X,Q,f)),Q?(O=new P.i(f,X,Q),this._setRayOnPointerInfo(Q,X)):(O=new P.i(f,X,null,this),this._movePointerInfo=O),C.onPointerObservable.hasObservers()&&C.onPointerObservable.notifyObservers(O,f)}_setRayOnPointerInfo(Q,X){const C=this._scene;Q&&c.d._IsPickingAvailable&&(Q.ray||(Q.ray=C.createPickingRay(X.offsetX,X.offsetY,W.b.Identity(),C.activeCamera)))}_addCameraPointerObserver(Q,X){return this._cameraObserverCount++,this._scene.onPointerObservable.add(Q,X)}_removeCameraPointerObserver(Q){return this._cameraObserverCount--,this._scene.onPointerObservable.remove(Q)}_checkForPicking(){return!!(this._scene.onPointerObservable.observers.length>this._cameraObserverCount||this._scene.onPointerPick)}_checkPrePointerObservable(Q,X,C){const l=this._scene,h=new P.f(C,X,this._unTranslatedPointerX,this._unTranslatedPointerY);return Q&&(h.originalPickingInfo=Q,h.ray=Q.ray,"xr-near"===X.pointerType&&Q.originMesh&&(h.nearInteractionPickingInfo=Q)),l.onPrePointerObservable.notifyObservers(h,C),!!h.skipOnPointerObservable}_pickMove(Q){const X=this._scene,C=X.Md(this._unTranslatedPointerX,this._unTranslatedPointerY,X.pointerMovePredicate,X.pointerMoveFastCheck,X.cameraToUseForPointers,X.pointerMoveTrianglePredicate);return this._setCursorAndPointerOverMesh(C,Q,X),C}_setCursorAndPointerOverMesh(Q,X,C){const l=C.getEngine().getInputElement();if(null!==Q&&void 0!==Q&&Q.pickedMesh){if(this.setPointerOverMesh(Q.pickedMesh,X.pointerId,Q,X),!C.doNotHandleCursors&&l&&this._pointerOverMesh){const Q=this._pointerOverMesh._getActionManagerForTrigger();Q&&Q.hasPointerTriggers&&(l.style.cursor=Q.hoverCursor||C.hoverCursor)}}else this.setPointerOverMesh(null,X.pointerId,Q,X)}simulatePointerMove(Q,X){const C=new PointerEvent("pointermove",X);C.inputIndex=Z.Move,this._checkPrePointerObservable(Q,C,P.b.POINTERMOVE)||this._processPointerMove(Q,C)}simulatePointerDown(Q,X){const C=new PointerEvent("pointerdown",X);C.inputIndex=C.button+2,this._checkPrePointerObservable(Q,C,P.b.POINTERDOWN)||this._processPointerDown(Q,C)}_processPointerDown(Q,X){var C;const l=this._scene;if(null!==(C=Q)&&void 0!==C&&C.pickedMesh){this._pickedDownMesh=Q.pickedMesh;const C=Q.pickedMesh._getActionManagerForTrigger();if(C){if(C.hasPickTriggers)switch(C.processTrigger(5,new i(Q.pickedMesh,l.pointerX,l.pointerY,Q.pickedMesh,X,Q)),X.button){case 0:C.processTrigger(2,new i(Q.pickedMesh,l.pointerX,l.pointerY,Q.pickedMesh,X,Q));break;case 1:C.processTrigger(4,new i(Q.pickedMesh,l.pointerX,l.pointerY,Q.pickedMesh,X,Q));break;case 2:C.processTrigger(3,new i(Q.pickedMesh,l.pointerX,l.pointerY,Q.pickedMesh,X,Q))}C.hasSpecificTrigger(8)&&window.setTimeout((()=>{const Q=l.Md(this._unTranslatedPointerX,this._unTranslatedPointerY,(Q=>Q.gf&&Q.isVisible&&Q.isReady()&&Q.actionManager&&Q.actionManager.hasSpecificTrigger(8)&&Q===this._pickedDownMesh),!1,l.cameraToUseForPointers);null!==Q&&void 0!==Q&&Q.pickedMesh&&C&&0!==this._activePointerIdsCount&&Date.now()-this._startingPointerTime>B.LongPressDelay&&!this._isPointerSwiping()&&(this._startingPointerTime=0,C.processTrigger(8,i.CreateNew(Q.pickedMesh,X)))}),B.LongPressDelay)}}else for(const f of l._pointerDownStage)Q=f.action(this._unTranslatedPointerX,this._unTranslatedPointerY,Q,X,!1);let h;const M=P.b.POINTERDOWN;Q?(l.onPointerDown&&l.onPointerDown(X,Q,M),h=new P.i(M,X,Q),this._setRayOnPointerInfo(Q,X)):h=new P.i(M,X,null,this),l.onPointerObservable.hasObservers()&&l.onPointerObservable.notifyObservers(h,M)}_isPointerSwiping(){return this._isSwiping}simulatePointerUp(Q,X,C){const l=new PointerEvent("pointerup",X);l.inputIndex=Z.Move;const h=new E;C?h.doubleClick=!0:h.singleClick=!0,this._checkPrePointerObservable(Q,l,P.b.POINTERUP)||this._processPointerUp(Q,l,h)}_processPointerUp(Q,X,C){var l;const h=this._scene;if(null!==(l=Q)&&void 0!==l&&l.pickedMesh){if(this._pickedUpMesh=Q.pickedMesh,this._pickedDownMesh===this._pickedUpMesh&&(h.onPointerPick&&h.onPointerPick(X,Q),C.singleClick&&!C.ignore&&h.onPointerObservable.observers.length>this._cameraObserverCount)){const C=P.b.POINTERPICK,l=new P.i(C,X,Q);this._setRayOnPointerInfo(Q,X),h.onPointerObservable.notifyObservers(l,C)}const l=Q.pickedMesh._getActionManagerForTrigger();if(l&&!C.ignore){l.processTrigger(7,i.CreateNew(Q.pickedMesh,X,Q)),!C.hasSwiped&&C.singleClick&&l.processTrigger(1,i.CreateNew(Q.pickedMesh,X,Q));const h=Q.pickedMesh._getActionManagerForTrigger(6);C.doubleClick&&h&&h.processTrigger(6,i.CreateNew(Q.pickedMesh,X,Q))}}else if(!C.ignore)for(const M of h._pointerUpStage)Q=M.action(this._unTranslatedPointerX,this._unTranslatedPointerY,Q,X,C.doubleClick);if(this._pickedDownMesh&&this._pickedDownMesh!==this._pickedUpMesh){const Q=this._pickedDownMesh._getActionManagerForTrigger(16);Q&&Q.processTrigger(16,i.CreateNew(this._pickedDownMesh,X))}if(!C.ignore){const l=new P.i(P.b.POINTERUP,X,Q);if(this._setRayOnPointerInfo(Q,X),h.onPointerObservable.notifyObservers(l,P.b.POINTERUP),h.onPointerUp&&h.onPointerUp(X,Q,P.b.POINTERUP),!C.hasSwiped&&!this._skipPointerTap&&!this._isMultiTouchGesture){let l=0;if(C.singleClick?l=P.b.POINTERTAP:C.doubleClick&&(l=P.b.POINTERDOUBLETAP),l){const C=new P.i(l,X,Q);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(l)&&h.onPointerObservable.notifyObservers(C,l)}}}}isPointerCaptured(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._pointerCaptures[Q]}attachControl(){let Q=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const h=this._scene,M=h.getEngine();l||(l=M.getInputElement()),this._alreadyAttached&&this.Tj(),l&&(this._alreadyAttachedTo=l),this._deviceSourceManager=new n(M),this._initActionManager=Q=>{if(!this._meshPickProceed){const X=h.skipPointerUpPicking||0===h._registeredActions&&!this._checkForPicking()&&!h.onPointerUp?null:h.Md(this._unTranslatedPointerX,this._unTranslatedPointerY,h.pointerUpPredicate,h.pointerUpFastCheck,h.cameraToUseForPointers,h.pointerUpTrianglePredicate);this._currentPickResult=X,X&&(Q=X.hit&&X.pickedMesh?X.pickedMesh._getActionManagerForTrigger():null),this._meshPickProceed=!0}return Q},this._delayedSimpleClick=(Q,X,C)=>{if((Date.now()-this._previousStartingPointerTime>B.DoubleClickDelay&&!this._doubleClickOccured||Q!==this._previousButtonPressed)&&(this._doubleClickOccured=!1,X.singleClick=!0,X.ignore=!1,this._delayedClicks[Q])){const X=this._delayedClicks[Q].evt,C=P.b.POINTERTAP,l=new P.i(C,X,this._currentPickResult);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(C)&&h.onPointerObservable.notifyObservers(l,C),this._delayedClicks[Q]=null}},this._initClickEvent=(Q,X,C,l)=>{const h=new E;this._currentPickResult=null;let M=null,f=Q.hasSpecificMask(P.b.POINTERPICK)||X.hasSpecificMask(P.b.POINTERPICK)||Q.hasSpecificMask(P.b.POINTERTAP)||X.hasSpecificMask(P.b.POINTERTAP)||Q.hasSpecificMask(P.b.POINTERDOUBLETAP)||X.hasSpecificMask(P.b.POINTERDOUBLETAP);!f&&j&&(M=this._initActionManager(M,h),M&&(f=M.hasPickTriggers));let O=!1;if(f=f&&!this._isMultiTouchGesture,f){const f=C.button;if(h.hasSwiped=this._isPointerSwiping(),!h.hasSwiped){let U=!B.ExclusiveDoubleClickMode;if(U||(U=!Q.hasSpecificMask(P.b.POINTERDOUBLETAP)&&!X.hasSpecificMask(P.b.POINTERDOUBLETAP),U&&!j.HasSpecificTrigger(6)&&(M=this._initActionManager(M,h),M&&(U=!M.hasSpecificTrigger(6)))),U)(Date.now()-this._previousStartingPointerTime>B.DoubleClickDelay||f!==this._previousButtonPressed)&&(h.singleClick=!0,l(h,this._currentPickResult),O=!0);else{const Q={evt:C,clickInfo:h,timeoutId:window.setTimeout(this._delayedSimpleClick.bind(this,f,h,l),B.DoubleClickDelay)};this._delayedClicks[f]=Q}let L=Q.hasSpecificMask(P.b.POINTERDOUBLETAP)||X.hasSpecificMask(P.b.POINTERDOUBLETAP);if(!L&&j.HasSpecificTrigger(6)&&(M=this._initActionManager(M,h),M&&(L=M.hasSpecificTrigger(6))),L)if(f===this._previousButtonPressed&&Date.now()-this._previousStartingPointerTime<B.DoubleClickDelay&&!this._doubleClickOccured){if(h.hasSwiped||this._isPointerSwiping())if(this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=f,B.ExclusiveDoubleClickMode){var m;if(this._delayedClicks[f])clearTimeout(null===(m=this._delayedClicks[f])||void 0===m?void 0:m.timeoutId),this._delayedClicks[f]=null;l(h,this._previousPickResult)}else l(h,this._currentPickResult);else{var W;if(this._previousStartingPointerTime=0,this._doubleClickOccured=!0,h.doubleClick=!0,h.ignore=!1,B.ExclusiveDoubleClickMode&&this._delayedClicks[f])clearTimeout(null===(W=this._delayedClicks[f])||void 0===W?void 0:W.timeoutId),this._delayedClicks[f]=null;l(h,this._currentPickResult)}O=!0}else this._doubleClickOccured=!1,this._previousStartingPointerTime=this._startingPointerTime,this._previousStartingPointerPosition.x=this._startingPointerPosition.x,this._previousStartingPointerPosition.y=this._startingPointerPosition.y,this._previousButtonPressed=f}}O||l(h,this._currentPickResult)},this._onPointerMove=Q=>{if(this._updatePointerPosition(Q),this._isSwiping||-1===this._swipeButtonPressed||(this._isSwiping=Math.abs(this._startingPointerPosition.x-this._pointerX)>B.DragMovementThreshold||Math.abs(this._startingPointerPosition.y-this._pointerY)>B.DragMovementThreshold),M.isPointerLock&&M._verifyPointerLock(),this._checkPrePointerObservable(null,Q,Q.inputIndex>=Z.MouseWheelX&&Q.inputIndex<=Z.MouseWheelZ?P.b.POINTERWHEEL:P.b.POINTERMOVE))return;if(!h.cameraToUseForPointers&&!h.activeCamera)return;if(h.Dl)return void this._processPointerMove(new w.d,Q);h.pointerMovePredicate||(h.pointerMovePredicate=Q=>Q.gf&&Q.isVisible&&Q.isReady()&&Q.isEnabled()&&(Q.enablePointerMoveEvents||h.constantlyUpdateMeshUnderPointer||null!==Q._getActionManagerForTrigger())&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&Q.layerMask)));const X=h._registeredActions>0||h.constantlyUpdateMeshUnderPointer?this._pickMove(Q):null;this._processPointerMove(X,Q)},this._onPointerDown=Q=>{const X=this._activePointerIds.indexOf(-1);if(-1===X?this._activePointerIds.push(Q.pointerId):this._activePointerIds[X]=Q.pointerId,this._activePointerIdsCount++,this._pickedDownMesh=null,this._meshPickProceed=!1,B.ExclusiveDoubleClickMode)for(let l=0;l<this._delayedClicks.length;l++)if(this._delayedClicks[l])if(Q.button===l){var C;clearTimeout(null===(C=this._delayedClicks[l])||void 0===C?void 0:C.timeoutId)}else{const Q=this._delayedClicks[l].clickInfo;this._doubleClickOccured=!1,Q.singleClick=!0,Q.ignore=!1;const X=this._delayedClicks[l].evt,C=P.b.POINTERTAP,M=new P.i(C,X,this._currentPickResult);h.onPointerObservable.hasObservers()&&h.onPointerObservable.hasSpecificMask(C)&&h.onPointerObservable.notifyObservers(M,C),this._delayedClicks[l]=null}if(this._updatePointerPosition(Q),-1===this._swipeButtonPressed&&(this._swipeButtonPressed=Q.button),h.preventDefaultOnPointerDown&&l&&(Q.preventDefault(),l.focus()),this._startingPointerPosition.x=this._pointerX,this._startingPointerPosition.y=this._pointerY,this._startingPointerTime=Date.now(),this._checkPrePointerObservable(null,Q,P.b.POINTERDOWN))return;if(!h.cameraToUseForPointers&&!h.activeCamera)return;let M;this._pointerCaptures[Q.pointerId]=!0,h.pointerDownPredicate||(h.pointerDownPredicate=Q=>Q.gf&&Q.isVisible&&Q.isReady()&&Q.isEnabled()&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&Q.layerMask))),this._pickedDownMesh=null,M=h.skipPointerDownPicking||0===h._registeredActions&&!this._checkForPicking()&&!h.onPointerDown?new w.d:h.Md(this._unTranslatedPointerX,this._unTranslatedPointerY,h.pointerDownPredicate,h.pointerDownFastCheck,h.cameraToUseForPointers,h.pointerDownTrianglePredicate),this._processPointerDown(M,Q)},this._onPointerUp=Q=>{const X=this._activePointerIds.indexOf(Q.pointerId);-1!==X&&(this._activePointerIds[X]=-1,this._activePointerIdsCount--,this._pickedUpMesh=null,this._meshPickProceed=!1,this._updatePointerPosition(Q),h.preventDefaultOnPointerUp&&l&&(Q.preventDefault(),l.focus()),this._initClickEvent(h.onPrePointerObservable,h.onPointerObservable,Q,((X,C)=>{if(h.onPrePointerObservable.hasObservers()&&(this._skipPointerTap=!1,!X.ignore)){if(this._checkPrePointerObservable(null,Q,P.b.POINTERUP))return this._swipeButtonPressed===Q.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1),void(0===Q.buttons&&(this._pointerCaptures[Q.pointerId]=!1));X.hasSwiped||(X.singleClick&&h.onPrePointerObservable.hasSpecificMask(P.b.POINTERTAP)&&this._checkPrePointerObservable(null,Q,P.b.POINTERTAP)&&(this._skipPointerTap=!0),X.doubleClick&&h.onPrePointerObservable.hasSpecificMask(P.b.POINTERDOUBLETAP)&&this._checkPrePointerObservable(null,Q,P.b.POINTERDOUBLETAP)&&(this._skipPointerTap=!0))}this._pointerCaptures[Q.pointerId]?(0===Q.buttons&&(this._pointerCaptures[Q.pointerId]=!1),(h.cameraToUseForPointers||h.activeCamera)&&(h.pointerUpPredicate||(h.pointerUpPredicate=Q=>Q.gf&&Q.isVisible&&Q.isReady()&&Q.isEnabled()&&(!h.cameraToUseForPointers||0!==(h.cameraToUseForPointers.layerMask&Q.layerMask))),!this._meshPickProceed&&(j&&j.HasTriggers||this._checkForPicking()||h.onPointerUp)&&this._initActionManager(null,X),C||(C=this._currentPickResult),this._processPointerUp(C,Q,X),this._previousPickResult=this._currentPickResult,this._swipeButtonPressed===Q.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1))):this._swipeButtonPressed===Q.button&&(this._isSwiping=!1,this._swipeButtonPressed=-1)})))},this._onKeyDown=Q=>{const X=H.d.KEYDOWN;if(h.onPreKeyboardObservable.hasObservers()){const C=new H.f(X,Q);if(h.onPreKeyboardObservable.notifyObservers(C,X),C.skipOnKeyboardObservable)return}if(h.onKeyboardObservable.hasObservers()){const C=new H.i(X,Q);h.onKeyboardObservable.notifyObservers(C,X)}h.actionManager&&h.actionManager.processTrigger(14,i.CreateNewFromScene(h,Q))},this._onKeyUp=Q=>{const X=H.d.KEYUP;if(h.onPreKeyboardObservable.hasObservers()){const C=new H.f(X,Q);if(h.onPreKeyboardObservable.notifyObservers(C,X),C.skipOnKeyboardObservable)return}if(h.onKeyboardObservable.hasObservers()){const C=new H.i(X,Q);h.onKeyboardObservable.notifyObservers(C,X)}h.actionManager&&h.actionManager.processTrigger(15,i.CreateNewFromScene(h,Q))},this._deviceSourceManager.onDeviceConnectedObservable.add((l=>{l.deviceType===v.Mouse?l.onInputChangedObservable.add((h=>{this._originMouseEvent=h,h.inputIndex===Z.LeftClick||h.inputIndex===Z.MiddleClick||h.inputIndex===Z.RightClick||h.inputIndex===Z.BrowserBack||h.inputIndex===Z.BrowserForward?X&&1===l.getInput(h.inputIndex)?this._onPointerDown(h):Q&&0===l.getInput(h.inputIndex)&&this._onPointerUp(h):C&&(h.inputIndex===Z.Move?this._onPointerMove(h):h.inputIndex!==Z.MouseWheelX&&h.inputIndex!==Z.MouseWheelY&&h.inputIndex!==Z.MouseWheelZ||this._onPointerMove(h))})):l.deviceType===v.Touch?l.onInputChangedObservable.add((h=>{h.inputIndex===Z.LeftClick&&(X&&1===l.getInput(h.inputIndex)?(this._onPointerDown(h),this._activePointerIdsCount>1&&(this._isMultiTouchGesture=!0)):Q&&0===l.getInput(h.inputIndex)&&(this._onPointerUp(h),0===this._activePointerIdsCount&&(this._isMultiTouchGesture=!1))),C&&h.inputIndex===Z.Move&&this._onPointerMove(h)})):l.deviceType===v.Keyboard&&l.onInputChangedObservable.add((Q=>{"keydown"===Q.type?this._onKeyDown(Q):"keyup"===Q.type&&this._onKeyUp(Q)}))})),this._alreadyAttached=!0}Tj(){this._alreadyAttached&&(this._deviceSourceManager.dispose(),this._deviceSourceManager=null,this._alreadyAttachedTo&&!this._scene.doNotHandleCursors&&(this._alreadyAttachedTo.style.cursor=this._scene.defaultCursor),this._alreadyAttached=!1,this._alreadyAttachedTo=null)}setPointerOverMesh(Q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,C=arguments.length>2?arguments[2]:void 0,l=arguments.length>3?arguments[3]:void 0;if(this._meshUnderPointerId[X]===Q&&(!Q||!Q._internalAbstractMeshDataInfo._pointerOverDisableMeshTesting))return;const h=this._meshUnderPointerId[X];let M;h&&(M=h._getActionManagerForTrigger(10),M&&M.processTrigger(10,new i(h,this._pointerX,this._pointerY,Q,l,{pointerId:X}))),Q?(this._meshUnderPointerId[X]=Q,this._pointerOverMesh=Q,M=Q._getActionManagerForTrigger(9),M&&M.processTrigger(9,new i(Q,this._pointerX,this._pointerY,Q,l,{pointerId:X,pickResult:C}))):(delete this._meshUnderPointerId[X],this._pointerOverMesh=null),this._scene.onMeshUnderPointerUpdatedObservable.hasObservers()&&this._scene.onMeshUnderPointerUpdatedObservable.notifyObservers({mesh:Q,pointerId:X})}getPointerOverMesh(){return this.meshUnderPointer}_invalidateMesh(Q){this._pointerOverMesh===Q&&(this._pointerOverMesh=null),this._pickedDownMesh===Q&&(this._pickedDownMesh=null),this._pickedUpMesh===Q&&(this._pickedUpMesh=null);for(const X in this._meshUnderPointerId)this._meshUnderPointerId[X]===Q&&delete this._meshUnderPointerId[X]}}B.DragMovementThreshold=10,B.LongPressDelay=500,B.DoubleClickDelay=300,B.ExclusiveDoubleClickMode=!1;var G=C(2505),b=C(702),p=C(711),I=C(2564),t=C(526),y=C(850),A=C(686);class D{constructor(){this.pointerDownFastCheck=!1,this.pointerUpFastCheck=!1,this.pointerMoveFastCheck=!1,this.Dl=!1,this.skipPointerDownPicking=!1,this.skipPointerUpPicking=!1}}var u,V=C(501),d=C(620);!function(Q){Q[Q.BackwardCompatible=0]="BackwardCompatible",Q[Q.Intermediate=1]="Intermediate",Q[Q.Aggressive=2]="Aggressive"}(u||(u={}));class QQ{static DefaultMaterialFactory(Q){throw(0,r.c)("fb")}static CollisionCoordinatorFactory(){throw(0,r.c)("DefaultCollisionCoordinator")}get clearColor(){return this._clearColor}set clearColor(Q){Q!==this._clearColor&&(this._clearColor=Q,this.onClearColorChangedObservable.notifyObservers(this._clearColor))}get imageProcessingConfiguration(){return this._imageProcessingConfiguration}get performancePriority(){return this._performancePriority}set performancePriority(Q){if(Q!==this._performancePriority){switch(this._performancePriority=Q,Q){case 0:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Dl=!1,this.xl=!0;break;case 1:this.skipFrustumClipping=!1,this._renderingManager.maintainStateBetweenFrames=!1,this.Dl=!0,this.xl=!1;break;case 2:this.skipFrustumClipping=!0,this._renderingManager.maintainStateBetweenFrames=!0,this.Dl=!0,this.xl=!1}this.onScenePerformancePriorityChangedObservable.notifyObservers(Q)}}set forceWireframe(Q){this._forceWireframe!==Q&&(this._forceWireframe=Q,this.markAllMaterialsAsDirty(16))}get forceWireframe(){return this._forceWireframe}set skipFrustumClipping(Q){this._skipFrustumClipping!==Q&&(this._skipFrustumClipping=Q)}get skipFrustumClipping(){return this._skipFrustumClipping}set forcePointsCloud(Q){this._forcePointsCloud!==Q&&(this._forcePointsCloud=Q,this.markAllMaterialsAsDirty(16))}get forcePointsCloud(){return this._forcePointsCloud}get environmentTexture(){return this._environmentTexture}set environmentTexture(Q){this._environmentTexture!==Q&&(this._environmentTexture=Q,this.onEnvironmentTextureChangedObservable.notifyObservers(Q),this.markAllMaterialsAsDirty(1))}getNodes(){let Q=[];Q=Q.concat(this.meshes),Q=Q.concat(this.lights),Q=Q.concat(this.cameras),Q=Q.concat(this.transformNodes);for(const X of this.skeletons)Q=Q.concat(X.bones);return Q}get animationPropertiesOverride(){return this._animationPropertiesOverride}set animationPropertiesOverride(Q){this._animationPropertiesOverride=Q}set onDispose(Q){this._onDisposeObserver&&this.bk.remove(this._onDisposeObserver),this._onDisposeObserver=this.bk.add(Q)}set beforeRender(Q){this._onBeforeRenderObserver&&this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),Q&&(this._onBeforeRenderObserver=this.onBeforeRenderObservable.add(Q))}set afterRender(Q){this._onAfterRenderObserver&&this.onAfterRenderObservable.remove(this._onAfterRenderObserver),Q&&(this._onAfterRenderObserver=this.onAfterRenderObservable.add(Q))}set beforeCameraRender(Q){this._onBeforeCameraRenderObserver&&this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=this.onBeforeCameraRenderObservable.add(Q)}set afterCameraRender(Q){this._onAfterCameraRenderObserver&&this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=this.onAfterCameraRenderObservable.add(Q)}get pointerDownPredicate(){return this._pointerPickingConfiguration.pointerDownPredicate}set pointerDownPredicate(Q){this._pointerPickingConfiguration.pointerDownPredicate=Q}get pointerUpPredicate(){return this._pointerPickingConfiguration.pointerUpPredicate}set pointerUpPredicate(Q){this._pointerPickingConfiguration.pointerUpPredicate=Q}get pointerMovePredicate(){return this._pointerPickingConfiguration.pointerMovePredicate}set pointerMovePredicate(Q){this._pointerPickingConfiguration.pointerMovePredicate=Q}get pointerDownFastCheck(){return this._pointerPickingConfiguration.pointerDownFastCheck}set pointerDownFastCheck(Q){this._pointerPickingConfiguration.pointerDownFastCheck=Q}get pointerUpFastCheck(){return this._pointerPickingConfiguration.pointerUpFastCheck}set pointerUpFastCheck(Q){this._pointerPickingConfiguration.pointerUpFastCheck=Q}get pointerMoveFastCheck(){return this._pointerPickingConfiguration.pointerMoveFastCheck}set pointerMoveFastCheck(Q){this._pointerPickingConfiguration.pointerMoveFastCheck=Q}get Dl(){return this._pointerPickingConfiguration.Dl}set Dl(Q){this._pointerPickingConfiguration.Dl=Q}get skipPointerDownPicking(){return this._pointerPickingConfiguration.skipPointerDownPicking}set skipPointerDownPicking(Q){this._pointerPickingConfiguration.skipPointerDownPicking=Q}get skipPointerUpPicking(){return this._pointerPickingConfiguration.skipPointerUpPicking}set skipPointerUpPicking(Q){this._pointerPickingConfiguration.skipPointerUpPicking=Q}get unTranslatedPointer(){return this._inputManager.unTranslatedPointer}static get DragMovementThreshold(){return B.DragMovementThreshold}static set DragMovementThreshold(Q){B.DragMovementThreshold=Q}static get LongPressDelay(){return B.LongPressDelay}static set LongPressDelay(Q){B.LongPressDelay=Q}static get DoubleClickDelay(){return B.DoubleClickDelay}static set DoubleClickDelay(Q){B.DoubleClickDelay=Q}static get ExclusiveDoubleClickMode(){return B.ExclusiveDoubleClickMode}static set ExclusiveDoubleClickMode(Q){B.ExclusiveDoubleClickMode=Q}bindEyePosition(Q){var X;let C=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vEyePosition",l=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const h=this._forcedViewPosition?this._forcedViewPosition:this._mirroredCameraPosition?this._mirroredCameraPosition:(null===(X=this.activeCamera)||void 0===X?void 0:X.globalPosition)??W.k.ZeroReadOnly,M=this.useRightHandedSystem===(null!=this._mirroredCameraPosition);return W.e.Vector4[0].set(h.x,h.y,h.z,M?-1:1),Q&&(l?Q.setFloat3(C,W.e.Vector4[0].x,W.e.Vector4[0].y,W.e.Vector4[0].z):Q.setVector4(C,W.e.Vector4[0])),W.e.Vector4[0]}finalizeSceneUbo(){const Q=this.getSceneUniformBuffer(),X=this.bindEyePosition(null);return Q.updateFloat4("vEyePosition",X.x,X.y,X.z,X.w),Q.update(),Q}set useRightHandedSystem(Q){this._useRightHandedSystem!==Q&&(this._useRightHandedSystem=Q,this.markAllMaterialsAsDirty(16))}get useRightHandedSystem(){return this._useRightHandedSystem}setStepId(Q){this._currentStepId=Q}getStepId(){return this._currentStepId}getInternalStep(){return this._currentInternalStep}set fogEnabled(Q){this._fogEnabled!==Q&&(this._fogEnabled=Q,this.markAllMaterialsAsDirty(16))}get fogEnabled(){return this._fogEnabled}set fogMode(Q){this._fogMode!==Q&&(this._fogMode=Q,this.markAllMaterialsAsDirty(16))}get fogMode(){return this._fogMode}get prePass(){return!!this.prePassRenderer&&this.prePassRenderer.defaultRT.enabled}set shadowsEnabled(Q){this._shadowsEnabled!==Q&&(this._shadowsEnabled=Q,this.markAllMaterialsAsDirty(2))}get shadowsEnabled(){return this._shadowsEnabled}set lightsEnabled(Q){this._lightsEnabled!==Q&&(this._lightsEnabled=Q,this.markAllMaterialsAsDirty(2))}get lightsEnabled(){return this._lightsEnabled}get activeCameras(){return this._activeCameras}set activeCameras(Q){this._unObserveActiveCameras&&(this._unObserveActiveCameras(),this._unObserveActiveCameras=null),Q&&(this._unObserveActiveCameras=(0,A.d)(Q,(()=>{this.onActiveCamerasChanged.notifyObservers(this)}))),this._activeCameras=Q}get activeCamera(){return this._activeCamera}set activeCamera(Q){Q!==this._activeCamera&&(this._activeCamera=Q,this.onActiveCameraChanged.notifyObservers(this))}get _hasDefaultMaterial(){return QQ.DefaultMaterialFactory!==QQ._OriginalDefaultMaterialFactory}get defaultMaterial(){return this.hl||(this.hl=QQ.DefaultMaterialFactory(this)),this.hl}set defaultMaterial(Q){this.hl=Q}set texturesEnabled(Q){this._texturesEnabled!==Q&&(this._texturesEnabled=Q,this.markAllMaterialsAsDirty(1))}get texturesEnabled(){return this._texturesEnabled}get frameGraph(){return this._frameGraph}set frameGraph(Q){if(this._frameGraph)return this._frameGraph=Q,void(Q||(this.customRenderFunction=this._currentCustomRenderFunction));this._frameGraph=Q,Q&&(this._currentCustomRenderFunction=this.customRenderFunction,this.customRenderFunction=this._renderWithFrameGraph,this.activeCamera=null)}set skeletonsEnabled(Q){this._skeletonsEnabled!==Q&&(this._skeletonsEnabled=Q,this.markAllMaterialsAsDirty(8))}get skeletonsEnabled(){return this._skeletonsEnabled}get collisionCoordinator(){return this._collisionCoordinator||(this._collisionCoordinator=QQ.CollisionCoordinatorFactory(),this._collisionCoordinator.init(this)),this._collisionCoordinator}get renderingManager(){return this._renderingManager}get frustumPlanes(){return this._frustumPlanes}_registerTransientComponents(){if(this._transientComponents.length>0){for(const Q of this._transientComponents)Q.register();this._transientComponents.length=0}}bb(Q){this._components.push(Q),this._transientComponents.push(Q);const X=Q;X.addFromContainer&&X.serialize&&this._serializableComponents.push(X)}_getComponent(Q){for(const X of this._components)if(X.name===Q)return X;return null}get uniqueId(){return this._uniqueId}constructor(Q,X){this._inputManager=new B(this),this.cameraToUseForPointers=null,this._isScene=!0,this._blockEntityCollection=!1,this.xl=!0,this.autoClearDepthAndStencil=!0,this._clearColor=new b.d(.2,.2,.3,1),this.onClearColorChangedObservable=new M.e,this.ambientColor=new b.b(0,0,0),this.environmentIntensity=1,this.iblIntensity=1,this._performancePriority=0,this.onScenePerformancePriorityChangedObservable=new M.e,this._forceWireframe=!1,this._skipFrustumClipping=!1,this._forcePointsCloud=!1,this.rootNodes=[],this.cameras=[],this.lights=[],this.meshes=[],this.skeletons=[],this.tk=[],this.animations=[],this.animationGroups=[],this.multiMaterials=[],this.materials=[],this.morphTargetManagers=[],this.geometries=[],this.transformNodes=[],this.actionManagers=[],this.textures=[],this._environmentTexture=null,this.postProcesses=[],this.effectLayers=[],this.fm=null,this.layers=[],this.lensFlareSystems=[],this.proceduralTextures=[],this.animationsEnabled=!0,this._animationPropertiesOverride=null,this.useConstantAnimationDeltaTime=!1,this.constantlyUpdateMeshUnderPointer=!1,this.hoverCursor="pointer",this.defaultCursor="",this.doNotHandleCursors=!1,this.preventDefaultOnPointerDown=!0,this.preventDefaultOnPointerUp=!0,this.metadata=null,this.reservedDataStore=null,this.disableOfflineSupportExceptionRules=[],this.bk=new M.e,this._onDisposeObserver=null,this.onBeforeRenderObservable=new M.e,this._onBeforeRenderObserver=null,this.onAfterRenderObservable=new M.e,this.onAfterRenderCameraObservable=new M.e,this._onAfterRenderObserver=null,this.onBeforeAnimationsObservable=new M.e,this.onAfterAnimationsObservable=new M.e,this.onBeforeDrawPhaseObservable=new M.e,this.onAfterDrawPhaseObservable=new M.e,this.onReadyObservable=new M.e,this.onBeforeCameraRenderObservable=new M.e,this._onBeforeCameraRenderObserver=null,this.onAfterCameraRenderObservable=new M.e,this._onAfterCameraRenderObserver=null,this.onBeforeActiveMeshesEvaluationObservable=new M.e,this.onAfterActiveMeshesEvaluationObservable=new M.e,this.onBeforeParticlesRenderingObservable=new M.e,this.onAfterParticlesRenderingObservable=new M.e,this.onDataLoadedObservable=new M.e,this.onNewCameraAddedObservable=new M.e,this.onCameraRemovedObservable=new M.e,this.onNewLightAddedObservable=new M.e,this.onLightRemovedObservable=new M.e,this.onNewGeometryAddedObservable=new M.e,this.onGeometryRemovedObservable=new M.e,this.onNewTransformNodeAddedObservable=new M.e,this.onTransformNodeRemovedObservable=new M.e,this.onNewMeshAddedObservable=new M.e,this.onMeshRemovedObservable=new M.e,this.onNewSkeletonAddedObservable=new M.e,this.onSkeletonRemovedObservable=new M.e,this.onNewMaterialAddedObservable=new M.e,this.onNewMultiMaterialAddedObservable=new M.e,this.onMaterialRemovedObservable=new M.e,this.onMultiMaterialRemovedObservable=new M.e,this.onNewTextureAddedObservable=new M.e,this.onTextureRemovedObservable=new M.e,this.onBeforeRenderTargetsRenderObservable=new M.e,this.onAfterRenderTargetsRenderObservable=new M.e,this.onBeforeStepObservable=new M.e,this.onAfterStepObservable=new M.e,this.onActiveCameraChanged=new M.e,this.onActiveCamerasChanged=new M.e,this.onBeforeRenderingGroupObservable=new M.e,this.onAfterRenderingGroupObservable=new M.e,this.onMeshImportedObservable=new M.e,this.onAnimationFileImportedObservable=new M.e,this.onEnvironmentTextureChangedObservable=new M.e,this.onMeshUnderPointerUpdatedObservable=new M.e,this._registeredForLateAnimationBindings=new f.c(256),this._pointerPickingConfiguration=new D,this.onPrePointerObservable=new M.e,this.onPointerObservable=new M.e,this.onPreKeyboardObservable=new M.e,this.onKeyboardObservable=new M.e,this._useRightHandedSystem=!1,this._timeAccumulator=0,this._currentStepId=0,this._currentInternalStep=0,this._fogEnabled=!0,this._fogMode=QQ.FOGMODE_NONE,this.fogColor=new b.b(.2,.2,.3),this.fogDensity=.1,this.fogStart=0,this.fogEnd=1e3,this.needsPreviousWorldMatrices=!1,this._shadowsEnabled=!0,this._lightsEnabled=!0,this._unObserveActiveCameras=null,this._texturesEnabled=!0,this._frameGraph=null,this.frameGraphs=[],this.physicsEnabled=!0,this.particlesEnabled=!0,this.spritesEnabled=!0,this._skeletonsEnabled=!0,this.lensFlaresEnabled=!0,this.collisionsEnabled=!0,this.gravity=new W.k(0,-9.807,0),this.postProcessesEnabled=!0,this.renderTargetsEnabled=!0,this.dumpNextRenderTargets=!1,this.customRenderTargets=[],this.importedMeshesFiles=[],this.probesEnabled=!0,this._meshesForIntersections=new f.c(256),this.proceduralTexturesEnabled=!0,this._totalVertices=new G.e,this._activeIndices=new G.e,this._activeParticles=new G.e,this._activeBones=new G.e,this._animationTime=0,this.animationTimeScale=1,this._renderId=0,this._frameId=0,this._executeWhenReadyTimeoutId=null,this._intermediateRendering=!1,this._defaultFrameBufferCleared=!1,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1,this._toBeDisposed=new Array(256),this._activeRequests=new Array,this._pendingData=[],this._isDisposed=!1,this.dispatchAllSubMeshesOfActiveMeshes=!1,this._activeMeshes=new f.f(256),this._processedMaterials=new f.f(256),this._renderTargets=new f.c(256),this._materialsRenderTargets=new f.c(256),this._activeParticleSystems=new f.f(256),this._activeSkeletons=new f.c(32),this._softwareSkinnedMeshes=new f.c(32),this._activeAnimatables=new Array,this._transformMatrix=W.b.Zero(),this.requireLightSorting=!1,this._components=[],this._serializableComponents=[],this._transientComponents=[],this._beforeCameraUpdateStage=s.d.Create(),this._beforeClearStage=s.d.Create(),this._beforeRenderTargetClearStage=s.d.Create(),this._gatherRenderTargetsStage=s.d.Create(),this._gatherActiveCameraRenderTargetsStage=s.d.Create(),this._isReadyForMeshStage=s.d.Create(),this._beforeEvaluateActiveMeshStage=s.d.Create(),this._evaluateSubMeshStage=s.d.Create(),this._preActiveMeshStage=s.d.Create(),this._cameraDrawRenderTargetStage=s.d.Create(),this._beforeCameraDrawStage=s.d.Create(),this._beforeRenderTargetDrawStage=s.d.Create(),this._beforeRenderingGroupDrawStage=s.d.Create(),this._beforeRenderingMeshStage=s.d.Create(),this._afterRenderingMeshStage=s.d.Create(),this._afterRenderingGroupDrawStage=s.d.Create(),this._afterCameraDrawStage=s.d.Create(),this._afterCameraPostProcessStage=s.d.Create(),this._afterRenderTargetDrawStage=s.d.Create(),this._afterRenderTargetPostProcessStage=s.d.Create(),this._afterRenderStage=s.d.Create(),this._pointerMoveStage=s.d.Create(),this._pointerDownStage=s.d.Create(),this._pointerUpStage=s.d.Create(),this._geometriesByUniqueId=null,this._uniqueId=0,this._defaultMeshCandidates={data:[],length:0},this._defaultSubMeshCandidates={data:[],length:0},this._preventFreeActiveMeshesAndRenderingGroups=!1,this._activeMeshesFrozen=!1,this._activeMeshesFrozenButKeepClipping=!1,this._skipEvaluateActiveMeshesCompletely=!1,this._useCurrentFrameBuffer=!1,this._allowPostProcessClearColor=!0,this.getDeterministicFrameTime=()=>this._engine.getTimeStep(),this._registeredActions=0,this._blockMaterialDirtyMechanism=!1,this._perfCollector=null,this.activeCameras=[],this._uniqueId=this.getUniqueId();const C={useGeometryUniqueIdsMap:!0,useMaterialMeshMap:!0,useClonedMeshMap:!0,virtual:!1,...X};Q=this._engine=Q||x.b.LastCreatedEngine,C.virtual?Q._virtualScenes.push(this):(x.b._LastCreatedScene=this,Q.scenes.push(this)),this._uid=null,this._renderingManager=new F.d(this),a.b&&(this.postProcessManager=new a.b(this)),(0,z.k)()&&this.attachControl(),this._createUbo(),U.d&&(this._imageProcessingConfiguration=new U.d),this.setDefaultCandidateProviders(),C.useGeometryUniqueIdsMap&&(this._geometriesByUniqueId={}),this.useMaterialMeshMap=C.useMaterialMeshMap,this.useClonedMeshMap=C.useClonedMeshMap,X&&X.virtual||Q.onNewSceneAddedObservable.notifyObservers(this)}getClassName(){return"Scene"}_getDefaultMeshCandidates(){return this._defaultMeshCandidates.data=this.meshes,this._defaultMeshCandidates.length=this.meshes.length,this._defaultMeshCandidates}_getDefaultSubMeshCandidates(Q){return this._defaultSubMeshCandidates.data=Q.hk,this._defaultSubMeshCandidates.length=Q.hk.length,this._defaultSubMeshCandidates}setDefaultCandidateProviders(){this.getActiveMeshCandidates=()=>this._getDefaultMeshCandidates(),this.getActiveSubMeshCandidates=Q=>this._getDefaultSubMeshCandidates(Q),this.getIntersectingSubMeshCandidates=(Q,X)=>this._getDefaultSubMeshCandidates(Q),this.getCollidingSubMeshCandidates=(Q,X)=>this._getDefaultSubMeshCandidates(Q)}get meshUnderPointer(){return this._inputManager.meshUnderPointer}get pointerX(){return this._inputManager.pointerX}set pointerX(Q){this._inputManager.pointerX=Q}get pointerY(){return this._inputManager.pointerY}set pointerY(Q){this._inputManager.pointerY=Q}getCachedMaterial(){return this._cachedMaterial}getCachedEffect(){return this._cachedEffect}getCachedVisibility(){return this._cachedVisibility}isCachedMaterialInvalid(Q,X){let C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this._cachedEffect!==X||this._cachedMaterial!==Q||this._cachedVisibility!==C}getEngine(){return this._engine}getTotalVertices(){return this._totalVertices.current}get totalVerticesPerfCounter(){return this._totalVertices}getActiveIndices(){return this._activeIndices.current}get totalActiveIndicesPerfCounter(){return this._activeIndices}getActiveParticles(){return this._activeParticles.current}get activeParticlesPerfCounter(){return this._activeParticles}getActiveBones(){return this._activeBones.current}get activeBonesPerfCounter(){return this._activeBones}getActiveMeshes(){return this._activeMeshes}getAnimationRatio(){return void 0!==this._animationRatio?this._animationRatio:1}getRenderId(){return this._renderId}getFrameId(){return this._frameId}incrementRenderId(){this._renderId++}_createUbo(){this.setSceneUniformBuffer(this.createSceneUniformBuffer())}simulatePointerMove(Q,X){return this._inputManager.simulatePointerMove(Q,X),this}simulatePointerDown(Q,X){return this._inputManager.simulatePointerDown(Q,X),this}simulatePointerUp(Q,X,C){return this._inputManager.simulatePointerUp(Q,X,C),this}isPointerCaptured(){let Q=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return this._inputManager.isPointerCaptured(Q)}attachControl(){let Q=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];this._inputManager.attachControl(Q,X,C)}Tj(){this._inputManager.Tj()}isReady(){var Q,X;let C,l=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this._isDisposed)return!1;const h=this.getEngine(),M=h.currentRenderPassId;h.currentRenderPassId=(null===(Q=this.activeCamera)||void 0===Q?void 0:Q.renderPassId)??M;let f=!0;for(this._pendingData.length>0&&(f=!1),null===(X=this.prePassRenderer)||void 0===X||X.update(),this.useOrderIndependentTransparency&&this.depthPeelingRenderer&&f&&(f=this.depthPeelingRenderer.isReady()),l&&(this._processedMaterials.reset(),this._materialsRenderTargets.reset()),C=0;C<this.meshes.length;C++){const Q=this.meshes[C];if(!Q.hk||0===Q.hk.length)continue;if(!Q.isReady(!0)){f=!1;continue}const X=Q.hasThinInstances||"InstancedMesh"===Q.getClassName()||"InstancedLinesMesh"===Q.getClassName()||h.getCaps().instancedArrays&&Q.instances.length>0;for(const C of this._isReadyForMeshStage)C.action(Q,X)||(f=!1);if(!l)continue;const M=Q.material||this.defaultMaterial;if(M)if(M._storeEffectOnSubMeshes)for(const C of Q.hk){const Q=C.Ha();Q&&Q.hasRenderTargetTextures&&null!=Q.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(Q)&&(this._processedMaterials.push(Q),this._materialsRenderTargets.concatWithNoDuplicate(Q.getRenderTargetTextures()))}else M.hasRenderTargetTextures&&null!=M.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(M)&&(this._processedMaterials.push(M),this._materialsRenderTargets.concatWithNoDuplicate(M.getRenderTargetTextures()))}if(l)for(C=0;C<this._materialsRenderTargets.length;++C){this._materialsRenderTargets.data[C].isReadyForRendering()||(f=!1)}for(C=0;C<this.geometries.length;C++){2===this.geometries[C].delayLoadState&&(f=!1)}if(this.activeCameras&&this.activeCameras.length>0)for(const O of this.activeCameras)O.isReady(!0)||(f=!1);else this.activeCamera&&(this.activeCamera.isReady(!0)||(f=!1));for(const O of this.tk)O.isReady()||(f=!1);if(this.layers)for(const O of this.layers)O.isReady()||(f=!1);if(this.effectLayers)for(const O of this.effectLayers)O.isLayerReady()||(f=!1);return h.areAllEffectsReady()||(f=!1),h.currentRenderPassId=M,f}resetCachedMaterial(){this._cachedMaterial=null,this._cachedEffect=null,this._cachedVisibility=null}registerBeforeRender(Q){this.onBeforeRenderObservable.add(Q)}unregisterBeforeRender(Q){this.onBeforeRenderObservable.removeCallback(Q)}registerAfterRender(Q){this.onAfterRenderObservable.add(Q)}unregisterAfterRender(Q){this.onAfterRenderObservable.removeCallback(Q)}_executeOnceBeforeRender(Q){const X=()=>{Q(),setTimeout((()=>{this.unregisterBeforeRender(X)}))};this.registerBeforeRender(X)}executeOnceBeforeRender(Q,X){void 0!==X?setTimeout((()=>{this._executeOnceBeforeRender(Q)}),X):this._executeOnceBeforeRender(Q)}addPendingData(Q){this._pendingData.push(Q)}removePendingData(Q){const X=this.isLoading,C=this._pendingData.indexOf(Q);-1!==C&&this._pendingData.splice(C,1),X&&!this.isLoading&&this.onDataLoadedObservable.notifyObservers(this)}getWaitingItemsCount(){return this._pendingData.length}get isLoading(){return this._pendingData.length>0}executeWhenReady(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.onReadyObservable.addOnce(Q),null===this._executeWhenReadyTimeoutId&&this._checkIsReady(X)}async whenReadyAsync(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return await new Promise((X=>{this.executeWhenReady((()=>{X()}),Q)}))}_checkIsReady(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this._registerTransientComponents(),this.isReady(Q)?(this.onReadyObservable.notifyObservers(this),this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):this._isDisposed?(this.onReadyObservable.clear(),void(this._executeWhenReadyTimeoutId=null)):void(this._executeWhenReadyTimeoutId=setTimeout((()=>{this.incrementRenderId(),this._checkIsReady(Q)}),100))}get animatables(){return this._activeAnimatables}resetLastAnimationTimeFrame(){this._animationTimeLast=h.c.Now}getViewMatrix(){return this._viewMatrix}getProjectionMatrix(){return this._projectionMatrix}getTransformMatrix(){return this._transformMatrix}setTransformMatrix(Q,X,C,l){C||l||!this._multiviewSceneUbo||(this._multiviewSceneUbo.dispose(),this._multiviewSceneUbo=null),this._viewUpdateFlag===Q.updateFlag&&this._projectionUpdateFlag===X.updateFlag||(this._viewUpdateFlag=Q.updateFlag,this._projectionUpdateFlag=X.updateFlag,this._viewMatrix=Q,this._projectionMatrix=X,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix),this._frustumPlanes?p.b.GetPlanesToRef(this._transformMatrix,this._frustumPlanes):this._frustumPlanes=p.b.GetPlanes(this._transformMatrix),this._multiviewSceneUbo&&this._multiviewSceneUbo.useUbo?this._updateMultiviewUbo(C,l):this._sceneUbo.useUbo&&(this._sceneUbo.jk("viewProjection",this._transformMatrix),this._sceneUbo.jk("view",this._viewMatrix),this._sceneUbo.jk("projection",this._projectionMatrix)))}getSceneUniformBuffer(){return this._multiviewSceneUbo?this._multiviewSceneUbo:this._sceneUbo}createSceneUniformBuffer(Q){const X=new L.b(this._engine,void 0,!1,Q??"ld");return X.addUniform("viewProjection",16),X.addUniform("view",16),X.addUniform("projection",16),X.addUniform("vEyePosition",4),X}setSceneUniformBuffer(Q){this._sceneUbo=Q,this._viewUpdateFlag=-1,this._projectionUpdateFlag=-1}getUniqueId(){return I.b.UniqueId}rk(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this._blockEntityCollection&&(this.meshes.push(Q),Q._resyncLightSources(),Q.parent||Q._addToSceneRootNodes(),l.i.SetImmediate((()=>{this.onNewMeshAddedObservable.notifyObservers(Q)})),X)){const X=Q.getChildMeshes();for(const Q of X)this.rk(Q)}}sk(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const C=this.meshes.indexOf(Q);if(-1!==C&&(this.meshes.splice(C,1),Q.parent||Q._removeFromSceneRootNodes()),this._inputManager._invalidateMesh(Q),this.onMeshRemovedObservable.notifyObservers(Q),X){const X=Q.getChildMeshes();for(const Q of X)this.sk(Q)}return C}addTransformNode(Q){this._blockEntityCollection||Q.va()===this&&-1!==Q._indexInSceneTransformNodesArray||(Q._indexInSceneTransformNodesArray=this.transformNodes.length,this.transformNodes.push(Q),Q.parent||Q._addToSceneRootNodes(),this.onNewTransformNodeAddedObservable.notifyObservers(Q))}removeTransformNode(Q){const X=Q._indexInSceneTransformNodesArray;if(-1!==X){if(X!==this.transformNodes.length-1){const Q=this.transformNodes[this.transformNodes.length-1];this.transformNodes[X]=Q,Q._indexInSceneTransformNodesArray=X}Q._indexInSceneTransformNodesArray=-1,this.transformNodes.pop(),Q.parent||Q._removeFromSceneRootNodes()}return this.onTransformNodeRemovedObservable.notifyObservers(Q),X}removeSkeleton(Q){const X=this.skeletons.indexOf(Q);return-1!==X&&(this.skeletons.splice(X,1),this.onSkeletonRemovedObservable.notifyObservers(Q),this._executeActiveContainerCleanup(this._activeSkeletons)),X}removeMorphTargetManager(Q){const X=this.morphTargetManagers.indexOf(Q);return-1!==X&&this.morphTargetManagers.splice(X,1),X}removeLight(Q){const X=this.lights.indexOf(Q);if(-1!==X){for(const X of this.meshes)X._removeLightSource(Q,!1);this.lights.splice(X,1),this.sortLightsByPriority(),Q.parent||Q._removeFromSceneRootNodes()}return this.onLightRemovedObservable.notifyObservers(Q),X}removeCamera(Q){const X=this.cameras.indexOf(Q);if(-1!==X&&(this.cameras.splice(X,1),Q.parent||Q._removeFromSceneRootNodes()),this.activeCameras){const X=this.activeCameras.indexOf(Q);-1!==X&&this.activeCameras.splice(X,1)}return this.activeCamera===Q&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),this.onCameraRemovedObservable.notifyObservers(Q),X}removeParticleSystem(Q){const X=this.tk.indexOf(Q);return-1!==X&&(this.tk.splice(X,1),this._executeActiveContainerCleanup(this._activeParticleSystems)),X}removeAnimation(Q){const X=this.animations.indexOf(Q);return-1!==X&&this.animations.splice(X,1),X}stopAnimation(Q,X,C){}removeAnimationGroup(Q){const X=this.animationGroups.indexOf(Q);return-1!==X&&this.animationGroups.splice(X,1),X}removeMultiMaterial(Q){const X=this.multiMaterials.indexOf(Q);return-1!==X&&this.multiMaterials.splice(X,1),this.onMultiMaterialRemovedObservable.notifyObservers(Q),X}removeMaterial(Q){const X=Q._indexInSceneMaterialArray;if(-1!==X&&X<this.materials.length){if(X!==this.materials.length-1){const Q=this.materials[this.materials.length-1];this.materials[X]=Q,Q._indexInSceneMaterialArray=X}Q._indexInSceneMaterialArray=-1,this.materials.pop()}return this.onMaterialRemovedObservable.notifyObservers(Q),X}removeActionManager(Q){const X=this.actionManagers.indexOf(Q);return-1!==X&&this.actionManagers.splice(X,1),X}removeTexture(Q){const X=this.textures.indexOf(Q);return-1!==X&&this.textures.splice(X,1),this.onTextureRemovedObservable.notifyObservers(Q),X}addLight(Q){if(!this._blockEntityCollection){this.lights.push(Q),this.sortLightsByPriority(),Q.parent||Q._addToSceneRootNodes();for(const X of this.meshes)-1===X.lightSources.indexOf(Q)&&(X.lightSources.push(Q),X._resyncLightSources());l.i.SetImmediate((()=>{this.onNewLightAddedObservable.notifyObservers(Q)}))}}sortLightsByPriority(){this.requireLightSorting&&this.lights.sort(y.c.CompareLightsPriority)}addCamera(Q){this._blockEntityCollection||(this.cameras.push(Q),l.i.SetImmediate((()=>{this.onNewCameraAddedObservable.notifyObservers(Q)})),Q.parent||Q._addToSceneRootNodes())}addSkeleton(Q){this._blockEntityCollection||(this.skeletons.push(Q),l.i.SetImmediate((()=>{this.onNewSkeletonAddedObservable.notifyObservers(Q)})))}addParticleSystem(Q){this._blockEntityCollection||this.tk.push(Q)}addAnimation(Q){this._blockEntityCollection||this.animations.push(Q)}addAnimationGroup(Q){this._blockEntityCollection||this.animationGroups.push(Q)}addMultiMaterial(Q){this._blockEntityCollection||(this.multiMaterials.push(Q),l.i.SetImmediate((()=>{this.onNewMultiMaterialAddedObservable.notifyObservers(Q)})))}addMaterial(Q){this._blockEntityCollection||Q.va()===this&&-1!==Q._indexInSceneMaterialArray||(Q._indexInSceneMaterialArray=this.materials.length,this.materials.push(Q),l.i.SetImmediate((()=>{this.onNewMaterialAddedObservable.notifyObservers(Q)})))}addMorphTargetManager(Q){this._blockEntityCollection||this.morphTargetManagers.push(Q)}addGeometry(Q){this._blockEntityCollection||(this._geometriesByUniqueId&&(this._geometriesByUniqueId[Q.uniqueId]=this.geometries.length),this.geometries.push(Q))}addActionManager(Q){this.actionManagers.push(Q)}addTexture(Q){this._blockEntityCollection||(this.textures.push(Q),this.onNewTextureAddedObservable.notifyObservers(Q))}switchActiveCamera(Q){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._engine.getInputElement()&&(this.activeCamera&&this.activeCamera.Tj(),this.activeCamera=Q,X&&Q.attachControl())}setActiveCameraById(Q){const X=this.getCameraById(Q);return X?(this.activeCamera=X,X):null}setActiveCameraByName(Q){const X=this.getCameraByName(Q);return X?(this.activeCamera=X,X):null}getAnimationGroupByName(Q){for(let X=0;X<this.animationGroups.length;X++)if(this.animationGroups[X].name===Q)return this.animationGroups[X];return null}_getMaterial(Q,X){for(let C=0;C<this.materials.length;C++){const Q=this.materials[C];if(X(Q))return Q}if(Q)for(let C=0;C<this.multiMaterials.length;C++){const Q=this.multiMaterials[C];if(X(Q))return Q}return null}getMaterialByUniqueID(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.getMaterialByUniqueId(Q,X)}getMaterialByUniqueId(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.uniqueId===Q))}getMaterialById(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.id===Q))}getMaterialByName(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this._getMaterial(X,(X=>X.name===Q))}getLastMaterialById(Q){let X=arguments.length>1&&void 0!==arguments[1]&&arguments[1];for(let C=this.materials.length-1;C>=0;C--)if(this.materials[C].id===Q)return this.materials[C];if(X)for(let C=this.multiMaterials.length-1;C>=0;C--)if(this.multiMaterials[C].id===Q)return this.multiMaterials[C];return null}getTextureByUniqueId(Q){for(let X=0;X<this.textures.length;X++)if(this.textures[X].uniqueId===Q)return this.textures[X];return null}getTextureByName(Q){for(let X=0;X<this.textures.length;X++)if(this.textures[X].name===Q)return this.textures[X];return null}getCameraById(Q){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].id===Q)return this.cameras[X];return null}getCameraByUniqueId(Q){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].uniqueId===Q)return this.cameras[X];return null}getCameraByName(Q){for(let X=0;X<this.cameras.length;X++)if(this.cameras[X].name===Q)return this.cameras[X];return null}getBoneById(Q){for(let X=0;X<this.skeletons.length;X++){const C=this.skeletons[X];for(let X=0;X<C.bones.length;X++)if(C.bones[X].id===Q)return C.bones[X]}return null}getBoneByName(Q){for(let X=0;X<this.skeletons.length;X++){const C=this.skeletons[X];for(let X=0;X<C.bones.length;X++)if(C.bones[X].name===Q)return C.bones[X]}return null}getLightByName(Q){for(let X=0;X<this.lights.length;X++)if(this.lights[X].name===Q)return this.lights[X];return null}getLightById(Q){for(let X=0;X<this.lights.length;X++)if(this.lights[X].id===Q)return this.lights[X];return null}getLightByUniqueId(Q){for(let X=0;X<this.lights.length;X++)if(this.lights[X].uniqueId===Q)return this.lights[X];return null}getParticleSystemById(Q){for(let X=0;X<this.tk.length;X++)if(this.tk[X].id===Q)return this.tk[X];return null}getGeometryById(Q){for(let X=0;X<this.geometries.length;X++)if(this.geometries[X].id===Q)return this.geometries[X];return null}_getGeometryByUniqueId(Q){if(this._geometriesByUniqueId){const X=this._geometriesByUniqueId[Q];if(void 0!==X)return this.geometries[X]}else for(let X=0;X<this.geometries.length;X++)if(this.geometries[X].uniqueId===Q)return this.geometries[X];return null}getFrameGraphByName(Q){for(let X=0;X<this.frameGraphs.length;X++)if(this.frameGraphs[X].name===Q)return this.frameGraphs[X];return null}pushGeometry(Q,X){return!(!X&&this._getGeometryByUniqueId(Q.uniqueId))&&(this.addGeometry(Q),l.i.SetImmediate((()=>{this.onNewGeometryAddedObservable.notifyObservers(Q)})),!0)}removeGeometry(Q){let X;if(this._geometriesByUniqueId){if(X=this._geometriesByUniqueId[Q.uniqueId],void 0===X)return!1}else if(X=this.geometries.indexOf(Q),X<0)return!1;if(X!==this.geometries.length-1){const Q=this.geometries[this.geometries.length-1];Q&&(this.geometries[X]=Q,this._geometriesByUniqueId&&(this._geometriesByUniqueId[Q.uniqueId]=X))}return this._geometriesByUniqueId&&(this._geometriesByUniqueId[Q.uniqueId]=void 0),this.geometries.pop(),this.onGeometryRemovedObservable.notifyObservers(Q),!0}getGeometries(){return this.geometries}getMeshById(Q){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].id===Q)return this.meshes[X];return null}getMeshesById(Q){return this.meshes.filter((function(X){return X.id===Q}))}getTransformNodeById(Q){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].id===Q)return this.transformNodes[X];return null}getTransformNodeByUniqueId(Q){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].uniqueId===Q)return this.transformNodes[X];return null}getTransformNodesById(Q){return this.transformNodes.filter((function(X){return X.id===Q}))}getMeshByUniqueId(Q){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].uniqueId===Q)return this.meshes[X];return null}getLastMeshById(Q){for(let X=this.meshes.length-1;X>=0;X--)if(this.meshes[X].id===Q)return this.meshes[X];return null}getLastTransformNodeById(Q){for(let X=this.transformNodes.length-1;X>=0;X--)if(this.transformNodes[X].id===Q)return this.transformNodes[X];return null}getLastEntryById(Q){let X;for(X=this.meshes.length-1;X>=0;X--)if(this.meshes[X].id===Q)return this.meshes[X];for(X=this.transformNodes.length-1;X>=0;X--)if(this.transformNodes[X].id===Q)return this.transformNodes[X];for(X=this.cameras.length-1;X>=0;X--)if(this.cameras[X].id===Q)return this.cameras[X];for(X=this.lights.length-1;X>=0;X--)if(this.lights[X].id===Q)return this.lights[X];return null}getNodeById(Q){const X=this.getMeshById(Q);if(X)return X;const C=this.getTransformNodeById(Q);if(C)return C;const l=this.getLightById(Q);if(l)return l;const h=this.getCameraById(Q);if(h)return h;const M=this.getBoneById(Q);return M||null}getNodeByName(Q){const X=this.getMeshByName(Q);if(X)return X;const C=this.getTransformNodeByName(Q);if(C)return C;const l=this.getLightByName(Q);if(l)return l;const h=this.getCameraByName(Q);if(h)return h;const M=this.getBoneByName(Q);return M||null}getMeshByName(Q){for(let X=0;X<this.meshes.length;X++)if(this.meshes[X].name===Q)return this.meshes[X];return null}getTransformNodeByName(Q){for(let X=0;X<this.transformNodes.length;X++)if(this.transformNodes[X].name===Q)return this.transformNodes[X];return null}getLastSkeletonById(Q){for(let X=this.skeletons.length-1;X>=0;X--)if(this.skeletons[X].id===Q)return this.skeletons[X];return null}getSkeletonByUniqueId(Q){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].uniqueId===Q)return this.skeletons[X];return null}getSkeletonById(Q){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].id===Q)return this.skeletons[X];return null}getSkeletonByName(Q){for(let X=0;X<this.skeletons.length;X++)if(this.skeletons[X].name===Q)return this.skeletons[X];return null}getMorphTargetManagerById(Q){for(let X=0;X<this.morphTargetManagers.length;X++)if(this.morphTargetManagers[X].uniqueId===Q)return this.morphTargetManagers[X];return null}getMorphTargetById(Q){for(let X=0;X<this.morphTargetManagers.length;++X){const C=this.morphTargetManagers[X];for(let X=0;X<C.numTargets;++X){const l=C.getTarget(X);if(l.id===Q)return l}}return null}getMorphTargetByName(Q){for(let X=0;X<this.morphTargetManagers.length;++X){const C=this.morphTargetManagers[X];for(let X=0;X<C.numTargets;++X){const l=C.getTarget(X);if(l.name===Q)return l}}return null}getPostProcessByName(Q){for(let X=0;X<this.postProcesses.length;++X){const C=this.postProcesses[X];if(C.name===Q)return C}return null}isActiveMesh(Q){return-1!==this._activeMeshes.indexOf(Q)}get uid(){return this._uid||(this._uid=l.i.RandomId()),this._uid}addExternalData(Q,X){return this._externalData||(this._externalData=new O),this._externalData.add(Q,X)}getExternalData(Q){return this._externalData?this._externalData.get(Q):null}getOrAddExternalDataWithFactory(Q,X){return this._externalData||(this._externalData=new O),this._externalData.getOrAddWithFactory(Q,X)}removeExternalData(Q){return this._externalData.remove(Q)}_evaluateSubMesh(Q,X,C,l){if(l||Q.isInFrustum(this._frustumPlanes)){for(const l of this._evaluateSubMeshStage)l.action(X,Q);const C=Q.Ha();null!==C&&void 0!==C&&(C.hasRenderTargetTextures&&null!=C.getRenderTargetTextures&&-1===this._processedMaterials.indexOf(C)&&(this._processedMaterials.push(C),this._materialsRenderTargets.concatWithNoDuplicate(C.getRenderTargetTextures())),this._renderingManager.dispatch(Q,X,C))}}freeProcessedMaterials(){this._processedMaterials.dispose()}get blockfreeActiveMeshesAndRenderingGroups(){return this._preventFreeActiveMeshesAndRenderingGroups}set blockfreeActiveMeshesAndRenderingGroups(Q){this._preventFreeActiveMeshesAndRenderingGroups!==Q&&(Q&&(this.freeActiveMeshes(),this.freeRenderingGroups()),this._preventFreeActiveMeshesAndRenderingGroups=Q)}freeActiveMeshes(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._activeMeshes.dispose(),this.activeCamera&&this.activeCamera._activeMeshes&&this.activeCamera._activeMeshes.dispose(),this.activeCameras))for(let Q=0;Q<this.activeCameras.length;Q++){const X=this.activeCameras[Q];X&&X._activeMeshes&&X._activeMeshes.dispose()}}freeRenderingGroups(){if(!this.blockfreeActiveMeshesAndRenderingGroups&&(this._renderingManager&&this._renderingManager.freeRenderingGroups(),this.textures))for(let Q=0;Q<this.textures.length;Q++){const X=this.textures[Q];X&&X.renderList&&X.freeRenderingGroups()}}_isInIntermediateRendering(){return this._intermediateRendering}freezeActiveMeshes(){let Q=arguments.length>0&&void 0!==arguments[0]&&arguments[0],X=arguments.length>1?arguments[1]:void 0,C=arguments.length>2?arguments[2]:void 0,l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],h=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return this.executeWhenReady((()=>{if(this.activeCamera){if(this._frustumPlanes||this.updateTransformMatrix(),this._evaluateActiveMeshes(),this._activeMeshesFrozen=!0,this._activeMeshesFrozenButKeepClipping=h,this._skipEvaluateActiveMeshesCompletely=Q,l)for(let Q=0;Q<this._activeMeshes.length;Q++)this._activeMeshes.data[Q]._freeze();X&&X()}else C&&C("No active camera found")})),this}unfreezeActiveMeshes(){for(let Q=0;Q<this.meshes.length;Q++){const X=this.meshes[Q];X._internalAbstractMeshDataInfo&&(X._internalAbstractMeshDataInfo._isActive=!1)}for(let Q=0;Q<this._activeMeshes.length;Q++)this._activeMeshes.data[Q]._unFreeze();return this._activeMeshesFrozen=!1,this}_executeActiveContainerCleanup(Q){(!this._engine.snapshotRendering||1!==this._engine.snapshotRenderingMode)&&this._activeMeshesFrozen&&this._activeMeshes.length||this.onBeforeRenderObservable.addOnce((()=>Q.dispose()))}_evaluateActiveMeshes(){if(this._engine.snapshotRendering&&1===this._engine.snapshotRenderingMode){var Q;if(this._activeMeshes.length>0)null===(Q=this.activeCamera)||void 0===Q||Q._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset();return}if(this._activeMeshesFrozen&&this._activeMeshes.length){if(!this._skipEvaluateActiveMeshesCompletely){const Q=this._activeMeshes.length;for(let X=0;X<Q;X++){this._activeMeshes.data[X].Vj()}}if(this._activeParticleSystems){const Q=this._activeParticleSystems.length;for(let X=0;X<Q;X++)this._activeParticleSystems.data[X].animate()}return void this._renderingManager.resetSprites()}if(!this.activeCamera)return;this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this),this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._materialsRenderTargets.reset();for(const l of this._beforeEvaluateActiveMeshStage)l.action();const X=this.getActiveMeshCandidates(),C=X.length;for(let l=0;l<C;l++){const Q=X.data[l];let C=Q._internalAbstractMeshDataInfo._currentLOD.get(this.activeCamera);if(C?C[1]=-1:(C=[Q,-1],Q._internalAbstractMeshDataInfo._currentLOD.set(this.activeCamera,C)),Q.isBlocked)continue;if(this._totalVertices.addCount(Q.getTotalVertices(),!1),!Q.isReady()||!Q.isEnabled()||Q._c.hasAZeroComponent)continue;Q.Vj(),Q.actionManager&&Q.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(Q);let h=this.customLODSelector?this.customLODSelector(Q,this.activeCamera):Q.getLOD(this.activeCamera);if(C[0]=h,C[1]=this._frameId,void 0!==h&&null!==h&&(h!==Q&&0!==h.billboardMode&&h.Vj(),Q._preActivate(),Q.isVisible&&Q.visibility>0&&0!==(Q.layerMask&this.activeCamera.layerMask)&&(this._skipFrustumClipping||Q.Ib||Q.isInFrustum(this._frustumPlanes)))){this._activeMeshes.push(Q),this.activeCamera._activeMeshes.push(Q),h!==Q&&h._activate(this._renderId,!1);for(const X of this._preActiveMeshStage)X.action(Q);Q._activate(this._renderId,!1)&&(Q.isAnInstance?Q._internalAbstractMeshDataInfo._actAsRegularMesh&&(h=Q):h._internalAbstractMeshDataInfo._onlyForInstances=!1,h._internalAbstractMeshDataInfo._isActive=!0,this._activeMesh(Q,h)),Q._postActivate()}}if(this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this),this.particlesEnabled){this.onBeforeParticlesRenderingObservable.notifyObservers(this);for(let Q=0;Q<this.tk.length;Q++){const X=this.tk[Q];if(!X.isStarted()||!X.j)continue;const C=X.j;C.position&&!C.isEnabled()||(this._activeParticleSystems.push(X),X.animate(),this._renderingManager.dispatchParticles(X))}this.onAfterParticlesRenderingObservable.notifyObservers(this)}}_prepareSkeleton(Q){this._skeletonsEnabled&&Q.skeleton&&(this._activeSkeletons.pushNoDuplicate(Q.skeleton)&&(Q.skeleton.prepare(),this._activeBones.addCount(Q.skeleton.bones.length,!1)),Q.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(Q)&&this.frameGraph&&Q.applySkeleton(Q.skeleton))}_activeMesh(Q,X){this._prepareSkeleton(X);let C=Q.hasInstances||Q.isAnInstance||this.dispatchAllSubMeshesOfActiveMeshes||this._skipFrustumClipping||X.Ib;if(X&&X.hk&&X.hk.length>0){const l=this.getActiveSubMeshCandidates(X),h=l.length;C=C||1===h;for(let M=0;M<h;M++){const h=l.data[M];this._evaluateSubMesh(h,X,Q,C)}}}updateTransformMatrix(Q){const X=this.activeCamera;if(X)if(X._renderingMultiview){const C=X._rigCameras[0],l=X._rigCameras[1];this.setTransformMatrix(C.getViewMatrix(),C.getProjectionMatrix(Q),l.getViewMatrix(),l.getProjectionMatrix(Q))}else this.setTransformMatrix(X.getViewMatrix(),X.getProjectionMatrix(Q))}_bindFrameBuffer(Q){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._useCurrentFrameBuffer||(Q&&Q._multiviewTexture?Q._multiviewTexture._bindFrameBuffer():Q&&Q.outputRenderTarget?Q.outputRenderTarget._bindFrameBuffer():this._engine._currentFrameBufferIsDefaultFrameBuffer()||this._engine.restoreDefaultFramebuffer()),X&&this._clearFrameBuffer(Q)}_clearFrameBuffer(Q){if(Q&&Q._multiviewTexture);else if(Q&&Q.outputRenderTarget&&!Q._renderingMultiview){const X=Q.outputRenderTarget;X.onClearObservable.hasObservers()?X.onClearObservable.notifyObservers(this._engine):X.skipInitialClear||Q.isRightCamera||(this.xl&&this._engine.clear(X.clearColor||this._clearColor,!X._cleared,!0,!0),X._cleared=!0)}else this._defaultFrameBufferCleared?this._engine.clear(null,!1,!0,!0):(this._defaultFrameBufferCleared=!0,this._clear())}_renderForCamera(Q,X){var C;let h=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(Q&&Q._skipRendering)return;const M=this._engine;if(this._activeCamera=Q,!this.activeCamera)throw new Error("Active camera not set");if(M.setViewport(this.activeCamera.viewport),this.resetCachedMaterial(),this._renderId++,!this.prePass&&h){let X=!0;Q._renderingMultiview&&Q.outputRenderTarget&&(X=Q.outputRenderTarget.skipInitialClear,this.xl&&(this._defaultFrameBufferCleared=!1,Q.outputRenderTarget.skipInitialClear=!1)),this._bindFrameBuffer(this._activeCamera),Q._renderingMultiview&&Q.outputRenderTarget&&(Q.outputRenderTarget.skipInitialClear=X)}this.updateTransformMatrix(),this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera),this._evaluateActiveMeshes();for(let l=0;l<this._softwareSkinnedMeshes.length;l++){const Q=this._softwareSkinnedMeshes.data[l];Q.applySkeleton(Q.skeleton)}this.onBeforeRenderTargetsRenderObservable.notifyObservers(this),this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets),Q.customRenderTargets&&Q.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(Q.customRenderTargets),X&&X.customRenderTargets&&X.customRenderTargets.length>0&&this._renderTargets.concatWithNoDuplicate(X.customRenderTargets),this.environmentTexture&&this.environmentTexture.isRenderTarget&&this._renderTargets.pushNoDuplicate(this.environmentTexture);for(const l of this._gatherActiveCameraRenderTargetsStage)l.action(this._renderTargets);let f=!1;if(this.renderTargetsEnabled){if(this._intermediateRendering=!0,this._renderTargets.length>0){l.i.StartPerformanceCounter("Render targets",this._renderTargets.length>0);for(let Q=0;Q<this._renderTargets.length;Q++){const X=this._renderTargets.data[Q];if(X._shouldRender()){this._renderId++;const Q=X.activeCamera&&X.activeCamera!==this.activeCamera;X.render(Q,this.dumpNextRenderTargets),f=!0}}l.i.EndPerformanceCounter("Render targets",this._renderTargets.length>0),this._renderId++}for(const Q of this._cameraDrawRenderTargetStage)f=Q.action(this.activeCamera)||f;this._intermediateRendering=!1}this._engine.currentRenderPassId=(null===(C=Q.outputRenderTarget)||void 0===C?void 0:C.renderPassId)??Q.renderPassId??0,f&&!this.prePass&&(this._bindFrameBuffer(this._activeCamera,!1),this.updateTransformMatrix()),this.onAfterRenderTargetsRenderObservable.notifyObservers(this),!this.postProcessManager||Q._multiviewTexture||this.prePass||this.postProcessManager._prepareFrame();for(const l of this._beforeCameraDrawStage)l.action(this.activeCamera);this.onBeforeDrawPhaseObservable.notifyObservers(this),M.snapshotRendering&&1===M.snapshotRenderingMode&&this.finalizeSceneUbo(),this._renderingManager.render(null,null,!0,!0),this.onAfterDrawPhaseObservable.notifyObservers(this);for(const l of this._afterCameraDrawStage)l.action(this.activeCamera);if(this.postProcessManager&&!Q._multiviewTexture){const X=Q.outputRenderTarget?Q.outputRenderTarget.renderTarget:void 0;this.postProcessManager._finalizeFrame(Q.isIntermediate,X)}for(const l of this._afterCameraPostProcessStage)l.action(this.activeCamera);this._renderTargets.reset(),this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera)}_processSubCameras(Q){let X=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===Q.cameraRigMode||Q._renderingMultiview)return Q._renderingMultiview&&!this._multiviewSceneUbo&&this._createMultiviewUbo(),this._renderForCamera(Q,void 0,X),void this.onAfterRenderCameraObservable.notifyObservers(Q);if(Q._useMultiviewToSingleView)this._renderMultiviewToSingleView(Q);else{this.onBeforeCameraRenderObservable.notifyObservers(Q);for(let X=0;X<Q._rigCameras.length;X++)this._renderForCamera(Q._rigCameras[X],Q)}this._activeCamera=Q,this.updateTransformMatrix(),this.onAfterRenderCameraObservable.notifyObservers(Q)}_checkIntersections(){for(let Q=0;Q<this._meshesForIntersections.length;Q++){const X=this._meshesForIntersections.data[Q];if(X.actionManager)for(let Q=0;X.actionManager&&Q<X.actionManager.actions.length;Q++){const C=X.actionManager.actions[Q];if(12===C.trigger||13===C.trigger){const Q=C.getTriggerParameter(),l=Q.mesh?Q.mesh:Q,h=l.intersectsMesh(X,Q.usePreciseIntersection),M=X._intersectionsInProgress.indexOf(l);h&&-1===M?12===C.trigger?(C._executeCurrent(i.CreateNew(X,void 0,l)),X._intersectionsInProgress.push(l)):13===C.trigger&&X._intersectionsInProgress.push(l):!h&&M>-1&&(13===C.trigger&&C._executeCurrent(i.CreateNew(X,void 0,l)),X.actionManager.hasSpecificTrigger(13,(Q=>{const X=Q.mesh?Q.mesh:Q;return l===X}))&&13!==C.trigger||X._intersectionsInProgress.splice(M,1))}}}}_advancePhysicsEngineStep(Q){}_animate(Q){}animate(){if(this._engine.isDeterministicLockStep()){let Q=Math.max(QQ.MinDeltaTime,Math.min(this._engine.getDeltaTime(),QQ.MaxDeltaTime))+this._timeAccumulator;const X=this._engine.getTimeStep(),C=1e3/X/1e3;let l=0;const h=this._engine.getLockstepMaxSteps();let M=Math.floor(Q/X);for(M=Math.min(M,h);Q>0&&l<M;)this.onBeforeStepObservable.notifyObservers(this),this._animationRatio=X*C,this._animate(X),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(X),this.onAfterStepObservable.notifyObservers(this),this._currentStepId++,l++,Q-=X;this._timeAccumulator=Q<0?0:Q}else{const Q=this.useConstantAnimationDeltaTime?16:Math.max(QQ.MinDeltaTime,Math.min(this._engine.getDeltaTime(),QQ.MaxDeltaTime));this._animationRatio=.06*Q,this._animate(),this.onAfterAnimationsObservable.notifyObservers(this),this.physicsEnabled&&this._advancePhysicsEngineStep(Q)}}_clear(){(this.autoClearDepthAndStencil||this.xl)&&this._engine.clear(this._clearColor,this.xl||this.forceWireframe||this.forcePointsCloud,this.autoClearDepthAndStencil,this.autoClearDepthAndStencil)}_checkCameraRenderTarget(Q){var X;if(null===Q||void 0===Q||!Q.outputRenderTarget||null!==Q&&void 0!==Q&&Q.isRigCamera||(Q.outputRenderTarget._cleared=!1),null!==Q&&void 0!==Q&&null!==(X=Q.rigCameras)&&void 0!==X&&X.length)for(let C=0;C<Q.rigCameras.length;++C){const X=Q.rigCameras[C].outputRenderTarget;X&&(X._cleared=!1)}}resetDrawCache(Q){if(this.meshes)for(const X of this.meshes)X.resetDrawCache(Q)}_renderWithFrameGraph(){var Q;let X=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.activeCamera=null,this._activeParticleSystems.reset(),this._activeSkeletons.reset(),X)for(const h of this.cameras)if(h.update(),0!==h.cameraRigMode)for(let Q=0;Q<h._rigCameras.length;Q++)h._rigCameras[Q].update();this.onBeforeRenderObservable.notifyObservers(this);for(const h of this._beforeClearStage)h.action();const C=this.getActiveMeshCandidates(),l=C.length;for(let h=0;h<l;h++){const Q=C.data[h];Q.isBlocked||(this._totalVertices.addCount(Q.getTotalVertices(),!1),Q.isReady()&&Q.isEnabled()&&!Q._c.hasAZeroComponent&&(Q.Vj(),Q.actionManager&&Q.actionManager.hasSpecificTriggers2(12,13)&&this._meshesForIntersections.pushNoDuplicate(Q)))}if(this.particlesEnabled)for(let h=0;h<this.tk.length;h++){const Q=this.tk[h];if(!Q.isStarted()||!Q.j)continue;const X=Q.j;X.position&&!X.isEnabled()||(this._activeParticleSystems.push(Q),Q.animate())}null===(Q=this.frameGraph)||void 0===Q||Q.execute()}_renderRenderTarget(Q,X){let C=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this._intermediateRendering=!0,Q._shouldRender()){if(this._renderId++,this.activeCamera=X,!this.activeCamera)throw new Error("Active camera not set");this._engine.setViewport(this.activeCamera.viewport),this.updateTransformMatrix(),Q.render(C,l)}this._intermediateRendering=!1}render(){var Q;let X=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],C=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.u){if(this.onReadyObservable.hasObservers()&&null===this._executeWhenReadyTimeoutId&&this._checkIsReady(),this._frameId++,this._defaultFrameBufferCleared=!1,this._checkCameraRenderTarget(this.activeCamera),null!==(Q=this.activeCameras)&&void 0!==Q&&Q.length)for(const Q of this.activeCameras)this._checkCameraRenderTarget(Q);this._registerTransientComponents(),this._activeParticles.fetchNewFrame(),this._totalVertices.fetchNewFrame(),this._activeIndices.fetchNewFrame(),this._activeBones.fetchNewFrame(),this._meshesForIntersections.reset(),this.resetCachedMaterial(),this.onBeforeAnimationsObservable.notifyObservers(this),this.actionManager&&this.actionManager.processTrigger(11),C||this.animate();for(const Q of this._beforeCameraUpdateStage)Q.action();if(X)if(this.activeCameras&&this.activeCameras.length>0)for(let Q=0;Q<this.activeCameras.length;Q++){const X=this.activeCameras[Q];if(X.update(),0!==X.cameraRigMode)for(let Q=0;Q<X._rigCameras.length;Q++)X._rigCameras[Q].update()}else if(this.activeCamera&&(this.activeCamera.update(),0!==this.activeCamera.cameraRigMode))for(let Q=0;Q<this.activeCamera._rigCameras.length;Q++)this.activeCamera._rigCameras[Q].update();if(this.customRenderFunction)this._renderId++,this._engine.currentRenderPassId=0,this.customRenderFunction(X,C);else{var h;this.onBeforeRenderObservable.notifyObservers(this),this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);const Q=null!==(h=this.activeCameras)&&void 0!==h&&h.length?this.activeCameras[0]:this.activeCamera;if(this.renderTargetsEnabled){l.i.StartPerformanceCounter("Custom render targets",this.customRenderTargets.length>0);for(let X=0;X<this.customRenderTargets.length;X++){const C=this.customRenderTargets[X],l=C.activeCamera||this.activeCamera;this._renderRenderTarget(C,l,Q!==l,this.dumpNextRenderTargets)}l.i.EndPerformanceCounter("Custom render targets",this.customRenderTargets.length>0),this._renderId++}this._engine.currentRenderPassId=(null===Q||void 0===Q?void 0:Q.renderPassId)??0,this.activeCamera=Q,this._activeCamera&&22!==this._activeCamera.cameraRigMode&&!this.prePass&&this._bindFrameBuffer(this._activeCamera,!1),this.onAfterRenderTargetsRenderObservable.notifyObservers(this);for(const X of this._beforeClearStage)X.action();this._clearFrameBuffer(this.activeCamera);for(const X of this._gatherRenderTargetsStage)X.action(this._renderTargets);if(this.activeCameras&&this.activeCameras.length>0)for(let X=0;X<this.activeCameras.length;X++)this._processSubCameras(this.activeCameras[X],X>0);else{if(!this.activeCamera)throw new Error("No camera defined");this._processSubCameras(this.activeCamera,!!this.activeCamera.outputRenderTarget)}}this._checkIntersections();for(const Q of this._afterRenderStage)Q.action();if(this.afterRender&&this.afterRender(),this.onAfterRenderObservable.notifyObservers(this),this._toBeDisposed.length){for(let Q=0;Q<this._toBeDisposed.length;Q++){const X=this._toBeDisposed[Q];X&&X.dispose()}this._toBeDisposed.length=0}this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1),this._activeBones.addCount(0,!0),this._activeIndices.addCount(0,!0),this._activeParticles.addCount(0,!0),this._engine.restoreDefaultFramebuffer()}}freezeMaterials(){for(let Q=0;Q<this.materials.length;Q++)this.materials[Q].freeze()}unfreezeMaterials(){for(let Q=0;Q<this.materials.length;Q++)this.materials[Q].unfreeze()}dispose(){if(this.u)return;if(this.beforeRender=null,this.afterRender=null,this.metadata=null,this.skeletons.length=0,this.morphTargetManagers.length=0,this._transientComponents.length=0,this._isReadyForMeshStage.clear(),this._beforeEvaluateActiveMeshStage.clear(),this._evaluateSubMeshStage.clear(),this._preActiveMeshStage.clear(),this._cameraDrawRenderTargetStage.clear(),this._beforeCameraDrawStage.clear(),this._beforeRenderTargetDrawStage.clear(),this._beforeRenderingGroupDrawStage.clear(),this._beforeRenderingMeshStage.clear(),this._afterRenderingMeshStage.clear(),this._afterRenderingGroupDrawStage.clear(),this._afterCameraDrawStage.clear(),this._afterRenderTargetDrawStage.clear(),this._afterRenderStage.clear(),this._beforeCameraUpdateStage.clear(),this._beforeClearStage.clear(),this._gatherRenderTargetsStage.clear(),this._gatherActiveCameraRenderTargetsStage.clear(),this._pointerMoveStage.clear(),this._pointerDownStage.clear(),this._pointerUpStage.clear(),this.importedMeshesFiles=[],this._activeAnimatables&&this.stopAllAnimations){for(const Q of this._activeAnimatables)Q.onAnimationEndObservable.clear(),Q.onAnimationEnd=null;this.stopAllAnimations()}this.resetCachedMaterial(),this.activeCamera&&(this.activeCamera._activeMeshes.dispose(),this.activeCamera=null),this.activeCameras=null,this._activeMeshes.dispose(),this._renderingManager.dispose(),this._processedMaterials.dispose(),this._activeParticleSystems.dispose(),this._activeSkeletons.dispose(),this._softwareSkinnedMeshes.dispose(),this._renderTargets.dispose(),this._materialsRenderTargets.dispose(),this._registeredForLateAnimationBindings.dispose(),this._meshesForIntersections.dispose(),this._toBeDisposed.length=0;const Q=this._activeRequests.slice();for(const h of Q)h.abort();this._activeRequests.length=0;try{this.bk.notifyObservers(this)}catch(l){V.c.Error("An error occurred while calling onDisposeObservable!",l)}this.Tj();if(this._engine.getInputElement())for(let h=0;h<this.cameras.length;h++)this.cameras[h].Tj();this._disposeList(this.animationGroups),this._disposeList(this.lights),this.hl&&this.hl.dispose(),this._disposeList(this.multiMaterials),this._disposeList(this.materials),this._disposeList(this.meshes,(Q=>Q.dispose(!0))),this._disposeList(this.transformNodes,(Q=>Q.dispose(!0)));const X=this.cameras;this._disposeList(X),this._disposeList(this.tk),this._disposeList(this.postProcesses),this._disposeList(this.textures),this._disposeList(this.morphTargetManagers),this._sceneUbo.dispose(),this._multiviewSceneUbo&&this._multiviewSceneUbo.dispose(),this.postProcessManager.dispose(),this._disposeList(this._components);let C=this._engine.scenes.indexOf(this);if(C>-1&&this._engine.scenes.splice(C,1),x.b._LastCreatedScene===this){x.b._LastCreatedScene=null;let Q=x.b.Instances.length-1;for(;Q>=0;){const X=x.b.Instances[Q];if(X.scenes.length>0){x.b._LastCreatedScene=X.scenes[this._engine.scenes.length-1];break}Q--}}C=this._engine._virtualScenes.indexOf(this),C>-1&&this._engine._virtualScenes.splice(C,1),this._engine.wipeCaches(!0),this.bk.clear(),this.onBeforeRenderObservable.clear(),this.onAfterRenderObservable.clear(),this.onBeforeRenderTargetsRenderObservable.clear(),this.onAfterRenderTargetsRenderObservable.clear(),this.onAfterStepObservable.clear(),this.onBeforeStepObservable.clear(),this.onBeforeActiveMeshesEvaluationObservable.clear(),this.onAfterActiveMeshesEvaluationObservable.clear(),this.onBeforeParticlesRenderingObservable.clear(),this.onAfterParticlesRenderingObservable.clear(),this.onBeforeDrawPhaseObservable.clear(),this.onAfterDrawPhaseObservable.clear(),this.onBeforeAnimationsObservable.clear(),this.onAfterAnimationsObservable.clear(),this.onDataLoadedObservable.clear(),this.onBeforeRenderingGroupObservable.clear(),this.onAfterRenderingGroupObservable.clear(),this.onMeshImportedObservable.clear(),this.onBeforeCameraRenderObservable.clear(),this.onAfterCameraRenderObservable.clear(),this.onAfterRenderCameraObservable.clear(),this.onReadyObservable.clear(),this.onNewCameraAddedObservable.clear(),this.onCameraRemovedObservable.clear(),this.onNewLightAddedObservable.clear(),this.onLightRemovedObservable.clear(),this.onNewGeometryAddedObservable.clear(),this.onGeometryRemovedObservable.clear(),this.onNewTransformNodeAddedObservable.clear(),this.onTransformNodeRemovedObservable.clear(),this.onNewMeshAddedObservable.clear(),this.onMeshRemovedObservable.clear(),this.onNewSkeletonAddedObservable.clear(),this.onSkeletonRemovedObservable.clear(),this.onNewMaterialAddedObservable.clear(),this.onNewMultiMaterialAddedObservable.clear(),this.onMaterialRemovedObservable.clear(),this.onMultiMaterialRemovedObservable.clear(),this.onNewTextureAddedObservable.clear(),this.onTextureRemovedObservable.clear(),this.onPrePointerObservable.clear(),this.onPointerObservable.clear(),this.onPreKeyboardObservable.clear(),this.onKeyboardObservable.clear(),this.onActiveCameraChanged.clear(),this.onScenePerformancePriorityChangedObservable.clear(),this.onClearColorChangedObservable.clear(),this.onEnvironmentTextureChangedObservable.clear(),this.onMeshUnderPointerUpdatedObservable.clear(),this._isDisposed=!0}_disposeList(Q,X){const C=Q.slice(0);X=X??(Q=>Q.dispose());for(const l of C)X(l);Q.length=0}get u(){return this._isDisposed}clearCachedVertexData(){for(let Q=0;Q<this.meshes.length;Q++){const X=this.meshes[Q].ik;X&&X.clearCachedData()}}cleanCachedTextureBuffer(){for(const Q of this.textures){Q._buffer&&(Q._buffer=null)}}getWorldExtends(Q){const X=new W.k(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),C=new W.k(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);Q=Q||(()=>!0);const l=this.meshes.filter(Q);for(const h of l){if(h.Vj(!0),!h.hk||0===h.hk.length||h.infiniteDistance)continue;const Q=h.getBoundingInfo(),l=Q.boundingBox.minimumWorld,M=Q.boundingBox.maximumWorld;W.k.CheckExtends(l,X,C),W.k.CheckExtends(M,X,C)}return{min:X,max:C}}createPickingRay(Q,X,C,l){throw(0,r.c)("Ray")}createPickingRayToRef(Q,X,C,l,h){throw(0,r.c)("Ray")}createPickingRayInCameraSpace(Q,X,C){throw(0,r.c)("Ray")}createPickingRayInCameraSpaceToRef(Q,X,C,l){throw(0,r.c)("Ray")}Md(Q,X,C,l,h,M){const f=(0,r.c)("Ray",!0);return f&&V.c.Warn(f),new w.d}pickWithBoundingInfo(Q,X,C,l,h){const M=(0,r.c)("Ray",!0);return M&&V.c.Warn(M),new w.d}pickWithRay(Q,X,C,l){throw(0,r.c)("Ray")}multiPick(Q,X,C,l,h){throw(0,r.c)("Ray")}multiPickWithRay(Q,X,C){throw(0,r.c)("Ray")}setPointerOverMesh(Q,X,C){this._inputManager.setPointerOverMesh(Q,X,C)}getPointerOverMesh(){return this._inputManager.getPointerOverMesh()}_rebuildGeometries(){for(const Q of this.geometries)Q._rebuild();for(const Q of this.meshes)Q._rebuild();this.postProcessManager&&this.postProcessManager._rebuild();for(const Q of this._components)Q.rebuild();for(const Q of this.tk)Q.rebuild();if(this.spriteManagers)for(const Q of this.spriteManagers)Q.rebuild()}_rebuildTextures(){for(const Q of this.textures)Q._rebuild(!0);this.markAllMaterialsAsDirty(1)}_getByTags(Q,X,C){if(void 0===X)return Q;const l=[];for(const h in Q){const M=Q[h];m.e&&m.e.MatchesQuery(M,X)&&(!C||C(M))&&l.push(M)}return l}getMeshesByTags(Q,X){return this._getByTags(this.meshes,Q,X)}getCamerasByTags(Q,X){return this._getByTags(this.cameras,Q,X)}getLightsByTags(Q,X){return this._getByTags(this.lights,Q,X)}getMaterialByTags(Q,X){return this._getByTags(this.materials,Q,X).concat(this._getByTags(this.multiMaterials,Q,X))}getTransformNodesByTags(Q,X){return this._getByTags(this.transformNodes,Q,X)}setRenderingOrder(Q){let X=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this._renderingManager.setRenderingOrder(Q,X,C,l)}setRenderingAutoClearDepthStencil(Q,X){let C=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];this._renderingManager.setRenderingAutoClearDepthStencil(Q,X,C,l)}getAutoClearDepthStencilSetup(Q){return this._renderingManager.getAutoClearDepthStencilSetup(Q)}_forceBlockMaterialDirtyMechanism(Q){this._blockMaterialDirtyMechanism=Q}get blockMaterialDirtyMechanism(){return this._blockMaterialDirtyMechanism}set blockMaterialDirtyMechanism(Q){this._blockMaterialDirtyMechanism!==Q&&(this._blockMaterialDirtyMechanism=Q,Q||this.markAllMaterialsAsDirty(127))}markAllMaterialsAsDirty(Q,X){if(!this._blockMaterialDirtyMechanism)for(const C of this.materials)X&&!X(C)||C.Uj(Q)}_loadFile(Q,X,C,l,h,M,f){const O=(0,t.o)(Q,X,C,l?this.offlineProvider:void 0,h,M,f);return this._activeRequests.push(O),O.onCompleteObservable.add((Q=>{this._activeRequests.splice(this._activeRequests.indexOf(Q),1)})),O}async _loadFileAsync(Q,X,C,l,h){return await new Promise(((M,f)=>{this._loadFile(Q,(Q=>{M(Q)}),X,C,l,((Q,X)=>{f(X)}),h)}))}_requestFile(Q,X,C,l,h,M,f){const O=(0,t.w)(Q,X,C,l?this.offlineProvider:void 0,h,M,f);return this._activeRequests.push(O),O.onCompleteObservable.add((Q=>{this._activeRequests.splice(this._activeRequests.indexOf(Q),1)})),O}async _requestFileAsync(Q,X,C,l,h){return await new Promise(((M,f)=>{this._requestFile(Q,(Q=>{M(Q)}),X,C,l,(Q=>{f(Q)}),h)}))}_readFile(Q,X,C,l,h){const M=(0,t.u)(Q,X,C,l,h);return this._activeRequests.push(M),M.onCompleteObservable.add((Q=>{this._activeRequests.splice(this._activeRequests.indexOf(Q),1)})),M}async _readFileAsync(Q,X,C){return await new Promise(((l,h)=>{this._readFile(Q,(Q=>{l(Q)}),X,C,(Q=>{h(Q)}))}))}getPerfCollector(){throw(0,r.c)("performanceViewerSceneExtension")}setActiveCameraByID(Q){return this.setActiveCameraById(Q)}getMaterialByID(Q){return this.getMaterialById(Q)}getLastMaterialByID(Q){return this.getLastMaterialById(Q)}getTextureByUniqueID(Q){return this.getTextureByUniqueId(Q)}getCameraByID(Q){return this.getCameraById(Q)}getCameraByUniqueID(Q){return this.getCameraByUniqueId(Q)}getBoneByID(Q){return this.getBoneById(Q)}getLightByID(Q){return this.getLightById(Q)}getLightByUniqueID(Q){return this.getLightByUniqueId(Q)}getParticleSystemByID(Q){return this.getParticleSystemById(Q)}getGeometryByID(Q){return this.getGeometryById(Q)}getMeshByID(Q){return this.getMeshById(Q)}getMeshByUniqueID(Q){return this.getMeshByUniqueId(Q)}getLastMeshByID(Q){return this.getLastMeshById(Q)}getMeshesByID(Q){return this.getMeshesById(Q)}getTransformNodeByID(Q){return this.getTransformNodeById(Q)}getTransformNodeByUniqueID(Q){return this.getTransformNodeByUniqueId(Q)}getTransformNodesByID(Q){return this.getTransformNodesById(Q)}getNodeByID(Q){return this.getNodeById(Q)}getLastEntryByID(Q){return this.getLastEntryById(Q)}getLastSkeletonByID(Q){return this.getLastSkeletonById(Q)}}QQ.FOGMODE_NONE=0,QQ.FOGMODE_EXP=1,QQ.FOGMODE_EXP2=2,QQ.FOGMODE_LINEAR=3,QQ.MinDeltaTime=1,QQ.MaxDeltaTime=1e3,QQ._OriginalDefaultMaterialFactory=QQ.DefaultMaterialFactory,(0,d.g)("BABYLON.Scene",QQ)}}]);